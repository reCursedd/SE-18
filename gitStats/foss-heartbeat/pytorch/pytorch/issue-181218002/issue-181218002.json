{"url": "https://api.github.com/repos/pytorch/pytorch/issues/104", "repository_url": "https://api.github.com/repos/pytorch/pytorch", "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/104/labels{/name}", "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/104/comments", "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/104/events", "html_url": "https://github.com/pytorch/pytorch/issues/104", "id": 181218002, "node_id": "MDU6SXNzdWUxODEyMTgwMDI=", "number": 104, "title": "Add logical AND/OR/NOT/XOR operations", "user": {"login": "fmassa", "id": 9110200, "node_id": "MDQ6VXNlcjkxMTAyMDA=", "avatar_url": "https://avatars2.githubusercontent.com/u/9110200?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fmassa", "html_url": "https://github.com/fmassa", "followers_url": "https://api.github.com/users/fmassa/followers", "following_url": "https://api.github.com/users/fmassa/following{/other_user}", "gists_url": "https://api.github.com/users/fmassa/gists{/gist_id}", "starred_url": "https://api.github.com/users/fmassa/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fmassa/subscriptions", "organizations_url": "https://api.github.com/users/fmassa/orgs", "repos_url": "https://api.github.com/users/fmassa/repos", "events_url": "https://api.github.com/users/fmassa/events{/privacy}", "received_events_url": "https://api.github.com/users/fmassa/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 424131849, "node_id": "MDU6TGFiZWw0MjQxMzE4NDk=", "url": "https://api.github.com/repos/pytorch/pytorch/labels/enhancement", "name": "enhancement", "color": "84b6eb", "default": true}, {"id": 443483881, "node_id": "MDU6TGFiZWw0NDM0ODM4ODE=", "url": "https://api.github.com/repos/pytorch/pytorch/labels/todo", "name": "todo", "color": "c2e0c6", "default": false}], "state": "closed", "locked": false, "assignee": {"login": "apaszke", "id": 4583066, "node_id": "MDQ6VXNlcjQ1ODMwNjY=", "avatar_url": "https://avatars3.githubusercontent.com/u/4583066?v=4", "gravatar_id": "", "url": "https://api.github.com/users/apaszke", "html_url": "https://github.com/apaszke", "followers_url": "https://api.github.com/users/apaszke/followers", "following_url": "https://api.github.com/users/apaszke/following{/other_user}", "gists_url": "https://api.github.com/users/apaszke/gists{/gist_id}", "starred_url": "https://api.github.com/users/apaszke/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/apaszke/subscriptions", "organizations_url": "https://api.github.com/users/apaszke/orgs", "repos_url": "https://api.github.com/users/apaszke/repos", "events_url": "https://api.github.com/users/apaszke/events{/privacy}", "received_events_url": "https://api.github.com/users/apaszke/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "apaszke", "id": 4583066, "node_id": "MDQ6VXNlcjQ1ODMwNjY=", "avatar_url": "https://avatars3.githubusercontent.com/u/4583066?v=4", "gravatar_id": "", "url": "https://api.github.com/users/apaszke", "html_url": "https://github.com/apaszke", "followers_url": "https://api.github.com/users/apaszke/followers", "following_url": "https://api.github.com/users/apaszke/following{/other_user}", "gists_url": "https://api.github.com/users/apaszke/gists{/gist_id}", "starred_url": "https://api.github.com/users/apaszke/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/apaszke/subscriptions", "organizations_url": "https://api.github.com/users/apaszke/orgs", "repos_url": "https://api.github.com/users/apaszke/repos", "events_url": "https://api.github.com/users/apaszke/events{/privacy}", "received_events_url": "https://api.github.com/users/apaszke/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 1, "created_at": "2016-10-05T17:32:59Z", "updated_at": "2016-12-28T19:22:01Z", "closed_at": "2016-12-28T19:22:01Z", "author_association": "MEMBER", "body_html": "<p>Not super important, but might be useful to have those logical operators in the core.</p>\n<p>As a workaround implementation, they can be simulated with current functions. For example</p>\n<div class=\"highlight highlight-source-lua\"><pre><span class=\"pl-c\"><span class=\"pl-c\">--</span> t1 and t2 are ByteTensors with 0 or 1 only</span>\n<span class=\"pl-k\">function</span> <span class=\"pl-en\">tensor_and</span>(<span class=\"pl-smi\">t1</span>, <span class=\"pl-smi\">t2</span>)\n  <span class=\"pl-k\">return</span> (t1 <span class=\"pl-k\">+</span> t2):<span class=\"pl-c1\">eq</span>(<span class=\"pl-c1\">2</span>)\n<span class=\"pl-k\">end</span></pre></div>", "body_text": "Not super important, but might be useful to have those logical operators in the core.\nAs a workaround implementation, they can be simulated with current functions. For example\n-- t1 and t2 are ByteTensors with 0 or 1 only\nfunction tensor_and(t1, t2)\n  return (t1 + t2):eq(2)\nend", "body": "Not super important, but might be useful to have those logical operators in the core.\n\nAs a workaround implementation, they can be simulated with current functions. For example\n\n``` lua\n-- t1 and t2 are ByteTensors with 0 or 1 only\nfunction tensor_and(t1, t2)\n  return (t1 + t2):eq(2)\nend\n```\n"}