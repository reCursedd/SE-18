{"url": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/173946305", "pull_request_review_id": 103218776, "id": 173946305, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE3Mzk0NjMwNQ==", "diff_hunk": "@@ -59,7 +60,72 @@ static InternedStrings & globalStrings() {\n   return s;\n }\n \n-const char * Symbol::toString() const {\n+Symbol Symbol::parseQualString(const std::string & s) {\n+  return Symbol(s);\n+\n+  /*\n+  size_t colon_pos = s.find(':');\n+  if (colon_pos == std::string::npos) {\n+    std::ostringstream ss;\n+    ss << \"Symbol: illegal unqualified string '\" << s << \"'; \"\n+       << \"all symbols must be qualified, e.g., 'ns::\" << s << \"'. \"\n+       << \"Valid namespaces are: \" << detail::valid_namespaces_str();\n+    throw std::runtime_error(ss.str());\n+  }\n+  if (colon_pos == 0) {\n+    std::ostringstream ss;\n+    ss << \"Symbol: illegal leading colon in '\" << s << \"'; \"\n+       << \"all symbols must have a non-empty namespace. \"\n+       << \"Valid namespaces are: \" << detail::valid_namespaces_str();\n+    throw std::runtime_error(ss.str());\n+  }\n+  // attr::x\n+  //     ^___ colon_pos\n+  //        ^___ s.size()\n+  if (colon_pos + 2 >= s.size()) {\n+    std::ostringstream ss;\n+    ss << \"Symbol: underlong string '\" << s << \"'; \"\n+       << \"namespace must be followed by double colon and a \"\n+       << \"non-empty string.\";\n+    throw std::runtime_error(ss.str());\n+  }\n+  if (s[colon_pos + 1] != ':') {\n+    std::ostringstream ss;\n+    ss << \"Symbol: invalid use of colons in '\" << s << \"'; \"\n+       << \"namespace must be followed by double colon, not a\"\n+       << \"single colon.\";\n+    throw std::runtime_error(ss.str());\n+  }\n+  auto ns = s.substr(0, colon_pos - 1);\n+  auto unqual_name = s.substr(colon_pos + 2);\n+  if (ns == \"unknown\") {\n+    // OK\n+  } else {\n+    std::ostringstream ss;\n+    ss << \"Symbol: invalid namespace in '\" << s << \"'. \"\n+       << \"Valid namespaces are: \" << detail::valid_namespaces_str();\n+    throw std::runtime_error(ss.str());\n+  }\n+\n+  return Symbol(unqual_name);\n+  */", "path": "torch/csrc/jit/interned_strings.cpp", "position": null, "original_position": 61, "commit_id": "a72c2efb1388164356af4fecf148a4d99a364542", "original_commit_id": "6d42138455a0af277ad68ef334a2d4a5dbd01a18", "user": {"login": "apaszke", "id": 4583066, "node_id": "MDQ6VXNlcjQ1ODMwNjY=", "avatar_url": "https://avatars3.githubusercontent.com/u/4583066?v=4", "gravatar_id": "", "url": "https://api.github.com/users/apaszke", "html_url": "https://github.com/apaszke", "followers_url": "https://api.github.com/users/apaszke/followers", "following_url": "https://api.github.com/users/apaszke/following{/other_user}", "gists_url": "https://api.github.com/users/apaszke/gists{/gist_id}", "starred_url": "https://api.github.com/users/apaszke/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/apaszke/subscriptions", "organizations_url": "https://api.github.com/users/apaszke/orgs", "repos_url": "https://api.github.com/users/apaszke/repos", "events_url": "https://api.github.com/users/apaszke/events{/privacy}", "received_events_url": "https://api.github.com/users/apaszke/received_events", "type": "User", "site_admin": false}, "body": "Can we at least get rid of commented out code before we merge it?", "created_at": "2018-03-12T21:05:13Z", "updated_at": "2018-11-23T15:40:39Z", "html_url": "https://github.com/pytorch/pytorch/pull/5715#discussion_r173946305", "pull_request_url": "https://api.github.com/repos/pytorch/pytorch/pulls/5715", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/173946305"}, "html": {"href": "https://github.com/pytorch/pytorch/pull/5715#discussion_r173946305"}, "pull_request": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/5715"}}, "body_html": "<p>Can we at least get rid of commented out code before we merge it?</p>", "body_text": "Can we at least get rid of commented out code before we merge it?"}