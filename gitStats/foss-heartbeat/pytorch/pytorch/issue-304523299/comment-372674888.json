{"url": "https://api.github.com/repos/pytorch/pytorch/issues/comments/372674888", "html_url": "https://github.com/pytorch/pytorch/pull/5715#issuecomment-372674888", "issue_url": "https://api.github.com/repos/pytorch/pytorch/issues/5715", "id": 372674888, "node_id": "MDEyOklzc3VlQ29tbWVudDM3MjY3NDg4OA==", "user": {"login": "ezyang", "id": 13564, "node_id": "MDQ6VXNlcjEzNTY0", "avatar_url": "https://avatars0.githubusercontent.com/u/13564?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ezyang", "html_url": "https://github.com/ezyang", "followers_url": "https://api.github.com/users/ezyang/followers", "following_url": "https://api.github.com/users/ezyang/following{/other_user}", "gists_url": "https://api.github.com/users/ezyang/gists{/gist_id}", "starred_url": "https://api.github.com/users/ezyang/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ezyang/subscriptions", "organizations_url": "https://api.github.com/users/ezyang/orgs", "repos_url": "https://api.github.com/users/ezyang/repos", "events_url": "https://api.github.com/users/ezyang/events{/privacy}", "received_events_url": "https://api.github.com/users/ezyang/received_events", "type": "User", "site_admin": false}, "created_at": "2018-03-13T14:00:31Z", "updated_at": "2018-03-13T14:01:00Z", "author_association": "CONTRIBUTOR", "body_html": "<blockquote>\n<p>how will you implement namespace checks quickly in this case? Do we want to have the int32_t be a value for the namespace concatenated with a value for the index within that namespace?</p>\n</blockquote>\n<p>Yes. So the layout will be: TUUUUUUU, where T is the tag byte, and U are the actual unique bytes. That gives us a measly 16777216 uniques per tag to work with.</p>", "body_text": "how will you implement namespace checks quickly in this case? Do we want to have the int32_t be a value for the namespace concatenated with a value for the index within that namespace?\n\nYes. So the layout will be: TUUUUUUU, where T is the tag byte, and U are the actual unique bytes. That gives us a measly 16777216 uniques per tag to work with.", "body": "> how will you implement namespace checks quickly in this case? Do we want to have the int32_t be a value for the namespace concatenated with a value for the index within that namespace?\r\n\r\nYes. So the layout will be: TUUUUUUU, where T is the tag byte, and U are the actual unique bytes. That gives us a measly 16777216 uniques per tag to work with."}