{"url": "https://api.github.com/repos/pytorch/pytorch/issues/1113", "repository_url": "https://api.github.com/repos/pytorch/pytorch", "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/1113/labels{/name}", "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/1113/comments", "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/1113/events", "html_url": "https://github.com/pytorch/pytorch/issues/1113", "id": 217201842, "node_id": "MDU6SXNzdWUyMTcyMDE4NDI=", "number": 1113, "title": "Possibly a bug: Why the default_collate in dataloader will change the type of the data?", "user": {"login": "fuzihaofzh", "id": 1419566, "node_id": "MDQ6VXNlcjE0MTk1NjY=", "avatar_url": "https://avatars3.githubusercontent.com/u/1419566?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fuzihaofzh", "html_url": "https://github.com/fuzihaofzh", "followers_url": "https://api.github.com/users/fuzihaofzh/followers", "following_url": "https://api.github.com/users/fuzihaofzh/following{/other_user}", "gists_url": "https://api.github.com/users/fuzihaofzh/gists{/gist_id}", "starred_url": "https://api.github.com/users/fuzihaofzh/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fuzihaofzh/subscriptions", "organizations_url": "https://api.github.com/users/fuzihaofzh/orgs", "repos_url": "https://api.github.com/users/fuzihaofzh/repos", "events_url": "https://api.github.com/users/fuzihaofzh/events{/privacy}", "received_events_url": "https://api.github.com/users/fuzihaofzh/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 424131847, "node_id": "MDU6TGFiZWw0MjQxMzE4NDc=", "url": "https://api.github.com/repos/pytorch/pytorch/labels/bug", "name": "bug", "color": "b60205", "default": true}, {"id": 443484050, "node_id": "MDU6TGFiZWw0NDM0ODQwNTA=", "url": "https://api.github.com/repos/pytorch/pytorch/labels/medium%20priority", "name": "medium priority", "color": "fbca04", "default": false}], "state": "closed", "locked": false, "assignee": {"login": "apaszke", "id": 4583066, "node_id": "MDQ6VXNlcjQ1ODMwNjY=", "avatar_url": "https://avatars3.githubusercontent.com/u/4583066?v=4", "gravatar_id": "", "url": "https://api.github.com/users/apaszke", "html_url": "https://github.com/apaszke", "followers_url": "https://api.github.com/users/apaszke/followers", "following_url": "https://api.github.com/users/apaszke/following{/other_user}", "gists_url": "https://api.github.com/users/apaszke/gists{/gist_id}", "starred_url": "https://api.github.com/users/apaszke/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/apaszke/subscriptions", "organizations_url": "https://api.github.com/users/apaszke/orgs", "repos_url": "https://api.github.com/users/apaszke/repos", "events_url": "https://api.github.com/users/apaszke/events{/privacy}", "received_events_url": "https://api.github.com/users/apaszke/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "apaszke", "id": 4583066, "node_id": "MDQ6VXNlcjQ1ODMwNjY=", "avatar_url": "https://avatars3.githubusercontent.com/u/4583066?v=4", "gravatar_id": "", "url": "https://api.github.com/users/apaszke", "html_url": "https://github.com/apaszke", "followers_url": "https://api.github.com/users/apaszke/followers", "following_url": "https://api.github.com/users/apaszke/following{/other_user}", "gists_url": "https://api.github.com/users/apaszke/gists{/gist_id}", "starred_url": "https://api.github.com/users/apaszke/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/apaszke/subscriptions", "organizations_url": "https://api.github.com/users/apaszke/orgs", "repos_url": "https://api.github.com/users/apaszke/repos", "events_url": "https://api.github.com/users/apaszke/events{/privacy}", "received_events_url": "https://api.github.com/users/apaszke/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 6, "created_at": "2017-03-27T10:28:00Z", "updated_at": "2017-04-11T21:55:46Z", "closed_at": "2017-04-11T21:55:46Z", "author_association": "NONE", "body_html": "<p>I have a float train data. When I send it into dataloader and get it with enumerate. I found the type of my data has been changed into torch.DoubleTensor. But I really need is my original type. I found this was caused in `torch/utils/data/dataloader.py' in the definition of the default_collate. Is this a bug? Or how could I make it keep my original datatype?</p>\n<pre><code>def default_collate(batch):\n    \"Puts each data field into a tensor with outer dimension batch size\"\n    if torch.is_tensor(batch[0]):\n        return torch.cat([t.unsqueeze(0) for t in batch], 0)\n    elif isinstance(batch[0], int):\n        return torch.LongTensor(batch)\n    elif isinstance(batch[0], float):\n        return torch.DoubleTensor(batch)\n    elif isinstance(batch[0], str):\n        return batch\n\n</code></pre>", "body_text": "I have a float train data. When I send it into dataloader and get it with enumerate. I found the type of my data has been changed into torch.DoubleTensor. But I really need is my original type. I found this was caused in `torch/utils/data/dataloader.py' in the definition of the default_collate. Is this a bug? Or how could I make it keep my original datatype?\ndef default_collate(batch):\n    \"Puts each data field into a tensor with outer dimension batch size\"\n    if torch.is_tensor(batch[0]):\n        return torch.cat([t.unsqueeze(0) for t in batch], 0)\n    elif isinstance(batch[0], int):\n        return torch.LongTensor(batch)\n    elif isinstance(batch[0], float):\n        return torch.DoubleTensor(batch)\n    elif isinstance(batch[0], str):\n        return batch", "body": "I have a float train data. When I send it into dataloader and get it with enumerate. I found the type of my data has been changed into torch.DoubleTensor. But I really need is my original type. I found this was caused in `torch/utils/data/dataloader.py' in the definition of the default_collate. Is this a bug? Or how could I make it keep my original datatype?\r\n\r\n```\r\ndef default_collate(batch):\r\n    \"Puts each data field into a tensor with outer dimension batch size\"\r\n    if torch.is_tensor(batch[0]):\r\n        return torch.cat([t.unsqueeze(0) for t in batch], 0)\r\n    elif isinstance(batch[0], int):\r\n        return torch.LongTensor(batch)\r\n    elif isinstance(batch[0], float):\r\n        return torch.DoubleTensor(batch)\r\n    elif isinstance(batch[0], str):\r\n        return batch\r\n\r\n```\r\n"}