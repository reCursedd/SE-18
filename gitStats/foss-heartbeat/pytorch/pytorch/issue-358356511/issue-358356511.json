{"url": "https://api.github.com/repos/pytorch/pytorch/issues/11433", "repository_url": "https://api.github.com/repos/pytorch/pytorch", "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/11433/labels{/name}", "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/11433/comments", "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/11433/events", "html_url": "https://github.com/pytorch/pytorch/issues/11433", "id": 358356511, "node_id": "MDU6SXNzdWUzNTgzNTY1MTE=", "number": 11433, "title": "Assorted issues in Caffe2's Metal ops", "user": {"login": "ethereon", "id": 337985, "node_id": "MDQ6VXNlcjMzNzk4NQ==", "avatar_url": "https://avatars2.githubusercontent.com/u/337985?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ethereon", "html_url": "https://github.com/ethereon", "followers_url": "https://api.github.com/users/ethereon/followers", "following_url": "https://api.github.com/users/ethereon/following{/other_user}", "gists_url": "https://api.github.com/users/ethereon/gists{/gist_id}", "starred_url": "https://api.github.com/users/ethereon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ethereon/subscriptions", "organizations_url": "https://api.github.com/users/ethereon/orgs", "repos_url": "https://api.github.com/users/ethereon/repos", "events_url": "https://api.github.com/users/ethereon/events{/privacy}", "received_events_url": "https://api.github.com/users/ethereon/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 890282107, "node_id": "MDU6TGFiZWw4OTAyODIxMDc=", "url": "https://api.github.com/repos/pytorch/pytorch/labels/caffe2", "name": "caffe2", "color": "210aa8", "default": false}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2018-09-09T07:19:18Z", "updated_at": "2018-09-10T17:24:59Z", "closed_at": null, "author_association": "NONE", "body_html": "<p>I've been playing around with Caffe2's Metal ops in the iOS contrib module on macOS and have noticed a few issues. I'm not certain if some of these can be attributed to the differences in macOS vs iOS; however, it's probably worth a quick review by someone familiar with it.</p>\n<p><strong>1. Potentially incorrect texture write in concat op</strong></p>\n<p>For the texture2d write call here: <a href=\"https://github.com/pytorch/pytorch/blob/v0.4.1/caffe2/mobile/contrib/ios/mpscnn/MPSCNN.metal#L954\">https://github.com/pytorch/pytorch/blob/v0.4.1/caffe2/mobile/contrib/ios/mpscnn/MPSCNN.metal#L954</a> , I believe the correct call should omit the final <code>gid.z</code> argument (which is the <code>lod</code> arg according to the Metal language spec). On macOS this is a hard compilation error as <code>lod</code> is constrained to be 0.</p>\n<p><strong>2. Uninitialized member variables</strong></p>\n<p>A number of ops have uninitialized member vars (eg: <a href=\"https://github.com/pytorch/pytorch/blob/v0.4.1/caffe2/mobile/contrib/ios/mpscnn/mpscnn.mm#L1776\">https://github.com/pytorch/pytorch/blob/v0.4.1/caffe2/mobile/contrib/ios/mpscnn/mpscnn.mm#L1776</a>) that are lazily initialized based on their uninitialized value (<a href=\"https://github.com/pytorch/pytorch/blob/v0.4.1/caffe2/mobile/contrib/ios/mpscnn/mpscnn.mm#L1701\">https://github.com/pytorch/pytorch/blob/v0.4.1/caffe2/mobile/contrib/ios/mpscnn/mpscnn.mm#L1701</a>).</p>\n<p>These can and do (at least on macOS) lead to segfaults.</p>\n<p><strong>3. Assorted minor inconsistencies in comments/messages/etc...</strong></p>\n<p>Examples:</p>\n<p>In <code>MPSCNNNormalizePlanarYUVOp</code>:</p>\n<pre><code>VLOG(2) &lt;&lt; \"InstanceNorm took: \" &lt;&lt; t.MilliSeconds();\n</code></pre>\n<p>In <code>MPSCNNConcatOp</code>:</p>\n<pre><code>// Only handle three inputs for now.\nOPERATOR_NEEDS_FEATURE(Inputs().size() &lt;= 4, \"MPSCNNConcat only handles up to four inputs\");\n</code></pre>", "body_text": "I've been playing around with Caffe2's Metal ops in the iOS contrib module on macOS and have noticed a few issues. I'm not certain if some of these can be attributed to the differences in macOS vs iOS; however, it's probably worth a quick review by someone familiar with it.\n1. Potentially incorrect texture write in concat op\nFor the texture2d write call here: https://github.com/pytorch/pytorch/blob/v0.4.1/caffe2/mobile/contrib/ios/mpscnn/MPSCNN.metal#L954 , I believe the correct call should omit the final gid.z argument (which is the lod arg according to the Metal language spec). On macOS this is a hard compilation error as lod is constrained to be 0.\n2. Uninitialized member variables\nA number of ops have uninitialized member vars (eg: https://github.com/pytorch/pytorch/blob/v0.4.1/caffe2/mobile/contrib/ios/mpscnn/mpscnn.mm#L1776) that are lazily initialized based on their uninitialized value (https://github.com/pytorch/pytorch/blob/v0.4.1/caffe2/mobile/contrib/ios/mpscnn/mpscnn.mm#L1701).\nThese can and do (at least on macOS) lead to segfaults.\n3. Assorted minor inconsistencies in comments/messages/etc...\nExamples:\nIn MPSCNNNormalizePlanarYUVOp:\nVLOG(2) << \"InstanceNorm took: \" << t.MilliSeconds();\n\nIn MPSCNNConcatOp:\n// Only handle three inputs for now.\nOPERATOR_NEEDS_FEATURE(Inputs().size() <= 4, \"MPSCNNConcat only handles up to four inputs\");", "body": "I've been playing around with Caffe2's Metal ops in the iOS contrib module on macOS and have noticed a few issues. I'm not certain if some of these can be attributed to the differences in macOS vs iOS; however, it's probably worth a quick review by someone familiar with it.\r\n\r\n**1. Potentially incorrect texture write in concat op**\r\n\r\nFor the texture2d write call here: https://github.com/pytorch/pytorch/blob/v0.4.1/caffe2/mobile/contrib/ios/mpscnn/MPSCNN.metal#L954 , I believe the correct call should omit the final `gid.z` argument (which is the `lod` arg according to the Metal language spec). On macOS this is a hard compilation error as `lod` is constrained to be 0.\r\n\r\n**2. Uninitialized member variables**\r\n\r\nA number of ops have uninitialized member vars (eg: https://github.com/pytorch/pytorch/blob/v0.4.1/caffe2/mobile/contrib/ios/mpscnn/mpscnn.mm#L1776) that are lazily initialized based on their uninitialized value (https://github.com/pytorch/pytorch/blob/v0.4.1/caffe2/mobile/contrib/ios/mpscnn/mpscnn.mm#L1701).\r\n\r\nThese can and do (at least on macOS) lead to segfaults.\r\n\r\n**3. Assorted minor inconsistencies in comments/messages/etc...**\r\n\r\nExamples:\r\n\r\nIn `MPSCNNNormalizePlanarYUVOp`:\r\n```\r\nVLOG(2) << \"InstanceNorm took: \" << t.MilliSeconds();\r\n```\r\n\r\nIn `MPSCNNConcatOp`:\r\n```\r\n// Only handle three inputs for now.\r\nOPERATOR_NEEDS_FEATURE(Inputs().size() <= 4, \"MPSCNNConcat only handles up to four inputs\");\r\n```"}