{"url": "https://api.github.com/repos/pytorch/pytorch/issues/1255", "repository_url": "https://api.github.com/repos/pytorch/pytorch", "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/1255/labels{/name}", "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/1255/comments", "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/1255/events", "html_url": "https://github.com/pytorch/pytorch/issues/1255", "id": 221681005, "node_id": "MDU6SXNzdWUyMjE2ODEwMDU=", "number": 1255, "title": "LSTM pytorch inconsistent tensor size", "user": {"login": "reachablesa", "id": 22089464, "node_id": "MDQ6VXNlcjIyMDg5NDY0", "avatar_url": "https://avatars3.githubusercontent.com/u/22089464?v=4", "gravatar_id": "", "url": "https://api.github.com/users/reachablesa", "html_url": "https://github.com/reachablesa", "followers_url": "https://api.github.com/users/reachablesa/followers", "following_url": "https://api.github.com/users/reachablesa/following{/other_user}", "gists_url": "https://api.github.com/users/reachablesa/gists{/gist_id}", "starred_url": "https://api.github.com/users/reachablesa/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/reachablesa/subscriptions", "organizations_url": "https://api.github.com/users/reachablesa/orgs", "repos_url": "https://api.github.com/users/reachablesa/repos", "events_url": "https://api.github.com/users/reachablesa/events{/privacy}", "received_events_url": "https://api.github.com/users/reachablesa/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 553773019, "node_id": "MDU6TGFiZWw1NTM3NzMwMTk=", "url": "https://api.github.com/repos/pytorch/pytorch/labels/needs-reproduction", "name": "needs-reproduction", "color": "e99695", "default": false}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2017-04-13T21:00:53Z", "updated_at": "2017-04-14T02:27:35Z", "closed_at": "2017-04-14T02:27:35Z", "author_association": "NONE", "body_html": "<p>def init_hidden(self):<br>\nh_0 = Variable(FloatTensor(self.num_layers, self.batch_len, self.hidden_dim).zero_(), <br>\nrequires_grad=True)<br>\nc_0 = Variable(FloatTensor(self.num_layers, self.batch_len, self.hidden_dim).zero_(), <br>\nrequires_grad=True)<br>\nreturn (h_0, c_0)</p>\n<p>def forward(self, sequences):<br>\nlstm_out, self.hidden = self.lstm(sequences.view(1, self.batch_len,  self.input_dim), self.hidden)<br>\n...</p>\n<p>self.lstm = nn.LSTM(input_dim, hidden_dim, num_layers, dropout = dropout, batch_first=True)<br>\nself.hidden = self.init_hidden()<br>\noutput = model(train_input)</p>\n<p>produces the following error although I defined weight and input dimensions as in the documentation:</p>\n<p>File \"/usr/local/lib/python2.7/dist-packages/torch/nn/modules/module.py\", line 202, in <strong>call</strong><br>\nresult = self.forward(*input, **kwargs)<br>\nFile \"/usr/local/lib/python2.7/dist-packages/torch/nn/modules/rnn.py\", line 91, in forward<br>\noutput, hidden = func(input, self.all_weights, hx)<br>\nFile \"/usr/local/lib/python2.7/dist-packages/torch/nn/_functions/rnn.py\", line 327, in forward<br>\nreturn func(input, *fargs, **fkwargs)<br>\nFile \"/usr/local/lib/python2.7/dist-packages/torch/nn/_functions/rnn.py\", line 227, in forward<br>\nnexth, output = func(input, hidden, weight)<br>\nFile \"/usr/local/lib/python2.7/dist-packages/torch/nn/_functions/rnn.py\", line 67, in forward<br>\nhy, output = inner(input, hidden[l], weight[l])<br>\nFile \"/usr/local/lib/python2.7/dist-packages/torch/nn/_functions/rnn.py\", line 96, in forward<br>\nhidden = inner(input[i], hidden, *weight)<br>\nFile \"/usr/local/lib/python2.7/dist-packages/torch/nn/_functions/rnn.py\", line 22, in LSTMCell<br>\ngates = F.linear(input, w_ih, b_ih) + F.linear(hx, w_hh, b_hh)<br>\nFile \"/usr/local/lib/python2.7/dist-packages/torch/autograd/variable.py\", line 744, in <strong>add</strong><br>\nreturn self.add(other)<br>\nFile \"/usr/local/lib/python2.7/dist-packages/torch/autograd/variable.py\", line 293, in add<br>\nreturn self._add(other, False)<br>\nFile \"/usr/local/lib/python2.7/dist-packages/torch/autograd/variable.py\", line 287, in _add<br>\nreturn Add(inplace)(self, other)<br>\nFile \"/usr/local/lib/python2.7/dist-packages/torch/autograd/_functions/basic_ops.py\", line 20, in forward<br>\nreturn a.add(b)<br>\nRuntimeError: inconsistent tensor size at /data/users/soumith/builder/wheel/pytorch-src/torch/lib/TH/generic/THTensorMath.c:827</p>", "body_text": "def init_hidden(self):\nh_0 = Variable(FloatTensor(self.num_layers, self.batch_len, self.hidden_dim).zero_(), \nrequires_grad=True)\nc_0 = Variable(FloatTensor(self.num_layers, self.batch_len, self.hidden_dim).zero_(), \nrequires_grad=True)\nreturn (h_0, c_0)\ndef forward(self, sequences):\nlstm_out, self.hidden = self.lstm(sequences.view(1, self.batch_len,  self.input_dim), self.hidden)\n...\nself.lstm = nn.LSTM(input_dim, hidden_dim, num_layers, dropout = dropout, batch_first=True)\nself.hidden = self.init_hidden()\noutput = model(train_input)\nproduces the following error although I defined weight and input dimensions as in the documentation:\nFile \"/usr/local/lib/python2.7/dist-packages/torch/nn/modules/module.py\", line 202, in call\nresult = self.forward(*input, **kwargs)\nFile \"/usr/local/lib/python2.7/dist-packages/torch/nn/modules/rnn.py\", line 91, in forward\noutput, hidden = func(input, self.all_weights, hx)\nFile \"/usr/local/lib/python2.7/dist-packages/torch/nn/_functions/rnn.py\", line 327, in forward\nreturn func(input, *fargs, **fkwargs)\nFile \"/usr/local/lib/python2.7/dist-packages/torch/nn/_functions/rnn.py\", line 227, in forward\nnexth, output = func(input, hidden, weight)\nFile \"/usr/local/lib/python2.7/dist-packages/torch/nn/_functions/rnn.py\", line 67, in forward\nhy, output = inner(input, hidden[l], weight[l])\nFile \"/usr/local/lib/python2.7/dist-packages/torch/nn/_functions/rnn.py\", line 96, in forward\nhidden = inner(input[i], hidden, *weight)\nFile \"/usr/local/lib/python2.7/dist-packages/torch/nn/_functions/rnn.py\", line 22, in LSTMCell\ngates = F.linear(input, w_ih, b_ih) + F.linear(hx, w_hh, b_hh)\nFile \"/usr/local/lib/python2.7/dist-packages/torch/autograd/variable.py\", line 744, in add\nreturn self.add(other)\nFile \"/usr/local/lib/python2.7/dist-packages/torch/autograd/variable.py\", line 293, in add\nreturn self._add(other, False)\nFile \"/usr/local/lib/python2.7/dist-packages/torch/autograd/variable.py\", line 287, in _add\nreturn Add(inplace)(self, other)\nFile \"/usr/local/lib/python2.7/dist-packages/torch/autograd/_functions/basic_ops.py\", line 20, in forward\nreturn a.add(b)\nRuntimeError: inconsistent tensor size at /data/users/soumith/builder/wheel/pytorch-src/torch/lib/TH/generic/THTensorMath.c:827", "body": "def init_hidden(self):\r\n        h_0 = Variable(FloatTensor(self.num_layers, self.batch_len, self.hidden_dim).zero_(), \\\r\n        requires_grad=True)\r\n        c_0 = Variable(FloatTensor(self.num_layers, self.batch_len, self.hidden_dim).zero_(), \\\r\n        requires_grad=True)        \r\n        return (h_0, c_0)   \r\n\r\ndef forward(self, sequences):\r\n        lstm_out, self.hidden = self.lstm(sequences.view(1, self.batch_len,  self.input_dim), self.hidden)\r\n        ...\r\n\r\nself.lstm = nn.LSTM(input_dim, hidden_dim, num_layers, dropout = dropout, batch_first=True)\r\nself.hidden = self.init_hidden()\r\noutput = model(train_input)\r\n\r\nproduces the following error although I defined weight and input dimensions as in the documentation:\r\n\r\n\r\n  File \"/usr/local/lib/python2.7/dist-packages/torch/nn/modules/module.py\", line 202, in __call__\r\n    result = self.forward(*input, **kwargs)\r\n  File \"/usr/local/lib/python2.7/dist-packages/torch/nn/modules/rnn.py\", line 91, in forward\r\n    output, hidden = func(input, self.all_weights, hx)\r\n  File \"/usr/local/lib/python2.7/dist-packages/torch/nn/_functions/rnn.py\", line 327, in forward\r\n    return func(input, *fargs, **fkwargs)\r\n  File \"/usr/local/lib/python2.7/dist-packages/torch/nn/_functions/rnn.py\", line 227, in forward\r\n    nexth, output = func(input, hidden, weight)\r\n  File \"/usr/local/lib/python2.7/dist-packages/torch/nn/_functions/rnn.py\", line 67, in forward\r\n    hy, output = inner(input, hidden[l], weight[l])\r\n  File \"/usr/local/lib/python2.7/dist-packages/torch/nn/_functions/rnn.py\", line 96, in forward\r\n    hidden = inner(input[i], hidden, *weight)\r\n  File \"/usr/local/lib/python2.7/dist-packages/torch/nn/_functions/rnn.py\", line 22, in LSTMCell\r\n    gates = F.linear(input, w_ih, b_ih) + F.linear(hx, w_hh, b_hh)\r\n  File \"/usr/local/lib/python2.7/dist-packages/torch/autograd/variable.py\", line 744, in __add__\r\n    return self.add(other)\r\n  File \"/usr/local/lib/python2.7/dist-packages/torch/autograd/variable.py\", line 293, in add\r\n    return self._add(other, False)\r\n  File \"/usr/local/lib/python2.7/dist-packages/torch/autograd/variable.py\", line 287, in _add\r\n    return Add(inplace)(self, other)\r\n  File \"/usr/local/lib/python2.7/dist-packages/torch/autograd/_functions/basic_ops.py\", line 20, in forward\r\n    return a.add(b)\r\nRuntimeError: inconsistent tensor size at /data/users/soumith/builder/wheel/pytorch-src/torch/lib/TH/generic/THTensorMath.c:827\r\n"}