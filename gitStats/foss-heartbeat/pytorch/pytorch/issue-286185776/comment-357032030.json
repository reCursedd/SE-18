{"url": "https://api.github.com/repos/pytorch/pytorch/issues/comments/357032030", "html_url": "https://github.com/pytorch/pytorch/pull/4493#issuecomment-357032030", "issue_url": "https://api.github.com/repos/pytorch/pytorch/issues/4493", "id": 357032030, "node_id": "MDEyOklzc3VlQ29tbWVudDM1NzAzMjAzMA==", "user": {"login": "yongjik", "id": 31876421, "node_id": "MDQ6VXNlcjMxODc2NDIx", "avatar_url": "https://avatars2.githubusercontent.com/u/31876421?v=4", "gravatar_id": "", "url": "https://api.github.com/users/yongjik", "html_url": "https://github.com/yongjik", "followers_url": "https://api.github.com/users/yongjik/followers", "following_url": "https://api.github.com/users/yongjik/following{/other_user}", "gists_url": "https://api.github.com/users/yongjik/gists{/gist_id}", "starred_url": "https://api.github.com/users/yongjik/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/yongjik/subscriptions", "organizations_url": "https://api.github.com/users/yongjik/orgs", "repos_url": "https://api.github.com/users/yongjik/repos", "events_url": "https://api.github.com/users/yongjik/events{/privacy}", "received_events_url": "https://api.github.com/users/yongjik/received_events", "type": "User", "site_admin": false}, "created_at": "2018-01-11T19:17:41Z", "updated_at": "2018-01-11T19:17:41Z", "author_association": "CONTRIBUTOR", "body_html": "<p>Well, in that example <code>index_fill_()</code> is trying to write to the same column 40 times, so of course it will lead to write conflicts.  In the original code, at least these 40 writes are spread far apart (probably in different thread blocks), but in the new code they are executed by 40 consecutive kernel threads.</p>\n<p>However, I think one can reasonably argue that such a use of <code>index_fill_</code> is \"broken\" performance-wise, and that we cannot expect the code to be fast anyway.</p>", "body_text": "Well, in that example index_fill_() is trying to write to the same column 40 times, so of course it will lead to write conflicts.  In the original code, at least these 40 writes are spread far apart (probably in different thread blocks), but in the new code they are executed by 40 consecutive kernel threads.\nHowever, I think one can reasonably argue that such a use of index_fill_ is \"broken\" performance-wise, and that we cannot expect the code to be fast anyway.", "body": "Well, in that example `index_fill_()` is trying to write to the same column 40 times, so of course it will lead to write conflicts.  In the original code, at least these 40 writes are spread far apart (probably in different thread blocks), but in the new code they are executed by 40 consecutive kernel threads.\r\n\r\nHowever, I think one can reasonably argue that such a use of `index_fill_` is \"broken\" performance-wise, and that we cannot expect the code to be fast anyway."}