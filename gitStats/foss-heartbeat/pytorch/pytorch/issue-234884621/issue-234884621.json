{"url": "https://api.github.com/repos/pytorch/pytorch/issues/1763", "repository_url": "https://api.github.com/repos/pytorch/pytorch", "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/1763/labels{/name}", "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/1763/comments", "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/1763/events", "html_url": "https://github.com/pytorch/pytorch/issues/1763", "id": 234884621, "node_id": "MDU6SXNzdWUyMzQ4ODQ2MjE=", "number": 1763, "title": "F.softmax should take a dimension", "user": {"login": "colesbury", "id": 655866, "node_id": "MDQ6VXNlcjY1NTg2Ng==", "avatar_url": "https://avatars1.githubusercontent.com/u/655866?v=4", "gravatar_id": "", "url": "https://api.github.com/users/colesbury", "html_url": "https://github.com/colesbury", "followers_url": "https://api.github.com/users/colesbury/followers", "following_url": "https://api.github.com/users/colesbury/following{/other_user}", "gists_url": "https://api.github.com/users/colesbury/gists{/gist_id}", "starred_url": "https://api.github.com/users/colesbury/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/colesbury/subscriptions", "organizations_url": "https://api.github.com/users/colesbury/orgs", "repos_url": "https://api.github.com/users/colesbury/repos", "events_url": "https://api.github.com/users/colesbury/events{/privacy}", "received_events_url": "https://api.github.com/users/colesbury/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-06-09T16:56:27Z", "updated_at": "2017-07-18T19:10:40Z", "closed_at": "2017-06-09T19:07:49Z", "author_association": "MEMBER", "body_html": "<p><code>F.softmax</code> should take a dimension on which to perform the softmax (like <a href=\"https://www.tensorflow.org/api_docs/python/tf/nn/softmax\" rel=\"nofollow\">https://www.tensorflow.org/api_docs/python/tf/nn/softmax</a>)</p>\n<p><code>F.softmax(input, dim=-1)</code></p>\n<p>Currently, the choice of dimension is somewhat strange and inherited from Lua Torch:<br>\n1d: dim 0<br>\n2d: dim 1<br>\n3d: dim 0<br>\n4d: dim 1</p>\n<p>Like TensorFlow, I think we should also default to the right-most dimension (-1). This would be a breaking change for 3d and 4d inputs, but I think it would be worth it, rather than trying to describe the current behavior.</p>\n<p>(We should also change nn.Softmax to take a dimension in the constructor)</p>", "body_text": "F.softmax should take a dimension on which to perform the softmax (like https://www.tensorflow.org/api_docs/python/tf/nn/softmax)\nF.softmax(input, dim=-1)\nCurrently, the choice of dimension is somewhat strange and inherited from Lua Torch:\n1d: dim 0\n2d: dim 1\n3d: dim 0\n4d: dim 1\nLike TensorFlow, I think we should also default to the right-most dimension (-1). This would be a breaking change for 3d and 4d inputs, but I think it would be worth it, rather than trying to describe the current behavior.\n(We should also change nn.Softmax to take a dimension in the constructor)", "body": "`F.softmax` should take a dimension on which to perform the softmax (like https://www.tensorflow.org/api_docs/python/tf/nn/softmax)\r\n\r\n```F.softmax(input, dim=-1)```\r\n\r\nCurrently, the choice of dimension is somewhat strange and inherited from Lua Torch:\r\n1d: dim 0\r\n2d: dim 1\r\n3d: dim 0\r\n4d: dim 1\r\n\r\nLike TensorFlow, I think we should also default to the right-most dimension (-1). This would be a breaking change for 3d and 4d inputs, but I think it would be worth it, rather than trying to describe the current behavior.\r\n\r\n(We should also change nn.Softmax to take a dimension in the constructor)"}