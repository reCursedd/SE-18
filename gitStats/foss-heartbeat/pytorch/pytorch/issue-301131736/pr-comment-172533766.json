{"url": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/172533766", "pull_request_review_id": 101564714, "id": 172533766, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE3MjUzMzc2Ng==", "diff_hunk": "@@ -88,23 +88,7 @@ static inline ssize_t doPythonIO(PyObject* fildes, void* buf, size_t nbytes, boo\n   THPObjectPtr memview(PyMemoryView_FromMemory(\n       reinterpret_cast<char*>(buf), nbytes, rw_flag));\n #else\n-  // PyMemoryView_FromMemory doesn't exist in Python 2.7, so we manually\n-  // create a Py_buffer that describes the memory and create a memoryview from it.\n-  auto readonly_flag = is_read ? 1 : 0;\n-  Py_buffer pyBuf;\n-  pyBuf.buf = buf;\n-  pyBuf.obj = nullptr;\n-  pyBuf.len = (Py_ssize_t)nbytes;\n-  pyBuf.itemsize = 1;\n-  pyBuf.readonly = readonly_flag;\n-  pyBuf.ndim = 0;\n-  pyBuf.format = nullptr;\n-  pyBuf.shape = nullptr;\n-  pyBuf.strides = nullptr;\n-  pyBuf.suboffsets = nullptr;\n-  pyBuf.internal = nullptr;\n-\n-  THPObjectPtr memview(PyMemoryView_FromBuffer(&pyBuf));\n+  THPObjectPtr memview(PyBuffer_FromReadWriteMemory(buf, nbytes));", "path": "torch/csrc/serialization.cpp", "position": null, "original_position": 21, "commit_id": "bdaf61fb52ecadc1e0f83be28ea738ad2635257d", "original_commit_id": "59a2286ba622312a400d42d3b2e39d394b180cf2", "user": {"login": "apaszke", "id": 4583066, "node_id": "MDQ6VXNlcjQ1ODMwNjY=", "avatar_url": "https://avatars3.githubusercontent.com/u/4583066?v=4", "gravatar_id": "", "url": "https://api.github.com/users/apaszke", "html_url": "https://github.com/apaszke", "followers_url": "https://api.github.com/users/apaszke/followers", "following_url": "https://api.github.com/users/apaszke/following{/other_user}", "gists_url": "https://api.github.com/users/apaszke/gists{/gist_id}", "starred_url": "https://api.github.com/users/apaszke/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/apaszke/subscriptions", "organizations_url": "https://api.github.com/users/apaszke/orgs", "repos_url": "https://api.github.com/users/apaszke/repos", "events_url": "https://api.github.com/users/apaszke/events{/privacy}", "received_events_url": "https://api.github.com/users/apaszke/received_events", "type": "User", "site_admin": false}, "body": "Can `readinto` or `write` take a `PyBuffer` object too? Why can't we use this in Python 3 as well?", "created_at": "2018-03-06T14:33:33Z", "updated_at": "2018-11-23T15:40:23Z", "html_url": "https://github.com/pytorch/pytorch/pull/5466#discussion_r172533766", "pull_request_url": "https://api.github.com/repos/pytorch/pytorch/pulls/5466", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/172533766"}, "html": {"href": "https://github.com/pytorch/pytorch/pull/5466#discussion_r172533766"}, "pull_request": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/5466"}}, "body_html": "<p>Can <code>readinto</code> or <code>write</code> take a <code>PyBuffer</code> object too? Why can't we use this in Python 3 as well?</p>", "body_text": "Can readinto or write take a PyBuffer object too? Why can't we use this in Python 3 as well?"}