{"url": "https://api.github.com/repos/pytorch/pytorch/issues/13404", "repository_url": "https://api.github.com/repos/pytorch/pytorch", "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/13404/labels{/name}", "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/13404/comments", "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/13404/events", "html_url": "https://github.com/pytorch/pytorch/issues/13404", "id": 376105417, "node_id": "MDU6SXNzdWUzNzYxMDU0MTc=", "number": 13404, "title": "Cannot convert certain empty tensors from numpy", "user": {"login": "f0k", "id": 629706, "node_id": "MDQ6VXNlcjYyOTcwNg==", "avatar_url": "https://avatars3.githubusercontent.com/u/629706?v=4", "gravatar_id": "", "url": "https://api.github.com/users/f0k", "html_url": "https://github.com/f0k", "followers_url": "https://api.github.com/users/f0k/followers", "following_url": "https://api.github.com/users/f0k/following{/other_user}", "gists_url": "https://api.github.com/users/f0k/gists{/gist_id}", "starred_url": "https://api.github.com/users/f0k/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/f0k/subscriptions", "organizations_url": "https://api.github.com/users/f0k/orgs", "repos_url": "https://api.github.com/users/f0k/repos", "events_url": "https://api.github.com/users/f0k/events{/privacy}", "received_events_url": "https://api.github.com/users/f0k/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 443483881, "node_id": "MDU6TGFiZWw0NDM0ODM4ODE=", "url": "https://api.github.com/repos/pytorch/pytorch/labels/todo", "name": "todo", "color": "c2e0c6", "default": false}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2018-10-31T18:34:36Z", "updated_at": "2018-11-06T17:24:34Z", "closed_at": null, "author_association": "CONTRIBUTOR", "body_html": "<h2><g-emoji class=\"g-emoji\" alias=\"bug\" fallback-src=\"https://assets-cdn.github.com/images/icons/emoji/unicode/1f41b.png\">\ud83d\udc1b</g-emoji> Bug</h2>\n<p>Some empty numpy arrays cannot be converted to torch tensors.</p>\n<h2>To Reproduce</h2>\n<p>Steps to reproduce the behavior:</p>\n<div class=\"highlight highlight-source-python\"><pre><span class=\"pl-k\">import</span> numpy <span class=\"pl-k\">as</span> np\n<span class=\"pl-k\">import</span> torch\n<span class=\"pl-c1\">print</span>(torch.from_numpy(np.empty((<span class=\"pl-c1\">0</span>, <span class=\"pl-c1\">20</span>))).shape)\n<span class=\"pl-c1\">print</span>(torch.from_numpy(np.empty((<span class=\"pl-c1\">20</span>, <span class=\"pl-c1\">0</span>))).shape)</pre></div>\n<p>The first print statement prints <code>(0, 20)</code> as expected.<br>\nThe second statement throws an exception:</p>\n<pre><code>RuntimeError: Trying to resize storage that is not resizable at ../aten/src/TH/THStorageFunctions.cpp:70\n</code></pre>\n<h2>Expected behavior</h2>\n<p>The second statement should have printed <code>(20, 0)</code>.</p>\n<h2>Environment</h2>\n<pre><code>PyTorch version: 1.0.0a0+e475d3e\nIs debug build: No\nCUDA used to build PyTorch: 10.0.130\n\nOS: Ubuntu 16.04.5 LTS\nGCC version: (Ubuntu 5.4.0-6ubuntu1~16.04.10) 5.4.0 20160609\nCMake version: version 3.5.1\n\nPython version: 2.7\nIs CUDA available: Yes\nCUDA runtime version: 10.0.130\nGPU models and configuration: GPU 0: GeForce GTX 1060\nNvidia driver version: 410.57\ncuDNN version: Probably one of the following:\n/usr/local/cuda-10.0/targets/x86_64-linux/lib/libcudnn.so.7.3.1\n/usr/local/cuda-10.0/targets/x86_64-linux/lib/libcudnn_static.a\n/usr/local/cuda-9.0/targets/x86_64-linux/lib/libcudnn.so.7.1.4\n/usr/local/cuda-9.0/targets/x86_64-linux/lib/libcudnn_static.a\n\nVersions of relevant libraries:\n[pip] Could not collect\n[conda] Could not collect\n</code></pre>\n<h2>Additional context</h2>\n<p>This is not a terribly important use case. I only discovered this after running into a bug on PyTorch 0.4.1 that has been fixed since (whenever one dimension went to a size of 0, the tensor became one-dimensional), and trying how robust PyTorch 1.0 was with empty tensors.</p>", "body_text": "\ud83d\udc1b Bug\nSome empty numpy arrays cannot be converted to torch tensors.\nTo Reproduce\nSteps to reproduce the behavior:\nimport numpy as np\nimport torch\nprint(torch.from_numpy(np.empty((0, 20))).shape)\nprint(torch.from_numpy(np.empty((20, 0))).shape)\nThe first print statement prints (0, 20) as expected.\nThe second statement throws an exception:\nRuntimeError: Trying to resize storage that is not resizable at ../aten/src/TH/THStorageFunctions.cpp:70\n\nExpected behavior\nThe second statement should have printed (20, 0).\nEnvironment\nPyTorch version: 1.0.0a0+e475d3e\nIs debug build: No\nCUDA used to build PyTorch: 10.0.130\n\nOS: Ubuntu 16.04.5 LTS\nGCC version: (Ubuntu 5.4.0-6ubuntu1~16.04.10) 5.4.0 20160609\nCMake version: version 3.5.1\n\nPython version: 2.7\nIs CUDA available: Yes\nCUDA runtime version: 10.0.130\nGPU models and configuration: GPU 0: GeForce GTX 1060\nNvidia driver version: 410.57\ncuDNN version: Probably one of the following:\n/usr/local/cuda-10.0/targets/x86_64-linux/lib/libcudnn.so.7.3.1\n/usr/local/cuda-10.0/targets/x86_64-linux/lib/libcudnn_static.a\n/usr/local/cuda-9.0/targets/x86_64-linux/lib/libcudnn.so.7.1.4\n/usr/local/cuda-9.0/targets/x86_64-linux/lib/libcudnn_static.a\n\nVersions of relevant libraries:\n[pip] Could not collect\n[conda] Could not collect\n\nAdditional context\nThis is not a terribly important use case. I only discovered this after running into a bug on PyTorch 0.4.1 that has been fixed since (whenever one dimension went to a size of 0, the tensor became one-dimensional), and trying how robust PyTorch 1.0 was with empty tensors.", "body": "## \ud83d\udc1b Bug\r\n\r\nSome empty numpy arrays cannot be converted to torch tensors.\r\n\r\n## To Reproduce\r\n\r\nSteps to reproduce the behavior:\r\n\r\n```python\r\nimport numpy as np\r\nimport torch\r\nprint(torch.from_numpy(np.empty((0, 20))).shape)\r\nprint(torch.from_numpy(np.empty((20, 0))).shape)\r\n```\r\n\r\nThe first print statement prints `(0, 20)` as expected.\r\nThe second statement throws an exception:\r\n```\r\nRuntimeError: Trying to resize storage that is not resizable at ../aten/src/TH/THStorageFunctions.cpp:70\r\n```\r\n\r\n## Expected behavior\r\n\r\nThe second statement should have printed `(20, 0)`.\r\n\r\n## Environment\r\n\r\n```\r\nPyTorch version: 1.0.0a0+e475d3e\r\nIs debug build: No\r\nCUDA used to build PyTorch: 10.0.130\r\n\r\nOS: Ubuntu 16.04.5 LTS\r\nGCC version: (Ubuntu 5.4.0-6ubuntu1~16.04.10) 5.4.0 20160609\r\nCMake version: version 3.5.1\r\n\r\nPython version: 2.7\r\nIs CUDA available: Yes\r\nCUDA runtime version: 10.0.130\r\nGPU models and configuration: GPU 0: GeForce GTX 1060\r\nNvidia driver version: 410.57\r\ncuDNN version: Probably one of the following:\r\n/usr/local/cuda-10.0/targets/x86_64-linux/lib/libcudnn.so.7.3.1\r\n/usr/local/cuda-10.0/targets/x86_64-linux/lib/libcudnn_static.a\r\n/usr/local/cuda-9.0/targets/x86_64-linux/lib/libcudnn.so.7.1.4\r\n/usr/local/cuda-9.0/targets/x86_64-linux/lib/libcudnn_static.a\r\n\r\nVersions of relevant libraries:\r\n[pip] Could not collect\r\n[conda] Could not collect\r\n```\r\n\r\n## Additional context\r\n\r\nThis is not a terribly important use case. I only discovered this after running into a bug on PyTorch 0.4.1 that has been fixed since (whenever one dimension went to a size of 0, the tensor became one-dimensional), and trying how robust PyTorch 1.0 was with empty tensors."}