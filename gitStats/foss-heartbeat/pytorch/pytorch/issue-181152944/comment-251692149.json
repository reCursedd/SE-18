{"url": "https://api.github.com/repos/pytorch/pytorch/issues/comments/251692149", "html_url": "https://github.com/pytorch/pytorch/issues/102#issuecomment-251692149", "issue_url": "https://api.github.com/repos/pytorch/pytorch/issues/102", "id": 251692149, "node_id": "MDEyOklzc3VlQ29tbWVudDI1MTY5MjE0OQ==", "user": {"login": "fmassa", "id": 9110200, "node_id": "MDQ6VXNlcjkxMTAyMDA=", "avatar_url": "https://avatars2.githubusercontent.com/u/9110200?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fmassa", "html_url": "https://github.com/fmassa", "followers_url": "https://api.github.com/users/fmassa/followers", "following_url": "https://api.github.com/users/fmassa/following{/other_user}", "gists_url": "https://api.github.com/users/fmassa/gists{/gist_id}", "starred_url": "https://api.github.com/users/fmassa/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fmassa/subscriptions", "organizations_url": "https://api.github.com/users/fmassa/orgs", "repos_url": "https://api.github.com/users/fmassa/repos", "events_url": "https://api.github.com/users/fmassa/events{/privacy}", "received_events_url": "https://api.github.com/users/fmassa/received_events", "type": "User", "site_admin": false}, "created_at": "2016-10-05T14:32:16Z", "updated_at": "2016-10-05T14:32:16Z", "author_association": "MEMBER", "body_html": "<p>I was thinking about passing a second input as argument during the function call, and if the second input is present then the shape is inferred from the shape of the second input argument.<br>\nSomething similar could be done BTW with other upsampling modules, like <code>SpatialUpsamplingBilinear</code></p>", "body_text": "I was thinking about passing a second input as argument during the function call, and if the second input is present then the shape is inferred from the shape of the second input argument.\nSomething similar could be done BTW with other upsampling modules, like SpatialUpsamplingBilinear", "body": "I was thinking about passing a second input as argument during the function call, and if the second input is present then the shape is inferred from the shape of the second input argument.\nSomething similar could be done BTW with other upsampling modules, like `SpatialUpsamplingBilinear`\n"}