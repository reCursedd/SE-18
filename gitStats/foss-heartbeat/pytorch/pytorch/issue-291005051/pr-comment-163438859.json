{"url": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/163438859", "pull_request_review_id": 91048924, "id": 163438859, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE2MzQzODg1OQ==", "diff_hunk": "@@ -64,6 +64,12 @@ $PYCMD test_cuda.py $@\n echo \"Running NCCL tests\"\n $PYCMD test_nccl.py $@\n \n+echo \"Running C++ Extensions tests\"\n+cd cpp_extensions\n+$PYCMD setup.py install", "path": "test/run_test.sh", "position": null, "original_position": 6, "commit_id": "e22fe45dd906c5021d83fd8d7bada1baf236ca7a", "original_commit_id": "a113cd76b074b17ef508dfcdab15bae5dd822995", "user": {"login": "ezyang", "id": 13564, "node_id": "MDQ6VXNlcjEzNTY0", "avatar_url": "https://avatars0.githubusercontent.com/u/13564?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ezyang", "html_url": "https://github.com/ezyang", "followers_url": "https://api.github.com/users/ezyang/followers", "following_url": "https://api.github.com/users/ezyang/following{/other_user}", "gists_url": "https://api.github.com/users/ezyang/gists{/gist_id}", "starred_url": "https://api.github.com/users/ezyang/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ezyang/subscriptions", "organizations_url": "https://api.github.com/users/ezyang/orgs", "repos_url": "https://api.github.com/users/ezyang/repos", "events_url": "https://api.github.com/users/ezyang/events{/privacy}", "received_events_url": "https://api.github.com/users/ezyang/received_events", "type": "User", "site_admin": false}, "body": "This is going to install to the user's actual site-packages, which means that it's not concurrent safe and an existing install could goo up the works. Unfortunately I can't think of a convenient way to created a stacked virtual environment on top of the one you are already executing in, so this might really be the only thing you can do. Perhaps it would be good to (1) clean up after yourself (uninstall the extension when you're done) and (2) pick a name with torch in it, so we don't accidentally clobber someone else's package.", "created_at": "2018-01-24T02:24:08Z", "updated_at": "2018-11-23T15:38:30Z", "html_url": "https://github.com/pytorch/pytorch/pull/4818#discussion_r163438859", "pull_request_url": "https://api.github.com/repos/pytorch/pytorch/pulls/4818", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/163438859"}, "html": {"href": "https://github.com/pytorch/pytorch/pull/4818#discussion_r163438859"}, "pull_request": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/4818"}}, "body_html": "<p>This is going to install to the user's actual site-packages, which means that it's not concurrent safe and an existing install could goo up the works. Unfortunately I can't think of a convenient way to created a stacked virtual environment on top of the one you are already executing in, so this might really be the only thing you can do. Perhaps it would be good to (1) clean up after yourself (uninstall the extension when you're done) and (2) pick a name with torch in it, so we don't accidentally clobber someone else's package.</p>", "body_text": "This is going to install to the user's actual site-packages, which means that it's not concurrent safe and an existing install could goo up the works. Unfortunately I can't think of a convenient way to created a stacked virtual environment on top of the one you are already executing in, so this might really be the only thing you can do. Perhaps it would be good to (1) clean up after yourself (uninstall the extension when you're done) and (2) pick a name with torch in it, so we don't accidentally clobber someone else's package."}