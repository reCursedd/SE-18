{"url": "https://api.github.com/repos/pytorch/pytorch/issues/comments/360184171", "html_url": "https://github.com/pytorch/pytorch/pull/4818#issuecomment-360184171", "issue_url": "https://api.github.com/repos/pytorch/pytorch/issues/4818", "id": 360184171, "node_id": "MDEyOklzc3VlQ29tbWVudDM2MDE4NDE3MQ==", "user": {"login": "ezyang", "id": 13564, "node_id": "MDQ6VXNlcjEzNTY0", "avatar_url": "https://avatars0.githubusercontent.com/u/13564?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ezyang", "html_url": "https://github.com/ezyang", "followers_url": "https://api.github.com/users/ezyang/followers", "following_url": "https://api.github.com/users/ezyang/following{/other_user}", "gists_url": "https://api.github.com/users/ezyang/gists{/gist_id}", "starred_url": "https://api.github.com/users/ezyang/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ezyang/subscriptions", "organizations_url": "https://api.github.com/users/ezyang/orgs", "repos_url": "https://api.github.com/users/ezyang/repos", "events_url": "https://api.github.com/users/ezyang/events{/privacy}", "received_events_url": "https://api.github.com/users/ezyang/received_events", "type": "User", "site_admin": false}, "created_at": "2018-01-24T16:07:56Z", "updated_at": "2018-01-24T16:07:56Z", "author_association": "CONTRIBUTOR", "body_html": "<p><a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=6429851\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/goldsborough\">@goldsborough</a> Are you saying something like, PyTorch is built with clang but the extension is being built with gcc? It is indeed true that we get rid of environment variables between the build and deploy environment, which would explain your problem (see <code>jobs/pytorch.groovy</code>), but don't we want swapping compilers to be a supported operation? In general binary builds will come from some compiler that a user will not necessarily have access to.</p>\n<p>I guess there is some trouble with getting the standard libraries to talk to each other that may be problematic...</p>", "body_text": "@goldsborough Are you saying something like, PyTorch is built with clang but the extension is being built with gcc? It is indeed true that we get rid of environment variables between the build and deploy environment, which would explain your problem (see jobs/pytorch.groovy), but don't we want swapping compilers to be a supported operation? In general binary builds will come from some compiler that a user will not necessarily have access to.\nI guess there is some trouble with getting the standard libraries to talk to each other that may be problematic...", "body": "@goldsborough Are you saying something like, PyTorch is built with clang but the extension is being built with gcc? It is indeed true that we get rid of environment variables between the build and deploy environment, which would explain your problem (see `jobs/pytorch.groovy`), but don't we want swapping compilers to be a supported operation? In general binary builds will come from some compiler that a user will not necessarily have access to.\r\n\r\nI guess there is some trouble with getting the standard libraries to talk to each other that may be problematic..."}