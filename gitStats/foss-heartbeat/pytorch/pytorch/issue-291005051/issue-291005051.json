{"url": "https://api.github.com/repos/pytorch/pytorch/issues/4818", "repository_url": "https://api.github.com/repos/pytorch/pytorch", "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/4818/labels{/name}", "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/4818/comments", "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/4818/events", "html_url": "https://github.com/pytorch/pytorch/pull/4818", "id": 291005051, "node_id": "MDExOlB1bGxSZXF1ZXN0MTY0Njk4Nzc4", "number": 4818, "title": "[cpp-extensions] Create torch.h and update setup.py to enable C++ extensions", "user": {"login": "goldsborough", "id": 6429851, "node_id": "MDQ6VXNlcjY0Mjk4NTE=", "avatar_url": "https://avatars3.githubusercontent.com/u/6429851?v=4", "gravatar_id": "", "url": "https://api.github.com/users/goldsborough", "html_url": "https://github.com/goldsborough", "followers_url": "https://api.github.com/users/goldsborough/followers", "following_url": "https://api.github.com/users/goldsborough/following{/other_user}", "gists_url": "https://api.github.com/users/goldsborough/gists{/gist_id}", "starred_url": "https://api.github.com/users/goldsborough/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/goldsborough/subscriptions", "organizations_url": "https://api.github.com/users/goldsborough/orgs", "repos_url": "https://api.github.com/users/goldsborough/repos", "events_url": "https://api.github.com/users/goldsborough/events{/privacy}", "received_events_url": "https://api.github.com/users/goldsborough/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 19, "created_at": "2018-01-23T21:48:19Z", "updated_at": "2018-11-23T15:38:56Z", "closed_at": "2018-02-02T00:19:04Z", "author_association": "CONTRIBUTOR", "pull_request": {"url": "https://api.github.com/repos/pytorch/pytorch/pulls/4818", "html_url": "https://github.com/pytorch/pytorch/pull/4818", "diff_url": "https://github.com/pytorch/pytorch/pull/4818.diff", "patch_url": "https://github.com/pytorch/pytorch/pull/4818.patch"}, "body_html": "<p>This PR introduces a simple aggregate header, <code>torch/torch.h</code>, that pulls in all other headers necessary to create a C++ module that can very easily be integrated with PyTorch without having to modify the core library.</p>\n<p>For this, I edited <code>setup.py</code> to ship some more files with the <code>torch</code> install:</p>\n<ul>\n<li>The new <code>torch/torch.h</code>,</li>\n<li><em>All</em> <code>torch/csrc/</code> headers,</li>\n<li><code>torch/lib/pybind11/include/pybind11/</code></li>\n</ul>\n<p>One discussion point here is that we technically don't need all of <code>torch/csrc</code>. The whole folder is 8 MB, while for cpp-extensions to work we only need around half of that. I'm dumping all of them for now for simplicity (and considering the PyTorch wheel is still 85% smaller than TensorFlow), but happy to take thoughts here.</p>\n<p>Right now, creating a C++ extension means setting up a very small <code>setup.py</code> and using the header locations we provide via <code>torch.cpp_build.include_paths()</code> and then calling <code>python setup.py install</code>. That's it. I've provided a small test case.</p>\n<p><a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=370202\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/zdevito\">@zdevito</a> <a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=1310570\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/soumith\">@soumith</a></p>", "body_text": "This PR introduces a simple aggregate header, torch/torch.h, that pulls in all other headers necessary to create a C++ module that can very easily be integrated with PyTorch without having to modify the core library.\nFor this, I edited setup.py to ship some more files with the torch install:\n\nThe new torch/torch.h,\nAll torch/csrc/ headers,\ntorch/lib/pybind11/include/pybind11/\n\nOne discussion point here is that we technically don't need all of torch/csrc. The whole folder is 8 MB, while for cpp-extensions to work we only need around half of that. I'm dumping all of them for now for simplicity (and considering the PyTorch wheel is still 85% smaller than TensorFlow), but happy to take thoughts here.\nRight now, creating a C++ extension means setting up a very small setup.py and using the header locations we provide via torch.cpp_build.include_paths() and then calling python setup.py install. That's it. I've provided a small test case.\n@zdevito @soumith", "body": "This PR introduces a simple aggregate header, `torch/torch.h`, that pulls in all other headers necessary to create a C++ module that can very easily be integrated with PyTorch without having to modify the core library.\r\n\r\nFor this, I edited `setup.py` to ship some more files with the `torch` install:\r\n- The new `torch/torch.h`,\r\n- *All* `torch/csrc/` headers,\r\n- `torch/lib/pybind11/include/pybind11/`\r\n\r\nOne discussion point here is that we technically don't need all of `torch/csrc`. The whole folder is 8 MB, while for cpp-extensions to work we only need around half of that. I'm dumping all of them for now for simplicity (and considering the PyTorch wheel is still 85% smaller than TensorFlow), but happy to take thoughts here.\r\n\r\nRight now, creating a C++ extension means setting up a very small `setup.py` and using the header locations we provide via `torch.cpp_build.include_paths()` and then calling `python setup.py install`. That's it. I've provided a small test case.\r\n\r\n@zdevito @soumith "}