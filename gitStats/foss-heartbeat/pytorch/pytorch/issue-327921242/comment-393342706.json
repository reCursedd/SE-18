{"url": "https://api.github.com/repos/pytorch/pytorch/issues/comments/393342706", "html_url": "https://github.com/pytorch/pytorch/issues/7968#issuecomment-393342706", "issue_url": "https://api.github.com/repos/pytorch/pytorch/issues/7968", "id": 393342706, "node_id": "MDEyOklzc3VlQ29tbWVudDM5MzM0MjcwNg==", "user": {"login": "zdevito", "id": 370202, "node_id": "MDQ6VXNlcjM3MDIwMg==", "avatar_url": "https://avatars0.githubusercontent.com/u/370202?v=4", "gravatar_id": "", "url": "https://api.github.com/users/zdevito", "html_url": "https://github.com/zdevito", "followers_url": "https://api.github.com/users/zdevito/followers", "following_url": "https://api.github.com/users/zdevito/following{/other_user}", "gists_url": "https://api.github.com/users/zdevito/gists{/gist_id}", "starred_url": "https://api.github.com/users/zdevito/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/zdevito/subscriptions", "organizations_url": "https://api.github.com/users/zdevito/orgs", "repos_url": "https://api.github.com/users/zdevito/repos", "events_url": "https://api.github.com/users/zdevito/events{/privacy}", "received_events_url": "https://api.github.com/users/zdevito/received_events", "type": "User", "site_admin": false}, "created_at": "2018-05-30T22:41:03Z", "updated_at": "2018-05-30T22:41:03Z", "author_association": "CONTRIBUTOR", "body_html": "<p>Some thoughts on alternative 1 that I discussed in person with James:</p>\n<ul>\n<li>we can add lists but we won't immediately be able to differentiate list ops. That is ok, we can do loop unrolling and then push the list operations to the bottom of the unrolled loop. Optimizations of the math would then occur inside a a block inside the loop.</li>\n<li>alternatively, we can define symbolic derivatives for lists and loops. I don't have in my head all the implications of adding loop and list support so symbolic differentiation. It would have to work in a way that supports higher-order differentiation. This should be tractable but there may be gotchas.</li>\n</ul>", "body_text": "Some thoughts on alternative 1 that I discussed in person with James:\n\nwe can add lists but we won't immediately be able to differentiate list ops. That is ok, we can do loop unrolling and then push the list operations to the bottom of the unrolled loop. Optimizations of the math would then occur inside a a block inside the loop.\nalternatively, we can define symbolic derivatives for lists and loops. I don't have in my head all the implications of adding loop and list support so symbolic differentiation. It would have to work in a way that supports higher-order differentiation. This should be tractable but there may be gotchas.", "body": "Some thoughts on alternative 1 that I discussed in person with James:\r\n* we can add lists but we won't immediately be able to differentiate list ops. That is ok, we can do loop unrolling and then push the list operations to the bottom of the unrolled loop. Optimizations of the math would then occur inside a a block inside the loop.\r\n* alternatively, we can define symbolic derivatives for lists and loops. I don't have in my head all the implications of adding loop and list support so symbolic differentiation. It would have to work in a way that supports higher-order differentiation. This should be tractable but there may be gotchas."}