{"url": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/184775471", "pull_request_review_id": 116044532, "id": 184775471, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4NDc3NTQ3MQ==", "diff_hunk": "@@ -158,40 +163,42 @@ void addAttribute(onnx::NodeProto * n_p, jit::Node * n, jit::Symbol name, Export\n \n void encodeTypeProtoTensorType(onnx::TypeProtoTensor* tensor_type, Value* n) {\n   onnx::TensorShapeProto* shape = tensor_type->mutable_shape();\n-  TensorType* node_type = n->type()->expect<TensorType>();\n-  const std::vector<std::int64_t>& sizes = node_type->sizes();\n-  for (std::int64_t s : sizes) {\n-    shape->add_dim(s);\n-  }\n-  onnx::DataType onnx_type;\n-  switch(node_type->scalarType()) {\n-    case at::kDouble:\n-      onnx_type = onnx::kDOUBLE;\n-      break;\n-    case at::kFloat:\n-      onnx_type = onnx::kFLOAT;\n-      break;\n-    case at::kHalf:\n-      onnx_type = onnx::kFLOAT16;\n-      break;\n-    case at::kByte:\n-    case at::kChar:\n-      onnx_type = onnx::kINT8;\n-      break;\n-    case at::kShort:\n-      onnx_type = onnx::kINT16;\n-      break;\n-    case at::kInt:\n-      onnx_type = onnx::kINT32;\n-      break;\n-    case at::kLong:\n-      onnx_type = onnx::kINT64;\n-      break;\n-    default:\n-      torch::barf(\"unexpected tensor scalar type\");\n-      break;\n+  if (n->type()->cast<TensorType>() != nullptr) {", "path": "torch/csrc/jit/export.cpp", "position": null, "original_position": 71, "commit_id": "46c6dde3de2a1b5518fcc0676ef1acdce0485956", "original_commit_id": "dd895204f489f71e970864d125b2562bc65e92ea", "user": {"login": "zdevito", "id": 370202, "node_id": "MDQ6VXNlcjM3MDIwMg==", "avatar_url": "https://avatars0.githubusercontent.com/u/370202?v=4", "gravatar_id": "", "url": "https://api.github.com/users/zdevito", "html_url": "https://github.com/zdevito", "followers_url": "https://api.github.com/users/zdevito/followers", "following_url": "https://api.github.com/users/zdevito/following{/other_user}", "gists_url": "https://api.github.com/users/zdevito/gists{/gist_id}", "starred_url": "https://api.github.com/users/zdevito/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/zdevito/subscriptions", "organizations_url": "https://api.github.com/users/zdevito/orgs", "repos_url": "https://api.github.com/users/zdevito/repos", "events_url": "https://api.github.com/users/zdevito/events{/privacy}", "received_events_url": "https://api.github.com/users/zdevito/received_events", "type": "User", "site_admin": false}, "body": "`if (TensorType* node_type = n->type()->cast<TensorType>()) {`", "created_at": "2018-04-27T18:45:58Z", "updated_at": "2018-11-23T15:43:20Z", "html_url": "https://github.com/pytorch/pytorch/pull/7044#discussion_r184775471", "pull_request_url": "https://api.github.com/repos/pytorch/pytorch/pulls/7044", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/184775471"}, "html": {"href": "https://github.com/pytorch/pytorch/pull/7044#discussion_r184775471"}, "pull_request": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/7044"}}, "body_html": "<p><code>if (TensorType* node_type = n-&gt;type()-&gt;cast&lt;TensorType&gt;()) {</code></p>", "body_text": "if (TensorType* node_type = n->type()->cast<TensorType>()) {"}