{"url": "https://api.github.com/repos/pytorch/pytorch/issues/comments/376232585", "html_url": "https://github.com/pytorch/pytorch/pull/5997#issuecomment-376232585", "issue_url": "https://api.github.com/repos/pytorch/pytorch/issues/5997", "id": 376232585, "node_id": "MDEyOklzc3VlQ29tbWVudDM3NjIzMjU4NQ==", "user": {"login": "fmassa", "id": 9110200, "node_id": "MDQ6VXNlcjkxMTAyMDA=", "avatar_url": "https://avatars2.githubusercontent.com/u/9110200?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fmassa", "html_url": "https://github.com/fmassa", "followers_url": "https://api.github.com/users/fmassa/followers", "following_url": "https://api.github.com/users/fmassa/following{/other_user}", "gists_url": "https://api.github.com/users/fmassa/gists{/gist_id}", "starred_url": "https://api.github.com/users/fmassa/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fmassa/subscriptions", "organizations_url": "https://api.github.com/users/fmassa/orgs", "repos_url": "https://api.github.com/users/fmassa/repos", "events_url": "https://api.github.com/users/fmassa/events{/privacy}", "received_events_url": "https://api.github.com/users/fmassa/received_events", "type": "User", "site_admin": false}, "created_at": "2018-03-26T16:44:44Z", "updated_at": "2018-03-26T16:44:44Z", "author_association": "MEMBER", "body_html": "<p><a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=3768583\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/gchanan\">@gchanan</a> I think it's better like this.</p>\n<p>Plus, current <code>tensor</code>/<code>number</code> <a href=\"https://github.com/pytorch/pytorch/blob/master/aten/src/TH/generic/THTensorMath.h#L37-L50\">operations in TH use the <code>scalar</code> type anyway</a>, so the Python double type is already casted to <code>float32</code> when we are using <code>float32</code> anyway.</p>", "body_text": "@gchanan I think it's better like this.\nPlus, current tensor/number operations in TH use the scalar type anyway, so the Python double type is already casted to float32 when we are using float32 anyway.", "body": "@gchanan I think it's better like this.\r\n\r\nPlus, current `tensor`/`number` [operations in TH use the `scalar` type anyway](https://github.com/pytorch/pytorch/blob/master/aten/src/TH/generic/THTensorMath.h#L37-L50), so the Python double type is already casted to `float32` when we are using `float32` anyway."}