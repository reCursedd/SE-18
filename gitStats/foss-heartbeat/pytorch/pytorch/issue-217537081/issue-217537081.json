{"url": "https://api.github.com/repos/pytorch/pytorch/issues/1126", "repository_url": "https://api.github.com/repos/pytorch/pytorch", "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/1126/labels{/name}", "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/1126/comments", "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/1126/events", "html_url": "https://github.com/pytorch/pytorch/issues/1126", "id": 217537081, "node_id": "MDU6SXNzdWUyMTc1MzcwODE=", "number": 1126, "title": "Raise AttributeError in Module.__getattr__ ?", "user": {"login": "elanmart", "id": 10772830, "node_id": "MDQ6VXNlcjEwNzcyODMw", "avatar_url": "https://avatars3.githubusercontent.com/u/10772830?v=4", "gravatar_id": "", "url": "https://api.github.com/users/elanmart", "html_url": "https://github.com/elanmart", "followers_url": "https://api.github.com/users/elanmart/followers", "following_url": "https://api.github.com/users/elanmart/following{/other_user}", "gists_url": "https://api.github.com/users/elanmart/gists{/gist_id}", "starred_url": "https://api.github.com/users/elanmart/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/elanmart/subscriptions", "organizations_url": "https://api.github.com/users/elanmart/orgs", "repos_url": "https://api.github.com/users/elanmart/repos", "events_url": "https://api.github.com/users/elanmart/events{/privacy}", "received_events_url": "https://api.github.com/users/elanmart/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 424131847, "node_id": "MDU6TGFiZWw0MjQxMzE4NDc=", "url": "https://api.github.com/repos/pytorch/pytorch/labels/bug", "name": "bug", "color": "b60205", "default": true}, {"id": 443484050, "node_id": "MDU6TGFiZWw0NDM0ODQwNTA=", "url": "https://api.github.com/repos/pytorch/pytorch/labels/medium%20priority", "name": "medium priority", "color": "fbca04", "default": false}], "state": "closed", "locked": false, "assignee": {"login": "apaszke", "id": 4583066, "node_id": "MDQ6VXNlcjQ1ODMwNjY=", "avatar_url": "https://avatars3.githubusercontent.com/u/4583066?v=4", "gravatar_id": "", "url": "https://api.github.com/users/apaszke", "html_url": "https://github.com/apaszke", "followers_url": "https://api.github.com/users/apaszke/followers", "following_url": "https://api.github.com/users/apaszke/following{/other_user}", "gists_url": "https://api.github.com/users/apaszke/gists{/gist_id}", "starred_url": "https://api.github.com/users/apaszke/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/apaszke/subscriptions", "organizations_url": "https://api.github.com/users/apaszke/orgs", "repos_url": "https://api.github.com/users/apaszke/repos", "events_url": "https://api.github.com/users/apaszke/events{/privacy}", "received_events_url": "https://api.github.com/users/apaszke/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "apaszke", "id": 4583066, "node_id": "MDQ6VXNlcjQ1ODMwNjY=", "avatar_url": "https://avatars3.githubusercontent.com/u/4583066?v=4", "gravatar_id": "", "url": "https://api.github.com/users/apaszke", "html_url": "https://github.com/apaszke", "followers_url": "https://api.github.com/users/apaszke/followers", "following_url": "https://api.github.com/users/apaszke/following{/other_user}", "gists_url": "https://api.github.com/users/apaszke/gists{/gist_id}", "starred_url": "https://api.github.com/users/apaszke/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/apaszke/subscriptions", "organizations_url": "https://api.github.com/users/apaszke/orgs", "repos_url": "https://api.github.com/users/apaszke/repos", "events_url": "https://api.github.com/users/apaszke/events{/privacy}", "received_events_url": "https://api.github.com/users/apaszke/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 2, "created_at": "2017-03-28T12:03:31Z", "updated_at": "2017-09-20T16:45:41Z", "closed_at": "2017-04-03T14:39:20Z", "author_association": "CONTRIBUTOR", "body_html": "<p>Hi,</p>\n<p>Is there a reason why <code>Module.__getattr__</code> calls <code>object.__getattr__</code> and doesn't raise <code>AttributeError</code>?<br>\nIt would improve readability of error messages. Currently, when users makes a typo and tries to call<br>\n<code>model.cdua()</code> instead of <code>model.cuda()</code>, a rather unhelpful message appears:</p>\n<div class=\"highlight highlight-source-python\"><pre><span class=\"pl-c1\">...</span><span class=\"pl-k\">/</span>torch<span class=\"pl-k\">/</span>nn<span class=\"pl-k\">/</span>modules<span class=\"pl-k\">/</span>module.py <span class=\"pl-k\">in</span> <span class=\"pl-c1\">__getattr__</span>(<span class=\"pl-c1\">self</span>, name)\n    <span class=\"pl-c1\">235</span>             <span class=\"pl-k\">if</span> name <span class=\"pl-k\">in</span> modules:\n    <span class=\"pl-c1\">236</span>                 <span class=\"pl-k\">return</span> modules[name]\n<span class=\"pl-ii\">--</span><span class=\"pl-k\">&gt;</span> <span class=\"pl-c1\">237</span>         <span class=\"pl-k\">return</span> <span class=\"pl-c1\">object</span>.<span class=\"pl-c1\">__getattr__</span>(<span class=\"pl-c1\">self</span>, name)\n    <span class=\"pl-c1\">238</span> \n    <span class=\"pl-c1\">239</span>     <span class=\"pl-k\">def</span> <span class=\"pl-c1\">__setattr__</span>(<span class=\"pl-smi\"><span class=\"pl-smi\">self</span></span>, <span class=\"pl-smi\">name</span>, <span class=\"pl-smi\">value</span>):\n\n<span class=\"pl-c1\">AttributeError</span>: <span class=\"pl-c1\">type</span> <span class=\"pl-c1\">object</span> <span class=\"pl-s\"><span class=\"pl-pds\">'</span>object<span class=\"pl-pds\">'</span></span> has no attribute <span class=\"pl-s\"><span class=\"pl-pds\">'</span>__getattr__<span class=\"pl-pds\">'</span></span></pre></div>\n<p>So perhaps it would be nice to just call</p>\n<div class=\"highlight highlight-source-python\"><pre><span class=\"pl-k\">raise</span> <span class=\"pl-c1\">AttributeError</span>(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>'Module' object has no attribute '<span class=\"pl-c1\">{name}</span>'<span class=\"pl-pds\">\"</span></span>.format(<span class=\"pl-v\">name</span><span class=\"pl-k\">=</span>name))</pre></div>\n<p>ref<br>\n<div class=\"border rounded-1 my-2\">\n  <div class=\"f6 px-3 py-2 lh-condensed border-bottom bg-gray-light\">\n    <p class=\"mb-0 text-bold\">\n      <a href=\"https://github.com/pytorch/pytorch/blob/3eab8a71e279cad0326f4bfb47e3d7ad1d67b816/torch/nn/modules/module.py#L237\">pytorch/torch/nn/modules/module.py</a>\n    </p>\n    <p class=\"mb-0 text-gray-light\">\n         Line 237\n      in\n      <a data-pjax=\"true\" class=\"commit-tease-sha\" href=\"/pytorch/pytorch/commit/3eab8a71e279cad0326f4bfb47e3d7ad1d67b816\">3eab8a7</a>\n    </p>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper blob-wrapper-embedded data\">\n    <table class=\"highlight tab-size mb-0 js-file-line-container\" data-tab-size=\"8\">\n\n        <tbody><tr class=\"border-0\">\n          <td id=\"L237\" class=\"blob-num border-0 px-3 py-0 bg-white js-line-number\" data-line-number=\"237\"></td>\n          <td id=\"LC237\" class=\"blob-code border-0 px-3 py-0 bg-white blob-code-inner js-file-line\"> <span class=\"pl-k\">return</span> <span class=\"pl-c1\">object</span>.<span class=\"pl-c1\">__getattr__</span>(<span class=\"pl-c1\">self</span>, name) </td>\n        </tr>\n    </tbody></table>\n  </div>\n</div>\n</p>", "body_text": "Hi,\nIs there a reason why Module.__getattr__ calls object.__getattr__ and doesn't raise AttributeError?\nIt would improve readability of error messages. Currently, when users makes a typo and tries to call\nmodel.cdua() instead of model.cuda(), a rather unhelpful message appears:\n.../torch/nn/modules/module.py in __getattr__(self, name)\n    235             if name in modules:\n    236                 return modules[name]\n--> 237         return object.__getattr__(self, name)\n    238 \n    239     def __setattr__(self, name, value):\n\nAttributeError: type object 'object' has no attribute '__getattr__'\nSo perhaps it would be nice to just call\nraise AttributeError(\"'Module' object has no attribute '{name}'\".format(name=name))\nref\n\n  \n    \n      pytorch/torch/nn/modules/module.py\n    \n    \n         Line 237\n      in\n      3eab8a7\n    \n    \n    \n    \n\n        \n          \n           return object.__getattr__(self, name)", "body": "Hi, \r\n\r\nIs there a reason why `Module.__getattr__` calls `object.__getattr__` and doesn't raise `AttributeError`?\r\nIt would improve readability of error messages. Currently, when users makes a typo and tries to call \r\n`model.cdua()` instead of `model.cuda()`, a rather unhelpful message appears:\r\n\r\n```python\r\n.../torch/nn/modules/module.py in __getattr__(self, name)\r\n    235             if name in modules:\r\n    236                 return modules[name]\r\n--> 237         return object.__getattr__(self, name)\r\n    238 \r\n    239     def __setattr__(self, name, value):\r\n\r\nAttributeError: type object 'object' has no attribute '__getattr__'\r\n```\r\n\r\nSo perhaps it would be nice to just call \r\n```python\r\nraise AttributeError(\"'Module' object has no attribute '{name}'\".format(name=name))\r\n```\r\n\r\nref\r\nhttps://github.com/pytorch/pytorch/blob/3eab8a71e279cad0326f4bfb47e3d7ad1d67b816/torch/nn/modules/module.py#L237\r\n"}