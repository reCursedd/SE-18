{"url": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/155054531", "pull_request_review_id": 81310451, "id": 155054531, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE1NTA1NDUzMQ==", "diff_hunk": "@@ -220,6 +232,18 @@ def _test_timeout():\n         finally:\n             p.terminate()\n \n+    def test_worker_init_fn(self):\n+        # test custom init function\n+        def init_fn(worker_id):\n+            torch.manual_seed(12345)\n+\n+        dataset = SeedDataset(4)\n+        dataloader = DataLoader(dataset, batch_size=2, num_workers=2,\n+                                worker_init_fn=init_fn)\n+        for batch in dataloader:\n+            self.assertEqual(12345, batch[0])\n+            self.assertEqual(12345, batch[1])", "path": "test/test_dataloader.py", "position": 65, "original_position": 33, "commit_id": "6228322172cc8bf51f1ccf1369e20c1e489bca06", "original_commit_id": "a677690c83b9ba0f545445fcbef2bcf3bbb462d2", "user": {"login": "apaszke", "id": 4583066, "node_id": "MDQ6VXNlcjQ1ODMwNjY=", "avatar_url": "https://avatars3.githubusercontent.com/u/4583066?v=4", "gravatar_id": "", "url": "https://api.github.com/users/apaszke", "html_url": "https://github.com/apaszke", "followers_url": "https://api.github.com/users/apaszke/followers", "following_url": "https://api.github.com/users/apaszke/following{/other_user}", "gists_url": "https://api.github.com/users/apaszke/gists{/gist_id}", "starred_url": "https://api.github.com/users/apaszke/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/apaszke/subscriptions", "organizations_url": "https://api.github.com/users/apaszke/orgs", "repos_url": "https://api.github.com/users/apaszke/repos", "events_url": "https://api.github.com/users/apaszke/events{/privacy}", "received_events_url": "https://api.github.com/users/apaszke/received_events", "type": "User", "site_admin": false}, "body": "Ohh I see, that makes sense. One way would be to bake some multiprocess synchronization primitives into the dataset object (e.g. a barrier).", "created_at": "2017-12-05T19:38:46Z", "updated_at": "2018-11-23T15:37:07Z", "html_url": "https://github.com/pytorch/pytorch/pull/4018#discussion_r155054531", "pull_request_url": "https://api.github.com/repos/pytorch/pytorch/pulls/4018", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/155054531"}, "html": {"href": "https://github.com/pytorch/pytorch/pull/4018#discussion_r155054531"}, "pull_request": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/4018"}}, "body_html": "<p>Ohh I see, that makes sense. One way would be to bake some multiprocess synchronization primitives into the dataset object (e.g. a barrier).</p>", "body_text": "Ohh I see, that makes sense. One way would be to bake some multiprocess synchronization primitives into the dataset object (e.g. a barrier).", "in_reply_to_id": 155051784}