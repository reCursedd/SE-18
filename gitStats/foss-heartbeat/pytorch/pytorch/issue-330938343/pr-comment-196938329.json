{"url": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/196938329", "pull_request_review_id": 130583826, "id": 196938329, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5NjkzODMyOQ==", "diff_hunk": "@@ -0,0 +1,73 @@\n+#include <torch/torch.h>\n+#include <cuda.h>\n+#include <torch/torch.h>\n+#include <ATen/ATen.h>\n+#include <ATen/TensorUtils.h>\n+#include <ATen/cudnn/Descriptors.h>\n+#include <ATen/cudnn/Exceptions.h>\n+#include <ATen/cudnn/Handles.h>\n+#include <torch/csrc/cuda/cuda_check.h>\n+#include <torch/torch.h>\n+#include <iostream>\n+\n+using namespace at;\n+using namespace std;\n+using namespace at::native;\n+const char *cudnn_relu_name = \"cudnn_relu\";\n+\n+// Check arguments to cudnn_relu\n+int cudnn_relu_check(const Tensor &inputs, const Tensor &outputs) {\n+  // Create TensorArgs\n+  TensorArg arg_inputs(inputs, \"inputs\", 0);\n+  TensorArg arg_outputs(outputs, \"outputs\", 1);\n+  // Check arguments\n+  checkContiguous(cudnn_relu_name, arg_inputs);\n+  checkScalarType(cudnn_relu_name, arg_inputs, ScalarType::Float);                      \\\n+  checkBackend(cudnn_relu_name, arg_inputs.tensor, Backend::CUDA);\n+  checkContiguous(cudnn_relu_name, arg_outputs);\n+  checkScalarType(cudnn_relu_name, arg_outputs, ScalarType::Float);                      \\\n+  checkBackend(cudnn_relu_name, arg_outputs.tensor, Backend::CUDA);\n+  checkSameSize(cudnn_relu_name, arg_inputs, arg_outputs);\n+  return 0;\n+}\n+\n+int cudnn_relu(const Tensor& inputs, const Tensor& outputs) {\n+  //Check inputs\n+  cudnn_relu_check(inputs, outputs);\n+  // Declarations\n+  cudnnHandle_t cuDnn = getCudnnHandle();\n+  TensorDescriptor* input_tensor_desc = new TensorDescriptor(inputs, 4);\n+  // 4 is minium size for TensorDescriptor\n+  cudnnActivationDescriptor_t activationDesc;\n+  cudnnActivationMode_t mode = CUDNN_ACTIVATION_RELU;\n+  cudnnNanPropagation_t reluNanOpt = CUDNN_PROPAGATE_NAN;\n+  double coef = 1.;\n+  float alpha = 1.;\n+  float beta = 0.;\n+  // Activation descriptor\n+  CUDNN_CHECK(cudnnCreateActivationDescriptor(&activationDesc));\n+  CUDNN_CHECK(cudnnSetActivationDescriptor(\n+      activationDesc,\n+      mode,\n+      reluNanOpt,\n+      coef));\n+  //Apply", "path": "test/cpp_extensions/cudnn_extension.cpp", "position": null, "original_position": 54, "commit_id": "a81a2b57870ae6fb255b386cb05439a522839499", "original_commit_id": "33464117ad10b41f9ea5d8fed83ff084b0527c63", "user": {"login": "bstriner", "id": 12462956, "node_id": "MDQ6VXNlcjEyNDYyOTU2", "avatar_url": "https://avatars3.githubusercontent.com/u/12462956?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bstriner", "html_url": "https://github.com/bstriner", "followers_url": "https://api.github.com/users/bstriner/followers", "following_url": "https://api.github.com/users/bstriner/following{/other_user}", "gists_url": "https://api.github.com/users/bstriner/gists{/gist_id}", "starred_url": "https://api.github.com/users/bstriner/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bstriner/subscriptions", "organizations_url": "https://api.github.com/users/bstriner/orgs", "repos_url": "https://api.github.com/users/bstriner/repos", "events_url": "https://api.github.com/users/bstriner/events{/privacy}", "received_events_url": "https://api.github.com/users/bstriner/received_events", "type": "User", "site_admin": false}, "body": "More for visually breaking things up than information, but I can toss it", "created_at": "2018-06-20T20:51:41Z", "updated_at": "2018-11-23T15:45:56Z", "html_url": "https://github.com/pytorch/pytorch/pull/8313#discussion_r196938329", "pull_request_url": "https://api.github.com/repos/pytorch/pytorch/pulls/8313", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/196938329"}, "html": {"href": "https://github.com/pytorch/pytorch/pull/8313#discussion_r196938329"}, "pull_request": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/8313"}}, "body_html": "<p>More for visually breaking things up than information, but I can toss it</p>", "body_text": "More for visually breaking things up than information, but I can toss it", "in_reply_to_id": 196894848}