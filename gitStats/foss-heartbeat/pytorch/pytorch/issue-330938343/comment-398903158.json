{"url": "https://api.github.com/repos/pytorch/pytorch/issues/comments/398903158", "html_url": "https://github.com/pytorch/pytorch/pull/8313#issuecomment-398903158", "issue_url": "https://api.github.com/repos/pytorch/pytorch/issues/8313", "id": 398903158, "node_id": "MDEyOklzc3VlQ29tbWVudDM5ODkwMzE1OA==", "user": {"login": "goldsborough", "id": 6429851, "node_id": "MDQ6VXNlcjY0Mjk4NTE=", "avatar_url": "https://avatars3.githubusercontent.com/u/6429851?v=4", "gravatar_id": "", "url": "https://api.github.com/users/goldsborough", "html_url": "https://github.com/goldsborough", "followers_url": "https://api.github.com/users/goldsborough/followers", "following_url": "https://api.github.com/users/goldsborough/following{/other_user}", "gists_url": "https://api.github.com/users/goldsborough/gists{/gist_id}", "starred_url": "https://api.github.com/users/goldsborough/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/goldsborough/subscriptions", "organizations_url": "https://api.github.com/users/goldsborough/orgs", "repos_url": "https://api.github.com/users/goldsborough/repos", "events_url": "https://api.github.com/users/goldsborough/events{/privacy}", "received_events_url": "https://api.github.com/users/goldsborough/received_events", "type": "User", "site_admin": false}, "created_at": "2018-06-20T21:28:04Z", "updated_at": "2018-06-20T21:28:04Z", "author_association": "CONTRIBUTOR", "body_html": "<p>Not all users using C++ extensions will be compiling PyTorch from source however. So there may not be any cmake stuff to pull from.</p>\n<p>I think it's ok to add <code>with_cudnn</code> and assume it is in <code>CUDA_HOME</code>. If users have complicated setups, they can always set <code>with_cudnn=False</code> and pass the libraries themselves, that's totally fine.</p>", "body_text": "Not all users using C++ extensions will be compiling PyTorch from source however. So there may not be any cmake stuff to pull from.\nI think it's ok to add with_cudnn and assume it is in CUDA_HOME. If users have complicated setups, they can always set with_cudnn=False and pass the libraries themselves, that's totally fine.", "body": "Not all users using C++ extensions will be compiling PyTorch from source however. So there may not be any cmake stuff to pull from.\r\n\r\nI think it's ok to add `with_cudnn` and assume it is in `CUDA_HOME`. If users have complicated setups, they can always set `with_cudnn=False` and pass the libraries themselves, that's totally fine."}