{"url": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/159958579", "pull_request_review_id": 86998764, "id": 159958579, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE1OTk1ODU3OQ==", "diff_hunk": "@@ -247,10 +237,10 @@\n - name: gather(Tensor self, int64_t dim, Tensor index)\n   self: grad.type().zeros(self.sizes()).scatter_add_(dim, index, grad)\n \n-- name: ge(Tensor self, Scalar other)\n+- name: ge_(Tensor self, Scalar other)", "path": "tools/autograd/derivatives.yaml", "position": 52, "original_position": 52, "commit_id": "e135e7863dad9e6c6fc43085459880f5ad3d0126", "original_commit_id": "202fd3eb9a2f59e7d1460f03beb5e8026164210d", "user": {"login": "colesbury", "id": 655866, "node_id": "MDQ6VXNlcjY1NTg2Ng==", "avatar_url": "https://avatars1.githubusercontent.com/u/655866?v=4", "gravatar_id": "", "url": "https://api.github.com/users/colesbury", "html_url": "https://github.com/colesbury", "followers_url": "https://api.github.com/users/colesbury/followers", "following_url": "https://api.github.com/users/colesbury/following{/other_user}", "gists_url": "https://api.github.com/users/colesbury/gists{/gist_id}", "starred_url": "https://api.github.com/users/colesbury/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/colesbury/subscriptions", "organizations_url": "https://api.github.com/users/colesbury/orgs", "repos_url": "https://api.github.com/users/colesbury/repos", "events_url": "https://api.github.com/users/colesbury/events{/privacy}", "received_events_url": "https://api.github.com/users/colesbury/received_events", "type": "User", "site_admin": false}, "body": "I'm not a fan of file-level comments that describe what changed since a while ago. They're only relevant to a few people (pretty much the people on this PR) and only for a little while. They're better placed in commit messages.\r\n\r\nEverything in Declarations.yaml is bound in `VariableType.cpp` with the exception of `_out` variants, which will be added soon.\r\n\r\n`should_generate_python_binding` decides what has Python-level bindings. Some functions are manually excluded by `SKIP_PYTHON_BINDINGS`. We currently don't Python generate bindings for namespace-only (i.e. `at::`) functions, but that will change soon.\r\n\r\n`derivatives.yaml` already describes binding of derivatives. It doesn't describe Python bindings or whether a function is overridden in VariableType.cpp because it doesn't affect those things.", "created_at": "2018-01-05T19:20:34Z", "updated_at": "2018-11-23T15:37:52Z", "html_url": "https://github.com/pytorch/pytorch/pull/4487#discussion_r159958579", "pull_request_url": "https://api.github.com/repos/pytorch/pytorch/pulls/4487", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/159958579"}, "html": {"href": "https://github.com/pytorch/pytorch/pull/4487#discussion_r159958579"}, "pull_request": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/4487"}}, "body_html": "<p>I'm not a fan of file-level comments that describe what changed since a while ago. They're only relevant to a few people (pretty much the people on this PR) and only for a little while. They're better placed in commit messages.</p>\n<p>Everything in Declarations.yaml is bound in <code>VariableType.cpp</code> with the exception of <code>_out</code> variants, which will be added soon.</p>\n<p><code>should_generate_python_binding</code> decides what has Python-level bindings. Some functions are manually excluded by <code>SKIP_PYTHON_BINDINGS</code>. We currently don't Python generate bindings for namespace-only (i.e. <code>at::</code>) functions, but that will change soon.</p>\n<p><code>derivatives.yaml</code> already describes binding of derivatives. It doesn't describe Python bindings or whether a function is overridden in VariableType.cpp because it doesn't affect those things.</p>", "body_text": "I'm not a fan of file-level comments that describe what changed since a while ago. They're only relevant to a few people (pretty much the people on this PR) and only for a little while. They're better placed in commit messages.\nEverything in Declarations.yaml is bound in VariableType.cpp with the exception of _out variants, which will be added soon.\nshould_generate_python_binding decides what has Python-level bindings. Some functions are manually excluded by SKIP_PYTHON_BINDINGS. We currently don't Python generate bindings for namespace-only (i.e. at::) functions, but that will change soon.\nderivatives.yaml already describes binding of derivatives. It doesn't describe Python bindings or whether a function is overridden in VariableType.cpp because it doesn't affect those things.", "in_reply_to_id": 159938279}