{"url": "https://api.github.com/repos/pytorch/pytorch/issues/comments/355565060", "html_url": "https://github.com/pytorch/pytorch/pull/4487#issuecomment-355565060", "issue_url": "https://api.github.com/repos/pytorch/pytorch/issues/4487", "id": 355565060, "node_id": "MDEyOklzc3VlQ29tbWVudDM1NTU2NTA2MA==", "user": {"login": "ezyang", "id": 13564, "node_id": "MDQ6VXNlcjEzNTY0", "avatar_url": "https://avatars0.githubusercontent.com/u/13564?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ezyang", "html_url": "https://github.com/ezyang", "followers_url": "https://api.github.com/users/ezyang/followers", "following_url": "https://api.github.com/users/ezyang/following{/other_user}", "gists_url": "https://api.github.com/users/ezyang/gists{/gist_id}", "starred_url": "https://api.github.com/users/ezyang/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ezyang/subscriptions", "organizations_url": "https://api.github.com/users/ezyang/orgs", "repos_url": "https://api.github.com/users/ezyang/repos", "events_url": "https://api.github.com/users/ezyang/events{/privacy}", "received_events_url": "https://api.github.com/users/ezyang/received_events", "type": "User", "site_admin": false}, "created_at": "2018-01-05T14:18:42Z", "updated_at": "2018-01-05T14:18:42Z", "author_association": "CONTRIBUTOR", "body_html": "<p>The indentation of the new autogenerated code looks slightly botched:</p>\n<pre><code>@@ -4501,48 +4518,45 @@\n     auto&amp; self_ = unpack(self, \"self\", 0);\n     auto&amp; vec2_ = unpack(vec2, \"vec2\", 1);\n     std::shared_ptr&lt;GerBackward&gt; grad_fn;\n-    auto requires_grad = compute_requires_grad({ self, vec2 });\n-    if (requires_grad) {\n+  if (compute_requires_grad({ self, vec2 })) {\n       grad_fn = std::make_shared&lt;GerBackward&gt;();\n       grad_fn-&gt;next_functions = compute_next_functions({ self, vec2 });\n       grad_fn-&gt;vec2_ = SavedVariable(vec2, false);\n       grad_fn-&gt;self_ = SavedVariable(self, false);\n     }\n-    auto ret = as_variable(baseType-&gt;ger(self_, vec2_));\n-    set_history(ret, grad_fn);\n+  auto result = as_variable(baseType-&gt;ger(self_, vec2_));\n+  set_history(result, grad_fn);\n     if (jit::tracer::isTracing( self, vec2 )) {\n-      jit::Node *n = jit::tracer::recordTrace( \"ger\", { self, vec2 }, { ret } );\n+    jit::Node *n = jit::tracer::recordTrace( \"ger\", { self, vec2 }, { result } );\n       (void)n;\n     }\n-    return Tensor(std::move(ret));\n+  return result;\n }\n</code></pre>\n<p>You're losing a level of indentation at the first if statement.</p>", "body_text": "The indentation of the new autogenerated code looks slightly botched:\n@@ -4501,48 +4518,45 @@\n     auto& self_ = unpack(self, \"self\", 0);\n     auto& vec2_ = unpack(vec2, \"vec2\", 1);\n     std::shared_ptr<GerBackward> grad_fn;\n-    auto requires_grad = compute_requires_grad({ self, vec2 });\n-    if (requires_grad) {\n+  if (compute_requires_grad({ self, vec2 })) {\n       grad_fn = std::make_shared<GerBackward>();\n       grad_fn->next_functions = compute_next_functions({ self, vec2 });\n       grad_fn->vec2_ = SavedVariable(vec2, false);\n       grad_fn->self_ = SavedVariable(self, false);\n     }\n-    auto ret = as_variable(baseType->ger(self_, vec2_));\n-    set_history(ret, grad_fn);\n+  auto result = as_variable(baseType->ger(self_, vec2_));\n+  set_history(result, grad_fn);\n     if (jit::tracer::isTracing( self, vec2 )) {\n-      jit::Node *n = jit::tracer::recordTrace( \"ger\", { self, vec2 }, { ret } );\n+    jit::Node *n = jit::tracer::recordTrace( \"ger\", { self, vec2 }, { result } );\n       (void)n;\n     }\n-    return Tensor(std::move(ret));\n+  return result;\n }\n\nYou're losing a level of indentation at the first if statement.", "body": "The indentation of the new autogenerated code looks slightly botched:\r\n\r\n```\r\n@@ -4501,48 +4518,45 @@\r\n     auto& self_ = unpack(self, \"self\", 0);\r\n     auto& vec2_ = unpack(vec2, \"vec2\", 1);\r\n     std::shared_ptr<GerBackward> grad_fn;\r\n-    auto requires_grad = compute_requires_grad({ self, vec2 });\r\n-    if (requires_grad) {\r\n+  if (compute_requires_grad({ self, vec2 })) {\r\n       grad_fn = std::make_shared<GerBackward>();\r\n       grad_fn->next_functions = compute_next_functions({ self, vec2 });\r\n       grad_fn->vec2_ = SavedVariable(vec2, false);\r\n       grad_fn->self_ = SavedVariable(self, false);\r\n     }\r\n-    auto ret = as_variable(baseType->ger(self_, vec2_));\r\n-    set_history(ret, grad_fn);\r\n+  auto result = as_variable(baseType->ger(self_, vec2_));\r\n+  set_history(result, grad_fn);\r\n     if (jit::tracer::isTracing( self, vec2 )) {\r\n-      jit::Node *n = jit::tracer::recordTrace( \"ger\", { self, vec2 }, { ret } );\r\n+    jit::Node *n = jit::tracer::recordTrace( \"ger\", { self, vec2 }, { result } );\r\n       (void)n;\r\n     }\r\n-    return Tensor(std::move(ret));\r\n+  return result;\r\n }\r\n```\r\n\r\nYou're losing a level of indentation at the first if statement."}