{"url": "https://api.github.com/repos/pytorch/pytorch/issues/5101", "repository_url": "https://api.github.com/repos/pytorch/pytorch", "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/5101/labels{/name}", "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/5101/comments", "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/5101/events", "html_url": "https://github.com/pytorch/pytorch/issues/5101", "id": 295037097, "node_id": "MDU6SXNzdWUyOTUwMzcwOTc=", "number": 5101, "title": "ONNX export failed on Constant because torch.onnx.symbolic.Constant does not exist ", "user": {"login": "Dnekhaev", "id": 22977714, "node_id": "MDQ6VXNlcjIyOTc3NzE0", "avatar_url": "https://avatars3.githubusercontent.com/u/22977714?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Dnekhaev", "html_url": "https://github.com/Dnekhaev", "followers_url": "https://api.github.com/users/Dnekhaev/followers", "following_url": "https://api.github.com/users/Dnekhaev/following{/other_user}", "gists_url": "https://api.github.com/users/Dnekhaev/gists{/gist_id}", "starred_url": "https://api.github.com/users/Dnekhaev/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Dnekhaev/subscriptions", "organizations_url": "https://api.github.com/users/Dnekhaev/orgs", "repos_url": "https://api.github.com/users/Dnekhaev/repos", "events_url": "https://api.github.com/users/Dnekhaev/events{/privacy}", "received_events_url": "https://api.github.com/users/Dnekhaev/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 693805995, "node_id": "MDU6TGFiZWw2OTM4MDU5OTU=", "url": "https://api.github.com/repos/pytorch/pytorch/labels/onnx", "name": "onnx", "color": "e99695", "default": false}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2018-02-07T07:47:16Z", "updated_at": "2018-03-01T17:09:05Z", "closed_at": "2018-03-01T17:09:05Z", "author_association": "NONE", "body_html": "<p>Hi!</p>\n<ul>\n<li>\n<p>OS: Linux</p>\n</li>\n<li>\n<p>PyTorch version: 0.4.0a0+ca5071d</p>\n</li>\n<li>\n<p>How you installed PyTorch (conda, pip, source): source</p>\n</li>\n<li>\n<p>Python version: 3.6</p>\n</li>\n<li>\n<p>Context around what you are trying to do<br>\nI am trying to convert layer with torch.index_select() operation to onnx</p>\n</li>\n<li>\n<p>A script to reproduce the bug. Please try to provide as minimal of a test case as possible.</p>\n</li>\n</ul>\n<pre><code>import torch\nfrom torch import nn\nfrom torch.autograd import Variable\n\nclass  IndexLayer(nn.Module): \n    def __init__(self):\n        super(IndexLayer, self).__init__()\n        self.dim = 1\n        self.index = [0,4,8,12,1,5,9,13,2,6,10,14,3,7,11,15]\n    def forward(self, x):\n        x = torch.index_select(x, dim=self.dim, index=Variable(torch.LongTensor(self.index)))\n        return x\n\ndummy_input = Variable(torch.randn(1,16,14,14), volatile=True)\nmodel = IndexLayer()\ntorch.onnx.export(model, dummy_input, \"./IndexLayer.pb\", verbose=True)\n</code></pre>\n<ul>\n<li>Error messages and/or stack traces of the bug</li>\n</ul>\n<pre><code>graph(%0 : Float(1, 16, 14, 14)) {\n  %1 : Long(16) = Constant[value=&lt;Tensor&gt;](), scope: IndexLayer\n  %2 : Float(1, 16, 14, 14) = Gather[axis=1](%0, %1), scope: IndexLayer\n  return (%2);\n}\nUserWarning: ONNX export failed on Constant because torch.onnx.symbolic.Constant does not exist\n  .format(op_name, op_name))\n</code></pre>\n<p>What is the right way to export torch.index_select() operation?</p>", "body_text": "Hi!\n\n\nOS: Linux\n\n\nPyTorch version: 0.4.0a0+ca5071d\n\n\nHow you installed PyTorch (conda, pip, source): source\n\n\nPython version: 3.6\n\n\nContext around what you are trying to do\nI am trying to convert layer with torch.index_select() operation to onnx\n\n\nA script to reproduce the bug. Please try to provide as minimal of a test case as possible.\n\n\nimport torch\nfrom torch import nn\nfrom torch.autograd import Variable\n\nclass  IndexLayer(nn.Module): \n    def __init__(self):\n        super(IndexLayer, self).__init__()\n        self.dim = 1\n        self.index = [0,4,8,12,1,5,9,13,2,6,10,14,3,7,11,15]\n    def forward(self, x):\n        x = torch.index_select(x, dim=self.dim, index=Variable(torch.LongTensor(self.index)))\n        return x\n\ndummy_input = Variable(torch.randn(1,16,14,14), volatile=True)\nmodel = IndexLayer()\ntorch.onnx.export(model, dummy_input, \"./IndexLayer.pb\", verbose=True)\n\n\nError messages and/or stack traces of the bug\n\ngraph(%0 : Float(1, 16, 14, 14)) {\n  %1 : Long(16) = Constant[value=<Tensor>](), scope: IndexLayer\n  %2 : Float(1, 16, 14, 14) = Gather[axis=1](%0, %1), scope: IndexLayer\n  return (%2);\n}\nUserWarning: ONNX export failed on Constant because torch.onnx.symbolic.Constant does not exist\n  .format(op_name, op_name))\n\nWhat is the right way to export torch.index_select() operation?", "body": "Hi!\r\n\r\n- OS: Linux\r\n- PyTorch version: 0.4.0a0+ca5071d\r\n- How you installed PyTorch (conda, pip, source): source\r\n- Python version: 3.6\r\n\r\n- Context around what you are trying to do\r\nI am trying to convert layer with torch.index_select() operation to onnx\r\n\r\n- A script to reproduce the bug. Please try to provide as minimal of a test case as possible.\r\n```\r\nimport torch\r\nfrom torch import nn\r\nfrom torch.autograd import Variable\r\n\r\nclass  IndexLayer(nn.Module): \r\n    def __init__(self):\r\n        super(IndexLayer, self).__init__()\r\n        self.dim = 1\r\n        self.index = [0,4,8,12,1,5,9,13,2,6,10,14,3,7,11,15]\r\n    def forward(self, x):\r\n        x = torch.index_select(x, dim=self.dim, index=Variable(torch.LongTensor(self.index)))\r\n        return x\r\n\r\ndummy_input = Variable(torch.randn(1,16,14,14), volatile=True)\r\nmodel = IndexLayer()\r\ntorch.onnx.export(model, dummy_input, \"./IndexLayer.pb\", verbose=True)\r\n```\r\n\r\n- Error messages and/or stack traces of the bug\r\n```\r\ngraph(%0 : Float(1, 16, 14, 14)) {\r\n  %1 : Long(16) = Constant[value=<Tensor>](), scope: IndexLayer\r\n  %2 : Float(1, 16, 14, 14) = Gather[axis=1](%0, %1), scope: IndexLayer\r\n  return (%2);\r\n}\r\nUserWarning: ONNX export failed on Constant because torch.onnx.symbolic.Constant does not exist\r\n  .format(op_name, op_name))\r\n```\r\n\r\nWhat is the right way to export torch.index_select() operation?"}