{"url": "https://api.github.com/repos/pytorch/pytorch/issues/comments/321136978", "html_url": "https://github.com/pytorch/pytorch/issues/1894#issuecomment-321136978", "issue_url": "https://api.github.com/repos/pytorch/pytorch/issues/1894", "id": 321136978, "node_id": "MDEyOklzc3VlQ29tbWVudDMyMTEzNjk3OA==", "user": {"login": "haoransh", "id": 12680986, "node_id": "MDQ6VXNlcjEyNjgwOTg2", "avatar_url": "https://avatars3.githubusercontent.com/u/12680986?v=4", "gravatar_id": "", "url": "https://api.github.com/users/haoransh", "html_url": "https://github.com/haoransh", "followers_url": "https://api.github.com/users/haoransh/followers", "following_url": "https://api.github.com/users/haoransh/following{/other_user}", "gists_url": "https://api.github.com/users/haoransh/gists{/gist_id}", "starred_url": "https://api.github.com/users/haoransh/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/haoransh/subscriptions", "organizations_url": "https://api.github.com/users/haoransh/orgs", "repos_url": "https://api.github.com/users/haoransh/repos", "events_url": "https://api.github.com/users/haoransh/events{/privacy}", "received_events_url": "https://api.github.com/users/haoransh/received_events", "type": "User", "site_admin": false}, "created_at": "2017-08-09T02:44:49Z", "updated_at": "2017-08-09T02:44:49Z", "author_association": "NONE", "body_html": "<p>@ThaHypnotoad <a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=8789013\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/nicci1771\">@nicci1771</a> I met similar problem too. Otherwise I wonder how to implement similar features when I calculate the 'true negative' values like <code>torch.sum((torch.eq(pred, targets) &amp; (torch.neg(pred)))</code> but the neg method is not implemented on ByteTensor. Actually I wonder whether there exists an alternative method to implement same features?</p>", "body_text": "@ThaHypnotoad @nicci1771 I met similar problem too. Otherwise I wonder how to implement similar features when I calculate the 'true negative' values like torch.sum((torch.eq(pred, targets) & (torch.neg(pred))) but the neg method is not implemented on ByteTensor. Actually I wonder whether there exists an alternative method to implement same features?", "body": "@ThaHypnotoad @nicci1771 I met similar problem too. Otherwise I wonder how to implement similar features when I calculate the 'true negative' values like ``torch.sum((torch.eq(pred, targets) & (torch.neg(pred)))`` but the neg method is not implemented on ByteTensor. Actually I wonder whether there exists an alternative method to implement same features?"}