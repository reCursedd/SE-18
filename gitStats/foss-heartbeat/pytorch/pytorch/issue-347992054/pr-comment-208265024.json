{"url": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/208265024", "pull_request_review_id": 144037794, "id": 208265024, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwODI2NTAyNA==", "diff_hunk": "@@ -189,6 +189,14 @@ def default_collate(batch):\n     raise TypeError((error_msg.format(type(batch[0]))))\n \n \n+def select_indices_and_collate(collate_fn, dataset, indices):\n+    if collate_fn == default_collate and isinstance(dataset, torch.utils.data.TensorDataset):\n+        torch_indices = torch.LongTensor(indices)\n+        return [tensor.index_select(0, torch_indices) for tensor in dataset.tensors]", "path": "torch/utils/data/dataloader.py", "position": 16, "original_position": 16, "commit_id": "7247bb5000e5c5cef28b0529f264b1ee1cc6c46f", "original_commit_id": "7247bb5000e5c5cef28b0529f264b1ee1cc6c46f", "user": {"login": "apaszke", "id": 4583066, "node_id": "MDQ6VXNlcjQ1ODMwNjY=", "avatar_url": "https://avatars3.githubusercontent.com/u/4583066?v=4", "gravatar_id": "", "url": "https://api.github.com/users/apaszke", "html_url": "https://github.com/apaszke", "followers_url": "https://api.github.com/users/apaszke/followers", "following_url": "https://api.github.com/users/apaszke/following{/other_user}", "gists_url": "https://api.github.com/users/apaszke/gists{/gist_id}", "starred_url": "https://api.github.com/users/apaszke/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/apaszke/subscriptions", "organizations_url": "https://api.github.com/users/apaszke/orgs", "repos_url": "https://api.github.com/users/apaszke/repos", "events_url": "https://api.github.com/users/apaszke/events{/privacy}", "received_events_url": "https://api.github.com/users/apaszke/received_events", "type": "User", "site_admin": false}, "body": "I'd rather not merge this PR. It complicates the data loader code, for a use case that doesn't really benefit from the abstraction. You can always just use a batch sampler in your loop, and index the tensor manually if you really need this kind of perf.", "created_at": "2018-08-07T14:57:10Z", "updated_at": "2018-11-23T15:48:52Z", "html_url": "https://github.com/pytorch/pytorch/pull/10260#discussion_r208265024", "pull_request_url": "https://api.github.com/repos/pytorch/pytorch/pulls/10260", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/208265024"}, "html": {"href": "https://github.com/pytorch/pytorch/pull/10260#discussion_r208265024"}, "pull_request": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/10260"}}, "body_html": "<p>I'd rather not merge this PR. It complicates the data loader code, for a use case that doesn't really benefit from the abstraction. You can always just use a batch sampler in your loop, and index the tensor manually if you really need this kind of perf.</p>", "body_text": "I'd rather not merge this PR. It complicates the data loader code, for a use case that doesn't really benefit from the abstraction. You can always just use a batch sampler in your loop, and index the tensor manually if you really need this kind of perf.", "in_reply_to_id": 208001234}