{"url": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/204425284", "pull_request_review_id": 139503068, "id": 204425284, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwNDQyNTI4NA==", "diff_hunk": "@@ -197,25 +201,30 @@ void THCTensor_(scatterAdd)(THCState* state, THCTensor *tensor, int dim, THCudaL\n   THCAssertSameGPU(THCTensor_(checkGPU)(state, 2, tensor, src));\n   THCAssertSameGPU(THCudaLongTensor_checkGPU(state, 1, index));\n \n-  THArgCheck(dim >= 0 && dim < THCTensor_(_nDimension)(state, tensor), 2,\n+  THArgCheck(dim >= 0 && dim < THCTensor_(nDimension)(state, tensor), 2,\n              \"Index dimension is out of bounds\");\n-  THArgCheck(THCudaLongTensor__nDimension(state, index) == THCTensor_(_nDimension)(state, src), 3,\n+  THArgCheck(THCudaLongTensor_nDimension(state, index) == THCTensor_(nDimension)(state, src), 3,\n              \"Index tensor must have same dimensions as input tensor\");\n-  THArgCheck(THCTensor_(_nDimension)(state, src) == THCTensor_(_nDimension)(state, tensor), 4,\n+  THArgCheck(THCTensor_(nDimension)(state, src) == THCTensor_(nDimension)(state, tensor), 4,\n              \"Input tensor must have same dimensions as output tensor\");\n-  THLongStorage *indexDims = THCudaLongTensor_newSizeOf(state, index);\n-  THArgCheck(THCTensor_(isSize)(state, src, indexDims), 3,\n-             \"Index tensor must have the same size as input tensor.\");\n-  THLongStorage_free(indexDims);\n \n-  for (int d = 0; d < THCTensor_(_nDimension)(state, tensor); d++) {\n+  for (int d = 0; d < THCTensor_(nDimension)(state, tensor); d++) {\n     if (d != dim) {\n       THArgCheck(THCTensor_(size)(state, tensor, d) == THCTensor_(size)(state, src, d), 4,\n                  \"Input tensor must have same size as output tensor apart from the specified dimension\");\n     }\n+    int64_t indexSizeD = THCudaLongTensor_size(state, index, d);\n+    if (d != dim) {\n+      THArgCheck(indexSizeD <= THCTensor_(size)(state, tensor, d), 3,\n+                 \"Index tensor must not have larger size than output tensor apart from the specified dimension %d, but got index %s output %s\",\n+                 dim, THCudaLongTensor_sizeDesc(state, index).str, THCTensor_(sizeDesc)(state, tensor).str);\n+    }\n+    THArgCheck(indexSizeD <= THCTensor_(size)(state, src, d), 3,\n+               \"Index tensor must not have larger size than input tensor, but got index %s input %s\",\n+               THCudaLongTensor_sizeDesc(state, index).str, THCTensor_(sizeDesc)(state, src).str);", "path": "aten/src/THC/generic/THCTensorScatterGather.cu", "position": 251, "original_position": 251, "commit_id": "2d556598d839b8095bb4efa64f07f1933a10c1c4", "original_commit_id": "2d556598d839b8095bb4efa64f07f1933a10c1c4", "user": {"login": "ezyang", "id": 13564, "node_id": "MDQ6VXNlcjEzNTY0", "avatar_url": "https://avatars0.githubusercontent.com/u/13564?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ezyang", "html_url": "https://github.com/ezyang", "followers_url": "https://api.github.com/users/ezyang/followers", "following_url": "https://api.github.com/users/ezyang/following{/other_user}", "gists_url": "https://api.github.com/users/ezyang/gists{/gist_id}", "starred_url": "https://api.github.com/users/ezyang/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ezyang/subscriptions", "organizations_url": "https://api.github.com/users/ezyang/orgs", "repos_url": "https://api.github.com/users/ezyang/repos", "events_url": "https://api.github.com/users/ezyang/events{/privacy}", "received_events_url": "https://api.github.com/users/ezyang/received_events", "type": "User", "site_admin": false}, "body": "Which test exercises this error?", "created_at": "2018-07-23T14:37:06Z", "updated_at": "2018-11-23T15:47:54Z", "html_url": "https://github.com/pytorch/pytorch/pull/9658#discussion_r204425284", "pull_request_url": "https://api.github.com/repos/pytorch/pytorch/pulls/9658", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/204425284"}, "html": {"href": "https://github.com/pytorch/pytorch/pull/9658#discussion_r204425284"}, "pull_request": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/9658"}}, "body_html": "<p>Which test exercises this error?</p>", "body_text": "Which test exercises this error?"}