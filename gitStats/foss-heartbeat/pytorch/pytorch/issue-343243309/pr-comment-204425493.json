{"url": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/204425493", "pull_request_review_id": 139503324, "id": 204425493, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwNDQyNTQ5Mw==", "diff_hunk": "@@ -13,20 +13,21 @@ THC_API void THCTensor_(sortKeyValueInplace)(THCState* state,\n   THArgCheck(THCTensor_(isSize)(state, key, valueSize), 2,\n              \"Key tensor must have same size as value tensor\");\n   THLongStorage_free(valueSize);\n-  int dims = THCudaLongTensor__nDimension(state, value);\n+  int dims = THCudaLongTensor_nDimension(state, value);\n   THArgCheck(dims <= MAX_CUTORCH_DIMS, 3, CUTORCH_DIM_WARNING);\n-  dims = THCTensor_(_nDimension)(state, key);\n+  dims = THCTensor_(nDimension)(state, key);\n   THArgCheck(dims <= MAX_CUTORCH_DIMS, 2, CUTORCH_DIM_WARNING);\n \n   ptrdiff_t inElements = THCTensor_(nElement)(state, key);\n-  int64_t keySliceSize = THCTensor_(size)(state, key, dim);\n-  ptrdiff_t keySlices = inElements / keySliceSize;\n \n-  if (THCTensor_(_nDimension)(state, key) == 0) {\n+  if (inElements == 0) {\n     // Zero-dim tensor; do nothing", "path": "aten/src/THC/generic/THCTensorSort.cu", "position": 17, "original_position": 17, "commit_id": "2d556598d839b8095bb4efa64f07f1933a10c1c4", "original_commit_id": "2d556598d839b8095bb4efa64f07f1933a10c1c4", "user": {"login": "ezyang", "id": 13564, "node_id": "MDQ6VXNlcjEzNTY0", "avatar_url": "https://avatars0.githubusercontent.com/u/13564?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ezyang", "html_url": "https://github.com/ezyang", "followers_url": "https://api.github.com/users/ezyang/followers", "following_url": "https://api.github.com/users/ezyang/following{/other_user}", "gists_url": "https://api.github.com/users/ezyang/gists{/gist_id}", "starred_url": "https://api.github.com/users/ezyang/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ezyang/subscriptions", "organizations_url": "https://api.github.com/users/ezyang/orgs", "repos_url": "https://api.github.com/users/ezyang/repos", "events_url": "https://api.github.com/users/ezyang/events{/privacy}", "received_events_url": "https://api.github.com/users/ezyang/received_events", "type": "User", "site_admin": false}, "body": "Comment is out of date", "created_at": "2018-07-23T14:37:37Z", "updated_at": "2018-11-23T15:47:54Z", "html_url": "https://github.com/pytorch/pytorch/pull/9658#discussion_r204425493", "pull_request_url": "https://api.github.com/repos/pytorch/pytorch/pulls/9658", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/204425493"}, "html": {"href": "https://github.com/pytorch/pytorch/pull/9658#discussion_r204425493"}, "pull_request": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/9658"}}, "body_html": "<p>Comment is out of date</p>", "body_text": "Comment is out of date"}