{"url": "https://api.github.com/repos/pytorch/pytorch/issues/comments/352173307", "html_url": "https://github.com/pytorch/pytorch/pull/4199#issuecomment-352173307", "issue_url": "https://api.github.com/repos/pytorch/pytorch/issues/4199", "id": 352173307, "node_id": "MDEyOklzc3VlQ29tbWVudDM1MjE3MzMwNw==", "user": {"login": "apaszke", "id": 4583066, "node_id": "MDQ6VXNlcjQ1ODMwNjY=", "avatar_url": "https://avatars3.githubusercontent.com/u/4583066?v=4", "gravatar_id": "", "url": "https://api.github.com/users/apaszke", "html_url": "https://github.com/apaszke", "followers_url": "https://api.github.com/users/apaszke/followers", "following_url": "https://api.github.com/users/apaszke/following{/other_user}", "gists_url": "https://api.github.com/users/apaszke/gists{/gist_id}", "starred_url": "https://api.github.com/users/apaszke/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/apaszke/subscriptions", "organizations_url": "https://api.github.com/users/apaszke/orgs", "repos_url": "https://api.github.com/users/apaszke/repos", "events_url": "https://api.github.com/users/apaszke/events{/privacy}", "received_events_url": "https://api.github.com/users/apaszke/received_events", "type": "User", "site_admin": false}, "created_at": "2017-12-16T09:56:35Z", "updated_at": "2017-12-16T09:56:35Z", "author_association": "MEMBER", "body_html": "<p>Then Lua torch was correct, but we need to be more careful here. I think adding special overloads to THNN functions that do in place and expect outputs for backward (and do all the checks there) are a much safer alternative. That at least keeps the hacks close to the implementation</p>", "body_text": "Then Lua torch was correct, but we need to be more careful here. I think adding special overloads to THNN functions that do in place and expect outputs for backward (and do all the checks there) are a much safer alternative. That at least keeps the hacks close to the implementation", "body": "Then Lua torch was correct, but we need to be more careful here. I think adding special overloads to THNN functions that do in place and expect outputs for backward (and do all the checks there) are a much safer alternative. That at least keeps the hacks close to the implementation "}