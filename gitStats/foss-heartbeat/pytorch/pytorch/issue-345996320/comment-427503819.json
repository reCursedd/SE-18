{"url": "https://api.github.com/repos/pytorch/pytorch/issues/comments/427503819", "html_url": "https://github.com/pytorch/pytorch/issues/10043#issuecomment-427503819", "issue_url": "https://api.github.com/repos/pytorch/pytorch/issues/10043", "id": 427503819, "node_id": "MDEyOklzc3VlQ29tbWVudDQyNzUwMzgxOQ==", "user": {"login": "weiyangfb", "id": 38509346, "node_id": "MDQ6VXNlcjM4NTA5MzQ2", "avatar_url": "https://avatars1.githubusercontent.com/u/38509346?v=4", "gravatar_id": "", "url": "https://api.github.com/users/weiyangfb", "html_url": "https://github.com/weiyangfb", "followers_url": "https://api.github.com/users/weiyangfb/followers", "following_url": "https://api.github.com/users/weiyangfb/following{/other_user}", "gists_url": "https://api.github.com/users/weiyangfb/gists{/gist_id}", "starred_url": "https://api.github.com/users/weiyangfb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/weiyangfb/subscriptions", "organizations_url": "https://api.github.com/users/weiyangfb/orgs", "repos_url": "https://api.github.com/users/weiyangfb/repos", "events_url": "https://api.github.com/users/weiyangfb/events{/privacy}", "received_events_url": "https://api.github.com/users/weiyangfb/received_events", "type": "User", "site_admin": false}, "created_at": "2018-10-05T21:28:15Z", "updated_at": "2018-10-05T21:28:15Z", "author_association": "CONTRIBUTOR", "body_html": "<p><a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=1245942\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/djsaunde\">@djsaunde</a> Thanks for the clarifications! Your use case makes sense! But as <a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=9110200\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/fmassa\">@fmassa</a> <a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=1041752\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/vadimkantorov\">@vadimkantorov</a> <a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=1757177\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/vmichals\">@vmichals</a> advised, I will need to investigate a bit on how to do this efficiently in CUDA (I can imagine in CPU it is very doable). In the meanwhile, would you like to use scipy as a fast walk-around? And do let me know if you will need a <code>as_sparse_tensor()</code> method to convert back to sparse tensor.</p>", "body_text": "@djsaunde Thanks for the clarifications! Your use case makes sense! But as @fmassa @vadimkantorov @vmichals advised, I will need to investigate a bit on how to do this efficiently in CUDA (I can imagine in CPU it is very doable). In the meanwhile, would you like to use scipy as a fast walk-around? And do let me know if you will need a as_sparse_tensor() method to convert back to sparse tensor.", "body": "@djsaunde Thanks for the clarifications! Your use case makes sense! But as @fmassa @vadimkantorov @vmichals advised, I will need to investigate a bit on how to do this efficiently in CUDA (I can imagine in CPU it is very doable). In the meanwhile, would you like to use scipy as a fast walk-around? And do let me know if you will need a `as_sparse_tensor()` method to convert back to sparse tensor."}