{"url": "https://api.github.com/repos/pytorch/pytorch/issues/comments/428897135", "html_url": "https://github.com/pytorch/pytorch/issues/10043#issuecomment-428897135", "issue_url": "https://api.github.com/repos/pytorch/pytorch/issues/10043", "id": 428897135, "node_id": "MDEyOklzc3VlQ29tbWVudDQyODg5NzEzNQ==", "user": {"login": "djsaunde", "id": 1245942, "node_id": "MDQ6VXNlcjEyNDU5NDI=", "avatar_url": "https://avatars3.githubusercontent.com/u/1245942?v=4", "gravatar_id": "", "url": "https://api.github.com/users/djsaunde", "html_url": "https://github.com/djsaunde", "followers_url": "https://api.github.com/users/djsaunde/followers", "following_url": "https://api.github.com/users/djsaunde/following{/other_user}", "gists_url": "https://api.github.com/users/djsaunde/gists{/gist_id}", "starred_url": "https://api.github.com/users/djsaunde/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/djsaunde/subscriptions", "organizations_url": "https://api.github.com/users/djsaunde/orgs", "repos_url": "https://api.github.com/users/djsaunde/repos", "events_url": "https://api.github.com/users/djsaunde/events{/privacy}", "received_events_url": "https://api.github.com/users/djsaunde/received_events", "type": "User", "site_admin": false}, "created_at": "2018-10-11T10:02:24Z", "updated_at": "2018-10-11T10:02:24Z", "author_association": "NONE", "body_html": "<p>It would also be great to have <code>view</code> implemented for sparse Tensors (I don't know if this is possible).</p>\n<p>Also, for dense <code>x</code> with shape <code>torch.Size([n])</code> and dense <code>y</code> with shape <code>torch.Size([n, k])</code>, <code>s @ y</code> produces a tensor <code>z</code> of shape <code>torch.Size([n, k])</code>. When <code>x</code> is sparse, I get the following:</p>\n<pre><code>In [21]: x = torch.rand(100).bernoulli()\n\nIn [22]: x = torch.sparse.FloatTensor(x.nonzero().t(), x[x != 0], x.size())\n\nIn [23]: y = torch.rand(100, 10)\n\nIn [24]: x @ y\n---------------------------------------------------------------------------\nRuntimeError                              Traceback (most recent call last)\n&lt;ipython-input-24-e6c6f87ceb97&gt; in &lt;module&gt;()\n----&gt; 1 x @ y\n\nRuntimeError: sparse tensors do not have strides\n</code></pre>\n<p>I also tried <code>x.view(1, -1) @ y</code>, but ran into the same error.</p>", "body_text": "It would also be great to have view implemented for sparse Tensors (I don't know if this is possible).\nAlso, for dense x with shape torch.Size([n]) and dense y with shape torch.Size([n, k]), s @ y produces a tensor z of shape torch.Size([n, k]). When x is sparse, I get the following:\nIn [21]: x = torch.rand(100).bernoulli()\n\nIn [22]: x = torch.sparse.FloatTensor(x.nonzero().t(), x[x != 0], x.size())\n\nIn [23]: y = torch.rand(100, 10)\n\nIn [24]: x @ y\n---------------------------------------------------------------------------\nRuntimeError                              Traceback (most recent call last)\n<ipython-input-24-e6c6f87ceb97> in <module>()\n----> 1 x @ y\n\nRuntimeError: sparse tensors do not have strides\n\nI also tried x.view(1, -1) @ y, but ran into the same error.", "body": "It would also be great to have `view` implemented for sparse Tensors (I don't know if this is possible).\r\n\r\nAlso, for dense `x` with shape `torch.Size([n])` and dense `y` with shape `torch.Size([n, k])`, `s @ y` produces a tensor `z` of shape `torch.Size([n, k])`. When `x` is sparse, I get the following:\r\n\r\n```\r\nIn [21]: x = torch.rand(100).bernoulli()\r\n\r\nIn [22]: x = torch.sparse.FloatTensor(x.nonzero().t(), x[x != 0], x.size())\r\n\r\nIn [23]: y = torch.rand(100, 10)\r\n\r\nIn [24]: x @ y\r\n---------------------------------------------------------------------------\r\nRuntimeError                              Traceback (most recent call last)\r\n<ipython-input-24-e6c6f87ceb97> in <module>()\r\n----> 1 x @ y\r\n\r\nRuntimeError: sparse tensors do not have strides\r\n```\r\n\r\nI also tried `x.view(1, -1) @ y`, but ran into the same error."}