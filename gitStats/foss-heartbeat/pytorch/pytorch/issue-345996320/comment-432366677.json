{"url": "https://api.github.com/repos/pytorch/pytorch/issues/comments/432366677", "html_url": "https://github.com/pytorch/pytorch/issues/10043#issuecomment-432366677", "issue_url": "https://api.github.com/repos/pytorch/pytorch/issues/10043", "id": 432366677, "node_id": "MDEyOklzc3VlQ29tbWVudDQzMjM2NjY3Nw==", "user": {"login": "ArEsKay3", "id": 6547143, "node_id": "MDQ6VXNlcjY1NDcxNDM=", "avatar_url": "https://avatars3.githubusercontent.com/u/6547143?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ArEsKay3", "html_url": "https://github.com/ArEsKay3", "followers_url": "https://api.github.com/users/ArEsKay3/followers", "following_url": "https://api.github.com/users/ArEsKay3/following{/other_user}", "gists_url": "https://api.github.com/users/ArEsKay3/gists{/gist_id}", "starred_url": "https://api.github.com/users/ArEsKay3/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ArEsKay3/subscriptions", "organizations_url": "https://api.github.com/users/ArEsKay3/orgs", "repos_url": "https://api.github.com/users/ArEsKay3/repos", "events_url": "https://api.github.com/users/ArEsKay3/events{/privacy}", "received_events_url": "https://api.github.com/users/ArEsKay3/received_events", "type": "User", "site_admin": false}, "created_at": "2018-10-23T18:31:20Z", "updated_at": "2018-10-23T18:31:20Z", "author_association": "CONTRIBUTOR", "body_html": "<blockquote>\n<p><strong>Edit Oct 13 2018</strong>:<br>\nBecause my use case is for <em>masked</em> tensors (i.e. defining which computation should be done), I also have an operation that takes two dense tensors <code>A</code> and <code>B</code>, and compute the product <em>only where specified in a (sparse) mask</em> <code>m</code>. So same results as <code>(A @ B) * m</code> except all unnecessary computations are not done.</p>\n</blockquote>\n<p><a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=11088808\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/AntoinePrv\">@AntoinePrv</a>, What does the code for this operation look like? Are you just looping over the sparse indices? What does performance look like?</p>", "body_text": "Edit Oct 13 2018:\nBecause my use case is for masked tensors (i.e. defining which computation should be done), I also have an operation that takes two dense tensors A and B, and compute the product only where specified in a (sparse) mask m. So same results as (A @ B) * m except all unnecessary computations are not done.\n\n@AntoinePrv, What does the code for this operation look like? Are you just looping over the sparse indices? What does performance look like?", "body": "> **Edit Oct 13 2018**:\r\n> Because my use case is for _masked_ tensors (i.e. defining which computation should be done), I also have an operation that takes two dense tensors `A` and `B`, and compute the product _only where specified in a (sparse) mask_ `m`. So same results as `(A @ B) * m` except all unnecessary computations are not done.\r\n\r\n@AntoinePrv, What does the code for this operation look like? Are you just looping over the sparse indices? What does performance look like?"}