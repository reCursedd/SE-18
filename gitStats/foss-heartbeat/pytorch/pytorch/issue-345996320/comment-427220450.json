{"url": "https://api.github.com/repos/pytorch/pytorch/issues/comments/427220450", "html_url": "https://github.com/pytorch/pytorch/issues/10043#issuecomment-427220450", "issue_url": "https://api.github.com/repos/pytorch/pytorch/issues/10043", "id": 427220450, "node_id": "MDEyOklzc3VlQ29tbWVudDQyNzIyMDQ1MA==", "user": {"login": "djsaunde", "id": 1245942, "node_id": "MDQ6VXNlcjEyNDU5NDI=", "avatar_url": "https://avatars3.githubusercontent.com/u/1245942?v=4", "gravatar_id": "", "url": "https://api.github.com/users/djsaunde", "html_url": "https://github.com/djsaunde", "followers_url": "https://api.github.com/users/djsaunde/followers", "following_url": "https://api.github.com/users/djsaunde/following{/other_user}", "gists_url": "https://api.github.com/users/djsaunde/gists{/gist_id}", "starred_url": "https://api.github.com/users/djsaunde/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/djsaunde/subscriptions", "organizations_url": "https://api.github.com/users/djsaunde/orgs", "repos_url": "https://api.github.com/users/djsaunde/repos", "events_url": "https://api.github.com/users/djsaunde/events{/privacy}", "received_events_url": "https://api.github.com/users/djsaunde/received_events", "type": "User", "site_admin": false}, "created_at": "2018-10-05T01:38:30Z", "updated_at": "2018-10-05T01:38:30Z", "author_association": "NONE", "body_html": "<p>On a similar note, it'd be nice to be able to index dense Tensors with sparse ones; e.g.:</p>\n<pre><code>x = torch.rand(1000)\ny = torch.rand(1000).bernoulli().byte()\ns = torch.sparse.ByteTensor(y.nonzero().t(), y[y == 1], y.size())\n\nx_at_s = x[s]\n</code></pre>\n<p>The last statement gives the following error message:</p>\n<pre><code>---------------------------------------------------------------------------\nRuntimeError                              Traceback (most recent call last)\n&lt;ipython-input-26-390b366cf39a&gt; in &lt;module&gt;()\n      3 s = torch.sparse.ByteTensor(y.nonzero().t(), y[y == 1], y.size())\n      4 \n----&gt; 5 x_at_s = x[s]\n\nRuntimeError: copy does not support torch.sparse.ByteTensor to torch.ByteTensor copy (s_copy_from case).\n</code></pre>", "body_text": "On a similar note, it'd be nice to be able to index dense Tensors with sparse ones; e.g.:\nx = torch.rand(1000)\ny = torch.rand(1000).bernoulli().byte()\ns = torch.sparse.ByteTensor(y.nonzero().t(), y[y == 1], y.size())\n\nx_at_s = x[s]\n\nThe last statement gives the following error message:\n---------------------------------------------------------------------------\nRuntimeError                              Traceback (most recent call last)\n<ipython-input-26-390b366cf39a> in <module>()\n      3 s = torch.sparse.ByteTensor(y.nonzero().t(), y[y == 1], y.size())\n      4 \n----> 5 x_at_s = x[s]\n\nRuntimeError: copy does not support torch.sparse.ByteTensor to torch.ByteTensor copy (s_copy_from case).", "body": "On a similar note, it'd be nice to be able to index dense Tensors with sparse ones; e.g.:\r\n\r\n```\r\nx = torch.rand(1000)\r\ny = torch.rand(1000).bernoulli().byte()\r\ns = torch.sparse.ByteTensor(y.nonzero().t(), y[y == 1], y.size())\r\n\r\nx_at_s = x[s]\r\n```\r\n\r\nThe last statement gives the following error message:\r\n\r\n```\r\n---------------------------------------------------------------------------\r\nRuntimeError                              Traceback (most recent call last)\r\n<ipython-input-26-390b366cf39a> in <module>()\r\n      3 s = torch.sparse.ByteTensor(y.nonzero().t(), y[y == 1], y.size())\r\n      4 \r\n----> 5 x_at_s = x[s]\r\n\r\nRuntimeError: copy does not support torch.sparse.ByteTensor to torch.ByteTensor copy (s_copy_from case).\r\n```"}