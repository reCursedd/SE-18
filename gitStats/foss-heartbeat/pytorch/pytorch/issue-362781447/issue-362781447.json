{"url": "https://api.github.com/repos/pytorch/pytorch/issues/11951", "repository_url": "https://api.github.com/repos/pytorch/pytorch", "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/11951/labels{/name}", "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/11951/comments", "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/11951/events", "html_url": "https://github.com/pytorch/pytorch/issues/11951", "id": 362781447, "node_id": "MDU6SXNzdWUzNjI3ODE0NDc=", "number": 11951, "title": "dtype mismatch error messages can be misleading", "user": {"login": "zou3519", "id": 5652049, "node_id": "MDQ6VXNlcjU2NTIwNDk=", "avatar_url": "https://avatars3.githubusercontent.com/u/5652049?v=4", "gravatar_id": "", "url": "https://api.github.com/users/zou3519", "html_url": "https://github.com/zou3519", "followers_url": "https://api.github.com/users/zou3519/followers", "following_url": "https://api.github.com/users/zou3519/following{/other_user}", "gists_url": "https://api.github.com/users/zou3519/gists{/gist_id}", "starred_url": "https://api.github.com/users/zou3519/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/zou3519/subscriptions", "organizations_url": "https://api.github.com/users/zou3519/orgs", "repos_url": "https://api.github.com/users/zou3519/repos", "events_url": "https://api.github.com/users/zou3519/events{/privacy}", "received_events_url": "https://api.github.com/users/zou3519/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 443483881, "node_id": "MDU6TGFiZWw0NDM0ODM4ODE=", "url": "https://api.github.com/repos/pytorch/pytorch/labels/todo", "name": "todo", "color": "c2e0c6", "default": false}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2018-09-21T21:33:38Z", "updated_at": "2018-09-24T17:44:13Z", "closed_at": null, "author_association": "CONTRIBUTOR", "body_html": "<p>Example:</p>\n<pre><code>In [2]: import torch\n   ...: import torch.nn as nn\n   ...:\n   ...: mat1 = torch.randn(3, 3, dtype=torch.double)\n   ...: mat2 = torch.randn(3, 3, dtype=torch.float)\n   ...: torch.mm(mat1, mat2)\n   ...:\n---------------------------------------------------------------------------\nRuntimeError                              Traceback (most recent call last)\n&lt;ipython-input-2-3bb89e9eafdc&gt; in &lt;module&gt;()\n      4 mat1 = torch.randn(3, 3, dtype=torch.double)\n      5 mat2 = torch.randn(3, 3, dtype=torch.float)\n----&gt; 6 torch.mm(mat1, mat2)\n\nRuntimeError: Expected object of scalar type Double but got scalar type Float for argument #2 'mat2'\n</code></pre>\n<p>Consider the following:</p>\n<ul>\n<li>Let's say as a user I was given mat2 from a black box</li>\n<li>The user supplies mat1, and then gets this error message, which is misleading because what the user really needs to hear is that \"mat1 is of scalar type Float but should be scalar type Double\"</li>\n</ul>\n<p>Maybe we should change the error message to say<br>\n\"Scalar type mismatch: got scalar type Double for argument <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load issue title\" data-id=\"171281708\" data-permission-text=\"Issue title is private\" data-url=\"https://github.com/pytorch/pytorch/issues/1\" data-hovercard-type=\"issue\" data-hovercard-url=\"/pytorch/pytorch/issues/1/hovercard\" href=\"https://github.com/pytorch/pytorch/issues/1\">#1</a> mat1 and scalar type Float for argument <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load issue title\" data-id=\"171402941\" data-permission-text=\"Issue title is private\" data-url=\"https://github.com/pytorch/pytorch/issues/2\" data-hovercard-type=\"issue\" data-hovercard-url=\"/pytorch/pytorch/issues/2/hovercard\" href=\"https://github.com/pytorch/pytorch/issues/2\">#2</a> mat2\"</p>\n<p>What do we think?</p>", "body_text": "Example:\nIn [2]: import torch\n   ...: import torch.nn as nn\n   ...:\n   ...: mat1 = torch.randn(3, 3, dtype=torch.double)\n   ...: mat2 = torch.randn(3, 3, dtype=torch.float)\n   ...: torch.mm(mat1, mat2)\n   ...:\n---------------------------------------------------------------------------\nRuntimeError                              Traceback (most recent call last)\n<ipython-input-2-3bb89e9eafdc> in <module>()\n      4 mat1 = torch.randn(3, 3, dtype=torch.double)\n      5 mat2 = torch.randn(3, 3, dtype=torch.float)\n----> 6 torch.mm(mat1, mat2)\n\nRuntimeError: Expected object of scalar type Double but got scalar type Float for argument #2 'mat2'\n\nConsider the following:\n\nLet's say as a user I was given mat2 from a black box\nThe user supplies mat1, and then gets this error message, which is misleading because what the user really needs to hear is that \"mat1 is of scalar type Float but should be scalar type Double\"\n\nMaybe we should change the error message to say\n\"Scalar type mismatch: got scalar type Double for argument #1 mat1 and scalar type Float for argument #2 mat2\"\nWhat do we think?", "body": "Example:\r\n```\r\nIn [2]: import torch\r\n   ...: import torch.nn as nn\r\n   ...:\r\n   ...: mat1 = torch.randn(3, 3, dtype=torch.double)\r\n   ...: mat2 = torch.randn(3, 3, dtype=torch.float)\r\n   ...: torch.mm(mat1, mat2)\r\n   ...:\r\n---------------------------------------------------------------------------\r\nRuntimeError                              Traceback (most recent call last)\r\n<ipython-input-2-3bb89e9eafdc> in <module>()\r\n      4 mat1 = torch.randn(3, 3, dtype=torch.double)\r\n      5 mat2 = torch.randn(3, 3, dtype=torch.float)\r\n----> 6 torch.mm(mat1, mat2)\r\n\r\nRuntimeError: Expected object of scalar type Double but got scalar type Float for argument #2 'mat2'\r\n```\r\n\r\nConsider the following:\r\n- Let's say as a user I was given mat2 from a black box\r\n- The user supplies mat1, and then gets this error message, which is misleading because what the user really needs to hear is that \"mat1 is of scalar type Float but should be scalar type Double\"\r\n\r\nMaybe we should change the error message to say\r\n\"Scalar type mismatch: got scalar type Double for argument #1 mat1 and scalar type Float for argument #2 mat2\"\r\n\r\nWhat do we think?"}