{"url": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/223162772", "pull_request_review_id": 162234174, "id": 223162772, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIyMzE2Mjc3Mg==", "diff_hunk": "@@ -24,6 +25,41 @@ inline bool BlobIsTensorType(const Blob& blob, DeviceType device_type) {\n   return tensor && *tensor && tensor->GetDeviceType() == device_type;\n }\n \n+inline void BlobSetTensor(Blob* blob, Tensor tensor) {\n+  blob->Reset<Tensor>(new Tensor(std::move(tensor)));\n+}\n+\n+inline Tensor* BlobGetMutableTensor(\n+    Blob* blob,\n+    const vector<int64_t>& dims,\n+    const at::TensorOptions& options) {\n+  if (blob->IsType<Tensor>()) {\n+    Tensor* tensor = blob->GetMutable<Tensor>();\n+    if (*tensor) {\n+      if (tensor->GetDeviceType() ==\n+          at::backendToDeviceType(options.backend())) {\n+        if (tensor->dims() != dims) {\n+          // Resize when the dims doesn't match\n+          tensor->Resize(dims);\n+        } else {\n+          // reallocate when the data_type doesn't match\n+          if (tensor->meta() != at::scalarTypeToTypeMeta(options.dtype())) {\n+            tensor->raw_mutable_data(at::scalarTypeToTypeMeta(options.dtype()));\n+          }\n+        }\n+        return tensor;\n+      }\n+      // If DeviceType is wrong, we'll allocate a new Tensor", "path": "caffe2/core/blob.h", "position": null, "original_position": 36, "commit_id": "6c278f2cff213711e8c0508b0b0b22fa0fff384e", "original_commit_id": "813192f0725f52b62a72fa83a7d680364c96c2af", "user": {"login": "Yangqing", "id": 551151, "node_id": "MDQ6VXNlcjU1MTE1MQ==", "avatar_url": "https://avatars1.githubusercontent.com/u/551151?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Yangqing", "html_url": "https://github.com/Yangqing", "followers_url": "https://api.github.com/users/Yangqing/followers", "following_url": "https://api.github.com/users/Yangqing/following{/other_user}", "gists_url": "https://api.github.com/users/Yangqing/gists{/gist_id}", "starred_url": "https://api.github.com/users/Yangqing/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Yangqing/subscriptions", "organizations_url": "https://api.github.com/users/Yangqing/orgs", "repos_url": "https://api.github.com/users/Yangqing/repos", "events_url": "https://api.github.com/users/Yangqing/events{/privacy}", "received_events_url": "https://api.github.com/users/Yangqing/received_events", "type": "User", "site_admin": false}, "body": "nit: runaway comment?", "created_at": "2018-10-05T23:56:44Z", "updated_at": "2018-11-23T15:52:29Z", "html_url": "https://github.com/pytorch/pytorch/pull/12407#discussion_r223162772", "pull_request_url": "https://api.github.com/repos/pytorch/pytorch/pulls/12407", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/223162772"}, "html": {"href": "https://github.com/pytorch/pytorch/pull/12407#discussion_r223162772"}, "pull_request": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/12407"}}, "body_html": "<p>nit: runaway comment?</p>", "body_text": "nit: runaway comment?"}