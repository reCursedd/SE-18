{"url": "https://api.github.com/repos/pytorch/pytorch/pulls/12407", "id": 220845267, "node_id": "MDExOlB1bGxSZXF1ZXN0MjIwODQ1MjY3", "html_url": "https://github.com/pytorch/pytorch/pull/12407", "diff_url": "https://github.com/pytorch/pytorch/pull/12407.diff", "patch_url": "https://github.com/pytorch/pytorch/pull/12407.patch", "issue_url": "https://api.github.com/repos/pytorch/pytorch/issues/12407", "number": 12407, "state": "closed", "locked": false, "title": "[pt1][tensor] caffe2::empty for Resize+mutable_data refactor", "user": {"login": "jerryzh168", "id": 4958441, "node_id": "MDQ6VXNlcjQ5NTg0NDE=", "avatar_url": "https://avatars0.githubusercontent.com/u/4958441?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jerryzh168", "html_url": "https://github.com/jerryzh168", "followers_url": "https://api.github.com/users/jerryzh168/followers", "following_url": "https://api.github.com/users/jerryzh168/following{/other_user}", "gists_url": "https://api.github.com/users/jerryzh168/gists{/gist_id}", "starred_url": "https://api.github.com/users/jerryzh168/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jerryzh168/subscriptions", "organizations_url": "https://api.github.com/users/jerryzh168/orgs", "repos_url": "https://api.github.com/users/jerryzh168/repos", "events_url": "https://api.github.com/users/jerryzh168/events{/privacy}", "received_events_url": "https://api.github.com/users/jerryzh168/received_events", "type": "User", "site_admin": false}, "body": "Stack:\n&nbsp;&nbsp;&nbsp;&nbsp;:black_circle:&nbsp; **#12407 [pt1][tensor] caffe2::empty for Resize+mutable_data refactor**&nbsp;&nbsp;[:green_heart:](https://our.internmc.facebook.com/intern/diff/D10207890/)\n\n### Motivation\nWe want to use tensor factory to refactor the caffe2's old way of initialize Tensor by Resize and mutable_data\nin order to eliminate uninitialized Tensor.\n\nPreviously when we want to create a Tensor in caffe2, we'll do the following\n```\nTensor x(CPU); // device type provided\nx.Resize({1, 2, 3}); // size provided\nx.mutable_data<float>(); // data type provided and memory allocated\n```\nThis leaves Tensor in not fully initialized state during the process, to eliminate this, we\nwant to provide all the needed information in the begining. ATen already has its TensorFactories: https://github.com/pytorch/pytorch/blob/master/aten/src/ATen/native/TensorFactories.cpp, and there is a TensorOption, we want to adopt the same interface to ease future refactoring.\n\nIn the callsite, we used to have `Output(i)` that returns a `Blob` that contains an uninitialized `Tensor` and we'll call Resize and mutable_data afterwards to provide dimension and data type,\n```\n// uninitialized tensor\nauto* Y = Output(0);\n// set dimensions\nY->Resize({1, 2, 3});\n// actually allocate the data\nauto* data = Y->mutable_data<float>();\n// After this step, Tensor is fully initialized.\n```\nWe want to change it to the following:\n```\n// provide dimensions and TensorOptions which include device type and data type.\n// This will set all the information of Tensor properly and also allocate memory.\nauto* Y = Output(0, {1, 2, 3}, at::device({context_.device_type()}).template dtype<T>());\n// Tensor is fully initialized after this step\n\n// following `mutable_data` call won't allocate memory.\nauto* data = Y->mutable_data<float>();\n```\n\n### Perf result\nmicrobenchmarks\n```\n============================================================================\ncaffe2/caffe2/fb/benchmarks/core_overhead_benchmark.ccrelative  time/iter  iters/s\n============================================================================\nOperatorNewOutputTensorAPI                                   3.27us  306.05K\nOperatorOldOutputTensorAPI                                   3.55us  281.54K\n============================================================================\n```\n\nDifferential Revision: [D10207890](https://our.internmc.facebook.com/intern/diff/D10207890/)", "created_at": "2018-10-05T23:09:29Z", "updated_at": "2018-11-23T15:53:04Z", "closed_at": "2018-10-17T20:04:18Z", "merged_at": null, "merge_commit_sha": "d74e1097a24c38d27a2fa43b4e0b427af779d495", "assignee": null, "assignees": [], "requested_reviewers": [], "requested_teams": [], "labels": [], "milestone": null, "commits_url": "https://api.github.com/repos/pytorch/pytorch/pulls/12407/commits", "review_comments_url": "https://api.github.com/repos/pytorch/pytorch/pulls/12407/comments", "review_comment_url": "https://api.github.com/repos/pytorch/pytorch/pulls/comments{/number}", "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/12407/comments", "statuses_url": "https://api.github.com/repos/pytorch/pytorch/statuses/6c278f2cff213711e8c0508b0b0b22fa0fff384e", "head": {"label": "pytorch:export-D10207890", "ref": "export-D10207890", "sha": "6c278f2cff213711e8c0508b0b0b22fa0fff384e", "user": {"login": "pytorch", "id": 21003710, "node_id": "MDEyOk9yZ2FuaXphdGlvbjIxMDAzNzEw", "avatar_url": "https://avatars3.githubusercontent.com/u/21003710?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pytorch", "html_url": "https://github.com/pytorch", "followers_url": "https://api.github.com/users/pytorch/followers", "following_url": "https://api.github.com/users/pytorch/following{/other_user}", "gists_url": "https://api.github.com/users/pytorch/gists{/gist_id}", "starred_url": "https://api.github.com/users/pytorch/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pytorch/subscriptions", "organizations_url": "https://api.github.com/users/pytorch/orgs", "repos_url": "https://api.github.com/users/pytorch/repos", "events_url": "https://api.github.com/users/pytorch/events{/privacy}", "received_events_url": "https://api.github.com/users/pytorch/received_events", "type": "Organization", "site_admin": false}, "repo": {"id": 65600975, "node_id": "MDEwOlJlcG9zaXRvcnk2NTYwMDk3NQ==", "name": "pytorch", "full_name": "pytorch/pytorch", "private": false, "owner": {"login": "pytorch", "id": 21003710, "node_id": "MDEyOk9yZ2FuaXphdGlvbjIxMDAzNzEw", "avatar_url": "https://avatars3.githubusercontent.com/u/21003710?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pytorch", "html_url": "https://github.com/pytorch", "followers_url": "https://api.github.com/users/pytorch/followers", "following_url": "https://api.github.com/users/pytorch/following{/other_user}", "gists_url": "https://api.github.com/users/pytorch/gists{/gist_id}", "starred_url": "https://api.github.com/users/pytorch/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pytorch/subscriptions", "organizations_url": "https://api.github.com/users/pytorch/orgs", "repos_url": "https://api.github.com/users/pytorch/repos", "events_url": "https://api.github.com/users/pytorch/events{/privacy}", "received_events_url": "https://api.github.com/users/pytorch/received_events", "type": "Organization", "site_admin": false}, "html_url": "https://github.com/pytorch/pytorch", "description": "Tensors and Dynamic neural networks in Python  with strong GPU acceleration", "fork": false, "url": "https://api.github.com/repos/pytorch/pytorch", "forks_url": "https://api.github.com/repos/pytorch/pytorch/forks", "keys_url": "https://api.github.com/repos/pytorch/pytorch/keys{/key_id}", "collaborators_url": "https://api.github.com/repos/pytorch/pytorch/collaborators{/collaborator}", "teams_url": "https://api.github.com/repos/pytorch/pytorch/teams", "hooks_url": "https://api.github.com/repos/pytorch/pytorch/hooks", "issue_events_url": "https://api.github.com/repos/pytorch/pytorch/issues/events{/number}", "events_url": "https://api.github.com/repos/pytorch/pytorch/events", "assignees_url": "https://api.github.com/repos/pytorch/pytorch/assignees{/user}", "branches_url": "https://api.github.com/repos/pytorch/pytorch/branches{/branch}", "tags_url": "https://api.github.com/repos/pytorch/pytorch/tags", "blobs_url": "https://api.github.com/repos/pytorch/pytorch/git/blobs{/sha}", "git_tags_url": "https://api.github.com/repos/pytorch/pytorch/git/tags{/sha}", "git_refs_url": "https://api.github.com/repos/pytorch/pytorch/git/refs{/sha}", "trees_url": "https://api.github.com/repos/pytorch/pytorch/git/trees{/sha}", "statuses_url": "https://api.github.com/repos/pytorch/pytorch/statuses/{sha}", "languages_url": "https://api.github.com/repos/pytorch/pytorch/languages", "stargazers_url": "https://api.github.com/repos/pytorch/pytorch/stargazers", "contributors_url": "https://api.github.com/repos/pytorch/pytorch/contributors", "subscribers_url": "https://api.github.com/repos/pytorch/pytorch/subscribers", "subscription_url": "https://api.github.com/repos/pytorch/pytorch/subscription", "commits_url": "https://api.github.com/repos/pytorch/pytorch/commits{/sha}", "git_commits_url": "https://api.github.com/repos/pytorch/pytorch/git/commits{/sha}", "comments_url": "https://api.github.com/repos/pytorch/pytorch/comments{/number}", "issue_comment_url": "https://api.github.com/repos/pytorch/pytorch/issues/comments{/number}", "contents_url": "https://api.github.com/repos/pytorch/pytorch/contents/{+path}", "compare_url": "https://api.github.com/repos/pytorch/pytorch/compare/{base}...{head}", "merges_url": "https://api.github.com/repos/pytorch/pytorch/merges", "archive_url": "https://api.github.com/repos/pytorch/pytorch/{archive_format}{/ref}", "downloads_url": "https://api.github.com/repos/pytorch/pytorch/downloads", "issues_url": "https://api.github.com/repos/pytorch/pytorch/issues{/number}", "pulls_url": "https://api.github.com/repos/pytorch/pytorch/pulls{/number}", "milestones_url": "https://api.github.com/repos/pytorch/pytorch/milestones{/number}", "notifications_url": "https://api.github.com/repos/pytorch/pytorch/notifications{?since,all,participating}", "labels_url": "https://api.github.com/repos/pytorch/pytorch/labels{/name}", "releases_url": "https://api.github.com/repos/pytorch/pytorch/releases{/id}", "deployments_url": "https://api.github.com/repos/pytorch/pytorch/deployments", "created_at": "2016-08-13T05:26:41Z", "updated_at": "2018-11-24T14:27:35Z", "pushed_at": "2018-11-24T12:42:01Z", "git_url": "git://github.com/pytorch/pytorch.git", "ssh_url": "git@github.com:pytorch/pytorch.git", "clone_url": "https://github.com/pytorch/pytorch.git", "svn_url": "https://github.com/pytorch/pytorch", "homepage": "http://pytorch.org", "size": 89656, "stargazers_count": 21591, "watchers_count": 21591, "language": "C++", "has_issues": true, "has_projects": true, "has_downloads": true, "has_wiki": true, "has_pages": false, "forks_count": 5154, "mirror_url": null, "archived": false, "open_issues_count": 2196, "license": {"key": "other", "name": "Other", "spdx_id": "NOASSERTION", "url": null, "node_id": "MDc6TGljZW5zZTA="}, "forks": 5154, "open_issues": 2196, "watchers": 21591, "default_branch": "master"}}, "base": {"label": "pytorch:master", "ref": "master", "sha": "5b8a640d0b8e86534942e394432f327845a5c2ea", "user": {"login": "pytorch", "id": 21003710, "node_id": "MDEyOk9yZ2FuaXphdGlvbjIxMDAzNzEw", "avatar_url": "https://avatars3.githubusercontent.com/u/21003710?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pytorch", "html_url": "https://github.com/pytorch", "followers_url": "https://api.github.com/users/pytorch/followers", "following_url": "https://api.github.com/users/pytorch/following{/other_user}", "gists_url": "https://api.github.com/users/pytorch/gists{/gist_id}", "starred_url": "https://api.github.com/users/pytorch/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pytorch/subscriptions", "organizations_url": "https://api.github.com/users/pytorch/orgs", "repos_url": "https://api.github.com/users/pytorch/repos", "events_url": "https://api.github.com/users/pytorch/events{/privacy}", "received_events_url": "https://api.github.com/users/pytorch/received_events", "type": "Organization", "site_admin": false}, "repo": {"id": 65600975, "node_id": "MDEwOlJlcG9zaXRvcnk2NTYwMDk3NQ==", "name": "pytorch", "full_name": "pytorch/pytorch", "private": false, "owner": {"login": "pytorch", "id": 21003710, "node_id": "MDEyOk9yZ2FuaXphdGlvbjIxMDAzNzEw", "avatar_url": "https://avatars3.githubusercontent.com/u/21003710?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pytorch", "html_url": "https://github.com/pytorch", "followers_url": "https://api.github.com/users/pytorch/followers", "following_url": "https://api.github.com/users/pytorch/following{/other_user}", "gists_url": "https://api.github.com/users/pytorch/gists{/gist_id}", "starred_url": "https://api.github.com/users/pytorch/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pytorch/subscriptions", "organizations_url": "https://api.github.com/users/pytorch/orgs", "repos_url": "https://api.github.com/users/pytorch/repos", "events_url": "https://api.github.com/users/pytorch/events{/privacy}", "received_events_url": "https://api.github.com/users/pytorch/received_events", "type": "Organization", "site_admin": false}, "html_url": "https://github.com/pytorch/pytorch", "description": "Tensors and Dynamic neural networks in Python  with strong GPU acceleration", "fork": false, "url": "https://api.github.com/repos/pytorch/pytorch", "forks_url": "https://api.github.com/repos/pytorch/pytorch/forks", "keys_url": "https://api.github.com/repos/pytorch/pytorch/keys{/key_id}", "collaborators_url": "https://api.github.com/repos/pytorch/pytorch/collaborators{/collaborator}", "teams_url": "https://api.github.com/repos/pytorch/pytorch/teams", "hooks_url": "https://api.github.com/repos/pytorch/pytorch/hooks", "issue_events_url": "https://api.github.com/repos/pytorch/pytorch/issues/events{/number}", "events_url": "https://api.github.com/repos/pytorch/pytorch/events", "assignees_url": "https://api.github.com/repos/pytorch/pytorch/assignees{/user}", "branches_url": "https://api.github.com/repos/pytorch/pytorch/branches{/branch}", "tags_url": "https://api.github.com/repos/pytorch/pytorch/tags", "blobs_url": "https://api.github.com/repos/pytorch/pytorch/git/blobs{/sha}", "git_tags_url": "https://api.github.com/repos/pytorch/pytorch/git/tags{/sha}", "git_refs_url": "https://api.github.com/repos/pytorch/pytorch/git/refs{/sha}", "trees_url": "https://api.github.com/repos/pytorch/pytorch/git/trees{/sha}", "statuses_url": "https://api.github.com/repos/pytorch/pytorch/statuses/{sha}", "languages_url": "https://api.github.com/repos/pytorch/pytorch/languages", "stargazers_url": "https://api.github.com/repos/pytorch/pytorch/stargazers", "contributors_url": "https://api.github.com/repos/pytorch/pytorch/contributors", "subscribers_url": "https://api.github.com/repos/pytorch/pytorch/subscribers", "subscription_url": "https://api.github.com/repos/pytorch/pytorch/subscription", "commits_url": "https://api.github.com/repos/pytorch/pytorch/commits{/sha}", "git_commits_url": "https://api.github.com/repos/pytorch/pytorch/git/commits{/sha}", "comments_url": "https://api.github.com/repos/pytorch/pytorch/comments{/number}", "issue_comment_url": "https://api.github.com/repos/pytorch/pytorch/issues/comments{/number}", "contents_url": "https://api.github.com/repos/pytorch/pytorch/contents/{+path}", "compare_url": "https://api.github.com/repos/pytorch/pytorch/compare/{base}...{head}", "merges_url": "https://api.github.com/repos/pytorch/pytorch/merges", "archive_url": "https://api.github.com/repos/pytorch/pytorch/{archive_format}{/ref}", "downloads_url": "https://api.github.com/repos/pytorch/pytorch/downloads", "issues_url": "https://api.github.com/repos/pytorch/pytorch/issues{/number}", "pulls_url": "https://api.github.com/repos/pytorch/pytorch/pulls{/number}", "milestones_url": "https://api.github.com/repos/pytorch/pytorch/milestones{/number}", "notifications_url": "https://api.github.com/repos/pytorch/pytorch/notifications{?since,all,participating}", "labels_url": "https://api.github.com/repos/pytorch/pytorch/labels{/name}", "releases_url": "https://api.github.com/repos/pytorch/pytorch/releases{/id}", "deployments_url": "https://api.github.com/repos/pytorch/pytorch/deployments", "created_at": "2016-08-13T05:26:41Z", "updated_at": "2018-11-24T14:27:35Z", "pushed_at": "2018-11-24T12:42:01Z", "git_url": "git://github.com/pytorch/pytorch.git", "ssh_url": "git@github.com:pytorch/pytorch.git", "clone_url": "https://github.com/pytorch/pytorch.git", "svn_url": "https://github.com/pytorch/pytorch", "homepage": "http://pytorch.org", "size": 89656, "stargazers_count": 21591, "watchers_count": 21591, "language": "C++", "has_issues": true, "has_projects": true, "has_downloads": true, "has_wiki": true, "has_pages": false, "forks_count": 5154, "mirror_url": null, "archived": false, "open_issues_count": 2196, "license": {"key": "other", "name": "Other", "spdx_id": "NOASSERTION", "url": null, "node_id": "MDc6TGljZW5zZTA="}, "forks": 5154, "open_issues": 2196, "watchers": 21591, "default_branch": "master"}}, "_links": {"self": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/12407"}, "html": {"href": "https://github.com/pytorch/pytorch/pull/12407"}, "issue": {"href": "https://api.github.com/repos/pytorch/pytorch/issues/12407"}, "comments": {"href": "https://api.github.com/repos/pytorch/pytorch/issues/12407/comments"}, "review_comments": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/12407/comments"}, "review_comment": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/comments{/number}"}, "commits": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/12407/commits"}, "statuses": {"href": "https://api.github.com/repos/pytorch/pytorch/statuses/6c278f2cff213711e8c0508b0b0b22fa0fff384e"}}, "author_association": "CONTRIBUTOR", "body_html": "<p>Stack:<br>\n\u00a0\u00a0\u00a0\u00a0<g-emoji class=\"g-emoji\" alias=\"black_circle\" fallback-src=\"https://assets-cdn.github.com/images/icons/emoji/unicode/26ab.png\">\u26ab\ufe0f</g-emoji>\u00a0 <strong><a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load issue title\" data-id=\"367395347\" data-permission-text=\"Issue title is private\" data-url=\"https://github.com/pytorch/pytorch/issues/12407\" data-hovercard-type=\"pull_request\" data-hovercard-url=\"/pytorch/pytorch/pull/12407/hovercard\" href=\"https://github.com/pytorch/pytorch/pull/12407\">#12407</a> [pt1][tensor] caffe2::empty for Resize+mutable_data refactor</strong>\u00a0\u00a0<a href=\"https://our.internmc.facebook.com/intern/diff/D10207890/\" rel=\"nofollow\"><g-emoji class=\"g-emoji\" alias=\"green_heart\" fallback-src=\"https://assets-cdn.github.com/images/icons/emoji/unicode/1f49a.png\">\ud83d\udc9a</g-emoji></a></p>\n<h3>Motivation</h3>\n<p>We want to use tensor factory to refactor the caffe2's old way of initialize Tensor by Resize and mutable_data<br>\nin order to eliminate uninitialized Tensor.</p>\n<p>Previously when we want to create a Tensor in caffe2, we'll do the following</p>\n<pre><code>Tensor x(CPU); // device type provided\nx.Resize({1, 2, 3}); // size provided\nx.mutable_data&lt;float&gt;(); // data type provided and memory allocated\n</code></pre>\n<p>This leaves Tensor in not fully initialized state during the process, to eliminate this, we<br>\nwant to provide all the needed information in the begining. ATen already has its TensorFactories: <a href=\"https://github.com/pytorch/pytorch/blob/master/aten/src/ATen/native/TensorFactories.cpp\">https://github.com/pytorch/pytorch/blob/master/aten/src/ATen/native/TensorFactories.cpp</a>, and there is a TensorOption, we want to adopt the same interface to ease future refactoring.</p>\n<p>In the callsite, we used to have <code>Output(i)</code> that returns a <code>Blob</code> that contains an uninitialized <code>Tensor</code> and we'll call Resize and mutable_data afterwards to provide dimension and data type,</p>\n<pre><code>// uninitialized tensor\nauto* Y = Output(0);\n// set dimensions\nY-&gt;Resize({1, 2, 3});\n// actually allocate the data\nauto* data = Y-&gt;mutable_data&lt;float&gt;();\n// After this step, Tensor is fully initialized.\n</code></pre>\n<p>We want to change it to the following:</p>\n<pre><code>// provide dimensions and TensorOptions which include device type and data type.\n// This will set all the information of Tensor properly and also allocate memory.\nauto* Y = Output(0, {1, 2, 3}, at::device({context_.device_type()}).template dtype&lt;T&gt;());\n// Tensor is fully initialized after this step\n\n// following `mutable_data` call won't allocate memory.\nauto* data = Y-&gt;mutable_data&lt;float&gt;();\n</code></pre>\n<h3>Perf result</h3>\n<p>microbenchmarks</p>\n<pre><code>============================================================================\ncaffe2/caffe2/fb/benchmarks/core_overhead_benchmark.ccrelative  time/iter  iters/s\n============================================================================\nOperatorNewOutputTensorAPI                                   3.27us  306.05K\nOperatorOldOutputTensorAPI                                   3.55us  281.54K\n============================================================================\n</code></pre>\n<p>Differential Revision: <a href=\"https://our.internmc.facebook.com/intern/diff/D10207890/\" rel=\"nofollow\">D10207890</a></p>", "body_text": "Stack:\n\u00a0\u00a0\u00a0\u00a0\u26ab\ufe0f\u00a0 #12407 [pt1][tensor] caffe2::empty for Resize+mutable_data refactor\u00a0\u00a0\ud83d\udc9a\nMotivation\nWe want to use tensor factory to refactor the caffe2's old way of initialize Tensor by Resize and mutable_data\nin order to eliminate uninitialized Tensor.\nPreviously when we want to create a Tensor in caffe2, we'll do the following\nTensor x(CPU); // device type provided\nx.Resize({1, 2, 3}); // size provided\nx.mutable_data<float>(); // data type provided and memory allocated\n\nThis leaves Tensor in not fully initialized state during the process, to eliminate this, we\nwant to provide all the needed information in the begining. ATen already has its TensorFactories: https://github.com/pytorch/pytorch/blob/master/aten/src/ATen/native/TensorFactories.cpp, and there is a TensorOption, we want to adopt the same interface to ease future refactoring.\nIn the callsite, we used to have Output(i) that returns a Blob that contains an uninitialized Tensor and we'll call Resize and mutable_data afterwards to provide dimension and data type,\n// uninitialized tensor\nauto* Y = Output(0);\n// set dimensions\nY->Resize({1, 2, 3});\n// actually allocate the data\nauto* data = Y->mutable_data<float>();\n// After this step, Tensor is fully initialized.\n\nWe want to change it to the following:\n// provide dimensions and TensorOptions which include device type and data type.\n// This will set all the information of Tensor properly and also allocate memory.\nauto* Y = Output(0, {1, 2, 3}, at::device({context_.device_type()}).template dtype<T>());\n// Tensor is fully initialized after this step\n\n// following `mutable_data` call won't allocate memory.\nauto* data = Y->mutable_data<float>();\n\nPerf result\nmicrobenchmarks\n============================================================================\ncaffe2/caffe2/fb/benchmarks/core_overhead_benchmark.ccrelative  time/iter  iters/s\n============================================================================\nOperatorNewOutputTensorAPI                                   3.27us  306.05K\nOperatorOldOutputTensorAPI                                   3.55us  281.54K\n============================================================================\n\nDifferential Revision: D10207890", "merged": false, "mergeable": null, "rebaseable": null, "mergeable_state": "unknown", "merged_by": null, "comments": 1, "review_comments": 30, "maintainer_can_modify": false, "commits": 70, "additions": 95, "deletions": 4, "changed_files": 7}