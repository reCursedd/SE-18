{"url": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/224975175", "pull_request_review_id": 164480126, "id": 224975175, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIyNDk3NTE3NQ==", "diff_hunk": "@@ -453,6 +468,18 @@ class Operator : public OperatorBase {\n     return OperatorBase::template Input<Tensor>(idx, type);\n   }\n \n+  inline Tensor* Output(\n+      int idx,\n+      const vector<int64_t>& dims,\n+      const at::TensorOptions& options) {\n+    if (options.device_opt() == at::nullopt) {\n+      auto opt = options;\n+      opt.device(context_.device());", "path": "caffe2/core/operator.h", "position": null, "original_position": 35, "commit_id": "6c278f2cff213711e8c0508b0b0b22fa0fff384e", "original_commit_id": "7d76e4da0c84a2201f62c214bae1b44c2c698d22", "user": {"login": "ezyang", "id": 13564, "node_id": "MDQ6VXNlcjEzNTY0", "avatar_url": "https://avatars0.githubusercontent.com/u/13564?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ezyang", "html_url": "https://github.com/ezyang", "followers_url": "https://api.github.com/users/ezyang/followers", "following_url": "https://api.github.com/users/ezyang/following{/other_user}", "gists_url": "https://api.github.com/users/ezyang/gists{/gist_id}", "starred_url": "https://api.github.com/users/ezyang/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ezyang/subscriptions", "organizations_url": "https://api.github.com/users/ezyang/orgs", "repos_url": "https://api.github.com/users/ezyang/repos", "events_url": "https://api.github.com/users/ezyang/events{/privacy}", "received_events_url": "https://api.github.com/users/ezyang/received_events", "type": "User", "site_admin": false}, "body": "This usage will conflict with #12473. In this case, I'd appreciate it if you just rewrote this to be safe. It's pretty easy: instead of writing opt, write `TensorOptions(opt).device(context_.device())`. ", "created_at": "2018-10-14T00:05:16Z", "updated_at": "2018-11-23T15:52:58Z", "html_url": "https://github.com/pytorch/pytorch/pull/12407#discussion_r224975175", "pull_request_url": "https://api.github.com/repos/pytorch/pytorch/pulls/12407", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/224975175"}, "html": {"href": "https://github.com/pytorch/pytorch/pull/12407#discussion_r224975175"}, "pull_request": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/12407"}}, "body_html": "<p>This usage will conflict with <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load issue title\" data-id=\"367988597\" data-permission-text=\"Issue title is private\" data-url=\"https://github.com/pytorch/pytorch/issues/12473\" data-hovercard-type=\"pull_request\" data-hovercard-url=\"/pytorch/pytorch/pull/12473/hovercard\" href=\"https://github.com/pytorch/pytorch/pull/12473\">#12473</a>. In this case, I'd appreciate it if you just rewrote this to be safe. It's pretty easy: instead of writing opt, write <code>TensorOptions(opt).device(context_.device())</code>.</p>", "body_text": "This usage will conflict with #12473. In this case, I'd appreciate it if you just rewrote this to be safe. It's pretty easy: instead of writing opt, write TensorOptions(opt).device(context_.device())."}