{"url": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/194944376", "pull_request_review_id": 128213070, "id": 194944376, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5NDk0NDM3Ng==", "diff_hunk": "@@ -0,0 +1,32 @@\n+#pragma once\n+\n+#include \"caffe2/utils/IdWrapper.h\"\n+#include <string>\n+#include <iostream>\n+#include <mutex>\n+#include <unordered_set>\n+\n+namespace c10 {\n+\n+namespace details {\n+  using _tensorTypeId_underlyingType = uint8_t;", "path": "caffe2/core/dispatch/TensorTypeId.h", "position": 12, "original_position": 12, "commit_id": "e98041959adca7661a009c729d6a1699a81b19aa", "original_commit_id": "e412d966fa9b56ac481082cad9619b4528e30c2b", "user": {"login": "dzhulgakov", "id": 17890620, "node_id": "MDQ6VXNlcjE3ODkwNjIw", "avatar_url": "https://avatars2.githubusercontent.com/u/17890620?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dzhulgakov", "html_url": "https://github.com/dzhulgakov", "followers_url": "https://api.github.com/users/dzhulgakov/followers", "following_url": "https://api.github.com/users/dzhulgakov/following{/other_user}", "gists_url": "https://api.github.com/users/dzhulgakov/gists{/gist_id}", "starred_url": "https://api.github.com/users/dzhulgakov/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dzhulgakov/subscriptions", "organizations_url": "https://api.github.com/users/dzhulgakov/orgs", "repos_url": "https://api.github.com/users/dzhulgakov/repos", "events_url": "https://api.github.com/users/dzhulgakov/events{/privacy}", "received_events_url": "https://api.github.com/users/dzhulgakov/received_events", "type": "User", "site_admin": false}, "body": "it's a little fancy code to do registration. What C2 does is just have a single Enum of DeviceType (which is equivalent of TypeId here). The rationale is that you'd need to serialize them at some point too and there won't be too many values.\r\n\r\nDynamic registration is cool and I think it shouldn't cause issues, but it does create a lot of boilerplate for something that could be an enum for some time :)", "created_at": "2018-06-13T02:55:34Z", "updated_at": "2018-11-23T15:45:25Z", "html_url": "https://github.com/pytorch/pytorch/pull/8389#discussion_r194944376", "pull_request_url": "https://api.github.com/repos/pytorch/pytorch/pulls/8389", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/194944376"}, "html": {"href": "https://github.com/pytorch/pytorch/pull/8389#discussion_r194944376"}, "pull_request": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/8389"}}, "body_html": "<p>it's a little fancy code to do registration. What C2 does is just have a single Enum of DeviceType (which is equivalent of TypeId here). The rationale is that you'd need to serialize them at some point too and there won't be too many values.</p>\n<p>Dynamic registration is cool and I think it shouldn't cause issues, but it does create a lot of boilerplate for something that could be an enum for some time :)</p>", "body_text": "it's a little fancy code to do registration. What C2 does is just have a single Enum of DeviceType (which is equivalent of TypeId here). The rationale is that you'd need to serialize them at some point too and there won't be too many values.\nDynamic registration is cool and I think it shouldn't cause issues, but it does create a lot of boilerplate for something that could be an enum for some time :)"}