{"url": "https://api.github.com/repos/pytorch/pytorch/issues/comments/409798017", "html_url": "https://github.com/pytorch/pytorch/issues/4858#issuecomment-409798017", "issue_url": "https://api.github.com/repos/pytorch/pytorch/issues/4858", "id": 409798017, "node_id": "MDEyOklzc3VlQ29tbWVudDQwOTc5ODAxNw==", "user": {"login": "rfejgin", "id": 345348, "node_id": "MDQ6VXNlcjM0NTM0OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/345348?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rfejgin", "html_url": "https://github.com/rfejgin", "followers_url": "https://api.github.com/users/rfejgin/followers", "following_url": "https://api.github.com/users/rfejgin/following{/other_user}", "gists_url": "https://api.github.com/users/rfejgin/gists{/gist_id}", "starred_url": "https://api.github.com/users/rfejgin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rfejgin/subscriptions", "organizations_url": "https://api.github.com/users/rfejgin/orgs", "repos_url": "https://api.github.com/users/rfejgin/repos", "events_url": "https://api.github.com/users/rfejgin/events{/privacy}", "received_events_url": "https://api.github.com/users/rfejgin/received_events", "type": "User", "site_admin": false}, "created_at": "2018-08-02T03:56:47Z", "updated_at": "2018-08-02T04:00:25Z", "author_association": "NONE", "body_html": "<p>Specifically, we could do something like this:<br>\nChange<br>\n<a href=\"https://github.com/pytorch/pytorch/blob/master/aten/src/THC/THCTensorRandom.cuh#L257\">https://github.com/pytorch/pytorch/blob/master/aten/src/THC/THCTensorRandom.cuh#L257</a><br>\nto</p>\n<pre><code>bool inBucket =\n        (cat &lt; categories) &amp;&amp;\n        (!THCNumerics&lt;T&gt;::gt(sample, curBucket)) &amp;&amp;\n        (THCNumerics&lt;T&gt;::gt(sample, prevBucket)) &amp;&amp;\n        (THCNumerics&lt;T&gt;::gt(THCNumerics&lt;T&gt;::sub(curBucket, prevBucket), ScalarConvert&lt;float, T&gt;::to(1e-07)));\n</code></pre>\n<p>... except that the threshold (1e-7 in this example) would need to depend on the data type T, and there is still some question how exactly to choose it.</p>\n<p>Still, I tried this and was no longer able to produce zero-probability events, at least with preliminary (short) testing.</p>", "body_text": "Specifically, we could do something like this:\nChange\nhttps://github.com/pytorch/pytorch/blob/master/aten/src/THC/THCTensorRandom.cuh#L257\nto\nbool inBucket =\n        (cat < categories) &&\n        (!THCNumerics<T>::gt(sample, curBucket)) &&\n        (THCNumerics<T>::gt(sample, prevBucket)) &&\n        (THCNumerics<T>::gt(THCNumerics<T>::sub(curBucket, prevBucket), ScalarConvert<float, T>::to(1e-07)));\n\n... except that the threshold (1e-7 in this example) would need to depend on the data type T, and there is still some question how exactly to choose it.\nStill, I tried this and was no longer able to produce zero-probability events, at least with preliminary (short) testing.", "body": "Specifically, we could do something like this:\r\nChange\r\nhttps://github.com/pytorch/pytorch/blob/master/aten/src/THC/THCTensorRandom.cuh#L257\r\nto \r\n```\r\nbool inBucket =\r\n        (cat < categories) &&\r\n        (!THCNumerics<T>::gt(sample, curBucket)) &&\r\n        (THCNumerics<T>::gt(sample, prevBucket)) &&\r\n        (THCNumerics<T>::gt(THCNumerics<T>::sub(curBucket, prevBucket), ScalarConvert<float, T>::to(1e-07)));\r\n```\r\n... except that the threshold (1e-7 in this example) would need to depend on the data type T, and there is still some question how exactly to choose it.\r\n\r\nStill, I tried this and was no longer able to produce zero-probability events, at least with preliminary (short) testing.\r\n"}