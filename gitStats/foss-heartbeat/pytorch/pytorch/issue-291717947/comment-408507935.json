{"url": "https://api.github.com/repos/pytorch/pytorch/issues/comments/408507935", "html_url": "https://github.com/pytorch/pytorch/issues/4858#issuecomment-408507935", "issue_url": "https://api.github.com/repos/pytorch/pytorch/issues/4858", "id": 408507935, "node_id": "MDEyOklzc3VlQ29tbWVudDQwODUwNzkzNQ==", "user": {"login": "t-vi", "id": 20787943, "node_id": "MDQ6VXNlcjIwNzg3OTQz", "avatar_url": "https://avatars2.githubusercontent.com/u/20787943?v=4", "gravatar_id": "", "url": "https://api.github.com/users/t-vi", "html_url": "https://github.com/t-vi", "followers_url": "https://api.github.com/users/t-vi/followers", "following_url": "https://api.github.com/users/t-vi/following{/other_user}", "gists_url": "https://api.github.com/users/t-vi/gists{/gist_id}", "starred_url": "https://api.github.com/users/t-vi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/t-vi/subscriptions", "organizations_url": "https://api.github.com/users/t-vi/orgs", "repos_url": "https://api.github.com/users/t-vi/repos", "events_url": "https://api.github.com/users/t-vi/events{/privacy}", "received_events_url": "https://api.github.com/users/t-vi/received_events", "type": "User", "site_admin": false}, "created_at": "2018-07-27T18:51:01Z", "updated_at": "2018-07-27T18:57:12Z", "author_association": "CONTRIBUTOR", "body_html": "<p>I'm still kind of proud for debugging and fixing this (one of my early deep into CUDA patches and I did most of the searching while on the train with a sketchy connection to the GPU computer), but I only improved the binary search based multi-item case, not the sampleMultinomialOnce.</p>\n<p>This reproduces the problem for me:</p>\n<pre><code>import torch\na = torch.zeros(3421,2, device=\"cuda\")\na[:,1] = 1\ntorch.cuda.manual_seed(5214)\nb = torch.multinomial(a, 1)\nassert b.min().item()&gt;0\n</code></pre>\n<p>I can take a look, but I herd whispers that the random functions might be in for a rework anyway.<br>\n(I just took a large vector of 0-1 probs and looped over the manual seeds to find this.)</p>", "body_text": "I'm still kind of proud for debugging and fixing this (one of my early deep into CUDA patches and I did most of the searching while on the train with a sketchy connection to the GPU computer), but I only improved the binary search based multi-item case, not the sampleMultinomialOnce.\nThis reproduces the problem for me:\nimport torch\na = torch.zeros(3421,2, device=\"cuda\")\na[:,1] = 1\ntorch.cuda.manual_seed(5214)\nb = torch.multinomial(a, 1)\nassert b.min().item()>0\n\nI can take a look, but I herd whispers that the random functions might be in for a rework anyway.\n(I just took a large vector of 0-1 probs and looped over the manual seeds to find this.)", "body": "I'm still kind of proud for debugging and fixing this (one of my early deep into CUDA patches and I did most of the searching while on the train with a sketchy connection to the GPU computer), but I only improved the binary search based multi-item case, not the sampleMultinomialOnce.\r\n\r\nThis reproduces the problem for me:\r\n```\r\nimport torch\r\na = torch.zeros(3421,2, device=\"cuda\")\r\na[:,1] = 1\r\ntorch.cuda.manual_seed(5214)\r\nb = torch.multinomial(a, 1)\r\nassert b.min().item()>0\r\n```\r\nI can take a look, but I herd whispers that the random functions might be in for a rework anyway.\r\n(I just took a large vector of 0-1 probs and looped over the manual seeds to find this.)"}