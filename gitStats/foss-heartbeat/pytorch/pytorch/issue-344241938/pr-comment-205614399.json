{"url": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/205614399", "pull_request_review_id": 140923305, "id": 205614399, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwNTYxNDM5OQ==", "diff_hunk": "@@ -566,6 +882,18 @@ void CompiledFusionFunction::launch_with_tensors(at::ArrayRef<at::Tensor> inputs\n       }\n     }\n   }\n+\n+  #ifdef USE_CUDA\n+    // If the kernel call contains a random op, we need to pass in random seeds as\n+    // well.\n+    if(has_random && this->backend() == at::kCUDA) {\n+      auto gen_ = THCRandom_getGenerator(at::globalContext().getTHCState());\n+      uint64_t offset = gen_->state.philox_seed_offset.fetch_add(20);", "path": "torch/csrc/jit/fusion_compiler.cpp", "position": null, "original_position": 400, "commit_id": "d802d7a10e5ef692c0fa662605c62fc79ffc8957", "original_commit_id": "dae9db045de4dc496fb5be6cc99be05a10d4df0b", "user": {"login": "zdevito", "id": 370202, "node_id": "MDQ6VXNlcjM3MDIwMg==", "avatar_url": "https://avatars0.githubusercontent.com/u/370202?v=4", "gravatar_id": "", "url": "https://api.github.com/users/zdevito", "html_url": "https://github.com/zdevito", "followers_url": "https://api.github.com/users/zdevito/followers", "following_url": "https://api.github.com/users/zdevito/following{/other_user}", "gists_url": "https://api.github.com/users/zdevito/gists{/gist_id}", "starred_url": "https://api.github.com/users/zdevito/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/zdevito/subscriptions", "organizations_url": "https://api.github.com/users/zdevito/orgs", "repos_url": "https://api.github.com/users/zdevito/repos", "events_url": "https://api.github.com/users/zdevito/events{/privacy}", "received_events_url": "https://api.github.com/users/zdevito/received_events", "type": "User", "site_admin": false}, "body": "\r\nUnlike the other uses, the number of times an inner loops will run in a fusion kernel is dependent on the size of the tensors and the number of calls to rand.\r\n\r\nIn that case shouldn't it be  (number of times a single thread can call the random number generator)/4?\r\n\r\nMax times a thread runs its inner loop is:\r\n\r\n```\r\nmax_times_an_inner_loop_runs = ceil(numel/(num_threads_per_block*number_of_blocks_launched))\r\nmax_rand_calls_per_thread = num_calls_to_rand_in_body*max_times_an_inner_loop_runs\r\n```\r\n", "created_at": "2018-07-26T21:53:37Z", "updated_at": "2018-11-23T15:48:16Z", "html_url": "https://github.com/pytorch/pytorch/pull/9795#discussion_r205614399", "pull_request_url": "https://api.github.com/repos/pytorch/pytorch/pulls/9795", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/205614399"}, "html": {"href": "https://github.com/pytorch/pytorch/pull/9795#discussion_r205614399"}, "pull_request": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/9795"}}, "body_html": "<p>Unlike the other uses, the number of times an inner loops will run in a fusion kernel is dependent on the size of the tensors and the number of calls to rand.</p>\n<p>In that case shouldn't it be  (number of times a single thread can call the random number generator)/4?</p>\n<p>Max times a thread runs its inner loop is:</p>\n<pre><code>max_times_an_inner_loop_runs = ceil(numel/(num_threads_per_block*number_of_blocks_launched))\nmax_rand_calls_per_thread = num_calls_to_rand_in_body*max_times_an_inner_loop_runs\n</code></pre>", "body_text": "Unlike the other uses, the number of times an inner loops will run in a fusion kernel is dependent on the size of the tensors and the number of calls to rand.\nIn that case shouldn't it be  (number of times a single thread can call the random number generator)/4?\nMax times a thread runs its inner loop is:\nmax_times_an_inner_loop_runs = ceil(numel/(num_threads_per_block*number_of_blocks_launched))\nmax_rand_calls_per_thread = num_calls_to_rand_in_body*max_times_an_inner_loop_runs", "in_reply_to_id": 205586219}