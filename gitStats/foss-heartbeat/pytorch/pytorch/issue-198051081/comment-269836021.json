{"url": "https://api.github.com/repos/pytorch/pytorch/issues/comments/269836021", "html_url": "https://github.com/pytorch/pytorch/issues/369#issuecomment-269836021", "issue_url": "https://api.github.com/repos/pytorch/pytorch/issues/369", "id": 269836021, "node_id": "MDEyOklzc3VlQ29tbWVudDI2OTgzNjAyMQ==", "user": {"login": "colesbury", "id": 655866, "node_id": "MDQ6VXNlcjY1NTg2Ng==", "avatar_url": "https://avatars1.githubusercontent.com/u/655866?v=4", "gravatar_id": "", "url": "https://api.github.com/users/colesbury", "html_url": "https://github.com/colesbury", "followers_url": "https://api.github.com/users/colesbury/followers", "following_url": "https://api.github.com/users/colesbury/following{/other_user}", "gists_url": "https://api.github.com/users/colesbury/gists{/gist_id}", "starred_url": "https://api.github.com/users/colesbury/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/colesbury/subscriptions", "organizations_url": "https://api.github.com/users/colesbury/orgs", "repos_url": "https://api.github.com/users/colesbury/repos", "events_url": "https://api.github.com/users/colesbury/events{/privacy}", "received_events_url": "https://api.github.com/users/colesbury/received_events", "type": "User", "site_admin": false}, "created_at": "2016-12-30T23:50:18Z", "updated_at": "2016-12-30T23:55:28Z", "author_association": "MEMBER", "body_html": "<p>The documented behavior is to concatenate along the last dimension. This seems weird to me. NumPy, for instance, defaults to dimension \"0\". Is there a reason to default to the last dimension? Or can we change it to match NumPy's behavior?</p>\n<p>I think it would be nice to have <code>torch.cat</code> be an inverse of <code>chunk</code> and <code>split</code>, both of which default to dimension 0. i.e. I think this should be an identity:</p>\n<p><code>torch.cat(torch.split(tensor, n))</code></p>", "body_text": "The documented behavior is to concatenate along the last dimension. This seems weird to me. NumPy, for instance, defaults to dimension \"0\". Is there a reason to default to the last dimension? Or can we change it to match NumPy's behavior?\nI think it would be nice to have torch.cat be an inverse of chunk and split, both of which default to dimension 0. i.e. I think this should be an identity:\ntorch.cat(torch.split(tensor, n))", "body": "The documented behavior is to concatenate along the last dimension. This seems weird to me. NumPy, for instance, defaults to dimension \"0\". Is there a reason to default to the last dimension? Or can we change it to match NumPy's behavior?\r\n\r\nI think it would be nice to have `torch.cat` be an inverse of `chunk` and `split`, both of which default to dimension 0. i.e. I think this should be an identity:\r\n\r\n`torch.cat(torch.split(tensor, n))`"}