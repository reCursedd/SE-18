{"url": "https://api.github.com/repos/pytorch/pytorch/issues/comments/411919644", "html_url": "https://github.com/pytorch/pytorch/pull/10105#issuecomment-411919644", "issue_url": "https://api.github.com/repos/pytorch/pytorch/issues/10105", "id": 411919644, "node_id": "MDEyOklzc3VlQ29tbWVudDQxMTkxOTY0NA==", "user": {"login": "resistor", "id": 9796, "node_id": "MDQ6VXNlcjk3OTY=", "avatar_url": "https://avatars0.githubusercontent.com/u/9796?v=4", "gravatar_id": "", "url": "https://api.github.com/users/resistor", "html_url": "https://github.com/resistor", "followers_url": "https://api.github.com/users/resistor/followers", "following_url": "https://api.github.com/users/resistor/following{/other_user}", "gists_url": "https://api.github.com/users/resistor/gists{/gist_id}", "starred_url": "https://api.github.com/users/resistor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/resistor/subscriptions", "organizations_url": "https://api.github.com/users/resistor/orgs", "repos_url": "https://api.github.com/users/resistor/repos", "events_url": "https://api.github.com/users/resistor/events{/privacy}", "received_events_url": "https://api.github.com/users/resistor/received_events", "type": "User", "site_admin": false}, "created_at": "2018-08-09T22:35:19Z", "updated_at": "2018-08-09T22:35:19Z", "author_association": "CONTRIBUTOR", "body_html": "<p><a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=4583066\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/apaszke\">@apaszke</a> I did not observe any differences in test results switching from kind equality + input equality to operator==.  That said, even if the difference does not inherently matter in CSE, I'd prefer to use the semantically correct check to make this easier to maintain in case CSE or our operator changes in the future in a way that would break the clever way.</p>", "body_text": "@apaszke I did not observe any differences in test results switching from kind equality + input equality to operator==.  That said, even if the difference does not inherently matter in CSE, I'd prefer to use the semantically correct check to make this easier to maintain in case CSE or our operator changes in the future in a way that would break the clever way.", "body": "@apaszke I did not observe any differences in test results switching from kind equality + input equality to operator==.  That said, even if the difference does not inherently matter in CSE, I'd prefer to use the semantically correct check to make this easier to maintain in case CSE or our operator changes in the future in a way that would break the clever way."}