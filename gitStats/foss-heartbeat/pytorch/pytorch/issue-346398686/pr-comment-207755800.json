{"url": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/207755800", "pull_request_review_id": 143430762, "id": 207755800, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwNzc1NTgwMA==", "diff_hunk": "@@ -107,18 +107,43 @@ struct EqualNodeCSE {\n \n // The function implements common subexpression elimination.\n // Since the nodes are visited in topological order, one pass is enough.\n-void EliminateCommonSubexpression(Block * block) {\n+void EliminateCommonSubexpression(Block * block,\n+                                  std::function<Node*(Node*)> parent_lookup_fn) {\n   std::unordered_set<Node*, HashNodeCSE, EqualNodeCSE> subexprs;\n   for (auto it = block->nodes().begin(); it != block->nodes().end(); ++ it) {\n     auto node = *it;\n     if (node->kind() == prim::PythonOp\n         || node->kind() == prim::Print\n-        || node->blocks().size() > 0\n        ) {\n       // Do NOT have enough information to do CSE on these nodes.\n       continue;\n     }\n \n+    if (node->blocks().size()) {\n+      // Traverse sub-blocks.\n+      for (auto block : node->blocks()) {\n+        EliminateCommonSubexpression(block,\n+        [&](Node *n) {", "path": "torch/csrc/jit/passes/common_subexpression_elimination.cpp", "position": null, "original_position": 22, "commit_id": "942a086b8699aec0cf11b33c8e120326e6df3c80", "original_commit_id": "03be61a2f627e9b4bd60c5c67cf8d44197fa4a87", "user": {"login": "apaszke", "id": 4583066, "node_id": "MDQ6VXNlcjQ1ODMwNjY=", "avatar_url": "https://avatars3.githubusercontent.com/u/4583066?v=4", "gravatar_id": "", "url": "https://api.github.com/users/apaszke", "html_url": "https://github.com/apaszke", "followers_url": "https://api.github.com/users/apaszke/followers", "following_url": "https://api.github.com/users/apaszke/following{/other_user}", "gists_url": "https://api.github.com/users/apaszke/gists{/gist_id}", "starred_url": "https://api.github.com/users/apaszke/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/apaszke/subscriptions", "organizations_url": "https://api.github.com/users/apaszke/orgs", "repos_url": "https://api.github.com/users/apaszke/repos", "events_url": "https://api.github.com/users/apaszke/events{/privacy}", "received_events_url": "https://api.github.com/users/apaszke/received_events", "type": "User", "site_admin": false}, "body": "nit: can you please indent this? otherwise it looks as if you were just continuing code on the same level, while it's really an argument to the call", "created_at": "2018-08-06T00:56:37Z", "updated_at": "2018-11-23T15:48:47Z", "html_url": "https://github.com/pytorch/pytorch/pull/10105#discussion_r207755800", "pull_request_url": "https://api.github.com/repos/pytorch/pytorch/pulls/10105", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/207755800"}, "html": {"href": "https://github.com/pytorch/pytorch/pull/10105#discussion_r207755800"}, "pull_request": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/10105"}}, "body_html": "<p>nit: can you please indent this? otherwise it looks as if you were just continuing code on the same level, while it's really an argument to the call</p>", "body_text": "nit: can you please indent this? otherwise it looks as if you were just continuing code on the same level, while it's really an argument to the call"}