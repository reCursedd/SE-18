{"url": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/182462023", "pull_request_review_id": 113256959, "id": 182462023, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MjQ2MjAyMw==", "diff_hunk": "@@ -216,3 +216,33 @@ function(pycmd outvar cmd)\n   string(STRIP \"${_output}\" _output)\n   set(${outvar} \"${_output}\" PARENT_SCOPE)\n endfunction()\n+\n+###\n+# Helper function to print out everything that cmake knows about a target\n+#\n+# Copied from https://stackoverflow.com/questions/32183975/how-to-print-all-the-properties-of-a-target-in-cmake\n+# This isn't called anywhere, but it's very useful when debugging cmake\n+# NOTE: This doesn't work for INTERFACE_LIBRARY or INTERFACE_LINK_LIBRARY targets\n+\n+# Get all propreties that cmake supports\n+execute_process(COMMAND cmake --help-property-list OUTPUT_VARIABLE CMAKE_PROPERTY_LIST)", "path": "cmake/Utils.cmake", "position": null, "original_position": 13, "commit_id": "7c71857c1f2b074e07e3026503b8bb13e7eaeff5", "original_commit_id": "e432412a73b115b5e91bf502e50754e9d3bc0062", "user": {"login": "orionr", "id": 79994, "node_id": "MDQ6VXNlcjc5OTk0", "avatar_url": "https://avatars3.githubusercontent.com/u/79994?v=4", "gravatar_id": "", "url": "https://api.github.com/users/orionr", "html_url": "https://github.com/orionr", "followers_url": "https://api.github.com/users/orionr/followers", "following_url": "https://api.github.com/users/orionr/following{/other_user}", "gists_url": "https://api.github.com/users/orionr/gists{/gist_id}", "starred_url": "https://api.github.com/users/orionr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/orionr/subscriptions", "organizations_url": "https://api.github.com/users/orionr/orgs", "repos_url": "https://api.github.com/users/orionr/repos", "events_url": "https://api.github.com/users/orionr/events{/privacy}", "received_events_url": "https://api.github.com/users/orionr/received_events", "type": "User", "site_admin": false}, "body": "Likely all platforms will be fine with this, but, to be safe, I think we should wrap this in a function and cache the result to be used in the `print_target_properties` function below. For example\r\n\r\n```\r\nfunction(populate_cmake_property_list)\r\n    if (!${CMAKE_PROPERTY_LIST})\r\n        execute_process(COMMAND cmake --help-property-list OUTPUT_VARIABLE CMAKE_PROPERTY_LIST)\r\n        ...\r\n    endif()\r\nendfunction()\r\n\r\nfunction(print_target_properties tgt)\r\n    populate_cmake_property_list()\r\n    ... the rest of the function ...\r\nendfunction(print_target_properties)\r\n```\r\n\r\nThoughts?", "created_at": "2018-04-18T15:06:29Z", "updated_at": "2018-11-23T15:42:44Z", "html_url": "https://github.com/pytorch/pytorch/pull/6680#discussion_r182462023", "pull_request_url": "https://api.github.com/repos/pytorch/pytorch/pulls/6680", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/182462023"}, "html": {"href": "https://github.com/pytorch/pytorch/pull/6680#discussion_r182462023"}, "pull_request": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/6680"}}, "body_html": "<p>Likely all platforms will be fine with this, but, to be safe, I think we should wrap this in a function and cache the result to be used in the <code>print_target_properties</code> function below. For example</p>\n<pre><code>function(populate_cmake_property_list)\n    if (!${CMAKE_PROPERTY_LIST})\n        execute_process(COMMAND cmake --help-property-list OUTPUT_VARIABLE CMAKE_PROPERTY_LIST)\n        ...\n    endif()\nendfunction()\n\nfunction(print_target_properties tgt)\n    populate_cmake_property_list()\n    ... the rest of the function ...\nendfunction(print_target_properties)\n</code></pre>\n<p>Thoughts?</p>", "body_text": "Likely all platforms will be fine with this, but, to be safe, I think we should wrap this in a function and cache the result to be used in the print_target_properties function below. For example\nfunction(populate_cmake_property_list)\n    if (!${CMAKE_PROPERTY_LIST})\n        execute_process(COMMAND cmake --help-property-list OUTPUT_VARIABLE CMAKE_PROPERTY_LIST)\n        ...\n    endif()\nendfunction()\n\nfunction(print_target_properties tgt)\n    populate_cmake_property_list()\n    ... the rest of the function ...\nendfunction(print_target_properties)\n\nThoughts?"}