{"url": "https://api.github.com/repos/pytorch/pytorch/issues/comments/377669363", "html_url": "https://github.com/pytorch/pytorch/pull/6136#issuecomment-377669363", "issue_url": "https://api.github.com/repos/pytorch/pytorch/issues/6136", "id": 377669363, "node_id": "MDEyOklzc3VlQ29tbWVudDM3NzY2OTM2Mw==", "user": {"login": "Naman-ntc", "id": 23135406, "node_id": "MDQ6VXNlcjIzMTM1NDA2", "avatar_url": "https://avatars2.githubusercontent.com/u/23135406?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Naman-ntc", "html_url": "https://github.com/Naman-ntc", "followers_url": "https://api.github.com/users/Naman-ntc/followers", "following_url": "https://api.github.com/users/Naman-ntc/following{/other_user}", "gists_url": "https://api.github.com/users/Naman-ntc/gists{/gist_id}", "starred_url": "https://api.github.com/users/Naman-ntc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Naman-ntc/subscriptions", "organizations_url": "https://api.github.com/users/Naman-ntc/orgs", "repos_url": "https://api.github.com/users/Naman-ntc/repos", "events_url": "https://api.github.com/users/Naman-ntc/events{/privacy}", "received_events_url": "https://api.github.com/users/Naman-ntc/received_events", "type": "User", "site_admin": false}, "created_at": "2018-03-31T06:08:25Z", "updated_at": "2018-03-31T06:18:09Z", "author_association": "CONTRIBUTOR", "body_html": "<p>These are the behaviours on corner cases otherwise working fine :</p>\n<blockquote>\n<p>=&gt;torch.randint(5,(3))<br>\nTraceback (most recent call last):<br>\nFile \"\", line 1, in <br>\nTypeError: randint(): argument 'size' (position 2) must be tuple of ints, not int</p>\n</blockquote>\n<blockquote>\n<p>=&gt;torch.randint(5,3)<br>\nTraceback (most recent call last):<br>\nFile \"\", line 1, in <br>\nTypeError: randint(): argument 'size' (position 2) must be tuple of ints, not int</p>\n</blockquote>\n<blockquote>\n<p>=&gt;torch.randint(5,10,3)<br>\nTraceback (most recent call last):<br>\nFile \"\", line 1, in <br>\nTypeError: randint() received an invalid combination of arguments - got (int, int, int), but expected one of:<br>\n(int high, tuple of ints size, torch.Generator generator, torch.dtype dtype, int device, bool requires_grad)<br>\n(int low, int high, tuple of ints size, torch.Generator generator, torch.dtype dtype, int<br>\ndevice, bool requires_grad)</p>\n</blockquote>\n<blockquote>\n<p>=&gt;torch.randint(3,5,())<br>\n4<br>\n[torch.FloatTensor of size ()]</p>\n</blockquote>\n<p>The first outcome is bothering me. Any fix? (Others are fine in my opinion)</p>", "body_text": "These are the behaviours on corner cases otherwise working fine :\n\n=>torch.randint(5,(3))\nTraceback (most recent call last):\nFile \"\", line 1, in \nTypeError: randint(): argument 'size' (position 2) must be tuple of ints, not int\n\n\n=>torch.randint(5,3)\nTraceback (most recent call last):\nFile \"\", line 1, in \nTypeError: randint(): argument 'size' (position 2) must be tuple of ints, not int\n\n\n=>torch.randint(5,10,3)\nTraceback (most recent call last):\nFile \"\", line 1, in \nTypeError: randint() received an invalid combination of arguments - got (int, int, int), but expected one of:\n(int high, tuple of ints size, torch.Generator generator, torch.dtype dtype, int device, bool requires_grad)\n(int low, int high, tuple of ints size, torch.Generator generator, torch.dtype dtype, int\ndevice, bool requires_grad)\n\n\n=>torch.randint(3,5,())\n4\n[torch.FloatTensor of size ()]\n\nThe first outcome is bothering me. Any fix? (Others are fine in my opinion)", "body": "These are the behaviours on corner cases otherwise working fine :  \r\n\r\n> =>torch.randint(5,(3))\r\nTraceback (most recent call last):\r\n  File \"<stdin>\", line 1, in <module>\r\nTypeError: randint(): argument 'size' (position 2) must be tuple of ints, not int\r\n\r\n> =>torch.randint(5,3)\r\nTraceback (most recent call last):\r\n  File \"<stdin>\", line 1, in <module>\r\nTypeError: randint(): argument 'size' (position 2) must be tuple of ints, not int\r\n\r\n> =>torch.randint(5,10,3)\r\nTraceback (most recent call last):\r\n  File \"<stdin>\", line 1, in <module>\r\nTypeError: randint() received an invalid combination of arguments - got (int, int, int), but expected one of:\r\n(int high, tuple of ints size, torch.Generator generator, torch.dtype dtype, int device, bool requires_grad)\r\n(int low, int high, tuple of ints size, torch.Generator generator, torch.dtype dtype, int \r\ndevice, bool requires_grad)\r\n\r\n> =>torch.randint(3,5,())\r\n4\r\n[torch.FloatTensor of size ()]\r\n\r\n\r\nThe first outcome is bothering me. Any fix? (Others are fine in my opinion)"}