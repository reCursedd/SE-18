{"url": "https://api.github.com/repos/pytorch/pytorch/issues/comments/417130658", "html_url": "https://github.com/pytorch/pytorch/issues/11029#issuecomment-417130658", "issue_url": "https://api.github.com/repos/pytorch/pytorch/issues/11029", "id": 417130658, "node_id": "MDEyOklzc3VlQ29tbWVudDQxNzEzMDY1OA==", "user": {"login": "ptrblck", "id": 11662379, "node_id": "MDQ6VXNlcjExNjYyMzc5", "avatar_url": "https://avatars3.githubusercontent.com/u/11662379?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ptrblck", "html_url": "https://github.com/ptrblck", "followers_url": "https://api.github.com/users/ptrblck/followers", "following_url": "https://api.github.com/users/ptrblck/following{/other_user}", "gists_url": "https://api.github.com/users/ptrblck/gists{/gist_id}", "starred_url": "https://api.github.com/users/ptrblck/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ptrblck/subscriptions", "organizations_url": "https://api.github.com/users/ptrblck/orgs", "repos_url": "https://api.github.com/users/ptrblck/repos", "events_url": "https://api.github.com/users/ptrblck/events{/privacy}", "received_events_url": "https://api.github.com/users/ptrblck/received_events", "type": "User", "site_admin": false}, "created_at": "2018-08-29T22:42:28Z", "updated_at": "2018-08-29T22:42:28Z", "author_association": "CONTRIBUTOR", "body_html": "<p>The current implementation takes a single length or list of length to split the tensor.</p>\n<div class=\"highlight highlight-source-python\"><pre>x <span class=\"pl-k\">=</span> torch.randn(<span class=\"pl-c1\">224</span>)\ntorch.split(x, <span class=\"pl-v\">split_size_or_sections</span><span class=\"pl-k\">=</span><span class=\"pl-c1\">20</span>)</pre></div>\n<p>returns 11 tensors of shape <code>[20]</code> and 1 of shape <code>[4]</code>.</p>\n<p><code>torch.chunk</code> seems to be more related to <code>np.array_split</code> using an integer:</p>\n<div class=\"highlight highlight-source-python\"><pre>torch.chunk(x, <span class=\"pl-v\">chunks</span><span class=\"pl-k\">=</span><span class=\"pl-c1\">20</span>)</pre></div>\n<p>returns 18 chunks of shape <code>[12]</code> and 1 of shape <code>[8]</code>,<br>\nwhile <code>np.array_split</code> returns 4 chunks of shape <code>[12]</code> and 16 of shape <code>[11]</code>.</p>\n<p><a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=4583066\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/apaszke\">@apaszke</a> What do you think, should <code>torch.chunk</code> be rather modified?</p>", "body_text": "The current implementation takes a single length or list of length to split the tensor.\nx = torch.randn(224)\ntorch.split(x, split_size_or_sections=20)\nreturns 11 tensors of shape [20] and 1 of shape [4].\ntorch.chunk seems to be more related to np.array_split using an integer:\ntorch.chunk(x, chunks=20)\nreturns 18 chunks of shape [12] and 1 of shape [8],\nwhile np.array_split returns 4 chunks of shape [12] and 16 of shape [11].\n@apaszke What do you think, should torch.chunk be rather modified?", "body": "The current implementation takes a single length or list of length to split the tensor.\r\n```python\r\nx = torch.randn(224)\r\ntorch.split(x, split_size_or_sections=20)\r\n```\r\nreturns 11 tensors of shape `[20]` and 1 of shape `[4]`.\r\n\r\n`torch.chunk` seems to be more related to `np.array_split` using an integer:\r\n```python\r\ntorch.chunk(x, chunks=20)\r\n```\r\nreturns 18 chunks of shape `[12]` and 1 of shape `[8]`,\r\nwhile `np.array_split` returns 4 chunks of shape `[12]` and 16 of shape `[11]`.\r\n\r\n@apaszke What do you think, should `torch.chunk` be rather modified?"}