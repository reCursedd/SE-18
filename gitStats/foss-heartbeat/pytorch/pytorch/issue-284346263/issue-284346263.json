{"url": "https://api.github.com/repos/pytorch/pytorch/issues/4343", "repository_url": "https://api.github.com/repos/pytorch/pytorch", "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/4343/labels{/name}", "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/4343/comments", "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/4343/events", "html_url": "https://github.com/pytorch/pytorch/issues/4343", "id": 284346263, "node_id": "MDU6SXNzdWUyODQzNDYyNjM=", "number": 4343, "title": "Can't export onnx from normal computation graph", "user": {"login": "tkclimb", "id": 14227047, "node_id": "MDQ6VXNlcjE0MjI3MDQ3", "avatar_url": "https://avatars1.githubusercontent.com/u/14227047?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tkclimb", "html_url": "https://github.com/tkclimb", "followers_url": "https://api.github.com/users/tkclimb/followers", "following_url": "https://api.github.com/users/tkclimb/following{/other_user}", "gists_url": "https://api.github.com/users/tkclimb/gists{/gist_id}", "starred_url": "https://api.github.com/users/tkclimb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tkclimb/subscriptions", "organizations_url": "https://api.github.com/users/tkclimb/orgs", "repos_url": "https://api.github.com/users/tkclimb/repos", "events_url": "https://api.github.com/users/tkclimb/events{/privacy}", "received_events_url": "https://api.github.com/users/tkclimb/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2017-12-24T06:40:06Z", "updated_at": "2017-12-28T21:58:38Z", "closed_at": "2017-12-28T21:58:19Z", "author_association": "NONE", "body_html": "<p>Is there any way to export normal computation graph by <code>pytorch.onnx.export</code> ??<br>\nI just met an error when I ran a following simple code.</p>\n<h2>sample code</h2>\n<pre><code>from torch.autograd import Variable\nimport torch.onnx\nimport torchvision\n\n\nx = torch.randn(3)\nx = Variable(x, requires_grad=True)\n\ny = x * 2\nz = y.mean()\n\ntorch.onnx.export(z, x, 'cg.onnx.pb', verbose=True)\n</code></pre>\n<h2>error message</h2>\n<pre><code>&gt;&gt; python python/computation_graph.py\n\nTraceback (most recent call last):\n  File \"python/computation_graph.py\", line 13, in &lt;module&gt;\n    torch.onnx.export(z, x, 'cg.onnx.pb', verbose=True)\n  File \"/Users/yamada/.pyenv/versions/trillion/lib/python3.6/site-packages/torch/onnx/__init__.py\", li\nne 75, in export\n    _export(model, args, f, export_params, verbose, training)\n  File \"/Users/yamada/.pyenv/versions/trillion/lib/python3.6/site-packages/torch/onnx/__init__.py\", li\nne 108, in _export\n    orig_state_dict_keys = model.state_dict().keys()\n  File \"/Users/yamada/.pyenv/versions/trillion/lib/python3.6/site-packages/torch/autograd/variable.py\"\n, line 67, in __getattr__\n    return object.__getattribute__(self, name)\nAttributeError: 'Variable' object has no attribute 'state_dict'\n</code></pre>\n<p>it seems to be 1st argment is not proper.<br>\nhowever I have no idea which kind of object I should take here when I'd like actually to do it.</p>", "body_text": "Is there any way to export normal computation graph by pytorch.onnx.export ??\nI just met an error when I ran a following simple code.\nsample code\nfrom torch.autograd import Variable\nimport torch.onnx\nimport torchvision\n\n\nx = torch.randn(3)\nx = Variable(x, requires_grad=True)\n\ny = x * 2\nz = y.mean()\n\ntorch.onnx.export(z, x, 'cg.onnx.pb', verbose=True)\n\nerror message\n>> python python/computation_graph.py\n\nTraceback (most recent call last):\n  File \"python/computation_graph.py\", line 13, in <module>\n    torch.onnx.export(z, x, 'cg.onnx.pb', verbose=True)\n  File \"/Users/yamada/.pyenv/versions/trillion/lib/python3.6/site-packages/torch/onnx/__init__.py\", li\nne 75, in export\n    _export(model, args, f, export_params, verbose, training)\n  File \"/Users/yamada/.pyenv/versions/trillion/lib/python3.6/site-packages/torch/onnx/__init__.py\", li\nne 108, in _export\n    orig_state_dict_keys = model.state_dict().keys()\n  File \"/Users/yamada/.pyenv/versions/trillion/lib/python3.6/site-packages/torch/autograd/variable.py\"\n, line 67, in __getattr__\n    return object.__getattribute__(self, name)\nAttributeError: 'Variable' object has no attribute 'state_dict'\n\nit seems to be 1st argment is not proper.\nhowever I have no idea which kind of object I should take here when I'd like actually to do it.", "body": "Is there any way to export normal computation graph by `pytorch.onnx.export` ??\r\nI just met an error when I ran a following simple code.\r\n\r\n## sample code\r\n```\r\nfrom torch.autograd import Variable\r\nimport torch.onnx\r\nimport torchvision\r\n\r\n\r\nx = torch.randn(3)\r\nx = Variable(x, requires_grad=True)\r\n\r\ny = x * 2\r\nz = y.mean()\r\n\r\ntorch.onnx.export(z, x, 'cg.onnx.pb', verbose=True)\r\n```\r\n\r\n## error message\r\n```\r\n>> python python/computation_graph.py\r\n\r\nTraceback (most recent call last):\r\n  File \"python/computation_graph.py\", line 13, in <module>\r\n    torch.onnx.export(z, x, 'cg.onnx.pb', verbose=True)\r\n  File \"/Users/yamada/.pyenv/versions/trillion/lib/python3.6/site-packages/torch/onnx/__init__.py\", li\r\nne 75, in export\r\n    _export(model, args, f, export_params, verbose, training)\r\n  File \"/Users/yamada/.pyenv/versions/trillion/lib/python3.6/site-packages/torch/onnx/__init__.py\", li\r\nne 108, in _export\r\n    orig_state_dict_keys = model.state_dict().keys()\r\n  File \"/Users/yamada/.pyenv/versions/trillion/lib/python3.6/site-packages/torch/autograd/variable.py\"\r\n, line 67, in __getattr__\r\n    return object.__getattribute__(self, name)\r\nAttributeError: 'Variable' object has no attribute 'state_dict'\r\n```\r\n\r\nit seems to be 1st argment is not proper. \r\nhowever I have no idea which kind of object I should take here when I'd like actually to do it."}