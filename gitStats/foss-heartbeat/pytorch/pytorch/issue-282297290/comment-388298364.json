{"url": "https://api.github.com/repos/pytorch/pytorch/issues/comments/388298364", "html_url": "https://github.com/pytorch/pytorch/issues/4186#issuecomment-388298364", "issue_url": "https://api.github.com/repos/pytorch/pytorch/issues/4186", "id": 388298364, "node_id": "MDEyOklzc3VlQ29tbWVudDM4ODI5ODM2NA==", "user": {"login": "fmassa", "id": 9110200, "node_id": "MDQ6VXNlcjkxMTAyMDA=", "avatar_url": "https://avatars2.githubusercontent.com/u/9110200?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fmassa", "html_url": "https://github.com/fmassa", "followers_url": "https://api.github.com/users/fmassa/followers", "following_url": "https://api.github.com/users/fmassa/following{/other_user}", "gists_url": "https://api.github.com/users/fmassa/gists{/gist_id}", "starred_url": "https://api.github.com/users/fmassa/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fmassa/subscriptions", "organizations_url": "https://api.github.com/users/fmassa/orgs", "repos_url": "https://api.github.com/users/fmassa/repos", "events_url": "https://api.github.com/users/fmassa/events{/privacy}", "received_events_url": "https://api.github.com/users/fmassa/received_events", "type": "User", "site_admin": false}, "created_at": "2018-05-11T08:31:12Z", "updated_at": "2018-05-11T08:31:12Z", "author_association": "MEMBER", "body_html": "<p>Hi <a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=22738317\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/mratsim\">@mratsim</a>,<br>\nA comment on your analysis: I believe there is no branching in tight loops, because <code>LogSoftMax</code> is a template parameter and gets compiled away from the code (as you mention already).<br>\nAlso, there is some improvements on both <code>softmax</code> and <code>logsoftmax</code> that are being implemented in <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load issue title\" data-id=\"321256922\" data-permission-text=\"Issue title is private\" data-url=\"https://github.com/pytorch/pytorch/issues/7375\" data-hovercard-type=\"pull_request\" data-hovercard-url=\"/pytorch/pytorch/pull/7375/hovercard\" href=\"https://github.com/pytorch/pytorch/pull/7375\">#7375</a>.</p>\n<p>But, I agree that we could implement a dedicated function for <code>cross_entropy</code>, which currently dispatches to <code>nll_loss</code> + <code>logsoftmax</code>.</p>", "body_text": "Hi @mratsim,\nA comment on your analysis: I believe there is no branching in tight loops, because LogSoftMax is a template parameter and gets compiled away from the code (as you mention already).\nAlso, there is some improvements on both softmax and logsoftmax that are being implemented in #7375.\nBut, I agree that we could implement a dedicated function for cross_entropy, which currently dispatches to nll_loss + logsoftmax.", "body": "Hi @mratsim,\r\nA comment on your analysis: I believe there is no branching in tight loops, because `LogSoftMax` is a template parameter and gets compiled away from the code (as you mention already).\r\nAlso, there is some improvements on both `softmax` and `logsoftmax` that are being implemented in https://github.com/pytorch/pytorch/pull/7375.\r\n\r\nBut, I agree that we could implement a dedicated function for `cross_entropy`, which currently dispatches to `nll_loss` + `logsoftmax`."}