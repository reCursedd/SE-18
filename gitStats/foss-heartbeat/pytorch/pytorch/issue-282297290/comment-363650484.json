{"url": "https://api.github.com/repos/pytorch/pytorch/issues/comments/363650484", "html_url": "https://github.com/pytorch/pytorch/issues/4186#issuecomment-363650484", "issue_url": "https://api.github.com/repos/pytorch/pytorch/issues/4186", "id": 363650484, "node_id": "MDEyOklzc3VlQ29tbWVudDM2MzY1MDQ4NA==", "user": {"login": "soumith", "id": 1310570, "node_id": "MDQ6VXNlcjEzMTA1NzA=", "avatar_url": "https://avatars0.githubusercontent.com/u/1310570?v=4", "gravatar_id": "", "url": "https://api.github.com/users/soumith", "html_url": "https://github.com/soumith", "followers_url": "https://api.github.com/users/soumith/followers", "following_url": "https://api.github.com/users/soumith/following{/other_user}", "gists_url": "https://api.github.com/users/soumith/gists{/gist_id}", "starred_url": "https://api.github.com/users/soumith/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/soumith/subscriptions", "organizations_url": "https://api.github.com/users/soumith/orgs", "repos_url": "https://api.github.com/users/soumith/repos", "events_url": "https://api.github.com/users/soumith/events{/privacy}", "received_events_url": "https://api.github.com/users/soumith/received_events", "type": "User", "site_admin": false}, "created_at": "2018-02-07T04:05:09Z", "updated_at": "2018-02-07T04:05:09Z", "author_association": "MEMBER", "body_html": "<p>I think we can benefit from MKLDNN, particularly on standard neural network workloads, but particularly on tensor operations like transpose-copy, etc.</p>\n<p>At the moment, <a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=1716488\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/cpuhrsch\">@cpuhrsch</a> is making a list of areas in pytorch that need CPU improvements and prioritizing them. He shall share them with you and whichever areas are higher-priority and need MKL-DNN integration, we can get those going.</p>\n<p>We still have reservations on using MKLDNN's special layout because that would introduce the need to carry opaque state around. But MKLDNN has some APIs that dont need using different layout.<br>\nIn the meanwhile we will think on how to introduce different layouts into pytorch (and if it makes sense)</p>", "body_text": "I think we can benefit from MKLDNN, particularly on standard neural network workloads, but particularly on tensor operations like transpose-copy, etc.\nAt the moment, @cpuhrsch is making a list of areas in pytorch that need CPU improvements and prioritizing them. He shall share them with you and whichever areas are higher-priority and need MKL-DNN integration, we can get those going.\nWe still have reservations on using MKLDNN's special layout because that would introduce the need to carry opaque state around. But MKLDNN has some APIs that dont need using different layout.\nIn the meanwhile we will think on how to introduce different layouts into pytorch (and if it makes sense)", "body": "I think we can benefit from MKLDNN, particularly on standard neural network workloads, but particularly on tensor operations like transpose-copy, etc.\r\n\r\nAt the moment, @cpuhrsch is making a list of areas in pytorch that need CPU improvements and prioritizing them. He shall share them with you and whichever areas are higher-priority and need MKL-DNN integration, we can get those going.\r\n\r\nWe still have reservations on using MKLDNN's special layout because that would introduce the need to carry opaque state around. But MKLDNN has some APIs that dont need using different layout.\r\nIn the meanwhile we will think on how to introduce different layouts into pytorch (and if it makes sense)"}