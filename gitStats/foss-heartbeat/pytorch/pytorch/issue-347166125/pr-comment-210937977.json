{"url": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/210937977", "pull_request_review_id": 147262330, "id": 210937977, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIxMDkzNzk3Nw==", "diff_hunk": "@@ -1,20 +1,16 @@\n graph(%0 : Float(4, 4)\n       %1 : Float(4, 4)) {\n-  %2 : int = prim::Constant[value=1]()\n-  %3 : int = prim::Constant[value=2]()\n-  %4 : Float(4!, 2), %5 : Float(4!, 2) = aten::chunk(%0, %3, %2)\n-  %6 : Float(4!, 2), %7 : Float(4!, 2) = aten::chunk(%1, %3, %2)\n-  %8 : Float(4, 2) = prim::FusionGroup_0[device=0](%4, %6, %5, %7)\n-  return (%8);\n+  %2 : Float(4, 2) = prim::FusionGroup_0[device=0](%0, %1)", "path": "test/expect/TestJit.test_fusion_distribute.expect", "position": 9, "original_position": 9, "commit_id": "b00a76e1588f34aa2c1d1a9e55fe76b1ad7cf71d", "original_commit_id": "60b58f153f0325eeb585d030da9af61f124b4aa7", "user": {"login": "zou3519", "id": 5652049, "node_id": "MDQ6VXNlcjU2NTIwNDk=", "avatar_url": "https://avatars3.githubusercontent.com/u/5652049?v=4", "gravatar_id": "", "url": "https://api.github.com/users/zou3519", "html_url": "https://github.com/zou3519", "followers_url": "https://api.github.com/users/zou3519/followers", "following_url": "https://api.github.com/users/zou3519/following{/other_user}", "gists_url": "https://api.github.com/users/zou3519/gists{/gist_id}", "starred_url": "https://api.github.com/users/zou3519/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/zou3519/subscriptions", "organizations_url": "https://api.github.com/users/zou3519/orgs", "repos_url": "https://api.github.com/users/zou3519/repos", "events_url": "https://api.github.com/users/zou3519/events{/privacy}", "received_events_url": "https://api.github.com/users/zou3519/received_events", "type": "User", "site_admin": false}, "body": "We still distribute the chunks before we fuse any chunks in. Fusing the chunks in first (before distributing chunks) prevents possible fusion opportunities (because the invariant for prim::FusedChunk is that only inputs to the FusionGroup can be inputs to prim::FusedChunk).\r\n\r\nThis expect files shows that the chunk was distributed over the fusible pointwise ops, then everything was fused into one fusion group", "created_at": "2018-08-17T14:59:51Z", "updated_at": "2018-11-23T15:49:36Z", "html_url": "https://github.com/pytorch/pytorch/pull/10178#discussion_r210937977", "pull_request_url": "https://api.github.com/repos/pytorch/pytorch/pulls/10178", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/210937977"}, "html": {"href": "https://github.com/pytorch/pytorch/pull/10178#discussion_r210937977"}, "pull_request": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/10178"}}, "body_html": "<p>We still distribute the chunks before we fuse any chunks in. Fusing the chunks in first (before distributing chunks) prevents possible fusion opportunities (because the invariant for prim::FusedChunk is that only inputs to the FusionGroup can be inputs to prim::FusedChunk).</p>\n<p>This expect files shows that the chunk was distributed over the fusible pointwise ops, then everything was fused into one fusion group</p>", "body_text": "We still distribute the chunks before we fuse any chunks in. Fusing the chunks in first (before distributing chunks) prevents possible fusion opportunities (because the invariant for prim::FusedChunk is that only inputs to the FusionGroup can be inputs to prim::FusedChunk).\nThis expect files shows that the chunk was distributed over the fusible pointwise ops, then everything was fused into one fusion group", "in_reply_to_id": 210723678}