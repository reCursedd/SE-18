{"url": "https://api.github.com/repos/pytorch/pytorch/issues/comments/436800563", "html_url": "https://github.com/pytorch/pytorch/pull/12917#issuecomment-436800563", "issue_url": "https://api.github.com/repos/pytorch/pytorch/issues/12917", "id": 436800563, "node_id": "MDEyOklzc3VlQ29tbWVudDQzNjgwMDU2Mw==", "user": {"login": "SsnL", "id": 5674597, "node_id": "MDQ6VXNlcjU2NzQ1OTc=", "avatar_url": "https://avatars2.githubusercontent.com/u/5674597?v=4", "gravatar_id": "", "url": "https://api.github.com/users/SsnL", "html_url": "https://github.com/SsnL", "followers_url": "https://api.github.com/users/SsnL/followers", "following_url": "https://api.github.com/users/SsnL/following{/other_user}", "gists_url": "https://api.github.com/users/SsnL/gists{/gist_id}", "starred_url": "https://api.github.com/users/SsnL/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/SsnL/subscriptions", "organizations_url": "https://api.github.com/users/SsnL/orgs", "repos_url": "https://api.github.com/users/SsnL/repos", "events_url": "https://api.github.com/users/SsnL/events{/privacy}", "received_events_url": "https://api.github.com/users/SsnL/received_events", "type": "User", "site_admin": false}, "created_at": "2018-11-07T22:25:58Z", "updated_at": "2018-11-07T22:25:58Z", "author_association": "CONTRIBUTOR", "body_html": "<p>I'm really confused by your reasoning. What is the harm of having this? If enabling/disabling the JIT is already fully controlled by the user, why can't we give them a better way to query the flag instead of doing <code>os.environ.get('PYTORCH_JIT', 0)</code>? It's not like that this information is hidden...</p>\n<p>Also, afaict, some of the problems I pointed out are fundamental in tracing, which records a particular graph, rather than code. I can't see how we can even have a fix unless we deepcopy all relevant parts in <code>global()</code> and <code>local()</code> and create some sort of dummy frame when the function is run. Note that this doesn't only include the object referenced by the traced python function, but also need to include flags like <code>cudnn.enabled</code>, settings like <code>default_tensor_type</code>, or even content of the loaded file in the function, current time etc.</p>", "body_text": "I'm really confused by your reasoning. What is the harm of having this? If enabling/disabling the JIT is already fully controlled by the user, why can't we give them a better way to query the flag instead of doing os.environ.get('PYTORCH_JIT', 0)? It's not like that this information is hidden...\nAlso, afaict, some of the problems I pointed out are fundamental in tracing, which records a particular graph, rather than code. I can't see how we can even have a fix unless we deepcopy all relevant parts in global() and local() and create some sort of dummy frame when the function is run. Note that this doesn't only include the object referenced by the traced python function, but also need to include flags like cudnn.enabled, settings like default_tensor_type, or even content of the loaded file in the function, current time etc.", "body": "I'm really confused by your reasoning. What is the harm of having this? If enabling/disabling the JIT is already fully controlled by the user, why can't we give them a better way to query the flag instead of doing `os.environ.get('PYTORCH_JIT', 0)`? It's not like that this information is hidden...\r\n\r\nAlso, afaict, some of the problems I pointed out are fundamental in tracing, which records a particular graph, rather than code. I can't see how we can even have a fix unless we deepcopy all relevant parts in `global()` and `local()` and create some sort of dummy frame when the function is run. Note that this doesn't only include the object referenced by the traced python function, but also need to include flags like `cudnn.enabled`, settings like `default_tensor_type`, or even content of the loaded file in the function, current time etc.\r\n"}