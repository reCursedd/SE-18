{"url": "https://api.github.com/repos/pytorch/pytorch/issues/comments/431916563", "html_url": "https://github.com/pytorch/pytorch/pull/12917#issuecomment-431916563", "issue_url": "https://api.github.com/repos/pytorch/pytorch/issues/12917", "id": 431916563, "node_id": "MDEyOklzc3VlQ29tbWVudDQzMTkxNjU2Mw==", "user": {"login": "SsnL", "id": 5674597, "node_id": "MDQ6VXNlcjU2NzQ1OTc=", "avatar_url": "https://avatars2.githubusercontent.com/u/5674597?v=4", "gravatar_id": "", "url": "https://api.github.com/users/SsnL", "html_url": "https://github.com/SsnL", "followers_url": "https://api.github.com/users/SsnL/followers", "following_url": "https://api.github.com/users/SsnL/following{/other_user}", "gists_url": "https://api.github.com/users/SsnL/gists{/gist_id}", "starred_url": "https://api.github.com/users/SsnL/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/SsnL/subscriptions", "organizations_url": "https://api.github.com/users/SsnL/orgs", "repos_url": "https://api.github.com/users/SsnL/repos", "events_url": "https://api.github.com/users/SsnL/events{/privacy}", "received_events_url": "https://api.github.com/users/SsnL/received_events", "type": "User", "site_admin": false}, "created_at": "2018-10-22T17:59:56Z", "updated_at": "2018-10-22T17:59:56Z", "author_association": "CONTRIBUTOR", "body_html": "<p><a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=4583066\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/apaszke\">@apaszke</a> I still have a question though. If it is unsafe, then why do we have <code>test_disabled</code><br>\n<div class=\"border rounded-1 my-2\">\n  <div class=\"f6 px-3 py-2 lh-condensed border-bottom bg-gray-light\">\n    <p class=\"mb-0 text-bold\">\n      <a href=\"https://github.com/pytorch/pytorch/blob/df06fba1f12aa5415ce53e1d683df3fb5dc0e5d2/test/test_jit.py#L450-L470\">pytorch/test/test_jit.py</a>\n    </p>\n    <p class=\"mb-0 text-gray-light\">\n        Lines 450 to 470\n      in\n      <a data-pjax=\"true\" class=\"commit-tease-sha\" href=\"/pytorch/pytorch/commit/df06fba1f12aa5415ce53e1d683df3fb5dc0e5d2\">df06fba</a>\n    </p>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper blob-wrapper-embedded data\">\n    <table class=\"highlight tab-size mb-0 js-file-line-container\" data-tab-size=\"8\">\n\n        <tbody><tr class=\"border-0\">\n          <td id=\"L450\" class=\"blob-num border-0 px-3 py-0 bg-white js-line-number\" data-line-number=\"450\"></td>\n          <td id=\"LC450\" class=\"blob-code border-0 px-3 py-0 bg-white blob-code-inner js-file-line\"> <span class=\"pl-k\">def</span> <span class=\"pl-en\">test_disabled</span>(<span class=\"pl-smi\"><span class=\"pl-smi\">self</span></span>): </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L451\" class=\"blob-num border-0 px-3 py-0 bg-white js-line-number\" data-line-number=\"451\"></td>\n          <td id=\"LC451\" class=\"blob-code border-0 px-3 py-0 bg-white blob-code-inner js-file-line\">     torch.jit._enabled <span class=\"pl-k\">=</span> <span class=\"pl-c1\">False</span> </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L452\" class=\"blob-num border-0 px-3 py-0 bg-white js-line-number\" data-line-number=\"452\"></td>\n          <td id=\"LC452\" class=\"blob-code border-0 px-3 py-0 bg-white blob-code-inner js-file-line\">     <span class=\"pl-k\">try</span>: </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L453\" class=\"blob-num border-0 px-3 py-0 bg-white js-line-number\" data-line-number=\"453\"></td>\n          <td id=\"LC453\" class=\"blob-code border-0 px-3 py-0 bg-white blob-code-inner js-file-line\">         <span class=\"pl-k\">def</span> <span class=\"pl-en\">f</span>(<span class=\"pl-smi\">x</span>, <span class=\"pl-smi\">y</span>): </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L454\" class=\"blob-num border-0 px-3 py-0 bg-white js-line-number\" data-line-number=\"454\"></td>\n          <td id=\"LC454\" class=\"blob-code border-0 px-3 py-0 bg-white blob-code-inner js-file-line\">             <span class=\"pl-k\">return</span> x <span class=\"pl-k\">+</span> y </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L455\" class=\"blob-num border-0 px-3 py-0 bg-white js-line-number\" data-line-number=\"455\"></td>\n          <td id=\"LC455\" class=\"blob-code border-0 px-3 py-0 bg-white blob-code-inner js-file-line\">  </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L456\" class=\"blob-num border-0 px-3 py-0 bg-white js-line-number\" data-line-number=\"456\"></td>\n          <td id=\"LC456\" class=\"blob-code border-0 px-3 py-0 bg-white blob-code-inner js-file-line\">         <span class=\"pl-c1\">self</span>.assertIs(torch.jit.trace(f, (torch.randn(<span class=\"pl-c1\">2</span>, <span class=\"pl-c1\">2</span>), torch.randn(<span class=\"pl-c1\">2</span>, <span class=\"pl-c1\">2</span>))), f) </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L457\" class=\"blob-num border-0 px-3 py-0 bg-white js-line-number\" data-line-number=\"457\"></td>\n          <td id=\"LC457\" class=\"blob-code border-0 px-3 py-0 bg-white blob-code-inner js-file-line\">         <span class=\"pl-c1\">self</span>.assertIs(torch.jit.script(f), f) </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L458\" class=\"blob-num border-0 px-3 py-0 bg-white js-line-number\" data-line-number=\"458\"></td>\n          <td id=\"LC458\" class=\"blob-code border-0 px-3 py-0 bg-white blob-code-inner js-file-line\">  </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L459\" class=\"blob-num border-0 px-3 py-0 bg-white js-line-number\" data-line-number=\"459\"></td>\n          <td id=\"LC459\" class=\"blob-code border-0 px-3 py-0 bg-white blob-code-inner js-file-line\">         <span class=\"pl-k\">class</span> <span class=\"pl-en\">MyModule</span>(<span class=\"pl-e\">torch</span>.<span class=\"pl-e\">jit</span>.<span class=\"pl-e\">ScriptModule</span>): </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L460\" class=\"blob-num border-0 px-3 py-0 bg-white js-line-number\" data-line-number=\"460\"></td>\n          <td id=\"LC460\" class=\"blob-code border-0 px-3 py-0 bg-white blob-code-inner js-file-line\">             <span class=\"pl-en\">@torch.jit.script_method</span> </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L461\" class=\"blob-num border-0 px-3 py-0 bg-white js-line-number\" data-line-number=\"461\"></td>\n          <td id=\"LC461\" class=\"blob-code border-0 px-3 py-0 bg-white blob-code-inner js-file-line\">             <span class=\"pl-k\">def</span> <span class=\"pl-en\">method</span>(<span class=\"pl-smi\"><span class=\"pl-smi\">self</span></span>, <span class=\"pl-smi\">x</span>): </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L462\" class=\"blob-num border-0 px-3 py-0 bg-white js-line-number\" data-line-number=\"462\"></td>\n          <td id=\"LC462\" class=\"blob-code border-0 px-3 py-0 bg-white blob-code-inner js-file-line\">                 <span class=\"pl-k\">return</span> x </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L463\" class=\"blob-num border-0 px-3 py-0 bg-white js-line-number\" data-line-number=\"463\"></td>\n          <td id=\"LC463\" class=\"blob-code border-0 px-3 py-0 bg-white blob-code-inner js-file-line\">  </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L464\" class=\"blob-num border-0 px-3 py-0 bg-white js-line-number\" data-line-number=\"464\"></td>\n          <td id=\"LC464\" class=\"blob-code border-0 px-3 py-0 bg-white blob-code-inner js-file-line\">         <span class=\"pl-c\"><span class=\"pl-c\">#</span> <span class=\"pl-k\">XXX</span>: Unfortunately ScriptModule won't simply become Module now,</span> </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L465\" class=\"blob-num border-0 px-3 py-0 bg-white js-line-number\" data-line-number=\"465\"></td>\n          <td id=\"LC465\" class=\"blob-code border-0 px-3 py-0 bg-white blob-code-inner js-file-line\">         <span class=\"pl-c\"><span class=\"pl-c\">#</span> because that requires disabling the JIT at startup time, which</span> </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L466\" class=\"blob-num border-0 px-3 py-0 bg-white js-line-number\" data-line-number=\"466\"></td>\n          <td id=\"LC466\" class=\"blob-code border-0 px-3 py-0 bg-white blob-code-inner js-file-line\">         <span class=\"pl-c\"><span class=\"pl-c\">#</span> we can't do in here.</span> </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L467\" class=\"blob-num border-0 px-3 py-0 bg-white js-line-number\" data-line-number=\"467\"></td>\n          <td id=\"LC467\" class=\"blob-code border-0 px-3 py-0 bg-white blob-code-inner js-file-line\">         <span class=\"pl-c\"><span class=\"pl-c\">#</span> We need to or those two conditions to make it work with all versions of Python</span> </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L468\" class=\"blob-num border-0 px-3 py-0 bg-white js-line-number\" data-line-number=\"468\"></td>\n          <td id=\"LC468\" class=\"blob-code border-0 px-3 py-0 bg-white blob-code-inner js-file-line\">         <span class=\"pl-c1\">self</span>.assertTrue(inspect.ismethod(MyModule.method) <span class=\"pl-k\">or</span> inspect.isfunction(MyModule.method)) </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L469\" class=\"blob-num border-0 px-3 py-0 bg-white js-line-number\" data-line-number=\"469\"></td>\n          <td id=\"LC469\" class=\"blob-code border-0 px-3 py-0 bg-white blob-code-inner js-file-line\">     <span class=\"pl-k\">finally</span>: </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L470\" class=\"blob-num border-0 px-3 py-0 bg-white js-line-number\" data-line-number=\"470\"></td>\n          <td id=\"LC470\" class=\"blob-code border-0 px-3 py-0 bg-white blob-code-inner js-file-line\">         torch.jit._enabled <span class=\"pl-k\">=</span> <span class=\"pl-c1\">True</span> </td>\n        </tr>\n    </tbody></table>\n  </div>\n</div>\n<br>\nwhich seems to rely on the assumption that it can be locally changed. Should we add a comment on the test?</p>", "body_text": "@apaszke I still have a question though. If it is unsafe, then why do we have test_disabled\n\n  \n    \n      pytorch/test/test_jit.py\n    \n    \n        Lines 450 to 470\n      in\n      df06fba\n    \n    \n    \n    \n\n        \n          \n           def test_disabled(self): \n        \n\n        \n          \n               torch.jit._enabled = False \n        \n\n        \n          \n               try: \n        \n\n        \n          \n                   def f(x, y): \n        \n\n        \n          \n                       return x + y \n        \n\n        \n          \n            \n        \n\n        \n          \n                   self.assertIs(torch.jit.trace(f, (torch.randn(2, 2), torch.randn(2, 2))), f) \n        \n\n        \n          \n                   self.assertIs(torch.jit.script(f), f) \n        \n\n        \n          \n            \n        \n\n        \n          \n                   class MyModule(torch.jit.ScriptModule): \n        \n\n        \n          \n                       @torch.jit.script_method \n        \n\n        \n          \n                       def method(self, x): \n        \n\n        \n          \n                           return x \n        \n\n        \n          \n            \n        \n\n        \n          \n                   # XXX: Unfortunately ScriptModule won't simply become Module now, \n        \n\n        \n          \n                   # because that requires disabling the JIT at startup time, which \n        \n\n        \n          \n                   # we can't do in here. \n        \n\n        \n          \n                   # We need to or those two conditions to make it work with all versions of Python \n        \n\n        \n          \n                   self.assertTrue(inspect.ismethod(MyModule.method) or inspect.isfunction(MyModule.method)) \n        \n\n        \n          \n               finally: \n        \n\n        \n          \n                   torch.jit._enabled = True \n        \n    \n  \n\n\nwhich seems to rely on the assumption that it can be locally changed. Should we add a comment on the test?", "body": "@apaszke I still have a question though. If it is unsafe, then why do we have `test_disabled` \r\nhttps://github.com/pytorch/pytorch/blob/df06fba1f12aa5415ce53e1d683df3fb5dc0e5d2/test/test_jit.py#L450-L470\r\nwhich seems to rely on the assumption that it can be locally changed. Should we add a comment on the test?"}