{"url": "https://api.github.com/repos/pytorch/pytorch/issues/8101", "repository_url": "https://api.github.com/repos/pytorch/pytorch", "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/8101/labels{/name}", "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/8101/comments", "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/8101/events", "html_url": "https://github.com/pytorch/pytorch/issues/8101", "id": 328902755, "node_id": "MDU6SXNzdWUzMjg5MDI3NTU=", "number": 8101, "title": "ld: can't map file, errno=22 file '/Library/Frameworks/cuda.framework' for architecture x86_64 (OS X)", "user": {"login": "ezyang", "id": 13564, "node_id": "MDQ6VXNlcjEzNTY0", "avatar_url": "https://avatars0.githubusercontent.com/u/13564?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ezyang", "html_url": "https://github.com/ezyang", "followers_url": "https://api.github.com/users/ezyang/followers", "following_url": "https://api.github.com/users/ezyang/following{/other_user}", "gists_url": "https://api.github.com/users/ezyang/gists{/gist_id}", "starred_url": "https://api.github.com/users/ezyang/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ezyang/subscriptions", "organizations_url": "https://api.github.com/users/ezyang/orgs", "repos_url": "https://api.github.com/users/ezyang/repos", "events_url": "https://api.github.com/users/ezyang/events{/privacy}", "received_events_url": "https://api.github.com/users/ezyang/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-06-04T04:16:08Z", "updated_at": "2018-06-04T12:07:04Z", "closed_at": "2018-06-04T12:07:03Z", "author_association": "CONTRIBUTOR", "body_html": "<p>On OS X, when the following cmake runs:</p>\n<pre><code># find libcuda.so and lbnvrtc.so\n# For libcuda.so, we will find it under lib, lib64, and then the\n# stubs folder, in case we are building on a system that does not\n# have cuda driver installed. On windows, we also search under the\n# folder lib/x64.\nfind_library(CUDA_CUDA_LIB cuda\n    PATHS ${CUDA_TOOLKIT_ROOT_DIR}\n    PATH_SUFFIXES lib lib64 lib/stubs lib64/stubs lib/x64)\n  message(STATUS \"CUDA_CUDA_LIB ${CUDA_CUDA_LIB}\")\nfind_library(CUDA_NVRTC_LIB nvrtc\n    PATHS ${CUDA_TOOLKIT_ROOT_DIR}\n    PATH_SUFFIXES lib lib64 lib/x64)\n</code></pre>\n<p>It sets CUDA_CUDA_LIB to /Library/Frameworks/cuda.framework. I think this is might be OK? But then, subsequently, we attach it as:</p>\n<pre><code>set_property(\n    TARGET caffe2::cuda PROPERTY IMPORTED_LOCATION\n    ${CUDA_CUDA_LIB})\n</code></pre>\n<p>This means that it will get directly plopped into the linker line when we link eventually. But <code>cuda.framework</code> is a folder (a Mac-style \"framework\" folder) and ld doesn't know how to deal. So it fails with</p>\n<pre><code>ld: can't map file, errno=22 file '/Library/Frameworks/cuda.framework' for architecture x86_64 (OS X)\n</code></pre>\n<p>Question: why isn't <code>CUDA_LIBRARIES</code> used directly here? This is what Torch/ATen used to do.</p>\n<p>CC <a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=551151\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/Yangqing\">@Yangqing</a></p>", "body_text": "On OS X, when the following cmake runs:\n# find libcuda.so and lbnvrtc.so\n# For libcuda.so, we will find it under lib, lib64, and then the\n# stubs folder, in case we are building on a system that does not\n# have cuda driver installed. On windows, we also search under the\n# folder lib/x64.\nfind_library(CUDA_CUDA_LIB cuda\n    PATHS ${CUDA_TOOLKIT_ROOT_DIR}\n    PATH_SUFFIXES lib lib64 lib/stubs lib64/stubs lib/x64)\n  message(STATUS \"CUDA_CUDA_LIB ${CUDA_CUDA_LIB}\")\nfind_library(CUDA_NVRTC_LIB nvrtc\n    PATHS ${CUDA_TOOLKIT_ROOT_DIR}\n    PATH_SUFFIXES lib lib64 lib/x64)\n\nIt sets CUDA_CUDA_LIB to /Library/Frameworks/cuda.framework. I think this is might be OK? But then, subsequently, we attach it as:\nset_property(\n    TARGET caffe2::cuda PROPERTY IMPORTED_LOCATION\n    ${CUDA_CUDA_LIB})\n\nThis means that it will get directly plopped into the linker line when we link eventually. But cuda.framework is a folder (a Mac-style \"framework\" folder) and ld doesn't know how to deal. So it fails with\nld: can't map file, errno=22 file '/Library/Frameworks/cuda.framework' for architecture x86_64 (OS X)\n\nQuestion: why isn't CUDA_LIBRARIES used directly here? This is what Torch/ATen used to do.\nCC @Yangqing", "body": "On OS X, when the following cmake runs:\r\n\r\n```\r\n# find libcuda.so and lbnvrtc.so\r\n# For libcuda.so, we will find it under lib, lib64, and then the\r\n# stubs folder, in case we are building on a system that does not\r\n# have cuda driver installed. On windows, we also search under the\r\n# folder lib/x64.\r\nfind_library(CUDA_CUDA_LIB cuda\r\n    PATHS ${CUDA_TOOLKIT_ROOT_DIR}\r\n    PATH_SUFFIXES lib lib64 lib/stubs lib64/stubs lib/x64)\r\n  message(STATUS \"CUDA_CUDA_LIB ${CUDA_CUDA_LIB}\")\r\nfind_library(CUDA_NVRTC_LIB nvrtc\r\n    PATHS ${CUDA_TOOLKIT_ROOT_DIR}\r\n    PATH_SUFFIXES lib lib64 lib/x64)\r\n```\r\n\r\nIt sets CUDA_CUDA_LIB to /Library/Frameworks/cuda.framework. I think this is might be OK? But then, subsequently, we attach it as:\r\n\r\n```\r\nset_property(\r\n    TARGET caffe2::cuda PROPERTY IMPORTED_LOCATION\r\n    ${CUDA_CUDA_LIB})\r\n```\r\n\r\nThis means that it will get directly plopped into the linker line when we link eventually. But `cuda.framework` is a folder (a Mac-style \"framework\" folder) and ld doesn't know how to deal. So it fails with\r\n\r\n```\r\nld: can't map file, errno=22 file '/Library/Frameworks/cuda.framework' for architecture x86_64 (OS X)\r\n```\r\n\r\nQuestion: why isn't `CUDA_LIBRARIES` used directly here? This is what Torch/ATen used to do.\r\n\r\nCC @Yangqing "}