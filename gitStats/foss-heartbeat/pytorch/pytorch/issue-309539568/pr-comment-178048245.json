{"url": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/178048245", "pull_request_review_id": 108038033, "id": 178048245, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE3ODA0ODI0NQ==", "diff_hunk": "@@ -49,7 +49,7 @@ struct ScalarAttributeValue : public AttributeValue {\n \n template<typename T, AttributeKind Kind>\n struct VectorAttributeValue : public AttributeValue {\n-  using ConstructorType = const std::vector<T> &&;\n+  using ConstructorType = std::vector<T>;", "path": "torch/csrc/jit/attributes.h", "position": 14, "original_position": 14, "commit_id": "50c0ebf1f3622c5ce1e11b2816003a4dd6dc7b09", "original_commit_id": "f19adf1e54fb3b26bb84a10c20cf6a8ff37ace82", "user": {"login": "apaszke", "id": 4583066, "node_id": "MDQ6VXNlcjQ1ODMwNjY=", "avatar_url": "https://avatars3.githubusercontent.com/u/4583066?v=4", "gravatar_id": "", "url": "https://api.github.com/users/apaszke", "html_url": "https://github.com/apaszke", "followers_url": "https://api.github.com/users/apaszke/followers", "following_url": "https://api.github.com/users/apaszke/following{/other_user}", "gists_url": "https://api.github.com/users/apaszke/gists{/gist_id}", "starred_url": "https://api.github.com/users/apaszke/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/apaszke/subscriptions", "organizations_url": "https://api.github.com/users/apaszke/orgs", "repos_url": "https://api.github.com/users/apaszke/repos", "events_url": "https://api.github.com/users/apaszke/events{/privacy}", "received_events_url": "https://api.github.com/users/apaszke/received_events", "type": "User", "site_admin": false}, "body": "Taking r-value references is very annoying because you can't do things like \r\n```cpp\r\nstd::vector<int64_t> x = ...\r\nnode1->is(attr::sizes, x);\r\nnode2->is(attr::sizes, std::move(x));\r\n```\r\nbecause it forbids making a copy in the first line. rvalues will still bind to this overload correctly, and `std::forward` should pass the value without copying I think.", "created_at": "2018-03-29T13:03:44Z", "updated_at": "2018-11-23T15:41:17Z", "html_url": "https://github.com/pytorch/pytorch/pull/6084#discussion_r178048245", "pull_request_url": "https://api.github.com/repos/pytorch/pytorch/pulls/6084", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/178048245"}, "html": {"href": "https://github.com/pytorch/pytorch/pull/6084#discussion_r178048245"}, "pull_request": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/6084"}}, "body_html": "<p>Taking r-value references is very annoying because you can't do things like</p>\n<div class=\"highlight highlight-source-c++\"><pre>std::vector&lt;<span class=\"pl-c1\">int64_t</span>&gt; x = ...\nnode1-&gt;<span class=\"pl-en\">is</span>(attr::sizes, x);\nnode2-&gt;<span class=\"pl-en\">is</span>(attr::sizes, std::move(x));</pre></div>\n<p>because it forbids making a copy in the first line. rvalues will still bind to this overload correctly, and <code>std::forward</code> should pass the value without copying I think.</p>", "body_text": "Taking r-value references is very annoying because you can't do things like\nstd::vector<int64_t> x = ...\nnode1->is(attr::sizes, x);\nnode2->is(attr::sizes, std::move(x));\nbecause it forbids making a copy in the first line. rvalues will still bind to this overload correctly, and std::forward should pass the value without copying I think.", "in_reply_to_id": 177953339}