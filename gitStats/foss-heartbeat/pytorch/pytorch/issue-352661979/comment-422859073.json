{"url": "https://api.github.com/repos/pytorch/pytorch/issues/comments/422859073", "html_url": "https://github.com/pytorch/pytorch/issues/10742#issuecomment-422859073", "issue_url": "https://api.github.com/repos/pytorch/pytorch/issues/10742", "id": 422859073, "node_id": "MDEyOklzc3VlQ29tbWVudDQyMjg1OTA3Mw==", "user": {"login": "gchanan", "id": 3768583, "node_id": "MDQ6VXNlcjM3Njg1ODM=", "avatar_url": "https://avatars2.githubusercontent.com/u/3768583?v=4", "gravatar_id": "", "url": "https://api.github.com/users/gchanan", "html_url": "https://github.com/gchanan", "followers_url": "https://api.github.com/users/gchanan/followers", "following_url": "https://api.github.com/users/gchanan/following{/other_user}", "gists_url": "https://api.github.com/users/gchanan/gists{/gist_id}", "starred_url": "https://api.github.com/users/gchanan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/gchanan/subscriptions", "organizations_url": "https://api.github.com/users/gchanan/orgs", "repos_url": "https://api.github.com/users/gchanan/repos", "events_url": "https://api.github.com/users/gchanan/events{/privacy}", "received_events_url": "https://api.github.com/users/gchanan/received_events", "type": "User", "site_admin": false}, "created_at": "2018-09-19T16:00:07Z", "updated_at": "2018-09-19T16:00:07Z", "author_association": "CONTRIBUTOR", "body_html": "<p>IMO we should at least match NumPy semantics, i.e. have a <code>torch.finfo(dtype)</code> that throws if you pass in an integral dtype and <code>torch.iinfo(dtype)</code> that throws if you pass in a floating point dtype.  It seems fine to add additions to that, but they have to be useful.  Having an <code>finfo</code> or <code>iinfo</code> property on dtype seems error prone (though an intersection of a properties on those two structures could be useful).</p>", "body_text": "IMO we should at least match NumPy semantics, i.e. have a torch.finfo(dtype) that throws if you pass in an integral dtype and torch.iinfo(dtype) that throws if you pass in a floating point dtype.  It seems fine to add additions to that, but they have to be useful.  Having an finfo or iinfo property on dtype seems error prone (though an intersection of a properties on those two structures could be useful).", "body": "IMO we should at least match NumPy semantics, i.e. have a `torch.finfo(dtype)` that throws if you pass in an integral dtype and `torch.iinfo(dtype)` that throws if you pass in a floating point dtype.  It seems fine to add additions to that, but they have to be useful.  Having an `finfo` or `iinfo` property on dtype seems error prone (though an intersection of a properties on those two structures could be useful)."}