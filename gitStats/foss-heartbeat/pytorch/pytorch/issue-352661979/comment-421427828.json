{"url": "https://api.github.com/repos/pytorch/pytorch/issues/comments/421427828", "html_url": "https://github.com/pytorch/pytorch/issues/10742#issuecomment-421427828", "issue_url": "https://api.github.com/repos/pytorch/pytorch/issues/10742", "id": 421427828, "node_id": "MDEyOklzc3VlQ29tbWVudDQyMTQyNzgyOA==", "user": {"login": "sytrus-in-github", "id": 12224616, "node_id": "MDQ6VXNlcjEyMjI0NjE2", "avatar_url": "https://avatars0.githubusercontent.com/u/12224616?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sytrus-in-github", "html_url": "https://github.com/sytrus-in-github", "followers_url": "https://api.github.com/users/sytrus-in-github/followers", "following_url": "https://api.github.com/users/sytrus-in-github/following{/other_user}", "gists_url": "https://api.github.com/users/sytrus-in-github/gists{/gist_id}", "starred_url": "https://api.github.com/users/sytrus-in-github/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sytrus-in-github/subscriptions", "organizations_url": "https://api.github.com/users/sytrus-in-github/orgs", "repos_url": "https://api.github.com/users/sytrus-in-github/repos", "events_url": "https://api.github.com/users/sytrus-in-github/events{/privacy}", "received_events_url": "https://api.github.com/users/sytrus-in-github/received_events", "type": "User", "site_admin": false}, "created_at": "2018-09-14T17:24:07Z", "updated_at": "2018-09-14T17:24:07Z", "author_association": "CONTRIBUTOR", "body_html": "<p>Also, in the same spirit, something like <code>torch.iinfo</code> for tackling integral types could be useful. (like <a href=\"https://docs.scipy.org/doc/numpy/reference/generated/numpy.iinfo.html\" rel=\"nofollow\"><code>numpy.iinfo</code></a>)</p>\n<p>right now I use the following dtype conversion function as a workaround:</p>\n<div class=\"highlight highlight-source-python\"><pre><span class=\"pl-k\">import</span> numpy <span class=\"pl-k\">as</span> np\n\n<span class=\"pl-k\">def</span> <span class=\"pl-en\">as_numpy_dtype</span>(<span class=\"pl-smi\">torch_dtype</span>):\n    <span class=\"pl-k\">return</span> np.dtype(<span class=\"pl-c1\">str</span>(torch_dtype)[<span class=\"pl-c1\">6</span>:])</pre></div>\n<p>Probably not the best way to do it ...</p>", "body_text": "Also, in the same spirit, something like torch.iinfo for tackling integral types could be useful. (like numpy.iinfo)\nright now I use the following dtype conversion function as a workaround:\nimport numpy as np\n\ndef as_numpy_dtype(torch_dtype):\n    return np.dtype(str(torch_dtype)[6:])\nProbably not the best way to do it ...", "body": "Also, in the same spirit, something like `torch.iinfo` for tackling integral types could be useful. (like [`numpy.iinfo`](https://docs.scipy.org/doc/numpy/reference/generated/numpy.iinfo.html))\r\n\r\nright now I use the following dtype conversion function as a workaround:\r\n\r\n```python\r\nimport numpy as np\r\n\r\ndef as_numpy_dtype(torch_dtype):\r\n    return np.dtype(str(torch_dtype)[6:])\r\n``` \r\n\r\nProbably not the best way to do it ..."}