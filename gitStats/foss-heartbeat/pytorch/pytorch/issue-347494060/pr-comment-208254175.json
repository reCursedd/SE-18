{"url": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/208254175", "pull_request_review_id": 144022602, "id": 208254175, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwODI1NDE3NQ==", "diff_hunk": "@@ -66,12 +86,25 @@ template <\n     typename... Types,\n     size_t... Is>\n ReturnType callOperatorWithTuple(\n+    const FunctionSchema& schema,\n     Implementation&& implementation,\n     Stack& stack,\n     std::tuple<Types...>& tuple,\n     Indices<Is...>) {\n+  Node* node = nullptr;\n+  if (jit::tracer::isTracing()) {\n+    node = getTracedNode<Is...>(schema, tuple);\n+  }\n+\n   pop(stack, std::get<Is>(tuple)...);\n-  return std::forward<Implementation>(implementation)(std::get<Is>(tuple)...);\n+  auto result =\n+      std::forward<Implementation>(implementation)(std::get<Is>(tuple)...);\n+\n+  if (jit::tracer::isTracing()) {\n+    jit::tracer::postRecordTrace(node, result);", "path": "torch/csrc/jit/custom_operator.h", "position": 54, "original_position": 54, "commit_id": "feb6012a22ef76ba88d92ea666367d473e6454c5", "original_commit_id": "e09859d78f8934b578d3d77a2d004beaedd1bded", "user": {"login": "apaszke", "id": 4583066, "node_id": "MDQ6VXNlcjQ1ODMwNjY=", "avatar_url": "https://avatars3.githubusercontent.com/u/4583066?v=4", "gravatar_id": "", "url": "https://api.github.com/users/apaszke", "html_url": "https://github.com/apaszke", "followers_url": "https://api.github.com/users/apaszke/followers", "following_url": "https://api.github.com/users/apaszke/following{/other_user}", "gists_url": "https://api.github.com/users/apaszke/gists{/gist_id}", "starred_url": "https://api.github.com/users/apaszke/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/apaszke/subscriptions", "organizations_url": "https://api.github.com/users/apaszke/orgs", "repos_url": "https://api.github.com/users/apaszke/repos", "events_url": "https://api.github.com/users/apaszke/events{/privacy}", "received_events_url": "https://api.github.com/users/apaszke/received_events", "type": "User", "site_admin": false}, "body": "If this is what causes all the headaches with `postRecordTrace` overloads, can't we just fix it here by making it conform to the `ArrayRef<Variable>` interface?", "created_at": "2018-08-07T14:30:47Z", "updated_at": "2018-11-23T15:48:52Z", "html_url": "https://github.com/pytorch/pytorch/pull/10212#discussion_r208254175", "pull_request_url": "https://api.github.com/repos/pytorch/pytorch/pulls/10212", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/208254175"}, "html": {"href": "https://github.com/pytorch/pytorch/pull/10212#discussion_r208254175"}, "pull_request": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/10212"}}, "body_html": "<p>If this is what causes all the headaches with <code>postRecordTrace</code> overloads, can't we just fix it here by making it conform to the <code>ArrayRef&lt;Variable&gt;</code> interface?</p>", "body_text": "If this is what causes all the headaches with postRecordTrace overloads, can't we just fix it here by making it conform to the ArrayRef<Variable> interface?"}