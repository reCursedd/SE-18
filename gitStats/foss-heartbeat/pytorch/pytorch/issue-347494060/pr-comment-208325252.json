{"url": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/208325252", "pull_request_review_id": 144111558, "id": 208325252, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwODMyNTI1Mg==", "diff_hunk": "@@ -56,6 +57,25 @@ FunctionSchema createFunctionSchemaFromTraits(const std::string& name) {\n   return {name, arguments, returns};\n }\n \n+template <size_t... Is, typename... Types>\n+Node* getTracedNode(\n+    const FunctionSchema& schema,\n+    const std::tuple<Types...>& tuple) {\n+  auto symbol = Symbol::fromQualString(schema.name);\n+  const auto& graph = tracer::getTracingState()->graph;\n+  Node* node = graph->create(std::move(symbol), /*outputs=*/0);\n+  tracer::recordSourceLocation(node);\n+\n+  // Hack to call addInputs for the parameter pack in a sequenced fashion.\n+  // https://stackoverflow.com/questions/12030538/calling-a-function-for-each-variadic-template-argument-and-an-array\n+  int _[] = {(tracer::addInputs(node, schema.arguments[Is].name.c_str(), std::get<Is>(tuple)), 0)...};", "path": "torch/csrc/jit/custom_operator.h", "position": 23, "original_position": 23, "commit_id": "feb6012a22ef76ba88d92ea666367d473e6454c5", "original_commit_id": "e09859d78f8934b578d3d77a2d004beaedd1bded", "user": {"login": "goldsborough", "id": 6429851, "node_id": "MDQ6VXNlcjY0Mjk4NTE=", "avatar_url": "https://avatars3.githubusercontent.com/u/6429851?v=4", "gravatar_id": "", "url": "https://api.github.com/users/goldsborough", "html_url": "https://github.com/goldsborough", "followers_url": "https://api.github.com/users/goldsborough/followers", "following_url": "https://api.github.com/users/goldsborough/following{/other_user}", "gists_url": "https://api.github.com/users/goldsborough/gists{/gist_id}", "starred_url": "https://api.github.com/users/goldsborough/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/goldsborough/subscriptions", "organizations_url": "https://api.github.com/users/goldsborough/orgs", "repos_url": "https://api.github.com/users/goldsborough/repos", "events_url": "https://api.github.com/users/goldsborough/events{/privacy}", "received_events_url": "https://api.github.com/users/goldsborough/received_events", "type": "User", "site_admin": false}, "body": "I don't think you could expand the name and value parameter packs to be side by side, as in `(names[Is], values[Is])...` would probably not work because of the parentheses I think", "created_at": "2018-08-07T17:50:25Z", "updated_at": "2018-11-23T15:48:55Z", "html_url": "https://github.com/pytorch/pytorch/pull/10212#discussion_r208325252", "pull_request_url": "https://api.github.com/repos/pytorch/pytorch/pulls/10212", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/208325252"}, "html": {"href": "https://github.com/pytorch/pytorch/pull/10212#discussion_r208325252"}, "pull_request": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/10212"}}, "body_html": "<p>I don't think you could expand the name and value parameter packs to be side by side, as in <code>(names[Is], values[Is])...</code> would probably not work because of the parentheses I think</p>", "body_text": "I don't think you could expand the name and value parameter packs to be side by side, as in (names[Is], values[Is])... would probably not work because of the parentheses I think", "in_reply_to_id": 208254479}