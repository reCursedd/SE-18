{"url": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/208329218", "pull_request_review_id": 144116345, "id": 208329218, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwODMyOTIxOA==", "diff_hunk": "@@ -216,34 +213,35 @@ void addInputs(Node *n, const char * name, std::array<bool, N> value) {\n   throw std::runtime_error(\"Found an unsupported argument type in the JIT tracer. File a bug report.\");\n }\n \n-template<typename T, typename... Args>\n-void addInputs(Node *n, const char * arg_name, T arg, const char * next_arg_name, Args... args) {\n-  addInputs(n, arg_name, arg);\n-  addInputs(n, next_arg_name, args...);\n-}\n-\n-} // namespace detail\n+TORCH_API void postRecordTrace(Node* node, at::ArrayRef<Variable> outputs);\n \n-// NB: if you change this function, you might want to take a look at\n-// preRecordPythonTrace from python_tracer.cpp\n-template<typename... Args>\n-PreTraceInfo preRecordTrace(Symbol op, Args... inputs) {\n-  PreTraceInfo info;\n-  auto & state = getTracingState();\n-  auto & graph = state->graph;\n-\n-  Node * n = info.n = graph->create(op, /*outputs=*/0);\n-  recordSourceLocation(n);\n-\n-  detail::addInputs(n, inputs...);\n+// All these overloads are to handle (1) single `at::Tensor` (2)\n+// `vector<at::Tensor>` because of implicit conversion trouble with `Variable`,\n+// as well as any other types, for which we throw an exception.\n \n-  // NB: Order matters. This must append after inputs but before outputs.\n-  graph->appendNode(n);\n+inline void postRecordTrace(\n+    Node* node,\n+    at::ArrayRef<at::Tensor> tensors) {\n+  postRecordTrace(node, fmap(tensors, [](const at::Tensor& tensor) {\n+                    return Variable(tensor);\n+                  }));\n+}\n \n-  return info;\n+inline void postRecordTrace(Node* node, at::Tensor tensor) {\n+  postRecordTrace(node, at::ArrayRef<Variable>{Variable(tensor)});\n }\n \n-TORCH_API void postRecordTrace(const PreTraceInfo& info, at::ArrayRef<Variable> outputs);\n+template <\n+    typename T,\n+    typename = torch::enable_if_t<\n+        (!std::is_convertible<torch::decay_t<T>, ArrayRef<Variable>>::value &&\n+         !std::is_convertible<torch::decay_t<T>, ArrayRef<at::Tensor>>::value &&\n+         !std::is_convertible<torch::decay_t<T>, Variable>::value)>>", "path": "torch/csrc/jit/tracer.h", "position": 89, "original_position": 99, "commit_id": "feb6012a22ef76ba88d92ea666367d473e6454c5", "original_commit_id": "e09859d78f8934b578d3d77a2d004beaedd1bded", "user": {"login": "goldsborough", "id": 6429851, "node_id": "MDQ6VXNlcjY0Mjk4NTE=", "avatar_url": "https://avatars3.githubusercontent.com/u/6429851?v=4", "gravatar_id": "", "url": "https://api.github.com/users/goldsborough", "html_url": "https://github.com/goldsborough", "followers_url": "https://api.github.com/users/goldsborough/followers", "following_url": "https://api.github.com/users/goldsborough/following{/other_user}", "gists_url": "https://api.github.com/users/goldsborough/gists{/gist_id}", "starred_url": "https://api.github.com/users/goldsborough/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/goldsborough/subscriptions", "organizations_url": "https://api.github.com/users/goldsborough/orgs", "repos_url": "https://api.github.com/users/goldsborough/repos", "events_url": "https://api.github.com/users/goldsborough/events{/privacy}", "received_events_url": "https://api.github.com/users/goldsborough/received_events", "type": "User", "site_admin": false}, "body": "Haha yeah you're right about the MP. I think with Zach we agreed that the runtime error would be much less cryptic to users than a compile time error for a deleted function", "created_at": "2018-08-07T18:02:28Z", "updated_at": "2018-11-23T15:48:55Z", "html_url": "https://github.com/pytorch/pytorch/pull/10212#discussion_r208329218", "pull_request_url": "https://api.github.com/repos/pytorch/pytorch/pulls/10212", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/208329218"}, "html": {"href": "https://github.com/pytorch/pytorch/pull/10212#discussion_r208329218"}, "pull_request": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/10212"}}, "body_html": "<p>Haha yeah you're right about the MP. I think with Zach we agreed that the runtime error would be much less cryptic to users than a compile time error for a deleted function</p>", "body_text": "Haha yeah you're right about the MP. I think with Zach we agreed that the runtime error would be much less cryptic to users than a compile time error for a deleted function", "in_reply_to_id": 208253280}