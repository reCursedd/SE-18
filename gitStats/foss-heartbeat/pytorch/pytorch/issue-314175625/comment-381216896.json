{"url": "https://api.github.com/repos/pytorch/pytorch/issues/comments/381216896", "html_url": "https://github.com/pytorch/pytorch/issues/6591#issuecomment-381216896", "issue_url": "https://api.github.com/repos/pytorch/pytorch/issues/6591", "id": 381216896, "node_id": "MDEyOklzc3VlQ29tbWVudDM4MTIxNjg5Ng==", "user": {"login": "SsnL", "id": 5674597, "node_id": "MDQ6VXNlcjU2NzQ1OTc=", "avatar_url": "https://avatars2.githubusercontent.com/u/5674597?v=4", "gravatar_id": "", "url": "https://api.github.com/users/SsnL", "html_url": "https://github.com/SsnL", "followers_url": "https://api.github.com/users/SsnL/followers", "following_url": "https://api.github.com/users/SsnL/following{/other_user}", "gists_url": "https://api.github.com/users/SsnL/gists{/gist_id}", "starred_url": "https://api.github.com/users/SsnL/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/SsnL/subscriptions", "organizations_url": "https://api.github.com/users/SsnL/orgs", "repos_url": "https://api.github.com/users/SsnL/repos", "events_url": "https://api.github.com/users/SsnL/events{/privacy}", "received_events_url": "https://api.github.com/users/SsnL/received_events", "type": "User", "site_admin": false}, "created_at": "2018-04-13T18:05:20Z", "updated_at": "2018-04-13T18:05:20Z", "author_association": "CONTRIBUTOR", "body_html": "<blockquote>\n<p>that MATLAB is calling python commands using a python interpreter</p>\n</blockquote>\n<p>From the trace it doesn't look like so. The libraries loaded by MATLAB are still in memory.</p>\n<p>Actually one more thing is happening here. MATLAB uses ilp64 version of MKL, but PyTorch uses lp64 version (to be compatible with NumPy). So it wouldn't work even if they are from the same release version.</p>\n<p>Another route you can go with is to build from source, but instead of using MKL blas, use something like openblas.</p>\n<p>Unfortunately, due to how linking works, there isn't a clean solution.</p>", "body_text": "that MATLAB is calling python commands using a python interpreter\n\nFrom the trace it doesn't look like so. The libraries loaded by MATLAB are still in memory.\nActually one more thing is happening here. MATLAB uses ilp64 version of MKL, but PyTorch uses lp64 version (to be compatible with NumPy). So it wouldn't work even if they are from the same release version.\nAnother route you can go with is to build from source, but instead of using MKL blas, use something like openblas.\nUnfortunately, due to how linking works, there isn't a clean solution.", "body": "> that MATLAB is calling python commands using a python interpreter\r\n\r\nFrom the trace it doesn't look like so. The libraries loaded by MATLAB are still in memory.\r\n\r\n\r\nActually one more thing is happening here. MATLAB uses ilp64 version of MKL, but PyTorch uses lp64 version (to be compatible with NumPy). So it wouldn't work even if they are from the same release version.\r\n\r\nAnother route you can go with is to build from source, but instead of using MKL blas, use something like openblas.\r\n\r\nUnfortunately, due to how linking works, there isn't a clean solution."}