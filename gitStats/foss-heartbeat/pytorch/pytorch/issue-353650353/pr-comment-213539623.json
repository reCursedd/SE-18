{"url": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/213539623", "pull_request_review_id": 150396027, "id": 213539623, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIxMzUzOTYyMw==", "diff_hunk": "@@ -134,6 +149,7 @@ TORCH_API void defineMethodsInModule(\n // same as above but parse the definitions from source\n TORCH_API void defineMethodsInModule(Module & m, const std::string& source, const Resolver& resolver, std::shared_ptr<SugaredValue> self);\n TORCH_API std::shared_ptr<Graph> compileFunction(Def def, const Resolver& resolver);\n+TORCH_API std::shared_ptr<Graph> compileFunction(const std::string& source);", "path": "torch/csrc/jit/script/compiler.h", "position": null, "original_position": 28, "commit_id": "5f1ad65e123c742374bb76084767a57fe9209cd1", "original_commit_id": "35c4f5eb7e1d45a5df04f3a687c030a90943a7e6", "user": {"login": "zdevito", "id": 370202, "node_id": "MDQ6VXNlcjM3MDIwMg==", "avatar_url": "https://avatars0.githubusercontent.com/u/370202?v=4", "gravatar_id": "", "url": "https://api.github.com/users/zdevito", "html_url": "https://github.com/zdevito", "followers_url": "https://api.github.com/users/zdevito/followers", "following_url": "https://api.github.com/users/zdevito/following{/other_user}", "gists_url": "https://api.github.com/users/zdevito/gists{/gist_id}", "starred_url": "https://api.github.com/users/zdevito/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/zdevito/subscriptions", "organizations_url": "https://api.github.com/users/zdevito/orgs", "repos_url": "https://api.github.com/users/zdevito/repos", "events_url": "https://api.github.com/users/zdevito/events{/privacy}", "received_events_url": "https://api.github.com/users/zdevito/received_events", "type": "User", "site_admin": false}, "body": "Just like in python this API should only ever return a jit::script::Module with methods on it. Graphs and their execution are an implementation detail we don't want in the public API. \r\n\r\nFor end users the API should probably be something like:\r\n```\r\nstd::shared_ptr<jit::script::Module> compile(std::string str) {\r\n   std::shared_ptr<jit::script::Module> foo = new jit::script::Module();\r\n   defineMethodsInModule(...);\r\n   return foo;\r\n}\r\n```\r\n", "created_at": "2018-08-29T04:11:23Z", "updated_at": "2018-11-23T15:50:13Z", "html_url": "https://github.com/pytorch/pytorch/pull/10847#discussion_r213539623", "pull_request_url": "https://api.github.com/repos/pytorch/pytorch/pulls/10847", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/213539623"}, "html": {"href": "https://github.com/pytorch/pytorch/pull/10847#discussion_r213539623"}, "pull_request": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/10847"}}, "body_html": "<p>Just like in python this API should only ever return a jit::script::Module with methods on it. Graphs and their execution are an implementation detail we don't want in the public API.</p>\n<p>For end users the API should probably be something like:</p>\n<pre><code>std::shared_ptr&lt;jit::script::Module&gt; compile(std::string str) {\n   std::shared_ptr&lt;jit::script::Module&gt; foo = new jit::script::Module();\n   defineMethodsInModule(...);\n   return foo;\n}\n</code></pre>", "body_text": "Just like in python this API should only ever return a jit::script::Module with methods on it. Graphs and their execution are an implementation detail we don't want in the public API.\nFor end users the API should probably be something like:\nstd::shared_ptr<jit::script::Module> compile(std::string str) {\n   std::shared_ptr<jit::script::Module> foo = new jit::script::Module();\n   defineMethodsInModule(...);\n   return foo;\n}"}