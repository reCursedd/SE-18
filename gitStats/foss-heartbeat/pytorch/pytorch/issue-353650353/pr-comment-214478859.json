{"url": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/214478859", "pull_request_review_id": 151553161, "id": 214478859, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIxNDQ3ODg1OQ==", "diff_hunk": "@@ -0,0 +1,57 @@\n+#pragma once\n+#include <torch/csrc/jit/script/compiler.h>\n+#include <torch/csrc/jit/script/module.h>\n+#include <torch/csrc/jit/stack.h>\n+\n+#include <string>\n+\n+namespace torch {\n+namespace jit {\n+\n+/// Compiles Python JIT code into a graph that can be executed.\n+///\n+/// For example:\n+/// @code\n+///   auto module = torch::jit::compile(R\"JIT(\n+///     def relu_script(a, b):\n+///       return torch.relu(a + b)\n+///     def test_while(a, i):\n+///       while i < 10:\n+///         a += a\n+///         i += 1\n+///       return a\n+///   )JIT\");\n+///   auto output = torch::jit::run(module, \"relu_script\", a, b);\n+///   auto output = torch::jit::run(module, \"test_while\", a, b);\n+/// @endcode\n+///\n+/// @param source A string containing functions containing script code to\n+/// compile\n+/// @return A module containing the compiled functions\n+std::shared_ptr<script::Module> compile(const std::string& source);\n+\n+/// Run a method from a module and get a list of the returns.\n+///\n+/// For example:\n+/// @code\n+///   auto output = torch::jit::run(module, \"relu_script\", a, b);\n+///   std::cout << output[0].toTensor().toCLong() << std::endl;\n+/// @endcode\n+///\n+/// @param module A module containing the method `method_name` (see\n+/// torch::jit::compile)\n+/// @param method_name The name of the method to run\n+/// @param args Arguments to be passed to the method\n+/// @return An IValue containing the return value (or values if it is a tuple)\n+/// from the method\n+template <typename... Types>\n+IValue run(", "path": "torch/csrc/api/include/torch/jit.h", "position": null, "original_position": 48, "commit_id": "5f1ad65e123c742374bb76084767a57fe9209cd1", "original_commit_id": "87b5d96b36b1bfb04253ced44b2fc9febb651ae4", "user": {"login": "zdevito", "id": 370202, "node_id": "MDQ6VXNlcjM3MDIwMg==", "avatar_url": "https://avatars0.githubusercontent.com/u/370202?v=4", "gravatar_id": "", "url": "https://api.github.com/users/zdevito", "html_url": "https://github.com/zdevito", "followers_url": "https://api.github.com/users/zdevito/followers", "following_url": "https://api.github.com/users/zdevito/following{/other_user}", "gists_url": "https://api.github.com/users/zdevito/gists{/gist_id}", "starred_url": "https://api.github.com/users/zdevito/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/zdevito/subscriptions", "organizations_url": "https://api.github.com/users/zdevito/orgs", "repos_url": "https://api.github.com/users/zdevito/repos", "events_url": "https://api.github.com/users/zdevito/events{/privacy}", "received_events_url": "https://api.github.com/users/zdevito/received_events", "type": "User", "site_admin": false}, "body": "If you are adding syntax sugar for running, it should like:\r\n```\r\nauto c = module->run(\"relu_script\", a, b); \r\n```\r\n\r\nIt is pretty weird to have this be a method.\r\n", "created_at": "2018-08-31T21:25:53Z", "updated_at": "2018-11-23T15:50:30Z", "html_url": "https://github.com/pytorch/pytorch/pull/10847#discussion_r214478859", "pull_request_url": "https://api.github.com/repos/pytorch/pytorch/pulls/10847", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/214478859"}, "html": {"href": "https://github.com/pytorch/pytorch/pull/10847#discussion_r214478859"}, "pull_request": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/10847"}}, "body_html": "<p>If you are adding syntax sugar for running, it should like:</p>\n<pre><code>auto c = module-&gt;run(\"relu_script\", a, b); \n</code></pre>\n<p>It is pretty weird to have this be a method.</p>", "body_text": "If you are adding syntax sugar for running, it should like:\nauto c = module->run(\"relu_script\", a, b); \n\nIt is pretty weird to have this be a method."}