{"url": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/162159399", "pull_request_review_id": 89568133, "id": 162159399, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE2MjE1OTM5OQ==", "diff_hunk": "@@ -34,16 +34,21 @@ def __init__(self, probs=None, logits=None):\n         if (probs is None) == (logits is None):\n             raise ValueError(\"Either `probs` or `logits` must be specified, but not both.\")\n         if probs is not None:\n+            is_scalar = isinstance(probs, Number)\n             self.probs, = broadcast_all(probs)\n         else:\n+            is_scalar = isinstance(logits, Number)\n             self.logits, = broadcast_all(logits)\n-        probs_or_logits = probs if probs is not None else logits\n-        if isinstance(probs_or_logits, Number):\n+        self._param = self.probs if probs is not None else self.logits\n+        if is_scalar:\n             batch_shape = torch.Size()\n         else:\n-            batch_shape = probs_or_logits.size()\n+            batch_shape = self._param.size()\n         super(Bernoulli, self).__init__(batch_shape)\n \n+    def new(self, *args, **kwargs):\n+        return self._param.new(*args, **kwargs)", "path": "torch/distributions/bernoulli.py", "position": null, "original_position": 20, "commit_id": "e7b2bbb187b455c58029aa4ac87fd0b85f47989b", "original_commit_id": "0ac962bce26fc41c9b2665737a7084ee758b1e15", "user": {"login": "apaszke", "id": 4583066, "node_id": "MDQ6VXNlcjQ1ODMwNjY=", "avatar_url": "https://avatars3.githubusercontent.com/u/4583066?v=4", "gravatar_id": "", "url": "https://api.github.com/users/apaszke", "html_url": "https://github.com/apaszke", "followers_url": "https://api.github.com/users/apaszke/followers", "following_url": "https://api.github.com/users/apaszke/following{/other_user}", "gists_url": "https://api.github.com/users/apaszke/gists{/gist_id}", "starred_url": "https://api.github.com/users/apaszke/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/apaszke/subscriptions", "organizations_url": "https://api.github.com/users/apaszke/orgs", "repos_url": "https://api.github.com/users/apaszke/repos", "events_url": "https://api.github.com/users/apaszke/events{/privacy}", "received_events_url": "https://api.github.com/users/apaszke/received_events", "type": "User", "site_admin": false}, "body": "Oh that's now really what I thought `new()` will be. I understood that you want it to be a way to construct a similar distribution, not as a helper for creating tensors from *any* parameter. I'm ok with adding it, but it should be `_new` (or `_new_tensor` to avoid confusion, but not a part of the public interface).", "created_at": "2018-01-17T19:46:03Z", "updated_at": "2018-11-23T15:38:16Z", "html_url": "https://github.com/pytorch/pytorch/pull/4691#discussion_r162159399", "pull_request_url": "https://api.github.com/repos/pytorch/pytorch/pulls/4691", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/162159399"}, "html": {"href": "https://github.com/pytorch/pytorch/pull/4691#discussion_r162159399"}, "pull_request": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/4691"}}, "body_html": "<p>Oh that's now really what I thought <code>new()</code> will be. I understood that you want it to be a way to construct a similar distribution, not as a helper for creating tensors from <em>any</em> parameter. I'm ok with adding it, but it should be <code>_new</code> (or <code>_new_tensor</code> to avoid confusion, but not a part of the public interface).</p>", "body_text": "Oh that's now really what I thought new() will be. I understood that you want it to be a way to construct a similar distribution, not as a helper for creating tensors from any parameter. I'm ok with adding it, but it should be _new (or _new_tensor to avoid confusion, but not a part of the public interface)."}