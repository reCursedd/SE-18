{"url": "https://api.github.com/repos/pytorch/pytorch/issues/4691", "repository_url": "https://api.github.com/repos/pytorch/pytorch", "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/4691/labels{/name}", "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/4691/comments", "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/4691/events", "html_url": "https://github.com/pytorch/pytorch/pull/4691", "id": 289044805, "node_id": "MDExOlB1bGxSZXF1ZXN0MTYzMjc5MTUx", "number": 4691, "title": "Ensure lazy evaluation for probs and logits", "user": {"login": "neerajprad", "id": 1762463, "node_id": "MDQ6VXNlcjE3NjI0NjM=", "avatar_url": "https://avatars3.githubusercontent.com/u/1762463?v=4", "gravatar_id": "", "url": "https://api.github.com/users/neerajprad", "html_url": "https://github.com/neerajprad", "followers_url": "https://api.github.com/users/neerajprad/followers", "following_url": "https://api.github.com/users/neerajprad/following{/other_user}", "gists_url": "https://api.github.com/users/neerajprad/gists{/gist_id}", "starred_url": "https://api.github.com/users/neerajprad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/neerajprad/subscriptions", "organizations_url": "https://api.github.com/users/neerajprad/orgs", "repos_url": "https://api.github.com/users/neerajprad/repos", "events_url": "https://api.github.com/users/neerajprad/events{/privacy}", "received_events_url": "https://api.github.com/users/neerajprad/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2018-01-16T20:26:41Z", "updated_at": "2018-11-23T15:38:16Z", "closed_at": "2018-01-17T21:36:41Z", "author_association": "CONTRIBUTOR", "pull_request": {"url": "https://api.github.com/repos/pytorch/pytorch/pulls/4691", "html_url": "https://github.com/pytorch/pytorch/pull/4691", "diff_url": "https://github.com/pytorch/pytorch/pull/4691.diff", "patch_url": "https://github.com/pytorch/pytorch/pull/4691.patch"}, "body_html": "<p>This makes a few modifications to ensure that <code>logits</code> and <code>probs</code> are not accessed by a method unless it needs to. e.g. accessing <code>probs</code> on a class that was initialized with <code>logits</code> only to get the batch shape or event shape. This affects Categorical, OneHotCategorical, Bernoulli, Binomial and Multinomial.</p>\n<ul>\n<li>Added <code>.new()</code> methods to these distributions that can help with generating tensors/variables of the right type and placing it on the correct CUDA device.</li>\n</ul>\n<p><strong>Testing:</strong> Added some tests to prevent future regression:</p>\n<ul>\n<li><code>initializing</code> a distribution with <code>probs</code> and calling <code>sample</code>, <code>enumerate_support</code>, <code>batch_shape</code> and <code>event_shape</code> should not initialize <code>logits</code>.</li>\n<li>Conversely, <code>initializing</code> a distribution with <code>logits</code> and calling <code>log_prob</code>, <code>enumerate_support</code>, <code>batch_shape</code> and <code>event_shape</code> should not initialize <code>probs</code>.</li>\n</ul>", "body_text": "This makes a few modifications to ensure that logits and probs are not accessed by a method unless it needs to. e.g. accessing probs on a class that was initialized with logits only to get the batch shape or event shape. This affects Categorical, OneHotCategorical, Bernoulli, Binomial and Multinomial.\n\nAdded .new() methods to these distributions that can help with generating tensors/variables of the right type and placing it on the correct CUDA device.\n\nTesting: Added some tests to prevent future regression:\n\ninitializing a distribution with probs and calling sample, enumerate_support, batch_shape and event_shape should not initialize logits.\nConversely, initializing a distribution with logits and calling log_prob, enumerate_support, batch_shape and event_shape should not initialize probs.", "body": "This makes a few modifications to ensure that `logits` and `probs` are not accessed by a method unless it needs to. e.g. accessing `probs` on a class that was initialized with `logits` only to get the batch shape or event shape. This affects Categorical, OneHotCategorical, Bernoulli, Binomial and Multinomial. \r\n - Added `.new()` methods to these distributions that can help with generating tensors/variables of the right type and placing it on the correct CUDA device.\r\n\r\n**Testing:** Added some tests to prevent future regression:\r\n - `initializing` a distribution with `probs` and calling `sample`, `enumerate_support`, `batch_shape` and `event_shape` should not initialize `logits`.\r\n - Conversely, `initializing` a distribution with `logits` and calling `log_prob`, `enumerate_support`, `batch_shape` and `event_shape` should not initialize `probs`."}