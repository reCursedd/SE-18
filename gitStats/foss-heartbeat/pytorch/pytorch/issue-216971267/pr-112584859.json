{"url": "https://api.github.com/repos/pytorch/pytorch/pulls/1102", "id": 112584859, "node_id": "MDExOlB1bGxSZXF1ZXN0MTEyNTg0ODU5", "html_url": "https://github.com/pytorch/pytorch/pull/1102", "diff_url": "https://github.com/pytorch/pytorch/pull/1102.diff", "patch_url": "https://github.com/pytorch/pytorch/pull/1102.patch", "issue_url": "https://api.github.com/repos/pytorch/pytorch/issues/1102", "number": 1102, "state": "closed", "locked": false, "title": "Cwrap arg assign", "user": {"login": "albanD", "id": 6359743, "node_id": "MDQ6VXNlcjYzNTk3NDM=", "avatar_url": "https://avatars3.githubusercontent.com/u/6359743?v=4", "gravatar_id": "", "url": "https://api.github.com/users/albanD", "html_url": "https://github.com/albanD", "followers_url": "https://api.github.com/users/albanD/followers", "following_url": "https://api.github.com/users/albanD/following{/other_user}", "gists_url": "https://api.github.com/users/albanD/gists{/gist_id}", "starred_url": "https://api.github.com/users/albanD/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/albanD/subscriptions", "organizations_url": "https://api.github.com/users/albanD/orgs", "repos_url": "https://api.github.com/users/albanD/repos", "events_url": "https://api.github.com/users/albanD/events{/privacy}", "received_events_url": "https://api.github.com/users/albanD/received_events", "type": "User", "site_admin": false}, "body": "My first `cwrap` PR, thorough review needed !\r\n\r\nExtend cwrap stucture to assign the arguments to variables named `arg_*` before the function call.\r\nThis simplifies the `before_call` that can now access directly the arguments (the previous behaviour with `${arg0}` is still allowed right now for backward compatibility).\r\nAlso allows the `before_call` to modify the arguments!!\r\n\r\nAlso fixes #146 as the unpacking is done before.\r\n\r\nSample before:\r\n```cpp\r\n      PyThreadState *_save = NULL;\r\n      try {\r\n        long ndim = ((THPTensor*)self)->cdata->nDimension;\r\n        THPUtils_assert(ndim == 2, \"t_() expects a 2D tensor, but self is %ldD\", ndim);\r\n        \r\n        Py_UNBLOCK_THREADS;\r\n        THTensor_(transpose)(LIBRARY_STATE ((THPTensor*)self)->cdata, ((THPTensor*)self)->cdata, 0, 1);\r\n        Py_BLOCK_THREADS;\r\n        Py_INCREF(self);\r\n        return (PyObject*)self;\r\n      } catch (...) {\r\n        if (_save) {\r\n          Py_BLOCK_THREADS;\r\n        }\r\n        throw;\r\n      }\r\n```\r\n\r\nSample after:\r\n```cpp\r\n      THTensor* arg_self = ((THPTensor*)self)->cdata;\r\n      \r\n      PyThreadState *_save = NULL;\r\n      try {\r\n        long ndim = arg_self->nDimension;\r\n        THPUtils_assert(ndim == 2, \"t_() expects a 2D tensor, but self is %ldD\", ndim);\r\n        \r\n        Py_UNBLOCK_THREADS;\r\n        THTensor_(transpose)(LIBRARY_STATE arg_self, arg_self, 0, 1);\r\n        Py_BLOCK_THREADS;\r\n        Py_INCREF(self);\r\n        return (PyObject*)self;\r\n      } catch (...) {\r\n        if (_save) {\r\n          Py_BLOCK_THREADS;\r\n        }\r\n        throw;\r\n      }\r\n```", "created_at": "2017-03-25T12:32:13Z", "updated_at": "2018-11-23T15:32:51Z", "closed_at": "2017-03-26T11:53:28Z", "merged_at": "2017-03-26T11:53:28Z", "merge_commit_sha": "bb71117ecc46d0cb19208fa2e49afc38fd9f689b", "assignee": null, "assignees": [], "requested_reviewers": [], "requested_teams": [], "labels": [], "milestone": null, "commits_url": "https://api.github.com/repos/pytorch/pytorch/pulls/1102/commits", "review_comments_url": "https://api.github.com/repos/pytorch/pytorch/pulls/1102/comments", "review_comment_url": "https://api.github.com/repos/pytorch/pytorch/pulls/comments{/number}", "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/1102/comments", "statuses_url": "https://api.github.com/repos/pytorch/pytorch/statuses/0e648cd61bb13d35504c0f41b950bff401a146e8", "head": {"label": "albanD:cwrap_arg_assign", "ref": "cwrap_arg_assign", "sha": "0e648cd61bb13d35504c0f41b950bff401a146e8", "user": {"login": "albanD", "id": 6359743, "node_id": "MDQ6VXNlcjYzNTk3NDM=", "avatar_url": "https://avatars3.githubusercontent.com/u/6359743?v=4", "gravatar_id": "", "url": "https://api.github.com/users/albanD", "html_url": "https://github.com/albanD", "followers_url": "https://api.github.com/users/albanD/followers", "following_url": "https://api.github.com/users/albanD/following{/other_user}", "gists_url": "https://api.github.com/users/albanD/gists{/gist_id}", "starred_url": "https://api.github.com/users/albanD/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/albanD/subscriptions", "organizations_url": "https://api.github.com/users/albanD/orgs", "repos_url": "https://api.github.com/users/albanD/repos", "events_url": "https://api.github.com/users/albanD/events{/privacy}", "received_events_url": "https://api.github.com/users/albanD/received_events", "type": "User", "site_admin": false}, "repo": {"id": 81354227, "node_id": "MDEwOlJlcG9zaXRvcnk4MTM1NDIyNw==", "name": "pytorch", "full_name": "albanD/pytorch", "private": false, "owner": {"login": "albanD", "id": 6359743, "node_id": "MDQ6VXNlcjYzNTk3NDM=", "avatar_url": "https://avatars3.githubusercontent.com/u/6359743?v=4", "gravatar_id": "", "url": "https://api.github.com/users/albanD", "html_url": "https://github.com/albanD", "followers_url": "https://api.github.com/users/albanD/followers", "following_url": "https://api.github.com/users/albanD/following{/other_user}", "gists_url": "https://api.github.com/users/albanD/gists{/gist_id}", "starred_url": "https://api.github.com/users/albanD/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/albanD/subscriptions", "organizations_url": "https://api.github.com/users/albanD/orgs", "repos_url": "https://api.github.com/users/albanD/repos", "events_url": "https://api.github.com/users/albanD/events{/privacy}", "received_events_url": "https://api.github.com/users/albanD/received_events", "type": "User", "site_admin": false}, "html_url": "https://github.com/albanD/pytorch", "description": "Tensors and Dynamic neural networks in Python  with strong GPU acceleration", "fork": true, "url": "https://api.github.com/repos/albanD/pytorch", "forks_url": "https://api.github.com/repos/albanD/pytorch/forks", "keys_url": "https://api.github.com/repos/albanD/pytorch/keys{/key_id}", "collaborators_url": "https://api.github.com/repos/albanD/pytorch/collaborators{/collaborator}", "teams_url": "https://api.github.com/repos/albanD/pytorch/teams", "hooks_url": "https://api.github.com/repos/albanD/pytorch/hooks", "issue_events_url": "https://api.github.com/repos/albanD/pytorch/issues/events{/number}", "events_url": "https://api.github.com/repos/albanD/pytorch/events", "assignees_url": "https://api.github.com/repos/albanD/pytorch/assignees{/user}", "branches_url": "https://api.github.com/repos/albanD/pytorch/branches{/branch}", "tags_url": "https://api.github.com/repos/albanD/pytorch/tags", "blobs_url": "https://api.github.com/repos/albanD/pytorch/git/blobs{/sha}", "git_tags_url": "https://api.github.com/repos/albanD/pytorch/git/tags{/sha}", "git_refs_url": "https://api.github.com/repos/albanD/pytorch/git/refs{/sha}", "trees_url": "https://api.github.com/repos/albanD/pytorch/git/trees{/sha}", "statuses_url": "https://api.github.com/repos/albanD/pytorch/statuses/{sha}", "languages_url": "https://api.github.com/repos/albanD/pytorch/languages", "stargazers_url": "https://api.github.com/repos/albanD/pytorch/stargazers", "contributors_url": "https://api.github.com/repos/albanD/pytorch/contributors", "subscribers_url": "https://api.github.com/repos/albanD/pytorch/subscribers", "subscription_url": "https://api.github.com/repos/albanD/pytorch/subscription", "commits_url": "https://api.github.com/repos/albanD/pytorch/commits{/sha}", "git_commits_url": "https://api.github.com/repos/albanD/pytorch/git/commits{/sha}", "comments_url": "https://api.github.com/repos/albanD/pytorch/comments{/number}", "issue_comment_url": "https://api.github.com/repos/albanD/pytorch/issues/comments{/number}", "contents_url": "https://api.github.com/repos/albanD/pytorch/contents/{+path}", "compare_url": "https://api.github.com/repos/albanD/pytorch/compare/{base}...{head}", "merges_url": "https://api.github.com/repos/albanD/pytorch/merges", "archive_url": "https://api.github.com/repos/albanD/pytorch/{archive_format}{/ref}", "downloads_url": "https://api.github.com/repos/albanD/pytorch/downloads", "issues_url": "https://api.github.com/repos/albanD/pytorch/issues{/number}", "pulls_url": "https://api.github.com/repos/albanD/pytorch/pulls{/number}", "milestones_url": "https://api.github.com/repos/albanD/pytorch/milestones{/number}", "notifications_url": "https://api.github.com/repos/albanD/pytorch/notifications{?since,all,participating}", "labels_url": "https://api.github.com/repos/albanD/pytorch/labels{/name}", "releases_url": "https://api.github.com/repos/albanD/pytorch/releases{/id}", "deployments_url": "https://api.github.com/repos/albanD/pytorch/deployments", "created_at": "2017-02-08T17:07:53Z", "updated_at": "2017-02-08T17:07:57Z", "pushed_at": "2018-11-23T22:10:56Z", "git_url": "git://github.com/albanD/pytorch.git", "ssh_url": "git@github.com:albanD/pytorch.git", "clone_url": "https://github.com/albanD/pytorch.git", "svn_url": "https://github.com/albanD/pytorch", "homepage": "http://pytorch.org", "size": 91341, "stargazers_count": 0, "watchers_count": 0, "language": "Python", "has_issues": false, "has_projects": true, "has_downloads": true, "has_wiki": true, "has_pages": false, "forks_count": 0, "mirror_url": null, "archived": false, "open_issues_count": 0, "license": {"key": "other", "name": "Other", "spdx_id": "NOASSERTION", "url": null, "node_id": "MDc6TGljZW5zZTA="}, "forks": 0, "open_issues": 0, "watchers": 0, "default_branch": "master"}}, "base": {"label": "pytorch:master", "ref": "master", "sha": "bf632544e684ed8a640a62d207d7e60ac3d11449", "user": {"login": "pytorch", "id": 21003710, "node_id": "MDEyOk9yZ2FuaXphdGlvbjIxMDAzNzEw", "avatar_url": "https://avatars3.githubusercontent.com/u/21003710?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pytorch", "html_url": "https://github.com/pytorch", "followers_url": "https://api.github.com/users/pytorch/followers", "following_url": "https://api.github.com/users/pytorch/following{/other_user}", "gists_url": "https://api.github.com/users/pytorch/gists{/gist_id}", "starred_url": "https://api.github.com/users/pytorch/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pytorch/subscriptions", "organizations_url": "https://api.github.com/users/pytorch/orgs", "repos_url": "https://api.github.com/users/pytorch/repos", "events_url": "https://api.github.com/users/pytorch/events{/privacy}", "received_events_url": "https://api.github.com/users/pytorch/received_events", "type": "Organization", "site_admin": false}, "repo": {"id": 65600975, "node_id": "MDEwOlJlcG9zaXRvcnk2NTYwMDk3NQ==", "name": "pytorch", "full_name": "pytorch/pytorch", "private": false, "owner": {"login": "pytorch", "id": 21003710, "node_id": "MDEyOk9yZ2FuaXphdGlvbjIxMDAzNzEw", "avatar_url": "https://avatars3.githubusercontent.com/u/21003710?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pytorch", "html_url": "https://github.com/pytorch", "followers_url": "https://api.github.com/users/pytorch/followers", "following_url": "https://api.github.com/users/pytorch/following{/other_user}", "gists_url": "https://api.github.com/users/pytorch/gists{/gist_id}", "starred_url": "https://api.github.com/users/pytorch/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pytorch/subscriptions", "organizations_url": "https://api.github.com/users/pytorch/orgs", "repos_url": "https://api.github.com/users/pytorch/repos", "events_url": "https://api.github.com/users/pytorch/events{/privacy}", "received_events_url": "https://api.github.com/users/pytorch/received_events", "type": "Organization", "site_admin": false}, "html_url": "https://github.com/pytorch/pytorch", "description": "Tensors and Dynamic neural networks in Python  with strong GPU acceleration", "fork": false, "url": "https://api.github.com/repos/pytorch/pytorch", "forks_url": "https://api.github.com/repos/pytorch/pytorch/forks", "keys_url": "https://api.github.com/repos/pytorch/pytorch/keys{/key_id}", "collaborators_url": "https://api.github.com/repos/pytorch/pytorch/collaborators{/collaborator}", "teams_url": "https://api.github.com/repos/pytorch/pytorch/teams", "hooks_url": "https://api.github.com/repos/pytorch/pytorch/hooks", "issue_events_url": "https://api.github.com/repos/pytorch/pytorch/issues/events{/number}", "events_url": "https://api.github.com/repos/pytorch/pytorch/events", "assignees_url": "https://api.github.com/repos/pytorch/pytorch/assignees{/user}", "branches_url": "https://api.github.com/repos/pytorch/pytorch/branches{/branch}", "tags_url": "https://api.github.com/repos/pytorch/pytorch/tags", "blobs_url": "https://api.github.com/repos/pytorch/pytorch/git/blobs{/sha}", "git_tags_url": "https://api.github.com/repos/pytorch/pytorch/git/tags{/sha}", "git_refs_url": "https://api.github.com/repos/pytorch/pytorch/git/refs{/sha}", "trees_url": "https://api.github.com/repos/pytorch/pytorch/git/trees{/sha}", "statuses_url": "https://api.github.com/repos/pytorch/pytorch/statuses/{sha}", "languages_url": "https://api.github.com/repos/pytorch/pytorch/languages", "stargazers_url": "https://api.github.com/repos/pytorch/pytorch/stargazers", "contributors_url": "https://api.github.com/repos/pytorch/pytorch/contributors", "subscribers_url": "https://api.github.com/repos/pytorch/pytorch/subscribers", "subscription_url": "https://api.github.com/repos/pytorch/pytorch/subscription", "commits_url": "https://api.github.com/repos/pytorch/pytorch/commits{/sha}", "git_commits_url": "https://api.github.com/repos/pytorch/pytorch/git/commits{/sha}", "comments_url": "https://api.github.com/repos/pytorch/pytorch/comments{/number}", "issue_comment_url": "https://api.github.com/repos/pytorch/pytorch/issues/comments{/number}", "contents_url": "https://api.github.com/repos/pytorch/pytorch/contents/{+path}", "compare_url": "https://api.github.com/repos/pytorch/pytorch/compare/{base}...{head}", "merges_url": "https://api.github.com/repos/pytorch/pytorch/merges", "archive_url": "https://api.github.com/repos/pytorch/pytorch/{archive_format}{/ref}", "downloads_url": "https://api.github.com/repos/pytorch/pytorch/downloads", "issues_url": "https://api.github.com/repos/pytorch/pytorch/issues{/number}", "pulls_url": "https://api.github.com/repos/pytorch/pytorch/pulls{/number}", "milestones_url": "https://api.github.com/repos/pytorch/pytorch/milestones{/number}", "notifications_url": "https://api.github.com/repos/pytorch/pytorch/notifications{?since,all,participating}", "labels_url": "https://api.github.com/repos/pytorch/pytorch/labels{/name}", "releases_url": "https://api.github.com/repos/pytorch/pytorch/releases{/id}", "deployments_url": "https://api.github.com/repos/pytorch/pytorch/deployments", "created_at": "2016-08-13T05:26:41Z", "updated_at": "2018-11-24T05:35:41Z", "pushed_at": "2018-11-24T05:34:07Z", "git_url": "git://github.com/pytorch/pytorch.git", "ssh_url": "git@github.com:pytorch/pytorch.git", "clone_url": "https://github.com/pytorch/pytorch.git", "svn_url": "https://github.com/pytorch/pytorch", "homepage": "http://pytorch.org", "size": 89651, "stargazers_count": 21577, "watchers_count": 21577, "language": "C++", "has_issues": true, "has_projects": true, "has_downloads": true, "has_wiki": true, "has_pages": false, "forks_count": 5149, "mirror_url": null, "archived": false, "open_issues_count": 2193, "license": {"key": "other", "name": "Other", "spdx_id": "NOASSERTION", "url": null, "node_id": "MDc6TGljZW5zZTA="}, "forks": 5149, "open_issues": 2193, "watchers": 21577, "default_branch": "master"}}, "_links": {"self": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/1102"}, "html": {"href": "https://github.com/pytorch/pytorch/pull/1102"}, "issue": {"href": "https://api.github.com/repos/pytorch/pytorch/issues/1102"}, "comments": {"href": "https://api.github.com/repos/pytorch/pytorch/issues/1102/comments"}, "review_comments": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/1102/comments"}, "review_comment": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/comments{/number}"}, "commits": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/1102/commits"}, "statuses": {"href": "https://api.github.com/repos/pytorch/pytorch/statuses/0e648cd61bb13d35504c0f41b950bff401a146e8"}}, "author_association": "COLLABORATOR", "body_html": "<p>My first <code>cwrap</code> PR, thorough review needed !</p>\n<p>Extend cwrap stucture to assign the arguments to variables named <code>arg_*</code> before the function call.<br>\nThis simplifies the <code>before_call</code> that can now access directly the arguments (the previous behaviour with <code>${arg0}</code> is still allowed right now for backward compatibility).<br>\nAlso allows the <code>before_call</code> to modify the arguments!!</p>\n<p>Also <span class=\"issue-keyword tooltipped tooltipped-se\" aria-label=\"This pull request closes issue #146.\">fixes</span> <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load issue title\" data-id=\"184324316\" data-permission-text=\"Issue title is private\" data-url=\"https://github.com/pytorch/pytorch/issues/146\" data-hovercard-type=\"issue\" data-hovercard-url=\"/pytorch/pytorch/issues/146/hovercard\" href=\"https://github.com/pytorch/pytorch/issues/146\">#146</a> as the unpacking is done before.</p>\n<p>Sample before:</p>\n<div class=\"highlight highlight-source-c++\"><pre>      PyThreadState *_save = <span class=\"pl-c1\">NULL</span>;\n      <span class=\"pl-k\">try</span> {\n        <span class=\"pl-k\">long</span> ndim = ((THPTensor*)self)-&gt;<span class=\"pl-smi\">cdata</span>-&gt;<span class=\"pl-smi\">nDimension</span>;\n        <span class=\"pl-c1\">THPUtils_assert</span>(ndim == <span class=\"pl-c1\">2</span>, <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>t_() expects a 2D tensor, but self is %ldD<span class=\"pl-pds\">\"</span></span>, ndim);\n        \n        Py_UNBLOCK_THREADS;\n        <span class=\"pl-c1\">THTensor_</span>(transpose)(<span class=\"pl-c1\">LIBRARY_STATE</span> ((THPTensor*)self)-&gt;<span class=\"pl-smi\">cdata</span>, ((THPTensor*)self)-&gt;<span class=\"pl-smi\">cdata</span>, <span class=\"pl-c1\">0</span>, <span class=\"pl-c1\">1</span>);\n        Py_BLOCK_THREADS;\n        <span class=\"pl-c1\">Py_INCREF</span>(self);\n        <span class=\"pl-k\">return</span> (PyObject*)self;\n      } <span class=\"pl-k\">catch</span> (...) {\n        <span class=\"pl-k\">if</span> (_save) {\n          Py_BLOCK_THREADS;\n        }\n        <span class=\"pl-k\">throw</span>;\n      }</pre></div>\n<p>Sample after:</p>\n<div class=\"highlight highlight-source-c++\"><pre>      THTensor* arg_self = ((THPTensor*)self)-&gt;cdata;\n      \n      PyThreadState *_save = <span class=\"pl-c1\">NULL</span>;\n      <span class=\"pl-k\">try</span> {\n        <span class=\"pl-k\">long</span> ndim = arg_self-&gt;<span class=\"pl-smi\">nDimension</span>;\n        <span class=\"pl-c1\">THPUtils_assert</span>(ndim == <span class=\"pl-c1\">2</span>, <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>t_() expects a 2D tensor, but self is %ldD<span class=\"pl-pds\">\"</span></span>, ndim);\n        \n        Py_UNBLOCK_THREADS;\n        <span class=\"pl-c1\">THTensor_</span>(transpose)(LIBRARY_STATE arg_self, arg_self, <span class=\"pl-c1\">0</span>, <span class=\"pl-c1\">1</span>);\n        Py_BLOCK_THREADS;\n        <span class=\"pl-c1\">Py_INCREF</span>(self);\n        <span class=\"pl-k\">return</span> (PyObject*)self;\n      } <span class=\"pl-k\">catch</span> (...) {\n        <span class=\"pl-k\">if</span> (_save) {\n          Py_BLOCK_THREADS;\n        }\n        <span class=\"pl-k\">throw</span>;\n      }</pre></div>", "body_text": "My first cwrap PR, thorough review needed !\nExtend cwrap stucture to assign the arguments to variables named arg_* before the function call.\nThis simplifies the before_call that can now access directly the arguments (the previous behaviour with ${arg0} is still allowed right now for backward compatibility).\nAlso allows the before_call to modify the arguments!!\nAlso fixes #146 as the unpacking is done before.\nSample before:\n      PyThreadState *_save = NULL;\n      try {\n        long ndim = ((THPTensor*)self)->cdata->nDimension;\n        THPUtils_assert(ndim == 2, \"t_() expects a 2D tensor, but self is %ldD\", ndim);\n        \n        Py_UNBLOCK_THREADS;\n        THTensor_(transpose)(LIBRARY_STATE ((THPTensor*)self)->cdata, ((THPTensor*)self)->cdata, 0, 1);\n        Py_BLOCK_THREADS;\n        Py_INCREF(self);\n        return (PyObject*)self;\n      } catch (...) {\n        if (_save) {\n          Py_BLOCK_THREADS;\n        }\n        throw;\n      }\nSample after:\n      THTensor* arg_self = ((THPTensor*)self)->cdata;\n      \n      PyThreadState *_save = NULL;\n      try {\n        long ndim = arg_self->nDimension;\n        THPUtils_assert(ndim == 2, \"t_() expects a 2D tensor, but self is %ldD\", ndim);\n        \n        Py_UNBLOCK_THREADS;\n        THTensor_(transpose)(LIBRARY_STATE arg_self, arg_self, 0, 1);\n        Py_BLOCK_THREADS;\n        Py_INCREF(self);\n        return (PyObject*)self;\n      } catch (...) {\n        if (_save) {\n          Py_BLOCK_THREADS;\n        }\n        throw;\n      }", "merged": true, "mergeable": null, "rebaseable": null, "mergeable_state": "unknown", "merged_by": {"login": "apaszke", "id": 4583066, "node_id": "MDQ6VXNlcjQ1ODMwNjY=", "avatar_url": "https://avatars3.githubusercontent.com/u/4583066?v=4", "gravatar_id": "", "url": "https://api.github.com/users/apaszke", "html_url": "https://github.com/apaszke", "followers_url": "https://api.github.com/users/apaszke/followers", "following_url": "https://api.github.com/users/apaszke/following{/other_user}", "gists_url": "https://api.github.com/users/apaszke/gists{/gist_id}", "starred_url": "https://api.github.com/users/apaszke/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/apaszke/subscriptions", "organizations_url": "https://api.github.com/users/apaszke/orgs", "repos_url": "https://api.github.com/users/apaszke/repos", "events_url": "https://api.github.com/users/apaszke/events{/privacy}", "received_events_url": "https://api.github.com/users/apaszke/received_events", "type": "User", "site_admin": false}, "comments": 3, "review_comments": 3, "maintainer_can_modify": false, "commits": 4, "additions": 135, "deletions": 41, "changed_files": 9}