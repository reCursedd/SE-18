{"url": "https://api.github.com/repos/pytorch/pytorch/issues/11762", "repository_url": "https://api.github.com/repos/pytorch/pytorch", "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/11762/labels{/name}", "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/11762/comments", "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/11762/events", "html_url": "https://github.com/pytorch/pytorch/issues/11762", "id": 360969092, "node_id": "MDU6SXNzdWUzNjA5NjkwOTI=", "number": 11762, "title": "Incredibly unhelpful error message for giving missing channels to conv2d layer", "user": {"login": "justinkterry", "id": 19422700, "node_id": "MDQ6VXNlcjE5NDIyNzAw", "avatar_url": "https://avatars1.githubusercontent.com/u/19422700?v=4", "gravatar_id": "", "url": "https://api.github.com/users/justinkterry", "html_url": "https://github.com/justinkterry", "followers_url": "https://api.github.com/users/justinkterry/followers", "following_url": "https://api.github.com/users/justinkterry/following{/other_user}", "gists_url": "https://api.github.com/users/justinkterry/gists{/gist_id}", "starred_url": "https://api.github.com/users/justinkterry/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/justinkterry/subscriptions", "organizations_url": "https://api.github.com/users/justinkterry/orgs", "repos_url": "https://api.github.com/users/justinkterry/repos", "events_url": "https://api.github.com/users/justinkterry/events{/privacy}", "received_events_url": "https://api.github.com/users/justinkterry/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 443483881, "node_id": "MDU6TGFiZWw0NDM0ODM4ODE=", "url": "https://api.github.com/repos/pytorch/pytorch/labels/todo", "name": "todo", "color": "c2e0c6", "default": false}], "state": "closed", "locked": false, "assignee": {"login": "soumith", "id": 1310570, "node_id": "MDQ6VXNlcjEzMTA1NzA=", "avatar_url": "https://avatars0.githubusercontent.com/u/1310570?v=4", "gravatar_id": "", "url": "https://api.github.com/users/soumith", "html_url": "https://github.com/soumith", "followers_url": "https://api.github.com/users/soumith/followers", "following_url": "https://api.github.com/users/soumith/following{/other_user}", "gists_url": "https://api.github.com/users/soumith/gists{/gist_id}", "starred_url": "https://api.github.com/users/soumith/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/soumith/subscriptions", "organizations_url": "https://api.github.com/users/soumith/orgs", "repos_url": "https://api.github.com/users/soumith/repos", "events_url": "https://api.github.com/users/soumith/events{/privacy}", "received_events_url": "https://api.github.com/users/soumith/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "soumith", "id": 1310570, "node_id": "MDQ6VXNlcjEzMTA1NzA=", "avatar_url": "https://avatars0.githubusercontent.com/u/1310570?v=4", "gravatar_id": "", "url": "https://api.github.com/users/soumith", "html_url": "https://github.com/soumith", "followers_url": "https://api.github.com/users/soumith/followers", "following_url": "https://api.github.com/users/soumith/following{/other_user}", "gists_url": "https://api.github.com/users/soumith/gists{/gist_id}", "starred_url": "https://api.github.com/users/soumith/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/soumith/subscriptions", "organizations_url": "https://api.github.com/users/soumith/orgs", "repos_url": "https://api.github.com/users/soumith/repos", "events_url": "https://api.github.com/users/soumith/events{/privacy}", "received_events_url": "https://api.github.com/users/soumith/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 8, "created_at": "2018-09-17T17:31:34Z", "updated_at": "2018-09-18T13:31:41Z", "closed_at": "2018-09-18T13:31:40Z", "author_association": "NONE", "body_html": "<p>I was trying to implement lenet, with the following net layout:</p>\n<pre><code>class Net(nn.Module):\n    def __init__(self):\n        super(Net, self).__init__()\n        self.conv1 = nn.Conv2d(1, 6, 5)\n        self.conv2 = nn.Conv2d(6, 16, 5)\n        self.fc1   = nn.Linear(16*5*5, 120)\n        self.fc2   = nn.Linear(120, 84)\n        self.fc3   = nn.Linear(84, 10)\n\n    def forward(self, x):\n        out = self.conv1(x)\n        out = F.relu(out)\n        out = F.max_pool2d(out, 2)\n        out = F.relu(self.conv2(out))\n        out = F.max_pool2d(out, 2)\n        out = out.view(out.size(0), -1)\n        out = F.relu(self.fc1(out))\n        out = F.relu(self.fc2(out))\n        out = self.fc3(out)\n        return out\n</code></pre>\n<p>When run, the following error shows up on <code>out = self.conv1(x)</code>:</p>\n<pre><code>Exception has occurred: RuntimeError\nExpected 4-dimensional input for 4-dimensional weight [6, 1, 5, 5], but got input of size [64, 32, 32] instead\n</code></pre>\n<p>The issue was that I didn't add a 1 dimension to the channel for the data I was feeding into it. This error message is essentially impossible to derive any useful information from to someone new to PyTorch, for something that I'm sure is an incredibly common error. At minimum, changing to to something like:</p>\n<pre><code>Exception has occurred: RuntimeError\nExpected 4-dimensional input for 4-dimensional weight [6, 1, 5, 5], but got input of size [64, 32, 32] instead. The input data is missing a dimension, possibly for channels?\n</code></pre>\n<p>would be an order of magnitude more helpful.</p>", "body_text": "I was trying to implement lenet, with the following net layout:\nclass Net(nn.Module):\n    def __init__(self):\n        super(Net, self).__init__()\n        self.conv1 = nn.Conv2d(1, 6, 5)\n        self.conv2 = nn.Conv2d(6, 16, 5)\n        self.fc1   = nn.Linear(16*5*5, 120)\n        self.fc2   = nn.Linear(120, 84)\n        self.fc3   = nn.Linear(84, 10)\n\n    def forward(self, x):\n        out = self.conv1(x)\n        out = F.relu(out)\n        out = F.max_pool2d(out, 2)\n        out = F.relu(self.conv2(out))\n        out = F.max_pool2d(out, 2)\n        out = out.view(out.size(0), -1)\n        out = F.relu(self.fc1(out))\n        out = F.relu(self.fc2(out))\n        out = self.fc3(out)\n        return out\n\nWhen run, the following error shows up on out = self.conv1(x):\nException has occurred: RuntimeError\nExpected 4-dimensional input for 4-dimensional weight [6, 1, 5, 5], but got input of size [64, 32, 32] instead\n\nThe issue was that I didn't add a 1 dimension to the channel for the data I was feeding into it. This error message is essentially impossible to derive any useful information from to someone new to PyTorch, for something that I'm sure is an incredibly common error. At minimum, changing to to something like:\nException has occurred: RuntimeError\nExpected 4-dimensional input for 4-dimensional weight [6, 1, 5, 5], but got input of size [64, 32, 32] instead. The input data is missing a dimension, possibly for channels?\n\nwould be an order of magnitude more helpful.", "body": "I was trying to implement lenet, with the following net layout:\r\n\r\n```\r\nclass Net(nn.Module):\r\n    def __init__(self):\r\n        super(Net, self).__init__()\r\n        self.conv1 = nn.Conv2d(1, 6, 5)\r\n        self.conv2 = nn.Conv2d(6, 16, 5)\r\n        self.fc1   = nn.Linear(16*5*5, 120)\r\n        self.fc2   = nn.Linear(120, 84)\r\n        self.fc3   = nn.Linear(84, 10)\r\n\r\n    def forward(self, x):\r\n        out = self.conv1(x)\r\n        out = F.relu(out)\r\n        out = F.max_pool2d(out, 2)\r\n        out = F.relu(self.conv2(out))\r\n        out = F.max_pool2d(out, 2)\r\n        out = out.view(out.size(0), -1)\r\n        out = F.relu(self.fc1(out))\r\n        out = F.relu(self.fc2(out))\r\n        out = self.fc3(out)\r\n        return out\r\n```\r\n\r\nWhen run, the following error shows up on `out = self.conv1(x)`:\r\n\r\n```\r\nException has occurred: RuntimeError\r\nExpected 4-dimensional input for 4-dimensional weight [6, 1, 5, 5], but got input of size [64, 32, 32] instead\r\n```\r\n\r\nThe issue was that I didn't add a 1 dimension to the channel for the data I was feeding into it. This error message is essentially impossible to derive any useful information from to someone new to PyTorch, for something that I'm sure is an incredibly common error. At minimum, changing to to something like:\r\n\r\n```\r\nException has occurred: RuntimeError\r\nExpected 4-dimensional input for 4-dimensional weight [6, 1, 5, 5], but got input of size [64, 32, 32] instead. The input data is missing a dimension, possibly for channels?\r\n```\r\n\r\nwould be an order of magnitude more helpful."}