{"url": "https://api.github.com/repos/pytorch/pytorch/issues/comments/385801381", "html_url": "https://github.com/pytorch/pytorch/pull/6867#issuecomment-385801381", "issue_url": "https://api.github.com/repos/pytorch/pytorch/issues/6867", "id": 385801381, "node_id": "MDEyOklzc3VlQ29tbWVudDM4NTgwMTM4MQ==", "user": {"login": "weiyangfb", "id": 38509346, "node_id": "MDQ6VXNlcjM4NTA5MzQ2", "avatar_url": "https://avatars1.githubusercontent.com/u/38509346?v=4", "gravatar_id": "", "url": "https://api.github.com/users/weiyangfb", "html_url": "https://github.com/weiyangfb", "followers_url": "https://api.github.com/users/weiyangfb/followers", "following_url": "https://api.github.com/users/weiyangfb/following{/other_user}", "gists_url": "https://api.github.com/users/weiyangfb/gists{/gist_id}", "starred_url": "https://api.github.com/users/weiyangfb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/weiyangfb/subscriptions", "organizations_url": "https://api.github.com/users/weiyangfb/orgs", "repos_url": "https://api.github.com/users/weiyangfb/repos", "events_url": "https://api.github.com/users/weiyangfb/events{/privacy}", "received_events_url": "https://api.github.com/users/weiyangfb/received_events", "type": "User", "site_admin": false}, "created_at": "2018-05-01T21:49:42Z", "updated_at": "2018-05-01T21:49:42Z", "author_association": "CONTRIBUTOR", "body_html": "<p><a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=5674597\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/SsnL\">@SsnL</a> sure, I will work on the noncontiguous case. For the nd indices array, please correct me if I am wrong, it is easy to work with this abstraction because even with strides and linear index, we still need some transformations/step (with for loops) to compute the the dest linear index, where things might be more transparent if using nd indices array.</p>", "body_text": "@SsnL sure, I will work on the noncontiguous case. For the nd indices array, please correct me if I am wrong, it is easy to work with this abstraction because even with strides and linear index, we still need some transformations/step (with for loops) to compute the the dest linear index, where things might be more transparent if using nd indices array.", "body": "@SsnL sure, I will work on the noncontiguous case. For the nd indices array, please correct me if I am wrong, it is easy to work with this abstraction because even with strides and linear index, we still need some transformations/step (with for loops) to compute the the dest linear index, where things might be more transparent if using nd indices array."}