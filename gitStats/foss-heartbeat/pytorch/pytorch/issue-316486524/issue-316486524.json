{"url": "https://api.github.com/repos/pytorch/pytorch/issues/6839", "repository_url": "https://api.github.com/repos/pytorch/pytorch", "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/6839/labels{/name}", "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/6839/comments", "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/6839/events", "html_url": "https://github.com/pytorch/pytorch/issues/6839", "id": 316486524, "node_id": "MDU6SXNzdWUzMTY0ODY1MjQ=", "number": 6839, "title": "[PyTorch] Data corruption when converting numpy bool", "user": {"login": "justheuristic", "id": 3491902, "node_id": "MDQ6VXNlcjM0OTE5MDI=", "avatar_url": "https://avatars2.githubusercontent.com/u/3491902?v=4", "gravatar_id": "", "url": "https://api.github.com/users/justheuristic", "html_url": "https://github.com/justheuristic", "followers_url": "https://api.github.com/users/justheuristic/followers", "following_url": "https://api.github.com/users/justheuristic/following{/other_user}", "gists_url": "https://api.github.com/users/justheuristic/gists{/gist_id}", "starred_url": "https://api.github.com/users/justheuristic/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/justheuristic/subscriptions", "organizations_url": "https://api.github.com/users/justheuristic/orgs", "repos_url": "https://api.github.com/users/justheuristic/repos", "events_url": "https://api.github.com/users/justheuristic/events{/privacy}", "received_events_url": "https://api.github.com/users/justheuristic/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-04-21T12:05:09Z", "updated_at": "2018-04-23T00:22:21Z", "closed_at": "2018-04-23T00:22:21Z", "author_association": "NONE", "body_html": "<p>This bug is probably reported or even fixed already.</p>\n<pre><code>import torch, numpy as np\nx = np.random.randint(0, 1, [20]).astype('bool')\nx_ft = torch.FloatTensor(x)     # corrupts data\nassert all(x_ft.numpy() == x)  # fails\n</code></pre>\n<p>Here's what x_ft looks like:</p>\n<pre><code>&gt;&gt;&gt; x_ft\n\n 3.9404e-23\n 4.5744e-41\n 3.9404e-23\n 4.5744e-41\n-7.6586e+00\n...\n</code></pre>\n<p>My torch versions</p>\n<pre><code>&gt;&gt;&gt; torch.__version__\n'0.3.0.post4'\n&gt;&gt;&gt; np.__version__\n'1.14.0'\n</code></pre>\n<p>OS: ubuntu 16<br>\nPyTorch installation: linux, conda, py3.5, for cpu<br>\nNo cuda/GPU available<br>\ncmake version 3.5.1</p>", "body_text": "This bug is probably reported or even fixed already.\nimport torch, numpy as np\nx = np.random.randint(0, 1, [20]).astype('bool')\nx_ft = torch.FloatTensor(x)     # corrupts data\nassert all(x_ft.numpy() == x)  # fails\n\nHere's what x_ft looks like:\n>>> x_ft\n\n 3.9404e-23\n 4.5744e-41\n 3.9404e-23\n 4.5744e-41\n-7.6586e+00\n...\n\nMy torch versions\n>>> torch.__version__\n'0.3.0.post4'\n>>> np.__version__\n'1.14.0'\n\nOS: ubuntu 16\nPyTorch installation: linux, conda, py3.5, for cpu\nNo cuda/GPU available\ncmake version 3.5.1", "body": "This bug is probably reported or even fixed already.\r\n\r\n```\r\nimport torch, numpy as np\r\nx = np.random.randint(0, 1, [20]).astype('bool')\r\nx_ft = torch.FloatTensor(x)     # corrupts data\r\nassert all(x_ft.numpy() == x)  # fails\r\n```\r\n\r\nHere's what x_ft looks like:\r\n```\r\n>>> x_ft\r\n\r\n 3.9404e-23\r\n 4.5744e-41\r\n 3.9404e-23\r\n 4.5744e-41\r\n-7.6586e+00\r\n...\r\n```\r\nMy torch versions\r\n```\r\n>>> torch.__version__\r\n'0.3.0.post4'\r\n>>> np.__version__\r\n'1.14.0'\r\n```\r\nOS: ubuntu 16\r\nPyTorch installation: linux, conda, py3.5, for cpu\r\nNo cuda/GPU available\r\ncmake version 3.5.1\r\n\r\n\r\n"}