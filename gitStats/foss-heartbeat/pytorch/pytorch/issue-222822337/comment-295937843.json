{"url": "https://api.github.com/repos/pytorch/pytorch/issues/comments/295937843", "html_url": "https://github.com/pytorch/pytorch/issues/1301#issuecomment-295937843", "issue_url": "https://api.github.com/repos/pytorch/pytorch/issues/1301", "id": 295937843, "node_id": "MDEyOklzc3VlQ29tbWVudDI5NTkzNzg0Mw==", "user": {"login": "apaszke", "id": 4583066, "node_id": "MDQ6VXNlcjQ1ODMwNjY=", "avatar_url": "https://avatars3.githubusercontent.com/u/4583066?v=4", "gravatar_id": "", "url": "https://api.github.com/users/apaszke", "html_url": "https://github.com/apaszke", "followers_url": "https://api.github.com/users/apaszke/followers", "following_url": "https://api.github.com/users/apaszke/following{/other_user}", "gists_url": "https://api.github.com/users/apaszke/gists{/gist_id}", "starred_url": "https://api.github.com/users/apaszke/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/apaszke/subscriptions", "organizations_url": "https://api.github.com/users/apaszke/orgs", "repos_url": "https://api.github.com/users/apaszke/repos", "events_url": "https://api.github.com/users/apaszke/events{/privacy}", "received_events_url": "https://api.github.com/users/apaszke/received_events", "type": "User", "site_admin": false}, "created_at": "2017-04-20T22:10:03Z", "updated_at": "2017-04-20T22:10:03Z", "author_association": "MEMBER", "body_html": "<p>It seems to be broken because of the fused RNN kernels commit. If I add <code>False and</code> to <a href=\"https://github.com/pytorch/pytorch/blob/master/torch/nn/_functions/rnn.py#L23\">this condition</a>, then the test passes (with <code>torch.backends.cudnn.enabled = False</code> set before). <a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=22205833\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/csarofeen\">@csarofeen</a></p>", "body_text": "It seems to be broken because of the fused RNN kernels commit. If I add False and to this condition, then the test passes (with torch.backends.cudnn.enabled = False set before). @csarofeen", "body": "It seems to be broken because of the fused RNN kernels commit. If I add `False and` to [this condition](https://github.com/pytorch/pytorch/blob/master/torch/nn/_functions/rnn.py#L23), then the test passes (with `torch.backends.cudnn.enabled = False` set before). @csarofeen "}