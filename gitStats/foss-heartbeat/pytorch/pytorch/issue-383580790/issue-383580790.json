{"url": "https://api.github.com/repos/pytorch/pytorch/issues/14322", "repository_url": "https://api.github.com/repos/pytorch/pytorch", "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/14322/labels{/name}", "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/14322/comments", "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/14322/events", "html_url": "https://github.com/pytorch/pytorch/issues/14322", "id": 383580790, "node_id": "MDU6SXNzdWUzODM1ODA3OTA=", "number": 14322, "title": "[docs] Typo in torch.full_like docs", "user": {"login": "vadimkantorov", "id": 1041752, "node_id": "MDQ6VXNlcjEwNDE3NTI=", "avatar_url": "https://avatars0.githubusercontent.com/u/1041752?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vadimkantorov", "html_url": "https://github.com/vadimkantorov", "followers_url": "https://api.github.com/users/vadimkantorov/followers", "following_url": "https://api.github.com/users/vadimkantorov/following{/other_user}", "gists_url": "https://api.github.com/users/vadimkantorov/gists{/gist_id}", "starred_url": "https://api.github.com/users/vadimkantorov/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vadimkantorov/subscriptions", "organizations_url": "https://api.github.com/users/vadimkantorov/orgs", "repos_url": "https://api.github.com/users/vadimkantorov/repos", "events_url": "https://api.github.com/users/vadimkantorov/events{/privacy}", "received_events_url": "https://api.github.com/users/vadimkantorov/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2018-11-22T15:27:17Z", "updated_at": "2018-11-22T15:27:33Z", "closed_at": null, "author_association": "NONE", "body_html": "<p><a href=\"https://pytorch.org/docs/master/torch.html?highlight=full#torch.full_like\" rel=\"nofollow\">https://pytorch.org/docs/master/torch.html?highlight=full#torch.full_like</a> :</p>\n<p><code>Returns a tensor with the same size as input filled with fill_value. torch.full_like(input, fill_value) is equivalent to torch.full_like(input.size(), fill_value, dtype=input.dtype, layout=input.layout, device=input.device).</code></p>\n<p>Should it not be <code>equivalent to torch.full(...</code>?</p>", "body_text": "https://pytorch.org/docs/master/torch.html?highlight=full#torch.full_like :\nReturns a tensor with the same size as input filled with fill_value. torch.full_like(input, fill_value) is equivalent to torch.full_like(input.size(), fill_value, dtype=input.dtype, layout=input.layout, device=input.device).\nShould it not be equivalent to torch.full(...?", "body": "https://pytorch.org/docs/master/torch.html?highlight=full#torch.full_like :\r\n\r\n```Returns a tensor with the same size as input filled with fill_value. torch.full_like(input, fill_value) is equivalent to torch.full_like(input.size(), fill_value, dtype=input.dtype, layout=input.layout, device=input.device).```\r\n\r\nShould it not be `equivalent to torch.full(...`?"}