{"url": "https://api.github.com/repos/pytorch/pytorch/issues/comments/341934099", "html_url": "https://github.com/pytorch/pytorch/issues/3050#issuecomment-341934099", "issue_url": "https://api.github.com/repos/pytorch/pytorch/issues/3050", "id": 341934099, "node_id": "MDEyOklzc3VlQ29tbWVudDM0MTkzNDA5OQ==", "user": {"login": "obilaniu", "id": 3268344, "node_id": "MDQ6VXNlcjMyNjgzNDQ=", "avatar_url": "https://avatars3.githubusercontent.com/u/3268344?v=4", "gravatar_id": "", "url": "https://api.github.com/users/obilaniu", "html_url": "https://github.com/obilaniu", "followers_url": "https://api.github.com/users/obilaniu/followers", "following_url": "https://api.github.com/users/obilaniu/following{/other_user}", "gists_url": "https://api.github.com/users/obilaniu/gists{/gist_id}", "starred_url": "https://api.github.com/users/obilaniu/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/obilaniu/subscriptions", "organizations_url": "https://api.github.com/users/obilaniu/orgs", "repos_url": "https://api.github.com/users/obilaniu/repos", "events_url": "https://api.github.com/users/obilaniu/events{/privacy}", "received_events_url": "https://api.github.com/users/obilaniu/received_events", "type": "User", "site_admin": false}, "created_at": "2017-11-04T22:24:52Z", "updated_at": "2017-11-04T22:25:37Z", "author_association": "NONE", "body_html": "<p><a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=13564\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/ezyang\">@ezyang</a> The best that can be done, provided no other functionality of <code>stdatomic.h</code> is needed in that header when GCC is used, is to apply, in that file, the <a href=\"https://github.com/gcc-mirror/gcc/commit/aedd2947e223fda8838a2d2d9e7a4dc9327d8855\"><code>stdatomic.h</code> change of 2014</a>, which mapped <code>ATOMIC_x_LOCK_FREE</code> directly to the GCC preprocessor define macros already available in GCC 4.8:</p>\n<pre><code>#define __GCC_ATOMIC_CHAR_LOCK_FREE 2\n#define __GCC_ATOMIC_CHAR32_T_LOCK_FREE 2\n#define __GCC_ATOMIC_BOOL_LOCK_FREE 2\n#define __GCC_ATOMIC_POINTER_LOCK_FREE 2\n#define __GCC_ATOMIC_INT_LOCK_FREE 2\n#define __GCC_ATOMIC_WCHAR_T_LOCK_FREE 2\n#define __GCC_ATOMIC_LONG_LOCK_FREE 2\n#define __GCC_ATOMIC_CHAR16_T_LOCK_FREE 2\n#define __GCC_ATOMIC_LLONG_LOCK_FREE 2\n#define __GCC_ATOMIC_SHORT_LOCK_FREE 2\n</code></pre>", "body_text": "@ezyang The best that can be done, provided no other functionality of stdatomic.h is needed in that header when GCC is used, is to apply, in that file, the stdatomic.h change of 2014, which mapped ATOMIC_x_LOCK_FREE directly to the GCC preprocessor define macros already available in GCC 4.8:\n#define __GCC_ATOMIC_CHAR_LOCK_FREE 2\n#define __GCC_ATOMIC_CHAR32_T_LOCK_FREE 2\n#define __GCC_ATOMIC_BOOL_LOCK_FREE 2\n#define __GCC_ATOMIC_POINTER_LOCK_FREE 2\n#define __GCC_ATOMIC_INT_LOCK_FREE 2\n#define __GCC_ATOMIC_WCHAR_T_LOCK_FREE 2\n#define __GCC_ATOMIC_LONG_LOCK_FREE 2\n#define __GCC_ATOMIC_CHAR16_T_LOCK_FREE 2\n#define __GCC_ATOMIC_LLONG_LOCK_FREE 2\n#define __GCC_ATOMIC_SHORT_LOCK_FREE 2", "body": "@ezyang The best that can be done, provided no other functionality of `stdatomic.h` is needed in that header when GCC is used, is to apply, in that file, the [`stdatomic.h` change of 2014](https://github.com/gcc-mirror/gcc/commit/aedd2947e223fda8838a2d2d9e7a4dc9327d8855), which mapped `ATOMIC_x_LOCK_FREE` directly to the GCC preprocessor define macros already available in GCC 4.8:\r\n\r\n```\r\n#define __GCC_ATOMIC_CHAR_LOCK_FREE 2\r\n#define __GCC_ATOMIC_CHAR32_T_LOCK_FREE 2\r\n#define __GCC_ATOMIC_BOOL_LOCK_FREE 2\r\n#define __GCC_ATOMIC_POINTER_LOCK_FREE 2\r\n#define __GCC_ATOMIC_INT_LOCK_FREE 2\r\n#define __GCC_ATOMIC_WCHAR_T_LOCK_FREE 2\r\n#define __GCC_ATOMIC_LONG_LOCK_FREE 2\r\n#define __GCC_ATOMIC_CHAR16_T_LOCK_FREE 2\r\n#define __GCC_ATOMIC_LLONG_LOCK_FREE 2\r\n#define __GCC_ATOMIC_SHORT_LOCK_FREE 2\r\n```"}