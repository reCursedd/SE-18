{"url": "https://api.github.com/repos/pytorch/pytorch/pulls/10181", "id": 205865776, "node_id": "MDExOlB1bGxSZXF1ZXN0MjA1ODY1Nzc2", "html_url": "https://github.com/pytorch/pytorch/pull/10181", "diff_url": "https://github.com/pytorch/pytorch/pull/10181.diff", "patch_url": "https://github.com/pytorch/pytorch/pull/10181.patch", "issue_url": "https://api.github.com/repos/pytorch/pytorch/issues/10181", "number": 10181, "state": "closed", "locked": false, "title": "Sparse tensor printing; add NotImplemented autograd fn", "user": {"login": "SsnL", "id": 5674597, "node_id": "MDQ6VXNlcjU2NzQ1OTc=", "avatar_url": "https://avatars2.githubusercontent.com/u/5674597?v=4", "gravatar_id": "", "url": "https://api.github.com/users/SsnL", "html_url": "https://github.com/SsnL", "followers_url": "https://api.github.com/users/SsnL/followers", "following_url": "https://api.github.com/users/SsnL/following{/other_user}", "gists_url": "https://api.github.com/users/SsnL/gists{/gist_id}", "starred_url": "https://api.github.com/users/SsnL/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/SsnL/subscriptions", "organizations_url": "https://api.github.com/users/SsnL/orgs", "repos_url": "https://api.github.com/users/SsnL/repos", "events_url": "https://api.github.com/users/SsnL/events{/privacy}", "received_events_url": "https://api.github.com/users/SsnL/received_events", "type": "User", "site_admin": false}, "body": "Commits:\r\n\r\n1. Add autograd function `NotImplemented` (subclass of `Error`) so python `grad_fn` prints nicer. Since `Error` is used in `DelayedError` to implement `@oncedifferentiable`, I can't just change its name. cc @colesbury \r\n\r\n2. Add printing for sparse tensors. Fixes https://github.com/pytorch/pytorch/issues/9412 . cc @weiyangfb @li-roy . \r\n\r\n3. Add tests for sparse printing\r\n\r\nExamples:\r\n```diff\r\n  In [2]: x = torch.sparse.FloatTensor(torch.arange(4).view(2,2), torch.randn(2, 2), [10, 10, 2])\r\n  \r\n  In [3]: x\r\n  Out[3]:\r\n- torch.sparse.FloatTensor of size (10,10,2) with indices:\r\n- tensor([[0, 1],\r\n-         [2, 3]])\r\n- and values:\r\n- tensor([[-1.1832, -0.5927],\r\n-         [ 0.0831,  0.2511]])\r\n+ tensor(indices=tensor([[0, 1],\r\n+                        [2, 3]]),\r\n+        values=tensor([[ 1.5081,  0.3451],\r\n+                       [-0.0392,  0.4776]]),\r\n+        size=(10, 10, 2), nnz=2, layout=torch.sparse_coo)\r\n  \r\n  In [4]: x.requires_grad_()\r\n  Out[4]:\r\n- torch.sparse.FloatTensor of size (10,10,2) with indices:\r\n- tensor([[0, 1],\r\n-         [2, 3]], grad_fn=<Error>)\r\n- and values:\r\n- tensor([[-1.1832, -0.5927],\r\n-         [ 0.0831,  0.2511]], grad_fn=<Error>)\r\n+ tensor(indices=tensor([[0, 1],\r\n+                        [2, 3]]),\r\n+        values=tensor([[ 1.5081,  0.3451],\r\n+                       [-0.0392,  0.4776]]),\r\n+        size=(10, 10, 2), nnz=2, layout=torch.sparse_coo, requires_grad=True)\r\n  \r\n  In [5]: x + x\r\n  Out[5]:\r\n- torch.sparse.FloatTensor of size (10,10,2) with indices:\r\n- tensor([[0, 1],\r\n-         [2, 3]], grad_fn=<Error>)\r\n- and values:\r\n- tensor([[-2.3664, -1.1855],\r\n-         [ 0.1662,  0.5021]], grad_fn=<Error>)\r\n+ tensor(indices=tensor([[0, 1],\r\n+                        [2, 3]]),\r\n+        values=tensor([[ 3.0162,  0.6902],\r\n+                       [-0.0785,  0.9553]]),\r\n+        size=(10, 10, 2), nnz=2, layout=torch.sparse_coo, grad_fn=<AddBackward0>)\r\n  \r\n  In [6]: x.double()\r\n  Out[6]:\r\n- torch.sparse.DoubleTensor of size (10,10,2) with indices:\r\n- tensor([[0, 1],\r\n-         [2, 3]], grad_fn=<Error>)\r\n- and values:\r\n- tensor([[-1.1832, -0.5927],\r\n-         [ 0.0831,  0.2511]], dtype=torch.float64, grad_fn=<Error>)\r\n+ tensor(indices=tensor([[0, 1],\r\n+                        [2, 3]]),\r\n+        values=tensor([[ 1.5081,  0.3451],\r\n+                       [-0.0392,  0.4776]]),\r\n+        size=(10, 10, 2), nnz=2, dtype=torch.float64, layout=torch.sparse_coo,\r\n+        grad_fn=<NotImplemented>)\r\n  \r\n  In [7]: x = torch.sparse.FloatTensor(torch.ones(0, 2, dtype=torch.long), torch.randn(2, 0), [0])\r\n  \r\n  In [8]: x\r\n  Out[8]:\r\n- torch.sparse.FloatTensor of size (0,) with indices:\r\n- tensor([], size=(0, 2), dtype=torch.int64)\r\n- and values:\r\n- tensor([], size=(2, 0))\r\n+ tensor(indices=tensor([], size=(0, 2)),\r\n+        values=tensor([], size=(2, 0)),\r\n+        size=(0,), nnz=2, layout=torch.sparse_coo)\r\n  \r\n  In [9]: x = torch.sparse.FloatTensor(torch.ones(0, 2, dtype=torch.long), torch.randn(2), [])\r\n  \r\n  In [10]: x\r\n  Out[10]:\r\n- torch.sparse.FloatTensor of size () with indices:\r\n- tensor([], size=(0, 2), dtype=torch.int64)\r\n- and values:\r\n- tensor([-0.0064,  0.8518])\r\n+ tensor(indices=tensor([], size=(0, 2)),\r\n+        values=tensor([ 0.9800, -0.5978]),\r\n+        size=(), nnz=2, layout=torch.sparse_coo)\r\n```", "created_at": "2018-08-02T21:24:47Z", "updated_at": "2018-11-23T15:50:39Z", "closed_at": "2018-09-06T02:42:20Z", "merged_at": null, "merge_commit_sha": "590326cf28883e9f4ac77737ccc8441864367d81", "assignee": null, "assignees": [], "requested_reviewers": [{"login": "ezyang", "id": 13564, "node_id": "MDQ6VXNlcjEzNTY0", "avatar_url": "https://avatars0.githubusercontent.com/u/13564?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ezyang", "html_url": "https://github.com/ezyang", "followers_url": "https://api.github.com/users/ezyang/followers", "following_url": "https://api.github.com/users/ezyang/following{/other_user}", "gists_url": "https://api.github.com/users/ezyang/gists{/gist_id}", "starred_url": "https://api.github.com/users/ezyang/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ezyang/subscriptions", "organizations_url": "https://api.github.com/users/ezyang/orgs", "repos_url": "https://api.github.com/users/ezyang/repos", "events_url": "https://api.github.com/users/ezyang/events{/privacy}", "received_events_url": "https://api.github.com/users/ezyang/received_events", "type": "User", "site_admin": false}, {"login": "zdevito", "id": 370202, "node_id": "MDQ6VXNlcjM3MDIwMg==", "avatar_url": "https://avatars0.githubusercontent.com/u/370202?v=4", "gravatar_id": "", "url": "https://api.github.com/users/zdevito", "html_url": "https://github.com/zdevito", "followers_url": "https://api.github.com/users/zdevito/followers", "following_url": "https://api.github.com/users/zdevito/following{/other_user}", "gists_url": "https://api.github.com/users/zdevito/gists{/gist_id}", "starred_url": "https://api.github.com/users/zdevito/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/zdevito/subscriptions", "organizations_url": "https://api.github.com/users/zdevito/orgs", "repos_url": "https://api.github.com/users/zdevito/repos", "events_url": "https://api.github.com/users/zdevito/events{/privacy}", "received_events_url": "https://api.github.com/users/zdevito/received_events", "type": "User", "site_admin": false}, {"login": "colesbury", "id": 655866, "node_id": "MDQ6VXNlcjY1NTg2Ng==", "avatar_url": "https://avatars1.githubusercontent.com/u/655866?v=4", "gravatar_id": "", "url": "https://api.github.com/users/colesbury", "html_url": "https://github.com/colesbury", "followers_url": "https://api.github.com/users/colesbury/followers", "following_url": "https://api.github.com/users/colesbury/following{/other_user}", "gists_url": "https://api.github.com/users/colesbury/gists{/gist_id}", "starred_url": "https://api.github.com/users/colesbury/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/colesbury/subscriptions", "organizations_url": "https://api.github.com/users/colesbury/orgs", "repos_url": "https://api.github.com/users/colesbury/repos", "events_url": "https://api.github.com/users/colesbury/events{/privacy}", "received_events_url": "https://api.github.com/users/colesbury/received_events", "type": "User", "site_admin": false}, {"login": "soumith", "id": 1310570, "node_id": "MDQ6VXNlcjEzMTA1NzA=", "avatar_url": "https://avatars0.githubusercontent.com/u/1310570?v=4", "gravatar_id": "", "url": "https://api.github.com/users/soumith", "html_url": "https://github.com/soumith", "followers_url": "https://api.github.com/users/soumith/followers", "following_url": "https://api.github.com/users/soumith/following{/other_user}", "gists_url": "https://api.github.com/users/soumith/gists{/gist_id}", "starred_url": "https://api.github.com/users/soumith/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/soumith/subscriptions", "organizations_url": "https://api.github.com/users/soumith/orgs", "repos_url": "https://api.github.com/users/soumith/repos", "events_url": "https://api.github.com/users/soumith/events{/privacy}", "received_events_url": "https://api.github.com/users/soumith/received_events", "type": "User", "site_admin": false}, {"login": "apaszke", "id": 4583066, "node_id": "MDQ6VXNlcjQ1ODMwNjY=", "avatar_url": "https://avatars3.githubusercontent.com/u/4583066?v=4", "gravatar_id": "", "url": "https://api.github.com/users/apaszke", "html_url": "https://github.com/apaszke", "followers_url": "https://api.github.com/users/apaszke/followers", "following_url": "https://api.github.com/users/apaszke/following{/other_user}", "gists_url": "https://api.github.com/users/apaszke/gists{/gist_id}", "starred_url": "https://api.github.com/users/apaszke/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/apaszke/subscriptions", "organizations_url": "https://api.github.com/users/apaszke/orgs", "repos_url": "https://api.github.com/users/apaszke/repos", "events_url": "https://api.github.com/users/apaszke/events{/privacy}", "received_events_url": "https://api.github.com/users/apaszke/received_events", "type": "User", "site_admin": false}], "requested_teams": [], "labels": [], "milestone": null, "commits_url": "https://api.github.com/repos/pytorch/pytorch/pulls/10181/commits", "review_comments_url": "https://api.github.com/repos/pytorch/pytorch/pulls/10181/comments", "review_comment_url": "https://api.github.com/repos/pytorch/pytorch/pulls/comments{/number}", "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/10181/comments", "statuses_url": "https://api.github.com/repos/pytorch/pytorch/statuses/72ca0478da31a4cd50ad0bdfca1d493dceafa397", "head": {"label": "SsnL:sp_prt", "ref": "sp_prt", "sha": "72ca0478da31a4cd50ad0bdfca1d493dceafa397", "user": {"login": "SsnL", "id": 5674597, "node_id": "MDQ6VXNlcjU2NzQ1OTc=", "avatar_url": "https://avatars2.githubusercontent.com/u/5674597?v=4", "gravatar_id": "", "url": "https://api.github.com/users/SsnL", "html_url": "https://github.com/SsnL", "followers_url": "https://api.github.com/users/SsnL/followers", "following_url": "https://api.github.com/users/SsnL/following{/other_user}", "gists_url": "https://api.github.com/users/SsnL/gists{/gist_id}", "starred_url": "https://api.github.com/users/SsnL/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/SsnL/subscriptions", "organizations_url": "https://api.github.com/users/SsnL/orgs", "repos_url": "https://api.github.com/users/SsnL/repos", "events_url": "https://api.github.com/users/SsnL/events{/privacy}", "received_events_url": "https://api.github.com/users/SsnL/received_events", "type": "User", "site_admin": false}, "repo": {"id": 103305558, "node_id": "MDEwOlJlcG9zaXRvcnkxMDMzMDU1NTg=", "name": "pytorch", "full_name": "SsnL/pytorch", "private": false, "owner": {"login": "SsnL", "id": 5674597, "node_id": "MDQ6VXNlcjU2NzQ1OTc=", "avatar_url": "https://avatars2.githubusercontent.com/u/5674597?v=4", "gravatar_id": "", "url": "https://api.github.com/users/SsnL", "html_url": "https://github.com/SsnL", "followers_url": "https://api.github.com/users/SsnL/followers", "following_url": "https://api.github.com/users/SsnL/following{/other_user}", "gists_url": "https://api.github.com/users/SsnL/gists{/gist_id}", "starred_url": "https://api.github.com/users/SsnL/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/SsnL/subscriptions", "organizations_url": "https://api.github.com/users/SsnL/orgs", "repos_url": "https://api.github.com/users/SsnL/repos", "events_url": "https://api.github.com/users/SsnL/events{/privacy}", "received_events_url": "https://api.github.com/users/SsnL/received_events", "type": "User", "site_admin": false}, "html_url": "https://github.com/SsnL/pytorch", "description": "Tensors and Dynamic neural networks in Python  with strong GPU acceleration", "fork": true, "url": "https://api.github.com/repos/SsnL/pytorch", "forks_url": "https://api.github.com/repos/SsnL/pytorch/forks", "keys_url": "https://api.github.com/repos/SsnL/pytorch/keys{/key_id}", "collaborators_url": "https://api.github.com/repos/SsnL/pytorch/collaborators{/collaborator}", "teams_url": "https://api.github.com/repos/SsnL/pytorch/teams", "hooks_url": "https://api.github.com/repos/SsnL/pytorch/hooks", "issue_events_url": "https://api.github.com/repos/SsnL/pytorch/issues/events{/number}", "events_url": "https://api.github.com/repos/SsnL/pytorch/events", "assignees_url": "https://api.github.com/repos/SsnL/pytorch/assignees{/user}", "branches_url": "https://api.github.com/repos/SsnL/pytorch/branches{/branch}", "tags_url": "https://api.github.com/repos/SsnL/pytorch/tags", "blobs_url": "https://api.github.com/repos/SsnL/pytorch/git/blobs{/sha}", "git_tags_url": "https://api.github.com/repos/SsnL/pytorch/git/tags{/sha}", "git_refs_url": "https://api.github.com/repos/SsnL/pytorch/git/refs{/sha}", "trees_url": "https://api.github.com/repos/SsnL/pytorch/git/trees{/sha}", "statuses_url": "https://api.github.com/repos/SsnL/pytorch/statuses/{sha}", "languages_url": "https://api.github.com/repos/SsnL/pytorch/languages", "stargazers_url": "https://api.github.com/repos/SsnL/pytorch/stargazers", "contributors_url": "https://api.github.com/repos/SsnL/pytorch/contributors", "subscribers_url": "https://api.github.com/repos/SsnL/pytorch/subscribers", "subscription_url": "https://api.github.com/repos/SsnL/pytorch/subscription", "commits_url": "https://api.github.com/repos/SsnL/pytorch/commits{/sha}", "git_commits_url": "https://api.github.com/repos/SsnL/pytorch/git/commits{/sha}", "comments_url": "https://api.github.com/repos/SsnL/pytorch/comments{/number}", "issue_comment_url": "https://api.github.com/repos/SsnL/pytorch/issues/comments{/number}", "contents_url": "https://api.github.com/repos/SsnL/pytorch/contents/{+path}", "compare_url": "https://api.github.com/repos/SsnL/pytorch/compare/{base}...{head}", "merges_url": "https://api.github.com/repos/SsnL/pytorch/merges", "archive_url": "https://api.github.com/repos/SsnL/pytorch/{archive_format}{/ref}", "downloads_url": "https://api.github.com/repos/SsnL/pytorch/downloads", "issues_url": "https://api.github.com/repos/SsnL/pytorch/issues{/number}", "pulls_url": "https://api.github.com/repos/SsnL/pytorch/pulls{/number}", "milestones_url": "https://api.github.com/repos/SsnL/pytorch/milestones{/number}", "notifications_url": "https://api.github.com/repos/SsnL/pytorch/notifications{?since,all,participating}", "labels_url": "https://api.github.com/repos/SsnL/pytorch/labels{/name}", "releases_url": "https://api.github.com/repos/SsnL/pytorch/releases{/id}", "deployments_url": "https://api.github.com/repos/SsnL/pytorch/deployments", "created_at": "2017-09-12T18:13:43Z", "updated_at": "2018-11-04T15:36:18Z", "pushed_at": "2018-11-09T18:32:11Z", "git_url": "git://github.com/SsnL/pytorch.git", "ssh_url": "git@github.com:SsnL/pytorch.git", "clone_url": "https://github.com/SsnL/pytorch.git", "svn_url": "https://github.com/SsnL/pytorch", "homepage": "http://pytorch.org", "size": 83933, "stargazers_count": 0, "watchers_count": 0, "language": "C++", "has_issues": true, "has_projects": true, "has_downloads": true, "has_wiki": true, "has_pages": false, "forks_count": 0, "mirror_url": null, "archived": false, "open_issues_count": 1, "license": {"key": "other", "name": "Other", "spdx_id": "NOASSERTION", "url": null, "node_id": "MDc6TGljZW5zZTA="}, "forks": 0, "open_issues": 1, "watchers": 0, "default_branch": "master"}}, "base": {"label": "pytorch:master", "ref": "master", "sha": "033499cf5690d39acd7bbed5e8205e9d850193af", "user": {"login": "pytorch", "id": 21003710, "node_id": "MDEyOk9yZ2FuaXphdGlvbjIxMDAzNzEw", "avatar_url": "https://avatars3.githubusercontent.com/u/21003710?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pytorch", "html_url": "https://github.com/pytorch", "followers_url": "https://api.github.com/users/pytorch/followers", "following_url": "https://api.github.com/users/pytorch/following{/other_user}", "gists_url": "https://api.github.com/users/pytorch/gists{/gist_id}", "starred_url": "https://api.github.com/users/pytorch/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pytorch/subscriptions", "organizations_url": "https://api.github.com/users/pytorch/orgs", "repos_url": "https://api.github.com/users/pytorch/repos", "events_url": "https://api.github.com/users/pytorch/events{/privacy}", "received_events_url": "https://api.github.com/users/pytorch/received_events", "type": "Organization", "site_admin": false}, "repo": {"id": 65600975, "node_id": "MDEwOlJlcG9zaXRvcnk2NTYwMDk3NQ==", "name": "pytorch", "full_name": "pytorch/pytorch", "private": false, "owner": {"login": "pytorch", "id": 21003710, "node_id": "MDEyOk9yZ2FuaXphdGlvbjIxMDAzNzEw", "avatar_url": "https://avatars3.githubusercontent.com/u/21003710?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pytorch", "html_url": "https://github.com/pytorch", "followers_url": "https://api.github.com/users/pytorch/followers", "following_url": "https://api.github.com/users/pytorch/following{/other_user}", "gists_url": "https://api.github.com/users/pytorch/gists{/gist_id}", "starred_url": "https://api.github.com/users/pytorch/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pytorch/subscriptions", "organizations_url": "https://api.github.com/users/pytorch/orgs", "repos_url": "https://api.github.com/users/pytorch/repos", "events_url": "https://api.github.com/users/pytorch/events{/privacy}", "received_events_url": "https://api.github.com/users/pytorch/received_events", "type": "Organization", "site_admin": false}, "html_url": "https://github.com/pytorch/pytorch", "description": "Tensors and Dynamic neural networks in Python  with strong GPU acceleration", "fork": false, "url": "https://api.github.com/repos/pytorch/pytorch", "forks_url": "https://api.github.com/repos/pytorch/pytorch/forks", "keys_url": "https://api.github.com/repos/pytorch/pytorch/keys{/key_id}", "collaborators_url": "https://api.github.com/repos/pytorch/pytorch/collaborators{/collaborator}", "teams_url": "https://api.github.com/repos/pytorch/pytorch/teams", "hooks_url": "https://api.github.com/repos/pytorch/pytorch/hooks", "issue_events_url": "https://api.github.com/repos/pytorch/pytorch/issues/events{/number}", "events_url": "https://api.github.com/repos/pytorch/pytorch/events", "assignees_url": "https://api.github.com/repos/pytorch/pytorch/assignees{/user}", "branches_url": "https://api.github.com/repos/pytorch/pytorch/branches{/branch}", "tags_url": "https://api.github.com/repos/pytorch/pytorch/tags", "blobs_url": "https://api.github.com/repos/pytorch/pytorch/git/blobs{/sha}", "git_tags_url": "https://api.github.com/repos/pytorch/pytorch/git/tags{/sha}", "git_refs_url": "https://api.github.com/repos/pytorch/pytorch/git/refs{/sha}", "trees_url": "https://api.github.com/repos/pytorch/pytorch/git/trees{/sha}", "statuses_url": "https://api.github.com/repos/pytorch/pytorch/statuses/{sha}", "languages_url": "https://api.github.com/repos/pytorch/pytorch/languages", "stargazers_url": "https://api.github.com/repos/pytorch/pytorch/stargazers", "contributors_url": "https://api.github.com/repos/pytorch/pytorch/contributors", "subscribers_url": "https://api.github.com/repos/pytorch/pytorch/subscribers", "subscription_url": "https://api.github.com/repos/pytorch/pytorch/subscription", "commits_url": "https://api.github.com/repos/pytorch/pytorch/commits{/sha}", "git_commits_url": "https://api.github.com/repos/pytorch/pytorch/git/commits{/sha}", "comments_url": "https://api.github.com/repos/pytorch/pytorch/comments{/number}", "issue_comment_url": "https://api.github.com/repos/pytorch/pytorch/issues/comments{/number}", "contents_url": "https://api.github.com/repos/pytorch/pytorch/contents/{+path}", "compare_url": "https://api.github.com/repos/pytorch/pytorch/compare/{base}...{head}", "merges_url": "https://api.github.com/repos/pytorch/pytorch/merges", "archive_url": "https://api.github.com/repos/pytorch/pytorch/{archive_format}{/ref}", "downloads_url": "https://api.github.com/repos/pytorch/pytorch/downloads", "issues_url": "https://api.github.com/repos/pytorch/pytorch/issues{/number}", "pulls_url": "https://api.github.com/repos/pytorch/pytorch/pulls{/number}", "milestones_url": "https://api.github.com/repos/pytorch/pytorch/milestones{/number}", "notifications_url": "https://api.github.com/repos/pytorch/pytorch/notifications{?since,all,participating}", "labels_url": "https://api.github.com/repos/pytorch/pytorch/labels{/name}", "releases_url": "https://api.github.com/repos/pytorch/pytorch/releases{/id}", "deployments_url": "https://api.github.com/repos/pytorch/pytorch/deployments", "created_at": "2016-08-13T05:26:41Z", "updated_at": "2018-11-24T14:27:35Z", "pushed_at": "2018-11-24T12:42:01Z", "git_url": "git://github.com/pytorch/pytorch.git", "ssh_url": "git@github.com:pytorch/pytorch.git", "clone_url": "https://github.com/pytorch/pytorch.git", "svn_url": "https://github.com/pytorch/pytorch", "homepage": "http://pytorch.org", "size": 89656, "stargazers_count": 21591, "watchers_count": 21591, "language": "C++", "has_issues": true, "has_projects": true, "has_downloads": true, "has_wiki": true, "has_pages": false, "forks_count": 5154, "mirror_url": null, "archived": false, "open_issues_count": 2196, "license": {"key": "other", "name": "Other", "spdx_id": "NOASSERTION", "url": null, "node_id": "MDc6TGljZW5zZTA="}, "forks": 5154, "open_issues": 2196, "watchers": 21591, "default_branch": "master"}}, "_links": {"self": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/10181"}, "html": {"href": "https://github.com/pytorch/pytorch/pull/10181"}, "issue": {"href": "https://api.github.com/repos/pytorch/pytorch/issues/10181"}, "comments": {"href": "https://api.github.com/repos/pytorch/pytorch/issues/10181/comments"}, "review_comments": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/10181/comments"}, "review_comment": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/comments{/number}"}, "commits": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/10181/commits"}, "statuses": {"href": "https://api.github.com/repos/pytorch/pytorch/statuses/72ca0478da31a4cd50ad0bdfca1d493dceafa397"}}, "author_association": "CONTRIBUTOR", "body_html": "<p>Commits:</p>\n<ol>\n<li>\n<p>Add autograd function <code>NotImplemented</code> (subclass of <code>Error</code>) so python <code>grad_fn</code> prints nicer. Since <code>Error</code> is used in <code>DelayedError</code> to implement <code>@oncedifferentiable</code>, I can't just change its name. cc <a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=655866\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/colesbury\">@colesbury</a></p>\n</li>\n<li>\n<p>Add printing for sparse tensors. <span class=\"issue-keyword tooltipped tooltipped-se\" aria-label=\"This pull request closes issue #9412.\">Fixes</span> <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load issue title\" data-id=\"340848643\" data-permission-text=\"Issue title is private\" data-url=\"https://github.com/pytorch/pytorch/issues/9412\" data-hovercard-type=\"issue\" data-hovercard-url=\"/pytorch/pytorch/issues/9412/hovercard\" href=\"https://github.com/pytorch/pytorch/issues/9412\">#9412</a> . cc <a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=38509346\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/weiyangfb\">@weiyangfb</a> <a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=8813817\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/li-roy\">@li-roy</a> .</p>\n</li>\n<li>\n<p>Add tests for sparse printing</p>\n</li>\n</ol>\n<p>Examples:</p>\n<div class=\"highlight highlight-source-diff\"><pre>  In [2]: x = torch.sparse.FloatTensor(torch.arange(4).view(2,2), torch.randn(2, 2), [10, 10, 2])\n  \n  In [3]: x\n  Out[3]:\n<span class=\"pl-md\"><span class=\"pl-md\">-</span> torch.sparse.FloatTensor of size (10,10,2) with indices:</span>\n<span class=\"pl-md\"><span class=\"pl-md\">-</span> tensor([[0, 1],</span>\n<span class=\"pl-md\"><span class=\"pl-md\">-</span>         [2, 3]])</span>\n<span class=\"pl-md\"><span class=\"pl-md\">-</span> and values:</span>\n<span class=\"pl-md\"><span class=\"pl-md\">-</span> tensor([[-1.1832, -0.5927],</span>\n<span class=\"pl-md\"><span class=\"pl-md\">-</span>         [ 0.0831,  0.2511]])</span>\n<span class=\"pl-mi1\"><span class=\"pl-mi1\">+</span> tensor(indices=tensor([[0, 1],</span>\n<span class=\"pl-mi1\"><span class=\"pl-mi1\">+</span>                        [2, 3]]),</span>\n<span class=\"pl-mi1\"><span class=\"pl-mi1\">+</span>        values=tensor([[ 1.5081,  0.3451],</span>\n<span class=\"pl-mi1\"><span class=\"pl-mi1\">+</span>                       [-0.0392,  0.4776]]),</span>\n<span class=\"pl-mi1\"><span class=\"pl-mi1\">+</span>        size=(10, 10, 2), nnz=2, layout=torch.sparse_coo)</span>\n  \n  In [4]: x.requires_grad_()\n  Out[4]:\n<span class=\"pl-md\"><span class=\"pl-md\">-</span> torch.sparse.FloatTensor of size (10,10,2) with indices:</span>\n<span class=\"pl-md\"><span class=\"pl-md\">-</span> tensor([[0, 1],</span>\n<span class=\"pl-md\"><span class=\"pl-md\">-</span>         [2, 3]], grad_fn=&lt;Error&gt;)</span>\n<span class=\"pl-md\"><span class=\"pl-md\">-</span> and values:</span>\n<span class=\"pl-md\"><span class=\"pl-md\">-</span> tensor([[-1.1832, -0.5927],</span>\n<span class=\"pl-md\"><span class=\"pl-md\">-</span>         [ 0.0831,  0.2511]], grad_fn=&lt;Error&gt;)</span>\n<span class=\"pl-mi1\"><span class=\"pl-mi1\">+</span> tensor(indices=tensor([[0, 1],</span>\n<span class=\"pl-mi1\"><span class=\"pl-mi1\">+</span>                        [2, 3]]),</span>\n<span class=\"pl-mi1\"><span class=\"pl-mi1\">+</span>        values=tensor([[ 1.5081,  0.3451],</span>\n<span class=\"pl-mi1\"><span class=\"pl-mi1\">+</span>                       [-0.0392,  0.4776]]),</span>\n<span class=\"pl-mi1\"><span class=\"pl-mi1\">+</span>        size=(10, 10, 2), nnz=2, layout=torch.sparse_coo, requires_grad=True)</span>\n  \n  In [5]: x + x\n  Out[5]:\n<span class=\"pl-md\"><span class=\"pl-md\">-</span> torch.sparse.FloatTensor of size (10,10,2) with indices:</span>\n<span class=\"pl-md\"><span class=\"pl-md\">-</span> tensor([[0, 1],</span>\n<span class=\"pl-md\"><span class=\"pl-md\">-</span>         [2, 3]], grad_fn=&lt;Error&gt;)</span>\n<span class=\"pl-md\"><span class=\"pl-md\">-</span> and values:</span>\n<span class=\"pl-md\"><span class=\"pl-md\">-</span> tensor([[-2.3664, -1.1855],</span>\n<span class=\"pl-md\"><span class=\"pl-md\">-</span>         [ 0.1662,  0.5021]], grad_fn=&lt;Error&gt;)</span>\n<span class=\"pl-mi1\"><span class=\"pl-mi1\">+</span> tensor(indices=tensor([[0, 1],</span>\n<span class=\"pl-mi1\"><span class=\"pl-mi1\">+</span>                        [2, 3]]),</span>\n<span class=\"pl-mi1\"><span class=\"pl-mi1\">+</span>        values=tensor([[ 3.0162,  0.6902],</span>\n<span class=\"pl-mi1\"><span class=\"pl-mi1\">+</span>                       [-0.0785,  0.9553]]),</span>\n<span class=\"pl-mi1\"><span class=\"pl-mi1\">+</span>        size=(10, 10, 2), nnz=2, layout=torch.sparse_coo, grad_fn=&lt;AddBackward0&gt;)</span>\n  \n  In [6]: x.double()\n  Out[6]:\n<span class=\"pl-md\"><span class=\"pl-md\">-</span> torch.sparse.DoubleTensor of size (10,10,2) with indices:</span>\n<span class=\"pl-md\"><span class=\"pl-md\">-</span> tensor([[0, 1],</span>\n<span class=\"pl-md\"><span class=\"pl-md\">-</span>         [2, 3]], grad_fn=&lt;Error&gt;)</span>\n<span class=\"pl-md\"><span class=\"pl-md\">-</span> and values:</span>\n<span class=\"pl-md\"><span class=\"pl-md\">-</span> tensor([[-1.1832, -0.5927],</span>\n<span class=\"pl-md\"><span class=\"pl-md\">-</span>         [ 0.0831,  0.2511]], dtype=torch.float64, grad_fn=&lt;Error&gt;)</span>\n<span class=\"pl-mi1\"><span class=\"pl-mi1\">+</span> tensor(indices=tensor([[0, 1],</span>\n<span class=\"pl-mi1\"><span class=\"pl-mi1\">+</span>                        [2, 3]]),</span>\n<span class=\"pl-mi1\"><span class=\"pl-mi1\">+</span>        values=tensor([[ 1.5081,  0.3451],</span>\n<span class=\"pl-mi1\"><span class=\"pl-mi1\">+</span>                       [-0.0392,  0.4776]]),</span>\n<span class=\"pl-mi1\"><span class=\"pl-mi1\">+</span>        size=(10, 10, 2), nnz=2, dtype=torch.float64, layout=torch.sparse_coo,</span>\n<span class=\"pl-mi1\"><span class=\"pl-mi1\">+</span>        grad_fn=&lt;NotImplemented&gt;)</span>\n  \n  In [7]: x = torch.sparse.FloatTensor(torch.ones(0, 2, dtype=torch.long), torch.randn(2, 0), [0])\n  \n  In [8]: x\n  Out[8]:\n<span class=\"pl-md\"><span class=\"pl-md\">-</span> torch.sparse.FloatTensor of size (0,) with indices:</span>\n<span class=\"pl-md\"><span class=\"pl-md\">-</span> tensor([], size=(0, 2), dtype=torch.int64)</span>\n<span class=\"pl-md\"><span class=\"pl-md\">-</span> and values:</span>\n<span class=\"pl-md\"><span class=\"pl-md\">-</span> tensor([], size=(2, 0))</span>\n<span class=\"pl-mi1\"><span class=\"pl-mi1\">+</span> tensor(indices=tensor([], size=(0, 2)),</span>\n<span class=\"pl-mi1\"><span class=\"pl-mi1\">+</span>        values=tensor([], size=(2, 0)),</span>\n<span class=\"pl-mi1\"><span class=\"pl-mi1\">+</span>        size=(0,), nnz=2, layout=torch.sparse_coo)</span>\n  \n  In [9]: x = torch.sparse.FloatTensor(torch.ones(0, 2, dtype=torch.long), torch.randn(2), [])\n  \n  In [10]: x\n  Out[10]:\n<span class=\"pl-md\"><span class=\"pl-md\">-</span> torch.sparse.FloatTensor of size () with indices:</span>\n<span class=\"pl-md\"><span class=\"pl-md\">-</span> tensor([], size=(0, 2), dtype=torch.int64)</span>\n<span class=\"pl-md\"><span class=\"pl-md\">-</span> and values:</span>\n<span class=\"pl-md\"><span class=\"pl-md\">-</span> tensor([-0.0064,  0.8518])</span>\n<span class=\"pl-mi1\"><span class=\"pl-mi1\">+</span> tensor(indices=tensor([], size=(0, 2)),</span>\n<span class=\"pl-mi1\"><span class=\"pl-mi1\">+</span>        values=tensor([ 0.9800, -0.5978]),</span>\n<span class=\"pl-mi1\"><span class=\"pl-mi1\">+</span>        size=(), nnz=2, layout=torch.sparse_coo)</span></pre></div>", "body_text": "Commits:\n\n\nAdd autograd function NotImplemented (subclass of Error) so python grad_fn prints nicer. Since Error is used in DelayedError to implement @oncedifferentiable, I can't just change its name. cc @colesbury\n\n\nAdd printing for sparse tensors. Fixes #9412 . cc @weiyangfb @li-roy .\n\n\nAdd tests for sparse printing\n\n\nExamples:\n  In [2]: x = torch.sparse.FloatTensor(torch.arange(4).view(2,2), torch.randn(2, 2), [10, 10, 2])\n  \n  In [3]: x\n  Out[3]:\n- torch.sparse.FloatTensor of size (10,10,2) with indices:\n- tensor([[0, 1],\n-         [2, 3]])\n- and values:\n- tensor([[-1.1832, -0.5927],\n-         [ 0.0831,  0.2511]])\n+ tensor(indices=tensor([[0, 1],\n+                        [2, 3]]),\n+        values=tensor([[ 1.5081,  0.3451],\n+                       [-0.0392,  0.4776]]),\n+        size=(10, 10, 2), nnz=2, layout=torch.sparse_coo)\n  \n  In [4]: x.requires_grad_()\n  Out[4]:\n- torch.sparse.FloatTensor of size (10,10,2) with indices:\n- tensor([[0, 1],\n-         [2, 3]], grad_fn=<Error>)\n- and values:\n- tensor([[-1.1832, -0.5927],\n-         [ 0.0831,  0.2511]], grad_fn=<Error>)\n+ tensor(indices=tensor([[0, 1],\n+                        [2, 3]]),\n+        values=tensor([[ 1.5081,  0.3451],\n+                       [-0.0392,  0.4776]]),\n+        size=(10, 10, 2), nnz=2, layout=torch.sparse_coo, requires_grad=True)\n  \n  In [5]: x + x\n  Out[5]:\n- torch.sparse.FloatTensor of size (10,10,2) with indices:\n- tensor([[0, 1],\n-         [2, 3]], grad_fn=<Error>)\n- and values:\n- tensor([[-2.3664, -1.1855],\n-         [ 0.1662,  0.5021]], grad_fn=<Error>)\n+ tensor(indices=tensor([[0, 1],\n+                        [2, 3]]),\n+        values=tensor([[ 3.0162,  0.6902],\n+                       [-0.0785,  0.9553]]),\n+        size=(10, 10, 2), nnz=2, layout=torch.sparse_coo, grad_fn=<AddBackward0>)\n  \n  In [6]: x.double()\n  Out[6]:\n- torch.sparse.DoubleTensor of size (10,10,2) with indices:\n- tensor([[0, 1],\n-         [2, 3]], grad_fn=<Error>)\n- and values:\n- tensor([[-1.1832, -0.5927],\n-         [ 0.0831,  0.2511]], dtype=torch.float64, grad_fn=<Error>)\n+ tensor(indices=tensor([[0, 1],\n+                        [2, 3]]),\n+        values=tensor([[ 1.5081,  0.3451],\n+                       [-0.0392,  0.4776]]),\n+        size=(10, 10, 2), nnz=2, dtype=torch.float64, layout=torch.sparse_coo,\n+        grad_fn=<NotImplemented>)\n  \n  In [7]: x = torch.sparse.FloatTensor(torch.ones(0, 2, dtype=torch.long), torch.randn(2, 0), [0])\n  \n  In [8]: x\n  Out[8]:\n- torch.sparse.FloatTensor of size (0,) with indices:\n- tensor([], size=(0, 2), dtype=torch.int64)\n- and values:\n- tensor([], size=(2, 0))\n+ tensor(indices=tensor([], size=(0, 2)),\n+        values=tensor([], size=(2, 0)),\n+        size=(0,), nnz=2, layout=torch.sparse_coo)\n  \n  In [9]: x = torch.sparse.FloatTensor(torch.ones(0, 2, dtype=torch.long), torch.randn(2), [])\n  \n  In [10]: x\n  Out[10]:\n- torch.sparse.FloatTensor of size () with indices:\n- tensor([], size=(0, 2), dtype=torch.int64)\n- and values:\n- tensor([-0.0064,  0.8518])\n+ tensor(indices=tensor([], size=(0, 2)),\n+        values=tensor([ 0.9800, -0.5978]),\n+        size=(), nnz=2, layout=torch.sparse_coo)", "merged": false, "mergeable": null, "rebaseable": null, "mergeable_state": "unknown", "merged_by": null, "comments": 6, "review_comments": 12, "maintainer_can_modify": false, "commits": 8, "additions": 1286, "deletions": 60, "changed_files": 12}