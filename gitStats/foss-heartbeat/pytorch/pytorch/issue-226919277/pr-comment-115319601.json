{"url": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/115319601", "pull_request_review_id": 36848901, "id": 115319601, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDExNTMxOTYwMQ==", "diff_hunk": "@@ -184,40 +184,41 @@ def __init__(self, k, dim=None):\n \n class Norm(Function):\n \n-    def __init__(self, norm_type=2, dim=None):\n-        super(Norm, self).__init__()\n-        self.norm_type = norm_type\n-        self.dim = dim\n+    @staticmethod\n+    def forward(ctx, input, norm_type=2, dim=None):\n+        ctx.norm_type = norm_type\n+        ctx.dim = dim\n \n-    def forward(self, input):\n-        if self.dim is None:\n-            self.norm = input.norm(self.norm_type)\n-            self.save_for_backward(input)\n-            return input.new((self.norm,))\n+        if dim is None:\n+            ctx.norm = input.norm(norm_type)\n+            ctx.save_for_backward(input)\n+            return input.new((ctx.norm,))\n         else:\n-            output = input.norm(self.norm_type, self.dim)\n-            self.save_for_backward(input, output)\n+            output = input.norm(norm_type, dim)\n+            ctx.save_for_backward(input, output)\n             return output\n \n-    def backward(self, grad_output):\n-        if self.dim is None:\n-            input, = self.saved_tensors\n-            if self.norm_type == 2:\n-                return input.mul(grad_output[0] / self.norm)\n+    @staticmethod\n+    def backward(ctx, grad_output):\n+        if ctx.dim is None:\n+            input, = ctx.saved_variables\n+            if ctx.norm_type == 2:\n+                scale_v = (grad_output[0] / ctx.norm).expand_as(input)\n+                return input.mul(scale_v), None, None\n             else:\n-                pow = input.abs().pow(self.norm_type - 2)\n-                scale = grad_output[0] / self.norm ** (self.norm_type - 1)\n-                return input.mul(pow).mul(scale)\n+                pow = input.abs().pow(ctx.norm_type - 2)\n+                scale_v = (grad_output[0] / ctx.norm ** (ctx.norm_type - 1)).expand_as(input)", "path": "torch/autograd/_functions/reduce.py", "position": null, "original_position": 46, "commit_id": "988ee5f7fa6623d787146b8002fa5c81eaa59fa2", "original_commit_id": "3bbce337a7f572c7399073e337603cdebc7c5271", "user": {"login": "apaszke", "id": 4583066, "node_id": "MDQ6VXNlcjQ1ODMwNjY=", "avatar_url": "https://avatars3.githubusercontent.com/u/4583066?v=4", "gravatar_id": "", "url": "https://api.github.com/users/apaszke", "html_url": "https://github.com/apaszke", "followers_url": "https://api.github.com/users/apaszke/followers", "following_url": "https://api.github.com/users/apaszke/following{/other_user}", "gists_url": "https://api.github.com/users/apaszke/gists{/gist_id}", "starred_url": "https://api.github.com/users/apaszke/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/apaszke/subscriptions", "organizations_url": "https://api.github.com/users/apaszke/orgs", "repos_url": "https://api.github.com/users/apaszke/repos", "events_url": "https://api.github.com/users/apaszke/events{/privacy}", "received_events_url": "https://api.github.com/users/apaszke/received_events", "type": "User", "site_admin": false}, "body": "Same here", "created_at": "2017-05-08T18:30:25Z", "updated_at": "2018-11-23T15:33:23Z", "html_url": "https://github.com/pytorch/pytorch/pull/1507#discussion_r115319601", "pull_request_url": "https://api.github.com/repos/pytorch/pytorch/pulls/1507", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/115319601"}, "html": {"href": "https://github.com/pytorch/pytorch/pull/1507#discussion_r115319601"}, "pull_request": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/1507"}}, "body_html": "<p>Same here</p>", "body_text": "Same here"}