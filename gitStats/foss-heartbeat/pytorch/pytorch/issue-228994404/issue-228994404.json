{"url": "https://api.github.com/repos/pytorch/pytorch/issues/1570", "repository_url": "https://api.github.com/repos/pytorch/pytorch", "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/1570/labels{/name}", "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/1570/comments", "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/1570/events", "html_url": "https://github.com/pytorch/pytorch/issues/1570", "id": 228994404, "node_id": "MDU6SXNzdWUyMjg5OTQ0MDQ=", "number": 1570, "title": "Make resize_ and resize_as_ internal methods", "user": {"login": "nicolasdespres", "id": 614631, "node_id": "MDQ6VXNlcjYxNDYzMQ==", "avatar_url": "https://avatars1.githubusercontent.com/u/614631?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nicolasdespres", "html_url": "https://github.com/nicolasdespres", "followers_url": "https://api.github.com/users/nicolasdespres/followers", "following_url": "https://api.github.com/users/nicolasdespres/following{/other_user}", "gists_url": "https://api.github.com/users/nicolasdespres/gists{/gist_id}", "starred_url": "https://api.github.com/users/nicolasdespres/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nicolasdespres/subscriptions", "organizations_url": "https://api.github.com/users/nicolasdespres/orgs", "repos_url": "https://api.github.com/users/nicolasdespres/repos", "events_url": "https://api.github.com/users/nicolasdespres/events{/privacy}", "received_events_url": "https://api.github.com/users/nicolasdespres/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 424131849, "node_id": "MDU6TGFiZWw0MjQxMzE4NDk=", "url": "https://api.github.com/repos/pytorch/pytorch/labels/enhancement", "name": "enhancement", "color": "84b6eb", "default": true}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 9, "created_at": "2017-05-16T11:07:50Z", "updated_at": "2018-10-19T05:48:42Z", "closed_at": "2018-10-19T05:48:42Z", "author_association": "CONTRIBUTOR", "body_html": "<p>Calling <code>resize_</code> on a non-contiguous tensor potentially do not what you want as demonstrated below. I do not know if it is a bug or a feature but that IMHO that should at least be mentioned in the documentation.</p>\n<div class=\"highlight highlight-source-python\"><pre><span class=\"pl-k\">&gt;&gt;</span><span class=\"pl-k\">&gt;</span> <span class=\"pl-k\">import</span> torch <span class=\"pl-k\">as</span> th\n<span class=\"pl-k\">&gt;&gt;</span><span class=\"pl-k\">&gt;</span> th.<span class=\"pl-c1\">__version__</span>\n<span class=\"pl-s\"><span class=\"pl-pds\">'</span>0.1.12+368ecb4<span class=\"pl-pds\">'</span></span>\n<span class=\"pl-k\">&gt;&gt;</span><span class=\"pl-k\">&gt;</span> t <span class=\"pl-k\">=</span> th.LongTensor([[<span class=\"pl-c1\">1</span>,<span class=\"pl-c1\">2</span>],[<span class=\"pl-c1\">3</span>,<span class=\"pl-c1\">4</span>]])\n<span class=\"pl-k\">&gt;&gt;</span><span class=\"pl-k\">&gt;</span> t\n\n <span class=\"pl-c1\">1</span>  <span class=\"pl-c1\">2</span>\n <span class=\"pl-c1\">3</span>  <span class=\"pl-c1\">4</span>\n[torch.LongTensor of size <span class=\"pl-ii\">2x2</span>]\n\n<span class=\"pl-k\">&gt;&gt;</span><span class=\"pl-k\">&gt;</span> t.narrow(<span class=\"pl-c1\">1</span>, <span class=\"pl-c1\">1</span>, <span class=\"pl-c1\">1</span>)\n\n <span class=\"pl-c1\">2</span>\n <span class=\"pl-c1\">4</span>\n[torch.LongTensor of size <span class=\"pl-ii\">2x1</span>]</pre></div>\n<p>Resizing the narrowed tensor leads to an expected results:</p>\n<div class=\"highlight highlight-source-python\"><pre><span class=\"pl-k\">&gt;&gt;</span><span class=\"pl-k\">&gt;</span> t.narrow(<span class=\"pl-c1\">1</span>, <span class=\"pl-c1\">1</span>, <span class=\"pl-c1\">1</span>).resize_(<span class=\"pl-c1\">2</span>)\n\n <span class=\"pl-c1\">2</span>\n <span class=\"pl-c1\">3</span>\n[torch.LongTensor of size <span class=\"pl-c1\">2</span>]</pre></div>\n<p>Whereas doing so on a contiguous copy of the tensor works as expected:</p>\n<div class=\"highlight highlight-source-python\"><pre><span class=\"pl-k\">&gt;&gt;</span><span class=\"pl-k\">&gt;</span> t.narrow(<span class=\"pl-c1\">1</span>, <span class=\"pl-c1\">1</span>, <span class=\"pl-c1\">1</span>).contiguous().resize_(<span class=\"pl-c1\">2</span>)\n\n <span class=\"pl-c1\">2</span>\n <span class=\"pl-c1\">4</span>\n[torch.LongTensor of size <span class=\"pl-c1\">2</span>]</pre></div>", "body_text": "Calling resize_ on a non-contiguous tensor potentially do not what you want as demonstrated below. I do not know if it is a bug or a feature but that IMHO that should at least be mentioned in the documentation.\n>>> import torch as th\n>>> th.__version__\n'0.1.12+368ecb4'\n>>> t = th.LongTensor([[1,2],[3,4]])\n>>> t\n\n 1  2\n 3  4\n[torch.LongTensor of size 2x2]\n\n>>> t.narrow(1, 1, 1)\n\n 2\n 4\n[torch.LongTensor of size 2x1]\nResizing the narrowed tensor leads to an expected results:\n>>> t.narrow(1, 1, 1).resize_(2)\n\n 2\n 3\n[torch.LongTensor of size 2]\nWhereas doing so on a contiguous copy of the tensor works as expected:\n>>> t.narrow(1, 1, 1).contiguous().resize_(2)\n\n 2\n 4\n[torch.LongTensor of size 2]", "body": "Calling `resize_` on a non-contiguous tensor potentially do not what you want as demonstrated below. I do not know if it is a bug or a feature but that IMHO that should at least be mentioned in the documentation.\r\n\r\n```python\r\n>>> import torch as th\r\n>>> th.__version__\r\n'0.1.12+368ecb4'\r\n>>> t = th.LongTensor([[1,2],[3,4]])\r\n>>> t\r\n\r\n 1  2\r\n 3  4\r\n[torch.LongTensor of size 2x2]\r\n\r\n>>> t.narrow(1, 1, 1)\r\n\r\n 2\r\n 4\r\n[torch.LongTensor of size 2x1]\r\n```\r\n\r\nResizing the narrowed tensor leads to an expected results:\r\n\r\n```python\r\n>>> t.narrow(1, 1, 1).resize_(2)\r\n\r\n 2\r\n 3\r\n[torch.LongTensor of size 2]\r\n```\r\n\r\nWhereas doing so on a contiguous copy of the tensor works as expected:\r\n\r\n```python\r\n>>> t.narrow(1, 1, 1).contiguous().resize_(2)\r\n\r\n 2\r\n 4\r\n[torch.LongTensor of size 2]\r\n```"}