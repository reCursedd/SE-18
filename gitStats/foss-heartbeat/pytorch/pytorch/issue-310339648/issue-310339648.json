{"url": "https://api.github.com/repos/pytorch/pytorch/issues/6173", "repository_url": "https://api.github.com/repos/pytorch/pytorch", "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/6173/labels{/name}", "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/6173/comments", "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/6173/events", "html_url": "https://github.com/pytorch/pytorch/pull/6173", "id": 310339648, "node_id": "MDExOlB1bGxSZXF1ZXN0MTc4NzM4ODg1", "number": 6173, "title": "Update torch.nn.init and torch.nn.utils.clip_grad", "user": {"login": "tonybeltramelli", "id": 1783594, "node_id": "MDQ6VXNlcjE3ODM1OTQ=", "avatar_url": "https://avatars2.githubusercontent.com/u/1783594?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tonybeltramelli", "html_url": "https://github.com/tonybeltramelli", "followers_url": "https://api.github.com/users/tonybeltramelli/followers", "following_url": "https://api.github.com/users/tonybeltramelli/following{/other_user}", "gists_url": "https://api.github.com/users/tonybeltramelli/gists{/gist_id}", "starred_url": "https://api.github.com/users/tonybeltramelli/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tonybeltramelli/subscriptions", "organizations_url": "https://api.github.com/users/tonybeltramelli/orgs", "repos_url": "https://api.github.com/users/tonybeltramelli/repos", "events_url": "https://api.github.com/users/tonybeltramelli/events{/privacy}", "received_events_url": "https://api.github.com/users/tonybeltramelli/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 22, "created_at": "2018-04-01T17:25:19Z", "updated_at": "2018-11-23T15:42:30Z", "closed_at": "2018-04-17T15:32:33Z", "author_association": "CONTRIBUTOR", "pull_request": {"url": "https://api.github.com/repos/pytorch/pytorch/pulls/6173", "html_url": "https://github.com/pytorch/pytorch/pull/6173", "diff_url": "https://github.com/pytorch/pytorch/pull/6173.diff", "patch_url": "https://github.com/pytorch/pytorch/pull/6173.patch"}, "body_html": "<p>Introducing two updates.</p>\n<p><strong>1.</strong> Add param to He initialization scheme in torch.nn.init<br>\n<em>Problem solved:</em><br>\nThe function <em>calculate_gain</em> can take an argument to specify the type of non-linearity used. However, it wasn't possible to pass this argument directly to the He / Kaiming weight initialization function.</p>\n<p><strong>2.</strong> Add util to clip gradient value in torch.nn.utils.clip_grad<br>\n<em>Problem solved:</em><br>\nDL libraries typically provide users with easy access to functions for clipping the gradients both using the norm and a fixed value. However, the utils <em>clip_grad.py</em> only had a function to clip the gradient norm.</p>", "body_text": "Introducing two updates.\n1. Add param to He initialization scheme in torch.nn.init\nProblem solved:\nThe function calculate_gain can take an argument to specify the type of non-linearity used. However, it wasn't possible to pass this argument directly to the He / Kaiming weight initialization function.\n2. Add util to clip gradient value in torch.nn.utils.clip_grad\nProblem solved:\nDL libraries typically provide users with easy access to functions for clipping the gradients both using the norm and a fixed value. However, the utils clip_grad.py only had a function to clip the gradient norm.", "body": "Introducing two updates.\r\n\r\n**1.** Add param to He initialization scheme in torch.nn.init \r\n_Problem solved:_\r\nThe function _calculate_gain_ can take an argument to specify the type of non-linearity used. However, it wasn't possible to pass this argument directly to the He / Kaiming weight initialization function.\r\n\r\n**2.** Add util to clip gradient value in torch.nn.utils.clip_grad\r\n_Problem solved:_\r\nDL libraries typically provide users with easy access to functions for clipping the gradients both using the norm and a fixed value. However, the utils _clip_grad.py_ only had a function to clip the gradient norm."}