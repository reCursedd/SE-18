{"url": "https://api.github.com/repos/pytorch/pytorch/issues/comments/368923983", "html_url": "https://github.com/pytorch/pytorch/issues/5430#issuecomment-368923983", "issue_url": "https://api.github.com/repos/pytorch/pytorch/issues/5430", "id": 368923983, "node_id": "MDEyOklzc3VlQ29tbWVudDM2ODkyMzk4Mw==", "user": {"login": "apaszke", "id": 4583066, "node_id": "MDQ6VXNlcjQ1ODMwNjY=", "avatar_url": "https://avatars3.githubusercontent.com/u/4583066?v=4", "gravatar_id": "", "url": "https://api.github.com/users/apaszke", "html_url": "https://github.com/apaszke", "followers_url": "https://api.github.com/users/apaszke/followers", "following_url": "https://api.github.com/users/apaszke/following{/other_user}", "gists_url": "https://api.github.com/users/apaszke/gists{/gist_id}", "starred_url": "https://api.github.com/users/apaszke/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/apaszke/subscriptions", "organizations_url": "https://api.github.com/users/apaszke/orgs", "repos_url": "https://api.github.com/users/apaszke/repos", "events_url": "https://api.github.com/users/apaszke/events{/privacy}", "received_events_url": "https://api.github.com/users/apaszke/received_events", "type": "User", "site_admin": false}, "created_at": "2018-02-27T15:49:39Z", "updated_at": "2018-02-27T15:49:39Z", "author_association": "MEMBER", "body_html": "<p><a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=5674597\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/SsnL\">@SsnL</a> my guess would be that we're not cleaning up after dead data loaders properly, and because <code>id(self)</code> is just the memory pointer to the <code>PyObject</code> of <code>self</code>, then another loader can accidentally get allocated in the same place. No idea what can cause it otherwise (except for <code>__init__</code> being called twice, but that's unlikely)</p>", "body_text": "@SsnL my guess would be that we're not cleaning up after dead data loaders properly, and because id(self) is just the memory pointer to the PyObject of self, then another loader can accidentally get allocated in the same place. No idea what can cause it otherwise (except for __init__ being called twice, but that's unlikely)", "body": "@SsnL my guess would be that we're not cleaning up after dead data loaders properly, and because `id(self)` is just the memory pointer to the `PyObject` of `self`, then another loader can accidentally get allocated in the same place. No idea what can cause it otherwise (except for `__init__` being called twice, but that's unlikely)"}