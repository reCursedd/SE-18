{"url": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/191343542", "pull_request_review_id": 123895011, "id": 191343542, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5MTM0MzU0Mg==", "diff_hunk": "@@ -0,0 +1,51 @@\n+class EarlyStoppingCriterion(object):\n+    \"\"\"\n+    Arguments:\n+        patience (int): The maximum number of epochs with no improvement before early stopping should take place\n+        mode (str, can only be 'max' or 'min'): To take the maximum or minimum of the score for optimization\n+        min_delta (float, optional): Minimum change in the score to qualify as an improvement (default: 0.0)\n+    \"\"\"\n+\n+    def __init__(self, patience, mode, min_delta=0.0):\n+        assert patience >= 0\n+        assert mode in {'min', 'max'}\n+        assert min_delta >= 0.0\n+        self.patience = patience\n+        self.mode = mode\n+        self.min_delta = min_delta\n+\n+        self._count = 0\n+        self._best_score = None\n+        self.is_improved = None\n+\n+    def step(self, cur_score):\n+        \"\"\"\n+        Checks if training should be continued given the current score.\n+\n+        Arguments:\n+            cur_score (float): the current score\n+\n+        Output:\n+            bool: if training should be continued", "path": "torch/optim/early_stopping.py", "position": 29, "original_position": 29, "commit_id": "809d5120b9bd2ddaeeb0ed673dcd70b4c8f66093", "original_commit_id": "f071c0250e30fee955ce1eb12249e14e4fd4b429", "user": {"login": "Rikorose", "id": 16517898, "node_id": "MDQ6VXNlcjE2NTE3ODk4", "avatar_url": "https://avatars0.githubusercontent.com/u/16517898?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Rikorose", "html_url": "https://github.com/Rikorose", "followers_url": "https://api.github.com/users/Rikorose/followers", "following_url": "https://api.github.com/users/Rikorose/following{/other_user}", "gists_url": "https://api.github.com/users/Rikorose/gists{/gist_id}", "starred_url": "https://api.github.com/users/Rikorose/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Rikorose/subscriptions", "organizations_url": "https://api.github.com/users/Rikorose/orgs", "repos_url": "https://api.github.com/users/Rikorose/repos", "events_url": "https://api.github.com/users/Rikorose/events{/privacy}", "received_events_url": "https://api.github.com/users/Rikorose/received_events", "type": "User", "site_admin": false}, "body": "I think this is kind of counter intuitive:\r\n```py\r\nearly_stopping = EarlyStoppingCriterion()\r\n# ...\r\nif early_stopping:\r\n    # continue?\r\n```", "created_at": "2018-05-29T08:37:13Z", "updated_at": "2018-11-23T15:44:41Z", "html_url": "https://github.com/pytorch/pytorch/pull/7661#discussion_r191343542", "pull_request_url": "https://api.github.com/repos/pytorch/pytorch/pulls/7661", "author_association": "NONE", "_links": {"self": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/191343542"}, "html": {"href": "https://github.com/pytorch/pytorch/pull/7661#discussion_r191343542"}, "pull_request": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/7661"}}, "body_html": "<p>I think this is kind of counter intuitive:</p>\n<div class=\"highlight highlight-source-python\"><pre>early_stopping <span class=\"pl-k\">=</span> EarlyStoppingCriterion()\n<span class=\"pl-c\"><span class=\"pl-c\">#</span> ...</span>\n<span class=\"pl-k\">if</span> early_stopping:\n    <span class=\"pl-c\"><span class=\"pl-c\">#</span> continue?</span></pre></div>", "body_text": "I think this is kind of counter intuitive:\nearly_stopping = EarlyStoppingCriterion()\n# ...\nif early_stopping:\n    # continue?"}