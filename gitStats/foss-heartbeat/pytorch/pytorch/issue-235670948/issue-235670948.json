{"url": "https://api.github.com/repos/pytorch/pytorch/issues/1794", "repository_url": "https://api.github.com/repos/pytorch/pytorch", "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/1794/labels{/name}", "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/1794/comments", "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/1794/events", "html_url": "https://github.com/pytorch/pytorch/issues/1794", "id": 235670948, "node_id": "MDU6SXNzdWUyMzU2NzA5NDg=", "number": 1794, "title": "Feature request: reverse_padded_sequence", "user": {"login": "rdipietro", "id": 5150559, "node_id": "MDQ6VXNlcjUxNTA1NTk=", "avatar_url": "https://avatars1.githubusercontent.com/u/5150559?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rdipietro", "html_url": "https://github.com/rdipietro", "followers_url": "https://api.github.com/users/rdipietro/followers", "following_url": "https://api.github.com/users/rdipietro/following{/other_user}", "gists_url": "https://api.github.com/users/rdipietro/gists{/gist_id}", "starred_url": "https://api.github.com/users/rdipietro/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rdipietro/subscriptions", "organizations_url": "https://api.github.com/users/rdipietro/orgs", "repos_url": "https://api.github.com/users/rdipietro/repos", "events_url": "https://api.github.com/users/rdipietro/events{/privacy}", "received_events_url": "https://api.github.com/users/rdipietro/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 8, "created_at": "2017-06-13T19:44:25Z", "updated_at": "2017-12-30T16:37:28Z", "closed_at": null, "author_association": "CONTRIBUTOR", "body_html": "<p>Hi,</p>\n<p>There's existing discussion around a more extendable RNN API, which as of yet hasn't moved forward. Given that, and that <code>PackedSequence</code>s exist, would a <code>reverse_padded_sequence</code> function be useful, or do you just see it as being unnecessary clutter?</p>\n<p>In particular it'd take in a Variable of padded sequences along with sequence lengths (and a <code>batch_first</code> option) and produce a Variable of padded sequences that are reversed according to their lengths, mimicking <code>reverse_sequence</code> in TensorFlow.</p>\n<p>My thought is that this option would be a useful alternative to <code>PackedSequence</code>s in the case of bidirectional RNNs. (<code>PackedSequence</code>s seem to be primarily motivated by cuDNN, whereas in a research setting they might introduce more bookkeeping than they're worth.)</p>", "body_text": "Hi,\nThere's existing discussion around a more extendable RNN API, which as of yet hasn't moved forward. Given that, and that PackedSequences exist, would a reverse_padded_sequence function be useful, or do you just see it as being unnecessary clutter?\nIn particular it'd take in a Variable of padded sequences along with sequence lengths (and a batch_first option) and produce a Variable of padded sequences that are reversed according to their lengths, mimicking reverse_sequence in TensorFlow.\nMy thought is that this option would be a useful alternative to PackedSequences in the case of bidirectional RNNs. (PackedSequences seem to be primarily motivated by cuDNN, whereas in a research setting they might introduce more bookkeeping than they're worth.)", "body": "Hi,\r\n\r\nThere's existing discussion around a more extendable RNN API, which as of yet hasn't moved forward. Given that, and that `PackedSequence`s exist, would a `reverse_padded_sequence` function be useful, or do you just see it as being unnecessary clutter?\r\n\r\nIn particular it'd take in a Variable of padded sequences along with sequence lengths (and a `batch_first` option) and produce a Variable of padded sequences that are reversed according to their lengths, mimicking `reverse_sequence` in TensorFlow.\r\n\r\nMy thought is that this option would be a useful alternative to `PackedSequence`s in the case of bidirectional RNNs. (`PackedSequence`s seem to be primarily motivated by cuDNN, whereas in a research setting they might introduce more bookkeeping than they're worth.)"}