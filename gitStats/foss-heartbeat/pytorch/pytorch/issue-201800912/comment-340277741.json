{"url": "https://api.github.com/repos/pytorch/pytorch/issues/comments/340277741", "html_url": "https://github.com/pytorch/pytorch/issues/494#issuecomment-340277741", "issue_url": "https://api.github.com/repos/pytorch/pytorch/issues/494", "id": 340277741, "node_id": "MDEyOklzc3VlQ29tbWVudDM0MDI3Nzc0MQ==", "user": {"login": "QuantScientist", "id": 18743986, "node_id": "MDQ6VXNlcjE4NzQzOTg2", "avatar_url": "https://avatars2.githubusercontent.com/u/18743986?v=4", "gravatar_id": "", "url": "https://api.github.com/users/QuantScientist", "html_url": "https://github.com/QuantScientist", "followers_url": "https://api.github.com/users/QuantScientist/followers", "following_url": "https://api.github.com/users/QuantScientist/following{/other_user}", "gists_url": "https://api.github.com/users/QuantScientist/gists{/gist_id}", "starred_url": "https://api.github.com/users/QuantScientist/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/QuantScientist/subscriptions", "organizations_url": "https://api.github.com/users/QuantScientist/orgs", "repos_url": "https://api.github.com/users/QuantScientist/repos", "events_url": "https://api.github.com/users/QuantScientist/events{/privacy}", "received_events_url": "https://api.github.com/users/QuantScientist/received_events", "type": "User", "site_admin": false}, "created_at": "2017-10-29T17:10:10Z", "updated_at": "2017-10-29T17:10:10Z", "author_association": "NONE", "body_html": "<p>Hello,<br>\nI have an issue with loading data during epochs. this does not happen in Linux.</p>\n<pre><code>for epoch in range(1, 15):\n        print(\"Epoch %d\" % epoch)\n        train(epoch, train_loader, 'Train') \n        train(epoch, val_loader, 'Val') \n</code></pre>\n<h2>Epoch 1</h2>\n<p>AttributeError                            Traceback (most recent call last)<br>\n in ()<br>\n53     for epoch in range(1, 15):<br>\n54         print(\"Epoch %d\" % epoch)<br>\n---&gt; 55         train(epoch, train_loader, 'Train')<br>\n56         train(epoch, val_loader, 'Val')<br>\n57</p>\n<p> in train(epoch, ldr, d_type)<br>\n16     clf.train() # set model in training mode (need this because of dropout)<br>\n17     # dataset API gives us pythonic batching<br>\n---&gt; 18     for batch_idx, (data, target) in enumerate(ldr):<br>\n19         if use_cuda:<br>\n20             data, target = Variable(data.cuda(async=True)), Variable(target.cuda(async=True)) # On GPU</p>\n<p>c:\\Anaconda3\\lib\\site-packages\\torch\\utils\\data\\dataloader.py in <strong>iter</strong>(self)<br>\n299<br>\n300     def <strong>iter</strong>(self):<br>\n--&gt; 301         return DataLoaderIter(self)<br>\n302<br>\n303     def <strong>len</strong>(self):</p>\n<p>c:\\Anaconda3\\lib\\site-packages\\torch\\utils\\data\\dataloader.py in <strong>init</strong>(self, loader)<br>\n156             for w in self.workers:<br>\n157                 w.daemon = True  # ensure that the worker exits on process exit<br>\n--&gt; 158                 w.start()<br>\n159<br>\n160             if self.pin_memory:</p>\n<p>c:\\Anaconda3\\lib\\multiprocessing\\process.py in start(self)<br>\n103                'daemonic processes are not allowed to have children'<br>\n104         _cleanup()<br>\n--&gt; 105         self._popen = self._Popen(self)<br>\n106         self._sentinel = self._popen.sentinel<br>\n107         _children.add(self)</p>\n<p>c:\\Anaconda3\\lib\\multiprocessing\\context.py in _Popen(process_obj)<br>\n221     <a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=3434126\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/staticmethod\">@staticmethod</a><br>\n222     def _Popen(process_obj):<br>\n--&gt; 223         return _default_context.get_context().Process._Popen(process_obj)<br>\n224<br>\n225 class DefaultContext(BaseContext):</p>\n<p>c:\\Anaconda3\\lib\\multiprocessing\\context.py in _Popen(process_obj)<br>\n320         def _Popen(process_obj):<br>\n321             from .popen_spawn_win32 import Popen<br>\n--&gt; 322             return Popen(process_obj)<br>\n323<br>\n324     class SpawnContext(BaseContext):</p>\n<p>c:\\Anaconda3\\lib\\multiprocessing\\popen_spawn_win32.py in <strong>init</strong>(self, process_obj)<br>\n31<br>\n32     def <strong>init</strong>(self, process_obj):<br>\n---&gt; 33         prep_data = spawn.get_preparation_data(process_obj._name)<br>\n34<br>\n35         # read end of pipe will be \"stolen\" by the child process</p>\n<p>c:\\Anaconda3\\lib\\multiprocessing\\spawn.py in get_preparation_data(name)<br>\n170     # or through direct execution (or to leave it alone entirely)<br>\n171     main_module = sys.modules['<strong>main</strong>']<br>\n--&gt; 172     main_mod_name = getattr(main_module.<strong>spec</strong>, \"name\", None)<br>\n173     if main_mod_name is not None:<br>\n174         d['init_main_from_name'] = main_mod_name</p>\n<p><strong>AttributeError: module '<strong>main</strong>' has no attribute '<strong>spec</strong>'</strong></p>", "body_text": "Hello,\nI have an issue with loading data during epochs. this does not happen in Linux.\nfor epoch in range(1, 15):\n        print(\"Epoch %d\" % epoch)\n        train(epoch, train_loader, 'Train') \n        train(epoch, val_loader, 'Val') \n\nEpoch 1\nAttributeError                            Traceback (most recent call last)\n in ()\n53     for epoch in range(1, 15):\n54         print(\"Epoch %d\" % epoch)\n---> 55         train(epoch, train_loader, 'Train')\n56         train(epoch, val_loader, 'Val')\n57\n in train(epoch, ldr, d_type)\n16     clf.train() # set model in training mode (need this because of dropout)\n17     # dataset API gives us pythonic batching\n---> 18     for batch_idx, (data, target) in enumerate(ldr):\n19         if use_cuda:\n20             data, target = Variable(data.cuda(async=True)), Variable(target.cuda(async=True)) # On GPU\nc:\\Anaconda3\\lib\\site-packages\\torch\\utils\\data\\dataloader.py in iter(self)\n299\n300     def iter(self):\n--> 301         return DataLoaderIter(self)\n302\n303     def len(self):\nc:\\Anaconda3\\lib\\site-packages\\torch\\utils\\data\\dataloader.py in init(self, loader)\n156             for w in self.workers:\n157                 w.daemon = True  # ensure that the worker exits on process exit\n--> 158                 w.start()\n159\n160             if self.pin_memory:\nc:\\Anaconda3\\lib\\multiprocessing\\process.py in start(self)\n103                'daemonic processes are not allowed to have children'\n104         _cleanup()\n--> 105         self._popen = self._Popen(self)\n106         self._sentinel = self._popen.sentinel\n107         _children.add(self)\nc:\\Anaconda3\\lib\\multiprocessing\\context.py in _Popen(process_obj)\n221     @staticmethod\n222     def _Popen(process_obj):\n--> 223         return _default_context.get_context().Process._Popen(process_obj)\n224\n225 class DefaultContext(BaseContext):\nc:\\Anaconda3\\lib\\multiprocessing\\context.py in _Popen(process_obj)\n320         def _Popen(process_obj):\n321             from .popen_spawn_win32 import Popen\n--> 322             return Popen(process_obj)\n323\n324     class SpawnContext(BaseContext):\nc:\\Anaconda3\\lib\\multiprocessing\\popen_spawn_win32.py in init(self, process_obj)\n31\n32     def init(self, process_obj):\n---> 33         prep_data = spawn.get_preparation_data(process_obj._name)\n34\n35         # read end of pipe will be \"stolen\" by the child process\nc:\\Anaconda3\\lib\\multiprocessing\\spawn.py in get_preparation_data(name)\n170     # or through direct execution (or to leave it alone entirely)\n171     main_module = sys.modules['main']\n--> 172     main_mod_name = getattr(main_module.spec, \"name\", None)\n173     if main_mod_name is not None:\n174         d['init_main_from_name'] = main_mod_name\nAttributeError: module 'main' has no attribute 'spec'", "body": "Hello, \r\nI have an issue with loading data during epochs. this does not happen in Linux.\r\n```\r\nfor epoch in range(1, 15):\r\n        print(\"Epoch %d\" % epoch)\r\n        train(epoch, train_loader, 'Train') \r\n        train(epoch, val_loader, 'Val') \r\n```\r\n\r\nEpoch 1\r\n---------------------------------------------------------------------------\r\nAttributeError                            Traceback (most recent call last)\r\n<ipython-input-31-26b5c6a565d6> in <module>()\r\n     53     for epoch in range(1, 15):\r\n     54         print(\"Epoch %d\" % epoch)\r\n---> 55         train(epoch, train_loader, 'Train')\r\n     56         train(epoch, val_loader, 'Val')\r\n     57 \r\n\r\n<ipython-input-31-26b5c6a565d6> in train(epoch, ldr, d_type)\r\n     16     clf.train() # set model in training mode (need this because of dropout)\r\n     17     # dataset API gives us pythonic batching\r\n---> 18     for batch_idx, (data, target) in enumerate(ldr):\r\n     19         if use_cuda:\r\n     20             data, target = Variable(data.cuda(async=True)), Variable(target.cuda(async=True)) # On GPU\r\n\r\nc:\\Anaconda3\\lib\\site-packages\\torch\\utils\\data\\dataloader.py in __iter__(self)\r\n    299 \r\n    300     def __iter__(self):\r\n--> 301         return DataLoaderIter(self)\r\n    302 \r\n    303     def __len__(self):\r\n\r\nc:\\Anaconda3\\lib\\site-packages\\torch\\utils\\data\\dataloader.py in __init__(self, loader)\r\n    156             for w in self.workers:\r\n    157                 w.daemon = True  # ensure that the worker exits on process exit\r\n--> 158                 w.start()\r\n    159 \r\n    160             if self.pin_memory:\r\n\r\nc:\\Anaconda3\\lib\\multiprocessing\\process.py in start(self)\r\n    103                'daemonic processes are not allowed to have children'\r\n    104         _cleanup()\r\n--> 105         self._popen = self._Popen(self)\r\n    106         self._sentinel = self._popen.sentinel\r\n    107         _children.add(self)\r\n\r\nc:\\Anaconda3\\lib\\multiprocessing\\context.py in _Popen(process_obj)\r\n    221     @staticmethod\r\n    222     def _Popen(process_obj):\r\n--> 223         return _default_context.get_context().Process._Popen(process_obj)\r\n    224 \r\n    225 class DefaultContext(BaseContext):\r\n\r\nc:\\Anaconda3\\lib\\multiprocessing\\context.py in _Popen(process_obj)\r\n    320         def _Popen(process_obj):\r\n    321             from .popen_spawn_win32 import Popen\r\n--> 322             return Popen(process_obj)\r\n    323 \r\n    324     class SpawnContext(BaseContext):\r\n\r\nc:\\Anaconda3\\lib\\multiprocessing\\popen_spawn_win32.py in __init__(self, process_obj)\r\n     31 \r\n     32     def __init__(self, process_obj):\r\n---> 33         prep_data = spawn.get_preparation_data(process_obj._name)\r\n     34 \r\n     35         # read end of pipe will be \"stolen\" by the child process\r\n\r\nc:\\Anaconda3\\lib\\multiprocessing\\spawn.py in get_preparation_data(name)\r\n    170     # or through direct execution (or to leave it alone entirely)\r\n    171     main_module = sys.modules['__main__']\r\n--> 172     main_mod_name = getattr(main_module.__spec__, \"name\", None)\r\n    173     if main_mod_name is not None:\r\n    174         d['init_main_from_name'] = main_mod_name\r\n\r\n**AttributeError: module '__main__' has no attribute '__spec__'**\r\n"}