{"url": "https://api.github.com/repos/pytorch/pytorch/issues/comments/338450303", "html_url": "https://github.com/pytorch/pytorch/issues/494#issuecomment-338450303", "issue_url": "https://api.github.com/repos/pytorch/pytorch/issues/494", "id": 338450303, "node_id": "MDEyOklzc3VlQ29tbWVudDMzODQ1MDMwMw==", "user": {"login": "peterjc123", "id": 9998726, "node_id": "MDQ6VXNlcjk5OTg3MjY=", "avatar_url": "https://avatars3.githubusercontent.com/u/9998726?v=4", "gravatar_id": "", "url": "https://api.github.com/users/peterjc123", "html_url": "https://github.com/peterjc123", "followers_url": "https://api.github.com/users/peterjc123/followers", "following_url": "https://api.github.com/users/peterjc123/following{/other_user}", "gists_url": "https://api.github.com/users/peterjc123/gists{/gist_id}", "starred_url": "https://api.github.com/users/peterjc123/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/peterjc123/subscriptions", "organizations_url": "https://api.github.com/users/peterjc123/orgs", "repos_url": "https://api.github.com/users/peterjc123/repos", "events_url": "https://api.github.com/users/peterjc123/events{/privacy}", "received_events_url": "https://api.github.com/users/peterjc123/received_events", "type": "User", "site_admin": false}, "created_at": "2017-10-22T04:21:22Z", "updated_at": "2017-10-22T04:25:37Z", "author_association": "CONTRIBUTOR", "body_html": "<p><a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=29404205\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/TeeratP\">@TeeratP</a>  In Windows, multiprocessing works differently. You should wrap your main code with an if statement to protect it like this:</p>\n<div class=\"highlight highlight-source-python\"><pre><span class=\"pl-k\">def</span> <span class=\"pl-en\">job</span>():\n    <span class=\"pl-c1\">print</span>(<span class=\"pl-c1\">1</span>)\n\n<span class=\"pl-k\">if</span> <span class=\"pl-c1\">__name__</span> <span class=\"pl-k\">==</span> <span class=\"pl-s\"><span class=\"pl-pds\">'</span>__main__<span class=\"pl-pds\">'</span></span>:\n    p <span class=\"pl-k\">=</span> mp.Process(<span class=\"pl-v\">target</span><span class=\"pl-k\">=</span>job)\n    p.start()</pre></div>\n<p>With concern to the problem of \"BrokenPipeError: [Errno 32] Broken pipe\", please set num_worker to zero first to inspect the real problem.</p>", "body_text": "@TeeratP  In Windows, multiprocessing works differently. You should wrap your main code with an if statement to protect it like this:\ndef job():\n    print(1)\n\nif __name__ == '__main__':\n    p = mp.Process(target=job)\n    p.start()\nWith concern to the problem of \"BrokenPipeError: [Errno 32] Broken pipe\", please set num_worker to zero first to inspect the real problem.", "body": "@TeeratP  In Windows, multiprocessing works differently. You should wrap your main code with an if statement to protect it like this:\r\n```Python\r\ndef job():\r\n    print(1)\r\n\r\nif __name__ == '__main__':\r\n    p = mp.Process(target=job)\r\n    p.start()\r\n```\r\nWith concern to the problem of \"BrokenPipeError: [Errno 32] Broken pipe\", please set num_worker to zero first to inspect the real problem."}