{"url": "https://api.github.com/repos/pytorch/pytorch/issues/comments/336166639", "html_url": "https://github.com/pytorch/pytorch/issues/494#issuecomment-336166639", "issue_url": "https://api.github.com/repos/pytorch/pytorch/issues/494", "id": 336166639, "node_id": "MDEyOklzc3VlQ29tbWVudDMzNjE2NjYzOQ==", "user": {"login": "QuantScientist", "id": 18743986, "node_id": "MDQ6VXNlcjE4NzQzOTg2", "avatar_url": "https://avatars2.githubusercontent.com/u/18743986?v=4", "gravatar_id": "", "url": "https://api.github.com/users/QuantScientist", "html_url": "https://github.com/QuantScientist", "followers_url": "https://api.github.com/users/QuantScientist/followers", "following_url": "https://api.github.com/users/QuantScientist/following{/other_user}", "gists_url": "https://api.github.com/users/QuantScientist/gists{/gist_id}", "starred_url": "https://api.github.com/users/QuantScientist/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/QuantScientist/subscriptions", "organizations_url": "https://api.github.com/users/QuantScientist/orgs", "repos_url": "https://api.github.com/users/QuantScientist/repos", "events_url": "https://api.github.com/users/QuantScientist/events{/privacy}", "received_events_url": "https://api.github.com/users/QuantScientist/received_events", "type": "User", "site_admin": false}, "created_at": "2017-10-12T15:06:40Z", "updated_at": "2017-10-12T15:06:40Z", "author_association": "NONE", "body_html": "<p><a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=9998726\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/peterjc123\">@peterjc123</a></p>\n<pre><code>INFO:__main__:CNNNumerAI (\n  (features): Sequential (\n    (0): Conv1d(57, 342, kernel_size=(5,), stride=(1,), padding=(3,))\n    (1): LeakyReLU (0.01)\n    (2): MaxPool1d (size=2, stride=2, padding=0, dilation=1, ceil_mode=False)\n  )\n  (classifier): Sequential (\n    (0): Linear (342 -&gt; 1)\n    (1): Dropout (p = 0.25)\n    (2): BatchNorm1d(1, eps=1e-05, momentum=0.1, affine=True)\n  )\n  (sig): Sigmoid ()\n)\nINFO:__main__:&lt;torch.optim.adam.Adam object at 0x0000016ACFA7D908&gt;\nINFO:__main__:BCELoss (\n)\n</code></pre>", "body_text": "@peterjc123\nINFO:__main__:CNNNumerAI (\n  (features): Sequential (\n    (0): Conv1d(57, 342, kernel_size=(5,), stride=(1,), padding=(3,))\n    (1): LeakyReLU (0.01)\n    (2): MaxPool1d (size=2, stride=2, padding=0, dilation=1, ceil_mode=False)\n  )\n  (classifier): Sequential (\n    (0): Linear (342 -> 1)\n    (1): Dropout (p = 0.25)\n    (2): BatchNorm1d(1, eps=1e-05, momentum=0.1, affine=True)\n  )\n  (sig): Sigmoid ()\n)\nINFO:__main__:<torch.optim.adam.Adam object at 0x0000016ACFA7D908>\nINFO:__main__:BCELoss (\n)", "body": "@peterjc123 \r\n```\r\nINFO:__main__:CNNNumerAI (\r\n  (features): Sequential (\r\n    (0): Conv1d(57, 342, kernel_size=(5,), stride=(1,), padding=(3,))\r\n    (1): LeakyReLU (0.01)\r\n    (2): MaxPool1d (size=2, stride=2, padding=0, dilation=1, ceil_mode=False)\r\n  )\r\n  (classifier): Sequential (\r\n    (0): Linear (342 -> 1)\r\n    (1): Dropout (p = 0.25)\r\n    (2): BatchNorm1d(1, eps=1e-05, momentum=0.1, affine=True)\r\n  )\r\n  (sig): Sigmoid ()\r\n)\r\nINFO:__main__:<torch.optim.adam.Adam object at 0x0000016ACFA7D908>\r\nINFO:__main__:BCELoss (\r\n)\r\n```"}