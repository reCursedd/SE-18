{"url": "https://api.github.com/repos/pytorch/pytorch/issues/comments/344954015", "html_url": "https://github.com/pytorch/pytorch/issues/494#issuecomment-344954015", "issue_url": "https://api.github.com/repos/pytorch/pytorch/issues/494", "id": 344954015, "node_id": "MDEyOklzc3VlQ29tbWVudDM0NDk1NDAxNQ==", "user": {"login": "trias702", "id": 25867060, "node_id": "MDQ6VXNlcjI1ODY3MDYw", "avatar_url": "https://avatars3.githubusercontent.com/u/25867060?v=4", "gravatar_id": "", "url": "https://api.github.com/users/trias702", "html_url": "https://github.com/trias702", "followers_url": "https://api.github.com/users/trias702/followers", "following_url": "https://api.github.com/users/trias702/following{/other_user}", "gists_url": "https://api.github.com/users/trias702/gists{/gist_id}", "starred_url": "https://api.github.com/users/trias702/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/trias702/subscriptions", "organizations_url": "https://api.github.com/users/trias702/orgs", "repos_url": "https://api.github.com/users/trias702/repos", "events_url": "https://api.github.com/users/trias702/events{/privacy}", "received_events_url": "https://api.github.com/users/trias702/received_events", "type": "User", "site_admin": false}, "created_at": "2017-11-16T15:17:11Z", "updated_at": "2017-11-16T15:17:11Z", "author_association": "NONE", "body_html": "<p><a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=9998726\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/peterjc123\">@peterjc123</a> I have done some more testing, and I think gen.py is working correctly as far as I can tell.</p>\n<p>The true failure seems to be the ADD_CUSTOM_COMMAND call in pytorch/aten/src/aten/CMakeLists.txt:</p>\n<pre><code>ADD_CUSTOM_COMMAND(OUTPUT ${generated_cpp}\nCOMMAND ${GEN_COMMAND}\nDEPENDS ${all_python} ${all_templates} ${cwrap_files})\n</code></pre>\n<p>Even with the WORKING_DIRECTORY option added, it just does not seem to be doing the correct thing, which, as I understand it, is reading in the generated_cpp.txt from the earlier gen.py call, and writing those files to disk. Sadly I know nothing about CMake so cannot be much help here.</p>\n<p>For what it's worth, I'm running CMake 3.9.0 rc-5.</p>\n<p>P.S. I would argue that there is a bug in the write() function of gen.py. You need to add:</p>\n<p><code>os.makedirs(os.path.dirname(filename), exist_ok=True)</code></p>\n<p>Just below the filename declaration inside write(). From everything I know about Python 3, you cannot directly do an open() on an absolute path where one or more of the directories on that path do not exist yet. Most other programming languages will automatically create the required directories if they don't exist already, but not Python 3 (as far as I'm aware). Since you're writing to filename = \"ATen/\" + filename, you need this change because otherwise it will error since that extra ATen directory doesn't exist yet at (clean) build time.</p>", "body_text": "@peterjc123 I have done some more testing, and I think gen.py is working correctly as far as I can tell.\nThe true failure seems to be the ADD_CUSTOM_COMMAND call in pytorch/aten/src/aten/CMakeLists.txt:\nADD_CUSTOM_COMMAND(OUTPUT ${generated_cpp}\nCOMMAND ${GEN_COMMAND}\nDEPENDS ${all_python} ${all_templates} ${cwrap_files})\n\nEven with the WORKING_DIRECTORY option added, it just does not seem to be doing the correct thing, which, as I understand it, is reading in the generated_cpp.txt from the earlier gen.py call, and writing those files to disk. Sadly I know nothing about CMake so cannot be much help here.\nFor what it's worth, I'm running CMake 3.9.0 rc-5.\nP.S. I would argue that there is a bug in the write() function of gen.py. You need to add:\nos.makedirs(os.path.dirname(filename), exist_ok=True)\nJust below the filename declaration inside write(). From everything I know about Python 3, you cannot directly do an open() on an absolute path where one or more of the directories on that path do not exist yet. Most other programming languages will automatically create the required directories if they don't exist already, but not Python 3 (as far as I'm aware). Since you're writing to filename = \"ATen/\" + filename, you need this change because otherwise it will error since that extra ATen directory doesn't exist yet at (clean) build time.", "body": "@peterjc123 I have done some more testing, and I think gen.py is working correctly as far as I can tell.\r\n\r\nThe true failure seems to be the ADD_CUSTOM_COMMAND call in pytorch/aten/src/aten/CMakeLists.txt:\r\n\r\n```\r\nADD_CUSTOM_COMMAND(OUTPUT ${generated_cpp}\r\nCOMMAND ${GEN_COMMAND}\r\nDEPENDS ${all_python} ${all_templates} ${cwrap_files})\r\n```\r\n\r\nEven with the WORKING_DIRECTORY option added, it just does not seem to be doing the correct thing, which, as I understand it, is reading in the generated_cpp.txt from the earlier gen.py call, and writing those files to disk. Sadly I know nothing about CMake so cannot be much help here.\r\n\r\nFor what it's worth, I'm running CMake 3.9.0 rc-5.\r\n\r\nP.S. I would argue that there is a bug in the write() function of gen.py. You need to add:\r\n\r\n`os.makedirs(os.path.dirname(filename), exist_ok=True)`\r\n\r\nJust below the filename declaration inside write(). From everything I know about Python 3, you cannot directly do an open() on an absolute path where one or more of the directories on that path do not exist yet. Most other programming languages will automatically create the required directories if they don't exist already, but not Python 3 (as far as I'm aware). Since you're writing to filename = \"ATen/\" + filename, you need this change because otherwise it will error since that extra ATen directory doesn't exist yet at (clean) build time."}