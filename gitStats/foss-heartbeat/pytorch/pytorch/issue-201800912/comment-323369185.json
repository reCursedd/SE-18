{"url": "https://api.github.com/repos/pytorch/pytorch/issues/comments/323369185", "html_url": "https://github.com/pytorch/pytorch/issues/494#issuecomment-323369185", "issue_url": "https://api.github.com/repos/pytorch/pytorch/issues/494", "id": 323369185, "node_id": "MDEyOklzc3VlQ29tbWVudDMyMzM2OTE4NQ==", "user": {"login": "peterjc123", "id": 9998726, "node_id": "MDQ6VXNlcjk5OTg3MjY=", "avatar_url": "https://avatars3.githubusercontent.com/u/9998726?v=4", "gravatar_id": "", "url": "https://api.github.com/users/peterjc123", "html_url": "https://github.com/peterjc123", "followers_url": "https://api.github.com/users/peterjc123/followers", "following_url": "https://api.github.com/users/peterjc123/following{/other_user}", "gists_url": "https://api.github.com/users/peterjc123/gists{/gist_id}", "starred_url": "https://api.github.com/users/peterjc123/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/peterjc123/subscriptions", "organizations_url": "https://api.github.com/users/peterjc123/orgs", "repos_url": "https://api.github.com/users/peterjc123/repos", "events_url": "https://api.github.com/users/peterjc123/events{/privacy}", "received_events_url": "https://api.github.com/users/peterjc123/received_events", "type": "User", "site_admin": false}, "created_at": "2017-08-18T14:29:45Z", "updated_at": "2017-08-18T14:29:45Z", "author_association": "CONTRIBUTOR", "body_html": "<p><a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=320473\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/CodesInChaos\">@CodesInChaos</a> Actually it's not so simple.  No only <code>long</code>s are converted to <code>int_64_t</code>s, but other data types are also replaced by the standard int types. The problems are that <code>char</code> is a type that you don't actually know it's signed or not. In addition, when compiled in x64, each one of <code>long long</code>, <code>int64_t</code> and <code>long</code> takes 64 bits to store. But only two of them are the same. You may read the build log to find the problem there.</p>", "body_text": "@CodesInChaos Actually it's not so simple.  No only longs are converted to int_64_ts, but other data types are also replaced by the standard int types. The problems are that char is a type that you don't actually know it's signed or not. In addition, when compiled in x64, each one of long long, int64_t and long takes 64 bits to store. But only two of them are the same. You may read the build log to find the problem there.", "body": "@CodesInChaos Actually it's not so simple.  No only `long`s are converted to `int_64_t`s, but other data types are also replaced by the standard int types. The problems are that `char` is a type that you don't actually know it's signed or not. In addition, when compiled in x64, each one of `long long`, `int64_t` and `long` takes 64 bits to store. But only two of them are the same. You may read the build log to find the problem there."}