{"url": "https://api.github.com/repos/pytorch/pytorch/issues/comments/370631206", "html_url": "https://github.com/pytorch/pytorch/issues/494#issuecomment-370631206", "issue_url": "https://api.github.com/repos/pytorch/pytorch/issues/494", "id": 370631206, "node_id": "MDEyOklzc3VlQ29tbWVudDM3MDYzMTIwNg==", "user": {"login": "peterjc123", "id": 9998726, "node_id": "MDQ6VXNlcjk5OTg3MjY=", "avatar_url": "https://avatars3.githubusercontent.com/u/9998726?v=4", "gravatar_id": "", "url": "https://api.github.com/users/peterjc123", "html_url": "https://github.com/peterjc123", "followers_url": "https://api.github.com/users/peterjc123/followers", "following_url": "https://api.github.com/users/peterjc123/following{/other_user}", "gists_url": "https://api.github.com/users/peterjc123/gists{/gist_id}", "starred_url": "https://api.github.com/users/peterjc123/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/peterjc123/subscriptions", "organizations_url": "https://api.github.com/users/peterjc123/orgs", "repos_url": "https://api.github.com/users/peterjc123/repos", "events_url": "https://api.github.com/users/peterjc123/events{/privacy}", "received_events_url": "https://api.github.com/users/peterjc123/received_events", "type": "User", "site_admin": false}, "created_at": "2018-03-06T01:42:21Z", "updated_at": "2018-03-06T01:42:21Z", "author_association": "CONTRIBUTOR", "body_html": "<p><a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=2486893\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/shekhovt\">@shekhovt</a> Yes, I've noticed this and has started to fix this memory leak. The temporary workground is to turn off multiprocessing by setting <code>num_worker</code> to zero. By the way, could you please create a new thread for us to track this issue?</p>", "body_text": "@shekhovt Yes, I've noticed this and has started to fix this memory leak. The temporary workground is to turn off multiprocessing by setting num_worker to zero. By the way, could you please create a new thread for us to track this issue?", "body": "@shekhovt Yes, I've noticed this and has started to fix this memory leak. The temporary workground is to turn off multiprocessing by setting `num_worker` to zero. By the way, could you please create a new thread for us to track this issue?"}