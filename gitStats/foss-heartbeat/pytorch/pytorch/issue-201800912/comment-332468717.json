{"url": "https://api.github.com/repos/pytorch/pytorch/issues/comments/332468717", "html_url": "https://github.com/pytorch/pytorch/issues/494#issuecomment-332468717", "issue_url": "https://api.github.com/repos/pytorch/pytorch/issues/494", "id": 332468717, "node_id": "MDEyOklzc3VlQ29tbWVudDMzMjQ2ODcxNw==", "user": {"login": "peterjc123", "id": 9998726, "node_id": "MDQ6VXNlcjk5OTg3MjY=", "avatar_url": "https://avatars3.githubusercontent.com/u/9998726?v=4", "gravatar_id": "", "url": "https://api.github.com/users/peterjc123", "html_url": "https://github.com/peterjc123", "followers_url": "https://api.github.com/users/peterjc123/followers", "following_url": "https://api.github.com/users/peterjc123/following{/other_user}", "gists_url": "https://api.github.com/users/peterjc123/gists{/gist_id}", "starred_url": "https://api.github.com/users/peterjc123/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/peterjc123/subscriptions", "organizations_url": "https://api.github.com/users/peterjc123/orgs", "repos_url": "https://api.github.com/users/peterjc123/repos", "events_url": "https://api.github.com/users/peterjc123/events{/privacy}", "received_events_url": "https://api.github.com/users/peterjc123/received_events", "type": "User", "site_admin": false}, "created_at": "2017-09-27T09:45:46Z", "updated_at": "2017-09-27T09:45:46Z", "author_association": "CONTRIBUTOR", "body_html": "<p>After spending time investigating the memory leak problem using multiple workers, it has been found in the MSDN document <a href=\"https://msdn.microsoft.com/en-us/library/windows/desktop/aa366532.aspx\" rel=\"nofollow\">here</a> that <code>UnmapViewOfFile</code> and <code>CloseHandle</code> should be called on every process that used the shared mapping that was opened by <code>MapViewOfFile</code>. It's likely to solve this by calling something like <code>THMapAllocator_free</code> when the worker processes terminate, but I don't know where it should be put.</p>", "body_text": "After spending time investigating the memory leak problem using multiple workers, it has been found in the MSDN document here that UnmapViewOfFile and CloseHandle should be called on every process that used the shared mapping that was opened by MapViewOfFile. It's likely to solve this by calling something like THMapAllocator_free when the worker processes terminate, but I don't know where it should be put.", "body": "After spending time investigating the memory leak problem using multiple workers, it has been found in the MSDN document [here](https://msdn.microsoft.com/en-us/library/windows/desktop/aa366532.aspx) that `UnmapViewOfFile` and `CloseHandle` should be called on every process that used the shared mapping that was opened by `MapViewOfFile`. It's likely to solve this by calling something like `THMapAllocator_free` when the worker processes terminate, but I don't know where it should be put."}