{"url": "https://api.github.com/repos/pytorch/pytorch/issues/comments/349273527", "html_url": "https://github.com/pytorch/pytorch/issues/494#issuecomment-349273527", "issue_url": "https://api.github.com/repos/pytorch/pytorch/issues/494", "id": 349273527, "node_id": "MDEyOklzc3VlQ29tbWVudDM0OTI3MzUyNw==", "user": {"login": "magic282", "id": 2285145, "node_id": "MDQ6VXNlcjIyODUxNDU=", "avatar_url": "https://avatars1.githubusercontent.com/u/2285145?v=4", "gravatar_id": "", "url": "https://api.github.com/users/magic282", "html_url": "https://github.com/magic282", "followers_url": "https://api.github.com/users/magic282/followers", "following_url": "https://api.github.com/users/magic282/following{/other_user}", "gists_url": "https://api.github.com/users/magic282/gists{/gist_id}", "starred_url": "https://api.github.com/users/magic282/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/magic282/subscriptions", "organizations_url": "https://api.github.com/users/magic282/orgs", "repos_url": "https://api.github.com/users/magic282/repos", "events_url": "https://api.github.com/users/magic282/events{/privacy}", "received_events_url": "https://api.github.com/users/magic282/received_events", "type": "User", "site_admin": false}, "created_at": "2017-12-05T11:13:32Z", "updated_at": "2017-12-05T11:13:51Z", "author_association": "NONE", "body_html": "<p><a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=9998726\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/peterjc123\">@peterjc123</a><br>\nSeems to be a similar error</p>\n<pre><code>D:\\pytorch\\pytorch-scripts&gt;where /q cmake.exe\n\nD:\\pytorch\\pytorch-scripts&gt;IF ERRORLEVEL 1 (\necho CMake is required to compile PyTorch on Windows\n exit /b 1\n)\n\nD:\\pytorch\\pytorch-scripts&gt;IF NOT EXIST \"C:\\Program Files (x86)\\Microsoft Visual Studio\\Installer\\vswhere.exe\" (\necho Visual Studio 2017 C++ BuildTools is required to compile PyTorch on Windows\n exit /b 1\n)\n\nD:\\pytorch\\pytorch-scripts&gt;for /F \"usebackq tokens=*\" %i in (`\"C:\\Program Files (x86)\\Microsoft Visual Studio\\Installer\\vswhere.exe\" -legacy -version [15,16) -property installation\nPath`) do (if exist \"%i\" if exist \"%i\\VC\\Auxiliary\\Build\\vcvarsall.bat\" (\nset VS15INSTALLDIR=%i\n set VS15VCVARSALL=%i\\VC\\Auxiliary\\Build\\vcvarsall.bat\n goto vswhere\n) )\n\nD:\\pytorch\\pytorch-scripts&gt;(if exist \"C:\\Program Files (x86)\\Microsoft Visual Studio\\2017\\Community\" if exist \"C:\\Program Files (x86)\\Microsoft Visual Studio\\2017\\Community\\VC\\Auxi\nliary\\Build\\vcvarsall.bat\" (\nset VS15INSTALLDIR=C:\\Program Files (x86)\\Microsoft Visual Studio\\2017\\Community\n set VS15VCVARSALL=C:\\Program Files (x86)\\Microsoft Visual Studio\\2017\\Community\\VC\\Auxiliary\\Build\\vcvarsall.bat\n goto vswhere\n) )\n\nD:\\pytorch\\pytorch-scripts&gt;IF \"C:\\Program Files (x86)\\Microsoft Visual Studio\\2017\\Community\\VC\\Auxiliary\\Build\\vcvarsall.bat\" == \"\" (\necho Visual Studio 2017 C++ BuildTools is required to compile PyTorch on Windows\n exit /b 1\n)\n\nD:\\pytorch\\pytorch-scripts&gt;IF NOT \"C:\\Program Files (x86)\\Microsoft Visual Studio\\2017\\Community\\VC\\Auxiliary\\Build\\vcvarsall.bat\" == \"\" IF NOT \"C:\\Program Files (x86)\\Microsoft Vi\nsual Studio 14.0\\Common7\\Tools\\\" == \"\" (set DISTUTILS_USE_SDK=1 )\n\nD:\\pytorch\\pytorch-scripts&gt;where /q python.exe\n\nD:\\pytorch\\pytorch-scripts&gt;IF ERRORLEVEL 1 (\necho Python x64 3.5 or up is required to compile PyTorch on Windows\n exit /b 1\n)\n\nD:\\pytorch\\pytorch-scripts&gt;for /F \"usebackq delims=\" %i in (`python -c \"import sys; print('{0[0]}{0[1]}'.format(sys.version_info))\"`) do (set /a PYVER=%i )\n\nD:\\pytorch\\pytorch-scripts&gt;(set /a PYVER=36 )\n\nD:\\pytorch\\pytorch-scripts&gt;if 36 LSS 35 (\necho Python x64 3.5 or up is required to compile PyTorch on Windows\n echo Maybe you can create a virual environment if you have conda installed:\n echo &gt; conda create -n test python=3.6 pyyaml mkl numpy\n echo &gt; activate test\n exit /b 1\n)\n\nD:\\pytorch\\pytorch-scripts&gt;for /F \"usebackq delims=\" %i in (`python -c \"import struct;print( 8 * struct.calcsize('P'))\"`) do (set /a PYSIZE=%i )\n\nD:\\pytorch\\pytorch-scripts&gt;(set /a PYSIZE=64 )\n\nD:\\pytorch\\pytorch-scripts&gt;if 64 NEQ 64 (\necho Python x64 3.5 or up is required to compile PyTorch on Windows\n exit /b 1\n)\n\nD:\\pytorch\\pytorch-scripts&gt;IF ERRORLEVEL 1 goto eof\n\nD:\\pytorch\\pytorch-scripts&gt;REM Check for optional components\n\nD:\\pytorch\\pytorch-scripts&gt;set NO_CUDA=\n\nD:\\pytorch\\pytorch-scripts&gt;set CMAKE_GENERATOR=Visual Studio 15 2017 Win64\n\nD:\\pytorch\\pytorch-scripts&gt;IF \"C:\\Program Files\\NVIDIA Corporation\\NvToolsExt\\\" == \"\" (\necho NVTX (Visual Studio Extension for CUDA) not installed, disabling CUDA\n set NO_CUDA=1\n goto optcheck\n)\n\\Common was unexpected at this time.\n</code></pre>", "body_text": "@peterjc123\nSeems to be a similar error\nD:\\pytorch\\pytorch-scripts>where /q cmake.exe\n\nD:\\pytorch\\pytorch-scripts>IF ERRORLEVEL 1 (\necho CMake is required to compile PyTorch on Windows\n exit /b 1\n)\n\nD:\\pytorch\\pytorch-scripts>IF NOT EXIST \"C:\\Program Files (x86)\\Microsoft Visual Studio\\Installer\\vswhere.exe\" (\necho Visual Studio 2017 C++ BuildTools is required to compile PyTorch on Windows\n exit /b 1\n)\n\nD:\\pytorch\\pytorch-scripts>for /F \"usebackq tokens=*\" %i in (`\"C:\\Program Files (x86)\\Microsoft Visual Studio\\Installer\\vswhere.exe\" -legacy -version [15,16) -property installation\nPath`) do (if exist \"%i\" if exist \"%i\\VC\\Auxiliary\\Build\\vcvarsall.bat\" (\nset VS15INSTALLDIR=%i\n set VS15VCVARSALL=%i\\VC\\Auxiliary\\Build\\vcvarsall.bat\n goto vswhere\n) )\n\nD:\\pytorch\\pytorch-scripts>(if exist \"C:\\Program Files (x86)\\Microsoft Visual Studio\\2017\\Community\" if exist \"C:\\Program Files (x86)\\Microsoft Visual Studio\\2017\\Community\\VC\\Auxi\nliary\\Build\\vcvarsall.bat\" (\nset VS15INSTALLDIR=C:\\Program Files (x86)\\Microsoft Visual Studio\\2017\\Community\n set VS15VCVARSALL=C:\\Program Files (x86)\\Microsoft Visual Studio\\2017\\Community\\VC\\Auxiliary\\Build\\vcvarsall.bat\n goto vswhere\n) )\n\nD:\\pytorch\\pytorch-scripts>IF \"C:\\Program Files (x86)\\Microsoft Visual Studio\\2017\\Community\\VC\\Auxiliary\\Build\\vcvarsall.bat\" == \"\" (\necho Visual Studio 2017 C++ BuildTools is required to compile PyTorch on Windows\n exit /b 1\n)\n\nD:\\pytorch\\pytorch-scripts>IF NOT \"C:\\Program Files (x86)\\Microsoft Visual Studio\\2017\\Community\\VC\\Auxiliary\\Build\\vcvarsall.bat\" == \"\" IF NOT \"C:\\Program Files (x86)\\Microsoft Vi\nsual Studio 14.0\\Common7\\Tools\\\" == \"\" (set DISTUTILS_USE_SDK=1 )\n\nD:\\pytorch\\pytorch-scripts>where /q python.exe\n\nD:\\pytorch\\pytorch-scripts>IF ERRORLEVEL 1 (\necho Python x64 3.5 or up is required to compile PyTorch on Windows\n exit /b 1\n)\n\nD:\\pytorch\\pytorch-scripts>for /F \"usebackq delims=\" %i in (`python -c \"import sys; print('{0[0]}{0[1]}'.format(sys.version_info))\"`) do (set /a PYVER=%i )\n\nD:\\pytorch\\pytorch-scripts>(set /a PYVER=36 )\n\nD:\\pytorch\\pytorch-scripts>if 36 LSS 35 (\necho Python x64 3.5 or up is required to compile PyTorch on Windows\n echo Maybe you can create a virual environment if you have conda installed:\n echo > conda create -n test python=3.6 pyyaml mkl numpy\n echo > activate test\n exit /b 1\n)\n\nD:\\pytorch\\pytorch-scripts>for /F \"usebackq delims=\" %i in (`python -c \"import struct;print( 8 * struct.calcsize('P'))\"`) do (set /a PYSIZE=%i )\n\nD:\\pytorch\\pytorch-scripts>(set /a PYSIZE=64 )\n\nD:\\pytorch\\pytorch-scripts>if 64 NEQ 64 (\necho Python x64 3.5 or up is required to compile PyTorch on Windows\n exit /b 1\n)\n\nD:\\pytorch\\pytorch-scripts>IF ERRORLEVEL 1 goto eof\n\nD:\\pytorch\\pytorch-scripts>REM Check for optional components\n\nD:\\pytorch\\pytorch-scripts>set NO_CUDA=\n\nD:\\pytorch\\pytorch-scripts>set CMAKE_GENERATOR=Visual Studio 15 2017 Win64\n\nD:\\pytorch\\pytorch-scripts>IF \"C:\\Program Files\\NVIDIA Corporation\\NvToolsExt\\\" == \"\" (\necho NVTX (Visual Studio Extension for CUDA) not installed, disabling CUDA\n set NO_CUDA=1\n goto optcheck\n)\n\\Common was unexpected at this time.", "body": "@peterjc123 \r\nSeems to be a similar error\r\n```\r\nD:\\pytorch\\pytorch-scripts>where /q cmake.exe\r\n\r\nD:\\pytorch\\pytorch-scripts>IF ERRORLEVEL 1 (\r\necho CMake is required to compile PyTorch on Windows\r\n exit /b 1\r\n)\r\n\r\nD:\\pytorch\\pytorch-scripts>IF NOT EXIST \"C:\\Program Files (x86)\\Microsoft Visual Studio\\Installer\\vswhere.exe\" (\r\necho Visual Studio 2017 C++ BuildTools is required to compile PyTorch on Windows\r\n exit /b 1\r\n)\r\n\r\nD:\\pytorch\\pytorch-scripts>for /F \"usebackq tokens=*\" %i in (`\"C:\\Program Files (x86)\\Microsoft Visual Studio\\Installer\\vswhere.exe\" -legacy -version [15,16) -property installation\r\nPath`) do (if exist \"%i\" if exist \"%i\\VC\\Auxiliary\\Build\\vcvarsall.bat\" (\r\nset VS15INSTALLDIR=%i\r\n set VS15VCVARSALL=%i\\VC\\Auxiliary\\Build\\vcvarsall.bat\r\n goto vswhere\r\n) )\r\n\r\nD:\\pytorch\\pytorch-scripts>(if exist \"C:\\Program Files (x86)\\Microsoft Visual Studio\\2017\\Community\" if exist \"C:\\Program Files (x86)\\Microsoft Visual Studio\\2017\\Community\\VC\\Auxi\r\nliary\\Build\\vcvarsall.bat\" (\r\nset VS15INSTALLDIR=C:\\Program Files (x86)\\Microsoft Visual Studio\\2017\\Community\r\n set VS15VCVARSALL=C:\\Program Files (x86)\\Microsoft Visual Studio\\2017\\Community\\VC\\Auxiliary\\Build\\vcvarsall.bat\r\n goto vswhere\r\n) )\r\n\r\nD:\\pytorch\\pytorch-scripts>IF \"C:\\Program Files (x86)\\Microsoft Visual Studio\\2017\\Community\\VC\\Auxiliary\\Build\\vcvarsall.bat\" == \"\" (\r\necho Visual Studio 2017 C++ BuildTools is required to compile PyTorch on Windows\r\n exit /b 1\r\n)\r\n\r\nD:\\pytorch\\pytorch-scripts>IF NOT \"C:\\Program Files (x86)\\Microsoft Visual Studio\\2017\\Community\\VC\\Auxiliary\\Build\\vcvarsall.bat\" == \"\" IF NOT \"C:\\Program Files (x86)\\Microsoft Vi\r\nsual Studio 14.0\\Common7\\Tools\\\" == \"\" (set DISTUTILS_USE_SDK=1 )\r\n\r\nD:\\pytorch\\pytorch-scripts>where /q python.exe\r\n\r\nD:\\pytorch\\pytorch-scripts>IF ERRORLEVEL 1 (\r\necho Python x64 3.5 or up is required to compile PyTorch on Windows\r\n exit /b 1\r\n)\r\n\r\nD:\\pytorch\\pytorch-scripts>for /F \"usebackq delims=\" %i in (`python -c \"import sys; print('{0[0]}{0[1]}'.format(sys.version_info))\"`) do (set /a PYVER=%i )\r\n\r\nD:\\pytorch\\pytorch-scripts>(set /a PYVER=36 )\r\n\r\nD:\\pytorch\\pytorch-scripts>if 36 LSS 35 (\r\necho Python x64 3.5 or up is required to compile PyTorch on Windows\r\n echo Maybe you can create a virual environment if you have conda installed:\r\n echo > conda create -n test python=3.6 pyyaml mkl numpy\r\n echo > activate test\r\n exit /b 1\r\n)\r\n\r\nD:\\pytorch\\pytorch-scripts>for /F \"usebackq delims=\" %i in (`python -c \"import struct;print( 8 * struct.calcsize('P'))\"`) do (set /a PYSIZE=%i )\r\n\r\nD:\\pytorch\\pytorch-scripts>(set /a PYSIZE=64 )\r\n\r\nD:\\pytorch\\pytorch-scripts>if 64 NEQ 64 (\r\necho Python x64 3.5 or up is required to compile PyTorch on Windows\r\n exit /b 1\r\n)\r\n\r\nD:\\pytorch\\pytorch-scripts>IF ERRORLEVEL 1 goto eof\r\n\r\nD:\\pytorch\\pytorch-scripts>REM Check for optional components\r\n\r\nD:\\pytorch\\pytorch-scripts>set NO_CUDA=\r\n\r\nD:\\pytorch\\pytorch-scripts>set CMAKE_GENERATOR=Visual Studio 15 2017 Win64\r\n\r\nD:\\pytorch\\pytorch-scripts>IF \"C:\\Program Files\\NVIDIA Corporation\\NvToolsExt\\\" == \"\" (\r\necho NVTX (Visual Studio Extension for CUDA) not installed, disabling CUDA\r\n set NO_CUDA=1\r\n goto optcheck\r\n)\r\n\\Common was unexpected at this time.\r\n```"}