{"url": "https://api.github.com/repos/pytorch/pytorch/issues/comments/277408976", "html_url": "https://github.com/pytorch/pytorch/issues/494#issuecomment-277408976", "issue_url": "https://api.github.com/repos/pytorch/pytorch/issues/494", "id": 277408976, "node_id": "MDEyOklzc3VlQ29tbWVudDI3NzQwODk3Ng==", "user": {"login": "BTNC", "id": 15757197, "node_id": "MDQ6VXNlcjE1NzU3MTk3", "avatar_url": "https://avatars2.githubusercontent.com/u/15757197?v=4", "gravatar_id": "", "url": "https://api.github.com/users/BTNC", "html_url": "https://github.com/BTNC", "followers_url": "https://api.github.com/users/BTNC/followers", "following_url": "https://api.github.com/users/BTNC/following{/other_user}", "gists_url": "https://api.github.com/users/BTNC/gists{/gist_id}", "starred_url": "https://api.github.com/users/BTNC/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/BTNC/subscriptions", "organizations_url": "https://api.github.com/users/BTNC/orgs", "repos_url": "https://api.github.com/users/BTNC/repos", "events_url": "https://api.github.com/users/BTNC/events{/privacy}", "received_events_url": "https://api.github.com/users/BTNC/received_events", "type": "User", "site_admin": false}, "created_at": "2017-02-04T01:52:37Z", "updated_at": "2017-02-04T01:52:37Z", "author_association": "CONTRIBUTOR", "body_html": "<p>My two cents:<br>\nI prefer the macro way with int64_t (ie. define int64_t THLong and replace long with THLong) because (1) it is consistent with THHalf; (2) it is convenient to define all TH types in a centralized place, so that it is painless when one whats to change that type again in the future; (3) it makes codes clearer that which part comply with torch type restrictions.</p>\n<p>By the way, I think the sizeof(long)==4 issue on windows is not a blocker to port pytorch to windows. One can still play with tensors other than LongTensor especially HalfTensor, FloatTensor, etc. I suggest to postpone converting long to int64_t after have ported pytorch to windows.</p>", "body_text": "My two cents:\nI prefer the macro way with int64_t (ie. define int64_t THLong and replace long with THLong) because (1) it is consistent with THHalf; (2) it is convenient to define all TH types in a centralized place, so that it is painless when one whats to change that type again in the future; (3) it makes codes clearer that which part comply with torch type restrictions.\nBy the way, I think the sizeof(long)==4 issue on windows is not a blocker to port pytorch to windows. One can still play with tensors other than LongTensor especially HalfTensor, FloatTensor, etc. I suggest to postpone converting long to int64_t after have ported pytorch to windows.", "body": "My two cents:\r\nI prefer the macro way with int64_t (ie. define int64_t THLong and replace long with THLong) because (1) it is consistent with THHalf; (2) it is convenient to define all TH types in a centralized place, so that it is painless when one whats to change that type again in the future; (3) it makes codes clearer that which part comply with torch type restrictions.\r\n\r\nBy the way, I think the sizeof(long)==4 issue on windows is not a blocker to port pytorch to windows. One can still play with tensors other than LongTensor especially HalfTensor, FloatTensor, etc. I suggest to postpone converting long to int64_t after have ported pytorch to windows."}