{"url": "https://api.github.com/repos/pytorch/pytorch/issues/comments/343637014", "html_url": "https://github.com/pytorch/pytorch/issues/494#issuecomment-343637014", "issue_url": "https://api.github.com/repos/pytorch/pytorch/issues/494", "id": 343637014, "node_id": "MDEyOklzc3VlQ29tbWVudDM0MzYzNzAxNA==", "user": {"login": "peterjc123", "id": 9998726, "node_id": "MDQ6VXNlcjk5OTg3MjY=", "avatar_url": "https://avatars3.githubusercontent.com/u/9998726?v=4", "gravatar_id": "", "url": "https://api.github.com/users/peterjc123", "html_url": "https://github.com/peterjc123", "followers_url": "https://api.github.com/users/peterjc123/followers", "following_url": "https://api.github.com/users/peterjc123/following{/other_user}", "gists_url": "https://api.github.com/users/peterjc123/gists{/gist_id}", "starred_url": "https://api.github.com/users/peterjc123/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/peterjc123/subscriptions", "organizations_url": "https://api.github.com/users/peterjc123/orgs", "repos_url": "https://api.github.com/users/peterjc123/repos", "events_url": "https://api.github.com/users/peterjc123/events{/privacy}", "received_events_url": "https://api.github.com/users/peterjc123/received_events", "type": "User", "site_admin": false}, "created_at": "2017-11-11T03:27:23Z", "updated_at": "2017-11-11T07:56:12Z", "author_association": "CONTRIBUTOR", "body_html": "<p><a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=15619682\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/aluo-x\">@aluo-x</a> For CUDA builds, another PR <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load issue title\" data-id=\"273111230\" data-permission-text=\"Issue title is private\" data-url=\"https://github.com/pytorch/pytorch/issues/3637\" data-hovercard-type=\"pull_request\" data-hovercard-url=\"/pytorch/pytorch/pull/3637/hovercard\" href=\"https://github.com/pytorch/pytorch/pull/3637\">#3637</a> is also necessary.<br>\nThe dependencies of this build are:</p>\n<ol>\n<li>CUDA 8.0 or up</li>\n<li>cuDNN 6.0 or up (Optional)</li>\n<li>MSVC 2017 C++ Build Tools ( MSVC 2015 with Update 2 is also needed if you want to build for CUDA 8)</li>\n<li>CMAKE 3.4 or up</li>\n<li>NVTX( in CUDA as Visual Studio Integration. if fail to install, you can extract the CUDA installer exe and found the NVTX installer under the CUDAVisualStudioIntegration)</li>\n<li>64 bits of Windows</li>\n<li>Anaconda / MiniConda 64 bits</li>\n</ol>\n<p>The simple steps to build it is like:</p>\n<div class=\"highlight highlight-source-powershell\"><pre>git clone <span class=\"pl-k\">--</span>recursive https:<span class=\"pl-k\">//</span><span class=\"pl-c1\">github.com</span><span class=\"pl-k\">/</span>pytorch<span class=\"pl-k\">/</span>pytorch\ncd pytorch\nxcopy <span class=\"pl-k\">/</span>Y aten\\src\\ATen\\common_with_cwrap.py tools\\shared\\cwrap_common.py\n\n<span class=\"pl-c\"><span class=\"pl-c\">#</span> Open X86_64 Developer Command Prompt for MSVC 2017 and type in the following commands:<span class=\"pl-c\"></span></span>\n<span class=\"pl-c\"><span class=\"pl-c\">#</span> If you don't want to enable CUDA<span class=\"pl-c\"></span></span>\nset NO_CUDA<span class=\"pl-k\">=</span><span class=\"pl-c1\">1</span>\n\n<span class=\"pl-c\"><span class=\"pl-c\">#</span> For CUDA 8 builds<span class=\"pl-c\"></span></span>\nset CMAKE_GENERATOR<span class=\"pl-k\">=</span>Visual Studio <span class=\"pl-c1\">14</span> <span class=\"pl-c1\">2015</span> Win64\n\n<span class=\"pl-c\"><span class=\"pl-c\">#</span> For CPU/CUDA 9 builds<span class=\"pl-c\"></span></span>\nset CMAKE_GENERATOR<span class=\"pl-k\">=</span>Visual Studio <span class=\"pl-c1\">15</span> <span class=\"pl-c1\">2017</span> Win64\n\n<span class=\"pl-c\"><span class=\"pl-c\">#</span> If you want to speed up CUDA builds, Use Ninja<span class=\"pl-c\"></span></span>\nset CMAKE_GENERATOR<span class=\"pl-k\">=</span>Ninja\n<span class=\"pl-c\"><span class=\"pl-c\">#</span>  If CUDA 8 with Ninja<span class=\"pl-c\"></span></span>\nset PREBUILD_COMMAND<span class=\"pl-k\">=%</span>VS140COMNTOOLS<span class=\"pl-k\">%</span>\\..\\..\\VC\\<span class=\"pl-c1\">vcvarsall.bat</span>\nset PREBUILD_COMMAND_ARGS<span class=\"pl-k\">=</span>x86_amd64\n\n<span class=\"pl-c\"><span class=\"pl-c\">#</span> If you want to add BLAS(OpenBLAS, MKL)<span class=\"pl-c\"></span></span>\nset LIB<span class=\"pl-k\">=</span>[<span class=\"pl-k\">PATH</span>_<span class=\"pl-k\">TO</span>_<span class=\"pl-k\">BLAS</span>_<span class=\"pl-k\">LIBS</span>];<span class=\"pl-k\">%</span>LIB<span class=\"pl-k\">%</span>\n\n<span class=\"pl-c\"><span class=\"pl-c\">#</span> If your main python version is &lt; 3.5<span class=\"pl-c\"></span></span>\nset PYTHON_VERSION<span class=\"pl-k\">=</span><span class=\"pl-c1\">3.5</span> <span class=\"pl-c\"><span class=\"pl-c\">#</span> 3.6 or up is also fine <span class=\"pl-c\"></span></span>\nconda create <span class=\"pl-k\">-</span>q <span class=\"pl-k\">-</span>n test python<span class=\"pl-k\">=</span>PYTHON_VERSION numpy mkl cffi pyyaml\nactivate test\n\n<span class=\"pl-c\"><span class=\"pl-c\">#</span> If you have both VS2015 and VS2017<span class=\"pl-c\"></span></span>\nset DISTUTILS_USE_SDK<span class=\"pl-k\">=</span><span class=\"pl-c1\">1</span>\n\n<span class=\"pl-c\"><span class=\"pl-c\">#</span> Now you can start install PyTorch here<span class=\"pl-c\"></span></span>\npython setup.py install</pre></div>", "body_text": "@aluo-x For CUDA builds, another PR #3637 is also necessary.\nThe dependencies of this build are:\n\nCUDA 8.0 or up\ncuDNN 6.0 or up (Optional)\nMSVC 2017 C++ Build Tools ( MSVC 2015 with Update 2 is also needed if you want to build for CUDA 8)\nCMAKE 3.4 or up\nNVTX( in CUDA as Visual Studio Integration. if fail to install, you can extract the CUDA installer exe and found the NVTX installer under the CUDAVisualStudioIntegration)\n64 bits of Windows\nAnaconda / MiniConda 64 bits\n\nThe simple steps to build it is like:\ngit clone --recursive https://github.com/pytorch/pytorch\ncd pytorch\nxcopy /Y aten\\src\\ATen\\common_with_cwrap.py tools\\shared\\cwrap_common.py\n\n# Open X86_64 Developer Command Prompt for MSVC 2017 and type in the following commands:\n# If you don't want to enable CUDA\nset NO_CUDA=1\n\n# For CUDA 8 builds\nset CMAKE_GENERATOR=Visual Studio 14 2015 Win64\n\n# For CPU/CUDA 9 builds\nset CMAKE_GENERATOR=Visual Studio 15 2017 Win64\n\n# If you want to speed up CUDA builds, Use Ninja\nset CMAKE_GENERATOR=Ninja\n#  If CUDA 8 with Ninja\nset PREBUILD_COMMAND=%VS140COMNTOOLS%\\..\\..\\VC\\vcvarsall.bat\nset PREBUILD_COMMAND_ARGS=x86_amd64\n\n# If you want to add BLAS(OpenBLAS, MKL)\nset LIB=[PATH_TO_BLAS_LIBS];%LIB%\n\n# If your main python version is < 3.5\nset PYTHON_VERSION=3.5 # 3.6 or up is also fine \nconda create -q -n test python=PYTHON_VERSION numpy mkl cffi pyyaml\nactivate test\n\n# If you have both VS2015 and VS2017\nset DISTUTILS_USE_SDK=1\n\n# Now you can start install PyTorch here\npython setup.py install", "body": "@aluo-x For CUDA builds, another PR #3637 is also necessary.\r\nThe dependencies of this build are:\r\n1. CUDA 8.0 or up\r\n2. cuDNN 6.0 or up (Optional)\r\n2. MSVC 2017 C++ Build Tools ( MSVC 2015 with Update 2 is also needed if you want to build for CUDA 8)\r\n3. CMAKE 3.4 or up\r\n4. NVTX( in CUDA as Visual Studio Integration. if fail to install, you can extract the CUDA installer exe and found the NVTX installer under the CUDAVisualStudioIntegration)\r\n5. 64 bits of Windows\r\n6. Anaconda / MiniConda 64 bits\r\n\r\nThe simple steps to build it is like:\r\n```Powershell\r\ngit clone --recursive https://github.com/pytorch/pytorch\r\ncd pytorch\r\nxcopy /Y aten\\src\\ATen\\common_with_cwrap.py tools\\shared\\cwrap_common.py\r\n\r\n# Open X86_64 Developer Command Prompt for MSVC 2017 and type in the following commands:\r\n# If you don't want to enable CUDA\r\nset NO_CUDA=1\r\n\r\n# For CUDA 8 builds\r\nset CMAKE_GENERATOR=Visual Studio 14 2015 Win64\r\n\r\n# For CPU/CUDA 9 builds\r\nset CMAKE_GENERATOR=Visual Studio 15 2017 Win64\r\n\r\n# If you want to speed up CUDA builds, Use Ninja\r\nset CMAKE_GENERATOR=Ninja\r\n#  If CUDA 8 with Ninja\r\nset PREBUILD_COMMAND=%VS140COMNTOOLS%\\..\\..\\VC\\vcvarsall.bat\r\nset PREBUILD_COMMAND_ARGS=x86_amd64\r\n\r\n# If you want to add BLAS(OpenBLAS, MKL)\r\nset LIB=[PATH_TO_BLAS_LIBS];%LIB%\r\n\r\n# If your main python version is < 3.5\r\nset PYTHON_VERSION=3.5 # 3.6 or up is also fine \r\nconda create -q -n test python=PYTHON_VERSION numpy mkl cffi pyyaml\r\nactivate test\r\n\r\n# If you have both VS2015 and VS2017\r\nset DISTUTILS_USE_SDK=1\r\n\r\n# Now you can start install PyTorch here\r\npython setup.py install\r\n```"}