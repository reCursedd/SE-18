{"url": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/179153393", "pull_request_review_id": 109342779, "id": 179153393, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE3OTE1MzM5Mw==", "diff_hunk": "@@ -0,0 +1,119 @@\n+import torch\n+\n+\n+def detach_variable(inputs):\n+    if torch.is_tensor(inputs):\n+        inp = inputs.detach()\n+        return inp\n+    elif isinstance(inputs, tuple):\n+        return tuple(detach_variable(v) for v in inputs)\n+    else:\n+        raise RuntimeError(\"Unsupported input type: \", type(inputs).__name__)\n+\n+\n+class CheckpointFunction(torch.autograd.Function):\n+\n+    @staticmethod\n+    def forward(ctx, run_function, *args):\n+        ctx.run_function = run_function\n+        ctx.save_for_backward(*args)\n+        with torch.no_grad():\n+            outputs = run_function(*args)\n+        return outputs\n+\n+    @staticmethod\n+    def backward(ctx, *args):\n+        assert (torch.autograd.is_checkpoint_valid()), \\\n+            \"Checkpointing is not compatible with .grad(), please use .backward() if possible\"\n+        inputs = ctx.saved_tensors\n+        inputs_list = detach_variable(inputs)\n+        with torch.enable_grad():\n+            outputs = ctx.run_function(*inputs_list)", "path": "torch/utils/checkpoint.py", "position": null, "original_position": 31, "commit_id": "37ee79fe45bdcfd2fb70eccc146369d6c765137e", "original_commit_id": "718c291acc8942ab8ffee2803b475372c1c300a3", "user": {"login": "prigoyal", "id": 13488275, "node_id": "MDQ6VXNlcjEzNDg4Mjc1", "avatar_url": "https://avatars0.githubusercontent.com/u/13488275?v=4", "gravatar_id": "", "url": "https://api.github.com/users/prigoyal", "html_url": "https://github.com/prigoyal", "followers_url": "https://api.github.com/users/prigoyal/followers", "following_url": "https://api.github.com/users/prigoyal/following{/other_user}", "gists_url": "https://api.github.com/users/prigoyal/gists{/gist_id}", "starred_url": "https://api.github.com/users/prigoyal/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/prigoyal/subscriptions", "organizations_url": "https://api.github.com/users/prigoyal/orgs", "repos_url": "https://api.github.com/users/prigoyal/repos", "events_url": "https://api.github.com/users/prigoyal/events{/privacy}", "received_events_url": "https://api.github.com/users/prigoyal/received_events", "type": "User", "site_admin": false}, "body": "the reasoning behind the inputs_list here and not converting it to tensor is that models may have different #inputs, and the way inputs should be passed to the model (their order, etc.) is something that `checkpoint` function won't know about. Rather, the run function that user passes as the input has that information. So, whatever inputs are passed by user, we dispatch them to the `run_function` (whether tensor, tuple etc.) and that run_function should take care of it.", "created_at": "2018-04-04T14:09:56Z", "updated_at": "2018-11-23T15:41:40Z", "html_url": "https://github.com/pytorch/pytorch/pull/4594#discussion_r179153393", "pull_request_url": "https://api.github.com/repos/pytorch/pytorch/pulls/4594", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/179153393"}, "html": {"href": "https://github.com/pytorch/pytorch/pull/4594#discussion_r179153393"}, "pull_request": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/4594"}}, "body_html": "<p>the reasoning behind the inputs_list here and not converting it to tensor is that models may have different #inputs, and the way inputs should be passed to the model (their order, etc.) is something that <code>checkpoint</code> function won't know about. Rather, the run function that user passes as the input has that information. So, whatever inputs are passed by user, we dispatch them to the <code>run_function</code> (whether tensor, tuple etc.) and that run_function should take care of it.</p>", "body_text": "the reasoning behind the inputs_list here and not converting it to tensor is that models may have different #inputs, and the way inputs should be passed to the model (their order, etc.) is something that checkpoint function won't know about. Rather, the run function that user passes as the input has that information. So, whatever inputs are passed by user, we dispatch them to the run_function (whether tensor, tuple etc.) and that run_function should take care of it.", "in_reply_to_id": 179101772}