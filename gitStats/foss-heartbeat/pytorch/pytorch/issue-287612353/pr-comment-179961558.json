{"url": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/179961558", "pull_request_review_id": 110300181, "id": 179961558, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE3OTk2MTU1OA==", "diff_hunk": "@@ -140,6 +140,23 @@ def grad(outputs, inputs, grad_outputs=None, retain_graph=None, create_graph=Fal\n         inputs)\n \n \n+# This function applies in case of gradient checkpointing for memory\n+# optimization. Currently, for gradient checkpointing, we only support imperative\n+# backwards call i.e. torch.autograd.backward() and the torch.autograd.grad() won't\n+# work. The reason being that: torch.autograd.grad() only calculates the grads\n+# for the inputs that are passed by user but it doesn't calculate grad for\n+# anything else e.g. model parameters like weights, bias etc. However, for\n+# torch.autograd.backward(), we would actually compute the grad for the weights as well.\n+#\n+# This function returns whether the checkpointing is valid i.e. torch.autograd.backward\n+# or not i.e. torch.autograd.grad. The implementation works by maintaining a thread\n+# local variable in torch/csrc/autograd/engine.cpp which looks at the FunctionTask\n+# in the stack and before a FunctionTask is executed in evaluate_function, it\n+# checks for whether reentrant backwards is imperative or not.\n+def is_checkpoint_valid():", "path": "torch/autograd/__init__.py", "position": null, "original_position": 17, "commit_id": "37ee79fe45bdcfd2fb70eccc146369d6c765137e", "original_commit_id": "6b37243f2c25d6f6f6bf633c3fa0862dff2c843b", "user": {"login": "apaszke", "id": 4583066, "node_id": "MDQ6VXNlcjQ1ODMwNjY=", "avatar_url": "https://avatars3.githubusercontent.com/u/4583066?v=4", "gravatar_id": "", "url": "https://api.github.com/users/apaszke", "html_url": "https://github.com/apaszke", "followers_url": "https://api.github.com/users/apaszke/followers", "following_url": "https://api.github.com/users/apaszke/following{/other_user}", "gists_url": "https://api.github.com/users/apaszke/gists{/gist_id}", "starred_url": "https://api.github.com/users/apaszke/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/apaszke/subscriptions", "organizations_url": "https://api.github.com/users/apaszke/orgs", "repos_url": "https://api.github.com/users/apaszke/repos", "events_url": "https://api.github.com/users/apaszke/events{/privacy}", "received_events_url": "https://api.github.com/users/apaszke/received_events", "type": "User", "site_admin": false}, "body": "Again: this needs to be made internal. Add an underscore", "created_at": "2018-04-08T21:13:58Z", "updated_at": "2018-11-23T15:42:01Z", "html_url": "https://github.com/pytorch/pytorch/pull/4594#discussion_r179961558", "pull_request_url": "https://api.github.com/repos/pytorch/pytorch/pulls/4594", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/179961558"}, "html": {"href": "https://github.com/pytorch/pytorch/pull/4594#discussion_r179961558"}, "pull_request": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/4594"}}, "body_html": "<p>Again: this needs to be made internal. Add an underscore</p>", "body_text": "Again: this needs to be made internal. Add an underscore"}