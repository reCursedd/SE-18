{"url": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/178655595", "pull_request_review_id": 108748921, "id": 178655595, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE3ODY1NTU5NQ==", "diff_hunk": "@@ -228,14 +237,19 @@ static variable_list call_post_hooks(Function& fn, variable_list outputs, variab\n }\n \n static variable_list call_function(FunctionTask& task) {\n+  prev_checkpoint_valid_state = checkpoint_valid;\n+  checkpoint_valid = (!task.base->checkpoint_grad_inputs) && prev_checkpoint_valid_state;\n   auto& fn = *task.fn;\n   auto inputs = call_pre_hooks(fn, InputBuffer::variables(std::move(task.inputs)));\n \n   if(!task.base->keep_graph) {\n     fn.will_release_variables();\n   }\n   auto outputs = fn(inputs);\n-\n+  // if (task.base->checkpoint_grad_inputs) {", "path": "torch/csrc/autograd/engine.cpp", "position": null, "original_position": 44, "commit_id": "37ee79fe45bdcfd2fb70eccc146369d6c765137e", "original_commit_id": "bea1f4530dc598092afbd78e63c71636113c8d03", "user": {"login": "prigoyal", "id": 13488275, "node_id": "MDQ6VXNlcjEzNDg4Mjc1", "avatar_url": "https://avatars0.githubusercontent.com/u/13488275?v=4", "gravatar_id": "", "url": "https://api.github.com/users/prigoyal", "html_url": "https://github.com/prigoyal", "followers_url": "https://api.github.com/users/prigoyal/followers", "following_url": "https://api.github.com/users/prigoyal/following{/other_user}", "gists_url": "https://api.github.com/users/prigoyal/gists{/gist_id}", "starred_url": "https://api.github.com/users/prigoyal/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/prigoyal/subscriptions", "organizations_url": "https://api.github.com/users/prigoyal/orgs", "repos_url": "https://api.github.com/users/prigoyal/repos", "events_url": "https://api.github.com/users/prigoyal/events{/privacy}", "received_events_url": "https://api.github.com/users/prigoyal/received_events", "type": "User", "site_admin": false}, "body": "@ezyang , I feel like restoring state is not really needed. Imagine this:\r\n\r\n.backward() -> .grad() -> .backward()\r\n\r\nin this case, checkpoint_valid pattern would be:  True -> False -> False\r\nIf we restore the checkpoint_valid prev_checkpoint_valid_state would be: True-> True -> True which is incorrect\r\n\r\nwhat do you think?", "created_at": "2018-04-02T21:27:56Z", "updated_at": "2018-11-23T15:41:31Z", "html_url": "https://github.com/pytorch/pytorch/pull/4594#discussion_r178655595", "pull_request_url": "https://api.github.com/repos/pytorch/pytorch/pulls/4594", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/178655595"}, "html": {"href": "https://github.com/pytorch/pytorch/pull/4594#discussion_r178655595"}, "pull_request": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/4594"}}, "body_html": "<p><a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=13564\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/ezyang\">@ezyang</a> , I feel like restoring state is not really needed. Imagine this:</p>\n<p>.backward() -&gt; .grad() -&gt; .backward()</p>\n<p>in this case, checkpoint_valid pattern would be:  True -&gt; False -&gt; False<br>\nIf we restore the checkpoint_valid prev_checkpoint_valid_state would be: True-&gt; True -&gt; True which is incorrect</p>\n<p>what do you think?</p>", "body_text": "@ezyang , I feel like restoring state is not really needed. Imagine this:\n.backward() -> .grad() -> .backward()\nin this case, checkpoint_valid pattern would be:  True -> False -> False\nIf we restore the checkpoint_valid prev_checkpoint_valid_state would be: True-> True -> True which is incorrect\nwhat do you think?"}