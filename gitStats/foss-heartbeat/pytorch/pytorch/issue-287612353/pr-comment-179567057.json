{"url": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/179567057", "pull_request_review_id": 109835982, "id": 179567057, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE3OTU2NzA1Nw==", "diff_hunk": "@@ -0,0 +1,119 @@\n+import torch\n+\n+\n+def detach_variable(inputs):\n+    if torch.is_tensor(inputs):\n+        inp = inputs.detach()\n+        return inp\n+    elif isinstance(inputs, tuple):\n+        return tuple(detach_variable(v) for v in inputs)\n+    else:\n+        raise RuntimeError(\"Unsupported input type: \", type(inputs).__name__)\n+\n+\n+class CheckpointFunction(torch.autograd.Function):\n+\n+    @staticmethod\n+    def forward(ctx, run_function, *args):\n+        ctx.run_function = run_function\n+        ctx.save_for_backward(*args)\n+        with torch.no_grad():\n+            outputs = run_function(*args)\n+        return outputs\n+\n+    @staticmethod\n+    def backward(ctx, *args):\n+        assert (torch.autograd.is_checkpoint_valid()), \\\n+            \"Checkpointing is not compatible with .grad(), please use .backward() if possible\"\n+        inputs = ctx.saved_tensors\n+        inputs_list = detach_variable(inputs)\n+        with torch.enable_grad():\n+            outputs = ctx.run_function(*inputs_list)\n+\n+        if isinstance(outputs, tuple):\n+            output_list = list(outputs)\n+        elif torch.is_tensor(outputs):\n+            output_list = [outputs]\n+        out_grads = [grad for grad in args]\n+        torch.autograd.backward(output_list, out_grads)\n+\n+        input_grads = None\n+        if isinstance(inputs_list, tuple):\n+            input_grads = tuple(inp.grad for inp in inputs_list)\n+            return (None,) + input_grads\n+        elif torch.is_tensor(inputs_list):\n+            input_grads = inputs_list.grad\n+            return None, input_grads\n+\n+\n+def checkpoint(run_function, *args):\n+    r\"\"\"Checkpoint a model or part of the model\n+\n+    Checkpoint works by trading compute for memory. It can be applied on any\n+    part of the model. In the forward pass, the model is run in volatile\n+    manner i.e. the activations are not stored. The forward pass save the\n+    inputs tuple and the run_function parameter. In the backwards pass, the\n+    saved inputs and run_function is retreived, and the forward pass is done\n+    on the model again (non-volatile this time) since we need to get the\n+    activations values for calculating the gradient and then the gradients are\n+    calculated.\n+\n+    Args:\n+        run_function : describes what to run in the forward pass of the model or\n+                       part of the model. It should also know how to handle\n+                       the inputs passed as the tuple. For example, in LSTM,\n+                       user passes (activation, hidden), run_function should\n+                       correctly use first input as activation and second input\n+                       as hidden\n+        args:         tuple containing inputs to the run_function\n+\n+    Returns:\n+        Output of running the run_function on *args\n+    \"\"\"\n+    return CheckpointFunction.apply(run_function, *args)\n+\n+\n+def checkpoint_sequential(modules, segments, *inputs):", "path": "torch/utils/checkpoint.py", "position": null, "original_position": 76, "commit_id": "37ee79fe45bdcfd2fb70eccc146369d6c765137e", "original_commit_id": "718c291acc8942ab8ffee2803b475372c1c300a3", "user": {"login": "apaszke", "id": 4583066, "node_id": "MDQ6VXNlcjQ1ODMwNjY=", "avatar_url": "https://avatars3.githubusercontent.com/u/4583066?v=4", "gravatar_id": "", "url": "https://api.github.com/users/apaszke", "html_url": "https://github.com/apaszke", "followers_url": "https://api.github.com/users/apaszke/followers", "following_url": "https://api.github.com/users/apaszke/following{/other_user}", "gists_url": "https://api.github.com/users/apaszke/gists{/gist_id}", "starred_url": "https://api.github.com/users/apaszke/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/apaszke/subscriptions", "organizations_url": "https://api.github.com/users/apaszke/orgs", "repos_url": "https://api.github.com/users/apaszke/repos", "events_url": "https://api.github.com/users/apaszke/events{/privacy}", "received_events_url": "https://api.github.com/users/apaszke/received_events", "type": "User", "site_admin": false}, "body": "It's not blocking, but:\r\n1. It affects the interface, because the argument name could be chosen differently if we will ever expand support to callables. Argument names are part of the function interface in Python, so we can't change them at will.\r\n2. It's purely a cosmetic change. Your code as is would work even if it was a list of non-module things. You only need to adjust the arg name (how about `steps` or `functions`?) and the docs!", "created_at": "2018-04-05T18:55:23Z", "updated_at": "2018-11-23T15:41:47Z", "html_url": "https://github.com/pytorch/pytorch/pull/4594#discussion_r179567057", "pull_request_url": "https://api.github.com/repos/pytorch/pytorch/pulls/4594", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/179567057"}, "html": {"href": "https://github.com/pytorch/pytorch/pull/4594#discussion_r179567057"}, "pull_request": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/4594"}}, "body_html": "<p>It's not blocking, but:</p>\n<ol>\n<li>It affects the interface, because the argument name could be chosen differently if we will ever expand support to callables. Argument names are part of the function interface in Python, so we can't change them at will.</li>\n<li>It's purely a cosmetic change. Your code as is would work even if it was a list of non-module things. You only need to adjust the arg name (how about <code>steps</code> or <code>functions</code>?) and the docs!</li>\n</ol>", "body_text": "It's not blocking, but:\n\nIt affects the interface, because the argument name could be chosen differently if we will ever expand support to callables. Argument names are part of the function interface in Python, so we can't change them at will.\nIt's purely a cosmetic change. Your code as is would work even if it was a list of non-module things. You only need to adjust the arg name (how about steps or functions?) and the docs!", "in_reply_to_id": 179104345}