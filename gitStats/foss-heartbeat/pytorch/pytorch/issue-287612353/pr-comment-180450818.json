{"url": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/180450818", "pull_request_review_id": 110872375, "id": 180450818, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MDQ1MDgxOA==", "diff_hunk": "@@ -0,0 +1,117 @@\n+import torch\n+\n+\n+def detach_variable(inputs):\n+    if isinstance(inputs, tuple):\n+        out = []\n+        for inp in inputs:\n+            x = inp.detach()\n+            x.requires_grad = inp.requires_grad\n+            out.append(x)\n+        return tuple(out)\n+    else:\n+        raise RuntimeError(\n+            \"Only tuple of tensors is supported. Got Unsupported input type: \", type(inputs).__name__)\n+\n+\n+class CheckpointFunction(torch.autograd.Function):\n+\n+    @staticmethod\n+    def forward(ctx, run_function, *args):\n+        ctx.run_function = run_function\n+        ctx.save_for_backward(*args)\n+        with torch.no_grad():\n+            outputs = run_function(*args)\n+        return outputs\n+\n+    @staticmethod\n+    def backward(ctx, *args):\n+        if not torch.autograd.is_checkpoint_valid():\n+            raise RuntimeError(\"Checkpointing is not compatible with .grad(), please use .backward() if possible\")\n+        inputs = ctx.saved_tensors\n+        inputs_list = detach_variable(inputs)\n+        with torch.enable_grad():\n+            outputs = ctx.run_function(*inputs_list)\n+\n+        if isinstance(outputs, torch.Tensor):\n+            outputs = (outputs,)\n+        torch.autograd.backward(outputs, args)", "path": "torch/utils/checkpoint.py", "position": null, "original_position": 38, "commit_id": "37ee79fe45bdcfd2fb70eccc146369d6c765137e", "original_commit_id": "6b37243f2c25d6f6f6bf633c3fa0862dff2c843b", "user": {"login": "prigoyal", "id": 13488275, "node_id": "MDQ6VXNlcjEzNDg4Mjc1", "avatar_url": "https://avatars0.githubusercontent.com/u/13488275?v=4", "gravatar_id": "", "url": "https://api.github.com/users/prigoyal", "html_url": "https://github.com/prigoyal", "followers_url": "https://api.github.com/users/prigoyal/followers", "following_url": "https://api.github.com/users/prigoyal/following{/other_user}", "gists_url": "https://api.github.com/users/prigoyal/gists{/gist_id}", "starred_url": "https://api.github.com/users/prigoyal/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/prigoyal/subscriptions", "organizations_url": "https://api.github.com/users/prigoyal/orgs", "repos_url": "https://api.github.com/users/prigoyal/repos", "events_url": "https://api.github.com/users/prigoyal/events{/privacy}", "received_events_url": "https://api.github.com/users/prigoyal/received_events", "type": "User", "site_admin": false}, "body": "I am not sure. I looked for the usage of `torch.autograd.backward` in codebase and didn't find any case where Tensor is passed. Maybe it will be a good idea if someone can add a unit test for that if that's supported? otherwise it's hard to guess :)", "created_at": "2018-04-10T14:51:29Z", "updated_at": "2018-11-23T15:42:09Z", "html_url": "https://github.com/pytorch/pytorch/pull/4594#discussion_r180450818", "pull_request_url": "https://api.github.com/repos/pytorch/pytorch/pulls/4594", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/180450818"}, "html": {"href": "https://github.com/pytorch/pytorch/pull/4594#discussion_r180450818"}, "pull_request": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/4594"}}, "body_html": "<p>I am not sure. I looked for the usage of <code>torch.autograd.backward</code> in codebase and didn't find any case where Tensor is passed. Maybe it will be a good idea if someone can add a unit test for that if that's supported? otherwise it's hard to guess :)</p>", "body_text": "I am not sure. I looked for the usage of torch.autograd.backward in codebase and didn't find any case where Tensor is passed. Maybe it will be a good idea if someone can add a unit test for that if that's supported? otherwise it's hard to guess :)", "in_reply_to_id": 179961722}