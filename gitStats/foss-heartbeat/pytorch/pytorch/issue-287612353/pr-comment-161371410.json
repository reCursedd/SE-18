{"url": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/161371410", "pull_request_review_id": 88656687, "id": 161371410, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE2MTM3MTQxMA==", "diff_hunk": "@@ -0,0 +1,118 @@\n+import torch\n+from torch.autograd import Variable, Function\n+\n+\n+def repackage_inputs(inputs):\n+    if torch.is_tensor(inputs):\n+        return Variable(inputs)\n+    elif isinstance(inputs, tuple):\n+        return tuple(repackage_inputs(v) for v in inputs)\n+    else:\n+        raise RuntimeError(\"Unknown input type\")\n+\n+\n+def unpack_variables(inputs):\n+    if type(inputs) == Variable:\n+        return inputs.data\n+    elif torch.is_tensor(inputs):\n+        return inputs\n+    elif isinstance(inputs, tuple):\n+        return tuple(unpack_variables(v) for v in inputs)\n+    else:\n+        raise RuntimeError(\"Unknown input type\")\n+\n+\n+class CheckpointFunction(Function):\n+\n+    # NOTE: *args is the flat inputs list, args is the tuple containing inputs\n+    @staticmethod\n+    def forward(ctx, run_function, *args):\n+        ctx.run_function = run_function\n+        ctx.save_for_backward(*args)\n+        inputs = repackage_inputs(args)\n+        with torch.no_grad():\n+            outputs = run_function(*inputs)     # the *inputs* is always a tuple\n+        return unpack_variables(outputs)\n+\n+    @staticmethod\n+    def backward(ctx, *args):\n+        saved_inputs = ctx.saved_tensors\n+        inputs = repackage_inputs(saved_inputs)", "path": "torch/utils/checkpoint.py", "position": null, "original_position": 40, "commit_id": "37ee79fe45bdcfd2fb70eccc146369d6c765137e", "original_commit_id": "44577945e1afc25b8eaa32b44b804864ca23be64", "user": {"login": "apaszke", "id": 4583066, "node_id": "MDQ6VXNlcjQ1ODMwNjY=", "avatar_url": "https://avatars3.githubusercontent.com/u/4583066?v=4", "gravatar_id": "", "url": "https://api.github.com/users/apaszke", "html_url": "https://github.com/apaszke", "followers_url": "https://api.github.com/users/apaszke/followers", "following_url": "https://api.github.com/users/apaszke/following{/other_user}", "gists_url": "https://api.github.com/users/apaszke/gists{/gist_id}", "starred_url": "https://api.github.com/users/apaszke/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/apaszke/subscriptions", "organizations_url": "https://api.github.com/users/apaszke/orgs", "repos_url": "https://api.github.com/users/apaszke/repos", "events_url": "https://api.github.com/users/apaszke/events{/privacy}", "received_events_url": "https://api.github.com/users/apaszke/received_events", "type": "User", "site_admin": false}, "body": "Hmm yeah that's because `torch.autograd.grad` requires you to only give Variables that do require grad as its third argument. One way to fix it would be to filter out those that don't, and then reconstruct a list of `grad_inputs` by inserting `None`s in correct places. We won't get correctness checks without it", "created_at": "2018-01-13T12:39:16Z", "updated_at": "2018-11-23T15:38:09Z", "html_url": "https://github.com/pytorch/pytorch/pull/4594#discussion_r161371410", "pull_request_url": "https://api.github.com/repos/pytorch/pytorch/pulls/4594", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/161371410"}, "html": {"href": "https://github.com/pytorch/pytorch/pull/4594#discussion_r161371410"}, "pull_request": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/4594"}}, "body_html": "<p>Hmm yeah that's because <code>torch.autograd.grad</code> requires you to only give Variables that do require grad as its third argument. One way to fix it would be to filter out those that don't, and then reconstruct a list of <code>grad_inputs</code> by inserting <code>None</code>s in correct places. We won't get correctness checks without it</p>", "body_text": "Hmm yeah that's because torch.autograd.grad requires you to only give Variables that do require grad as its third argument. One way to fix it would be to filter out those that don't, and then reconstruct a list of grad_inputs by inserting Nones in correct places. We won't get correctness checks without it", "in_reply_to_id": 161369726}