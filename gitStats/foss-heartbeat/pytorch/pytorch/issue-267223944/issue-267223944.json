{"url": "https://api.github.com/repos/pytorch/pytorch/issues/3204", "repository_url": "https://api.github.com/repos/pytorch/pytorch", "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/3204/labels{/name}", "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/3204/comments", "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/3204/events", "html_url": "https://github.com/pytorch/pytorch/pull/3204", "id": 267223944, "node_id": "MDExOlB1bGxSZXF1ZXN0MTQ3ODM2NjA0", "number": 3204, "title": "Don't resize output in cpu torch.gels", "user": {"login": "zou3519", "id": 5652049, "node_id": "MDQ6VXNlcjU2NTIwNDk=", "avatar_url": "https://avatars3.githubusercontent.com/u/5652049?v=4", "gravatar_id": "", "url": "https://api.github.com/users/zou3519", "html_url": "https://github.com/zou3519", "followers_url": "https://api.github.com/users/zou3519/followers", "following_url": "https://api.github.com/users/zou3519/following{/other_user}", "gists_url": "https://api.github.com/users/zou3519/gists{/gist_id}", "starred_url": "https://api.github.com/users/zou3519/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/zou3519/subscriptions", "organizations_url": "https://api.github.com/users/zou3519/orgs", "repos_url": "https://api.github.com/users/zou3519/repos", "events_url": "https://api.github.com/users/zou3519/events{/privacy}", "received_events_url": "https://api.github.com/users/zou3519/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2017-10-20T16:01:14Z", "updated_at": "2017-10-20T22:43:43Z", "closed_at": "2017-10-20T22:43:43Z", "author_association": "CONTRIBUTOR", "pull_request": {"url": "https://api.github.com/repos/pytorch/pytorch/pulls/3204", "html_url": "https://github.com/pytorch/pytorch/pull/3204", "diff_url": "https://github.com/pytorch/pytorch/pull/3204.diff", "patch_url": "https://github.com/pytorch/pytorch/pull/3204.patch"}, "body_html": "<h3>Summary</h3>\n<p><span class=\"issue-keyword tooltipped tooltipped-se\" aria-label=\"This pull request closes issue #3103.\">Fixes</span> <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load issue title\" data-id=\"265206031\" data-permission-text=\"Issue title is private\" data-url=\"https://github.com/pytorch/pytorch/issues/3103\" data-hovercard-type=\"issue\" data-hovercard-url=\"/pytorch/pytorch/issues/3103/hovercard\" href=\"https://github.com/pytorch/pytorch/issues/3103\">#3103</a>.</p>\n<p>The output of Lapack gels when <code>m &gt; n</code> (where the input matrix <code>A</code> has size <code>m</code> by <code>n</code>) was being resized to <code>n</code> rows. This is a bug because <a href=\"https://software.intel.com/en-us/node/521112\" rel=\"nofollow\">gels returns information in rows n+1 to m of the output</a></p>\n<h3>Test Plan</h3>\n<p>Make sure CPU and GPU <code>gels</code> now return the same output:</p>\n<pre><code>import torch\nb = torch.randn(600,1)\nA = torch.randn(600,2)\nX, _ = torch.gels(b,A)\nY, _ = torch.gels(b.cuda(),A.cuda())\nsum((X - Y.cpu()) ** 2)  # verify this is close to 0\nX.size()  # verify this is (600, 2)\nY.size()  # verify this is (600, 2)\n</code></pre>\n<p>Also added some new unit tests to test the new <code>m &gt; n</code> behavior.</p>", "body_text": "Summary\nFixes #3103.\nThe output of Lapack gels when m > n (where the input matrix A has size m by n) was being resized to n rows. This is a bug because gels returns information in rows n+1 to m of the output\nTest Plan\nMake sure CPU and GPU gels now return the same output:\nimport torch\nb = torch.randn(600,1)\nA = torch.randn(600,2)\nX, _ = torch.gels(b,A)\nY, _ = torch.gels(b.cuda(),A.cuda())\nsum((X - Y.cpu()) ** 2)  # verify this is close to 0\nX.size()  # verify this is (600, 2)\nY.size()  # verify this is (600, 2)\n\nAlso added some new unit tests to test the new m > n behavior.", "body": "### Summary\r\nFixes https://github.com/pytorch/pytorch/issues/3103.\r\n\r\nThe output of Lapack gels when `m > n` (where the input matrix `A` has size `m` by `n`) was being resized to `n` rows. This is a bug because [gels returns information in rows n+1 to m of the output](https://software.intel.com/en-us/node/521112)\r\n\r\n### Test Plan\r\nMake sure CPU and GPU `gels` now return the same output:\r\n```\r\nimport torch\r\nb = torch.randn(600,1)\r\nA = torch.randn(600,2)\r\nX, _ = torch.gels(b,A)\r\nY, _ = torch.gels(b.cuda(),A.cuda())\r\nsum((X - Y.cpu()) ** 2)  # verify this is close to 0\r\nX.size()  # verify this is (600, 2)\r\nY.size()  # verify this is (600, 2)\r\n```\r\n\r\nAlso added some new unit tests to test the new `m > n` behavior. "}