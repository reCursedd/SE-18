{"url": "https://api.github.com/repos/pytorch/pytorch/issues/7963", "repository_url": "https://api.github.com/repos/pytorch/pytorch", "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/7963/labels{/name}", "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/7963/comments", "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/7963/events", "html_url": "https://github.com/pytorch/pytorch/issues/7963", "id": 327894955, "node_id": "MDU6SXNzdWUzMjc4OTQ5NTU=", "number": 7963, "title": "[Caffe2][Bug report] Compiling for source on macOS for python3 gives Symbol not found: _PyCObject_Type in caffe2_pybind11_state.cpython-36m-darwin.so", "user": {"login": "lillekemiker", "id": 11468493, "node_id": "MDQ6VXNlcjExNDY4NDkz", "avatar_url": "https://avatars1.githubusercontent.com/u/11468493?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lillekemiker", "html_url": "https://github.com/lillekemiker", "followers_url": "https://api.github.com/users/lillekemiker/followers", "following_url": "https://api.github.com/users/lillekemiker/following{/other_user}", "gists_url": "https://api.github.com/users/lillekemiker/gists{/gist_id}", "starred_url": "https://api.github.com/users/lillekemiker/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lillekemiker/subscriptions", "organizations_url": "https://api.github.com/users/lillekemiker/orgs", "repos_url": "https://api.github.com/users/lillekemiker/repos", "events_url": "https://api.github.com/users/lillekemiker/events{/privacy}", "received_events_url": "https://api.github.com/users/lillekemiker/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 890282107, "node_id": "MDU6TGFiZWw4OTAyODIxMDc=", "url": "https://api.github.com/repos/pytorch/pytorch/labels/caffe2", "name": "caffe2", "color": "210aa8", "default": false}], "state": "closed", "locked": false, "assignee": {"login": "pjh5", "id": 6456020, "node_id": "MDQ6VXNlcjY0NTYwMjA=", "avatar_url": "https://avatars1.githubusercontent.com/u/6456020?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pjh5", "html_url": "https://github.com/pjh5", "followers_url": "https://api.github.com/users/pjh5/followers", "following_url": "https://api.github.com/users/pjh5/following{/other_user}", "gists_url": "https://api.github.com/users/pjh5/gists{/gist_id}", "starred_url": "https://api.github.com/users/pjh5/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pjh5/subscriptions", "organizations_url": "https://api.github.com/users/pjh5/orgs", "repos_url": "https://api.github.com/users/pjh5/repos", "events_url": "https://api.github.com/users/pjh5/events{/privacy}", "received_events_url": "https://api.github.com/users/pjh5/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "pjh5", "id": 6456020, "node_id": "MDQ6VXNlcjY0NTYwMjA=", "avatar_url": "https://avatars1.githubusercontent.com/u/6456020?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pjh5", "html_url": "https://github.com/pjh5", "followers_url": "https://api.github.com/users/pjh5/followers", "following_url": "https://api.github.com/users/pjh5/following{/other_user}", "gists_url": "https://api.github.com/users/pjh5/gists{/gist_id}", "starred_url": "https://api.github.com/users/pjh5/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pjh5/subscriptions", "organizations_url": "https://api.github.com/users/pjh5/orgs", "repos_url": "https://api.github.com/users/pjh5/repos", "events_url": "https://api.github.com/users/pjh5/events{/privacy}", "received_events_url": "https://api.github.com/users/pjh5/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 15, "created_at": "2018-05-30T20:53:03Z", "updated_at": "2018-06-14T16:28:08Z", "closed_at": "2018-06-14T16:28:07Z", "author_association": "NONE", "body_html": "<h2>Issue description</h2>\n<p>Compiling for source on macOS for python3 seemingly succeeds but produces a faulty installation.<br>\n(current master commit: <a class=\"commit-link\" data-hovercard-type=\"commit\" data-hovercard-url=\"https://github.com/pytorch/pytorch/commit/f8e83dc257fbebc6988a174e18b87a4c00801fbc/hovercard\" href=\"https://github.com/pytorch/pytorch/commit/f8e83dc257fbebc6988a174e18b87a4c00801fbc\"><tt>f8e83dc</tt></a>)</p>\n<h2>Code example</h2>\n<p>Follow instructions from <a href=\"https://caffe2.ai/docs/getting-started.html?platform=mac&amp;configuration=compile#brew-and-pip-install-path\" rel=\"nofollow\">documentation</a>:<br>\n(python2 and python3 already installed  through homebrew)</p>\n<pre><code>$ which python  # returns symlink to python3 executable\n$ brew install automake cmake git gflags glog\n$ sudo -H pip install \\\n    future leveldb numpy protobuf pydot python-gflags pyyaml scikit-image six\n$ git clone --recursive https://github.com/pytorch/pytorch.git &amp;&amp; cd pytorch\n$ git submodule update --init\n$ mkdir build &amp;&amp; cd build\n$ cmake ..\n$ sudo make install  # Installs to /usr/local/lib/python3.6/site-packages/\n\n$ make test  # succeeds!\n\n$ cd ~ &amp;&amp; python -c 'from caffe2.python import core'\n    WARNING:root:This caffe2 python run does not have GPU support. Will run in CPU only mode.\n    WARNING:root:Debug message: No module named 'caffe2.python.caffe2_pybind11_state_gpu'\n    CRITICAL:root:Cannot load caffe2.python. Error: dlopen(/usr/local/lib/python3.6/site-packages/caffe2/python/caffe2_pybind11_state.cpython-36m-darwin.so, 10): Symbol not found: _PyCObject_Type\n      Referenced from: /usr/local/lib/python3.6/site-packages/caffe2/python/caffe2_pybind11_state.cpython-36m-darwin.so\n      Expected in: flat namespace\n</code></pre>\n<p>in /usr/local/lib/python3.6/site-packages/caffe2/python/caffe2_pybind11_state.cpython-36m-darwin.so</p>\n<p>Changing <code>python</code> to point to the python2 executable instead yields a functioning python2 installation of caffe2.</p>\n<h2>System Info</h2>\n<p>(python collect_env.py fails with ImportError: No module named torch )</p>\n<ul>\n<li>PyTorch or Caffe2: Caffe2</li>\n<li>How you installed PyTorch (conda, pip, source): source</li>\n<li>Build command you used (if compiling from source): see above</li>\n<li>OS: macOS Sierra 10.12.6 (16G1314)</li>\n<li>PyTorch version: N/A</li>\n<li>Python version: 3.6.4</li>\n<li>CUDA/cuDNN version: N/A</li>\n<li>GPU models and configuration: N/A</li>\n<li>GCC version (if compiling from source): AppleClang 9.0.0.9000039</li>\n<li>CMake version: 3.11.2</li>\n<li>Versions of any other relevant libraries: N/A</li>\n</ul>\n<h4>CMake output:</h4>\n<pre><code>-- The CXX compiler identification is AppleClang 9.0.0.9000039\n-- The C compiler identification is AppleClang 9.0.0.9000039\n-- Check for working CXX compiler: /Library/Developer/CommandLineTools/usr/bin/c++\n-- Check for working CXX compiler: /Library/Developer/CommandLineTools/usr/bin/c++ -- works\n-- Detecting CXX compiler ABI info\n-- Detecting CXX compiler ABI info - done\n-- Detecting CXX compile features\n-- Detecting CXX compile features - done\n-- Check for working C compiler: /Library/Developer/CommandLineTools/usr/bin/cc\n-- Check for working C compiler: /Library/Developer/CommandLineTools/usr/bin/cc -- works\n-- Detecting C compiler ABI info\n-- Detecting C compiler ABI info - done\n-- Detecting C compile features\n-- Detecting C compile features - done\n-- Not forcing any particular BLAS to be found\n-- Build type not set - defaulting to Release\n-- Performing Test CAFFE2_LONG_IS_INT32_OR_64\n-- Performing Test CAFFE2_LONG_IS_INT32_OR_64 - Failed\n-- Need to define long as a separate typeid.\n-- Performing Test CAFFE2_EXCEPTION_PTR_SUPPORTED\n-- Performing Test CAFFE2_EXCEPTION_PTR_SUPPORTED - Success\n-- std::exception_ptr is supported.\n-- Performing Test CAFFE2_IS_NUMA_AVAILABLE\n-- Performing Test CAFFE2_IS_NUMA_AVAILABLE - Failed\n-- NUMA is not available\n-- Performing Test CAFFE2_NEED_TO_TURN_OFF_DEPRECATION_WARNING\n-- Performing Test CAFFE2_NEED_TO_TURN_OFF_DEPRECATION_WARNING - Success\n-- Performing Test CAFFE2_COMPILER_SUPPORTS_AVX2_EXTENSIONS\n-- Performing Test CAFFE2_COMPILER_SUPPORTS_AVX2_EXTENSIONS - Success\n-- Current compiler supports avx2 extention. Will build perfkernels.\n-- Performing Test COMPILER_SUPPORTS_HIDDEN_VISIBILITY\n-- Performing Test COMPILER_SUPPORTS_HIDDEN_VISIBILITY - Success\n-- Performing Test COMPILER_SUPPORTS_HIDDEN_INLINE_VISIBILITY\n-- Performing Test COMPILER_SUPPORTS_HIDDEN_INLINE_VISIBILITY - Success\n-- Building using own protobuf under third_party per request.\n-- Use custom protobuf build.\n-- Looking for pthread.h\n-- Looking for pthread.h - found\n-- Looking for pthread_create\n-- Looking for pthread_create - found\n-- Found Threads: TRUE  \n-- Caffe2 protobuf include directory: $&lt;BUILD_INTERFACE:/Users/martink/git/build/pytorch/third_party/protobuf/src&gt;$&lt;INSTALL_INTERFACE:include&gt;\n-- Found Git: /usr/local/bin/git (found version \"2.16.1\") \n-- The BLAS backend of choice:Eigen\n-- Brace yourself, we are building NNPACK\n-- The ASM compiler identification is AppleClang\n-- Found assembler: /Library/Developer/CommandLineTools/usr/bin/cc\n-- Found PythonInterp: /usr/local/bin/python (found version \"2.7.14\") \n-- Caffe2: Found gflags with new-style gflags target.\n-- Caffe2: Found glog with new-style glog target.\n-- Failed to find LLVM FileCheck\n-- git Version: v0.0.0\n-- Version: 0.0.0\n-- Performing Test HAVE_CXX_FLAG_STD_CXX11\n-- Performing Test HAVE_CXX_FLAG_STD_CXX11 - Success\n-- Performing Test HAVE_CXX_FLAG_WALL\n-- Performing Test HAVE_CXX_FLAG_WALL - Success\n-- Performing Test HAVE_CXX_FLAG_WEXTRA\n-- Performing Test HAVE_CXX_FLAG_WEXTRA - Success\n-- Performing Test HAVE_CXX_FLAG_WSHADOW\n-- Performing Test HAVE_CXX_FLAG_WSHADOW - Success\n-- Performing Test HAVE_CXX_FLAG_WERROR\n-- Performing Test HAVE_CXX_FLAG_WERROR - Success\n-- Performing Test HAVE_CXX_FLAG_PEDANTIC\n-- Performing Test HAVE_CXX_FLAG_PEDANTIC - Success\n-- Performing Test HAVE_CXX_FLAG_PEDANTIC_ERRORS\n-- Performing Test HAVE_CXX_FLAG_PEDANTIC_ERRORS - Success\n-- Performing Test HAVE_CXX_FLAG_WSHORTEN_64_TO_32\n-- Performing Test HAVE_CXX_FLAG_WSHORTEN_64_TO_32 - Success\n-- Performing Test HAVE_CXX_FLAG_WFLOAT_EQUAL\n-- Performing Test HAVE_CXX_FLAG_WFLOAT_EQUAL - Success\n-- Performing Test HAVE_CXX_FLAG_FSTRICT_ALIASING\n-- Performing Test HAVE_CXX_FLAG_FSTRICT_ALIASING - Success\n-- Performing Test HAVE_CXX_FLAG_WSTRICT_ALIASING\n-- Performing Test HAVE_CXX_FLAG_WSTRICT_ALIASING - Success\n-- Performing Test HAVE_CXX_FLAG_WD654\n-- Performing Test HAVE_CXX_FLAG_WD654 - Failed\n-- Performing Test HAVE_CXX_FLAG_WTHREAD_SAFETY\n-- Performing Test HAVE_CXX_FLAG_WTHREAD_SAFETY - Success\n-- Performing Test HAVE_THREAD_SAFETY_ATTRIBUTES\n-- Performing Test HAVE_THREAD_SAFETY_ATTRIBUTES\n-- Performing Test HAVE_THREAD_SAFETY_ATTRIBUTES -- failed to compile\n-- Performing Test HAVE_CXX_FLAG_COVERAGE\n-- Performing Test HAVE_CXX_FLAG_COVERAGE - Success\n-- Performing Test HAVE_STD_REGEX\n-- Performing Test HAVE_STD_REGEX\n-- Performing Test HAVE_STD_REGEX -- success\n-- Performing Test HAVE_GNU_POSIX_REGEX\n-- Performing Test HAVE_GNU_POSIX_REGEX\n-- Performing Test HAVE_GNU_POSIX_REGEX -- failed to compile\n-- Performing Test HAVE_POSIX_REGEX\n-- Performing Test HAVE_POSIX_REGEX\n-- Performing Test HAVE_POSIX_REGEX -- success\n-- Performing Test HAVE_STEADY_CLOCK\n-- Performing Test HAVE_STEADY_CLOCK\n-- Performing Test HAVE_STEADY_CLOCK -- success\n-- Found LMDB: /usr/local/include  \n-- Found lmdb    (include: /usr/local/include, library: /usr/local/lib/liblmdb.dylib)\n-- Found LevelDB: /usr/local/include  \n-- Found LevelDB (include: /usr/local/include, library: /usr/local/lib/libleveldb.dylib)\n-- Found Snappy: /usr/local/include  \n-- Found Snappy  (include: /usr/local/include, library: /usr/local/lib/libsnappy.dylib)\nCMake Warning at cmake/Dependencies.cmake:235 (message):\n  NUMA is currently only supported under Linux.\nCall Stack (most recent call first):\n  CMakeLists.txt:192 (include)\n\n\n-- OpenCV found (/usr/local/share/OpenCV)\n-- Found system Eigen at /usr/local/include/eigen3\n-- Found PythonInterp: /usr/local/bin/python (found suitable version \"2.7.14\", minimum required is \"2.7\") \n-- Found PythonLibs: /usr/lib/libpython2.7.dylib (found suitable version \"2.7.10\", minimum required is \"2.7\") \n-- Found NumPy: /usr/local/lib/python2.7/site-packages/numpy/core/include (found version \"1.14.1\") \n-- NumPy ver. 1.14.1 found (include: /usr/local/lib/python2.7/site-packages/numpy/core/include)\n-- Could NOT find pybind11 (missing: pybind11_INCLUDE_DIR) \n-- Could NOT find MPI_C (missing: MPI_C_LIB_NAMES MPI_C_HEADER_DIR MPI_C_WORKS) \n-- Could NOT find MPI_CXX (missing: MPI_CXX_LIB_NAMES MPI_CXX_HEADER_DIR MPI_CXX_WORKS) \n-- Could NOT find MPI (missing: MPI_C_FOUND MPI_CXX_FOUND) \nCMake Warning at cmake/Dependencies.cmake:369 (message):\n  Not compiling with MPI.  Suppress this warning with -DUSE_MPI=OFF\nCall Stack (most recent call first):\n  CMakeLists.txt:192 (include)\n\n\nCUDA_TOOLKIT_ROOT_DIR not found or specified\n-- Could NOT find CUDA (missing: CUDA_TOOLKIT_ROOT_DIR CUDA_NVCC_EXECUTABLE CUDA_INCLUDE_DIRS CUDA_CUDART_LIBRARY) (Required is at least version \"7.0\")\nCMake Warning at cmake/public/cuda.cmake:9 (message):\n  Caffe2: CUDA cannot be found.  Depending on whether you are building Caffe2\n  or a Caffe2 dependent library, the next warning / error will give you more\n  info.\nCall Stack (most recent call first):\n  cmake/Dependencies.cmake:396 (include)\n  CMakeLists.txt:192 (include)\n\n\nCMake Warning at cmake/Dependencies.cmake:434 (message):\n  Not compiling with CUDA.  Suppress this warning with -DUSE_CUDA=OFF.\nCall Stack (most recent call first):\n  CMakeLists.txt:192 (include)\n\n\nCMake Warning at cmake/Dependencies.cmake:464 (message):\n  Not using CUDA, so disabling NCCL.  Suppress this warning with\n  -DUSE_NCCL=OFF.\nCall Stack (most recent call first):\n  CMakeLists.txt:192 (include)\n\n\nCMake Warning at cmake/Dependencies.cmake:491 (message):\n  Gloo can only be used on Linux.\nCall Stack (most recent call first):\n  CMakeLists.txt:192 (include)\n\n\nCMake Warning at cmake/Dependencies.cmake:551 (message):\n  mobile opengl is only used in android or ios builds.\nCall Stack (most recent call first):\n  CMakeLists.txt:192 (include)\n\n\nCMake Warning at cmake/Dependencies.cmake:627 (message):\n  Metal is only used in ios builds.\nCall Stack (most recent call first):\n  CMakeLists.txt:192 (include)\n\n\n-- NCCL operators skipped due to no CUDA support\n-- CUDA RTC operators skipped due to no CUDA support\n-- Excluding ideep operators as we are not using ideep\n-- Including image processing operators\n-- Excluding video processing operators due to no opencv\n-- Excluding mkl operators as we are not using mkl\n-- MPI operators skipped due to no MPI support\n-- Include Observer library\n-- Using lib/python2.7/site-packages as python relative installation path\n-- Automatically generating missing __init__.py files.\nCMake Warning at CMakeLists.txt:322 (message):\n  Generated cmake files are only fully tested if one builds with system glog,\n  gflags, and protobuf.  Other settings may generate files that are not well\n  tested.\n\n\n-- \n-- ******** Summary ********\n-- General:\n--   CMake version         : 3.11.2\n--   CMake command         : /usr/local/Cellar/cmake/3.11.2/bin/cmake\n--   Git version           : v0.1.11-8608-gf8e83dc25\n--   System                : Darwin\n--   C++ compiler          : /Library/Developer/CommandLineTools/usr/bin/c++\n--   C++ compiler version  : 9.0.0.9000039\n--   BLAS                  : Eigen\n--   CXX flags             :  -fvisibility-inlines-hidden -Wno-deprecated-declarations -DONNX_NAMESPACE=onnx_c2 -O2 -fPIC -Wno-narrowing -Wno-invalid-partial-specialization\n--   Build type            : Release\n--   Compile definitions   : \n-- \n--   BUILD_CAFFE2          : ON\n--   BUILD_ATEN            : OFF\n--   BUILD_BINARY          : ON\n--   BUILD_CUSTOM_PROTOBUF : ON\n--     Link local protobuf : ON\n--   BUILD_DOCS            : OFF\n--   BUILD_PYTHON          : ON\n--     Python version      : 2.7.10\n--     Python includes     : /usr/include/python2.7\n--   BUILD_SHARED_LIBS     : ON\n--   BUILD_TEST            : ON\n--   USE_ASAN              : OFF\n--   USE_CUDA              : OFF\n--   USE_ROCM              : OFF\n--   USE_EIGEN_FOR_BLAS    : ON\n--   USE_FFMPEG            : OFF\n--   USE_GFLAGS            : ON\n--   USE_GLOG              : ON\n--   USE_GLOO              : OFF\n--   USE_LEVELDB           : ON\n--     LevelDB version     : 1.20\n--     Snappy version      : 1.1.7\n--   USE_LITE_PROTO        : OFF\n--   USE_LMDB              : ON\n--     LMDB version        : 0.9.21\n--   USE_METAL             : OFF\n--   USE_MKL               : \n--   USE_MOBILE_OPENGL     : OFF\n--   USE_MPI               : OFF\n--   USE_NCCL              : OFF\n--   USE_NERVANA_GPU       : OFF\n--   USE_NNPACK            : ON\n--   USE_OBSERVERS         : ON\n--   USE_OPENCL            : OFF\n--   USE_OPENCV            : ON\n--     OpenCV version      : 3.4.0\n--   USE_OPENMP            : OFF\n--   USE_PROF              : OFF\n--   USE_REDIS             : OFF\n--   USE_ROCKSDB           : OFF\n--   USE_ZMQ               : OFF\n-- Configuring done\n-- Generating done\n-- Build files have been written to: /Users/martink/git/build/pytorch/build\n</code></pre>", "body_text": "Issue description\nCompiling for source on macOS for python3 seemingly succeeds but produces a faulty installation.\n(current master commit: f8e83dc)\nCode example\nFollow instructions from documentation:\n(python2 and python3 already installed  through homebrew)\n$ which python  # returns symlink to python3 executable\n$ brew install automake cmake git gflags glog\n$ sudo -H pip install \\\n    future leveldb numpy protobuf pydot python-gflags pyyaml scikit-image six\n$ git clone --recursive https://github.com/pytorch/pytorch.git && cd pytorch\n$ git submodule update --init\n$ mkdir build && cd build\n$ cmake ..\n$ sudo make install  # Installs to /usr/local/lib/python3.6/site-packages/\n\n$ make test  # succeeds!\n\n$ cd ~ && python -c 'from caffe2.python import core'\n    WARNING:root:This caffe2 python run does not have GPU support. Will run in CPU only mode.\n    WARNING:root:Debug message: No module named 'caffe2.python.caffe2_pybind11_state_gpu'\n    CRITICAL:root:Cannot load caffe2.python. Error: dlopen(/usr/local/lib/python3.6/site-packages/caffe2/python/caffe2_pybind11_state.cpython-36m-darwin.so, 10): Symbol not found: _PyCObject_Type\n      Referenced from: /usr/local/lib/python3.6/site-packages/caffe2/python/caffe2_pybind11_state.cpython-36m-darwin.so\n      Expected in: flat namespace\n\nin /usr/local/lib/python3.6/site-packages/caffe2/python/caffe2_pybind11_state.cpython-36m-darwin.so\nChanging python to point to the python2 executable instead yields a functioning python2 installation of caffe2.\nSystem Info\n(python collect_env.py fails with ImportError: No module named torch )\n\nPyTorch or Caffe2: Caffe2\nHow you installed PyTorch (conda, pip, source): source\nBuild command you used (if compiling from source): see above\nOS: macOS Sierra 10.12.6 (16G1314)\nPyTorch version: N/A\nPython version: 3.6.4\nCUDA/cuDNN version: N/A\nGPU models and configuration: N/A\nGCC version (if compiling from source): AppleClang 9.0.0.9000039\nCMake version: 3.11.2\nVersions of any other relevant libraries: N/A\n\nCMake output:\n-- The CXX compiler identification is AppleClang 9.0.0.9000039\n-- The C compiler identification is AppleClang 9.0.0.9000039\n-- Check for working CXX compiler: /Library/Developer/CommandLineTools/usr/bin/c++\n-- Check for working CXX compiler: /Library/Developer/CommandLineTools/usr/bin/c++ -- works\n-- Detecting CXX compiler ABI info\n-- Detecting CXX compiler ABI info - done\n-- Detecting CXX compile features\n-- Detecting CXX compile features - done\n-- Check for working C compiler: /Library/Developer/CommandLineTools/usr/bin/cc\n-- Check for working C compiler: /Library/Developer/CommandLineTools/usr/bin/cc -- works\n-- Detecting C compiler ABI info\n-- Detecting C compiler ABI info - done\n-- Detecting C compile features\n-- Detecting C compile features - done\n-- Not forcing any particular BLAS to be found\n-- Build type not set - defaulting to Release\n-- Performing Test CAFFE2_LONG_IS_INT32_OR_64\n-- Performing Test CAFFE2_LONG_IS_INT32_OR_64 - Failed\n-- Need to define long as a separate typeid.\n-- Performing Test CAFFE2_EXCEPTION_PTR_SUPPORTED\n-- Performing Test CAFFE2_EXCEPTION_PTR_SUPPORTED - Success\n-- std::exception_ptr is supported.\n-- Performing Test CAFFE2_IS_NUMA_AVAILABLE\n-- Performing Test CAFFE2_IS_NUMA_AVAILABLE - Failed\n-- NUMA is not available\n-- Performing Test CAFFE2_NEED_TO_TURN_OFF_DEPRECATION_WARNING\n-- Performing Test CAFFE2_NEED_TO_TURN_OFF_DEPRECATION_WARNING - Success\n-- Performing Test CAFFE2_COMPILER_SUPPORTS_AVX2_EXTENSIONS\n-- Performing Test CAFFE2_COMPILER_SUPPORTS_AVX2_EXTENSIONS - Success\n-- Current compiler supports avx2 extention. Will build perfkernels.\n-- Performing Test COMPILER_SUPPORTS_HIDDEN_VISIBILITY\n-- Performing Test COMPILER_SUPPORTS_HIDDEN_VISIBILITY - Success\n-- Performing Test COMPILER_SUPPORTS_HIDDEN_INLINE_VISIBILITY\n-- Performing Test COMPILER_SUPPORTS_HIDDEN_INLINE_VISIBILITY - Success\n-- Building using own protobuf under third_party per request.\n-- Use custom protobuf build.\n-- Looking for pthread.h\n-- Looking for pthread.h - found\n-- Looking for pthread_create\n-- Looking for pthread_create - found\n-- Found Threads: TRUE  \n-- Caffe2 protobuf include directory: $<BUILD_INTERFACE:/Users/martink/git/build/pytorch/third_party/protobuf/src>$<INSTALL_INTERFACE:include>\n-- Found Git: /usr/local/bin/git (found version \"2.16.1\") \n-- The BLAS backend of choice:Eigen\n-- Brace yourself, we are building NNPACK\n-- The ASM compiler identification is AppleClang\n-- Found assembler: /Library/Developer/CommandLineTools/usr/bin/cc\n-- Found PythonInterp: /usr/local/bin/python (found version \"2.7.14\") \n-- Caffe2: Found gflags with new-style gflags target.\n-- Caffe2: Found glog with new-style glog target.\n-- Failed to find LLVM FileCheck\n-- git Version: v0.0.0\n-- Version: 0.0.0\n-- Performing Test HAVE_CXX_FLAG_STD_CXX11\n-- Performing Test HAVE_CXX_FLAG_STD_CXX11 - Success\n-- Performing Test HAVE_CXX_FLAG_WALL\n-- Performing Test HAVE_CXX_FLAG_WALL - Success\n-- Performing Test HAVE_CXX_FLAG_WEXTRA\n-- Performing Test HAVE_CXX_FLAG_WEXTRA - Success\n-- Performing Test HAVE_CXX_FLAG_WSHADOW\n-- Performing Test HAVE_CXX_FLAG_WSHADOW - Success\n-- Performing Test HAVE_CXX_FLAG_WERROR\n-- Performing Test HAVE_CXX_FLAG_WERROR - Success\n-- Performing Test HAVE_CXX_FLAG_PEDANTIC\n-- Performing Test HAVE_CXX_FLAG_PEDANTIC - Success\n-- Performing Test HAVE_CXX_FLAG_PEDANTIC_ERRORS\n-- Performing Test HAVE_CXX_FLAG_PEDANTIC_ERRORS - Success\n-- Performing Test HAVE_CXX_FLAG_WSHORTEN_64_TO_32\n-- Performing Test HAVE_CXX_FLAG_WSHORTEN_64_TO_32 - Success\n-- Performing Test HAVE_CXX_FLAG_WFLOAT_EQUAL\n-- Performing Test HAVE_CXX_FLAG_WFLOAT_EQUAL - Success\n-- Performing Test HAVE_CXX_FLAG_FSTRICT_ALIASING\n-- Performing Test HAVE_CXX_FLAG_FSTRICT_ALIASING - Success\n-- Performing Test HAVE_CXX_FLAG_WSTRICT_ALIASING\n-- Performing Test HAVE_CXX_FLAG_WSTRICT_ALIASING - Success\n-- Performing Test HAVE_CXX_FLAG_WD654\n-- Performing Test HAVE_CXX_FLAG_WD654 - Failed\n-- Performing Test HAVE_CXX_FLAG_WTHREAD_SAFETY\n-- Performing Test HAVE_CXX_FLAG_WTHREAD_SAFETY - Success\n-- Performing Test HAVE_THREAD_SAFETY_ATTRIBUTES\n-- Performing Test HAVE_THREAD_SAFETY_ATTRIBUTES\n-- Performing Test HAVE_THREAD_SAFETY_ATTRIBUTES -- failed to compile\n-- Performing Test HAVE_CXX_FLAG_COVERAGE\n-- Performing Test HAVE_CXX_FLAG_COVERAGE - Success\n-- Performing Test HAVE_STD_REGEX\n-- Performing Test HAVE_STD_REGEX\n-- Performing Test HAVE_STD_REGEX -- success\n-- Performing Test HAVE_GNU_POSIX_REGEX\n-- Performing Test HAVE_GNU_POSIX_REGEX\n-- Performing Test HAVE_GNU_POSIX_REGEX -- failed to compile\n-- Performing Test HAVE_POSIX_REGEX\n-- Performing Test HAVE_POSIX_REGEX\n-- Performing Test HAVE_POSIX_REGEX -- success\n-- Performing Test HAVE_STEADY_CLOCK\n-- Performing Test HAVE_STEADY_CLOCK\n-- Performing Test HAVE_STEADY_CLOCK -- success\n-- Found LMDB: /usr/local/include  \n-- Found lmdb    (include: /usr/local/include, library: /usr/local/lib/liblmdb.dylib)\n-- Found LevelDB: /usr/local/include  \n-- Found LevelDB (include: /usr/local/include, library: /usr/local/lib/libleveldb.dylib)\n-- Found Snappy: /usr/local/include  \n-- Found Snappy  (include: /usr/local/include, library: /usr/local/lib/libsnappy.dylib)\nCMake Warning at cmake/Dependencies.cmake:235 (message):\n  NUMA is currently only supported under Linux.\nCall Stack (most recent call first):\n  CMakeLists.txt:192 (include)\n\n\n-- OpenCV found (/usr/local/share/OpenCV)\n-- Found system Eigen at /usr/local/include/eigen3\n-- Found PythonInterp: /usr/local/bin/python (found suitable version \"2.7.14\", minimum required is \"2.7\") \n-- Found PythonLibs: /usr/lib/libpython2.7.dylib (found suitable version \"2.7.10\", minimum required is \"2.7\") \n-- Found NumPy: /usr/local/lib/python2.7/site-packages/numpy/core/include (found version \"1.14.1\") \n-- NumPy ver. 1.14.1 found (include: /usr/local/lib/python2.7/site-packages/numpy/core/include)\n-- Could NOT find pybind11 (missing: pybind11_INCLUDE_DIR) \n-- Could NOT find MPI_C (missing: MPI_C_LIB_NAMES MPI_C_HEADER_DIR MPI_C_WORKS) \n-- Could NOT find MPI_CXX (missing: MPI_CXX_LIB_NAMES MPI_CXX_HEADER_DIR MPI_CXX_WORKS) \n-- Could NOT find MPI (missing: MPI_C_FOUND MPI_CXX_FOUND) \nCMake Warning at cmake/Dependencies.cmake:369 (message):\n  Not compiling with MPI.  Suppress this warning with -DUSE_MPI=OFF\nCall Stack (most recent call first):\n  CMakeLists.txt:192 (include)\n\n\nCUDA_TOOLKIT_ROOT_DIR not found or specified\n-- Could NOT find CUDA (missing: CUDA_TOOLKIT_ROOT_DIR CUDA_NVCC_EXECUTABLE CUDA_INCLUDE_DIRS CUDA_CUDART_LIBRARY) (Required is at least version \"7.0\")\nCMake Warning at cmake/public/cuda.cmake:9 (message):\n  Caffe2: CUDA cannot be found.  Depending on whether you are building Caffe2\n  or a Caffe2 dependent library, the next warning / error will give you more\n  info.\nCall Stack (most recent call first):\n  cmake/Dependencies.cmake:396 (include)\n  CMakeLists.txt:192 (include)\n\n\nCMake Warning at cmake/Dependencies.cmake:434 (message):\n  Not compiling with CUDA.  Suppress this warning with -DUSE_CUDA=OFF.\nCall Stack (most recent call first):\n  CMakeLists.txt:192 (include)\n\n\nCMake Warning at cmake/Dependencies.cmake:464 (message):\n  Not using CUDA, so disabling NCCL.  Suppress this warning with\n  -DUSE_NCCL=OFF.\nCall Stack (most recent call first):\n  CMakeLists.txt:192 (include)\n\n\nCMake Warning at cmake/Dependencies.cmake:491 (message):\n  Gloo can only be used on Linux.\nCall Stack (most recent call first):\n  CMakeLists.txt:192 (include)\n\n\nCMake Warning at cmake/Dependencies.cmake:551 (message):\n  mobile opengl is only used in android or ios builds.\nCall Stack (most recent call first):\n  CMakeLists.txt:192 (include)\n\n\nCMake Warning at cmake/Dependencies.cmake:627 (message):\n  Metal is only used in ios builds.\nCall Stack (most recent call first):\n  CMakeLists.txt:192 (include)\n\n\n-- NCCL operators skipped due to no CUDA support\n-- CUDA RTC operators skipped due to no CUDA support\n-- Excluding ideep operators as we are not using ideep\n-- Including image processing operators\n-- Excluding video processing operators due to no opencv\n-- Excluding mkl operators as we are not using mkl\n-- MPI operators skipped due to no MPI support\n-- Include Observer library\n-- Using lib/python2.7/site-packages as python relative installation path\n-- Automatically generating missing __init__.py files.\nCMake Warning at CMakeLists.txt:322 (message):\n  Generated cmake files are only fully tested if one builds with system glog,\n  gflags, and protobuf.  Other settings may generate files that are not well\n  tested.\n\n\n-- \n-- ******** Summary ********\n-- General:\n--   CMake version         : 3.11.2\n--   CMake command         : /usr/local/Cellar/cmake/3.11.2/bin/cmake\n--   Git version           : v0.1.11-8608-gf8e83dc25\n--   System                : Darwin\n--   C++ compiler          : /Library/Developer/CommandLineTools/usr/bin/c++\n--   C++ compiler version  : 9.0.0.9000039\n--   BLAS                  : Eigen\n--   CXX flags             :  -fvisibility-inlines-hidden -Wno-deprecated-declarations -DONNX_NAMESPACE=onnx_c2 -O2 -fPIC -Wno-narrowing -Wno-invalid-partial-specialization\n--   Build type            : Release\n--   Compile definitions   : \n-- \n--   BUILD_CAFFE2          : ON\n--   BUILD_ATEN            : OFF\n--   BUILD_BINARY          : ON\n--   BUILD_CUSTOM_PROTOBUF : ON\n--     Link local protobuf : ON\n--   BUILD_DOCS            : OFF\n--   BUILD_PYTHON          : ON\n--     Python version      : 2.7.10\n--     Python includes     : /usr/include/python2.7\n--   BUILD_SHARED_LIBS     : ON\n--   BUILD_TEST            : ON\n--   USE_ASAN              : OFF\n--   USE_CUDA              : OFF\n--   USE_ROCM              : OFF\n--   USE_EIGEN_FOR_BLAS    : ON\n--   USE_FFMPEG            : OFF\n--   USE_GFLAGS            : ON\n--   USE_GLOG              : ON\n--   USE_GLOO              : OFF\n--   USE_LEVELDB           : ON\n--     LevelDB version     : 1.20\n--     Snappy version      : 1.1.7\n--   USE_LITE_PROTO        : OFF\n--   USE_LMDB              : ON\n--     LMDB version        : 0.9.21\n--   USE_METAL             : OFF\n--   USE_MKL               : \n--   USE_MOBILE_OPENGL     : OFF\n--   USE_MPI               : OFF\n--   USE_NCCL              : OFF\n--   USE_NERVANA_GPU       : OFF\n--   USE_NNPACK            : ON\n--   USE_OBSERVERS         : ON\n--   USE_OPENCL            : OFF\n--   USE_OPENCV            : ON\n--     OpenCV version      : 3.4.0\n--   USE_OPENMP            : OFF\n--   USE_PROF              : OFF\n--   USE_REDIS             : OFF\n--   USE_ROCKSDB           : OFF\n--   USE_ZMQ               : OFF\n-- Configuring done\n-- Generating done\n-- Build files have been written to: /Users/martink/git/build/pytorch/build", "body": "## Issue description\r\n\r\nCompiling for source on macOS for python3 seemingly succeeds but produces a faulty installation.\r\n(current master commit: f8e83dc257fbebc6988a174e18b87a4c00801fbc)\r\n\r\n## Code example\r\n\r\nFollow instructions from [documentation](https://caffe2.ai/docs/getting-started.html?platform=mac&configuration=compile#brew-and-pip-install-path):\r\n(python2 and python3 already installed  through homebrew)\r\n\r\n    $ which python  # returns symlink to python3 executable\r\n    $ brew install automake cmake git gflags glog\r\n    $ sudo -H pip install \\\r\n        future leveldb numpy protobuf pydot python-gflags pyyaml scikit-image six\r\n    $ git clone --recursive https://github.com/pytorch/pytorch.git && cd pytorch\r\n    $ git submodule update --init\r\n    $ mkdir build && cd build\r\n    $ cmake ..\r\n    $ sudo make install  # Installs to /usr/local/lib/python3.6/site-packages/\r\n\r\n    $ make test  # succeeds!\r\n\r\n    $ cd ~ && python -c 'from caffe2.python import core'\r\n        WARNING:root:This caffe2 python run does not have GPU support. Will run in CPU only mode.\r\n        WARNING:root:Debug message: No module named 'caffe2.python.caffe2_pybind11_state_gpu'\r\n        CRITICAL:root:Cannot load caffe2.python. Error: dlopen(/usr/local/lib/python3.6/site-packages/caffe2/python/caffe2_pybind11_state.cpython-36m-darwin.so, 10): Symbol not found: _PyCObject_Type\r\n          Referenced from: /usr/local/lib/python3.6/site-packages/caffe2/python/caffe2_pybind11_state.cpython-36m-darwin.so\r\n          Expected in: flat namespace\r\n in /usr/local/lib/python3.6/site-packages/caffe2/python/caffe2_pybind11_state.cpython-36m-darwin.so\r\n\r\nChanging `python` to point to the python2 executable instead yields a functioning python2 installation of caffe2.\r\n\r\n## System Info\r\n\r\n(python collect_env.py fails with ImportError: No module named torch )\r\n\r\n- PyTorch or Caffe2: Caffe2\r\n- How you installed PyTorch (conda, pip, source): source\r\n- Build command you used (if compiling from source): see above\r\n- OS: macOS Sierra 10.12.6 (16G1314)\r\n- PyTorch version: N/A\r\n- Python version: 3.6.4\r\n- CUDA/cuDNN version: N/A\r\n- GPU models and configuration: N/A\r\n- GCC version (if compiling from source): AppleClang 9.0.0.9000039\r\n- CMake version: 3.11.2\r\n- Versions of any other relevant libraries: N/A\r\n\r\n#### CMake output:\r\n\r\n```\r\n-- The CXX compiler identification is AppleClang 9.0.0.9000039\r\n-- The C compiler identification is AppleClang 9.0.0.9000039\r\n-- Check for working CXX compiler: /Library/Developer/CommandLineTools/usr/bin/c++\r\n-- Check for working CXX compiler: /Library/Developer/CommandLineTools/usr/bin/c++ -- works\r\n-- Detecting CXX compiler ABI info\r\n-- Detecting CXX compiler ABI info - done\r\n-- Detecting CXX compile features\r\n-- Detecting CXX compile features - done\r\n-- Check for working C compiler: /Library/Developer/CommandLineTools/usr/bin/cc\r\n-- Check for working C compiler: /Library/Developer/CommandLineTools/usr/bin/cc -- works\r\n-- Detecting C compiler ABI info\r\n-- Detecting C compiler ABI info - done\r\n-- Detecting C compile features\r\n-- Detecting C compile features - done\r\n-- Not forcing any particular BLAS to be found\r\n-- Build type not set - defaulting to Release\r\n-- Performing Test CAFFE2_LONG_IS_INT32_OR_64\r\n-- Performing Test CAFFE2_LONG_IS_INT32_OR_64 - Failed\r\n-- Need to define long as a separate typeid.\r\n-- Performing Test CAFFE2_EXCEPTION_PTR_SUPPORTED\r\n-- Performing Test CAFFE2_EXCEPTION_PTR_SUPPORTED - Success\r\n-- std::exception_ptr is supported.\r\n-- Performing Test CAFFE2_IS_NUMA_AVAILABLE\r\n-- Performing Test CAFFE2_IS_NUMA_AVAILABLE - Failed\r\n-- NUMA is not available\r\n-- Performing Test CAFFE2_NEED_TO_TURN_OFF_DEPRECATION_WARNING\r\n-- Performing Test CAFFE2_NEED_TO_TURN_OFF_DEPRECATION_WARNING - Success\r\n-- Performing Test CAFFE2_COMPILER_SUPPORTS_AVX2_EXTENSIONS\r\n-- Performing Test CAFFE2_COMPILER_SUPPORTS_AVX2_EXTENSIONS - Success\r\n-- Current compiler supports avx2 extention. Will build perfkernels.\r\n-- Performing Test COMPILER_SUPPORTS_HIDDEN_VISIBILITY\r\n-- Performing Test COMPILER_SUPPORTS_HIDDEN_VISIBILITY - Success\r\n-- Performing Test COMPILER_SUPPORTS_HIDDEN_INLINE_VISIBILITY\r\n-- Performing Test COMPILER_SUPPORTS_HIDDEN_INLINE_VISIBILITY - Success\r\n-- Building using own protobuf under third_party per request.\r\n-- Use custom protobuf build.\r\n-- Looking for pthread.h\r\n-- Looking for pthread.h - found\r\n-- Looking for pthread_create\r\n-- Looking for pthread_create - found\r\n-- Found Threads: TRUE  \r\n-- Caffe2 protobuf include directory: $<BUILD_INTERFACE:/Users/martink/git/build/pytorch/third_party/protobuf/src>$<INSTALL_INTERFACE:include>\r\n-- Found Git: /usr/local/bin/git (found version \"2.16.1\") \r\n-- The BLAS backend of choice:Eigen\r\n-- Brace yourself, we are building NNPACK\r\n-- The ASM compiler identification is AppleClang\r\n-- Found assembler: /Library/Developer/CommandLineTools/usr/bin/cc\r\n-- Found PythonInterp: /usr/local/bin/python (found version \"2.7.14\") \r\n-- Caffe2: Found gflags with new-style gflags target.\r\n-- Caffe2: Found glog with new-style glog target.\r\n-- Failed to find LLVM FileCheck\r\n-- git Version: v0.0.0\r\n-- Version: 0.0.0\r\n-- Performing Test HAVE_CXX_FLAG_STD_CXX11\r\n-- Performing Test HAVE_CXX_FLAG_STD_CXX11 - Success\r\n-- Performing Test HAVE_CXX_FLAG_WALL\r\n-- Performing Test HAVE_CXX_FLAG_WALL - Success\r\n-- Performing Test HAVE_CXX_FLAG_WEXTRA\r\n-- Performing Test HAVE_CXX_FLAG_WEXTRA - Success\r\n-- Performing Test HAVE_CXX_FLAG_WSHADOW\r\n-- Performing Test HAVE_CXX_FLAG_WSHADOW - Success\r\n-- Performing Test HAVE_CXX_FLAG_WERROR\r\n-- Performing Test HAVE_CXX_FLAG_WERROR - Success\r\n-- Performing Test HAVE_CXX_FLAG_PEDANTIC\r\n-- Performing Test HAVE_CXX_FLAG_PEDANTIC - Success\r\n-- Performing Test HAVE_CXX_FLAG_PEDANTIC_ERRORS\r\n-- Performing Test HAVE_CXX_FLAG_PEDANTIC_ERRORS - Success\r\n-- Performing Test HAVE_CXX_FLAG_WSHORTEN_64_TO_32\r\n-- Performing Test HAVE_CXX_FLAG_WSHORTEN_64_TO_32 - Success\r\n-- Performing Test HAVE_CXX_FLAG_WFLOAT_EQUAL\r\n-- Performing Test HAVE_CXX_FLAG_WFLOAT_EQUAL - Success\r\n-- Performing Test HAVE_CXX_FLAG_FSTRICT_ALIASING\r\n-- Performing Test HAVE_CXX_FLAG_FSTRICT_ALIASING - Success\r\n-- Performing Test HAVE_CXX_FLAG_WSTRICT_ALIASING\r\n-- Performing Test HAVE_CXX_FLAG_WSTRICT_ALIASING - Success\r\n-- Performing Test HAVE_CXX_FLAG_WD654\r\n-- Performing Test HAVE_CXX_FLAG_WD654 - Failed\r\n-- Performing Test HAVE_CXX_FLAG_WTHREAD_SAFETY\r\n-- Performing Test HAVE_CXX_FLAG_WTHREAD_SAFETY - Success\r\n-- Performing Test HAVE_THREAD_SAFETY_ATTRIBUTES\r\n-- Performing Test HAVE_THREAD_SAFETY_ATTRIBUTES\r\n-- Performing Test HAVE_THREAD_SAFETY_ATTRIBUTES -- failed to compile\r\n-- Performing Test HAVE_CXX_FLAG_COVERAGE\r\n-- Performing Test HAVE_CXX_FLAG_COVERAGE - Success\r\n-- Performing Test HAVE_STD_REGEX\r\n-- Performing Test HAVE_STD_REGEX\r\n-- Performing Test HAVE_STD_REGEX -- success\r\n-- Performing Test HAVE_GNU_POSIX_REGEX\r\n-- Performing Test HAVE_GNU_POSIX_REGEX\r\n-- Performing Test HAVE_GNU_POSIX_REGEX -- failed to compile\r\n-- Performing Test HAVE_POSIX_REGEX\r\n-- Performing Test HAVE_POSIX_REGEX\r\n-- Performing Test HAVE_POSIX_REGEX -- success\r\n-- Performing Test HAVE_STEADY_CLOCK\r\n-- Performing Test HAVE_STEADY_CLOCK\r\n-- Performing Test HAVE_STEADY_CLOCK -- success\r\n-- Found LMDB: /usr/local/include  \r\n-- Found lmdb    (include: /usr/local/include, library: /usr/local/lib/liblmdb.dylib)\r\n-- Found LevelDB: /usr/local/include  \r\n-- Found LevelDB (include: /usr/local/include, library: /usr/local/lib/libleveldb.dylib)\r\n-- Found Snappy: /usr/local/include  \r\n-- Found Snappy  (include: /usr/local/include, library: /usr/local/lib/libsnappy.dylib)\r\nCMake Warning at cmake/Dependencies.cmake:235 (message):\r\n  NUMA is currently only supported under Linux.\r\nCall Stack (most recent call first):\r\n  CMakeLists.txt:192 (include)\r\n\r\n\r\n-- OpenCV found (/usr/local/share/OpenCV)\r\n-- Found system Eigen at /usr/local/include/eigen3\r\n-- Found PythonInterp: /usr/local/bin/python (found suitable version \"2.7.14\", minimum required is \"2.7\") \r\n-- Found PythonLibs: /usr/lib/libpython2.7.dylib (found suitable version \"2.7.10\", minimum required is \"2.7\") \r\n-- Found NumPy: /usr/local/lib/python2.7/site-packages/numpy/core/include (found version \"1.14.1\") \r\n-- NumPy ver. 1.14.1 found (include: /usr/local/lib/python2.7/site-packages/numpy/core/include)\r\n-- Could NOT find pybind11 (missing: pybind11_INCLUDE_DIR) \r\n-- Could NOT find MPI_C (missing: MPI_C_LIB_NAMES MPI_C_HEADER_DIR MPI_C_WORKS) \r\n-- Could NOT find MPI_CXX (missing: MPI_CXX_LIB_NAMES MPI_CXX_HEADER_DIR MPI_CXX_WORKS) \r\n-- Could NOT find MPI (missing: MPI_C_FOUND MPI_CXX_FOUND) \r\nCMake Warning at cmake/Dependencies.cmake:369 (message):\r\n  Not compiling with MPI.  Suppress this warning with -DUSE_MPI=OFF\r\nCall Stack (most recent call first):\r\n  CMakeLists.txt:192 (include)\r\n\r\n\r\nCUDA_TOOLKIT_ROOT_DIR not found or specified\r\n-- Could NOT find CUDA (missing: CUDA_TOOLKIT_ROOT_DIR CUDA_NVCC_EXECUTABLE CUDA_INCLUDE_DIRS CUDA_CUDART_LIBRARY) (Required is at least version \"7.0\")\r\nCMake Warning at cmake/public/cuda.cmake:9 (message):\r\n  Caffe2: CUDA cannot be found.  Depending on whether you are building Caffe2\r\n  or a Caffe2 dependent library, the next warning / error will give you more\r\n  info.\r\nCall Stack (most recent call first):\r\n  cmake/Dependencies.cmake:396 (include)\r\n  CMakeLists.txt:192 (include)\r\n\r\n\r\nCMake Warning at cmake/Dependencies.cmake:434 (message):\r\n  Not compiling with CUDA.  Suppress this warning with -DUSE_CUDA=OFF.\r\nCall Stack (most recent call first):\r\n  CMakeLists.txt:192 (include)\r\n\r\n\r\nCMake Warning at cmake/Dependencies.cmake:464 (message):\r\n  Not using CUDA, so disabling NCCL.  Suppress this warning with\r\n  -DUSE_NCCL=OFF.\r\nCall Stack (most recent call first):\r\n  CMakeLists.txt:192 (include)\r\n\r\n\r\nCMake Warning at cmake/Dependencies.cmake:491 (message):\r\n  Gloo can only be used on Linux.\r\nCall Stack (most recent call first):\r\n  CMakeLists.txt:192 (include)\r\n\r\n\r\nCMake Warning at cmake/Dependencies.cmake:551 (message):\r\n  mobile opengl is only used in android or ios builds.\r\nCall Stack (most recent call first):\r\n  CMakeLists.txt:192 (include)\r\n\r\n\r\nCMake Warning at cmake/Dependencies.cmake:627 (message):\r\n  Metal is only used in ios builds.\r\nCall Stack (most recent call first):\r\n  CMakeLists.txt:192 (include)\r\n\r\n\r\n-- NCCL operators skipped due to no CUDA support\r\n-- CUDA RTC operators skipped due to no CUDA support\r\n-- Excluding ideep operators as we are not using ideep\r\n-- Including image processing operators\r\n-- Excluding video processing operators due to no opencv\r\n-- Excluding mkl operators as we are not using mkl\r\n-- MPI operators skipped due to no MPI support\r\n-- Include Observer library\r\n-- Using lib/python2.7/site-packages as python relative installation path\r\n-- Automatically generating missing __init__.py files.\r\nCMake Warning at CMakeLists.txt:322 (message):\r\n  Generated cmake files are only fully tested if one builds with system glog,\r\n  gflags, and protobuf.  Other settings may generate files that are not well\r\n  tested.\r\n\r\n\r\n-- \r\n-- ******** Summary ********\r\n-- General:\r\n--   CMake version         : 3.11.2\r\n--   CMake command         : /usr/local/Cellar/cmake/3.11.2/bin/cmake\r\n--   Git version           : v0.1.11-8608-gf8e83dc25\r\n--   System                : Darwin\r\n--   C++ compiler          : /Library/Developer/CommandLineTools/usr/bin/c++\r\n--   C++ compiler version  : 9.0.0.9000039\r\n--   BLAS                  : Eigen\r\n--   CXX flags             :  -fvisibility-inlines-hidden -Wno-deprecated-declarations -DONNX_NAMESPACE=onnx_c2 -O2 -fPIC -Wno-narrowing -Wno-invalid-partial-specialization\r\n--   Build type            : Release\r\n--   Compile definitions   : \r\n-- \r\n--   BUILD_CAFFE2          : ON\r\n--   BUILD_ATEN            : OFF\r\n--   BUILD_BINARY          : ON\r\n--   BUILD_CUSTOM_PROTOBUF : ON\r\n--     Link local protobuf : ON\r\n--   BUILD_DOCS            : OFF\r\n--   BUILD_PYTHON          : ON\r\n--     Python version      : 2.7.10\r\n--     Python includes     : /usr/include/python2.7\r\n--   BUILD_SHARED_LIBS     : ON\r\n--   BUILD_TEST            : ON\r\n--   USE_ASAN              : OFF\r\n--   USE_CUDA              : OFF\r\n--   USE_ROCM              : OFF\r\n--   USE_EIGEN_FOR_BLAS    : ON\r\n--   USE_FFMPEG            : OFF\r\n--   USE_GFLAGS            : ON\r\n--   USE_GLOG              : ON\r\n--   USE_GLOO              : OFF\r\n--   USE_LEVELDB           : ON\r\n--     LevelDB version     : 1.20\r\n--     Snappy version      : 1.1.7\r\n--   USE_LITE_PROTO        : OFF\r\n--   USE_LMDB              : ON\r\n--     LMDB version        : 0.9.21\r\n--   USE_METAL             : OFF\r\n--   USE_MKL               : \r\n--   USE_MOBILE_OPENGL     : OFF\r\n--   USE_MPI               : OFF\r\n--   USE_NCCL              : OFF\r\n--   USE_NERVANA_GPU       : OFF\r\n--   USE_NNPACK            : ON\r\n--   USE_OBSERVERS         : ON\r\n--   USE_OPENCL            : OFF\r\n--   USE_OPENCV            : ON\r\n--     OpenCV version      : 3.4.0\r\n--   USE_OPENMP            : OFF\r\n--   USE_PROF              : OFF\r\n--   USE_REDIS             : OFF\r\n--   USE_ROCKSDB           : OFF\r\n--   USE_ZMQ               : OFF\r\n-- Configuring done\r\n-- Generating done\r\n-- Build files have been written to: /Users/martink/git/build/pytorch/build\r\n```\r\n"}