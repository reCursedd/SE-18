{"url": "https://api.github.com/repos/pytorch/pytorch/issues/comments/394428582", "html_url": "https://github.com/pytorch/pytorch/issues/7963#issuecomment-394428582", "issue_url": "https://api.github.com/repos/pytorch/pytorch/issues/7963", "id": 394428582, "node_id": "MDEyOklzc3VlQ29tbWVudDM5NDQyODU4Mg==", "user": {"login": "pjh5", "id": 6456020, "node_id": "MDQ6VXNlcjY0NTYwMjA=", "avatar_url": "https://avatars1.githubusercontent.com/u/6456020?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pjh5", "html_url": "https://github.com/pjh5", "followers_url": "https://api.github.com/users/pjh5/followers", "following_url": "https://api.github.com/users/pjh5/following{/other_user}", "gists_url": "https://api.github.com/users/pjh5/gists{/gist_id}", "starred_url": "https://api.github.com/users/pjh5/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pjh5/subscriptions", "organizations_url": "https://api.github.com/users/pjh5/orgs", "repos_url": "https://api.github.com/users/pjh5/repos", "events_url": "https://api.github.com/users/pjh5/events{/privacy}", "received_events_url": "https://api.github.com/users/pjh5/received_events", "type": "User", "site_admin": false}, "created_at": "2018-06-04T17:07:41Z", "updated_at": "2018-06-04T17:07:41Z", "author_association": "CONTRIBUTOR", "body_html": "<p><a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=156625\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/lukemurray\">@lukemurray</a> since you installed with Anaconda all of your install locations will be different. See <a href=\"https://caffe2.ai/docs/faq.html#why-is-caffe2-not-working-as-expected-in-anaconda\" rel=\"nofollow\">https://caffe2.ai/docs/faq.html#why-is-caffe2-not-working-as-expected-in-anaconda</a> for more info on where Caffe2 files will get installed on your machine. Can you then run the \"otool -L\" command on your libcaffe2.dylib file and also tell me where it is on your machine?</p>\n<p>The purpose of the \"nm\" commands is to find where _PyCObject_Type is defined. \"nm\" prints out all the exported and imported symbols of a library, so that command tries to find all of the libraries that either define (export) or require (import) that symbol. The reason for the searching for Object.*Type instead of _PyCObject_Type is that I don't know how nm will mangle all the symbol names, but this regex appears to be too general. The command should be run in the lib folder that libcaffe2.dylib is in.  Could you play with the regex until you find the libraries that use the symbol?</p>", "body_text": "@lukemurray since you installed with Anaconda all of your install locations will be different. See https://caffe2.ai/docs/faq.html#why-is-caffe2-not-working-as-expected-in-anaconda for more info on where Caffe2 files will get installed on your machine. Can you then run the \"otool -L\" command on your libcaffe2.dylib file and also tell me where it is on your machine?\nThe purpose of the \"nm\" commands is to find where _PyCObject_Type is defined. \"nm\" prints out all the exported and imported symbols of a library, so that command tries to find all of the libraries that either define (export) or require (import) that symbol. The reason for the searching for Object.*Type instead of _PyCObject_Type is that I don't know how nm will mangle all the symbol names, but this regex appears to be too general. The command should be run in the lib folder that libcaffe2.dylib is in.  Could you play with the regex until you find the libraries that use the symbol?", "body": "@lukemurray since you installed with Anaconda all of your install locations will be different. See https://caffe2.ai/docs/faq.html#why-is-caffe2-not-working-as-expected-in-anaconda for more info on where Caffe2 files will get installed on your machine. Can you then run the \"otool -L\" command on your libcaffe2.dylib file and also tell me where it is on your machine?\r\n\r\nThe purpose of the \"nm\" commands is to find where _PyCObject_Type is defined. \"nm\" prints out all the exported and imported symbols of a library, so that command tries to find all of the libraries that either define (export) or require (import) that symbol. The reason for the searching for Object.*Type instead of _PyCObject_Type is that I don't know how nm will mangle all the symbol names, but this regex appears to be too general. The command should be run in the lib folder that libcaffe2.dylib is in.  Could you play with the regex until you find the libraries that use the symbol?"}