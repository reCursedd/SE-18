{"url": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/152968373", "pull_request_review_id": 78913337, "id": 152968373, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE1Mjk2ODM3Mw==", "diff_hunk": "@@ -0,0 +1,24 @@\n+#pragma once\n+\n+#include <ATen/ATen.h>\n+#include \"THC/THC.h\"\n+#include \"cudnn-wrapper.h\"\n+#include \"Handles.h\"\n+\n+namespace at { namespace cudnn {\n+\n+inline void cudnnSetStreamToCurrent() {\n+  // TODO: Should we call lazyInitCUDA() or access thc_state directly?\n+  // TODO: Should getCurrentStream be a method on Context?\n+  cudnnSetStream(getCudnnHandle(), THCState_getCurrentStream(globalContext().lazyInitCUDA()));\n+}\n+\n+// TODO: Move this out to ATen proper?\n+inline Tensor contiguousIfZeroInStrides(const Tensor& t) {\n+  for (auto s : t.strides()) {\n+    if (s == 0) return t.contiguous();", "path": "aten/src/ATen/cudnn/Utils.h", "position": null, "original_position": 19, "commit_id": "6c637bca42913c8377068a1bee874b2160c7f6c1", "original_commit_id": "12677cc3784b39142c6f955b995ddcda2135b586", "user": {"login": "ezyang", "id": 13564, "node_id": "MDQ6VXNlcjEzNTY0", "avatar_url": "https://avatars0.githubusercontent.com/u/13564?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ezyang", "html_url": "https://github.com/ezyang", "followers_url": "https://api.github.com/users/ezyang/followers", "following_url": "https://api.github.com/users/ezyang/following{/other_user}", "gists_url": "https://api.github.com/users/ezyang/gists{/gist_id}", "starred_url": "https://api.github.com/users/ezyang/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ezyang/subscriptions", "organizations_url": "https://api.github.com/users/ezyang/orgs", "repos_url": "https://api.github.com/users/ezyang/repos", "events_url": "https://api.github.com/users/ezyang/events{/privacy}", "received_events_url": "https://api.github.com/users/ezyang/received_events", "type": "User", "site_admin": false}, "body": "This code was lifted from some existing code in the affine grid generator bindings. My best explanation of what is going on here is this comment (which should be added here):\r\n\r\n```\r\n            # Sometimes grad_output is a scalar (like 1) expanded as a tensor.\r\n            # cudnn requires a tensor that has non-zero strides.\r\n```", "created_at": "2017-11-24T13:22:58Z", "updated_at": "2018-11-23T15:36:47Z", "html_url": "https://github.com/pytorch/pytorch/pull/3666#discussion_r152968373", "pull_request_url": "https://api.github.com/repos/pytorch/pytorch/pulls/3666", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/152968373"}, "html": {"href": "https://github.com/pytorch/pytorch/pull/3666#discussion_r152968373"}, "pull_request": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/3666"}}, "body_html": "<p>This code was lifted from some existing code in the affine grid generator bindings. My best explanation of what is going on here is this comment (which should be added here):</p>\n<pre><code>            # Sometimes grad_output is a scalar (like 1) expanded as a tensor.\n            # cudnn requires a tensor that has non-zero strides.\n</code></pre>", "body_text": "This code was lifted from some existing code in the affine grid generator bindings. My best explanation of what is going on here is this comment (which should be added here):\n            # Sometimes grad_output is a scalar (like 1) expanded as a tensor.\n            # cudnn requires a tensor that has non-zero strides.", "in_reply_to_id": 152955138}