{"url": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/153061157", "pull_request_review_id": 79017864, "id": 153061157, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE1MzA2MTE1Nw==", "diff_hunk": "@@ -0,0 +1,53 @@\n+#pragma once\n+\n+#include \"ATen/Tensor.h\"\n+#include \"ATen/TensorGeometry.h\"\n+#include \"ATen/Utils.h\"\n+\n+// This file contains utility functions for checking that arguments\n+// make sense.  This is particularly useful for native functions,\n+// which do NO argument checking by default.\n+//\n+// It's NOT in Utils.h, because this file has a dep on Tensor.h\n+\n+namespace at {\n+\n+struct TensorArg {\n+  Tensor tensor;\n+  const char* name;\n+  int pos; // 1-indexed\n+  TensorArg(Tensor tensor, const char* name, int pos)\n+    : tensor(std::move(tensor)), name(name), pos(pos) {}\n+  const Tensor* operator->() const { return &tensor; }\n+  const Tensor& operator*() const { return tensor; }\n+};\n+\n+struct TensorGeometryArg {\n+  TensorGeometry tensor;\n+  const char* name;\n+  int pos; // 1-indexed\n+  /* implicit */ TensorGeometryArg(TensorArg arg)\n+    : tensor(TensorGeometry{arg.tensor}), name(arg.name), pos(arg.pos) {}\n+  TensorGeometryArg(TensorGeometry tensor, const char* name, int pos)\n+    : tensor(tensor), name(name), pos(pos) {}\n+  const TensorGeometry* operator->() const { return &tensor; }\n+  const TensorGeometry& operator*() const { return tensor; }\n+};\n+\n+using CheckedFrom = std::string;", "path": "aten/src/ATen/Check.h", "position": null, "original_position": 37, "commit_id": "6c637bca42913c8377068a1bee874b2160c7f6c1", "original_commit_id": "12677cc3784b39142c6f955b995ddcda2135b586", "user": {"login": "ezyang", "id": 13564, "node_id": "MDQ6VXNlcjEzNTY0", "avatar_url": "https://avatars0.githubusercontent.com/u/13564?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ezyang", "html_url": "https://github.com/ezyang", "followers_url": "https://api.github.com/users/ezyang/followers", "following_url": "https://api.github.com/users/ezyang/following{/other_user}", "gists_url": "https://api.github.com/users/ezyang/gists{/gist_id}", "starred_url": "https://api.github.com/users/ezyang/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ezyang/subscriptions", "organizations_url": "https://api.github.com/users/ezyang/orgs", "repos_url": "https://api.github.com/users/ezyang/repos", "events_url": "https://api.github.com/users/ezyang/events{/privacy}", "received_events_url": "https://api.github.com/users/ezyang/received_events", "type": "User", "site_admin": false}, "body": "Yes. Sure, we can make it a char* for now. I was thinking maybe we'd like to make it a little more complicated in the future, possibly.", "created_at": "2017-11-26T06:16:46Z", "updated_at": "2018-11-23T15:36:47Z", "html_url": "https://github.com/pytorch/pytorch/pull/3666#discussion_r153061157", "pull_request_url": "https://api.github.com/repos/pytorch/pytorch/pulls/3666", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/153061157"}, "html": {"href": "https://github.com/pytorch/pytorch/pull/3666#discussion_r153061157"}, "pull_request": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/3666"}}, "body_html": "<p>Yes. Sure, we can make it a char* for now. I was thinking maybe we'd like to make it a little more complicated in the future, possibly.</p>", "body_text": "Yes. Sure, we can make it a char* for now. I was thinking maybe we'd like to make it a little more complicated in the future, possibly.", "in_reply_to_id": 152952518}