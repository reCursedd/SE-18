{"url": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/152957429", "pull_request_review_id": 78893017, "id": 152957429, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE1Mjk1NzQyOQ==", "diff_hunk": "@@ -0,0 +1,1164 @@\n+#include \"Conv.h\"\n+\n+#include \"THC/THC.h\"\n+#include \"Exceptions.h\"\n+#include \"Utils.h\"\n+#include \"Types.h\"\n+\n+#include <ATen/Check.h>\n+\n+#include \"cudnn-wrapper.h\"\n+#include <functional>\n+#include <iterator>\n+#include <sstream>\n+#include <algorithm>\n+#include <memory>\n+#include <mutex>\n+#include <stdint.h>\n+#include <unordered_map>\n+\n+namespace at { namespace cudnn {\n+\n+// TODO: Go through all the checking code again and make sure\n+// we haven't missed anything.\n+\n+// ---------------------------------------------------------------------\n+//\n+// Math\n+//\n+// ---------------------------------------------------------------------\n+\n+constexpr int input_batch_size_dim = 0;  // also grad_input\n+constexpr int input_channels_dim = 1;\n+constexpr int output_batch_size_dim = 0;  // also grad_output\n+constexpr int output_channels_dim = 1;\n+constexpr int weight_output_channels_dim = 0;\n+constexpr int weight_input_channels_dim = 1;\n+\n+// Often written as 2 + max_dim (extra dims for batch size and channels)\n+constexpr int max_dim = 3;\n+\n+// NB: conv_output_size and conv_input_size are not bijections,\n+// as conv_output_size loses information; this is why conv_input_size\n+// takes an extra output_padding argument to resolve the ambiguity.\n+\n+std::vector<int64_t> conv_output_size(\n+    IntList input_size, IntList weight_size,\n+    IntList padding, IntList stride, IntList dilation, int groups\n+) {\n+  // ASSERT(input_size.size() > 2)\n+  // ASSERT(input_size.size() == weight_size.size())", "path": "aten/src/ATen/cudnn/Conv.cpp", "position": null, "original_position": 50, "commit_id": "6c637bca42913c8377068a1bee874b2160c7f6c1", "original_commit_id": "12677cc3784b39142c6f955b995ddcda2135b586", "user": {"login": "apaszke", "id": 4583066, "node_id": "MDQ6VXNlcjQ1ODMwNjY=", "avatar_url": "https://avatars3.githubusercontent.com/u/4583066?v=4", "gravatar_id": "", "url": "https://api.github.com/users/apaszke", "html_url": "https://github.com/apaszke", "followers_url": "https://api.github.com/users/apaszke/followers", "following_url": "https://api.github.com/users/apaszke/following{/other_user}", "gists_url": "https://api.github.com/users/apaszke/gists{/gist_id}", "starred_url": "https://api.github.com/users/apaszke/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/apaszke/subscriptions", "organizations_url": "https://api.github.com/users/apaszke/orgs", "repos_url": "https://api.github.com/users/apaszke/repos", "events_url": "https://api.github.com/users/apaszke/events{/privacy}", "received_events_url": "https://api.github.com/users/apaszke/received_events", "type": "User", "site_admin": false}, "body": "Either uncomment or remove those", "created_at": "2017-11-24T12:15:26Z", "updated_at": "2018-11-23T15:36:47Z", "html_url": "https://github.com/pytorch/pytorch/pull/3666#discussion_r152957429", "pull_request_url": "https://api.github.com/repos/pytorch/pytorch/pulls/3666", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/152957429"}, "html": {"href": "https://github.com/pytorch/pytorch/pull/3666#discussion_r152957429"}, "pull_request": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/3666"}}, "body_html": "<p>Either uncomment or remove those</p>", "body_text": "Either uncomment or remove those"}