{"url": "https://api.github.com/repos/pytorch/pytorch/issues/comments/378971631", "html_url": "https://github.com/pytorch/pytorch/issues/6300#issuecomment-378971631", "issue_url": "https://api.github.com/repos/pytorch/pytorch/issues/6300", "id": 378971631, "node_id": "MDEyOklzc3VlQ29tbWVudDM3ODk3MTYzMQ==", "user": {"login": "arogozhnikov", "id": 6318811, "node_id": "MDQ6VXNlcjYzMTg4MTE=", "avatar_url": "https://avatars3.githubusercontent.com/u/6318811?v=4", "gravatar_id": "", "url": "https://api.github.com/users/arogozhnikov", "html_url": "https://github.com/arogozhnikov", "followers_url": "https://api.github.com/users/arogozhnikov/followers", "following_url": "https://api.github.com/users/arogozhnikov/following{/other_user}", "gists_url": "https://api.github.com/users/arogozhnikov/gists{/gist_id}", "starred_url": "https://api.github.com/users/arogozhnikov/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/arogozhnikov/subscriptions", "organizations_url": "https://api.github.com/users/arogozhnikov/orgs", "repos_url": "https://api.github.com/users/arogozhnikov/repos", "events_url": "https://api.github.com/users/arogozhnikov/events{/privacy}", "received_events_url": "https://api.github.com/users/arogozhnikov/received_events", "type": "User", "site_admin": false}, "created_at": "2018-04-05T15:14:35Z", "updated_at": "2018-04-05T15:14:54Z", "author_association": "NONE", "body_html": "<p>Just tested, given example fails even with simle BatchNorm2d. Below is the minimal example for reproduction:</p>\n<div class=\"highlight highlight-source-python\"><pre><span class=\"pl-k\">import</span> torch\n<span class=\"pl-k\">from</span> torch.autograd <span class=\"pl-k\">import</span> Variable\n<span class=\"pl-k\">import</span> torch.onnx\n<span class=\"pl-k\">import</span> onnx\n<span class=\"pl-c\"><span class=\"pl-c\">#</span> from onnx_tf.backend import prepare</span>\n\ndummy_input <span class=\"pl-k\">=</span> Variable(torch.randn(<span class=\"pl-c1\">10</span>, <span class=\"pl-c1\">6</span>, <span class=\"pl-c1\">224</span>, <span class=\"pl-c1\">224</span>))\nmodel <span class=\"pl-k\">=</span> torch.nn.BatchNorm2d(<span class=\"pl-v\">num_features</span><span class=\"pl-k\">=</span><span class=\"pl-c1\">6</span>)\ntorch.onnx.export(model, dummy_input, <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>flownet.onnx<span class=\"pl-pds\">\"</span></span>, <span class=\"pl-v\">verbose</span><span class=\"pl-k\">=</span><span class=\"pl-c1\">True</span>)\n\n<span class=\"pl-c\"><span class=\"pl-c\">#</span>no error here</span>\nonnx_model <span class=\"pl-k\">=</span> onnx.load(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>flownet.onnx<span class=\"pl-pds\">\"</span></span>)\n<span class=\"pl-c\"><span class=\"pl-c\">#</span> Check that the IR is well formed</span>\nonnx.checker.check_model(onnx_model)</pre></div>\n<p>(error is the same)</p>", "body_text": "Just tested, given example fails even with simle BatchNorm2d. Below is the minimal example for reproduction:\nimport torch\nfrom torch.autograd import Variable\nimport torch.onnx\nimport onnx\n# from onnx_tf.backend import prepare\n\ndummy_input = Variable(torch.randn(10, 6, 224, 224))\nmodel = torch.nn.BatchNorm2d(num_features=6)\ntorch.onnx.export(model, dummy_input, \"flownet.onnx\", verbose=True)\n\n#no error here\nonnx_model = onnx.load(\"flownet.onnx\")\n# Check that the IR is well formed\nonnx.checker.check_model(onnx_model)\n(error is the same)", "body": "Just tested, given example fails even with simle BatchNorm2d. Below is the minimal example for reproduction:\r\n```python\r\nimport torch\r\nfrom torch.autograd import Variable\r\nimport torch.onnx\r\nimport onnx\r\n# from onnx_tf.backend import prepare\r\n\r\ndummy_input = Variable(torch.randn(10, 6, 224, 224))\r\nmodel = torch.nn.BatchNorm2d(num_features=6)\r\ntorch.onnx.export(model, dummy_input, \"flownet.onnx\", verbose=True)\r\n\r\n#no error here\r\nonnx_model = onnx.load(\"flownet.onnx\")\r\n# Check that the IR is well formed\r\nonnx.checker.check_model(onnx_model)\r\n```\r\n\r\n(error is the same)"}