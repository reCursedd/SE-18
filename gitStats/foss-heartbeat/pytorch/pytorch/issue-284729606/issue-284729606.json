{"url": "https://api.github.com/repos/pytorch/pytorch/issues/4363", "repository_url": "https://api.github.com/repos/pytorch/pytorch", "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/4363/labels{/name}", "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/4363/comments", "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/4363/events", "html_url": "https://github.com/pytorch/pytorch/issues/4363", "id": 284729606, "node_id": "MDU6SXNzdWUyODQ3Mjk2MDY=", "number": 4363, "title": "Error when initializing tensor from numpy array with correct dtype.", "user": {"login": "dichotomies", "id": 12436822, "node_id": "MDQ6VXNlcjEyNDM2ODIy", "avatar_url": "https://avatars2.githubusercontent.com/u/12436822?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dichotomies", "html_url": "https://github.com/dichotomies", "followers_url": "https://api.github.com/users/dichotomies/followers", "following_url": "https://api.github.com/users/dichotomies/following{/other_user}", "gists_url": "https://api.github.com/users/dichotomies/gists{/gist_id}", "starred_url": "https://api.github.com/users/dichotomies/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dichotomies/subscriptions", "organizations_url": "https://api.github.com/users/dichotomies/orgs", "repos_url": "https://api.github.com/users/dichotomies/repos", "events_url": "https://api.github.com/users/dichotomies/events{/privacy}", "received_events_url": "https://api.github.com/users/dichotomies/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-12-27T14:04:18Z", "updated_at": "2017-12-28T00:15:04Z", "closed_at": "2017-12-28T00:15:04Z", "author_association": "NONE", "body_html": "<p>A minimal example:</p>\n<div class=\"highlight highlight-source-python\"><pre>any_number <span class=\"pl-k\">=</span> <span class=\"pl-v\">long</span>(<span class=\"pl-c1\">2</span>)\na <span class=\"pl-k\">=</span> np.arange(<span class=\"pl-c1\">0</span>, any_number)\n<span class=\"pl-c1\">print</span>(a, a.dtype)\nb <span class=\"pl-k\">=</span> torch.from_numpy(a)\n<span class=\"pl-c1\">print</span>(b)\n<span class=\"pl-k\">&gt;&gt;</span><span class=\"pl-k\">&gt;</span> (array([<span class=\"pl-c1\">0</span>, <span class=\"pl-c1\">1</span>]), dtype(<span class=\"pl-s\"><span class=\"pl-pds\">'</span>int64<span class=\"pl-pds\">'</span></span>))\n<span class=\"pl-k\">&gt;&gt;</span><span class=\"pl-k\">&gt;</span> <span class=\"pl-c1\">RuntimeError</span>: can<span class=\"pl-s\"><span class=\"pl-pds\">'</span>t convert a given np.ndarray to a tensor - it has an invalid type. <span class=\"pl-ii\"></span></span>\n<span class=\"pl-k\">&gt;&gt;</span><span class=\"pl-k\">&gt;</span> The only supported types are: double, <span class=\"pl-c1\">float</span>, int64, int32, <span class=\"pl-k\">and</span> uint8.</pre></div>\n<p>Although <code>a</code> has <code>dtype</code> <code>int64</code> and this type <em>is listed as supported</em>, the array can't be converted.</p>\n<p>Consider that <code>a</code> is initialized with an upper bound of type <code>long</code>.</p>\n<p>I'm not completely sure, whether this issue is related to torch or numpy, but numpy initializes the array with values as expected, whereas torch throws an inconsistent error message.</p>", "body_text": "A minimal example:\nany_number = long(2)\na = np.arange(0, any_number)\nprint(a, a.dtype)\nb = torch.from_numpy(a)\nprint(b)\n>>> (array([0, 1]), dtype('int64'))\n>>> RuntimeError: can't convert a given np.ndarray to a tensor - it has an invalid type. \n>>> The only supported types are: double, float, int64, int32, and uint8.\nAlthough a has dtype int64 and this type is listed as supported, the array can't be converted.\nConsider that a is initialized with an upper bound of type long.\nI'm not completely sure, whether this issue is related to torch or numpy, but numpy initializes the array with values as expected, whereas torch throws an inconsistent error message.", "body": "A minimal example:\r\n\r\n```py\r\nany_number = long(2)\r\na = np.arange(0, any_number)\r\nprint(a, a.dtype)\r\nb = torch.from_numpy(a)\r\nprint(b)\r\n>>> (array([0, 1]), dtype('int64'))\r\n>>> RuntimeError: can't convert a given np.ndarray to a tensor - it has an invalid type. \r\n>>> The only supported types are: double, float, int64, int32, and uint8.\r\n```\r\n\r\nAlthough `a` has `dtype` `int64` and this type *is listed as supported*, the array can't be converted. \r\n\r\nConsider that `a` is initialized with an upper bound of type `long`.\r\n\r\nI'm not completely sure, whether this issue is related to torch or numpy, but numpy initializes the array with values as expected, whereas torch throws an inconsistent error message. "}