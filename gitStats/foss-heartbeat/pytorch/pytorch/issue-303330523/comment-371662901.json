{"url": "https://api.github.com/repos/pytorch/pytorch/issues/comments/371662901", "html_url": "https://github.com/pytorch/pytorch/pull/5626#issuecomment-371662901", "issue_url": "https://api.github.com/repos/pytorch/pytorch/issues/5626", "id": 371662901, "node_id": "MDEyOklzc3VlQ29tbWVudDM3MTY2MjkwMQ==", "user": {"login": "goldsborough", "id": 6429851, "node_id": "MDQ6VXNlcjY0Mjk4NTE=", "avatar_url": "https://avatars3.githubusercontent.com/u/6429851?v=4", "gravatar_id": "", "url": "https://api.github.com/users/goldsborough", "html_url": "https://github.com/goldsborough", "followers_url": "https://api.github.com/users/goldsborough/followers", "following_url": "https://api.github.com/users/goldsborough/following{/other_user}", "gists_url": "https://api.github.com/users/goldsborough/gists{/gist_id}", "starred_url": "https://api.github.com/users/goldsborough/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/goldsborough/subscriptions", "organizations_url": "https://api.github.com/users/goldsborough/orgs", "repos_url": "https://api.github.com/users/goldsborough/repos", "events_url": "https://api.github.com/users/goldsborough/events{/privacy}", "received_events_url": "https://api.github.com/users/goldsborough/received_events", "type": "User", "site_admin": false}, "created_at": "2018-03-08T23:38:04Z", "updated_at": "2018-03-08T23:38:04Z", "author_association": "CONTRIBUTOR", "body_html": "<p>So forwards seems faster, but backwards is much slower? How? Any ideas?</p>\n<div class=\"highlight highlight-source-python\"><pre>In [<span class=\"pl-c1\">1</span>]: <span class=\"pl-k\">import</span> torch\nIn [<span class=\"pl-c1\">2</span>]: x <span class=\"pl-k\">=</span> torch.randn(<span class=\"pl-c1\">100</span>, <span class=\"pl-c1\">100</span>, <span class=\"pl-v\">requires_grad</span><span class=\"pl-k\">=</span><span class=\"pl-c1\">True</span>)\nIn [<span class=\"pl-c1\">3</span>]: <span class=\"pl-k\">%</span>timeit <span class=\"pl-k\">-</span>n1000 torch.relu(x).sum().backward()\n<span class=\"pl-c1\">213</span> \u00b5s \u00b1 <span class=\"pl-c1\">15.5</span> \u00b5s per loop (mean \u00b1 std. dev. of <span class=\"pl-c1\">7</span> runs, <span class=\"pl-c1\">1000</span> loops each)\nIn [<span class=\"pl-c1\">4</span>]: <span class=\"pl-k\">%</span>timeit <span class=\"pl-k\">-</span>n1000 torch.nn.functional.threshold(x, <span class=\"pl-c1\">0</span>, <span class=\"pl-c1\">0</span>).sum().backward()\n<span class=\"pl-c1\">118</span> \u00b5s \u00b1 <span class=\"pl-c1\">12.2</span> \u00b5s per loop (mean \u00b1 std. dev. of <span class=\"pl-c1\">7</span> runs, <span class=\"pl-c1\">1000</span> loops each)\nIn [<span class=\"pl-c1\">5</span>]: <span class=\"pl-k\">%</span>timeit <span class=\"pl-k\">-</span>n1000 torch.relu(x)\n<span class=\"pl-c1\">11.7</span> \u00b5s \u00b1 <span class=\"pl-c1\">107</span> ns per loop (mean \u00b1 std. dev. of <span class=\"pl-c1\">7</span> runs, <span class=\"pl-c1\">1000</span> loops each)\nIn [<span class=\"pl-c1\">6</span>]: <span class=\"pl-k\">%</span>timeit <span class=\"pl-k\">-</span>n1000 torch.nn.functional.threshold(x, <span class=\"pl-c1\">0</span>, <span class=\"pl-c1\">0</span>)\n<span class=\"pl-c1\">14.4</span> \u00b5s \u00b1 <span class=\"pl-c1\">951</span> ns per loop (mean \u00b1 std. dev. of <span class=\"pl-c1\">7</span> runs, <span class=\"pl-c1\">1000</span> loops each)</pre></div>", "body_text": "So forwards seems faster, but backwards is much slower? How? Any ideas?\nIn [1]: import torch\nIn [2]: x = torch.randn(100, 100, requires_grad=True)\nIn [3]: %timeit -n1000 torch.relu(x).sum().backward()\n213 \u00b5s \u00b1 15.5 \u00b5s per loop (mean \u00b1 std. dev. of 7 runs, 1000 loops each)\nIn [4]: %timeit -n1000 torch.nn.functional.threshold(x, 0, 0).sum().backward()\n118 \u00b5s \u00b1 12.2 \u00b5s per loop (mean \u00b1 std. dev. of 7 runs, 1000 loops each)\nIn [5]: %timeit -n1000 torch.relu(x)\n11.7 \u00b5s \u00b1 107 ns per loop (mean \u00b1 std. dev. of 7 runs, 1000 loops each)\nIn [6]: %timeit -n1000 torch.nn.functional.threshold(x, 0, 0)\n14.4 \u00b5s \u00b1 951 ns per loop (mean \u00b1 std. dev. of 7 runs, 1000 loops each)", "body": "So forwards seems faster, but backwards is much slower? How? Any ideas?\r\n\r\n```py\r\nIn [1]: import torch\r\nIn [2]: x = torch.randn(100, 100, requires_grad=True)\r\nIn [3]: %timeit -n1000 torch.relu(x).sum().backward()\r\n213 \u00b5s \u00b1 15.5 \u00b5s per loop (mean \u00b1 std. dev. of 7 runs, 1000 loops each)\r\nIn [4]: %timeit -n1000 torch.nn.functional.threshold(x, 0, 0).sum().backward()\r\n118 \u00b5s \u00b1 12.2 \u00b5s per loop (mean \u00b1 std. dev. of 7 runs, 1000 loops each)\r\nIn [5]: %timeit -n1000 torch.relu(x)\r\n11.7 \u00b5s \u00b1 107 ns per loop (mean \u00b1 std. dev. of 7 runs, 1000 loops each)\r\nIn [6]: %timeit -n1000 torch.nn.functional.threshold(x, 0, 0)\r\n14.4 \u00b5s \u00b1 951 ns per loop (mean \u00b1 std. dev. of 7 runs, 1000 loops each)\r\n```"}