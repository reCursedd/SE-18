{"url": "https://api.github.com/repos/pytorch/pytorch/issues/6017", "repository_url": "https://api.github.com/repos/pytorch/pytorch", "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/6017/labels{/name}", "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/6017/comments", "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/6017/events", "html_url": "https://github.com/pytorch/pytorch/pull/6017", "id": 308711588, "node_id": "MDExOlB1bGxSZXF1ZXN0MTc3NTQ5Njcy", "number": 6017, "title": "Update FAQ to make more sense after tensor/variable merge", "user": {"login": "goldsborough", "id": 6429851, "node_id": "MDQ6VXNlcjY0Mjk4NTE=", "avatar_url": "https://avatars3.githubusercontent.com/u/6429851?v=4", "gravatar_id": "", "url": "https://api.github.com/users/goldsborough", "html_url": "https://github.com/goldsborough", "followers_url": "https://api.github.com/users/goldsborough/followers", "following_url": "https://api.github.com/users/goldsborough/following{/other_user}", "gists_url": "https://api.github.com/users/goldsborough/gists{/gist_id}", "starred_url": "https://api.github.com/users/goldsborough/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/goldsborough/subscriptions", "organizations_url": "https://api.github.com/users/goldsborough/orgs", "repos_url": "https://api.github.com/users/goldsborough/repos", "events_url": "https://api.github.com/users/goldsborough/events{/privacy}", "received_events_url": "https://api.github.com/users/goldsborough/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-03-26T19:51:20Z", "updated_at": "2018-03-27T14:48:25Z", "closed_at": "2018-03-27T14:48:25Z", "author_association": "CONTRIBUTOR", "pull_request": {"url": "https://api.github.com/repos/pytorch/pytorch/pulls/6017", "html_url": "https://github.com/pytorch/pytorch/pull/6017", "diff_url": "https://github.com/pytorch/pytorch/pull/6017.diff", "patch_url": "https://github.com/pytorch/pytorch/pull/6017.patch"}, "body_html": "<p>Looks like there's already a note about the <code>total_loss += loss</code> trouble. I've updated it to make more sense after the tensor/variable merge.</p>\n<p>Also, GitHub doesn't allow pull requests for the wiki. Can someone please edit <a href=\"https://github.com/pytorch/pytorch/wiki/Breaking-Changes-from-Variable-and-Tensor-merge\">https://github.com/pytorch/pytorch/wiki/Breaking-Changes-from-Variable-and-Tensor-merge</a> with something like</p>\n<pre><code>## Possible Issues\n\n* If you have code that accumulates losses across iterations (e.g. to compute an\naverage at the end of an epoch), such as `total_loss += loss` where `loss` is\nyour per-iteration loss, you may find increased memory usage in your program.\nThis is because `loss` probably used to be a Python float (such as when it is\nthe result of `.sum()`), while it is now a zero-dim Tensor. `total_loss` is\nthus accumulating `Tensor`s and their gradient history, which may keep around\nlarge autograd graphs for much longer than necessary. To fix this, be sure to\nconvert the per-iteration loss to a Python number as soon as possible, for\nexample with `total_loss += float(loss)`.\n</code></pre>\n<p><a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=13564\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/ezyang\">@ezyang</a> <a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=4583066\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/apaszke\">@apaszke</a> <a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=1310570\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/soumith\">@soumith</a></p>", "body_text": "Looks like there's already a note about the total_loss += loss trouble. I've updated it to make more sense after the tensor/variable merge.\nAlso, GitHub doesn't allow pull requests for the wiki. Can someone please edit https://github.com/pytorch/pytorch/wiki/Breaking-Changes-from-Variable-and-Tensor-merge with something like\n## Possible Issues\n\n* If you have code that accumulates losses across iterations (e.g. to compute an\naverage at the end of an epoch), such as `total_loss += loss` where `loss` is\nyour per-iteration loss, you may find increased memory usage in your program.\nThis is because `loss` probably used to be a Python float (such as when it is\nthe result of `.sum()`), while it is now a zero-dim Tensor. `total_loss` is\nthus accumulating `Tensor`s and their gradient history, which may keep around\nlarge autograd graphs for much longer than necessary. To fix this, be sure to\nconvert the per-iteration loss to a Python number as soon as possible, for\nexample with `total_loss += float(loss)`.\n\n@ezyang @apaszke @soumith", "body": "Looks like there's already a note about the `total_loss += loss` trouble. I've updated it to make more sense after the tensor/variable merge.\r\n\r\nAlso, GitHub doesn't allow pull requests for the wiki. Can someone please edit https://github.com/pytorch/pytorch/wiki/Breaking-Changes-from-Variable-and-Tensor-merge with something like\r\n\r\n```\r\n## Possible Issues\r\n\r\n* If you have code that accumulates losses across iterations (e.g. to compute an\r\naverage at the end of an epoch), such as `total_loss += loss` where `loss` is\r\nyour per-iteration loss, you may find increased memory usage in your program.\r\nThis is because `loss` probably used to be a Python float (such as when it is\r\nthe result of `.sum()`), while it is now a zero-dim Tensor. `total_loss` is\r\nthus accumulating `Tensor`s and their gradient history, which may keep around\r\nlarge autograd graphs for much longer than necessary. To fix this, be sure to\r\nconvert the per-iteration loss to a Python number as soon as possible, for\r\nexample with `total_loss += float(loss)`.\r\n```\r\n\r\n@ezyang @apaszke @soumith "}