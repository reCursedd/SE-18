{"url": "https://api.github.com/repos/pytorch/pytorch/issues/9874", "repository_url": "https://api.github.com/repos/pytorch/pytorch", "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/9874/labels{/name}", "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/9874/comments", "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/9874/events", "html_url": "https://github.com/pytorch/pytorch/issues/9874", "id": 344808155, "node_id": "MDU6SXNzdWUzNDQ4MDgxNTU=", "number": 9874, "title": "[Caffe2] backend can't translate Onnx Gemm to Caffe2 FC", "user": {"login": "rednoah91", "id": 14710196, "node_id": "MDQ6VXNlcjE0NzEwMTk2", "avatar_url": "https://avatars3.githubusercontent.com/u/14710196?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rednoah91", "html_url": "https://github.com/rednoah91", "followers_url": "https://api.github.com/users/rednoah91/followers", "following_url": "https://api.github.com/users/rednoah91/following{/other_user}", "gists_url": "https://api.github.com/users/rednoah91/gists{/gist_id}", "starred_url": "https://api.github.com/users/rednoah91/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rednoah91/subscriptions", "organizations_url": "https://api.github.com/users/rednoah91/orgs", "repos_url": "https://api.github.com/users/rednoah91/repos", "events_url": "https://api.github.com/users/rednoah91/events{/privacy}", "received_events_url": "https://api.github.com/users/rednoah91/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 890282107, "node_id": "MDU6TGFiZWw4OTAyODIxMDc=", "url": "https://api.github.com/repos/pytorch/pytorch/labels/caffe2", "name": "caffe2", "color": "210aa8", "default": false}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-07-26T11:40:03Z", "updated_at": "2018-08-24T09:02:12Z", "closed_at": "2018-08-24T09:02:12Z", "author_association": "NONE", "body_html": "<h2>Issue description</h2>\n<p>It's seems we have no chance to translate Onnx gemm to Caffe2 FC after onnx opset-6?<br>\n(after onnx opset-6, the broadcast attribute of gemm is removed)</p>\n<p>In <a href=\"https://github.com/pytorch/pytorch/blob/master/caffe2/onnx/backend.cc\">https://github.com/pytorch/pytorch/blob/master/caffe2/onnx/backend.cc</a> \"CreateGemm\"</p>\n<pre><code>  auto trans_a = onnx_node-&gt;attributes.get&lt;int64_t&gt;(\"transA\", 0L);\n  auto trans_b = onnx_node-&gt;attributes.get&lt;int64_t&gt;(\"transB\", 0L);\n  auto broadcast = onnx_node-&gt;attributes.get&lt;int64_t&gt;(\"broadcast\", 0L);\n  if ((!trans_a) &amp;&amp; trans_b &amp;&amp; broadcast) {\n    auto* c2_op = ret.ops.Add();\n    BuildOperator(c2_op, \"FC\", {input_a, input_b, input_c}, {output});\n  }\n</code></pre>\n<p>so I think we should remove the broadcast check in the if condition?</p>", "body_text": "Issue description\nIt's seems we have no chance to translate Onnx gemm to Caffe2 FC after onnx opset-6?\n(after onnx opset-6, the broadcast attribute of gemm is removed)\nIn https://github.com/pytorch/pytorch/blob/master/caffe2/onnx/backend.cc \"CreateGemm\"\n  auto trans_a = onnx_node->attributes.get<int64_t>(\"transA\", 0L);\n  auto trans_b = onnx_node->attributes.get<int64_t>(\"transB\", 0L);\n  auto broadcast = onnx_node->attributes.get<int64_t>(\"broadcast\", 0L);\n  if ((!trans_a) && trans_b && broadcast) {\n    auto* c2_op = ret.ops.Add();\n    BuildOperator(c2_op, \"FC\", {input_a, input_b, input_c}, {output});\n  }\n\nso I think we should remove the broadcast check in the if condition?", "body": "## Issue description\r\n\r\nIt's seems we have no chance to translate Onnx gemm to Caffe2 FC after onnx opset-6?\r\n(after onnx opset-6, the broadcast attribute of gemm is removed)\r\n\r\nIn https://github.com/pytorch/pytorch/blob/master/caffe2/onnx/backend.cc \"CreateGemm\"\r\n```\r\n  auto trans_a = onnx_node->attributes.get<int64_t>(\"transA\", 0L);\r\n  auto trans_b = onnx_node->attributes.get<int64_t>(\"transB\", 0L);\r\n  auto broadcast = onnx_node->attributes.get<int64_t>(\"broadcast\", 0L);\r\n  if ((!trans_a) && trans_b && broadcast) {\r\n    auto* c2_op = ret.ops.Add();\r\n    BuildOperator(c2_op, \"FC\", {input_a, input_b, input_c}, {output});\r\n  }\r\n```\r\nso I think we should remove the broadcast check in the if condition?"}