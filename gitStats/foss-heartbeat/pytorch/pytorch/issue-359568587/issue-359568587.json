{"url": "https://api.github.com/repos/pytorch/pytorch/issues/11580", "repository_url": "https://api.github.com/repos/pytorch/pytorch", "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/11580/labels{/name}", "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/11580/comments", "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/11580/events", "html_url": "https://github.com/pytorch/pytorch/pull/11580", "id": 359568587, "node_id": "MDExOlB1bGxSZXF1ZXN0MjE1MDMwNDA2", "number": 11580, "title": "[C++ API] Document Any", "user": {"login": "goldsborough", "id": 6429851, "node_id": "MDQ6VXNlcjY0Mjk4NTE=", "avatar_url": "https://avatars3.githubusercontent.com/u/6429851?v=4", "gravatar_id": "", "url": "https://api.github.com/users/goldsborough", "html_url": "https://github.com/goldsborough", "followers_url": "https://api.github.com/users/goldsborough/followers", "following_url": "https://api.github.com/users/goldsborough/following{/other_user}", "gists_url": "https://api.github.com/users/goldsborough/gists{/gist_id}", "starred_url": "https://api.github.com/users/goldsborough/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/goldsborough/subscriptions", "organizations_url": "https://api.github.com/users/goldsborough/orgs", "repos_url": "https://api.github.com/users/goldsborough/repos", "events_url": "https://api.github.com/users/goldsborough/events{/privacy}", "received_events_url": "https://api.github.com/users/goldsborough/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-09-12T16:54:40Z", "updated_at": "2018-09-12T23:00:42Z", "closed_at": "2018-09-12T23:00:42Z", "author_association": "CONTRIBUTOR", "pull_request": {"url": "https://api.github.com/repos/pytorch/pytorch/pulls/11580", "html_url": "https://github.com/pytorch/pytorch/pull/11580", "diff_url": "https://github.com/pytorch/pytorch/pull/11580.diff", "patch_url": "https://github.com/pytorch/pytorch/pull/11580.patch"}, "body_html": "<p>Documents the <code>AnyModule</code> class in the C++ API.</p>\n<p>Also changed the API to be friendlier by default. Calling <code>AnyModule::forward</code> used to return an <code>AnyModule::Value</code> which you had to call <code>.get&lt;T&gt;()</code> on to cast to a concrete type. I changed the name of that <code>forward</code> method to <code>any_forward</code> and instead made <code>forward</code> templated on a <code>ReturnType</code> template parameter which you can supply to do the <code>.get&lt;T&gt;</code> cast for you automatically. I default this parameter to <code>torch::Tensor</code> so that it can often be omitted. So where you used to have to write</p>\n<div class=\"highlight highlight-source-c++\"><pre>any_module.forward(...).get&lt;<span class=\"pl-k\">int</span>&gt;();\nany_module.forward(...).get&lt;torch::Tensor&gt;();</pre></div>\n<p>you now write</p>\n<div class=\"highlight highlight-source-c++\"><pre>any_module.forward&lt;<span class=\"pl-k\">int</span>&gt;(...);\nany_module.forward(...);</pre></div>\n<p><a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=3605224\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/ebetica\">@ebetica</a> <a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=13564\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/ezyang\">@ezyang</a> <a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=1310570\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/soumith\">@soumith</a></p>", "body_text": "Documents the AnyModule class in the C++ API.\nAlso changed the API to be friendlier by default. Calling AnyModule::forward used to return an AnyModule::Value which you had to call .get<T>() on to cast to a concrete type. I changed the name of that forward method to any_forward and instead made forward templated on a ReturnType template parameter which you can supply to do the .get<T> cast for you automatically. I default this parameter to torch::Tensor so that it can often be omitted. So where you used to have to write\nany_module.forward(...).get<int>();\nany_module.forward(...).get<torch::Tensor>();\nyou now write\nany_module.forward<int>(...);\nany_module.forward(...);\n@ebetica @ezyang @soumith", "body": "Documents the `AnyModule` class in the C++ API.\r\n\r\nAlso changed the API to be friendlier by default. Calling `AnyModule::forward` used to return an `AnyModule::Value` which you had to call `.get<T>()` on to cast to a concrete type. I changed the name of that `forward` method to `any_forward` and instead made `forward` templated on a `ReturnType` template parameter which you can supply to do the `.get<T>` cast for you automatically. I default this parameter to `torch::Tensor` so that it can often be omitted. So where you used to have to write\r\n\r\n```cpp\r\nany_module.forward(...).get<int>();\r\nany_module.forward(...).get<torch::Tensor>();\r\n```\r\n\r\nyou now write\r\n\r\n\r\n```cpp\r\nany_module.forward<int>(...);\r\nany_module.forward(...);\r\n```\r\n\r\n@ebetica @ezyang @soumith "}