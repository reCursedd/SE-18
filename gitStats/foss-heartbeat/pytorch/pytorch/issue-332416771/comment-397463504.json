{"url": "https://api.github.com/repos/pytorch/pytorch/issues/comments/397463504", "html_url": "https://github.com/pytorch/pytorch/issues/8483#issuecomment-397463504", "issue_url": "https://api.github.com/repos/pytorch/pytorch/issues/8483", "id": 397463504, "node_id": "MDEyOklzc3VlQ29tbWVudDM5NzQ2MzUwNA==", "user": {"login": "phalexo", "id": 4603365, "node_id": "MDQ6VXNlcjQ2MDMzNjU=", "avatar_url": "https://avatars1.githubusercontent.com/u/4603365?v=4", "gravatar_id": "", "url": "https://api.github.com/users/phalexo", "html_url": "https://github.com/phalexo", "followers_url": "https://api.github.com/users/phalexo/followers", "following_url": "https://api.github.com/users/phalexo/following{/other_user}", "gists_url": "https://api.github.com/users/phalexo/gists{/gist_id}", "starred_url": "https://api.github.com/users/phalexo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/phalexo/subscriptions", "organizations_url": "https://api.github.com/users/phalexo/orgs", "repos_url": "https://api.github.com/users/phalexo/repos", "events_url": "https://api.github.com/users/phalexo/events{/privacy}", "received_events_url": "https://api.github.com/users/phalexo/received_events", "type": "User", "site_admin": false}, "created_at": "2018-06-14T22:59:49Z", "updated_at": "2018-06-14T22:59:49Z", "author_association": "NONE", "body_html": "<p>I made the following mods to one file and similar mods to two others. I'd appreciate a comment if it makes sense.</p>\n<p>#include &lt;THC/THC.h&gt;<br>\n#include &lt;stdio.h&gt;<br>\n#include \"nms_cuda_kernel.h\"</p>\n<p>// this symbol will be resolved automatically from PyTorch libs<br>\nextern THCState *state;</p>\n<p>int nms_cuda(THCudaIntTensor *keep_out, THCudaTensor *boxes_host,<br>\nTHCudaIntTensor *num_out, float nms_overlap_thresh) {</p>\n<pre><code>    int sz0 = THCudaTensor_size(state, boxes_host, 0);\n    int sz1 = THCudaTensor_size(state, boxes_host, 1);\n    nms_cuda_compute(THCudaIntTensor_data(state, keep_out),\n                     THCudaIntTensor_data(state, num_out),\n                     THCudaTensor_data(state, boxes_host),\n                     sz0, sz1,\n                     //boxes_host-&gt;size[0],\n                     //boxes_host-&gt;size[1],\n                     nms_overlap_thresh);\n\n    return 1;\n</code></pre>\n<p>}</p>", "body_text": "I made the following mods to one file and similar mods to two others. I'd appreciate a comment if it makes sense.\n#include <THC/THC.h>\n#include <stdio.h>\n#include \"nms_cuda_kernel.h\"\n// this symbol will be resolved automatically from PyTorch libs\nextern THCState *state;\nint nms_cuda(THCudaIntTensor *keep_out, THCudaTensor *boxes_host,\nTHCudaIntTensor *num_out, float nms_overlap_thresh) {\n    int sz0 = THCudaTensor_size(state, boxes_host, 0);\n    int sz1 = THCudaTensor_size(state, boxes_host, 1);\n    nms_cuda_compute(THCudaIntTensor_data(state, keep_out),\n                     THCudaIntTensor_data(state, num_out),\n                     THCudaTensor_data(state, boxes_host),\n                     sz0, sz1,\n                     //boxes_host->size[0],\n                     //boxes_host->size[1],\n                     nms_overlap_thresh);\n\n    return 1;\n\n}", "body": "I made the following mods to one file and similar mods to two others. I'd appreciate a comment if it makes sense.\r\n\r\n#include <THC/THC.h>\r\n#include <stdio.h>\r\n#include \"nms_cuda_kernel.h\"\r\n\r\n// this symbol will be resolved automatically from PyTorch libs\r\nextern THCState *state;\r\n\r\nint nms_cuda(THCudaIntTensor *keep_out, THCudaTensor *boxes_host,\r\n                     THCudaIntTensor *num_out, float nms_overlap_thresh) {\r\n\r\n        int sz0 = THCudaTensor_size(state, boxes_host, 0);\r\n        int sz1 = THCudaTensor_size(state, boxes_host, 1);\r\n        nms_cuda_compute(THCudaIntTensor_data(state, keep_out),\r\n                         THCudaIntTensor_data(state, num_out),\r\n                         THCudaTensor_data(state, boxes_host),\r\n                         sz0, sz1,\r\n                         //boxes_host->size[0],\r\n                         //boxes_host->size[1],\r\n                         nms_overlap_thresh);\r\n\r\n        return 1;\r\n}\r\n"}