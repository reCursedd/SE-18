{"url": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/103091647", "pull_request_review_id": 23869936, "id": 103091647, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEwMzA5MTY0Nw==", "diff_hunk": "@@ -18,9 +18,8 @@ def forward(self, i):\n         return result\n \n     def backward(self, grad_output):\n-        # TODO: this won't have to be zeroed\n         grad_input = grad_output.new(self.input_size).zero_()\n-        grad_input.index(self.index).copy_(grad_output)\n+        grad_input._set_index(self.index, grad_output)", "path": "torch/autograd/_functions/tensor.py", "position": 7, "original_position": 7, "commit_id": "e3eed9babdbad680a36f3c0154444cb017c12937", "original_commit_id": "60da9760a2cff039e7f2884f4f2786d2eaadcf31", "user": {"login": "apaszke", "id": 4583066, "node_id": "MDQ6VXNlcjQ1ODMwNjY=", "avatar_url": "https://avatars3.githubusercontent.com/u/4583066?v=4", "gravatar_id": "", "url": "https://api.github.com/users/apaszke", "html_url": "https://github.com/apaszke", "followers_url": "https://api.github.com/users/apaszke/followers", "following_url": "https://api.github.com/users/apaszke/following{/other_user}", "gists_url": "https://api.github.com/users/apaszke/gists{/gist_id}", "starred_url": "https://api.github.com/users/apaszke/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/apaszke/subscriptions", "organizations_url": "https://api.github.com/users/apaszke/orgs", "repos_url": "https://api.github.com/users/apaszke/repos", "events_url": "https://api.github.com/users/apaszke/events{/privacy}", "received_events_url": "https://api.github.com/users/apaszke/received_events", "type": "User", "site_admin": false}, "body": "LongTensor-in-a-tuple case will now fail in forward, because of \"Fall back to indexing compatible with numpy\". This will work for sure - if there's an index that can't copy the grad_output into grad_input, then `_set_index` will fail. Both `.index` and `._set_index` use the same logic in C.", "created_at": "2017-02-25T23:46:47Z", "updated_at": "2018-11-23T15:32:32Z", "html_url": "https://github.com/pytorch/pytorch/pull/852#discussion_r103091647", "pull_request_url": "https://api.github.com/repos/pytorch/pytorch/pulls/852", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/103091647"}, "html": {"href": "https://github.com/pytorch/pytorch/pull/852#discussion_r103091647"}, "pull_request": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/852"}}, "body_html": "<p>LongTensor-in-a-tuple case will now fail in forward, because of \"Fall back to indexing compatible with numpy\". This will work for sure - if there's an index that can't copy the grad_output into grad_input, then <code>_set_index</code> will fail. Both <code>.index</code> and <code>._set_index</code> use the same logic in C.</p>", "body_text": "LongTensor-in-a-tuple case will now fail in forward, because of \"Fall back to indexing compatible with numpy\". This will work for sure - if there's an index that can't copy the grad_output into grad_input, then _set_index will fail. Both .index and ._set_index use the same logic in C.", "in_reply_to_id": 103091613}