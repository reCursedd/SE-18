{"url": "https://api.github.com/repos/pytorch/pytorch/issues/3982", "repository_url": "https://api.github.com/repos/pytorch/pytorch", "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/3982/labels{/name}", "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/3982/comments", "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/3982/events", "html_url": "https://github.com/pytorch/pytorch/issues/3982", "id": 278689181, "node_id": "MDU6SXNzdWUyNzg2ODkxODE=", "number": 3982, "title": "torch.topk sorted parameter", "user": {"login": "RohitKeshari", "id": 26163807, "node_id": "MDQ6VXNlcjI2MTYzODA3", "avatar_url": "https://avatars0.githubusercontent.com/u/26163807?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RohitKeshari", "html_url": "https://github.com/RohitKeshari", "followers_url": "https://api.github.com/users/RohitKeshari/followers", "following_url": "https://api.github.com/users/RohitKeshari/following{/other_user}", "gists_url": "https://api.github.com/users/RohitKeshari/gists{/gist_id}", "starred_url": "https://api.github.com/users/RohitKeshari/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RohitKeshari/subscriptions", "organizations_url": "https://api.github.com/users/RohitKeshari/orgs", "repos_url": "https://api.github.com/users/RohitKeshari/repos", "events_url": "https://api.github.com/users/RohitKeshari/events{/privacy}", "received_events_url": "https://api.github.com/users/RohitKeshari/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 8, "created_at": "2017-12-02T14:45:41Z", "updated_at": "2018-04-19T08:05:42Z", "closed_at": "2017-12-02T21:34:41Z", "author_association": "NONE", "body_html": "<p>In the documentation <strong>torch.topk</strong> uses four parameter such as topk(self, k, dim=None, largest=True, sorted=True). In case of <strong>sorted=False</strong>, it gives ascending order sorted elements. This is quite confusing. If <strong>sorted=False</strong> it should provide first come first serve elements. Essentially index should be sorted.</p>", "body_text": "In the documentation torch.topk uses four parameter such as topk(self, k, dim=None, largest=True, sorted=True). In case of sorted=False, it gives ascending order sorted elements. This is quite confusing. If sorted=False it should provide first come first serve elements. Essentially index should be sorted.", "body": "In the documentation **torch.topk** uses four parameter such as topk(self, k, dim=None, largest=True, sorted=True). In case of **sorted=False**, it gives ascending order sorted elements. This is quite confusing. If **sorted=False** it should provide first come first serve elements. Essentially index should be sorted."}