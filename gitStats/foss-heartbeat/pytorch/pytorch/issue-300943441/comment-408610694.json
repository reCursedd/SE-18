{"url": "https://api.github.com/repos/pytorch/pytorch/issues/comments/408610694", "html_url": "https://github.com/pytorch/pytorch/issues/5455#issuecomment-408610694", "issue_url": "https://api.github.com/repos/pytorch/pytorch/issues/5455", "id": 408610694, "node_id": "MDEyOklzc3VlQ29tbWVudDQwODYxMDY5NA==", "user": {"login": "soumith", "id": 1310570, "node_id": "MDQ6VXNlcjEzMTA1NzA=", "avatar_url": "https://avatars0.githubusercontent.com/u/1310570?v=4", "gravatar_id": "", "url": "https://api.github.com/users/soumith", "html_url": "https://github.com/soumith", "followers_url": "https://api.github.com/users/soumith/followers", "following_url": "https://api.github.com/users/soumith/following{/other_user}", "gists_url": "https://api.github.com/users/soumith/gists{/gist_id}", "starred_url": "https://api.github.com/users/soumith/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/soumith/subscriptions", "organizations_url": "https://api.github.com/users/soumith/orgs", "repos_url": "https://api.github.com/users/soumith/repos", "events_url": "https://api.github.com/users/soumith/events{/privacy}", "received_events_url": "https://api.github.com/users/soumith/received_events", "type": "User", "site_admin": false}, "created_at": "2018-07-28T14:13:57Z", "updated_at": "2018-07-28T14:13:57Z", "author_association": "MEMBER", "body_html": "<p>I have tried to reproduce this on <code>0.4.1</code>, and failed. I presume whatever underlying bug that was there, we fixed. Here is stdout:</p>\n<pre><code>$:~/local/builder/tmp$ OMP_NUM_THREADS=1 MKL_NUM_THREADS=1 python foo.py\nStarting iteration 1\nfoo.py:41: UserWarning: Implicit dimension choice for log_softmax has been deprecated. Change the call to include dim=X as an argument.\n  output = self.softmax(self.out(output))\nfoo.py:73: UserWarning: invalid index of a 0-dim tensor. This will be an error in PyTorch 0.5. Use tensor.item() to convert a 0-dim tensor to a Python number\n  ret = loss.data[0] / target_length\nreturning from train: tensor(4.1607)\nloss: tensor(4.1607)\nReturned in main loop at the end of iteration 1\nStarting iteration 2\nreturning from train: tensor(4.1280)\nloss: tensor(4.1280)\nReturned in main loop at the end of iteration 2\nStarting iteration 3\nreturning from train: tensor(4.1131)\nloss: tensor(4.1131)\nReturned in main loop at the end of iteration 3\nStarting iteration 4\nreturning from train: tensor(4.0690)\nloss: tensor(4.0690)\nReturned in main loop at the end of iteration 4\nStarting iteration 5\nreturning from train: tensor(4.0502)\nloss: tensor(4.0502)\nReturned in main loop at the end of iteration 5\nStarting iteration 6\nreturning from train: tensor(4.0207)\nloss: tensor(4.0207)\nReturned in main loop at the end of iteration 6\nStarting iteration 7\nreturning from train: tensor(4.0308)\nloss: tensor(4.0308)\nReturned in main loop at the end of iteration 7\nStarting iteration 8\nreturning from train: tensor(4.0121)\nloss: tensor(4.0121)\nReturned in main loop at the end of iteration 8\n</code></pre>", "body_text": "I have tried to reproduce this on 0.4.1, and failed. I presume whatever underlying bug that was there, we fixed. Here is stdout:\n$:~/local/builder/tmp$ OMP_NUM_THREADS=1 MKL_NUM_THREADS=1 python foo.py\nStarting iteration 1\nfoo.py:41: UserWarning: Implicit dimension choice for log_softmax has been deprecated. Change the call to include dim=X as an argument.\n  output = self.softmax(self.out(output))\nfoo.py:73: UserWarning: invalid index of a 0-dim tensor. This will be an error in PyTorch 0.5. Use tensor.item() to convert a 0-dim tensor to a Python number\n  ret = loss.data[0] / target_length\nreturning from train: tensor(4.1607)\nloss: tensor(4.1607)\nReturned in main loop at the end of iteration 1\nStarting iteration 2\nreturning from train: tensor(4.1280)\nloss: tensor(4.1280)\nReturned in main loop at the end of iteration 2\nStarting iteration 3\nreturning from train: tensor(4.1131)\nloss: tensor(4.1131)\nReturned in main loop at the end of iteration 3\nStarting iteration 4\nreturning from train: tensor(4.0690)\nloss: tensor(4.0690)\nReturned in main loop at the end of iteration 4\nStarting iteration 5\nreturning from train: tensor(4.0502)\nloss: tensor(4.0502)\nReturned in main loop at the end of iteration 5\nStarting iteration 6\nreturning from train: tensor(4.0207)\nloss: tensor(4.0207)\nReturned in main loop at the end of iteration 6\nStarting iteration 7\nreturning from train: tensor(4.0308)\nloss: tensor(4.0308)\nReturned in main loop at the end of iteration 7\nStarting iteration 8\nreturning from train: tensor(4.0121)\nloss: tensor(4.0121)\nReturned in main loop at the end of iteration 8", "body": "I have tried to reproduce this on `0.4.1`, and failed. I presume whatever underlying bug that was there, we fixed. Here is stdout:\r\n\r\n```\r\n$:~/local/builder/tmp$ OMP_NUM_THREADS=1 MKL_NUM_THREADS=1 python foo.py\r\nStarting iteration 1\r\nfoo.py:41: UserWarning: Implicit dimension choice for log_softmax has been deprecated. Change the call to include dim=X as an argument.\r\n  output = self.softmax(self.out(output))\r\nfoo.py:73: UserWarning: invalid index of a 0-dim tensor. This will be an error in PyTorch 0.5. Use tensor.item() to convert a 0-dim tensor to a Python number\r\n  ret = loss.data[0] / target_length\r\nreturning from train: tensor(4.1607)\r\nloss: tensor(4.1607)\r\nReturned in main loop at the end of iteration 1\r\nStarting iteration 2\r\nreturning from train: tensor(4.1280)\r\nloss: tensor(4.1280)\r\nReturned in main loop at the end of iteration 2\r\nStarting iteration 3\r\nreturning from train: tensor(4.1131)\r\nloss: tensor(4.1131)\r\nReturned in main loop at the end of iteration 3\r\nStarting iteration 4\r\nreturning from train: tensor(4.0690)\r\nloss: tensor(4.0690)\r\nReturned in main loop at the end of iteration 4\r\nStarting iteration 5\r\nreturning from train: tensor(4.0502)\r\nloss: tensor(4.0502)\r\nReturned in main loop at the end of iteration 5\r\nStarting iteration 6\r\nreturning from train: tensor(4.0207)\r\nloss: tensor(4.0207)\r\nReturned in main loop at the end of iteration 6\r\nStarting iteration 7\r\nreturning from train: tensor(4.0308)\r\nloss: tensor(4.0308)\r\nReturned in main loop at the end of iteration 7\r\nStarting iteration 8\r\nreturning from train: tensor(4.0121)\r\nloss: tensor(4.0121)\r\nReturned in main loop at the end of iteration 8\r\n```"}