{"url": "https://api.github.com/repos/pytorch/pytorch/issues/4634", "repository_url": "https://api.github.com/repos/pytorch/pytorch", "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/4634/labels{/name}", "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/4634/comments", "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/4634/events", "html_url": "https://github.com/pytorch/pytorch/issues/4634", "id": 288111632, "node_id": "MDU6SXNzdWUyODgxMTE2MzI=", "number": 4634, "title": "Issues about symeig and svd on GPU", "user": {"login": "AkonLau", "id": 33197540, "node_id": "MDQ6VXNlcjMzMTk3NTQw", "avatar_url": "https://avatars0.githubusercontent.com/u/33197540?v=4", "gravatar_id": "", "url": "https://api.github.com/users/AkonLau", "html_url": "https://github.com/AkonLau", "followers_url": "https://api.github.com/users/AkonLau/followers", "following_url": "https://api.github.com/users/AkonLau/following{/other_user}", "gists_url": "https://api.github.com/users/AkonLau/gists{/gist_id}", "starred_url": "https://api.github.com/users/AkonLau/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/AkonLau/subscriptions", "organizations_url": "https://api.github.com/users/AkonLau/orgs", "repos_url": "https://api.github.com/users/AkonLau/repos", "events_url": "https://api.github.com/users/AkonLau/events{/privacy}", "received_events_url": "https://api.github.com/users/AkonLau/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2018-01-12T12:59:30Z", "updated_at": "2018-04-30T00:09:33Z", "closed_at": "2018-01-13T11:00:50Z", "author_association": "NONE", "body_html": "<p>When torch.symeig or torch.svb works on GPU, why it still occupies a lot of CPU? Is it a bug or not?<br>\nThe code are D, V = torch.symeig(input1, eigenvectors=True ), U, D, V = torch.svb(input2). The input1 and input2 are all torch.cuda.FloatTensor type. When I test it on GPU , they still occupy a lot of GPU.<br>\nBut when I try D= torch.symeig(input1 ) on the GPU, it didn't occupy CPU. Could you give me some advices?</p>", "body_text": "When torch.symeig or torch.svb works on GPU, why it still occupies a lot of CPU? Is it a bug or not?\nThe code are D, V = torch.symeig(input1, eigenvectors=True ), U, D, V = torch.svb(input2). The input1 and input2 are all torch.cuda.FloatTensor type. When I test it on GPU , they still occupy a lot of GPU.\nBut when I try D= torch.symeig(input1 ) on the GPU, it didn't occupy CPU. Could you give me some advices?", "body": "When torch.symeig or torch.svb works on GPU, why it still occupies a lot of CPU? Is it a bug or not?\r\nThe code are D, V = torch.symeig(input1, eigenvectors=True ), U, D, V = torch.svb(input2). The input1 and input2 are all torch.cuda.FloatTensor type. When I test it on GPU , they still occupy a lot of GPU.\r\nBut when I try D= torch.symeig(input1 ) on the GPU, it didn't occupy CPU. Could you give me some advices?"}