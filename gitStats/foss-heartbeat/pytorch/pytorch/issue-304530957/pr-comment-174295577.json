{"url": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/174295577", "pull_request_review_id": 103624641, "id": 174295577, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE3NDI5NTU3Nw==", "diff_hunk": "@@ -115,30 +112,24 @@ struct String : public Tree {\n   std::string value_;\n };\n struct Number : public Tree {\n-  Number(double value_) : Tree(TK_NUMBER), value_(value_) {}\n-  virtual double doubleValue() const override {\n+  Number(SourceRange range, std::string value)\n+    : Tree(TK_NUMBER)\n+    , range_(std::move(range))\n+    , value_(std::move(value)) {}\n+  virtual const std::string& stringValue() const override {\n     return value_;\n   }\n-  template <typename... Args>\n-  static TreeRef create(Args&&... args) {\n-    return std::make_shared<Number>(std::forward<Args>(args)...);\n-  }\n-\n- private:\n-  double value_;\n-};\n-struct Bool : public Tree {\n-  Bool(bool value_) : Tree(TK_BOOL), value_(value_) {}\n-  virtual double doubleValue() const override {\n-    return value_;\n+  virtual const SourceRange& range() const override {", "path": "torch/csrc/jit/script/tree.h", "position": null, "original_position": 44, "commit_id": "b2618888ea70750f90b0b7d9ef8ee0e666afa092", "original_commit_id": "1616517c9c25d60759714ad1dbf832e119b6953d", "user": {"login": "zdevito", "id": 370202, "node_id": "MDQ6VXNlcjM3MDIwMg==", "avatar_url": "https://avatars0.githubusercontent.com/u/370202?v=4", "gravatar_id": "", "url": "https://api.github.com/users/zdevito", "html_url": "https://github.com/zdevito", "followers_url": "https://api.github.com/users/zdevito/followers", "following_url": "https://api.github.com/users/zdevito/following{/other_user}", "gists_url": "https://api.github.com/users/zdevito/gists{/gist_id}", "starred_url": "https://api.github.com/users/zdevito/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/zdevito/subscriptions", "organizations_url": "https://api.github.com/users/zdevito/orgs", "repos_url": "https://api.github.com/users/zdevito/repos", "events_url": "https://api.github.com/users/zdevito/events{/privacy}", "received_events_url": "https://api.github.com/users/zdevito/received_events", "type": "User", "site_admin": false}, "body": "Previously only CompoundTrees have ranges. The expectation is that anything that requires a range will be wrapped in another Tree, e.g.:\r\n\r\n`(const 4)`\r\nWhere the 4 is a String tree.", "created_at": "2018-03-13T21:47:56Z", "updated_at": "2018-11-23T15:40:42Z", "html_url": "https://github.com/pytorch/pytorch/pull/5716#discussion_r174295577", "pull_request_url": "https://api.github.com/repos/pytorch/pytorch/pulls/5716", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/174295577"}, "html": {"href": "https://github.com/pytorch/pytorch/pull/5716#discussion_r174295577"}, "pull_request": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/5716"}}, "body_html": "<p>Previously only CompoundTrees have ranges. The expectation is that anything that requires a range will be wrapped in another Tree, e.g.:</p>\n<p><code>(const 4)</code><br>\nWhere the 4 is a String tree.</p>", "body_text": "Previously only CompoundTrees have ranges. The expectation is that anything that requires a range will be wrapped in another Tree, e.g.:\n(const 4)\nWhere the 4 is a String tree."}