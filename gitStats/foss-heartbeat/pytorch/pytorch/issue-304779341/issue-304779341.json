{"url": "https://api.github.com/repos/pytorch/pytorch/issues/5739", "repository_url": "https://api.github.com/repos/pytorch/pytorch", "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/5739/labels{/name}", "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/5739/comments", "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/5739/events", "html_url": "https://github.com/pytorch/pytorch/issues/5739", "id": 304779341, "node_id": "MDU6SXNzdWUzMDQ3NzkzNDE=", "number": 5739, "title": "Segmentation fault when cat list with all-empty cuda tensors", "user": {"login": "fmassa", "id": 9110200, "node_id": "MDQ6VXNlcjkxMTAyMDA=", "avatar_url": "https://avatars2.githubusercontent.com/u/9110200?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fmassa", "html_url": "https://github.com/fmassa", "followers_url": "https://api.github.com/users/fmassa/followers", "following_url": "https://api.github.com/users/fmassa/following{/other_user}", "gists_url": "https://api.github.com/users/fmassa/gists{/gist_id}", "starred_url": "https://api.github.com/users/fmassa/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fmassa/subscriptions", "organizations_url": "https://api.github.com/users/fmassa/orgs", "repos_url": "https://api.github.com/users/fmassa/repos", "events_url": "https://api.github.com/users/fmassa/events{/privacy}", "received_events_url": "https://api.github.com/users/fmassa/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2018-03-13T14:07:40Z", "updated_at": "2018-03-24T02:22:40Z", "closed_at": "2018-03-24T02:22:40Z", "author_association": "MEMBER", "body_html": "<div class=\"highlight highlight-source-python\"><pre><span class=\"pl-k\">import</span> torch\n\na <span class=\"pl-k\">=</span> torch.Tensor([]).cuda()\n<span class=\"pl-c1\">print</span>(torch.cat([a]))  <span class=\"pl-c\"><span class=\"pl-c\">#</span> segmentation fault</span></pre></div>\n<p>gdb points that the error might be in trying to get a size from an empty tensor:</p>\n<pre><code>(gdb) bt\n#0  0x00007fffdf3b5364 in THCudaTensor_size () from /private/home/fmassa/.conda/envs/detectron_v2/lib/python3.6/site-packages/torch/lib/libATen.so.1\n#1  0x00007fffdd16b4b5 in THCudaTensor_catArray () from /private/home/fmassa/.conda/envs/detectron_v2/lib/python3.6/site-packages/torch/lib/libATen.so.1\n#2  0x00007fffdec8271f in at::CUDAFloatType::_cat(at::ArrayRef&lt;at::Tensor&gt;, long) const () from /private/home/fmassa/.conda/envs/detectron_v2/lib/python3.6/site-packages/torch/lib/libATen.so.1\n#3  0x00007fffdeb11664 in at::native::cat(at::ArrayRef&lt;at::Tensor&gt;, long) () from /private/home/fmassa/.conda/envs/detectron_v2/lib/python3.6/site-packages/torch/lib/libATen.so.1\n#4  0x00007fffded7a2fc in at::Type::cat(at::ArrayRef&lt;at::Tensor&gt;, long) const () from /private/home/fmassa/.conda/envs/detectron_v2/lib/python3.6/site-packages/torch/lib/libATen.so.1\n#5  0x00007fffee4c3cbc in torch::autograd::VariableType::cat (this=0x55555657a858, tensors=..., dim=0) at torch/csrc/autograd/generated/VariableType.cpp:18026\n#6  0x00007fffee6068c1 in at::cat (dim=0, tensors=...) at /private/home/fmassa/github/pytorch/torch/lib/tmp_install/include/ATen/Functions.h:2795\n#7  torch::autograd::dispatch_cat (dim=0, tensors=...) at torch/csrc/autograd/generated/python_torch_functions_dispatch.h:717\n#8  torch::autograd::THPVariable_cat (self=&lt;optimized out&gt;, args=&lt;optimized out&gt;, kwargs=&lt;optimized out&gt;) at torch/csrc/autograd/generated/python_torch_functions.cpp:1066\n#9  0x0000555555662fd4 in _PyCFunction_FastCallDict ()\n#10 0x00005555556f0bec in call_function ()\n#11 0x000055555571519a in _PyEval_EvalFrameDefault ()\n#12 0x00005555556eb529 in PyEval_EvalCodeEx ()\n#13 0x00005555556ec2cc in PyEval_EvalCode ()\n#14 0x0000555555768af4 in run_mod ()\n#15 0x0000555555768ef1 in PyRun_FileExFlags ()\n#16 0x00005555557690f4 in PyRun_SimpleFileExFlags ()\n#17 0x000055555576cc28 in Py_Main ()\n#18 0x000055555563471e in main ()\n</code></pre>\n<p>I'm using PyTorch version 0.4.0a0+66547ca</p>", "body_text": "import torch\n\na = torch.Tensor([]).cuda()\nprint(torch.cat([a]))  # segmentation fault\ngdb points that the error might be in trying to get a size from an empty tensor:\n(gdb) bt\n#0  0x00007fffdf3b5364 in THCudaTensor_size () from /private/home/fmassa/.conda/envs/detectron_v2/lib/python3.6/site-packages/torch/lib/libATen.so.1\n#1  0x00007fffdd16b4b5 in THCudaTensor_catArray () from /private/home/fmassa/.conda/envs/detectron_v2/lib/python3.6/site-packages/torch/lib/libATen.so.1\n#2  0x00007fffdec8271f in at::CUDAFloatType::_cat(at::ArrayRef<at::Tensor>, long) const () from /private/home/fmassa/.conda/envs/detectron_v2/lib/python3.6/site-packages/torch/lib/libATen.so.1\n#3  0x00007fffdeb11664 in at::native::cat(at::ArrayRef<at::Tensor>, long) () from /private/home/fmassa/.conda/envs/detectron_v2/lib/python3.6/site-packages/torch/lib/libATen.so.1\n#4  0x00007fffded7a2fc in at::Type::cat(at::ArrayRef<at::Tensor>, long) const () from /private/home/fmassa/.conda/envs/detectron_v2/lib/python3.6/site-packages/torch/lib/libATen.so.1\n#5  0x00007fffee4c3cbc in torch::autograd::VariableType::cat (this=0x55555657a858, tensors=..., dim=0) at torch/csrc/autograd/generated/VariableType.cpp:18026\n#6  0x00007fffee6068c1 in at::cat (dim=0, tensors=...) at /private/home/fmassa/github/pytorch/torch/lib/tmp_install/include/ATen/Functions.h:2795\n#7  torch::autograd::dispatch_cat (dim=0, tensors=...) at torch/csrc/autograd/generated/python_torch_functions_dispatch.h:717\n#8  torch::autograd::THPVariable_cat (self=<optimized out>, args=<optimized out>, kwargs=<optimized out>) at torch/csrc/autograd/generated/python_torch_functions.cpp:1066\n#9  0x0000555555662fd4 in _PyCFunction_FastCallDict ()\n#10 0x00005555556f0bec in call_function ()\n#11 0x000055555571519a in _PyEval_EvalFrameDefault ()\n#12 0x00005555556eb529 in PyEval_EvalCodeEx ()\n#13 0x00005555556ec2cc in PyEval_EvalCode ()\n#14 0x0000555555768af4 in run_mod ()\n#15 0x0000555555768ef1 in PyRun_FileExFlags ()\n#16 0x00005555557690f4 in PyRun_SimpleFileExFlags ()\n#17 0x000055555576cc28 in Py_Main ()\n#18 0x000055555563471e in main ()\n\nI'm using PyTorch version 0.4.0a0+66547ca", "body": "```python\r\nimport torch\r\n\r\na = torch.Tensor([]).cuda()\r\nprint(torch.cat([a]))  # segmentation fault\r\n```\r\n\r\ngdb points that the error might be in trying to get a size from an empty tensor:\r\n```\r\n(gdb) bt\r\n#0  0x00007fffdf3b5364 in THCudaTensor_size () from /private/home/fmassa/.conda/envs/detectron_v2/lib/python3.6/site-packages/torch/lib/libATen.so.1\r\n#1  0x00007fffdd16b4b5 in THCudaTensor_catArray () from /private/home/fmassa/.conda/envs/detectron_v2/lib/python3.6/site-packages/torch/lib/libATen.so.1\r\n#2  0x00007fffdec8271f in at::CUDAFloatType::_cat(at::ArrayRef<at::Tensor>, long) const () from /private/home/fmassa/.conda/envs/detectron_v2/lib/python3.6/site-packages/torch/lib/libATen.so.1\r\n#3  0x00007fffdeb11664 in at::native::cat(at::ArrayRef<at::Tensor>, long) () from /private/home/fmassa/.conda/envs/detectron_v2/lib/python3.6/site-packages/torch/lib/libATen.so.1\r\n#4  0x00007fffded7a2fc in at::Type::cat(at::ArrayRef<at::Tensor>, long) const () from /private/home/fmassa/.conda/envs/detectron_v2/lib/python3.6/site-packages/torch/lib/libATen.so.1\r\n#5  0x00007fffee4c3cbc in torch::autograd::VariableType::cat (this=0x55555657a858, tensors=..., dim=0) at torch/csrc/autograd/generated/VariableType.cpp:18026\r\n#6  0x00007fffee6068c1 in at::cat (dim=0, tensors=...) at /private/home/fmassa/github/pytorch/torch/lib/tmp_install/include/ATen/Functions.h:2795\r\n#7  torch::autograd::dispatch_cat (dim=0, tensors=...) at torch/csrc/autograd/generated/python_torch_functions_dispatch.h:717\r\n#8  torch::autograd::THPVariable_cat (self=<optimized out>, args=<optimized out>, kwargs=<optimized out>) at torch/csrc/autograd/generated/python_torch_functions.cpp:1066\r\n#9  0x0000555555662fd4 in _PyCFunction_FastCallDict ()\r\n#10 0x00005555556f0bec in call_function ()\r\n#11 0x000055555571519a in _PyEval_EvalFrameDefault ()\r\n#12 0x00005555556eb529 in PyEval_EvalCodeEx ()\r\n#13 0x00005555556ec2cc in PyEval_EvalCode ()\r\n#14 0x0000555555768af4 in run_mod ()\r\n#15 0x0000555555768ef1 in PyRun_FileExFlags ()\r\n#16 0x00005555557690f4 in PyRun_SimpleFileExFlags ()\r\n#17 0x000055555576cc28 in Py_Main ()\r\n#18 0x000055555563471e in main ()\r\n```\r\n\r\nI'm using PyTorch version 0.4.0a0+66547ca\r\n"}