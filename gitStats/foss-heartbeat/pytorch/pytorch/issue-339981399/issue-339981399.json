{"url": "https://api.github.com/repos/pytorch/pytorch/issues/9315", "repository_url": "https://api.github.com/repos/pytorch/pytorch", "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/9315/labels{/name}", "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/9315/comments", "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/9315/events", "html_url": "https://github.com/pytorch/pytorch/issues/9315", "id": 339981399, "node_id": "MDU6SXNzdWUzMzk5ODEzOTk=", "number": 9315, "title": "qr is not implemented for type torch.cuda.HalfTensor", "user": {"login": "tbenst", "id": 863327, "node_id": "MDQ6VXNlcjg2MzMyNw==", "avatar_url": "https://avatars0.githubusercontent.com/u/863327?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tbenst", "html_url": "https://github.com/tbenst", "followers_url": "https://api.github.com/users/tbenst/followers", "following_url": "https://api.github.com/users/tbenst/following{/other_user}", "gists_url": "https://api.github.com/users/tbenst/gists{/gist_id}", "starred_url": "https://api.github.com/users/tbenst/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tbenst/subscriptions", "organizations_url": "https://api.github.com/users/tbenst/orgs", "repos_url": "https://api.github.com/users/tbenst/repos", "events_url": "https://api.github.com/users/tbenst/events{/privacy}", "received_events_url": "https://api.github.com/users/tbenst/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2018-07-10T19:44:20Z", "updated_at": "2018-07-10T21:36:52Z", "closed_at": null, "author_association": "NONE", "body_html": "<p>A number of operations are not implemented for HalfTensors, which makes it more difficult to leverage Tensor Cores.</p>\n<h2>Code example</h2>\n<div class=\"highlight highlight-source-python\"><pre><span class=\"pl-k\">import</span> torch\n<span class=\"pl-k\">import</span> torch.nn <span class=\"pl-k\">as</span> nn\nconv1 <span class=\"pl-k\">=</span> nn.Parameter(torch.HalfTensor(<span class=\"pl-c1\">64</span>,<span class=\"pl-c1\">1</span>,<span class=\"pl-c1\">5</span>,<span class=\"pl-c1\">5</span>).cuda())\nnn.init.orthogonal_(conv1, nn.init.calculate_gain(<span class=\"pl-s\"><span class=\"pl-pds\">'</span>relu<span class=\"pl-pds\">'</span></span>))\n<span class=\"pl-ii\">--------------------------------------------------------------------------</span><span class=\"pl-k\">-</span>\n<span class=\"pl-c1\">RuntimeError</span>                              Traceback (most recent call last)\n<span class=\"pl-k\">&lt;</span>ipython<span class=\"pl-k\">-</span><span class=\"pl-c1\">input</span><span class=\"pl-k\">-</span><span class=\"pl-c1\">21</span><span class=\"pl-k\">-</span><span class=\"pl-ii\">7fcd63ce6604</span><span class=\"pl-k\">&gt;</span> <span class=\"pl-k\">in</span> <span class=\"pl-k\">&lt;</span>module<span class=\"pl-k\">&gt;</span>()\n      <span class=\"pl-c1\">1</span> conv1 <span class=\"pl-k\">=</span> nn.Parameter(T.HalfTensor(<span class=\"pl-c1\">64</span>,<span class=\"pl-c1\">1</span>,<span class=\"pl-c1\">5</span>,<span class=\"pl-c1\">5</span>).cuda())\n<span class=\"pl-ii\">----</span><span class=\"pl-k\">&gt;</span> <span class=\"pl-c1\">2</span> nn.init.orthogonal_(conv1, nn.init.calculate_gain(<span class=\"pl-s\"><span class=\"pl-pds\">'</span>relu<span class=\"pl-pds\">'</span></span>))\n\n<span class=\"pl-k\">/</span>home<span class=\"pl-k\">/</span>ubuntu<span class=\"pl-k\">/</span>anaconda3<span class=\"pl-k\">/</span>envs<span class=\"pl-k\">/</span>pytorch_p27<span class=\"pl-k\">/</span>lib<span class=\"pl-k\">/</span>python2.7<span class=\"pl-k\">/</span>site<span class=\"pl-k\">-</span>packages<span class=\"pl-k\">/</span>torch<span class=\"pl-k\">/</span>nn<span class=\"pl-k\">/</span>init.pyc <span class=\"pl-k\">in</span> orthogonal_(tensor, gain)\n    <span class=\"pl-c1\">326</span> \n    <span class=\"pl-c1\">327</span>     <span class=\"pl-c\"><span class=\"pl-c\">#</span> Compute the qr factorization</span>\n<span class=\"pl-ii\">--</span><span class=\"pl-k\">&gt;</span> <span class=\"pl-c1\">328</span>     q, r <span class=\"pl-k\">=</span> torch.qr(flattened)\n    <span class=\"pl-c1\">329</span>     <span class=\"pl-c\"><span class=\"pl-c\">#</span> Make Q uniform according to https://arxiv.org/pdf/math-ph/0609050.pdf</span>\n    <span class=\"pl-c1\">330</span>     d <span class=\"pl-k\">=</span> torch.diag(r, <span class=\"pl-c1\">0</span>)\n\n<span class=\"pl-c1\">RuntimeError</span>: qr <span class=\"pl-k\">is</span> <span class=\"pl-k\">not</span> implemented <span class=\"pl-k\">for</span> <span class=\"pl-c1\">type</span> torch.cuda.HalfTensor</pre></div>", "body_text": "A number of operations are not implemented for HalfTensors, which makes it more difficult to leverage Tensor Cores.\nCode example\nimport torch\nimport torch.nn as nn\nconv1 = nn.Parameter(torch.HalfTensor(64,1,5,5).cuda())\nnn.init.orthogonal_(conv1, nn.init.calculate_gain('relu'))\n---------------------------------------------------------------------------\nRuntimeError                              Traceback (most recent call last)\n<ipython-input-21-7fcd63ce6604> in <module>()\n      1 conv1 = nn.Parameter(T.HalfTensor(64,1,5,5).cuda())\n----> 2 nn.init.orthogonal_(conv1, nn.init.calculate_gain('relu'))\n\n/home/ubuntu/anaconda3/envs/pytorch_p27/lib/python2.7/site-packages/torch/nn/init.pyc in orthogonal_(tensor, gain)\n    326 \n    327     # Compute the qr factorization\n--> 328     q, r = torch.qr(flattened)\n    329     # Make Q uniform according to https://arxiv.org/pdf/math-ph/0609050.pdf\n    330     d = torch.diag(r, 0)\n\nRuntimeError: qr is not implemented for type torch.cuda.HalfTensor", "body": "A number of operations are not implemented for HalfTensors, which makes it more difficult to leverage Tensor Cores.\r\n\r\n## Code example\r\n\r\n```python\r\nimport torch\r\nimport torch.nn as nn\r\nconv1 = nn.Parameter(torch.HalfTensor(64,1,5,5).cuda())\r\nnn.init.orthogonal_(conv1, nn.init.calculate_gain('relu'))\r\n---------------------------------------------------------------------------\r\nRuntimeError                              Traceback (most recent call last)\r\n<ipython-input-21-7fcd63ce6604> in <module>()\r\n      1 conv1 = nn.Parameter(T.HalfTensor(64,1,5,5).cuda())\r\n----> 2 nn.init.orthogonal_(conv1, nn.init.calculate_gain('relu'))\r\n\r\n/home/ubuntu/anaconda3/envs/pytorch_p27/lib/python2.7/site-packages/torch/nn/init.pyc in orthogonal_(tensor, gain)\r\n    326 \r\n    327     # Compute the qr factorization\r\n--> 328     q, r = torch.qr(flattened)\r\n    329     # Make Q uniform according to https://arxiv.org/pdf/math-ph/0609050.pdf\r\n    330     d = torch.diag(r, 0)\r\n\r\nRuntimeError: qr is not implemented for type torch.cuda.HalfTensor\r\n```\r\n"}