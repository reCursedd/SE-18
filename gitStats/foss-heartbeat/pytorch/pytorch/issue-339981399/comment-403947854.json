{"url": "https://api.github.com/repos/pytorch/pytorch/issues/comments/403947854", "html_url": "https://github.com/pytorch/pytorch/issues/9315#issuecomment-403947854", "issue_url": "https://api.github.com/repos/pytorch/pytorch/issues/9315", "id": 403947854, "node_id": "MDEyOklzc3VlQ29tbWVudDQwMzk0Nzg1NA==", "user": {"login": "vishwakftw", "id": 23639302, "node_id": "MDQ6VXNlcjIzNjM5MzAy", "avatar_url": "https://avatars2.githubusercontent.com/u/23639302?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vishwakftw", "html_url": "https://github.com/vishwakftw", "followers_url": "https://api.github.com/users/vishwakftw/followers", "following_url": "https://api.github.com/users/vishwakftw/following{/other_user}", "gists_url": "https://api.github.com/users/vishwakftw/gists{/gist_id}", "starred_url": "https://api.github.com/users/vishwakftw/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vishwakftw/subscriptions", "organizations_url": "https://api.github.com/users/vishwakftw/orgs", "repos_url": "https://api.github.com/users/vishwakftw/repos", "events_url": "https://api.github.com/users/vishwakftw/events{/privacy}", "received_events_url": "https://api.github.com/users/vishwakftw/received_events", "type": "User", "site_admin": false}, "created_at": "2018-07-10T20:02:06Z", "updated_at": "2018-07-10T20:02:06Z", "author_association": "CONTRIBUTOR", "body_html": "<p>I can think of one way of solving this: initialize with <code>float32</code> and then downcast to <code>float16</code>. I am not sure what problems this might cause.</p>\n<pre><code>conv1 = nn.Parameter(torch.Tensor(64,1,5,5).cuda())\nnn.init.orthogonal_(conv1, nn.init.calculate_gain('relu'))\nconv1 = conv1.to(torch.float16)\n</code></pre>", "body_text": "I can think of one way of solving this: initialize with float32 and then downcast to float16. I am not sure what problems this might cause.\nconv1 = nn.Parameter(torch.Tensor(64,1,5,5).cuda())\nnn.init.orthogonal_(conv1, nn.init.calculate_gain('relu'))\nconv1 = conv1.to(torch.float16)", "body": "I can think of one way of solving this: initialize with `float32` and then downcast to `float16`. I am not sure what problems this might cause.\r\n```\r\nconv1 = nn.Parameter(torch.Tensor(64,1,5,5).cuda())\r\nnn.init.orthogonal_(conv1, nn.init.calculate_gain('relu'))\r\nconv1 = conv1.to(torch.float16)\r\n```"}