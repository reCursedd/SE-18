{"url": "https://api.github.com/repos/pytorch/pytorch/issues/5151", "repository_url": "https://api.github.com/repos/pytorch/pytorch", "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/5151/labels{/name}", "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/5151/comments", "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/5151/events", "html_url": "https://github.com/pytorch/pytorch/issues/5151", "id": 295760909, "node_id": "MDU6SXNzdWUyOTU3NjA5MDk=", "number": 5151, "title": "Strange behavior when -fsanitize=address added to CMAKE_C_FLAGS/CMAKE_CXX_FLAGS", "user": {"login": "ezyang", "id": 13564, "node_id": "MDQ6VXNlcjEzNTY0", "avatar_url": "https://avatars0.githubusercontent.com/u/13564?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ezyang", "html_url": "https://github.com/ezyang", "followers_url": "https://api.github.com/users/ezyang/followers", "following_url": "https://api.github.com/users/ezyang/following{/other_user}", "gists_url": "https://api.github.com/users/ezyang/gists{/gist_id}", "starred_url": "https://api.github.com/users/ezyang/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ezyang/subscriptions", "organizations_url": "https://api.github.com/users/ezyang/orgs", "repos_url": "https://api.github.com/users/ezyang/repos", "events_url": "https://api.github.com/users/ezyang/events{/privacy}", "received_events_url": "https://api.github.com/users/ezyang/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-02-09T05:41:02Z", "updated_at": "2018-02-20T21:56:11Z", "closed_at": "2018-02-20T21:56:11Z", "author_association": "CONTRIBUTOR", "body_html": "<p>Apply:</p>\n<pre><code>diff --git a/aten/CMakeLists.txt b/aten/CMakeLists.txt\nindex 9893cc4..7a1997a 100644\n--- a/aten/CMakeLists.txt\n+++ b/aten/CMakeLists.txt\n@@ -26,8 +26,8 @@ if(\"${isSystemDir}\" STREQUAL \"-1\")\n endif()\n \n IF(NOT MSVC)\n-  set(CMAKE_CXX_FLAGS \"--std=c++11 -Wall -Wno-unknown-pragmas -Wno-vla -fexceptions ${CMAKE_CXX_FLAGS}\")\n-  set(CMAKE_C_FLAGS \"-fexceptions ${CMAKE_C_FLAGS}\")\n+  set(CMAKE_CXX_FLAGS \"-fsanitize=address --std=c++11 -Wall -Wno-unknown-pragmas -Wno-vla -fexceptions ${CMAKE_CXX_FLAGS}\")\n+  set(CMAKE_C_FLAGS \"-fsanitize=address -fexceptions ${CMAKE_C_FLAGS}\")\n ENDIF(NOT MSVC)\n \n \n</code></pre>\n<p>and then try to build. It'll fail, with the log tail looking like</p>\n<pre><code>-- Performing Test CXX_HAS_SSE4_2_3 - Failed\n-- Performing Test CXX_HAS_SSE4_2_4\n-- Performing Test CXX_HAS_SSE4_2_4 - Failed\n-- Performing Test CXX_HAS_AVX_1\n-- Performing Test CXX_HAS_AVX_1 - Failed\n-- Performing Test CXX_HAS_AVX_2\n-- Performing Test CXX_HAS_AVX_2 - Failed\n-- Performing Test CXX_HAS_AVX_3\n-- Performing Test CXX_HAS_AVX_3 - Failed\n-- Performing Test CXX_HAS_AVX2_1\n-- Performing Test CXX_HAS_AVX2_1 - Failed\n-- Performing Test CXX_HAS_AVX2_2\n-- Performing Test CXX_HAS_AVX2_2 - Failed\n-- Performing Test CXX_HAS_AVX2_3\n-- Performing Test CXX_HAS_AVX2_3 - Failed\n-- Performing Test HAS_C11_ATOMICS\n-- Performing Test HAS_C11_ATOMICS - Failed\n-- Performing Test HAS_MSC_ATOMICS\n-- Performing Test HAS_MSC_ATOMICS - Failed\n-- Performing Test HAS_GCC_ATOMICS\n-- Performing Test HAS_GCC_ATOMICS - Failed\n-- Looking for pthread.h\n-- Looking for pthread.h - found\n-- Looking for pthread_create\n-- Looking for pthread_create - found\n-- Found Threads: TRUE  \nCMake Error at CMakeLists.txt:313 (TARGET_LINK_LIBRARIES):\n  Cannot specify link libraries for target \"TH\" which is not built by this\n  project.\n\n\n-- Configuring incomplete, errors occurred!\n</code></pre>\n<p>In contrast, on this machine, I'd expect some of the feature tests to pass. Here is log snippet from a successful run without the patch:</p>\n<pre><code>-- Performing Test CXX_HAS_SSE4_2_2\n-- Performing Test CXX_HAS_SSE4_2_2 - Success\n-- Performing Test CXX_HAS_AVX_1\n-- Performing Test CXX_HAS_AVX_1 - Failed\n-- Performing Test CXX_HAS_AVX_2\n-- Performing Test CXX_HAS_AVX_2 - Success\n-- Performing Test CXX_HAS_AVX2_1\n-- Performing Test CXX_HAS_AVX2_1 - Failed\n-- Performing Test CXX_HAS_AVX2_2\n-- Performing Test CXX_HAS_AVX2_2 - Success\n-- SSE2 Found\n-- SSE3 Found\n-- AVX Found\n-- AVX2 Found\n-- Performing Test HAS_C11_ATOMICS\n-- Performing Test HAS_C11_ATOMICS - Failed\n-- Performing Test HAS_MSC_ATOMICS\n-- Performing Test HAS_MSC_ATOMICS - Failed\n-- Performing Test HAS_GCC_ATOMICS\n-- Performing Test HAS_GCC_ATOMICS - Success\n</code></pre>\n<p>An example error log entry:</p>\n<pre><code>Performing C SOURCE FILE Test HAS_GCC_ATOMICS failed with the following output:\nChange Dir: /home/ezyang/Dev/pytorch-tmp/torch/lib/build/aten/CMakeFiles/CMakeTmp\n\nRun Build Command:\"/bin/gmake\" \"cmTC_67e0e/fast\"\n/bin/gmake -f CMakeFiles/cmTC_67e0e.dir/build.make CMakeFiles/cmTC_67e0e.dir/build\ngmake[1]: Entering directory `/data/users/ezyang/pytorch-tmp/torch/lib/build/aten/CMakeFiles/CMakeTmp'\nBuilding C object CMakeFiles/cmTC_67e0e.dir/src.c.o\n/home/ezyang/Dev/pytorch-tmp-env/bin/cc    -DCUDA_HAS_FP16=1 -fsanitize=address -fexceptions  -fopenmp -DHAVE_GCC_GET_CPUID -DHAS_GCC_ATOMICS -fPIE   -o CMakeFiles/cm\nTC_67e0e.dir/src.c.o   -c /home/ezyang/Dev/pytorch-tmp/torch/lib/build/aten/CMakeFiles/CMakeTmp/src.c\nLinking C executable cmTC_67e0e\n/usr/bin/cmake -E cmake_link_script CMakeFiles/cmTC_67e0e.dir/link.txt --verbose=1\n/home/ezyang/Dev/pytorch-tmp-env/bin/cc  -DCUDA_HAS_FP16=1 -fsanitize=address -fexceptions  -fopenmp -DHAVE_GCC_GET_CPUID -DHAS_GCC_ATOMICS    CMakeFiles/cmTC_67e0e.dir/src.c.o  -o cmTC_67e0e -rdynamic \ngmake[1]: Leaving directory `/data/users/ezyang/pytorch-tmp/torch/lib/build/aten/CMakeFiles/CMakeTmp'\n\nReturn value: 127\nSource file was:\n\nint main()\n{\n  int a;\n  __sync_lock_test_and_set(&amp;a, 1);\n  __sync_fetch_and_add(&amp;a, 1);\n  if(!__sync_bool_compare_and_swap(&amp;a, 2, 3))\n    return -1;\n  return 0;\n}\n</code></pre>\n<p>No further stderr, which is pretty weird.</p>\n<p>It would be nice to get a better cmake error message in this situation.</p>\n<p>Google juice: ASAN.</p>", "body_text": "Apply:\ndiff --git a/aten/CMakeLists.txt b/aten/CMakeLists.txt\nindex 9893cc4..7a1997a 100644\n--- a/aten/CMakeLists.txt\n+++ b/aten/CMakeLists.txt\n@@ -26,8 +26,8 @@ if(\"${isSystemDir}\" STREQUAL \"-1\")\n endif()\n \n IF(NOT MSVC)\n-  set(CMAKE_CXX_FLAGS \"--std=c++11 -Wall -Wno-unknown-pragmas -Wno-vla -fexceptions ${CMAKE_CXX_FLAGS}\")\n-  set(CMAKE_C_FLAGS \"-fexceptions ${CMAKE_C_FLAGS}\")\n+  set(CMAKE_CXX_FLAGS \"-fsanitize=address --std=c++11 -Wall -Wno-unknown-pragmas -Wno-vla -fexceptions ${CMAKE_CXX_FLAGS}\")\n+  set(CMAKE_C_FLAGS \"-fsanitize=address -fexceptions ${CMAKE_C_FLAGS}\")\n ENDIF(NOT MSVC)\n \n \n\nand then try to build. It'll fail, with the log tail looking like\n-- Performing Test CXX_HAS_SSE4_2_3 - Failed\n-- Performing Test CXX_HAS_SSE4_2_4\n-- Performing Test CXX_HAS_SSE4_2_4 - Failed\n-- Performing Test CXX_HAS_AVX_1\n-- Performing Test CXX_HAS_AVX_1 - Failed\n-- Performing Test CXX_HAS_AVX_2\n-- Performing Test CXX_HAS_AVX_2 - Failed\n-- Performing Test CXX_HAS_AVX_3\n-- Performing Test CXX_HAS_AVX_3 - Failed\n-- Performing Test CXX_HAS_AVX2_1\n-- Performing Test CXX_HAS_AVX2_1 - Failed\n-- Performing Test CXX_HAS_AVX2_2\n-- Performing Test CXX_HAS_AVX2_2 - Failed\n-- Performing Test CXX_HAS_AVX2_3\n-- Performing Test CXX_HAS_AVX2_3 - Failed\n-- Performing Test HAS_C11_ATOMICS\n-- Performing Test HAS_C11_ATOMICS - Failed\n-- Performing Test HAS_MSC_ATOMICS\n-- Performing Test HAS_MSC_ATOMICS - Failed\n-- Performing Test HAS_GCC_ATOMICS\n-- Performing Test HAS_GCC_ATOMICS - Failed\n-- Looking for pthread.h\n-- Looking for pthread.h - found\n-- Looking for pthread_create\n-- Looking for pthread_create - found\n-- Found Threads: TRUE  \nCMake Error at CMakeLists.txt:313 (TARGET_LINK_LIBRARIES):\n  Cannot specify link libraries for target \"TH\" which is not built by this\n  project.\n\n\n-- Configuring incomplete, errors occurred!\n\nIn contrast, on this machine, I'd expect some of the feature tests to pass. Here is log snippet from a successful run without the patch:\n-- Performing Test CXX_HAS_SSE4_2_2\n-- Performing Test CXX_HAS_SSE4_2_2 - Success\n-- Performing Test CXX_HAS_AVX_1\n-- Performing Test CXX_HAS_AVX_1 - Failed\n-- Performing Test CXX_HAS_AVX_2\n-- Performing Test CXX_HAS_AVX_2 - Success\n-- Performing Test CXX_HAS_AVX2_1\n-- Performing Test CXX_HAS_AVX2_1 - Failed\n-- Performing Test CXX_HAS_AVX2_2\n-- Performing Test CXX_HAS_AVX2_2 - Success\n-- SSE2 Found\n-- SSE3 Found\n-- AVX Found\n-- AVX2 Found\n-- Performing Test HAS_C11_ATOMICS\n-- Performing Test HAS_C11_ATOMICS - Failed\n-- Performing Test HAS_MSC_ATOMICS\n-- Performing Test HAS_MSC_ATOMICS - Failed\n-- Performing Test HAS_GCC_ATOMICS\n-- Performing Test HAS_GCC_ATOMICS - Success\n\nAn example error log entry:\nPerforming C SOURCE FILE Test HAS_GCC_ATOMICS failed with the following output:\nChange Dir: /home/ezyang/Dev/pytorch-tmp/torch/lib/build/aten/CMakeFiles/CMakeTmp\n\nRun Build Command:\"/bin/gmake\" \"cmTC_67e0e/fast\"\n/bin/gmake -f CMakeFiles/cmTC_67e0e.dir/build.make CMakeFiles/cmTC_67e0e.dir/build\ngmake[1]: Entering directory `/data/users/ezyang/pytorch-tmp/torch/lib/build/aten/CMakeFiles/CMakeTmp'\nBuilding C object CMakeFiles/cmTC_67e0e.dir/src.c.o\n/home/ezyang/Dev/pytorch-tmp-env/bin/cc    -DCUDA_HAS_FP16=1 -fsanitize=address -fexceptions  -fopenmp -DHAVE_GCC_GET_CPUID -DHAS_GCC_ATOMICS -fPIE   -o CMakeFiles/cm\nTC_67e0e.dir/src.c.o   -c /home/ezyang/Dev/pytorch-tmp/torch/lib/build/aten/CMakeFiles/CMakeTmp/src.c\nLinking C executable cmTC_67e0e\n/usr/bin/cmake -E cmake_link_script CMakeFiles/cmTC_67e0e.dir/link.txt --verbose=1\n/home/ezyang/Dev/pytorch-tmp-env/bin/cc  -DCUDA_HAS_FP16=1 -fsanitize=address -fexceptions  -fopenmp -DHAVE_GCC_GET_CPUID -DHAS_GCC_ATOMICS    CMakeFiles/cmTC_67e0e.dir/src.c.o  -o cmTC_67e0e -rdynamic \ngmake[1]: Leaving directory `/data/users/ezyang/pytorch-tmp/torch/lib/build/aten/CMakeFiles/CMakeTmp'\n\nReturn value: 127\nSource file was:\n\nint main()\n{\n  int a;\n  __sync_lock_test_and_set(&a, 1);\n  __sync_fetch_and_add(&a, 1);\n  if(!__sync_bool_compare_and_swap(&a, 2, 3))\n    return -1;\n  return 0;\n}\n\nNo further stderr, which is pretty weird.\nIt would be nice to get a better cmake error message in this situation.\nGoogle juice: ASAN.", "body": "Apply:\r\n\r\n```\r\ndiff --git a/aten/CMakeLists.txt b/aten/CMakeLists.txt\r\nindex 9893cc4..7a1997a 100644\r\n--- a/aten/CMakeLists.txt\r\n+++ b/aten/CMakeLists.txt\r\n@@ -26,8 +26,8 @@ if(\"${isSystemDir}\" STREQUAL \"-1\")\r\n endif()\r\n \r\n IF(NOT MSVC)\r\n-  set(CMAKE_CXX_FLAGS \"--std=c++11 -Wall -Wno-unknown-pragmas -Wno-vla -fexceptions ${CMAKE_CXX_FLAGS}\")\r\n-  set(CMAKE_C_FLAGS \"-fexceptions ${CMAKE_C_FLAGS}\")\r\n+  set(CMAKE_CXX_FLAGS \"-fsanitize=address --std=c++11 -Wall -Wno-unknown-pragmas -Wno-vla -fexceptions ${CMAKE_CXX_FLAGS}\")\r\n+  set(CMAKE_C_FLAGS \"-fsanitize=address -fexceptions ${CMAKE_C_FLAGS}\")\r\n ENDIF(NOT MSVC)\r\n \r\n \r\n```\r\n\r\nand then try to build. It'll fail, with the log tail looking like\r\n\r\n```\r\n-- Performing Test CXX_HAS_SSE4_2_3 - Failed\r\n-- Performing Test CXX_HAS_SSE4_2_4\r\n-- Performing Test CXX_HAS_SSE4_2_4 - Failed\r\n-- Performing Test CXX_HAS_AVX_1\r\n-- Performing Test CXX_HAS_AVX_1 - Failed\r\n-- Performing Test CXX_HAS_AVX_2\r\n-- Performing Test CXX_HAS_AVX_2 - Failed\r\n-- Performing Test CXX_HAS_AVX_3\r\n-- Performing Test CXX_HAS_AVX_3 - Failed\r\n-- Performing Test CXX_HAS_AVX2_1\r\n-- Performing Test CXX_HAS_AVX2_1 - Failed\r\n-- Performing Test CXX_HAS_AVX2_2\r\n-- Performing Test CXX_HAS_AVX2_2 - Failed\r\n-- Performing Test CXX_HAS_AVX2_3\r\n-- Performing Test CXX_HAS_AVX2_3 - Failed\r\n-- Performing Test HAS_C11_ATOMICS\r\n-- Performing Test HAS_C11_ATOMICS - Failed\r\n-- Performing Test HAS_MSC_ATOMICS\r\n-- Performing Test HAS_MSC_ATOMICS - Failed\r\n-- Performing Test HAS_GCC_ATOMICS\r\n-- Performing Test HAS_GCC_ATOMICS - Failed\r\n-- Looking for pthread.h\r\n-- Looking for pthread.h - found\r\n-- Looking for pthread_create\r\n-- Looking for pthread_create - found\r\n-- Found Threads: TRUE  \r\nCMake Error at CMakeLists.txt:313 (TARGET_LINK_LIBRARIES):\r\n  Cannot specify link libraries for target \"TH\" which is not built by this\r\n  project.\r\n\r\n\r\n-- Configuring incomplete, errors occurred!\r\n```\r\n\r\nIn contrast, on this machine, I'd expect some of the feature tests to pass. Here is log snippet from a successful run without the patch:\r\n\r\n```\r\n-- Performing Test CXX_HAS_SSE4_2_2\r\n-- Performing Test CXX_HAS_SSE4_2_2 - Success\r\n-- Performing Test CXX_HAS_AVX_1\r\n-- Performing Test CXX_HAS_AVX_1 - Failed\r\n-- Performing Test CXX_HAS_AVX_2\r\n-- Performing Test CXX_HAS_AVX_2 - Success\r\n-- Performing Test CXX_HAS_AVX2_1\r\n-- Performing Test CXX_HAS_AVX2_1 - Failed\r\n-- Performing Test CXX_HAS_AVX2_2\r\n-- Performing Test CXX_HAS_AVX2_2 - Success\r\n-- SSE2 Found\r\n-- SSE3 Found\r\n-- AVX Found\r\n-- AVX2 Found\r\n-- Performing Test HAS_C11_ATOMICS\r\n-- Performing Test HAS_C11_ATOMICS - Failed\r\n-- Performing Test HAS_MSC_ATOMICS\r\n-- Performing Test HAS_MSC_ATOMICS - Failed\r\n-- Performing Test HAS_GCC_ATOMICS\r\n-- Performing Test HAS_GCC_ATOMICS - Success\r\n```\r\n\r\nAn example error log entry:\r\n\r\n```\r\nPerforming C SOURCE FILE Test HAS_GCC_ATOMICS failed with the following output:\r\nChange Dir: /home/ezyang/Dev/pytorch-tmp/torch/lib/build/aten/CMakeFiles/CMakeTmp\r\n\r\nRun Build Command:\"/bin/gmake\" \"cmTC_67e0e/fast\"\r\n/bin/gmake -f CMakeFiles/cmTC_67e0e.dir/build.make CMakeFiles/cmTC_67e0e.dir/build\r\ngmake[1]: Entering directory `/data/users/ezyang/pytorch-tmp/torch/lib/build/aten/CMakeFiles/CMakeTmp'\r\nBuilding C object CMakeFiles/cmTC_67e0e.dir/src.c.o\r\n/home/ezyang/Dev/pytorch-tmp-env/bin/cc    -DCUDA_HAS_FP16=1 -fsanitize=address -fexceptions  -fopenmp -DHAVE_GCC_GET_CPUID -DHAS_GCC_ATOMICS -fPIE   -o CMakeFiles/cm\r\nTC_67e0e.dir/src.c.o   -c /home/ezyang/Dev/pytorch-tmp/torch/lib/build/aten/CMakeFiles/CMakeTmp/src.c\r\nLinking C executable cmTC_67e0e\r\n/usr/bin/cmake -E cmake_link_script CMakeFiles/cmTC_67e0e.dir/link.txt --verbose=1\r\n/home/ezyang/Dev/pytorch-tmp-env/bin/cc  -DCUDA_HAS_FP16=1 -fsanitize=address -fexceptions  -fopenmp -DHAVE_GCC_GET_CPUID -DHAS_GCC_ATOMICS    CMakeFiles/cmTC_67e0e.dir/src.c.o  -o cmTC_67e0e -rdynamic \r\ngmake[1]: Leaving directory `/data/users/ezyang/pytorch-tmp/torch/lib/build/aten/CMakeFiles/CMakeTmp'\r\n\r\nReturn value: 127\r\nSource file was:\r\n\r\nint main()\r\n{\r\n  int a;\r\n  __sync_lock_test_and_set(&a, 1);\r\n  __sync_fetch_and_add(&a, 1);\r\n  if(!__sync_bool_compare_and_swap(&a, 2, 3))\r\n    return -1;\r\n  return 0;\r\n}\r\n```\r\n\r\nNo further stderr, which is pretty weird.\r\n\r\nIt would be nice to get a better cmake error message in this situation.\r\n\r\nGoogle juice: ASAN."}