{"url": "https://api.github.com/repos/pytorch/pytorch/issues/13770", "repository_url": "https://api.github.com/repos/pytorch/pytorch", "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/13770/labels{/name}", "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/13770/comments", "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/13770/events", "html_url": "https://github.com/pytorch/pytorch/issues/13770", "id": 379110807, "node_id": "MDU6SXNzdWUzNzkxMTA4MDc=", "number": 13770, "title": "RuntimeError: cuda runtime error (59) : device-side assert triggered at /..../../THCReduceAll.cuh:317", "user": {"login": "xphoniex", "id": 14107758, "node_id": "MDQ6VXNlcjE0MTA3NzU4", "avatar_url": "https://avatars2.githubusercontent.com/u/14107758?v=4", "gravatar_id": "", "url": "https://api.github.com/users/xphoniex", "html_url": "https://github.com/xphoniex", "followers_url": "https://api.github.com/users/xphoniex/followers", "following_url": "https://api.github.com/users/xphoniex/following{/other_user}", "gists_url": "https://api.github.com/users/xphoniex/gists{/gist_id}", "starred_url": "https://api.github.com/users/xphoniex/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/xphoniex/subscriptions", "organizations_url": "https://api.github.com/users/xphoniex/orgs", "repos_url": "https://api.github.com/users/xphoniex/repos", "events_url": "https://api.github.com/users/xphoniex/events{/privacy}", "received_events_url": "https://api.github.com/users/xphoniex/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-11-09T10:42:48Z", "updated_at": "2018-11-09T14:14:42Z", "closed_at": "2018-11-09T14:14:42Z", "author_association": "NONE", "body_html": "<h2>Questions and Help</h2>\n<p>I've been trying to run <a href=\"https://github.com/pytorch/ELF\">ELF</a> on my machine but run into this issue when loading the new model:</p>\n<pre><code>$ ./start_client.sh\n.\n.\n.\n.\n[2018-11-09 13:51:19.041] [rlpytorch.model_loader.ModelLoader-1-model_index0] [info] Loading model from ./myserver/save-1.bin\n[2018-11-09 13:51:19.041] [rlpytorch.model_loader.ModelLoader-1-model_index0] [info] replace_prefix for state dict: [['resnet.module', 'resnet'], ['init_conv.module', 'init_conv']]\n[2018-11-09 13:51:19.357] [rlpytorch.model_loader.ModelLoader-1-model_index0] [info] Finished loading model from ./myserver/save-1.bin\n/pytorch/aten/src/THC/THCTensorRandom.cuh:185: void sampleMultinomialOnce(long *, long, int, T *, T *, int, int) [with T = __half, AccT = float]: block: [0,0,0], thread: [64,0,0] Assertion `THCNumerics&lt;T&gt;::ge(val, zero)` failed.\n/pytorch/aten/src/THC/THCTensorRandom.cuh:185: void sampleMultinomialOnce(long *, long, int, T *, T *, int, int) [with T = __half, AccT = float]: block: [0,0,0], thread: [65,0,0] Assertion `THCNumerics&lt;T&gt;::ge(val, zero)` failed.\n/pytorch/aten/src/THC/THCTensorRandom.cuh:185: void sampleMultinomialOnce(long *, long, int, T *, T *, int, int) [with T = __half, AccT = float]: block: [0,0,0], thread: [66,0,0] Assertion `THCNumerics&lt;T&gt;::ge(val, zero)` failed.\n/pytorch/aten/src/THC/THCTensorRandom.cuh:185: void sampleMultinomialOnce(long *, long, int, T *, T *, int, int) [with T = __half, AccT = float]: block: [0,0,0], thread: [67,0,0] Assertion `THCNumerics&lt;T&gt;::ge(val, zero)` failed.\n/pytorch/aten/src/THC/THCTensorRandom.cuh:185: void sampleMultinomialOnce(long *, long, int, T *, T *, int, int) [with T = __half, AccT = float]: block: [0,0,0], thread: [68,0,0] Assertion `THCNumerics&lt;T&gt;::ge(val, zero)` failed.\n/pytorch/aten/src/THC/THCTensorRandom.cuh:185: void sampleMultinomialOnce(long *, long, int, T *, T *, int, int) [with T = __half, AccT = float]: block: [0,0,0], thread: [69,0,0] Assertion `THCNumerics&lt;T&gt;::ge(val, zero)` failed.\n/pytorch/aten/src/THC/THCTensorRandom.cuh:185: void sampleMultinomialOnce(long *, long, int, T *, T *, int, int) [with T = __half, AccT = float]: block: [0,0,0], thread: [70,0,0] Assertion `THCNumerics&lt;T&gt;::ge(val, zero)` failed.\n/pytorch/aten/src/THC/THCTensorRandom.cuh:185: void sampleMultinomialOnce(long *, long, int, T *, T *, int, int) [with T = __half, AccT = float]: block: [0,0,0], thread: [71,0,0] Assertion `THCNumerics&lt;T&gt;::ge(val, zero)` failed.\n/pytorch/aten/src/THC/THCTensorRandom.cuh:185: void sampleMultinomialOnce(long *, long, int, T *, T *, int, int) [with T = __half, AccT = float]: block: [0,0,0], thread: [72,0,0] Assertion `THCNumerics&lt;T&gt;::ge(val, zero)` failed.\n/pytorch/aten/src/THC/THCTensorRandom.cuh:185: void sampleMultinomialOnce(long *, long, int, T *, T *, int, int) [with T = __half, AccT = float]: block: [0,0,0], thread: [73,0,0] Assertion `THCNumerics&lt;T&gt;::ge(val, zero)` failed.\n/pytorch/aten/src/THC/THCTensorRandom.cuh:185: void sampleMultinomialOnce(long *, long, int, T *, T *, int, int) [with T = __half, AccT = float]: block: [0,0,0], thread: [74,0,0] Assertion `THCNumerics&lt;T&gt;::ge(val, zero)` failed.\n/pytorch/aten/src/THC/THCTensorRandom.cuh:185: void sampleMultinomialOnce(long *, long, int, T *, T *, int, int) [with T = __half, AccT = float]: block: [0,0,0], thread: [75,0,0] Assertion `THCNumerics&lt;T&gt;::ge(val, zero)` failed.\n/pytorch/aten/src/THC/THCTensorRandom.cuh:185: void sampleMultinomialOnce(long *, long, int, T *, T *, int, int) [with T = __half, AccT = float]: block: [0,0,0], thread: [76,0,0] Assertion `THCNumerics&lt;T&gt;::ge(val, zero)` failed.\n/pytorch/aten/src/THC/THCTensorRandom.cuh:185: void sampleMultinomialOnce(long *, long, int, T *, T *, int, int) [with T = __half, AccT = float]: block: [0,0,0], thread: [77,0,0] Assertion `THCNumerics&lt;T&gt;::ge(val, zero)` failed.\n/pytorch/aten/src/THC/THCTensorRandom.cuh:185: void sampleMultinomialOnce(long *, long, int, T *, T *, int, int) [with T = __half, AccT = float]: block: [0,0,0], thread: [78,0,0] Assertion `THCNumerics&lt;T&gt;::ge(val, zero)` failed.\n/pytorch/aten/src/THC/THCTensorRandom.cuh:185: void sampleMultinomialOnce(long *, long, int, T *, T *, int, int) [with T = __half, AccT = float]: block: [0,0,0], thread: [79,0,0] Assertion `THCNumerics&lt;T&gt;::ge(val, zero)` failed.\n/pytorch/aten/src/THC/THCTensorRandom.cuh:185: void sampleMultinomialOnce(long *, long, int, T *, T *, int, int) [with T = __half, AccT = float]: block: [0,0,0], thread: [80,0,0] Assertion `THCNumerics&lt;T&gt;::ge(val, zero)` failed.\n/pytorch/aten/src/THC/THCTensorRandom.cuh:185: void sampleMultinomialOnce(long *, long, int, T *, T *, int, int) [with T = __half, AccT = float]: block: [0,0,0], thread: [81,0,0] Assertion `THCNumerics&lt;T&gt;::ge(val, zero)` failed.\n/pytorch/aten/src/THC/THCTensorRandom.cuh:185: void sampleMultinomialOnce(long *, long, int, T *, T *, int, int) [with T = __half, AccT = float]: block: [0,0,0], thread: [0,0,0] Assertion `THCNumerics&lt;T&gt;::ge(val, zero)` failed.\n/pytorch/aten/src/THC/THCTensorRandom.cuh:185: void sampleMultinomialOnce(long *, long, int, T *, T *, int, int) [with T = __half, AccT = float]: block: [0,0,0], thread: [1,0,0] Assertion `THCNumerics&lt;T&gt;::ge(val, zero)` failed.\n/pytorch/aten/src/THC/THCTensorRandom.cuh:185: void sampleMultinomialOnce(long *, long, int, T *, T *, int, int) [with T = __half, AccT = float]: block: [0,0,0], thread: [2,0,0] Assertion `THCNumerics&lt;T&gt;::ge(val, zero)` failed.\n/pytorch/aten/src/THC/THCTensorRandom.cuh:185: void sampleMultinomialOnce(long *, long, int, T *, T *, int, int) [with T = __half, AccT = float]: block: [0,0,0], thread: [3,0,0] Assertion `THCNumerics&lt;T&gt;::ge(val, zero)` failed.\n/pytorch/aten/src/THC/THCTensorRandom.cuh:185: void sampleMultinomialOnce(long *, long, int, T *, T *, int, int) [with T = __half, AccT = float]: block: [0,0,0], thread: [4,0,0] Assertion `THCNumerics&lt;T&gt;::ge(val, zero)` failed.\n/pytorch/aten/src/THC/THCTensorRandom.cuh:185: void sampleMultinomialOnce(long *, long, int, T *, T *, int, int) [with T = __half, AccT = float]: block: [0,0,0], thread: [5,0,0] Assertion `THCNumerics&lt;T&gt;::ge(val, zero)` failed.\n/pytorch/aten/src/THC/THCTensorRandom.cuh:185: void sampleMultinomialOnce(long *, long, int, T *, T *, int, int) [with T = __half, AccT = float]: block: [0,0,0], thread: [6,0,0] Assertion `THCNumerics&lt;T&gt;::ge(val, zero)` failed.\n/pytorch/aten/src/THC/THCTensorRandom.cuh:185: void sampleMultinomialOnce(long *, long, int, T *, T *, int, int) [with T = __half, AccT = float]: block: [0,0,0], thread: [7,0,0] Assertion `THCNumerics&lt;T&gt;::ge(val, zero)` failed.\n/pytorch/aten/src/THC/THCTensorRandom.cuh:185: void sampleMultinomialOnce(long *, long, int, T *, T *, int, int) [with T = __half, AccT = float]: block: [0,0,0], thread: [8,0,0] Assertion `THCNumerics&lt;T&gt;::ge(val, zero)` failed.\n/pytorch/aten/src/THC/THCTensorRandom.cuh:185: void sampleMultinomialOnce(long *, long, int, T *, T *, int, int) [with T = __half, AccT = float]: block: [0,0,0], thread: [9,0,0] Assertion `THCNumerics&lt;T&gt;::ge(val, zero)` failed.\n/pytorch/aten/src/THC/THCTensorRandom.cuh:185: void sampleMultinomialOnce(long *, long, int, T *, T *, int, int) [with T = __half, AccT = float]: block: [0,0,0], thread: [10,0,0] Assertion `THCNumerics&lt;T&gt;::ge(val, zero)` failed.\n/pytorch/aten/src/THC/THCTensorRandom.cuh:185: void sampleMultinomialOnce(long *, long, int, T *, T *, int, int) [with T = __half, AccT = float]: block: [0,0,0], thread: [11,0,0] Assertion `THCNumerics&lt;T&gt;::ge(val, zero)` failed.\n/pytorch/aten/src/THC/THCTensorRandom.cuh:185: void sampleMultinomialOnce(long *, long, int, T *, T *, int, int) [with T = __half, AccT = float]: block: [0,0,0], thread: [12,0,0] Assertion `THCNumerics&lt;T&gt;::ge(val, zero)` failed.\n/pytorch/aten/src/THC/THCTensorRandom.cuh:185: void sampleMultinomialOnce(long *, long, int, T *, T *, int, int) [with T = __half, AccT = float]: block: [0,0,0], thread: [13,0,0] Assertion `THCNumerics&lt;T&gt;::ge(val, zero)` failed.\n/pytorch/aten/src/THC/THCTensorRandom.cuh:185: void sampleMultinomialOnce(long *, long, int, T *, T *, int, int) [with T = __half, AccT = float]: block: [0,0,0], thread: [14,0,0] Assertion `THCNumerics&lt;T&gt;::ge(val, zero)` failed.\n/pytorch/aten/src/THC/THCTensorRandom.cuh:185: void sampleMultinomialOnce(long *, long, int, T *, T *, int, int) [with T = __half, AccT = float]: block: [0,0,0], thread: [15,0,0] Assertion `THCNumerics&lt;T&gt;::ge(val, zero)` failed.\n/pytorch/aten/src/THC/THCTensorRandom.cuh:185: void sampleMultinomialOnce(long *, long, int, T *, T *, int, int) [with T = __half, AccT = float]: block: [0,0,0], thread: [16,0,0] Assertion `THCNumerics&lt;T&gt;::ge(val, zero)` failed.\n/pytorch/aten/src/THC/THCTensorRandom.cuh:185: void sampleMultinomialOnce(long *, long, int, T *, T *, int, int) [with T = __half, AccT = float]: block: [0,0,0], thread: [17,0,0] Assertion `THCNumerics&lt;T&gt;::ge(val, zero)` failed.\n/pytorch/aten/src/THC/THCTensorRandom.cuh:185: void sampleMultinomialOnce(long *, long, int, T *, T *, int, int) [with T = __half, AccT = float]: block: [0,0,0], thread: [18,0,0] Assertion `THCNumerics&lt;T&gt;::ge(val, zero)` failed.\n/pytorch/aten/src/THC/THCTensorRandom.cuh:185: void sampleMultinomialOnce(long *, long, int, T *, T *, int, int) [with T = __half, AccT = float]: block: [0,0,0], thread: [19,0,0] Assertion `THCNumerics&lt;T&gt;::ge(val, zero)` failed.\n/pytorch/aten/src/THC/THCTensorRandom.cuh:185: void sampleMultinomialOnce(long *, long, int, T *, T *, int, int) [with T = __half, AccT = float]: block: [0,0,0], thread: [20,0,0] Assertion `THCNumerics&lt;T&gt;::ge(val, zero)` failed.\n/pytorch/aten/src/THC/THCTensorRandom.cuh:185: void sampleMultinomialOnce(long *, long, int, T *, T *, int, int) [with T = __half, AccT = float]: block: [0,0,0], thread: [21,0,0] Assertion `THCNumerics&lt;T&gt;::ge(val, zero)` failed.\n/pytorch/aten/src/THC/THCTensorRandom.cuh:185: void sampleMultinomialOnce(long *, long, int, T *, T *, int, int) [with T = __half, AccT = float]: block: [0,0,0], thread: [22,0,0] Assertion `THCNumerics&lt;T&gt;::ge(val, zero)` failed.\n/pytorch/aten/src/THC/THCTensorRandom.cuh:185: void sampleMultinomialOnce(long *, long, int, T *, T *, int, int) [with T = __half, AccT = float]: block: [0,0,0], thread: [23,0,0] Assertion `THCNumerics&lt;T&gt;::ge(val, zero)` failed.\n/pytorch/aten/src/THC/THCTensorRandom.cuh:185: void sampleMultinomialOnce(long *, long, int, T *, T *, int, int) [with T = __half, AccT = float]: block: [0,0,0], thread: [24,0,0] Assertion `THCNumerics&lt;T&gt;::ge(val, zero)` failed.\n/pytorch/aten/src/THC/THCTensorRandom.cuh:185: void sampleMultinomialOnce(long *, long, int, T *, T *, int, int) [with T = __half, AccT = float]: block: [0,0,0], thread: [25,0,0] Assertion `THCNumerics&lt;T&gt;::ge(val, zero)` failed.\n/pytorch/aten/src/THC/THCTensorRandom.cuh:185: void sampleMultinomialOnce(long *, long, int, T *, T *, int, int) [with T = __half, AccT = float]: block: [0,0,0], thread: [26,0,0] Assertion `THCNumerics&lt;T&gt;::ge(val, zero)` failed.\n/pytorch/aten/src/THC/THCTensorRandom.cuh:185: void sampleMultinomialOnce(long *, long, int, T *, T *, int, int) [with T = __half, AccT = float]: block: [0,0,0], thread: [27,0,0] Assertion `THCNumerics&lt;T&gt;::ge(val, zero)` failed.\n/pytorch/aten/src/THC/THCTensorRandom.cuh:185: void sampleMultinomialOnce(long *, long, int, T *, T *, int, int) [with T = __half, AccT = float]: block: [0,0,0], thread: [28,0,0] Assertion `THCNumerics&lt;T&gt;::ge(val, zero)` failed.\n/pytorch/aten/src/THC/THCTensorRandom.cuh:185: void sampleMultinomialOnce(long *, long, int, T *, T *, int, int) [with T = __half, AccT = float]: block: [0,0,0], thread: [29,0,0] Assertion `THCNumerics&lt;T&gt;::ge(val, zero)` failed.\n/pytorch/aten/src/THC/THCTensorRandom.cuh:185: void sampleMultinomialOnce(long *, long, int, T *, T *, int, int) [with T = __half, AccT = float]: block: [0,0,0], thread: [30,0,0] Assertion `THCNumerics&lt;T&gt;::ge(val, zero)` failed.\n/pytorch/aten/src/THC/THCTensorRandom.cuh:185: void sampleMultinomialOnce(long *, long, int, T *, T *, int, int) [with T = __half, AccT = float]: block: [0,0,0], thread: [31,0,0] Assertion `THCNumerics&lt;T&gt;::ge(val, zero)` failed.\n/pytorch/aten/src/THC/THCTensorRandom.cuh:185: void sampleMultinomialOnce(long *, long, int, T *, T *, int, int) [with T = __half, AccT = float]: block: [0,0,0], thread: [32,0,0] Assertion `THCNumerics&lt;T&gt;::ge(val, zero)` failed.\n/pytorch/aten/src/THC/THCTensorRandom.cuh:185: void sampleMultinomialOnce(long *, long, int, T *, T *, int, int) [with T = __half, AccT = float]: block: [0,0,0], thread: [33,0,0] Assertion `THCNumerics&lt;T&gt;::ge(val, zero)` failed.\n/pytorch/aten/src/THC/THCTensorRandom.cuh:185: void sampleMultinomialOnce(long *, long, int, T *, T *, int, int) [with T = __half, AccT = float]: block: [0,0,0], thread: [34,0,0] Assertion `THCNumerics&lt;T&gt;::ge(val, zero)` failed.\n/pytorch/aten/src/THC/THCTensorRandom.cuh:185: void sampleMultinomialOnce(long *, long, int, T *, T *, int, int) [with T = __half, AccT = float]: block: [0,0,0], thread: [35,0,0] Assertion `THCNumerics&lt;T&gt;::ge(val, zero)` failed.\n/pytorch/aten/src/THC/THCTensorRandom.cuh:185: void sampleMultinomialOnce(long *, long, int, T *, T *, int, int) [with T = __half, AccT = float]: block: [0,0,0], thread: [36,0,0] Assertion `THCNumerics&lt;T&gt;::ge(val, zero)` failed.\n/pytorch/aten/src/THC/THCTensorRandom.cuh:185: void sampleMultinomialOnce(long *, long, int, T *, T *, int, int) [with T = __half, AccT = float]: block: [0,0,0], thread: [37,0,0] Assertion `THCNumerics&lt;T&gt;::ge(val, zero)` failed.\n/pytorch/aten/src/THC/THCTensorRandom.cuh:185: void sampleMultinomialOnce(long *, long, int, T *, T *, int, int) [with T = __half, AccT = float]: block: [0,0,0], thread: [38,0,0] Assertion `THCNumerics&lt;T&gt;::ge(val, zero)` failed.\n/pytorch/aten/src/THC/THCTensorRandom.cuh:185: void sampleMultinomialOnce(long *, long, int, T *, T *, int, int) [with T = __half, AccT = float]: block: [0,0,0], thread: [39,0,0] Assertion `THCNumerics&lt;T&gt;::ge(val, zero)` failed.\n/pytorch/aten/src/THC/THCTensorRandom.cuh:185: void sampleMultinomialOnce(long *, long, int, T *, T *, int, int) [with T = __half, AccT = float]: block: [0,0,0], thread: [40,0,0] Assertion `THCNumerics&lt;T&gt;::ge(val, zero)` failed.\n/pytorch/aten/src/THC/THCTensorRandom.cuh:185: void sampleMultinomialOnce(long *, long, int, T *, T *, int, int) [with T = __half, AccT = float]: block: [0,0,0], thread: [41,0,0] Assertion `THCNumerics&lt;T&gt;::ge(val, zero)` failed.\n/pytorch/aten/src/THC/THCTensorRandom.cuh:185: void sampleMultinomialOnce(long *, long, int, T *, T *, int, int) [with T = __half, AccT = float]: block: [0,0,0], thread: [42,0,0] Assertion `THCNumerics&lt;T&gt;::ge(val, zero)` failed.\n/pytorch/aten/src/THC/THCTensorRandom.cuh:185: void sampleMultinomialOnce(long *, long, int, T *, T *, int, int) [with T = __half, AccT = float]: block: [0,0,0], thread: [43,0,0] Assertion `THCNumerics&lt;T&gt;::ge(val, zero)` failed.\n/pytorch/aten/src/THC/THCTensorRandom.cuh:185: void sampleMultinomialOnce(long *, long, int, T *, T *, int, int) [with T = __half, AccT = float]: block: [0,0,0], thread: [44,0,0] Assertion `THCNumerics&lt;T&gt;::ge(val, zero)` failed.\n/pytorch/aten/src/THC/THCTensorRandom.cuh:185: void sampleMultinomialOnce(long *, long, int, T *, T *, int, int) [with T = __half, AccT = float]: block: [0,0,0], thread: [45,0,0] Assertion `THCNumerics&lt;T&gt;::ge(val, zero)` failed.\n/pytorch/aten/src/THC/THCTensorRandom.cuh:185: void sampleMultinomialOnce(long *, long, int, T *, T *, int, int) [with T = __half, AccT = float]: block: [0,0,0], thread: [46,0,0] Assertion `THCNumerics&lt;T&gt;::ge(val, zero)` failed.\n/pytorch/aten/src/THC/THCTensorRandom.cuh:185: void sampleMultinomialOnce(long *, long, int, T *, T *, int, int) [with T = __half, AccT = float]: block: [0,0,0], thread: [47,0,0] Assertion `THCNumerics&lt;T&gt;::ge(val, zero)` failed.\n/pytorch/aten/src/THC/THCTensorRandom.cuh:185: void sampleMultinomialOnce(long *, long, int, T *, T *, int, int) [with T = __half, AccT = float]: block: [0,0,0], thread: [48,0,0] Assertion `THCNumerics&lt;T&gt;::ge(val, zero)` failed.\n/pytorch/aten/src/THC/THCTensorRandom.cuh:185: void sampleMultinomialOnce(long *, long, int, T *, T *, int, int) [with T = __half, AccT = float]: block: [0,0,0], thread: [49,0,0] Assertion `THCNumerics&lt;T&gt;::ge(val, zero)` failed.\n/pytorch/aten/src/THC/THCTensorRandom.cuh:185: void sampleMultinomialOnce(long *, long, int, T *, T *, int, int) [with T = __half, AccT = float]: block: [0,0,0], thread: [50,0,0] Assertion `THCNumerics&lt;T&gt;::ge(val, zero)` failed.\n/pytorch/aten/src/THC/THCTensorRandom.cuh:185: void sampleMultinomialOnce(long *, long, int, T *, T *, int, int) [with T = __half, AccT = float]: block: [0,0,0], thread: [51,0,0] Assertion `THCNumerics&lt;T&gt;::ge(val, zero)` failed.\n/pytorch/aten/src/THC/THCTensorRandom.cuh:185: void sampleMultinomialOnce(long *, long, int, T *, T *, int, int) [with T = __half, AccT = float]: block: [0,0,0], thread: [52,0,0] Assertion `THCNumerics&lt;T&gt;::ge(val, zero)` failed.\n/pytorch/aten/src/THC/THCTensorRandom.cuh:185: void sampleMultinomialOnce(long *, long, int, T *, T *, int, int) [with T = __half, AccT = float]: block: [0,0,0], thread: [53,0,0] Assertion `THCNumerics&lt;T&gt;::ge(val, zero)` failed.\n/pytorch/aten/src/THC/THCTensorRandom.cuh:185: void sampleMultinomialOnce(long *, long, int, T *, T *, int, int) [with T = __half, AccT = float]: block: [0,0,0], thread: [54,0,0] Assertion `THCNumerics&lt;T&gt;::ge(val, zero)` failed.\n/pytorch/aten/src/THC/THCTensorRandom.cuh:185: void sampleMultinomialOnce(long *, long, int, T *, T *, int, int) [with T = __half, AccT = float]: block: [0,0,0], thread: [55,0,0] Assertion `THCNumerics&lt;T&gt;::ge(val, zero)` failed.\n/pytorch/aten/src/THC/THCTensorRandom.cuh:185: void sampleMultinomialOnce(long *, long, int, T *, T *, int, int) [with T = __half, AccT = float]: block: [0,0,0], thread: [56,0,0] Assertion `THCNumerics&lt;T&gt;::ge(val, zero)` failed.\n/pytorch/aten/src/THC/THCTensorRandom.cuh:185: void sampleMultinomialOnce(long *, long, int, T *, T *, int, int) [with T = __half, AccT = float]: block: [0,0,0], thread: [57,0,0] Assertion `THCNumerics&lt;T&gt;::ge(val, zero)` failed.\n/pytorch/aten/src/THC/THCTensorRandom.cuh:185: void sampleMultinomialOnce(long *, long, int, T *, T *, int, int) [with T = __half, AccT = float]: block: [0,0,0], thread: [58,0,0] Assertion `THCNumerics&lt;T&gt;::ge(val, zero)` failed.\n/pytorch/aten/src/THC/THCTensorRandom.cuh:185: void sampleMultinomialOnce(long *, long, int, T *, T *, int, int) [with T = __half, AccT = float]: block: [0,0,0], thread: [59,0,0] Assertion `THCNumerics&lt;T&gt;::ge(val, zero)` failed.\n/pytorch/aten/src/THC/THCTensorRandom.cuh:185: void sampleMultinomialOnce(long *, long, int, T *, T *, int, int) [with T = __half, AccT = float]: block: [0,0,0], thread: [60,0,0] Assertion `THCNumerics&lt;T&gt;::ge(val, zero)` failed.\n/pytorch/aten/src/THC/THCTensorRandom.cuh:185: void sampleMultinomialOnce(long *, long, int, T *, T *, int, int) [with T = __half, AccT = float]: block: [0,0,0], thread: [61,0,0] Assertion `THCNumerics&lt;T&gt;::ge(val, zero)` failed.\n/pytorch/aten/src/THC/THCTensorRandom.cuh:185: void sampleMultinomialOnce(long *, long, int, T *, T *, int, int) [with T = __half, AccT = float]: block: [0,0,0], thread: [62,0,0] Assertion `THCNumerics&lt;T&gt;::ge(val, zero)` failed.\n/pytorch/aten/src/THC/THCTensorRandom.cuh:185: void sampleMultinomialOnce(long *, long, int, T *, T *, int, int) [with T = __half, AccT = float]: block: [0,0,0], thread: [63,0,0] Assertion `THCNumerics&lt;T&gt;::ge(val, zero)` failed.\nTHCudaCheck FAIL file=/pytorch/aten/src/THC/generated/../THCReduceAll.cuh line=317 error=59 : device-side assert triggered\nTraceback (most recent call last):\n  File \"./selfplay.py\", line 202, in &lt;module&gt;\n    main()\n  File \"./selfplay.py\", line 196, in main\n    GC.run()\n  File \"/home/user/Downloads/ELF/src_py/elf/utils_elf.py\", line 435, in run\n    self._call(smem, *args, **kwargs)\n  File \"/home/user/Downloads/ELF/src_py/elf/utils_elf.py\", line 398, in _call\n    reply = self._cb[idx](picked, *args, **kwargs)\n  File \"./selfplay.py\", line 131, in &lt;lambda&gt;\n    lambda batch, e=e, stat=stat: actor(batch, e, stat))\n  File \"./selfplay.py\", line 126, in actor\n    reply = e.actor(batch)\n  File \"/home/user/Downloads/ELF/src_py/rlpytorch/trainer/trainer.py\", line 101, in actor\n    reply_msg = self.sampler.sample(state_curr)\n  File \"/home/user/Downloads/ELF/src_py/rlpytorch/sampler/sampler.py\", line 56, in sample\n    actions[a_node] = sampler(state_curr, self.options, node=pi_node)\n  File \"/home/user/Downloads/ELF/src_py/rlpytorch/sampler/sample_methods.py\", line 125, in sample_multinomial\n    return sample_eps_with_check(probs, args.epsilon, greedy=greedy)\n  File \"/home/user/Downloads/ELF/src_py/rlpytorch/sampler/sample_methods.py\", line 74, in sample_eps_with_check\n    actions = sample_with_check(probs, greedy=greedy)\n  File \"/home/user/Downloads/ELF/src_py/rlpytorch/sampler/sample_methods.py\", line 43, in sample_with_check\n    cond1 = (actions &lt; 0).sum()\nRuntimeError: cuda runtime error (59) : device-side assert triggered at /pytorch/aten/src/THC/generated/../THCReduceAll.cuh:317\n</code></pre>\n<p>I've already posted this <a href=\"https://github.com/pytorch/ELF/issues/95#issuecomment-423236025\" data-hovercard-type=\"issue\" data-hovercard-url=\"/pytorch/ELF/issues/95/hovercard\">issuecomment-423236025</a> on ELF repository but no response.  Can someone help?</p>", "body_text": "Questions and Help\nI've been trying to run ELF on my machine but run into this issue when loading the new model:\n$ ./start_client.sh\n.\n.\n.\n.\n[2018-11-09 13:51:19.041] [rlpytorch.model_loader.ModelLoader-1-model_index0] [info] Loading model from ./myserver/save-1.bin\n[2018-11-09 13:51:19.041] [rlpytorch.model_loader.ModelLoader-1-model_index0] [info] replace_prefix for state dict: [['resnet.module', 'resnet'], ['init_conv.module', 'init_conv']]\n[2018-11-09 13:51:19.357] [rlpytorch.model_loader.ModelLoader-1-model_index0] [info] Finished loading model from ./myserver/save-1.bin\n/pytorch/aten/src/THC/THCTensorRandom.cuh:185: void sampleMultinomialOnce(long *, long, int, T *, T *, int, int) [with T = __half, AccT = float]: block: [0,0,0], thread: [64,0,0] Assertion `THCNumerics<T>::ge(val, zero)` failed.\n/pytorch/aten/src/THC/THCTensorRandom.cuh:185: void sampleMultinomialOnce(long *, long, int, T *, T *, int, int) [with T = __half, AccT = float]: block: [0,0,0], thread: [65,0,0] Assertion `THCNumerics<T>::ge(val, zero)` failed.\n/pytorch/aten/src/THC/THCTensorRandom.cuh:185: void sampleMultinomialOnce(long *, long, int, T *, T *, int, int) [with T = __half, AccT = float]: block: [0,0,0], thread: [66,0,0] Assertion `THCNumerics<T>::ge(val, zero)` failed.\n/pytorch/aten/src/THC/THCTensorRandom.cuh:185: void sampleMultinomialOnce(long *, long, int, T *, T *, int, int) [with T = __half, AccT = float]: block: [0,0,0], thread: [67,0,0] Assertion `THCNumerics<T>::ge(val, zero)` failed.\n/pytorch/aten/src/THC/THCTensorRandom.cuh:185: void sampleMultinomialOnce(long *, long, int, T *, T *, int, int) [with T = __half, AccT = float]: block: [0,0,0], thread: [68,0,0] Assertion `THCNumerics<T>::ge(val, zero)` failed.\n/pytorch/aten/src/THC/THCTensorRandom.cuh:185: void sampleMultinomialOnce(long *, long, int, T *, T *, int, int) [with T = __half, AccT = float]: block: [0,0,0], thread: [69,0,0] Assertion `THCNumerics<T>::ge(val, zero)` failed.\n/pytorch/aten/src/THC/THCTensorRandom.cuh:185: void sampleMultinomialOnce(long *, long, int, T *, T *, int, int) [with T = __half, AccT = float]: block: [0,0,0], thread: [70,0,0] Assertion `THCNumerics<T>::ge(val, zero)` failed.\n/pytorch/aten/src/THC/THCTensorRandom.cuh:185: void sampleMultinomialOnce(long *, long, int, T *, T *, int, int) [with T = __half, AccT = float]: block: [0,0,0], thread: [71,0,0] Assertion `THCNumerics<T>::ge(val, zero)` failed.\n/pytorch/aten/src/THC/THCTensorRandom.cuh:185: void sampleMultinomialOnce(long *, long, int, T *, T *, int, int) [with T = __half, AccT = float]: block: [0,0,0], thread: [72,0,0] Assertion `THCNumerics<T>::ge(val, zero)` failed.\n/pytorch/aten/src/THC/THCTensorRandom.cuh:185: void sampleMultinomialOnce(long *, long, int, T *, T *, int, int) [with T = __half, AccT = float]: block: [0,0,0], thread: [73,0,0] Assertion `THCNumerics<T>::ge(val, zero)` failed.\n/pytorch/aten/src/THC/THCTensorRandom.cuh:185: void sampleMultinomialOnce(long *, long, int, T *, T *, int, int) [with T = __half, AccT = float]: block: [0,0,0], thread: [74,0,0] Assertion `THCNumerics<T>::ge(val, zero)` failed.\n/pytorch/aten/src/THC/THCTensorRandom.cuh:185: void sampleMultinomialOnce(long *, long, int, T *, T *, int, int) [with T = __half, AccT = float]: block: [0,0,0], thread: [75,0,0] Assertion `THCNumerics<T>::ge(val, zero)` failed.\n/pytorch/aten/src/THC/THCTensorRandom.cuh:185: void sampleMultinomialOnce(long *, long, int, T *, T *, int, int) [with T = __half, AccT = float]: block: [0,0,0], thread: [76,0,0] Assertion `THCNumerics<T>::ge(val, zero)` failed.\n/pytorch/aten/src/THC/THCTensorRandom.cuh:185: void sampleMultinomialOnce(long *, long, int, T *, T *, int, int) [with T = __half, AccT = float]: block: [0,0,0], thread: [77,0,0] Assertion `THCNumerics<T>::ge(val, zero)` failed.\n/pytorch/aten/src/THC/THCTensorRandom.cuh:185: void sampleMultinomialOnce(long *, long, int, T *, T *, int, int) [with T = __half, AccT = float]: block: [0,0,0], thread: [78,0,0] Assertion `THCNumerics<T>::ge(val, zero)` failed.\n/pytorch/aten/src/THC/THCTensorRandom.cuh:185: void sampleMultinomialOnce(long *, long, int, T *, T *, int, int) [with T = __half, AccT = float]: block: [0,0,0], thread: [79,0,0] Assertion `THCNumerics<T>::ge(val, zero)` failed.\n/pytorch/aten/src/THC/THCTensorRandom.cuh:185: void sampleMultinomialOnce(long *, long, int, T *, T *, int, int) [with T = __half, AccT = float]: block: [0,0,0], thread: [80,0,0] Assertion `THCNumerics<T>::ge(val, zero)` failed.\n/pytorch/aten/src/THC/THCTensorRandom.cuh:185: void sampleMultinomialOnce(long *, long, int, T *, T *, int, int) [with T = __half, AccT = float]: block: [0,0,0], thread: [81,0,0] Assertion `THCNumerics<T>::ge(val, zero)` failed.\n/pytorch/aten/src/THC/THCTensorRandom.cuh:185: void sampleMultinomialOnce(long *, long, int, T *, T *, int, int) [with T = __half, AccT = float]: block: [0,0,0], thread: [0,0,0] Assertion `THCNumerics<T>::ge(val, zero)` failed.\n/pytorch/aten/src/THC/THCTensorRandom.cuh:185: void sampleMultinomialOnce(long *, long, int, T *, T *, int, int) [with T = __half, AccT = float]: block: [0,0,0], thread: [1,0,0] Assertion `THCNumerics<T>::ge(val, zero)` failed.\n/pytorch/aten/src/THC/THCTensorRandom.cuh:185: void sampleMultinomialOnce(long *, long, int, T *, T *, int, int) [with T = __half, AccT = float]: block: [0,0,0], thread: [2,0,0] Assertion `THCNumerics<T>::ge(val, zero)` failed.\n/pytorch/aten/src/THC/THCTensorRandom.cuh:185: void sampleMultinomialOnce(long *, long, int, T *, T *, int, int) [with T = __half, AccT = float]: block: [0,0,0], thread: [3,0,0] Assertion `THCNumerics<T>::ge(val, zero)` failed.\n/pytorch/aten/src/THC/THCTensorRandom.cuh:185: void sampleMultinomialOnce(long *, long, int, T *, T *, int, int) [with T = __half, AccT = float]: block: [0,0,0], thread: [4,0,0] Assertion `THCNumerics<T>::ge(val, zero)` failed.\n/pytorch/aten/src/THC/THCTensorRandom.cuh:185: void sampleMultinomialOnce(long *, long, int, T *, T *, int, int) [with T = __half, AccT = float]: block: [0,0,0], thread: [5,0,0] Assertion `THCNumerics<T>::ge(val, zero)` failed.\n/pytorch/aten/src/THC/THCTensorRandom.cuh:185: void sampleMultinomialOnce(long *, long, int, T *, T *, int, int) [with T = __half, AccT = float]: block: [0,0,0], thread: [6,0,0] Assertion `THCNumerics<T>::ge(val, zero)` failed.\n/pytorch/aten/src/THC/THCTensorRandom.cuh:185: void sampleMultinomialOnce(long *, long, int, T *, T *, int, int) [with T = __half, AccT = float]: block: [0,0,0], thread: [7,0,0] Assertion `THCNumerics<T>::ge(val, zero)` failed.\n/pytorch/aten/src/THC/THCTensorRandom.cuh:185: void sampleMultinomialOnce(long *, long, int, T *, T *, int, int) [with T = __half, AccT = float]: block: [0,0,0], thread: [8,0,0] Assertion `THCNumerics<T>::ge(val, zero)` failed.\n/pytorch/aten/src/THC/THCTensorRandom.cuh:185: void sampleMultinomialOnce(long *, long, int, T *, T *, int, int) [with T = __half, AccT = float]: block: [0,0,0], thread: [9,0,0] Assertion `THCNumerics<T>::ge(val, zero)` failed.\n/pytorch/aten/src/THC/THCTensorRandom.cuh:185: void sampleMultinomialOnce(long *, long, int, T *, T *, int, int) [with T = __half, AccT = float]: block: [0,0,0], thread: [10,0,0] Assertion `THCNumerics<T>::ge(val, zero)` failed.\n/pytorch/aten/src/THC/THCTensorRandom.cuh:185: void sampleMultinomialOnce(long *, long, int, T *, T *, int, int) [with T = __half, AccT = float]: block: [0,0,0], thread: [11,0,0] Assertion `THCNumerics<T>::ge(val, zero)` failed.\n/pytorch/aten/src/THC/THCTensorRandom.cuh:185: void sampleMultinomialOnce(long *, long, int, T *, T *, int, int) [with T = __half, AccT = float]: block: [0,0,0], thread: [12,0,0] Assertion `THCNumerics<T>::ge(val, zero)` failed.\n/pytorch/aten/src/THC/THCTensorRandom.cuh:185: void sampleMultinomialOnce(long *, long, int, T *, T *, int, int) [with T = __half, AccT = float]: block: [0,0,0], thread: [13,0,0] Assertion `THCNumerics<T>::ge(val, zero)` failed.\n/pytorch/aten/src/THC/THCTensorRandom.cuh:185: void sampleMultinomialOnce(long *, long, int, T *, T *, int, int) [with T = __half, AccT = float]: block: [0,0,0], thread: [14,0,0] Assertion `THCNumerics<T>::ge(val, zero)` failed.\n/pytorch/aten/src/THC/THCTensorRandom.cuh:185: void sampleMultinomialOnce(long *, long, int, T *, T *, int, int) [with T = __half, AccT = float]: block: [0,0,0], thread: [15,0,0] Assertion `THCNumerics<T>::ge(val, zero)` failed.\n/pytorch/aten/src/THC/THCTensorRandom.cuh:185: void sampleMultinomialOnce(long *, long, int, T *, T *, int, int) [with T = __half, AccT = float]: block: [0,0,0], thread: [16,0,0] Assertion `THCNumerics<T>::ge(val, zero)` failed.\n/pytorch/aten/src/THC/THCTensorRandom.cuh:185: void sampleMultinomialOnce(long *, long, int, T *, T *, int, int) [with T = __half, AccT = float]: block: [0,0,0], thread: [17,0,0] Assertion `THCNumerics<T>::ge(val, zero)` failed.\n/pytorch/aten/src/THC/THCTensorRandom.cuh:185: void sampleMultinomialOnce(long *, long, int, T *, T *, int, int) [with T = __half, AccT = float]: block: [0,0,0], thread: [18,0,0] Assertion `THCNumerics<T>::ge(val, zero)` failed.\n/pytorch/aten/src/THC/THCTensorRandom.cuh:185: void sampleMultinomialOnce(long *, long, int, T *, T *, int, int) [with T = __half, AccT = float]: block: [0,0,0], thread: [19,0,0] Assertion `THCNumerics<T>::ge(val, zero)` failed.\n/pytorch/aten/src/THC/THCTensorRandom.cuh:185: void sampleMultinomialOnce(long *, long, int, T *, T *, int, int) [with T = __half, AccT = float]: block: [0,0,0], thread: [20,0,0] Assertion `THCNumerics<T>::ge(val, zero)` failed.\n/pytorch/aten/src/THC/THCTensorRandom.cuh:185: void sampleMultinomialOnce(long *, long, int, T *, T *, int, int) [with T = __half, AccT = float]: block: [0,0,0], thread: [21,0,0] Assertion `THCNumerics<T>::ge(val, zero)` failed.\n/pytorch/aten/src/THC/THCTensorRandom.cuh:185: void sampleMultinomialOnce(long *, long, int, T *, T *, int, int) [with T = __half, AccT = float]: block: [0,0,0], thread: [22,0,0] Assertion `THCNumerics<T>::ge(val, zero)` failed.\n/pytorch/aten/src/THC/THCTensorRandom.cuh:185: void sampleMultinomialOnce(long *, long, int, T *, T *, int, int) [with T = __half, AccT = float]: block: [0,0,0], thread: [23,0,0] Assertion `THCNumerics<T>::ge(val, zero)` failed.\n/pytorch/aten/src/THC/THCTensorRandom.cuh:185: void sampleMultinomialOnce(long *, long, int, T *, T *, int, int) [with T = __half, AccT = float]: block: [0,0,0], thread: [24,0,0] Assertion `THCNumerics<T>::ge(val, zero)` failed.\n/pytorch/aten/src/THC/THCTensorRandom.cuh:185: void sampleMultinomialOnce(long *, long, int, T *, T *, int, int) [with T = __half, AccT = float]: block: [0,0,0], thread: [25,0,0] Assertion `THCNumerics<T>::ge(val, zero)` failed.\n/pytorch/aten/src/THC/THCTensorRandom.cuh:185: void sampleMultinomialOnce(long *, long, int, T *, T *, int, int) [with T = __half, AccT = float]: block: [0,0,0], thread: [26,0,0] Assertion `THCNumerics<T>::ge(val, zero)` failed.\n/pytorch/aten/src/THC/THCTensorRandom.cuh:185: void sampleMultinomialOnce(long *, long, int, T *, T *, int, int) [with T = __half, AccT = float]: block: [0,0,0], thread: [27,0,0] Assertion `THCNumerics<T>::ge(val, zero)` failed.\n/pytorch/aten/src/THC/THCTensorRandom.cuh:185: void sampleMultinomialOnce(long *, long, int, T *, T *, int, int) [with T = __half, AccT = float]: block: [0,0,0], thread: [28,0,0] Assertion `THCNumerics<T>::ge(val, zero)` failed.\n/pytorch/aten/src/THC/THCTensorRandom.cuh:185: void sampleMultinomialOnce(long *, long, int, T *, T *, int, int) [with T = __half, AccT = float]: block: [0,0,0], thread: [29,0,0] Assertion `THCNumerics<T>::ge(val, zero)` failed.\n/pytorch/aten/src/THC/THCTensorRandom.cuh:185: void sampleMultinomialOnce(long *, long, int, T *, T *, int, int) [with T = __half, AccT = float]: block: [0,0,0], thread: [30,0,0] Assertion `THCNumerics<T>::ge(val, zero)` failed.\n/pytorch/aten/src/THC/THCTensorRandom.cuh:185: void sampleMultinomialOnce(long *, long, int, T *, T *, int, int) [with T = __half, AccT = float]: block: [0,0,0], thread: [31,0,0] Assertion `THCNumerics<T>::ge(val, zero)` failed.\n/pytorch/aten/src/THC/THCTensorRandom.cuh:185: void sampleMultinomialOnce(long *, long, int, T *, T *, int, int) [with T = __half, AccT = float]: block: [0,0,0], thread: [32,0,0] Assertion `THCNumerics<T>::ge(val, zero)` failed.\n/pytorch/aten/src/THC/THCTensorRandom.cuh:185: void sampleMultinomialOnce(long *, long, int, T *, T *, int, int) [with T = __half, AccT = float]: block: [0,0,0], thread: [33,0,0] Assertion `THCNumerics<T>::ge(val, zero)` failed.\n/pytorch/aten/src/THC/THCTensorRandom.cuh:185: void sampleMultinomialOnce(long *, long, int, T *, T *, int, int) [with T = __half, AccT = float]: block: [0,0,0], thread: [34,0,0] Assertion `THCNumerics<T>::ge(val, zero)` failed.\n/pytorch/aten/src/THC/THCTensorRandom.cuh:185: void sampleMultinomialOnce(long *, long, int, T *, T *, int, int) [with T = __half, AccT = float]: block: [0,0,0], thread: [35,0,0] Assertion `THCNumerics<T>::ge(val, zero)` failed.\n/pytorch/aten/src/THC/THCTensorRandom.cuh:185: void sampleMultinomialOnce(long *, long, int, T *, T *, int, int) [with T = __half, AccT = float]: block: [0,0,0], thread: [36,0,0] Assertion `THCNumerics<T>::ge(val, zero)` failed.\n/pytorch/aten/src/THC/THCTensorRandom.cuh:185: void sampleMultinomialOnce(long *, long, int, T *, T *, int, int) [with T = __half, AccT = float]: block: [0,0,0], thread: [37,0,0] Assertion `THCNumerics<T>::ge(val, zero)` failed.\n/pytorch/aten/src/THC/THCTensorRandom.cuh:185: void sampleMultinomialOnce(long *, long, int, T *, T *, int, int) [with T = __half, AccT = float]: block: [0,0,0], thread: [38,0,0] Assertion `THCNumerics<T>::ge(val, zero)` failed.\n/pytorch/aten/src/THC/THCTensorRandom.cuh:185: void sampleMultinomialOnce(long *, long, int, T *, T *, int, int) [with T = __half, AccT = float]: block: [0,0,0], thread: [39,0,0] Assertion `THCNumerics<T>::ge(val, zero)` failed.\n/pytorch/aten/src/THC/THCTensorRandom.cuh:185: void sampleMultinomialOnce(long *, long, int, T *, T *, int, int) [with T = __half, AccT = float]: block: [0,0,0], thread: [40,0,0] Assertion `THCNumerics<T>::ge(val, zero)` failed.\n/pytorch/aten/src/THC/THCTensorRandom.cuh:185: void sampleMultinomialOnce(long *, long, int, T *, T *, int, int) [with T = __half, AccT = float]: block: [0,0,0], thread: [41,0,0] Assertion `THCNumerics<T>::ge(val, zero)` failed.\n/pytorch/aten/src/THC/THCTensorRandom.cuh:185: void sampleMultinomialOnce(long *, long, int, T *, T *, int, int) [with T = __half, AccT = float]: block: [0,0,0], thread: [42,0,0] Assertion `THCNumerics<T>::ge(val, zero)` failed.\n/pytorch/aten/src/THC/THCTensorRandom.cuh:185: void sampleMultinomialOnce(long *, long, int, T *, T *, int, int) [with T = __half, AccT = float]: block: [0,0,0], thread: [43,0,0] Assertion `THCNumerics<T>::ge(val, zero)` failed.\n/pytorch/aten/src/THC/THCTensorRandom.cuh:185: void sampleMultinomialOnce(long *, long, int, T *, T *, int, int) [with T = __half, AccT = float]: block: [0,0,0], thread: [44,0,0] Assertion `THCNumerics<T>::ge(val, zero)` failed.\n/pytorch/aten/src/THC/THCTensorRandom.cuh:185: void sampleMultinomialOnce(long *, long, int, T *, T *, int, int) [with T = __half, AccT = float]: block: [0,0,0], thread: [45,0,0] Assertion `THCNumerics<T>::ge(val, zero)` failed.\n/pytorch/aten/src/THC/THCTensorRandom.cuh:185: void sampleMultinomialOnce(long *, long, int, T *, T *, int, int) [with T = __half, AccT = float]: block: [0,0,0], thread: [46,0,0] Assertion `THCNumerics<T>::ge(val, zero)` failed.\n/pytorch/aten/src/THC/THCTensorRandom.cuh:185: void sampleMultinomialOnce(long *, long, int, T *, T *, int, int) [with T = __half, AccT = float]: block: [0,0,0], thread: [47,0,0] Assertion `THCNumerics<T>::ge(val, zero)` failed.\n/pytorch/aten/src/THC/THCTensorRandom.cuh:185: void sampleMultinomialOnce(long *, long, int, T *, T *, int, int) [with T = __half, AccT = float]: block: [0,0,0], thread: [48,0,0] Assertion `THCNumerics<T>::ge(val, zero)` failed.\n/pytorch/aten/src/THC/THCTensorRandom.cuh:185: void sampleMultinomialOnce(long *, long, int, T *, T *, int, int) [with T = __half, AccT = float]: block: [0,0,0], thread: [49,0,0] Assertion `THCNumerics<T>::ge(val, zero)` failed.\n/pytorch/aten/src/THC/THCTensorRandom.cuh:185: void sampleMultinomialOnce(long *, long, int, T *, T *, int, int) [with T = __half, AccT = float]: block: [0,0,0], thread: [50,0,0] Assertion `THCNumerics<T>::ge(val, zero)` failed.\n/pytorch/aten/src/THC/THCTensorRandom.cuh:185: void sampleMultinomialOnce(long *, long, int, T *, T *, int, int) [with T = __half, AccT = float]: block: [0,0,0], thread: [51,0,0] Assertion `THCNumerics<T>::ge(val, zero)` failed.\n/pytorch/aten/src/THC/THCTensorRandom.cuh:185: void sampleMultinomialOnce(long *, long, int, T *, T *, int, int) [with T = __half, AccT = float]: block: [0,0,0], thread: [52,0,0] Assertion `THCNumerics<T>::ge(val, zero)` failed.\n/pytorch/aten/src/THC/THCTensorRandom.cuh:185: void sampleMultinomialOnce(long *, long, int, T *, T *, int, int) [with T = __half, AccT = float]: block: [0,0,0], thread: [53,0,0] Assertion `THCNumerics<T>::ge(val, zero)` failed.\n/pytorch/aten/src/THC/THCTensorRandom.cuh:185: void sampleMultinomialOnce(long *, long, int, T *, T *, int, int) [with T = __half, AccT = float]: block: [0,0,0], thread: [54,0,0] Assertion `THCNumerics<T>::ge(val, zero)` failed.\n/pytorch/aten/src/THC/THCTensorRandom.cuh:185: void sampleMultinomialOnce(long *, long, int, T *, T *, int, int) [with T = __half, AccT = float]: block: [0,0,0], thread: [55,0,0] Assertion `THCNumerics<T>::ge(val, zero)` failed.\n/pytorch/aten/src/THC/THCTensorRandom.cuh:185: void sampleMultinomialOnce(long *, long, int, T *, T *, int, int) [with T = __half, AccT = float]: block: [0,0,0], thread: [56,0,0] Assertion `THCNumerics<T>::ge(val, zero)` failed.\n/pytorch/aten/src/THC/THCTensorRandom.cuh:185: void sampleMultinomialOnce(long *, long, int, T *, T *, int, int) [with T = __half, AccT = float]: block: [0,0,0], thread: [57,0,0] Assertion `THCNumerics<T>::ge(val, zero)` failed.\n/pytorch/aten/src/THC/THCTensorRandom.cuh:185: void sampleMultinomialOnce(long *, long, int, T *, T *, int, int) [with T = __half, AccT = float]: block: [0,0,0], thread: [58,0,0] Assertion `THCNumerics<T>::ge(val, zero)` failed.\n/pytorch/aten/src/THC/THCTensorRandom.cuh:185: void sampleMultinomialOnce(long *, long, int, T *, T *, int, int) [with T = __half, AccT = float]: block: [0,0,0], thread: [59,0,0] Assertion `THCNumerics<T>::ge(val, zero)` failed.\n/pytorch/aten/src/THC/THCTensorRandom.cuh:185: void sampleMultinomialOnce(long *, long, int, T *, T *, int, int) [with T = __half, AccT = float]: block: [0,0,0], thread: [60,0,0] Assertion `THCNumerics<T>::ge(val, zero)` failed.\n/pytorch/aten/src/THC/THCTensorRandom.cuh:185: void sampleMultinomialOnce(long *, long, int, T *, T *, int, int) [with T = __half, AccT = float]: block: [0,0,0], thread: [61,0,0] Assertion `THCNumerics<T>::ge(val, zero)` failed.\n/pytorch/aten/src/THC/THCTensorRandom.cuh:185: void sampleMultinomialOnce(long *, long, int, T *, T *, int, int) [with T = __half, AccT = float]: block: [0,0,0], thread: [62,0,0] Assertion `THCNumerics<T>::ge(val, zero)` failed.\n/pytorch/aten/src/THC/THCTensorRandom.cuh:185: void sampleMultinomialOnce(long *, long, int, T *, T *, int, int) [with T = __half, AccT = float]: block: [0,0,0], thread: [63,0,0] Assertion `THCNumerics<T>::ge(val, zero)` failed.\nTHCudaCheck FAIL file=/pytorch/aten/src/THC/generated/../THCReduceAll.cuh line=317 error=59 : device-side assert triggered\nTraceback (most recent call last):\n  File \"./selfplay.py\", line 202, in <module>\n    main()\n  File \"./selfplay.py\", line 196, in main\n    GC.run()\n  File \"/home/user/Downloads/ELF/src_py/elf/utils_elf.py\", line 435, in run\n    self._call(smem, *args, **kwargs)\n  File \"/home/user/Downloads/ELF/src_py/elf/utils_elf.py\", line 398, in _call\n    reply = self._cb[idx](picked, *args, **kwargs)\n  File \"./selfplay.py\", line 131, in <lambda>\n    lambda batch, e=e, stat=stat: actor(batch, e, stat))\n  File \"./selfplay.py\", line 126, in actor\n    reply = e.actor(batch)\n  File \"/home/user/Downloads/ELF/src_py/rlpytorch/trainer/trainer.py\", line 101, in actor\n    reply_msg = self.sampler.sample(state_curr)\n  File \"/home/user/Downloads/ELF/src_py/rlpytorch/sampler/sampler.py\", line 56, in sample\n    actions[a_node] = sampler(state_curr, self.options, node=pi_node)\n  File \"/home/user/Downloads/ELF/src_py/rlpytorch/sampler/sample_methods.py\", line 125, in sample_multinomial\n    return sample_eps_with_check(probs, args.epsilon, greedy=greedy)\n  File \"/home/user/Downloads/ELF/src_py/rlpytorch/sampler/sample_methods.py\", line 74, in sample_eps_with_check\n    actions = sample_with_check(probs, greedy=greedy)\n  File \"/home/user/Downloads/ELF/src_py/rlpytorch/sampler/sample_methods.py\", line 43, in sample_with_check\n    cond1 = (actions < 0).sum()\nRuntimeError: cuda runtime error (59) : device-side assert triggered at /pytorch/aten/src/THC/generated/../THCReduceAll.cuh:317\n\nI've already posted this issuecomment-423236025 on ELF repository but no response.  Can someone help?", "body": "##  Questions and Help\r\n\r\nI've been trying to run [ELF](https://github.com/pytorch/ELF) on my machine but run into this issue when loading the new model: \r\n\r\n```\r\n$ ./start_client.sh\r\n.\r\n.\r\n.\r\n.\r\n[2018-11-09 13:51:19.041] [rlpytorch.model_loader.ModelLoader-1-model_index0] [info] Loading model from ./myserver/save-1.bin\r\n[2018-11-09 13:51:19.041] [rlpytorch.model_loader.ModelLoader-1-model_index0] [info] replace_prefix for state dict: [['resnet.module', 'resnet'], ['init_conv.module', 'init_conv']]\r\n[2018-11-09 13:51:19.357] [rlpytorch.model_loader.ModelLoader-1-model_index0] [info] Finished loading model from ./myserver/save-1.bin\r\n/pytorch/aten/src/THC/THCTensorRandom.cuh:185: void sampleMultinomialOnce(long *, long, int, T *, T *, int, int) [with T = __half, AccT = float]: block: [0,0,0], thread: [64,0,0] Assertion `THCNumerics<T>::ge(val, zero)` failed.\r\n/pytorch/aten/src/THC/THCTensorRandom.cuh:185: void sampleMultinomialOnce(long *, long, int, T *, T *, int, int) [with T = __half, AccT = float]: block: [0,0,0], thread: [65,0,0] Assertion `THCNumerics<T>::ge(val, zero)` failed.\r\n/pytorch/aten/src/THC/THCTensorRandom.cuh:185: void sampleMultinomialOnce(long *, long, int, T *, T *, int, int) [with T = __half, AccT = float]: block: [0,0,0], thread: [66,0,0] Assertion `THCNumerics<T>::ge(val, zero)` failed.\r\n/pytorch/aten/src/THC/THCTensorRandom.cuh:185: void sampleMultinomialOnce(long *, long, int, T *, T *, int, int) [with T = __half, AccT = float]: block: [0,0,0], thread: [67,0,0] Assertion `THCNumerics<T>::ge(val, zero)` failed.\r\n/pytorch/aten/src/THC/THCTensorRandom.cuh:185: void sampleMultinomialOnce(long *, long, int, T *, T *, int, int) [with T = __half, AccT = float]: block: [0,0,0], thread: [68,0,0] Assertion `THCNumerics<T>::ge(val, zero)` failed.\r\n/pytorch/aten/src/THC/THCTensorRandom.cuh:185: void sampleMultinomialOnce(long *, long, int, T *, T *, int, int) [with T = __half, AccT = float]: block: [0,0,0], thread: [69,0,0] Assertion `THCNumerics<T>::ge(val, zero)` failed.\r\n/pytorch/aten/src/THC/THCTensorRandom.cuh:185: void sampleMultinomialOnce(long *, long, int, T *, T *, int, int) [with T = __half, AccT = float]: block: [0,0,0], thread: [70,0,0] Assertion `THCNumerics<T>::ge(val, zero)` failed.\r\n/pytorch/aten/src/THC/THCTensorRandom.cuh:185: void sampleMultinomialOnce(long *, long, int, T *, T *, int, int) [with T = __half, AccT = float]: block: [0,0,0], thread: [71,0,0] Assertion `THCNumerics<T>::ge(val, zero)` failed.\r\n/pytorch/aten/src/THC/THCTensorRandom.cuh:185: void sampleMultinomialOnce(long *, long, int, T *, T *, int, int) [with T = __half, AccT = float]: block: [0,0,0], thread: [72,0,0] Assertion `THCNumerics<T>::ge(val, zero)` failed.\r\n/pytorch/aten/src/THC/THCTensorRandom.cuh:185: void sampleMultinomialOnce(long *, long, int, T *, T *, int, int) [with T = __half, AccT = float]: block: [0,0,0], thread: [73,0,0] Assertion `THCNumerics<T>::ge(val, zero)` failed.\r\n/pytorch/aten/src/THC/THCTensorRandom.cuh:185: void sampleMultinomialOnce(long *, long, int, T *, T *, int, int) [with T = __half, AccT = float]: block: [0,0,0], thread: [74,0,0] Assertion `THCNumerics<T>::ge(val, zero)` failed.\r\n/pytorch/aten/src/THC/THCTensorRandom.cuh:185: void sampleMultinomialOnce(long *, long, int, T *, T *, int, int) [with T = __half, AccT = float]: block: [0,0,0], thread: [75,0,0] Assertion `THCNumerics<T>::ge(val, zero)` failed.\r\n/pytorch/aten/src/THC/THCTensorRandom.cuh:185: void sampleMultinomialOnce(long *, long, int, T *, T *, int, int) [with T = __half, AccT = float]: block: [0,0,0], thread: [76,0,0] Assertion `THCNumerics<T>::ge(val, zero)` failed.\r\n/pytorch/aten/src/THC/THCTensorRandom.cuh:185: void sampleMultinomialOnce(long *, long, int, T *, T *, int, int) [with T = __half, AccT = float]: block: [0,0,0], thread: [77,0,0] Assertion `THCNumerics<T>::ge(val, zero)` failed.\r\n/pytorch/aten/src/THC/THCTensorRandom.cuh:185: void sampleMultinomialOnce(long *, long, int, T *, T *, int, int) [with T = __half, AccT = float]: block: [0,0,0], thread: [78,0,0] Assertion `THCNumerics<T>::ge(val, zero)` failed.\r\n/pytorch/aten/src/THC/THCTensorRandom.cuh:185: void sampleMultinomialOnce(long *, long, int, T *, T *, int, int) [with T = __half, AccT = float]: block: [0,0,0], thread: [79,0,0] Assertion `THCNumerics<T>::ge(val, zero)` failed.\r\n/pytorch/aten/src/THC/THCTensorRandom.cuh:185: void sampleMultinomialOnce(long *, long, int, T *, T *, int, int) [with T = __half, AccT = float]: block: [0,0,0], thread: [80,0,0] Assertion `THCNumerics<T>::ge(val, zero)` failed.\r\n/pytorch/aten/src/THC/THCTensorRandom.cuh:185: void sampleMultinomialOnce(long *, long, int, T *, T *, int, int) [with T = __half, AccT = float]: block: [0,0,0], thread: [81,0,0] Assertion `THCNumerics<T>::ge(val, zero)` failed.\r\n/pytorch/aten/src/THC/THCTensorRandom.cuh:185: void sampleMultinomialOnce(long *, long, int, T *, T *, int, int) [with T = __half, AccT = float]: block: [0,0,0], thread: [0,0,0] Assertion `THCNumerics<T>::ge(val, zero)` failed.\r\n/pytorch/aten/src/THC/THCTensorRandom.cuh:185: void sampleMultinomialOnce(long *, long, int, T *, T *, int, int) [with T = __half, AccT = float]: block: [0,0,0], thread: [1,0,0] Assertion `THCNumerics<T>::ge(val, zero)` failed.\r\n/pytorch/aten/src/THC/THCTensorRandom.cuh:185: void sampleMultinomialOnce(long *, long, int, T *, T *, int, int) [with T = __half, AccT = float]: block: [0,0,0], thread: [2,0,0] Assertion `THCNumerics<T>::ge(val, zero)` failed.\r\n/pytorch/aten/src/THC/THCTensorRandom.cuh:185: void sampleMultinomialOnce(long *, long, int, T *, T *, int, int) [with T = __half, AccT = float]: block: [0,0,0], thread: [3,0,0] Assertion `THCNumerics<T>::ge(val, zero)` failed.\r\n/pytorch/aten/src/THC/THCTensorRandom.cuh:185: void sampleMultinomialOnce(long *, long, int, T *, T *, int, int) [with T = __half, AccT = float]: block: [0,0,0], thread: [4,0,0] Assertion `THCNumerics<T>::ge(val, zero)` failed.\r\n/pytorch/aten/src/THC/THCTensorRandom.cuh:185: void sampleMultinomialOnce(long *, long, int, T *, T *, int, int) [with T = __half, AccT = float]: block: [0,0,0], thread: [5,0,0] Assertion `THCNumerics<T>::ge(val, zero)` failed.\r\n/pytorch/aten/src/THC/THCTensorRandom.cuh:185: void sampleMultinomialOnce(long *, long, int, T *, T *, int, int) [with T = __half, AccT = float]: block: [0,0,0], thread: [6,0,0] Assertion `THCNumerics<T>::ge(val, zero)` failed.\r\n/pytorch/aten/src/THC/THCTensorRandom.cuh:185: void sampleMultinomialOnce(long *, long, int, T *, T *, int, int) [with T = __half, AccT = float]: block: [0,0,0], thread: [7,0,0] Assertion `THCNumerics<T>::ge(val, zero)` failed.\r\n/pytorch/aten/src/THC/THCTensorRandom.cuh:185: void sampleMultinomialOnce(long *, long, int, T *, T *, int, int) [with T = __half, AccT = float]: block: [0,0,0], thread: [8,0,0] Assertion `THCNumerics<T>::ge(val, zero)` failed.\r\n/pytorch/aten/src/THC/THCTensorRandom.cuh:185: void sampleMultinomialOnce(long *, long, int, T *, T *, int, int) [with T = __half, AccT = float]: block: [0,0,0], thread: [9,0,0] Assertion `THCNumerics<T>::ge(val, zero)` failed.\r\n/pytorch/aten/src/THC/THCTensorRandom.cuh:185: void sampleMultinomialOnce(long *, long, int, T *, T *, int, int) [with T = __half, AccT = float]: block: [0,0,0], thread: [10,0,0] Assertion `THCNumerics<T>::ge(val, zero)` failed.\r\n/pytorch/aten/src/THC/THCTensorRandom.cuh:185: void sampleMultinomialOnce(long *, long, int, T *, T *, int, int) [with T = __half, AccT = float]: block: [0,0,0], thread: [11,0,0] Assertion `THCNumerics<T>::ge(val, zero)` failed.\r\n/pytorch/aten/src/THC/THCTensorRandom.cuh:185: void sampleMultinomialOnce(long *, long, int, T *, T *, int, int) [with T = __half, AccT = float]: block: [0,0,0], thread: [12,0,0] Assertion `THCNumerics<T>::ge(val, zero)` failed.\r\n/pytorch/aten/src/THC/THCTensorRandom.cuh:185: void sampleMultinomialOnce(long *, long, int, T *, T *, int, int) [with T = __half, AccT = float]: block: [0,0,0], thread: [13,0,0] Assertion `THCNumerics<T>::ge(val, zero)` failed.\r\n/pytorch/aten/src/THC/THCTensorRandom.cuh:185: void sampleMultinomialOnce(long *, long, int, T *, T *, int, int) [with T = __half, AccT = float]: block: [0,0,0], thread: [14,0,0] Assertion `THCNumerics<T>::ge(val, zero)` failed.\r\n/pytorch/aten/src/THC/THCTensorRandom.cuh:185: void sampleMultinomialOnce(long *, long, int, T *, T *, int, int) [with T = __half, AccT = float]: block: [0,0,0], thread: [15,0,0] Assertion `THCNumerics<T>::ge(val, zero)` failed.\r\n/pytorch/aten/src/THC/THCTensorRandom.cuh:185: void sampleMultinomialOnce(long *, long, int, T *, T *, int, int) [with T = __half, AccT = float]: block: [0,0,0], thread: [16,0,0] Assertion `THCNumerics<T>::ge(val, zero)` failed.\r\n/pytorch/aten/src/THC/THCTensorRandom.cuh:185: void sampleMultinomialOnce(long *, long, int, T *, T *, int, int) [with T = __half, AccT = float]: block: [0,0,0], thread: [17,0,0] Assertion `THCNumerics<T>::ge(val, zero)` failed.\r\n/pytorch/aten/src/THC/THCTensorRandom.cuh:185: void sampleMultinomialOnce(long *, long, int, T *, T *, int, int) [with T = __half, AccT = float]: block: [0,0,0], thread: [18,0,0] Assertion `THCNumerics<T>::ge(val, zero)` failed.\r\n/pytorch/aten/src/THC/THCTensorRandom.cuh:185: void sampleMultinomialOnce(long *, long, int, T *, T *, int, int) [with T = __half, AccT = float]: block: [0,0,0], thread: [19,0,0] Assertion `THCNumerics<T>::ge(val, zero)` failed.\r\n/pytorch/aten/src/THC/THCTensorRandom.cuh:185: void sampleMultinomialOnce(long *, long, int, T *, T *, int, int) [with T = __half, AccT = float]: block: [0,0,0], thread: [20,0,0] Assertion `THCNumerics<T>::ge(val, zero)` failed.\r\n/pytorch/aten/src/THC/THCTensorRandom.cuh:185: void sampleMultinomialOnce(long *, long, int, T *, T *, int, int) [with T = __half, AccT = float]: block: [0,0,0], thread: [21,0,0] Assertion `THCNumerics<T>::ge(val, zero)` failed.\r\n/pytorch/aten/src/THC/THCTensorRandom.cuh:185: void sampleMultinomialOnce(long *, long, int, T *, T *, int, int) [with T = __half, AccT = float]: block: [0,0,0], thread: [22,0,0] Assertion `THCNumerics<T>::ge(val, zero)` failed.\r\n/pytorch/aten/src/THC/THCTensorRandom.cuh:185: void sampleMultinomialOnce(long *, long, int, T *, T *, int, int) [with T = __half, AccT = float]: block: [0,0,0], thread: [23,0,0] Assertion `THCNumerics<T>::ge(val, zero)` failed.\r\n/pytorch/aten/src/THC/THCTensorRandom.cuh:185: void sampleMultinomialOnce(long *, long, int, T *, T *, int, int) [with T = __half, AccT = float]: block: [0,0,0], thread: [24,0,0] Assertion `THCNumerics<T>::ge(val, zero)` failed.\r\n/pytorch/aten/src/THC/THCTensorRandom.cuh:185: void sampleMultinomialOnce(long *, long, int, T *, T *, int, int) [with T = __half, AccT = float]: block: [0,0,0], thread: [25,0,0] Assertion `THCNumerics<T>::ge(val, zero)` failed.\r\n/pytorch/aten/src/THC/THCTensorRandom.cuh:185: void sampleMultinomialOnce(long *, long, int, T *, T *, int, int) [with T = __half, AccT = float]: block: [0,0,0], thread: [26,0,0] Assertion `THCNumerics<T>::ge(val, zero)` failed.\r\n/pytorch/aten/src/THC/THCTensorRandom.cuh:185: void sampleMultinomialOnce(long *, long, int, T *, T *, int, int) [with T = __half, AccT = float]: block: [0,0,0], thread: [27,0,0] Assertion `THCNumerics<T>::ge(val, zero)` failed.\r\n/pytorch/aten/src/THC/THCTensorRandom.cuh:185: void sampleMultinomialOnce(long *, long, int, T *, T *, int, int) [with T = __half, AccT = float]: block: [0,0,0], thread: [28,0,0] Assertion `THCNumerics<T>::ge(val, zero)` failed.\r\n/pytorch/aten/src/THC/THCTensorRandom.cuh:185: void sampleMultinomialOnce(long *, long, int, T *, T *, int, int) [with T = __half, AccT = float]: block: [0,0,0], thread: [29,0,0] Assertion `THCNumerics<T>::ge(val, zero)` failed.\r\n/pytorch/aten/src/THC/THCTensorRandom.cuh:185: void sampleMultinomialOnce(long *, long, int, T *, T *, int, int) [with T = __half, AccT = float]: block: [0,0,0], thread: [30,0,0] Assertion `THCNumerics<T>::ge(val, zero)` failed.\r\n/pytorch/aten/src/THC/THCTensorRandom.cuh:185: void sampleMultinomialOnce(long *, long, int, T *, T *, int, int) [with T = __half, AccT = float]: block: [0,0,0], thread: [31,0,0] Assertion `THCNumerics<T>::ge(val, zero)` failed.\r\n/pytorch/aten/src/THC/THCTensorRandom.cuh:185: void sampleMultinomialOnce(long *, long, int, T *, T *, int, int) [with T = __half, AccT = float]: block: [0,0,0], thread: [32,0,0] Assertion `THCNumerics<T>::ge(val, zero)` failed.\r\n/pytorch/aten/src/THC/THCTensorRandom.cuh:185: void sampleMultinomialOnce(long *, long, int, T *, T *, int, int) [with T = __half, AccT = float]: block: [0,0,0], thread: [33,0,0] Assertion `THCNumerics<T>::ge(val, zero)` failed.\r\n/pytorch/aten/src/THC/THCTensorRandom.cuh:185: void sampleMultinomialOnce(long *, long, int, T *, T *, int, int) [with T = __half, AccT = float]: block: [0,0,0], thread: [34,0,0] Assertion `THCNumerics<T>::ge(val, zero)` failed.\r\n/pytorch/aten/src/THC/THCTensorRandom.cuh:185: void sampleMultinomialOnce(long *, long, int, T *, T *, int, int) [with T = __half, AccT = float]: block: [0,0,0], thread: [35,0,0] Assertion `THCNumerics<T>::ge(val, zero)` failed.\r\n/pytorch/aten/src/THC/THCTensorRandom.cuh:185: void sampleMultinomialOnce(long *, long, int, T *, T *, int, int) [with T = __half, AccT = float]: block: [0,0,0], thread: [36,0,0] Assertion `THCNumerics<T>::ge(val, zero)` failed.\r\n/pytorch/aten/src/THC/THCTensorRandom.cuh:185: void sampleMultinomialOnce(long *, long, int, T *, T *, int, int) [with T = __half, AccT = float]: block: [0,0,0], thread: [37,0,0] Assertion `THCNumerics<T>::ge(val, zero)` failed.\r\n/pytorch/aten/src/THC/THCTensorRandom.cuh:185: void sampleMultinomialOnce(long *, long, int, T *, T *, int, int) [with T = __half, AccT = float]: block: [0,0,0], thread: [38,0,0] Assertion `THCNumerics<T>::ge(val, zero)` failed.\r\n/pytorch/aten/src/THC/THCTensorRandom.cuh:185: void sampleMultinomialOnce(long *, long, int, T *, T *, int, int) [with T = __half, AccT = float]: block: [0,0,0], thread: [39,0,0] Assertion `THCNumerics<T>::ge(val, zero)` failed.\r\n/pytorch/aten/src/THC/THCTensorRandom.cuh:185: void sampleMultinomialOnce(long *, long, int, T *, T *, int, int) [with T = __half, AccT = float]: block: [0,0,0], thread: [40,0,0] Assertion `THCNumerics<T>::ge(val, zero)` failed.\r\n/pytorch/aten/src/THC/THCTensorRandom.cuh:185: void sampleMultinomialOnce(long *, long, int, T *, T *, int, int) [with T = __half, AccT = float]: block: [0,0,0], thread: [41,0,0] Assertion `THCNumerics<T>::ge(val, zero)` failed.\r\n/pytorch/aten/src/THC/THCTensorRandom.cuh:185: void sampleMultinomialOnce(long *, long, int, T *, T *, int, int) [with T = __half, AccT = float]: block: [0,0,0], thread: [42,0,0] Assertion `THCNumerics<T>::ge(val, zero)` failed.\r\n/pytorch/aten/src/THC/THCTensorRandom.cuh:185: void sampleMultinomialOnce(long *, long, int, T *, T *, int, int) [with T = __half, AccT = float]: block: [0,0,0], thread: [43,0,0] Assertion `THCNumerics<T>::ge(val, zero)` failed.\r\n/pytorch/aten/src/THC/THCTensorRandom.cuh:185: void sampleMultinomialOnce(long *, long, int, T *, T *, int, int) [with T = __half, AccT = float]: block: [0,0,0], thread: [44,0,0] Assertion `THCNumerics<T>::ge(val, zero)` failed.\r\n/pytorch/aten/src/THC/THCTensorRandom.cuh:185: void sampleMultinomialOnce(long *, long, int, T *, T *, int, int) [with T = __half, AccT = float]: block: [0,0,0], thread: [45,0,0] Assertion `THCNumerics<T>::ge(val, zero)` failed.\r\n/pytorch/aten/src/THC/THCTensorRandom.cuh:185: void sampleMultinomialOnce(long *, long, int, T *, T *, int, int) [with T = __half, AccT = float]: block: [0,0,0], thread: [46,0,0] Assertion `THCNumerics<T>::ge(val, zero)` failed.\r\n/pytorch/aten/src/THC/THCTensorRandom.cuh:185: void sampleMultinomialOnce(long *, long, int, T *, T *, int, int) [with T = __half, AccT = float]: block: [0,0,0], thread: [47,0,0] Assertion `THCNumerics<T>::ge(val, zero)` failed.\r\n/pytorch/aten/src/THC/THCTensorRandom.cuh:185: void sampleMultinomialOnce(long *, long, int, T *, T *, int, int) [with T = __half, AccT = float]: block: [0,0,0], thread: [48,0,0] Assertion `THCNumerics<T>::ge(val, zero)` failed.\r\n/pytorch/aten/src/THC/THCTensorRandom.cuh:185: void sampleMultinomialOnce(long *, long, int, T *, T *, int, int) [with T = __half, AccT = float]: block: [0,0,0], thread: [49,0,0] Assertion `THCNumerics<T>::ge(val, zero)` failed.\r\n/pytorch/aten/src/THC/THCTensorRandom.cuh:185: void sampleMultinomialOnce(long *, long, int, T *, T *, int, int) [with T = __half, AccT = float]: block: [0,0,0], thread: [50,0,0] Assertion `THCNumerics<T>::ge(val, zero)` failed.\r\n/pytorch/aten/src/THC/THCTensorRandom.cuh:185: void sampleMultinomialOnce(long *, long, int, T *, T *, int, int) [with T = __half, AccT = float]: block: [0,0,0], thread: [51,0,0] Assertion `THCNumerics<T>::ge(val, zero)` failed.\r\n/pytorch/aten/src/THC/THCTensorRandom.cuh:185: void sampleMultinomialOnce(long *, long, int, T *, T *, int, int) [with T = __half, AccT = float]: block: [0,0,0], thread: [52,0,0] Assertion `THCNumerics<T>::ge(val, zero)` failed.\r\n/pytorch/aten/src/THC/THCTensorRandom.cuh:185: void sampleMultinomialOnce(long *, long, int, T *, T *, int, int) [with T = __half, AccT = float]: block: [0,0,0], thread: [53,0,0] Assertion `THCNumerics<T>::ge(val, zero)` failed.\r\n/pytorch/aten/src/THC/THCTensorRandom.cuh:185: void sampleMultinomialOnce(long *, long, int, T *, T *, int, int) [with T = __half, AccT = float]: block: [0,0,0], thread: [54,0,0] Assertion `THCNumerics<T>::ge(val, zero)` failed.\r\n/pytorch/aten/src/THC/THCTensorRandom.cuh:185: void sampleMultinomialOnce(long *, long, int, T *, T *, int, int) [with T = __half, AccT = float]: block: [0,0,0], thread: [55,0,0] Assertion `THCNumerics<T>::ge(val, zero)` failed.\r\n/pytorch/aten/src/THC/THCTensorRandom.cuh:185: void sampleMultinomialOnce(long *, long, int, T *, T *, int, int) [with T = __half, AccT = float]: block: [0,0,0], thread: [56,0,0] Assertion `THCNumerics<T>::ge(val, zero)` failed.\r\n/pytorch/aten/src/THC/THCTensorRandom.cuh:185: void sampleMultinomialOnce(long *, long, int, T *, T *, int, int) [with T = __half, AccT = float]: block: [0,0,0], thread: [57,0,0] Assertion `THCNumerics<T>::ge(val, zero)` failed.\r\n/pytorch/aten/src/THC/THCTensorRandom.cuh:185: void sampleMultinomialOnce(long *, long, int, T *, T *, int, int) [with T = __half, AccT = float]: block: [0,0,0], thread: [58,0,0] Assertion `THCNumerics<T>::ge(val, zero)` failed.\r\n/pytorch/aten/src/THC/THCTensorRandom.cuh:185: void sampleMultinomialOnce(long *, long, int, T *, T *, int, int) [with T = __half, AccT = float]: block: [0,0,0], thread: [59,0,0] Assertion `THCNumerics<T>::ge(val, zero)` failed.\r\n/pytorch/aten/src/THC/THCTensorRandom.cuh:185: void sampleMultinomialOnce(long *, long, int, T *, T *, int, int) [with T = __half, AccT = float]: block: [0,0,0], thread: [60,0,0] Assertion `THCNumerics<T>::ge(val, zero)` failed.\r\n/pytorch/aten/src/THC/THCTensorRandom.cuh:185: void sampleMultinomialOnce(long *, long, int, T *, T *, int, int) [with T = __half, AccT = float]: block: [0,0,0], thread: [61,0,0] Assertion `THCNumerics<T>::ge(val, zero)` failed.\r\n/pytorch/aten/src/THC/THCTensorRandom.cuh:185: void sampleMultinomialOnce(long *, long, int, T *, T *, int, int) [with T = __half, AccT = float]: block: [0,0,0], thread: [62,0,0] Assertion `THCNumerics<T>::ge(val, zero)` failed.\r\n/pytorch/aten/src/THC/THCTensorRandom.cuh:185: void sampleMultinomialOnce(long *, long, int, T *, T *, int, int) [with T = __half, AccT = float]: block: [0,0,0], thread: [63,0,0] Assertion `THCNumerics<T>::ge(val, zero)` failed.\r\nTHCudaCheck FAIL file=/pytorch/aten/src/THC/generated/../THCReduceAll.cuh line=317 error=59 : device-side assert triggered\r\nTraceback (most recent call last):\r\n  File \"./selfplay.py\", line 202, in <module>\r\n    main()\r\n  File \"./selfplay.py\", line 196, in main\r\n    GC.run()\r\n  File \"/home/user/Downloads/ELF/src_py/elf/utils_elf.py\", line 435, in run\r\n    self._call(smem, *args, **kwargs)\r\n  File \"/home/user/Downloads/ELF/src_py/elf/utils_elf.py\", line 398, in _call\r\n    reply = self._cb[idx](picked, *args, **kwargs)\r\n  File \"./selfplay.py\", line 131, in <lambda>\r\n    lambda batch, e=e, stat=stat: actor(batch, e, stat))\r\n  File \"./selfplay.py\", line 126, in actor\r\n    reply = e.actor(batch)\r\n  File \"/home/user/Downloads/ELF/src_py/rlpytorch/trainer/trainer.py\", line 101, in actor\r\n    reply_msg = self.sampler.sample(state_curr)\r\n  File \"/home/user/Downloads/ELF/src_py/rlpytorch/sampler/sampler.py\", line 56, in sample\r\n    actions[a_node] = sampler(state_curr, self.options, node=pi_node)\r\n  File \"/home/user/Downloads/ELF/src_py/rlpytorch/sampler/sample_methods.py\", line 125, in sample_multinomial\r\n    return sample_eps_with_check(probs, args.epsilon, greedy=greedy)\r\n  File \"/home/user/Downloads/ELF/src_py/rlpytorch/sampler/sample_methods.py\", line 74, in sample_eps_with_check\r\n    actions = sample_with_check(probs, greedy=greedy)\r\n  File \"/home/user/Downloads/ELF/src_py/rlpytorch/sampler/sample_methods.py\", line 43, in sample_with_check\r\n    cond1 = (actions < 0).sum()\r\nRuntimeError: cuda runtime error (59) : device-side assert triggered at /pytorch/aten/src/THC/generated/../THCReduceAll.cuh:317\r\n```\r\nI've already posted this [issuecomment-423236025](https://github.com/pytorch/ELF/issues/95#issuecomment-423236025) on ELF repository but no response.  Can someone help?"}