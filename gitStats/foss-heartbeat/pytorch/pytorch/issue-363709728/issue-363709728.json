{"url": "https://api.github.com/repos/pytorch/pytorch/issues/12058", "repository_url": "https://api.github.com/repos/pytorch/pytorch", "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/12058/labels{/name}", "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/12058/comments", "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/12058/events", "html_url": "https://github.com/pytorch/pytorch/pull/12058", "id": 363709728, "node_id": "MDExOlB1bGxSZXF1ZXN0MjE4MDc1Nzky", "number": 12058, "title": "Add safety asserts for methods on TensorImpl which don't work on Variable.", "user": {"login": "ezyang", "id": 13564, "node_id": "MDQ6VXNlcjEzNTY0", "avatar_url": "https://avatars0.githubusercontent.com/u/13564?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ezyang", "html_url": "https://github.com/ezyang", "followers_url": "https://api.github.com/users/ezyang/followers", "following_url": "https://api.github.com/users/ezyang/following{/other_user}", "gists_url": "https://api.github.com/users/ezyang/gists{/gist_id}", "starred_url": "https://api.github.com/users/ezyang/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ezyang/subscriptions", "organizations_url": "https://api.github.com/users/ezyang/orgs", "repos_url": "https://api.github.com/users/ezyang/repos", "events_url": "https://api.github.com/users/ezyang/events{/privacy}", "received_events_url": "https://api.github.com/users/ezyang/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2018-09-25T18:26:43Z", "updated_at": "2018-09-26T01:23:12Z", "closed_at": "2018-09-26T00:27:04Z", "author_association": "CONTRIBUTOR", "pull_request": {"url": "https://api.github.com/repos/pytorch/pytorch/pulls/12058", "html_url": "https://github.com/pytorch/pytorch/pull/12058", "diff_url": "https://github.com/pytorch/pytorch/pull/12058.diff", "patch_url": "https://github.com/pytorch/pytorch/pull/12058.patch"}, "body_html": "<p>Stack:<br>\n\u00a0\u00a0\u00a0\u00a0<g-emoji class=\"g-emoji\" alias=\"black_circle\" fallback-src=\"https://assets-cdn.github.com/images/icons/emoji/unicode/26ab.png\">\u26ab\ufe0f</g-emoji>\u00a0 <strong><a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load issue title\" data-id=\"363709728\" data-permission-text=\"Issue title is private\" data-url=\"https://github.com/pytorch/pytorch/issues/12058\" data-hovercard-type=\"pull_request\" data-hovercard-url=\"/pytorch/pytorch/pull/12058/hovercard\" href=\"https://github.com/pytorch/pytorch/pull/12058\">#12058</a> Add safety asserts for methods on TensorImpl which don't work on Variable.</strong>\u00a0\u00a0<a href=\"https://our.internmc.facebook.com/intern/diff/D10034589/\" rel=\"nofollow\"><g-emoji class=\"g-emoji\" alias=\"yellow_heart\" fallback-src=\"https://assets-cdn.github.com/images/icons/emoji/unicode/1f49b.png\">\ud83d\udc9b</g-emoji></a></p>\n<p>Methods on TensorImpl have to be written very carefully, because<br>\nwhen you have a VariableImpl subclass of TensorImpl, usually the<br>\nlocal fields on the TensorImpl are not valid; instead, you have to<br>\nforward to the \"wrapped\" tensor.  Functions which are virtualized<br>\nare probably handled correctly by Variable, but functions which<br>\nare NOT cannot be handled correctly and shouldn't be called if you<br>\nhave a Variable.  This diff add checks to determine if this is<br>\nthe case or not.</p>\n<p>Differential Revision: <a href=\"https://our.internmc.facebook.com/intern/diff/D10034589/\" rel=\"nofollow\">D10034589</a></p>", "body_text": "Stack:\n\u00a0\u00a0\u00a0\u00a0\u26ab\ufe0f\u00a0 #12058 Add safety asserts for methods on TensorImpl which don't work on Variable.\u00a0\u00a0\ud83d\udc9b\nMethods on TensorImpl have to be written very carefully, because\nwhen you have a VariableImpl subclass of TensorImpl, usually the\nlocal fields on the TensorImpl are not valid; instead, you have to\nforward to the \"wrapped\" tensor.  Functions which are virtualized\nare probably handled correctly by Variable, but functions which\nare NOT cannot be handled correctly and shouldn't be called if you\nhave a Variable.  This diff add checks to determine if this is\nthe case or not.\nDifferential Revision: D10034589", "body": "Stack:\n&nbsp;&nbsp;&nbsp;&nbsp;:black_circle:&nbsp; **#12058 Add safety asserts for methods on TensorImpl which don't work on Variable.**&nbsp;&nbsp;[:yellow_heart:](https://our.internmc.facebook.com/intern/diff/D10034589/)\n\nMethods on TensorImpl have to be written very carefully, because\nwhen you have a VariableImpl subclass of TensorImpl, usually the\nlocal fields on the TensorImpl are not valid; instead, you have to\nforward to the \"wrapped\" tensor.  Functions which are virtualized\nare probably handled correctly by Variable, but functions which\nare NOT cannot be handled correctly and shouldn't be called if you\nhave a Variable.  This diff add checks to determine if this is\nthe case or not.\n\nDifferential Revision: [D10034589](https://our.internmc.facebook.com/intern/diff/D10034589/)"}