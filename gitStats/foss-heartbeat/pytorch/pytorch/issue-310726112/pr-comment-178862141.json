{"url": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/178862141", "pull_request_review_id": 108994415, "id": 178862141, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE3ODg2MjE0MQ==", "diff_hunk": "@@ -362,28 +362,25 @@ def test_transpose(self):\n             y = y.transpose(i, j)\n             self.assertEqual(self.safeToDense(x), y)\n \n-    def test_transpose_coalesce_invariant(self):\n-        # If a sparse tensor is coalesced, its transpose should be the same\n-        # If a sparse tensor is uncoalesed, its transpose should be the same\n-        x_coalesced = self._gen_sparse(2, 3, 4)[0].coalesce()\n-        x_indices = x_coalesced._indices()\n-        x_values = x_coalesced._values()\n-\n-        y_uncoalesced = self.SparseTensor(\n-            torch.cat([x_indices, x_indices], dim=1),\n-            torch.cat([x_values, x_values]),\n-            x_coalesced.size())\n-\n-        self.assertTrue(x_coalesced.is_coalesced())\n-        self.assertFalse(y_uncoalesced.is_coalesced())\n-\n-        self.assertTrue(x_coalesced.transpose(0, 1).is_coalesced())\n-        self.assertFalse(y_uncoalesced.transpose(0, 1).is_coalesced())\n-\n-        x_coalesced.transpose_(0, 1)\n-        y_uncoalesced.transpose_(0, 1)\n-        self.assertTrue(x_coalesced.is_coalesced())\n-        self.assertFalse(y_uncoalesced.is_coalesced())\n+    def test_transpose_coalesce(self):\n+        i = self.IndexTensor([\n+            [0, 1, 2],\n+            [2, 1, 0],\n+        ])\n+        v = self.ValueTensor([1, 1, 1])\n+        x = self.ValueTensor([\n+            [1],\n+            [2],\n+            [3],\n+        ])\n+        res = self.ValueTensor([\n+            [3],\n+            [2],\n+            [1],\n+        ])\n+        D = self.SparseTensor(i, v, torch.Size([3, 3])).coalesce()\n+        r = torch.mm(D, x)\n+        self.assertEqual(r, res)", "path": "test/test_sparse.py", "position": null, "original_position": 44, "commit_id": "4855d2f3eb875b994d9efb2004b6258f8dee61e0", "original_commit_id": "810efd4f689a7012184cc2e64588cf479e3ee835", "user": {"login": "SsnL", "id": 5674597, "node_id": "MDQ6VXNlcjU2NzQ1OTc=", "avatar_url": "https://avatars2.githubusercontent.com/u/5674597?v=4", "gravatar_id": "", "url": "https://api.github.com/users/SsnL", "html_url": "https://github.com/SsnL", "followers_url": "https://api.github.com/users/SsnL/followers", "following_url": "https://api.github.com/users/SsnL/following{/other_user}", "gists_url": "https://api.github.com/users/SsnL/gists{/gist_id}", "starred_url": "https://api.github.com/users/SsnL/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/SsnL/subscriptions", "organizations_url": "https://api.github.com/users/SsnL/orgs", "repos_url": "https://api.github.com/users/SsnL/repos", "events_url": "https://api.github.com/users/SsnL/events{/privacy}", "received_events_url": "https://api.github.com/users/SsnL/received_events", "type": "User", "site_admin": false}, "body": "This test doesn't actually test what its name implies", "created_at": "2018-04-03T15:19:15Z", "updated_at": "2018-11-23T15:41:33Z", "html_url": "https://github.com/pytorch/pytorch/pull/6225#discussion_r178862141", "pull_request_url": "https://api.github.com/repos/pytorch/pytorch/pulls/6225", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/178862141"}, "html": {"href": "https://github.com/pytorch/pytorch/pull/6225#discussion_r178862141"}, "pull_request": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/6225"}}, "body_html": "<p>This test doesn't actually test what its name implies</p>", "body_text": "This test doesn't actually test what its name implies"}