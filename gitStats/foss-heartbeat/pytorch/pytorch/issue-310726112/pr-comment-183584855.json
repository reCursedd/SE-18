{"url": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/183584855", "pull_request_review_id": 114609938, "id": 183584855, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MzU4NDg1NQ==", "diff_hunk": "@@ -283,6 +304,27 @@ THSTensor *THSTensor_(newTranspose)(THSTensor *self, int d1, int d2) {\n  * reshaping methods\n  ******************************************************************************/\n \n+/*** Helper methods ***/\n+THLongTensor *THSTensor_(toCSR)(int64_t const *indices, int64_t dim, int64_t nnz) {\n+  int64_t h, i, hp0, hp1;\n+  THLongTensor *csr = THLongTensor_newWithSize1d(dim + 1);\n+  THLongTensor_zero(csr);\n+\n+  // Convert the sparse matrix to CSR format\n+#pragma omp parallel for private(i, h, hp0, hp1) schedule(static) if (nnz > 10000)\n+  for (i=0; i<nnz; i++) {\n+    hp0 = indices[i];\n+    hp1 = (i+1 == nnz) ?  dim : indices[i+1];\n+    if (hp0 != hp1) for (h = hp0; h < hp1; h++) {\n+      THTensor_fastSet1d(csr, h+1, i+1);\n+    }\n+  }\n+  return csr;", "path": "aten/src/THS/generic/THSTensor.cpp", "position": 80, "original_position": 77, "commit_id": "4855d2f3eb875b994d9efb2004b6258f8dee61e0", "original_commit_id": "36acd951e6c6b4d1fd76bb0fddd527b6b36ce4e4", "user": {"login": "kose-y", "id": 8198142, "node_id": "MDQ6VXNlcjgxOTgxNDI=", "avatar_url": "https://avatars0.githubusercontent.com/u/8198142?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kose-y", "html_url": "https://github.com/kose-y", "followers_url": "https://api.github.com/users/kose-y/followers", "following_url": "https://api.github.com/users/kose-y/following{/other_user}", "gists_url": "https://api.github.com/users/kose-y/gists{/gist_id}", "starred_url": "https://api.github.com/users/kose-y/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kose-y/subscriptions", "organizations_url": "https://api.github.com/users/kose-y/orgs", "repos_url": "https://api.github.com/users/kose-y/repos", "events_url": "https://api.github.com/users/kose-y/events{/privacy}", "received_events_url": "https://api.github.com/users/kose-y/received_events", "type": "User", "site_admin": false}, "body": "This function gets a standard 2-d `indices` tensor viewed as a 1-d array of long when called (see [L561](https://github.com/pytorch/pytorch/pull/6225/files/36acd951e6c6b4d1fd76bb0fddd527b6b36ce4e4#diff-3aa2a0615d10b1a06bd582a0d1bbf61dR561)), and uses only the first `nnz` elements of it. I will NOT add a check for this one. ", "created_at": "2018-04-24T01:46:43Z", "updated_at": "2018-11-23T15:43:03Z", "html_url": "https://github.com/pytorch/pytorch/pull/6225#discussion_r183584855", "pull_request_url": "https://api.github.com/repos/pytorch/pytorch/pulls/6225", "author_association": "NONE", "_links": {"self": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/183584855"}, "html": {"href": "https://github.com/pytorch/pytorch/pull/6225#discussion_r183584855"}, "pull_request": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/6225"}}, "body_html": "<p>This function gets a standard 2-d <code>indices</code> tensor viewed as a 1-d array of long when called (see <a href=\"https://github.com/pytorch/pytorch/pull/6225/files/36acd951e6c6b4d1fd76bb0fddd527b6b36ce4e4#diff-3aa2a0615d10b1a06bd582a0d1bbf61dR561\">L561</a>), and uses only the first <code>nnz</code> elements of it. I will NOT add a check for this one.</p>", "body_text": "This function gets a standard 2-d indices tensor viewed as a 1-d array of long when called (see L561), and uses only the first nnz elements of it. I will NOT add a check for this one.", "in_reply_to_id": 183357065}