{"url": "https://api.github.com/repos/pytorch/pytorch/issues/comments/378206615", "html_url": "https://github.com/pytorch/pytorch/pull/6225#issuecomment-378206615", "issue_url": "https://api.github.com/repos/pytorch/pytorch/issues/6225", "id": 378206615, "node_id": "MDEyOklzc3VlQ29tbWVudDM3ODIwNjYxNQ==", "user": {"login": "kose-y", "id": 8198142, "node_id": "MDQ6VXNlcjgxOTgxNDI=", "avatar_url": "https://avatars0.githubusercontent.com/u/8198142?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kose-y", "html_url": "https://github.com/kose-y", "followers_url": "https://api.github.com/users/kose-y/followers", "following_url": "https://api.github.com/users/kose-y/following{/other_user}", "gists_url": "https://api.github.com/users/kose-y/gists{/gist_id}", "starred_url": "https://api.github.com/users/kose-y/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kose-y/subscriptions", "organizations_url": "https://api.github.com/users/kose-y/orgs", "repos_url": "https://api.github.com/users/kose-y/repos", "events_url": "https://api.github.com/users/kose-y/events{/privacy}", "received_events_url": "https://api.github.com/users/kose-y/received_events", "type": "User", "site_admin": false}, "created_at": "2018-04-03T10:41:06Z", "updated_at": "2018-04-03T10:45:32Z", "author_association": "NONE", "body_html": "<p>You're right, I will create a function for that.</p>\n<p>I think the last part could be treated in a separated issue. It's not even uncoalesced. Is there any way for the sparse tensor to detect when the index tensor is modified in-place?</p>\n<p>(or is it OK because we must call a method whose name begins with an underscore to deliberately do that?)</p>\n<div class=\"highlight highlight-source-python\"><pre><span class=\"pl-k\">import</span> torch\ni <span class=\"pl-k\">=</span> torch.LongTensor([\n            [<span class=\"pl-c1\">0</span>, <span class=\"pl-c1\">1</span>, <span class=\"pl-c1\">2</span>],\n            [<span class=\"pl-c1\">2</span>, <span class=\"pl-c1\">1</span>, <span class=\"pl-c1\">0</span>],\n         ])\nv <span class=\"pl-k\">=</span> torch.FloatTensor([<span class=\"pl-c1\">1</span>, <span class=\"pl-c1\">1</span>, <span class=\"pl-c1\">1</span>])\nD <span class=\"pl-k\">=</span> torch.sparse.FloatTensor(i, v, torch.Size([<span class=\"pl-c1\">3</span>,<span class=\"pl-c1\">3</span>]))\nDc <span class=\"pl-k\">=</span> D.coalesce()</pre></div>\n<div class=\"highlight highlight-source-python\"><pre>ii <span class=\"pl-k\">=</span> Dc._indices()\nii[<span class=\"pl-c1\">0</span>,<span class=\"pl-c1\">0</span>] <span class=\"pl-k\">=</span> <span class=\"pl-c1\">2</span>\nii</pre></div>\n<pre><code> 2  1  2\n 2  1  0\n[torch.LongTensor of size (2,3)]\n</code></pre>\n<div class=\"highlight highlight-source-python\"><pre>Dc._indices()</pre></div>\n<pre><code> 2  1  2\n 2  1  0\n[torch.LongTensor of size (2,3)]\n</code></pre>\n<div class=\"highlight highlight-source-python\"><pre>Dc.is_coalesced()</pre></div>\n<pre><code>True\n</code></pre>", "body_text": "You're right, I will create a function for that.\nI think the last part could be treated in a separated issue. It's not even uncoalesced. Is there any way for the sparse tensor to detect when the index tensor is modified in-place?\n(or is it OK because we must call a method whose name begins with an underscore to deliberately do that?)\nimport torch\ni = torch.LongTensor([\n            [0, 1, 2],\n            [2, 1, 0],\n         ])\nv = torch.FloatTensor([1, 1, 1])\nD = torch.sparse.FloatTensor(i, v, torch.Size([3,3]))\nDc = D.coalesce()\nii = Dc._indices()\nii[0,0] = 2\nii\n 2  1  2\n 2  1  0\n[torch.LongTensor of size (2,3)]\n\nDc._indices()\n 2  1  2\n 2  1  0\n[torch.LongTensor of size (2,3)]\n\nDc.is_coalesced()\nTrue", "body": "You're right, I will create a function for that. \r\n\r\nI think the last part could be treated in a separated issue. It's not even uncoalesced. Is there any way for the sparse tensor to detect when the index tensor is modified in-place?\r\n\r\n(or is it OK because we must call a method whose name begins with an underscore to deliberately do that?)\r\n\r\n```python\r\nimport torch\r\ni = torch.LongTensor([\r\n            [0, 1, 2],\r\n            [2, 1, 0],\r\n         ])\r\nv = torch.FloatTensor([1, 1, 1])\r\nD = torch.sparse.FloatTensor(i, v, torch.Size([3,3]))\r\nDc = D.coalesce()\r\n```\r\n\r\n\r\n```python\r\nii = Dc._indices()\r\nii[0,0] = 2\r\nii\r\n```\r\n\r\n\r\n\r\n\r\n    \r\n     2  1  2\r\n     2  1  0\r\n    [torch.LongTensor of size (2,3)]\r\n\r\n\r\n\r\n\r\n```python\r\nDc._indices()\r\n```\r\n\r\n\r\n\r\n\r\n    \r\n     2  1  2\r\n     2  1  0\r\n    [torch.LongTensor of size (2,3)]\r\n\r\n\r\n\r\n\r\n```python\r\nDc.is_coalesced()\r\n```\r\n\r\n\r\n\r\n\r\n    True"}