{"url": "https://api.github.com/repos/pytorch/pytorch/issues/14277", "repository_url": "https://api.github.com/repos/pytorch/pytorch", "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/14277/labels{/name}", "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/14277/comments", "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/14277/events", "html_url": "https://github.com/pytorch/pytorch/issues/14277", "id": 383161905, "node_id": "MDU6SXNzdWUzODMxNjE5MDU=", "number": 14277, "title": "Provide Protobuf library if libtorch was built with included version", "user": {"login": "fmder", "id": 961474, "node_id": "MDQ6VXNlcjk2MTQ3NA==", "avatar_url": "https://avatars2.githubusercontent.com/u/961474?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fmder", "html_url": "https://github.com/fmder", "followers_url": "https://api.github.com/users/fmder/followers", "following_url": "https://api.github.com/users/fmder/following{/other_user}", "gists_url": "https://api.github.com/users/fmder/gists{/gist_id}", "starred_url": "https://api.github.com/users/fmder/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fmder/subscriptions", "organizations_url": "https://api.github.com/users/fmder/orgs", "repos_url": "https://api.github.com/users/fmder/repos", "events_url": "https://api.github.com/users/fmder/events{/privacy}", "received_events_url": "https://api.github.com/users/fmder/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-11-21T15:09:50Z", "updated_at": "2018-11-21T16:30:52Z", "closed_at": null, "author_association": "CONTRIBUTOR", "body_html": "<p>When building pytorch and libtorch with <code>python setup.py build</code>, an internal version of protobuf is used. Our C++ app also uses Protobuf but finds an incompatible version with the one used by libtorch. Would it be possible to add to the install a ProtobufConfig.cmake so that we can link against the same protobuf?</p>", "body_text": "When building pytorch and libtorch with python setup.py build, an internal version of protobuf is used. Our C++ app also uses Protobuf but finds an incompatible version with the one used by libtorch. Would it be possible to add to the install a ProtobufConfig.cmake so that we can link against the same protobuf?", "body": "When building pytorch and libtorch with ``python setup.py build``, an internal version of protobuf is used. Our C++ app also uses Protobuf but finds an incompatible version with the one used by libtorch. Would it be possible to add to the install a ProtobufConfig.cmake so that we can link against the same protobuf?"}