{"url": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/173523846", "pull_request_review_id": 102735849, "id": 173523846, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE3MzUyMzg0Ng==", "diff_hunk": "@@ -1115,6 +1122,109 @@\n \n \"\"\")\n \n+add_docstr(torch.diagflat,\n+           r\"\"\"\n+diagflat(input, diagonal=0) -> Tensor\n+\n+- If :attr:`input` is a vector (1-D tensor), then returns a 2-D square tensor\n+  with the elements of :attr:`input` as the diagonal.\n+- If :attr:`input` is a tensor with more than one dimension, then returns a\n+  2-D tensor with diagonal elements equal to a flattened :attr:`input`.\n+\n+The argument :attr:`offset` controls which diagonal to consider:\n+\n+- If :attr:`offset` = 0, it is the main diagonal.\n+- If :attr:`offset` > 0, it is above the main diagonal.\n+- If :attr:`offset` < 0, it is below the main diagonal.\n+\n+Args:\n+    input (Tensor): the input tensor\n+    offset (int, optional): the diagonal to consider. Default: 0 (main\n+        diagonal).\n+\n+Examples:\n+\n+    >>> a = torch.randn(3)\n+    >>> a\n+\n+     1.0480\n+    -2.3405\n+    -1.1138\n+    [torch.FloatTensor of size 3]\n+\n+    >>> torch.diagflat(a)\n+\n+     1.0480  0.0000  0.0000\n+     0.0000 -2.3405  0.0000\n+     0.0000  0.0000 -1.1138\n+    [torch.FloatTensor of size 3x3]\n+\n+    >>> torch.diagflat(a, 1)\n+\n+     0.0000  1.0480  0.0000  0.0000\n+     0.0000  0.0000 -2.3405  0.0000\n+     0.0000  0.0000  0.0000 -1.1138\n+     0.0000  0.0000  0.0000  0.0000\n+    [torch.FloatTensor of size 4x4]\n+\n+    >>> a = torch.randn(2, 2)\n+    >>> a\n+\n+     0.1761 -0.9121\n+    -0.5722  1.5219\n+    [torch.FloatTensor of size (2,2)]\n+\n+    >>> torch.diagflat(a)\n+\n+     0.1761  0.0000  0.0000  0.0000\n+     0.0000 -0.9121  0.0000  0.0000\n+     0.0000  0.0000 -0.5722  0.0000\n+     0.0000  0.0000  0.0000  1.5219\n+    [torch.FloatTensor of size (4,4)]\n+\n+\"\"\")\n+\n+add_docstr(torch.diagonal,\n+           r\"\"\"\n+diagonal(input, offset=0) -> Tensor\n+\n+Returns a 1-D tensor with the diagonal elements of :attr:`input`.\n+\n+The argument :attr:`offset` controls which diagonal to consider:\n+\n+- If :attr:`offset` = 0, it is the main diagonal.\n+- If :attr:`offset` > 0, it is above the main diagonal.\n+- If :attr:`offset` < 0, it is below the main diagonal.\n+\n+Args:\n+    input (Tensor): the input tensor. Must be 2-dimensional.\n+    offset (int, optional): which diagonal to consider. Default: 0\n+        (main diagonal).\n+\n+Examples:\n+    >>> a = torch.randn(3, 3)\n+    >>> a\n+\n+    -1.5328 -1.3210 -1.5204\n+     0.8596  0.0471 -0.2239\n+    -0.6617  0.0146 -1.0817\n+    [torch.FloatTensor of size 3x3]\n+\n+    >>> torch.diagonal(a, 0)\n+\n+    -1.5328\n+     0.0471\n+    -1.0817\n+    [torch.FloatTensor of size 3]\n+\n+    >>> torch.diag(a, 1)", "path": "torch/_torch_docs.py", "position": null, "original_position": 115, "commit_id": "27e294f0203959850952120543465fa1ce8d9065", "original_commit_id": "e47d37a040a01a378e1ca7b4ad42337a5a62247c", "user": {"login": "colesbury", "id": 655866, "node_id": "MDQ6VXNlcjY1NTg2Ng==", "avatar_url": "https://avatars1.githubusercontent.com/u/655866?v=4", "gravatar_id": "", "url": "https://api.github.com/users/colesbury", "html_url": "https://github.com/colesbury", "followers_url": "https://api.github.com/users/colesbury/followers", "following_url": "https://api.github.com/users/colesbury/following{/other_user}", "gists_url": "https://api.github.com/users/colesbury/gists{/gist_id}", "starred_url": "https://api.github.com/users/colesbury/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/colesbury/subscriptions", "organizations_url": "https://api.github.com/users/colesbury/orgs", "repos_url": "https://api.github.com/users/colesbury/repos", "events_url": "https://api.github.com/users/colesbury/events{/privacy}", "received_events_url": "https://api.github.com/users/colesbury/received_events", "type": "User", "site_admin": false}, "body": "Should this say `torch.diagonal`?", "created_at": "2018-03-09T18:05:14Z", "updated_at": "2018-11-23T15:40:33Z", "html_url": "https://github.com/pytorch/pytorch/pull/5622#discussion_r173523846", "pull_request_url": "https://api.github.com/repos/pytorch/pytorch/pulls/5622", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/173523846"}, "html": {"href": "https://github.com/pytorch/pytorch/pull/5622#discussion_r173523846"}, "pull_request": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/5622"}}, "body_html": "<p>Should this say <code>torch.diagonal</code>?</p>", "body_text": "Should this say torch.diagonal?"}