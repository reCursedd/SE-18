{"url": "https://api.github.com/repos/pytorch/pytorch/issues/2825", "repository_url": "https://api.github.com/repos/pytorch/pytorch", "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/2825/labels{/name}", "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/2825/comments", "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/2825/events", "html_url": "https://github.com/pytorch/pytorch/issues/2825", "id": 259619829, "node_id": "MDU6SXNzdWUyNTk2MTk4Mjk=", "number": 2825, "title": "nn.Linear requires 2D input", "user": {"login": "alexholdenmiller", "id": 1141354, "node_id": "MDQ6VXNlcjExNDEzNTQ=", "avatar_url": "https://avatars1.githubusercontent.com/u/1141354?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexholdenmiller", "html_url": "https://github.com/alexholdenmiller", "followers_url": "https://api.github.com/users/alexholdenmiller/followers", "following_url": "https://api.github.com/users/alexholdenmiller/following{/other_user}", "gists_url": "https://api.github.com/users/alexholdenmiller/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexholdenmiller/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexholdenmiller/subscriptions", "organizations_url": "https://api.github.com/users/alexholdenmiller/orgs", "repos_url": "https://api.github.com/users/alexholdenmiller/repos", "events_url": "https://api.github.com/users/alexholdenmiller/events{/privacy}", "received_events_url": "https://api.github.com/users/alexholdenmiller/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-09-21T20:20:12Z", "updated_at": "2017-09-21T20:24:34Z", "closed_at": "2017-09-21T20:24:34Z", "author_association": "CONTRIBUTOR", "body_html": "<p>Based on the docs, I'd expect the input matrix to be able to be 3D (or more).</p>\n<p>However, running...</p>\n<pre><code>import torch\nfrom torch import nn\nfrom torch.autograd import Variable as V\n\nx = V(torch.LongTensor(32, 5).random_(0, 32))  # \"batch of text indices\"\nemb = nn.Embedding(32, 128)\nlin = nn.Linear(128, 128)\nlin(emb(x))\n</code></pre>\n<p>...gives the error...</p>\n<pre><code>  File \"/home/ahm/anaconda3/lib/python3.6/site-packages/torch/nn/modules/module.py\", line 206, in __call__\n    result = self.forward(*input, **kwargs)\n  File \"/home/ahm/anaconda3/lib/python3.6/site-packages/torch/nn/modules/linear.py\", line 54, in forward\n    return self._backend.Linear()(input, self.weight, self.bias)\n  File \"/home/ahm/anaconda3/lib/python3.6/site-packages/torch/nn/_functions/linear.py\", line 10, in forward\n    output.addmm_(0, 1, input, weight.t())\nRuntimeError: matrices expected, got 3D, 2D tensors at /opt/conda/conda-bld/pytorch_1501971235237/work/pytorch-0.1.12/torch/lib/TH/generic/THTensorMath.c:1232\n</code></pre>\n<p>...and running the cuda version...</p>\n<pre><code>x = V(torch.LongTensor(32, 5).random_(0, 32).cuda())\nemb.cuda()\nlin.cuda()\nlin(emb(x))\n</code></pre>\n<p>...gives the similar error...</p>\n<pre><code>  File \"/home/ahm/anaconda3/lib/python3.6/site-packages/torch/nn/modules/module.py\", line 206, in __call__\n    result = self.forward(*input, **kwargs)\n  File \"/home/ahm/anaconda3/lib/python3.6/site-packages/torch/nn/modules/linear.py\", line 54, in forward\n    return self._backend.Linear()(input, self.weight, self.bias)\n  File \"/home/ahm/anaconda3/lib/python3.6/site-packages/torch/nn/_functions/linear.py\", line 10, in forward\n    output.addmm_(0, 1, input, weight.t())\nRuntimeError: matrix and matrix expected at /opt/conda/conda-bld/pytorch_1501971235237/work/pytorch-0.1.12/torch/lib/THC/generic/THCTensorMathBlas.cu:237\n</code></pre>", "body_text": "Based on the docs, I'd expect the input matrix to be able to be 3D (or more).\nHowever, running...\nimport torch\nfrom torch import nn\nfrom torch.autograd import Variable as V\n\nx = V(torch.LongTensor(32, 5).random_(0, 32))  # \"batch of text indices\"\nemb = nn.Embedding(32, 128)\nlin = nn.Linear(128, 128)\nlin(emb(x))\n\n...gives the error...\n  File \"/home/ahm/anaconda3/lib/python3.6/site-packages/torch/nn/modules/module.py\", line 206, in __call__\n    result = self.forward(*input, **kwargs)\n  File \"/home/ahm/anaconda3/lib/python3.6/site-packages/torch/nn/modules/linear.py\", line 54, in forward\n    return self._backend.Linear()(input, self.weight, self.bias)\n  File \"/home/ahm/anaconda3/lib/python3.6/site-packages/torch/nn/_functions/linear.py\", line 10, in forward\n    output.addmm_(0, 1, input, weight.t())\nRuntimeError: matrices expected, got 3D, 2D tensors at /opt/conda/conda-bld/pytorch_1501971235237/work/pytorch-0.1.12/torch/lib/TH/generic/THTensorMath.c:1232\n\n...and running the cuda version...\nx = V(torch.LongTensor(32, 5).random_(0, 32).cuda())\nemb.cuda()\nlin.cuda()\nlin(emb(x))\n\n...gives the similar error...\n  File \"/home/ahm/anaconda3/lib/python3.6/site-packages/torch/nn/modules/module.py\", line 206, in __call__\n    result = self.forward(*input, **kwargs)\n  File \"/home/ahm/anaconda3/lib/python3.6/site-packages/torch/nn/modules/linear.py\", line 54, in forward\n    return self._backend.Linear()(input, self.weight, self.bias)\n  File \"/home/ahm/anaconda3/lib/python3.6/site-packages/torch/nn/_functions/linear.py\", line 10, in forward\n    output.addmm_(0, 1, input, weight.t())\nRuntimeError: matrix and matrix expected at /opt/conda/conda-bld/pytorch_1501971235237/work/pytorch-0.1.12/torch/lib/THC/generic/THCTensorMathBlas.cu:237", "body": "Based on the docs, I'd expect the input matrix to be able to be 3D (or more).\r\n\r\nHowever, running...\r\n```\r\nimport torch\r\nfrom torch import nn\r\nfrom torch.autograd import Variable as V\r\n\r\nx = V(torch.LongTensor(32, 5).random_(0, 32))  # \"batch of text indices\"\r\nemb = nn.Embedding(32, 128)\r\nlin = nn.Linear(128, 128)\r\nlin(emb(x))\r\n```\r\n...gives the error...\r\n```\r\n  File \"/home/ahm/anaconda3/lib/python3.6/site-packages/torch/nn/modules/module.py\", line 206, in __call__\r\n    result = self.forward(*input, **kwargs)\r\n  File \"/home/ahm/anaconda3/lib/python3.6/site-packages/torch/nn/modules/linear.py\", line 54, in forward\r\n    return self._backend.Linear()(input, self.weight, self.bias)\r\n  File \"/home/ahm/anaconda3/lib/python3.6/site-packages/torch/nn/_functions/linear.py\", line 10, in forward\r\n    output.addmm_(0, 1, input, weight.t())\r\nRuntimeError: matrices expected, got 3D, 2D tensors at /opt/conda/conda-bld/pytorch_1501971235237/work/pytorch-0.1.12/torch/lib/TH/generic/THTensorMath.c:1232\r\n```\r\n...and running the cuda version...\r\n```\r\nx = V(torch.LongTensor(32, 5).random_(0, 32).cuda())\r\nemb.cuda()\r\nlin.cuda()\r\nlin(emb(x))\r\n```\r\n...gives the similar error...\r\n```\r\n  File \"/home/ahm/anaconda3/lib/python3.6/site-packages/torch/nn/modules/module.py\", line 206, in __call__\r\n    result = self.forward(*input, **kwargs)\r\n  File \"/home/ahm/anaconda3/lib/python3.6/site-packages/torch/nn/modules/linear.py\", line 54, in forward\r\n    return self._backend.Linear()(input, self.weight, self.bias)\r\n  File \"/home/ahm/anaconda3/lib/python3.6/site-packages/torch/nn/_functions/linear.py\", line 10, in forward\r\n    output.addmm_(0, 1, input, weight.t())\r\nRuntimeError: matrix and matrix expected at /opt/conda/conda-bld/pytorch_1501971235237/work/pytorch-0.1.12/torch/lib/THC/generic/THCTensorMathBlas.cu:237\r\n```"}