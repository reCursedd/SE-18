{"url": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/200442926", "pull_request_review_id": 134762070, "id": 200442926, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwMDQ0MjkyNg==", "diff_hunk": "@@ -133,68 +95,33 @@ Symbol Symbol::fromQualString(const std::string & s) {\n   return globalStrings().symbol(s);\n }\n \n-const char* symbolNamespaceString(SymbolNamespace ns) {\n-  switch (ns) {\n-    case SymbolNamespace::onnx: return \"onnx\";\n-    case SymbolNamespace::prim: return \"prim\";\n-    case SymbolNamespace::aten: return \"aten\";\n-    case SymbolNamespace::attr: return \"attr\";\n-    case SymbolNamespace::scope: return \"scope\";\n-    // NB: throwing an exception here causes gcc -O3 to produce far worse code\n-    default: return \"\";\n-  }\n-}\n-\n-// NB: I really wanted to define this as std::strlen(symbolNamespaceString(ns)),\n-// but gcc -O3 doesn't seem to be smart enough to push the std::strlen into\n-// the switch statement.\n-size_t symbolNamespaceLength(SymbolNamespace ns) {\n-  switch (ns) {\n-    case SymbolNamespace::onnx: return 4;\n-    case SymbolNamespace::prim: return 4;\n-    case SymbolNamespace::aten: return 4;\n-    case SymbolNamespace::attr: return 4;\n-    case SymbolNamespace::scope: return 5;\n-    default: return 0;\n-  }\n-}\n-\n const char * Symbol::toUnqualString() const {\n-  return globalStrings().string(*this) + symbolNamespaceLength(ns()) + 2 /* double colon */;\n+  return toQualString() + (globalStrings().string(ns()).second - strlen(\"namespaces\"));", "path": "torch/csrc/jit/interned_strings.cpp", "position": null, "original_position": 202, "commit_id": "27d78678f528b8710327719cc8db3f0167dec701", "original_commit_id": "9403e35e275d1f3f6ed2d6867a932a74aa1798f8", "user": {"login": "ezyang", "id": 13564, "node_id": "MDQ6VXNlcjEzNTY0", "avatar_url": "https://avatars0.githubusercontent.com/u/13564?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ezyang", "html_url": "https://github.com/ezyang", "followers_url": "https://api.github.com/users/ezyang/followers", "following_url": "https://api.github.com/users/ezyang/following{/other_user}", "gists_url": "https://api.github.com/users/ezyang/gists{/gist_id}", "starred_url": "https://api.github.com/users/ezyang/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ezyang/subscriptions", "organizations_url": "https://api.github.com/users/ezyang/orgs", "repos_url": "https://api.github.com/users/ezyang/repos", "events_url": "https://api.github.com/users/ezyang/events{/privacy}", "received_events_url": "https://api.github.com/users/ezyang/received_events", "type": "User", "site_admin": false}, "body": "What's going on here?", "created_at": "2018-07-05T18:12:48Z", "updated_at": "2018-11-23T15:46:49Z", "html_url": "https://github.com/pytorch/pytorch/pull/9018#discussion_r200442926", "pull_request_url": "https://api.github.com/repos/pytorch/pytorch/pulls/9018", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/200442926"}, "html": {"href": "https://github.com/pytorch/pytorch/pull/9018#discussion_r200442926"}, "pull_request": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/9018"}}, "body_html": "<p>What's going on here?</p>", "body_text": "What's going on here?"}