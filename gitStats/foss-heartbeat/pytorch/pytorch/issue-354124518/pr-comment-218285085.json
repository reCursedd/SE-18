{"url": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/218285085", "pull_request_review_id": 156187200, "id": 218285085, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIxODI4NTA4NQ==", "diff_hunk": "@@ -1961,6 +1961,38 @@ Tensor log1p_backward(const Tensor& grad, const Tensor& self) {\n   return grad / (self + 1);\n }\n \n+Tensor constant_pad_nd_backward(const Tensor& grad, const Tensor& self, IntList pad) {\n+    auto l_inp = self.dim();\n+    auto l_pad = pad.size() / 2;\n+    auto l_diff = l_inp - l_pad;\n+\n+    auto grad_input = Variable(at::zeros(self.sizes(), grad.options()));\n+\n+    auto cg_input = grad_input;\n+    for (int i = l_diff; i < l_inp; i++) {\n+        auto pad_idx = pad.size() - (i - l_diff + 1) * 2;\n+        if (pad[pad_idx] < 0) {\n+            cg_input = cg_input.narrow(i, -pad[pad_idx], cg_input.size(i) + pad[pad_idx]);\n+        }\n+        if (pad[pad_idx + 1] < 0) {\n+            cg_input = cg_input.narrow(i, 0, cg_input.size(i) + pad[pad_idx + 1]);\n+        }\n+    }\n+\n+    auto cg_output = grad;\n+    for (int i = l_diff; i < l_inp; i++) {\n+        auto pad_idx = pad.size() - (i - l_diff + 1) * 2;\n+        if (pad[pad_idx] > 0) {\n+            cg_output = cg_output.narrow(i, pad[pad_idx], cg_output.size(i) - pad[pad_idx]);\n+        }\n+        if (pad[pad_idx + 1] > 0) {\n+            cg_output = cg_output.narrow(i, 0, cg_output.size(i) - pad[pad_idx + 1]);\n+        }\n+    }\n+    cg_input.copy_(cg_output);", "path": "tools/autograd/templates/Functions.cpp", "position": null, "original_position": 32, "commit_id": "f2109c4136c379834d616724b6373791fabc8cee", "original_commit_id": "23d2ab92816a7804c81fc001ea586312aea11b92", "user": {"login": "wdhorton", "id": 13503072, "node_id": "MDQ6VXNlcjEzNTAzMDcy", "avatar_url": "https://avatars1.githubusercontent.com/u/13503072?v=4", "gravatar_id": "", "url": "https://api.github.com/users/wdhorton", "html_url": "https://github.com/wdhorton", "followers_url": "https://api.github.com/users/wdhorton/followers", "following_url": "https://api.github.com/users/wdhorton/following{/other_user}", "gists_url": "https://api.github.com/users/wdhorton/gists{/gist_id}", "starred_url": "https://api.github.com/users/wdhorton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/wdhorton/subscriptions", "organizations_url": "https://api.github.com/users/wdhorton/orgs", "repos_url": "https://api.github.com/users/wdhorton/repos", "events_url": "https://api.github.com/users/wdhorton/events{/privacy}", "received_events_url": "https://api.github.com/users/wdhorton/received_events", "type": "User", "site_admin": false}, "body": "I tested it out, and I'm pretty sure there are problems with the shape of the output if you just return the sliced `cg_output` and there are negative pads involved. I made a notebook of the case I ran through (https://gist.github.com/wdhorton/9fa988750bab88046168a81a813e468f), but it's basically this case:\r\n```\r\ninput of size (4,5)\r\npad is (1, 1, -1, -1)\r\ngrad of size (2, 7)\r\n\r\nIf you return cg_output in this case, the size is (2, 5).\r\nBut you want it to be (4, 5), matching the original input.\r\n```\r\n\r\nLet me know if that makes sense, or if I'm missing anything.", "created_at": "2018-09-18T02:43:53Z", "updated_at": "2018-11-23T15:51:32Z", "html_url": "https://github.com/pytorch/pytorch/pull/10885#discussion_r218285085", "pull_request_url": "https://api.github.com/repos/pytorch/pytorch/pulls/10885", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/218285085"}, "html": {"href": "https://github.com/pytorch/pytorch/pull/10885#discussion_r218285085"}, "pull_request": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/10885"}}, "body_html": "<p>I tested it out, and I'm pretty sure there are problems with the shape of the output if you just return the sliced <code>cg_output</code> and there are negative pads involved. I made a notebook of the case I ran through (<a href=\"https://gist.github.com/wdhorton/9fa988750bab88046168a81a813e468f\">https://gist.github.com/wdhorton/9fa988750bab88046168a81a813e468f</a>), but it's basically this case:</p>\n<pre><code>input of size (4,5)\npad is (1, 1, -1, -1)\ngrad of size (2, 7)\n\nIf you return cg_output in this case, the size is (2, 5).\nBut you want it to be (4, 5), matching the original input.\n</code></pre>\n<p>Let me know if that makes sense, or if I'm missing anything.</p>", "body_text": "I tested it out, and I'm pretty sure there are problems with the shape of the output if you just return the sliced cg_output and there are negative pads involved. I made a notebook of the case I ran through (https://gist.github.com/wdhorton/9fa988750bab88046168a81a813e468f), but it's basically this case:\ninput of size (4,5)\npad is (1, 1, -1, -1)\ngrad of size (2, 7)\n\nIf you return cg_output in this case, the size is (2, 5).\nBut you want it to be (4, 5), matching the original input.\n\nLet me know if that makes sense, or if I'm missing anything.", "in_reply_to_id": 215023684}