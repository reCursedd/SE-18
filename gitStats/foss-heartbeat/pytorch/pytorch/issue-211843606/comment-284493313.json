{"url": "https://api.github.com/repos/pytorch/pytorch/issues/comments/284493313", "html_url": "https://github.com/pytorch/pytorch/issues/917#issuecomment-284493313", "issue_url": "https://api.github.com/repos/pytorch/pytorch/issues/917", "id": 284493313, "node_id": "MDEyOklzc3VlQ29tbWVudDI4NDQ5MzMxMw==", "user": {"login": "ngimel", "id": 15841449, "node_id": "MDQ6VXNlcjE1ODQxNDQ5", "avatar_url": "https://avatars3.githubusercontent.com/u/15841449?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ngimel", "html_url": "https://github.com/ngimel", "followers_url": "https://api.github.com/users/ngimel/followers", "following_url": "https://api.github.com/users/ngimel/following{/other_user}", "gists_url": "https://api.github.com/users/ngimel/gists{/gist_id}", "starred_url": "https://api.github.com/users/ngimel/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ngimel/subscriptions", "organizations_url": "https://api.github.com/users/ngimel/orgs", "repos_url": "https://api.github.com/users/ngimel/repos", "events_url": "https://api.github.com/users/ngimel/events{/privacy}", "received_events_url": "https://api.github.com/users/ngimel/received_events", "type": "User", "site_admin": false}, "created_at": "2017-03-06T18:51:32Z", "updated_at": "2017-03-06T18:51:32Z", "author_association": "CONTRIBUTOR", "body_html": "<p>Also, there are excessive cudaGetDevice calls for each pointwise operation (9 cudaGetDevice) even without chunking, as in the following repro code:</p>\n<div class=\"highlight highlight-source-python\"><pre><span class=\"pl-k\">import</span> torch\n<span class=\"pl-k\">from</span> torch.autograd <span class=\"pl-k\">import</span> Variable\n<span class=\"pl-k\">from</span> torch.nn <span class=\"pl-k\">import</span> functional <span class=\"pl-k\">as</span> F\n\nx <span class=\"pl-k\">=</span> Variable(torch.randn(<span class=\"pl-c1\">100000</span>).cuda())\n\n<span class=\"pl-k\">for</span> i <span class=\"pl-k\">in</span> <span class=\"pl-c1\">range</span>(<span class=\"pl-c1\">20</span>):\n   z <span class=\"pl-k\">=</span> F.sigmoid(x)</pre></div>\n<p>As <a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=11729078\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/jekbradbury\">@jekbradbury</a>, for small unrolled LSTMs it does show up.</p>", "body_text": "Also, there are excessive cudaGetDevice calls for each pointwise operation (9 cudaGetDevice) even without chunking, as in the following repro code:\nimport torch\nfrom torch.autograd import Variable\nfrom torch.nn import functional as F\n\nx = Variable(torch.randn(100000).cuda())\n\nfor i in range(20):\n   z = F.sigmoid(x)\nAs @jekbradbury, for small unrolled LSTMs it does show up.", "body": "Also, there are excessive cudaGetDevice calls for each pointwise operation (9 cudaGetDevice) even without chunking, as in the following repro code:\r\n```.py\r\nimport torch\r\nfrom torch.autograd import Variable\r\nfrom torch.nn import functional as F\r\n\r\nx = Variable(torch.randn(100000).cuda())\r\n\r\nfor i in range(20):\r\n   z = F.sigmoid(x)\r\n```\r\nAs @jekbradbury, for small unrolled LSTMs it does show up. \r\n"}