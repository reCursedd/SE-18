{"url": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/158082379", "pull_request_review_id": 84833857, "id": 158082379, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE1ODA4MjM3OQ==", "diff_hunk": "@@ -109,6 +109,12 @@\n \n - func: matmul(Tensor self, Tensor other) -> Tensor\n \n+# we define both of these because 'where' does the broadcast and '_s_where' doesn't;\n+# this allows us to implicitly calculate the broadcast derivative, while only dealing with the\n+# _s_where derivative.\n+- func: where(BoolTensor condition, Tensor self, Tensor other) -> Tensor\n+- func: _s_where(BoolTensor condition, Tensor self, Tensor other) -> Tensor", "path": "aten/src/ATen/native/native_functions.yaml", "position": 8, "original_position": 8, "commit_id": "045dffca6c21cd3afdb1912b86eb2119c54348fb", "original_commit_id": "045dffca6c21cd3afdb1912b86eb2119c54348fb", "user": {"login": "gchanan", "id": 3768583, "node_id": "MDQ6VXNlcjM3Njg1ODM=", "avatar_url": "https://avatars2.githubusercontent.com/u/3768583?v=4", "gravatar_id": "", "url": "https://api.github.com/users/gchanan", "html_url": "https://github.com/gchanan", "followers_url": "https://api.github.com/users/gchanan/followers", "following_url": "https://api.github.com/users/gchanan/following{/other_user}", "gists_url": "https://api.github.com/users/gchanan/gists{/gist_id}", "starred_url": "https://api.github.com/users/gchanan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/gchanan/subscriptions", "organizations_url": "https://api.github.com/users/gchanan/orgs", "repos_url": "https://api.github.com/users/gchanan/repos", "events_url": "https://api.github.com/users/gchanan/events{/privacy}", "received_events_url": "https://api.github.com/users/gchanan/received_events", "type": "User", "site_admin": false}, "body": "The comment is just related to how we usually specify derivatives of functions that broadcast; i.e. the broadcast is handled separately.  Since we don't have all the mechanism to do that in native functions (and it's not clear we want it), we fake it.\r\n\r\nI agree on the downside.  @ezyang have you thought about this?", "created_at": "2017-12-20T17:11:07Z", "updated_at": "2018-11-23T15:37:34Z", "html_url": "https://github.com/pytorch/pytorch/pull/4259#discussion_r158082379", "pull_request_url": "https://api.github.com/repos/pytorch/pytorch/pulls/4259", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/158082379"}, "html": {"href": "https://github.com/pytorch/pytorch/pull/4259#discussion_r158082379"}, "pull_request": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/4259"}}, "body_html": "<p>The comment is just related to how we usually specify derivatives of functions that broadcast; i.e. the broadcast is handled separately.  Since we don't have all the mechanism to do that in native functions (and it's not clear we want it), we fake it.</p>\n<p>I agree on the downside.  <a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=13564\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/ezyang\">@ezyang</a> have you thought about this?</p>", "body_text": "The comment is just related to how we usually specify derivatives of functions that broadcast; i.e. the broadcast is handled separately.  Since we don't have all the mechanism to do that in native functions (and it's not clear we want it), we fake it.\nI agree on the downside.  @ezyang have you thought about this?", "in_reply_to_id": 157985913}