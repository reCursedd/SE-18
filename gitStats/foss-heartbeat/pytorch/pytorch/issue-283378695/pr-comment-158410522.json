{"url": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/158410522", "pull_request_review_id": 85219896, "id": 158410522, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE1ODQxMDUyMg==", "diff_hunk": "@@ -109,6 +109,12 @@\n \n - func: matmul(Tensor self, Tensor other) -> Tensor\n \n+# we define both of these because 'where' does the broadcast and '_s_where' doesn't;\n+# this allows us to implicitly calculate the broadcast derivative, while only dealing with the\n+# _s_where derivative.\n+- func: where(BoolTensor condition, Tensor self, Tensor other) -> Tensor\n+- func: _s_where(BoolTensor condition, Tensor self, Tensor other) -> Tensor", "path": "aten/src/ATen/native/native_functions.yaml", "position": 8, "original_position": 8, "commit_id": "045dffca6c21cd3afdb1912b86eb2119c54348fb", "original_commit_id": "045dffca6c21cd3afdb1912b86eb2119c54348fb", "user": {"login": "ezyang", "id": 13564, "node_id": "MDQ6VXNlcjEzNTY0", "avatar_url": "https://avatars0.githubusercontent.com/u/13564?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ezyang", "html_url": "https://github.com/ezyang", "followers_url": "https://api.github.com/users/ezyang/followers", "following_url": "https://api.github.com/users/ezyang/following{/other_user}", "gists_url": "https://api.github.com/users/ezyang/gists{/gist_id}", "starred_url": "https://api.github.com/users/ezyang/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ezyang/subscriptions", "organizations_url": "https://api.github.com/users/ezyang/orgs", "repos_url": "https://api.github.com/users/ezyang/repos", "events_url": "https://api.github.com/users/ezyang/events{/privacy}", "received_events_url": "https://api.github.com/users/ezyang/received_events", "type": "User", "site_admin": false}, "body": "Yes, that's true. But the non-broadcast version is simply a special case of the broadcasting version, so it shouldn't be hard for the JIT to handle both, if it needs to handle them. No consequence for ONNX which doesn't export backward (yet).", "created_at": "2017-12-22T00:52:31Z", "updated_at": "2018-11-23T15:37:37Z", "html_url": "https://github.com/pytorch/pytorch/pull/4259#discussion_r158410522", "pull_request_url": "https://api.github.com/repos/pytorch/pytorch/pulls/4259", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/158410522"}, "html": {"href": "https://github.com/pytorch/pytorch/pull/4259#discussion_r158410522"}, "pull_request": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/4259"}}, "body_html": "<p>Yes, that's true. But the non-broadcast version is simply a special case of the broadcasting version, so it shouldn't be hard for the JIT to handle both, if it needs to handle them. No consequence for ONNX which doesn't export backward (yet).</p>", "body_text": "Yes, that's true. But the non-broadcast version is simply a special case of the broadcasting version, so it shouldn't be hard for the JIT to handle both, if it needs to handle them. No consequence for ONNX which doesn't export backward (yet).", "in_reply_to_id": 157985913}