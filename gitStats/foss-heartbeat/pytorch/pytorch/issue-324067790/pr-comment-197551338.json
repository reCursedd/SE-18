{"url": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/197551338", "pull_request_review_id": 131325256, "id": 197551338, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5NzU1MTMzOA==", "diff_hunk": "@@ -16,6 +16,6 @@ export ASAN_OPTIONS=detect_leaks=0:symbolize=1\n \n # TODO: Make the ASAN flags a more unified env var\n CC=\"clang\" CXX=\"clang++\" LDSHARED=\"clang --shared\" \\\n-  CFLAGS=\"-fsanitize=address -shared-libasan\" \\\n+  CFLAGS=\"-fsanitize=address -fsanitize=undefined -shared-libasan\" \\", "path": ".jenkins/pytorch/build-asan.sh", "position": 5, "original_position": 5, "commit_id": "2e21e34450ddb63711713dfeb4cfee4cc48496e1", "original_commit_id": "e485f67150175b07da4a6e1d45fd5ceaf9b60444", "user": {"login": "igorsugak", "id": 10272840, "node_id": "MDQ6VXNlcjEwMjcyODQw", "avatar_url": "https://avatars3.githubusercontent.com/u/10272840?v=4", "gravatar_id": "", "url": "https://api.github.com/users/igorsugak", "html_url": "https://github.com/igorsugak", "followers_url": "https://api.github.com/users/igorsugak/followers", "following_url": "https://api.github.com/users/igorsugak/following{/other_user}", "gists_url": "https://api.github.com/users/igorsugak/gists{/gist_id}", "starred_url": "https://api.github.com/users/igorsugak/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/igorsugak/subscriptions", "organizations_url": "https://api.github.com/users/igorsugak/orgs", "repos_url": "https://api.github.com/users/igorsugak/repos", "events_url": "https://api.github.com/users/igorsugak/events{/privacy}", "received_events_url": "https://api.github.com/users/igorsugak/received_events", "type": "User", "site_admin": false}, "body": "`-fsanitize=undefined` enables a large subset of the available UBSAN checks. There is also \r\n* `-fsanitize=nullability` to help detect incorrectly used nullability attributes, should be fairly easy to enable and fix. \r\n* `-fsanitize=unsigned-integer-overflow`, while not an undefined behavior it might be useful to turn on.\r\n\r\nUBSAN by default prints only one line of log, you can make it print the whole stack trace if you define environment variable:\r\n`UBSAN_OPTIONS=print_stacktrace=1`.\r\nhttps://clang.llvm.org/docs/UndefinedBehaviorSanitizer.html#available-checks", "created_at": "2018-06-22T19:47:28Z", "updated_at": "2018-11-23T15:46:08Z", "html_url": "https://github.com/pytorch/pytorch/pull/7643#discussion_r197551338", "pull_request_url": "https://api.github.com/repos/pytorch/pytorch/pulls/7643", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/197551338"}, "html": {"href": "https://github.com/pytorch/pytorch/pull/7643#discussion_r197551338"}, "pull_request": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/7643"}}, "body_html": "<p><code>-fsanitize=undefined</code> enables a large subset of the available UBSAN checks. There is also</p>\n<ul>\n<li><code>-fsanitize=nullability</code> to help detect incorrectly used nullability attributes, should be fairly easy to enable and fix.</li>\n<li><code>-fsanitize=unsigned-integer-overflow</code>, while not an undefined behavior it might be useful to turn on.</li>\n</ul>\n<p>UBSAN by default prints only one line of log, you can make it print the whole stack trace if you define environment variable:<br>\n<code>UBSAN_OPTIONS=print_stacktrace=1</code>.<br>\n<a href=\"https://clang.llvm.org/docs/UndefinedBehaviorSanitizer.html#available-checks\" rel=\"nofollow\">https://clang.llvm.org/docs/UndefinedBehaviorSanitizer.html#available-checks</a></p>", "body_text": "-fsanitize=undefined enables a large subset of the available UBSAN checks. There is also\n\n-fsanitize=nullability to help detect incorrectly used nullability attributes, should be fairly easy to enable and fix.\n-fsanitize=unsigned-integer-overflow, while not an undefined behavior it might be useful to turn on.\n\nUBSAN by default prints only one line of log, you can make it print the whole stack trace if you define environment variable:\nUBSAN_OPTIONS=print_stacktrace=1.\nhttps://clang.llvm.org/docs/UndefinedBehaviorSanitizer.html#available-checks"}