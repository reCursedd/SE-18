{"url": "https://api.github.com/repos/pytorch/pytorch/issues/comments/441041328", "html_url": "https://github.com/pytorch/pytorch/issues/12308#issuecomment-441041328", "issue_url": "https://api.github.com/repos/pytorch/pytorch/issues/12308", "id": 441041328, "node_id": "MDEyOklzc3VlQ29tbWVudDQ0MTA0MTMyOA==", "user": {"login": "lihuan19891123", "id": 25058529, "node_id": "MDQ6VXNlcjI1MDU4NTI5", "avatar_url": "https://avatars2.githubusercontent.com/u/25058529?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lihuan19891123", "html_url": "https://github.com/lihuan19891123", "followers_url": "https://api.github.com/users/lihuan19891123/followers", "following_url": "https://api.github.com/users/lihuan19891123/following{/other_user}", "gists_url": "https://api.github.com/users/lihuan19891123/gists{/gist_id}", "starred_url": "https://api.github.com/users/lihuan19891123/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lihuan19891123/subscriptions", "organizations_url": "https://api.github.com/users/lihuan19891123/orgs", "repos_url": "https://api.github.com/users/lihuan19891123/repos", "events_url": "https://api.github.com/users/lihuan19891123/events{/privacy}", "received_events_url": "https://api.github.com/users/lihuan19891123/received_events", "type": "User", "site_admin": false}, "created_at": "2018-11-22T14:08:25Z", "updated_at": "2018-11-22T14:08:25Z", "author_association": "NONE", "body_html": "<p>How about nn.functional.linear() with autograd for sparse tensor when input is dense, while weights is sparse?  In my situation, calculating grad for sparse weights is needed, but seems this is not supported by pytorch yet. I am sorry if I was wrong.</p>", "body_text": "How about nn.functional.linear() with autograd for sparse tensor when input is dense, while weights is sparse?  In my situation, calculating grad for sparse weights is needed, but seems this is not supported by pytorch yet. I am sorry if I was wrong.", "body": "How about nn.functional.linear() with autograd for sparse tensor when input is dense, while weights is sparse?  In my situation, calculating grad for sparse weights is needed, but seems this is not supported by pytorch yet. I am sorry if I was wrong."}