{"url": "https://api.github.com/repos/pytorch/pytorch/issues/comments/361770138", "html_url": "https://github.com/pytorch/pytorch/issues/4939#issuecomment-361770138", "issue_url": "https://api.github.com/repos/pytorch/pytorch/issues/4939", "id": 361770138, "node_id": "MDEyOklzc3VlQ29tbWVudDM2MTc3MDEzOA==", "user": {"login": "fmassa", "id": 9110200, "node_id": "MDQ6VXNlcjkxMTAyMDA=", "avatar_url": "https://avatars2.githubusercontent.com/u/9110200?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fmassa", "html_url": "https://github.com/fmassa", "followers_url": "https://api.github.com/users/fmassa/followers", "following_url": "https://api.github.com/users/fmassa/following{/other_user}", "gists_url": "https://api.github.com/users/fmassa/gists{/gist_id}", "starred_url": "https://api.github.com/users/fmassa/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fmassa/subscriptions", "organizations_url": "https://api.github.com/users/fmassa/orgs", "repos_url": "https://api.github.com/users/fmassa/repos", "events_url": "https://api.github.com/users/fmassa/events{/privacy}", "received_events_url": "https://api.github.com/users/fmassa/received_events", "type": "User", "site_admin": false}, "created_at": "2018-01-30T23:28:23Z", "updated_at": "2018-01-30T23:28:23Z", "author_association": "MEMBER", "body_html": "<p>I think I see what you mean.<br>\nI believe in those cases one would use a combination of <code>Conv</code> and <code>ConvTranspose</code> (also known as <code>FullConv</code> or <code>Deconv</code>), and <code>ConvTranspose</code> <a href=\"http://pytorch.org/docs/0.3.0/nn.html#torch.nn.functional.conv_transpose2d\" rel=\"nofollow\">has a parameter <code>output_size</code></a> which accounts for some ambiguity in the output size, which could be seen as some sort of \"cropping\".</p>\n<p>Is that enough for your use-case?</p>", "body_text": "I think I see what you mean.\nI believe in those cases one would use a combination of Conv and ConvTranspose (also known as FullConv or Deconv), and ConvTranspose has a parameter output_size which accounts for some ambiguity in the output size, which could be seen as some sort of \"cropping\".\nIs that enough for your use-case?", "body": "I think I see what you mean.\r\nI believe in those cases one would use a combination of `Conv` and `ConvTranspose` (also known as `FullConv` or `Deconv`), and `ConvTranspose` [has a parameter `output_size`](http://pytorch.org/docs/0.3.0/nn.html#torch.nn.functional.conv_transpose2d) which accounts for some ambiguity in the output size, which could be seen as some sort of \"cropping\".\r\n\r\nIs that enough for your use-case?"}