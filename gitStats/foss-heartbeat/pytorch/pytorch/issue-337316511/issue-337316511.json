{"url": "https://api.github.com/repos/pytorch/pytorch/issues/9083", "repository_url": "https://api.github.com/repos/pytorch/pytorch", "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/9083/labels{/name}", "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/9083/comments", "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/9083/events", "html_url": "https://github.com/pytorch/pytorch/issues/9083", "id": 337316511, "node_id": "MDU6SXNzdWUzMzczMTY1MTE=", "number": 9083, "title": "Optimize CUDA svd and eig", "user": {"login": "SsnL", "id": 5674597, "node_id": "MDQ6VXNlcjU2NzQ1OTc=", "avatar_url": "https://avatars2.githubusercontent.com/u/5674597?v=4", "gravatar_id": "", "url": "https://api.github.com/users/SsnL", "html_url": "https://github.com/SsnL", "followers_url": "https://api.github.com/users/SsnL/followers", "following_url": "https://api.github.com/users/SsnL/following{/other_user}", "gists_url": "https://api.github.com/users/SsnL/gists{/gist_id}", "starred_url": "https://api.github.com/users/SsnL/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/SsnL/subscriptions", "organizations_url": "https://api.github.com/users/SsnL/orgs", "repos_url": "https://api.github.com/users/SsnL/repos", "events_url": "https://api.github.com/users/SsnL/events{/privacy}", "received_events_url": "https://api.github.com/users/SsnL/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 443483881, "node_id": "MDU6TGFiZWw0NDM0ODM4ODE=", "url": "https://api.github.com/repos/pytorch/pytorch/labels/todo", "name": "todo", "color": "c2e0c6", "default": false}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-07-01T19:42:48Z", "updated_at": "2018-10-05T13:58:11Z", "closed_at": null, "author_association": "CONTRIBUTOR", "body_html": "<p>For <code>eig</code>, when <code>eigenvector=False</code>, do not force the row-major-contiguous input to be column-major-contiguous because <code>A</code> and <code>A^T</code> have same evalues.</p>\n<p>For <code>svd</code>, when input is row-major-contiguous, calculate <code>svd</code> as if <code>svd</code> is done on the input's transpose, and then return <code>r0^T, r1, r2</code>, where <code>(r0, r1, r2)</code> are from magma <code>gesdd</code>.</p>", "body_text": "For eig, when eigenvector=False, do not force the row-major-contiguous input to be column-major-contiguous because A and A^T have same evalues.\nFor svd, when input is row-major-contiguous, calculate svd as if svd is done on the input's transpose, and then return r0^T, r1, r2, where (r0, r1, r2) are from magma gesdd.", "body": "For `eig`, when `eigenvector=False`, do not force the row-major-contiguous input to be column-major-contiguous because `A` and `A^T` have same evalues.\r\n\r\nFor `svd`, when input is row-major-contiguous, calculate `svd` as if `svd` is done on the input's transpose, and then return `r0^T, r1, r2`, where `(r0, r1, r2)` are from magma `gesdd`."}