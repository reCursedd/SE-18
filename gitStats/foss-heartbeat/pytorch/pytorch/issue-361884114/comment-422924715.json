{"url": "https://api.github.com/repos/pytorch/pytorch/issues/comments/422924715", "html_url": "https://github.com/pytorch/pytorch/pull/11872#issuecomment-422924715", "issue_url": "https://api.github.com/repos/pytorch/pytorch/issues/11872", "id": 422924715, "node_id": "MDEyOklzc3VlQ29tbWVudDQyMjkyNDcxNQ==", "user": {"login": "t-vi", "id": 20787943, "node_id": "MDQ6VXNlcjIwNzg3OTQz", "avatar_url": "https://avatars2.githubusercontent.com/u/20787943?v=4", "gravatar_id": "", "url": "https://api.github.com/users/t-vi", "html_url": "https://github.com/t-vi", "followers_url": "https://api.github.com/users/t-vi/followers", "following_url": "https://api.github.com/users/t-vi/following{/other_user}", "gists_url": "https://api.github.com/users/t-vi/gists{/gist_id}", "starred_url": "https://api.github.com/users/t-vi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/t-vi/subscriptions", "organizations_url": "https://api.github.com/users/t-vi/orgs", "repos_url": "https://api.github.com/users/t-vi/repos", "events_url": "https://api.github.com/users/t-vi/events{/privacy}", "received_events_url": "https://api.github.com/users/t-vi/received_events", "type": "User", "site_admin": false}, "created_at": "2018-09-19T19:13:33Z", "updated_at": "2018-09-19T19:20:25Z", "author_association": "CONTRIBUTOR", "body_html": "<p>how about <code>torch.autograd.gradcheck(lambda *x: torch.lstm_cell(*x)[1], (data[:,0,:], h0, w_ih, w_hh, b_ih, b_hh))</code></p>\n<p><del>I'll add that, but one question: How fixed is the torch.lstm_cell interface here and should I be concerned about that?</del> I'll use the LSTMCell module and double, that should back to the right function.</p>", "body_text": "how about torch.autograd.gradcheck(lambda *x: torch.lstm_cell(*x)[1], (data[:,0,:], h0, w_ih, w_hh, b_ih, b_hh))\nI'll add that, but one question: How fixed is the torch.lstm_cell interface here and should I be concerned about that? I'll use the LSTMCell module and double, that should back to the right function.", "body": "how about `torch.autograd.gradcheck(lambda *x: torch.lstm_cell(*x)[1], (data[:,0,:], h0, w_ih, w_hh, b_ih, b_hh))`\r\n\r\n~~I'll add that, but one question: How fixed is the torch.lstm_cell interface here and should I be concerned about that?~~ I'll use the LSTMCell module and double, that should back to the right function."}