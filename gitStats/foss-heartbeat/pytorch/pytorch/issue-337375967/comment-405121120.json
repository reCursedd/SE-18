{"url": "https://api.github.com/repos/pytorch/pytorch/issues/comments/405121120", "html_url": "https://github.com/pytorch/pytorch/issues/9092#issuecomment-405121120", "issue_url": "https://api.github.com/repos/pytorch/pytorch/issues/9092", "id": 405121120, "node_id": "MDEyOklzc3VlQ29tbWVudDQwNTEyMTEyMA==", "user": {"login": "ezyang", "id": 13564, "node_id": "MDQ6VXNlcjEzNTY0", "avatar_url": "https://avatars0.githubusercontent.com/u/13564?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ezyang", "html_url": "https://github.com/ezyang", "followers_url": "https://api.github.com/users/ezyang/followers", "following_url": "https://api.github.com/users/ezyang/following{/other_user}", "gists_url": "https://api.github.com/users/ezyang/gists{/gist_id}", "starred_url": "https://api.github.com/users/ezyang/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ezyang/subscriptions", "organizations_url": "https://api.github.com/users/ezyang/orgs", "repos_url": "https://api.github.com/users/ezyang/repos", "events_url": "https://api.github.com/users/ezyang/events{/privacy}", "received_events_url": "https://api.github.com/users/ezyang/received_events", "type": "User", "site_admin": false}, "created_at": "2018-07-15T21:51:24Z", "updated_at": "2018-07-15T21:51:24Z", "author_association": "CONTRIBUTOR", "body_html": "<p>It looks like the problem is that CUDA kernels marked <code>__global__</code> on Windows get exported from the DLL by default, even if they're not tagged <code>__declspec(dllexport)</code>. I checked and saw that marking the kernel as <code>static</code> does prevent this export from happening, but for obvious reasons this won't work for kernels which are referenced from multiple compilation units. So, if there is some way to make the nvcc (or maybe the linker?) not export these, that should solve our problem for good.</p>", "body_text": "It looks like the problem is that CUDA kernels marked __global__ on Windows get exported from the DLL by default, even if they're not tagged __declspec(dllexport). I checked and saw that marking the kernel as static does prevent this export from happening, but for obvious reasons this won't work for kernels which are referenced from multiple compilation units. So, if there is some way to make the nvcc (or maybe the linker?) not export these, that should solve our problem for good.", "body": "It looks like the problem is that CUDA kernels marked `__global__` on Windows get exported from the DLL by default, even if they're not tagged `__declspec(dllexport)`. I checked and saw that marking the kernel as `static` does prevent this export from happening, but for obvious reasons this won't work for kernels which are referenced from multiple compilation units. So, if there is some way to make the nvcc (or maybe the linker?) not export these, that should solve our problem for good."}