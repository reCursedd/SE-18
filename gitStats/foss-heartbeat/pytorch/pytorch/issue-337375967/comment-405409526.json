{"url": "https://api.github.com/repos/pytorch/pytorch/issues/comments/405409526", "html_url": "https://github.com/pytorch/pytorch/issues/9092#issuecomment-405409526", "issue_url": "https://api.github.com/repos/pytorch/pytorch/issues/9092", "id": 405409526, "node_id": "MDEyOklzc3VlQ29tbWVudDQwNTQwOTUyNg==", "user": {"login": "ezyang", "id": 13564, "node_id": "MDQ6VXNlcjEzNTY0", "avatar_url": "https://avatars0.githubusercontent.com/u/13564?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ezyang", "html_url": "https://github.com/ezyang", "followers_url": "https://api.github.com/users/ezyang/followers", "following_url": "https://api.github.com/users/ezyang/following{/other_user}", "gists_url": "https://api.github.com/users/ezyang/gists{/gist_id}", "starred_url": "https://api.github.com/users/ezyang/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ezyang/subscriptions", "organizations_url": "https://api.github.com/users/ezyang/orgs", "repos_url": "https://api.github.com/users/ezyang/repos", "events_url": "https://api.github.com/users/ezyang/events{/privacy}", "received_events_url": "https://api.github.com/users/ezyang/received_events", "type": "User", "site_admin": false}, "created_at": "2018-07-16T23:15:06Z", "updated_at": "2018-07-16T23:15:06Z", "author_association": "CONTRIBUTOR", "body_html": "<p>With the help of <a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=15841449\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/ngimel\">@ngimel</a>, we noticed that a minimal repro does NOT export symbols when they're marked <code>__global__</code>, so it must be something else (a compile flag, or some other pragma) which is causing these symbols to leak.</p>\n<p>Here's the repro:</p>\n<pre><code>#include &lt;stdio.h&gt;\n\n#if EXPORT_GLOBAL\n #define DECLSPEC_GLOBAL __declspec(dllexport)\n#else\n #define DECLSPEC_GLOBAL \n#endif\n\nextern \"C\" { // Not necessary, but makes output look nicer\n\nDECLSPEC_GLOBAL __global__ void my_kernel(int i)\n{\n   printf(\"%i\\n\", i);\n}\n\n} // extern \"C\"\n</code></pre>\n<p>I used the following batch script on the CI server to reproduce the error with as much fidelity as possible:</p>\n<pre><code>call \"C:\\Program Files (x86)\\Microsoft Visual Studio\\2017\\Community\\VC\\Auxiliary\\Build\\vcvarsall.bat\" x86_amd64\n\"C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v9.0\\bin\\nvcc\" -o kernel.dll --shared  kernel.cu\ndumpbin /EXPORTS kernel.dll\n</code></pre>", "body_text": "With the help of @ngimel, we noticed that a minimal repro does NOT export symbols when they're marked __global__, so it must be something else (a compile flag, or some other pragma) which is causing these symbols to leak.\nHere's the repro:\n#include <stdio.h>\n\n#if EXPORT_GLOBAL\n #define DECLSPEC_GLOBAL __declspec(dllexport)\n#else\n #define DECLSPEC_GLOBAL \n#endif\n\nextern \"C\" { // Not necessary, but makes output look nicer\n\nDECLSPEC_GLOBAL __global__ void my_kernel(int i)\n{\n   printf(\"%i\\n\", i);\n}\n\n} // extern \"C\"\n\nI used the following batch script on the CI server to reproduce the error with as much fidelity as possible:\ncall \"C:\\Program Files (x86)\\Microsoft Visual Studio\\2017\\Community\\VC\\Auxiliary\\Build\\vcvarsall.bat\" x86_amd64\n\"C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v9.0\\bin\\nvcc\" -o kernel.dll --shared  kernel.cu\ndumpbin /EXPORTS kernel.dll", "body": "With the help of @ngimel, we noticed that a minimal repro does NOT export symbols when they're marked `__global__`, so it must be something else (a compile flag, or some other pragma) which is causing these symbols to leak.\r\n\r\nHere's the repro:\r\n\r\n```\r\n#include <stdio.h>\r\n\r\n#if EXPORT_GLOBAL\r\n #define DECLSPEC_GLOBAL __declspec(dllexport)\r\n#else\r\n #define DECLSPEC_GLOBAL \r\n#endif\r\n\r\nextern \"C\" { // Not necessary, but makes output look nicer\r\n\r\nDECLSPEC_GLOBAL __global__ void my_kernel(int i)\r\n{\r\n   printf(\"%i\\n\", i);\r\n}\r\n\r\n} // extern \"C\"\r\n```\r\n\r\nI used the following batch script on the CI server to reproduce the error with as much fidelity as possible:\r\n\r\n```\r\ncall \"C:\\Program Files (x86)\\Microsoft Visual Studio\\2017\\Community\\VC\\Auxiliary\\Build\\vcvarsall.bat\" x86_amd64\r\n\"C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v9.0\\bin\\nvcc\" -o kernel.dll --shared  kernel.cu\r\ndumpbin /EXPORTS kernel.dll\r\n```"}