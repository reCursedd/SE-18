{"url": "https://api.github.com/repos/pytorch/pytorch/issues/comments/354632458", "html_url": "https://github.com/pytorch/pytorch/issues/4396#issuecomment-354632458", "issue_url": "https://api.github.com/repos/pytorch/pytorch/issues/4396", "id": 354632458, "node_id": "MDEyOklzc3VlQ29tbWVudDM1NDYzMjQ1OA==", "user": {"login": "deepbrain", "id": 10003025, "node_id": "MDQ6VXNlcjEwMDAzMDI1", "avatar_url": "https://avatars3.githubusercontent.com/u/10003025?v=4", "gravatar_id": "", "url": "https://api.github.com/users/deepbrain", "html_url": "https://github.com/deepbrain", "followers_url": "https://api.github.com/users/deepbrain/followers", "following_url": "https://api.github.com/users/deepbrain/following{/other_user}", "gists_url": "https://api.github.com/users/deepbrain/gists{/gist_id}", "starred_url": "https://api.github.com/users/deepbrain/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/deepbrain/subscriptions", "organizations_url": "https://api.github.com/users/deepbrain/orgs", "repos_url": "https://api.github.com/users/deepbrain/repos", "events_url": "https://api.github.com/users/deepbrain/events{/privacy}", "received_events_url": "https://api.github.com/users/deepbrain/received_events", "type": "User", "site_admin": false}, "created_at": "2018-01-01T01:38:31Z", "updated_at": "2018-01-01T01:38:31Z", "author_association": "NONE", "body_html": "<p>If I decorate the whole class, it seems to work without a noticeable speedup. So, I don't know if it uses a compiled structure or not. Can it be related to a fact that I also call the forward method from the class <strong>init</strong> method to dynamically create the network structure?</p>\n<p>I like that in pytorch I can build the network structure dynamically, so from the \"<strong>init</strong>\" I call the \"forward\" while setting a boolean flag \"create\" to create the network structure based on a structure of the first sample of the data. In all of the subsequent \"forward\" calls, the network structure does not change nor depend on conditionals. Can the JIT compiler ignore this first forward invocation from the <strong>init</strong> method to avoid creating the precompiled graph?</p>", "body_text": "If I decorate the whole class, it seems to work without a noticeable speedup. So, I don't know if it uses a compiled structure or not. Can it be related to a fact that I also call the forward method from the class init method to dynamically create the network structure?\nI like that in pytorch I can build the network structure dynamically, so from the \"init\" I call the \"forward\" while setting a boolean flag \"create\" to create the network structure based on a structure of the first sample of the data. In all of the subsequent \"forward\" calls, the network structure does not change nor depend on conditionals. Can the JIT compiler ignore this first forward invocation from the init method to avoid creating the precompiled graph?", "body": "If I decorate the whole class, it seems to work without a noticeable speedup. So, I don't know if it uses a compiled structure or not. Can it be related to a fact that I also call the forward method from the class __init__ method to dynamically create the network structure?\r\n\r\nI like that in pytorch I can build the network structure dynamically, so from the \"__init__\" I call the \"forward\" while setting a boolean flag \"create\" to create the network structure based on a structure of the first sample of the data. In all of the subsequent \"forward\" calls, the network structure does not change nor depend on conditionals. Can the JIT compiler ignore this first forward invocation from the __init__ method to avoid creating the precompiled graph? \r\n\r\n\r\n\r\n\r\n"}