{"url": "https://api.github.com/repos/pytorch/pytorch/issues/4762", "repository_url": "https://api.github.com/repos/pytorch/pytorch", "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/4762/labels{/name}", "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/4762/comments", "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/4762/events", "html_url": "https://github.com/pytorch/pytorch/issues/4762", "id": 290227703, "node_id": "MDU6SXNzdWUyOTAyMjc3MDM=", "number": 4762, "title": "[Proposal] Max mode for EmbeddingBag", "user": {"login": "Lalaland", "id": 342233, "node_id": "MDQ6VXNlcjM0MjIzMw==", "avatar_url": "https://avatars2.githubusercontent.com/u/342233?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Lalaland", "html_url": "https://github.com/Lalaland", "followers_url": "https://api.github.com/users/Lalaland/followers", "following_url": "https://api.github.com/users/Lalaland/following{/other_user}", "gists_url": "https://api.github.com/users/Lalaland/gists{/gist_id}", "starred_url": "https://api.github.com/users/Lalaland/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Lalaland/subscriptions", "organizations_url": "https://api.github.com/users/Lalaland/orgs", "repos_url": "https://api.github.com/users/Lalaland/repos", "events_url": "https://api.github.com/users/Lalaland/events{/privacy}", "received_events_url": "https://api.github.com/users/Lalaland/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-01-20T22:12:42Z", "updated_at": "2018-04-29T20:48:12Z", "closed_at": "2018-04-29T20:48:12Z", "author_association": "CONTRIBUTOR", "body_html": "<p>The EmbeddingBag interface is quite neat and efficient for dealing with large variable length sequences of embeddings.  However, there is one issue with the class in that it doesn't support taking the max over the embeddings (currently only mean and sum are supported).</p>\n<p>Would a PR that implements a max mode be appreciated? Are there any potential issues which would get in the way of implementing a max for EmbeddingBag? I assume the resulting API change would just be a new mode \"max\" for the EmbeddingBag constructor.</p>", "body_text": "The EmbeddingBag interface is quite neat and efficient for dealing with large variable length sequences of embeddings.  However, there is one issue with the class in that it doesn't support taking the max over the embeddings (currently only mean and sum are supported).\nWould a PR that implements a max mode be appreciated? Are there any potential issues which would get in the way of implementing a max for EmbeddingBag? I assume the resulting API change would just be a new mode \"max\" for the EmbeddingBag constructor.", "body": "The EmbeddingBag interface is quite neat and efficient for dealing with large variable length sequences of embeddings.  However, there is one issue with the class in that it doesn't support taking the max over the embeddings (currently only mean and sum are supported).\r\n\r\nWould a PR that implements a max mode be appreciated? Are there any potential issues which would get in the way of implementing a max for EmbeddingBag? I assume the resulting API change would just be a new mode \"max\" for the EmbeddingBag constructor."}