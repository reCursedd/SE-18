{"url": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/160455712", "pull_request_review_id": 87576493, "id": 160455712, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE2MDQ1NTcxMg==", "diff_hunk": "@@ -26,7 +26,29 @@ class PackedSequence(PackedSequence_):\n         batch_sizes (list[int]): list of integers holding information about\n             the batch size at each sequence step\n     \"\"\"\n-    pass\n+\n+    @classmethod\n+    def _impute_data_prop(cls, name):\n+        @property\n+        def prop(self):\n+            return getattr(self.data, name)\n+        setattr(cls, name, prop)\n+\n+    @classmethod\n+    def _impute_data_mask(cls, name):\n+        \"\"\"Impute method `name` of attribute `data` into class `cls`\"\"\"\n+        def fn(self, *args, **kwargs):\n+            return type(self)(getattr(self.data, name)(*args, **kwargs), self.batch_sizes)\n+        setattr(cls, name, fn)\n+\n+# Impute following `torch.Tensor` methods and properties into `PackedSequence`\n+_methods_to_impute = 'cuda cpu double float long int short char byte'.split()", "path": "torch/nn/utils/rnn.py", "position": null, "original_position": 21, "commit_id": "a54c1343383a3dc068c690db33d5a8a5fce14292", "original_commit_id": "10d0a8e356eadb1ad87586651c25fcd91dffde12", "user": {"login": "jusjusjus", "id": 6298900, "node_id": "MDQ6VXNlcjYyOTg5MDA=", "avatar_url": "https://avatars0.githubusercontent.com/u/6298900?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jusjusjus", "html_url": "https://github.com/jusjusjus", "followers_url": "https://api.github.com/users/jusjusjus/followers", "following_url": "https://api.github.com/users/jusjusjus/following{/other_user}", "gists_url": "https://api.github.com/users/jusjusjus/gists{/gist_id}", "starred_url": "https://api.github.com/users/jusjusjus/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jusjusjus/subscriptions", "organizations_url": "https://api.github.com/users/jusjusjus/orgs", "repos_url": "https://api.github.com/users/jusjusjus/repos", "events_url": "https://api.github.com/users/jusjusjus/events{/privacy}", "received_events_url": "https://api.github.com/users/jusjusjus/received_events", "type": "User", "site_admin": false}, "body": "Sure, we could still impute all the different cos/acos/sin/sin_ etc. methods, or should we write a wrapper for each one?", "created_at": "2018-01-09T16:28:31Z", "updated_at": "2018-11-23T15:37:59Z", "html_url": "https://github.com/pytorch/pytorch/pull/4430#discussion_r160455712", "pull_request_url": "https://api.github.com/repos/pytorch/pytorch/pulls/4430", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/160455712"}, "html": {"href": "https://github.com/pytorch/pytorch/pull/4430#discussion_r160455712"}, "pull_request": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/4430"}}, "body_html": "<p>Sure, we could still impute all the different cos/acos/sin/sin_ etc. methods, or should we write a wrapper for each one?</p>", "body_text": "Sure, we could still impute all the different cos/acos/sin/sin_ etc. methods, or should we write a wrapper for each one?", "in_reply_to_id": 160383889}