{"url": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/160429846", "pull_request_review_id": 87544906, "id": 160429846, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE2MDQyOTg0Ng==", "diff_hunk": "@@ -82,7 +104,19 @@ def pack_padded_sequence(input, lengths, batch_first=False):\n     return PackedSequence(torch.cat(steps), batch_sizes)\n \n \n-def pad_packed_sequence(sequence, batch_first=False, padding_value=0.0):\n+_zero_by_type = {\n+    'torch.DoubleTensor': 0.0,\n+    'torch.FloatTensor': 0.0,\n+    'torch.HalfTensor': 0.0,\n+    'torch.LongTensor': 0,\n+    'torch.IntTensor': 0,\n+    'torch.ShortTensor': 0,\n+    'torch.CharTensor': 0,\n+    'torch.ByteTensor': 0,\n+}", "path": "torch/nn/utils/rnn.py", "position": null, "original_position": 45, "commit_id": "a54c1343383a3dc068c690db33d5a8a5fce14292", "original_commit_id": "10d0a8e356eadb1ad87586651c25fcd91dffde12", "user": {"login": "jusjusjus", "id": 6298900, "node_id": "MDQ6VXNlcjYyOTg5MDA=", "avatar_url": "https://avatars0.githubusercontent.com/u/6298900?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jusjusjus", "html_url": "https://github.com/jusjusjus", "followers_url": "https://api.github.com/users/jusjusjus/followers", "following_url": "https://api.github.com/users/jusjusjus/following{/other_user}", "gists_url": "https://api.github.com/users/jusjusjus/gists{/gist_id}", "starred_url": "https://api.github.com/users/jusjusjus/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jusjusjus/subscriptions", "organizations_url": "https://api.github.com/users/jusjusjus/orgs", "repos_url": "https://api.github.com/users/jusjusjus/repos", "events_url": "https://api.github.com/users/jusjusjus/events{/privacy}", "received_events_url": "https://api.github.com/users/jusjusjus/received_events", "type": "User", "site_admin": false}, "body": "Yeah, except for int types:\r\n```import torch\r\nimport numpy as np\r\nfrom torch.autograd import Variable\r\nbatch_size = 12\r\nmax_length = 4\r\nsequences = [\r\n    Variable(torch.rand(np.random.randint(1, max_length+1)))\r\n    for _ in range(batch_size)\r\n]\r\nordered = sorted(sequences, key=len, reverse=True)\r\nlengths = [len(x) for x in ordered]\r\npadded = torch.nn.utils.rnn.pad_sequence(ordered)\r\npadded = padded.int()\r\npacked = torch.nn.utils.rnn.pack_padded_sequence(padded, lengths)\r\ntorch.nn.utils.rnn.pad_packed_sequence(packed)\r\n```\r\n\r\nyields `TypeError: fill_ received an invalid combination of arguments - got (float), but expected (int value)` in origin/master and python 3.5.", "created_at": "2018-01-09T15:02:50Z", "updated_at": "2018-11-23T15:37:58Z", "html_url": "https://github.com/pytorch/pytorch/pull/4430#discussion_r160429846", "pull_request_url": "https://api.github.com/repos/pytorch/pytorch/pulls/4430", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/160429846"}, "html": {"href": "https://github.com/pytorch/pytorch/pull/4430#discussion_r160429846"}, "pull_request": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/4430"}}, "body_html": "<p>Yeah, except for int types:</p>\n<pre lang=\"import\" data-meta=\"torch\"><code>import numpy as np\nfrom torch.autograd import Variable\nbatch_size = 12\nmax_length = 4\nsequences = [\n    Variable(torch.rand(np.random.randint(1, max_length+1)))\n    for _ in range(batch_size)\n]\nordered = sorted(sequences, key=len, reverse=True)\nlengths = [len(x) for x in ordered]\npadded = torch.nn.utils.rnn.pad_sequence(ordered)\npadded = padded.int()\npacked = torch.nn.utils.rnn.pack_padded_sequence(padded, lengths)\ntorch.nn.utils.rnn.pad_packed_sequence(packed)\n</code></pre>\n<p>yields <code>TypeError: fill_ received an invalid combination of arguments - got (float), but expected (int value)</code> in origin/master and python 3.5.</p>", "body_text": "Yeah, except for int types:\nimport numpy as np\nfrom torch.autograd import Variable\nbatch_size = 12\nmax_length = 4\nsequences = [\n    Variable(torch.rand(np.random.randint(1, max_length+1)))\n    for _ in range(batch_size)\n]\nordered = sorted(sequences, key=len, reverse=True)\nlengths = [len(x) for x in ordered]\npadded = torch.nn.utils.rnn.pad_sequence(ordered)\npadded = padded.int()\npacked = torch.nn.utils.rnn.pack_padded_sequence(padded, lengths)\ntorch.nn.utils.rnn.pad_packed_sequence(packed)\n\nyields TypeError: fill_ received an invalid combination of arguments - got (float), but expected (int value) in origin/master and python 3.5.", "in_reply_to_id": 160383067}