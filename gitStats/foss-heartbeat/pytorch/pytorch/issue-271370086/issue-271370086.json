{"url": "https://api.github.com/repos/pytorch/pytorch/issues/3497", "repository_url": "https://api.github.com/repos/pytorch/pytorch", "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/3497/labels{/name}", "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/3497/comments", "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/3497/events", "html_url": "https://github.com/pytorch/pytorch/issues/3497", "id": 271370086, "node_id": "MDU6SXNzdWUyNzEzNzAwODY=", "number": 3497, "title": "TypeError: torch.sort received an invalid combination of arguments - got (torch.FloatTensor, descending=bool)", "user": {"login": "acgtyrant", "id": 3921062, "node_id": "MDQ6VXNlcjM5MjEwNjI=", "avatar_url": "https://avatars1.githubusercontent.com/u/3921062?v=4", "gravatar_id": "", "url": "https://api.github.com/users/acgtyrant", "html_url": "https://github.com/acgtyrant", "followers_url": "https://api.github.com/users/acgtyrant/followers", "following_url": "https://api.github.com/users/acgtyrant/following{/other_user}", "gists_url": "https://api.github.com/users/acgtyrant/gists{/gist_id}", "starred_url": "https://api.github.com/users/acgtyrant/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/acgtyrant/subscriptions", "organizations_url": "https://api.github.com/users/acgtyrant/orgs", "repos_url": "https://api.github.com/users/acgtyrant/repos", "events_url": "https://api.github.com/users/acgtyrant/events{/privacy}", "received_events_url": "https://api.github.com/users/acgtyrant/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-11-06T06:19:36Z", "updated_at": "2017-11-06T23:26:36Z", "closed_at": "2017-11-06T23:26:35Z", "author_association": "CONTRIBUTOR", "body_html": "<pre><code>import torch\na = torch.randn(5)\ntorch.sort(a, descending=True)\n</code></pre>\n<p>Then it throw error:</p>\n<pre><code>---------------------------------------------------------------------------\nTypeError                                 Traceback (most recent call last)\n&lt;ipython-input-5-faa07f973bc8&gt; in &lt;module&gt;()\n----&gt; 1 torch.sort(a, descending=True)\n\nTypeError: torch.sort received an invalid combination of arguments - got (torch.FloatTensor, descending=bool), but expected one of:\n * (torch.FloatTensor source)\n      didn't match because some of the keywords were incorrect: descending\n * (torch.FloatTensor source, int dim)\n * (torch.FloatTensor source, int dim, bool descending)\n</code></pre>\n<p>According to my understanding to Python, this should not happen while the <code>dim</code> has its default value. My PyTorch version is 0.2.0_3.</p>", "body_text": "import torch\na = torch.randn(5)\ntorch.sort(a, descending=True)\n\nThen it throw error:\n---------------------------------------------------------------------------\nTypeError                                 Traceback (most recent call last)\n<ipython-input-5-faa07f973bc8> in <module>()\n----> 1 torch.sort(a, descending=True)\n\nTypeError: torch.sort received an invalid combination of arguments - got (torch.FloatTensor, descending=bool), but expected one of:\n * (torch.FloatTensor source)\n      didn't match because some of the keywords were incorrect: descending\n * (torch.FloatTensor source, int dim)\n * (torch.FloatTensor source, int dim, bool descending)\n\nAccording to my understanding to Python, this should not happen while the dim has its default value. My PyTorch version is 0.2.0_3.", "body": "```\r\nimport torch\r\na = torch.randn(5)\r\ntorch.sort(a, descending=True)\r\n```\r\n\r\nThen it throw error:\r\n```\r\n---------------------------------------------------------------------------\r\nTypeError                                 Traceback (most recent call last)\r\n<ipython-input-5-faa07f973bc8> in <module>()\r\n----> 1 torch.sort(a, descending=True)\r\n\r\nTypeError: torch.sort received an invalid combination of arguments - got (torch.FloatTensor, descending=bool), but expected one of:\r\n * (torch.FloatTensor source)\r\n      didn't match because some of the keywords were incorrect: descending\r\n * (torch.FloatTensor source, int dim)\r\n * (torch.FloatTensor source, int dim, bool descending)\r\n```\r\n\r\nAccording to my understanding to Python, this should not happen while the `dim` has its default value. My PyTorch version is 0.2.0_3."}