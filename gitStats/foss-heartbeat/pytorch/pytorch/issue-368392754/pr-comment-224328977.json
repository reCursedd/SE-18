{"url": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/224328977", "pull_request_review_id": 163665942, "id": 224328977, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIyNDMyODk3Nw==", "diff_hunk": "@@ -0,0 +1,249 @@\n+from __future__ import print_function\n+import os\n+import sys\n+import inspect\n+\n+needed_modules = set()\n+\n+\n+def type_to_python(typename):\n+    typename = {'int64_t': 'int',\n+                'Scalar': 'Union[float, int]',\n+                'ScalarType': 'dtype',\n+                'Device': 'Union[device, str, None]',\n+                'IntList': 'Union[Tuple[int, ...], List[int, ...]]',\n+                'Tensor?': 'Optional[Tensor]',\n+                'Tensor': 'Tensor',\n+                'bool': 'bool',\n+                'double': 'float',\n+                'Generator *': 'Generator',\n+                'Generator*': 'Generator',\n+                'std::vector<Tensor>': 'Union[Tuple[Tensor, ...],List[Tensor, ...]]',\n+                'TensorList': 'Union[Tuple[Tensor, ...],List[Tensor, ...]]',\n+                'Storage': 'Storage',  # inaccurate (FloatStorage...)\n+                'SparseTensorRef': 'Tensor',\n+                'void': 'None',\n+                'Layout': 'layout',\n+                'void*': 'int',  # dataptr\n+                'std::string': 'str',\n+                'real': 'Union[float, int]',\n+                'accreal': 'Union[float, int]',\n+                'IntegerTensor': 'Tensor',\n+                'BoolTensor': 'Tensor',\n+                'IndexTensor': 'Tensor',\n+                }[typename]\n+    # handle IntList[]\n+    return typename\n+\n+\n+def arg_to_type_hint(arg):\n+    name = arg['name']\n+    if name == 'from':  # keyword...\n+        name += '_'\n+    typename = type_to_python(arg['dynamic_type'])\n+    if arg.get('is_nullable'):\n+        typename = 'Optional[' + typename + ']'\n+    if 'default' in arg:\n+        default = '=' + str(arg['default'])\n+    else:\n+        default = ''\n+    return name + ': ' + typename + default\n+\n+\n+def generate_type_hints(fname, decls, is_tensor=False):", "path": "tools/pyi/gen_pyi.py", "position": 122, "original_position": 53, "commit_id": "4538b13a88cdc2fe41f9efe11b31536ae09b8f37", "original_commit_id": "a327e187b778667a574b2997f950c46d73a2c7b6", "user": {"login": "ezyang", "id": 13564, "node_id": "MDQ6VXNlcjEzNTY0", "avatar_url": "https://avatars0.githubusercontent.com/u/13564?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ezyang", "html_url": "https://github.com/ezyang", "followers_url": "https://api.github.com/users/ezyang/followers", "following_url": "https://api.github.com/users/ezyang/following{/other_user}", "gists_url": "https://api.github.com/users/ezyang/gists{/gist_id}", "starred_url": "https://api.github.com/users/ezyang/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ezyang/subscriptions", "organizations_url": "https://api.github.com/users/ezyang/orgs", "repos_url": "https://api.github.com/users/ezyang/repos", "events_url": "https://api.github.com/users/ezyang/events{/privacy}", "received_events_url": "https://api.github.com/users/ezyang/received_events", "type": "User", "site_admin": false}, "body": "So, is it right to say that this applies exclusively to methods, or are functions also annotated too?", "created_at": "2018-10-11T06:35:05Z", "updated_at": "2018-11-23T15:52:52Z", "html_url": "https://github.com/pytorch/pytorch/pull/12500#discussion_r224328977", "pull_request_url": "https://api.github.com/repos/pytorch/pytorch/pulls/12500", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/224328977"}, "html": {"href": "https://github.com/pytorch/pytorch/pull/12500#discussion_r224328977"}, "pull_request": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/12500"}}, "body_html": "<p>So, is it right to say that this applies exclusively to methods, or are functions also annotated too?</p>", "body_text": "So, is it right to say that this applies exclusively to methods, or are functions also annotated too?"}