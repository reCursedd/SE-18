{"url": "https://api.github.com/repos/pytorch/pytorch/issues/comments/429074578", "html_url": "https://github.com/pytorch/pytorch/pull/12500#issuecomment-429074578", "issue_url": "https://api.github.com/repos/pytorch/pytorch/issues/12500", "id": 429074578, "node_id": "MDEyOklzc3VlQ29tbWVudDQyOTA3NDU3OA==", "user": {"login": "ezyang", "id": 13564, "node_id": "MDQ6VXNlcjEzNTY0", "avatar_url": "https://avatars0.githubusercontent.com/u/13564?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ezyang", "html_url": "https://github.com/ezyang", "followers_url": "https://api.github.com/users/ezyang/followers", "following_url": "https://api.github.com/users/ezyang/following{/other_user}", "gists_url": "https://api.github.com/users/ezyang/gists{/gist_id}", "starred_url": "https://api.github.com/users/ezyang/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ezyang/subscriptions", "organizations_url": "https://api.github.com/users/ezyang/orgs", "repos_url": "https://api.github.com/users/ezyang/repos", "events_url": "https://api.github.com/users/ezyang/events{/privacy}", "received_events_url": "https://api.github.com/users/ezyang/received_events", "type": "User", "site_admin": false}, "created_at": "2018-10-11T18:44:58Z", "updated_at": "2018-10-11T18:44:58Z", "author_association": "CONTRIBUTOR", "body_html": "<blockquote>\n<p>So what does the <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load issue title\" data-id=\"368970882\" data-permission-text=\"Issue title is private\" data-url=\"https://github.com/pytorch/pytorch/issues/12562\" data-hovercard-type=\"issue\" data-hovercard-url=\"/pytorch/pytorch/issues/12562/hovercard\" href=\"https://github.com/pytorch/pytorch/issues/12562\">#12562</a> washlist mean for progressing here?</p>\n</blockquote>\n<p>Let me look again at the code and work out exactly what would be affected by the changes.</p>\n<blockquote>\n<p>Is it fair to say that you don't object to the annotation approach using the decorator? Then I would see to sprinkling that a bit more on functional.py.</p>\n</blockquote>\n<p>Yeah, I don't personally object to it. It seems like a quite nice way to add the annotation.</p>\n<blockquote>\n<p>Regarding code for testing: On the bug report, <a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=1767836\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/elliotwaite\">@elliotwaite</a> mentioned the documentation examples as a source for code. That seems a great idea and we do have all the docstrings, so maybe we canmake a .py from these and run mypy.</p>\n</blockquote>\n<p>This sounds like a great idea.</p>", "body_text": "So what does the #12562 washlist mean for progressing here?\n\nLet me look again at the code and work out exactly what would be affected by the changes.\n\nIs it fair to say that you don't object to the annotation approach using the decorator? Then I would see to sprinkling that a bit more on functional.py.\n\nYeah, I don't personally object to it. It seems like a quite nice way to add the annotation.\n\nRegarding code for testing: On the bug report, @elliotwaite mentioned the documentation examples as a source for code. That seems a great idea and we do have all the docstrings, so maybe we canmake a .py from these and run mypy.\n\nThis sounds like a great idea.", "body": "> So what does the #12562 washlist mean for progressing here?\r\n\r\nLet me look again at the code and work out exactly what would be affected by the changes.\r\n\r\n> Is it fair to say that you don't object to the annotation approach using the decorator? Then I would see to sprinkling that a bit more on functional.py.\r\n\r\nYeah, I don't personally object to it. It seems like a quite nice way to add the annotation.\r\n\r\n> Regarding code for testing: On the bug report, @elliotwaite mentioned the documentation examples as a source for code. That seems a great idea and we do have all the docstrings, so maybe we canmake a .py from these and run mypy.\r\n\r\nThis sounds like a great idea."}