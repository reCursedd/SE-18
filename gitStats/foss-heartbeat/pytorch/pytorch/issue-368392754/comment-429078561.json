{"url": "https://api.github.com/repos/pytorch/pytorch/issues/comments/429078561", "html_url": "https://github.com/pytorch/pytorch/pull/12500#issuecomment-429078561", "issue_url": "https://api.github.com/repos/pytorch/pytorch/issues/12500", "id": 429078561, "node_id": "MDEyOklzc3VlQ29tbWVudDQyOTA3ODU2MQ==", "user": {"login": "ezyang", "id": 13564, "node_id": "MDQ6VXNlcjEzNTY0", "avatar_url": "https://avatars0.githubusercontent.com/u/13564?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ezyang", "html_url": "https://github.com/ezyang", "followers_url": "https://api.github.com/users/ezyang/followers", "following_url": "https://api.github.com/users/ezyang/following{/other_user}", "gists_url": "https://api.github.com/users/ezyang/gists{/gist_id}", "starred_url": "https://api.github.com/users/ezyang/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ezyang/subscriptions", "organizations_url": "https://api.github.com/users/ezyang/orgs", "repos_url": "https://api.github.com/users/ezyang/repos", "events_url": "https://api.github.com/users/ezyang/events{/privacy}", "received_events_url": "https://api.github.com/users/ezyang/received_events", "type": "User", "site_admin": false}, "created_at": "2018-10-11T18:57:13Z", "updated_at": "2018-10-11T18:59:50Z", "author_association": "CONTRIBUTOR", "body_html": "<p>These spots look like they would make Declarations.yaml refactoring harder</p>\n<p><div class=\"border rounded-1 my-2\">\n  <div class=\"f6 px-3 py-2 lh-condensed border-bottom bg-gray-light\">\n    <p class=\"mb-0 text-bold\">\n      <a href=\"https://github.com/pytorch/pytorch/blob/a327e187b778667a574b2997f950c46d73a2c7b6/tools/pyi/gen_pyi.py#L56\">pytorch/tools/pyi/gen_pyi.py</a>\n    </p>\n    <p class=\"mb-0 text-gray-light\">\n         Line 56\n      in\n      <a data-pjax=\"true\" class=\"commit-tease-sha\" href=\"/pytorch/pytorch/commit/a327e187b778667a574b2997f950c46d73a2c7b6\">a327e18</a>\n    </p>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper blob-wrapper-embedded data\">\n    <table class=\"highlight tab-size mb-0 js-file-line-container\" data-tab-size=\"8\">\n\n        <tbody><tr class=\"border-0\">\n          <td id=\"L56\" class=\"blob-num border-0 px-3 py-0 bg-white js-line-number\" data-line-number=\"56\"></td>\n          <td id=\"LC56\" class=\"blob-code border-0 px-3 py-0 bg-white blob-code-inner js-file-line\"> has_out <span class=\"pl-k\">=</span> fname <span class=\"pl-k\">+</span> <span class=\"pl-s\"><span class=\"pl-pds\">'</span>_out<span class=\"pl-pds\">'</span></span> <span class=\"pl-k\">in</span> dnames </td>\n        </tr>\n    </tbody></table>\n  </div>\n</div>\n<br>\n<div class=\"border rounded-1 my-2\">\n  <div class=\"f6 px-3 py-2 lh-condensed border-bottom bg-gray-light\">\n    <p class=\"mb-0 text-bold\">\n      <a href=\"https://github.com/pytorch/pytorch/blob/a327e187b778667a574b2997f950c46d73a2c7b6/tools/pyi/gen_pyi.py#L188\">pytorch/tools/pyi/gen_pyi.py</a>\n    </p>\n    <p class=\"mb-0 text-gray-light\">\n         Line 188\n      in\n      <a data-pjax=\"true\" class=\"commit-tease-sha\" href=\"/pytorch/pytorch/commit/a327e187b778667a574b2997f950c46d73a2c7b6\">a327e18</a>\n    </p>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper blob-wrapper-embedded data\">\n    <table class=\"highlight tab-size mb-0 js-file-line-container\" data-tab-size=\"8\">\n\n        <tbody><tr class=\"border-0\">\n          <td id=\"L188\" class=\"blob-num border-0 px-3 py-0 bg-white js-line-number\" data-line-number=\"188\"></td>\n          <td id=\"LC188\" class=\"blob-code border-0 px-3 py-0 bg-white blob-code-inner js-file-line\"> <span class=\"pl-k\">if</span> <span class=\"pl-k\">not</span> name.startswith(<span class=\"pl-s\"><span class=\"pl-pds\">'</span>_<span class=\"pl-pds\">'</span></span>): </td>\n        </tr>\n    </tbody></table>\n  </div>\n</div>\n</p>\n<p>Don't want to hard-code _out handling and inplace handling; should be centralized.</p>\n<p><div class=\"border rounded-1 my-2\">\n  <div class=\"f6 px-3 py-2 lh-condensed border-bottom bg-gray-light\">\n    <p class=\"mb-0 text-bold\">\n      <a href=\"https://github.com/pytorch/pytorch/blob/a327e187b778667a574b2997f950c46d73a2c7b6/tools/pyi/gen_pyi.py#L60\">pytorch/tools/pyi/gen_pyi.py</a>\n    </p>\n    <p class=\"mb-0 text-gray-light\">\n         Line 60\n      in\n      <a data-pjax=\"true\" class=\"commit-tease-sha\" href=\"/pytorch/pytorch/commit/a327e187b778667a574b2997f950c46d73a2c7b6\">a327e18</a>\n    </p>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper blob-wrapper-embedded data\">\n    <table class=\"highlight tab-size mb-0 js-file-line-container\" data-tab-size=\"8\">\n\n        <tbody><tr class=\"border-0\">\n          <td id=\"L60\" class=\"blob-num border-0 px-3 py-0 bg-white js-line-number\" data-line-number=\"60\"></td>\n          <td id=\"LC60\" class=\"blob-code border-0 px-3 py-0 bg-white blob-code-inner js-file-line\"> skip <span class=\"pl-k\">=</span> <span class=\"pl-s\"><span class=\"pl-pds\">'</span>Type<span class=\"pl-pds\">'</span></span> <span class=\"pl-k\">in</span> [a[<span class=\"pl-s\"><span class=\"pl-pds\">'</span>dynamic_type<span class=\"pl-pds\">'</span></span>] <span class=\"pl-k\">for</span> a <span class=\"pl-k\">in</span> decl[<span class=\"pl-s\"><span class=\"pl-pds\">'</span>arguments<span class=\"pl-pds\">'</span></span>]] </td>\n        </tr>\n    </tbody></table>\n  </div>\n</div>\n</p>\n<p>Type is going away. This one's pretty harmless though, easy enough to fix once Type is killed.</p>\n<p><div class=\"border rounded-1 my-2\">\n  <div class=\"f6 px-3 py-2 lh-condensed border-bottom bg-gray-light\">\n    <p class=\"mb-0 text-bold\">\n      <a href=\"https://github.com/pytorch/pytorch/blob/a327e187b778667a574b2997f950c46d73a2c7b6/tools/pyi/gen_pyi.py#L65\">pytorch/tools/pyi/gen_pyi.py</a>\n    </p>\n    <p class=\"mb-0 text-gray-light\">\n         Line 65\n      in\n      <a data-pjax=\"true\" class=\"commit-tease-sha\" href=\"/pytorch/pytorch/commit/a327e187b778667a574b2997f950c46d73a2c7b6\">a327e18</a>\n    </p>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper blob-wrapper-embedded data\">\n    <table class=\"highlight tab-size mb-0 js-file-line-container\" data-tab-size=\"8\">\n\n        <tbody><tr class=\"border-0\">\n          <td id=\"L65\" class=\"blob-num border-0 px-3 py-0 bg-white js-line-number\" data-line-number=\"65\"></td>\n          <td id=\"LC65\" class=\"blob-code border-0 px-3 py-0 bg-white blob-code-inner js-file-line\"> <span class=\"pl-k\">if</span> <span class=\"pl-s\"><span class=\"pl-pds\">'</span>self: Tensor<span class=\"pl-pds\">'</span></span> <span class=\"pl-k\">in</span> python_args: </td>\n        </tr>\n    </tbody></table>\n  </div>\n</div>\n</p>\n<p>Hard-coded handling of self. Maybe this is OK and we'll keep this in the end. CC <a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=370202\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/zdevito\">@zdevito</a></p>\n<p><div class=\"border rounded-1 my-2\">\n  <div class=\"f6 px-3 py-2 lh-condensed border-bottom bg-gray-light\">\n    <p class=\"mb-0 text-bold\">\n      <a href=\"https://github.com/pytorch/pytorch/blob/a327e187b778667a574b2997f950c46d73a2c7b6/tools/pyi/gen_pyi.py#L75\">pytorch/tools/pyi/gen_pyi.py</a>\n    </p>\n    <p class=\"mb-0 text-gray-light\">\n         Line 75\n      in\n      <a data-pjax=\"true\" class=\"commit-tease-sha\" href=\"/pytorch/pytorch/commit/a327e187b778667a574b2997f950c46d73a2c7b6\">a327e18</a>\n    </p>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper blob-wrapper-embedded data\">\n    <table class=\"highlight tab-size mb-0 js-file-line-container\" data-tab-size=\"8\">\n\n        <tbody><tr class=\"border-0\">\n          <td id=\"L75\" class=\"blob-num border-0 px-3 py-0 bg-white js-line-number\" data-line-number=\"75\"></td>\n          <td id=\"LC75\" class=\"blob-code border-0 px-3 py-0 bg-white blob-code-inner js-file-line\"> python_args <span class=\"pl-k\">+=</span> [<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>dtype: dtype=None<span class=\"pl-pds\">\"</span></span>, </td>\n        </tr>\n    </tbody></table>\n  </div>\n</div>\n</p>\n<p>Hard-coded TensorOptions expansion</p>\n<p><div class=\"border rounded-1 my-2\">\n  <div class=\"f6 px-3 py-2 lh-condensed border-bottom bg-gray-light\">\n    <p class=\"mb-0 text-bold\">\n      <a href=\"https://github.com/pytorch/pytorch/blob/a327e187b778667a574b2997f950c46d73a2c7b6/tools/pyi/gen_pyi.py#L87\">pytorch/tools/pyi/gen_pyi.py</a>\n    </p>\n    <p class=\"mb-0 text-gray-light\">\n         Line 87\n      in\n      <a data-pjax=\"true\" class=\"commit-tease-sha\" href=\"/pytorch/pytorch/commit/a327e187b778667a574b2997f950c46d73a2c7b6\">a327e18</a>\n    </p>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper blob-wrapper-embedded data\">\n    <table class=\"highlight tab-size mb-0 js-file-line-container\" data-tab-size=\"8\">\n\n        <tbody><tr class=\"border-0\">\n          <td id=\"L87\" class=\"blob-num border-0 px-3 py-0 bg-white js-line-number\" data-line-number=\"87\"></td>\n          <td id=\"LC87\" class=\"blob-code border-0 px-3 py-0 bg-white blob-code-inner js-file-line\"> have_vararg_version <span class=\"pl-k\">=</span> (numargs <span class=\"pl-k\">&gt;</span> <span class=\"pl-c1\">0</span> <span class=\"pl-k\">and</span> decl[<span class=\"pl-s\"><span class=\"pl-pds\">'</span>arguments<span class=\"pl-pds\">'</span></span>][<span class=\"pl-c1\">0</span>][<span class=\"pl-s\"><span class=\"pl-pds\">'</span>dynamic_type<span class=\"pl-pds\">'</span></span>] <span class=\"pl-k\">in</span> {<span class=\"pl-s\"><span class=\"pl-pds\">'</span>IntList<span class=\"pl-pds\">'</span></span>, <span class=\"pl-s\"><span class=\"pl-pds\">'</span>TensorList<span class=\"pl-pds\">'</span></span>} <span class=\"pl-k\">and</span> </td>\n        </tr>\n    </tbody></table>\n  </div>\n</div>\n</p>\n<p>I actually have no idea what is going on with varargs.</p>", "body_text": "These spots look like they would make Declarations.yaml refactoring harder\n\n  \n    \n      pytorch/tools/pyi/gen_pyi.py\n    \n    \n         Line 56\n      in\n      a327e18\n    \n    \n    \n    \n\n        \n          \n           has_out = fname + '_out' in dnames \n        \n    \n  \n\n\n\n  \n    \n      pytorch/tools/pyi/gen_pyi.py\n    \n    \n         Line 188\n      in\n      a327e18\n    \n    \n    \n    \n\n        \n          \n           if not name.startswith('_'): \n        \n    \n  \n\n\nDon't want to hard-code _out handling and inplace handling; should be centralized.\n\n  \n    \n      pytorch/tools/pyi/gen_pyi.py\n    \n    \n         Line 60\n      in\n      a327e18\n    \n    \n    \n    \n\n        \n          \n           skip = 'Type' in [a['dynamic_type'] for a in decl['arguments']] \n        \n    \n  \n\n\nType is going away. This one's pretty harmless though, easy enough to fix once Type is killed.\n\n  \n    \n      pytorch/tools/pyi/gen_pyi.py\n    \n    \n         Line 65\n      in\n      a327e18\n    \n    \n    \n    \n\n        \n          \n           if 'self: Tensor' in python_args: \n        \n    \n  \n\n\nHard-coded handling of self. Maybe this is OK and we'll keep this in the end. CC @zdevito\n\n  \n    \n      pytorch/tools/pyi/gen_pyi.py\n    \n    \n         Line 75\n      in\n      a327e18\n    \n    \n    \n    \n\n        \n          \n           python_args += [\"dtype: dtype=None\", \n        \n    \n  \n\n\nHard-coded TensorOptions expansion\n\n  \n    \n      pytorch/tools/pyi/gen_pyi.py\n    \n    \n         Line 87\n      in\n      a327e18\n    \n    \n    \n    \n\n        \n          \n           have_vararg_version = (numargs > 0 and decl['arguments'][0]['dynamic_type'] in {'IntList', 'TensorList'} and \n        \n    \n  \n\n\nI actually have no idea what is going on with varargs.", "body": "These spots look like they would make Declarations.yaml refactoring harder\r\n\r\nhttps://github.com/pytorch/pytorch/blob/a327e187b778667a574b2997f950c46d73a2c7b6/tools/pyi/gen_pyi.py#L56\r\nhttps://github.com/pytorch/pytorch/blob/a327e187b778667a574b2997f950c46d73a2c7b6/tools/pyi/gen_pyi.py#L188\r\n\r\nDon't want to hard-code _out handling and inplace handling; should be centralized.\r\n\r\nhttps://github.com/pytorch/pytorch/blob/a327e187b778667a574b2997f950c46d73a2c7b6/tools/pyi/gen_pyi.py#L60\r\n\r\nType is going away. This one's pretty harmless though, easy enough to fix once Type is killed.\r\n\r\nhttps://github.com/pytorch/pytorch/blob/a327e187b778667a574b2997f950c46d73a2c7b6/tools/pyi/gen_pyi.py#L65\r\n\r\nHard-coded handling of self. Maybe this is OK and we'll keep this in the end. CC @zdevito \r\n\r\nhttps://github.com/pytorch/pytorch/blob/a327e187b778667a574b2997f950c46d73a2c7b6/tools/pyi/gen_pyi.py#L75\r\n\r\nHard-coded TensorOptions expansion\r\n\r\nhttps://github.com/pytorch/pytorch/blob/a327e187b778667a574b2997f950c46d73a2c7b6/tools/pyi/gen_pyi.py#L87\r\n\r\nI actually have no idea what is going on with varargs."}