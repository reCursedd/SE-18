{"url": "https://api.github.com/repos/pytorch/pytorch/issues/150", "repository_url": "https://api.github.com/repos/pytorch/pytorch", "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/150/labels{/name}", "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/150/comments", "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/150/events", "html_url": "https://github.com/pytorch/pytorch/issues/150", "id": 184507390, "node_id": "MDU6SXNzdWUxODQ1MDczOTA=", "number": 150, "title": "Consider making potrs support a RHS with a single dimension", "user": {"login": "bamos", "id": 707462, "node_id": "MDQ6VXNlcjcwNzQ2Mg==", "avatar_url": "https://avatars1.githubusercontent.com/u/707462?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bamos", "html_url": "https://github.com/bamos", "followers_url": "https://api.github.com/users/bamos/followers", "following_url": "https://api.github.com/users/bamos/following{/other_user}", "gists_url": "https://api.github.com/users/bamos/gists{/gist_id}", "starred_url": "https://api.github.com/users/bamos/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bamos/subscriptions", "organizations_url": "https://api.github.com/users/bamos/orgs", "repos_url": "https://api.github.com/users/bamos/repos", "events_url": "https://api.github.com/users/bamos/events{/privacy}", "received_events_url": "https://api.github.com/users/bamos/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 424131849, "node_id": "MDU6TGFiZWw0MjQxMzE4NDk=", "url": "https://api.github.com/repos/pytorch/pytorch/labels/enhancement", "name": "enhancement", "color": "84b6eb", "default": true}, {"id": 443484050, "node_id": "MDU6TGFiZWw0NDM0ODQwNTA=", "url": "https://api.github.com/repos/pytorch/pytorch/labels/medium%20priority", "name": "medium priority", "color": "fbca04", "default": false}], "state": "closed", "locked": false, "assignee": {"login": "apaszke", "id": 4583066, "node_id": "MDQ6VXNlcjQ1ODMwNjY=", "avatar_url": "https://avatars3.githubusercontent.com/u/4583066?v=4", "gravatar_id": "", "url": "https://api.github.com/users/apaszke", "html_url": "https://github.com/apaszke", "followers_url": "https://api.github.com/users/apaszke/followers", "following_url": "https://api.github.com/users/apaszke/following{/other_user}", "gists_url": "https://api.github.com/users/apaszke/gists{/gist_id}", "starred_url": "https://api.github.com/users/apaszke/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/apaszke/subscriptions", "organizations_url": "https://api.github.com/users/apaszke/orgs", "repos_url": "https://api.github.com/users/apaszke/repos", "events_url": "https://api.github.com/users/apaszke/events{/privacy}", "received_events_url": "https://api.github.com/users/apaszke/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "apaszke", "id": 4583066, "node_id": "MDQ6VXNlcjQ1ODMwNjY=", "avatar_url": "https://avatars3.githubusercontent.com/u/4583066?v=4", "gravatar_id": "", "url": "https://api.github.com/users/apaszke", "html_url": "https://github.com/apaszke", "followers_url": "https://api.github.com/users/apaszke/followers", "following_url": "https://api.github.com/users/apaszke/following{/other_user}", "gists_url": "https://api.github.com/users/apaszke/gists{/gist_id}", "starred_url": "https://api.github.com/users/apaszke/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/apaszke/subscriptions", "organizations_url": "https://api.github.com/users/apaszke/orgs", "repos_url": "https://api.github.com/users/apaszke/repos", "events_url": "https://api.github.com/users/apaszke/events{/privacy}", "received_events_url": "https://api.github.com/users/apaszke/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 1, "created_at": "2016-10-21T15:00:43Z", "updated_at": "2016-11-03T22:22:28Z", "closed_at": "2016-11-03T22:22:28Z", "author_association": "CONTRIBUTOR", "body_html": "<p>Currently <code>potrs</code> requires a two-dimensional RHS and if I want to solve a system with a single (vector) RHS, I have to explicitly reshape it to be a matrix with a single column.</p>\n<h1>Example</h1>\n<div class=\"highlight highlight-source-python\"><pre><span class=\"pl-c\"><span class=\"pl-c\">#</span>!/usr/bin/env python3</span>\n\n<span class=\"pl-k\">import</span> torch\n\na<span class=\"pl-k\">=</span>torch.Tensor(((<span class=\"pl-c1\">6.80</span>, <span class=\"pl-k\">-</span><span class=\"pl-c1\">2.11</span>,  <span class=\"pl-c1\">5.66</span>,  <span class=\"pl-c1\">5.97</span>,  <span class=\"pl-c1\">8.23</span>),\n                (<span class=\"pl-k\">-</span><span class=\"pl-c1\">6.05</span>, <span class=\"pl-k\">-</span><span class=\"pl-c1\">3.30</span>,  <span class=\"pl-c1\">5.36</span>, <span class=\"pl-k\">-</span><span class=\"pl-c1\">4.44</span>,  <span class=\"pl-c1\">1.08</span>),\n                (<span class=\"pl-k\">-</span><span class=\"pl-c1\">0.45</span>,  <span class=\"pl-c1\">2.58</span>, <span class=\"pl-k\">-</span><span class=\"pl-c1\">2.70</span>,  <span class=\"pl-c1\">0.27</span>,  <span class=\"pl-c1\">9.04</span>),\n                (<span class=\"pl-c1\">8.32</span>,  <span class=\"pl-c1\">2.71</span>,  <span class=\"pl-c1\">4.35</span>, <span class=\"pl-k\">-</span><span class=\"pl-c1\">7.17</span>,  <span class=\"pl-c1\">2.14</span>),\n                (<span class=\"pl-k\">-</span><span class=\"pl-c1\">9.67</span>, <span class=\"pl-k\">-</span><span class=\"pl-c1\">5.14</span>, <span class=\"pl-k\">-</span><span class=\"pl-c1\">7.26</span>,  <span class=\"pl-c1\">6.08</span>, <span class=\"pl-k\">-</span><span class=\"pl-c1\">6.87</span>))).t()\nb<span class=\"pl-k\">=</span>torch.Tensor((<span class=\"pl-c1\">4.02</span>,  <span class=\"pl-c1\">6.19</span>, <span class=\"pl-k\">-</span><span class=\"pl-c1\">8.22</span>, <span class=\"pl-k\">-</span><span class=\"pl-c1\">7.57</span>, <span class=\"pl-k\">-</span><span class=\"pl-c1\">3.03</span>))\n\na <span class=\"pl-k\">=</span> torch.mm(a, a.t())\n\nU <span class=\"pl-k\">=</span> torch.potrf(a)\nx <span class=\"pl-k\">=</span> torch.potrs(b.view(<span class=\"pl-k\">-</span><span class=\"pl-c1\">1</span>,<span class=\"pl-c1\">1</span>), U) <span class=\"pl-c\"><span class=\"pl-c\">#</span> Works.</span>\n<span class=\"pl-c1\">print</span>(x)\nx <span class=\"pl-k\">=</span> torch.potrs(b, U) <span class=\"pl-c\"><span class=\"pl-c\">#</span> Currently doesn't work.</span>\n<span class=\"pl-c1\">print</span>(x)</pre></div>\n<h1>Output</h1>\n<pre><code>tmp$ ./t.py\n\n 0.2385\n-0.4591\n-0.4144\n-0.3046\n 0.0939\n[torch.FloatTensor of size 5x1]\n\nTraceback (most recent call last):\n  File \"./t.py\", line 17, in &lt;module&gt;\n    x = torch.potrs(b, U)\nRuntimeError: inconsistent tensor size at /data/pytorch/pytorch/torch/lib/TH/generic/THTensorCopy.c:7\n</code></pre>", "body_text": "Currently potrs requires a two-dimensional RHS and if I want to solve a system with a single (vector) RHS, I have to explicitly reshape it to be a matrix with a single column.\nExample\n#!/usr/bin/env python3\n\nimport torch\n\na=torch.Tensor(((6.80, -2.11,  5.66,  5.97,  8.23),\n                (-6.05, -3.30,  5.36, -4.44,  1.08),\n                (-0.45,  2.58, -2.70,  0.27,  9.04),\n                (8.32,  2.71,  4.35, -7.17,  2.14),\n                (-9.67, -5.14, -7.26,  6.08, -6.87))).t()\nb=torch.Tensor((4.02,  6.19, -8.22, -7.57, -3.03))\n\na = torch.mm(a, a.t())\n\nU = torch.potrf(a)\nx = torch.potrs(b.view(-1,1), U) # Works.\nprint(x)\nx = torch.potrs(b, U) # Currently doesn't work.\nprint(x)\nOutput\ntmp$ ./t.py\n\n 0.2385\n-0.4591\n-0.4144\n-0.3046\n 0.0939\n[torch.FloatTensor of size 5x1]\n\nTraceback (most recent call last):\n  File \"./t.py\", line 17, in <module>\n    x = torch.potrs(b, U)\nRuntimeError: inconsistent tensor size at /data/pytorch/pytorch/torch/lib/TH/generic/THTensorCopy.c:7", "body": "Currently `potrs` requires a two-dimensional RHS and if I want to solve a system with a single (vector) RHS, I have to explicitly reshape it to be a matrix with a single column.\n# Example\n\n``` python\n#!/usr/bin/env python3\n\nimport torch\n\na=torch.Tensor(((6.80, -2.11,  5.66,  5.97,  8.23),\n                (-6.05, -3.30,  5.36, -4.44,  1.08),\n                (-0.45,  2.58, -2.70,  0.27,  9.04),\n                (8.32,  2.71,  4.35, -7.17,  2.14),\n                (-9.67, -5.14, -7.26,  6.08, -6.87))).t()\nb=torch.Tensor((4.02,  6.19, -8.22, -7.57, -3.03))\n\na = torch.mm(a, a.t())\n\nU = torch.potrf(a)\nx = torch.potrs(b.view(-1,1), U) # Works.\nprint(x)\nx = torch.potrs(b, U) # Currently doesn't work.\nprint(x)\n```\n# Output\n\n```\ntmp$ ./t.py\n\n 0.2385\n-0.4591\n-0.4144\n-0.3046\n 0.0939\n[torch.FloatTensor of size 5x1]\n\nTraceback (most recent call last):\n  File \"./t.py\", line 17, in <module>\n    x = torch.potrs(b, U)\nRuntimeError: inconsistent tensor size at /data/pytorch/pytorch/torch/lib/TH/generic/THTensorCopy.c:7\n```\n"}