{"url": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/210159464", "pull_request_review_id": 146317022, "id": 210159464, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIxMDE1OTQ2NA==", "diff_hunk": "@@ -420,8 +420,14 @@ class OperatorBase : public Observable<OperatorBase> {\n \n // OP_SINGLE_ARG provides a shorter initialization choice for initialization of\n // member variables for the class constructors.\n+// This is a workaround for CUDA9.2 and GCC7\n+#if defined(CUDART_VERSION) && CUDART_VERSION >= 9020 && __GNUC__ >= 7\n+#define OP_SINGLE_ARG(type, name, variable, default)                           \\\n+  variable(this->template GetSingleArgument<type>(name, (default)))", "path": "caffe2/core/operator.h", "position": 7, "original_position": 7, "commit_id": "55a9457da0d00010074d0105b2aa79d7433fd6b0", "original_commit_id": "55a9457da0d00010074d0105b2aa79d7433fd6b0", "user": {"login": "ezyang", "id": 13564, "node_id": "MDQ6VXNlcjEzNTY0", "avatar_url": "https://avatars0.githubusercontent.com/u/13564?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ezyang", "html_url": "https://github.com/ezyang", "followers_url": "https://api.github.com/users/ezyang/followers", "following_url": "https://api.github.com/users/ezyang/following{/other_user}", "gists_url": "https://api.github.com/users/ezyang/gists{/gist_id}", "starred_url": "https://api.github.com/users/ezyang/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ezyang/subscriptions", "organizations_url": "https://api.github.com/users/ezyang/orgs", "repos_url": "https://api.github.com/users/ezyang/repos", "events_url": "https://api.github.com/users/ezyang/events{/privacy}", "received_events_url": "https://api.github.com/users/ezyang/received_events", "type": "User", "site_admin": false}, "body": "Is there any particular reason we couldn't just use this definition unconditionally? It seems like it should be valid for non CUDA9.2+GCC7 configs too.", "created_at": "2018-08-15T02:50:50Z", "updated_at": "2018-11-23T15:49:21Z", "html_url": "https://github.com/pytorch/pytorch/pull/10510#discussion_r210159464", "pull_request_url": "https://api.github.com/repos/pytorch/pytorch/pulls/10510", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/210159464"}, "html": {"href": "https://github.com/pytorch/pytorch/pull/10510#discussion_r210159464"}, "pull_request": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/10510"}}, "body_html": "<p>Is there any particular reason we couldn't just use this definition unconditionally? It seems like it should be valid for non CUDA9.2+GCC7 configs too.</p>", "body_text": "Is there any particular reason we couldn't just use this definition unconditionally? It seems like it should be valid for non CUDA9.2+GCC7 configs too."}