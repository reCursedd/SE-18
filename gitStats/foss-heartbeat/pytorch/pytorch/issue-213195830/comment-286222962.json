{"url": "https://api.github.com/repos/pytorch/pytorch/issues/comments/286222962", "html_url": "https://github.com/pytorch/pytorch/issues/967#issuecomment-286222962", "issue_url": "https://api.github.com/repos/pytorch/pytorch/issues/967", "id": 286222962, "node_id": "MDEyOklzc3VlQ29tbWVudDI4NjIyMjk2Mg==", "user": {"login": "skaae", "id": 2623134, "node_id": "MDQ6VXNlcjI2MjMxMzQ=", "avatar_url": "https://avatars2.githubusercontent.com/u/2623134?v=4", "gravatar_id": "", "url": "https://api.github.com/users/skaae", "html_url": "https://github.com/skaae", "followers_url": "https://api.github.com/users/skaae/followers", "following_url": "https://api.github.com/users/skaae/following{/other_user}", "gists_url": "https://api.github.com/users/skaae/gists{/gist_id}", "starred_url": "https://api.github.com/users/skaae/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/skaae/subscriptions", "organizations_url": "https://api.github.com/users/skaae/orgs", "repos_url": "https://api.github.com/users/skaae/repos", "events_url": "https://api.github.com/users/skaae/events{/privacy}", "received_events_url": "https://api.github.com/users/skaae/received_events", "type": "User", "site_admin": false}, "created_at": "2017-03-13T19:50:28Z", "updated_at": "2017-03-13T19:50:28Z", "author_association": "NONE", "body_html": "<div class=\"email-fragment\">I haven recompiled, so that i propbably the problem. I cant. Find any cudnn\ninfo. Should i compile pytorch from source with cudnn in LD_LIBRARY_PATH?\n\nThanks for looking into this.</div>\n<span class=\"email-hidden-toggle\"><a href=\"#\">\u2026</a></span><div class=\"email-hidden-reply\">\n<div class=\"email-quoted-reply\">On 10 Mar 2017 6:02 p.m., \"ngimel\" ***@***.***&gt; wrote:\n Here's output and nvprof output from your snippet on GTX 1080 (I've sent\n 2d convolutions to the GPU, because they were not on the GPU, and changed\n ranges to range(2,10) to run dilated cases only. Cudnn is used for dilated\n convs as shown in the profiler output, and no errors are raised. Have you\n recompiled pytorch after updating to cudnn v6? I believe it is necessary.\n\n ==400== NVPROF is profiling process 400, command: python conv1d_dilated.py\n True\n CUDNN  VERSION 6005\n dilation OK     2\n dilation OK     3\n dilation OK     4\n dilation OK     5\n dilation OK     6\n dilation OK     7\n dilation OK     8\n dilation OK     9\n dilation OK     2\n dilation OK     3\n dilation OK     4\n dilation OK     5\n dilation OK     6\n dilation OK     7\n dilation OK     8\n dilation OK     9\n ==400== Profiling application: python conv1d_dilated.py\n ==400== Profiling result:\n Time(%)      Time     Calls       Avg       Min       Max  Name\n  46.24%  5.0703ms         7  724.33us  498.86us  1.0062ms  void cudnn::detail::implicit_convolve_sgemm&lt;float, int=1024, int=5, int=5, int=3, int=3, int=3, int=1, bool=1, bool=0, bool=0&gt;(int, int, int, float const *, int, cudnn::detail::implicit_convolve_sgemm&lt;float, int=1024, int=5, int=5, int=3, int=3, int=3, int=1, bool=1, bool=0, bool=0&gt;*, float const *, kernel_conv_params, int, float, float, int, float const *, float const *, int, int)\n  39.50%  4.3313ms        52  83.295us     640ns  537.52us  [CUDA memcpy HtoD]\n   8.87%  973.05us        10  97.305us  12.161us  846.01us  void cudnn::detail::implicit_convolve_sgemm&lt;float, int=128, int=5, int=5, int=3, int=3, int=3, int=1, bool=1, bool=0, bool=0&gt;(int, int, int, float const *, int, cudnn::detail::implicit_convolve_sgemm&lt;float, int=128, int=5, int=5, int=3, int=3, int=3, int=1, bool=1, bool=0, bool=0&gt;*, float const *, kernel_conv_params, int, float, float, int, float const *, float const *, int, int)\n   5.19%  568.81us         8  71.101us  46.945us  98.082us  void add_tensor_kernel_v3&lt;int=2, float, float, int=128, int=1, int=1, int=4, int=2&gt;(cudnnTensorStruct, float*, cudnnTensorStruct, float const *, float, float)\n   0.21%  22.657us         9  2.5170us  2.1120us  3.1370us  void add_tensor_kernel_v3&lt;int=2, float, float, int=32, int=1, int=4, int=2, int=2&gt;(cudnnTensorStruct, float*, cudnnTensorStruct, float const *, float, float)\n\n \u2014\n You are receiving this because you authored the thread.\n Reply to this email directly, view it on GitHub\n &lt;<a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load issue title\" data-id=\"213195830\" data-permission-text=\"Issue title is private\" data-url=\"https://github.com/pytorch/pytorch/issues/967\" href=\"https://github.com/pytorch/pytorch/issues/967#issuecomment-285724590\">#967 (comment)</a>&gt;,\n or mute the thread\n &lt;<a href=\"https://github.com/notifications/unsubscribe-auth/ACgGnmyoFCEdcs-aAOnwhFZ5OvrslIOAks5rkYILgaJpZM4MYwuc\">https://github.com/notifications/unsubscribe-auth/ACgGnmyoFCEdcs-aAOnwhFZ5OvrslIOAks5rkYILgaJpZM4MYwuc</a>&gt;\n .\n</div>\n<div class=\"email-fragment\"></div>\n</div>", "body_text": "I haven recompiled, so that i propbably the problem. I cant. Find any cudnn\ninfo. Should i compile pytorch from source with cudnn in LD_LIBRARY_PATH?\n\nThanks for looking into this.\n\u2026\nOn 10 Mar 2017 6:02 p.m., \"ngimel\" ***@***.***> wrote:\n Here's output and nvprof output from your snippet on GTX 1080 (I've sent\n 2d convolutions to the GPU, because they were not on the GPU, and changed\n ranges to range(2,10) to run dilated cases only. Cudnn is used for dilated\n convs as shown in the profiler output, and no errors are raised. Have you\n recompiled pytorch after updating to cudnn v6? I believe it is necessary.\n\n ==400== NVPROF is profiling process 400, command: python conv1d_dilated.py\n True\n CUDNN  VERSION 6005\n dilation OK     2\n dilation OK     3\n dilation OK     4\n dilation OK     5\n dilation OK     6\n dilation OK     7\n dilation OK     8\n dilation OK     9\n dilation OK     2\n dilation OK     3\n dilation OK     4\n dilation OK     5\n dilation OK     6\n dilation OK     7\n dilation OK     8\n dilation OK     9\n ==400== Profiling application: python conv1d_dilated.py\n ==400== Profiling result:\n Time(%)      Time     Calls       Avg       Min       Max  Name\n  46.24%  5.0703ms         7  724.33us  498.86us  1.0062ms  void cudnn::detail::implicit_convolve_sgemm<float, int=1024, int=5, int=5, int=3, int=3, int=3, int=1, bool=1, bool=0, bool=0>(int, int, int, float const *, int, cudnn::detail::implicit_convolve_sgemm<float, int=1024, int=5, int=5, int=3, int=3, int=3, int=1, bool=1, bool=0, bool=0>*, float const *, kernel_conv_params, int, float, float, int, float const *, float const *, int, int)\n  39.50%  4.3313ms        52  83.295us     640ns  537.52us  [CUDA memcpy HtoD]\n   8.87%  973.05us        10  97.305us  12.161us  846.01us  void cudnn::detail::implicit_convolve_sgemm<float, int=128, int=5, int=5, int=3, int=3, int=3, int=1, bool=1, bool=0, bool=0>(int, int, int, float const *, int, cudnn::detail::implicit_convolve_sgemm<float, int=128, int=5, int=5, int=3, int=3, int=3, int=1, bool=1, bool=0, bool=0>*, float const *, kernel_conv_params, int, float, float, int, float const *, float const *, int, int)\n   5.19%  568.81us         8  71.101us  46.945us  98.082us  void add_tensor_kernel_v3<int=2, float, float, int=128, int=1, int=1, int=4, int=2>(cudnnTensorStruct, float*, cudnnTensorStruct, float const *, float, float)\n   0.21%  22.657us         9  2.5170us  2.1120us  3.1370us  void add_tensor_kernel_v3<int=2, float, float, int=32, int=1, int=4, int=2, int=2>(cudnnTensorStruct, float*, cudnnTensorStruct, float const *, float, float)\n\n \u2014\n You are receiving this because you authored the thread.\n Reply to this email directly, view it on GitHub\n <#967 (comment)>,\n or mute the thread\n <https://github.com/notifications/unsubscribe-auth/ACgGnmyoFCEdcs-aAOnwhFZ5OvrslIOAks5rkYILgaJpZM4MYwuc>\n .", "body": "I haven recompiled, so that i propbably the problem. I cant. Find any cudnn\ninfo. Should i compile pytorch from source with cudnn in LD_LIBRARY_PATH?\n\nThanks for looking into this.\n\nOn 10 Mar 2017 6:02 p.m., \"ngimel\" <notifications@github.com> wrote:\n\n> Here's output and nvprof output from your snippet on GTX 1080 (I've sent\n> 2d convolutions to the GPU, because they were not on the GPU, and changed\n> ranges to range(2,10) to run dilated cases only. Cudnn is used for dilated\n> convs as shown in the profiler output, and no errors are raised. Have you\n> recompiled pytorch after updating to cudnn v6? I believe it is necessary.\n>\n> ==400== NVPROF is profiling process 400, command: python conv1d_dilated.py\n> True\n> CUDNN  VERSION 6005\n> dilation OK     2\n> dilation OK     3\n> dilation OK     4\n> dilation OK     5\n> dilation OK     6\n> dilation OK     7\n> dilation OK     8\n> dilation OK     9\n> dilation OK     2\n> dilation OK     3\n> dilation OK     4\n> dilation OK     5\n> dilation OK     6\n> dilation OK     7\n> dilation OK     8\n> dilation OK     9\n> ==400== Profiling application: python conv1d_dilated.py\n> ==400== Profiling result:\n> Time(%)      Time     Calls       Avg       Min       Max  Name\n>  46.24%  5.0703ms         7  724.33us  498.86us  1.0062ms  void cudnn::detail::implicit_convolve_sgemm<float, int=1024, int=5, int=5, int=3, int=3, int=3, int=1, bool=1, bool=0, bool=0>(int, int, int, float const *, int, cudnn::detail::implicit_convolve_sgemm<float, int=1024, int=5, int=5, int=3, int=3, int=3, int=1, bool=1, bool=0, bool=0>*, float const *, kernel_conv_params, int, float, float, int, float const *, float const *, int, int)\n>  39.50%  4.3313ms        52  83.295us     640ns  537.52us  [CUDA memcpy HtoD]\n>   8.87%  973.05us        10  97.305us  12.161us  846.01us  void cudnn::detail::implicit_convolve_sgemm<float, int=128, int=5, int=5, int=3, int=3, int=3, int=1, bool=1, bool=0, bool=0>(int, int, int, float const *, int, cudnn::detail::implicit_convolve_sgemm<float, int=128, int=5, int=5, int=3, int=3, int=3, int=1, bool=1, bool=0, bool=0>*, float const *, kernel_conv_params, int, float, float, int, float const *, float const *, int, int)\n>   5.19%  568.81us         8  71.101us  46.945us  98.082us  void add_tensor_kernel_v3<int=2, float, float, int=128, int=1, int=1, int=4, int=2>(cudnnTensorStruct, float*, cudnnTensorStruct, float const *, float, float)\n>   0.21%  22.657us         9  2.5170us  2.1120us  3.1370us  void add_tensor_kernel_v3<int=2, float, float, int=32, int=1, int=4, int=2, int=2>(cudnnTensorStruct, float*, cudnnTensorStruct, float const *, float, float)\n>\n> \u2014\n> You are receiving this because you authored the thread.\n> Reply to this email directly, view it on GitHub\n> <https://github.com/pytorch/pytorch/issues/967#issuecomment-285724590>,\n> or mute the thread\n> <https://github.com/notifications/unsubscribe-auth/ACgGnmyoFCEdcs-aAOnwhFZ5OvrslIOAks5rkYILgaJpZM4MYwuc>\n> .\n>\n"}