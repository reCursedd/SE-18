{"url": "https://api.github.com/repos/pytorch/pytorch/issues/comments/275775085", "html_url": "https://github.com/pytorch/pytorch/issues/607#issuecomment-275775085", "issue_url": "https://api.github.com/repos/pytorch/pytorch/issues/607", "id": 275775085, "node_id": "MDEyOklzc3VlQ29tbWVudDI3NTc3NTA4NQ==", "user": {"login": "emanjavacas", "id": 6195107, "node_id": "MDQ6VXNlcjYxOTUxMDc=", "avatar_url": "https://avatars1.githubusercontent.com/u/6195107?v=4", "gravatar_id": "", "url": "https://api.github.com/users/emanjavacas", "html_url": "https://github.com/emanjavacas", "followers_url": "https://api.github.com/users/emanjavacas/followers", "following_url": "https://api.github.com/users/emanjavacas/following{/other_user}", "gists_url": "https://api.github.com/users/emanjavacas/gists{/gist_id}", "starred_url": "https://api.github.com/users/emanjavacas/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/emanjavacas/subscriptions", "organizations_url": "https://api.github.com/users/emanjavacas/orgs", "repos_url": "https://api.github.com/users/emanjavacas/repos", "events_url": "https://api.github.com/users/emanjavacas/events{/privacy}", "received_events_url": "https://api.github.com/users/emanjavacas/received_events", "type": "User", "site_admin": false}, "created_at": "2017-01-27T21:09:02Z", "updated_at": "2017-01-27T21:09:02Z", "author_association": "NONE", "body_html": "<p>I see. I am not sure about the philosophy behind pytorch (is it more oriented towards research/academy, does it prioritize simplicity vs. batteries-included APIs? etc.), but I could imagine it being handy to have different standard options pre-implemented in the python API - the way, for instance, Lasagne, does. That'd be very convenient for people working in research, where you would like to quickly check some variations on the implementation. In this case, it could then be mentioned that using this particular merge function would result in a slower model when running on the GPU (if I understand correctly).</p>\n<p>Of course, this is just my two pennies; that is, input from the API user perspective.</p>", "body_text": "I see. I am not sure about the philosophy behind pytorch (is it more oriented towards research/academy, does it prioritize simplicity vs. batteries-included APIs? etc.), but I could imagine it being handy to have different standard options pre-implemented in the python API - the way, for instance, Lasagne, does. That'd be very convenient for people working in research, where you would like to quickly check some variations on the implementation. In this case, it could then be mentioned that using this particular merge function would result in a slower model when running on the GPU (if I understand correctly).\nOf course, this is just my two pennies; that is, input from the API user perspective.", "body": "I see. I am not sure about the philosophy behind pytorch (is it more oriented towards research/academy, does it prioritize simplicity vs. batteries-included APIs? etc.), but I could imagine it being handy to have different standard options pre-implemented in the python API - the way, for instance, Lasagne, does. That'd be very convenient for people working in research, where you would like to quickly check some variations on the implementation. In this case, it could then be mentioned that using this particular merge function would result in a slower model when running on the GPU (if I understand correctly).\r\n\r\nOf course, this is just my two pennies; that is, input from the API user perspective. "}