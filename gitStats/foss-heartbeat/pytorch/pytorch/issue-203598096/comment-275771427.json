{"url": "https://api.github.com/repos/pytorch/pytorch/issues/comments/275771427", "html_url": "https://github.com/pytorch/pytorch/issues/607#issuecomment-275771427", "issue_url": "https://api.github.com/repos/pytorch/pytorch/issues/607", "id": 275771427, "node_id": "MDEyOklzc3VlQ29tbWVudDI3NTc3MTQyNw==", "user": {"login": "apaszke", "id": 4583066, "node_id": "MDQ6VXNlcjQ1ODMwNjY=", "avatar_url": "https://avatars3.githubusercontent.com/u/4583066?v=4", "gravatar_id": "", "url": "https://api.github.com/users/apaszke", "html_url": "https://github.com/apaszke", "followers_url": "https://api.github.com/users/apaszke/followers", "following_url": "https://api.github.com/users/apaszke/following{/other_user}", "gists_url": "https://api.github.com/users/apaszke/gists{/gist_id}", "starred_url": "https://api.github.com/users/apaszke/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/apaszke/subscriptions", "organizations_url": "https://api.github.com/users/apaszke/orgs", "repos_url": "https://api.github.com/users/apaszke/repos", "events_url": "https://api.github.com/users/apaszke/events{/privacy}", "received_events_url": "https://api.github.com/users/apaszke/received_events", "type": "User", "site_admin": false}, "created_at": "2017-01-27T20:51:52Z", "updated_at": "2017-01-27T20:51:52Z", "author_association": "MEMBER", "body_html": "<p>Ah I see. I think there's no good way to do that. For example when you use CUDA we'll use cuDNN that requires the output to be a big tensor, and it will fill it in parallel, as it computes multiple steps at a time. So we'd have to do the sum in a different op anyway, but it's the same as if you did it yourself.</p>", "body_text": "Ah I see. I think there's no good way to do that. For example when you use CUDA we'll use cuDNN that requires the output to be a big tensor, and it will fill it in parallel, as it computes multiple steps at a time. So we'd have to do the sum in a different op anyway, but it's the same as if you did it yourself.", "body": "Ah I see. I think there's no good way to do that. For example when you use CUDA we'll use cuDNN that requires the output to be a big tensor, and it will fill it in parallel, as it computes multiple steps at a time. So we'd have to do the sum in a different op anyway, but it's the same as if you did it yourself."}