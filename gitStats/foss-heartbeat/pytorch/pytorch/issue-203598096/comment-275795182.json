{"url": "https://api.github.com/repos/pytorch/pytorch/issues/comments/275795182", "html_url": "https://github.com/pytorch/pytorch/issues/607#issuecomment-275795182", "issue_url": "https://api.github.com/repos/pytorch/pytorch/issues/607", "id": 275795182, "node_id": "MDEyOklzc3VlQ29tbWVudDI3NTc5NTE4Mg==", "user": {"login": "SeanNaren", "id": 6707363, "node_id": "MDQ6VXNlcjY3MDczNjM=", "avatar_url": "https://avatars0.githubusercontent.com/u/6707363?v=4", "gravatar_id": "", "url": "https://api.github.com/users/SeanNaren", "html_url": "https://github.com/SeanNaren", "followers_url": "https://api.github.com/users/SeanNaren/followers", "following_url": "https://api.github.com/users/SeanNaren/following{/other_user}", "gists_url": "https://api.github.com/users/SeanNaren/gists{/gist_id}", "starred_url": "https://api.github.com/users/SeanNaren/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/SeanNaren/subscriptions", "organizations_url": "https://api.github.com/users/SeanNaren/orgs", "repos_url": "https://api.github.com/users/SeanNaren/repos", "events_url": "https://api.github.com/users/SeanNaren/events{/privacy}", "received_events_url": "https://api.github.com/users/SeanNaren/received_events", "type": "User", "site_admin": false}, "created_at": "2017-01-27T22:44:01Z", "updated_at": "2017-01-27T22:44:01Z", "author_association": "CONTRIBUTOR", "body_html": "<p>The way I handle this is by making each RNN layer of size 1, and using this after each BRNN:</p>\n<div class=\"highlight highlight-source-python\"><pre> <span class=\"pl-c\"><span class=\"pl-c\">#</span> (TxNxD*2) -&gt; (TxNxD) by sum</span>\n<span class=\"pl-k\">if</span> <span class=\"pl-c1\">self</span>.bidirectional:\n     x <span class=\"pl-k\">=</span> x.view(x.size(<span class=\"pl-c1\">0</span>), x.size(<span class=\"pl-c1\">1</span>), <span class=\"pl-c1\">2</span>, <span class=\"pl-k\">-</span><span class=\"pl-c1\">1</span>).sum(<span class=\"pl-c1\">2</span>).view(x.size(<span class=\"pl-c1\">0</span>), x.size(<span class=\"pl-c1\">1</span>), <span class=\"pl-k\">-</span><span class=\"pl-c1\">1</span>) </pre></div>\n<p>Not as simple as just taking the output of the BRNN but hopefully that helps...</p>", "body_text": "The way I handle this is by making each RNN layer of size 1, and using this after each BRNN:\n # (TxNxD*2) -> (TxNxD) by sum\nif self.bidirectional:\n     x = x.view(x.size(0), x.size(1), 2, -1).sum(2).view(x.size(0), x.size(1), -1) \nNot as simple as just taking the output of the BRNN but hopefully that helps...", "body": "The way I handle this is by making each RNN layer of size 1, and using this after each BRNN:\r\n\r\n```python\r\n # (TxNxD*2) -> (TxNxD) by sum\r\nif self.bidirectional:\r\n     x = x.view(x.size(0), x.size(1), 2, -1).sum(2).view(x.size(0), x.size(1), -1) \r\n```\r\nNot as simple as just taking the output of the BRNN but hopefully that helps..."}