{"url": "https://api.github.com/repos/pytorch/pytorch/issues/607", "repository_url": "https://api.github.com/repos/pytorch/pytorch", "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/607/labels{/name}", "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/607/comments", "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/607/events", "html_url": "https://github.com/pytorch/pytorch/issues/607", "id": 203598096, "node_id": "MDU6SXNzdWUyMDM1OTgwOTY=", "number": 607, "title": "LSTM output dimensions", "user": {"login": "emanjavacas", "id": 6195107, "node_id": "MDQ6VXNlcjYxOTUxMDc=", "avatar_url": "https://avatars1.githubusercontent.com/u/6195107?v=4", "gravatar_id": "", "url": "https://api.github.com/users/emanjavacas", "html_url": "https://github.com/emanjavacas", "followers_url": "https://api.github.com/users/emanjavacas/followers", "following_url": "https://api.github.com/users/emanjavacas/following{/other_user}", "gists_url": "https://api.github.com/users/emanjavacas/gists{/gist_id}", "starred_url": "https://api.github.com/users/emanjavacas/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/emanjavacas/subscriptions", "organizations_url": "https://api.github.com/users/emanjavacas/orgs", "repos_url": "https://api.github.com/users/emanjavacas/repos", "events_url": "https://api.github.com/users/emanjavacas/events{/privacy}", "received_events_url": "https://api.github.com/users/emanjavacas/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 424131849, "node_id": "MDU6TGFiZWw0MjQxMzE4NDk=", "url": "https://api.github.com/repos/pytorch/pytorch/labels/enhancement", "name": "enhancement", "color": "84b6eb", "default": true}, {"id": 443484135, "node_id": "MDU6TGFiZWw0NDM0ODQxMzU=", "url": "https://api.github.com/repos/pytorch/pytorch/labels/high%20priority", "name": "high priority", "color": "F22613", "default": false}], "state": "closed", "locked": false, "assignee": {"login": "apaszke", "id": 4583066, "node_id": "MDQ6VXNlcjQ1ODMwNjY=", "avatar_url": "https://avatars3.githubusercontent.com/u/4583066?v=4", "gravatar_id": "", "url": "https://api.github.com/users/apaszke", "html_url": "https://github.com/apaszke", "followers_url": "https://api.github.com/users/apaszke/followers", "following_url": "https://api.github.com/users/apaszke/following{/other_user}", "gists_url": "https://api.github.com/users/apaszke/gists{/gist_id}", "starred_url": "https://api.github.com/users/apaszke/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/apaszke/subscriptions", "organizations_url": "https://api.github.com/users/apaszke/orgs", "repos_url": "https://api.github.com/users/apaszke/repos", "events_url": "https://api.github.com/users/apaszke/events{/privacy}", "received_events_url": "https://api.github.com/users/apaszke/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "apaszke", "id": 4583066, "node_id": "MDQ6VXNlcjQ1ODMwNjY=", "avatar_url": "https://avatars3.githubusercontent.com/u/4583066?v=4", "gravatar_id": "", "url": "https://api.github.com/users/apaszke", "html_url": "https://github.com/apaszke", "followers_url": "https://api.github.com/users/apaszke/followers", "following_url": "https://api.github.com/users/apaszke/following{/other_user}", "gists_url": "https://api.github.com/users/apaszke/gists{/gist_id}", "starred_url": "https://api.github.com/users/apaszke/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/apaszke/subscriptions", "organizations_url": "https://api.github.com/users/apaszke/orgs", "repos_url": "https://api.github.com/users/apaszke/repos", "events_url": "https://api.github.com/users/apaszke/events{/privacy}", "received_events_url": "https://api.github.com/users/apaszke/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 6, "created_at": "2017-01-27T10:11:10Z", "updated_at": "2017-01-29T10:39:34Z", "closed_at": "2017-01-29T10:39:34Z", "author_association": "NONE", "body_html": "<p>According to the docs nn.LSTM outputs:</p>\n<pre><code>output : A (seq_len x batch x hidden_size) tensor containing the output features (h_t) from the last layer of the RNN, for each t\nh_n : A (num_layers x batch x hidden_size) tensor containing the hidden state for t=seq_len\nc_n : A (num_layers x batch x hidden_size) tensor containing the cell state for t=seq_len\n</code></pre>\n<p>However, if the LSTM is initialized as a bidirectional LSTM what you get is:</p>\n<pre><code>output : A (seq_len x batch x hidden_size * num_directions) tensor containing the output features (h_t) from the last layer of the RNN, for each t\nh_n : A (num_layers * num_directions x batch x hidden_size) tensor containing the hidden state for t=seq_len\nc_n : A (num_layers * num_directions x batch x hidden_size) tensor containing the cell state for t=seq_len\n</code></pre>\n<p>It'd be nice to make this explicit in the docs.<br>\nAlso, I was wondering if the default concatenatin behaviour can be tweaked (to merging, for instance)?<br>\nThese would all be nice features to have.</p>", "body_text": "According to the docs nn.LSTM outputs:\noutput : A (seq_len x batch x hidden_size) tensor containing the output features (h_t) from the last layer of the RNN, for each t\nh_n : A (num_layers x batch x hidden_size) tensor containing the hidden state for t=seq_len\nc_n : A (num_layers x batch x hidden_size) tensor containing the cell state for t=seq_len\n\nHowever, if the LSTM is initialized as a bidirectional LSTM what you get is:\noutput : A (seq_len x batch x hidden_size * num_directions) tensor containing the output features (h_t) from the last layer of the RNN, for each t\nh_n : A (num_layers * num_directions x batch x hidden_size) tensor containing the hidden state for t=seq_len\nc_n : A (num_layers * num_directions x batch x hidden_size) tensor containing the cell state for t=seq_len\n\nIt'd be nice to make this explicit in the docs.\nAlso, I was wondering if the default concatenatin behaviour can be tweaked (to merging, for instance)?\nThese would all be nice features to have.", "body": "According to the docs nn.LSTM outputs:\r\n\r\n```\r\noutput : A (seq_len x batch x hidden_size) tensor containing the output features (h_t) from the last layer of the RNN, for each t\r\nh_n : A (num_layers x batch x hidden_size) tensor containing the hidden state for t=seq_len\r\nc_n : A (num_layers x batch x hidden_size) tensor containing the cell state for t=seq_len\r\n```\r\n\r\nHowever, if the LSTM is initialized as a bidirectional LSTM what you get is:\r\n\r\n```\r\noutput : A (seq_len x batch x hidden_size * num_directions) tensor containing the output features (h_t) from the last layer of the RNN, for each t\r\nh_n : A (num_layers * num_directions x batch x hidden_size) tensor containing the hidden state for t=seq_len\r\nc_n : A (num_layers * num_directions x batch x hidden_size) tensor containing the cell state for t=seq_len\r\n```\r\n\r\nIt'd be nice to make this explicit in the docs.\r\nAlso, I was wondering if the default concatenatin behaviour can be tweaked (to merging, for instance)?\r\nThese would all be nice features to have."}