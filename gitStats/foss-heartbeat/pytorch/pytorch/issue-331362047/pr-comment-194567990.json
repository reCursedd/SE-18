{"url": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/194567990", "pull_request_review_id": 127765886, "id": 194567990, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5NDU2Nzk5MA==", "diff_hunk": "@@ -87,97 +122,82 @@ struct TypeNameRegisterer {\n  */\n class TypeMeta {\n  public:\n-  typedef void (*PlacementNew)(void*, size_t);\n-  typedef void (*TypedCopy)(const void*, void*, size_t);\n-  typedef void (*TypedDestructor)(void*, size_t);\n+  using PlacementNew = void (void*, size_t);\n+  using TypedCopy = void (const void*, void*, size_t);\n+  using TypedDestructor = void (void*, size_t);\n   /** Create a dummy TypeMeta object. To create a TypeMeta object for a specific\n    * type, use TypeMeta::Make<T>().\n    */\n-  TypeMeta()\n+  TypeMeta() noexcept\n       : id_(0), itemsize_(0), ctor_(nullptr), copy_(nullptr), dtor_(nullptr) {}\n \n   /**\n    * Copy constructor.\n    */\n-  TypeMeta(const TypeMeta& src)\n-      : id_(src.id_),\n-        itemsize_(src.itemsize_),\n-        ctor_(src.ctor_),\n-        copy_(src.copy_),\n-        dtor_(src.dtor_) {}\n+  TypeMeta(const TypeMeta& src) noexcept = default;\n+\n   /**\n    * Assignment operator.\n    */\n-  TypeMeta& operator=(const TypeMeta& src) {\n-    if (this == &src)\n-      return *this;\n-    id_ = src.id_;\n-    itemsize_ = src.itemsize_;\n-    ctor_ = src.ctor_;\n-    copy_ = src.copy_;\n-    dtor_ = src.dtor_;\n-    return *this;\n-  }\n+  TypeMeta& operator=(const TypeMeta& src) noexcept = default;\n+\n+  TypeMeta(TypeMeta &&rhs) noexcept = default;\n \n  private:\n   // TypeMeta can only be created by Make, making sure that we do not\n   // create incorrectly mixed up TypeMeta objects.\n   TypeMeta(\n-      CaffeTypeId i,\n+      TypeId i,\n       size_t s,\n-      PlacementNew ctor,\n-      TypedCopy copy,\n-      TypedDestructor dtor)\n-      : id_(i), itemsize_(s), ctor_(ctor), copy_(copy), dtor_(dtor) {}\n+      PlacementNew* ctor__,", "path": "caffe2/core/typeid.h", "position": null, "original_position": 165, "commit_id": "d979b9eac0ccd6c0de98cf43cb43548f9bfc887f", "original_commit_id": "0f9ba8e29be16ec32f47a6bd9382a9d72517f181", "user": {"login": "smessmer", "id": 2373925, "node_id": "MDQ6VXNlcjIzNzM5MjU=", "avatar_url": "https://avatars3.githubusercontent.com/u/2373925?v=4", "gravatar_id": "", "url": "https://api.github.com/users/smessmer", "html_url": "https://github.com/smessmer", "followers_url": "https://api.github.com/users/smessmer/followers", "following_url": "https://api.github.com/users/smessmer/following{/other_user}", "gists_url": "https://api.github.com/users/smessmer/gists{/gist_id}", "starred_url": "https://api.github.com/users/smessmer/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/smessmer/subscriptions", "organizations_url": "https://api.github.com/users/smessmer/orgs", "repos_url": "https://api.github.com/users/smessmer/repos", "events_url": "https://api.github.com/users/smessmer/events{/privacy}", "received_events_url": "https://api.github.com/users/smessmer/received_events", "type": "User", "site_admin": false}, "body": "this was mostly to silence shadowing warnings, but I think it makes sense to disable the warning instead. Will rename this back.", "created_at": "2018-06-11T22:32:26Z", "updated_at": "2018-11-23T15:45:20Z", "html_url": "https://github.com/pytorch/pytorch/pull/8350#discussion_r194567990", "pull_request_url": "https://api.github.com/repos/pytorch/pytorch/pulls/8350", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/194567990"}, "html": {"href": "https://github.com/pytorch/pytorch/pull/8350#discussion_r194567990"}, "pull_request": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/8350"}}, "body_html": "<p>this was mostly to silence shadowing warnings, but I think it makes sense to disable the warning instead. Will rename this back.</p>", "body_text": "this was mostly to silence shadowing warnings, but I think it makes sense to disable the warning instead. Will rename this back.", "in_reply_to_id": 194566693}