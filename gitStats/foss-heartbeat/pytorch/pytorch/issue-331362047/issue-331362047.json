{"url": "https://api.github.com/repos/pytorch/pytorch/issues/8350", "repository_url": "https://api.github.com/repos/pytorch/pytorch", "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/8350/labels{/name}", "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/8350/comments", "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/8350/events", "html_url": "https://github.com/pytorch/pytorch/pull/8350", "id": 331362047, "node_id": "MDExOlB1bGxSZXF1ZXN0MTk0MTEyMzc4", "number": 8350, "title": "TypeId improvements", "user": {"login": "smessmer", "id": 2373925, "node_id": "MDQ6VXNlcjIzNzM5MjU=", "avatar_url": "https://avatars3.githubusercontent.com/u/2373925?v=4", "gravatar_id": "", "url": "https://api.github.com/users/smessmer", "html_url": "https://github.com/smessmer", "followers_url": "https://api.github.com/users/smessmer/followers", "following_url": "https://api.github.com/users/smessmer/following{/other_user}", "gists_url": "https://api.github.com/users/smessmer/gists{/gist_id}", "starred_url": "https://api.github.com/users/smessmer/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/smessmer/subscriptions", "organizations_url": "https://api.github.com/users/smessmer/orgs", "repos_url": "https://api.github.com/users/smessmer/repos", "events_url": "https://api.github.com/users/smessmer/events{/privacy}", "received_events_url": "https://api.github.com/users/smessmer/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 890282107, "node_id": "MDU6TGFiZWw4OTAyODIxMDc=", "url": "https://api.github.com/repos/pytorch/pytorch/labels/caffe2", "name": "caffe2", "color": "210aa8", "default": false}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 13, "created_at": "2018-06-11T21:46:32Z", "updated_at": "2018-11-23T15:45:28Z", "closed_at": "2018-06-14T16:16:27Z", "author_association": "CONTRIBUTOR", "pull_request": {"url": "https://api.github.com/repos/pytorch/pytorch/pulls/8350", "html_url": "https://github.com/pytorch/pytorch/pull/8350", "diff_url": "https://github.com/pytorch/pytorch/pull/8350.diff", "patch_url": "https://github.com/pytorch/pytorch/pull/8350.patch"}, "body_html": "<ul>\n<li>move it to c10 namespace to allow for easy extraction from caffe2 into c10 (for reusability from aten)</li>\n<li>Use unordered_map/unordered_set instead of map/set</li>\n<li>Make TypeId a type safe class (i.e. no implicit casts from/to int)</li>\n<li>Make TypeId constexpr</li>\n<li>Some readability improvements (e.g. using instead of typedef)</li>\n<li>Don't explicitly implement TypeMeta copy assignment and construction - let the compiler do that for us.</li>\n<li>Add TypeMeta move constructor</li>\n<li>Make TypeMeta members noexcept</li>\n<li>Implement TypeMeta::operator== and operator!= as free functions instead of in-class</li>\n</ul>", "body_text": "move it to c10 namespace to allow for easy extraction from caffe2 into c10 (for reusability from aten)\nUse unordered_map/unordered_set instead of map/set\nMake TypeId a type safe class (i.e. no implicit casts from/to int)\nMake TypeId constexpr\nSome readability improvements (e.g. using instead of typedef)\nDon't explicitly implement TypeMeta copy assignment and construction - let the compiler do that for us.\nAdd TypeMeta move constructor\nMake TypeMeta members noexcept\nImplement TypeMeta::operator== and operator!= as free functions instead of in-class", "body": "- move it to c10 namespace to allow for easy extraction from caffe2 into c10 (for reusability from aten)\r\n- Use unordered_map/unordered_set instead of map/set\r\n- Make TypeId a type safe class (i.e. no implicit casts from/to int)\r\n- Make TypeId constexpr\r\n- Some readability improvements (e.g. using instead of typedef)\r\n- Don't explicitly implement TypeMeta copy assignment and construction - let the compiler do that for us.\r\n- Add TypeMeta move constructor\r\n- Make TypeMeta members noexcept\r\n- Implement TypeMeta::operator== and operator!= as free functions instead of in-class\r\n\r\n"}