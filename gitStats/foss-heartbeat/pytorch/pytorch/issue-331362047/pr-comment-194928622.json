{"url": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/194928622", "pull_request_review_id": 128195440, "id": 194928622, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5NDkyODYyMg==", "diff_hunk": "@@ -352,25 +379,38 @@ class TypeMeta {\n // and as a result, we define these two macros slightly differently.\n \n #ifdef _MSC_VER\n-#define CAFFE_KNOWN_TYPE(T)                              \\\n-  template <>                                            \\\n-  CAFFE2_EXPORT CaffeTypeId TypeMeta::Id<T>() {          \\\n-    static bool type_id_bit[1];                          \\\n-    static TypeNameRegisterer<T> registerer(             \\\n-        reinterpret_cast<CaffeTypeId>(type_id_bit), #T); \\\n-    return reinterpret_cast<CaffeTypeId>(type_id_bit);   \\\n+#define CAFFE_KNOWN_TYPE(T)                                                   \\\n+  template <>                                                                 \\\n+  CAFFE2_EXPORT CaffeTypeId TypeMeta::Id<T>() {                                    \\\n+    static bool type_id_bit[1];                                               \\\n+    static const CaffeTypeId type_id(reinterpret_cast<intptr_t>(type_id_bit));     \\\n+    static TypeNameRegisterer<T> registerer(                                  \\\n+        type_id, #T);                                                         \\\n+    return type_id;                                                           \\\n   }\n #else // _MSC_VER\n-#define CAFFE_KNOWN_TYPE(T)                              \\\n-  template <>                                            \\\n-  CaffeTypeId TypeMeta::Id<T>() {                        \\\n-    static bool type_id_bit[1];                          \\\n-    static TypeNameRegisterer<T> registerer(             \\\n-        reinterpret_cast<CaffeTypeId>(type_id_bit), #T); \\\n-    return reinterpret_cast<CaffeTypeId>(type_id_bit);   \\\n+#define CAFFE_KNOWN_TYPE(T)                                                   \\\n+  template <>                                                                 \\\n+  CaffeTypeId TypeMeta::Id<T>() {                                                  \\\n+      static bool type_id_bit[1];                                             \\\n+    static const CaffeTypeId type_id(reinterpret_cast<intptr_t>(type_id_bit));     \\\n+    static TypeNameRegisterer<T> registerer(                                  \\\n+        type_id, #T);                                                         \\\n+    return type_id;                                                           \\\n   }\n #endif\n \n-} // namespace caffe2\n+}\n+\n+// Define adapters for c10 code\n+namespace c10 {\n+using TypeId = caffe2::CaffeTypeId;", "path": "caffe2/core/typeid.h", "position": null, "original_position": 345, "commit_id": "d979b9eac0ccd6c0de98cf43cb43548f9bfc887f", "original_commit_id": "751305e54512bda336702db58aa23b15d549bde1", "user": {"login": "dzhulgakov", "id": 17890620, "node_id": "MDQ6VXNlcjE3ODkwNjIw", "avatar_url": "https://avatars2.githubusercontent.com/u/17890620?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dzhulgakov", "html_url": "https://github.com/dzhulgakov", "followers_url": "https://api.github.com/users/dzhulgakov/followers", "following_url": "https://api.github.com/users/dzhulgakov/following{/other_user}", "gists_url": "https://api.github.com/users/dzhulgakov/gists{/gist_id}", "starred_url": "https://api.github.com/users/dzhulgakov/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dzhulgakov/subscriptions", "organizations_url": "https://api.github.com/users/dzhulgakov/orgs", "repos_url": "https://api.github.com/users/dzhulgakov/repos", "events_url": "https://api.github.com/users/dzhulgakov/events{/privacy}", "received_events_url": "https://api.github.com/users/dzhulgakov/received_events", "type": "User", "site_admin": false}, "body": "this is totally confusing and should not be landed in my opinion. It has different names in different namespace and would be hard to everybody reading the code.\r\n\r\nAgain: either use caffe2::CaffeTypeId and clean up later by renaming usages or just move TypeId proper to c2 namespace", "created_at": "2018-06-13T00:44:33Z", "updated_at": "2018-11-23T15:45:25Z", "html_url": "https://github.com/pytorch/pytorch/pull/8350#discussion_r194928622", "pull_request_url": "https://api.github.com/repos/pytorch/pytorch/pulls/8350", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/194928622"}, "html": {"href": "https://github.com/pytorch/pytorch/pull/8350#discussion_r194928622"}, "pull_request": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/8350"}}, "body_html": "<p>this is totally confusing and should not be landed in my opinion. It has different names in different namespace and would be hard to everybody reading the code.</p>\n<p>Again: either use caffe2::CaffeTypeId and clean up later by renaming usages or just move TypeId proper to c2 namespace</p>", "body_text": "this is totally confusing and should not be landed in my opinion. It has different names in different namespace and would be hard to everybody reading the code.\nAgain: either use caffe2::CaffeTypeId and clean up later by renaming usages or just move TypeId proper to c2 namespace"}