{"url": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/233709695", "pull_request_review_id": 175187719, "id": 233709695, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIzMzcwOTY5NQ==", "diff_hunk": "@@ -154,8 +154,12 @@ def __init__(self, optimizer, step_size, gamma=0.1, last_epoch=-1):\n         super(StepLR, self).__init__(optimizer, last_epoch)\n \n     def get_lr(self):\n-        return [base_lr * self.gamma ** (self.last_epoch // self.step_size)\n-                for base_lr in self.base_lrs]\n+        if (self.last_epoch == 0) or (self.last_epoch % self.step_size != 0):", "path": "torch/optim/lr_scheduler.py", "position": 29, "original_position": 6, "commit_id": "bda21bd32104fe4d2c6a56effa7c5bbc26f37742", "original_commit_id": "7d14f182b7c1a49c424cbd012d0b969a8e54a183", "user": {"login": "ezyang", "id": 13564, "node_id": "MDQ6VXNlcjEzNTY0", "avatar_url": "https://avatars0.githubusercontent.com/u/13564?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ezyang", "html_url": "https://github.com/ezyang", "followers_url": "https://api.github.com/users/ezyang/followers", "following_url": "https://api.github.com/users/ezyang/following{/other_user}", "gists_url": "https://api.github.com/users/ezyang/gists{/gist_id}", "starred_url": "https://api.github.com/users/ezyang/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ezyang/subscriptions", "organizations_url": "https://api.github.com/users/ezyang/orgs", "repos_url": "https://api.github.com/users/ezyang/repos", "events_url": "https://api.github.com/users/ezyang/events{/privacy}", "received_events_url": "https://api.github.com/users/ezyang/received_events", "type": "User", "site_admin": false}, "body": "The special case for `last_epoch == 0` is a real stick up my craw. The problem here is an existing infelicity in LR design, also noted by a user in https://github.com/pytorch/pytorch/issues/8837\r\n\r\nUnfortunately, fixing this would be an even bigger BC-breaking change. Nothing you have to do for this PR, but something good to keep in mind.\r\n\r\nCC @soumith ", "created_at": "2018-11-15T04:34:41Z", "updated_at": "2018-11-23T15:54:54Z", "html_url": "https://github.com/pytorch/pytorch/pull/14010#discussion_r233709695", "pull_request_url": "https://api.github.com/repos/pytorch/pytorch/pulls/14010", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/233709695"}, "html": {"href": "https://github.com/pytorch/pytorch/pull/14010#discussion_r233709695"}, "pull_request": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/14010"}}, "body_html": "<p>The special case for <code>last_epoch == 0</code> is a real stick up my craw. The problem here is an existing infelicity in LR design, also noted by a user in <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load issue title\" data-id=\"335237115\" data-permission-text=\"Issue title is private\" data-url=\"https://github.com/pytorch/pytorch/issues/8837\" data-hovercard-type=\"issue\" data-hovercard-url=\"/pytorch/pytorch/issues/8837/hovercard\" href=\"https://github.com/pytorch/pytorch/issues/8837\">#8837</a></p>\n<p>Unfortunately, fixing this would be an even bigger BC-breaking change. Nothing you have to do for this PR, but something good to keep in mind.</p>\n<p>CC <a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=1310570\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/soumith\">@soumith</a></p>", "body_text": "The special case for last_epoch == 0 is a real stick up my craw. The problem here is an existing infelicity in LR design, also noted by a user in #8837\nUnfortunately, fixing this would be an even bigger BC-breaking change. Nothing you have to do for this PR, but something good to keep in mind.\nCC @soumith"}