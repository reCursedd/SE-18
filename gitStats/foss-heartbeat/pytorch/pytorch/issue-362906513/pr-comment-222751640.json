{"url": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/222751640", "pull_request_review_id": 161714244, "id": 222751640, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIyMjc1MTY0MA==", "diff_hunk": "@@ -26,18 +26,30 @@\n     import queue\n \n \n+# NOTE [ Python Traceback Reference Cycle Problem ]\n+#\n+# When using sys.exc_info(), it is important to **not** store the exc_info[2],\n+# which is the traceback, because otherwise you will run into the traceback\n+# reference cycle problem, i.e., the traceback holding reference to the frame,\n+# and the frame (which holds reference to all the object in its temporary scope)\n+# holding reference the traceback.\n+\n+\n class ExceptionWrapper(object):\n     r\"\"\"Wraps an exception plus traceback to communicate across threads\"\"\"\n-\n     def __init__(self, exc_info):\n+        # It is important that we don't store exc_info, see\n+        # NOTE [ Python Traceback Reference Cycle Problem ]\n         self.exc_type = exc_info[0]\n         self.exc_msg = \"\".join(traceback.format_exception(*exc_info))\n \n \n _use_shared_memory = False\n r\"\"\"Whether to use shared memory in default_collate\"\"\"\n \n-MANAGER_STATUS_CHECK_INTERVAL = 5.0\n+MP_STATUS_CHECK_INTERVAL = 5.0\n+r\"\"\"Interval (in seconds) to check status of other process to avoid hanging in", "path": "torch/utils/data/dataloader.py", "position": null, "original_position": 28, "commit_id": "d3c4ffa092580d5b15ef2705bd3904f7b685e511", "original_commit_id": "9ce8d93d03726f874260cb5c132438243b810ffc", "user": {"login": "apaszke", "id": 4583066, "node_id": "MDQ6VXNlcjQ1ODMwNjY=", "avatar_url": "https://avatars3.githubusercontent.com/u/4583066?v=4", "gravatar_id": "", "url": "https://api.github.com/users/apaszke", "html_url": "https://github.com/apaszke", "followers_url": "https://api.github.com/users/apaszke/followers", "following_url": "https://api.github.com/users/apaszke/following{/other_user}", "gists_url": "https://api.github.com/users/apaszke/gists{/gist_id}", "starred_url": "https://api.github.com/users/apaszke/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/apaszke/subscriptions", "organizations_url": "https://api.github.com/users/apaszke/orgs", "repos_url": "https://api.github.com/users/apaszke/repos", "events_url": "https://api.github.com/users/apaszke/events{/privacy}", "received_events_url": "https://api.github.com/users/apaszke/received_events", "type": "User", "site_admin": false}, "body": "This comment is very unclear. What is \"the other process\"? Is the check done in the master, workers, or in a completely unrelated one?", "created_at": "2018-10-04T17:03:25Z", "updated_at": "2018-11-23T15:52:21Z", "html_url": "https://github.com/pytorch/pytorch/pull/11985#discussion_r222751640", "pull_request_url": "https://api.github.com/repos/pytorch/pytorch/pulls/11985", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/222751640"}, "html": {"href": "https://github.com/pytorch/pytorch/pull/11985#discussion_r222751640"}, "pull_request": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/11985"}}, "body_html": "<p>This comment is very unclear. What is \"the other process\"? Is the check done in the master, workers, or in a completely unrelated one?</p>", "body_text": "This comment is very unclear. What is \"the other process\"? Is the check done in the master, workers, or in a completely unrelated one?"}