{"url": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/223433089", "pull_request_review_id": 162558750, "id": 223433089, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIyMzQzMzA4OQ==", "diff_hunk": "@@ -87,32 +111,33 @@ def _worker_loop(dataset, index_queue, data_queue, done_event, collate_fn, seed,\n         random.seed(seed)\n         torch.manual_seed(seed)\n \n-        # Do not wait for putting thread to join when this worker exits.\n-        # Otherwise, this worker may always be waiting to put and doesn't check\n-        # index_queue and done_event for termination signal.\n         data_queue.cancel_join_thread()\n \n         if init_fn is not None:\n             init_fn(worker_id)\n \n         watchdog = ManagerWatchdog()\n \n-        while True:\n+        while watchdog.is_alive():\n             try:\n-                r = index_queue.get(timeout=MANAGER_STATUS_CHECK_INTERVAL)\n+                r = index_queue.get(timeout=MP_STATUS_CHECK_INTERVAL)\n             except queue.Empty:\n-                if watchdog.is_alive() and not done_event.is_set():\n-                    continue\n-                else:\n-                    break\n-            # use done_event so that we can get faster exiting signal even if there\n-            # are still indices in index_queue\n-            if r is None or done_event.is_set():\n-                break\n+                continue", "path": "torch/utils/data/dataloader.py", "position": 96, "original_position": 96, "commit_id": "d3c4ffa092580d5b15ef2705bd3904f7b685e511", "original_commit_id": "398578667ab67c1b09c73456159eead852177cc1", "user": {"login": "SsnL", "id": 5674597, "node_id": "MDQ6VXNlcjU2NzQ1OTc=", "avatar_url": "https://avatars2.githubusercontent.com/u/5674597?v=4", "gravatar_id": "", "url": "https://api.github.com/users/SsnL", "html_url": "https://github.com/SsnL", "followers_url": "https://api.github.com/users/SsnL/followers", "following_url": "https://api.github.com/users/SsnL/following{/other_user}", "gists_url": "https://api.github.com/users/SsnL/gists{/gist_id}", "starred_url": "https://api.github.com/users/SsnL/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/SsnL/subscriptions", "organizations_url": "https://api.github.com/users/SsnL/orgs", "repos_url": "https://api.github.com/users/SsnL/repos", "events_url": "https://api.github.com/users/SsnL/events{/privacy}", "received_events_url": "https://api.github.com/users/SsnL/received_events", "type": "User", "site_admin": false}, "body": "Yes. The invariant says that if main process is alive, the workers will get a `None`, eventually. We must get that `None` even when `done_event` is set, because otherwise main process putter thread may hang.", "created_at": "2018-10-08T16:55:33Z", "updated_at": "2018-11-23T15:52:34Z", "html_url": "https://github.com/pytorch/pytorch/pull/11985#discussion_r223433089", "pull_request_url": "https://api.github.com/repos/pytorch/pytorch/pulls/11985", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/223433089"}, "html": {"href": "https://github.com/pytorch/pytorch/pull/11985#discussion_r223433089"}, "pull_request": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/11985"}}, "body_html": "<p>Yes. The invariant says that if main process is alive, the workers will get a <code>None</code>, eventually. We must get that <code>None</code> even when <code>done_event</code> is set, because otherwise main process putter thread may hang.</p>", "body_text": "Yes. The invariant says that if main process is alive, the workers will get a None, eventually. We must get that None even when done_event is set, because otherwise main process putter thread may hang.", "in_reply_to_id": 223425546}