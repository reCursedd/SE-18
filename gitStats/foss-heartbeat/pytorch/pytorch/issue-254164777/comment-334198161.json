{"url": "https://api.github.com/repos/pytorch/pytorch/issues/comments/334198161", "html_url": "https://github.com/pytorch/pytorch/issues/2582#issuecomment-334198161", "issue_url": "https://api.github.com/repos/pytorch/pytorch/issues/2582", "id": 334198161, "node_id": "MDEyOklzc3VlQ29tbWVudDMzNDE5ODE2MQ==", "user": {"login": "vadimkantorov", "id": 1041752, "node_id": "MDQ6VXNlcjEwNDE3NTI=", "avatar_url": "https://avatars0.githubusercontent.com/u/1041752?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vadimkantorov", "html_url": "https://github.com/vadimkantorov", "followers_url": "https://api.github.com/users/vadimkantorov/followers", "following_url": "https://api.github.com/users/vadimkantorov/following{/other_user}", "gists_url": "https://api.github.com/users/vadimkantorov/gists{/gist_id}", "starred_url": "https://api.github.com/users/vadimkantorov/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vadimkantorov/subscriptions", "organizations_url": "https://api.github.com/users/vadimkantorov/orgs", "repos_url": "https://api.github.com/users/vadimkantorov/repos", "events_url": "https://api.github.com/users/vadimkantorov/events{/privacy}", "received_events_url": "https://api.github.com/users/vadimkantorov/received_events", "type": "User", "site_admin": false}, "created_at": "2017-10-04T15:40:23Z", "updated_at": "2017-10-04T15:40:23Z", "author_association": "NONE", "body_html": "<p>Should <code>type_as</code> be able to ingest the the tensor type from the variable's tensor?</p>\n<p>My original case was to creating an identity matrix variable on the same device as another variable's contents, so that later I can do operations on them. <code>Variable(torch.eye(4).type_as(v))</code> seems nicer compared to <code>Variable(torch.eye(4).type_as(v.data))</code> (especially if <code>v</code> holds a <code>torch.cuda.ByteTensor</code>)</p>", "body_text": "Should type_as be able to ingest the the tensor type from the variable's tensor?\nMy original case was to creating an identity matrix variable on the same device as another variable's contents, so that later I can do operations on them. Variable(torch.eye(4).type_as(v)) seems nicer compared to Variable(torch.eye(4).type_as(v.data)) (especially if v holds a torch.cuda.ByteTensor)", "body": "Should `type_as` be able to ingest the the tensor type from the variable's tensor?\r\n\r\nMy original case was to creating an identity matrix variable on the same device as another variable's contents, so that later I can do operations on them. `Variable(torch.eye(4).type_as(v))` seems nicer compared to `Variable(torch.eye(4).type_as(v.data))` (especially if `v` holds a `torch.cuda.ByteTensor`)"}