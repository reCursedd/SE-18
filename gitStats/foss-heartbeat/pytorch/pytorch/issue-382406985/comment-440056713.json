{"url": "https://api.github.com/repos/pytorch/pytorch/issues/comments/440056713", "html_url": "https://github.com/pytorch/pytorch/pull/14202#issuecomment-440056713", "issue_url": "https://api.github.com/repos/pytorch/pytorch/issues/14202", "id": 440056713, "node_id": "MDEyOklzc3VlQ29tbWVudDQ0MDA1NjcxMw==", "user": {"login": "ezyang", "id": 13564, "node_id": "MDQ6VXNlcjEzNTY0", "avatar_url": "https://avatars0.githubusercontent.com/u/13564?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ezyang", "html_url": "https://github.com/ezyang", "followers_url": "https://api.github.com/users/ezyang/followers", "following_url": "https://api.github.com/users/ezyang/following{/other_user}", "gists_url": "https://api.github.com/users/ezyang/gists{/gist_id}", "starred_url": "https://api.github.com/users/ezyang/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ezyang/subscriptions", "organizations_url": "https://api.github.com/users/ezyang/orgs", "repos_url": "https://api.github.com/users/ezyang/repos", "events_url": "https://api.github.com/users/ezyang/events{/privacy}", "received_events_url": "https://api.github.com/users/ezyang/received_events", "type": "User", "site_admin": false}, "created_at": "2018-11-19T21:59:09Z", "updated_at": "2018-11-19T21:59:09Z", "author_association": "CONTRIBUTOR", "body_html": "<p>Hmm, I'm a little ambivalent. On the one hand, less legacy is good. On the other hand, documentary type aliases are pretty useful, even when they're not statically checked. For example, the new style sparse native implementation defines <code>using SparseTensor = Tensor;</code> and this helps the readability of the code quite a bit.</p>\n<p>Maybe, instead, we should codemod THTensor to TensorImpl?</p>", "body_text": "Hmm, I'm a little ambivalent. On the one hand, less legacy is good. On the other hand, documentary type aliases are pretty useful, even when they're not statically checked. For example, the new style sparse native implementation defines using SparseTensor = Tensor; and this helps the readability of the code quite a bit.\nMaybe, instead, we should codemod THTensor to TensorImpl?", "body": "Hmm, I'm a little ambivalent. On the one hand, less legacy is good. On the other hand, documentary type aliases are pretty useful, even when they're not statically checked. For example, the new style sparse native implementation defines `using SparseTensor = Tensor;` and this helps the readability of the code quite a bit.\r\n\r\nMaybe, instead, we should codemod THTensor to TensorImpl?"}