{"url": "https://api.github.com/repos/pytorch/pytorch/issues/10916", "repository_url": "https://api.github.com/repos/pytorch/pytorch", "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/10916/labels{/name}", "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/10916/comments", "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/10916/events", "html_url": "https://github.com/pytorch/pytorch/issues/10916", "id": 354482553, "node_id": "MDU6SXNzdWUzNTQ0ODI1NTM=", "number": 10916, "title": "torch.isclose() breaks for integral scalar type inputs", "user": {"login": "jamesr66a", "id": 4685384, "node_id": "MDQ6VXNlcjQ2ODUzODQ=", "avatar_url": "https://avatars2.githubusercontent.com/u/4685384?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jamesr66a", "html_url": "https://github.com/jamesr66a", "followers_url": "https://api.github.com/users/jamesr66a/followers", "following_url": "https://api.github.com/users/jamesr66a/following{/other_user}", "gists_url": "https://api.github.com/users/jamesr66a/gists{/gist_id}", "starred_url": "https://api.github.com/users/jamesr66a/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jamesr66a/subscriptions", "organizations_url": "https://api.github.com/users/jamesr66a/orgs", "repos_url": "https://api.github.com/users/jamesr66a/repos", "events_url": "https://api.github.com/users/jamesr66a/events{/privacy}", "received_events_url": "https://api.github.com/users/jamesr66a/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 443483881, "node_id": "MDU6TGFiZWw0NDM0ODM4ODE=", "url": "https://api.github.com/repos/pytorch/pytorch/labels/todo", "name": "todo", "color": "c2e0c6", "default": false}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-08-27T21:19:38Z", "updated_at": "2018-09-14T22:35:34Z", "closed_at": "2018-09-14T22:35:34Z", "author_association": "CONTRIBUTOR", "body_html": "<pre><code>import torch\nimport torch.testing\n\ntorch.testing.assert_allclose(torch.LongTensor([1, 2, 3]), torch.LongTensor([1, 2, 3]))\n</code></pre>\n<p>gives</p>\n<pre><code>Traceback (most recent call last):\n  File \"allclose.py\", line 4, in &lt;module&gt;\n    torch.testing.assert_allclose(torch.LongTensor([1, 2, 3]), torch.LongTensor([1, 2, 3]))\n  File \"/Users/jamesreed/onnx-fairseq/pytorch/torch/testing/__init__.py\", line 28, in assert_allclose\n    close = torch.isclose(actual, expected, rtol, atol, equal_nan)\nRuntimeError: value cannot be converted to type int64_t without overflow: inf\n</code></pre>\n<p>It seems the underlying issue is here, where we are specially handling INF values: <a href=\"https://github.com/pytorch/pytorch/blob/master/aten/src/ATen/native/TensorCompare.cpp#L48\">https://github.com/pytorch/pytorch/blob/master/aten/src/ATen/native/TensorCompare.cpp#L48</a></p>\n<p>The INFINITY to compare to cannot be cast to a LongType to match the lhs operand of the <code>==</code> operators</p>", "body_text": "import torch\nimport torch.testing\n\ntorch.testing.assert_allclose(torch.LongTensor([1, 2, 3]), torch.LongTensor([1, 2, 3]))\n\ngives\nTraceback (most recent call last):\n  File \"allclose.py\", line 4, in <module>\n    torch.testing.assert_allclose(torch.LongTensor([1, 2, 3]), torch.LongTensor([1, 2, 3]))\n  File \"/Users/jamesreed/onnx-fairseq/pytorch/torch/testing/__init__.py\", line 28, in assert_allclose\n    close = torch.isclose(actual, expected, rtol, atol, equal_nan)\nRuntimeError: value cannot be converted to type int64_t without overflow: inf\n\nIt seems the underlying issue is here, where we are specially handling INF values: https://github.com/pytorch/pytorch/blob/master/aten/src/ATen/native/TensorCompare.cpp#L48\nThe INFINITY to compare to cannot be cast to a LongType to match the lhs operand of the == operators", "body": "```\r\nimport torch\r\nimport torch.testing\r\n\r\ntorch.testing.assert_allclose(torch.LongTensor([1, 2, 3]), torch.LongTensor([1, 2, 3]))\r\n```\r\n\r\ngives\r\n\r\n```\r\nTraceback (most recent call last):\r\n  File \"allclose.py\", line 4, in <module>\r\n    torch.testing.assert_allclose(torch.LongTensor([1, 2, 3]), torch.LongTensor([1, 2, 3]))\r\n  File \"/Users/jamesreed/onnx-fairseq/pytorch/torch/testing/__init__.py\", line 28, in assert_allclose\r\n    close = torch.isclose(actual, expected, rtol, atol, equal_nan)\r\nRuntimeError: value cannot be converted to type int64_t without overflow: inf\r\n```\r\n\r\nIt seems the underlying issue is here, where we are specially handling INF values: https://github.com/pytorch/pytorch/blob/master/aten/src/ATen/native/TensorCompare.cpp#L48\r\n\r\nThe INFINITY to compare to cannot be cast to a LongType to match the lhs operand of the `==` operators"}