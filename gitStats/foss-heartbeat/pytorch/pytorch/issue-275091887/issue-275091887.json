{"url": "https://api.github.com/repos/pytorch/pytorch/issues/3773", "repository_url": "https://api.github.com/repos/pytorch/pytorch", "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/3773/labels{/name}", "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/3773/comments", "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/3773/events", "html_url": "https://github.com/pytorch/pytorch/pull/3773", "id": 275091887, "node_id": "MDExOlB1bGxSZXF1ZXN0MTUzNDU3NDM0", "number": 3773, "title": "add reduce arg to HingeEmbeddingLoss", "user": {"login": "kevinzakka", "id": 10518920, "node_id": "MDQ6VXNlcjEwNTE4OTIw", "avatar_url": "https://avatars1.githubusercontent.com/u/10518920?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kevinzakka", "html_url": "https://github.com/kevinzakka", "followers_url": "https://api.github.com/users/kevinzakka/followers", "following_url": "https://api.github.com/users/kevinzakka/following{/other_user}", "gists_url": "https://api.github.com/users/kevinzakka/gists{/gist_id}", "starred_url": "https://api.github.com/users/kevinzakka/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kevinzakka/subscriptions", "organizations_url": "https://api.github.com/users/kevinzakka/orgs", "repos_url": "https://api.github.com/users/kevinzakka/repos", "events_url": "https://api.github.com/users/kevinzakka/events{/privacy}", "received_events_url": "https://api.github.com/users/kevinzakka/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2017-11-18T16:44:20Z", "updated_at": "2018-07-10T16:35:40Z", "closed_at": "2018-07-10T16:35:39Z", "author_association": "CONTRIBUTOR", "pull_request": {"url": "https://api.github.com/repos/pytorch/pytorch/pulls/3773", "html_url": "https://github.com/pytorch/pytorch/pull/3773", "diff_url": "https://github.com/pytorch/pytorch/pull/3773.diff", "patch_url": "https://github.com/pytorch/pytorch/pull/3773.patch"}, "body_html": "<p><strong>EDIT</strong>: There seems to be a mistake in the backwards pass even in the current pytorch version, am currently fixing it. The cause is the following line <code>grad_input[torch.mul(torch.eq(target, -1), torch.gt(input, ctx.margin))] = 0</code></p>\n<p>As per <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load issue title\" data-id=\"192143117\" data-permission-text=\"Issue title is private\" data-url=\"https://github.com/pytorch/pytorch/issues/264\" data-hovercard-type=\"issue\" data-hovercard-url=\"/pytorch/pytorch/issues/264/hovercard\" href=\"https://github.com/pytorch/pytorch/issues/264\">#264</a>. When reduce is False, HingeEmbeddingLoss outputs a loss per element of the input tensor. When reduce is True (default), the current behavior is kept.</p>\n<p>Small snippet to test forward pass:</p>\n<div class=\"highlight highlight-source-python\"><pre><span class=\"pl-v\">reduce</span> <span class=\"pl-k\">=</span> <span class=\"pl-c1\">False</span>\nmargin <span class=\"pl-k\">=</span> <span class=\"pl-c1\">6</span>\n\na <span class=\"pl-k\">=</span> torch.from_numpy(np.array([[<span class=\"pl-c1\">1</span>, <span class=\"pl-c1\">2</span>, <span class=\"pl-c1\">3</span>], [<span class=\"pl-c1\">3</span>, <span class=\"pl-c1\">4</span>, <span class=\"pl-c1\">5</span>], [<span class=\"pl-c1\">5</span>, <span class=\"pl-c1\">6</span>, <span class=\"pl-c1\">7</span>]]))\nb <span class=\"pl-k\">=</span> torch.from_numpy(np.array([[<span class=\"pl-c1\">1</span>, <span class=\"pl-c1\">4</span>, <span class=\"pl-c1\">4</span>], [<span class=\"pl-c1\">4</span>, <span class=\"pl-c1\">5</span>, <span class=\"pl-c1\">6</span>], [<span class=\"pl-c1\">9</span>, <span class=\"pl-c1\">2</span>, <span class=\"pl-c1\">8</span>]]))\n\na <span class=\"pl-k\">=</span> a.float()\nb <span class=\"pl-k\">=</span> b.float()\n\nmanhattan <span class=\"pl-k\">=</span> nn.PairwiseDistance(<span class=\"pl-v\">p</span><span class=\"pl-k\">=</span><span class=\"pl-c1\">1</span>)\n\nx <span class=\"pl-k\">=</span> manhattan(a, b)\ny <span class=\"pl-k\">=</span> torch.FloatTensor([<span class=\"pl-k\">-</span><span class=\"pl-c1\">1</span>, <span class=\"pl-c1\">1</span>, <span class=\"pl-c1\">1</span>])\n\n<span class=\"pl-c1\">print</span>(nn.HingeEmbeddingLoss(margin, <span class=\"pl-v\">reduce</span>)(x, y))</pre></div>", "body_text": "EDIT: There seems to be a mistake in the backwards pass even in the current pytorch version, am currently fixing it. The cause is the following line grad_input[torch.mul(torch.eq(target, -1), torch.gt(input, ctx.margin))] = 0\nAs per #264. When reduce is False, HingeEmbeddingLoss outputs a loss per element of the input tensor. When reduce is True (default), the current behavior is kept.\nSmall snippet to test forward pass:\nreduce = False\nmargin = 6\n\na = torch.from_numpy(np.array([[1, 2, 3], [3, 4, 5], [5, 6, 7]]))\nb = torch.from_numpy(np.array([[1, 4, 4], [4, 5, 6], [9, 2, 8]]))\n\na = a.float()\nb = b.float()\n\nmanhattan = nn.PairwiseDistance(p=1)\n\nx = manhattan(a, b)\ny = torch.FloatTensor([-1, 1, 1])\n\nprint(nn.HingeEmbeddingLoss(margin, reduce)(x, y))", "body": "**EDIT**: There seems to be a mistake in the backwards pass even in the current pytorch version, am currently fixing it. The cause is the following line `grad_input[torch.mul(torch.eq(target, -1), torch.gt(input, ctx.margin))] = 0`\r\n\r\nAs per #264. When reduce is False, HingeEmbeddingLoss outputs a loss per element of the input tensor. When reduce is True (default), the current behavior is kept.\r\n\r\nSmall snippet to test forward pass:\r\n\r\n```python\r\nreduce = False\r\nmargin = 6\r\n\r\na = torch.from_numpy(np.array([[1, 2, 3], [3, 4, 5], [5, 6, 7]]))\r\nb = torch.from_numpy(np.array([[1, 4, 4], [4, 5, 6], [9, 2, 8]]))\r\n\r\na = a.float()\r\nb = b.float()\r\n\r\nmanhattan = nn.PairwiseDistance(p=1)\r\n\r\nx = manhattan(a, b)\r\ny = torch.FloatTensor([-1, 1, 1])\r\n\r\nprint(nn.HingeEmbeddingLoss(margin, reduce)(x, y))\r\n```"}