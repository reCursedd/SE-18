{"url": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/218548699", "pull_request_review_id": 156512355, "id": 218548699, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIxODU0ODY5OQ==", "diff_hunk": "@@ -47,7 +47,9 @@ def __init__(self, probs=None, logits=None, validate_args=None):\n         if probs is not None:\n             if probs.dim() < 1:\n                 raise ValueError(\"`probs` parameter must be at least one-dimensional.\")\n-            self.probs = probs / probs.sum(-1, keepdim=True)\n+            sum_probs = probs.detach().cpu().numpy().sum(-1, keepdims=True)", "path": "torch/distributions/categorical.py", "position": 5, "original_position": 5, "commit_id": "af2a1b8fbc273d5095dffcf7ba886bdb46851b6c", "original_commit_id": "af2a1b8fbc273d5095dffcf7ba886bdb46851b6c", "user": {"login": "zuoxingdong", "id": 18168681, "node_id": "MDQ6VXNlcjE4MTY4Njgx", "avatar_url": "https://avatars0.githubusercontent.com/u/18168681?v=4", "gravatar_id": "", "url": "https://api.github.com/users/zuoxingdong", "html_url": "https://github.com/zuoxingdong", "followers_url": "https://api.github.com/users/zuoxingdong/followers", "following_url": "https://api.github.com/users/zuoxingdong/following{/other_user}", "gists_url": "https://api.github.com/users/zuoxingdong/gists{/gist_id}", "starred_url": "https://api.github.com/users/zuoxingdong/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/zuoxingdong/subscriptions", "organizations_url": "https://api.github.com/users/zuoxingdong/orgs", "repos_url": "https://api.github.com/users/zuoxingdong/repos", "events_url": "https://api.github.com/users/zuoxingdong/events{/privacy}", "received_events_url": "https://api.github.com/users/zuoxingdong/received_events", "type": "User", "site_admin": false}, "body": "@alicanb @vishwakftw Indeed. The main use case I am referring to is using ES to evolve a small policy to solve sequential problems (RL), which requires a lot of samples each over a long horizon, this rises of the need being able to create thousands of 'small' categorical distributions efficiently. On the ES code I tested on, with same setting, it becomes extremely slow compared with other distributions like `Normal` for continuous control tasks. ", "created_at": "2018-09-18T18:39:56Z", "updated_at": "2018-11-23T15:51:36Z", "html_url": "https://github.com/pytorch/pytorch/pull/11749#discussion_r218548699", "pull_request_url": "https://api.github.com/repos/pytorch/pytorch/pulls/11749", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/218548699"}, "html": {"href": "https://github.com/pytorch/pytorch/pull/11749#discussion_r218548699"}, "pull_request": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/11749"}}, "body_html": "<p><a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=1093846\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/alicanb\">@alicanb</a> <a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=23639302\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/vishwakftw\">@vishwakftw</a> Indeed. The main use case I am referring to is using ES to evolve a small policy to solve sequential problems (RL), which requires a lot of samples each over a long horizon, this rises of the need being able to create thousands of 'small' categorical distributions efficiently. On the ES code I tested on, with same setting, it becomes extremely slow compared with other distributions like <code>Normal</code> for continuous control tasks.</p>", "body_text": "@alicanb @vishwakftw Indeed. The main use case I am referring to is using ES to evolve a small policy to solve sequential problems (RL), which requires a lot of samples each over a long horizon, this rises of the need being able to create thousands of 'small' categorical distributions efficiently. On the ES code I tested on, with same setting, it becomes extremely slow compared with other distributions like Normal for continuous control tasks.", "in_reply_to_id": 218055627}