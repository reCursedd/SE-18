{"url": "https://api.github.com/repos/pytorch/pytorch/issues/13324", "repository_url": "https://api.github.com/repos/pytorch/pytorch", "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/13324/labels{/name}", "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/13324/comments", "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/13324/events", "html_url": "https://github.com/pytorch/pytorch/issues/13324", "id": 375647092, "node_id": "MDU6SXNzdWUzNzU2NDcwOTI=", "number": 13324, "title": "torch.nn.utils.rnn.pack_padded_sequence segment fault if not in decreasing order", "user": {"login": "igormq", "id": 623536, "node_id": "MDQ6VXNlcjYyMzUzNg==", "avatar_url": "https://avatars0.githubusercontent.com/u/623536?v=4", "gravatar_id": "", "url": "https://api.github.com/users/igormq", "html_url": "https://github.com/igormq", "followers_url": "https://api.github.com/users/igormq/followers", "following_url": "https://api.github.com/users/igormq/following{/other_user}", "gists_url": "https://api.github.com/users/igormq/gists{/gist_id}", "starred_url": "https://api.github.com/users/igormq/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/igormq/subscriptions", "organizations_url": "https://api.github.com/users/igormq/orgs", "repos_url": "https://api.github.com/users/igormq/repos", "events_url": "https://api.github.com/users/igormq/events{/privacy}", "received_events_url": "https://api.github.com/users/igormq/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 679955625, "node_id": "MDU6TGFiZWw2Nzk5NTU2MjU=", "url": "https://api.github.com/repos/pytorch/pytorch/labels/crash", "name": "crash", "color": "d93f0b", "default": false}, {"id": 443484135, "node_id": "MDU6TGFiZWw0NDM0ODQxMzU=", "url": "https://api.github.com/repos/pytorch/pytorch/labels/high%20priority", "name": "high priority", "color": "F22613", "default": false}], "state": "closed", "locked": false, "assignee": {"login": "nairbv", "id": 582713, "node_id": "MDQ6VXNlcjU4MjcxMw==", "avatar_url": "https://avatars1.githubusercontent.com/u/582713?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nairbv", "html_url": "https://github.com/nairbv", "followers_url": "https://api.github.com/users/nairbv/followers", "following_url": "https://api.github.com/users/nairbv/following{/other_user}", "gists_url": "https://api.github.com/users/nairbv/gists{/gist_id}", "starred_url": "https://api.github.com/users/nairbv/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nairbv/subscriptions", "organizations_url": "https://api.github.com/users/nairbv/orgs", "repos_url": "https://api.github.com/users/nairbv/repos", "events_url": "https://api.github.com/users/nairbv/events{/privacy}", "received_events_url": "https://api.github.com/users/nairbv/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "nairbv", "id": 582713, "node_id": "MDQ6VXNlcjU4MjcxMw==", "avatar_url": "https://avatars1.githubusercontent.com/u/582713?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nairbv", "html_url": "https://github.com/nairbv", "followers_url": "https://api.github.com/users/nairbv/followers", "following_url": "https://api.github.com/users/nairbv/following{/other_user}", "gists_url": "https://api.github.com/users/nairbv/gists{/gist_id}", "starred_url": "https://api.github.com/users/nairbv/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nairbv/subscriptions", "organizations_url": "https://api.github.com/users/nairbv/orgs", "repos_url": "https://api.github.com/users/nairbv/repos", "events_url": "https://api.github.com/users/nairbv/events{/privacy}", "received_events_url": "https://api.github.com/users/nairbv/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 2, "created_at": "2018-10-30T19:04:15Z", "updated_at": "2018-11-16T19:20:29Z", "closed_at": "2018-11-16T19:20:29Z", "author_association": "NONE", "body_html": "<h2><g-emoji class=\"g-emoji\" alias=\"bug\" fallback-src=\"https://assets-cdn.github.com/images/icons/emoji/unicode/1f41b.png\">\ud83d\udc1b</g-emoji> Bug</h2>\n<p>Instead of raising an exception, the function <code>torch.nn.utils.rnn.pack_padded_sequence</code> forces python environment to shut down due to a segmentation fault if the input is not in decreasing order.</p>\n<h2>To Reproduce</h2>\n<div class=\"highlight highlight-source-python\"><pre><span class=\"pl-k\">import</span> torch\n<span class=\"pl-k\">from</span> torch.nn.utils.rnn <span class=\"pl-k\">import</span> pad_sequence, pack_padded_sequence\na <span class=\"pl-k\">=</span> torch.ones(<span class=\"pl-c1\">25</span>, <span class=\"pl-c1\">300</span>)\nb <span class=\"pl-k\">=</span> torch.ones(<span class=\"pl-c1\">22</span>, <span class=\"pl-c1\">300</span>)\nb_a <span class=\"pl-k\">=</span> pad_sequence([b, a])\npack_padded_sequence(b_a, [<span class=\"pl-c1\">22</span>, <span class=\"pl-c1\">25</span>])\n<span class=\"pl-k\">&gt;&gt;</span><span class=\"pl-k\">&gt;</span> <span class=\"pl-c1\">31906</span> abort (core dumped)  ipython\na_b <span class=\"pl-k\">=</span> pad_sequence([a, b])\npack_padded_sequence(a_b, [<span class=\"pl-c1\">25</span>, <span class=\"pl-c1\">22</span>]) <span class=\"pl-c\"><span class=\"pl-c\">#</span> it works!</span></pre></div>\n<h2>Expected behavior</h2>\n<p>Should return an exception instead of a segmentation fault</p>\n<h2>Environment</h2>\n<pre><code>PyTorch version: 1.0.0.dev20181024\nIs debug build: No\nCUDA used to build PyTorch: 9.0.176\n\nOS: Ubuntu 16.04.4 LTS\nGCC version: (Ubuntu 5.4.0-6ubuntu1~16.04.10) 5.4.0 20160609\nCMake version: version 3.5.1\n\nPython version: 3.6\nIs CUDA available: Yes\nCUDA runtime version: 9.1.85\nGPU models and configuration:\nGPU 0: GeForce GTX 1080\nGPU 1: GeForce GTX 1080\nGPU 2: GeForce GTX 1080\nGPU 3: GeForce GTX 1080\n\nNvidia driver version: 390.48\ncuDNN version: Probably one of the following:\n/usr/lib/x86_64-linux-gnu/libcudnn.so.6.0.21\n/usr/lib/x86_64-linux-gnu/libcudnn_static.a\n/usr/local/cuda-8.0/lib64/libcudnn.so\n/usr/local/cuda-8.0/lib64/libcudnn.so.5\n/usr/local/cuda-8.0/lib64/libcudnn.so.5.1.5\n/usr/local/cuda-8.0/lib64/libcudnn.so.6\n/usr/local/cuda-8.0/lib64/libcudnn.so.6.0.21\n/usr/local/cuda-8.0/lib64/libcudnn_static.a\n/usr/local/cuda-9.1/lib64/libcudnn.so\n/usr/local/cuda-9.1/lib64/libcudnn.so.7\n/usr/local/cuda-9.1/lib64/libcudnn.so.7.1.3\n/usr/local/cuda-9.1/lib64/libcudnn_static.a\n\nVersions of relevant libraries:\n[pip] numpy (1.15.2)\n[pip] torch (1.0.0.dev20181024)\n[pip] torchaudio (0.1)\n[pip] torchvision (0.2.1)\n[conda] pytorch                   0.4.1           py36_py35_py27__9.0.176_7.1.2_2    pytorch\n[conda] pytorch-nightly           1.0.0.dev20181024 py3.6_cuda9.0.176_cudnn7.1.2_0    pytorch\n[conda] torchaudio                0.1                       &lt;pip&gt;\n[conda] torchvision               0.2.1                    py36_1    pytorch\n</code></pre>", "body_text": "\ud83d\udc1b Bug\nInstead of raising an exception, the function torch.nn.utils.rnn.pack_padded_sequence forces python environment to shut down due to a segmentation fault if the input is not in decreasing order.\nTo Reproduce\nimport torch\nfrom torch.nn.utils.rnn import pad_sequence, pack_padded_sequence\na = torch.ones(25, 300)\nb = torch.ones(22, 300)\nb_a = pad_sequence([b, a])\npack_padded_sequence(b_a, [22, 25])\n>>> 31906 abort (core dumped)  ipython\na_b = pad_sequence([a, b])\npack_padded_sequence(a_b, [25, 22]) # it works!\nExpected behavior\nShould return an exception instead of a segmentation fault\nEnvironment\nPyTorch version: 1.0.0.dev20181024\nIs debug build: No\nCUDA used to build PyTorch: 9.0.176\n\nOS: Ubuntu 16.04.4 LTS\nGCC version: (Ubuntu 5.4.0-6ubuntu1~16.04.10) 5.4.0 20160609\nCMake version: version 3.5.1\n\nPython version: 3.6\nIs CUDA available: Yes\nCUDA runtime version: 9.1.85\nGPU models and configuration:\nGPU 0: GeForce GTX 1080\nGPU 1: GeForce GTX 1080\nGPU 2: GeForce GTX 1080\nGPU 3: GeForce GTX 1080\n\nNvidia driver version: 390.48\ncuDNN version: Probably one of the following:\n/usr/lib/x86_64-linux-gnu/libcudnn.so.6.0.21\n/usr/lib/x86_64-linux-gnu/libcudnn_static.a\n/usr/local/cuda-8.0/lib64/libcudnn.so\n/usr/local/cuda-8.0/lib64/libcudnn.so.5\n/usr/local/cuda-8.0/lib64/libcudnn.so.5.1.5\n/usr/local/cuda-8.0/lib64/libcudnn.so.6\n/usr/local/cuda-8.0/lib64/libcudnn.so.6.0.21\n/usr/local/cuda-8.0/lib64/libcudnn_static.a\n/usr/local/cuda-9.1/lib64/libcudnn.so\n/usr/local/cuda-9.1/lib64/libcudnn.so.7\n/usr/local/cuda-9.1/lib64/libcudnn.so.7.1.3\n/usr/local/cuda-9.1/lib64/libcudnn_static.a\n\nVersions of relevant libraries:\n[pip] numpy (1.15.2)\n[pip] torch (1.0.0.dev20181024)\n[pip] torchaudio (0.1)\n[pip] torchvision (0.2.1)\n[conda] pytorch                   0.4.1           py36_py35_py27__9.0.176_7.1.2_2    pytorch\n[conda] pytorch-nightly           1.0.0.dev20181024 py3.6_cuda9.0.176_cudnn7.1.2_0    pytorch\n[conda] torchaudio                0.1                       <pip>\n[conda] torchvision               0.2.1                    py36_1    pytorch", "body": "## \ud83d\udc1b Bug\r\n\r\nInstead of raising an exception, the function `torch.nn.utils.rnn.pack_padded_sequence` forces python environment to shut down due to a segmentation fault if the input is not in decreasing order.\r\n\r\n\r\n## To Reproduce\r\n\r\n```python \r\nimport torch\r\nfrom torch.nn.utils.rnn import pad_sequence, pack_padded_sequence\r\na = torch.ones(25, 300)\r\nb = torch.ones(22, 300)\r\nb_a = pad_sequence([b, a])\r\npack_padded_sequence(b_a, [22, 25])\r\n>>> 31906 abort (core dumped)  ipython\r\na_b = pad_sequence([a, b])\r\npack_padded_sequence(a_b, [25, 22]) # it works!\r\n```\r\n\r\n## Expected behavior\r\n\r\nShould return an exception instead of a segmentation fault\r\n\r\n## Environment\r\n\r\n```\r\nPyTorch version: 1.0.0.dev20181024\r\nIs debug build: No\r\nCUDA used to build PyTorch: 9.0.176\r\n\r\nOS: Ubuntu 16.04.4 LTS\r\nGCC version: (Ubuntu 5.4.0-6ubuntu1~16.04.10) 5.4.0 20160609\r\nCMake version: version 3.5.1\r\n\r\nPython version: 3.6\r\nIs CUDA available: Yes\r\nCUDA runtime version: 9.1.85\r\nGPU models and configuration:\r\nGPU 0: GeForce GTX 1080\r\nGPU 1: GeForce GTX 1080\r\nGPU 2: GeForce GTX 1080\r\nGPU 3: GeForce GTX 1080\r\n\r\nNvidia driver version: 390.48\r\ncuDNN version: Probably one of the following:\r\n/usr/lib/x86_64-linux-gnu/libcudnn.so.6.0.21\r\n/usr/lib/x86_64-linux-gnu/libcudnn_static.a\r\n/usr/local/cuda-8.0/lib64/libcudnn.so\r\n/usr/local/cuda-8.0/lib64/libcudnn.so.5\r\n/usr/local/cuda-8.0/lib64/libcudnn.so.5.1.5\r\n/usr/local/cuda-8.0/lib64/libcudnn.so.6\r\n/usr/local/cuda-8.0/lib64/libcudnn.so.6.0.21\r\n/usr/local/cuda-8.0/lib64/libcudnn_static.a\r\n/usr/local/cuda-9.1/lib64/libcudnn.so\r\n/usr/local/cuda-9.1/lib64/libcudnn.so.7\r\n/usr/local/cuda-9.1/lib64/libcudnn.so.7.1.3\r\n/usr/local/cuda-9.1/lib64/libcudnn_static.a\r\n\r\nVersions of relevant libraries:\r\n[pip] numpy (1.15.2)\r\n[pip] torch (1.0.0.dev20181024)\r\n[pip] torchaudio (0.1)\r\n[pip] torchvision (0.2.1)\r\n[conda] pytorch                   0.4.1           py36_py35_py27__9.0.176_7.1.2_2    pytorch\r\n[conda] pytorch-nightly           1.0.0.dev20181024 py3.6_cuda9.0.176_cudnn7.1.2_0    pytorch\r\n[conda] torchaudio                0.1                       <pip>\r\n[conda] torchvision               0.2.1                    py36_1    pytorch\r\n```\r\n"}