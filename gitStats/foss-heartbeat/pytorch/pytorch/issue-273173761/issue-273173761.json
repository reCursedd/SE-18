{"url": "https://api.github.com/repos/pytorch/pytorch/issues/3647", "repository_url": "https://api.github.com/repos/pytorch/pytorch", "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/3647/labels{/name}", "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/3647/comments", "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/3647/events", "html_url": "https://github.com/pytorch/pytorch/pull/3647", "id": 273173761, "node_id": "MDExOlB1bGxSZXF1ZXN0MTUyMDczNjA3", "number": 3647, "title": "Minor fixes for convolution", "user": {"login": "apaszke", "id": 4583066, "node_id": "MDQ6VXNlcjQ1ODMwNjY=", "avatar_url": "https://avatars3.githubusercontent.com/u/4583066?v=4", "gravatar_id": "", "url": "https://api.github.com/users/apaszke", "html_url": "https://github.com/apaszke", "followers_url": "https://api.github.com/users/apaszke/followers", "following_url": "https://api.github.com/users/apaszke/following{/other_user}", "gists_url": "https://api.github.com/users/apaszke/gists{/gist_id}", "starred_url": "https://api.github.com/users/apaszke/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/apaszke/subscriptions", "organizations_url": "https://api.github.com/users/apaszke/orgs", "repos_url": "https://api.github.com/users/apaszke/repos", "events_url": "https://api.github.com/users/apaszke/events{/privacy}", "received_events_url": "https://api.github.com/users/apaszke/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2017-11-11T20:27:49Z", "updated_at": "2017-11-21T01:18:13Z", "closed_at": "2017-11-16T23:13:28Z", "author_association": "MEMBER", "pull_request": {"url": "https://api.github.com/repos/pytorch/pytorch/pulls/3647", "html_url": "https://github.com/pytorch/pytorch/pull/3647", "diff_url": "https://github.com/pytorch/pytorch/pull/3647.diff", "patch_url": "https://github.com/pytorch/pytorch/pull/3647.patch"}, "body_html": "<ul>\n<li>I got quite nervous when looking at <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load issue title\" data-id=\"273072526\" data-permission-text=\"Issue title is private\" data-url=\"https://github.com/pytorch/pytorch/issues/3631\" data-hovercard-type=\"pull_request\" data-hovercard-url=\"/pytorch/pytorch/pull/3631/hovercard\" href=\"https://github.com/pytorch/pytorch/pull/3631\">#3631</a> - we have those lists of cuDNN algorithms, but it's really easy to miss a new algo if it was to be added. I addded <code>static_assert</code>s to make sure that we have a full list, and it turned out that there is one algo missing in backward filter, but it's marked as not implemented in cudnn headers.</li>\n<li>Currently, when doing size checks with groups, we divide by the group count instead of multiplying the other side. Since there's a floor after division, this means that we could have accepted inputs of incorrect sizes.</li>\n</ul>\n<p><a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=13564\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/ezyang\">@ezyang</a> let me know if you want to merge this first, or if I should rebase the fixes on top of your thing</p>", "body_text": "I got quite nervous when looking at #3631 - we have those lists of cuDNN algorithms, but it's really easy to miss a new algo if it was to be added. I addded static_asserts to make sure that we have a full list, and it turned out that there is one algo missing in backward filter, but it's marked as not implemented in cudnn headers.\nCurrently, when doing size checks with groups, we divide by the group count instead of multiplying the other side. Since there's a floor after division, this means that we could have accepted inputs of incorrect sizes.\n\n@ezyang let me know if you want to merge this first, or if I should rebase the fixes on top of your thing", "body": "* I got quite nervous when looking at #3631 - we have those lists of cuDNN algorithms, but it's really easy to miss a new algo if it was to be added. I addded `static_assert`s to make sure that we have a full list, and it turned out that there is one algo missing in backward filter, but it's marked as not implemented in cudnn headers.\r\n* Currently, when doing size checks with groups, we divide by the group count instead of multiplying the other side. Since there's a floor after division, this means that we could have accepted inputs of incorrect sizes.\r\n\r\n@ezyang let me know if you want to merge this first, or if I should rebase the fixes on top of your thing"}