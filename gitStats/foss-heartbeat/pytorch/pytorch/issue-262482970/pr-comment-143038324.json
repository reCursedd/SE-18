{"url": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/143038324", "pull_request_review_id": 67491616, "id": 143038324, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE0MzAzODMyNA==", "diff_hunk": "@@ -208,6 +209,7 @@ THTensor* THPTensor_(fromNumpy)(PyObject *numpy_array) {\n       switch (PyArray_TYPE(array)) {\n         case NPY_DOUBLE: COPY_FROM_ARRAY(double,  array, storage, storage_size); break;\n         case NPY_FLOAT:  COPY_FROM_ARRAY(float,   array, storage, storage_size); break;\n+        case NPY_HALF:   COPY_FROM_ARRAY(float,   array, storage, storage_size); break;", "path": "torch/csrc/generic/Tensor.cpp", "position": null, "original_position": 27, "commit_id": "4c2a17d2a6903d2b0f1b01bf9d7b961bed4fbb72", "original_commit_id": "344b1241c6e8eb91112dd3a3e62374ffa85b0387", "user": {"login": "apaszke", "id": 4583066, "node_id": "MDQ6VXNlcjQ1ODMwNjY=", "avatar_url": "https://avatars3.githubusercontent.com/u/4583066?v=4", "gravatar_id": "", "url": "https://api.github.com/users/apaszke", "html_url": "https://github.com/apaszke", "followers_url": "https://api.github.com/users/apaszke/followers", "following_url": "https://api.github.com/users/apaszke/following{/other_user}", "gists_url": "https://api.github.com/users/apaszke/gists{/gist_id}", "starred_url": "https://api.github.com/users/apaszke/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/apaszke/subscriptions", "organizations_url": "https://api.github.com/users/apaszke/orgs", "repos_url": "https://api.github.com/users/apaszke/repos", "events_url": "https://api.github.com/users/apaszke/events{/privacy}", "received_events_url": "https://api.github.com/users/apaszke/received_events", "type": "User", "site_admin": false}, "body": "I don't think that will work. It will cast the data pointer to float and use this to do assignments. What I meant is that you would change these `CUDA_COPY_FROM_ARRAY` macros to be much more similar to the CPU-side ones (i.e. just do a cudaMemcpy). Do you have experience with CUDA programming and know how to do this? If not I can fix it on top of your commits.", "created_at": "2017-10-05T19:45:00Z", "updated_at": "2018-11-23T15:35:04Z", "html_url": "https://github.com/pytorch/pytorch/pull/2953#discussion_r143038324", "pull_request_url": "https://api.github.com/repos/pytorch/pytorch/pulls/2953", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/143038324"}, "html": {"href": "https://github.com/pytorch/pytorch/pull/2953#discussion_r143038324"}, "pull_request": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/2953"}}, "body_html": "<p>I don't think that will work. It will cast the data pointer to float and use this to do assignments. What I meant is that you would change these <code>CUDA_COPY_FROM_ARRAY</code> macros to be much more similar to the CPU-side ones (i.e. just do a cudaMemcpy). Do you have experience with CUDA programming and know how to do this? If not I can fix it on top of your commits.</p>", "body_text": "I don't think that will work. It will cast the data pointer to float and use this to do assignments. What I meant is that you would change these CUDA_COPY_FROM_ARRAY macros to be much more similar to the CPU-side ones (i.e. just do a cudaMemcpy). Do you have experience with CUDA programming and know how to do this? If not I can fix it on top of your commits."}