{"url": "https://api.github.com/repos/pytorch/pytorch/issues/comments/334691440", "html_url": "https://github.com/pytorch/pytorch/pull/2953#issuecomment-334691440", "issue_url": "https://api.github.com/repos/pytorch/pytorch/issues/2953", "id": 334691440, "node_id": "MDEyOklzc3VlQ29tbWVudDMzNDY5MTQ0MA==", "user": {"login": "kohr-h", "id": 5030250, "node_id": "MDQ6VXNlcjUwMzAyNTA=", "avatar_url": "https://avatars2.githubusercontent.com/u/5030250?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kohr-h", "html_url": "https://github.com/kohr-h", "followers_url": "https://api.github.com/users/kohr-h/followers", "following_url": "https://api.github.com/users/kohr-h/following{/other_user}", "gists_url": "https://api.github.com/users/kohr-h/gists{/gist_id}", "starred_url": "https://api.github.com/users/kohr-h/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kohr-h/subscriptions", "organizations_url": "https://api.github.com/users/kohr-h/orgs", "repos_url": "https://api.github.com/users/kohr-h/repos", "events_url": "https://api.github.com/users/kohr-h/events{/privacy}", "received_events_url": "https://api.github.com/users/kohr-h/received_events", "type": "User", "site_admin": false}, "created_at": "2017-10-06T08:25:04Z", "updated_at": "2017-10-06T08:25:04Z", "author_association": "CONTRIBUTOR", "body_html": "<blockquote>\n<p>It gives you garbage only because you're giving storage_size to memcpy, while you should have gave it storage_size * sizeof(type)</p>\n</blockquote>\n<p>Fair enough, but there's still the issue with unmatched data types. Everything is fine as long as I use the constructor <code>FloatTensor</code> for a <code>float32</code> Numpy array, but as soon as I change the tensor type the results are garbage.</p>", "body_text": "It gives you garbage only because you're giving storage_size to memcpy, while you should have gave it storage_size * sizeof(type)\n\nFair enough, but there's still the issue with unmatched data types. Everything is fine as long as I use the constructor FloatTensor for a float32 Numpy array, but as soon as I change the tensor type the results are garbage.", "body": "> It gives you garbage only because you're giving storage_size to memcpy, while you should have gave it storage_size * sizeof(type)\r\n\r\nFair enough, but there's still the issue with unmatched data types. Everything is fine as long as I use the constructor `FloatTensor` for a `float32` Numpy array, but as soon as I change the tensor type the results are garbage."}