{"url": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/142957521", "pull_request_review_id": 67397632, "id": 142957521, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE0Mjk1NzUyMQ==", "diff_hunk": "@@ -206,12 +207,13 @@ THTensor* THPTensor_(fromNumpy)(PyObject *numpy_array) {\n     {\n       THStoragePtr storage(THStorage_(newWithSize)(LIBRARY_STATE storage_size));\n       switch (PyArray_TYPE(array)) {\n-        case NPY_DOUBLE: COPY_FROM_ARRAY(double,  array, storage, storage_size); break;\n-        case NPY_FLOAT:  COPY_FROM_ARRAY(float,   array, storage, storage_size); break;\n-        case NPY_INT64:  COPY_FROM_ARRAY(int64_t, array, storage, storage_size); break;\n-        case NPY_INT32:  COPY_FROM_ARRAY(int32_t, array, storage, storage_size); break;\n-        case NPY_INT16:  COPY_FROM_ARRAY(int16_t, array, storage, storage_size); break;\n-        case NPY_UINT8:  COPY_FROM_ARRAY(uint8_t, array, storage, storage_size); break;\n+        case NPY_DOUBLE: COPY_FROM_ARRAY(char, array, storage, storage_size); break;\n+        case NPY_FLOAT:  COPY_FROM_ARRAY(char, array, storage, storage_size); break;\n+        case NPY_HALF:   COPY_FROM_ARRAY(char, array, storage, storage_size); break;\n+        case NPY_INT64:  COPY_FROM_ARRAY(char, array, storage, storage_size); break;\n+        case NPY_INT32:  COPY_FROM_ARRAY(char, array, storage, storage_size); break;\n+        case NPY_INT16:  COPY_FROM_ARRAY(char, array, storage, storage_size); break;\n+        case NPY_UINT8:  COPY_FROM_ARRAY(char, array, storage, storage_size); break;", "path": "torch/csrc/generic/Tensor.cpp", "position": null, "original_position": 39, "commit_id": "4c2a17d2a6903d2b0f1b01bf9d7b961bed4fbb72", "original_commit_id": "9a00ba9ec3f11cbbb80f6cfbce6292ec37ac4e4c", "user": {"login": "kohr-h", "id": 5030250, "node_id": "MDQ6VXNlcjUwMzAyNTA=", "avatar_url": "https://avatars2.githubusercontent.com/u/5030250?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kohr-h", "html_url": "https://github.com/kohr-h", "followers_url": "https://api.github.com/users/kohr-h/followers", "following_url": "https://api.github.com/users/kohr-h/following{/other_user}", "gists_url": "https://api.github.com/users/kohr-h/gists{/gist_id}", "starred_url": "https://api.github.com/users/kohr-h/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kohr-h/subscriptions", "organizations_url": "https://api.github.com/users/kohr-h/orgs", "repos_url": "https://api.github.com/users/kohr-h/repos", "events_url": "https://api.github.com/users/kohr-h/events{/privacy}", "received_events_url": "https://api.github.com/users/kohr-h/received_events", "type": "User", "site_admin": false}, "body": "Hm, looking at this again, I made these changes with CPU in mind, but now I wonder why they don't break the CUDA copy.\r\nI guess I should put in the old types again and use `float` for HALF as dummy.", "created_at": "2017-10-05T14:39:44Z", "updated_at": "2018-11-23T15:35:01Z", "html_url": "https://github.com/pytorch/pytorch/pull/2953#discussion_r142957521", "pull_request_url": "https://api.github.com/repos/pytorch/pytorch/pulls/2953", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/142957521"}, "html": {"href": "https://github.com/pytorch/pytorch/pull/2953#discussion_r142957521"}, "pull_request": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/2953"}}, "body_html": "<p>Hm, looking at this again, I made these changes with CPU in mind, but now I wonder why they don't break the CUDA copy.<br>\nI guess I should put in the old types again and use <code>float</code> for HALF as dummy.</p>", "body_text": "Hm, looking at this again, I made these changes with CPU in mind, but now I wonder why they don't break the CUDA copy.\nI guess I should put in the old types again and use float for HALF as dummy."}