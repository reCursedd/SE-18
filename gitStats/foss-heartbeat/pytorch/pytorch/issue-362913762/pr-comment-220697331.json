{"url": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/220697331", "pull_request_review_id": 159166029, "id": 220697331, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIyMDY5NzMzMQ==", "diff_hunk": "@@ -223,9 +223,10 @@ def main():\n     # if their execution times are very different.\n     cuda_prof_exec_time = cpu_time_total(autograd_prof_cuda)\n     cpu_prof_exec_time = cpu_time_total(autograd_prof_cpu)\n-    pct_diff = cuda_prof_exec_time - cpu_prof_exec_time / cuda_prof_exec_time\n-    if abs(pct_diff) > 0.05:\n-        print_autograd_prof_summary(autograd_prof_cpu, 'CPU', autograd_prof_sortby, autograd_prof_topk)\n+    if cuda_prof_exec_time > 1e-6:\n+        pct_diff = cuda_prof_exec_time - cpu_prof_exec_time / cuda_prof_exec_time", "path": "torch/utils/bottleneck/__main__.py", "position": null, "original_position": 8, "commit_id": "1144eaa6283c81fa71453e88ba8efff2cfee2d34", "original_commit_id": "00e4deebf83e84e2a274fa416b9a8d04035778b4", "user": {"login": "zou3519", "id": 5652049, "node_id": "MDQ6VXNlcjU2NTIwNDk=", "avatar_url": "https://avatars3.githubusercontent.com/u/5652049?v=4", "gravatar_id": "", "url": "https://api.github.com/users/zou3519", "html_url": "https://github.com/zou3519", "followers_url": "https://api.github.com/users/zou3519/followers", "following_url": "https://api.github.com/users/zou3519/following{/other_user}", "gists_url": "https://api.github.com/users/zou3519/gists{/gist_id}", "starred_url": "https://api.github.com/users/zou3519/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/zou3519/subscriptions", "organizations_url": "https://api.github.com/users/zou3519/orgs", "repos_url": "https://api.github.com/users/zou3519/repos", "events_url": "https://api.github.com/users/zou3519/events{/privacy}", "received_events_url": "https://api.github.com/users/zou3519/received_events", "type": "User", "site_admin": false}, "body": "Yes, that looks reasonable.\r\n\r\nI'm not sure what the type of 'cuda_prof_exec_time' and 'cpu_prof_exec_time' are -- if they're python ints we should not be using the '/' operator (or we should `from future import __division__` at the top of this file so it works out.", "created_at": "2018-09-26T19:40:28Z", "updated_at": "2018-11-23T15:52:03Z", "html_url": "https://github.com/pytorch/pytorch/pull/11987#discussion_r220697331", "pull_request_url": "https://api.github.com/repos/pytorch/pytorch/pulls/11987", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/220697331"}, "html": {"href": "https://github.com/pytorch/pytorch/pull/11987#discussion_r220697331"}, "pull_request": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/11987"}}, "body_html": "<p>Yes, that looks reasonable.</p>\n<p>I'm not sure what the type of 'cuda_prof_exec_time' and 'cpu_prof_exec_time' are -- if they're python ints we should not be using the '/' operator (or we should <code>from future import __division__</code> at the top of this file so it works out.</p>", "body_text": "Yes, that looks reasonable.\nI'm not sure what the type of 'cuda_prof_exec_time' and 'cpu_prof_exec_time' are -- if they're python ints we should not be using the '/' operator (or we should from future import __division__ at the top of this file so it works out.", "in_reply_to_id": 220296391}