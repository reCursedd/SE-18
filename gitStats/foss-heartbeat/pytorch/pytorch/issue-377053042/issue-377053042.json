{"url": "https://api.github.com/repos/pytorch/pytorch/issues/13544", "repository_url": "https://api.github.com/repos/pytorch/pytorch", "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/13544/labels{/name}", "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/13544/comments", "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/13544/events", "html_url": "https://github.com/pytorch/pytorch/issues/13544", "id": 377053042, "node_id": "MDU6SXNzdWUzNzcwNTMwNDI=", "number": 13544, "title": "MKLDNN doesn't link MKL and Intel OMP during PyTorch build", "user": {"login": "h6197627", "id": 44726212, "node_id": "MDQ6VXNlcjQ0NzI2MjEy", "avatar_url": "https://avatars1.githubusercontent.com/u/44726212?v=4", "gravatar_id": "", "url": "https://api.github.com/users/h6197627", "html_url": "https://github.com/h6197627", "followers_url": "https://api.github.com/users/h6197627/followers", "following_url": "https://api.github.com/users/h6197627/following{/other_user}", "gists_url": "https://api.github.com/users/h6197627/gists{/gist_id}", "starred_url": "https://api.github.com/users/h6197627/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/h6197627/subscriptions", "organizations_url": "https://api.github.com/users/h6197627/orgs", "repos_url": "https://api.github.com/users/h6197627/repos", "events_url": "https://api.github.com/users/h6197627/events{/privacy}", "received_events_url": "https://api.github.com/users/h6197627/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 778855555, "node_id": "MDU6TGFiZWw3Nzg4NTU1NTU=", "url": "https://api.github.com/repos/pytorch/pytorch/labels/build", "name": "build", "color": "bfdadc", "default": false}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-11-03T13:09:08Z", "updated_at": "2018-11-18T20:41:18Z", "closed_at": "2018-11-18T20:41:18Z", "author_association": "NONE", "body_html": "<h2><g-emoji class=\"g-emoji\" alias=\"bug\" fallback-src=\"https://assets-cdn.github.com/images/icons/emoji/unicode/1f41b.png\">\ud83d\udc1b</g-emoji> Bug</h2>\n<p>MKLDNN shared library built as a part of IDEEP interface does not link Intel MKL and Intel OMP. This happens because PyTorch's cmake/Modules/FindMKL.cmake script sets MKL_cmake_included variable to true and when it comes to configuring MKLDNN in third_party/ideep/mkl-dnn/cmake/MKL.cmake script it returns from the first line</p>\n<pre><code>if(MKL_cmake_included)\n    return()\nendif()\n</code></pre>\n<p>However, according to MKLDNN's MKL configuration script it should be linked with other libraries than PyTorch: MKLDNN uses either downloaded MKL-small or mkl_rt and PyTorch uses mkl_intel_lp64, mkl_gnu_thread,  mkl_core. So probably due to misconfiguration it is not linked with MKL and Intel OMP (it uses libgomp.so insted).</p>\n<p>Before <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load issue title\" data-id=\"364917395\" data-permission-text=\"Issue title is private\" data-url=\"https://github.com/pytorch/pytorch/issues/12170\" data-hovercard-type=\"pull_request\" data-hovercard-url=\"/pytorch/pytorch/pull/12170/hovercard\" href=\"https://github.com/pytorch/pytorch/pull/12170\">#12170</a> it was possible to provide system MKLDNN, but now unfortunately I can't do it. Maybe there is any way to still do it? Also it forces users to run outdated MKLDNN 0.14 version and it is possible to compile 0.16 with various speed improvements (and correct linkage).</p>\n<h2>To Reproduce</h2>\n<blockquote>\n<p>USE_MKLDNN=1 python3 setup.py build<br>\nldd build/lib/libmkldnn.so</p>\n</blockquote>\n<h2>Expected behavior</h2>\n<p>libmkldnn.so should be linked with Intel MKL and Intel OMP libraries.</p>\n<h2>Environment</h2>\n<ul>\n<li>PyTorch Version (e.g., 1.0): 1.0.0a0+0479517</li>\n<li>OS (e.g., Linux): Ubuntu 18.04</li>\n<li>How you installed PyTorch (<code>conda</code>, <code>pip</code>, source): source</li>\n<li>Build command you used (if compiling from source): USE_MKLDNN=1 python3 setup.py build</li>\n<li>Python version: 3.6.6</li>\n</ul>", "body_text": "\ud83d\udc1b Bug\nMKLDNN shared library built as a part of IDEEP interface does not link Intel MKL and Intel OMP. This happens because PyTorch's cmake/Modules/FindMKL.cmake script sets MKL_cmake_included variable to true and when it comes to configuring MKLDNN in third_party/ideep/mkl-dnn/cmake/MKL.cmake script it returns from the first line\nif(MKL_cmake_included)\n    return()\nendif()\n\nHowever, according to MKLDNN's MKL configuration script it should be linked with other libraries than PyTorch: MKLDNN uses either downloaded MKL-small or mkl_rt and PyTorch uses mkl_intel_lp64, mkl_gnu_thread,  mkl_core. So probably due to misconfiguration it is not linked with MKL and Intel OMP (it uses libgomp.so insted).\nBefore #12170 it was possible to provide system MKLDNN, but now unfortunately I can't do it. Maybe there is any way to still do it? Also it forces users to run outdated MKLDNN 0.14 version and it is possible to compile 0.16 with various speed improvements (and correct linkage).\nTo Reproduce\n\nUSE_MKLDNN=1 python3 setup.py build\nldd build/lib/libmkldnn.so\n\nExpected behavior\nlibmkldnn.so should be linked with Intel MKL and Intel OMP libraries.\nEnvironment\n\nPyTorch Version (e.g., 1.0): 1.0.0a0+0479517\nOS (e.g., Linux): Ubuntu 18.04\nHow you installed PyTorch (conda, pip, source): source\nBuild command you used (if compiling from source): USE_MKLDNN=1 python3 setup.py build\nPython version: 3.6.6", "body": "## \ud83d\udc1b Bug\r\n\r\nMKLDNN shared library built as a part of IDEEP interface does not link Intel MKL and Intel OMP. This happens because PyTorch's cmake/Modules/FindMKL.cmake script sets MKL_cmake_included variable to true and when it comes to configuring MKLDNN in third_party/ideep/mkl-dnn/cmake/MKL.cmake script it returns from the first line\r\n```\r\nif(MKL_cmake_included)\r\n    return()\r\nendif()\r\n```\r\nHowever, according to MKLDNN's MKL configuration script it should be linked with other libraries than PyTorch: MKLDNN uses either downloaded MKL-small or mkl_rt and PyTorch uses mkl_intel_lp64, mkl_gnu_thread,  mkl_core. So probably due to misconfiguration it is not linked with MKL and Intel OMP (it uses libgomp.so insted).\r\n\r\nBefore #12170 it was possible to provide system MKLDNN, but now unfortunately I can't do it. Maybe there is any way to still do it? Also it forces users to run outdated MKLDNN 0.14 version and it is possible to compile 0.16 with various speed improvements (and correct linkage).\r\n\r\n## To Reproduce\r\n\r\n> USE_MKLDNN=1 python3 setup.py build\r\n> ldd build/lib/libmkldnn.so\r\n\r\n## Expected behavior\r\n\r\nlibmkldnn.so should be linked with Intel MKL and Intel OMP libraries.\r\n\r\n## Environment\r\n - PyTorch Version (e.g., 1.0): 1.0.0a0+0479517\r\n - OS (e.g., Linux): Ubuntu 18.04\r\n - How you installed PyTorch (`conda`, `pip`, source): source\r\n - Build command you used (if compiling from source): USE_MKLDNN=1 python3 setup.py build\r\n - Python version: 3.6.6\r\n"}