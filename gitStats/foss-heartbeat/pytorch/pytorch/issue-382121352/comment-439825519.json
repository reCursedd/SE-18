{"url": "https://api.github.com/repos/pytorch/pytorch/issues/comments/439825519", "html_url": "https://github.com/pytorch/pytorch/issues/14184#issuecomment-439825519", "issue_url": "https://api.github.com/repos/pytorch/pytorch/issues/14184", "id": 439825519, "node_id": "MDEyOklzc3VlQ29tbWVudDQzOTgyNTUxOQ==", "user": {"login": "kasparlund", "id": 679479, "node_id": "MDQ6VXNlcjY3OTQ3OQ==", "avatar_url": "https://avatars0.githubusercontent.com/u/679479?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kasparlund", "html_url": "https://github.com/kasparlund", "followers_url": "https://api.github.com/users/kasparlund/followers", "following_url": "https://api.github.com/users/kasparlund/following{/other_user}", "gists_url": "https://api.github.com/users/kasparlund/gists{/gist_id}", "starred_url": "https://api.github.com/users/kasparlund/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kasparlund/subscriptions", "organizations_url": "https://api.github.com/users/kasparlund/orgs", "repos_url": "https://api.github.com/users/kasparlund/repos", "events_url": "https://api.github.com/users/kasparlund/events{/privacy}", "received_events_url": "https://api.github.com/users/kasparlund/received_events", "type": "User", "site_admin": false}, "created_at": "2018-11-19T09:24:59Z", "updated_at": "2018-11-19T09:31:47Z", "author_association": "NONE", "body_html": "<p>ubs i confirm that this is still an issue.<br>\nThe result of nn.CrossEntropyLoss(weight=w)(x, y) is the same as for all weights = 1</p>\n<p>x = torch.randn(2, 4)<br>\ny = torch.LongTensor(2).random_(4)<br>\nw = torch.rand(4)<br>\nx,y,w<br>\nnn.CrossEntropyLoss(weight=w, reduction=\"none\")(x, y), nn.CrossEntropyLoss(weight=w)(x, y)</p>", "body_text": "ubs i confirm that this is still an issue.\nThe result of nn.CrossEntropyLoss(weight=w)(x, y) is the same as for all weights = 1\nx = torch.randn(2, 4)\ny = torch.LongTensor(2).random_(4)\nw = torch.rand(4)\nx,y,w\nnn.CrossEntropyLoss(weight=w, reduction=\"none\")(x, y), nn.CrossEntropyLoss(weight=w)(x, y)", "body": "ubs i confirm that this is still an issue.\r\nThe result of nn.CrossEntropyLoss(weight=w)(x, y) is the same as for all weights = 1\r\n\r\nx = torch.randn(2, 4)\r\ny = torch.LongTensor(2).random_(4)\r\nw = torch.rand(4)\r\nx,y,w\r\nnn.CrossEntropyLoss(weight=w, reduction=\"none\")(x, y), nn.CrossEntropyLoss(weight=w)(x, y) \r\n"}