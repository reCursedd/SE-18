{"url": "https://api.github.com/repos/pytorch/pytorch/issues/comments/383694670", "html_url": "https://github.com/pytorch/pytorch/issues/6874#issuecomment-383694670", "issue_url": "https://api.github.com/repos/pytorch/pytorch/issues/6874", "id": 383694670, "node_id": "MDEyOklzc3VlQ29tbWVudDM4MzY5NDY3MA==", "user": {"login": "zou3519", "id": 5652049, "node_id": "MDQ6VXNlcjU2NTIwNDk=", "avatar_url": "https://avatars3.githubusercontent.com/u/5652049?v=4", "gravatar_id": "", "url": "https://api.github.com/users/zou3519", "html_url": "https://github.com/zou3519", "followers_url": "https://api.github.com/users/zou3519/followers", "following_url": "https://api.github.com/users/zou3519/following{/other_user}", "gists_url": "https://api.github.com/users/zou3519/gists{/gist_id}", "starred_url": "https://api.github.com/users/zou3519/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/zou3519/subscriptions", "organizations_url": "https://api.github.com/users/zou3519/orgs", "repos_url": "https://api.github.com/users/zou3519/repos", "events_url": "https://api.github.com/users/zou3519/events{/privacy}", "received_events_url": "https://api.github.com/users/zou3519/received_events", "type": "User", "site_admin": false}, "created_at": "2018-04-23T19:30:21Z", "updated_at": "2018-04-23T19:30:36Z", "author_association": "CONTRIBUTOR", "body_html": "<p>It sounds like it's not implemented for CUDA. For now you can do the following:</p>\n<pre><code>cpu = torch.device('cpu')\ntensor = torch.randperm(..., device=cpu)\nnew_tensor = tensor.cuda()  # and also call new_tensor.requires_grad_() if necessary\n</code></pre>", "body_text": "It sounds like it's not implemented for CUDA. For now you can do the following:\ncpu = torch.device('cpu')\ntensor = torch.randperm(..., device=cpu)\nnew_tensor = tensor.cuda()  # and also call new_tensor.requires_grad_() if necessary", "body": "It sounds like it's not implemented for CUDA. For now you can do the following:\r\n\r\n```\r\ncpu = torch.device('cpu')\r\ntensor = torch.randperm(..., device=cpu)\r\nnew_tensor = tensor.cuda()  # and also call new_tensor.requires_grad_() if necessary\r\n```"}