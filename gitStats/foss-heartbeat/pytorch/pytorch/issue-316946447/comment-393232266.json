{"url": "https://api.github.com/repos/pytorch/pytorch/issues/comments/393232266", "html_url": "https://github.com/pytorch/pytorch/issues/6874#issuecomment-393232266", "issue_url": "https://api.github.com/repos/pytorch/pytorch/issues/6874", "id": 393232266, "node_id": "MDEyOklzc3VlQ29tbWVudDM5MzIzMjI2Ng==", "user": {"login": "unnir", "id": 1344378, "node_id": "MDQ6VXNlcjEzNDQzNzg=", "avatar_url": "https://avatars2.githubusercontent.com/u/1344378?v=4", "gravatar_id": "", "url": "https://api.github.com/users/unnir", "html_url": "https://github.com/unnir", "followers_url": "https://api.github.com/users/unnir/followers", "following_url": "https://api.github.com/users/unnir/following{/other_user}", "gists_url": "https://api.github.com/users/unnir/gists{/gist_id}", "starred_url": "https://api.github.com/users/unnir/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/unnir/subscriptions", "organizations_url": "https://api.github.com/users/unnir/orgs", "repos_url": "https://api.github.com/users/unnir/repos", "events_url": "https://api.github.com/users/unnir/events{/privacy}", "received_events_url": "https://api.github.com/users/unnir/received_events", "type": "User", "site_admin": false}, "created_at": "2018-05-30T16:45:54Z", "updated_at": "2018-05-30T16:45:54Z", "author_association": "NONE", "body_html": "<p>Ok, I solved the issue by changing two lines in the  <code>utils/data/sampler.py</code> file.</p>\n<div class=\"highlight highlight-source-python\"><pre><span class=\"pl-k\">class</span> <span class=\"pl-en\">RandomSampler</span>(<span class=\"pl-e\">Sampler</span>):\n    <span class=\"pl-s\"><span class=\"pl-k\">r</span><span class=\"pl-pds\">\"\"\"</span>Samples elements randomly, without replacement.</span>\n<span class=\"pl-s\"></span>\n<span class=\"pl-s\">    Arguments:</span>\n<span class=\"pl-s\">        data_source (Dataset): dataset to sample from</span>\n<span class=\"pl-s\">    <span class=\"pl-pds\">\"\"\"</span></span>\n\n    <span class=\"pl-k\">def</span> <span class=\"pl-c1\">__init__</span>(<span class=\"pl-smi\"><span class=\"pl-smi\">self</span></span>, <span class=\"pl-smi\">data_source</span>):\n        <span class=\"pl-c1\">self</span>.data_source <span class=\"pl-k\">=</span> data_source\n\n    <span class=\"pl-k\">def</span> <span class=\"pl-c1\">__iter__</span>(<span class=\"pl-smi\"><span class=\"pl-smi\">self</span></span>):\n        cpu <span class=\"pl-k\">=</span> torch.device(<span class=\"pl-s\"><span class=\"pl-pds\">'</span>cpu<span class=\"pl-pds\">'</span></span>)\n        <span class=\"pl-k\">return</span> <span class=\"pl-c1\">iter</span>( torch.randperm( <span class=\"pl-c1\">len</span>(<span class=\"pl-c1\">self</span>.data_source), <span class=\"pl-v\">device</span> <span class=\"pl-k\">=</span> cpu).tolist())\n\n    <span class=\"pl-k\">def</span> <span class=\"pl-c1\">__len__</span>(<span class=\"pl-smi\"><span class=\"pl-smi\">self</span></span>):\n        <span class=\"pl-k\">return</span> <span class=\"pl-c1\">len</span>(<span class=\"pl-c1\">self</span>.data_source)</pre></div>\n<p><strong>if</strong> it is okay, I can PR.</p>", "body_text": "Ok, I solved the issue by changing two lines in the  utils/data/sampler.py file.\nclass RandomSampler(Sampler):\n    r\"\"\"Samples elements randomly, without replacement.\n\n    Arguments:\n        data_source (Dataset): dataset to sample from\n    \"\"\"\n\n    def __init__(self, data_source):\n        self.data_source = data_source\n\n    def __iter__(self):\n        cpu = torch.device('cpu')\n        return iter( torch.randperm( len(self.data_source), device = cpu).tolist())\n\n    def __len__(self):\n        return len(self.data_source)\nif it is okay, I can PR.", "body": "Ok, I solved the issue by changing two lines in the  `utils/data/sampler.py` file.\r\n\r\n```python\r\nclass RandomSampler(Sampler):\r\n    r\"\"\"Samples elements randomly, without replacement.\r\n\r\n    Arguments:\r\n        data_source (Dataset): dataset to sample from\r\n    \"\"\"\r\n\r\n    def __init__(self, data_source):\r\n        self.data_source = data_source\r\n\r\n    def __iter__(self):\r\n        cpu = torch.device('cpu')\r\n        return iter( torch.randperm( len(self.data_source), device = cpu).tolist())\r\n\r\n    def __len__(self):\r\n        return len(self.data_source)\r\n```\r\n\r\n**if** it is okay, I can PR. \r\n\r\n\r\n"}