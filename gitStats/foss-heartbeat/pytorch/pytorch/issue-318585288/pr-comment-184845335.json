{"url": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/184845335", "pull_request_review_id": 116127172, "id": 184845335, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4NDg0NTMzNQ==", "diff_hunk": "@@ -106,6 +106,83 @@ def test_optional(self):\n         has_value = cpp_extension.function_taking_optional(None)\n         self.assertFalse(has_value)\n \n+    def test_inline_jit_compile_extension(self):\n+        cpp_source1 = '''\n+        #include <torch/torch.h>\n+        at::Tensor sin_add(at::Tensor x, at::Tensor y) {\n+          return x.sin() + y.sin();\n+        }\n+        '''\n+\n+        cpp_source2 = '''\n+        #include <torch/torch.h>\n+        at::Tensor sin_add(at::Tensor x, at::Tensor y);\n+        PYBIND11_MODULE(TORCH_EXTENSION_NAME, m) {", "path": "test/test_cpp_extensions.py", "position": 73, "original_position": 15, "commit_id": "6a5cda0edd38b23627b86930ca7bf7632a87b69b", "original_commit_id": "ce8080af299376b0b37c1331a8fdc0ee789e356b", "user": {"login": "fmassa", "id": 9110200, "node_id": "MDQ6VXNlcjkxMTAyMDA=", "avatar_url": "https://avatars2.githubusercontent.com/u/9110200?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fmassa", "html_url": "https://github.com/fmassa", "followers_url": "https://api.github.com/users/fmassa/followers", "following_url": "https://api.github.com/users/fmassa/following{/other_user}", "gists_url": "https://api.github.com/users/fmassa/gists{/gist_id}", "starred_url": "https://api.github.com/users/fmassa/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fmassa/subscriptions", "organizations_url": "https://api.github.com/users/fmassa/orgs", "repos_url": "https://api.github.com/users/fmassa/repos", "events_url": "https://api.github.com/users/fmassa/events{/privacy}", "received_events_url": "https://api.github.com/users/fmassa/received_events", "type": "User", "site_admin": false}, "body": "A random idea: it could be possible to auto generate the `PYBIND11_MODULE` by letting the user specify a list of tuples (or dict) in python, that define the necessary arguments for pybind.\r\n\r\nFor example, if we have a list of dicts to be passed as a `signatures` keyword to `load_inline`, the user would be able to just call with  `signatures=[{'name': 'sin_add', 'doc': 'sin(a) + sin(b)'}]` and let `cname` be inferred from `name`.\r\n\r\nWhat do you think?", "created_at": "2018-04-28T08:27:45Z", "updated_at": "2018-11-23T15:43:23Z", "html_url": "https://github.com/pytorch/pytorch/pull/7059#discussion_r184845335", "pull_request_url": "https://api.github.com/repos/pytorch/pytorch/pulls/7059", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/184845335"}, "html": {"href": "https://github.com/pytorch/pytorch/pull/7059#discussion_r184845335"}, "pull_request": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/7059"}}, "body_html": "<p>A random idea: it could be possible to auto generate the <code>PYBIND11_MODULE</code> by letting the user specify a list of tuples (or dict) in python, that define the necessary arguments for pybind.</p>\n<p>For example, if we have a list of dicts to be passed as a <code>signatures</code> keyword to <code>load_inline</code>, the user would be able to just call with  <code>signatures=[{'name': 'sin_add', 'doc': 'sin(a) + sin(b)'}]</code> and let <code>cname</code> be inferred from <code>name</code>.</p>\n<p>What do you think?</p>", "body_text": "A random idea: it could be possible to auto generate the PYBIND11_MODULE by letting the user specify a list of tuples (or dict) in python, that define the necessary arguments for pybind.\nFor example, if we have a list of dicts to be passed as a signatures keyword to load_inline, the user would be able to just call with  signatures=[{'name': 'sin_add', 'doc': 'sin(a) + sin(b)'}] and let cname be inferred from name.\nWhat do you think?"}