{"url": "https://api.github.com/repos/pytorch/pytorch/issues/10612", "repository_url": "https://api.github.com/repos/pytorch/pytorch", "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/10612/labels{/name}", "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/10612/comments", "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/10612/events", "html_url": "https://github.com/pytorch/pytorch/pull/10612", "id": 351441080, "node_id": "MDExOlB1bGxSZXF1ZXN0MjA5MDM0NTg5", "number": 10612, "title": "[ROCm] MIOpen integration, more tests enabled, bug fixes", "user": {"login": "iotamudelta", "id": 12565466, "node_id": "MDQ6VXNlcjEyNTY1NDY2", "avatar_url": "https://avatars2.githubusercontent.com/u/12565466?v=4", "gravatar_id": "", "url": "https://api.github.com/users/iotamudelta", "html_url": "https://github.com/iotamudelta", "followers_url": "https://api.github.com/users/iotamudelta/followers", "following_url": "https://api.github.com/users/iotamudelta/following{/other_user}", "gists_url": "https://api.github.com/users/iotamudelta/gists{/gist_id}", "starred_url": "https://api.github.com/users/iotamudelta/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/iotamudelta/subscriptions", "organizations_url": "https://api.github.com/users/iotamudelta/orgs", "repos_url": "https://api.github.com/users/iotamudelta/repos", "events_url": "https://api.github.com/users/iotamudelta/events{/privacy}", "received_events_url": "https://api.github.com/users/iotamudelta/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2018-08-17T03:05:12Z", "updated_at": "2018-11-23T15:49:41Z", "closed_at": "2018-08-23T22:25:56Z", "author_association": "CONTRIBUTOR", "pull_request": {"url": "https://api.github.com/repos/pytorch/pytorch/pulls/10612", "html_url": "https://github.com/pytorch/pytorch/pull/10612", "diff_url": "https://github.com/pytorch/pytorch/pull/10612.diff", "patch_url": "https://github.com/pytorch/pytorch/pull/10612.patch"}, "body_html": "<ul>\n<li>first integration of MIOpen for batch norm and conv on ROCm</li>\n<li>workaround a ROCm compiler bug exposed by elementwise_kernel through explicit capture of variables in the densest packing</li>\n<li>workaround a ROCm compiler bug exposed by having <code>extern \"C\" __host__</code> as a definition and just <code>__host__</code> in the implementation through the hipify script</li>\n<li>use fabs() in accordance with C++11 for double absolute, not ::abs() which is integer-only on ROCm</li>\n<li>enable test_sparse set on CI, skip tests that don't work currently on ROCm</li>\n<li>enable more tests in test_optim after the elementwise_bug got fixed</li>\n<li>enable more tests in test_dataloader</li>\n<li>improvements to hipification and ROCm build</li>\n</ul>\n<p>With this, resnet18 on CIFAR data trains without hang or crash in our tests.</p>", "body_text": "first integration of MIOpen for batch norm and conv on ROCm\nworkaround a ROCm compiler bug exposed by elementwise_kernel through explicit capture of variables in the densest packing\nworkaround a ROCm compiler bug exposed by having extern \"C\" __host__ as a definition and just __host__ in the implementation through the hipify script\nuse fabs() in accordance with C++11 for double absolute, not ::abs() which is integer-only on ROCm\nenable test_sparse set on CI, skip tests that don't work currently on ROCm\nenable more tests in test_optim after the elementwise_bug got fixed\nenable more tests in test_dataloader\nimprovements to hipification and ROCm build\n\nWith this, resnet18 on CIFAR data trains without hang or crash in our tests.", "body": "* first integration of MIOpen for batch norm and conv on ROCm\r\n* workaround a ROCm compiler bug exposed by elementwise_kernel through explicit capture of variables in the densest packing\r\n* workaround a ROCm compiler bug exposed by having `extern \"C\" __host__` as a definition and just `__host__` in the implementation through the hipify script\r\n* use fabs() in accordance with C++11 for double absolute, not ::abs() which is integer-only on ROCm\r\n* enable test_sparse set on CI, skip tests that don't work currently on ROCm\r\n* enable more tests in test_optim after the elementwise_bug got fixed\r\n* enable more tests in test_dataloader\r\n* improvements to hipification and ROCm build\r\n\r\nWith this, resnet18 on CIFAR data trains without hang or crash in our tests."}