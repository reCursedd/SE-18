{"url": "https://api.github.com/repos/pytorch/pytorch/issues/11291", "repository_url": "https://api.github.com/repos/pytorch/pytorch", "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/11291/labels{/name}", "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/11291/comments", "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/11291/events", "html_url": "https://github.com/pytorch/pytorch/pull/11291", "id": 357373603, "node_id": "MDExOlB1bGxSZXF1ZXN0MjEzNDA0ODgx", "number": 11291, "title": "cudnn 7 upgrade with spatialBN fix", "user": {"login": "xw285cornell", "id": 7795712, "node_id": "MDQ6VXNlcjc3OTU3MTI=", "avatar_url": "https://avatars1.githubusercontent.com/u/7795712?v=4", "gravatar_id": "", "url": "https://api.github.com/users/xw285cornell", "html_url": "https://github.com/xw285cornell", "followers_url": "https://api.github.com/users/xw285cornell/followers", "following_url": "https://api.github.com/users/xw285cornell/following{/other_user}", "gists_url": "https://api.github.com/users/xw285cornell/gists{/gist_id}", "starred_url": "https://api.github.com/users/xw285cornell/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/xw285cornell/subscriptions", "organizations_url": "https://api.github.com/users/xw285cornell/orgs", "repos_url": "https://api.github.com/users/xw285cornell/repos", "events_url": "https://api.github.com/users/xw285cornell/events{/privacy}", "received_events_url": "https://api.github.com/users/xw285cornell/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 890282107, "node_id": "MDU6TGFiZWw4OTAyODIxMDc=", "url": "https://api.github.com/repos/pytorch/pytorch/labels/caffe2", "name": "caffe2", "color": "210aa8", "default": false}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2018-09-05T19:37:26Z", "updated_at": "2018-09-06T17:13:19Z", "closed_at": "2018-09-06T17:13:19Z", "author_association": "CONTRIBUTOR", "pull_request": {"url": "https://api.github.com/repos/pytorch/pytorch/pulls/11291", "html_url": "https://github.com/pytorch/pytorch/pull/11291", "diff_url": "https://github.com/pytorch/pytorch/pull/11291.diff", "patch_url": "https://github.com/pytorch/pytorch/pull/11291.patch"}, "body_html": "<p>Summary:<br>\nIn S163230, we've found CuDNN 7 upgrade causes accuracy drop in training convolution network such as ResNeXt-101 (~0% accuracy), and video R(2+1)D (65 --&gt; 63%).</p>\n<p>Our current theory for this accuracy loss is because of the new \"CUDNN_BATCHNORM_SPATIAL_PERSISTENT\" in spatialBN operator. In Caffe 2, we've made this mode as default. According to CuDNN manual (<a href=\"https://fburl.com/z996mr13\" rel=\"nofollow\">https://fburl.com/z996mr13</a>), this mode may introduce some limitation in the input data range and cause overflow (which outputs NaN). NaN is probably not the case, because we're seeing a few percent of accuracy drop but not gradient explosion or failure. However, this \"performance-optimized\" code path may introduce accuracy loss (which is not caught by our unit test case because the input data range is [-0.5-0.5].</p>\n<p>Differential Revision: D9601217</p>", "body_text": "Summary:\nIn S163230, we've found CuDNN 7 upgrade causes accuracy drop in training convolution network such as ResNeXt-101 (~0% accuracy), and video R(2+1)D (65 --> 63%).\nOur current theory for this accuracy loss is because of the new \"CUDNN_BATCHNORM_SPATIAL_PERSISTENT\" in spatialBN operator. In Caffe 2, we've made this mode as default. According to CuDNN manual (https://fburl.com/z996mr13), this mode may introduce some limitation in the input data range and cause overflow (which outputs NaN). NaN is probably not the case, because we're seeing a few percent of accuracy drop but not gradient explosion or failure. However, this \"performance-optimized\" code path may introduce accuracy loss (which is not caught by our unit test case because the input data range is [-0.5-0.5].\nDifferential Revision: D9601217", "body": "Summary:\nIn S163230, we've found CuDNN 7 upgrade causes accuracy drop in training convolution network such as ResNeXt-101 (~0% accuracy), and video R(2+1)D (65 --> 63%).\n\nOur current theory for this accuracy loss is because of the new \"CUDNN_BATCHNORM_SPATIAL_PERSISTENT\" in spatialBN operator. In Caffe 2, we've made this mode as default. According to CuDNN manual (https://fburl.com/z996mr13), this mode may introduce some limitation in the input data range and cause overflow (which outputs NaN). NaN is probably not the case, because we're seeing a few percent of accuracy drop but not gradient explosion or failure. However, this \"performance-optimized\" code path may introduce accuracy loss (which is not caught by our unit test case because the input data range is [-0.5-0.5].\n\nDifferential Revision: D9601217\n"}