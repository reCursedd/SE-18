{"url": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/150650860", "pull_request_review_id": 76232565, "id": 150650860, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE1MDY1MDg2MA==", "diff_hunk": "@@ -0,0 +1,50 @@\n+#pragma once\n+#include <memory>\n+#include <vector>\n+\n+namespace at {\n+  struct Tensor;\n+}\n+namespace torch { namespace jit {\n+\n+struct NotImplementedException : public std::logic_error {\n+  NotImplementedException()\n+  : std::logic_error(\"Function not yet implemented.\") {}\n+};\n+\n+// The interpreter run Graphs with Tensor inputs and Tensor outputs\n+// a separate component in the autograd handles unwrapping and wrapping\n+// variable objects for use in the interpreter.\n+\n+struct FunctionImpl;\n+struct InterpreterImpl;\n+struct Graph;\n+\n+struct Function {\n+  Function()\n+  : pImpl(nullptr) {}\n+  Function(std::shared_ptr<Graph> & graph);\n+  ~Function();\n+  operator bool() const {\n+    return pImpl != nullptr;\n+  }\n+private:\n+  std::shared_ptr<FunctionImpl> pImpl;\n+  friend class InterpreterImpl;\n+};\n+\n+struct Interpreter {\n+  Interpreter(const Function & function);\n+  void runOneStage(", "path": "torch/csrc/jit/interpreter.h", "position": null, "original_position": 38, "commit_id": "8421d51b4f4545fc569a2522ca31ebdb0796a7ac", "original_commit_id": "71f42be9e2351f659845bfda434e4d5b303f49e5", "user": {"login": "zdevito", "id": 370202, "node_id": "MDQ6VXNlcjM3MDIwMg==", "avatar_url": "https://avatars0.githubusercontent.com/u/370202?v=4", "gravatar_id": "", "url": "https://api.github.com/users/zdevito", "html_url": "https://github.com/zdevito", "followers_url": "https://api.github.com/users/zdevito/followers", "following_url": "https://api.github.com/users/zdevito/following{/other_user}", "gists_url": "https://api.github.com/users/zdevito/gists{/gist_id}", "starred_url": "https://api.github.com/users/zdevito/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/zdevito/subscriptions", "organizations_url": "https://api.github.com/users/zdevito/orgs", "repos_url": "https://api.github.com/users/zdevito/repos", "events_url": "https://api.github.com/users/zdevito/events{/privacy}", "received_events_url": "https://api.github.com/users/zdevito/received_events", "type": "User", "site_admin": false}, "body": "I'll add some comments. I will probably rename Interpreter -> InterpreterState to make it more clear. `lua_State` is a similar object.", "created_at": "2017-11-13T20:08:12Z", "updated_at": "2018-11-23T15:36:27Z", "html_url": "https://github.com/pytorch/pytorch/pull/3634#discussion_r150650860", "pull_request_url": "https://api.github.com/repos/pytorch/pytorch/pulls/3634", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/150650860"}, "html": {"href": "https://github.com/pytorch/pytorch/pull/3634#discussion_r150650860"}, "pull_request": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/3634"}}, "body_html": "<p>I'll add some comments. I will probably rename Interpreter -&gt; InterpreterState to make it more clear. <code>lua_State</code> is a similar object.</p>", "body_text": "I'll add some comments. I will probably rename Interpreter -> InterpreterState to make it more clear. lua_State is a similar object.", "in_reply_to_id": 150382360}