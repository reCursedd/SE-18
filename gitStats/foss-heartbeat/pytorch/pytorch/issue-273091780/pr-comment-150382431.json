{"url": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/150382431", "pull_request_review_id": 75930339, "id": 150382431, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE1MDM4MjQzMQ==", "diff_hunk": "@@ -0,0 +1,50 @@\n+#pragma once\n+#include <memory>\n+#include <vector>\n+\n+namespace at {\n+  struct Tensor;\n+}\n+namespace torch { namespace jit {\n+\n+struct NotImplementedException : public std::logic_error {\n+  NotImplementedException()\n+  : std::logic_error(\"Function not yet implemented.\") {}\n+};\n+\n+// The interpreter run Graphs with Tensor inputs and Tensor outputs\n+// a separate component in the autograd handles unwrapping and wrapping\n+// variable objects for use in the interpreter.\n+\n+struct FunctionImpl;\n+struct InterpreterImpl;\n+struct Graph;\n+\n+struct Function {", "path": "torch/csrc/jit/interpreter.h", "position": null, "original_position": 23, "commit_id": "8421d51b4f4545fc569a2522ca31ebdb0796a7ac", "original_commit_id": "71f42be9e2351f659845bfda434e4d5b303f49e5", "user": {"login": "ezyang", "id": 13564, "node_id": "MDQ6VXNlcjEzNTY0", "avatar_url": "https://avatars0.githubusercontent.com/u/13564?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ezyang", "html_url": "https://github.com/ezyang", "followers_url": "https://api.github.com/users/ezyang/followers", "following_url": "https://api.github.com/users/ezyang/following{/other_user}", "gists_url": "https://api.github.com/users/ezyang/gists{/gist_id}", "starred_url": "https://api.github.com/users/ezyang/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ezyang/subscriptions", "organizations_url": "https://api.github.com/users/ezyang/orgs", "repos_url": "https://api.github.com/users/ezyang/repos", "events_url": "https://api.github.com/users/ezyang/events{/privacy}", "received_events_url": "https://api.github.com/users/ezyang/received_events", "type": "User", "site_admin": false}, "body": "Blah, this is the same name as autograd Function, which will make it harder to grep for instances of this particular concept. How about `GraphBCO` (graph bytecode object).", "created_at": "2017-11-11T12:06:43Z", "updated_at": "2018-11-23T15:36:22Z", "html_url": "https://github.com/pytorch/pytorch/pull/3634#discussion_r150382431", "pull_request_url": "https://api.github.com/repos/pytorch/pytorch/pulls/3634", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/150382431"}, "html": {"href": "https://github.com/pytorch/pytorch/pull/3634#discussion_r150382431"}, "pull_request": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/3634"}}, "body_html": "<p>Blah, this is the same name as autograd Function, which will make it harder to grep for instances of this particular concept. How about <code>GraphBCO</code> (graph bytecode object).</p>", "body_text": "Blah, this is the same name as autograd Function, which will make it harder to grep for instances of this particular concept. How about GraphBCO (graph bytecode object)."}