{"url": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/150392972", "pull_request_review_id": 75941306, "id": 150392972, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE1MDM5Mjk3Mg==", "diff_hunk": "@@ -0,0 +1,288 @@\n+#include \"interpreter.h\"\n+#include \"torch/csrc/jit/ir.h\"\n+#include \"torch/csrc/jit/generated/aten_dispatch.h\"\n+#ifdef WITH_CUDA\n+#include \"torch/csrc/jit/fusion_compiler.h\"\n+#endif\n+\n+namespace torch { namespace jit {\n+\n+using InputList = const std::vector<at::Tensor> &;\n+using OutputList = std::vector<at::Tensor>&;", "path": "torch/csrc/jit/interpreter.cpp", "position": null, "original_position": 11, "commit_id": "8421d51b4f4545fc569a2522ca31ebdb0796a7ac", "original_commit_id": "71f42be9e2351f659845bfda434e4d5b303f49e5", "user": {"login": "apaszke", "id": 4583066, "node_id": "MDQ6VXNlcjQ1ODMwNjY=", "avatar_url": "https://avatars3.githubusercontent.com/u/4583066?v=4", "gravatar_id": "", "url": "https://api.github.com/users/apaszke", "html_url": "https://github.com/apaszke", "followers_url": "https://api.github.com/users/apaszke/followers", "following_url": "https://api.github.com/users/apaszke/following{/other_user}", "gists_url": "https://api.github.com/users/apaszke/gists{/gist_id}", "starred_url": "https://api.github.com/users/apaszke/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/apaszke/subscriptions", "organizations_url": "https://api.github.com/users/apaszke/orgs", "repos_url": "https://api.github.com/users/apaszke/repos", "events_url": "https://api.github.com/users/apaszke/events{/privacy}", "received_events_url": "https://api.github.com/users/apaszke/received_events", "type": "User", "site_admin": false}, "body": "These names are really confusing. At the moment in the whole `csrc` we have an easy convention which is that `*_list` is a vector of `*` and `*List` (usually defined in ATen) is an `ArrayRef` of `*`. This follows the same naming conventions, but means something completely different. Can you please not have aliases for `const` types without mentioning that they're const in the alias, and not have aliases for reference types (it's just one char...)", "created_at": "2017-11-11T20:38:20Z", "updated_at": "2018-11-23T15:36:23Z", "html_url": "https://github.com/pytorch/pytorch/pull/3634#discussion_r150392972", "pull_request_url": "https://api.github.com/repos/pytorch/pytorch/pulls/3634", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/150392972"}, "html": {"href": "https://github.com/pytorch/pytorch/pull/3634#discussion_r150392972"}, "pull_request": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/3634"}}, "body_html": "<p>These names are really confusing. At the moment in the whole <code>csrc</code> we have an easy convention which is that <code>*_list</code> is a vector of <code>*</code> and <code>*List</code> (usually defined in ATen) is an <code>ArrayRef</code> of <code>*</code>. This follows the same naming conventions, but means something completely different. Can you please not have aliases for <code>const</code> types without mentioning that they're const in the alias, and not have aliases for reference types (it's just one char...)</p>", "body_text": "These names are really confusing. At the moment in the whole csrc we have an easy convention which is that *_list is a vector of * and *List (usually defined in ATen) is an ArrayRef of *. This follows the same naming conventions, but means something completely different. Can you please not have aliases for const types without mentioning that they're const in the alias, and not have aliases for reference types (it's just one char...)"}