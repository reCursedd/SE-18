{"url": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/223761049", "pull_request_review_id": 162966347, "id": 223761049, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIyMzc2MTA0OQ==", "diff_hunk": "@@ -207,7 +213,7 @@ __device__ void exclusiveBinaryPrefixScan(T* smem, bool in, T* out, T* carry, Bi\n   *out -= (T) in;\n \n   // The outgoing carry for all threads is the last warp's sum\n-  *carry = smem[(blockDim.x / SCAN_UTILS_WARP_SIZE) - 1];\n+  *carry = smem[THCCeilDiv<int>(blockDim.x, SCAN_UTILS_WARP_SIZE) - 1];", "path": "aten/src/THC/THCScanUtils.cuh", "position": 21, "original_position": 21, "commit_id": "b6f0860c8cb156c4c135ba531db1593e42842856", "original_commit_id": "b6f0860c8cb156c4c135ba531db1593e42842856", "user": {"login": "ezyang", "id": 13564, "node_id": "MDQ6VXNlcjEzNTY0", "avatar_url": "https://avatars0.githubusercontent.com/u/13564?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ezyang", "html_url": "https://github.com/ezyang", "followers_url": "https://api.github.com/users/ezyang/followers", "following_url": "https://api.github.com/users/ezyang/following{/other_user}", "gists_url": "https://api.github.com/users/ezyang/gists{/gist_id}", "starred_url": "https://api.github.com/users/ezyang/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ezyang/subscriptions", "organizations_url": "https://api.github.com/users/ezyang/orgs", "repos_url": "https://api.github.com/users/ezyang/repos", "events_url": "https://api.github.com/users/ezyang/events{/privacy}", "received_events_url": "https://api.github.com/users/ezyang/received_events", "type": "User", "site_admin": false}, "body": "OK, after finally sitting down and working through the indexing, I now agree the new code is correct.\r\n\r\n> Lets say we have `blockDim.x == 9` and `SCAN_UTILS_WARP_SIZE == 4`. The quoted code will write into 0, 0, 0, 0, 1, 1, 1, 1, 2. So we must compute 2 as the last warp. ceil(9, 4) == 3, subtract 1 to get 2, the correct number.", "created_at": "2018-10-09T15:52:17Z", "updated_at": "2018-11-23T15:52:41Z", "html_url": "https://github.com/pytorch/pytorch/pull/12337#discussion_r223761049", "pull_request_url": "https://api.github.com/repos/pytorch/pytorch/pulls/12337", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/223761049"}, "html": {"href": "https://github.com/pytorch/pytorch/pull/12337#discussion_r223761049"}, "pull_request": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/12337"}}, "body_html": "<p>OK, after finally sitting down and working through the indexing, I now agree the new code is correct.</p>\n<blockquote>\n<p>Lets say we have <code>blockDim.x == 9</code> and <code>SCAN_UTILS_WARP_SIZE == 4</code>. The quoted code will write into 0, 0, 0, 0, 1, 1, 1, 1, 2. So we must compute 2 as the last warp. ceil(9, 4) == 3, subtract 1 to get 2, the correct number.</p>\n</blockquote>", "body_text": "OK, after finally sitting down and working through the indexing, I now agree the new code is correct.\n\nLets say we have blockDim.x == 9 and SCAN_UTILS_WARP_SIZE == 4. The quoted code will write into 0, 0, 0, 0, 1, 1, 1, 1, 2. So we must compute 2 as the last warp. ceil(9, 4) == 3, subtract 1 to get 2, the correct number.", "in_reply_to_id": 222845003}