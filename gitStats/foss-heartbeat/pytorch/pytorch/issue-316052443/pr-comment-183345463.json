{"url": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/183345463", "pull_request_review_id": 114324208, "id": 183345463, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MzM0NTQ2Mw==", "diff_hunk": "@@ -8,15 +8,31 @@\n import time\n import traceback\n import unittest\n+import subprocess\n from torch import multiprocessing\n from torch.utils.data import Dataset, TensorDataset, DataLoader, ConcatDataset\n from torch.utils.data.dataset import random_split\n-from torch.utils.data.dataloader import default_collate, ExceptionWrapper\n+from torch.utils.data.dataloader import default_collate, ExceptionWrapper, MANAGER_STATUS_CHECK_INTERVAL\n from common import TestCase, run_tests, TEST_NUMPY, IS_WINDOWS\n-from common_nn import TEST_CUDA\n \n+# We cannot import TEST_CUDA from common_nn here, because if we do that,\n+# the TEST_CUDNN line from common_nn will be executed multiple times\n+# as well during the execution of this test suite, and it will cause\n+# CUDA OOM error on Windows.\n+TEST_CUDA = torch.cuda.is_available()", "path": "test/test_dataloader.py", "position": 17, "original_position": 17, "commit_id": "b3490a5593788cb7de6f4c5af6b7a0330587f4f3", "original_commit_id": "b3490a5593788cb7de6f4c5af6b7a0330587f4f3", "user": {"login": "apaszke", "id": 4583066, "node_id": "MDQ6VXNlcjQ1ODMwNjY=", "avatar_url": "https://avatars3.githubusercontent.com/u/4583066?v=4", "gravatar_id": "", "url": "https://api.github.com/users/apaszke", "html_url": "https://github.com/apaszke", "followers_url": "https://api.github.com/users/apaszke/followers", "following_url": "https://api.github.com/users/apaszke/following{/other_user}", "gists_url": "https://api.github.com/users/apaszke/gists{/gist_id}", "starred_url": "https://api.github.com/users/apaszke/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/apaszke/subscriptions", "organizations_url": "https://api.github.com/users/apaszke/orgs", "repos_url": "https://api.github.com/users/apaszke/repos", "events_url": "https://api.github.com/users/apaszke/events{/privacy}", "received_events_url": "https://api.github.com/users/apaszke/received_events", "type": "User", "site_admin": false}, "body": "Could we perhaps made those properties lazy? You could make them objects with a `__bool__` method that does the check only when called for the first time.", "created_at": "2018-04-23T10:27:41Z", "updated_at": "2018-11-23T15:42:57Z", "html_url": "https://github.com/pytorch/pytorch/pull/6779#discussion_r183345463", "pull_request_url": "https://api.github.com/repos/pytorch/pytorch/pulls/6779", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/183345463"}, "html": {"href": "https://github.com/pytorch/pytorch/pull/6779#discussion_r183345463"}, "pull_request": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/6779"}}, "body_html": "<p>Could we perhaps made those properties lazy? You could make them objects with a <code>__bool__</code> method that does the check only when called for the first time.</p>", "body_text": "Could we perhaps made those properties lazy? You could make them objects with a __bool__ method that does the check only when called for the first time."}