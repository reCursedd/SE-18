{"url": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/182895197", "pull_request_review_id": 113790190, "id": 182895197, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4Mjg5NTE5Nw==", "diff_hunk": "@@ -8,15 +8,26 @@\n import time\n import traceback\n import unittest\n+import subprocess\n from torch import multiprocessing\n from torch.utils.data import Dataset, TensorDataset, DataLoader, ConcatDataset\n from torch.utils.data.dataset import random_split\n-from torch.utils.data.dataloader import default_collate, ExceptionWrapper\n+from torch.utils.data.dataloader import default_collate, ExceptionWrapper, MANAGER_STATUS_CHECK_INTERVAL\n from common import TestCase, run_tests, TEST_NUMPY, IS_WINDOWS\n-from common_nn import TEST_CUDA\n \n+TEST_CUDA = torch.cuda.is_available()", "path": "test/test_dataloader.py", "position": null, "original_position": 13, "commit_id": "b3490a5593788cb7de6f4c5af6b7a0330587f4f3", "original_commit_id": "225bc2f5f680af8d7d21c99bc496a26ecbabf082", "user": {"login": "yf225", "id": 4063635, "node_id": "MDQ6VXNlcjQwNjM2MzU=", "avatar_url": "https://avatars0.githubusercontent.com/u/4063635?v=4", "gravatar_id": "", "url": "https://api.github.com/users/yf225", "html_url": "https://github.com/yf225", "followers_url": "https://api.github.com/users/yf225/followers", "following_url": "https://api.github.com/users/yf225/following{/other_user}", "gists_url": "https://api.github.com/users/yf225/gists{/gist_id}", "starred_url": "https://api.github.com/users/yf225/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/yf225/subscriptions", "organizations_url": "https://api.github.com/users/yf225/orgs", "repos_url": "https://api.github.com/users/yf225/repos", "events_url": "https://api.github.com/users/yf225/events{/privacy}", "received_events_url": "https://api.github.com/users/yf225/received_events", "type": "User", "site_admin": false}, "body": "If we import `TEST_CUDA` from `common_nn` multiple times during the execution of the test, `TEST_CUDNN = TEST_CUDA and torch.backends.cudnn.is_acceptable(torch.cuda.FloatTensor(1))` in `common_nn` will also be executed multiple times and CUDA on Windows doesn't seem to like it. This is an attempt to find a workaround for the issue.", "created_at": "2018-04-19T21:51:39Z", "updated_at": "2018-11-23T15:42:54Z", "html_url": "https://github.com/pytorch/pytorch/pull/6779#discussion_r182895197", "pull_request_url": "https://api.github.com/repos/pytorch/pytorch/pulls/6779", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/182895197"}, "html": {"href": "https://github.com/pytorch/pytorch/pull/6779#discussion_r182895197"}, "pull_request": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/6779"}}, "body_html": "<p>If we import <code>TEST_CUDA</code> from <code>common_nn</code> multiple times during the execution of the test, <code>TEST_CUDNN = TEST_CUDA and torch.backends.cudnn.is_acceptable(torch.cuda.FloatTensor(1))</code> in <code>common_nn</code> will also be executed multiple times and CUDA on Windows doesn't seem to like it. This is an attempt to find a workaround for the issue.</p>", "body_text": "If we import TEST_CUDA from common_nn multiple times during the execution of the test, TEST_CUDNN = TEST_CUDA and torch.backends.cudnn.is_acceptable(torch.cuda.FloatTensor(1)) in common_nn will also be executed multiple times and CUDA on Windows doesn't seem to like it. This is an attempt to find a workaround for the issue."}