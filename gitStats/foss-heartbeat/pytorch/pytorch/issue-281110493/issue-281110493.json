{"url": "https://api.github.com/repos/pytorch/pytorch/issues/4114", "repository_url": "https://api.github.com/repos/pytorch/pytorch", "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/4114/labels{/name}", "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/4114/comments", "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/4114/events", "html_url": "https://github.com/pytorch/pytorch/issues/4114", "id": 281110493, "node_id": "MDU6SXNzdWUyODExMTA0OTM=", "number": 4114, "title": "torch.from_numpy() ignores torch.set_default_tensor_type()", "user": {"login": "djsaunde", "id": 1245942, "node_id": "MDQ6VXNlcjEyNDU5NDI=", "avatar_url": "https://avatars3.githubusercontent.com/u/1245942?v=4", "gravatar_id": "", "url": "https://api.github.com/users/djsaunde", "html_url": "https://github.com/djsaunde", "followers_url": "https://api.github.com/users/djsaunde/followers", "following_url": "https://api.github.com/users/djsaunde/following{/other_user}", "gists_url": "https://api.github.com/users/djsaunde/gists{/gist_id}", "starred_url": "https://api.github.com/users/djsaunde/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/djsaunde/subscriptions", "organizations_url": "https://api.github.com/users/djsaunde/orgs", "repos_url": "https://api.github.com/users/djsaunde/repos", "events_url": "https://api.github.com/users/djsaunde/events{/privacy}", "received_events_url": "https://api.github.com/users/djsaunde/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-12-11T17:50:35Z", "updated_at": "2017-12-11T19:10:56Z", "closed_at": "2017-12-11T19:10:55Z", "author_association": "NONE", "body_html": "<p>I am using:</p>\n<p><code>torch.set_default_tensor_type('torch.cuda.FloatTensor')</code>.</p>\n<p>However, on reading a <code>.npy</code> file from disk, the output of <code>type([loaded Tensor])</code> is <code>torch.FloatTensor</code>, mismatching what you might expect (<code>torch.cuda.FloatTensor</code>).</p>\n<p>Should the <code>set_default_tensor_type</code> function be extended to such cases?</p>", "body_text": "I am using:\ntorch.set_default_tensor_type('torch.cuda.FloatTensor').\nHowever, on reading a .npy file from disk, the output of type([loaded Tensor]) is torch.FloatTensor, mismatching what you might expect (torch.cuda.FloatTensor).\nShould the set_default_tensor_type function be extended to such cases?", "body": "I am using:\r\n\r\n```torch.set_default_tensor_type('torch.cuda.FloatTensor')```.\r\n\r\nHowever, on reading a `.npy` file from disk, the output of `type([loaded Tensor])` is `torch.FloatTensor`, mismatching what you might expect (`torch.cuda.FloatTensor`).\r\n\r\nShould the `set_default_tensor_type` function be extended to such cases?"}