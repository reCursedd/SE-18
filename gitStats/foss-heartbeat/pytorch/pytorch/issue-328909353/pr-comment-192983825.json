{"url": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/192983825", "pull_request_review_id": 125862315, "id": 192983825, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5Mjk4MzgyNQ==", "diff_hunk": "@@ -189,6 +190,34 @@ def test_convolution_sum_fusion(self, stride, pad, kernel, size,\n             print(S0.flatten())\n             print(np.max(np.abs(S1 - S0)))\n             self.assertTrue(False)\n+\n+        # Auto fusion for Conv + Sum\n+        workspace.ResetWorkspace()", "path": "caffe2/python/ideep/convfusion_op_test.py", "position": 106, "original_position": 71, "commit_id": "50e867829c50f4547520d739ee5293806f5753b9", "original_commit_id": "9e791d8e0cd4583eea7c9bdb0eec59db0dc70fc3", "user": {"login": "gujinghui", "id": 31264804, "node_id": "MDQ6VXNlcjMxMjY0ODA0", "avatar_url": "https://avatars2.githubusercontent.com/u/31264804?v=4", "gravatar_id": "", "url": "https://api.github.com/users/gujinghui", "html_url": "https://github.com/gujinghui", "followers_url": "https://api.github.com/users/gujinghui/followers", "following_url": "https://api.github.com/users/gujinghui/following{/other_user}", "gists_url": "https://api.github.com/users/gujinghui/gists{/gist_id}", "starred_url": "https://api.github.com/users/gujinghui/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/gujinghui/subscriptions", "organizations_url": "https://api.github.com/users/gujinghui/orgs", "repos_url": "https://api.github.com/users/gujinghui/repos", "events_url": "https://api.github.com/users/gujinghui/events{/privacy}", "received_events_url": "https://api.github.com/users/gujinghui/received_events", "type": "User", "site_admin": false}, "body": "1. training_mode flag changed the conv operator API for user, especially in training mode. Instead, optimizeForIdeep gives choice to user. :)\r\n\r\n2. Yes. You're right. The input will be rewritten. But if the input is produced by other operator, instead of directly loaded by user, it should be OK in this case. Will add the check for it.", "created_at": "2018-06-05T08:15:36Z", "updated_at": "2018-11-23T15:44:57Z", "html_url": "https://github.com/pytorch/pytorch/pull/8105#discussion_r192983825", "pull_request_url": "https://api.github.com/repos/pytorch/pytorch/pulls/8105", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/192983825"}, "html": {"href": "https://github.com/pytorch/pytorch/pull/8105#discussion_r192983825"}, "pull_request": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/8105"}}, "body_html": "<ol>\n<li>\n<p>training_mode flag changed the conv operator API for user, especially in training mode. Instead, optimizeForIdeep gives choice to user. :)</p>\n</li>\n<li>\n<p>Yes. You're right. The input will be rewritten. But if the input is produced by other operator, instead of directly loaded by user, it should be OK in this case. Will add the check for it.</p>\n</li>\n</ol>", "body_text": "training_mode flag changed the conv operator API for user, especially in training mode. Instead, optimizeForIdeep gives choice to user. :)\n\n\nYes. You're right. The input will be rewritten. But if the input is produced by other operator, instead of directly loaded by user, it should be OK in this case. Will add the check for it.", "in_reply_to_id": 192949642}