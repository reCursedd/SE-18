{"url": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/200712565", "pull_request_review_id": 135086199, "id": 200712565, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwMDcxMjU2NQ==", "diff_hunk": "@@ -304,7 +304,7 @@ if (USE_MKL AND USE_IDEEP)\n   \n   if (MKLDNN_INCLUDE_DIR)\n     list(APPEND IDEEP_INCLUDE_DIR ${MKLDNN_INCLUDE_DIR})\n-    list(APPEND __ideep_looked_for ${MKLDNN_INCLUDE_DIR})\n+    list(APPEND __ideep_looked_for MKLDNN_INCLUDE_DIR)", "path": "cmake/Modules/FindMKL.cmake", "position": 5, "original_position": 5, "commit_id": "50e867829c50f4547520d739ee5293806f5753b9", "original_commit_id": "3428b01cdb293675dd281734dad5b9b78d8516f1", "user": {"login": "yinghai", "id": 1100089, "node_id": "MDQ6VXNlcjExMDAwODk=", "avatar_url": "https://avatars1.githubusercontent.com/u/1100089?v=4", "gravatar_id": "", "url": "https://api.github.com/users/yinghai", "html_url": "https://github.com/yinghai", "followers_url": "https://api.github.com/users/yinghai/followers", "following_url": "https://api.github.com/users/yinghai/following{/other_user}", "gists_url": "https://api.github.com/users/yinghai/gists{/gist_id}", "starred_url": "https://api.github.com/users/yinghai/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/yinghai/subscriptions", "organizations_url": "https://api.github.com/users/yinghai/orgs", "repos_url": "https://api.github.com/users/yinghai/repos", "events_url": "https://api.github.com/users/yinghai/events{/privacy}", "received_events_url": "https://api.github.com/users/yinghai/received_events", "type": "User", "site_admin": false}, "body": "> BTW, with presnet FindMKL.cmake, the libmkldnn will be linked with gomp, not iomp5.\r\nThis should be not expected, and the performance is not garuanteed.\r\n\r\nThis is intentional. User should be able to choose to use gomp or iomp, but absolutely not both of them. I have benched the performance of using gomp and iomp and they are similar to me. Note that C2 can be included as a library and used by other applications. Situation is that if they use gomp and unknowingly linked in iomp from C2, they can have a nasty coredump and it's very difficult for them to figure it out without context. ", "created_at": "2018-07-06T16:58:17Z", "updated_at": "2018-11-23T15:46:52Z", "html_url": "https://github.com/pytorch/pytorch/pull/8105#discussion_r200712565", "pull_request_url": "https://api.github.com/repos/pytorch/pytorch/pulls/8105", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/200712565"}, "html": {"href": "https://github.com/pytorch/pytorch/pull/8105#discussion_r200712565"}, "pull_request": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/8105"}}, "body_html": "<blockquote>\n<p>BTW, with presnet FindMKL.cmake, the libmkldnn will be linked with gomp, not iomp5.<br>\nThis should be not expected, and the performance is not garuanteed.</p>\n</blockquote>\n<p>This is intentional. User should be able to choose to use gomp or iomp, but absolutely not both of them. I have benched the performance of using gomp and iomp and they are similar to me. Note that C2 can be included as a library and used by other applications. Situation is that if they use gomp and unknowingly linked in iomp from C2, they can have a nasty coredump and it's very difficult for them to figure it out without context.</p>", "body_text": "BTW, with presnet FindMKL.cmake, the libmkldnn will be linked with gomp, not iomp5.\nThis should be not expected, and the performance is not garuanteed.\n\nThis is intentional. User should be able to choose to use gomp or iomp, but absolutely not both of them. I have benched the performance of using gomp and iomp and they are similar to me. Note that C2 can be included as a library and used by other applications. Situation is that if they use gomp and unknowingly linked in iomp from C2, they can have a nasty coredump and it's very difficult for them to figure it out without context.", "in_reply_to_id": 199544407}