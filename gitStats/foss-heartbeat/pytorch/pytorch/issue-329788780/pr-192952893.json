{"url": "https://api.github.com/repos/pytorch/pytorch/pulls/8192", "id": 192952893, "node_id": "MDExOlB1bGxSZXF1ZXN0MTkyOTUyODkz", "html_url": "https://github.com/pytorch/pytorch/pull/8192", "diff_url": "https://github.com/pytorch/pytorch/pull/8192.diff", "patch_url": "https://github.com/pytorch/pytorch/pull/8192.patch", "issue_url": "https://api.github.com/repos/pytorch/pytorch/issues/8192", "number": 8192, "state": "closed", "locked": false, "title": "Add more annotations for arguments in ATen schema", "user": {"login": "apaszke", "id": 4583066, "node_id": "MDQ6VXNlcjQ1ODMwNjY=", "avatar_url": "https://avatars3.githubusercontent.com/u/4583066?v=4", "gravatar_id": "", "url": "https://api.github.com/users/apaszke", "html_url": "https://github.com/apaszke", "followers_url": "https://api.github.com/users/apaszke/followers", "following_url": "https://api.github.com/users/apaszke/following{/other_user}", "gists_url": "https://api.github.com/users/apaszke/gists{/gist_id}", "starred_url": "https://api.github.com/users/apaszke/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/apaszke/subscriptions", "organizations_url": "https://api.github.com/users/apaszke/orgs", "repos_url": "https://api.github.com/users/apaszke/repos", "events_url": "https://api.github.com/users/apaszke/events{/privacy}", "received_events_url": "https://api.github.com/users/apaszke/received_events", "type": "User", "site_admin": false}, "body": "A completely minor change, but improves readability of ATen schema by a great deal. Our `FunctionSchema` list contains triples with: an offset into our string table, and the number of arguments and returns to be read out from the **current** position in the argument list. This is ok for an automatic parser, but it makes it impossible to associate `FunctionSchema` with its `ArgumentSchema`s automatically. This PR simply adds comments that separate and annotate `ArgumentSchema`s for different functions, which makes them very easy to find.\r\n\r\n@zdevito @jamesr66a \r\n\r\nPreviously (the output is truncated at some column, because I only copied part of it, not because of the code):\r\n```cpp\r\n{ 210, 1, 0, 0 }, // Argument(\"tensors\", at::nullopt, at::nullopt, ListType::ofTensors())   \r\n{ 15, 0, 8, 2 }, // Argument(\"dim\", as_tensor(int64_t(0)), AttributeInfo{ AttributeKind::i, \r\n{ 2, 0, 0, 0 }, // Argument(\"result\", at::nullopt, at::nullopt, DynamicType::get())         \r\n{ 1, 0, 0, 0 }, // Argument(\"self\", at::nullopt, at::nullopt, DynamicType::get())           \r\n{ 2, 0, 0, 0 }, // Argument(\"result\", at::nullopt, at::nullopt, DynamicType::get())         \r\n{ 1, 0, 0, 0 }, // Argument(\"self\", at::nullopt, at::nullopt, DynamicType::get())           \r\n{ 469, 0, 0, 2 }, // Argument(\"chunks\", at::nullopt, AttributeInfo{ AttributeKind::i, at::nu\r\n{ 15, 0, 8, 2 }, // Argument(\"dim\", as_tensor(int64_t(0)), AttributeInfo{ AttributeKind::i, \r\n{ 2, 0, 0, 0 }, // Argument(\"result\", at::nullopt, at::nullopt, DynamicType::get())         \r\n{ 1, 0, 0, 0 }, // Argument(\"self\", at::nullopt, at::nullopt, DynamicType::get())           \r\n{ 2, 0, 0, 0 }, // Argument(\"result\", at::nullopt, at::nullopt, DynamicType::get())         \r\n{ 461, 0, 0, 0 }, // Argument(\"input\", at::nullopt, at::nullopt, DynamicType::get())        \r\n{ 107, 0, 0, 0 }, // Argument(\"weight\", at::nullopt, at::nullopt, DynamicType::get())       \r\n{ 385, 0, 0, 0 }, // Argument(\"bias\", at::nullopt, at::nullopt, DynamicType::get())         \r\n{ 208, 0, 0, 1 }, // Argument(\"stride\", at::nullopt, AttributeInfo{ AttributeKind::is, at::n\r\n{ 317, 0, 0, 1 }, // Argument(\"padding\", at::nullopt, AttributeInfo{ AttributeKind::is, at::\r\n{ 330, 0, 0, 1 }, // Argument(\"dilation\", at::nullopt, AttributeInfo{ AttributeKind::is, at:\r\n{ 472, 0, 0, 2 }, // Argument(\"transposed\", at::nullopt, AttributeInfo{ AttributeKind::i, at\r\n{ 396, 0, 0, 1 }, // Argument(\"output_padding\", at::nullopt, AttributeInfo{ AttributeKind::i\r\n{ 473, 0, 0, 2 }, // Argument(\"groups\", at::nullopt, AttributeInfo{ AttributeKind::i, at::nu\r\n{ 2, 0, 0, 0 }, // Argument(\"result\", at::nullopt, at::nullopt, DynamicType::get())         \r\n{ 461, 0, 0, 0 }, // Argument(\"input\", at::nullopt, at::nullopt, DynamicType::get())        \r\n{ 107, 0, 0, 0 }, // Argument(\"weight\", at::nullopt, at::nullopt, DynamicType::get())       \r\n{ 385, 0, 0, 0 }, // Argument(\"bias\", at::nullopt, at::nullopt, DynamicType::get())         \r\n{ 208, 0, 0, 1 }, // Argument(\"stride\", at::nullopt, AttributeInfo{ AttributeKind::is, at::n\r\n{ 317, 0, 0, 1 }, // Argument(\"padding\", at::nullopt, AttributeInfo{ AttributeKind::is, at::\r\n{ 330, 0, 0, 1 }, // Argument(\"dilation\", at::nullopt, AttributeInfo{ AttributeKind::is, at:\r\n{ 472, 0, 0, 2 }, // Argument(\"transposed\", at::nullopt, AttributeInfo{ AttributeKind::i, at\r\n{ 396, 0, 0, 1 }, // Argument(\"output_padding\", at::nullopt, AttributeInfo{ AttributeKind::i\r\n{ 473, 0, 0, 2 }, // Argument(\"groups\", at::nullopt, AttributeInfo{ AttributeKind::i, at::nu\r\n{ 475, 0, 0, 2 }, // Argument(\"benchmark\", at::nullopt, AttributeInfo{ AttributeKind::i, at:\r\n{ 476, 0, 0, 2 }, // Argument(\"deterministic\", at::nullopt, AttributeInfo{ AttributeKind::i,\r\n{ 462, 0, 0, 2 }, // Argument(\"cudnn_enabled\", at::nullopt, AttributeInfo{ AttributeKind::i,\r\n{ 2, 0, 0, 0 }, // Argument(\"result\", at::nullopt, at::nullopt, DynamicType::get())         \r\n```\r\n\r\nNow:\r\n```cpp\r\n// Arguments for cat (2 args, 1 returns)                                                    \r\n{ 210, 1, 0, 0 }, // Argument(\"tensors\", at::nullopt, at::nullopt, ListType::ofTensors())   \r\n{ 15, 0, 8, 2 }, // Argument(\"dim\", as_tensor(int64_t(0)), AttributeInfo{ AttributeKind::i, \r\n{ 2, 0, 0, 0 }, // Argument(\"result\", at::nullopt, at::nullopt, DynamicType::get())         \r\n// Arguments for ceil (1 args, 1 returns)                                                   \r\n{ 1, 0, 0, 0 }, // Argument(\"self\", at::nullopt, at::nullopt, DynamicType::get())           \r\n{ 2, 0, 0, 0 }, // Argument(\"result\", at::nullopt, at::nullopt, DynamicType::get())         \r\n// Arguments for chunk (3 args, 1 returns)                                                  \r\n{ 1, 0, 0, 0 }, // Argument(\"self\", at::nullopt, at::nullopt, DynamicType::get())           \r\n{ 469, 0, 0, 2 }, // Argument(\"chunks\", at::nullopt, AttributeInfo{ AttributeKind::i, at::nu\r\n{ 15, 0, 8, 2 }, // Argument(\"dim\", as_tensor(int64_t(0)), AttributeInfo{ AttributeKind::i, \r\n{ 2, 0, 0, 0 }, // Argument(\"result\", at::nullopt, at::nullopt, DynamicType::get())         \r\n// Arguments for cudnn_is_acceptable (1 args, 1 returns)                                    \r\n{ 1, 0, 0, 0 }, // Argument(\"self\", at::nullopt, at::nullopt, DynamicType::get())           \r\n{ 2, 0, 0, 0 }, // Argument(\"result\", at::nullopt, at::nullopt, DynamicType::get())         \r\n// Arguments for convolution (9 args, 1 returns)                                            \r\n{ 461, 0, 0, 0 }, // Argument(\"input\", at::nullopt, at::nullopt, DynamicType::get())        \r\n{ 107, 0, 0, 0 }, // Argument(\"weight\", at::nullopt, at::nullopt, DynamicType::get())       \r\n{ 385, 0, 0, 0 }, // Argument(\"bias\", at::nullopt, at::nullopt, DynamicType::get())         \r\n{ 208, 0, 0, 1 }, // Argument(\"stride\", at::nullopt, AttributeInfo{ AttributeKind::is, at::n\r\n{ 317, 0, 0, 1 }, // Argument(\"padding\", at::nullopt, AttributeInfo{ AttributeKind::is, at::\r\n{ 330, 0, 0, 1 }, // Argument(\"dilation\", at::nullopt, AttributeInfo{ AttributeKind::is, at:\r\n{ 472, 0, 0, 2 }, // Argument(\"transposed\", at::nullopt, AttributeInfo{ AttributeKind::i, at\r\n{ 396, 0, 0, 1 }, // Argument(\"output_padding\", at::nullopt, AttributeInfo{ AttributeKind::i\r\n{ 473, 0, 0, 2 }, // Argument(\"groups\", at::nullopt, AttributeInfo{ AttributeKind::i, at::nu\r\n{ 2, 0, 0, 0 }, // Argument(\"result\", at::nullopt, at::nullopt, DynamicType::get())         \r\n// Arguments for _convolution (12 args, 1 returns)                                          \r\n{ 461, 0, 0, 0 }, // Argument(\"input\", at::nullopt, at::nullopt, DynamicType::get())        \r\n{ 107, 0, 0, 0 }, // Argument(\"weight\", at::nullopt, at::nullopt, DynamicType::get())       \r\n{ 385, 0, 0, 0 }, // Argument(\"bias\", at::nullopt, at::nullopt, DynamicType::get())         \r\n{ 208, 0, 0, 1 }, // Argument(\"stride\", at::nullopt, AttributeInfo{ AttributeKind::is, at::n\r\n{ 317, 0, 0, 1 }, // Argument(\"padding\", at::nullopt, AttributeInfo{ AttributeKind::is, at::\r\n{ 330, 0, 0, 1 }, // Argument(\"dilation\", at::nullopt, AttributeInfo{ AttributeKind::is, at:\r\n{ 472, 0, 0, 2 }, // Argument(\"transposed\", at::nullopt, AttributeInfo{ AttributeKind::i, at\r\n{ 396, 0, 0, 1 }, // Argument(\"output_padding\", at::nullopt, AttributeInfo{ AttributeKind::i\r\n{ 473, 0, 0, 2 }, // Argument(\"groups\", at::nullopt, AttributeInfo{ AttributeKind::i, at::nu\r\n{ 475, 0, 0, 2 }, // Argument(\"benchmark\", at::nullopt, AttributeInfo{ AttributeKind::i, at:\r\n{ 476, 0, 0, 2 }, // Argument(\"deterministic\", at::nullopt, AttributeInfo{ AttributeKind::i,\r\n{ 462, 0, 0, 2 }, // Argument(\"cudnn_enabled\", at::nullopt, AttributeInfo{ AttributeKind::i,\r\n{ 2, 0, 0, 0 }, // Argument(\"result\", at::nullopt, at::nullopt, DynamicType::get())         \r\n```", "created_at": "2018-06-06T09:29:14Z", "updated_at": "2018-09-20T16:55:46Z", "closed_at": "2018-06-06T17:11:40Z", "merged_at": "2018-06-06T17:11:40Z", "merge_commit_sha": "c0b2a2aa3b453d16aaae84031b42c54eae07705d", "assignee": null, "assignees": [], "requested_reviewers": [{"login": "ezyang", "id": 13564, "node_id": "MDQ6VXNlcjEzNTY0", "avatar_url": "https://avatars0.githubusercontent.com/u/13564?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ezyang", "html_url": "https://github.com/ezyang", "followers_url": "https://api.github.com/users/ezyang/followers", "following_url": "https://api.github.com/users/ezyang/following{/other_user}", "gists_url": "https://api.github.com/users/ezyang/gists{/gist_id}", "starred_url": "https://api.github.com/users/ezyang/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ezyang/subscriptions", "organizations_url": "https://api.github.com/users/ezyang/orgs", "repos_url": "https://api.github.com/users/ezyang/repos", "events_url": "https://api.github.com/users/ezyang/events{/privacy}", "received_events_url": "https://api.github.com/users/ezyang/received_events", "type": "User", "site_admin": false}, {"login": "zdevito", "id": 370202, "node_id": "MDQ6VXNlcjM3MDIwMg==", "avatar_url": "https://avatars0.githubusercontent.com/u/370202?v=4", "gravatar_id": "", "url": "https://api.github.com/users/zdevito", "html_url": "https://github.com/zdevito", "followers_url": "https://api.github.com/users/zdevito/followers", "following_url": "https://api.github.com/users/zdevito/following{/other_user}", "gists_url": "https://api.github.com/users/zdevito/gists{/gist_id}", "starred_url": "https://api.github.com/users/zdevito/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/zdevito/subscriptions", "organizations_url": "https://api.github.com/users/zdevito/orgs", "repos_url": "https://api.github.com/users/zdevito/repos", "events_url": "https://api.github.com/users/zdevito/events{/privacy}", "received_events_url": "https://api.github.com/users/zdevito/received_events", "type": "User", "site_admin": false}, {"login": "colesbury", "id": 655866, "node_id": "MDQ6VXNlcjY1NTg2Ng==", "avatar_url": "https://avatars1.githubusercontent.com/u/655866?v=4", "gravatar_id": "", "url": "https://api.github.com/users/colesbury", "html_url": "https://github.com/colesbury", "followers_url": "https://api.github.com/users/colesbury/followers", "following_url": "https://api.github.com/users/colesbury/following{/other_user}", "gists_url": "https://api.github.com/users/colesbury/gists{/gist_id}", "starred_url": "https://api.github.com/users/colesbury/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/colesbury/subscriptions", "organizations_url": "https://api.github.com/users/colesbury/orgs", "repos_url": "https://api.github.com/users/colesbury/repos", "events_url": "https://api.github.com/users/colesbury/events{/privacy}", "received_events_url": "https://api.github.com/users/colesbury/received_events", "type": "User", "site_admin": false}, {"login": "gchanan", "id": 3768583, "node_id": "MDQ6VXNlcjM3Njg1ODM=", "avatar_url": "https://avatars2.githubusercontent.com/u/3768583?v=4", "gravatar_id": "", "url": "https://api.github.com/users/gchanan", "html_url": "https://github.com/gchanan", "followers_url": "https://api.github.com/users/gchanan/followers", "following_url": "https://api.github.com/users/gchanan/following{/other_user}", "gists_url": "https://api.github.com/users/gchanan/gists{/gist_id}", "starred_url": "https://api.github.com/users/gchanan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/gchanan/subscriptions", "organizations_url": "https://api.github.com/users/gchanan/orgs", "repos_url": "https://api.github.com/users/gchanan/repos", "events_url": "https://api.github.com/users/gchanan/events{/privacy}", "received_events_url": "https://api.github.com/users/gchanan/received_events", "type": "User", "site_admin": false}], "requested_teams": [], "labels": [], "milestone": null, "commits_url": "https://api.github.com/repos/pytorch/pytorch/pulls/8192/commits", "review_comments_url": "https://api.github.com/repos/pytorch/pytorch/pulls/8192/comments", "review_comment_url": "https://api.github.com/repos/pytorch/pytorch/pulls/comments{/number}", "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/8192/comments", "statuses_url": "https://api.github.com/repos/pytorch/pytorch/statuses/cdf1fcb5a54805a2d117308e763d975590b5ca45", "head": {"label": "pytorch:schema_annotation", "ref": "schema_annotation", "sha": "cdf1fcb5a54805a2d117308e763d975590b5ca45", "user": {"login": "pytorch", "id": 21003710, "node_id": "MDEyOk9yZ2FuaXphdGlvbjIxMDAzNzEw", "avatar_url": "https://avatars3.githubusercontent.com/u/21003710?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pytorch", "html_url": "https://github.com/pytorch", "followers_url": "https://api.github.com/users/pytorch/followers", "following_url": "https://api.github.com/users/pytorch/following{/other_user}", "gists_url": "https://api.github.com/users/pytorch/gists{/gist_id}", "starred_url": "https://api.github.com/users/pytorch/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pytorch/subscriptions", "organizations_url": "https://api.github.com/users/pytorch/orgs", "repos_url": "https://api.github.com/users/pytorch/repos", "events_url": "https://api.github.com/users/pytorch/events{/privacy}", "received_events_url": "https://api.github.com/users/pytorch/received_events", "type": "Organization", "site_admin": false}, "repo": {"id": 65600975, "node_id": "MDEwOlJlcG9zaXRvcnk2NTYwMDk3NQ==", "name": "pytorch", "full_name": "pytorch/pytorch", "private": false, "owner": {"login": "pytorch", "id": 21003710, "node_id": "MDEyOk9yZ2FuaXphdGlvbjIxMDAzNzEw", "avatar_url": "https://avatars3.githubusercontent.com/u/21003710?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pytorch", "html_url": "https://github.com/pytorch", "followers_url": "https://api.github.com/users/pytorch/followers", "following_url": "https://api.github.com/users/pytorch/following{/other_user}", "gists_url": "https://api.github.com/users/pytorch/gists{/gist_id}", "starred_url": "https://api.github.com/users/pytorch/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pytorch/subscriptions", "organizations_url": "https://api.github.com/users/pytorch/orgs", "repos_url": "https://api.github.com/users/pytorch/repos", "events_url": "https://api.github.com/users/pytorch/events{/privacy}", "received_events_url": "https://api.github.com/users/pytorch/received_events", "type": "Organization", "site_admin": false}, "html_url": "https://github.com/pytorch/pytorch", "description": "Tensors and Dynamic neural networks in Python  with strong GPU acceleration", "fork": false, "url": "https://api.github.com/repos/pytorch/pytorch", "forks_url": "https://api.github.com/repos/pytorch/pytorch/forks", "keys_url": "https://api.github.com/repos/pytorch/pytorch/keys{/key_id}", "collaborators_url": "https://api.github.com/repos/pytorch/pytorch/collaborators{/collaborator}", "teams_url": "https://api.github.com/repos/pytorch/pytorch/teams", "hooks_url": "https://api.github.com/repos/pytorch/pytorch/hooks", "issue_events_url": "https://api.github.com/repos/pytorch/pytorch/issues/events{/number}", "events_url": "https://api.github.com/repos/pytorch/pytorch/events", "assignees_url": "https://api.github.com/repos/pytorch/pytorch/assignees{/user}", "branches_url": "https://api.github.com/repos/pytorch/pytorch/branches{/branch}", "tags_url": "https://api.github.com/repos/pytorch/pytorch/tags", "blobs_url": "https://api.github.com/repos/pytorch/pytorch/git/blobs{/sha}", "git_tags_url": "https://api.github.com/repos/pytorch/pytorch/git/tags{/sha}", "git_refs_url": "https://api.github.com/repos/pytorch/pytorch/git/refs{/sha}", "trees_url": "https://api.github.com/repos/pytorch/pytorch/git/trees{/sha}", "statuses_url": "https://api.github.com/repos/pytorch/pytorch/statuses/{sha}", "languages_url": "https://api.github.com/repos/pytorch/pytorch/languages", "stargazers_url": "https://api.github.com/repos/pytorch/pytorch/stargazers", "contributors_url": "https://api.github.com/repos/pytorch/pytorch/contributors", "subscribers_url": "https://api.github.com/repos/pytorch/pytorch/subscribers", "subscription_url": "https://api.github.com/repos/pytorch/pytorch/subscription", "commits_url": "https://api.github.com/repos/pytorch/pytorch/commits{/sha}", "git_commits_url": "https://api.github.com/repos/pytorch/pytorch/git/commits{/sha}", "comments_url": "https://api.github.com/repos/pytorch/pytorch/comments{/number}", "issue_comment_url": "https://api.github.com/repos/pytorch/pytorch/issues/comments{/number}", "contents_url": "https://api.github.com/repos/pytorch/pytorch/contents/{+path}", "compare_url": "https://api.github.com/repos/pytorch/pytorch/compare/{base}...{head}", "merges_url": "https://api.github.com/repos/pytorch/pytorch/merges", "archive_url": "https://api.github.com/repos/pytorch/pytorch/{archive_format}{/ref}", "downloads_url": "https://api.github.com/repos/pytorch/pytorch/downloads", "issues_url": "https://api.github.com/repos/pytorch/pytorch/issues{/number}", "pulls_url": "https://api.github.com/repos/pytorch/pytorch/pulls{/number}", "milestones_url": "https://api.github.com/repos/pytorch/pytorch/milestones{/number}", "notifications_url": "https://api.github.com/repos/pytorch/pytorch/notifications{?since,all,participating}", "labels_url": "https://api.github.com/repos/pytorch/pytorch/labels{/name}", "releases_url": "https://api.github.com/repos/pytorch/pytorch/releases{/id}", "deployments_url": "https://api.github.com/repos/pytorch/pytorch/deployments", "created_at": "2016-08-13T05:26:41Z", "updated_at": "2018-11-24T14:27:35Z", "pushed_at": "2018-11-24T12:42:01Z", "git_url": "git://github.com/pytorch/pytorch.git", "ssh_url": "git@github.com:pytorch/pytorch.git", "clone_url": "https://github.com/pytorch/pytorch.git", "svn_url": "https://github.com/pytorch/pytorch", "homepage": "http://pytorch.org", "size": 89656, "stargazers_count": 21591, "watchers_count": 21591, "language": "C++", "has_issues": true, "has_projects": true, "has_downloads": true, "has_wiki": true, "has_pages": false, "forks_count": 5154, "mirror_url": null, "archived": false, "open_issues_count": 2196, "license": {"key": "other", "name": "Other", "spdx_id": "NOASSERTION", "url": null, "node_id": "MDc6TGljZW5zZTA="}, "forks": 5154, "open_issues": 2196, "watchers": 21591, "default_branch": "master"}}, "base": {"label": "pytorch:master", "ref": "master", "sha": "f45a3d55583d2170a4c857ad4ad4a9b3b1c4c027", "user": {"login": "pytorch", "id": 21003710, "node_id": "MDEyOk9yZ2FuaXphdGlvbjIxMDAzNzEw", "avatar_url": "https://avatars3.githubusercontent.com/u/21003710?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pytorch", "html_url": "https://github.com/pytorch", "followers_url": "https://api.github.com/users/pytorch/followers", "following_url": "https://api.github.com/users/pytorch/following{/other_user}", "gists_url": "https://api.github.com/users/pytorch/gists{/gist_id}", "starred_url": "https://api.github.com/users/pytorch/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pytorch/subscriptions", "organizations_url": "https://api.github.com/users/pytorch/orgs", "repos_url": "https://api.github.com/users/pytorch/repos", "events_url": "https://api.github.com/users/pytorch/events{/privacy}", "received_events_url": "https://api.github.com/users/pytorch/received_events", "type": "Organization", "site_admin": false}, "repo": {"id": 65600975, "node_id": "MDEwOlJlcG9zaXRvcnk2NTYwMDk3NQ==", "name": "pytorch", "full_name": "pytorch/pytorch", "private": false, "owner": {"login": "pytorch", "id": 21003710, "node_id": "MDEyOk9yZ2FuaXphdGlvbjIxMDAzNzEw", "avatar_url": "https://avatars3.githubusercontent.com/u/21003710?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pytorch", "html_url": "https://github.com/pytorch", "followers_url": "https://api.github.com/users/pytorch/followers", "following_url": "https://api.github.com/users/pytorch/following{/other_user}", "gists_url": "https://api.github.com/users/pytorch/gists{/gist_id}", "starred_url": "https://api.github.com/users/pytorch/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pytorch/subscriptions", "organizations_url": "https://api.github.com/users/pytorch/orgs", "repos_url": "https://api.github.com/users/pytorch/repos", "events_url": "https://api.github.com/users/pytorch/events{/privacy}", "received_events_url": "https://api.github.com/users/pytorch/received_events", "type": "Organization", "site_admin": false}, "html_url": "https://github.com/pytorch/pytorch", "description": "Tensors and Dynamic neural networks in Python  with strong GPU acceleration", "fork": false, "url": "https://api.github.com/repos/pytorch/pytorch", "forks_url": "https://api.github.com/repos/pytorch/pytorch/forks", "keys_url": "https://api.github.com/repos/pytorch/pytorch/keys{/key_id}", "collaborators_url": "https://api.github.com/repos/pytorch/pytorch/collaborators{/collaborator}", "teams_url": "https://api.github.com/repos/pytorch/pytorch/teams", "hooks_url": "https://api.github.com/repos/pytorch/pytorch/hooks", "issue_events_url": "https://api.github.com/repos/pytorch/pytorch/issues/events{/number}", "events_url": "https://api.github.com/repos/pytorch/pytorch/events", "assignees_url": "https://api.github.com/repos/pytorch/pytorch/assignees{/user}", "branches_url": "https://api.github.com/repos/pytorch/pytorch/branches{/branch}", "tags_url": "https://api.github.com/repos/pytorch/pytorch/tags", "blobs_url": "https://api.github.com/repos/pytorch/pytorch/git/blobs{/sha}", "git_tags_url": "https://api.github.com/repos/pytorch/pytorch/git/tags{/sha}", "git_refs_url": "https://api.github.com/repos/pytorch/pytorch/git/refs{/sha}", "trees_url": "https://api.github.com/repos/pytorch/pytorch/git/trees{/sha}", "statuses_url": "https://api.github.com/repos/pytorch/pytorch/statuses/{sha}", "languages_url": "https://api.github.com/repos/pytorch/pytorch/languages", "stargazers_url": "https://api.github.com/repos/pytorch/pytorch/stargazers", "contributors_url": "https://api.github.com/repos/pytorch/pytorch/contributors", "subscribers_url": "https://api.github.com/repos/pytorch/pytorch/subscribers", "subscription_url": "https://api.github.com/repos/pytorch/pytorch/subscription", "commits_url": "https://api.github.com/repos/pytorch/pytorch/commits{/sha}", "git_commits_url": "https://api.github.com/repos/pytorch/pytorch/git/commits{/sha}", "comments_url": "https://api.github.com/repos/pytorch/pytorch/comments{/number}", "issue_comment_url": "https://api.github.com/repos/pytorch/pytorch/issues/comments{/number}", "contents_url": "https://api.github.com/repos/pytorch/pytorch/contents/{+path}", "compare_url": "https://api.github.com/repos/pytorch/pytorch/compare/{base}...{head}", "merges_url": "https://api.github.com/repos/pytorch/pytorch/merges", "archive_url": "https://api.github.com/repos/pytorch/pytorch/{archive_format}{/ref}", "downloads_url": "https://api.github.com/repos/pytorch/pytorch/downloads", "issues_url": "https://api.github.com/repos/pytorch/pytorch/issues{/number}", "pulls_url": "https://api.github.com/repos/pytorch/pytorch/pulls{/number}", "milestones_url": "https://api.github.com/repos/pytorch/pytorch/milestones{/number}", "notifications_url": "https://api.github.com/repos/pytorch/pytorch/notifications{?since,all,participating}", "labels_url": "https://api.github.com/repos/pytorch/pytorch/labels{/name}", "releases_url": "https://api.github.com/repos/pytorch/pytorch/releases{/id}", "deployments_url": "https://api.github.com/repos/pytorch/pytorch/deployments", "created_at": "2016-08-13T05:26:41Z", "updated_at": "2018-11-24T14:27:35Z", "pushed_at": "2018-11-24T12:42:01Z", "git_url": "git://github.com/pytorch/pytorch.git", "ssh_url": "git@github.com:pytorch/pytorch.git", "clone_url": "https://github.com/pytorch/pytorch.git", "svn_url": "https://github.com/pytorch/pytorch", "homepage": "http://pytorch.org", "size": 89656, "stargazers_count": 21591, "watchers_count": 21591, "language": "C++", "has_issues": true, "has_projects": true, "has_downloads": true, "has_wiki": true, "has_pages": false, "forks_count": 5154, "mirror_url": null, "archived": false, "open_issues_count": 2196, "license": {"key": "other", "name": "Other", "spdx_id": "NOASSERTION", "url": null, "node_id": "MDc6TGljZW5zZTA="}, "forks": 5154, "open_issues": 2196, "watchers": 21591, "default_branch": "master"}}, "_links": {"self": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/8192"}, "html": {"href": "https://github.com/pytorch/pytorch/pull/8192"}, "issue": {"href": "https://api.github.com/repos/pytorch/pytorch/issues/8192"}, "comments": {"href": "https://api.github.com/repos/pytorch/pytorch/issues/8192/comments"}, "review_comments": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/8192/comments"}, "review_comment": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/comments{/number}"}, "commits": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/8192/commits"}, "statuses": {"href": "https://api.github.com/repos/pytorch/pytorch/statuses/cdf1fcb5a54805a2d117308e763d975590b5ca45"}}, "author_association": "MEMBER", "body_html": "<p>A completely minor change, but improves readability of ATen schema by a great deal. Our <code>FunctionSchema</code> list contains triples with: an offset into our string table, and the number of arguments and returns to be read out from the <strong>current</strong> position in the argument list. This is ok for an automatic parser, but it makes it impossible to associate <code>FunctionSchema</code> with its <code>ArgumentSchema</code>s automatically. This PR simply adds comments that separate and annotate <code>ArgumentSchema</code>s for different functions, which makes them very easy to find.</p>\n<p><a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=370202\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/zdevito\">@zdevito</a> <a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=4685384\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/jamesr66a\">@jamesr66a</a></p>\n<p>Previously (the output is truncated at some column, because I only copied part of it, not because of the code):</p>\n<div class=\"highlight highlight-source-c++\"><pre>{ <span class=\"pl-c1\">210</span>, <span class=\"pl-c1\">1</span>, <span class=\"pl-c1\">0</span>, <span class=\"pl-c1\">0</span> }, <span class=\"pl-c\"><span class=\"pl-c\">//</span> Argument(\"tensors\", at::nullopt, at::nullopt, ListType::ofTensors())   </span>\n{ <span class=\"pl-c1\">15</span>, <span class=\"pl-c1\">0</span>, <span class=\"pl-c1\">8</span>, <span class=\"pl-c1\">2</span> }, <span class=\"pl-c\"><span class=\"pl-c\">//</span> Argument(\"dim\", as_tensor(int64_t(0)), AttributeInfo{ AttributeKind::i, </span>\n{ <span class=\"pl-c1\">2</span>, <span class=\"pl-c1\">0</span>, <span class=\"pl-c1\">0</span>, <span class=\"pl-c1\">0</span> }, <span class=\"pl-c\"><span class=\"pl-c\">//</span> Argument(\"result\", at::nullopt, at::nullopt, DynamicType::get())         </span>\n{ <span class=\"pl-c1\">1</span>, <span class=\"pl-c1\">0</span>, <span class=\"pl-c1\">0</span>, <span class=\"pl-c1\">0</span> }, <span class=\"pl-c\"><span class=\"pl-c\">//</span> Argument(\"self\", at::nullopt, at::nullopt, DynamicType::get())           </span>\n{ <span class=\"pl-c1\">2</span>, <span class=\"pl-c1\">0</span>, <span class=\"pl-c1\">0</span>, <span class=\"pl-c1\">0</span> }, <span class=\"pl-c\"><span class=\"pl-c\">//</span> Argument(\"result\", at::nullopt, at::nullopt, DynamicType::get())         </span>\n{ <span class=\"pl-c1\">1</span>, <span class=\"pl-c1\">0</span>, <span class=\"pl-c1\">0</span>, <span class=\"pl-c1\">0</span> }, <span class=\"pl-c\"><span class=\"pl-c\">//</span> Argument(\"self\", at::nullopt, at::nullopt, DynamicType::get())           </span>\n{ <span class=\"pl-c1\">469</span>, <span class=\"pl-c1\">0</span>, <span class=\"pl-c1\">0</span>, <span class=\"pl-c1\">2</span> }, <span class=\"pl-c\"><span class=\"pl-c\">//</span> Argument(\"chunks\", at::nullopt, AttributeInfo{ AttributeKind::i, at::nu</span>\n{ <span class=\"pl-c1\">15</span>, <span class=\"pl-c1\">0</span>, <span class=\"pl-c1\">8</span>, <span class=\"pl-c1\">2</span> }, <span class=\"pl-c\"><span class=\"pl-c\">//</span> Argument(\"dim\", as_tensor(int64_t(0)), AttributeInfo{ AttributeKind::i, </span>\n{ <span class=\"pl-c1\">2</span>, <span class=\"pl-c1\">0</span>, <span class=\"pl-c1\">0</span>, <span class=\"pl-c1\">0</span> }, <span class=\"pl-c\"><span class=\"pl-c\">//</span> Argument(\"result\", at::nullopt, at::nullopt, DynamicType::get())         </span>\n{ <span class=\"pl-c1\">1</span>, <span class=\"pl-c1\">0</span>, <span class=\"pl-c1\">0</span>, <span class=\"pl-c1\">0</span> }, <span class=\"pl-c\"><span class=\"pl-c\">//</span> Argument(\"self\", at::nullopt, at::nullopt, DynamicType::get())           </span>\n{ <span class=\"pl-c1\">2</span>, <span class=\"pl-c1\">0</span>, <span class=\"pl-c1\">0</span>, <span class=\"pl-c1\">0</span> }, <span class=\"pl-c\"><span class=\"pl-c\">//</span> Argument(\"result\", at::nullopt, at::nullopt, DynamicType::get())         </span>\n{ <span class=\"pl-c1\">461</span>, <span class=\"pl-c1\">0</span>, <span class=\"pl-c1\">0</span>, <span class=\"pl-c1\">0</span> }, <span class=\"pl-c\"><span class=\"pl-c\">//</span> Argument(\"input\", at::nullopt, at::nullopt, DynamicType::get())        </span>\n{ <span class=\"pl-c1\">107</span>, <span class=\"pl-c1\">0</span>, <span class=\"pl-c1\">0</span>, <span class=\"pl-c1\">0</span> }, <span class=\"pl-c\"><span class=\"pl-c\">//</span> Argument(\"weight\", at::nullopt, at::nullopt, DynamicType::get())       </span>\n{ <span class=\"pl-c1\">385</span>, <span class=\"pl-c1\">0</span>, <span class=\"pl-c1\">0</span>, <span class=\"pl-c1\">0</span> }, <span class=\"pl-c\"><span class=\"pl-c\">//</span> Argument(\"bias\", at::nullopt, at::nullopt, DynamicType::get())         </span>\n{ <span class=\"pl-c1\">208</span>, <span class=\"pl-c1\">0</span>, <span class=\"pl-c1\">0</span>, <span class=\"pl-c1\">1</span> }, <span class=\"pl-c\"><span class=\"pl-c\">//</span> Argument(\"stride\", at::nullopt, AttributeInfo{ AttributeKind::is, at::n</span>\n{ <span class=\"pl-c1\">317</span>, <span class=\"pl-c1\">0</span>, <span class=\"pl-c1\">0</span>, <span class=\"pl-c1\">1</span> }, <span class=\"pl-c\"><span class=\"pl-c\">//</span> Argument(\"padding\", at::nullopt, AttributeInfo{ AttributeKind::is, at::</span>\n{ <span class=\"pl-c1\">330</span>, <span class=\"pl-c1\">0</span>, <span class=\"pl-c1\">0</span>, <span class=\"pl-c1\">1</span> }, <span class=\"pl-c\"><span class=\"pl-c\">//</span> Argument(\"dilation\", at::nullopt, AttributeInfo{ AttributeKind::is, at:</span>\n{ <span class=\"pl-c1\">472</span>, <span class=\"pl-c1\">0</span>, <span class=\"pl-c1\">0</span>, <span class=\"pl-c1\">2</span> }, <span class=\"pl-c\"><span class=\"pl-c\">//</span> Argument(\"transposed\", at::nullopt, AttributeInfo{ AttributeKind::i, at</span>\n{ <span class=\"pl-c1\">396</span>, <span class=\"pl-c1\">0</span>, <span class=\"pl-c1\">0</span>, <span class=\"pl-c1\">1</span> }, <span class=\"pl-c\"><span class=\"pl-c\">//</span> Argument(\"output_padding\", at::nullopt, AttributeInfo{ AttributeKind::i</span>\n{ <span class=\"pl-c1\">473</span>, <span class=\"pl-c1\">0</span>, <span class=\"pl-c1\">0</span>, <span class=\"pl-c1\">2</span> }, <span class=\"pl-c\"><span class=\"pl-c\">//</span> Argument(\"groups\", at::nullopt, AttributeInfo{ AttributeKind::i, at::nu</span>\n{ <span class=\"pl-c1\">2</span>, <span class=\"pl-c1\">0</span>, <span class=\"pl-c1\">0</span>, <span class=\"pl-c1\">0</span> }, <span class=\"pl-c\"><span class=\"pl-c\">//</span> Argument(\"result\", at::nullopt, at::nullopt, DynamicType::get())         </span>\n{ <span class=\"pl-c1\">461</span>, <span class=\"pl-c1\">0</span>, <span class=\"pl-c1\">0</span>, <span class=\"pl-c1\">0</span> }, <span class=\"pl-c\"><span class=\"pl-c\">//</span> Argument(\"input\", at::nullopt, at::nullopt, DynamicType::get())        </span>\n{ <span class=\"pl-c1\">107</span>, <span class=\"pl-c1\">0</span>, <span class=\"pl-c1\">0</span>, <span class=\"pl-c1\">0</span> }, <span class=\"pl-c\"><span class=\"pl-c\">//</span> Argument(\"weight\", at::nullopt, at::nullopt, DynamicType::get())       </span>\n{ <span class=\"pl-c1\">385</span>, <span class=\"pl-c1\">0</span>, <span class=\"pl-c1\">0</span>, <span class=\"pl-c1\">0</span> }, <span class=\"pl-c\"><span class=\"pl-c\">//</span> Argument(\"bias\", at::nullopt, at::nullopt, DynamicType::get())         </span>\n{ <span class=\"pl-c1\">208</span>, <span class=\"pl-c1\">0</span>, <span class=\"pl-c1\">0</span>, <span class=\"pl-c1\">1</span> }, <span class=\"pl-c\"><span class=\"pl-c\">//</span> Argument(\"stride\", at::nullopt, AttributeInfo{ AttributeKind::is, at::n</span>\n{ <span class=\"pl-c1\">317</span>, <span class=\"pl-c1\">0</span>, <span class=\"pl-c1\">0</span>, <span class=\"pl-c1\">1</span> }, <span class=\"pl-c\"><span class=\"pl-c\">//</span> Argument(\"padding\", at::nullopt, AttributeInfo{ AttributeKind::is, at::</span>\n{ <span class=\"pl-c1\">330</span>, <span class=\"pl-c1\">0</span>, <span class=\"pl-c1\">0</span>, <span class=\"pl-c1\">1</span> }, <span class=\"pl-c\"><span class=\"pl-c\">//</span> Argument(\"dilation\", at::nullopt, AttributeInfo{ AttributeKind::is, at:</span>\n{ <span class=\"pl-c1\">472</span>, <span class=\"pl-c1\">0</span>, <span class=\"pl-c1\">0</span>, <span class=\"pl-c1\">2</span> }, <span class=\"pl-c\"><span class=\"pl-c\">//</span> Argument(\"transposed\", at::nullopt, AttributeInfo{ AttributeKind::i, at</span>\n{ <span class=\"pl-c1\">396</span>, <span class=\"pl-c1\">0</span>, <span class=\"pl-c1\">0</span>, <span class=\"pl-c1\">1</span> }, <span class=\"pl-c\"><span class=\"pl-c\">//</span> Argument(\"output_padding\", at::nullopt, AttributeInfo{ AttributeKind::i</span>\n{ <span class=\"pl-c1\">473</span>, <span class=\"pl-c1\">0</span>, <span class=\"pl-c1\">0</span>, <span class=\"pl-c1\">2</span> }, <span class=\"pl-c\"><span class=\"pl-c\">//</span> Argument(\"groups\", at::nullopt, AttributeInfo{ AttributeKind::i, at::nu</span>\n{ <span class=\"pl-c1\">475</span>, <span class=\"pl-c1\">0</span>, <span class=\"pl-c1\">0</span>, <span class=\"pl-c1\">2</span> }, <span class=\"pl-c\"><span class=\"pl-c\">//</span> Argument(\"benchmark\", at::nullopt, AttributeInfo{ AttributeKind::i, at:</span>\n{ <span class=\"pl-c1\">476</span>, <span class=\"pl-c1\">0</span>, <span class=\"pl-c1\">0</span>, <span class=\"pl-c1\">2</span> }, <span class=\"pl-c\"><span class=\"pl-c\">//</span> Argument(\"deterministic\", at::nullopt, AttributeInfo{ AttributeKind::i,</span>\n{ <span class=\"pl-c1\">462</span>, <span class=\"pl-c1\">0</span>, <span class=\"pl-c1\">0</span>, <span class=\"pl-c1\">2</span> }, <span class=\"pl-c\"><span class=\"pl-c\">//</span> Argument(\"cudnn_enabled\", at::nullopt, AttributeInfo{ AttributeKind::i,</span>\n{ <span class=\"pl-c1\">2</span>, <span class=\"pl-c1\">0</span>, <span class=\"pl-c1\">0</span>, <span class=\"pl-c1\">0</span> }, <span class=\"pl-c\"><span class=\"pl-c\">//</span> Argument(\"result\", at::nullopt, at::nullopt, DynamicType::get())         </span></pre></div>\n<p>Now:</p>\n<div class=\"highlight highlight-source-c++\"><pre><span class=\"pl-c\"><span class=\"pl-c\">//</span> Arguments for cat (2 args, 1 returns)                                                    </span>\n{ <span class=\"pl-c1\">210</span>, <span class=\"pl-c1\">1</span>, <span class=\"pl-c1\">0</span>, <span class=\"pl-c1\">0</span> }, <span class=\"pl-c\"><span class=\"pl-c\">//</span> Argument(\"tensors\", at::nullopt, at::nullopt, ListType::ofTensors())   </span>\n{ <span class=\"pl-c1\">15</span>, <span class=\"pl-c1\">0</span>, <span class=\"pl-c1\">8</span>, <span class=\"pl-c1\">2</span> }, <span class=\"pl-c\"><span class=\"pl-c\">//</span> Argument(\"dim\", as_tensor(int64_t(0)), AttributeInfo{ AttributeKind::i, </span>\n{ <span class=\"pl-c1\">2</span>, <span class=\"pl-c1\">0</span>, <span class=\"pl-c1\">0</span>, <span class=\"pl-c1\">0</span> }, <span class=\"pl-c\"><span class=\"pl-c\">//</span> Argument(\"result\", at::nullopt, at::nullopt, DynamicType::get())         </span>\n<span class=\"pl-c\"><span class=\"pl-c\">//</span> Arguments for ceil (1 args, 1 returns)                                                   </span>\n{ <span class=\"pl-c1\">1</span>, <span class=\"pl-c1\">0</span>, <span class=\"pl-c1\">0</span>, <span class=\"pl-c1\">0</span> }, <span class=\"pl-c\"><span class=\"pl-c\">//</span> Argument(\"self\", at::nullopt, at::nullopt, DynamicType::get())           </span>\n{ <span class=\"pl-c1\">2</span>, <span class=\"pl-c1\">0</span>, <span class=\"pl-c1\">0</span>, <span class=\"pl-c1\">0</span> }, <span class=\"pl-c\"><span class=\"pl-c\">//</span> Argument(\"result\", at::nullopt, at::nullopt, DynamicType::get())         </span>\n<span class=\"pl-c\"><span class=\"pl-c\">//</span> Arguments for chunk (3 args, 1 returns)                                                  </span>\n{ <span class=\"pl-c1\">1</span>, <span class=\"pl-c1\">0</span>, <span class=\"pl-c1\">0</span>, <span class=\"pl-c1\">0</span> }, <span class=\"pl-c\"><span class=\"pl-c\">//</span> Argument(\"self\", at::nullopt, at::nullopt, DynamicType::get())           </span>\n{ <span class=\"pl-c1\">469</span>, <span class=\"pl-c1\">0</span>, <span class=\"pl-c1\">0</span>, <span class=\"pl-c1\">2</span> }, <span class=\"pl-c\"><span class=\"pl-c\">//</span> Argument(\"chunks\", at::nullopt, AttributeInfo{ AttributeKind::i, at::nu</span>\n{ <span class=\"pl-c1\">15</span>, <span class=\"pl-c1\">0</span>, <span class=\"pl-c1\">8</span>, <span class=\"pl-c1\">2</span> }, <span class=\"pl-c\"><span class=\"pl-c\">//</span> Argument(\"dim\", as_tensor(int64_t(0)), AttributeInfo{ AttributeKind::i, </span>\n{ <span class=\"pl-c1\">2</span>, <span class=\"pl-c1\">0</span>, <span class=\"pl-c1\">0</span>, <span class=\"pl-c1\">0</span> }, <span class=\"pl-c\"><span class=\"pl-c\">//</span> Argument(\"result\", at::nullopt, at::nullopt, DynamicType::get())         </span>\n<span class=\"pl-c\"><span class=\"pl-c\">//</span> Arguments for cudnn_is_acceptable (1 args, 1 returns)                                    </span>\n{ <span class=\"pl-c1\">1</span>, <span class=\"pl-c1\">0</span>, <span class=\"pl-c1\">0</span>, <span class=\"pl-c1\">0</span> }, <span class=\"pl-c\"><span class=\"pl-c\">//</span> Argument(\"self\", at::nullopt, at::nullopt, DynamicType::get())           </span>\n{ <span class=\"pl-c1\">2</span>, <span class=\"pl-c1\">0</span>, <span class=\"pl-c1\">0</span>, <span class=\"pl-c1\">0</span> }, <span class=\"pl-c\"><span class=\"pl-c\">//</span> Argument(\"result\", at::nullopt, at::nullopt, DynamicType::get())         </span>\n<span class=\"pl-c\"><span class=\"pl-c\">//</span> Arguments for convolution (9 args, 1 returns)                                            </span>\n{ <span class=\"pl-c1\">461</span>, <span class=\"pl-c1\">0</span>, <span class=\"pl-c1\">0</span>, <span class=\"pl-c1\">0</span> }, <span class=\"pl-c\"><span class=\"pl-c\">//</span> Argument(\"input\", at::nullopt, at::nullopt, DynamicType::get())        </span>\n{ <span class=\"pl-c1\">107</span>, <span class=\"pl-c1\">0</span>, <span class=\"pl-c1\">0</span>, <span class=\"pl-c1\">0</span> }, <span class=\"pl-c\"><span class=\"pl-c\">//</span> Argument(\"weight\", at::nullopt, at::nullopt, DynamicType::get())       </span>\n{ <span class=\"pl-c1\">385</span>, <span class=\"pl-c1\">0</span>, <span class=\"pl-c1\">0</span>, <span class=\"pl-c1\">0</span> }, <span class=\"pl-c\"><span class=\"pl-c\">//</span> Argument(\"bias\", at::nullopt, at::nullopt, DynamicType::get())         </span>\n{ <span class=\"pl-c1\">208</span>, <span class=\"pl-c1\">0</span>, <span class=\"pl-c1\">0</span>, <span class=\"pl-c1\">1</span> }, <span class=\"pl-c\"><span class=\"pl-c\">//</span> Argument(\"stride\", at::nullopt, AttributeInfo{ AttributeKind::is, at::n</span>\n{ <span class=\"pl-c1\">317</span>, <span class=\"pl-c1\">0</span>, <span class=\"pl-c1\">0</span>, <span class=\"pl-c1\">1</span> }, <span class=\"pl-c\"><span class=\"pl-c\">//</span> Argument(\"padding\", at::nullopt, AttributeInfo{ AttributeKind::is, at::</span>\n{ <span class=\"pl-c1\">330</span>, <span class=\"pl-c1\">0</span>, <span class=\"pl-c1\">0</span>, <span class=\"pl-c1\">1</span> }, <span class=\"pl-c\"><span class=\"pl-c\">//</span> Argument(\"dilation\", at::nullopt, AttributeInfo{ AttributeKind::is, at:</span>\n{ <span class=\"pl-c1\">472</span>, <span class=\"pl-c1\">0</span>, <span class=\"pl-c1\">0</span>, <span class=\"pl-c1\">2</span> }, <span class=\"pl-c\"><span class=\"pl-c\">//</span> Argument(\"transposed\", at::nullopt, AttributeInfo{ AttributeKind::i, at</span>\n{ <span class=\"pl-c1\">396</span>, <span class=\"pl-c1\">0</span>, <span class=\"pl-c1\">0</span>, <span class=\"pl-c1\">1</span> }, <span class=\"pl-c\"><span class=\"pl-c\">//</span> Argument(\"output_padding\", at::nullopt, AttributeInfo{ AttributeKind::i</span>\n{ <span class=\"pl-c1\">473</span>, <span class=\"pl-c1\">0</span>, <span class=\"pl-c1\">0</span>, <span class=\"pl-c1\">2</span> }, <span class=\"pl-c\"><span class=\"pl-c\">//</span> Argument(\"groups\", at::nullopt, AttributeInfo{ AttributeKind::i, at::nu</span>\n{ <span class=\"pl-c1\">2</span>, <span class=\"pl-c1\">0</span>, <span class=\"pl-c1\">0</span>, <span class=\"pl-c1\">0</span> }, <span class=\"pl-c\"><span class=\"pl-c\">//</span> Argument(\"result\", at::nullopt, at::nullopt, DynamicType::get())         </span>\n<span class=\"pl-c\"><span class=\"pl-c\">//</span> Arguments for _convolution (12 args, 1 returns)                                          </span>\n{ <span class=\"pl-c1\">461</span>, <span class=\"pl-c1\">0</span>, <span class=\"pl-c1\">0</span>, <span class=\"pl-c1\">0</span> }, <span class=\"pl-c\"><span class=\"pl-c\">//</span> Argument(\"input\", at::nullopt, at::nullopt, DynamicType::get())        </span>\n{ <span class=\"pl-c1\">107</span>, <span class=\"pl-c1\">0</span>, <span class=\"pl-c1\">0</span>, <span class=\"pl-c1\">0</span> }, <span class=\"pl-c\"><span class=\"pl-c\">//</span> Argument(\"weight\", at::nullopt, at::nullopt, DynamicType::get())       </span>\n{ <span class=\"pl-c1\">385</span>, <span class=\"pl-c1\">0</span>, <span class=\"pl-c1\">0</span>, <span class=\"pl-c1\">0</span> }, <span class=\"pl-c\"><span class=\"pl-c\">//</span> Argument(\"bias\", at::nullopt, at::nullopt, DynamicType::get())         </span>\n{ <span class=\"pl-c1\">208</span>, <span class=\"pl-c1\">0</span>, <span class=\"pl-c1\">0</span>, <span class=\"pl-c1\">1</span> }, <span class=\"pl-c\"><span class=\"pl-c\">//</span> Argument(\"stride\", at::nullopt, AttributeInfo{ AttributeKind::is, at::n</span>\n{ <span class=\"pl-c1\">317</span>, <span class=\"pl-c1\">0</span>, <span class=\"pl-c1\">0</span>, <span class=\"pl-c1\">1</span> }, <span class=\"pl-c\"><span class=\"pl-c\">//</span> Argument(\"padding\", at::nullopt, AttributeInfo{ AttributeKind::is, at::</span>\n{ <span class=\"pl-c1\">330</span>, <span class=\"pl-c1\">0</span>, <span class=\"pl-c1\">0</span>, <span class=\"pl-c1\">1</span> }, <span class=\"pl-c\"><span class=\"pl-c\">//</span> Argument(\"dilation\", at::nullopt, AttributeInfo{ AttributeKind::is, at:</span>\n{ <span class=\"pl-c1\">472</span>, <span class=\"pl-c1\">0</span>, <span class=\"pl-c1\">0</span>, <span class=\"pl-c1\">2</span> }, <span class=\"pl-c\"><span class=\"pl-c\">//</span> Argument(\"transposed\", at::nullopt, AttributeInfo{ AttributeKind::i, at</span>\n{ <span class=\"pl-c1\">396</span>, <span class=\"pl-c1\">0</span>, <span class=\"pl-c1\">0</span>, <span class=\"pl-c1\">1</span> }, <span class=\"pl-c\"><span class=\"pl-c\">//</span> Argument(\"output_padding\", at::nullopt, AttributeInfo{ AttributeKind::i</span>\n{ <span class=\"pl-c1\">473</span>, <span class=\"pl-c1\">0</span>, <span class=\"pl-c1\">0</span>, <span class=\"pl-c1\">2</span> }, <span class=\"pl-c\"><span class=\"pl-c\">//</span> Argument(\"groups\", at::nullopt, AttributeInfo{ AttributeKind::i, at::nu</span>\n{ <span class=\"pl-c1\">475</span>, <span class=\"pl-c1\">0</span>, <span class=\"pl-c1\">0</span>, <span class=\"pl-c1\">2</span> }, <span class=\"pl-c\"><span class=\"pl-c\">//</span> Argument(\"benchmark\", at::nullopt, AttributeInfo{ AttributeKind::i, at:</span>\n{ <span class=\"pl-c1\">476</span>, <span class=\"pl-c1\">0</span>, <span class=\"pl-c1\">0</span>, <span class=\"pl-c1\">2</span> }, <span class=\"pl-c\"><span class=\"pl-c\">//</span> Argument(\"deterministic\", at::nullopt, AttributeInfo{ AttributeKind::i,</span>\n{ <span class=\"pl-c1\">462</span>, <span class=\"pl-c1\">0</span>, <span class=\"pl-c1\">0</span>, <span class=\"pl-c1\">2</span> }, <span class=\"pl-c\"><span class=\"pl-c\">//</span> Argument(\"cudnn_enabled\", at::nullopt, AttributeInfo{ AttributeKind::i,</span>\n{ <span class=\"pl-c1\">2</span>, <span class=\"pl-c1\">0</span>, <span class=\"pl-c1\">0</span>, <span class=\"pl-c1\">0</span> }, <span class=\"pl-c\"><span class=\"pl-c\">//</span> Argument(\"result\", at::nullopt, at::nullopt, DynamicType::get())         </span></pre></div>", "body_text": "A completely minor change, but improves readability of ATen schema by a great deal. Our FunctionSchema list contains triples with: an offset into our string table, and the number of arguments and returns to be read out from the current position in the argument list. This is ok for an automatic parser, but it makes it impossible to associate FunctionSchema with its ArgumentSchemas automatically. This PR simply adds comments that separate and annotate ArgumentSchemas for different functions, which makes them very easy to find.\n@zdevito @jamesr66a\nPreviously (the output is truncated at some column, because I only copied part of it, not because of the code):\n{ 210, 1, 0, 0 }, // Argument(\"tensors\", at::nullopt, at::nullopt, ListType::ofTensors())   \n{ 15, 0, 8, 2 }, // Argument(\"dim\", as_tensor(int64_t(0)), AttributeInfo{ AttributeKind::i, \n{ 2, 0, 0, 0 }, // Argument(\"result\", at::nullopt, at::nullopt, DynamicType::get())         \n{ 1, 0, 0, 0 }, // Argument(\"self\", at::nullopt, at::nullopt, DynamicType::get())           \n{ 2, 0, 0, 0 }, // Argument(\"result\", at::nullopt, at::nullopt, DynamicType::get())         \n{ 1, 0, 0, 0 }, // Argument(\"self\", at::nullopt, at::nullopt, DynamicType::get())           \n{ 469, 0, 0, 2 }, // Argument(\"chunks\", at::nullopt, AttributeInfo{ AttributeKind::i, at::nu\n{ 15, 0, 8, 2 }, // Argument(\"dim\", as_tensor(int64_t(0)), AttributeInfo{ AttributeKind::i, \n{ 2, 0, 0, 0 }, // Argument(\"result\", at::nullopt, at::nullopt, DynamicType::get())         \n{ 1, 0, 0, 0 }, // Argument(\"self\", at::nullopt, at::nullopt, DynamicType::get())           \n{ 2, 0, 0, 0 }, // Argument(\"result\", at::nullopt, at::nullopt, DynamicType::get())         \n{ 461, 0, 0, 0 }, // Argument(\"input\", at::nullopt, at::nullopt, DynamicType::get())        \n{ 107, 0, 0, 0 }, // Argument(\"weight\", at::nullopt, at::nullopt, DynamicType::get())       \n{ 385, 0, 0, 0 }, // Argument(\"bias\", at::nullopt, at::nullopt, DynamicType::get())         \n{ 208, 0, 0, 1 }, // Argument(\"stride\", at::nullopt, AttributeInfo{ AttributeKind::is, at::n\n{ 317, 0, 0, 1 }, // Argument(\"padding\", at::nullopt, AttributeInfo{ AttributeKind::is, at::\n{ 330, 0, 0, 1 }, // Argument(\"dilation\", at::nullopt, AttributeInfo{ AttributeKind::is, at:\n{ 472, 0, 0, 2 }, // Argument(\"transposed\", at::nullopt, AttributeInfo{ AttributeKind::i, at\n{ 396, 0, 0, 1 }, // Argument(\"output_padding\", at::nullopt, AttributeInfo{ AttributeKind::i\n{ 473, 0, 0, 2 }, // Argument(\"groups\", at::nullopt, AttributeInfo{ AttributeKind::i, at::nu\n{ 2, 0, 0, 0 }, // Argument(\"result\", at::nullopt, at::nullopt, DynamicType::get())         \n{ 461, 0, 0, 0 }, // Argument(\"input\", at::nullopt, at::nullopt, DynamicType::get())        \n{ 107, 0, 0, 0 }, // Argument(\"weight\", at::nullopt, at::nullopt, DynamicType::get())       \n{ 385, 0, 0, 0 }, // Argument(\"bias\", at::nullopt, at::nullopt, DynamicType::get())         \n{ 208, 0, 0, 1 }, // Argument(\"stride\", at::nullopt, AttributeInfo{ AttributeKind::is, at::n\n{ 317, 0, 0, 1 }, // Argument(\"padding\", at::nullopt, AttributeInfo{ AttributeKind::is, at::\n{ 330, 0, 0, 1 }, // Argument(\"dilation\", at::nullopt, AttributeInfo{ AttributeKind::is, at:\n{ 472, 0, 0, 2 }, // Argument(\"transposed\", at::nullopt, AttributeInfo{ AttributeKind::i, at\n{ 396, 0, 0, 1 }, // Argument(\"output_padding\", at::nullopt, AttributeInfo{ AttributeKind::i\n{ 473, 0, 0, 2 }, // Argument(\"groups\", at::nullopt, AttributeInfo{ AttributeKind::i, at::nu\n{ 475, 0, 0, 2 }, // Argument(\"benchmark\", at::nullopt, AttributeInfo{ AttributeKind::i, at:\n{ 476, 0, 0, 2 }, // Argument(\"deterministic\", at::nullopt, AttributeInfo{ AttributeKind::i,\n{ 462, 0, 0, 2 }, // Argument(\"cudnn_enabled\", at::nullopt, AttributeInfo{ AttributeKind::i,\n{ 2, 0, 0, 0 }, // Argument(\"result\", at::nullopt, at::nullopt, DynamicType::get())         \nNow:\n// Arguments for cat (2 args, 1 returns)                                                    \n{ 210, 1, 0, 0 }, // Argument(\"tensors\", at::nullopt, at::nullopt, ListType::ofTensors())   \n{ 15, 0, 8, 2 }, // Argument(\"dim\", as_tensor(int64_t(0)), AttributeInfo{ AttributeKind::i, \n{ 2, 0, 0, 0 }, // Argument(\"result\", at::nullopt, at::nullopt, DynamicType::get())         \n// Arguments for ceil (1 args, 1 returns)                                                   \n{ 1, 0, 0, 0 }, // Argument(\"self\", at::nullopt, at::nullopt, DynamicType::get())           \n{ 2, 0, 0, 0 }, // Argument(\"result\", at::nullopt, at::nullopt, DynamicType::get())         \n// Arguments for chunk (3 args, 1 returns)                                                  \n{ 1, 0, 0, 0 }, // Argument(\"self\", at::nullopt, at::nullopt, DynamicType::get())           \n{ 469, 0, 0, 2 }, // Argument(\"chunks\", at::nullopt, AttributeInfo{ AttributeKind::i, at::nu\n{ 15, 0, 8, 2 }, // Argument(\"dim\", as_tensor(int64_t(0)), AttributeInfo{ AttributeKind::i, \n{ 2, 0, 0, 0 }, // Argument(\"result\", at::nullopt, at::nullopt, DynamicType::get())         \n// Arguments for cudnn_is_acceptable (1 args, 1 returns)                                    \n{ 1, 0, 0, 0 }, // Argument(\"self\", at::nullopt, at::nullopt, DynamicType::get())           \n{ 2, 0, 0, 0 }, // Argument(\"result\", at::nullopt, at::nullopt, DynamicType::get())         \n// Arguments for convolution (9 args, 1 returns)                                            \n{ 461, 0, 0, 0 }, // Argument(\"input\", at::nullopt, at::nullopt, DynamicType::get())        \n{ 107, 0, 0, 0 }, // Argument(\"weight\", at::nullopt, at::nullopt, DynamicType::get())       \n{ 385, 0, 0, 0 }, // Argument(\"bias\", at::nullopt, at::nullopt, DynamicType::get())         \n{ 208, 0, 0, 1 }, // Argument(\"stride\", at::nullopt, AttributeInfo{ AttributeKind::is, at::n\n{ 317, 0, 0, 1 }, // Argument(\"padding\", at::nullopt, AttributeInfo{ AttributeKind::is, at::\n{ 330, 0, 0, 1 }, // Argument(\"dilation\", at::nullopt, AttributeInfo{ AttributeKind::is, at:\n{ 472, 0, 0, 2 }, // Argument(\"transposed\", at::nullopt, AttributeInfo{ AttributeKind::i, at\n{ 396, 0, 0, 1 }, // Argument(\"output_padding\", at::nullopt, AttributeInfo{ AttributeKind::i\n{ 473, 0, 0, 2 }, // Argument(\"groups\", at::nullopt, AttributeInfo{ AttributeKind::i, at::nu\n{ 2, 0, 0, 0 }, // Argument(\"result\", at::nullopt, at::nullopt, DynamicType::get())         \n// Arguments for _convolution (12 args, 1 returns)                                          \n{ 461, 0, 0, 0 }, // Argument(\"input\", at::nullopt, at::nullopt, DynamicType::get())        \n{ 107, 0, 0, 0 }, // Argument(\"weight\", at::nullopt, at::nullopt, DynamicType::get())       \n{ 385, 0, 0, 0 }, // Argument(\"bias\", at::nullopt, at::nullopt, DynamicType::get())         \n{ 208, 0, 0, 1 }, // Argument(\"stride\", at::nullopt, AttributeInfo{ AttributeKind::is, at::n\n{ 317, 0, 0, 1 }, // Argument(\"padding\", at::nullopt, AttributeInfo{ AttributeKind::is, at::\n{ 330, 0, 0, 1 }, // Argument(\"dilation\", at::nullopt, AttributeInfo{ AttributeKind::is, at:\n{ 472, 0, 0, 2 }, // Argument(\"transposed\", at::nullopt, AttributeInfo{ AttributeKind::i, at\n{ 396, 0, 0, 1 }, // Argument(\"output_padding\", at::nullopt, AttributeInfo{ AttributeKind::i\n{ 473, 0, 0, 2 }, // Argument(\"groups\", at::nullopt, AttributeInfo{ AttributeKind::i, at::nu\n{ 475, 0, 0, 2 }, // Argument(\"benchmark\", at::nullopt, AttributeInfo{ AttributeKind::i, at:\n{ 476, 0, 0, 2 }, // Argument(\"deterministic\", at::nullopt, AttributeInfo{ AttributeKind::i,\n{ 462, 0, 0, 2 }, // Argument(\"cudnn_enabled\", at::nullopt, AttributeInfo{ AttributeKind::i,\n{ 2, 0, 0, 0 }, // Argument(\"result\", at::nullopt, at::nullopt, DynamicType::get())", "merged": true, "mergeable": null, "rebaseable": null, "mergeable_state": "unknown", "merged_by": {"login": "soumith", "id": 1310570, "node_id": "MDQ6VXNlcjEzMTA1NzA=", "avatar_url": "https://avatars0.githubusercontent.com/u/1310570?v=4", "gravatar_id": "", "url": "https://api.github.com/users/soumith", "html_url": "https://github.com/soumith", "followers_url": "https://api.github.com/users/soumith/followers", "following_url": "https://api.github.com/users/soumith/following{/other_user}", "gists_url": "https://api.github.com/users/soumith/gists{/gist_id}", "starred_url": "https://api.github.com/users/soumith/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/soumith/subscriptions", "organizations_url": "https://api.github.com/users/soumith/orgs", "repos_url": "https://api.github.com/users/soumith/repos", "events_url": "https://api.github.com/users/soumith/events{/privacy}", "received_events_url": "https://api.github.com/users/soumith/received_events", "type": "User", "site_admin": false}, "comments": 0, "review_comments": 0, "maintainer_can_modify": false, "commits": 1, "additions": 3, "deletions": 2, "changed_files": 1}