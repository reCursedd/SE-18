{"url": "https://api.github.com/repos/pytorch/pytorch/issues/comments/336194949", "html_url": "https://github.com/pytorch/pytorch/issues/2830#issuecomment-336194949", "issue_url": "https://api.github.com/repos/pytorch/pytorch/issues/2830", "id": 336194949, "node_id": "MDEyOklzc3VlQ29tbWVudDMzNjE5NDk0OQ==", "user": {"login": "dogancan", "id": 620222, "node_id": "MDQ6VXNlcjYyMDIyMg==", "avatar_url": "https://avatars0.githubusercontent.com/u/620222?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dogancan", "html_url": "https://github.com/dogancan", "followers_url": "https://api.github.com/users/dogancan/followers", "following_url": "https://api.github.com/users/dogancan/following{/other_user}", "gists_url": "https://api.github.com/users/dogancan/gists{/gist_id}", "starred_url": "https://api.github.com/users/dogancan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dogancan/subscriptions", "organizations_url": "https://api.github.com/users/dogancan/orgs", "repos_url": "https://api.github.com/users/dogancan/repos", "events_url": "https://api.github.com/users/dogancan/events{/privacy}", "received_events_url": "https://api.github.com/users/dogancan/received_events", "type": "User", "site_admin": false}, "created_at": "2017-10-12T16:41:50Z", "updated_at": "2017-10-12T16:41:50Z", "author_association": "NONE", "body_html": "<p><a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=4583066\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/apaszke\">@apaszke</a> Ah, my bad. I forgot to update the line where the optimizer is recreated. But otherwise, the following should do the job, right?</p>\n<div class=\"highlight highlight-source-python\"><pre>model <span class=\"pl-k\">=</span> Model()\nmodel.load_state_dict(checkpoint[<span class=\"pl-s\"><span class=\"pl-pds\">'</span>model<span class=\"pl-pds\">'</span></span>])\nmodel.cuda()\noptimizer <span class=\"pl-k\">=</span> optim.Adam(model.parameters())\noptimizer.load_state_dict(checkpoint[<span class=\"pl-s\"><span class=\"pl-pds\">'</span>optimizer<span class=\"pl-pds\">'</span></span>])\n<span class=\"pl-k\">for</span> state <span class=\"pl-k\">in</span> optimizer.state.values():\n    <span class=\"pl-k\">for</span> k, v <span class=\"pl-k\">in</span> state.items():\n        <span class=\"pl-k\">if</span> <span class=\"pl-c1\">isinstance</span>(v, torch.Tensor):\n            state[k] <span class=\"pl-k\">=</span> v.cuda()</pre></div>", "body_text": "@apaszke Ah, my bad. I forgot to update the line where the optimizer is recreated. But otherwise, the following should do the job, right?\nmodel = Model()\nmodel.load_state_dict(checkpoint['model'])\nmodel.cuda()\noptimizer = optim.Adam(model.parameters())\noptimizer.load_state_dict(checkpoint['optimizer'])\nfor state in optimizer.state.values():\n    for k, v in state.items():\n        if isinstance(v, torch.Tensor):\n            state[k] = v.cuda()", "body": "@apaszke Ah, my bad. I forgot to update the line where the optimizer is recreated. But otherwise, the following should do the job, right?\r\n```python\r\nmodel = Model()\r\nmodel.load_state_dict(checkpoint['model'])\r\nmodel.cuda()\r\noptimizer = optim.Adam(model.parameters())\r\noptimizer.load_state_dict(checkpoint['optimizer'])\r\nfor state in optimizer.state.values():\r\n    for k, v in state.items():\r\n        if isinstance(v, torch.Tensor):\r\n            state[k] = v.cuda()\r\n```"}