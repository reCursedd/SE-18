{"url": "https://api.github.com/repos/pytorch/pytorch/issues/2830", "repository_url": "https://api.github.com/repos/pytorch/pytorch", "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/2830/labels{/name}", "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/2830/comments", "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/2830/events", "html_url": "https://github.com/pytorch/pytorch/issues/2830", "id": 259816386, "node_id": "MDU6SXNzdWUyNTk4MTYzODY=", "number": 2830, "title": "optimizer load_state_dict() problem?", "user": {"login": "JianyuZhan", "id": 649042, "node_id": "MDQ6VXNlcjY0OTA0Mg==", "avatar_url": "https://avatars1.githubusercontent.com/u/649042?v=4", "gravatar_id": "", "url": "https://api.github.com/users/JianyuZhan", "html_url": "https://github.com/JianyuZhan", "followers_url": "https://api.github.com/users/JianyuZhan/followers", "following_url": "https://api.github.com/users/JianyuZhan/following{/other_user}", "gists_url": "https://api.github.com/users/JianyuZhan/gists{/gist_id}", "starred_url": "https://api.github.com/users/JianyuZhan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/JianyuZhan/subscriptions", "organizations_url": "https://api.github.com/users/JianyuZhan/orgs", "repos_url": "https://api.github.com/users/JianyuZhan/repos", "events_url": "https://api.github.com/users/JianyuZhan/events{/privacy}", "received_events_url": "https://api.github.com/users/JianyuZhan/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 545367190, "node_id": "MDU6TGFiZWw1NDUzNjcxOTA=", "url": "https://api.github.com/repos/pytorch/pytorch/labels/awaiting%20response", "name": "awaiting response", "color": "5319e7", "default": false}, {"id": 553773019, "node_id": "MDU6TGFiZWw1NTM3NzMwMTk=", "url": "https://api.github.com/repos/pytorch/pytorch/labels/needs-reproduction", "name": "needs-reproduction", "color": "e99695", "default": false}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 16, "created_at": "2017-09-22T13:33:28Z", "updated_at": "2018-08-15T08:27:41Z", "closed_at": "2017-11-28T14:56:40Z", "author_association": "NONE", "body_html": "<p>Hi, I encountered this bug:</p>\n<pre><code>\n    optimizer.step()\n    exp_avg.mul_(beta1).add_(1 - beta1, grad)\n\nTypeError: add_ received an invalid combination of arguments - got (float, torch.cuda.FloatTensor), but expected one of:\n * (float value)\n * (torch.FloatTensor other)\n * (torch.SparseFloatTensor other)\n * (float value, torch.FloatTensor other)\n      didn't match because some of the arguments have invalid types: (float, torch.cuda.FloatTensor)\n * (float value, torch.SparseFloatTensor other)\n      didn't match because some of the arguments have invalid types: (float, torch.cuda.FloatTensor)\n</code></pre>\n<p>The code skeleton is like:</p>\n<pre><code>model = Model()\nmodel.load_state_dict(checkpoint['model'])\nmodel.cuda()\n\noptimizer = optim.Adam()\noptimizer.load_state_dict(checkpoint['optimizer'])\n\n...\n#  In train loop\nfor epoch in range(...):\n  ...\n  optimizer.step()\n     -&gt; BUG &lt;-\n</code></pre>\n<p>It seems the loaded  <code>param_groups</code> are <code>torch.cuda.FloatTensor</code>, and I've tried a workaround to<br>\nmove <code>optmizer.param_groups</code> to <code>cpu</code>, but it still has the same bug.</p>", "body_text": "Hi, I encountered this bug:\n\n    optimizer.step()\n    exp_avg.mul_(beta1).add_(1 - beta1, grad)\n\nTypeError: add_ received an invalid combination of arguments - got (float, torch.cuda.FloatTensor), but expected one of:\n * (float value)\n * (torch.FloatTensor other)\n * (torch.SparseFloatTensor other)\n * (float value, torch.FloatTensor other)\n      didn't match because some of the arguments have invalid types: (float, torch.cuda.FloatTensor)\n * (float value, torch.SparseFloatTensor other)\n      didn't match because some of the arguments have invalid types: (float, torch.cuda.FloatTensor)\n\nThe code skeleton is like:\nmodel = Model()\nmodel.load_state_dict(checkpoint['model'])\nmodel.cuda()\n\noptimizer = optim.Adam()\noptimizer.load_state_dict(checkpoint['optimizer'])\n\n...\n#  In train loop\nfor epoch in range(...):\n  ...\n  optimizer.step()\n     -> BUG <-\n\nIt seems the loaded  param_groups are torch.cuda.FloatTensor, and I've tried a workaround to\nmove optmizer.param_groups to cpu, but it still has the same bug.", "body": "Hi, I encountered this bug:\r\n```\r\n\r\n    optimizer.step()\r\n    exp_avg.mul_(beta1).add_(1 - beta1, grad)\r\n\r\nTypeError: add_ received an invalid combination of arguments - got (float, torch.cuda.FloatTensor), but expected one of:\r\n * (float value)\r\n * (torch.FloatTensor other)\r\n * (torch.SparseFloatTensor other)\r\n * (float value, torch.FloatTensor other)\r\n      didn't match because some of the arguments have invalid types: (float, torch.cuda.FloatTensor)\r\n * (float value, torch.SparseFloatTensor other)\r\n      didn't match because some of the arguments have invalid types: (float, torch.cuda.FloatTensor)\r\n```\r\n\r\nThe code skeleton is like:\r\n```\r\nmodel = Model()\r\nmodel.load_state_dict(checkpoint['model'])\r\nmodel.cuda()\r\n\r\noptimizer = optim.Adam()\r\noptimizer.load_state_dict(checkpoint['optimizer'])\r\n\r\n...\r\n#  In train loop\r\nfor epoch in range(...):\r\n  ...\r\n  optimizer.step()\r\n     -> BUG <-\r\n```\r\n\r\nIt seems the loaded  `param_groups` are `torch.cuda.FloatTensor`, and I've tried a workaround to\r\nmove `optmizer.param_groups` to `cpu`, but it still has the same bug."}