{"url": "https://api.github.com/repos/pytorch/pytorch/issues/5008", "repository_url": "https://api.github.com/repos/pytorch/pytorch", "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/5008/labels{/name}", "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/5008/comments", "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/5008/events", "html_url": "https://github.com/pytorch/pytorch/issues/5008", "id": 293807981, "node_id": "MDU6SXNzdWUyOTM4MDc5ODE=", "number": 5008, "title": "[bug] wrong result in torch.ge()", "user": {"login": "piaozhx", "id": 9268675, "node_id": "MDQ6VXNlcjkyNjg2NzU=", "avatar_url": "https://avatars2.githubusercontent.com/u/9268675?v=4", "gravatar_id": "", "url": "https://api.github.com/users/piaozhx", "html_url": "https://github.com/piaozhx", "followers_url": "https://api.github.com/users/piaozhx/followers", "following_url": "https://api.github.com/users/piaozhx/following{/other_user}", "gists_url": "https://api.github.com/users/piaozhx/gists{/gist_id}", "starred_url": "https://api.github.com/users/piaozhx/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/piaozhx/subscriptions", "organizations_url": "https://api.github.com/users/piaozhx/orgs", "repos_url": "https://api.github.com/users/piaozhx/repos", "events_url": "https://api.github.com/users/piaozhx/events{/privacy}", "received_events_url": "https://api.github.com/users/piaozhx/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 424131847, "node_id": "MDU6TGFiZWw0MjQxMzE4NDc=", "url": "https://api.github.com/repos/pytorch/pytorch/labels/bug", "name": "bug", "color": "b60205", "default": true}, {"id": 838476895, "node_id": "MDU6TGFiZWw4Mzg0NzY4OTU=", "url": "https://api.github.com/repos/pytorch/pytorch/labels/hackamonth", "name": "hackamonth", "color": "0e8a16", "default": false}, {"id": 443484135, "node_id": "MDU6TGFiZWw0NDM0ODQxMzU=", "url": "https://api.github.com/repos/pytorch/pytorch/labels/high%20priority", "name": "high priority", "color": "F22613", "default": false}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2018-02-02T08:23:48Z", "updated_at": "2018-08-14T18:59:29Z", "closed_at": "2018-08-14T18:59:29Z", "author_association": "NONE", "body_html": "<ul>\n<li>OS: ubuntu 16.04</li>\n<li>PyTorch version: 0.3.0.post4</li>\n<li>How you installed PyTorch (conda, pip, source): pip</li>\n<li>Python version: 3.6.3</li>\n<li>CUDA/cuDNN version: cuda8/ cudnn6</li>\n</ul>\n<p>I think there exists bug in type-check of torch.ge() for example:</p>\n<pre><code>&gt;&gt;&gt; a = torch.LongTensor([0,1]).cuda()\n&gt;&gt;&gt; b = torch.ge(a, 0.5)\nTraceback (most recent call last):\n  File \"&lt;stdin&gt;\", line 1, in &lt;module&gt;\nTypeError: torch.ge received an invalid combination of arguments - got (torch.cuda.LongTensor, float), but expected one of:\n * (torch.cuda.LongTensor tensor, int value)\n      didn't match because some of the arguments have invalid types: (torch.cuda.LongTensor, float)\n * (torch.cuda.LongTensor tensor, torch.cuda.LongTensor other)\n      didn't match because some of the arguments have invalid types: (torch.cuda.LongTensor, float)\n * (torch.cuda.LongTensor tensor, int value)\n      didn't match because some of the arguments have invalid types: (torch.cuda.LongTensor, float)\n * (torch.cuda.LongTensor tensor, torch.cuda.LongTensor other)\n      didn't match because some of the arguments have invalid types: (torch.cuda.LongTensor, float)\n</code></pre>\n<p>of course it throws a typeError because a is LongTensor.</p>\n<p>but if a is Variable</p>\n<pre><code>&gt;&gt;&gt; a = Variable(torch.LongTensor([0,1]).cuda())\n&gt;&gt;&gt; b = torch.ge(a, 0.5)\n&gt;&gt;&gt; b\nVariable containing:\n 1\n 1\n[torch.cuda.ByteTensor of size 2 (GPU 0)]\n</code></pre>\n<p>it works and give wrong result ?! maybe there are some bugs in type-check about Variable or something else.</p>", "body_text": "OS: ubuntu 16.04\nPyTorch version: 0.3.0.post4\nHow you installed PyTorch (conda, pip, source): pip\nPython version: 3.6.3\nCUDA/cuDNN version: cuda8/ cudnn6\n\nI think there exists bug in type-check of torch.ge() for example:\n>>> a = torch.LongTensor([0,1]).cuda()\n>>> b = torch.ge(a, 0.5)\nTraceback (most recent call last):\n  File \"<stdin>\", line 1, in <module>\nTypeError: torch.ge received an invalid combination of arguments - got (torch.cuda.LongTensor, float), but expected one of:\n * (torch.cuda.LongTensor tensor, int value)\n      didn't match because some of the arguments have invalid types: (torch.cuda.LongTensor, float)\n * (torch.cuda.LongTensor tensor, torch.cuda.LongTensor other)\n      didn't match because some of the arguments have invalid types: (torch.cuda.LongTensor, float)\n * (torch.cuda.LongTensor tensor, int value)\n      didn't match because some of the arguments have invalid types: (torch.cuda.LongTensor, float)\n * (torch.cuda.LongTensor tensor, torch.cuda.LongTensor other)\n      didn't match because some of the arguments have invalid types: (torch.cuda.LongTensor, float)\n\nof course it throws a typeError because a is LongTensor.\nbut if a is Variable\n>>> a = Variable(torch.LongTensor([0,1]).cuda())\n>>> b = torch.ge(a, 0.5)\n>>> b\nVariable containing:\n 1\n 1\n[torch.cuda.ByteTensor of size 2 (GPU 0)]\n\nit works and give wrong result ?! maybe there are some bugs in type-check about Variable or something else.", "body": "- OS: ubuntu 16.04\r\n- PyTorch version: 0.3.0.post4\r\n- How you installed PyTorch (conda, pip, source): pip\r\n- Python version: 3.6.3\r\n- CUDA/cuDNN version: cuda8/ cudnn6\r\n\r\nI think there exists bug in type-check of torch.ge() for example:\r\n```\r\n>>> a = torch.LongTensor([0,1]).cuda()\r\n>>> b = torch.ge(a, 0.5)\r\nTraceback (most recent call last):\r\n  File \"<stdin>\", line 1, in <module>\r\nTypeError: torch.ge received an invalid combination of arguments - got (torch.cuda.LongTensor, float), but expected one of:\r\n * (torch.cuda.LongTensor tensor, int value)\r\n      didn't match because some of the arguments have invalid types: (torch.cuda.LongTensor, float)\r\n * (torch.cuda.LongTensor tensor, torch.cuda.LongTensor other)\r\n      didn't match because some of the arguments have invalid types: (torch.cuda.LongTensor, float)\r\n * (torch.cuda.LongTensor tensor, int value)\r\n      didn't match because some of the arguments have invalid types: (torch.cuda.LongTensor, float)\r\n * (torch.cuda.LongTensor tensor, torch.cuda.LongTensor other)\r\n      didn't match because some of the arguments have invalid types: (torch.cuda.LongTensor, float)\r\n```\r\n\r\nof course it throws a typeError because a is LongTensor.\r\n\r\nbut if a is Variable\r\n```\r\n>>> a = Variable(torch.LongTensor([0,1]).cuda())\r\n>>> b = torch.ge(a, 0.5)\r\n>>> b\r\nVariable containing:\r\n 1\r\n 1\r\n[torch.cuda.ByteTensor of size 2 (GPU 0)]\r\n```\r\n\r\nit works and give wrong result ?! maybe there are some bugs in type-check about Variable or something else.\r\n\r\n"}