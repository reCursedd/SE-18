{"url": "https://api.github.com/repos/pytorch/pytorch/issues/comments/376950576", "html_url": "https://github.com/pytorch/pytorch/issues/6002#issuecomment-376950576", "issue_url": "https://api.github.com/repos/pytorch/pytorch/issues/6002", "id": 376950576, "node_id": "MDEyOklzc3VlQ29tbWVudDM3Njk1MDU3Ng==", "user": {"login": "zou3519", "id": 5652049, "node_id": "MDQ6VXNlcjU2NTIwNDk=", "avatar_url": "https://avatars3.githubusercontent.com/u/5652049?v=4", "gravatar_id": "", "url": "https://api.github.com/users/zou3519", "html_url": "https://github.com/zou3519", "followers_url": "https://api.github.com/users/zou3519/followers", "following_url": "https://api.github.com/users/zou3519/following{/other_user}", "gists_url": "https://api.github.com/users/zou3519/gists{/gist_id}", "starred_url": "https://api.github.com/users/zou3519/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/zou3519/subscriptions", "organizations_url": "https://api.github.com/users/zou3519/orgs", "repos_url": "https://api.github.com/users/zou3519/repos", "events_url": "https://api.github.com/users/zou3519/events{/privacy}", "received_events_url": "https://api.github.com/users/zou3519/received_events", "type": "User", "site_admin": false}, "created_at": "2018-03-28T16:31:09Z", "updated_at": "2018-03-28T16:35:29Z", "author_association": "CONTRIBUTOR", "body_html": "<p>Try this (it will only work on master):</p>\n<pre><code>import torch, shutil, gzip\nimport torchvision.models as models\nimport io\nresnet18 = models.resnet18()\ntorch.save(resnet18.state_dict(), 'test.pt')\nwith open('test.pt', 'rb') as f_in, gzip.open('test.pt.gz', 'wb') as f_out:\n    shutil.copyfileobj(f_in, f_out)\n    #f_out.write(f_in.read())\n    \nwith gzip.open('test.pt.gz', 'rb') as f:\n    # Use an intermediate buffer\n    x = io.BytesIO(f.read())\n    state_dict = torch.load(x)\n</code></pre>\n<p>I think the underlying problem is that <code>torch.load()</code> is bypassing gzip and directly reading the compressed file without uncompressing it. A workaround is to unzip the file into a new file and then load that file. Not sure how feasible it is to fix <code>torch.load</code> to support this behavior.</p>", "body_text": "Try this (it will only work on master):\nimport torch, shutil, gzip\nimport torchvision.models as models\nimport io\nresnet18 = models.resnet18()\ntorch.save(resnet18.state_dict(), 'test.pt')\nwith open('test.pt', 'rb') as f_in, gzip.open('test.pt.gz', 'wb') as f_out:\n    shutil.copyfileobj(f_in, f_out)\n    #f_out.write(f_in.read())\n    \nwith gzip.open('test.pt.gz', 'rb') as f:\n    # Use an intermediate buffer\n    x = io.BytesIO(f.read())\n    state_dict = torch.load(x)\n\nI think the underlying problem is that torch.load() is bypassing gzip and directly reading the compressed file without uncompressing it. A workaround is to unzip the file into a new file and then load that file. Not sure how feasible it is to fix torch.load to support this behavior.", "body": "Try this (it will only work on master):\r\n```\r\nimport torch, shutil, gzip\r\nimport torchvision.models as models\r\nimport io\r\nresnet18 = models.resnet18()\r\ntorch.save(resnet18.state_dict(), 'test.pt')\r\nwith open('test.pt', 'rb') as f_in, gzip.open('test.pt.gz', 'wb') as f_out:\r\n    shutil.copyfileobj(f_in, f_out)\r\n    #f_out.write(f_in.read())\r\n    \r\nwith gzip.open('test.pt.gz', 'rb') as f:\r\n    # Use an intermediate buffer\r\n    x = io.BytesIO(f.read())\r\n    state_dict = torch.load(x)\r\n```\r\n\r\nI think the underlying problem is that `torch.load()` is bypassing gzip and directly reading the compressed file without uncompressing it. A workaround is to unzip the file into a new file and then load that file. Not sure how feasible it is to fix `torch.load` to support this behavior."}