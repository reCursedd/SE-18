{"url": "https://api.github.com/repos/pytorch/pytorch/issues/comments/409527933", "html_url": "https://github.com/pytorch/pytorch/issues/5315#issuecomment-409527933", "issue_url": "https://api.github.com/repos/pytorch/pytorch/issues/5315", "id": 409527933, "node_id": "MDEyOklzc3VlQ29tbWVudDQwOTUyNzkzMw==", "user": {"login": "daniel-j-h", "id": 527241, "node_id": "MDQ6VXNlcjUyNzI0MQ==", "avatar_url": "https://avatars3.githubusercontent.com/u/527241?v=4", "gravatar_id": "", "url": "https://api.github.com/users/daniel-j-h", "html_url": "https://github.com/daniel-j-h", "followers_url": "https://api.github.com/users/daniel-j-h/followers", "following_url": "https://api.github.com/users/daniel-j-h/following{/other_user}", "gists_url": "https://api.github.com/users/daniel-j-h/gists{/gist_id}", "starred_url": "https://api.github.com/users/daniel-j-h/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/daniel-j-h/subscriptions", "organizations_url": "https://api.github.com/users/daniel-j-h/orgs", "repos_url": "https://api.github.com/users/daniel-j-h/repos", "events_url": "https://api.github.com/users/daniel-j-h/events{/privacy}", "received_events_url": "https://api.github.com/users/daniel-j-h/received_events", "type": "User", "site_admin": false}, "created_at": "2018-08-01T10:23:46Z", "updated_at": "2018-08-01T10:23:46Z", "author_association": "NONE", "body_html": "<p>I just had a similar use-case and with PyTorch 0.4 the following works for me:</p>\n<pre><code>import torch.nn as nn\nfrom torch.autograd import Variable\nimport torch.onnx\nimport torchvision\n\ndummy = Variable(torch.randn(10, 3, 224, 224))\n\nmodel = torchvision.models.resnet50(pretrained=True)\nmodel = nn.DataParallel(model)\n\ntorch.onnx.export(model, dummy, 'resnet50.pb')\n</code></pre>", "body_text": "I just had a similar use-case and with PyTorch 0.4 the following works for me:\nimport torch.nn as nn\nfrom torch.autograd import Variable\nimport torch.onnx\nimport torchvision\n\ndummy = Variable(torch.randn(10, 3, 224, 224))\n\nmodel = torchvision.models.resnet50(pretrained=True)\nmodel = nn.DataParallel(model)\n\ntorch.onnx.export(model, dummy, 'resnet50.pb')", "body": "I just had a similar use-case and with PyTorch 0.4 the following works for me:\r\n\r\n```\r\nimport torch.nn as nn\r\nfrom torch.autograd import Variable\r\nimport torch.onnx\r\nimport torchvision\r\n\r\ndummy = Variable(torch.randn(10, 3, 224, 224))\r\n\r\nmodel = torchvision.models.resnet50(pretrained=True)\r\nmodel = nn.DataParallel(model)\r\n\r\ntorch.onnx.export(model, dummy, 'resnet50.pb')\r\n```"}