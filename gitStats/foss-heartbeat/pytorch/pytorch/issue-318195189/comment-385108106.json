{"url": "https://api.github.com/repos/pytorch/pytorch/issues/comments/385108106", "html_url": "https://github.com/pytorch/pytorch/issues/7012#issuecomment-385108106", "issue_url": "https://api.github.com/repos/pytorch/pytorch/issues/7012", "id": 385108106, "node_id": "MDEyOklzc3VlQ29tbWVudDM4NTEwODEwNg==", "user": {"login": "goldsborough", "id": 6429851, "node_id": "MDQ6VXNlcjY0Mjk4NTE=", "avatar_url": "https://avatars3.githubusercontent.com/u/6429851?v=4", "gravatar_id": "", "url": "https://api.github.com/users/goldsborough", "html_url": "https://github.com/goldsborough", "followers_url": "https://api.github.com/users/goldsborough/followers", "following_url": "https://api.github.com/users/goldsborough/following{/other_user}", "gists_url": "https://api.github.com/users/goldsborough/gists{/gist_id}", "starred_url": "https://api.github.com/users/goldsborough/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/goldsborough/subscriptions", "organizations_url": "https://api.github.com/users/goldsborough/orgs", "repos_url": "https://api.github.com/users/goldsborough/repos", "events_url": "https://api.github.com/users/goldsborough/events{/privacy}", "received_events_url": "https://api.github.com/users/goldsborough/received_events", "type": "User", "site_admin": false}, "created_at": "2018-04-27T22:16:39Z", "updated_at": "2018-04-27T22:16:39Z", "author_association": "CONTRIBUTOR", "body_html": "<p>We don't use nvrtc, we use gcc for C++ files and nvcc for CUDA files. To be clear, the way I would implement this features is by dumping the inline function into a file and then calling <code>cpp_extension.load()</code> on it :)</p>", "body_text": "We don't use nvrtc, we use gcc for C++ files and nvcc for CUDA files. To be clear, the way I would implement this features is by dumping the inline function into a file and then calling cpp_extension.load() on it :)", "body": "We don't use nvrtc, we use gcc for C++ files and nvcc for CUDA files. To be clear, the way I would implement this features is by dumping the inline function into a file and then calling `cpp_extension.load()` on it :)"}