{"url": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/201067297", "pull_request_review_id": 135496582, "id": 201067297, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwMTA2NzI5Nw==", "diff_hunk": "@@ -167,6 +168,25 @@ def isnan(tensor):\n     return tensor != tensor\n \n \n+def isinf(tensor):\n+    r\"\"\"Returns a new tensor with boolean elements representing if each element is `+/-INF` or not.\n+\n+    Arguments:\n+        tensor (Tensor): A tensor to check\n+\n+    Returns:\n+        Tensor: A ``torch.ByteTensor`` containing a 1 at each location of `+/-INF` elements.\n+\n+    Example::\n+\n+        >>> torch.isinf(torch.Tensor([1, float('inf'), 2, float('-inf')]))\n+        tensor([ 0,  1,  0,  1], dtype=torch.uint8)\n+    \"\"\"\n+    if not torch.is_tensor(tensor):\n+        raise ValueError(\"The argument is not a tensor\")", "path": "torch/functional.py", "position": null, "original_position": 27, "commit_id": "2397bcccaf64ad1e1a40cd51a297bd369cc5e2fb", "original_commit_id": "051a68b248f03d0eaa89cd87b8020787397833b2", "user": {"login": "zou3519", "id": 5652049, "node_id": "MDQ6VXNlcjU2NTIwNDk=", "avatar_url": "https://avatars3.githubusercontent.com/u/5652049?v=4", "gravatar_id": "", "url": "https://api.github.com/users/zou3519", "html_url": "https://github.com/zou3519", "followers_url": "https://api.github.com/users/zou3519/followers", "following_url": "https://api.github.com/users/zou3519/following{/other_user}", "gists_url": "https://api.github.com/users/zou3519/gists{/gist_id}", "starred_url": "https://api.github.com/users/zou3519/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/zou3519/subscriptions", "organizations_url": "https://api.github.com/users/zou3519/orgs", "repos_url": "https://api.github.com/users/zou3519/repos", "events_url": "https://api.github.com/users/zou3519/events{/privacy}", "received_events_url": "https://api.github.com/users/zou3519/received_events", "type": "User", "site_admin": false}, "body": "nit: It would be nice to include the object in the error message. Something like `\"Not a tensor: \" + str(tensor)`", "created_at": "2018-07-09T16:31:32Z", "updated_at": "2018-11-23T15:46:58Z", "html_url": "https://github.com/pytorch/pytorch/pull/9169#discussion_r201067297", "pull_request_url": "https://api.github.com/repos/pytorch/pytorch/pulls/9169", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/201067297"}, "html": {"href": "https://github.com/pytorch/pytorch/pull/9169#discussion_r201067297"}, "pull_request": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/9169"}}, "body_html": "<p>nit: It would be nice to include the object in the error message. Something like <code>\"Not a tensor: \" + str(tensor)</code></p>", "body_text": "nit: It would be nice to include the object in the error message. Something like \"Not a tensor: \" + str(tensor)"}