{"url": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/211062318", "pull_request_review_id": 147416835, "id": 211062318, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIxMTA2MjMxOA==", "diff_hunk": "@@ -118,6 +118,52 @@ struct CastValue : public SugaredValue {\n   TypePtr type;\n };\n \n+// expressions like x.int()\n+struct ScalarTypeCastValue : public SugaredValue {\n+  ScalarTypeCastValue(std::string type_str, NamedValue self)\n+  : type_str(type_str), self(self) {}\n+  std::string kind() const override {\n+    std::stringstream ss;\n+    ss << \"<\" << type_str << \" scalar cast primitive>\";\n+    return ss.str();\n+  }\n+  static const std::unordered_map<std::string, std::string> &method_to_type_map() {\n+    static std::unordered_map<std::string, std::string> method_to_type = {\n+      {\"byte\", \"_cast_Byte\"},\n+      {\"char\", \"_cast_Char\"},\n+      {\"double\", \"_cast_Double\"},\n+      {\"float\", \"_cast_Float\"},\n+      {\"int\", \"_cast_Int\"},\n+      {\"long\", \"_cast_Long\"},\n+      {\"short\", \"_cast_Short\"},\n+      {\"half\", \"_cast_Half\"}\n+    };\n+    return method_to_type;\n+  }\n+  std::shared_ptr<SugaredValue> call(\n+      SourceRange loc,\n+      Method & m,\n+      at::ArrayRef<NamedValue> inputs,\n+      at::ArrayRef<NamedValue> attributes,\n+      size_t n_binders) override {\n+    if (!attributes.empty())", "path": "torch/csrc/jit/script/compiler.cpp", "position": null, "original_position": 32, "commit_id": "4044e13596ecd038cfb040f974fa773c418b930a", "original_commit_id": "3c7c2ab4e20d6461459db4c6b057c2307804c8cc", "user": {"login": "zdevito", "id": 370202, "node_id": "MDQ6VXNlcjM3MDIwMg==", "avatar_url": "https://avatars0.githubusercontent.com/u/370202?v=4", "gravatar_id": "", "url": "https://api.github.com/users/zdevito", "html_url": "https://github.com/zdevito", "followers_url": "https://api.github.com/users/zdevito/followers", "following_url": "https://api.github.com/users/zdevito/following{/other_user}", "gists_url": "https://api.github.com/users/zdevito/gists{/gist_id}", "starred_url": "https://api.github.com/users/zdevito/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/zdevito/subscriptions", "organizations_url": "https://api.github.com/users/zdevito/orgs", "repos_url": "https://api.github.com/users/zdevito/repos", "events_url": "https://api.github.com/users/zdevito/events{/privacy}", "received_events_url": "https://api.github.com/users/zdevito/received_events", "type": "User", "site_admin": false}, "body": "This error checking code is redundant with the error checking code in emitBuiltinCall.", "created_at": "2018-08-18T02:29:46Z", "updated_at": "2018-11-23T15:49:38Z", "html_url": "https://github.com/pytorch/pytorch/pull/10641#discussion_r211062318", "pull_request_url": "https://api.github.com/repos/pytorch/pytorch/pulls/10641", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/211062318"}, "html": {"href": "https://github.com/pytorch/pytorch/pull/10641#discussion_r211062318"}, "pull_request": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/10641"}}, "body_html": "<p>This error checking code is redundant with the error checking code in emitBuiltinCall.</p>", "body_text": "This error checking code is redundant with the error checking code in emitBuiltinCall."}