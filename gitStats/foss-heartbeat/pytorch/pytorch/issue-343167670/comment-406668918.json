{"url": "https://api.github.com/repos/pytorch/pytorch/issues/comments/406668918", "html_url": "https://github.com/pytorch/pytorch/issues/9634#issuecomment-406668918", "issue_url": "https://api.github.com/repos/pytorch/pytorch/issues/9634", "id": 406668918, "node_id": "MDEyOklzc3VlQ29tbWVudDQwNjY2ODkxOA==", "user": {"login": "t-vi", "id": 20787943, "node_id": "MDQ6VXNlcjIwNzg3OTQz", "avatar_url": "https://avatars2.githubusercontent.com/u/20787943?v=4", "gravatar_id": "", "url": "https://api.github.com/users/t-vi", "html_url": "https://github.com/t-vi", "followers_url": "https://api.github.com/users/t-vi/followers", "following_url": "https://api.github.com/users/t-vi/following{/other_user}", "gists_url": "https://api.github.com/users/t-vi/gists{/gist_id}", "starred_url": "https://api.github.com/users/t-vi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/t-vi/subscriptions", "organizations_url": "https://api.github.com/users/t-vi/orgs", "repos_url": "https://api.github.com/users/t-vi/repos", "events_url": "https://api.github.com/users/t-vi/events{/privacy}", "received_events_url": "https://api.github.com/users/t-vi/received_events", "type": "User", "site_admin": false}, "created_at": "2018-07-20T17:22:27Z", "updated_at": "2018-07-20T17:22:27Z", "author_association": "CONTRIBUTOR", "body_html": "<p>Yes, this is intended behaviour.<br>\nThe <code>=+, =*, ...</code> ops are inplace operations (like add_) and you cannot keep backward through them.<br>\nWhen using <code>x = x + y</code> the old <code>x</code> stays around (but doesn't have a name anymore) and will be visited in the backward.</p>", "body_text": "Yes, this is intended behaviour.\nThe =+, =*, ... ops are inplace operations (like add_) and you cannot keep backward through them.\nWhen using x = x + y the old x stays around (but doesn't have a name anymore) and will be visited in the backward.", "body": "Yes, this is intended behaviour.\r\nThe `=+, =*, ...` ops are inplace operations (like add_) and you cannot keep backward through them.\r\nWhen using `x = x + y` the old `x` stays around (but doesn't have a name anymore) and will be visited in the backward."}