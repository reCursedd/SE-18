{"url": "https://api.github.com/repos/pytorch/pytorch/issues/10940", "repository_url": "https://api.github.com/repos/pytorch/pytorch", "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/10940/labels{/name}", "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/10940/comments", "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/10940/events", "html_url": "https://github.com/pytorch/pytorch/issues/10940", "id": 354661133, "node_id": "MDU6SXNzdWUzNTQ2NjExMzM=", "number": 10940, "title": "[Caffe2] Model work Alright in Python but Failed in C++", "user": {"login": "harry67yqh", "id": 904036, "node_id": "MDQ6VXNlcjkwNDAzNg==", "avatar_url": "https://avatars1.githubusercontent.com/u/904036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/harry67yqh", "html_url": "https://github.com/harry67yqh", "followers_url": "https://api.github.com/users/harry67yqh/followers", "following_url": "https://api.github.com/users/harry67yqh/following{/other_user}", "gists_url": "https://api.github.com/users/harry67yqh/gists{/gist_id}", "starred_url": "https://api.github.com/users/harry67yqh/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/harry67yqh/subscriptions", "organizations_url": "https://api.github.com/users/harry67yqh/orgs", "repos_url": "https://api.github.com/users/harry67yqh/repos", "events_url": "https://api.github.com/users/harry67yqh/events{/privacy}", "received_events_url": "https://api.github.com/users/harry67yqh/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 890282107, "node_id": "MDU6TGFiZWw4OTAyODIxMDc=", "url": "https://api.github.com/repos/pytorch/pytorch/labels/caffe2", "name": "caffe2", "color": "210aa8", "default": false}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-08-28T10:09:21Z", "updated_at": "2018-11-23T15:44:26Z", "closed_at": null, "author_association": "NONE", "body_html": "<h2>Issue description</h2>\n<p>I have built a model in PyTorch and transfer it into Caffe2's .pb format through onnx. The model in .pb format worked well with Caffe2's Python API, but failed to work with Caffe2's C++ API. I rewrote the C++ code following the pybind_state.cc file in my local repository of caffe2 source code, making my C++ code almost identical to the reference. However, it still didn't work. My guess is that the problem lies in the caffe2.pb.cc file generated using protobuf, as I generated it after my build of Caffe2 following the tutorial in <a href=\"https://caffe2.ai/docs/cplusplus_tutorial.html\" rel=\"nofollow\">https://caffe2.ai/docs/cplusplus_tutorial.html</a>.</p>\n<h2>Code example</h2>\n<p>Following is my C++ code.</p>\n<pre><code>\tthis-&gt;workspace = new caffe2::Workspace();\n\tcaffe2::NetDef initNet, predictNet;\n\tCAFFE_ENFORCE(this-&gt;workspace);\n\tstd::ifstream initNetFile(this-&gt;initNetPath, ios::binary);\n\tstd::ifstream predictNetFile(this-&gt;predictNetPath, ios::binary);\n\tstd::string initNetStr((std::istreambuf_iterator&lt;char&gt;(initNetFile)), std::istreambuf_iterator&lt;char&gt;());\n\tstd::string predictNetStr((std::istreambuf_iterator&lt;char&gt;(predictNetFile)), std::istreambuf_iterator&lt;char&gt;());\n\n\tCAFFE_ENFORCE(caffe2::ParseProtoFromLargeString(initNetStr, &amp;initNet));\n\tCAFFE_ENFORCE(caffe2::ParseProtoFromLargeString(predictNetStr, &amp;predictNet));\n\n\tauto predictor = new caffe2::Predictor(initNet, predictNet, this-&gt;workspace);\n</code></pre>\n<p>And my Python demo which worked.</p>\n<pre><code># The path to save model\nINIT_MODEL_PATH = r\".\\init_voxelbased.pb\"\nPREDICT_MODEL_PATH = r\".\\predict_voxelbased.pb\"\n\n# Load the model\nwith open(INIT_MODEL_PATH, 'rb') as f:\n    init_net = f.read()\nwith open(PREDICT_MODEL_PATH, 'rb') as f:\n    predict_net = f.read()\n\n# Initialize the predictor from the input protobufs\np = workspace.Predictor(init_net, predict_net)\n</code></pre>\n<p>Visual Studio 2017 shows very little information (internal metadata point to 0x00000000000) about 'initNet' after the 'ParseProtoFromLargeString', so I strong suspect that there is something wrong with 'ParseProtoFromLargeString' .</p>\n<h2>System Info</h2>\n<ul>\n<li>PyTorch or Caffe2: Caffe2</li>\n<li>How you installed Caffe2 (conda, pip, source): source</li>\n<li>Build command you used (if compiling from source): build_windows.bat in '/scripts'</li>\n<li>OS: Windows 10 professional</li>\n<li>Caffe2 version: Not sure, but built from source in Aug 15 2018</li>\n<li>Python version: 3.6.5</li>\n<li>CUDA/cuDNN version: 9.2</li>\n<li>GPU models and configuration: GTX1080</li>\n<li>GCC version (if compiling from source): Unknown</li>\n<li>CMake version: 3.12.1</li>\n<li>Versions of any other relevant libraries: protobuf 3.5.0</li>\n</ul>", "body_text": "Issue description\nI have built a model in PyTorch and transfer it into Caffe2's .pb format through onnx. The model in .pb format worked well with Caffe2's Python API, but failed to work with Caffe2's C++ API. I rewrote the C++ code following the pybind_state.cc file in my local repository of caffe2 source code, making my C++ code almost identical to the reference. However, it still didn't work. My guess is that the problem lies in the caffe2.pb.cc file generated using protobuf, as I generated it after my build of Caffe2 following the tutorial in https://caffe2.ai/docs/cplusplus_tutorial.html.\nCode example\nFollowing is my C++ code.\n\tthis->workspace = new caffe2::Workspace();\n\tcaffe2::NetDef initNet, predictNet;\n\tCAFFE_ENFORCE(this->workspace);\n\tstd::ifstream initNetFile(this->initNetPath, ios::binary);\n\tstd::ifstream predictNetFile(this->predictNetPath, ios::binary);\n\tstd::string initNetStr((std::istreambuf_iterator<char>(initNetFile)), std::istreambuf_iterator<char>());\n\tstd::string predictNetStr((std::istreambuf_iterator<char>(predictNetFile)), std::istreambuf_iterator<char>());\n\n\tCAFFE_ENFORCE(caffe2::ParseProtoFromLargeString(initNetStr, &initNet));\n\tCAFFE_ENFORCE(caffe2::ParseProtoFromLargeString(predictNetStr, &predictNet));\n\n\tauto predictor = new caffe2::Predictor(initNet, predictNet, this->workspace);\n\nAnd my Python demo which worked.\n# The path to save model\nINIT_MODEL_PATH = r\".\\init_voxelbased.pb\"\nPREDICT_MODEL_PATH = r\".\\predict_voxelbased.pb\"\n\n# Load the model\nwith open(INIT_MODEL_PATH, 'rb') as f:\n    init_net = f.read()\nwith open(PREDICT_MODEL_PATH, 'rb') as f:\n    predict_net = f.read()\n\n# Initialize the predictor from the input protobufs\np = workspace.Predictor(init_net, predict_net)\n\nVisual Studio 2017 shows very little information (internal metadata point to 0x00000000000) about 'initNet' after the 'ParseProtoFromLargeString', so I strong suspect that there is something wrong with 'ParseProtoFromLargeString' .\nSystem Info\n\nPyTorch or Caffe2: Caffe2\nHow you installed Caffe2 (conda, pip, source): source\nBuild command you used (if compiling from source): build_windows.bat in '/scripts'\nOS: Windows 10 professional\nCaffe2 version: Not sure, but built from source in Aug 15 2018\nPython version: 3.6.5\nCUDA/cuDNN version: 9.2\nGPU models and configuration: GTX1080\nGCC version (if compiling from source): Unknown\nCMake version: 3.12.1\nVersions of any other relevant libraries: protobuf 3.5.0", "body": "## Issue description\r\n\r\nI have built a model in PyTorch and transfer it into Caffe2's .pb format through onnx. The model in .pb format worked well with Caffe2's Python API, but failed to work with Caffe2's C++ API. I rewrote the C++ code following the pybind_state.cc file in my local repository of caffe2 source code, making my C++ code almost identical to the reference. However, it still didn't work. My guess is that the problem lies in the caffe2.pb.cc file generated using protobuf, as I generated it after my build of Caffe2 following the tutorial in https://caffe2.ai/docs/cplusplus_tutorial.html.\r\n\r\n## Code example\r\n\r\nFollowing is my C++ code.\r\n```\r\n\tthis->workspace = new caffe2::Workspace();\r\n\tcaffe2::NetDef initNet, predictNet;\r\n\tCAFFE_ENFORCE(this->workspace);\r\n\tstd::ifstream initNetFile(this->initNetPath, ios::binary);\r\n\tstd::ifstream predictNetFile(this->predictNetPath, ios::binary);\r\n\tstd::string initNetStr((std::istreambuf_iterator<char>(initNetFile)), std::istreambuf_iterator<char>());\r\n\tstd::string predictNetStr((std::istreambuf_iterator<char>(predictNetFile)), std::istreambuf_iterator<char>());\r\n\r\n\tCAFFE_ENFORCE(caffe2::ParseProtoFromLargeString(initNetStr, &initNet));\r\n\tCAFFE_ENFORCE(caffe2::ParseProtoFromLargeString(predictNetStr, &predictNet));\r\n\r\n\tauto predictor = new caffe2::Predictor(initNet, predictNet, this->workspace);\r\n```\r\nAnd my Python demo which worked.\r\n\r\n```\r\n# The path to save model\r\nINIT_MODEL_PATH = r\".\\init_voxelbased.pb\"\r\nPREDICT_MODEL_PATH = r\".\\predict_voxelbased.pb\"\r\n\r\n# Load the model\r\nwith open(INIT_MODEL_PATH, 'rb') as f:\r\n    init_net = f.read()\r\nwith open(PREDICT_MODEL_PATH, 'rb') as f:\r\n    predict_net = f.read()\r\n\r\n# Initialize the predictor from the input protobufs\r\np = workspace.Predictor(init_net, predict_net)\r\n```\r\nVisual Studio 2017 shows very little information (internal metadata point to 0x00000000000) about 'initNet' after the 'ParseProtoFromLargeString', so I strong suspect that there is something wrong with 'ParseProtoFromLargeString' .\r\n\r\n## System Info\r\n\r\n\r\n- PyTorch or Caffe2: Caffe2\r\n- How you installed Caffe2 (conda, pip, source): source\r\n- Build command you used (if compiling from source): build_windows.bat in '/scripts'\r\n- OS: Windows 10 professional\r\n- Caffe2 version: Not sure, but built from source in Aug 15 2018\r\n- Python version: 3.6.5\r\n- CUDA/cuDNN version: 9.2\r\n- GPU models and configuration: GTX1080\r\n- GCC version (if compiling from source): Unknown\r\n- CMake version: 3.12.1\r\n- Versions of any other relevant libraries: protobuf 3.5.0\r\n"}