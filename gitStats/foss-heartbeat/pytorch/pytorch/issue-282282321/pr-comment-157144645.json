{"url": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/157144645", "pull_request_review_id": 83740763, "id": 157144645, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE1NzE0NDY0NQ==", "diff_hunk": "@@ -695,13 +695,13 @@\n   self: hardshrink_backward(grad, self, lambd)\n \n - name: hardtanh(Tensor self, Scalar min_val, Scalar max_val)\n-  self: hardtanh_backward(grad, self, min_val, max_val)\n+  self: hardtanh_backward(grad, output, min_val, max_val)\n \n - name: hardtanh_(Tensor self, Scalar min_val, Scalar max_val)\n   self: hardtanh_backward(grad, output, min_val, max_val)\n \n - name: leaky_relu(Tensor self, Scalar negative_slope)\n-  self: leaky_relu_backward(grad, self, negative_slope)\n+  self: leaky_relu_backward(grad, output, negative_slope)", "path": "tools/autograd/derivatives.yaml", "position": 12, "original_position": 12, "commit_id": "6f78845ed598d15e936525cbad33c94b1a9730bd", "original_commit_id": "6f78845ed598d15e936525cbad33c94b1a9730bd", "user": {"login": "lantiga", "id": 191033, "node_id": "MDQ6VXNlcjE5MTAzMw==", "avatar_url": "https://avatars2.githubusercontent.com/u/191033?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lantiga", "html_url": "https://github.com/lantiga", "followers_url": "https://api.github.com/users/lantiga/followers", "following_url": "https://api.github.com/users/lantiga/following{/other_user}", "gists_url": "https://api.github.com/users/lantiga/gists{/gist_id}", "starred_url": "https://api.github.com/users/lantiga/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lantiga/subscriptions", "organizations_url": "https://api.github.com/users/lantiga/orgs", "repos_url": "https://api.github.com/users/lantiga/repos", "events_url": "https://api.github.com/users/lantiga/events{/privacy}", "received_events_url": "https://api.github.com/users/lantiga/received_events", "type": "User", "site_admin": false}, "body": "I had the same doubt regarding relu.\r\n\r\nUsing `output` in non-inplace `threshold` led to a failed test, while tests were passing for `leaky_relu`, `rrelu` and `hardtanh`, so I kept using `output`. However, the real fix brought in by the PR is on `get_variable_type.py`: there's no need to use `output` in non-inline now.\r\n\r\n", "created_at": "2017-12-15T08:26:37Z", "updated_at": "2018-11-23T15:37:25Z", "html_url": "https://github.com/pytorch/pytorch/pull/4184#discussion_r157144645", "pull_request_url": "https://api.github.com/repos/pytorch/pytorch/pulls/4184", "author_association": "COLLABORATOR", "_links": {"self": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/157144645"}, "html": {"href": "https://github.com/pytorch/pytorch/pull/4184#discussion_r157144645"}, "pull_request": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/4184"}}, "body_html": "<p>I had the same doubt regarding relu.</p>\n<p>Using <code>output</code> in non-inplace <code>threshold</code> led to a failed test, while tests were passing for <code>leaky_relu</code>, <code>rrelu</code> and <code>hardtanh</code>, so I kept using <code>output</code>. However, the real fix brought in by the PR is on <code>get_variable_type.py</code>: there's no need to use <code>output</code> in non-inline now.</p>", "body_text": "I had the same doubt regarding relu.\nUsing output in non-inplace threshold led to a failed test, while tests were passing for leaky_relu, rrelu and hardtanh, so I kept using output. However, the real fix brought in by the PR is on get_variable_type.py: there's no need to use output in non-inline now.", "in_reply_to_id": 157139885}