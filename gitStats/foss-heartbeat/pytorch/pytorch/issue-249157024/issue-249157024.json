{"url": "https://api.github.com/repos/pytorch/pytorch/issues/2361", "repository_url": "https://api.github.com/repos/pytorch/pytorch", "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/2361/labels{/name}", "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/2361/comments", "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/2361/events", "html_url": "https://github.com/pytorch/pytorch/issues/2361", "id": 249157024, "node_id": "MDU6SXNzdWUyNDkxNTcwMjQ=", "number": 2361, "title": "Double backward memory leak (torch.autograd.grad)", "user": {"login": "thuyen", "id": 4015328, "node_id": "MDQ6VXNlcjQwMTUzMjg=", "avatar_url": "https://avatars1.githubusercontent.com/u/4015328?v=4", "gravatar_id": "", "url": "https://api.github.com/users/thuyen", "html_url": "https://github.com/thuyen", "followers_url": "https://api.github.com/users/thuyen/followers", "following_url": "https://api.github.com/users/thuyen/following{/other_user}", "gists_url": "https://api.github.com/users/thuyen/gists{/gist_id}", "starred_url": "https://api.github.com/users/thuyen/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/thuyen/subscriptions", "organizations_url": "https://api.github.com/users/thuyen/orgs", "repos_url": "https://api.github.com/users/thuyen/repos", "events_url": "https://api.github.com/users/thuyen/events{/privacy}", "received_events_url": "https://api.github.com/users/thuyen/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-08-09T20:49:08Z", "updated_at": "2017-08-09T20:51:13Z", "closed_at": "2017-08-09T20:51:13Z", "author_association": "CONTRIBUTOR", "body_html": "<p>Reproduce in version 0.2.0+1199e3d. Memory keeps growing at every iteration.</p>\n<pre><code>import torch\nfrom torch.autograd import grad, Variable\nfrom torchvision import models\n\nmodel = models.resnet50().cuda()\nfor k in range(20):\n    x   = Variable(torch.rand(8, 3, 224, 224).cuda(), requires_grad=True)\n    dx, = grad(model(x).sum(), x, create_graph=True)\n    y = model(x + dx).sum()\n    y.backward()\n\n</code></pre>", "body_text": "Reproduce in version 0.2.0+1199e3d. Memory keeps growing at every iteration.\nimport torch\nfrom torch.autograd import grad, Variable\nfrom torchvision import models\n\nmodel = models.resnet50().cuda()\nfor k in range(20):\n    x   = Variable(torch.rand(8, 3, 224, 224).cuda(), requires_grad=True)\n    dx, = grad(model(x).sum(), x, create_graph=True)\n    y = model(x + dx).sum()\n    y.backward()", "body": "Reproduce in version 0.2.0+1199e3d. Memory keeps growing at every iteration. \r\n\r\n```\r\nimport torch\r\nfrom torch.autograd import grad, Variable\r\nfrom torchvision import models\r\n\r\nmodel = models.resnet50().cuda()\r\nfor k in range(20):\r\n    x   = Variable(torch.rand(8, 3, 224, 224).cuda(), requires_grad=True)\r\n    dx, = grad(model(x).sum(), x, create_graph=True)\r\n    y = model(x + dx).sum()\r\n    y.backward()\r\n\r\n```"}