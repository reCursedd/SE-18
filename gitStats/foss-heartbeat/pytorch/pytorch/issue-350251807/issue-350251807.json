{"url": "https://api.github.com/repos/pytorch/pytorch/issues/10499", "repository_url": "https://api.github.com/repos/pytorch/pytorch", "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/10499/labels{/name}", "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/10499/comments", "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/10499/events", "html_url": "https://github.com/pytorch/pytorch/pull/10499", "id": 350251807, "node_id": "MDExOlB1bGxSZXF1ZXN0MjA4MTQ3OTk2", "number": 10499, "title": "stop allowing extra positional args in arg parser", "user": {"login": "li-roy", "id": 8813817, "node_id": "MDQ6VXNlcjg4MTM4MTc=", "avatar_url": "https://avatars0.githubusercontent.com/u/8813817?v=4", "gravatar_id": "", "url": "https://api.github.com/users/li-roy", "html_url": "https://github.com/li-roy", "followers_url": "https://api.github.com/users/li-roy/followers", "following_url": "https://api.github.com/users/li-roy/following{/other_user}", "gists_url": "https://api.github.com/users/li-roy/gists{/gist_id}", "starred_url": "https://api.github.com/users/li-roy/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/li-roy/subscriptions", "organizations_url": "https://api.github.com/users/li-roy/orgs", "repos_url": "https://api.github.com/users/li-roy/repos", "events_url": "https://api.github.com/users/li-roy/events{/privacy}", "received_events_url": "https://api.github.com/users/li-roy/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2018-08-14T01:45:07Z", "updated_at": "2018-11-23T15:51:13Z", "closed_at": "2018-09-13T18:57:49Z", "author_association": "CONTRIBUTOR", "pull_request": {"url": "https://api.github.com/repos/pytorch/pytorch/pulls/10499", "html_url": "https://github.com/pytorch/pytorch/pull/10499", "diff_url": "https://github.com/pytorch/pytorch/pull/10499.diff", "patch_url": "https://github.com/pytorch/pytorch/pull/10499.patch"}, "body_html": "<p>Arg parser allowed additional positional args to be parsed into keyword-only params.</p>\n<p>Fixes a couple cases:</p>\n<ul>\n<li>The positional argument happens to be of the right type, and it just works silently. Now, we fail as expected.</li>\n<li>The positional argument fails later down the line. Now, we fail at the appropriate time and get a better error message.</li>\n</ul>\n<p>Pre-fix:</p>\n<pre><code>&gt;&gt;&gt; torch.cuda.LongTensor((6, 0), 1, 1, 0)\ntensor([6, 0], device='cuda:1')\n</code></pre>\n<p>Post-fix:</p>\n<pre><code>&gt;&gt;&gt; torch.cuda.LongTensor((6, 0), 1, 1, 0)\nTraceback (most recent call last):\n  File \"&lt;stdin&gt;\", line 1, in &lt;module&gt;\nTypeError: new() received an invalid combination of arguments - got (tuple, int, int, int), but expected one of:\n * (torch.device device)\n * (torch.Storage storage)\n * (Tensor other)\n * (tuple of ints size, torch.device device)\n * (object data, torch.device device)\n</code></pre>\n<p>Pre-fix:</p>\n<pre><code>&gt;&gt;&gt; a = torch.tensor(5)\n&gt;&gt;&gt; a.new_zeros((5,5), 0)\nTraceback (most recent call last):\n  File \"&lt;stdin&gt;\", line 1, in &lt;module&gt;\nTypeError: new_zeros(): argument 'dtype' (position 2) must be torch.dtype, not int\n</code></pre>\n<p>Post-fix:</p>\n<pre><code>&gt;&gt;&gt; a = torch.tensor(5)\n&gt;&gt;&gt; a.new_zeros((5,5), 0)\nTraceback (most recent call last):\n  File \"&lt;stdin&gt;\", line 1, in &lt;module&gt;\nTypeError: new_zeros() takes 1 positional argument but 2 were given\n</code></pre>\n<p><span class=\"issue-keyword tooltipped tooltipped-se\" aria-label=\"This pull request closes issue #8351.\">fixes</span> <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load issue title\" data-id=\"331371443\" data-permission-text=\"Issue title is private\" data-url=\"https://github.com/pytorch/pytorch/issues/8351\" data-hovercard-type=\"issue\" data-hovercard-url=\"/pytorch/pytorch/issues/8351/hovercard\" href=\"https://github.com/pytorch/pytorch/issues/8351\">#8351</a></p>", "body_text": "Arg parser allowed additional positional args to be parsed into keyword-only params.\nFixes a couple cases:\n\nThe positional argument happens to be of the right type, and it just works silently. Now, we fail as expected.\nThe positional argument fails later down the line. Now, we fail at the appropriate time and get a better error message.\n\nPre-fix:\n>>> torch.cuda.LongTensor((6, 0), 1, 1, 0)\ntensor([6, 0], device='cuda:1')\n\nPost-fix:\n>>> torch.cuda.LongTensor((6, 0), 1, 1, 0)\nTraceback (most recent call last):\n  File \"<stdin>\", line 1, in <module>\nTypeError: new() received an invalid combination of arguments - got (tuple, int, int, int), but expected one of:\n * (torch.device device)\n * (torch.Storage storage)\n * (Tensor other)\n * (tuple of ints size, torch.device device)\n * (object data, torch.device device)\n\nPre-fix:\n>>> a = torch.tensor(5)\n>>> a.new_zeros((5,5), 0)\nTraceback (most recent call last):\n  File \"<stdin>\", line 1, in <module>\nTypeError: new_zeros(): argument 'dtype' (position 2) must be torch.dtype, not int\n\nPost-fix:\n>>> a = torch.tensor(5)\n>>> a.new_zeros((5,5), 0)\nTraceback (most recent call last):\n  File \"<stdin>\", line 1, in <module>\nTypeError: new_zeros() takes 1 positional argument but 2 were given\n\nfixes #8351", "body": "Arg parser allowed additional positional args to be parsed into keyword-only params. \r\n\r\nFixes a couple cases:\r\n- The positional argument happens to be of the right type, and it just works silently. Now, we fail as expected.\r\n- The positional argument fails later down the line. Now, we fail at the appropriate time and get a better error message.\r\n\r\nPre-fix:\r\n```\r\n>>> torch.cuda.LongTensor((6, 0), 1, 1, 0)\r\ntensor([6, 0], device='cuda:1')\r\n```\r\nPost-fix:\r\n```\r\n>>> torch.cuda.LongTensor((6, 0), 1, 1, 0)\r\nTraceback (most recent call last):\r\n  File \"<stdin>\", line 1, in <module>\r\nTypeError: new() received an invalid combination of arguments - got (tuple, int, int, int), but expected one of:\r\n * (torch.device device)\r\n * (torch.Storage storage)\r\n * (Tensor other)\r\n * (tuple of ints size, torch.device device)\r\n * (object data, torch.device device)\r\n```\r\n\r\nPre-fix:\r\n```\r\n>>> a = torch.tensor(5)\r\n>>> a.new_zeros((5,5), 0)\r\nTraceback (most recent call last):\r\n  File \"<stdin>\", line 1, in <module>\r\nTypeError: new_zeros(): argument 'dtype' (position 2) must be torch.dtype, not int\r\n```\r\n\r\nPost-fix:\r\n```\r\n>>> a = torch.tensor(5)\r\n>>> a.new_zeros((5,5), 0)\r\nTraceback (most recent call last):\r\n  File \"<stdin>\", line 1, in <module>\r\nTypeError: new_zeros() takes 1 positional argument but 2 were given\r\n```\r\n\r\nfixes #8351"}