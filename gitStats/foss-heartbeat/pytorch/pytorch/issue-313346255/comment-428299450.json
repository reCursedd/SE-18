{"url": "https://api.github.com/repos/pytorch/pytorch/issues/comments/428299450", "html_url": "https://github.com/pytorch/pytorch/issues/6505#issuecomment-428299450", "issue_url": "https://api.github.com/repos/pytorch/pytorch/issues/6505", "id": 428299450, "node_id": "MDEyOklzc3VlQ29tbWVudDQyODI5OTQ1MA==", "user": {"login": "khurramHazen", "id": 29463157, "node_id": "MDQ6VXNlcjI5NDYzMTU3", "avatar_url": "https://avatars2.githubusercontent.com/u/29463157?v=4", "gravatar_id": "", "url": "https://api.github.com/users/khurramHazen", "html_url": "https://github.com/khurramHazen", "followers_url": "https://api.github.com/users/khurramHazen/followers", "following_url": "https://api.github.com/users/khurramHazen/following{/other_user}", "gists_url": "https://api.github.com/users/khurramHazen/gists{/gist_id}", "starred_url": "https://api.github.com/users/khurramHazen/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/khurramHazen/subscriptions", "organizations_url": "https://api.github.com/users/khurramHazen/orgs", "repos_url": "https://api.github.com/users/khurramHazen/repos", "events_url": "https://api.github.com/users/khurramHazen/events{/privacy}", "received_events_url": "https://api.github.com/users/khurramHazen/received_events", "type": "User", "site_admin": false}, "created_at": "2018-10-09T18:26:36Z", "updated_at": "2018-10-09T18:26:36Z", "author_association": "NONE", "body_html": "<p>Facing same issue. ONNX model was converted to prototxt binary using following commands:</p>\n<pre><code>raw_o_model = onnx.load(onnx_file_path)\ninit_net, predict_net = backend.Caffe2Backend.onnx_graph_to_caffe2_net(raw_o_model)\n\nwith open('./exported/caffe2/init.pb', 'w') as f:\n    f.write( init_net.SerializeToString() )\n\nwith open('./exported/caffe2/pred.pb', 'wb') as f:\n    f.write( predict_net.SerializeToString() )\n\nwith open('./exported/caffe2/pred.pbtxt', 'w') as f:\n    f.write( str(predict_net) )\n\n# Load saved Caffe2 model\ninit_net = caffe2_pb2.NetDef()\nwith  open(init_file, 'rb') as f:\n    init_net.ParseFromString(f.read())\n    init_net.device_option.CopyFrom(device_opts)\n\npred_net = caffe2_pb2.NetDef()\nwith  open(pred_file, 'rb') as f:\n    pred_net.ParseFromString(f.read())\n    pred_net.device_option.CopyFrom(device_opts)\n</code></pre>\n<p>One crucial thing to note is <strong>pred.pbtxt</strong> list all the blobs as external_inputs as shown below:</p>\n<pre><code>external_input: \"0\"\nexternal_input: \"1\"\nexternal_input: \"2\"\nexternal_input: \"3\"\n...\n\n</code></pre>\n<p>And these are not <strong>input blobs</strong> except the first (with 0 index).</p>", "body_text": "Facing same issue. ONNX model was converted to prototxt binary using following commands:\nraw_o_model = onnx.load(onnx_file_path)\ninit_net, predict_net = backend.Caffe2Backend.onnx_graph_to_caffe2_net(raw_o_model)\n\nwith open('./exported/caffe2/init.pb', 'w') as f:\n    f.write( init_net.SerializeToString() )\n\nwith open('./exported/caffe2/pred.pb', 'wb') as f:\n    f.write( predict_net.SerializeToString() )\n\nwith open('./exported/caffe2/pred.pbtxt', 'w') as f:\n    f.write( str(predict_net) )\n\n# Load saved Caffe2 model\ninit_net = caffe2_pb2.NetDef()\nwith  open(init_file, 'rb') as f:\n    init_net.ParseFromString(f.read())\n    init_net.device_option.CopyFrom(device_opts)\n\npred_net = caffe2_pb2.NetDef()\nwith  open(pred_file, 'rb') as f:\n    pred_net.ParseFromString(f.read())\n    pred_net.device_option.CopyFrom(device_opts)\n\nOne crucial thing to note is pred.pbtxt list all the blobs as external_inputs as shown below:\nexternal_input: \"0\"\nexternal_input: \"1\"\nexternal_input: \"2\"\nexternal_input: \"3\"\n...\n\n\nAnd these are not input blobs except the first (with 0 index).", "body": "Facing same issue. ONNX model was converted to prototxt binary using following commands:\r\n```\r\nraw_o_model = onnx.load(onnx_file_path)\r\ninit_net, predict_net = backend.Caffe2Backend.onnx_graph_to_caffe2_net(raw_o_model)\r\n\r\nwith open('./exported/caffe2/init.pb', 'w') as f:\r\n    f.write( init_net.SerializeToString() )\r\n\r\nwith open('./exported/caffe2/pred.pb', 'wb') as f:\r\n    f.write( predict_net.SerializeToString() )\r\n\r\nwith open('./exported/caffe2/pred.pbtxt', 'w') as f:\r\n    f.write( str(predict_net) )\r\n\r\n# Load saved Caffe2 model\r\ninit_net = caffe2_pb2.NetDef()\r\nwith  open(init_file, 'rb') as f:\r\n    init_net.ParseFromString(f.read())\r\n    init_net.device_option.CopyFrom(device_opts)\r\n\r\npred_net = caffe2_pb2.NetDef()\r\nwith  open(pred_file, 'rb') as f:\r\n    pred_net.ParseFromString(f.read())\r\n    pred_net.device_option.CopyFrom(device_opts)\r\n```\r\n\r\nOne crucial thing to note is **pred.pbtxt** list all the blobs as external_inputs as shown below:\r\n```\r\nexternal_input: \"0\"\r\nexternal_input: \"1\"\r\nexternal_input: \"2\"\r\nexternal_input: \"3\"\r\n...\r\n\r\n```\r\n\r\nAnd these are not **input blobs** except the first (with 0 index).\r\n\r\n"}