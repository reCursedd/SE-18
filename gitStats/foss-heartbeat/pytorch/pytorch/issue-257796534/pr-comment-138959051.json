{"url": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/138959051", "pull_request_review_id": 62826080, "id": 138959051, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEzODk1OTA1MQ==", "diff_hunk": "@@ -9,50 +9,24 @@\n class GridSampler(Function):\n \n     @staticmethod\n-    def _enforce_cudnn(input):\n-        if not cudnn.enabled:\n-            raise RuntimeError(\"GridSampler needs CuDNN for processing CUDA inputs,\"\n-                               \" but CuDNN is not enabled\")\n-        assert cudnn.is_acceptable(input)\n-\n-    @staticmethod\n     def forward(ctx, input, grid):\n         ctx.save_for_backward(input, grid)\n         grid_sz = grid.size()\n-        if input.is_cuda:\n-            GridSampler._enforce_cudnn(input)\n-            output = input.new(grid_sz[0], input.size(1), grid_sz[1], grid_sz[2])\n-            grid = grid.contiguous()\n-            if 0 in input.stride():\n-                input = input.contiguous()\n-            torch._C._cudnn_grid_sampler_forward(input, grid, output)\n-        else:\n-            backend = type2backend[type(input)]\n-            output = input.new(grid_sz[0], input.size(1), grid_sz[1], grid_sz[2])\n-            backend.SpatialGridSamplerBilinear_updateOutput(backend.library_state, input, grid, output)\n+        backend = type2backend[type(input)]", "path": "torch/nn/_functions/vision.py", "position": null, "original_position": 25, "commit_id": "8ad03f2298fef672102d702fa50729d3ffc08f15", "original_commit_id": "e878bc79e62843d2ea7d49a50b1d3d69ff644ee5", "user": {"login": "soumith", "id": 1310570, "node_id": "MDQ6VXNlcjEzMTA1NzA=", "avatar_url": "https://avatars0.githubusercontent.com/u/1310570?v=4", "gravatar_id": "", "url": "https://api.github.com/users/soumith", "html_url": "https://github.com/soumith", "followers_url": "https://api.github.com/users/soumith/followers", "following_url": "https://api.github.com/users/soumith/following{/other_user}", "gists_url": "https://api.github.com/users/soumith/gists{/gist_id}", "starred_url": "https://api.github.com/users/soumith/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/soumith/subscriptions", "organizations_url": "https://api.github.com/users/soumith/orgs", "repos_url": "https://api.github.com/users/soumith/repos", "events_url": "https://api.github.com/users/soumith/events{/privacy}", "received_events_url": "https://api.github.com/users/soumith/received_events", "type": "User", "site_admin": false}, "body": "if cudnn is available, still use that. If it's not available, only then do you use the THCUNN implementation", "created_at": "2017-09-14T17:27:06Z", "updated_at": "2018-11-23T15:34:37Z", "html_url": "https://github.com/pytorch/pytorch/pull/2737#discussion_r138959051", "pull_request_url": "https://api.github.com/repos/pytorch/pytorch/pulls/2737", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/138959051"}, "html": {"href": "https://github.com/pytorch/pytorch/pull/2737#discussion_r138959051"}, "pull_request": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/2737"}}, "body_html": "<p>if cudnn is available, still use that. If it's not available, only then do you use the THCUNN implementation</p>", "body_text": "if cudnn is available, still use that. If it's not available, only then do you use the THCUNN implementation"}