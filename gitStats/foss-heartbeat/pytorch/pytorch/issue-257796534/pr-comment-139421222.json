{"url": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/139421222", "pull_request_review_id": 63349888, "id": 139421222, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEzOTQyMTIyMg==", "diff_hunk": "@@ -0,0 +1,93 @@\n+#ifndef THC_GENERIC_FILE\n+#define THC_GENERIC_FILE \"generic/SpatialGridSamplerBilinear.cu\"\n+#else\n+\n+static inline void THNN_(SpatialGridSamplerBilinear_shapeCheck)(\n+    THCState *state,\n+    THCTensor *input,\n+    THCTensor *grid,\n+    THCTensor *gradOutput) {\n+  THCUNN_argCheck(state, THCTensor_(nDimension)(state, input) == 4, 2, input,\n+      \"4D input tensor expected but got: %s\");\n+  THCUNN_argCheck(state, THCTensor_(nDimension)(state, grid) == 4, 2, grid,\n+      \"4D grid tensor expected but got: %s\");\n+\n+  int nbatch   = THCTensor_(size)(state, input, 0);\n+  int channels = THCTensor_(size)(state, input, 1);\n+  int iheight   = THCTensor_(size)(state, input, 2);\n+  int iwidth    = THCTensor_(size)(state, input, 3);\n+  int oheight   = THCTensor_(size)(state, grid, 1);\n+  int owidth    = THCTensor_(size)(state, grid, 2);\n+\n+  THCUNN_check_dim_size(state, grid, 4, 0, nbatch);\n+  THCUNN_check_dim_size(state, grid, 4, 3, 2);\n+\n+  if (gradOutput != NULL) {\n+    THCUNN_check_dim_size(state, gradOutput, 4, 0, nbatch);\n+    THCUNN_check_dim_size(state, gradOutput, 4, 1, channels);\n+    THCUNN_check_dim_size(state, gradOutput, 4, 2, oheight);\n+    THCUNN_check_dim_size(state, gradOutput, 4, 3, owidth);\n+  }\n+}\n+\n+TH_API void THNN_(SpatialGridSamplerBilinear_updateOutput)(\n+    THCState *state,\n+    THCTensor *input,\n+    THCTensor *grid,\n+    THCTensor *output) {\n+\n+  THCUNN_assertSameGPU(state, 3, input, grid, output);\n+  THNN_(SpatialGridSamplerBilinear_shapeCheck)(state, input, grid, NULL);\n+  int N = THCTensor_(size)(state, input, 0);", "path": "torch/lib/THCUNN/generic/SpatialGridSamplerBilinear.cu", "position": null, "original_position": 41, "commit_id": "8ad03f2298fef672102d702fa50729d3ffc08f15", "original_commit_id": "2dfa26f1191121bcbc972385b032a3fd547ab822", "user": {"login": "fmassa", "id": 9110200, "node_id": "MDQ6VXNlcjkxMTAyMDA=", "avatar_url": "https://avatars2.githubusercontent.com/u/9110200?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fmassa", "html_url": "https://github.com/fmassa", "followers_url": "https://api.github.com/users/fmassa/followers", "following_url": "https://api.github.com/users/fmassa/following{/other_user}", "gists_url": "https://api.github.com/users/fmassa/gists{/gist_id}", "starred_url": "https://api.github.com/users/fmassa/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fmassa/subscriptions", "organizations_url": "https://api.github.com/users/fmassa/orgs", "repos_url": "https://api.github.com/users/fmassa/repos", "events_url": "https://api.github.com/users/fmassa/events{/privacy}", "received_events_url": "https://api.github.com/users/fmassa/received_events", "type": "User", "site_admin": false}, "body": "Same comment about the type, could you make it `int64_t` instead?", "created_at": "2017-09-18T13:28:02Z", "updated_at": "2018-11-23T15:34:38Z", "html_url": "https://github.com/pytorch/pytorch/pull/2737#discussion_r139421222", "pull_request_url": "https://api.github.com/repos/pytorch/pytorch/pulls/2737", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/139421222"}, "html": {"href": "https://github.com/pytorch/pytorch/pull/2737#discussion_r139421222"}, "pull_request": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/2737"}}, "body_html": "<p>Same comment about the type, could you make it <code>int64_t</code> instead?</p>", "body_text": "Same comment about the type, could you make it int64_t instead?"}