{"url": "https://api.github.com/repos/pytorch/pytorch/issues/comments/288869177", "html_url": "https://github.com/pytorch/pytorch/pull/1077#issuecomment-288869177", "issue_url": "https://api.github.com/repos/pytorch/pytorch/issues/1077", "id": 288869177, "node_id": "MDEyOklzc3VlQ29tbWVudDI4ODg2OTE3Nw==", "user": {"login": "apaszke", "id": 4583066, "node_id": "MDQ6VXNlcjQ1ODMwNjY=", "avatar_url": "https://avatars3.githubusercontent.com/u/4583066?v=4", "gravatar_id": "", "url": "https://api.github.com/users/apaszke", "html_url": "https://github.com/apaszke", "followers_url": "https://api.github.com/users/apaszke/followers", "following_url": "https://api.github.com/users/apaszke/following{/other_user}", "gists_url": "https://api.github.com/users/apaszke/gists{/gist_id}", "starred_url": "https://api.github.com/users/apaszke/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/apaszke/subscriptions", "organizations_url": "https://api.github.com/users/apaszke/orgs", "repos_url": "https://api.github.com/users/apaszke/repos", "events_url": "https://api.github.com/users/apaszke/events{/privacy}", "received_events_url": "https://api.github.com/users/apaszke/received_events", "type": "User", "site_admin": false}, "created_at": "2017-03-23T21:41:35Z", "updated_at": "2017-03-23T21:41:54Z", "author_association": "MEMBER", "body_html": "<p>I think the tests are failing because it's actually necessary. Apparently some CPU BLAS implementations (or maybe the stubs form TH?) multiply by 0 and this can return <code>NaN</code>s for uninitialized memory. If you're 100% sure that it can be ignored for CUDA you can guard the call with <code>#if !IS_CUDA</code></p>", "body_text": "I think the tests are failing because it's actually necessary. Apparently some CPU BLAS implementations (or maybe the stubs form TH?) multiply by 0 and this can return NaNs for uninitialized memory. If you're 100% sure that it can be ignored for CUDA you can guard the call with #if !IS_CUDA", "body": "I think the tests are failing because it's actually necessary. Apparently some CPU BLAS implementations (or maybe the stubs form TH?) multiply by 0 and this can return `NaN`s for uninitialized memory. If you're 100% sure that it can be ignored for CUDA you can guard the call with `#if !IS_CUDA`"}