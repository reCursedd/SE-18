{"url": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/188353893", "pull_request_review_id": 120312824, "id": 188353893, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4ODM1Mzg5Mw==", "diff_hunk": "@@ -0,0 +1,274 @@\n+#include \"TcpStore.hpp\"\n+\n+#include <poll.h>\n+#include <system_error>\n+#include <unistd.h>\n+\n+\n+namespace c10d {\n+\n+\n+namespace {\n+\n+enum class QueryType : std::uint8_t {\n+  SET,\n+  GET,\n+  ADD,\n+  CHECK,\n+  STOP_WAITING,\n+  KEEP_WAITING\n+};\n+\n+} // anonymous namespace\n+\n+\n+// TcpStoreDaemon class methods\n+\n+// Simply start the daemon thread\n+TcpStoreDaemon::TcpStoreDaemon(int storeListenSocket) :\n+  storeListenSocket_(storeListenSocket)\n+{\n+  daemonThread_ = std::thread(&TcpStoreDaemon::run, this);\n+}\n+\n+TcpStoreDaemon::~TcpStoreDaemon() {\n+  for (auto socket : sockets_) {\n+    if (socket != -1) {\n+      ::close(socket);\n+    }\n+  }\n+  // Join the thread\n+  join();\n+}\n+\n+void TcpStoreDaemon::join() {\n+  daemonThread_.join();\n+}\n+\n+void TcpStoreDaemon::run() {\n+\n+  std::vector<struct pollfd> fds;\n+  fds.push_back({ .fd = storeListenSocket_, .events = POLLIN });\n+\n+  // receive the queries\n+  bool finished = false;\n+  while (!finished) {\n+    for (size_t i = 0; i < sockets_.size(); i++) {\n+      fds[i].revents = 0;\n+    }\n+\n+    SYSCHECK(::poll(fds.data(), fds.size(), -1));\n+\n+    if (fds[0].revents != 0) {\n+      if (fds[0].revents ^ POLLIN) {\n+        throw std::system_error(ECONNABORTED, std::system_category());\n+      }\n+      int sockFd = std::get<0>(tcputil::accept(storeListenSocket_));\n+      sockets_.push_back(sockFd);\n+      keysAwaited_.push_back(0);\n+      fds.push_back({ .fd = sockFd, .events = POLLIN });\n+    }\n+    for (size_t rank = 0; rank < sockets_.size(); rank++) {\n+      if (fds[rank + 1].revents == 0) {\n+        continue;\n+      }\n+\n+      if (fds[rank + 1].revents ^ POLLIN) {\n+        throw std::system_error(ECONNABORTED, std::system_category());\n+      }\n+      try {\n+        query(rank);\n+      } catch (std::exception& ex) {\n+        /**\n+         * There was an error when processing query. Probably an exception\n+         * occurred in recv/send what would indicate that socket on the other\n+         * side has been closed. If the closing was due to normal exit, then the\n+         * store should exit too. Otherwise, if it was different exception,\n+         * other processes will get an exception once they try to use the store.\n+         */", "path": "torch/lib/c10d/TcpStore.cpp", "position": null, "original_position": 88, "commit_id": "ba48f051925b6a9d49113e5d8ca43ebd3f551993", "original_commit_id": "54cb0b5d4314ec282f3d813348a1069599f832b6", "user": {"login": "pietern", "id": 9845, "node_id": "MDQ6VXNlcjk4NDU=", "avatar_url": "https://avatars3.githubusercontent.com/u/9845?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pietern", "html_url": "https://github.com/pietern", "followers_url": "https://api.github.com/users/pietern/followers", "following_url": "https://api.github.com/users/pietern/following{/other_user}", "gists_url": "https://api.github.com/users/pietern/gists{/gist_id}", "starred_url": "https://api.github.com/users/pietern/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pietern/subscriptions", "organizations_url": "https://api.github.com/users/pietern/orgs", "repos_url": "https://api.github.com/users/pietern/repos", "events_url": "https://api.github.com/users/pietern/events{/privacy}", "received_events_url": "https://api.github.com/users/pietern/received_events", "type": "User", "site_admin": false}, "body": "One client going away should not take the daemon down.", "created_at": "2018-05-15T16:31:23Z", "updated_at": "2018-11-23T15:44:05Z", "html_url": "https://github.com/pytorch/pytorch/pull/7560#discussion_r188353893", "pull_request_url": "https://api.github.com/repos/pytorch/pytorch/pulls/7560", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/188353893"}, "html": {"href": "https://github.com/pytorch/pytorch/pull/7560#discussion_r188353893"}, "pull_request": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/7560"}}, "body_html": "<p>One client going away should not take the daemon down.</p>", "body_text": "One client going away should not take the daemon down."}