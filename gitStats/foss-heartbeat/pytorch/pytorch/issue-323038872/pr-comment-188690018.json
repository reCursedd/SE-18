{"url": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/188690018", "pull_request_review_id": 120716230, "id": 188690018, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4ODY5MDAxOA==", "diff_hunk": "@@ -0,0 +1,87 @@\n+#include \"StoreTestCommon.hpp\"\n+#include \"TcpStore.hpp\"\n+\n+#include <thread>\n+#include <iostream>\n+#include <cstdlib>\n+\n+\n+int main(int argc, char** argv) {\n+\n+  // Master store\n+  c10d::TCPStore masterStore(\"127.0.0.1\", 29500, true);\n+\n+  // Basic set/get on the master store\n+  c10d::test::set(masterStore, \"key0\", \"value0\");\n+  c10d::test::set(masterStore, \"key1\", \"value1\");\n+  c10d::test::set(masterStore, \"key2\", \"value2\");\n+  c10d::test::check(masterStore, \"key0\", \"value0\");\n+  c10d::test::check(masterStore, \"key1\", \"value1\");\n+  c10d::test::check(masterStore, \"key2\", \"value2\");\n+\n+  // Hammer on TCPStore\n+  std::vector<std::thread> threads;\n+  const auto numThreads = 16;\n+  const auto numIterations = 1000;\n+  c10d::test::Semaphore sem1, sem2;\n+\n+  // Each thread will have a slave store to send/recv data\n+  std::vector<std::unique_ptr<c10d::TCPStore>> slaveStores;", "path": "torch/lib/c10d/test/TCPStoreTest.cpp", "position": null, "original_position": 29, "commit_id": "ba48f051925b6a9d49113e5d8ca43ebd3f551993", "original_commit_id": "50e1362121ebf7c31269eb9b3d5f4e1ec40dd481", "user": {"login": "pietern", "id": 9845, "node_id": "MDQ6VXNlcjk4NDU=", "avatar_url": "https://avatars3.githubusercontent.com/u/9845?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pietern", "html_url": "https://github.com/pietern", "followers_url": "https://api.github.com/users/pietern/followers", "following_url": "https://api.github.com/users/pietern/following{/other_user}", "gists_url": "https://api.github.com/users/pietern/gists{/gist_id}", "starred_url": "https://api.github.com/users/pietern/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pietern/subscriptions", "organizations_url": "https://api.github.com/users/pietern/orgs", "repos_url": "https://api.github.com/users/pietern/repos", "events_url": "https://api.github.com/users/pietern/events{/privacy}", "received_events_url": "https://api.github.com/users/pietern/received_events", "type": "User", "site_admin": false}, "body": "They are not slave stores (replicas or something). Can we stick to daemon/server and worker/client?", "created_at": "2018-05-16T16:27:43Z", "updated_at": "2018-11-23T15:44:10Z", "html_url": "https://github.com/pytorch/pytorch/pull/7560#discussion_r188690018", "pull_request_url": "https://api.github.com/repos/pytorch/pytorch/pulls/7560", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/188690018"}, "html": {"href": "https://github.com/pytorch/pytorch/pull/7560#discussion_r188690018"}, "pull_request": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/7560"}}, "body_html": "<p>They are not slave stores (replicas or something). Can we stick to daemon/server and worker/client?</p>", "body_text": "They are not slave stores (replicas or something). Can we stick to daemon/server and worker/client?"}