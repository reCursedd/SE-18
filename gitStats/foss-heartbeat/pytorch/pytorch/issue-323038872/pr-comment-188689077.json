{"url": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/188689077", "pull_request_review_id": 120716230, "id": 188689077, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4ODY4OTA3Nw==", "diff_hunk": "@@ -0,0 +1,283 @@\n+#include \"Utils.hpp\"\n+\n+#include <sys/poll.h>\n+#include <netdb.h>\n+\n+#include <arpa/inet.h>\n+#include <netinet/in.h>\n+#include <netinet/tcp.h>\n+\n+#include <fcntl.h>\n+#include <unistd.h>\n+\n+#include <cstring>\n+#include <memory>\n+#include <string>\n+#include <thread>\n+#include <algorithm>\n+\n+namespace c10d {\n+namespace tcputil {\n+\n+namespace {\n+\n+constexpr int LISTEN_QUEUE_SIZE = 64;\n+\n+void setSocketNoDelay(int socket) {\n+  int flag = 1;\n+  socklen_t optlen = sizeof(flag);\n+  SYSCHECK(setsockopt(socket, IPPROTO_TCP, TCP_NODELAY, (char*)&flag, optlen));\n+}\n+\n+PortType getSocketPort(int fd) {\n+  PortType listenPort;\n+  struct ::sockaddr_storage addrStorage;\n+  socklen_t addrLen = sizeof(addrStorage);\n+  SYSCHECK(getsockname(fd,\n+        reinterpret_cast<struct ::sockaddr*>(&addrStorage), &addrLen));\n+\n+  if (addrStorage.ss_family == AF_INET) {\n+    struct ::sockaddr_in *addr =\n+      reinterpret_cast<struct ::sockaddr_in*>(&addrStorage);\n+    listenPort = ntohs(addr->sin_port);\n+\n+  } else if (addrStorage.ss_family == AF_INET6) { // AF_INET6\n+    struct ::sockaddr_in6 *addr =\n+      reinterpret_cast<struct ::sockaddr_in6*>(&addrStorage);\n+    listenPort = ntohs(addr->sin6_port);\n+\n+  } else {\n+    throw std::runtime_error(\"unsupported protocol\");\n+  }\n+  return listenPort;\n+}\n+\n+}", "path": "torch/lib/c10d/Utils.cpp", "position": null, "original_position": 55, "commit_id": "ba48f051925b6a9d49113e5d8ca43ebd3f551993", "original_commit_id": "50e1362121ebf7c31269eb9b3d5f4e1ec40dd481", "user": {"login": "pietern", "id": 9845, "node_id": "MDQ6VXNlcjk4NDU=", "avatar_url": "https://avatars3.githubusercontent.com/u/9845?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pietern", "html_url": "https://github.com/pietern", "followers_url": "https://api.github.com/users/pietern/followers", "following_url": "https://api.github.com/users/pietern/following{/other_user}", "gists_url": "https://api.github.com/users/pietern/gists{/gist_id}", "starred_url": "https://api.github.com/users/pietern/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pietern/subscriptions", "organizations_url": "https://api.github.com/users/pietern/orgs", "repos_url": "https://api.github.com/users/pietern/repos", "events_url": "https://api.github.com/users/pietern/events{/privacy}", "received_events_url": "https://api.github.com/users/pietern/received_events", "type": "User", "site_admin": false}, "body": "Add // namespace comment", "created_at": "2018-05-16T16:24:29Z", "updated_at": "2018-11-23T15:44:09Z", "html_url": "https://github.com/pytorch/pytorch/pull/7560#discussion_r188689077", "pull_request_url": "https://api.github.com/repos/pytorch/pytorch/pulls/7560", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/188689077"}, "html": {"href": "https://github.com/pytorch/pytorch/pull/7560#discussion_r188689077"}, "pull_request": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/7560"}}, "body_html": "<p>Add // namespace comment</p>", "body_text": "Add // namespace comment"}