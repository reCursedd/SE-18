{"url": "https://api.github.com/repos/pytorch/pytorch/issues/7560", "repository_url": "https://api.github.com/repos/pytorch/pytorch", "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/7560/labels{/name}", "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/7560/comments", "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/7560/events", "html_url": "https://github.com/pytorch/pytorch/pull/7560", "id": 323038872, "node_id": "MDExOlB1bGxSZXF1ZXN0MTg3OTk0MDEw", "number": 7560, "title": "C10D: Added TCPStore to support C10D store interface", "user": {"login": "teng-li", "id": 8120856, "node_id": "MDQ6VXNlcjgxMjA4NTY=", "avatar_url": "https://avatars2.githubusercontent.com/u/8120856?v=4", "gravatar_id": "", "url": "https://api.github.com/users/teng-li", "html_url": "https://github.com/teng-li", "followers_url": "https://api.github.com/users/teng-li/followers", "following_url": "https://api.github.com/users/teng-li/following{/other_user}", "gists_url": "https://api.github.com/users/teng-li/gists{/gist_id}", "starred_url": "https://api.github.com/users/teng-li/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/teng-li/subscriptions", "organizations_url": "https://api.github.com/users/teng-li/orgs", "repos_url": "https://api.github.com/users/teng-li/repos", "events_url": "https://api.github.com/users/teng-li/events{/privacy}", "received_events_url": "https://api.github.com/users/teng-li/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 679953883, "node_id": "MDU6TGFiZWw2Nzk5NTM4ODM=", "url": "https://api.github.com/repos/pytorch/pytorch/labels/distributed", "name": "distributed", "color": "c2e0c6", "default": false}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-05-15T01:51:50Z", "updated_at": "2018-11-23T15:44:14Z", "closed_at": "2018-05-17T20:38:07Z", "author_association": "CONTRIBUTOR", "pull_request": {"url": "https://api.github.com/repos/pytorch/pytorch/pulls/7560", "html_url": "https://github.com/pytorch/pytorch/pull/7560", "diff_url": "https://github.com/pytorch/pytorch/pull/7560.diff", "patch_url": "https://github.com/pytorch/pytorch/pull/7560.patch"}, "body_html": "<p>Added TCP Store as another Store for the C10D interface.</p>\n<p>For more details on the C10D Store interface, refer: <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load issue title\" data-id=\"321687832\" data-permission-text=\"Issue title is private\" data-url=\"https://github.com/pytorch/pytorch/issues/7434\" data-hovercard-type=\"issue\" data-hovercard-url=\"/pytorch/pytorch/issues/7434/hovercard\" href=\"https://github.com/pytorch/pytorch/issues/7434\">#7434</a></p>\n<p>A few things done in the PR:</p>\n<p>(1) TCP Store can be initialized either as a master who will launch a daemon thread or a slave who will connect to the master's store daemon thread.<br>\n(2) TCP Store supports all the interface functions for Store.h<br>\n(3) Refactored some of the TCP helper functions into Utils.hoo/cpp<br>\n(4) Refactored test to some common folders.</p>\n<p>Test Plan:</p>\n<pre><code>~/pytorch/torch/lib/c10d$ bin/test.sh\n+ mkdir -p build\n+ cd build\n+ cmake ../\n-- Configuring done\n-- Generating done\n-- Build files have been written to: /private/home/tengli/pytorch/torch/lib/c10d/build\n+ make all test\n[ 11%] Building CXX object CMakeFiles/store.dir/Utils.cpp.o\n[ 22%] Building CXX object CMakeFiles/store.dir/Store.cpp.o\n[ 33%] Building CXX object CMakeFiles/store.dir/FileStore.cpp.o\n[ 44%] Building CXX object CMakeFiles/store.dir/TcpStore.cpp.o\n[ 55%] Linking CXX static library libstore.a\n[ 55%] Built target store\nScanning dependencies of target TcpStoreTest\n[ 66%] Building CXX object test/CMakeFiles/TcpStoreTest.dir/TcpStoreTest.cpp.o\n[ 77%] Linking CXX executable TcpStoreTest\n[ 77%] Built target TcpStoreTest\n[ 88%] Building CXX object test/CMakeFiles/FileStoreTest.dir/FileStoreTest.cpp.o\n[100%] Linking CXX executable FileStoreTest\n[100%] Built target FileStoreTest\nRunning tests...\nTest project /private/home/tengli/pytorch/torch/lib/c10d/build\n    Start 1: FileStoreTest\n1/2 Test #1: FileStoreTest ....................   Passed    0.03 sec\n    Start 2: TcpStoreTest\n2/2 Test #2: TcpStoreTest .....................   Passed    0.69 sec\n\n100% tests passed, 0 tests failed out of 2\n\nTotal Test time (real) =   0.74 sec\n</code></pre>", "body_text": "Added TCP Store as another Store for the C10D interface.\nFor more details on the C10D Store interface, refer: #7434\nA few things done in the PR:\n(1) TCP Store can be initialized either as a master who will launch a daemon thread or a slave who will connect to the master's store daemon thread.\n(2) TCP Store supports all the interface functions for Store.h\n(3) Refactored some of the TCP helper functions into Utils.hoo/cpp\n(4) Refactored test to some common folders.\nTest Plan:\n~/pytorch/torch/lib/c10d$ bin/test.sh\n+ mkdir -p build\n+ cd build\n+ cmake ../\n-- Configuring done\n-- Generating done\n-- Build files have been written to: /private/home/tengli/pytorch/torch/lib/c10d/build\n+ make all test\n[ 11%] Building CXX object CMakeFiles/store.dir/Utils.cpp.o\n[ 22%] Building CXX object CMakeFiles/store.dir/Store.cpp.o\n[ 33%] Building CXX object CMakeFiles/store.dir/FileStore.cpp.o\n[ 44%] Building CXX object CMakeFiles/store.dir/TcpStore.cpp.o\n[ 55%] Linking CXX static library libstore.a\n[ 55%] Built target store\nScanning dependencies of target TcpStoreTest\n[ 66%] Building CXX object test/CMakeFiles/TcpStoreTest.dir/TcpStoreTest.cpp.o\n[ 77%] Linking CXX executable TcpStoreTest\n[ 77%] Built target TcpStoreTest\n[ 88%] Building CXX object test/CMakeFiles/FileStoreTest.dir/FileStoreTest.cpp.o\n[100%] Linking CXX executable FileStoreTest\n[100%] Built target FileStoreTest\nRunning tests...\nTest project /private/home/tengli/pytorch/torch/lib/c10d/build\n    Start 1: FileStoreTest\n1/2 Test #1: FileStoreTest ....................   Passed    0.03 sec\n    Start 2: TcpStoreTest\n2/2 Test #2: TcpStoreTest .....................   Passed    0.69 sec\n\n100% tests passed, 0 tests failed out of 2\n\nTotal Test time (real) =   0.74 sec", "body": "Added TCP Store as another Store for the C10D interface. \r\n\r\nFor more details on the C10D Store interface, refer: https://github.com/pytorch/pytorch/issues/7434\r\n\r\nA few things done in the PR:\r\n\r\n(1) TCP Store can be initialized either as a master who will launch a daemon thread or a slave who will connect to the master's store daemon thread.\r\n(2) TCP Store supports all the interface functions for Store.h\r\n(3) Refactored some of the TCP helper functions into Utils.hoo/cpp\r\n(4) Refactored test to some common folders.\r\n\r\nTest Plan:\r\n```\r\n~/pytorch/torch/lib/c10d$ bin/test.sh\r\n+ mkdir -p build\r\n+ cd build\r\n+ cmake ../\r\n-- Configuring done\r\n-- Generating done\r\n-- Build files have been written to: /private/home/tengli/pytorch/torch/lib/c10d/build\r\n+ make all test\r\n[ 11%] Building CXX object CMakeFiles/store.dir/Utils.cpp.o\r\n[ 22%] Building CXX object CMakeFiles/store.dir/Store.cpp.o\r\n[ 33%] Building CXX object CMakeFiles/store.dir/FileStore.cpp.o\r\n[ 44%] Building CXX object CMakeFiles/store.dir/TcpStore.cpp.o\r\n[ 55%] Linking CXX static library libstore.a\r\n[ 55%] Built target store\r\nScanning dependencies of target TcpStoreTest\r\n[ 66%] Building CXX object test/CMakeFiles/TcpStoreTest.dir/TcpStoreTest.cpp.o\r\n[ 77%] Linking CXX executable TcpStoreTest\r\n[ 77%] Built target TcpStoreTest\r\n[ 88%] Building CXX object test/CMakeFiles/FileStoreTest.dir/FileStoreTest.cpp.o\r\n[100%] Linking CXX executable FileStoreTest\r\n[100%] Built target FileStoreTest\r\nRunning tests...\r\nTest project /private/home/tengli/pytorch/torch/lib/c10d/build\r\n    Start 1: FileStoreTest\r\n1/2 Test #1: FileStoreTest ....................   Passed    0.03 sec\r\n    Start 2: TcpStoreTest\r\n2/2 Test #2: TcpStoreTest .....................   Passed    0.69 sec\r\n\r\n100% tests passed, 0 tests failed out of 2\r\n\r\nTotal Test time (real) =   0.74 sec\r\n```"}