{"url": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/188157553", "pull_request_review_id": 120077247, "id": 188157553, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4ODE1NzU1Mw==", "diff_hunk": "@@ -0,0 +1,63 @@\n+#include \"StoreTestCommon.hpp\"\n+#include \"TcpStore.hpp\"\n+\n+#include <thread>\n+#include <iostream>\n+#include <cstdlib>\n+\n+\n+int main(int argc, char** argv) {\n+\n+  // Master store\n+  c10d::TcpStore masterStore(\"127.0.0.1\", 29500, true);\n+\n+  // Basic set/get on the master store\n+  c10d::test::set(masterStore, \"key0\", \"value0\");\n+  c10d::test::set(masterStore, \"key1\", \"value1\");\n+  c10d::test::set(masterStore, \"key2\", \"value2\");\n+  c10d::test::check(masterStore, \"key0\", \"value0\");\n+  c10d::test::check(masterStore, \"key1\", \"value1\");\n+  c10d::test::check(masterStore, \"key2\", \"value2\");\n+\n+  // Hammer on TcpStore\n+  std::vector<std::thread> threads;\n+  const auto numThreads = 16;\n+  const auto numIterations = 1000;\n+  c10d::test::Semaphore sem1, sem2;\n+\n+  // Each thread will have a slave store to send/recv data\n+  std::vector<std::unique_ptr<c10d::TcpStore>> slaveStores;\n+  for (auto i = 0; i < numThreads; i++) {\n+    slaveStores.push_back(std::unique_ptr<c10d::TcpStore>(new\n+      c10d::TcpStore(\"127.0.0.1\", 29500, false)));\n+  }\n+\n+  for (auto i = 0; i < numThreads; i++) {\n+    threads.push_back(std::move(std::thread([&sem1, &sem2, &slaveStores, i] {\n+            sem1.post();\n+            sem2.wait();\n+            for (auto j = 0; j < numIterations; j++) {\n+              slaveStores[i]->add(\"counter\", 1);\n+            }\n+            // Let each thread set and get key on its slave store\n+            std::string key = \"thread_\" + std::to_string(i);\n+            std::string val = \"thread_val_\" + std::to_string(i);\n+            for (auto j = 0; j < numIterations; j++) {\n+              c10d::test::set(*slaveStores[i], key, val);\n+              c10d::test::check(*slaveStores[i], key, val);\n+            }\n+          })));", "path": "torch/lib/c10d/test/TcpStoreTest.cpp", "position": null, "original_position": 49, "commit_id": "ba48f051925b6a9d49113e5d8ca43ebd3f551993", "original_commit_id": "54cb0b5d4314ec282f3d813348a1069599f832b6", "user": {"login": "apaszke", "id": 4583066, "node_id": "MDQ6VXNlcjQ1ODMwNjY=", "avatar_url": "https://avatars3.githubusercontent.com/u/4583066?v=4", "gravatar_id": "", "url": "https://api.github.com/users/apaszke", "html_url": "https://github.com/apaszke", "followers_url": "https://api.github.com/users/apaszke/followers", "following_url": "https://api.github.com/users/apaszke/following{/other_user}", "gists_url": "https://api.github.com/users/apaszke/gists{/gist_id}", "starred_url": "https://api.github.com/users/apaszke/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/apaszke/subscriptions", "organizations_url": "https://api.github.com/users/apaszke/orgs", "repos_url": "https://api.github.com/users/apaszke/repos", "events_url": "https://api.github.com/users/apaszke/events{/privacy}", "received_events_url": "https://api.github.com/users/apaszke/received_events", "type": "User", "site_admin": false}, "body": "Can we also have a check for reading values written by other threads? Just have a barrier on the `Semaphore`", "created_at": "2018-05-15T03:38:07Z", "updated_at": "2018-11-23T15:44:05Z", "html_url": "https://github.com/pytorch/pytorch/pull/7560#discussion_r188157553", "pull_request_url": "https://api.github.com/repos/pytorch/pytorch/pulls/7560", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/188157553"}, "html": {"href": "https://github.com/pytorch/pytorch/pull/7560#discussion_r188157553"}, "pull_request": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/7560"}}, "body_html": "<p>Can we also have a check for reading values written by other threads? Just have a barrier on the <code>Semaphore</code></p>", "body_text": "Can we also have a check for reading values written by other threads? Just have a barrier on the Semaphore"}