{"url": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/148866577", "pull_request_review_id": 74180670, "id": 148866577, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE0ODg2NjU3Nw==", "diff_hunk": "@@ -108,6 +108,14 @@ VariableViewImpl::VariableViewImpl(Variable base_, at::Tensor data_)\n \n std::shared_ptr<Function>& VariableViewImpl::get_grad_fn() {\n   std::lock_guard<std::mutex> lock(mutex);\n+  if (base.requires_grad() && !requires_grad) {\n+    // TODO: See test_inplace_view6. It would be good to support this operation\n+    // but that might require sharing requires_grad between the base and the view\n+    throw std::runtime_error(\n+        \"requires_grad is False and base.requires_grad is True. Cannot use \"\n+        \"this view in a differentiable operation. Re-create the view from the \"\n+        \"base Variable.\");", "path": "torch/csrc/autograd/variable.cpp", "position": null, "original_position": 10, "commit_id": "0faf2a8e86a5f3cc32aaf8640120aca134c10961", "original_commit_id": "354c80b44fb0efd9e4db70625bf21793e8a67495", "user": {"login": "apaszke", "id": 4583066, "node_id": "MDQ6VXNlcjQ1ODMwNjY=", "avatar_url": "https://avatars3.githubusercontent.com/u/4583066?v=4", "gravatar_id": "", "url": "https://api.github.com/users/apaszke", "html_url": "https://github.com/apaszke", "followers_url": "https://api.github.com/users/apaszke/followers", "following_url": "https://api.github.com/users/apaszke/following{/other_user}", "gists_url": "https://api.github.com/users/apaszke/gists{/gist_id}", "starred_url": "https://api.github.com/users/apaszke/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/apaszke/subscriptions", "organizations_url": "https://api.github.com/users/apaszke/orgs", "repos_url": "https://api.github.com/users/apaszke/repos", "events_url": "https://api.github.com/users/apaszke/events{/privacy}", "received_events_url": "https://api.github.com/users/apaszke/received_events", "type": "User", "site_admin": false}, "body": "It might be a bit more helpful to say \"re-create the view form its base Variable after the last in-place modification\".", "created_at": "2017-11-03T18:49:40Z", "updated_at": "2018-11-23T15:35:58Z", "html_url": "https://github.com/pytorch/pytorch/pull/3384#discussion_r148866577", "pull_request_url": "https://api.github.com/repos/pytorch/pytorch/pulls/3384", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/148866577"}, "html": {"href": "https://github.com/pytorch/pytorch/pull/3384#discussion_r148866577"}, "pull_request": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/3384"}}, "body_html": "<p>It might be a bit more helpful to say \"re-create the view form its base Variable after the last in-place modification\".</p>", "body_text": "It might be a bit more helpful to say \"re-create the view form its base Variable after the last in-place modification\"."}