{"url": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/148583625", "pull_request_review_id": 73849556, "id": 148583625, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE0ODU4MzYyNQ==", "diff_hunk": "@@ -121,6 +122,20 @@ std::shared_ptr<Function>& VariableViewImpl::get_grad_fn() {\n   return _grad_fn;\n }\n \n+void VariableViewImpl::set_grad_fn(std::shared_ptr<Function> grad_fn) {\n+  if (this->_grad_fn && grad_fn) {\n+    // If we have a previous grad_fn then this is an in-place modification", "path": "torch/csrc/autograd/variable.cpp", "position": null, "original_position": 14, "commit_id": "0faf2a8e86a5f3cc32aaf8640120aca134c10961", "original_commit_id": "95929e6150f8c00717151bf90f20b91cd0c193d3", "user": {"login": "colesbury", "id": 655866, "node_id": "MDQ6VXNlcjY1NTg2Ng==", "avatar_url": "https://avatars1.githubusercontent.com/u/655866?v=4", "gravatar_id": "", "url": "https://api.github.com/users/colesbury", "html_url": "https://github.com/colesbury", "followers_url": "https://api.github.com/users/colesbury/followers", "following_url": "https://api.github.com/users/colesbury/following{/other_user}", "gists_url": "https://api.github.com/users/colesbury/gists{/gist_id}", "starred_url": "https://api.github.com/users/colesbury/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/colesbury/subscriptions", "organizations_url": "https://api.github.com/users/colesbury/orgs", "repos_url": "https://api.github.com/users/colesbury/repos", "events_url": "https://api.github.com/users/colesbury/events{/privacy}", "received_events_url": "https://api.github.com/users/colesbury/received_events", "type": "User", "site_admin": false}, "body": "If a view doesn't have a grad_fn, then it's a leaf and we don't currently support in-place operations on leaves.\r\n\r\nThe logic here worries me too, though. Perhaps we should explicitly have VariableViewImpl::rebase(grad_fn),  which is only called for in-place modifications, instead of trying to determine if it's a modification or new grad_fn internally.", "created_at": "2017-11-02T16:17:36Z", "updated_at": "2018-11-23T15:35:55Z", "html_url": "https://github.com/pytorch/pytorch/pull/3384#discussion_r148583625", "pull_request_url": "https://api.github.com/repos/pytorch/pytorch/pulls/3384", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/148583625"}, "html": {"href": "https://github.com/pytorch/pytorch/pull/3384#discussion_r148583625"}, "pull_request": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/3384"}}, "body_html": "<p>If a view doesn't have a grad_fn, then it's a leaf and we don't currently support in-place operations on leaves.</p>\n<p>The logic here worries me too, though. Perhaps we should explicitly have VariableViewImpl::rebase(grad_fn),  which is only called for in-place modifications, instead of trying to determine if it's a modification or new grad_fn internally.</p>", "body_text": "If a view doesn't have a grad_fn, then it's a leaf and we don't currently support in-place operations on leaves.\nThe logic here worries me too, though. Perhaps we should explicitly have VariableViewImpl::rebase(grad_fn),  which is only called for in-place modifications, instead of trying to determine if it's a modification or new grad_fn internally.", "in_reply_to_id": 148559589}