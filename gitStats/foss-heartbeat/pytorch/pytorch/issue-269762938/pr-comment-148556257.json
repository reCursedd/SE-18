{"url": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/148556257", "pull_request_review_id": 73802884, "id": 148556257, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE0ODU1NjI1Nw==", "diff_hunk": "@@ -255,41 +250,21 @@ static void check_inplace(const Tensor& tensor) {\n   }\n }\n \n-static void set_base_fn(Variable& var, std::shared_ptr<Function> grad_fn) {\n-  // Called when var is a view of another Variable. Modifes the\n-  // var.base().grad_fn() instead of var's grad_fn.\n-  //\n-  // We make a few important assumptions about the grad_fn for the in-place op:\n-  //\n-  // 1. It takes in a single grad as input (the in-place op must only produce\n-  //    a single output).\n-  // 2. It may produce multiple grad_inputs (the in-place op may use multiple\n-  //    inputs), but the grad_input for \"self\" must come first.\n-  //\n-  grad_fn->num_inputs = 1;\n-\n-  auto& base = var.base();\n-  auto copySlices = std::make_shared<CopySlices>(base, TensorGeometry(var), std::move(grad_fn));\n-  base.output_nr() = 0;\n-  base.grad_fn() = std::move(copySlices);\n-}\n-\n-static void set_flags(Variable& var, VariableFlags flags, std::shared_ptr<Function> grad_fn, bool inplace=false) {\n-  var.requires_grad() = flags.requires_grad;\n-  var.is_volatile() = flags.is_volatile;\n+static void set_flags(Variable& var, VarFlags flags, std::shared_ptr<Function> grad_fn, bool inplace=false) {\n   if (grad_fn) {\n-    if (inplace && var.is_view()) {\n-      set_base_fn(var, std::move(grad_fn));\n-    } else {\n-      var.output_nr() = grad_fn->num_inputs++;\n-      var.grad_fn() = std::move(grad_fn);", "path": "tools/autograd/templates/VariableType.cpp", "position": null, "original_position": 63, "commit_id": "0faf2a8e86a5f3cc32aaf8640120aca134c10961", "original_commit_id": "95929e6150f8c00717151bf90f20b91cd0c193d3", "user": {"login": "apaszke", "id": 4583066, "node_id": "MDQ6VXNlcjQ1ODMwNjY=", "avatar_url": "https://avatars3.githubusercontent.com/u/4583066?v=4", "gravatar_id": "", "url": "https://api.github.com/users/apaszke", "html_url": "https://github.com/apaszke", "followers_url": "https://api.github.com/users/apaszke/followers", "following_url": "https://api.github.com/users/apaszke/following{/other_user}", "gists_url": "https://api.github.com/users/apaszke/gists{/gist_id}", "starred_url": "https://api.github.com/users/apaszke/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/apaszke/subscriptions", "organizations_url": "https://api.github.com/users/apaszke/orgs", "repos_url": "https://api.github.com/users/apaszke/repos", "events_url": "https://api.github.com/users/apaszke/events{/privacy}", "received_events_url": "https://api.github.com/users/apaszke/received_events", "type": "User", "site_admin": false}, "body": "Damn, maybe we should just forbid assignments to `grad_fn()`?", "created_at": "2017-11-02T14:53:24Z", "updated_at": "2018-11-23T15:35:54Z", "html_url": "https://github.com/pytorch/pytorch/pull/3384#discussion_r148556257", "pull_request_url": "https://api.github.com/repos/pytorch/pytorch/pulls/3384", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/148556257"}, "html": {"href": "https://github.com/pytorch/pytorch/pull/3384#discussion_r148556257"}, "pull_request": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/3384"}}, "body_html": "<p>Damn, maybe we should just forbid assignments to <code>grad_fn()</code>?</p>", "body_text": "Damn, maybe we should just forbid assignments to grad_fn()?"}