{"url": "https://api.github.com/repos/pytorch/pytorch/issues/comments/378351642", "html_url": "https://github.com/pytorch/pytorch/pull/6234#issuecomment-378351642", "issue_url": "https://api.github.com/repos/pytorch/pytorch/issues/6234", "id": 378351642, "node_id": "MDEyOklzc3VlQ29tbWVudDM3ODM1MTY0Mg==", "user": {"login": "soumith", "id": 1310570, "node_id": "MDQ6VXNlcjEzMTA1NzA=", "avatar_url": "https://avatars0.githubusercontent.com/u/1310570?v=4", "gravatar_id": "", "url": "https://api.github.com/users/soumith", "html_url": "https://github.com/soumith", "followers_url": "https://api.github.com/users/soumith/followers", "following_url": "https://api.github.com/users/soumith/following{/other_user}", "gists_url": "https://api.github.com/users/soumith/gists{/gist_id}", "starred_url": "https://api.github.com/users/soumith/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/soumith/subscriptions", "organizations_url": "https://api.github.com/users/soumith/orgs", "repos_url": "https://api.github.com/users/soumith/repos", "events_url": "https://api.github.com/users/soumith/events{/privacy}", "received_events_url": "https://api.github.com/users/soumith/received_events", "type": "User", "site_admin": false}, "created_at": "2018-04-03T18:32:56Z", "updated_at": "2018-04-03T18:33:09Z", "author_association": "MEMBER", "body_html": "<p>let me explain why I think this isn't a great idea (we definitely thought about this when we were writing torch.save / torch.load).</p>\n<ul>\n<li>Model files where part of the definition is an inline python string wont work</li>\n<li>Model definitions with unpicklable objects simply wont work (such as lambdas)</li>\n<li>Saved definitions across pytorch versions might or might not work</li>\n</ul>\n<p>The hazard of introducing this (versus letting users develop their reliable checkpointing scheme on top of model.state_dict / torch.save) is that this has a false pretense of \"working\" or \"official\" but breaks in a bunch of cases.</p>", "body_text": "let me explain why I think this isn't a great idea (we definitely thought about this when we were writing torch.save / torch.load).\n\nModel files where part of the definition is an inline python string wont work\nModel definitions with unpicklable objects simply wont work (such as lambdas)\nSaved definitions across pytorch versions might or might not work\n\nThe hazard of introducing this (versus letting users develop their reliable checkpointing scheme on top of model.state_dict / torch.save) is that this has a false pretense of \"working\" or \"official\" but breaks in a bunch of cases.", "body": "let me explain why I think this isn't a great idea (we definitely thought about this when we were writing torch.save / torch.load).\r\n\r\n- Model files where part of the definition is an inline python string wont work\r\n- Model definitions with unpicklable objects simply wont work (such as lambdas)\r\n- Saved definitions across pytorch versions might or might not work\r\n\r\nThe hazard of introducing this (versus letting users develop their reliable checkpointing scheme on top of model.state_dict / torch.save) is that this has a false pretense of \"working\" or \"official\" but breaks in a bunch of cases."}