{"url": "https://api.github.com/repos/pytorch/pytorch/issues/comments/342167368", "html_url": "https://github.com/pytorch/pytorch/issues/3495#issuecomment-342167368", "issue_url": "https://api.github.com/repos/pytorch/pytorch/issues/3495", "id": 342167368, "node_id": "MDEyOklzc3VlQ29tbWVudDM0MjE2NzM2OA==", "user": {"login": "SsnL", "id": 5674597, "node_id": "MDQ6VXNlcjU2NzQ1OTc=", "avatar_url": "https://avatars2.githubusercontent.com/u/5674597?v=4", "gravatar_id": "", "url": "https://api.github.com/users/SsnL", "html_url": "https://github.com/SsnL", "followers_url": "https://api.github.com/users/SsnL/followers", "following_url": "https://api.github.com/users/SsnL/following{/other_user}", "gists_url": "https://api.github.com/users/SsnL/gists{/gist_id}", "starred_url": "https://api.github.com/users/SsnL/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/SsnL/subscriptions", "organizations_url": "https://api.github.com/users/SsnL/orgs", "repos_url": "https://api.github.com/users/SsnL/repos", "events_url": "https://api.github.com/users/SsnL/events{/privacy}", "received_events_url": "https://api.github.com/users/SsnL/received_events", "type": "User", "site_admin": false}, "created_at": "2017-11-06T14:37:56Z", "updated_at": "2017-11-06T14:37:56Z", "author_association": "CONTRIBUTOR", "body_html": "<p>Your code should just work. The problem lies elsewhere. However, why don't you use <code>(-loss).backward()</code>? Is it because there is an adversary needing the <code>loss.backward()</code> gradient?</p>\n<p>Please post such questions to the forum discuss.pytorch.org, rather than as a github issue.</p>", "body_text": "Your code should just work. The problem lies elsewhere. However, why don't you use (-loss).backward()? Is it because there is an adversary needing the loss.backward() gradient?\nPlease post such questions to the forum discuss.pytorch.org, rather than as a github issue.", "body": "Your code should just work. The problem lies elsewhere. However, why don't you use `(-loss).backward()`? Is it because there is an adversary needing the `loss.backward()` gradient?\r\n\r\nPlease post such questions to the forum discuss.pytorch.org, rather than as a github issue."}