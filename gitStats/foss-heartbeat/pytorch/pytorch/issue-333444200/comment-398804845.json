{"url": "https://api.github.com/repos/pytorch/pytorch/issues/comments/398804845", "html_url": "https://github.com/pytorch/pytorch/issues/8626#issuecomment-398804845", "issue_url": "https://api.github.com/repos/pytorch/pytorch/issues/8626", "id": 398804845, "node_id": "MDEyOklzc3VlQ29tbWVudDM5ODgwNDg0NQ==", "user": {"login": "SsnL", "id": 5674597, "node_id": "MDQ6VXNlcjU2NzQ1OTc=", "avatar_url": "https://avatars2.githubusercontent.com/u/5674597?v=4", "gravatar_id": "", "url": "https://api.github.com/users/SsnL", "html_url": "https://github.com/SsnL", "followers_url": "https://api.github.com/users/SsnL/followers", "following_url": "https://api.github.com/users/SsnL/following{/other_user}", "gists_url": "https://api.github.com/users/SsnL/gists{/gist_id}", "starred_url": "https://api.github.com/users/SsnL/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/SsnL/subscriptions", "organizations_url": "https://api.github.com/users/SsnL/orgs", "repos_url": "https://api.github.com/users/SsnL/repos", "events_url": "https://api.github.com/users/SsnL/events{/privacy}", "received_events_url": "https://api.github.com/users/SsnL/received_events", "type": "User", "site_admin": false}, "created_at": "2018-06-20T16:04:04Z", "updated_at": "2018-06-20T16:04:04Z", "author_association": "CONTRIBUTOR", "body_html": "<p>two more instances</p>\n<div class=\"highlight highlight-source-python\"><pre>x <span class=\"pl-k\">=</span> torch.ones([<span class=\"pl-c1\">3</span>, <span class=\"pl-c1\">1</span>], <span class=\"pl-v\">requires_grad</span><span class=\"pl-k\">=</span><span class=\"pl-c1\">True</span>)\nxx <span class=\"pl-k\">=</span> x.expand(<span class=\"pl-c1\">3</span>, <span class=\"pl-c1\">3</span>)\ny <span class=\"pl-k\">=</span> xx[:]\n<span class=\"pl-c\"><span class=\"pl-c\">#</span>xx.transpose_(0, 1)</span>\nz <span class=\"pl-k\">=</span> torch.arange(<span class=\"pl-c1\">9</span>).reshape(<span class=\"pl-c1\">3</span>,<span class=\"pl-c1\">3</span>).float()\ntorch.autograd.grad(y, x, z)\n\n\nx <span class=\"pl-k\">=</span> torch.ones(<span class=\"pl-c1\">4</span>, <span class=\"pl-v\">requires_grad</span><span class=\"pl-k\">=</span><span class=\"pl-c1\">True</span>).clone()\nxx <span class=\"pl-k\">=</span> x[<span class=\"pl-c1\">2</span>:]\ny <span class=\"pl-k\">=</span> xx[<span class=\"pl-c1\">1</span>]\nxx.retain_grad()\n<span class=\"pl-c\"><span class=\"pl-c\">#</span>x[0] += 0</span>\ny.backward()\nxx.grad\n</pre></div>", "body_text": "two more instances\nx = torch.ones([3, 1], requires_grad=True)\nxx = x.expand(3, 3)\ny = xx[:]\n#xx.transpose_(0, 1)\nz = torch.arange(9).reshape(3,3).float()\ntorch.autograd.grad(y, x, z)\n\n\nx = torch.ones(4, requires_grad=True).clone()\nxx = x[2:]\ny = xx[1]\nxx.retain_grad()\n#x[0] += 0\ny.backward()\nxx.grad", "body": "two more instances\r\n```py\r\nx = torch.ones([3, 1], requires_grad=True)\r\nxx = x.expand(3, 3)\r\ny = xx[:]\r\n#xx.transpose_(0, 1)\r\nz = torch.arange(9).reshape(3,3).float()\r\ntorch.autograd.grad(y, x, z)\r\n\r\n\r\nx = torch.ones(4, requires_grad=True).clone()\r\nxx = x[2:]\r\ny = xx[1]\r\nxx.retain_grad()\r\n#x[0] += 0\r\ny.backward()\r\nxx.grad\r\n\r\n```"}