{"url": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/172988856", "pull_request_review_id": 102102419, "id": 172988856, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE3Mjk4ODg1Ng==", "diff_hunk": "@@ -0,0 +1,162 @@\n+#!/usr/bin/env python\n+\n+import argparse\n+import os\n+import subprocess\n+import sys\n+\n+TESTS = [\n+    'autograd',\n+    'cpp_extensions',\n+    'cuda',\n+    'dataloader',\n+    'distributed',\n+    'distributions',\n+    'indexing',\n+    'jit',\n+    'legacy_nn',\n+    'multiprocessing',\n+    'nccl',\n+    'nn',\n+    'optim',\n+    'sparse',\n+    'torch',\n+    'utils',\n+]\n+\n+WINDOWS_BLACKLIST = [\n+    'cpp_extensions',\n+    'distributed',\n+]\n+\n+\n+def shell(command, cwd):\n+    popen = subprocess.Popen(\n+        command,\n+        stdout=subprocess.PIPE,\n+        universal_newlines=True,\n+        cwd=cwd,\n+        shell=True)\n+    for stdout_line in iter(popen.stdout.readline, ''):\n+        print(stdout_line.strip())\n+    popen.stdout.close()\n+    return_code = popen.wait()\n+    return return_code == 0\n+\n+\n+def get_shell_output(command):\n+    return subprocess.check_output(command, shell=True).decode().strip()\n+\n+\n+def run_test(python, test_module, cwd, verbose):\n+    verbose = '--verbose' if verbose else ''\n+    shell('{} {} {}'.format(python, test_module, verbose), cwd)\n+\n+\n+def test_cpp_extensions(python, test_module, test_directory, verbose):\n+    shell('{} setup.py install --root ./install'.format(python),\n+          os.path.join(test_directory, 'cpp_extensions'))\n+\n+    python_path = os.environ.get('PYTHONPATH', '')\n+    install_directory = get_shell_output(\n+        \"find cpp_extensions/install -name '*-packages'\")\n+    install_directory = os.path.join(test_directory, install_directory)\n+    os.environ['PYTHONPATH'] = '{}:{}'.format(install_directory, python_path)\n+    run_test(python, test_module, test_directory, verbose)\n+    os.environ['PYTHONPATH'] = python_path\n+\n+\n+def test_distributed(python, test_module, cwd, verbose):\n+    os.environ['PYCMD'] = python\n+    shell('./run_distributed_tests.sh', cwd)\n+\n+\n+def test_multiprocessing(python, test_module, cwd, verbose):\n+    run_test(python, test_module, cwd, verbose)\n+    if sys.platform != 'win32':\n+        os.environ['MULTIPROCESSING_METHOD'] = 'spawn'", "path": "test/run_test.py", "position": null, "original_position": 77, "commit_id": "5464ec905a8bc250d8aa9bd61f2b5ea61e870c73", "original_commit_id": "1a4b57aeba2750b61a7f0fb78371ae3eac970720", "user": {"login": "fmassa", "id": 9110200, "node_id": "MDQ6VXNlcjkxMTAyMDA=", "avatar_url": "https://avatars2.githubusercontent.com/u/9110200?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fmassa", "html_url": "https://github.com/fmassa", "followers_url": "https://api.github.com/users/fmassa/followers", "following_url": "https://api.github.com/users/fmassa/following{/other_user}", "gists_url": "https://api.github.com/users/fmassa/gists{/gist_id}", "starred_url": "https://api.github.com/users/fmassa/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fmassa/subscriptions", "organizations_url": "https://api.github.com/users/fmassa/orgs", "repos_url": "https://api.github.com/users/fmassa/repos", "events_url": "https://api.github.com/users/fmassa/events{/privacy}", "received_events_url": "https://api.github.com/users/fmassa/received_events", "type": "User", "site_admin": false}, "body": "I believe we can remove those 2 extra cases, as we don't use anymore  the env var `MULTIPROCESSING_METHOD` anywhere in our code.", "created_at": "2018-03-07T21:22:52Z", "updated_at": "2018-11-23T15:40:28Z", "html_url": "https://github.com/pytorch/pytorch/pull/5615#discussion_r172988856", "pull_request_url": "https://api.github.com/repos/pytorch/pytorch/pulls/5615", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/172988856"}, "html": {"href": "https://github.com/pytorch/pytorch/pull/5615#discussion_r172988856"}, "pull_request": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/5615"}}, "body_html": "<p>I believe we can remove those 2 extra cases, as we don't use anymore  the env var <code>MULTIPROCESSING_METHOD</code> anywhere in our code.</p>", "body_text": "I believe we can remove those 2 extra cases, as we don't use anymore  the env var MULTIPROCESSING_METHOD anywhere in our code."}