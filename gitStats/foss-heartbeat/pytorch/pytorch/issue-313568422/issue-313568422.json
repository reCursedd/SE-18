{"url": "https://api.github.com/repos/pytorch/pytorch/issues/6538", "repository_url": "https://api.github.com/repos/pytorch/pytorch", "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/6538/labels{/name}", "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/6538/comments", "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/6538/events", "html_url": "https://github.com/pytorch/pytorch/pull/6538", "id": 313568422, "node_id": "MDExOlB1bGxSZXF1ZXN0MTgxMDg0MzQz", "number": 6538, "title": "[jit][script] Allow tuples to be re-assigned", "user": {"login": "zdevito", "id": 370202, "node_id": "MDQ6VXNlcjM3MDIwMg==", "avatar_url": "https://avatars0.githubusercontent.com/u/370202?v=4", "gravatar_id": "", "url": "https://api.github.com/users/zdevito", "html_url": "https://github.com/zdevito", "followers_url": "https://api.github.com/users/zdevito/followers", "following_url": "https://api.github.com/users/zdevito/following{/other_user}", "gists_url": "https://api.github.com/users/zdevito/gists{/gist_id}", "starred_url": "https://api.github.com/users/zdevito/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/zdevito/subscriptions", "organizations_url": "https://api.github.com/users/zdevito/orgs", "repos_url": "https://api.github.com/users/zdevito/repos", "events_url": "https://api.github.com/users/zdevito/events{/privacy}", "received_events_url": "https://api.github.com/users/zdevito/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2018-04-12T03:56:44Z", "updated_at": "2018-11-23T15:42:25Z", "closed_at": "2018-04-14T00:34:51Z", "author_association": "CONTRIBUTOR", "pull_request": {"url": "https://api.github.com/repos/pytorch/pytorch/pulls/6538", "html_url": "https://github.com/pytorch/pytorch/pull/6538", "diff_url": "https://github.com/pytorch/pytorch/pull/6538.diff", "patch_url": "https://github.com/pytorch/pytorch/pull/6538.patch"}, "body_html": "<p>(Just read the last commit, this is layered on top of my other PR).</p>\n<p>This turned out to be necessary for FairSeq to work correctly.</p>\n<p>This commit improves our support of tuples by making them more first-class.<br>\nIn particular, it allows tuples to be re-assigned across loops and ifs.<br>\nIt does this by making them first-class values in the Graph IR, and then<br>\nremoving the tuples in a LowerTuples pass.</p>\n<p>An alternative approach would have added more support for desugaring tuples<br>\nin the Environment object as they were emitted. Instead,<br>\nthe current approach was chosen anticipating a future when tuples are<br>\nfully supported (including the interpreter). In that future, the current<br>\ncode can be completly reused with the LowerTuples pass just becoming<br>\na optimization that removes unneeded tuple allocations.</p>", "body_text": "(Just read the last commit, this is layered on top of my other PR).\nThis turned out to be necessary for FairSeq to work correctly.\nThis commit improves our support of tuples by making them more first-class.\nIn particular, it allows tuples to be re-assigned across loops and ifs.\nIt does this by making them first-class values in the Graph IR, and then\nremoving the tuples in a LowerTuples pass.\nAn alternative approach would have added more support for desugaring tuples\nin the Environment object as they were emitted. Instead,\nthe current approach was chosen anticipating a future when tuples are\nfully supported (including the interpreter). In that future, the current\ncode can be completly reused with the LowerTuples pass just becoming\na optimization that removes unneeded tuple allocations.", "body": "(Just read the last commit, this is layered on top of my other PR).\r\n\r\nThis turned out to be necessary for FairSeq to work correctly.\r\n\r\nThis commit improves our support of tuples by making them more first-class.\r\nIn particular, it allows tuples to be re-assigned across loops and ifs.\r\nIt does this by making them first-class values in the Graph IR, and then\r\nremoving the tuples in a LowerTuples pass.\r\n\r\nAn alternative approach would have added more support for desugaring tuples\r\nin the Environment object as they were emitted. Instead,\r\nthe current approach was chosen anticipating a future when tuples are\r\nfully supported (including the interpreter). In that future, the current\r\ncode can be completly reused with the LowerTuples pass just becoming\r\na optimization that removes unneeded tuple allocations."}