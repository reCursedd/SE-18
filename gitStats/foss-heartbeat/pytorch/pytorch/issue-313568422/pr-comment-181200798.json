{"url": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/181200798", "pull_request_review_id": 111766425, "id": 181200798, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MTIwMDc5OA==", "diff_hunk": "@@ -2383,6 +2393,63 @@ def forward(self, x, seq_lens):\n         f = io.BytesIO()\n         torch.onnx._export(m, (x, seq_lens), f, verbose=False)\n \n+    def test_script_outputs(self):\n+        with self.assertRaisesRegex(RuntimeError, \"value cannot be used as a tuple\"):\n+            @torch.jit.script\n+            def foo(a):\n+                c, d = a + a\n+                return c + d\n+\n+        @torch.jit.script\n+        def return3():\n+            return 1, 2, 3\n+\n+        with self.assertRaisesRegex(RuntimeError, \"too many values to unpack\"):\n+            @torch.jit.script\n+            def bind2():\n+                a, b = return3()\n+                print(a)\n+                print(b)\n+\n+    def test_script_chunk(self):\n+        @torch.jit.script\n+        def foo(a):\n+            b, c = torch.chunk(a, dim=0, chunks=2)\n+            return b\n+        v = torch.rand(10, 3)\n+        self.assertEqual(torch.chunk(v, dim=0, chunks=2)[0], foo(v))\n+\n+        with self.assertRaisesRegex(RuntimeError, \"too many values to unpack\"):\n+            @torch.jit.script\n+            def foo(a):\n+                b, c = torch.chunk(a, dim=0, chunks=3)\n+                return b\n+\n+    def test_tuples(self):\n+        @torch.jit.script\n+        def foo(i):\n+            a = torch.chunk(i, dim=0, chunks=2)\n+            c = a\n+            # some nonsense with if-statements and loops to check\n+            # that tuple lowering doesn't fail\n+            if True:\n+                c = torch.chunk(i, dim=0, chunks=2)\n+            t0, t1 = c\n+            while False:\n+                t0, t1 = c\n+                c = torch.chunk(i, dim=0, chunks=2)\n+            return t0\n+\n+        v = torch.rand(10, 3)\n+        self.assertEqual(torch.chunk(v, dim=0, chunks=2)[0], foo(v))\n+\n+        with self.assertRaisesRegex(RuntimeError, \"variable 'a' previously has type\"):", "path": "test/test_jit.py", "position": 22, "original_position": 98, "commit_id": "14b65a7e9c0edb38c6f23b9367ef72bab071784b", "original_commit_id": "cc1cb7ac187d1396450d6377c90a3729ffa11042", "user": {"login": "jamesr66a", "id": 4685384, "node_id": "MDQ6VXNlcjQ2ODUzODQ=", "avatar_url": "https://avatars2.githubusercontent.com/u/4685384?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jamesr66a", "html_url": "https://github.com/jamesr66a", "followers_url": "https://api.github.com/users/jamesr66a/followers", "following_url": "https://api.github.com/users/jamesr66a/following{/other_user}", "gists_url": "https://api.github.com/users/jamesr66a/gists{/gist_id}", "starred_url": "https://api.github.com/users/jamesr66a/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jamesr66a/subscriptions", "organizations_url": "https://api.github.com/users/jamesr66a/orgs", "repos_url": "https://api.github.com/users/jamesr66a/repos", "events_url": "https://api.github.com/users/jamesr66a/events{/privacy}", "received_events_url": "https://api.github.com/users/jamesr66a/received_events", "type": "User", "site_admin": false}, "body": "We're diverging from Python semantics here, I think. Is this alright?", "created_at": "2018-04-12T19:47:30Z", "updated_at": "2018-11-23T15:42:20Z", "html_url": "https://github.com/pytorch/pytorch/pull/6538#discussion_r181200798", "pull_request_url": "https://api.github.com/repos/pytorch/pytorch/pulls/6538", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/181200798"}, "html": {"href": "https://github.com/pytorch/pytorch/pull/6538#discussion_r181200798"}, "pull_request": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/6538"}}, "body_html": "<p>We're diverging from Python semantics here, I think. Is this alright?</p>", "body_text": "We're diverging from Python semantics here, I think. Is this alright?"}