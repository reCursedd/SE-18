{"url": "https://api.github.com/repos/pytorch/pytorch/issues/comments/390033787", "html_url": "https://github.com/pytorch/pytorch/issues/7615#issuecomment-390033787", "issue_url": "https://api.github.com/repos/pytorch/pytorch/issues/7615", "id": 390033787, "node_id": "MDEyOklzc3VlQ29tbWVudDM5MDAzMzc4Nw==", "user": {"login": "avmgithub", "id": 9083746, "node_id": "MDQ6VXNlcjkwODM3NDY=", "avatar_url": "https://avatars1.githubusercontent.com/u/9083746?v=4", "gravatar_id": "", "url": "https://api.github.com/users/avmgithub", "html_url": "https://github.com/avmgithub", "followers_url": "https://api.github.com/users/avmgithub/followers", "following_url": "https://api.github.com/users/avmgithub/following{/other_user}", "gists_url": "https://api.github.com/users/avmgithub/gists{/gist_id}", "starred_url": "https://api.github.com/users/avmgithub/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/avmgithub/subscriptions", "organizations_url": "https://api.github.com/users/avmgithub/orgs", "repos_url": "https://api.github.com/users/avmgithub/repos", "events_url": "https://api.github.com/users/avmgithub/events{/privacy}", "received_events_url": "https://api.github.com/users/avmgithub/received_events", "type": "User", "site_admin": false}, "created_at": "2018-05-17T22:28:07Z", "updated_at": "2018-05-17T22:28:07Z", "author_association": "CONTRIBUTOR", "body_html": "<p><a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=1716488\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/cpuhrsch\">@cpuhrsch</a> - here is what I did.<br>\nI used thread_local as suggested like  -  static thread_local tbb::static_partitioner ap;  in <a href=\"https://github.com/pytorch/pytorch/blob/master/aten/src/ATen/native/cpu/SoftMaxKernel.cpp#L25\">https://github.com/pytorch/pytorch/blob/master/aten/src/ATen/native/cpu/SoftMaxKernel.cpp#L25</a> ,  rebuilt and re-ran the test with OMP_NUM_THREADS=4 ;   it still fails with pure virtual method called error.<br>\nRemoving the static thread_local tbb::static_partitioner ap;   line also does not help.  It still fails.   The only thing that I've seen helps is if I make OMP_NUM_THREADS=2 .   Even if I use OMP_NUM_THREADS=3, this one passes 50% of the time.<br>\nI'm not sure how tbb all works, but I suspect the base class is destroyed before all worker threads are finished and that's when you get the \"pure virtual method called\" error.</p>", "body_text": "@cpuhrsch - here is what I did.\nI used thread_local as suggested like  -  static thread_local tbb::static_partitioner ap;  in https://github.com/pytorch/pytorch/blob/master/aten/src/ATen/native/cpu/SoftMaxKernel.cpp#L25 ,  rebuilt and re-ran the test with OMP_NUM_THREADS=4 ;   it still fails with pure virtual method called error.\nRemoving the static thread_local tbb::static_partitioner ap;   line also does not help.  It still fails.   The only thing that I've seen helps is if I make OMP_NUM_THREADS=2 .   Even if I use OMP_NUM_THREADS=3, this one passes 50% of the time.\nI'm not sure how tbb all works, but I suspect the base class is destroyed before all worker threads are finished and that's when you get the \"pure virtual method called\" error.", "body": "@cpuhrsch - here is what I did.\r\nI used thread_local as suggested like  -  static thread_local tbb::static_partitioner ap;  in https://github.com/pytorch/pytorch/blob/master/aten/src/ATen/native/cpu/SoftMaxKernel.cpp#L25 ,  rebuilt and re-ran the test with OMP_NUM_THREADS=4 ;   it still fails with pure virtual method called error.\r\nRemoving the static thread_local tbb::static_partitioner ap;   line also does not help.  It still fails.   The only thing that I've seen helps is if I make OMP_NUM_THREADS=2 .   Even if I use OMP_NUM_THREADS=3, this one passes 50% of the time.    \r\nI'm not sure how tbb all works, but I suspect the base class is destroyed before all worker threads are finished and that's when you get the \"pure virtual method called\" error."}