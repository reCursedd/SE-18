{"url": "https://api.github.com/repos/pytorch/pytorch/issues/comments/388398788", "html_url": "https://github.com/pytorch/pytorch/issues/1511#issuecomment-388398788", "issue_url": "https://api.github.com/repos/pytorch/pytorch/issues/1511", "id": 388398788, "node_id": "MDEyOklzc3VlQ29tbWVudDM4ODM5ODc4OA==", "user": {"login": "zou3519", "id": 5652049, "node_id": "MDQ6VXNlcjU2NTIwNDk=", "avatar_url": "https://avatars3.githubusercontent.com/u/5652049?v=4", "gravatar_id": "", "url": "https://api.github.com/users/zou3519", "html_url": "https://github.com/zou3519", "followers_url": "https://api.github.com/users/zou3519/followers", "following_url": "https://api.github.com/users/zou3519/following{/other_user}", "gists_url": "https://api.github.com/users/zou3519/gists{/gist_id}", "starred_url": "https://api.github.com/users/zou3519/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/zou3519/subscriptions", "organizations_url": "https://api.github.com/users/zou3519/orgs", "repos_url": "https://api.github.com/users/zou3519/repos", "events_url": "https://api.github.com/users/zou3519/events{/privacy}", "received_events_url": "https://api.github.com/users/zou3519/received_events", "type": "User", "site_admin": false}, "created_at": "2018-05-11T15:31:01Z", "updated_at": "2018-05-11T15:31:01Z", "author_association": "CONTRIBUTOR", "body_html": "<p>Bringing this back, I think (sparse_dims, dense_dims) might be better names for (nDimI, nDimV).</p>\n<p>Right now, nDimI is usually <code>indices.size(0)</code> and nDimV is usually <code>values.dim() - 1</code> (\"usually\" because the case of a zero-filled sparse tensor is a little awkward because we don't support arbitrary zero dimensions). When one indexes into a sparse tensor (this is not supported at the moment), the first <code>nDimI</code> dims result in indexing into the first dimension of <code>values</code>, while the last <code>nDimV</code> dims result in indexing into more dimensions of the <code>values</code> tensor.</p>", "body_text": "Bringing this back, I think (sparse_dims, dense_dims) might be better names for (nDimI, nDimV).\nRight now, nDimI is usually indices.size(0) and nDimV is usually values.dim() - 1 (\"usually\" because the case of a zero-filled sparse tensor is a little awkward because we don't support arbitrary zero dimensions). When one indexes into a sparse tensor (this is not supported at the moment), the first nDimI dims result in indexing into the first dimension of values, while the last nDimV dims result in indexing into more dimensions of the values tensor.", "body": "Bringing this back, I think (sparse_dims, dense_dims) might be better names for (nDimI, nDimV). \r\n\r\nRight now, nDimI is usually `indices.size(0)` and nDimV is usually `values.dim() - 1` (\"usually\" because the case of a zero-filled sparse tensor is a little awkward because we don't support arbitrary zero dimensions). When one indexes into a sparse tensor (this is not supported at the moment), the first `nDimI` dims result in indexing into the first dimension of `values`, while the last `nDimV` dims result in indexing into more dimensions of the `values` tensor."}