{"url": "https://api.github.com/repos/pytorch/pytorch/issues/10364", "repository_url": "https://api.github.com/repos/pytorch/pytorch", "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/10364/labels{/name}", "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/10364/comments", "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/10364/events", "html_url": "https://github.com/pytorch/pytorch/issues/10364", "id": 348969304, "node_id": "MDU6SXNzdWUzNDg5NjkzMDQ=", "number": 10364, "title": "[feature request] callback or hook when dataset iteration restarts", "user": {"login": "samson-wang", "id": 5474454, "node_id": "MDQ6VXNlcjU0NzQ0NTQ=", "avatar_url": "https://avatars0.githubusercontent.com/u/5474454?v=4", "gravatar_id": "", "url": "https://api.github.com/users/samson-wang", "html_url": "https://github.com/samson-wang", "followers_url": "https://api.github.com/users/samson-wang/followers", "following_url": "https://api.github.com/users/samson-wang/following{/other_user}", "gists_url": "https://api.github.com/users/samson-wang/gists{/gist_id}", "starred_url": "https://api.github.com/users/samson-wang/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/samson-wang/subscriptions", "organizations_url": "https://api.github.com/users/samson-wang/orgs", "repos_url": "https://api.github.com/users/samson-wang/repos", "events_url": "https://api.github.com/users/samson-wang/events{/privacy}", "received_events_url": "https://api.github.com/users/samson-wang/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2018-08-09T04:00:07Z", "updated_at": "2018-08-11T01:50:03Z", "closed_at": "2018-08-11T01:50:03Z", "author_association": "NONE", "body_html": "<p>In some cases, I would like to do some stuff at the beginning of each epoch.</p>\n<p>One can implement a Sampler to explicitly call a customer dataset function before return a iterator.</p>\n<p>However, I think a default callback/hook entry in Dataset and Dataloader is much easier and handy.</p>\n<p>Here is what I use in practice.</p>\n<p>In dataset base class.</p>\n<pre><code>class Dataset(object):\n....\n    def restart(self):\n        '''callback entry'''\n        pass\n</code></pre>\n<p>In dataloader , callback when new an iterator</p>\n<pre><code>class _DataLoaderIter(object):\n    def __init__(self, loader):\n        self.dataset = loader.dataset\n        self.dataset.restart()\n        ...\n</code></pre>\n<p>Thanks.</p>", "body_text": "In some cases, I would like to do some stuff at the beginning of each epoch.\nOne can implement a Sampler to explicitly call a customer dataset function before return a iterator.\nHowever, I think a default callback/hook entry in Dataset and Dataloader is much easier and handy.\nHere is what I use in practice.\nIn dataset base class.\nclass Dataset(object):\n....\n    def restart(self):\n        '''callback entry'''\n        pass\n\nIn dataloader , callback when new an iterator\nclass _DataLoaderIter(object):\n    def __init__(self, loader):\n        self.dataset = loader.dataset\n        self.dataset.restart()\n        ...\n\nThanks.", "body": "In some cases, I would like to do some stuff at the beginning of each epoch.\r\n\r\nOne can implement a Sampler to explicitly call a customer dataset function before return a iterator.\r\n\r\nHowever, I think a default callback/hook entry in Dataset and Dataloader is much easier and handy.\r\n\r\nHere is what I use in practice.\r\n\r\nIn dataset base class.\r\n```\r\nclass Dataset(object):\r\n....\r\n    def restart(self):\r\n        '''callback entry'''\r\n        pass\r\n```\r\n\r\nIn dataloader , callback when new an iterator\r\n```\r\nclass _DataLoaderIter(object):\r\n    def __init__(self, loader):\r\n        self.dataset = loader.dataset\r\n        self.dataset.restart()\r\n        ...\r\n```\r\n\r\nThanks."}