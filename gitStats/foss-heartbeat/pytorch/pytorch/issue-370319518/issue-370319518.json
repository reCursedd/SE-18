{"url": "https://api.github.com/repos/pytorch/pytorch/issues/12671", "repository_url": "https://api.github.com/repos/pytorch/pytorch", "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/12671/labels{/name}", "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/12671/comments", "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/12671/events", "html_url": "https://github.com/pytorch/pytorch/pull/12671", "id": 370319518, "node_id": "MDExOlB1bGxSZXF1ZXN0MjIzMDI0MTE4", "number": 12671, "title": "Fix SpectralNorm with DataParallel", "user": {"login": "SsnL", "id": 5674597, "node_id": "MDQ6VXNlcjU2NzQ1OTc=", "avatar_url": "https://avatars2.githubusercontent.com/u/5674597?v=4", "gravatar_id": "", "url": "https://api.github.com/users/SsnL", "html_url": "https://github.com/SsnL", "followers_url": "https://api.github.com/users/SsnL/followers", "following_url": "https://api.github.com/users/SsnL/following{/other_user}", "gists_url": "https://api.github.com/users/SsnL/gists{/gist_id}", "starred_url": "https://api.github.com/users/SsnL/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/SsnL/subscriptions", "organizations_url": "https://api.github.com/users/SsnL/orgs", "repos_url": "https://api.github.com/users/SsnL/repos", "events_url": "https://api.github.com/users/SsnL/events{/privacy}", "received_events_url": "https://api.github.com/users/SsnL/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 9, "created_at": "2018-10-15T19:56:54Z", "updated_at": "2018-10-20T22:49:17Z", "closed_at": "2018-10-16T23:03:26Z", "author_association": "CONTRIBUTOR", "pull_request": {"url": "https://api.github.com/repos/pytorch/pytorch/pulls/12671", "html_url": "https://github.com/pytorch/pytorch/pull/12671", "diff_url": "https://github.com/pytorch/pytorch/pull/12671.diff", "patch_url": "https://github.com/pytorch/pytorch/pull/12671.patch"}, "body_html": "<p>There were two problems with SN + DP:</p>\n<ol>\n<li>In SN, the updated _u vector is saved back to module via a <code>setattr</code>. However, in DP, everything is run on a replica, so those updates are lost.</li>\n<li>In DP, the buffers are broadcast via a <code>broadcast_coalesced</code>, so on replicas they are all views. Therefore, the <code>detach_</code> call won't work.</li>\n</ol>\n<p>Fixes are:</p>\n<ol>\n<li>Update _u vector in-place so, by the shared storage between 1st replica and the parallelized module, the update is retained</li>\n<li>Do not call <code>detach_</code>.</li>\n<li>Added comments in SN about the subtlety.</li>\n<li>Added a note to the DP doc on this particular behavior of DP.</li>\n</ol>\n<p>cc <a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=16191443\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/crcrpar\">@crcrpar</a> <a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=1088344\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/taesung89\">@taesung89</a> <a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=20787943\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/t-vi\">@t-vi</a> <a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=5727224\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/YaoshengFu\">@YaoshengFu</a></p>\n<p><span class=\"issue-keyword tooltipped tooltipped-se\" aria-label=\"This pull request closes issue #11476.\">Fixes</span> <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load issue title\" data-id=\"358761630\" data-permission-text=\"Issue title is private\" data-url=\"https://github.com/pytorch/pytorch/issues/11476\" data-hovercard-type=\"issue\" data-hovercard-url=\"/pytorch/pytorch/issues/11476/hovercard\" href=\"https://github.com/pytorch/pytorch/issues/11476\">#11476</a></p>", "body_text": "There were two problems with SN + DP:\n\nIn SN, the updated _u vector is saved back to module via a setattr. However, in DP, everything is run on a replica, so those updates are lost.\nIn DP, the buffers are broadcast via a broadcast_coalesced, so on replicas they are all views. Therefore, the detach_ call won't work.\n\nFixes are:\n\nUpdate _u vector in-place so, by the shared storage between 1st replica and the parallelized module, the update is retained\nDo not call detach_.\nAdded comments in SN about the subtlety.\nAdded a note to the DP doc on this particular behavior of DP.\n\ncc @crcrpar @taesung89 @t-vi @YaoshengFu\nFixes #11476", "body": "There were two problems with SN + DP:\r\n\r\n1. In SN, the updated _u vector is saved back to module via a `setattr`. However, in DP, everything is run on a replica, so those updates are lost.\r\n2. In DP, the buffers are broadcast via a `broadcast_coalesced`, so on replicas they are all views. Therefore, the `detach_` call won't work.\r\n\r\nFixes are:\r\n1. Update _u vector in-place so, by the shared storage between 1st replica and the parallelized module, the update is retained\r\n2. Do not call `detach_`.\r\n3. Added comments in SN about the subtlety.\r\n4. Added a note to the DP doc on this particular behavior of DP.\r\n\r\ncc @crcrpar @taesung89 @t-vi @yaoshengfu\r\n\r\nFixes https://github.com/pytorch/pytorch/issues/11476"}