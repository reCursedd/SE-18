{"url": "https://api.github.com/repos/pytorch/pytorch/issues/comments/339022516", "html_url": "https://github.com/pytorch/pytorch/issues/3261#issuecomment-339022516", "issue_url": "https://api.github.com/repos/pytorch/pytorch/issues/3261", "id": 339022516, "node_id": "MDEyOklzc3VlQ29tbWVudDMzOTAyMjUxNg==", "user": {"login": "gchanan", "id": 3768583, "node_id": "MDQ6VXNlcjM3Njg1ODM=", "avatar_url": "https://avatars2.githubusercontent.com/u/3768583?v=4", "gravatar_id": "", "url": "https://api.github.com/users/gchanan", "html_url": "https://github.com/gchanan", "followers_url": "https://api.github.com/users/gchanan/followers", "following_url": "https://api.github.com/users/gchanan/following{/other_user}", "gists_url": "https://api.github.com/users/gchanan/gists{/gist_id}", "starred_url": "https://api.github.com/users/gchanan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/gchanan/subscriptions", "organizations_url": "https://api.github.com/users/gchanan/orgs", "repos_url": "https://api.github.com/users/gchanan/repos", "events_url": "https://api.github.com/users/gchanan/events{/privacy}", "received_events_url": "https://api.github.com/users/gchanan/received_events", "type": "User", "site_admin": false}, "created_at": "2017-10-24T15:06:16Z", "updated_at": "2017-10-24T15:06:16Z", "author_association": "CONTRIBUTOR", "body_html": "<p>it's expected -- they are really two different functions that share a name;  for example, <code>keepdim</code> doesn't make sense when dim is None, and in the tensor API they actually return different types (python number vs tensor).  We are doing some work to unify the return types now; I guess if we uniformly supported multiple dimensions of reduction across all reduction functions and renamed <code>keepdim</code> to <code>keepdims</code> we could make it one function for which all combination of arguments make sense (where <code>dim=None</code> means all dimensions).  But I haven't seen anyone explicitly propose that yet (I could have missed it).</p>", "body_text": "it's expected -- they are really two different functions that share a name;  for example, keepdim doesn't make sense when dim is None, and in the tensor API they actually return different types (python number vs tensor).  We are doing some work to unify the return types now; I guess if we uniformly supported multiple dimensions of reduction across all reduction functions and renamed keepdim to keepdims we could make it one function for which all combination of arguments make sense (where dim=None means all dimensions).  But I haven't seen anyone explicitly propose that yet (I could have missed it).", "body": "it's expected -- they are really two different functions that share a name;  for example, `keepdim` doesn't make sense when dim is None, and in the tensor API they actually return different types (python number vs tensor).  We are doing some work to unify the return types now; I guess if we uniformly supported multiple dimensions of reduction across all reduction functions and renamed `keepdim` to `keepdims` we could make it one function for which all combination of arguments make sense (where `dim=None` means all dimensions).  But I haven't seen anyone explicitly propose that yet (I could have missed it)."}