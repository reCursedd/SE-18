{"url": "https://api.github.com/repos/pytorch/pytorch/issues/comments/383853592", "html_url": "https://github.com/pytorch/pytorch/issues/6864#issuecomment-383853592", "issue_url": "https://api.github.com/repos/pytorch/pytorch/issues/6864", "id": 383853592, "node_id": "MDEyOklzc3VlQ29tbWVudDM4Mzg1MzU5Mg==", "user": {"login": "apaszke", "id": 4583066, "node_id": "MDQ6VXNlcjQ1ODMwNjY=", "avatar_url": "https://avatars3.githubusercontent.com/u/4583066?v=4", "gravatar_id": "", "url": "https://api.github.com/users/apaszke", "html_url": "https://github.com/apaszke", "followers_url": "https://api.github.com/users/apaszke/followers", "following_url": "https://api.github.com/users/apaszke/following{/other_user}", "gists_url": "https://api.github.com/users/apaszke/gists{/gist_id}", "starred_url": "https://api.github.com/users/apaszke/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/apaszke/subscriptions", "organizations_url": "https://api.github.com/users/apaszke/orgs", "repos_url": "https://api.github.com/users/apaszke/repos", "events_url": "https://api.github.com/users/apaszke/events{/privacy}", "received_events_url": "https://api.github.com/users/apaszke/received_events", "type": "User", "site_admin": false}, "created_at": "2018-04-24T08:46:18Z", "updated_at": "2018-04-24T08:46:18Z", "author_association": "MEMBER", "body_html": "<p>I really don't think that's worth it. It would increase the cost of softmax kernels, while the utility is fairly limited. Once you can get one <code>inf</code> in your output, it seems likely that you can end up with more of them anyway, and this change won't save you from <code>nan</code>s. Additionally, the more popular <code>log_softmax</code> would actually have to return <code>-inf</code> for all finite elements in the input, which would likely lead to <code>nan</code>s a few ops later. In general I would avoid infinite numbers, because they will get you in all sorts of boundary conditions very easily. Hope this clarifies things.</p>", "body_text": "I really don't think that's worth it. It would increase the cost of softmax kernels, while the utility is fairly limited. Once you can get one inf in your output, it seems likely that you can end up with more of them anyway, and this change won't save you from nans. Additionally, the more popular log_softmax would actually have to return -inf for all finite elements in the input, which would likely lead to nans a few ops later. In general I would avoid infinite numbers, because they will get you in all sorts of boundary conditions very easily. Hope this clarifies things.", "body": "I really don't think that's worth it. It would increase the cost of softmax kernels, while the utility is fairly limited. Once you can get one `inf` in your output, it seems likely that you can end up with more of them anyway, and this change won't save you from `nan`s. Additionally, the more popular `log_softmax` would actually have to return `-inf` for all finite elements in the input, which would likely lead to `nan`s a few ops later. In general I would avoid infinite numbers, because they will get you in all sorts of boundary conditions very easily. Hope this clarifies things."}