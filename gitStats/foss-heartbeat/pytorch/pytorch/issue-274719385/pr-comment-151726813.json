{"url": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/151726813", "pull_request_review_id": 77485537, "id": 151726813, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE1MTcyNjgxMw==", "diff_hunk": "@@ -3935,52 +3921,6 @@\n         - THTensor* self\n ]]\n \n-[[\n-  name: select\n-  cpu_half: True\n-  variants: [method,function]\n-  return: argument 0\n-  arguments:\n-    - arg: THTensor* result\n-      output: True\n-    - THTensor* self\n-    - arg: int64_t dim\n-      wrap_dim: self\n-    - int64_t sliceIndex\n-  aten_custom_call: |\n-    int64_t ndim = self.dim();\n-    AT_ASSERT(ndim > 0, \"select() cannot be applied to a 0-dim tensor.\");\n-    if(ndim == 1) {\n-      ${THTensor}_narrow(${state,}result_->tensor, self_->tensor, dim, sliceIndex,1);\n-      result_->setScalar(true);\n-    } else {\n-      ${THTensor}_select(${state,}result_->tensor, self_->tensor, dim, sliceIndex);\n-    }\n-]]\n-\n-[[\n-  name: _unnarrow\n-  variants: [method,function]\n-  return: argument 0\n-  arguments:\n-    - arg: THTensor* result\n-      output: True\n-    - THTensor* self\n-    - arg: int64_t dimension\n-      wrap_dim: self\n-    - int64_t offset\n-    - int64_t dimSize\n-  aten_custom_call: |\n-    int64_t ndim = self.dim();", "path": "aten/src/ATen/Declarations.cwrap", "position": 61, "original_position": 61, "commit_id": "b97a8df8b9d64f38df4d7ef1165282557606bcda", "original_commit_id": "23c219f2b34652456352354c14af89fea24ac4d8", "user": {"login": "colesbury", "id": 655866, "node_id": "MDQ6VXNlcjY1NTg2Ng==", "avatar_url": "https://avatars1.githubusercontent.com/u/655866?v=4", "gravatar_id": "", "url": "https://api.github.com/users/colesbury", "html_url": "https://github.com/colesbury", "followers_url": "https://api.github.com/users/colesbury/followers", "following_url": "https://api.github.com/users/colesbury/following{/other_user}", "gists_url": "https://api.github.com/users/colesbury/gists{/gist_id}", "starred_url": "https://api.github.com/users/colesbury/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/colesbury/subscriptions", "organizations_url": "https://api.github.com/users/colesbury/orgs", "repos_url": "https://api.github.com/users/colesbury/repos", "events_url": "https://api.github.com/users/colesbury/events{/privacy}", "received_events_url": "https://api.github.com/users/colesbury/received_events", "type": "User", "site_admin": false}, "body": "They're removed. We're moving towards allowing these ops on zero-dim tensors as if they were one-dim. So if `s` is a zero-dim tensor:\r\n\r\n`s.select(dim=0, index=0)` -> `s`\r\n`s.select(dim=0, index=1`) -> error\r\n\r\nZero-dim tensors aren't not exposed in Python yet so we'll have to be careful when we expose them that the backwards works properly.", "created_at": "2017-11-17T16:21:20Z", "updated_at": "2018-11-23T15:36:38Z", "html_url": "https://github.com/pytorch/pytorch/pull/3750#discussion_r151726813", "pull_request_url": "https://api.github.com/repos/pytorch/pytorch/pulls/3750", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/151726813"}, "html": {"href": "https://github.com/pytorch/pytorch/pull/3750#discussion_r151726813"}, "pull_request": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/3750"}}, "body_html": "<p>They're removed. We're moving towards allowing these ops on zero-dim tensors as if they were one-dim. So if <code>s</code> is a zero-dim tensor:</p>\n<p><code>s.select(dim=0, index=0)</code> -&gt; <code>s</code><br>\n<code>s.select(dim=0, index=1</code>) -&gt; error</p>\n<p>Zero-dim tensors aren't not exposed in Python yet so we'll have to be careful when we expose them that the backwards works properly.</p>", "body_text": "They're removed. We're moving towards allowing these ops on zero-dim tensors as if they were one-dim. So if s is a zero-dim tensor:\ns.select(dim=0, index=0) -> s\ns.select(dim=0, index=1) -> error\nZero-dim tensors aren't not exposed in Python yet so we'll have to be careful when we expose them that the backwards works properly.", "in_reply_to_id": 151708769}