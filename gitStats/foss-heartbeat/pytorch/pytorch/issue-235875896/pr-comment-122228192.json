{"url": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/122228192", "pull_request_review_id": 44326628, "id": 122228192, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEyMjIyODE5Mg==", "diff_hunk": "@@ -103,3 +103,155 @@ def backward(self, grad_output):\n \n \n _all_functions.append(Embedding)\n+\n+MODE_SUM = 0\n+MODE_MEAN = 1\n+\n+\n+class EmbeddingBag(Function):\n+\n+    def __init__(self, max_norm, norm_type, scale_grad_by_freq, mode):\n+        super(EmbeddingBag, self).__init__()\n+        self.max_norm = max_norm\n+        self.norm_type = norm_type\n+        self.scale_grad_by_freq = scale_grad_by_freq\n+        self._indices = None\n+        assert mode is not None\n+        if mode == 'sum':\n+            self.mode = MODE_SUM\n+        elif mode == 'mean':\n+            self.mode = MODE_MEAN\n+        else:\n+            raise ValueError(\"mode needs to be 'sum' or 'mean', but got {}\"\n+                             .format(mode))\n+\n+    def _renorm(self, indices, weight):\n+        self._backend.LookupTable_renorm(\n+            self._backend.library_state,\n+            indices,\n+            weight,\n+            self.max_norm,\n+            self.norm_type\n+        )\n+\n+    def forward(self, weight, indices, offsets):\n+        assert not self.needs_input_grad[1], \"EmbeddingBag doesn't \" \\\n+            \"compute the gradient w.r.t. the indices\"\n+\n+        assert not self.needs_input_grad[2], \"EmbeddingBag doesn't \" \\\n+            \"compute the gradient w.r.t. the offsets\"\n+\n+        assert indices.dim() == 1\n+        if offsets.dim() != 1:\n+            raise ValueError(\"offsets has to be a 1D Tensor\")\n+\n+        if offsets[0] != 0:\n+            raise ValueError(\"offsets[0] has to be 0, i.e. the first sequence\"\n+                             \" in the mini-batch has to start from position 0.\"\n+                             \"However, got {}\".format(offsets[0]))\n+        if offsets[-1] > indices.size(0):\n+            raise ValueError(\"offsets[-1] has to be smaller than indices's length\"\n+                             \" ({}), but got offsets[-1] of {}\"\n+                             .format(indices.size(0), offsets[-1]))\n+\n+        self._backend = type2backend[type(weight)]\n+        self._weight_size = weight.size()\n+        self._offset2bag = offsets.new()\n+\n+        self.save_for_backward(indices)\n+\n+        indices = indices.contiguous().view(-1)\n+        output = weight.new()\n+        if self.max_norm is not None:\n+            self._renorm(indices, weight)\n+\n+        if weight.is_cuda:\n+            if self.mode == MODE_MEAN:\n+                self.sequence_length = offsets.new().resize_(offsets.size())\n+            else:\n+                self.sequence_length = None", "path": "torch/nn/_functions/thnn/sparse.py", "position": null, "original_position": 70, "commit_id": "b9b0e28508221ff7dcbebc70871b818b41c766c6", "original_commit_id": "7ba94e1949fb80d173358727e1aa88662fdb2201", "user": {"login": "apaszke", "id": 4583066, "node_id": "MDQ6VXNlcjQ1ODMwNjY=", "avatar_url": "https://avatars3.githubusercontent.com/u/4583066?v=4", "gravatar_id": "", "url": "https://api.github.com/users/apaszke", "html_url": "https://github.com/apaszke", "followers_url": "https://api.github.com/users/apaszke/followers", "following_url": "https://api.github.com/users/apaszke/following{/other_user}", "gists_url": "https://api.github.com/users/apaszke/gists{/gist_id}", "starred_url": "https://api.github.com/users/apaszke/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/apaszke/subscriptions", "organizations_url": "https://api.github.com/users/apaszke/orgs", "repos_url": "https://api.github.com/users/apaszke/repos", "events_url": "https://api.github.com/users/apaszke/events{/privacy}", "received_events_url": "https://api.github.com/users/apaszke/received_events", "type": "User", "site_admin": false}, "body": "can we really do s/sequence_length/bag_sizes/? nothing else in this module, nor in its docs mentions sequences", "created_at": "2017-06-15T15:09:29Z", "updated_at": "2018-11-23T15:33:54Z", "html_url": "https://github.com/pytorch/pytorch/pull/1803#discussion_r122228192", "pull_request_url": "https://api.github.com/repos/pytorch/pytorch/pulls/1803", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/122228192"}, "html": {"href": "https://github.com/pytorch/pytorch/pull/1803#discussion_r122228192"}, "pull_request": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/1803"}}, "body_html": "<p>can we really do s/sequence_length/bag_sizes/? nothing else in this module, nor in its docs mentions sequences</p>", "body_text": "can we really do s/sequence_length/bag_sizes/? nothing else in this module, nor in its docs mentions sequences"}