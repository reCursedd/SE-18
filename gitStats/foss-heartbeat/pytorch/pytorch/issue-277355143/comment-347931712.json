{"url": "https://api.github.com/repos/pytorch/pytorch/issues/comments/347931712", "html_url": "https://github.com/pytorch/pytorch/issues/3919#issuecomment-347931712", "issue_url": "https://api.github.com/repos/pytorch/pytorch/issues/3919", "id": 347931712, "node_id": "MDEyOklzc3VlQ29tbWVudDM0NzkzMTcxMg==", "user": {"login": "shekhovt", "id": 2486893, "node_id": "MDQ6VXNlcjI0ODY4OTM=", "avatar_url": "https://avatars0.githubusercontent.com/u/2486893?v=4", "gravatar_id": "", "url": "https://api.github.com/users/shekhovt", "html_url": "https://github.com/shekhovt", "followers_url": "https://api.github.com/users/shekhovt/followers", "following_url": "https://api.github.com/users/shekhovt/following{/other_user}", "gists_url": "https://api.github.com/users/shekhovt/gists{/gist_id}", "starred_url": "https://api.github.com/users/shekhovt/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/shekhovt/subscriptions", "organizations_url": "https://api.github.com/users/shekhovt/orgs", "repos_url": "https://api.github.com/users/shekhovt/repos", "events_url": "https://api.github.com/users/shekhovt/events{/privacy}", "received_events_url": "https://api.github.com/users/shekhovt/received_events", "type": "User", "site_admin": false}, "created_at": "2017-11-29T17:18:51Z", "updated_at": "2017-11-29T17:18:51Z", "author_association": "NONE", "body_html": "<p>That I cannot argue about. I just suggest that there is a good deal of use cases where one wants a <code>view</code> of partially broadcasted tensors, where copying or changing data type can be avoided, and the current implementation is not supporting it</p>", "body_text": "That I cannot argue about. I just suggest that there is a good deal of use cases where one wants a view of partially broadcasted tensors, where copying or changing data type can be avoided, and the current implementation is not supporting it", "body": "That I cannot argue about. I just suggest that there is a good deal of use cases where one wants a `view` of partially broadcasted tensors, where copying or changing data type can be avoided, and the current implementation is not supporting it"}