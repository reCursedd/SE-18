{"url": "https://api.github.com/repos/pytorch/pytorch/issues/comments/347550128", "html_url": "https://github.com/pytorch/pytorch/issues/3919#issuecomment-347550128", "issue_url": "https://api.github.com/repos/pytorch/pytorch/issues/3919", "id": 347550128, "node_id": "MDEyOklzc3VlQ29tbWVudDM0NzU1MDEyOA==", "user": {"login": "gchanan", "id": 3768583, "node_id": "MDQ6VXNlcjM3Njg1ODM=", "avatar_url": "https://avatars2.githubusercontent.com/u/3768583?v=4", "gravatar_id": "", "url": "https://api.github.com/users/gchanan", "html_url": "https://github.com/gchanan", "followers_url": "https://api.github.com/users/gchanan/followers", "following_url": "https://api.github.com/users/gchanan/following{/other_user}", "gists_url": "https://api.github.com/users/gchanan/gists{/gist_id}", "starred_url": "https://api.github.com/users/gchanan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/gchanan/subscriptions", "organizations_url": "https://api.github.com/users/gchanan/orgs", "repos_url": "https://api.github.com/users/gchanan/repos", "events_url": "https://api.github.com/users/gchanan/events{/privacy}", "received_events_url": "https://api.github.com/users/gchanan/received_events", "type": "User", "site_admin": false}, "created_at": "2017-11-28T15:00:19Z", "updated_at": "2017-11-28T15:00:19Z", "author_association": "CONTRIBUTOR", "body_html": "<p>On 2., the docs could be a little cleaner; right now they say \"Returns True if this tensor is contiguous in memory in C order,\" but it's not really clear (to me at least) what \"in C order\" means in the case of 0-strided (i.e. expanded) tensors.  The condition is actually something like \"contiguous in memory in C order and each point is non-aliased\", \"contiguous in memory in C with no strides of size 0\" or \"memory is equivalent to a contiguous C N-dimensional array of the corresponding size\".</p>\n<p>On 1., we probably need more \"viewing\" functions, i.e. a \"reshape\" (that is a no-op for input of the same size\", a \"view\" that always succeeds, and maybe the current view (that requires contiguity).</p>", "body_text": "On 2., the docs could be a little cleaner; right now they say \"Returns True if this tensor is contiguous in memory in C order,\" but it's not really clear (to me at least) what \"in C order\" means in the case of 0-strided (i.e. expanded) tensors.  The condition is actually something like \"contiguous in memory in C order and each point is non-aliased\", \"contiguous in memory in C with no strides of size 0\" or \"memory is equivalent to a contiguous C N-dimensional array of the corresponding size\".\nOn 1., we probably need more \"viewing\" functions, i.e. a \"reshape\" (that is a no-op for input of the same size\", a \"view\" that always succeeds, and maybe the current view (that requires contiguity).", "body": "On 2., the docs could be a little cleaner; right now they say \"Returns True if this tensor is contiguous in memory in C order,\" but it's not really clear (to me at least) what \"in C order\" means in the case of 0-strided (i.e. expanded) tensors.  The condition is actually something like \"contiguous in memory in C order and each point is non-aliased\", \"contiguous in memory in C with no strides of size 0\" or \"memory is equivalent to a contiguous C N-dimensional array of the corresponding size\".\r\n\r\nOn 1., we probably need more \"viewing\" functions, i.e. a \"reshape\" (that is a no-op for input of the same size\", a \"view\" that always succeeds, and maybe the current view (that requires contiguity).\r\n\r\n"}