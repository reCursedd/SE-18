{"url": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/113971091", "pull_request_review_id": 35404471, "id": 113971091, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDExMzk3MTA5MQ==", "diff_hunk": "@@ -0,0 +1,58 @@\n+#pragma once\n+\n+#include <Python.h>\n+#include <stdexcept>\n+#include \"object_ptr.h\"\n+\n+// Utilities for handling Python strings. Note that PyString, when defined, is\n+// the same as PyBytes.\n+\n+// Returns true if obj is a bytes/str or unicode object\n+// In existing CPython implementations, this does not require the GIL\n+inline bool THPUtils_checkString(PyObject* obj) {\n+  return PyBytes_Check(obj) || PyUnicode_Check(obj);\n+}\n+\n+// Unpacks PyBytes (PyString) or PyUnicode as std::string\n+// PyBytes are unpacked as-is. PyUnicode is unpacked as UTF-8.\n+// NOTE: this method requires the GIL\n+inline std::string THPUtils_unpackString(PyObject* obj) {\n+  if (PyBytes_Check(obj)) {\n+    size_t size = PyBytes_GET_SIZE(obj);\n+    return std::string(PyBytes_AS_STRING(obj), size);\n+  }\n+  if (PyUnicode_Check(obj)) {\n+#if PY_MAJOR_VERSION == 2\n+    THPObjectPtr bytes = PyUnicode_AsUTF8String(obj);\n+    if (!bytes) {\n+      throw std::runtime_error(\"error unpacking string as utf-8\");\n+    }\n+    size_t size = PyBytes_GET_SIZE(bytes.get());\n+    return std::string(PyBytes_AS_STRING(bytes.get()), size);\n+#else\n+    Py_ssize_t size;\n+    const char* data = PyUnicode_AsUTF8AndSize(obj, &size);\n+    if (!data) {\n+      throw std::runtime_error(\"error unpacking string as utf-8\");\n+    }\n+    return std::string(data, (size_t)size);\n+#endif\n+  }\n+  throw std::runtime_error(\"Could not unpack string\");", "path": "torch/csrc/utils/python_strings.h", "position": null, "original_position": 41, "commit_id": "36ccbe824db27703a4fb270ea008ccf4e29a1211", "original_commit_id": "a373c0a03c8a8ea9831f56033f9d23e3822dc860", "user": {"login": "apaszke", "id": 4583066, "node_id": "MDQ6VXNlcjQ1ODMwNjY=", "avatar_url": "https://avatars3.githubusercontent.com/u/4583066?v=4", "gravatar_id": "", "url": "https://api.github.com/users/apaszke", "html_url": "https://github.com/apaszke", "followers_url": "https://api.github.com/users/apaszke/followers", "following_url": "https://api.github.com/users/apaszke/following{/other_user}", "gists_url": "https://api.github.com/users/apaszke/gists{/gist_id}", "starred_url": "https://api.github.com/users/apaszke/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/apaszke/subscriptions", "organizations_url": "https://api.github.com/users/apaszke/orgs", "repos_url": "https://api.github.com/users/apaszke/repos", "events_url": "https://api.github.com/users/apaszke/events{/privacy}", "received_events_url": "https://api.github.com/users/apaszke/received_events", "type": "User", "site_admin": false}, "body": "Maybe \"unpackString expected bytes or unicode object\"? This message is very uninformative.", "created_at": "2017-04-28T16:38:43Z", "updated_at": "2018-11-23T15:33:13Z", "html_url": "https://github.com/pytorch/pytorch/pull/1385#discussion_r113971091", "pull_request_url": "https://api.github.com/repos/pytorch/pytorch/pulls/1385", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/113971091"}, "html": {"href": "https://github.com/pytorch/pytorch/pull/1385#discussion_r113971091"}, "pull_request": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/1385"}}, "body_html": "<p>Maybe \"unpackString expected bytes or unicode object\"? This message is very uninformative.</p>", "body_text": "Maybe \"unpackString expected bytes or unicode object\"? This message is very uninformative."}