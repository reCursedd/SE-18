{"url": "https://api.github.com/repos/pytorch/pytorch/issues/comments/391222625", "html_url": "https://github.com/pytorch/pytorch/pull/7774#issuecomment-391222625", "issue_url": "https://api.github.com/repos/pytorch/pytorch/issues/7774", "id": 391222625, "node_id": "MDEyOklzc3VlQ29tbWVudDM5MTIyMjYyNQ==", "user": {"login": "peterjc123", "id": 9998726, "node_id": "MDQ6VXNlcjk5OTg3MjY=", "avatar_url": "https://avatars3.githubusercontent.com/u/9998726?v=4", "gravatar_id": "", "url": "https://api.github.com/users/peterjc123", "html_url": "https://github.com/peterjc123", "followers_url": "https://api.github.com/users/peterjc123/followers", "following_url": "https://api.github.com/users/peterjc123/following{/other_user}", "gists_url": "https://api.github.com/users/peterjc123/gists{/gist_id}", "starred_url": "https://api.github.com/users/peterjc123/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/peterjc123/subscriptions", "organizations_url": "https://api.github.com/users/peterjc123/orgs", "repos_url": "https://api.github.com/users/peterjc123/repos", "events_url": "https://api.github.com/users/peterjc123/events{/privacy}", "received_events_url": "https://api.github.com/users/peterjc123/received_events", "type": "User", "site_admin": false}, "created_at": "2018-05-23T05:14:00Z", "updated_at": "2018-05-23T05:19:50Z", "author_association": "CONTRIBUTOR", "body_html": "<p><a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=6429851\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/goldsborough\">@goldsborough</a> Hi, I just skimmed the code and the build log and thought that there should some reasons that the errors only occur on the CUDA source files in ATen. My guess is that something else called <code>OptionalBase</code> get used in the build phase of the CUDA files of ATen. So there may be two probable fix:</p>\n<ol>\n<li>Protect <code>OptionalBase</code> with a namespace.</li>\n<li>Detect the other <code>OptionalBase</code> and <code>undef</code> it.</li>\n</ol>\n<p>And my second guess is that the <a href=\"https://github.com/pytorch/pytorch/blob/master/aten/src/ATen/optional.h#L273\">code</a>  implies that <code>OptionalBase</code> is a <code>std::conditional</code> expression. So is there any chance that the type changes or conflicts?</p>", "body_text": "@goldsborough Hi, I just skimmed the code and the build log and thought that there should some reasons that the errors only occur on the CUDA source files in ATen. My guess is that something else called OptionalBase get used in the build phase of the CUDA files of ATen. So there may be two probable fix:\n\nProtect OptionalBase with a namespace.\nDetect the other OptionalBase and undef it.\n\nAnd my second guess is that the code  implies that OptionalBase is a std::conditional expression. So is there any chance that the type changes or conflicts?", "body": "@goldsborough Hi, I just skimmed the code and the build log and thought that there should some reasons that the errors only occur on the CUDA source files in ATen. My guess is that something else called `OptionalBase` get used in the build phase of the CUDA files of ATen. So there may be two probable fix:\r\n1. Protect `OptionalBase` with a namespace.\r\n2. Detect the other `OptionalBase` and `undef` it.\r\n\r\nAnd my second guess is that the [code](https://github.com/pytorch/pytorch/blob/master/aten/src/ATen/optional.h#L273)  implies that `OptionalBase` is a `std::conditional` expression. So is there any chance that the type changes or conflicts?"}