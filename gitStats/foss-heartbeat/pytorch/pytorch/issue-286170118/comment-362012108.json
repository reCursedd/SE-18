{"url": "https://api.github.com/repos/pytorch/pytorch/issues/comments/362012108", "html_url": "https://github.com/pytorch/pytorch/issues/4490#issuecomment-362012108", "issue_url": "https://api.github.com/repos/pytorch/pytorch/issues/4490", "id": 362012108, "node_id": "MDEyOklzc3VlQ29tbWVudDM2MjAxMjEwOA==", "user": {"login": "davidbau", "id": 3458792, "node_id": "MDQ6VXNlcjM0NTg3OTI=", "avatar_url": "https://avatars0.githubusercontent.com/u/3458792?v=4", "gravatar_id": "", "url": "https://api.github.com/users/davidbau", "html_url": "https://github.com/davidbau", "followers_url": "https://api.github.com/users/davidbau/followers", "following_url": "https://api.github.com/users/davidbau/following{/other_user}", "gists_url": "https://api.github.com/users/davidbau/gists{/gist_id}", "starred_url": "https://api.github.com/users/davidbau/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/davidbau/subscriptions", "organizations_url": "https://api.github.com/users/davidbau/orgs", "repos_url": "https://api.github.com/users/davidbau/repos", "events_url": "https://api.github.com/users/davidbau/events{/privacy}", "received_events_url": "https://api.github.com/users/davidbau/received_events", "type": "User", "site_admin": false}, "created_at": "2018-01-31T17:43:16Z", "updated_at": "2018-01-31T17:43:16Z", "author_association": "NONE", "body_html": "<p>The size which causes failure doesn't seem deterministic.  Using a pretty recent build (a few days old), I now have to increase the \"9\" to a larger number to make it fail.  Sometimes it will fail at 10, sometimes at 11.</p>\n<p>Here's an updated case that seems to fail reliably at some size, for me:</p>\n<pre><code>import torch\nfor size in range(8, 16):\n    a = torch.randn(25, 1, size).cuda()\n    print('Testing size: %d' % size)\n    print(a.topk(3, dim=0)[1])\n    print('OK...')\n</code></pre>", "body_text": "The size which causes failure doesn't seem deterministic.  Using a pretty recent build (a few days old), I now have to increase the \"9\" to a larger number to make it fail.  Sometimes it will fail at 10, sometimes at 11.\nHere's an updated case that seems to fail reliably at some size, for me:\nimport torch\nfor size in range(8, 16):\n    a = torch.randn(25, 1, size).cuda()\n    print('Testing size: %d' % size)\n    print(a.topk(3, dim=0)[1])\n    print('OK...')", "body": "The size which causes failure doesn't seem deterministic.  Using a pretty recent build (a few days old), I now have to increase the \"9\" to a larger number to make it fail.  Sometimes it will fail at 10, sometimes at 11.\r\n\r\nHere's an updated case that seems to fail reliably at some size, for me:\r\n\r\n```\r\nimport torch\r\nfor size in range(8, 16):\r\n    a = torch.randn(25, 1, size).cuda()\r\n    print('Testing size: %d' % size)\r\n    print(a.topk(3, dim=0)[1])\r\n    print('OK...')\r\n```"}