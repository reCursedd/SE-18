{"url": "https://api.github.com/repos/pytorch/pytorch/issues/4523", "repository_url": "https://api.github.com/repos/pytorch/pytorch", "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/4523/labels{/name}", "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/4523/comments", "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/4523/events", "html_url": "https://github.com/pytorch/pytorch/issues/4523", "id": 286564223, "node_id": "MDU6SXNzdWUyODY1NjQyMjM=", "number": 4523, "title": "A big bug for torch.mm(sparse, dense) or torch.smm(sparse, dense)", "user": {"login": "klyao", "id": 9946494, "node_id": "MDQ6VXNlcjk5NDY0OTQ=", "avatar_url": "https://avatars0.githubusercontent.com/u/9946494?v=4", "gravatar_id": "", "url": "https://api.github.com/users/klyao", "html_url": "https://github.com/klyao", "followers_url": "https://api.github.com/users/klyao/followers", "following_url": "https://api.github.com/users/klyao/following{/other_user}", "gists_url": "https://api.github.com/users/klyao/gists{/gist_id}", "starred_url": "https://api.github.com/users/klyao/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/klyao/subscriptions", "organizations_url": "https://api.github.com/users/klyao/orgs", "repos_url": "https://api.github.com/users/klyao/repos", "events_url": "https://api.github.com/users/klyao/events{/privacy}", "received_events_url": "https://api.github.com/users/klyao/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 12, "created_at": "2018-01-07T12:06:47Z", "updated_at": "2018-01-08T13:27:10Z", "closed_at": "2018-01-08T13:19:43Z", "author_association": "NONE", "body_html": "<pre><code>def test():\n    a = np.random.randn(4, 4)\n    maska = a &gt; 0.0\n    print(\"maska\", maska)\n    np.putmask(a, maska == False, 0.0)\n    a = sp.coo_matrix(a)\n    b = np.random.randn(4, 4)\n    maskb = b &gt; 0.0\n    print(\"maskb\", maskb)\n    np.putmask(b, maskb == False, 0.0)\n    b = sp.coo_matrix(b)\n    c = a.multiply(b)\n    print(\"c\", c)\n    print(\"c.data\", c.data)\n    c = sparse_mx_to_torch_sparse_tensor(c)\n    print(\"c.t()\", c.t())\n    a = sparse_mx_to_torch_sparse_tensor(a)\n    b = sparse_mx_to_torch_sparse_tensor(b)\n    e = torch.FloatTensor(np.random.randint(0, 3, [4, 4]).astype(np.float))\n    print(\"e\", e)\n    print(\"torch.mm(c, b)\", torch.smm(c-b, e).to_dense())\n    print(\"torch.mm(c_dense, b_dense)\", torch.mm(c.to_dense()-b.to_dense(), e))\ntest()\n</code></pre>\n<p>if you run the above code several times, you will find that torch.mm(c, e) and torch.mm(c_dense, e_dense) got a totally different results!!!</p>", "body_text": "def test():\n    a = np.random.randn(4, 4)\n    maska = a > 0.0\n    print(\"maska\", maska)\n    np.putmask(a, maska == False, 0.0)\n    a = sp.coo_matrix(a)\n    b = np.random.randn(4, 4)\n    maskb = b > 0.0\n    print(\"maskb\", maskb)\n    np.putmask(b, maskb == False, 0.0)\n    b = sp.coo_matrix(b)\n    c = a.multiply(b)\n    print(\"c\", c)\n    print(\"c.data\", c.data)\n    c = sparse_mx_to_torch_sparse_tensor(c)\n    print(\"c.t()\", c.t())\n    a = sparse_mx_to_torch_sparse_tensor(a)\n    b = sparse_mx_to_torch_sparse_tensor(b)\n    e = torch.FloatTensor(np.random.randint(0, 3, [4, 4]).astype(np.float))\n    print(\"e\", e)\n    print(\"torch.mm(c, b)\", torch.smm(c-b, e).to_dense())\n    print(\"torch.mm(c_dense, b_dense)\", torch.mm(c.to_dense()-b.to_dense(), e))\ntest()\n\nif you run the above code several times, you will find that torch.mm(c, e) and torch.mm(c_dense, e_dense) got a totally different results!!!", "body": "```\r\ndef test():\r\n    a = np.random.randn(4, 4)\r\n    maska = a > 0.0\r\n    print(\"maska\", maska)\r\n    np.putmask(a, maska == False, 0.0)\r\n    a = sp.coo_matrix(a)\r\n    b = np.random.randn(4, 4)\r\n    maskb = b > 0.0\r\n    print(\"maskb\", maskb)\r\n    np.putmask(b, maskb == False, 0.0)\r\n    b = sp.coo_matrix(b)\r\n    c = a.multiply(b)\r\n    print(\"c\", c)\r\n    print(\"c.data\", c.data)\r\n    c = sparse_mx_to_torch_sparse_tensor(c)\r\n    print(\"c.t()\", c.t())\r\n    a = sparse_mx_to_torch_sparse_tensor(a)\r\n    b = sparse_mx_to_torch_sparse_tensor(b)\r\n    e = torch.FloatTensor(np.random.randint(0, 3, [4, 4]).astype(np.float))\r\n    print(\"e\", e)\r\n    print(\"torch.mm(c, b)\", torch.smm(c-b, e).to_dense())\r\n    print(\"torch.mm(c_dense, b_dense)\", torch.mm(c.to_dense()-b.to_dense(), e))\r\ntest()\r\n```\r\n\r\nif you run the above code several times, you will find that torch.mm(c, e) and torch.mm(c_dense, e_dense) got a totally different results!!!\r\n  \r\n  \r\n  \r\n  "}