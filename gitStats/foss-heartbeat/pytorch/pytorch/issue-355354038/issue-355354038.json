{"url": "https://api.github.com/repos/pytorch/pytorch/issues/11033", "repository_url": "https://api.github.com/repos/pytorch/pytorch", "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/11033/labels{/name}", "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/11033/comments", "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/11033/events", "html_url": "https://github.com/pytorch/pytorch/issues/11033", "id": 355354038, "node_id": "MDU6SXNzdWUzNTUzNTQwMzg=", "number": 11033, "title": "Unclear exception in F.conv2d for wrong out_channels and groups", "user": {"login": "ptrblck", "id": 11662379, "node_id": "MDQ6VXNlcjExNjYyMzc5", "avatar_url": "https://avatars3.githubusercontent.com/u/11662379?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ptrblck", "html_url": "https://github.com/ptrblck", "followers_url": "https://api.github.com/users/ptrblck/followers", "following_url": "https://api.github.com/users/ptrblck/following{/other_user}", "gists_url": "https://api.github.com/users/ptrblck/gists{/gist_id}", "starred_url": "https://api.github.com/users/ptrblck/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ptrblck/subscriptions", "organizations_url": "https://api.github.com/users/ptrblck/orgs", "repos_url": "https://api.github.com/users/ptrblck/repos", "events_url": "https://api.github.com/users/ptrblck/events{/privacy}", "received_events_url": "https://api.github.com/users/ptrblck/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-08-29T22:17:31Z", "updated_at": "2018-09-02T20:40:43Z", "closed_at": "2018-09-02T20:40:43Z", "author_association": "CONTRIBUTOR", "body_html": "<h2>Issue description</h2>\n<p>The error message using <code>F.conv2d</code> is unclear when a wrongly shaped <code>weight</code> tensor and <code>groups</code> are provided, while the thrown error using <code>nn.Conv2d</code> gives the reason for the exception.<br>\n<a href=\"https://github.com/pytorch/pytorch/issues/11033\" data-hovercard-type=\"issue\" data-hovercard-url=\"/pytorch/pytorch/issues/11033/hovercard\">Thread</a> in the board.</p>\n<h2>Code example</h2>\n<div class=\"highlight highlight-source-python\"><pre>cin, cout <span class=\"pl-k\">=</span> <span class=\"pl-c1\">4</span>, <span class=\"pl-c1\">5</span>\ngroups <span class=\"pl-k\">=</span> <span class=\"pl-c1\">2</span>\nx <span class=\"pl-k\">=</span> torch.randn(<span class=\"pl-c1\">1</span>, cin, <span class=\"pl-c1\">24</span>, <span class=\"pl-c1\">24</span>)\n\nweight <span class=\"pl-k\">=</span> torch.randn(cout, cin<span class=\"pl-k\">//</span>groups, <span class=\"pl-c1\">3</span>, <span class=\"pl-c1\">3</span>)\n<span class=\"pl-c\"><span class=\"pl-c\">#</span> Unclear error message</span>\nF.conv2d(x, weight, <span class=\"pl-v\">groups</span><span class=\"pl-k\">=</span>groups)\n<span class=\"pl-k\">&gt;</span> <span class=\"pl-c1\">RuntimeError</span>: std::exception\n<span class=\"pl-c\"><span class=\"pl-c\">#</span> Proper error message</span>\nnn.Conv2d(cin, cout, <span class=\"pl-v\">kernel_size</span><span class=\"pl-k\">=</span><span class=\"pl-c1\">3</span>, <span class=\"pl-v\">groups</span><span class=\"pl-k\">=</span>groups)\n<span class=\"pl-k\">&gt;</span> <span class=\"pl-c1\">ValueError</span>: out_channels must be divisible by groups</pre></div>\n<h2>System Info</h2>\n<ul>\n<li>OS: Ubuntu 16.04.5 LTS</li>\n<li>PyTorch version: 0.5.0a0+6c7fb15 (installed from source)</li>\n<li>Python version: 2.7</li>\n<li>GCC version (if compiling from source): (Ubuntu 5.4.0-6ubuntu1~16.04.10) 5.4.0 20160609</li>\n<li>CMake version: 3.11.1</li>\n</ul>\n<h2>Possible reason</h2>\n<p>While the error message for the module is defined <a href=\"https://github.com/pytorch/pytorch/blob/0b1de747329250fbb290411d819bf10edbc1b858/torch/nn/modules/conv.py#L19\">here</a>, the check seems to be missing in the functional version.<br>\nCurrently only the <code>in_channels</code> are checked <a href=\"https://github.com/pytorch/pytorch/blob/0b1de747329250fbb290411d819bf10edbc1b858/aten/src/ATen/native/Convolution.cpp#L174\">here</a> and the <code>weight.size(0)</code> <a href=\"https://github.com/pytorch/pytorch/blob/0b1de747329250fbb290411d819bf10edbc1b858/aten/src/ATen/native/Convolution.cpp#L165\">here</a>.</p>\n<p>Probably this check might solve this issue:</p>\n<pre><code>if (weight.size(0) % groups != 0) {\n    std::stringstream ss;\n    ss &lt;&lt; \"Given groups=\" &lt;&lt; groups &lt;&lt; \", expected weight to be divisible by \"\n         &lt;&lt; groups &lt;&lt; \" at dimension 0, but got weight of size \" &lt;&lt; weight.size()\n         &lt;&lt; \" instead\";\n    throw std::runtime_error(ss.str());\n}\n</code></pre>\n<p>If this approach is alright, I can submit a PR.</p>", "body_text": "Issue description\nThe error message using F.conv2d is unclear when a wrongly shaped weight tensor and groups are provided, while the thrown error using nn.Conv2d gives the reason for the exception.\nThread in the board.\nCode example\ncin, cout = 4, 5\ngroups = 2\nx = torch.randn(1, cin, 24, 24)\n\nweight = torch.randn(cout, cin//groups, 3, 3)\n# Unclear error message\nF.conv2d(x, weight, groups=groups)\n> RuntimeError: std::exception\n# Proper error message\nnn.Conv2d(cin, cout, kernel_size=3, groups=groups)\n> ValueError: out_channels must be divisible by groups\nSystem Info\n\nOS: Ubuntu 16.04.5 LTS\nPyTorch version: 0.5.0a0+6c7fb15 (installed from source)\nPython version: 2.7\nGCC version (if compiling from source): (Ubuntu 5.4.0-6ubuntu1~16.04.10) 5.4.0 20160609\nCMake version: 3.11.1\n\nPossible reason\nWhile the error message for the module is defined here, the check seems to be missing in the functional version.\nCurrently only the in_channels are checked here and the weight.size(0) here.\nProbably this check might solve this issue:\nif (weight.size(0) % groups != 0) {\n    std::stringstream ss;\n    ss << \"Given groups=\" << groups << \", expected weight to be divisible by \"\n         << groups << \" at dimension 0, but got weight of size \" << weight.size()\n         << \" instead\";\n    throw std::runtime_error(ss.str());\n}\n\nIf this approach is alright, I can submit a PR.", "body": "## Issue description\r\n\r\nThe error message using `F.conv2d` is unclear when a wrongly shaped `weight` tensor and `groups` are provided, while the thrown error using `nn.Conv2d` gives the reason for the exception.\r\n[Thread](https://github.com/pytorch/pytorch/issues/11033) in the board.\r\n\r\n## Code example\r\n\r\n```python\r\ncin, cout = 4, 5\r\ngroups = 2\r\nx = torch.randn(1, cin, 24, 24)\r\n\r\nweight = torch.randn(cout, cin//groups, 3, 3)\r\n# Unclear error message\r\nF.conv2d(x, weight, groups=groups)\r\n> RuntimeError: std::exception\r\n# Proper error message\r\nnn.Conv2d(cin, cout, kernel_size=3, groups=groups)\r\n> ValueError: out_channels must be divisible by groups\r\n```\r\n\r\n## System Info\r\n- OS: Ubuntu 16.04.5 LTS\r\n- PyTorch version: 0.5.0a0+6c7fb15 (installed from source)\r\n- Python version: 2.7\r\n- GCC version (if compiling from source): (Ubuntu 5.4.0-6ubuntu1~16.04.10) 5.4.0 20160609\r\n- CMake version: 3.11.1\r\n\r\n## Possible reason\r\n\r\nWhile the error message for the module is defined [here](https://github.com/pytorch/pytorch/blob/0b1de747329250fbb290411d819bf10edbc1b858/torch/nn/modules/conv.py#L19), the check seems to be missing in the functional version. \r\nCurrently only the `in_channels` are checked [here](https://github.com/pytorch/pytorch/blob/0b1de747329250fbb290411d819bf10edbc1b858/aten/src/ATen/native/Convolution.cpp#L174) and the `weight.size(0)` [here](https://github.com/pytorch/pytorch/blob/0b1de747329250fbb290411d819bf10edbc1b858/aten/src/ATen/native/Convolution.cpp#L165).\r\n\r\nProbably this check might solve this issue:\r\n```\r\nif (weight.size(0) % groups != 0) {\r\n    std::stringstream ss;\r\n    ss << \"Given groups=\" << groups << \", expected weight to be divisible by \"\r\n         << groups << \" at dimension 0, but got weight of size \" << weight.size()\r\n         << \" instead\";\r\n    throw std::runtime_error(ss.str());\r\n}\r\n```\r\n\r\nIf this approach is alright, I can submit a PR."}