{"url": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/178554777", "pull_request_review_id": 108625189, "id": 178554777, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE3ODU1NDc3Nw==", "diff_hunk": "@@ -82,22 +88,38 @@ static PyTypeObject* getPyTypeObject(const at::Storage& storage)\n   throw std::invalid_argument(\"unsupported Storage type\");\n }\n \n-THPDtype* getDtype(const at::Type& type) {\n-  auto it = attype_to_dtype.find(&type);\n-  if (it != attype_to_dtype.end()) {\n-    return it->second;\n+at::Type& getType(const THPDtype &dtype, const THPLayout& layout) {\n+  at::Backend backend = get_backend(dtype.is_cuda, !layout.is_strided);\n+  // use type_registry rather than context.getType() because getType throws exceptions.\n+  auto baseType = at::globalContext().type_registry[static_cast<int>(backend)]\n+                                                   [static_cast<int>(dtype.scalar_type)].get();\n+  if (!baseType) {\n+    std::ostringstream oss;\n+    oss << \"Error attempting to use dtype \" << dtype.name << \" with layout \" << layout.name << \".\";\n+    if (dtype.is_cuda) {", "path": "torch/csrc/DynamicTypes.cpp", "position": null, "original_position": 64, "commit_id": "0687b936d9cbd9340ce0beab8b685dec7bb62c7c", "original_commit_id": "f21171552120ffd586fab531afb1d5546935f2ff", "user": {"login": "colesbury", "id": 655866, "node_id": "MDQ6VXNlcjY1NTg2Ng==", "avatar_url": "https://avatars1.githubusercontent.com/u/655866?v=4", "gravatar_id": "", "url": "https://api.github.com/users/colesbury", "html_url": "https://github.com/colesbury", "followers_url": "https://api.github.com/users/colesbury/followers", "following_url": "https://api.github.com/users/colesbury/following{/other_user}", "gists_url": "https://api.github.com/users/colesbury/gists{/gist_id}", "starred_url": "https://api.github.com/users/colesbury/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/colesbury/subscriptions", "organizations_url": "https://api.github.com/users/colesbury/orgs", "repos_url": "https://api.github.com/users/colesbury/repos", "events_url": "https://api.github.com/users/colesbury/events{/privacy}", "received_events_url": "https://api.github.com/users/colesbury/received_events", "type": "User", "site_admin": false}, "body": "Looks like this condition isn't accurate. The contbuilds are showing \"not compiled with CUDA enabled\" error messages in configurations that are compiled with CUDA. (No fp16 sparse or something?) ", "created_at": "2018-04-02T14:28:46Z", "updated_at": "2018-11-23T15:41:29Z", "html_url": "https://github.com/pytorch/pytorch/pull/6145#discussion_r178554777", "pull_request_url": "https://api.github.com/repos/pytorch/pytorch/pulls/6145", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/178554777"}, "html": {"href": "https://github.com/pytorch/pytorch/pull/6145#discussion_r178554777"}, "pull_request": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/6145"}}, "body_html": "<p>Looks like this condition isn't accurate. The contbuilds are showing \"not compiled with CUDA enabled\" error messages in configurations that are compiled with CUDA. (No fp16 sparse or something?)</p>", "body_text": "Looks like this condition isn't accurate. The contbuilds are showing \"not compiled with CUDA enabled\" error messages in configurations that are compiled with CUDA. (No fp16 sparse or something?)"}