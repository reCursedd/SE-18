{"url": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/178566307", "pull_request_review_id": 108642165, "id": 178566307, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE3ODU2NjMwNw==", "diff_hunk": "@@ -0,0 +1,88 @@\n+#include \"Layout.h\"\n+\n+#include <cstring>\n+#include <structmember.h>\n+#include \"torch/csrc/Exceptions.h\"\n+#include \"torch/csrc/utils/object_ptr.h\"\n+#include \"torch/csrc/utils/python_strings.h\"\n+\n+PyObject *THPLayoutClass = NULL;\n+\n+PyObject *THPLayout_New(bool is_strided, const std::string& name)\n+{\n+  auto type = (PyTypeObject*)&THPLayoutType;\n+  auto self = THPObjectPtr{type->tp_alloc(type, 0)};\n+  if (!self) throw python_error();\n+  auto self_ = reinterpret_cast<THPLayout*>(self.get());\n+  self_->is_strided = is_strided;\n+  std::strncpy (self_->name, name.c_str(), LAYOUT_NAME_LEN);\n+  self_->name[LAYOUT_NAME_LEN] = '\\0';\n+  return self.release();\n+}\n+\n+PyObject *THPLayout_repr(THPLayout *self)\n+{\n+  return THPUtils_packString(self->name);\n+}\n+\n+PyObject *THPLayout_is_cuda(THPLayout *self)\n+{\n+  Py_RETURN_TRUE;\n+}\n+\n+typedef PyObject *(*getter)(PyObject *, void *);\n+\n+static struct PyGetSetDef THPLayout_properties[] = {\n+  {\"is_cuda\",      (getter)THPLayout_is_cuda, nullptr, nullptr, nullptr},\n+  {nullptr}\n+};\n+\n+PyTypeObject THPLayoutType = {\n+  PyVarObject_HEAD_INIT(nullptr, 0)\n+  \"torch.layout\",                        /* tp_name */\n+  sizeof(THPLayout),                     /* tp_basicsize */\n+  0,                                     /* tp_itemsize */\n+  0,                                     /* tp_dealloc */\n+  0,                                     /* tp_print */\n+  0,                                     /* tp_getattr */\n+  0,                                     /* tp_setattr */\n+  0,                                     /* tp_reserved */\n+  (reprfunc)THPLayout_repr,              /* tp_repr */\n+  0,                                     /* tp_as_number */\n+  0,                                     /* tp_as_sequence */\n+  0,                                     /* tp_as_mapping */\n+  0,                                     /* tp_hash  */\n+  0,                                     /* tp_call */\n+  0,                                     /* tp_str */\n+  0,                                     /* tp_getattro */\n+  0,                                     /* tp_setattro */\n+  0,                                     /* tp_as_buffer */\n+  Py_TPFLAGS_DEFAULT,                    /* tp_flags */\n+  nullptr,                               /* tp_doc */\n+  0,                                     /* tp_traverse */\n+  0,                                     /* tp_clear */\n+  0,                                     /* tp_richcompare */\n+  0,                                     /* tp_weaklistoffset */\n+  0,                                     /* tp_iter */\n+  0,                                     /* tp_iternext */\n+  0,                                     /* tp_methods */\n+  0,                                     /* tp_members */\n+  THPLayout_properties,                                     /* tp_getset */\n+  0,                                     /* tp_base */\n+  0,                                     /* tp_dict */\n+  0,                                     /* tp_descr_get */\n+  0,                                     /* tp_descr_set */\n+  0,                                     /* tp_dictoffset */\n+  0,                                     /* tp_init */\n+  0,                                     /* tp_alloc */\n+  0,                                     /* tp_new */\n+};\n+\n+bool THPLayout_init(PyObject *module)", "path": "torch/csrc/Layout.cpp", "position": null, "original_position": 81, "commit_id": "0687b936d9cbd9340ce0beab8b685dec7bb62c7c", "original_commit_id": "f21171552120ffd586fab531afb1d5546935f2ff", "user": {"login": "gchanan", "id": 3768583, "node_id": "MDQ6VXNlcjM3Njg1ODM=", "avatar_url": "https://avatars2.githubusercontent.com/u/3768583?v=4", "gravatar_id": "", "url": "https://api.github.com/users/gchanan", "html_url": "https://github.com/gchanan", "followers_url": "https://api.github.com/users/gchanan/followers", "following_url": "https://api.github.com/users/gchanan/following{/other_user}", "gists_url": "https://api.github.com/users/gchanan/gists{/gist_id}", "starred_url": "https://api.github.com/users/gchanan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/gchanan/subscriptions", "organizations_url": "https://api.github.com/users/gchanan/orgs", "repos_url": "https://api.github.com/users/gchanan/repos", "events_url": "https://api.github.com/users/gchanan/events{/privacy}", "received_events_url": "https://api.github.com/users/gchanan/received_events", "type": "User", "site_admin": false}, "body": "Right, I should change Dtype too otherwise I'll keep propagating the old pattern.", "created_at": "2018-04-02T15:19:26Z", "updated_at": "2018-11-23T15:41:29Z", "html_url": "https://github.com/pytorch/pytorch/pull/6145#discussion_r178566307", "pull_request_url": "https://api.github.com/repos/pytorch/pytorch/pulls/6145", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/178566307"}, "html": {"href": "https://github.com/pytorch/pytorch/pull/6145#discussion_r178566307"}, "pull_request": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/6145"}}, "body_html": "<p>Right, I should change Dtype too otherwise I'll keep propagating the old pattern.</p>", "body_text": "Right, I should change Dtype too otherwise I'll keep propagating the old pattern.", "in_reply_to_id": 178552597}