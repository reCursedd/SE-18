{"url": "https://api.github.com/repos/pytorch/pytorch/issues/comments/319952427", "html_url": "https://github.com/pytorch/pytorch/pull/2053#issuecomment-319952427", "issue_url": "https://api.github.com/repos/pytorch/pytorch/issues/2053", "id": 319952427, "node_id": "MDEyOklzc3VlQ29tbWVudDMxOTk1MjQyNw==", "user": {"login": "rdipietro", "id": 5150559, "node_id": "MDQ6VXNlcjUxNTA1NTk=", "avatar_url": "https://avatars1.githubusercontent.com/u/5150559?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rdipietro", "html_url": "https://github.com/rdipietro", "followers_url": "https://api.github.com/users/rdipietro/followers", "following_url": "https://api.github.com/users/rdipietro/following{/other_user}", "gists_url": "https://api.github.com/users/rdipietro/gists{/gist_id}", "starred_url": "https://api.github.com/users/rdipietro/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rdipietro/subscriptions", "organizations_url": "https://api.github.com/users/rdipietro/orgs", "repos_url": "https://api.github.com/users/rdipietro/repos", "events_url": "https://api.github.com/users/rdipietro/events{/privacy}", "received_events_url": "https://api.github.com/users/rdipietro/received_events", "type": "User", "site_admin": false}, "created_at": "2017-08-03T12:17:25Z", "updated_at": "2017-08-03T12:17:25Z", "author_association": "CONTRIBUTOR", "body_html": "<p>I would have thought that the (number of time steps) sequential matrix multiplies would have dominated here, and that the reversals would be completely negligible. Interesting that this is wrong.</p>\n<p>I like this use of <code>gather</code>. There are a bunch of misc changes, but I think the most relevant change is replacing <code>batch_size</code> different <code>gather</code> calls with just one, right? Do you want to make minimal changes and push, or do you want me to take care of it?</p>\n<p>Also, out of curiosity, would it be very easy for you to run the same benchmark but without <code>reversed_indices = reversed_indices.cuda()</code>? Curious to see if this actually ends up making a difference.</p>", "body_text": "I would have thought that the (number of time steps) sequential matrix multiplies would have dominated here, and that the reversals would be completely negligible. Interesting that this is wrong.\nI like this use of gather. There are a bunch of misc changes, but I think the most relevant change is replacing batch_size different gather calls with just one, right? Do you want to make minimal changes and push, or do you want me to take care of it?\nAlso, out of curiosity, would it be very easy for you to run the same benchmark but without reversed_indices = reversed_indices.cuda()? Curious to see if this actually ends up making a difference.", "body": "I would have thought that the (number of time steps) sequential matrix multiplies would have dominated here, and that the reversals would be completely negligible. Interesting that this is wrong.\r\n\r\nI like this use of `gather`. There are a bunch of misc changes, but I think the most relevant change is replacing `batch_size` different `gather` calls with just one, right? Do you want to make minimal changes and push, or do you want me to take care of it?\r\n\r\nAlso, out of curiosity, would it be very easy for you to run the same benchmark but without `reversed_indices = reversed_indices.cuda()`? Curious to see if this actually ends up making a difference."}