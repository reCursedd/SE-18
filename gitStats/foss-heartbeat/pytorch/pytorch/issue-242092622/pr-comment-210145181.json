{"url": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/210145181", "pull_request_review_id": 146300624, "id": 210145181, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIxMDE0NTE4MQ==", "diff_hunk": "@@ -126,3 +126,38 @@ def pad_packed_sequence(sequence, batch_first=False):\n     if batch_first:\n         output = output.transpose(0, 1)\n     return output, lengths\n+\n+\n+def reverse_padded_sequence(inputs, lengths, batch_first=False):\n+    \"\"\"Reverses sequences according to their lengths.\n+\n+    Inputs should have size ``T x B x *`` if ``batch_first`` is False, or\n+    ``B x T x *`` if True. T is the length of the longest sequence (or larger),\n+    B is the batch size, and * is any number of dimensions (including 0).\n+\n+    Arguments:\n+        inputs (Variable): padded batch of variable length sequences.\n+        lengths (list[int]): list of sequence lengths\n+        batch_first (bool, optional): if True, inputs should be B x T x *.\n+\n+    Returns:\n+        A Variable with the same size as inputs, but with each sequence\n+        reversed according to its length.\n+    \"\"\"\n+    if batch_first:\n+        inputs = inputs.transpose(0, 1)\n+    max_length, batch_size = inputs.size(0), inputs.size(1)\n+    if len(lengths) != batch_size:\n+        raise ValueError('inputs is incompatible with lengths.')\n+    ind = [list(reversed(range(0, length))) + list(range(length, max_length))\n+           for length in lengths]\n+    ind = Variable(torch.LongTensor(ind).transpose(0, 1))", "path": "torch/nn/utils/rnn.py", "position": 29, "original_position": 29, "commit_id": "4c00324affb8c6d53d4362e321ea0e99ede6cfde", "original_commit_id": "4c00324affb8c6d53d4362e321ea0e99ede6cfde", "user": {"login": "weiyangfb", "id": 38509346, "node_id": "MDQ6VXNlcjM4NTA5MzQ2", "avatar_url": "https://avatars1.githubusercontent.com/u/38509346?v=4", "gravatar_id": "", "url": "https://api.github.com/users/weiyangfb", "html_url": "https://github.com/weiyangfb", "followers_url": "https://api.github.com/users/weiyangfb/followers", "following_url": "https://api.github.com/users/weiyangfb/following{/other_user}", "gists_url": "https://api.github.com/users/weiyangfb/gists{/gist_id}", "starred_url": "https://api.github.com/users/weiyangfb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/weiyangfb/subscriptions", "organizations_url": "https://api.github.com/users/weiyangfb/orgs", "repos_url": "https://api.github.com/users/weiyangfb/repos", "events_url": "https://api.github.com/users/weiyangfb/events{/privacy}", "received_events_url": "https://api.github.com/users/weiyangfb/received_events", "type": "User", "site_admin": false}, "body": "need to migrate to 0.4.0+", "created_at": "2018-08-15T00:38:36Z", "updated_at": "2018-11-23T15:49:21Z", "html_url": "https://github.com/pytorch/pytorch/pull/2053#discussion_r210145181", "pull_request_url": "https://api.github.com/repos/pytorch/pytorch/pulls/2053", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/210145181"}, "html": {"href": "https://github.com/pytorch/pytorch/pull/2053#discussion_r210145181"}, "pull_request": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/2053"}}, "body_html": "<p>need to migrate to 0.4.0+</p>", "body_text": "need to migrate to 0.4.0+"}