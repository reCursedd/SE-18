{"url": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/146964352", "pull_request_review_id": 71986167, "id": 146964352, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE0Njk2NDM1Mg==", "diff_hunk": "@@ -108,6 +120,9 @@ def __init__(self, probs):\n     def sample(self):\n         return torch.multinomial(self.probs, 1, True).squeeze(-1)\n \n+    def sample_n(self, n):\n+        return torch.cat([self.sample().unsqueeze(0) for _ in range(n)], dim=0)", "path": "torch/distributions.py", "position": null, "original_position": 53, "commit_id": "3fa72b7341212f14629b38e383f33d3fc99f70d5", "original_commit_id": "4de399410219e5cee15848d6ee00fbaab532e65f", "user": {"login": "geoffroeder", "id": 19354674, "node_id": "MDQ6VXNlcjE5MzU0Njc0", "avatar_url": "https://avatars2.githubusercontent.com/u/19354674?v=4", "gravatar_id": "", "url": "https://api.github.com/users/geoffroeder", "html_url": "https://github.com/geoffroeder", "followers_url": "https://api.github.com/users/geoffroeder/followers", "following_url": "https://api.github.com/users/geoffroeder/following{/other_user}", "gists_url": "https://api.github.com/users/geoffroeder/gists{/gist_id}", "starred_url": "https://api.github.com/users/geoffroeder/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/geoffroeder/subscriptions", "organizations_url": "https://api.github.com/users/geoffroeder/orgs", "repos_url": "https://api.github.com/users/geoffroeder/repos", "events_url": "https://api.github.com/users/geoffroeder/events{/privacy}", "received_events_url": "https://api.github.com/users/geoffroeder/received_events", "type": "User", "site_admin": false}, "body": "It turns out that when `.t()` is applied to a 1D Tensor, the operation fails. Your proposed method more efficient though, so I kept the change for 2D and added a conditional to catch the 1D case with `self.sample.expand(1, 1)` instead.", "created_at": "2017-10-25T19:35:45Z", "updated_at": "2018-11-23T15:35:41Z", "html_url": "https://github.com/pytorch/pytorch/pull/3249#discussion_r146964352", "pull_request_url": "https://api.github.com/repos/pytorch/pytorch/pulls/3249", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/146964352"}, "html": {"href": "https://github.com/pytorch/pytorch/pull/3249#discussion_r146964352"}, "pull_request": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/3249"}}, "body_html": "<p>It turns out that when <code>.t()</code> is applied to a 1D Tensor, the operation fails. Your proposed method more efficient though, so I kept the change for 2D and added a conditional to catch the 1D case with <code>self.sample.expand(1, 1)</code> instead.</p>", "body_text": "It turns out that when .t() is applied to a 1D Tensor, the operation fails. Your proposed method more efficient though, so I kept the change for 2D and added a conditional to catch the 1D case with self.sample.expand(1, 1) instead.", "in_reply_to_id": 146530246}