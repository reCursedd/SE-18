{"url": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/143014647", "pull_request_review_id": 67464363, "id": 143014647, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE0MzAxNDY0Nw==", "diff_hunk": "@@ -112,15 +113,59 @@ void addAttribute(onnx::NodeProto * n_p, jit::Node * n, jit::Symbol name) {\n   }\n }\n \n+void encodeType(onnx::TypeProto* t, Node* n) {\n+  onnx::TypeProtoTensorTypeProto* tensor_type = t->mutable_tensor_type();\n+  onnx::TypeProtoTensorShapeProto* shape = tensor_type->mutable_shape();\n+  JIT_ASSERT(n->hasType());\n+  TensorType* node_type = n->type()->expect<TensorType>();\n+  const std::vector<std::int64_t>& sizes = node_type->sizes();\n+  for (std::int64_t s : sizes) {\n+    shape->add_dim(s);\n+  }\n+  onnx::DataType onnx_type;\n+  switch(node_type->scalarType()) {\n+    case at::kDouble:\n+    case at::kFloat:\n+    case at::kHalf:\n+      onnx_type = onnx::kFLOAT;", "path": "torch/csrc/jit/export.cpp", "position": null, "original_position": 26, "commit_id": "6d67743d67ea3a892c296f8df9afe4f75d9cec2e", "original_commit_id": "647b63b7ca5699a4c32cb1c39e09a7392c6f0561", "user": {"login": "houseroad", "id": 30275821, "node_id": "MDQ6VXNlcjMwMjc1ODIx", "avatar_url": "https://avatars0.githubusercontent.com/u/30275821?v=4", "gravatar_id": "", "url": "https://api.github.com/users/houseroad", "html_url": "https://github.com/houseroad", "followers_url": "https://api.github.com/users/houseroad/followers", "following_url": "https://api.github.com/users/houseroad/following{/other_user}", "gists_url": "https://api.github.com/users/houseroad/gists{/gist_id}", "starred_url": "https://api.github.com/users/houseroad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/houseroad/subscriptions", "organizations_url": "https://api.github.com/users/houseroad/orgs", "repos_url": "https://api.github.com/users/houseroad/repos", "events_url": "https://api.github.com/users/houseroad/events{/privacy}", "received_events_url": "https://api.github.com/users/houseroad/received_events", "type": "User", "site_admin": false}, "body": "https://github.com/pytorch/pytorch/blob/master/torch/csrc/jit/export.cpp#L38 This is the original logic. \r\nBut looks like they support double and more types... Let me fix this.\r\nhttps://github.com/onnx/onnx/blob/master/onnx/onnx.proto#L198\r\n\r\nGood catch, thanks.", "created_at": "2017-10-05T18:09:57Z", "updated_at": "2018-11-23T15:35:03Z", "html_url": "https://github.com/pytorch/pytorch/pull/2989#discussion_r143014647", "pull_request_url": "https://api.github.com/repos/pytorch/pytorch/pulls/2989", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/143014647"}, "html": {"href": "https://github.com/pytorch/pytorch/pull/2989#discussion_r143014647"}, "pull_request": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/2989"}}, "body_html": "<p><a href=\"https://github.com/pytorch/pytorch/blob/master/torch/csrc/jit/export.cpp#L38\">https://github.com/pytorch/pytorch/blob/master/torch/csrc/jit/export.cpp#L38</a> This is the original logic.<br>\nBut looks like they support double and more types... Let me fix this.<br>\n<a href=\"https://github.com/onnx/onnx/blob/master/onnx/onnx.proto#L198\">https://github.com/onnx/onnx/blob/master/onnx/onnx.proto#L198</a></p>\n<p>Good catch, thanks.</p>", "body_text": "https://github.com/pytorch/pytorch/blob/master/torch/csrc/jit/export.cpp#L38 This is the original logic.\nBut looks like they support double and more types... Let me fix this.\nhttps://github.com/onnx/onnx/blob/master/onnx/onnx.proto#L198\nGood catch, thanks.", "in_reply_to_id": 143006552}