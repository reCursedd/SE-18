{"url": "https://api.github.com/repos/pytorch/pytorch/issues/10444", "repository_url": "https://api.github.com/repos/pytorch/pytorch", "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/10444/labels{/name}", "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/10444/comments", "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/10444/events", "html_url": "https://github.com/pytorch/pytorch/pull/10444", "id": 349778246, "node_id": "MDExOlB1bGxSZXF1ZXN0MjA3ODAxMTk1", "number": 10444, "title": "[unified build] gflags improvement to allow CAFFE2_EXPORTS", "user": {"login": "Yangqing", "id": 551151, "node_id": "MDQ6VXNlcjU1MTE1MQ==", "avatar_url": "https://avatars1.githubusercontent.com/u/551151?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Yangqing", "html_url": "https://github.com/Yangqing", "followers_url": "https://api.github.com/users/Yangqing/followers", "following_url": "https://api.github.com/users/Yangqing/following{/other_user}", "gists_url": "https://api.github.com/users/Yangqing/gists{/gist_id}", "starred_url": "https://api.github.com/users/Yangqing/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Yangqing/subscriptions", "organizations_url": "https://api.github.com/users/Yangqing/orgs", "repos_url": "https://api.github.com/users/Yangqing/repos", "events_url": "https://api.github.com/users/Yangqing/events{/privacy}", "received_events_url": "https://api.github.com/users/Yangqing/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2018-08-12T02:20:07Z", "updated_at": "2018-08-13T16:56:11Z", "closed_at": "2018-08-13T16:56:11Z", "author_association": "CONTRIBUTOR", "pull_request": {"url": "https://api.github.com/repos/pytorch/pytorch/pulls/10444", "html_url": "https://github.com/pytorch/pytorch/pull/10444", "diff_url": "https://github.com/pytorch/pytorch/pull/10444.diff", "patch_url": "https://github.com/pytorch/pytorch/pull/10444.patch"}, "body_html": "<p>Explanation copied from code:</p>\n<p>// Motivation about the gflags wrapper:<br>\n// (1) We would need to make sure that the gflags version and the non-gflags<br>\n// version of Caffe2 are going to expose the same flags abstraction. One should<br>\n// explicitly use caffe2::FLAGS_flag_name to access the flags.<br>\n// (2) For flag names, it is recommended to start with caffe2_ to distinguish it<br>\n// from regular gflags flags. For example, do<br>\n//    CAFFE2_DEFINE_BOOL(caffe2_my_flag, true, \"An example\");<br>\n// to allow one to use caffe2::FLAGS_caffe2_my_flag.<br>\n// (3) Gflags has a design issue that does not properly expose the global flags,<br>\n// if one builds the library with -fvisibility=hidden. The current gflags (as of<br>\n// Aug 2018) only deals with the Windows case using dllexport, and not the Linux<br>\n// counterparts. As a result, we will explciitly use CAFFE2_EXPORT to export the<br>\n// flags defined in Caffe2. This is done via a global reference, so the flag<br>\n// itself is not duplicated - under the hood it is the same global gflags flag.</p>", "body_text": "Explanation copied from code:\n// Motivation about the gflags wrapper:\n// (1) We would need to make sure that the gflags version and the non-gflags\n// version of Caffe2 are going to expose the same flags abstraction. One should\n// explicitly use caffe2::FLAGS_flag_name to access the flags.\n// (2) For flag names, it is recommended to start with caffe2_ to distinguish it\n// from regular gflags flags. For example, do\n//    CAFFE2_DEFINE_BOOL(caffe2_my_flag, true, \"An example\");\n// to allow one to use caffe2::FLAGS_caffe2_my_flag.\n// (3) Gflags has a design issue that does not properly expose the global flags,\n// if one builds the library with -fvisibility=hidden. The current gflags (as of\n// Aug 2018) only deals with the Windows case using dllexport, and not the Linux\n// counterparts. As a result, we will explciitly use CAFFE2_EXPORT to export the\n// flags defined in Caffe2. This is done via a global reference, so the flag\n// itself is not duplicated - under the hood it is the same global gflags flag.", "body": "Explanation copied from code:\r\n\r\n// Motivation about the gflags wrapper:\r\n// (1) We would need to make sure that the gflags version and the non-gflags\r\n// version of Caffe2 are going to expose the same flags abstraction. One should\r\n// explicitly use caffe2::FLAGS_flag_name to access the flags.\r\n// (2) For flag names, it is recommended to start with caffe2_ to distinguish it\r\n// from regular gflags flags. For example, do\r\n//    CAFFE2_DEFINE_BOOL(caffe2_my_flag, true, \"An example\");\r\n// to allow one to use caffe2::FLAGS_caffe2_my_flag.\r\n// (3) Gflags has a design issue that does not properly expose the global flags,\r\n// if one builds the library with -fvisibility=hidden. The current gflags (as of\r\n// Aug 2018) only deals with the Windows case using dllexport, and not the Linux\r\n// counterparts. As a result, we will explciitly use CAFFE2_EXPORT to export the\r\n// flags defined in Caffe2. This is done via a global reference, so the flag\r\n// itself is not duplicated - under the hood it is the same global gflags flag."}