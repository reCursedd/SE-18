{"url": "https://api.github.com/repos/pytorch/pytorch/issues/comments/336249982", "html_url": "https://github.com/pytorch/pytorch/issues/3092#issuecomment-336249982", "issue_url": "https://api.github.com/repos/pytorch/pytorch/issues/3092", "id": 336249982, "node_id": "MDEyOklzc3VlQ29tbWVudDMzNjI0OTk4Mg==", "user": {"login": "SsnL", "id": 5674597, "node_id": "MDQ6VXNlcjU2NzQ1OTc=", "avatar_url": "https://avatars2.githubusercontent.com/u/5674597?v=4", "gravatar_id": "", "url": "https://api.github.com/users/SsnL", "html_url": "https://github.com/SsnL", "followers_url": "https://api.github.com/users/SsnL/followers", "following_url": "https://api.github.com/users/SsnL/following{/other_user}", "gists_url": "https://api.github.com/users/SsnL/gists{/gist_id}", "starred_url": "https://api.github.com/users/SsnL/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/SsnL/subscriptions", "organizations_url": "https://api.github.com/users/SsnL/orgs", "repos_url": "https://api.github.com/users/SsnL/repos", "events_url": "https://api.github.com/users/SsnL/events{/privacy}", "received_events_url": "https://api.github.com/users/SsnL/received_events", "type": "User", "site_admin": false}, "created_at": "2017-10-12T20:03:23Z", "updated_at": "2017-10-12T20:03:23Z", "author_association": "CONTRIBUTOR", "body_html": "<p><code>torch.nn.Conv*</code> padding can indeed be tuples. They call <code>torch.nn.functional.conv*</code> functions underneath. This is a documentation inconsistency. Thanks for lettings us know!</p>\n<p>For example, see below:</p>\n<pre><code>&gt;&gt;&gt; conv_module = nn.Conv2d(3, 3, padding = (1, 3))\n&gt;&gt;&gt; x = Variable(torch.zeros(1, 3, 3, 3))\n&gt;&gt;&gt; conv_module(x).shape\ntorch.Size([1, 3, 3, 7])\n&gt;&gt;&gt; conv_module = nn.Conv2d(3, 3, (3, 3), padding = 3)\n&gt;&gt;&gt; conv_module(x).shape\ntorch.Size([1, 3, 7, 7])\n&gt;&gt;&gt; conv_module = nn.Conv2d(3, 3, (3, 3), padding = (3, 3))\n&gt;&gt;&gt; conv_module(x).shape\ntorch.Size([1, 3, 7, 7])\n&gt;&gt;&gt; torch.nn.functional.conv2d(x, Variable(torch.zeros(3, 3, 3, 3)), padding = (1, 3)).shape\ntorch.Size([1, 3, 3, 7])\n&gt;&gt;&gt; torch.nn.functional.conv2d(x, Variable(torch.zeros(3, 3, 3, 3)), padding = 3).shape\ntorch.Size([1, 3, 7, 7])\n&gt;&gt;&gt; torch.nn.functional.conv2d(x, Variable(torch.zeros(3, 3, 3, 3)), padding = (3, 3)).shape\ntorch.Size([1, 3, 7, 7])\n</code></pre>", "body_text": "torch.nn.Conv* padding can indeed be tuples. They call torch.nn.functional.conv* functions underneath. This is a documentation inconsistency. Thanks for lettings us know!\nFor example, see below:\n>>> conv_module = nn.Conv2d(3, 3, padding = (1, 3))\n>>> x = Variable(torch.zeros(1, 3, 3, 3))\n>>> conv_module(x).shape\ntorch.Size([1, 3, 3, 7])\n>>> conv_module = nn.Conv2d(3, 3, (3, 3), padding = 3)\n>>> conv_module(x).shape\ntorch.Size([1, 3, 7, 7])\n>>> conv_module = nn.Conv2d(3, 3, (3, 3), padding = (3, 3))\n>>> conv_module(x).shape\ntorch.Size([1, 3, 7, 7])\n>>> torch.nn.functional.conv2d(x, Variable(torch.zeros(3, 3, 3, 3)), padding = (1, 3)).shape\ntorch.Size([1, 3, 3, 7])\n>>> torch.nn.functional.conv2d(x, Variable(torch.zeros(3, 3, 3, 3)), padding = 3).shape\ntorch.Size([1, 3, 7, 7])\n>>> torch.nn.functional.conv2d(x, Variable(torch.zeros(3, 3, 3, 3)), padding = (3, 3)).shape\ntorch.Size([1, 3, 7, 7])", "body": "`torch.nn.Conv*` padding can indeed be tuples. They call `torch.nn.functional.conv*` functions underneath. This is a documentation inconsistency. Thanks for lettings us know!\r\n\r\nFor example, see below:\r\n```\r\n>>> conv_module = nn.Conv2d(3, 3, padding = (1, 3))\r\n>>> x = Variable(torch.zeros(1, 3, 3, 3))\r\n>>> conv_module(x).shape\r\ntorch.Size([1, 3, 3, 7])\r\n>>> conv_module = nn.Conv2d(3, 3, (3, 3), padding = 3)\r\n>>> conv_module(x).shape\r\ntorch.Size([1, 3, 7, 7])\r\n>>> conv_module = nn.Conv2d(3, 3, (3, 3), padding = (3, 3))\r\n>>> conv_module(x).shape\r\ntorch.Size([1, 3, 7, 7])\r\n>>> torch.nn.functional.conv2d(x, Variable(torch.zeros(3, 3, 3, 3)), padding = (1, 3)).shape\r\ntorch.Size([1, 3, 3, 7])\r\n>>> torch.nn.functional.conv2d(x, Variable(torch.zeros(3, 3, 3, 3)), padding = 3).shape\r\ntorch.Size([1, 3, 7, 7])\r\n>>> torch.nn.functional.conv2d(x, Variable(torch.zeros(3, 3, 3, 3)), padding = (3, 3)).shape\r\ntorch.Size([1, 3, 7, 7])\r\n```"}