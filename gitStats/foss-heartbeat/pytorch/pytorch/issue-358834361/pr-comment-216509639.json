{"url": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/216509639", "pull_request_review_id": 154007185, "id": 216509639, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIxNjUwOTYzOQ==", "diff_hunk": "@@ -126,3 +126,12 @@ inline double THPUtils_unpackDouble(PyObject* obj) {\n   }\n   return value;\n }\n+\n+inline std::complex<double> THPUtils_unpackComplexDouble(PyObject *obj) {\n+  Py_complex value = PyComplex_AsCComplex(obj);\n+  if (value.real == -1.0 && PyErr_Occurred()) {", "path": "torch/csrc/utils/python_numbers.h", "position": 7, "original_position": 7, "commit_id": "bec5f4802d2c055af693f96311917370b344ba2b", "original_commit_id": "d958a1d9ce9afac4ecfdb3b017d12581fdd6727b", "user": {"login": "Roger-luo", "id": 8445510, "node_id": "MDQ6VXNlcjg0NDU1MTA=", "avatar_url": "https://avatars2.githubusercontent.com/u/8445510?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Roger-luo", "html_url": "https://github.com/Roger-luo", "followers_url": "https://api.github.com/users/Roger-luo/followers", "following_url": "https://api.github.com/users/Roger-luo/following{/other_user}", "gists_url": "https://api.github.com/users/Roger-luo/gists{/gist_id}", "starred_url": "https://api.github.com/users/Roger-luo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Roger-luo/subscriptions", "organizations_url": "https://api.github.com/users/Roger-luo/orgs", "repos_url": "https://api.github.com/users/Roger-luo/repos", "events_url": "https://api.github.com/users/Roger-luo/events{/privacy}", "received_events_url": "https://api.github.com/users/Roger-luo/received_events", "type": "User", "site_admin": false}, "body": "Err... yes, I missed `PyComplex_Check`, but I think we will still need that `value.real == -1.0` according to the doc of `PyComplex_AsCComplex`, it will try `__complex__` for objects that defines this magic method and return a real number `-1.0` if this fails. Ref: https://docs.python.org/3/c-api/complex.html\r\n\r\nAnd similar with pybind11: https://github.com/pybind/pybind11/blob/master/include/pybind11/complex.h\r\n\r\nI'll add a `PyComplex_Check` anyway.", "created_at": "2018-09-10T23:51:47Z", "updated_at": "2018-11-23T15:50:55Z", "html_url": "https://github.com/pytorch/pytorch/pull/11493#discussion_r216509639", "pull_request_url": "https://api.github.com/repos/pytorch/pytorch/pulls/11493", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/216509639"}, "html": {"href": "https://github.com/pytorch/pytorch/pull/11493#discussion_r216509639"}, "pull_request": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/11493"}}, "body_html": "<p>Err... yes, I missed <code>PyComplex_Check</code>, but I think we will still need that <code>value.real == -1.0</code> according to the doc of <code>PyComplex_AsCComplex</code>, it will try <code>__complex__</code> for objects that defines this magic method and return a real number <code>-1.0</code> if this fails. Ref: <a href=\"https://docs.python.org/3/c-api/complex.html\" rel=\"nofollow\">https://docs.python.org/3/c-api/complex.html</a></p>\n<p>And similar with pybind11: <a href=\"https://github.com/pybind/pybind11/blob/master/include/pybind11/complex.h\">https://github.com/pybind/pybind11/blob/master/include/pybind11/complex.h</a></p>\n<p>I'll add a <code>PyComplex_Check</code> anyway.</p>", "body_text": "Err... yes, I missed PyComplex_Check, but I think we will still need that value.real == -1.0 according to the doc of PyComplex_AsCComplex, it will try __complex__ for objects that defines this magic method and return a real number -1.0 if this fails. Ref: https://docs.python.org/3/c-api/complex.html\nAnd similar with pybind11: https://github.com/pybind/pybind11/blob/master/include/pybind11/complex.h\nI'll add a PyComplex_Check anyway.", "in_reply_to_id": 216508931}