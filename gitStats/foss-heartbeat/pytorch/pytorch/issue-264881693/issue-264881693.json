{"url": "https://api.github.com/repos/pytorch/pytorch/issues/3085", "repository_url": "https://api.github.com/repos/pytorch/pytorch", "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/3085/labels{/name}", "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/3085/comments", "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/3085/events", "html_url": "https://github.com/pytorch/pytorch/issues/3085", "id": 264881693, "node_id": "MDU6SXNzdWUyNjQ4ODE2OTM=", "number": 3085, "title": "Bad interplay between indexing and in-place operations?", "user": {"login": "lopezpaz", "id": 2237879, "node_id": "MDQ6VXNlcjIyMzc4Nzk=", "avatar_url": "https://avatars1.githubusercontent.com/u/2237879?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lopezpaz", "html_url": "https://github.com/lopezpaz", "followers_url": "https://api.github.com/users/lopezpaz/followers", "following_url": "https://api.github.com/users/lopezpaz/following{/other_user}", "gists_url": "https://api.github.com/users/lopezpaz/gists{/gist_id}", "starred_url": "https://api.github.com/users/lopezpaz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lopezpaz/subscriptions", "organizations_url": "https://api.github.com/users/lopezpaz/orgs", "repos_url": "https://api.github.com/users/lopezpaz/repos", "events_url": "https://api.github.com/users/lopezpaz/events{/privacy}", "received_events_url": "https://api.github.com/users/lopezpaz/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2017-10-12T09:58:08Z", "updated_at": "2017-10-12T16:24:06Z", "closed_at": "2017-10-12T16:21:31Z", "author_association": "NONE", "body_html": "<p>Hi all,</p>\n<p>Are the following two alternatives different on purpose? Thanks!</p>\n<div class=\"highlight highlight-source-python\"><pre><span class=\"pl-k\">import</span> torch\n\nx1 <span class=\"pl-k\">=</span> torch.randn(<span class=\"pl-c1\">10</span>)\nidx <span class=\"pl-k\">=</span> torch.LongTensor([<span class=\"pl-c1\">1</span>,<span class=\"pl-c1\">4</span>,<span class=\"pl-c1\">6</span>,<span class=\"pl-c1\">2</span>,<span class=\"pl-c1\">3</span>])\ny <span class=\"pl-k\">=</span> torch.randn(<span class=\"pl-c1\">5</span>)\n\nx2 <span class=\"pl-k\">=</span> x1.clone()\nx2[idx].add_(<span class=\"pl-k\">-</span><span class=\"pl-c1\">0.1</span>, y)\n<span class=\"pl-c1\">print</span>((x1 <span class=\"pl-k\">-</span> x2).norm()) <span class=\"pl-c\"><span class=\"pl-c\">#</span> zero, unexpected</span>\n\nx2 <span class=\"pl-k\">=</span> x1.clone()\nx2[idx] <span class=\"pl-k\">-=</span> <span class=\"pl-c1\">0.1</span> <span class=\"pl-k\">*</span> y\n<span class=\"pl-c1\">print</span>((x1 <span class=\"pl-k\">-</span> x2).norm()) <span class=\"pl-c\"><span class=\"pl-c\">#</span> non-zero, expected</span></pre></div>\n<p>Thanks!<br>\ndlp.</p>", "body_text": "Hi all,\nAre the following two alternatives different on purpose? Thanks!\nimport torch\n\nx1 = torch.randn(10)\nidx = torch.LongTensor([1,4,6,2,3])\ny = torch.randn(5)\n\nx2 = x1.clone()\nx2[idx].add_(-0.1, y)\nprint((x1 - x2).norm()) # zero, unexpected\n\nx2 = x1.clone()\nx2[idx] -= 0.1 * y\nprint((x1 - x2).norm()) # non-zero, expected\nThanks!\ndlp.", "body": "Hi all,\r\n\r\nAre the following two alternatives different on purpose? Thanks!\r\n\r\n```python\r\nimport torch\r\n\r\nx1 = torch.randn(10)\r\nidx = torch.LongTensor([1,4,6,2,3])\r\ny = torch.randn(5)\r\n\r\nx2 = x1.clone()\r\nx2[idx].add_(-0.1, y)\r\nprint((x1 - x2).norm()) # zero, unexpected\r\n\r\nx2 = x1.clone()\r\nx2[idx] -= 0.1 * y\r\nprint((x1 - x2).norm()) # non-zero, expected\r\n```\r\n\r\nThanks!\r\ndlp."}