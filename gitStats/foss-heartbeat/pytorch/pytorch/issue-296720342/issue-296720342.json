{"url": "https://api.github.com/repos/pytorch/pytorch/issues/5211", "repository_url": "https://api.github.com/repos/pytorch/pytorch", "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/5211/labels{/name}", "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/5211/comments", "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/5211/events", "html_url": "https://github.com/pytorch/pytorch/issues/5211", "id": 296720342, "node_id": "MDU6SXNzdWUyOTY3MjAzNDI=", "number": 5211, "title": "Error message when wrong call to forward of RNN (nn.GRU and also nn.LSTM)", "user": {"login": "Diego999", "id": 1092464, "node_id": "MDQ6VXNlcjEwOTI0NjQ=", "avatar_url": "https://avatars3.githubusercontent.com/u/1092464?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Diego999", "html_url": "https://github.com/Diego999", "followers_url": "https://api.github.com/users/Diego999/followers", "following_url": "https://api.github.com/users/Diego999/following{/other_user}", "gists_url": "https://api.github.com/users/Diego999/gists{/gist_id}", "starred_url": "https://api.github.com/users/Diego999/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Diego999/subscriptions", "organizations_url": "https://api.github.com/users/Diego999/orgs", "repos_url": "https://api.github.com/users/Diego999/repos", "events_url": "https://api.github.com/users/Diego999/events{/privacy}", "received_events_url": "https://api.github.com/users/Diego999/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 11, "created_at": "2018-02-13T12:30:14Z", "updated_at": "2018-04-17T11:05:04Z", "closed_at": "2018-02-13T15:05:23Z", "author_association": "NONE", "body_html": "<p>Hi everyone,</p>\n<p>I'm implementing a model with PyTorch and realised when I call my GRU forward method, I raise an exception (due to bad shape) but there is an error in the message given due to undefined fn:</p>\n<p>Traceback (most recent call last):<br>\n...<br>\noutput, hidden = self.document_rnn(sentence_hidden_embeddings, hidden)<br>\nFile \"/usr/local/lib/python3.6/site-packages/torch/nn/modules/module.py\", line 357, in <strong>call</strong><br>\nresult = self.forward(*input, *_*kwargs)<br>\nFile \"/usr/local/lib/python3.6/site-packages/torch/nn/modules/rnn.py\", line 190, in forward<br>\nself.check_forward_args(input, hx, batch_sizes)<br>\n<strong>File \"/usr/local/lib/python3.6/site-packages/torch/nn/modules/rnn.py\", line 141, in check_forward_args<br>\nfn.input_size, input.size(-1)))<br>\nNameError: name 'fn' is not defined</strong></p>\n<p>In the original code source:</p>\n<p>`<br>\ndef check_forward_args(self, input, hidden, batch_sizes):</p>\n<pre><code>    is_input_packed = batch_sizes is not None\n    expected_input_dim = 2 if is_input_packed else 3\n\n    if input.dim() != expected_input_dim:\n        raise RuntimeError(\n            'input must have {} dimensions, got {}'.format(\n                expected_input_dim, input.dim()))\n\n    if self.input_size != input.size(-1):\n        raise RuntimeError(\n            'input.size(-1) must be equal to input_size. Expected {}, got {}'.format(\n                fn.input_size, input.size(-1)))\n    if is_input_packed:\n        mini_batch = batch_sizes[0]\n    else:\n        mini_batch = input.size(0) if self.batch_first else input.size(1)\n\n    num_directions = 2 if self.bidirectional else 1\n    expected_hidden_size = (self.num_layers * num_directions,\n                            mini_batch, self.hidden_size)\n\n    def check_hidden_size(hx, expected_hidden_size, msg='Expected hidden size {}, got {}'):\n        if tuple(hx.size()) != expected_hidden_size:\n            raise RuntimeError(msg.format(expected_hidden_size, tuple(hx.size())))\n\n    if self.mode == 'LSTM':\n        check_hidden_size(hidden[0], expected_hidden_size,\n                          'Expected hidden[0] size {}, got {}')\n        check_hidden_size(hidden[1], expected_hidden_size,\n                          'Expected hidden[1] size {}, got {}')\n    else:\n        check_hidden_size(hidden, expected_hidden_size)`\n</code></pre>\n<p>`<br>\nfn is undefined. It should be self.input_size.</p>\n<ul>\n<li>OS: Mac</li>\n<li>PyTorch version: 0.3.0</li>\n<li>How you installed PyTorch (conda, pip, source): pip</li>\n<li>Python version: 3.6</li>\n</ul>", "body_text": "Hi everyone,\nI'm implementing a model with PyTorch and realised when I call my GRU forward method, I raise an exception (due to bad shape) but there is an error in the message given due to undefined fn:\nTraceback (most recent call last):\n...\noutput, hidden = self.document_rnn(sentence_hidden_embeddings, hidden)\nFile \"/usr/local/lib/python3.6/site-packages/torch/nn/modules/module.py\", line 357, in call\nresult = self.forward(*input, *_*kwargs)\nFile \"/usr/local/lib/python3.6/site-packages/torch/nn/modules/rnn.py\", line 190, in forward\nself.check_forward_args(input, hx, batch_sizes)\nFile \"/usr/local/lib/python3.6/site-packages/torch/nn/modules/rnn.py\", line 141, in check_forward_args\nfn.input_size, input.size(-1)))\nNameError: name 'fn' is not defined\nIn the original code source:\n`\ndef check_forward_args(self, input, hidden, batch_sizes):\n    is_input_packed = batch_sizes is not None\n    expected_input_dim = 2 if is_input_packed else 3\n\n    if input.dim() != expected_input_dim:\n        raise RuntimeError(\n            'input must have {} dimensions, got {}'.format(\n                expected_input_dim, input.dim()))\n\n    if self.input_size != input.size(-1):\n        raise RuntimeError(\n            'input.size(-1) must be equal to input_size. Expected {}, got {}'.format(\n                fn.input_size, input.size(-1)))\n    if is_input_packed:\n        mini_batch = batch_sizes[0]\n    else:\n        mini_batch = input.size(0) if self.batch_first else input.size(1)\n\n    num_directions = 2 if self.bidirectional else 1\n    expected_hidden_size = (self.num_layers * num_directions,\n                            mini_batch, self.hidden_size)\n\n    def check_hidden_size(hx, expected_hidden_size, msg='Expected hidden size {}, got {}'):\n        if tuple(hx.size()) != expected_hidden_size:\n            raise RuntimeError(msg.format(expected_hidden_size, tuple(hx.size())))\n\n    if self.mode == 'LSTM':\n        check_hidden_size(hidden[0], expected_hidden_size,\n                          'Expected hidden[0] size {}, got {}')\n        check_hidden_size(hidden[1], expected_hidden_size,\n                          'Expected hidden[1] size {}, got {}')\n    else:\n        check_hidden_size(hidden, expected_hidden_size)`\n\n`\nfn is undefined. It should be self.input_size.\n\nOS: Mac\nPyTorch version: 0.3.0\nHow you installed PyTorch (conda, pip, source): pip\nPython version: 3.6", "body": "Hi everyone,\r\n\r\nI'm implementing a model with PyTorch and realised when I call my GRU forward method, I raise an exception (due to bad shape) but there is an error in the message given due to undefined fn:\r\n\r\nTraceback (most recent call last):\r\n...\r\n    output, hidden = self.document_rnn(sentence_hidden_embeddings, hidden)\r\n  File \"/usr/local/lib/python3.6/site-packages/torch/nn/modules/module.py\", line 357, in __call__\r\n    result = self.forward(*input, *_*kwargs)\r\n  File \"/usr/local/lib/python3.6/site-packages/torch/nn/modules/rnn.py\", line 190, in forward\r\n    self.check_forward_args(input, hx, batch_sizes)\r\n  **File \"/usr/local/lib/python3.6/site-packages/torch/nn/modules/rnn.py\", line 141, in check_forward_args\r\n    fn.input_size, input.size(-1)))\r\nNameError: name 'fn' is not defined**\r\n\r\nIn the original code source:\r\n\r\n`\r\ndef check_forward_args(self, input, hidden, batch_sizes):\r\n\r\n        is_input_packed = batch_sizes is not None\r\n        expected_input_dim = 2 if is_input_packed else 3\r\n\r\n        if input.dim() != expected_input_dim:\r\n            raise RuntimeError(\r\n                'input must have {} dimensions, got {}'.format(\r\n                    expected_input_dim, input.dim()))\r\n\r\n        if self.input_size != input.size(-1):\r\n            raise RuntimeError(\r\n                'input.size(-1) must be equal to input_size. Expected {}, got {}'.format(\r\n                    fn.input_size, input.size(-1)))\r\n        if is_input_packed:\r\n            mini_batch = batch_sizes[0]\r\n        else:\r\n            mini_batch = input.size(0) if self.batch_first else input.size(1)\r\n\r\n        num_directions = 2 if self.bidirectional else 1\r\n        expected_hidden_size = (self.num_layers * num_directions,\r\n                                mini_batch, self.hidden_size)\r\n\r\n        def check_hidden_size(hx, expected_hidden_size, msg='Expected hidden size {}, got {}'):\r\n            if tuple(hx.size()) != expected_hidden_size:\r\n                raise RuntimeError(msg.format(expected_hidden_size, tuple(hx.size())))\r\n\r\n        if self.mode == 'LSTM':\r\n            check_hidden_size(hidden[0], expected_hidden_size,\r\n                              'Expected hidden[0] size {}, got {}')\r\n            check_hidden_size(hidden[1], expected_hidden_size,\r\n                              'Expected hidden[1] size {}, got {}')\r\n        else:\r\n            check_hidden_size(hidden, expected_hidden_size)`\r\n`\r\nfn is undefined. It should be self.input_size.\r\n\r\n\r\n- OS: Mac\r\n- PyTorch version: 0.3.0\r\n- How you installed PyTorch (conda, pip, source): pip\r\n- Python version: 3.6"}