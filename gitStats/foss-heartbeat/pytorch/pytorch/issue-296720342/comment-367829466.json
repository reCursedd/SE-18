{"url": "https://api.github.com/repos/pytorch/pytorch/issues/comments/367829466", "html_url": "https://github.com/pytorch/pytorch/issues/5211#issuecomment-367829466", "issue_url": "https://api.github.com/repos/pytorch/pytorch/issues/5211", "id": 367829466, "node_id": "MDEyOklzc3VlQ29tbWVudDM2NzgyOTQ2Ng==", "user": {"login": "the-new-sky", "id": 11007033, "node_id": "MDQ6VXNlcjExMDA3MDMz", "avatar_url": "https://avatars0.githubusercontent.com/u/11007033?v=4", "gravatar_id": "", "url": "https://api.github.com/users/the-new-sky", "html_url": "https://github.com/the-new-sky", "followers_url": "https://api.github.com/users/the-new-sky/followers", "following_url": "https://api.github.com/users/the-new-sky/following{/other_user}", "gists_url": "https://api.github.com/users/the-new-sky/gists{/gist_id}", "starred_url": "https://api.github.com/users/the-new-sky/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/the-new-sky/subscriptions", "organizations_url": "https://api.github.com/users/the-new-sky/orgs", "repos_url": "https://api.github.com/users/the-new-sky/repos", "events_url": "https://api.github.com/users/the-new-sky/events{/privacy}", "received_events_url": "https://api.github.com/users/the-new-sky/received_events", "type": "User", "site_admin": false}, "created_at": "2018-02-22T21:33:22Z", "updated_at": "2018-02-22T21:51:39Z", "author_association": "NONE", "body_html": "<p>After a few attempts, it turns out that, at least in my case, the error occurs when the dimension 2 of the input is not correct.</p>\n<div class=\"highlight highlight-source-python\"><pre><span class=\"pl-k\">import</span> torch\n<span class=\"pl-k\">from</span> torch <span class=\"pl-k\">import</span> nn\n<span class=\"pl-k\">from</span> torch.autograd <span class=\"pl-k\">import</span> Variable\n\nmodel <span class=\"pl-k\">=</span> nn.LSTM(<span class=\"pl-c1\">5</span>, <span class=\"pl-c1\">1</span>)\n\n<span class=\"pl-c1\">input</span> <span class=\"pl-k\">=</span> Variable(torch.rand(<span class=\"pl-c1\">1</span>, <span class=\"pl-c1\">1</span>, <span class=\"pl-c1\">3</span>))  <span class=\"pl-c\"><span class=\"pl-c\">#</span> input = Variable(torch.rand(1, 1, 5)) to get it work :)</span>\nh0 <span class=\"pl-k\">=</span> Variable(torch.rand(<span class=\"pl-c1\">1</span>, <span class=\"pl-c1\">1</span>, <span class=\"pl-c1\">1</span>))\nc0 <span class=\"pl-k\">=</span> Variable(torch.rand(<span class=\"pl-c1\">1</span>, <span class=\"pl-c1\">1</span>, <span class=\"pl-c1\">1</span>))\n\n<span class=\"pl-c1\">print</span>(model(<span class=\"pl-c1\">input</span>, (h0, c0)))\n\n<span class=\"pl-s\"><span class=\"pl-pds\">'''</span></span>\n<span class=\"pl-s\">---------------------------------------------------------------------------</span>\n<span class=\"pl-s\">NameError                                 Traceback (most recent call last)</span>\n<span class=\"pl-s\">&lt;ipython-input-1-68e4878dc5e1&gt; in &lt;module&gt;()</span>\n<span class=\"pl-s\">      9 c0 = Variable(torch.rand(1, 1, 1))</span>\n<span class=\"pl-s\">     10 </span>\n<span class=\"pl-s\">---&gt; 11 print(model(input, (h0, c0)))</span>\n<span class=\"pl-s\"></span>\n<span class=\"pl-s\">/usr/local/lib/python3.5/dist-packages/torch/nn/modules/module.py in __call__(self, *input, **kwargs)</span>\n<span class=\"pl-s\">    355             result = self._slow_forward(*input, **kwargs)</span>\n<span class=\"pl-s\">    356         else:</span>\n<span class=\"pl-s\">--&gt; 357             result = self.forward(*input, **kwargs)</span>\n<span class=\"pl-s\">    358         for hook in self._forward_hooks.values():</span>\n<span class=\"pl-s\">    359             hook_result = hook(self, input, result)</span>\n<span class=\"pl-s\"></span>\n<span class=\"pl-s\">/usr/local/lib/python3.5/dist-packages/torch/nn/modules/rnn.py in forward(self, input, hx)</span>\n<span class=\"pl-s\">    188             flat_weight = None</span>\n<span class=\"pl-s\">    189 </span>\n<span class=\"pl-s\">--&gt; 190         self.check_forward_args(input, hx, batch_sizes)</span>\n<span class=\"pl-s\">    191         func = self._backend.RNN(</span>\n<span class=\"pl-s\">    192             self.mode,</span>\n<span class=\"pl-s\"></span>\n<span class=\"pl-s\">/usr/local/lib/python3.5/dist-packages/torch/nn/modules/rnn.py in check_forward_args(self, input, hidden, batch_sizes)</span>\n<span class=\"pl-s\">    139             raise RuntimeError(</span>\n<span class=\"pl-s\">    140                 'input.size(-1) must be equal to input_size. Expected {}, got {}'.format(</span>\n<span class=\"pl-s\">--&gt; 141                     fn.input_size, input.size(-1)))</span>\n<span class=\"pl-s\">    142 </span>\n<span class=\"pl-s\">    143         if is_input_packed:</span>\n<span class=\"pl-s\"></span>\n<span class=\"pl-s\">NameError: name 'fn' is not defined</span>\n<span class=\"pl-s\"><span class=\"pl-pds\">'''</span></span></pre></div>", "body_text": "After a few attempts, it turns out that, at least in my case, the error occurs when the dimension 2 of the input is not correct.\nimport torch\nfrom torch import nn\nfrom torch.autograd import Variable\n\nmodel = nn.LSTM(5, 1)\n\ninput = Variable(torch.rand(1, 1, 3))  # input = Variable(torch.rand(1, 1, 5)) to get it work :)\nh0 = Variable(torch.rand(1, 1, 1))\nc0 = Variable(torch.rand(1, 1, 1))\n\nprint(model(input, (h0, c0)))\n\n'''\n---------------------------------------------------------------------------\nNameError                                 Traceback (most recent call last)\n<ipython-input-1-68e4878dc5e1> in <module>()\n      9 c0 = Variable(torch.rand(1, 1, 1))\n     10 \n---> 11 print(model(input, (h0, c0)))\n\n/usr/local/lib/python3.5/dist-packages/torch/nn/modules/module.py in __call__(self, *input, **kwargs)\n    355             result = self._slow_forward(*input, **kwargs)\n    356         else:\n--> 357             result = self.forward(*input, **kwargs)\n    358         for hook in self._forward_hooks.values():\n    359             hook_result = hook(self, input, result)\n\n/usr/local/lib/python3.5/dist-packages/torch/nn/modules/rnn.py in forward(self, input, hx)\n    188             flat_weight = None\n    189 \n--> 190         self.check_forward_args(input, hx, batch_sizes)\n    191         func = self._backend.RNN(\n    192             self.mode,\n\n/usr/local/lib/python3.5/dist-packages/torch/nn/modules/rnn.py in check_forward_args(self, input, hidden, batch_sizes)\n    139             raise RuntimeError(\n    140                 'input.size(-1) must be equal to input_size. Expected {}, got {}'.format(\n--> 141                     fn.input_size, input.size(-1)))\n    142 \n    143         if is_input_packed:\n\nNameError: name 'fn' is not defined\n'''", "body": "After a few attempts, it turns out that, at least in my case, the error occurs when the dimension 2 of the input is not correct.\r\n```python\r\nimport torch\r\nfrom torch import nn\r\nfrom torch.autograd import Variable\r\n\r\nmodel = nn.LSTM(5, 1)\r\n\r\ninput = Variable(torch.rand(1, 1, 3))  # input = Variable(torch.rand(1, 1, 5)) to get it work :)\r\nh0 = Variable(torch.rand(1, 1, 1))\r\nc0 = Variable(torch.rand(1, 1, 1))\r\n\r\nprint(model(input, (h0, c0)))\r\n\r\n'''\r\n---------------------------------------------------------------------------\r\nNameError                                 Traceback (most recent call last)\r\n<ipython-input-1-68e4878dc5e1> in <module>()\r\n      9 c0 = Variable(torch.rand(1, 1, 1))\r\n     10 \r\n---> 11 print(model(input, (h0, c0)))\r\n\r\n/usr/local/lib/python3.5/dist-packages/torch/nn/modules/module.py in __call__(self, *input, **kwargs)\r\n    355             result = self._slow_forward(*input, **kwargs)\r\n    356         else:\r\n--> 357             result = self.forward(*input, **kwargs)\r\n    358         for hook in self._forward_hooks.values():\r\n    359             hook_result = hook(self, input, result)\r\n\r\n/usr/local/lib/python3.5/dist-packages/torch/nn/modules/rnn.py in forward(self, input, hx)\r\n    188             flat_weight = None\r\n    189 \r\n--> 190         self.check_forward_args(input, hx, batch_sizes)\r\n    191         func = self._backend.RNN(\r\n    192             self.mode,\r\n\r\n/usr/local/lib/python3.5/dist-packages/torch/nn/modules/rnn.py in check_forward_args(self, input, hidden, batch_sizes)\r\n    139             raise RuntimeError(\r\n    140                 'input.size(-1) must be equal to input_size. Expected {}, got {}'.format(\r\n--> 141                     fn.input_size, input.size(-1)))\r\n    142 \r\n    143         if is_input_packed:\r\n\r\nNameError: name 'fn' is not defined\r\n'''\r\n```"}