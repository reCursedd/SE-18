{"url": "https://api.github.com/repos/pytorch/pytorch/issues/comments/349538156", "html_url": "https://github.com/pytorch/pytorch/issues/4050#issuecomment-349538156", "issue_url": "https://api.github.com/repos/pytorch/pytorch/issues/4050", "id": 349538156, "node_id": "MDEyOklzc3VlQ29tbWVudDM0OTUzODE1Ng==", "user": {"login": "SsnL", "id": 5674597, "node_id": "MDQ6VXNlcjU2NzQ1OTc=", "avatar_url": "https://avatars2.githubusercontent.com/u/5674597?v=4", "gravatar_id": "", "url": "https://api.github.com/users/SsnL", "html_url": "https://github.com/SsnL", "followers_url": "https://api.github.com/users/SsnL/followers", "following_url": "https://api.github.com/users/SsnL/following{/other_user}", "gists_url": "https://api.github.com/users/SsnL/gists{/gist_id}", "starred_url": "https://api.github.com/users/SsnL/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/SsnL/subscriptions", "organizations_url": "https://api.github.com/users/SsnL/orgs", "repos_url": "https://api.github.com/users/SsnL/repos", "events_url": "https://api.github.com/users/SsnL/events{/privacy}", "received_events_url": "https://api.github.com/users/SsnL/received_events", "type": "User", "site_admin": false}, "created_at": "2017-12-06T05:26:18Z", "updated_at": "2017-12-06T05:32:18Z", "author_association": "CONTRIBUTOR", "body_html": "<p>Uh that is because you hold the reference to variables that are backed by the test graph. When you don't call <code>.backward()</code>, the graph is not freed. So they are not freed after that test iteration.</p>\n<p>Wrap your test code in a separate function.</p>\n<p>Also, you can use <code>volatile=True</code> at test time.</p>", "body_text": "Uh that is because you hold the reference to variables that are backed by the test graph. When you don't call .backward(), the graph is not freed. So they are not freed after that test iteration.\nWrap your test code in a separate function.\nAlso, you can use volatile=True at test time.", "body": "Uh that is because you hold the reference to variables that are backed by the test graph. When you don't call `.backward()`, the graph is not freed. So they are not freed after that test iteration. \r\n\r\nWrap your test code in a separate function. \r\n\r\nAlso, you can use `volatile=True` at test time."}