{"url": "https://api.github.com/repos/pytorch/pytorch/issues/4669", "repository_url": "https://api.github.com/repos/pytorch/pytorch", "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/4669/labels{/name}", "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/4669/comments", "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/4669/events", "html_url": "https://github.com/pytorch/pytorch/issues/4669", "id": 288564822, "node_id": "MDU6SXNzdWUyODg1NjQ4MjI=", "number": 4669, "title": "[Feature request] Gradient of potri, potrs", "user": {"login": "alexandrebone", "id": 20283677, "node_id": "MDQ6VXNlcjIwMjgzNjc3", "avatar_url": "https://avatars3.githubusercontent.com/u/20283677?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexandrebone", "html_url": "https://github.com/alexandrebone", "followers_url": "https://api.github.com/users/alexandrebone/followers", "following_url": "https://api.github.com/users/alexandrebone/following{/other_user}", "gists_url": "https://api.github.com/users/alexandrebone/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexandrebone/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexandrebone/subscriptions", "organizations_url": "https://api.github.com/users/alexandrebone/orgs", "repos_url": "https://api.github.com/users/alexandrebone/repos", "events_url": "https://api.github.com/users/alexandrebone/events{/privacy}", "received_events_url": "https://api.github.com/users/alexandrebone/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-01-15T11:35:33Z", "updated_at": "2018-11-11T04:48:30Z", "closed_at": null, "author_association": "NONE", "body_html": "<p>Hello everyone,</p>\n<p>Thank you for your amazing work.<br>\nI would be interested by the implementation of the first derivative of the potri or/and potrs operators. I can use matrix inversion instead, but it comes with a performance drop cost.</p>\n<p>Thank you again,<br>\nBest,</p>\n<p>Alex</p>", "body_text": "Hello everyone,\nThank you for your amazing work.\nI would be interested by the implementation of the first derivative of the potri or/and potrs operators. I can use matrix inversion instead, but it comes with a performance drop cost.\nThank you again,\nBest,\nAlex", "body": "Hello everyone, \r\n\r\nThank you for your amazing work. \r\nI would be interested by the implementation of the first derivative of the potri or/and potrs operators. I can use matrix inversion instead, but it comes with a performance drop cost.\r\n\r\nThank you again, \r\nBest, \r\n\r\nAlex"}