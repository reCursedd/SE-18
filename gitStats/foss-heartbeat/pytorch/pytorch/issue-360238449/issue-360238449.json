{"url": "https://api.github.com/repos/pytorch/pytorch/issues/11695", "repository_url": "https://api.github.com/repos/pytorch/pytorch", "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/11695/labels{/name}", "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/11695/comments", "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/11695/events", "html_url": "https://github.com/pytorch/pytorch/issues/11695", "id": 360238449, "node_id": "MDU6SXNzdWUzNjAyMzg0NDk=", "number": 11695, "title": "Feature Request: Automatically Cast to torch tensor", "user": {"login": "petered", "id": 1148799, "node_id": "MDQ6VXNlcjExNDg3OTk=", "avatar_url": "https://avatars3.githubusercontent.com/u/1148799?v=4", "gravatar_id": "", "url": "https://api.github.com/users/petered", "html_url": "https://github.com/petered", "followers_url": "https://api.github.com/users/petered/followers", "following_url": "https://api.github.com/users/petered/following{/other_user}", "gists_url": "https://api.github.com/users/petered/gists{/gist_id}", "starred_url": "https://api.github.com/users/petered/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/petered/subscriptions", "organizations_url": "https://api.github.com/users/petered/orgs", "repos_url": "https://api.github.com/users/petered/repos", "events_url": "https://api.github.com/users/petered/events{/privacy}", "received_events_url": "https://api.github.com/users/petered/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 466131885, "node_id": "MDU6TGFiZWw0NjYxMzE4ODU=", "url": "https://api.github.com/repos/pytorch/pytorch/labels/needs%20discussion", "name": "needs discussion", "color": "cc317c", "default": false}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-09-14T09:59:39Z", "updated_at": "2018-10-01T04:17:20Z", "closed_at": null, "author_association": "NONE", "body_html": "<p>Numpy automatically casts inputs to ndarrays when doing operations on them.  For example:</p>\n<pre><code>&gt;&gt;&gt; np.sum([1, 2])\n3\n&gt;&gt;&gt; np.sqrt(9)\n3.0\n</code></pre>\n<p>Pytorch fails instead:</p>\n<pre><code>&gt;&gt;&gt; torch.sum([1, 2])\nTraceback (most recent call last):\n  File \"&lt;stdin&gt;\", line 1, in &lt;module&gt;\nTypeError: sum(): argument 'input' (position 1) must be Tensor, not list\n&gt;&gt;&gt; torch.sqrt(9)\nTraceback (most recent call last):\n  File \"&lt;stdin&gt;\", line 1, in &lt;module&gt;\nTypeError: sqrt(): argument 'input' (position 1) must be Tensor, not int\n</code></pre>\n<p>It would be nice for Pytorch to do type-casting internally like numpy does.</p>", "body_text": "Numpy automatically casts inputs to ndarrays when doing operations on them.  For example:\n>>> np.sum([1, 2])\n3\n>>> np.sqrt(9)\n3.0\n\nPytorch fails instead:\n>>> torch.sum([1, 2])\nTraceback (most recent call last):\n  File \"<stdin>\", line 1, in <module>\nTypeError: sum(): argument 'input' (position 1) must be Tensor, not list\n>>> torch.sqrt(9)\nTraceback (most recent call last):\n  File \"<stdin>\", line 1, in <module>\nTypeError: sqrt(): argument 'input' (position 1) must be Tensor, not int\n\nIt would be nice for Pytorch to do type-casting internally like numpy does.", "body": "Numpy automatically casts inputs to ndarrays when doing operations on them.  For example:\r\n ```\r\n>>> np.sum([1, 2])\r\n3\r\n>>> np.sqrt(9)\r\n3.0\r\n```\r\nPytorch fails instead:\r\n```\r\n>>> torch.sum([1, 2])\r\nTraceback (most recent call last):\r\n  File \"<stdin>\", line 1, in <module>\r\nTypeError: sum(): argument 'input' (position 1) must be Tensor, not list\r\n>>> torch.sqrt(9)\r\nTraceback (most recent call last):\r\n  File \"<stdin>\", line 1, in <module>\r\nTypeError: sqrt(): argument 'input' (position 1) must be Tensor, not int\r\n```\r\n\r\nIt would be nice for Pytorch to do type-casting internally like numpy does."}