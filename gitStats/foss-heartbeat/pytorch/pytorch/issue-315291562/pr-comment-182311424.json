{"url": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/182311424", "pull_request_review_id": 113079571, "id": 182311424, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MjMxMTQyNA==", "diff_hunk": "@@ -6546,6 +6546,40 @@ def test_unique_cuda(self):\n             lambda: torch.unique(torch.cuda.FloatTensor([0., 1.])),\n         )\n \n+    def test_bincount_cpu(self):\n+        # test weights\n+        byte_counts = torch.bincount(torch.ByteTensor([0, 1, 1, 1, 4]),\n+                                     torch.FloatTensor([.1, .2, .3, .4, .5]))\n+        self.assertEqual(torch.DoubleTensor([0.1, 0.9, 0, 0, 0.5]), byte_counts)\n+        # test tensor method without weights\n+        long_counts = torch.LongTensor([0, 3, 2, 1, 3]).bincount()\n+        self.assertEqual(torch.LongTensor([1, 1, 1, 2]), long_counts)\n+        # test minlength functionality\n+        int_counts = torch.bincount(torch.IntTensor([1, 1, 1, 1]), minlength=5)", "path": "test/test_torch.py", "position": null, "original_position": 13, "commit_id": "398cfbc3a790dda0aa46e99b66d0d82b4095a7b1", "original_commit_id": "002f411b3eaa11952b3930234713ee7110a6887f", "user": {"login": "SsnL", "id": 5674597, "node_id": "MDQ6VXNlcjU2NzQ1OTc=", "avatar_url": "https://avatars2.githubusercontent.com/u/5674597?v=4", "gravatar_id": "", "url": "https://api.github.com/users/SsnL", "html_url": "https://github.com/SsnL", "followers_url": "https://api.github.com/users/SsnL/followers", "following_url": "https://api.github.com/users/SsnL/following{/other_user}", "gists_url": "https://api.github.com/users/SsnL/gists{/gist_id}", "starred_url": "https://api.github.com/users/SsnL/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/SsnL/subscriptions", "organizations_url": "https://api.github.com/users/SsnL/orgs", "repos_url": "https://api.github.com/users/SsnL/repos", "events_url": "https://api.github.com/users/SsnL/events{/privacy}", "received_events_url": "https://api.github.com/users/SsnL/received_events", "type": "User", "site_admin": false}, "body": "Can you also have a test for `minlength=0` and make sure if behaves correctly?", "created_at": "2018-04-18T05:19:32Z", "updated_at": "2018-11-23T15:42:41Z", "html_url": "https://github.com/pytorch/pytorch/pull/6688#discussion_r182311424", "pull_request_url": "https://api.github.com/repos/pytorch/pytorch/pulls/6688", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/182311424"}, "html": {"href": "https://github.com/pytorch/pytorch/pull/6688#discussion_r182311424"}, "pull_request": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/6688"}}, "body_html": "<p>Can you also have a test for <code>minlength=0</code> and make sure if behaves correctly?</p>", "body_text": "Can you also have a test for minlength=0 and make sure if behaves correctly?"}