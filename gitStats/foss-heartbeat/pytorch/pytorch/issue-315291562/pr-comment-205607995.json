{"url": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/205607995", "pull_request_review_id": 140915534, "id": 205607995, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwNTYwNzk5NQ==", "diff_hunk": "@@ -597,6 +597,42 @@ def parse_kwargs(desc):\n             [ 0.,  0.,  0.]])\n \"\"\")\n \n+add_docstr(torch.bincount,\n+           r\"\"\"\n+bincount(self, weights=None, minlength=0) -> Tensor\n+\n+Count the frequency of each value in an array of non-negative ints.\n+\n+The number of bins (size 1) is one larger than the largest value in\n+:attr:`input`. If :attr:`minlength` is specified, the number of bins is at least\n+:attr:`minlength`. If ``n`` is the value at position ``i``,\n+:math:`out[n] += weights[i]` if :attr:`weights` is specified else\n+:math:`out[n] += 1`.\n+\n+Arguments:\n+    input (Tensor): 1-d int tensor\n+    weights (Tensor): optional, weight for each value in the input tensor.\n+        Should be of same size as input tensor.\n+    minlength (int): optional, min number of bins. Should be non-negative.\n+\n+Shape:\n+    output (Tensor): ``Size([max(input) + 1])``\n+\n+Example::\n+\n+    >>> input = torch.randint(0, 8, (5,), dtype=torch.int64)\n+    >>> weights = torch.linspace(0, 1, steps=5)\n+    >>> input, weights\n+    (tensor([4, 3, 6, 3, 4]),\n+     tensor([ 0.0000,  0.2500,  0.5000,  0.7500,  1.0000])\n+\n+    >>> torch.bincount(input)\n+    tensor([0, 0, 0, 2, 2, 0, 1])\n+\n+    >>> input.bincount(weights)", "path": "torch/_torch_docs.py", "position": 36, "original_position": 36, "commit_id": "398cfbc3a790dda0aa46e99b66d0d82b4095a7b1", "original_commit_id": "398cfbc3a790dda0aa46e99b66d0d82b4095a7b1", "user": {"login": "weiyangfb", "id": 38509346, "node_id": "MDQ6VXNlcjM4NTA5MzQ2", "avatar_url": "https://avatars1.githubusercontent.com/u/38509346?v=4", "gravatar_id": "", "url": "https://api.github.com/users/weiyangfb", "html_url": "https://github.com/weiyangfb", "followers_url": "https://api.github.com/users/weiyangfb/followers", "following_url": "https://api.github.com/users/weiyangfb/following{/other_user}", "gists_url": "https://api.github.com/users/weiyangfb/gists{/gist_id}", "starred_url": "https://api.github.com/users/weiyangfb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/weiyangfb/subscriptions", "organizations_url": "https://api.github.com/users/weiyangfb/orgs", "repos_url": "https://api.github.com/users/weiyangfb/repos", "events_url": "https://api.github.com/users/weiyangfb/events{/privacy}", "received_events_url": "https://api.github.com/users/weiyangfb/received_events", "type": "User", "site_admin": false}, "body": "hmmm.... I guess I tried to follow the exmple https://github.com/chintak/pytorch/blob/398cfbc3a790dda0aa46e99b66d0d82b4095a7b1/torch/_torch_docs.py#L623-L633, but got:\r\n\r\n```\r\n>>> input = torch.randint(0, 8, (5,), dtype=torch.int64)\r\n>>> weights = torch.randn(5, dtype=torch.float64)\r\n>>> print(torch.bincount(input))\r\ntensor([0, 1, 0, 1, 1, 1, 1])\r\n\r\n>>> print(torch.bincount(weights))\r\nRuntimeError: \"bincount\" not implemented for 'torch.DoubleTensor'\r\n```\r\n\r\nMaybe I am missing something", "created_at": "2018-07-26T21:26:52Z", "updated_at": "2018-11-23T15:48:16Z", "html_url": "https://github.com/pytorch/pytorch/pull/6688#discussion_r205607995", "pull_request_url": "https://api.github.com/repos/pytorch/pytorch/pulls/6688", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/205607995"}, "html": {"href": "https://github.com/pytorch/pytorch/pull/6688#discussion_r205607995"}, "pull_request": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/6688"}}, "body_html": "<p>hmmm.... I guess I tried to follow the exmple <a href=\"https://github.com/chintak/pytorch/blob/398cfbc3a790dda0aa46e99b66d0d82b4095a7b1/torch/_torch_docs.py#L623-L633\">https://github.com/chintak/pytorch/blob/398cfbc3a790dda0aa46e99b66d0d82b4095a7b1/torch/_torch_docs.py#L623-L633</a>, but got:</p>\n<pre><code>&gt;&gt;&gt; input = torch.randint(0, 8, (5,), dtype=torch.int64)\n&gt;&gt;&gt; weights = torch.randn(5, dtype=torch.float64)\n&gt;&gt;&gt; print(torch.bincount(input))\ntensor([0, 1, 0, 1, 1, 1, 1])\n\n&gt;&gt;&gt; print(torch.bincount(weights))\nRuntimeError: \"bincount\" not implemented for 'torch.DoubleTensor'\n</code></pre>\n<p>Maybe I am missing something</p>", "body_text": "hmmm.... I guess I tried to follow the exmple https://github.com/chintak/pytorch/blob/398cfbc3a790dda0aa46e99b66d0d82b4095a7b1/torch/_torch_docs.py#L623-L633, but got:\n>>> input = torch.randint(0, 8, (5,), dtype=torch.int64)\n>>> weights = torch.randn(5, dtype=torch.float64)\n>>> print(torch.bincount(input))\ntensor([0, 1, 0, 1, 1, 1, 1])\n\n>>> print(torch.bincount(weights))\nRuntimeError: \"bincount\" not implemented for 'torch.DoubleTensor'\n\nMaybe I am missing something", "in_reply_to_id": 205573133}