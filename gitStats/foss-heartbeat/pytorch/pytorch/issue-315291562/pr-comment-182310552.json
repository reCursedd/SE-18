{"url": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/182310552", "pull_request_review_id": 113078677, "id": 182310552, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MjMxMDU1Mg==", "diff_hunk": "@@ -465,3 +466,64 @@ def argmin(input, dim=None, keepdim=False):\n     if dim is None:\n         return torch._argmin(input.contiguous().view(-1), dim=0, keepdim=False)\n     return torch._argmin(input, dim, keepdim)\n+\n+\n+def bincount(input, weights=None, minlength=0):\n+    \"\"\"Count the frequency of each value in an array of non-negative ints.\n+\n+    The number of bins (size 1) is one larger than the largest value in\n+    ``input``. If ``minlength`` is specified, the number of bins is at least\n+    ``minlength``. If ``n`` is the value at position ``i``,\n+    ``out[n] += weights[i]`` if ``weights`` is specified else ``out[n] += 1``.\n+\n+    Arguments:\n+        input (Tensor): 1-d int tensor\n+        weights (Tensor): optional, weight for each value in the input tensor.\n+            Should be of same size as input tensor.\n+        minlength (int): optional, min number of bins in the output tensor.\n+            Should be non-negative.\n+\n+    Example::\n+\n+        >>> input = torch.randint(0, 8, (5,), dtype=torch.int64)\n+        >>> weights = torch.randint(10, (5,), dtype=torch.float32) / 10", "path": "torch/functional.py", "position": null, "original_position": 32, "commit_id": "398cfbc3a790dda0aa46e99b66d0d82b4095a7b1", "original_commit_id": "002f411b3eaa11952b3930234713ee7110a6887f", "user": {"login": "chintak", "id": 3398558, "node_id": "MDQ6VXNlcjMzOTg1NTg=", "avatar_url": "https://avatars2.githubusercontent.com/u/3398558?v=4", "gravatar_id": "", "url": "https://api.github.com/users/chintak", "html_url": "https://github.com/chintak", "followers_url": "https://api.github.com/users/chintak/followers", "following_url": "https://api.github.com/users/chintak/following{/other_user}", "gists_url": "https://api.github.com/users/chintak/gists{/gist_id}", "starred_url": "https://api.github.com/users/chintak/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/chintak/subscriptions", "organizations_url": "https://api.github.com/users/chintak/orgs", "repos_url": "https://api.github.com/users/chintak/repos", "events_url": "https://api.github.com/users/chintak/events{/privacy}", "received_events_url": "https://api.github.com/users/chintak/received_events", "type": "User", "site_admin": false}, "body": "\ud83d\udc4d ", "created_at": "2018-04-18T05:11:20Z", "updated_at": "2018-11-23T15:42:40Z", "html_url": "https://github.com/pytorch/pytorch/pull/6688#discussion_r182310552", "pull_request_url": "https://api.github.com/repos/pytorch/pytorch/pulls/6688", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/182310552"}, "html": {"href": "https://github.com/pytorch/pytorch/pull/6688#discussion_r182310552"}, "pull_request": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/6688"}}, "body_html": "<p><g-emoji class=\"g-emoji\" alias=\"+1\" fallback-src=\"https://assets-cdn.github.com/images/icons/emoji/unicode/1f44d.png\">\ud83d\udc4d</g-emoji></p>", "body_text": "\ud83d\udc4d", "in_reply_to_id": 182304116}