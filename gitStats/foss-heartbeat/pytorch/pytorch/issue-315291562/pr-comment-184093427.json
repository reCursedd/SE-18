{"url": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/184093427", "pull_request_review_id": 115218110, "id": 184093427, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4NDA5MzQyNw==", "diff_hunk": "@@ -0,0 +1,57 @@\n+#include \"ATen/ATen.h\"\n+#include \"ATen/cuda/CUDAApplyUtils.cuh\"\n+\n+#include <type_traits>\n+\n+namespace at { namespace native {\n+\n+///////////////// bincount /////////////////\n+namespace {\n+template <typename weights_t, typename integral_t>\n+Tensor _bincount_cuda_template(\n+    const Tensor& self,\n+    const Tensor& weights,\n+    int64_t minlength) {\n+  if (minlength < 0) {\n+    AT_ERROR(\"minlength should be >= 0\");\n+  }\n+  if (self.dim() != 1 || self.numel() == 0 ||\n+      !isIntegralType(self.type().scalarType()) ||\n+      (!std::is_same<integral_t, uint8_t>::value &&\n+       *self.min().toBackend(kCPU).data<integral_t>() < 0)) {", "path": "aten/src/ATen/native/cuda/SummaryOps.cu", "position": null, "original_position": 21, "commit_id": "398cfbc3a790dda0aa46e99b66d0d82b4095a7b1", "original_commit_id": "c70f8328a9868a616dbe939a7635a9dd0ae465b4", "user": {"login": "zou3519", "id": 5652049, "node_id": "MDQ6VXNlcjU2NTIwNDk=", "avatar_url": "https://avatars3.githubusercontent.com/u/5652049?v=4", "gravatar_id": "", "url": "https://api.github.com/users/zou3519", "html_url": "https://github.com/zou3519", "followers_url": "https://api.github.com/users/zou3519/followers", "following_url": "https://api.github.com/users/zou3519/following{/other_user}", "gists_url": "https://api.github.com/users/zou3519/gists{/gist_id}", "starred_url": "https://api.github.com/users/zou3519/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/zou3519/subscriptions", "organizations_url": "https://api.github.com/users/zou3519/orgs", "repos_url": "https://api.github.com/users/zou3519/repos", "events_url": "https://api.github.com/users/zou3519/events{/privacy}", "received_events_url": "https://api.github.com/users/zou3519/received_events", "type": "User", "site_admin": false}, "body": "`min()` will launch another kernel... I think it's okay if we forego this safety check and add it as an assert inside a kernel", "created_at": "2018-04-25T15:00:56Z", "updated_at": "2018-11-23T15:43:10Z", "html_url": "https://github.com/pytorch/pytorch/pull/6688#discussion_r184093427", "pull_request_url": "https://api.github.com/repos/pytorch/pytorch/pulls/6688", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/184093427"}, "html": {"href": "https://github.com/pytorch/pytorch/pull/6688#discussion_r184093427"}, "pull_request": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/6688"}}, "body_html": "<p><code>min()</code> will launch another kernel... I think it's okay if we forego this safety check and add it as an assert inside a kernel</p>", "body_text": "min() will launch another kernel... I think it's okay if we forego this safety check and add it as an assert inside a kernel"}