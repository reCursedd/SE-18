{"url": "https://api.github.com/repos/pytorch/pytorch/issues/7446", "repository_url": "https://api.github.com/repos/pytorch/pytorch", "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/7446/labels{/name}", "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/7446/comments", "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/7446/events", "html_url": "https://github.com/pytorch/pytorch/pull/7446", "id": 321761828, "node_id": "MDExOlB1bGxSZXF1ZXN0MTg3MDY3NTU5", "number": 7446, "title": "Provide default implementation of clone() in base module", "user": {"login": "goldsborough", "id": 6429851, "node_id": "MDQ6VXNlcjY0Mjk4NTE=", "avatar_url": "https://avatars3.githubusercontent.com/u/6429851?v=4", "gravatar_id": "", "url": "https://api.github.com/users/goldsborough", "html_url": "https://github.com/goldsborough", "followers_url": "https://api.github.com/users/goldsborough/followers", "following_url": "https://api.github.com/users/goldsborough/following{/other_user}", "gists_url": "https://api.github.com/users/goldsborough/gists{/gist_id}", "starred_url": "https://api.github.com/users/goldsborough/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/goldsborough/subscriptions", "organizations_url": "https://api.github.com/users/goldsborough/orgs", "repos_url": "https://api.github.com/users/goldsborough/repos", "events_url": "https://api.github.com/users/goldsborough/events{/privacy}", "received_events_url": "https://api.github.com/users/goldsborough/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2018-05-09T23:40:31Z", "updated_at": "2018-05-10T22:29:06Z", "closed_at": "2018-05-10T07:49:30Z", "author_association": "CONTRIBUTOR", "pull_request": {"url": "https://api.github.com/repos/pytorch/pytorch/pulls/7446", "html_url": "https://github.com/pytorch/pytorch/pull/7446", "diff_url": "https://github.com/pytorch/pytorch/pull/7446.diff", "patch_url": "https://github.com/pytorch/pytorch/pull/7446.patch"}, "body_html": "<p>This PR gives <code>torch::nn::Module::clone()</code> a default implementation, which throws the equivalent of <code>NotImplementedError</code>, instead of being pure virtual. This is because it should be possible to subclass <code>torch::nn::Module</code> without having to override<code>clone()</code>, when cloneing behavior is not required (this will very often be the case).</p>\n<p>I have placed <code>________name________</code> placeholders where I will insert <code>name()</code> calls from my other PR <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load issue title\" data-id=\"321430619\" data-permission-text=\"Issue title is private\" data-url=\"https://github.com/pytorch/pytorch/issues/7409\" data-hovercard-type=\"pull_request\" data-hovercard-url=\"/pytorch/pytorch/pull/7409/hovercard\" href=\"https://github.com/pytorch/pytorch/pull/7409\">#7409</a></p>\n<p><a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=3605224\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/ebetica\">@ebetica</a> <a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=4583066\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/apaszke\">@apaszke</a></p>", "body_text": "This PR gives torch::nn::Module::clone() a default implementation, which throws the equivalent of NotImplementedError, instead of being pure virtual. This is because it should be possible to subclass torch::nn::Module without having to overrideclone(), when cloneing behavior is not required (this will very often be the case).\nI have placed ________name________ placeholders where I will insert name() calls from my other PR #7409\n@ebetica @apaszke", "body": "This PR gives `torch::nn::Module::clone()` a default implementation, which throws the equivalent of `NotImplementedError`, instead of being pure virtual. This is because it should be possible to subclass `torch::nn::Module` without having to override`clone()`, when cloneing behavior is not required (this will very often be the case).\r\n\r\nI have placed `________name________` placeholders where I will insert `name()` calls from my other PR #7409 \r\n\r\n@ebetica @apaszke "}