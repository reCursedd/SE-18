{"url": "https://api.github.com/repos/pytorch/pytorch/issues/comments/255390317", "html_url": "https://github.com/pytorch/pytorch/issues/139#issuecomment-255390317", "issue_url": "https://api.github.com/repos/pytorch/pytorch/issues/139", "id": 255390317, "node_id": "MDEyOklzc3VlQ29tbWVudDI1NTM5MDMxNw==", "user": {"login": "apaszke", "id": 4583066, "node_id": "MDQ6VXNlcjQ1ODMwNjY=", "avatar_url": "https://avatars3.githubusercontent.com/u/4583066?v=4", "gravatar_id": "", "url": "https://api.github.com/users/apaszke", "html_url": "https://github.com/apaszke", "followers_url": "https://api.github.com/users/apaszke/followers", "following_url": "https://api.github.com/users/apaszke/following{/other_user}", "gists_url": "https://api.github.com/users/apaszke/gists{/gist_id}", "starred_url": "https://api.github.com/users/apaszke/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/apaszke/subscriptions", "organizations_url": "https://api.github.com/users/apaszke/orgs", "repos_url": "https://api.github.com/users/apaszke/repos", "events_url": "https://api.github.com/users/apaszke/events{/privacy}", "received_events_url": "https://api.github.com/users/apaszke/received_events", "type": "User", "site_admin": false}, "created_at": "2016-10-21T14:21:51Z", "updated_at": "2016-10-21T14:21:51Z", "author_association": "MEMBER", "body_html": "<p>Hm, this is tricky. I think <code>cudaHostRegister</code> not only does the syscalls that page lock the memory, but it also registers it in its own data structures (it doesn't treat manually locked memory as pinned). I don't think there's any way to transfer this, especially that different processes might unlock it, while it's still being used somewhere else. I'd be for closing this issue, it's pretty complex.</p>", "body_text": "Hm, this is tricky. I think cudaHostRegister not only does the syscalls that page lock the memory, but it also registers it in its own data structures (it doesn't treat manually locked memory as pinned). I don't think there's any way to transfer this, especially that different processes might unlock it, while it's still being used somewhere else. I'd be for closing this issue, it's pretty complex.", "body": "Hm, this is tricky. I think `cudaHostRegister` not only does the syscalls that page lock the memory, but it also registers it in its own data structures (it doesn't treat manually locked memory as pinned). I don't think there's any way to transfer this, especially that different processes might unlock it, while it's still being used somewhere else. I'd be for closing this issue, it's pretty complex.\n"}