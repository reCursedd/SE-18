{"url": "https://api.github.com/repos/pytorch/pytorch/issues/comments/256967194", "html_url": "https://github.com/pytorch/pytorch/issues/139#issuecomment-256967194", "issue_url": "https://api.github.com/repos/pytorch/pytorch/issues/139", "id": 256967194, "node_id": "MDEyOklzc3VlQ29tbWVudDI1Njk2NzE5NA==", "user": {"login": "ngimel", "id": 15841449, "node_id": "MDQ6VXNlcjE1ODQxNDQ5", "avatar_url": "https://avatars3.githubusercontent.com/u/15841449?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ngimel", "html_url": "https://github.com/ngimel", "followers_url": "https://api.github.com/users/ngimel/followers", "following_url": "https://api.github.com/users/ngimel/following{/other_user}", "gists_url": "https://api.github.com/users/ngimel/gists{/gist_id}", "starred_url": "https://api.github.com/users/ngimel/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ngimel/subscriptions", "organizations_url": "https://api.github.com/users/ngimel/orgs", "repos_url": "https://api.github.com/users/ngimel/repos", "events_url": "https://api.github.com/users/ngimel/events{/privacy}", "received_events_url": "https://api.github.com/users/ngimel/received_events", "type": "User", "site_admin": false}, "created_at": "2016-10-28T16:33:54Z", "updated_at": "2016-10-28T16:35:06Z", "author_association": "CONTRIBUTOR", "body_html": "<p><a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=655866\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/colesbury\">@colesbury</a>, there's nothing special about copying to pinned memory, it should not be going at 3 GB/s on any reasonable CPU. What I think is happening is host mem bandwidth is depleted by image transformations in the different threads. For each image, data augmentation (ColorJitter, Lighting, Normalize etc) is &gt;=10 image reads/writes, and all that consumes host mem bandwidth. Offloading image transformations to GPU might help.<br>\n<a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=4583066\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/apaszke\">@apaszke</a>, I don't know right away, I'll ask.</p>", "body_text": "@colesbury, there's nothing special about copying to pinned memory, it should not be going at 3 GB/s on any reasonable CPU. What I think is happening is host mem bandwidth is depleted by image transformations in the different threads. For each image, data augmentation (ColorJitter, Lighting, Normalize etc) is >=10 image reads/writes, and all that consumes host mem bandwidth. Offloading image transformations to GPU might help.\n@apaszke, I don't know right away, I'll ask.", "body": "@colesbury, there's nothing special about copying to pinned memory, it should not be going at 3 GB/s on any reasonable CPU. What I think is happening is host mem bandwidth is depleted by image transformations in the different threads. For each image, data augmentation (ColorJitter, Lighting, Normalize etc) is >=10 image reads/writes, and all that consumes host mem bandwidth. Offloading image transformations to GPU might help. \n@apaszke, I don't know right away, I'll ask. \n"}