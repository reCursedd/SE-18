{"url": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/190364312", "pull_request_review_id": 122724358, "id": 190364312, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5MDM2NDMxMg==", "diff_hunk": "@@ -154,6 +91,126 @@ Vec256<double> inline max(const Vec256<double>& a, const Vec256<double>& b) {\n   return _mm256_max_pd(a, b);\n }\n \n-#endif\n+template <>\n+Vec256<double> inline min(const Vec256<double>& a, const Vec256<double>& b) {\n+  return _mm256_min_pd(a, b);\n+}\n+\n+template <>\n+Vec256<double> map(double (*f)(double), Vec256<double> x) = delete;\n+\n+template <>\n+Vec256<double> abs(Vec256<double> x) {\n+  auto mask = _mm256_set1_pd(-0.f);\n+  return _mm256_andnot_pd(mask, x);\n+}\n+\n+template <>\n+Vec256<double> acos(Vec256<double> x) {\n+  return Vec256<double>(Sleef_acosd4_u10(x));\n+}\n \n-}}}\n+template <>\n+Vec256<double> asin(Vec256<double> x) {\n+  return Vec256<double>(Sleef_asind4_u10(x));\n+}\n+\n+template <>\n+Vec256<double> atan(Vec256<double> x) {\n+  return Vec256<double>(Sleef_atand4_u10(x));\n+}\n+\n+template <>\n+Vec256<double> erf(Vec256<double> x) {\n+  return Vec256<double>(Sleef_erfd4_u10(x));\n+}\n+\n+template <>\n+Vec256<double> exp(Vec256<double> x) {\n+  return Vec256<double>(Sleef_expd4_u10(x));\n+}\n+\n+template <>\n+Vec256<double> expm1(Vec256<double> x) {\n+  return Vec256<double>(Sleef_expm1d4_u10(x));\n+}\n+\n+template <>\n+Vec256<double> log(Vec256<double> x) {\n+  return Vec256<double>(Sleef_logd4_u10(x));\n+}\n+\n+template <>\n+Vec256<double> log2(Vec256<double> x) {\n+  return Vec256<double>(Sleef_log2d4_u10(x));\n+}\n+\n+template <>\n+Vec256<double> log10(Vec256<double> x) {\n+  return Vec256<double>(Sleef_log10d4_u10(x));\n+}\n+\n+template <>\n+Vec256<double> log1p(Vec256<double> x) {\n+  return Vec256<double>(Sleef_log1pd4_u10(x));\n+}\n+\n+template <>\n+Vec256<double> sin(Vec256<double> x) = delete;\n+\n+template <>\n+Vec256<double> cos(Vec256<double> x) = delete;\n+\n+template <>\n+Vec256<double> ceil(Vec256<double> x) {\n+  return _mm256_ceil_pd(x);\n+}\n+\n+template <>\n+Vec256<double> floor(Vec256<double> x) {\n+  return _mm256_floor_pd(x);\n+}\n+\n+template <>\n+Vec256<double> round(Vec256<double> x) {\n+  return _mm256_round_pd(\n+      x, (_MM_FROUND_TO_NEAREST_INT | _MM_FROUND_NO_EXC));\n+}\n+\n+template <>\n+Vec256<double> tanh(Vec256<double> x) {\n+  return Vec256<double>(Sleef_tanhd4_u10(x));\n+}\n+\n+template <>\n+Vec256<double> trunc(Vec256<double> x) {\n+  return _mm256_round_pd(x, (_MM_FROUND_TO_ZERO | _MM_FROUND_NO_EXC));\n+}\n+\n+template <>\n+Vec256<double> sqrt(Vec256<double> x) {\n+  return _mm256_sqrt_pd(x);\n+}\n+\n+template <>\n+Vec256<double> reciprocal(Vec256<double> x) {\n+  return _mm256_div_pd(_mm256_set1_pd(1), x);\n+}\n+\n+template <>\n+Vec256<double> rsqrt(Vec256<double> x) {\n+  return reciprocal(sqrt(x));\n+}\n+\n+template <>\n+Vec256<double> sigmoid(Vec256<double> x) {\n+  return _mm256_div_pd(\n+      _mm256_set1_pd(1),\n+      _mm256_add_pd(\n+          _mm256_set1_pd(1),\n+          exp(Vec256<double>(_mm256_sub_pd(_mm256_set1_pd(0), x)))));", "path": "aten/src/ATen/cpu/vec256/vec256_double.h", "position": 267, "original_position": 228, "commit_id": "7d71bee290679800bae475a261ac70f97ad1b472", "original_commit_id": "421e042c7a71184d3bbea8a414812bc38f0b4203", "user": {"login": "cpuhrsch", "id": 1716488, "node_id": "MDQ6VXNlcjE3MTY0ODg=", "avatar_url": "https://avatars1.githubusercontent.com/u/1716488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cpuhrsch", "html_url": "https://github.com/cpuhrsch", "followers_url": "https://api.github.com/users/cpuhrsch/followers", "following_url": "https://api.github.com/users/cpuhrsch/following{/other_user}", "gists_url": "https://api.github.com/users/cpuhrsch/gists{/gist_id}", "starred_url": "https://api.github.com/users/cpuhrsch/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cpuhrsch/subscriptions", "organizations_url": "https://api.github.com/users/cpuhrsch/orgs", "repos_url": "https://api.github.com/users/cpuhrsch/repos", "events_url": "https://api.github.com/users/cpuhrsch/events{/privacy}", "received_events_url": "https://api.github.com/users/cpuhrsch/received_events", "type": "User", "site_admin": false}, "body": "No", "created_at": "2018-05-23T19:02:09Z", "updated_at": "2018-11-23T15:44:35Z", "html_url": "https://github.com/pytorch/pytorch/pull/7655#discussion_r190364312", "pull_request_url": "https://api.github.com/repos/pytorch/pytorch/pulls/7655", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/190364312"}, "html": {"href": "https://github.com/pytorch/pytorch/pull/7655#discussion_r190364312"}, "pull_request": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/7655"}}, "body_html": "<p>No</p>", "body_text": "No", "in_reply_to_id": 190207915}