{"url": "https://api.github.com/repos/pytorch/pytorch/issues/1150", "repository_url": "https://api.github.com/repos/pytorch/pytorch", "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/1150/labels{/name}", "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/1150/comments", "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/1150/events", "html_url": "https://github.com/pytorch/pytorch/issues/1150", "id": 218427556, "node_id": "MDU6SXNzdWUyMTg0Mjc1NTY=", "number": 1150, "title": "Why torch.cuda.comm.broadcast(tensor, devices) choose to ignore devices[0] if tensor is already on GPU", "user": {"login": "nicklhy", "id": 1146226, "node_id": "MDQ6VXNlcjExNDYyMjY=", "avatar_url": "https://avatars0.githubusercontent.com/u/1146226?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nicklhy", "html_url": "https://github.com/nicklhy", "followers_url": "https://api.github.com/users/nicklhy/followers", "following_url": "https://api.github.com/users/nicklhy/following{/other_user}", "gists_url": "https://api.github.com/users/nicklhy/gists{/gist_id}", "starred_url": "https://api.github.com/users/nicklhy/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nicklhy/subscriptions", "organizations_url": "https://api.github.com/users/nicklhy/orgs", "repos_url": "https://api.github.com/users/nicklhy/repos", "events_url": "https://api.github.com/users/nicklhy/events{/privacy}", "received_events_url": "https://api.github.com/users/nicklhy/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 466131885, "node_id": "MDU6TGFiZWw0NjYxMzE4ODU=", "url": "https://api.github.com/repos/pytorch/pytorch/labels/needs%20discussion", "name": "needs discussion", "color": "cc317c", "default": false}, {"id": 443483881, "node_id": "MDU6TGFiZWw0NDM0ODM4ODE=", "url": "https://api.github.com/repos/pytorch/pytorch/labels/todo", "name": "todo", "color": "c2e0c6", "default": false}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2017-03-31T08:07:12Z", "updated_at": "2017-09-13T00:50:37Z", "closed_at": null, "author_association": "NONE", "body_html": "<p>Why torch.cuda.comm.broadcast(tensor, devices) choose to ignore devices[0] if tensor is already on GPU(line 22-25 in <a href=\"https://github.com/pytorch/pytorch/blob/master/torch/cuda/comm.py\">torch/cuda/comm.py</a>)? A simple test script below shows how this function may produce different results.</p>\n<pre><code>import torch\n\ndef test1():\n    x = torch.Tensor(10, 10)\n    x_gpus = torch.cuda.comm.broadcast(x, [2, 3])\n    print([t.get_device() for t in x_gpus])\n\ndef test2():\n    x = torch.Tensor(10, 10).cuda()\n    x_gpus = torch.cuda.comm.broadcast(x, [2, 3])\n    print([t.get_device() for t in x_gpus])\n\nif __name__ == '__main__':\n    test1() # -&gt; [2, 3]\n    test2() # -&gt; [0, 3]\n</code></pre>\n<p>My model training code could crash for this if I choose to run it on a different device than gpu0. You can refer the details in <a href=\"https://discuss.pytorch.org/t/tensors-are-on-different-gpus/1450/4?u=nicklhy\" rel=\"nofollow\">here</a>.</p>", "body_text": "Why torch.cuda.comm.broadcast(tensor, devices) choose to ignore devices[0] if tensor is already on GPU(line 22-25 in torch/cuda/comm.py)? A simple test script below shows how this function may produce different results.\nimport torch\n\ndef test1():\n    x = torch.Tensor(10, 10)\n    x_gpus = torch.cuda.comm.broadcast(x, [2, 3])\n    print([t.get_device() for t in x_gpus])\n\ndef test2():\n    x = torch.Tensor(10, 10).cuda()\n    x_gpus = torch.cuda.comm.broadcast(x, [2, 3])\n    print([t.get_device() for t in x_gpus])\n\nif __name__ == '__main__':\n    test1() # -> [2, 3]\n    test2() # -> [0, 3]\n\nMy model training code could crash for this if I choose to run it on a different device than gpu0. You can refer the details in here.", "body": "Why torch.cuda.comm.broadcast(tensor, devices) choose to ignore devices[0] if tensor is already on GPU(line 22-25 in [torch/cuda/comm.py](https://github.com/pytorch/pytorch/blob/master/torch/cuda/comm.py))? A simple test script below shows how this function may produce different results.\r\n\r\n```\r\nimport torch\r\n\r\ndef test1():\r\n    x = torch.Tensor(10, 10)\r\n    x_gpus = torch.cuda.comm.broadcast(x, [2, 3])\r\n    print([t.get_device() for t in x_gpus])\r\n\r\ndef test2():\r\n    x = torch.Tensor(10, 10).cuda()\r\n    x_gpus = torch.cuda.comm.broadcast(x, [2, 3])\r\n    print([t.get_device() for t in x_gpus])\r\n\r\nif __name__ == '__main__':\r\n    test1() # -> [2, 3]\r\n    test2() # -> [0, 3]\r\n```\r\n\r\nMy model training code could crash for this if I choose to run it on a different device than gpu0. You can refer the details in [here](https://discuss.pytorch.org/t/tensors-are-on-different-gpus/1450/4?u=nicklhy)."}