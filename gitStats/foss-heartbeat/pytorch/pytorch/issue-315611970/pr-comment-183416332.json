{"url": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/183416332", "pull_request_review_id": 114409723, "id": 183416332, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MzQxNjMzMg==", "diff_hunk": "@@ -717,6 +717,40 @@ Tensor diag_backward(const Tensor & grad, IntList input_sizes, int64_t diagonal)\n   return grad_input;\n }\n \n+Tensor diagonal_backward(const Tensor & grad, IntList input_sizes, int64_t offset, int64_t dim1_, int64_t dim2_) {\n+  auto grad_input = at::zeros(grad.type(), input_sizes);\n+  // the following until the assignment of auto diag\n+  // copies the diagonal code in aten/src/ATen/native/TensorShape.cpp\n+  // that would be equivalent to\n+  //        auto diag = grad_input.diagonal(offset, dim1, dim2);\n+  // when using diagonal, the output is not differentiable twice", "path": "tools/autograd/templates/Functions.cpp", "position": null, "original_position": 10, "commit_id": "71eb0d5b7ce223c63deed433516d7bf6ace9762f", "original_commit_id": "67d2734ecd6f748d7639efeab4270205313a227f", "user": {"login": "t-vi", "id": 20787943, "node_id": "MDQ6VXNlcjIwNzg3OTQz", "avatar_url": "https://avatars2.githubusercontent.com/u/20787943?v=4", "gravatar_id": "", "url": "https://api.github.com/users/t-vi", "html_url": "https://github.com/t-vi", "followers_url": "https://api.github.com/users/t-vi/followers", "following_url": "https://api.github.com/users/t-vi/following{/other_user}", "gists_url": "https://api.github.com/users/t-vi/gists{/gist_id}", "starred_url": "https://api.github.com/users/t-vi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/t-vi/subscriptions", "organizations_url": "https://api.github.com/users/t-vi/orgs", "repos_url": "https://api.github.com/users/t-vi/repos", "events_url": "https://api.github.com/users/t-vi/events{/privacy}", "received_events_url": "https://api.github.com/users/t-vi/received_events", "type": "User", "site_admin": false}, "body": "So here we have: https://github.com/pytorch/pytorch/pull/6718/files#diff-888d69f545029e79ccc606683a7ac08cR748\r\nWorking code:\r\n```\r\n  auto diag = grad_input.as_strided(sizes, strides, storage_offset);\r\n  diag.copy_(grad);\r\n  return grad_input;\r\n```\r\nNon-working code:\r\n```\r\n  auto diag = grad_input.diagonal(offset, dim1, dim2);\r\n  diag.copy_(grad);\r\n  return grad_input;\r\n```\r\nwhen `aten/src/ATen/native/TensorShape.cpp`'s `diagonal` returns a `self.as_strided(...)`.\r\nSo my best guess is that the first snipped has a shortcut in the automatically generated wrappers where the second id does not. I have never looked into how ATen tracks differentiability, so I would not know.\r\n\r\nMind you, I think I have reproduced this several times, but I might still have done something stupid, so if someone wants to check...", "created_at": "2018-04-23T14:31:42Z", "updated_at": "2018-11-23T15:42:59Z", "html_url": "https://github.com/pytorch/pytorch/pull/6718#discussion_r183416332", "pull_request_url": "https://api.github.com/repos/pytorch/pytorch/pulls/6718", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/183416332"}, "html": {"href": "https://github.com/pytorch/pytorch/pull/6718#discussion_r183416332"}, "pull_request": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/6718"}}, "body_html": "<p>So here we have: <a href=\"https://github.com/pytorch/pytorch/pull/6718/files#diff-888d69f545029e79ccc606683a7ac08cR748\">https://github.com/pytorch/pytorch/pull/6718/files#diff-888d69f545029e79ccc606683a7ac08cR748</a><br>\nWorking code:</p>\n<pre><code>  auto diag = grad_input.as_strided(sizes, strides, storage_offset);\n  diag.copy_(grad);\n  return grad_input;\n</code></pre>\n<p>Non-working code:</p>\n<pre><code>  auto diag = grad_input.diagonal(offset, dim1, dim2);\n  diag.copy_(grad);\n  return grad_input;\n</code></pre>\n<p>when <code>aten/src/ATen/native/TensorShape.cpp</code>'s <code>diagonal</code> returns a <code>self.as_strided(...)</code>.<br>\nSo my best guess is that the first snipped has a shortcut in the automatically generated wrappers where the second id does not. I have never looked into how ATen tracks differentiability, so I would not know.</p>\n<p>Mind you, I think I have reproduced this several times, but I might still have done something stupid, so if someone wants to check...</p>", "body_text": "So here we have: https://github.com/pytorch/pytorch/pull/6718/files#diff-888d69f545029e79ccc606683a7ac08cR748\nWorking code:\n  auto diag = grad_input.as_strided(sizes, strides, storage_offset);\n  diag.copy_(grad);\n  return grad_input;\n\nNon-working code:\n  auto diag = grad_input.diagonal(offset, dim1, dim2);\n  diag.copy_(grad);\n  return grad_input;\n\nwhen aten/src/ATen/native/TensorShape.cpp's diagonal returns a self.as_strided(...).\nSo my best guess is that the first snipped has a shortcut in the automatically generated wrappers where the second id does not. I have never looked into how ATen tracks differentiability, so I would not know.\nMind you, I think I have reproduced this several times, but I might still have done something stupid, so if someone wants to check...", "in_reply_to_id": 183349497}