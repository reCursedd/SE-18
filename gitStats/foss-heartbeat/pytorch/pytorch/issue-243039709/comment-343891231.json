{"url": "https://api.github.com/repos/pytorch/pytorch/issues/comments/343891231", "html_url": "https://github.com/pytorch/pytorch/pull/2103#issuecomment-343891231", "issue_url": "https://api.github.com/repos/pytorch/pytorch/issues/2103", "id": 343891231, "node_id": "MDEyOklzc3VlQ29tbWVudDM0Mzg5MTIzMQ==", "user": {"login": "Kaixhin", "id": 991891, "node_id": "MDQ6VXNlcjk5MTg5MQ==", "avatar_url": "https://avatars3.githubusercontent.com/u/991891?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Kaixhin", "html_url": "https://github.com/Kaixhin", "followers_url": "https://api.github.com/users/Kaixhin/followers", "following_url": "https://api.github.com/users/Kaixhin/following{/other_user}", "gists_url": "https://api.github.com/users/Kaixhin/gists{/gist_id}", "starred_url": "https://api.github.com/users/Kaixhin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Kaixhin/subscriptions", "organizations_url": "https://api.github.com/users/Kaixhin/orgs", "repos_url": "https://api.github.com/users/Kaixhin/repos", "events_url": "https://api.github.com/users/Kaixhin/events{/privacy}", "received_events_url": "https://api.github.com/users/Kaixhin/received_events", "type": "User", "site_admin": false}, "created_at": "2017-11-13T11:26:35Z", "updated_at": "2017-11-13T11:26:35Z", "author_association": "CONTRIBUTOR", "body_html": "<p><a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=7891333\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/jvmancuso\">@jvmancuso</a> for future reference, this doesn't work with CUDA. I think the best solution is to register <code>weight_epsilon</code> and <code>bias_epsilon</code> as buffers so that when the model is cast to CUDA they are cast as well - and then the generated noise needs to be copied over. You can see an example <a href=\"https://github.com/Kaixhin/Rainbow/blob/master/model.py#L9-L46\">here</a>.</p>", "body_text": "@jvmancuso for future reference, this doesn't work with CUDA. I think the best solution is to register weight_epsilon and bias_epsilon as buffers so that when the model is cast to CUDA they are cast as well - and then the generated noise needs to be copied over. You can see an example here.", "body": "@jvmancuso for future reference, this doesn't work with CUDA. I think the best solution is to register `weight_epsilon` and `bias_epsilon` as buffers so that when the model is cast to CUDA they are cast as well - and then the generated noise needs to be copied over. You can see an example [here](https://github.com/Kaixhin/Rainbow/blob/master/model.py#L9-L46)."}