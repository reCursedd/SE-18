{"url": "https://api.github.com/repos/pytorch/pytorch/issues/comments/417101192", "html_url": "https://github.com/pytorch/pytorch/pull/9938#issuecomment-417101192", "issue_url": "https://api.github.com/repos/pytorch/pytorch/issues/9938", "id": 417101192, "node_id": "MDEyOklzc3VlQ29tbWVudDQxNzEwMTE5Mg==", "user": {"login": "mruberry", "id": 38511765, "node_id": "MDQ6VXNlcjM4NTExNzY1", "avatar_url": "https://avatars3.githubusercontent.com/u/38511765?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mruberry", "html_url": "https://github.com/mruberry", "followers_url": "https://api.github.com/users/mruberry/followers", "following_url": "https://api.github.com/users/mruberry/following{/other_user}", "gists_url": "https://api.github.com/users/mruberry/gists{/gist_id}", "starred_url": "https://api.github.com/users/mruberry/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mruberry/subscriptions", "organizations_url": "https://api.github.com/users/mruberry/orgs", "repos_url": "https://api.github.com/users/mruberry/repos", "events_url": "https://api.github.com/users/mruberry/events{/privacy}", "received_events_url": "https://api.github.com/users/mruberry/received_events", "type": "User", "site_admin": false}, "created_at": "2018-08-29T20:50:32Z", "updated_at": "2018-08-29T20:50:32Z", "author_association": "CONTRIBUTOR", "body_html": "<p>I merged with master and made the following changes:</p>\n<ul>\n<li>Added a note to CUDAStream.h and additional comments to CUDAStream.cpp, clarifying the use of counters and flags, in particular.</li>\n<li>Updated constant names per <a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=6429851\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/goldsborough\">@goldsborough</a>, guarded values per <a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=13564\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/ezyang\">@ezyang</a>, used arrays per <a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=13564\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/ezyang\">@ezyang</a>, also simplified high vs low priority so these values are simply initialized properly (the prior approach was needlessly general)</li>\n<li>Changed the atomic counters to uint32_t, simplified the round-robin logic by allowing overflow</li>\n</ul>\n<p>I did not:</p>\n<ul>\n<li>Update CUDAStreamInternals to use a unique ptr with a custom deleter, which I agree is probably more elegant but also not necessary right now.</li>\n<li>Change the loop unroll since I think it's good enough</li>\n<li>Merge the high priority and low priority acquisitions in CUDAStream_createStream(). The lines of code here can be reduced but I think the current statement is clear and the logic duplication is very small.</li>\n</ul>", "body_text": "I merged with master and made the following changes:\n\nAdded a note to CUDAStream.h and additional comments to CUDAStream.cpp, clarifying the use of counters and flags, in particular.\nUpdated constant names per @goldsborough, guarded values per @ezyang, used arrays per @ezyang, also simplified high vs low priority so these values are simply initialized properly (the prior approach was needlessly general)\nChanged the atomic counters to uint32_t, simplified the round-robin logic by allowing overflow\n\nI did not:\n\nUpdate CUDAStreamInternals to use a unique ptr with a custom deleter, which I agree is probably more elegant but also not necessary right now.\nChange the loop unroll since I think it's good enough\nMerge the high priority and low priority acquisitions in CUDAStream_createStream(). The lines of code here can be reduced but I think the current statement is clear and the logic duplication is very small.", "body": "I merged with master and made the following changes:\r\n\r\n- Added a note to CUDAStream.h and additional comments to CUDAStream.cpp, clarifying the use of counters and flags, in particular.\r\n- Updated constant names per @goldsborough, guarded values per @ezyang, used arrays per @ezyang, also simplified high vs low priority so these values are simply initialized properly (the prior approach was needlessly general)\r\n- Changed the atomic counters to uint32_t, simplified the round-robin logic by allowing overflow\r\n\r\nI did not:\r\n- Update CUDAStreamInternals to use a unique ptr with a custom deleter, which I agree is probably more elegant but also not necessary right now.\r\n- Change the loop unroll since I think it's good enough\r\n- Merge the high priority and low priority acquisitions in CUDAStream_createStream(). The lines of code here can be reduced but I think the current statement is clear and the logic duplication is very small."}