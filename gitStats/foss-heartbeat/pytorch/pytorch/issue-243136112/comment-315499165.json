{"url": "https://api.github.com/repos/pytorch/pytorch/issues/comments/315499165", "html_url": "https://github.com/pytorch/pytorch/pull/2108#issuecomment-315499165", "issue_url": "https://api.github.com/repos/pytorch/pytorch/issues/2108", "id": 315499165, "node_id": "MDEyOklzc3VlQ29tbWVudDMxNTQ5OTE2NQ==", "user": {"login": "alykhantejani", "id": 687194, "node_id": "MDQ6VXNlcjY4NzE5NA==", "avatar_url": "https://avatars1.githubusercontent.com/u/687194?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alykhantejani", "html_url": "https://github.com/alykhantejani", "followers_url": "https://api.github.com/users/alykhantejani/followers", "following_url": "https://api.github.com/users/alykhantejani/following{/other_user}", "gists_url": "https://api.github.com/users/alykhantejani/gists{/gist_id}", "starred_url": "https://api.github.com/users/alykhantejani/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alykhantejani/subscriptions", "organizations_url": "https://api.github.com/users/alykhantejani/orgs", "repos_url": "https://api.github.com/users/alykhantejani/repos", "events_url": "https://api.github.com/users/alykhantejani/events{/privacy}", "received_events_url": "https://api.github.com/users/alykhantejani/received_events", "type": "User", "site_admin": false}, "created_at": "2017-07-15T01:07:53Z", "updated_at": "2017-07-15T01:07:53Z", "author_association": "CONTRIBUTOR", "body_html": "<p><a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=4583066\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/apaszke\">@apaszke</a> The more I think about it, it's very pythonic to allow the user to just to do</p>\n<div class=\"highlight highlight-source-python\"><pre>m.a <span class=\"pl-k\">=</span> Parameter(<span class=\"pl-c1\">...</span>)\nm.a <span class=\"pl-k\">=</span> nn.Linear(<span class=\"pl-c1\">...</span>)</pre></div>\n<p>But we don't want them to do:</p>\n<div class=\"highlight highlight-source-python\"><pre>m.a <span class=\"pl-k\">=</span> Parameter(<span class=\"pl-c1\">...</span>)\nm.add_module(<span class=\"pl-s\"><span class=\"pl-pds\">'</span>a<span class=\"pl-pds\">'</span></span>, nn.Linear(<span class=\"pl-c1\">...</span>))</pre></div>\n<p>So if we want the <code>register_parameter</code>, <code>register_buffer</code> and <code>add_module</code> functions to behave like <code>__setattr__</code>, then we can leave them as is. Otherwise I think we should change both the functions and <code>__setattr__</code> to not allow overwriting of already registered buffers/params, and you should explicitly <code>del</code> them first if you want to overwrite.</p>\n<p>Not sure which is the best option though?</p>\n<p>Anyway, its 2am here and I've left my charger at the office, let me know what your thoughts are - I'm happy to adjust the PR accordingly or alternatively close if we mark this as \"wont fix\"</p>", "body_text": "@apaszke The more I think about it, it's very pythonic to allow the user to just to do\nm.a = Parameter(...)\nm.a = nn.Linear(...)\nBut we don't want them to do:\nm.a = Parameter(...)\nm.add_module('a', nn.Linear(...))\nSo if we want the register_parameter, register_buffer and add_module functions to behave like __setattr__, then we can leave them as is. Otherwise I think we should change both the functions and __setattr__ to not allow overwriting of already registered buffers/params, and you should explicitly del them first if you want to overwrite.\nNot sure which is the best option though?\nAnyway, its 2am here and I've left my charger at the office, let me know what your thoughts are - I'm happy to adjust the PR accordingly or alternatively close if we mark this as \"wont fix\"", "body": "@apaszke The more I think about it, it's very pythonic to allow the user to just to do\r\n```python\r\nm.a = Parameter(...)\r\nm.a = nn.Linear(...)\r\n```\r\nBut we don't want them to do:\r\n```Python\r\nm.a = Parameter(...)\r\nm.add_module('a', nn.Linear(...))\r\n```\r\nSo if we want the `register_parameter`, `register_buffer` and `add_module` functions to behave like `__setattr__`, then we can leave them as is. Otherwise I think we should change both the functions and `__setattr__` to not allow overwriting of already registered buffers/params, and you should explicitly `del` them first if you want to overwrite. \r\n\r\nNot sure which is the best option though?\r\n\r\nAnyway, its 2am here and I've left my charger at the office, let me know what your thoughts are - I'm happy to adjust the PR accordingly or alternatively close if we mark this as \"wont fix\""}