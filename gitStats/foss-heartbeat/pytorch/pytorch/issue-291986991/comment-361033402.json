{"url": "https://api.github.com/repos/pytorch/pytorch/issues/comments/361033402", "html_url": "https://github.com/pytorch/pytorch/pull/4876#issuecomment-361033402", "issue_url": "https://api.github.com/repos/pytorch/pytorch/issues/4876", "id": 361033402, "node_id": "MDEyOklzc3VlQ29tbWVudDM2MTAzMzQwMg==", "user": {"login": "vishwakftw", "id": 23639302, "node_id": "MDQ6VXNlcjIzNjM5MzAy", "avatar_url": "https://avatars2.githubusercontent.com/u/23639302?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vishwakftw", "html_url": "https://github.com/vishwakftw", "followers_url": "https://api.github.com/users/vishwakftw/followers", "following_url": "https://api.github.com/users/vishwakftw/following{/other_user}", "gists_url": "https://api.github.com/users/vishwakftw/gists{/gist_id}", "starred_url": "https://api.github.com/users/vishwakftw/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vishwakftw/subscriptions", "organizations_url": "https://api.github.com/users/vishwakftw/orgs", "repos_url": "https://api.github.com/users/vishwakftw/repos", "events_url": "https://api.github.com/users/vishwakftw/events{/privacy}", "received_events_url": "https://api.github.com/users/vishwakftw/received_events", "type": "User", "site_admin": false}, "created_at": "2018-01-28T02:35:29Z", "updated_at": "2018-01-28T10:24:28Z", "author_association": "CONTRIBUTOR", "body_html": "<p><a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=4583066\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/apaszke\">@apaszke</a> Thanks for the questions:</p>\n<ol>\n<li>The function signature for <code>log_normalizer</code> is <code>(self, *natural_params)</code>. Yes, the number of arguments is exactly the number of natural parameters characterizing the distribution. I will modify default implementation in <code>ExponentialFamily</code> to match this, as suggested by <a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=648532\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/fritzo\">@fritzo</a></li>\n<li>Theoretically, the mean carrier measure could be a function of natural parameters. But so far, in all the distributions we have seen, this is not the case, and has either been 0 or doesn't have a closed form (which is when we leave it as it is).</li>\n<li><code>natural_params</code> could return the same type as the actual parameters for the distribution, but this will cause some case-checking and rewrapping in the entropy and KL-divergences, when we have to use the AD system for compute Bregman Divergences.</li>\n</ol>\n<p>Let me know your views about this, and clarifications if any. If you have anything you would like me to add in the code for the correctness, I will make that addition as well. I hope I have addressed your questions well.</p>", "body_text": "@apaszke Thanks for the questions:\n\nThe function signature for log_normalizer is (self, *natural_params). Yes, the number of arguments is exactly the number of natural parameters characterizing the distribution. I will modify default implementation in ExponentialFamily to match this, as suggested by @fritzo\nTheoretically, the mean carrier measure could be a function of natural parameters. But so far, in all the distributions we have seen, this is not the case, and has either been 0 or doesn't have a closed form (which is when we leave it as it is).\nnatural_params could return the same type as the actual parameters for the distribution, but this will cause some case-checking and rewrapping in the entropy and KL-divergences, when we have to use the AD system for compute Bregman Divergences.\n\nLet me know your views about this, and clarifications if any. If you have anything you would like me to add in the code for the correctness, I will make that addition as well. I hope I have addressed your questions well.", "body": "@apaszke Thanks for the questions:\r\n1. The function signature for `log_normalizer` is `(self, *natural_params)`. Yes, the number of arguments is exactly the number of natural parameters characterizing the distribution. I will modify default implementation in `ExponentialFamily` to match this, as suggested by @fritzo \r\n2. Theoretically, the mean carrier measure could be a function of natural parameters. But so far, in all the distributions we have seen, this is not the case, and has either been 0 or doesn't have a closed form (which is when we leave it as it is).\r\n3. `natural_params` could return the same type as the actual parameters for the distribution, but this will cause some case-checking and rewrapping in the entropy and KL-divergences, when we have to use the AD system for compute Bregman Divergences.\r\n\r\nLet me know your views about this, and clarifications if any. If you have anything you would like me to add in the code for the correctness, I will make that addition as well. I hope I have addressed your questions well."}