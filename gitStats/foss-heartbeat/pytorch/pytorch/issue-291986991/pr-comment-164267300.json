{"url": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/164267300", "pull_request_review_id": 92020841, "id": 164267300, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE2NDI2NzMwMA==", "diff_hunk": "@@ -0,0 +1,80 @@\n+import torch\n+from torch.distributions.distribution import Distribution\n+from torch.autograd import Variable\n+\n+\n+class ExponentialFamily(Distribution):\n+    r\"\"\"\n+    ExponentialFamily is the abstract base class for probability distributions belonging to an\n+    exponential family, whose probability mass/density function has the form is defined below\n+\n+    ..math::\n+\n+        p_{F}(x; \\theta) = \\exp(\\langle t(x), \\theta\\rangle) - F(\\theta) + k(x))\n+\n+    where :math:`\\theta` denotes the natural parameters, :math:`t(x)` denotes the sufficient statistic,\n+    :math:`F(\\theta)` is the log normalizer function for a given family and :math:`k(x)` is the carrier\n+    measure.\n+\n+    Note:\n+        This class is an intermediary between the `Distribution` class and distributions which belong\n+        to an exponential family mainly to check the correctness of the `.entropy()` and analytic KL\n+        divergence methods. We use this class to compute the entropy and KL divergence using the AD frame-\n+        work and Bregman divergences (courtesy of: Frank Nielsen and Richard Nock, Entropies and\n+        Cross-entropies of Exponential Families).\n+    \"\"\"\n+\n+    @property\n+    def natural_params(self):\n+        \"\"\"\n+        Abstract method for natural parameters. Returns a tuple of Variables based\n+        on the distribution\n+        \"\"\"\n+        raise NotImplementedError\n+\n+    def log_normalizer(self):", "path": "torch/distributions/exp_family.py", "position": null, "original_position": 35, "commit_id": "fb1d0870e50aa868b9e94112ed29163780015770", "original_commit_id": "903e6180dfaf6589efa2b34cceeeb30b135414d1", "user": {"login": "fritzo", "id": 648532, "node_id": "MDQ6VXNlcjY0ODUzMg==", "avatar_url": "https://avatars0.githubusercontent.com/u/648532?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fritzo", "html_url": "https://github.com/fritzo", "followers_url": "https://api.github.com/users/fritzo/followers", "following_url": "https://api.github.com/users/fritzo/following{/other_user}", "gists_url": "https://api.github.com/users/fritzo/gists{/gist_id}", "starred_url": "https://api.github.com/users/fritzo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fritzo/subscriptions", "organizations_url": "https://api.github.com/users/fritzo/orgs", "repos_url": "https://api.github.com/users/fritzo/repos", "events_url": "https://api.github.com/users/fritzo/events{/privacy}", "received_events_url": "https://api.github.com/users/fritzo/received_events", "type": "User", "site_admin": false}, "body": "I think the extra arg in `log_normalizer(self, *natural_params)` is not needed, but it would clarify how it should be implemented and would serve as documentation for developers.", "created_at": "2018-01-27T08:34:32Z", "updated_at": "2018-11-23T15:38:38Z", "html_url": "https://github.com/pytorch/pytorch/pull/4876#discussion_r164267300", "pull_request_url": "https://api.github.com/repos/pytorch/pytorch/pulls/4876", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/164267300"}, "html": {"href": "https://github.com/pytorch/pytorch/pull/4876#discussion_r164267300"}, "pull_request": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/4876"}}, "body_html": "<p>I think the extra arg in <code>log_normalizer(self, *natural_params)</code> is not needed, but it would clarify how it should be implemented and would serve as documentation for developers.</p>", "body_text": "I think the extra arg in log_normalizer(self, *natural_params) is not needed, but it would clarify how it should be implemented and would serve as documentation for developers.", "in_reply_to_id": 164261365}