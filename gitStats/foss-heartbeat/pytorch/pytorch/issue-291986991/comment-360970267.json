{"url": "https://api.github.com/repos/pytorch/pytorch/issues/comments/360970267", "html_url": "https://github.com/pytorch/pytorch/pull/4876#issuecomment-360970267", "issue_url": "https://api.github.com/repos/pytorch/pytorch/issues/4876", "id": 360970267, "node_id": "MDEyOklzc3VlQ29tbWVudDM2MDk3MDI2Nw==", "user": {"login": "fritzo", "id": 648532, "node_id": "MDQ6VXNlcjY0ODUzMg==", "avatar_url": "https://avatars0.githubusercontent.com/u/648532?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fritzo", "html_url": "https://github.com/fritzo", "followers_url": "https://api.github.com/users/fritzo/followers", "following_url": "https://api.github.com/users/fritzo/following{/other_user}", "gists_url": "https://api.github.com/users/fritzo/gists{/gist_id}", "starred_url": "https://api.github.com/users/fritzo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fritzo/subscriptions", "organizations_url": "https://api.github.com/users/fritzo/orgs", "repos_url": "https://api.github.com/users/fritzo/repos", "events_url": "https://api.github.com/users/fritzo/events{/privacy}", "received_events_url": "https://api.github.com/users/fritzo/received_events", "type": "User", "site_admin": false}, "created_at": "2018-01-27T08:42:01Z", "updated_at": "2018-01-27T08:42:33Z", "author_association": "CONTRIBUTOR", "body_html": "<p><a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=23639302\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/vishwakftw\">@vishwakftw</a> I kind of like Adam's suggestion of making <code>._natural_params</code>, <code>._log_normalizer()</code> and <code>._mean_carrier_measure</code> private, and keeping only <code>.entropy()</code> and <code>.kl_divergence()</code> public. What do you think? For the same reason, we could further move <code>.kl_divergence()</code> from a method to a registered KL implementation</p>\n<div class=\"highlight highlight-source-python\"><pre><span class=\"pl-en\">@register_kl</span>(ExponentialFamily, ExponentialFamily)\n<span class=\"pl-k\">def</span> <span class=\"pl-en\">_kl_expfamily_expfamily</span>(<span class=\"pl-smi\">p</span>, <span class=\"pl-smi\">q</span>):\n    <span class=\"pl-k\">if</span> <span class=\"pl-c1\">type</span>(p) <span class=\"pl-k\">is</span> <span class=\"pl-k\">not</span> <span class=\"pl-c1\">type</span>(q):\n        <span class=\"pl-k\">raise</span> <span class=\"pl-c1\">NotImplementedError</span>\n    <span class=\"pl-c1\">...</span>your implementation here<span class=\"pl-c1\">...</span></pre></div>\n<p>This would prevent users from accidentally using <code>ExponentialDistribution.kl_divergence()</code> outside of testing code; in tests we could directly reference <code>_kl_expfamily_expfamily()</code>. WDYT?</p>", "body_text": "@vishwakftw I kind of like Adam's suggestion of making ._natural_params, ._log_normalizer() and ._mean_carrier_measure private, and keeping only .entropy() and .kl_divergence() public. What do you think? For the same reason, we could further move .kl_divergence() from a method to a registered KL implementation\n@register_kl(ExponentialFamily, ExponentialFamily)\ndef _kl_expfamily_expfamily(p, q):\n    if type(p) is not type(q):\n        raise NotImplementedError\n    ...your implementation here...\nThis would prevent users from accidentally using ExponentialDistribution.kl_divergence() outside of testing code; in tests we could directly reference _kl_expfamily_expfamily(). WDYT?", "body": "@vishwakftw I kind of like Adam's suggestion of making `._natural_params`, `._log_normalizer()` and `._mean_carrier_measure` private, and keeping only `.entropy()` and `.kl_divergence()` public. What do you think? For the same reason, we could further move `.kl_divergence()` from a method to a registered KL implementation\r\n```py\r\n@register_kl(ExponentialFamily, ExponentialFamily)\r\ndef _kl_expfamily_expfamily(p, q):\r\n    if type(p) is not type(q):\r\n        raise NotImplementedError\r\n    ...your implementation here...\r\n```\r\nThis would prevent users from accidentally using `ExponentialDistribution.kl_divergence()` outside of testing code; in tests we could directly reference `_kl_expfamily_expfamily()`. WDYT?"}