{"url": "https://api.github.com/repos/pytorch/pytorch/issues/comments/397109881", "html_url": "https://github.com/pytorch/pytorch/issues/8448#issuecomment-397109881", "issue_url": "https://api.github.com/repos/pytorch/pytorch/issues/8448", "id": 397109881, "node_id": "MDEyOklzc3VlQ29tbWVudDM5NzEwOTg4MQ==", "user": {"login": "jamesr66a", "id": 4685384, "node_id": "MDQ6VXNlcjQ2ODUzODQ=", "avatar_url": "https://avatars2.githubusercontent.com/u/4685384?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jamesr66a", "html_url": "https://github.com/jamesr66a", "followers_url": "https://api.github.com/users/jamesr66a/followers", "following_url": "https://api.github.com/users/jamesr66a/following{/other_user}", "gists_url": "https://api.github.com/users/jamesr66a/gists{/gist_id}", "starred_url": "https://api.github.com/users/jamesr66a/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jamesr66a/subscriptions", "organizations_url": "https://api.github.com/users/jamesr66a/orgs", "repos_url": "https://api.github.com/users/jamesr66a/repos", "events_url": "https://api.github.com/users/jamesr66a/events{/privacy}", "received_events_url": "https://api.github.com/users/jamesr66a/received_events", "type": "User", "site_admin": false}, "created_at": "2018-06-13T22:35:57Z", "updated_at": "2018-06-13T22:35:57Z", "author_association": "CONTRIBUTOR", "body_html": "<p>This is the VariableType.h code:</p>\n<pre><code>Tensor VariableType::expand_as(const Tensor &amp; self, const Tensor &amp; other) const {\n  profiler::RecordFunction profiler(\"expand_as\");\n  jit::tracer::PreTraceInfo trace_info;\n  if (jit::tracer::isTracing( self, other )) {\n    trace_info = jit::tracer::preRecordTrace( jit::aten::expand_as, { self, other } );\n    if (!jit::tracer::ArgumentStash::empty()) {\n  \n      TORCH_ASSERT(jit::tracer::ArgumentStash::empty());\n    } else {\n  \n    }\n  }\n  auto result = Type::expand_as(self, other);\n  if (trace_info.state != nullptr) {\n    jit::tracer::postRecordTrace( trace_info,  { result } );\n  }\n  return result;\n}\n</code></pre>\n<p>The branch where the assert lives looks empty. Is this a bug in gen_variable_type.py?</p>", "body_text": "This is the VariableType.h code:\nTensor VariableType::expand_as(const Tensor & self, const Tensor & other) const {\n  profiler::RecordFunction profiler(\"expand_as\");\n  jit::tracer::PreTraceInfo trace_info;\n  if (jit::tracer::isTracing( self, other )) {\n    trace_info = jit::tracer::preRecordTrace( jit::aten::expand_as, { self, other } );\n    if (!jit::tracer::ArgumentStash::empty()) {\n  \n      TORCH_ASSERT(jit::tracer::ArgumentStash::empty());\n    } else {\n  \n    }\n  }\n  auto result = Type::expand_as(self, other);\n  if (trace_info.state != nullptr) {\n    jit::tracer::postRecordTrace( trace_info,  { result } );\n  }\n  return result;\n}\n\nThe branch where the assert lives looks empty. Is this a bug in gen_variable_type.py?", "body": "This is the VariableType.h code:\r\n\r\n```\r\nTensor VariableType::expand_as(const Tensor & self, const Tensor & other) const {\r\n  profiler::RecordFunction profiler(\"expand_as\");\r\n  jit::tracer::PreTraceInfo trace_info;\r\n  if (jit::tracer::isTracing( self, other )) {\r\n    trace_info = jit::tracer::preRecordTrace( jit::aten::expand_as, { self, other } );\r\n    if (!jit::tracer::ArgumentStash::empty()) {\r\n  \r\n      TORCH_ASSERT(jit::tracer::ArgumentStash::empty());\r\n    } else {\r\n  \r\n    }\r\n  }\r\n  auto result = Type::expand_as(self, other);\r\n  if (trace_info.state != nullptr) {\r\n    jit::tracer::postRecordTrace( trace_info,  { result } );\r\n  }\r\n  return result;\r\n}\r\n```\r\n\r\nThe branch where the assert lives looks empty. Is this a bug in gen_variable_type.py?\r\n"}