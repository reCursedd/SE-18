{"url": "https://api.github.com/repos/pytorch/pytorch/issues/comments/342249596", "html_url": "https://github.com/pytorch/pytorch/issues/3477#issuecomment-342249596", "issue_url": "https://api.github.com/repos/pytorch/pytorch/issues/3477", "id": 342249596, "node_id": "MDEyOklzc3VlQ29tbWVudDM0MjI0OTU5Ng==", "user": {"login": "lucylw", "id": 2721700, "node_id": "MDQ6VXNlcjI3MjE3MDA=", "avatar_url": "https://avatars1.githubusercontent.com/u/2721700?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lucylw", "html_url": "https://github.com/lucylw", "followers_url": "https://api.github.com/users/lucylw/followers", "following_url": "https://api.github.com/users/lucylw/following{/other_user}", "gists_url": "https://api.github.com/users/lucylw/gists{/gist_id}", "starred_url": "https://api.github.com/users/lucylw/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lucylw/subscriptions", "organizations_url": "https://api.github.com/users/lucylw/orgs", "repos_url": "https://api.github.com/users/lucylw/repos", "events_url": "https://api.github.com/users/lucylw/events{/privacy}", "received_events_url": "https://api.github.com/users/lucylw/received_events", "type": "User", "site_admin": false}, "created_at": "2017-11-06T18:58:21Z", "updated_at": "2017-11-06T18:58:59Z", "author_association": "NONE", "body_html": "<p><a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=5674597\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/SsnL\">@SsnL</a>, <a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=4583066\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/apaszke\">@apaszke</a></p>\n<p>It looks like in the context-manager in <code>torch/cuda/__init__.py</code>, the prev_idx gets reset in <code>__enter__</code> to the default device index (which is the first visible GPU), and then it gets set to that upon <code>__exit__</code> instead of to -1. So the context first gets created on the specified GPU (i.e. GPU5), then some more context gets created on GPU0, and then all the variable transfers go back to GPU5.</p>", "body_text": "@SsnL, @apaszke\nIt looks like in the context-manager in torch/cuda/__init__.py, the prev_idx gets reset in __enter__ to the default device index (which is the first visible GPU), and then it gets set to that upon __exit__ instead of to -1. So the context first gets created on the specified GPU (i.e. GPU5), then some more context gets created on GPU0, and then all the variable transfers go back to GPU5.", "body": "@Ssnl, @apaszke \r\n\r\nIt looks like in the context-manager in `torch/cuda/__init__.py`, the prev_idx gets reset in `__enter__` to the default device index (which is the first visible GPU), and then it gets set to that upon `__exit__` instead of to -1. So the context first gets created on the specified GPU (i.e. GPU5), then some more context gets created on GPU0, and then all the variable transfers go back to GPU5."}