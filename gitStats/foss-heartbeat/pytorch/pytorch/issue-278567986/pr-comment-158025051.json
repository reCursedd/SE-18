{"url": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/158025051", "pull_request_review_id": 84764627, "id": 158025051, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE1ODAyNTA1MQ==", "diff_hunk": "@@ -137,26 +125,15 @@ std::shared_ptr<Function>& VariableViewImpl::get_grad_fn() {\n   return _grad_fn;\n }\n \n-void VariableViewImpl::rebase_history(VarFlags flags, int output_nr, std::shared_ptr<Function> grad_fn) {\n+void VariableViewImpl::rebase_history(int output_nr, std::shared_ptr<Function> grad_fn) {\n   TORCH_ASSERT(output_nr == 0);\n-  TORCH_ASSERT(flags.requires_grad == bool(grad_fn));\n-  if (grad_fn) {\n-    TORCH_ASSERTM(grad_fn->num_inputs == 1, \"Functions which modify views in-place must return a single Variable\");\n-  } else {\n-    // TODO: perhaps we should enable this case by setting base.requires_grad=False\n-    // and base.grad_fn = nullptr.\n-    TORCH_ASSERTM(!base.requires_grad(), \"base.requires_grad does not match view.requires_grad\");\n-  }\n-  this->requires_grad = flags.requires_grad;\n-  this->is_volatile = flags.is_volatile;\n+  TORCH_ASSERT(grad_fn);\n+  TORCH_ASSERTM(grad_fn->num_inputs == 1, \"Functions which modify views in-place must return a single Variable\");\n   this->output_nr = output_nr;\n-  base.requires_grad() |= flags.requires_grad;\n-  base.is_volatile() |= flags.is_volatile;\n-  if (grad_fn) {\n-    base.output_nr() = 0;\n-    base.get()->_grad_fn = std::make_shared<CopySlices>(\n-        base, TensorGeometry(data), std::move(grad_fn));\n-  }\n+  base.output_nr() = 0;\n+  base.get()->_grad_fn = std::make_shared<CopySlices>(\n+      base, TensorGeometry(data), std::move(grad_fn));\n+  get_grad_fn();  // trigger an update to the view's grad_fn", "path": "torch/csrc/autograd/variable.cpp", "position": 101, "original_position": 101, "commit_id": "5aa6a4195c92aa7a2c416cbdff72ae50e94d4e03", "original_commit_id": "5aa6a4195c92aa7a2c416cbdff72ae50e94d4e03", "user": {"login": "apaszke", "id": 4583066, "node_id": "MDQ6VXNlcjQ1ODMwNjY=", "avatar_url": "https://avatars3.githubusercontent.com/u/4583066?v=4", "gravatar_id": "", "url": "https://api.github.com/users/apaszke", "html_url": "https://github.com/apaszke", "followers_url": "https://api.github.com/users/apaszke/followers", "following_url": "https://api.github.com/users/apaszke/following{/other_user}", "gists_url": "https://api.github.com/users/apaszke/gists{/gist_id}", "starred_url": "https://api.github.com/users/apaszke/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/apaszke/subscriptions", "organizations_url": "https://api.github.com/users/apaszke/orgs", "repos_url": "https://api.github.com/users/apaszke/repos", "events_url": "https://api.github.com/users/apaszke/events{/privacy}", "received_events_url": "https://api.github.com/users/apaszke/received_events", "type": "User", "site_admin": false}, "body": "There's one undocumented invariant - setting the flags needs to happen **after** we increment the version counter, or we won't trigger an update here. Would be nice to mention this next to the template in the code gen.\r\n\r\nIn general `rebase_history` should always follow incrementing the version counter. This would be nice to mention next to the method", "created_at": "2017-12-20T13:40:05Z", "updated_at": "2018-11-23T15:37:34Z", "html_url": "https://github.com/pytorch/pytorch/pull/3970#discussion_r158025051", "pull_request_url": "https://api.github.com/repos/pytorch/pytorch/pulls/3970", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/158025051"}, "html": {"href": "https://github.com/pytorch/pytorch/pull/3970#discussion_r158025051"}, "pull_request": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/3970"}}, "body_html": "<p>There's one undocumented invariant - setting the flags needs to happen <strong>after</strong> we increment the version counter, or we won't trigger an update here. Would be nice to mention this next to the template in the code gen.</p>\n<p>In general <code>rebase_history</code> should always follow incrementing the version counter. This would be nice to mention next to the method</p>", "body_text": "There's one undocumented invariant - setting the flags needs to happen after we increment the version counter, or we won't trigger an update here. Would be nice to mention this next to the template in the code gen.\nIn general rebase_history should always follow incrementing the version counter. This would be nice to mention next to the method"}