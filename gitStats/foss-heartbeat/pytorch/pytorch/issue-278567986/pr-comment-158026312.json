{"url": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/158026312", "pull_request_review_id": 84766126, "id": 158026312, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE1ODAyNjMxMg==", "diff_hunk": "@@ -137,26 +125,15 @@ std::shared_ptr<Function>& VariableViewImpl::get_grad_fn() {\n   return _grad_fn;\n }\n \n-void VariableViewImpl::rebase_history(VarFlags flags, int output_nr, std::shared_ptr<Function> grad_fn) {\n+void VariableViewImpl::rebase_history(int output_nr, std::shared_ptr<Function> grad_fn) {\n   TORCH_ASSERT(output_nr == 0);\n-  TORCH_ASSERT(flags.requires_grad == bool(grad_fn));\n-  if (grad_fn) {\n-    TORCH_ASSERTM(grad_fn->num_inputs == 1, \"Functions which modify views in-place must return a single Variable\");\n-  } else {\n-    // TODO: perhaps we should enable this case by setting base.requires_grad=False\n-    // and base.grad_fn = nullptr.\n-    TORCH_ASSERTM(!base.requires_grad(), \"base.requires_grad does not match view.requires_grad\");\n-  }\n-  this->requires_grad = flags.requires_grad;\n-  this->is_volatile = flags.is_volatile;\n+  TORCH_ASSERT(grad_fn);\n+  TORCH_ASSERTM(grad_fn->num_inputs == 1, \"Functions which modify views in-place must return a single Variable\");\n   this->output_nr = output_nr;\n-  base.requires_grad() |= flags.requires_grad;\n-  base.is_volatile() |= flags.is_volatile;\n-  if (grad_fn) {\n-    base.output_nr() = 0;\n-    base.get()->_grad_fn = std::make_shared<CopySlices>(\n-        base, TensorGeometry(data), std::move(grad_fn));\n-  }\n+  base.output_nr() = 0;\n+  base.get()->_grad_fn = std::make_shared<CopySlices>(\n+      base, TensorGeometry(data), std::move(grad_fn));\n+  get_grad_fn();  // trigger an update to the view's grad_fn", "path": "torch/csrc/autograd/variable.cpp", "position": 101, "original_position": 101, "commit_id": "5aa6a4195c92aa7a2c416cbdff72ae50e94d4e03", "original_commit_id": "5aa6a4195c92aa7a2c416cbdff72ae50e94d4e03", "user": {"login": "apaszke", "id": 4583066, "node_id": "MDQ6VXNlcjQ1ODMwNjY=", "avatar_url": "https://avatars3.githubusercontent.com/u/4583066?v=4", "gravatar_id": "", "url": "https://api.github.com/users/apaszke", "html_url": "https://github.com/apaszke", "followers_url": "https://api.github.com/users/apaszke/followers", "following_url": "https://api.github.com/users/apaszke/following{/other_user}", "gists_url": "https://api.github.com/users/apaszke/gists{/gist_id}", "starred_url": "https://api.github.com/users/apaszke/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/apaszke/subscriptions", "organizations_url": "https://api.github.com/users/apaszke/orgs", "repos_url": "https://api.github.com/users/apaszke/repos", "events_url": "https://api.github.com/users/apaszke/events{/privacy}", "received_events_url": "https://api.github.com/users/apaszke/received_events", "type": "User", "site_admin": false}, "body": "See #4272", "created_at": "2017-12-20T13:45:34Z", "updated_at": "2018-11-23T15:37:34Z", "html_url": "https://github.com/pytorch/pytorch/pull/3970#discussion_r158026312", "pull_request_url": "https://api.github.com/repos/pytorch/pytorch/pulls/3970", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/158026312"}, "html": {"href": "https://github.com/pytorch/pytorch/pull/3970#discussion_r158026312"}, "pull_request": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/3970"}}, "body_html": "<p>See <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load issue title\" data-id=\"283567118\" data-permission-text=\"Issue title is private\" data-url=\"https://github.com/pytorch/pytorch/issues/4272\" data-hovercard-type=\"pull_request\" data-hovercard-url=\"/pytorch/pytorch/pull/4272/hovercard\" href=\"https://github.com/pytorch/pytorch/pull/4272\">#4272</a></p>", "body_text": "See #4272", "in_reply_to_id": 158025051}