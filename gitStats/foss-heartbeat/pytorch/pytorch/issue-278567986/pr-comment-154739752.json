{"url": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/154739752", "pull_request_review_id": 80934135, "id": 154739752, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE1NDczOTc1Mg==", "diff_hunk": "@@ -306,58 +288,45 @@ PyObject *THPVariable_get_grad(THPVariable *self)\n   END_HANDLE_TH_ERRORS\n }\n \n-int THPVariable_set_grad(THPVariable *self, PyObject *other)\n+int THPVariable_set_grad(THPVariable *self, PyObject *py_grad)\n {\n   HANDLE_TH_ERRORS\n   auto& var = self->cdata;\n-  if (other == Py_None) {\n+  if (py_grad == Py_None) {\n     var.grad().reset();\n     return 0;\n   }\n \n-  THPUtils_assertRet(-1, THPVariable_Check(other),\n-      \"expected Variable or None (got %s)\", THPUtils_typename(other));\n-  THPUtils_assertRet(-1, self != (THPVariable*)other,\n+  THPUtils_assertRet(-1, THPVariable_Check(py_grad),\n+      \"expected Variable or None (got %s)\", THPUtils_typename(py_grad));\n+  THPUtils_assertRet(-1, self != (THPVariable*)py_grad,\n       \"can't assign Variable as its own grad\");\n \n-  auto& data = var.data();\n-  auto& other_var = ((THPVariable*)other)->cdata;\n-  auto& other_data = other_var.data();\n+  auto& grad = ((THPVariable*)py_grad)->cdata;\n+  auto& sparseType = var.type().toBackend(var.is_cuda() ? kSparseCUDA : kSparseCPU);\n \n-  // Make sure the data is ok\n-  THPUtils_assertRet(-1, other_data.type().ID() == data.type().ID(),\n+  THPUtils_assertRet(-1, grad.type() == var.type() || grad.type() == sparseType,\n       \"assigned grad has data of a different type\");\n-  THPUtils_assertRet(-1, other_data.type().is_cuda() == data.type().is_cuda(),\n-      \"assigned grad has data located on a different device\");\n-  if (data.type().is_cuda()) {\n-    THPUtils_assertRet(-1, other_data.get_device() == data.get_device(),\n+  if (var.type().is_cuda()) {\n+    THPUtils_assertRet(-1, grad.get_device() == var.get_device(),\n         \"assigned grad has data located on a different device\");\n   }\n-  THPUtils_assertRet(-1, other_data.sizes().vec() == data.sizes().vec(),\n+  THPUtils_assertRet(-1, grad.sizes().equals(var.sizes()),\n       \"assigned grad has data of a different size\");\n \n-  var.grad() = other_var;\n+  var.grad() = grad;\n   return 0;\n   END_HANDLE_TH_ERRORS_RET(-1)\n }\n \n PyObject *THPVariable_get_volatile(THPVariable *self)\n {\n-  HANDLE_TH_ERRORS\n-  auto& var = self->cdata;\n-  return PyBool_FromLong(var.is_volatile());\n-  END_HANDLE_TH_ERRORS\n+  Py_RETURN_FALSE;", "path": "torch/csrc/autograd/python_variable.cpp", "position": null, "original_position": 126, "commit_id": "5aa6a4195c92aa7a2c416cbdff72ae50e94d4e03", "original_commit_id": "aca0b327182511a74a0ff1ef2deff0656935b1d4", "user": {"login": "apaszke", "id": 4583066, "node_id": "MDQ6VXNlcjQ1ODMwNjY=", "avatar_url": "https://avatars3.githubusercontent.com/u/4583066?v=4", "gravatar_id": "", "url": "https://api.github.com/users/apaszke", "html_url": "https://github.com/apaszke", "followers_url": "https://api.github.com/users/apaszke/followers", "following_url": "https://api.github.com/users/apaszke/following{/other_user}", "gists_url": "https://api.github.com/users/apaszke/gists{/gist_id}", "starred_url": "https://api.github.com/users/apaszke/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/apaszke/subscriptions", "organizations_url": "https://api.github.com/users/apaszke/orgs", "repos_url": "https://api.github.com/users/apaszke/repos", "events_url": "https://api.github.com/users/apaszke/events{/privacy}", "received_events_url": "https://api.github.com/users/apaszke/received_events", "type": "User", "site_admin": false}, "body": "We should emit a warning in here as well (saying that it's always false now), because this attribute will be removed at some point.", "created_at": "2017-12-04T18:50:13Z", "updated_at": "2018-11-23T15:37:04Z", "html_url": "https://github.com/pytorch/pytorch/pull/3970#discussion_r154739752", "pull_request_url": "https://api.github.com/repos/pytorch/pytorch/pulls/3970", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/154739752"}, "html": {"href": "https://github.com/pytorch/pytorch/pull/3970#discussion_r154739752"}, "pull_request": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/3970"}}, "body_html": "<p>We should emit a warning in here as well (saying that it's always false now), because this attribute will be removed at some point.</p>", "body_text": "We should emit a warning in here as well (saying that it's always false now), because this attribute will be removed at some point."}