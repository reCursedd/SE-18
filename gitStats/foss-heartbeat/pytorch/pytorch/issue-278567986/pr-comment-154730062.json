{"url": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/154730062", "pull_request_review_id": 80934135, "id": 154730062, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE1NDczMDA2Mg==", "diff_hunk": "@@ -270,39 +271,37 @@ static function_list compute_next_functions(TensorList tensors) {\n \n static void check_inplace(const Tensor& tensor) {\n   auto& var = static_cast<const Variable&>(tensor);\n-  if (var.requires_grad() && !var.grad_fn()) {\n+  if (var.requires_grad() && var.is_leaf() && BackpropMode::is_enabled()) {\n     at::runtime_error(\n       \"a leaf Variable that requires grad has been used in an in-place operation.\");\n   }\n }\n \n-static void set_flags(Variable& var, VarFlags flags, std::shared_ptr<Function> grad_fn, bool inplace=false, int output_nr = 0) {\n+static void rebase_history(Variable& var, std::shared_ptr<Function> grad_fn, int output_nr=0) {\n   if (grad_fn) {\n     grad_fn->num_inputs = 1;\n+    var.rebase_history(output_nr, std::move(grad_fn));\n   }\n-  if (inplace) {\n-    var.rebase_history(flags, output_nr, std::move(grad_fn));\n-  } else {\n-    // TODO: combine this code path with the Variable construction\n-    var.get()->requires_grad = flags.requires_grad;\n-    var.get()->is_volatile = flags.is_volatile;\n+}\n+\n+static void set_history(Variable& var, std::shared_ptr<Function> grad_fn, int output_nr=0) {\n+  if (grad_fn) {\n+    grad_fn->num_inputs = 1;", "path": "tools/autograd/templates/VariableType.cpp", "position": null, "original_position": 77, "commit_id": "5aa6a4195c92aa7a2c416cbdff72ae50e94d4e03", "original_commit_id": "aca0b327182511a74a0ff1ef2deff0656935b1d4", "user": {"login": "apaszke", "id": 4583066, "node_id": "MDQ6VXNlcjQ1ODMwNjY=", "avatar_url": "https://avatars3.githubusercontent.com/u/4583066?v=4", "gravatar_id": "", "url": "https://api.github.com/users/apaszke", "html_url": "https://github.com/apaszke", "followers_url": "https://api.github.com/users/apaszke/followers", "following_url": "https://api.github.com/users/apaszke/following{/other_user}", "gists_url": "https://api.github.com/users/apaszke/gists{/gist_id}", "starred_url": "https://api.github.com/users/apaszke/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/apaszke/subscriptions", "organizations_url": "https://api.github.com/users/apaszke/orgs", "repos_url": "https://api.github.com/users/apaszke/repos", "events_url": "https://api.github.com/users/apaszke/events{/privacy}", "received_events_url": "https://api.github.com/users/apaszke/received_events", "type": "User", "site_admin": false}, "body": "Can you add a comment here and above saying that this is correct, because these overloads are only used for single output methods? It's not immediately clear that we aren't just doing a loop with single-variable `set_history` when you see these functions.", "created_at": "2017-12-04T18:16:16Z", "updated_at": "2018-11-23T15:37:03Z", "html_url": "https://github.com/pytorch/pytorch/pull/3970#discussion_r154730062", "pull_request_url": "https://api.github.com/repos/pytorch/pytorch/pulls/3970", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/154730062"}, "html": {"href": "https://github.com/pytorch/pytorch/pull/3970#discussion_r154730062"}, "pull_request": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/3970"}}, "body_html": "<p>Can you add a comment here and above saying that this is correct, because these overloads are only used for single output methods? It's not immediately clear that we aren't just doing a loop with single-variable <code>set_history</code> when you see these functions.</p>", "body_text": "Can you add a comment here and above saying that this is correct, because these overloads are only used for single output methods? It's not immediately clear that we aren't just doing a loop with single-variable set_history when you see these functions."}