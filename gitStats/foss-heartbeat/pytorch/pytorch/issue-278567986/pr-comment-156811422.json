{"url": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/156811422", "pull_request_review_id": 83330017, "id": 156811422, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE1NjgxMTQyMg==", "diff_hunk": "@@ -169,30 +153,31 @@ struct VariableViewImpl : public VariableImpl {\n   int attr_version;\n };\n \n-inline Variable make_variable(at::Tensor data, VarFlags flags=DEFAULT_FLAGS,\n-                              int output_nr=0, std::shared_ptr<Function> grad_fn=nullptr) {\n-  TORCH_ASSERT(!grad_fn || flags.requires_grad);\n+inline Variable make_variable(at::Tensor data, bool requires_grad=false) {\n   if (data.defined() && data.dim() == 0) {\n     // don't expose 0-dim tensors to Variable API.\n     data = data.as_strided_({1}, {1});\n   }\n-  return Variable(new VariableImpl(std::move(data), flags, output_nr, std::move(grad_fn)), false);\n+  return Variable(new VariableImpl(std::move(data), requires_grad), false);\n }\n \n-Variable make_variable(at::Tensor data, std::shared_ptr<Function> grad_fn);\n-\n-inline Variable make_variable(at::Tensor data, bool requires_grad, bool is_volatile=false) {\n-  return make_variable(std::move(data), VarFlags(requires_grad, is_volatile));\n+inline Variable make_variable(at::Tensor data, int output_nr, std::shared_ptr<Function> grad_fn) {\n+  if (data.defined() && data.dim() == 0) {\n+    // don't expose 0-dim tensors to Variable API.\n+    data = data.as_strided_({1}, {1});\n+  }\n+  return Variable(new VariableImpl(std::move(data), false, output_nr, std::move(grad_fn)), false);", "path": "torch/csrc/autograd/variable.h", "position": 104, "original_position": 104, "commit_id": "5aa6a4195c92aa7a2c416cbdff72ae50e94d4e03", "original_commit_id": "aca0b327182511a74a0ff1ef2deff0656935b1d4", "user": {"login": "colesbury", "id": 655866, "node_id": "MDQ6VXNlcjY1NTg2Ng==", "avatar_url": "https://avatars1.githubusercontent.com/u/655866?v=4", "gravatar_id": "", "url": "https://api.github.com/users/colesbury", "html_url": "https://github.com/colesbury", "followers_url": "https://api.github.com/users/colesbury/followers", "following_url": "https://api.github.com/users/colesbury/following{/other_user}", "gists_url": "https://api.github.com/users/colesbury/gists{/gist_id}", "starred_url": "https://api.github.com/users/colesbury/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/colesbury/subscriptions", "organizations_url": "https://api.github.com/users/colesbury/orgs", "repos_url": "https://api.github.com/users/colesbury/repos", "events_url": "https://api.github.com/users/colesbury/events{/privacy}", "received_events_url": "https://api.github.com/users/colesbury/received_events", "type": "User", "site_admin": false}, "body": "It makes the `requires_grad()` computation a little simpler (we don't have to explicitly check if the variable is a leaf).", "created_at": "2017-12-13T23:01:31Z", "updated_at": "2018-11-23T15:37:21Z", "html_url": "https://github.com/pytorch/pytorch/pull/3970#discussion_r156811422", "pull_request_url": "https://api.github.com/repos/pytorch/pytorch/pulls/3970", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/156811422"}, "html": {"href": "https://github.com/pytorch/pytorch/pull/3970#discussion_r156811422"}, "pull_request": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/3970"}}, "body_html": "<p>It makes the <code>requires_grad()</code> computation a little simpler (we don't have to explicitly check if the variable is a leaf).</p>", "body_text": "It makes the requires_grad() computation a little simpler (we don't have to explicitly check if the variable is a leaf).", "in_reply_to_id": 156776017}