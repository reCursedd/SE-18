{"url": "https://api.github.com/repos/pytorch/pytorch/issues/comments/315587237", "html_url": "https://github.com/pytorch/pytorch/issues/2021#issuecomment-315587237", "issue_url": "https://api.github.com/repos/pytorch/pytorch/issues/2021", "id": 315587237, "node_id": "MDEyOklzc3VlQ29tbWVudDMxNTU4NzIzNw==", "user": {"login": "soumith", "id": 1310570, "node_id": "MDQ6VXNlcjEzMTA1NzA=", "avatar_url": "https://avatars0.githubusercontent.com/u/1310570?v=4", "gravatar_id": "", "url": "https://api.github.com/users/soumith", "html_url": "https://github.com/soumith", "followers_url": "https://api.github.com/users/soumith/followers", "following_url": "https://api.github.com/users/soumith/following{/other_user}", "gists_url": "https://api.github.com/users/soumith/gists{/gist_id}", "starred_url": "https://api.github.com/users/soumith/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/soumith/subscriptions", "organizations_url": "https://api.github.com/users/soumith/orgs", "repos_url": "https://api.github.com/users/soumith/repos", "events_url": "https://api.github.com/users/soumith/events{/privacy}", "received_events_url": "https://api.github.com/users/soumith/received_events", "type": "User", "site_admin": false}, "created_at": "2017-07-16T05:38:23Z", "updated_at": "2017-07-16T05:38:23Z", "author_association": "MEMBER", "body_html": "<p>David Lopez-Paz reported this as well, seems like a small bug to fix. Here's david's stack trace:</p>\n<pre><code>TypeErrorTraceback (most recent call last)\n&lt;ipython-input-23-8ab80c925f36&gt; in &lt;module&gt;()\n    144     lossD = bce(netD(torch.cat((fake, real))), labD)\n    145     lossD.backward()\n--&gt; 146     optD.step()\n    147 \n    148     fake = netG(sample_noise(bs, n_latent, gpu))\n\n/home/dlp/local/anaconda2/lib/python2.7/site-packages/torch/optim/adagrad.pyc in step(self, closure)\n     80                     p.data.add_(-clr, make_sparse(grad_values / std_values))\n     81                 else:\n---&gt; 82                     state['sum'].addcmul_(1, grad, grad)\n     83                     std = state['sum'].sqrt().add_(1e-10)\n     84                     p.data.addcdiv_(-clr, grad, std)\n\nTypeError: addcmul_ received an invalid combination of arguments - got (int, torch.cuda.FloatTensor, torch.cuda.FloatTensor), but expected one of:\n * (torch.FloatTensor tensor1, torch.FloatTensor tensor2)\n * (torch.SparseFloatTensor tensor1, torch.SparseFloatTensor tensor2)\n * (float value, torch.FloatTensor tensor1, torch.FloatTensor tensor2)\n      didn't match because some of the arguments have invalid types: (int, !torch.cuda.FloatTensor!, !torch.cuda.FloatTensor!)\n * (float value, torch.SparseFloatTensor tensor1, torch.SparseFloatTensor tensor2)\n      didn't match because some of the arguments have invalid types: (int, !torch.cuda.FloatTensor!, !torch.cuda.FloatTensor!)\n</code></pre>", "body_text": "David Lopez-Paz reported this as well, seems like a small bug to fix. Here's david's stack trace:\nTypeErrorTraceback (most recent call last)\n<ipython-input-23-8ab80c925f36> in <module>()\n    144     lossD = bce(netD(torch.cat((fake, real))), labD)\n    145     lossD.backward()\n--> 146     optD.step()\n    147 \n    148     fake = netG(sample_noise(bs, n_latent, gpu))\n\n/home/dlp/local/anaconda2/lib/python2.7/site-packages/torch/optim/adagrad.pyc in step(self, closure)\n     80                     p.data.add_(-clr, make_sparse(grad_values / std_values))\n     81                 else:\n---> 82                     state['sum'].addcmul_(1, grad, grad)\n     83                     std = state['sum'].sqrt().add_(1e-10)\n     84                     p.data.addcdiv_(-clr, grad, std)\n\nTypeError: addcmul_ received an invalid combination of arguments - got (int, torch.cuda.FloatTensor, torch.cuda.FloatTensor), but expected one of:\n * (torch.FloatTensor tensor1, torch.FloatTensor tensor2)\n * (torch.SparseFloatTensor tensor1, torch.SparseFloatTensor tensor2)\n * (float value, torch.FloatTensor tensor1, torch.FloatTensor tensor2)\n      didn't match because some of the arguments have invalid types: (int, !torch.cuda.FloatTensor!, !torch.cuda.FloatTensor!)\n * (float value, torch.SparseFloatTensor tensor1, torch.SparseFloatTensor tensor2)\n      didn't match because some of the arguments have invalid types: (int, !torch.cuda.FloatTensor!, !torch.cuda.FloatTensor!)", "body": "David Lopez-Paz reported this as well, seems like a small bug to fix. Here's david's stack trace:\r\n\r\n```\r\nTypeErrorTraceback (most recent call last)\r\n<ipython-input-23-8ab80c925f36> in <module>()\r\n    144     lossD = bce(netD(torch.cat((fake, real))), labD)\r\n    145     lossD.backward()\r\n--> 146     optD.step()\r\n    147 \r\n    148     fake = netG(sample_noise(bs, n_latent, gpu))\r\n\r\n/home/dlp/local/anaconda2/lib/python2.7/site-packages/torch/optim/adagrad.pyc in step(self, closure)\r\n     80                     p.data.add_(-clr, make_sparse(grad_values / std_values))\r\n     81                 else:\r\n---> 82                     state['sum'].addcmul_(1, grad, grad)\r\n     83                     std = state['sum'].sqrt().add_(1e-10)\r\n     84                     p.data.addcdiv_(-clr, grad, std)\r\n\r\nTypeError: addcmul_ received an invalid combination of arguments - got (int, torch.cuda.FloatTensor, torch.cuda.FloatTensor), but expected one of:\r\n * (torch.FloatTensor tensor1, torch.FloatTensor tensor2)\r\n * (torch.SparseFloatTensor tensor1, torch.SparseFloatTensor tensor2)\r\n * (float value, torch.FloatTensor tensor1, torch.FloatTensor tensor2)\r\n      didn't match because some of the arguments have invalid types: (int, !torch.cuda.FloatTensor!, !torch.cuda.FloatTensor!)\r\n * (float value, torch.SparseFloatTensor tensor1, torch.SparseFloatTensor tensor2)\r\n      didn't match because some of the arguments have invalid types: (int, !torch.cuda.FloatTensor!, !torch.cuda.FloatTensor!)\r\n```"}