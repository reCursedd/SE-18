{"url": "https://api.github.com/repos/pytorch/pytorch/issues/76", "repository_url": "https://api.github.com/repos/pytorch/pytorch", "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/76/labels{/name}", "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/76/comments", "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/76/events", "html_url": "https://github.com/pytorch/pytorch/issues/76", "id": 180421984, "node_id": "MDU6SXNzdWUxODA0MjE5ODQ=", "number": 76, "title": "Add an keyword argument \"device\" to torch.cuda.XXXTensor", "user": {"login": "colesbury", "id": 655866, "node_id": "MDQ6VXNlcjY1NTg2Ng==", "avatar_url": "https://avatars1.githubusercontent.com/u/655866?v=4", "gravatar_id": "", "url": "https://api.github.com/users/colesbury", "html_url": "https://github.com/colesbury", "followers_url": "https://api.github.com/users/colesbury/followers", "following_url": "https://api.github.com/users/colesbury/following{/other_user}", "gists_url": "https://api.github.com/users/colesbury/gists{/gist_id}", "starred_url": "https://api.github.com/users/colesbury/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/colesbury/subscriptions", "organizations_url": "https://api.github.com/users/colesbury/orgs", "repos_url": "https://api.github.com/users/colesbury/repos", "events_url": "https://api.github.com/users/colesbury/events{/privacy}", "received_events_url": "https://api.github.com/users/colesbury/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 424131849, "node_id": "MDU6TGFiZWw0MjQxMzE4NDk=", "url": "https://api.github.com/repos/pytorch/pytorch/labels/enhancement", "name": "enhancement", "color": "84b6eb", "default": true}, {"id": 443483881, "node_id": "MDU6TGFiZWw0NDM0ODM4ODE=", "url": "https://api.github.com/repos/pytorch/pytorch/labels/todo", "name": "todo", "color": "c2e0c6", "default": false}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2016-09-30T23:27:10Z", "updated_at": "2016-10-02T04:27:44Z", "closed_at": "2016-10-02T04:27:44Z", "author_association": "MEMBER", "body_html": "<p>One of the weird things, is that to create a cuda tensor of the same type and size on a <strong>different</strong> device, you now have to write:</p>\n<div class=\"highlight highlight-source-python\"><pre><span class=\"pl-k\">with</span> torch.cuda.device(<span class=\"pl-c1\">3</span>):\n    x <span class=\"pl-k\">=</span> <span class=\"pl-c1\">type</span>(tensor)(tensor.size())</pre></div>\n<p>This does not work, because it places x on tensor's device:</p>\n<div class=\"highlight highlight-source-python\"><pre><span class=\"pl-k\">with</span> torch.cuda.device(<span class=\"pl-c1\">3</span>):\n    x <span class=\"pl-k\">=</span> tensor.new(tensor.size())</pre></div>\n<p>We should probably allow explicitly choosing the device in the constructor and new functions:</p>\n<div class=\"highlight highlight-source-python\"><pre>x <span class=\"pl-k\">=</span> torch.cuda.FloatTensor(foo.size(), <span class=\"pl-v\">device</span><span class=\"pl-k\">=</span><span class=\"pl-c1\">3</span>)\ny <span class=\"pl-k\">=</span> x.new(<span class=\"pl-v\">device</span><span class=\"pl-k\">=</span><span class=\"pl-c1\">3</span>)\ny <span class=\"pl-k\">=</span> x.type(<span class=\"pl-s\"><span class=\"pl-pds\">'</span>torch.cuda.FloatTensor<span class=\"pl-pds\">'</span></span>, <span class=\"pl-v\">device</span><span class=\"pl-k\">=</span><span class=\"pl-c1\">3</span>)</pre></div>", "body_text": "One of the weird things, is that to create a cuda tensor of the same type and size on a different device, you now have to write:\nwith torch.cuda.device(3):\n    x = type(tensor)(tensor.size())\nThis does not work, because it places x on tensor's device:\nwith torch.cuda.device(3):\n    x = tensor.new(tensor.size())\nWe should probably allow explicitly choosing the device in the constructor and new functions:\nx = torch.cuda.FloatTensor(foo.size(), device=3)\ny = x.new(device=3)\ny = x.type('torch.cuda.FloatTensor', device=3)", "body": "One of the weird things, is that to create a cuda tensor of the same type and size on a **different** device, you now have to write:\n\n``` python\nwith torch.cuda.device(3):\n    x = type(tensor)(tensor.size())\n```\n\nThis does not work, because it places x on tensor's device:\n\n``` python\nwith torch.cuda.device(3):\n    x = tensor.new(tensor.size())\n```\n\nWe should probably allow explicitly choosing the device in the constructor and new functions:\n\n``` python\nx = torch.cuda.FloatTensor(foo.size(), device=3)\ny = x.new(device=3)\ny = x.type('torch.cuda.FloatTensor', device=3)\n```\n"}