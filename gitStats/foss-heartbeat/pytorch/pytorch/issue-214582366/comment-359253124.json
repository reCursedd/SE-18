{"url": "https://api.github.com/repos/pytorch/pytorch/issues/comments/359253124", "html_url": "https://github.com/pytorch/pytorch/issues/1010#issuecomment-359253124", "issue_url": "https://api.github.com/repos/pytorch/pytorch/issues/1010", "id": 359253124, "node_id": "MDEyOklzc3VlQ29tbWVudDM1OTI1MzEyNA==", "user": {"login": "drcege", "id": 3213204, "node_id": "MDQ6VXNlcjMyMTMyMDQ=", "avatar_url": "https://avatars2.githubusercontent.com/u/3213204?v=4", "gravatar_id": "", "url": "https://api.github.com/users/drcege", "html_url": "https://github.com/drcege", "followers_url": "https://api.github.com/users/drcege/followers", "following_url": "https://api.github.com/users/drcege/following{/other_user}", "gists_url": "https://api.github.com/users/drcege/gists{/gist_id}", "starred_url": "https://api.github.com/users/drcege/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/drcege/subscriptions", "organizations_url": "https://api.github.com/users/drcege/orgs", "repos_url": "https://api.github.com/users/drcege/repos", "events_url": "https://api.github.com/users/drcege/events{/privacy}", "received_events_url": "https://api.github.com/users/drcege/received_events", "type": "User", "site_admin": false}, "created_at": "2018-01-21T14:39:28Z", "updated_at": "2018-01-21T14:41:23Z", "author_association": "NONE", "body_html": "<p><a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=28682908\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/ShoufaChen\">@ShoufaChen</a>  Recently, I often get  <code>Assertion input &gt;= 0. &amp;&amp; input &lt;= 1. failed</code>  when using BCELoss. I used some custom operations before feeding into BCELoss, actually, product of two softmax.  So, in theory, the product will never greater than one.<br>\nBased on my debugging, when the error occur, the input is 1. However, I cannot see the exact number.  I think this may be related to floating-point precision?</p>", "body_text": "@ShoufaChen  Recently, I often get  Assertion input >= 0. && input <= 1. failed  when using BCELoss. I used some custom operations before feeding into BCELoss, actually, product of two softmax.  So, in theory, the product will never greater than one.\nBased on my debugging, when the error occur, the input is 1. However, I cannot see the exact number.  I think this may be related to floating-point precision?", "body": "@ShoufaChen  Recently, I often get  `Assertion input >= 0. && input <= 1. failed`  when using BCELoss. I used some custom operations before feeding into BCELoss, actually, product of two softmax.  So, in theory, the product will never greater than one.  \r\nBased on my debugging, when the error occur, the input is 1. However, I cannot see the exact number.  I think this may be related to floating-point precision?"}