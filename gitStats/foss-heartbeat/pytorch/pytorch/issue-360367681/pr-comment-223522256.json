{"url": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/223522256", "pull_request_review_id": 162670189, "id": 223522256, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIyMzUyMjI1Ng==", "diff_hunk": "@@ -34,3 +35,14 @@ def __enter__(self):\n \n     def __exit__(self, type, value, tb):\n         self.remove()\n+\n+\n+def warn_if_has_hooks(tensor):\n+    if tensor._backward_hooks:\n+        for k in tensor._backward_hooks:\n+            hook = tensor._backward_hooks[k]\n+            if not hasattr(k, \"_torch_unserializable\"):", "path": "torch/utils/hooks.py", "position": null, "original_position": 17, "commit_id": "1af342e0c8cc2c538c556c444b2967815f98af21", "original_commit_id": "791a4ecbb8cb3e213f4ab174d8e7cdd3fe63f5a1", "user": {"login": "ezyang", "id": 13564, "node_id": "MDQ6VXNlcjEzNTY0", "avatar_url": "https://avatars0.githubusercontent.com/u/13564?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ezyang", "html_url": "https://github.com/ezyang", "followers_url": "https://api.github.com/users/ezyang/followers", "following_url": "https://api.github.com/users/ezyang/following{/other_user}", "gists_url": "https://api.github.com/users/ezyang/gists{/gist_id}", "starred_url": "https://api.github.com/users/ezyang/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ezyang/subscriptions", "organizations_url": "https://api.github.com/users/ezyang/orgs", "repos_url": "https://api.github.com/users/ezyang/repos", "events_url": "https://api.github.com/users/ezyang/events{/privacy}", "received_events_url": "https://api.github.com/users/ezyang/received_events", "type": "User", "site_admin": false}, "body": "Hmm, my intention was originally that you mark the hook as unserializable when you attach it using `add_hook`, rather than post-facto from the handle. (If you had a decorator, would be `unserializable_hook(lambda t: my_hook_impl())`. Does that make sense?", "created_at": "2018-10-08T23:15:27Z", "updated_at": "2018-11-23T15:52:38Z", "html_url": "https://github.com/pytorch/pytorch/pull/11705#discussion_r223522256", "pull_request_url": "https://api.github.com/repos/pytorch/pytorch/pulls/11705", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/223522256"}, "html": {"href": "https://github.com/pytorch/pytorch/pull/11705#discussion_r223522256"}, "pull_request": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/11705"}}, "body_html": "<p>Hmm, my intention was originally that you mark the hook as unserializable when you attach it using <code>add_hook</code>, rather than post-facto from the handle. (If you had a decorator, would be <code>unserializable_hook(lambda t: my_hook_impl())</code>. Does that make sense?</p>", "body_text": "Hmm, my intention was originally that you mark the hook as unserializable when you attach it using add_hook, rather than post-facto from the handle. (If you had a decorator, would be unserializable_hook(lambda t: my_hook_impl()). Does that make sense?", "in_reply_to_id": 223431520}