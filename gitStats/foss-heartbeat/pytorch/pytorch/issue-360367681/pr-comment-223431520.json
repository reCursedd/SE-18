{"url": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/223431520", "pull_request_review_id": 162554371, "id": 223431520, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIyMzQzMTUyMA==", "diff_hunk": "@@ -34,3 +35,14 @@ def __enter__(self):\n \n     def __exit__(self, type, value, tb):\n         self.remove()\n+\n+\n+def warn_if_has_hooks(tensor):\n+    if tensor._backward_hooks:\n+        for k in tensor._backward_hooks:\n+            hook = tensor._backward_hooks[k]\n+            if not hasattr(k, \"_torch_unserializable\"):", "path": "torch/utils/hooks.py", "position": null, "original_position": 17, "commit_id": "1af342e0c8cc2c538c556c444b2967815f98af21", "original_commit_id": "791a4ecbb8cb3e213f4ab174d8e7cdd3fe63f5a1", "user": {"login": "SsnL", "id": 5674597, "node_id": "MDQ6VXNlcjU2NzQ1OTc=", "avatar_url": "https://avatars2.githubusercontent.com/u/5674597?v=4", "gravatar_id": "", "url": "https://api.github.com/users/SsnL", "html_url": "https://github.com/SsnL", "followers_url": "https://api.github.com/users/SsnL/followers", "following_url": "https://api.github.com/users/SsnL/following{/other_user}", "gists_url": "https://api.github.com/users/SsnL/gists{/gist_id}", "starred_url": "https://api.github.com/users/SsnL/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/SsnL/subscriptions", "organizations_url": "https://api.github.com/users/SsnL/orgs", "repos_url": "https://api.github.com/users/SsnL/repos", "events_url": "https://api.github.com/users/SsnL/events{/privacy}", "received_events_url": "https://api.github.com/users/SsnL/received_events", "type": "User", "site_admin": false}, "body": "Also, another problem is that when users add hooks via `tensor.add_hook`, what they get is a handle, which is not the hook object stored in `_backward_hooks`. So effectively there is no direct way to set `_torch_unserializable` on the hook. Maybe make that a method on the handle (or an attribute with a setter)? ", "created_at": "2018-10-08T16:49:49Z", "updated_at": "2018-11-23T15:52:34Z", "html_url": "https://github.com/pytorch/pytorch/pull/11705#discussion_r223431520", "pull_request_url": "https://api.github.com/repos/pytorch/pytorch/pulls/11705", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/223431520"}, "html": {"href": "https://github.com/pytorch/pytorch/pull/11705#discussion_r223431520"}, "pull_request": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/11705"}}, "body_html": "<p>Also, another problem is that when users add hooks via <code>tensor.add_hook</code>, what they get is a handle, which is not the hook object stored in <code>_backward_hooks</code>. So effectively there is no direct way to set <code>_torch_unserializable</code> on the hook. Maybe make that a method on the handle (or an attribute with a setter)?</p>", "body_text": "Also, another problem is that when users add hooks via tensor.add_hook, what they get is a handle, which is not the hook object stored in _backward_hooks. So effectively there is no direct way to set _torch_unserializable on the hook. Maybe make that a method on the handle (or an attribute with a setter)?"}