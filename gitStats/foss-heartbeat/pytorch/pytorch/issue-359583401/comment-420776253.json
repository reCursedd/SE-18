{"url": "https://api.github.com/repos/pytorch/pytorch/issues/comments/420776253", "html_url": "https://github.com/pytorch/pytorch/pull/11583#issuecomment-420776253", "issue_url": "https://api.github.com/repos/pytorch/pytorch/issues/11583", "id": 420776253, "node_id": "MDEyOklzc3VlQ29tbWVudDQyMDc3NjI1Mw==", "user": {"login": "gchanan", "id": 3768583, "node_id": "MDQ6VXNlcjM3Njg1ODM=", "avatar_url": "https://avatars2.githubusercontent.com/u/3768583?v=4", "gravatar_id": "", "url": "https://api.github.com/users/gchanan", "html_url": "https://github.com/gchanan", "followers_url": "https://api.github.com/users/gchanan/followers", "following_url": "https://api.github.com/users/gchanan/following{/other_user}", "gists_url": "https://api.github.com/users/gchanan/gists{/gist_id}", "starred_url": "https://api.github.com/users/gchanan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/gchanan/subscriptions", "organizations_url": "https://api.github.com/users/gchanan/orgs", "repos_url": "https://api.github.com/users/gchanan/repos", "events_url": "https://api.github.com/users/gchanan/events{/privacy}", "received_events_url": "https://api.github.com/users/gchanan/received_events", "type": "User", "site_admin": false}, "created_at": "2018-09-12T19:54:29Z", "updated_at": "2018-09-12T19:54:29Z", "author_association": "CONTRIBUTOR", "body_html": "<p>what about here: <div class=\"border rounded-1 my-2\">\n  <div class=\"f6 px-3 py-2 lh-condensed border-bottom bg-gray-light\">\n    <p class=\"mb-0 text-bold\">\n      <a href=\"https://github.com/pytorch/pytorch/blob/739e6af86940f558f384a4a8922df8dc660d5660/aten/src/ATen/function_wrapper.py#L1083-L1092\">pytorch/aten/src/ATen/function_wrapper.py</a>\n    </p>\n    <p class=\"mb-0 text-gray-light\">\n        Lines 1083 to 1092\n      in\n      <a data-pjax=\"true\" class=\"commit-tease-sha\" href=\"/pytorch/pytorch/commit/739e6af86940f558f384a4a8922df8dc660d5660\">739e6af</a>\n    </p>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper blob-wrapper-embedded data\">\n    <table class=\"highlight tab-size mb-0 js-file-line-container\" data-tab-size=\"8\">\n\n        <tbody><tr class=\"border-0\">\n          <td id=\"L1083\" class=\"blob-num border-0 px-3 py-0 bg-white js-line-number\" data-line-number=\"1083\"></td>\n          <td id=\"LC1083\" class=\"blob-code border-0 px-3 py-0 bg-white blob-code-inner js-file-line\"> <span class=\"pl-k\">if</span> <span class=\"pl-k\">not</span> is_factory_method: </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L1084\" class=\"blob-num border-0 px-3 py-0 bg-white js-line-number\" data-line-number=\"1084\"></td>\n          <td id=\"LC1084\" class=\"blob-code border-0 px-3 py-0 bg-white blob-code-inner js-file-line\">     <span class=\"pl-k\">if</span> option[<span class=\"pl-s\"><span class=\"pl-pds\">'</span>deprecated<span class=\"pl-pds\">'</span></span>]: </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L1085\" class=\"blob-num border-0 px-3 py-0 bg-white js-line-number\" data-line-number=\"1085\"></td>\n          <td id=\"LC1085\" class=\"blob-code border-0 px-3 py-0 bg-white blob-code-inner js-file-line\">         <span class=\"pl-c\"><span class=\"pl-c\">#</span> Deprecated functions are always non-extended,</span> </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L1086\" class=\"blob-num border-0 px-3 py-0 bg-white js-line-number\" data-line-number=\"1086\"></td>\n          <td id=\"LC1086\" class=\"blob-code border-0 px-3 py-0 bg-white blob-code-inner js-file-line\">         <span class=\"pl-c\"><span class=\"pl-c\">#</span> because they need to be made available from Type</span> </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L1087\" class=\"blob-num border-0 px-3 py-0 bg-white js-line-number\" data-line-number=\"1087\"></td>\n          <td id=\"LC1087\" class=\"blob-code border-0 px-3 py-0 bg-white blob-code-inner js-file-line\">         <span class=\"pl-c\"><span class=\"pl-c\">#</span> (the public interface) so that code like</span> </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L1088\" class=\"blob-num border-0 px-3 py-0 bg-white js-line-number\" data-line-number=\"1088\"></td>\n          <td id=\"LC1088\" class=\"blob-code border-0 px-3 py-0 bg-white blob-code-inner js-file-line\">         <span class=\"pl-c\"><span class=\"pl-c\">#</span> tensor.type().arange(...) keeps working.  Once</span> </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L1089\" class=\"blob-num border-0 px-3 py-0 bg-white js-line-number\" data-line-number=\"1089\"></td>\n          <td id=\"LC1089\" class=\"blob-code border-0 px-3 py-0 bg-white blob-code-inner js-file-line\">         <span class=\"pl-c\"><span class=\"pl-c\">#</span> we remove the deprecated functions, we can eliminate</span> </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L1090\" class=\"blob-num border-0 px-3 py-0 bg-white js-line-number\" data-line-number=\"1090\"></td>\n          <td id=\"LC1090\" class=\"blob-code border-0 px-3 py-0 bg-white blob-code-inner js-file-line\">         <span class=\"pl-c\"><span class=\"pl-c\">#</span> these methods entirely.</span> </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L1091\" class=\"blob-num border-0 px-3 py-0 bg-white js-line-number\" data-line-number=\"1091\"></td>\n          <td id=\"LC1091\" class=\"blob-code border-0 px-3 py-0 bg-white blob-code-inner js-file-line\">         top_env[<span class=\"pl-s\"><span class=\"pl-pds\">'</span>pure_virtual_type_method_declarations<span class=\"pl-pds\">'</span></span>].append( </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L1092\" class=\"blob-num border-0 px-3 py-0 bg-white js-line-number\" data-line-number=\"1092\"></td>\n          <td id=\"LC1092\" class=\"blob-code border-0 px-3 py-0 bg-white blob-code-inner js-file-line\">             <span class=\"pl-c1\">DEPRECATED_PURE_VIRTUAL_TYPE_METHOD_DECLARATION</span>.substitute(env)) </td>\n        </tr>\n    </tbody></table>\n  </div>\n</div>\n?  Can that go?</p>", "body_text": "what about here: \n  \n    \n      pytorch/aten/src/ATen/function_wrapper.py\n    \n    \n        Lines 1083 to 1092\n      in\n      739e6af\n    \n    \n    \n    \n\n        \n          \n           if not is_factory_method: \n        \n\n        \n          \n               if option['deprecated']: \n        \n\n        \n          \n                   # Deprecated functions are always non-extended, \n        \n\n        \n          \n                   # because they need to be made available from Type \n        \n\n        \n          \n                   # (the public interface) so that code like \n        \n\n        \n          \n                   # tensor.type().arange(...) keeps working.  Once \n        \n\n        \n          \n                   # we remove the deprecated functions, we can eliminate \n        \n\n        \n          \n                   # these methods entirely. \n        \n\n        \n          \n                   top_env['pure_virtual_type_method_declarations'].append( \n        \n\n        \n          \n                       DEPRECATED_PURE_VIRTUAL_TYPE_METHOD_DECLARATION.substitute(env)) \n        \n    \n  \n\n?  Can that go?", "body": "what about here: https://github.com/pytorch/pytorch/blob/739e6af86940f558f384a4a8922df8dc660d5660/aten/src/ATen/function_wrapper.py#L1083-L1092?  Can that go?"}