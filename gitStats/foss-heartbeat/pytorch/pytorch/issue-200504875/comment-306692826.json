{"url": "https://api.github.com/repos/pytorch/pytorch/issues/comments/306692826", "html_url": "https://github.com/pytorch/pytorch/issues/440#issuecomment-306692826", "issue_url": "https://api.github.com/repos/pytorch/pytorch/issues/440", "id": 306692826, "node_id": "MDEyOklzc3VlQ29tbWVudDMwNjY5MjgyNg==", "user": {"login": "fmassa", "id": 9110200, "node_id": "MDQ6VXNlcjkxMTAyMDA=", "avatar_url": "https://avatars2.githubusercontent.com/u/9110200?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fmassa", "html_url": "https://github.com/fmassa", "followers_url": "https://api.github.com/users/fmassa/followers", "following_url": "https://api.github.com/users/fmassa/following{/other_user}", "gists_url": "https://api.github.com/users/fmassa/gists{/gist_id}", "starred_url": "https://api.github.com/users/fmassa/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fmassa/subscriptions", "organizations_url": "https://api.github.com/users/fmassa/orgs", "repos_url": "https://api.github.com/users/fmassa/repos", "events_url": "https://api.github.com/users/fmassa/events{/privacy}", "received_events_url": "https://api.github.com/users/fmassa/received_events", "type": "User", "site_admin": false}, "created_at": "2017-06-07T05:44:56Z", "updated_at": "2017-06-07T15:00:43Z", "author_association": "MEMBER", "body_html": "<p><a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=10279780\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/AjayTalati\">@AjayTalati</a> it's not done yet. For the moment you'd need to use something like</p>\n<div class=\"highlight highlight-source-python\"><pre><span class=\"pl-k\">def</span> <span class=\"pl-en\">softmax</span>(<span class=\"pl-smi\">input</span>, <span class=\"pl-smi\">dim</span><span class=\"pl-k\">=</span><span class=\"pl-c1\">1</span>):\n    input_ex <span class=\"pl-k\">=</span> torch.exp(<span class=\"pl-c1\">input</span>)\n    <span class=\"pl-k\">return</span> input_ex <span class=\"pl-k\">/</span> input_ex.sum(dim).expand_as(<span class=\"pl-c1\">input</span>)</pre></div>", "body_text": "@AjayTalati it's not done yet. For the moment you'd need to use something like\ndef softmax(input, dim=1):\n    input_ex = torch.exp(input)\n    return input_ex / input_ex.sum(dim).expand_as(input)", "body": "@AjayTalati it's not done yet. For the moment you'd need to use something like\r\n```python\r\ndef softmax(input, dim=1):\r\n    input_ex = torch.exp(input)\r\n    return input_ex / input_ex.sum(dim).expand_as(input)\r\n```"}