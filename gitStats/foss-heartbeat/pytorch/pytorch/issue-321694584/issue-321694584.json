{"url": "https://api.github.com/repos/pytorch/pytorch/issues/7435", "repository_url": "https://api.github.com/repos/pytorch/pytorch", "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/7435/labels{/name}", "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/7435/comments", "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/7435/events", "html_url": "https://github.com/pytorch/pytorch/issues/7435", "id": 321694584, "node_id": "MDU6SXNzdWUzMjE2OTQ1ODQ=", "number": 7435, "title": "CUDNN error when grid_sample() receives an input with more than 1024 channels", "user": {"login": "csrhddlam", "id": 16692643, "node_id": "MDQ6VXNlcjE2NjkyNjQz", "avatar_url": "https://avatars1.githubusercontent.com/u/16692643?v=4", "gravatar_id": "", "url": "https://api.github.com/users/csrhddlam", "html_url": "https://github.com/csrhddlam", "followers_url": "https://api.github.com/users/csrhddlam/followers", "following_url": "https://api.github.com/users/csrhddlam/following{/other_user}", "gists_url": "https://api.github.com/users/csrhddlam/gists{/gist_id}", "starred_url": "https://api.github.com/users/csrhddlam/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/csrhddlam/subscriptions", "organizations_url": "https://api.github.com/users/csrhddlam/orgs", "repos_url": "https://api.github.com/users/csrhddlam/repos", "events_url": "https://api.github.com/users/csrhddlam/events{/privacy}", "received_events_url": "https://api.github.com/users/csrhddlam/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 443483881, "node_id": "MDU6TGFiZWw0NDM0ODM4ODE=", "url": "https://api.github.com/repos/pytorch/pytorch/labels/todo", "name": "todo", "color": "c2e0c6", "default": false}], "state": "closed", "locked": false, "assignee": {"login": "li-roy", "id": 8813817, "node_id": "MDQ6VXNlcjg4MTM4MTc=", "avatar_url": "https://avatars0.githubusercontent.com/u/8813817?v=4", "gravatar_id": "", "url": "https://api.github.com/users/li-roy", "html_url": "https://github.com/li-roy", "followers_url": "https://api.github.com/users/li-roy/followers", "following_url": "https://api.github.com/users/li-roy/following{/other_user}", "gists_url": "https://api.github.com/users/li-roy/gists{/gist_id}", "starred_url": "https://api.github.com/users/li-roy/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/li-roy/subscriptions", "organizations_url": "https://api.github.com/users/li-roy/orgs", "repos_url": "https://api.github.com/users/li-roy/repos", "events_url": "https://api.github.com/users/li-roy/events{/privacy}", "received_events_url": "https://api.github.com/users/li-roy/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "li-roy", "id": 8813817, "node_id": "MDQ6VXNlcjg4MTM4MTc=", "avatar_url": "https://avatars0.githubusercontent.com/u/8813817?v=4", "gravatar_id": "", "url": "https://api.github.com/users/li-roy", "html_url": "https://github.com/li-roy", "followers_url": "https://api.github.com/users/li-roy/followers", "following_url": "https://api.github.com/users/li-roy/following{/other_user}", "gists_url": "https://api.github.com/users/li-roy/gists{/gist_id}", "starred_url": "https://api.github.com/users/li-roy/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/li-roy/subscriptions", "organizations_url": "https://api.github.com/users/li-roy/orgs", "repos_url": "https://api.github.com/users/li-roy/repos", "events_url": "https://api.github.com/users/li-roy/events{/privacy}", "received_events_url": "https://api.github.com/users/li-roy/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 4, "created_at": "2018-05-09T19:22:12Z", "updated_at": "2018-06-16T00:33:34Z", "closed_at": "2018-06-16T00:33:34Z", "author_association": "NONE", "body_html": "<h2>Code example</h2>\n<pre><code>import torch\nx = torch.zeros(1, 1025, 7, 7).cuda()  # 1024 works well\nx.requires_grad = True\ngrid = torch.zeros(1, 3, 3, 2).cuda()\ngrid.requires_grad = True\n\n# from torch.nn._functions.vision import GridSampler\n# outputs = GridSampler.apply(x, grid, 'zeros')  # CUDA version works well\noutputs = torch.nn.functional.grid_sample(x, grid)  # CUDNN version doesn't work\n\nloss = torch.mean(outputs)\nloss.backward()\n</code></pre>\n<h2>Error message</h2>\n<pre><code>File \"main.py\", line 12, \n    loss.backward()\nFile \"~/anaconda3/lib/python3.6/site-packages/torch/tensor.py\", line 93, in backward\n    torch.autograd.backward(self, gradient, retain_graph, create_graph)\nFile \"~/anaconda3/lib/python3.6/site-packages/torch/autograd/__init__.py\", line 89, in backward\n    allow_unreachable=True)  # allow_unreachable flag\nRuntimeError: CUDNN_STATUS_NOT_SUPPORTED. This error may appear if you passed in a non-contiguous input.\n</code></pre>\n<h2>System Info</h2>\n<p>PyTorch version: 0.4.0<br>\nIs debug build: No<br>\nCUDA used to build PyTorch: 9.0.176</p>\n<p>OS: Ubuntu 16.04.3 LTS<br>\nGCC version: (Ubuntu 5.4.0-6ubuntu1~16.04.5) 5.4.0 20160609<br>\nCMake version: version 3.9.4</p>\n<p>Python version: 3.6<br>\nIs CUDA available: Yes<br>\nCUDA runtime version: 9.0.176<br>\nGPU models and configuration:<br>\nGPU 0: TITAN X (Pascal)<br>\nGPU 1: TITAN X (Pascal)</p>\n<p>Nvidia driver version: 384.98<br>\ncuDNN version: Probably one of the following:<br>\n/usr/lib/x86_64-linux-gnu/libcudnn.so.6.0.21<br>\n/usr/lib/x86_64-linux-gnu/libcudnn.so.7.0.5<br>\n/usr/lib/x86_64-linux-gnu/libcudnn_static_v7.a<br>\n/usr/local/MATLAB/R2016b/bin/glnxa64/libcudnn.so.4.0.7<br>\n/usr/local/lib/python2.7/dist-packages/torch/lib/libcudnn.so.6<br>\n/usr/local/lib/python3.5/dist-packages/torch/lib/libcudnn.so.6</p>\n<p>Versions of relevant libraries:<br>\n[pip3] numpy (1.14.1)<br>\n[pip3] numpydoc (0.6.0)<br>\n[pip3] torch (0.4.0)<br>\n[pip3] torchvision (0.2.0)<br>\n[conda] cuda90                    1.0                  h6433d27_0    pytorch<br>\n[conda] magma-cuda90              2.3.0                         1    soumith<br>\n[conda] pytorch                   0.4.0           py36_cuda9.0.176_cudnn7.1.2_1  [cuda90]  pytorch<br>\n[conda] torchvision               0.2.1                    py36_1    pytorch</p>", "body_text": "Code example\nimport torch\nx = torch.zeros(1, 1025, 7, 7).cuda()  # 1024 works well\nx.requires_grad = True\ngrid = torch.zeros(1, 3, 3, 2).cuda()\ngrid.requires_grad = True\n\n# from torch.nn._functions.vision import GridSampler\n# outputs = GridSampler.apply(x, grid, 'zeros')  # CUDA version works well\noutputs = torch.nn.functional.grid_sample(x, grid)  # CUDNN version doesn't work\n\nloss = torch.mean(outputs)\nloss.backward()\n\nError message\nFile \"main.py\", line 12, \n    loss.backward()\nFile \"~/anaconda3/lib/python3.6/site-packages/torch/tensor.py\", line 93, in backward\n    torch.autograd.backward(self, gradient, retain_graph, create_graph)\nFile \"~/anaconda3/lib/python3.6/site-packages/torch/autograd/__init__.py\", line 89, in backward\n    allow_unreachable=True)  # allow_unreachable flag\nRuntimeError: CUDNN_STATUS_NOT_SUPPORTED. This error may appear if you passed in a non-contiguous input.\n\nSystem Info\nPyTorch version: 0.4.0\nIs debug build: No\nCUDA used to build PyTorch: 9.0.176\nOS: Ubuntu 16.04.3 LTS\nGCC version: (Ubuntu 5.4.0-6ubuntu1~16.04.5) 5.4.0 20160609\nCMake version: version 3.9.4\nPython version: 3.6\nIs CUDA available: Yes\nCUDA runtime version: 9.0.176\nGPU models and configuration:\nGPU 0: TITAN X (Pascal)\nGPU 1: TITAN X (Pascal)\nNvidia driver version: 384.98\ncuDNN version: Probably one of the following:\n/usr/lib/x86_64-linux-gnu/libcudnn.so.6.0.21\n/usr/lib/x86_64-linux-gnu/libcudnn.so.7.0.5\n/usr/lib/x86_64-linux-gnu/libcudnn_static_v7.a\n/usr/local/MATLAB/R2016b/bin/glnxa64/libcudnn.so.4.0.7\n/usr/local/lib/python2.7/dist-packages/torch/lib/libcudnn.so.6\n/usr/local/lib/python3.5/dist-packages/torch/lib/libcudnn.so.6\nVersions of relevant libraries:\n[pip3] numpy (1.14.1)\n[pip3] numpydoc (0.6.0)\n[pip3] torch (0.4.0)\n[pip3] torchvision (0.2.0)\n[conda] cuda90                    1.0                  h6433d27_0    pytorch\n[conda] magma-cuda90              2.3.0                         1    soumith\n[conda] pytorch                   0.4.0           py36_cuda9.0.176_cudnn7.1.2_1  [cuda90]  pytorch\n[conda] torchvision               0.2.1                    py36_1    pytorch", "body": "## Code example\r\n```\r\nimport torch\r\nx = torch.zeros(1, 1025, 7, 7).cuda()  # 1024 works well\r\nx.requires_grad = True\r\ngrid = torch.zeros(1, 3, 3, 2).cuda()\r\ngrid.requires_grad = True\r\n\r\n# from torch.nn._functions.vision import GridSampler\r\n# outputs = GridSampler.apply(x, grid, 'zeros')  # CUDA version works well\r\noutputs = torch.nn.functional.grid_sample(x, grid)  # CUDNN version doesn't work\r\n\r\nloss = torch.mean(outputs)\r\nloss.backward()\r\n```\r\n## Error message\r\n```\r\nFile \"main.py\", line 12, \r\n    loss.backward()\r\nFile \"~/anaconda3/lib/python3.6/site-packages/torch/tensor.py\", line 93, in backward\r\n    torch.autograd.backward(self, gradient, retain_graph, create_graph)\r\nFile \"~/anaconda3/lib/python3.6/site-packages/torch/autograd/__init__.py\", line 89, in backward\r\n    allow_unreachable=True)  # allow_unreachable flag\r\nRuntimeError: CUDNN_STATUS_NOT_SUPPORTED. This error may appear if you passed in a non-contiguous input.\r\n```\r\n\r\n## System Info\r\nPyTorch version: 0.4.0\r\nIs debug build: No\r\nCUDA used to build PyTorch: 9.0.176\r\n\r\nOS: Ubuntu 16.04.3 LTS\r\nGCC version: (Ubuntu 5.4.0-6ubuntu1~16.04.5) 5.4.0 20160609\r\nCMake version: version 3.9.4\r\n\r\nPython version: 3.6\r\nIs CUDA available: Yes\r\nCUDA runtime version: 9.0.176\r\nGPU models and configuration: \r\nGPU 0: TITAN X (Pascal)\r\nGPU 1: TITAN X (Pascal)\r\n\r\nNvidia driver version: 384.98\r\ncuDNN version: Probably one of the following:\r\n/usr/lib/x86_64-linux-gnu/libcudnn.so.6.0.21\r\n/usr/lib/x86_64-linux-gnu/libcudnn.so.7.0.5\r\n/usr/lib/x86_64-linux-gnu/libcudnn_static_v7.a\r\n/usr/local/MATLAB/R2016b/bin/glnxa64/libcudnn.so.4.0.7\r\n/usr/local/lib/python2.7/dist-packages/torch/lib/libcudnn.so.6\r\n/usr/local/lib/python3.5/dist-packages/torch/lib/libcudnn.so.6\r\n\r\nVersions of relevant libraries:\r\n[pip3] numpy (1.14.1)\r\n[pip3] numpydoc (0.6.0)\r\n[pip3] torch (0.4.0)\r\n[pip3] torchvision (0.2.0)\r\n[conda] cuda90                    1.0                  h6433d27_0    pytorch\r\n[conda] magma-cuda90              2.3.0                         1    soumith\r\n[conda] pytorch                   0.4.0           py36_cuda9.0.176_cudnn7.1.2_1  [cuda90]  pytorch\r\n[conda] torchvision               0.2.1                    py36_1    pytorch"}