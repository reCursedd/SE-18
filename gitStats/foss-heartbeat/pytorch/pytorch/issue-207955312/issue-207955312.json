{"url": "https://api.github.com/repos/pytorch/pytorch/issues/754", "repository_url": "https://api.github.com/repos/pytorch/pytorch", "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/754/labels{/name}", "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/754/comments", "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/754/events", "html_url": "https://github.com/pytorch/pytorch/issues/754", "id": 207955312, "node_id": "MDU6SXNzdWUyMDc5NTUzMTI=", "number": 754, "title": "Error while saving my network", "user": {"login": "sarthak1996", "id": 8405092, "node_id": "MDQ6VXNlcjg0MDUwOTI=", "avatar_url": "https://avatars0.githubusercontent.com/u/8405092?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sarthak1996", "html_url": "https://github.com/sarthak1996", "followers_url": "https://api.github.com/users/sarthak1996/followers", "following_url": "https://api.github.com/users/sarthak1996/following{/other_user}", "gists_url": "https://api.github.com/users/sarthak1996/gists{/gist_id}", "starred_url": "https://api.github.com/users/sarthak1996/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sarthak1996/subscriptions", "organizations_url": "https://api.github.com/users/sarthak1996/orgs", "repos_url": "https://api.github.com/users/sarthak1996/repos", "events_url": "https://api.github.com/users/sarthak1996/events{/privacy}", "received_events_url": "https://api.github.com/users/sarthak1996/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-02-15T22:56:47Z", "updated_at": "2017-02-16T16:32:57Z", "closed_at": "2017-02-16T16:32:57Z", "author_association": "NONE", "body_html": "<p>I have made a CNN:</p>\n<pre><code>class convNet(nn.Module):\n    #constructor\n    def __init__(self):\n        super(convNet, self).__init__()\n       \n        self.conv1 = nn.Conv2d(3, 96, kernel_size=7,stride=1,padding=3)\n        self.conv2 = nn.Conv2d(96, 256, kernel_size=5,stride=1,padding=2)\n        self.conv3 = nn.Conv2d(256,384,kernel_size=3,stride=1,padding=1)\n        self.conv4 = nn.Conv2d(384,512,kernel_size=3,stride=1,padding=1)\n        self.conv5 = nn.Conv2d(512,1024,kernel_size=3,stride=1,padding=1)\n        self.fc1   = nn.Linear(4*4*1024, 300)\n        self.fc2   = nn.Linear(300, 100)\n        self.fc3   = nn.Linear(100, 10)\n        \n\n    def forward(self, x):\n        conv1_relu = nnFunctions.relu(self.conv1(x))\n        conv2_relu = nnFunctions.relu(self.conv2(conv1_relu))\n        conv3_relu =nnFunctions.max_pool2d(nnFunctions.relu(self.conv3(conv2_relu)),2)\n        conv4_relu =nnFunctions.max_pool2d(nnFunctions.relu(self.conv4(conv3_relu)),2)\n        conv5_relu =nnFunctions.max_pool2d(nnFunctions.relu(self.conv5(conv4_relu)),2)\n    \n        x = conv5_relu.view(-1, 4*4*1024)\n        x = nnFunctions.relu(self.fc1(x))\n        x = nnFunctions.relu(self.fc2(x))\n        x = self.fc3(x)\n        return x\n</code></pre>\n<pre><code>net=convNet()\nnet.cuda()\n</code></pre>\n<p>But when I write <code>torch.save('net.txt',net)</code></p>\n<p>It gives me the following errror:</p>\n<pre><code>\nAttributeError                            Traceback (most recent call last)\n&lt;ipython-input-13-a8f33f24049b&gt; in &lt;module&gt;()\n----&gt; 1 torch.save('net.t7',net)\n\n/home/sarthak/anaconda2/lib/python2.7/site-packages/torch/serialization.pyc in save(obj, f, pickle_module, pickle_protocol)\n    121         f = open(f, \"wb\")\n    122     try:\n--&gt; 123         return _save(obj, f, pickle_module, pickle_protocol)\n    124     finally:\n    125         if new_fd:\n\n/home/sarthak/anaconda2/lib/python2.7/site-packages/torch/serialization.pyc in _save(obj, f, pickle_module, pickle_protocol)\n    212         pickle_module.dump(sys_info, f, protocol=pickle_protocol)\n    213 \n--&gt; 214     with closing(tarfile.open(fileobj=f, mode='w:', format=tarfile.PAX_FORMAT)) as tar:\n    215         _add_to_tar(save_sys_info, tar, 'sys_info')\n    216         _add_to_tar(pickle_objects, tar, 'pickle')\n\n/home/sarthak/anaconda2/lib/python2.7/tarfile.pyc in open(cls, name, mode, fileobj, bufsize, **kwargs)\n   1691             else:\n   1692                 raise CompressionError(\"unknown compression type %r\" % comptype)\n-&gt; 1693             return func(name, filemode, fileobj, **kwargs)\n   1694 \n   1695         elif \"|\" in mode:\n\n/home/sarthak/anaconda2/lib/python2.7/tarfile.pyc in taropen(cls, name, mode, fileobj, **kwargs)\n   1721         if mode not in (\"r\", \"a\", \"w\"):\n   1722             raise ValueError(\"mode must be 'r', 'a' or 'w'\")\n-&gt; 1723         return cls(name, mode, fileobj, **kwargs)\n   1724 \n   1725     @classmethod\n\n/home/sarthak/anaconda2/lib/python2.7/tarfile.pyc in __init__(self, name, mode, fileobj, format, tarinfo, dereference, ignore_zeros, encoding, errors, pax_headers, debug, errorlevel)\n   1577         self.members = []       # list of members as TarInfo objects\n   1578         self._loaded = False    # flag if all members have been read\n-&gt; 1579         self.offset = self.fileobj.tell()\n   1580                                 # current position in the archive file\n   1581         self.inodes = {}        # dictionary caching the inodes of\n\n/home/sarthak/anaconda2/lib/python2.7/site-packages/torch/nn/modules/module.pyc in __getattr__(self, name)\n    241             if name in modules:\n    242                 return modules[name]\n--&gt; 243         return object.__getattribute__(self, name)\n    244 \n    245     def __setattr__(self, name, value):\n\nAttributeError: 'convNet' object has no attribute 'tell'\n</code></pre>", "body_text": "I have made a CNN:\nclass convNet(nn.Module):\n    #constructor\n    def __init__(self):\n        super(convNet, self).__init__()\n       \n        self.conv1 = nn.Conv2d(3, 96, kernel_size=7,stride=1,padding=3)\n        self.conv2 = nn.Conv2d(96, 256, kernel_size=5,stride=1,padding=2)\n        self.conv3 = nn.Conv2d(256,384,kernel_size=3,stride=1,padding=1)\n        self.conv4 = nn.Conv2d(384,512,kernel_size=3,stride=1,padding=1)\n        self.conv5 = nn.Conv2d(512,1024,kernel_size=3,stride=1,padding=1)\n        self.fc1   = nn.Linear(4*4*1024, 300)\n        self.fc2   = nn.Linear(300, 100)\n        self.fc3   = nn.Linear(100, 10)\n        \n\n    def forward(self, x):\n        conv1_relu = nnFunctions.relu(self.conv1(x))\n        conv2_relu = nnFunctions.relu(self.conv2(conv1_relu))\n        conv3_relu =nnFunctions.max_pool2d(nnFunctions.relu(self.conv3(conv2_relu)),2)\n        conv4_relu =nnFunctions.max_pool2d(nnFunctions.relu(self.conv4(conv3_relu)),2)\n        conv5_relu =nnFunctions.max_pool2d(nnFunctions.relu(self.conv5(conv4_relu)),2)\n    \n        x = conv5_relu.view(-1, 4*4*1024)\n        x = nnFunctions.relu(self.fc1(x))\n        x = nnFunctions.relu(self.fc2(x))\n        x = self.fc3(x)\n        return x\n\nnet=convNet()\nnet.cuda()\n\nBut when I write torch.save('net.txt',net)\nIt gives me the following errror:\n\nAttributeError                            Traceback (most recent call last)\n<ipython-input-13-a8f33f24049b> in <module>()\n----> 1 torch.save('net.t7',net)\n\n/home/sarthak/anaconda2/lib/python2.7/site-packages/torch/serialization.pyc in save(obj, f, pickle_module, pickle_protocol)\n    121         f = open(f, \"wb\")\n    122     try:\n--> 123         return _save(obj, f, pickle_module, pickle_protocol)\n    124     finally:\n    125         if new_fd:\n\n/home/sarthak/anaconda2/lib/python2.7/site-packages/torch/serialization.pyc in _save(obj, f, pickle_module, pickle_protocol)\n    212         pickle_module.dump(sys_info, f, protocol=pickle_protocol)\n    213 \n--> 214     with closing(tarfile.open(fileobj=f, mode='w:', format=tarfile.PAX_FORMAT)) as tar:\n    215         _add_to_tar(save_sys_info, tar, 'sys_info')\n    216         _add_to_tar(pickle_objects, tar, 'pickle')\n\n/home/sarthak/anaconda2/lib/python2.7/tarfile.pyc in open(cls, name, mode, fileobj, bufsize, **kwargs)\n   1691             else:\n   1692                 raise CompressionError(\"unknown compression type %r\" % comptype)\n-> 1693             return func(name, filemode, fileobj, **kwargs)\n   1694 \n   1695         elif \"|\" in mode:\n\n/home/sarthak/anaconda2/lib/python2.7/tarfile.pyc in taropen(cls, name, mode, fileobj, **kwargs)\n   1721         if mode not in (\"r\", \"a\", \"w\"):\n   1722             raise ValueError(\"mode must be 'r', 'a' or 'w'\")\n-> 1723         return cls(name, mode, fileobj, **kwargs)\n   1724 \n   1725     @classmethod\n\n/home/sarthak/anaconda2/lib/python2.7/tarfile.pyc in __init__(self, name, mode, fileobj, format, tarinfo, dereference, ignore_zeros, encoding, errors, pax_headers, debug, errorlevel)\n   1577         self.members = []       # list of members as TarInfo objects\n   1578         self._loaded = False    # flag if all members have been read\n-> 1579         self.offset = self.fileobj.tell()\n   1580                                 # current position in the archive file\n   1581         self.inodes = {}        # dictionary caching the inodes of\n\n/home/sarthak/anaconda2/lib/python2.7/site-packages/torch/nn/modules/module.pyc in __getattr__(self, name)\n    241             if name in modules:\n    242                 return modules[name]\n--> 243         return object.__getattribute__(self, name)\n    244 \n    245     def __setattr__(self, name, value):\n\nAttributeError: 'convNet' object has no attribute 'tell'", "body": "I have made a CNN:\r\n```\r\nclass convNet(nn.Module):\r\n    #constructor\r\n    def __init__(self):\r\n        super(convNet, self).__init__()\r\n       \r\n        self.conv1 = nn.Conv2d(3, 96, kernel_size=7,stride=1,padding=3)\r\n        self.conv2 = nn.Conv2d(96, 256, kernel_size=5,stride=1,padding=2)\r\n        self.conv3 = nn.Conv2d(256,384,kernel_size=3,stride=1,padding=1)\r\n        self.conv4 = nn.Conv2d(384,512,kernel_size=3,stride=1,padding=1)\r\n        self.conv5 = nn.Conv2d(512,1024,kernel_size=3,stride=1,padding=1)\r\n        self.fc1   = nn.Linear(4*4*1024, 300)\r\n        self.fc2   = nn.Linear(300, 100)\r\n        self.fc3   = nn.Linear(100, 10)\r\n        \r\n\r\n    def forward(self, x):\r\n        conv1_relu = nnFunctions.relu(self.conv1(x))\r\n        conv2_relu = nnFunctions.relu(self.conv2(conv1_relu))\r\n        conv3_relu =nnFunctions.max_pool2d(nnFunctions.relu(self.conv3(conv2_relu)),2)\r\n        conv4_relu =nnFunctions.max_pool2d(nnFunctions.relu(self.conv4(conv3_relu)),2)\r\n        conv5_relu =nnFunctions.max_pool2d(nnFunctions.relu(self.conv5(conv4_relu)),2)\r\n    \r\n        x = conv5_relu.view(-1, 4*4*1024)\r\n        x = nnFunctions.relu(self.fc1(x))\r\n        x = nnFunctions.relu(self.fc2(x))\r\n        x = self.fc3(x)\r\n        return x\r\n```\r\n```\r\nnet=convNet()\r\nnet.cuda()\r\n```\r\nBut when I write `torch.save('net.txt',net)`\r\n\r\nIt gives me the following errror:\r\n\r\n```\r\n\r\nAttributeError                            Traceback (most recent call last)\r\n<ipython-input-13-a8f33f24049b> in <module>()\r\n----> 1 torch.save('net.t7',net)\r\n\r\n/home/sarthak/anaconda2/lib/python2.7/site-packages/torch/serialization.pyc in save(obj, f, pickle_module, pickle_protocol)\r\n    121         f = open(f, \"wb\")\r\n    122     try:\r\n--> 123         return _save(obj, f, pickle_module, pickle_protocol)\r\n    124     finally:\r\n    125         if new_fd:\r\n\r\n/home/sarthak/anaconda2/lib/python2.7/site-packages/torch/serialization.pyc in _save(obj, f, pickle_module, pickle_protocol)\r\n    212         pickle_module.dump(sys_info, f, protocol=pickle_protocol)\r\n    213 \r\n--> 214     with closing(tarfile.open(fileobj=f, mode='w:', format=tarfile.PAX_FORMAT)) as tar:\r\n    215         _add_to_tar(save_sys_info, tar, 'sys_info')\r\n    216         _add_to_tar(pickle_objects, tar, 'pickle')\r\n\r\n/home/sarthak/anaconda2/lib/python2.7/tarfile.pyc in open(cls, name, mode, fileobj, bufsize, **kwargs)\r\n   1691             else:\r\n   1692                 raise CompressionError(\"unknown compression type %r\" % comptype)\r\n-> 1693             return func(name, filemode, fileobj, **kwargs)\r\n   1694 \r\n   1695         elif \"|\" in mode:\r\n\r\n/home/sarthak/anaconda2/lib/python2.7/tarfile.pyc in taropen(cls, name, mode, fileobj, **kwargs)\r\n   1721         if mode not in (\"r\", \"a\", \"w\"):\r\n   1722             raise ValueError(\"mode must be 'r', 'a' or 'w'\")\r\n-> 1723         return cls(name, mode, fileobj, **kwargs)\r\n   1724 \r\n   1725     @classmethod\r\n\r\n/home/sarthak/anaconda2/lib/python2.7/tarfile.pyc in __init__(self, name, mode, fileobj, format, tarinfo, dereference, ignore_zeros, encoding, errors, pax_headers, debug, errorlevel)\r\n   1577         self.members = []       # list of members as TarInfo objects\r\n   1578         self._loaded = False    # flag if all members have been read\r\n-> 1579         self.offset = self.fileobj.tell()\r\n   1580                                 # current position in the archive file\r\n   1581         self.inodes = {}        # dictionary caching the inodes of\r\n\r\n/home/sarthak/anaconda2/lib/python2.7/site-packages/torch/nn/modules/module.pyc in __getattr__(self, name)\r\n    241             if name in modules:\r\n    242                 return modules[name]\r\n--> 243         return object.__getattribute__(self, name)\r\n    244 \r\n    245     def __setattr__(self, name, value):\r\n\r\nAttributeError: 'convNet' object has no attribute 'tell'\r\n```"}