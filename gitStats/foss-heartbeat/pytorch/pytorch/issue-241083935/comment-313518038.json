{"url": "https://api.github.com/repos/pytorch/pytorch/issues/comments/313518038", "html_url": "https://github.com/pytorch/pytorch/issues/1995#issuecomment-313518038", "issue_url": "https://api.github.com/repos/pytorch/pytorch/issues/1995", "id": 313518038, "node_id": "MDEyOklzc3VlQ29tbWVudDMxMzUxODAzOA==", "user": {"login": "soumith", "id": 1310570, "node_id": "MDQ6VXNlcjEzMTA1NzA=", "avatar_url": "https://avatars0.githubusercontent.com/u/1310570?v=4", "gravatar_id": "", "url": "https://api.github.com/users/soumith", "html_url": "https://github.com/soumith", "followers_url": "https://api.github.com/users/soumith/followers", "following_url": "https://api.github.com/users/soumith/following{/other_user}", "gists_url": "https://api.github.com/users/soumith/gists{/gist_id}", "starred_url": "https://api.github.com/users/soumith/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/soumith/subscriptions", "organizations_url": "https://api.github.com/users/soumith/orgs", "repos_url": "https://api.github.com/users/soumith/repos", "events_url": "https://api.github.com/users/soumith/events{/privacy}", "received_events_url": "https://api.github.com/users/soumith/received_events", "type": "User", "site_admin": false}, "created_at": "2017-07-06T21:00:37Z", "updated_at": "2017-07-06T21:00:37Z", "author_association": "MEMBER", "body_html": "<p>This is especially needed because you can save something like: <code>torch.save([x[:10], x[2:4]])</code> and then when you load back, the expectation is that the loaded values will share storage (i.e. be two Tensors viewing a larger storage)</p>", "body_text": "This is especially needed because you can save something like: torch.save([x[:10], x[2:4]]) and then when you load back, the expectation is that the loaded values will share storage (i.e. be two Tensors viewing a larger storage)", "body": "This is especially needed because you can save something like: `torch.save([x[:10], x[2:4]])` and then when you load back, the expectation is that the loaded values will share storage (i.e. be two Tensors viewing a larger storage)"}