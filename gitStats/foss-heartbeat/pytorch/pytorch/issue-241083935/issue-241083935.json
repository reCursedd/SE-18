{"url": "https://api.github.com/repos/pytorch/pytorch/issues/1995", "repository_url": "https://api.github.com/repos/pytorch/pytorch", "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/1995/labels{/name}", "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/1995/comments", "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/1995/events", "html_url": "https://github.com/pytorch/pytorch/issues/1995", "id": 241083935, "node_id": "MDU6SXNzdWUyNDEwODM5MzU=", "number": 1995, "title": "torch.save is saving too much", "user": {"login": "glample", "id": 8885556, "node_id": "MDQ6VXNlcjg4ODU1NTY=", "avatar_url": "https://avatars2.githubusercontent.com/u/8885556?v=4", "gravatar_id": "", "url": "https://api.github.com/users/glample", "html_url": "https://github.com/glample", "followers_url": "https://api.github.com/users/glample/followers", "following_url": "https://api.github.com/users/glample/following{/other_user}", "gists_url": "https://api.github.com/users/glample/gists{/gist_id}", "starred_url": "https://api.github.com/users/glample/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/glample/subscriptions", "organizations_url": "https://api.github.com/users/glample/orgs", "repos_url": "https://api.github.com/users/glample/repos", "events_url": "https://api.github.com/users/glample/events{/privacy}", "received_events_url": "https://api.github.com/users/glample/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2017-07-06T20:58:23Z", "updated_at": "2017-07-06T21:00:37Z", "closed_at": "2017-07-06T20:59:33Z", "author_association": "CONTRIBUTOR", "body_html": "<p>If I have a tensor <code>x</code> of size (100000000,), and I save it with <code>torch.save(x[:10])</code>, it will take a lot of space in the disk (same space than if I save the entire tensor). However, <code>torch.save(x[:10].clone())</code> only seems to serialize the relevant part of the tensor.</p>\n<p>Is it expected behaviour?</p>", "body_text": "If I have a tensor x of size (100000000,), and I save it with torch.save(x[:10]), it will take a lot of space in the disk (same space than if I save the entire tensor). However, torch.save(x[:10].clone()) only seems to serialize the relevant part of the tensor.\nIs it expected behaviour?", "body": "If I have a tensor `x` of size (100000000,), and I save it with `torch.save(x[:10])`, it will take a lot of space in the disk (same space than if I save the entire tensor). However, `torch.save(x[:10].clone())` only seems to serialize the relevant part of the tensor.\r\n\r\nIs it expected behaviour?"}