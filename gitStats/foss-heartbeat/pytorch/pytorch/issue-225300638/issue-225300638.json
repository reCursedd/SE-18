{"url": "https://api.github.com/repos/pytorch/pytorch/issues/1407", "repository_url": "https://api.github.com/repos/pytorch/pytorch", "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/1407/labels{/name}", "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/1407/comments", "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/1407/events", "html_url": "https://github.com/pytorch/pytorch/issues/1407", "id": 225300638, "node_id": "MDU6SXNzdWUyMjUzMDA2Mzg=", "number": 1407, "title": "Gradient accumulation in recurrent architectures", "user": {"login": "jsuarez5341", "id": 14065750, "node_id": "MDQ6VXNlcjE0MDY1NzUw", "avatar_url": "https://avatars2.githubusercontent.com/u/14065750?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jsuarez5341", "html_url": "https://github.com/jsuarez5341", "followers_url": "https://api.github.com/users/jsuarez5341/followers", "following_url": "https://api.github.com/users/jsuarez5341/following{/other_user}", "gists_url": "https://api.github.com/users/jsuarez5341/gists{/gist_id}", "starred_url": "https://api.github.com/users/jsuarez5341/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jsuarez5341/subscriptions", "organizations_url": "https://api.github.com/users/jsuarez5341/orgs", "repos_url": "https://api.github.com/users/jsuarez5341/repos", "events_url": "https://api.github.com/users/jsuarez5341/events{/privacy}", "received_events_url": "https://api.github.com/users/jsuarez5341/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2017-04-30T03:06:03Z", "updated_at": "2017-07-21T01:24:42Z", "closed_at": "2017-05-02T13:37:24Z", "author_association": "NONE", "body_html": "<p>Suppose I have some recurrent network. One important consideration in analysis of new architectures is the gradient flow. As far as I am aware, there is currently no way to access the gradients wrt the weights at each time step, as they are accumulated internally, even when retain_variables is specified in backward().</p>\n<p>This seems like a rather essential feature for research. Am I missing the documentation, or is there currently no way to specify that backward() should not accumulate gradients?</p>", "body_text": "Suppose I have some recurrent network. One important consideration in analysis of new architectures is the gradient flow. As far as I am aware, there is currently no way to access the gradients wrt the weights at each time step, as they are accumulated internally, even when retain_variables is specified in backward().\nThis seems like a rather essential feature for research. Am I missing the documentation, or is there currently no way to specify that backward() should not accumulate gradients?", "body": "Suppose I have some recurrent network. One important consideration in analysis of new architectures is the gradient flow. As far as I am aware, there is currently no way to access the gradients wrt the weights at each time step, as they are accumulated internally, even when retain_variables is specified in backward().\r\n\r\nThis seems like a rather essential feature for research. Am I missing the documentation, or is there currently no way to specify that backward() should not accumulate gradients?\r\n"}