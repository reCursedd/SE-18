{"url": "https://api.github.com/repos/pytorch/pytorch/issues/2787", "repository_url": "https://api.github.com/repos/pytorch/pytorch", "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/2787/labels{/name}", "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/2787/comments", "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/2787/events", "html_url": "https://github.com/pytorch/pytorch/issues/2787", "id": 258937533, "node_id": "MDU6SXNzdWUyNTg5Mzc1MzM=", "number": 2787, "title": "[request] Encode/decode variables", "user": {"login": "stsievert", "id": 1320475, "node_id": "MDQ6VXNlcjEzMjA0NzU=", "avatar_url": "https://avatars1.githubusercontent.com/u/1320475?v=4", "gravatar_id": "", "url": "https://api.github.com/users/stsievert", "html_url": "https://github.com/stsievert", "followers_url": "https://api.github.com/users/stsievert/followers", "following_url": "https://api.github.com/users/stsievert/following{/other_user}", "gists_url": "https://api.github.com/users/stsievert/gists{/gist_id}", "starred_url": "https://api.github.com/users/stsievert/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/stsievert/subscriptions", "organizations_url": "https://api.github.com/users/stsievert/orgs", "repos_url": "https://api.github.com/users/stsievert/repos", "events_url": "https://api.github.com/users/stsievert/events{/privacy}", "received_events_url": "https://api.github.com/users/stsievert/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 7, "created_at": "2017-09-19T19:30:52Z", "updated_at": "2017-10-27T21:07:39Z", "closed_at": null, "author_association": "CONTRIBUTOR", "body_html": "<p>I'd like to encode/decode the gradient. This will require storing arbitrary values in memory instead of the gradient.</p>\n<p>That is, I'd like to perform</p>\n<div class=\"highlight highlight-source-python\"><pre><span class=\"pl-k\">def</span> <span class=\"pl-en\">encode</span>(<span class=\"pl-smi\">name</span>):\n    <span class=\"pl-k\">def</span> <span class=\"pl-en\">hook</span>(<span class=\"pl-smi\">var</span>):\n        <span class=\"pl-k\">return</span> {<span class=\"pl-s\"><span class=\"pl-pds\">'</span>name<span class=\"pl-pds\">'</span></span>: name, <span class=\"pl-s\"><span class=\"pl-pds\">'</span>grad<span class=\"pl-pds\">'</span></span>: var.grad}\n    <span class=\"pl-k\">return</span> hook\n<span class=\"pl-k\">def</span> <span class=\"pl-en\">decode</span>(<span class=\"pl-smi\">hook_output</span>):\n    <span class=\"pl-k\">return</span> hook_output[<span class=\"pl-s\"><span class=\"pl-pds\">'</span>grad<span class=\"pl-pds\">'</span></span>]\n\n<span class=\"pl-k\">for</span> name, param <span class=\"pl-k\">in</span> model.named_paramers():\n    param.register_hook(encode(name))\n\n<span class=\"pl-c\"><span class=\"pl-c\">#</span> later; psuedo-code</span>\n<span class=\"pl-k\">for</span> hook_out <span class=\"pl-k\">in</span> hook_outputs:\n    grad <span class=\"pl-k\">=</span> decode(hook_output)</pre></div>\n<p>but this throws an error at <a href=\"https://github.com/pytorch/pytorch/blob/1290e586fbc3d6266423f3417723d6620267054b/torch/csrc/autograd/python_hook.cpp#L147\">python_hook.cpp#L147</a>.</p>", "body_text": "I'd like to encode/decode the gradient. This will require storing arbitrary values in memory instead of the gradient.\nThat is, I'd like to perform\ndef encode(name):\n    def hook(var):\n        return {'name': name, 'grad': var.grad}\n    return hook\ndef decode(hook_output):\n    return hook_output['grad']\n\nfor name, param in model.named_paramers():\n    param.register_hook(encode(name))\n\n# later; psuedo-code\nfor hook_out in hook_outputs:\n    grad = decode(hook_output)\nbut this throws an error at python_hook.cpp#L147.", "body": "I'd like to encode/decode the gradient. This will require storing arbitrary values in memory instead of the gradient.\r\n\r\nThat is, I'd like to perform\r\n\r\n``` python\r\ndef encode(name):\r\n    def hook(var):\r\n        return {'name': name, 'grad': var.grad}\r\n    return hook\r\ndef decode(hook_output):\r\n    return hook_output['grad']\r\n\r\nfor name, param in model.named_paramers():\r\n    param.register_hook(encode(name))\r\n\r\n# later; psuedo-code\r\nfor hook_out in hook_outputs:\r\n    grad = decode(hook_output)\r\n```\r\n\r\nbut this throws an error at [python_hook.cpp#L147].\r\n\r\n[python_hook.cpp#L147]:https://github.com/pytorch/pytorch/blob/1290e586fbc3d6266423f3417723d6620267054b/torch/csrc/autograd/python_hook.cpp#L147"}