{"url": "https://api.github.com/repos/pytorch/pytorch/issues/5273", "repository_url": "https://api.github.com/repos/pytorch/pytorch", "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/5273/labels{/name}", "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/5273/comments", "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/5273/events", "html_url": "https://github.com/pytorch/pytorch/pull/5273", "id": 297722519, "node_id": "MDExOlB1bGxSZXF1ZXN0MTY5NTc3NjAy", "number": 5273, "title": "Implement torch.isnan", "user": {"login": "tunz", "id": 7830853, "node_id": "MDQ6VXNlcjc4MzA4NTM=", "avatar_url": "https://avatars1.githubusercontent.com/u/7830853?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tunz", "html_url": "https://github.com/tunz", "followers_url": "https://api.github.com/users/tunz/followers", "following_url": "https://api.github.com/users/tunz/following{/other_user}", "gists_url": "https://api.github.com/users/tunz/gists{/gist_id}", "starred_url": "https://api.github.com/users/tunz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tunz/subscriptions", "organizations_url": "https://api.github.com/users/tunz/orgs", "repos_url": "https://api.github.com/users/tunz/repos", "events_url": "https://api.github.com/users/tunz/events{/privacy}", "received_events_url": "https://api.github.com/users/tunz/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2018-02-16T09:24:03Z", "updated_at": "2018-02-20T00:46:46Z", "closed_at": "2018-02-20T00:46:36Z", "author_association": "CONTRIBUTOR", "pull_request": {"url": "https://api.github.com/repos/pytorch/pytorch/pulls/5273", "html_url": "https://github.com/pytorch/pytorch/pull/5273", "diff_url": "https://github.com/pytorch/pytorch/pull/5273.diff", "patch_url": "https://github.com/pytorch/pytorch/pull/5273.patch"}, "body_html": "<p>Hello,<br>\nPlease take a look.</p>\n<p>I implemented <code>torch.isnan</code> in C/C++. You can use this function as following:</p>\n<pre><code>&gt;&gt;&gt; torch.isnan(torch.Tensor([1,2,3,float('nan'),5]))\n\n 0\n 0\n 0\n 1\n 0\n[torch.ByteTensor of size 5]\n</code></pre>\n<p>Since it's my first contribution to your project, I'm not familiar with testing or coding style, so please let me know if something's wrong.</p>\n<p>Ref: <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load issue title\" data-id=\"290287551\" data-permission-text=\"Issue title is private\" data-url=\"https://github.com/pytorch/pytorch/issues/4767\" data-hovercard-type=\"issue\" data-hovercard-url=\"/pytorch/pytorch/issues/4767/hovercard\" href=\"https://github.com/pytorch/pytorch/issues/4767\">#4767</a></p>", "body_text": "Hello,\nPlease take a look.\nI implemented torch.isnan in C/C++. You can use this function as following:\n>>> torch.isnan(torch.Tensor([1,2,3,float('nan'),5]))\n\n 0\n 0\n 0\n 1\n 0\n[torch.ByteTensor of size 5]\n\nSince it's my first contribution to your project, I'm not familiar with testing or coding style, so please let me know if something's wrong.\nRef: #4767", "body": "Hello,\r\nPlease take a look.\r\n\r\nI implemented `torch.isnan` in C/C++. You can use this function as following:\r\n```\r\n>>> torch.isnan(torch.Tensor([1,2,3,float('nan'),5]))\r\n\r\n 0\r\n 0\r\n 0\r\n 1\r\n 0\r\n[torch.ByteTensor of size 5]\r\n```\r\n\r\nSince it's my first contribution to your project, I'm not familiar with testing or coding style, so please let me know if something's wrong.\r\n\r\nRef: https://github.com/pytorch/pytorch/issues/4767"}