{"url": "https://api.github.com/repos/pytorch/pytorch/issues/comments/366003077", "html_url": "https://github.com/pytorch/pytorch/pull/5190#issuecomment-366003077", "issue_url": "https://api.github.com/repos/pytorch/pytorch/issues/5190", "id": 366003077, "node_id": "MDEyOklzc3VlQ29tbWVudDM2NjAwMzA3Nw==", "user": {"login": "datnamer", "id": 8646471, "node_id": "MDQ6VXNlcjg2NDY0NzE=", "avatar_url": "https://avatars1.githubusercontent.com/u/8646471?v=4", "gravatar_id": "", "url": "https://api.github.com/users/datnamer", "html_url": "https://github.com/datnamer", "followers_url": "https://api.github.com/users/datnamer/followers", "following_url": "https://api.github.com/users/datnamer/following{/other_user}", "gists_url": "https://api.github.com/users/datnamer/gists{/gist_id}", "starred_url": "https://api.github.com/users/datnamer/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/datnamer/subscriptions", "organizations_url": "https://api.github.com/users/datnamer/orgs", "repos_url": "https://api.github.com/users/datnamer/repos", "events_url": "https://api.github.com/users/datnamer/events{/privacy}", "received_events_url": "https://api.github.com/users/datnamer/received_events", "type": "User", "site_admin": false}, "created_at": "2018-02-15T17:34:46Z", "updated_at": "2018-02-15T17:36:24Z", "author_association": "NONE", "body_html": "<p><a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=4583066\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/apaszke\">@apaszke</a> Very cool. You might be interested then in this document and the associated typing.py and numpy github issues related to proposals for typing multidimensional arrays: <a href=\"https://docs.google.com/document/d/1vpMse4c6DrWH5rq2tQSx3qwP_m_0lyn-Ij4WHqQqRHY/edit\" rel=\"nofollow\">https://docs.google.com/document/d/1vpMse4c6DrWH5rq2tQSx3qwP_m_0lyn-Ij4WHqQqRHY/edit</a></p>\n<p>My stretch wishlist would include some interesting things that could fall out of this,  including using generic protocols to define interfaces (there is a proposed array protocol),  parameterized generic classes inheriting from the protocol to define new dtypes and overloaded typed functions that have multiple dispatch to define interaction between these types.</p>\n<p>Though that is all probably outside the scope of pytorch...but this could be really interesting for code reuse and generic programming.</p>\n<p>Also maybe <a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=1929845\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/sklam\">@sklam</a> and <a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=609896\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/njsmith\">@njsmith</a> would be interested in coordinating or keeping tabs on this issue.</p>", "body_text": "@apaszke Very cool. You might be interested then in this document and the associated typing.py and numpy github issues related to proposals for typing multidimensional arrays: https://docs.google.com/document/d/1vpMse4c6DrWH5rq2tQSx3qwP_m_0lyn-Ij4WHqQqRHY/edit\nMy stretch wishlist would include some interesting things that could fall out of this,  including using generic protocols to define interfaces (there is a proposed array protocol),  parameterized generic classes inheriting from the protocol to define new dtypes and overloaded typed functions that have multiple dispatch to define interaction between these types.\nThough that is all probably outside the scope of pytorch...but this could be really interesting for code reuse and generic programming.\nAlso maybe @sklam and @njsmith would be interested in coordinating or keeping tabs on this issue.", "body": "@apaszke Very cool. You might be interested then in this document and the associated typing.py and numpy github issues related to proposals for typing multidimensional arrays: https://docs.google.com/document/d/1vpMse4c6DrWH5rq2tQSx3qwP_m_0lyn-Ij4WHqQqRHY/edit \r\n\r\nMy stretch wishlist would include some interesting things that could fall out of this,  including using generic protocols to define interfaces (there is a proposed array protocol),  parameterized generic classes inheriting from the protocol to define new dtypes and overloaded typed functions that have multiple dispatch to define interaction between these types. \r\n\r\nThough that is all probably outside the scope of pytorch...but this could be really interesting for code reuse and generic programming. \r\n\r\nAlso maybe @sklam and @njsmith would be interested in coordinating or keeping tabs on this issue. "}