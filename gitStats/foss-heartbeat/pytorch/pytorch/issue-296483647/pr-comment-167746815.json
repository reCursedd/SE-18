{"url": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/167746815", "pull_request_review_id": 96006118, "id": 167746815, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE2Nzc0NjgxNQ==", "diff_hunk": "@@ -0,0 +1,285 @@\n+import torch\n+import sys\n+import ast\n+import inspect\n+from functools import partial\n+from collections import namedtuple\n+from torch._C._jit_tree_views import *\n+\n+# TODO: improve error reporting (show source)\n+#       once this is done, convert all asserts into checks with nicer error messages\n+\n+PY2 = sys.version_info[0] == 2\n+_reserved_prefix = '__jit'\n+\n+\n+def get_jit_ast(fn):\n+    source = dedent(inspect.getsource(fn))\n+    py_ast = ast.parse(source)\n+    if len(py_ast.body) != 1 or not isinstance(py_ast.body[0], ast.FunctionDef):\n+        raise RuntimeError(\"expected a single top-level function\")\n+    return build_def(SourceRangeFactory(source), py_ast.body[0])\n+\n+\n+def dedent(source):\n+    lines = source.split('\\n')\n+    indent_depth = 0\n+    while lines[0][indent_depth] == ' ':\n+        indent_depth += 1\n+    return '\\n'.join(l[indent_depth:] for l in lines)\n+\n+\n+class Builder(object):\n+    def __call__(self, ctx, node):\n+        try:\n+            method = getattr(self, 'build_' + node.__class__.__name__)\n+        except AttributeError:\n+            raise RuntimeError(node.__class__.__name__ + \" isn't a supported Python feature\")", "path": "torch/jit/python_frontend.py", "position": null, "original_position": 37, "commit_id": "c7d017de191eb1be80fd293bfbb5b04f79bad0be", "original_commit_id": "eecec783f2c3f082cd9cdb535e14e5bbaed11912", "user": {"login": "zdevito", "id": 370202, "node_id": "MDQ6VXNlcjM3MDIwMg==", "avatar_url": "https://avatars0.githubusercontent.com/u/370202?v=4", "gravatar_id": "", "url": "https://api.github.com/users/zdevito", "html_url": "https://github.com/zdevito", "followers_url": "https://api.github.com/users/zdevito/followers", "following_url": "https://api.github.com/users/zdevito/following{/other_user}", "gists_url": "https://api.github.com/users/zdevito/gists{/gist_id}", "starred_url": "https://api.github.com/users/zdevito/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/zdevito/subscriptions", "organizations_url": "https://api.github.com/users/zdevito/orgs", "repos_url": "https://api.github.com/users/zdevito/repos", "events_url": "https://api.github.com/users/zdevito/events{/privacy}", "received_events_url": "https://api.github.com/users/zdevito/received_events", "type": "User", "site_admin": false}, "body": "The stack trace for this error isn't going to tell you anything about which line caused it, as far as I can tell. Can all of these exceptions that get thrown include the source line of the user's program that prompted it?", "created_at": "2018-02-13T02:32:47Z", "updated_at": "2018-11-23T15:39:30Z", "html_url": "https://github.com/pytorch/pytorch/pull/5190#discussion_r167746815", "pull_request_url": "https://api.github.com/repos/pytorch/pytorch/pulls/5190", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/167746815"}, "html": {"href": "https://github.com/pytorch/pytorch/pull/5190#discussion_r167746815"}, "pull_request": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/5190"}}, "body_html": "<p>The stack trace for this error isn't going to tell you anything about which line caused it, as far as I can tell. Can all of these exceptions that get thrown include the source line of the user's program that prompted it?</p>", "body_text": "The stack trace for this error isn't going to tell you anything about which line caused it, as far as I can tell. Can all of these exceptions that get thrown include the source line of the user's program that prompted it?"}