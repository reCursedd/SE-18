{"url": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/167835961", "pull_request_review_id": 96108661, "id": 167835961, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE2NzgzNTk2MQ==", "diff_hunk": "@@ -0,0 +1,285 @@\n+import torch\n+import sys\n+import ast\n+import inspect\n+from functools import partial\n+from collections import namedtuple\n+from torch._C._jit_tree_views import *\n+\n+# TODO: improve error reporting (show source)\n+#       once this is done, convert all asserts into checks with nicer error messages\n+\n+PY2 = sys.version_info[0] == 2\n+_reserved_prefix = '__jit'\n+\n+\n+def get_jit_ast(fn):\n+    source = dedent(inspect.getsource(fn))\n+    py_ast = ast.parse(source)\n+    if len(py_ast.body) != 1 or not isinstance(py_ast.body[0], ast.FunctionDef):\n+        raise RuntimeError(\"expected a single top-level function\")\n+    return build_def(SourceRangeFactory(source), py_ast.body[0])\n+\n+\n+def dedent(source):\n+    lines = source.split('\\n')\n+    indent_depth = 0\n+    while lines[0][indent_depth] == ' ':", "path": "torch/jit/python_frontend.py", "position": null, "original_position": 27, "commit_id": "c7d017de191eb1be80fd293bfbb5b04f79bad0be", "original_commit_id": "eecec783f2c3f082cd9cdb535e14e5bbaed11912", "user": {"login": "apaszke", "id": 4583066, "node_id": "MDQ6VXNlcjQ1ODMwNjY=", "avatar_url": "https://avatars3.githubusercontent.com/u/4583066?v=4", "gravatar_id": "", "url": "https://api.github.com/users/apaszke", "html_url": "https://github.com/apaszke", "followers_url": "https://api.github.com/users/apaszke/followers", "following_url": "https://api.github.com/users/apaszke/following{/other_user}", "gists_url": "https://api.github.com/users/apaszke/gists{/gist_id}", "starred_url": "https://api.github.com/users/apaszke/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/apaszke/subscriptions", "organizations_url": "https://api.github.com/users/apaszke/orgs", "repos_url": "https://api.github.com/users/apaszke/repos", "events_url": "https://api.github.com/users/apaszke/events{/privacy}", "received_events_url": "https://api.github.com/users/apaszke/received_events", "type": "User", "site_admin": false}, "body": "That would likely throw an error once you exceed the line length, but I'd assume that `inspect.getsource` is smart enough to satisfy an invariant where the first line of code is non-empty (i.e. contains `def ...`).", "created_at": "2018-02-13T11:27:45Z", "updated_at": "2018-11-23T15:39:32Z", "html_url": "https://github.com/pytorch/pytorch/pull/5190#discussion_r167835961", "pull_request_url": "https://api.github.com/repos/pytorch/pytorch/pulls/5190", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/167835961"}, "html": {"href": "https://github.com/pytorch/pytorch/pull/5190#discussion_r167835961"}, "pull_request": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/5190"}}, "body_html": "<p>That would likely throw an error once you exceed the line length, but I'd assume that <code>inspect.getsource</code> is smart enough to satisfy an invariant where the first line of code is non-empty (i.e. contains <code>def ...</code>).</p>", "body_text": "That would likely throw an error once you exceed the line length, but I'd assume that inspect.getsource is smart enough to satisfy an invariant where the first line of code is non-empty (i.e. contains def ...).", "in_reply_to_id": 167746381}