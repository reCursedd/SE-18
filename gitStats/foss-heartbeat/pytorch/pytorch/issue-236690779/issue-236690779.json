{"url": "https://api.github.com/repos/pytorch/pytorch/issues/1835", "repository_url": "https://api.github.com/repos/pytorch/pytorch", "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/1835/labels{/name}", "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/1835/comments", "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/1835/events", "html_url": "https://github.com/pytorch/pytorch/issues/1835", "id": 236690779, "node_id": "MDU6SXNzdWUyMzY2OTA3Nzk=", "number": 1835, "title": "numerical stability for logSigmoid", "user": {"login": "binxuan", "id": 7848143, "node_id": "MDQ6VXNlcjc4NDgxNDM=", "avatar_url": "https://avatars3.githubusercontent.com/u/7848143?v=4", "gravatar_id": "", "url": "https://api.github.com/users/binxuan", "html_url": "https://github.com/binxuan", "followers_url": "https://api.github.com/users/binxuan/followers", "following_url": "https://api.github.com/users/binxuan/following{/other_user}", "gists_url": "https://api.github.com/users/binxuan/gists{/gist_id}", "starred_url": "https://api.github.com/users/binxuan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/binxuan/subscriptions", "organizations_url": "https://api.github.com/users/binxuan/orgs", "repos_url": "https://api.github.com/users/binxuan/repos", "events_url": "https://api.github.com/users/binxuan/events{/privacy}", "received_events_url": "https://api.github.com/users/binxuan/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 545367190, "node_id": "MDU6TGFiZWw1NDUzNjcxOTA=", "url": "https://api.github.com/repos/pytorch/pytorch/labels/awaiting%20response", "name": "awaiting response", "color": "5319e7", "default": false}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 8, "created_at": "2017-06-17T23:51:02Z", "updated_at": "2018-01-12T03:19:52Z", "closed_at": "2017-08-27T02:21:52Z", "author_association": "NONE", "body_html": "<p>Hi,</p>\n<p>I am using pytorch to implement a word2vec-like model. I frequently faced overflow/underflow with logsigmoid operation.</p>\n<p>For example, if I run pytorch like this F.logsigmoid(autograd.Variable(torch.FloatTensor([-300.0]))) the result is -inf. It would be better if pytorch could implement the logsigmoid with overflow check.</p>\n<p>Thanks</p>", "body_text": "Hi,\nI am using pytorch to implement a word2vec-like model. I frequently faced overflow/underflow with logsigmoid operation.\nFor example, if I run pytorch like this F.logsigmoid(autograd.Variable(torch.FloatTensor([-300.0]))) the result is -inf. It would be better if pytorch could implement the logsigmoid with overflow check.\nThanks", "body": "Hi,\r\n\r\nI am using pytorch to implement a word2vec-like model. I frequently faced overflow/underflow with logsigmoid operation.\r\n\r\nFor example, if I run pytorch like this F.logsigmoid(autograd.Variable(torch.FloatTensor([-300.0]))) the result is -inf. It would be better if pytorch could implement the logsigmoid with overflow check.\r\n \r\nThanks"}