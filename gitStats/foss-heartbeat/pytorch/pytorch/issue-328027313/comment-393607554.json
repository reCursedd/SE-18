{"url": "https://api.github.com/repos/pytorch/pytorch/issues/comments/393607554", "html_url": "https://github.com/pytorch/pytorch/pull/7984#issuecomment-393607554", "issue_url": "https://api.github.com/repos/pytorch/pytorch/issues/7984", "id": 393607554, "node_id": "MDEyOklzc3VlQ29tbWVudDM5MzYwNzU1NA==", "user": {"login": "goldsborough", "id": 6429851, "node_id": "MDQ6VXNlcjY0Mjk4NTE=", "avatar_url": "https://avatars3.githubusercontent.com/u/6429851?v=4", "gravatar_id": "", "url": "https://api.github.com/users/goldsborough", "html_url": "https://github.com/goldsborough", "followers_url": "https://api.github.com/users/goldsborough/followers", "following_url": "https://api.github.com/users/goldsborough/following{/other_user}", "gists_url": "https://api.github.com/users/goldsborough/gists{/gist_id}", "starred_url": "https://api.github.com/users/goldsborough/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/goldsborough/subscriptions", "organizations_url": "https://api.github.com/users/goldsborough/orgs", "repos_url": "https://api.github.com/users/goldsborough/repos", "events_url": "https://api.github.com/users/goldsborough/events{/privacy}", "received_events_url": "https://api.github.com/users/goldsborough/received_events", "type": "User", "site_admin": false}, "created_at": "2018-05-31T17:19:33Z", "updated_at": "2018-05-31T19:41:05Z", "author_association": "CONTRIBUTOR", "body_html": "<p>Note that <code>unordered_map</code> is as shit as a hashtable gets. I wouldn't discredit this approach until you actually try a fast hashtable. <a href=\"https://github.com/sparsehash/sparsehash\"><code>google::dense_hash_map</code></a> can be up to 100 times faster than <code>unordered_map</code> for lookups. See <a href=\"https://gist.github.com/goldsborough/77322103fb42cf4677588f9364367212\">https://gist.github.com/goldsborough/77322103fb42cf4677588f9364367212</a> for exact benchmarks</p>", "body_text": "Note that unordered_map is as shit as a hashtable gets. I wouldn't discredit this approach until you actually try a fast hashtable. google::dense_hash_map can be up to 100 times faster than unordered_map for lookups. See https://gist.github.com/goldsborough/77322103fb42cf4677588f9364367212 for exact benchmarks", "body": "Note that `unordered_map` is as shit as a hashtable gets. I wouldn't discredit this approach until you actually try a fast hashtable. [`google::dense_hash_map`](https://github.com/sparsehash/sparsehash) can be up to 100 times faster than `unordered_map` for lookups. See https://gist.github.com/goldsborough/77322103fb42cf4677588f9364367212 for exact benchmarks"}