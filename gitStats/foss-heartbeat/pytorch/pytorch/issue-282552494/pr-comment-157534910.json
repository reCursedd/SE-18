{"url": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/157534910", "pull_request_review_id": 84189181, "id": 157534910, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE1NzUzNDkxMA==", "diff_hunk": "@@ -386,16 +376,23 @@ else()\n   add_subdirectory(src/THCS)\n endif()\n \n+find_package(CuDNN)\n+IF(NOT AT_CUDA_ENABLED OR NOT CUDNN_FOUND)\n+  MESSAGE(STATUS \"CuDNN not found. Compiling without CUDNN support\")\n+  set(AT_CUDNN_ENABLED 0)\n+ELSE()\n+  INCLUDE_DIRECTORIES(${CUDNN_INCLUDE_DIRS})\n+  set(AT_CUDNN_ENABLED 1)\n+ENDIF()\n+\n set(cwrap_files\n   ${CMAKE_CURRENT_SOURCE_DIR}/src/ATen/Declarations.cwrap\n   ${CMAKE_CURRENT_SOURCE_DIR}/src/THNN/generic/THNN.h\n   ${CMAKE_CURRENT_SOURCE_DIR}/src/THCUNN/generic/THCUNN.h\n   ${CMAKE_CURRENT_SOURCE_DIR}/src/ATen/nn.yaml\n   ${CMAKE_CURRENT_SOURCE_DIR}/src/ATen/native/native_functions.yaml\n+  ${CMAKE_CURRENT_SOURCE_DIR}/src/ATen/native/cudnn/native_functions.yaml", "path": "aten/CMakeLists.txt", "position": null, "original_position": 36, "commit_id": "1a43aa806feef2dcbd6ade59b5a435d1706584b9", "original_commit_id": "8c1b8e07add28edfcdbe0d9690df2a48c1a5271c", "user": {"login": "gchanan", "id": 3768583, "node_id": "MDQ6VXNlcjM3Njg1ODM=", "avatar_url": "https://avatars2.githubusercontent.com/u/3768583?v=4", "gravatar_id": "", "url": "https://api.github.com/users/gchanan", "html_url": "https://github.com/gchanan", "followers_url": "https://api.github.com/users/gchanan/followers", "following_url": "https://api.github.com/users/gchanan/following{/other_user}", "gists_url": "https://api.github.com/users/gchanan/gists{/gist_id}", "starred_url": "https://api.github.com/users/gchanan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/gchanan/subscriptions", "organizations_url": "https://api.github.com/users/gchanan/orgs", "repos_url": "https://api.github.com/users/gchanan/repos", "events_url": "https://api.github.com/users/gchanan/events{/privacy}", "received_events_url": "https://api.github.com/users/gchanan/received_events", "type": "User", "site_admin": false}, "body": "Why do we need to define these in a different file?  In the spirit of your ATen philosophy note, I'd argue that these are like any other ATen native function, although they may have different implementation details (i.e. they throw exceptions if you don't have cudnn defined).  It seems to me we want all native functions to be declared in the same place (whether that is a single .yaml file or a bunch of .yaml files in the same directory broken up functionally).  It's certainly okay for the implementations to be defined separately (as you've done).", "created_at": "2017-12-18T16:35:44Z", "updated_at": "2018-11-23T15:37:30Z", "html_url": "https://github.com/pytorch/pytorch/pull/4201#discussion_r157534910", "pull_request_url": "https://api.github.com/repos/pytorch/pytorch/pulls/4201", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/157534910"}, "html": {"href": "https://github.com/pytorch/pytorch/pull/4201#discussion_r157534910"}, "pull_request": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/4201"}}, "body_html": "<p>Why do we need to define these in a different file?  In the spirit of your ATen philosophy note, I'd argue that these are like any other ATen native function, although they may have different implementation details (i.e. they throw exceptions if you don't have cudnn defined).  It seems to me we want all native functions to be declared in the same place (whether that is a single .yaml file or a bunch of .yaml files in the same directory broken up functionally).  It's certainly okay for the implementations to be defined separately (as you've done).</p>", "body_text": "Why do we need to define these in a different file?  In the spirit of your ATen philosophy note, I'd argue that these are like any other ATen native function, although they may have different implementation details (i.e. they throw exceptions if you don't have cudnn defined).  It seems to me we want all native functions to be declared in the same place (whether that is a single .yaml file or a bunch of .yaml files in the same directory broken up functionally).  It's certainly okay for the implementations to be defined separately (as you've done)."}