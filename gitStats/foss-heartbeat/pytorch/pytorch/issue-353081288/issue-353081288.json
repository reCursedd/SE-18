{"url": "https://api.github.com/repos/pytorch/pytorch/issues/10787", "repository_url": "https://api.github.com/repos/pytorch/pytorch", "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/10787/labels{/name}", "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/10787/comments", "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/10787/events", "html_url": "https://github.com/pytorch/pytorch/pull/10787", "id": 353081288, "node_id": "MDExOlB1bGxSZXF1ZXN0MjEwMjMxNTI3", "number": 10787, "title": "[jit] Support multidimensional indexing", "user": {"login": "zou3519", "id": 5652049, "node_id": "MDQ6VXNlcjU2NTIwNDk=", "avatar_url": "https://avatars3.githubusercontent.com/u/5652049?v=4", "gravatar_id": "", "url": "https://api.github.com/users/zou3519", "html_url": "https://github.com/zou3519", "followers_url": "https://api.github.com/users/zou3519/followers", "following_url": "https://api.github.com/users/zou3519/following{/other_user}", "gists_url": "https://api.github.com/users/zou3519/gists{/gist_id}", "starred_url": "https://api.github.com/users/zou3519/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/zou3519/subscriptions", "organizations_url": "https://api.github.com/users/zou3519/orgs", "repos_url": "https://api.github.com/users/zou3519/repos", "events_url": "https://api.github.com/users/zou3519/events{/privacy}", "received_events_url": "https://api.github.com/users/zou3519/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 679953983, "node_id": "MDU6TGFiZWw2Nzk5NTM5ODM=", "url": "https://api.github.com/repos/pytorch/pytorch/labels/jit", "name": "jit", "color": "c5def5", "default": false}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2018-08-22T18:57:34Z", "updated_at": "2018-11-23T15:49:57Z", "closed_at": "2018-08-24T15:11:48Z", "author_association": "CONTRIBUTOR", "pull_request": {"url": "https://api.github.com/repos/pytorch/pytorch/pulls/10787", "html_url": "https://github.com/pytorch/pytorch/pull/10787", "diff_url": "https://github.com/pytorch/pytorch/pull/10787.diff", "patch_url": "https://github.com/pytorch/pytorch/pull/10787.patch"}, "body_html": "<p>Part of <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load issue title\" data-id=\"353020672\" data-permission-text=\"Issue title is private\" data-url=\"https://github.com/pytorch/pytorch/issues/10774\" data-hovercard-type=\"issue\" data-hovercard-url=\"/pytorch/pytorch/issues/10774/hovercard\" href=\"https://github.com/pytorch/pytorch/issues/10774\">#10774</a>.</p>\n<p>This PR does the following:</p>\n<ul>\n<li>Support ast.ExtSlice in the frontend. This is done by returning a<br>\nlist of ast.Index and ast.Slice.</li>\n<li>Support multidimensional indexing with ints and slices</li>\n</ul>\n<p>The general approach is to desugar multidimensional indexing into<br>\nat::slice, at::select operations. This is exactly how normal pytorch<br>\ndoes indexing (by desugaring it into at::slice, at::select, and other ops).</p>\n<p>I used <a href=\"https://github.com/pytorch/pytorch/blob/master/torch/csrc/autograd/python_variable_indexing.cpp\">this code</a> as reference.<br>\nWe should be able to copy the rest of this to implement the missing<br>\nindexing features in script (indexing with ellipses, tensors, sequences, etc).</p>\n<p>After I'm done implementing the missing indexing features in future prs, I can try to<br>\ntemplatize python_variable_indexing.cpp so that it can work with both JIT<br>\nscript and normal pytorch indexing, but right now I'm not sure if that's<br>\na good idea or not.</p>\n<p>cc <a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=370202\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/zdevito\">@zdevito</a> <a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=4685384\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/jamesr66a\">@jamesr66a</a> <a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=4583066\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/apaszke\">@apaszke</a> <a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=9443650\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/wanchaol\">@wanchaol</a></p>", "body_text": "Part of #10774.\nThis PR does the following:\n\nSupport ast.ExtSlice in the frontend. This is done by returning a\nlist of ast.Index and ast.Slice.\nSupport multidimensional indexing with ints and slices\n\nThe general approach is to desugar multidimensional indexing into\nat::slice, at::select operations. This is exactly how normal pytorch\ndoes indexing (by desugaring it into at::slice, at::select, and other ops).\nI used this code as reference.\nWe should be able to copy the rest of this to implement the missing\nindexing features in script (indexing with ellipses, tensors, sequences, etc).\nAfter I'm done implementing the missing indexing features in future prs, I can try to\ntemplatize python_variable_indexing.cpp so that it can work with both JIT\nscript and normal pytorch indexing, but right now I'm not sure if that's\na good idea or not.\ncc @zdevito @jamesr66a @apaszke @wanchaol", "body": "Part of #10774.\r\n\r\nThis PR does the following:\r\n- Support ast.ExtSlice in the frontend. This is done by returning a\r\n  list of ast.Index and ast.Slice.\r\n- Support multidimensional indexing with ints and slices\r\n\r\nThe general approach is to desugar multidimensional indexing into\r\nat::slice, at::select operations. This is exactly how normal pytorch\r\ndoes indexing (by desugaring it into at::slice, at::select, and other ops).\r\n\r\nI used [this code](https://github.com/pytorch/pytorch/blob/master/torch/csrc/autograd/python_variable_indexing.cpp) as reference.\r\nWe should be able to copy the rest of this to implement the missing\r\nindexing features in script (indexing with ellipses, tensors, sequences, etc).\r\n\r\nAfter I'm done implementing the missing indexing features in future prs, I can try to\r\ntemplatize python_variable_indexing.cpp so that it can work with both JIT\r\nscript and normal pytorch indexing, but right now I'm not sure if that's\r\na good idea or not.\r\n\r\ncc @zdevito @jamesr66a @apaszke @wanchaol \r\n"}