{"url": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/224712463", "pull_request_review_id": 164148284, "id": 224712463, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIyNDcxMjQ2Mw==", "diff_hunk": "@@ -23,6 +25,195 @@ namespace {\n   }\n }\n \n+// TensorAccessor when it is defined to work around undefined...\n+template <typename scalar_t>\n+static TensorAccessor<scalar_t, 1> conditional_accessor_1d(const Tensor& t) {\n+  if (! t.defined()) {\n+    return TensorAccessor<scalar_t, 1>(nullptr, nullptr, nullptr);\n+  }\n+  return t.accessor<scalar_t, 1>();\n+}\n+\n+\n+template<typename scalar_t>\n+std::tuple<Tensor,Tensor,Tensor> batch_norm_cpu_template(const Tensor& input, const Tensor& weight, const Tensor& bias,\n+\t\t\t       const Tensor& running_mean, const Tensor& running_var, bool train, double momentum, double eps) {\n+\n+  using accscalar_t = at::acc_type<scalar_t, false>;\n+  Tensor output = at::native::empty_like(input);\n+\n+  int64_t n_input = input.size(1);\n+  int64_t n = input.numel() / n_input;\n+\n+  Tensor save_mean;\n+  Tensor save_invstd;\n+  const int64_t zero = 0;\n+  if (train) {\n+    save_mean = at::native::empty({n_input}, input.options());", "path": "aten/src/ATen/native/Normalization.cpp", "position": null, "original_position": 38, "commit_id": "0d7aac942b890f4b345f3511c14ab41fede97741", "original_commit_id": "65cffb0953f56fdf0c004248b004b1d9a4eb1d7e", "user": {"login": "SsnL", "id": 5674597, "node_id": "MDQ6VXNlcjU2NzQ1OTc=", "avatar_url": "https://avatars2.githubusercontent.com/u/5674597?v=4", "gravatar_id": "", "url": "https://api.github.com/users/SsnL", "html_url": "https://github.com/SsnL", "followers_url": "https://api.github.com/users/SsnL/followers", "following_url": "https://api.github.com/users/SsnL/following{/other_user}", "gists_url": "https://api.github.com/users/SsnL/gists{/gist_id}", "starred_url": "https://api.github.com/users/SsnL/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/SsnL/subscriptions", "organizations_url": "https://api.github.com/users/SsnL/orgs", "repos_url": "https://api.github.com/users/SsnL/repos", "events_url": "https://api.github.com/users/SsnL/events{/privacy}", "received_events_url": "https://api.github.com/users/SsnL/received_events", "type": "User", "site_admin": false}, "body": "Use `at::empty`.", "created_at": "2018-10-12T08:43:40Z", "updated_at": "2018-11-23T15:52:56Z", "html_url": "https://github.com/pytorch/pytorch/pull/12368#discussion_r224712463", "pull_request_url": "https://api.github.com/repos/pytorch/pytorch/pulls/12368", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/224712463"}, "html": {"href": "https://github.com/pytorch/pytorch/pull/12368#discussion_r224712463"}, "pull_request": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/12368"}}, "body_html": "<p>Use <code>at::empty</code>.</p>", "body_text": "Use at::empty."}