{"url": "https://api.github.com/repos/pytorch/pytorch/issues/comments/302763786", "html_url": "https://github.com/pytorch/pytorch/issues/1517#issuecomment-302763786", "issue_url": "https://api.github.com/repos/pytorch/pytorch/issues/1517", "id": 302763786, "node_id": "MDEyOklzc3VlQ29tbWVudDMwMjc2Mzc4Ng==", "user": {"login": "colesbury", "id": 655866, "node_id": "MDQ6VXNlcjY1NTg2Ng==", "avatar_url": "https://avatars1.githubusercontent.com/u/655866?v=4", "gravatar_id": "", "url": "https://api.github.com/users/colesbury", "html_url": "https://github.com/colesbury", "followers_url": "https://api.github.com/users/colesbury/followers", "following_url": "https://api.github.com/users/colesbury/following{/other_user}", "gists_url": "https://api.github.com/users/colesbury/gists{/gist_id}", "starred_url": "https://api.github.com/users/colesbury/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/colesbury/subscriptions", "organizations_url": "https://api.github.com/users/colesbury/orgs", "repos_url": "https://api.github.com/users/colesbury/repos", "events_url": "https://api.github.com/users/colesbury/events{/privacy}", "received_events_url": "https://api.github.com/users/colesbury/received_events", "type": "User", "site_admin": false}, "created_at": "2017-05-19T17:30:29Z", "updated_at": "2017-05-19T17:30:29Z", "author_association": "MEMBER", "body_html": "<p>The issue is that <code>matrix</code> has stride <code>(1, 0)</code> so <code>lda</code> is 0, which is not supported by BLAS or cuBLAS. On the CPU side, we have a fallback to a naive for-loop based matrix-vector multiplication, but we don't have that for CUDA.</p>\n<p>Making the matrix contiguous fixes the error, but expands the matrix in memory.</p>", "body_text": "The issue is that matrix has stride (1, 0) so lda is 0, which is not supported by BLAS or cuBLAS. On the CPU side, we have a fallback to a naive for-loop based matrix-vector multiplication, but we don't have that for CUDA.\nMaking the matrix contiguous fixes the error, but expands the matrix in memory.", "body": "The issue is that `matrix` has stride `(1, 0)` so `lda` is 0, which is not supported by BLAS or cuBLAS. On the CPU side, we have a fallback to a naive for-loop based matrix-vector multiplication, but we don't have that for CUDA.\r\n\r\nMaking the matrix contiguous fixes the error, but expands the matrix in memory. "}