{"url": "https://api.github.com/repos/pytorch/pytorch/issues/1517", "repository_url": "https://api.github.com/repos/pytorch/pytorch", "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/1517/labels{/name}", "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/1517/comments", "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/1517/events", "html_url": "https://github.com/pytorch/pytorch/issues/1517", "id": 227352471, "node_id": "MDU6SXNzdWUyMjczNTI0NzE=", "number": 1517, "title": "Raise RuntimeError when performing torch.addmv", "user": {"login": "caogang", "id": 2537027, "node_id": "MDQ6VXNlcjI1MzcwMjc=", "avatar_url": "https://avatars1.githubusercontent.com/u/2537027?v=4", "gravatar_id": "", "url": "https://api.github.com/users/caogang", "html_url": "https://github.com/caogang", "followers_url": "https://api.github.com/users/caogang/followers", "following_url": "https://api.github.com/users/caogang/following{/other_user}", "gists_url": "https://api.github.com/users/caogang/gists{/gist_id}", "starred_url": "https://api.github.com/users/caogang/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/caogang/subscriptions", "organizations_url": "https://api.github.com/users/caogang/orgs", "repos_url": "https://api.github.com/users/caogang/repos", "events_url": "https://api.github.com/users/caogang/events{/privacy}", "received_events_url": "https://api.github.com/users/caogang/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 424131847, "node_id": "MDU6TGFiZWw0MjQxMzE4NDc=", "url": "https://api.github.com/repos/pytorch/pytorch/labels/bug", "name": "bug", "color": "b60205", "default": true}, {"id": 443484135, "node_id": "MDU6TGFiZWw0NDM0ODQxMzU=", "url": "https://api.github.com/repos/pytorch/pytorch/labels/high%20priority", "name": "high priority", "color": "F22613", "default": false}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2017-05-09T12:40:33Z", "updated_at": "2017-10-05T18:03:30Z", "closed_at": "2017-10-05T18:03:30Z", "author_association": "CONTRIBUTOR", "body_html": "<p>torch.addmv raise RuntimeError when the matrix M is (1, N), vector V is (N). When calculating M*V using torch.addmv in cpu, it works. However, when calculating in gpu, it raise Runtime Error.</p>\n<div class=\"highlight highlight-source-python\"><pre>alpha <span class=\"pl-k\">=</span> <span class=\"pl-c1\">0</span>\nbeta <span class=\"pl-k\">=</span> <span class=\"pl-c1\">1</span>\nadd_vector <span class=\"pl-k\">=</span> torch.FloatTensor([<span class=\"pl-c1\">2</span>]).cuda()\nmatrix <span class=\"pl-k\">=</span> torch.FloatTensor([<span class=\"pl-c1\">2</span>]).cuda()\nmatrix <span class=\"pl-k\">=</span> matrix.expand(<span class=\"pl-c1\">1</span>, <span class=\"pl-c1\">64</span>)\nvector <span class=\"pl-k\">=</span> torch.ones(<span class=\"pl-c1\">64</span>).cuda()\noutput <span class=\"pl-k\">=</span> add_vector.new().resize_as_(add_vector)\ntorch.addmv(alpha, add_vector, beta,\n            matrix, vector, <span class=\"pl-v\">out</span><span class=\"pl-k\">=</span>output)</pre></div>\n<p>It will raise an error</p>\n<div class=\"highlight highlight-source-python\"><pre>RuntimeErrorTraceback (most recent call last)\n<span class=\"pl-k\">&lt;</span>ipython<span class=\"pl-k\">-</span><span class=\"pl-c1\">input</span><span class=\"pl-k\">-</span><span class=\"pl-c1\">108</span><span class=\"pl-k\">-</span>b652d675e3d9<span class=\"pl-k\">&gt;</span> <span class=\"pl-k\">in</span> <span class=\"pl-k\">&lt;</span>module<span class=\"pl-k\">&gt;</span>()\n      <span class=\"pl-c1\">7</span> output <span class=\"pl-k\">=</span> add_vector.new().resize_as_(add_vector)\n      <span class=\"pl-c1\">8</span> torch.addmv(alpha, add_vector, beta,\n<span class=\"pl-ii\">----</span><span class=\"pl-k\">&gt;</span> <span class=\"pl-c1\">9</span>             matrix, vector, <span class=\"pl-v\">out</span><span class=\"pl-k\">=</span>output)\n\n<span class=\"pl-c1\">RuntimeError</span>: Cublas_Sgemv only supports m, n, lda, incx, incyin the <span class=\"pl-c1\">range</span> <span class=\"pl-c1\">0</span> <span class=\"pl-k\">&lt;</span> [val] <span class=\"pl-k\">&lt;=</span> <span class=\"pl-c1\">2147483647</span> at <span class=\"pl-k\">/</span>home<span class=\"pl-k\">/</span>users<span class=\"pl-k\">/</span>gang.cao<span class=\"pl-k\">/</span>download<span class=\"pl-k\">/</span>pytorch<span class=\"pl-k\">/</span>torch<span class=\"pl-k\">/</span>lib<span class=\"pl-k\">/</span><span class=\"pl-c1\">THC</span><span class=\"pl-k\">/</span>THCBlas.cu:<span class=\"pl-c1\">109</span></pre></div>\n<p>When I use cpu tensor or make the matrix M is (t, N)[t &gt; 1], the addmv is worked. I think this maybe a bug in some way.</p>", "body_text": "torch.addmv raise RuntimeError when the matrix M is (1, N), vector V is (N). When calculating M*V using torch.addmv in cpu, it works. However, when calculating in gpu, it raise Runtime Error.\nalpha = 0\nbeta = 1\nadd_vector = torch.FloatTensor([2]).cuda()\nmatrix = torch.FloatTensor([2]).cuda()\nmatrix = matrix.expand(1, 64)\nvector = torch.ones(64).cuda()\noutput = add_vector.new().resize_as_(add_vector)\ntorch.addmv(alpha, add_vector, beta,\n            matrix, vector, out=output)\nIt will raise an error\nRuntimeErrorTraceback (most recent call last)\n<ipython-input-108-b652d675e3d9> in <module>()\n      7 output = add_vector.new().resize_as_(add_vector)\n      8 torch.addmv(alpha, add_vector, beta,\n----> 9             matrix, vector, out=output)\n\nRuntimeError: Cublas_Sgemv only supports m, n, lda, incx, incyin the range 0 < [val] <= 2147483647 at /home/users/gang.cao/download/pytorch/torch/lib/THC/THCBlas.cu:109\nWhen I use cpu tensor or make the matrix M is (t, N)[t > 1], the addmv is worked. I think this maybe a bug in some way.", "body": "torch.addmv raise RuntimeError when the matrix M is (1, N), vector V is (N). When calculating M*V using torch.addmv in cpu, it works. However, when calculating in gpu, it raise Runtime Error.\r\n\r\n```python\r\nalpha = 0\r\nbeta = 1\r\nadd_vector = torch.FloatTensor([2]).cuda()\r\nmatrix = torch.FloatTensor([2]).cuda()\r\nmatrix = matrix.expand(1, 64)\r\nvector = torch.ones(64).cuda()\r\noutput = add_vector.new().resize_as_(add_vector)\r\ntorch.addmv(alpha, add_vector, beta,\r\n            matrix, vector, out=output)\r\n```\r\n\r\nIt will raise an error\r\n\r\n```python\r\nRuntimeErrorTraceback (most recent call last)\r\n<ipython-input-108-b652d675e3d9> in <module>()\r\n      7 output = add_vector.new().resize_as_(add_vector)\r\n      8 torch.addmv(alpha, add_vector, beta,\r\n----> 9             matrix, vector, out=output)\r\n\r\nRuntimeError: Cublas_Sgemv only supports m, n, lda, incx, incyin the range 0 < [val] <= 2147483647 at /home/users/gang.cao/download/pytorch/torch/lib/THC/THCBlas.cu:109\r\n```\r\n\r\nWhen I use cpu tensor or make the matrix M is (t, N)[t > 1], the addmv is worked. I think this maybe a bug in some way."}