{"url": "https://api.github.com/repos/pytorch/pytorch/issues/comments/394643507", "html_url": "https://github.com/pytorch/pytorch/pull/8018#issuecomment-394643507", "issue_url": "https://api.github.com/repos/pytorch/pytorch/issues/8018", "id": 394643507, "node_id": "MDEyOklzc3VlQ29tbWVudDM5NDY0MzUwNw==", "user": {"login": "apaszke", "id": 4583066, "node_id": "MDQ6VXNlcjQ1ODMwNjY=", "avatar_url": "https://avatars3.githubusercontent.com/u/4583066?v=4", "gravatar_id": "", "url": "https://api.github.com/users/apaszke", "html_url": "https://github.com/apaszke", "followers_url": "https://api.github.com/users/apaszke/followers", "following_url": "https://api.github.com/users/apaszke/following{/other_user}", "gists_url": "https://api.github.com/users/apaszke/gists{/gist_id}", "starred_url": "https://api.github.com/users/apaszke/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/apaszke/subscriptions", "organizations_url": "https://api.github.com/users/apaszke/orgs", "repos_url": "https://api.github.com/users/apaszke/repos", "events_url": "https://api.github.com/users/apaszke/events{/privacy}", "received_events_url": "https://api.github.com/users/apaszke/received_events", "type": "User", "site_admin": false}, "created_at": "2018-06-05T09:26:39Z", "updated_at": "2018-06-05T09:26:39Z", "author_association": "MEMBER", "body_html": "<p><code>reduce</code> is not a keyword, but a name of a builtin that was actually removed in Python 2 (it's no longer imported by default).</p>\n<p>I really don't think that using enums is very user friendly. It's definitely more verbose, and very rare in Python APIs. What's the issue with the two boolean flags we have right now? Sure, there are configurations which are incompatible, but assuming we keep our current defaults, you only specify at most one of those two arguments, and no issues should arise.</p>", "body_text": "reduce is not a keyword, but a name of a builtin that was actually removed in Python 2 (it's no longer imported by default).\nI really don't think that using enums is very user friendly. It's definitely more verbose, and very rare in Python APIs. What's the issue with the two boolean flags we have right now? Sure, there are configurations which are incompatible, but assuming we keep our current defaults, you only specify at most one of those two arguments, and no issues should arise.", "body": "`reduce` is not a keyword, but a name of a builtin that was actually removed in Python 2 (it's no longer imported by default).\r\n\r\nI really don't think that using enums is very user friendly. It's definitely more verbose, and very rare in Python APIs. What's the issue with the two boolean flags we have right now? Sure, there are configurations which are incompatible, but assuming we keep our current defaults, you only specify at most one of those two arguments, and no issues should arise."}