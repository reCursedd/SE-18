{"url": "https://api.github.com/repos/pytorch/pytorch/issues/comments/393874691", "html_url": "https://github.com/pytorch/pytorch/pull/8018#issuecomment-393874691", "issue_url": "https://api.github.com/repos/pytorch/pytorch/issues/8018", "id": 393874691, "node_id": "MDEyOklzc3VlQ29tbWVudDM5Mzg3NDY5MQ==", "user": {"login": "apaszke", "id": 4583066, "node_id": "MDQ6VXNlcjQ1ODMwNjY=", "avatar_url": "https://avatars3.githubusercontent.com/u/4583066?v=4", "gravatar_id": "", "url": "https://api.github.com/users/apaszke", "html_url": "https://github.com/apaszke", "followers_url": "https://api.github.com/users/apaszke/followers", "following_url": "https://api.github.com/users/apaszke/following{/other_user}", "gists_url": "https://api.github.com/users/apaszke/gists{/gist_id}", "starred_url": "https://api.github.com/users/apaszke/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/apaszke/subscriptions", "organizations_url": "https://api.github.com/users/apaszke/orgs", "repos_url": "https://api.github.com/users/apaszke/repos", "events_url": "https://api.github.com/users/apaszke/events{/privacy}", "received_events_url": "https://api.github.com/users/apaszke/received_events", "type": "User", "site_admin": false}, "created_at": "2018-06-01T13:07:06Z", "updated_at": "2018-06-01T13:07:06Z", "author_association": "MEMBER", "body_html": "<p>I can see why we might want to change the C code, but do we really think that breaking backward compatibility to make people say <code>reduce=Reduce.NONE</code> instead of <code>reduce=False</code> is a good idea? It's certainly less Pythonic. The new thing is much more verbose, and the old API seemed to work quite well.</p>", "body_text": "I can see why we might want to change the C code, but do we really think that breaking backward compatibility to make people say reduce=Reduce.NONE instead of reduce=False is a good idea? It's certainly less Pythonic. The new thing is much more verbose, and the old API seemed to work quite well.", "body": "I can see why we might want to change the C code, but do we really think that breaking backward compatibility to make people say `reduce=Reduce.NONE` instead of `reduce=False` is a good idea? It's certainly less Pythonic. The new thing is much more verbose, and the old API seemed to work quite well."}