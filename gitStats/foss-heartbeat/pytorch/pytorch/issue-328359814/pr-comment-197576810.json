{"url": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/197576810", "pull_request_review_id": 131356086, "id": 197576810, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5NzU3NjgxMA==", "diff_hunk": "@@ -1396,51 +1449,72 @@ def poisson_nll_loss(input, target, log_input=True, full=False, size_average=Tru\n         full: whether to compute full loss, i. e. to add the Stirling\n             approximation term. Default: ``False``\n             :math:`\\text{target} * \\log(\\text{target}) - \\text{target} + 0.5 * \\log(2 * \\pi * \\text{target})`.\n-        size_average: By default, the losses are averaged over observations for\n-            each minibatch. However, if the field :attr:`size_average` is set to ``False``,\n-            the losses are instead summed for each minibatch. Default: ``True``\n+        size_average (bool, optional): Deprecated (see :attr:`reduction`). By default,", "path": "torch/nn/functional.py", "position": 131, "original_position": 129, "commit_id": "b0b07217fe903430a52c8ba5f1c8842046e8e2ed", "original_commit_id": "a599563de0de4492c061e6935220e192201d016f", "user": {"login": "li-roy", "id": 8813817, "node_id": "MDQ6VXNlcjg4MTM4MTc=", "avatar_url": "https://avatars0.githubusercontent.com/u/8813817?v=4", "gravatar_id": "", "url": "https://api.github.com/users/li-roy", "html_url": "https://github.com/li-roy", "followers_url": "https://api.github.com/users/li-roy/followers", "following_url": "https://api.github.com/users/li-roy/following{/other_user}", "gists_url": "https://api.github.com/users/li-roy/gists{/gist_id}", "starred_url": "https://api.github.com/users/li-roy/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/li-roy/subscriptions", "organizations_url": "https://api.github.com/users/li-roy/orgs", "repos_url": "https://api.github.com/users/li-roy/repos", "events_url": "https://api.github.com/users/li-roy/events{/privacy}", "received_events_url": "https://api.github.com/users/li-roy/received_events", "type": "User", "site_admin": false}, "body": "OK to 1.\r\n\r\nFor number 2. I do raise a deprecation warning. It's in get_reduction_constant in the Reduction class. I call it whenever whenever the nn.functional function or nn module is passed size_average or reduce.", "created_at": "2018-06-22T21:45:18Z", "updated_at": "2018-11-23T15:46:10Z", "html_url": "https://github.com/pytorch/pytorch/pull/8018#discussion_r197576810", "pull_request_url": "https://api.github.com/repos/pytorch/pytorch/pulls/8018", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/197576810"}, "html": {"href": "https://github.com/pytorch/pytorch/pull/8018#discussion_r197576810"}, "pull_request": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/8018"}}, "body_html": "<p>OK to 1.</p>\n<p>For number 2. I do raise a deprecation warning. It's in get_reduction_constant in the Reduction class. I call it whenever whenever the nn.functional function or nn module is passed size_average or reduce.</p>", "body_text": "OK to 1.\nFor number 2. I do raise a deprecation warning. It's in get_reduction_constant in the Reduction class. I call it whenever whenever the nn.functional function or nn module is passed size_average or reduce.", "in_reply_to_id": 197549708}