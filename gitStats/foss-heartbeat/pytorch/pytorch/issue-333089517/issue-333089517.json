{"url": "https://api.github.com/repos/pytorch/pytorch/issues/8590", "repository_url": "https://api.github.com/repos/pytorch/pytorch", "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/8590/labels{/name}", "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/8590/comments", "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/8590/events", "html_url": "https://github.com/pytorch/pytorch/pull/8590", "id": 333089517, "node_id": "MDExOlB1bGxSZXF1ZXN0MTk1MzkzMjkx", "number": 8590, "title": "Spectral norm improvements", "user": {"login": "t-vi", "id": 20787943, "node_id": "MDQ6VXNlcjIwNzg3OTQz", "avatar_url": "https://avatars2.githubusercontent.com/u/20787943?v=4", "gravatar_id": "", "url": "https://api.github.com/users/t-vi", "html_url": "https://github.com/t-vi", "followers_url": "https://api.github.com/users/t-vi/followers", "following_url": "https://api.github.com/users/t-vi/following{/other_user}", "gists_url": "https://api.github.com/users/t-vi/gists{/gist_id}", "starred_url": "https://api.github.com/users/t-vi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/t-vi/subscriptions", "organizations_url": "https://api.github.com/users/t-vi/orgs", "repos_url": "https://api.github.com/users/t-vi/repos", "events_url": "https://api.github.com/users/t-vi/events{/privacy}", "received_events_url": "https://api.github.com/users/t-vi/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2018-06-17T20:15:09Z", "updated_at": "2018-11-23T15:45:49Z", "closed_at": "2018-06-24T21:15:14Z", "author_association": "CONTRIBUTOR", "pull_request": {"url": "https://api.github.com/repos/pytorch/pytorch/pulls/8590", "html_url": "https://github.com/pytorch/pytorch/pull/8590", "diff_url": "https://github.com/pytorch/pytorch/pull/8590.diff", "patch_url": "https://github.com/pytorch/pytorch/pull/8590.patch"}, "body_html": "<ul>\n<li>Don't do iterations on weight in eval mode<br>\nTo facilitate this, register weight as buffer in order to be able<br>\nto use module with spectral norm in eval mode after immediately<br>\nafter loading state dict (<a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load issue title\" data-id=\"330013154\" data-permission-text=\"Issue title is private\" data-url=\"https://github.com/pytorch/pytorch/issues/8208\" data-hovercard-type=\"issue\" data-hovercard-url=\"/pytorch/pytorch/issues/8208/hovercard\" href=\"https://github.com/pytorch/pytorch/issues/8208\">#8208</a>)</li>\n<li>Use weight instead of weight_orig as weight when removing<br>\nspectral norm</li>\n<li>Add dim parameter in case the normalization should occur w.r.t.<br>\na dimension other than 0 (<a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load issue title\" data-id=\"326681864\" data-permission-text=\"Issue title is private\" data-url=\"https://github.com/pytorch/pytorch/issues/7865\" data-hovercard-type=\"issue\" data-hovercard-url=\"/pytorch/pytorch/issues/7865/hovercard\" href=\"https://github.com/pytorch/pytorch/issues/7865\">#7865</a>)</li>\n</ul>\n<p><a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=5674597\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/SsnL\">@SsnL</a> is this about what you had in mind?</p>\n<p>I have to add tests. What would be resonable here</p>\n<ul>\n<li>test that three calls in eval mode give the exact same thing and after remove</li>\n<li>test convergence of SN in the right dimension using fixed random weights for Linear and ConvTranspose2d?</li>\n</ul>", "body_text": "Don't do iterations on weight in eval mode\nTo facilitate this, register weight as buffer in order to be able\nto use module with spectral norm in eval mode after immediately\nafter loading state dict (#8208)\nUse weight instead of weight_orig as weight when removing\nspectral norm\nAdd dim parameter in case the normalization should occur w.r.t.\na dimension other than 0 (#7865)\n\n@SsnL is this about what you had in mind?\nI have to add tests. What would be resonable here\n\ntest that three calls in eval mode give the exact same thing and after remove\ntest convergence of SN in the right dimension using fixed random weights for Linear and ConvTranspose2d?", "body": "- Don't do iterations on weight in eval mode\r\n  To facilitate this, register weight as buffer in order to be able\r\n  to use module with spectral norm in eval mode after immediately\r\n  after loading state dict (#8208)\r\n- Use weight instead of weight_orig as weight when removing\r\n  spectral norm\r\n- Add dim parameter in case the normalization should occur w.r.t.\r\n  a dimension other than 0 (#7865)\r\n\r\n\r\n@SsnL is this about what you had in mind?\r\n\r\nI have to add tests. What would be resonable here\r\n- test that three calls in eval mode give the exact same thing and after remove\r\n- test convergence of SN in the right dimension using fixed random weights for Linear and ConvTranspose2d?\r\n"}