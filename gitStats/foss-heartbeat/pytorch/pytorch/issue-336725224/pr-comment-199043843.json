{"url": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/199043843", "pull_request_review_id": 133087396, "id": 199043843, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5OTA0Mzg0Mw==", "diff_hunk": "@@ -386,51 +386,108 @@ inline Tensor reduce_multi_associative(const Tensor &self, IntList dims_, bool k\n     return self;\n   }\n   int64_t ndims = self.dim();\n-  auto reduce_dims = dim_list_to_bitset(dims_, ndims);\n-  Tensor result = self;\n-  for (int64_t dim = ndims-1; dim >= 0; dim--) {\n-    if (reduce_dims[dim])\n-      result = reduce_1(result, dim, keepdim);\n+  auto reduced_size = self.sizes().vec();", "path": "aten/src/ATen/native/ReduceOps.cpp", "position": null, "original_position": 27, "commit_id": "269ac84c3634c430713a6cb342f2866d223ac370", "original_commit_id": "3efcac1a9ab743459d1de925c7e4f17240a4cc88", "user": {"login": "ezyang", "id": 13564, "node_id": "MDQ6VXNlcjEzNTY0", "avatar_url": "https://avatars0.githubusercontent.com/u/13564?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ezyang", "html_url": "https://github.com/ezyang", "followers_url": "https://api.github.com/users/ezyang/followers", "following_url": "https://api.github.com/users/ezyang/following{/other_user}", "gists_url": "https://api.github.com/users/ezyang/gists{/gist_id}", "starred_url": "https://api.github.com/users/ezyang/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ezyang/subscriptions", "organizations_url": "https://api.github.com/users/ezyang/orgs", "repos_url": "https://api.github.com/users/ezyang/repos", "events_url": "https://api.github.com/users/ezyang/events{/privacy}", "received_events_url": "https://api.github.com/users/ezyang/received_events", "type": "User", "site_admin": false}, "body": "I don't actually know if this is the case or not, but does this do the optimization where if two dimensions are contiguous, they are collapsed into a single dimension and reduced all at once?", "created_at": "2018-06-29T03:20:16Z", "updated_at": "2018-11-23T15:46:32Z", "html_url": "https://github.com/pytorch/pytorch/pull/8992#discussion_r199043843", "pull_request_url": "https://api.github.com/repos/pytorch/pytorch/pulls/8992", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/199043843"}, "html": {"href": "https://github.com/pytorch/pytorch/pull/8992#discussion_r199043843"}, "pull_request": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/8992"}}, "body_html": "<p>I don't actually know if this is the case or not, but does this do the optimization where if two dimensions are contiguous, they are collapsed into a single dimension and reduced all at once?</p>", "body_text": "I don't actually know if this is the case or not, but does this do the optimization where if two dimensions are contiguous, they are collapsed into a single dimension and reduced all at once?"}