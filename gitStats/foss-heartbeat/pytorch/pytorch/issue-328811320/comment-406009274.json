{"url": "https://api.github.com/repos/pytorch/pytorch/issues/comments/406009274", "html_url": "https://github.com/pytorch/pytorch/issues/8079#issuecomment-406009274", "issue_url": "https://api.github.com/repos/pytorch/pytorch/issues/8079", "id": 406009274, "node_id": "MDEyOklzc3VlQ29tbWVudDQwNjAwOTI3NA==", "user": {"login": "soumith", "id": 1310570, "node_id": "MDQ6VXNlcjEzMTA1NzA=", "avatar_url": "https://avatars0.githubusercontent.com/u/1310570?v=4", "gravatar_id": "", "url": "https://api.github.com/users/soumith", "html_url": "https://github.com/soumith", "followers_url": "https://api.github.com/users/soumith/followers", "following_url": "https://api.github.com/users/soumith/following{/other_user}", "gists_url": "https://api.github.com/users/soumith/gists{/gist_id}", "starred_url": "https://api.github.com/users/soumith/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/soumith/subscriptions", "organizations_url": "https://api.github.com/users/soumith/orgs", "repos_url": "https://api.github.com/users/soumith/repos", "events_url": "https://api.github.com/users/soumith/events{/privacy}", "received_events_url": "https://api.github.com/users/soumith/received_events", "type": "User", "site_admin": false}, "created_at": "2018-07-18T17:21:20Z", "updated_at": "2018-07-18T17:21:20Z", "author_association": "MEMBER", "body_html": "<p><a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=226872\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/samuela\">@samuela</a> i completely agree. Unfortunately there's no easy fix. We cant set a signal trap, or catch an exception in C land to catch a Floating point exception. The only solution is to actually never do an integer divide by zero, so the entire set of C kernels have to guard against this.</p>", "body_text": "@samuela i completely agree. Unfortunately there's no easy fix. We cant set a signal trap, or catch an exception in C land to catch a Floating point exception. The only solution is to actually never do an integer divide by zero, so the entire set of C kernels have to guard against this.", "body": "@samuela i completely agree. Unfortunately there's no easy fix. We cant set a signal trap, or catch an exception in C land to catch a Floating point exception. The only solution is to actually never do an integer divide by zero, so the entire set of C kernels have to guard against this."}