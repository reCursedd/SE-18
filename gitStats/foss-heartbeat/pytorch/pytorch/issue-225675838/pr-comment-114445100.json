{"url": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/114445100", "pull_request_review_id": 35911895, "id": 114445100, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDExNDQ0NTEwMA==", "diff_hunk": "@@ -62,27 +63,83 @@ struct NoCtor {\n };\n \n template<typename C, typename T>\n-static void addClass(PyObject* module, PyTypeObject& type, const char* name)\n+static void addClass(PyObject* module, PyTypeObject& type, const char* name,\n+  PyGetSetDef* function_properties=NULL, PyMethodDef* function_methods=NULL)\n {\n-  createForwardFunctionPyTypeObject<T>(type, name);\n+  createForwardFunctionPyTypeObject<T>(type, name, function_properties, function_methods);\n   Py_INCREF(&type);\n   PyModule_AddObject(module, name, (PyObject*)&type);\n   registerCppFunction(typeid(C), &type);\n }\n \n+template<typename T, typename M, typename P, M P::*ptr, typename V, PyObject* (*Convert)(V)>\n+PyObject* getTupleAttr(PyObject* obj, void* _unused)\n+{\n+  THPCppFunction* self = (THPCppFunction*)obj;\n+  auto& arr = std::static_pointer_cast<T>(self->cdata).get()->*ptr;\n+  auto num_elems = arr.size();\n+  THPObjectPtr py_tuple = PyTuple_New(num_elems);\n+  if (!py_tuple) return NULL;\n+  for (size_t i = 0; i < num_elems; ++i) {\n+    PyTuple_SET_ITEM(py_tuple.get(), i, Convert(arr[i]));\n+  }\n+  return py_tuple.release();", "path": "torch/csrc/autograd/functions/init.cpp", "position": 39, "original_position": 34, "commit_id": "f885c05a12df250b91102d96e933afd47a2c5003", "original_commit_id": "11a3fc95e08f990402ed7064d093f9ea940c5e3c", "user": {"login": "apaszke", "id": 4583066, "node_id": "MDQ6VXNlcjQ1ODMwNjY=", "avatar_url": "https://avatars3.githubusercontent.com/u/4583066?v=4", "gravatar_id": "", "url": "https://api.github.com/users/apaszke", "html_url": "https://github.com/apaszke", "followers_url": "https://api.github.com/users/apaszke/followers", "following_url": "https://api.github.com/users/apaszke/following{/other_user}", "gists_url": "https://api.github.com/users/apaszke/gists{/gist_id}", "starred_url": "https://api.github.com/users/apaszke/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/apaszke/subscriptions", "organizations_url": "https://api.github.com/users/apaszke/orgs", "repos_url": "https://api.github.com/users/apaszke/repos", "events_url": "https://api.github.com/users/apaszke/events{/privacy}", "received_events_url": "https://api.github.com/users/apaszke/received_events", "type": "User", "site_admin": false}, "body": "You might want to wrap these templates in `HANDLE_TH_ERRORS` and `END_HANDLE_TH_ERRORS`. It's going to handle C++ exceptions and convert them into Python errors.", "created_at": "2017-05-02T23:01:46Z", "updated_at": "2018-11-23T15:33:19Z", "html_url": "https://github.com/pytorch/pytorch/pull/1430#discussion_r114445100", "pull_request_url": "https://api.github.com/repos/pytorch/pytorch/pulls/1430", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/114445100"}, "html": {"href": "https://github.com/pytorch/pytorch/pull/1430#discussion_r114445100"}, "pull_request": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/1430"}}, "body_html": "<p>You might want to wrap these templates in <code>HANDLE_TH_ERRORS</code> and <code>END_HANDLE_TH_ERRORS</code>. It's going to handle C++ exceptions and convert them into Python errors.</p>", "body_text": "You might want to wrap these templates in HANDLE_TH_ERRORS and END_HANDLE_TH_ERRORS. It's going to handle C++ exceptions and convert them into Python errors."}