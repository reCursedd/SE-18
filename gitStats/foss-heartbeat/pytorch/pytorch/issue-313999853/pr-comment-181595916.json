{"url": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/181595916", "pull_request_review_id": 112250234, "id": 181595916, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MTU5NTkxNg==", "diff_hunk": "@@ -333,40 +303,82 @@ struct Variable::Impl : public at::TensorImpl {\n \n   std::shared_ptr<Function> get_grad_accumulator();\n   virtual std::shared_ptr<Function>& get_grad_fn() {\n-    return grad_fn;\n+    return grad_fn_;\n+  }\n+\n+  virtual const Variable& base() const {\n+    throw std::runtime_error(\"Can't get base of non-view Variable\");\n+  }\n+\n+  /// Sets the `requires_grad` property of `Variable`. This should be true for\n+  /// leaf variables that want to accumulate gradients, and false for all other\n+  /// variables.\n+  void set_requires_grad(bool requires_grad) noexcept override {\n+    requires_grad_ = requires_grad;\n+  }\n+\n+  bool requires_grad() const noexcept override {\n+    return requires_grad_ || grad_fn_ || (is_view_ && base().requires_grad());", "path": "torch/csrc/autograd/variable.h", "position": null, "original_position": 100, "commit_id": "31b59567c9b1c8600cab602541d52461fe5d93fd", "original_commit_id": "683e84f3fe6c3a161f791032acba19d5e3f942b7", "user": {"login": "goldsborough", "id": 6429851, "node_id": "MDQ6VXNlcjY0Mjk4NTE=", "avatar_url": "https://avatars3.githubusercontent.com/u/6429851?v=4", "gravatar_id": "", "url": "https://api.github.com/users/goldsborough", "html_url": "https://github.com/goldsborough", "followers_url": "https://api.github.com/users/goldsborough/followers", "following_url": "https://api.github.com/users/goldsborough/following{/other_user}", "gists_url": "https://api.github.com/users/goldsborough/gists{/gist_id}", "starred_url": "https://api.github.com/users/goldsborough/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/goldsborough/subscriptions", "organizations_url": "https://api.github.com/users/goldsborough/orgs", "repos_url": "https://api.github.com/users/goldsborough/repos", "events_url": "https://api.github.com/users/goldsborough/events{/privacy}", "received_events_url": "https://api.github.com/users/goldsborough/received_events", "type": "User", "site_admin": false}, "body": "Yeah but right now `base()` will throw an exception when called for a non-view. And if I change  `base()` to return `*this` instead, then `base().requires_grad()` will infinite loop. So unless I do a `dynamic_cast`, I'm not sure there's a better way to solve it right now. What do you think? ", "created_at": "2018-04-15T20:29:56Z", "updated_at": "2018-11-23T15:42:29Z", "html_url": "https://github.com/pytorch/pytorch/pull/6582#discussion_r181595916", "pull_request_url": "https://api.github.com/repos/pytorch/pytorch/pulls/6582", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/181595916"}, "html": {"href": "https://github.com/pytorch/pytorch/pull/6582#discussion_r181595916"}, "pull_request": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/6582"}}, "body_html": "<p>Yeah but right now <code>base()</code> will throw an exception when called for a non-view. And if I change  <code>base()</code> to return <code>*this</code> instead, then <code>base().requires_grad()</code> will infinite loop. So unless I do a <code>dynamic_cast</code>, I'm not sure there's a better way to solve it right now. What do you think?</p>", "body_text": "Yeah but right now base() will throw an exception when called for a non-view. And if I change  base() to return *this instead, then base().requires_grad() will infinite loop. So unless I do a dynamic_cast, I'm not sure there's a better way to solve it right now. What do you think?", "in_reply_to_id": 181337945}