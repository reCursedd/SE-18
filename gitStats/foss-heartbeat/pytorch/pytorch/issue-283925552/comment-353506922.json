{"url": "https://api.github.com/repos/pytorch/pytorch/issues/comments/353506922", "html_url": "https://github.com/pytorch/pytorch/issues/4296#issuecomment-353506922", "issue_url": "https://api.github.com/repos/pytorch/pytorch/issues/4296", "id": 353506922, "node_id": "MDEyOklzc3VlQ29tbWVudDM1MzUwNjkyMg==", "user": {"login": "fehiepsi", "id": 4736342, "node_id": "MDQ6VXNlcjQ3MzYzNDI=", "avatar_url": "https://avatars1.githubusercontent.com/u/4736342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fehiepsi", "html_url": "https://github.com/fehiepsi", "followers_url": "https://api.github.com/users/fehiepsi/followers", "following_url": "https://api.github.com/users/fehiepsi/following{/other_user}", "gists_url": "https://api.github.com/users/fehiepsi/gists{/gist_id}", "starred_url": "https://api.github.com/users/fehiepsi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fehiepsi/subscriptions", "organizations_url": "https://api.github.com/users/fehiepsi/orgs", "repos_url": "https://api.github.com/users/fehiepsi/repos", "events_url": "https://api.github.com/users/fehiepsi/events{/privacy}", "received_events_url": "https://api.github.com/users/fehiepsi/received_events", "type": "User", "site_admin": false}, "created_at": "2017-12-22T02:27:08Z", "updated_at": "2017-12-22T02:27:08Z", "author_association": "CONTRIBUTOR", "body_html": "<p><a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=4583066\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/apaszke\">@apaszke</a> I installed pytorch 3.0 from pytorch channel in anaconda. I think that the problem is at the flag <code>upper</code>. The same thing happens with <code>scipy.linalg.lapack</code></p>\n<pre><code>import numpy as np\nimport scipy.linalg.lapack as lapack\n\nA = np.tril(np.random.randn(100, 100))\nB = np.random.randn(100, 1)\nX = lapack.dtrtrs(A, B, lower=1)[0]\nX_ = lapack.dtrtrs(A, B)[0]\nY = lapack.dtrtrs(A.T, B, lower=1)[0]\nY_ = lapack.dtrtrs(A.T, B)[0]\nprint(\"A is lower triangle, flag lower=1 (expected): \", np.linalg.norm(np.matmul(A, X) - B))\nprint(\"A is lower triangle, flag lower=0: \", np.linalg.norm(np.matmul(A, X_) - B))\nprint(\"A is upper triangle, flag lower=1: \", np.linalg.norm(np.matmul(A.T, Y) - B))\nprint(\"A is upper triangle, flag lower=0 (expected): \", np.linalg.norm(np.matmul(A.T, Y_) - B))\n</code></pre>\n<p>Output:</p>\n<pre><code>A is lower triangle, flag lower=1 (expected):  7.07889489266e+17\nA is lower triangle, flag lower=0:  2995.47347603\nA is upper triangle, flag lower=1:  2232.57798145\nA is upper triangle, flag lower=0 (expected):  9.15041677462e+16\n</code></pre>\n<p>Now, for PyTorch, when I revert the flag <code>upper</code>, I get the expected result</p>\n<pre><code>A = torch.randn(100, 100).tril()\nB = torch.randn(100, 1)\nX = torch.gesv(B, A)[0]\nX_ = torch.trtrs(B, A, True)[0]\nX__ = torch.potrs(B, A, True)   # solution for (A.A_t)X = B\nprint(\"gesv error: \", torch.dist(A.matmul(X), B))\nprint(\"trtrs error: \", torch.dist(A.matmul(X_), B))\nprint(\"potrs error: \", torch.dist(A.matmul(A.t()).matmul(X__), B))\n</code></pre>\n<p>Output</p>\n<pre><code>gesv error:  25.122344970703125\ntrtrs error:  3783.712890625\npotrs error:  10534862.0\n</code></pre>", "body_text": "@apaszke I installed pytorch 3.0 from pytorch channel in anaconda. I think that the problem is at the flag upper. The same thing happens with scipy.linalg.lapack\nimport numpy as np\nimport scipy.linalg.lapack as lapack\n\nA = np.tril(np.random.randn(100, 100))\nB = np.random.randn(100, 1)\nX = lapack.dtrtrs(A, B, lower=1)[0]\nX_ = lapack.dtrtrs(A, B)[0]\nY = lapack.dtrtrs(A.T, B, lower=1)[0]\nY_ = lapack.dtrtrs(A.T, B)[0]\nprint(\"A is lower triangle, flag lower=1 (expected): \", np.linalg.norm(np.matmul(A, X) - B))\nprint(\"A is lower triangle, flag lower=0: \", np.linalg.norm(np.matmul(A, X_) - B))\nprint(\"A is upper triangle, flag lower=1: \", np.linalg.norm(np.matmul(A.T, Y) - B))\nprint(\"A is upper triangle, flag lower=0 (expected): \", np.linalg.norm(np.matmul(A.T, Y_) - B))\n\nOutput:\nA is lower triangle, flag lower=1 (expected):  7.07889489266e+17\nA is lower triangle, flag lower=0:  2995.47347603\nA is upper triangle, flag lower=1:  2232.57798145\nA is upper triangle, flag lower=0 (expected):  9.15041677462e+16\n\nNow, for PyTorch, when I revert the flag upper, I get the expected result\nA = torch.randn(100, 100).tril()\nB = torch.randn(100, 1)\nX = torch.gesv(B, A)[0]\nX_ = torch.trtrs(B, A, True)[0]\nX__ = torch.potrs(B, A, True)   # solution for (A.A_t)X = B\nprint(\"gesv error: \", torch.dist(A.matmul(X), B))\nprint(\"trtrs error: \", torch.dist(A.matmul(X_), B))\nprint(\"potrs error: \", torch.dist(A.matmul(A.t()).matmul(X__), B))\n\nOutput\ngesv error:  25.122344970703125\ntrtrs error:  3783.712890625\npotrs error:  10534862.0", "body": "@apaszke I installed pytorch 3.0 from pytorch channel in anaconda. I think that the problem is at the flag `upper`. The same thing happens with `scipy.linalg.lapack`\r\n```\r\nimport numpy as np\r\nimport scipy.linalg.lapack as lapack\r\n\r\nA = np.tril(np.random.randn(100, 100))\r\nB = np.random.randn(100, 1)\r\nX = lapack.dtrtrs(A, B, lower=1)[0]\r\nX_ = lapack.dtrtrs(A, B)[0]\r\nY = lapack.dtrtrs(A.T, B, lower=1)[0]\r\nY_ = lapack.dtrtrs(A.T, B)[0]\r\nprint(\"A is lower triangle, flag lower=1 (expected): \", np.linalg.norm(np.matmul(A, X) - B))\r\nprint(\"A is lower triangle, flag lower=0: \", np.linalg.norm(np.matmul(A, X_) - B))\r\nprint(\"A is upper triangle, flag lower=1: \", np.linalg.norm(np.matmul(A.T, Y) - B))\r\nprint(\"A is upper triangle, flag lower=0 (expected): \", np.linalg.norm(np.matmul(A.T, Y_) - B))\r\n```\r\nOutput:\r\n```\r\nA is lower triangle, flag lower=1 (expected):  7.07889489266e+17\r\nA is lower triangle, flag lower=0:  2995.47347603\r\nA is upper triangle, flag lower=1:  2232.57798145\r\nA is upper triangle, flag lower=0 (expected):  9.15041677462e+16\r\n```\r\nNow, for PyTorch, when I revert the flag `upper`, I get the expected result\r\n```\r\nA = torch.randn(100, 100).tril()\r\nB = torch.randn(100, 1)\r\nX = torch.gesv(B, A)[0]\r\nX_ = torch.trtrs(B, A, True)[0]\r\nX__ = torch.potrs(B, A, True)   # solution for (A.A_t)X = B\r\nprint(\"gesv error: \", torch.dist(A.matmul(X), B))\r\nprint(\"trtrs error: \", torch.dist(A.matmul(X_), B))\r\nprint(\"potrs error: \", torch.dist(A.matmul(A.t()).matmul(X__), B))\r\n```\r\nOutput\r\n```\r\ngesv error:  25.122344970703125\r\ntrtrs error:  3783.712890625\r\npotrs error:  10534862.0\r\n```"}