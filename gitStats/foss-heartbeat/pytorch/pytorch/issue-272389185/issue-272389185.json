{"url": "https://api.github.com/repos/pytorch/pytorch/issues/3580", "repository_url": "https://api.github.com/repos/pytorch/pytorch", "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/3580/labels{/name}", "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/3580/comments", "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/3580/events", "html_url": "https://github.com/pytorch/pytorch/issues/3580", "id": 272389185, "node_id": "MDU6SXNzdWUyNzIzODkxODU=", "number": 3580, "title": "[Feature Request] Make \"forward\" handle large inputs in batches", "user": {"login": "MaigoAkisame", "id": 6993299, "node_id": "MDQ6VXNlcjY5OTMyOTk=", "avatar_url": "https://avatars2.githubusercontent.com/u/6993299?v=4", "gravatar_id": "", "url": "https://api.github.com/users/MaigoAkisame", "html_url": "https://github.com/MaigoAkisame", "followers_url": "https://api.github.com/users/MaigoAkisame/followers", "following_url": "https://api.github.com/users/MaigoAkisame/following{/other_user}", "gists_url": "https://api.github.com/users/MaigoAkisame/gists{/gist_id}", "starred_url": "https://api.github.com/users/MaigoAkisame/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/MaigoAkisame/subscriptions", "organizations_url": "https://api.github.com/users/MaigoAkisame/orgs", "repos_url": "https://api.github.com/users/MaigoAkisame/repos", "events_url": "https://api.github.com/users/MaigoAkisame/events{/privacy}", "received_events_url": "https://api.github.com/users/MaigoAkisame/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2017-11-08T23:38:01Z", "updated_at": "2017-11-09T08:24:57Z", "closed_at": "2017-11-09T08:24:57Z", "author_association": "NONE", "body_html": "<p>Keras has this nice \"<a href=\"https://keras.io/models/model/#predict\" rel=\"nofollow\">model.predict</a>\" function which runs the forward pass on the input in batches. So I can feed a large data tensor (e.g. the entire test set) into a model and get the predictions in one function call.</p>\n<p>It would be nice if PyTorch models could do the same. For example, if a model has only one input and one output, the \"predict\" function could be implemented as follows:</p>\n<pre><code>def predict(self, x, batch_size = 32):\n    output = []\n    for i in range(0, len(x), batch_size):\n        output.append(self.forward(x[i : i + batch_size]))\n    return torch.cat(output)\n</code></pre>\n<p>The code will be a little more complex if there are multiple inputs or outputs.</p>", "body_text": "Keras has this nice \"model.predict\" function which runs the forward pass on the input in batches. So I can feed a large data tensor (e.g. the entire test set) into a model and get the predictions in one function call.\nIt would be nice if PyTorch models could do the same. For example, if a model has only one input and one output, the \"predict\" function could be implemented as follows:\ndef predict(self, x, batch_size = 32):\n    output = []\n    for i in range(0, len(x), batch_size):\n        output.append(self.forward(x[i : i + batch_size]))\n    return torch.cat(output)\n\nThe code will be a little more complex if there are multiple inputs or outputs.", "body": "Keras has this nice \"[model.predict](https://keras.io/models/model/#predict)\" function which runs the forward pass on the input in batches. So I can feed a large data tensor (e.g. the entire test set) into a model and get the predictions in one function call.\r\n\r\nIt would be nice if PyTorch models could do the same. For example, if a model has only one input and one output, the \"predict\" function could be implemented as follows:\r\n\r\n    def predict(self, x, batch_size = 32):\r\n        output = []\r\n        for i in range(0, len(x), batch_size):\r\n            output.append(self.forward(x[i : i + batch_size]))\r\n        return torch.cat(output)\r\n\r\nThe code will be a little more complex if there are multiple inputs or outputs."}