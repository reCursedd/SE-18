{"url": "https://api.github.com/repos/pytorch/pytorch/issues/819", "repository_url": "https://api.github.com/repos/pytorch/pytorch", "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/819/labels{/name}", "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/819/comments", "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/819/events", "html_url": "https://github.com/pytorch/pytorch/issues/819", "id": 209391934, "node_id": "MDU6SXNzdWUyMDkzOTE5MzQ=", "number": 819, "title": "Error occurs when calling torch.save() in Python2.7", "user": {"login": "Response777", "id": 15152165, "node_id": "MDQ6VXNlcjE1MTUyMTY1", "avatar_url": "https://avatars0.githubusercontent.com/u/15152165?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Response777", "html_url": "https://github.com/Response777", "followers_url": "https://api.github.com/users/Response777/followers", "following_url": "https://api.github.com/users/Response777/following{/other_user}", "gists_url": "https://api.github.com/users/Response777/gists{/gist_id}", "starred_url": "https://api.github.com/users/Response777/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Response777/subscriptions", "organizations_url": "https://api.github.com/users/Response777/orgs", "repos_url": "https://api.github.com/users/Response777/repos", "events_url": "https://api.github.com/users/Response777/events{/privacy}", "received_events_url": "https://api.github.com/users/Response777/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 424131847, "node_id": "MDU6TGFiZWw0MjQxMzE4NDc=", "url": "https://api.github.com/repos/pytorch/pytorch/labels/bug", "name": "bug", "color": "b60205", "default": true}, {"id": 443484135, "node_id": "MDU6TGFiZWw0NDM0ODQxMzU=", "url": "https://api.github.com/repos/pytorch/pytorch/labels/high%20priority", "name": "high priority", "color": "F22613", "default": false}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2017-02-22T09:07:18Z", "updated_at": "2017-02-22T21:30:07Z", "closed_at": "2017-02-22T21:30:07Z", "author_association": "NONE", "body_html": "<p>My codes break when calling <code>torch.save()</code> with <code>AttributeError: 'unicode' object has no attribute 'tell'</code></p>\n<p>Here are the error logs.</p>\n<pre><code>print(model)\n</code></pre>\n<pre><code>RNN (\n  (i2h): Linear (214 -&gt; 128)\n  (i2o): Linear (214 -&gt; 19)\n  (softmax): Softmax ()\n)\n</code></pre>\n<pre><code>torch.save(obj = model, f ='./models/RNN.pth')\n</code></pre>\n<pre><code>AttributeErrorTraceback (most recent call last)\n&lt;ipython-input-32-5838882c81ba&gt; in &lt;module&gt;()\n----&gt; 1 torch.save(obj = model, f ='./models/RNN.pth')\n\n/home/response777/.local/lib/python2.7/site-packages/torch/serialization.pyc in save(obj, f, pickle_module, pickle_protocol)\n    121         f = open(f, \"wb\")\n    122     try:\n--&gt; 123         return _save(obj, f, pickle_module, pickle_protocol)\n    124     finally:\n    125         if new_fd:\n\n/home/response777/.local/lib/python2.7/site-packages/torch/serialization.pyc in _save(obj, f, pickle_module, pickle_protocol)\n    212         pickle_module.dump(sys_info, f, protocol=pickle_protocol)\n    213 \n--&gt; 214     with closing(tarfile.open(fileobj=f, mode='w:', format=tarfile.PAX_FORMAT)) as tar:\n    215         _add_to_tar(save_sys_info, tar, 'sys_info')\n    216         _add_to_tar(pickle_objects, tar, 'pickle')\n\n/usr/lib/python2.7/tarfile.pyc in open(cls, name, mode, fileobj, bufsize, **kwargs)\n   1676             else:\n   1677                 raise CompressionError(\"unknown compression type %r\" % comptype)\n-&gt; 1678             return func(name, filemode, fileobj, **kwargs)\n   1679 \n   1680         elif \"|\" in mode:\n\n/usr/lib/python2.7/tarfile.pyc in taropen(cls, name, mode, fileobj, **kwargs)\n   1703         if mode not in (\"r\", \"a\", \"w\"):\n   1704             raise ValueError(\"mode must be 'r', 'a' or 'w'\")\n-&gt; 1705         return cls(name, mode, fileobj, **kwargs)\n   1706 \n   1707     @classmethod\n\n/usr/lib/python2.7/tarfile.pyc in __init__(self, name, mode, fileobj, format, tarinfo, dereference, ignore_zeros, encoding, errors, pax_headers, debug, errorlevel)\n   1564         self.members = []       # list of members as TarInfo objects\n   1565         self._loaded = False    # flag if all members have been read\n-&gt; 1566         self.offset = self.fileobj.tell()\n   1567                                 # current position in the archive file\n   1568         self.inodes = {}        # dictionary caching the inodes of\n\nAttributeError: 'unicode' object has no attribute 'tell'\n</code></pre>", "body_text": "My codes break when calling torch.save() with AttributeError: 'unicode' object has no attribute 'tell'\nHere are the error logs.\nprint(model)\n\nRNN (\n  (i2h): Linear (214 -> 128)\n  (i2o): Linear (214 -> 19)\n  (softmax): Softmax ()\n)\n\ntorch.save(obj = model, f ='./models/RNN.pth')\n\nAttributeErrorTraceback (most recent call last)\n<ipython-input-32-5838882c81ba> in <module>()\n----> 1 torch.save(obj = model, f ='./models/RNN.pth')\n\n/home/response777/.local/lib/python2.7/site-packages/torch/serialization.pyc in save(obj, f, pickle_module, pickle_protocol)\n    121         f = open(f, \"wb\")\n    122     try:\n--> 123         return _save(obj, f, pickle_module, pickle_protocol)\n    124     finally:\n    125         if new_fd:\n\n/home/response777/.local/lib/python2.7/site-packages/torch/serialization.pyc in _save(obj, f, pickle_module, pickle_protocol)\n    212         pickle_module.dump(sys_info, f, protocol=pickle_protocol)\n    213 \n--> 214     with closing(tarfile.open(fileobj=f, mode='w:', format=tarfile.PAX_FORMAT)) as tar:\n    215         _add_to_tar(save_sys_info, tar, 'sys_info')\n    216         _add_to_tar(pickle_objects, tar, 'pickle')\n\n/usr/lib/python2.7/tarfile.pyc in open(cls, name, mode, fileobj, bufsize, **kwargs)\n   1676             else:\n   1677                 raise CompressionError(\"unknown compression type %r\" % comptype)\n-> 1678             return func(name, filemode, fileobj, **kwargs)\n   1679 \n   1680         elif \"|\" in mode:\n\n/usr/lib/python2.7/tarfile.pyc in taropen(cls, name, mode, fileobj, **kwargs)\n   1703         if mode not in (\"r\", \"a\", \"w\"):\n   1704             raise ValueError(\"mode must be 'r', 'a' or 'w'\")\n-> 1705         return cls(name, mode, fileobj, **kwargs)\n   1706 \n   1707     @classmethod\n\n/usr/lib/python2.7/tarfile.pyc in __init__(self, name, mode, fileobj, format, tarinfo, dereference, ignore_zeros, encoding, errors, pax_headers, debug, errorlevel)\n   1564         self.members = []       # list of members as TarInfo objects\n   1565         self._loaded = False    # flag if all members have been read\n-> 1566         self.offset = self.fileobj.tell()\n   1567                                 # current position in the archive file\n   1568         self.inodes = {}        # dictionary caching the inodes of\n\nAttributeError: 'unicode' object has no attribute 'tell'", "body": "My codes break when calling `torch.save()` with `AttributeError: 'unicode' object has no attribute 'tell'`\r\n\r\nHere are the error logs.\r\n\r\n```\r\nprint(model)\r\n```\r\n\r\n```\r\nRNN (\r\n  (i2h): Linear (214 -> 128)\r\n  (i2o): Linear (214 -> 19)\r\n  (softmax): Softmax ()\r\n)\r\n```\r\n\r\n```\r\ntorch.save(obj = model, f ='./models/RNN.pth')\r\n```\r\n\r\n```\r\nAttributeErrorTraceback (most recent call last)\r\n<ipython-input-32-5838882c81ba> in <module>()\r\n----> 1 torch.save(obj = model, f ='./models/RNN.pth')\r\n\r\n/home/response777/.local/lib/python2.7/site-packages/torch/serialization.pyc in save(obj, f, pickle_module, pickle_protocol)\r\n    121         f = open(f, \"wb\")\r\n    122     try:\r\n--> 123         return _save(obj, f, pickle_module, pickle_protocol)\r\n    124     finally:\r\n    125         if new_fd:\r\n\r\n/home/response777/.local/lib/python2.7/site-packages/torch/serialization.pyc in _save(obj, f, pickle_module, pickle_protocol)\r\n    212         pickle_module.dump(sys_info, f, protocol=pickle_protocol)\r\n    213 \r\n--> 214     with closing(tarfile.open(fileobj=f, mode='w:', format=tarfile.PAX_FORMAT)) as tar:\r\n    215         _add_to_tar(save_sys_info, tar, 'sys_info')\r\n    216         _add_to_tar(pickle_objects, tar, 'pickle')\r\n\r\n/usr/lib/python2.7/tarfile.pyc in open(cls, name, mode, fileobj, bufsize, **kwargs)\r\n   1676             else:\r\n   1677                 raise CompressionError(\"unknown compression type %r\" % comptype)\r\n-> 1678             return func(name, filemode, fileobj, **kwargs)\r\n   1679 \r\n   1680         elif \"|\" in mode:\r\n\r\n/usr/lib/python2.7/tarfile.pyc in taropen(cls, name, mode, fileobj, **kwargs)\r\n   1703         if mode not in (\"r\", \"a\", \"w\"):\r\n   1704             raise ValueError(\"mode must be 'r', 'a' or 'w'\")\r\n-> 1705         return cls(name, mode, fileobj, **kwargs)\r\n   1706 \r\n   1707     @classmethod\r\n\r\n/usr/lib/python2.7/tarfile.pyc in __init__(self, name, mode, fileobj, format, tarinfo, dereference, ignore_zeros, encoding, errors, pax_headers, debug, errorlevel)\r\n   1564         self.members = []       # list of members as TarInfo objects\r\n   1565         self._loaded = False    # flag if all members have been read\r\n-> 1566         self.offset = self.fileobj.tell()\r\n   1567                                 # current position in the archive file\r\n   1568         self.inodes = {}        # dictionary caching the inodes of\r\n\r\nAttributeError: 'unicode' object has no attribute 'tell'\r\n```"}