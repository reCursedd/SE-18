{"url": "https://api.github.com/repos/pytorch/pytorch/pulls/2106", "id": 130670056, "node_id": "MDExOlB1bGxSZXF1ZXN0MTMwNjcwMDU2", "html_url": "https://github.com/pytorch/pytorch/pull/2106", "diff_url": "https://github.com/pytorch/pytorch/pull/2106.diff", "patch_url": "https://github.com/pytorch/pytorch/pull/2106.patch", "issue_url": "https://api.github.com/repos/pytorch/pytorch/issues/2106", "number": 2106, "state": "closed", "locked": false, "title": "Improve double backwards support for NN modules", "user": {"login": "gchanan", "id": 3768583, "node_id": "MDQ6VXNlcjM3Njg1ODM=", "avatar_url": "https://avatars2.githubusercontent.com/u/3768583?v=4", "gravatar_id": "", "url": "https://api.github.com/users/gchanan", "html_url": "https://github.com/gchanan", "followers_url": "https://api.github.com/users/gchanan/followers", "following_url": "https://api.github.com/users/gchanan/following{/other_user}", "gists_url": "https://api.github.com/users/gchanan/gists{/gist_id}", "starred_url": "https://api.github.com/users/gchanan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/gchanan/subscriptions", "organizations_url": "https://api.github.com/users/gchanan/orgs", "repos_url": "https://api.github.com/users/gchanan/repos", "events_url": "https://api.github.com/users/gchanan/events{/privacy}", "received_events_url": "https://api.github.com/users/gchanan/received_events", "type": "User", "site_admin": false}, "body": "This PR makes a number of changes related to double backwards support for NN modules (this is not in the order of the commits):\r\n1) Adds gradgradchecks for NN modules by default.  These can be turned off by setting check_gradgrad=False in the test definition.  I went through the existing tests and set the failing ones to False; this was (almost) purely empirical, i.e. I didn't spend time figuring out why they were failing.\r\n2) Adds testing of double backwards with respect to the grad_output.  This caught an issue with advanced indexing that is now fixed.\r\n3) Implemented PReLU double backwards.  This was done in two ways:\r\n  a) As a standard backwards function in terms of autograd ops  (i.e. it doesn't call the THCUNN backwards)\r\n  b) As two autograd functions, where backwards calls PReLUBackwards.apply, PReLUBackwards.forward calls the THCUNN backwards, and PReLUBackwards.backward implements double backwards in terms of autograd ops.  The idea here is to support double backwards without slowing down the first backwards.  Benchmarking showed this is useful:\r\nI ran (32,8,512,512) PReLU 5 times through single and double backwards (anything more required GC to not OOM) on an M4:\r\n\r\n| Version | Single Backward | Double Backwards |\r\n| ------- | ----------------- | ------------------- |\r\n| Original                 | 0.07078 | Not supported |\r\n| Pure Autograd      | 0.18315  | 0.13091           |\r\n| Fn/Fn Backwards | 0.07086 | 0.16417           |\r\n\r\nSo, there's not really any overhead on the first backwards to support double backwards.  I'm a bit surprised that the pure autograd is so fast on double backwards, but maybe I'm missing some optimization in my implementation.\r\n4) auto-nn Functions and Criterions are now generated as \"new-style\" functions in the Fn/FnBackwards style.  By default double backwards just throws an error; HardTanh is implemented as a Function example and L1Loss as a Criterion example.\r\n5) Implemented SoftSign double backwards", "created_at": "2017-07-14T20:39:50Z", "updated_at": "2018-11-23T15:34:14Z", "closed_at": "2017-07-25T02:07:26Z", "merged_at": "2017-07-25T02:07:26Z", "merge_commit_sha": "bcea678e7b1894a0807120ab0e20d1ef4db3fbc0", "assignee": null, "assignees": [], "requested_reviewers": [], "requested_teams": [], "labels": [], "milestone": null, "commits_url": "https://api.github.com/repos/pytorch/pytorch/pulls/2106/commits", "review_comments_url": "https://api.github.com/repos/pytorch/pytorch/pulls/2106/comments", "review_comment_url": "https://api.github.com/repos/pytorch/pytorch/pulls/comments{/number}", "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/2106/comments", "statuses_url": "https://api.github.com/repos/pytorch/pytorch/statuses/62a071357fd6d39b8be2fa6472c27121dfe28e96", "head": {"label": "gchanan:autogradgradm_rebase", "ref": "autogradgradm_rebase", "sha": "62a071357fd6d39b8be2fa6472c27121dfe28e96", "user": {"login": "gchanan", "id": 3768583, "node_id": "MDQ6VXNlcjM3Njg1ODM=", "avatar_url": "https://avatars2.githubusercontent.com/u/3768583?v=4", "gravatar_id": "", "url": "https://api.github.com/users/gchanan", "html_url": "https://github.com/gchanan", "followers_url": "https://api.github.com/users/gchanan/followers", "following_url": "https://api.github.com/users/gchanan/following{/other_user}", "gists_url": "https://api.github.com/users/gchanan/gists{/gist_id}", "starred_url": "https://api.github.com/users/gchanan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/gchanan/subscriptions", "organizations_url": "https://api.github.com/users/gchanan/orgs", "repos_url": "https://api.github.com/users/gchanan/repos", "events_url": "https://api.github.com/users/gchanan/events{/privacy}", "received_events_url": "https://api.github.com/users/gchanan/received_events", "type": "User", "site_admin": false}, "repo": {"id": 88906627, "node_id": "MDEwOlJlcG9zaXRvcnk4ODkwNjYyNw==", "name": "pytorch", "full_name": "gchanan/pytorch", "private": false, "owner": {"login": "gchanan", "id": 3768583, "node_id": "MDQ6VXNlcjM3Njg1ODM=", "avatar_url": "https://avatars2.githubusercontent.com/u/3768583?v=4", "gravatar_id": "", "url": "https://api.github.com/users/gchanan", "html_url": "https://github.com/gchanan", "followers_url": "https://api.github.com/users/gchanan/followers", "following_url": "https://api.github.com/users/gchanan/following{/other_user}", "gists_url": "https://api.github.com/users/gchanan/gists{/gist_id}", "starred_url": "https://api.github.com/users/gchanan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/gchanan/subscriptions", "organizations_url": "https://api.github.com/users/gchanan/orgs", "repos_url": "https://api.github.com/users/gchanan/repos", "events_url": "https://api.github.com/users/gchanan/events{/privacy}", "received_events_url": "https://api.github.com/users/gchanan/received_events", "type": "User", "site_admin": false}, "html_url": "https://github.com/gchanan/pytorch", "description": "Tensors and Dynamic neural networks in Python  with strong GPU acceleration", "fork": true, "url": "https://api.github.com/repos/gchanan/pytorch", "forks_url": "https://api.github.com/repos/gchanan/pytorch/forks", "keys_url": "https://api.github.com/repos/gchanan/pytorch/keys{/key_id}", "collaborators_url": "https://api.github.com/repos/gchanan/pytorch/collaborators{/collaborator}", "teams_url": "https://api.github.com/repos/gchanan/pytorch/teams", "hooks_url": "https://api.github.com/repos/gchanan/pytorch/hooks", "issue_events_url": "https://api.github.com/repos/gchanan/pytorch/issues/events{/number}", "events_url": "https://api.github.com/repos/gchanan/pytorch/events", "assignees_url": "https://api.github.com/repos/gchanan/pytorch/assignees{/user}", "branches_url": "https://api.github.com/repos/gchanan/pytorch/branches{/branch}", "tags_url": "https://api.github.com/repos/gchanan/pytorch/tags", "blobs_url": "https://api.github.com/repos/gchanan/pytorch/git/blobs{/sha}", "git_tags_url": "https://api.github.com/repos/gchanan/pytorch/git/tags{/sha}", "git_refs_url": "https://api.github.com/repos/gchanan/pytorch/git/refs{/sha}", "trees_url": "https://api.github.com/repos/gchanan/pytorch/git/trees{/sha}", "statuses_url": "https://api.github.com/repos/gchanan/pytorch/statuses/{sha}", "languages_url": "https://api.github.com/repos/gchanan/pytorch/languages", "stargazers_url": "https://api.github.com/repos/gchanan/pytorch/stargazers", "contributors_url": "https://api.github.com/repos/gchanan/pytorch/contributors", "subscribers_url": "https://api.github.com/repos/gchanan/pytorch/subscribers", "subscription_url": "https://api.github.com/repos/gchanan/pytorch/subscription", "commits_url": "https://api.github.com/repos/gchanan/pytorch/commits{/sha}", "git_commits_url": "https://api.github.com/repos/gchanan/pytorch/git/commits{/sha}", "comments_url": "https://api.github.com/repos/gchanan/pytorch/comments{/number}", "issue_comment_url": "https://api.github.com/repos/gchanan/pytorch/issues/comments{/number}", "contents_url": "https://api.github.com/repos/gchanan/pytorch/contents/{+path}", "compare_url": "https://api.github.com/repos/gchanan/pytorch/compare/{base}...{head}", "merges_url": "https://api.github.com/repos/gchanan/pytorch/merges", "archive_url": "https://api.github.com/repos/gchanan/pytorch/{archive_format}{/ref}", "downloads_url": "https://api.github.com/repos/gchanan/pytorch/downloads", "issues_url": "https://api.github.com/repos/gchanan/pytorch/issues{/number}", "pulls_url": "https://api.github.com/repos/gchanan/pytorch/pulls{/number}", "milestones_url": "https://api.github.com/repos/gchanan/pytorch/milestones{/number}", "notifications_url": "https://api.github.com/repos/gchanan/pytorch/notifications{?since,all,participating}", "labels_url": "https://api.github.com/repos/gchanan/pytorch/labels{/name}", "releases_url": "https://api.github.com/repos/gchanan/pytorch/releases{/id}", "deployments_url": "https://api.github.com/repos/gchanan/pytorch/deployments", "created_at": "2017-04-20T20:14:16Z", "updated_at": "2018-10-19T12:21:28Z", "pushed_at": "2018-11-21T22:07:06Z", "git_url": "git://github.com/gchanan/pytorch.git", "ssh_url": "git@github.com:gchanan/pytorch.git", "clone_url": "https://github.com/gchanan/pytorch.git", "svn_url": "https://github.com/gchanan/pytorch", "homepage": "http://pytorch.org", "size": 94092, "stargazers_count": 4, "watchers_count": 4, "language": "Python", "has_issues": true, "has_projects": true, "has_downloads": true, "has_wiki": true, "has_pages": false, "forks_count": 0, "mirror_url": null, "archived": false, "open_issues_count": 1, "license": {"key": "other", "name": "Other", "spdx_id": "NOASSERTION", "url": null, "node_id": "MDc6TGljZW5zZTA="}, "forks": 0, "open_issues": 1, "watchers": 4, "default_branch": "master"}}, "base": {"label": "pytorch:master", "ref": "master", "sha": "4a4d8841e676769310fdaac8d33a23fc1081af10", "user": {"login": "pytorch", "id": 21003710, "node_id": "MDEyOk9yZ2FuaXphdGlvbjIxMDAzNzEw", "avatar_url": "https://avatars3.githubusercontent.com/u/21003710?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pytorch", "html_url": "https://github.com/pytorch", "followers_url": "https://api.github.com/users/pytorch/followers", "following_url": "https://api.github.com/users/pytorch/following{/other_user}", "gists_url": "https://api.github.com/users/pytorch/gists{/gist_id}", "starred_url": "https://api.github.com/users/pytorch/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pytorch/subscriptions", "organizations_url": "https://api.github.com/users/pytorch/orgs", "repos_url": "https://api.github.com/users/pytorch/repos", "events_url": "https://api.github.com/users/pytorch/events{/privacy}", "received_events_url": "https://api.github.com/users/pytorch/received_events", "type": "Organization", "site_admin": false}, "repo": {"id": 65600975, "node_id": "MDEwOlJlcG9zaXRvcnk2NTYwMDk3NQ==", "name": "pytorch", "full_name": "pytorch/pytorch", "private": false, "owner": {"login": "pytorch", "id": 21003710, "node_id": "MDEyOk9yZ2FuaXphdGlvbjIxMDAzNzEw", "avatar_url": "https://avatars3.githubusercontent.com/u/21003710?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pytorch", "html_url": "https://github.com/pytorch", "followers_url": "https://api.github.com/users/pytorch/followers", "following_url": "https://api.github.com/users/pytorch/following{/other_user}", "gists_url": "https://api.github.com/users/pytorch/gists{/gist_id}", "starred_url": "https://api.github.com/users/pytorch/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pytorch/subscriptions", "organizations_url": "https://api.github.com/users/pytorch/orgs", "repos_url": "https://api.github.com/users/pytorch/repos", "events_url": "https://api.github.com/users/pytorch/events{/privacy}", "received_events_url": "https://api.github.com/users/pytorch/received_events", "type": "Organization", "site_admin": false}, "html_url": "https://github.com/pytorch/pytorch", "description": "Tensors and Dynamic neural networks in Python  with strong GPU acceleration", "fork": false, "url": "https://api.github.com/repos/pytorch/pytorch", "forks_url": "https://api.github.com/repos/pytorch/pytorch/forks", "keys_url": "https://api.github.com/repos/pytorch/pytorch/keys{/key_id}", "collaborators_url": "https://api.github.com/repos/pytorch/pytorch/collaborators{/collaborator}", "teams_url": "https://api.github.com/repos/pytorch/pytorch/teams", "hooks_url": "https://api.github.com/repos/pytorch/pytorch/hooks", "issue_events_url": "https://api.github.com/repos/pytorch/pytorch/issues/events{/number}", "events_url": "https://api.github.com/repos/pytorch/pytorch/events", "assignees_url": "https://api.github.com/repos/pytorch/pytorch/assignees{/user}", "branches_url": "https://api.github.com/repos/pytorch/pytorch/branches{/branch}", "tags_url": "https://api.github.com/repos/pytorch/pytorch/tags", "blobs_url": "https://api.github.com/repos/pytorch/pytorch/git/blobs{/sha}", "git_tags_url": "https://api.github.com/repos/pytorch/pytorch/git/tags{/sha}", "git_refs_url": "https://api.github.com/repos/pytorch/pytorch/git/refs{/sha}", "trees_url": "https://api.github.com/repos/pytorch/pytorch/git/trees{/sha}", "statuses_url": "https://api.github.com/repos/pytorch/pytorch/statuses/{sha}", "languages_url": "https://api.github.com/repos/pytorch/pytorch/languages", "stargazers_url": "https://api.github.com/repos/pytorch/pytorch/stargazers", "contributors_url": "https://api.github.com/repos/pytorch/pytorch/contributors", "subscribers_url": "https://api.github.com/repos/pytorch/pytorch/subscribers", "subscription_url": "https://api.github.com/repos/pytorch/pytorch/subscription", "commits_url": "https://api.github.com/repos/pytorch/pytorch/commits{/sha}", "git_commits_url": "https://api.github.com/repos/pytorch/pytorch/git/commits{/sha}", "comments_url": "https://api.github.com/repos/pytorch/pytorch/comments{/number}", "issue_comment_url": "https://api.github.com/repos/pytorch/pytorch/issues/comments{/number}", "contents_url": "https://api.github.com/repos/pytorch/pytorch/contents/{+path}", "compare_url": "https://api.github.com/repos/pytorch/pytorch/compare/{base}...{head}", "merges_url": "https://api.github.com/repos/pytorch/pytorch/merges", "archive_url": "https://api.github.com/repos/pytorch/pytorch/{archive_format}{/ref}", "downloads_url": "https://api.github.com/repos/pytorch/pytorch/downloads", "issues_url": "https://api.github.com/repos/pytorch/pytorch/issues{/number}", "pulls_url": "https://api.github.com/repos/pytorch/pytorch/pulls{/number}", "milestones_url": "https://api.github.com/repos/pytorch/pytorch/milestones{/number}", "notifications_url": "https://api.github.com/repos/pytorch/pytorch/notifications{?since,all,participating}", "labels_url": "https://api.github.com/repos/pytorch/pytorch/labels{/name}", "releases_url": "https://api.github.com/repos/pytorch/pytorch/releases{/id}", "deployments_url": "https://api.github.com/repos/pytorch/pytorch/deployments", "created_at": "2016-08-13T05:26:41Z", "updated_at": "2018-11-24T12:35:43Z", "pushed_at": "2018-11-24T12:42:01Z", "git_url": "git://github.com/pytorch/pytorch.git", "ssh_url": "git@github.com:pytorch/pytorch.git", "clone_url": "https://github.com/pytorch/pytorch.git", "svn_url": "https://github.com/pytorch/pytorch", "homepage": "http://pytorch.org", "size": 89656, "stargazers_count": 21589, "watchers_count": 21589, "language": "C++", "has_issues": true, "has_projects": true, "has_downloads": true, "has_wiki": true, "has_pages": false, "forks_count": 5153, "mirror_url": null, "archived": false, "open_issues_count": 2196, "license": {"key": "other", "name": "Other", "spdx_id": "NOASSERTION", "url": null, "node_id": "MDc6TGljZW5zZTA="}, "forks": 5153, "open_issues": 2196, "watchers": 21589, "default_branch": "master"}}, "_links": {"self": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/2106"}, "html": {"href": "https://github.com/pytorch/pytorch/pull/2106"}, "issue": {"href": "https://api.github.com/repos/pytorch/pytorch/issues/2106"}, "comments": {"href": "https://api.github.com/repos/pytorch/pytorch/issues/2106/comments"}, "review_comments": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/2106/comments"}, "review_comment": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/comments{/number}"}, "commits": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/2106/commits"}, "statuses": {"href": "https://api.github.com/repos/pytorch/pytorch/statuses/62a071357fd6d39b8be2fa6472c27121dfe28e96"}}, "author_association": "CONTRIBUTOR", "body_html": "<p>This PR makes a number of changes related to double backwards support for NN modules (this is not in the order of the commits):</p>\n<ol>\n<li>Adds gradgradchecks for NN modules by default.  These can be turned off by setting check_gradgrad=False in the test definition.  I went through the existing tests and set the failing ones to False; this was (almost) purely empirical, i.e. I didn't spend time figuring out why they were failing.</li>\n<li>Adds testing of double backwards with respect to the grad_output.  This caught an issue with advanced indexing that is now fixed.</li>\n<li>Implemented PReLU double backwards.  This was done in two ways:<br>\na) As a standard backwards function in terms of autograd ops  (i.e. it doesn't call the THCUNN backwards)<br>\nb) As two autograd functions, where backwards calls PReLUBackwards.apply, PReLUBackwards.forward calls the THCUNN backwards, and PReLUBackwards.backward implements double backwards in terms of autograd ops.  The idea here is to support double backwards without slowing down the first backwards.  Benchmarking showed this is useful:<br>\nI ran (32,8,512,512) PReLU 5 times through single and double backwards (anything more required GC to not OOM) on an M4:</li>\n</ol>\n<table>\n<thead>\n<tr>\n<th>Version</th>\n<th>Single Backward</th>\n<th>Double Backwards</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Original</td>\n<td>0.07078</td>\n<td>Not supported</td>\n</tr>\n<tr>\n<td>Pure Autograd</td>\n<td>0.18315</td>\n<td>0.13091</td>\n</tr>\n<tr>\n<td>Fn/Fn Backwards</td>\n<td>0.07086</td>\n<td>0.16417</td>\n</tr>\n</tbody>\n</table>\n<p>So, there's not really any overhead on the first backwards to support double backwards.  I'm a bit surprised that the pure autograd is so fast on double backwards, but maybe I'm missing some optimization in my implementation.<br>\n4) auto-nn Functions and Criterions are now generated as \"new-style\" functions in the Fn/FnBackwards style.  By default double backwards just throws an error; HardTanh is implemented as a Function example and L1Loss as a Criterion example.<br>\n5) Implemented SoftSign double backwards</p>", "body_text": "This PR makes a number of changes related to double backwards support for NN modules (this is not in the order of the commits):\n\nAdds gradgradchecks for NN modules by default.  These can be turned off by setting check_gradgrad=False in the test definition.  I went through the existing tests and set the failing ones to False; this was (almost) purely empirical, i.e. I didn't spend time figuring out why they were failing.\nAdds testing of double backwards with respect to the grad_output.  This caught an issue with advanced indexing that is now fixed.\nImplemented PReLU double backwards.  This was done in two ways:\na) As a standard backwards function in terms of autograd ops  (i.e. it doesn't call the THCUNN backwards)\nb) As two autograd functions, where backwards calls PReLUBackwards.apply, PReLUBackwards.forward calls the THCUNN backwards, and PReLUBackwards.backward implements double backwards in terms of autograd ops.  The idea here is to support double backwards without slowing down the first backwards.  Benchmarking showed this is useful:\nI ran (32,8,512,512) PReLU 5 times through single and double backwards (anything more required GC to not OOM) on an M4:\n\n\n\n\nVersion\nSingle Backward\nDouble Backwards\n\n\n\n\nOriginal\n0.07078\nNot supported\n\n\nPure Autograd\n0.18315\n0.13091\n\n\nFn/Fn Backwards\n0.07086\n0.16417\n\n\n\nSo, there's not really any overhead on the first backwards to support double backwards.  I'm a bit surprised that the pure autograd is so fast on double backwards, but maybe I'm missing some optimization in my implementation.\n4) auto-nn Functions and Criterions are now generated as \"new-style\" functions in the Fn/FnBackwards style.  By default double backwards just throws an error; HardTanh is implemented as a Function example and L1Loss as a Criterion example.\n5) Implemented SoftSign double backwards", "merged": true, "mergeable": null, "rebaseable": null, "mergeable_state": "unknown", "merged_by": {"login": "soumith", "id": 1310570, "node_id": "MDQ6VXNlcjEzMTA1NzA=", "avatar_url": "https://avatars0.githubusercontent.com/u/1310570?v=4", "gravatar_id": "", "url": "https://api.github.com/users/soumith", "html_url": "https://github.com/soumith", "followers_url": "https://api.github.com/users/soumith/followers", "following_url": "https://api.github.com/users/soumith/following{/other_user}", "gists_url": "https://api.github.com/users/soumith/gists{/gist_id}", "starred_url": "https://api.github.com/users/soumith/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/soumith/subscriptions", "organizations_url": "https://api.github.com/users/soumith/orgs", "repos_url": "https://api.github.com/users/soumith/repos", "events_url": "https://api.github.com/users/soumith/events{/privacy}", "received_events_url": "https://api.github.com/users/soumith/received_events", "type": "User", "site_admin": false}, "comments": 6, "review_comments": 25, "maintainer_can_modify": false, "commits": 26, "additions": 995, "deletions": 661, "changed_files": 13}