{"url": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/127562970", "pull_request_review_id": 50164066, "id": 127562970, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEyNzU2Mjk3MA==", "diff_hunk": "@@ -86,41 +109,101 @@ def has_argument(fn, name):\n         buffers['acc_grad_parameters'] = _find_buffers(\n             acc_grad_parameters.arguments[3:], ignored_args)\n \n-    # This and __init__ assume that only the last argument can be\n+    # This assumes that only the last argument can be\n     # an inplace flag\n     is_inplace = update_output.arguments[-1].name == 'inplace'\n \n-    def __init__(self, *args):\n-        if is_inplace:\n-            InplaceFunction.__init__(self, args[-1])\n-        else:\n-            Function.__init__(self)\n-        self.additional_args = list(args)\n-\n-    def _initialize_buffers(self, fn_name):\n-        additional_args = self.additional_args\n+    @staticmethod\n+    def _initialize_buffers(ctx, fn_name):\n+        additional_args = ctx.additional_args\n         for idx, name in buffers[fn_name]:\n             # TODO: some buffers are necessary only for update output and can be\n             # freed right afterwards\n-            buffer = self.buffers[name]\n+            buffer = ctx.buffers[name]\n             additional_args = additional_args[:idx] + [buffer] + additional_args[idx:]\n         return tuple(additional_args)\n \n-    def forward(self, input, *params):\n-        self._backend = type2backend[type(input)]\n+    @staticmethod\n+    def backward_cls_forward(ctx, input, grad_output, additional_args_ctx, backend_ctx, buffers_ctx, *params):", "path": "torch/nn/_functions/thnn/auto.py", "position": null, "original_position": 135, "commit_id": "62a071357fd6d39b8be2fa6472c27121dfe28e96", "original_commit_id": "2f20bcbc9f68564b0f6bedb8e91ca5427405e439", "user": {"login": "apaszke", "id": 4583066, "node_id": "MDQ6VXNlcjQ1ODMwNjY=", "avatar_url": "https://avatars3.githubusercontent.com/u/4583066?v=4", "gravatar_id": "", "url": "https://api.github.com/users/apaszke", "html_url": "https://github.com/apaszke", "followers_url": "https://api.github.com/users/apaszke/followers", "following_url": "https://api.github.com/users/apaszke/following{/other_user}", "gists_url": "https://api.github.com/users/apaszke/gists{/gist_id}", "starred_url": "https://api.github.com/users/apaszke/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/apaszke/subscriptions", "organizations_url": "https://api.github.com/users/apaszke/orgs", "repos_url": "https://api.github.com/users/apaszke/repos", "events_url": "https://api.github.com/users/apaszke/events{/privacy}", "received_events_url": "https://api.github.com/users/apaszke/received_events", "type": "User", "site_admin": false}, "body": "same as above", "created_at": "2017-07-14T22:45:17Z", "updated_at": "2018-11-23T15:34:07Z", "html_url": "https://github.com/pytorch/pytorch/pull/2106#discussion_r127562970", "pull_request_url": "https://api.github.com/repos/pytorch/pytorch/pulls/2106", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/127562970"}, "html": {"href": "https://github.com/pytorch/pytorch/pull/2106#discussion_r127562970"}, "pull_request": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/2106"}}, "body_html": "<p>same as above</p>", "body_text": "same as above"}