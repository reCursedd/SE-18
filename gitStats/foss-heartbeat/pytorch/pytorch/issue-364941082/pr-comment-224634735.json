{"url": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/224634735", "pull_request_review_id": 164053797, "id": 224634735, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIyNDYzNDczNQ==", "diff_hunk": "@@ -238,6 +238,36 @@ SparseTensor& resize_as_sparse_(SparseTensor& self, const SparseTensor& src) {\n   return self;\n }\n \n+SparseTensor dense_to_sparse(const Tensor& self){\n+  return dense_to_sparse(self, self.dim());\n+}\n+\n+SparseTensor dense_to_sparse(const Tensor& self, int64_t sparseDims){\n+  int64_t dims = self.dim();\n+  AT_CHECK(sparseDims > 0, \"sparseDims must be >0\");\n+  AT_CHECK(sparseDims <= dims, \n+    \"sparseDims must be less than or equal to self.dim()\");\n+  at::TensorOptions spO = self.type().toSparse().options();\n+  std::vector<int64_t> sizes = self.sizes().vec();\n+\n+  Tensor nz = self.nonzero().transpose(0, 1);\n+  LongTensor indices;\n+  if(sparseDims == dims){\n+    indices = nz.clone();\n+  }else{\n+    Tensor i = nz.narrow(0, 0, sparseDims);\n+    std::tie(indices, std::ignore) = _unique_dim(i, 1);\n+    indices = indices.clone();", "path": "aten/src/ATen/native/sparse/SparseTensor.cpp", "position": null, "original_position": 23, "commit_id": "65375b1cdf2b767f204cf72904f21111b4ee814d", "original_commit_id": "840624c6dd98991eb9d666fbf20a7e25fd49acab", "user": {"login": "weiyangfb", "id": 38509346, "node_id": "MDQ6VXNlcjM4NTA5MzQ2", "avatar_url": "https://avatars1.githubusercontent.com/u/38509346?v=4", "gravatar_id": "", "url": "https://api.github.com/users/weiyangfb", "html_url": "https://github.com/weiyangfb", "followers_url": "https://api.github.com/users/weiyangfb/followers", "following_url": "https://api.github.com/users/weiyangfb/following{/other_user}", "gists_url": "https://api.github.com/users/weiyangfb/gists{/gist_id}", "starred_url": "https://api.github.com/users/weiyangfb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/weiyangfb/subscriptions", "organizations_url": "https://api.github.com/users/weiyangfb/orgs", "repos_url": "https://api.github.com/users/weiyangfb/repos", "events_url": "https://api.github.com/users/weiyangfb/events{/privacy}", "received_events_url": "https://api.github.com/users/weiyangfb/received_events", "type": "User", "site_admin": false}, "body": "indices returned from `_unique_dim()` should be a copy already, why do you need an extra `clone` here?", "created_at": "2018-10-11T23:33:24Z", "updated_at": "2018-11-23T15:52:55Z", "html_url": "https://github.com/pytorch/pytorch/pull/12171#discussion_r224634735", "pull_request_url": "https://api.github.com/repos/pytorch/pytorch/pulls/12171", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/224634735"}, "html": {"href": "https://github.com/pytorch/pytorch/pull/12171#discussion_r224634735"}, "pull_request": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/12171"}}, "body_html": "<p>indices returned from <code>_unique_dim()</code> should be a copy already, why do you need an extra <code>clone</code> here?</p>", "body_text": "indices returned from _unique_dim() should be a copy already, why do you need an extra clone here?"}