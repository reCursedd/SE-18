{"url": "https://api.github.com/repos/pytorch/pytorch/issues/comments/398563238", "html_url": "https://github.com/pytorch/pytorch/issues/8583#issuecomment-398563238", "issue_url": "https://api.github.com/repos/pytorch/pytorch/issues/8583", "id": 398563238, "node_id": "MDEyOklzc3VlQ29tbWVudDM5ODU2MzIzOA==", "user": {"login": "Atcold", "id": 2119355, "node_id": "MDQ6VXNlcjIxMTkzNTU=", "avatar_url": "https://avatars2.githubusercontent.com/u/2119355?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Atcold", "html_url": "https://github.com/Atcold", "followers_url": "https://api.github.com/users/Atcold/followers", "following_url": "https://api.github.com/users/Atcold/following{/other_user}", "gists_url": "https://api.github.com/users/Atcold/gists{/gist_id}", "starred_url": "https://api.github.com/users/Atcold/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Atcold/subscriptions", "organizations_url": "https://api.github.com/users/Atcold/orgs", "repos_url": "https://api.github.com/users/Atcold/repos", "events_url": "https://api.github.com/users/Atcold/events{/privacy}", "received_events_url": "https://api.github.com/users/Atcold/received_events", "type": "User", "site_admin": false}, "created_at": "2018-06-19T22:13:35Z", "updated_at": "2018-06-19T22:14:38Z", "author_association": "CONTRIBUTOR", "body_html": "<p>I'd say it should return <code>tensor.storage()[3]</code>.<br>\n<code>item</code> access the (only) number contained in the <code>Storage</code>.<br>\nIf the <code>Tensor</code> is <code>0</code> dimensional, then it returns the only value (<em>i.e.</em> <code>def item(index=0):</code>).<br>\nIf the <code>Tensor</code> is not a scalar, then <em>i</em>-th <code>item</code> should give you the <em>i</em>-th item in the <code>Storage</code>.<br>\nAt least to me this looks natural.</p>", "body_text": "I'd say it should return tensor.storage()[3].\nitem access the (only) number contained in the Storage.\nIf the Tensor is 0 dimensional, then it returns the only value (i.e. def item(index=0):).\nIf the Tensor is not a scalar, then i-th item should give you the i-th item in the Storage.\nAt least to me this looks natural.", "body": "I'd say it should return `tensor.storage()[3]`.\r\n`item` access the (only) number contained in the `Storage`.\r\nIf the `Tensor` is `0` dimensional, then it returns the only value (*i.e.* `def item(index=0):`).\r\nIf the `Tensor` is not a scalar, then *i*-th `item` should give you the *i*-th item in the `Storage`.\r\nAt least to me this looks natural."}