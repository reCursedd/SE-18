{"url": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/175104028", "pull_request_review_id": 104583118, "id": 175104028, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE3NTEwNDAyOA==", "diff_hunk": "@@ -90,15 +92,35 @@ struct Attributes {\n     }\n   }\n   bool hasAttribute(Symbol name) const {\n+    JIT_ASSERT(name.is_attr());\n     return find(name,false) != values_.end();\n   }\n+  // We want direct string accessors, as it is nicer to use than\n+  // hasAttribute(Symbol::attr(\"blah\"))\n+  //\n+  // For some reason, &Attributes<Node>::hasAttribute in pybind11 is able to\n+  // give the pybind11 metaprogramming machinery \"the right type\", but\n+  // the equivalent looking lambda [](Attributes<Node>& a, const std::string&)\n+  // doesn't work!  So instead we define the methods on the class so we can", "path": "torch/csrc/jit/attributes.h", "position": 26, "original_position": 26, "commit_id": "80b8fd35ed644bbd95c4aa4f380aea8263c6208c", "original_commit_id": "59eebb6b3fa9c515d7177c23b7064cceef535985", "user": {"login": "ezyang", "id": 13564, "node_id": "MDQ6VXNlcjEzNTY0", "avatar_url": "https://avatars0.githubusercontent.com/u/13564?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ezyang", "html_url": "https://github.com/ezyang", "followers_url": "https://api.github.com/users/ezyang/followers", "following_url": "https://api.github.com/users/ezyang/following{/other_user}", "gists_url": "https://api.github.com/users/ezyang/gists{/gist_id}", "starred_url": "https://api.github.com/users/ezyang/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ezyang/subscriptions", "organizations_url": "https://api.github.com/users/ezyang/orgs", "repos_url": "https://api.github.com/users/ezyang/repos", "events_url": "https://api.github.com/users/ezyang/events{/privacy}", "received_events_url": "https://api.github.com/users/ezyang/received_events", "type": "User", "site_admin": false}, "body": "It's not a compile time error, but when I try to run it at runtime, pybind11 complains that there is no eligible dispatch for the types that are passed in. Here's one example:\r\n\r\n```\r\n======================================================================\r\nERROR: test_inplace_flags (__main__.TestJit)\r\n----------------------------------------------------------------------\r\nTraceback (most recent call last):\r\n  File \"test/test_jit.py\", line 643, in test_inplace_flags\r\n    self.assertTrue(op.hasAttribute('inplace'))\r\nTypeError: hasAttribute(): incompatible function arguments. The following argument types are supported:\r\n    1. (self: torch::jit::Attributes<torch::jit::Node>, arg0: str) -> bool\r\n\r\nInvoked with: %2 : Double(1), %3 : Handle = ^RegularFn()(%0)\r\n, 'inplace'\r\n\r\n```", "created_at": "2018-03-16T14:20:29Z", "updated_at": "2018-11-23T15:40:52Z", "html_url": "https://github.com/pytorch/pytorch/pull/5820#discussion_r175104028", "pull_request_url": "https://api.github.com/repos/pytorch/pytorch/pulls/5820", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/175104028"}, "html": {"href": "https://github.com/pytorch/pytorch/pull/5820#discussion_r175104028"}, "pull_request": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/5820"}}, "body_html": "<p>It's not a compile time error, but when I try to run it at runtime, pybind11 complains that there is no eligible dispatch for the types that are passed in. Here's one example:</p>\n<pre><code>======================================================================\nERROR: test_inplace_flags (__main__.TestJit)\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"test/test_jit.py\", line 643, in test_inplace_flags\n    self.assertTrue(op.hasAttribute('inplace'))\nTypeError: hasAttribute(): incompatible function arguments. The following argument types are supported:\n    1. (self: torch::jit::Attributes&lt;torch::jit::Node&gt;, arg0: str) -&gt; bool\n\nInvoked with: %2 : Double(1), %3 : Handle = ^RegularFn()(%0)\n, 'inplace'\n\n</code></pre>", "body_text": "It's not a compile time error, but when I try to run it at runtime, pybind11 complains that there is no eligible dispatch for the types that are passed in. Here's one example:\n======================================================================\nERROR: test_inplace_flags (__main__.TestJit)\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"test/test_jit.py\", line 643, in test_inplace_flags\n    self.assertTrue(op.hasAttribute('inplace'))\nTypeError: hasAttribute(): incompatible function arguments. The following argument types are supported:\n    1. (self: torch::jit::Attributes<torch::jit::Node>, arg0: str) -> bool\n\nInvoked with: %2 : Double(1), %3 : Handle = ^RegularFn()(%0)\n, 'inplace'", "in_reply_to_id": 175057164}