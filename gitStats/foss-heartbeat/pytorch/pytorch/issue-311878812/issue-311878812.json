{"url": "https://api.github.com/repos/pytorch/pytorch/issues/6343", "repository_url": "https://api.github.com/repos/pytorch/pytorch", "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/6343/labels{/name}", "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/6343/comments", "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/6343/events", "html_url": "https://github.com/pytorch/pytorch/pull/6343", "id": 311878812, "node_id": "MDExOlB1bGxSZXF1ZXN0MTc5ODc2NjAw", "number": 6343, "title": "Simplify and extend cpp build", "user": {"login": "goldsborough", "id": 6429851, "node_id": "MDQ6VXNlcjY0Mjk4NTE=", "avatar_url": "https://avatars3.githubusercontent.com/u/6429851?v=4", "gravatar_id": "", "url": "https://api.github.com/users/goldsborough", "html_url": "https://github.com/goldsborough", "followers_url": "https://api.github.com/users/goldsborough/followers", "following_url": "https://api.github.com/users/goldsborough/following{/other_user}", "gists_url": "https://api.github.com/users/goldsborough/gists{/gist_id}", "starred_url": "https://api.github.com/users/goldsborough/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/goldsborough/subscriptions", "organizations_url": "https://api.github.com/users/goldsborough/orgs", "repos_url": "https://api.github.com/users/goldsborough/repos", "events_url": "https://api.github.com/users/goldsborough/events{/privacy}", "received_events_url": "https://api.github.com/users/goldsborough/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": {"login": "ezyang", "id": 13564, "node_id": "MDQ6VXNlcjEzNTY0", "avatar_url": "https://avatars0.githubusercontent.com/u/13564?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ezyang", "html_url": "https://github.com/ezyang", "followers_url": "https://api.github.com/users/ezyang/followers", "following_url": "https://api.github.com/users/ezyang/following{/other_user}", "gists_url": "https://api.github.com/users/ezyang/gists{/gist_id}", "starred_url": "https://api.github.com/users/ezyang/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ezyang/subscriptions", "organizations_url": "https://api.github.com/users/ezyang/orgs", "repos_url": "https://api.github.com/users/ezyang/repos", "events_url": "https://api.github.com/users/ezyang/events{/privacy}", "received_events_url": "https://api.github.com/users/ezyang/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "ezyang", "id": 13564, "node_id": "MDQ6VXNlcjEzNTY0", "avatar_url": "https://avatars0.githubusercontent.com/u/13564?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ezyang", "html_url": "https://github.com/ezyang", "followers_url": "https://api.github.com/users/ezyang/followers", "following_url": "https://api.github.com/users/ezyang/following{/other_user}", "gists_url": "https://api.github.com/users/ezyang/gists{/gist_id}", "starred_url": "https://api.github.com/users/ezyang/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ezyang/subscriptions", "organizations_url": "https://api.github.com/users/ezyang/orgs", "repos_url": "https://api.github.com/users/ezyang/repos", "events_url": "https://api.github.com/users/ezyang/events{/privacy}", "received_events_url": "https://api.github.com/users/ezyang/received_events", "type": "User", "site_admin": false}, {"login": "lantiga", "id": 191033, "node_id": "MDQ6VXNlcjE5MTAzMw==", "avatar_url": "https://avatars2.githubusercontent.com/u/191033?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lantiga", "html_url": "https://github.com/lantiga", "followers_url": "https://api.github.com/users/lantiga/followers", "following_url": "https://api.github.com/users/lantiga/following{/other_user}", "gists_url": "https://api.github.com/users/lantiga/gists{/gist_id}", "starred_url": "https://api.github.com/users/lantiga/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lantiga/subscriptions", "organizations_url": "https://api.github.com/users/lantiga/orgs", "repos_url": "https://api.github.com/users/lantiga/repos", "events_url": "https://api.github.com/users/lantiga/events{/privacy}", "received_events_url": "https://api.github.com/users/lantiga/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 5, "created_at": "2018-04-06T07:50:23Z", "updated_at": "2018-11-23T15:41:57Z", "closed_at": "2018-04-07T05:26:17Z", "author_association": "CONTRIBUTOR", "pull_request": {"url": "https://api.github.com/repos/pytorch/pytorch/pulls/6343", "html_url": "https://github.com/pytorch/pytorch/pull/6343", "diff_url": "https://github.com/pytorch/pytorch/pull/6343.diff", "patch_url": "https://github.com/pytorch/pytorch/pull/6343.patch"}, "body_html": "<p>I will be using the pure C++ build interface that <a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=191033\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/lantiga\">@lantiga</a> wrote to build the C++ frontend API. While doing so, there were a few modifications I made to the build script and libtorch CMakeLists.txt.</p>\n<p>In <code>build_all.sh</code> I changed:</p>\n<ul>\n<li>Ability to use ninja</li>\n<li>Ability to use as many threads as cores (I build on a machine with 48 cores, but we were passing <code>-j 4</code>)</li>\n<li>Build in debug mode by default</li>\n<li>Make the build as least verbose as possible. I am deeply traumatized from scrolling through the million line <code>setup.py</code> spew each time, so getting a build that outputs 10 lines is a blessing</li>\n</ul>\n<p>In <code>libtorch/CMakeLists.txt</code> I primarily changed the build to not require an install step ... I don't quite understand why installation into a separate directory was required? This may totally be my misunderstanding though, so please let me know if this is totally wrong. In any case, now, headers are referenced from their source/build directories and libraries and tests are installed into <code>libtorch-buld/lib</code> and <code>libtorch-build/bin</code> respectively. <a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=191033\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/lantiga\">@lantiga</a> is there a reason you required the whole installation stuff?</p>\n<p>I would also like to codemod the <code>CMakeLists.txt</code> to be all lowercase. Writing code with caps lock on is not nice. I will do this in a separate PR or a follow-up commit though.</p>", "body_text": "I will be using the pure C++ build interface that @lantiga wrote to build the C++ frontend API. While doing so, there were a few modifications I made to the build script and libtorch CMakeLists.txt.\nIn build_all.sh I changed:\n\nAbility to use ninja\nAbility to use as many threads as cores (I build on a machine with 48 cores, but we were passing -j 4)\nBuild in debug mode by default\nMake the build as least verbose as possible. I am deeply traumatized from scrolling through the million line setup.py spew each time, so getting a build that outputs 10 lines is a blessing\n\nIn libtorch/CMakeLists.txt I primarily changed the build to not require an install step ... I don't quite understand why installation into a separate directory was required? This may totally be my misunderstanding though, so please let me know if this is totally wrong. In any case, now, headers are referenced from their source/build directories and libraries and tests are installed into libtorch-buld/lib and libtorch-build/bin respectively. @lantiga is there a reason you required the whole installation stuff?\nI would also like to codemod the CMakeLists.txt to be all lowercase. Writing code with caps lock on is not nice. I will do this in a separate PR or a follow-up commit though.", "body": "I will be using the pure C++ build interface that @lantiga wrote to build the C++ frontend API. While doing so, there were a few modifications I made to the build script and libtorch CMakeLists.txt.\r\n\r\nIn `build_all.sh` I changed:\r\n- Ability to use ninja\r\n- Ability to use as many threads as cores (I build on a machine with 48 cores, but we were passing `-j 4`)\r\n- Build in debug mode by default\r\n- Make the build as least verbose as possible. I am deeply traumatized from scrolling through the million line `setup.py` spew each time, so getting a build that outputs 10 lines is a blessing\r\n\r\nIn `libtorch/CMakeLists.txt` I primarily changed the build to not require an install step ... I don't quite understand why installation into a separate directory was required? This may totally be my misunderstanding though, so please let me know if this is totally wrong. In any case, now, headers are referenced from their source/build directories and libraries and tests are installed into `libtorch-buld/lib` and `libtorch-build/bin` respectively. @lantiga is there a reason you required the whole installation stuff?\r\n\r\nI would also like to codemod the `CMakeLists.txt` to be all lowercase. Writing code with caps lock on is not nice. I will do this in a separate PR or a follow-up commit though.\r\n\r\n"}