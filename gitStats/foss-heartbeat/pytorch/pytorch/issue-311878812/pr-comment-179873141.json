{"url": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/179873141", "pull_request_review_id": 110205515, "id": 179873141, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE3OTg3MzE0MQ==", "diff_hunk": "@@ -4,37 +4,65 @@ set -ex\n \n SCRIPTPATH=\"$( cd \"$(dirname \"$0\")\" ; pwd -P )\"\n \n-INSTALL_PREFIX=\"$1\"\n-\n-if [[ -z $INSTALL_PREFIX ]]; then\n-  INSTALL_PREFIX=$SCRIPTPATH/build/Install\n-fi\n-\n cd $SCRIPTPATH\n \n-PYTORCHPATH=\"$SCRIPTPATH/../../\"\n+INSTALL_PREFIX=\"${1:-$SCRIPTPATH/build/install}\"\n+PYTORCHPATH=\"$SCRIPTPATH/../..\"\n \n if [ ! -d \"$PYTORCHPATH/torch/csrc/autograd/generated\" ]; then\n   echo \"Generated files are not present.\\nRun the generators through `python setup.py build` or copy the generated files over.\"\n   exit 1\n fi\n \n+NO_CUDA=ON\n if [ -x \"$(command -v nvcc)\" ]; then\n   NO_CUDA=OFF\n-else\n-  NO_CUDA=ON\n fi\n \n ATEN_BUILDPATH=\"$SCRIPTPATH/build/aten-build\"\n LIBTORCH_BUILDPATH=\"$SCRIPTPATH/build/libtorch-build\"\n \n+# Build with Ninja if available. It has much cleaner output.\n+GENERATE=\"Unix Makefiles\"\n+MAKE=make\n+if [ -x \"$(command -v ninja)\" ]; then\n+  GENERATE=Ninja\n+  MAKE=ninja\n+fi\n+\n+# Code is developed a lot more than released, so default to Debug.\n+BUILD_TYPE=${BUILD_TYPE:-Debug}\n+\n+# Try to build with as many threads as we have cores, default to 4 if the\n+# command fails.", "path": "tools/cpp_build/build_all.sh", "position": null, "original_position": 43, "commit_id": "0d4bc6870cf9d70e7aab000f9858d9e14089c880", "original_commit_id": "691b36fb48a2a8e94adc56d8afbd66f7bbcf2817", "user": {"login": "lantiga", "id": 191033, "node_id": "MDQ6VXNlcjE5MTAzMw==", "avatar_url": "https://avatars2.githubusercontent.com/u/191033?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lantiga", "html_url": "https://github.com/lantiga", "followers_url": "https://api.github.com/users/lantiga/followers", "following_url": "https://api.github.com/users/lantiga/following{/other_user}", "gists_url": "https://api.github.com/users/lantiga/gists{/gist_id}", "starred_url": "https://api.github.com/users/lantiga/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lantiga/subscriptions", "organizations_url": "https://api.github.com/users/lantiga/orgs", "repos_url": "https://api.github.com/users/lantiga/repos", "events_url": "https://api.github.com/users/lantiga/events{/privacy}", "received_events_url": "https://api.github.com/users/lantiga/received_events", "type": "User", "site_admin": false}, "body": "The script is run with `set -e` at the top, so I would enclose the subsequent call between a `set +e` / `set -e` pair, to temporarily disable exiting the script in case of failure:\r\n```\r\nset +e\r\nJOBS=\"$(grep -c '^processor' /proc/cpuinfo)\"\r\nset -e\r\n```", "created_at": "2018-04-06T20:52:58Z", "updated_at": "2018-11-23T15:41:56Z", "html_url": "https://github.com/pytorch/pytorch/pull/6343#discussion_r179873141", "pull_request_url": "https://api.github.com/repos/pytorch/pytorch/pulls/6343", "author_association": "COLLABORATOR", "_links": {"self": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/179873141"}, "html": {"href": "https://github.com/pytorch/pytorch/pull/6343#discussion_r179873141"}, "pull_request": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/6343"}}, "body_html": "<p>The script is run with <code>set -e</code> at the top, so I would enclose the subsequent call between a <code>set +e</code> / <code>set -e</code> pair, to temporarily disable exiting the script in case of failure:</p>\n<pre><code>set +e\nJOBS=\"$(grep -c '^processor' /proc/cpuinfo)\"\nset -e\n</code></pre>", "body_text": "The script is run with set -e at the top, so I would enclose the subsequent call between a set +e / set -e pair, to temporarily disable exiting the script in case of failure:\nset +e\nJOBS=\"$(grep -c '^processor' /proc/cpuinfo)\"\nset -e"}