{"url": "https://api.github.com/repos/pytorch/pytorch/issues/comments/387823343", "html_url": "https://github.com/pytorch/pytorch/issues/7425#issuecomment-387823343", "issue_url": "https://api.github.com/repos/pytorch/pytorch/issues/7425", "id": 387823343, "node_id": "MDEyOklzc3VlQ29tbWVudDM4NzgyMzM0Mw==", "user": {"login": "soumith", "id": 1310570, "node_id": "MDQ6VXNlcjEzMTA1NzA=", "avatar_url": "https://avatars0.githubusercontent.com/u/1310570?v=4", "gravatar_id": "", "url": "https://api.github.com/users/soumith", "html_url": "https://github.com/soumith", "followers_url": "https://api.github.com/users/soumith/followers", "following_url": "https://api.github.com/users/soumith/following{/other_user}", "gists_url": "https://api.github.com/users/soumith/gists{/gist_id}", "starred_url": "https://api.github.com/users/soumith/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/soumith/subscriptions", "organizations_url": "https://api.github.com/users/soumith/orgs", "repos_url": "https://api.github.com/users/soumith/repos", "events_url": "https://api.github.com/users/soumith/events{/privacy}", "received_events_url": "https://api.github.com/users/soumith/received_events", "type": "User", "site_admin": false}, "created_at": "2018-05-09T17:58:18Z", "updated_at": "2018-05-09T17:58:18Z", "author_association": "MEMBER", "body_html": "<p>Your code had a bug, I fixed it for you:</p>\n<pre><code>def test_gpu():\n    mod = testModule().cuda()\n    t = torch.ones([1, 10], requires_grad=True, device=\"cuda:0\")\n    output = mod(t)\n    output[0].backward()\n    test = t.grad\n</code></pre>", "body_text": "Your code had a bug, I fixed it for you:\ndef test_gpu():\n    mod = testModule().cuda()\n    t = torch.ones([1, 10], requires_grad=True, device=\"cuda:0\")\n    output = mod(t)\n    output[0].backward()\n    test = t.grad", "body": "Your code had a bug, I fixed it for you:\r\n\r\n```\r\ndef test_gpu():\r\n    mod = testModule().cuda()\r\n    t = torch.ones([1, 10], requires_grad=True, device=\"cuda:0\")\r\n    output = mod(t)\r\n    output[0].backward()\r\n    test = t.grad\r\n```"}