{"url": "https://api.github.com/repos/pytorch/pytorch/issues/7425", "repository_url": "https://api.github.com/repos/pytorch/pytorch", "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/7425/labels{/name}", "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/7425/comments", "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/7425/events", "html_url": "https://github.com/pytorch/pytorch/issues/7425", "id": 321637210, "node_id": "MDU6SXNzdWUzMjE2MzcyMTA=", "number": 7425, "title": "grad of output with respect to inputs  functions on cpu but not gpu", "user": {"login": "jkr26", "id": 24401770, "node_id": "MDQ6VXNlcjI0NDAxNzcw", "avatar_url": "https://avatars3.githubusercontent.com/u/24401770?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jkr26", "html_url": "https://github.com/jkr26", "followers_url": "https://api.github.com/users/jkr26/followers", "following_url": "https://api.github.com/users/jkr26/following{/other_user}", "gists_url": "https://api.github.com/users/jkr26/gists{/gist_id}", "starred_url": "https://api.github.com/users/jkr26/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jkr26/subscriptions", "organizations_url": "https://api.github.com/users/jkr26/orgs", "repos_url": "https://api.github.com/users/jkr26/repos", "events_url": "https://api.github.com/users/jkr26/events{/privacy}", "received_events_url": "https://api.github.com/users/jkr26/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-05-09T16:20:11Z", "updated_at": "2018-05-09T17:58:18Z", "closed_at": "2018-05-09T17:58:18Z", "author_association": "NONE", "body_html": "<p>If you have a question or would like help and support, please ask at our<br>\n<a href=\"https://discuss.pytorch.org/\" rel=\"nofollow\">forums</a>.</p>\n<p>If you are submitting a feature request, please preface the title with [feature request].<br>\nIf you are submitting a bug report, please fill in the following details.</p>\n<h2>Issue description</h2>\n<p>Taking gradient of outputs with respect to inputs (for e.g. visualizing where a CNN is 'looking' while classifying an image) functions on the cpu but not after the model and inputs are pushed to the gpu.</p>\n<h2>Code example</h2>\n<pre><code>import torch.nn as nn\nimport torch\nfrom torch.autograd import grad\n\nclass testModule(nn.Module):\n    def __init__(self):\n        super(testModule, self).__init__()\n        self.lin = nn.Linear(10, 1)\n\n    def forward(self, x):\n        return self.lin(x)\n\ndef test_cpu():\n    t = torch.ones([1, 10], requires_grad=True)\n    mod = testModule()\n    output = mod(t)\n    output[0].backward()\n    test = t.grad\n    return test\n\ndef test_gpu():\n    mod = testModule().cuda()\n    t = torch.ones([1, 10], requires_grad=True).cuda()\n    output = mod(t)\n    output[0].backward()\n    test = t.grad\n    return test\n\nprint(test_cpu())\n\nprint(test_gpu())\n</code></pre>\n<h2>System Info</h2>\n<ul>\n<li>PyTorch or Caffe2: PyTorch</li>\n<li>How you installed PyTorch (conda, pip, source): conda</li>\n<li>Build command you used (if compiling from source):<br>\nPyTorch version: 0.4.0<br>\nIs debug build: No<br>\nCUDA used to build PyTorch: 9.0.176</li>\n</ul>\n<p>OS: Ubuntu 17.10<br>\nGCC version: (Homebrew gcc 5.5.0_4) 5.5.0<br>\nCMake version: Could not collect</p>\n<p>Python version: 3.6<br>\nIs CUDA available: Yes<br>\nCUDA runtime version: Could not collect<br>\nGPU models and configuration: GPU 0: GeForce GTX 1080 Ti<br>\nNvidia driver version: 390.48<br>\ncuDNN version: 7.0.5</p>\n<p>Versions of relevant libraries:<br>\n[pip3] numpy (1.14.2)<br>\n[pip3] numpydoc (0.7.0)<br>\n[pip3] torch (0.4.0)<br>\n[pip3] torchvision (0.2.1)<br>\n[conda] cuda90                    1.0                  h6433d27_0    pytorch<br>\n[conda] pytorch                   0.4.0           py36_cuda9.0.176_cudnn7.1.2_1  [cuda90]  pytorch<br>\n[conda] torchvision               0.2.1                    py36_1    pytorch</p>", "body_text": "If you have a question or would like help and support, please ask at our\nforums.\nIf you are submitting a feature request, please preface the title with [feature request].\nIf you are submitting a bug report, please fill in the following details.\nIssue description\nTaking gradient of outputs with respect to inputs (for e.g. visualizing where a CNN is 'looking' while classifying an image) functions on the cpu but not after the model and inputs are pushed to the gpu.\nCode example\nimport torch.nn as nn\nimport torch\nfrom torch.autograd import grad\n\nclass testModule(nn.Module):\n    def __init__(self):\n        super(testModule, self).__init__()\n        self.lin = nn.Linear(10, 1)\n\n    def forward(self, x):\n        return self.lin(x)\n\ndef test_cpu():\n    t = torch.ones([1, 10], requires_grad=True)\n    mod = testModule()\n    output = mod(t)\n    output[0].backward()\n    test = t.grad\n    return test\n\ndef test_gpu():\n    mod = testModule().cuda()\n    t = torch.ones([1, 10], requires_grad=True).cuda()\n    output = mod(t)\n    output[0].backward()\n    test = t.grad\n    return test\n\nprint(test_cpu())\n\nprint(test_gpu())\n\nSystem Info\n\nPyTorch or Caffe2: PyTorch\nHow you installed PyTorch (conda, pip, source): conda\nBuild command you used (if compiling from source):\nPyTorch version: 0.4.0\nIs debug build: No\nCUDA used to build PyTorch: 9.0.176\n\nOS: Ubuntu 17.10\nGCC version: (Homebrew gcc 5.5.0_4) 5.5.0\nCMake version: Could not collect\nPython version: 3.6\nIs CUDA available: Yes\nCUDA runtime version: Could not collect\nGPU models and configuration: GPU 0: GeForce GTX 1080 Ti\nNvidia driver version: 390.48\ncuDNN version: 7.0.5\nVersions of relevant libraries:\n[pip3] numpy (1.14.2)\n[pip3] numpydoc (0.7.0)\n[pip3] torch (0.4.0)\n[pip3] torchvision (0.2.1)\n[conda] cuda90                    1.0                  h6433d27_0    pytorch\n[conda] pytorch                   0.4.0           py36_cuda9.0.176_cudnn7.1.2_1  [cuda90]  pytorch\n[conda] torchvision               0.2.1                    py36_1    pytorch", "body": "If you have a question or would like help and support, please ask at our\r\n[forums](https://discuss.pytorch.org/).\r\n\r\nIf you are submitting a feature request, please preface the title with [feature request].\r\nIf you are submitting a bug report, please fill in the following details.\r\n\r\n## Issue description\r\nTaking gradient of outputs with respect to inputs (for e.g. visualizing where a CNN is 'looking' while classifying an image) functions on the cpu but not after the model and inputs are pushed to the gpu.\r\n\r\n## Code example\r\n\r\n```\r\nimport torch.nn as nn\r\nimport torch\r\nfrom torch.autograd import grad\r\n\r\nclass testModule(nn.Module):\r\n    def __init__(self):\r\n        super(testModule, self).__init__()\r\n        self.lin = nn.Linear(10, 1)\r\n\r\n    def forward(self, x):\r\n        return self.lin(x)\r\n\r\ndef test_cpu():\r\n    t = torch.ones([1, 10], requires_grad=True)\r\n    mod = testModule()\r\n    output = mod(t)\r\n    output[0].backward()\r\n    test = t.grad\r\n    return test\r\n\r\ndef test_gpu():\r\n    mod = testModule().cuda()\r\n    t = torch.ones([1, 10], requires_grad=True).cuda()\r\n    output = mod(t)\r\n    output[0].backward()\r\n    test = t.grad\r\n    return test\r\n\r\nprint(test_cpu())\r\n\r\nprint(test_gpu())\r\n```\r\n\r\n## System Info\r\n- PyTorch or Caffe2: PyTorch\r\n- How you installed PyTorch (conda, pip, source): conda\r\n- Build command you used (if compiling from source):\r\nPyTorch version: 0.4.0\r\nIs debug build: No\r\nCUDA used to build PyTorch: 9.0.176\r\n\r\nOS: Ubuntu 17.10\r\nGCC version: (Homebrew gcc 5.5.0_4) 5.5.0\r\nCMake version: Could not collect\r\n\r\nPython version: 3.6\r\nIs CUDA available: Yes\r\nCUDA runtime version: Could not collect\r\nGPU models and configuration: GPU 0: GeForce GTX 1080 Ti\r\nNvidia driver version: 390.48\r\ncuDNN version: 7.0.5\r\n\r\nVersions of relevant libraries:\r\n[pip3] numpy (1.14.2)\r\n[pip3] numpydoc (0.7.0)\r\n[pip3] torch (0.4.0)\r\n[pip3] torchvision (0.2.1)\r\n[conda] cuda90                    1.0                  h6433d27_0    pytorch\r\n[conda] pytorch                   0.4.0           py36_cuda9.0.176_cudnn7.1.2_1  [cuda90]  pytorch\r\n[conda] torchvision               0.2.1                    py36_1    pytorch\r\n\r\n"}