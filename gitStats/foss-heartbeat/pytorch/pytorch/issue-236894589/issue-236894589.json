{"url": "https://api.github.com/repos/pytorch/pytorch/issues/1846", "repository_url": "https://api.github.com/repos/pytorch/pytorch", "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/1846/labels{/name}", "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/1846/comments", "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/1846/events", "html_url": "https://github.com/pytorch/pytorch/issues/1846", "id": 236894589, "node_id": "MDU6SXNzdWUyMzY4OTQ1ODk=", "number": 1846, "title": "Memory leak?", "user": {"login": "kefirski", "id": 8404265, "node_id": "MDQ6VXNlcjg0MDQyNjU=", "avatar_url": "https://avatars2.githubusercontent.com/u/8404265?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kefirski", "html_url": "https://github.com/kefirski", "followers_url": "https://api.github.com/users/kefirski/followers", "following_url": "https://api.github.com/users/kefirski/following{/other_user}", "gists_url": "https://api.github.com/users/kefirski/gists{/gist_id}", "starred_url": "https://api.github.com/users/kefirski/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kefirski/subscriptions", "organizations_url": "https://api.github.com/users/kefirski/orgs", "repos_url": "https://api.github.com/users/kefirski/repos", "events_url": "https://api.github.com/users/kefirski/events{/privacy}", "received_events_url": "https://api.github.com/users/kefirski/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 553773019, "node_id": "MDU6TGFiZWw1NTM3NzMwMTk=", "url": "https://api.github.com/repos/pytorch/pytorch/labels/needs-reproduction", "name": "needs-reproduction", "color": "e99695", "default": false}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 9, "created_at": "2017-06-19T13:41:03Z", "updated_at": "2017-07-13T09:20:07Z", "closed_at": "2017-07-13T09:20:07Z", "author_association": "NONE", "body_html": "<p>I am trying to train <a href=\"https://github.com/analvikingur/CDVAE\">this</a> model by<br>\n<code>python train.py --use-cuda True --dropout 0.25 --batch-size 7 --num-iterations 2000000</code></p>\n<p>after several iterations (~16k) on my 8GB GPU I've got</p>\n<pre><code>THCudaCheck FAIL file=/data/users/soumith/builder/wheel/pytorch-src/torch/lib/THC/generic/THCStorage.cu line=66 error=2 : out of memory\nTraceback (most recent call last):\n  File \"train.py\", line 84, in &lt;module&gt;\n    print(cdvae.translate(input, ['ru', 'ru'], batch_loader))\n  File \"/home/py36/CDVAE/model/cdvae.py\", line 97, in translate\n    return model_to.sample(bl, encoder_input.size()[1], encoder_input.is_cuda, z)\n  File \"/home/py36/CDVAE/model/vae/vae.py\", line 115, in sample\n    x, state, _, _ = self(0., None, x, z, state)\n  File \"/usr/local/lib/python3.5/dist-packages/torch/nn/modules/module.py\", line 202, in __call__\n    result = self.forward(*input, **kwargs)\n  File \"/home/py36/CDVAE/model/vae/vae.py\", line 63, in forward\n    out, final_state = self.generate(decoder_input, z, drop_prob, initial_state)\n  File \"/home/py36/CDVAE/model/vae/vae.py\", line 79, in generate\n    return self.decoder(decoder_input, z, initial_state)\n  File \"/usr/local/lib/python3.5/dist-packages/torch/nn/modules/module.py\", line 202, in __call__\n    result = self.forward(*input, **kwargs)\n  File \"/home/py36/CDVAE/model/vae/decoder.py\", line 48, in forward\n    result, final_state = self.rnn(decoder_input, initial_state)\n  File \"/usr/local/lib/python3.5/dist-packages/torch/nn/modules/module.py\", line 202, in __call__\n    result = self.forward(*input, **kwargs)\n  File \"/usr/local/lib/python3.5/dist-packages/torch/nn/modules/rnn.py\", line 91, in forward\n    output, hidden = func(input, self.all_weights, hx)\n  File \"/usr/local/lib/python3.5/dist-packages/torch/nn/_functions/rnn.py\", line 327, in forward\n    return func(input, *fargs, **fkwargs)\n  File \"/usr/local/lib/python3.5/dist-packages/torch/autograd/function.py\", line 201, in _do_forward\n    flat_output = super(NestedIOFunction, self)._do_forward(*flat_input)\n  File \"/usr/local/lib/python3.5/dist-packages/torch/autograd/function.py\", line 223, in forward\n    result = self.forward_extended(*nested_tensors)\n  File \"/usr/local/lib/python3.5/dist-packages/torch/nn/_functions/rnn.py\", line 269, in forward_extended\n    cudnn.rnn.forward(self, input, hx, weight, output, hy)\n  File \"/usr/local/lib/python3.5/dist-packages/torch/backends/cudnn/rnn.py\", line 247, in forward\n    fn.weight_buf = x.new(num_weights)\nRuntimeError: cuda runtime error (2) : out of memory at /data/users/soumith/builder/wheel/pytorch-src/torch/lib/THC/generic/THCStorage.cu:66\n</code></pre>", "body_text": "I am trying to train this model by\npython train.py --use-cuda True --dropout 0.25 --batch-size 7 --num-iterations 2000000\nafter several iterations (~16k) on my 8GB GPU I've got\nTHCudaCheck FAIL file=/data/users/soumith/builder/wheel/pytorch-src/torch/lib/THC/generic/THCStorage.cu line=66 error=2 : out of memory\nTraceback (most recent call last):\n  File \"train.py\", line 84, in <module>\n    print(cdvae.translate(input, ['ru', 'ru'], batch_loader))\n  File \"/home/py36/CDVAE/model/cdvae.py\", line 97, in translate\n    return model_to.sample(bl, encoder_input.size()[1], encoder_input.is_cuda, z)\n  File \"/home/py36/CDVAE/model/vae/vae.py\", line 115, in sample\n    x, state, _, _ = self(0., None, x, z, state)\n  File \"/usr/local/lib/python3.5/dist-packages/torch/nn/modules/module.py\", line 202, in __call__\n    result = self.forward(*input, **kwargs)\n  File \"/home/py36/CDVAE/model/vae/vae.py\", line 63, in forward\n    out, final_state = self.generate(decoder_input, z, drop_prob, initial_state)\n  File \"/home/py36/CDVAE/model/vae/vae.py\", line 79, in generate\n    return self.decoder(decoder_input, z, initial_state)\n  File \"/usr/local/lib/python3.5/dist-packages/torch/nn/modules/module.py\", line 202, in __call__\n    result = self.forward(*input, **kwargs)\n  File \"/home/py36/CDVAE/model/vae/decoder.py\", line 48, in forward\n    result, final_state = self.rnn(decoder_input, initial_state)\n  File \"/usr/local/lib/python3.5/dist-packages/torch/nn/modules/module.py\", line 202, in __call__\n    result = self.forward(*input, **kwargs)\n  File \"/usr/local/lib/python3.5/dist-packages/torch/nn/modules/rnn.py\", line 91, in forward\n    output, hidden = func(input, self.all_weights, hx)\n  File \"/usr/local/lib/python3.5/dist-packages/torch/nn/_functions/rnn.py\", line 327, in forward\n    return func(input, *fargs, **fkwargs)\n  File \"/usr/local/lib/python3.5/dist-packages/torch/autograd/function.py\", line 201, in _do_forward\n    flat_output = super(NestedIOFunction, self)._do_forward(*flat_input)\n  File \"/usr/local/lib/python3.5/dist-packages/torch/autograd/function.py\", line 223, in forward\n    result = self.forward_extended(*nested_tensors)\n  File \"/usr/local/lib/python3.5/dist-packages/torch/nn/_functions/rnn.py\", line 269, in forward_extended\n    cudnn.rnn.forward(self, input, hx, weight, output, hy)\n  File \"/usr/local/lib/python3.5/dist-packages/torch/backends/cudnn/rnn.py\", line 247, in forward\n    fn.weight_buf = x.new(num_weights)\nRuntimeError: cuda runtime error (2) : out of memory at /data/users/soumith/builder/wheel/pytorch-src/torch/lib/THC/generic/THCStorage.cu:66", "body": "I am trying to train [this](https://github.com/analvikingur/CDVAE) model by \r\n`python train.py --use-cuda True --dropout 0.25 --batch-size 7 --num-iterations 2000000`\r\n\r\nafter several iterations (~16k) on my 8GB GPU I've got\r\n\r\n```\r\nTHCudaCheck FAIL file=/data/users/soumith/builder/wheel/pytorch-src/torch/lib/THC/generic/THCStorage.cu line=66 error=2 : out of memory\r\nTraceback (most recent call last):\r\n  File \"train.py\", line 84, in <module>\r\n    print(cdvae.translate(input, ['ru', 'ru'], batch_loader))\r\n  File \"/home/py36/CDVAE/model/cdvae.py\", line 97, in translate\r\n    return model_to.sample(bl, encoder_input.size()[1], encoder_input.is_cuda, z)\r\n  File \"/home/py36/CDVAE/model/vae/vae.py\", line 115, in sample\r\n    x, state, _, _ = self(0., None, x, z, state)\r\n  File \"/usr/local/lib/python3.5/dist-packages/torch/nn/modules/module.py\", line 202, in __call__\r\n    result = self.forward(*input, **kwargs)\r\n  File \"/home/py36/CDVAE/model/vae/vae.py\", line 63, in forward\r\n    out, final_state = self.generate(decoder_input, z, drop_prob, initial_state)\r\n  File \"/home/py36/CDVAE/model/vae/vae.py\", line 79, in generate\r\n    return self.decoder(decoder_input, z, initial_state)\r\n  File \"/usr/local/lib/python3.5/dist-packages/torch/nn/modules/module.py\", line 202, in __call__\r\n    result = self.forward(*input, **kwargs)\r\n  File \"/home/py36/CDVAE/model/vae/decoder.py\", line 48, in forward\r\n    result, final_state = self.rnn(decoder_input, initial_state)\r\n  File \"/usr/local/lib/python3.5/dist-packages/torch/nn/modules/module.py\", line 202, in __call__\r\n    result = self.forward(*input, **kwargs)\r\n  File \"/usr/local/lib/python3.5/dist-packages/torch/nn/modules/rnn.py\", line 91, in forward\r\n    output, hidden = func(input, self.all_weights, hx)\r\n  File \"/usr/local/lib/python3.5/dist-packages/torch/nn/_functions/rnn.py\", line 327, in forward\r\n    return func(input, *fargs, **fkwargs)\r\n  File \"/usr/local/lib/python3.5/dist-packages/torch/autograd/function.py\", line 201, in _do_forward\r\n    flat_output = super(NestedIOFunction, self)._do_forward(*flat_input)\r\n  File \"/usr/local/lib/python3.5/dist-packages/torch/autograd/function.py\", line 223, in forward\r\n    result = self.forward_extended(*nested_tensors)\r\n  File \"/usr/local/lib/python3.5/dist-packages/torch/nn/_functions/rnn.py\", line 269, in forward_extended\r\n    cudnn.rnn.forward(self, input, hx, weight, output, hy)\r\n  File \"/usr/local/lib/python3.5/dist-packages/torch/backends/cudnn/rnn.py\", line 247, in forward\r\n    fn.weight_buf = x.new(num_weights)\r\nRuntimeError: cuda runtime error (2) : out of memory at /data/users/soumith/builder/wheel/pytorch-src/torch/lib/THC/generic/THCStorage.cu:66\r\n```"}