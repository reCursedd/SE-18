{"url": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/160436269", "pull_request_review_id": 87552855, "id": 160436269, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE2MDQzNjI2OQ==", "diff_hunk": "@@ -425,6 +425,167 @@ def tmp(self):\n \n \n class TestCuda(TestCase):\n+\n+    @staticmethod\n+    def _test_memory_stats_generator(self, device=None, N=35):\n+        if device is None:\n+            device = torch.cuda.current_device()\n+\n+        m0 = torch.cuda.memory_allocated(device)\n+        last_m_arr = [torch.cuda.memory_allocated(device)]\n+        max_m_arr = [torch.cuda.max_memory_allocated(device)]\n+        last_c_arr = [torch.cuda.memory_cached(device)]\n+        max_c_arr = [torch.cuda.max_memory_cached(device)]\n+\n+        def alloc(*size):\n+            with torch.cuda.device(device):\n+                # NOTE: do **not** use methods that will have additional\n+                #       overhead, e.g., inplace random sampling methods.", "path": "test/test_cuda.py", "position": null, "original_position": 19, "commit_id": "0e87fbde69b3efa2925109ac1ba224daf338f7b7", "original_commit_id": "052261986ed4336bc96cf64392165224dee313e4", "user": {"login": "SsnL", "id": 5674597, "node_id": "MDQ6VXNlcjU2NzQ1OTc=", "avatar_url": "https://avatars2.githubusercontent.com/u/5674597?v=4", "gravatar_id": "", "url": "https://api.github.com/users/SsnL", "html_url": "https://github.com/SsnL", "followers_url": "https://api.github.com/users/SsnL/followers", "following_url": "https://api.github.com/users/SsnL/following{/other_user}", "gists_url": "https://api.github.com/users/SsnL/gists{/gist_id}", "starred_url": "https://api.github.com/users/SsnL/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/SsnL/subscriptions", "organizations_url": "https://api.github.com/users/SsnL/orgs", "repos_url": "https://api.github.com/users/SsnL/repos", "events_url": "https://api.github.com/users/SsnL/events{/privacy}", "received_events_url": "https://api.github.com/users/SsnL/received_events", "type": "User", "site_admin": false}, "body": "First time calling inplace cuda sampling methods will alloc an RNG state. After del the tensor, the state still remains in GPU memory, causing equal checks at line 538 to fail. \r\n\r\nI'll add more explanation.", "created_at": "2018-01-09T15:24:58Z", "updated_at": "2018-11-23T15:37:58Z", "html_url": "https://github.com/pytorch/pytorch/pull/4511#discussion_r160436269", "pull_request_url": "https://api.github.com/repos/pytorch/pytorch/pulls/4511", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/160436269"}, "html": {"href": "https://github.com/pytorch/pytorch/pull/4511#discussion_r160436269"}, "pull_request": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/4511"}}, "body_html": "<p>First time calling inplace cuda sampling methods will alloc an RNG state. After del the tensor, the state still remains in GPU memory, causing equal checks at line 538 to fail.</p>\n<p>I'll add more explanation.</p>", "body_text": "First time calling inplace cuda sampling methods will alloc an RNG state. After del the tensor, the state still remains in GPU memory, causing equal checks at line 538 to fail.\nI'll add more explanation.", "in_reply_to_id": 160378808}