{"url": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/140107565", "pull_request_review_id": 64118102, "id": 140107565, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE0MDEwNzU2NQ==", "diff_hunk": "@@ -75,6 +74,61 @@ Tensor & VariableType::checked_unpack(const Tensor & t, const char * name, int p\n    toString(),t.type().toString(),pos,name);\n }\n \n+Variable VariableType::as_variable(Tensor tensor) const {\n+  return make_variable(std::move(tensor));\n+}\n+\n+Variable VariableType::as_variable(const Scalar & scalar) const {\n+  auto tensor = scalar.toTensor();\n+  if (&tensor.type() != baseType) {\n+    tensor = tensor.toType(*baseType);\n+  }\n+  return make_variable(std::move(tensor));\n+}\n+\n+void check_inplace(const VariableImpl& pImpl) {\n+  auto& version_counter = *pImpl.version_counter;\n+  if (pImpl.requires_grad && !pImpl.grad_fn) {\n+    at::runtime_error(\n+      \"a leaf Variable that requires grad has been used in an in-place operation.\");\n+  }\n+  if (version_counter.var_refcnt() > 1) {\n+    at::runtime_error(\n+      \"in-place operations can be only used on variables that don't share \"\n+      \"storage with any other variables, but detected that there are %d objects \"\n+      \"sharing it\", version_counter.var_refcnt());\n+  }\n+}\n+\n+void wrap_output(VariableImpl& pImpl, FunctionFlags flags, std::shared_ptr<Function> grad_fn) {\n+  pImpl.requires_grad = flags.is_executable;\n+  pImpl.is_volatile = flags.is_volatile;\n+  if (!flags.is_volatile) {\n+    pImpl.output_nr = grad_fn->num_inputs++;\n+    grad_fn->set_flags(std::move(flags));\n+    pImpl.grad_fn = std::move(grad_fn);\n+  }\n+}\n+\n+void VariableType::copy(const Tensor & src, Tensor & dst) {\n+  auto& src_ = checked_unpack(src, \"src\", 0);\n+  auto& dst_ = checked_unpack(dst, \"dst\", 1);\n+  auto& pImpl = static_cast<VariableImpl&>(*dst.get());\n+  check_inplace(pImpl);\n+  auto flags = Function::flags({ src });\n+  baseType->copy(src_, dst_);\n+  (*pImpl.version_counter)++;\n+  wrap_output(pImpl, std::move(flags), std::make_shared<Identity>());\n+}\n+\n+Tensor & VariableType::m_resize_(Tensor & self, IntList size) {\n+  auto& self_ = checked_unpack(self, \"self\", 0);\n+  auto& pImpl = static_cast<VariableImpl&>(*self.get());\n+  check_inplace(pImpl);\n+  baseType->m_resize_(self_, size);\n+  return self;", "path": "tools/autograd/templates/VariableType.cpp", "position": null, "original_position": 79, "commit_id": "e471756dd09f27c1ac6fff4e977d1faeb4b030cf", "original_commit_id": "a5e60c1254517fffaebc9f5432faf08fb533ae4e", "user": {"login": "apaszke", "id": 4583066, "node_id": "MDQ6VXNlcjQ1ODMwNjY=", "avatar_url": "https://avatars3.githubusercontent.com/u/4583066?v=4", "gravatar_id": "", "url": "https://api.github.com/users/apaszke", "html_url": "https://github.com/apaszke", "followers_url": "https://api.github.com/users/apaszke/followers", "following_url": "https://api.github.com/users/apaszke/following{/other_user}", "gists_url": "https://api.github.com/users/apaszke/gists{/gist_id}", "starred_url": "https://api.github.com/users/apaszke/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/apaszke/subscriptions", "organizations_url": "https://api.github.com/users/apaszke/orgs", "repos_url": "https://api.github.com/users/apaszke/repos", "events_url": "https://api.github.com/users/apaszke/events{/privacy}", "received_events_url": "https://api.github.com/users/apaszke/received_events", "type": "User", "site_admin": false}, "body": "Uh, `resize_` is really unsafe. Calling this can break the backward completely. I don't know why is it even in this PR", "created_at": "2017-09-20T22:18:13Z", "updated_at": "2018-11-23T15:34:41Z", "html_url": "https://github.com/pytorch/pytorch/pull/2805#discussion_r140107565", "pull_request_url": "https://api.github.com/repos/pytorch/pytorch/pulls/2805", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/140107565"}, "html": {"href": "https://github.com/pytorch/pytorch/pull/2805#discussion_r140107565"}, "pull_request": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/2805"}}, "body_html": "<p>Uh, <code>resize_</code> is really unsafe. Calling this can break the backward completely. I don't know why is it even in this PR</p>", "body_text": "Uh, resize_ is really unsafe. Calling this can break the backward completely. I don't know why is it even in this PR"}