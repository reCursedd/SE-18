{"url": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/140278051", "pull_request_review_id": 64118102, "id": 140278051, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE0MDI3ODA1MQ==", "diff_hunk": "@@ -73,9 +194,90 @@ def write(dirname, name, template, env):\n \n def load_derivatives(path):\n     with open(path, 'r') as f:\n-        # TODO: load and parse derivatives.yaml\n-        d = yaml.load(f, Loader=Loader)\n-        return [] if d is None else d\n+        definitions = yaml.load(f, Loader=Loader)\n+\n+    name_regex = r'(^|\\W){}($|\\W)'\n+\n+    def split_name_params(prototype):\n+        name, params = re.match('(\\w+)\\((.*)\\)', prototype).groups()\n+        return name, params.split(', ')\n+\n+    def get_signature(option):\n+        arguments = option['python_arguments']\n+        arg_types = [arg['type'] for arg in arguments]\n+        if option['aten'] is not None:\n+            call_args = split_name_params(option['aten'])[1]\n+            arg_indices = {arg['name']: i for i, arg in enumerate(arguments)}\n+\n+            def get_type(arg_name):\n+                if arg_name in arg_indices:\n+                    return arg_types[arg_indices[arg_name]]\n+                return 'Scalar'\n+\n+            arg_types = [get_type(arg_name) for arg_name in call_args]\n+        return '{}({})'.format(option['name'], ', '.join(arg_types))\n+\n+    options = []\n+    for defn in definitions:", "path": "tools/autograd/gen_variable_type.py", "position": null, "original_position": 198, "commit_id": "e471756dd09f27c1ac6fff4e977d1faeb4b030cf", "original_commit_id": "a5e60c1254517fffaebc9f5432faf08fb533ae4e", "user": {"login": "apaszke", "id": 4583066, "node_id": "MDQ6VXNlcjQ1ODMwNjY=", "avatar_url": "https://avatars3.githubusercontent.com/u/4583066?v=4", "gravatar_id": "", "url": "https://api.github.com/users/apaszke", "html_url": "https://github.com/apaszke", "followers_url": "https://api.github.com/users/apaszke/followers", "following_url": "https://api.github.com/users/apaszke/following{/other_user}", "gists_url": "https://api.github.com/users/apaszke/gists{/gist_id}", "starred_url": "https://api.github.com/users/apaszke/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/apaszke/subscriptions", "organizations_url": "https://api.github.com/users/apaszke/orgs", "repos_url": "https://api.github.com/users/apaszke/repos", "events_url": "https://api.github.com/users/apaszke/events{/privacy}", "received_events_url": "https://api.github.com/users/apaszke/received_events", "type": "User", "site_admin": false}, "body": "Each overload of a functions is a definition itself, right? It means something different than in cwrap, where there's a 1-1 correspondence between definitions and methods. Might be worth a comment", "created_at": "2017-09-21T15:34:16Z", "updated_at": "2018-11-23T15:34:43Z", "html_url": "https://github.com/pytorch/pytorch/pull/2805#discussion_r140278051", "pull_request_url": "https://api.github.com/repos/pytorch/pytorch/pulls/2805", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/140278051"}, "html": {"href": "https://github.com/pytorch/pytorch/pull/2805#discussion_r140278051"}, "pull_request": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/2805"}}, "body_html": "<p>Each overload of a functions is a definition itself, right? It means something different than in cwrap, where there's a 1-1 correspondence between definitions and methods. Might be worth a comment</p>", "body_text": "Each overload of a functions is a definition itself, right? It means something different than in cwrap, where there's a 1-1 correspondence between definitions and methods. Might be worth a comment"}