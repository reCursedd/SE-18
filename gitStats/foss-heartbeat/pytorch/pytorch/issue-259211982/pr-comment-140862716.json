{"url": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/140862716", "pull_request_review_id": 64956713, "id": 140862716, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE0MDg2MjcxNg==", "diff_hunk": "@@ -169,6 +529,57 @@ def gen_variable_type(declarations, out):\n                       if option['has_full_argument_list']]\n \n     derivatives = load_derivatives(derivatives_path)\n+    deprecated = load_derivatives(deprecated_path)\n+\n+    def by_name(option):\n+        return option['name']\n+    def by_aten_name(option):\n+        return option.get('aten_name', option['name'])\n+\n+    aten_decls = sorted(aten_decls, key=by_name)\n+    derivatives = sorted(derivatives, key=by_aten_name)\n+\n+    derivatives_by_signature = {d['signature']: d for d in derivatives}\n+    options_by_name = OrderedDict([(k, list(g)) for k, g in groupby(aten_decls, by_name)])\n+    options_by_signature = OrderedDict()\n+    python_functions = OrderedDict()\n+\n+    def get_option(derivative):\n+        name = derivative.get('aten', derivative['name'])\n+        options = options_by_name.get(name, [])\n+        if len(options) == 0:\n+            raise RuntimeError('Declaration not found for: {}'.format(name))\n+        elif len(options) == 1:\n+            return options[0]\n+        else:\n+            raise RuntimeError('ambiguous decl for: {}'.format(name))\n+            return None\n+\n+    for option in aten_decls:\n+        args = []\n+        for arg in option['arguments']:\n+            simple_type = arg['type'].replace(' &', '').replace('const ', '')\n+            args.append(simple_type)\n+            arg['simple_type'] = simple_type\n+        name = option['name']\n+        base_name = name[:-1] if option['inplace'] else name\n+        signature = '{}({})'.format(base_name, ', '.join(args))\n+        if signature not in options_by_signature:\n+            options_by_signature[signature] = []\n+        options_by_signature[signature].append(option)", "path": "tools/autograd/gen_variable_type.py", "position": null, "original_position": 560, "commit_id": "e471756dd09f27c1ac6fff4e977d1faeb4b030cf", "original_commit_id": "a5e60c1254517fffaebc9f5432faf08fb533ae4e", "user": {"login": "colesbury", "id": 655866, "node_id": "MDQ6VXNlcjY1NTg2Ng==", "avatar_url": "https://avatars1.githubusercontent.com/u/655866?v=4", "gravatar_id": "", "url": "https://api.github.com/users/colesbury", "html_url": "https://github.com/colesbury", "followers_url": "https://api.github.com/users/colesbury/followers", "following_url": "https://api.github.com/users/colesbury/following{/other_user}", "gists_url": "https://api.github.com/users/colesbury/gists{/gist_id}", "starred_url": "https://api.github.com/users/colesbury/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/colesbury/subscriptions", "organizations_url": "https://api.github.com/users/colesbury/orgs", "repos_url": "https://api.github.com/users/colesbury/repos", "events_url": "https://api.github.com/users/colesbury/events{/privacy}", "received_events_url": "https://api.github.com/users/colesbury/received_events", "type": "User", "site_admin": false}, "body": "Yes. In the future, we may want to allow a different definition of the derivative for in-place vs. out-of-place. For example, you may want to compute the derivative using the input for out-of-place and using the output for in-place.", "created_at": "2017-09-25T18:40:56Z", "updated_at": "2018-11-23T15:34:48Z", "html_url": "https://github.com/pytorch/pytorch/pull/2805#discussion_r140862716", "pull_request_url": "https://api.github.com/repos/pytorch/pytorch/pulls/2805", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/140862716"}, "html": {"href": "https://github.com/pytorch/pytorch/pull/2805#discussion_r140862716"}, "pull_request": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/2805"}}, "body_html": "<p>Yes. In the future, we may want to allow a different definition of the derivative for in-place vs. out-of-place. For example, you may want to compute the derivative using the input for out-of-place and using the output for in-place.</p>", "body_text": "Yes. In the future, we may want to allow a different definition of the derivative for in-place vs. out-of-place. For example, you may want to compute the derivative using the input for out-of-place and using the output for in-place.", "in_reply_to_id": 140291354}