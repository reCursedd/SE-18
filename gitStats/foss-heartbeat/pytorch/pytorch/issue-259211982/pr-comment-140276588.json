{"url": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/140276588", "pull_request_review_id": 64118102, "id": 140276588, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE0MDI3NjU4OA==", "diff_hunk": "@@ -28,30 +46,133 @@\n METHOD_DEFINITION_FALLTHROUGH = CodeTemplate(\"\"\"\\\n return baseType->${method_prefix}${api_name}(${unpacked_args});\"\"\")\n \n+METHOD_DEFINITION_FALLTHROUGH_VARIABLE = CodeTemplate(\"\"\"\\\n+return make_variable(baseType->${method_prefix}${api_name}(${unpacked_args}));\"\"\")\n+\n UNWRAP_TENSOR = CodeTemplate(\"\"\"\\\n auto& ${arg_name}_ = checked_unpack(${arg_name}, \"${arg_name}\", ${arg_pos});\"\"\")\n \n-GENERATED_COMMENT = CodeTemplate(\"\"\"\\\n-generated from tools/autograd/templates/${filename}\"\"\")\n+FUNCTION_DECLARATION = CodeTemplate(\"\"\"\\\n+struct ${op} : public Function {\n+  using Function::Function;\n+  variable_list apply(const variable_list& inputs) override;\n+  std::string name() override { return \"${op}\"; }\n+  ${saved_variables}\n+};\n+\"\"\")\n+\n+FUNCTION_DEFINITION = CodeTemplate(\"\"\"\\\n+variable_list ${op}::apply(const variable_list& inputs) {\n+  variable_list grad_inputs(${num_inputs});\n+  ${body}\n+  return grad_inputs;\n+}\n+\"\"\")\n+\n+PY_FUNCTION_DEFINITION = CodeTemplate(\"\"\"\\\n+static PyTypeObject ${op}Class;\n+addClass<${op}>(${op}Class, \"${op}\");\n+\"\"\")\n+\n+\n+DERIVATIVE = CodeTemplate(\"\"\"\\\n+if (should_compute_output(${i})) {\n+  ${unpack_save_variables}\n+  grad_inputs[${i}] = ${derivative};\n+}\n+\"\"\")\n+\n+METHOD_DEFINITION_DERIVATIVE = CodeTemplate(\"\"\"\\\n+auto flags = Function::flags({ ${tensor_args} });\n+auto grad_fn = std::make_shared<${op}>();", "path": "tools/autograd/gen_variable_type.py", "position": 73, "original_position": 73, "commit_id": "e471756dd09f27c1ac6fff4e977d1faeb4b030cf", "original_commit_id": "a5e60c1254517fffaebc9f5432faf08fb533ae4e", "user": {"login": "apaszke", "id": 4583066, "node_id": "MDQ6VXNlcjQ1ODMwNjY=", "avatar_url": "https://avatars3.githubusercontent.com/u/4583066?v=4", "gravatar_id": "", "url": "https://api.github.com/users/apaszke", "html_url": "https://github.com/apaszke", "followers_url": "https://api.github.com/users/apaszke/followers", "following_url": "https://api.github.com/users/apaszke/following{/other_user}", "gists_url": "https://api.github.com/users/apaszke/gists{/gist_id}", "starred_url": "https://api.github.com/users/apaszke/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/apaszke/subscriptions", "organizations_url": "https://api.github.com/users/apaszke/orgs", "repos_url": "https://api.github.com/users/apaszke/repos", "events_url": "https://api.github.com/users/apaszke/events{/privacy}", "received_events_url": "https://api.github.com/users/apaszke/received_events", "type": "User", "site_admin": false}, "body": "We could move this allocation to `flags.is_executable` right?", "created_at": "2017-09-21T15:29:40Z", "updated_at": "2018-11-23T15:34:43Z", "html_url": "https://github.com/pytorch/pytorch/pull/2805#discussion_r140276588", "pull_request_url": "https://api.github.com/repos/pytorch/pytorch/pulls/2805", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/140276588"}, "html": {"href": "https://github.com/pytorch/pytorch/pull/2805#discussion_r140276588"}, "pull_request": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/2805"}}, "body_html": "<p>We could move this allocation to <code>flags.is_executable</code> right?</p>", "body_text": "We could move this allocation to flags.is_executable right?"}