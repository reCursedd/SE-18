{"url": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/191164010", "pull_request_review_id": 123684280, "id": 191164010, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5MTE2NDAxMA==", "diff_hunk": "@@ -0,0 +1,60 @@\n+#pragma once\n+\n+#include <ATen/ScalarType.h>\n+\n+#include <cstddef>\n+\n+namespace at {\n+struct Type;\n+} // namespace at\n+\n+namespace at {\n+\n+// should there be multiple kinds of these?\n+struct TensorOptions {\n+  TensorOptions() = default;\n+\n+  /* implicit */ TensorOptions(const Type& type);\n+\n+  TensorOptions& device(size_t device) {\n+    device_ = device;\n+    return *this;\n+  }\n+  TensorOptions& backend(Backend backend) {\n+    backend_ = backend;\n+    return *this;\n+  }\n+  TensorOptions& dtype(ScalarType dtype) {\n+    dtype_ = dtype;\n+    return *this;\n+  }\n+  TensorOptions& requires_grad(bool requires_grad) {\n+    requires_grad_ = requires_grad;\n+    return *this;\n+  }\n+\n+  size_t device() const noexcept {\n+    return device_;\n+  }\n+  Backend backend() const noexcept {\n+    return backend_;\n+  }\n+  ScalarType dtype() const noexcept {\n+    return dtype_;\n+  }\n+  bool requires_grad() const noexcept {\n+    return requires_grad_;\n+  }\n+\n+  /// Constructs an `at::Type` from the members of the `TensorOptions`.\n+  Type& type() const;\n+\n+ private:\n+  // shold this be optional?\n+  size_t device_ = 0;", "path": "aten/src/ATen/TensorOptions.h", "position": null, "original_position": 54, "commit_id": "c5b2af6a950b67445ad8916d364fd24456d7aa39", "original_commit_id": "bcf2d70606baedac761e99c1c635f6aa77ecf6a4", "user": {"login": "apaszke", "id": 4583066, "node_id": "MDQ6VXNlcjQ1ODMwNjY=", "avatar_url": "https://avatars3.githubusercontent.com/u/4583066?v=4", "gravatar_id": "", "url": "https://api.github.com/users/apaszke", "html_url": "https://github.com/apaszke", "followers_url": "https://api.github.com/users/apaszke/followers", "following_url": "https://api.github.com/users/apaszke/following{/other_user}", "gists_url": "https://api.github.com/users/apaszke/gists{/gist_id}", "starred_url": "https://api.github.com/users/apaszke/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/apaszke/subscriptions", "organizations_url": "https://api.github.com/users/apaszke/orgs", "repos_url": "https://api.github.com/users/apaszke/repos", "events_url": "https://api.github.com/users/apaszke/events{/privacy}", "received_events_url": "https://api.github.com/users/apaszke/received_events", "type": "User", "site_admin": false}, "body": "It should. `cuda` without device ordinal means the device currently set in the CUDA context, not device 0.", "created_at": "2018-05-28T09:50:47Z", "updated_at": "2018-11-23T15:44:40Z", "html_url": "https://github.com/pytorch/pytorch/pull/7869#discussion_r191164010", "pull_request_url": "https://api.github.com/repos/pytorch/pytorch/pulls/7869", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/191164010"}, "html": {"href": "https://github.com/pytorch/pytorch/pull/7869#discussion_r191164010"}, "pull_request": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/7869"}}, "body_html": "<p>It should. <code>cuda</code> without device ordinal means the device currently set in the CUDA context, not device 0.</p>", "body_text": "It should. cuda without device ordinal means the device currently set in the CUDA context, not device 0."}