{"url": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/193822533", "pull_request_review_id": 126873636, "id": 193822533, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5MzgyMjUzMw==", "diff_hunk": "@@ -0,0 +1,96 @@\n+#pragma once\n+\n+#include <ATen/Error.h>\n+#include <ATen/ScalarType.h>\n+#include <ATen/Tensor.h>\n+#include <ATen/Type.h>\n+#include <ATen/detail/CUDAHooksInterface.h>\n+#include <ATen/optional.h>\n+\n+#include <cstddef>\n+\n+namespace at {\n+/// RAII guard that sets the CUDA device index in its constructor, and changes\n+/// it back to the index that was originally active upon destruction.\n+///\n+/// The index is always reset to the one that was active at the time of\n+/// construction of the guard. Even if you `set_index` after construction, the\n+/// destructor will still reset the index to the one that was active at\n+/// construction time.\n+///\n+/// The index is represented by an `optional<int32_t>`. Both `nullopt` and `-1`\n+/// represent the default device. `nullopt` should be preferred, support for\n+/// `-1` is kept for legacy reasons.\n+struct AutoGPU {", "path": "aten/src/ATen/AutoGPU.h", "position": null, "original_position": 24, "commit_id": "c5b2af6a950b67445ad8916d364fd24456d7aa39", "original_commit_id": "c760d1cdac573d758f59013d06d1ae773a91bd26", "user": {"login": "goldsborough", "id": 6429851, "node_id": "MDQ6VXNlcjY0Mjk4NTE=", "avatar_url": "https://avatars3.githubusercontent.com/u/6429851?v=4", "gravatar_id": "", "url": "https://api.github.com/users/goldsborough", "html_url": "https://github.com/goldsborough", "followers_url": "https://api.github.com/users/goldsborough/followers", "following_url": "https://api.github.com/users/goldsborough/following{/other_user}", "gists_url": "https://api.github.com/users/goldsborough/gists{/gist_id}", "starred_url": "https://api.github.com/users/goldsborough/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/goldsborough/subscriptions", "organizations_url": "https://api.github.com/users/goldsborough/orgs", "repos_url": "https://api.github.com/users/goldsborough/repos", "events_url": "https://api.github.com/users/goldsborough/events{/privacy}", "received_events_url": "https://api.github.com/users/goldsborough/received_events", "type": "User", "site_admin": false}, "body": "I think calling it `DeviceGuard` and making it suitable for more general devices makes sense,  yes! I'll implement that", "created_at": "2018-06-07T17:05:18Z", "updated_at": "2018-11-23T15:45:10Z", "html_url": "https://github.com/pytorch/pytorch/pull/7869#discussion_r193822533", "pull_request_url": "https://api.github.com/repos/pytorch/pytorch/pulls/7869", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/193822533"}, "html": {"href": "https://github.com/pytorch/pytorch/pull/7869#discussion_r193822533"}, "pull_request": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/7869"}}, "body_html": "<p>I think calling it <code>DeviceGuard</code> and making it suitable for more general devices makes sense,  yes! I'll implement that</p>", "body_text": "I think calling it DeviceGuard and making it suitable for more general devices makes sense,  yes! I'll implement that", "in_reply_to_id": 193625666}