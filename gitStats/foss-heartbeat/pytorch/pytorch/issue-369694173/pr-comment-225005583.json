{"url": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/225005583", "pull_request_review_id": 164511313, "id": 225005583, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIyNTAwNTU4Mw==", "diff_hunk": "@@ -274,16 +270,27 @@ def declkey(decl):\n                 ])\n                 decl['has_tensor_options'] = True\n \n-    jit_decls = sort_decls(jit_decls)\n-    for decl in jit_decls:\n-        ops.append(OPERATOR.substitute(signature=signature(decl),\n-                                       op=emit_decl_variant(decl)))\n-\n-    # Sort the generated snippets to ensure that the generation is deterministic\n-    env = {\n-        'constructors': ops,\n-    }\n-    write(out, 'register_aten_ops.cpp', REGISTER_ATEN_OPS_CPP, env)\n+    # Group and sort the generated snippets to ensure that the\n+    # generation is deterministic\n+    jit_decl_groups = sort_decls(jit_decls)\n+\n+    # NOTE: see the comment at the top of the register_aten_ops.cpp\n+    # template regarding sharding of the generated files.\n+    num_shards = 3\n+    shards = [[] for _ in range(num_shards)]\n+\n+    # ops are assigned arbitrarily but stably to a file based on hash\n+    for group in jit_decl_groups:\n+        x = sum(ord(c) for c in group[0]['name']) % num_shards", "path": "tools/jit/gen_jit_dispatch.py", "position": 42, "original_position": 38, "commit_id": "05b09de249370f8785d4623dfc27d5d16158467d", "original_commit_id": "db57af7bb99f7c96e39500e5857aab04310623ba", "user": {"login": "apaszke", "id": 4583066, "node_id": "MDQ6VXNlcjQ1ODMwNjY=", "avatar_url": "https://avatars3.githubusercontent.com/u/4583066?v=4", "gravatar_id": "", "url": "https://api.github.com/users/apaszke", "html_url": "https://github.com/apaszke", "followers_url": "https://api.github.com/users/apaszke/followers", "following_url": "https://api.github.com/users/apaszke/following{/other_user}", "gists_url": "https://api.github.com/users/apaszke/gists{/gist_id}", "starred_url": "https://api.github.com/users/apaszke/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/apaszke/subscriptions", "organizations_url": "https://api.github.com/users/apaszke/orgs", "repos_url": "https://api.github.com/users/apaszke/repos", "events_url": "https://api.github.com/users/apaszke/events{/privacy}", "received_events_url": "https://api.github.com/users/apaszke/received_events", "type": "User", "site_admin": false}, "body": "No, `hash` is not guaranteed to be consistent, and in fact won't be in many situations. We need to have our own custom function", "created_at": "2018-10-14T19:30:21Z", "updated_at": "2018-11-23T15:52:59Z", "html_url": "https://github.com/pytorch/pytorch/pull/12615#discussion_r225005583", "pull_request_url": "https://api.github.com/repos/pytorch/pytorch/pulls/12615", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/225005583"}, "html": {"href": "https://github.com/pytorch/pytorch/pull/12615#discussion_r225005583"}, "pull_request": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/12615"}}, "body_html": "<p>No, <code>hash</code> is not guaranteed to be consistent, and in fact won't be in many situations. We need to have our own custom function</p>", "body_text": "No, hash is not guaranteed to be consistent, and in fact won't be in many situations. We need to have our own custom function", "in_reply_to_id": 224973807}