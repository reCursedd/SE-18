{"url": "https://api.github.com/repos/pytorch/pytorch/pulls/13195", "id": 226252073, "node_id": "MDExOlB1bGxSZXF1ZXN0MjI2MjUyMDcz", "html_url": "https://github.com/pytorch/pytorch/pull/13195", "diff_url": "https://github.com/pytorch/pytorch/pull/13195.diff", "patch_url": "https://github.com/pytorch/pytorch/pull/13195.patch", "issue_url": "https://api.github.com/repos/pytorch/pytorch/issues/13195", "number": 13195, "state": "closed", "locked": false, "title": "[Pytorch][ONNX]Fix EraseListConstruct pass during ONNX export", "user": {"login": "wanchaol", "id": 9443650, "node_id": "MDQ6VXNlcjk0NDM2NTA=", "avatar_url": "https://avatars2.githubusercontent.com/u/9443650?v=4", "gravatar_id": "", "url": "https://api.github.com/users/wanchaol", "html_url": "https://github.com/wanchaol", "followers_url": "https://api.github.com/users/wanchaol/followers", "following_url": "https://api.github.com/users/wanchaol/following{/other_user}", "gists_url": "https://api.github.com/users/wanchaol/gists{/gist_id}", "starred_url": "https://api.github.com/users/wanchaol/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/wanchaol/subscriptions", "organizations_url": "https://api.github.com/users/wanchaol/orgs", "repos_url": "https://api.github.com/users/wanchaol/repos", "events_url": "https://api.github.com/users/wanchaol/events{/privacy}", "received_events_url": "https://api.github.com/users/wanchaol/received_events", "type": "User", "site_admin": false}, "body": "There should really be a single place to erase or do special treatment to the prim::ListConstruct during ONNX export, this will make it consistent across different calls. e.g it will give a correct output graph in the following case: \r\n```python\r\nclass Test(torch.nn.Module):\r\n    def forward(self, input):\r\n        return torch.cat([input, torch.zeros(input.size(0), 1).type_as(input)], dim=1)\r\n```\r\nBefore this PR, we have the onnx graph as:\r\n\r\n```\r\ngraph(%0 : Byte(2, 3)) {\r\n  %1 : Long() = onnx::Constant[value={0}](), scope: Test\r\n  %2 : Dynamic = onnx::Shape(%0), scope: Test\r\n  %3 : Long() = onnx::Gather[axis=0](%2, %1), scope: Test\r\n  %4 : Long() = onnx::Constant[value={1}](), scope: Test\r\n  %5 : Dynamic = onnx::Unsqueeze[axes=[0]](%3)\r\n  %6 : Dynamic = onnx::Unsqueeze[axes=[0]](%4)\r\n  %7 : int[] = onnx::Concat[axis=0](%5, %6)\r\n  %8 : Float(2, 1) = onnx::ConstantFill[dtype=1, input_as_shape=1, value=0](%7), scope: Test\r\n  %9 : Byte(2, 1) = onnx::Cast[to=2](%8), scope: Test\r\n  %10 : Byte(2, 4) = onnx::Concat[axis=1](%0, %9), scope: Test\r\n  return (%10);\r\n}\r\n\r\n```\r\nWhich is wrong since onnx does not have a concept of `int[]`, here is the onnx graph after this PR:\r\n```\r\ngraph(%0 : Byte(2, 3)) {\r\n  %1 : Long() = onnx::Constant[value={0}](), scope: Test\r\n  %2 : Dynamic = onnx::Shape(%0), scope: Test\r\n  %3 : Long() = onnx::Gather[axis=0](%2, %1), scope: Test\r\n  %4 : Long() = onnx::Constant[value={1}](), scope: Test\r\n  %5 : Dynamic = onnx::Unsqueeze[axes=[0]](%3)\r\n  %6 : Dynamic = onnx::Unsqueeze[axes=[0]](%4)\r\n  %7 : Dynamic = onnx::Concat[axis=0](%5, %6)\r\n  %8 : Float(2, 1) = onnx::ConstantFill[dtype=1, input_as_shape=1, value=0](%7), scope: Test\r\n  %9 : Byte(2, 1) = onnx::Cast[to=2](%8), scope: Test\r\n  %10 : Byte(2, 4) = onnx::Concat[axis=1](%0, %9), scope: Test\r\n  return (%10);\r\n}\r\n```", "created_at": "2018-10-26T23:43:21Z", "updated_at": "2018-11-02T22:13:53Z", "closed_at": "2018-11-02T22:10:40Z", "merged_at": null, "merge_commit_sha": "529d55f1d0417795a6141f1741555647fbf77c6e", "assignee": null, "assignees": [], "requested_reviewers": [], "requested_teams": [], "labels": [], "milestone": null, "commits_url": "https://api.github.com/repos/pytorch/pytorch/pulls/13195/commits", "review_comments_url": "https://api.github.com/repos/pytorch/pytorch/pulls/13195/comments", "review_comment_url": "https://api.github.com/repos/pytorch/pytorch/pulls/comments{/number}", "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/13195/comments", "statuses_url": "https://api.github.com/repos/pytorch/pytorch/statuses/85224f45ba73c75d8af3835593192b8c1342ce82", "head": {"label": "wanchaol:primlist", "ref": "primlist", "sha": "85224f45ba73c75d8af3835593192b8c1342ce82", "user": {"login": "wanchaol", "id": 9443650, "node_id": "MDQ6VXNlcjk0NDM2NTA=", "avatar_url": "https://avatars2.githubusercontent.com/u/9443650?v=4", "gravatar_id": "", "url": "https://api.github.com/users/wanchaol", "html_url": "https://github.com/wanchaol", "followers_url": "https://api.github.com/users/wanchaol/followers", "following_url": "https://api.github.com/users/wanchaol/following{/other_user}", "gists_url": "https://api.github.com/users/wanchaol/gists{/gist_id}", "starred_url": "https://api.github.com/users/wanchaol/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/wanchaol/subscriptions", "organizations_url": "https://api.github.com/users/wanchaol/orgs", "repos_url": "https://api.github.com/users/wanchaol/repos", "events_url": "https://api.github.com/users/wanchaol/events{/privacy}", "received_events_url": "https://api.github.com/users/wanchaol/received_events", "type": "User", "site_admin": false}, "repo": {"id": 136970431, "node_id": "MDEwOlJlcG9zaXRvcnkxMzY5NzA0MzE=", "name": "pytorch", "full_name": "wanchaol/pytorch", "private": false, "owner": {"login": "wanchaol", "id": 9443650, "node_id": "MDQ6VXNlcjk0NDM2NTA=", "avatar_url": "https://avatars2.githubusercontent.com/u/9443650?v=4", "gravatar_id": "", "url": "https://api.github.com/users/wanchaol", "html_url": "https://github.com/wanchaol", "followers_url": "https://api.github.com/users/wanchaol/followers", "following_url": "https://api.github.com/users/wanchaol/following{/other_user}", "gists_url": "https://api.github.com/users/wanchaol/gists{/gist_id}", "starred_url": "https://api.github.com/users/wanchaol/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/wanchaol/subscriptions", "organizations_url": "https://api.github.com/users/wanchaol/orgs", "repos_url": "https://api.github.com/users/wanchaol/repos", "events_url": "https://api.github.com/users/wanchaol/events{/privacy}", "received_events_url": "https://api.github.com/users/wanchaol/received_events", "type": "User", "site_admin": false}, "html_url": "https://github.com/wanchaol/pytorch", "description": "Tensors and Dynamic neural networks in Python  with strong GPU acceleration", "fork": true, "url": "https://api.github.com/repos/wanchaol/pytorch", "forks_url": "https://api.github.com/repos/wanchaol/pytorch/forks", "keys_url": "https://api.github.com/repos/wanchaol/pytorch/keys{/key_id}", "collaborators_url": "https://api.github.com/repos/wanchaol/pytorch/collaborators{/collaborator}", "teams_url": "https://api.github.com/repos/wanchaol/pytorch/teams", "hooks_url": "https://api.github.com/repos/wanchaol/pytorch/hooks", "issue_events_url": "https://api.github.com/repos/wanchaol/pytorch/issues/events{/number}", "events_url": "https://api.github.com/repos/wanchaol/pytorch/events", "assignees_url": "https://api.github.com/repos/wanchaol/pytorch/assignees{/user}", "branches_url": "https://api.github.com/repos/wanchaol/pytorch/branches{/branch}", "tags_url": "https://api.github.com/repos/wanchaol/pytorch/tags", "blobs_url": "https://api.github.com/repos/wanchaol/pytorch/git/blobs{/sha}", "git_tags_url": "https://api.github.com/repos/wanchaol/pytorch/git/tags{/sha}", "git_refs_url": "https://api.github.com/repos/wanchaol/pytorch/git/refs{/sha}", "trees_url": "https://api.github.com/repos/wanchaol/pytorch/git/trees{/sha}", "statuses_url": "https://api.github.com/repos/wanchaol/pytorch/statuses/{sha}", "languages_url": "https://api.github.com/repos/wanchaol/pytorch/languages", "stargazers_url": "https://api.github.com/repos/wanchaol/pytorch/stargazers", "contributors_url": "https://api.github.com/repos/wanchaol/pytorch/contributors", "subscribers_url": "https://api.github.com/repos/wanchaol/pytorch/subscribers", "subscription_url": "https://api.github.com/repos/wanchaol/pytorch/subscription", "commits_url": "https://api.github.com/repos/wanchaol/pytorch/commits{/sha}", "git_commits_url": "https://api.github.com/repos/wanchaol/pytorch/git/commits{/sha}", "comments_url": "https://api.github.com/repos/wanchaol/pytorch/comments{/number}", "issue_comment_url": "https://api.github.com/repos/wanchaol/pytorch/issues/comments{/number}", "contents_url": "https://api.github.com/repos/wanchaol/pytorch/contents/{+path}", "compare_url": "https://api.github.com/repos/wanchaol/pytorch/compare/{base}...{head}", "merges_url": "https://api.github.com/repos/wanchaol/pytorch/merges", "archive_url": "https://api.github.com/repos/wanchaol/pytorch/{archive_format}{/ref}", "downloads_url": "https://api.github.com/repos/wanchaol/pytorch/downloads", "issues_url": "https://api.github.com/repos/wanchaol/pytorch/issues{/number}", "pulls_url": "https://api.github.com/repos/wanchaol/pytorch/pulls{/number}", "milestones_url": "https://api.github.com/repos/wanchaol/pytorch/milestones{/number}", "notifications_url": "https://api.github.com/repos/wanchaol/pytorch/notifications{?since,all,participating}", "labels_url": "https://api.github.com/repos/wanchaol/pytorch/labels{/name}", "releases_url": "https://api.github.com/repos/wanchaol/pytorch/releases{/id}", "deployments_url": "https://api.github.com/repos/wanchaol/pytorch/deployments", "created_at": "2018-06-11T19:16:03Z", "updated_at": "2018-11-21T02:26:46Z", "pushed_at": "2018-11-24T07:42:52Z", "git_url": "git://github.com/wanchaol/pytorch.git", "ssh_url": "git@github.com:wanchaol/pytorch.git", "clone_url": "https://github.com/wanchaol/pytorch.git", "svn_url": "https://github.com/wanchaol/pytorch", "homepage": "http://pytorch.org", "size": 86613, "stargazers_count": 0, "watchers_count": 0, "language": "C++", "has_issues": false, "has_projects": true, "has_downloads": true, "has_wiki": true, "has_pages": false, "forks_count": 0, "mirror_url": null, "archived": false, "open_issues_count": 0, "license": {"key": "other", "name": "Other", "spdx_id": "NOASSERTION", "url": null, "node_id": "MDc6TGljZW5zZTA="}, "forks": 0, "open_issues": 0, "watchers": 0, "default_branch": "master"}}, "base": {"label": "pytorch:master", "ref": "master", "sha": "cb5f374f6ca4abf9fd7072ecd52b1ce8886980c5", "user": {"login": "pytorch", "id": 21003710, "node_id": "MDEyOk9yZ2FuaXphdGlvbjIxMDAzNzEw", "avatar_url": "https://avatars3.githubusercontent.com/u/21003710?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pytorch", "html_url": "https://github.com/pytorch", "followers_url": "https://api.github.com/users/pytorch/followers", "following_url": "https://api.github.com/users/pytorch/following{/other_user}", "gists_url": "https://api.github.com/users/pytorch/gists{/gist_id}", "starred_url": "https://api.github.com/users/pytorch/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pytorch/subscriptions", "organizations_url": "https://api.github.com/users/pytorch/orgs", "repos_url": "https://api.github.com/users/pytorch/repos", "events_url": "https://api.github.com/users/pytorch/events{/privacy}", "received_events_url": "https://api.github.com/users/pytorch/received_events", "type": "Organization", "site_admin": false}, "repo": {"id": 65600975, "node_id": "MDEwOlJlcG9zaXRvcnk2NTYwMDk3NQ==", "name": "pytorch", "full_name": "pytorch/pytorch", "private": false, "owner": {"login": "pytorch", "id": 21003710, "node_id": "MDEyOk9yZ2FuaXphdGlvbjIxMDAzNzEw", "avatar_url": "https://avatars3.githubusercontent.com/u/21003710?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pytorch", "html_url": "https://github.com/pytorch", "followers_url": "https://api.github.com/users/pytorch/followers", "following_url": "https://api.github.com/users/pytorch/following{/other_user}", "gists_url": "https://api.github.com/users/pytorch/gists{/gist_id}", "starred_url": "https://api.github.com/users/pytorch/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pytorch/subscriptions", "organizations_url": "https://api.github.com/users/pytorch/orgs", "repos_url": "https://api.github.com/users/pytorch/repos", "events_url": "https://api.github.com/users/pytorch/events{/privacy}", "received_events_url": "https://api.github.com/users/pytorch/received_events", "type": "Organization", "site_admin": false}, "html_url": "https://github.com/pytorch/pytorch", "description": "Tensors and Dynamic neural networks in Python  with strong GPU acceleration", "fork": false, "url": "https://api.github.com/repos/pytorch/pytorch", "forks_url": "https://api.github.com/repos/pytorch/pytorch/forks", "keys_url": "https://api.github.com/repos/pytorch/pytorch/keys{/key_id}", "collaborators_url": "https://api.github.com/repos/pytorch/pytorch/collaborators{/collaborator}", "teams_url": "https://api.github.com/repos/pytorch/pytorch/teams", "hooks_url": "https://api.github.com/repos/pytorch/pytorch/hooks", "issue_events_url": "https://api.github.com/repos/pytorch/pytorch/issues/events{/number}", "events_url": "https://api.github.com/repos/pytorch/pytorch/events", "assignees_url": "https://api.github.com/repos/pytorch/pytorch/assignees{/user}", "branches_url": "https://api.github.com/repos/pytorch/pytorch/branches{/branch}", "tags_url": "https://api.github.com/repos/pytorch/pytorch/tags", "blobs_url": "https://api.github.com/repos/pytorch/pytorch/git/blobs{/sha}", "git_tags_url": "https://api.github.com/repos/pytorch/pytorch/git/tags{/sha}", "git_refs_url": "https://api.github.com/repos/pytorch/pytorch/git/refs{/sha}", "trees_url": "https://api.github.com/repos/pytorch/pytorch/git/trees{/sha}", "statuses_url": "https://api.github.com/repos/pytorch/pytorch/statuses/{sha}", "languages_url": "https://api.github.com/repos/pytorch/pytorch/languages", "stargazers_url": "https://api.github.com/repos/pytorch/pytorch/stargazers", "contributors_url": "https://api.github.com/repos/pytorch/pytorch/contributors", "subscribers_url": "https://api.github.com/repos/pytorch/pytorch/subscribers", "subscription_url": "https://api.github.com/repos/pytorch/pytorch/subscription", "commits_url": "https://api.github.com/repos/pytorch/pytorch/commits{/sha}", "git_commits_url": "https://api.github.com/repos/pytorch/pytorch/git/commits{/sha}", "comments_url": "https://api.github.com/repos/pytorch/pytorch/comments{/number}", "issue_comment_url": "https://api.github.com/repos/pytorch/pytorch/issues/comments{/number}", "contents_url": "https://api.github.com/repos/pytorch/pytorch/contents/{+path}", "compare_url": "https://api.github.com/repos/pytorch/pytorch/compare/{base}...{head}", "merges_url": "https://api.github.com/repos/pytorch/pytorch/merges", "archive_url": "https://api.github.com/repos/pytorch/pytorch/{archive_format}{/ref}", "downloads_url": "https://api.github.com/repos/pytorch/pytorch/downloads", "issues_url": "https://api.github.com/repos/pytorch/pytorch/issues{/number}", "pulls_url": "https://api.github.com/repos/pytorch/pytorch/pulls{/number}", "milestones_url": "https://api.github.com/repos/pytorch/pytorch/milestones{/number}", "notifications_url": "https://api.github.com/repos/pytorch/pytorch/notifications{?since,all,participating}", "labels_url": "https://api.github.com/repos/pytorch/pytorch/labels{/name}", "releases_url": "https://api.github.com/repos/pytorch/pytorch/releases{/id}", "deployments_url": "https://api.github.com/repos/pytorch/pytorch/deployments", "created_at": "2016-08-13T05:26:41Z", "updated_at": "2018-11-24T12:35:43Z", "pushed_at": "2018-11-24T12:42:01Z", "git_url": "git://github.com/pytorch/pytorch.git", "ssh_url": "git@github.com:pytorch/pytorch.git", "clone_url": "https://github.com/pytorch/pytorch.git", "svn_url": "https://github.com/pytorch/pytorch", "homepage": "http://pytorch.org", "size": 89656, "stargazers_count": 21589, "watchers_count": 21589, "language": "C++", "has_issues": true, "has_projects": true, "has_downloads": true, "has_wiki": true, "has_pages": false, "forks_count": 5153, "mirror_url": null, "archived": false, "open_issues_count": 2196, "license": {"key": "other", "name": "Other", "spdx_id": "NOASSERTION", "url": null, "node_id": "MDc6TGljZW5zZTA="}, "forks": 5153, "open_issues": 2196, "watchers": 21589, "default_branch": "master"}}, "_links": {"self": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/13195"}, "html": {"href": "https://github.com/pytorch/pytorch/pull/13195"}, "issue": {"href": "https://api.github.com/repos/pytorch/pytorch/issues/13195"}, "comments": {"href": "https://api.github.com/repos/pytorch/pytorch/issues/13195/comments"}, "review_comments": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/13195/comments"}, "review_comment": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/comments{/number}"}, "commits": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/13195/commits"}, "statuses": {"href": "https://api.github.com/repos/pytorch/pytorch/statuses/85224f45ba73c75d8af3835593192b8c1342ce82"}}, "author_association": "CONTRIBUTOR", "body_html": "<p>There should really be a single place to erase or do special treatment to the prim::ListConstruct during ONNX export, this will make it consistent across different calls. e.g it will give a correct output graph in the following case:</p>\n<div class=\"highlight highlight-source-python\"><pre><span class=\"pl-k\">class</span> <span class=\"pl-en\">Test</span>(<span class=\"pl-e\">torch</span>.<span class=\"pl-e\">nn</span>.<span class=\"pl-e\">Module</span>):\n    <span class=\"pl-k\">def</span> <span class=\"pl-en\">forward</span>(<span class=\"pl-smi\"><span class=\"pl-smi\">self</span></span>, <span class=\"pl-smi\">input</span>):\n        <span class=\"pl-k\">return</span> torch.cat([<span class=\"pl-c1\">input</span>, torch.zeros(<span class=\"pl-c1\">input</span>.size(<span class=\"pl-c1\">0</span>), <span class=\"pl-c1\">1</span>).type_as(<span class=\"pl-c1\">input</span>)], <span class=\"pl-v\">dim</span><span class=\"pl-k\">=</span><span class=\"pl-c1\">1</span>)</pre></div>\n<p>Before this PR, we have the onnx graph as:</p>\n<pre><code>graph(%0 : Byte(2, 3)) {\n  %1 : Long() = onnx::Constant[value={0}](), scope: Test\n  %2 : Dynamic = onnx::Shape(%0), scope: Test\n  %3 : Long() = onnx::Gather[axis=0](%2, %1), scope: Test\n  %4 : Long() = onnx::Constant[value={1}](), scope: Test\n  %5 : Dynamic = onnx::Unsqueeze[axes=[0]](%3)\n  %6 : Dynamic = onnx::Unsqueeze[axes=[0]](%4)\n  %7 : int[] = onnx::Concat[axis=0](%5, %6)\n  %8 : Float(2, 1) = onnx::ConstantFill[dtype=1, input_as_shape=1, value=0](%7), scope: Test\n  %9 : Byte(2, 1) = onnx::Cast[to=2](%8), scope: Test\n  %10 : Byte(2, 4) = onnx::Concat[axis=1](%0, %9), scope: Test\n  return (%10);\n}\n\n</code></pre>\n<p>Which is wrong since onnx does not have a concept of <code>int[]</code>, here is the onnx graph after this PR:</p>\n<pre><code>graph(%0 : Byte(2, 3)) {\n  %1 : Long() = onnx::Constant[value={0}](), scope: Test\n  %2 : Dynamic = onnx::Shape(%0), scope: Test\n  %3 : Long() = onnx::Gather[axis=0](%2, %1), scope: Test\n  %4 : Long() = onnx::Constant[value={1}](), scope: Test\n  %5 : Dynamic = onnx::Unsqueeze[axes=[0]](%3)\n  %6 : Dynamic = onnx::Unsqueeze[axes=[0]](%4)\n  %7 : Dynamic = onnx::Concat[axis=0](%5, %6)\n  %8 : Float(2, 1) = onnx::ConstantFill[dtype=1, input_as_shape=1, value=0](%7), scope: Test\n  %9 : Byte(2, 1) = onnx::Cast[to=2](%8), scope: Test\n  %10 : Byte(2, 4) = onnx::Concat[axis=1](%0, %9), scope: Test\n  return (%10);\n}\n</code></pre>", "body_text": "There should really be a single place to erase or do special treatment to the prim::ListConstruct during ONNX export, this will make it consistent across different calls. e.g it will give a correct output graph in the following case:\nclass Test(torch.nn.Module):\n    def forward(self, input):\n        return torch.cat([input, torch.zeros(input.size(0), 1).type_as(input)], dim=1)\nBefore this PR, we have the onnx graph as:\ngraph(%0 : Byte(2, 3)) {\n  %1 : Long() = onnx::Constant[value={0}](), scope: Test\n  %2 : Dynamic = onnx::Shape(%0), scope: Test\n  %3 : Long() = onnx::Gather[axis=0](%2, %1), scope: Test\n  %4 : Long() = onnx::Constant[value={1}](), scope: Test\n  %5 : Dynamic = onnx::Unsqueeze[axes=[0]](%3)\n  %6 : Dynamic = onnx::Unsqueeze[axes=[0]](%4)\n  %7 : int[] = onnx::Concat[axis=0](%5, %6)\n  %8 : Float(2, 1) = onnx::ConstantFill[dtype=1, input_as_shape=1, value=0](%7), scope: Test\n  %9 : Byte(2, 1) = onnx::Cast[to=2](%8), scope: Test\n  %10 : Byte(2, 4) = onnx::Concat[axis=1](%0, %9), scope: Test\n  return (%10);\n}\n\n\nWhich is wrong since onnx does not have a concept of int[], here is the onnx graph after this PR:\ngraph(%0 : Byte(2, 3)) {\n  %1 : Long() = onnx::Constant[value={0}](), scope: Test\n  %2 : Dynamic = onnx::Shape(%0), scope: Test\n  %3 : Long() = onnx::Gather[axis=0](%2, %1), scope: Test\n  %4 : Long() = onnx::Constant[value={1}](), scope: Test\n  %5 : Dynamic = onnx::Unsqueeze[axes=[0]](%3)\n  %6 : Dynamic = onnx::Unsqueeze[axes=[0]](%4)\n  %7 : Dynamic = onnx::Concat[axis=0](%5, %6)\n  %8 : Float(2, 1) = onnx::ConstantFill[dtype=1, input_as_shape=1, value=0](%7), scope: Test\n  %9 : Byte(2, 1) = onnx::Cast[to=2](%8), scope: Test\n  %10 : Byte(2, 4) = onnx::Concat[axis=1](%0, %9), scope: Test\n  return (%10);\n}", "merged": false, "mergeable": null, "rebaseable": null, "mergeable_state": "unknown", "merged_by": null, "comments": 0, "review_comments": 0, "maintainer_can_modify": false, "commits": 3, "additions": 46, "deletions": 16, "changed_files": 4}