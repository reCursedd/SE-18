{"url": "https://api.github.com/repos/pytorch/pytorch/issues/comments/412174326", "html_url": "https://github.com/pytorch/pytorch/issues/10402#issuecomment-412174326", "issue_url": "https://api.github.com/repos/pytorch/pytorch/issues/10402", "id": 412174326, "node_id": "MDEyOklzc3VlQ29tbWVudDQxMjE3NDMyNg==", "user": {"login": "SsnL", "id": 5674597, "node_id": "MDQ6VXNlcjU2NzQ1OTc=", "avatar_url": "https://avatars2.githubusercontent.com/u/5674597?v=4", "gravatar_id": "", "url": "https://api.github.com/users/SsnL", "html_url": "https://github.com/SsnL", "followers_url": "https://api.github.com/users/SsnL/followers", "following_url": "https://api.github.com/users/SsnL/following{/other_user}", "gists_url": "https://api.github.com/users/SsnL/gists{/gist_id}", "starred_url": "https://api.github.com/users/SsnL/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/SsnL/subscriptions", "organizations_url": "https://api.github.com/users/SsnL/orgs", "repos_url": "https://api.github.com/users/SsnL/repos", "events_url": "https://api.github.com/users/SsnL/events{/privacy}", "received_events_url": "https://api.github.com/users/SsnL/received_events", "type": "User", "site_admin": false}, "created_at": "2018-08-10T18:55:24Z", "updated_at": "2018-08-10T18:55:24Z", "author_association": "CONTRIBUTOR", "body_html": "<p><a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=1310570\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/soumith\">@soumith</a> I disagree. We should use <code>reshape</code>, but not on every slice, instead, we should do <code>self = self.reshape(self.size(0), -1)</code> and just use slice in the loop. <code>reshape</code> is nicer because it doesn't copy if the strides are compatible. E.g., considering tensor</p>\n<pre><code>// can come from a_2x3x4_tensor[:, :, ::2]\n\nsizes:   [2, 3, 2]\nstrides: [12, 4, 2]\n</code></pre>\n<p>Then <code>self.reshape(self.size(0), -1)</code> gives you a view with</p>\n<pre><code>sizes:   [2, 6]\nstrides: [12, 2]\n</code></pre>\n<p>but <code>contiguous</code> copies.</p>", "body_text": "@soumith I disagree. We should use reshape, but not on every slice, instead, we should do self = self.reshape(self.size(0), -1) and just use slice in the loop. reshape is nicer because it doesn't copy if the strides are compatible. E.g., considering tensor\n// can come from a_2x3x4_tensor[:, :, ::2]\n\nsizes:   [2, 3, 2]\nstrides: [12, 4, 2]\n\nThen self.reshape(self.size(0), -1) gives you a view with\nsizes:   [2, 6]\nstrides: [12, 2]\n\nbut contiguous copies.", "body": "@soumith I disagree. We should use `reshape`, but not on every slice, instead, we should do `self = self.reshape(self.size(0), -1)` and just use slice in the loop. `reshape` is nicer because it doesn't copy if the strides are compatible. E.g., considering tensor \r\n```\r\n// can come from a_2x3x4_tensor[:, :, ::2]\r\n\r\nsizes:   [2, 3, 2]\r\nstrides: [12, 4, 2]\r\n```\r\nThen `self.reshape(self.size(0), -1)` gives you a view with\r\n```\r\nsizes:   [2, 6]\r\nstrides: [12, 2]\r\n```\r\nbut `contiguous` copies."}