{"url": "https://api.github.com/repos/pytorch/pytorch/issues/10402", "repository_url": "https://api.github.com/repos/pytorch/pytorch", "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/10402/labels{/name}", "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/10402/comments", "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/10402/events", "html_url": "https://github.com/pytorch/pytorch/issues/10402", "id": 349548318, "node_id": "MDU6SXNzdWUzNDk1NDgzMTg=", "number": 10402, "title": "Error on printing non-contiguous tensors", "user": {"login": "ptrblck", "id": 11662379, "node_id": "MDQ6VXNlcjExNjYyMzc5", "avatar_url": "https://avatars3.githubusercontent.com/u/11662379?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ptrblck", "html_url": "https://github.com/ptrblck", "followers_url": "https://api.github.com/users/ptrblck/followers", "following_url": "https://api.github.com/users/ptrblck/following{/other_user}", "gists_url": "https://api.github.com/users/ptrblck/gists{/gist_id}", "starred_url": "https://api.github.com/users/ptrblck/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ptrblck/subscriptions", "organizations_url": "https://api.github.com/users/ptrblck/orgs", "repos_url": "https://api.github.com/users/ptrblck/repos", "events_url": "https://api.github.com/users/ptrblck/events{/privacy}", "received_events_url": "https://api.github.com/users/ptrblck/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 10, "created_at": "2018-08-10T14:57:47Z", "updated_at": "2018-08-14T13:35:03Z", "closed_at": "2018-08-14T13:35:03Z", "author_association": "CONTRIBUTOR", "body_html": "<h2>Issue description</h2>\n<p><code>get_summarized_data</code> in <code>_tensor_str.py</code> crashes when (unintentionally) a non-contiguous <code>tensor</code> is printed.<br>\nThe <code>.view(-1)</code> call in <a href=\"https://github.com/pytorch/pytorch/blob/e9ad74357e43d90f773abe31de88bd5f61db23eb/torch/_tensor_str.py#L216\">this line of code</a> throws an error, as <code>view(-1)</code> cannot be called on an non-contiguous <code>tensor</code>.</p>\n<h2>Code example</h2>\n<div class=\"highlight highlight-source-python\"><pre><span class=\"pl-k\">import</span> torch\n<span class=\"pl-k\">import</span> torch.nn <span class=\"pl-k\">as</span> nn\n\nbatch_size <span class=\"pl-k\">=</span> <span class=\"pl-c1\">10</span>\nchannels <span class=\"pl-k\">=</span> <span class=\"pl-c1\">3</span>\nh, w <span class=\"pl-k\">=</span> <span class=\"pl-c1\">16</span>, <span class=\"pl-c1\">16</span>\nx <span class=\"pl-k\">=</span> torch.randn(batch_size, channels, h, w)\n\npool <span class=\"pl-k\">=</span> nn.AvgPool2d((<span class=\"pl-c1\">1</span>, <span class=\"pl-c1\">2</span>), (<span class=\"pl-c1\">1</span>, <span class=\"pl-c1\">2</span>))\noutput <span class=\"pl-k\">=</span> pool(x)\noutput <span class=\"pl-k\">=</span> output.view(batch_size, channels, h<span class=\"pl-k\">//</span><span class=\"pl-c1\">2</span>, <span class=\"pl-c1\">2</span>, w<span class=\"pl-k\">//</span><span class=\"pl-c1\">2</span>)\n<span class=\"pl-c1\">print</span>(output.select(<span class=\"pl-c1\">3</span>, <span class=\"pl-c1\">1</span>).mul_(<span class=\"pl-k\">-</span><span class=\"pl-c1\">1</span>))</pre></div>\n<p>This code snippet crashes in the last line. I've noticed this issue while working in the Spyder IDE (REPL), where the line of code is also printed without the explicit <code>print</code> statement.</p>\n<h2>System Info</h2>\n<p>Noticed this in all versions <code>&gt; 0.4.0</code>, i.e. <code>0.4.1</code> and <code>0.5.0a0+1a0f4b5</code>.<br>\n<a href=\"https://github.com/pytorch/pytorch/commit/90e75c65286b3799ebfd4e69d1ce0890519e581f#diff-f4eb2d7bbb99a6ea648fcc476f38659eR200\">This commit</a> seems to be related to this issue.</p>\n<h2>Workaround</h2>\n<p>We could call <code>self = self.contiguous()</code> before the line in question.<br>\nIf <code>self</code> is already contiguous, this should result in a no-op.</p>\n<p>I'll create a PR with this fix.</p>", "body_text": "Issue description\nget_summarized_data in _tensor_str.py crashes when (unintentionally) a non-contiguous tensor is printed.\nThe .view(-1) call in this line of code throws an error, as view(-1) cannot be called on an non-contiguous tensor.\nCode example\nimport torch\nimport torch.nn as nn\n\nbatch_size = 10\nchannels = 3\nh, w = 16, 16\nx = torch.randn(batch_size, channels, h, w)\n\npool = nn.AvgPool2d((1, 2), (1, 2))\noutput = pool(x)\noutput = output.view(batch_size, channels, h//2, 2, w//2)\nprint(output.select(3, 1).mul_(-1))\nThis code snippet crashes in the last line. I've noticed this issue while working in the Spyder IDE (REPL), where the line of code is also printed without the explicit print statement.\nSystem Info\nNoticed this in all versions > 0.4.0, i.e. 0.4.1 and 0.5.0a0+1a0f4b5.\nThis commit seems to be related to this issue.\nWorkaround\nWe could call self = self.contiguous() before the line in question.\nIf self is already contiguous, this should result in a no-op.\nI'll create a PR with this fix.", "body": "## Issue description\r\n\r\n`get_summarized_data` in `_tensor_str.py` crashes when (unintentionally) a non-contiguous `tensor` is printed. \r\nThe `.view(-1)` call in [this line of code](https://github.com/pytorch/pytorch/blob/e9ad74357e43d90f773abe31de88bd5f61db23eb/torch/_tensor_str.py#L216) throws an error, as `view(-1)` cannot be called on an non-contiguous `tensor`.\r\n\r\n## Code example\r\n\r\n```python\r\nimport torch\r\nimport torch.nn as nn\r\n\r\nbatch_size = 10\r\nchannels = 3\r\nh, w = 16, 16\r\nx = torch.randn(batch_size, channels, h, w)\r\n\r\npool = nn.AvgPool2d((1, 2), (1, 2))\r\noutput = pool(x)\r\noutput = output.view(batch_size, channels, h//2, 2, w//2)\r\nprint(output.select(3, 1).mul_(-1))\r\n```\r\n\r\nThis code snippet crashes in the last line. I've noticed this issue while working in the Spyder IDE (REPL), where the line of code is also printed without the explicit `print` statement.\r\n\r\n## System Info\r\n\r\nNoticed this in all versions `> 0.4.0`, i.e. `0.4.1` and `0.5.0a0+1a0f4b5`.\r\n[This commit](https://github.com/pytorch/pytorch/commit/90e75c65286b3799ebfd4e69d1ce0890519e581f#diff-f4eb2d7bbb99a6ea648fcc476f38659eR200) seems to be related to this issue.\r\n\r\n## Workaround\r\n\r\nWe could call `self = self.contiguous()` before the line in question.\r\nIf `self` is already contiguous, this should result in a no-op.\r\n\r\nI'll create a PR with this fix.\r\n"}