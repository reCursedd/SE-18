{"url": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/208390147", "pull_request_review_id": 144190891, "id": 208390147, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwODM5MDE0Nw==", "diff_hunk": "@@ -1274,16 +1274,25 @@ def parse_kwargs(desc):\n Computes the eigenvalues and eigenvectors of a real square matrix.\n \n Args:\n-    a (Tensor): the square matrix for which the eigenvalues and eigenvectors will be computed\n+    a (Tensor): the square matrix of shape :math:`(n \\times n)` for which the eigenvalues and eigenvectors\n+        will be computed\n     eigenvectors (bool): ``True`` to compute both eigenvalues and eigenvectors;\n         otherwise, only eigenvalues will be computed\n     out (tuple, optional): the output tensors\n \n Returns:\n     (Tensor, Tensor): A tuple containing\n \n-        - **e** (*Tensor*): the right eigenvalues of ``a``\n-        - **v** (*Tensor*): the eigenvectors of ``a`` if ``eigenvectors`` is ``True``; otherwise an empty tensor\n+        - **e** (*Tensor*): Shape :math:`(n \\times 2)`. Each row is an eigenvalue of ``a``,\n+            with the first element is the real part and the second element is the imanginary part.\n+            The eigenvalues are not necessarily ordered.\n+        - **v** (*Tensor*): If ``eigenvectors=False``, it's an empty tensor.\n+            Otherwise this tensor of shape :math:`(n \\times n)`, contains normalized (unit \u201clength\u201d) eigenvector info,", "path": "torch/_torch_docs.py", "position": null, "original_position": 20, "commit_id": "09bade0c90ae881365c03bd4ba912aa063dc62ae", "original_commit_id": "14c7dda2a11b68f4cd24501ea5abd1d980390192", "user": {"login": "ezyang", "id": 13564, "node_id": "MDQ6VXNlcjEzNTY0", "avatar_url": "https://avatars0.githubusercontent.com/u/13564?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ezyang", "html_url": "https://github.com/ezyang", "followers_url": "https://api.github.com/users/ezyang/followers", "following_url": "https://api.github.com/users/ezyang/following{/other_user}", "gists_url": "https://api.github.com/users/ezyang/gists{/gist_id}", "starred_url": "https://api.github.com/users/ezyang/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ezyang/subscriptions", "organizations_url": "https://api.github.com/users/ezyang/orgs", "repos_url": "https://api.github.com/users/ezyang/repos", "events_url": "https://api.github.com/users/ezyang/events{/privacy}", "received_events_url": "https://api.github.com/users/ezyang/received_events", "type": "User", "site_admin": false}, "body": "and I'd delete the comma before \"contains\"", "created_at": "2018-08-07T21:23:59Z", "updated_at": "2018-11-23T15:48:57Z", "html_url": "https://github.com/pytorch/pytorch/pull/10315#discussion_r208390147", "pull_request_url": "https://api.github.com/repos/pytorch/pytorch/pulls/10315", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/208390147"}, "html": {"href": "https://github.com/pytorch/pytorch/pull/10315#discussion_r208390147"}, "pull_request": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/10315"}}, "body_html": "<p>and I'd delete the comma before \"contains\"</p>", "body_text": "and I'd delete the comma before \"contains\"", "in_reply_to_id": 208390093}