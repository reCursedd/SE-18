{"url": "https://api.github.com/repos/pytorch/pytorch/issues/comments/429488049", "html_url": "https://github.com/pytorch/pytorch/pull/12188#issuecomment-429488049", "issue_url": "https://api.github.com/repos/pytorch/pytorch/issues/12188", "id": 429488049, "node_id": "MDEyOklzc3VlQ29tbWVudDQyOTQ4ODA0OQ==", "user": {"login": "xkszltl", "id": 5203025, "node_id": "MDQ6VXNlcjUyMDMwMjU=", "avatar_url": "https://avatars0.githubusercontent.com/u/5203025?v=4", "gravatar_id": "", "url": "https://api.github.com/users/xkszltl", "html_url": "https://github.com/xkszltl", "followers_url": "https://api.github.com/users/xkszltl/followers", "following_url": "https://api.github.com/users/xkszltl/following{/other_user}", "gists_url": "https://api.github.com/users/xkszltl/gists{/gist_id}", "starred_url": "https://api.github.com/users/xkszltl/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/xkszltl/subscriptions", "organizations_url": "https://api.github.com/users/xkszltl/orgs", "repos_url": "https://api.github.com/users/xkszltl/repos", "events_url": "https://api.github.com/users/xkszltl/events{/privacy}", "received_events_url": "https://api.github.com/users/xkszltl/received_events", "type": "User", "site_admin": false}, "created_at": "2018-10-12T23:22:31Z", "updated_at": "2018-10-12T23:22:31Z", "author_association": "CONTRIBUTOR", "body_html": "<p><a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=325476\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/xuhdev\">@xuhdev</a> Yes it's introduced to pybind11::pybind11 somewhere between 2.0 and 2.1.</p>\n<p>AFAIK it's not for internal use.<br>\nWhen <code>INTERFACE_INCLUDE_DIRECTORIES</code> is set, you'll get it automatically when do <code>target_link_library</code>, which is the desire behavior for modern C++, and <code>pybind11_INCLUDE_DIRS</code> is mainly for backward compatibility and can be deprecated in the future.</p>\n<p>If possible, would you be able to test your approach against the latest pybind release (v2.2.4)?<br>\nIf it works I think it's good to check it in.</p>", "body_text": "@xuhdev Yes it's introduced to pybind11::pybind11 somewhere between 2.0 and 2.1.\nAFAIK it's not for internal use.\nWhen INTERFACE_INCLUDE_DIRECTORIES is set, you'll get it automatically when do target_link_library, which is the desire behavior for modern C++, and pybind11_INCLUDE_DIRS is mainly for backward compatibility and can be deprecated in the future.\nIf possible, would you be able to test your approach against the latest pybind release (v2.2.4)?\nIf it works I think it's good to check it in.", "body": "@xuhdev Yes it's introduced to pybind11::pybind11 somewhere between 2.0 and 2.1.\r\n\r\nAFAIK it's not for internal use.\r\nWhen `INTERFACE_INCLUDE_DIRECTORIES` is set, you'll get it automatically when do `target_link_library`, which is the desire behavior for modern C++, and `pybind11_INCLUDE_DIRS` is mainly for backward compatibility and can be deprecated in the future.\r\n\r\nIf possible, would you be able to test your approach against the latest pybind release (v2.2.4)?\r\nIf it works I think it's good to check it in."}