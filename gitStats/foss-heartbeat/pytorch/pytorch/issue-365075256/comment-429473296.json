{"url": "https://api.github.com/repos/pytorch/pytorch/issues/comments/429473296", "html_url": "https://github.com/pytorch/pytorch/pull/12188#issuecomment-429473296", "issue_url": "https://api.github.com/repos/pytorch/pytorch/issues/12188", "id": 429473296, "node_id": "MDEyOklzc3VlQ29tbWVudDQyOTQ3MzI5Ng==", "user": {"login": "xuhdev", "id": 325476, "node_id": "MDQ6VXNlcjMyNTQ3Ng==", "avatar_url": "https://avatars1.githubusercontent.com/u/325476?v=4", "gravatar_id": "", "url": "https://api.github.com/users/xuhdev", "html_url": "https://github.com/xuhdev", "followers_url": "https://api.github.com/users/xuhdev/followers", "following_url": "https://api.github.com/users/xuhdev/following{/other_user}", "gists_url": "https://api.github.com/users/xuhdev/gists{/gist_id}", "starred_url": "https://api.github.com/users/xuhdev/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/xuhdev/subscriptions", "organizations_url": "https://api.github.com/users/xuhdev/orgs", "repos_url": "https://api.github.com/users/xuhdev/repos", "events_url": "https://api.github.com/users/xuhdev/events{/privacy}", "received_events_url": "https://api.github.com/users/xuhdev/received_events", "type": "User", "site_admin": false}, "created_at": "2018-10-12T21:53:58Z", "updated_at": "2018-10-12T21:53:58Z", "author_association": "CONTRIBUTOR", "body_html": "<p><a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=5203025\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/xkszltl\">@xkszltl</a>  Thanks for your review. I am on Debian Stretch, cmake 3.9.5, pybind 2.0.1 from distribution package.</p>\n<p>Ineed, my pybind version is older and <code>INTERFACE_INCLUDE_DIRECTORIES</code> was under a different scope (<code>pybind11::module</code>). But anyway, I'm wondering, since <code>pybind11_INCLUDE_DIRS</code> is <a href=\"https://github.com/pybind/pybind11/blob/534b756cb3244aca959359c07d44e4fed3498ba8/tools/pybind11Config.cmake.in#L95,L97\">always set when pybind11 is found</a>, is there a specific reason to set it explicitly from <code>INTERFACE_INCLUDE_DIRECTORIES</code>? From the <a href=\"https://github.com/pybind/pybind11/blob/534b756cb3244aca959359c07d44e4fed3498ba8/tools/pybind11Config.cmake.in#L95,L97\">same three lines</a>, it looks like <code>INTERFACE_INCLUDE_DIRECTORIES</code> is only used for internal purposes and its external use can be unstable...</p>", "body_text": "@xkszltl  Thanks for your review. I am on Debian Stretch, cmake 3.9.5, pybind 2.0.1 from distribution package.\nIneed, my pybind version is older and INTERFACE_INCLUDE_DIRECTORIES was under a different scope (pybind11::module). But anyway, I'm wondering, since pybind11_INCLUDE_DIRS is always set when pybind11 is found, is there a specific reason to set it explicitly from INTERFACE_INCLUDE_DIRECTORIES? From the same three lines, it looks like INTERFACE_INCLUDE_DIRECTORIES is only used for internal purposes and its external use can be unstable...", "body": "@xkszltl  Thanks for your review. I am on Debian Stretch, cmake 3.9.5, pybind 2.0.1 from distribution package.\r\n\r\nIneed, my pybind version is older and `INTERFACE_INCLUDE_DIRECTORIES` was under a different scope (`pybind11::module`). But anyway, I'm wondering, since `pybind11_INCLUDE_DIRS` is [always set when pybind11 is found](https://github.com/pybind/pybind11/blob/534b756cb3244aca959359c07d44e4fed3498ba8/tools/pybind11Config.cmake.in#L95,L97), is there a specific reason to set it explicitly from `INTERFACE_INCLUDE_DIRECTORIES`? From the [same three lines](https://github.com/pybind/pybind11/blob/534b756cb3244aca959359c07d44e4fed3498ba8/tools/pybind11Config.cmake.in#L95,L97), it looks like `INTERFACE_INCLUDE_DIRECTORIES` is only used for internal purposes and its external use can be unstable..."}