{"url": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/232003002", "pull_request_review_id": 173093248, "id": 232003002, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIzMjAwMzAwMg==", "diff_hunk": "@@ -49,6 +50,37 @@ class DataLoader {\n     }\n   }\n \n+  /// Constructs a new `DataLoader` from a `dataset`, `options`, and `Sampler`.", "path": "torch/csrc/api/include/torch/data/dataloader.h", "position": 21, "original_position": 21, "commit_id": "41208e442f929e8883fd0359e14f0d98466e0c85", "original_commit_id": "880aeebda0f9be2118eb95f99e50d9d620e7b43b", "user": {"login": "goldsborough", "id": 6429851, "node_id": "MDQ6VXNlcjY0Mjk4NTE=", "avatar_url": "https://avatars3.githubusercontent.com/u/6429851?v=4", "gravatar_id": "", "url": "https://api.github.com/users/goldsborough", "html_url": "https://github.com/goldsborough", "followers_url": "https://api.github.com/users/goldsborough/followers", "following_url": "https://api.github.com/users/goldsborough/following{/other_user}", "gists_url": "https://api.github.com/users/goldsborough/gists{/gist_id}", "starred_url": "https://api.github.com/users/goldsborough/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/goldsborough/subscriptions", "organizations_url": "https://api.github.com/users/goldsborough/orgs", "repos_url": "https://api.github.com/users/goldsborough/repos", "events_url": "https://api.github.com/users/goldsborough/events{/privacy}", "received_events_url": "https://api.github.com/users/goldsborough/received_events", "type": "User", "site_admin": false}, "body": "So, for this whole thing, if you're concerned about copying the dataset, can't you just do:\r\n\r\n```\r\nstruct MyVeryExpensiveToCopyDataset : ... { };\r\nstruct MyCheapToCopyDataset {\r\nstd::shared_ptr<MyVeryExpensiveToCopyDataset> dataset;\r\n};\r\n\r\nauto dataloader = \r\n    torch::data::make_data_loader(\r\n        MyCheapToCopyDataset{std::make_shared<MyVeryExpensiveToCopyDataset>()});\r\n```\r\n\r\nand then we could just re-use the previous constructor and not need any custom code at all?", "created_at": "2018-11-08T18:06:00Z", "updated_at": "2018-11-23T15:54:31Z", "html_url": "https://github.com/pytorch/pytorch/pull/13585#discussion_r232003002", "pull_request_url": "https://api.github.com/repos/pytorch/pytorch/pulls/13585", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/232003002"}, "html": {"href": "https://github.com/pytorch/pytorch/pull/13585#discussion_r232003002"}, "pull_request": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/13585"}}, "body_html": "<p>So, for this whole thing, if you're concerned about copying the dataset, can't you just do:</p>\n<pre><code>struct MyVeryExpensiveToCopyDataset : ... { };\nstruct MyCheapToCopyDataset {\nstd::shared_ptr&lt;MyVeryExpensiveToCopyDataset&gt; dataset;\n};\n\nauto dataloader = \n    torch::data::make_data_loader(\n        MyCheapToCopyDataset{std::make_shared&lt;MyVeryExpensiveToCopyDataset&gt;()});\n</code></pre>\n<p>and then we could just re-use the previous constructor and not need any custom code at all?</p>", "body_text": "So, for this whole thing, if you're concerned about copying the dataset, can't you just do:\nstruct MyVeryExpensiveToCopyDataset : ... { };\nstruct MyCheapToCopyDataset {\nstd::shared_ptr<MyVeryExpensiveToCopyDataset> dataset;\n};\n\nauto dataloader = \n    torch::data::make_data_loader(\n        MyCheapToCopyDataset{std::make_shared<MyVeryExpensiveToCopyDataset>()});\n\nand then we could just re-use the previous constructor and not need any custom code at all?"}