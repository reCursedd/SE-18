{"url": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/230946769", "pull_request_review_id": 171801812, "id": 230946769, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIzMDk0Njc2OQ==", "diff_hunk": "@@ -792,3 +783,44 @@ TEST(DataLoaderTest, TestExceptionsArePropagatedFromWorkers) {\n         std::rethrow_exception(e.original_exception), std::invalid_argument);\n   }\n }\n+\n+TEST(DataTest, DataLoaderWithChunkSupportSingleWorker) {\n+  const size_t kBatchSize = 13;  \n+\n+  auto dataset = InfiniteStreamDataset().map(\n+      transforms::Lambda<int>([](int x) { return x + 1; }));\n+\n+  auto data_loader = torch::data::make_chunk_data_loader(\n+      std::move(dataset),\n+      DataLoaderOptions().batch_size(kBatchSize),\n+      samplers::BatchSizeSampler{});\n+\n+  auto iterator = data_loader->begin();\n+  for (size_t i = 0; i < 3; ++i, ++iterator) {\n+    ASSERT_NE(iterator, data_loader->end());\n+    std::vector<int> batch = *iterator;\n+    ASSERT_EQ(batch.size(), kBatchSize);\n+    for (size_t j = 0; j < kBatchSize; ++j) {\n+      ASSERT_EQ(batch.at(j), 1 + (i * kBatchSize) + j);\n+    }\n+  }\n+}\n+\n+TEST(DataTest, DataLoaderWithChunkSupportMultiWorkers) {\n+  const size_t kBatchSize = 13;  \n+  \n+  InfiniteStreamDataset dataset; \n+\n+  auto data_loader = torch::data::make_chunk_data_loader(\n+      std::move(dataset),\n+      DataLoaderOptions().batch_size(kBatchSize).workers(3),\n+      samplers::BatchSizeSampler{});\n+\n+  auto iterator = data_loader->begin();\n+  for (size_t i = 0; i < 3; ++i, ++iterator) {\n+    ASSERT_NE(iterator, data_loader->end());\n+    std::vector<int> batch = *iterator;\n+    ASSERT_EQ(batch.size(), kBatchSize);   \n+  }", "path": "test/cpp/api/dataloader.cpp", "position": 50, "original_position": 82, "commit_id": "41208e442f929e8883fd0359e14f0d98466e0c85", "original_commit_id": "0795b33e08598b77f2472a659ddf9d06bc9e915d", "user": {"login": "jaliyae", "id": 12703337, "node_id": "MDQ6VXNlcjEyNzAzMzM3", "avatar_url": "https://avatars3.githubusercontent.com/u/12703337?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jaliyae", "html_url": "https://github.com/jaliyae", "followers_url": "https://api.github.com/users/jaliyae/followers", "following_url": "https://api.github.com/users/jaliyae/following{/other_user}", "gists_url": "https://api.github.com/users/jaliyae/gists{/gist_id}", "starred_url": "https://api.github.com/users/jaliyae/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jaliyae/subscriptions", "organizations_url": "https://api.github.com/users/jaliyae/orgs", "repos_url": "https://api.github.com/users/jaliyae/repos", "events_url": "https://api.github.com/users/jaliyae/events{/privacy}", "received_events_url": "https://api.github.com/users/jaliyae/received_events", "type": "User", "site_admin": false}, "body": "You are right, I thought by default we have a NoSequencer, which seems like the approach I would prefer, but with a sequencer we can test for the contents.  Let me explicitly add the option and check for the content.", "created_at": "2018-11-05T23:02:26Z", "updated_at": "2018-11-23T15:54:21Z", "html_url": "https://github.com/pytorch/pytorch/pull/13585#discussion_r230946769", "pull_request_url": "https://api.github.com/repos/pytorch/pytorch/pulls/13585", "author_association": "NONE", "_links": {"self": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/230946769"}, "html": {"href": "https://github.com/pytorch/pytorch/pull/13585#discussion_r230946769"}, "pull_request": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/13585"}}, "body_html": "<p>You are right, I thought by default we have a NoSequencer, which seems like the approach I would prefer, but with a sequencer we can test for the contents.  Let me explicitly add the option and check for the content.</p>", "body_text": "You are right, I thought by default we have a NoSequencer, which seems like the approach I would prefer, but with a sequencer we can test for the contents.  Let me explicitly add the option and check for the content.", "in_reply_to_id": 230925393}