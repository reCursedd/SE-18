{"url": "https://api.github.com/repos/pytorch/pytorch/issues/comments/436359101", "html_url": "https://github.com/pytorch/pytorch/pull/13585#issuecomment-436359101", "issue_url": "https://api.github.com/repos/pytorch/pytorch/issues/13585", "id": 436359101, "node_id": "MDEyOklzc3VlQ29tbWVudDQzNjM1OTEwMQ==", "user": {"login": "goldsborough", "id": 6429851, "node_id": "MDQ6VXNlcjY0Mjk4NTE=", "avatar_url": "https://avatars3.githubusercontent.com/u/6429851?v=4", "gravatar_id": "", "url": "https://api.github.com/users/goldsborough", "html_url": "https://github.com/goldsborough", "followers_url": "https://api.github.com/users/goldsborough/followers", "following_url": "https://api.github.com/users/goldsborough/following{/other_user}", "gists_url": "https://api.github.com/users/goldsborough/gists{/gist_id}", "starred_url": "https://api.github.com/users/goldsborough/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/goldsborough/subscriptions", "organizations_url": "https://api.github.com/users/goldsborough/orgs", "repos_url": "https://api.github.com/users/goldsborough/repos", "events_url": "https://api.github.com/users/goldsborough/events{/privacy}", "received_events_url": "https://api.github.com/users/goldsborough/received_events", "type": "User", "site_admin": false}, "created_at": "2018-11-06T18:32:17Z", "updated_at": "2018-11-06T18:32:17Z", "author_association": "CONTRIBUTOR", "body_html": "<p>If I understand correctly, your dataset will have the parallelism inside of itself. In that case, why do you still need worker threads in the dataloader? As in, would you ever pass <code>num_workers &gt; 0</code> for your use case? And if not, have you considered just using the existing functionality of the dataloader where you pass <code>num_workers = 0</code>, in which case the dataset lives on the main thread? I think you could get rid of the constructor and custom worker thread function in that case?</p>", "body_text": "If I understand correctly, your dataset will have the parallelism inside of itself. In that case, why do you still need worker threads in the dataloader? As in, would you ever pass num_workers > 0 for your use case? And if not, have you considered just using the existing functionality of the dataloader where you pass num_workers = 0, in which case the dataset lives on the main thread? I think you could get rid of the constructor and custom worker thread function in that case?", "body": "If I understand correctly, your dataset will have the parallelism inside of itself. In that case, why do you still need worker threads in the dataloader? As in, would you ever pass `num_workers > 0` for your use case? And if not, have you considered just using the existing functionality of the dataloader where you pass `num_workers = 0`, in which case the dataset lives on the main thread? I think you could get rid of the constructor and custom worker thread function in that case?"}