{"url": "https://api.github.com/repos/pytorch/pytorch/issues/8056", "repository_url": "https://api.github.com/repos/pytorch/pytorch", "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/8056/labels{/name}", "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/8056/comments", "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/8056/events", "html_url": "https://github.com/pytorch/pytorch/pull/8056", "id": 328687359, "node_id": "MDExOlB1bGxSZXF1ZXN0MTkyMTYyOTgx", "number": 8056, "title": "Reduce usages of TensorUtils<T>::DataType in THC.", "user": {"login": "gchanan", "id": 3768583, "node_id": "MDQ6VXNlcjM3Njg1ODM=", "avatar_url": "https://avatars2.githubusercontent.com/u/3768583?v=4", "gravatar_id": "", "url": "https://api.github.com/users/gchanan", "html_url": "https://github.com/gchanan", "followers_url": "https://api.github.com/users/gchanan/followers", "following_url": "https://api.github.com/users/gchanan/following{/other_user}", "gists_url": "https://api.github.com/users/gchanan/gists{/gist_id}", "starred_url": "https://api.github.com/users/gchanan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/gchanan/subscriptions", "organizations_url": "https://api.github.com/users/gchanan/orgs", "repos_url": "https://api.github.com/users/gchanan/repos", "events_url": "https://api.github.com/users/gchanan/events{/privacy}", "received_events_url": "https://api.github.com/users/gchanan/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-06-01T23:19:49Z", "updated_at": "2018-06-02T15:26:03Z", "closed_at": "2018-06-02T15:26:03Z", "author_association": "CONTRIBUTOR", "pull_request": {"url": "https://api.github.com/repos/pytorch/pytorch/pulls/8056", "html_url": "https://github.com/pytorch/pytorch/pull/8056", "diff_url": "https://github.com/pytorch/pytorch/pull/8056.diff", "patch_url": "https://github.com/pytorch/pytorch/pull/8056.patch"}, "body_html": "<p>TensorUtils is basically ATen-dispatch-lite in that it allows one to do multi-type THC function dispatch with a single call.  However, it is templatized on the Tensor type, and since we are moving to a single Tensor type, this doesn't work.</p>\n<p>Most of the functions in TensorUtils (e.g. getDims) can be pulled up a level, to just call THCTensor_nDimension (or directly accessing the member), but the DataType specific functions are more problematic.</p>\n<p>So, this PR does two things:</p>\n<ol>\n<li>Replaces calls of 'TensorUtils::DataType' with 'real' since these are identical</li>\n<li>Templatizes the THC_pointwiseApplyX functions to take scalar types.  To ensure this is done correctly, we static_assert that the scalar type template parameter matches the scalar type of the corresponding template parameter.  We will need to get rid of these static_asserts in the future, but this is useful for now.</li>\n</ol>", "body_text": "TensorUtils is basically ATen-dispatch-lite in that it allows one to do multi-type THC function dispatch with a single call.  However, it is templatized on the Tensor type, and since we are moving to a single Tensor type, this doesn't work.\nMost of the functions in TensorUtils (e.g. getDims) can be pulled up a level, to just call THCTensor_nDimension (or directly accessing the member), but the DataType specific functions are more problematic.\nSo, this PR does two things:\n\nReplaces calls of 'TensorUtils::DataType' with 'real' since these are identical\nTemplatizes the THC_pointwiseApplyX functions to take scalar types.  To ensure this is done correctly, we static_assert that the scalar type template parameter matches the scalar type of the corresponding template parameter.  We will need to get rid of these static_asserts in the future, but this is useful for now.", "body": "TensorUtils<T> is basically ATen-dispatch-lite in that it allows one to do multi-type THC function dispatch with a single call.  However, it is templatized on the Tensor type, and since we are moving to a single Tensor type, this doesn't work.\r\n\r\nMost of the functions in TensorUtils (e.g. getDims) can be pulled up a level, to just call THCTensor_nDimension (or directly accessing the member), but the DataType specific functions are more problematic.\r\n\r\nSo, this PR does two things:\r\n1) Replaces calls of 'TensorUtils<THCTensor>::DataType' with 'real' since these are identical\r\n2) Templatizes the THC_pointwiseApplyX functions to take scalar types.  To ensure this is done correctly, we static_assert that the scalar type template parameter matches the scalar type of the corresponding template parameter.  We will need to get rid of these static_asserts in the future, but this is useful for now."}