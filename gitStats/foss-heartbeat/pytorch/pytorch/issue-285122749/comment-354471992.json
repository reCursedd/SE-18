{"url": "https://api.github.com/repos/pytorch/pytorch/issues/comments/354471992", "html_url": "https://github.com/pytorch/pytorch/issues/4408#issuecomment-354471992", "issue_url": "https://api.github.com/repos/pytorch/pytorch/issues/4408", "id": 354471992, "node_id": "MDEyOklzc3VlQ29tbWVudDM1NDQ3MTk5Mg==", "user": {"login": "Erotemic", "id": 3186211, "node_id": "MDQ6VXNlcjMxODYyMTE=", "avatar_url": "https://avatars3.githubusercontent.com/u/3186211?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Erotemic", "html_url": "https://github.com/Erotemic", "followers_url": "https://api.github.com/users/Erotemic/followers", "following_url": "https://api.github.com/users/Erotemic/following{/other_user}", "gists_url": "https://api.github.com/users/Erotemic/gists{/gist_id}", "starred_url": "https://api.github.com/users/Erotemic/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Erotemic/subscriptions", "organizations_url": "https://api.github.com/users/Erotemic/orgs", "repos_url": "https://api.github.com/users/Erotemic/repos", "events_url": "https://api.github.com/users/Erotemic/events{/privacy}", "received_events_url": "https://api.github.com/users/Erotemic/received_events", "type": "User", "site_admin": false}, "created_at": "2017-12-29T17:01:52Z", "updated_at": "2017-12-29T17:01:52Z", "author_association": "CONTRIBUTOR", "body_html": "<p>I notice in <code>symbolic.py</code> there is a function:</p>\n<pre><code>def bmm(g, self, other):\n    return g.op(\"MatMul\", self, other)\n</code></pre>\n<p>is it sufficient to simply add another function:</p>\n<pre><code>def matmul(g, self, other):\n    return g.op(\"MatMul\", self, other)\n</code></pre>\n<p>If I hack this into my installed pytorch, then the model \"seems\" to work correctly. I can save it, reload and then it checks correctly.</p>\n<p>Is this the correct fix? I'm not really sure what <code>bmm</code> stnads for, nor is it obvious from the docs what sort of object <code>g</code> is (although I assume it might stand for graph?).</p>", "body_text": "I notice in symbolic.py there is a function:\ndef bmm(g, self, other):\n    return g.op(\"MatMul\", self, other)\n\nis it sufficient to simply add another function:\ndef matmul(g, self, other):\n    return g.op(\"MatMul\", self, other)\n\nIf I hack this into my installed pytorch, then the model \"seems\" to work correctly. I can save it, reload and then it checks correctly.\nIs this the correct fix? I'm not really sure what bmm stnads for, nor is it obvious from the docs what sort of object g is (although I assume it might stand for graph?).", "body": "I notice in `symbolic.py` there is a function: \r\n\r\n```\r\ndef bmm(g, self, other):\r\n    return g.op(\"MatMul\", self, other)\r\n```\r\n\r\nis it sufficient to simply add another function: \r\n\r\n```\r\ndef matmul(g, self, other):\r\n    return g.op(\"MatMul\", self, other)\r\n```\r\n\r\nIf I hack this into my installed pytorch, then the model \"seems\" to work correctly. I can save it, reload and then it checks correctly. \r\n\r\nIs this the correct fix? I'm not really sure what `bmm` stnads for, nor is it obvious from the docs what sort of object `g` is (although I assume it might stand for graph?). "}