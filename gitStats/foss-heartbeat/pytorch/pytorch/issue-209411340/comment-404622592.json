{"url": "https://api.github.com/repos/pytorch/pytorch/issues/comments/404622592", "html_url": "https://github.com/pytorch/pytorch/issues/821#issuecomment-404622592", "issue_url": "https://api.github.com/repos/pytorch/pytorch/issues/821", "id": 404622592, "node_id": "MDEyOklzc3VlQ29tbWVudDQwNDYyMjU5Mg==", "user": {"login": "LingxiaoShawn", "id": 16176421, "node_id": "MDQ6VXNlcjE2MTc2NDIx", "avatar_url": "https://avatars0.githubusercontent.com/u/16176421?v=4", "gravatar_id": "", "url": "https://api.github.com/users/LingxiaoShawn", "html_url": "https://github.com/LingxiaoShawn", "followers_url": "https://api.github.com/users/LingxiaoShawn/followers", "following_url": "https://api.github.com/users/LingxiaoShawn/following{/other_user}", "gists_url": "https://api.github.com/users/LingxiaoShawn/gists{/gist_id}", "starred_url": "https://api.github.com/users/LingxiaoShawn/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/LingxiaoShawn/subscriptions", "organizations_url": "https://api.github.com/users/LingxiaoShawn/orgs", "repos_url": "https://api.github.com/users/LingxiaoShawn/repos", "events_url": "https://api.github.com/users/LingxiaoShawn/events{/privacy}", "received_events_url": "https://api.github.com/users/LingxiaoShawn/received_events", "type": "User", "site_admin": false}, "created_at": "2018-07-12T19:21:59Z", "updated_at": "2018-07-12T19:21:59Z", "author_association": "NONE", "body_html": "<p><a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=6830199\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/yjxiong\">@yjxiong</a> Let say that I want to wrap a decision tree as a function, then I need to access the tree data in order to define the function. So my problem is that define the Function need to access the data. I guess that I should try put it into init first, and use the same function object all the time. I'm not sure if this is the right way to do that but I will try first to say if it will have error.</p>\n<p>And I guess the old style of extending function can save data in init function. But currently the new style approach of extending function only support put everything as input into forward method. I don't understand the design style. I hope someone can give out the advantage for this new approach.</p>", "body_text": "@yjxiong Let say that I want to wrap a decision tree as a function, then I need to access the tree data in order to define the function. So my problem is that define the Function need to access the data. I guess that I should try put it into init first, and use the same function object all the time. I'm not sure if this is the right way to do that but I will try first to say if it will have error.\nAnd I guess the old style of extending function can save data in init function. But currently the new style approach of extending function only support put everything as input into forward method. I don't understand the design style. I hope someone can give out the advantage for this new approach.", "body": "@yjxiong Let say that I want to wrap a decision tree as a function, then I need to access the tree data in order to define the function. So my problem is that define the Function need to access the data. I guess that I should try put it into init first, and use the same function object all the time. I'm not sure if this is the right way to do that but I will try first to say if it will have error.  \r\n\r\nAnd I guess the old style of extending function can save data in init function. But currently the new style approach of extending function only support put everything as input into forward method. I don't understand the design style. I hope someone can give out the advantage for this new approach. "}