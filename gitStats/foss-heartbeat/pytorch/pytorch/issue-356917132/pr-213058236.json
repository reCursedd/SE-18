{"url": "https://api.github.com/repos/pytorch/pytorch/pulls/11231", "id": 213058236, "node_id": "MDExOlB1bGxSZXF1ZXN0MjEzMDU4MjM2", "html_url": "https://github.com/pytorch/pytorch/pull/11231", "diff_url": "https://github.com/pytorch/pytorch/pull/11231.diff", "patch_url": "https://github.com/pytorch/pytorch/pull/11231.patch", "issue_url": "https://api.github.com/repos/pytorch/pytorch/issues/11231", "number": 11231, "state": "closed", "locked": false, "title": " Optional expand=True kwarg in distribution.enumerate_support", "user": {"login": "neerajprad", "id": 1762463, "node_id": "MDQ6VXNlcjE3NjI0NjM=", "avatar_url": "https://avatars3.githubusercontent.com/u/1762463?v=4", "gravatar_id": "", "url": "https://api.github.com/users/neerajprad", "html_url": "https://github.com/neerajprad", "followers_url": "https://api.github.com/users/neerajprad/followers", "following_url": "https://api.github.com/users/neerajprad/following{/other_user}", "gists_url": "https://api.github.com/users/neerajprad/gists{/gist_id}", "starred_url": "https://api.github.com/users/neerajprad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/neerajprad/subscriptions", "organizations_url": "https://api.github.com/users/neerajprad/orgs", "repos_url": "https://api.github.com/users/neerajprad/repos", "events_url": "https://api.github.com/users/neerajprad/events{/privacy}", "received_events_url": "https://api.github.com/users/neerajprad/received_events", "type": "User", "site_admin": false}, "body": "This adds an optional `expand=True` kwarg to the `distribution.expand_support()` method, to get a distribution's support without expanding the values over the distribution's `batch_shape`. \r\n - The default `expand=True` preserves the current behavior, whereas `expand=False` collapses the batch dimensions.\r\n\r\ne.g.\r\n```python\r\nIn [47]: d = dist.OneHotCategorical(torch.ones(3, 5) * 0.5)\r\n\r\nIn [48]: d.batch_shape\r\nOut[48]: torch.Size([3])\r\n\r\nIn [49]: d.enumerate_support()\r\nOut[49]:\r\ntensor([[[1., 0., 0., 0., 0.],\r\n         [1., 0., 0., 0., 0.],\r\n         [1., 0., 0., 0., 0.]],\r\n\r\n        [[0., 1., 0., 0., 0.],\r\n         [0., 1., 0., 0., 0.],\r\n         [0., 1., 0., 0., 0.]],\r\n\r\n        [[0., 0., 1., 0., 0.],\r\n         [0., 0., 1., 0., 0.],\r\n         [0., 0., 1., 0., 0.]],\r\n\r\n        [[0., 0., 0., 1., 0.],\r\n         [0., 0., 0., 1., 0.],\r\n         [0., 0., 0., 1., 0.]],\r\n\r\n        [[0., 0., 0., 0., 1.],\r\n         [0., 0., 0., 0., 1.],\r\n         [0., 0., 0., 0., 1.]]])\r\n\r\nIn [50]: d.enumerate_support().shape\r\nOut[50]: torch.Size([5, 3, 5])\r\n\r\nIn [51]: d.enumerate_support(expand=False)\r\nOut[51]:\r\ntensor([[[1., 0., 0., 0., 0.]],\r\n\r\n        [[0., 1., 0., 0., 0.]],\r\n\r\n        [[0., 0., 1., 0., 0.]],\r\n\r\n        [[0., 0., 0., 1., 0.]],\r\n\r\n        [[0., 0., 0., 0., 1.]]])\r\n\r\nIn [52]: d.enumerate_support(expand=False).shape\r\nOut[52]: torch.Size([5, 1, 5])\r\n```\r\n\r\n**Motivation:**\r\n - Currently `enumerate_support` builds up tensors of size `support + batch_shape + event_shape`, but the values are *repeated* over the `batch_shape` (adding little in the way of information). This can lead to expensive matrix operations over large tensors when `batch_shape` is large (see, example above), often leading to OOM issues. We use `expand=False` in Pyro for message passing inference. e.g. when enumerating over the state space in a Hidden Markov Model. This creates sparse tensors that capture the markov dependence, and allows for the possibility of using optimized matrix operations over these sparse tensors. `expand=True`, on the other hand, will create tensors that scale exponentially in size with the length of the Markov chain.\r\n - We have been using this in our [patch](https://github.com/uber/pyro/blob/dev/pyro/distributions/torch.py) of `torch.distributions` in Pyro. The interface has been stable, and it is already being used in a few Pyro algorithms. We think that this is more broadly applicable and will be of interest to the larger distributions community.\r\n\r\ncc. @apaszke, @fritzo, @alicanb \r\n", "created_at": "2018-09-04T18:02:56Z", "updated_at": "2018-09-07T04:40:52Z", "closed_at": "2018-09-07T04:40:52Z", "merged_at": null, "merge_commit_sha": "b997879f28239f0bfad7ce8c74923b16097923f3", "assignee": null, "assignees": [], "requested_reviewers": [{"login": "ezyang", "id": 13564, "node_id": "MDQ6VXNlcjEzNTY0", "avatar_url": "https://avatars0.githubusercontent.com/u/13564?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ezyang", "html_url": "https://github.com/ezyang", "followers_url": "https://api.github.com/users/ezyang/followers", "following_url": "https://api.github.com/users/ezyang/following{/other_user}", "gists_url": "https://api.github.com/users/ezyang/gists{/gist_id}", "starred_url": "https://api.github.com/users/ezyang/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ezyang/subscriptions", "organizations_url": "https://api.github.com/users/ezyang/orgs", "repos_url": "https://api.github.com/users/ezyang/repos", "events_url": "https://api.github.com/users/ezyang/events{/privacy}", "received_events_url": "https://api.github.com/users/ezyang/received_events", "type": "User", "site_admin": false}, {"login": "zdevito", "id": 370202, "node_id": "MDQ6VXNlcjM3MDIwMg==", "avatar_url": "https://avatars0.githubusercontent.com/u/370202?v=4", "gravatar_id": "", "url": "https://api.github.com/users/zdevito", "html_url": "https://github.com/zdevito", "followers_url": "https://api.github.com/users/zdevito/followers", "following_url": "https://api.github.com/users/zdevito/following{/other_user}", "gists_url": "https://api.github.com/users/zdevito/gists{/gist_id}", "starred_url": "https://api.github.com/users/zdevito/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/zdevito/subscriptions", "organizations_url": "https://api.github.com/users/zdevito/orgs", "repos_url": "https://api.github.com/users/zdevito/repos", "events_url": "https://api.github.com/users/zdevito/events{/privacy}", "received_events_url": "https://api.github.com/users/zdevito/received_events", "type": "User", "site_admin": false}, {"login": "colesbury", "id": 655866, "node_id": "MDQ6VXNlcjY1NTg2Ng==", "avatar_url": "https://avatars1.githubusercontent.com/u/655866?v=4", "gravatar_id": "", "url": "https://api.github.com/users/colesbury", "html_url": "https://github.com/colesbury", "followers_url": "https://api.github.com/users/colesbury/followers", "following_url": "https://api.github.com/users/colesbury/following{/other_user}", "gists_url": "https://api.github.com/users/colesbury/gists{/gist_id}", "starred_url": "https://api.github.com/users/colesbury/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/colesbury/subscriptions", "organizations_url": "https://api.github.com/users/colesbury/orgs", "repos_url": "https://api.github.com/users/colesbury/repos", "events_url": "https://api.github.com/users/colesbury/events{/privacy}", "received_events_url": "https://api.github.com/users/colesbury/received_events", "type": "User", "site_admin": false}, {"login": "gchanan", "id": 3768583, "node_id": "MDQ6VXNlcjM3Njg1ODM=", "avatar_url": "https://avatars2.githubusercontent.com/u/3768583?v=4", "gravatar_id": "", "url": "https://api.github.com/users/gchanan", "html_url": "https://github.com/gchanan", "followers_url": "https://api.github.com/users/gchanan/followers", "following_url": "https://api.github.com/users/gchanan/following{/other_user}", "gists_url": "https://api.github.com/users/gchanan/gists{/gist_id}", "starred_url": "https://api.github.com/users/gchanan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/gchanan/subscriptions", "organizations_url": "https://api.github.com/users/gchanan/orgs", "repos_url": "https://api.github.com/users/gchanan/repos", "events_url": "https://api.github.com/users/gchanan/events{/privacy}", "received_events_url": "https://api.github.com/users/gchanan/received_events", "type": "User", "site_admin": false}, {"login": "apaszke", "id": 4583066, "node_id": "MDQ6VXNlcjQ1ODMwNjY=", "avatar_url": "https://avatars3.githubusercontent.com/u/4583066?v=4", "gravatar_id": "", "url": "https://api.github.com/users/apaszke", "html_url": "https://github.com/apaszke", "followers_url": "https://api.github.com/users/apaszke/followers", "following_url": "https://api.github.com/users/apaszke/following{/other_user}", "gists_url": "https://api.github.com/users/apaszke/gists{/gist_id}", "starred_url": "https://api.github.com/users/apaszke/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/apaszke/subscriptions", "organizations_url": "https://api.github.com/users/apaszke/orgs", "repos_url": "https://api.github.com/users/apaszke/repos", "events_url": "https://api.github.com/users/apaszke/events{/privacy}", "received_events_url": "https://api.github.com/users/apaszke/received_events", "type": "User", "site_admin": false}], "requested_teams": [], "labels": [], "milestone": null, "commits_url": "https://api.github.com/repos/pytorch/pytorch/pulls/11231/commits", "review_comments_url": "https://api.github.com/repos/pytorch/pytorch/pulls/11231/comments", "review_comment_url": "https://api.github.com/repos/pytorch/pytorch/pulls/comments{/number}", "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/11231/comments", "statuses_url": "https://api.github.com/repos/pytorch/pytorch/statuses/cdae347aa36be8ddbbc89d71527ed79594373455", "head": {"label": "neerajprad:enumerate-expand", "ref": "enumerate-expand", "sha": "cdae347aa36be8ddbbc89d71527ed79594373455", "user": {"login": "neerajprad", "id": 1762463, "node_id": "MDQ6VXNlcjE3NjI0NjM=", "avatar_url": "https://avatars3.githubusercontent.com/u/1762463?v=4", "gravatar_id": "", "url": "https://api.github.com/users/neerajprad", "html_url": "https://github.com/neerajprad", "followers_url": "https://api.github.com/users/neerajprad/followers", "following_url": "https://api.github.com/users/neerajprad/following{/other_user}", "gists_url": "https://api.github.com/users/neerajprad/gists{/gist_id}", "starred_url": "https://api.github.com/users/neerajprad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/neerajprad/subscriptions", "organizations_url": "https://api.github.com/users/neerajprad/orgs", "repos_url": "https://api.github.com/users/neerajprad/repos", "events_url": "https://api.github.com/users/neerajprad/events{/privacy}", "received_events_url": "https://api.github.com/users/neerajprad/received_events", "type": "User", "site_admin": false}, "repo": {"id": 116222814, "node_id": "MDEwOlJlcG9zaXRvcnkxMTYyMjI4MTQ=", "name": "pytorch", "full_name": "neerajprad/pytorch", "private": false, "owner": {"login": "neerajprad", "id": 1762463, "node_id": "MDQ6VXNlcjE3NjI0NjM=", "avatar_url": "https://avatars3.githubusercontent.com/u/1762463?v=4", "gravatar_id": "", "url": "https://api.github.com/users/neerajprad", "html_url": "https://github.com/neerajprad", "followers_url": "https://api.github.com/users/neerajprad/followers", "following_url": "https://api.github.com/users/neerajprad/following{/other_user}", "gists_url": "https://api.github.com/users/neerajprad/gists{/gist_id}", "starred_url": "https://api.github.com/users/neerajprad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/neerajprad/subscriptions", "organizations_url": "https://api.github.com/users/neerajprad/orgs", "repos_url": "https://api.github.com/users/neerajprad/repos", "events_url": "https://api.github.com/users/neerajprad/events{/privacy}", "received_events_url": "https://api.github.com/users/neerajprad/received_events", "type": "User", "site_admin": false}, "html_url": "https://github.com/neerajprad/pytorch", "description": "Tensors and Dynamic neural networks in Python  with strong GPU acceleration", "fork": true, "url": "https://api.github.com/repos/neerajprad/pytorch", "forks_url": "https://api.github.com/repos/neerajprad/pytorch/forks", "keys_url": "https://api.github.com/repos/neerajprad/pytorch/keys{/key_id}", "collaborators_url": "https://api.github.com/repos/neerajprad/pytorch/collaborators{/collaborator}", "teams_url": "https://api.github.com/repos/neerajprad/pytorch/teams", "hooks_url": "https://api.github.com/repos/neerajprad/pytorch/hooks", "issue_events_url": "https://api.github.com/repos/neerajprad/pytorch/issues/events{/number}", "events_url": "https://api.github.com/repos/neerajprad/pytorch/events", "assignees_url": "https://api.github.com/repos/neerajprad/pytorch/assignees{/user}", "branches_url": "https://api.github.com/repos/neerajprad/pytorch/branches{/branch}", "tags_url": "https://api.github.com/repos/neerajprad/pytorch/tags", "blobs_url": "https://api.github.com/repos/neerajprad/pytorch/git/blobs{/sha}", "git_tags_url": "https://api.github.com/repos/neerajprad/pytorch/git/tags{/sha}", "git_refs_url": "https://api.github.com/repos/neerajprad/pytorch/git/refs{/sha}", "trees_url": "https://api.github.com/repos/neerajprad/pytorch/git/trees{/sha}", "statuses_url": "https://api.github.com/repos/neerajprad/pytorch/statuses/{sha}", "languages_url": "https://api.github.com/repos/neerajprad/pytorch/languages", "stargazers_url": "https://api.github.com/repos/neerajprad/pytorch/stargazers", "contributors_url": "https://api.github.com/repos/neerajprad/pytorch/contributors", "subscribers_url": "https://api.github.com/repos/neerajprad/pytorch/subscribers", "subscription_url": "https://api.github.com/repos/neerajprad/pytorch/subscription", "commits_url": "https://api.github.com/repos/neerajprad/pytorch/commits{/sha}", "git_commits_url": "https://api.github.com/repos/neerajprad/pytorch/git/commits{/sha}", "comments_url": "https://api.github.com/repos/neerajprad/pytorch/comments{/number}", "issue_comment_url": "https://api.github.com/repos/neerajprad/pytorch/issues/comments{/number}", "contents_url": "https://api.github.com/repos/neerajprad/pytorch/contents/{+path}", "compare_url": "https://api.github.com/repos/neerajprad/pytorch/compare/{base}...{head}", "merges_url": "https://api.github.com/repos/neerajprad/pytorch/merges", "archive_url": "https://api.github.com/repos/neerajprad/pytorch/{archive_format}{/ref}", "downloads_url": "https://api.github.com/repos/neerajprad/pytorch/downloads", "issues_url": "https://api.github.com/repos/neerajprad/pytorch/issues{/number}", "pulls_url": "https://api.github.com/repos/neerajprad/pytorch/pulls{/number}", "milestones_url": "https://api.github.com/repos/neerajprad/pytorch/milestones{/number}", "notifications_url": "https://api.github.com/repos/neerajprad/pytorch/notifications{?since,all,participating}", "labels_url": "https://api.github.com/repos/neerajprad/pytorch/labels{/name}", "releases_url": "https://api.github.com/repos/neerajprad/pytorch/releases{/id}", "deployments_url": "https://api.github.com/repos/neerajprad/pytorch/deployments", "created_at": "2018-01-04T06:21:53Z", "updated_at": "2018-10-30T20:01:07Z", "pushed_at": "2018-10-30T19:59:29Z", "git_url": "git://github.com/neerajprad/pytorch.git", "ssh_url": "git@github.com:neerajprad/pytorch.git", "clone_url": "https://github.com/neerajprad/pytorch.git", "svn_url": "https://github.com/neerajprad/pytorch", "homepage": "http://pytorch.org", "size": 80991, "stargazers_count": 0, "watchers_count": 0, "language": "C++", "has_issues": false, "has_projects": true, "has_downloads": true, "has_wiki": true, "has_pages": false, "forks_count": 0, "mirror_url": null, "archived": false, "open_issues_count": 0, "license": {"key": "other", "name": "Other", "spdx_id": "NOASSERTION", "url": null, "node_id": "MDc6TGljZW5zZTA="}, "forks": 0, "open_issues": 0, "watchers": 0, "default_branch": "master"}}, "base": {"label": "pytorch:master", "ref": "master", "sha": "684b55d76257141aa9ea6eb55923896ca4f7d029", "user": {"login": "pytorch", "id": 21003710, "node_id": "MDEyOk9yZ2FuaXphdGlvbjIxMDAzNzEw", "avatar_url": "https://avatars3.githubusercontent.com/u/21003710?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pytorch", "html_url": "https://github.com/pytorch", "followers_url": "https://api.github.com/users/pytorch/followers", "following_url": "https://api.github.com/users/pytorch/following{/other_user}", "gists_url": "https://api.github.com/users/pytorch/gists{/gist_id}", "starred_url": "https://api.github.com/users/pytorch/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pytorch/subscriptions", "organizations_url": "https://api.github.com/users/pytorch/orgs", "repos_url": "https://api.github.com/users/pytorch/repos", "events_url": "https://api.github.com/users/pytorch/events{/privacy}", "received_events_url": "https://api.github.com/users/pytorch/received_events", "type": "Organization", "site_admin": false}, "repo": {"id": 65600975, "node_id": "MDEwOlJlcG9zaXRvcnk2NTYwMDk3NQ==", "name": "pytorch", "full_name": "pytorch/pytorch", "private": false, "owner": {"login": "pytorch", "id": 21003710, "node_id": "MDEyOk9yZ2FuaXphdGlvbjIxMDAzNzEw", "avatar_url": "https://avatars3.githubusercontent.com/u/21003710?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pytorch", "html_url": "https://github.com/pytorch", "followers_url": "https://api.github.com/users/pytorch/followers", "following_url": "https://api.github.com/users/pytorch/following{/other_user}", "gists_url": "https://api.github.com/users/pytorch/gists{/gist_id}", "starred_url": "https://api.github.com/users/pytorch/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pytorch/subscriptions", "organizations_url": "https://api.github.com/users/pytorch/orgs", "repos_url": "https://api.github.com/users/pytorch/repos", "events_url": "https://api.github.com/users/pytorch/events{/privacy}", "received_events_url": "https://api.github.com/users/pytorch/received_events", "type": "Organization", "site_admin": false}, "html_url": "https://github.com/pytorch/pytorch", "description": "Tensors and Dynamic neural networks in Python  with strong GPU acceleration", "fork": false, "url": "https://api.github.com/repos/pytorch/pytorch", "forks_url": "https://api.github.com/repos/pytorch/pytorch/forks", "keys_url": "https://api.github.com/repos/pytorch/pytorch/keys{/key_id}", "collaborators_url": "https://api.github.com/repos/pytorch/pytorch/collaborators{/collaborator}", "teams_url": "https://api.github.com/repos/pytorch/pytorch/teams", "hooks_url": "https://api.github.com/repos/pytorch/pytorch/hooks", "issue_events_url": "https://api.github.com/repos/pytorch/pytorch/issues/events{/number}", "events_url": "https://api.github.com/repos/pytorch/pytorch/events", "assignees_url": "https://api.github.com/repos/pytorch/pytorch/assignees{/user}", "branches_url": "https://api.github.com/repos/pytorch/pytorch/branches{/branch}", "tags_url": "https://api.github.com/repos/pytorch/pytorch/tags", "blobs_url": "https://api.github.com/repos/pytorch/pytorch/git/blobs{/sha}", "git_tags_url": "https://api.github.com/repos/pytorch/pytorch/git/tags{/sha}", "git_refs_url": "https://api.github.com/repos/pytorch/pytorch/git/refs{/sha}", "trees_url": "https://api.github.com/repos/pytorch/pytorch/git/trees{/sha}", "statuses_url": "https://api.github.com/repos/pytorch/pytorch/statuses/{sha}", "languages_url": "https://api.github.com/repos/pytorch/pytorch/languages", "stargazers_url": "https://api.github.com/repos/pytorch/pytorch/stargazers", "contributors_url": "https://api.github.com/repos/pytorch/pytorch/contributors", "subscribers_url": "https://api.github.com/repos/pytorch/pytorch/subscribers", "subscription_url": "https://api.github.com/repos/pytorch/pytorch/subscription", "commits_url": "https://api.github.com/repos/pytorch/pytorch/commits{/sha}", "git_commits_url": "https://api.github.com/repos/pytorch/pytorch/git/commits{/sha}", "comments_url": "https://api.github.com/repos/pytorch/pytorch/comments{/number}", "issue_comment_url": "https://api.github.com/repos/pytorch/pytorch/issues/comments{/number}", "contents_url": "https://api.github.com/repos/pytorch/pytorch/contents/{+path}", "compare_url": "https://api.github.com/repos/pytorch/pytorch/compare/{base}...{head}", "merges_url": "https://api.github.com/repos/pytorch/pytorch/merges", "archive_url": "https://api.github.com/repos/pytorch/pytorch/{archive_format}{/ref}", "downloads_url": "https://api.github.com/repos/pytorch/pytorch/downloads", "issues_url": "https://api.github.com/repos/pytorch/pytorch/issues{/number}", "pulls_url": "https://api.github.com/repos/pytorch/pytorch/pulls{/number}", "milestones_url": "https://api.github.com/repos/pytorch/pytorch/milestones{/number}", "notifications_url": "https://api.github.com/repos/pytorch/pytorch/notifications{?since,all,participating}", "labels_url": "https://api.github.com/repos/pytorch/pytorch/labels{/name}", "releases_url": "https://api.github.com/repos/pytorch/pytorch/releases{/id}", "deployments_url": "https://api.github.com/repos/pytorch/pytorch/deployments", "created_at": "2016-08-13T05:26:41Z", "updated_at": "2018-11-24T14:27:35Z", "pushed_at": "2018-11-24T12:42:01Z", "git_url": "git://github.com/pytorch/pytorch.git", "ssh_url": "git@github.com:pytorch/pytorch.git", "clone_url": "https://github.com/pytorch/pytorch.git", "svn_url": "https://github.com/pytorch/pytorch", "homepage": "http://pytorch.org", "size": 89656, "stargazers_count": 21591, "watchers_count": 21591, "language": "C++", "has_issues": true, "has_projects": true, "has_downloads": true, "has_wiki": true, "has_pages": false, "forks_count": 5154, "mirror_url": null, "archived": false, "open_issues_count": 2196, "license": {"key": "other", "name": "Other", "spdx_id": "NOASSERTION", "url": null, "node_id": "MDc6TGljZW5zZTA="}, "forks": 5154, "open_issues": 2196, "watchers": 21591, "default_branch": "master"}}, "_links": {"self": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/11231"}, "html": {"href": "https://github.com/pytorch/pytorch/pull/11231"}, "issue": {"href": "https://api.github.com/repos/pytorch/pytorch/issues/11231"}, "comments": {"href": "https://api.github.com/repos/pytorch/pytorch/issues/11231/comments"}, "review_comments": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/11231/comments"}, "review_comment": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/comments{/number}"}, "commits": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/11231/commits"}, "statuses": {"href": "https://api.github.com/repos/pytorch/pytorch/statuses/cdae347aa36be8ddbbc89d71527ed79594373455"}}, "author_association": "CONTRIBUTOR", "body_html": "<p>This adds an optional <code>expand=True</code> kwarg to the <code>distribution.expand_support()</code> method, to get a distribution's support without expanding the values over the distribution's <code>batch_shape</code>.</p>\n<ul>\n<li>The default <code>expand=True</code> preserves the current behavior, whereas <code>expand=False</code> collapses the batch dimensions.</li>\n</ul>\n<p>e.g.</p>\n<div class=\"highlight highlight-source-python\"><pre>In [<span class=\"pl-c1\">47</span>]: d <span class=\"pl-k\">=</span> dist.OneHotCategorical(torch.ones(<span class=\"pl-c1\">3</span>, <span class=\"pl-c1\">5</span>) <span class=\"pl-k\">*</span> <span class=\"pl-c1\">0.5</span>)\n\nIn [<span class=\"pl-c1\">48</span>]: d.batch_shape\nOut[<span class=\"pl-c1\">48</span>]: torch.Size([<span class=\"pl-c1\">3</span>])\n\nIn [<span class=\"pl-c1\">49</span>]: d.enumerate_support()\nOut[<span class=\"pl-c1\">49</span>]:\ntensor([[[<span class=\"pl-c1\">1</span>., <span class=\"pl-c1\">0</span>., <span class=\"pl-c1\">0</span>., <span class=\"pl-c1\">0</span>., <span class=\"pl-c1\">0</span>.],\n         [<span class=\"pl-c1\">1</span>., <span class=\"pl-c1\">0</span>., <span class=\"pl-c1\">0</span>., <span class=\"pl-c1\">0</span>., <span class=\"pl-c1\">0</span>.],\n         [<span class=\"pl-c1\">1</span>., <span class=\"pl-c1\">0</span>., <span class=\"pl-c1\">0</span>., <span class=\"pl-c1\">0</span>., <span class=\"pl-c1\">0</span>.]],\n\n        [[<span class=\"pl-c1\">0</span>., <span class=\"pl-c1\">1</span>., <span class=\"pl-c1\">0</span>., <span class=\"pl-c1\">0</span>., <span class=\"pl-c1\">0</span>.],\n         [<span class=\"pl-c1\">0</span>., <span class=\"pl-c1\">1</span>., <span class=\"pl-c1\">0</span>., <span class=\"pl-c1\">0</span>., <span class=\"pl-c1\">0</span>.],\n         [<span class=\"pl-c1\">0</span>., <span class=\"pl-c1\">1</span>., <span class=\"pl-c1\">0</span>., <span class=\"pl-c1\">0</span>., <span class=\"pl-c1\">0</span>.]],\n\n        [[<span class=\"pl-c1\">0</span>., <span class=\"pl-c1\">0</span>., <span class=\"pl-c1\">1</span>., <span class=\"pl-c1\">0</span>., <span class=\"pl-c1\">0</span>.],\n         [<span class=\"pl-c1\">0</span>., <span class=\"pl-c1\">0</span>., <span class=\"pl-c1\">1</span>., <span class=\"pl-c1\">0</span>., <span class=\"pl-c1\">0</span>.],\n         [<span class=\"pl-c1\">0</span>., <span class=\"pl-c1\">0</span>., <span class=\"pl-c1\">1</span>., <span class=\"pl-c1\">0</span>., <span class=\"pl-c1\">0</span>.]],\n\n        [[<span class=\"pl-c1\">0</span>., <span class=\"pl-c1\">0</span>., <span class=\"pl-c1\">0</span>., <span class=\"pl-c1\">1</span>., <span class=\"pl-c1\">0</span>.],\n         [<span class=\"pl-c1\">0</span>., <span class=\"pl-c1\">0</span>., <span class=\"pl-c1\">0</span>., <span class=\"pl-c1\">1</span>., <span class=\"pl-c1\">0</span>.],\n         [<span class=\"pl-c1\">0</span>., <span class=\"pl-c1\">0</span>., <span class=\"pl-c1\">0</span>., <span class=\"pl-c1\">1</span>., <span class=\"pl-c1\">0</span>.]],\n\n        [[<span class=\"pl-c1\">0</span>., <span class=\"pl-c1\">0</span>., <span class=\"pl-c1\">0</span>., <span class=\"pl-c1\">0</span>., <span class=\"pl-c1\">1</span>.],\n         [<span class=\"pl-c1\">0</span>., <span class=\"pl-c1\">0</span>., <span class=\"pl-c1\">0</span>., <span class=\"pl-c1\">0</span>., <span class=\"pl-c1\">1</span>.],\n         [<span class=\"pl-c1\">0</span>., <span class=\"pl-c1\">0</span>., <span class=\"pl-c1\">0</span>., <span class=\"pl-c1\">0</span>., <span class=\"pl-c1\">1</span>.]]])\n\nIn [<span class=\"pl-c1\">50</span>]: d.enumerate_support().shape\nOut[<span class=\"pl-c1\">50</span>]: torch.Size([<span class=\"pl-c1\">5</span>, <span class=\"pl-c1\">3</span>, <span class=\"pl-c1\">5</span>])\n\nIn [<span class=\"pl-c1\">51</span>]: d.enumerate_support(<span class=\"pl-v\">expand</span><span class=\"pl-k\">=</span><span class=\"pl-c1\">False</span>)\nOut[<span class=\"pl-c1\">51</span>]:\ntensor([[[<span class=\"pl-c1\">1</span>., <span class=\"pl-c1\">0</span>., <span class=\"pl-c1\">0</span>., <span class=\"pl-c1\">0</span>., <span class=\"pl-c1\">0</span>.]],\n\n        [[<span class=\"pl-c1\">0</span>., <span class=\"pl-c1\">1</span>., <span class=\"pl-c1\">0</span>., <span class=\"pl-c1\">0</span>., <span class=\"pl-c1\">0</span>.]],\n\n        [[<span class=\"pl-c1\">0</span>., <span class=\"pl-c1\">0</span>., <span class=\"pl-c1\">1</span>., <span class=\"pl-c1\">0</span>., <span class=\"pl-c1\">0</span>.]],\n\n        [[<span class=\"pl-c1\">0</span>., <span class=\"pl-c1\">0</span>., <span class=\"pl-c1\">0</span>., <span class=\"pl-c1\">1</span>., <span class=\"pl-c1\">0</span>.]],\n\n        [[<span class=\"pl-c1\">0</span>., <span class=\"pl-c1\">0</span>., <span class=\"pl-c1\">0</span>., <span class=\"pl-c1\">0</span>., <span class=\"pl-c1\">1</span>.]]])\n\nIn [<span class=\"pl-c1\">52</span>]: d.enumerate_support(<span class=\"pl-v\">expand</span><span class=\"pl-k\">=</span><span class=\"pl-c1\">False</span>).shape\nOut[<span class=\"pl-c1\">52</span>]: torch.Size([<span class=\"pl-c1\">5</span>, <span class=\"pl-c1\">1</span>, <span class=\"pl-c1\">5</span>])</pre></div>\n<p><strong>Motivation:</strong></p>\n<ul>\n<li>Currently <code>enumerate_support</code> builds up tensors of size <code>support + batch_shape + event_shape</code>, but the values are <em>repeated</em> over the <code>batch_shape</code> (adding little in the way of information). This can lead to expensive matrix operations over large tensors when <code>batch_shape</code> is large (see, example above), often leading to OOM issues. We use <code>expand=False</code> in Pyro for message passing inference. e.g. when enumerating over the state space in a Hidden Markov Model. This creates sparse tensors that capture the markov dependence, and allows for the possibility of using optimized matrix operations over these sparse tensors. <code>expand=True</code>, on the other hand, will create tensors that scale exponentially in size with the length of the Markov chain.</li>\n<li>We have been using this in our <a href=\"https://github.com/uber/pyro/blob/dev/pyro/distributions/torch.py\">patch</a> of <code>torch.distributions</code> in Pyro. The interface has been stable, and it is already being used in a few Pyro algorithms. We think that this is more broadly applicable and will be of interest to the larger distributions community.</li>\n</ul>\n<p>cc. <a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=4583066\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/apaszke\">@apaszke</a>, <a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=648532\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/fritzo\">@fritzo</a>, <a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=1093846\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/alicanb\">@alicanb</a></p>", "body_text": "This adds an optional expand=True kwarg to the distribution.expand_support() method, to get a distribution's support without expanding the values over the distribution's batch_shape.\n\nThe default expand=True preserves the current behavior, whereas expand=False collapses the batch dimensions.\n\ne.g.\nIn [47]: d = dist.OneHotCategorical(torch.ones(3, 5) * 0.5)\n\nIn [48]: d.batch_shape\nOut[48]: torch.Size([3])\n\nIn [49]: d.enumerate_support()\nOut[49]:\ntensor([[[1., 0., 0., 0., 0.],\n         [1., 0., 0., 0., 0.],\n         [1., 0., 0., 0., 0.]],\n\n        [[0., 1., 0., 0., 0.],\n         [0., 1., 0., 0., 0.],\n         [0., 1., 0., 0., 0.]],\n\n        [[0., 0., 1., 0., 0.],\n         [0., 0., 1., 0., 0.],\n         [0., 0., 1., 0., 0.]],\n\n        [[0., 0., 0., 1., 0.],\n         [0., 0., 0., 1., 0.],\n         [0., 0., 0., 1., 0.]],\n\n        [[0., 0., 0., 0., 1.],\n         [0., 0., 0., 0., 1.],\n         [0., 0., 0., 0., 1.]]])\n\nIn [50]: d.enumerate_support().shape\nOut[50]: torch.Size([5, 3, 5])\n\nIn [51]: d.enumerate_support(expand=False)\nOut[51]:\ntensor([[[1., 0., 0., 0., 0.]],\n\n        [[0., 1., 0., 0., 0.]],\n\n        [[0., 0., 1., 0., 0.]],\n\n        [[0., 0., 0., 1., 0.]],\n\n        [[0., 0., 0., 0., 1.]]])\n\nIn [52]: d.enumerate_support(expand=False).shape\nOut[52]: torch.Size([5, 1, 5])\nMotivation:\n\nCurrently enumerate_support builds up tensors of size support + batch_shape + event_shape, but the values are repeated over the batch_shape (adding little in the way of information). This can lead to expensive matrix operations over large tensors when batch_shape is large (see, example above), often leading to OOM issues. We use expand=False in Pyro for message passing inference. e.g. when enumerating over the state space in a Hidden Markov Model. This creates sparse tensors that capture the markov dependence, and allows for the possibility of using optimized matrix operations over these sparse tensors. expand=True, on the other hand, will create tensors that scale exponentially in size with the length of the Markov chain.\nWe have been using this in our patch of torch.distributions in Pyro. The interface has been stable, and it is already being used in a few Pyro algorithms. We think that this is more broadly applicable and will be of interest to the larger distributions community.\n\ncc. @apaszke, @fritzo, @alicanb", "merged": false, "mergeable": null, "rebaseable": null, "mergeable_state": "unknown", "merged_by": null, "comments": 1, "review_comments": 0, "maintainer_can_modify": false, "commits": 4, "additions": 48, "deletions": 32, "changed_files": 7}