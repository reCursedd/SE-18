{"url": "https://api.github.com/repos/pytorch/pytorch/issues/7559", "repository_url": "https://api.github.com/repos/pytorch/pytorch", "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/7559/labels{/name}", "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/7559/comments", "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/7559/events", "html_url": "https://github.com/pytorch/pytorch/issues/7559", "id": 323016111, "node_id": "MDU6SXNzdWUzMjMwMTYxMTE=", "number": 7559, "title": "Wrong results for zero-length slices", "user": {"login": "royf", "id": 2780811, "node_id": "MDQ6VXNlcjI3ODA4MTE=", "avatar_url": "https://avatars1.githubusercontent.com/u/2780811?v=4", "gravatar_id": "", "url": "https://api.github.com/users/royf", "html_url": "https://github.com/royf", "followers_url": "https://api.github.com/users/royf/followers", "following_url": "https://api.github.com/users/royf/following{/other_user}", "gists_url": "https://api.github.com/users/royf/gists{/gist_id}", "starred_url": "https://api.github.com/users/royf/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/royf/subscriptions", "organizations_url": "https://api.github.com/users/royf/orgs", "repos_url": "https://api.github.com/users/royf/repos", "events_url": "https://api.github.com/users/royf/events{/privacy}", "received_events_url": "https://api.github.com/users/royf/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 443484050, "node_id": "MDU6TGFiZWw0NDM0ODQwNTA=", "url": "https://api.github.com/repos/pytorch/pytorch/labels/medium%20priority", "name": "medium priority", "color": "fbca04", "default": false}], "state": "closed", "locked": false, "assignee": {"login": "li-roy", "id": 8813817, "node_id": "MDQ6VXNlcjg4MTM4MTc=", "avatar_url": "https://avatars0.githubusercontent.com/u/8813817?v=4", "gravatar_id": "", "url": "https://api.github.com/users/li-roy", "html_url": "https://github.com/li-roy", "followers_url": "https://api.github.com/users/li-roy/followers", "following_url": "https://api.github.com/users/li-roy/following{/other_user}", "gists_url": "https://api.github.com/users/li-roy/gists{/gist_id}", "starred_url": "https://api.github.com/users/li-roy/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/li-roy/subscriptions", "organizations_url": "https://api.github.com/users/li-roy/orgs", "repos_url": "https://api.github.com/users/li-roy/repos", "events_url": "https://api.github.com/users/li-roy/events{/privacy}", "received_events_url": "https://api.github.com/users/li-roy/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "li-roy", "id": 8813817, "node_id": "MDQ6VXNlcjg4MTM4MTc=", "avatar_url": "https://avatars0.githubusercontent.com/u/8813817?v=4", "gravatar_id": "", "url": "https://api.github.com/users/li-roy", "html_url": "https://github.com/li-roy", "followers_url": "https://api.github.com/users/li-roy/followers", "following_url": "https://api.github.com/users/li-roy/following{/other_user}", "gists_url": "https://api.github.com/users/li-roy/gists{/gist_id}", "starred_url": "https://api.github.com/users/li-roy/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/li-roy/subscriptions", "organizations_url": "https://api.github.com/users/li-roy/orgs", "repos_url": "https://api.github.com/users/li-roy/repos", "events_url": "https://api.github.com/users/li-roy/events{/privacy}", "received_events_url": "https://api.github.com/users/li-roy/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 2, "created_at": "2018-05-14T23:28:38Z", "updated_at": "2018-06-14T21:40:52Z", "closed_at": "2018-06-14T21:40:52Z", "author_association": "NONE", "body_html": "<h2>Issue description</h2>\n<p>Accessing tensors with zero-length slices gives wrong results.</p>\n<h2>Code example</h2>\n<p>There are two problems that could have the same origin.</p>\n<p>First, using zero-length slices after other slices gives the wrong result:</p>\n<div class=\"highlight highlight-source-python\"><pre>i <span class=\"pl-k\">=</span> <span class=\"pl-c1\">slice</span>(<span class=\"pl-c1\">0</span>)\nx <span class=\"pl-k\">=</span> torch.Tensor(<span class=\"pl-c1\">range</span>(<span class=\"pl-c1\">8</span>)).view(<span class=\"pl-c1\">2</span>, <span class=\"pl-c1\">2</span>, <span class=\"pl-c1\">2</span>)\nx[:, i]\n<span class=\"pl-c\"><span class=\"pl-c\">#</span> Out: tensor([ 0.,  4.])</span>\n<span class=\"pl-c\"><span class=\"pl-c\">#</span> Correct result would be: tensor([])</span>\n<span class=\"pl-c\"><span class=\"pl-c\">#</span> Compare:</span>\nx[<span class=\"pl-c1\">0</span>, i]\n<span class=\"pl-c\"><span class=\"pl-c\">#</span> Out: tensor([])</span></pre></div>\n<p>Second, using zero-length slices prevents any further indexing:</p>\n<div class=\"highlight highlight-source-python\"><pre>x[i, <span class=\"pl-c1\">0</span>]\n<span class=\"pl-c\"><span class=\"pl-c\">#</span> RuntimeError: dimension out of range (expected to be in range of [-1, 0], but got 1)</span></pre></div>\n<p>This is likely related to this feature request: <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load issue title\" data-id=\"293948359\" data-permission-text=\"Issue title is private\" data-url=\"https://github.com/pytorch/pytorch/issues/5014\" data-hovercard-type=\"issue\" data-hovercard-url=\"/pytorch/pytorch/issues/5014/hovercard\" href=\"https://github.com/pytorch/pytorch/issues/5014\">#5014</a>.</p>\n<h2>System Info</h2>\n<p>PyTorch version: 0.4.0<br>\nIs debug build: No<br>\nOS: Mac OSX 10.13.4<br>\nPython version: 3.6</p>\n<p>Versions of relevant libraries:<br>\n[pip] numpy (1.14.3)<br>\n[pip] torch (0.4.0)<br>\n[pip] torchvision (0.2.1)<br>\n[conda] pytorch                   0.4.0           py36_cuda0.0_cudnn0.0_1    pytorch<br>\n[conda] torchvision               0.2.1                    py36_1    pytorch</p>", "body_text": "Issue description\nAccessing tensors with zero-length slices gives wrong results.\nCode example\nThere are two problems that could have the same origin.\nFirst, using zero-length slices after other slices gives the wrong result:\ni = slice(0)\nx = torch.Tensor(range(8)).view(2, 2, 2)\nx[:, i]\n# Out: tensor([ 0.,  4.])\n# Correct result would be: tensor([])\n# Compare:\nx[0, i]\n# Out: tensor([])\nSecond, using zero-length slices prevents any further indexing:\nx[i, 0]\n# RuntimeError: dimension out of range (expected to be in range of [-1, 0], but got 1)\nThis is likely related to this feature request: #5014.\nSystem Info\nPyTorch version: 0.4.0\nIs debug build: No\nOS: Mac OSX 10.13.4\nPython version: 3.6\nVersions of relevant libraries:\n[pip] numpy (1.14.3)\n[pip] torch (0.4.0)\n[pip] torchvision (0.2.1)\n[conda] pytorch                   0.4.0           py36_cuda0.0_cudnn0.0_1    pytorch\n[conda] torchvision               0.2.1                    py36_1    pytorch", "body": "## Issue description\r\n\r\nAccessing tensors with zero-length slices gives wrong results.\r\n\r\n## Code example\r\n\r\nThere are two problems that could have the same origin.\r\n\r\nFirst, using zero-length slices after other slices gives the wrong result:\r\n```python\r\ni = slice(0)\r\nx = torch.Tensor(range(8)).view(2, 2, 2)\r\nx[:, i]\r\n# Out: tensor([ 0.,  4.])\r\n# Correct result would be: tensor([])\r\n# Compare:\r\nx[0, i]\r\n# Out: tensor([])\r\n```\r\n\r\nSecond, using zero-length slices prevents any further indexing:\r\n```python\r\nx[i, 0]\r\n# RuntimeError: dimension out of range (expected to be in range of [-1, 0], but got 1)\r\n```\r\nThis is likely related to this feature request: https://github.com/pytorch/pytorch/issues/5014.\r\n\r\n## System Info\r\n\r\nPyTorch version: 0.4.0\r\nIs debug build: No\r\nOS: Mac OSX 10.13.4\r\nPython version: 3.6\r\n\r\nVersions of relevant libraries:\r\n[pip] numpy (1.14.3)\r\n[pip] torch (0.4.0)\r\n[pip] torchvision (0.2.1)\r\n[conda] pytorch                   0.4.0           py36_cuda0.0_cudnn0.0_1    pytorch\r\n[conda] torchvision               0.2.1                    py36_1    pytorch\r\n"}