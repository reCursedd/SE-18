{"url": "https://api.github.com/repos/pytorch/pytorch/issues/comments/328773671", "html_url": "https://github.com/pytorch/pytorch/issues/649#issuecomment-328773671", "issue_url": "https://api.github.com/repos/pytorch/pytorch/issues/649", "id": 328773671, "node_id": "MDEyOklzc3VlQ29tbWVudDMyODc3MzY3MQ==", "user": {"login": "JianboTang", "id": 8263354, "node_id": "MDQ6VXNlcjgyNjMzNTQ=", "avatar_url": "https://avatars0.githubusercontent.com/u/8263354?v=4", "gravatar_id": "", "url": "https://api.github.com/users/JianboTang", "html_url": "https://github.com/JianboTang", "followers_url": "https://api.github.com/users/JianboTang/followers", "following_url": "https://api.github.com/users/JianboTang/following{/other_user}", "gists_url": "https://api.github.com/users/JianboTang/gists{/gist_id}", "starred_url": "https://api.github.com/users/JianboTang/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/JianboTang/subscriptions", "organizations_url": "https://api.github.com/users/JianboTang/orgs", "repos_url": "https://api.github.com/users/JianboTang/repos", "events_url": "https://api.github.com/users/JianboTang/events{/privacy}", "received_events_url": "https://api.github.com/users/JianboTang/received_events", "type": "User", "site_admin": false}, "created_at": "2017-09-12T08:01:23Z", "updated_at": "2017-09-12T08:01:23Z", "author_association": "NONE", "body_html": "<p><a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=4583066\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/apaszke\">@apaszke</a> the second dimension should be equal?  I encounter this problem while the first dimension is equal</p>\n<p>Traceback (most recent call last):<br>\nFile \"/home/tangjianbo/anaconda2/lib/python2.7/pdb.py\", line 1314, in main<br>\npdb._runscript(mainpyfile)<br>\nFile \"/home/tangjianbo/anaconda2/lib/python2.7/pdb.py\", line 1233, in _runscript<br>\nself.run(statement)<br>\nFile \"/home/tangjianbo/anaconda2/lib/python2.7/bdb.py\", line 400, in run<br>\nexec cmd in globals, locals<br>\nFile \"\", line 1, in <br>\nFile \"main_SimpleAoA.py\", line 1, in <br>\nimport argparse<br>\nFile \"main_SimpleAoA.py\", line 352, in main<br>\ntrain_loss_epoch, train_prob_epoch = train(epoch)<br>\nFile \"main_SimpleAoA.py\", line 300, in train<br>\nloss, prob = AoA(q1_input, q2_input, lb_input)<br>\nFile \"/home/tangjianbo/anaconda2/lib/python2.7/site-packages/torch/nn/modules/module.py\", line 224, in <strong>call</strong><br>\nresult = self.forward(*input, **kwargs)<br>\nFile \"/home/tangjianbo/anaconda2/lib/python2.7/site-packages/torch/nn/parallel/data_parallel.py\", line 60, in forward<br>\noutputs = self.parallel_apply(replicas, inputs, kwargs)<br>\nFile \"/home/tangjianbo/anaconda2/lib/python2.7/site-packages/torch/nn/parallel/data_parallel.py\", line 70, in parallel_apply<br>\nreturn parallel_apply(replicas, inputs, kwargs, self.device_ids[:len(replicas)])<br>\nFile \"/home/tangjianbo/anaconda2/lib/python2.7/site-packages/torch/nn/parallel/parallel_apply.py\", line 67, in parallel_apply<br>\nraise output<br>\nRuntimeError: invalid argument 7: equal number of batches expected at /pytorch/torch/lib/THC/generic/THCTensorMathBlas.cu:447<br>\nUncaught exception. Entering post mortem debugging<br>\nRunning 'cont' or 'step' will restart the program</p>\n<blockquote>\n<p>/home/tangjianbo/anaconda2/lib/python2.7/site-packages/torch/nn/parallel/parallel_apply.py(67)parallel_apply()<br>\n-&gt; raise output<br>\n(Pdb) up<br>\n/home/tangjianbo/anaconda2/lib/python2.7/site-packages/torch/nn/parallel/data_parallel.py(70)parallel_apply()<br>\n-&gt; return parallel_apply(replicas, inputs, kwargs, self.device_ids[:len(replicas)])<br>\n(Pdb)<br>\n/home/tangjianbo/anaconda2/lib/python2.7/site-packages/torch/nn/parallel/data_parallel.py(60)forward()<br>\n-&gt; outputs = self.parallel_apply(replicas, inputs, kwargs)<br>\n(Pdb)<br>\n/home/tangjianbo/anaconda2/lib/python2.7/site-packages/torch/nn/modules/module.py(224)<strong>call</strong>()<br>\n-&gt; result = self.forward(*input, **kwargs)<br>\n(Pdb)<br>\n/data/tangjianbo/question_normalization/AoA/char/main_SimpleAoA.py(300)train()<br>\n-&gt; loss, prob = AoA(q1_input, q2_input, lb_input)<br>\n(Pdb) q1_input.size()<br>\ntorch.Size([64, 20, 128])<br>\n(Pdb) q2_input.size()<br>\ntorch.Size([64, 38, 128])<br>\n(Pdb) lb_input.size()<br>\ntorch.Size([64, 1])</p>\n</blockquote>", "body_text": "@apaszke the second dimension should be equal?  I encounter this problem while the first dimension is equal\nTraceback (most recent call last):\nFile \"/home/tangjianbo/anaconda2/lib/python2.7/pdb.py\", line 1314, in main\npdb._runscript(mainpyfile)\nFile \"/home/tangjianbo/anaconda2/lib/python2.7/pdb.py\", line 1233, in _runscript\nself.run(statement)\nFile \"/home/tangjianbo/anaconda2/lib/python2.7/bdb.py\", line 400, in run\nexec cmd in globals, locals\nFile \"\", line 1, in \nFile \"main_SimpleAoA.py\", line 1, in \nimport argparse\nFile \"main_SimpleAoA.py\", line 352, in main\ntrain_loss_epoch, train_prob_epoch = train(epoch)\nFile \"main_SimpleAoA.py\", line 300, in train\nloss, prob = AoA(q1_input, q2_input, lb_input)\nFile \"/home/tangjianbo/anaconda2/lib/python2.7/site-packages/torch/nn/modules/module.py\", line 224, in call\nresult = self.forward(*input, **kwargs)\nFile \"/home/tangjianbo/anaconda2/lib/python2.7/site-packages/torch/nn/parallel/data_parallel.py\", line 60, in forward\noutputs = self.parallel_apply(replicas, inputs, kwargs)\nFile \"/home/tangjianbo/anaconda2/lib/python2.7/site-packages/torch/nn/parallel/data_parallel.py\", line 70, in parallel_apply\nreturn parallel_apply(replicas, inputs, kwargs, self.device_ids[:len(replicas)])\nFile \"/home/tangjianbo/anaconda2/lib/python2.7/site-packages/torch/nn/parallel/parallel_apply.py\", line 67, in parallel_apply\nraise output\nRuntimeError: invalid argument 7: equal number of batches expected at /pytorch/torch/lib/THC/generic/THCTensorMathBlas.cu:447\nUncaught exception. Entering post mortem debugging\nRunning 'cont' or 'step' will restart the program\n\n/home/tangjianbo/anaconda2/lib/python2.7/site-packages/torch/nn/parallel/parallel_apply.py(67)parallel_apply()\n-> raise output\n(Pdb) up\n/home/tangjianbo/anaconda2/lib/python2.7/site-packages/torch/nn/parallel/data_parallel.py(70)parallel_apply()\n-> return parallel_apply(replicas, inputs, kwargs, self.device_ids[:len(replicas)])\n(Pdb)\n/home/tangjianbo/anaconda2/lib/python2.7/site-packages/torch/nn/parallel/data_parallel.py(60)forward()\n-> outputs = self.parallel_apply(replicas, inputs, kwargs)\n(Pdb)\n/home/tangjianbo/anaconda2/lib/python2.7/site-packages/torch/nn/modules/module.py(224)call()\n-> result = self.forward(*input, **kwargs)\n(Pdb)\n/data/tangjianbo/question_normalization/AoA/char/main_SimpleAoA.py(300)train()\n-> loss, prob = AoA(q1_input, q2_input, lb_input)\n(Pdb) q1_input.size()\ntorch.Size([64, 20, 128])\n(Pdb) q2_input.size()\ntorch.Size([64, 38, 128])\n(Pdb) lb_input.size()\ntorch.Size([64, 1])", "body": "@apaszke the second dimension should be equal?  I encounter this problem while the first dimension is equal\r\n\r\nTraceback (most recent call last):\r\n  File \"/home/tangjianbo/anaconda2/lib/python2.7/pdb.py\", line 1314, in main\r\n    pdb._runscript(mainpyfile)\r\n  File \"/home/tangjianbo/anaconda2/lib/python2.7/pdb.py\", line 1233, in _runscript\r\n    self.run(statement)\r\n  File \"/home/tangjianbo/anaconda2/lib/python2.7/bdb.py\", line 400, in run\r\n    exec cmd in globals, locals\r\n  File \"<string>\", line 1, in <module>\r\n  File \"main_SimpleAoA.py\", line 1, in <module>\r\n    import argparse\r\n  File \"main_SimpleAoA.py\", line 352, in main\r\n    train_loss_epoch, train_prob_epoch = train(epoch)\r\n  File \"main_SimpleAoA.py\", line 300, in train\r\n    loss, prob = AoA(q1_input, q2_input, lb_input)\r\n  File \"/home/tangjianbo/anaconda2/lib/python2.7/site-packages/torch/nn/modules/module.py\", line 224, in __call__\r\n    result = self.forward(*input, **kwargs)\r\n  File \"/home/tangjianbo/anaconda2/lib/python2.7/site-packages/torch/nn/parallel/data_parallel.py\", line 60, in forward\r\n    outputs = self.parallel_apply(replicas, inputs, kwargs)\r\n  File \"/home/tangjianbo/anaconda2/lib/python2.7/site-packages/torch/nn/parallel/data_parallel.py\", line 70, in parallel_apply\r\n    return parallel_apply(replicas, inputs, kwargs, self.device_ids[:len(replicas)])\r\n  File \"/home/tangjianbo/anaconda2/lib/python2.7/site-packages/torch/nn/parallel/parallel_apply.py\", line 67, in parallel_apply\r\n    raise output\r\nRuntimeError: invalid argument 7: equal number of batches expected at /pytorch/torch/lib/THC/generic/THCTensorMathBlas.cu:447\r\nUncaught exception. Entering post mortem debugging\r\nRunning 'cont' or 'step' will restart the program\r\n> /home/tangjianbo/anaconda2/lib/python2.7/site-packages/torch/nn/parallel/parallel_apply.py(67)parallel_apply()\r\n-> raise output\r\n(Pdb) up\r\n> /home/tangjianbo/anaconda2/lib/python2.7/site-packages/torch/nn/parallel/data_parallel.py(70)parallel_apply()\r\n-> return parallel_apply(replicas, inputs, kwargs, self.device_ids[:len(replicas)])\r\n(Pdb) \r\n> /home/tangjianbo/anaconda2/lib/python2.7/site-packages/torch/nn/parallel/data_parallel.py(60)forward()\r\n-> outputs = self.parallel_apply(replicas, inputs, kwargs)\r\n(Pdb) \r\n> /home/tangjianbo/anaconda2/lib/python2.7/site-packages/torch/nn/modules/module.py(224)__call__()\r\n-> result = self.forward(*input, **kwargs)\r\n(Pdb) \r\n> /data/tangjianbo/question_normalization/AoA/char/main_SimpleAoA.py(300)train()\r\n-> loss, prob = AoA(q1_input, q2_input, lb_input)\r\n(Pdb) q1_input.size()\r\ntorch.Size([64, 20, 128])\r\n(Pdb) q2_input.size()\r\ntorch.Size([64, 38, 128])\r\n(Pdb) lb_input.size()\r\ntorch.Size([64, 1])"}