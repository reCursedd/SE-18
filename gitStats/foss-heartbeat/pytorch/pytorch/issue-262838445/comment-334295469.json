{"url": "https://api.github.com/repos/pytorch/pytorch/issues/comments/334295469", "html_url": "https://github.com/pytorch/pytorch/pull/2975#issuecomment-334295469", "issue_url": "https://api.github.com/repos/pytorch/pytorch/issues/2975", "id": 334295469, "node_id": "MDEyOklzc3VlQ29tbWVudDMzNDI5NTQ2OQ==", "user": {"login": "apaszke", "id": 4583066, "node_id": "MDQ6VXNlcjQ1ODMwNjY=", "avatar_url": "https://avatars3.githubusercontent.com/u/4583066?v=4", "gravatar_id": "", "url": "https://api.github.com/users/apaszke", "html_url": "https://github.com/apaszke", "followers_url": "https://api.github.com/users/apaszke/followers", "following_url": "https://api.github.com/users/apaszke/following{/other_user}", "gists_url": "https://api.github.com/users/apaszke/gists{/gist_id}", "starred_url": "https://api.github.com/users/apaszke/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/apaszke/subscriptions", "organizations_url": "https://api.github.com/users/apaszke/orgs", "repos_url": "https://api.github.com/users/apaszke/repos", "events_url": "https://api.github.com/users/apaszke/events{/privacy}", "received_events_url": "https://api.github.com/users/apaszke/received_events", "type": "User", "site_admin": false}, "created_at": "2017-10-04T21:30:49Z", "updated_at": "2017-10-04T21:30:49Z", "author_association": "MEMBER", "body_html": "<p>I don't understand why do we have to introduce a backend-specific tensor into ATen. Can't we just have a single method that takes in Tensor probabilities, inspects the type, and automatically dispatches to the correct overload? That's what PyTorch does</p>", "body_text": "I don't understand why do we have to introduce a backend-specific tensor into ATen. Can't we just have a single method that takes in Tensor probabilities, inspects the type, and automatically dispatches to the correct overload? That's what PyTorch does", "body": "I don't understand why do we have to introduce a backend-specific tensor into ATen. Can't we just have a single method that takes in Tensor probabilities, inspects the type, and automatically dispatches to the correct overload? That's what PyTorch does"}