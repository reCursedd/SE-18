{"url": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/122052508", "pull_request_review_id": 44133973, "id": 122052508, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEyMjA1MjUwOA==", "diff_hunk": "@@ -2606,6 +2607,61 @@ def test_orthogonal(self):\n                                          torch.eye(rows) * gain ** 2, prec=1e-6)\n \n \n+# functional loss wrappers\n+\n+\n+class _SmoothL1LossFunctional(_Loss):", "path": "test/test_nn.py", "position": null, "original_position": 22, "commit_id": "461c5274ccf7b1f1ea88ccf0012b00ed420feb8d", "original_commit_id": "89e432ee25cf112f3d92880a4436fc36b08246fb", "user": {"login": "fmassa", "id": 9110200, "node_id": "MDQ6VXNlcjkxMTAyMDA=", "avatar_url": "https://avatars2.githubusercontent.com/u/9110200?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fmassa", "html_url": "https://github.com/fmassa", "followers_url": "https://api.github.com/users/fmassa/followers", "following_url": "https://api.github.com/users/fmassa/following{/other_user}", "gists_url": "https://api.github.com/users/fmassa/gists{/gist_id}", "starred_url": "https://api.github.com/users/fmassa/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fmassa/subscriptions", "organizations_url": "https://api.github.com/users/fmassa/orgs", "repos_url": "https://api.github.com/users/fmassa/repos", "events_url": "https://api.github.com/users/fmassa/events{/privacy}", "received_events_url": "https://api.github.com/users/fmassa/received_events", "type": "User", "site_admin": false}, "body": "I'm not sure this is the best way to test them. I actually just noticed that we don't have tests for any of the modules in `functional`, and are relying only on tests for their `Module` counterpart.\r\nI'd say that as the `Module` call into `functional`, in a way that mimics `functional` interface with classes, it would be enough to test `Module` only. @apaszke wdyt?", "created_at": "2017-06-14T20:14:23Z", "updated_at": "2018-11-23T15:33:54Z", "html_url": "https://github.com/pytorch/pytorch/pull/1801#discussion_r122052508", "pull_request_url": "https://api.github.com/repos/pytorch/pytorch/pulls/1801", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/122052508"}, "html": {"href": "https://github.com/pytorch/pytorch/pull/1801#discussion_r122052508"}, "pull_request": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/1801"}}, "body_html": "<p>I'm not sure this is the best way to test them. I actually just noticed that we don't have tests for any of the modules in <code>functional</code>, and are relying only on tests for their <code>Module</code> counterpart.<br>\nI'd say that as the <code>Module</code> call into <code>functional</code>, in a way that mimics <code>functional</code> interface with classes, it would be enough to test <code>Module</code> only. <a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=4583066\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/apaszke\">@apaszke</a> wdyt?</p>", "body_text": "I'm not sure this is the best way to test them. I actually just noticed that we don't have tests for any of the modules in functional, and are relying only on tests for their Module counterpart.\nI'd say that as the Module call into functional, in a way that mimics functional interface with classes, it would be enough to test Module only. @apaszke wdyt?"}