{"url": "https://api.github.com/repos/pytorch/pytorch/issues/comments/385351505", "html_url": "https://github.com/pytorch/pytorch/issues/6988#issuecomment-385351505", "issue_url": "https://api.github.com/repos/pytorch/pytorch/issues/6988", "id": 385351505, "node_id": "MDEyOklzc3VlQ29tbWVudDM4NTM1MTUwNQ==", "user": {"login": "fmassa", "id": 9110200, "node_id": "MDQ6VXNlcjkxMTAyMDA=", "avatar_url": "https://avatars2.githubusercontent.com/u/9110200?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fmassa", "html_url": "https://github.com/fmassa", "followers_url": "https://api.github.com/users/fmassa/followers", "following_url": "https://api.github.com/users/fmassa/following{/other_user}", "gists_url": "https://api.github.com/users/fmassa/gists{/gist_id}", "starred_url": "https://api.github.com/users/fmassa/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fmassa/subscriptions", "organizations_url": "https://api.github.com/users/fmassa/orgs", "repos_url": "https://api.github.com/users/fmassa/repos", "events_url": "https://api.github.com/users/fmassa/events{/privacy}", "received_events_url": "https://api.github.com/users/fmassa/received_events", "type": "User", "site_admin": false}, "created_at": "2018-04-30T09:35:01Z", "updated_at": "2018-04-30T09:35:01Z", "author_association": "MEMBER", "body_html": "<p><a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=4583066\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/apaszke\">@apaszke</a> I think it might be worth listing the cases where <code>size_average</code> is actually doing what most people want it to do. Maybe the current behavior of <code>size_average</code> is already good enough.</p>\n<p>That being said, now that we have <code>reduce=False</code> for all losses (and once we get reduction over multiple dimensions merged in master), it will be super easy to let users control what they want to do.</p>", "body_text": "@apaszke I think it might be worth listing the cases where size_average is actually doing what most people want it to do. Maybe the current behavior of size_average is already good enough.\nThat being said, now that we have reduce=False for all losses (and once we get reduction over multiple dimensions merged in master), it will be super easy to let users control what they want to do.", "body": "@apaszke I think it might be worth listing the cases where `size_average` is actually doing what most people want it to do. Maybe the current behavior of `size_average` is already good enough.\r\n\r\nThat being said, now that we have `reduce=False` for all losses (and once we get reduction over multiple dimensions merged in master), it will be super easy to let users control what they want to do."}