{"url": "https://api.github.com/repos/pytorch/pytorch/issues/comments/385420130", "html_url": "https://github.com/pytorch/pytorch/issues/6988#issuecomment-385420130", "issue_url": "https://api.github.com/repos/pytorch/pytorch/issues/6988", "id": 385420130, "node_id": "MDEyOklzc3VlQ29tbWVudDM4NTQyMDEzMA==", "user": {"login": "zuoxingdong", "id": 18168681, "node_id": "MDQ6VXNlcjE4MTY4Njgx", "avatar_url": "https://avatars0.githubusercontent.com/u/18168681?v=4", "gravatar_id": "", "url": "https://api.github.com/users/zuoxingdong", "html_url": "https://github.com/zuoxingdong", "followers_url": "https://api.github.com/users/zuoxingdong/followers", "following_url": "https://api.github.com/users/zuoxingdong/following{/other_user}", "gists_url": "https://api.github.com/users/zuoxingdong/gists{/gist_id}", "starred_url": "https://api.github.com/users/zuoxingdong/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/zuoxingdong/subscriptions", "organizations_url": "https://api.github.com/users/zuoxingdong/orgs", "repos_url": "https://api.github.com/users/zuoxingdong/repos", "events_url": "https://api.github.com/users/zuoxingdong/events{/privacy}", "received_events_url": "https://api.github.com/users/zuoxingdong/received_events", "type": "User", "site_admin": false}, "created_at": "2018-04-30T14:44:22Z", "updated_at": "2018-04-30T14:44:22Z", "author_association": "CONTRIBUTOR", "body_html": "<p><a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=9110200\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/fmassa\">@fmassa</a> It seems to me that the more common behavior of <code>size_average</code> should be firstly summing up the losses across data dimension and then averaging over batch. But yes, as you pointed out, the flag <code>reduce=False</code> provides user full flexibility.</p>\n<p>I guess it might be good either to mention clearly to the user about the current behavior of <code>size_average</code> is to average over all elements, or change the behavior of <code>size_average</code> to the one described above which is more commonly used to train NN models and thus more user-friendly, and then the 'element-wise' averaging behavior leave to the user.</p>\n<p><a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=4583066\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/apaszke\">@apaszke</a><br>\nOr maybe have one more flag, say <code>size_average_batch</code> and <code>size_average_all</code> to provide both behaviors.</p>", "body_text": "@fmassa It seems to me that the more common behavior of size_average should be firstly summing up the losses across data dimension and then averaging over batch. But yes, as you pointed out, the flag reduce=False provides user full flexibility.\nI guess it might be good either to mention clearly to the user about the current behavior of size_average is to average over all elements, or change the behavior of size_average to the one described above which is more commonly used to train NN models and thus more user-friendly, and then the 'element-wise' averaging behavior leave to the user.\n@apaszke\nOr maybe have one more flag, say size_average_batch and size_average_all to provide both behaviors.", "body": "@fmassa It seems to me that the more common behavior of `size_average` should be firstly summing up the losses across data dimension and then averaging over batch. But yes, as you pointed out, the flag `reduce=False` provides user full flexibility. \r\n\r\nI guess it might be good either to mention clearly to the user about the current behavior of `size_average` is to average over all elements, or change the behavior of `size_average` to the one described above which is more commonly used to train NN models and thus more user-friendly, and then the 'element-wise' averaging behavior leave to the user. \r\n\r\n@apaszke \r\nOr maybe have one more flag, say `size_average_batch` and `size_average_all` to provide both behaviors. "}