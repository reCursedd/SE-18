{"url": "https://api.github.com/repos/pytorch/pytorch/issues/1311", "repository_url": "https://api.github.com/repos/pytorch/pytorch", "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/1311/labels{/name}", "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/1311/comments", "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/1311/events", "html_url": "https://github.com/pytorch/pytorch/issues/1311", "id": 223170324, "node_id": "MDU6SXNzdWUyMjMxNzAzMjQ=", "number": 1311, "title": "Stochasticity after reshaping operations", "user": {"login": "khanhptnk", "id": 1854828, "node_id": "MDQ6VXNlcjE4NTQ4Mjg=", "avatar_url": "https://avatars3.githubusercontent.com/u/1854828?v=4", "gravatar_id": "", "url": "https://api.github.com/users/khanhptnk", "html_url": "https://github.com/khanhptnk", "followers_url": "https://api.github.com/users/khanhptnk/followers", "following_url": "https://api.github.com/users/khanhptnk/following{/other_user}", "gists_url": "https://api.github.com/users/khanhptnk/gists{/gist_id}", "starred_url": "https://api.github.com/users/khanhptnk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/khanhptnk/subscriptions", "organizations_url": "https://api.github.com/users/khanhptnk/orgs", "repos_url": "https://api.github.com/users/khanhptnk/repos", "events_url": "https://api.github.com/users/khanhptnk/events{/privacy}", "received_events_url": "https://api.github.com/users/khanhptnk/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 11, "created_at": "2017-04-20T19:15:14Z", "updated_at": "2018-02-20T21:04:11Z", "closed_at": "2018-02-20T21:04:11Z", "author_association": "NONE", "body_html": "<p>I would love to see PyTorch maintaining Stochasticity of the output after reshaping. Right now, if you concat or just .view(-1) a stochastic node, you can't backprop by .reinforce(), which is not convenient for structure prediction like machine translation.</p>", "body_text": "I would love to see PyTorch maintaining Stochasticity of the output after reshaping. Right now, if you concat or just .view(-1) a stochastic node, you can't backprop by .reinforce(), which is not convenient for structure prediction like machine translation.", "body": "I would love to see PyTorch maintaining Stochasticity of the output after reshaping. Right now, if you concat or just .view(-1) a stochastic node, you can't backprop by .reinforce(), which is not convenient for structure prediction like machine translation.\r\n"}