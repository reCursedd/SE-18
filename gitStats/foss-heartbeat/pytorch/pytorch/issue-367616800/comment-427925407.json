{"url": "https://api.github.com/repos/pytorch/pytorch/issues/comments/427925407", "html_url": "https://github.com/pytorch/pytorch/pull/12443#issuecomment-427925407", "issue_url": "https://api.github.com/repos/pytorch/pytorch/issues/12443", "id": 427925407, "node_id": "MDEyOklzc3VlQ29tbWVudDQyNzkyNTQwNw==", "user": {"login": "sinkingsugar", "id": 7008900, "node_id": "MDQ6VXNlcjcwMDg5MDA=", "avatar_url": "https://avatars2.githubusercontent.com/u/7008900?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sinkingsugar", "html_url": "https://github.com/sinkingsugar", "followers_url": "https://api.github.com/users/sinkingsugar/followers", "following_url": "https://api.github.com/users/sinkingsugar/following{/other_user}", "gists_url": "https://api.github.com/users/sinkingsugar/gists{/gist_id}", "starred_url": "https://api.github.com/users/sinkingsugar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sinkingsugar/subscriptions", "organizations_url": "https://api.github.com/users/sinkingsugar/orgs", "repos_url": "https://api.github.com/users/sinkingsugar/repos", "events_url": "https://api.github.com/users/sinkingsugar/events{/privacy}", "received_events_url": "https://api.github.com/users/sinkingsugar/received_events", "type": "User", "site_admin": false}, "created_at": "2018-10-08T17:58:15Z", "updated_at": "2018-10-08T17:58:15Z", "author_association": "CONTRIBUTOR", "body_html": "<p>Yeah I heard about that. We will adapt I suppose since there is nothing we can do on our side except pointing this out.</p>\n<p>So far I setup a nightly build that merges PyTorch master and re-generates NimTorch derivatives and definitions, runs tests (linux and wasm only for now) automatically deploying to conda new packages. Works nicely! I hope to never hard fork really.</p>\n<p>Thing is that I see too much opportunity out of ATen being so slim, the TF guys had to struggle to get TF.JS to run on browsers, we already compile into nice wasm (and actually it's small and fast when compiled with proper flags), or already able to infer on super closed platforms like game consoles.</p>\n<p>Migrating to a core c10 is ok, but there are way too many hard coded dependencies in anything that is not ATen (which code quality wise is much higher then the rest imho, and that should be noted and kept).</p>", "body_text": "Yeah I heard about that. We will adapt I suppose since there is nothing we can do on our side except pointing this out.\nSo far I setup a nightly build that merges PyTorch master and re-generates NimTorch derivatives and definitions, runs tests (linux and wasm only for now) automatically deploying to conda new packages. Works nicely! I hope to never hard fork really.\nThing is that I see too much opportunity out of ATen being so slim, the TF guys had to struggle to get TF.JS to run on browsers, we already compile into nice wasm (and actually it's small and fast when compiled with proper flags), or already able to infer on super closed platforms like game consoles.\nMigrating to a core c10 is ok, but there are way too many hard coded dependencies in anything that is not ATen (which code quality wise is much higher then the rest imho, and that should be noted and kept).", "body": "Yeah I heard about that. We will adapt I suppose since there is nothing we can do on our side except pointing this out.\r\n\r\nSo far I setup a nightly build that merges PyTorch master and re-generates NimTorch derivatives and definitions, runs tests (linux and wasm only for now) automatically deploying to conda new packages. Works nicely! I hope to never hard fork really.\r\n\r\nThing is that I see too much opportunity out of ATen being so slim, the TF guys had to struggle to get TF.JS to run on browsers, we already compile into nice wasm (and actually it's small and fast when compiled with proper flags), or already able to infer on super closed platforms like game consoles.\r\n\r\nMigrating to a core c10 is ok, but there are way too many hard coded dependencies in anything that is not ATen (which code quality wise is much higher then the rest imho, and that should be noted and kept)."}