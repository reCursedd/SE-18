{"url": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/197610478", "pull_request_review_id": 131393198, "id": 197610478, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5NzYxMDQ3OA==", "diff_hunk": "@@ -0,0 +1,93 @@\n+#include \"torch/csrc/jit/passes/constant_propagation.h\"\n+#include \"torch/csrc/jit/passes/dead_code_elimination.h\"\n+#include \"torch/csrc/utils/functional.h\"\n+#include \"torch/csrc/jit/interpreter.h\"\n+\n+namespace torch { namespace jit {\n+\n+std::unordered_set<Symbol> skip_list = {\n+  //FIXME If & Loop require special casing because they cannot be run as a\n+  //single node.\n+  prim::If,\n+  prim::Loop,\n+  //FIXME Same problem as in DCE - cpp & python PythonOp and CppOp should be\n+  //FIXME treated as having side effects but ONNX depends on them being removed\n+  prim::Print,\n+ };\n+\n+std::vector<at::Tensor> runNode(Node *n) {\n+  auto graph = std::make_shared<Graph>();\n+  auto block = graph->block();\n+  //very similar to Block::cloneFrom, but here we are cloning just the node,\n+  //and not recursively\n+  std::unordered_map<Value*, Value*> local_map;\n+  auto env = [&](Value * v) {\n+    auto it = local_map.find(v);\n+    if(it != local_map.end())\n+      return it->second;\n+    barf(\"Encountered a use of a value not in scope\");\n+  };\n+  for(auto input : n->inputs()) {\n+    local_map[input] = block->addInput()->copyMetadata(input)->setStage(input->stage());", "path": "torch/csrc/jit/passes/constant_propagation.cpp", "position": null, "original_position": 31, "commit_id": "2f5d9000fc9fa0ba612fa98f8ff7549d818528cd", "original_commit_id": "2e6987d2fb1e562090fb94c309155f6999f63b33", "user": {"login": "apaszke", "id": 4583066, "node_id": "MDQ6VXNlcjQ1ODMwNjY=", "avatar_url": "https://avatars3.githubusercontent.com/u/4583066?v=4", "gravatar_id": "", "url": "https://api.github.com/users/apaszke", "html_url": "https://github.com/apaszke", "followers_url": "https://api.github.com/users/apaszke/followers", "following_url": "https://api.github.com/users/apaszke/following{/other_user}", "gists_url": "https://api.github.com/users/apaszke/gists{/gist_id}", "starred_url": "https://api.github.com/users/apaszke/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/apaszke/subscriptions", "organizations_url": "https://api.github.com/users/apaszke/orgs", "repos_url": "https://api.github.com/users/apaszke/repos", "events_url": "https://api.github.com/users/apaszke/events{/privacy}", "received_events_url": "https://api.github.com/users/apaszke/received_events", "type": "User", "site_admin": false}, "body": "You can ignore `setStage`. We're not using those anymore and should probably remove them", "created_at": "2018-06-23T12:17:12Z", "updated_at": "2018-11-23T15:46:10Z", "html_url": "https://github.com/pytorch/pytorch/pull/8808#discussion_r197610478", "pull_request_url": "https://api.github.com/repos/pytorch/pytorch/pulls/8808", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/197610478"}, "html": {"href": "https://github.com/pytorch/pytorch/pull/8808#discussion_r197610478"}, "pull_request": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/8808"}}, "body_html": "<p>You can ignore <code>setStage</code>. We're not using those anymore and should probably remove them</p>", "body_text": "You can ignore setStage. We're not using those anymore and should probably remove them"}