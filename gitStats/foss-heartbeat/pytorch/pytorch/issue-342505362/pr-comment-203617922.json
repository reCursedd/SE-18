{"url": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/203617922", "pull_request_review_id": 138540116, "id": 203617922, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwMzYxNzkyMg==", "diff_hunk": "@@ -227,11 +227,37 @@ using OperatorMap = std::unordered_map<Symbol, std::vector<std::shared_ptr<Opera\n struct OperatorRegistry  {\n   OperatorMap operators;\n   std::mutex lock;\n+  // TODO: comment\n+  std::unordered_map<std::string, std::shared_ptr<Operator>> operators_by_sig;\n+  std::unordered_map<const char *, std::shared_ptr<Operator>> operators_by_sig_literal;\n   void registerOperator(Operator&& op){\n     std::lock_guard<std::mutex> guard(lock);\n+\n     Symbol sym = Symbol::fromQualString(op.schema.name);\n-    operators[sym].push_back(std::make_shared<Operator>(std::move(op)));\n+    auto op_ptr = std::make_shared<Operator>(std::move(op));\n+\n+    operators[sym].push_back(op_ptr);\n+\n+    std::ostringstream s;\n+    s << op.schema;\n+    operators_by_sig[s.str()] = op_ptr;\n+  }\n+\n+  Operator& lookupByLiteral(const char * name) {\n+    auto it = operators_by_sig_literal.find(name);\n+    if (it == operators_by_sig_literal.end()) {\n+      auto op_ptr_it = operators_by_sig.find(name);\n+      if (op_ptr_it == operators_by_sig.end()) {\n+        for (auto & entry : operators_by_sig) {\n+          std::cout << entry.first << std::endl;", "path": "torch/csrc/jit/operator.cpp", "position": null, "original_position": 27, "commit_id": "ef15a232d7a091f02f20bd5632d19583286e3ba3", "original_commit_id": "ee9c00190a2d077295ccea0e1ff0c1100ec59b7d", "user": {"login": "zdevito", "id": 370202, "node_id": "MDQ6VXNlcjM3MDIwMg==", "avatar_url": "https://avatars0.githubusercontent.com/u/370202?v=4", "gravatar_id": "", "url": "https://api.github.com/users/zdevito", "html_url": "https://github.com/zdevito", "followers_url": "https://api.github.com/users/zdevito/followers", "following_url": "https://api.github.com/users/zdevito/following{/other_user}", "gists_url": "https://api.github.com/users/zdevito/gists{/gist_id}", "starred_url": "https://api.github.com/users/zdevito/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/zdevito/subscriptions", "organizations_url": "https://api.github.com/users/zdevito/orgs", "repos_url": "https://api.github.com/users/zdevito/repos", "events_url": "https://api.github.com/users/zdevito/events{/privacy}", "received_events_url": "https://api.github.com/users/zdevito/received_events", "type": "User", "site_admin": false}, "body": "debug print", "created_at": "2018-07-19T06:51:59Z", "updated_at": "2018-11-23T15:47:41Z", "html_url": "https://github.com/pytorch/pytorch/pull/9567#discussion_r203617922", "pull_request_url": "https://api.github.com/repos/pytorch/pytorch/pulls/9567", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/203617922"}, "html": {"href": "https://github.com/pytorch/pytorch/pull/9567#discussion_r203617922"}, "pull_request": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/9567"}}, "body_html": "<p>debug print</p>", "body_text": "debug print"}