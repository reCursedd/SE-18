{"url": "https://api.github.com/repos/pytorch/pytorch/issues/5823", "repository_url": "https://api.github.com/repos/pytorch/pytorch", "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/5823/labels{/name}", "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/5823/comments", "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/5823/events", "html_url": "https://github.com/pytorch/pytorch/issues/5823", "id": 305741782, "node_id": "MDU6SXNzdWUzMDU3NDE3ODI=", "number": 5823, "title": "Add support similar to `tf.images.resize_images`.", "user": {"login": "ndronen", "id": 21194, "node_id": "MDQ6VXNlcjIxMTk0", "avatar_url": "https://avatars2.githubusercontent.com/u/21194?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ndronen", "html_url": "https://github.com/ndronen", "followers_url": "https://api.github.com/users/ndronen/followers", "following_url": "https://api.github.com/users/ndronen/following{/other_user}", "gists_url": "https://api.github.com/users/ndronen/gists{/gist_id}", "starred_url": "https://api.github.com/users/ndronen/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ndronen/subscriptions", "organizations_url": "https://api.github.com/users/ndronen/orgs", "repos_url": "https://api.github.com/users/ndronen/repos", "events_url": "https://api.github.com/users/ndronen/events{/privacy}", "received_events_url": "https://api.github.com/users/ndronen/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 443484050, "node_id": "MDU6TGFiZWw0NDM0ODQwNTA=", "url": "https://api.github.com/repos/pytorch/pytorch/labels/medium%20priority", "name": "medium priority", "color": "fbca04", "default": false}], "state": "closed", "locked": false, "assignee": {"login": "ailzhang", "id": 5248122, "node_id": "MDQ6VXNlcjUyNDgxMjI=", "avatar_url": "https://avatars2.githubusercontent.com/u/5248122?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ailzhang", "html_url": "https://github.com/ailzhang", "followers_url": "https://api.github.com/users/ailzhang/followers", "following_url": "https://api.github.com/users/ailzhang/following{/other_user}", "gists_url": "https://api.github.com/users/ailzhang/gists{/gist_id}", "starred_url": "https://api.github.com/users/ailzhang/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ailzhang/subscriptions", "organizations_url": "https://api.github.com/users/ailzhang/orgs", "repos_url": "https://api.github.com/users/ailzhang/repos", "events_url": "https://api.github.com/users/ailzhang/events{/privacy}", "received_events_url": "https://api.github.com/users/ailzhang/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "ailzhang", "id": 5248122, "node_id": "MDQ6VXNlcjUyNDgxMjI=", "avatar_url": "https://avatars2.githubusercontent.com/u/5248122?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ailzhang", "html_url": "https://github.com/ailzhang", "followers_url": "https://api.github.com/users/ailzhang/followers", "following_url": "https://api.github.com/users/ailzhang/following{/other_user}", "gists_url": "https://api.github.com/users/ailzhang/gists{/gist_id}", "starred_url": "https://api.github.com/users/ailzhang/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ailzhang/subscriptions", "organizations_url": "https://api.github.com/users/ailzhang/orgs", "repos_url": "https://api.github.com/users/ailzhang/repos", "events_url": "https://api.github.com/users/ailzhang/events{/privacy}", "received_events_url": "https://api.github.com/users/ailzhang/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 2, "created_at": "2018-03-15T22:30:41Z", "updated_at": "2018-07-09T17:55:38Z", "closed_at": "2018-07-09T17:55:38Z", "author_association": "NONE", "body_html": "<p>The approaches suggested in <a href=\"https://discuss.pytorch.org/t/autogradable-image-resize/580\" rel=\"nofollow\">this thread</a> lack an appreciation for how just nice <code>tf.images.resize_images</code> is.  It is superior to what exists in PyTorch in that it is both backprop-able and supports resizing to arbitrary sizes. I've found this combination to be particularly valuable when training fullly-convolutional networks with input images with sizes that result in feature maps with sizes that are not divisible by two. The decoder of the FCN can be programmed much more nicely when a tensor resizing feature is available.</p>", "body_text": "The approaches suggested in this thread lack an appreciation for how just nice tf.images.resize_images is.  It is superior to what exists in PyTorch in that it is both backprop-able and supports resizing to arbitrary sizes. I've found this combination to be particularly valuable when training fullly-convolutional networks with input images with sizes that result in feature maps with sizes that are not divisible by two. The decoder of the FCN can be programmed much more nicely when a tensor resizing feature is available.", "body": "The approaches suggested in [this thread](https://discuss.pytorch.org/t/autogradable-image-resize/580) lack an appreciation for how just nice `tf.images.resize_images` is.  It is superior to what exists in PyTorch in that it is both backprop-able and supports resizing to arbitrary sizes. I've found this combination to be particularly valuable when training fullly-convolutional networks with input images with sizes that result in feature maps with sizes that are not divisible by two. The decoder of the FCN can be programmed much more nicely when a tensor resizing feature is available.  \r\n"}