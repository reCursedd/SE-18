{"url": "https://api.github.com/repos/pytorch/pytorch/issues/comments/366302039", "html_url": "https://github.com/pytorch/pytorch/pull/5064#issuecomment-366302039", "issue_url": "https://api.github.com/repos/pytorch/pytorch/issues/5064", "id": 366302039, "node_id": "MDEyOklzc3VlQ29tbWVudDM2NjMwMjAzOQ==", "user": {"login": "ngimel", "id": 15841449, "node_id": "MDQ6VXNlcjE1ODQxNDQ5", "avatar_url": "https://avatars3.githubusercontent.com/u/15841449?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ngimel", "html_url": "https://github.com/ngimel", "followers_url": "https://api.github.com/users/ngimel/followers", "following_url": "https://api.github.com/users/ngimel/following{/other_user}", "gists_url": "https://api.github.com/users/ngimel/gists{/gist_id}", "starred_url": "https://api.github.com/users/ngimel/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ngimel/subscriptions", "organizations_url": "https://api.github.com/users/ngimel/orgs", "repos_url": "https://api.github.com/users/ngimel/repos", "events_url": "https://api.github.com/users/ngimel/events{/privacy}", "received_events_url": "https://api.github.com/users/ngimel/received_events", "type": "User", "site_admin": false}, "created_at": "2018-02-16T17:26:44Z", "updated_at": "2018-02-16T17:26:44Z", "author_association": "CONTRIBUTOR", "body_html": "<p><a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=4583066\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/apaszke\">@apaszke</a> ncclGroupStart and ncclGroupEnd were introduced for a case when a single thread submitted nccl calls for the different GPUs (the way DataParallel operates). In nccl2 it would deadlock unless wrapped in groupStart/groupEnd. For a single GPU per process groupStart/groupEnd is a noop.</p>", "body_text": "@apaszke ncclGroupStart and ncclGroupEnd were introduced for a case when a single thread submitted nccl calls for the different GPUs (the way DataParallel operates). In nccl2 it would deadlock unless wrapped in groupStart/groupEnd. For a single GPU per process groupStart/groupEnd is a noop.", "body": "@apaszke ncclGroupStart and ncclGroupEnd were introduced for a case when a single thread submitted nccl calls for the different GPUs (the way DataParallel operates). In nccl2 it would deadlock unless wrapped in groupStart/groupEnd. For a single GPU per process groupStart/groupEnd is a noop. "}