{"url": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/162254551", "pull_request_review_id": 89677970, "id": 162254551, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE2MjI1NDU1MQ==", "diff_hunk": "@@ -127,19 +126,54 @@ _(zeros) \\\n _(exponent) \\\n _(device)\n \n-enum BuiltinSymbol {\n-  #define DEFINE_SYMBOL(s) \\\n-    k##s,\n-  FORALL_BUILTIN_SYMBOLS(DEFINE_SYMBOL)\n-  #undef DEFINE_SYMBOL\n-  kLastSymbol, //where we start counting for new symbols\n+  enum BuiltinSymbol {\n+    #define DEFINE_SYMBOL(s) \\\n+      k##s,\n+    FORALL_BUILTIN_SYMBOLS(DEFINE_SYMBOL)\n+    #undef DEFINE_SYMBOL\n+    kLastSymbol, //where we start counting for new symbols\n+  };\n+\n+\n+struct Symbol {\n+  Symbol() {}\n+  /*implicit*/ Symbol(BuiltinSymbol value)\n+  : value(value) {}\n+  explicit Symbol(const std::string & s);\n+  explicit Symbol(uint32_t value)\n+  : value(value) {}\n+\n+  operator uint32_t() const {\n+    return value;\n+  }\n+  const char * toString() const;\n+private:\n+  uint32_t value;\n };\n \n-const char * symbolToString(Symbol s);\n-Symbol stringToSymbol(const std::string & s);\n+static inline bool operator==(Symbol lhs, Symbol rhs) {\n+  return static_cast<uint32_t>(lhs) == static_cast<uint32_t>(rhs);\n+}\n+// necessary to prevent ambiguous overload resolutions", "path": "torch/csrc/jit/interned_strings.h", "position": 48, "original_position": 48, "commit_id": "43b3e0ca185b5e403429f17145e78509726b7ac0", "original_commit_id": "43b3e0ca185b5e403429f17145e78509726b7ac0", "user": {"login": "ezyang", "id": 13564, "node_id": "MDQ6VXNlcjEzNTY0", "avatar_url": "https://avatars0.githubusercontent.com/u/13564?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ezyang", "html_url": "https://github.com/ezyang", "followers_url": "https://api.github.com/users/ezyang/followers", "following_url": "https://api.github.com/users/ezyang/following{/other_user}", "gists_url": "https://api.github.com/users/ezyang/gists{/gist_id}", "starred_url": "https://api.github.com/users/ezyang/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ezyang/subscriptions", "organizations_url": "https://api.github.com/users/ezyang/orgs", "repos_url": "https://api.github.com/users/ezyang/repos", "events_url": "https://api.github.com/users/ezyang/events{/privacy}", "received_events_url": "https://api.github.com/users/ezyang/received_events", "type": "User", "site_admin": false}, "body": "\"Woo C++\"", "created_at": "2018-01-18T05:48:24Z", "updated_at": "2018-11-23T15:38:17Z", "html_url": "https://github.com/pytorch/pytorch/pull/4717#discussion_r162254551", "pull_request_url": "https://api.github.com/repos/pytorch/pytorch/pulls/4717", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/162254551"}, "html": {"href": "https://github.com/pytorch/pytorch/pull/4717#discussion_r162254551"}, "pull_request": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/4717"}}, "body_html": "<p>\"Woo C++\"</p>", "body_text": "\"Woo C++\""}