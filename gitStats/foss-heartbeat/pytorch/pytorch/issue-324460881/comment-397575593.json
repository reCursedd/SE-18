{"url": "https://api.github.com/repos/pytorch/pytorch/issues/comments/397575593", "html_url": "https://github.com/pytorch/pytorch/pull/7677#issuecomment-397575593", "issue_url": "https://api.github.com/repos/pytorch/pytorch/issues/7677", "id": 397575593, "node_id": "MDEyOklzc3VlQ29tbWVudDM5NzU3NTU5Mw==", "user": {"login": "albanD", "id": 6359743, "node_id": "MDQ6VXNlcjYzNTk3NDM=", "avatar_url": "https://avatars3.githubusercontent.com/u/6359743?v=4", "gravatar_id": "", "url": "https://api.github.com/users/albanD", "html_url": "https://github.com/albanD", "followers_url": "https://api.github.com/users/albanD/followers", "following_url": "https://api.github.com/users/albanD/following{/other_user}", "gists_url": "https://api.github.com/users/albanD/gists{/gist_id}", "starred_url": "https://api.github.com/users/albanD/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/albanD/subscriptions", "organizations_url": "https://api.github.com/users/albanD/orgs", "repos_url": "https://api.github.com/users/albanD/repos", "events_url": "https://api.github.com/users/albanD/events{/privacy}", "received_events_url": "https://api.github.com/users/albanD/received_events", "type": "User", "site_admin": false}, "created_at": "2018-06-15T10:05:11Z", "updated_at": "2018-06-15T10:05:11Z", "author_association": "COLLABORATOR", "body_html": "<p><a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=4583066\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/apaszke\">@apaszke</a> I ran some benchmarks on an op that corresponds to add a constant to a small tensor of size 10. Both before this PR and with this PR with anomaly mode disabled takes 1.08micro s per call.<br>\nNote that for such a small op, the overhead is significant when the feature is enabled as one call takes 85micro s per call. But given that we have to acquire the GIL, call into python and gather a whole traceback, that's expected.</p>", "body_text": "@apaszke I ran some benchmarks on an op that corresponds to add a constant to a small tensor of size 10. Both before this PR and with this PR with anomaly mode disabled takes 1.08micro s per call.\nNote that for such a small op, the overhead is significant when the feature is enabled as one call takes 85micro s per call. But given that we have to acquire the GIL, call into python and gather a whole traceback, that's expected.", "body": "@apaszke I ran some benchmarks on an op that corresponds to add a constant to a small tensor of size 10. Both before this PR and with this PR with anomaly mode disabled takes 1.08micro s per call.\r\nNote that for such a small op, the overhead is significant when the feature is enabled as one call takes 85micro s per call. But given that we have to acquire the GIL, call into python and gather a whole traceback, that's expected."}