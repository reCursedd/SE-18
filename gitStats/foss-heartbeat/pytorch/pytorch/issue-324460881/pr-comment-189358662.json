{"url": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/189358662", "pull_request_review_id": 121529527, "id": 189358662, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4OTM1ODY2Mg==", "diff_hunk": "@@ -0,0 +1,99 @@\n+import torch\n+\n+\n+class detect_anomaly(object):\n+    r\"\"\"Context-manager that enable anomaly detection for the autograd engine.\n+\n+    This does two things:\n+    - Running the forward pass with detection enabled will allow the backward\n+    pass to print the traceback of the forward operation that created the failing\n+    backward function.\n+    - Any backward computation that generate \"nan\" value will raise an error.\n+\n+    Example:\n+\n+        >>> import torch\n+        >>> from torch import autograd\n+        >>> class MyFunc(autograd.Function):\n+        ...     @staticmethod\n+        ...     def forward(ctx, inp):\n+        ...         return inp.clone()\n+        ...     @staticmethod\n+        ...     def backward(ctx, gO):\n+        ...         # Error during the backward pass\n+        ...         raise RuntimeError(\"Some error in backward\")\n+        ...         return gO.clone()\n+        >>> def run_fn(a):\n+        ...     out = MyFunc.apply(a)\n+        ...     return out.sum()\n+        >>> inp = torch.rand(10, 10, requires_grad=True)\n+        >>> out = run_fn(inp)\n+        >>> out.backward()\n+            Traceback (most recent call last):\n+              File \"<stdin>\", line 1, in <module>\n+              File \"/your/pytorch/intall/torch/tensor.py\", line 93, in backward", "path": "torch/autograd/anomaly_mode.py", "position": null, "original_position": 34, "commit_id": "ff608fec1da7f98b52ff290917865e6fd6fa8ec0", "original_commit_id": "312e4ab87895811bdef0eb71cc9dfdaa9df71e9c", "user": {"login": "fmassa", "id": 9110200, "node_id": "MDQ6VXNlcjkxMTAyMDA=", "avatar_url": "https://avatars2.githubusercontent.com/u/9110200?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fmassa", "html_url": "https://github.com/fmassa", "followers_url": "https://api.github.com/users/fmassa/followers", "following_url": "https://api.github.com/users/fmassa/following{/other_user}", "gists_url": "https://api.github.com/users/fmassa/gists{/gist_id}", "starred_url": "https://api.github.com/users/fmassa/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fmassa/subscriptions", "organizations_url": "https://api.github.com/users/fmassa/orgs", "repos_url": "https://api.github.com/users/fmassa/repos", "events_url": "https://api.github.com/users/fmassa/events{/privacy}", "received_events_url": "https://api.github.com/users/fmassa/received_events", "type": "User", "site_admin": false}, "body": "very minor nit: `intall` -> `install`", "created_at": "2018-05-18T18:38:02Z", "updated_at": "2018-11-23T15:44:16Z", "html_url": "https://github.com/pytorch/pytorch/pull/7677#discussion_r189358662", "pull_request_url": "https://api.github.com/repos/pytorch/pytorch/pulls/7677", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/189358662"}, "html": {"href": "https://github.com/pytorch/pytorch/pull/7677#discussion_r189358662"}, "pull_request": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/7677"}}, "body_html": "<p>very minor nit: <code>intall</code> -&gt; <code>install</code></p>", "body_text": "very minor nit: intall -> install"}