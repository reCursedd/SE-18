{"url": "https://api.github.com/repos/pytorch/pytorch/issues/370", "repository_url": "https://api.github.com/repos/pytorch/pytorch", "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/370/labels{/name}", "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/370/comments", "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/370/events", "html_url": "https://github.com/pytorch/pytorch/issues/370", "id": 198053962, "node_id": "MDU6SXNzdWUxOTgwNTM5NjI=", "number": 370, "title": "Slice tensor on a single-dimension mask", "user": {"login": "adamlerer", "id": 5702157, "node_id": "MDQ6VXNlcjU3MDIxNTc=", "avatar_url": "https://avatars2.githubusercontent.com/u/5702157?v=4", "gravatar_id": "", "url": "https://api.github.com/users/adamlerer", "html_url": "https://github.com/adamlerer", "followers_url": "https://api.github.com/users/adamlerer/followers", "following_url": "https://api.github.com/users/adamlerer/following{/other_user}", "gists_url": "https://api.github.com/users/adamlerer/gists{/gist_id}", "starred_url": "https://api.github.com/users/adamlerer/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/adamlerer/subscriptions", "organizations_url": "https://api.github.com/users/adamlerer/orgs", "repos_url": "https://api.github.com/users/adamlerer/repos", "events_url": "https://api.github.com/users/adamlerer/events{/privacy}", "received_events_url": "https://api.github.com/users/adamlerer/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 586699041, "node_id": "MDU6TGFiZWw1ODY2OTkwNDE=", "url": "https://api.github.com/repos/pytorch/pytorch/labels/15hr", "name": "15hr", "color": "d4c5d9", "default": false}, {"id": 424131849, "node_id": "MDU6TGFiZWw0MjQxMzE4NDk=", "url": "https://api.github.com/repos/pytorch/pytorch/labels/enhancement", "name": "enhancement", "color": "84b6eb", "default": true}, {"id": 443484050, "node_id": "MDU6TGFiZWw0NDM0ODQwNTA=", "url": "https://api.github.com/repos/pytorch/pytorch/labels/medium%20priority", "name": "medium priority", "color": "fbca04", "default": false}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2016-12-29T19:07:52Z", "updated_at": "2017-04-18T21:44:31Z", "closed_at": null, "author_association": "CONTRIBUTOR", "body_html": "<p>It would be nice to be able to write (like Numpy):</p>\n<pre><code>t = torch.Tensor(5,8)\nu = t[t[0].eq(3)]\n</code></pre>\n<p>whereas now you would have to write something like</p>\n<pre><code>u = t[t[0].eq(3).nonzero().squeeze(0)]\n</code></pre>\n<p>It would be nice if this worked on arbitrary dimension, e.g.</p>\n<pre><code>u = t[:,t[:,0].eq(3)]\n</code></pre>", "body_text": "It would be nice to be able to write (like Numpy):\nt = torch.Tensor(5,8)\nu = t[t[0].eq(3)]\n\nwhereas now you would have to write something like\nu = t[t[0].eq(3).nonzero().squeeze(0)]\n\nIt would be nice if this worked on arbitrary dimension, e.g.\nu = t[:,t[:,0].eq(3)]", "body": "It would be nice to be able to write (like Numpy):\r\n\r\n```\r\nt = torch.Tensor(5,8)\r\nu = t[t[0].eq(3)]\r\n```\r\n\r\nwhereas now you would have to write something like\r\n\r\n```\r\nu = t[t[0].eq(3).nonzero().squeeze(0)]\r\n```\r\n\r\nIt would be nice if this worked on arbitrary dimension, e.g.\r\n\r\n```\r\nu = t[:,t[:,0].eq(3)]\r\n```"}