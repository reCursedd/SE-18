{"url": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/182266010", "pull_request_review_id": 113029369, "id": 182266010, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MjI2NjAxMA==", "diff_hunk": "@@ -28,9 +29,12 @@ def __init__(self, batch_shape=torch.Size(), event_shape=torch.Size(), validate_\n             self._validate_args = validate_args\n         if self._validate_args:\n             for param, constraint in self.arg_constraints.items():\n-                if not constraints.is_dependent(constraint):\n-                    if not constraint.check(self.__getattribute__(param)).all():\n-                        raise ValueError(\"The parameter {} has invalid values\".format(param))\n+                if constraints.is_dependent(constraint):\n+                    continue  # skip constraints that cannot be checked\n+                if param not in self.__dict__ and isinstance(getattr(type(self), param, None), lazy_property):", "path": "torch/distributions/distribution.py", "position": null, "original_position": 17, "commit_id": "ef3958123bc267328cf352856bb3b1b3f569e372", "original_commit_id": "cea7449f2e7592156346569c758981f73b566832", "user": {"login": "fehiepsi", "id": 4736342, "node_id": "MDQ6VXNlcjQ3MzYzNDI=", "avatar_url": "https://avatars1.githubusercontent.com/u/4736342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fehiepsi", "html_url": "https://github.com/fehiepsi", "followers_url": "https://api.github.com/users/fehiepsi/followers", "following_url": "https://api.github.com/users/fehiepsi/following{/other_user}", "gists_url": "https://api.github.com/users/fehiepsi/gists{/gist_id}", "starred_url": "https://api.github.com/users/fehiepsi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fehiepsi/subscriptions", "organizations_url": "https://api.github.com/users/fehiepsi/orgs", "repos_url": "https://api.github.com/users/fehiepsi/repos", "events_url": "https://api.github.com/users/fehiepsi/events{/privacy}", "received_events_url": "https://api.github.com/users/fehiepsi/received_events", "type": "User", "site_admin": false}, "body": "+1! Thanks for checking this. I have thought that there is no way to check lazy_property without trigger it. Good to know about `getattr(type(obj),...)`.", "created_at": "2018-04-17T22:54:41Z", "updated_at": "2018-11-23T15:42:39Z", "html_url": "https://github.com/pytorch/pytorch/pull/6666#discussion_r182266010", "pull_request_url": "https://api.github.com/repos/pytorch/pytorch/pulls/6666", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/182266010"}, "html": {"href": "https://github.com/pytorch/pytorch/pull/6666#discussion_r182266010"}, "pull_request": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/6666"}}, "body_html": "<p>+1! Thanks for checking this. I have thought that there is no way to check lazy_property without trigger it. Good to know about <code>getattr(type(obj),...)</code>.</p>", "body_text": "+1! Thanks for checking this. I have thought that there is no way to check lazy_property without trigger it. Good to know about getattr(type(obj),...)."}