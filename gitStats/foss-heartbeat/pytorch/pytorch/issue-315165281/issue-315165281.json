{"url": "https://api.github.com/repos/pytorch/pytorch/issues/6666", "repository_url": "https://api.github.com/repos/pytorch/pytorch", "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/6666/labels{/name}", "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/6666/comments", "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/6666/events", "html_url": "https://github.com/pytorch/pytorch/pull/6666", "id": 315165281, "node_id": "MDExOlB1bGxSZXF1ZXN0MTgyMjQ1MDU0", "number": 6666, "title": "[distributions] Skip validation of lazy properties", "user": {"login": "fritzo", "id": 648532, "node_id": "MDQ6VXNlcjY0ODUzMg==", "avatar_url": "https://avatars0.githubusercontent.com/u/648532?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fritzo", "html_url": "https://github.com/fritzo", "followers_url": "https://api.github.com/users/fritzo/followers", "following_url": "https://api.github.com/users/fritzo/following{/other_user}", "gists_url": "https://api.github.com/users/fritzo/gists{/gist_id}", "starred_url": "https://api.github.com/users/fritzo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fritzo/subscriptions", "organizations_url": "https://api.github.com/users/fritzo/orgs", "repos_url": "https://api.github.com/users/fritzo/repos", "events_url": "https://api.github.com/users/fritzo/events{/privacy}", "received_events_url": "https://api.github.com/users/fritzo/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-04-17T17:49:01Z", "updated_at": "2018-11-23T15:42:39Z", "closed_at": "2018-04-18T08:12:09Z", "author_association": "CONTRIBUTOR", "pull_request": {"url": "https://api.github.com/repos/pytorch/pytorch/pulls/6666", "html_url": "https://github.com/pytorch/pytorch/pull/6666", "diff_url": "https://github.com/pytorch/pytorch/pull/6666.diff", "patch_url": "https://github.com/pytorch/pytorch/pull/6666.patch"}, "body_html": "<p><span class=\"issue-keyword tooltipped tooltipped-se\" aria-label=\"This pull request closes issue #146.\">Fixes</span> <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load issue title\" data-id=\"315000459\" data-permission-text=\"Issue title is private\" data-url=\"https://github.com/probtorch/pytorch/issues/146\" data-hovercard-type=\"issue\" data-hovercard-url=\"/probtorch/pytorch/issues/146/hovercard\" href=\"https://github.com/probtorch/pytorch/issues/146\">probtorch#146</a><br>\nPrevious review <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load issue title\" data-id=\"315143291\" data-permission-text=\"Issue title is private\" data-url=\"https://github.com/probtorch/pytorch/issues/147\" data-hovercard-type=\"pull_request\" data-hovercard-url=\"/probtorch/pytorch/pull/147/hovercard\" href=\"https://github.com/probtorch/pytorch/pull/147\">probtorch#147</a></p>\n<h2>The Problem</h2>\n<p>Currently distributions check each possible constraint in <code>.arg_constraints</code>. This is problematic for distributions with multiple alternative parameterizations (e.g. <code>MultivariateNormal</code> with <code>scale_tril</code>, <code>covariance_matrix</code>, and <code>precision_matrix</code>) because all possible parameterizations must be constructed and checked. For <code>MultivariateNormal</code> this can trigger an expensive matrix inverse.</p>\n<h2>Proposed Solution</h2>\n<p>This PR skips checking of args that are <code>lazy_property</code>s, so that only already-instantiated args are checked.</p>\n<h2>Tested</h2>\n<ul>\n<li>passes existing validation tests</li>\n</ul>", "body_text": "Fixes probtorch#146\nPrevious review probtorch#147\nThe Problem\nCurrently distributions check each possible constraint in .arg_constraints. This is problematic for distributions with multiple alternative parameterizations (e.g. MultivariateNormal with scale_tril, covariance_matrix, and precision_matrix) because all possible parameterizations must be constructed and checked. For MultivariateNormal this can trigger an expensive matrix inverse.\nProposed Solution\nThis PR skips checking of args that are lazy_propertys, so that only already-instantiated args are checked.\nTested\n\npasses existing validation tests", "body": "Fixes https://github.com/probtorch/pytorch/issues/146\r\nPrevious review https://github.com/probtorch/pytorch/pull/147\r\n\r\n## The Problem\r\n\r\nCurrently distributions check each possible constraint in `.arg_constraints`. This is problematic for distributions with multiple alternative parameterizations (e.g. `MultivariateNormal` with `scale_tril`, `covariance_matrix`, and `precision_matrix`) because all possible parameterizations must be constructed and checked. For `MultivariateNormal` this can trigger an expensive matrix inverse.\r\n\r\n## Proposed Solution\r\n\r\nThis PR skips checking of args that are `lazy_property`s, so that only already-instantiated args are checked.\r\n\r\n## Tested\r\n\r\n- passes existing validation tests"}