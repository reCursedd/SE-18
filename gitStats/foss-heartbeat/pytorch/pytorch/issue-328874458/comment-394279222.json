{"url": "https://api.github.com/repos/pytorch/pytorch/issues/comments/394279222", "html_url": "https://github.com/pytorch/pytorch/pull/8093#issuecomment-394279222", "issue_url": "https://api.github.com/repos/pytorch/pytorch/issues/8093", "id": 394279222, "node_id": "MDEyOklzc3VlQ29tbWVudDM5NDI3OTIyMg==", "user": {"login": "apaszke", "id": 4583066, "node_id": "MDQ6VXNlcjQ1ODMwNjY=", "avatar_url": "https://avatars3.githubusercontent.com/u/4583066?v=4", "gravatar_id": "", "url": "https://api.github.com/users/apaszke", "html_url": "https://github.com/apaszke", "followers_url": "https://api.github.com/users/apaszke/followers", "following_url": "https://api.github.com/users/apaszke/following{/other_user}", "gists_url": "https://api.github.com/users/apaszke/gists{/gist_id}", "starred_url": "https://api.github.com/users/apaszke/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/apaszke/subscriptions", "organizations_url": "https://api.github.com/users/apaszke/orgs", "repos_url": "https://api.github.com/users/apaszke/repos", "events_url": "https://api.github.com/users/apaszke/events{/privacy}", "received_events_url": "https://api.github.com/users/apaszke/received_events", "type": "User", "site_admin": false}, "created_at": "2018-06-04T08:43:34Z", "updated_at": "2018-06-04T08:43:43Z", "author_association": "MEMBER", "body_html": "<p>We can merge this if you really want to, but I don't see myself complaining on PRs just because someone used <code>std::size_t</code> and not <code>size_t</code>, and I won't commit to enforcing that it will stay uniform. Is there really any benefit from this? It's just another rule we have to remember while coding, while it doesn't increase readability nor changes the functionality in any way. Kind of like sometimes saying <code>Tensor</code> and sometimes <code>at::Tensor</code> (which we do regularly).</p>", "body_text": "We can merge this if you really want to, but I don't see myself complaining on PRs just because someone used std::size_t and not size_t, and I won't commit to enforcing that it will stay uniform. Is there really any benefit from this? It's just another rule we have to remember while coding, while it doesn't increase readability nor changes the functionality in any way. Kind of like sometimes saying Tensor and sometimes at::Tensor (which we do regularly).", "body": "We can merge this if you really want to, but I don't see myself complaining on PRs just because someone used `std::size_t` and not `size_t`, and I won't commit to enforcing that it will stay uniform. Is there really any benefit from this? It's just another rule we have to remember while coding, while it doesn't increase readability nor changes the functionality in any way. Kind of like sometimes saying `Tensor` and sometimes `at::Tensor` (which we do regularly)."}