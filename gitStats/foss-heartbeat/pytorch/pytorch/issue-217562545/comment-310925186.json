{"url": "https://api.github.com/repos/pytorch/pytorch/issues/comments/310925186", "html_url": "https://github.com/pytorch/pytorch/issues/1128#issuecomment-310925186", "issue_url": "https://api.github.com/repos/pytorch/pytorch/issues/1128", "id": 310925186, "node_id": "MDEyOklzc3VlQ29tbWVudDMxMDkyNTE4Ng==", "user": {"login": "neverfox", "id": 3344033, "node_id": "MDQ6VXNlcjMzNDQwMzM=", "avatar_url": "https://avatars1.githubusercontent.com/u/3344033?v=4", "gravatar_id": "", "url": "https://api.github.com/users/neverfox", "html_url": "https://github.com/neverfox", "followers_url": "https://api.github.com/users/neverfox/followers", "following_url": "https://api.github.com/users/neverfox/following{/other_user}", "gists_url": "https://api.github.com/users/neverfox/gists{/gist_id}", "starred_url": "https://api.github.com/users/neverfox/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/neverfox/subscriptions", "organizations_url": "https://api.github.com/users/neverfox/orgs", "repos_url": "https://api.github.com/users/neverfox/repos", "events_url": "https://api.github.com/users/neverfox/events{/privacy}", "received_events_url": "https://api.github.com/users/neverfox/received_events", "type": "User", "site_admin": false}, "created_at": "2017-06-25T20:10:31Z", "updated_at": "2017-06-25T20:11:34Z", "author_association": "NONE", "body_html": "<p><a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=4953728\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/szagoruyko\">@szagoruyko</a> For example:</p>\n<pre><code>import torch.nn.functional as F\n\ninput = Variable(torch.rand(1, 1, 10)) # 1D (N, C, L)\ninput_2d = input.unsqueeze(2) # add a fake height\nF.pad(input_2d, (2, 0, 0, 0)).view(1, 1, -1) # left padding (and remove height)\nF.pad(input_2d, (0, 2, 0, 0)).view(1, 1, -1) # right padding (and remove height)\n</code></pre>\n<p>But agreed, it would be nice if the <code>F.pad</code> function also supported 1D inputs and a <code>(left, right)</code> padding tuple.</p>", "body_text": "@szagoruyko For example:\nimport torch.nn.functional as F\n\ninput = Variable(torch.rand(1, 1, 10)) # 1D (N, C, L)\ninput_2d = input.unsqueeze(2) # add a fake height\nF.pad(input_2d, (2, 0, 0, 0)).view(1, 1, -1) # left padding (and remove height)\nF.pad(input_2d, (0, 2, 0, 0)).view(1, 1, -1) # right padding (and remove height)\n\nBut agreed, it would be nice if the F.pad function also supported 1D inputs and a (left, right) padding tuple.", "body": "@szagoruyko For example:\r\n\r\n```\r\nimport torch.nn.functional as F\r\n\r\ninput = Variable(torch.rand(1, 1, 10)) # 1D (N, C, L)\r\ninput_2d = input.unsqueeze(2) # add a fake height\r\nF.pad(input_2d, (2, 0, 0, 0)).view(1, 1, -1) # left padding (and remove height)\r\nF.pad(input_2d, (0, 2, 0, 0)).view(1, 1, -1) # right padding (and remove height)\r\n```\r\n\r\nBut agreed, it would be nice if the `F.pad` function also supported 1D inputs and a `(left, right)` padding tuple."}