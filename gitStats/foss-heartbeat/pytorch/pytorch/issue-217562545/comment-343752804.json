{"url": "https://api.github.com/repos/pytorch/pytorch/issues/comments/343752804", "html_url": "https://github.com/pytorch/pytorch/issues/1128#issuecomment-343752804", "issue_url": "https://api.github.com/repos/pytorch/pytorch/issues/1128", "id": 343752804, "node_id": "MDEyOklzc3VlQ29tbWVudDM0Mzc1MjgwNA==", "user": {"login": "hhsecond", "id": 13761737, "node_id": "MDQ6VXNlcjEzNzYxNzM3", "avatar_url": "https://avatars3.githubusercontent.com/u/13761737?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hhsecond", "html_url": "https://github.com/hhsecond", "followers_url": "https://api.github.com/users/hhsecond/followers", "following_url": "https://api.github.com/users/hhsecond/following{/other_user}", "gists_url": "https://api.github.com/users/hhsecond/gists{/gist_id}", "starred_url": "https://api.github.com/users/hhsecond/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hhsecond/subscriptions", "organizations_url": "https://api.github.com/users/hhsecond/orgs", "repos_url": "https://api.github.com/users/hhsecond/repos", "events_url": "https://api.github.com/users/hhsecond/events{/privacy}", "received_events_url": "https://api.github.com/users/hhsecond/received_events", "type": "User", "site_admin": false}, "created_at": "2017-11-12T17:25:59Z", "updated_at": "2017-11-13T03:32:01Z", "author_association": "CONTRIBUTOR", "body_html": "<p><a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=4583066\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/apaszke\">@apaszke</a> I'll try to make it into 0.3.<br>\nThe problem with dimensions is, in the case of 2 or more dimensional Variables, user could pass</p>\n<ul>\n<li>batch <code>x</code> seq_len <code>x</code> more_dim (batch dim would be 1 mostly and we'll <strong>concatenating</strong> on zeroth dim)</li>\n<li>seq_len <code>x</code> feature_len <code>x</code>  more_dim (where user ignored batch dim, we'll be <strong>stacking</strong> on zeroth or 1st dimension depends on batch_first)<br>\nBut how could we understand which dimension has variable length sequence. I can analyse the input and fetch this info or I can ask user to pass the dimension that needs padding?</li>\n</ul>", "body_text": "@apaszke I'll try to make it into 0.3.\nThe problem with dimensions is, in the case of 2 or more dimensional Variables, user could pass\n\nbatch x seq_len x more_dim (batch dim would be 1 mostly and we'll concatenating on zeroth dim)\nseq_len x feature_len x  more_dim (where user ignored batch dim, we'll be stacking on zeroth or 1st dimension depends on batch_first)\nBut how could we understand which dimension has variable length sequence. I can analyse the input and fetch this info or I can ask user to pass the dimension that needs padding?", "body": "@apaszke I'll try to make it into 0.3. \r\nThe problem with dimensions is, in the case of 2 or more dimensional Variables, user could pass\r\n- batch `x` seq_len `x` more_dim (batch dim would be 1 mostly and we'll **concatenating** on zeroth dim)\r\n- seq_len `x` feature_len `x`  more_dim (where user ignored batch dim, we'll be **stacking** on zeroth or 1st dimension depends on batch_first)\r\nBut how could we understand which dimension has variable length sequence. I can analyse the input and fetch this info or I can ask user to pass the dimension that needs padding?"}