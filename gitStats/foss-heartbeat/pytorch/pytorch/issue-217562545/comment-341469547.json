{"url": "https://api.github.com/repos/pytorch/pytorch/issues/comments/341469547", "html_url": "https://github.com/pytorch/pytorch/issues/1128#issuecomment-341469547", "issue_url": "https://api.github.com/repos/pytorch/pytorch/issues/1128", "id": 341469547, "node_id": "MDEyOklzc3VlQ29tbWVudDM0MTQ2OTU0Nw==", "user": {"login": "hhsecond", "id": 13761737, "node_id": "MDQ6VXNlcjEzNzYxNzM3", "avatar_url": "https://avatars3.githubusercontent.com/u/13761737?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hhsecond", "html_url": "https://github.com/hhsecond", "followers_url": "https://api.github.com/users/hhsecond/followers", "following_url": "https://api.github.com/users/hhsecond/following{/other_user}", "gists_url": "https://api.github.com/users/hhsecond/gists{/gist_id}", "starred_url": "https://api.github.com/users/hhsecond/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hhsecond/subscriptions", "organizations_url": "https://api.github.com/users/hhsecond/orgs", "repos_url": "https://api.github.com/users/hhsecond/repos", "events_url": "https://api.github.com/users/hhsecond/events{/privacy}", "received_events_url": "https://api.github.com/users/hhsecond/received_events", "type": "User", "site_admin": false}, "created_at": "2017-11-02T16:00:02Z", "updated_at": "2017-11-02T16:00:47Z", "author_association": "CONTRIBUTOR", "body_html": "<p><a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=4583066\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/apaszke\">@apaszke</a> Sounds perfect, one quick question though. Wouldn't it be good if the function accepts a list of python lists (and desired sequence length as argument) where each list can be of varying length where if it only accepts tensors, the user has to convert each sentence to a tensor (assuming each sentence is of different length) separately before passing that to the <code>pad_sequence</code>. something like<br>\n<code>pad_sequence(inputs, sequence_length, lengths)</code></p>\n<p>The <code>pack_sequence</code> sounds helpful, will do that as well.</p>", "body_text": "@apaszke Sounds perfect, one quick question though. Wouldn't it be good if the function accepts a list of python lists (and desired sequence length as argument) where each list can be of varying length where if it only accepts tensors, the user has to convert each sentence to a tensor (assuming each sentence is of different length) separately before passing that to the pad_sequence. something like\npad_sequence(inputs, sequence_length, lengths)\nThe pack_sequence sounds helpful, will do that as well.", "body": "@apaszke Sounds perfect, one quick question though. Wouldn't it be good if the function accepts a list of python lists (and desired sequence length as argument) where each list can be of varying length where if it only accepts tensors, the user has to convert each sentence to a tensor (assuming each sentence is of different length) separately before passing that to the `pad_sequence`. something like\r\n`pad_sequence(inputs, sequence_length, lengths)`\r\n\r\nThe `pack_sequence` sounds helpful, will do that as well."}