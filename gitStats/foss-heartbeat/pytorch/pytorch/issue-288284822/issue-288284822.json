{"url": "https://api.github.com/repos/pytorch/pytorch/issues/4647", "repository_url": "https://api.github.com/repos/pytorch/pytorch", "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/4647/labels{/name}", "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/4647/comments", "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/4647/events", "html_url": "https://github.com/pytorch/pytorch/pull/4647", "id": 288284822, "node_id": "MDExOlB1bGxSZXF1ZXN0MTYyNzU0MDAw", "number": 4647, "title": "Test_autograd support for 0-dim input/outputs.", "user": {"login": "gchanan", "id": 3768583, "node_id": "MDQ6VXNlcjM3Njg1ODM=", "avatar_url": "https://avatars2.githubusercontent.com/u/3768583?v=4", "gravatar_id": "", "url": "https://api.github.com/users/gchanan", "html_url": "https://github.com/gchanan", "followers_url": "https://api.github.com/users/gchanan/followers", "following_url": "https://api.github.com/users/gchanan/following{/other_user}", "gists_url": "https://api.github.com/users/gchanan/gists{/gist_id}", "starred_url": "https://api.github.com/users/gchanan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/gchanan/subscriptions", "organizations_url": "https://api.github.com/users/gchanan/orgs", "repos_url": "https://api.github.com/users/gchanan/repos", "events_url": "https://api.github.com/users/gchanan/events{/privacy}", "received_events_url": "https://api.github.com/users/gchanan/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2018-01-13T00:32:08Z", "updated_at": "2018-11-23T15:38:13Z", "closed_at": "2018-01-17T18:55:11Z", "author_association": "CONTRIBUTOR", "pull_request": {"url": "https://api.github.com/repos/pytorch/pytorch/pulls/4647", "html_url": "https://github.com/pytorch/pytorch/pull/4647", "diff_url": "https://github.com/pytorch/pytorch/pull/4647.diff", "patch_url": "https://github.com/pytorch/pytorch/pull/4647.patch"}, "body_html": "<p>This uses the 'fake' _scalar_sum function to test scalar (0-dimensional) inputs and output in test_autograd.</p>\n<p>Main changes:</p>\n<ol>\n<li>Introduces a randn_like function (this is really just for convience but it comes up often in testing.</li>\n<li>Because the Tensor and Variable API are different wrt sizes, we take care to not exit the Variable API when constructing Variables based on other Variables.  This is pretty straightforward, but there is sometimes an extra line of code for setting requires_grad.  Should we have the 'like' functions maintain requires_grad?  Or bind all factory functions with an additional 'requires_grad' parameter?</li>\n</ol>", "body_text": "This uses the 'fake' _scalar_sum function to test scalar (0-dimensional) inputs and output in test_autograd.\nMain changes:\n\nIntroduces a randn_like function (this is really just for convience but it comes up often in testing.\nBecause the Tensor and Variable API are different wrt sizes, we take care to not exit the Variable API when constructing Variables based on other Variables.  This is pretty straightforward, but there is sometimes an extra line of code for setting requires_grad.  Should we have the 'like' functions maintain requires_grad?  Or bind all factory functions with an additional 'requires_grad' parameter?", "body": "This uses the 'fake' _scalar_sum function to test scalar (0-dimensional) inputs and output in test_autograd.\r\n\r\nMain changes:\r\n1) Introduces a randn_like function (this is really just for convience but it comes up often in testing.\r\n2) Because the Tensor and Variable API are different wrt sizes, we take care to not exit the Variable API when constructing Variables based on other Variables.  This is pretty straightforward, but there is sometimes an extra line of code for setting requires_grad.  Should we have the 'like' functions maintain requires_grad?  Or bind all factory functions with an additional 'requires_grad' parameter?"}