{"url": "https://api.github.com/repos/pytorch/pytorch/issues/comments/428647210", "html_url": "https://github.com/pytorch/pytorch/pull/11654#issuecomment-428647210", "issue_url": "https://api.github.com/repos/pytorch/pytorch/issues/11654", "id": 428647210, "node_id": "MDEyOklzc3VlQ29tbWVudDQyODY0NzIxMA==", "user": {"login": "jamesr66a", "id": 4685384, "node_id": "MDQ6VXNlcjQ2ODUzODQ=", "avatar_url": "https://avatars2.githubusercontent.com/u/4685384?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jamesr66a", "html_url": "https://github.com/jamesr66a", "followers_url": "https://api.github.com/users/jamesr66a/followers", "following_url": "https://api.github.com/users/jamesr66a/following{/other_user}", "gists_url": "https://api.github.com/users/jamesr66a/gists{/gist_id}", "starred_url": "https://api.github.com/users/jamesr66a/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jamesr66a/subscriptions", "organizations_url": "https://api.github.com/users/jamesr66a/orgs", "repos_url": "https://api.github.com/users/jamesr66a/repos", "events_url": "https://api.github.com/users/jamesr66a/events{/privacy}", "received_events_url": "https://api.github.com/users/jamesr66a/received_events", "type": "User", "site_admin": false}, "created_at": "2018-10-10T16:50:18Z", "updated_at": "2018-10-10T16:50:18Z", "author_association": "CONTRIBUTOR", "body_html": "<p><a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=4583066\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/apaszke\">@apaszke</a> I think what's going on here is that we are not hitting the special quantized implementation of FC in the caffe2 backend due to the ONNX-caffe2 backend emitting \"MatMul\" + \"Add\" instead of \"FC\". This can be seen from <code>loop_inner866</code> being present before but not after this patch. (That label is from an autogenerated GEMM kernel). I'm going to send in a patch that adds addmm fusion on the ONNX export path, but not the regular path</p>", "body_text": "@apaszke I think what's going on here is that we are not hitting the special quantized implementation of FC in the caffe2 backend due to the ONNX-caffe2 backend emitting \"MatMul\" + \"Add\" instead of \"FC\". This can be seen from loop_inner866 being present before but not after this patch. (That label is from an autogenerated GEMM kernel). I'm going to send in a patch that adds addmm fusion on the ONNX export path, but not the regular path", "body": "@apaszke I think what's going on here is that we are not hitting the special quantized implementation of FC in the caffe2 backend due to the ONNX-caffe2 backend emitting \"MatMul\" + \"Add\" instead of \"FC\". This can be seen from `loop_inner866` being present before but not after this patch. (That label is from an autogenerated GEMM kernel). I'm going to send in a patch that adds addmm fusion on the ONNX export path, but not the regular path"}