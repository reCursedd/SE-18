{"url": "https://api.github.com/repos/pytorch/pytorch/issues/comments/428443213", "html_url": "https://github.com/pytorch/pytorch/pull/11654#issuecomment-428443213", "issue_url": "https://api.github.com/repos/pytorch/pytorch/issues/11654", "id": 428443213, "node_id": "MDEyOklzc3VlQ29tbWVudDQyODQ0MzIxMw==", "user": {"login": "jmp84", "id": 1144053, "node_id": "MDQ6VXNlcjExNDQwNTM=", "avatar_url": "https://avatars0.githubusercontent.com/u/1144053?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jmp84", "html_url": "https://github.com/jmp84", "followers_url": "https://api.github.com/users/jmp84/followers", "following_url": "https://api.github.com/users/jmp84/following{/other_user}", "gists_url": "https://api.github.com/users/jmp84/gists{/gist_id}", "starred_url": "https://api.github.com/users/jmp84/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jmp84/subscriptions", "organizations_url": "https://api.github.com/users/jmp84/orgs", "repos_url": "https://api.github.com/users/jmp84/repos", "events_url": "https://api.github.com/users/jmp84/events{/privacy}", "received_events_url": "https://api.github.com/users/jmp84/received_events", "type": "User", "site_admin": false}, "created_at": "2018-10-10T05:32:14Z", "updated_at": "2018-10-10T05:32:14Z", "author_association": "CONTRIBUTOR", "body_html": "<p><a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=4583066\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/apaszke\">@apaszke</a>, this is causing a ~200ms latency regression for NMT models. Here are the top lines from perf before/after this change:</p>\n<p>Before:</p>\n<ul>\n<li>43.31%  NmtBenchmark     NmtBenchmark         [.] mkl_blas_avx2_sgemm_kernel_nocopy_NN_b0</li>\n<li>8.67%  NmtBenchmark     NmtBenchmark         [.] loop_inner866</li>\n<li>4.42%  NmtBenchmark     libc-2.23.so         [.] __memcpy_avx_unaligned</li>\n<li>3.20%  NmtBenchmark     NmtBenchmark         [.] caffe2::math::(anonymous namespace)::ReduceTensor&lt;float, std::plus &gt;</li>\n<li>3.04%  NmtBenchmark     NmtBenchmark         [.] caffe2::math::utils::GetIndexFromDims</li>\n<li>2.84%  NmtBenchmark     NmtBenchmark         [.] mkl_blas_avx2_xsgemv_t</li>\n<li>2.84%  NmtBenchmark     NmtBenchmark         [.] fbgemm::PackedGemmMatrix&lt;signed char, int, true&gt;::addr_</li>\n<li>2.76%  CaffeTaskThread  NmtBenchmark         [.] mkl_blas_avx2_xsgemv_t</li>\n</ul>\n<p>After:</p>\n<ul>\n<li>29.04%  NmtBenchmark     NmtBenchmark         [.] mkl_blas_avx2_sgemm_kernel_nocopy_NN_b0</li>\n<li>17.97%  NmtBenchmark     NmtBenchmark         [.] mkl_blas_avx2_sgemm_kernel_nocopy_TN_b1</li>\n<li>8.02%  NmtBenchmark     NmtBenchmark         [.] mkl_blas_avx2_sgemm_kernel_nocopy_TN_b0</li>\n<li>5.95%  CaffeTaskThread  NmtBenchmark         [.] mkl_blas_avx2_xsgemv_t</li>\n<li>4.28%  NmtBenchmark     libc-2.23.so         [.] __memcpy_avx_unaligned</li>\n</ul>\n<p>Is there more info I can provide to help debug this? Also cc <a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=4685384\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/jamesr66a\">@jamesr66a</a> who is familiar with these models and how to optimize them.</p>", "body_text": "@apaszke, this is causing a ~200ms latency regression for NMT models. Here are the top lines from perf before/after this change:\nBefore:\n\n43.31%  NmtBenchmark     NmtBenchmark         [.] mkl_blas_avx2_sgemm_kernel_nocopy_NN_b0\n8.67%  NmtBenchmark     NmtBenchmark         [.] loop_inner866\n4.42%  NmtBenchmark     libc-2.23.so         [.] __memcpy_avx_unaligned\n3.20%  NmtBenchmark     NmtBenchmark         [.] caffe2::math::(anonymous namespace)::ReduceTensor<float, std::plus >\n3.04%  NmtBenchmark     NmtBenchmark         [.] caffe2::math::utils::GetIndexFromDims\n2.84%  NmtBenchmark     NmtBenchmark         [.] mkl_blas_avx2_xsgemv_t\n2.84%  NmtBenchmark     NmtBenchmark         [.] fbgemm::PackedGemmMatrix<signed char, int, true>::addr_\n2.76%  CaffeTaskThread  NmtBenchmark         [.] mkl_blas_avx2_xsgemv_t\n\nAfter:\n\n29.04%  NmtBenchmark     NmtBenchmark         [.] mkl_blas_avx2_sgemm_kernel_nocopy_NN_b0\n17.97%  NmtBenchmark     NmtBenchmark         [.] mkl_blas_avx2_sgemm_kernel_nocopy_TN_b1\n8.02%  NmtBenchmark     NmtBenchmark         [.] mkl_blas_avx2_sgemm_kernel_nocopy_TN_b0\n5.95%  CaffeTaskThread  NmtBenchmark         [.] mkl_blas_avx2_xsgemv_t\n4.28%  NmtBenchmark     libc-2.23.so         [.] __memcpy_avx_unaligned\n\nIs there more info I can provide to help debug this? Also cc @jamesr66a who is familiar with these models and how to optimize them.", "body": "@apaszke, this is causing a ~200ms latency regression for NMT models. Here are the top lines from perf before/after this change:\r\n\r\nBefore:\r\n\r\n+   43.31%  NmtBenchmark     NmtBenchmark         [.] mkl_blas_avx2_sgemm_kernel_nocopy_NN_b0\r\n+    8.67%  NmtBenchmark     NmtBenchmark         [.] loop_inner866\r\n+    4.42%  NmtBenchmark     libc-2.23.so         [.] __memcpy_avx_unaligned\r\n+    3.20%  NmtBenchmark     NmtBenchmark         [.] caffe2::math::(anonymous namespace)::ReduceTensor<float, std::plus<float> >\r\n+    3.04%  NmtBenchmark     NmtBenchmark         [.] caffe2::math::utils::GetIndexFromDims\r\n+    2.84%  NmtBenchmark     NmtBenchmark         [.] mkl_blas_avx2_xsgemv_t\r\n+    2.84%  NmtBenchmark     NmtBenchmark         [.] fbgemm::PackedGemmMatrix<signed char, int, true>::addr_\r\n+    2.76%  CaffeTaskThread  NmtBenchmark         [.] mkl_blas_avx2_xsgemv_t\r\n\r\nAfter:\r\n\r\n+   29.04%  NmtBenchmark     NmtBenchmark         [.] mkl_blas_avx2_sgemm_kernel_nocopy_NN_b0\r\n+   17.97%  NmtBenchmark     NmtBenchmark         [.] mkl_blas_avx2_sgemm_kernel_nocopy_TN_b1\r\n+    8.02%  NmtBenchmark     NmtBenchmark         [.] mkl_blas_avx2_sgemm_kernel_nocopy_TN_b0\r\n+    5.95%  CaffeTaskThread  NmtBenchmark         [.] mkl_blas_avx2_xsgemv_t\r\n+    4.28%  NmtBenchmark     libc-2.23.so         [.] __memcpy_avx_unaligned\r\n\r\nIs there more info I can provide to help debug this? Also cc @jamesr66a who is familiar with these models and how to optimize them."}