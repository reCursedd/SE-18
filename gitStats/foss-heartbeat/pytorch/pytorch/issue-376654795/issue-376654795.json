{"url": "https://api.github.com/repos/pytorch/pytorch/issues/13496", "repository_url": "https://api.github.com/repos/pytorch/pytorch", "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/13496/labels{/name}", "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/13496/comments", "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/13496/events", "html_url": "https://github.com/pytorch/pytorch/pull/13496", "id": 376654795, "node_id": "MDExOlB1bGxSZXF1ZXN0MjI3ODIwMzk5", "number": 13496, "title": "[c10d] Mixed precision DDP hang fix and fine-grained option for DDP perf", "user": {"login": "teng-li", "id": 8120856, "node_id": "MDQ6VXNlcjgxMjA4NTY=", "avatar_url": "https://avatars2.githubusercontent.com/u/8120856?v=4", "gravatar_id": "", "url": "https://api.github.com/users/teng-li", "html_url": "https://github.com/teng-li", "followers_url": "https://api.github.com/users/teng-li/followers", "following_url": "https://api.github.com/users/teng-li/following{/other_user}", "gists_url": "https://api.github.com/users/teng-li/gists{/gist_id}", "starred_url": "https://api.github.com/users/teng-li/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/teng-li/subscriptions", "organizations_url": "https://api.github.com/users/teng-li/orgs", "repos_url": "https://api.github.com/users/teng-li/repos", "events_url": "https://api.github.com/users/teng-li/events{/privacy}", "received_events_url": "https://api.github.com/users/teng-li/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2018-11-02T03:19:56Z", "updated_at": "2018-11-23T15:54:11Z", "closed_at": "2018-11-06T00:23:49Z", "author_association": "CONTRIBUTOR", "pull_request": {"url": "https://api.github.com/repos/pytorch/pytorch/pulls/13496", "html_url": "https://github.com/pytorch/pytorch/pull/13496", "diff_url": "https://github.com/pytorch/pytorch/pull/13496.diff", "patch_url": "https://github.com/pytorch/pytorch/pull/13496.patch"}, "body_html": "<p>When go to mixed precision fp16 training, DDP randomly hangs.  Initially, I thought this smells like a similar NCCL bug I filed a while ago. It turns out it's not. Again, I am seeing different rank process has different size.  How could this even happen?</p>\n<p>It turns out that take_tensors will generate a list of bucketed tensors in an un deterministic order, because, the key to the map is a pointer.  An interesting bug digging and fix.</p>\n<p>Now fp16 DDP training should be fully working now.</p>\n<p>Also, added another take_tensor fine grained helper that aims to improve the performance of DDP, making it a TODO to replace the DDP take_tensors with that.</p>\n<p><span class=\"issue-keyword tooltipped tooltipped-se\" aria-label=\"This pull request closes issue #12150.\">Fixed</span>: <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load issue title\" data-id=\"364700550\" data-permission-text=\"Issue title is private\" data-url=\"https://github.com/pytorch/pytorch/issues/12150\" data-hovercard-type=\"issue\" data-hovercard-url=\"/pytorch/pytorch/issues/12150/hovercard\" href=\"https://github.com/pytorch/pytorch/issues/12150\">#12150</a></p>", "body_text": "When go to mixed precision fp16 training, DDP randomly hangs.  Initially, I thought this smells like a similar NCCL bug I filed a while ago. It turns out it's not. Again, I am seeing different rank process has different size.  How could this even happen?\nIt turns out that take_tensors will generate a list of bucketed tensors in an un deterministic order, because, the key to the map is a pointer.  An interesting bug digging and fix.\nNow fp16 DDP training should be fully working now.\nAlso, added another take_tensor fine grained helper that aims to improve the performance of DDP, making it a TODO to replace the DDP take_tensors with that.\nFixed: #12150", "body": "When go to mixed precision fp16 training, DDP randomly hangs.  Initially, I thought this smells like a similar NCCL bug I filed a while ago. It turns out it's not. Again, I am seeing different rank process has different size.  How could this even happen?\r\n\r\nIt turns out that take_tensors will generate a list of bucketed tensors in an un deterministic order, because, the key to the map is a pointer.  An interesting bug digging and fix.\r\n\r\nNow fp16 DDP training should be fully working now.\r\n\r\nAlso, added another take_tensor fine grained helper that aims to improve the performance of DDP, making it a TODO to replace the DDP take_tensors with that.\r\n\r\nFixed: https://github.com/pytorch/pytorch/issues/12150"}