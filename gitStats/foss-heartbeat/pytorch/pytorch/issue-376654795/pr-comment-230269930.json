{"url": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/230269930", "pull_request_review_id": 170970128, "id": 230269930, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIzMDI2OTkzMA==", "diff_hunk": "@@ -39,6 +42,52 @@ std::vector<TensorGroup> take_tensors(TensorList tensors, size_t size_limit) {\n   return results;\n }\n \n+std::vector<TensorGroup> take_tensors_finegrained(\n+    TensorList tensors, size_t sizeLimit) {\n+  std::vector<TensorGroup> results;\n+  // an overapproximation, but at least we won't have to copy stuff around\n+  results.reserve(tensors.size());\n+\n+  size_t currentGroupSize = 0;\n+  std::map<TypeID, TensorGroup> currentGroup;\n+\n+  for (const auto & tensor : tensors) {\n+    auto& type = tensor.type();\n+    // Get the tensor size\n+    size_t tensorSize;\n+    if (type.is_sparse()) {\n+      const auto& indices = tensor._indices();\n+      const auto& values = tensor._values();\n+      tensorSize = indices.numel() * indices.type().elementSizeInBytes() +\n+        values.numel() * indices.type().elementSizeInBytes();\n+    } else {\n+      tensorSize = tensor.numel() * type.elementSizeInBytes();\n+    }\n+\n+    // Accumulate the size for all types\n+    auto& typeGroup = currentGroup[type.ID()];\n+    typeGroup.tensors.push_back(tensor);\n+    currentGroupSize += tensorSize;\n+\n+    if (currentGroupSize >= sizeLimit) {\n+      for (auto& entry : currentGroup){\n+        std::cout << \"yes\" << std::endl;", "path": "torch/csrc/utils/tensor_flatten.cpp", "position": null, "original_position": 67, "commit_id": "9f1e4eeab105cd57c121631d00a050d80afc0709", "original_commit_id": "a6e17d4671a74431b7a48f25a59f8c3654513178", "user": {"login": "teng-li", "id": 8120856, "node_id": "MDQ6VXNlcjgxMjA4NTY=", "avatar_url": "https://avatars2.githubusercontent.com/u/8120856?v=4", "gravatar_id": "", "url": "https://api.github.com/users/teng-li", "html_url": "https://github.com/teng-li", "followers_url": "https://api.github.com/users/teng-li/followers", "following_url": "https://api.github.com/users/teng-li/following{/other_user}", "gists_url": "https://api.github.com/users/teng-li/gists{/gist_id}", "starred_url": "https://api.github.com/users/teng-li/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/teng-li/subscriptions", "organizations_url": "https://api.github.com/users/teng-li/orgs", "repos_url": "https://api.github.com/users/teng-li/repos", "events_url": "https://api.github.com/users/teng-li/events{/privacy}", "received_events_url": "https://api.github.com/users/teng-li/received_events", "type": "User", "site_admin": false}, "body": "Done in the second commit", "created_at": "2018-11-02T04:54:33Z", "updated_at": "2018-11-23T15:54:08Z", "html_url": "https://github.com/pytorch/pytorch/pull/13496#discussion_r230269930", "pull_request_url": "https://api.github.com/repos/pytorch/pytorch/pulls/13496", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/230269930"}, "html": {"href": "https://github.com/pytorch/pytorch/pull/13496#discussion_r230269930"}, "pull_request": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/13496"}}, "body_html": "<p>Done in the second commit</p>", "body_text": "Done in the second commit", "in_reply_to_id": 230262482}