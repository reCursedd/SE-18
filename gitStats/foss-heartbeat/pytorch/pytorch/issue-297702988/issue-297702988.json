{"url": "https://api.github.com/repos/pytorch/pytorch/issues/5272", "repository_url": "https://api.github.com/repos/pytorch/pytorch", "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/5272/labels{/name}", "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/5272/comments", "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/5272/events", "html_url": "https://github.com/pytorch/pytorch/issues/5272", "id": 297702988, "node_id": "MDU6SXNzdWUyOTc3MDI5ODg=", "number": 5272, "title": "Unsafe out= keyword argument with tensors sharing storage", "user": {"login": "SsnL", "id": 5674597, "node_id": "MDQ6VXNlcjU2NzQ1OTc=", "avatar_url": "https://avatars2.githubusercontent.com/u/5674597?v=4", "gravatar_id": "", "url": "https://api.github.com/users/SsnL", "html_url": "https://github.com/SsnL", "followers_url": "https://api.github.com/users/SsnL/followers", "following_url": "https://api.github.com/users/SsnL/following{/other_user}", "gists_url": "https://api.github.com/users/SsnL/gists{/gist_id}", "starred_url": "https://api.github.com/users/SsnL/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/SsnL/subscriptions", "organizations_url": "https://api.github.com/users/SsnL/orgs", "repos_url": "https://api.github.com/users/SsnL/repos", "events_url": "https://api.github.com/users/SsnL/events{/privacy}", "received_events_url": "https://api.github.com/users/SsnL/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 443483881, "node_id": "MDU6TGFiZWw0NDM0ODM4ODE=", "url": "https://api.github.com/repos/pytorch/pytorch/labels/todo", "name": "todo", "color": "c2e0c6", "default": false}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2018-02-16T07:41:38Z", "updated_at": "2018-05-14T19:21:46Z", "closed_at": null, "author_association": "CONTRIBUTOR", "body_html": "<p>The current <code>out=</code> behavior is unsafe. For example, if you do <code>a_3x3_tensor.sum(dim=1, out=y[1, 1:10])</code> it will try to <code>THTensor_(resize)</code> the view and in turn write to incorrect locations of <code>y</code>.</p>\n<p>Instead, if <code>out</code> is sharing storage, we should accept if only it 1) has correct size and 2) the range is not overlapping with the source tensors.</p>\n<p>cc <a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=5652049\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/zou3519\">@zou3519</a> <a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=1310570\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/soumith\">@soumith</a></p>", "body_text": "The current out= behavior is unsafe. For example, if you do a_3x3_tensor.sum(dim=1, out=y[1, 1:10]) it will try to THTensor_(resize) the view and in turn write to incorrect locations of y.\nInstead, if out is sharing storage, we should accept if only it 1) has correct size and 2) the range is not overlapping with the source tensors.\ncc @zou3519 @soumith", "body": "The current `out=` behavior is unsafe. For example, if you do `a_3x3_tensor.sum(dim=1, out=y[1, 1:10])` it will try to `THTensor_(resize)` the view and in turn write to incorrect locations of `y`. \r\n\r\nInstead, if `out` is sharing storage, we should accept if only it 1) has correct size and 2) the range is not overlapping with the source tensors.\r\n\r\ncc @zou3519 @soumith "}