{"url": "https://api.github.com/repos/pytorch/pytorch/issues/comments/374292819", "html_url": "https://github.com/pytorch/pytorch/pull/5864#issuecomment-374292819", "issue_url": "https://api.github.com/repos/pytorch/pytorch/issues/5864", "id": 374292819, "node_id": "MDEyOklzc3VlQ29tbWVudDM3NDI5MjgxOQ==", "user": {"login": "gchanan", "id": 3768583, "node_id": "MDQ6VXNlcjM3Njg1ODM=", "avatar_url": "https://avatars2.githubusercontent.com/u/3768583?v=4", "gravatar_id": "", "url": "https://api.github.com/users/gchanan", "html_url": "https://github.com/gchanan", "followers_url": "https://api.github.com/users/gchanan/followers", "following_url": "https://api.github.com/users/gchanan/following{/other_user}", "gists_url": "https://api.github.com/users/gchanan/gists{/gist_id}", "starred_url": "https://api.github.com/users/gchanan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/gchanan/subscriptions", "organizations_url": "https://api.github.com/users/gchanan/orgs", "repos_url": "https://api.github.com/users/gchanan/repos", "events_url": "https://api.github.com/users/gchanan/events{/privacy}", "received_events_url": "https://api.github.com/users/gchanan/received_events", "type": "User", "site_admin": false}, "created_at": "2018-03-19T17:15:12Z", "updated_at": "2018-03-19T17:15:12Z", "author_association": "CONTRIBUTOR", "body_html": "<p>can we just have a function that unifies the tensor types like we do with broadcasting?  IMO we should keep the generated code as simple as possible and push the complexity to the library, even if we lose a little bit of efficiency.</p>", "body_text": "can we just have a function that unifies the tensor types like we do with broadcasting?  IMO we should keep the generated code as simple as possible and push the complexity to the library, even if we lose a little bit of efficiency.", "body": "can we just have a function that unifies the tensor types like we do with broadcasting?  IMO we should keep the generated code as simple as possible and push the complexity to the library, even if we lose a little bit of efficiency."}