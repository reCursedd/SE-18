{"url": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/176384760", "pull_request_review_id": 106075145, "id": 176384760, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE3NjM4NDc2MA==", "diff_hunk": "@@ -148,6 +149,15 @@ def TypedDict(name, attrs, total=True):  # type: ignore\n     ${initializer}\n }\"\"\")\n \n+UNIFY_ACTUAL = CodeTemplate(\"\"\"\\\n+${actual}.type() != (**new_type) ? (**new_type).copy(${actual}) : ${actual}\\\n+\"\"\")\n+UNIFY_TYPES = CodeTemplate(\"\"\"\\\n+    if (auto new_type = unifyTypes(${to_unify_actuals})) {\n+        return (*new_type)->${api_name}(${unified_actuals});", "path": "aten/src/ATen/function_wrapper.py", "position": 17, "original_position": 17, "commit_id": "5163c7781bcf0893776eb97f7c851040228c101c", "original_commit_id": "24b7c7dfbedfeb2d8cf3e57fc6945c15c9479a55", "user": {"login": "apaszke", "id": 4583066, "node_id": "MDQ6VXNlcjQ1ODMwNjY=", "avatar_url": "https://avatars3.githubusercontent.com/u/4583066?v=4", "gravatar_id": "", "url": "https://api.github.com/users/apaszke", "html_url": "https://github.com/apaszke", "followers_url": "https://api.github.com/users/apaszke/followers", "following_url": "https://api.github.com/users/apaszke/following{/other_user}", "gists_url": "https://api.github.com/users/apaszke/gists{/gist_id}", "starred_url": "https://api.github.com/users/apaszke/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/apaszke/subscriptions", "organizations_url": "https://api.github.com/users/apaszke/orgs", "repos_url": "https://api.github.com/users/apaszke/repos", "events_url": "https://api.github.com/users/apaszke/events{/privacy}", "received_events_url": "https://api.github.com/users/apaszke/received_events", "type": "User", "site_admin": false}, "body": "Why would it be an issue with tracing? We usually want to see all the broadcasts in the IR, and the same applies to type cases. Moving the casts above in the call chain would only increase the chance that they won't be overridden, right? On the other hand, IIRC at the moment we only override at the method/function level so both will be captured and it doesn't matter.\r\n\r\nI don't have a strong opinion about where this should live, but since it is very similar to broadcasting I think it makes sense to keep them close. Let me know what are your thoughts, because I'd like to fix and get this in.", "created_at": "2018-03-22T11:21:55Z", "updated_at": "2018-11-23T15:41:01Z", "html_url": "https://github.com/pytorch/pytorch/pull/5864#discussion_r176384760", "pull_request_url": "https://api.github.com/repos/pytorch/pytorch/pulls/5864", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/176384760"}, "html": {"href": "https://github.com/pytorch/pytorch/pull/5864#discussion_r176384760"}, "pull_request": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/5864"}}, "body_html": "<p>Why would it be an issue with tracing? We usually want to see all the broadcasts in the IR, and the same applies to type cases. Moving the casts above in the call chain would only increase the chance that they won't be overridden, right? On the other hand, IIRC at the moment we only override at the method/function level so both will be captured and it doesn't matter.</p>\n<p>I don't have a strong opinion about where this should live, but since it is very similar to broadcasting I think it makes sense to keep them close. Let me know what are your thoughts, because I'd like to fix and get this in.</p>", "body_text": "Why would it be an issue with tracing? We usually want to see all the broadcasts in the IR, and the same applies to type cases. Moving the casts above in the call chain would only increase the chance that they won't be overridden, right? On the other hand, IIRC at the moment we only override at the method/function level so both will be captured and it doesn't matter.\nI don't have a strong opinion about where this should live, but since it is very similar to broadcasting I think it makes sense to keep them close. Let me know what are your thoughts, because I'd like to fix and get this in.", "in_reply_to_id": 175515586}