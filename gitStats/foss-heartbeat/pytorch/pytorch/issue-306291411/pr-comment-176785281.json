{"url": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/176785281", "pull_request_review_id": 106552108, "id": 176785281, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE3Njc4NTI4MQ==", "diff_hunk": "@@ -732,6 +742,23 @@ def process_option(option, output_options):\n             top_env['type_method_definitions'].append(\n                 TYPE_METHOD_DEFINITION_ABSTRACT.substitute(env))\n \n+            # Set up type promotion, if used\n+            unify_types = ''\n+            has_side_effects = any('Tensor' in f and 'const' not in f\n+                                   for f in option['formals'])\n+            if option.get('zero_dim_dispatch_when_scalar') and not has_side_effects:", "path": "aten/src/ATen/function_wrapper.py", "position": 32, "original_position": 32, "commit_id": "5163c7781bcf0893776eb97f7c851040228c101c", "original_commit_id": "5163c7781bcf0893776eb97f7c851040228c101c", "user": {"login": "gchanan", "id": 3768583, "node_id": "MDQ6VXNlcjM3Njg1ODM=", "avatar_url": "https://avatars2.githubusercontent.com/u/3768583?v=4", "gravatar_id": "", "url": "https://api.github.com/users/gchanan", "html_url": "https://github.com/gchanan", "followers_url": "https://api.github.com/users/gchanan/followers", "following_url": "https://api.github.com/users/gchanan/following{/other_user}", "gists_url": "https://api.github.com/users/gchanan/gists{/gist_id}", "starred_url": "https://api.github.com/users/gchanan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/gchanan/subscriptions", "organizations_url": "https://api.github.com/users/gchanan/orgs", "repos_url": "https://api.github.com/users/gchanan/repos", "events_url": "https://api.github.com/users/gchanan/events{/privacy}", "received_events_url": "https://api.github.com/users/gchanan/received_events", "type": "User", "site_admin": false}, "body": "Maybe comment on why we only do this when zero_dim_dispatch_when_scalar?  It doesn't seem like there's any particular reason we have to restrict this behavior to that case, but we are just re-establishing the old behavior, right?", "created_at": "2018-03-23T16:08:43Z", "updated_at": "2018-11-23T15:41:03Z", "html_url": "https://github.com/pytorch/pytorch/pull/5864#discussion_r176785281", "pull_request_url": "https://api.github.com/repos/pytorch/pytorch/pulls/5864", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/176785281"}, "html": {"href": "https://github.com/pytorch/pytorch/pull/5864#discussion_r176785281"}, "pull_request": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/5864"}}, "body_html": "<p>Maybe comment on why we only do this when zero_dim_dispatch_when_scalar?  It doesn't seem like there's any particular reason we have to restrict this behavior to that case, but we are just re-establishing the old behavior, right?</p>", "body_text": "Maybe comment on why we only do this when zero_dim_dispatch_when_scalar?  It doesn't seem like there's any particular reason we have to restrict this behavior to that case, but we are just re-establishing the old behavior, right?"}