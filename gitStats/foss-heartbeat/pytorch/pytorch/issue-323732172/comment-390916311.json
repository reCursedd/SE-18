{"url": "https://api.github.com/repos/pytorch/pytorch/issues/comments/390916311", "html_url": "https://github.com/pytorch/pytorch/issues/7620#issuecomment-390916311", "issue_url": "https://api.github.com/repos/pytorch/pytorch/issues/7620", "id": 390916311, "node_id": "MDEyOklzc3VlQ29tbWVudDM5MDkxNjMxMQ==", "user": {"login": "emilmelnikov", "id": 1649961, "node_id": "MDQ6VXNlcjE2NDk5NjE=", "avatar_url": "https://avatars1.githubusercontent.com/u/1649961?v=4", "gravatar_id": "", "url": "https://api.github.com/users/emilmelnikov", "html_url": "https://github.com/emilmelnikov", "followers_url": "https://api.github.com/users/emilmelnikov/followers", "following_url": "https://api.github.com/users/emilmelnikov/following{/other_user}", "gists_url": "https://api.github.com/users/emilmelnikov/gists{/gist_id}", "starred_url": "https://api.github.com/users/emilmelnikov/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/emilmelnikov/subscriptions", "organizations_url": "https://api.github.com/users/emilmelnikov/orgs", "repos_url": "https://api.github.com/users/emilmelnikov/repos", "events_url": "https://api.github.com/users/emilmelnikov/events{/privacy}", "received_events_url": "https://api.github.com/users/emilmelnikov/received_events", "type": "User", "site_admin": false}, "created_at": "2018-05-22T09:00:32Z", "updated_at": "2018-05-22T09:00:32Z", "author_association": "NONE", "body_html": "<p>There is another API design issue: how to ensure that an indirect child of <code>Module</code> overrides the <code>arguments</code> property?</p>\n<ol>\n<li>We have <code>class Module(object)</code> without any arguments.</li>\n<li>Then, there is <code>class Threshold(Module)</code> with arguments <code>threshold</code>, <code>value</code> and <code>inplace</code>.</li>\n<li>Next, there is <code>class ReLU(Threshold)</code> with the only argument <code>inplace</code>.</li>\n</ol>\n<p>If we accidentally forget to override <code>parameters</code> in the ReLU, it will return invalid arguments.</p>", "body_text": "There is another API design issue: how to ensure that an indirect child of Module overrides the arguments property?\n\nWe have class Module(object) without any arguments.\nThen, there is class Threshold(Module) with arguments threshold, value and inplace.\nNext, there is class ReLU(Threshold) with the only argument inplace.\n\nIf we accidentally forget to override parameters in the ReLU, it will return invalid arguments.", "body": "There is another API design issue: how to ensure that an indirect child of `Module` overrides the `arguments` property?\r\n\r\n1. We have `class Module(object)` without any arguments.\r\n2. Then, there is `class Threshold(Module)` with arguments `threshold`, `value` and `inplace`.\r\n3. Next, there is `class ReLU(Threshold)` with the only argument `inplace`.\r\n\r\nIf we accidentally forget to override `parameters` in the ReLU, it will return invalid arguments."}