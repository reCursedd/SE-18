{"url": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/161931735", "pull_request_review_id": 89300555, "id": 161931735, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE2MTkzMTczNQ==", "diff_hunk": "@@ -263,8 +263,12 @@\n \n - func: squeeze(Tensor self, int64_t dim) -> Tensor\n \n+- func: squeeze(Tensor self, IntList dims) -> Tensor", "path": "aten/src/ATen/native/native_functions.yaml", "position": 4, "original_position": 4, "commit_id": "2145f7a84e1937eba1f2722b5d34f15c37c9a767", "original_commit_id": "b14d32f0f82be424ae4d40bcee52ca7f13197523", "user": {"login": "akhti", "id": 7470747, "node_id": "MDQ6VXNlcjc0NzA3NDc=", "avatar_url": "https://avatars3.githubusercontent.com/u/7470747?v=4", "gravatar_id": "", "url": "https://api.github.com/users/akhti", "html_url": "https://github.com/akhti", "followers_url": "https://api.github.com/users/akhti/followers", "following_url": "https://api.github.com/users/akhti/following{/other_user}", "gists_url": "https://api.github.com/users/akhti/gists{/gist_id}", "starred_url": "https://api.github.com/users/akhti/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/akhti/subscriptions", "organizations_url": "https://api.github.com/users/akhti/orgs", "repos_url": "https://api.github.com/users/akhti/repos", "events_url": "https://api.github.com/users/akhti/events{/privacy}", "received_events_url": "https://api.github.com/users/akhti/received_events", "type": "User", "site_admin": false}, "body": "It will use both.\r\n\r\n```python\r\nIn [1]: import torch\r\n\r\nIn [2]: v = torch.autograd.Variable(torch.ones([2, 1, 3, 1]), requires_grad=True)\r\n\r\nIn [3]: v.squeeze(dim=1).size()\r\nOut[3]: torch.Size([2, 3, 1])\r\n\r\nIn [4]: v.squeeze(dims=[1, 2]).size()\r\nOut[4]: torch.Size([2, 3, 1])\r\n\r\nIn [5]: v.squeeze(dim=[1, 2]).size()\r\n---------------------------------------------------------------------------\r\nRuntimeError                              Traceback (most recent call last)\r\n<ipython-input-5-f2e3d2988f84> in <module>()\r\n----> 1 v.squeeze(dim=[1, 2]).size()\r\n\r\nRuntimeError: squeeze() received an invalid combination of arguments - got (dim=list, ), but expected one of:\r\n * ()\r\n      didn't match because some of the keywords were incorrect: dim\r\n * (int dim)\r\n      didn't match because some of the arguments have invalid types: (dim=list, )\r\n * (tuple of ints dims)\r\n      didn't match because some of the keywords were incorrect: dim\r\n```", "created_at": "2018-01-17T00:58:27Z", "updated_at": "2018-11-23T15:38:14Z", "html_url": "https://github.com/pytorch/pytorch/pull/4692#discussion_r161931735", "pull_request_url": "https://api.github.com/repos/pytorch/pytorch/pulls/4692", "author_association": "NONE", "_links": {"self": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/161931735"}, "html": {"href": "https://github.com/pytorch/pytorch/pull/4692#discussion_r161931735"}, "pull_request": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/4692"}}, "body_html": "<p>It will use both.</p>\n<div class=\"highlight highlight-source-python\"><pre>In [<span class=\"pl-c1\">1</span>]: <span class=\"pl-k\">import</span> torch\n\nIn [<span class=\"pl-c1\">2</span>]: v <span class=\"pl-k\">=</span> torch.autograd.Variable(torch.ones([<span class=\"pl-c1\">2</span>, <span class=\"pl-c1\">1</span>, <span class=\"pl-c1\">3</span>, <span class=\"pl-c1\">1</span>]), <span class=\"pl-v\">requires_grad</span><span class=\"pl-k\">=</span><span class=\"pl-c1\">True</span>)\n\nIn [<span class=\"pl-c1\">3</span>]: v.squeeze(<span class=\"pl-v\">dim</span><span class=\"pl-k\">=</span><span class=\"pl-c1\">1</span>).size()\nOut[<span class=\"pl-c1\">3</span>]: torch.Size([<span class=\"pl-c1\">2</span>, <span class=\"pl-c1\">3</span>, <span class=\"pl-c1\">1</span>])\n\nIn [<span class=\"pl-c1\">4</span>]: v.squeeze(<span class=\"pl-v\">dims</span><span class=\"pl-k\">=</span>[<span class=\"pl-c1\">1</span>, <span class=\"pl-c1\">2</span>]).size()\nOut[<span class=\"pl-c1\">4</span>]: torch.Size([<span class=\"pl-c1\">2</span>, <span class=\"pl-c1\">3</span>, <span class=\"pl-c1\">1</span>])\n\nIn [<span class=\"pl-c1\">5</span>]: v.squeeze(<span class=\"pl-v\">dim</span><span class=\"pl-k\">=</span>[<span class=\"pl-c1\">1</span>, <span class=\"pl-c1\">2</span>]).size()\n<span class=\"pl-ii\">--------------------------------------------------------------------------</span><span class=\"pl-k\">-</span>\n<span class=\"pl-c1\">RuntimeError</span>                              Traceback (most recent call last)\n<span class=\"pl-k\">&lt;</span>ipython<span class=\"pl-k\">-</span><span class=\"pl-c1\">input</span><span class=\"pl-k\">-</span><span class=\"pl-c1\">5</span><span class=\"pl-k\">-</span>f2e3d2988f84<span class=\"pl-k\">&gt;</span> <span class=\"pl-k\">in</span> <span class=\"pl-k\">&lt;</span>module<span class=\"pl-k\">&gt;</span>()\n<span class=\"pl-ii\">----</span><span class=\"pl-k\">&gt;</span> <span class=\"pl-c1\">1</span> v.squeeze(<span class=\"pl-v\">dim</span><span class=\"pl-k\">=</span>[<span class=\"pl-c1\">1</span>, <span class=\"pl-c1\">2</span>]).size()\n\n<span class=\"pl-c1\">RuntimeError</span>: squeeze() received an invalid combination of arguments <span class=\"pl-k\">-</span> got (<span class=\"pl-v\">dim</span><span class=\"pl-k\">=</span><span class=\"pl-c1\">list</span>, ), but expected one of:\n <span class=\"pl-k\">*</span> ()\n      didn<span class=\"pl-s\"><span class=\"pl-pds\">'</span>t match because some of the keywords were incorrect: dim<span class=\"pl-ii\"></span></span>\n <span class=\"pl-k\">*</span> (<span class=\"pl-c1\">int</span> dim)\n      didn<span class=\"pl-s\"><span class=\"pl-pds\">'</span>t match because some of the arguments have invalid types: (dim=list, )<span class=\"pl-ii\"></span></span>\n <span class=\"pl-k\">*</span> (<span class=\"pl-c1\">tuple</span> of ints dims)\n      didn<span class=\"pl-s\"><span class=\"pl-pds\">'</span>t match because some of the keywords were incorrect: dim<span class=\"pl-ii\"></span></span></pre></div>", "body_text": "It will use both.\nIn [1]: import torch\n\nIn [2]: v = torch.autograd.Variable(torch.ones([2, 1, 3, 1]), requires_grad=True)\n\nIn [3]: v.squeeze(dim=1).size()\nOut[3]: torch.Size([2, 3, 1])\n\nIn [4]: v.squeeze(dims=[1, 2]).size()\nOut[4]: torch.Size([2, 3, 1])\n\nIn [5]: v.squeeze(dim=[1, 2]).size()\n---------------------------------------------------------------------------\nRuntimeError                              Traceback (most recent call last)\n<ipython-input-5-f2e3d2988f84> in <module>()\n----> 1 v.squeeze(dim=[1, 2]).size()\n\nRuntimeError: squeeze() received an invalid combination of arguments - got (dim=list, ), but expected one of:\n * ()\n      didn't match because some of the keywords were incorrect: dim\n * (int dim)\n      didn't match because some of the arguments have invalid types: (dim=list, )\n * (tuple of ints dims)\n      didn't match because some of the keywords were incorrect: dim", "in_reply_to_id": 161901673}