{"url": "https://api.github.com/repos/pytorch/pytorch/issues/11317", "repository_url": "https://api.github.com/repos/pytorch/pytorch", "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/11317/labels{/name}", "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/11317/comments", "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/11317/events", "html_url": "https://github.com/pytorch/pytorch/issues/11317", "id": 357467383, "node_id": "MDU6SXNzdWUzNTc0NjczODM=", "number": 11317, "title": "Blob::GetMutable<Tensor> silently gives back UndefinedTensor and doesn't do what you want", "user": {"login": "steplee", "id": 5303539, "node_id": "MDQ6VXNlcjUzMDM1Mzk=", "avatar_url": "https://avatars1.githubusercontent.com/u/5303539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/steplee", "html_url": "https://github.com/steplee", "followers_url": "https://api.github.com/users/steplee/followers", "following_url": "https://api.github.com/users/steplee/following{/other_user}", "gists_url": "https://api.github.com/users/steplee/gists{/gist_id}", "starred_url": "https://api.github.com/users/steplee/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/steplee/subscriptions", "organizations_url": "https://api.github.com/users/steplee/orgs", "repos_url": "https://api.github.com/users/steplee/repos", "events_url": "https://api.github.com/users/steplee/events{/privacy}", "received_events_url": "https://api.github.com/users/steplee/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 890282107, "node_id": "MDU6TGFiZWw4OTAyODIxMDc=", "url": "https://api.github.com/repos/pytorch/pytorch/labels/caffe2", "name": "caffe2", "color": "210aa8", "default": false}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2018-09-06T01:54:30Z", "updated_at": "2018-10-24T00:09:03Z", "closed_at": "2018-09-06T18:25:22Z", "author_association": "NONE", "body_html": "<p>Using caffe2 from C++, when I had two blobs created in the workspace (on the GPU, with an init/prediction net also in the workspace), doing the workflow of <code>GetBlob -&gt; GetMutable -&gt; CopyFrom(cpu source tensor)</code>, the second blob would overwrite the first (and vice versa, whichever was most recently written). Checked the networks' prototxts by to ensure the variables were never copied there.</p>\n<p>The solution was to not use<code> GetMutable()</code>, but to use create a new <code>TensorCUDA</code> and call <code>blob-&gt;Reset(src)</code> instead.</p>\n<p>Is the GetMutable() approach below not supposed to work? It works when only one blob needs to be set, and is used by the only C++ samples I could find.</p>\n<p>A snippet from my old code</p>\n<pre><code>    std::vector&lt;float&gt; fake_data_vec(1*3*224*224);\n    const TensorCUDA* fake_data_t = wrk.CreateBlob(\"data\")-&gt;GetMutable&lt;TensorCUDA&gt;();\n    auto fake_data_src = TensorCPU({1,3,224,224}, fake_data_vec, cctx);\n    fake_data_t-&gt;CopyFrom(fake_data_src);\n\n    referenceCodesBlob = wrk.CreateBlob(\"reference_codes\");\n    const TensorCUDA* refCodes_t = referenceCodesBlob-&gt;GetMutable&lt;TensorCUDA&gt;();\n    auto src = TensorCPU({N,D}, refCodesVec, cctx);\n    refCodes_t-&gt;CopyFrom(src);\n</code></pre>\n<p>I printed the pointer addresses of <code>GetBlob</code> and <code>GetMutable</code>, and they were different as expected, which leads me to believe it might have to do with <code>TensorImpl</code> or <code>Storage</code>. Also the dims of the tensors were copied as well, not just the data.</p>\n<ul>\n<li>PyTorch or Caffe2: caffe2</li>\n<li>How you installed PyTorch (conda, pip, source): source</li>\n<li>Build command you used (if compiling from source): <code>CMAKE_FLAGS=-DUSE_MPI=0 NO_MIOPEN=1 FULL_CAFFE2=1 sudo -EH python setup.py install</code></li>\n<li>OS: Ubuntu 16.04</li>\n<li>PyTorch version: Commit <a class=\"commit-link\" data-hovercard-type=\"commit\" data-hovercard-url=\"https://github.com/pytorch/pytorch/commit/b7cd4b692c294d93986da6565f3e0ff88ae6afae/hovercard\" href=\"https://github.com/pytorch/pytorch/commit/b7cd4b692c294d93986da6565f3e0ff88ae6afae\"><tt>b7cd4b6</tt></a> (sept. 5)</li>\n<li>Python version: 3.5</li>\n<li>CUDA/cuDNN version: 9.0 / 7</li>\n<li>GPU models and configuration: 1060</li>\n<li>GCC version (if compiling from source): 5.4.0</li>\n<li>CMake version: 3.5+</li>\n<li>Versions of any other relevant libraries:</li>\n</ul>", "body_text": "Using caffe2 from C++, when I had two blobs created in the workspace (on the GPU, with an init/prediction net also in the workspace), doing the workflow of GetBlob -> GetMutable -> CopyFrom(cpu source tensor), the second blob would overwrite the first (and vice versa, whichever was most recently written). Checked the networks' prototxts by to ensure the variables were never copied there.\nThe solution was to not use GetMutable(), but to use create a new TensorCUDA and call blob->Reset(src) instead.\nIs the GetMutable() approach below not supposed to work? It works when only one blob needs to be set, and is used by the only C++ samples I could find.\nA snippet from my old code\n    std::vector<float> fake_data_vec(1*3*224*224);\n    const TensorCUDA* fake_data_t = wrk.CreateBlob(\"data\")->GetMutable<TensorCUDA>();\n    auto fake_data_src = TensorCPU({1,3,224,224}, fake_data_vec, cctx);\n    fake_data_t->CopyFrom(fake_data_src);\n\n    referenceCodesBlob = wrk.CreateBlob(\"reference_codes\");\n    const TensorCUDA* refCodes_t = referenceCodesBlob->GetMutable<TensorCUDA>();\n    auto src = TensorCPU({N,D}, refCodesVec, cctx);\n    refCodes_t->CopyFrom(src);\n\nI printed the pointer addresses of GetBlob and GetMutable, and they were different as expected, which leads me to believe it might have to do with TensorImpl or Storage. Also the dims of the tensors were copied as well, not just the data.\n\nPyTorch or Caffe2: caffe2\nHow you installed PyTorch (conda, pip, source): source\nBuild command you used (if compiling from source): CMAKE_FLAGS=-DUSE_MPI=0 NO_MIOPEN=1 FULL_CAFFE2=1 sudo -EH python setup.py install\nOS: Ubuntu 16.04\nPyTorch version: Commit b7cd4b6 (sept. 5)\nPython version: 3.5\nCUDA/cuDNN version: 9.0 / 7\nGPU models and configuration: 1060\nGCC version (if compiling from source): 5.4.0\nCMake version: 3.5+\nVersions of any other relevant libraries:", "body": "Using caffe2 from C++, when I had two blobs created in the workspace (on the GPU, with an init/prediction net also in the workspace), doing the workflow of `GetBlob -> GetMutable -> CopyFrom(cpu source tensor)`, the second blob would overwrite the first (and vice versa, whichever was most recently written). Checked the networks' prototxts by to ensure the variables were never copied there.\r\n\r\nThe solution was to not use` GetMutable()`, but to use create a new `TensorCUDA` and call `blob->Reset(src)` instead.\r\n\r\nIs the GetMutable() approach below not supposed to work? It works when only one blob needs to be set, and is used by the only C++ samples I could find.\r\n\r\nA snippet from my old code\r\n```\r\n    std::vector<float> fake_data_vec(1*3*224*224);\r\n    const TensorCUDA* fake_data_t = wrk.CreateBlob(\"data\")->GetMutable<TensorCUDA>();\r\n    auto fake_data_src = TensorCPU({1,3,224,224}, fake_data_vec, cctx);\r\n    fake_data_t->CopyFrom(fake_data_src);\r\n\r\n    referenceCodesBlob = wrk.CreateBlob(\"reference_codes\");\r\n    const TensorCUDA* refCodes_t = referenceCodesBlob->GetMutable<TensorCUDA>();\r\n    auto src = TensorCPU({N,D}, refCodesVec, cctx);\r\n    refCodes_t->CopyFrom(src);\r\n```\r\n\r\nI printed the pointer addresses of `GetBlob` and `GetMutable`, and they were different as expected, which leads me to believe it might have to do with `TensorImpl` or `Storage`. Also the dims of the tensors were copied as well, not just the data.\r\n\r\n- PyTorch or Caffe2: caffe2\r\n- How you installed PyTorch (conda, pip, source): source\r\n- Build command you used (if compiling from source): `CMAKE_FLAGS=-DUSE_MPI=0 NO_MIOPEN=1 FULL_CAFFE2=1 sudo -EH python setup.py install`\r\n- OS: Ubuntu 16.04\r\n- PyTorch version: Commit b7cd4b692c294d93986da6565f3e0ff88ae6afae (sept. 5)\r\n- Python version: 3.5\r\n- CUDA/cuDNN version: 9.0 / 7\r\n- GPU models and configuration: 1060\r\n- GCC version (if compiling from source): 5.4.0\r\n- CMake version: 3.5+\r\n- Versions of any other relevant libraries:\r\n"}