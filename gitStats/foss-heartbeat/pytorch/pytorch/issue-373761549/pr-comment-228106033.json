{"url": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/228106033", "pull_request_review_id": 168285565, "id": 228106033, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIyODEwNjAzMw==", "diff_hunk": "@@ -0,0 +1,112 @@\n+#pragma once\n+#include \"torch/csrc/jit/fuser/config.h\"\n+#if USE_CPU_FUSER || USE_CUDA_FUSER\n+\n+#include \"ATen/ATen.h\"\n+#include \"torch/csrc/WindowsTorchApiMacro.h\"\n+#include \"c10/util/Optional.h\"\n+#include \"torch/csrc/jit/stack.h\"\n+#include \"torch/csrc/jit/interpreter.h\"\n+#include \"torch/csrc/jit/ir.h\"\n+#include \"torch/csrc/jit/fuser/interface.h\"\n+#include \"torch/csrc/jit/fuser/arg_spec.h\"\n+#include \"torch/csrc/jit/fuser/fused_kernel.h\"\n+\n+#include <memory>\n+#include <cstdint>\n+#include <vector>\n+#include <unordered_map>\n+#include <mutex>\n+\n+namespace torch { namespace jit { namespace fuser {\n+\n+// Helper struct containing partition information: the number of tensors\n+// created and the dimension the partitioning is performed on.\n+struct TORCH_API PartitionInfo {\n+  PartitionInfo(\n+    const int64_t _nSubTensors\n+  , const int64_t _dim)\n+  : nSubTensors_{_nSubTensors}\n+  , dim_{_dim} \n+  { };\n+\n+  int64_t nSubTensors() const { return nSubTensors_; }\n+  int64_t dim() const { return dim_; }\n+\n+private:\n+  int64_t nSubTensors_;\n+  int64_t dim_;\n+};\n+   \n+ // \"Kernel Specification.\" - Contains device-independent fusion information.\n+ // Each kernel specification contains a map of instantiated generated functions\n+ // that implement some or most of its functionality. Multiple generated\n+ // functions are needed by each abstract specification because of different\n+ // devices (cpu vs gpu, different gpus) and different inputs (int vs float, \n+ // contiguous vs discontiguous).\n+ // Note: uses a mutex to control access to its kernel store\n+ // TODO: allow abstract kernels to use multiple generated kernels\n+ // TODO: allow abstract kernels to reuse generated kernels from common pool\n+struct TORCH_API KernelSpec {\n+  KernelSpec(\n+    const int64_t _key\n+  , std::shared_ptr<Graph> _graph)\n+  : key_{_key}\n+  , graph_{_graph} \n+  , code_{_graph}\n+  , nInputs_{_graph->inputs().size()}\n+  , inputBroadcastGroups_{}\n+  , inputChunks_{}\n+  , kernels_{}\n+  { }\n+\n+   // Getters\n+  int64_t key() const { return key_; }\n+  std::shared_ptr<Graph> graph() const { return graph_; }\n+  const Code& code() const { return code_; }\n+  int64_t nInputs() const { return nInputs_; }\n+  bool isFusable() const { return isFusable_; }\n+  std::vector<std::vector<int64_t>>& inputBroadcastGroups() { \n+    return inputBroadcastGroups_; }\n+  const std::vector<std::vector<int64_t>>& inputBroadcastGroups() const { \n+    return inputBroadcastGroups_; }\n+  std::vector<PartitionInfo>& inputChunks() { return inputChunks_; }\n+  const std::vector<PartitionInfo>& inputChunks() const { return inputChunks_; }\n+\n+   // Setters\n+  void setFusable(const bool _isFusable) { isFusable_ = _isFusable; }", "path": "torch/csrc/jit/fuser/kernel_spec.h", "position": null, "original_position": 77, "commit_id": "445f1d937372bebb3a4f7717b5d4de33c77401e6", "original_commit_id": "d5339380c73db30184dd27b47fef610df1073d2e", "user": {"login": "apaszke", "id": 4583066, "node_id": "MDQ6VXNlcjQ1ODMwNjY=", "avatar_url": "https://avatars3.githubusercontent.com/u/4583066?v=4", "gravatar_id": "", "url": "https://api.github.com/users/apaszke", "html_url": "https://github.com/apaszke", "followers_url": "https://api.github.com/users/apaszke/followers", "following_url": "https://api.github.com/users/apaszke/following{/other_user}", "gists_url": "https://api.github.com/users/apaszke/gists{/gist_id}", "starred_url": "https://api.github.com/users/apaszke/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/apaszke/subscriptions", "organizations_url": "https://api.github.com/users/apaszke/orgs", "repos_url": "https://api.github.com/users/apaszke/repos", "events_url": "https://api.github.com/users/apaszke/events{/privacy}", "received_events_url": "https://api.github.com/users/apaszke/received_events", "type": "User", "site_admin": false}, "body": "Why is that necessary?", "created_at": "2018-10-25T09:47:49Z", "updated_at": "2018-11-23T15:53:34Z", "html_url": "https://github.com/pytorch/pytorch/pull/13108#discussion_r228106033", "pull_request_url": "https://api.github.com/repos/pytorch/pytorch/pulls/13108", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/228106033"}, "html": {"href": "https://github.com/pytorch/pytorch/pull/13108#discussion_r228106033"}, "pull_request": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/13108"}}, "body_html": "<p>Why is that necessary?</p>", "body_text": "Why is that necessary?"}