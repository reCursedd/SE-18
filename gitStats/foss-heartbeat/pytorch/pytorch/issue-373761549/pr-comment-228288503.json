{"url": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/228288503", "pull_request_review_id": 168528084, "id": 228288503, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIyODI4ODUwMw==", "diff_hunk": "@@ -62,10 +62,16 @@ RegisterOperators reg({\n     Operator(\n         prim::FusionGroup,\n         [](Node* node) {\n-          auto handle = getFusionHandle(node);\n-          return [handle](Stack& stack) {\n+          // Acquires FusionKey if not present\n+          if (!node->hasAttribute(attr::FusionKey)) {\n+            int64_t key;\n+            registerFusion(key, node);\n+            node->i_(attr::FusionKey, key);", "path": "torch/csrc/jit/register_prim_ops.cpp", "position": null, "original_position": 19, "commit_id": "445f1d937372bebb3a4f7717b5d4de33c77401e6", "original_commit_id": "d5339380c73db30184dd27b47fef610df1073d2e", "user": {"login": "mruberry", "id": 38511765, "node_id": "MDQ6VXNlcjM4NTExNzY1", "avatar_url": "https://avatars3.githubusercontent.com/u/38511765?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mruberry", "html_url": "https://github.com/mruberry", "followers_url": "https://api.github.com/users/mruberry/followers", "following_url": "https://api.github.com/users/mruberry/following{/other_user}", "gists_url": "https://api.github.com/users/mruberry/gists{/gist_id}", "starred_url": "https://api.github.com/users/mruberry/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mruberry/subscriptions", "organizations_url": "https://api.github.com/users/mruberry/orgs", "repos_url": "https://api.github.com/users/mruberry/repos", "events_url": "https://api.github.com/users/mruberry/events{/privacy}", "received_events_url": "https://api.github.com/users/mruberry/received_events", "type": "User", "site_admin": false}, "body": "If we change this so the key is not stored in the node, but simply acquired and passed to the lambda, are we concerned about \"recreating\" the fusion and getting a new key? Or is storing it into the lambda sufficient? ", "created_at": "2018-10-25T18:35:47Z", "updated_at": "2018-11-23T15:53:36Z", "html_url": "https://github.com/pytorch/pytorch/pull/13108#discussion_r228288503", "pull_request_url": "https://api.github.com/repos/pytorch/pytorch/pulls/13108", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/228288503"}, "html": {"href": "https://github.com/pytorch/pytorch/pull/13108#discussion_r228288503"}, "pull_request": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/13108"}}, "body_html": "<p>If we change this so the key is not stored in the node, but simply acquired and passed to the lambda, are we concerned about \"recreating\" the fusion and getting a new key? Or is storing it into the lambda sufficient?</p>", "body_text": "If we change this so the key is not stored in the node, but simply acquired and passed to the lambda, are we concerned about \"recreating\" the fusion and getting a new key? Or is storing it into the lambda sufficient?", "in_reply_to_id": 228103563}