{"url": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/145978777", "pull_request_review_id": 70860914, "id": 145978777, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE0NTk3ODc3Nw==", "diff_hunk": "@@ -0,0 +1,4 @@\n+#pragma once\n+\n+struct _object;\n+typedef _object PyObject;", "path": "torch/csrc/utils/python_stub.h", "position": 4, "original_position": 4, "commit_id": "9a504e96fb4e0935558e05f78d7d8691af43193d", "original_commit_id": "9a504e96fb4e0935558e05f78d7d8691af43193d", "user": {"login": "ezyang", "id": 13564, "node_id": "MDQ6VXNlcjEzNTY0", "avatar_url": "https://avatars0.githubusercontent.com/u/13564?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ezyang", "html_url": "https://github.com/ezyang", "followers_url": "https://api.github.com/users/ezyang/followers", "following_url": "https://api.github.com/users/ezyang/following{/other_user}", "gists_url": "https://api.github.com/users/ezyang/gists{/gist_id}", "starred_url": "https://api.github.com/users/ezyang/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ezyang/subscriptions", "organizations_url": "https://api.github.com/users/ezyang/orgs", "repos_url": "https://api.github.com/users/ezyang/repos", "events_url": "https://api.github.com/users/ezyang/events{/privacy}", "received_events_url": "https://api.github.com/users/ezyang/received_events", "type": "User", "site_admin": false}, "body": "```\r\n    Include Python.h less using a new stub header.\r\n    \r\n    In many \"non-Python\" headers, we include Python.h because we need\r\n    to declare a pointer to PyObject, and solely because of that.  It\r\n    would be a lot better if we had a simpler version of Python.h that\r\n    just declared PyObject available for pointers, without anything\r\n    else.  This is what torch/csrc/utils/python_stub.h does.\r\n    \r\n    The good thing about not including Python.h is that it is easy to\r\n    be warning-less; no more ugly insertions of Python.h on headers\r\n    where it has no good reason to be.\r\n```", "created_at": "2017-10-20T14:31:47Z", "updated_at": "2018-11-23T15:35:34Z", "html_url": "https://github.com/pytorch/pytorch/pull/3187#discussion_r145978777", "pull_request_url": "https://api.github.com/repos/pytorch/pytorch/pulls/3187", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/145978777"}, "html": {"href": "https://github.com/pytorch/pytorch/pull/3187#discussion_r145978777"}, "pull_request": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/3187"}}, "body_html": "<pre><code>    Include Python.h less using a new stub header.\n    \n    In many \"non-Python\" headers, we include Python.h because we need\n    to declare a pointer to PyObject, and solely because of that.  It\n    would be a lot better if we had a simpler version of Python.h that\n    just declared PyObject available for pointers, without anything\n    else.  This is what torch/csrc/utils/python_stub.h does.\n    \n    The good thing about not including Python.h is that it is easy to\n    be warning-less; no more ugly insertions of Python.h on headers\n    where it has no good reason to be.\n</code></pre>", "body_text": "Include Python.h less using a new stub header.\n    \n    In many \"non-Python\" headers, we include Python.h because we need\n    to declare a pointer to PyObject, and solely because of that.  It\n    would be a lot better if we had a simpler version of Python.h that\n    just declared PyObject available for pointers, without anything\n    else.  This is what torch/csrc/utils/python_stub.h does.\n    \n    The good thing about not including Python.h is that it is easy to\n    be warning-less; no more ugly insertions of Python.h on headers\n    where it has no good reason to be.", "in_reply_to_id": 145908339}