{"url": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/146113607", "pull_request_review_id": 71015378, "id": 146113607, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE0NjExMzYwNw==", "diff_hunk": "@@ -156,7 +156,7 @@ inline std::vector<at::Tensor> PythonArgs::tensorlist(int i) {\n }\n \n inline std::vector<int64_t> PythonArgs::intlist(int i) {\n-  if (!args[i]) return signature.params[i].default_intlist;\n+  if (!args[i] || args[i] == Py_None) return signature.params[i].default_intlist;", "path": "torch/csrc/utils/python_arg_parser.h", "position": 5, "original_position": 5, "commit_id": "9a504e96fb4e0935558e05f78d7d8691af43193d", "original_commit_id": "9a504e96fb4e0935558e05f78d7d8691af43193d", "user": {"login": "colesbury", "id": 655866, "node_id": "MDQ6VXNlcjY1NTg2Ng==", "avatar_url": "https://avatars1.githubusercontent.com/u/655866?v=4", "gravatar_id": "", "url": "https://api.github.com/users/colesbury", "html_url": "https://github.com/colesbury", "followers_url": "https://api.github.com/users/colesbury/followers", "following_url": "https://api.github.com/users/colesbury/following{/other_user}", "gists_url": "https://api.github.com/users/colesbury/gists{/gist_id}", "starred_url": "https://api.github.com/users/colesbury/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/colesbury/subscriptions", "organizations_url": "https://api.github.com/users/colesbury/orgs", "repos_url": "https://api.github.com/users/colesbury/repos", "events_url": "https://api.github.com/users/colesbury/events{/privacy}", "received_events_url": "https://api.github.com/users/colesbury/received_events", "type": "User", "site_admin": false}, "body": "Here's the prototype for avg_pool3d:\r\n\r\n```\r\navg_pool3d(Tensor input, IntList[3] kernel_size, IntList[3] stride=None, IntList[3] padding=0, bool ceil_mode=False, bool count_include_pad=False)\r\n```\r\n\r\nHere's the desired behavior:\r\n\r\n**EDIT**: typo\r\n\r\n`kernel_size`: required and should not allow explicit `None` (current behavior)\r\n`stride`: optional and should  treat explicit `None` as an empty list (current behavior)\r\n`padding`: optional. I'm ambivalent about treating `None` as the default here, which is the current behavior.\r\n\r\nThis change was to fix the `stride` case, which is important because it lets you write Python functions with the same defaults that pass the full argument list down to C++.", "created_at": "2017-10-21T19:28:29Z", "updated_at": "2018-11-23T15:35:37Z", "html_url": "https://github.com/pytorch/pytorch/pull/3187#discussion_r146113607", "pull_request_url": "https://api.github.com/repos/pytorch/pytorch/pulls/3187", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/146113607"}, "html": {"href": "https://github.com/pytorch/pytorch/pull/3187#discussion_r146113607"}, "pull_request": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/3187"}}, "body_html": "<p>Here's the prototype for avg_pool3d:</p>\n<pre><code>avg_pool3d(Tensor input, IntList[3] kernel_size, IntList[3] stride=None, IntList[3] padding=0, bool ceil_mode=False, bool count_include_pad=False)\n</code></pre>\n<p>Here's the desired behavior:</p>\n<p><strong>EDIT</strong>: typo</p>\n<p><code>kernel_size</code>: required and should not allow explicit <code>None</code> (current behavior)<br>\n<code>stride</code>: optional and should  treat explicit <code>None</code> as an empty list (current behavior)<br>\n<code>padding</code>: optional. I'm ambivalent about treating <code>None</code> as the default here, which is the current behavior.</p>\n<p>This change was to fix the <code>stride</code> case, which is important because it lets you write Python functions with the same defaults that pass the full argument list down to C++.</p>", "body_text": "Here's the prototype for avg_pool3d:\navg_pool3d(Tensor input, IntList[3] kernel_size, IntList[3] stride=None, IntList[3] padding=0, bool ceil_mode=False, bool count_include_pad=False)\n\nHere's the desired behavior:\nEDIT: typo\nkernel_size: required and should not allow explicit None (current behavior)\nstride: optional and should  treat explicit None as an empty list (current behavior)\npadding: optional. I'm ambivalent about treating None as the default here, which is the current behavior.\nThis change was to fix the stride case, which is important because it lets you write Python functions with the same defaults that pass the full argument list down to C++.", "in_reply_to_id": 145908311}