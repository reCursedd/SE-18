{"url": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/207446506", "pull_request_review_id": 143057346, "id": 207446506, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwNzQ0NjUwNg==", "diff_hunk": "@@ -485,21 +485,9 @@ void initPythonIRBindings(PyObject * module_) {\n   .def_readonly(\"user\",&Use::user)\n   .def_readonly(\"offset\",&Use::offset);\n \n-  m.def(\"_jit_import_graph\", [](const std::string& serialized_graph) {\n-    std::vector<at::Tensor> initializers;\n-    auto graph = ImportIRGraph(serialized_graph, initializers);\n-    std::vector<torch::autograd::Variable> variables;\n-    variables.reserve(initializers.size());\n-    for (auto& tensor : initializers) {\n-      variables.push_back(torch::autograd::make_variable(\n-          std::move(tensor), /*requires_grad=*/false));\n-    }\n-    return std::make_tuple(graph, variables);\n-  });\n   m.def(\"_jit_import_module\", [](const std::shared_ptr<script::Module> module,\n-                                 const std::string& serialized_module,\n-                                 const std::unordered_map<std::string, std::string>& storages) {\n-    ImportIRModule(module, serialized_module, storages);\n+                                 const std::string& filename) {\n+    ImportIRModule(module, filename);", "path": "torch/csrc/jit/python_ir.cpp", "position": null, "original_position": 20, "commit_id": "6cb3261fba1587d67dcb0a61520d22deb245a7d3", "original_commit_id": "f9e92728d6a9ff223afdbb06868516b6728f06ab", "user": {"login": "zdevito", "id": 370202, "node_id": "MDQ6VXNlcjM3MDIwMg==", "avatar_url": "https://avatars0.githubusercontent.com/u/370202?v=4", "gravatar_id": "", "url": "https://api.github.com/users/zdevito", "html_url": "https://github.com/zdevito", "followers_url": "https://api.github.com/users/zdevito/followers", "following_url": "https://api.github.com/users/zdevito/following{/other_user}", "gists_url": "https://api.github.com/users/zdevito/gists{/gist_id}", "starred_url": "https://api.github.com/users/zdevito/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/zdevito/subscriptions", "organizations_url": "https://api.github.com/users/zdevito/orgs", "repos_url": "https://api.github.com/users/zdevito/repos", "events_url": "https://api.github.com/users/zdevito/events{/privacy}", "received_events_url": "https://api.github.com/users/zdevito/received_events", "type": "User", "site_admin": false}, "body": "Let's make a C++ API as well:\r\n```\r\n   module = torch::jit::load(filename)\r\n```\r\n\r\nThe function `_jit_import_module` should be added a method to ScriptModule's python bindings instead, `m._load(filename)`.", "created_at": "2018-08-03T05:49:49Z", "updated_at": "2018-11-23T15:48:42Z", "html_url": "https://github.com/pytorch/pytorch/pull/10191#discussion_r207446506", "pull_request_url": "https://api.github.com/repos/pytorch/pytorch/pulls/10191", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/207446506"}, "html": {"href": "https://github.com/pytorch/pytorch/pull/10191#discussion_r207446506"}, "pull_request": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/10191"}}, "body_html": "<p>Let's make a C++ API as well:</p>\n<pre><code>   module = torch::jit::load(filename)\n</code></pre>\n<p>The function <code>_jit_import_module</code> should be added a method to ScriptModule's python bindings instead, <code>m._load(filename)</code>.</p>", "body_text": "Let's make a C++ API as well:\n   module = torch::jit::load(filename)\n\nThe function _jit_import_module should be added a method to ScriptModule's python bindings instead, m._load(filename)."}