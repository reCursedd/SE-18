{"url": "https://api.github.com/repos/pytorch/pytorch/issues/comments/355187377", "html_url": "https://github.com/pytorch/pytorch/issues/4419#issuecomment-355187377", "issue_url": "https://api.github.com/repos/pytorch/pytorch/issues/4419", "id": 355187377, "node_id": "MDEyOklzc3VlQ29tbWVudDM1NTE4NzM3Nw==", "user": {"login": "sighingnow", "id": 7144772, "node_id": "MDQ6VXNlcjcxNDQ3NzI=", "avatar_url": "https://avatars2.githubusercontent.com/u/7144772?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sighingnow", "html_url": "https://github.com/sighingnow", "followers_url": "https://api.github.com/users/sighingnow/followers", "following_url": "https://api.github.com/users/sighingnow/following{/other_user}", "gists_url": "https://api.github.com/users/sighingnow/gists{/gist_id}", "starred_url": "https://api.github.com/users/sighingnow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sighingnow/subscriptions", "organizations_url": "https://api.github.com/users/sighingnow/orgs", "repos_url": "https://api.github.com/users/sighingnow/repos", "events_url": "https://api.github.com/users/sighingnow/events{/privacy}", "received_events_url": "https://api.github.com/users/sighingnow/received_events", "type": "User", "site_admin": false}, "created_at": "2018-01-04T02:59:19Z", "updated_at": "2018-01-04T02:59:19Z", "author_association": "CONTRIBUTOR", "body_html": "<p>Swap the order of the <code>*</code> and <code>/</code> operator, try</p>\n<div class=\"highlight highlight-source-c++\"><pre>std::cout &lt;&lt; a + (b-a)/(<span class=\"pl-k\">float</span> (n-<span class=\"pl-c1\">1</span>)) * i &lt;&lt; std::endl;</pre></div>\n<p>Then we could get the right answer. The result of <code>i * (b-a)</code> exceeds the precision of <code>float</code> type.</p>\n<p>Indeed, in pytorch the <code>linspace</code> was implemented as <a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=17094694\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/Ktakuya332C\">@Ktakuya332C</a> comment:</p>\n<p><div class=\"border rounded-1 my-2\">\n  <div class=\"f6 px-3 py-2 lh-condensed border-bottom bg-gray-light\">\n    <p class=\"mb-0 text-bold\">\n      <a href=\"https://github.com/pytorch/pytorch/blob/43ab91118226b330be6d2274a154b98da233d879/aten/src/TH/generic/THTensorMath.c#L3385-L3388\">pytorch/aten/src/TH/generic/THTensorMath.c</a>\n    </p>\n    <p class=\"mb-0 text-gray-light\">\n        Lines 3385 to 3388\n      in\n      <a data-pjax=\"true\" class=\"commit-tease-sha\" href=\"/pytorch/pytorch/commit/43ab91118226b330be6d2274a154b98da233d879\">43ab911</a>\n    </p>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper blob-wrapper-embedded data\">\n    <table class=\"highlight tab-size mb-0 js-file-line-container\" data-tab-size=\"8\">\n\n        <tbody><tr class=\"border-0\">\n          <td id=\"L3385\" class=\"blob-num border-0 px-3 py-0 bg-white js-line-number\" data-line-number=\"3385\"></td>\n          <td id=\"LC3385\" class=\"blob-code border-0 px-3 py-0 bg-white blob-code-inner js-file-line\"> <span class=\"pl-c1\">TH_TENSOR_APPLY</span>(real, r_, </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L3386\" class=\"blob-num border-0 px-3 py-0 bg-white js-line-number\" data-line-number=\"3386\"></td>\n          <td id=\"LC3386\" class=\"blob-code border-0 px-3 py-0 bg-white blob-code-inner js-file-line\">         *r__data = a + i*(b-a)/((real)(n-<span class=\"pl-c1\">1</span>)); </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L3387\" class=\"blob-num border-0 px-3 py-0 bg-white js-line-number\" data-line-number=\"3387\"></td>\n          <td id=\"LC3387\" class=\"blob-code border-0 px-3 py-0 bg-white blob-code-inner js-file-line\">         i++; </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L3388\" class=\"blob-num border-0 px-3 py-0 bg-white js-line-number\" data-line-number=\"3388\"></td>\n          <td id=\"LC3388\" class=\"blob-code border-0 px-3 py-0 bg-white blob-code-inner js-file-line\">       ); </td>\n        </tr>\n    </tbody></table>\n  </div>\n</div>\n</p>", "body_text": "Swap the order of the * and / operator, try\nstd::cout << a + (b-a)/(float (n-1)) * i << std::endl;\nThen we could get the right answer. The result of i * (b-a) exceeds the precision of float type.\nIndeed, in pytorch the linspace was implemented as @Ktakuya332C comment:\n\n  \n    \n      pytorch/aten/src/TH/generic/THTensorMath.c\n    \n    \n        Lines 3385 to 3388\n      in\n      43ab911\n    \n    \n    \n    \n\n        \n          \n           TH_TENSOR_APPLY(real, r_, \n        \n\n        \n          \n                   *r__data = a + i*(b-a)/((real)(n-1)); \n        \n\n        \n          \n                   i++; \n        \n\n        \n          \n                 );", "body": "Swap the order of the `*` and `/` operator, try\r\n\r\n```cpp\r\nstd::cout << a + (b-a)/(float (n-1)) * i << std::endl;\r\n```\r\n\r\nThen we could get the right answer. The result of `i * (b-a)` exceeds the precision of `float` type.\r\n\r\nIndeed, in pytorch the `linspace` was implemented as @Ktakuya332C comment:\r\n\r\nhttps://github.com/pytorch/pytorch/blob/43ab91118226b330be6d2274a154b98da233d879/aten/src/TH/generic/THTensorMath.c#L3385-L3388"}