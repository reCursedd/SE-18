{"url": "https://api.github.com/repos/pytorch/pytorch/issues/7144", "repository_url": "https://api.github.com/repos/pytorch/pytorch", "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/7144/labels{/name}", "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/7144/comments", "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/7144/events", "html_url": "https://github.com/pytorch/pytorch/issues/7144", "id": 319283683, "node_id": "MDU6SXNzdWUzMTkyODM2ODM=", "number": 7144, "title": "apply_ fails within test_ceil/_round/_floor", "user": {"login": "cpuhrsch", "id": 1716488, "node_id": "MDQ6VXNlcjE3MTY0ODg=", "avatar_url": "https://avatars1.githubusercontent.com/u/1716488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cpuhrsch", "html_url": "https://github.com/cpuhrsch", "followers_url": "https://api.github.com/users/cpuhrsch/followers", "following_url": "https://api.github.com/users/cpuhrsch/following{/other_user}", "gists_url": "https://api.github.com/users/cpuhrsch/gists{/gist_id}", "starred_url": "https://api.github.com/users/cpuhrsch/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cpuhrsch/subscriptions", "organizations_url": "https://api.github.com/users/cpuhrsch/orgs", "repos_url": "https://api.github.com/users/cpuhrsch/repos", "events_url": "https://api.github.com/users/cpuhrsch/events{/privacy}", "received_events_url": "https://api.github.com/users/cpuhrsch/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-05-01T18:33:10Z", "updated_at": "2018-05-01T18:37:38Z", "closed_at": null, "author_association": "CONTRIBUTOR", "body_html": "<p>Changes:</p>\n<pre><code>diff --git a/test/test_torch.py b/test/test_torch.py\nindex a14c6a9..97d3651 100644\n--- a/test/test_torch.py\n+++ b/test/test_torch.py\n@@ -260,6 +260,8 @@ class TestTorch(TestCase):\n             input = []\n             input.append(list(range(-5, 5)))\n             input.append([x + 1e-6 for x in range(-5, 5)])\n+            input.append([x + 1e10 for x in range(-5, 5)])\n+            input.append([x + 1e30 for x in range(-5, 5)])\n             input.append(torch.randn(10).tolist())\n             input.append((torch.randn(10) + 1e6).tolist())\n             input.append([math.pi * (x / 2) for x in range(-5, 5)])\njenkins@978044efae99:~/workspace$ python test/test_torch.py\n</code></pre>\n<p>Error log</p>\n<pre><code>jenkins@978044efae99:~/workspace$ python test/test_torch.py\n...............s..........................E.........sss.............................s................s.E...........s....................s...........................................s..........ss......s........................s...E............ss........s...............................ss....................s.....ss..ss.\n======================================================================\nERROR: test_ceil (__main__.TestTorch)\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"test/test_torch.py\", line 493, in test_ceil\n    self._test_math_by_name('ceil')\n  File \"test/test_torch.py\", line 340, in _test_math_by_name\n    self.__test_math_by_name(function_name + \"_\", function_name, True)\n  File \"test/test_torch.py\", line 336, in __test_math_by_name\n    self._test_math(torchfn, mathfn)\n  File \"test/test_torch.py\", line 276, in _test_math\n    compare_reference(input, torch.double)\n  File \"test/test_torch.py\", line 272, in compare_reference\n    res2 = input.clone().apply_(lambda x: mathfn(x))\nRuntimeError: Overflow when unpacking double\n\n======================================================================\nERROR: test_floor (__main__.TestTorch)\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"test/test_torch.py\", line 490, in test_floor\n    self._test_math_by_name('floor')\n  File \"test/test_torch.py\", line 340, in _test_math_by_name\n    self.__test_math_by_name(function_name + \"_\", function_name, True)\n  File \"test/test_torch.py\", line 336, in __test_math_by_name\n    self._test_math(torchfn, mathfn)\n  File \"test/test_torch.py\", line 276, in _test_math\n    compare_reference(input, torch.double)\n  File \"test/test_torch.py\", line 272, in compare_reference\n    res2 = input.clone().apply_(lambda x: mathfn(x))\nRuntimeError: Overflow when unpacking double\n\n======================================================================\nERROR: test_round (__main__.TestTorch)\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"test/test_torch.py\", line 524, in test_round\n    self._test_math(torch.round, round)\n  File \"test/test_torch.py\", line 276, in _test_math\n    compare_reference(input, torch.double)\n  File \"test/test_torch.py\", line 272, in compare_reference\n    res2 = input.clone().apply_(lambda x: mathfn(x))\nRuntimeError: Overflow when unpacking double\n\n----------------------------------------------------------------------\nRan 318 tests in 40.219s\n\nFAILED (errors=3, skipped=23)\n</code></pre>\n<p>On <code>pytorch-linux-trusty-py3.6-gcc5.4</code></p>\n<p>Debugging shows this errors appears within <a href=\"https://github.com/pytorch/pytorch/blob/30ec06c140b0428d591e2f5007bc8046d1bdf7c4/torch/csrc/utils/tensor_apply.cpp#L30\">recursive apply</a> if the values is 1e30. I'm not able to reproduce this within the environment of my dev machine.</p>", "body_text": "Changes:\ndiff --git a/test/test_torch.py b/test/test_torch.py\nindex a14c6a9..97d3651 100644\n--- a/test/test_torch.py\n+++ b/test/test_torch.py\n@@ -260,6 +260,8 @@ class TestTorch(TestCase):\n             input = []\n             input.append(list(range(-5, 5)))\n             input.append([x + 1e-6 for x in range(-5, 5)])\n+            input.append([x + 1e10 for x in range(-5, 5)])\n+            input.append([x + 1e30 for x in range(-5, 5)])\n             input.append(torch.randn(10).tolist())\n             input.append((torch.randn(10) + 1e6).tolist())\n             input.append([math.pi * (x / 2) for x in range(-5, 5)])\njenkins@978044efae99:~/workspace$ python test/test_torch.py\n\nError log\njenkins@978044efae99:~/workspace$ python test/test_torch.py\n...............s..........................E.........sss.............................s................s.E...........s....................s...........................................s..........ss......s........................s...E............ss........s...............................ss....................s.....ss..ss.\n======================================================================\nERROR: test_ceil (__main__.TestTorch)\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"test/test_torch.py\", line 493, in test_ceil\n    self._test_math_by_name('ceil')\n  File \"test/test_torch.py\", line 340, in _test_math_by_name\n    self.__test_math_by_name(function_name + \"_\", function_name, True)\n  File \"test/test_torch.py\", line 336, in __test_math_by_name\n    self._test_math(torchfn, mathfn)\n  File \"test/test_torch.py\", line 276, in _test_math\n    compare_reference(input, torch.double)\n  File \"test/test_torch.py\", line 272, in compare_reference\n    res2 = input.clone().apply_(lambda x: mathfn(x))\nRuntimeError: Overflow when unpacking double\n\n======================================================================\nERROR: test_floor (__main__.TestTorch)\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"test/test_torch.py\", line 490, in test_floor\n    self._test_math_by_name('floor')\n  File \"test/test_torch.py\", line 340, in _test_math_by_name\n    self.__test_math_by_name(function_name + \"_\", function_name, True)\n  File \"test/test_torch.py\", line 336, in __test_math_by_name\n    self._test_math(torchfn, mathfn)\n  File \"test/test_torch.py\", line 276, in _test_math\n    compare_reference(input, torch.double)\n  File \"test/test_torch.py\", line 272, in compare_reference\n    res2 = input.clone().apply_(lambda x: mathfn(x))\nRuntimeError: Overflow when unpacking double\n\n======================================================================\nERROR: test_round (__main__.TestTorch)\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"test/test_torch.py\", line 524, in test_round\n    self._test_math(torch.round, round)\n  File \"test/test_torch.py\", line 276, in _test_math\n    compare_reference(input, torch.double)\n  File \"test/test_torch.py\", line 272, in compare_reference\n    res2 = input.clone().apply_(lambda x: mathfn(x))\nRuntimeError: Overflow when unpacking double\n\n----------------------------------------------------------------------\nRan 318 tests in 40.219s\n\nFAILED (errors=3, skipped=23)\n\nOn pytorch-linux-trusty-py3.6-gcc5.4\nDebugging shows this errors appears within recursive apply if the values is 1e30. I'm not able to reproduce this within the environment of my dev machine.", "body": "Changes:\r\n\r\n```\r\ndiff --git a/test/test_torch.py b/test/test_torch.py\r\nindex a14c6a9..97d3651 100644\r\n--- a/test/test_torch.py\r\n+++ b/test/test_torch.py\r\n@@ -260,6 +260,8 @@ class TestTorch(TestCase):\r\n             input = []\r\n             input.append(list(range(-5, 5)))\r\n             input.append([x + 1e-6 for x in range(-5, 5)])\r\n+            input.append([x + 1e10 for x in range(-5, 5)])\r\n+            input.append([x + 1e30 for x in range(-5, 5)])\r\n             input.append(torch.randn(10).tolist())\r\n             input.append((torch.randn(10) + 1e6).tolist())\r\n             input.append([math.pi * (x / 2) for x in range(-5, 5)])\r\njenkins@978044efae99:~/workspace$ python test/test_torch.py\r\n```\r\n\r\nError log\r\n\r\n```\r\njenkins@978044efae99:~/workspace$ python test/test_torch.py\r\n...............s..........................E.........sss.............................s................s.E...........s....................s...........................................s..........ss......s........................s...E............ss........s...............................ss....................s.....ss..ss.\r\n======================================================================\r\nERROR: test_ceil (__main__.TestTorch)\r\n----------------------------------------------------------------------\r\nTraceback (most recent call last):\r\n  File \"test/test_torch.py\", line 493, in test_ceil\r\n    self._test_math_by_name('ceil')\r\n  File \"test/test_torch.py\", line 340, in _test_math_by_name\r\n    self.__test_math_by_name(function_name + \"_\", function_name, True)\r\n  File \"test/test_torch.py\", line 336, in __test_math_by_name\r\n    self._test_math(torchfn, mathfn)\r\n  File \"test/test_torch.py\", line 276, in _test_math\r\n    compare_reference(input, torch.double)\r\n  File \"test/test_torch.py\", line 272, in compare_reference\r\n    res2 = input.clone().apply_(lambda x: mathfn(x))\r\nRuntimeError: Overflow when unpacking double\r\n\r\n======================================================================\r\nERROR: test_floor (__main__.TestTorch)\r\n----------------------------------------------------------------------\r\nTraceback (most recent call last):\r\n  File \"test/test_torch.py\", line 490, in test_floor\r\n    self._test_math_by_name('floor')\r\n  File \"test/test_torch.py\", line 340, in _test_math_by_name\r\n    self.__test_math_by_name(function_name + \"_\", function_name, True)\r\n  File \"test/test_torch.py\", line 336, in __test_math_by_name\r\n    self._test_math(torchfn, mathfn)\r\n  File \"test/test_torch.py\", line 276, in _test_math\r\n    compare_reference(input, torch.double)\r\n  File \"test/test_torch.py\", line 272, in compare_reference\r\n    res2 = input.clone().apply_(lambda x: mathfn(x))\r\nRuntimeError: Overflow when unpacking double\r\n\r\n======================================================================\r\nERROR: test_round (__main__.TestTorch)\r\n----------------------------------------------------------------------\r\nTraceback (most recent call last):\r\n  File \"test/test_torch.py\", line 524, in test_round\r\n    self._test_math(torch.round, round)\r\n  File \"test/test_torch.py\", line 276, in _test_math\r\n    compare_reference(input, torch.double)\r\n  File \"test/test_torch.py\", line 272, in compare_reference\r\n    res2 = input.clone().apply_(lambda x: mathfn(x))\r\nRuntimeError: Overflow when unpacking double\r\n\r\n----------------------------------------------------------------------\r\nRan 318 tests in 40.219s\r\n\r\nFAILED (errors=3, skipped=23)\r\n```\r\n\r\nOn `pytorch-linux-trusty-py3.6-gcc5.4`\r\n\r\nDebugging shows this errors appears within [recursive apply](https://github.com/pytorch/pytorch/blob/30ec06c140b0428d591e2f5007bc8046d1bdf7c4/torch/csrc/utils/tensor_apply.cpp#L30) if the values is 1e30. I'm not able to reproduce this within the environment of my dev machine.\r\n\r\n"}