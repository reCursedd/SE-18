{"url": "https://api.github.com/repos/pytorch/pytorch/issues/comments/435356538", "html_url": "https://github.com/pytorch/pytorch/issues/13491#issuecomment-435356538", "issue_url": "https://api.github.com/repos/pytorch/pytorch/issues/13491", "id": 435356538, "node_id": "MDEyOklzc3VlQ29tbWVudDQzNTM1NjUzOA==", "user": {"login": "stefanwebb", "id": 4926302, "node_id": "MDQ6VXNlcjQ5MjYzMDI=", "avatar_url": "https://avatars3.githubusercontent.com/u/4926302?v=4", "gravatar_id": "", "url": "https://api.github.com/users/stefanwebb", "html_url": "https://github.com/stefanwebb", "followers_url": "https://api.github.com/users/stefanwebb/followers", "following_url": "https://api.github.com/users/stefanwebb/following{/other_user}", "gists_url": "https://api.github.com/users/stefanwebb/gists{/gist_id}", "starred_url": "https://api.github.com/users/stefanwebb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/stefanwebb/subscriptions", "organizations_url": "https://api.github.com/users/stefanwebb/orgs", "repos_url": "https://api.github.com/users/stefanwebb/repos", "events_url": "https://api.github.com/users/stefanwebb/events{/privacy}", "received_events_url": "https://api.github.com/users/stefanwebb/received_events", "type": "User", "site_admin": false}, "created_at": "2018-11-02T12:00:24Z", "updated_at": "2018-11-02T12:00:24Z", "author_association": "NONE", "body_html": "<p>I was intending to contribute some general ODE solvers first, which are more widely applicable than to Neural ODEs. Would that be better suited for the <code>contrib</code> repo? It's not so much implementing a specific deep learning paper</p>\n<p>However, I would like to understand the paper more fully and write an implementation of neural ODEs after that...</p>\n<p>I think in general it would be good to have basic numerical algorithms in PyTorch so you can get the GPU speedup! And some like numerical differentiation would be useful for testing PyTorch components</p>", "body_text": "I was intending to contribute some general ODE solvers first, which are more widely applicable than to Neural ODEs. Would that be better suited for the contrib repo? It's not so much implementing a specific deep learning paper\nHowever, I would like to understand the paper more fully and write an implementation of neural ODEs after that...\nI think in general it would be good to have basic numerical algorithms in PyTorch so you can get the GPU speedup! And some like numerical differentiation would be useful for testing PyTorch components", "body": "I was intending to contribute some general ODE solvers first, which are more widely applicable than to Neural ODEs. Would that be better suited for the `contrib` repo? It's not so much implementing a specific deep learning paper\r\n\r\nHowever, I would like to understand the paper more fully and write an implementation of neural ODEs after that...\r\n\r\nI think in general it would be good to have basic numerical algorithms in PyTorch so you can get the GPU speedup! And some like numerical differentiation would be useful for testing PyTorch components"}