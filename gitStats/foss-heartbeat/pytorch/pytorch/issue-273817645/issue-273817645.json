{"url": "https://api.github.com/repos/pytorch/pytorch/issues/3694", "repository_url": "https://api.github.com/repos/pytorch/pytorch", "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/3694/labels{/name}", "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/3694/comments", "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/3694/events", "html_url": "https://github.com/pytorch/pytorch/issues/3694", "id": 273817645, "node_id": "MDU6SXNzdWUyNzM4MTc2NDU=", "number": 3694, "title": "Load() resets file offset unconditionally", "user": {"login": "plang85", "id": 8244975, "node_id": "MDQ6VXNlcjgyNDQ5NzU=", "avatar_url": "https://avatars2.githubusercontent.com/u/8244975?v=4", "gravatar_id": "", "url": "https://api.github.com/users/plang85", "html_url": "https://github.com/plang85", "followers_url": "https://api.github.com/users/plang85/followers", "following_url": "https://api.github.com/users/plang85/following{/other_user}", "gists_url": "https://api.github.com/users/plang85/gists{/gist_id}", "starred_url": "https://api.github.com/users/plang85/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/plang85/subscriptions", "organizations_url": "https://api.github.com/users/plang85/orgs", "repos_url": "https://api.github.com/users/plang85/repos", "events_url": "https://api.github.com/users/plang85/events{/privacy}", "received_events_url": "https://api.github.com/users/plang85/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2017-11-14T14:46:10Z", "updated_at": "2017-11-18T19:24:41Z", "closed_at": "2017-11-18T19:24:41Z", "author_association": "CONTRIBUTOR", "body_html": "<p>As opposed to torch.save() and the pickle api, load() resets the position pointer of the file to zero. This keeps the following from workgin</p>\n<pre><code>import tempfile\nimport torch\nimport pickle\n\na = torch.zeros(2, 2)\nwith tempfile.TemporaryFile(mode='w+b') as tmp:            \n    i = 41\n    pickle.dump(i, tmp)\n    torch.save(a, tmp)\n    tmp.seek(0)\n    j = pickle.load(tmp)\n    b = torch.load(tmp)\n</code></pre>", "body_text": "As opposed to torch.save() and the pickle api, load() resets the position pointer of the file to zero. This keeps the following from workgin\nimport tempfile\nimport torch\nimport pickle\n\na = torch.zeros(2, 2)\nwith tempfile.TemporaryFile(mode='w+b') as tmp:            \n    i = 41\n    pickle.dump(i, tmp)\n    torch.save(a, tmp)\n    tmp.seek(0)\n    j = pickle.load(tmp)\n    b = torch.load(tmp)", "body": "As opposed to torch.save() and the pickle api, load() resets the position pointer of the file to zero. This keeps the following from workgin\r\n```\r\nimport tempfile\r\nimport torch\r\nimport pickle\r\n\r\na = torch.zeros(2, 2)\r\nwith tempfile.TemporaryFile(mode='w+b') as tmp:            \r\n    i = 41\r\n    pickle.dump(i, tmp)\r\n    torch.save(a, tmp)\r\n    tmp.seek(0)\r\n    j = pickle.load(tmp)\r\n    b = torch.load(tmp)\r\n```"}