{"url": "https://api.github.com/repos/pytorch/pytorch/issues/13881", "repository_url": "https://api.github.com/repos/pytorch/pytorch", "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/13881/labels{/name}", "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/13881/comments", "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/13881/events", "html_url": "https://github.com/pytorch/pytorch/issues/13881", "id": 380037473, "node_id": "MDU6SXNzdWUzODAwMzc0NzM=", "number": 13881, "title": "[Caffe2] Android build broken clog - undefined reference to clog_vlog_*", "user": {"login": "AliShug", "id": 2565487, "node_id": "MDQ6VXNlcjI1NjU0ODc=", "avatar_url": "https://avatars2.githubusercontent.com/u/2565487?v=4", "gravatar_id": "", "url": "https://api.github.com/users/AliShug", "html_url": "https://github.com/AliShug", "followers_url": "https://api.github.com/users/AliShug/followers", "following_url": "https://api.github.com/users/AliShug/following{/other_user}", "gists_url": "https://api.github.com/users/AliShug/gists{/gist_id}", "starred_url": "https://api.github.com/users/AliShug/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/AliShug/subscriptions", "organizations_url": "https://api.github.com/users/AliShug/orgs", "repos_url": "https://api.github.com/users/AliShug/repos", "events_url": "https://api.github.com/users/AliShug/events{/privacy}", "received_events_url": "https://api.github.com/users/AliShug/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-11-13T02:59:39Z", "updated_at": "2018-11-13T03:51:06Z", "closed_at": "2018-11-13T03:51:06Z", "author_association": "NONE", "body_html": "<h2><g-emoji class=\"g-emoji\" alias=\"bug\" fallback-src=\"https://assets-cdn.github.com/images/icons/emoji/unicode/1f41b.png\">\ud83d\udc1b</g-emoji> Bug</h2>\n<p>The android build of either <code>libclog.a</code> or <code>libcpuinfo.a</code> seems to be broken somehow. Linking errors for the <code>clog_*</code> functions appear despite the generated <code>libclog.a</code> being linked in my Android project's CMakeLists.</p>\n<h2>To Reproduce</h2>\n<p>Steps to reproduce the behavior:</p>\n<ol>\n<li>Build Caffe2 for Android <code>./scripts/build_android.sh -DANDROID_ABI=arm64-v8a -DANDROID_TOOLCHAIN=clang</code></li>\n<li>Create an empty Android Studio project with C++ support. In this project:\n<ol>\n<li>Add built libs under app/libs</li>\n<li>Add includes under app/libs/include with built <code>*.pb.h</code> and <code>macros.h</code></li>\n<li>Change <code>CMakeLists.txt</code> and <code>native-lib.cpp</code> to <a href=\"https://gist.github.com/AliShug/f29e1918eb6859904db84ee4f4890f62\">match this Gist</a></li>\n<li>Build the Android project for an arm64-v8a target</li>\n</ol>\n</li>\n</ol>\n<p>Error:</p>\n<pre><code>Build command failed.\nError while executing process D:\\Dev\\Android\\SDK\\cmake\\3.6.4111459\\bin\\cmake.exe with arguments {--build D:\\Documents\\AndroidStudioProjects\\Caffe2Test\\app\\.externalNativeBuild\\cmake\\debug\\arm64-v8a --target native-lib}\n[1/4] Building C object CMakeFiles/cpufeatures.dir/D_/Dev/Android/Sdk/ndk-bundle/sources/android/cpufeatures/cpu-features.c.o\n[2/4] Linking C static library libcpufeatures.a\n[3/4] Building CXX object CMakeFiles/native-lib.dir/src/main/cpp/native-lib.cpp.o\n[4/4] Linking CXX shared library ..\\..\\..\\..\\build\\intermediates\\cmake\\debug\\obj\\arm64-v8a\\libnative-lib.so\nFAILED: cmd.exe /C \"cd . &amp;&amp; D:\\Dev\\Android\\Sdk\\ndk-bundle\\toolchains\\llvm\\prebuilt\\windows-x86_64\\bin\\clang++.exe  --target=aarch64-none-linux-android26 --gcc-toolchain=D:/Dev/Android/Sdk/ndk-bundle/toolchains/aarch64-linux-android-4.9/prebuilt/windows-x86_64 --sysroot=D:/Dev/Android/Sdk/ndk-bundle/sysroot -fPIC -isystem D:/Dev/Android/Sdk/ndk-bundle/sysroot/usr/include/aarch64-linux-android -g -DANDROID -ffunction-sections -funwind-tables -fstack-protector-strong -no-canonical-prefixes -Wa,--noexecstack -Wformat -Werror=format-security -std=c++11 -std=c++11 -fexceptions -O0 -fno-limit-debug-info  -Wl,--exclude-libs,libgcc.a -Wl,--exclude-libs,libatomic.a -nostdlib++ --sysroot D:/Dev/Android/Sdk/ndk-bundle/platforms/android-26/arch-arm64 -Wl,--build-id -Wl,--warn-shared-textrel -Wl,--fatal-warnings -LD:/Dev/Android/Sdk/ndk-bundle/sources/cxx-stl/llvm-libc++/libs/arm64-v8a -Wl,--no-undefined -Wl,-z,noexecstack -Qunused-arguments -Wl,-z,relro -Wl,-z,now -shared -Wl,-soname,libnative-lib.so -o ..\\..\\..\\..\\build\\intermediates\\cmake\\debug\\obj\\arm64-v8a\\libnative-lib.so CMakeFiles/native-lib.dir/src/main/cpp/native-lib.cpp.o  ../../../../libs/libclog.a ../../../../libs/libcaffe2.a ../../../../libs/libcaffe2_protos.a ../../../../libs/libc10.a ../../../../libs/libnnpack.a ../../../../libs/libpthreadpool.a ../../../../libs/libcpuinfo.a ../../../../libs/libprotobuf.a libcpufeatures.a -llog -landroid -ldl -latomic -lm \"D:/Dev/Android/Sdk/ndk-bundle/sources/cxx-stl/llvm-libc++/libs/arm64-v8a/libc++_static.a\" \"D:/Dev/Android/Sdk/ndk-bundle/sources/cxx-stl/llvm-libc++/libs/arm64-v8a/libc++abi.a\" &amp;&amp; cd .\"\n../../../../libs/libcpuinfo.a(api.c.o): In function `cpuinfo_log_fatal':\n/home/ali/Dev/pytorch/third_party/cpuinfo/src/log.h:17: undefined reference to `clog_vlog_fatal'\n../../../../libs/libcpuinfo.a(init.c.o): In function `cpuinfo_log_error':\n/home/ali/Dev/pytorch/third_party/cpuinfo/src/log.h:16: undefined reference to `clog_vlog_error'\n../../../../libs/libcpuinfo.a(chipset.c.o): In function `cpuinfo_log_error':\n/home/ali/Dev/pytorch/third_party/cpuinfo/src/log.h:16: undefined reference to `clog_vlog_error'\n../../../../libs/libcpuinfo.a(current.c.o): In function `cpuinfo_log_fatal':\n/home/ali/Dev/pytorch/third_party/cpuinfo/src/log.h:17: undefined reference to `clog_vlog_fatal'\n../../../../libs/libcpuinfo.a(processors.c.o): In function `cpuinfo_log_error':\n/home/ali/Dev/pytorch/third_party/cpuinfo/src/log.h:16: undefined reference to `clog_vlog_error'\n../../../../libs/libcpuinfo.a(smallfile.c.o): In function `cpuinfo_log_error':\n/home/ali/Dev/pytorch/third_party/cpuinfo/src/log.h:16: undefined reference to `clog_vlog_error'\nclang++.exe: error: linker command failed with exit code 1 (use -v to see invocation)\nninja: build stopped: subcommand failed.\n</code></pre>\n<p>You can see above that <code>libclog.a</code> is included in the command which fails.</p>\n<h2>Expected behavior</h2>\n<p>Successful linking</p>\n<h2>Environment</h2>\n<ul>\n<li>PyTorch Version (e.g., 1.0): master @6093f294094ad68970ad88d7fbd673a3b7f1908d</li>\n<li>OS: Ubuntu 18.04.1 / Windows 10</li>\n<li>How you installed PyTorch (<code>conda</code>, <code>pip</code>, source): source</li>\n<li>Build command you used (if compiling from source): <code>./scripts/build_android.sh -DANDROID_ABI=arm64-v8a -DANDROID_TOOLCHAIN=clang</code> on Ubuntu</li>\n<li>Python version: NA</li>\n<li>CUDA/cuDNN version: NA</li>\n<li>GPU models and configuration: NA</li>\n<li>Any other relevant information: Android Studio 3.2.1, NDK 18.1.5063045</li>\n</ul>\n<h2>Other</h2>\n<p>I've tried changing the visibility of the functions in clog, with no effect. The symbols are definitely in the lib, as <code>nm build_android/lib/libclog.a</code> shows them all (with <code>T</code>). Is there a way to get cpuinfo compiled with clog linked statically into it to begin with?</p>\n<p>Complication - I built Caffe2 on Ubuntu 18.04.1, but I'm building my Android project on Windows 10. Other libraries in the build, including <code>libcpuinfo.a</code> seem to have linked OK; I've been fixing unresolved reference errors as they've come up by adding the corresponding libraries, as it's not otherwise clear which libraries to link. <strong>Edit:</strong> I've found the same failure occurs linking with Ubuntu/Android Studio.</p>", "body_text": "\ud83d\udc1b Bug\nThe android build of either libclog.a or libcpuinfo.a seems to be broken somehow. Linking errors for the clog_* functions appear despite the generated libclog.a being linked in my Android project's CMakeLists.\nTo Reproduce\nSteps to reproduce the behavior:\n\nBuild Caffe2 for Android ./scripts/build_android.sh -DANDROID_ABI=arm64-v8a -DANDROID_TOOLCHAIN=clang\nCreate an empty Android Studio project with C++ support. In this project:\n\nAdd built libs under app/libs\nAdd includes under app/libs/include with built *.pb.h and macros.h\nChange CMakeLists.txt and native-lib.cpp to match this Gist\nBuild the Android project for an arm64-v8a target\n\n\n\nError:\nBuild command failed.\nError while executing process D:\\Dev\\Android\\SDK\\cmake\\3.6.4111459\\bin\\cmake.exe with arguments {--build D:\\Documents\\AndroidStudioProjects\\Caffe2Test\\app\\.externalNativeBuild\\cmake\\debug\\arm64-v8a --target native-lib}\n[1/4] Building C object CMakeFiles/cpufeatures.dir/D_/Dev/Android/Sdk/ndk-bundle/sources/android/cpufeatures/cpu-features.c.o\n[2/4] Linking C static library libcpufeatures.a\n[3/4] Building CXX object CMakeFiles/native-lib.dir/src/main/cpp/native-lib.cpp.o\n[4/4] Linking CXX shared library ..\\..\\..\\..\\build\\intermediates\\cmake\\debug\\obj\\arm64-v8a\\libnative-lib.so\nFAILED: cmd.exe /C \"cd . && D:\\Dev\\Android\\Sdk\\ndk-bundle\\toolchains\\llvm\\prebuilt\\windows-x86_64\\bin\\clang++.exe  --target=aarch64-none-linux-android26 --gcc-toolchain=D:/Dev/Android/Sdk/ndk-bundle/toolchains/aarch64-linux-android-4.9/prebuilt/windows-x86_64 --sysroot=D:/Dev/Android/Sdk/ndk-bundle/sysroot -fPIC -isystem D:/Dev/Android/Sdk/ndk-bundle/sysroot/usr/include/aarch64-linux-android -g -DANDROID -ffunction-sections -funwind-tables -fstack-protector-strong -no-canonical-prefixes -Wa,--noexecstack -Wformat -Werror=format-security -std=c++11 -std=c++11 -fexceptions -O0 -fno-limit-debug-info  -Wl,--exclude-libs,libgcc.a -Wl,--exclude-libs,libatomic.a -nostdlib++ --sysroot D:/Dev/Android/Sdk/ndk-bundle/platforms/android-26/arch-arm64 -Wl,--build-id -Wl,--warn-shared-textrel -Wl,--fatal-warnings -LD:/Dev/Android/Sdk/ndk-bundle/sources/cxx-stl/llvm-libc++/libs/arm64-v8a -Wl,--no-undefined -Wl,-z,noexecstack -Qunused-arguments -Wl,-z,relro -Wl,-z,now -shared -Wl,-soname,libnative-lib.so -o ..\\..\\..\\..\\build\\intermediates\\cmake\\debug\\obj\\arm64-v8a\\libnative-lib.so CMakeFiles/native-lib.dir/src/main/cpp/native-lib.cpp.o  ../../../../libs/libclog.a ../../../../libs/libcaffe2.a ../../../../libs/libcaffe2_protos.a ../../../../libs/libc10.a ../../../../libs/libnnpack.a ../../../../libs/libpthreadpool.a ../../../../libs/libcpuinfo.a ../../../../libs/libprotobuf.a libcpufeatures.a -llog -landroid -ldl -latomic -lm \"D:/Dev/Android/Sdk/ndk-bundle/sources/cxx-stl/llvm-libc++/libs/arm64-v8a/libc++_static.a\" \"D:/Dev/Android/Sdk/ndk-bundle/sources/cxx-stl/llvm-libc++/libs/arm64-v8a/libc++abi.a\" && cd .\"\n../../../../libs/libcpuinfo.a(api.c.o): In function `cpuinfo_log_fatal':\n/home/ali/Dev/pytorch/third_party/cpuinfo/src/log.h:17: undefined reference to `clog_vlog_fatal'\n../../../../libs/libcpuinfo.a(init.c.o): In function `cpuinfo_log_error':\n/home/ali/Dev/pytorch/third_party/cpuinfo/src/log.h:16: undefined reference to `clog_vlog_error'\n../../../../libs/libcpuinfo.a(chipset.c.o): In function `cpuinfo_log_error':\n/home/ali/Dev/pytorch/third_party/cpuinfo/src/log.h:16: undefined reference to `clog_vlog_error'\n../../../../libs/libcpuinfo.a(current.c.o): In function `cpuinfo_log_fatal':\n/home/ali/Dev/pytorch/third_party/cpuinfo/src/log.h:17: undefined reference to `clog_vlog_fatal'\n../../../../libs/libcpuinfo.a(processors.c.o): In function `cpuinfo_log_error':\n/home/ali/Dev/pytorch/third_party/cpuinfo/src/log.h:16: undefined reference to `clog_vlog_error'\n../../../../libs/libcpuinfo.a(smallfile.c.o): In function `cpuinfo_log_error':\n/home/ali/Dev/pytorch/third_party/cpuinfo/src/log.h:16: undefined reference to `clog_vlog_error'\nclang++.exe: error: linker command failed with exit code 1 (use -v to see invocation)\nninja: build stopped: subcommand failed.\n\nYou can see above that libclog.a is included in the command which fails.\nExpected behavior\nSuccessful linking\nEnvironment\n\nPyTorch Version (e.g., 1.0): master @6093f294094ad68970ad88d7fbd673a3b7f1908d\nOS: Ubuntu 18.04.1 / Windows 10\nHow you installed PyTorch (conda, pip, source): source\nBuild command you used (if compiling from source): ./scripts/build_android.sh -DANDROID_ABI=arm64-v8a -DANDROID_TOOLCHAIN=clang on Ubuntu\nPython version: NA\nCUDA/cuDNN version: NA\nGPU models and configuration: NA\nAny other relevant information: Android Studio 3.2.1, NDK 18.1.5063045\n\nOther\nI've tried changing the visibility of the functions in clog, with no effect. The symbols are definitely in the lib, as nm build_android/lib/libclog.a shows them all (with T). Is there a way to get cpuinfo compiled with clog linked statically into it to begin with?\nComplication - I built Caffe2 on Ubuntu 18.04.1, but I'm building my Android project on Windows 10. Other libraries in the build, including libcpuinfo.a seem to have linked OK; I've been fixing unresolved reference errors as they've come up by adding the corresponding libraries, as it's not otherwise clear which libraries to link. Edit: I've found the same failure occurs linking with Ubuntu/Android Studio.", "body": "## \ud83d\udc1b Bug\r\n\r\nThe android build of either `libclog.a` or `libcpuinfo.a` seems to be broken somehow. Linking errors for the `clog_*` functions appear despite the generated `libclog.a` being linked in my Android project's CMakeLists.\r\n\r\n## To Reproduce\r\n\r\nSteps to reproduce the behavior:\r\n\r\n1. Build Caffe2 for Android `./scripts/build_android.sh -DANDROID_ABI=arm64-v8a -DANDROID_TOOLCHAIN=clang`\r\n1. Create an empty Android Studio project with C++ support. In this project:\r\n    1. Add built libs under app/libs\r\n    1. Add includes under app/libs/include with built `*.pb.h` and `macros.h`\r\n    1. Change `CMakeLists.txt` and `native-lib.cpp` to [match this Gist](https://gist.github.com/AliShug/f29e1918eb6859904db84ee4f4890f62)\r\n    1. Build the Android project for an arm64-v8a target\r\n\r\nError:\r\n```\r\nBuild command failed.\r\nError while executing process D:\\Dev\\Android\\SDK\\cmake\\3.6.4111459\\bin\\cmake.exe with arguments {--build D:\\Documents\\AndroidStudioProjects\\Caffe2Test\\app\\.externalNativeBuild\\cmake\\debug\\arm64-v8a --target native-lib}\r\n[1/4] Building C object CMakeFiles/cpufeatures.dir/D_/Dev/Android/Sdk/ndk-bundle/sources/android/cpufeatures/cpu-features.c.o\r\n[2/4] Linking C static library libcpufeatures.a\r\n[3/4] Building CXX object CMakeFiles/native-lib.dir/src/main/cpp/native-lib.cpp.o\r\n[4/4] Linking CXX shared library ..\\..\\..\\..\\build\\intermediates\\cmake\\debug\\obj\\arm64-v8a\\libnative-lib.so\r\nFAILED: cmd.exe /C \"cd . && D:\\Dev\\Android\\Sdk\\ndk-bundle\\toolchains\\llvm\\prebuilt\\windows-x86_64\\bin\\clang++.exe  --target=aarch64-none-linux-android26 --gcc-toolchain=D:/Dev/Android/Sdk/ndk-bundle/toolchains/aarch64-linux-android-4.9/prebuilt/windows-x86_64 --sysroot=D:/Dev/Android/Sdk/ndk-bundle/sysroot -fPIC -isystem D:/Dev/Android/Sdk/ndk-bundle/sysroot/usr/include/aarch64-linux-android -g -DANDROID -ffunction-sections -funwind-tables -fstack-protector-strong -no-canonical-prefixes -Wa,--noexecstack -Wformat -Werror=format-security -std=c++11 -std=c++11 -fexceptions -O0 -fno-limit-debug-info  -Wl,--exclude-libs,libgcc.a -Wl,--exclude-libs,libatomic.a -nostdlib++ --sysroot D:/Dev/Android/Sdk/ndk-bundle/platforms/android-26/arch-arm64 -Wl,--build-id -Wl,--warn-shared-textrel -Wl,--fatal-warnings -LD:/Dev/Android/Sdk/ndk-bundle/sources/cxx-stl/llvm-libc++/libs/arm64-v8a -Wl,--no-undefined -Wl,-z,noexecstack -Qunused-arguments -Wl,-z,relro -Wl,-z,now -shared -Wl,-soname,libnative-lib.so -o ..\\..\\..\\..\\build\\intermediates\\cmake\\debug\\obj\\arm64-v8a\\libnative-lib.so CMakeFiles/native-lib.dir/src/main/cpp/native-lib.cpp.o  ../../../../libs/libclog.a ../../../../libs/libcaffe2.a ../../../../libs/libcaffe2_protos.a ../../../../libs/libc10.a ../../../../libs/libnnpack.a ../../../../libs/libpthreadpool.a ../../../../libs/libcpuinfo.a ../../../../libs/libprotobuf.a libcpufeatures.a -llog -landroid -ldl -latomic -lm \"D:/Dev/Android/Sdk/ndk-bundle/sources/cxx-stl/llvm-libc++/libs/arm64-v8a/libc++_static.a\" \"D:/Dev/Android/Sdk/ndk-bundle/sources/cxx-stl/llvm-libc++/libs/arm64-v8a/libc++abi.a\" && cd .\"\r\n../../../../libs/libcpuinfo.a(api.c.o): In function `cpuinfo_log_fatal':\r\n/home/ali/Dev/pytorch/third_party/cpuinfo/src/log.h:17: undefined reference to `clog_vlog_fatal'\r\n../../../../libs/libcpuinfo.a(init.c.o): In function `cpuinfo_log_error':\r\n/home/ali/Dev/pytorch/third_party/cpuinfo/src/log.h:16: undefined reference to `clog_vlog_error'\r\n../../../../libs/libcpuinfo.a(chipset.c.o): In function `cpuinfo_log_error':\r\n/home/ali/Dev/pytorch/third_party/cpuinfo/src/log.h:16: undefined reference to `clog_vlog_error'\r\n../../../../libs/libcpuinfo.a(current.c.o): In function `cpuinfo_log_fatal':\r\n/home/ali/Dev/pytorch/third_party/cpuinfo/src/log.h:17: undefined reference to `clog_vlog_fatal'\r\n../../../../libs/libcpuinfo.a(processors.c.o): In function `cpuinfo_log_error':\r\n/home/ali/Dev/pytorch/third_party/cpuinfo/src/log.h:16: undefined reference to `clog_vlog_error'\r\n../../../../libs/libcpuinfo.a(smallfile.c.o): In function `cpuinfo_log_error':\r\n/home/ali/Dev/pytorch/third_party/cpuinfo/src/log.h:16: undefined reference to `clog_vlog_error'\r\nclang++.exe: error: linker command failed with exit code 1 (use -v to see invocation)\r\nninja: build stopped: subcommand failed.\r\n```\r\n\r\nYou can see above that `libclog.a` is included in the command which fails.\r\n\r\n## Expected behavior\r\n\r\nSuccessful linking\r\n\r\n## Environment\r\n\r\n - PyTorch Version (e.g., 1.0): master @6093f294094ad68970ad88d7fbd673a3b7f1908d\r\n - OS: Ubuntu 18.04.1 / Windows 10\r\n - How you installed PyTorch (`conda`, `pip`, source): source\r\n - Build command you used (if compiling from source): `./scripts/build_android.sh -DANDROID_ABI=arm64-v8a -DANDROID_TOOLCHAIN=clang` on Ubuntu\r\n - Python version: NA\r\n - CUDA/cuDNN version: NA\r\n - GPU models and configuration: NA\r\n - Any other relevant information: Android Studio 3.2.1, NDK 18.1.5063045\r\n\r\n## Other\r\n\r\nI've tried changing the visibility of the functions in clog, with no effect. The symbols are definitely in the lib, as `nm build_android/lib/libclog.a` shows them all (with `T`). Is there a way to get cpuinfo compiled with clog linked statically into it to begin with?\r\n\r\nComplication - I built Caffe2 on Ubuntu 18.04.1, but I'm building my Android project on Windows 10. Other libraries in the build, including `libcpuinfo.a` seem to have linked OK; I've been fixing unresolved reference errors as they've come up by adding the corresponding libraries, as it's not otherwise clear which libraries to link. **Edit:** I've found the same failure occurs linking with Ubuntu/Android Studio."}