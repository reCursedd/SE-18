{"url": "https://api.github.com/repos/pytorch/pytorch/issues/comments/373529055", "html_url": "https://github.com/pytorch/pytorch/pull/5792#issuecomment-373529055", "issue_url": "https://api.github.com/repos/pytorch/pytorch/issues/5792", "id": 373529055, "node_id": "MDEyOklzc3VlQ29tbWVudDM3MzUyOTA1NQ==", "user": {"login": "colesbury", "id": 655866, "node_id": "MDQ6VXNlcjY1NTg2Ng==", "avatar_url": "https://avatars1.githubusercontent.com/u/655866?v=4", "gravatar_id": "", "url": "https://api.github.com/users/colesbury", "html_url": "https://github.com/colesbury", "followers_url": "https://api.github.com/users/colesbury/followers", "following_url": "https://api.github.com/users/colesbury/following{/other_user}", "gists_url": "https://api.github.com/users/colesbury/gists{/gist_id}", "starred_url": "https://api.github.com/users/colesbury/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/colesbury/subscriptions", "organizations_url": "https://api.github.com/users/colesbury/orgs", "repos_url": "https://api.github.com/users/colesbury/repos", "events_url": "https://api.github.com/users/colesbury/events{/privacy}", "received_events_url": "https://api.github.com/users/colesbury/received_events", "type": "User", "site_admin": false}, "created_at": "2018-03-15T21:29:46Z", "updated_at": "2018-03-15T21:29:46Z", "author_association": "MEMBER", "body_html": "<p>These are only intended to be used by onnx, right? Perhaps torch/onnx/utils.py</p>\n<p>For <code>size_as_tensor</code>, do you want to construct a LongTensor? <code>torch.Tensor()</code> constructs the default type which may be float, double, half and cpu or GPU.</p>\n<p>What is <code>_resize_from_tensor</code> supposed to do? The expression <code>torch.Size(size())</code> looked a bit strange: is <code>size</code> a function? If size is a tensor you can use <code>tensor.reshape(size.tolist())</code> and avoid using the deprecated <code>Resize.apply(...)</code></p>", "body_text": "These are only intended to be used by onnx, right? Perhaps torch/onnx/utils.py\nFor size_as_tensor, do you want to construct a LongTensor? torch.Tensor() constructs the default type which may be float, double, half and cpu or GPU.\nWhat is _resize_from_tensor supposed to do? The expression torch.Size(size()) looked a bit strange: is size a function? If size is a tensor you can use tensor.reshape(size.tolist()) and avoid using the deprecated Resize.apply(...)", "body": "These are only intended to be used by onnx, right? Perhaps torch/onnx/utils.py\r\n\r\nFor `size_as_tensor`, do you want to construct a LongTensor? `torch.Tensor()` constructs the default type which may be float, double, half and cpu or GPU.\r\n\r\nWhat is `_resize_from_tensor` supposed to do? The expression `torch.Size(size())` looked a bit strange: is `size` a function? If size is a tensor you can use `tensor.reshape(size.tolist())` and avoid using the deprecated `Resize.apply(...)`\r\n"}