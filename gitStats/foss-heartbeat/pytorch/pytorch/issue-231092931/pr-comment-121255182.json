{"url": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/121255182", "pull_request_review_id": 43295648, "id": 121255182, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEyMTI1NTE4Mg==", "diff_hunk": "@@ -328,11 +357,19 @@ auto ConvBackward::apply(const variable_list& grad_outputs) -> variable_list {\n     }\n   }\n \n+  // Add saved variables used out of the pure autograd to inputs\n+  variable_list all_inputs(grad_outputs);\n+  all_inputs.push_back(input_.unpack());\n+  all_inputs.push_back(weight_.unpack());\n+\n   auto outputs =  as_tensor_list(std::move(grad_input),\n                                  std::move(grad_weight),\n                                  std::move(grad_bias));\n-  return wrap_outputs(grad_outputs, std::move(outputs), [&](FunctionFlags f) {\n-    return std::make_shared<Error>(\"ConvBackward is not differentiable\", std::move(f));\n+  return wrap_outputs(all_inputs, std::move(outputs), [&](FunctionFlags f) {\n+    return std::make_shared<ConvBackwardBackward>(\n+      f, *this,\n+      input_.unpack()->save(this), weight_.unpack()->save(this),", "path": "torch/csrc/autograd/functions/convolution.cpp", "position": null, "original_position": 113, "commit_id": "e3cc7c83dc86803042b934d3c1863a7af1640a8d", "original_commit_id": "c2c9e3dc9d63ca19b940adca1ffe6fc6c04dbfba", "user": {"login": "apaszke", "id": 4583066, "node_id": "MDQ6VXNlcjQ1ODMwNjY=", "avatar_url": "https://avatars3.githubusercontent.com/u/4583066?v=4", "gravatar_id": "", "url": "https://api.github.com/users/apaszke", "html_url": "https://github.com/apaszke", "followers_url": "https://api.github.com/users/apaszke/followers", "following_url": "https://api.github.com/users/apaszke/following{/other_user}", "gists_url": "https://api.github.com/users/apaszke/gists{/gist_id}", "starred_url": "https://api.github.com/users/apaszke/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/apaszke/subscriptions", "organizations_url": "https://api.github.com/users/apaszke/orgs", "repos_url": "https://api.github.com/users/apaszke/repos", "events_url": "https://api.github.com/users/apaszke/events{/privacy}", "received_events_url": "https://api.github.com/users/apaszke/received_events", "type": "User", "site_admin": false}, "body": "Unpacking does a bunch of checks and it's best to do it only once. You can change the beginning of the function to use `unpack()` to get a Variable, and extract its data from the member. Then, reuse the unpacked Variables in here", "created_at": "2017-06-10T11:08:29Z", "updated_at": "2018-11-23T15:33:45Z", "html_url": "https://github.com/pytorch/pytorch/pull/1643#discussion_r121255182", "pull_request_url": "https://api.github.com/repos/pytorch/pytorch/pulls/1643", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/121255182"}, "html": {"href": "https://github.com/pytorch/pytorch/pull/1643#discussion_r121255182"}, "pull_request": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/1643"}}, "body_html": "<p>Unpacking does a bunch of checks and it's best to do it only once. You can change the beginning of the function to use <code>unpack()</code> to get a Variable, and extract its data from the member. Then, reuse the unpacked Variables in here</p>", "body_text": "Unpacking does a bunch of checks and it's best to do it only once. You can change the beginning of the function to use unpack() to get a Variable, and extract its data from the member. Then, reuse the unpacked Variables in here"}