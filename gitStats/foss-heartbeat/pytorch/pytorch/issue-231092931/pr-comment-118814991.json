{"url": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/118814991", "pull_request_review_id": 40647144, "id": 118814991, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDExODgxNDk5MQ==", "diff_hunk": "@@ -327,6 +365,126 @@ auto ConvBackward::releaseVariables() -> void {\n   bias_.data.reset();\n }\n \n+\n+// ConvBackwardBackward implementation\n+\n+auto ConvBackwardBackward::apply(const variable_list& grad_grad_inputs) -> variable_list {\n+  if (grad_grad_inputs.size() != 3) throw std::runtime_error(\"expected three grad_grad_inputs\");\n+  if (transposed) throw std::runtime_error(\"ConvBackwardBackward does not support transposed convolution\");\n+\n+  auto ggI = grad_grad_inputs[0];\n+  auto ggW = grad_grad_inputs[1];\n+  auto ggb = grad_grad_inputs[2];\n+\n+  auto gO = grad_output_.unpack();\n+  auto weight = weight_.unpack();\n+\n+  // Compute ggO = conv(w, ggI) + conv(ggW, i) + ggb\n+  std::shared_ptr<Variable> ggO = nullptr;\n+  if (ggI) {\n+    ggO = std::make_shared<ConvForward>(*this)->apply({ggI, weight, nullptr})[0];\n+  }\n+\n+  if (ggW) {\n+    auto ggW_term = std::make_shared<ConvForward>(*this)->apply({input_.unpack(), ggW, nullptr})[0];\n+    if (ggO) {\n+      ggO = std::make_shared<Add>()->apply({ggO, ggW_term})[0];\n+    } else {\n+      ggO = ggW_term;\n+    }\n+  }\n+\n+  if (ggb) {\n+    // View as (1, ggb.size(0), 1, 1...)\n+    std::vector<long> new_size(gO->data->sizes().size(), 1);\n+    new_size[1] = ggb->data->sizes()[0];\n+    auto ggb_contiguous = std::make_shared<Clone>()->apply({ggb})[0];", "path": "torch/csrc/autograd/functions/convolution.cpp", "position": null, "original_position": 156, "commit_id": "e3cc7c83dc86803042b934d3c1863a7af1640a8d", "original_commit_id": "9260594e948b8476f64c6c232f5b734ca6b987da", "user": {"login": "albanD", "id": 6359743, "node_id": "MDQ6VXNlcjYzNTk3NDM=", "avatar_url": "https://avatars3.githubusercontent.com/u/6359743?v=4", "gravatar_id": "", "url": "https://api.github.com/users/albanD", "html_url": "https://github.com/albanD", "followers_url": "https://api.github.com/users/albanD/followers", "following_url": "https://api.github.com/users/albanD/following{/other_user}", "gists_url": "https://api.github.com/users/albanD/gists{/gist_id}", "starred_url": "https://api.github.com/users/albanD/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/albanD/subscriptions", "organizations_url": "https://api.github.com/users/albanD/orgs", "repos_url": "https://api.github.com/users/albanD/repos", "events_url": "https://api.github.com/users/albanD/events{/privacy}", "received_events_url": "https://api.github.com/users/albanD/received_events", "type": "User", "site_admin": false}, "body": "The Contiguous function does not exist right now, i need to create it. But what should the backward of Contiguous be? Identity or Contiguous?", "created_at": "2017-05-27T06:38:40Z", "updated_at": "2018-11-23T15:33:34Z", "html_url": "https://github.com/pytorch/pytorch/pull/1643#discussion_r118814991", "pull_request_url": "https://api.github.com/repos/pytorch/pytorch/pulls/1643", "author_association": "COLLABORATOR", "_links": {"self": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/118814991"}, "html": {"href": "https://github.com/pytorch/pytorch/pull/1643#discussion_r118814991"}, "pull_request": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/1643"}}, "body_html": "<p>The Contiguous function does not exist right now, i need to create it. But what should the backward of Contiguous be? Identity or Contiguous?</p>", "body_text": "The Contiguous function does not exist right now, i need to create it. But what should the backward of Contiguous be? Identity or Contiguous?", "in_reply_to_id": 118448493}