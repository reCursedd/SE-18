{"url": "https://api.github.com/repos/pytorch/pytorch/issues/8606", "repository_url": "https://api.github.com/repos/pytorch/pytorch", "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/8606/labels{/name}", "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/8606/comments", "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/8606/events", "html_url": "https://github.com/pytorch/pytorch/pull/8606", "id": 333333864, "node_id": "MDExOlB1bGxSZXF1ZXN0MTk1NTczNDg1", "number": 8606, "title": "Fix test_rnn_args_check", "user": {"login": "zou3519", "id": 5652049, "node_id": "MDQ6VXNlcjU2NTIwNDk=", "avatar_url": "https://avatars3.githubusercontent.com/u/5652049?v=4", "gravatar_id": "", "url": "https://api.github.com/users/zou3519", "html_url": "https://github.com/zou3519", "followers_url": "https://api.github.com/users/zou3519/followers", "following_url": "https://api.github.com/users/zou3519/following{/other_user}", "gists_url": "https://api.github.com/users/zou3519/gists{/gist_id}", "starred_url": "https://api.github.com/users/zou3519/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/zou3519/subscriptions", "organizations_url": "https://api.github.com/users/zou3519/orgs", "repos_url": "https://api.github.com/users/zou3519/repos", "events_url": "https://api.github.com/users/zou3519/events{/privacy}", "received_events_url": "https://api.github.com/users/zou3519/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2018-06-18T16:01:10Z", "updated_at": "2018-06-18T18:08:58Z", "closed_at": "2018-06-18T18:08:58Z", "author_association": "CONTRIBUTOR", "pull_request": {"url": "https://api.github.com/repos/pytorch/pytorch/pulls/8606", "html_url": "https://github.com/pytorch/pytorch/pull/8606", "diff_url": "https://github.com/pytorch/pytorch/pull/8606.diff", "patch_url": "https://github.com/pytorch/pytorch/pull/8606.patch"}, "body_html": "<p>test_rnn_args_check generates mismatched input_shape and hidden_shape<br>\nargs. To do this, it changes a dimension of input_shape or hidden_shape<br>\nto have an incorrect size.</p>\n<p>Before, the test was changing the size of a dimension to -1. However,<br>\nthis is flawed because an input of size i.e. (6, -1, 2) is wrong.<br>\nThis PR fixes it so that the test changes sizes of dimensions to<br>\n<code>bad_size = 7</code>. As long as none of the other sizes (input_size,<br>\nhidden_size, num_layers, batch_size) divide this, we don't have to worry<br>\nabout that dimension being accidentally broadcasted into working.</p>\n<p>cc <a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=3768583\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/gchanan\">@gchanan</a> -- thanks for reporting it! I think this has the intended behavior now.</p>", "body_text": "test_rnn_args_check generates mismatched input_shape and hidden_shape\nargs. To do this, it changes a dimension of input_shape or hidden_shape\nto have an incorrect size.\nBefore, the test was changing the size of a dimension to -1. However,\nthis is flawed because an input of size i.e. (6, -1, 2) is wrong.\nThis PR fixes it so that the test changes sizes of dimensions to\nbad_size = 7. As long as none of the other sizes (input_size,\nhidden_size, num_layers, batch_size) divide this, we don't have to worry\nabout that dimension being accidentally broadcasted into working.\ncc @gchanan -- thanks for reporting it! I think this has the intended behavior now.", "body": "test_rnn_args_check generates mismatched input_shape and hidden_shape\r\nargs. To do this, it changes a dimension of input_shape or hidden_shape\r\nto have an incorrect size.\r\n\r\nBefore, the test was changing the size of a dimension to -1. However,\r\nthis is flawed because an input of size i.e. (6, -1, 2) is wrong.\r\nThis PR fixes it so that the test changes sizes of dimensions to\r\n`bad_size = 7`. As long as none of the other sizes (input_size,\r\nhidden_size, num_layers, batch_size) divide this, we don't have to worry\r\nabout that dimension being accidentally broadcasted into working.\r\n\r\ncc @gchanan -- thanks for reporting it! I think this has the intended behavior now.\r\n"}