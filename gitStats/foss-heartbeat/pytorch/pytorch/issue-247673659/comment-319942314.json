{"url": "https://api.github.com/repos/pytorch/pytorch/issues/comments/319942314", "html_url": "https://github.com/pytorch/pytorch/issues/2283#issuecomment-319942314", "issue_url": "https://api.github.com/repos/pytorch/pytorch/issues/2283", "id": 319942314, "node_id": "MDEyOklzc3VlQ29tbWVudDMxOTk0MjMxNA==", "user": {"login": "uzeful", "id": 13515490, "node_id": "MDQ6VXNlcjEzNTE1NDkw", "avatar_url": "https://avatars2.githubusercontent.com/u/13515490?v=4", "gravatar_id": "", "url": "https://api.github.com/users/uzeful", "html_url": "https://github.com/uzeful", "followers_url": "https://api.github.com/users/uzeful/followers", "following_url": "https://api.github.com/users/uzeful/following{/other_user}", "gists_url": "https://api.github.com/users/uzeful/gists{/gist_id}", "starred_url": "https://api.github.com/users/uzeful/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/uzeful/subscriptions", "organizations_url": "https://api.github.com/users/uzeful/orgs", "repos_url": "https://api.github.com/users/uzeful/repos", "events_url": "https://api.github.com/users/uzeful/events{/privacy}", "received_events_url": "https://api.github.com/users/uzeful/received_events", "type": "User", "site_admin": false}, "created_at": "2017-08-03T11:25:17Z", "updated_at": "2017-08-03T11:30:46Z", "author_association": "NONE", "body_html": "<p>Thanks for your quick reply, <a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=1310570\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/soumith\">@soumith</a>.<br>\nBy the way, I asked another question on <a href=\"https://discuss.pytorch.org/t/how-to-optimize-a-model-once-after-several-times-of-small-batchs-training/4505/1\" rel=\"nofollow\">https://discuss.pytorch.org/t/how-to-optimize-a-model-once-after-several-times-of-small-batchs-training/4505/1</a>.</p>\n<p>The following is your answer. And I want to ask whether the backward() function will average the gradient?</p>\n<p>num_batches = 0<br>\nfor sample, target in dataset:<br>\nout = model(sample)<br>\nloss = loss_fn(out, target)<br>\nloss.backward()<br>\nnum_batches += 1<br>\nif num_batches == 10: # optimize every 10 mini-batches<br>\noptimizer.step()<br>\nmodel.zero_grad() # or optimizer.zero_grad()<br>\nnum_batches = 0</p>", "body_text": "Thanks for your quick reply, @soumith.\nBy the way, I asked another question on https://discuss.pytorch.org/t/how-to-optimize-a-model-once-after-several-times-of-small-batchs-training/4505/1.\nThe following is your answer. And I want to ask whether the backward() function will average the gradient?\nnum_batches = 0\nfor sample, target in dataset:\nout = model(sample)\nloss = loss_fn(out, target)\nloss.backward()\nnum_batches += 1\nif num_batches == 10: # optimize every 10 mini-batches\noptimizer.step()\nmodel.zero_grad() # or optimizer.zero_grad()\nnum_batches = 0", "body": "Thanks for your quick reply, @soumith. \r\nBy the way, I asked another question on https://discuss.pytorch.org/t/how-to-optimize-a-model-once-after-several-times-of-small-batchs-training/4505/1.\r\n\r\nThe following is your answer. And I want to ask whether the backward() function will average the gradient? \r\n\r\nnum_batches = 0\r\nfor sample, target in dataset:\r\n    out = model(sample)\r\n    loss = loss_fn(out, target)\r\n    loss.backward()\r\n    num_batches += 1\r\n    if num_batches == 10: # optimize every 10 mini-batches\r\n        optimizer.step()\r\n        model.zero_grad() # or optimizer.zero_grad()\r\n        num_batches = 0\r\n"}