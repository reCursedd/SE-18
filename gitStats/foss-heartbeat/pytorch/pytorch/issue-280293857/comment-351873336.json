{"url": "https://api.github.com/repos/pytorch/pytorch/issues/comments/351873336", "html_url": "https://github.com/pytorch/pytorch/issues/4081#issuecomment-351873336", "issue_url": "https://api.github.com/repos/pytorch/pytorch/issues/4081", "id": 351873336, "node_id": "MDEyOklzc3VlQ29tbWVudDM1MTg3MzMzNg==", "user": {"login": "lantiga", "id": 191033, "node_id": "MDQ6VXNlcjE5MTAzMw==", "avatar_url": "https://avatars2.githubusercontent.com/u/191033?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lantiga", "html_url": "https://github.com/lantiga", "followers_url": "https://api.github.com/users/lantiga/followers", "following_url": "https://api.github.com/users/lantiga/following{/other_user}", "gists_url": "https://api.github.com/users/lantiga/gists{/gist_id}", "starred_url": "https://api.github.com/users/lantiga/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lantiga/subscriptions", "organizations_url": "https://api.github.com/users/lantiga/orgs", "repos_url": "https://api.github.com/users/lantiga/repos", "events_url": "https://api.github.com/users/lantiga/events{/privacy}", "received_events_url": "https://api.github.com/users/lantiga/received_events", "type": "User", "site_admin": false}, "created_at": "2017-12-15T00:01:43Z", "updated_at": "2017-12-15T00:01:43Z", "author_association": "COLLABORATOR", "body_html": "<p>So, the _backward you see is actually the \"forward\" of the double backward. The actual backwards for, say, <code>threshold</code> and <code>threshold_</code> are set up when creating and configuring <code>grad_fn</code> inside the forward function.<br>\nTests pass for me after the change above (will submit a PR in a minute): <code>clone</code> is gone from forward and <code>output</code> is saved after the call\u00a0for all inplace functions, so we should be good.<br>\nDouble backwards are out of scope I believe.</p>", "body_text": "So, the _backward you see is actually the \"forward\" of the double backward. The actual backwards for, say, threshold and threshold_ are set up when creating and configuring grad_fn inside the forward function.\nTests pass for me after the change above (will submit a PR in a minute): clone is gone from forward and output is saved after the call\u00a0for all inplace functions, so we should be good.\nDouble backwards are out of scope I believe.", "body": "So, the _backward you see is actually the \"forward\" of the double backward. The actual backwards for, say, `threshold` and `threshold_` are set up when creating and configuring `grad_fn` inside the forward function.\r\nTests pass for me after the change above (will submit a PR in a minute): `clone` is gone from forward and `output` is saved after the call\u00a0for all inplace functions, so we should be good.\r\nDouble backwards are out of scope I believe."}