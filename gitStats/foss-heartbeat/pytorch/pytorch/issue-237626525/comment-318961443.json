{"url": "https://api.github.com/repos/pytorch/pytorch/issues/comments/318961443", "html_url": "https://github.com/pytorch/pytorch/issues/1868#issuecomment-318961443", "issue_url": "https://api.github.com/repos/pytorch/pytorch/issues/1868", "id": 318961443, "node_id": "MDEyOklzc3VlQ29tbWVudDMxODk2MTQ0Mw==", "user": {"login": "Louis-Tian", "id": 5655024, "node_id": "MDQ6VXNlcjU2NTUwMjQ=", "avatar_url": "https://avatars2.githubusercontent.com/u/5655024?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Louis-Tian", "html_url": "https://github.com/Louis-Tian", "followers_url": "https://api.github.com/users/Louis-Tian/followers", "following_url": "https://api.github.com/users/Louis-Tian/following{/other_user}", "gists_url": "https://api.github.com/users/Louis-Tian/gists{/gist_id}", "starred_url": "https://api.github.com/users/Louis-Tian/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Louis-Tian/subscriptions", "organizations_url": "https://api.github.com/users/Louis-Tian/orgs", "repos_url": "https://api.github.com/users/Louis-Tian/repos", "events_url": "https://api.github.com/users/Louis-Tian/events{/privacy}", "received_events_url": "https://api.github.com/users/Louis-Tian/received_events", "type": "User", "site_admin": false}, "created_at": "2017-07-31T03:57:30Z", "updated_at": "2017-07-31T03:57:30Z", "author_association": "NONE", "body_html": "<p>Not sure it's the same issue. I am experiencing segfault with multithreading as well.</p>\n<div class=\"highlight highlight-source-python\"><pre><span class=\"pl-k\">import</span> torch\n<span class=\"pl-k\">import</span> torch.functional <span class=\"pl-k\">as</span> f\n<span class=\"pl-k\">from</span> concurrent.futures <span class=\"pl-k\">import</span> ThreadPoolExecutor <span class=\"pl-k\">as</span> ThreadPool\n\n\n<span class=\"pl-k\">def</span> <span class=\"pl-en\">build</span>(<span class=\"pl-smi\">cuda</span><span class=\"pl-k\">=</span><span class=\"pl-c1\">False</span>):\n    nn <span class=\"pl-k\">=</span> torch.nn.Sequential(\n        torch.nn.Linear(<span class=\"pl-c1\">1024</span>, <span class=\"pl-c1\">1024</span>),\n        torch.nn.Linear(<span class=\"pl-c1\">1024</span>, <span class=\"pl-c1\">1</span>)\n    )\n\n    <span class=\"pl-k\">return</span> nn.cuda() <span class=\"pl-k\">if</span> cuda <span class=\"pl-k\">else</span> nn\n\n<span class=\"pl-k\">def</span> <span class=\"pl-en\">train</span>(<span class=\"pl-smi\">nn</span>, <span class=\"pl-smi\">X</span>, <span class=\"pl-smi\">y</span>, <span class=\"pl-smi\">epoch</span><span class=\"pl-k\">=</span><span class=\"pl-c1\">100</span>):\n    X <span class=\"pl-k\">=</span> torch.autograd.Variable(X)\n    y <span class=\"pl-k\">=</span> torch.autograd.Variable(y)\n    optim <span class=\"pl-k\">=</span> torch.optim.SGD(nn.parameters(), <span class=\"pl-v\">lr</span><span class=\"pl-k\">=</span><span class=\"pl-c1\">0.1</span>)\n    <span class=\"pl-k\">for</span> i <span class=\"pl-k\">in</span> <span class=\"pl-c1\">range</span>(epoch):\n        yhat <span class=\"pl-k\">=</span> nn(X)\n        loss <span class=\"pl-k\">=</span> ((yhat <span class=\"pl-k\">-</span> y) <span class=\"pl-k\">**</span> <span class=\"pl-c1\">2</span>).mean()\n        loss.backward()\n        optim.step()\n\n<span class=\"pl-k\">def</span> <span class=\"pl-en\">data</span>(<span class=\"pl-smi\">cuda</span><span class=\"pl-k\">=</span><span class=\"pl-c1\">False</span>):\n    X <span class=\"pl-k\">=</span> torch.rand(<span class=\"pl-c1\">10</span>, <span class=\"pl-c1\">1024</span>)\n    y <span class=\"pl-k\">=</span> torch.rand((<span class=\"pl-c1\">10</span>, <span class=\"pl-c1\">1</span>))\n    <span class=\"pl-k\">return</span> (X.cuda(), y.cuda()) <span class=\"pl-k\">if</span> cuda <span class=\"pl-k\">else</span> (X, y)\n\n<span class=\"pl-k\">def</span> <span class=\"pl-en\">cpu_run</span>(<span class=\"pl-smi\">i</span><span class=\"pl-k\">=</span><span class=\"pl-c1\">None</span>):\n    nn <span class=\"pl-k\">=</span> build(<span class=\"pl-v\">cuda</span><span class=\"pl-k\">=</span><span class=\"pl-c1\">False</span>)\n    d <span class=\"pl-k\">=</span> data(<span class=\"pl-v\">cuda</span><span class=\"pl-k\">=</span><span class=\"pl-c1\">False</span>)\n    train(nn, <span class=\"pl-k\">*</span>d)\n\n<span class=\"pl-k\">def</span> <span class=\"pl-en\">thread_cpu_run</span>():\n    pool <span class=\"pl-k\">=</span> ThreadPool()\n    threads <span class=\"pl-k\">=</span> pool.map(cpu_run, <span class=\"pl-c1\">list</span>(<span class=\"pl-c1\">range</span>(<span class=\"pl-c1\">5</span>)))  \n        \n    <span class=\"pl-k\">return</span> <span class=\"pl-c1\">list</span>(threads)\n\nthread_cpu_run()</pre></div>\n<pre><code>Starting program: /home/tianchuanting/miniconda3/bin/python speedtest.py\n[Thread debugging using libthread_db enabled]\nUsing host libthread_db library \"/lib/x86_64-linux-gnu/libthread_db.so.1\".\nwarning: File \"/home/tianchuanting/miniconda3/lib/libstdc++.so.6.0.19-gdb.py\" auto-loading has been declined by your `auto-load safe-path' set t\no \"$debugdir:$datadir/auto-load\".\nTo enable execution of this file add\n        add-auto-load-safe-path /home/tianchuanting/miniconda3/lib/libstdc++.so.6.0.19-gdb.py\nline to your configuration file \"/home/tianchuanting/.gdbinit\".\nTo completely disable this security protection add\n        set auto-load safe-path /\nline to your configuration file \"/home/tianchuanting/.gdbinit\".\nFor more information about this security protection see the\n\"Auto-loading safe path\" section in the GDB manual.  E.g., run from the shell:\n        info \"(gdb)Auto-loading safe path\"\n[New Thread 0x7fffea7e0700 (LWP 5883)]\n[New Thread 0x7fffe9bde700 (LWP 5884)]\n[New Thread 0x7fffe8fdc700 (LWP 5885)]\n[New Thread 0x7fffdbfff700 (LWP 5886)]\n[New Thread 0x7fffdb3fd700 (LWP 5887)]\n\nThread 6 \"python\" received signal SIGSEGV, Segmentation fault.\n[Switching to Thread 0x7fffdb3fd700 (LWP 5887)]\n0x00007fffed4c1a97 in THRandom_random () from /home/tianchuanting/miniconda3/lib/python3.6/site-packages/torch/lib/libTH.so.1\n(gdb) where\n#0  0x00007fffed4c1a97 in THRandom_random () from /home/tianchuanting/miniconda3/lib/python3.6/site-packages/torch/lib/libTH.so.1\n#1  0x00007fffed4c1af4 in THRandom_uniform () from /home/tianchuanting/miniconda3/lib/python3.6/site-packages/torch/lib/libTH.so.1\n#2  0x00007fffed1f3910 in THFloatTensor_uniform () from /home/tianchuanting/miniconda3/lib/python3.6/site-packages/torch/lib/libTH.so.1\n#3  0x00007fffedb8f11b in THPFloatTensor_uniform_ (self=0x7fffea9fc1c8, args=&lt;optimized out&gt;, kwargs=&lt;optimized out&gt;)\n    at /home/tianchuanting/pytorch/torch/csrc/generic/TensorMethods.cpp:50822\n#4  0x00007ffff7992df2 in _PyCFunction_FastCallDict (func_obj=0x7fffea9f98b8, args=0x7fffea9fb3a0, nargs=&lt;optimized out&gt;, kwargs=0x0)\n    at Objects/methodobject.c:231\n#5  0x00007ffff7a184ec in call_function (pp_stack=0x7fffdb3fb588, oparg=&lt;optimized out&gt;, kwnames=0x0) at Python/ceval.c:4798\n#6  0x00007ffff7a1b15d in _PyEval_EvalFrameDefault (f=&lt;optimized out&gt;, throwflag=&lt;optimized out&gt;) at Python/ceval.c:3284\n#7  0x00007ffff7a15e74 in _PyFunction_FastCall (co=&lt;optimized out&gt;, args=&lt;optimized out&gt;, nargs=1, globals=&lt;optimized out&gt;)\n    at Python/ceval.c:4880\n#8  0x00007ffff7a185e8 in fast_function (kwnames=0x0, nargs=1, stack=&lt;optimized out&gt;, func=0x7fffeaaad0d0) at Python/ceval.c:4915\n#9  call_function (pp_stack=0x7fffdb3fb7b8, oparg=&lt;optimized out&gt;, kwnames=0x0) at Python/ceval.c:4819\n#10 0x00007ffff7a1b15d in _PyEval_EvalFrameDefault (f=&lt;optimized out&gt;, throwflag=&lt;optimized out&gt;) at Python/ceval.c:3284\n#11 0x00007ffff7a16a60 in _PyEval_EvalCodeWithName (_co=0x7fffeabf00c0, globals=&lt;optimized out&gt;, locals=&lt;optimized out&gt;, args=&lt;optimized out&gt;,\n    argcount=3, kwnames=0x0, kwargs=0x8, kwcount=0, kwstep=2, defs=0x7fffeaaa66f0, defcount=1, kwdefs=0x0, closure=0x7fffeaaa6908,\n    name=0x7ffff7e15270, qualname=0x7fffeab20a30) at Python/ceval.c:4128\n#12 0x00007ffff7a16cfc in _PyFunction_FastCallDict (func=0x7fffeaaad048, args=0x7fffdb3fb9f0, nargs=3, kwargs=0x0) at Python/ceval.c:5031\n#13 0x00007ffff793bba6 in _PyObject_FastCallDict (func=0x7fffeaaad048, args=0x7fffdb3fb9f0, nargs=&lt;optimized out&gt;, kwargs=0x0)\n    at Objects/abstract.c:2295\n#14 0x00007ffff793bdfc in _PyObject_Call_Prepend (func=0x7fffeaaad048, obj=0x7fffea9e6fd0, args=0x7fffeacf6e48, kwargs=0x0)\n    at Objects/abstract.c:2358\n#15 0x00007ffff793be96 in PyObject_Call (func=0x7fffead7a408, args=&lt;optimized out&gt;, kwargs=&lt;optimized out&gt;) at Objects/abstract.c:2246\n#16 0x00007ffff79b4233 in slot_tp_init (self=0x7fffea9e6fd0, args=0x7fffeacf6e48, kwds=0x0) at Objects/typeobject.c:6380\n#17 0x00007ffff79a9d4c in type_call (type=&lt;optimized out&gt;, args=0x7fffeacf6e48, kwds=0x0) at Objects/typeobject.c:915\n#18 0x00007ffff793bade in _PyObject_FastCallDict (func=0xb66868, args=&lt;optimized out&gt;, nargs=&lt;optimized out&gt;, kwargs=0x0)\n    at Objects/abstract.c:2316\n#19 0x00007ffff7a182bb in call_function (pp_stack=0x7fffdb3fbd08, oparg=&lt;optimized out&gt;, kwnames=0x0) at Python/ceval.c:4822\n#20 0x00007ffff7a1b15d in _PyEval_EvalFrameDefault (f=&lt;optimized out&gt;, throwflag=&lt;optimized out&gt;) at Python/ceval.c:3284\n#21 0x00007ffff7a16a60 in _PyEval_EvalCodeWithName (_co=0x7ffff6941a50, globals=&lt;optimized out&gt;, locals=&lt;optimized out&gt;, args=&lt;optimized out&gt;,\n    argcount=0, kwnames=0x7ffff68c5370, kwargs=0x7fffea9fb1e0, kwcount=1, kwstep=1, defs=0x7ffff68cf140, defcount=1, kwdefs=0x0, closure=0x0,\n    name=0x7ffff68c5068, qualname=0x7ffff68c5068) at Python/ceval.c:4128\n#22 0x00007ffff7a1848a in fast_function (kwnames=&lt;optimized out&gt;, nargs=0, stack=&lt;optimized out&gt;, func=0x7ffff6974e18) at Python/ceval.c:4939\n#23 call_function (pp_stack=0x7fffdb3fbfa8, oparg=&lt;optimized out&gt;, kwnames=&lt;optimized out&gt;) at Python/ceval.c:4819\n#24 0x00007ffff7a1a8dd in _PyEval_EvalFrameDefault (f=&lt;optimized out&gt;, throwflag=&lt;optimized out&gt;) at Python/ceval.c:3300\n#25 0x00007ffff7a16a60 in _PyEval_EvalCodeWithName (_co=0x7ffff6905e40, globals=&lt;optimized out&gt;, locals=&lt;optimized out&gt;, args=&lt;optimized out&gt;,\n    argcount=1, kwnames=0x7ffff7e12060, kwargs=0x7ffff7e12068, kwcount=0, kwstep=2, defs=0x7ffff682d098, defcount=1, kwdefs=0x0, closure=0x0,\n    name=0x0, qualname=0x0) at Python/ceval.c:4128\n#26 0x00007ffff7a16ee3 in PyEval_EvalCodeEx (_co=&lt;optimized out&gt;, globals=&lt;optimized out&gt;, locals=&lt;optimized out&gt;, args=&lt;optimized out&gt;,\n    argcount=&lt;optimized out&gt;, kws=&lt;optimized out&gt;, kwcount=0, defs=0x7ffff682d098, defcount=1, kwdefs=0x0, closure=0x0) at Python/ceval.c:4149\n#27 0x00007ffff796eee1 in function_call (func=0x7fffea9efc80, arg=0x7fffea9e6208, kw=0x7fffea9f9438) at Objects/funcobject.c:604\n#28 0x00007ffff793be96 in PyObject_Call (func=0x7fffea9efc80, args=&lt;optimized out&gt;, kwargs=&lt;optimized out&gt;) at Objects/abstract.c:2246\n#29 0x00007ffff7a1c236 in do_call_core (kwdict=0x7fffea9f9438, callargs=&lt;optimized out&gt;, func=0x7fffea9efc80) at Python/ceval.c:5067\n#30 _PyEval_EvalFrameDefault (f=&lt;optimized out&gt;, throwflag=&lt;optimized out&gt;) at Python/ceval.c:3366\n#31 0x00007ffff7a15e74 in _PyFunction_FastCall (co=&lt;optimized out&gt;, args=&lt;optimized out&gt;, nargs=1, globals=&lt;optimized out&gt;)\n    at Python/ceval.c:4880\n#32 0x00007ffff7a185e8 in fast_function (kwnames=0x0, nargs=1, stack=&lt;optimized out&gt;, func=0x7fffea9ef950) at Python/ceval.c:4915\n#33 call_function (pp_stack=0x7fffdb3fc508, oparg=&lt;optimized out&gt;, kwnames=0x0) at Python/ceval.c:4819\n#34 0x00007ffff7a1b15d in _PyEval_EvalFrameDefault (f=&lt;optimized out&gt;, throwflag=&lt;optimized out&gt;) at Python/ceval.c:3284\n#35 0x00007ffff7a16a60 in _PyEval_EvalCodeWithName (_co=0x7fffeaa518a0, globals=&lt;optimized out&gt;, locals=&lt;optimized out&gt;, args=&lt;optimized out&gt;,\n    argcount=2, kwnames=0x7ffff7e12060, kwargs=0x7ffff7e12068, kwcount=0, kwstep=2, defs=0x0, defcount=0, kwdefs=0x0, closure=0x0, name=0x0,\n    qualname=0x0) at Python/ceval.c:4128\n#36 0x00007ffff7a16ee3 in PyEval_EvalCodeEx (_co=&lt;optimized out&gt;, globals=&lt;optimized out&gt;, locals=&lt;optimized out&gt;, args=&lt;optimized out&gt;,\n    argcount=&lt;optimized out&gt;, kws=&lt;optimized out&gt;, kwcount=0, defs=0x0, defcount=0, kwdefs=0x0, closure=0x0) at Python/ceval.c:4149\n#37 0x00007ffff796eee1 in function_call (func=0x7fffea9ef840, arg=0x7fffeacf6d48, kw=0x7fffea9f96c0) at Objects/funcobject.c:604\n#38 0x00007ffff793be96 in PyObject_Call (func=0x7fffea9ef840, args=&lt;optimized out&gt;, kwargs=&lt;optimized out&gt;) at Objects/abstract.c:2246\n#39 0x00007ffff7a1c236 in do_call_core (kwdict=0x7fffea9f96c0, callargs=&lt;optimized out&gt;, func=0x7fffea9ef840) at Python/ceval.c:5067\n#40 _PyEval_EvalFrameDefault (f=&lt;optimized out&gt;, throwflag=&lt;optimized out&gt;) at Python/ceval.c:3366\n#41 0x00007ffff7a15e74 in _PyFunction_FastCall (co=&lt;optimized out&gt;, args=&lt;optimized out&gt;, nargs=1, globals=&lt;optimized out&gt;)\n---Type &lt;return&gt; to continue, or q &lt;return&gt; to quit---\n    at Python/ceval.c:4880\n#42 0x00007ffff7a185e8 in fast_function (kwnames=0x0, nargs=1, stack=&lt;optimized out&gt;, func=0x7ffff0c31a60) at Python/ceval.c:4915\n#43 call_function (pp_stack=0x7fffdb3fca68, oparg=&lt;optimized out&gt;, kwnames=0x0) at Python/ceval.c:4819\n#44 0x00007ffff7a1b15d in _PyEval_EvalFrameDefault (f=&lt;optimized out&gt;, throwflag=&lt;optimized out&gt;) at Python/ceval.c:3284\n#45 0x00007ffff7a15e74 in _PyFunction_FastCall (co=&lt;optimized out&gt;, args=&lt;optimized out&gt;, nargs=1, globals=&lt;optimized out&gt;)\n    at Python/ceval.c:4880\n#46 0x00007ffff7a185e8 in fast_function (kwnames=0x0, nargs=1, stack=&lt;optimized out&gt;, func=0x7ffff0c31c80) at Python/ceval.c:4915\n#47 call_function (pp_stack=0x7fffdb3fcc98, oparg=&lt;optimized out&gt;, kwnames=0x0) at Python/ceval.c:4819\n#48 0x00007ffff7a1b15d in _PyEval_EvalFrameDefault (f=&lt;optimized out&gt;, throwflag=&lt;optimized out&gt;) at Python/ceval.c:3284\n#49 0x00007ffff7a15e74 in _PyFunction_FastCall (co=&lt;optimized out&gt;, args=&lt;optimized out&gt;, nargs=1, globals=&lt;optimized out&gt;)\n    at Python/ceval.c:4880\n#50 0x00007ffff7a16e75 in _PyFunction_FastCallDict (func=0x7ffff0c31ae8, args=0x7fffdb3fce60, nargs=1, kwargs=0x0) at Python/ceval.c:4982\n#51 0x00007ffff793bba6 in _PyObject_FastCallDict (func=0x7ffff0c31ae8, args=0x7fffdb3fce60, nargs=&lt;optimized out&gt;, kwargs=0x0)\n    at Objects/abstract.c:2295\n#52 0x00007ffff793bdfc in _PyObject_Call_Prepend (func=0x7ffff0c31ae8, obj=0x7fffea9e6f28, args=0x7ffff7e12048, kwargs=0x0)\n    at Objects/abstract.c:2358\n#53 0x00007ffff793be96 in PyObject_Call (func=0x7fffeaddca08, args=&lt;optimized out&gt;, kwargs=&lt;optimized out&gt;) at Objects/abstract.c:2246\n#54 0x00007ffff7a68ae2 in t_bootstrap (boot_raw=0x7fffeaa5d7d8) at ./Modules/_threadmodule.c:998\n#55 0x00007ffff76ba6ba in start_thread (arg=0x7fffdb3fd700) at pthread_create.c:333\n#56 0x00007ffff6ad83dd in clone () at ../sysdeps/unix/sysv/linux/x86_64/clone.S:109\n</code></pre>\n<p>env</p>\n<pre><code>Python 3.6.1 |Continuum Analytics, Inc.| (default, May 11 2017, 13:09:58)\n[GCC 4.4.7 20120313 (Red Hat 4.4.7-1)] on linux\nType \"help\", \"copyright\", \"credits\" or \"license\" for more information.\n&gt;&gt;&gt; import torch\n&gt;&gt;&gt; torch.__version__\n'0.2.0+8262920'\n</code></pre>", "body_text": "Not sure it's the same issue. I am experiencing segfault with multithreading as well.\nimport torch\nimport torch.functional as f\nfrom concurrent.futures import ThreadPoolExecutor as ThreadPool\n\n\ndef build(cuda=False):\n    nn = torch.nn.Sequential(\n        torch.nn.Linear(1024, 1024),\n        torch.nn.Linear(1024, 1)\n    )\n\n    return nn.cuda() if cuda else nn\n\ndef train(nn, X, y, epoch=100):\n    X = torch.autograd.Variable(X)\n    y = torch.autograd.Variable(y)\n    optim = torch.optim.SGD(nn.parameters(), lr=0.1)\n    for i in range(epoch):\n        yhat = nn(X)\n        loss = ((yhat - y) ** 2).mean()\n        loss.backward()\n        optim.step()\n\ndef data(cuda=False):\n    X = torch.rand(10, 1024)\n    y = torch.rand((10, 1))\n    return (X.cuda(), y.cuda()) if cuda else (X, y)\n\ndef cpu_run(i=None):\n    nn = build(cuda=False)\n    d = data(cuda=False)\n    train(nn, *d)\n\ndef thread_cpu_run():\n    pool = ThreadPool()\n    threads = pool.map(cpu_run, list(range(5)))  \n        \n    return list(threads)\n\nthread_cpu_run()\nStarting program: /home/tianchuanting/miniconda3/bin/python speedtest.py\n[Thread debugging using libthread_db enabled]\nUsing host libthread_db library \"/lib/x86_64-linux-gnu/libthread_db.so.1\".\nwarning: File \"/home/tianchuanting/miniconda3/lib/libstdc++.so.6.0.19-gdb.py\" auto-loading has been declined by your `auto-load safe-path' set t\no \"$debugdir:$datadir/auto-load\".\nTo enable execution of this file add\n        add-auto-load-safe-path /home/tianchuanting/miniconda3/lib/libstdc++.so.6.0.19-gdb.py\nline to your configuration file \"/home/tianchuanting/.gdbinit\".\nTo completely disable this security protection add\n        set auto-load safe-path /\nline to your configuration file \"/home/tianchuanting/.gdbinit\".\nFor more information about this security protection see the\n\"Auto-loading safe path\" section in the GDB manual.  E.g., run from the shell:\n        info \"(gdb)Auto-loading safe path\"\n[New Thread 0x7fffea7e0700 (LWP 5883)]\n[New Thread 0x7fffe9bde700 (LWP 5884)]\n[New Thread 0x7fffe8fdc700 (LWP 5885)]\n[New Thread 0x7fffdbfff700 (LWP 5886)]\n[New Thread 0x7fffdb3fd700 (LWP 5887)]\n\nThread 6 \"python\" received signal SIGSEGV, Segmentation fault.\n[Switching to Thread 0x7fffdb3fd700 (LWP 5887)]\n0x00007fffed4c1a97 in THRandom_random () from /home/tianchuanting/miniconda3/lib/python3.6/site-packages/torch/lib/libTH.so.1\n(gdb) where\n#0  0x00007fffed4c1a97 in THRandom_random () from /home/tianchuanting/miniconda3/lib/python3.6/site-packages/torch/lib/libTH.so.1\n#1  0x00007fffed4c1af4 in THRandom_uniform () from /home/tianchuanting/miniconda3/lib/python3.6/site-packages/torch/lib/libTH.so.1\n#2  0x00007fffed1f3910 in THFloatTensor_uniform () from /home/tianchuanting/miniconda3/lib/python3.6/site-packages/torch/lib/libTH.so.1\n#3  0x00007fffedb8f11b in THPFloatTensor_uniform_ (self=0x7fffea9fc1c8, args=<optimized out>, kwargs=<optimized out>)\n    at /home/tianchuanting/pytorch/torch/csrc/generic/TensorMethods.cpp:50822\n#4  0x00007ffff7992df2 in _PyCFunction_FastCallDict (func_obj=0x7fffea9f98b8, args=0x7fffea9fb3a0, nargs=<optimized out>, kwargs=0x0)\n    at Objects/methodobject.c:231\n#5  0x00007ffff7a184ec in call_function (pp_stack=0x7fffdb3fb588, oparg=<optimized out>, kwnames=0x0) at Python/ceval.c:4798\n#6  0x00007ffff7a1b15d in _PyEval_EvalFrameDefault (f=<optimized out>, throwflag=<optimized out>) at Python/ceval.c:3284\n#7  0x00007ffff7a15e74 in _PyFunction_FastCall (co=<optimized out>, args=<optimized out>, nargs=1, globals=<optimized out>)\n    at Python/ceval.c:4880\n#8  0x00007ffff7a185e8 in fast_function (kwnames=0x0, nargs=1, stack=<optimized out>, func=0x7fffeaaad0d0) at Python/ceval.c:4915\n#9  call_function (pp_stack=0x7fffdb3fb7b8, oparg=<optimized out>, kwnames=0x0) at Python/ceval.c:4819\n#10 0x00007ffff7a1b15d in _PyEval_EvalFrameDefault (f=<optimized out>, throwflag=<optimized out>) at Python/ceval.c:3284\n#11 0x00007ffff7a16a60 in _PyEval_EvalCodeWithName (_co=0x7fffeabf00c0, globals=<optimized out>, locals=<optimized out>, args=<optimized out>,\n    argcount=3, kwnames=0x0, kwargs=0x8, kwcount=0, kwstep=2, defs=0x7fffeaaa66f0, defcount=1, kwdefs=0x0, closure=0x7fffeaaa6908,\n    name=0x7ffff7e15270, qualname=0x7fffeab20a30) at Python/ceval.c:4128\n#12 0x00007ffff7a16cfc in _PyFunction_FastCallDict (func=0x7fffeaaad048, args=0x7fffdb3fb9f0, nargs=3, kwargs=0x0) at Python/ceval.c:5031\n#13 0x00007ffff793bba6 in _PyObject_FastCallDict (func=0x7fffeaaad048, args=0x7fffdb3fb9f0, nargs=<optimized out>, kwargs=0x0)\n    at Objects/abstract.c:2295\n#14 0x00007ffff793bdfc in _PyObject_Call_Prepend (func=0x7fffeaaad048, obj=0x7fffea9e6fd0, args=0x7fffeacf6e48, kwargs=0x0)\n    at Objects/abstract.c:2358\n#15 0x00007ffff793be96 in PyObject_Call (func=0x7fffead7a408, args=<optimized out>, kwargs=<optimized out>) at Objects/abstract.c:2246\n#16 0x00007ffff79b4233 in slot_tp_init (self=0x7fffea9e6fd0, args=0x7fffeacf6e48, kwds=0x0) at Objects/typeobject.c:6380\n#17 0x00007ffff79a9d4c in type_call (type=<optimized out>, args=0x7fffeacf6e48, kwds=0x0) at Objects/typeobject.c:915\n#18 0x00007ffff793bade in _PyObject_FastCallDict (func=0xb66868, args=<optimized out>, nargs=<optimized out>, kwargs=0x0)\n    at Objects/abstract.c:2316\n#19 0x00007ffff7a182bb in call_function (pp_stack=0x7fffdb3fbd08, oparg=<optimized out>, kwnames=0x0) at Python/ceval.c:4822\n#20 0x00007ffff7a1b15d in _PyEval_EvalFrameDefault (f=<optimized out>, throwflag=<optimized out>) at Python/ceval.c:3284\n#21 0x00007ffff7a16a60 in _PyEval_EvalCodeWithName (_co=0x7ffff6941a50, globals=<optimized out>, locals=<optimized out>, args=<optimized out>,\n    argcount=0, kwnames=0x7ffff68c5370, kwargs=0x7fffea9fb1e0, kwcount=1, kwstep=1, defs=0x7ffff68cf140, defcount=1, kwdefs=0x0, closure=0x0,\n    name=0x7ffff68c5068, qualname=0x7ffff68c5068) at Python/ceval.c:4128\n#22 0x00007ffff7a1848a in fast_function (kwnames=<optimized out>, nargs=0, stack=<optimized out>, func=0x7ffff6974e18) at Python/ceval.c:4939\n#23 call_function (pp_stack=0x7fffdb3fbfa8, oparg=<optimized out>, kwnames=<optimized out>) at Python/ceval.c:4819\n#24 0x00007ffff7a1a8dd in _PyEval_EvalFrameDefault (f=<optimized out>, throwflag=<optimized out>) at Python/ceval.c:3300\n#25 0x00007ffff7a16a60 in _PyEval_EvalCodeWithName (_co=0x7ffff6905e40, globals=<optimized out>, locals=<optimized out>, args=<optimized out>,\n    argcount=1, kwnames=0x7ffff7e12060, kwargs=0x7ffff7e12068, kwcount=0, kwstep=2, defs=0x7ffff682d098, defcount=1, kwdefs=0x0, closure=0x0,\n    name=0x0, qualname=0x0) at Python/ceval.c:4128\n#26 0x00007ffff7a16ee3 in PyEval_EvalCodeEx (_co=<optimized out>, globals=<optimized out>, locals=<optimized out>, args=<optimized out>,\n    argcount=<optimized out>, kws=<optimized out>, kwcount=0, defs=0x7ffff682d098, defcount=1, kwdefs=0x0, closure=0x0) at Python/ceval.c:4149\n#27 0x00007ffff796eee1 in function_call (func=0x7fffea9efc80, arg=0x7fffea9e6208, kw=0x7fffea9f9438) at Objects/funcobject.c:604\n#28 0x00007ffff793be96 in PyObject_Call (func=0x7fffea9efc80, args=<optimized out>, kwargs=<optimized out>) at Objects/abstract.c:2246\n#29 0x00007ffff7a1c236 in do_call_core (kwdict=0x7fffea9f9438, callargs=<optimized out>, func=0x7fffea9efc80) at Python/ceval.c:5067\n#30 _PyEval_EvalFrameDefault (f=<optimized out>, throwflag=<optimized out>) at Python/ceval.c:3366\n#31 0x00007ffff7a15e74 in _PyFunction_FastCall (co=<optimized out>, args=<optimized out>, nargs=1, globals=<optimized out>)\n    at Python/ceval.c:4880\n#32 0x00007ffff7a185e8 in fast_function (kwnames=0x0, nargs=1, stack=<optimized out>, func=0x7fffea9ef950) at Python/ceval.c:4915\n#33 call_function (pp_stack=0x7fffdb3fc508, oparg=<optimized out>, kwnames=0x0) at Python/ceval.c:4819\n#34 0x00007ffff7a1b15d in _PyEval_EvalFrameDefault (f=<optimized out>, throwflag=<optimized out>) at Python/ceval.c:3284\n#35 0x00007ffff7a16a60 in _PyEval_EvalCodeWithName (_co=0x7fffeaa518a0, globals=<optimized out>, locals=<optimized out>, args=<optimized out>,\n    argcount=2, kwnames=0x7ffff7e12060, kwargs=0x7ffff7e12068, kwcount=0, kwstep=2, defs=0x0, defcount=0, kwdefs=0x0, closure=0x0, name=0x0,\n    qualname=0x0) at Python/ceval.c:4128\n#36 0x00007ffff7a16ee3 in PyEval_EvalCodeEx (_co=<optimized out>, globals=<optimized out>, locals=<optimized out>, args=<optimized out>,\n    argcount=<optimized out>, kws=<optimized out>, kwcount=0, defs=0x0, defcount=0, kwdefs=0x0, closure=0x0) at Python/ceval.c:4149\n#37 0x00007ffff796eee1 in function_call (func=0x7fffea9ef840, arg=0x7fffeacf6d48, kw=0x7fffea9f96c0) at Objects/funcobject.c:604\n#38 0x00007ffff793be96 in PyObject_Call (func=0x7fffea9ef840, args=<optimized out>, kwargs=<optimized out>) at Objects/abstract.c:2246\n#39 0x00007ffff7a1c236 in do_call_core (kwdict=0x7fffea9f96c0, callargs=<optimized out>, func=0x7fffea9ef840) at Python/ceval.c:5067\n#40 _PyEval_EvalFrameDefault (f=<optimized out>, throwflag=<optimized out>) at Python/ceval.c:3366\n#41 0x00007ffff7a15e74 in _PyFunction_FastCall (co=<optimized out>, args=<optimized out>, nargs=1, globals=<optimized out>)\n---Type <return> to continue, or q <return> to quit---\n    at Python/ceval.c:4880\n#42 0x00007ffff7a185e8 in fast_function (kwnames=0x0, nargs=1, stack=<optimized out>, func=0x7ffff0c31a60) at Python/ceval.c:4915\n#43 call_function (pp_stack=0x7fffdb3fca68, oparg=<optimized out>, kwnames=0x0) at Python/ceval.c:4819\n#44 0x00007ffff7a1b15d in _PyEval_EvalFrameDefault (f=<optimized out>, throwflag=<optimized out>) at Python/ceval.c:3284\n#45 0x00007ffff7a15e74 in _PyFunction_FastCall (co=<optimized out>, args=<optimized out>, nargs=1, globals=<optimized out>)\n    at Python/ceval.c:4880\n#46 0x00007ffff7a185e8 in fast_function (kwnames=0x0, nargs=1, stack=<optimized out>, func=0x7ffff0c31c80) at Python/ceval.c:4915\n#47 call_function (pp_stack=0x7fffdb3fcc98, oparg=<optimized out>, kwnames=0x0) at Python/ceval.c:4819\n#48 0x00007ffff7a1b15d in _PyEval_EvalFrameDefault (f=<optimized out>, throwflag=<optimized out>) at Python/ceval.c:3284\n#49 0x00007ffff7a15e74 in _PyFunction_FastCall (co=<optimized out>, args=<optimized out>, nargs=1, globals=<optimized out>)\n    at Python/ceval.c:4880\n#50 0x00007ffff7a16e75 in _PyFunction_FastCallDict (func=0x7ffff0c31ae8, args=0x7fffdb3fce60, nargs=1, kwargs=0x0) at Python/ceval.c:4982\n#51 0x00007ffff793bba6 in _PyObject_FastCallDict (func=0x7ffff0c31ae8, args=0x7fffdb3fce60, nargs=<optimized out>, kwargs=0x0)\n    at Objects/abstract.c:2295\n#52 0x00007ffff793bdfc in _PyObject_Call_Prepend (func=0x7ffff0c31ae8, obj=0x7fffea9e6f28, args=0x7ffff7e12048, kwargs=0x0)\n    at Objects/abstract.c:2358\n#53 0x00007ffff793be96 in PyObject_Call (func=0x7fffeaddca08, args=<optimized out>, kwargs=<optimized out>) at Objects/abstract.c:2246\n#54 0x00007ffff7a68ae2 in t_bootstrap (boot_raw=0x7fffeaa5d7d8) at ./Modules/_threadmodule.c:998\n#55 0x00007ffff76ba6ba in start_thread (arg=0x7fffdb3fd700) at pthread_create.c:333\n#56 0x00007ffff6ad83dd in clone () at ../sysdeps/unix/sysv/linux/x86_64/clone.S:109\n\nenv\nPython 3.6.1 |Continuum Analytics, Inc.| (default, May 11 2017, 13:09:58)\n[GCC 4.4.7 20120313 (Red Hat 4.4.7-1)] on linux\nType \"help\", \"copyright\", \"credits\" or \"license\" for more information.\n>>> import torch\n>>> torch.__version__\n'0.2.0+8262920'", "body": "Not sure it's the same issue. I am experiencing segfault with multithreading as well. \r\n\r\n```python\r\nimport torch\r\nimport torch.functional as f\r\nfrom concurrent.futures import ThreadPoolExecutor as ThreadPool\r\n\r\n\r\ndef build(cuda=False):\r\n    nn = torch.nn.Sequential(\r\n        torch.nn.Linear(1024, 1024),\r\n        torch.nn.Linear(1024, 1)\r\n    )\r\n\r\n    return nn.cuda() if cuda else nn\r\n\r\ndef train(nn, X, y, epoch=100):\r\n    X = torch.autograd.Variable(X)\r\n    y = torch.autograd.Variable(y)\r\n    optim = torch.optim.SGD(nn.parameters(), lr=0.1)\r\n    for i in range(epoch):\r\n        yhat = nn(X)\r\n        loss = ((yhat - y) ** 2).mean()\r\n        loss.backward()\r\n        optim.step()\r\n\r\ndef data(cuda=False):\r\n    X = torch.rand(10, 1024)\r\n    y = torch.rand((10, 1))\r\n    return (X.cuda(), y.cuda()) if cuda else (X, y)\r\n\r\ndef cpu_run(i=None):\r\n    nn = build(cuda=False)\r\n    d = data(cuda=False)\r\n    train(nn, *d)\r\n\r\ndef thread_cpu_run():\r\n    pool = ThreadPool()\r\n    threads = pool.map(cpu_run, list(range(5)))  \r\n        \r\n    return list(threads)\r\n\r\nthread_cpu_run()\r\n```\r\n\r\n```\r\nStarting program: /home/tianchuanting/miniconda3/bin/python speedtest.py\r\n[Thread debugging using libthread_db enabled]\r\nUsing host libthread_db library \"/lib/x86_64-linux-gnu/libthread_db.so.1\".\r\nwarning: File \"/home/tianchuanting/miniconda3/lib/libstdc++.so.6.0.19-gdb.py\" auto-loading has been declined by your `auto-load safe-path' set t\r\no \"$debugdir:$datadir/auto-load\".\r\nTo enable execution of this file add\r\n        add-auto-load-safe-path /home/tianchuanting/miniconda3/lib/libstdc++.so.6.0.19-gdb.py\r\nline to your configuration file \"/home/tianchuanting/.gdbinit\".\r\nTo completely disable this security protection add\r\n        set auto-load safe-path /\r\nline to your configuration file \"/home/tianchuanting/.gdbinit\".\r\nFor more information about this security protection see the\r\n\"Auto-loading safe path\" section in the GDB manual.  E.g., run from the shell:\r\n        info \"(gdb)Auto-loading safe path\"\r\n[New Thread 0x7fffea7e0700 (LWP 5883)]\r\n[New Thread 0x7fffe9bde700 (LWP 5884)]\r\n[New Thread 0x7fffe8fdc700 (LWP 5885)]\r\n[New Thread 0x7fffdbfff700 (LWP 5886)]\r\n[New Thread 0x7fffdb3fd700 (LWP 5887)]\r\n\r\nThread 6 \"python\" received signal SIGSEGV, Segmentation fault.\r\n[Switching to Thread 0x7fffdb3fd700 (LWP 5887)]\r\n0x00007fffed4c1a97 in THRandom_random () from /home/tianchuanting/miniconda3/lib/python3.6/site-packages/torch/lib/libTH.so.1\r\n(gdb) where\r\n#0  0x00007fffed4c1a97 in THRandom_random () from /home/tianchuanting/miniconda3/lib/python3.6/site-packages/torch/lib/libTH.so.1\r\n#1  0x00007fffed4c1af4 in THRandom_uniform () from /home/tianchuanting/miniconda3/lib/python3.6/site-packages/torch/lib/libTH.so.1\r\n#2  0x00007fffed1f3910 in THFloatTensor_uniform () from /home/tianchuanting/miniconda3/lib/python3.6/site-packages/torch/lib/libTH.so.1\r\n#3  0x00007fffedb8f11b in THPFloatTensor_uniform_ (self=0x7fffea9fc1c8, args=<optimized out>, kwargs=<optimized out>)\r\n    at /home/tianchuanting/pytorch/torch/csrc/generic/TensorMethods.cpp:50822\r\n#4  0x00007ffff7992df2 in _PyCFunction_FastCallDict (func_obj=0x7fffea9f98b8, args=0x7fffea9fb3a0, nargs=<optimized out>, kwargs=0x0)\r\n    at Objects/methodobject.c:231\r\n#5  0x00007ffff7a184ec in call_function (pp_stack=0x7fffdb3fb588, oparg=<optimized out>, kwnames=0x0) at Python/ceval.c:4798\r\n#6  0x00007ffff7a1b15d in _PyEval_EvalFrameDefault (f=<optimized out>, throwflag=<optimized out>) at Python/ceval.c:3284\r\n#7  0x00007ffff7a15e74 in _PyFunction_FastCall (co=<optimized out>, args=<optimized out>, nargs=1, globals=<optimized out>)\r\n    at Python/ceval.c:4880\r\n#8  0x00007ffff7a185e8 in fast_function (kwnames=0x0, nargs=1, stack=<optimized out>, func=0x7fffeaaad0d0) at Python/ceval.c:4915\r\n#9  call_function (pp_stack=0x7fffdb3fb7b8, oparg=<optimized out>, kwnames=0x0) at Python/ceval.c:4819\r\n#10 0x00007ffff7a1b15d in _PyEval_EvalFrameDefault (f=<optimized out>, throwflag=<optimized out>) at Python/ceval.c:3284\r\n#11 0x00007ffff7a16a60 in _PyEval_EvalCodeWithName (_co=0x7fffeabf00c0, globals=<optimized out>, locals=<optimized out>, args=<optimized out>,\r\n    argcount=3, kwnames=0x0, kwargs=0x8, kwcount=0, kwstep=2, defs=0x7fffeaaa66f0, defcount=1, kwdefs=0x0, closure=0x7fffeaaa6908,\r\n    name=0x7ffff7e15270, qualname=0x7fffeab20a30) at Python/ceval.c:4128\r\n#12 0x00007ffff7a16cfc in _PyFunction_FastCallDict (func=0x7fffeaaad048, args=0x7fffdb3fb9f0, nargs=3, kwargs=0x0) at Python/ceval.c:5031\r\n#13 0x00007ffff793bba6 in _PyObject_FastCallDict (func=0x7fffeaaad048, args=0x7fffdb3fb9f0, nargs=<optimized out>, kwargs=0x0)\r\n    at Objects/abstract.c:2295\r\n#14 0x00007ffff793bdfc in _PyObject_Call_Prepend (func=0x7fffeaaad048, obj=0x7fffea9e6fd0, args=0x7fffeacf6e48, kwargs=0x0)\r\n    at Objects/abstract.c:2358\r\n#15 0x00007ffff793be96 in PyObject_Call (func=0x7fffead7a408, args=<optimized out>, kwargs=<optimized out>) at Objects/abstract.c:2246\r\n#16 0x00007ffff79b4233 in slot_tp_init (self=0x7fffea9e6fd0, args=0x7fffeacf6e48, kwds=0x0) at Objects/typeobject.c:6380\r\n#17 0x00007ffff79a9d4c in type_call (type=<optimized out>, args=0x7fffeacf6e48, kwds=0x0) at Objects/typeobject.c:915\r\n#18 0x00007ffff793bade in _PyObject_FastCallDict (func=0xb66868, args=<optimized out>, nargs=<optimized out>, kwargs=0x0)\r\n    at Objects/abstract.c:2316\r\n#19 0x00007ffff7a182bb in call_function (pp_stack=0x7fffdb3fbd08, oparg=<optimized out>, kwnames=0x0) at Python/ceval.c:4822\r\n#20 0x00007ffff7a1b15d in _PyEval_EvalFrameDefault (f=<optimized out>, throwflag=<optimized out>) at Python/ceval.c:3284\r\n#21 0x00007ffff7a16a60 in _PyEval_EvalCodeWithName (_co=0x7ffff6941a50, globals=<optimized out>, locals=<optimized out>, args=<optimized out>,\r\n    argcount=0, kwnames=0x7ffff68c5370, kwargs=0x7fffea9fb1e0, kwcount=1, kwstep=1, defs=0x7ffff68cf140, defcount=1, kwdefs=0x0, closure=0x0,\r\n    name=0x7ffff68c5068, qualname=0x7ffff68c5068) at Python/ceval.c:4128\r\n#22 0x00007ffff7a1848a in fast_function (kwnames=<optimized out>, nargs=0, stack=<optimized out>, func=0x7ffff6974e18) at Python/ceval.c:4939\r\n#23 call_function (pp_stack=0x7fffdb3fbfa8, oparg=<optimized out>, kwnames=<optimized out>) at Python/ceval.c:4819\r\n#24 0x00007ffff7a1a8dd in _PyEval_EvalFrameDefault (f=<optimized out>, throwflag=<optimized out>) at Python/ceval.c:3300\r\n#25 0x00007ffff7a16a60 in _PyEval_EvalCodeWithName (_co=0x7ffff6905e40, globals=<optimized out>, locals=<optimized out>, args=<optimized out>,\r\n    argcount=1, kwnames=0x7ffff7e12060, kwargs=0x7ffff7e12068, kwcount=0, kwstep=2, defs=0x7ffff682d098, defcount=1, kwdefs=0x0, closure=0x0,\r\n    name=0x0, qualname=0x0) at Python/ceval.c:4128\r\n#26 0x00007ffff7a16ee3 in PyEval_EvalCodeEx (_co=<optimized out>, globals=<optimized out>, locals=<optimized out>, args=<optimized out>,\r\n    argcount=<optimized out>, kws=<optimized out>, kwcount=0, defs=0x7ffff682d098, defcount=1, kwdefs=0x0, closure=0x0) at Python/ceval.c:4149\r\n#27 0x00007ffff796eee1 in function_call (func=0x7fffea9efc80, arg=0x7fffea9e6208, kw=0x7fffea9f9438) at Objects/funcobject.c:604\r\n#28 0x00007ffff793be96 in PyObject_Call (func=0x7fffea9efc80, args=<optimized out>, kwargs=<optimized out>) at Objects/abstract.c:2246\r\n#29 0x00007ffff7a1c236 in do_call_core (kwdict=0x7fffea9f9438, callargs=<optimized out>, func=0x7fffea9efc80) at Python/ceval.c:5067\r\n#30 _PyEval_EvalFrameDefault (f=<optimized out>, throwflag=<optimized out>) at Python/ceval.c:3366\r\n#31 0x00007ffff7a15e74 in _PyFunction_FastCall (co=<optimized out>, args=<optimized out>, nargs=1, globals=<optimized out>)\r\n    at Python/ceval.c:4880\r\n#32 0x00007ffff7a185e8 in fast_function (kwnames=0x0, nargs=1, stack=<optimized out>, func=0x7fffea9ef950) at Python/ceval.c:4915\r\n#33 call_function (pp_stack=0x7fffdb3fc508, oparg=<optimized out>, kwnames=0x0) at Python/ceval.c:4819\r\n#34 0x00007ffff7a1b15d in _PyEval_EvalFrameDefault (f=<optimized out>, throwflag=<optimized out>) at Python/ceval.c:3284\r\n#35 0x00007ffff7a16a60 in _PyEval_EvalCodeWithName (_co=0x7fffeaa518a0, globals=<optimized out>, locals=<optimized out>, args=<optimized out>,\r\n    argcount=2, kwnames=0x7ffff7e12060, kwargs=0x7ffff7e12068, kwcount=0, kwstep=2, defs=0x0, defcount=0, kwdefs=0x0, closure=0x0, name=0x0,\r\n    qualname=0x0) at Python/ceval.c:4128\r\n#36 0x00007ffff7a16ee3 in PyEval_EvalCodeEx (_co=<optimized out>, globals=<optimized out>, locals=<optimized out>, args=<optimized out>,\r\n    argcount=<optimized out>, kws=<optimized out>, kwcount=0, defs=0x0, defcount=0, kwdefs=0x0, closure=0x0) at Python/ceval.c:4149\r\n#37 0x00007ffff796eee1 in function_call (func=0x7fffea9ef840, arg=0x7fffeacf6d48, kw=0x7fffea9f96c0) at Objects/funcobject.c:604\r\n#38 0x00007ffff793be96 in PyObject_Call (func=0x7fffea9ef840, args=<optimized out>, kwargs=<optimized out>) at Objects/abstract.c:2246\r\n#39 0x00007ffff7a1c236 in do_call_core (kwdict=0x7fffea9f96c0, callargs=<optimized out>, func=0x7fffea9ef840) at Python/ceval.c:5067\r\n#40 _PyEval_EvalFrameDefault (f=<optimized out>, throwflag=<optimized out>) at Python/ceval.c:3366\r\n#41 0x00007ffff7a15e74 in _PyFunction_FastCall (co=<optimized out>, args=<optimized out>, nargs=1, globals=<optimized out>)\r\n---Type <return> to continue, or q <return> to quit---\r\n    at Python/ceval.c:4880\r\n#42 0x00007ffff7a185e8 in fast_function (kwnames=0x0, nargs=1, stack=<optimized out>, func=0x7ffff0c31a60) at Python/ceval.c:4915\r\n#43 call_function (pp_stack=0x7fffdb3fca68, oparg=<optimized out>, kwnames=0x0) at Python/ceval.c:4819\r\n#44 0x00007ffff7a1b15d in _PyEval_EvalFrameDefault (f=<optimized out>, throwflag=<optimized out>) at Python/ceval.c:3284\r\n#45 0x00007ffff7a15e74 in _PyFunction_FastCall (co=<optimized out>, args=<optimized out>, nargs=1, globals=<optimized out>)\r\n    at Python/ceval.c:4880\r\n#46 0x00007ffff7a185e8 in fast_function (kwnames=0x0, nargs=1, stack=<optimized out>, func=0x7ffff0c31c80) at Python/ceval.c:4915\r\n#47 call_function (pp_stack=0x7fffdb3fcc98, oparg=<optimized out>, kwnames=0x0) at Python/ceval.c:4819\r\n#48 0x00007ffff7a1b15d in _PyEval_EvalFrameDefault (f=<optimized out>, throwflag=<optimized out>) at Python/ceval.c:3284\r\n#49 0x00007ffff7a15e74 in _PyFunction_FastCall (co=<optimized out>, args=<optimized out>, nargs=1, globals=<optimized out>)\r\n    at Python/ceval.c:4880\r\n#50 0x00007ffff7a16e75 in _PyFunction_FastCallDict (func=0x7ffff0c31ae8, args=0x7fffdb3fce60, nargs=1, kwargs=0x0) at Python/ceval.c:4982\r\n#51 0x00007ffff793bba6 in _PyObject_FastCallDict (func=0x7ffff0c31ae8, args=0x7fffdb3fce60, nargs=<optimized out>, kwargs=0x0)\r\n    at Objects/abstract.c:2295\r\n#52 0x00007ffff793bdfc in _PyObject_Call_Prepend (func=0x7ffff0c31ae8, obj=0x7fffea9e6f28, args=0x7ffff7e12048, kwargs=0x0)\r\n    at Objects/abstract.c:2358\r\n#53 0x00007ffff793be96 in PyObject_Call (func=0x7fffeaddca08, args=<optimized out>, kwargs=<optimized out>) at Objects/abstract.c:2246\r\n#54 0x00007ffff7a68ae2 in t_bootstrap (boot_raw=0x7fffeaa5d7d8) at ./Modules/_threadmodule.c:998\r\n#55 0x00007ffff76ba6ba in start_thread (arg=0x7fffdb3fd700) at pthread_create.c:333\r\n#56 0x00007ffff6ad83dd in clone () at ../sysdeps/unix/sysv/linux/x86_64/clone.S:109\r\n```\r\nenv\r\n```\r\nPython 3.6.1 |Continuum Analytics, Inc.| (default, May 11 2017, 13:09:58)\r\n[GCC 4.4.7 20120313 (Red Hat 4.4.7-1)] on linux\r\nType \"help\", \"copyright\", \"credits\" or \"license\" for more information.\r\n>>> import torch\r\n>>> torch.__version__\r\n'0.2.0+8262920'\r\n```\r\n\r\n"}