{"url": "https://api.github.com/repos/pytorch/pytorch/issues/4988", "repository_url": "https://api.github.com/repos/pytorch/pytorch", "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/4988/labels{/name}", "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/4988/comments", "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/4988/events", "html_url": "https://github.com/pytorch/pytorch/pull/4988", "id": 293588819, "node_id": "MDExOlB1bGxSZXF1ZXN0MTY2NTgxMTI2", "number": 4988, "title": "Fix refcycles in DataParallel scatter and gather", "user": {"login": "zou3519", "id": 5652049, "node_id": "MDQ6VXNlcjU2NTIwNDk=", "avatar_url": "https://avatars3.githubusercontent.com/u/5652049?v=4", "gravatar_id": "", "url": "https://api.github.com/users/zou3519", "html_url": "https://github.com/zou3519", "followers_url": "https://api.github.com/users/zou3519/followers", "following_url": "https://api.github.com/users/zou3519/following{/other_user}", "gists_url": "https://api.github.com/users/zou3519/gists{/gist_id}", "starred_url": "https://api.github.com/users/zou3519/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/zou3519/subscriptions", "organizations_url": "https://api.github.com/users/zou3519/orgs", "repos_url": "https://api.github.com/users/zou3519/repos", "events_url": "https://api.github.com/users/zou3519/events{/privacy}", "received_events_url": "https://api.github.com/users/zou3519/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 825466279, "node_id": "MDU6TGFiZWw4MjU0NjYyNzk=", "url": "https://api.github.com/repos/pytorch/pytorch/labels/0.3.1", "name": "0.3.1", "color": "aefcae", "default": false}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-02-01T16:11:13Z", "updated_at": "2018-11-23T15:39:07Z", "closed_at": "2018-02-05T22:19:37Z", "author_association": "CONTRIBUTOR", "pull_request": {"url": "https://api.github.com/repos/pytorch/pytorch/pulls/4988", "html_url": "https://github.com/pytorch/pytorch/pull/4988", "diff_url": "https://github.com/pytorch/pytorch/pull/4988.diff", "patch_url": "https://github.com/pytorch/pytorch/pull/4988.patch"}, "body_html": "<p>Addresses <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load issue title\" data-id=\"291809450\" data-permission-text=\"Issue title is private\" data-url=\"https://github.com/pytorch/pytorch/issues/4865\" data-hovercard-type=\"issue\" data-hovercard-url=\"/pytorch/pytorch/issues/4865/hovercard\" href=\"https://github.com/pytorch/pytorch/issues/4865\">#4865</a></p>\n<p>DataParallel's <code>scatter</code> and <code>gather</code> methods contain reference cycles; this PR removes them. I think <a href=\"https://mail.python.org/pipermail/python-dev/2009-December/094439.html\" rel=\"nofollow\">this</a> is the explanation.</p>\n<p>There's something up with Python 2.7 that creates reference cycles when a module is replicated, so the unit test I wrote is only for Python 3. As far as I can tell, those reference cycles are created internally by Python so I don't think there's anything we can do about that.</p>\n<h3>Test Plan</h3>\n<p>Unit test to test the multi-gpu behavior under Python 3.</p>", "body_text": "Addresses #4865\nDataParallel's scatter and gather methods contain reference cycles; this PR removes them. I think this is the explanation.\nThere's something up with Python 2.7 that creates reference cycles when a module is replicated, so the unit test I wrote is only for Python 3. As far as I can tell, those reference cycles are created internally by Python so I don't think there's anything we can do about that.\nTest Plan\nUnit test to test the multi-gpu behavior under Python 3.", "body": "Addresses #4865 \r\n\r\nDataParallel's `scatter` and `gather` methods contain reference cycles; this PR removes them. I think [this](https://mail.python.org/pipermail/python-dev/2009-December/094439.html) is the explanation.\r\n\r\nThere's something up with Python 2.7 that creates reference cycles when a module is replicated, so the unit test I wrote is only for Python 3. As far as I can tell, those reference cycles are created internally by Python so I don't think there's anything we can do about that.\r\n\r\n### Test Plan\r\nUnit test to test the multi-gpu behavior under Python 3."}