{"url": "https://api.github.com/repos/pytorch/pytorch/issues/9743", "repository_url": "https://api.github.com/repos/pytorch/pytorch", "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/9743/labels{/name}", "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/9743/comments", "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/9743/events", "html_url": "https://github.com/pytorch/pytorch/issues/9743", "id": 343848389, "node_id": "MDU6SXNzdWUzNDM4NDgzODk=", "number": 9743, "title": "Potential incompatibility with v0.3 pre-trained models using weight_norm(..., dim=None)", "user": {"login": "farleylai", "id": 158540, "node_id": "MDQ6VXNlcjE1ODU0MA==", "avatar_url": "https://avatars2.githubusercontent.com/u/158540?v=4", "gravatar_id": "", "url": "https://api.github.com/users/farleylai", "html_url": "https://github.com/farleylai", "followers_url": "https://api.github.com/users/farleylai/followers", "following_url": "https://api.github.com/users/farleylai/following{/other_user}", "gists_url": "https://api.github.com/users/farleylai/gists{/gist_id}", "starred_url": "https://api.github.com/users/farleylai/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/farleylai/subscriptions", "organizations_url": "https://api.github.com/users/farleylai/orgs", "repos_url": "https://api.github.com/users/farleylai/repos", "events_url": "https://api.github.com/users/farleylai/events{/privacy}", "received_events_url": "https://api.github.com/users/farleylai/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 443484050, "node_id": "MDU6TGFiZWw0NDM0ODQwNTA=", "url": "https://api.github.com/repos/pytorch/pytorch/labels/medium%20priority", "name": "medium priority", "color": "fbca04", "default": false}], "state": "closed", "locked": false, "assignee": {"login": "ailzhang", "id": 5248122, "node_id": "MDQ6VXNlcjUyNDgxMjI=", "avatar_url": "https://avatars2.githubusercontent.com/u/5248122?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ailzhang", "html_url": "https://github.com/ailzhang", "followers_url": "https://api.github.com/users/ailzhang/followers", "following_url": "https://api.github.com/users/ailzhang/following{/other_user}", "gists_url": "https://api.github.com/users/ailzhang/gists{/gist_id}", "starred_url": "https://api.github.com/users/ailzhang/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ailzhang/subscriptions", "organizations_url": "https://api.github.com/users/ailzhang/orgs", "repos_url": "https://api.github.com/users/ailzhang/repos", "events_url": "https://api.github.com/users/ailzhang/events{/privacy}", "received_events_url": "https://api.github.com/users/ailzhang/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "ailzhang", "id": 5248122, "node_id": "MDQ6VXNlcjUyNDgxMjI=", "avatar_url": "https://avatars2.githubusercontent.com/u/5248122?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ailzhang", "html_url": "https://github.com/ailzhang", "followers_url": "https://api.github.com/users/ailzhang/followers", "following_url": "https://api.github.com/users/ailzhang/following{/other_user}", "gists_url": "https://api.github.com/users/ailzhang/gists{/gist_id}", "starred_url": "https://api.github.com/users/ailzhang/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ailzhang/subscriptions", "organizations_url": "https://api.github.com/users/ailzhang/orgs", "repos_url": "https://api.github.com/users/ailzhang/repos", "events_url": "https://api.github.com/users/ailzhang/events{/privacy}", "received_events_url": "https://api.github.com/users/ailzhang/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 2, "created_at": "2018-07-24T01:12:17Z", "updated_at": "2018-09-05T18:54:37Z", "closed_at": "2018-07-27T00:10:43Z", "author_association": "NONE", "body_html": "<h2>Issue description</h2>\n<p>Calling load_state_dict() to load a pre-trained PyTorch-0.3 model that uses <code>weight_norm(..., dim=None)</code> leads to mismatched tensor <code>XXX_g</code> dimension error: torch.Size([]) while torch.Size([1]) expected.</p>\n<p>Source <a href=\"https://github.com/jnhwkim/ban-vqa/issues/7\" data-hovercard-type=\"issue\" data-hovercard-url=\"/jnhwkim/ban-vqa/issues/7/hovercard\">issue</a></p>\n<h2>Code example</h2>\n<p>In the weight_norm.py:</p>\n<pre><code>def _norm(p, dim):\n    \"\"\"computes the norm over all dimensions except dim\"\"\"\n    if dim is None:\n         return p.norm()  # returns 0-dim scalar tensor in v0.4 but 1-dim in v0.3\n    ...\n</code></pre>\n<p><code>return p.norm().reshape(1)</code> feels like a backward compatible workaround to return a 1-dim tensor as previous versions.</p>\n<h2>System Info</h2>\n<p>Collecting environment information...<br>\nPyTorch version: 0.4.0<br>\nIs debug build: No<br>\nCUDA used to build PyTorch: 9.1.85</p>\n<p>OS: Ubuntu 16.04.3 LTS<br>\nGCC version: (Ubuntu 5.4.0-6ubuntu1~16.04.10) 5.4.0 20160609<br>\nCMake version: version 3.5.0</p>\n<p>Python version: 3.6<br>\nIs CUDA available: Yes<br>\nCUDA runtime version: 9.2.148<br>\nGPU models and configuration:<br>\nGPU 0: GeForce GTX 1080 Ti<br>\nGPU 1: GeForce GTX 1080 Ti</p>\n<p>Nvidia driver version: 396.37<br>\ncuDNN version: Probably one of the following:<br>\n/usr/lib/x86_64-linux-gnu/libcudnn.so.7.1.4</p>\n<p>Versions of relevant libraries:<br>\n[pip3] numpy (1.13.3)<br>\n[pip3] numpydoc (0.7.0)<br>\n[pip3] torch (0.4.0)<br>\n[pip3] torchfile (0.1.0)<br>\n[pip3] torchtext (0.2.3)<br>\n[pip3] torchvision (0.2.0)<br>\n[conda] cuda80                    1.0                  h205658b_0    pytorch<br>\n[conda] cuda90                    1.0                  h6433d27_0    pytorch<br>\n[conda] cuda91                    1.0                  h4c16780_0    soumith<br>\n[conda] magma-cuda80              2.1.0                         5    soumith<br>\n[conda] magma-cuda91              2.3.0                         1    soumith<br>\n[conda] nccl2                     1.0                           0    soumith<br>\n[conda] pytorch                   0.4.0           py36_cuda9.1.85_cudnn7.1.2_1  [cuda91]  pytorch<br>\n[conda] torchfile                 0.1.0                     <br>\n[conda] torchtext                 0.2.3                     <br>\n[conda] torchvision               0.2.0            py36h17b6947_1    pytorch</p>", "body_text": "Issue description\nCalling load_state_dict() to load a pre-trained PyTorch-0.3 model that uses weight_norm(..., dim=None) leads to mismatched tensor XXX_g dimension error: torch.Size([]) while torch.Size([1]) expected.\nSource issue\nCode example\nIn the weight_norm.py:\ndef _norm(p, dim):\n    \"\"\"computes the norm over all dimensions except dim\"\"\"\n    if dim is None:\n         return p.norm()  # returns 0-dim scalar tensor in v0.4 but 1-dim in v0.3\n    ...\n\nreturn p.norm().reshape(1) feels like a backward compatible workaround to return a 1-dim tensor as previous versions.\nSystem Info\nCollecting environment information...\nPyTorch version: 0.4.0\nIs debug build: No\nCUDA used to build PyTorch: 9.1.85\nOS: Ubuntu 16.04.3 LTS\nGCC version: (Ubuntu 5.4.0-6ubuntu1~16.04.10) 5.4.0 20160609\nCMake version: version 3.5.0\nPython version: 3.6\nIs CUDA available: Yes\nCUDA runtime version: 9.2.148\nGPU models and configuration:\nGPU 0: GeForce GTX 1080 Ti\nGPU 1: GeForce GTX 1080 Ti\nNvidia driver version: 396.37\ncuDNN version: Probably one of the following:\n/usr/lib/x86_64-linux-gnu/libcudnn.so.7.1.4\nVersions of relevant libraries:\n[pip3] numpy (1.13.3)\n[pip3] numpydoc (0.7.0)\n[pip3] torch (0.4.0)\n[pip3] torchfile (0.1.0)\n[pip3] torchtext (0.2.3)\n[pip3] torchvision (0.2.0)\n[conda] cuda80                    1.0                  h205658b_0    pytorch\n[conda] cuda90                    1.0                  h6433d27_0    pytorch\n[conda] cuda91                    1.0                  h4c16780_0    soumith\n[conda] magma-cuda80              2.1.0                         5    soumith\n[conda] magma-cuda91              2.3.0                         1    soumith\n[conda] nccl2                     1.0                           0    soumith\n[conda] pytorch                   0.4.0           py36_cuda9.1.85_cudnn7.1.2_1  [cuda91]  pytorch\n[conda] torchfile                 0.1.0                     \n[conda] torchtext                 0.2.3                     \n[conda] torchvision               0.2.0            py36h17b6947_1    pytorch", "body": "## Issue description\r\n\r\nCalling load_state_dict() to load a pre-trained PyTorch-0.3 model that uses `weight_norm(..., dim=None)` leads to mismatched tensor `XXX_g` dimension error: torch.Size([]) while torch.Size([1]) expected.\r\n\r\nSource [issue](https://github.com/jnhwkim/ban-vqa/issues/7)\r\n\r\n## Code example\r\n\r\nIn the weight_norm.py:\r\n```\r\ndef _norm(p, dim):\r\n    \"\"\"computes the norm over all dimensions except dim\"\"\"\r\n    if dim is None:\r\n         return p.norm()  # returns 0-dim scalar tensor in v0.4 but 1-dim in v0.3\r\n    ...\r\n```\r\n\r\n`return p.norm().reshape(1)` feels like a backward compatible workaround to return a 1-dim tensor as previous versions.\r\n\r\n## System Info\r\n\r\nCollecting environment information...\r\nPyTorch version: 0.4.0\r\nIs debug build: No\r\nCUDA used to build PyTorch: 9.1.85\r\n\r\nOS: Ubuntu 16.04.3 LTS\r\nGCC version: (Ubuntu 5.4.0-6ubuntu1~16.04.10) 5.4.0 20160609\r\nCMake version: version 3.5.0\r\n\r\nPython version: 3.6\r\nIs CUDA available: Yes\r\nCUDA runtime version: 9.2.148\r\nGPU models and configuration: \r\nGPU 0: GeForce GTX 1080 Ti\r\nGPU 1: GeForce GTX 1080 Ti\r\n\r\nNvidia driver version: 396.37\r\ncuDNN version: Probably one of the following:\r\n/usr/lib/x86_64-linux-gnu/libcudnn.so.7.1.4\r\n\r\nVersions of relevant libraries:\r\n[pip3] numpy (1.13.3)\r\n[pip3] numpydoc (0.7.0)\r\n[pip3] torch (0.4.0)\r\n[pip3] torchfile (0.1.0)\r\n[pip3] torchtext (0.2.3)\r\n[pip3] torchvision (0.2.0)\r\n[conda] cuda80                    1.0                  h205658b_0    pytorch\r\n[conda] cuda90                    1.0                  h6433d27_0    pytorch\r\n[conda] cuda91                    1.0                  h4c16780_0    soumith\r\n[conda] magma-cuda80              2.1.0                         5    soumith\r\n[conda] magma-cuda91              2.3.0                         1    soumith\r\n[conda] nccl2                     1.0                           0    soumith\r\n[conda] pytorch                   0.4.0           py36_cuda9.1.85_cudnn7.1.2_1  [cuda91]  pytorch\r\n[conda] torchfile                 0.1.0                     <pip>\r\n[conda] torchtext                 0.2.3                     <pip>\r\n[conda] torchvision               0.2.0            py36h17b6947_1    pytorch"}