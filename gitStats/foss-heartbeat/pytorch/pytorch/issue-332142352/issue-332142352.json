{"url": "https://api.github.com/repos/pytorch/pytorch/issues/8443", "repository_url": "https://api.github.com/repos/pytorch/pytorch", "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/8443/labels{/name}", "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/8443/comments", "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/8443/events", "html_url": "https://github.com/pytorch/pytorch/issues/8443", "id": 332142352, "node_id": "MDU6SXNzdWUzMzIxNDIzNTI=", "number": 8443, "title": "[JIT] Better support tensor constructors (e.g. zeros, ones) under tracing", "user": {"login": "jamesr66a", "id": 4685384, "node_id": "MDQ6VXNlcjQ2ODUzODQ=", "avatar_url": "https://avatars2.githubusercontent.com/u/4685384?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jamesr66a", "html_url": "https://github.com/jamesr66a", "followers_url": "https://api.github.com/users/jamesr66a/followers", "following_url": "https://api.github.com/users/jamesr66a/following{/other_user}", "gists_url": "https://api.github.com/users/jamesr66a/gists{/gist_id}", "starred_url": "https://api.github.com/users/jamesr66a/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jamesr66a/subscriptions", "organizations_url": "https://api.github.com/users/jamesr66a/orgs", "repos_url": "https://api.github.com/users/jamesr66a/repos", "events_url": "https://api.github.com/users/jamesr66a/events{/privacy}", "received_events_url": "https://api.github.com/users/jamesr66a/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 679953983, "node_id": "MDU6TGFiZWw2Nzk5NTM5ODM=", "url": "https://api.github.com/repos/pytorch/pytorch/labels/jit", "name": "jit", "color": "c5def5", "default": false}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-06-13T20:01:25Z", "updated_at": "2018-06-28T23:12:31Z", "closed_at": "2018-06-28T23:12:31Z", "author_association": "CONTRIBUTOR", "body_html": "<p>Example code:</p>\n<pre><code>import torch\n\ndef test_ctors(x):\n    y = torch.zeros(x.size(0))\n    return y\n\ntraced = torch.jit.trace(torch.rand(3, 4, 5))(test_ctors)\nprint(traced.__getattr__('forward').graph)\n</code></pre>\n<p>Fails with:</p>\n<pre><code>Traceback (most recent call last):\n  File \"constructors.py\", line 7, in &lt;module&gt;\n    traced = torch.jit.trace(torch.rand(3, 4, 5))(test_ctors)\n  File \"/Users/jamesreed/onnx-fairseq/pytorch/torch/jit/__init__.py\", line 308, in wrapper\n    return torch._C.GraphExecutor(func, args, **executor_options)\nRuntimeError: /Users/jamesreed/onnx-fairseq/pytorch/torch/csrc/jit/tracer.h:150: getTracingState: Assertion `state` failed.\n</code></pre>\n<p>Inventory of ops like this (feel free to add more):</p>\n<ul class=\"contains-task-list\">\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\" checked=\"\"> zeros</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\" checked=\"\"> ones</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\" checked=\"\"> arange</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\" checked=\"\"> randn_like</li>\n</ul>", "body_text": "Example code:\nimport torch\n\ndef test_ctors(x):\n    y = torch.zeros(x.size(0))\n    return y\n\ntraced = torch.jit.trace(torch.rand(3, 4, 5))(test_ctors)\nprint(traced.__getattr__('forward').graph)\n\nFails with:\nTraceback (most recent call last):\n  File \"constructors.py\", line 7, in <module>\n    traced = torch.jit.trace(torch.rand(3, 4, 5))(test_ctors)\n  File \"/Users/jamesreed/onnx-fairseq/pytorch/torch/jit/__init__.py\", line 308, in wrapper\n    return torch._C.GraphExecutor(func, args, **executor_options)\nRuntimeError: /Users/jamesreed/onnx-fairseq/pytorch/torch/csrc/jit/tracer.h:150: getTracingState: Assertion `state` failed.\n\nInventory of ops like this (feel free to add more):\n\n zeros\n ones\n arange\n randn_like", "body": "Example code:\r\n\r\n```\r\nimport torch\r\n\r\ndef test_ctors(x):\r\n    y = torch.zeros(x.size(0))\r\n    return y\r\n\r\ntraced = torch.jit.trace(torch.rand(3, 4, 5))(test_ctors)\r\nprint(traced.__getattr__('forward').graph)\r\n```\r\n\r\nFails with:\r\n\r\n```\r\nTraceback (most recent call last):\r\n  File \"constructors.py\", line 7, in <module>\r\n    traced = torch.jit.trace(torch.rand(3, 4, 5))(test_ctors)\r\n  File \"/Users/jamesreed/onnx-fairseq/pytorch/torch/jit/__init__.py\", line 308, in wrapper\r\n    return torch._C.GraphExecutor(func, args, **executor_options)\r\nRuntimeError: /Users/jamesreed/onnx-fairseq/pytorch/torch/csrc/jit/tracer.h:150: getTracingState: Assertion `state` failed.\r\n```\r\n\r\nInventory of ops like this (feel free to add more):\r\n- [x] zeros\r\n- [x] ones\r\n- [x] arange\r\n- [x] randn_like"}