{"url": "https://api.github.com/repos/pytorch/pytorch/issues/4217", "repository_url": "https://api.github.com/repos/pytorch/pytorch", "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/4217/labels{/name}", "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/4217/comments", "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/4217/events", "html_url": "https://github.com/pytorch/pytorch/issues/4217", "id": 282739000, "node_id": "MDU6SXNzdWUyODI3MzkwMDA=", "number": 4217, "title": "btrifact fails with Variable arguments", "user": {"login": "jcjohnson", "id": 2718714, "node_id": "MDQ6VXNlcjI3MTg3MTQ=", "avatar_url": "https://avatars2.githubusercontent.com/u/2718714?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jcjohnson", "html_url": "https://github.com/jcjohnson", "followers_url": "https://api.github.com/users/jcjohnson/followers", "following_url": "https://api.github.com/users/jcjohnson/following{/other_user}", "gists_url": "https://api.github.com/users/jcjohnson/gists{/gist_id}", "starred_url": "https://api.github.com/users/jcjohnson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jcjohnson/subscriptions", "organizations_url": "https://api.github.com/users/jcjohnson/orgs", "repos_url": "https://api.github.com/users/jcjohnson/repos", "events_url": "https://api.github.com/users/jcjohnson/events{/privacy}", "received_events_url": "https://api.github.com/users/jcjohnson/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-12-18T00:51:19Z", "updated_at": "2017-12-23T19:08:29Z", "closed_at": "2017-12-23T19:08:29Z", "author_association": "CONTRIBUTOR", "body_html": "<p>I'm having trouble getting <code>torch.btrifact</code> to work with Variable arguments; either I'm doing something wrong or there's a bug. The trouble seems to be with the <code>info</code> argument; there is no plausible type I can think of for <code>info</code> that works in the Variable case.</p>\n<p>With Tensors, we can either ignore the <code>info</code> argument or set it to be an <code>IntTensor</code>:</p>\n<div class=\"highlight highlight-source-python\"><pre><span class=\"pl-k\">import</span> torch\n<span class=\"pl-k\">from</span> torch.autograd <span class=\"pl-k\">import</span> Variable\n\nN, M <span class=\"pl-k\">=</span> <span class=\"pl-c1\">2</span>, <span class=\"pl-c1\">3</span>\nA <span class=\"pl-k\">=</span> torch.randn(N, M, M)\n\n<span class=\"pl-c\"><span class=\"pl-c\">#</span> A as FloatTensor, no info</span>\n<span class=\"pl-c1\">A_LU</span>, pivots <span class=\"pl-k\">=</span> torch.btrifact(A)\n\n<span class=\"pl-c\"><span class=\"pl-c\">#</span> A as FloatTensor, info as IntTensor</span>\ninfo <span class=\"pl-k\">=</span> torch.IntTensor(M)\n<span class=\"pl-c1\">A_LU</span>, pivots <span class=\"pl-k\">=</span> torch.btrifact(A, <span class=\"pl-v\">info</span><span class=\"pl-k\">=</span>info)</pre></div>\n<p>Making A a Variable and not passing <code>info</code> crashes:</p>\n<div class=\"highlight highlight-source-python\"><pre>A_var <span class=\"pl-k\">=</span> Variable(A)\n<span class=\"pl-c1\">A_LU</span>, pivots <span class=\"pl-k\">=</span> torch.btrifact(A_var)\n<span class=\"pl-c\"><span class=\"pl-c\">#</span> RuntimeError: Expected a Tensor of type Variable[torch.FloatTensor]</span>\n<span class=\"pl-c\"><span class=\"pl-c\">#</span> but found an undefined Tensor for argument #1 'info'</span></pre></div>\n<p>Making A a Variable and <code>info</code> a <code>Variable[IntTensor]</code> crashes:</p>\n<div class=\"highlight highlight-source-python\"><pre>A_var <span class=\"pl-k\">=</span> Variable(A)\ninfo <span class=\"pl-k\">=</span> Variable(torch.IntTensor(M))\n<span class=\"pl-c1\">A_LU</span>, pivots <span class=\"pl-k\">=</span> torch.btrifact(A_var, <span class=\"pl-v\">info</span><span class=\"pl-k\">=</span>info)\n<span class=\"pl-c\"><span class=\"pl-c\">#</span> RuntimeError: Expected object of type Variable[torch.FloatTensor]</span>\n<span class=\"pl-c\"><span class=\"pl-c\">#</span> but found type Variable[torch.IntTensor] for argument #1 'info'</span></pre></div>\n<p>Making A a Variable and <code>info</code> a <code>Variable[FloatTensor]</code> crashes:</p>\n<div class=\"highlight highlight-source-python\"><pre>A_var <span class=\"pl-k\">=</span> Variable(A)\ninfo <span class=\"pl-k\">=</span> Variable(torch.FloatTensor(M))\n<span class=\"pl-c1\">A_LU</span>, pivots <span class=\"pl-k\">=</span> torch.btrifact(A_var, <span class=\"pl-v\">info</span><span class=\"pl-k\">=</span>info)\n<span class=\"pl-c\"><span class=\"pl-c\">#</span> RuntimeError: Expected object of type torch.IntTensor</span>\n<span class=\"pl-c\"><span class=\"pl-c\">#</span> but found type torch.FloatTensor for argument #1 'info'</span></pre></div>\n<p>Going crazy and making A a Variable and <code>info</code> an <code>IntTensor</code> also crashes:</p>\n<div class=\"highlight highlight-source-python\"><pre>A_var <span class=\"pl-k\">=</span> Variable(A)\ninfo <span class=\"pl-k\">=</span> torch.IntTensor(M)\n<span class=\"pl-c1\">A_LU</span>, pivots <span class=\"pl-k\">=</span> torch.btrifact(A_var, <span class=\"pl-v\">info</span><span class=\"pl-k\">=</span>info)\n<span class=\"pl-c\"><span class=\"pl-c\">#</span> RuntimeError: btrifact(): argument 'info' must be Variable, not torch.IntTensor</span></pre></div>\n<p>(Full test script here: <a href=\"https://gist.github.com/jcjohnson/0ae6b433e07d0117016361d8ed9b0410\">https://gist.github.com/jcjohnson/0ae6b433e07d0117016361d8ed9b0410</a>)</p>\n<p>Is this a bug, or am I misunderstanding how <code>torch.btrifact</code> should be used?</p>\n<p>I'm using PyTorch version 0.3.0.post4 installed via pip with Python 3.5.2 on Ubuntu 16.04.</p>", "body_text": "I'm having trouble getting torch.btrifact to work with Variable arguments; either I'm doing something wrong or there's a bug. The trouble seems to be with the info argument; there is no plausible type I can think of for info that works in the Variable case.\nWith Tensors, we can either ignore the info argument or set it to be an IntTensor:\nimport torch\nfrom torch.autograd import Variable\n\nN, M = 2, 3\nA = torch.randn(N, M, M)\n\n# A as FloatTensor, no info\nA_LU, pivots = torch.btrifact(A)\n\n# A as FloatTensor, info as IntTensor\ninfo = torch.IntTensor(M)\nA_LU, pivots = torch.btrifact(A, info=info)\nMaking A a Variable and not passing info crashes:\nA_var = Variable(A)\nA_LU, pivots = torch.btrifact(A_var)\n# RuntimeError: Expected a Tensor of type Variable[torch.FloatTensor]\n# but found an undefined Tensor for argument #1 'info'\nMaking A a Variable and info a Variable[IntTensor] crashes:\nA_var = Variable(A)\ninfo = Variable(torch.IntTensor(M))\nA_LU, pivots = torch.btrifact(A_var, info=info)\n# RuntimeError: Expected object of type Variable[torch.FloatTensor]\n# but found type Variable[torch.IntTensor] for argument #1 'info'\nMaking A a Variable and info a Variable[FloatTensor] crashes:\nA_var = Variable(A)\ninfo = Variable(torch.FloatTensor(M))\nA_LU, pivots = torch.btrifact(A_var, info=info)\n# RuntimeError: Expected object of type torch.IntTensor\n# but found type torch.FloatTensor for argument #1 'info'\nGoing crazy and making A a Variable and info an IntTensor also crashes:\nA_var = Variable(A)\ninfo = torch.IntTensor(M)\nA_LU, pivots = torch.btrifact(A_var, info=info)\n# RuntimeError: btrifact(): argument 'info' must be Variable, not torch.IntTensor\n(Full test script here: https://gist.github.com/jcjohnson/0ae6b433e07d0117016361d8ed9b0410)\nIs this a bug, or am I misunderstanding how torch.btrifact should be used?\nI'm using PyTorch version 0.3.0.post4 installed via pip with Python 3.5.2 on Ubuntu 16.04.", "body": "I'm having trouble getting `torch.btrifact` to work with Variable arguments; either I'm doing something wrong or there's a bug. The trouble seems to be with the `info` argument; there is no plausible type I can think of for `info` that works in the Variable case.\r\n\r\nWith Tensors, we can either ignore the `info` argument or set it to be an `IntTensor`:\r\n\r\n```python\r\nimport torch\r\nfrom torch.autograd import Variable\r\n\r\nN, M = 2, 3\r\nA = torch.randn(N, M, M)\r\n\r\n# A as FloatTensor, no info\r\nA_LU, pivots = torch.btrifact(A)\r\n\r\n# A as FloatTensor, info as IntTensor\r\ninfo = torch.IntTensor(M)\r\nA_LU, pivots = torch.btrifact(A, info=info)\r\n```\r\n\r\nMaking A a Variable and not passing `info` crashes:\r\n```python\r\nA_var = Variable(A)\r\nA_LU, pivots = torch.btrifact(A_var)\r\n# RuntimeError: Expected a Tensor of type Variable[torch.FloatTensor]\r\n# but found an undefined Tensor for argument #1 'info'\r\n```\r\n\r\nMaking A a Variable and `info` a `Variable[IntTensor]` crashes:\r\n```python\r\nA_var = Variable(A)\r\ninfo = Variable(torch.IntTensor(M))\r\nA_LU, pivots = torch.btrifact(A_var, info=info)\r\n# RuntimeError: Expected object of type Variable[torch.FloatTensor]\r\n# but found type Variable[torch.IntTensor] for argument #1 'info'\r\n```\r\n\r\nMaking A a Variable and `info` a `Variable[FloatTensor]` crashes:\r\n```python\r\nA_var = Variable(A)\r\ninfo = Variable(torch.FloatTensor(M))\r\nA_LU, pivots = torch.btrifact(A_var, info=info)\r\n# RuntimeError: Expected object of type torch.IntTensor\r\n# but found type torch.FloatTensor for argument #1 'info'\r\n```\r\n\r\nGoing crazy and making A a Variable and `info` an `IntTensor` also crashes:\r\n```python\r\nA_var = Variable(A)\r\ninfo = torch.IntTensor(M)\r\nA_LU, pivots = torch.btrifact(A_var, info=info)\r\n# RuntimeError: btrifact(): argument 'info' must be Variable, not torch.IntTensor\r\n```\r\n(Full test script here: https://gist.github.com/jcjohnson/0ae6b433e07d0117016361d8ed9b0410)\r\n\r\nIs this a bug, or am I misunderstanding how `torch.btrifact` should be used?\r\n\r\nI'm using PyTorch version 0.3.0.post4 installed via pip with Python 3.5.2 on Ubuntu 16.04."}