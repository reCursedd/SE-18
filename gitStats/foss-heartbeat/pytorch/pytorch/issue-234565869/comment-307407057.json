{"url": "https://api.github.com/repos/pytorch/pytorch/issues/comments/307407057", "html_url": "https://github.com/pytorch/pytorch/issues/1756#issuecomment-307407057", "issue_url": "https://api.github.com/repos/pytorch/pytorch/issues/1756", "id": 307407057, "node_id": "MDEyOklzc3VlQ29tbWVudDMwNzQwNzA1Nw==", "user": {"login": "gchanan", "id": 3768583, "node_id": "MDQ6VXNlcjM3Njg1ODM=", "avatar_url": "https://avatars2.githubusercontent.com/u/3768583?v=4", "gravatar_id": "", "url": "https://api.github.com/users/gchanan", "html_url": "https://github.com/gchanan", "followers_url": "https://api.github.com/users/gchanan/followers", "following_url": "https://api.github.com/users/gchanan/following{/other_user}", "gists_url": "https://api.github.com/users/gchanan/gists{/gist_id}", "starred_url": "https://api.github.com/users/gchanan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/gchanan/subscriptions", "organizations_url": "https://api.github.com/users/gchanan/orgs", "repos_url": "https://api.github.com/users/gchanan/repos", "events_url": "https://api.github.com/users/gchanan/events{/privacy}", "received_events_url": "https://api.github.com/users/gchanan/received_events", "type": "User", "site_admin": false}, "created_at": "2017-06-09T14:39:45Z", "updated_at": "2017-06-09T14:39:45Z", "author_association": "CONTRIBUTOR", "body_html": "<p>agreed.  I'm not sure the best way to implement <code>torch.dot</code> though -- I don't really want to break luatorch backwards compat, but adding to cwrap seems like overkill.  Maybe add a flatten param to the TH/THC functions and have lua pass true and python pass false?</p>", "body_text": "agreed.  I'm not sure the best way to implement torch.dot though -- I don't really want to break luatorch backwards compat, but adding to cwrap seems like overkill.  Maybe add a flatten param to the TH/THC functions and have lua pass true and python pass false?", "body": "agreed.  I'm not sure the best way to implement `torch.dot` though -- I don't really want to break luatorch backwards compat, but adding to cwrap seems like overkill.  Maybe add a flatten param to the TH/THC functions and have lua pass true and python pass false?"}