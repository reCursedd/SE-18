{"url": "https://api.github.com/repos/pytorch/pytorch/issues/11499", "repository_url": "https://api.github.com/repos/pytorch/pytorch", "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/11499/labels{/name}", "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/11499/comments", "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/11499/events", "html_url": "https://github.com/pytorch/pytorch/issues/11499", "id": 358846809, "node_id": "MDU6SXNzdWUzNTg4NDY4MDk=", "number": 11499, "title": "Unintuitive error message when loading state into incompatibly-sized model", "user": {"login": "hughperkins", "id": 123560, "node_id": "MDQ6VXNlcjEyMzU2MA==", "avatar_url": "https://avatars2.githubusercontent.com/u/123560?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hughperkins", "html_url": "https://github.com/hughperkins", "followers_url": "https://api.github.com/users/hughperkins/followers", "following_url": "https://api.github.com/users/hughperkins/following{/other_user}", "gists_url": "https://api.github.com/users/hughperkins/gists{/gist_id}", "starred_url": "https://api.github.com/users/hughperkins/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hughperkins/subscriptions", "organizations_url": "https://api.github.com/users/hughperkins/orgs", "repos_url": "https://api.github.com/users/hughperkins/repos", "events_url": "https://api.github.com/users/hughperkins/events{/privacy}", "received_events_url": "https://api.github.com/users/hughperkins/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 443483881, "node_id": "MDU6TGFiZWw0NDM0ODM4ODE=", "url": "https://api.github.com/repos/pytorch/pytorch/labels/todo", "name": "todo", "color": "c2e0c6", "default": false}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2018-09-11T00:55:14Z", "updated_at": "2018-09-17T18:06:12Z", "closed_at": null, "author_association": "CONTRIBUTOR", "body_html": "<h2>Issue description</h2>\n<p>When I run:</p>\n<pre><code>import torch\nfrom torch import nn\n\nclass Model(nn.Module):\n    def __init__(self, size):\n        super().__init__()\n        self.h = nn.Linear(size, size)\n\nmodel = Model(size=3)\nstate = model.state_dict()\n\nmodel_new = Model(size=5)\nmodel_new.load_state_dict(state)\n</code></pre>\n<p>What I expect to happen: error message like \"size mismatch for h.weight: copying a param of torch.Size([3, 3]) from checkpoint, where the shape is torch.Size([5, 5]) in current model.\"</p>\n<p>What actually happens: the same error message, but with the sizes swapped:</p>\n<pre><code>\tsize mismatch for h.weight: copying a param of torch.Size([5, 5]) from checkpoint, where the shape is torch.Size([3, 3]) in current model.\n\tsize mismatch for h.bias: copying a param of torch.Size([5]) from checkpoint, where the shape is torch.Size([3]) in current model.\n</code></pre>\n<p>I think the sizes are the wrong way around, or perhaps ambiguously labelled. Personally, I spent a ton of time tracking down why my checkpoint was incorrectly dimensioned (it was showing with a dimension of a zillion), when in fact it was my current model that had the zillion-sized dimension in.</p>\n<h2>Code example</h2>\n<p>See Issue Description above.</p>\n<h2>System Info</h2>\n<pre><code>PyTorch version: 0.4.1\nIs debug build: No\nCUDA used to build PyTorch: 9.0.176\n\nOS: Ubuntu 16.04.5 LTS\nGCC version: (Ubuntu 5.4.0-6ubuntu1~16.04.10) 5.4.0 20160609\nCMake version: version 3.5.1\n\nPython version: 3.6\nIs CUDA available: Yes\nCUDA runtime version: 9.0.176\nGPU models and configuration: GPU 0: Tesla M60\nNvidia driver version: 384.130\ncuDNN version: Probably one of the following:\n/usr/lib/x86_64-linux-gnu/libcudnn.so.5.1.10\n/usr/lib/x86_64-linux-gnu/libcudnn.so.6.0.21\n/usr/lib/x86_64-linux-gnu/libcudnn.so.7.0.3\n/usr/lib/x86_64-linux-gnu/libcudnn_static_v5.a\n/usr/lib/x86_64-linux-gnu/libcudnn_static_v6.a\n/usr/lib/x86_64-linux-gnu/libcudnn_static_v7.a\n\nVersions of relevant libraries:\n[pip] numpy (1.14.3)\n[pip] torch (0.4.1)\n[pip] torchtext (0.2.3)\n[pip] torchvision (0.2.1)\n[conda] pytorch                   0.4.1           py36_cuda9.0.176_cudnn7.1.2_1    pytorch\n[conda] torchtext                 0.2.3                     &lt;pip&gt;\n[conda] torchvision               0.2.1                    py36_1    pytorch\n</code></pre>", "body_text": "Issue description\nWhen I run:\nimport torch\nfrom torch import nn\n\nclass Model(nn.Module):\n    def __init__(self, size):\n        super().__init__()\n        self.h = nn.Linear(size, size)\n\nmodel = Model(size=3)\nstate = model.state_dict()\n\nmodel_new = Model(size=5)\nmodel_new.load_state_dict(state)\n\nWhat I expect to happen: error message like \"size mismatch for h.weight: copying a param of torch.Size([3, 3]) from checkpoint, where the shape is torch.Size([5, 5]) in current model.\"\nWhat actually happens: the same error message, but with the sizes swapped:\n\tsize mismatch for h.weight: copying a param of torch.Size([5, 5]) from checkpoint, where the shape is torch.Size([3, 3]) in current model.\n\tsize mismatch for h.bias: copying a param of torch.Size([5]) from checkpoint, where the shape is torch.Size([3]) in current model.\n\nI think the sizes are the wrong way around, or perhaps ambiguously labelled. Personally, I spent a ton of time tracking down why my checkpoint was incorrectly dimensioned (it was showing with a dimension of a zillion), when in fact it was my current model that had the zillion-sized dimension in.\nCode example\nSee Issue Description above.\nSystem Info\nPyTorch version: 0.4.1\nIs debug build: No\nCUDA used to build PyTorch: 9.0.176\n\nOS: Ubuntu 16.04.5 LTS\nGCC version: (Ubuntu 5.4.0-6ubuntu1~16.04.10) 5.4.0 20160609\nCMake version: version 3.5.1\n\nPython version: 3.6\nIs CUDA available: Yes\nCUDA runtime version: 9.0.176\nGPU models and configuration: GPU 0: Tesla M60\nNvidia driver version: 384.130\ncuDNN version: Probably one of the following:\n/usr/lib/x86_64-linux-gnu/libcudnn.so.5.1.10\n/usr/lib/x86_64-linux-gnu/libcudnn.so.6.0.21\n/usr/lib/x86_64-linux-gnu/libcudnn.so.7.0.3\n/usr/lib/x86_64-linux-gnu/libcudnn_static_v5.a\n/usr/lib/x86_64-linux-gnu/libcudnn_static_v6.a\n/usr/lib/x86_64-linux-gnu/libcudnn_static_v7.a\n\nVersions of relevant libraries:\n[pip] numpy (1.14.3)\n[pip] torch (0.4.1)\n[pip] torchtext (0.2.3)\n[pip] torchvision (0.2.1)\n[conda] pytorch                   0.4.1           py36_cuda9.0.176_cudnn7.1.2_1    pytorch\n[conda] torchtext                 0.2.3                     <pip>\n[conda] torchvision               0.2.1                    py36_1    pytorch", "body": "## Issue description\r\n\r\nWhen I run:\r\n\r\n```\r\nimport torch\r\nfrom torch import nn\r\n\r\nclass Model(nn.Module):\r\n    def __init__(self, size):\r\n        super().__init__()\r\n        self.h = nn.Linear(size, size)\r\n\r\nmodel = Model(size=3)\r\nstate = model.state_dict()\r\n\r\nmodel_new = Model(size=5)\r\nmodel_new.load_state_dict(state)\r\n```\r\n\r\nWhat I expect to happen: error message like \"size mismatch for h.weight: copying a param of torch.Size([3, 3]) from checkpoint, where the shape is torch.Size([5, 5]) in current model.\"\r\n\r\nWhat actually happens: the same error message, but with the sizes swapped:\r\n\r\n```\r\n\tsize mismatch for h.weight: copying a param of torch.Size([5, 5]) from checkpoint, where the shape is torch.Size([3, 3]) in current model.\r\n\tsize mismatch for h.bias: copying a param of torch.Size([5]) from checkpoint, where the shape is torch.Size([3]) in current model.\r\n```\r\n\r\nI think the sizes are the wrong way around, or perhaps ambiguously labelled. Personally, I spent a ton of time tracking down why my checkpoint was incorrectly dimensioned (it was showing with a dimension of a zillion), when in fact it was my current model that had the zillion-sized dimension in.\r\n\r\n## Code example\r\n\r\nSee Issue Description above.\r\n\r\n## System Info\r\n\r\n```\r\nPyTorch version: 0.4.1\r\nIs debug build: No\r\nCUDA used to build PyTorch: 9.0.176\r\n\r\nOS: Ubuntu 16.04.5 LTS\r\nGCC version: (Ubuntu 5.4.0-6ubuntu1~16.04.10) 5.4.0 20160609\r\nCMake version: version 3.5.1\r\n\r\nPython version: 3.6\r\nIs CUDA available: Yes\r\nCUDA runtime version: 9.0.176\r\nGPU models and configuration: GPU 0: Tesla M60\r\nNvidia driver version: 384.130\r\ncuDNN version: Probably one of the following:\r\n/usr/lib/x86_64-linux-gnu/libcudnn.so.5.1.10\r\n/usr/lib/x86_64-linux-gnu/libcudnn.so.6.0.21\r\n/usr/lib/x86_64-linux-gnu/libcudnn.so.7.0.3\r\n/usr/lib/x86_64-linux-gnu/libcudnn_static_v5.a\r\n/usr/lib/x86_64-linux-gnu/libcudnn_static_v6.a\r\n/usr/lib/x86_64-linux-gnu/libcudnn_static_v7.a\r\n\r\nVersions of relevant libraries:\r\n[pip] numpy (1.14.3)\r\n[pip] torch (0.4.1)\r\n[pip] torchtext (0.2.3)\r\n[pip] torchvision (0.2.1)\r\n[conda] pytorch                   0.4.1           py36_cuda9.0.176_cudnn7.1.2_1    pytorch\r\n[conda] torchtext                 0.2.3                     <pip>\r\n[conda] torchvision               0.2.1                    py36_1    pytorch\r\n```\r\n"}