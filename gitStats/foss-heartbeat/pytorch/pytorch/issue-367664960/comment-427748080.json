{"url": "https://api.github.com/repos/pytorch/pytorch/issues/comments/427748080", "html_url": "https://github.com/pytorch/pytorch/pull/12447#issuecomment-427748080", "issue_url": "https://api.github.com/repos/pytorch/pytorch/issues/12447", "id": 427748080, "node_id": "MDEyOklzc3VlQ29tbWVudDQyNzc0ODA4MA==", "user": {"login": "t-vi", "id": 20787943, "node_id": "MDQ6VXNlcjIwNzg3OTQz", "avatar_url": "https://avatars2.githubusercontent.com/u/20787943?v=4", "gravatar_id": "", "url": "https://api.github.com/users/t-vi", "html_url": "https://github.com/t-vi", "followers_url": "https://api.github.com/users/t-vi/followers", "following_url": "https://api.github.com/users/t-vi/following{/other_user}", "gists_url": "https://api.github.com/users/t-vi/gists{/gist_id}", "starred_url": "https://api.github.com/users/t-vi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/t-vi/subscriptions", "organizations_url": "https://api.github.com/users/t-vi/orgs", "repos_url": "https://api.github.com/users/t-vi/repos", "events_url": "https://api.github.com/users/t-vi/events{/privacy}", "received_events_url": "https://api.github.com/users/t-vi/received_events", "type": "User", "site_admin": false}, "created_at": "2018-10-08T07:54:51Z", "updated_at": "2018-10-08T07:54:51Z", "author_association": "CONTRIBUTOR", "body_html": "<p>On the naming: Indeed, I agree that matrix_diag is a not-so-nice name. I would have called that <code>diagonal_tensor</code> if I had to come up with my own name. As such I'll be more than happy to change the name.</p>\n<p>On the API: I think that diagonal and this function should match, this is why I took the last dimension. I would expect this to cover the by far most common case.<br>\nWhen I implemented diagonal, I thought it was strange to always put the diagonal at the end, but that is what numpy did. I haven't, however, heard anyone complain, so adding another parameter might be overthinking the applicability of this function. One could always add a \"source dimension\" keyword argument later (unless that does bad things to the C++ API). Again, I'll gladly add an argument (and would suggest to do the same in torch.diagonal).</p>", "body_text": "On the naming: Indeed, I agree that matrix_diag is a not-so-nice name. I would have called that diagonal_tensor if I had to come up with my own name. As such I'll be more than happy to change the name.\nOn the API: I think that diagonal and this function should match, this is why I took the last dimension. I would expect this to cover the by far most common case.\nWhen I implemented diagonal, I thought it was strange to always put the diagonal at the end, but that is what numpy did. I haven't, however, heard anyone complain, so adding another parameter might be overthinking the applicability of this function. One could always add a \"source dimension\" keyword argument later (unless that does bad things to the C++ API). Again, I'll gladly add an argument (and would suggest to do the same in torch.diagonal).", "body": "On the naming: Indeed, I agree that matrix_diag is a not-so-nice name. I would have called that `diagonal_tensor` if I had to come up with my own name. As such I'll be more than happy to change the name.\r\n\r\nOn the API: I think that diagonal and this function should match, this is why I took the last dimension. I would expect this to cover the by far most common case.\r\nWhen I implemented diagonal, I thought it was strange to always put the diagonal at the end, but that is what numpy did. I haven't, however, heard anyone complain, so adding another parameter might be overthinking the applicability of this function. One could always add a \"source dimension\" keyword argument later (unless that does bad things to the C++ API). Again, I'll gladly add an argument (and would suggest to do the same in torch.diagonal).\r\n"}