{"url": "https://api.github.com/repos/pytorch/pytorch/issues/2726", "repository_url": "https://api.github.com/repos/pytorch/pytorch", "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/2726/labels{/name}", "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/2726/comments", "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/2726/events", "html_url": "https://github.com/pytorch/pytorch/pull/2726", "id": 257478179, "node_id": "MDExOlB1bGxSZXF1ZXN0MTQwODk3ODc3", "number": 2726, "title": "fix bug in autograd type() for non-default GPU input", "user": {"login": "soumith", "id": 1310570, "node_id": "MDQ6VXNlcjEzMTA1NzA=", "avatar_url": "https://avatars0.githubusercontent.com/u/1310570?v=4", "gravatar_id": "", "url": "https://api.github.com/users/soumith", "html_url": "https://github.com/soumith", "followers_url": "https://api.github.com/users/soumith/followers", "following_url": "https://api.github.com/users/soumith/following{/other_user}", "gists_url": "https://api.github.com/users/soumith/gists{/gist_id}", "starred_url": "https://api.github.com/users/soumith/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/soumith/subscriptions", "organizations_url": "https://api.github.com/users/soumith/orgs", "repos_url": "https://api.github.com/users/soumith/repos", "events_url": "https://api.github.com/users/soumith/events{/privacy}", "received_events_url": "https://api.github.com/users/soumith/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2017-09-13T18:29:54Z", "updated_at": "2017-09-13T19:39:52Z", "closed_at": "2017-09-13T19:33:38Z", "author_association": "MEMBER", "pull_request": {"url": "https://api.github.com/repos/pytorch/pytorch/pulls/2726", "html_url": "https://github.com/pytorch/pytorch/pull/2726", "diff_url": "https://github.com/pytorch/pytorch/pull/2726.diff", "patch_url": "https://github.com/pytorch/pytorch/pull/2726.patch"}, "body_html": "<p>Simple failure case where gradients of xv would be on device 0 in master, instead of device 1.</p>\n<div class=\"highlight highlight-source-python\"><pre><span class=\"pl-k\">import</span> torch\n<span class=\"pl-k\">from</span> torch.autograd <span class=\"pl-k\">import</span> Variable\n\nx <span class=\"pl-k\">=</span> torch.randn(<span class=\"pl-c1\">10</span>).cuda(<span class=\"pl-c1\">1</span>)\nxv <span class=\"pl-k\">=</span> Variable(x, <span class=\"pl-v\">requires_grad</span><span class=\"pl-k\">=</span><span class=\"pl-c1\">True</span>)\ny <span class=\"pl-k\">=</span> xv.cpu()\ny.sum().backward()\n\n<span class=\"pl-c1\">print</span>(xv.grad.get_device() <span class=\"pl-k\">==</span> <span class=\"pl-c1\">1</span>)</pre></div>", "body_text": "Simple failure case where gradients of xv would be on device 0 in master, instead of device 1.\nimport torch\nfrom torch.autograd import Variable\n\nx = torch.randn(10).cuda(1)\nxv = Variable(x, requires_grad=True)\ny = xv.cpu()\ny.sum().backward()\n\nprint(xv.grad.get_device() == 1)", "body": "\r\nSimple failure case where gradients of xv would be on device 0 in master, instead of device 1.\r\n\r\n```python\r\nimport torch\r\nfrom torch.autograd import Variable\r\n\r\nx = torch.randn(10).cuda(1)\r\nxv = Variable(x, requires_grad=True)\r\ny = xv.cpu()\r\ny.sum().backward()\r\n\r\nprint(xv.grad.get_device() == 1)\r\n```"}