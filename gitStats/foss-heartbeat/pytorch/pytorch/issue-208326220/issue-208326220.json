{"url": "https://api.github.com/repos/pytorch/pytorch/issues/768", "repository_url": "https://api.github.com/repos/pytorch/pytorch", "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/768/labels{/name}", "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/768/comments", "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/768/events", "html_url": "https://github.com/pytorch/pytorch/issues/768", "id": 208326220, "node_id": "MDU6SXNzdWUyMDgzMjYyMjA=", "number": 768, "title": "Feature Request: Bitwise Operations", "user": {"login": "avloss", "id": 17853685, "node_id": "MDQ6VXNlcjE3ODUzNjg1", "avatar_url": "https://avatars3.githubusercontent.com/u/17853685?v=4", "gravatar_id": "", "url": "https://api.github.com/users/avloss", "html_url": "https://github.com/avloss", "followers_url": "https://api.github.com/users/avloss/followers", "following_url": "https://api.github.com/users/avloss/following{/other_user}", "gists_url": "https://api.github.com/users/avloss/gists{/gist_id}", "starred_url": "https://api.github.com/users/avloss/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/avloss/subscriptions", "organizations_url": "https://api.github.com/users/avloss/orgs", "repos_url": "https://api.github.com/users/avloss/repos", "events_url": "https://api.github.com/users/avloss/events{/privacy}", "received_events_url": "https://api.github.com/users/avloss/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 424131849, "node_id": "MDU6TGFiZWw0MjQxMzE4NDk=", "url": "https://api.github.com/repos/pytorch/pytorch/labels/enhancement", "name": "enhancement", "color": "84b6eb", "default": true}, {"id": 443484050, "node_id": "MDU6TGFiZWw0NDM0ODQwNTA=", "url": "https://api.github.com/repos/pytorch/pytorch/labels/medium%20priority", "name": "medium priority", "color": "fbca04", "default": false}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 7, "created_at": "2017-02-17T03:41:13Z", "updated_at": "2017-05-15T17:37:03Z", "closed_at": "2017-05-15T17:36:43Z", "author_association": "NONE", "body_html": "<p>it seems that there is SOME support for bitwise operations in NumPy:<br>\n<a href=\"https://docs.scipy.org/doc/numpy/reference/generated/numpy.bitwise_xor.html\" rel=\"nofollow\">https://docs.scipy.org/doc/numpy/reference/generated/numpy.bitwise_xor.html</a><br>\nBitwise operations are also supported by CUDA:<br>\n<a href=\"https://docs.nvidia.com/cuda/cuda-c-programming-guide/#warp-shuffle-functions\" rel=\"nofollow\">https://docs.nvidia.com/cuda/cuda-c-programming-guide/#warp-shuffle-functions</a><br>\nyet, the implementation of binary operation <code>xor</code> in <code>PyTorch</code> is<br>\n<code>return (self + other).eq(1)</code><br>\nwhich takes two ByteTensor. My undertsanding is that this is inefficient, because only one Bit within every Byte of this tensor is actually encoding something. Please correct me if I'm wrong!!</p>\n<p>for the record neither TensorFlow has bitwise operations</p>", "body_text": "it seems that there is SOME support for bitwise operations in NumPy:\nhttps://docs.scipy.org/doc/numpy/reference/generated/numpy.bitwise_xor.html\nBitwise operations are also supported by CUDA:\nhttps://docs.nvidia.com/cuda/cuda-c-programming-guide/#warp-shuffle-functions\nyet, the implementation of binary operation xor in PyTorch is\nreturn (self + other).eq(1)\nwhich takes two ByteTensor. My undertsanding is that this is inefficient, because only one Bit within every Byte of this tensor is actually encoding something. Please correct me if I'm wrong!!\nfor the record neither TensorFlow has bitwise operations", "body": "it seems that there is SOME support for bitwise operations in NumPy:\r\nhttps://docs.scipy.org/doc/numpy/reference/generated/numpy.bitwise_xor.html\r\nBitwise operations are also supported by CUDA:\r\nhttps://docs.nvidia.com/cuda/cuda-c-programming-guide/#warp-shuffle-functions\r\nyet, the implementation of binary operation `xor` in `PyTorch` is \r\n`return (self + other).eq(1)`\r\nwhich takes two ByteTensor. My undertsanding is that this is inefficient, because only one Bit within every Byte of this tensor is actually encoding something. Please correct me if I'm wrong!!\r\n\r\nfor the record neither TensorFlow has bitwise operations\r\n"}