{"url": "https://api.github.com/repos/pytorch/pytorch/issues/5828", "repository_url": "https://api.github.com/repos/pytorch/pytorch", "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/5828/labels{/name}", "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/5828/comments", "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/5828/events", "html_url": "https://github.com/pytorch/pytorch/issues/5828", "id": 305796488, "node_id": "MDU6SXNzdWUzMDU3OTY0ODg=", "number": 5828, "title": "A weird possible bug about operator e.g. *=, +=.", "user": {"login": "tiger2017", "id": 11709762, "node_id": "MDQ6VXNlcjExNzA5NzYy", "avatar_url": "https://avatars2.githubusercontent.com/u/11709762?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tiger2017", "html_url": "https://github.com/tiger2017", "followers_url": "https://api.github.com/users/tiger2017/followers", "following_url": "https://api.github.com/users/tiger2017/following{/other_user}", "gists_url": "https://api.github.com/users/tiger2017/gists{/gist_id}", "starred_url": "https://api.github.com/users/tiger2017/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tiger2017/subscriptions", "organizations_url": "https://api.github.com/users/tiger2017/orgs", "repos_url": "https://api.github.com/users/tiger2017/repos", "events_url": "https://api.github.com/users/tiger2017/events{/privacy}", "received_events_url": "https://api.github.com/users/tiger2017/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 8, "created_at": "2018-03-16T04:09:47Z", "updated_at": "2018-03-16T14:29:15Z", "closed_at": "2018-03-16T09:31:07Z", "author_association": "NONE", "body_html": "<p>I found a weird bug when I used the operator e.g. *= or +=, I show the code and result as below:</p>\n<pre><code>aa = Variable(torch.FloatTensor([[1,2],[3,4]]))\nbb = aa\nbb = bb*2\nprint(bb)\nprint(aa)\n\ncc = Variable(torch.FloatTensor([[1,2],[3,4]]))\ndd = cc\ndd *= 2\nprint(cc)\nprint(dd)\n</code></pre>\n<p>The results showed as below:</p>\n<pre><code>Variable containing:\n 2  4\n 6  8\n[torch.FloatTensor of size 2x2]\n\nVariable containing:\n 1  2\n 3  4\n[torch.FloatTensor of size 2x2]\n\nVariable containing:\n 2  4\n 6  8\n[torch.FloatTensor of size 2x2]\n\nVariable containing:\n 2  4\n 6  8\n[torch.FloatTensor of size 2x2]\n</code></pre>\n<p>As you see, when I used bb=bb*2, aa was not be affected. However, if using dd *= 2, cc seems to point towards (share) the same address as cc, it is changed!<br>\nBut! their respective previous line is the same! e.g. bb = aa and dd = cc. It seems that the *= operator changed the original deep copy to shallow copy! and The change was made after the copy line itself!</p>\n<p>I am wondering if this is a bug. If it is, it is important since it affect the basic mathematic operations!<br>\nGenerally, I thought that just use the built-in operation functions e.g. torch.add() is a good solution.</p>\n<ul>\n<li>OS: Mac OS X</li>\n<li>PyTorch version: 3.0</li>\n<li>How you installed PyTorch (conda, pip, source): conda</li>\n<li>Python version: 3.6</li>\n<li>CUDA/cuDNN version: None</li>\n<li>GPU models and configuration: None</li>\n<li>GCC version (if compiling from source):</li>\n</ul>", "body_text": "I found a weird bug when I used the operator e.g. *= or +=, I show the code and result as below:\naa = Variable(torch.FloatTensor([[1,2],[3,4]]))\nbb = aa\nbb = bb*2\nprint(bb)\nprint(aa)\n\ncc = Variable(torch.FloatTensor([[1,2],[3,4]]))\ndd = cc\ndd *= 2\nprint(cc)\nprint(dd)\n\nThe results showed as below:\nVariable containing:\n 2  4\n 6  8\n[torch.FloatTensor of size 2x2]\n\nVariable containing:\n 1  2\n 3  4\n[torch.FloatTensor of size 2x2]\n\nVariable containing:\n 2  4\n 6  8\n[torch.FloatTensor of size 2x2]\n\nVariable containing:\n 2  4\n 6  8\n[torch.FloatTensor of size 2x2]\n\nAs you see, when I used bb=bb*2, aa was not be affected. However, if using dd *= 2, cc seems to point towards (share) the same address as cc, it is changed!\nBut! their respective previous line is the same! e.g. bb = aa and dd = cc. It seems that the *= operator changed the original deep copy to shallow copy! and The change was made after the copy line itself!\nI am wondering if this is a bug. If it is, it is important since it affect the basic mathematic operations!\nGenerally, I thought that just use the built-in operation functions e.g. torch.add() is a good solution.\n\nOS: Mac OS X\nPyTorch version: 3.0\nHow you installed PyTorch (conda, pip, source): conda\nPython version: 3.6\nCUDA/cuDNN version: None\nGPU models and configuration: None\nGCC version (if compiling from source):", "body": "I found a weird bug when I used the operator e.g. *= or +=, I show the code and result as below:\r\n\r\n```\r\naa = Variable(torch.FloatTensor([[1,2],[3,4]]))\r\nbb = aa\r\nbb = bb*2\r\nprint(bb)\r\nprint(aa)\r\n\r\ncc = Variable(torch.FloatTensor([[1,2],[3,4]]))\r\ndd = cc\r\ndd *= 2\r\nprint(cc)\r\nprint(dd)\r\n```\r\nThe results showed as below:\r\n```\r\nVariable containing:\r\n 2  4\r\n 6  8\r\n[torch.FloatTensor of size 2x2]\r\n\r\nVariable containing:\r\n 1  2\r\n 3  4\r\n[torch.FloatTensor of size 2x2]\r\n\r\nVariable containing:\r\n 2  4\r\n 6  8\r\n[torch.FloatTensor of size 2x2]\r\n\r\nVariable containing:\r\n 2  4\r\n 6  8\r\n[torch.FloatTensor of size 2x2]\r\n```\r\nAs you see, when I used bb=bb*2, aa was not be affected. However, if using dd *= 2, cc seems to point towards (share) the same address as cc, it is changed!\r\nBut! their respective previous line is the same! e.g. bb = aa and dd = cc. It seems that the *= operator changed the original deep copy to shallow copy! and The change was made after the copy line itself!\r\n\r\nI am wondering if this is a bug. If it is, it is important since it affect the basic mathematic operations!\r\nGenerally, I thought that just use the built-in operation functions e.g. torch.add() is a good solution.\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n- OS: Mac OS X\r\n- PyTorch version: 3.0\r\n- How you installed PyTorch (conda, pip, source): conda\r\n- Python version: 3.6\r\n- CUDA/cuDNN version: None\r\n- GPU models and configuration: None\r\n- GCC version (if compiling from source):\r\n\r\n\r\n"}