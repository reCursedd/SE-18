{"url": "https://api.github.com/repos/pytorch/pytorch/issues/comments/386032947", "html_url": "https://github.com/pytorch/pytorch/pull/7160#issuecomment-386032947", "issue_url": "https://api.github.com/repos/pytorch/pytorch/issues/7160", "id": 386032947, "node_id": "MDEyOklzc3VlQ29tbWVudDM4NjAzMjk0Nw==", "user": {"login": "pietern", "id": 9845, "node_id": "MDQ6VXNlcjk4NDU=", "avatar_url": "https://avatars3.githubusercontent.com/u/9845?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pietern", "html_url": "https://github.com/pietern", "followers_url": "https://api.github.com/users/pietern/followers", "following_url": "https://api.github.com/users/pietern/following{/other_user}", "gists_url": "https://api.github.com/users/pietern/gists{/gist_id}", "starred_url": "https://api.github.com/users/pietern/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pietern/subscriptions", "organizations_url": "https://api.github.com/users/pietern/orgs", "repos_url": "https://api.github.com/users/pietern/repos", "events_url": "https://api.github.com/users/pietern/events{/privacy}", "received_events_url": "https://api.github.com/users/pietern/received_events", "type": "User", "site_admin": false}, "created_at": "2018-05-02T16:11:01Z", "updated_at": "2018-05-02T16:11:01Z", "author_association": "CONTRIBUTOR", "body_html": "<p><a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=4583066\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/apaszke\">@apaszke</a> Thanks for the link. Static initialization is a PITA but the result is really convenient dynamic extension. We do the exact same thing for Caffe2 operators and I think <a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=13564\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/ezyang\">@ezyang</a> is using it (or planning to) in ATen as well. If it's OK to use there then it will be OK here as well. It would be good to know which compilers would not initialize the statics at all though, because it would break much more than just this.</p>", "body_text": "@apaszke Thanks for the link. Static initialization is a PITA but the result is really convenient dynamic extension. We do the exact same thing for Caffe2 operators and I think @ezyang is using it (or planning to) in ATen as well. If it's OK to use there then it will be OK here as well. It would be good to know which compilers would not initialize the statics at all though, because it would break much more than just this.", "body": "@apaszke Thanks for the link. Static initialization is a PITA but the result is really convenient dynamic extension. We do the exact same thing for Caffe2 operators and I think @ezyang is using it (or planning to) in ATen as well. If it's OK to use there then it will be OK here as well. It would be good to know which compilers would not initialize the statics at all though, because it would break much more than just this."}