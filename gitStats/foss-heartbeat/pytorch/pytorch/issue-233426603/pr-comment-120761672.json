{"url": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/120761672", "pull_request_review_id": 42752527, "id": 120761672, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEyMDc2MTY3Mg==", "diff_hunk": "@@ -35,8 +35,11 @@ std::string getRandomString()\n \n   int fd;\n   unsigned int seed;\n+  ssize_t bytes_read;\n   SYSCHECK(fd = open(\"/dev/urandom\", O_RDONLY));\n-  SYSCHECK(read(fd, &seed, sizeof(seed)));\n+  SYSCHECK(bytes_read = read(fd, &seed, sizeof(seed)));", "path": "torch/lib/THD/base/init_methods/InitMethodTCP.cpp", "position": null, "original_position": 7, "commit_id": "d9d50f80c7f162c9c6c6d95c0b51f9e6fd8fccee", "original_commit_id": "84eb23719f40840f55df54eab7bb6c37e43275a2", "user": {"login": "colesbury", "id": 655866, "node_id": "MDQ6VXNlcjY1NTg2Ng==", "avatar_url": "https://avatars1.githubusercontent.com/u/655866?v=4", "gravatar_id": "", "url": "https://api.github.com/users/colesbury", "html_url": "https://github.com/colesbury", "followers_url": "https://api.github.com/users/colesbury/followers", "following_url": "https://api.github.com/users/colesbury/following{/other_user}", "gists_url": "https://api.github.com/users/colesbury/gists{/gist_id}", "starred_url": "https://api.github.com/users/colesbury/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/colesbury/subscriptions", "organizations_url": "https://api.github.com/users/colesbury/orgs", "repos_url": "https://api.github.com/users/colesbury/repos", "events_url": "https://api.github.com/users/colesbury/events{/privacy}", "received_events_url": "https://api.github.com/users/colesbury/received_events", "type": "User", "site_admin": false}, "body": "I forgot how messed up the C++11 random library is.\r\n\r\nWhat's the point of the `uid` here? It seems like you already have uniqueness with the group_name and rank.\r\n\r\nIf that's not sufficient, then why not just use the single value you get from `/dev/urandom`? There's no additional randomness (or uniqueness) from passing it through the Mersenne twister or the encoding it into the vocabulary.\r\n", "created_at": "2017-06-07T22:32:25Z", "updated_at": "2018-11-23T15:33:42Z", "html_url": "https://github.com/pytorch/pytorch/pull/1715#discussion_r120761672", "pull_request_url": "https://api.github.com/repos/pytorch/pytorch/pulls/1715", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/120761672"}, "html": {"href": "https://github.com/pytorch/pytorch/pull/1715#discussion_r120761672"}, "pull_request": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/1715"}}, "body_html": "<p>I forgot how messed up the C++11 random library is.</p>\n<p>What's the point of the <code>uid</code> here? It seems like you already have uniqueness with the group_name and rank.</p>\n<p>If that's not sufficient, then why not just use the single value you get from <code>/dev/urandom</code>? There's no additional randomness (or uniqueness) from passing it through the Mersenne twister or the encoding it into the vocabulary.</p>", "body_text": "I forgot how messed up the C++11 random library is.\nWhat's the point of the uid here? It seems like you already have uniqueness with the group_name and rank.\nIf that's not sufficient, then why not just use the single value you get from /dev/urandom? There's no additional randomness (or uniqueness) from passing it through the Mersenne twister or the encoding it into the vocabulary.", "in_reply_to_id": 120746077}