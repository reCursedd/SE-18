{"url": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/158317622", "pull_request_review_id": 85109924, "id": 158317622, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE1ODMxNzYyMg==", "diff_hunk": "@@ -261,14 +262,15 @@ def __init__(self, inner, nderivs=0):\n \n     def forward(self, *args):\n         global _tracing\n-        in_vars = _flatten(args)\n+        in_vars, in_desc = _flatten(args)\n         # NOTE: use full state, because we need it for BatchNorm export\n         # This differs from the compiler path, which doesn't support it at the moment.\n         module_state = list(self.state_dict(keep_vars=True).values())\n-        trace = torch._C._tracer_enter(in_vars + module_state, self.nderivs)\n+        trace, all_trace_inputs = torch._C._tracer_enter(in_vars + module_state, self.nderivs)\n         _tracing = True\n-        out = self.inner(*args)\n-        out_vars = _flatten(out)\n+        trace_inputs = _unflatten(all_trace_inputs[:len(in_vars)], in_desc)", "path": "torch/jit/__init__.py", "position": 42, "original_position": 22, "commit_id": "666e0d9ca3b586282da312a93a87bfbb4fa156d4", "original_commit_id": "7a590df8217e5f299a8b8c4bb3975c7765c68324", "user": {"login": "ezyang", "id": 13564, "node_id": "MDQ6VXNlcjEzNTY0", "avatar_url": "https://avatars0.githubusercontent.com/u/13564?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ezyang", "html_url": "https://github.com/ezyang", "followers_url": "https://api.github.com/users/ezyang/followers", "following_url": "https://api.github.com/users/ezyang/following{/other_user}", "gists_url": "https://api.github.com/users/ezyang/gists{/gist_id}", "starred_url": "https://api.github.com/users/ezyang/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ezyang/subscriptions", "organizations_url": "https://api.github.com/users/ezyang/orgs", "repos_url": "https://api.github.com/users/ezyang/repos", "events_url": "https://api.github.com/users/ezyang/events{/privacy}", "received_events_url": "https://api.github.com/users/ezyang/received_events", "type": "User", "site_admin": false}, "body": "Do this more safely. What is happening here is you are creating views for the module parameters if they alias, and then throwing them all out because you don't have a convenient way of swizzling them with the view'ed versions. Much *better* to detect if there are duplicate module parameters, and complain to the user immediately, rather than silently have the old behavior.", "created_at": "2017-12-21T16:17:23Z", "updated_at": "2018-11-23T15:37:36Z", "html_url": "https://github.com/pytorch/pytorch/pull/4297#discussion_r158317622", "pull_request_url": "https://api.github.com/repos/pytorch/pytorch/pulls/4297", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/158317622"}, "html": {"href": "https://github.com/pytorch/pytorch/pull/4297#discussion_r158317622"}, "pull_request": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/4297"}}, "body_html": "<p>Do this more safely. What is happening here is you are creating views for the module parameters if they alias, and then throwing them all out because you don't have a convenient way of swizzling them with the view'ed versions. Much <em>better</em> to detect if there are duplicate module parameters, and complain to the user immediately, rather than silently have the old behavior.</p>", "body_text": "Do this more safely. What is happening here is you are creating views for the module parameters if they alias, and then throwing them all out because you don't have a convenient way of swizzling them with the view'ed versions. Much better to detect if there are duplicate module parameters, and complain to the user immediately, rather than silently have the old behavior."}