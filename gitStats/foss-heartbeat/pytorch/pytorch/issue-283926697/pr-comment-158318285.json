{"url": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/158318285", "pull_request_review_id": 85110772, "id": 158318285, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE1ODMxODI4NQ==", "diff_hunk": "@@ -61,27 +61,35 @@ struct TraceEval : autograd::Eval {\n \n   virtual variable_list apply(const variable_list& inputs) override {\n     auto should_trace = !flag.test_and_set();\n-    if (should_trace) enterTrace(inputs);\n-    auto outputs = Eval::apply(inputs);\n-    if (should_trace) exitTrace(inputs, outputs);\n+    if (!should_trace) {\n+      return Eval::apply(inputs);\n+    }\n+    variable_list local_inputs = inputs;\n+    enterTrace(local_inputs);\n+    auto outputs = Eval::apply(local_inputs);\n+    exitTrace(local_inputs, outputs);\n     return outputs;\n   }\n \n-  void enterTrace(const variable_list& inputs) {\n+  void enterTrace(variable_list& inputs) {\n     auto tracing_state = weak_tracing_state.lock();\n     if (!tracing_state) return;\n \n     auto& graph = tracing_state->graph;\n-    tracing_state->active = true;\n     graph->advanceStage();\n \n-    for (auto & input : inputs) {\n+    for (std::size_t i = 0, num_inputs = inputs.size(); i < num_inputs; ++i) {\n+      auto input = inputs[i];\n       Value *input_node = graph->addInput();\n       if (!input.defined()) continue;\n-      JIT_ASSERT(!detail::getValueState(tracing_state, input, false));\n+      auto * value_state = detail::getValueState(tracing_state, input, false);\n+      if (value_state) {\n+        inputs[i] = input = input.view(input.sizes());\n+      }\n       setValueTrace(tracing_state, input, input_node);\n       input_node->inferTypeFrom(input.data());\n     }\n+    tracing_state->active = true;", "path": "torch/csrc/jit/tracer.cpp", "position": 44, "original_position": 39, "commit_id": "666e0d9ca3b586282da312a93a87bfbb4fa156d4", "original_commit_id": "7a590df8217e5f299a8b8c4bb3975c7765c68324", "user": {"login": "ezyang", "id": 13564, "node_id": "MDQ6VXNlcjEzNTY0", "avatar_url": "https://avatars0.githubusercontent.com/u/13564?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ezyang", "html_url": "https://github.com/ezyang", "followers_url": "https://api.github.com/users/ezyang/followers", "following_url": "https://api.github.com/users/ezyang/following{/other_user}", "gists_url": "https://api.github.com/users/ezyang/gists{/gist_id}", "starred_url": "https://api.github.com/users/ezyang/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ezyang/subscriptions", "organizations_url": "https://api.github.com/users/ezyang/orgs", "repos_url": "https://api.github.com/users/ezyang/repos", "events_url": "https://api.github.com/users/ezyang/events{/privacy}", "received_events_url": "https://api.github.com/users/ezyang/received_events", "type": "User", "site_admin": false}, "body": "Why did this move?", "created_at": "2017-12-21T16:19:50Z", "updated_at": "2018-11-23T15:37:36Z", "html_url": "https://github.com/pytorch/pytorch/pull/4297#discussion_r158318285", "pull_request_url": "https://api.github.com/repos/pytorch/pytorch/pulls/4297", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/158318285"}, "html": {"href": "https://github.com/pytorch/pytorch/pull/4297#discussion_r158318285"}, "pull_request": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/4297"}}, "body_html": "<p>Why did this move?</p>", "body_text": "Why did this move?"}