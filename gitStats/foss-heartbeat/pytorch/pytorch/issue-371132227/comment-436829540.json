{"url": "https://api.github.com/repos/pytorch/pytorch/issues/comments/436829540", "html_url": "https://github.com/pytorch/pytorch/pull/12766#issuecomment-436829540", "issue_url": "https://api.github.com/repos/pytorch/pytorch/issues/12766", "id": 436829540, "node_id": "MDEyOklzc3VlQ29tbWVudDQzNjgyOTU0MA==", "user": {"login": "goldsborough", "id": 6429851, "node_id": "MDQ6VXNlcjY0Mjk4NTE=", "avatar_url": "https://avatars3.githubusercontent.com/u/6429851?v=4", "gravatar_id": "", "url": "https://api.github.com/users/goldsborough", "html_url": "https://github.com/goldsborough", "followers_url": "https://api.github.com/users/goldsborough/followers", "following_url": "https://api.github.com/users/goldsborough/following{/other_user}", "gists_url": "https://api.github.com/users/goldsborough/gists{/gist_id}", "starred_url": "https://api.github.com/users/goldsborough/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/goldsborough/subscriptions", "organizations_url": "https://api.github.com/users/goldsborough/orgs", "repos_url": "https://api.github.com/users/goldsborough/repos", "events_url": "https://api.github.com/users/goldsborough/events{/privacy}", "received_events_url": "https://api.github.com/users/goldsborough/received_events", "type": "User", "site_admin": false}, "created_at": "2018-11-08T00:34:13Z", "updated_at": "2018-11-08T00:34:13Z", "author_association": "CONTRIBUTOR", "body_html": "<p><a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=16640218\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/alsrgv\">@alsrgv</a> Unfortunately I don't think we can promise a lot of stability for the C++ interface in the next few months. We are undertaking large, really important changes to unify ATen with Caffe2 and improve its performance and portability to new platforms (like AMD or custom accelerators) over the long term, and guaranteeing a stable C++ interface would stand in the way of this effort. For this reason we never actually released a stable version of the C++ API, and we currently only release the C++ API in \"beta\" with the right to make frequent and breaking changes. This is also documented hopefully quite loudly in our docs at <a href=\"https://pytorch.org/cppdocs\" rel=\"nofollow\">https://pytorch.org/cppdocs</a>. In a sense, this should have been clear when you decided to depend on this C++ API (which, just to highlight this, is really the PyTorch backend).</p>\n<p><a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://user-images.githubusercontent.com/6429851/48169937-3d908800-e2aa-11e8-9feb-c3569971a70b.png\"><img src=\"https://user-images.githubusercontent.com/6429851/48169937-3d908800-e2aa-11e8-9feb-c3569971a70b.png\" alt=\"screen shot 2018-11-07 at 4 28 32 pm\" style=\"max-width:100%;\"></a></p>\n<p>I think for your case, it would make the most sense if you pinned particular nightlies of PyTorch and only updated on a monthly-or-so basis. In that case it would be more clear what has changed over the last month, and we could also work together to update your code (which is fortunately not that much). Of course, we do also try our best not to break BC if possible, since many users do depend on the C++ API, and we want to avoid friction unless that friction stands in the way of our progress. Let me know if you like the idea of doing less frequent upgrades of PyTorch.</p>", "body_text": "@alsrgv Unfortunately I don't think we can promise a lot of stability for the C++ interface in the next few months. We are undertaking large, really important changes to unify ATen with Caffe2 and improve its performance and portability to new platforms (like AMD or custom accelerators) over the long term, and guaranteeing a stable C++ interface would stand in the way of this effort. For this reason we never actually released a stable version of the C++ API, and we currently only release the C++ API in \"beta\" with the right to make frequent and breaking changes. This is also documented hopefully quite loudly in our docs at https://pytorch.org/cppdocs. In a sense, this should have been clear when you decided to depend on this C++ API (which, just to highlight this, is really the PyTorch backend).\n\nI think for your case, it would make the most sense if you pinned particular nightlies of PyTorch and only updated on a monthly-or-so basis. In that case it would be more clear what has changed over the last month, and we could also work together to update your code (which is fortunately not that much). Of course, we do also try our best not to break BC if possible, since many users do depend on the C++ API, and we want to avoid friction unless that friction stands in the way of our progress. Let me know if you like the idea of doing less frequent upgrades of PyTorch.", "body": "@alsrgv Unfortunately I don't think we can promise a lot of stability for the C++ interface in the next few months. We are undertaking large, really important changes to unify ATen with Caffe2 and improve its performance and portability to new platforms (like AMD or custom accelerators) over the long term, and guaranteeing a stable C++ interface would stand in the way of this effort. For this reason we never actually released a stable version of the C++ API, and we currently only release the C++ API in \"beta\" with the right to make frequent and breaking changes. This is also documented hopefully quite loudly in our docs at https://pytorch.org/cppdocs. In a sense, this should have been clear when you decided to depend on this C++ API (which, just to highlight this, is really the PyTorch backend).\r\n\r\n![screen shot 2018-11-07 at 4 28 32 pm](https://user-images.githubusercontent.com/6429851/48169937-3d908800-e2aa-11e8-9feb-c3569971a70b.png)\r\n\r\nI think for your case, it would make the most sense if you pinned particular nightlies of PyTorch and only updated on a monthly-or-so basis. In that case it would be more clear what has changed over the last month, and we could also work together to update your code (which is fortunately not that much). Of course, we do also try our best not to break BC if possible, since many users do depend on the C++ API, and we want to avoid friction unless that friction stands in the way of our progress. Let me know if you like the idea of doing less frequent upgrades of PyTorch."}