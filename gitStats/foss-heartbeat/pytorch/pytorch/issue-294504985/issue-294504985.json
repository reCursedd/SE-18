{"url": "https://api.github.com/repos/pytorch/pytorch/issues/5056", "repository_url": "https://api.github.com/repos/pytorch/pytorch", "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/5056/labels{/name}", "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/5056/comments", "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/5056/events", "html_url": "https://github.com/pytorch/pytorch/pull/5056", "id": 294504985, "node_id": "MDExOlB1bGxSZXF1ZXN0MTY3MjI2NzY2", "number": 5056, "title": "Implemented RelaxedOneHotCategorical + RelaxedBernoulli distributions", "user": {"login": "rachtsingh", "id": 1606892, "node_id": "MDQ6VXNlcjE2MDY4OTI=", "avatar_url": "https://avatars0.githubusercontent.com/u/1606892?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rachtsingh", "html_url": "https://github.com/rachtsingh", "followers_url": "https://api.github.com/users/rachtsingh/followers", "following_url": "https://api.github.com/users/rachtsingh/following{/other_user}", "gists_url": "https://api.github.com/users/rachtsingh/gists{/gist_id}", "starred_url": "https://api.github.com/users/rachtsingh/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rachtsingh/subscriptions", "organizations_url": "https://api.github.com/users/rachtsingh/orgs", "repos_url": "https://api.github.com/users/rachtsingh/repos", "events_url": "https://api.github.com/users/rachtsingh/events{/privacy}", "received_events_url": "https://api.github.com/users/rachtsingh/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2018-02-05T18:59:19Z", "updated_at": "2018-02-08T15:05:47Z", "closed_at": "2018-02-08T13:13:39Z", "author_association": "CONTRIBUTOR", "pull_request": {"url": "https://api.github.com/repos/pytorch/pytorch/pulls/5056", "html_url": "https://github.com/pytorch/pytorch/pull/5056", "diff_url": "https://github.com/pytorch/pytorch/pull/5056.diff", "patch_url": "https://github.com/pytorch/pytorch/pull/5056.patch"}, "body_html": "<p>This implements the Gumbel-Softmax / Concrete distributions, which are continuous relaxations of discrete distributions, with reparametrizable gradients (i.e. for use in discrete VAEs).</p>\n<p>Included are tests that:</p>\n<ol>\n<li>Check that rounding samples from the <code>RelaxedBernoulli</code> gives samples from the corresponding <code>Bernoulli</code> distribution.</li>\n<li>Check that taking the argmax of samples from <code>RelaxedOneHotCategorical</code> gives samples from the corresponding <code>OneHotCategorical</code> distribution.</li>\n<li>Taking the <code>temperature -&gt; \\infty</code> gives a single point as samples.</li>\n</ol>\n<p>Some math checked by <a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=648532\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/fritzo\">@fritzo</a> in <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load issue title\" data-id=\"292558012\" data-permission-text=\"Issue title is private\" data-url=\"https://github.com/probtorch/pytorch/issues/113\" data-hovercard-type=\"pull_request\" data-hovercard-url=\"/probtorch/pytorch/pull/113/hovercard\" href=\"https://github.com/probtorch/pytorch/pull/113\">probtorch#113</a></p>", "body_text": "This implements the Gumbel-Softmax / Concrete distributions, which are continuous relaxations of discrete distributions, with reparametrizable gradients (i.e. for use in discrete VAEs).\nIncluded are tests that:\n\nCheck that rounding samples from the RelaxedBernoulli gives samples from the corresponding Bernoulli distribution.\nCheck that taking the argmax of samples from RelaxedOneHotCategorical gives samples from the corresponding OneHotCategorical distribution.\nTaking the temperature -> \\infty gives a single point as samples.\n\nSome math checked by @fritzo in probtorch#113", "body": "This implements the Gumbel-Softmax / Concrete distributions, which are continuous relaxations of discrete distributions, with reparametrizable gradients (i.e. for use in discrete VAEs).\r\n\r\nIncluded are tests that:\r\n1. Check that rounding samples from the `RelaxedBernoulli` gives samples from the corresponding `Bernoulli` distribution.\r\n2. Check that taking the argmax of samples from `RelaxedOneHotCategorical` gives samples from the corresponding `OneHotCategorical` distribution.\r\n3. Taking the `temperature -> \\infty` gives a single point as samples.\r\n\r\nSome math checked by @fritzo in https://github.com/probtorch/pytorch/pull/113"}