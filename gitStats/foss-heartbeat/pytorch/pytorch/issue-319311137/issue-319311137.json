{"url": "https://api.github.com/repos/pytorch/pytorch/issues/7150", "repository_url": "https://api.github.com/repos/pytorch/pytorch", "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/7150/labels{/name}", "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/7150/comments", "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/7150/events", "html_url": "https://github.com/pytorch/pytorch/issues/7150", "id": 319311137, "node_id": "MDU6SXNzdWUzMTkzMTExMzc=", "number": 7150, "title": "NCCL does not seems to be a real git submodule", "user": {"login": "dbermond", "id": 16004942, "node_id": "MDQ6VXNlcjE2MDA0OTQy", "avatar_url": "https://avatars3.githubusercontent.com/u/16004942?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dbermond", "html_url": "https://github.com/dbermond", "followers_url": "https://api.github.com/users/dbermond/followers", "following_url": "https://api.github.com/users/dbermond/following{/other_user}", "gists_url": "https://api.github.com/users/dbermond/gists{/gist_id}", "starred_url": "https://api.github.com/users/dbermond/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dbermond/subscriptions", "organizations_url": "https://api.github.com/users/dbermond/orgs", "repos_url": "https://api.github.com/users/dbermond/repos", "events_url": "https://api.github.com/users/dbermond/events{/privacy}", "received_events_url": "https://api.github.com/users/dbermond/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-05-01T20:11:01Z", "updated_at": "2018-05-03T07:07:59Z", "closed_at": "2018-05-03T07:07:59Z", "author_association": "CONTRIBUTOR", "body_html": "<p>Although listed in the <code>.gitmodules</code> file, NCCL currently does not seems be real git submodule. It is not listed as a submodule when running the commands:</p>\n<pre><code>$ git submodule status\n$ git submodule init\n</code></pre>\n<p>NCCL source code is bundled within PyTorch source code in <code>third_party/nccl</code>:</p>\n<ul>\n<li>When cloning the PyTorch git repository without <code>--recursive</code>, the <code>third_party/nccl</code> folder is already populated with the NCCL source code. The same happens when downloading compressed tarball files from GitHub.</li>\n<li>When using <code>--recursive</code> in git clone, NCCL is not listed/cloned.</li>\n</ul>\n<p>Usually, a git submodule would lead to an empty folder right after the git clone command (without <code>--recursive</code>) or when downloading the tarball. The only non-empty <code>third_party</code> folder is <code>nccl</code>.</p>\n<p>To clarify even further, this can be visualized without any commands. Take a look at the old Caffe2 git repository in the GibHub web interface: <a href=\"https://github.com/caffe2/caffe2/tree/master/third_party\">https://github.com/caffe2/caffe2/tree/master/third_party</a>. <code>nccl</code> is a real git submodule there, pointing to <a href=\"https://github.com/nvidia/nccl/\">https://github.com/nvidia/nccl/</a>. On the PyTorch GitHub web interface at <a href=\"https://github.com/pytorch/pytorch/tree/master/third_party\">https://github.com/pytorch/pytorch/tree/master/third_party</a>, <code>nccl</code> is a simple folder that contains the bundled source code.</p>\n<p>I can see two possible solutions for this:</p>\n<ol>\n<li>simply remove the <code>nccl</code> entry in <code>.gitmodules</code> file, staying with the bundled source code in <code>third_party/nccl</code>.</li>\n<li>remove the bundled source code files from <code>third_party/nccl</code> and make it to be a real git submodule.</li>\n</ol>\n<p>I can open a pull request to handle this. Just let me know which solution looks better for the developers, if any.</p>", "body_text": "Although listed in the .gitmodules file, NCCL currently does not seems be real git submodule. It is not listed as a submodule when running the commands:\n$ git submodule status\n$ git submodule init\n\nNCCL source code is bundled within PyTorch source code in third_party/nccl:\n\nWhen cloning the PyTorch git repository without --recursive, the third_party/nccl folder is already populated with the NCCL source code. The same happens when downloading compressed tarball files from GitHub.\nWhen using --recursive in git clone, NCCL is not listed/cloned.\n\nUsually, a git submodule would lead to an empty folder right after the git clone command (without --recursive) or when downloading the tarball. The only non-empty third_party folder is nccl.\nTo clarify even further, this can be visualized without any commands. Take a look at the old Caffe2 git repository in the GibHub web interface: https://github.com/caffe2/caffe2/tree/master/third_party. nccl is a real git submodule there, pointing to https://github.com/nvidia/nccl/. On the PyTorch GitHub web interface at https://github.com/pytorch/pytorch/tree/master/third_party, nccl is a simple folder that contains the bundled source code.\nI can see two possible solutions for this:\n\nsimply remove the nccl entry in .gitmodules file, staying with the bundled source code in third_party/nccl.\nremove the bundled source code files from third_party/nccl and make it to be a real git submodule.\n\nI can open a pull request to handle this. Just let me know which solution looks better for the developers, if any.", "body": "Although listed in the `.gitmodules` file, NCCL currently does not seems be real git submodule. It is not listed as a submodule when running the commands:\r\n```\r\n$ git submodule status\r\n$ git submodule init\r\n```\r\n\r\nNCCL source code is bundled within PyTorch source code in `third_party/nccl`:\r\n\r\n- When cloning the PyTorch git repository without `--recursive`, the `third_party/nccl` folder is already populated with the NCCL source code. The same happens when downloading compressed tarball files from GitHub.\r\n- When using `--recursive` in git clone, NCCL is not listed/cloned.\r\n\r\nUsually, a git submodule would lead to an empty folder right after the git clone command (without `--recursive`) or when downloading the tarball. The only non-empty `third_party` folder is `nccl`.\r\n\r\nTo clarify even further, this can be visualized without any commands. Take a look at the old Caffe2 git repository in the GibHub web interface: https://github.com/caffe2/caffe2/tree/master/third_party. `nccl` is a real git submodule there, pointing to https://github.com/nvidia/nccl/. On the PyTorch GitHub web interface at https://github.com/pytorch/pytorch/tree/master/third_party, `nccl` is a simple folder that contains the bundled source code.\r\n\r\nI can see two possible solutions for this:\r\n\r\n1. simply remove the `nccl` entry in `.gitmodules` file, staying with the bundled source code in `third_party/nccl`.\r\n2. remove the bundled source code files from `third_party/nccl` and make it to be a real git submodule.\r\n\r\nI can open a pull request to handle this. Just let me know which solution looks better for the developers, if any."}