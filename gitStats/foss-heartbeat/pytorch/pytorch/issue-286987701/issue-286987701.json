{"url": "https://api.github.com/repos/pytorch/pytorch/issues/4555", "repository_url": "https://api.github.com/repos/pytorch/pytorch", "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/4555/labels{/name}", "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/4555/comments", "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/4555/events", "html_url": "https://github.com/pytorch/pytorch/issues/4555", "id": 286987701, "node_id": "MDU6SXNzdWUyODY5ODc3MDE=", "number": 4555, "title": "Model loading give different results on Windows and Linux", "user": {"login": "jolinxql", "id": 5552657, "node_id": "MDQ6VXNlcjU1NTI2NTc=", "avatar_url": "https://avatars2.githubusercontent.com/u/5552657?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jolinxql", "html_url": "https://github.com/jolinxql", "followers_url": "https://api.github.com/users/jolinxql/followers", "following_url": "https://api.github.com/users/jolinxql/following{/other_user}", "gists_url": "https://api.github.com/users/jolinxql/gists{/gist_id}", "starred_url": "https://api.github.com/users/jolinxql/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jolinxql/subscriptions", "organizations_url": "https://api.github.com/users/jolinxql/orgs", "repos_url": "https://api.github.com/users/jolinxql/repos", "events_url": "https://api.github.com/users/jolinxql/events{/privacy}", "received_events_url": "https://api.github.com/users/jolinxql/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2018-01-09T06:55:44Z", "updated_at": "2018-01-25T09:35:01Z", "closed_at": "2018-01-25T09:35:01Z", "author_association": "NONE", "body_html": "<p>I found that when I load and evaluate models trained and saved on windows use different operating systems, results are <strong>inconsistent</strong>.</p>\n<p><strong>Phenomenon:</strong><br>\nI trained a model on Windows 10 and tested it on the test set before saving and got <code>accuracy = 63.91%</code>. Then I saved it to \"model_epoN\".</p>\n<ol>\n<li>When I load and evaluate it on the same Windows 10, the results are <strong>consistent</strong>. i.e., <code>accuracy = 63.91%</code>, too.</li>\n<li>But when I load and evaluate it on Ubuntu, the results are <strong>inconsistent</strong>. <code>accuracy = 0.1%</code>, like randomly guessing.</li>\n</ol>\n<p>I've noticed the difference between CR LF and LF line break types and made small changes to the datasets, so I'm sure the problem lies somewhere else.<br>\nPlease note: Different to Issue <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load issue title\" data-id=\"284296204\" data-permission-text=\"Issue title is private\" data-url=\"https://github.com/pytorch/pytorch/issues/4333\" data-hovercard-type=\"issue\" data-hovercard-url=\"/pytorch/pytorch/issues/4333/hovercard\" href=\"https://github.com/pytorch/pytorch/issues/4333\">#4333</a> whose difference is small, the difference I got is huge.</p>\n<p><strong>Version information:</strong><br>\nThe pytorch version on Windows 10 python3.6 is <code>0.3.0b0+591e73e</code> (peterjc123).<br>\nThe pytorch version on Ubuntu 16.4 python3.5 is <code>0.3.0.post4</code> (official).</p>\n<p><strong>Save function:</strong></p>\n<pre><code>def save_checkpoint(parser, epoch):\n    torch.save({'state_dict': parser.state_dict()},\n    'model_epo' + str(epoch + 1))\n</code></pre>\n<p><strong>Load function:</strong></p>\n<pre><code>def load_checkpoint(filename, parser):\n    checkpoint = torch.load(filename)\n    parser.load_state_dict(checkpoint['state_dict'])\n    return parser\n</code></pre>\n<p>No error or warning was raised. I guess the formats for saving state_dict are different according to the OS?<br>\nCurrently, I'm not able to write a minimal working example because the model is too complicated and it builds dynamic nets in each iteration. I haven't trained the model on Linux and test it on Win. But I will try and I still need some time.<br>\nI hope the problem can be solved in pytorch v0.4.0.</p>", "body_text": "I found that when I load and evaluate models trained and saved on windows use different operating systems, results are inconsistent.\nPhenomenon:\nI trained a model on Windows 10 and tested it on the test set before saving and got accuracy = 63.91%. Then I saved it to \"model_epoN\".\n\nWhen I load and evaluate it on the same Windows 10, the results are consistent. i.e., accuracy = 63.91%, too.\nBut when I load and evaluate it on Ubuntu, the results are inconsistent. accuracy = 0.1%, like randomly guessing.\n\nI've noticed the difference between CR LF and LF line break types and made small changes to the datasets, so I'm sure the problem lies somewhere else.\nPlease note: Different to Issue #4333 whose difference is small, the difference I got is huge.\nVersion information:\nThe pytorch version on Windows 10 python3.6 is 0.3.0b0+591e73e (peterjc123).\nThe pytorch version on Ubuntu 16.4 python3.5 is 0.3.0.post4 (official).\nSave function:\ndef save_checkpoint(parser, epoch):\n    torch.save({'state_dict': parser.state_dict()},\n    'model_epo' + str(epoch + 1))\n\nLoad function:\ndef load_checkpoint(filename, parser):\n    checkpoint = torch.load(filename)\n    parser.load_state_dict(checkpoint['state_dict'])\n    return parser\n\nNo error or warning was raised. I guess the formats for saving state_dict are different according to the OS?\nCurrently, I'm not able to write a minimal working example because the model is too complicated and it builds dynamic nets in each iteration. I haven't trained the model on Linux and test it on Win. But I will try and I still need some time.\nI hope the problem can be solved in pytorch v0.4.0.", "body": "I found that when I load and evaluate models trained and saved on windows use different operating systems, results are **inconsistent**.\r\n\r\n**Phenomenon:**\r\nI trained a model on Windows 10 and tested it on the test set before saving and got `accuracy = 63.91%`. Then I saved it to \"model_epoN\". \r\n1. When I load and evaluate it on the same Windows 10, the results are **consistent**. i.e., `accuracy = 63.91%`, too.\r\n2. But when I load and evaluate it on Ubuntu, the results are **inconsistent**. `accuracy = 0.1%`, like randomly guessing.\r\n\r\nI've noticed the difference between CR LF and LF line break types and made small changes to the datasets, so I'm sure the problem lies somewhere else.\r\nPlease note: Different to Issue https://github.com/pytorch/pytorch/issues/4333 whose difference is small, the difference I got is huge.\r\n\r\n**Version information:**\r\nThe pytorch version on Windows 10 python3.6 is `0.3.0b0+591e73e` (peterjc123).\r\nThe pytorch version on Ubuntu 16.4 python3.5 is `0.3.0.post4` (official).\r\n\r\n**Save function:**\r\n```\r\ndef save_checkpoint(parser, epoch):\r\n    torch.save({'state_dict': parser.state_dict()},\r\n    'model_epo' + str(epoch + 1))\r\n```\r\n**Load function:**\r\n```\r\ndef load_checkpoint(filename, parser):\r\n    checkpoint = torch.load(filename)\r\n    parser.load_state_dict(checkpoint['state_dict'])\r\n    return parser\r\n```\r\nNo error or warning was raised. I guess the formats for saving state_dict are different according to the OS? \r\nCurrently, I'm not able to write a minimal working example because the model is too complicated and it builds dynamic nets in each iteration. I haven't trained the model on Linux and test it on Win. But I will try and I still need some time.\r\nI hope the problem can be solved in pytorch v0.4.0.\r\n"}