{"url": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/202432483", "pull_request_review_id": 137135837, "id": 202432483, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwMjQzMjQ4Mw==", "diff_hunk": "@@ -354,22 +356,38 @@ def __getattr__(self, attr):\n         return self.module._get_method(attr)\n \n \n-def _script_graph(fn, _frames_up=0):\n+def _compile_fn(fn, _frames_up=0):\n+    mod = ScriptModule()\n+    rcb = createResolutionCallback(_frames_up + 1)\n+    ast = get_jit_ast(fn)\n+    arg_types, ret_type = annotations.get_signature(fn, ast.num_params(), 0)\n+    _jit_script_compile(mod, torch._C.DefAndTypes(ast, arg_types, ret_type), rcb)\n+    return mod\n+\n+\n+def _script_pure_function(mod, fn, _frames_up=0):\n     rcb = createResolutionCallback(_frames_up + 1)\n     ast = get_jit_ast(fn)\n-    return _jit_script_compile(ast, rcb)\n+    arg_types, ret_type = annotations.get_signature(fn, ast.num_params(), 0)\n+    _jit_script_compile_pure_fn(mod, torch._C.DefAndTypes(ast, arg_types, ret_type), rcb)\n+\n+\n+def _script_graph(fn, _frames_up=0):\n+    mod = ScriptModule()\n+    _script_pure_function(mod, fn, _frames_up + 1)\n+    return mod.graph\n \n \n def script(fn, optimize=True, _frames_up=0):\n-    graph = _script_graph(fn, _frames_up=_frames_up + 1)\n     mod = ScriptModule()\n-    mod._create_method_from_graph('forward', graph)\n+    _script_pure_function(mod, fn, _frames_up=_frames_up + 1)\n     # Forward docstrings\n     mod.__doc__ = fn.__doc__\n     return mod\n \n \n-ScriptMethodStub = namedtuple('ScriptMethodStub', ('resolution_callback', 'ast', 'original_method'))\n+ScriptMethodStub = namedtuple('ScriptMethodStub', (\n+    'resolution_callback', 'ast', 'original_method', 'arg_types', 'return_type'))", "path": "torch/jit/__init__.py", "position": 56, "original_position": 56, "commit_id": "8a01c6b0c0e2bb996d539db67ec860e099cb71da", "original_commit_id": "8a01c6b0c0e2bb996d539db67ec860e099cb71da", "user": {"login": "zdevito", "id": 370202, "node_id": "MDQ6VXNlcjM3MDIwMg==", "avatar_url": "https://avatars0.githubusercontent.com/u/370202?v=4", "gravatar_id": "", "url": "https://api.github.com/users/zdevito", "html_url": "https://github.com/zdevito", "followers_url": "https://api.github.com/users/zdevito/followers", "following_url": "https://api.github.com/users/zdevito/following{/other_user}", "gists_url": "https://api.github.com/users/zdevito/gists{/gist_id}", "starred_url": "https://api.github.com/users/zdevito/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/zdevito/subscriptions", "organizations_url": "https://api.github.com/users/zdevito/orgs", "repos_url": "https://api.github.com/users/zdevito/repos", "events_url": "https://api.github.com/users/zdevito/events{/privacy}", "received_events_url": "https://api.github.com/users/zdevito/received_events", "type": "User", "site_admin": false}, "body": "'ast', 'arg_types', and 'return_type' are DefAndTypes, why can't we store one object?", "created_at": "2018-07-13T18:12:38Z", "updated_at": "2018-11-23T15:47:22Z", "html_url": "https://github.com/pytorch/pytorch/pull/9405#discussion_r202432483", "pull_request_url": "https://api.github.com/repos/pytorch/pytorch/pulls/9405", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/202432483"}, "html": {"href": "https://github.com/pytorch/pytorch/pull/9405#discussion_r202432483"}, "pull_request": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/9405"}}, "body_html": "<p>'ast', 'arg_types', and 'return_type' are DefAndTypes, why can't we store one object?</p>", "body_text": "'ast', 'arg_types', and 'return_type' are DefAndTypes, why can't we store one object?"}