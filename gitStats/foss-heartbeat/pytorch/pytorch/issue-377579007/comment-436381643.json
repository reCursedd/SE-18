{"url": "https://api.github.com/repos/pytorch/pytorch/issues/comments/436381643", "html_url": "https://github.com/pytorch/pytorch/pull/13591#issuecomment-436381643", "issue_url": "https://api.github.com/repos/pytorch/pytorch/issues/13591", "id": 436381643, "node_id": "MDEyOklzc3VlQ29tbWVudDQzNjM4MTY0Mw==", "user": {"login": "bwasti", "id": 4842908, "node_id": "MDQ6VXNlcjQ4NDI5MDg=", "avatar_url": "https://avatars2.githubusercontent.com/u/4842908?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bwasti", "html_url": "https://github.com/bwasti", "followers_url": "https://api.github.com/users/bwasti/followers", "following_url": "https://api.github.com/users/bwasti/following{/other_user}", "gists_url": "https://api.github.com/users/bwasti/gists{/gist_id}", "starred_url": "https://api.github.com/users/bwasti/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bwasti/subscriptions", "organizations_url": "https://api.github.com/users/bwasti/orgs", "repos_url": "https://api.github.com/users/bwasti/repos", "events_url": "https://api.github.com/users/bwasti/events{/privacy}", "received_events_url": "https://api.github.com/users/bwasti/received_events", "type": "User", "site_admin": false}, "created_at": "2018-11-06T19:38:40Z", "updated_at": "2018-11-06T19:38:40Z", "author_association": "CONTRIBUTOR", "body_html": "<p><a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=551151\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/Yangqing\">@Yangqing</a> the boiler plate is pretty much the only way to get rid of RTTI.   The only change over the LLVM style is to invert the \"classof\" structure and make that function pure virtual (rather than static), which gives compile time checks for any new types.  It makes the usage a bit different, but for such a limited use-case I think it's fine</p>", "body_text": "@Yangqing the boiler plate is pretty much the only way to get rid of RTTI.   The only change over the LLVM style is to invert the \"classof\" structure and make that function pure virtual (rather than static), which gives compile time checks for any new types.  It makes the usage a bit different, but for such a limited use-case I think it's fine", "body": "@Yangqing the boiler plate is pretty much the only way to get rid of RTTI.   The only change over the LLVM style is to invert the \"classof\" structure and make that function pure virtual (rather than static), which gives compile time checks for any new types.  It makes the usage a bit different, but for such a limited use-case I think it's fine"}