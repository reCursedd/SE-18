{"url": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/207354351", "pull_request_review_id": 142950614, "id": 207354351, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwNzM1NDM1MQ==", "diff_hunk": "@@ -23,9 +23,44 @@ struct function_traits<Result (Args...)> {\n   using func_type = Result (Args...);\n   using return_type = Result;\n   using parameter_types = typelist::typelist<Args...>;\n+  static constexpr auto number_of_parameters = sizeof...(Args);\n };\n \n+/**\n+ * strip_class: helper to remove the class type from pointers to `operator()`.\n+ */\n+\n+template <typename T>\n+struct strip_class {};\n+template <typename Class, typename Result, typename... Args>\n+struct strip_class<Result (Class::*)(Args...)> {\n+  using type = Result(Args...);\n+};\n+template <typename Class, typename Result, typename... Args>\n+struct strip_class<Result (Class::*)(Args...) const> {\n+  using type = Result(Args...);\n+};\n+template <typename T>\n+using strip_class_t = typename strip_class<T>::type;\n+\n+/**\n+ * infer_function_traits: creates a `function_traits` type for a simple\n+ * function (pointer) or functor (lambda/struct). Currently does not support\n+ * class methods.\n+ */\n+\n+template <typename Functor>\n+struct infer_function_traits {", "path": "caffe2/utils/Metaprogramming.h", "position": 39, "original_position": 31, "commit_id": "0f99f499f0d40e72445c4ac45bebe436638e3f79", "original_commit_id": "15746cc817aae1a10b7748a70d271dc78c1539ed", "user": {"login": "smessmer", "id": 2373925, "node_id": "MDQ6VXNlcjIzNzM5MjU=", "avatar_url": "https://avatars3.githubusercontent.com/u/2373925?v=4", "gravatar_id": "", "url": "https://api.github.com/users/smessmer", "html_url": "https://github.com/smessmer", "followers_url": "https://api.github.com/users/smessmer/followers", "following_url": "https://api.github.com/users/smessmer/following{/other_user}", "gists_url": "https://api.github.com/users/smessmer/gists{/gist_id}", "starred_url": "https://api.github.com/users/smessmer/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/smessmer/subscriptions", "organizations_url": "https://api.github.com/users/smessmer/orgs", "repos_url": "https://api.github.com/users/smessmer/repos", "events_url": "https://api.github.com/users/smessmer/events{/privacy}", "received_events_url": "https://api.github.com/users/smessmer/received_events", "type": "User", "site_admin": false}, "body": "Please add unit tests. There's a Metaprogramming_test.cpp file.", "created_at": "2018-08-02T19:59:20Z", "updated_at": "2018-11-23T15:48:38Z", "html_url": "https://github.com/pytorch/pytorch/pull/10048#discussion_r207354351", "pull_request_url": "https://api.github.com/repos/pytorch/pytorch/pulls/10048", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/207354351"}, "html": {"href": "https://github.com/pytorch/pytorch/pull/10048#discussion_r207354351"}, "pull_request": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/10048"}}, "body_html": "<p>Please add unit tests. There's a Metaprogramming_test.cpp file.</p>", "body_text": "Please add unit tests. There's a Metaprogramming_test.cpp file."}