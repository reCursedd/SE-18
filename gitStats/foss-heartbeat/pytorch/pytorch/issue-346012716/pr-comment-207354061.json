{"url": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/207354061", "pull_request_review_id": 142950614, "id": 207354061, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwNzM1NDA2MQ==", "diff_hunk": "@@ -177,6 +177,27 @@ template<class Head, class... Tail> struct head<typelist<Head, Tail...>> final {\n };\n template<class TypeList> using head_t = typename head<TypeList>::type;\n \n+/**\n+ * Returns the N-th element of a type list.\n+ * Example:\n+ * int == element_t<1, typelist<float, int, char>>\n+ */\n+\n+/// Base template.\n+template<size_t Index, class... Items> struct element;\n+\n+/// Successful case, we have reached the zero index and can \"return\" the head type.\n+template<class Head, class... Tail> struct element<0, typelist<Head, Tail...>> { using type = Head; };\n+\n+/// Error case, we have an index but ran out of types!\n+template<size_t Index> struct element<Index, typelist<>> { };\n+\n+/// Shave off types until we hit the <0, Head, Tail...> or <Index> case.\n+template<size_t Index, class Head, class... Tail> struct element<Index, typelist<Head, Tail...>> : element<Index-1, typelist<Tail...>> { };", "path": "caffe2/utils/TypeList.h", "position": null, "original_position": 20, "commit_id": "0f99f499f0d40e72445c4ac45bebe436638e3f79", "original_commit_id": "15746cc817aae1a10b7748a70d271dc78c1539ed", "user": {"login": "smessmer", "id": 2373925, "node_id": "MDQ6VXNlcjIzNzM5MjU=", "avatar_url": "https://avatars3.githubusercontent.com/u/2373925?v=4", "gravatar_id": "", "url": "https://api.github.com/users/smessmer", "html_url": "https://github.com/smessmer", "followers_url": "https://api.github.com/users/smessmer/followers", "following_url": "https://api.github.com/users/smessmer/following{/other_user}", "gists_url": "https://api.github.com/users/smessmer/gists{/gist_id}", "starred_url": "https://api.github.com/users/smessmer/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/smessmer/subscriptions", "organizations_url": "https://api.github.com/users/smessmer/orgs", "repos_url": "https://api.github.com/users/smessmer/repos", "events_url": "https://api.github.com/users/smessmer/events{/privacy}", "received_events_url": "https://api.github.com/users/smessmer/received_events", "type": "User", "site_admin": false}, "body": "Actually, you might be able to just use `std::tuple_element` instead of your own implementation.", "created_at": "2018-08-02T19:58:14Z", "updated_at": "2018-11-23T15:48:38Z", "html_url": "https://github.com/pytorch/pytorch/pull/10048#discussion_r207354061", "pull_request_url": "https://api.github.com/repos/pytorch/pytorch/pulls/10048", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/207354061"}, "html": {"href": "https://github.com/pytorch/pytorch/pull/10048#discussion_r207354061"}, "pull_request": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/10048"}}, "body_html": "<p>Actually, you might be able to just use <code>std::tuple_element</code> instead of your own implementation.</p>", "body_text": "Actually, you might be able to just use std::tuple_element instead of your own implementation."}