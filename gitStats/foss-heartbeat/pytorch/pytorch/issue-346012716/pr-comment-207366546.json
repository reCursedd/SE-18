{"url": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/207366546", "pull_request_review_id": 142967109, "id": 207366546, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwNzM2NjU0Ng==", "diff_hunk": "@@ -0,0 +1,190 @@\n+#pragma once\n+\n+#include <torch/csrc/jit/function_schema.h>\n+#include <torch/csrc/jit/ir.h>\n+#include <torch/csrc/jit/operator.h>\n+#include <torch/csrc/jit/stack.h>\n+#include <torch/csrc/utils/variadic.h>\n+\n+#include <caffe2/utils/Metaprogramming.h>\n+#include <caffe2/utils/TypeList.h>\n+\n+namespace torch { namespace jit {\n+namespace detail {\n+template <typename... Ts, size_t... Is>\n+std::vector<Argument> createArgumentVectorFromTypes(Indices<Is...> indices) {\n+  // Arguments are named \"_<index>\"\n+  return {Argument(\"_\" + std::to_string(Is), getTypePtr<Ts>())...};\n+}\n+\n+template <typename... Ts, size_t... Is>\n+std::vector<Argument> createReturns(Indices<Is...> indices) {\n+  return createArgumentVectorFromTypes<Ts..., Is...>();\n+}\n+\n+/// Unpack a tuple return type into a vector of return types, one per tuple\n+/// element.\n+template <typename... Ts>\n+std::vector<Argument> createReturns(std::tuple<Ts...>* tuple) {\n+  // Create an index pack so we can call `get<Indices>` on the tuple next.\n+  return createReturns<Ts...>(typename MakeIndices<sizeof...(Ts)>::indices{});", "path": "torch/csrc/jit/custom_operator.h", "position": 30, "original_position": 30, "commit_id": "0f99f499f0d40e72445c4ac45bebe436638e3f79", "original_commit_id": "15746cc817aae1a10b7748a70d271dc78c1539ed", "user": {"login": "goldsborough", "id": 6429851, "node_id": "MDQ6VXNlcjY0Mjk4NTE=", "avatar_url": "https://avatars3.githubusercontent.com/u/6429851?v=4", "gravatar_id": "", "url": "https://api.github.com/users/goldsborough", "html_url": "https://github.com/goldsborough", "followers_url": "https://api.github.com/users/goldsborough/followers", "following_url": "https://api.github.com/users/goldsborough/following{/other_user}", "gists_url": "https://api.github.com/users/goldsborough/gists{/gist_id}", "starred_url": "https://api.github.com/users/goldsborough/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/goldsborough/subscriptions", "organizations_url": "https://api.github.com/users/goldsborough/orgs", "repos_url": "https://api.github.com/users/goldsborough/repos", "events_url": "https://api.github.com/users/goldsborough/events{/privacy}", "received_events_url": "https://api.github.com/users/goldsborough/received_events", "type": "User", "site_admin": false}, "body": "We would have to change that all over the codebase then", "created_at": "2018-08-02T20:40:08Z", "updated_at": "2018-11-23T15:48:39Z", "html_url": "https://github.com/pytorch/pytorch/pull/10048#discussion_r207366546", "pull_request_url": "https://api.github.com/repos/pytorch/pytorch/pulls/10048", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/207366546"}, "html": {"href": "https://github.com/pytorch/pytorch/pull/10048#discussion_r207366546"}, "pull_request": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/10048"}}, "body_html": "<p>We would have to change that all over the codebase then</p>", "body_text": "We would have to change that all over the codebase then", "in_reply_to_id": 207357594}