{"url": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/188459159", "pull_request_review_id": 120442301, "id": 188459159, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4ODQ1OTE1OQ==", "diff_hunk": "@@ -23,28 +23,24 @@\n #include <assert.h>\n #include <stdio.h>\n \n-#define DEBUG_PRINT(...) ;\n+#define DEBUG_PRINT(...)\n \n namespace nom {\n \n-template <typename T, typename U = T>\n+template <typename T, typename U>\n class Graph;\n \n-template <typename T, typename U = T>\n+template <typename T, typename U>\n+class GraphBase;\n+\n+template <typename T, typename U>\n class Node;\n \n-template <typename T, typename U = T>\n-class Edge : public StorageType<U> {\n+template <typename T, typename U>\n+class EdgeBase {", "path": "caffe2/core/nomnigraph/include/nomnigraph/Graph/Graph.h", "position": null, "original_position": 23, "commit_id": "253242fc95f33618ecc0b13e5a4d99882f8b3ab5", "original_commit_id": "2e6481d391c04b5f006566340c05e3f52e21ffac", "user": {"login": "bwasti", "id": 4842908, "node_id": "MDQ6VXNlcjQ4NDI5MDg=", "avatar_url": "https://avatars2.githubusercontent.com/u/4842908?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bwasti", "html_url": "https://github.com/bwasti", "followers_url": "https://api.github.com/users/bwasti/followers", "following_url": "https://api.github.com/users/bwasti/following{/other_user}", "gists_url": "https://api.github.com/users/bwasti/gists{/gist_id}", "starred_url": "https://api.github.com/users/bwasti/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bwasti/subscriptions", "organizations_url": "https://api.github.com/users/bwasti/orgs", "repos_url": "https://api.github.com/users/bwasti/repos", "events_url": "https://api.github.com/users/bwasti/events{/privacy}", "received_events_url": "https://api.github.com/users/bwasti/received_events", "type": "User", "site_admin": false}, "body": "have you tried applying this \"base\" paradigm to the StorageType class itself?  might clean things up here.  The duplication of of constructors is a bit messy", "created_at": "2018-05-15T22:48:18Z", "updated_at": "2018-11-23T15:44:06Z", "html_url": "https://github.com/pytorch/pytorch/pull/7595#discussion_r188459159", "pull_request_url": "https://api.github.com/repos/pytorch/pytorch/pulls/7595", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/188459159"}, "html": {"href": "https://github.com/pytorch/pytorch/pull/7595#discussion_r188459159"}, "pull_request": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/7595"}}, "body_html": "<p>have you tried applying this \"base\" paradigm to the StorageType class itself?  might clean things up here.  The duplication of of constructors is a bit messy</p>", "body_text": "have you tried applying this \"base\" paradigm to the StorageType class itself?  might clean things up here.  The duplication of of constructors is a bit messy"}