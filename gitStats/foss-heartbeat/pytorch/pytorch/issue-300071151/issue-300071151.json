{"url": "https://api.github.com/repos/pytorch/pytorch/issues/5405", "repository_url": "https://api.github.com/repos/pytorch/pytorch", "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/5405/labels{/name}", "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/5405/comments", "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/5405/events", "html_url": "https://github.com/pytorch/pytorch/issues/5405", "id": 300071151, "node_id": "MDU6SXNzdWUzMDAwNzExNTE=", "number": 5405, "title": "scatter_add_ doesn't support scalar source", "user": {"login": "vadimkantorov", "id": 1041752, "node_id": "MDQ6VXNlcjEwNDE3NTI=", "avatar_url": "https://avatars0.githubusercontent.com/u/1041752?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vadimkantorov", "html_url": "https://github.com/vadimkantorov", "followers_url": "https://api.github.com/users/vadimkantorov/followers", "following_url": "https://api.github.com/users/vadimkantorov/following{/other_user}", "gists_url": "https://api.github.com/users/vadimkantorov/gists{/gist_id}", "starred_url": "https://api.github.com/users/vadimkantorov/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vadimkantorov/subscriptions", "organizations_url": "https://api.github.com/users/vadimkantorov/orgs", "repos_url": "https://api.github.com/users/vadimkantorov/repos", "events_url": "https://api.github.com/users/vadimkantorov/events{/privacy}", "received_events_url": "https://api.github.com/users/vadimkantorov/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 424131847, "node_id": "MDU6TGFiZWw0MjQxMzE4NDc=", "url": "https://api.github.com/repos/pytorch/pytorch/labels/bug", "name": "bug", "color": "b60205", "default": true}, {"id": 443484050, "node_id": "MDU6TGFiZWw0NDM0ODQwNTA=", "url": "https://api.github.com/repos/pytorch/pytorch/labels/medium%20priority", "name": "medium priority", "color": "fbca04", "default": false}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2018-02-25T23:09:42Z", "updated_at": "2018-03-13T13:43:54Z", "closed_at": "2018-03-13T09:23:44Z", "author_association": "NONE", "body_html": "<p>I was looking to use <code>scatter_add_</code> to do <code>bincount</code>.</p>\n<div class=\"highlight highlight-source-python\"><pre><span class=\"pl-k\">import</span> torch\na <span class=\"pl-k\">=</span> torch.LongTensor([<span class=\"pl-c1\">2</span>, <span class=\"pl-c1\">0</span>, <span class=\"pl-c1\">3</span>, <span class=\"pl-c1\">3</span>])\nr <span class=\"pl-k\">=</span> torch.LongTensor(<span class=\"pl-c1\">5</span>)\n\n<span class=\"pl-c\"><span class=\"pl-c\">#</span> works</span>\nr.zero_().scatter_(<span class=\"pl-c1\">0</span>, a, <span class=\"pl-c1\">1</span>)\n<span class=\"pl-c\"><span class=\"pl-c\">#</span> 1</span>\n<span class=\"pl-c\"><span class=\"pl-c\">#</span> 0</span>\n<span class=\"pl-c\"><span class=\"pl-c\">#</span> 1</span>\n<span class=\"pl-c\"><span class=\"pl-c\">#</span> 1</span>\n<span class=\"pl-c\"><span class=\"pl-c\">#</span> 0</span>\n<span class=\"pl-c\"><span class=\"pl-c\">#</span> [torch.LongTensor of size 5]</span>\n\n<span class=\"pl-c\"><span class=\"pl-c\">#</span> scalar source doesn't work</span>\nr.zero_().scatter_add_(<span class=\"pl-c1\">0</span>, a, <span class=\"pl-c1\">1</span>)\n<span class=\"pl-c\"><span class=\"pl-c\">#</span>Traceback (most recent call last):</span>\n<span class=\"pl-c\"><span class=\"pl-c\">#</span>  File \"&lt;stdin&gt;\", line 1, in &lt;module&gt;</span>\n<span class=\"pl-c\"><span class=\"pl-c\">#</span>TypeError: scatter_add_ received an invalid combination of arguments - got (int, torch.LongTensor, int), #but expected (int dim, torch.LongTensor index, torch.LongTensor src)</span>\n\n<span class=\"pl-c\"><span class=\"pl-c\">#</span> no broadcasting? but no checking for memory bounds either?</span>\nr.zero_().scatter_add_(<span class=\"pl-c1\">0</span>, a, torch.LongTensor([<span class=\"pl-c1\">1</span>]))\n<span class=\"pl-c\"><span class=\"pl-c\">#</span>1.4033e+14</span>\n<span class=\"pl-c\"><span class=\"pl-c\">#</span> 0.0000e+00</span>\n<span class=\"pl-c\"><span class=\"pl-c\">#</span> 1.0000e+00</span>\n<span class=\"pl-c\"><span class=\"pl-c\">#</span> 5.4931e+18</span>\n<span class=\"pl-c\"><span class=\"pl-c\">#</span> 0.0000e+00</span>\n<span class=\"pl-c\"><span class=\"pl-c\">#</span> [torch.LongTensor of size 5]</span>\n\n<span class=\"pl-c\"><span class=\"pl-c\">#</span> works ok</span>\nr.zero_().scatter_add_(<span class=\"pl-c1\">0</span>, a, torch.LongTensor([<span class=\"pl-c1\">1</span>]).expand_as(a))\n<span class=\"pl-c\"><span class=\"pl-c\">#</span> 1</span>\n<span class=\"pl-c\"><span class=\"pl-c\">#</span> 0</span>\n<span class=\"pl-c\"><span class=\"pl-c\">#</span> 1</span>\n<span class=\"pl-c\"><span class=\"pl-c\">#</span> 2</span>\n<span class=\"pl-c\"><span class=\"pl-c\">#</span> 0</span>\n<span class=\"pl-c\"><span class=\"pl-c\">#</span> [torch.LongTensor of size 5]</span>\n</pre></div>\n<p>at <code>0.4.0a0+1fdb392</code></p>", "body_text": "I was looking to use scatter_add_ to do bincount.\nimport torch\na = torch.LongTensor([2, 0, 3, 3])\nr = torch.LongTensor(5)\n\n# works\nr.zero_().scatter_(0, a, 1)\n# 1\n# 0\n# 1\n# 1\n# 0\n# [torch.LongTensor of size 5]\n\n# scalar source doesn't work\nr.zero_().scatter_add_(0, a, 1)\n#Traceback (most recent call last):\n#  File \"<stdin>\", line 1, in <module>\n#TypeError: scatter_add_ received an invalid combination of arguments - got (int, torch.LongTensor, int), #but expected (int dim, torch.LongTensor index, torch.LongTensor src)\n\n# no broadcasting? but no checking for memory bounds either?\nr.zero_().scatter_add_(0, a, torch.LongTensor([1]))\n#1.4033e+14\n# 0.0000e+00\n# 1.0000e+00\n# 5.4931e+18\n# 0.0000e+00\n# [torch.LongTensor of size 5]\n\n# works ok\nr.zero_().scatter_add_(0, a, torch.LongTensor([1]).expand_as(a))\n# 1\n# 0\n# 1\n# 2\n# 0\n# [torch.LongTensor of size 5]\n\nat 0.4.0a0+1fdb392", "body": "I was looking to use `scatter_add_` to do `bincount`.\r\n```python\r\nimport torch\r\na = torch.LongTensor([2, 0, 3, 3])\r\nr = torch.LongTensor(5)\r\n\r\n# works\r\nr.zero_().scatter_(0, a, 1)\r\n# 1\r\n# 0\r\n# 1\r\n# 1\r\n# 0\r\n# [torch.LongTensor of size 5]\r\n\r\n# scalar source doesn't work\r\nr.zero_().scatter_add_(0, a, 1)\r\n#Traceback (most recent call last):\r\n#  File \"<stdin>\", line 1, in <module>\r\n#TypeError: scatter_add_ received an invalid combination of arguments - got (int, torch.LongTensor, int), #but expected (int dim, torch.LongTensor index, torch.LongTensor src)\r\n\r\n# no broadcasting? but no checking for memory bounds either?\r\nr.zero_().scatter_add_(0, a, torch.LongTensor([1]))\r\n#1.4033e+14\r\n# 0.0000e+00\r\n# 1.0000e+00\r\n# 5.4931e+18\r\n# 0.0000e+00\r\n# [torch.LongTensor of size 5]\r\n\r\n# works ok\r\nr.zero_().scatter_add_(0, a, torch.LongTensor([1]).expand_as(a))\r\n# 1\r\n# 0\r\n# 1\r\n# 2\r\n# 0\r\n# [torch.LongTensor of size 5]\r\n\r\n```\r\nat `0.4.0a0+1fdb392`\r\n"}