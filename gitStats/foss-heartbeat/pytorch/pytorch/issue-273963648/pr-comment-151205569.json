{"url": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/151205569", "pull_request_review_id": 76875957, "id": 151205569, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE1MTIwNTU2OQ==", "diff_hunk": "@@ -72,28 +72,107 @@ struct SourceLocation {\n // the list types are intentionally simple, but we type-def\n // them here so if we need to change them, refactoring will be easier\n using node_list = std::vector<Node*>;\n-using param_list = node_list;\n+using value_list = std::vector<Value*>;\n using use_list = std::vector<Use>;\n using pyobj_list = std::vector<THPObjectPtr>;\n template<typename T>\n using ArrayRef = at::ArrayRef<T>;\n using NodeKind = Symbol;\n \n-inline TypePtr getInitialType(NodeKind kind) {\n-  switch(kind) {\n-    case kPythonOp:\n-    case kCppOp:\n-    case kEval:\n-    case kFusionGroup:\n-      return multiType();\n-    default:\n-      return nullptr;\n+struct Value {\n+  TH_DISALLOW_COPY_AND_ASSIGN(Value);\n+  Value(Node * node_, size_t offset_);\n+private:\n+  friend struct Node;\n+  Node * node_;\n+  size_t offset_;\n+  size_t unique_ = 0;          // unique id\n+  size_t stage_ = 0;           // 0-forward, 1-backward, 2-double-backward,...", "path": "torch/csrc/jit/ir.h", "position": null, "original_position": 58, "commit_id": "c84859a8d33c6b8f5f25aa0fec424f04b293bfb8", "original_commit_id": "7901741bc1a19aade61c7692c2a8009f4e690ab6", "user": {"login": "zdevito", "id": 370202, "node_id": "MDQ6VXNlcjM3MDIwMg==", "avatar_url": "https://avatars0.githubusercontent.com/u/370202?v=4", "gravatar_id": "", "url": "https://api.github.com/users/zdevito", "html_url": "https://github.com/zdevito", "followers_url": "https://api.github.com/users/zdevito/followers", "following_url": "https://api.github.com/users/zdevito/following{/other_user}", "gists_url": "https://api.github.com/users/zdevito/gists{/gist_id}", "starred_url": "https://api.github.com/users/zdevito/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/zdevito/subscriptions", "organizations_url": "https://api.github.com/users/zdevito/orgs", "repos_url": "https://api.github.com/users/zdevito/repos", "events_url": "https://api.github.com/users/zdevito/events{/privacy}", "received_events_url": "https://api.github.com/users/zdevito/received_events", "type": "User", "site_admin": false}, "body": "Yeah, if we separate inputs per stage into different \"Param\" instructions then we can drop stage from inputs. It would clean up the staging, at the cost of making things like ONNX which disregard the stage more confusing since outputs/inputs to the graph would be a list of lists.  So not for now, but maybe later.", "created_at": "2017-11-15T18:02:08Z", "updated_at": "2018-11-23T15:36:32Z", "html_url": "https://github.com/pytorch/pytorch/pull/3705#discussion_r151205569", "pull_request_url": "https://api.github.com/repos/pytorch/pytorch/pulls/3705", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/151205569"}, "html": {"href": "https://github.com/pytorch/pytorch/pull/3705#discussion_r151205569"}, "pull_request": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/3705"}}, "body_html": "<p>Yeah, if we separate inputs per stage into different \"Param\" instructions then we can drop stage from inputs. It would clean up the staging, at the cost of making things like ONNX which disregard the stage more confusing since outputs/inputs to the graph would be a list of lists.  So not for now, but maybe later.</p>", "body_text": "Yeah, if we separate inputs per stage into different \"Param\" instructions then we can drop stage from inputs. It would clean up the staging, at the cost of making things like ONNX which disregard the stage more confusing since outputs/inputs to the graph would be a list of lists.  So not for now, but maybe later.", "in_reply_to_id": 151047392}