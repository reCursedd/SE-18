{"url": "https://api.github.com/repos/pytorch/pytorch/issues/comments/342599984", "html_url": "https://github.com/pytorch/pytorch/pull/3541#issuecomment-342599984", "issue_url": "https://api.github.com/repos/pytorch/pytorch/issues/3541", "id": 342599984, "node_id": "MDEyOklzc3VlQ29tbWVudDM0MjU5OTk4NA==", "user": {"login": "colesbury", "id": 655866, "node_id": "MDQ6VXNlcjY1NTg2Ng==", "avatar_url": "https://avatars1.githubusercontent.com/u/655866?v=4", "gravatar_id": "", "url": "https://api.github.com/users/colesbury", "html_url": "https://github.com/colesbury", "followers_url": "https://api.github.com/users/colesbury/followers", "following_url": "https://api.github.com/users/colesbury/following{/other_user}", "gists_url": "https://api.github.com/users/colesbury/gists{/gist_id}", "starred_url": "https://api.github.com/users/colesbury/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/colesbury/subscriptions", "organizations_url": "https://api.github.com/users/colesbury/orgs", "repos_url": "https://api.github.com/users/colesbury/repos", "events_url": "https://api.github.com/users/colesbury/events{/privacy}", "received_events_url": "https://api.github.com/users/colesbury/received_events", "type": "User", "site_admin": false}, "created_at": "2017-11-07T19:46:29Z", "updated_at": "2017-11-07T19:46:29Z", "author_association": "MEMBER", "body_html": "<div class=\"highlight highlight-source-python\"><pre><span class=\"pl-k\">&gt;&gt;</span><span class=\"pl-k\">&gt;</span> torch.Tensor(<span class=\"pl-c1\">100000000</span>).uniform_().max()\n<span class=\"pl-c1\">0.9999999403953552</span>\n<span class=\"pl-k\">&gt;&gt;</span><span class=\"pl-k\">&gt;</span> <span class=\"pl-k\">import</span> ctypes; \n<span class=\"pl-k\">&gt;&gt;</span><span class=\"pl-k\">&gt;</span> math <span class=\"pl-k\">=</span> ctypes.cdll.LoadLibrary(<span class=\"pl-c1\">None</span>)\n<span class=\"pl-k\">&gt;&gt;</span><span class=\"pl-k\">&gt;</span> math.nextafterf.restype <span class=\"pl-k\">=</span> ctypes.c_float\n<span class=\"pl-k\">&gt;&gt;</span><span class=\"pl-k\">&gt;</span> math.nextafterf(ctypes.c_float(<span class=\"pl-c1\">1</span>), ctypes.c_float(<span class=\"pl-c1\">0</span>))\n<span class=\"pl-c1\">0.9999999403953552</span></pre></div>", "body_text": ">>> torch.Tensor(100000000).uniform_().max()\n0.9999999403953552\n>>> import ctypes; \n>>> math = ctypes.cdll.LoadLibrary(None)\n>>> math.nextafterf.restype = ctypes.c_float\n>>> math.nextafterf(ctypes.c_float(1), ctypes.c_float(0))\n0.9999999403953552", "body": "```python\r\n>>> torch.Tensor(100000000).uniform_().max()\r\n0.9999999403953552\r\n>>> import ctypes; \r\n>>> math = ctypes.cdll.LoadLibrary(None)\r\n>>> math.nextafterf.restype = ctypes.c_float\r\n>>> math.nextafterf(ctypes.c_float(1), ctypes.c_float(0))\r\n0.9999999403953552\r\n```"}