{"url": "https://api.github.com/repos/pytorch/pytorch/issues/12669", "repository_url": "https://api.github.com/repos/pytorch/pytorch", "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/12669/labels{/name}", "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/12669/comments", "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/12669/events", "html_url": "https://github.com/pytorch/pytorch/issues/12669", "id": 370314119, "node_id": "MDU6SXNzdWUzNzAzMTQxMTk=", "number": 12669, "title": "cuda manual_seed doesn't fully set Philox RNG", "user": {"login": "t-vi", "id": 20787943, "node_id": "MDQ6VXNlcjIwNzg3OTQz", "avatar_url": "https://avatars2.githubusercontent.com/u/20787943?v=4", "gravatar_id": "", "url": "https://api.github.com/users/t-vi", "html_url": "https://github.com/t-vi", "followers_url": "https://api.github.com/users/t-vi/followers", "following_url": "https://api.github.com/users/t-vi/following{/other_user}", "gists_url": "https://api.github.com/users/t-vi/gists{/gist_id}", "starred_url": "https://api.github.com/users/t-vi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/t-vi/subscriptions", "organizations_url": "https://api.github.com/users/t-vi/orgs", "repos_url": "https://api.github.com/users/t-vi/repos", "events_url": "https://api.github.com/users/t-vi/events{/privacy}", "received_events_url": "https://api.github.com/users/t-vi/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2018-10-15T19:41:20Z", "updated_at": "2018-10-16T00:47:12Z", "closed_at": "2018-10-16T00:47:12Z", "author_association": "CONTRIBUTOR", "body_html": "<h2><g-emoji class=\"g-emoji\" alias=\"bug\" fallback-src=\"https://assets-cdn.github.com/images/icons/emoji/unicode/1f41b.png\">\ud83d\udc1b</g-emoji> Bug</h2>\n<p>Manual seed doesn't seem to tie down the Philox RNG, but only the MTGP32 one.</p>\n<h2>To Reproduce</h2>\n<p>Steps to reproduce the behavior:</p>\n<div class=\"highlight highlight-source-python\"><pre><span class=\"pl-k\">import</span> torch\ntorch.cuda.manual_seed(<span class=\"pl-c1\">1234</span>)\nl <span class=\"pl-k\">=</span> torch.cuda.get_rng_state()\ntorch.bernoulli(torch.full((<span class=\"pl-c1\">5</span>,<span class=\"pl-c1\">5</span>), <span class=\"pl-c1\">0.5</span>, <span class=\"pl-v\">device</span><span class=\"pl-k\">=</span><span class=\"pl-s\"><span class=\"pl-pds\">'</span>cuda<span class=\"pl-pds\">'</span></span>))\ntorch.cuda.manual_seed(<span class=\"pl-c1\">1234</span>)\nl2 <span class=\"pl-k\">=</span> torch.cuda.get_rng_state()\n(l<span class=\"pl-k\">==</span>l2).all().item()</pre></div>\n<h2>Expected behavior</h2>\n<p>Output 1, i.e. manual_seed sets the full RNG state.</p>\n<h2>Additional context</h2>\n<p>As we ported a few random generation things, notably dropout and bernoulli to ATen, seeding doesn't help them much.</p>\n<p>This has been reported on the forums: <a href=\"https://discuss.pytorch.org/t/manual-seed-cannot-make-dropout-deterministic-on-cuda-for-pytorch-1-0-preview-version/27281/\" rel=\"nofollow\">https://discuss.pytorch.org/t/manual-seed-cannot-make-dropout-deterministic-on-cuda-for-pytorch-1-0-preview-version/27281/</a></p>\n<p>Thank you Changmao Cheng for reporting with a small example!<br>\nAlso thanks to <a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=6359743\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/albanD\">@albanD</a> and <a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=11662379\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/ptrblck\">@ptrblck</a> for the discussion and verification.</p>\n<h2>Solution</h2>\n<p>I'll produce a patch.</p>", "body_text": "\ud83d\udc1b Bug\nManual seed doesn't seem to tie down the Philox RNG, but only the MTGP32 one.\nTo Reproduce\nSteps to reproduce the behavior:\nimport torch\ntorch.cuda.manual_seed(1234)\nl = torch.cuda.get_rng_state()\ntorch.bernoulli(torch.full((5,5), 0.5, device='cuda'))\ntorch.cuda.manual_seed(1234)\nl2 = torch.cuda.get_rng_state()\n(l==l2).all().item()\nExpected behavior\nOutput 1, i.e. manual_seed sets the full RNG state.\nAdditional context\nAs we ported a few random generation things, notably dropout and bernoulli to ATen, seeding doesn't help them much.\nThis has been reported on the forums: https://discuss.pytorch.org/t/manual-seed-cannot-make-dropout-deterministic-on-cuda-for-pytorch-1-0-preview-version/27281/\nThank you Changmao Cheng for reporting with a small example!\nAlso thanks to @albanD and @ptrblck for the discussion and verification.\nSolution\nI'll produce a patch.", "body": "## \ud83d\udc1b Bug\r\n\r\nManual seed doesn't seem to tie down the Philox RNG, but only the MTGP32 one.\r\n\r\n## To Reproduce\r\n\r\nSteps to reproduce the behavior:\r\n\r\n```python\r\nimport torch\r\ntorch.cuda.manual_seed(1234)\r\nl = torch.cuda.get_rng_state()\r\ntorch.bernoulli(torch.full((5,5), 0.5, device='cuda'))\r\ntorch.cuda.manual_seed(1234)\r\nl2 = torch.cuda.get_rng_state()\r\n(l==l2).all().item()\r\n```\r\n## Expected behavior\r\n\r\nOutput 1, i.e. manual_seed sets the full RNG state.\r\n\r\n## Additional context\r\n\r\nAs we ported a few random generation things, notably dropout and bernoulli to ATen, seeding doesn't help them much.\r\n\r\nThis has been reported on the forums: https://discuss.pytorch.org/t/manual-seed-cannot-make-dropout-deterministic-on-cuda-for-pytorch-1-0-preview-version/27281/\r\n\r\nThank you Changmao Cheng for reporting with a small example!\r\nAlso thanks to @albanD and @ptrblck for the discussion and verification.\r\n\r\n## Solution\r\n\r\nI'll produce a patch."}