{"url": "https://api.github.com/repos/pytorch/pytorch/issues/comments/375177568", "html_url": "https://github.com/pytorch/pytorch/pull/5904#issuecomment-375177568", "issue_url": "https://api.github.com/repos/pytorch/pytorch/issues/5904", "id": 375177568, "node_id": "MDEyOklzc3VlQ29tbWVudDM3NTE3NzU2OA==", "user": {"login": "ezyang", "id": 13564, "node_id": "MDQ6VXNlcjEzNTY0", "avatar_url": "https://avatars0.githubusercontent.com/u/13564?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ezyang", "html_url": "https://github.com/ezyang", "followers_url": "https://api.github.com/users/ezyang/followers", "following_url": "https://api.github.com/users/ezyang/following{/other_user}", "gists_url": "https://api.github.com/users/ezyang/gists{/gist_id}", "starred_url": "https://api.github.com/users/ezyang/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ezyang/subscriptions", "organizations_url": "https://api.github.com/users/ezyang/orgs", "repos_url": "https://api.github.com/users/ezyang/repos", "events_url": "https://api.github.com/users/ezyang/events{/privacy}", "received_events_url": "https://api.github.com/users/ezyang/received_events", "type": "User", "site_admin": false}, "created_at": "2018-03-22T04:39:27Z", "updated_at": "2018-03-22T13:06:37Z", "author_association": "CONTRIBUTOR", "body_html": "<p>CC <a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=1716488\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/cpuhrsch\">@cpuhrsch</a>, this implements many of the suggestions we discussed in \"Jenkins Docker files for human use\"; please take a look!</p>\n<p>This PR is paired with a Docker image update, version <a href=\"https://ci.pytorch.org/jenkins/job/pytorch-docker-master/164/\" rel=\"nofollow\">164</a> which is built with the latest master of pytorch-dockerfiles. To merge this, we must simultaneously bump the DockerVersion of ossci-job-dsl to version 164 (sorry, the workflow here is not very good.)</p>\n<p>The \"native\" pull request triggered job won't use the correct DockerVersion. <a href=\"https://ci.pytorch.org/jenkins/job/pytorch-pull-request/4684/\" rel=\"nofollow\">https://ci.pytorch.org/jenkins/job/pytorch-pull-request/4684/</a> has a build for <a class=\"commit-link\" data-hovercard-type=\"commit\" data-hovercard-url=\"https://github.com/pytorch/pytorch/commit/f75a5a6a2a362f4a6bb0793faac2131507f5b8ca/hovercard\" href=\"https://github.com/pytorch/pytorch/commit/f75a5a6a2a362f4a6bb0793faac2131507f5b8ca\"><tt>f75a5a6</tt></a> with the correct copy of the Docker files.</p>\n<p>Commit message:</p>\n<p>A complete revamp of our test scripts.</p>\n<ul>\n<li>\n<p>All of the scripts are based off of the idea that they should be as<br>\nsimple as possible, and all the heavy lifting done in the construction<br>\nof the Docker file.  The scripts are really simple now.  A bigger<br>\nphilosophical discussion can be found in .jenkins/README.md</p>\n</li>\n<li>\n<p>build-asan.sh is split out of build.sh, as ASAN builds are a bit<br>\nspecialized and it's inappropriate to run many of the other builds<br>\nas part of them.</p>\n</li>\n<li>\n<p>We now build and run with mkl/mkl-include on the CPU only builds</p>\n</li>\n<li>\n<p>We now report sccache and ccache stats at the end of all builds.</p>\n</li>\n<li>\n<p>run_test.py flushes stdout/stderr before making a subprocess call,<br>\nwhich should solve our interleaving problems.</p>\n</li>\n</ul>", "body_text": "CC @cpuhrsch, this implements many of the suggestions we discussed in \"Jenkins Docker files for human use\"; please take a look!\nThis PR is paired with a Docker image update, version 164 which is built with the latest master of pytorch-dockerfiles. To merge this, we must simultaneously bump the DockerVersion of ossci-job-dsl to version 164 (sorry, the workflow here is not very good.)\nThe \"native\" pull request triggered job won't use the correct DockerVersion. https://ci.pytorch.org/jenkins/job/pytorch-pull-request/4684/ has a build for f75a5a6 with the correct copy of the Docker files.\nCommit message:\nA complete revamp of our test scripts.\n\n\nAll of the scripts are based off of the idea that they should be as\nsimple as possible, and all the heavy lifting done in the construction\nof the Docker file.  The scripts are really simple now.  A bigger\nphilosophical discussion can be found in .jenkins/README.md\n\n\nbuild-asan.sh is split out of build.sh, as ASAN builds are a bit\nspecialized and it's inappropriate to run many of the other builds\nas part of them.\n\n\nWe now build and run with mkl/mkl-include on the CPU only builds\n\n\nWe now report sccache and ccache stats at the end of all builds.\n\n\nrun_test.py flushes stdout/stderr before making a subprocess call,\nwhich should solve our interleaving problems.", "body": "CC @cpuhrsch, this implements many of the suggestions we discussed in \"Jenkins Docker files for human use\"; please take a look!\r\n\r\nThis PR is paired with a Docker image update, version [164](https://ci.pytorch.org/jenkins/job/pytorch-docker-master/164/) which is built with the latest master of pytorch-dockerfiles. To merge this, we must simultaneously bump the DockerVersion of ossci-job-dsl to version 164 (sorry, the workflow here is not very good.)\r\n\r\nThe \"native\" pull request triggered job won't use the correct DockerVersion. https://ci.pytorch.org/jenkins/job/pytorch-pull-request/4684/ has a build for f75a5a6a2a362f4a6bb0793faac2131507f5b8ca with the correct copy of the Docker files.\r\n\r\nCommit message:\r\n\r\nA complete revamp of our test scripts.\r\n\r\n- All of the scripts are based off of the idea that they should be as\r\n  simple as possible, and all the heavy lifting done in the construction\r\n  of the Docker file.  The scripts are really simple now.  A bigger\r\n  philosophical discussion can be found in .jenkins/README.md\r\n\r\n- build-asan.sh is split out of build.sh, as ASAN builds are a bit\r\n  specialized and it's inappropriate to run many of the other builds\r\n  as part of them.\r\n\r\n- We now build and run with mkl/mkl-include on the CPU only builds\r\n\r\n- We now report sccache and ccache stats at the end of all builds.\r\n\r\n- run_test.py flushes stdout/stderr before making a subprocess call,\r\n  which should solve our interleaving problems."}