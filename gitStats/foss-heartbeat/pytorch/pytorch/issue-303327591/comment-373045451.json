{"url": "https://api.github.com/repos/pytorch/pytorch/issues/comments/373045451", "html_url": "https://github.com/pytorch/pytorch/pull/5624#issuecomment-373045451", "issue_url": "https://api.github.com/repos/pytorch/pytorch/issues/5624", "id": 373045451, "node_id": "MDEyOklzc3VlQ29tbWVudDM3MzA0NTQ1MQ==", "user": {"login": "zou3519", "id": 5652049, "node_id": "MDQ6VXNlcjU2NTIwNDk=", "avatar_url": "https://avatars3.githubusercontent.com/u/5652049?v=4", "gravatar_id": "", "url": "https://api.github.com/users/zou3519", "html_url": "https://github.com/zou3519", "followers_url": "https://api.github.com/users/zou3519/followers", "following_url": "https://api.github.com/users/zou3519/following{/other_user}", "gists_url": "https://api.github.com/users/zou3519/gists{/gist_id}", "starred_url": "https://api.github.com/users/zou3519/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/zou3519/subscriptions", "organizations_url": "https://api.github.com/users/zou3519/orgs", "repos_url": "https://api.github.com/users/zou3519/repos", "events_url": "https://api.github.com/users/zou3519/events{/privacy}", "received_events_url": "https://api.github.com/users/zou3519/received_events", "type": "User", "site_admin": false}, "created_at": "2018-03-14T14:41:46Z", "updated_at": "2018-03-14T14:41:46Z", "author_association": "CONTRIBUTOR", "body_html": "<p><a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=412328\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/perone\">@perone</a> the exception is originally there in case users attempt to batch data that they expect to be tensors but isn't actually tensor data. If we remove the exception I'm worried that the usability would go down a little, but we'd definitely gain more flexibility.</p>\n<p>Is your use case handled by providing your own <code>collate_fn</code> and passing it into DataLoader or do you think that this flexibility is important for many users?</p>", "body_text": "@perone the exception is originally there in case users attempt to batch data that they expect to be tensors but isn't actually tensor data. If we remove the exception I'm worried that the usability would go down a little, but we'd definitely gain more flexibility.\nIs your use case handled by providing your own collate_fn and passing it into DataLoader or do you think that this flexibility is important for many users?", "body": "@perone the exception is originally there in case users attempt to batch data that they expect to be tensors but isn't actually tensor data. If we remove the exception I'm worried that the usability would go down a little, but we'd definitely gain more flexibility.\r\n\r\nIs your use case handled by providing your own `collate_fn` and passing it into DataLoader or do you think that this flexibility is important for many users?"}