{"url": "https://api.github.com/repos/pytorch/pytorch/issues/8466", "repository_url": "https://api.github.com/repos/pytorch/pytorch", "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/8466/labels{/name}", "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/8466/comments", "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/8466/events", "html_url": "https://github.com/pytorch/pytorch/issues/8466", "id": 332212542, "node_id": "MDU6SXNzdWUzMzIyMTI1NDI=", "number": 8466, "title": "pytorch install fails on THD with improperly expanded cmake `;list`.", "user": {"login": "rainwoodman", "id": 138060, "node_id": "MDQ6VXNlcjEzODA2MA==", "avatar_url": "https://avatars0.githubusercontent.com/u/138060?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rainwoodman", "html_url": "https://github.com/rainwoodman", "followers_url": "https://api.github.com/users/rainwoodman/followers", "following_url": "https://api.github.com/users/rainwoodman/following{/other_user}", "gists_url": "https://api.github.com/users/rainwoodman/gists{/gist_id}", "starred_url": "https://api.github.com/users/rainwoodman/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rainwoodman/subscriptions", "organizations_url": "https://api.github.com/users/rainwoodman/orgs", "repos_url": "https://api.github.com/users/rainwoodman/repos", "events_url": "https://api.github.com/users/rainwoodman/events{/privacy}", "received_events_url": "https://api.github.com/users/rainwoodman/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2018-06-14T00:42:03Z", "updated_at": "2018-06-18T19:00:22Z", "closed_at": null, "author_association": "CONTRIBUTOR", "body_html": "<p>This could reproduce the environment (on a Linux system).</p>\n<pre><code>wget http://repo.continuum.io/miniconda/Miniconda-latest-Linux-x86_64.sh -O miniconda.sh\nchmod +x miniconda.sh\n./miniconda.sh -b -p $HOME/miniconda\nexport PATH=$HOME/miniconda/bin:$PATH\nconda update --yes conda\n\nconda create -n pytorch\nconda activate pytorch\nconda install -y  python numpy pyyaml mkl mkl-include setuptools cmake cffi typing\nconda install -y openblas\nconda install -y gxx_linux-64\nconda install -y -c bccp mpich2=1.4.1p1=h1c2f66e_6\n\nexport NO_CUDA=1\nexport WITH_GLOO_IBVERBS=no\nexport CMAKE_PREFIX_PATH=$CONDA_PREFIX\n\ngit clone --recursive https://github.com/pytorch/pytorch\ncd pytorch\nexport VERBOSE=1\npython setup.py build\n\n....\n\n/home/yfeng1/anaconda3/install/envs/pytorch/bin/x86_64-conda_cos6-linux-gnu-c++  -DWITH_MPI=1 -D_THD_CORE=1 -I/home/yfeng1/source/pytorch/torch/lib/THD -I/home/yfeng1/anaconda3/install/include  -DTH_INDEX_BASE=0 -I\"/home/yfeng1/source/pytorch/torch/lib/tmp_install/include\"   -I\"/home/yfeng1/source/pytorch/torch/lib/tmp_install/include/TH\" -I\"/home/yfeng1/source/pytorch/torch/lib/tmp_install/include/THC\"   -I\"/home/yfeng1/source/pytorch/torch/lib/tmp_install/include/THS\" -I\"/home/yfeng1/source/pytorch/torch/lib/tmp_install/include/THCS\"   -I\"/home/yfeng1/source/pytorch/torch/lib/tmp_install/include/THNN\" -I\"/home/yfeng1/source/pytorch/torch/lib/tmp_install/include/THCUNN\" -DOMPI_SKIP_MPICXX=1 -fexceptions  -std=c++11   -march=nocona -mtune=haswell -ftree-vectorize -fPIC -fstack-protector-strong -fno-plt -O2 -pipe -std=c++11 -O3 -DNDEBUG -fPIC   -fvisibility-inlines-hidden;-fmessage-length=0;-ftree-vectorize;-fno-plt -o CMakeFiles/THD.dir/base/DataChannelRequest.cpp.o -c /home/yfeng1/source/pytorch/torch/lib/THD/base/DataChannelRequest.cpp\nx86_64-conda_cos6-linux-gnu-c++: fatal error: no input files\ncompilation terminated.\n\n.....\n</code></pre>\n<p>I was able to trace the problem to an improperly expanded cmake <code>;list</code>, as I noticed cmake generated strange looking environment variables with semicolons like this:</p>\n<pre><code>$ grep -R \"fvisibility-inlines-hidden;-fmessage-length=0\" *\ntorch/lib/build/THD/CMakeFiles/THD.dir/flags.make:CXX_FLAGS =  -DTH_INDEX_BASE=0 -I\"/home/yfeng1/source/pytorch/torch/lib/tmp_install/include\"   -I\"/home/yfeng1/source/pytorch/torch/lib/tmp_install/include/TH\" -I\"/home/yfeng1/source/pytorch/torch/lib/tmp_install/include/THC\"   -I\"/home/yfeng1/source/pytorch/torch/lib/tmp_install/include/THS\" -I\"/home/yfeng1/source/pytorch/torch/lib/tmp_install/include/THCS\"   -I\"/home/yfeng1/source/pytorch/torch/lib/tmp_install/include/THNN\" -I\"/home/yfeng1/source/pytorch/torch/lib/tmp_install/include/THCUNN\" -DOMPI_SKIP_MPICXX=1 -fexceptions  -std=c++11   -march=nocona -mtune=haswell -ftree-vectorize -fPIC -fstack-protector-strong -fno-plt -O2 -pipe -std=c++11 -O3 -DNDEBUG -fPIC   -fvisibility-inlines-hidden;-fmessage-length=0;-ftree-vectorize;-fno-plt\ntorch/lib/build/THD/CMakeCache.txt:MPI_CXX_COMPILE_OPTIONS:STRING=-fvisibility-inlines-hidden;-fmessage-length=0;-ftree-vectorize;-fno-plt\n</code></pre>\n<p>I suspected this occurred as  MPI_CXX_COMPILATION_OPTIONS (which is supposed to the a <code>;list</code>) is appended to CXX_FLAGS. But I failed to find where this happens from the myriad of cmake modules. Could someone help?</p>\n<p>This probably can be worked around by avoiding triggering a non-empty MPI_CXX_COMPILATION_OPTIONS. I am sure how to do this if the compilers have to have some strange flags.</p>", "body_text": "This could reproduce the environment (on a Linux system).\nwget http://repo.continuum.io/miniconda/Miniconda-latest-Linux-x86_64.sh -O miniconda.sh\nchmod +x miniconda.sh\n./miniconda.sh -b -p $HOME/miniconda\nexport PATH=$HOME/miniconda/bin:$PATH\nconda update --yes conda\n\nconda create -n pytorch\nconda activate pytorch\nconda install -y  python numpy pyyaml mkl mkl-include setuptools cmake cffi typing\nconda install -y openblas\nconda install -y gxx_linux-64\nconda install -y -c bccp mpich2=1.4.1p1=h1c2f66e_6\n\nexport NO_CUDA=1\nexport WITH_GLOO_IBVERBS=no\nexport CMAKE_PREFIX_PATH=$CONDA_PREFIX\n\ngit clone --recursive https://github.com/pytorch/pytorch\ncd pytorch\nexport VERBOSE=1\npython setup.py build\n\n....\n\n/home/yfeng1/anaconda3/install/envs/pytorch/bin/x86_64-conda_cos6-linux-gnu-c++  -DWITH_MPI=1 -D_THD_CORE=1 -I/home/yfeng1/source/pytorch/torch/lib/THD -I/home/yfeng1/anaconda3/install/include  -DTH_INDEX_BASE=0 -I\"/home/yfeng1/source/pytorch/torch/lib/tmp_install/include\"   -I\"/home/yfeng1/source/pytorch/torch/lib/tmp_install/include/TH\" -I\"/home/yfeng1/source/pytorch/torch/lib/tmp_install/include/THC\"   -I\"/home/yfeng1/source/pytorch/torch/lib/tmp_install/include/THS\" -I\"/home/yfeng1/source/pytorch/torch/lib/tmp_install/include/THCS\"   -I\"/home/yfeng1/source/pytorch/torch/lib/tmp_install/include/THNN\" -I\"/home/yfeng1/source/pytorch/torch/lib/tmp_install/include/THCUNN\" -DOMPI_SKIP_MPICXX=1 -fexceptions  -std=c++11   -march=nocona -mtune=haswell -ftree-vectorize -fPIC -fstack-protector-strong -fno-plt -O2 -pipe -std=c++11 -O3 -DNDEBUG -fPIC   -fvisibility-inlines-hidden;-fmessage-length=0;-ftree-vectorize;-fno-plt -o CMakeFiles/THD.dir/base/DataChannelRequest.cpp.o -c /home/yfeng1/source/pytorch/torch/lib/THD/base/DataChannelRequest.cpp\nx86_64-conda_cos6-linux-gnu-c++: fatal error: no input files\ncompilation terminated.\n\n.....\n\nI was able to trace the problem to an improperly expanded cmake ;list, as I noticed cmake generated strange looking environment variables with semicolons like this:\n$ grep -R \"fvisibility-inlines-hidden;-fmessage-length=0\" *\ntorch/lib/build/THD/CMakeFiles/THD.dir/flags.make:CXX_FLAGS =  -DTH_INDEX_BASE=0 -I\"/home/yfeng1/source/pytorch/torch/lib/tmp_install/include\"   -I\"/home/yfeng1/source/pytorch/torch/lib/tmp_install/include/TH\" -I\"/home/yfeng1/source/pytorch/torch/lib/tmp_install/include/THC\"   -I\"/home/yfeng1/source/pytorch/torch/lib/tmp_install/include/THS\" -I\"/home/yfeng1/source/pytorch/torch/lib/tmp_install/include/THCS\"   -I\"/home/yfeng1/source/pytorch/torch/lib/tmp_install/include/THNN\" -I\"/home/yfeng1/source/pytorch/torch/lib/tmp_install/include/THCUNN\" -DOMPI_SKIP_MPICXX=1 -fexceptions  -std=c++11   -march=nocona -mtune=haswell -ftree-vectorize -fPIC -fstack-protector-strong -fno-plt -O2 -pipe -std=c++11 -O3 -DNDEBUG -fPIC   -fvisibility-inlines-hidden;-fmessage-length=0;-ftree-vectorize;-fno-plt\ntorch/lib/build/THD/CMakeCache.txt:MPI_CXX_COMPILE_OPTIONS:STRING=-fvisibility-inlines-hidden;-fmessage-length=0;-ftree-vectorize;-fno-plt\n\nI suspected this occurred as  MPI_CXX_COMPILATION_OPTIONS (which is supposed to the a ;list) is appended to CXX_FLAGS. But I failed to find where this happens from the myriad of cmake modules. Could someone help?\nThis probably can be worked around by avoiding triggering a non-empty MPI_CXX_COMPILATION_OPTIONS. I am sure how to do this if the compilers have to have some strange flags.", "body": "This could reproduce the environment (on a Linux system).\r\n\r\n```\r\nwget http://repo.continuum.io/miniconda/Miniconda-latest-Linux-x86_64.sh -O miniconda.sh\r\nchmod +x miniconda.sh\r\n./miniconda.sh -b -p $HOME/miniconda\r\nexport PATH=$HOME/miniconda/bin:$PATH\r\nconda update --yes conda\r\n\r\nconda create -n pytorch\r\nconda activate pytorch\r\nconda install -y  python numpy pyyaml mkl mkl-include setuptools cmake cffi typing\r\nconda install -y openblas\r\nconda install -y gxx_linux-64\r\nconda install -y -c bccp mpich2=1.4.1p1=h1c2f66e_6\r\n\r\nexport NO_CUDA=1\r\nexport WITH_GLOO_IBVERBS=no\r\nexport CMAKE_PREFIX_PATH=$CONDA_PREFIX\r\n\r\ngit clone --recursive https://github.com/pytorch/pytorch\r\ncd pytorch\r\nexport VERBOSE=1\r\npython setup.py build\r\n\r\n....\r\n\r\n/home/yfeng1/anaconda3/install/envs/pytorch/bin/x86_64-conda_cos6-linux-gnu-c++  -DWITH_MPI=1 -D_THD_CORE=1 -I/home/yfeng1/source/pytorch/torch/lib/THD -I/home/yfeng1/anaconda3/install/include  -DTH_INDEX_BASE=0 -I\"/home/yfeng1/source/pytorch/torch/lib/tmp_install/include\"   -I\"/home/yfeng1/source/pytorch/torch/lib/tmp_install/include/TH\" -I\"/home/yfeng1/source/pytorch/torch/lib/tmp_install/include/THC\"   -I\"/home/yfeng1/source/pytorch/torch/lib/tmp_install/include/THS\" -I\"/home/yfeng1/source/pytorch/torch/lib/tmp_install/include/THCS\"   -I\"/home/yfeng1/source/pytorch/torch/lib/tmp_install/include/THNN\" -I\"/home/yfeng1/source/pytorch/torch/lib/tmp_install/include/THCUNN\" -DOMPI_SKIP_MPICXX=1 -fexceptions  -std=c++11   -march=nocona -mtune=haswell -ftree-vectorize -fPIC -fstack-protector-strong -fno-plt -O2 -pipe -std=c++11 -O3 -DNDEBUG -fPIC   -fvisibility-inlines-hidden;-fmessage-length=0;-ftree-vectorize;-fno-plt -o CMakeFiles/THD.dir/base/DataChannelRequest.cpp.o -c /home/yfeng1/source/pytorch/torch/lib/THD/base/DataChannelRequest.cpp\r\nx86_64-conda_cos6-linux-gnu-c++: fatal error: no input files\r\ncompilation terminated.\r\n\r\n.....\r\n```\r\n\r\nI was able to trace the problem to an improperly expanded cmake `;list`, as I noticed cmake generated strange looking environment variables with semicolons like this:\r\n\r\n```\r\n$ grep -R \"fvisibility-inlines-hidden;-fmessage-length=0\" *\r\ntorch/lib/build/THD/CMakeFiles/THD.dir/flags.make:CXX_FLAGS =  -DTH_INDEX_BASE=0 -I\"/home/yfeng1/source/pytorch/torch/lib/tmp_install/include\"   -I\"/home/yfeng1/source/pytorch/torch/lib/tmp_install/include/TH\" -I\"/home/yfeng1/source/pytorch/torch/lib/tmp_install/include/THC\"   -I\"/home/yfeng1/source/pytorch/torch/lib/tmp_install/include/THS\" -I\"/home/yfeng1/source/pytorch/torch/lib/tmp_install/include/THCS\"   -I\"/home/yfeng1/source/pytorch/torch/lib/tmp_install/include/THNN\" -I\"/home/yfeng1/source/pytorch/torch/lib/tmp_install/include/THCUNN\" -DOMPI_SKIP_MPICXX=1 -fexceptions  -std=c++11   -march=nocona -mtune=haswell -ftree-vectorize -fPIC -fstack-protector-strong -fno-plt -O2 -pipe -std=c++11 -O3 -DNDEBUG -fPIC   -fvisibility-inlines-hidden;-fmessage-length=0;-ftree-vectorize;-fno-plt\r\ntorch/lib/build/THD/CMakeCache.txt:MPI_CXX_COMPILE_OPTIONS:STRING=-fvisibility-inlines-hidden;-fmessage-length=0;-ftree-vectorize;-fno-plt\r\n```\r\n\r\nI suspected this occurred as  MPI_CXX_COMPILATION_OPTIONS (which is supposed to the a `;list`) is appended to CXX_FLAGS. But I failed to find where this happens from the myriad of cmake modules. Could someone help?\r\n\r\nThis probably can be worked around by avoiding triggering a non-empty MPI_CXX_COMPILATION_OPTIONS. I am sure how to do this if the compilers have to have some strange flags."}