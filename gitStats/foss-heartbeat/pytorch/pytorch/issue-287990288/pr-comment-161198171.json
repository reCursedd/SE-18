{"url": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/161198171", "pull_request_review_id": 88447678, "id": 161198171, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE2MTE5ODE3MQ==", "diff_hunk": "@@ -0,0 +1,91 @@\n+import torch\n+from torch.distributions.distribution import Distribution\n+from torch.autograd import Variable\n+from torch.distributions import Categorical\n+from numbers import Number\n+from torch.distributions import constraints\n+from torch.distributions.utils import log_sum_exp, broadcast_all\n+\n+\n+class Multinomial(Distribution):\n+    r\"\"\"\n+    Creates a Multinomial distribution parameterized by `total_count` and\n+    either `probs` or `logits` (but not both). The innermost dimension of\n+    `probs` indexes over categories. All other dimensions index over batches.\n+\n+    Note that `total_count` need not be specified if only :meth:`log_prob` is\n+    called (see example below)\n+\n+    -   :meth:`sample` requires a single shared `total_count` for all\n+        parameters and samples.\n+    -   :meth:`log_prob` allows different `total_count` for each parameter and\n+        sample.\n+\n+    Example::\n+\n+        >>> m = Multinomial(10, torch.Tensor([ 1, 1, 1, 1]))", "path": "torch/distributions/multinomial.py", "position": null, "original_position": 26, "commit_id": "4da726477b0fbdf53cab5d7d4fbda62d3b90bbc5", "original_commit_id": "d431b296a5385684973d2a8126f805fb1002e59b", "user": {"login": "apaszke", "id": 4583066, "node_id": "MDQ6VXNlcjQ1ODMwNjY=", "avatar_url": "https://avatars3.githubusercontent.com/u/4583066?v=4", "gravatar_id": "", "url": "https://api.github.com/users/apaszke", "html_url": "https://github.com/apaszke", "followers_url": "https://api.github.com/users/apaszke/followers", "following_url": "https://api.github.com/users/apaszke/following{/other_user}", "gists_url": "https://api.github.com/users/apaszke/gists{/gist_id}", "starred_url": "https://api.github.com/users/apaszke/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/apaszke/subscriptions", "organizations_url": "https://api.github.com/users/apaszke/orgs", "repos_url": "https://api.github.com/users/apaszke/repos", "events_url": "https://api.github.com/users/apaszke/events{/privacy}", "received_events_url": "https://api.github.com/users/apaszke/received_events", "type": "User", "site_admin": false}, "body": "nit: can we increase `total_count` to something larger (e.g. 100), so that it's clear that `1, 3, 3, 3` below aren't class indices but counts?", "created_at": "2018-01-12T11:22:15Z", "updated_at": "2018-11-23T15:38:05Z", "html_url": "https://github.com/pytorch/pytorch/pull/4624#discussion_r161198171", "pull_request_url": "https://api.github.com/repos/pytorch/pytorch/pulls/4624", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/161198171"}, "html": {"href": "https://github.com/pytorch/pytorch/pull/4624#discussion_r161198171"}, "pull_request": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/4624"}}, "body_html": "<p>nit: can we increase <code>total_count</code> to something larger (e.g. 100), so that it's clear that <code>1, 3, 3, 3</code> below aren't class indices but counts?</p>", "body_text": "nit: can we increase total_count to something larger (e.g. 100), so that it's clear that 1, 3, 3, 3 below aren't class indices but counts?"}