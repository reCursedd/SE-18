{"url": "https://api.github.com/repos/pytorch/pytorch/issues/comments/405016512", "html_url": "https://github.com/pytorch/pytorch/issues/9407#issuecomment-405016512", "issue_url": "https://api.github.com/repos/pytorch/pytorch/issues/9407", "id": 405016512, "node_id": "MDEyOklzc3VlQ29tbWVudDQwNTAxNjUxMg==", "user": {"login": "zasdfgbnm", "id": 1032377, "node_id": "MDQ6VXNlcjEwMzIzNzc=", "avatar_url": "https://avatars2.githubusercontent.com/u/1032377?v=4", "gravatar_id": "", "url": "https://api.github.com/users/zasdfgbnm", "html_url": "https://github.com/zasdfgbnm", "followers_url": "https://api.github.com/users/zasdfgbnm/followers", "following_url": "https://api.github.com/users/zasdfgbnm/following{/other_user}", "gists_url": "https://api.github.com/users/zasdfgbnm/gists{/gist_id}", "starred_url": "https://api.github.com/users/zasdfgbnm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/zasdfgbnm/subscriptions", "organizations_url": "https://api.github.com/users/zasdfgbnm/orgs", "repos_url": "https://api.github.com/users/zasdfgbnm/repos", "events_url": "https://api.github.com/users/zasdfgbnm/events{/privacy}", "received_events_url": "https://api.github.com/users/zasdfgbnm/received_events", "type": "User", "site_admin": false}, "created_at": "2018-07-14T11:16:20Z", "updated_at": "2018-07-14T11:16:20Z", "author_association": "CONTRIBUTOR", "body_html": "<p><a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=3768583\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/gchanan\">@gchanan</a><br>\nI'm not sure if I understand the explanation at <a href=\"https://github.com/gchanan/pytorch/wiki/Broadcasting-Notes#gather-explanation\">gather-explanation</a>:</p>\n<blockquote>\n<p>i &lt;= index.dim() &lt; n,  Note this doesn't come up for numpy.</p>\n</blockquote>\n<p>Shouldn't this always be the case for numpy? Since numpy always has <code>dim=0</code>. Also, shouldn't the examples in <code>i &gt; index.dim()</code> case belong to the <code>i &lt;= index.dim() &lt; n</code> case? Also, is there any difference between <code>i &lt;= index.dim() &lt; n</code> and <code>index.dim() &lt; i &lt; n</code>, shouldn't we always prepend index to make it the same dim as tensor? Also, should there be a <code>n &gt; index.dim()</code> case? In this case we prepend dims to the <code>tensor</code> tensor, rather than to <code>index</code> tensor.</p>", "body_text": "@gchanan\nI'm not sure if I understand the explanation at gather-explanation:\n\ni <= index.dim() < n,  Note this doesn't come up for numpy.\n\nShouldn't this always be the case for numpy? Since numpy always has dim=0. Also, shouldn't the examples in i > index.dim() case belong to the i <= index.dim() < n case? Also, is there any difference between i <= index.dim() < n and index.dim() < i < n, shouldn't we always prepend index to make it the same dim as tensor? Also, should there be a n > index.dim() case? In this case we prepend dims to the tensor tensor, rather than to index tensor.", "body": "@gchanan \r\nI'm not sure if I understand the explanation at [gather-explanation](https://github.com/gchanan/pytorch/wiki/Broadcasting-Notes#gather-explanation):\r\n\r\n> i <= index.dim() < n,  Note this doesn't come up for numpy.\r\n\r\nShouldn't this always be the case for numpy? Since numpy always has `dim=0`. Also, shouldn't the examples in `i > index.dim()` case belong to the `i <= index.dim() < n` case? Also, is there any difference between `i <= index.dim() < n` and `index.dim() < i < n`, shouldn't we always prepend index to make it the same dim as tensor? Also, should there be a `n > index.dim()` case? In this case we prepend dims to the `tensor` tensor, rather than to `index` tensor."}