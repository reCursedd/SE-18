{"url": "https://api.github.com/repos/pytorch/pytorch/issues/comments/297285790", "html_url": "https://github.com/pytorch/pytorch/issues/1355#issuecomment-297285790", "issue_url": "https://api.github.com/repos/pytorch/pytorch/issues/1355", "id": 297285790, "node_id": "MDEyOklzc3VlQ29tbWVudDI5NzI4NTc5MA==", "user": {"login": "apaszke", "id": 4583066, "node_id": "MDQ6VXNlcjQ1ODMwNjY=", "avatar_url": "https://avatars3.githubusercontent.com/u/4583066?v=4", "gravatar_id": "", "url": "https://api.github.com/users/apaszke", "html_url": "https://github.com/apaszke", "followers_url": "https://api.github.com/users/apaszke/followers", "following_url": "https://api.github.com/users/apaszke/following{/other_user}", "gists_url": "https://api.github.com/users/apaszke/gists{/gist_id}", "starred_url": "https://api.github.com/users/apaszke/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/apaszke/subscriptions", "organizations_url": "https://api.github.com/users/apaszke/orgs", "repos_url": "https://api.github.com/users/apaszke/repos", "events_url": "https://api.github.com/users/apaszke/events{/privacy}", "received_events_url": "https://api.github.com/users/apaszke/received_events", "type": "User", "site_admin": false}, "created_at": "2017-04-26T08:20:02Z", "updated_at": "2017-04-26T08:22:09Z", "author_association": "MEMBER", "body_html": "<p><a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=4273204\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/zym1010\">@zym1010</a> default settings doesn't have to be created with such workloads in mind, so yes it might have been an issue. <code>ipcs</code> is for System V shared memory which we aren't using, but I wanted to make sure the same limits don't apply to POSIX shared memory.</p>\n<p>It wouldn't <em>definitely disappear</em>, because if the problem is really there, then it's likely a deadlock between the worker and main process, and one worker might be enough to trigger this. Anyway, I can't fix the issue until I can reproduce it. What are the parameters you're using to run the example and did you modify the code in any way? Also, what's the value of <code>torch.__version__</code>? Are you running in docker?</p>", "body_text": "@zym1010 default settings doesn't have to be created with such workloads in mind, so yes it might have been an issue. ipcs is for System V shared memory which we aren't using, but I wanted to make sure the same limits don't apply to POSIX shared memory.\nIt wouldn't definitely disappear, because if the problem is really there, then it's likely a deadlock between the worker and main process, and one worker might be enough to trigger this. Anyway, I can't fix the issue until I can reproduce it. What are the parameters you're using to run the example and did you modify the code in any way? Also, what's the value of torch.__version__? Are you running in docker?", "body": "@zym1010 default settings doesn't have to be created with such workloads in mind, so yes it might have been an issue. `ipcs` is for System V shared memory which we aren't using, but I wanted to make sure the same limits don't apply to POSIX shared memory.\r\n\r\nIt wouldn't *definitely disappear*, because if the problem is really there, then it's likely a deadlock between the worker and main process, and one worker might be enough to trigger this. Anyway, I can't fix the issue until I can reproduce it. What are the parameters you're using to run the example and did you modify the code in any way? Also, what's the value of `torch.__version__`? Are you running in docker?"}