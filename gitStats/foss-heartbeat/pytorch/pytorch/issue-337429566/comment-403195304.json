{"url": "https://api.github.com/repos/pytorch/pytorch/issues/comments/403195304", "html_url": "https://github.com/pytorch/pytorch/issues/9099#issuecomment-403195304", "issue_url": "https://api.github.com/repos/pytorch/pytorch/issues/9099", "id": 403195304, "node_id": "MDEyOklzc3VlQ29tbWVudDQwMzE5NTMwNA==", "user": {"login": "BIGBALLON", "id": 7837172, "node_id": "MDQ6VXNlcjc4MzcxNzI=", "avatar_url": "https://avatars0.githubusercontent.com/u/7837172?v=4", "gravatar_id": "", "url": "https://api.github.com/users/BIGBALLON", "html_url": "https://github.com/BIGBALLON", "followers_url": "https://api.github.com/users/BIGBALLON/followers", "following_url": "https://api.github.com/users/BIGBALLON/following{/other_user}", "gists_url": "https://api.github.com/users/BIGBALLON/gists{/gist_id}", "starred_url": "https://api.github.com/users/BIGBALLON/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/BIGBALLON/subscriptions", "organizations_url": "https://api.github.com/users/BIGBALLON/orgs", "repos_url": "https://api.github.com/users/BIGBALLON/repos", "events_url": "https://api.github.com/users/BIGBALLON/events{/privacy}", "received_events_url": "https://api.github.com/users/BIGBALLON/received_events", "type": "User", "site_admin": false}, "created_at": "2018-07-07T07:22:21Z", "updated_at": "2018-07-08T11:27:56Z", "author_association": "NONE", "body_html": "<p><a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=4591328\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/aswin1980\">@aswin1980</a><br>\nwhat about this one? <a href=\"https://github.com/BIGBALLON/Caffe2_Demo\">caffe2_demo</a></p>\n<p>You can check this <a href=\"https://github.com/BIGBALLON/Caffe2_Demo/blob/master/02_cifar10/caffe2_cifar10.py\">code</a> which train images from scratch (without lmdb, just use memory data)</p>\n<div class=\"highlight highlight-source-python\"><pre><span class=\"pl-k\">def</span> <span class=\"pl-en\">train_epoch</span>(<span class=\"pl-smi\">model</span>, <span class=\"pl-smi\">train_x</span>, <span class=\"pl-smi\">train_y</span>):\n    batch_num <span class=\"pl-k\">=</span> args.train_images <span class=\"pl-k\">//</span> args.batch_size <span class=\"pl-k\">+</span> <span class=\"pl-c1\">1</span>\n    <span class=\"pl-k\">for</span> i <span class=\"pl-k\">in</span> <span class=\"pl-c1\">range</span>(<span class=\"pl-c1\">0</span>, batch_num):\n        data, label <span class=\"pl-k\">=</span> next_batch_random(args.batch_size, train_x, train_y)\n        <span class=\"pl-k\">if</span> args.use_augmentation:\n            data <span class=\"pl-k\">=</span> data_augmentation(data)\n\n        workspace.FeedBlob(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>data<span class=\"pl-pds\">\"</span></span>, data, <span class=\"pl-v\">device_option</span><span class=\"pl-k\">=</span>device_opts)\n        workspace.FeedBlob(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>label<span class=\"pl-pds\">\"</span></span>, label, <span class=\"pl-v\">device_option</span><span class=\"pl-k\">=</span>device_opts)\n        workspace.RunNet(model.net)\n</pre></div>", "body_text": "@aswin1980\nwhat about this one? caffe2_demo\nYou can check this code which train images from scratch (without lmdb, just use memory data)\ndef train_epoch(model, train_x, train_y):\n    batch_num = args.train_images // args.batch_size + 1\n    for i in range(0, batch_num):\n        data, label = next_batch_random(args.batch_size, train_x, train_y)\n        if args.use_augmentation:\n            data = data_augmentation(data)\n\n        workspace.FeedBlob(\"data\", data, device_option=device_opts)\n        workspace.FeedBlob(\"label\", label, device_option=device_opts)\n        workspace.RunNet(model.net)", "body": "@aswin1980 \r\nwhat about this one? [caffe2_demo](https://github.com/BIGBALLON/Caffe2_Demo)\r\n\r\nYou can check this [code](https://github.com/BIGBALLON/Caffe2_Demo/blob/master/02_cifar10/caffe2_cifar10.py) which train images from scratch (without lmdb, just use memory data)\r\n\r\n```python\r\ndef train_epoch(model, train_x, train_y):\r\n    batch_num = args.train_images // args.batch_size + 1\r\n    for i in range(0, batch_num):\r\n        data, label = next_batch_random(args.batch_size, train_x, train_y)\r\n        if args.use_augmentation:\r\n            data = data_augmentation(data)\r\n\r\n        workspace.FeedBlob(\"data\", data, device_option=device_opts)\r\n        workspace.FeedBlob(\"label\", label, device_option=device_opts)\r\n        workspace.RunNet(model.net)\r\n\r\n```\r\n\r\n"}