{"url": "https://api.github.com/repos/pytorch/pytorch/issues/12193", "repository_url": "https://api.github.com/repos/pytorch/pytorch", "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/12193/labels{/name}", "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/12193/comments", "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/12193/events", "html_url": "https://github.com/pytorch/pytorch/issues/12193", "id": 365082952, "node_id": "MDU6SXNzdWUzNjUwODI5NTI=", "number": 12193, "title": "cuDNN runtime version check too strict", "user": {"login": "sclarkson", "id": 4813047, "node_id": "MDQ6VXNlcjQ4MTMwNDc=", "avatar_url": "https://avatars3.githubusercontent.com/u/4813047?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sclarkson", "html_url": "https://github.com/sclarkson", "followers_url": "https://api.github.com/users/sclarkson/followers", "following_url": "https://api.github.com/users/sclarkson/following{/other_user}", "gists_url": "https://api.github.com/users/sclarkson/gists{/gist_id}", "starred_url": "https://api.github.com/users/sclarkson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sclarkson/subscriptions", "organizations_url": "https://api.github.com/users/sclarkson/orgs", "repos_url": "https://api.github.com/users/sclarkson/repos", "events_url": "https://api.github.com/users/sclarkson/events{/privacy}", "received_events_url": "https://api.github.com/users/sclarkson/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 443483881, "node_id": "MDU6TGFiZWw0NDM0ODM4ODE=", "url": "https://api.github.com/repos/pytorch/pytorch/labels/todo", "name": "todo", "color": "c2e0c6", "default": false}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2018-09-29T01:17:34Z", "updated_at": "2018-10-11T06:58:33Z", "closed_at": "2018-10-11T06:58:33Z", "author_association": "CONTRIBUTOR", "body_html": "<h2><g-emoji class=\"g-emoji\" alias=\"bug\" fallback-src=\"https://assets-cdn.github.com/images/icons/emoji/unicode/1f41b.png\">\ud83d\udc1b</g-emoji> Bug</h2>\n<p>The cuDNN version check is too strict. cuDNN 7 guarantees backwards compatibility of minor releases.</p>\n<p>From <a href=\"https://docs.nvidia.com/deeplearning/sdk/cudnn-developer-guide/index.html\" rel=\"nofollow\">https://docs.nvidia.com/deeplearning/sdk/cudnn-developer-guide/index.html</a></p>\n<blockquote>\n<p>cuDNN API Compatibility</p>\n<p>Beginning in cuDNN 7, binary compatibility of patch and minor releases is maintained as follows:</p>\n<p>Any patch release x.y.z is forward- or backward-compatible with applications built against another cuDNN patch release x.y.w (i.e., of the same major and minor version number, but having w!=z)<br>\ncuDNN minor releases beginning with cuDNN 7 are binary backward-compatible with applications built against the same or earlier patch release (i.e., an app built against cuDNN 7.x is binary compatible with cuDNN library 7.y, where y&gt;=x)<br>\nApplications compiled with a cuDNN version 7.y are not guaranteed to work with 7.x release when y &gt; x.</p>\n</blockquote>\n<p>The runtime version check was introduced in <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load issue title\" data-id=\"229778484\" data-permission-text=\"Issue title is private\" data-url=\"https://github.com/pytorch/pytorch/issues/1586\" data-hovercard-type=\"pull_request\" data-hovercard-url=\"/pytorch/pytorch/pull/1586/hovercard\" href=\"https://github.com/pytorch/pytorch/pull/1586\">#1586</a></p>\n<h2>To Reproduce</h2>\n<p>Steps to reproduce the behavior:</p>\n<ol>\n<li>Compile pytorch with cuDNN 7.2.1</li>\n<li>Update to cuDNN 7.3.0</li>\n<li>Experience <code>RuntimeError: cuDNN version mismatch: PyTorch was compiled against 7201 but linked against 7300</code></li>\n</ol>\n<h2>Expected behavior</h2>\n<p>I would expect to be able to upgrade to a backwards-compatible cuDNN without recompiling.</p>\n<h2>Environment</h2>\n<ul>\n<li>PyTorch Version (e.g., 1.0): 0.4.1</li>\n<li>OS (e.g., Linux): Linux</li>\n<li>How you installed PyTorch (<code>conda</code>, <code>pip</code>, source): source</li>\n<li>Build command you used (if compiling from source): <code>python setup.py build</code></li>\n<li>Python version: 3.6.6</li>\n<li>CUDA/cuDNN version: 9.0 / 7.2.1 + 7.3.0</li>\n<li>GPU models and configuration: 1080 Ti</li>\n</ul>\n<h2>Additional context</h2>\n<p>Compare to Tensorflow's version checking code <a href=\"https://github.com/tensorflow/tensorflow/blob/v1.11.0/tensorflow/stream_executor/cuda/cudnn_version.cc\">here</a></p>", "body_text": "\ud83d\udc1b Bug\nThe cuDNN version check is too strict. cuDNN 7 guarantees backwards compatibility of minor releases.\nFrom https://docs.nvidia.com/deeplearning/sdk/cudnn-developer-guide/index.html\n\ncuDNN API Compatibility\nBeginning in cuDNN 7, binary compatibility of patch and minor releases is maintained as follows:\nAny patch release x.y.z is forward- or backward-compatible with applications built against another cuDNN patch release x.y.w (i.e., of the same major and minor version number, but having w!=z)\ncuDNN minor releases beginning with cuDNN 7 are binary backward-compatible with applications built against the same or earlier patch release (i.e., an app built against cuDNN 7.x is binary compatible with cuDNN library 7.y, where y>=x)\nApplications compiled with a cuDNN version 7.y are not guaranteed to work with 7.x release when y > x.\n\nThe runtime version check was introduced in #1586\nTo Reproduce\nSteps to reproduce the behavior:\n\nCompile pytorch with cuDNN 7.2.1\nUpdate to cuDNN 7.3.0\nExperience RuntimeError: cuDNN version mismatch: PyTorch was compiled against 7201 but linked against 7300\n\nExpected behavior\nI would expect to be able to upgrade to a backwards-compatible cuDNN without recompiling.\nEnvironment\n\nPyTorch Version (e.g., 1.0): 0.4.1\nOS (e.g., Linux): Linux\nHow you installed PyTorch (conda, pip, source): source\nBuild command you used (if compiling from source): python setup.py build\nPython version: 3.6.6\nCUDA/cuDNN version: 9.0 / 7.2.1 + 7.3.0\nGPU models and configuration: 1080 Ti\n\nAdditional context\nCompare to Tensorflow's version checking code here", "body": "## \ud83d\udc1b Bug\r\n\r\nThe cuDNN version check is too strict. cuDNN 7 guarantees backwards compatibility of minor releases.\r\n\r\nFrom https://docs.nvidia.com/deeplearning/sdk/cudnn-developer-guide/index.html\r\n\r\n> cuDNN API Compatibility\r\n>\r\n> Beginning in cuDNN 7, binary compatibility of patch and minor releases is maintained as follows:\r\n>\r\n>Any patch release x.y.z is forward- or backward-compatible with applications built against another cuDNN patch release x.y.w (i.e., of the same major and minor version number, but having w!=z)\r\ncuDNN minor releases beginning with cuDNN 7 are binary backward-compatible with applications built against the same or earlier patch release (i.e., an app built against cuDNN 7.x is binary compatible with cuDNN library 7.y, where y>=x)\r\nApplications compiled with a cuDNN version 7.y are not guaranteed to work with 7.x release when y > x.\r\n\r\nThe runtime version check was introduced in https://github.com/pytorch/pytorch/pull/1586\r\n\r\n\r\n## To Reproduce\r\n\r\nSteps to reproduce the behavior:\r\n\r\n1. Compile pytorch with cuDNN 7.2.1\r\n2. Update to cuDNN 7.3.0\r\n3. Experience `RuntimeError: cuDNN version mismatch: PyTorch was compiled against 7201 but linked against 7300`\r\n\r\n## Expected behavior\r\n\r\nI would expect to be able to upgrade to a backwards-compatible cuDNN without recompiling.\r\n\r\n## Environment\r\n\r\n - PyTorch Version (e.g., 1.0): 0.4.1\r\n - OS (e.g., Linux): Linux\r\n - How you installed PyTorch (`conda`, `pip`, source): source\r\n - Build command you used (if compiling from source): `python setup.py build`\r\n - Python version: 3.6.6\r\n - CUDA/cuDNN version: 9.0 / 7.2.1 + 7.3.0\r\n - GPU models and configuration: 1080 Ti\r\n\r\n## Additional context\r\n\r\nCompare to Tensorflow's version checking code [here](https://github.com/tensorflow/tensorflow/blob/v1.11.0/tensorflow/stream_executor/cuda/cudnn_version.cc)\r\n"}