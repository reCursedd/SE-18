{"url": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/220246457", "pull_request_review_id": 158609156, "id": 220246457, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIyMDI0NjQ1Nw==", "diff_hunk": "@@ -527,7 +534,13 @@ void initJitScriptBindings(PyObject* module) {\n   });\n \n   m.def(\"merge_type_from_type_comment\", &mergeTypesFromTypeComment);\n-  m.def(\"import_ir_module\", import_ir_module);\n+  m.def(\"import_ir_module\", [](ModuleLookup module_lookup, const std::string& filename) {\n+      import_ir_module(module_lookup, filename);\n+      });\n+  m.def(\"import_ir_module_from_buffer\", [](ModuleLookup module_lookup, const std::string& buffer) {\n+      std::istringstream in(buffer);", "path": "torch/csrc/jit/script/init.cpp", "position": null, "original_position": 25, "commit_id": "de907e667d379993e7dab835fb401b820b46b567", "original_commit_id": "eded46ebe63e67bfaa33fd49dd25ceaff549ed45", "user": {"login": "apaszke", "id": 4583066, "node_id": "MDQ6VXNlcjQ1ODMwNjY=", "avatar_url": "https://avatars3.githubusercontent.com/u/4583066?v=4", "gravatar_id": "", "url": "https://api.github.com/users/apaszke", "html_url": "https://github.com/apaszke", "followers_url": "https://api.github.com/users/apaszke/followers", "following_url": "https://api.github.com/users/apaszke/following{/other_user}", "gists_url": "https://api.github.com/users/apaszke/gists{/gist_id}", "starred_url": "https://api.github.com/users/apaszke/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/apaszke/subscriptions", "organizations_url": "https://api.github.com/users/apaszke/orgs", "repos_url": "https://api.github.com/users/apaszke/repos", "events_url": "https://api.github.com/users/apaszke/events{/privacy}", "received_events_url": "https://api.github.com/users/apaszke/received_events", "type": "User", "site_admin": false}, "body": "This is unfortunately extremely inefficient, because it will keep 3 copies of the buffer in memory: one for the Python bytes object, one for `std::string` (which needs to own its data), and one for `istringstream` which uses `buffer` to fill its internal buffer. I'm not sure how this can be fixed though.", "created_at": "2018-09-25T15:40:45Z", "updated_at": "2018-11-23T15:51:54Z", "html_url": "https://github.com/pytorch/pytorch/pull/11932#discussion_r220246457", "pull_request_url": "https://api.github.com/repos/pytorch/pytorch/pulls/11932", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/220246457"}, "html": {"href": "https://github.com/pytorch/pytorch/pull/11932#discussion_r220246457"}, "pull_request": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/11932"}}, "body_html": "<p>This is unfortunately extremely inefficient, because it will keep 3 copies of the buffer in memory: one for the Python bytes object, one for <code>std::string</code> (which needs to own its data), and one for <code>istringstream</code> which uses <code>buffer</code> to fill its internal buffer. I'm not sure how this can be fixed though.</p>", "body_text": "This is unfortunately extremely inefficient, because it will keep 3 copies of the buffer in memory: one for the Python bytes object, one for std::string (which needs to own its data), and one for istringstream which uses buffer to fill its internal buffer. I'm not sure how this can be fixed though."}