{"url": "https://api.github.com/repos/pytorch/pytorch/issues/3860", "repository_url": "https://api.github.com/repos/pytorch/pytorch", "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/3860/labels{/name}", "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/3860/comments", "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/3860/events", "html_url": "https://github.com/pytorch/pytorch/issues/3860", "id": 276673523, "node_id": "MDU6SXNzdWUyNzY2NzM1MjM=", "number": 3860, "title": "ppc64le: test_nn.py failures due to exception not being caught", "user": {"login": "cdiep", "id": 7155399, "node_id": "MDQ6VXNlcjcxNTUzOTk=", "avatar_url": "https://avatars1.githubusercontent.com/u/7155399?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cdiep", "html_url": "https://github.com/cdiep", "followers_url": "https://api.github.com/users/cdiep/followers", "following_url": "https://api.github.com/users/cdiep/following{/other_user}", "gists_url": "https://api.github.com/users/cdiep/gists{/gist_id}", "starred_url": "https://api.github.com/users/cdiep/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cdiep/subscriptions", "organizations_url": "https://api.github.com/users/cdiep/orgs", "repos_url": "https://api.github.com/users/cdiep/repos", "events_url": "https://api.github.com/users/cdiep/events{/privacy}", "received_events_url": "https://api.github.com/users/cdiep/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2017-11-24T17:36:14Z", "updated_at": "2017-11-29T21:54:29Z", "closed_at": "2017-11-29T21:54:29Z", "author_association": "CONTRIBUTOR", "body_html": "<p>Run test_nn.py unit tests on Ubuntu 16.04 ppc64le.</p>\n<p>Most tests (out of  633 tests)  in test_nn.py pass except for 16 tests that use method _test_maxpool_indices.  These tests would fail when executing the last statement in this method ( self.assertRaises(RuntimeError, lambda: output.backward(grad_output)) )  with error message like  \"variables needed for gradient computation has been modified by an inplace operation\" error.  While the runtime_error is expected,  the error should have been caught  by the try/exception loop in \"assertRaises\" as design instead of being terminated/aborted.  The issue seems to be that the std::runtime_error gets raised before the assertReases gets call even with the lambda expression.</p>\n<p>(pytorch-new) cdiep@JARVICENAE-0A0A184E:~/pytorch/test$ pytest -v test_nn.py -k test_MaxPool1d_indices  -s<br>\n======================================================== test session starts =========================================================<br>\nplatform linux -- Python 3.6.2, pytest-3.2.3, py-1.4.34, pluggy-0.4.0 -- /home/cdiep/miniconda3/envs/pytorch-new/bin/python<br>\ncachedir: ../.cache<br>\nrootdir: /home/cdiep/pytorch, inifile:<br>\ncollected 633 items</p>\n<p>test_nn.py::TestNN::test_MaxPool1d_indices terminate called after throwing an instance of 'std::runtime_error'<br>\nwhat():  one of the variables needed for gradient computation has been modified by an inplace operation<br>\nAborted</p>", "body_text": "Run test_nn.py unit tests on Ubuntu 16.04 ppc64le.\nMost tests (out of  633 tests)  in test_nn.py pass except for 16 tests that use method _test_maxpool_indices.  These tests would fail when executing the last statement in this method ( self.assertRaises(RuntimeError, lambda: output.backward(grad_output)) )  with error message like  \"variables needed for gradient computation has been modified by an inplace operation\" error.  While the runtime_error is expected,  the error should have been caught  by the try/exception loop in \"assertRaises\" as design instead of being terminated/aborted.  The issue seems to be that the std::runtime_error gets raised before the assertReases gets call even with the lambda expression.\n(pytorch-new) cdiep@JARVICENAE-0A0A184E:~/pytorch/test$ pytest -v test_nn.py -k test_MaxPool1d_indices  -s\n======================================================== test session starts =========================================================\nplatform linux -- Python 3.6.2, pytest-3.2.3, py-1.4.34, pluggy-0.4.0 -- /home/cdiep/miniconda3/envs/pytorch-new/bin/python\ncachedir: ../.cache\nrootdir: /home/cdiep/pytorch, inifile:\ncollected 633 items\ntest_nn.py::TestNN::test_MaxPool1d_indices terminate called after throwing an instance of 'std::runtime_error'\nwhat():  one of the variables needed for gradient computation has been modified by an inplace operation\nAborted", "body": "Run test_nn.py unit tests on Ubuntu 16.04 ppc64le.\r\n\r\nMost tests (out of  633 tests)  in test_nn.py pass except for 16 tests that use method _test_maxpool_indices.  These tests would fail when executing the last statement in this method ( self.assertRaises(RuntimeError, lambda: output.backward(grad_output)) )  with error message like  \"variables needed for gradient computation has been modified by an inplace operation\" error.  While the runtime_error is expected,  the error should have been caught  by the try/exception loop in \"assertRaises\" as design instead of being terminated/aborted.  The issue seems to be that the std::runtime_error gets raised before the assertReases gets call even with the lambda expression.\r\n\r\n(pytorch-new) cdiep@JARVICENAE-0A0A184E:~/pytorch/test$ pytest -v test_nn.py -k test_MaxPool1d_indices  -s\r\n======================================================== test session starts =========================================================\r\nplatform linux -- Python 3.6.2, pytest-3.2.3, py-1.4.34, pluggy-0.4.0 -- /home/cdiep/miniconda3/envs/pytorch-new/bin/python\r\ncachedir: ../.cache\r\nrootdir: /home/cdiep/pytorch, inifile:\r\ncollected 633 items\r\n\r\ntest_nn.py::TestNN::test_MaxPool1d_indices terminate called after throwing an instance of 'std::runtime_error'\r\n  what():  one of the variables needed for gradient computation has been modified by an inplace operation\r\nAborted"}