{"url": "https://api.github.com/repos/pytorch/pytorch/issues/comments/410286692", "html_url": "https://github.com/pytorch/pytorch/issues/10096#issuecomment-410286692", "issue_url": "https://api.github.com/repos/pytorch/pytorch/issues/10096", "id": 410286692, "node_id": "MDEyOklzc3VlQ29tbWVudDQxMDI4NjY5Mg==", "user": {"login": "zou3519", "id": 5652049, "node_id": "MDQ6VXNlcjU2NTIwNDk=", "avatar_url": "https://avatars3.githubusercontent.com/u/5652049?v=4", "gravatar_id": "", "url": "https://api.github.com/users/zou3519", "html_url": "https://github.com/zou3519", "followers_url": "https://api.github.com/users/zou3519/followers", "following_url": "https://api.github.com/users/zou3519/following{/other_user}", "gists_url": "https://api.github.com/users/zou3519/gists{/gist_id}", "starred_url": "https://api.github.com/users/zou3519/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/zou3519/subscriptions", "organizations_url": "https://api.github.com/users/zou3519/orgs", "repos_url": "https://api.github.com/users/zou3519/repos", "events_url": "https://api.github.com/users/zou3519/events{/privacy}", "received_events_url": "https://api.github.com/users/zou3519/received_events", "type": "User", "site_admin": false}, "created_at": "2018-08-03T15:19:59Z", "updated_at": "2018-08-03T15:22:08Z", "author_association": "CONTRIBUTOR", "body_html": "<p>What changed is that we don't have explicit expands anymore; some of the operators (add, mul, sub, and div, and possibly others?) can do the broadcasting themselves.</p>\n<p>I thought about two potential solutions for the graph fuser to adapt to this:</p>\n<ol>\n<li>We could have a pass to add explicit expands before the graph fuser pass and a pass to remove explicit expands after. This way all fusion opportunities are available to the graph fuser and we can keep the invariant that simple mappable operations must have inputs and outputs of the same size.</li>\n<li>The graph fuser can emit expand nodes for a simple mappable operation if the only thing stopping it from fusing the operation is that its inputs are not the same size.</li>\n</ol>", "body_text": "What changed is that we don't have explicit expands anymore; some of the operators (add, mul, sub, and div, and possibly others?) can do the broadcasting themselves.\nI thought about two potential solutions for the graph fuser to adapt to this:\n\nWe could have a pass to add explicit expands before the graph fuser pass and a pass to remove explicit expands after. This way all fusion opportunities are available to the graph fuser and we can keep the invariant that simple mappable operations must have inputs and outputs of the same size.\nThe graph fuser can emit expand nodes for a simple mappable operation if the only thing stopping it from fusing the operation is that its inputs are not the same size.", "body": "What changed is that we don't have explicit expands anymore; some of the operators (add, mul, sub, and div, and possibly others?) can do the broadcasting themselves.\r\n\r\nI thought about two potential solutions for the graph fuser to adapt to this:\r\n1) We could have a pass to add explicit expands before the graph fuser pass and a pass to remove explicit expands after. This way all fusion opportunities are available to the graph fuser and we can keep the invariant that simple mappable operations must have inputs and outputs of the same size.\r\n2) The graph fuser can emit expand nodes for a simple mappable operation if the only thing stopping it from fusing the operation is that its inputs are not the same size."}