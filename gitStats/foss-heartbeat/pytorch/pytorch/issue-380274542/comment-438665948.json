{"url": "https://api.github.com/repos/pytorch/pytorch/issues/comments/438665948", "html_url": "https://github.com/pytorch/pytorch/issues/13898#issuecomment-438665948", "issue_url": "https://api.github.com/repos/pytorch/pytorch/issues/13898", "id": 438665948, "node_id": "MDEyOklzc3VlQ29tbWVudDQzODY2NTk0OA==", "user": {"login": "leconteur", "id": 1876772, "node_id": "MDQ6VXNlcjE4NzY3NzI=", "avatar_url": "https://avatars3.githubusercontent.com/u/1876772?v=4", "gravatar_id": "", "url": "https://api.github.com/users/leconteur", "html_url": "https://github.com/leconteur", "followers_url": "https://api.github.com/users/leconteur/followers", "following_url": "https://api.github.com/users/leconteur/following{/other_user}", "gists_url": "https://api.github.com/users/leconteur/gists{/gist_id}", "starred_url": "https://api.github.com/users/leconteur/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/leconteur/subscriptions", "organizations_url": "https://api.github.com/users/leconteur/orgs", "repos_url": "https://api.github.com/users/leconteur/repos", "events_url": "https://api.github.com/users/leconteur/events{/privacy}", "received_events_url": "https://api.github.com/users/leconteur/received_events", "type": "User", "site_admin": false}, "created_at": "2018-11-14T13:43:39Z", "updated_at": "2018-11-14T14:09:38Z", "author_association": "NONE", "body_html": "<p>Thank you for your help. It does work with those modifications. However, I did not manage to make a torch tensor but only an A10 tensor. As such, I can't use it in a model.</p>\n<pre><code>#include &lt;torch/script.h&gt; // One-stop header.\n\n#include &lt;iostream&gt;\n#include &lt;memory&gt;\n#include &lt;opencv2/opencv.hpp&gt;\n#include &lt;opencv2/core/cuda.hpp&gt;\n#include &lt;ATen/ATen.h&gt;\n\nusing namespace cv;\n\nvoid deleter(void* arg) {};\n\nint main(int argc, const char* argv[]) {\n    Mat gray_image = Mat::ones(9, 9, CV_32FC1); \n    Mat image;\n    cvtColor(gray_image, image, COLOR_GRAY2RGB);\n\n    cuda::GpuMat gImage;\n    gImage.upload(image);\n    std::vector&lt;int64_t&gt; sizes = {1, static_cast&lt;int64_t&gt;(gImage.channels()),\n                              static_cast&lt;int64_t&gt;(gImage.rows),\n                              static_cast&lt;int64_t&gt;(gImage.cols)};\n    long long step = gImage.step / sizeof(float);\n    std::vector&lt;int64_t&gt; strides = {1, step, static_cast&lt;int64_t&gt;(gImage.channels())};\n\n    auto options = torch::TensorOptions().dtype(torch::kFloat32).device(torch::kCUDA);\n    auto tensor_image = at::from_blob(gImage.data, torch::IntList(sizes), torch::IntList(strides), deleter,  options);\n    std::cout &lt;&lt; tensor_image &lt;&lt; std::endl;\n    return 0;\n}\n\n</code></pre>", "body_text": "Thank you for your help. It does work with those modifications. However, I did not manage to make a torch tensor but only an A10 tensor. As such, I can't use it in a model.\n#include <torch/script.h> // One-stop header.\n\n#include <iostream>\n#include <memory>\n#include <opencv2/opencv.hpp>\n#include <opencv2/core/cuda.hpp>\n#include <ATen/ATen.h>\n\nusing namespace cv;\n\nvoid deleter(void* arg) {};\n\nint main(int argc, const char* argv[]) {\n    Mat gray_image = Mat::ones(9, 9, CV_32FC1); \n    Mat image;\n    cvtColor(gray_image, image, COLOR_GRAY2RGB);\n\n    cuda::GpuMat gImage;\n    gImage.upload(image);\n    std::vector<int64_t> sizes = {1, static_cast<int64_t>(gImage.channels()),\n                              static_cast<int64_t>(gImage.rows),\n                              static_cast<int64_t>(gImage.cols)};\n    long long step = gImage.step / sizeof(float);\n    std::vector<int64_t> strides = {1, step, static_cast<int64_t>(gImage.channels())};\n\n    auto options = torch::TensorOptions().dtype(torch::kFloat32).device(torch::kCUDA);\n    auto tensor_image = at::from_blob(gImage.data, torch::IntList(sizes), torch::IntList(strides), deleter,  options);\n    std::cout << tensor_image << std::endl;\n    return 0;\n}", "body": "Thank you for your help. It does work with those modifications. However, I did not manage to make a torch tensor but only an A10 tensor. As such, I can't use it in a model.\r\n```\r\n#include <torch/script.h> // One-stop header.\r\n\r\n#include <iostream>\r\n#include <memory>\r\n#include <opencv2/opencv.hpp>\r\n#include <opencv2/core/cuda.hpp>\r\n#include <ATen/ATen.h>\r\n\r\nusing namespace cv;\r\n\r\nvoid deleter(void* arg) {};\r\n\r\nint main(int argc, const char* argv[]) {\r\n    Mat gray_image = Mat::ones(9, 9, CV_32FC1); \r\n    Mat image;\r\n    cvtColor(gray_image, image, COLOR_GRAY2RGB);\r\n\r\n    cuda::GpuMat gImage;\r\n    gImage.upload(image);\r\n    std::vector<int64_t> sizes = {1, static_cast<int64_t>(gImage.channels()),\r\n                              static_cast<int64_t>(gImage.rows),\r\n                              static_cast<int64_t>(gImage.cols)};\r\n    long long step = gImage.step / sizeof(float);\r\n    std::vector<int64_t> strides = {1, step, static_cast<int64_t>(gImage.channels())};\r\n\r\n    auto options = torch::TensorOptions().dtype(torch::kFloat32).device(torch::kCUDA);\r\n    auto tensor_image = at::from_blob(gImage.data, torch::IntList(sizes), torch::IntList(strides), deleter,  options);\r\n    std::cout << tensor_image << std::endl;\r\n    return 0;\r\n}\r\n\r\n```\r\n"}