{"url": "https://api.github.com/repos/pytorch/pytorch/issues/comments/438731527", "html_url": "https://github.com/pytorch/pytorch/issues/13898#issuecomment-438731527", "issue_url": "https://api.github.com/repos/pytorch/pytorch/issues/13898", "id": 438731527, "node_id": "MDEyOklzc3VlQ29tbWVudDQzODczMTUyNw==", "user": {"login": "goldsborough", "id": 6429851, "node_id": "MDQ6VXNlcjY0Mjk4NTE=", "avatar_url": "https://avatars3.githubusercontent.com/u/6429851?v=4", "gravatar_id": "", "url": "https://api.github.com/users/goldsborough", "html_url": "https://github.com/goldsborough", "followers_url": "https://api.github.com/users/goldsborough/followers", "following_url": "https://api.github.com/users/goldsborough/following{/other_user}", "gists_url": "https://api.github.com/users/goldsborough/gists{/gist_id}", "starred_url": "https://api.github.com/users/goldsborough/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/goldsborough/subscriptions", "organizations_url": "https://api.github.com/users/goldsborough/orgs", "repos_url": "https://api.github.com/users/goldsborough/repos", "events_url": "https://api.github.com/users/goldsborough/events{/privacy}", "received_events_url": "https://api.github.com/users/goldsborough/received_events", "type": "User", "site_admin": false}, "created_at": "2018-11-14T16:44:18Z", "updated_at": "2018-11-14T16:45:53Z", "author_association": "CONTRIBUTOR", "body_html": "<p><a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=1876772\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/leconteur\">@leconteur</a> You need to change <code>at::from_blob</code> to <code>torch::from_blob</code>. That will create a variable instead of a tensor. If you upgrade to the latest nightly you can just use <code>torch::</code> instead of <code>at::</code> for everything and avoid such details. So just change</p>\n<div class=\"highlight highlight-source-c++\"><pre><span class=\"pl-k\">auto</span> options = torch::TensorOptions().dtype(torch::<span class=\"pl-c1\">kFloat32</span>).device(torch::<span class=\"pl-c1\">kCUDA</span>);\n<span class=\"pl-k\">auto</span> tensor_image = at::from_blob(<span class=\"pl-smi\">gImage</span>.data, torch::IntList(sizes), torch::IntList(strides), deleter,  options);</pre></div>\n<p>to</p>\n<div class=\"highlight highlight-source-c++\"><pre><span class=\"pl-k\">auto</span> tensor_image = torch::from_blob(<span class=\"pl-smi\">gImage</span>.data, sizes, strides, deleter,  torch::<span class=\"pl-c1\">kCUDA</span>);</pre></div>\n<p>Notice I removed the explicit <code>at::IntList()</code> conversions -- those happen implicitly. An you can reduce the whole line about creating tensor options to just <code>torch::kCUDA</code> -- float32 is the default already. Also see <a href=\"https://pytorch.org/cppdocs/notes/tensor_creation.html\" rel=\"nofollow\">https://pytorch.org/cppdocs/notes/tensor_creation.html</a> for a tutorial on how to create tensors. You also shouldn't need to include <code>#include &lt;ATen/ATen.h&gt;</code>, that will always be available through the torch headers.</p>\n<p>I'll also send a PR to make the deleter an optional argument for the overload that takes strides.</p>", "body_text": "@leconteur You need to change at::from_blob to torch::from_blob. That will create a variable instead of a tensor. If you upgrade to the latest nightly you can just use torch:: instead of at:: for everything and avoid such details. So just change\nauto options = torch::TensorOptions().dtype(torch::kFloat32).device(torch::kCUDA);\nauto tensor_image = at::from_blob(gImage.data, torch::IntList(sizes), torch::IntList(strides), deleter,  options);\nto\nauto tensor_image = torch::from_blob(gImage.data, sizes, strides, deleter,  torch::kCUDA);\nNotice I removed the explicit at::IntList() conversions -- those happen implicitly. An you can reduce the whole line about creating tensor options to just torch::kCUDA -- float32 is the default already. Also see https://pytorch.org/cppdocs/notes/tensor_creation.html for a tutorial on how to create tensors. You also shouldn't need to include #include <ATen/ATen.h>, that will always be available through the torch headers.\nI'll also send a PR to make the deleter an optional argument for the overload that takes strides.", "body": "@leconteur You need to change `at::from_blob` to `torch::from_blob`. That will create a variable instead of a tensor. If you upgrade to the latest nightly you can just use `torch::` instead of `at::` for everything and avoid such details. So just change\r\n\r\n```cpp\r\nauto options = torch::TensorOptions().dtype(torch::kFloat32).device(torch::kCUDA);\r\nauto tensor_image = at::from_blob(gImage.data, torch::IntList(sizes), torch::IntList(strides), deleter,  options);\r\n```\r\n\r\nto\r\n\r\n```cpp\r\nauto tensor_image = torch::from_blob(gImage.data, sizes, strides, deleter,  torch::kCUDA);\r\n```\r\n\r\nNotice I removed the explicit `at::IntList()` conversions -- those happen implicitly. An you can reduce the whole line about creating tensor options to just `torch::kCUDA` -- float32 is the default already. Also see https://pytorch.org/cppdocs/notes/tensor_creation.html for a tutorial on how to create tensors. You also shouldn't need to include `#include <ATen/ATen.h>`, that will always be available through the torch headers.\r\n\r\nI'll also send a PR to make the deleter an optional argument for the overload that takes strides."}