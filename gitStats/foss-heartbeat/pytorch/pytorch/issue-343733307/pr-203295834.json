{"url": "https://api.github.com/repos/pytorch/pytorch/pulls/9718", "id": 203295834, "node_id": "MDExOlB1bGxSZXF1ZXN0MjAzMjk1ODM0", "html_url": "https://github.com/pytorch/pytorch/pull/9718", "diff_url": "https://github.com/pytorch/pytorch/pull/9718.diff", "patch_url": "https://github.com/pytorch/pytorch/pull/9718.patch", "issue_url": "https://api.github.com/repos/pytorch/pytorch/issues/9718", "number": 9718, "state": "closed", "locked": false, "title": "Switch interpreter to use IValue's primitive int/floats (#9584)", "user": {"login": "zdevito", "id": 370202, "node_id": "MDQ6VXNlcjM3MDIwMg==", "avatar_url": "https://avatars0.githubusercontent.com/u/370202?v=4", "gravatar_id": "", "url": "https://api.github.com/users/zdevito", "html_url": "https://github.com/zdevito", "followers_url": "https://api.github.com/users/zdevito/followers", "following_url": "https://api.github.com/users/zdevito/following{/other_user}", "gists_url": "https://api.github.com/users/zdevito/gists{/gist_id}", "starred_url": "https://api.github.com/users/zdevito/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/zdevito/subscriptions", "organizations_url": "https://api.github.com/users/zdevito/orgs", "repos_url": "https://api.github.com/users/zdevito/repos", "events_url": "https://api.github.com/users/zdevito/events{/privacy}", "received_events_url": "https://api.github.com/users/zdevito/received_events", "type": "User", "site_admin": false}, "body": "Summary:\nThis patch switches the interpreter to use IValue's primitive numbers rather than tensors for computing on integers and floats. In addition to preparing the interpreter for first-class support of other types, this cleans up the handling of primitive numbers, making it possible to just use the normal operator overloading dispatch to find the right implementation for numbers. As a result of this change, a lot of other functionality needed to be updated since it was the first time we use non-tensors in a lot of places in the code base.\n\nNotes:\n* Fixes code_template.py so that multi-line strings are indented correctly when used on a standalone line\n* Cast operators (`int(x)`) now are functional. Some tests have addition conversions to integers because\nwe no longer allow implicit tensor -> integer conversions following the same convention as in python\n* prim::ListConstruct/createList has been added to the interpreter for creating lists and this has\nreplaced aten::stack for integers lists\n* gen_jit_dispatch.py has been refactored so that non-tensor types use operators on IValues to extract\nthe primitives\n* IValue gains a .to<T> method that is the equivalent of tensor_as but for IValue instead of at::Tensor\n* `constant_as<T>` is switched over to using IValues's `.to<T>` method, to make conversion from constant->IValue->C++ type\nmore consistent. This functionality combined with `toIValue(Value*)` replaces the `tensor_as` and `as_tensor` family of functions.\n* conditional expressions (if, loop) and operators related to them are now computed on integers rather than tensors\n* IValue gains constructors for constructing from at::Scalar and converting to it. However, IValue itself will always store\nthe scalars as a double or int64.\n* To align with python 3 syntax, TK_INT, TK_FLOAT, and TK_BOOL have been removed from the parser, and int/float/bool are just treated as special identifiers in the compiler,\nalong with print. These are represented as special sugared values with a `call` method implemented. For int/float/bool this implements casting behavior.\n* Dropped shared_from_this from Type/Module. They were not needed and they making debugging harder because they internally throw/catch exceptions.\n* Shape propagation has been updated to support running nodes that include floating point primitive types, this required some refactoring of internal functions.\n* TensorToNum and NumToTensor have actual implementations as operators now\n* regster_prim_ops now contains implementations of math operators for float/int primitive types, and for mixed (prim <+> tensor) versions. This removes the need for special handling in compiler.cpp\n* Primitive math is now entirely handled by letting the compiler choose the right overloads. This removes tons of special casing in the compiler.\n* incorporates eellison's change to allow casting from return values. Due to the addition of primitive support, the code need slight modifications, so I just pre-merged it here.\n* stack.h gains generic vararg versions of push/pop that know how to convert to/from C++ types:\n\n```\nat::Tensor a;\nat::Scalar b;\npop(stack, a, b);\nat::Tensor c = a + b;\npush(stack, c);\n```\napaszke\nPull Request resolved: https://github.com/pytorch/pytorch/pull/9584\n\nDifferential Revision: D8910546\n", "created_at": "2018-07-23T17:54:19Z", "updated_at": "2018-07-23T21:08:59Z", "closed_at": "2018-07-23T21:08:59Z", "merged_at": null, "merge_commit_sha": "11950ae2707c53157aa30594f553023d0465dab1", "assignee": null, "assignees": [], "requested_reviewers": [{"login": "ezyang", "id": 13564, "node_id": "MDQ6VXNlcjEzNTY0", "avatar_url": "https://avatars0.githubusercontent.com/u/13564?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ezyang", "html_url": "https://github.com/ezyang", "followers_url": "https://api.github.com/users/ezyang/followers", "following_url": "https://api.github.com/users/ezyang/following{/other_user}", "gists_url": "https://api.github.com/users/ezyang/gists{/gist_id}", "starred_url": "https://api.github.com/users/ezyang/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ezyang/subscriptions", "organizations_url": "https://api.github.com/users/ezyang/orgs", "repos_url": "https://api.github.com/users/ezyang/repos", "events_url": "https://api.github.com/users/ezyang/events{/privacy}", "received_events_url": "https://api.github.com/users/ezyang/received_events", "type": "User", "site_admin": false}, {"login": "Yangqing", "id": 551151, "node_id": "MDQ6VXNlcjU1MTE1MQ==", "avatar_url": "https://avatars1.githubusercontent.com/u/551151?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Yangqing", "html_url": "https://github.com/Yangqing", "followers_url": "https://api.github.com/users/Yangqing/followers", "following_url": "https://api.github.com/users/Yangqing/following{/other_user}", "gists_url": "https://api.github.com/users/Yangqing/gists{/gist_id}", "starred_url": "https://api.github.com/users/Yangqing/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Yangqing/subscriptions", "organizations_url": "https://api.github.com/users/Yangqing/orgs", "repos_url": "https://api.github.com/users/Yangqing/repos", "events_url": "https://api.github.com/users/Yangqing/events{/privacy}", "received_events_url": "https://api.github.com/users/Yangqing/received_events", "type": "User", "site_admin": false}, {"login": "colesbury", "id": 655866, "node_id": "MDQ6VXNlcjY1NTg2Ng==", "avatar_url": "https://avatars1.githubusercontent.com/u/655866?v=4", "gravatar_id": "", "url": "https://api.github.com/users/colesbury", "html_url": "https://github.com/colesbury", "followers_url": "https://api.github.com/users/colesbury/followers", "following_url": "https://api.github.com/users/colesbury/following{/other_user}", "gists_url": "https://api.github.com/users/colesbury/gists{/gist_id}", "starred_url": "https://api.github.com/users/colesbury/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/colesbury/subscriptions", "organizations_url": "https://api.github.com/users/colesbury/orgs", "repos_url": "https://api.github.com/users/colesbury/repos", "events_url": "https://api.github.com/users/colesbury/events{/privacy}", "received_events_url": "https://api.github.com/users/colesbury/received_events", "type": "User", "site_admin": false}, {"login": "soumith", "id": 1310570, "node_id": "MDQ6VXNlcjEzMTA1NzA=", "avatar_url": "https://avatars0.githubusercontent.com/u/1310570?v=4", "gravatar_id": "", "url": "https://api.github.com/users/soumith", "html_url": "https://github.com/soumith", "followers_url": "https://api.github.com/users/soumith/followers", "following_url": "https://api.github.com/users/soumith/following{/other_user}", "gists_url": "https://api.github.com/users/soumith/gists{/gist_id}", "starred_url": "https://api.github.com/users/soumith/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/soumith/subscriptions", "organizations_url": "https://api.github.com/users/soumith/orgs", "repos_url": "https://api.github.com/users/soumith/repos", "events_url": "https://api.github.com/users/soumith/events{/privacy}", "received_events_url": "https://api.github.com/users/soumith/received_events", "type": "User", "site_admin": false}, {"login": "anderspapitto", "id": 1388690, "node_id": "MDQ6VXNlcjEzODg2OTA=", "avatar_url": "https://avatars3.githubusercontent.com/u/1388690?v=4", "gravatar_id": "", "url": "https://api.github.com/users/anderspapitto", "html_url": "https://github.com/anderspapitto", "followers_url": "https://api.github.com/users/anderspapitto/followers", "following_url": "https://api.github.com/users/anderspapitto/following{/other_user}", "gists_url": "https://api.github.com/users/anderspapitto/gists{/gist_id}", "starred_url": "https://api.github.com/users/anderspapitto/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/anderspapitto/subscriptions", "organizations_url": "https://api.github.com/users/anderspapitto/orgs", "repos_url": "https://api.github.com/users/anderspapitto/repos", "events_url": "https://api.github.com/users/anderspapitto/events{/privacy}", "received_events_url": "https://api.github.com/users/anderspapitto/received_events", "type": "User", "site_admin": false}, {"login": "smessmer", "id": 2373925, "node_id": "MDQ6VXNlcjIzNzM5MjU=", "avatar_url": "https://avatars3.githubusercontent.com/u/2373925?v=4", "gravatar_id": "", "url": "https://api.github.com/users/smessmer", "html_url": "https://github.com/smessmer", "followers_url": "https://api.github.com/users/smessmer/followers", "following_url": "https://api.github.com/users/smessmer/following{/other_user}", "gists_url": "https://api.github.com/users/smessmer/gists{/gist_id}", "starred_url": "https://api.github.com/users/smessmer/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/smessmer/subscriptions", "organizations_url": "https://api.github.com/users/smessmer/orgs", "repos_url": "https://api.github.com/users/smessmer/repos", "events_url": "https://api.github.com/users/smessmer/events{/privacy}", "received_events_url": "https://api.github.com/users/smessmer/received_events", "type": "User", "site_admin": false}, {"login": "gchanan", "id": 3768583, "node_id": "MDQ6VXNlcjM3Njg1ODM=", "avatar_url": "https://avatars2.githubusercontent.com/u/3768583?v=4", "gravatar_id": "", "url": "https://api.github.com/users/gchanan", "html_url": "https://github.com/gchanan", "followers_url": "https://api.github.com/users/gchanan/followers", "following_url": "https://api.github.com/users/gchanan/following{/other_user}", "gists_url": "https://api.github.com/users/gchanan/gists{/gist_id}", "starred_url": "https://api.github.com/users/gchanan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/gchanan/subscriptions", "organizations_url": "https://api.github.com/users/gchanan/orgs", "repos_url": "https://api.github.com/users/gchanan/repos", "events_url": "https://api.github.com/users/gchanan/events{/privacy}", "received_events_url": "https://api.github.com/users/gchanan/received_events", "type": "User", "site_admin": false}, {"login": "bddppq", "id": 9300575, "node_id": "MDQ6VXNlcjkzMDA1NzU=", "avatar_url": "https://avatars2.githubusercontent.com/u/9300575?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bddppq", "html_url": "https://github.com/bddppq", "followers_url": "https://api.github.com/users/bddppq/followers", "following_url": "https://api.github.com/users/bddppq/following{/other_user}", "gists_url": "https://api.github.com/users/bddppq/gists{/gist_id}", "starred_url": "https://api.github.com/users/bddppq/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bddppq/subscriptions", "organizations_url": "https://api.github.com/users/bddppq/orgs", "repos_url": "https://api.github.com/users/bddppq/repos", "events_url": "https://api.github.com/users/bddppq/events{/privacy}", "received_events_url": "https://api.github.com/users/bddppq/received_events", "type": "User", "site_admin": false}, {"login": "dzhulgakov", "id": 17890620, "node_id": "MDQ6VXNlcjE3ODkwNjIw", "avatar_url": "https://avatars2.githubusercontent.com/u/17890620?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dzhulgakov", "html_url": "https://github.com/dzhulgakov", "followers_url": "https://api.github.com/users/dzhulgakov/followers", "following_url": "https://api.github.com/users/dzhulgakov/following{/other_user}", "gists_url": "https://api.github.com/users/dzhulgakov/gists{/gist_id}", "starred_url": "https://api.github.com/users/dzhulgakov/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dzhulgakov/subscriptions", "organizations_url": "https://api.github.com/users/dzhulgakov/orgs", "repos_url": "https://api.github.com/users/dzhulgakov/repos", "events_url": "https://api.github.com/users/dzhulgakov/events{/privacy}", "received_events_url": "https://api.github.com/users/dzhulgakov/received_events", "type": "User", "site_admin": false}, {"login": "houseroad", "id": 30275821, "node_id": "MDQ6VXNlcjMwMjc1ODIx", "avatar_url": "https://avatars0.githubusercontent.com/u/30275821?v=4", "gravatar_id": "", "url": "https://api.github.com/users/houseroad", "html_url": "https://github.com/houseroad", "followers_url": "https://api.github.com/users/houseroad/followers", "following_url": "https://api.github.com/users/houseroad/following{/other_user}", "gists_url": "https://api.github.com/users/houseroad/gists{/gist_id}", "starred_url": "https://api.github.com/users/houseroad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/houseroad/subscriptions", "organizations_url": "https://api.github.com/users/houseroad/orgs", "repos_url": "https://api.github.com/users/houseroad/repos", "events_url": "https://api.github.com/users/houseroad/events{/privacy}", "received_events_url": "https://api.github.com/users/houseroad/received_events", "type": "User", "site_admin": false}], "requested_teams": [], "labels": [{"id": 679953983, "node_id": "MDU6TGFiZWw2Nzk5NTM5ODM=", "url": "https://api.github.com/repos/pytorch/pytorch/labels/jit", "name": "jit", "color": "c5def5", "default": false}], "milestone": null, "commits_url": "https://api.github.com/repos/pytorch/pytorch/pulls/9718/commits", "review_comments_url": "https://api.github.com/repos/pytorch/pytorch/pulls/9718/comments", "review_comment_url": "https://api.github.com/repos/pytorch/pytorch/pulls/comments{/number}", "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/9718/comments", "statuses_url": "https://api.github.com/repos/pytorch/pytorch/statuses/24954831fbf893b640fbc5a43ec15c6b74888489", "head": {"label": "zdevito:export-D8910546", "ref": "export-D8910546", "sha": "24954831fbf893b640fbc5a43ec15c6b74888489", "user": {"login": "zdevito", "id": 370202, "node_id": "MDQ6VXNlcjM3MDIwMg==", "avatar_url": "https://avatars0.githubusercontent.com/u/370202?v=4", "gravatar_id": "", "url": "https://api.github.com/users/zdevito", "html_url": "https://github.com/zdevito", "followers_url": "https://api.github.com/users/zdevito/followers", "following_url": "https://api.github.com/users/zdevito/following{/other_user}", "gists_url": "https://api.github.com/users/zdevito/gists{/gist_id}", "starred_url": "https://api.github.com/users/zdevito/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/zdevito/subscriptions", "organizations_url": "https://api.github.com/users/zdevito/orgs", "repos_url": "https://api.github.com/users/zdevito/repos", "events_url": "https://api.github.com/users/zdevito/events{/privacy}", "received_events_url": "https://api.github.com/users/zdevito/received_events", "type": "User", "site_admin": false}, "repo": {"id": 93195556, "node_id": "MDEwOlJlcG9zaXRvcnk5MzE5NTU1Ng==", "name": "pytorch", "full_name": "zdevito/pytorch", "private": false, "owner": {"login": "zdevito", "id": 370202, "node_id": "MDQ6VXNlcjM3MDIwMg==", "avatar_url": "https://avatars0.githubusercontent.com/u/370202?v=4", "gravatar_id": "", "url": "https://api.github.com/users/zdevito", "html_url": "https://github.com/zdevito", "followers_url": "https://api.github.com/users/zdevito/followers", "following_url": "https://api.github.com/users/zdevito/following{/other_user}", "gists_url": "https://api.github.com/users/zdevito/gists{/gist_id}", "starred_url": "https://api.github.com/users/zdevito/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/zdevito/subscriptions", "organizations_url": "https://api.github.com/users/zdevito/orgs", "repos_url": "https://api.github.com/users/zdevito/repos", "events_url": "https://api.github.com/users/zdevito/events{/privacy}", "received_events_url": "https://api.github.com/users/zdevito/received_events", "type": "User", "site_admin": false}, "html_url": "https://github.com/zdevito/pytorch", "description": "Tensors and Dynamic neural networks in Python  with strong GPU acceleration", "fork": true, "url": "https://api.github.com/repos/zdevito/pytorch", "forks_url": "https://api.github.com/repos/zdevito/pytorch/forks", "keys_url": "https://api.github.com/repos/zdevito/pytorch/keys{/key_id}", "collaborators_url": "https://api.github.com/repos/zdevito/pytorch/collaborators{/collaborator}", "teams_url": "https://api.github.com/repos/zdevito/pytorch/teams", "hooks_url": "https://api.github.com/repos/zdevito/pytorch/hooks", "issue_events_url": "https://api.github.com/repos/zdevito/pytorch/issues/events{/number}", "events_url": "https://api.github.com/repos/zdevito/pytorch/events", "assignees_url": "https://api.github.com/repos/zdevito/pytorch/assignees{/user}", "branches_url": "https://api.github.com/repos/zdevito/pytorch/branches{/branch}", "tags_url": "https://api.github.com/repos/zdevito/pytorch/tags", "blobs_url": "https://api.github.com/repos/zdevito/pytorch/git/blobs{/sha}", "git_tags_url": "https://api.github.com/repos/zdevito/pytorch/git/tags{/sha}", "git_refs_url": "https://api.github.com/repos/zdevito/pytorch/git/refs{/sha}", "trees_url": "https://api.github.com/repos/zdevito/pytorch/git/trees{/sha}", "statuses_url": "https://api.github.com/repos/zdevito/pytorch/statuses/{sha}", "languages_url": "https://api.github.com/repos/zdevito/pytorch/languages", "stargazers_url": "https://api.github.com/repos/zdevito/pytorch/stargazers", "contributors_url": "https://api.github.com/repos/zdevito/pytorch/contributors", "subscribers_url": "https://api.github.com/repos/zdevito/pytorch/subscribers", "subscription_url": "https://api.github.com/repos/zdevito/pytorch/subscription", "commits_url": "https://api.github.com/repos/zdevito/pytorch/commits{/sha}", "git_commits_url": "https://api.github.com/repos/zdevito/pytorch/git/commits{/sha}", "comments_url": "https://api.github.com/repos/zdevito/pytorch/comments{/number}", "issue_comment_url": "https://api.github.com/repos/zdevito/pytorch/issues/comments{/number}", "contents_url": "https://api.github.com/repos/zdevito/pytorch/contents/{+path}", "compare_url": "https://api.github.com/repos/zdevito/pytorch/compare/{base}...{head}", "merges_url": "https://api.github.com/repos/zdevito/pytorch/merges", "archive_url": "https://api.github.com/repos/zdevito/pytorch/{archive_format}{/ref}", "downloads_url": "https://api.github.com/repos/zdevito/pytorch/downloads", "issues_url": "https://api.github.com/repos/zdevito/pytorch/issues{/number}", "pulls_url": "https://api.github.com/repos/zdevito/pytorch/pulls{/number}", "milestones_url": "https://api.github.com/repos/zdevito/pytorch/milestones{/number}", "notifications_url": "https://api.github.com/repos/zdevito/pytorch/notifications{?since,all,participating}", "labels_url": "https://api.github.com/repos/zdevito/pytorch/labels{/name}", "releases_url": "https://api.github.com/repos/zdevito/pytorch/releases{/id}", "deployments_url": "https://api.github.com/repos/zdevito/pytorch/deployments", "created_at": "2017-06-02T19:00:07Z", "updated_at": "2018-11-13T19:07:38Z", "pushed_at": "2018-11-20T02:26:06Z", "git_url": "git://github.com/zdevito/pytorch.git", "ssh_url": "git@github.com:zdevito/pytorch.git", "clone_url": "https://github.com/zdevito/pytorch.git", "svn_url": "https://github.com/zdevito/pytorch", "homepage": "http://pytorch.org", "size": 87173, "stargazers_count": 0, "watchers_count": 0, "language": "C++", "has_issues": true, "has_projects": true, "has_downloads": true, "has_wiki": true, "has_pages": false, "forks_count": 0, "mirror_url": null, "archived": false, "open_issues_count": 7, "license": {"key": "other", "name": "Other", "spdx_id": "NOASSERTION", "url": null, "node_id": "MDc6TGljZW5zZTA="}, "forks": 0, "open_issues": 7, "watchers": 0, "default_branch": "master"}}, "base": {"label": "pytorch:master", "ref": "master", "sha": "029cf1d78a1f95a3ef4998c82b1e338b79ee0ac9", "user": {"login": "pytorch", "id": 21003710, "node_id": "MDEyOk9yZ2FuaXphdGlvbjIxMDAzNzEw", "avatar_url": "https://avatars3.githubusercontent.com/u/21003710?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pytorch", "html_url": "https://github.com/pytorch", "followers_url": "https://api.github.com/users/pytorch/followers", "following_url": "https://api.github.com/users/pytorch/following{/other_user}", "gists_url": "https://api.github.com/users/pytorch/gists{/gist_id}", "starred_url": "https://api.github.com/users/pytorch/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pytorch/subscriptions", "organizations_url": "https://api.github.com/users/pytorch/orgs", "repos_url": "https://api.github.com/users/pytorch/repos", "events_url": "https://api.github.com/users/pytorch/events{/privacy}", "received_events_url": "https://api.github.com/users/pytorch/received_events", "type": "Organization", "site_admin": false}, "repo": {"id": 65600975, "node_id": "MDEwOlJlcG9zaXRvcnk2NTYwMDk3NQ==", "name": "pytorch", "full_name": "pytorch/pytorch", "private": false, "owner": {"login": "pytorch", "id": 21003710, "node_id": "MDEyOk9yZ2FuaXphdGlvbjIxMDAzNzEw", "avatar_url": "https://avatars3.githubusercontent.com/u/21003710?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pytorch", "html_url": "https://github.com/pytorch", "followers_url": "https://api.github.com/users/pytorch/followers", "following_url": "https://api.github.com/users/pytorch/following{/other_user}", "gists_url": "https://api.github.com/users/pytorch/gists{/gist_id}", "starred_url": "https://api.github.com/users/pytorch/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pytorch/subscriptions", "organizations_url": "https://api.github.com/users/pytorch/orgs", "repos_url": "https://api.github.com/users/pytorch/repos", "events_url": "https://api.github.com/users/pytorch/events{/privacy}", "received_events_url": "https://api.github.com/users/pytorch/received_events", "type": "Organization", "site_admin": false}, "html_url": "https://github.com/pytorch/pytorch", "description": "Tensors and Dynamic neural networks in Python  with strong GPU acceleration", "fork": false, "url": "https://api.github.com/repos/pytorch/pytorch", "forks_url": "https://api.github.com/repos/pytorch/pytorch/forks", "keys_url": "https://api.github.com/repos/pytorch/pytorch/keys{/key_id}", "collaborators_url": "https://api.github.com/repos/pytorch/pytorch/collaborators{/collaborator}", "teams_url": "https://api.github.com/repos/pytorch/pytorch/teams", "hooks_url": "https://api.github.com/repos/pytorch/pytorch/hooks", "issue_events_url": "https://api.github.com/repos/pytorch/pytorch/issues/events{/number}", "events_url": "https://api.github.com/repos/pytorch/pytorch/events", "assignees_url": "https://api.github.com/repos/pytorch/pytorch/assignees{/user}", "branches_url": "https://api.github.com/repos/pytorch/pytorch/branches{/branch}", "tags_url": "https://api.github.com/repos/pytorch/pytorch/tags", "blobs_url": "https://api.github.com/repos/pytorch/pytorch/git/blobs{/sha}", "git_tags_url": "https://api.github.com/repos/pytorch/pytorch/git/tags{/sha}", "git_refs_url": "https://api.github.com/repos/pytorch/pytorch/git/refs{/sha}", "trees_url": "https://api.github.com/repos/pytorch/pytorch/git/trees{/sha}", "statuses_url": "https://api.github.com/repos/pytorch/pytorch/statuses/{sha}", "languages_url": "https://api.github.com/repos/pytorch/pytorch/languages", "stargazers_url": "https://api.github.com/repos/pytorch/pytorch/stargazers", "contributors_url": "https://api.github.com/repos/pytorch/pytorch/contributors", "subscribers_url": "https://api.github.com/repos/pytorch/pytorch/subscribers", "subscription_url": "https://api.github.com/repos/pytorch/pytorch/subscription", "commits_url": "https://api.github.com/repos/pytorch/pytorch/commits{/sha}", "git_commits_url": "https://api.github.com/repos/pytorch/pytorch/git/commits{/sha}", "comments_url": "https://api.github.com/repos/pytorch/pytorch/comments{/number}", "issue_comment_url": "https://api.github.com/repos/pytorch/pytorch/issues/comments{/number}", "contents_url": "https://api.github.com/repos/pytorch/pytorch/contents/{+path}", "compare_url": "https://api.github.com/repos/pytorch/pytorch/compare/{base}...{head}", "merges_url": "https://api.github.com/repos/pytorch/pytorch/merges", "archive_url": "https://api.github.com/repos/pytorch/pytorch/{archive_format}{/ref}", "downloads_url": "https://api.github.com/repos/pytorch/pytorch/downloads", "issues_url": "https://api.github.com/repos/pytorch/pytorch/issues{/number}", "pulls_url": "https://api.github.com/repos/pytorch/pytorch/pulls{/number}", "milestones_url": "https://api.github.com/repos/pytorch/pytorch/milestones{/number}", "notifications_url": "https://api.github.com/repos/pytorch/pytorch/notifications{?since,all,participating}", "labels_url": "https://api.github.com/repos/pytorch/pytorch/labels{/name}", "releases_url": "https://api.github.com/repos/pytorch/pytorch/releases{/id}", "deployments_url": "https://api.github.com/repos/pytorch/pytorch/deployments", "created_at": "2016-08-13T05:26:41Z", "updated_at": "2018-11-24T12:35:43Z", "pushed_at": "2018-11-24T12:42:01Z", "git_url": "git://github.com/pytorch/pytorch.git", "ssh_url": "git@github.com:pytorch/pytorch.git", "clone_url": "https://github.com/pytorch/pytorch.git", "svn_url": "https://github.com/pytorch/pytorch", "homepage": "http://pytorch.org", "size": 89656, "stargazers_count": 21589, "watchers_count": 21589, "language": "C++", "has_issues": true, "has_projects": true, "has_downloads": true, "has_wiki": true, "has_pages": false, "forks_count": 5153, "mirror_url": null, "archived": false, "open_issues_count": 2196, "license": {"key": "other", "name": "Other", "spdx_id": "NOASSERTION", "url": null, "node_id": "MDc6TGljZW5zZTA="}, "forks": 5153, "open_issues": 2196, "watchers": 21589, "default_branch": "master"}}, "_links": {"self": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/9718"}, "html": {"href": "https://github.com/pytorch/pytorch/pull/9718"}, "issue": {"href": "https://api.github.com/repos/pytorch/pytorch/issues/9718"}, "comments": {"href": "https://api.github.com/repos/pytorch/pytorch/issues/9718/comments"}, "review_comments": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/9718/comments"}, "review_comment": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/comments{/number}"}, "commits": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/9718/commits"}, "statuses": {"href": "https://api.github.com/repos/pytorch/pytorch/statuses/24954831fbf893b640fbc5a43ec15c6b74888489"}}, "author_association": "CONTRIBUTOR", "body_html": "<p>Summary:<br>\nThis patch switches the interpreter to use IValue's primitive numbers rather than tensors for computing on integers and floats. In addition to preparing the interpreter for first-class support of other types, this cleans up the handling of primitive numbers, making it possible to just use the normal operator overloading dispatch to find the right implementation for numbers. As a result of this change, a lot of other functionality needed to be updated since it was the first time we use non-tensors in a lot of places in the code base.</p>\n<p>Notes:</p>\n<ul>\n<li>Fixes code_template.py so that multi-line strings are indented correctly when used on a standalone line</li>\n<li>Cast operators (<code>int(x)</code>) now are functional. Some tests have addition conversions to integers because<br>\nwe no longer allow implicit tensor -&gt; integer conversions following the same convention as in python</li>\n<li>prim::ListConstruct/createList has been added to the interpreter for creating lists and this has<br>\nreplaced aten::stack for integers lists</li>\n<li>gen_jit_dispatch.py has been refactored so that non-tensor types use operators on IValues to extract<br>\nthe primitives</li>\n<li>IValue gains a .to method that is the equivalent of tensor_as but for IValue instead of at::Tensor</li>\n<li><code>constant_as&lt;T&gt;</code> is switched over to using IValues's <code>.to&lt;T&gt;</code> method, to make conversion from constant-&gt;IValue-&gt;C++ type<br>\nmore consistent. This functionality combined with <code>toIValue(Value*)</code> replaces the <code>tensor_as</code> and <code>as_tensor</code> family of functions.</li>\n<li>conditional expressions (if, loop) and operators related to them are now computed on integers rather than tensors</li>\n<li>IValue gains constructors for constructing from at::Scalar and converting to it. However, IValue itself will always store<br>\nthe scalars as a double or int64.</li>\n<li>To align with python 3 syntax, TK_INT, TK_FLOAT, and TK_BOOL have been removed from the parser, and int/float/bool are just treated as special identifiers in the compiler,<br>\nalong with print. These are represented as special sugared values with a <code>call</code> method implemented. For int/float/bool this implements casting behavior.</li>\n<li>Dropped shared_from_this from Type/Module. They were not needed and they making debugging harder because they internally throw/catch exceptions.</li>\n<li>Shape propagation has been updated to support running nodes that include floating point primitive types, this required some refactoring of internal functions.</li>\n<li>TensorToNum and NumToTensor have actual implementations as operators now</li>\n<li>regster_prim_ops now contains implementations of math operators for float/int primitive types, and for mixed (prim &lt;+&gt; tensor) versions. This removes the need for special handling in compiler.cpp</li>\n<li>Primitive math is now entirely handled by letting the compiler choose the right overloads. This removes tons of special casing in the compiler.</li>\n<li>incorporates eellison's change to allow casting from return values. Due to the addition of primitive support, the code need slight modifications, so I just pre-merged it here.</li>\n<li>stack.h gains generic vararg versions of push/pop that know how to convert to/from C++ types:</li>\n</ul>\n<pre><code>at::Tensor a;\nat::Scalar b;\npop(stack, a, b);\nat::Tensor c = a + b;\npush(stack, c);\n</code></pre>\n<p>apaszke<br>\nPull Request <span class=\"issue-keyword tooltipped tooltipped-se\" aria-label=\"This pull request closes pull request #9584.\">resolved</span>: <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load issue title\" data-id=\"342591504\" data-permission-text=\"Issue title is private\" data-url=\"https://github.com/pytorch/pytorch/issues/9584\" data-hovercard-type=\"pull_request\" data-hovercard-url=\"/pytorch/pytorch/pull/9584/hovercard\" href=\"https://github.com/pytorch/pytorch/pull/9584\">#9584</a></p>\n<p>Differential Revision: D8910546</p>", "body_text": "Summary:\nThis patch switches the interpreter to use IValue's primitive numbers rather than tensors for computing on integers and floats. In addition to preparing the interpreter for first-class support of other types, this cleans up the handling of primitive numbers, making it possible to just use the normal operator overloading dispatch to find the right implementation for numbers. As a result of this change, a lot of other functionality needed to be updated since it was the first time we use non-tensors in a lot of places in the code base.\nNotes:\n\nFixes code_template.py so that multi-line strings are indented correctly when used on a standalone line\nCast operators (int(x)) now are functional. Some tests have addition conversions to integers because\nwe no longer allow implicit tensor -> integer conversions following the same convention as in python\nprim::ListConstruct/createList has been added to the interpreter for creating lists and this has\nreplaced aten::stack for integers lists\ngen_jit_dispatch.py has been refactored so that non-tensor types use operators on IValues to extract\nthe primitives\nIValue gains a .to method that is the equivalent of tensor_as but for IValue instead of at::Tensor\nconstant_as<T> is switched over to using IValues's .to<T> method, to make conversion from constant->IValue->C++ type\nmore consistent. This functionality combined with toIValue(Value*) replaces the tensor_as and as_tensor family of functions.\nconditional expressions (if, loop) and operators related to them are now computed on integers rather than tensors\nIValue gains constructors for constructing from at::Scalar and converting to it. However, IValue itself will always store\nthe scalars as a double or int64.\nTo align with python 3 syntax, TK_INT, TK_FLOAT, and TK_BOOL have been removed from the parser, and int/float/bool are just treated as special identifiers in the compiler,\nalong with print. These are represented as special sugared values with a call method implemented. For int/float/bool this implements casting behavior.\nDropped shared_from_this from Type/Module. They were not needed and they making debugging harder because they internally throw/catch exceptions.\nShape propagation has been updated to support running nodes that include floating point primitive types, this required some refactoring of internal functions.\nTensorToNum and NumToTensor have actual implementations as operators now\nregster_prim_ops now contains implementations of math operators for float/int primitive types, and for mixed (prim <+> tensor) versions. This removes the need for special handling in compiler.cpp\nPrimitive math is now entirely handled by letting the compiler choose the right overloads. This removes tons of special casing in the compiler.\nincorporates eellison's change to allow casting from return values. Due to the addition of primitive support, the code need slight modifications, so I just pre-merged it here.\nstack.h gains generic vararg versions of push/pop that know how to convert to/from C++ types:\n\nat::Tensor a;\nat::Scalar b;\npop(stack, a, b);\nat::Tensor c = a + b;\npush(stack, c);\n\napaszke\nPull Request resolved: #9584\nDifferential Revision: D8910546", "merged": false, "mergeable": null, "rebaseable": null, "mergeable_state": "unknown", "merged_by": null, "comments": 0, "review_comments": 0, "maintainer_can_modify": false, "commits": 1, "additions": 1429, "deletions": 1437, "changed_files": 67}