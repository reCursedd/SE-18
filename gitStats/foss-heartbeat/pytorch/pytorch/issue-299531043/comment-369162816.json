{"url": "https://api.github.com/repos/pytorch/pytorch/issues/comments/369162816", "html_url": "https://github.com/pytorch/pytorch/pull/5356#issuecomment-369162816", "issue_url": "https://api.github.com/repos/pytorch/pytorch/issues/5356", "id": 369162816, "node_id": "MDEyOklzc3VlQ29tbWVudDM2OTE2MjgxNg==", "user": {"login": "lantiga", "id": 191033, "node_id": "MDQ6VXNlcjE5MTAzMw==", "avatar_url": "https://avatars2.githubusercontent.com/u/191033?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lantiga", "html_url": "https://github.com/lantiga", "followers_url": "https://api.github.com/users/lantiga/followers", "following_url": "https://api.github.com/users/lantiga/following{/other_user}", "gists_url": "https://api.github.com/users/lantiga/gists{/gist_id}", "starred_url": "https://api.github.com/users/lantiga/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lantiga/subscriptions", "organizations_url": "https://api.github.com/users/lantiga/orgs", "repos_url": "https://api.github.com/users/lantiga/repos", "events_url": "https://api.github.com/users/lantiga/events{/privacy}", "received_events_url": "https://api.github.com/users/lantiga/received_events", "type": "User", "site_admin": false}, "created_at": "2018-02-28T08:46:03Z", "updated_at": "2018-02-28T08:46:03Z", "author_association": "COLLABORATOR", "body_html": "<p><a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=13564\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/ezyang\">@ezyang</a> (and all) what do you think the best layout for building/testing could be?</p>\n<p>Right now I moved <code>test_jit.cpp</code> (which now uses Catch2) under <code>test/jit_cpp</code>, and have the <code>CMakeLists.txt</code> for the Python-free build under <code>tools/cpp_build</code>.<br>\nAt the moment I have a <code>build_all.sh</code> that will create a <code>build</code> directory under <code>tools/cpp_build</code>, which means that the <code>test_jit</code> executable will be created under <code>toos/cpp_build/build/torchjit_build</code>.</p>\n<p>I see a couple of options:</p>\n<ul>\n<li>keep everything there and just have a <code>make install</code> step that moves executable and libraries in a proper place for running the test</li>\n<li>create the build directory outside of <code>tools/cpp_build</code></li>\n</ul>\n<p>Any suggestion would be great. Thanks!</p>", "body_text": "@ezyang (and all) what do you think the best layout for building/testing could be?\nRight now I moved test_jit.cpp (which now uses Catch2) under test/jit_cpp, and have the CMakeLists.txt for the Python-free build under tools/cpp_build.\nAt the moment I have a build_all.sh that will create a build directory under tools/cpp_build, which means that the test_jit executable will be created under toos/cpp_build/build/torchjit_build.\nI see a couple of options:\n\nkeep everything there and just have a make install step that moves executable and libraries in a proper place for running the test\ncreate the build directory outside of tools/cpp_build\n\nAny suggestion would be great. Thanks!", "body": "@ezyang (and all) what do you think the best layout for building/testing could be?\r\n\r\nRight now I moved `test_jit.cpp` (which now uses Catch2) under `test/jit_cpp`, and have the `CMakeLists.txt` for the Python-free build under `tools/cpp_build`.\r\nAt the moment I have a `build_all.sh` that will create a `build` directory under `tools/cpp_build`, which means that the `test_jit` executable will be created under `toos/cpp_build/build/torchjit_build`.\r\n\r\nI see a couple of options:\r\n- keep everything there and just have a `make install` step that moves executable and libraries in a proper place for running the test\r\n- create the build directory outside of `tools/cpp_build`\r\n\r\nAny suggestion would be great. Thanks!"}