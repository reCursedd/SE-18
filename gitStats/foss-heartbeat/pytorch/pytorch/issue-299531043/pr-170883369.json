{"url": "https://api.github.com/repos/pytorch/pytorch/pulls/5356", "id": 170883369, "node_id": "MDExOlB1bGxSZXF1ZXN0MTcwODgzMzY5", "html_url": "https://github.com/pytorch/pytorch/pull/5356", "diff_url": "https://github.com/pytorch/pytorch/pull/5356.diff", "patch_url": "https://github.com/pytorch/pytorch/pull/5356.patch", "issue_url": "https://api.github.com/repos/pytorch/pytorch/issues/5356", "number": 5356, "state": "closed", "locked": false, "title": "Python-free build of autograd + jit", "user": {"login": "lantiga", "id": 191033, "node_id": "MDQ6VXNlcjE5MTAzMw==", "avatar_url": "https://avatars2.githubusercontent.com/u/191033?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lantiga", "html_url": "https://github.com/lantiga", "followers_url": "https://api.github.com/users/lantiga/followers", "following_url": "https://api.github.com/users/lantiga/following{/other_user}", "gists_url": "https://api.github.com/users/lantiga/gists{/gist_id}", "starred_url": "https://api.github.com/users/lantiga/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lantiga/subscriptions", "organizations_url": "https://api.github.com/users/lantiga/orgs", "repos_url": "https://api.github.com/users/lantiga/repos", "events_url": "https://api.github.com/users/lantiga/events{/privacy}", "received_events_url": "https://api.github.com/users/lantiga/received_events", "type": "User", "site_admin": false}, "body": "This PR adds the possibility to build the C++ parts of autograd and jit, with no dependency on Python.\r\nThe goal is to allow taking a PyTorch IR representation (a tree s-expr) and running it with provided inputs.\r\n\r\nPrerequisite: build PyTorch so that codegen runs once.\r\nInstructions:\r\n```\r\ncd tools/cpp_build\r\nbash build_all.sh\r\n```\r\nThis will build `libtorchjit` and `torchjit_test` in `tools/cpp_build/build/torchjit-build`. The latter basically runs the code in `test_jit.cpp` for now.\r\n\r\nWhile writing the PR, it turned out that a few of `Python.h` includes were redundant. They were removed here (PyTorch tests still pass on my machine, we'll see CI).\r\n\r\nTODOs:\r\n- [x] test with CUDA, Linux, Windows - only tested on a CPU build on macOS ~~(note: I have a CPU version of `text_jit.cpp` that I didn't include to check if tests pass - they do except fuser which requires CUDA)~~\r\n- [x] add proper C++ testing infrastructure\r\n- ~~add example that takes the PyTorch IR S-expr as a string and runs it with provided tensor inputs~~ In the interest of getting the PR sooner than later, this will be added in a subsequent PR\r\n- [x] Updated: reduce ifdefs and split off code depending on python in separate files that can be included conditionally\r\n- ~~add codegen step to build~~ Separate PR\r\n- ~~add tests to Jenkins~~ Separate PR\r\n- [x] get rid of warnings related to XOPEN_SOURCE, etc (see comment in https://github.com/pytorch/pytorch/pull/5391)\r\n\r\nI'm volunteering for making sure cpp builds work as new PRs are merged.\r\n\r\n/cc @apaszke ", "created_at": "2018-02-22T22:25:18Z", "updated_at": "2018-11-23T15:40:24Z", "closed_at": "2018-03-08T20:13:11Z", "merged_at": "2018-03-08T20:13:10Z", "merge_commit_sha": "396637cdd6691559334465f884c1e67e1ad961db", "assignee": null, "assignees": [], "requested_reviewers": [], "requested_teams": [], "labels": [], "milestone": null, "commits_url": "https://api.github.com/repos/pytorch/pytorch/pulls/5356/commits", "review_comments_url": "https://api.github.com/repos/pytorch/pytorch/pulls/5356/comments", "review_comment_url": "https://api.github.com/repos/pytorch/pytorch/pulls/comments{/number}", "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/5356/comments", "statuses_url": "https://api.github.com/repos/pytorch/pytorch/statuses/a0eb1cd51127dcfc01172a01a5add6687d64291b", "head": {"label": "lantiga:cpp_build", "ref": "cpp_build", "sha": "a0eb1cd51127dcfc01172a01a5add6687d64291b", "user": {"login": "lantiga", "id": 191033, "node_id": "MDQ6VXNlcjE5MTAzMw==", "avatar_url": "https://avatars2.githubusercontent.com/u/191033?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lantiga", "html_url": "https://github.com/lantiga", "followers_url": "https://api.github.com/users/lantiga/followers", "following_url": "https://api.github.com/users/lantiga/following{/other_user}", "gists_url": "https://api.github.com/users/lantiga/gists{/gist_id}", "starred_url": "https://api.github.com/users/lantiga/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lantiga/subscriptions", "organizations_url": "https://api.github.com/users/lantiga/orgs", "repos_url": "https://api.github.com/users/lantiga/repos", "events_url": "https://api.github.com/users/lantiga/events{/privacy}", "received_events_url": "https://api.github.com/users/lantiga/received_events", "type": "User", "site_admin": false}, "repo": {"id": 87643601, "node_id": "MDEwOlJlcG9zaXRvcnk4NzY0MzYwMQ==", "name": "pytorch", "full_name": "lantiga/pytorch", "private": false, "owner": {"login": "lantiga", "id": 191033, "node_id": "MDQ6VXNlcjE5MTAzMw==", "avatar_url": "https://avatars2.githubusercontent.com/u/191033?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lantiga", "html_url": "https://github.com/lantiga", "followers_url": "https://api.github.com/users/lantiga/followers", "following_url": "https://api.github.com/users/lantiga/following{/other_user}", "gists_url": "https://api.github.com/users/lantiga/gists{/gist_id}", "starred_url": "https://api.github.com/users/lantiga/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lantiga/subscriptions", "organizations_url": "https://api.github.com/users/lantiga/orgs", "repos_url": "https://api.github.com/users/lantiga/repos", "events_url": "https://api.github.com/users/lantiga/events{/privacy}", "received_events_url": "https://api.github.com/users/lantiga/received_events", "type": "User", "site_admin": false}, "html_url": "https://github.com/lantiga/pytorch", "description": "Tensors and Dynamic neural networks in Python  with strong GPU acceleration", "fork": true, "url": "https://api.github.com/repos/lantiga/pytorch", "forks_url": "https://api.github.com/repos/lantiga/pytorch/forks", "keys_url": "https://api.github.com/repos/lantiga/pytorch/keys{/key_id}", "collaborators_url": "https://api.github.com/repos/lantiga/pytorch/collaborators{/collaborator}", "teams_url": "https://api.github.com/repos/lantiga/pytorch/teams", "hooks_url": "https://api.github.com/repos/lantiga/pytorch/hooks", "issue_events_url": "https://api.github.com/repos/lantiga/pytorch/issues/events{/number}", "events_url": "https://api.github.com/repos/lantiga/pytorch/events", "assignees_url": "https://api.github.com/repos/lantiga/pytorch/assignees{/user}", "branches_url": "https://api.github.com/repos/lantiga/pytorch/branches{/branch}", "tags_url": "https://api.github.com/repos/lantiga/pytorch/tags", "blobs_url": "https://api.github.com/repos/lantiga/pytorch/git/blobs{/sha}", "git_tags_url": "https://api.github.com/repos/lantiga/pytorch/git/tags{/sha}", "git_refs_url": "https://api.github.com/repos/lantiga/pytorch/git/refs{/sha}", "trees_url": "https://api.github.com/repos/lantiga/pytorch/git/trees{/sha}", "statuses_url": "https://api.github.com/repos/lantiga/pytorch/statuses/{sha}", "languages_url": "https://api.github.com/repos/lantiga/pytorch/languages", "stargazers_url": "https://api.github.com/repos/lantiga/pytorch/stargazers", "contributors_url": "https://api.github.com/repos/lantiga/pytorch/contributors", "subscribers_url": "https://api.github.com/repos/lantiga/pytorch/subscribers", "subscription_url": "https://api.github.com/repos/lantiga/pytorch/subscription", "commits_url": "https://api.github.com/repos/lantiga/pytorch/commits{/sha}", "git_commits_url": "https://api.github.com/repos/lantiga/pytorch/git/commits{/sha}", "comments_url": "https://api.github.com/repos/lantiga/pytorch/comments{/number}", "issue_comment_url": "https://api.github.com/repos/lantiga/pytorch/issues/comments{/number}", "contents_url": "https://api.github.com/repos/lantiga/pytorch/contents/{+path}", "compare_url": "https://api.github.com/repos/lantiga/pytorch/compare/{base}...{head}", "merges_url": "https://api.github.com/repos/lantiga/pytorch/merges", "archive_url": "https://api.github.com/repos/lantiga/pytorch/{archive_format}{/ref}", "downloads_url": "https://api.github.com/repos/lantiga/pytorch/downloads", "issues_url": "https://api.github.com/repos/lantiga/pytorch/issues{/number}", "pulls_url": "https://api.github.com/repos/lantiga/pytorch/pulls{/number}", "milestones_url": "https://api.github.com/repos/lantiga/pytorch/milestones{/number}", "notifications_url": "https://api.github.com/repos/lantiga/pytorch/notifications{?since,all,participating}", "labels_url": "https://api.github.com/repos/lantiga/pytorch/labels{/name}", "releases_url": "https://api.github.com/repos/lantiga/pytorch/releases{/id}", "deployments_url": "https://api.github.com/repos/lantiga/pytorch/deployments", "created_at": "2017-04-08T15:26:35Z", "updated_at": "2017-04-08T15:26:40Z", "pushed_at": "2018-09-27T14:17:29Z", "git_url": "git://github.com/lantiga/pytorch.git", "ssh_url": "git@github.com:lantiga/pytorch.git", "clone_url": "https://github.com/lantiga/pytorch.git", "svn_url": "https://github.com/lantiga/pytorch", "homepage": "http://pytorch.org", "size": 75447, "stargazers_count": 0, "watchers_count": 0, "language": "Python", "has_issues": false, "has_projects": true, "has_downloads": true, "has_wiki": true, "has_pages": false, "forks_count": 0, "mirror_url": null, "archived": false, "open_issues_count": 0, "license": {"key": "other", "name": "Other", "spdx_id": "NOASSERTION", "url": null, "node_id": "MDc6TGljZW5zZTA="}, "forks": 0, "open_issues": 0, "watchers": 0, "default_branch": "master"}}, "base": {"label": "pytorch:master", "ref": "master", "sha": "976aaa55aac5ef4a120e26a97d544b7582a7a94e", "user": {"login": "pytorch", "id": 21003710, "node_id": "MDEyOk9yZ2FuaXphdGlvbjIxMDAzNzEw", "avatar_url": "https://avatars3.githubusercontent.com/u/21003710?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pytorch", "html_url": "https://github.com/pytorch", "followers_url": "https://api.github.com/users/pytorch/followers", "following_url": "https://api.github.com/users/pytorch/following{/other_user}", "gists_url": "https://api.github.com/users/pytorch/gists{/gist_id}", "starred_url": "https://api.github.com/users/pytorch/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pytorch/subscriptions", "organizations_url": "https://api.github.com/users/pytorch/orgs", "repos_url": "https://api.github.com/users/pytorch/repos", "events_url": "https://api.github.com/users/pytorch/events{/privacy}", "received_events_url": "https://api.github.com/users/pytorch/received_events", "type": "Organization", "site_admin": false}, "repo": {"id": 65600975, "node_id": "MDEwOlJlcG9zaXRvcnk2NTYwMDk3NQ==", "name": "pytorch", "full_name": "pytorch/pytorch", "private": false, "owner": {"login": "pytorch", "id": 21003710, "node_id": "MDEyOk9yZ2FuaXphdGlvbjIxMDAzNzEw", "avatar_url": "https://avatars3.githubusercontent.com/u/21003710?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pytorch", "html_url": "https://github.com/pytorch", "followers_url": "https://api.github.com/users/pytorch/followers", "following_url": "https://api.github.com/users/pytorch/following{/other_user}", "gists_url": "https://api.github.com/users/pytorch/gists{/gist_id}", "starred_url": "https://api.github.com/users/pytorch/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pytorch/subscriptions", "organizations_url": "https://api.github.com/users/pytorch/orgs", "repos_url": "https://api.github.com/users/pytorch/repos", "events_url": "https://api.github.com/users/pytorch/events{/privacy}", "received_events_url": "https://api.github.com/users/pytorch/received_events", "type": "Organization", "site_admin": false}, "html_url": "https://github.com/pytorch/pytorch", "description": "Tensors and Dynamic neural networks in Python  with strong GPU acceleration", "fork": false, "url": "https://api.github.com/repos/pytorch/pytorch", "forks_url": "https://api.github.com/repos/pytorch/pytorch/forks", "keys_url": "https://api.github.com/repos/pytorch/pytorch/keys{/key_id}", "collaborators_url": "https://api.github.com/repos/pytorch/pytorch/collaborators{/collaborator}", "teams_url": "https://api.github.com/repos/pytorch/pytorch/teams", "hooks_url": "https://api.github.com/repos/pytorch/pytorch/hooks", "issue_events_url": "https://api.github.com/repos/pytorch/pytorch/issues/events{/number}", "events_url": "https://api.github.com/repos/pytorch/pytorch/events", "assignees_url": "https://api.github.com/repos/pytorch/pytorch/assignees{/user}", "branches_url": "https://api.github.com/repos/pytorch/pytorch/branches{/branch}", "tags_url": "https://api.github.com/repos/pytorch/pytorch/tags", "blobs_url": "https://api.github.com/repos/pytorch/pytorch/git/blobs{/sha}", "git_tags_url": "https://api.github.com/repos/pytorch/pytorch/git/tags{/sha}", "git_refs_url": "https://api.github.com/repos/pytorch/pytorch/git/refs{/sha}", "trees_url": "https://api.github.com/repos/pytorch/pytorch/git/trees{/sha}", "statuses_url": "https://api.github.com/repos/pytorch/pytorch/statuses/{sha}", "languages_url": "https://api.github.com/repos/pytorch/pytorch/languages", "stargazers_url": "https://api.github.com/repos/pytorch/pytorch/stargazers", "contributors_url": "https://api.github.com/repos/pytorch/pytorch/contributors", "subscribers_url": "https://api.github.com/repos/pytorch/pytorch/subscribers", "subscription_url": "https://api.github.com/repos/pytorch/pytorch/subscription", "commits_url": "https://api.github.com/repos/pytorch/pytorch/commits{/sha}", "git_commits_url": "https://api.github.com/repos/pytorch/pytorch/git/commits{/sha}", "comments_url": "https://api.github.com/repos/pytorch/pytorch/comments{/number}", "issue_comment_url": "https://api.github.com/repos/pytorch/pytorch/issues/comments{/number}", "contents_url": "https://api.github.com/repos/pytorch/pytorch/contents/{+path}", "compare_url": "https://api.github.com/repos/pytorch/pytorch/compare/{base}...{head}", "merges_url": "https://api.github.com/repos/pytorch/pytorch/merges", "archive_url": "https://api.github.com/repos/pytorch/pytorch/{archive_format}{/ref}", "downloads_url": "https://api.github.com/repos/pytorch/pytorch/downloads", "issues_url": "https://api.github.com/repos/pytorch/pytorch/issues{/number}", "pulls_url": "https://api.github.com/repos/pytorch/pytorch/pulls{/number}", "milestones_url": "https://api.github.com/repos/pytorch/pytorch/milestones{/number}", "notifications_url": "https://api.github.com/repos/pytorch/pytorch/notifications{?since,all,participating}", "labels_url": "https://api.github.com/repos/pytorch/pytorch/labels{/name}", "releases_url": "https://api.github.com/repos/pytorch/pytorch/releases{/id}", "deployments_url": "https://api.github.com/repos/pytorch/pytorch/deployments", "created_at": "2016-08-13T05:26:41Z", "updated_at": "2018-11-24T12:35:43Z", "pushed_at": "2018-11-24T12:42:01Z", "git_url": "git://github.com/pytorch/pytorch.git", "ssh_url": "git@github.com:pytorch/pytorch.git", "clone_url": "https://github.com/pytorch/pytorch.git", "svn_url": "https://github.com/pytorch/pytorch", "homepage": "http://pytorch.org", "size": 89656, "stargazers_count": 21589, "watchers_count": 21589, "language": "C++", "has_issues": true, "has_projects": true, "has_downloads": true, "has_wiki": true, "has_pages": false, "forks_count": 5153, "mirror_url": null, "archived": false, "open_issues_count": 2197, "license": {"key": "other", "name": "Other", "spdx_id": "NOASSERTION", "url": null, "node_id": "MDc6TGljZW5zZTA="}, "forks": 5153, "open_issues": 2197, "watchers": 21589, "default_branch": "master"}}, "_links": {"self": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/5356"}, "html": {"href": "https://github.com/pytorch/pytorch/pull/5356"}, "issue": {"href": "https://api.github.com/repos/pytorch/pytorch/issues/5356"}, "comments": {"href": "https://api.github.com/repos/pytorch/pytorch/issues/5356/comments"}, "review_comments": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/5356/comments"}, "review_comment": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/comments{/number}"}, "commits": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/5356/commits"}, "statuses": {"href": "https://api.github.com/repos/pytorch/pytorch/statuses/a0eb1cd51127dcfc01172a01a5add6687d64291b"}}, "author_association": "COLLABORATOR", "body_html": "<p>This PR adds the possibility to build the C++ parts of autograd and jit, with no dependency on Python.<br>\nThe goal is to allow taking a PyTorch IR representation (a tree s-expr) and running it with provided inputs.</p>\n<p>Prerequisite: build PyTorch so that codegen runs once.<br>\nInstructions:</p>\n<pre><code>cd tools/cpp_build\nbash build_all.sh\n</code></pre>\n<p>This will build <code>libtorchjit</code> and <code>torchjit_test</code> in <code>tools/cpp_build/build/torchjit-build</code>. The latter basically runs the code in <code>test_jit.cpp</code> for now.</p>\n<p>While writing the PR, it turned out that a few of <code>Python.h</code> includes were redundant. They were removed here (PyTorch tests still pass on my machine, we'll see CI).</p>\n<p>TODOs:</p>\n<ul class=\"contains-task-list\">\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\" checked=\"\"> test with CUDA, Linux, Windows - only tested on a CPU build on macOS <del>(note: I have a CPU version of <code>text_jit.cpp</code> that I didn't include to check if tests pass - they do except fuser which requires CUDA)</del></li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\" checked=\"\"> add proper C++ testing infrastructure</li>\n<li><del>add example that takes the PyTorch IR S-expr as a string and runs it with provided tensor inputs</del> In the interest of getting the PR sooner than later, this will be added in a subsequent PR</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\" checked=\"\"> Updated: reduce ifdefs and split off code depending on python in separate files that can be included conditionally</li>\n<li><del>add codegen step to build</del> Separate PR</li>\n<li><del>add tests to Jenkins</del> Separate PR</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\" checked=\"\"> get rid of warnings related to XOPEN_SOURCE, etc (see comment in <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load issue title\" data-id=\"299878264\" data-permission-text=\"Issue title is private\" data-url=\"https://github.com/pytorch/pytorch/issues/5391\" data-hovercard-type=\"pull_request\" data-hovercard-url=\"/pytorch/pytorch/pull/5391/hovercard\" href=\"https://github.com/pytorch/pytorch/pull/5391\">#5391</a>)</li>\n</ul>\n<p>I'm volunteering for making sure cpp builds work as new PRs are merged.</p>\n<p>/cc <a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=4583066\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/apaszke\">@apaszke</a></p>", "body_text": "This PR adds the possibility to build the C++ parts of autograd and jit, with no dependency on Python.\nThe goal is to allow taking a PyTorch IR representation (a tree s-expr) and running it with provided inputs.\nPrerequisite: build PyTorch so that codegen runs once.\nInstructions:\ncd tools/cpp_build\nbash build_all.sh\n\nThis will build libtorchjit and torchjit_test in tools/cpp_build/build/torchjit-build. The latter basically runs the code in test_jit.cpp for now.\nWhile writing the PR, it turned out that a few of Python.h includes were redundant. They were removed here (PyTorch tests still pass on my machine, we'll see CI).\nTODOs:\n\n test with CUDA, Linux, Windows - only tested on a CPU build on macOS (note: I have a CPU version of text_jit.cpp that I didn't include to check if tests pass - they do except fuser which requires CUDA)\n add proper C++ testing infrastructure\nadd example that takes the PyTorch IR S-expr as a string and runs it with provided tensor inputs In the interest of getting the PR sooner than later, this will be added in a subsequent PR\n Updated: reduce ifdefs and split off code depending on python in separate files that can be included conditionally\nadd codegen step to build Separate PR\nadd tests to Jenkins Separate PR\n get rid of warnings related to XOPEN_SOURCE, etc (see comment in #5391)\n\nI'm volunteering for making sure cpp builds work as new PRs are merged.\n/cc @apaszke", "merged": true, "mergeable": null, "rebaseable": null, "mergeable_state": "unknown", "merged_by": {"login": "ezyang", "id": 13564, "node_id": "MDQ6VXNlcjEzNTY0", "avatar_url": "https://avatars0.githubusercontent.com/u/13564?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ezyang", "html_url": "https://github.com/ezyang", "followers_url": "https://api.github.com/users/ezyang/followers", "following_url": "https://api.github.com/users/ezyang/following{/other_user}", "gists_url": "https://api.github.com/users/ezyang/gists{/gist_id}", "starred_url": "https://api.github.com/users/ezyang/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ezyang/subscriptions", "organizations_url": "https://api.github.com/users/ezyang/orgs", "repos_url": "https://api.github.com/users/ezyang/repos", "events_url": "https://api.github.com/users/ezyang/events{/privacy}", "received_events_url": "https://api.github.com/users/ezyang/received_events", "type": "User", "site_admin": false}, "comments": 25, "review_comments": 44, "maintainer_can_modify": false, "commits": 2, "additions": 344, "deletions": 96, "changed_files": 34}