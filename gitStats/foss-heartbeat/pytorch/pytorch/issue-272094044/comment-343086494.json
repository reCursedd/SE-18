{"url": "https://api.github.com/repos/pytorch/pytorch/issues/comments/343086494", "html_url": "https://github.com/pytorch/pytorch/pull/3562#issuecomment-343086494", "issue_url": "https://api.github.com/repos/pytorch/pytorch/issues/3562", "id": 343086494, "node_id": "MDEyOklzc3VlQ29tbWVudDM0MzA4NjQ5NA==", "user": {"login": "ezyang", "id": 13564, "node_id": "MDQ6VXNlcjEzNTY0", "avatar_url": "https://avatars0.githubusercontent.com/u/13564?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ezyang", "html_url": "https://github.com/ezyang", "followers_url": "https://api.github.com/users/ezyang/followers", "following_url": "https://api.github.com/users/ezyang/following{/other_user}", "gists_url": "https://api.github.com/users/ezyang/gists{/gist_id}", "starred_url": "https://api.github.com/users/ezyang/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ezyang/subscriptions", "organizations_url": "https://api.github.com/users/ezyang/orgs", "repos_url": "https://api.github.com/users/ezyang/repos", "events_url": "https://api.github.com/users/ezyang/events{/privacy}", "received_events_url": "https://api.github.com/users/ezyang/received_events", "type": "User", "site_admin": false}, "created_at": "2017-11-09T08:47:44Z", "updated_at": "2017-11-09T08:47:44Z", "author_association": "CONTRIBUTOR", "body_html": "<p>I started working on <a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=655866\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/colesbury\">@colesbury</a>'s review comments and got sucked into some more refactoring. The new commits are:</p>\n<ul>\n<li>Delete unused defined_if fields.  \u2026</li>\n<li>s/thpp/at/  \u2026</li>\n<li>Delete default parameters from derivatives.yaml.  \u2026</li>\n<li>Fix parsing problem with std::array&lt;int, 2&gt; (note space)  \u2026</li>\n<li>Extra sanity checking for derivatives.yaml versus Declaraitons.yaml \u2026</li>\n<li>Fix misnamed generator argument.</li>\n</ul>\n<p>The prelu commit also got modified in a pretty substantial way. First, I found a bug in how I was doing <code>derivatives.yaml</code>: I added an explicit definition for <code>prelu</code> in <code>derivatives.yaml</code>, but ACTUALLY preprocess_nn_declarations already gave a definition. I am not sure about the wisdom of these implicit definitions, but in this regime, I shouldn't define a derivatives for 'prelu'. So I deleted it. I then wanted to add a test for whether or not this happened, but I ran afoul this bug: <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load issue title\" data-id=\"272481029\" data-permission-text=\"Issue title is private\" data-url=\"https://github.com/zdevito/ATen/issues/166\" data-hovercard-type=\"issue\" data-hovercard-url=\"/zdevito/ATen/issues/166/hovercard\" href=\"https://github.com/zdevito/ATen/issues/166\">zdevito/ATen#166</a></p>\n<p>The other major change is how I decided to close the loop on <code>output_mask</code>. Basically, I really DON'T want the <code>output_mask</code> we define in the backwards autogen code to shadow an input named <code>output_mask</code> because that is hella confusing. So, I decided to change our local name to <code>grad_input_mask</code>, unconditionally. But this triggered a bug in how we do the implicit NN derivatives, so I also fixed that code up too. Now I think everything is nicely consistent.</p>", "body_text": "I started working on @colesbury's review comments and got sucked into some more refactoring. The new commits are:\n\nDelete unused defined_if fields.  \u2026\ns/thpp/at/  \u2026\nDelete default parameters from derivatives.yaml.  \u2026\nFix parsing problem with std::array<int, 2> (note space)  \u2026\nExtra sanity checking for derivatives.yaml versus Declaraitons.yaml \u2026\nFix misnamed generator argument.\n\nThe prelu commit also got modified in a pretty substantial way. First, I found a bug in how I was doing derivatives.yaml: I added an explicit definition for prelu in derivatives.yaml, but ACTUALLY preprocess_nn_declarations already gave a definition. I am not sure about the wisdom of these implicit definitions, but in this regime, I shouldn't define a derivatives for 'prelu'. So I deleted it. I then wanted to add a test for whether or not this happened, but I ran afoul this bug: zdevito/ATen#166\nThe other major change is how I decided to close the loop on output_mask. Basically, I really DON'T want the output_mask we define in the backwards autogen code to shadow an input named output_mask because that is hella confusing. So, I decided to change our local name to grad_input_mask, unconditionally. But this triggered a bug in how we do the implicit NN derivatives, so I also fixed that code up too. Now I think everything is nicely consistent.", "body": "I started working on @colesbury's review comments and got sucked into some more refactoring. The new commits are:\r\n\r\n* Delete unused defined_if fields.  \u2026\r\n* s/thpp/at/  \u2026\r\n* Delete default parameters from derivatives.yaml.  \u2026\r\n* Fix parsing problem with std::array<int, 2> (note space)  \u2026\r\n* Extra sanity checking for derivatives.yaml versus Declaraitons.yaml \u2026\r\n* Fix misnamed generator argument. \r\n\r\nThe prelu commit also got modified in a pretty substantial way. First, I found a bug in how I was doing `derivatives.yaml`: I added an explicit definition for `prelu` in `derivatives.yaml`, but ACTUALLY preprocess_nn_declarations already gave a definition. I am not sure about the wisdom of these implicit definitions, but in this regime, I shouldn't define a derivatives for 'prelu'. So I deleted it. I then wanted to add a test for whether or not this happened, but I ran afoul this bug: https://github.com/zdevito/ATen/issues/166\r\n\r\nThe other major change is how I decided to close the loop on `output_mask`. Basically, I really DON'T want the `output_mask` we define in the backwards autogen code to shadow an input named `output_mask` because that is hella confusing. So, I decided to change our local name to `grad_input_mask`, unconditionally. But this triggered a bug in how we do the implicit NN derivatives, so I also fixed that code up too. Now I think everything is nicely consistent."}