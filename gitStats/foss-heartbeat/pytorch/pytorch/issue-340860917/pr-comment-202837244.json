{"url": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/202837244", "pull_request_review_id": 137612042, "id": 202837244, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwMjgzNzI0NA==", "diff_hunk": "@@ -38,35 +48,39 @@ void postRecordTrace(const PreTraceInfo& info,\n   }\n }\n \n-thread_local ArgumentStash ArgumentStash::stash;\n-\n-void ArgumentStash::stashIntListElem(const std::string& arg_name, size_t size, size_t idx, const Variable& var) {\n-  // TODO: check type?\n-  if (!isTracing(var)) return;\n-  auto tracing_state = getTracingState({var});\n-  auto & list_trace = stash.intlists.emplace(arg_name, size).first->second;\n-  JIT_ASSERT(size == list_trace.size());\n-  JIT_ASSERT(idx < list_trace.size());\n-  JIT_ASSERT(list_trace[idx] == nullptr);\n-  list_trace[idx] = getValueTrace(tracing_state, var);\n-}\n-\n autograd::Variable getSizeOf(const autograd::Variable& var, int64_t dim) {\n-  auto tracing_state = getTracingState({var});\n+  auto & tracing_state = getTracingState();\n   auto & graph = tracing_state->graph;\n \n   auto size_var = autograd::make_variable(at::Scalar(var.size(dim)).toTensor());\n-  auto* value = getValueTrace(tracing_state, var);\n+  auto* value = getValueTrace(var);\n   auto* node = graph->create(aten::size, {value})\n                     ->i_(attr::dim, dim);\n   node->output()->inferTypeFrom(size_var);\n   graph->appendNode(node);\n-  setValueTrace(tracing_state, size_var, node->output());\n+  setValueTrace(size_var, node->output());\n \n   return size_var;\n }\n \n+////////////////////////////////////////////////////////////////////////////////\n+// Argument stash\n+////////////////////////////////////////////////////////////////////////////////\n+thread_local ArgumentStash ArgumentStash::stash;\n+\n+void ArgumentStash::stashIntListElem(const std::string& arg_name, size_t size, size_t idx, const Variable& var) {", "path": "torch/csrc/jit/tracer.cpp", "position": 85, "original_position": 77, "commit_id": "94d61babb23426cdf2699a60f30013455cb93d46", "original_commit_id": "36aeb050ca352f092dac249963df5b17ccbb0be5", "user": {"login": "apaszke", "id": 4583066, "node_id": "MDQ6VXNlcjQ1ODMwNjY=", "avatar_url": "https://avatars3.githubusercontent.com/u/4583066?v=4", "gravatar_id": "", "url": "https://api.github.com/users/apaszke", "html_url": "https://github.com/apaszke", "followers_url": "https://api.github.com/users/apaszke/followers", "following_url": "https://api.github.com/users/apaszke/following{/other_user}", "gists_url": "https://api.github.com/users/apaszke/gists{/gist_id}", "starred_url": "https://api.github.com/users/apaszke/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/apaszke/subscriptions", "organizations_url": "https://api.github.com/users/apaszke/orgs", "repos_url": "https://api.github.com/users/apaszke/repos", "events_url": "https://api.github.com/users/apaszke/events{/privacy}", "received_events_url": "https://api.github.com/users/apaszke/received_events", "type": "User", "site_admin": false}, "body": "I could move this function to `TracingState` if you think that would be nicer, but unfortunately we can't get rid of that. It's our way of retaining the information that was present in tensors that got casted into `IntList`s along their way to ATen.", "created_at": "2018-07-16T21:54:49Z", "updated_at": "2018-11-23T15:47:32Z", "html_url": "https://github.com/pytorch/pytorch/pull/9414#discussion_r202837244", "pull_request_url": "https://api.github.com/repos/pytorch/pytorch/pulls/9414", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/202837244"}, "html": {"href": "https://github.com/pytorch/pytorch/pull/9414#discussion_r202837244"}, "pull_request": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/9414"}}, "body_html": "<p>I could move this function to <code>TracingState</code> if you think that would be nicer, but unfortunately we can't get rid of that. It's our way of retaining the information that was present in tensors that got casted into <code>IntList</code>s along their way to ATen.</p>", "body_text": "I could move this function to TracingState if you think that would be nicer, but unfortunately we can't get rid of that. It's our way of retaining the information that was present in tensors that got casted into IntLists along their way to ATen.", "in_reply_to_id": 202807396}