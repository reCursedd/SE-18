{"url": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/157064518", "pull_request_review_id": 83648361, "id": 157064518, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE1NzA2NDUxOA==", "diff_hunk": "@@ -343,32 +343,18 @@ def backward_extended(self, grad_output, grad_hy):\n         return grad_input, grad_weight, grad_hx\n \n \n-def hack_onnx_rnn(fargs, output, args, kwargs):\n-    input, all_weights, hx = fargs\n-    output_tensors = tuple(v.data for v in _iter_variables(output))\n-    flat_weights = tuple(_iter_variables(all_weights))\n-    flat_hx = tuple(_iter_variables(hx))\n+def RNN_symbolic_builder(*args, **kwargs):\n+    def symbolic(g, input, all_weights, hx, **kwargs):\n+        # Something can go here, e.g.\n+        # return g.op('LSTM', input, *all_weights[0], outputs=2)\n+        raise RuntimeError(\"RNN symbolic NYI\")\n \n-    class RNNSymbolic(Function):\n-        @staticmethod\n-        def symbolic(g, *fargs):\n-            # NOTE: fargs contains Variable inputs (input + weight + hidden)\n-            # NOTE: args/kwargs contain RNN parameters\n-            raise RuntimeError(\"hack_onnx_rnn NYI\")\n-\n-        @staticmethod\n-        def forward(ctx, *fargs):\n-            return output_tensors\n-\n-        @staticmethod\n-        def backward(ctx, *gargs, **gkwargs):\n-            raise RuntimeError(\"FIXME: Traced RNNs don't support backward\")\n-\n-    flat_output = RNNSymbolic.apply(*((input,) + flat_weights + flat_hx))\n-    return _unflatten(flat_output, output)\n+    return symbolic_override(symbolic)\n \n \n def RNN(*args, **kwargs):\n+\n+    @RNN_symbolic_builder(*args, **kwargs)", "path": "torch/nn/_functions/rnn.py", "position": null, "original_position": 45, "commit_id": "40309481d832c37b8e3afe14677603f408e842f2", "original_commit_id": "f7b50a881138b5d079eaf3391237137ba0734aeb", "user": {"login": "dzhulgakov", "id": 17890620, "node_id": "MDQ6VXNlcjE3ODkwNjIw", "avatar_url": "https://avatars2.githubusercontent.com/u/17890620?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dzhulgakov", "html_url": "https://github.com/dzhulgakov", "followers_url": "https://api.github.com/users/dzhulgakov/followers", "following_url": "https://api.github.com/users/dzhulgakov/following{/other_user}", "gists_url": "https://api.github.com/users/dzhulgakov/gists{/gist_id}", "starred_url": "https://api.github.com/users/dzhulgakov/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dzhulgakov/subscriptions", "organizations_url": "https://api.github.com/users/dzhulgakov/orgs", "repos_url": "https://api.github.com/users/dzhulgakov/repos", "events_url": "https://api.github.com/users/dzhulgakov/events{/privacy}", "received_events_url": "https://api.github.com/users/dzhulgakov/received_events", "type": "User", "site_admin": false}, "body": "oh wait, it shouldn't be here. I added it accidentally :)", "created_at": "2017-12-14T21:19:07Z", "updated_at": "2018-11-23T15:37:23Z", "html_url": "https://github.com/pytorch/pytorch/pull/4143#discussion_r157064518", "pull_request_url": "https://api.github.com/repos/pytorch/pytorch/pulls/4143", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/157064518"}, "html": {"href": "https://github.com/pytorch/pytorch/pull/4143#discussion_r157064518"}, "pull_request": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/4143"}}, "body_html": "<p>oh wait, it shouldn't be here. I added it accidentally :)</p>", "body_text": "oh wait, it shouldn't be here. I added it accidentally :)"}