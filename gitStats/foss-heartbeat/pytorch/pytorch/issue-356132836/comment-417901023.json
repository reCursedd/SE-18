{"url": "https://api.github.com/repos/pytorch/pytorch/issues/comments/417901023", "html_url": "https://github.com/pytorch/pytorch/pull/11163#issuecomment-417901023", "issue_url": "https://api.github.com/repos/pytorch/pytorch/issues/11163", "id": 417901023, "node_id": "MDEyOklzc3VlQ29tbWVudDQxNzkwMTAyMw==", "user": {"login": "ezyang", "id": 13564, "node_id": "MDQ6VXNlcjEzNTY0", "avatar_url": "https://avatars0.githubusercontent.com/u/13564?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ezyang", "html_url": "https://github.com/ezyang", "followers_url": "https://api.github.com/users/ezyang/followers", "following_url": "https://api.github.com/users/ezyang/following{/other_user}", "gists_url": "https://api.github.com/users/ezyang/gists{/gist_id}", "starred_url": "https://api.github.com/users/ezyang/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ezyang/subscriptions", "organizations_url": "https://api.github.com/users/ezyang/orgs", "repos_url": "https://api.github.com/users/ezyang/repos", "events_url": "https://api.github.com/users/ezyang/events{/privacy}", "received_events_url": "https://api.github.com/users/ezyang/received_events", "type": "User", "site_admin": false}, "created_at": "2018-09-02T02:49:33Z", "updated_at": "2018-09-02T02:49:33Z", "author_association": "CONTRIBUTOR", "body_html": "<p>Here's how I'm addressing the comments:</p>\n<ul>\n<li>I grepped for <code>ag \"typename scalar_t\"</code> in the TH directories, and manually fixed all occurrences that popped up by replacing <code>scalar_t</code> with <code>T</code></li>\n<li>Fixed the referenced comment issues</li>\n<li>Searched for \"//.+scalar_t\" to see if I missed any inline comment issues</li>\n<li>Grepped the diff for /*, which actually did bring up some more comment issues</li>\n</ul>\n<p>Thinking about the template parameter problem, I'm actually not sure how wise it is to rename this as <code>scalar_t</code>, because that's our canonical name for our templated methods, which means that if we include any of the <code>template&lt;typename scalar_t&gt;</code> headers from inside generic TH, we'll twing the error. I guess this shouldn't actually happen.</p>", "body_text": "Here's how I'm addressing the comments:\n\nI grepped for ag \"typename scalar_t\" in the TH directories, and manually fixed all occurrences that popped up by replacing scalar_t with T\nFixed the referenced comment issues\nSearched for \"//.+scalar_t\" to see if I missed any inline comment issues\nGrepped the diff for /*, which actually did bring up some more comment issues\n\nThinking about the template parameter problem, I'm actually not sure how wise it is to rename this as scalar_t, because that's our canonical name for our templated methods, which means that if we include any of the template<typename scalar_t> headers from inside generic TH, we'll twing the error. I guess this shouldn't actually happen.", "body": "Here's how I'm addressing the comments:\r\n\r\n* I grepped for `ag \"typename scalar_t\"` in the TH directories, and manually fixed all occurrences that popped up by replacing `scalar_t` with `T`\r\n* Fixed the referenced comment issues\r\n* Searched for \"//.+scalar_t\" to see if I missed any inline comment issues\r\n* Grepped the diff for /*, which actually did bring up some more comment issues\r\n\r\nThinking about the template parameter problem, I'm actually not sure how wise it is to rename this as `scalar_t`, because that's our canonical name for our templated methods, which means that if we include any of the `template<typename scalar_t>` headers from inside generic TH, we'll twing the error. I guess this shouldn't actually happen."}