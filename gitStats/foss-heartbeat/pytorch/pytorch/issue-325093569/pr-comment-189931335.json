{"url": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/189931335", "pull_request_review_id": 122205978, "id": 189931335, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4OTkzMTMzNQ==", "diff_hunk": "@@ -140,39 +146,39 @@ struct Vec256 {\n template <class T> Vec256<T> operator+(const Vec256<T> &a, const Vec256<T> &b) {\n   Vec256<T> c = Vec256<T>();\n   for (int i = 0; i != Vec256<T>::size; i++) {\n-    c.values[i] = a.values[i] + b.values[i];\n+    c.set_value(i, a[i] + b[i]);", "path": "aten/src/ATen/cpu/vec256/vec256_base.h", "position": 22, "original_position": 22, "commit_id": "64e069a5b77117b5db0ea5a67c038aedd3d7d535", "original_commit_id": "64e069a5b77117b5db0ea5a67c038aedd3d7d535", "user": {"login": "cpuhrsch", "id": 1716488, "node_id": "MDQ6VXNlcjE3MTY0ODg=", "avatar_url": "https://avatars1.githubusercontent.com/u/1716488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cpuhrsch", "html_url": "https://github.com/cpuhrsch", "followers_url": "https://api.github.com/users/cpuhrsch/followers", "following_url": "https://api.github.com/users/cpuhrsch/following{/other_user}", "gists_url": "https://api.github.com/users/cpuhrsch/gists{/gist_id}", "starred_url": "https://api.github.com/users/cpuhrsch/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cpuhrsch/subscriptions", "organizations_url": "https://api.github.com/users/cpuhrsch/orgs", "repos_url": "https://api.github.com/users/cpuhrsch/repos", "events_url": "https://api.github.com/users/cpuhrsch/events{/privacy}", "received_events_url": "https://api.github.com/users/cpuhrsch/received_events", "type": "User", "site_admin": false}, "body": ".values is not indexable for packed types. That means, something like int64_t does not have a definition of say max. It will then use the default implementation. However, __m256i can't be indexed like this and it'll segfault.", "created_at": "2018-05-22T14:50:18Z", "updated_at": "2018-11-23T15:44:30Z", "html_url": "https://github.com/pytorch/pytorch/pull/7746#discussion_r189931335", "pull_request_url": "https://api.github.com/repos/pytorch/pytorch/pulls/7746", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/189931335"}, "html": {"href": "https://github.com/pytorch/pytorch/pull/7746#discussion_r189931335"}, "pull_request": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/7746"}}, "body_html": "<p>.values is not indexable for packed types. That means, something like int64_t does not have a definition of say max. It will then use the default implementation. However, __m256i can't be indexed like this and it'll segfault.</p>", "body_text": ".values is not indexable for packed types. That means, something like int64_t does not have a definition of say max. It will then use the default implementation. However, __m256i can't be indexed like this and it'll segfault.", "in_reply_to_id": 189847482}