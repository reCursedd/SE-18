{"url": "https://api.github.com/repos/pytorch/pytorch/issues/comments/382575817", "html_url": "https://github.com/pytorch/pytorch/issues/6694#issuecomment-382575817", "issue_url": "https://api.github.com/repos/pytorch/pytorch/issues/6694", "id": 382575817, "node_id": "MDEyOklzc3VlQ29tbWVudDM4MjU3NTgxNw==", "user": {"login": "HMEIatJHU", "id": 19693633, "node_id": "MDQ6VXNlcjE5NjkzNjMz", "avatar_url": "https://avatars1.githubusercontent.com/u/19693633?v=4", "gravatar_id": "", "url": "https://api.github.com/users/HMEIatJHU", "html_url": "https://github.com/HMEIatJHU", "followers_url": "https://api.github.com/users/HMEIatJHU/followers", "following_url": "https://api.github.com/users/HMEIatJHU/following{/other_user}", "gists_url": "https://api.github.com/users/HMEIatJHU/gists{/gist_id}", "starred_url": "https://api.github.com/users/HMEIatJHU/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/HMEIatJHU/subscriptions", "organizations_url": "https://api.github.com/users/HMEIatJHU/orgs", "repos_url": "https://api.github.com/users/HMEIatJHU/repos", "events_url": "https://api.github.com/users/HMEIatJHU/events{/privacy}", "received_events_url": "https://api.github.com/users/HMEIatJHU/received_events", "type": "User", "site_admin": false}, "created_at": "2018-04-19T01:01:34Z", "updated_at": "2018-04-19T01:03:07Z", "author_association": "NONE", "body_html": "<p><a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=9110200\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/fmassa\">@fmassa</a> Thanks! I extensively used things like:</p>\n<ol>\n<li></li>\n</ol>\n<div class=\"highlight highlight-source-python\"><pre>ind0 <span class=\"pl-k\">=</span> a <span class=\"pl-k\">&gt;</span> <span class=\"pl-c1\">0.0</span> <span class=\"pl-k\">&amp;</span> b <span class=\"pl-k\">&lt;</span> <span class=\"pl-c1\">0.0</span> <span class=\"pl-c\"><span class=\"pl-c\">#</span> a is a high-dim tensor</span>\nind1 <span class=\"pl-k\">=</span> a <span class=\"pl-k\">&lt;</span> <span class=\"pl-c1\">0.0</span> <span class=\"pl-k\">&amp;</span> b <span class=\"pl-k\">&gt;</span> <span class=\"pl-c1\">0.0</span>\na[ind0 <span class=\"pl-k\">|</span> ind1] <span class=\"pl-k\">=</span> <span class=\"pl-c1\">0.0</span></pre></div>\n<ol start=\"2\">\n<li></li>\n</ol>\n<div class=\"highlight highlight-source-python\"><pre>a[ind0 <span class=\"pl-k\">&amp;</span> ind1] <span class=\"pl-k\">=</span> b[ind0 <span class=\"pl-k\">&amp;</span> ind1] <span class=\"pl-k\">+</span> c[ind0 <span class=\"pl-k\">&amp;</span> ind1]\n<span class=\"pl-c\"><span class=\"pl-c\">#</span> ind0, ind1 are ByteTensor</span>\n<span class=\"pl-c\"><span class=\"pl-c\">#</span> a, b, c are FloatTensor </span>\n<span class=\"pl-c\"><span class=\"pl-c\">#</span> they are all updated in complex ways </span></pre></div>\n<ol start=\"3\">\n<li></li>\n</ol>\n<div class=\"highlight highlight-source-python\"><pre>b <span class=\"pl-k\">=</span> a[<span class=\"pl-c1\">range</span>, inds, :] \n<span class=\"pl-c\"><span class=\"pl-c\">#</span> a is a 3-dim tensor </span>\n<span class=\"pl-c\"><span class=\"pl-c\">#</span> range is a 1-dim tensor of [0,1,2,3,...]</span>\n<span class=\"pl-c\"><span class=\"pl-c\">#</span> inds is a 1-dim tensor of ints (as positions)</span>\n<span class=\"pl-c\"><span class=\"pl-c\">#</span> so b[i,:] = a[i,inds[i], :] </span></pre></div>\n<ol start=\"4\">\n<li></li>\n</ol>\n<div class=\"highlight highlight-source-python\"><pre>a[<span class=\"pl-c1\">range</span>, step] <span class=\"pl-k\">=</span> b \n<span class=\"pl-c\"><span class=\"pl-c\">#</span> a is a 2-dim tensor and b is 1-dim tensor </span>\n<span class=\"pl-c\"><span class=\"pl-c\">#</span> range is 1-dim tensor of [0,1,2,3,...]</span>\n<span class=\"pl-c\"><span class=\"pl-c\">#</span> step is 1-dim tensor of ints</span>\n<span class=\"pl-c\"><span class=\"pl-c\">#</span> so a[ i,step[i] ] = b[i] </span></pre></div>\n<p>Can you suggest some good ways of doing these things?</p>", "body_text": "@fmassa Thanks! I extensively used things like:\n\n\n\nind0 = a > 0.0 & b < 0.0 # a is a high-dim tensor\nind1 = a < 0.0 & b > 0.0\na[ind0 | ind1] = 0.0\n\n\n\na[ind0 & ind1] = b[ind0 & ind1] + c[ind0 & ind1]\n# ind0, ind1 are ByteTensor\n# a, b, c are FloatTensor \n# they are all updated in complex ways \n\n\n\nb = a[range, inds, :] \n# a is a 3-dim tensor \n# range is a 1-dim tensor of [0,1,2,3,...]\n# inds is a 1-dim tensor of ints (as positions)\n# so b[i,:] = a[i,inds[i], :] \n\n\n\na[range, step] = b \n# a is a 2-dim tensor and b is 1-dim tensor \n# range is 1-dim tensor of [0,1,2,3,...]\n# step is 1-dim tensor of ints\n# so a[ i,step[i] ] = b[i] \nCan you suggest some good ways of doing these things?", "body": "@fmassa Thanks! I extensively used things like: \r\n\r\n1) \r\n```python\r\nind0 = a > 0.0 & b < 0.0 # a is a high-dim tensor\r\nind1 = a < 0.0 & b > 0.0\r\na[ind0 | ind1] = 0.0\r\n```\r\n\r\n2) \r\n```python\r\na[ind0 & ind1] = b[ind0 & ind1] + c[ind0 & ind1]\r\n# ind0, ind1 are ByteTensor\r\n# a, b, c are FloatTensor \r\n# they are all updated in complex ways \r\n```\r\n\r\n3) \r\n```python\r\nb = a[range, inds, :] \r\n# a is a 3-dim tensor \r\n# range is a 1-dim tensor of [0,1,2,3,...]\r\n# inds is a 1-dim tensor of ints (as positions)\r\n# so b[i,:] = a[i,inds[i], :] \r\n```\r\n\r\n4) \r\n```python\r\na[range, step] = b \r\n# a is a 2-dim tensor and b is 1-dim tensor \r\n# range is 1-dim tensor of [0,1,2,3,...]\r\n# step is 1-dim tensor of ints\r\n# so a[ i,step[i] ] = b[i] \r\n```\r\n\r\nCan you suggest some good ways of doing these things? "}