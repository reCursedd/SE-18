{"url": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/148909066", "pull_request_review_id": 74231447, "id": 148909066, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE0ODkwOTA2Ng==", "diff_hunk": "@@ -570,6 +573,118 @@ PyObject *THPModule_fromDLPack(PyObject *_unused, PyObject *data)\n   return torch::createPyObject(atensor);\n }\n \n+// In cases like data loader, if a worker process die due to bus error/segfault\n+// or just hang, the main process, if implemented with multiprocessing.queue.,\n+// will hang waiting for data. This is difficult to avoid on PyTorch side as it\n+// can be caused by limited shm, other libraries users call in the workers. The\n+// following methods is an effort to do our best provide some error message to\n+// users when such unfortunate events happen.\n+\n+// Critical signal handlers should be registered on worker processes before\n+// doing work.\n+// Python handle is _set_worker_signal_handlers().\n+#define SIGNAL_HANDLER(SIGNAL, HANDLER_NAME, ERROR_MSG)                       \\\n+static void HANDLER_NAME(int sig)                                             \\\n+{                                                                             \\\n+    write(fileno(stderr), ERROR_MSG, strlen(ERROR_MSG));                      \\", "path": "torch/csrc/Module.cpp", "position": null, "original_position": 28, "commit_id": "5733b553bcf269fb3782f7a0dbd4a12918998a5e", "original_commit_id": "b900f6041a6e0c55a17dc65a3ee01260ae72efb5", "user": {"login": "colesbury", "id": 655866, "node_id": "MDQ6VXNlcjY1NTg2Ng==", "avatar_url": "https://avatars1.githubusercontent.com/u/655866?v=4", "gravatar_id": "", "url": "https://api.github.com/users/colesbury", "html_url": "https://github.com/colesbury", "followers_url": "https://api.github.com/users/colesbury/followers", "following_url": "https://api.github.com/users/colesbury/following{/other_user}", "gists_url": "https://api.github.com/users/colesbury/gists{/gist_id}", "starred_url": "https://api.github.com/users/colesbury/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/colesbury/subscriptions", "organizations_url": "https://api.github.com/users/colesbury/orgs", "repos_url": "https://api.github.com/users/colesbury/repos", "events_url": "https://api.github.com/users/colesbury/events{/privacy}", "received_events_url": "https://api.github.com/users/colesbury/received_events", "type": "User", "site_admin": false}, "body": "I don't think `fileno` is async-signal-safe:\r\n\r\nhttp://man7.org/linux/man-pages/man7/signal-safety.7.html", "created_at": "2017-11-03T22:52:57Z", "updated_at": "2018-11-23T15:35:59Z", "html_url": "https://github.com/pytorch/pytorch/pull/3474#discussion_r148909066", "pull_request_url": "https://api.github.com/repos/pytorch/pytorch/pulls/3474", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/148909066"}, "html": {"href": "https://github.com/pytorch/pytorch/pull/3474#discussion_r148909066"}, "pull_request": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/3474"}}, "body_html": "<p>I don't think <code>fileno</code> is async-signal-safe:</p>\n<p><a href=\"http://man7.org/linux/man-pages/man7/signal-safety.7.html\" rel=\"nofollow\">http://man7.org/linux/man-pages/man7/signal-safety.7.html</a></p>", "body_text": "I don't think fileno is async-signal-safe:\nhttp://man7.org/linux/man-pages/man7/signal-safety.7.html"}