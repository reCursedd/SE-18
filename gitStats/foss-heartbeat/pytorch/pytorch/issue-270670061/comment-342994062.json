{"url": "https://api.github.com/repos/pytorch/pytorch/issues/comments/342994062", "html_url": "https://github.com/pytorch/pytorch/issues/3440#issuecomment-342994062", "issue_url": "https://api.github.com/repos/pytorch/pytorch/issues/3440", "id": 342994062, "node_id": "MDEyOklzc3VlQ29tbWVudDM0Mjk5NDA2Mg==", "user": {"login": "lantiga", "id": 191033, "node_id": "MDQ6VXNlcjE5MTAzMw==", "avatar_url": "https://avatars2.githubusercontent.com/u/191033?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lantiga", "html_url": "https://github.com/lantiga", "followers_url": "https://api.github.com/users/lantiga/followers", "following_url": "https://api.github.com/users/lantiga/following{/other_user}", "gists_url": "https://api.github.com/users/lantiga/gists{/gist_id}", "starred_url": "https://api.github.com/users/lantiga/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lantiga/subscriptions", "organizations_url": "https://api.github.com/users/lantiga/orgs", "repos_url": "https://api.github.com/users/lantiga/repos", "events_url": "https://api.github.com/users/lantiga/events{/privacy}", "received_events_url": "https://api.github.com/users/lantiga/received_events", "type": "User", "site_admin": false}, "created_at": "2017-11-08T23:17:16Z", "updated_at": "2017-11-08T23:17:16Z", "author_association": "COLLABORATOR", "body_html": "<p>I was wondering about these warnings today, then I noticed this issue.<br>\nI assume that C linkage for THD is intended here even if <code>at::Tensor</code> is returned, so the need is to suppress the warning. In <code>torch/lib/THD/base/TensorDescriptor.h</code>, just add these pragma directives:</p>\n<div class=\"highlight highlight-source-c++\"><pre>#<span class=\"pl-k\">pragma</span> clang diagnostic push\n#<span class=\"pl-k\">pragma</span> clang diagnostic ignored \"-Wreturn-type-c-linkage\"\n\nTHD_API THDTensorDescriptor <span class=\"pl-en\">THDTensorDescriptor_newFromTHDoubleTensor</span>(THDoubleTensor *tensor);\nTHD_API THDTensorDescriptor <span class=\"pl-en\">THDTensorDescriptor_newFromTHFloatTensor</span>(THFloatTensor *tensor);\nTHD_API THDTensorDescriptor <span class=\"pl-en\">THDTensorDescriptor_newFromTHLongTensor</span>(THLongTensor *tensor);\nTHD_API THDTensorDescriptor <span class=\"pl-en\">THDTensorDescriptor_newFromTHIntTensor</span>(THIntTensor *tensor);\nTHD_API THDTensorDescriptor <span class=\"pl-en\">THDTensorDescriptor_newFromTHShortTensor</span>(THShortTensor *tensor);\nTHD_API THDTensorDescriptor <span class=\"pl-en\">THDTensorDescriptor_newFromTHCharTensor</span>(THCharTensor *tensor);\nTHD_API THDTensorDescriptor <span class=\"pl-en\">THDTensorDescriptor_newFromTHByteTensor</span>(THByteTensor *tensor);\n#<span class=\"pl-k\">ifdef</span> WITH_CUDA\nTHD_API THDTensorDescriptor <span class=\"pl-en\">THDTensorDescriptor_newFromTHCudaDoubleTensor</span>(THCudaDoubleTensor *tensor);\nTHD_API THDTensorDescriptor <span class=\"pl-en\">THDTensorDescriptor_newFromTHCudaFloatTensor</span>(THCudaTensor *tensor);\nTHD_API THDTensorDescriptor <span class=\"pl-en\">THDTensorDescriptor_newFromTHCudaLongTensor</span>(THCudaLongTensor *tensor);\nTHD_API THDTensorDescriptor <span class=\"pl-en\">THDTensorDescriptor_newFromTHCudaIntTensor</span>(THCudaIntTensor *tensor);\nTHD_API THDTensorDescriptor <span class=\"pl-en\">THDTensorDescriptor_newFromTHCudaShortTensor</span>(THCudaShortTensor *tensor);\nTHD_API THDTensorDescriptor <span class=\"pl-en\">THDTensorDescriptor_newFromTHCudaCharTensor</span>(THCudaCharTensor *tensor);\nTHD_API THDTensorDescriptor <span class=\"pl-en\">THDTensorDescriptor_newFromTHCudaByteTensor</span>(THCudaByteTensor *tensor);\n#<span class=\"pl-k\">endif</span>\n\n#<span class=\"pl-k\">pragma</span> clang diagnostic pop</pre></div>\n<p>I see that the issue is already assigned, so I'm not sending in a PR.</p>", "body_text": "I was wondering about these warnings today, then I noticed this issue.\nI assume that C linkage for THD is intended here even if at::Tensor is returned, so the need is to suppress the warning. In torch/lib/THD/base/TensorDescriptor.h, just add these pragma directives:\n#pragma clang diagnostic push\n#pragma clang diagnostic ignored \"-Wreturn-type-c-linkage\"\n\nTHD_API THDTensorDescriptor THDTensorDescriptor_newFromTHDoubleTensor(THDoubleTensor *tensor);\nTHD_API THDTensorDescriptor THDTensorDescriptor_newFromTHFloatTensor(THFloatTensor *tensor);\nTHD_API THDTensorDescriptor THDTensorDescriptor_newFromTHLongTensor(THLongTensor *tensor);\nTHD_API THDTensorDescriptor THDTensorDescriptor_newFromTHIntTensor(THIntTensor *tensor);\nTHD_API THDTensorDescriptor THDTensorDescriptor_newFromTHShortTensor(THShortTensor *tensor);\nTHD_API THDTensorDescriptor THDTensorDescriptor_newFromTHCharTensor(THCharTensor *tensor);\nTHD_API THDTensorDescriptor THDTensorDescriptor_newFromTHByteTensor(THByteTensor *tensor);\n#ifdef WITH_CUDA\nTHD_API THDTensorDescriptor THDTensorDescriptor_newFromTHCudaDoubleTensor(THCudaDoubleTensor *tensor);\nTHD_API THDTensorDescriptor THDTensorDescriptor_newFromTHCudaFloatTensor(THCudaTensor *tensor);\nTHD_API THDTensorDescriptor THDTensorDescriptor_newFromTHCudaLongTensor(THCudaLongTensor *tensor);\nTHD_API THDTensorDescriptor THDTensorDescriptor_newFromTHCudaIntTensor(THCudaIntTensor *tensor);\nTHD_API THDTensorDescriptor THDTensorDescriptor_newFromTHCudaShortTensor(THCudaShortTensor *tensor);\nTHD_API THDTensorDescriptor THDTensorDescriptor_newFromTHCudaCharTensor(THCudaCharTensor *tensor);\nTHD_API THDTensorDescriptor THDTensorDescriptor_newFromTHCudaByteTensor(THCudaByteTensor *tensor);\n#endif\n\n#pragma clang diagnostic pop\nI see that the issue is already assigned, so I'm not sending in a PR.", "body": "I was wondering about these warnings today, then I noticed this issue.\r\nI assume that C linkage for THD is intended here even if `at::Tensor` is returned, so the need is to suppress the warning. In `torch/lib/THD/base/TensorDescriptor.h`, just add these pragma directives:\r\n\r\n```C++\r\n#pragma clang diagnostic push\r\n#pragma clang diagnostic ignored \"-Wreturn-type-c-linkage\"\r\n\r\nTHD_API THDTensorDescriptor THDTensorDescriptor_newFromTHDoubleTensor(THDoubleTensor *tensor);\r\nTHD_API THDTensorDescriptor THDTensorDescriptor_newFromTHFloatTensor(THFloatTensor *tensor);\r\nTHD_API THDTensorDescriptor THDTensorDescriptor_newFromTHLongTensor(THLongTensor *tensor);\r\nTHD_API THDTensorDescriptor THDTensorDescriptor_newFromTHIntTensor(THIntTensor *tensor);\r\nTHD_API THDTensorDescriptor THDTensorDescriptor_newFromTHShortTensor(THShortTensor *tensor);\r\nTHD_API THDTensorDescriptor THDTensorDescriptor_newFromTHCharTensor(THCharTensor *tensor);\r\nTHD_API THDTensorDescriptor THDTensorDescriptor_newFromTHByteTensor(THByteTensor *tensor);\r\n#ifdef WITH_CUDA\r\nTHD_API THDTensorDescriptor THDTensorDescriptor_newFromTHCudaDoubleTensor(THCudaDoubleTensor *tensor);\r\nTHD_API THDTensorDescriptor THDTensorDescriptor_newFromTHCudaFloatTensor(THCudaTensor *tensor);\r\nTHD_API THDTensorDescriptor THDTensorDescriptor_newFromTHCudaLongTensor(THCudaLongTensor *tensor);\r\nTHD_API THDTensorDescriptor THDTensorDescriptor_newFromTHCudaIntTensor(THCudaIntTensor *tensor);\r\nTHD_API THDTensorDescriptor THDTensorDescriptor_newFromTHCudaShortTensor(THCudaShortTensor *tensor);\r\nTHD_API THDTensorDescriptor THDTensorDescriptor_newFromTHCudaCharTensor(THCudaCharTensor *tensor);\r\nTHD_API THDTensorDescriptor THDTensorDescriptor_newFromTHCudaByteTensor(THCudaByteTensor *tensor);\r\n#endif\r\n\r\n#pragma clang diagnostic pop\r\n```\r\n\r\nI see that the issue is already assigned, so I'm not sending in a PR."}