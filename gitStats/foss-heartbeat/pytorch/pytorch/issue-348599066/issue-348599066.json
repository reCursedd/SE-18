{"url": "https://api.github.com/repos/pytorch/pytorch/issues/10345", "repository_url": "https://api.github.com/repos/pytorch/pytorch", "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/10345/labels{/name}", "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/10345/comments", "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/10345/events", "html_url": "https://github.com/pytorch/pytorch/issues/10345", "id": 348599066, "node_id": "MDU6SXNzdWUzNDg1OTkwNjY=", "number": 10345, "title": "Potential Bug in torch.symeig()", "user": {"login": "Taha-Bahadori", "id": 31113375, "node_id": "MDQ6VXNlcjMxMTEzMzc1", "avatar_url": "https://avatars3.githubusercontent.com/u/31113375?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Taha-Bahadori", "html_url": "https://github.com/Taha-Bahadori", "followers_url": "https://api.github.com/users/Taha-Bahadori/followers", "following_url": "https://api.github.com/users/Taha-Bahadori/following{/other_user}", "gists_url": "https://api.github.com/users/Taha-Bahadori/gists{/gist_id}", "starred_url": "https://api.github.com/users/Taha-Bahadori/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Taha-Bahadori/subscriptions", "organizations_url": "https://api.github.com/users/Taha-Bahadori/orgs", "repos_url": "https://api.github.com/users/Taha-Bahadori/repos", "events_url": "https://api.github.com/users/Taha-Bahadori/events{/privacy}", "received_events_url": "https://api.github.com/users/Taha-Bahadori/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 443483881, "node_id": "MDU6TGFiZWw0NDM0ODM4ODE=", "url": "https://api.github.com/repos/pytorch/pytorch/labels/todo", "name": "todo", "color": "c2e0c6", "default": false}], "state": "closed", "locked": false, "assignee": {"login": "ailzhang", "id": 5248122, "node_id": "MDQ6VXNlcjUyNDgxMjI=", "avatar_url": "https://avatars2.githubusercontent.com/u/5248122?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ailzhang", "html_url": "https://github.com/ailzhang", "followers_url": "https://api.github.com/users/ailzhang/followers", "following_url": "https://api.github.com/users/ailzhang/following{/other_user}", "gists_url": "https://api.github.com/users/ailzhang/gists{/gist_id}", "starred_url": "https://api.github.com/users/ailzhang/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ailzhang/subscriptions", "organizations_url": "https://api.github.com/users/ailzhang/orgs", "repos_url": "https://api.github.com/users/ailzhang/repos", "events_url": "https://api.github.com/users/ailzhang/events{/privacy}", "received_events_url": "https://api.github.com/users/ailzhang/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "ailzhang", "id": 5248122, "node_id": "MDQ6VXNlcjUyNDgxMjI=", "avatar_url": "https://avatars2.githubusercontent.com/u/5248122?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ailzhang", "html_url": "https://github.com/ailzhang", "followers_url": "https://api.github.com/users/ailzhang/followers", "following_url": "https://api.github.com/users/ailzhang/following{/other_user}", "gists_url": "https://api.github.com/users/ailzhang/gists{/gist_id}", "starred_url": "https://api.github.com/users/ailzhang/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ailzhang/subscriptions", "organizations_url": "https://api.github.com/users/ailzhang/orgs", "repos_url": "https://api.github.com/users/ailzhang/repos", "events_url": "https://api.github.com/users/ailzhang/events{/privacy}", "received_events_url": "https://api.github.com/users/ailzhang/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 3, "created_at": "2018-08-08T06:59:03Z", "updated_at": "2018-08-29T17:56:38Z", "closed_at": "2018-08-29T17:56:38Z", "author_association": "NONE", "body_html": "<h2>Issue description</h2>\n<p>The eigenvectors produced by <code>torch.symeig()</code> are not always orthonormal.</p>\n<h2>Code example</h2>\n<div class=\"highlight highlight-source-python\"><pre><span class=\"pl-k\">import</span> torch\n\n<span class=\"pl-c\"><span class=\"pl-c\">#</span> Create a random symmetric matrix</span>\np, q <span class=\"pl-k\">=</span> <span class=\"pl-c1\">10</span>, <span class=\"pl-c1\">3</span>\ntorch.manual_seed(<span class=\"pl-c1\">0</span>)\nin_tensor <span class=\"pl-k\">=</span> torch.rand(p, q, <span class=\"pl-v\">dtype</span><span class=\"pl-k\">=</span>torch.float64, <span class=\"pl-v\">requires_grad</span><span class=\"pl-k\">=</span><span class=\"pl-c1\">True</span>).cuda()\ncov_in <span class=\"pl-k\">=</span> torch.mm(in_tensor.t(), in_tensor)\n\n_, eig_vecs <span class=\"pl-k\">=</span> torch.symeig(cov_in)\n\n<span class=\"pl-c1\">print</span>(eig_vecs)\n<span class=\"pl-c1\">print</span>(torch.mm(eig_vecs, eig_vecs.t()))\n<span class=\"pl-c1\">print</span>(torch.mm(eig_vecs.t(), eig_vecs))\n<span class=\"pl-c1\">print</span>(eig_vecs.norm(<span class=\"pl-v\">dim</span><span class=\"pl-k\">=</span><span class=\"pl-c1\">0</span>))\n<span class=\"pl-c1\">print</span>(eig_vecs.norm(<span class=\"pl-v\">dim</span><span class=\"pl-k\">=</span><span class=\"pl-c1\">1</span>))</pre></div>\n<p>Here is the result:</p>\n<pre lang=\"plain\"><code>tensor([[ 0.3573,  0.0288,  0.4334],\n        [ 3.1050,  6.5767, -3.2518],\n        [ 2.3730,  2.2232,  2.1961]],\n       device='cuda:0', dtype=torch.float64, grad_fn=&lt;SymeigBackward&gt;)\ntensor([[ 0.3164, -0.1103,  1.8639],\n        [-0.1103, 63.4675, 14.8483],\n        [ 1.8639, 14.8483, 15.3969]],\n       device='cuda:0', dtype=torch.float64, grad_fn=&lt;MmBackward&gt;)\ntensor([[ 15.3995,  25.7064,  -4.7303],\n        [ 25.7064,  48.1965, -16.4908],\n        [ -4.7303, -16.4908,  15.5848]],\n       device='cuda:0', dtype=torch.float64, grad_fn=&lt;MmBackward&gt;)\ntensor([3.9242, 6.9424, 3.9478],\n       device='cuda:0', dtype=torch.float64, grad_fn=&lt;NormBackward1&gt;)\ntensor([0.5625, 7.9667, 3.9239],\n       device='cuda:0', dtype=torch.float64, grad_fn=&lt;NormBackward1&gt;)\n</code></pre>\n<h2>System Info</h2>\n<p>PyTorch version: 0.4.1<br>\nIs debug build: No<br>\nCUDA used to build PyTorch: 9.0.176</p>\n<p>OS: Ubuntu 14.04.5 LTS<br>\nGCC version: (Ubuntu 4.8.4-2ubuntu1~14.04.4) 4.8.4<br>\nCMake version: version 3.11.1</p>\n<p>Python version: 2.7<br>\nIs CUDA available: Yes<br>\nCUDA runtime version: 8.0.61<br>\nGPU models and configuration:<br>\nGPU 0: Tesla K80</p>\n<p>Nvidia driver version: 384.111<br>\ncuDNN version: Probably one of the following:<br>\n/usr/local/cuda-7.5/lib64/libcudnn.so.5.1.3<br>\n/usr/local/cuda-7.5/lib64/libcudnn_static.a</p>\n<p>Versions of relevant libraries:<br>\n[pip] numpy (1.13.3)<br>\n[conda] Could not collect</p>", "body_text": "Issue description\nThe eigenvectors produced by torch.symeig() are not always orthonormal.\nCode example\nimport torch\n\n# Create a random symmetric matrix\np, q = 10, 3\ntorch.manual_seed(0)\nin_tensor = torch.rand(p, q, dtype=torch.float64, requires_grad=True).cuda()\ncov_in = torch.mm(in_tensor.t(), in_tensor)\n\n_, eig_vecs = torch.symeig(cov_in)\n\nprint(eig_vecs)\nprint(torch.mm(eig_vecs, eig_vecs.t()))\nprint(torch.mm(eig_vecs.t(), eig_vecs))\nprint(eig_vecs.norm(dim=0))\nprint(eig_vecs.norm(dim=1))\nHere is the result:\ntensor([[ 0.3573,  0.0288,  0.4334],\n        [ 3.1050,  6.5767, -3.2518],\n        [ 2.3730,  2.2232,  2.1961]],\n       device='cuda:0', dtype=torch.float64, grad_fn=<SymeigBackward>)\ntensor([[ 0.3164, -0.1103,  1.8639],\n        [-0.1103, 63.4675, 14.8483],\n        [ 1.8639, 14.8483, 15.3969]],\n       device='cuda:0', dtype=torch.float64, grad_fn=<MmBackward>)\ntensor([[ 15.3995,  25.7064,  -4.7303],\n        [ 25.7064,  48.1965, -16.4908],\n        [ -4.7303, -16.4908,  15.5848]],\n       device='cuda:0', dtype=torch.float64, grad_fn=<MmBackward>)\ntensor([3.9242, 6.9424, 3.9478],\n       device='cuda:0', dtype=torch.float64, grad_fn=<NormBackward1>)\ntensor([0.5625, 7.9667, 3.9239],\n       device='cuda:0', dtype=torch.float64, grad_fn=<NormBackward1>)\n\nSystem Info\nPyTorch version: 0.4.1\nIs debug build: No\nCUDA used to build PyTorch: 9.0.176\nOS: Ubuntu 14.04.5 LTS\nGCC version: (Ubuntu 4.8.4-2ubuntu1~14.04.4) 4.8.4\nCMake version: version 3.11.1\nPython version: 2.7\nIs CUDA available: Yes\nCUDA runtime version: 8.0.61\nGPU models and configuration:\nGPU 0: Tesla K80\nNvidia driver version: 384.111\ncuDNN version: Probably one of the following:\n/usr/local/cuda-7.5/lib64/libcudnn.so.5.1.3\n/usr/local/cuda-7.5/lib64/libcudnn_static.a\nVersions of relevant libraries:\n[pip] numpy (1.13.3)\n[conda] Could not collect", "body": "## Issue description\r\nThe eigenvectors produced by `torch.symeig()` are not always orthonormal.\r\n\r\n## Code example\r\n```python\r\nimport torch\r\n\r\n# Create a random symmetric matrix\r\np, q = 10, 3\r\ntorch.manual_seed(0)\r\nin_tensor = torch.rand(p, q, dtype=torch.float64, requires_grad=True).cuda()\r\ncov_in = torch.mm(in_tensor.t(), in_tensor)\r\n\r\n_, eig_vecs = torch.symeig(cov_in)\r\n\r\nprint(eig_vecs)\r\nprint(torch.mm(eig_vecs, eig_vecs.t()))\r\nprint(torch.mm(eig_vecs.t(), eig_vecs))\r\nprint(eig_vecs.norm(dim=0))\r\nprint(eig_vecs.norm(dim=1))\r\n```\r\n\r\nHere is the result:\r\n```plain\r\ntensor([[ 0.3573,  0.0288,  0.4334],\r\n        [ 3.1050,  6.5767, -3.2518],\r\n        [ 2.3730,  2.2232,  2.1961]],\r\n       device='cuda:0', dtype=torch.float64, grad_fn=<SymeigBackward>)\r\ntensor([[ 0.3164, -0.1103,  1.8639],\r\n        [-0.1103, 63.4675, 14.8483],\r\n        [ 1.8639, 14.8483, 15.3969]],\r\n       device='cuda:0', dtype=torch.float64, grad_fn=<MmBackward>)\r\ntensor([[ 15.3995,  25.7064,  -4.7303],\r\n        [ 25.7064,  48.1965, -16.4908],\r\n        [ -4.7303, -16.4908,  15.5848]],\r\n       device='cuda:0', dtype=torch.float64, grad_fn=<MmBackward>)\r\ntensor([3.9242, 6.9424, 3.9478],\r\n       device='cuda:0', dtype=torch.float64, grad_fn=<NormBackward1>)\r\ntensor([0.5625, 7.9667, 3.9239],\r\n       device='cuda:0', dtype=torch.float64, grad_fn=<NormBackward1>)\r\n```\r\n\r\n## System Info\r\nPyTorch version: 0.4.1\r\nIs debug build: No\r\nCUDA used to build PyTorch: 9.0.176\r\n\r\nOS: Ubuntu 14.04.5 LTS\r\nGCC version: (Ubuntu 4.8.4-2ubuntu1~14.04.4) 4.8.4\r\nCMake version: version 3.11.1\r\n\r\nPython version: 2.7\r\nIs CUDA available: Yes\r\nCUDA runtime version: 8.0.61\r\nGPU models and configuration:\r\nGPU 0: Tesla K80\r\n\r\nNvidia driver version: 384.111\r\ncuDNN version: Probably one of the following:\r\n/usr/local/cuda-7.5/lib64/libcudnn.so.5.1.3\r\n/usr/local/cuda-7.5/lib64/libcudnn_static.a\r\n\r\nVersions of relevant libraries:\r\n[pip] numpy (1.13.3)\r\n[conda] Could not collect"}