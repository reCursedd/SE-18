{"url": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/177906757", "pull_request_review_id": 107870473, "id": 177906757, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE3NzkwNjc1Nw==", "diff_hunk": "@@ -534,12 +560,26 @@ def load_state_dict(self, state_dict, strict=True):\n                                        'whose dimensions in the checkpoint are {}.'\n                                        .format(name, own_state[name].size(), param.size()))\n             elif strict:\n-                raise KeyError('unexpected key \"{}\" in state_dict'\n-                               .format(name))\n+                unexpected.append(name)\n         if strict:\n             missing = set(own_state.keys()) - set(state_dict.keys())\n+            # pass the mismatch info to submodules so that they have a chance to\n+            # raise a custom class-specific error\n+            for name in unexpected:\n+                submodule_key_mismatch(name, False)\n+            for name in missing:\n+                submodule_key_mismatch(name, True)\n+            error = ''\n+            if len(unexpected) > 0:\n+                error += ('Unexpected key(s) in state_dict: {}. '.format(\n+                    ', '.join('\"{}\"'.format(k) for k in unexpected)))\n             if len(missing) > 0:\n-                raise KeyError('missing keys in state_dict: \"{}\"'.format(missing))\n+                error += ('Missing key(s) in state_dict: {}. '.format(\n+                    ', '.join('\"{}\"'.format(k) for k in unexpected)))\n+            if len(error) > 0:\n+                raise KeyError(error + 'If this is expected, set strict=False '", "path": "torch/nn/modules/module.py", "position": null, "original_position": 64, "commit_id": "67ff9dfaf1d38a3eb81a22e80cb1583bc819a546", "original_commit_id": "0729e6b43fb1b807bca068273dbd58b0949be8d6", "user": {"login": "apaszke", "id": 4583066, "node_id": "MDQ6VXNlcjQ1ODMwNjY=", "avatar_url": "https://avatars3.githubusercontent.com/u/4583066?v=4", "gravatar_id": "", "url": "https://api.github.com/users/apaszke", "html_url": "https://github.com/apaszke", "followers_url": "https://api.github.com/users/apaszke/followers", "following_url": "https://api.github.com/users/apaszke/following{/other_user}", "gists_url": "https://api.github.com/users/apaszke/gists{/gist_id}", "starred_url": "https://api.github.com/users/apaszke/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/apaszke/subscriptions", "organizations_url": "https://api.github.com/users/apaszke/orgs", "repos_url": "https://api.github.com/users/apaszke/repos", "events_url": "https://api.github.com/users/apaszke/events{/privacy}", "received_events_url": "https://api.github.com/users/apaszke/received_events", "type": "User", "site_admin": false}, "body": "Srsly, we should avoid recommending `strict=False`. It's better to fix the dicts explicitly", "created_at": "2018-03-28T22:16:49Z", "updated_at": "2018-11-23T15:41:15Z", "html_url": "https://github.com/pytorch/pytorch/pull/6086#discussion_r177906757", "pull_request_url": "https://api.github.com/repos/pytorch/pytorch/pulls/6086", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/177906757"}, "html": {"href": "https://github.com/pytorch/pytorch/pull/6086#discussion_r177906757"}, "pull_request": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/6086"}}, "body_html": "<p>Srsly, we should avoid recommending <code>strict=False</code>. It's better to fix the dicts explicitly</p>", "body_text": "Srsly, we should avoid recommending strict=False. It's better to fix the dicts explicitly"}