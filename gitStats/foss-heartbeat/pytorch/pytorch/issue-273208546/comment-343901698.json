{"url": "https://api.github.com/repos/pytorch/pytorch/issues/comments/343901698", "html_url": "https://github.com/pytorch/pytorch/issues/3653#issuecomment-343901698", "issue_url": "https://api.github.com/repos/pytorch/pytorch/issues/3653", "id": 343901698, "node_id": "MDEyOklzc3VlQ29tbWVudDM0MzkwMTY5OA==", "user": {"login": "apaszke", "id": 4583066, "node_id": "MDQ6VXNlcjQ1ODMwNjY=", "avatar_url": "https://avatars3.githubusercontent.com/u/4583066?v=4", "gravatar_id": "", "url": "https://api.github.com/users/apaszke", "html_url": "https://github.com/apaszke", "followers_url": "https://api.github.com/users/apaszke/followers", "following_url": "https://api.github.com/users/apaszke/following{/other_user}", "gists_url": "https://api.github.com/users/apaszke/gists{/gist_id}", "starred_url": "https://api.github.com/users/apaszke/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/apaszke/subscriptions", "organizations_url": "https://api.github.com/users/apaszke/orgs", "repos_url": "https://api.github.com/users/apaszke/repos", "events_url": "https://api.github.com/users/apaszke/events{/privacy}", "received_events_url": "https://api.github.com/users/apaszke/received_events", "type": "User", "site_admin": false}, "created_at": "2017-11-13T12:15:49Z", "updated_at": "2017-11-13T12:15:49Z", "author_association": "MEMBER", "body_html": "<p>I'm not sure if I understand, can't you just call <code>contiguous()</code> inside your function (this doesn't change the interface), and only then flatten the leading dimensions? This will be a no-op if user gave you a properly transposed tensor, and will fix the problem otherwise</p>", "body_text": "I'm not sure if I understand, can't you just call contiguous() inside your function (this doesn't change the interface), and only then flatten the leading dimensions? This will be a no-op if user gave you a properly transposed tensor, and will fix the problem otherwise", "body": "I'm not sure if I understand, can't you just call `contiguous()` inside your function (this doesn't change the interface), and only then flatten the leading dimensions? This will be a no-op if user gave you a properly transposed tensor, and will fix the problem otherwise"}