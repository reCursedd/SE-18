{"url": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/159519647", "pull_request_review_id": 86481795, "id": 159519647, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE1OTUxOTY0Nw==", "diff_hunk": "@@ -854,6 +856,22 @@ def test_cuda(self, test_case):\n                 for cpu_d_p, gpu_d_p in zip(cpu_param[1], gpu_param[1]):\n                     test_case.assertEqual(cpu_d_p, gpu_d_p, 2e-4)\n \n+            # Run double-backwards on CPU and GPU and compare results\n+            # TODO: BatchNorm double-backwards is currently broken, see\n+            # #4422; remove this when it is fixed.\n+            if self.check_gradgrad and not self.get_name().startswith('test_BatchNorm'):\n+                for i in range(5):\n+                    cpu_output_t = cpu_output.data if isinstance(cpu_output, Variable) else cpu_output\n+                    cpu_gradOutput = Variable(cpu_output_t.clone().bernoulli_(), requires_grad=True)\n+                    gpu_gradOutput = Variable(cpu_gradOutput.type('torch.cuda.FloatTensor').data, requires_grad=True)\n+                    cpu_gradInput = test_case._backward(cpu_module, cpu_input, cpu_output, cpu_gradOutput, create_graph=True)\n+                    gpu_gradInput = test_case._backward(gpu_module, gpu_input, gpu_output, gpu_gradOutput, create_graph=True)\n+                    cpu_input.grad.sum().backward(retain_graph=True)", "path": "test/common_nn.py", "position": null, "original_position": 30, "commit_id": "68f722716e809f358ee758bfce46249a1200ced1", "original_commit_id": "3514b4969e5a5cb5373846c99320d494037091fa", "user": {"login": "colesbury", "id": 655866, "node_id": "MDQ6VXNlcjY1NTg2Ng==", "avatar_url": "https://avatars1.githubusercontent.com/u/655866?v=4", "gravatar_id": "", "url": "https://api.github.com/users/colesbury", "html_url": "https://github.com/colesbury", "followers_url": "https://api.github.com/users/colesbury/followers", "following_url": "https://api.github.com/users/colesbury/following{/other_user}", "gists_url": "https://api.github.com/users/colesbury/gists{/gist_id}", "starred_url": "https://api.github.com/users/colesbury/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/colesbury/subscriptions", "organizations_url": "https://api.github.com/users/colesbury/orgs", "repos_url": "https://api.github.com/users/colesbury/repos", "events_url": "https://api.github.com/users/colesbury/events{/privacy}", "received_events_url": "https://api.github.com/users/colesbury/received_events", "type": "User", "site_admin": false}, "body": "I think this should use `torch.autograd.grad` and not accumulate back into the parameter gradients.\r\n  ", "created_at": "2018-01-03T20:27:17Z", "updated_at": "2018-11-23T15:37:48Z", "html_url": "https://github.com/pytorch/pytorch/pull/4460#discussion_r159519647", "pull_request_url": "https://api.github.com/repos/pytorch/pytorch/pulls/4460", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/159519647"}, "html": {"href": "https://github.com/pytorch/pytorch/pull/4460#discussion_r159519647"}, "pull_request": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/4460"}}, "body_html": "<p>I think this should use <code>torch.autograd.grad</code> and not accumulate back into the parameter gradients.</p>", "body_text": "I think this should use torch.autograd.grad and not accumulate back into the parameter gradients."}