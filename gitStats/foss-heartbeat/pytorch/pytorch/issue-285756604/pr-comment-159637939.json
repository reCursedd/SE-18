{"url": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/159637939", "pull_request_review_id": 86616433, "id": 159637939, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE1OTYzNzkzOQ==", "diff_hunk": "@@ -854,6 +856,22 @@ def test_cuda(self, test_case):\n                 for cpu_d_p, gpu_d_p in zip(cpu_param[1], gpu_param[1]):\n                     test_case.assertEqual(cpu_d_p, gpu_d_p, 2e-4)\n \n+            # Run double-backwards on CPU and GPU and compare results\n+            # TODO: BatchNorm double-backwards is currently broken, see\n+            # #4422; remove this when it is fixed.\n+            if self.check_gradgrad and not self.get_name().startswith('test_BatchNorm'):\n+                for i in range(5):\n+                    cpu_output_t = cpu_output.data if isinstance(cpu_output, Variable) else cpu_output\n+                    cpu_gradOutput = Variable(cpu_output_t.clone().bernoulli_(), requires_grad=True)", "path": "test/common_nn.py", "position": null, "original_position": 26, "commit_id": "68f722716e809f358ee758bfce46249a1200ced1", "original_commit_id": "3514b4969e5a5cb5373846c99320d494037091fa", "user": {"login": "apaszke", "id": 4583066, "node_id": "MDQ6VXNlcjQ1ODMwNjY=", "avatar_url": "https://avatars3.githubusercontent.com/u/4583066?v=4", "gravatar_id": "", "url": "https://api.github.com/users/apaszke", "html_url": "https://github.com/apaszke", "followers_url": "https://api.github.com/users/apaszke/followers", "following_url": "https://api.github.com/users/apaszke/following{/other_user}", "gists_url": "https://api.github.com/users/apaszke/gists{/gist_id}", "starred_url": "https://api.github.com/users/apaszke/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/apaszke/subscriptions", "organizations_url": "https://api.github.com/users/apaszke/orgs", "repos_url": "https://api.github.com/users/apaszke/repos", "events_url": "https://api.github.com/users/apaszke/events{/privacy}", "received_events_url": "https://api.github.com/users/apaszke/received_events", "type": "User", "site_admin": false}, "body": "That should actually be pretty easy - do the `gradgradcheck` trick. Write a function that takes another function and compares outputs and grads, then pass `torch.autograd.grad(module(x), x)` as the callable to test double backward.", "created_at": "2018-01-04T12:06:53Z", "updated_at": "2018-11-23T15:37:49Z", "html_url": "https://github.com/pytorch/pytorch/pull/4460#discussion_r159637939", "pull_request_url": "https://api.github.com/repos/pytorch/pytorch/pulls/4460", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/159637939"}, "html": {"href": "https://github.com/pytorch/pytorch/pull/4460#discussion_r159637939"}, "pull_request": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/4460"}}, "body_html": "<p>That should actually be pretty easy - do the <code>gradgradcheck</code> trick. Write a function that takes another function and compares outputs and grads, then pass <code>torch.autograd.grad(module(x), x)</code> as the callable to test double backward.</p>", "body_text": "That should actually be pretty easy - do the gradgradcheck trick. Write a function that takes another function and compares outputs and grads, then pass torch.autograd.grad(module(x), x) as the callable to test double backward.", "in_reply_to_id": 159519296}