{"url": "https://api.github.com/repos/pytorch/pytorch/issues/comments/432684501", "html_url": "https://github.com/pytorch/pytorch/pull/13019#issuecomment-432684501", "issue_url": "https://api.github.com/repos/pytorch/pytorch/issues/13019", "id": 432684501, "node_id": "MDEyOklzc3VlQ29tbWVudDQzMjY4NDUwMQ==", "user": {"login": "ezyang", "id": 13564, "node_id": "MDQ6VXNlcjEzNTY0", "avatar_url": "https://avatars0.githubusercontent.com/u/13564?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ezyang", "html_url": "https://github.com/ezyang", "followers_url": "https://api.github.com/users/ezyang/followers", "following_url": "https://api.github.com/users/ezyang/following{/other_user}", "gists_url": "https://api.github.com/users/ezyang/gists{/gist_id}", "starred_url": "https://api.github.com/users/ezyang/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ezyang/subscriptions", "organizations_url": "https://api.github.com/users/ezyang/orgs", "repos_url": "https://api.github.com/users/ezyang/repos", "events_url": "https://api.github.com/users/ezyang/events{/privacy}", "received_events_url": "https://api.github.com/users/ezyang/received_events", "type": "User", "site_admin": false}, "created_at": "2018-10-24T14:37:56Z", "updated_at": "2018-10-24T14:37:56Z", "author_association": "CONTRIBUTOR", "body_html": "<p><a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=5652049\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/zou3519\">@zou3519</a> It's probably because in our API we generally return <code>int64_t</code> even if a smaller type could make sense. Might not be unreasonable to narrow this one too.</p>", "body_text": "@zou3519 It's probably because in our API we generally return int64_t even if a smaller type could make sense. Might not be unreasonable to narrow this one too.", "body": "@zou3519 It's probably because in our API we generally return `int64_t` even if a smaller type could make sense. Might not be unreasonable to narrow this one too."}