{"url": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/215398785", "pull_request_review_id": 152653775, "id": 215398785, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIxNTM5ODc4NQ==", "diff_hunk": "@@ -143,23 +125,23 @@ struct AT_API SparseTensorImpl : public TensorImpl {\n       indices_.resize_(indices_size);\n     }\n \n-    size_ = size.vec();\n+    set_sizes(sizes.vec());\n     sparseDims_ = sparseDims;\n     denseDims_ = denseDims;\n     refresh_numel();\n   }\n \n   // NOTE: this function will resize the sparse tensor and also set `indices` and `values` to empty.\n-  void resize_and_clear_(int64_t sparseDims, int64_t denseDims, IntList size) {\n-    AT_CHECK(sparseDims + denseDims == size.size(), \"number of dimensions must be sparseDims (\", sparseDims, \") + denseDims (\", denseDims, \"), but got \", size.size());\n+  void resize_and_clear_(int64_t sparseDims, int64_t denseDims, IntList sizes) {\n+    AT_CHECK(sparseDims + denseDims == sizes.size(), \"number of dimensions must be sparseDims (\", sparseDims, \") + denseDims (\", denseDims, \"), but got \", sizes.size());\n \n-    size_ = size.vec();\n+    set_sizes(sizes.vec());\n     sparseDims_ = sparseDims;\n     denseDims_ = denseDims;\n \n     auto empty_indices = indices().type().tensor({sparseDims, 0});\n     std::vector<int64_t> values_size = {0};\n-    auto dense_size = sizes().slice(sparseDims);\n+    auto dense_size = TensorImpl::sizes().slice(sparseDims);", "path": "aten/src/ATen/SparseTensorImpl.h", "position": null, "original_position": 113, "commit_id": "0fbe47284a4448e6bfcd90f67ba50df616e939f2", "original_commit_id": "2846dd49911aed9b5f34d0993adce60e1cd97c50", "user": {"login": "gchanan", "id": 3768583, "node_id": "MDQ6VXNlcjM3Njg1ODM=", "avatar_url": "https://avatars2.githubusercontent.com/u/3768583?v=4", "gravatar_id": "", "url": "https://api.github.com/users/gchanan", "html_url": "https://github.com/gchanan", "followers_url": "https://api.github.com/users/gchanan/followers", "following_url": "https://api.github.com/users/gchanan/following{/other_user}", "gists_url": "https://api.github.com/users/gchanan/gists{/gist_id}", "starred_url": "https://api.github.com/users/gchanan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/gchanan/subscriptions", "organizations_url": "https://api.github.com/users/gchanan/orgs", "repos_url": "https://api.github.com/users/gchanan/repos", "events_url": "https://api.github.com/users/gchanan/events{/privacy}", "received_events_url": "https://api.github.com/users/gchanan/received_events", "type": "User", "site_admin": false}, "body": "here too.", "created_at": "2018-09-05T19:33:00Z", "updated_at": "2018-11-23T15:50:37Z", "html_url": "https://github.com/pytorch/pytorch/pull/11259#discussion_r215398785", "pull_request_url": "https://api.github.com/repos/pytorch/pytorch/pulls/11259", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/215398785"}, "html": {"href": "https://github.com/pytorch/pytorch/pull/11259#discussion_r215398785"}, "pull_request": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/11259"}}, "body_html": "<p>here too.</p>", "body_text": "here too."}