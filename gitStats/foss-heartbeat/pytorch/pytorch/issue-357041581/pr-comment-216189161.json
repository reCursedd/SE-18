{"url": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/216189161", "pull_request_review_id": 153614596, "id": 216189161, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIxNjE4OTE2MQ==", "diff_hunk": "@@ -185,22 +215,31 @@ struct AT_API TensorImpl : public c10::intrusive_ptr_target {\n     return n;\n   }\n   bool compute_contiguous() const;\n-\n- protected:\n   void refresh_numel() {\n     numel_ = compute_numel();\n   }\n   void refresh_contiguous() {\n     is_contiguous_ = compute_contiguous();\n   }\n+\n+ protected:\n   TensorTypeId type_id_;\n   // INVARIANT: When storage is non-null, this scalar type must\n   // agree with the scalar type in storage\n   ScalarType scalar_type_;\n   bool is_variable_ = false;\n   bool is_wrapped_number_ = false;\n+  bool has_storage_ = false;\n+  bool has_strides_ = false;\n+  bool support_resize_by_maybe_zero_dim_ = false;", "path": "aten/src/ATen/TensorImpl.h", "position": null, "original_position": 135, "commit_id": "0fbe47284a4448e6bfcd90f67ba50df616e939f2", "original_commit_id": "763cb08de1455984d6d2eaf8271dee74a314098f", "user": {"login": "ezyang", "id": 13564, "node_id": "MDQ6VXNlcjEzNTY0", "avatar_url": "https://avatars0.githubusercontent.com/u/13564?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ezyang", "html_url": "https://github.com/ezyang", "followers_url": "https://api.github.com/users/ezyang/followers", "following_url": "https://api.github.com/users/ezyang/following{/other_user}", "gists_url": "https://api.github.com/users/ezyang/gists{/gist_id}", "starred_url": "https://api.github.com/users/ezyang/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ezyang/subscriptions", "organizations_url": "https://api.github.com/users/ezyang/orgs", "repos_url": "https://api.github.com/users/ezyang/repos", "events_url": "https://api.github.com/users/ezyang/events{/privacy}", "received_events_url": "https://api.github.com/users/ezyang/received_events", "type": "User", "site_admin": false}, "body": "`has_storage_` and `has_strides_` are self explanatory, but `support_resize_by_maybe_zero_dim_` is not; worth a comment saying what it is about.", "created_at": "2018-09-10T03:16:22Z", "updated_at": "2018-11-23T15:50:51Z", "html_url": "https://github.com/pytorch/pytorch/pull/11259#discussion_r216189161", "pull_request_url": "https://api.github.com/repos/pytorch/pytorch/pulls/11259", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/216189161"}, "html": {"href": "https://github.com/pytorch/pytorch/pull/11259#discussion_r216189161"}, "pull_request": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/11259"}}, "body_html": "<p><code>has_storage_</code> and <code>has_strides_</code> are self explanatory, but <code>support_resize_by_maybe_zero_dim_</code> is not; worth a comment saying what it is about.</p>", "body_text": "has_storage_ and has_strides_ are self explanatory, but support_resize_by_maybe_zero_dim_ is not; worth a comment saying what it is about."}