{"url": "https://api.github.com/repos/pytorch/pytorch/issues/comments/404242259", "html_url": "https://github.com/pytorch/pytorch/issues/9181#issuecomment-404242259", "issue_url": "https://api.github.com/repos/pytorch/pytorch/issues/9181", "id": 404242259, "node_id": "MDEyOklzc3VlQ29tbWVudDQwNDI0MjI1OQ==", "user": {"login": "pjh5", "id": 6456020, "node_id": "MDQ6VXNlcjY0NTYwMjA=", "avatar_url": "https://avatars1.githubusercontent.com/u/6456020?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pjh5", "html_url": "https://github.com/pjh5", "followers_url": "https://api.github.com/users/pjh5/followers", "following_url": "https://api.github.com/users/pjh5/following{/other_user}", "gists_url": "https://api.github.com/users/pjh5/gists{/gist_id}", "starred_url": "https://api.github.com/users/pjh5/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pjh5/subscriptions", "organizations_url": "https://api.github.com/users/pjh5/orgs", "repos_url": "https://api.github.com/users/pjh5/repos", "events_url": "https://api.github.com/users/pjh5/events{/privacy}", "received_events_url": "https://api.github.com/users/pjh5/received_events", "type": "User", "site_admin": false}, "created_at": "2018-07-11T17:04:17Z", "updated_at": "2018-07-11T17:04:17Z", "author_association": "CONTRIBUTOR", "body_html": "<p>There's a few confusions here.</p>\n<ul>\n<li>virtualenv only creates Python virtual environments. The \"Anaconda Python or virtualenvs\" section in <a href=\"https://caffe2.ai/docs/faq.html#null__how-do-python-installations-work\" rel=\"nofollow\">https://caffe2.ai/docs/faq.html#null__how-do-python-installations-work</a> explains what a Python virtual env is. Python virtual envs allow you to have separate Python installations that each have their own Python packages that don't affect each other. pip, conda, and setuptools (setup.py) all affect the current Python virtualenv. apt-get is not a Python tool; it is an Ubuntu tool. apt-get installs packages of all types (not just Python packages) into the system install directories. So apt-get is separate from Python virtualenvs. Switching Python virtualenvs does not affect what apt-get-installed packages are visible or not. If you apt-get install cmake, for example, then cmake will be installed into your system, and it will be visible anywhere in your system, no matter what Python virtualenv is activated.</li>\n</ul>\n<p>Furthermore, virtualenvs work by affecting your environment variables. It does not matter what directory you are in. It does not matter which directory you put your virtualenv in. You should probably not clone Pytorch into your virtualenv. You should actually never manually create or edit files in your virtualenv directories. They are standalone Python installations, and you should only interact with them through the Python tools like pip, conda, and setuptools.</p>\n<ul>\n<li>\n<p>setup.py, setup_caffe2.py, and <code>cmake ..; make install</code> are three separate install paths that should not be mixed. You should only do one of them. Do not call cmake and then call setup.py. Either call cmake and make yourself, or only call <code>FULL_CAFFE2=1 python setup.py install</code>, or only call <code>python setup_caffe2.py install</code></p>\n</li>\n<li>\n<p>setup.py can install both Pytorch and Caffe2; it is the future of Pytorch/Caffe2 installation. setup_caffe2.py only installs the Caffe2 part.</p>\n</li>\n<li>\n<p>You should not need to set PYTHONPATH or LD_LIBRARY_PATH</p>\n</li>\n</ul>\n<p>Now for your actual error. Caffe2 supports several linear algebra backends (BLAS), including Eigen and MKL. Eigen is CUDA compatible, which means it can be used to make implementations for ops that use CUDA. If you use Eigen and CUDA together, then we define some new code and then call into Nvidia's compiler nvcc to compile it. You have a nvcc compatible for CUDA 9, but your Eigen is not compatible with CUDA 9, so it generates code that nvcc can not understand. You are using your system Eigen. Caffe2 ships with an Eigen in third_party that does not have this problem, so you should do one of the following:</p>\n<ul>\n<li>update your system Eigen to be compatible with CUDA 9</li>\n<li>use the Eigen in third_party (if you use setup.py and DO NOT run cmake first then this should work)</li>\n<li>don't use Eign, use MKL or something else instead</li>\n</ul>", "body_text": "There's a few confusions here.\n\nvirtualenv only creates Python virtual environments. The \"Anaconda Python or virtualenvs\" section in https://caffe2.ai/docs/faq.html#null__how-do-python-installations-work explains what a Python virtual env is. Python virtual envs allow you to have separate Python installations that each have their own Python packages that don't affect each other. pip, conda, and setuptools (setup.py) all affect the current Python virtualenv. apt-get is not a Python tool; it is an Ubuntu tool. apt-get installs packages of all types (not just Python packages) into the system install directories. So apt-get is separate from Python virtualenvs. Switching Python virtualenvs does not affect what apt-get-installed packages are visible or not. If you apt-get install cmake, for example, then cmake will be installed into your system, and it will be visible anywhere in your system, no matter what Python virtualenv is activated.\n\nFurthermore, virtualenvs work by affecting your environment variables. It does not matter what directory you are in. It does not matter which directory you put your virtualenv in. You should probably not clone Pytorch into your virtualenv. You should actually never manually create or edit files in your virtualenv directories. They are standalone Python installations, and you should only interact with them through the Python tools like pip, conda, and setuptools.\n\n\nsetup.py, setup_caffe2.py, and cmake ..; make install are three separate install paths that should not be mixed. You should only do one of them. Do not call cmake and then call setup.py. Either call cmake and make yourself, or only call FULL_CAFFE2=1 python setup.py install, or only call python setup_caffe2.py install\n\n\nsetup.py can install both Pytorch and Caffe2; it is the future of Pytorch/Caffe2 installation. setup_caffe2.py only installs the Caffe2 part.\n\n\nYou should not need to set PYTHONPATH or LD_LIBRARY_PATH\n\n\nNow for your actual error. Caffe2 supports several linear algebra backends (BLAS), including Eigen and MKL. Eigen is CUDA compatible, which means it can be used to make implementations for ops that use CUDA. If you use Eigen and CUDA together, then we define some new code and then call into Nvidia's compiler nvcc to compile it. You have a nvcc compatible for CUDA 9, but your Eigen is not compatible with CUDA 9, so it generates code that nvcc can not understand. You are using your system Eigen. Caffe2 ships with an Eigen in third_party that does not have this problem, so you should do one of the following:\n\nupdate your system Eigen to be compatible with CUDA 9\nuse the Eigen in third_party (if you use setup.py and DO NOT run cmake first then this should work)\ndon't use Eign, use MKL or something else instead", "body": "There's a few confusions here.\r\n\r\n- virtualenv only creates Python virtual environments. The \"Anaconda Python or virtualenvs\" section in https://caffe2.ai/docs/faq.html#null__how-do-python-installations-work explains what a Python virtual env is. Python virtual envs allow you to have separate Python installations that each have their own Python packages that don't affect each other. pip, conda, and setuptools (setup.py) all affect the current Python virtualenv. apt-get is not a Python tool; it is an Ubuntu tool. apt-get installs packages of all types (not just Python packages) into the system install directories. So apt-get is separate from Python virtualenvs. Switching Python virtualenvs does not affect what apt-get-installed packages are visible or not. If you apt-get install cmake, for example, then cmake will be installed into your system, and it will be visible anywhere in your system, no matter what Python virtualenv is activated. \r\n\r\nFurthermore, virtualenvs work by affecting your environment variables. It does not matter what directory you are in. It does not matter which directory you put your virtualenv in. You should probably not clone Pytorch into your virtualenv. You should actually never manually create or edit files in your virtualenv directories. They are standalone Python installations, and you should only interact with them through the Python tools like pip, conda, and setuptools.\r\n\r\n- setup.py, setup_caffe2.py, and `cmake ..; make install` are three separate install paths that should not be mixed. You should only do one of them. Do not call cmake and then call setup.py. Either call cmake and make yourself, or only call `FULL_CAFFE2=1 python setup.py install`, or only call `python setup_caffe2.py install`\r\n\r\n- setup.py can install both Pytorch and Caffe2; it is the future of Pytorch/Caffe2 installation. setup_caffe2.py only installs the Caffe2 part.\r\n\r\n- You should not need to set PYTHONPATH or LD_LIBRARY_PATH \r\n\r\nNow for your actual error. Caffe2 supports several linear algebra backends (BLAS), including Eigen and MKL. Eigen is CUDA compatible, which means it can be used to make implementations for ops that use CUDA. If you use Eigen and CUDA together, then we define some new code and then call into Nvidia's compiler nvcc to compile it. You have a nvcc compatible for CUDA 9, but your Eigen is not compatible with CUDA 9, so it generates code that nvcc can not understand. You are using your system Eigen. Caffe2 ships with an Eigen in third_party that does not have this problem, so you should do one of the following:\r\n- update your system Eigen to be compatible with CUDA 9\r\n- use the Eigen in third_party (if you use setup.py and DO NOT run cmake first then this should work)\r\n- don't use Eign, use MKL or something else instead"}