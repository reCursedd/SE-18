{"url": "https://api.github.com/repos/pytorch/pytorch/issues/comments/403857087", "html_url": "https://github.com/pytorch/pytorch/issues/9181#issuecomment-403857087", "issue_url": "https://api.github.com/repos/pytorch/pytorch/issues/9181", "id": 403857087, "node_id": "MDEyOklzc3VlQ29tbWVudDQwMzg1NzA4Nw==", "user": {"login": "Rahul-Venugopal", "id": 30955455, "node_id": "MDQ6VXNlcjMwOTU1NDU1", "avatar_url": "https://avatars1.githubusercontent.com/u/30955455?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Rahul-Venugopal", "html_url": "https://github.com/Rahul-Venugopal", "followers_url": "https://api.github.com/users/Rahul-Venugopal/followers", "following_url": "https://api.github.com/users/Rahul-Venugopal/following{/other_user}", "gists_url": "https://api.github.com/users/Rahul-Venugopal/gists{/gist_id}", "starred_url": "https://api.github.com/users/Rahul-Venugopal/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Rahul-Venugopal/subscriptions", "organizations_url": "https://api.github.com/users/Rahul-Venugopal/orgs", "repos_url": "https://api.github.com/users/Rahul-Venugopal/repos", "events_url": "https://api.github.com/users/Rahul-Venugopal/events{/privacy}", "received_events_url": "https://api.github.com/users/Rahul-Venugopal/received_events", "type": "User", "site_admin": false}, "created_at": "2018-07-10T15:07:38Z", "updated_at": "2018-07-10T15:07:38Z", "author_association": "NONE", "body_html": "<p>I have tried installing it without using a virtual environment and it works fine .<br>\nBut I am not able to use GPU. I have checked and CUDA and cuDNN is installed correctly.</p>\n<p>Output of my cmake is as follows</p>\n<p>rahul@rahul-ThinkPad-E470:~/pytorch/build$ cmake ..<br>\n-- Does not need to define long separately.<br>\n-- std::exception_ptr is supported.<br>\n-- NUMA is not available<br>\n-- Turning off deprecation warning due to glog.<br>\n-- Current compiler supports avx2 extention. Will build perfkernels.<br>\n-- Building using own protobuf under third_party per request.<br>\n-- Use custom protobuf build.<br>\n-- Caffe2 protobuf include directory: $&lt;BUILD_INTERFACE:/home/rahul/pytorch/third_party/protobuf/src&gt;$&lt;INSTALL_INTERFACE:include&gt;<br>\n-- The BLAS backend of choice:Eigen<br>\n-- Brace yourself, we are building NNPACK<br>\n-- Found PythonInterp: /usr/bin/python (found version \"2.7.12\")<br>\n-- Caffe2: Cannot find gflags automatically. Using legacy find.<br>\n-- Caffe2: Found gflags  (include: /usr/include, library: /usr/lib/x86_64-linux-gnu/libgflags.so)<br>\n-- OpenCV found (/usr/share/OpenCV)<br>\nCMake Warning at cmake/Dependencies.cmake:330 (find_package):<br>\nBy not providing \"FindEigen3.cmake\" in CMAKE_MODULE_PATH this project has<br>\nasked CMake to find a package configuration file provided by \"Eigen3\", but<br>\nCMake did not find one.</p>\n<p>Could not find a package configuration file provided by \"Eigen3\" with any<br>\nof the following names:</p>\n<pre><code>Eigen3Config.cmake\neigen3-config.cmake\n</code></pre>\n<p>Add the installation prefix of \"Eigen3\" to CMAKE_PREFIX_PATH or set<br>\n\"Eigen3_DIR\" to a directory containing one of the above files.  If \"Eigen3\"<br>\nprovides a separate development package or SDK, be sure it has been<br>\ninstalled.<br>\nCall Stack (most recent call first):<br>\nCMakeLists.txt:187 (include)</p>\n<p>-- Did not find system Eigen. Using third party subdirectory.<br>\n-- Found PythonInterp: /usr/bin/python (found suitable version \"2.7.12\", minimum required is \"2.7\")<br>\n-- NumPy ver. 1.11.0 found (include: /usr/lib/python2.7/dist-packages/numpy/core/include)<br>\n-- Could NOT find pybind11 (missing:  pybind11_INCLUDE_DIR)<br>\n-- Caffe2: CUDA detected: 9.2<br>\n-- Caffe2: CUDA nvcc is: /usr/local/cuda/bin/nvcc<br>\n-- Caffe2: CUDA toolkit directory: /usr/local/cuda<br>\n-- Caffe2: Header version is: 9.2<br>\n-- Found cuDNN: v7.1.4  (include: /usr/local/cuda/include, library: /usr/local/cuda/lib64/libcudnn.so)<br>\n-- Autodetected CUDA architecture(s): 5.0<br>\n-- Added CUDA NVCC flags for: -gencode;arch=compute_50,code=sm_50<br>\n-- Could NOT find NCCL (missing:  NCCL_INCLUDE_DIRS NCCL_LIBRARIES)<br>\n-- Could NOT find CUB (missing:  CUB_INCLUDE_DIR)<br>\n-- Could NOT find Gloo (missing:  Gloo_INCLUDE_DIR Gloo_LIBRARY)<br>\n-- CUDA detected: 9.2<br>\n-- Found libcuda: /usr/lib/x86_64-linux-gnu/libcuda.so<br>\n-- Found libnvrtc: /usr/lib/x86_64-linux-gnu/libnvrtc.so<br>\n-- Could NOT find NCCL (missing:  NCCL_INCLUDE_DIR NCCL_LIBRARY)<br>\nCMake Warning at third_party/gloo/cmake/Dependencies.cmake:62 (message):<br>\nNot compiling with NCCL support.  Suppress this warning with<br>\n-DUSE_NCCL=OFF.<br>\nCall Stack (most recent call first):<br>\nthird_party/gloo/CMakeLists.txt:56 (include)</p>\n<p>-- GCC 5.4.0: Adding gcc and gcc_s libs to link line<br>\n-- Include NCCL operators<br>\n-- Excluding ideep operators as we are not using ideep<br>\n-- Including image processing operators<br>\n-- Excluding video processing operators due to no opencv<br>\n-- Excluding mkl operators as we are not using mkl<br>\n-- MPI operators skipped due to no MPI support<br>\n-- Include Observer library<br>\n-- Using lib/python2.7/dist-packages as python relative installation path<br>\n-- Automatically generating missing <strong>init</strong>.py files.<br>\n-- A previous caffe2 cmake run already created the <strong>init</strong>.py files.<br>\nCMake Warning at CMakeLists.txt:353 (message):<br>\nGenerated cmake files are only fully tested if one builds with system glog,<br>\ngflags, and protobuf.  Other settings may generate files that are not well<br>\ntested.</p>\n<h2>--<br>\n-- ******** Summary ********<br>\n-- General:<br>\n--   CMake version         : 3.5.1<br>\n--   CMake command         : /usr/bin/cmake<br>\n--   Git version           : v0.1.11-9244-ge06abab<br>\n--   System                : Linux<br>\n--   C++ compiler          : /usr/bin/c++<br>\n--   C++ compiler version  : 5.4.0<br>\n--   BLAS                  : Eigen<br>\n--   CXX flags             :  -Wno-deprecated -fvisibility-inlines-hidden -DONNX_NAMESPACE=onnx_c2 -O2 -fPIC -Wno-narrowing -Wall -Wextra -Wno-missing-field-initializers -Wno-type-limits -Wno-array-bounds -Wno-unknown-pragmas -Wno-sign-compare -Wno-unused-parameter -Wno-unused-variable -Wno-unused-function -Wno-unused-result -Wno-strict-aliasing -Wno-error=deprecated-declarations<br>\n--   Build type            : Release<br>\n--   Compile definitions   :<br>\n--   CMAKE_PREFIX_PATH     :<br>\n--   CMAKE_INSTALL_PREFIX  : /usr/local</h2>\n<p>--   BUILD_CAFFE2          : ON<br>\n--   BUILD_ATEN            : OFF<br>\n--   BUILD_BINARY          : ON<br>\n--   BUILD_CUSTOM_PROTOBUF : ON<br>\n--     Link local protobuf : ON<br>\n--   BUILD_DOCS            : OFF<br>\n--   BUILD_PYTHON          : ON<br>\n--     Python version      : 2.7.12<br>\n--     Python executable   : /usr/bin/python<br>\n--     Python includes     : /usr/include/python2.7<br>\n--     Python site-packages: lib/python2.7/dist-packages<br>\n--   BUILD_SHARED_LIBS     : ON<br>\n--   BUILD_TEST            : OFF<br>\n--   USE_ASAN              : OFF<br>\n--   USE_ATEN              : OFF<br>\n--   USE_CUDA              : ON<br>\n--     CUDA static link    : OFF<br>\n--     USE_CUDNN           : ON<br>\n--     CUDA version        : 9.2<br>\n--     cuDNN version       : 7.1.4<br>\n--     CUDA root directory : /usr/local/cuda<br>\n--     CUDA library        : /usr/lib/x86_64-linux-gnu/libcuda.so<br>\n--     cudart library      : /usr/local/cuda/lib64/libcudart_static.a;-pthread;dl;/usr/lib/x86_64-linux-gnu/librt.so<br>\n--     cublas library      : /usr/local/cuda/lib64/libcublas.so;/usr/local/cuda/lib64/libcublas_device.a<br>\n--     cufft library       : /usr/local/cuda/lib64/libcufft.so<br>\n--     curand library      : /usr/local/cuda/lib64/libcurand.so<br>\n--     cuDNN library       : /usr/local/cuda/lib64/libcudnn.so<br>\n--     nvrtc               : /usr/lib/x86_64-linux-gnu/libnvrtc.so<br>\n--     CUDA include path   : /usr/local/cuda/include<br>\n--     NVCC executable     : /usr/local/cuda/bin/nvcc<br>\n--     CUDA host compiler  : /usr/bin/cc<br>\n--     USE_TENSORRT        : OFF<br>\n--   USE_ROCM              : OFF<br>\n--   USE_EIGEN_FOR_BLAS    : ON<br>\n--   USE_FFMPEG            : OFF<br>\n--   USE_GFLAGS            : ON<br>\n--   USE_GLOG              : OFF<br>\n--   USE_GLOO              : ON<br>\n--     USE_GLOO_IBVERBS    : OFF<br>\n--   USE_LEVELDB           : OFF<br>\n--   USE_LITE_PROTO        : OFF<br>\n--   USE_LMDB              : OFF<br>\n--   USE_METAL             : OFF<br>\n--   USE_MKL               :<br>\n--   USE_MOBILE_OPENGL     : OFF<br>\n--   USE_MPI               : OFF<br>\n--   USE_NCCL              : ON<br>\n--     USE_SYSTEM_NCCL     : OFF<br>\n--   USE_NERVANA_GPU       : OFF<br>\n--   USE_NNPACK            : ON<br>\n--   USE_OBSERVERS         : ON<br>\n--   USE_OPENCL            : OFF<br>\n--   USE_OPENCV            : ON<br>\n--     OpenCV version      : 2.4.9.1<br>\n--   USE_OPENMP            : OFF<br>\n--   USE_PROF              : OFF<br>\n--   USE_REDIS             : OFF<br>\n--   USE_ROCKSDB           : OFF<br>\n--   USE_ZMQ               : OFF<br>\n--   Public Dependencies  : Threads::Threads;gflags<br>\n--   Private Dependencies : nnpack;cpuinfo;opencv_core;opencv_highgui;opencv_imgproc;gloo;onnxifi_loader;gcc_s;gcc;dl<br>\n-- Configuring done<br>\n-- Generating done<br>\n-- Build files have been written to: /home/rahul/pytorch/build</p>\n<p>Thanks for any help</p>", "body_text": "I have tried installing it without using a virtual environment and it works fine .\nBut I am not able to use GPU. I have checked and CUDA and cuDNN is installed correctly.\nOutput of my cmake is as follows\nrahul@rahul-ThinkPad-E470:~/pytorch/build$ cmake ..\n-- Does not need to define long separately.\n-- std::exception_ptr is supported.\n-- NUMA is not available\n-- Turning off deprecation warning due to glog.\n-- Current compiler supports avx2 extention. Will build perfkernels.\n-- Building using own protobuf under third_party per request.\n-- Use custom protobuf build.\n-- Caffe2 protobuf include directory: $<BUILD_INTERFACE:/home/rahul/pytorch/third_party/protobuf/src>$<INSTALL_INTERFACE:include>\n-- The BLAS backend of choice:Eigen\n-- Brace yourself, we are building NNPACK\n-- Found PythonInterp: /usr/bin/python (found version \"2.7.12\")\n-- Caffe2: Cannot find gflags automatically. Using legacy find.\n-- Caffe2: Found gflags  (include: /usr/include, library: /usr/lib/x86_64-linux-gnu/libgflags.so)\n-- OpenCV found (/usr/share/OpenCV)\nCMake Warning at cmake/Dependencies.cmake:330 (find_package):\nBy not providing \"FindEigen3.cmake\" in CMAKE_MODULE_PATH this project has\nasked CMake to find a package configuration file provided by \"Eigen3\", but\nCMake did not find one.\nCould not find a package configuration file provided by \"Eigen3\" with any\nof the following names:\nEigen3Config.cmake\neigen3-config.cmake\n\nAdd the installation prefix of \"Eigen3\" to CMAKE_PREFIX_PATH or set\n\"Eigen3_DIR\" to a directory containing one of the above files.  If \"Eigen3\"\nprovides a separate development package or SDK, be sure it has been\ninstalled.\nCall Stack (most recent call first):\nCMakeLists.txt:187 (include)\n-- Did not find system Eigen. Using third party subdirectory.\n-- Found PythonInterp: /usr/bin/python (found suitable version \"2.7.12\", minimum required is \"2.7\")\n-- NumPy ver. 1.11.0 found (include: /usr/lib/python2.7/dist-packages/numpy/core/include)\n-- Could NOT find pybind11 (missing:  pybind11_INCLUDE_DIR)\n-- Caffe2: CUDA detected: 9.2\n-- Caffe2: CUDA nvcc is: /usr/local/cuda/bin/nvcc\n-- Caffe2: CUDA toolkit directory: /usr/local/cuda\n-- Caffe2: Header version is: 9.2\n-- Found cuDNN: v7.1.4  (include: /usr/local/cuda/include, library: /usr/local/cuda/lib64/libcudnn.so)\n-- Autodetected CUDA architecture(s): 5.0\n-- Added CUDA NVCC flags for: -gencode;arch=compute_50,code=sm_50\n-- Could NOT find NCCL (missing:  NCCL_INCLUDE_DIRS NCCL_LIBRARIES)\n-- Could NOT find CUB (missing:  CUB_INCLUDE_DIR)\n-- Could NOT find Gloo (missing:  Gloo_INCLUDE_DIR Gloo_LIBRARY)\n-- CUDA detected: 9.2\n-- Found libcuda: /usr/lib/x86_64-linux-gnu/libcuda.so\n-- Found libnvrtc: /usr/lib/x86_64-linux-gnu/libnvrtc.so\n-- Could NOT find NCCL (missing:  NCCL_INCLUDE_DIR NCCL_LIBRARY)\nCMake Warning at third_party/gloo/cmake/Dependencies.cmake:62 (message):\nNot compiling with NCCL support.  Suppress this warning with\n-DUSE_NCCL=OFF.\nCall Stack (most recent call first):\nthird_party/gloo/CMakeLists.txt:56 (include)\n-- GCC 5.4.0: Adding gcc and gcc_s libs to link line\n-- Include NCCL operators\n-- Excluding ideep operators as we are not using ideep\n-- Including image processing operators\n-- Excluding video processing operators due to no opencv\n-- Excluding mkl operators as we are not using mkl\n-- MPI operators skipped due to no MPI support\n-- Include Observer library\n-- Using lib/python2.7/dist-packages as python relative installation path\n-- Automatically generating missing init.py files.\n-- A previous caffe2 cmake run already created the init.py files.\nCMake Warning at CMakeLists.txt:353 (message):\nGenerated cmake files are only fully tested if one builds with system glog,\ngflags, and protobuf.  Other settings may generate files that are not well\ntested.\n--\n-- ******** Summary ********\n-- General:\n--   CMake version         : 3.5.1\n--   CMake command         : /usr/bin/cmake\n--   Git version           : v0.1.11-9244-ge06abab\n--   System                : Linux\n--   C++ compiler          : /usr/bin/c++\n--   C++ compiler version  : 5.4.0\n--   BLAS                  : Eigen\n--   CXX flags             :  -Wno-deprecated -fvisibility-inlines-hidden -DONNX_NAMESPACE=onnx_c2 -O2 -fPIC -Wno-narrowing -Wall -Wextra -Wno-missing-field-initializers -Wno-type-limits -Wno-array-bounds -Wno-unknown-pragmas -Wno-sign-compare -Wno-unused-parameter -Wno-unused-variable -Wno-unused-function -Wno-unused-result -Wno-strict-aliasing -Wno-error=deprecated-declarations\n--   Build type            : Release\n--   Compile definitions   :\n--   CMAKE_PREFIX_PATH     :\n--   CMAKE_INSTALL_PREFIX  : /usr/local\n--   BUILD_CAFFE2          : ON\n--   BUILD_ATEN            : OFF\n--   BUILD_BINARY          : ON\n--   BUILD_CUSTOM_PROTOBUF : ON\n--     Link local protobuf : ON\n--   BUILD_DOCS            : OFF\n--   BUILD_PYTHON          : ON\n--     Python version      : 2.7.12\n--     Python executable   : /usr/bin/python\n--     Python includes     : /usr/include/python2.7\n--     Python site-packages: lib/python2.7/dist-packages\n--   BUILD_SHARED_LIBS     : ON\n--   BUILD_TEST            : OFF\n--   USE_ASAN              : OFF\n--   USE_ATEN              : OFF\n--   USE_CUDA              : ON\n--     CUDA static link    : OFF\n--     USE_CUDNN           : ON\n--     CUDA version        : 9.2\n--     cuDNN version       : 7.1.4\n--     CUDA root directory : /usr/local/cuda\n--     CUDA library        : /usr/lib/x86_64-linux-gnu/libcuda.so\n--     cudart library      : /usr/local/cuda/lib64/libcudart_static.a;-pthread;dl;/usr/lib/x86_64-linux-gnu/librt.so\n--     cublas library      : /usr/local/cuda/lib64/libcublas.so;/usr/local/cuda/lib64/libcublas_device.a\n--     cufft library       : /usr/local/cuda/lib64/libcufft.so\n--     curand library      : /usr/local/cuda/lib64/libcurand.so\n--     cuDNN library       : /usr/local/cuda/lib64/libcudnn.so\n--     nvrtc               : /usr/lib/x86_64-linux-gnu/libnvrtc.so\n--     CUDA include path   : /usr/local/cuda/include\n--     NVCC executable     : /usr/local/cuda/bin/nvcc\n--     CUDA host compiler  : /usr/bin/cc\n--     USE_TENSORRT        : OFF\n--   USE_ROCM              : OFF\n--   USE_EIGEN_FOR_BLAS    : ON\n--   USE_FFMPEG            : OFF\n--   USE_GFLAGS            : ON\n--   USE_GLOG              : OFF\n--   USE_GLOO              : ON\n--     USE_GLOO_IBVERBS    : OFF\n--   USE_LEVELDB           : OFF\n--   USE_LITE_PROTO        : OFF\n--   USE_LMDB              : OFF\n--   USE_METAL             : OFF\n--   USE_MKL               :\n--   USE_MOBILE_OPENGL     : OFF\n--   USE_MPI               : OFF\n--   USE_NCCL              : ON\n--     USE_SYSTEM_NCCL     : OFF\n--   USE_NERVANA_GPU       : OFF\n--   USE_NNPACK            : ON\n--   USE_OBSERVERS         : ON\n--   USE_OPENCL            : OFF\n--   USE_OPENCV            : ON\n--     OpenCV version      : 2.4.9.1\n--   USE_OPENMP            : OFF\n--   USE_PROF              : OFF\n--   USE_REDIS             : OFF\n--   USE_ROCKSDB           : OFF\n--   USE_ZMQ               : OFF\n--   Public Dependencies  : Threads::Threads;gflags\n--   Private Dependencies : nnpack;cpuinfo;opencv_core;opencv_highgui;opencv_imgproc;gloo;onnxifi_loader;gcc_s;gcc;dl\n-- Configuring done\n-- Generating done\n-- Build files have been written to: /home/rahul/pytorch/build\nThanks for any help", "body": "I have tried installing it without using a virtual environment and it works fine . \r\nBut I am not able to use GPU. I have checked and CUDA and cuDNN is installed correctly. \r\n\r\nOutput of my cmake is as follows \r\n\r\nrahul@rahul-ThinkPad-E470:~/pytorch/build$ cmake ..\r\n-- Does not need to define long separately.\r\n-- std::exception_ptr is supported.\r\n-- NUMA is not available\r\n-- Turning off deprecation warning due to glog.\r\n-- Current compiler supports avx2 extention. Will build perfkernels.\r\n-- Building using own protobuf under third_party per request.\r\n-- Use custom protobuf build.\r\n-- Caffe2 protobuf include directory: $<BUILD_INTERFACE:/home/rahul/pytorch/third_party/protobuf/src>$<INSTALL_INTERFACE:include>\r\n-- The BLAS backend of choice:Eigen\r\n-- Brace yourself, we are building NNPACK\r\n-- Found PythonInterp: /usr/bin/python (found version \"2.7.12\") \r\n-- Caffe2: Cannot find gflags automatically. Using legacy find.\r\n-- Caffe2: Found gflags  (include: /usr/include, library: /usr/lib/x86_64-linux-gnu/libgflags.so)\r\n-- OpenCV found (/usr/share/OpenCV)\r\nCMake Warning at cmake/Dependencies.cmake:330 (find_package):\r\n  By not providing \"FindEigen3.cmake\" in CMAKE_MODULE_PATH this project has\r\n  asked CMake to find a package configuration file provided by \"Eigen3\", but\r\n  CMake did not find one.\r\n\r\n  Could not find a package configuration file provided by \"Eigen3\" with any\r\n  of the following names:\r\n\r\n    Eigen3Config.cmake\r\n    eigen3-config.cmake\r\n\r\n  Add the installation prefix of \"Eigen3\" to CMAKE_PREFIX_PATH or set\r\n  \"Eigen3_DIR\" to a directory containing one of the above files.  If \"Eigen3\"\r\n  provides a separate development package or SDK, be sure it has been\r\n  installed.\r\nCall Stack (most recent call first):\r\n  CMakeLists.txt:187 (include)\r\n\r\n\r\n-- Did not find system Eigen. Using third party subdirectory.\r\n-- Found PythonInterp: /usr/bin/python (found suitable version \"2.7.12\", minimum required is \"2.7\") \r\n-- NumPy ver. 1.11.0 found (include: /usr/lib/python2.7/dist-packages/numpy/core/include)\r\n-- Could NOT find pybind11 (missing:  pybind11_INCLUDE_DIR) \r\n-- Caffe2: CUDA detected: 9.2\r\n-- Caffe2: CUDA nvcc is: /usr/local/cuda/bin/nvcc\r\n-- Caffe2: CUDA toolkit directory: /usr/local/cuda\r\n-- Caffe2: Header version is: 9.2\r\n-- Found cuDNN: v7.1.4  (include: /usr/local/cuda/include, library: /usr/local/cuda/lib64/libcudnn.so)\r\n-- Autodetected CUDA architecture(s): 5.0 \r\n-- Added CUDA NVCC flags for: -gencode;arch=compute_50,code=sm_50\r\n-- Could NOT find NCCL (missing:  NCCL_INCLUDE_DIRS NCCL_LIBRARIES) \r\n-- Could NOT find CUB (missing:  CUB_INCLUDE_DIR) \r\n-- Could NOT find Gloo (missing:  Gloo_INCLUDE_DIR Gloo_LIBRARY) \r\n-- CUDA detected: 9.2\r\n-- Found libcuda: /usr/lib/x86_64-linux-gnu/libcuda.so\r\n-- Found libnvrtc: /usr/lib/x86_64-linux-gnu/libnvrtc.so\r\n-- Could NOT find NCCL (missing:  NCCL_INCLUDE_DIR NCCL_LIBRARY) \r\nCMake Warning at third_party/gloo/cmake/Dependencies.cmake:62 (message):\r\n  Not compiling with NCCL support.  Suppress this warning with\r\n  -DUSE_NCCL=OFF.\r\nCall Stack (most recent call first):\r\n  third_party/gloo/CMakeLists.txt:56 (include)\r\n\r\n\r\n-- GCC 5.4.0: Adding gcc and gcc_s libs to link line\r\n-- Include NCCL operators\r\n-- Excluding ideep operators as we are not using ideep\r\n-- Including image processing operators\r\n-- Excluding video processing operators due to no opencv\r\n-- Excluding mkl operators as we are not using mkl\r\n-- MPI operators skipped due to no MPI support\r\n-- Include Observer library\r\n-- Using lib/python2.7/dist-packages as python relative installation path\r\n-- Automatically generating missing __init__.py files.\r\n-- A previous caffe2 cmake run already created the __init__.py files.\r\nCMake Warning at CMakeLists.txt:353 (message):\r\n  Generated cmake files are only fully tested if one builds with system glog,\r\n  gflags, and protobuf.  Other settings may generate files that are not well\r\n  tested.\r\n\r\n\r\n-- \r\n-- ******** Summary ********\r\n-- General:\r\n--   CMake version         : 3.5.1\r\n--   CMake command         : /usr/bin/cmake\r\n--   Git version           : v0.1.11-9244-ge06abab\r\n--   System                : Linux\r\n--   C++ compiler          : /usr/bin/c++\r\n--   C++ compiler version  : 5.4.0\r\n--   BLAS                  : Eigen\r\n--   CXX flags             :  -Wno-deprecated -fvisibility-inlines-hidden -DONNX_NAMESPACE=onnx_c2 -O2 -fPIC -Wno-narrowing -Wall -Wextra -Wno-missing-field-initializers -Wno-type-limits -Wno-array-bounds -Wno-unknown-pragmas -Wno-sign-compare -Wno-unused-parameter -Wno-unused-variable -Wno-unused-function -Wno-unused-result -Wno-strict-aliasing -Wno-error=deprecated-declarations\r\n--   Build type            : Release\r\n--   Compile definitions   : \r\n--   CMAKE_PREFIX_PATH     : \r\n--   CMAKE_INSTALL_PREFIX  : /usr/local\r\n-- \r\n--   BUILD_CAFFE2          : ON\r\n--   BUILD_ATEN            : OFF\r\n--   BUILD_BINARY          : ON\r\n--   BUILD_CUSTOM_PROTOBUF : ON\r\n--     Link local protobuf : ON\r\n--   BUILD_DOCS            : OFF\r\n--   BUILD_PYTHON          : ON\r\n--     Python version      : 2.7.12\r\n--     Python executable   : /usr/bin/python\r\n--     Python includes     : /usr/include/python2.7\r\n--     Python site-packages: lib/python2.7/dist-packages\r\n--   BUILD_SHARED_LIBS     : ON\r\n--   BUILD_TEST            : OFF\r\n--   USE_ASAN              : OFF\r\n--   USE_ATEN              : OFF\r\n--   USE_CUDA              : ON\r\n--     CUDA static link    : OFF\r\n--     USE_CUDNN           : ON\r\n--     CUDA version        : 9.2\r\n--     cuDNN version       : 7.1.4\r\n--     CUDA root directory : /usr/local/cuda\r\n--     CUDA library        : /usr/lib/x86_64-linux-gnu/libcuda.so\r\n--     cudart library      : /usr/local/cuda/lib64/libcudart_static.a;-pthread;dl;/usr/lib/x86_64-linux-gnu/librt.so\r\n--     cublas library      : /usr/local/cuda/lib64/libcublas.so;/usr/local/cuda/lib64/libcublas_device.a\r\n--     cufft library       : /usr/local/cuda/lib64/libcufft.so\r\n--     curand library      : /usr/local/cuda/lib64/libcurand.so\r\n--     cuDNN library       : /usr/local/cuda/lib64/libcudnn.so\r\n--     nvrtc               : /usr/lib/x86_64-linux-gnu/libnvrtc.so\r\n--     CUDA include path   : /usr/local/cuda/include\r\n--     NVCC executable     : /usr/local/cuda/bin/nvcc\r\n--     CUDA host compiler  : /usr/bin/cc\r\n--     USE_TENSORRT        : OFF\r\n--   USE_ROCM              : OFF\r\n--   USE_EIGEN_FOR_BLAS    : ON\r\n--   USE_FFMPEG            : OFF\r\n--   USE_GFLAGS            : ON\r\n--   USE_GLOG              : OFF\r\n--   USE_GLOO              : ON\r\n--     USE_GLOO_IBVERBS    : OFF\r\n--   USE_LEVELDB           : OFF\r\n--   USE_LITE_PROTO        : OFF\r\n--   USE_LMDB              : OFF\r\n--   USE_METAL             : OFF\r\n--   USE_MKL               : \r\n--   USE_MOBILE_OPENGL     : OFF\r\n--   USE_MPI               : OFF\r\n--   USE_NCCL              : ON\r\n--     USE_SYSTEM_NCCL     : OFF\r\n--   USE_NERVANA_GPU       : OFF\r\n--   USE_NNPACK            : ON\r\n--   USE_OBSERVERS         : ON\r\n--   USE_OPENCL            : OFF\r\n--   USE_OPENCV            : ON\r\n--     OpenCV version      : 2.4.9.1\r\n--   USE_OPENMP            : OFF\r\n--   USE_PROF              : OFF\r\n--   USE_REDIS             : OFF\r\n--   USE_ROCKSDB           : OFF\r\n--   USE_ZMQ               : OFF\r\n--   Public Dependencies  : Threads::Threads;gflags\r\n--   Private Dependencies : nnpack;cpuinfo;opencv_core;opencv_highgui;opencv_imgproc;gloo;onnxifi_loader;gcc_s;gcc;dl\r\n-- Configuring done\r\n-- Generating done\r\n-- Build files have been written to: /home/rahul/pytorch/build\r\n\r\n\r\nThanks for any help \r\n\r\n\r\n"}