{"url": "https://api.github.com/repos/pytorch/pytorch/issues/comments/348648601", "html_url": "https://github.com/pytorch/pytorch/issues/3307#issuecomment-348648601", "issue_url": "https://api.github.com/repos/pytorch/pytorch/issues/3307", "id": 348648601, "node_id": "MDEyOklzc3VlQ29tbWVudDM0ODY0ODYwMQ==", "user": {"login": "apaszke", "id": 4583066, "node_id": "MDQ6VXNlcjQ1ODMwNjY=", "avatar_url": "https://avatars3.githubusercontent.com/u/4583066?v=4", "gravatar_id": "", "url": "https://api.github.com/users/apaszke", "html_url": "https://github.com/apaszke", "followers_url": "https://api.github.com/users/apaszke/followers", "following_url": "https://api.github.com/users/apaszke/following{/other_user}", "gists_url": "https://api.github.com/users/apaszke/gists{/gist_id}", "starred_url": "https://api.github.com/users/apaszke/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/apaszke/subscriptions", "organizations_url": "https://api.github.com/users/apaszke/orgs", "repos_url": "https://api.github.com/users/apaszke/repos", "events_url": "https://api.github.com/users/apaszke/events{/privacy}", "received_events_url": "https://api.github.com/users/apaszke/received_events", "type": "User", "site_admin": false}, "created_at": "2017-12-02T00:15:42Z", "updated_at": "2017-12-02T00:15:42Z", "author_association": "MEMBER", "body_html": "<p>Not because of the merge, but it would make sense to copy it, so <code>deepcopy</code> would actually give you a full copy of the object. It might be a good idea to forbid <code>.grad</code> to have history, which would also solve the ref cycles we have.</p>", "body_text": "Not because of the merge, but it would make sense to copy it, so deepcopy would actually give you a full copy of the object. It might be a good idea to forbid .grad to have history, which would also solve the ref cycles we have.", "body": "Not because of the merge, but it would make sense to copy it, so `deepcopy` would actually give you a full copy of the object. It might be a good idea to forbid `.grad` to have history, which would also solve the ref cycles we have."}