{"url": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/188663625", "pull_request_review_id": 120687687, "id": 188663625, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4ODY2MzYyNQ==", "diff_hunk": "@@ -303,6 +316,7 @@ struct Function : std::enable_shared_from_this<Function> {\n   // Since `Function`s are neither copyable nor moveable, we can have const\n   // fields.\n   const uint64_t sequence_nr_;\n+  const int backwards_priority_;", "path": "torch/csrc/autograd/function.h", "position": null, "original_position": 43, "commit_id": "9bab040e8db2be667200865e12261831b81b286f", "original_commit_id": "0145925cdd7e7db5b77739a0efc67a0e3d7ef540", "user": {"login": "apaszke", "id": 4583066, "node_id": "MDQ6VXNlcjQ1ODMwNjY=", "avatar_url": "https://avatars3.githubusercontent.com/u/4583066?v=4", "gravatar_id": "", "url": "https://api.github.com/users/apaszke", "html_url": "https://github.com/apaszke", "followers_url": "https://api.github.com/users/apaszke/followers", "following_url": "https://api.github.com/users/apaszke/following{/other_user}", "gists_url": "https://api.github.com/users/apaszke/gists{/gist_id}", "starred_url": "https://api.github.com/users/apaszke/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/apaszke/subscriptions", "organizations_url": "https://api.github.com/users/apaszke/orgs", "repos_url": "https://api.github.com/users/apaszke/repos", "events_url": "https://api.github.com/users/apaszke/events{/privacy}", "received_events_url": "https://api.github.com/users/apaszke/received_events", "type": "User", "site_admin": false}, "body": "sequence_nr_ already has pretty weak consistency guarantees (it\u2019s only ordered within a thread, so it\u2019s a bit of an implementation detail) so I don\u2019t think we should be using it for anything else than a hint for scheduling. Adding a single \u201cinfinite\u201d point at the end of an order doesn\u2019t seem too hacky for me, and it certainly makes the scheduling hint invariant easier", "created_at": "2018-05-16T15:12:58Z", "updated_at": "2018-11-23T15:44:08Z", "html_url": "https://github.com/pytorch/pytorch/pull/7604#discussion_r188663625", "pull_request_url": "https://api.github.com/repos/pytorch/pytorch/pulls/7604", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/188663625"}, "html": {"href": "https://github.com/pytorch/pytorch/pull/7604#discussion_r188663625"}, "pull_request": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/7604"}}, "body_html": "<p>sequence_nr_ already has pretty weak consistency guarantees (it\u2019s only ordered within a thread, so it\u2019s a bit of an implementation detail) so I don\u2019t think we should be using it for anything else than a hint for scheduling. Adding a single \u201cinfinite\u201d point at the end of an order doesn\u2019t seem too hacky for me, and it certainly makes the scheduling hint invariant easier</p>", "body_text": "sequence_nr_ already has pretty weak consistency guarantees (it\u2019s only ordered within a thread, so it\u2019s a bit of an implementation detail) so I don\u2019t think we should be using it for anything else than a hint for scheduling. Adding a single \u201cinfinite\u201d point at the end of an order doesn\u2019t seem too hacky for me, and it certainly makes the scheduling hint invariant easier", "in_reply_to_id": 188537507}