{"url": "https://api.github.com/repos/pytorch/pytorch/issues/1565", "repository_url": "https://api.github.com/repos/pytorch/pytorch", "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/1565/labels{/name}", "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/1565/comments", "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/1565/events", "html_url": "https://github.com/pytorch/pytorch/issues/1565", "id": 228915051, "node_id": "MDU6SXNzdWUyMjg5MTUwNTE=", "number": 1565, "title": "Implement transposed dilated convolutions", "user": {"login": "ngimel", "id": 15841449, "node_id": "MDQ6VXNlcjE1ODQxNDQ5", "avatar_url": "https://avatars3.githubusercontent.com/u/15841449?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ngimel", "html_url": "https://github.com/ngimel", "followers_url": "https://api.github.com/users/ngimel/followers", "following_url": "https://api.github.com/users/ngimel/following{/other_user}", "gists_url": "https://api.github.com/users/ngimel/gists{/gist_id}", "starred_url": "https://api.github.com/users/ngimel/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ngimel/subscriptions", "organizations_url": "https://api.github.com/users/ngimel/orgs", "repos_url": "https://api.github.com/users/ngimel/repos", "events_url": "https://api.github.com/users/ngimel/events{/privacy}", "received_events_url": "https://api.github.com/users/ngimel/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 424131849, "node_id": "MDU6TGFiZWw0MjQxMzE4NDk=", "url": "https://api.github.com/repos/pytorch/pytorch/labels/enhancement", "name": "enhancement", "color": "84b6eb", "default": true}, {"id": 443483881, "node_id": "MDU6TGFiZWw0NDM0ODM4ODE=", "url": "https://api.github.com/repos/pytorch/pytorch/labels/todo", "name": "todo", "color": "c2e0c6", "default": false}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2017-05-16T04:54:38Z", "updated_at": "2017-08-31T00:08:25Z", "closed_at": "2017-08-31T00:08:09Z", "author_association": "CONTRIBUTOR", "body_html": "<p>The following snippet:</p>\n<div class=\"highlight highlight-source-python\"><pre><span class=\"pl-k\">import</span> torch\n<span class=\"pl-k\">from</span> torch.autograd <span class=\"pl-k\">import</span> Variable\n<span class=\"pl-k\">import</span> torch.nn <span class=\"pl-k\">as</span> nn\n\nconv <span class=\"pl-k\">=</span> nn.ConvTranspose1d(<span class=\"pl-c1\">1</span>,<span class=\"pl-c1\">1</span>,<span class=\"pl-c1\">3</span>,<span class=\"pl-c1\">2</span>,<span class=\"pl-c1\">1</span>,<span class=\"pl-c1\">1</span>,<span class=\"pl-c1\">1</span>,<span class=\"pl-c1\">False</span>,<span class=\"pl-c1\">2</span>)\n<span class=\"pl-c1\">input</span> <span class=\"pl-k\">=</span> Variable(torch.randn(<span class=\"pl-c1\">1</span>,<span class=\"pl-c1\">1</span>,<span class=\"pl-c1\">6</span>))\n<span class=\"pl-k\">for</span> param <span class=\"pl-k\">in</span> conv.parameters():\n   param.data.fill_(<span class=\"pl-c1\">1</span>)\n<span class=\"pl-c1\">input</span>.data.fill_(<span class=\"pl-c1\">1</span>)\noutput <span class=\"pl-k\">=</span> conv(<span class=\"pl-c1\">input</span>)\n<span class=\"pl-c1\">print</span>(output)</pre></div>\n<p>produces</p>\n<pre><code>Variable containing:\n(0 ,.,.) =\n   1   2   1   2   1   2   1   2   1   2   1   1\n[torch.FloatTensor of size 1x1x12]\n</code></pre>\n<p>whereas expected result is</p>\n<pre><code>0 2 0 3 0 3 ...\n</code></pre>\n<p>(dilated transposed convolution with dilation of 2 and stride of 2 should only have non-zeros as every second value).<br>\nThis is not surprising seeing how computations are dispatched in Convolution.cpp: <a href=\"https://github.com/pytorch/pytorch/blob/master/torch/csrc/autograd/functions/convolution.cpp#L339-L383\">https://github.com/pytorch/pytorch/blob/master/torch/csrc/autograd/functions/convolution.cpp#L339-L383</a>. There is no appropriate handling for transposed dilated convolutions. Grad checkers in tests don't catch this error because forward pass is wrong ;-).<br>\ncc <a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=13564\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/ezyang\">@ezyang</a>.</p>", "body_text": "The following snippet:\nimport torch\nfrom torch.autograd import Variable\nimport torch.nn as nn\n\nconv = nn.ConvTranspose1d(1,1,3,2,1,1,1,False,2)\ninput = Variable(torch.randn(1,1,6))\nfor param in conv.parameters():\n   param.data.fill_(1)\ninput.data.fill_(1)\noutput = conv(input)\nprint(output)\nproduces\nVariable containing:\n(0 ,.,.) =\n   1   2   1   2   1   2   1   2   1   2   1   1\n[torch.FloatTensor of size 1x1x12]\n\nwhereas expected result is\n0 2 0 3 0 3 ...\n\n(dilated transposed convolution with dilation of 2 and stride of 2 should only have non-zeros as every second value).\nThis is not surprising seeing how computations are dispatched in Convolution.cpp: https://github.com/pytorch/pytorch/blob/master/torch/csrc/autograd/functions/convolution.cpp#L339-L383. There is no appropriate handling for transposed dilated convolutions. Grad checkers in tests don't catch this error because forward pass is wrong ;-).\ncc @ezyang.", "body": "The following snippet:\r\n```.py\r\nimport torch\r\nfrom torch.autograd import Variable\r\nimport torch.nn as nn\r\n\r\nconv = nn.ConvTranspose1d(1,1,3,2,1,1,1,False,2)\r\ninput = Variable(torch.randn(1,1,6))\r\nfor param in conv.parameters():\r\n   param.data.fill_(1)\r\ninput.data.fill_(1)\r\noutput = conv(input)\r\nprint(output)\r\n```\r\nproduces \r\n```\r\nVariable containing:\r\n(0 ,.,.) =\r\n   1   2   1   2   1   2   1   2   1   2   1   1\r\n[torch.FloatTensor of size 1x1x12]\r\n```\r\nwhereas expected result is\r\n```\r\n0 2 0 3 0 3 ...\r\n```\r\n(dilated transposed convolution with dilation of 2 and stride of 2 should only have non-zeros as every second value). \r\nThis is not surprising seeing how computations are dispatched in Convolution.cpp: https://github.com/pytorch/pytorch/blob/master/torch/csrc/autograd/functions/convolution.cpp#L339-L383. There is no appropriate handling for transposed dilated convolutions. Grad checkers in tests don't catch this error because forward pass is wrong ;-).\r\ncc @ezyang. \r\n"}