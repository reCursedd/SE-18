{"url": "https://api.github.com/repos/pytorch/pytorch/issues/comments/409115261", "html_url": "https://github.com/pytorch/pytorch/issues/1552#issuecomment-409115261", "issue_url": "https://api.github.com/repos/pytorch/pytorch/issues/1552", "id": 409115261, "node_id": "MDEyOklzc3VlQ29tbWVudDQwOTExNTI2MQ==", "user": {"login": "aliutkus", "id": 9372516, "node_id": "MDQ6VXNlcjkzNzI1MTY=", "avatar_url": "https://avatars3.githubusercontent.com/u/9372516?v=4", "gravatar_id": "", "url": "https://api.github.com/users/aliutkus", "html_url": "https://github.com/aliutkus", "followers_url": "https://api.github.com/users/aliutkus/followers", "following_url": "https://api.github.com/users/aliutkus/following{/other_user}", "gists_url": "https://api.github.com/users/aliutkus/gists{/gist_id}", "starred_url": "https://api.github.com/users/aliutkus/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/aliutkus/subscriptions", "organizations_url": "https://api.github.com/users/aliutkus/orgs", "repos_url": "https://api.github.com/users/aliutkus/repos", "events_url": "https://api.github.com/users/aliutkus/events{/privacy}", "received_events_url": "https://api.github.com/users/aliutkus/received_events", "type": "User", "site_admin": false}, "created_at": "2018-07-31T06:54:26Z", "updated_at": "2018-08-03T14:09:09Z", "author_association": "NONE", "body_html": "<p>I feel like this is not what I would call a general interpolation method:<br>\nRight now, it looks to me like all these interpolation functions are all kind of applying deformations to regularly sampled input. These deformation consist of either constant (current <code>interpolate</code>) or varying (current <code>sample_grid</code>), but the input is always assumed regularly sampled.</p>\n<p>In the case of 1d for me, there is still a need for a function that would do <code>interp1d(x,y,xnew)</code> where <code>x</code> are sorted coordinates, <code>y</code> are the corresponding output values, and <code>xnew</code> are the points you want the linear interpolation from.</p>\n<p>This is similar to the scipy <code>interp1d</code> function. Going there, having some interpolation where you could select the dimension along which to interpolate would be great.</p>\n<p>This doesn't seem to be existing in Pytorch. I could code it myself, but I find another problem, which is: there is no pytorch <code>searchsorted</code></p>\n<p>So I'm not really sure that these developments actually addressed the issue of the lack of general purpose interpolation functions in pytorch</p>\n<p>thanks a lot</p>", "body_text": "I feel like this is not what I would call a general interpolation method:\nRight now, it looks to me like all these interpolation functions are all kind of applying deformations to regularly sampled input. These deformation consist of either constant (current interpolate) or varying (current sample_grid), but the input is always assumed regularly sampled.\nIn the case of 1d for me, there is still a need for a function that would do interp1d(x,y,xnew) where x are sorted coordinates, y are the corresponding output values, and xnew are the points you want the linear interpolation from.\nThis is similar to the scipy interp1d function. Going there, having some interpolation where you could select the dimension along which to interpolate would be great.\nThis doesn't seem to be existing in Pytorch. I could code it myself, but I find another problem, which is: there is no pytorch searchsorted\nSo I'm not really sure that these developments actually addressed the issue of the lack of general purpose interpolation functions in pytorch\nthanks a lot", "body": "I feel like this is not what I would call a general interpolation method:\r\nRight now, it looks to me like all these interpolation functions are all kind of applying deformations to regularly sampled input. These deformation consist of either constant (current `interpolate`) or varying (current `sample_grid`), but the input is always assumed regularly sampled.\r\n\r\nIn the case of 1d for me, there is still a need for a function that would do `interp1d(x,y,xnew)` where `x` are sorted coordinates, `y` are the corresponding output values, and `xnew` are the points you want the linear interpolation from.\r\n\r\nThis is similar to the scipy `interp1d` function. Going there, having some interpolation where you could select the dimension along which to interpolate would be great.\r\n\r\nThis doesn't seem to be existing in Pytorch. I could code it myself, but I find another problem, which is: there is no pytorch `searchsorted`\r\n\r\nSo I'm not really sure that these developments actually addressed the issue of the lack of general purpose interpolation functions in pytorch\r\n\r\nthanks a lot"}