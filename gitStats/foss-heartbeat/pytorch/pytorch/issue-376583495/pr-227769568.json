{"url": "https://api.github.com/repos/pytorch/pytorch/pulls/13481", "id": 227769568, "node_id": "MDExOlB1bGxSZXF1ZXN0MjI3NzY5NTY4", "html_url": "https://github.com/pytorch/pytorch/pull/13481", "diff_url": "https://github.com/pytorch/pytorch/pull/13481.diff", "patch_url": "https://github.com/pytorch/pytorch/pull/13481.patch", "issue_url": "https://api.github.com/repos/pytorch/pytorch/issues/13481", "number": 13481, "state": "open", "locked": false, "title": "Python <-> C++ Frontend inter-op", "user": {"login": "goldsborough", "id": 6429851, "node_id": "MDQ6VXNlcjY0Mjk4NTE=", "avatar_url": "https://avatars3.githubusercontent.com/u/6429851?v=4", "gravatar_id": "", "url": "https://api.github.com/users/goldsborough", "html_url": "https://github.com/goldsborough", "followers_url": "https://api.github.com/users/goldsborough/followers", "following_url": "https://api.github.com/users/goldsborough/following{/other_user}", "gists_url": "https://api.github.com/users/goldsborough/gists{/gist_id}", "starred_url": "https://api.github.com/users/goldsborough/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/goldsborough/subscriptions", "organizations_url": "https://api.github.com/users/goldsborough/orgs", "repos_url": "https://api.github.com/users/goldsborough/repos", "events_url": "https://api.github.com/users/goldsborough/events{/privacy}", "received_events_url": "https://api.github.com/users/goldsborough/received_events", "type": "User", "site_admin": false}, "body": "This PR enables C++ frontend modules to be bound into Python and added as submodules of Python modules. For this, I added lots of pybind11 bindings for the `torch::nn::Module` class, and modified the `torch.nn.Module` class in Python to have a new Metaclass that makes `isinstance(m, torch.nn.Module)` return true when `m` is a C++ frontend module. The methods and fields of C++ modules are bound in such a way that they work seamlessly as submodules of Python modules for most operations (one exception I know of: calling `.to()` ends up calling `.apply()` on each submodule with a Python lambda, which cannot be used in C++ -- this may require small changes on Python side).\r\n\r\nI've added quite a bunch of tests to verify the bindings and equality with Python. I think I should also try out adding a C++ module as part of some large PyTorch module, like a WLM or something, and see if everything works smoothly.\r\n\r\nThe next step for inter-op across our system is ScriptModule <-> C++ Frontend Module inter-op. I think this will then also allow using C++ frontend modules from TorchScript.\r\n\r\n@apaszke @zdevito \r\n\r\nCC @dzhulgakov", "created_at": "2018-11-01T21:44:47Z", "updated_at": "2018-11-23T15:54:46Z", "closed_at": null, "merged_at": null, "merge_commit_sha": "d9a671db27e094bbf36e2aeffb741945585b5422", "assignee": null, "assignees": [], "requested_reviewers": [{"login": "ebetica", "id": 3605224, "node_id": "MDQ6VXNlcjM2MDUyMjQ=", "avatar_url": "https://avatars3.githubusercontent.com/u/3605224?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ebetica", "html_url": "https://github.com/ebetica", "followers_url": "https://api.github.com/users/ebetica/followers", "following_url": "https://api.github.com/users/ebetica/following{/other_user}", "gists_url": "https://api.github.com/users/ebetica/gists{/gist_id}", "starred_url": "https://api.github.com/users/ebetica/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ebetica/subscriptions", "organizations_url": "https://api.github.com/users/ebetica/orgs", "repos_url": "https://api.github.com/users/ebetica/repos", "events_url": "https://api.github.com/users/ebetica/events{/privacy}", "received_events_url": "https://api.github.com/users/ebetica/received_events", "type": "User", "site_admin": false}], "requested_teams": [], "labels": [{"id": 679953983, "node_id": "MDU6TGFiZWw2Nzk5NTM5ODM=", "url": "https://api.github.com/repos/pytorch/pytorch/labels/jit", "name": "jit", "color": "c5def5", "default": false}], "milestone": null, "commits_url": "https://api.github.com/repos/pytorch/pytorch/pulls/13481/commits", "review_comments_url": "https://api.github.com/repos/pytorch/pytorch/pulls/13481/comments", "review_comment_url": "https://api.github.com/repos/pytorch/pytorch/pulls/comments{/number}", "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/13481/comments", "statuses_url": "https://api.github.com/repos/pytorch/pytorch/statuses/b38180fbf8e52215fc06471dc6a0261f6d0324eb", "head": {"label": "goldsborough:python-inter-op", "ref": "python-inter-op", "sha": "b38180fbf8e52215fc06471dc6a0261f6d0324eb", "user": {"login": "goldsborough", "id": 6429851, "node_id": "MDQ6VXNlcjY0Mjk4NTE=", "avatar_url": "https://avatars3.githubusercontent.com/u/6429851?v=4", "gravatar_id": "", "url": "https://api.github.com/users/goldsborough", "html_url": "https://github.com/goldsborough", "followers_url": "https://api.github.com/users/goldsborough/followers", "following_url": "https://api.github.com/users/goldsborough/following{/other_user}", "gists_url": "https://api.github.com/users/goldsborough/gists{/gist_id}", "starred_url": "https://api.github.com/users/goldsborough/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/goldsborough/subscriptions", "organizations_url": "https://api.github.com/users/goldsborough/orgs", "repos_url": "https://api.github.com/users/goldsborough/repos", "events_url": "https://api.github.com/users/goldsborough/events{/privacy}", "received_events_url": "https://api.github.com/users/goldsborough/received_events", "type": "User", "site_admin": false}, "repo": {"id": 115096378, "node_id": "MDEwOlJlcG9zaXRvcnkxMTUwOTYzNzg=", "name": "pytorch", "full_name": "goldsborough/pytorch", "private": false, "owner": {"login": "goldsborough", "id": 6429851, "node_id": "MDQ6VXNlcjY0Mjk4NTE=", "avatar_url": "https://avatars3.githubusercontent.com/u/6429851?v=4", "gravatar_id": "", "url": "https://api.github.com/users/goldsborough", "html_url": "https://github.com/goldsborough", "followers_url": "https://api.github.com/users/goldsborough/followers", "following_url": "https://api.github.com/users/goldsborough/following{/other_user}", "gists_url": "https://api.github.com/users/goldsborough/gists{/gist_id}", "starred_url": "https://api.github.com/users/goldsborough/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/goldsborough/subscriptions", "organizations_url": "https://api.github.com/users/goldsborough/orgs", "repos_url": "https://api.github.com/users/goldsborough/repos", "events_url": "https://api.github.com/users/goldsborough/events{/privacy}", "received_events_url": "https://api.github.com/users/goldsborough/received_events", "type": "User", "site_admin": false}, "html_url": "https://github.com/goldsborough/pytorch", "description": "Tensors and Dynamic neural networks in Python  with strong GPU acceleration", "fork": true, "url": "https://api.github.com/repos/goldsborough/pytorch", "forks_url": "https://api.github.com/repos/goldsborough/pytorch/forks", "keys_url": "https://api.github.com/repos/goldsborough/pytorch/keys{/key_id}", "collaborators_url": "https://api.github.com/repos/goldsborough/pytorch/collaborators{/collaborator}", "teams_url": "https://api.github.com/repos/goldsborough/pytorch/teams", "hooks_url": "https://api.github.com/repos/goldsborough/pytorch/hooks", "issue_events_url": "https://api.github.com/repos/goldsborough/pytorch/issues/events{/number}", "events_url": "https://api.github.com/repos/goldsborough/pytorch/events", "assignees_url": "https://api.github.com/repos/goldsborough/pytorch/assignees{/user}", "branches_url": "https://api.github.com/repos/goldsborough/pytorch/branches{/branch}", "tags_url": "https://api.github.com/repos/goldsborough/pytorch/tags", "blobs_url": "https://api.github.com/repos/goldsborough/pytorch/git/blobs{/sha}", "git_tags_url": "https://api.github.com/repos/goldsborough/pytorch/git/tags{/sha}", "git_refs_url": "https://api.github.com/repos/goldsborough/pytorch/git/refs{/sha}", "trees_url": "https://api.github.com/repos/goldsborough/pytorch/git/trees{/sha}", "statuses_url": "https://api.github.com/repos/goldsborough/pytorch/statuses/{sha}", "languages_url": "https://api.github.com/repos/goldsborough/pytorch/languages", "stargazers_url": "https://api.github.com/repos/goldsborough/pytorch/stargazers", "contributors_url": "https://api.github.com/repos/goldsborough/pytorch/contributors", "subscribers_url": "https://api.github.com/repos/goldsborough/pytorch/subscribers", "subscription_url": "https://api.github.com/repos/goldsborough/pytorch/subscription", "commits_url": "https://api.github.com/repos/goldsborough/pytorch/commits{/sha}", "git_commits_url": "https://api.github.com/repos/goldsborough/pytorch/git/commits{/sha}", "comments_url": "https://api.github.com/repos/goldsborough/pytorch/comments{/number}", "issue_comment_url": "https://api.github.com/repos/goldsborough/pytorch/issues/comments{/number}", "contents_url": "https://api.github.com/repos/goldsborough/pytorch/contents/{+path}", "compare_url": "https://api.github.com/repos/goldsborough/pytorch/compare/{base}...{head}", "merges_url": "https://api.github.com/repos/goldsborough/pytorch/merges", "archive_url": "https://api.github.com/repos/goldsborough/pytorch/{archive_format}{/ref}", "downloads_url": "https://api.github.com/repos/goldsborough/pytorch/downloads", "issues_url": "https://api.github.com/repos/goldsborough/pytorch/issues{/number}", "pulls_url": "https://api.github.com/repos/goldsborough/pytorch/pulls{/number}", "milestones_url": "https://api.github.com/repos/goldsborough/pytorch/milestones{/number}", "notifications_url": "https://api.github.com/repos/goldsborough/pytorch/notifications{?since,all,participating}", "labels_url": "https://api.github.com/repos/goldsborough/pytorch/labels{/name}", "releases_url": "https://api.github.com/repos/goldsborough/pytorch/releases{/id}", "deployments_url": "https://api.github.com/repos/goldsborough/pytorch/deployments", "created_at": "2017-12-22T08:49:57Z", "updated_at": "2018-11-08T01:51:18Z", "pushed_at": "2018-11-17T00:54:35Z", "git_url": "git://github.com/goldsborough/pytorch.git", "ssh_url": "git@github.com:goldsborough/pytorch.git", "clone_url": "https://github.com/goldsborough/pytorch.git", "svn_url": "https://github.com/goldsborough/pytorch", "homepage": "http://pytorch.org", "size": 86862, "stargazers_count": 3, "watchers_count": 3, "language": "C++", "has_issues": false, "has_projects": true, "has_downloads": true, "has_wiki": true, "has_pages": false, "forks_count": 0, "mirror_url": null, "archived": false, "open_issues_count": 0, "license": {"key": "other", "name": "Other", "spdx_id": "NOASSERTION", "url": null, "node_id": "MDc6TGljZW5zZTA="}, "forks": 0, "open_issues": 0, "watchers": 3, "default_branch": "master"}}, "base": {"label": "pytorch:master", "ref": "master", "sha": "55e1b1ec3ea629f620c78e8c3c4357cf499604ca", "user": {"login": "pytorch", "id": 21003710, "node_id": "MDEyOk9yZ2FuaXphdGlvbjIxMDAzNzEw", "avatar_url": "https://avatars3.githubusercontent.com/u/21003710?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pytorch", "html_url": "https://github.com/pytorch", "followers_url": "https://api.github.com/users/pytorch/followers", "following_url": "https://api.github.com/users/pytorch/following{/other_user}", "gists_url": "https://api.github.com/users/pytorch/gists{/gist_id}", "starred_url": "https://api.github.com/users/pytorch/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pytorch/subscriptions", "organizations_url": "https://api.github.com/users/pytorch/orgs", "repos_url": "https://api.github.com/users/pytorch/repos", "events_url": "https://api.github.com/users/pytorch/events{/privacy}", "received_events_url": "https://api.github.com/users/pytorch/received_events", "type": "Organization", "site_admin": false}, "repo": {"id": 65600975, "node_id": "MDEwOlJlcG9zaXRvcnk2NTYwMDk3NQ==", "name": "pytorch", "full_name": "pytorch/pytorch", "private": false, "owner": {"login": "pytorch", "id": 21003710, "node_id": "MDEyOk9yZ2FuaXphdGlvbjIxMDAzNzEw", "avatar_url": "https://avatars3.githubusercontent.com/u/21003710?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pytorch", "html_url": "https://github.com/pytorch", "followers_url": "https://api.github.com/users/pytorch/followers", "following_url": "https://api.github.com/users/pytorch/following{/other_user}", "gists_url": "https://api.github.com/users/pytorch/gists{/gist_id}", "starred_url": "https://api.github.com/users/pytorch/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pytorch/subscriptions", "organizations_url": "https://api.github.com/users/pytorch/orgs", "repos_url": "https://api.github.com/users/pytorch/repos", "events_url": "https://api.github.com/users/pytorch/events{/privacy}", "received_events_url": "https://api.github.com/users/pytorch/received_events", "type": "Organization", "site_admin": false}, "html_url": "https://github.com/pytorch/pytorch", "description": "Tensors and Dynamic neural networks in Python  with strong GPU acceleration", "fork": false, "url": "https://api.github.com/repos/pytorch/pytorch", "forks_url": "https://api.github.com/repos/pytorch/pytorch/forks", "keys_url": "https://api.github.com/repos/pytorch/pytorch/keys{/key_id}", "collaborators_url": "https://api.github.com/repos/pytorch/pytorch/collaborators{/collaborator}", "teams_url": "https://api.github.com/repos/pytorch/pytorch/teams", "hooks_url": "https://api.github.com/repos/pytorch/pytorch/hooks", "issue_events_url": "https://api.github.com/repos/pytorch/pytorch/issues/events{/number}", "events_url": "https://api.github.com/repos/pytorch/pytorch/events", "assignees_url": "https://api.github.com/repos/pytorch/pytorch/assignees{/user}", "branches_url": "https://api.github.com/repos/pytorch/pytorch/branches{/branch}", "tags_url": "https://api.github.com/repos/pytorch/pytorch/tags", "blobs_url": "https://api.github.com/repos/pytorch/pytorch/git/blobs{/sha}", "git_tags_url": "https://api.github.com/repos/pytorch/pytorch/git/tags{/sha}", "git_refs_url": "https://api.github.com/repos/pytorch/pytorch/git/refs{/sha}", "trees_url": "https://api.github.com/repos/pytorch/pytorch/git/trees{/sha}", "statuses_url": "https://api.github.com/repos/pytorch/pytorch/statuses/{sha}", "languages_url": "https://api.github.com/repos/pytorch/pytorch/languages", "stargazers_url": "https://api.github.com/repos/pytorch/pytorch/stargazers", "contributors_url": "https://api.github.com/repos/pytorch/pytorch/contributors", "subscribers_url": "https://api.github.com/repos/pytorch/pytorch/subscribers", "subscription_url": "https://api.github.com/repos/pytorch/pytorch/subscription", "commits_url": "https://api.github.com/repos/pytorch/pytorch/commits{/sha}", "git_commits_url": "https://api.github.com/repos/pytorch/pytorch/git/commits{/sha}", "comments_url": "https://api.github.com/repos/pytorch/pytorch/comments{/number}", "issue_comment_url": "https://api.github.com/repos/pytorch/pytorch/issues/comments{/number}", "contents_url": "https://api.github.com/repos/pytorch/pytorch/contents/{+path}", "compare_url": "https://api.github.com/repos/pytorch/pytorch/compare/{base}...{head}", "merges_url": "https://api.github.com/repos/pytorch/pytorch/merges", "archive_url": "https://api.github.com/repos/pytorch/pytorch/{archive_format}{/ref}", "downloads_url": "https://api.github.com/repos/pytorch/pytorch/downloads", "issues_url": "https://api.github.com/repos/pytorch/pytorch/issues{/number}", "pulls_url": "https://api.github.com/repos/pytorch/pytorch/pulls{/number}", "milestones_url": "https://api.github.com/repos/pytorch/pytorch/milestones{/number}", "notifications_url": "https://api.github.com/repos/pytorch/pytorch/notifications{?since,all,participating}", "labels_url": "https://api.github.com/repos/pytorch/pytorch/labels{/name}", "releases_url": "https://api.github.com/repos/pytorch/pytorch/releases{/id}", "deployments_url": "https://api.github.com/repos/pytorch/pytorch/deployments", "created_at": "2016-08-13T05:26:41Z", "updated_at": "2018-11-24T12:35:43Z", "pushed_at": "2018-11-24T12:42:01Z", "git_url": "git://github.com/pytorch/pytorch.git", "ssh_url": "git@github.com:pytorch/pytorch.git", "clone_url": "https://github.com/pytorch/pytorch.git", "svn_url": "https://github.com/pytorch/pytorch", "homepage": "http://pytorch.org", "size": 89656, "stargazers_count": 21589, "watchers_count": 21589, "language": "C++", "has_issues": true, "has_projects": true, "has_downloads": true, "has_wiki": true, "has_pages": false, "forks_count": 5153, "mirror_url": null, "archived": false, "open_issues_count": 2196, "license": {"key": "other", "name": "Other", "spdx_id": "NOASSERTION", "url": null, "node_id": "MDc6TGljZW5zZTA="}, "forks": 5153, "open_issues": 2196, "watchers": 21589, "default_branch": "master"}}, "_links": {"self": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/13481"}, "html": {"href": "https://github.com/pytorch/pytorch/pull/13481"}, "issue": {"href": "https://api.github.com/repos/pytorch/pytorch/issues/13481"}, "comments": {"href": "https://api.github.com/repos/pytorch/pytorch/issues/13481/comments"}, "review_comments": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/13481/comments"}, "review_comment": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/comments{/number}"}, "commits": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/13481/commits"}, "statuses": {"href": "https://api.github.com/repos/pytorch/pytorch/statuses/b38180fbf8e52215fc06471dc6a0261f6d0324eb"}}, "author_association": "CONTRIBUTOR", "body_html": "<p>This PR enables C++ frontend modules to be bound into Python and added as submodules of Python modules. For this, I added lots of pybind11 bindings for the <code>torch::nn::Module</code> class, and modified the <code>torch.nn.Module</code> class in Python to have a new Metaclass that makes <code>isinstance(m, torch.nn.Module)</code> return true when <code>m</code> is a C++ frontend module. The methods and fields of C++ modules are bound in such a way that they work seamlessly as submodules of Python modules for most operations (one exception I know of: calling <code>.to()</code> ends up calling <code>.apply()</code> on each submodule with a Python lambda, which cannot be used in C++ -- this may require small changes on Python side).</p>\n<p>I've added quite a bunch of tests to verify the bindings and equality with Python. I think I should also try out adding a C++ module as part of some large PyTorch module, like a WLM or something, and see if everything works smoothly.</p>\n<p>The next step for inter-op across our system is ScriptModule &lt;-&gt; C++ Frontend Module inter-op. I think this will then also allow using C++ frontend modules from TorchScript.</p>\n<p><a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=4583066\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/apaszke\">@apaszke</a> <a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=370202\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/zdevito\">@zdevito</a></p>\n<p>CC <a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=17890620\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/dzhulgakov\">@dzhulgakov</a></p>", "body_text": "This PR enables C++ frontend modules to be bound into Python and added as submodules of Python modules. For this, I added lots of pybind11 bindings for the torch::nn::Module class, and modified the torch.nn.Module class in Python to have a new Metaclass that makes isinstance(m, torch.nn.Module) return true when m is a C++ frontend module. The methods and fields of C++ modules are bound in such a way that they work seamlessly as submodules of Python modules for most operations (one exception I know of: calling .to() ends up calling .apply() on each submodule with a Python lambda, which cannot be used in C++ -- this may require small changes on Python side).\nI've added quite a bunch of tests to verify the bindings and equality with Python. I think I should also try out adding a C++ module as part of some large PyTorch module, like a WLM or something, and see if everything works smoothly.\nThe next step for inter-op across our system is ScriptModule <-> C++ Frontend Module inter-op. I think this will then also allow using C++ frontend modules from TorchScript.\n@apaszke @zdevito\nCC @dzhulgakov", "merged": false, "mergeable": true, "rebaseable": true, "mergeable_state": "blocked", "merged_by": null, "comments": 3, "review_comments": 5, "maintainer_can_modify": true, "commits": 6, "additions": 470, "deletions": 220, "changed_files": 13}