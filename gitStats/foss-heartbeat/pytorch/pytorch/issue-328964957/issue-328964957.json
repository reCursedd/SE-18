{"url": "https://api.github.com/repos/pytorch/pytorch/issues/8109", "repository_url": "https://api.github.com/repos/pytorch/pytorch", "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/8109/labels{/name}", "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/8109/comments", "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/8109/events", "html_url": "https://github.com/pytorch/pytorch/issues/8109", "id": 328964957, "node_id": "MDU6SXNzdWUzMjg5NjQ5NTc=", "number": 8109, "title": "Sometimes the torch.save method does not work properly.", "user": {"login": "MakeDirtyCode", "id": 39237502, "node_id": "MDQ6VXNlcjM5MjM3NTAy", "avatar_url": "https://avatars3.githubusercontent.com/u/39237502?v=4", "gravatar_id": "", "url": "https://api.github.com/users/MakeDirtyCode", "html_url": "https://github.com/MakeDirtyCode", "followers_url": "https://api.github.com/users/MakeDirtyCode/followers", "following_url": "https://api.github.com/users/MakeDirtyCode/following{/other_user}", "gists_url": "https://api.github.com/users/MakeDirtyCode/gists{/gist_id}", "starred_url": "https://api.github.com/users/MakeDirtyCode/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/MakeDirtyCode/subscriptions", "organizations_url": "https://api.github.com/users/MakeDirtyCode/orgs", "repos_url": "https://api.github.com/users/MakeDirtyCode/repos", "events_url": "https://api.github.com/users/MakeDirtyCode/events{/privacy}", "received_events_url": "https://api.github.com/users/MakeDirtyCode/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-06-04T08:55:38Z", "updated_at": "2018-06-04T17:13:14Z", "closed_at": "2018-06-04T17:13:13Z", "author_association": "NONE", "body_html": "<h2>Issue description</h2>\n<p>When indexing a part of the tensor, the entire original tensor is saved.</p>\n<h2>Code example</h2>\n<pre><code>import torch\norigin = torch.FloatTensor(128, 512, 7, 7) # original tensor (shape: [128, 512, 7, 7])\nindexed = origin[0] # part of tensor (shape: [512, 7, 7])\ntorch.save(indexed, 'tensor.pth') # save tensor\n</code></pre>\n<p>I expect that divided tensors will be stored. (It will be about 100KB)<br>\nHowever, it is actually stored in the original matrix size. (Approximately 12MB)</p>\n<h2>System Info</h2>\n<p>PyTorch<br>\nconda<br>\nWindows 10<br>\n0.4.0<br>\nPython 3.6<br>\nCUDA 9.0<br>\nNvidia Geforce 1070</p>", "body_text": "Issue description\nWhen indexing a part of the tensor, the entire original tensor is saved.\nCode example\nimport torch\norigin = torch.FloatTensor(128, 512, 7, 7) # original tensor (shape: [128, 512, 7, 7])\nindexed = origin[0] # part of tensor (shape: [512, 7, 7])\ntorch.save(indexed, 'tensor.pth') # save tensor\n\nI expect that divided tensors will be stored. (It will be about 100KB)\nHowever, it is actually stored in the original matrix size. (Approximately 12MB)\nSystem Info\nPyTorch\nconda\nWindows 10\n0.4.0\nPython 3.6\nCUDA 9.0\nNvidia Geforce 1070", "body": "## Issue description\r\nWhen indexing a part of the tensor, the entire original tensor is saved.\r\n\r\n## Code example\r\n\r\n```\r\nimport torch\r\norigin = torch.FloatTensor(128, 512, 7, 7) # original tensor (shape: [128, 512, 7, 7])\r\nindexed = origin[0] # part of tensor (shape: [512, 7, 7])\r\ntorch.save(indexed, 'tensor.pth') # save tensor\r\n```\r\n\r\nI expect that divided tensors will be stored. (It will be about 100KB)\r\nHowever, it is actually stored in the original matrix size. (Approximately 12MB)\r\n\r\n## System Info\r\n\r\nPyTorch\r\nconda\r\nWindows 10\r\n0.4.0\r\nPython 3.6\r\nCUDA 9.0\r\nNvidia Geforce 1070"}