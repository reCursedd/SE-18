{"url": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/133526724", "pull_request_review_id": 56718714, "id": 133526724, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEzMzUyNjcyNA==", "diff_hunk": "@@ -19,75 +19,75 @@\n static pthread_mutex_t ptm = PTHREAD_MUTEX_INITIALIZER;\n #endif\n \n-void THAtomicSet(int volatile *a, int newvalue)\n+void THAtomicSet(int32_t volatile *a, int32_t newvalue)\n {\n #if defined(USE_C11_ATOMICS)\n   atomic_store(a, newvalue);\n #elif defined(USE_MSC_ATOMICS)\n-  assert(sizeof(int) == sizeof(long));\n-  _InterlockedExchange((long*)a, newvalue);\n+  assert(sizeof(int) == sizeof(int32_t));\n+  _InterlockedExchange((int32_t*)a, newvalue);\n #elif defined(USE_GCC_ATOMICS)\n   __sync_lock_test_and_set(a, newvalue);\n #else\n-  int oldvalue;\n+  int32_t oldvalue;\n   do {\n     oldvalue = *a;\n   } while (!THAtomicCompareAndSwap(a, oldvalue, newvalue));\n #endif\n }\n \n-int THAtomicGet(int volatile *a)\n+int THAtomicGet(int32_t volatile *a)\n {\n #if defined(USE_C11_ATOMICS)\n   return atomic_load(a);\n #else\n-  int value;\n+  int32_t value;\n   do {\n     value = *a;\n   } while (!THAtomicCompareAndSwap(a, value, value));\n   return value;\n #endif\n }\n \n-int THAtomicAdd(int volatile *a, int value)\n+int THAtomicAdd(int32_t volatile *a, int32_t value)\n {\n #if defined(USE_C11_ATOMICS)\n   return atomic_fetch_add(a, value);\n #elif defined(USE_MSC_ATOMICS)\n-  assert(sizeof(int) == sizeof(long));\n-  return _InterlockedExchangeAdd((long*)a, value);\n+  //assert(sizeof(int32_t) == sizeof(long));", "path": "torch/lib/TH/THAtomic.c", "position": null, "original_position": 48, "commit_id": "4609829ec57137223226ed65eb8f39941da335b9", "original_commit_id": "fa3926b1fdc0b2ceb882fe2b14b935b5a95eac71", "user": {"login": "fmassa", "id": 9110200, "node_id": "MDQ6VXNlcjkxMTAyMDA=", "avatar_url": "https://avatars2.githubusercontent.com/u/9110200?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fmassa", "html_url": "https://github.com/fmassa", "followers_url": "https://api.github.com/users/fmassa/followers", "following_url": "https://api.github.com/users/fmassa/following{/other_user}", "gists_url": "https://api.github.com/users/fmassa/gists{/gist_id}", "starred_url": "https://api.github.com/users/fmassa/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fmassa/subscriptions", "organizations_url": "https://api.github.com/users/fmassa/orgs", "repos_url": "https://api.github.com/users/fmassa/repos", "events_url": "https://api.github.com/users/fmassa/events{/privacy}", "received_events_url": "https://api.github.com/users/fmassa/received_events", "type": "User", "site_admin": false}, "body": "we can probably remove this comment", "created_at": "2017-08-16T18:16:54Z", "updated_at": "2018-11-23T15:34:23Z", "html_url": "https://github.com/pytorch/pytorch/pull/2439#discussion_r133526724", "pull_request_url": "https://api.github.com/repos/pytorch/pytorch/pulls/2439", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/133526724"}, "html": {"href": "https://github.com/pytorch/pytorch/pull/2439#discussion_r133526724"}, "pull_request": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/2439"}}, "body_html": "<p>we can probably remove this comment</p>", "body_text": "we can probably remove this comment"}