{"url": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/133531617", "pull_request_review_id": 56718714, "id": 133531617, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEzMzUzMTYxNw==", "diff_hunk": "@@ -193,18 +193,19 @@ void THTensor_(multinomialAliasSetup)(THTensor *probs, THLongTensor *J, THTensor\n }\n void THTensor_(multinomialAliasDraw)(THLongTensor *self, THGenerator *_generator, THLongTensor *J, THTensor *q)\n {\n-  long K = THLongTensor_nElement(J);\n-  long output_nelem = THLongTensor_nElement(self);\n-  \n-  int i = 0, _mask=0;\n+  int64_t K = THLongTensor_nElement(J);\n+  int64_t output_nelem = THLongTensor_nElement(self);\n+  int64_t i = 0, _mask=0;\n   real _q;\n-  long rand_ind, sample_idx, J_sample, kk_sample;\n-  for(i=0; i< output_nelem; i++)\n+  int64_t rand_ind, sample_idx, J_sample, kk_sample;\n+\n+  for (i=0; i < output_nelem; i++)\n     {\n-      rand_ind = (long)THRandom_uniform(_generator, 0, K) ;\n+      rand_ind = THRandom_uniform(_generator, 0, K);\n+\n       _q = THTensor_fastGet1d(q, rand_ind);\n \n-      _mask = THRandom_bernoulli(_generator, _q);\n+      _mask = (int) THRandom_bernoulli(_generator, _q);", "path": "torch/lib/TH/generic/THTensorRandom.c", "position": null, "original_position": 138, "commit_id": "4609829ec57137223226ed65eb8f39941da335b9", "original_commit_id": "fa3926b1fdc0b2ceb882fe2b14b935b5a95eac71", "user": {"login": "fmassa", "id": 9110200, "node_id": "MDQ6VXNlcjkxMTAyMDA=", "avatar_url": "https://avatars2.githubusercontent.com/u/9110200?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fmassa", "html_url": "https://github.com/fmassa", "followers_url": "https://api.github.com/users/fmassa/followers", "following_url": "https://api.github.com/users/fmassa/following{/other_user}", "gists_url": "https://api.github.com/users/fmassa/gists{/gist_id}", "starred_url": "https://api.github.com/users/fmassa/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fmassa/subscriptions", "organizations_url": "https://api.github.com/users/fmassa/orgs", "repos_url": "https://api.github.com/users/fmassa/repos", "events_url": "https://api.github.com/users/fmassa/events{/privacy}", "received_events_url": "https://api.github.com/users/fmassa/received_events", "type": "User", "site_admin": false}, "body": "`_mask` is a `int64_t`, so no need for the casting I think", "created_at": "2017-08-16T18:36:06Z", "updated_at": "2018-11-23T15:34:23Z", "html_url": "https://github.com/pytorch/pytorch/pull/2439#discussion_r133531617", "pull_request_url": "https://api.github.com/repos/pytorch/pytorch/pulls/2439", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/133531617"}, "html": {"href": "https://github.com/pytorch/pytorch/pull/2439#discussion_r133531617"}, "pull_request": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/2439"}}, "body_html": "<p><code>_mask</code> is a <code>int64_t</code>, so no need for the casting I think</p>", "body_text": "_mask is a int64_t, so no need for the casting I think"}