{"url": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/202521903", "pull_request_review_id": 137245279, "id": 202521903, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwMjUyMTkwMw==", "diff_hunk": "@@ -3,14 +3,98 @@\n #include <memory>\n #include <stddef.h>\n \n-#include \"ATen/Retainable.h\"\n+#include <ATen/Error.h>\n+#include <ATen/Retainable.h>\n+#include <ATen/Device.h>\n+#include <ATen/detail/UniqueVoidPtr.h>\n \n namespace at {\n \n+// A DataPtr is a unique pointer (with an attached deleter and some\n+// context for the deleter) to some memory, which also records what\n+// device is for its data.\n+//\n+// nullptr DataPtrs can still have a nontrivial device; this allows\n+// us to treat zero-size allocations uniformly with non-zero allocations.\n+//\n+class DataPtr {\n+private:\n+  detail::UniqueVoidPtr ptr_;\n+  Device device_;\n+public:\n+  // Choice of CPU here is arbitrary; if there's an \"undefined\" device\n+  // we could use that too\n+  DataPtr() : ptr_(), device_(kCPU) {}", "path": "aten/src/ATen/Allocator.h", "position": 26, "original_position": 26, "commit_id": "ebbe7907bc313f1d259d85e91bcb72ebafbfd252", "original_commit_id": "220cf252ae3ce3c77aabec8ae5ee7f8c477f5167", "user": {"login": "ezyang", "id": 13564, "node_id": "MDQ6VXNlcjEzNTY0", "avatar_url": "https://avatars0.githubusercontent.com/u/13564?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ezyang", "html_url": "https://github.com/ezyang", "followers_url": "https://api.github.com/users/ezyang/followers", "following_url": "https://api.github.com/users/ezyang/following{/other_user}", "gists_url": "https://api.github.com/users/ezyang/gists{/gist_id}", "starred_url": "https://api.github.com/users/ezyang/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ezyang/subscriptions", "organizations_url": "https://api.github.com/users/ezyang/orgs", "repos_url": "https://api.github.com/users/ezyang/repos", "events_url": "https://api.github.com/users/ezyang/events{/privacy}", "received_events_url": "https://api.github.com/users/ezyang/received_events", "type": "User", "site_admin": false}, "body": "Ah yes. I guess we should have a more in-depth conversation with @goldsborough about this.", "created_at": "2018-07-14T18:23:11Z", "updated_at": "2018-11-23T15:47:26Z", "html_url": "https://github.com/pytorch/pytorch/pull/9358#discussion_r202521903", "pull_request_url": "https://api.github.com/repos/pytorch/pytorch/pulls/9358", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/202521903"}, "html": {"href": "https://github.com/pytorch/pytorch/pull/9358#discussion_r202521903"}, "pull_request": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/9358"}}, "body_html": "<p>Ah yes. I guess we should have a more in-depth conversation with <a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=6429851\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/goldsborough\">@goldsborough</a> about this.</p>", "body_text": "Ah yes. I guess we should have a more in-depth conversation with @goldsborough about this.", "in_reply_to_id": 202473879}