{"url": "https://api.github.com/repos/pytorch/pytorch/issues/1294", "repository_url": "https://api.github.com/repos/pytorch/pytorch", "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/1294/labels{/name}", "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/1294/comments", "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/1294/events", "html_url": "https://github.com/pytorch/pytorch/issues/1294", "id": 222701938, "node_id": "MDU6SXNzdWUyMjI3MDE5Mzg=", "number": 1294, "title": "Possible bug when combining numpy function with Variable() ", "user": {"login": "manuelhaussmann", "id": 1485045, "node_id": "MDQ6VXNlcjE0ODUwNDU=", "avatar_url": "https://avatars3.githubusercontent.com/u/1485045?v=4", "gravatar_id": "", "url": "https://api.github.com/users/manuelhaussmann", "html_url": "https://github.com/manuelhaussmann", "followers_url": "https://api.github.com/users/manuelhaussmann/followers", "following_url": "https://api.github.com/users/manuelhaussmann/following{/other_user}", "gists_url": "https://api.github.com/users/manuelhaussmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/manuelhaussmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/manuelhaussmann/subscriptions", "organizations_url": "https://api.github.com/users/manuelhaussmann/orgs", "repos_url": "https://api.github.com/users/manuelhaussmann/repos", "events_url": "https://api.github.com/users/manuelhaussmann/events{/privacy}", "received_events_url": "https://api.github.com/users/manuelhaussmann/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-04-19T11:09:59Z", "updated_at": "2017-04-19T15:48:06Z", "closed_at": "2017-04-19T15:48:06Z", "author_association": "NONE", "body_html": "<p>Pytorch shows the following inconsistent behaviour.</p>\n<div class=\"highlight highlight-source-python\"><pre><span class=\"pl-k\">import</span> numpy <span class=\"pl-k\">as</span> np\n<span class=\"pl-k\">import</span> torch\n<span class=\"pl-k\">from</span> torch.autograd <span class=\"pl-k\">import</span> Variable\n\n<span class=\"pl-c1\">1.0</span> <span class=\"pl-k\">+</span> Variable(torch.ones(<span class=\"pl-c1\">1</span>)) \n<span class=\"pl-c\"><span class=\"pl-c\">#</span> returns as expected</span>\n<span class=\"pl-c\"><span class=\"pl-c\">#</span> Variable containing:</span>\n<span class=\"pl-c\"><span class=\"pl-c\">#</span>  2</span>\n<span class=\"pl-c\"><span class=\"pl-c\">#</span> [torch.FloatTensor of size 1]</span>\n\nnp.sum(<span class=\"pl-c1\">1.0</span>) <span class=\"pl-k\">+</span> Variable(torch.ones(<span class=\"pl-c1\">1</span>)) \n<span class=\"pl-c\"><span class=\"pl-c\">#</span> returns an unexpected (depth of array is 32)</span>\n<span class=\"pl-c\"><span class=\"pl-c\">#</span> array([[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[Variable containing:</span>\n<span class=\"pl-c\"><span class=\"pl-c\">#</span>  2</span>\n<span class=\"pl-c\"><span class=\"pl-c\">#</span> [torch.FloatTensor of size 1]</span>\n<span class=\"pl-c\"><span class=\"pl-c\">#</span> ]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]], dtype=object)</span>\n\n<span class=\"pl-c\"><span class=\"pl-c\">#</span> Switching their order </span>\nVariable(torch.ones(<span class=\"pl-c1\">1</span>)) <span class=\"pl-k\">+</span> np.sum(<span class=\"pl-c1\">1.0</span>)\n<span class=\"pl-c\"><span class=\"pl-c\">#</span> returns the expected</span>\n<span class=\"pl-c\"><span class=\"pl-c\">#</span> Variable containing:</span>\n<span class=\"pl-c\"><span class=\"pl-c\">#</span>  2</span>\n<span class=\"pl-c\"><span class=\"pl-c\">#</span> [torch.FloatTensor of size 1]</span></pre></div>", "body_text": "Pytorch shows the following inconsistent behaviour.\nimport numpy as np\nimport torch\nfrom torch.autograd import Variable\n\n1.0 + Variable(torch.ones(1)) \n# returns as expected\n# Variable containing:\n#  2\n# [torch.FloatTensor of size 1]\n\nnp.sum(1.0) + Variable(torch.ones(1)) \n# returns an unexpected (depth of array is 32)\n# array([[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[Variable containing:\n#  2\n# [torch.FloatTensor of size 1]\n# ]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]], dtype=object)\n\n# Switching their order \nVariable(torch.ones(1)) + np.sum(1.0)\n# returns the expected\n# Variable containing:\n#  2\n# [torch.FloatTensor of size 1]", "body": "Pytorch shows the following inconsistent behaviour.\r\n\r\n```python\r\nimport numpy as np\r\nimport torch\r\nfrom torch.autograd import Variable\r\n\r\n1.0 + Variable(torch.ones(1)) \r\n# returns as expected\r\n# Variable containing:\r\n#  2\r\n# [torch.FloatTensor of size 1]\r\n\r\nnp.sum(1.0) + Variable(torch.ones(1)) \r\n# returns an unexpected (depth of array is 32)\r\n# array([[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[Variable containing:\r\n#  2\r\n# [torch.FloatTensor of size 1]\r\n# ]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]], dtype=object)\r\n\r\n# Switching their order \r\nVariable(torch.ones(1)) + np.sum(1.0)\r\n# returns the expected\r\n# Variable containing:\r\n#  2\r\n# [torch.FloatTensor of size 1]\r\n```"}