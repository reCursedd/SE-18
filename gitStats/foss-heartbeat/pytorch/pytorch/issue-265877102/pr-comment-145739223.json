{"url": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/145739223", "pull_request_review_id": 70574035, "id": 145739223, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE0NTczOTIyMw==", "diff_hunk": "@@ -138,10 +161,21 @@\n # base at::Type\n FALLTHROUGH_RETURN_TYPES = {'int64_t', 'void*', 'bool', 'IntList'}\n FALLTHROUGH_FUNCTIONS = {\n-    'eye', 'linspace', 'logspace', 'tensor', 'ones', 'ones_like', 'rand',\n-    'randn' 'randperm', 'range', 'tensor', 'zeros', 'zeros_like',\n+    'arange', 'eye', 'linspace', 'logspace', 'tensor', 'ones', 'ones_like',\n+    'rand', 'randn', 'randperm', 'range', 'tensor', 'uniform', 'zeros',\n+    'zeros_like', 'set_',\n+    # these are only implemented on integral types", "path": "tools/autograd/gen_variable_type.py", "position": 160, "original_position": 156, "commit_id": "937212b9a919339d4afaede4b277e3fd8ae015d0", "original_commit_id": "cca8b80fd3e352fb955f416bee80b010797bf102", "user": {"login": "colesbury", "id": 655866, "node_id": "MDQ6VXNlcjY1NTg2Ng==", "avatar_url": "https://avatars1.githubusercontent.com/u/655866?v=4", "gravatar_id": "", "url": "https://api.github.com/users/colesbury", "html_url": "https://github.com/colesbury", "followers_url": "https://api.github.com/users/colesbury/followers", "following_url": "https://api.github.com/users/colesbury/following{/other_user}", "gists_url": "https://api.github.com/users/colesbury/gists{/gist_id}", "starred_url": "https://api.github.com/users/colesbury/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/colesbury/subscriptions", "organizations_url": "https://api.github.com/users/colesbury/orgs", "repos_url": "https://api.github.com/users/colesbury/repos", "events_url": "https://api.github.com/users/colesbury/events{/privacy}", "received_events_url": "https://api.github.com/users/colesbury/received_events", "type": "User", "site_admin": false}, "body": "I don't understand the question. TH throws an exception if you call these on non-integral types:\r\nhttps://github.com/pytorch/pytorch/blob/7fd6fd6d8035afd2c9e0ec2cb30772dd0d6a85e3/torch/lib/TH/generic/THTensorMath.c#L1121\r\n\r\nSince they don't work on floating point types we don't have to worry about derivatives and can just fall through to the base implementation.\r\n\r\nThere's a comment here because they're different than the above functions which are mostly tensor constructors.", "created_at": "2017-10-19T15:38:34Z", "updated_at": "2018-11-23T15:35:29Z", "html_url": "https://github.com/pytorch/pytorch/pull/3136#discussion_r145739223", "pull_request_url": "https://api.github.com/repos/pytorch/pytorch/pulls/3136", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/145739223"}, "html": {"href": "https://github.com/pytorch/pytorch/pull/3136#discussion_r145739223"}, "pull_request": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/3136"}}, "body_html": "<p>I don't understand the question. TH throws an exception if you call these on non-integral types:<br>\n<div class=\"border rounded-1 my-2\">\n  <div class=\"f6 px-3 py-2 lh-condensed border-bottom bg-gray-light\">\n    <p class=\"mb-0 text-bold\">\n      <a href=\"https://github.com/pytorch/pytorch/blob/7fd6fd6d8035afd2c9e0ec2cb30772dd0d6a85e3/torch/lib/TH/generic/THTensorMath.c#L1121\">pytorch/torch/lib/TH/generic/THTensorMath.c</a>\n    </p>\n    <p class=\"mb-0 text-gray-light\">\n         Line 1121\n      in\n      <a data-pjax=\"true\" class=\"commit-tease-sha\" href=\"/pytorch/pytorch/commit/7fd6fd6d8035afd2c9e0ec2cb30772dd0d6a85e3\">7fd6fd6</a>\n    </p>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper blob-wrapper-embedded data\">\n    <table class=\"highlight tab-size mb-0 js-file-line-container\" data-tab-size=\"8\">\n\n        <tbody><tr class=\"border-0\">\n          <td id=\"L1121\" class=\"blob-num border-0 px-3 py-0 bg-white js-line-number\" data-line-number=\"1121\"></td>\n          <td id=\"LC1121\" class=\"blob-code border-0 px-3 py-0 bg-white blob-code-inner js-file-line\"> <span class=\"pl-k\">return</span> <span class=\"pl-c1\">THError</span>(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>cbitand is only supported for integer type tensors<span class=\"pl-pds\">\"</span></span>); </td>\n        </tr>\n    </tbody></table>\n  </div>\n</div>\n</p>\n<p>Since they don't work on floating point types we don't have to worry about derivatives and can just fall through to the base implementation.</p>\n<p>There's a comment here because they're different than the above functions which are mostly tensor constructors.</p>", "body_text": "I don't understand the question. TH throws an exception if you call these on non-integral types:\n\n  \n    \n      pytorch/torch/lib/TH/generic/THTensorMath.c\n    \n    \n         Line 1121\n      in\n      7fd6fd6\n    \n    \n    \n    \n\n        \n          \n           return THError(\"cbitand is only supported for integer type tensors\"); \n        \n    \n  \n\n\nSince they don't work on floating point types we don't have to worry about derivatives and can just fall through to the base implementation.\nThere's a comment here because they're different than the above functions which are mostly tensor constructors.", "in_reply_to_id": 145614627}