{"url": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/145620324", "pull_request_review_id": 69941978, "id": 145620324, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE0NTYyMDMyNA==", "diff_hunk": "@@ -502,17 +686,28 @@ def load_aten_declarations(path):\n         declaration['api_name'] = declaration['name']\n         declaration['return_type'] = format_return_type(declaration['returns'])\n \n+        declaration['base_name'] = declaration['name']\n+\n+        # if the return value is missing a name, call it 'output'\n+        for ret in declaration['returns']:\n+            if 'name' not in ret:\n+                assert len(declaration['returns']) == 1\n+                ret['name'] = 'result'\n+\n         # Compute the Python function prototype for argument parsing\n         typed_args = []\n         positional = True\n         for arg in declaration['arguments']:\n             if arg.get('kwarg_only', False) and positional:\n                 typed_args.append('*')\n                 positional = False\n-            param = arg['simple_type'] + ' ' + arg['name']\n+            typename = arg['simple_type']\n+            if arg.get('size') is not None:\n+                typename = '{}[{}]'.format(typename, arg['size'])\n+            param = typename + ' ' + arg['name']\n             if arg.get('default') is not None:\n                 default = arg['default']\n-                if default == 'nullptr':\n+                if default == 'nullptr' or default == '{}':", "path": "tools/autograd/gen_variable_type.py", "position": 891, "original_position": 876, "commit_id": "937212b9a919339d4afaede4b277e3fd8ae015d0", "original_commit_id": "cca8b80fd3e352fb955f416bee80b010797bf102", "user": {"login": "apaszke", "id": 4583066, "node_id": "MDQ6VXNlcjQ1ODMwNjY=", "avatar_url": "https://avatars3.githubusercontent.com/u/4583066?v=4", "gravatar_id": "", "url": "https://api.github.com/users/apaszke", "html_url": "https://github.com/apaszke", "followers_url": "https://api.github.com/users/apaszke/followers", "following_url": "https://api.github.com/users/apaszke/following{/other_user}", "gists_url": "https://api.github.com/users/apaszke/gists{/gist_id}", "starred_url": "https://api.github.com/users/apaszke/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/apaszke/subscriptions", "organizations_url": "https://api.github.com/users/apaszke/orgs", "repos_url": "https://api.github.com/users/apaszke/repos", "events_url": "https://api.github.com/users/apaszke/events{/privacy}", "received_events_url": "https://api.github.com/users/apaszke/received_events", "type": "User", "site_admin": false}, "body": "what's a `{}` default? Is it an uninitialized Tensor?", "created_at": "2017-10-19T07:41:54Z", "updated_at": "2018-11-23T15:35:26Z", "html_url": "https://github.com/pytorch/pytorch/pull/3136#discussion_r145620324", "pull_request_url": "https://api.github.com/repos/pytorch/pytorch/pulls/3136", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/145620324"}, "html": {"href": "https://github.com/pytorch/pytorch/pull/3136#discussion_r145620324"}, "pull_request": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/3136"}}, "body_html": "<p>what's a <code>{}</code> default? Is it an uninitialized Tensor?</p>", "body_text": "what's a {} default? Is it an uninitialized Tensor?"}