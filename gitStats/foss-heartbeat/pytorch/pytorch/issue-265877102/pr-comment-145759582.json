{"url": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/145759582", "pull_request_review_id": 70574035, "id": 145759582, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE0NTc1OTU4Mg==", "diff_hunk": "@@ -917,11 +912,22 @@ PyMODINIT_FUNC PyInit__C()\n   ASSERT_TRUE(PyModule_AddObject(module, \"default_generator\", (PyObject*)THPDefaultGenerator) == 0);\n \n #ifdef WITH_NUMPY\n-  import_array();\n+  if (_import_array() < 0) return NULL;", "path": "torch/csrc/Module.cpp", "position": 53, "original_position": 53, "commit_id": "937212b9a919339d4afaede4b277e3fd8ae015d0", "original_commit_id": "cca8b80fd3e352fb955f416bee80b010797bf102", "user": {"login": "colesbury", "id": 655866, "node_id": "MDQ6VXNlcjY1NTg2Ng==", "avatar_url": "https://avatars1.githubusercontent.com/u/655866?v=4", "gravatar_id": "", "url": "https://api.github.com/users/colesbury", "html_url": "https://github.com/colesbury", "followers_url": "https://api.github.com/users/colesbury/followers", "following_url": "https://api.github.com/users/colesbury/following{/other_user}", "gists_url": "https://api.github.com/users/colesbury/gists{/gist_id}", "starred_url": "https://api.github.com/users/colesbury/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/colesbury/subscriptions", "organizations_url": "https://api.github.com/users/colesbury/orgs", "repos_url": "https://api.github.com/users/colesbury/repos", "events_url": "https://api.github.com/users/colesbury/events{/privacy}", "received_events_url": "https://api.github.com/users/colesbury/received_events", "type": "User", "site_admin": false}, "body": "Two reasons:\r\n\r\n1. I changed the return type to `PyObject*` so that we can use `HANDLE_TH_ERRORS` even in Python 2. `import_array()` is a macro whose return type depends on the Python version.\r\n\r\n2. We could have used `import_array1()` which has the desired return type, but it hides the detailed error messages from `_import_array` with a generic \"numpy.core.multiarray failed to import\". This function doesn't usually fail, but when it does the original error message is more helpful.", "created_at": "2017-10-19T16:53:42Z", "updated_at": "2018-11-23T15:35:30Z", "html_url": "https://github.com/pytorch/pytorch/pull/3136#discussion_r145759582", "pull_request_url": "https://api.github.com/repos/pytorch/pytorch/pulls/3136", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/145759582"}, "html": {"href": "https://github.com/pytorch/pytorch/pull/3136#discussion_r145759582"}, "pull_request": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/3136"}}, "body_html": "<p>Two reasons:</p>\n<ol>\n<li>\n<p>I changed the return type to <code>PyObject*</code> so that we can use <code>HANDLE_TH_ERRORS</code> even in Python 2. <code>import_array()</code> is a macro whose return type depends on the Python version.</p>\n</li>\n<li>\n<p>We could have used <code>import_array1()</code> which has the desired return type, but it hides the detailed error messages from <code>_import_array</code> with a generic \"numpy.core.multiarray failed to import\". This function doesn't usually fail, but when it does the original error message is more helpful.</p>\n</li>\n</ol>", "body_text": "Two reasons:\n\n\nI changed the return type to PyObject* so that we can use HANDLE_TH_ERRORS even in Python 2. import_array() is a macro whose return type depends on the Python version.\n\n\nWe could have used import_array1() which has the desired return type, but it hides the detailed error messages from _import_array with a generic \"numpy.core.multiarray failed to import\". This function doesn't usually fail, but when it does the original error message is more helpful.", "in_reply_to_id": 145387814}