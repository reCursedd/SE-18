{"url": "https://api.github.com/repos/pytorch/pytorch/issues/6229", "repository_url": "https://api.github.com/repos/pytorch/pytorch", "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/6229/labels{/name}", "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/6229/comments", "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/6229/events", "html_url": "https://github.com/pytorch/pytorch/pull/6229", "id": 310870781, "node_id": "MDExOlB1bGxSZXF1ZXN0MTc5MTI0MjI4", "number": 6229, "title": "Fix sharing of empty tensor in multiprocessing", "user": {"login": "zou3519", "id": 5652049, "node_id": "MDQ6VXNlcjU2NTIwNDk=", "avatar_url": "https://avatars3.githubusercontent.com/u/5652049?v=4", "gravatar_id": "", "url": "https://api.github.com/users/zou3519", "html_url": "https://github.com/zou3519", "followers_url": "https://api.github.com/users/zou3519/followers", "following_url": "https://api.github.com/users/zou3519/following{/other_user}", "gists_url": "https://api.github.com/users/zou3519/gists{/gist_id}", "starred_url": "https://api.github.com/users/zou3519/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/zou3519/subscriptions", "organizations_url": "https://api.github.com/users/zou3519/orgs", "repos_url": "https://api.github.com/users/zou3519/repos", "events_url": "https://api.github.com/users/zou3519/events{/privacy}", "received_events_url": "https://api.github.com/users/zou3519/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2018-04-03T14:52:10Z", "updated_at": "2018-04-03T15:49:41Z", "closed_at": "2018-04-03T15:49:41Z", "author_association": "CONTRIBUTOR", "pull_request": {"url": "https://api.github.com/repos/pytorch/pytorch/pulls/6229", "html_url": "https://github.com/pytorch/pytorch/pull/6229", "diff_url": "https://github.com/pytorch/pytorch/pull/6229.diff", "patch_url": "https://github.com/pytorch/pytorch/pull/6229.patch"}, "body_html": "<p><span class=\"issue-keyword tooltipped tooltipped-se\" aria-label=\"This pull request closes issue #5719.\">Fixes</span> <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load issue title\" data-id=\"304542129\" data-permission-text=\"Issue title is private\" data-url=\"https://github.com/pytorch/pytorch/issues/5719\" data-hovercard-type=\"issue\" data-hovercard-url=\"/pytorch/pytorch/issues/5719/hovercard\" href=\"https://github.com/pytorch/pytorch/issues/5719\">#5719</a></p>\n<p>Previously, the following would error out with an \"Invalid file<br>\ndescriptor\" error:</p>\n<pre><code>import torch\nimport torch.multiprocessing as mp\n\nq = mp.Queue()\nt = torch.tensor([])\nq.put(t)\n</code></pre>\n<p>on some OSes. The problem was that because one cannot mmap data of size<br>\n0, and that an empty tensor has a storage of size 0, the file descriptor<br>\nfor the storage (referencing shared memory) was not being set. The<br>\nmultiprocessing sharing code then calls DupFD on that uninitialized file<br>\ndescriptor, leading to an error.</p>\n<p>This PR special cases sharing an empty tensor on the CPU. CUDA does not<br>\nhave this problem.</p>\n<p>cc <a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=655866\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/colesbury\">@colesbury</a></p>\n<h3>Test Plan</h3>\n<p>Unit tests for both cpu and cuda empty tensors</p>", "body_text": "Fixes #5719\nPreviously, the following would error out with an \"Invalid file\ndescriptor\" error:\nimport torch\nimport torch.multiprocessing as mp\n\nq = mp.Queue()\nt = torch.tensor([])\nq.put(t)\n\non some OSes. The problem was that because one cannot mmap data of size\n0, and that an empty tensor has a storage of size 0, the file descriptor\nfor the storage (referencing shared memory) was not being set. The\nmultiprocessing sharing code then calls DupFD on that uninitialized file\ndescriptor, leading to an error.\nThis PR special cases sharing an empty tensor on the CPU. CUDA does not\nhave this problem.\ncc @colesbury\nTest Plan\nUnit tests for both cpu and cuda empty tensors", "body": "Fixes #5719\r\n\r\nPreviously, the following would error out with an \"Invalid file\r\ndescriptor\" error:\r\n```\r\nimport torch\r\nimport torch.multiprocessing as mp\r\n\r\nq = mp.Queue()\r\nt = torch.tensor([])\r\nq.put(t)\r\n```\r\non some OSes. The problem was that because one cannot mmap data of size\r\n0, and that an empty tensor has a storage of size 0, the file descriptor\r\nfor the storage (referencing shared memory) was not being set. The\r\nmultiprocessing sharing code then calls DupFD on that uninitialized file\r\ndescriptor, leading to an error.\r\n\r\nThis PR special cases sharing an empty tensor on the CPU. CUDA does not\r\nhave this problem.\r\n\r\ncc @colesbury \r\n\r\n### Test Plan\r\nUnit tests for both cpu and cuda empty tensors\r\n\r\n"}