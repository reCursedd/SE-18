{"url": "https://api.github.com/repos/pytorch/pytorch/issues/comments/309000233", "html_url": "https://github.com/pytorch/pytorch/issues/884#issuecomment-309000233", "issue_url": "https://api.github.com/repos/pytorch/pytorch/issues/884", "id": 309000233, "node_id": "MDEyOklzc3VlQ29tbWVudDMwOTAwMDIzMw==", "user": {"login": "vlasenkov", "id": 13369474, "node_id": "MDQ6VXNlcjEzMzY5NDc0", "avatar_url": "https://avatars3.githubusercontent.com/u/13369474?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vlasenkov", "html_url": "https://github.com/vlasenkov", "followers_url": "https://api.github.com/users/vlasenkov/followers", "following_url": "https://api.github.com/users/vlasenkov/following{/other_user}", "gists_url": "https://api.github.com/users/vlasenkov/gists{/gist_id}", "starred_url": "https://api.github.com/users/vlasenkov/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vlasenkov/subscriptions", "organizations_url": "https://api.github.com/users/vlasenkov/orgs", "repos_url": "https://api.github.com/users/vlasenkov/repos", "events_url": "https://api.github.com/users/vlasenkov/events{/privacy}", "received_events_url": "https://api.github.com/users/vlasenkov/received_events", "type": "User", "site_admin": false}, "created_at": "2017-06-16T11:15:06Z", "updated_at": "2017-06-16T11:19:21Z", "author_association": "CONTRIBUTOR", "body_html": "<p>It seems that with just wrapping <code>THStorage</code> proper in memory sharing is impossible on OS X. Signature of the method: <code>from_buffer(filename, shared, size, shared_mem)</code> (same as <a href=\"https://github.com/torch/torch7/blob/master/doc/storage.md#torchtypestoragefilename--shared--size--sharedmem\">here</a>).  On Linux one can do this:</p>\n<pre><code>s1 = torch.FloatStorage.from_file(filename, True, size, True)\ns2 = torch.FloatStorage.from_file('/dev/shm/' + filename, True, size, False)\n</code></pre>\n<p>OS X has no anything analogous to '/dev/shm/'. So in order to use in memory sharing:</p>\n<pre><code>s1 = torch.FloatStorage.from_file(filename, True, size, True)\ns2 = torch.FloatStorage.from_file(filename, True, size, True)\n</code></pre>\n<p>But this crashes when attempting to unlink the memory twice:</p>\n<pre><code>del s1\ndel s2\n</code></pre>\n<p>The question is whether to correct <code>torch/lib</code>? Or implement <code>shared_mem</code> argument for Linux only.</p>", "body_text": "It seems that with just wrapping THStorage proper in memory sharing is impossible on OS X. Signature of the method: from_buffer(filename, shared, size, shared_mem) (same as here).  On Linux one can do this:\ns1 = torch.FloatStorage.from_file(filename, True, size, True)\ns2 = torch.FloatStorage.from_file('/dev/shm/' + filename, True, size, False)\n\nOS X has no anything analogous to '/dev/shm/'. So in order to use in memory sharing:\ns1 = torch.FloatStorage.from_file(filename, True, size, True)\ns2 = torch.FloatStorage.from_file(filename, True, size, True)\n\nBut this crashes when attempting to unlink the memory twice:\ndel s1\ndel s2\n\nThe question is whether to correct torch/lib? Or implement shared_mem argument for Linux only.", "body": "It seems that with just wrapping `THStorage` proper in memory sharing is impossible on OS X. Signature of the method: `from_buffer(filename, shared, size, shared_mem)` (same as [here](https://github.com/torch/torch7/blob/master/doc/storage.md#torchtypestoragefilename--shared--size--sharedmem)).  On Linux one can do this:\r\n```\r\ns1 = torch.FloatStorage.from_file(filename, True, size, True)\r\ns2 = torch.FloatStorage.from_file('/dev/shm/' + filename, True, size, False)\r\n```\r\nOS X has no anything analogous to '/dev/shm/'. So in order to use in memory sharing:\r\n```\r\ns1 = torch.FloatStorage.from_file(filename, True, size, True)\r\ns2 = torch.FloatStorage.from_file(filename, True, size, True)\r\n```\r\nBut this crashes when attempting to unlink the memory twice:\r\n```\r\ndel s1\r\ndel s2\r\n```\r\nThe question is whether to correct `torch/lib`? Or implement `shared_mem` argument for Linux only."}