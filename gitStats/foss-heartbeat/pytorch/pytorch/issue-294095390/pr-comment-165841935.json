{"url": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/165841935", "pull_request_review_id": 93842516, "id": 165841935, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE2NTg0MTkzNQ==", "diff_hunk": "@@ -0,0 +1,53 @@\n+#pragma once\n+\n+#include <cstdint>\n+#include <functional>\n+#include <memory>\n+\n+#include \"torch/csrc/utils/hash.h\"\n+\n+namespace torch {\n+namespace autograd {\n+\n+class Function;\n+\n+/// Represents a particular input of a function.\n+struct Edge {\n+  explicit Edge(\n+      const std::shared_ptr<Function>& function_ = nullptr,\n+      uint32_t input_nr_ = 0)", "path": "torch/csrc/autograd/edge.h", "position": null, "original_position": 18, "commit_id": "62b9f8f91783f6a3fc51a5447e0e94e49d8e15de", "original_commit_id": "a5410f7184dfdb2bc926dfb70bbbad7d03263885", "user": {"login": "apaszke", "id": 4583066, "node_id": "MDQ6VXNlcjQ1ODMwNjY=", "avatar_url": "https://avatars3.githubusercontent.com/u/4583066?v=4", "gravatar_id": "", "url": "https://api.github.com/users/apaszke", "html_url": "https://github.com/apaszke", "followers_url": "https://api.github.com/users/apaszke/followers", "following_url": "https://api.github.com/users/apaszke/following{/other_user}", "gists_url": "https://api.github.com/users/apaszke/gists{/gist_id}", "starred_url": "https://api.github.com/users/apaszke/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/apaszke/subscriptions", "organizations_url": "https://api.github.com/users/apaszke/orgs", "repos_url": "https://api.github.com/users/apaszke/repos", "events_url": "https://api.github.com/users/apaszke/events{/privacy}", "received_events_url": "https://api.github.com/users/apaszke/received_events", "type": "User", "site_admin": false}, "body": "Also, it's better to take the shared pointer as a value - otherwise you make an unnecessary copy e.g. in `gradient_edge()`. I'm also a bit concerned that this commit might increase the atomic instruction pressure. In general it would be better to have Variables keep an `Edge` and return a reference when asking for it. Otherwise if you do `if (var.grad_edge() != ...)` you're temporarily increfing a shared pointer, just to decref it right after the comparison", "created_at": "2018-02-04T11:47:52Z", "updated_at": "2018-11-23T15:39:05Z", "html_url": "https://github.com/pytorch/pytorch/pull/5030#discussion_r165841935", "pull_request_url": "https://api.github.com/repos/pytorch/pytorch/pulls/5030", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/165841935"}, "html": {"href": "https://github.com/pytorch/pytorch/pull/5030#discussion_r165841935"}, "pull_request": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/5030"}}, "body_html": "<p>Also, it's better to take the shared pointer as a value - otherwise you make an unnecessary copy e.g. in <code>gradient_edge()</code>. I'm also a bit concerned that this commit might increase the atomic instruction pressure. In general it would be better to have Variables keep an <code>Edge</code> and return a reference when asking for it. Otherwise if you do <code>if (var.grad_edge() != ...)</code> you're temporarily increfing a shared pointer, just to decref it right after the comparison</p>", "body_text": "Also, it's better to take the shared pointer as a value - otherwise you make an unnecessary copy e.g. in gradient_edge(). I'm also a bit concerned that this commit might increase the atomic instruction pressure. In general it would be better to have Variables keep an Edge and return a reference when asking for it. Otherwise if you do if (var.grad_edge() != ...) you're temporarily increfing a shared pointer, just to decref it right after the comparison", "in_reply_to_id": 165841739}