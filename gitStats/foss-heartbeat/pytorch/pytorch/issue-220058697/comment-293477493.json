{"url": "https://api.github.com/repos/pytorch/pytorch/issues/comments/293477493", "html_url": "https://github.com/pytorch/pytorch/pull/1205#issuecomment-293477493", "issue_url": "https://api.github.com/repos/pytorch/pytorch/issues/1205", "id": 293477493, "node_id": "MDEyOklzc3VlQ29tbWVudDI5MzQ3NzQ5Mw==", "user": {"login": "dnouri", "id": 56370, "node_id": "MDQ6VXNlcjU2Mzcw", "avatar_url": "https://avatars3.githubusercontent.com/u/56370?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dnouri", "html_url": "https://github.com/dnouri", "followers_url": "https://api.github.com/users/dnouri/followers", "following_url": "https://api.github.com/users/dnouri/following{/other_user}", "gists_url": "https://api.github.com/users/dnouri/gists{/gist_id}", "starred_url": "https://api.github.com/users/dnouri/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dnouri/subscriptions", "organizations_url": "https://api.github.com/users/dnouri/orgs", "repos_url": "https://api.github.com/users/dnouri/repos", "events_url": "https://api.github.com/users/dnouri/events{/privacy}", "received_events_url": "https://api.github.com/users/dnouri/received_events", "type": "User", "site_admin": false}, "created_at": "2017-04-12T05:27:28Z", "updated_at": "2017-04-12T05:27:28Z", "author_association": "NONE", "body_html": "<p>Today I ran into the same issue that this PR tries to fix, and unknowingly submitted on my own PR in <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load issue title\" data-id=\"221148427\" data-permission-text=\"Issue title is private\" data-url=\"https://github.com/pytorch/pytorch/issues/1239\" data-hovercard-type=\"pull_request\" data-hovercard-url=\"/pytorch/pytorch/pull/1239/hovercard\" href=\"https://github.com/pytorch/pytorch/pull/1239\">#1239</a>.  I find the suggested change quite useful, and consider it an improvement to the current code which allows (single) variables or lists of variables and picks out the first item for hooking if list.</p>\n<p><a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=4583066\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/apaszke\">@apaszke</a></p>\n<blockquote>\n<p>We don't need all outputs to register the hooks properly, one is enough.</p>\n</blockquote>\n<p>Can you clarify why this is true?</p>\n<blockquote>\n<p>However this PR won't really fix it. If you're going to return such dict: <code>{'a': output, 'b': 4}</code>, then in different interpreter runs the hash seeds will be different, and the first element of the <code>.values()</code> will be either 4 or <code>output</code>, so the code will randomly crash from time to time.</p>\n</blockquote>\n<p>If <code>module.forward()</code> returns a list or a dict, can we not assume that all items are variables?  If not, is it better to filter non-variable items and hook the rest, instead of hooking just the first element.  (Again, I'm probably missing why the first element is enough.)</p>", "body_text": "Today I ran into the same issue that this PR tries to fix, and unknowingly submitted on my own PR in #1239.  I find the suggested change quite useful, and consider it an improvement to the current code which allows (single) variables or lists of variables and picks out the first item for hooking if list.\n@apaszke\n\nWe don't need all outputs to register the hooks properly, one is enough.\n\nCan you clarify why this is true?\n\nHowever this PR won't really fix it. If you're going to return such dict: {'a': output, 'b': 4}, then in different interpreter runs the hash seeds will be different, and the first element of the .values() will be either 4 or output, so the code will randomly crash from time to time.\n\nIf module.forward() returns a list or a dict, can we not assume that all items are variables?  If not, is it better to filter non-variable items and hook the rest, instead of hooking just the first element.  (Again, I'm probably missing why the first element is enough.)", "body": "Today I ran into the same issue that this PR tries to fix, and unknowingly submitted on my own PR in #1239.  I find the suggested change quite useful, and consider it an improvement to the current code which allows (single) variables or lists of variables and picks out the first item for hooking if list.\r\n\r\n@apaszke \r\n> We don't need all outputs to register the hooks properly, one is enough.\r\n\r\nCan you clarify why this is true?\r\n\r\n> However this PR won't really fix it. If you're going to return such dict: `{'a': output, 'b': 4}`, then in different interpreter runs the hash seeds will be different, and the first element of the `.values()` will be either 4 or `output`, so the code will randomly crash from time to time.\r\n\r\nIf `module.forward()` returns a list or a dict, can we not assume that all items are variables?  If not, is it better to filter non-variable items and hook the rest, instead of hooking just the first element.  (Again, I'm probably missing why the first element is enough.)"}