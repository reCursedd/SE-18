{"url": "https://api.github.com/repos/pytorch/pytorch/issues/comments/292808442", "html_url": "https://github.com/pytorch/pytorch/pull/1205#issuecomment-292808442", "issue_url": "https://api.github.com/repos/pytorch/pytorch/issues/1205", "id": 292808442, "node_id": "MDEyOklzc3VlQ29tbWVudDI5MjgwODQ0Mg==", "user": {"login": "apaszke", "id": 4583066, "node_id": "MDQ6VXNlcjQ1ODMwNjY=", "avatar_url": "https://avatars3.githubusercontent.com/u/4583066?v=4", "gravatar_id": "", "url": "https://api.github.com/users/apaszke", "html_url": "https://github.com/apaszke", "followers_url": "https://api.github.com/users/apaszke/followers", "following_url": "https://api.github.com/users/apaszke/following{/other_user}", "gists_url": "https://api.github.com/users/apaszke/gists{/gist_id}", "starred_url": "https://api.github.com/users/apaszke/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/apaszke/subscriptions", "organizations_url": "https://api.github.com/users/apaszke/orgs", "repos_url": "https://api.github.com/users/apaszke/repos", "events_url": "https://api.github.com/users/apaszke/events{/privacy}", "received_events_url": "https://api.github.com/users/apaszke/received_events", "type": "User", "site_admin": false}, "created_at": "2017-04-09T19:51:49Z", "updated_at": "2017-04-09T19:51:49Z", "author_association": "MEMBER", "body_html": "<p>We don't need all outputs to register the hooks properly, one is enough. However this PR won't really fix it. If you're going to return such dict: <code>{'a': output, 'b': 4}</code>, then in different interpreter runs the hash seeds will be different, and the first element of the <code>.values()</code> will be either 4 or <code>output</code>, so the code will randomly crash from time to time. I think we'll just need to add some additional functionality to autograd so we can track the outputs properly, and remove any constraints on the inputs and outputs to the modules. But that's out of scope for this PR.</p>", "body_text": "We don't need all outputs to register the hooks properly, one is enough. However this PR won't really fix it. If you're going to return such dict: {'a': output, 'b': 4}, then in different interpreter runs the hash seeds will be different, and the first element of the .values() will be either 4 or output, so the code will randomly crash from time to time. I think we'll just need to add some additional functionality to autograd so we can track the outputs properly, and remove any constraints on the inputs and outputs to the modules. But that's out of scope for this PR.", "body": "We don't need all outputs to register the hooks properly, one is enough. However this PR won't really fix it. If you're going to return such dict: `{'a': output, 'b': 4}`, then in different interpreter runs the hash seeds will be different, and the first element of the `.values()` will be either 4 or `output`, so the code will randomly crash from time to time. I think we'll just need to add some additional functionality to autograd so we can track the outputs properly, and remove any constraints on the inputs and outputs to the modules. But that's out of scope for this PR."}