{"url": "https://api.github.com/repos/pytorch/pytorch/issues/comments/419341792", "html_url": "https://github.com/pytorch/pytorch/issues/10532#issuecomment-419341792", "issue_url": "https://api.github.com/repos/pytorch/pytorch/issues/10532", "id": 419341792, "node_id": "MDEyOklzc3VlQ29tbWVudDQxOTM0MTc5Mg==", "user": {"login": "SsnL", "id": 5674597, "node_id": "MDQ6VXNlcjU2NzQ1OTc=", "avatar_url": "https://avatars2.githubusercontent.com/u/5674597?v=4", "gravatar_id": "", "url": "https://api.github.com/users/SsnL", "html_url": "https://github.com/SsnL", "followers_url": "https://api.github.com/users/SsnL/followers", "following_url": "https://api.github.com/users/SsnL/following{/other_user}", "gists_url": "https://api.github.com/users/SsnL/gists{/gist_id}", "starred_url": "https://api.github.com/users/SsnL/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/SsnL/subscriptions", "organizations_url": "https://api.github.com/users/SsnL/orgs", "repos_url": "https://api.github.com/users/SsnL/repos", "events_url": "https://api.github.com/users/SsnL/events{/privacy}", "received_events_url": "https://api.github.com/users/SsnL/received_events", "type": "User", "site_admin": false}, "created_at": "2018-09-07T06:54:57Z", "updated_at": "2018-09-15T21:16:18Z", "author_association": "CONTRIBUTOR", "body_html": "<p>Here is the original repro (or just find any VGG net and replace BN with IN):</p>\n<div class=\"highlight highlight-source-python\"><pre><span class=\"pl-k\">import</span> torch\n<span class=\"pl-k\">import</span> torch.nn <span class=\"pl-k\">as</span> nn\n\nnet <span class=\"pl-k\">=</span> nn.Sequential(\n  nn.InstanceNorm2d(<span class=\"pl-c1\">3</span>),\n  nn.ReLU(<span class=\"pl-c1\">True</span>),\n  nn.MaxPool2d(<span class=\"pl-c1\">2</span>)\n)\n\nx <span class=\"pl-k\">=</span> torch.randn(<span class=\"pl-c1\">1</span>, <span class=\"pl-c1\">3</span>, <span class=\"pl-c1\">3</span>, <span class=\"pl-c1\">3</span>, <span class=\"pl-v\">requires_grad</span><span class=\"pl-k\">=</span><span class=\"pl-c1\">True</span>)\n\ng, <span class=\"pl-k\">=</span> torch.autograd.grad(net(x).sum(), [x], <span class=\"pl-v\">create_graph</span><span class=\"pl-k\">=</span><span class=\"pl-c1\">True</span>)\ntorch.autograd.grad(g.sum(), [x])</pre></div>", "body_text": "Here is the original repro (or just find any VGG net and replace BN with IN):\nimport torch\nimport torch.nn as nn\n\nnet = nn.Sequential(\n  nn.InstanceNorm2d(3),\n  nn.ReLU(True),\n  nn.MaxPool2d(2)\n)\n\nx = torch.randn(1, 3, 3, 3, requires_grad=True)\n\ng, = torch.autograd.grad(net(x).sum(), [x], create_graph=True)\ntorch.autograd.grad(g.sum(), [x])", "body": "Here is the original repro (or just find any VGG net and replace BN with IN):\r\n```py\r\nimport torch\r\nimport torch.nn as nn\r\n\r\nnet = nn.Sequential(\r\n  nn.InstanceNorm2d(3),\r\n  nn.ReLU(True),\r\n  nn.MaxPool2d(2)\r\n)\r\n\r\nx = torch.randn(1, 3, 3, 3, requires_grad=True)\r\n\r\ng, = torch.autograd.grad(net(x).sum(), [x], create_graph=True)\r\ntorch.autograd.grad(g.sum(), [x])\r\n```"}