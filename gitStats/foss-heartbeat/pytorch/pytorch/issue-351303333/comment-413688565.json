{"url": "https://api.github.com/repos/pytorch/pytorch/issues/comments/413688565", "html_url": "https://github.com/pytorch/pytorch/issues/10586#issuecomment-413688565", "issue_url": "https://api.github.com/repos/pytorch/pytorch/issues/10586", "id": 413688565, "node_id": "MDEyOklzc3VlQ29tbWVudDQxMzY4ODU2NQ==", "user": {"login": "colesbury", "id": 655866, "node_id": "MDQ6VXNlcjY1NTg2Ng==", "avatar_url": "https://avatars1.githubusercontent.com/u/655866?v=4", "gravatar_id": "", "url": "https://api.github.com/users/colesbury", "html_url": "https://github.com/colesbury", "followers_url": "https://api.github.com/users/colesbury/followers", "following_url": "https://api.github.com/users/colesbury/following{/other_user}", "gists_url": "https://api.github.com/users/colesbury/gists{/gist_id}", "starred_url": "https://api.github.com/users/colesbury/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/colesbury/subscriptions", "organizations_url": "https://api.github.com/users/colesbury/orgs", "repos_url": "https://api.github.com/users/colesbury/repos", "events_url": "https://api.github.com/users/colesbury/events{/privacy}", "received_events_url": "https://api.github.com/users/colesbury/received_events", "type": "User", "site_admin": false}, "created_at": "2018-08-16T21:21:16Z", "updated_at": "2018-08-16T21:51:35Z", "author_association": "MEMBER", "body_html": "<p>The issue is that the returned value <code>out</code> is treated as a view since the last operation is a viewing operation. I'm not sure how we should fix it, but the work around is to just return:</p>\n<pre><code>return out.clone().transpose(-1, 1).detach()\n</code></pre>", "body_text": "The issue is that the returned value out is treated as a view since the last operation is a viewing operation. I'm not sure how we should fix it, but the work around is to just return:\nreturn out.clone().transpose(-1, 1).detach()", "body": "The issue is that the returned value `out` is treated as a view since the last operation is a viewing operation. I'm not sure how we should fix it, but the work around is to just return:\r\n\r\n```\r\nreturn out.clone().transpose(-1, 1).detach()\r\n```"}