{"url": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/217432872", "pull_request_review_id": 155143288, "id": 217432872, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIxNzQzMjg3Mg==", "diff_hunk": "@@ -169,8 +169,11 @@ def precision_matrix(self):\n \n     def rsample(self, sample_shape=torch.Size()):\n         shape = self._extended_shape(sample_shape)\n-        eps_W = self.loc.new_empty(shape[:-1] + (self.cov_factor.size(-1),)).normal_()\n-        eps_D = self.loc.new_empty(shape).normal_()\n+        zero = self.loc.new_tensor(0.)\n+        one = self.loc.new_tensor(1.)\n+        W_shape = shape[:-1] + self.cov_factor.shape[-1:]\n+        eps_W = torch.normal(zero.expand(W_shape), one.expand(W_shape))", "path": "torch/distributions/lowrank_multivariate_normal.py", "position": null, "original_position": 9, "commit_id": "cf132fce4d6bf01d9033ac82c8de6d62c168f150", "original_commit_id": "232f2e0e6e7ff4f7badf4496fee2840e739b3b57", "user": {"login": "neerajprad", "id": 1762463, "node_id": "MDQ6VXNlcjE3NjI0NjM=", "avatar_url": "https://avatars3.githubusercontent.com/u/1762463?v=4", "gravatar_id": "", "url": "https://api.github.com/users/neerajprad", "html_url": "https://github.com/neerajprad", "followers_url": "https://api.github.com/users/neerajprad/followers", "following_url": "https://api.github.com/users/neerajprad/following{/other_user}", "gists_url": "https://api.github.com/users/neerajprad/gists{/gist_id}", "starred_url": "https://api.github.com/users/neerajprad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/neerajprad/subscriptions", "organizations_url": "https://api.github.com/users/neerajprad/orgs", "repos_url": "https://api.github.com/users/neerajprad/repos", "events_url": "https://api.github.com/users/neerajprad/events{/privacy}", "received_events_url": "https://api.github.com/users/neerajprad/received_events", "type": "User", "site_admin": false}, "body": "nit: can we use the `torch.zeros(W_shape, dtype=..,device=..)` idiom here (and other variants of normal) instead, to avoid non contiguous parameters, when possible?", "created_at": "2018-09-13T15:36:21Z", "updated_at": "2018-11-23T15:51:16Z", "html_url": "https://github.com/pytorch/pytorch/pull/11560#discussion_r217432872", "pull_request_url": "https://api.github.com/repos/pytorch/pytorch/pulls/11560", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/217432872"}, "html": {"href": "https://github.com/pytorch/pytorch/pull/11560#discussion_r217432872"}, "pull_request": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/11560"}}, "body_html": "<p>nit: can we use the <code>torch.zeros(W_shape, dtype=..,device=..)</code> idiom here (and other variants of normal) instead, to avoid non contiguous parameters, when possible?</p>", "body_text": "nit: can we use the torch.zeros(W_shape, dtype=..,device=..) idiom here (and other variants of normal) instead, to avoid non contiguous parameters, when possible?"}