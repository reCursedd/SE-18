{"url": "https://api.github.com/repos/pytorch/pytorch/issues/5945", "repository_url": "https://api.github.com/repos/pytorch/pytorch", "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/5945/labels{/name}", "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/5945/comments", "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/5945/events", "html_url": "https://github.com/pytorch/pytorch/pull/5945", "id": 307749334, "node_id": "MDExOlB1bGxSZXF1ZXN0MTc2ODU5MDk4", "number": 5945, "title": "Fix tensor.permute(dims) backward for negative dims", "user": {"login": "zou3519", "id": 5652049, "node_id": "MDQ6VXNlcjU2NTIwNDk=", "avatar_url": "https://avatars3.githubusercontent.com/u/5652049?v=4", "gravatar_id": "", "url": "https://api.github.com/users/zou3519", "html_url": "https://github.com/zou3519", "followers_url": "https://api.github.com/users/zou3519/followers", "following_url": "https://api.github.com/users/zou3519/following{/other_user}", "gists_url": "https://api.github.com/users/zou3519/gists{/gist_id}", "starred_url": "https://api.github.com/users/zou3519/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/zou3519/subscriptions", "organizations_url": "https://api.github.com/users/zou3519/orgs", "repos_url": "https://api.github.com/users/zou3519/repos", "events_url": "https://api.github.com/users/zou3519/events{/privacy}", "received_events_url": "https://api.github.com/users/zou3519/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2018-03-22T17:47:13Z", "updated_at": "2018-03-22T20:30:56Z", "closed_at": "2018-03-22T20:30:55Z", "author_association": "CONTRIBUTOR", "pull_request": {"url": "https://api.github.com/repos/pytorch/pytorch/pulls/5945", "html_url": "https://github.com/pytorch/pytorch/pull/5945", "diff_url": "https://github.com/pytorch/pytorch/pull/5945.diff", "patch_url": "https://github.com/pytorch/pytorch/pull/5945.patch"}, "body_html": "<p><span class=\"issue-keyword tooltipped tooltipped-se\" aria-label=\"This pull request closes issue #5943.\">Fixes</span> <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load issue title\" data-id=\"307722496\" data-permission-text=\"Issue title is private\" data-url=\"https://github.com/pytorch/pytorch/issues/5943\" data-hovercard-type=\"issue\" data-hovercard-url=\"/pytorch/pytorch/issues/5943/hovercard\" href=\"https://github.com/pytorch/pytorch/issues/5943\">#5943</a></p>\n<p>For the following code:</p>\n<pre><code>import torch\n\nu = torch.zeros((3, 3), requires_grad=True)\nv = u.permute(-1, -2)  # (1, 0) here is fine\nv.sum().backward()\n</code></pre>\n<p>during the backward pass, a std::vector is constructed<br>\nas an \"inverse\" of the permutation. To do this, all the dims<br>\nare indexed into the vector.</p>\n<p>The problem with that is that the negative dims were being indexed<br>\ninto the std::vector, causing undefined behavior. This PR wraps<br>\nthose negative dims so they're handled correctly.</p>\n<p>cc <a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=655866\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/colesbury\">@colesbury</a></p>\n<h3>Test Plan</h3>\n<p>new unit test</p>", "body_text": "Fixes #5943\nFor the following code:\nimport torch\n\nu = torch.zeros((3, 3), requires_grad=True)\nv = u.permute(-1, -2)  # (1, 0) here is fine\nv.sum().backward()\n\nduring the backward pass, a std::vector is constructed\nas an \"inverse\" of the permutation. To do this, all the dims\nare indexed into the vector.\nThe problem with that is that the negative dims were being indexed\ninto the std::vector, causing undefined behavior. This PR wraps\nthose negative dims so they're handled correctly.\ncc @colesbury\nTest Plan\nnew unit test", "body": "Fixes #5943\r\n\r\nFor the following code:\r\n```\r\nimport torch\r\n\r\nu = torch.zeros((3, 3), requires_grad=True)\r\nv = u.permute(-1, -2)  # (1, 0) here is fine\r\nv.sum().backward()\r\n```\r\n\r\nduring the backward pass, a std::vector is constructed\r\nas an \"inverse\" of the permutation. To do this, all the dims\r\nare indexed into the vector.\r\n\r\nThe problem with that is that the negative dims were being indexed\r\ninto the std::vector, causing undefined behavior. This PR wraps\r\nthose negative dims so they're handled correctly.\r\n\r\ncc @colesbury \r\n\r\n### Test Plan\r\nnew unit test"}