{"url": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/202519815", "pull_request_review_id": 137243088, "id": 202519815, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwMjUxOTgxNQ==", "diff_hunk": "@@ -265,73 +183,145 @@ if (NOT NO_API)\n     ${TORCH_SRC_DIR}/csrc/api/src/optim/lbfgs.cpp\n     ${TORCH_SRC_DIR}/csrc/api/src/optim/rmsprop.cpp\n     ${TORCH_SRC_DIR}/csrc/api/src/optim/sgd.cpp\n-  )\n+    )\n+\n endif()\n \n add_library(torch SHARED ${TORCH_SRCS})\n \n-# https://gcc.gnu.org/onlinedocs/gcc-4.0.3/gcc/Warning-Options.html\n-target_compile_options(torch\n-  PRIVATE\n-  -Wall\n-  -Wextra\n-  -pedantic\n-  -Wcast-align\n-  -Wcast-qual\n-  -Wctor-dtor-privacy\n-  -Wdisabled-optimization\n-  -Winit-self\n-  -Wmissing-include-dirs\n-  -Woverloaded-virtual\n-  -Wsign-promo\n-  -Wstrict-overflow=5\n-  -Wundef\n-  -fdiagnostics-show-option\n-  -Wno-unused-parameter\n-  -Wno-missing-braces # This warning is buggy\n-  -Wno-unknown-pragmas)\n-\n-if ($ENV{WERROR})\n+# until they can be unified, keep these lists synced with setup.py\n+if(MSVC)\n+  target_compile_options(torch PRIVATE\n+    /MD\n+    /Z7\n+    /EHa\n+    /DNOMINMAX\n+    /wd4267\n+    /wd4251\n+    /wd4522\n+    /wd4522\n+    /wd4838\n+    /wd4305\n+    /wd4244\n+    /wd4190\n+    /wd4101\n+    /wd4996\n+    /wd4275\n+    /bigobj\n+    )\n+else()\n+  target_compile_options(torch PRIVATE\n+    -std=c++11\n+    -Wall\n+    -Wextra\n+    -Wno-unused-parameter\n+    -Wno-missing-field-initializers\n+    -Wno-write-strings\n+#    -Wno-zero-length-array\n+    -Wno-unknown-pragmas\n+    # This is required for Python 2 declarations that are deprecated\n+    # in 3.\n+    -Wno-deprecated-declarations\n+    # Python 2.6 requires -fno-strict-aliasing see\n+    # http://legacy.python.org/dev/peps/pep-3123/ We also depend on it\n+    # in our code (even Python 3).\n+    -fno-strict-aliasing\n+    # Clang has an unfixed bug leading to spurious missing braces\n+    # warnings, see https://bugs.llvm.org/show_bug.cgi?id=21629\n+    -Wno-missing-braces\n+    )\n+endif()\n+\n+if (MSVC)\n+elseif ($ENV{WERROR})\n   target_compile_options(torch PRIVATE -Werror)\n endif()\n \n+if (MSVC)", "path": "torch/CMakeLists.txt", "position": 328, "original_position": 326, "commit_id": "e07054a285cdde51328f3e5d2c353b7e6454d6e1", "original_commit_id": "963842382881326bbc3c24988dc5f308f8eb6fe3", "user": {"login": "ezyang", "id": 13564, "node_id": "MDQ6VXNlcjEzNTY0", "avatar_url": "https://avatars0.githubusercontent.com/u/13564?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ezyang", "html_url": "https://github.com/ezyang", "followers_url": "https://api.github.com/users/ezyang/followers", "following_url": "https://api.github.com/users/ezyang/following{/other_user}", "gists_url": "https://api.github.com/users/ezyang/gists{/gist_id}", "starred_url": "https://api.github.com/users/ezyang/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ezyang/subscriptions", "organizations_url": "https://api.github.com/users/ezyang/orgs", "repos_url": "https://api.github.com/users/ezyang/repos", "events_url": "https://api.github.com/users/ezyang/events{/privacy}", "received_events_url": "https://api.github.com/users/ezyang/received_events", "type": "User", "site_admin": false}, "body": "It's better practice to not rely on implicit transitive shared libraries, even on Linux.", "created_at": "2018-07-14T16:47:37Z", "updated_at": "2018-11-23T15:47:25Z", "html_url": "https://github.com/pytorch/pytorch/pull/8792#discussion_r202519815", "pull_request_url": "https://api.github.com/repos/pytorch/pytorch/pulls/8792", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/202519815"}, "html": {"href": "https://github.com/pytorch/pytorch/pull/8792#discussion_r202519815"}, "pull_request": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/8792"}}, "body_html": "<p>It's better practice to not rely on implicit transitive shared libraries, even on Linux.</p>", "body_text": "It's better practice to not rely on implicit transitive shared libraries, even on Linux.", "in_reply_to_id": 202389522}