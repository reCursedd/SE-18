{"url": "https://api.github.com/repos/pytorch/pytorch/issues/comments/390919354", "html_url": "https://github.com/pytorch/pytorch/issues/3420#issuecomment-390919354", "issue_url": "https://api.github.com/repos/pytorch/pytorch/issues/3420", "id": 390919354, "node_id": "MDEyOklzc3VlQ29tbWVudDM5MDkxOTM1NA==", "user": {"login": "mittagessen", "id": 3780295, "node_id": "MDQ6VXNlcjM3ODAyOTU=", "avatar_url": "https://avatars2.githubusercontent.com/u/3780295?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mittagessen", "html_url": "https://github.com/mittagessen", "followers_url": "https://api.github.com/users/mittagessen/followers", "following_url": "https://api.github.com/users/mittagessen/following{/other_user}", "gists_url": "https://api.github.com/users/mittagessen/gists{/gist_id}", "starred_url": "https://api.github.com/users/mittagessen/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mittagessen/subscriptions", "organizations_url": "https://api.github.com/users/mittagessen/orgs", "repos_url": "https://api.github.com/users/mittagessen/repos", "events_url": "https://api.github.com/users/mittagessen/events{/privacy}", "received_events_url": "https://api.github.com/users/mittagessen/received_events", "type": "User", "site_admin": false}, "created_at": "2018-05-22T09:10:34Z", "updated_at": "2018-05-22T09:10:34Z", "author_association": "NONE", "body_html": "<p>Not a cuDNN implementation but the I ultimately adapted the chainer CTC as it was roughly twice as fast as my na\u00efve implementation in unnormalized log-space. It is pure python so doesn't require any compiling and can be found <a href=\"https://github.com/mittagessen/kraken/blob/master/kraken/lib/ctc.py\">here</a>. It should also be numerically identical to a standard formulation with slight differences to warp-ctc's output.</p>", "body_text": "Not a cuDNN implementation but the I ultimately adapted the chainer CTC as it was roughly twice as fast as my na\u00efve implementation in unnormalized log-space. It is pure python so doesn't require any compiling and can be found here. It should also be numerically identical to a standard formulation with slight differences to warp-ctc's output.", "body": "Not a cuDNN implementation but the I ultimately adapted the chainer CTC as it was roughly twice as fast as my na\u00efve implementation in unnormalized log-space. It is pure python so doesn't require any compiling and can be found [here](https://github.com/mittagessen/kraken/blob/master/kraken/lib/ctc.py). It should also be numerically identical to a standard formulation with slight differences to warp-ctc's output."}