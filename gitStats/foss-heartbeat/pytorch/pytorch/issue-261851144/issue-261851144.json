{"url": "https://api.github.com/repos/pytorch/pytorch/issues/2913", "repository_url": "https://api.github.com/repos/pytorch/pytorch", "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/2913/labels{/name}", "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/2913/comments", "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/2913/events", "html_url": "https://github.com/pytorch/pytorch/issues/2913", "id": 261851144, "node_id": "MDU6SXNzdWUyNjE4NTExNDQ=", "number": 2913, "title": "ONNX Alexnet Issue", "user": {"login": "michaelulin", "id": 4452086, "node_id": "MDQ6VXNlcjQ0NTIwODY=", "avatar_url": "https://avatars0.githubusercontent.com/u/4452086?v=4", "gravatar_id": "", "url": "https://api.github.com/users/michaelulin", "html_url": "https://github.com/michaelulin", "followers_url": "https://api.github.com/users/michaelulin/followers", "following_url": "https://api.github.com/users/michaelulin/following{/other_user}", "gists_url": "https://api.github.com/users/michaelulin/gists{/gist_id}", "starred_url": "https://api.github.com/users/michaelulin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/michaelulin/subscriptions", "organizations_url": "https://api.github.com/users/michaelulin/orgs", "repos_url": "https://api.github.com/users/michaelulin/repos", "events_url": "https://api.github.com/users/michaelulin/events{/privacy}", "received_events_url": "https://api.github.com/users/michaelulin/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 693805995, "node_id": "MDU6TGFiZWw2OTM4MDU5OTU=", "url": "https://api.github.com/repos/pytorch/pytorch/labels/onnx", "name": "onnx", "color": "e99695", "default": false}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2017-09-30T15:32:33Z", "updated_at": "2017-10-01T17:13:29Z", "closed_at": "2017-09-30T16:28:10Z", "author_association": "NONE", "body_html": "<p>I was trying to run the alexnet example here: <a href=\"http://pytorch.org/docs/master/onnx.html\" rel=\"nofollow\">http://pytorch.org/docs/master/onnx.html</a>, but I get the following error when I try to get the outputs from the converted Caffe2 model<br>\n<code>outputs = rep.run(np.random.randn(10, 3, 224, 224).astype(np.float32))</code></p>\n<pre><code>Traceback for operator 3 in network torch-jit-export\n---------------------------------------------------------------------------\nRuntimeError                              Traceback (most recent call last)\n&lt;ipython-input-6-4dd4fa489633&gt; in &lt;module&gt;()\n----&gt; 1 outputs = rep.run(np.random.randn(10, 3, 224, 224).astype(np.float32))\n\n/usr/local/lib/python2.7/dist-packages/onnx_caffe2/backend.pyc in run(self, inputs, **kwargs)\n    112                     workspace.FeedBlob(self.uninitialized[0], inputs)\n    113                 if not self.net_created:\n--&gt; 114                     workspace.CreateNet(predict_net)\n    115                     self.net_created = True\n    116                 workspace.RunNet(predict_net.name)\n\n/usr/local/caffe2/python/workspace.pyc in CreateNet(net, overwrite, input_blobs)\n    145         C.Workspace.current._last_failed_op_net_position,\n    146         GetNetName(net),\n--&gt; 147         StringifyProto(net), overwrite,\n    148     )\n    149 \n\n/usr/local/caffe2/python/workspace.pyc in CallWithExceptionIntercept(func, op_id_fetcher, net_name, *args, **kwargs)\n    164 def CallWithExceptionIntercept(func, op_id_fetcher, net_name, *args, **kwargs):\n    165     try:\n--&gt; 166         return func(*args, **kwargs)\n    167     except Exception:\n    168         op_id = op_id_fetcher()\n\nRuntimeError: [enforce fail at conv_pool_op_base.h:131] pads_.size() == 2 * kernel_.size(). 2 vs 4`\n\nMy code is below:\n\n`from torch.autograd import Variable\nimport torch.onnx\nimport torchvision\n\ndummy_input = Variable(torch.randn(10, 3, 224, 224)).cuda()\nmodel = torchvision.models.alexnet(pretrained=True).cuda()\ntorch.onnx.export(model, dummy_input, \"alexnet.proto\", verbose=True)\n\nimport onnx\n\ngraph = onnx.load(\"alexnet.proto\")\n\nonnx.checker.check_graph(graph)\n\nonnx.helper.printable_graph(graph)\n\nimport onnx_caffe2.backend as backend\nimport numpy as np\n\nrep = backend.prepare(graph, device=\"CUDA:0\") # or \"CPU\"\n\noutputs = rep.run(np.random.randn(10, 3, 224, 224).astype(np.float32))\n``\n</code></pre>", "body_text": "I was trying to run the alexnet example here: http://pytorch.org/docs/master/onnx.html, but I get the following error when I try to get the outputs from the converted Caffe2 model\noutputs = rep.run(np.random.randn(10, 3, 224, 224).astype(np.float32))\nTraceback for operator 3 in network torch-jit-export\n---------------------------------------------------------------------------\nRuntimeError                              Traceback (most recent call last)\n<ipython-input-6-4dd4fa489633> in <module>()\n----> 1 outputs = rep.run(np.random.randn(10, 3, 224, 224).astype(np.float32))\n\n/usr/local/lib/python2.7/dist-packages/onnx_caffe2/backend.pyc in run(self, inputs, **kwargs)\n    112                     workspace.FeedBlob(self.uninitialized[0], inputs)\n    113                 if not self.net_created:\n--> 114                     workspace.CreateNet(predict_net)\n    115                     self.net_created = True\n    116                 workspace.RunNet(predict_net.name)\n\n/usr/local/caffe2/python/workspace.pyc in CreateNet(net, overwrite, input_blobs)\n    145         C.Workspace.current._last_failed_op_net_position,\n    146         GetNetName(net),\n--> 147         StringifyProto(net), overwrite,\n    148     )\n    149 \n\n/usr/local/caffe2/python/workspace.pyc in CallWithExceptionIntercept(func, op_id_fetcher, net_name, *args, **kwargs)\n    164 def CallWithExceptionIntercept(func, op_id_fetcher, net_name, *args, **kwargs):\n    165     try:\n--> 166         return func(*args, **kwargs)\n    167     except Exception:\n    168         op_id = op_id_fetcher()\n\nRuntimeError: [enforce fail at conv_pool_op_base.h:131] pads_.size() == 2 * kernel_.size(). 2 vs 4`\n\nMy code is below:\n\n`from torch.autograd import Variable\nimport torch.onnx\nimport torchvision\n\ndummy_input = Variable(torch.randn(10, 3, 224, 224)).cuda()\nmodel = torchvision.models.alexnet(pretrained=True).cuda()\ntorch.onnx.export(model, dummy_input, \"alexnet.proto\", verbose=True)\n\nimport onnx\n\ngraph = onnx.load(\"alexnet.proto\")\n\nonnx.checker.check_graph(graph)\n\nonnx.helper.printable_graph(graph)\n\nimport onnx_caffe2.backend as backend\nimport numpy as np\n\nrep = backend.prepare(graph, device=\"CUDA:0\") # or \"CPU\"\n\noutputs = rep.run(np.random.randn(10, 3, 224, 224).astype(np.float32))\n``", "body": "I was trying to run the alexnet example here: http://pytorch.org/docs/master/onnx.html, but I get the following error when I try to get the outputs from the converted Caffe2 model\r\n`outputs = rep.run(np.random.randn(10, 3, 224, 224).astype(np.float32))`\r\n\r\n```\r\nTraceback for operator 3 in network torch-jit-export\r\n---------------------------------------------------------------------------\r\nRuntimeError                              Traceback (most recent call last)\r\n<ipython-input-6-4dd4fa489633> in <module>()\r\n----> 1 outputs = rep.run(np.random.randn(10, 3, 224, 224).astype(np.float32))\r\n\r\n/usr/local/lib/python2.7/dist-packages/onnx_caffe2/backend.pyc in run(self, inputs, **kwargs)\r\n    112                     workspace.FeedBlob(self.uninitialized[0], inputs)\r\n    113                 if not self.net_created:\r\n--> 114                     workspace.CreateNet(predict_net)\r\n    115                     self.net_created = True\r\n    116                 workspace.RunNet(predict_net.name)\r\n\r\n/usr/local/caffe2/python/workspace.pyc in CreateNet(net, overwrite, input_blobs)\r\n    145         C.Workspace.current._last_failed_op_net_position,\r\n    146         GetNetName(net),\r\n--> 147         StringifyProto(net), overwrite,\r\n    148     )\r\n    149 \r\n\r\n/usr/local/caffe2/python/workspace.pyc in CallWithExceptionIntercept(func, op_id_fetcher, net_name, *args, **kwargs)\r\n    164 def CallWithExceptionIntercept(func, op_id_fetcher, net_name, *args, **kwargs):\r\n    165     try:\r\n--> 166         return func(*args, **kwargs)\r\n    167     except Exception:\r\n    168         op_id = op_id_fetcher()\r\n\r\nRuntimeError: [enforce fail at conv_pool_op_base.h:131] pads_.size() == 2 * kernel_.size(). 2 vs 4`\r\n\r\nMy code is below:\r\n\r\n`from torch.autograd import Variable\r\nimport torch.onnx\r\nimport torchvision\r\n\r\ndummy_input = Variable(torch.randn(10, 3, 224, 224)).cuda()\r\nmodel = torchvision.models.alexnet(pretrained=True).cuda()\r\ntorch.onnx.export(model, dummy_input, \"alexnet.proto\", verbose=True)\r\n\r\nimport onnx\r\n\r\ngraph = onnx.load(\"alexnet.proto\")\r\n\r\nonnx.checker.check_graph(graph)\r\n\r\nonnx.helper.printable_graph(graph)\r\n\r\nimport onnx_caffe2.backend as backend\r\nimport numpy as np\r\n\r\nrep = backend.prepare(graph, device=\"CUDA:0\") # or \"CPU\"\r\n\r\noutputs = rep.run(np.random.randn(10, 3, 224, 224).astype(np.float32))\r\n``"}