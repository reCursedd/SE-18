{"url": "https://api.github.com/repos/pytorch/pytorch/issues/comments/407498190", "html_url": "https://github.com/pytorch/pytorch/issues/9760#issuecomment-407498190", "issue_url": "https://api.github.com/repos/pytorch/pytorch/issues/9760", "id": 407498190, "node_id": "MDEyOklzc3VlQ29tbWVudDQwNzQ5ODE5MA==", "user": {"login": "zdevito", "id": 370202, "node_id": "MDQ6VXNlcjM3MDIwMg==", "avatar_url": "https://avatars0.githubusercontent.com/u/370202?v=4", "gravatar_id": "", "url": "https://api.github.com/users/zdevito", "html_url": "https://github.com/zdevito", "followers_url": "https://api.github.com/users/zdevito/followers", "following_url": "https://api.github.com/users/zdevito/following{/other_user}", "gists_url": "https://api.github.com/users/zdevito/gists{/gist_id}", "starred_url": "https://api.github.com/users/zdevito/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/zdevito/subscriptions", "organizations_url": "https://api.github.com/users/zdevito/orgs", "repos_url": "https://api.github.com/users/zdevito/repos", "events_url": "https://api.github.com/users/zdevito/events{/privacy}", "received_events_url": "https://api.github.com/users/zdevito/received_events", "type": "User", "site_admin": false}, "created_at": "2018-07-24T18:02:24Z", "updated_at": "2018-07-24T18:02:24Z", "author_association": "CONTRIBUTOR", "body_html": "<p>I think the root cause is the major problem, because it breaks the build.  But it would be a good idea to delay operator registration until it is needed anyway to lower startup times.</p>\n<p>We can make parsing lazy by:</p>\n<ol>\n<li>switching Operator to have a .schema() function, and only lazily generating the schema if initialized from a string.</li>\n<li>in registration of an operator just putting the operators in a todo list for adding to the registration map.</li>\n<li>on operator lookup, flushing the todo list of any additional operators to add before looking up the result.</li>\n</ol>", "body_text": "I think the root cause is the major problem, because it breaks the build.  But it would be a good idea to delay operator registration until it is needed anyway to lower startup times.\nWe can make parsing lazy by:\n\nswitching Operator to have a .schema() function, and only lazily generating the schema if initialized from a string.\nin registration of an operator just putting the operators in a todo list for adding to the registration map.\non operator lookup, flushing the todo list of any additional operators to add before looking up the result.", "body": "I think the root cause is the major problem, because it breaks the build.  But it would be a good idea to delay operator registration until it is needed anyway to lower startup times.\r\n\r\nWe can make parsing lazy by:\r\n\r\n1. switching Operator to have a .schema() function, and only lazily generating the schema if initialized from a string.\r\n2. in registration of an operator just putting the operators in a todo list for adding to the registration map.\r\n3. on operator lookup, flushing the todo list of any additional operators to add before looking up the result."}