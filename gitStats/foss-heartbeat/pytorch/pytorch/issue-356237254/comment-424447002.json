{"url": "https://api.github.com/repos/pytorch/pytorch/issues/comments/424447002", "html_url": "https://github.com/pytorch/pytorch/pull/11178#issuecomment-424447002", "issue_url": "https://api.github.com/repos/pytorch/pytorch/issues/11178", "id": 424447002, "node_id": "MDEyOklzc3VlQ29tbWVudDQyNDQ0NzAwMg==", "user": {"login": "fritzo", "id": 648532, "node_id": "MDQ6VXNlcjY0ODUzMg==", "avatar_url": "https://avatars0.githubusercontent.com/u/648532?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fritzo", "html_url": "https://github.com/fritzo", "followers_url": "https://api.github.com/users/fritzo/followers", "following_url": "https://api.github.com/users/fritzo/following{/other_user}", "gists_url": "https://api.github.com/users/fritzo/gists{/gist_id}", "starred_url": "https://api.github.com/users/fritzo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fritzo/subscriptions", "organizations_url": "https://api.github.com/users/fritzo/orgs", "repos_url": "https://api.github.com/users/fritzo/repos", "events_url": "https://api.github.com/users/fritzo/events{/privacy}", "received_events_url": "https://api.github.com/users/fritzo/received_events", "type": "User", "site_admin": false}, "created_at": "2018-09-25T18:13:57Z", "updated_at": "2018-09-25T18:13:57Z", "author_association": "CONTRIBUTOR", "body_html": "<p>I think there will be negligible performance benefit, since <code>Independent</code> simply calls its base dist</p>\n<div class=\"highlight highlight-source-python\"><pre>    <span class=\"pl-k\">def</span> <span class=\"pl-en\">rsample</span>(<span class=\"pl-smi\"><span class=\"pl-smi\">self</span></span>, <span class=\"pl-smi\">sample_shape</span><span class=\"pl-k\">=</span>torch.Size()):\n        <span class=\"pl-k\">return</span> <span class=\"pl-c1\">self</span>.base_dist.rsample(sample_shape)\n\n    <span class=\"pl-k\">def</span> <span class=\"pl-en\">log_prob</span>(<span class=\"pl-smi\"><span class=\"pl-smi\">self</span></span>, <span class=\"pl-smi\">value</span>):\n        log_prob <span class=\"pl-k\">=</span> <span class=\"pl-c1\">self</span>.base_dist.log_prob(value)\n        <span class=\"pl-k\">return</span> _sum_rightmost(log_prob, <span class=\"pl-c1\">self</span>.reinterpreted_batch_ndims)</pre></div>\n<p>Also IMO it is cleaner to provide a general <code>Independent</code> wrapper to create diagonal distributions of any base type, rather than implement <code>DiagNormal</code>, <code>DiagGamma</code>, <code>DiagCauchy</code>, <code>DiagBeta</code> etc. If you find <code>Independent(Normal(...), ...)</code> cumbersome, we could add a <code>Normal.independent(...)</code> method as we <a href=\"http://docs.pyro.ai/en/0.2.1-release/_modules/pyro/distributions/torch_distribution.html#TorchDistributionMixin.independent\" rel=\"nofollow\">have</a> in Pyro.</p>", "body_text": "I think there will be negligible performance benefit, since Independent simply calls its base dist\n    def rsample(self, sample_shape=torch.Size()):\n        return self.base_dist.rsample(sample_shape)\n\n    def log_prob(self, value):\n        log_prob = self.base_dist.log_prob(value)\n        return _sum_rightmost(log_prob, self.reinterpreted_batch_ndims)\nAlso IMO it is cleaner to provide a general Independent wrapper to create diagonal distributions of any base type, rather than implement DiagNormal, DiagGamma, DiagCauchy, DiagBeta etc. If you find Independent(Normal(...), ...) cumbersome, we could add a Normal.independent(...) method as we have in Pyro.", "body": "I think there will be negligible performance benefit, since `Independent` simply calls its base dist\r\n```py\r\n    def rsample(self, sample_shape=torch.Size()):\r\n        return self.base_dist.rsample(sample_shape)\r\n\r\n    def log_prob(self, value):\r\n        log_prob = self.base_dist.log_prob(value)\r\n        return _sum_rightmost(log_prob, self.reinterpreted_batch_ndims)\r\n```\r\nAlso IMO it is cleaner to provide a general `Independent` wrapper to create diagonal distributions of any base type, rather than implement `DiagNormal`, `DiagGamma`, `DiagCauchy`, `DiagBeta` etc. If you find `Independent(Normal(...), ...)` cumbersome, we could add a `Normal.independent(...)` method as we [have](http://docs.pyro.ai/en/0.2.1-release/_modules/pyro/distributions/torch_distribution.html#TorchDistributionMixin.independent) in Pyro."}