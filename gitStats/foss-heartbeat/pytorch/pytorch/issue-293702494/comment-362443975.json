{"url": "https://api.github.com/repos/pytorch/pytorch/issues/comments/362443975", "html_url": "https://github.com/pytorch/pytorch/pull/4999#issuecomment-362443975", "issue_url": "https://api.github.com/repos/pytorch/pytorch/issues/4999", "id": 362443975, "node_id": "MDEyOklzc3VlQ29tbWVudDM2MjQ0Mzk3NQ==", "user": {"login": "goldsborough", "id": 6429851, "node_id": "MDQ6VXNlcjY0Mjk4NTE=", "avatar_url": "https://avatars3.githubusercontent.com/u/6429851?v=4", "gravatar_id": "", "url": "https://api.github.com/users/goldsborough", "html_url": "https://github.com/goldsborough", "followers_url": "https://api.github.com/users/goldsborough/followers", "following_url": "https://api.github.com/users/goldsborough/following{/other_user}", "gists_url": "https://api.github.com/users/goldsborough/gists{/gist_id}", "starred_url": "https://api.github.com/users/goldsborough/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/goldsborough/subscriptions", "organizations_url": "https://api.github.com/users/goldsborough/orgs", "repos_url": "https://api.github.com/users/goldsborough/repos", "events_url": "https://api.github.com/users/goldsborough/events{/privacy}", "received_events_url": "https://api.github.com/users/goldsborough/received_events", "type": "User", "site_admin": false}, "created_at": "2018-02-02T00:09:26Z", "updated_at": "2018-02-02T00:09:26Z", "author_association": "CONTRIBUTOR", "body_html": "<p><a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=13564\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/ezyang\">@ezyang</a> I had to rename <code>async</code> to <code>non_blocking</code> in <code>torch/csrc/copy_utils.h</code> because functions in there get wrapped and called from Python, which was causing errors. I then also renamed all other occurrences thereof in the C++ code so that:</p>\n<ol>\n<li>Naming is consistent,</li>\n<li>We don't run into similar trouble in the future.</li>\n</ol>\n<p>I also don't know if some of the C++ code gets wrapped and exposed but just isn't called in the tests. Code also might get wrapped in the future, so I believe using <code>non_blocking</code> everywhere is better?</p>", "body_text": "@ezyang I had to rename async to non_blocking in torch/csrc/copy_utils.h because functions in there get wrapped and called from Python, which was causing errors. I then also renamed all other occurrences thereof in the C++ code so that:\n\nNaming is consistent,\nWe don't run into similar trouble in the future.\n\nI also don't know if some of the C++ code gets wrapped and exposed but just isn't called in the tests. Code also might get wrapped in the future, so I believe using non_blocking everywhere is better?", "body": "@ezyang I had to rename `async` to `non_blocking` in `torch/csrc/copy_utils.h` because functions in there get wrapped and called from Python, which was causing errors. I then also renamed all other occurrences thereof in the C++ code so that:\r\n1. Naming is consistent,\r\n2. We don't run into similar trouble in the future. \r\n\r\nI also don't know if some of the C++ code gets wrapped and exposed but just isn't called in the tests. Code also might get wrapped in the future, so I believe using `non_blocking` everywhere is better?"}