{"url": "https://api.github.com/repos/pytorch/pytorch/issues/4999", "repository_url": "https://api.github.com/repos/pytorch/pytorch", "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/4999/labels{/name}", "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/4999/comments", "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/4999/events", "html_url": "https://github.com/pytorch/pytorch/pull/4999", "id": 293702494, "node_id": "MDExOlB1bGxSZXF1ZXN0MTY2NjY2MzM3", "number": 4999, "title": "Replace async with non_blocking for Python 3.7", "user": {"login": "goldsborough", "id": 6429851, "node_id": "MDQ6VXNlcjY0Mjk4NTE=", "avatar_url": "https://avatars3.githubusercontent.com/u/6429851?v=4", "gravatar_id": "", "url": "https://api.github.com/users/goldsborough", "html_url": "https://github.com/goldsborough", "followers_url": "https://api.github.com/users/goldsborough/followers", "following_url": "https://api.github.com/users/goldsborough/following{/other_user}", "gists_url": "https://api.github.com/users/goldsborough/gists{/gist_id}", "starred_url": "https://api.github.com/users/goldsborough/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/goldsborough/subscriptions", "organizations_url": "https://api.github.com/users/goldsborough/orgs", "repos_url": "https://api.github.com/users/goldsborough/repos", "events_url": "https://api.github.com/users/goldsborough/events{/privacy}", "received_events_url": "https://api.github.com/users/goldsborough/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2018-02-01T22:12:33Z", "updated_at": "2018-11-23T15:38:58Z", "closed_at": "2018-02-02T14:23:52Z", "author_association": "CONTRIBUTOR", "pull_request": {"url": "https://api.github.com/repos/pytorch/pytorch/pulls/4999", "html_url": "https://github.com/pytorch/pytorch/pull/4999", "diff_url": "https://github.com/pytorch/pytorch/pull/4999.diff", "patch_url": "https://github.com/pytorch/pytorch/pull/4999.patch"}, "body_html": "<p>Since <code>async</code> will become a keyword in Python 3.7, I replaced all occurences of the word <code>async</code> with <code>non_blocking</code> in our Python files. Proof:</p>\n<pre><code>$ find . -name '*.py' | xargs grep 'async\\b'\n./aten/src/ATen/copy_wrapper.py:if (async) {\n./aten/src/ATen/copy_wrapper.py:if (async) {\n./aten/src/ATen/copy_wrapper.py:Tensor &amp; ${Type}::s_copy_(Tensor &amp; self, const Tensor &amp; src, bool async) const {\n./torch/cuda/comm.py:    # TODO: if copying to CPU, allocate a pinned buffer, do async copies to it,\n</code></pre>\n<p><code>copy_wrapper.py</code> generates C++  code, so the <code>async</code> will not be a problem. I also did not modify mentions of <code>async</code> in any other C++ files.</p>\n<p><a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=13564\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/ezyang\">@ezyang</a> <a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=655866\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/colesbury\">@colesbury</a></p>\n<p><span class=\"issue-keyword tooltipped tooltipped-se\" aria-label=\"This pull request closes issue #3431.\">Fixes</span> <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load issue title\" data-id=\"270484930\" data-permission-text=\"Issue title is private\" data-url=\"https://github.com/pytorch/pytorch/issues/3431\" data-hovercard-type=\"issue\" data-hovercard-url=\"/pytorch/pytorch/issues/3431/hovercard\" href=\"https://github.com/pytorch/pytorch/issues/3431\">#3431</a></p>", "body_text": "Since async will become a keyword in Python 3.7, I replaced all occurences of the word async with non_blocking in our Python files. Proof:\n$ find . -name '*.py' | xargs grep 'async\\b'\n./aten/src/ATen/copy_wrapper.py:if (async) {\n./aten/src/ATen/copy_wrapper.py:if (async) {\n./aten/src/ATen/copy_wrapper.py:Tensor & ${Type}::s_copy_(Tensor & self, const Tensor & src, bool async) const {\n./torch/cuda/comm.py:    # TODO: if copying to CPU, allocate a pinned buffer, do async copies to it,\n\ncopy_wrapper.py generates C++  code, so the async will not be a problem. I also did not modify mentions of async in any other C++ files.\n@ezyang @colesbury\nFixes #3431", "body": "Since `async` will become a keyword in Python 3.7, I replaced all occurences of the word `async` with `non_blocking` in our Python files. Proof:\r\n\r\n```\r\n$ find . -name '*.py' | xargs grep 'async\\b'\r\n./aten/src/ATen/copy_wrapper.py:if (async) {\r\n./aten/src/ATen/copy_wrapper.py:if (async) {\r\n./aten/src/ATen/copy_wrapper.py:Tensor & ${Type}::s_copy_(Tensor & self, const Tensor & src, bool async) const {\r\n./torch/cuda/comm.py:    # TODO: if copying to CPU, allocate a pinned buffer, do async copies to it,\r\n```\r\n\r\n`copy_wrapper.py` generates C++  code, so the `async` will not be a problem. I also did not modify mentions of `async` in any other C++ files.\r\n\r\n@ezyang @colesbury \r\n\r\nFixes https://github.com/pytorch/pytorch/issues/3431"}