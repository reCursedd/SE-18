{"url": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/98721095", "pull_request_review_id": 19371186, "id": 98721095, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDk4NzIxMDk1", "diff_hunk": "@@ -133,3 +134,76 @@ def wrap_cunn():\n         NullableArguments(),\n         AutoGPU(has_self=False),\n     ])\n+\n+GENERIC_FUNCTION_TEMPLATE = Template(\"\"\"\\\n+[[\n+  name: $name\n+  return: void\n+  options:\n+\"\"\")\n+\n+\n+def wrap_generic_function(name, backends):\n+    declaration = ''\n+    declaration += GENERIC_FUNCTION_TEMPLATE.substitute(name=name)\n+    for backend in backends:\n+        declaration += '    - cname: ' + name + '\\n'\n+        declaration += '      backend: ' + backend['name'] + '\\n'\n+        declaration += '      arguments:\\n'\n+        for arg in backend['arguments']:\n+            declaration += '       - arg: ' + arg.type + ' ' + arg.name + '\\n'\n+            if arg.is_optional:\n+                declaration += '         optional: True\\n'\n+    declaration += ']]\\n\\n\\n'\n+    return declaration\n+\n+\n+def wrap_generic():\n+    from collections import OrderedDict\n+    defs = OrderedDict()\n+\n+    def should_wrap_function(name):\n+        if name.startswith('LookupTable'):\n+            return False\n+        return (name.endswith('updateOutput') or\n+                name.endswith('updateGradInput') or\n+                name.endswith('accGradParameters') or\n+                name.endswith('backward'))\n+\n+    def add_functions(name, functions):\n+        for fn in functions:\n+            if not should_wrap_function(fn.name):\n+                continue\n+            if fn.name not in defs:\n+                defs[fn.name] = []\n+            defs[fn.name] += [{\n+                'name': name,\n+                'arguments': fn.arguments[1:],\n+            }]\n+\n+    add_functions('nn', thnn_utils.parse_header(thnn_utils.THNN_H_PATH))\n+    add_functions('cunn', thnn_utils.parse_header(thnn_utils.THCUNN_H_PATH))\n+\n+    wrapper = ''\n+    for name, backends in defs.items():\n+        wrapper += wrap_generic_function(name, backends)\n+    with open('torch/csrc/nn/THNN_generic.cwrap', 'w') as f:\n+        f.write(wrapper)\n+\n+    cwrap('torch/csrc/nn/THNN_generic.cwrap', plugins=[\n+        GenericNN(header=True),\n+    ], default_plugins=False, destination='torch/csrc/nn/THNN_generic.h')\n+\n+    cwrap('torch/csrc/nn/THNN_generic.cwrap', plugins=[\n+        GenericNN(),\n+    ], default_plugins=False)\n+\n+    def genericize_arg(arg):", "path": "tools/nnwrap/generate_wrappers.py", "position": null, "original_position": 85, "commit_id": "29b96fe2b27fa425ddce05eede9c268edcbce48a", "original_commit_id": "cbdf840311ffb3f4a83765f0e62e764d1819dc80", "user": {"login": "apaszke", "id": 4583066, "node_id": "MDQ6VXNlcjQ1ODMwNjY=", "avatar_url": "https://avatars3.githubusercontent.com/u/4583066?v=4", "gravatar_id": "", "url": "https://api.github.com/users/apaszke", "html_url": "https://github.com/apaszke", "followers_url": "https://api.github.com/users/apaszke/followers", "following_url": "https://api.github.com/users/apaszke/following{/other_user}", "gists_url": "https://api.github.com/users/apaszke/gists{/gist_id}", "starred_url": "https://api.github.com/users/apaszke/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/apaszke/subscriptions", "organizations_url": "https://api.github.com/users/apaszke/orgs", "repos_url": "https://api.github.com/users/apaszke/repos", "events_url": "https://api.github.com/users/apaszke/events{/privacy}", "received_events_url": "https://api.github.com/users/apaszke/received_events", "type": "User", "site_admin": false}, "body": "That seems unused", "created_at": "2017-01-31T17:17:33Z", "updated_at": "2018-11-23T15:32:18Z", "html_url": "https://github.com/pytorch/pytorch/pull/645#discussion_r98721095", "pull_request_url": "https://api.github.com/repos/pytorch/pytorch/pulls/645", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/98721095"}, "html": {"href": "https://github.com/pytorch/pytorch/pull/645#discussion_r98721095"}, "pull_request": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/645"}}, "body_html": "<p>That seems unused</p>", "body_text": "That seems unused"}