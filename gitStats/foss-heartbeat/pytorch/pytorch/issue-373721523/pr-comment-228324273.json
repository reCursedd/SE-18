{"url": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/228324273", "pull_request_review_id": 168573768, "id": 228324273, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIyODMyNDI3Mw==", "diff_hunk": "@@ -90,7 +105,9 @@ struct FunctionSchema {\n   // arguments are not checked by schema\n   const bool is_vararg_;\n   const bool is_varret_;\n-  const bool is_mutable_;\n+\n+  // set of alias sets in Arguments that are written to by this op\n+  const std::vector<std::string> writes_;", "path": "torch/csrc/jit/function_schema.h", "position": null, "original_position": 84, "commit_id": "b225c0b6d11439034a75afb5e5d6f554ad5cd27f", "original_commit_id": "3bba18a86ec94135c88c7bdfdb0d8f7f46cb0ec6", "user": {"login": "zdevito", "id": 370202, "node_id": "MDQ6VXNlcjM3MDIwMg==", "avatar_url": "https://avatars0.githubusercontent.com/u/370202?v=4", "gravatar_id": "", "url": "https://api.github.com/users/zdevito", "html_url": "https://github.com/zdevito", "followers_url": "https://api.github.com/users/zdevito/followers", "following_url": "https://api.github.com/users/zdevito/following{/other_user}", "gists_url": "https://api.github.com/users/zdevito/gists{/gist_id}", "starred_url": "https://api.github.com/users/zdevito/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/zdevito/subscriptions", "organizations_url": "https://api.github.com/users/zdevito/orgs", "repos_url": "https://api.github.com/users/zdevito/repos", "events_url": "https://api.github.com/users/zdevito/events{/privacy}", "received_events_url": "https://api.github.com/users/zdevito/received_events", "type": "User", "site_admin": false}, "body": "I like the vector for 2 reasons:\r\n1. under 100 or so elements it is faster than a hash table.\r\n2. it gives the writes a canonical order, which is important for writing deterministic algorithms. otherwise we would still need a vector to keep the deterministic order. \r\n\r\nRather than use the vector directly, we should add a function to the schema for the missing functionality like: `bool writesTo(std::string x)`", "created_at": "2018-10-25T20:32:29Z", "updated_at": "2018-11-23T15:53:36Z", "html_url": "https://github.com/pytorch/pytorch/pull/13093#discussion_r228324273", "pull_request_url": "https://api.github.com/repos/pytorch/pytorch/pulls/13093", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/228324273"}, "html": {"href": "https://github.com/pytorch/pytorch/pull/13093#discussion_r228324273"}, "pull_request": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/13093"}}, "body_html": "<p>I like the vector for 2 reasons:</p>\n<ol>\n<li>under 100 or so elements it is faster than a hash table.</li>\n<li>it gives the writes a canonical order, which is important for writing deterministic algorithms. otherwise we would still need a vector to keep the deterministic order.</li>\n</ol>\n<p>Rather than use the vector directly, we should add a function to the schema for the missing functionality like: <code>bool writesTo(std::string x)</code></p>", "body_text": "I like the vector for 2 reasons:\n\nunder 100 or so elements it is faster than a hash table.\nit gives the writes a canonical order, which is important for writing deterministic algorithms. otherwise we would still need a vector to keep the deterministic order.\n\nRather than use the vector directly, we should add a function to the schema for the missing functionality like: bool writesTo(std::string x)", "in_reply_to_id": 228014103}