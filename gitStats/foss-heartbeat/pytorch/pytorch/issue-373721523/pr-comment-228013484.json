{"url": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/228013484", "pull_request_review_id": 168179761, "id": 228013484, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIyODAxMzQ4NA==", "diff_hunk": "@@ -82,41 +84,53 @@ struct SchemaParser {\n     }\n     return it->second;\n   }\n-  TypePtr parseType() {\n+  static void addToWrites(std::vector<std::string>& writes, const std::string& alias_set) {\n+    auto it = std::find(writes.begin(), writes.end(), alias_set);\n+    if(it == writes.end())\n+      writes.push_back(alias_set);\n+  }\n+  TypePtr parseAliasAnnotation(TypePtr ptr, std::vector<std::string>& writes) {\n+    std::string alias_set;\n+    if(L.nextIf('(')) {\n+      // optional 'alias set annotation'\n+      alias_set = L.expect(TK_IDENT).text();\n+      if(L.nextIf('!')) {\n+        addToWrites(writes, alias_set);\n+      }\n+      L.expect(')');\n+    } else if(L.nextIf('!')) {", "path": "torch/csrc/jit/operator.cpp", "position": 58, "original_position": 54, "commit_id": "b225c0b6d11439034a75afb5e5d6f554ad5cd27f", "original_commit_id": "3bba18a86ec94135c88c7bdfdb0d8f7f46cb0ec6", "user": {"login": "suo", "id": 1617424, "node_id": "MDQ6VXNlcjE2MTc0MjQ=", "avatar_url": "https://avatars2.githubusercontent.com/u/1617424?v=4", "gravatar_id": "", "url": "https://api.github.com/users/suo", "html_url": "https://github.com/suo", "followers_url": "https://api.github.com/users/suo/followers", "following_url": "https://api.github.com/users/suo/following{/other_user}", "gists_url": "https://api.github.com/users/suo/gists{/gist_id}", "starred_url": "https://api.github.com/users/suo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/suo/subscriptions", "organizations_url": "https://api.github.com/users/suo/orgs", "repos_url": "https://api.github.com/users/suo/repos", "events_url": "https://api.github.com/users/suo/events{/privacy}", "received_events_url": "https://api.github.com/users/suo/received_events", "type": "User", "site_admin": false}, "body": "So this is to parse things like `Tensor!`? Based on `gen_jit_dispatch` it seems like the schema should always include an alias set if a write occurs (`Tensor(a!)`).", "created_at": "2018-10-25T01:57:16Z", "updated_at": "2018-11-23T15:53:32Z", "html_url": "https://github.com/pytorch/pytorch/pull/13093#discussion_r228013484", "pull_request_url": "https://api.github.com/repos/pytorch/pytorch/pulls/13093", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/228013484"}, "html": {"href": "https://github.com/pytorch/pytorch/pull/13093#discussion_r228013484"}, "pull_request": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/13093"}}, "body_html": "<p>So this is to parse things like <code>Tensor!</code>? Based on <code>gen_jit_dispatch</code> it seems like the schema should always include an alias set if a write occurs (<code>Tensor(a!)</code>).</p>", "body_text": "So this is to parse things like Tensor!? Based on gen_jit_dispatch it seems like the schema should always include an alias set if a write occurs (Tensor(a!))."}