{"url": "https://api.github.com/repos/pytorch/pytorch/issues/3709", "repository_url": "https://api.github.com/repos/pytorch/pytorch", "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/3709/labels{/name}", "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/3709/comments", "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/3709/events", "html_url": "https://github.com/pytorch/pytorch/issues/3709", "id": 274013611, "node_id": "MDU6SXNzdWUyNzQwMTM2MTE=", "number": 3709, "title": "Save encoder and decoder of an autoencoder respectively", "user": {"login": "loganXcode", "id": 15863919, "node_id": "MDQ6VXNlcjE1ODYzOTE5", "avatar_url": "https://avatars3.githubusercontent.com/u/15863919?v=4", "gravatar_id": "", "url": "https://api.github.com/users/loganXcode", "html_url": "https://github.com/loganXcode", "followers_url": "https://api.github.com/users/loganXcode/followers", "following_url": "https://api.github.com/users/loganXcode/following{/other_user}", "gists_url": "https://api.github.com/users/loganXcode/gists{/gist_id}", "starred_url": "https://api.github.com/users/loganXcode/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/loganXcode/subscriptions", "organizations_url": "https://api.github.com/users/loganXcode/orgs", "repos_url": "https://api.github.com/users/loganXcode/repos", "events_url": "https://api.github.com/users/loganXcode/events{/privacy}", "received_events_url": "https://api.github.com/users/loganXcode/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2017-11-15T02:30:51Z", "updated_at": "2017-11-15T12:29:27Z", "closed_at": "2017-11-15T12:29:27Z", "author_association": "NONE", "body_html": "<p>I have trained an autoencoder, I want to save its encoder and decoder respectively.</p>\n<p>In other words, I want to save some layers in the model instead of all layers. But it seems that torch.save can only save the entire model.</p>\n<p>Can anyone give me some suggestions or a simple example?</p>\n<p>Thank you so much.</p>\n<p>class autoencoder(nn.Module):<br>\ndef <strong>init</strong>(self):<br>\nsuper(autoencoder, self).<strong>init</strong>()<br>\nself.encoder = nn.Sequential(<br>\nnn.Conv2d(1, 16, 3, stride=3, padding=1),  # b, 16, 10, 10<br>\nnn.ReLU(True),<br>\nnn.MaxPool2d(2, stride=2),  # b, 16, 5, 5<br>\nnn.Conv2d(16, 8, 3, stride=2, padding=1),  # b, 8, 3, 3<br>\nnn.ReLU(True),<br>\nnn.MaxPool2d(2, stride=1)  # b, 8, 2, 2<br>\n)<br>\nself.decoder = nn.Sequential(<br>\nnn.ConvTranspose2d(8, 16, 3, stride=2),  # b, 16, 5, 5<br>\nnn.ReLU(True),<br>\nnn.ConvTranspose2d(16, 8, 5, stride=3, padding=1),  # b, 8, 15, 15<br>\nnn.ReLU(True),<br>\nnn.ConvTranspose2d(8, 1, 2, stride=2, padding=1),  # b, 1, 28, 28<br>\nnn.Sigmoid()<br>\n)</p>\n<pre><code>def forward(self, x):\n    x = self.encoder(x)\n    x = self.decoder(x)\n    return x\n</code></pre>", "body_text": "I have trained an autoencoder, I want to save its encoder and decoder respectively.\nIn other words, I want to save some layers in the model instead of all layers. But it seems that torch.save can only save the entire model.\nCan anyone give me some suggestions or a simple example?\nThank you so much.\nclass autoencoder(nn.Module):\ndef init(self):\nsuper(autoencoder, self).init()\nself.encoder = nn.Sequential(\nnn.Conv2d(1, 16, 3, stride=3, padding=1),  # b, 16, 10, 10\nnn.ReLU(True),\nnn.MaxPool2d(2, stride=2),  # b, 16, 5, 5\nnn.Conv2d(16, 8, 3, stride=2, padding=1),  # b, 8, 3, 3\nnn.ReLU(True),\nnn.MaxPool2d(2, stride=1)  # b, 8, 2, 2\n)\nself.decoder = nn.Sequential(\nnn.ConvTranspose2d(8, 16, 3, stride=2),  # b, 16, 5, 5\nnn.ReLU(True),\nnn.ConvTranspose2d(16, 8, 5, stride=3, padding=1),  # b, 8, 15, 15\nnn.ReLU(True),\nnn.ConvTranspose2d(8, 1, 2, stride=2, padding=1),  # b, 1, 28, 28\nnn.Sigmoid()\n)\ndef forward(self, x):\n    x = self.encoder(x)\n    x = self.decoder(x)\n    return x", "body": "I have trained an autoencoder, I want to save its encoder and decoder respectively. \r\n\r\nIn other words, I want to save some layers in the model instead of all layers. But it seems that torch.save can only save the entire model.\r\n\r\nCan anyone give me some suggestions or a simple example?\r\n\r\nThank you so much.\r\n\r\nclass autoencoder(nn.Module):\r\n    def __init__(self):\r\n        super(autoencoder, self).__init__()\r\n        self.encoder = nn.Sequential(\r\n            nn.Conv2d(1, 16, 3, stride=3, padding=1),  # b, 16, 10, 10\r\n            nn.ReLU(True),\r\n            nn.MaxPool2d(2, stride=2),  # b, 16, 5, 5\r\n            nn.Conv2d(16, 8, 3, stride=2, padding=1),  # b, 8, 3, 3\r\n            nn.ReLU(True),\r\n            nn.MaxPool2d(2, stride=1)  # b, 8, 2, 2\r\n        )\r\n        self.decoder = nn.Sequential(\r\n            nn.ConvTranspose2d(8, 16, 3, stride=2),  # b, 16, 5, 5\r\n            nn.ReLU(True),\r\n            nn.ConvTranspose2d(16, 8, 5, stride=3, padding=1),  # b, 8, 15, 15\r\n            nn.ReLU(True),\r\n            nn.ConvTranspose2d(8, 1, 2, stride=2, padding=1),  # b, 1, 28, 28\r\n            nn.Sigmoid()\r\n        )\r\n\r\n    def forward(self, x):\r\n        x = self.encoder(x)\r\n        x = self.decoder(x)\r\n        return x"}