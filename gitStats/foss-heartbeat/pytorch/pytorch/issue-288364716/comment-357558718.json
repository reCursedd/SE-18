{"url": "https://api.github.com/repos/pytorch/pytorch/issues/comments/357558718", "html_url": "https://github.com/pytorch/pytorch/pull/4658#issuecomment-357558718", "issue_url": "https://api.github.com/repos/pytorch/pytorch/issues/4658", "id": 357558718, "node_id": "MDEyOklzc3VlQ29tbWVudDM1NzU1ODcxOA==", "user": {"login": "fritzo", "id": 648532, "node_id": "MDQ6VXNlcjY0ODUzMg==", "avatar_url": "https://avatars0.githubusercontent.com/u/648532?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fritzo", "html_url": "https://github.com/fritzo", "followers_url": "https://api.github.com/users/fritzo/followers", "following_url": "https://api.github.com/users/fritzo/following{/other_user}", "gists_url": "https://api.github.com/users/fritzo/gists{/gist_id}", "starred_url": "https://api.github.com/users/fritzo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fritzo/subscriptions", "organizations_url": "https://api.github.com/users/fritzo/orgs", "repos_url": "https://api.github.com/users/fritzo/repos", "events_url": "https://api.github.com/users/fritzo/events{/privacy}", "received_events_url": "https://api.github.com/users/fritzo/received_events", "type": "User", "site_admin": false}, "created_at": "2018-01-15T01:02:56Z", "updated_at": "2018-01-15T01:04:01Z", "author_association": "CONTRIBUTOR", "body_html": "<blockquote>\n<p><a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=4583066\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/apaszke\">@apaszke</a> this [logits ambiguity] is exactly why I wanted to use a different name. Calling two semantically different things the same is going to end up in an error sooner or later without a type system</p>\n</blockquote>\n<p>I hear you and I agree that <code>probs_to_logits(..., binary=False)</code> smells bad. I still feel like it's worth maintaining compatibility with Tensorflow arguments despite their loose naming.</p>\n<p>If do want to change, I think the minimal path would be to change <code>Categorical</code>, <code>OneHotCategorical</code>, and <code>Multinomial</code> to use <code>logprobs</code> (or simply <code>logs</code>). We might go further and change <code>Bernoulli</code> and <code>Binomial</code> to use <code>logodds</code>. Let me know what you decide and I'll volunteer to send you a PR.</p>\n<p>cc <a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=1762463\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/neerajprad\">@neerajprad</a></p>", "body_text": "@apaszke this [logits ambiguity] is exactly why I wanted to use a different name. Calling two semantically different things the same is going to end up in an error sooner or later without a type system\n\nI hear you and I agree that probs_to_logits(..., binary=False) smells bad. I still feel like it's worth maintaining compatibility with Tensorflow arguments despite their loose naming.\nIf do want to change, I think the minimal path would be to change Categorical, OneHotCategorical, and Multinomial to use logprobs (or simply logs). We might go further and change Bernoulli and Binomial to use logodds. Let me know what you decide and I'll volunteer to send you a PR.\ncc @neerajprad", "body": "> @apaszke this [logits ambiguity] is exactly why I wanted to use a different name. Calling two semantically different things the same is going to end up in an error sooner or later without a type system\r\n\r\nI hear you and I agree that `probs_to_logits(..., binary=False)` smells bad. I still feel like it's worth maintaining compatibility with Tensorflow arguments despite their loose naming.\r\n\r\nIf do want to change, I think the minimal path would be to change `Categorical`, `OneHotCategorical`, and `Multinomial` to use `logprobs` (or simply `logs`). We might go further and change `Bernoulli` and `Binomial` to use `logodds`. Let me know what you decide and I'll volunteer to send you a PR.\r\n\r\ncc @neerajprad "}