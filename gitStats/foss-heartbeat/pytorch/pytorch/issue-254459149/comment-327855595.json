{"url": "https://api.github.com/repos/pytorch/pytorch/issues/comments/327855595", "html_url": "https://github.com/pytorch/pytorch/issues/2591#issuecomment-327855595", "issue_url": "https://api.github.com/repos/pytorch/pytorch/issues/2591", "id": 327855595, "node_id": "MDEyOklzc3VlQ29tbWVudDMyNzg1NTU5NQ==", "user": {"login": "rdipietro", "id": 5150559, "node_id": "MDQ6VXNlcjUxNTA1NTk=", "avatar_url": "https://avatars1.githubusercontent.com/u/5150559?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rdipietro", "html_url": "https://github.com/rdipietro", "followers_url": "https://api.github.com/users/rdipietro/followers", "following_url": "https://api.github.com/users/rdipietro/following{/other_user}", "gists_url": "https://api.github.com/users/rdipietro/gists{/gist_id}", "starred_url": "https://api.github.com/users/rdipietro/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rdipietro/subscriptions", "organizations_url": "https://api.github.com/users/rdipietro/orgs", "repos_url": "https://api.github.com/users/rdipietro/repos", "events_url": "https://api.github.com/users/rdipietro/events{/privacy}", "received_events_url": "https://api.github.com/users/rdipietro/received_events", "type": "User", "site_admin": false}, "created_at": "2017-09-07T16:39:21Z", "updated_at": "2017-09-07T16:39:21Z", "author_association": "CONTRIBUTOR", "body_html": "<p>Yes it should be differentiable :). Many use cases exist, one being mixture density networks.</p>\n<p>I'm all for consistency. My best guess is that PyTorch accidentally used keepdim, but that they will strive for numpy consistency in the future. Same happened with TensorFlow. So my thought is that any new functionality should meet this goal in advance.</p>", "body_text": "Yes it should be differentiable :). Many use cases exist, one being mixture density networks.\nI'm all for consistency. My best guess is that PyTorch accidentally used keepdim, but that they will strive for numpy consistency in the future. Same happened with TensorFlow. So my thought is that any new functionality should meet this goal in advance.", "body": "Yes it should be differentiable :). Many use cases exist, one being mixture density networks.\r\n\r\nI'm all for consistency. My best guess is that PyTorch accidentally used keepdim, but that they will strive for numpy consistency in the future. Same happened with TensorFlow. So my thought is that any new functionality should meet this goal in advance."}