{"url": "https://api.github.com/repos/pytorch/pytorch/issues/comments/352403718", "html_url": "https://github.com/pytorch/pytorch/issues/2591#issuecomment-352403718", "issue_url": "https://api.github.com/repos/pytorch/pytorch/issues/2591", "id": 352403718, "node_id": "MDEyOklzc3VlQ29tbWVudDM1MjQwMzcxOA==", "user": {"login": "davidbau", "id": 3458792, "node_id": "MDQ6VXNlcjM0NTg3OTI=", "avatar_url": "https://avatars0.githubusercontent.com/u/3458792?v=4", "gravatar_id": "", "url": "https://api.github.com/users/davidbau", "html_url": "https://github.com/davidbau", "followers_url": "https://api.github.com/users/davidbau/followers", "following_url": "https://api.github.com/users/davidbau/following{/other_user}", "gists_url": "https://api.github.com/users/davidbau/gists{/gist_id}", "starred_url": "https://api.github.com/users/davidbau/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/davidbau/subscriptions", "organizations_url": "https://api.github.com/users/davidbau/orgs", "repos_url": "https://api.github.com/users/davidbau/repos", "events_url": "https://api.github.com/users/davidbau/events{/privacy}", "received_events_url": "https://api.github.com/users/davidbau/received_events", "type": "User", "site_admin": false}, "created_at": "2017-12-18T11:46:07Z", "updated_at": "2017-12-18T11:46:07Z", "author_association": "NONE", "body_html": "<p>+1.  Additionally I have a situation where I need row-wise logsumexp on a sparse matrix (treating unstored entries as if they are -inf rather than zero).  I can't find any way to construct this to be done efficiently on the GPU.</p>", "body_text": "+1.  Additionally I have a situation where I need row-wise logsumexp on a sparse matrix (treating unstored entries as if they are -inf rather than zero).  I can't find any way to construct this to be done efficiently on the GPU.", "body": "+1.  Additionally I have a situation where I need row-wise logsumexp on a sparse matrix (treating unstored entries as if they are -inf rather than zero).  I can't find any way to construct this to be done efficiently on the GPU."}