{"url": "https://api.github.com/repos/pytorch/pytorch/pulls/3978", "id": 155989090, "node_id": "MDExOlB1bGxSZXF1ZXN0MTU1OTg5MDkw", "html_url": "https://github.com/pytorch/pytorch/pull/3978", "diff_url": "https://github.com/pytorch/pytorch/pull/3978.diff", "patch_url": "https://github.com/pytorch/pytorch/pull/3978.patch", "issue_url": "https://api.github.com/repos/pytorch/pytorch/issues/3978", "number": 3978, "state": "closed", "locked": false, "title": "Implement reparameterized gradient for Gamma sampler", "user": {"login": "fritzo", "id": 648532, "node_id": "MDQ6VXNlcjY0ODUzMg==", "avatar_url": "https://avatars0.githubusercontent.com/u/648532?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fritzo", "html_url": "https://github.com/fritzo", "followers_url": "https://api.github.com/users/fritzo/followers", "following_url": "https://api.github.com/users/fritzo/following{/other_user}", "gists_url": "https://api.github.com/users/fritzo/gists{/gist_id}", "starred_url": "https://api.github.com/users/fritzo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fritzo/subscriptions", "organizations_url": "https://api.github.com/users/fritzo/orgs", "repos_url": "https://api.github.com/users/fritzo/repos", "events_url": "https://api.github.com/users/fritzo/events{/privacy}", "received_events_url": "https://api.github.com/users/fritzo/received_events", "type": "User", "site_admin": false}, "body": "Closes #3813\r\n\r\nThis implements reparameterized gradient for `distributions.Gamma`. The gradient is implemented by directly approximating the reparameterized gradient function `dx/dalpha` following [Knowles (2015)](https://arxiv.org/pdf/1509.01631.pdf). The approximation is accurate to within 0.5% relative error for a wide range of alphas.\r\n\r\n## Derivation\r\n\r\nFirst consider the `beta` variable. If `x ~ Gamma(alpha, beta)` then `x / beta ~ Gamma(alpha, 1)`. Since division is already implemented in PyTorch, we can thus reduce our problem to computing a reparameterized gradient of a standard gamma `x ~ Gamma(alpha) = Gamma(alpha, 1)` wrt `alpha`.\r\n\r\nThis PR implements a function `standard_gamma_grad(x, alpha)` that directly approximates the reparameterized gradient defined (for any continuous univariate distribution) as\r\n```\r\n                d/dalpha cdf(x; alpha)     d/dalpha cdf(x; alpha)\r\ndx / dalpha = - ---------------------- = - ----------------------\r\n                  d/dx cdf(x; alpha)           pdf(x; alpha)\r\n```\r\nThis definition is used in the unit tests in `tests/test_distributions.py`, which compute `d/dalpha cdf(x;alpha)` via finite difference of the `scipy.stats.gamma.cdf()` function.\r\n\r\nThe approximation is split into three regions:\r\n- For small `x` we use a power series approximation of `cdf(x, alpha)`.\r\n  Until `digamma()` is implemented in PyTorch, we use a finite difference of `lgamma()`.\r\n- For large `alpha` we use the approximation\r\n  ```\r\n  standard_gamma_grad(x, alpha) = sqrt(x/alpha)\r\n  ```\r\n- For intermediate x,alpha we use a rational function approximation\r\n   ```\r\n   standard_gamma_grad(x, alpha) = exp(PQ(log(x / alpha), log(alpha)))\r\n   ```\r\n   where `PQ(u,v)` is a rational function of order 2 in u and 3 in v.\r\n\r\nFor complete derivation, see this [Jupyter Notebook](https://github.com/fritzo/notebooks/blob/master/gamma-reparameterized.ipynb).", "created_at": "2017-12-02T00:57:56Z", "updated_at": "2018-11-23T15:37:13Z", "closed_at": "2017-12-11T11:32:16Z", "merged_at": "2017-12-11T11:32:16Z", "merge_commit_sha": "05ebd21a36260f703190311c9d79d50e8deee1df", "assignee": null, "assignees": [], "requested_reviewers": [], "requested_teams": [], "labels": [], "milestone": null, "commits_url": "https://api.github.com/repos/pytorch/pytorch/pulls/3978/commits", "review_comments_url": "https://api.github.com/repos/pytorch/pytorch/pulls/3978/comments", "review_comment_url": "https://api.github.com/repos/pytorch/pytorch/pulls/comments{/number}", "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/3978/comments", "statuses_url": "https://api.github.com/repos/pytorch/pytorch/statuses/09ef89ca791f8a4a6ae254e8526fc17c9a8b3efb", "head": {"label": "probtorch:gamma-reparameterized", "ref": "gamma-reparameterized", "sha": "09ef89ca791f8a4a6ae254e8526fc17c9a8b3efb", "user": {"login": "probtorch", "id": 32777003, "node_id": "MDEyOk9yZ2FuaXphdGlvbjMyNzc3MDAz", "avatar_url": "https://avatars0.githubusercontent.com/u/32777003?v=4", "gravatar_id": "", "url": "https://api.github.com/users/probtorch", "html_url": "https://github.com/probtorch", "followers_url": "https://api.github.com/users/probtorch/followers", "following_url": "https://api.github.com/users/probtorch/following{/other_user}", "gists_url": "https://api.github.com/users/probtorch/gists{/gist_id}", "starred_url": "https://api.github.com/users/probtorch/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/probtorch/subscriptions", "organizations_url": "https://api.github.com/users/probtorch/orgs", "repos_url": "https://api.github.com/users/probtorch/repos", "events_url": "https://api.github.com/users/probtorch/events{/privacy}", "received_events_url": "https://api.github.com/users/probtorch/received_events", "type": "Organization", "site_admin": false}, "repo": {"id": 109045956, "node_id": "MDEwOlJlcG9zaXRvcnkxMDkwNDU5NTY=", "name": "pytorch", "full_name": "probtorch/pytorch", "private": false, "owner": {"login": "probtorch", "id": 32777003, "node_id": "MDEyOk9yZ2FuaXphdGlvbjMyNzc3MDAz", "avatar_url": "https://avatars0.githubusercontent.com/u/32777003?v=4", "gravatar_id": "", "url": "https://api.github.com/users/probtorch", "html_url": "https://github.com/probtorch", "followers_url": "https://api.github.com/users/probtorch/followers", "following_url": "https://api.github.com/users/probtorch/following{/other_user}", "gists_url": "https://api.github.com/users/probtorch/gists{/gist_id}", "starred_url": "https://api.github.com/users/probtorch/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/probtorch/subscriptions", "organizations_url": "https://api.github.com/users/probtorch/orgs", "repos_url": "https://api.github.com/users/probtorch/repos", "events_url": "https://api.github.com/users/probtorch/events{/privacy}", "received_events_url": "https://api.github.com/users/probtorch/received_events", "type": "Organization", "site_admin": false}, "html_url": "https://github.com/probtorch/pytorch", "description": "Tensors and Dynamic neural networks in Python  with strong GPU acceleration", "fork": true, "url": "https://api.github.com/repos/probtorch/pytorch", "forks_url": "https://api.github.com/repos/probtorch/pytorch/forks", "keys_url": "https://api.github.com/repos/probtorch/pytorch/keys{/key_id}", "collaborators_url": "https://api.github.com/repos/probtorch/pytorch/collaborators{/collaborator}", "teams_url": "https://api.github.com/repos/probtorch/pytorch/teams", "hooks_url": "https://api.github.com/repos/probtorch/pytorch/hooks", "issue_events_url": "https://api.github.com/repos/probtorch/pytorch/issues/events{/number}", "events_url": "https://api.github.com/repos/probtorch/pytorch/events", "assignees_url": "https://api.github.com/repos/probtorch/pytorch/assignees{/user}", "branches_url": "https://api.github.com/repos/probtorch/pytorch/branches{/branch}", "tags_url": "https://api.github.com/repos/probtorch/pytorch/tags", "blobs_url": "https://api.github.com/repos/probtorch/pytorch/git/blobs{/sha}", "git_tags_url": "https://api.github.com/repos/probtorch/pytorch/git/tags{/sha}", "git_refs_url": "https://api.github.com/repos/probtorch/pytorch/git/refs{/sha}", "trees_url": "https://api.github.com/repos/probtorch/pytorch/git/trees{/sha}", "statuses_url": "https://api.github.com/repos/probtorch/pytorch/statuses/{sha}", "languages_url": "https://api.github.com/repos/probtorch/pytorch/languages", "stargazers_url": "https://api.github.com/repos/probtorch/pytorch/stargazers", "contributors_url": "https://api.github.com/repos/probtorch/pytorch/contributors", "subscribers_url": "https://api.github.com/repos/probtorch/pytorch/subscribers", "subscription_url": "https://api.github.com/repos/probtorch/pytorch/subscription", "commits_url": "https://api.github.com/repos/probtorch/pytorch/commits{/sha}", "git_commits_url": "https://api.github.com/repos/probtorch/pytorch/git/commits{/sha}", "comments_url": "https://api.github.com/repos/probtorch/pytorch/comments{/number}", "issue_comment_url": "https://api.github.com/repos/probtorch/pytorch/issues/comments{/number}", "contents_url": "https://api.github.com/repos/probtorch/pytorch/contents/{+path}", "compare_url": "https://api.github.com/repos/probtorch/pytorch/compare/{base}...{head}", "merges_url": "https://api.github.com/repos/probtorch/pytorch/merges", "archive_url": "https://api.github.com/repos/probtorch/pytorch/{archive_format}{/ref}", "downloads_url": "https://api.github.com/repos/probtorch/pytorch/downloads", "issues_url": "https://api.github.com/repos/probtorch/pytorch/issues{/number}", "pulls_url": "https://api.github.com/repos/probtorch/pytorch/pulls{/number}", "milestones_url": "https://api.github.com/repos/probtorch/pytorch/milestones{/number}", "notifications_url": "https://api.github.com/repos/probtorch/pytorch/notifications{?since,all,participating}", "labels_url": "https://api.github.com/repos/probtorch/pytorch/labels{/name}", "releases_url": "https://api.github.com/repos/probtorch/pytorch/releases{/id}", "deployments_url": "https://api.github.com/repos/probtorch/pytorch/deployments", "created_at": "2017-10-31T19:57:13Z", "updated_at": "2018-11-05T18:51:41Z", "pushed_at": "2018-11-05T18:51:32Z", "git_url": "git://github.com/probtorch/pytorch.git", "ssh_url": "git@github.com:probtorch/pytorch.git", "clone_url": "https://github.com/probtorch/pytorch.git", "svn_url": "https://github.com/probtorch/pytorch", "homepage": "http://pytorch.org", "size": 82838, "stargazers_count": 2, "watchers_count": 2, "language": "C++", "has_issues": true, "has_projects": true, "has_downloads": true, "has_wiki": true, "has_pages": false, "forks_count": 1, "mirror_url": null, "archived": false, "open_issues_count": 27, "license": {"key": "other", "name": "Other", "spdx_id": "NOASSERTION", "url": null, "node_id": "MDc6TGljZW5zZTA="}, "forks": 1, "open_issues": 27, "watchers": 2, "default_branch": "master"}}, "base": {"label": "pytorch:master", "ref": "master", "sha": "c902f1cf980eef27541f3660c685f7b59490e744", "user": {"login": "pytorch", "id": 21003710, "node_id": "MDEyOk9yZ2FuaXphdGlvbjIxMDAzNzEw", "avatar_url": "https://avatars3.githubusercontent.com/u/21003710?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pytorch", "html_url": "https://github.com/pytorch", "followers_url": "https://api.github.com/users/pytorch/followers", "following_url": "https://api.github.com/users/pytorch/following{/other_user}", "gists_url": "https://api.github.com/users/pytorch/gists{/gist_id}", "starred_url": "https://api.github.com/users/pytorch/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pytorch/subscriptions", "organizations_url": "https://api.github.com/users/pytorch/orgs", "repos_url": "https://api.github.com/users/pytorch/repos", "events_url": "https://api.github.com/users/pytorch/events{/privacy}", "received_events_url": "https://api.github.com/users/pytorch/received_events", "type": "Organization", "site_admin": false}, "repo": {"id": 65600975, "node_id": "MDEwOlJlcG9zaXRvcnk2NTYwMDk3NQ==", "name": "pytorch", "full_name": "pytorch/pytorch", "private": false, "owner": {"login": "pytorch", "id": 21003710, "node_id": "MDEyOk9yZ2FuaXphdGlvbjIxMDAzNzEw", "avatar_url": "https://avatars3.githubusercontent.com/u/21003710?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pytorch", "html_url": "https://github.com/pytorch", "followers_url": "https://api.github.com/users/pytorch/followers", "following_url": "https://api.github.com/users/pytorch/following{/other_user}", "gists_url": "https://api.github.com/users/pytorch/gists{/gist_id}", "starred_url": "https://api.github.com/users/pytorch/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pytorch/subscriptions", "organizations_url": "https://api.github.com/users/pytorch/orgs", "repos_url": "https://api.github.com/users/pytorch/repos", "events_url": "https://api.github.com/users/pytorch/events{/privacy}", "received_events_url": "https://api.github.com/users/pytorch/received_events", "type": "Organization", "site_admin": false}, "html_url": "https://github.com/pytorch/pytorch", "description": "Tensors and Dynamic neural networks in Python  with strong GPU acceleration", "fork": false, "url": "https://api.github.com/repos/pytorch/pytorch", "forks_url": "https://api.github.com/repos/pytorch/pytorch/forks", "keys_url": "https://api.github.com/repos/pytorch/pytorch/keys{/key_id}", "collaborators_url": "https://api.github.com/repos/pytorch/pytorch/collaborators{/collaborator}", "teams_url": "https://api.github.com/repos/pytorch/pytorch/teams", "hooks_url": "https://api.github.com/repos/pytorch/pytorch/hooks", "issue_events_url": "https://api.github.com/repos/pytorch/pytorch/issues/events{/number}", "events_url": "https://api.github.com/repos/pytorch/pytorch/events", "assignees_url": "https://api.github.com/repos/pytorch/pytorch/assignees{/user}", "branches_url": "https://api.github.com/repos/pytorch/pytorch/branches{/branch}", "tags_url": "https://api.github.com/repos/pytorch/pytorch/tags", "blobs_url": "https://api.github.com/repos/pytorch/pytorch/git/blobs{/sha}", "git_tags_url": "https://api.github.com/repos/pytorch/pytorch/git/tags{/sha}", "git_refs_url": "https://api.github.com/repos/pytorch/pytorch/git/refs{/sha}", "trees_url": "https://api.github.com/repos/pytorch/pytorch/git/trees{/sha}", "statuses_url": "https://api.github.com/repos/pytorch/pytorch/statuses/{sha}", "languages_url": "https://api.github.com/repos/pytorch/pytorch/languages", "stargazers_url": "https://api.github.com/repos/pytorch/pytorch/stargazers", "contributors_url": "https://api.github.com/repos/pytorch/pytorch/contributors", "subscribers_url": "https://api.github.com/repos/pytorch/pytorch/subscribers", "subscription_url": "https://api.github.com/repos/pytorch/pytorch/subscription", "commits_url": "https://api.github.com/repos/pytorch/pytorch/commits{/sha}", "git_commits_url": "https://api.github.com/repos/pytorch/pytorch/git/commits{/sha}", "comments_url": "https://api.github.com/repos/pytorch/pytorch/comments{/number}", "issue_comment_url": "https://api.github.com/repos/pytorch/pytorch/issues/comments{/number}", "contents_url": "https://api.github.com/repos/pytorch/pytorch/contents/{+path}", "compare_url": "https://api.github.com/repos/pytorch/pytorch/compare/{base}...{head}", "merges_url": "https://api.github.com/repos/pytorch/pytorch/merges", "archive_url": "https://api.github.com/repos/pytorch/pytorch/{archive_format}{/ref}", "downloads_url": "https://api.github.com/repos/pytorch/pytorch/downloads", "issues_url": "https://api.github.com/repos/pytorch/pytorch/issues{/number}", "pulls_url": "https://api.github.com/repos/pytorch/pytorch/pulls{/number}", "milestones_url": "https://api.github.com/repos/pytorch/pytorch/milestones{/number}", "notifications_url": "https://api.github.com/repos/pytorch/pytorch/notifications{?since,all,participating}", "labels_url": "https://api.github.com/repos/pytorch/pytorch/labels{/name}", "releases_url": "https://api.github.com/repos/pytorch/pytorch/releases{/id}", "deployments_url": "https://api.github.com/repos/pytorch/pytorch/deployments", "created_at": "2016-08-13T05:26:41Z", "updated_at": "2018-11-24T12:35:43Z", "pushed_at": "2018-11-24T12:42:01Z", "git_url": "git://github.com/pytorch/pytorch.git", "ssh_url": "git@github.com:pytorch/pytorch.git", "clone_url": "https://github.com/pytorch/pytorch.git", "svn_url": "https://github.com/pytorch/pytorch", "homepage": "http://pytorch.org", "size": 89656, "stargazers_count": 21589, "watchers_count": 21589, "language": "C++", "has_issues": true, "has_projects": true, "has_downloads": true, "has_wiki": true, "has_pages": false, "forks_count": 5153, "mirror_url": null, "archived": false, "open_issues_count": 2197, "license": {"key": "other", "name": "Other", "spdx_id": "NOASSERTION", "url": null, "node_id": "MDc6TGljZW5zZTA="}, "forks": 5153, "open_issues": 2197, "watchers": 21589, "default_branch": "master"}}, "_links": {"self": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/3978"}, "html": {"href": "https://github.com/pytorch/pytorch/pull/3978"}, "issue": {"href": "https://api.github.com/repos/pytorch/pytorch/issues/3978"}, "comments": {"href": "https://api.github.com/repos/pytorch/pytorch/issues/3978/comments"}, "review_comments": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/3978/comments"}, "review_comment": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/comments{/number}"}, "commits": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/3978/commits"}, "statuses": {"href": "https://api.github.com/repos/pytorch/pytorch/statuses/09ef89ca791f8a4a6ae254e8526fc17c9a8b3efb"}}, "author_association": "CONTRIBUTOR", "body_html": "<p><span class=\"issue-keyword tooltipped tooltipped-se\" aria-label=\"This pull request closes issue #3813.\">Closes</span> <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load issue title\" data-id=\"275791032\" data-permission-text=\"Issue title is private\" data-url=\"https://github.com/pytorch/pytorch/issues/3813\" data-hovercard-type=\"issue\" data-hovercard-url=\"/pytorch/pytorch/issues/3813/hovercard\" href=\"https://github.com/pytorch/pytorch/issues/3813\">#3813</a></p>\n<p>This implements reparameterized gradient for <code>distributions.Gamma</code>. The gradient is implemented by directly approximating the reparameterized gradient function <code>dx/dalpha</code> following <a href=\"https://arxiv.org/pdf/1509.01631.pdf\" rel=\"nofollow\">Knowles (2015)</a>. The approximation is accurate to within 0.5% relative error for a wide range of alphas.</p>\n<h2>Derivation</h2>\n<p>First consider the <code>beta</code> variable. If <code>x ~ Gamma(alpha, beta)</code> then <code>x / beta ~ Gamma(alpha, 1)</code>. Since division is already implemented in PyTorch, we can thus reduce our problem to computing a reparameterized gradient of a standard gamma <code>x ~ Gamma(alpha) = Gamma(alpha, 1)</code> wrt <code>alpha</code>.</p>\n<p>This PR implements a function <code>standard_gamma_grad(x, alpha)</code> that directly approximates the reparameterized gradient defined (for any continuous univariate distribution) as</p>\n<pre><code>                d/dalpha cdf(x; alpha)     d/dalpha cdf(x; alpha)\ndx / dalpha = - ---------------------- = - ----------------------\n                  d/dx cdf(x; alpha)           pdf(x; alpha)\n</code></pre>\n<p>This definition is used in the unit tests in <code>tests/test_distributions.py</code>, which compute <code>d/dalpha cdf(x;alpha)</code> via finite difference of the <code>scipy.stats.gamma.cdf()</code> function.</p>\n<p>The approximation is split into three regions:</p>\n<ul>\n<li>For small <code>x</code> we use a power series approximation of <code>cdf(x, alpha)</code>.<br>\nUntil <code>digamma()</code> is implemented in PyTorch, we use a finite difference of <code>lgamma()</code>.</li>\n<li>For large <code>alpha</code> we use the approximation\n<pre><code>standard_gamma_grad(x, alpha) = sqrt(x/alpha)\n</code></pre>\n</li>\n<li>For intermediate x,alpha we use a rational function approximation\n<pre><code>standard_gamma_grad(x, alpha) = exp(PQ(log(x / alpha), log(alpha)))\n</code></pre>\nwhere <code>PQ(u,v)</code> is a rational function of order 2 in u and 3 in v.</li>\n</ul>\n<p>For complete derivation, see this <a href=\"https://github.com/fritzo/notebooks/blob/master/gamma-reparameterized.ipynb\">Jupyter Notebook</a>.</p>", "body_text": "Closes #3813\nThis implements reparameterized gradient for distributions.Gamma. The gradient is implemented by directly approximating the reparameterized gradient function dx/dalpha following Knowles (2015). The approximation is accurate to within 0.5% relative error for a wide range of alphas.\nDerivation\nFirst consider the beta variable. If x ~ Gamma(alpha, beta) then x / beta ~ Gamma(alpha, 1). Since division is already implemented in PyTorch, we can thus reduce our problem to computing a reparameterized gradient of a standard gamma x ~ Gamma(alpha) = Gamma(alpha, 1) wrt alpha.\nThis PR implements a function standard_gamma_grad(x, alpha) that directly approximates the reparameterized gradient defined (for any continuous univariate distribution) as\n                d/dalpha cdf(x; alpha)     d/dalpha cdf(x; alpha)\ndx / dalpha = - ---------------------- = - ----------------------\n                  d/dx cdf(x; alpha)           pdf(x; alpha)\n\nThis definition is used in the unit tests in tests/test_distributions.py, which compute d/dalpha cdf(x;alpha) via finite difference of the scipy.stats.gamma.cdf() function.\nThe approximation is split into three regions:\n\nFor small x we use a power series approximation of cdf(x, alpha).\nUntil digamma() is implemented in PyTorch, we use a finite difference of lgamma().\nFor large alpha we use the approximation\nstandard_gamma_grad(x, alpha) = sqrt(x/alpha)\n\n\nFor intermediate x,alpha we use a rational function approximation\nstandard_gamma_grad(x, alpha) = exp(PQ(log(x / alpha), log(alpha)))\n\nwhere PQ(u,v) is a rational function of order 2 in u and 3 in v.\n\nFor complete derivation, see this Jupyter Notebook.", "merged": true, "mergeable": null, "rebaseable": null, "mergeable_state": "unknown", "merged_by": {"login": "apaszke", "id": 4583066, "node_id": "MDQ6VXNlcjQ1ODMwNjY=", "avatar_url": "https://avatars3.githubusercontent.com/u/4583066?v=4", "gravatar_id": "", "url": "https://api.github.com/users/apaszke", "html_url": "https://github.com/apaszke", "followers_url": "https://api.github.com/users/apaszke/followers", "following_url": "https://api.github.com/users/apaszke/following{/other_user}", "gists_url": "https://api.github.com/users/apaszke/gists{/gist_id}", "starred_url": "https://api.github.com/users/apaszke/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/apaszke/subscriptions", "organizations_url": "https://api.github.com/users/apaszke/orgs", "repos_url": "https://api.github.com/users/apaszke/repos", "events_url": "https://api.github.com/users/apaszke/events{/privacy}", "received_events_url": "https://api.github.com/users/apaszke/received_events", "type": "User", "site_admin": false}, "comments": 3, "review_comments": 4, "maintainer_can_modify": false, "commits": 7, "additions": 135, "deletions": 6, "changed_files": 7}