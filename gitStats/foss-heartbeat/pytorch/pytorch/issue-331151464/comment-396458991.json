{"url": "https://api.github.com/repos/pytorch/pytorch/issues/comments/396458991", "html_url": "https://github.com/pytorch/pytorch/issues/8329#issuecomment-396458991", "issue_url": "https://api.github.com/repos/pytorch/pytorch/issues/8329", "id": 396458991, "node_id": "MDEyOklzc3VlQ29tbWVudDM5NjQ1ODk5MQ==", "user": {"login": "peterjc123", "id": 9998726, "node_id": "MDQ6VXNlcjk5OTg3MjY=", "avatar_url": "https://avatars3.githubusercontent.com/u/9998726?v=4", "gravatar_id": "", "url": "https://api.github.com/users/peterjc123", "html_url": "https://github.com/peterjc123", "followers_url": "https://api.github.com/users/peterjc123/followers", "following_url": "https://api.github.com/users/peterjc123/following{/other_user}", "gists_url": "https://api.github.com/users/peterjc123/gists{/gist_id}", "starred_url": "https://api.github.com/users/peterjc123/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/peterjc123/subscriptions", "organizations_url": "https://api.github.com/users/peterjc123/orgs", "repos_url": "https://api.github.com/users/peterjc123/repos", "events_url": "https://api.github.com/users/peterjc123/events{/privacy}", "received_events_url": "https://api.github.com/users/peterjc123/received_events", "type": "User", "site_admin": false}, "created_at": "2018-06-12T04:03:38Z", "updated_at": "2018-06-12T04:03:47Z", "author_association": "CONTRIBUTOR", "body_html": "<p><a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=31001081\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/HuangJunJie2017\">@HuangJunJie2017</a> No, you can't do this. Actually, you should open sth. like <code>setup.py</code> or <code>build.py</code> and change the code.</p>\n<div class=\"highlight highlight-source-python\"><pre>ffi <span class=\"pl-k\">=</span> create_extension(\n    <span class=\"pl-s\"><span class=\"pl-pds\">'</span>_ext.my_lib<span class=\"pl-pds\">'</span></span>,\n    <span class=\"pl-v\">headers</span><span class=\"pl-k\">=</span>headers,\n    <span class=\"pl-v\">sources</span><span class=\"pl-k\">=</span>sources,\n    <span class=\"pl-v\">define_macros</span><span class=\"pl-k\">=</span>defines,\n    <span class=\"pl-v\">relative_to</span><span class=\"pl-k\">=</span><span class=\"pl-c1\">__file__</span>,\n    <span class=\"pl-v\">with_cuda</span><span class=\"pl-k\">=</span>with_cuda,\n    <span class=\"pl-v\">extra_compile_args</span><span class=\"pl-k\">=</span>[<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>-std=c99<span class=\"pl-pds\">\"</span></span>],\n    <span class=\"pl-v\">include_dirs</span><span class=\"pl-k\">=</span>[<span class=\"pl-s\"><span class=\"pl-pds\">'</span>C:<span class=\"pl-cce\">\\\\</span>Program Files<span class=\"pl-cce\">\\\\</span>NVIDIA GPU Computing Toolkit<span class=\"pl-cce\">\\\\</span>CUDA<span class=\"pl-cce\">\\\\</span>v9.0<span class=\"pl-cce\">\\\\</span>include<span class=\"pl-pds\">'</span></span>], <span class=\"pl-c\"><span class=\"pl-c\">#</span> example</span>\n    <span class=\"pl-v\">library_dirs</span><span class=\"pl-k\">=</span>[<span class=\"pl-s\"><span class=\"pl-pds\">'</span>C:<span class=\"pl-cce\">\\\\</span>Program Files<span class=\"pl-cce\">\\\\</span>NVIDIA GPU Computing Toolkit<span class=\"pl-cce\">\\\\</span>CUDA<span class=\"pl-cce\">\\\\</span>v9.0<span class=\"pl-cce\">\\\\</span>lib<span class=\"pl-cce\">\\\\</span>x64<span class=\"pl-pds\">'</span></span>], <span class=\"pl-c\"><span class=\"pl-c\">#</span> example</span>\n    <span class=\"pl-v\">libraries</span><span class=\"pl-k\">=</span>[<span class=\"pl-s\"><span class=\"pl-pds\">'</span>ATen<span class=\"pl-pds\">'</span></span>, <span class=\"pl-s\"><span class=\"pl-pds\">'</span>_C<span class=\"pl-pds\">'</span></span>] <span class=\"pl-c\"><span class=\"pl-c\">#</span> Append cuda libaries when necessary, like cudart</span>\n)</pre></div>", "body_text": "@HuangJunJie2017 No, you can't do this. Actually, you should open sth. like setup.py or build.py and change the code.\nffi = create_extension(\n    '_ext.my_lib',\n    headers=headers,\n    sources=sources,\n    define_macros=defines,\n    relative_to=__file__,\n    with_cuda=with_cuda,\n    extra_compile_args=[\"-std=c99\"],\n    include_dirs=['C:\\\\Program Files\\\\NVIDIA GPU Computing Toolkit\\\\CUDA\\\\v9.0\\\\include'], # example\n    library_dirs=['C:\\\\Program Files\\\\NVIDIA GPU Computing Toolkit\\\\CUDA\\\\v9.0\\\\lib\\\\x64'], # example\n    libraries=['ATen', '_C'] # Append cuda libaries when necessary, like cudart\n)", "body": "@HuangJunJie2017 No, you can't do this. Actually, you should open sth. like `setup.py` or `build.py` and change the code.\r\n```python\r\nffi = create_extension(\r\n    '_ext.my_lib',\r\n    headers=headers,\r\n    sources=sources,\r\n    define_macros=defines,\r\n    relative_to=__file__,\r\n    with_cuda=with_cuda,\r\n    extra_compile_args=[\"-std=c99\"],\r\n    include_dirs=['C:\\\\Program Files\\\\NVIDIA GPU Computing Toolkit\\\\CUDA\\\\v9.0\\\\include'], # example\r\n    library_dirs=['C:\\\\Program Files\\\\NVIDIA GPU Computing Toolkit\\\\CUDA\\\\v9.0\\\\lib\\\\x64'], # example\r\n    libraries=['ATen', '_C'] # Append cuda libaries when necessary, like cudart\r\n)\r\n```"}