{"url": "https://api.github.com/repos/pytorch/pytorch/issues/comments/396565691", "html_url": "https://github.com/pytorch/pytorch/issues/8329#issuecomment-396565691", "issue_url": "https://api.github.com/repos/pytorch/pytorch/issues/8329", "id": 396565691, "node_id": "MDEyOklzc3VlQ29tbWVudDM5NjU2NTY5MQ==", "user": {"login": "HuangJunJie2017", "id": 31001081, "node_id": "MDQ6VXNlcjMxMDAxMDgx", "avatar_url": "https://avatars3.githubusercontent.com/u/31001081?v=4", "gravatar_id": "", "url": "https://api.github.com/users/HuangJunJie2017", "html_url": "https://github.com/HuangJunJie2017", "followers_url": "https://api.github.com/users/HuangJunJie2017/followers", "following_url": "https://api.github.com/users/HuangJunJie2017/following{/other_user}", "gists_url": "https://api.github.com/users/HuangJunJie2017/gists{/gist_id}", "starred_url": "https://api.github.com/users/HuangJunJie2017/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/HuangJunJie2017/subscriptions", "organizations_url": "https://api.github.com/users/HuangJunJie2017/orgs", "repos_url": "https://api.github.com/users/HuangJunJie2017/repos", "events_url": "https://api.github.com/users/HuangJunJie2017/events{/privacy}", "received_events_url": "https://api.github.com/users/HuangJunJie2017/received_events", "type": "User", "site_admin": false}, "created_at": "2018-06-12T12:05:39Z", "updated_at": "2018-06-12T12:05:39Z", "author_association": "NONE", "body_html": "<p><a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=9998726\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/peterjc123\">@peterjc123</a></p>\n<h3>my code:</h3>\n<p>/* src/my_lib.cpp */<br>\n#include &lt;THC/THC.h&gt;<br>\n#include &lt;ATen/ATen.h&gt;</p>\n<p>THCState *state = at::globalContext().thc_state;</p>\n<p>extern \"C\" int my_lib_add_forward(THFloatTensor *input1, THFloatTensor *input2,<br>\nTHFloatTensor *output)<br>\n{<br>\nif (!THFloatTensor_isSameSizeAs(input1, input2))<br>\nreturn 0;<br>\nTHFloatTensor_resizeAs(output, input1);<br>\nTHFloatTensor_cadd(output, input1, 1.0, input2);<br>\nreturn 1;<br>\n}</p>\n<p>extern \"C\" int my_lib_add_backward(THFloatTensor *grad_output, THFloatTensor *grad_input)<br>\n{<br>\nTHFloatTensor_resizeAs(grad_input, grad_output);<br>\nTHFloatTensor_fill(grad_input, 1);<br>\nreturn 1;<br>\n}</p>\n<p>/* src/my_lib.h */<br>\nint my_lib_add_forward(THFloatTensor *input1, THFloatTensor *input2, THFloatTensor *output);<br>\nint my_lib_add_backward(THFloatTensor *grad_output, THFloatTensor *grad_input);</p>\n<h1>build.py</h1>\n<p>from torch.utils.ffi import create_extension<br>\nffi = create_extension(<br>\nname='_ext.my_lib',<br>\nheaders=['D:\\pytorch_custom_lib\\my_lib\\src\\my_lib.h'],<br>\nsources=['D:\\pytorch_custom_lib\\my_lib\\src\\my_lib.cpp'],<br>\nrelative_to=<strong>file</strong>,<br>\nwith_cuda=False,<br>\nextra_compile_args=[\"-std=c99\"],<br>\nlibraries=['ATen', '_C'] # Append cuda libaries when necessary, like cudart<br>\n)<br>\nffi.build()</p>\n<h3>error</h3>\n<p>\u6b63\u5728\u521b\u5efa\u5e93 .\\Release_my_lib.lib \u548c\u5bf9\u8c61 .\\Release_my_lib.exp<br>\nmy_lib.obj : error LNK2001: \u65e0\u6cd5\u89e3\u6790\u7684\u5916\u90e8\u7b26\u53f7 __imp_THFloatTensor_fill<br>\nmy_lib.obj : error LNK2001: \u65e0\u6cd5\u89e3\u6790\u7684\u5916\u90e8\u7b26\u53f7 __imp_THFloatTensor_resizeAs<br>\nmy_lib.obj : error LNK2001: \u65e0\u6cd5\u89e3\u6790\u7684\u5916\u90e8\u7b26\u53f7 __imp_THFloatTensor_isSameSizeAs<br>\nmy_lib.obj : error LNK2001: \u65e0\u6cd5\u89e3\u6790\u7684\u5916\u90e8\u7b26\u53f7 \"__declspec(dllimport) class at::Context &amp; __cdecl at::globalContext(void)\" (_<em>imp</em>?globalContext@at@@YAAEAVContext@1@XZ)<br>\nmy_lib.obj : error LNK2001: \u65e0\u6cd5\u89e3\u6790\u7684\u5916\u90e8\u7b26\u53f7 __imp_THFloatTensor_cadd<br>\n._my_lib.pyd : fatal error LNK1120: 5 \u4e2a\u65e0\u6cd5\u89e3\u6790\u7684\u5916\u90e8\u547d\u4ee4</p>", "body_text": "@peterjc123\nmy code:\n/* src/my_lib.cpp */\n#include <THC/THC.h>\n#include <ATen/ATen.h>\nTHCState *state = at::globalContext().thc_state;\nextern \"C\" int my_lib_add_forward(THFloatTensor *input1, THFloatTensor *input2,\nTHFloatTensor *output)\n{\nif (!THFloatTensor_isSameSizeAs(input1, input2))\nreturn 0;\nTHFloatTensor_resizeAs(output, input1);\nTHFloatTensor_cadd(output, input1, 1.0, input2);\nreturn 1;\n}\nextern \"C\" int my_lib_add_backward(THFloatTensor *grad_output, THFloatTensor *grad_input)\n{\nTHFloatTensor_resizeAs(grad_input, grad_output);\nTHFloatTensor_fill(grad_input, 1);\nreturn 1;\n}\n/* src/my_lib.h */\nint my_lib_add_forward(THFloatTensor *input1, THFloatTensor *input2, THFloatTensor *output);\nint my_lib_add_backward(THFloatTensor *grad_output, THFloatTensor *grad_input);\nbuild.py\nfrom torch.utils.ffi import create_extension\nffi = create_extension(\nname='_ext.my_lib',\nheaders=['D:\\pytorch_custom_lib\\my_lib\\src\\my_lib.h'],\nsources=['D:\\pytorch_custom_lib\\my_lib\\src\\my_lib.cpp'],\nrelative_to=file,\nwith_cuda=False,\nextra_compile_args=[\"-std=c99\"],\nlibraries=['ATen', '_C'] # Append cuda libaries when necessary, like cudart\n)\nffi.build()\nerror\n\u6b63\u5728\u521b\u5efa\u5e93 .\\Release_my_lib.lib \u548c\u5bf9\u8c61 .\\Release_my_lib.exp\nmy_lib.obj : error LNK2001: \u65e0\u6cd5\u89e3\u6790\u7684\u5916\u90e8\u7b26\u53f7 __imp_THFloatTensor_fill\nmy_lib.obj : error LNK2001: \u65e0\u6cd5\u89e3\u6790\u7684\u5916\u90e8\u7b26\u53f7 __imp_THFloatTensor_resizeAs\nmy_lib.obj : error LNK2001: \u65e0\u6cd5\u89e3\u6790\u7684\u5916\u90e8\u7b26\u53f7 __imp_THFloatTensor_isSameSizeAs\nmy_lib.obj : error LNK2001: \u65e0\u6cd5\u89e3\u6790\u7684\u5916\u90e8\u7b26\u53f7 \"__declspec(dllimport) class at::Context & __cdecl at::globalContext(void)\" (_imp?globalContext@at@@YAAEAVContext@1@XZ)\nmy_lib.obj : error LNK2001: \u65e0\u6cd5\u89e3\u6790\u7684\u5916\u90e8\u7b26\u53f7 __imp_THFloatTensor_cadd\n._my_lib.pyd : fatal error LNK1120: 5 \u4e2a\u65e0\u6cd5\u89e3\u6790\u7684\u5916\u90e8\u547d\u4ee4", "body": "@peterjc123 \r\n\r\n### my code:\r\n\r\n/* src/my_lib.cpp */\r\n#include <THC/THC.h>\r\n#include <ATen/ATen.h>\r\n\r\nTHCState *state = at::globalContext().thc_state;\r\n\r\nextern \"C\" int my_lib_add_forward(THFloatTensor *input1, THFloatTensor *input2,\r\nTHFloatTensor *output)\r\n{\r\n    if (!THFloatTensor_isSameSizeAs(input1, input2))\r\n        return 0;\r\n    THFloatTensor_resizeAs(output, input1);\r\n    THFloatTensor_cadd(output, input1, 1.0, input2);\r\n    return 1;\r\n}\r\n\r\nextern \"C\" int my_lib_add_backward(THFloatTensor *grad_output, THFloatTensor *grad_input)\r\n{\r\n    THFloatTensor_resizeAs(grad_input, grad_output);\r\n    THFloatTensor_fill(grad_input, 1);\r\n    return 1;\r\n}\r\n\r\n/* src/my_lib.h */\r\nint my_lib_add_forward(THFloatTensor *input1, THFloatTensor *input2, THFloatTensor *output);\r\nint my_lib_add_backward(THFloatTensor *grad_output, THFloatTensor *grad_input);\r\n\r\n# build.py\r\nfrom torch.utils.ffi import create_extension\r\nffi = create_extension(\r\nname='_ext.my_lib',\r\nheaders=['D:\\pytorch_custom_lib\\my_lib\\src\\my_lib.h'],\r\nsources=['D:\\pytorch_custom_lib\\my_lib\\src\\my_lib.cpp'],\r\nrelative_to=__file__,\r\nwith_cuda=False,\r\nextra_compile_args=[\"-std=c99\"],\r\nlibraries=['ATen', '_C'] # Append cuda libaries when necessary, like cudart\r\n)\r\nffi.build()\r\n\r\n### error \r\n\r\n \u6b63\u5728\u521b\u5efa\u5e93 .\\Release\\_my_lib.lib \u548c\u5bf9\u8c61 .\\Release\\_my_lib.exp\r\nmy_lib.obj : error LNK2001: \u65e0\u6cd5\u89e3\u6790\u7684\u5916\u90e8\u7b26\u53f7 __imp_THFloatTensor_fill\r\nmy_lib.obj : error LNK2001: \u65e0\u6cd5\u89e3\u6790\u7684\u5916\u90e8\u7b26\u53f7 __imp_THFloatTensor_resizeAs\r\nmy_lib.obj : error LNK2001: \u65e0\u6cd5\u89e3\u6790\u7684\u5916\u90e8\u7b26\u53f7 __imp_THFloatTensor_isSameSizeAs\r\nmy_lib.obj : error LNK2001: \u65e0\u6cd5\u89e3\u6790\u7684\u5916\u90e8\u7b26\u53f7 \"__declspec(dllimport) class at::Context & __cdecl at::globalContext(void)\" (__imp_?globalContext@at@@YAAEAVContext@1@XZ)\r\nmy_lib.obj : error LNK2001: \u65e0\u6cd5\u89e3\u6790\u7684\u5916\u90e8\u7b26\u53f7 __imp_THFloatTensor_cadd\r\n.\\_my_lib.pyd : fatal error LNK1120: 5 \u4e2a\u65e0\u6cd5\u89e3\u6790\u7684\u5916\u90e8\u547d\u4ee4\r\n"}