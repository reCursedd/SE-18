{"url": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/207372195", "pull_request_review_id": 142972385, "id": 207372195, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwNzM3MjE5NQ==", "diff_hunk": "@@ -37,6 +37,30 @@ Optionally returns effective_lr and update as well.\n         \"Default 1. If it is in (0, 1), the gradient square sum \"\n         \"is decayed by this factor.\");\n \n+static OpSchema::Cost CostInferenceForSparseAdagrad(\n+    const OperatorDef& /* unused */,\n+    const vector<TensorShape>& inputs) {\n+  CAFFE_ENFORCE_GE(\n+      inputs.size(), 4, \"SparseAdagrad requires at least 4 inputs\");\n+\n+  const TensorShape param = inputs[0];\n+  const TensorShape moment = inputs[1];\n+  const TensorShape indices = inputs[2];\n+  const TensorShape grad = inputs[3];\n+\n+  uint64_t n = nElemFromDim(indices);\n+  uint64_t grad_size = nElemFromDim(grad);\n+\n+  OpSchema::Cost c;\n+  c.flops = grad_size * 7; // optimistically count sqrt as one flop", "path": "caffe2/sgd/adagrad_op.cc", "position": null, "original_position": 19, "commit_id": "76dedb0b170cfecbbb6de2092da1f9a485a2c3f0", "original_commit_id": "c95c24054b100d2baa6c474907c6cc68bf815068", "user": {"login": "jspark1105", "id": 5545022, "node_id": "MDQ6VXNlcjU1NDUwMjI=", "avatar_url": "https://avatars2.githubusercontent.com/u/5545022?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jspark1105", "html_url": "https://github.com/jspark1105", "followers_url": "https://api.github.com/users/jspark1105/followers", "following_url": "https://api.github.com/users/jspark1105/following{/other_user}", "gists_url": "https://api.github.com/users/jspark1105/gists{/gist_id}", "starred_url": "https://api.github.com/users/jspark1105/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jspark1105/subscriptions", "organizations_url": "https://api.github.com/users/jspark1105/orgs", "repos_url": "https://api.github.com/users/jspark1105/repos", "events_url": "https://api.github.com/users/jspark1105/events{/privacy}", "received_events_url": "https://api.github.com/users/jspark1105/received_events", "type": "User", "site_admin": false}, "body": "    float hi = nh[i] = h[i] + gi * gi;\r\n    nw[i] = w[i] + lr * gi / (std::sqrt(hi) + epsilon);\r\n\r\nHere, we're doing 2 multiplications, 3 additions, 1 division, and 1 sqrt.", "created_at": "2018-08-02T20:58:59Z", "updated_at": "2018-11-23T15:48:39Z", "html_url": "https://github.com/pytorch/pytorch/pull/9314#discussion_r207372195", "pull_request_url": "https://api.github.com/repos/pytorch/pytorch/pulls/9314", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/207372195"}, "html": {"href": "https://github.com/pytorch/pytorch/pull/9314#discussion_r207372195"}, "pull_request": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/9314"}}, "body_html": "<pre><code>float hi = nh[i] = h[i] + gi * gi;\nnw[i] = w[i] + lr * gi / (std::sqrt(hi) + epsilon);\n</code></pre>\n<p>Here, we're doing 2 multiplications, 3 additions, 1 division, and 1 sqrt.</p>", "body_text": "float hi = nh[i] = h[i] + gi * gi;\nnw[i] = w[i] + lr * gi / (std::sqrt(hi) + epsilon);\n\nHere, we're doing 2 multiplications, 3 additions, 1 division, and 1 sqrt.", "in_reply_to_id": 207364634}