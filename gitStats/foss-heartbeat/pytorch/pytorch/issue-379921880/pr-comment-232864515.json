{"url": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/232864515", "pull_request_review_id": 174154719, "id": 232864515, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIzMjg2NDUxNQ==", "diff_hunk": "@@ -19,18 +19,18 @@ class ShapeOp : public Operator<Context> {\n \n   bool RunOnDevice() override {\n     auto& data = Input(DATA);\n-    auto* output = Output(0);\n+\n     int numDims = data.dim();\n     int numAxes = axes_.size();\n     if (numAxes == 0) {\n-      output->Resize(numDims);\n+      auto* output = Output(0, {numDims}, at::dtype<int64_t>());\n       int64_t* output_data = output->template mutable_data<int64_t>();\n       context_.CopyBytesSameDevice(\n           numDims * sizeof(int64_t), data.sizes().data(), output_data);\n       return true;\n     }\n \n-    output->Resize(numAxes);\n+    auto* output = Output(0, {numAxes}, at::dtype<int64_t>());", "path": "caffe2/operators/shape_op.h", "position": 18, "original_position": 18, "commit_id": "44a39b74ed6b9315a66f440e45176b3ec7767ab9", "original_commit_id": "cb3dc3e5064f10a0e9e0f3929908d372b3eb929c", "user": {"login": "smessmer", "id": 2373925, "node_id": "MDQ6VXNlcjIzNzM5MjU=", "avatar_url": "https://avatars3.githubusercontent.com/u/2373925?v=4", "gravatar_id": "", "url": "https://api.github.com/users/smessmer", "html_url": "https://github.com/smessmer", "followers_url": "https://api.github.com/users/smessmer/followers", "following_url": "https://api.github.com/users/smessmer/following{/other_user}", "gists_url": "https://api.github.com/users/smessmer/gists{/gist_id}", "starred_url": "https://api.github.com/users/smessmer/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/smessmer/subscriptions", "organizations_url": "https://api.github.com/users/smessmer/orgs", "repos_url": "https://api.github.com/users/smessmer/repos", "events_url": "https://api.github.com/users/smessmer/events{/privacy}", "received_events_url": "https://api.github.com/users/smessmer/received_events", "type": "User", "site_admin": false}, "body": "I'm confused by this code. If `numAxes == 0`, then it first resizes it to `numDims`, adds some data, and then directly resizes it to `numAxes`, which is zero? Why write some data to it before resizing to zero? Should this code down here maybe live in an `else` branch of the above condition?", "created_at": "2018-11-13T01:05:36Z", "updated_at": "2018-11-23T15:54:42Z", "html_url": "https://github.com/pytorch/pytorch/pull/13856#discussion_r232864515", "pull_request_url": "https://api.github.com/repos/pytorch/pytorch/pulls/13856", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/232864515"}, "html": {"href": "https://github.com/pytorch/pytorch/pull/13856#discussion_r232864515"}, "pull_request": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/13856"}}, "body_html": "<p>I'm confused by this code. If <code>numAxes == 0</code>, then it first resizes it to <code>numDims</code>, adds some data, and then directly resizes it to <code>numAxes</code>, which is zero? Why write some data to it before resizing to zero? Should this code down here maybe live in an <code>else</code> branch of the above condition?</p>", "body_text": "I'm confused by this code. If numAxes == 0, then it first resizes it to numDims, adds some data, and then directly resizes it to numAxes, which is zero? Why write some data to it before resizing to zero? Should this code down here maybe live in an else branch of the above condition?"}