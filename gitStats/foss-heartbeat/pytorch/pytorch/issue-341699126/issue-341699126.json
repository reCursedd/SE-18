{"url": "https://api.github.com/repos/pytorch/pytorch/issues/9475", "repository_url": "https://api.github.com/repos/pytorch/pytorch", "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/9475/labels{/name}", "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/9475/comments", "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/9475/events", "html_url": "https://github.com/pytorch/pytorch/pull/9475", "id": 341699126, "node_id": "MDExOlB1bGxSZXF1ZXN0MjAxNzc2MjAx", "number": 9475, "title": "test_cuda: ensure tests use float and adjust HalfTensor tolerances", "user": {"login": "hartb", "id": 18429659, "node_id": "MDQ6VXNlcjE4NDI5NjU5", "avatar_url": "https://avatars1.githubusercontent.com/u/18429659?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hartb", "html_url": "https://github.com/hartb", "followers_url": "https://api.github.com/users/hartb/followers", "following_url": "https://api.github.com/users/hartb/following{/other_user}", "gists_url": "https://api.github.com/users/hartb/gists{/gist_id}", "starred_url": "https://api.github.com/users/hartb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hartb/subscriptions", "organizations_url": "https://api.github.com/users/hartb/orgs", "repos_url": "https://api.github.com/users/hartb/repos", "events_url": "https://api.github.com/users/hartb/events{/privacy}", "received_events_url": "https://api.github.com/users/hartb/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2018-07-16T22:21:40Z", "updated_at": "2018-07-17T18:13:28Z", "closed_at": "2018-07-17T17:26:09Z", "author_association": "CONTRIBUTOR", "pull_request": {"url": "https://api.github.com/repos/pytorch/pytorch/pulls/9475", "html_url": "https://github.com/pytorch/pytorch/pull/9475", "diff_url": "https://github.com/pytorch/pytorch/pull/9475.diff", "patch_url": "https://github.com/pytorch/pytorch/pull/9475.patch"}, "body_html": "<p>test_cuda.py uses routine 'number' to prepare many testscases.<br>\nnumber should return a floating point value for float-type tensor<br>\ntypes, or integer otherwise. But number's test to classify the type<br>\nis incorrect, so it always returns the integer value.<br>\n(type(t).<strong>name</strong> is always 'torch.tensortype' so never matches<br>\n'Double', 'Float', or 'Half'.)</p>\n<p>Update number to use the existing is_floating() helper to make the<br>\ncheck.</p>\n<p>The change to number causes a few tests to fail for HalfTensor. Relax<br>\nthe tolerance for those in line with other HalfTensor testcases. The<br>\nfailing tests--for addcdiv and fill--were not previously relaxed for<br>\nHalfTensor so are held to the over-strict 1e-5 default tolerance.</p>\n<p>Finally, update a couple other tests for HalfTensor type to use the<br>\nexisting is_half() helper.</p>", "body_text": "test_cuda.py uses routine 'number' to prepare many testscases.\nnumber should return a floating point value for float-type tensor\ntypes, or integer otherwise. But number's test to classify the type\nis incorrect, so it always returns the integer value.\n(type(t).name is always 'torch.tensortype' so never matches\n'Double', 'Float', or 'Half'.)\nUpdate number to use the existing is_floating() helper to make the\ncheck.\nThe change to number causes a few tests to fail for HalfTensor. Relax\nthe tolerance for those in line with other HalfTensor testcases. The\nfailing tests--for addcdiv and fill--were not previously relaxed for\nHalfTensor so are held to the over-strict 1e-5 default tolerance.\nFinally, update a couple other tests for HalfTensor type to use the\nexisting is_half() helper.", "body": "test_cuda.py uses routine 'number' to prepare many testscases.\r\nnumber should return a floating point value for float-type tensor\r\ntypes, or integer otherwise. But number's test to classify the type\r\nis incorrect, so it always returns the integer value.\r\n(type(t).__name__ is always 'torch.tensortype' so never matches\r\n'Double', 'Float', or 'Half'.)\r\n\r\nUpdate number to use the existing is_floating() helper to make the\r\ncheck.\r\n\r\nThe change to number causes a few tests to fail for HalfTensor. Relax\r\nthe tolerance for those in line with other HalfTensor testcases. The\r\nfailing tests--for addcdiv and fill--were not previously relaxed for\r\nHalfTensor so are held to the over-strict 1e-5 default tolerance.\r\n\r\nFinally, update a couple other tests for HalfTensor type to use the\r\nexisting is_half() helper.\r\n\r\n"}