{"url": "https://api.github.com/repos/pytorch/pytorch/issues/10546", "repository_url": "https://api.github.com/repos/pytorch/pytorch", "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/10546/labels{/name}", "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/10546/comments", "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/10546/events", "html_url": "https://github.com/pytorch/pytorch/pull/10546", "id": 350909204, "node_id": "MDExOlB1bGxSZXF1ZXN0MjA4NjM3NzUy", "number": 10546, "title": "Move all operator<< overloads out of the global namespace.", "user": {"login": "ezyang", "id": 13564, "node_id": "MDQ6VXNlcjEzNTY0", "avatar_url": "https://avatars0.githubusercontent.com/u/13564?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ezyang", "html_url": "https://github.com/ezyang", "followers_url": "https://api.github.com/users/ezyang/followers", "following_url": "https://api.github.com/users/ezyang/following{/other_user}", "gists_url": "https://api.github.com/users/ezyang/gists{/gist_id}", "starred_url": "https://api.github.com/users/ezyang/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ezyang/subscriptions", "organizations_url": "https://api.github.com/users/ezyang/orgs", "repos_url": "https://api.github.com/users/ezyang/repos", "events_url": "https://api.github.com/users/ezyang/events{/privacy}", "received_events_url": "https://api.github.com/users/ezyang/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2018-08-15T18:10:08Z", "updated_at": "2018-08-16T14:57:50Z", "closed_at": "2018-08-16T14:57:50Z", "author_association": "CONTRIBUTOR", "pull_request": {"url": "https://api.github.com/repos/pytorch/pytorch/pulls/10546", "html_url": "https://github.com/pytorch/pytorch/pull/10546", "diff_url": "https://github.com/pytorch/pytorch/pull/10546.diff", "patch_url": "https://github.com/pytorch/pytorch/pull/10546.patch"}, "body_html": "<p>Summary:<br>\nHave you ever written an operator&lt;&lt; overload in the caffe2 namespace<br>\nin a core Caffe2 header, and then been stunned when some completely<br>\nunrelated code started breaking?  This diff fixes this problem!</p>\n<p>The problem looks like this:</p>\n<ol>\n<li>You're building against a really old version of glog (think 0.3.2,<br>\nor something like that)</li>\n<li>This version of glog defines operator&lt;&lt; overloads for std containers<br>\nin the global namespace</li>\n<li>You add a new overload in your current namespace (e.g., caffe2).<br>\nCongratulations: this overload is <em>preferentially</em> chosen over<br>\nthe global namespace one for all calls to &lt;&lt; in that namespace.<br>\nAnd since it doesn't actually have std::vector overloads, unrelated<br>\nCaffe2 code breaks.</li>\n</ol>\n<p>Newer versions of glog have a fix for this: they have the line:</p>\n<p>namespace std { using ::operator&lt;&lt;; }</p>\n<p>in their header.  So let's help old versions of glog out and do this ourselves.</p>\n<p>In our new world order, operator&lt;&lt; overloads defined in the global namespace<br>\nwon't work (unless they're for std containers, which work because of ADL).<br>\nSo this diff also moves all those overloads to the correct namespace.</p>\n<p>Differential Revision: D9344540</p>", "body_text": "Summary:\nHave you ever written an operator<< overload in the caffe2 namespace\nin a core Caffe2 header, and then been stunned when some completely\nunrelated code started breaking?  This diff fixes this problem!\nThe problem looks like this:\n\nYou're building against a really old version of glog (think 0.3.2,\nor something like that)\nThis version of glog defines operator<< overloads for std containers\nin the global namespace\nYou add a new overload in your current namespace (e.g., caffe2).\nCongratulations: this overload is preferentially chosen over\nthe global namespace one for all calls to << in that namespace.\nAnd since it doesn't actually have std::vector overloads, unrelated\nCaffe2 code breaks.\n\nNewer versions of glog have a fix for this: they have the line:\nnamespace std { using ::operator<<; }\nin their header.  So let's help old versions of glog out and do this ourselves.\nIn our new world order, operator<< overloads defined in the global namespace\nwon't work (unless they're for std containers, which work because of ADL).\nSo this diff also moves all those overloads to the correct namespace.\nDifferential Revision: D9344540", "body": "Summary:\nHave you ever written an operator<< overload in the caffe2 namespace\nin a core Caffe2 header, and then been stunned when some completely\nunrelated code started breaking?  This diff fixes this problem!\n\nThe problem looks like this:\n1. You're building against a really old version of glog (think 0.3.2,\n   or something like that)\n2. This version of glog defines operator<< overloads for std containers\n   in the global namespace\n3. You add a new overload in your current namespace (e.g., caffe2).\n   Congratulations: this overload is *preferentially* chosen over\n   the global namespace one for all calls to << in that namespace.\n   And since it doesn't actually have std::vector overloads, unrelated\n   Caffe2 code breaks.\n\nNewer versions of glog have a fix for this: they have the line:\n\n  namespace std { using ::operator<<; }\n\nin their header.  So let's help old versions of glog out and do this ourselves.\n\nIn our new world order, operator<< overloads defined in the global namespace\nwon't work (unless they're for std containers, which work because of ADL).\nSo this diff also moves all those overloads to the correct namespace.\n\nDifferential Revision: D9344540\n"}