{"url": "https://api.github.com/repos/pytorch/pytorch/issues/comments/430455885", "html_url": "https://github.com/pytorch/pytorch/issues/4741#issuecomment-430455885", "issue_url": "https://api.github.com/repos/pytorch/pytorch/issues/4741", "id": 430455885, "node_id": "MDEyOklzc3VlQ29tbWVudDQzMDQ1NTg4NQ==", "user": {"login": "penguinshin", "id": 10840426, "node_id": "MDQ6VXNlcjEwODQwNDI2", "avatar_url": "https://avatars3.githubusercontent.com/u/10840426?v=4", "gravatar_id": "", "url": "https://api.github.com/users/penguinshin", "html_url": "https://github.com/penguinshin", "followers_url": "https://api.github.com/users/penguinshin/followers", "following_url": "https://api.github.com/users/penguinshin/following{/other_user}", "gists_url": "https://api.github.com/users/penguinshin/gists{/gist_id}", "starred_url": "https://api.github.com/users/penguinshin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/penguinshin/subscriptions", "organizations_url": "https://api.github.com/users/penguinshin/orgs", "repos_url": "https://api.github.com/users/penguinshin/repos", "events_url": "https://api.github.com/users/penguinshin/events{/privacy}", "received_events_url": "https://api.github.com/users/penguinshin/received_events", "type": "User", "site_admin": false}, "created_at": "2018-10-17T01:20:58Z", "updated_at": "2018-10-17T01:24:32Z", "author_association": "NONE", "body_html": "<p>Here's a minimum working example. You may have to run it a few times to get random matrices that work, but it should manifest within a few tries at most.</p>\n<pre><code>for momentum in [None, .1, 1]:\n\n     bn = nn.BatchNorm1d(1, momentum=momentum)\n     x = torch.rand(180,1,180)\n\n     bn.train()\n     print(f'momentum = {momentum} yields {bn(x).mean()} for TRAIN mode')\n\n\n     bn.eval()\n     print(f'momentum = {momentum} yields {bn(x).mean()} for EVAL mode')\n</code></pre>", "body_text": "Here's a minimum working example. You may have to run it a few times to get random matrices that work, but it should manifest within a few tries at most.\nfor momentum in [None, .1, 1]:\n\n     bn = nn.BatchNorm1d(1, momentum=momentum)\n     x = torch.rand(180,1,180)\n\n     bn.train()\n     print(f'momentum = {momentum} yields {bn(x).mean()} for TRAIN mode')\n\n\n     bn.eval()\n     print(f'momentum = {momentum} yields {bn(x).mean()} for EVAL mode')", "body": "Here's a minimum working example. You may have to run it a few times to get random matrices that work, but it should manifest within a few tries at most. \r\n\r\n    for momentum in [None, .1, 1]:\r\n\r\n         bn = nn.BatchNorm1d(1, momentum=momentum)\r\n         x = torch.rand(180,1,180)\r\n\r\n         bn.train()\r\n         print(f'momentum = {momentum} yields {bn(x).mean()} for TRAIN mode')\r\n\r\n\r\n         bn.eval()\r\n         print(f'momentum = {momentum} yields {bn(x).mean()} for EVAL mode')\r\n"}