{"url": "https://api.github.com/repos/pytorch/pytorch/issues/4623", "repository_url": "https://api.github.com/repos/pytorch/pytorch", "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/4623/labels{/name}", "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/4623/comments", "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/4623/events", "html_url": "https://github.com/pytorch/pytorch/issues/4623", "id": 287980587, "node_id": "MDU6SXNzdWUyODc5ODA1ODc=", "number": 4623, "title": "Variables are behaving strangely for indexing", "user": {"login": "vadimkantorov", "id": 1041752, "node_id": "MDQ6VXNlcjEwNDE3NTI=", "avatar_url": "https://avatars0.githubusercontent.com/u/1041752?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vadimkantorov", "html_url": "https://github.com/vadimkantorov", "followers_url": "https://api.github.com/users/vadimkantorov/followers", "following_url": "https://api.github.com/users/vadimkantorov/following{/other_user}", "gists_url": "https://api.github.com/users/vadimkantorov/gists{/gist_id}", "starred_url": "https://api.github.com/users/vadimkantorov/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vadimkantorov/subscriptions", "organizations_url": "https://api.github.com/users/vadimkantorov/orgs", "repos_url": "https://api.github.com/users/vadimkantorov/repos", "events_url": "https://api.github.com/users/vadimkantorov/events{/privacy}", "received_events_url": "https://api.github.com/users/vadimkantorov/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 424131847, "node_id": "MDU6TGFiZWw0MjQxMzE4NDc=", "url": "https://api.github.com/repos/pytorch/pytorch/labels/bug", "name": "bug", "color": "b60205", "default": true}], "state": "closed", "locked": false, "assignee": {"login": "colesbury", "id": 655866, "node_id": "MDQ6VXNlcjY1NTg2Ng==", "avatar_url": "https://avatars1.githubusercontent.com/u/655866?v=4", "gravatar_id": "", "url": "https://api.github.com/users/colesbury", "html_url": "https://github.com/colesbury", "followers_url": "https://api.github.com/users/colesbury/followers", "following_url": "https://api.github.com/users/colesbury/following{/other_user}", "gists_url": "https://api.github.com/users/colesbury/gists{/gist_id}", "starred_url": "https://api.github.com/users/colesbury/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/colesbury/subscriptions", "organizations_url": "https://api.github.com/users/colesbury/orgs", "repos_url": "https://api.github.com/users/colesbury/repos", "events_url": "https://api.github.com/users/colesbury/events{/privacy}", "received_events_url": "https://api.github.com/users/colesbury/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "colesbury", "id": 655866, "node_id": "MDQ6VXNlcjY1NTg2Ng==", "avatar_url": "https://avatars1.githubusercontent.com/u/655866?v=4", "gravatar_id": "", "url": "https://api.github.com/users/colesbury", "html_url": "https://github.com/colesbury", "followers_url": "https://api.github.com/users/colesbury/followers", "following_url": "https://api.github.com/users/colesbury/following{/other_user}", "gists_url": "https://api.github.com/users/colesbury/gists{/gist_id}", "starred_url": "https://api.github.com/users/colesbury/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/colesbury/subscriptions", "organizations_url": "https://api.github.com/users/colesbury/orgs", "repos_url": "https://api.github.com/users/colesbury/repos", "events_url": "https://api.github.com/users/colesbury/events{/privacy}", "received_events_url": "https://api.github.com/users/colesbury/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 3, "created_at": "2018-01-12T01:28:34Z", "updated_at": "2018-01-19T15:20:36Z", "closed_at": "2018-01-19T15:20:36Z", "author_association": "NONE", "body_html": "<p>In python2:</p>\n<div class=\"highlight highlight-source-python\"><pre><span class=\"pl-k\">import</span> torch\n\na <span class=\"pl-k\">=</span> torch.autograd.Variable(torch.ones(<span class=\"pl-c1\">50</span>))\n\ni <span class=\"pl-k\">=</span> torch.IntTensor([[<span class=\"pl-c1\">5</span>, <span class=\"pl-c1\">10</span>]])\nj <span class=\"pl-k\">=</span> torch.autograd.Variable(i)\n\n<span class=\"pl-k\">for</span> x0, x1 <span class=\"pl-k\">in</span> i:\n    <span class=\"pl-c1\">print</span>(a[x0:x1].size())\n<span class=\"pl-c\"><span class=\"pl-c\">#</span> expectedly:</span>\n<span class=\"pl-c\"><span class=\"pl-c\">#</span> (5,)</span>\n\n<span class=\"pl-c\"><span class=\"pl-c\">#</span> Case 1. If uncommented produces the exception below:</span>\n<span class=\"pl-c\"><span class=\"pl-c\">#</span> x0, x1 = j[0]</span>\n<span class=\"pl-c\"><span class=\"pl-c\">#</span> print(a[x0:x1].size())</span>\n<span class=\"pl-c\"><span class=\"pl-c\">#</span> wat? why zero? and where does the exception come from?</span>\n<span class=\"pl-c\"><span class=\"pl-c\">#</span>(0,)</span>\n<span class=\"pl-c\"><span class=\"pl-c\">#</span>Traceback (most recent call last):</span>\n<span class=\"pl-c\"><span class=\"pl-c\">#</span>  File \"bug.py\", line 14, in &lt;module&gt;</span>\n<span class=\"pl-c\"><span class=\"pl-c\">#</span>    for x0, x1 in j:</span>\n<span class=\"pl-c\"><span class=\"pl-c\">#</span>TypeError: slice indices must be integers or None or have an __index__ method</span>\n\n<span class=\"pl-c\"><span class=\"pl-c\">#</span> Case 2</span>\n<span class=\"pl-k\">for</span> x0, x1 <span class=\"pl-k\">in</span> j:\n    <span class=\"pl-c1\">print</span>(<span class=\"pl-s\"><span class=\"pl-pds\">'</span>print1<span class=\"pl-pds\">'</span></span>, x0, x1)\n    <span class=\"pl-c1\">print</span>(<span class=\"pl-s\"><span class=\"pl-pds\">'</span>print2<span class=\"pl-pds\">'</span></span>, x0, x1, <span class=\"pl-s\"><span class=\"pl-pds\">'</span>is:<span class=\"pl-pds\">'</span></span>, a[x0:x1].size())\n\n<span class=\"pl-c\"><span class=\"pl-c\">#</span> ok, this is known due to variable[0] is always a variable</span>\n<span class=\"pl-c\"><span class=\"pl-c\">#</span>('print1', Variable containing:</span>\n<span class=\"pl-c\"><span class=\"pl-c\">#</span> 5</span>\n<span class=\"pl-c\"><span class=\"pl-c\">#</span>[torch.IntTensor of size 1]</span>\n<span class=\"pl-c\"><span class=\"pl-c\">#</span>, Variable containing:</span>\n<span class=\"pl-c\"><span class=\"pl-c\">#</span> 10</span>\n<span class=\"pl-c\"><span class=\"pl-c\">#</span>[torch.IntTensor of size 1]</span>\n<span class=\"pl-c\"><span class=\"pl-c\">#</span>)</span>\n\n<span class=\"pl-c\"><span class=\"pl-c\">#</span> mega-wat?</span>\n<span class=\"pl-c\"><span class=\"pl-c\">#</span>('print2', Traceback (most recent call last):</span>\n<span class=\"pl-c\"><span class=\"pl-c\">#</span>  File \"bug.py\", line 13, in &lt;module&gt;</span>\n<span class=\"pl-c\"><span class=\"pl-c\">#</span>    print('print2', x0, x1, 'is:', a[x0:x1].size())</span>\n<span class=\"pl-c\"><span class=\"pl-c\">#</span>  File \".../python2.7/site-packages/torch/autograd/variable.py\", line 73, in __repr__</span>\n<span class=\"pl-c\"><span class=\"pl-c\">#</span>    return 'Variable containing:' + self.data.__repr__()</span>\n<span class=\"pl-c\"><span class=\"pl-c\">#</span>  File \".../python2.7/site-packages/torch/tensor.py\", line 144, in __repr__</span>\n<span class=\"pl-c\"><span class=\"pl-c\">#</span>    return str(self)</span>\n<span class=\"pl-c\"><span class=\"pl-c\">#</span>  File \".../python2.7/site-packages/torch/tensor.py\", line 150, in __str__</span>\n<span class=\"pl-c\"><span class=\"pl-c\">#</span>    if sys.version_info &gt; (3,):</span>\n<span class=\"pl-c\"><span class=\"pl-c\">#</span>TypeError: slice indices must be integers or None or have an __index__ method</span></pre></div>", "body_text": "In python2:\nimport torch\n\na = torch.autograd.Variable(torch.ones(50))\n\ni = torch.IntTensor([[5, 10]])\nj = torch.autograd.Variable(i)\n\nfor x0, x1 in i:\n    print(a[x0:x1].size())\n# expectedly:\n# (5,)\n\n# Case 1. If uncommented produces the exception below:\n# x0, x1 = j[0]\n# print(a[x0:x1].size())\n# wat? why zero? and where does the exception come from?\n#(0,)\n#Traceback (most recent call last):\n#  File \"bug.py\", line 14, in <module>\n#    for x0, x1 in j:\n#TypeError: slice indices must be integers or None or have an __index__ method\n\n# Case 2\nfor x0, x1 in j:\n    print('print1', x0, x1)\n    print('print2', x0, x1, 'is:', a[x0:x1].size())\n\n# ok, this is known due to variable[0] is always a variable\n#('print1', Variable containing:\n# 5\n#[torch.IntTensor of size 1]\n#, Variable containing:\n# 10\n#[torch.IntTensor of size 1]\n#)\n\n# mega-wat?\n#('print2', Traceback (most recent call last):\n#  File \"bug.py\", line 13, in <module>\n#    print('print2', x0, x1, 'is:', a[x0:x1].size())\n#  File \".../python2.7/site-packages/torch/autograd/variable.py\", line 73, in __repr__\n#    return 'Variable containing:' + self.data.__repr__()\n#  File \".../python2.7/site-packages/torch/tensor.py\", line 144, in __repr__\n#    return str(self)\n#  File \".../python2.7/site-packages/torch/tensor.py\", line 150, in __str__\n#    if sys.version_info > (3,):\n#TypeError: slice indices must be integers or None or have an __index__ method", "body": "In python2:\r\n\r\n```python\r\nimport torch\r\n\r\na = torch.autograd.Variable(torch.ones(50))\r\n\r\ni = torch.IntTensor([[5, 10]])\r\nj = torch.autograd.Variable(i)\r\n\r\nfor x0, x1 in i:\r\n    print(a[x0:x1].size())\r\n# expectedly:\r\n# (5,)\r\n\r\n# Case 1. If uncommented produces the exception below:\r\n# x0, x1 = j[0]\r\n# print(a[x0:x1].size())\r\n# wat? why zero? and where does the exception come from?\r\n#(0,)\r\n#Traceback (most recent call last):\r\n#  File \"bug.py\", line 14, in <module>\r\n#    for x0, x1 in j:\r\n#TypeError: slice indices must be integers or None or have an __index__ method\r\n\r\n# Case 2\r\nfor x0, x1 in j:\r\n    print('print1', x0, x1)\r\n    print('print2', x0, x1, 'is:', a[x0:x1].size())\r\n\r\n# ok, this is known due to variable[0] is always a variable\r\n#('print1', Variable containing:\r\n# 5\r\n#[torch.IntTensor of size 1]\r\n#, Variable containing:\r\n# 10\r\n#[torch.IntTensor of size 1]\r\n#)\r\n\r\n# mega-wat?\r\n#('print2', Traceback (most recent call last):\r\n#  File \"bug.py\", line 13, in <module>\r\n#    print('print2', x0, x1, 'is:', a[x0:x1].size())\r\n#  File \".../python2.7/site-packages/torch/autograd/variable.py\", line 73, in __repr__\r\n#    return 'Variable containing:' + self.data.__repr__()\r\n#  File \".../python2.7/site-packages/torch/tensor.py\", line 144, in __repr__\r\n#    return str(self)\r\n#  File \".../python2.7/site-packages/torch/tensor.py\", line 150, in __str__\r\n#    if sys.version_info > (3,):\r\n#TypeError: slice indices must be integers or None or have an __index__ method\r\n```"}