{"url": "https://api.github.com/repos/pytorch/pytorch/issues/comments/293489325", "html_url": "https://github.com/pytorch/pytorch/issues/1240#issuecomment-293489325", "issue_url": "https://api.github.com/repos/pytorch/pytorch/issues/1240", "id": 293489325, "node_id": "MDEyOklzc3VlQ29tbWVudDI5MzQ4OTMyNQ==", "user": {"login": "eklitzke", "id": 2734, "node_id": "MDQ6VXNlcjI3MzQ=", "avatar_url": "https://avatars0.githubusercontent.com/u/2734?v=4", "gravatar_id": "", "url": "https://api.github.com/users/eklitzke", "html_url": "https://github.com/eklitzke", "followers_url": "https://api.github.com/users/eklitzke/followers", "following_url": "https://api.github.com/users/eklitzke/following{/other_user}", "gists_url": "https://api.github.com/users/eklitzke/gists{/gist_id}", "starred_url": "https://api.github.com/users/eklitzke/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/eklitzke/subscriptions", "organizations_url": "https://api.github.com/users/eklitzke/orgs", "repos_url": "https://api.github.com/users/eklitzke/repos", "events_url": "https://api.github.com/users/eklitzke/events{/privacy}", "received_events_url": "https://api.github.com/users/eklitzke/received_events", "type": "User", "site_admin": false}, "created_at": "2017-04-12T06:48:40Z", "updated_at": "2017-04-12T06:57:22Z", "author_association": "CONTRIBUTOR", "body_html": "<p>I am getting these all over the place. Here's yet another example:</p>\n<pre><code>(gdb) bt\n#0  0x00007fec5f980125 in _int_malloc (av=av@entry=0x7fec00000020, bytes=bytes@entry=16) at malloc.c:3449\n#1  0x00007fec5f9839f8 in __GI___libc_malloc (bytes=16) at malloc.c:2890\n#2  0x00007fec60aef455 in allocate_dtv_entry (size=16, alignment=8) at dl-tls.c:591\n#3  allocate_and_init (map=0x55dddafd9cf0) at dl-tls.c:616\n#4  tls_get_addr_tail (ti=0x7fec49b9ff28, dtv=0x55dddbe8a020, the_map=0x55dddafd9cf0) at dl-tls.c:796\n#5  0x00007fec499214bc in __cxa_get_globals () from /home/evan/code/polo/.venv/lib/python3.6/site-packages/torch/lib/libshm.so\n#6  0x00007fec49920c06 in __cxa_throw () from /home/evan/code/polo/.venv/lib/python3.6/site-packages/torch/lib/libshm.so\n#7  0x00007fec4a1114db in torch::autograd::PyFunctionPostHook::operator() (this=0x55dddbd68ca8, _grad_inputs=..., _grad_outputs=...)\n    at torch/csrc/autograd/python_hook.cpp:81\n#8  0x00007fec4a0fd148 in torch::autograd::call_post_hooks (grad_output=std::vector of length -2, capacity 29 = {...}, \n    grad_input=std::vector of length 31, capacity 4 = {...}, fn=...) at torch/csrc/autograd/engine.cpp:124\n#9  torch::autograd::call_function (task=...) at torch/csrc/autograd/engine.cpp:132\n#10 torch::autograd::Engine::evaluate_function (this=this@entry=0x7fec4a978be0 &lt;engine&gt;, task=...) at torch/csrc/autograd/engine.cpp:136\n#11 0x00007fec4a0fec4a in torch::autograd::Engine::thread_main (this=this@entry=0x7fec4a978be0 &lt;engine&gt;, queue=...)\n    at torch/csrc/autograd/engine.cpp:95\n#12 0x00007fec4a10f7aa in PythonEngine::thread_main (this=0x7fec4a978be0 &lt;engine&gt;, queue=...) at torch/csrc/autograd/python_engine.cpp:21\n#13 0x00007fec2e768ef0 in std::execute_native_thread_routine_compat (__p=&lt;optimized out&gt;)\n    at ../../../../../libstdc++-v3/src/c++11/thread.cc:110\n#14 0x00007fec603ec36d in start_thread (arg=0x7fec0dae7700) at pthread_create.c:456\n#15 0x00007fec5fa07e0f in clone () at ../sysdeps/unix/sysv/linux/x86_64/clone.S:97\n</code></pre>\n<p>In the disas here, I see the segfault is occurring with:</p>\n<pre><code> =&gt; 0x00007fec5f980125 &lt;+405&gt;:\tmovaps %xmm0,(%rsp)\n</code></pre>\n<p>I also see:</p>\n<pre><code>(gdb) info registers\nrax            0x2\t2\nrbx            0x7fec00000020\t140651589009440\nrcx            0x7fec00000088\t140651589009544\nrdx            0x7fec00000088\t140651589009544\nrsi            0x0\t0\nrdi            0x5b\t91\nrbp            0x7fec00000020\t0x7fec00000020\nrsp            0x7fec0dae67d8\t0x7fec0dae67d8\nr8             0x7fec00004130\t140651589026096\nr9             0x0\t0\nr10            0x1\t1\nr11            0x7fec1cf0ea00\t140652074560000\nr12            0x55dddbe8a020\t94411365589024\nr13            0x20\t32\nr14            0x7fec00000078\t140651589009528\nr15            0x55dddafd9cf0\t94411350187248\nrip            0x7fec5f980125\t0x7fec5f980125 &lt;_int_malloc+405&gt;\neflags         0x10202\t[ IF RF ]\ncs             0x33\t51\nss             0x2b\t43\nds             0x0\t0\nes             0x0\t0\nfs             0x0\t0\ngs             0x0\t0\n\n(gdb) p *0x7fec0dae67d8\n$3 = 32\n</code></pre>\n<p>It looks to me like the stack is trashed here: <code>%rsp</code> is pointing to memory address 32, which is obviously not a mapped page.</p>", "body_text": "I am getting these all over the place. Here's yet another example:\n(gdb) bt\n#0  0x00007fec5f980125 in _int_malloc (av=av@entry=0x7fec00000020, bytes=bytes@entry=16) at malloc.c:3449\n#1  0x00007fec5f9839f8 in __GI___libc_malloc (bytes=16) at malloc.c:2890\n#2  0x00007fec60aef455 in allocate_dtv_entry (size=16, alignment=8) at dl-tls.c:591\n#3  allocate_and_init (map=0x55dddafd9cf0) at dl-tls.c:616\n#4  tls_get_addr_tail (ti=0x7fec49b9ff28, dtv=0x55dddbe8a020, the_map=0x55dddafd9cf0) at dl-tls.c:796\n#5  0x00007fec499214bc in __cxa_get_globals () from /home/evan/code/polo/.venv/lib/python3.6/site-packages/torch/lib/libshm.so\n#6  0x00007fec49920c06 in __cxa_throw () from /home/evan/code/polo/.venv/lib/python3.6/site-packages/torch/lib/libshm.so\n#7  0x00007fec4a1114db in torch::autograd::PyFunctionPostHook::operator() (this=0x55dddbd68ca8, _grad_inputs=..., _grad_outputs=...)\n    at torch/csrc/autograd/python_hook.cpp:81\n#8  0x00007fec4a0fd148 in torch::autograd::call_post_hooks (grad_output=std::vector of length -2, capacity 29 = {...}, \n    grad_input=std::vector of length 31, capacity 4 = {...}, fn=...) at torch/csrc/autograd/engine.cpp:124\n#9  torch::autograd::call_function (task=...) at torch/csrc/autograd/engine.cpp:132\n#10 torch::autograd::Engine::evaluate_function (this=this@entry=0x7fec4a978be0 <engine>, task=...) at torch/csrc/autograd/engine.cpp:136\n#11 0x00007fec4a0fec4a in torch::autograd::Engine::thread_main (this=this@entry=0x7fec4a978be0 <engine>, queue=...)\n    at torch/csrc/autograd/engine.cpp:95\n#12 0x00007fec4a10f7aa in PythonEngine::thread_main (this=0x7fec4a978be0 <engine>, queue=...) at torch/csrc/autograd/python_engine.cpp:21\n#13 0x00007fec2e768ef0 in std::execute_native_thread_routine_compat (__p=<optimized out>)\n    at ../../../../../libstdc++-v3/src/c++11/thread.cc:110\n#14 0x00007fec603ec36d in start_thread (arg=0x7fec0dae7700) at pthread_create.c:456\n#15 0x00007fec5fa07e0f in clone () at ../sysdeps/unix/sysv/linux/x86_64/clone.S:97\n\nIn the disas here, I see the segfault is occurring with:\n => 0x00007fec5f980125 <+405>:\tmovaps %xmm0,(%rsp)\n\nI also see:\n(gdb) info registers\nrax            0x2\t2\nrbx            0x7fec00000020\t140651589009440\nrcx            0x7fec00000088\t140651589009544\nrdx            0x7fec00000088\t140651589009544\nrsi            0x0\t0\nrdi            0x5b\t91\nrbp            0x7fec00000020\t0x7fec00000020\nrsp            0x7fec0dae67d8\t0x7fec0dae67d8\nr8             0x7fec00004130\t140651589026096\nr9             0x0\t0\nr10            0x1\t1\nr11            0x7fec1cf0ea00\t140652074560000\nr12            0x55dddbe8a020\t94411365589024\nr13            0x20\t32\nr14            0x7fec00000078\t140651589009528\nr15            0x55dddafd9cf0\t94411350187248\nrip            0x7fec5f980125\t0x7fec5f980125 <_int_malloc+405>\neflags         0x10202\t[ IF RF ]\ncs             0x33\t51\nss             0x2b\t43\nds             0x0\t0\nes             0x0\t0\nfs             0x0\t0\ngs             0x0\t0\n\n(gdb) p *0x7fec0dae67d8\n$3 = 32\n\nIt looks to me like the stack is trashed here: %rsp is pointing to memory address 32, which is obviously not a mapped page.", "body": "I am getting these all over the place. Here's yet another example:\r\n\r\n```\r\n(gdb) bt\r\n#0  0x00007fec5f980125 in _int_malloc (av=av@entry=0x7fec00000020, bytes=bytes@entry=16) at malloc.c:3449\r\n#1  0x00007fec5f9839f8 in __GI___libc_malloc (bytes=16) at malloc.c:2890\r\n#2  0x00007fec60aef455 in allocate_dtv_entry (size=16, alignment=8) at dl-tls.c:591\r\n#3  allocate_and_init (map=0x55dddafd9cf0) at dl-tls.c:616\r\n#4  tls_get_addr_tail (ti=0x7fec49b9ff28, dtv=0x55dddbe8a020, the_map=0x55dddafd9cf0) at dl-tls.c:796\r\n#5  0x00007fec499214bc in __cxa_get_globals () from /home/evan/code/polo/.venv/lib/python3.6/site-packages/torch/lib/libshm.so\r\n#6  0x00007fec49920c06 in __cxa_throw () from /home/evan/code/polo/.venv/lib/python3.6/site-packages/torch/lib/libshm.so\r\n#7  0x00007fec4a1114db in torch::autograd::PyFunctionPostHook::operator() (this=0x55dddbd68ca8, _grad_inputs=..., _grad_outputs=...)\r\n    at torch/csrc/autograd/python_hook.cpp:81\r\n#8  0x00007fec4a0fd148 in torch::autograd::call_post_hooks (grad_output=std::vector of length -2, capacity 29 = {...}, \r\n    grad_input=std::vector of length 31, capacity 4 = {...}, fn=...) at torch/csrc/autograd/engine.cpp:124\r\n#9  torch::autograd::call_function (task=...) at torch/csrc/autograd/engine.cpp:132\r\n#10 torch::autograd::Engine::evaluate_function (this=this@entry=0x7fec4a978be0 <engine>, task=...) at torch/csrc/autograd/engine.cpp:136\r\n#11 0x00007fec4a0fec4a in torch::autograd::Engine::thread_main (this=this@entry=0x7fec4a978be0 <engine>, queue=...)\r\n    at torch/csrc/autograd/engine.cpp:95\r\n#12 0x00007fec4a10f7aa in PythonEngine::thread_main (this=0x7fec4a978be0 <engine>, queue=...) at torch/csrc/autograd/python_engine.cpp:21\r\n#13 0x00007fec2e768ef0 in std::execute_native_thread_routine_compat (__p=<optimized out>)\r\n    at ../../../../../libstdc++-v3/src/c++11/thread.cc:110\r\n#14 0x00007fec603ec36d in start_thread (arg=0x7fec0dae7700) at pthread_create.c:456\r\n#15 0x00007fec5fa07e0f in clone () at ../sysdeps/unix/sysv/linux/x86_64/clone.S:97\r\n```\r\n\r\nIn the disas here, I see the segfault is occurring with:\r\n\r\n```\r\n => 0x00007fec5f980125 <+405>:\tmovaps %xmm0,(%rsp)\r\n```\r\n\r\nI also see:\r\n\r\n```\r\n(gdb) info registers\r\nrax            0x2\t2\r\nrbx            0x7fec00000020\t140651589009440\r\nrcx            0x7fec00000088\t140651589009544\r\nrdx            0x7fec00000088\t140651589009544\r\nrsi            0x0\t0\r\nrdi            0x5b\t91\r\nrbp            0x7fec00000020\t0x7fec00000020\r\nrsp            0x7fec0dae67d8\t0x7fec0dae67d8\r\nr8             0x7fec00004130\t140651589026096\r\nr9             0x0\t0\r\nr10            0x1\t1\r\nr11            0x7fec1cf0ea00\t140652074560000\r\nr12            0x55dddbe8a020\t94411365589024\r\nr13            0x20\t32\r\nr14            0x7fec00000078\t140651589009528\r\nr15            0x55dddafd9cf0\t94411350187248\r\nrip            0x7fec5f980125\t0x7fec5f980125 <_int_malloc+405>\r\neflags         0x10202\t[ IF RF ]\r\ncs             0x33\t51\r\nss             0x2b\t43\r\nds             0x0\t0\r\nes             0x0\t0\r\nfs             0x0\t0\r\ngs             0x0\t0\r\n\r\n(gdb) p *0x7fec0dae67d8\r\n$3 = 32\r\n```\r\n\r\nIt looks to me like the stack is trashed here: `%rsp` is pointing to memory address 32, which is obviously not a mapped page."}