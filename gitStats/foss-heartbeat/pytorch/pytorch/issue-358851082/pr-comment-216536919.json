{"url": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/216536919", "pull_request_review_id": 154039562, "id": 216536919, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIxNjUzNjkxOQ==", "diff_hunk": "@@ -81,50 +90,144 @@ AT_DEFINE_HASH_FOR_IDWRAPPER(caffe2::TypeIdentifier)\n \n namespace caffe2 {\n \n-AT_CORE_API std::unordered_map<TypeIdentifier, std::string>& gTypeNames();\n-AT_CORE_API std::unordered_set<std::string>& gRegisteredTypeNames();\n \n+namespace detail {\n+\n+struct TypeMetaData final {\n+  using PlacementNew = void(void*, size_t);\n+  using TypedCopy = void(const void*, void*, size_t);\n+  using TypedDestructor = void(void*, size_t);\n+\n+  size_t itemsize_;\n+  PlacementNew* ctor_;\n+  TypedCopy* copy_;\n+  TypedDestructor* dtor_;\n+  TypeIdentifier id_;\n+  const char* name_;\n+};\n+\n+// Mechanism for throwing errors which can't be prevented at compile time\n+// due to type erasure. E.g. somebody calling TypeMeta::copy() for\n+// non-copiable type. Right now just throws exception but is implemented", "path": "aten/src/ATen/core/typeid.h", "position": null, "original_position": 62, "commit_id": "25e01f322fe194f8bc320f6285d1065d4712bbf5", "original_commit_id": "6c75ed7a2076a74d4c8522a3d82a7fcca4a30506", "user": {"login": "ezyang", "id": 13564, "node_id": "MDQ6VXNlcjEzNTY0", "avatar_url": "https://avatars0.githubusercontent.com/u/13564?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ezyang", "html_url": "https://github.com/ezyang", "followers_url": "https://api.github.com/users/ezyang/followers", "following_url": "https://api.github.com/users/ezyang/following{/other_user}", "gists_url": "https://api.github.com/users/ezyang/gists{/gist_id}", "starred_url": "https://api.github.com/users/ezyang/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ezyang/subscriptions", "organizations_url": "https://api.github.com/users/ezyang/orgs", "repos_url": "https://api.github.com/users/ezyang/repos", "events_url": "https://api.github.com/users/ezyang/events{/privacy}", "received_events_url": "https://api.github.com/users/ezyang/received_events", "type": "User", "site_admin": false}, "body": "nit copyable", "created_at": "2018-09-11T03:37:24Z", "updated_at": "2018-11-23T15:50:57Z", "html_url": "https://github.com/pytorch/pytorch/pull/11502#discussion_r216536919", "pull_request_url": "https://api.github.com/repos/pytorch/pytorch/pulls/11502", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/216536919"}, "html": {"href": "https://github.com/pytorch/pytorch/pull/11502#discussion_r216536919"}, "pull_request": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/11502"}}, "body_html": "<p>nit copyable</p>", "body_text": "nit copyable"}