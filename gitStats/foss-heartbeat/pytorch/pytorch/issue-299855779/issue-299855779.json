{"url": "https://api.github.com/repos/pytorch/pytorch/issues/5388", "repository_url": "https://api.github.com/repos/pytorch/pytorch", "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/5388/labels{/name}", "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/5388/comments", "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/5388/events", "html_url": "https://github.com/pytorch/pytorch/issues/5388", "id": 299855779, "node_id": "MDU6SXNzdWUyOTk4NTU3Nzk=", "number": 5388, "title": "Perf regression: indexing 1-d tensor", "user": {"login": "colesbury", "id": 655866, "node_id": "MDQ6VXNlcjY1NTg2Ng==", "avatar_url": "https://avatars1.githubusercontent.com/u/655866?v=4", "gravatar_id": "", "url": "https://api.github.com/users/colesbury", "html_url": "https://github.com/colesbury", "followers_url": "https://api.github.com/users/colesbury/followers", "following_url": "https://api.github.com/users/colesbury/following{/other_user}", "gists_url": "https://api.github.com/users/colesbury/gists{/gist_id}", "starred_url": "https://api.github.com/users/colesbury/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/colesbury/subscriptions", "organizations_url": "https://api.github.com/users/colesbury/orgs", "repos_url": "https://api.github.com/users/colesbury/repos", "events_url": "https://api.github.com/users/colesbury/events{/privacy}", "received_events_url": "https://api.github.com/users/colesbury/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 443484135, "node_id": "MDU6TGFiZWw0NDM0ODQxMzU=", "url": "https://api.github.com/repos/pytorch/pytorch/labels/high%20priority", "name": "high priority", "color": "F22613", "default": false}, {"id": 797012849, "node_id": "MDU6TGFiZWw3OTcwMTI4NDk=", "url": "https://api.github.com/repos/pytorch/pytorch/labels/in%20progress", "name": "in progress", "color": "ededed", "default": false}, {"id": 679952992, "node_id": "MDU6TGFiZWw2Nzk5NTI5OTI=", "url": "https://api.github.com/repos/pytorch/pytorch/labels/performance", "name": "performance", "color": "f9d0c4", "default": false}], "state": "open", "locked": false, "assignee": {"login": "colesbury", "id": 655866, "node_id": "MDQ6VXNlcjY1NTg2Ng==", "avatar_url": "https://avatars1.githubusercontent.com/u/655866?v=4", "gravatar_id": "", "url": "https://api.github.com/users/colesbury", "html_url": "https://github.com/colesbury", "followers_url": "https://api.github.com/users/colesbury/followers", "following_url": "https://api.github.com/users/colesbury/following{/other_user}", "gists_url": "https://api.github.com/users/colesbury/gists{/gist_id}", "starred_url": "https://api.github.com/users/colesbury/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/colesbury/subscriptions", "organizations_url": "https://api.github.com/users/colesbury/orgs", "repos_url": "https://api.github.com/users/colesbury/repos", "events_url": "https://api.github.com/users/colesbury/events{/privacy}", "received_events_url": "https://api.github.com/users/colesbury/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "colesbury", "id": 655866, "node_id": "MDQ6VXNlcjY1NTg2Ng==", "avatar_url": "https://avatars1.githubusercontent.com/u/655866?v=4", "gravatar_id": "", "url": "https://api.github.com/users/colesbury", "html_url": "https://github.com/colesbury", "followers_url": "https://api.github.com/users/colesbury/followers", "following_url": "https://api.github.com/users/colesbury/following{/other_user}", "gists_url": "https://api.github.com/users/colesbury/gists{/gist_id}", "starred_url": "https://api.github.com/users/colesbury/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/colesbury/subscriptions", "organizations_url": "https://api.github.com/users/colesbury/orgs", "repos_url": "https://api.github.com/users/colesbury/repos", "events_url": "https://api.github.com/users/colesbury/events{/privacy}", "received_events_url": "https://api.github.com/users/colesbury/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 2, "created_at": "2018-02-23T21:28:23Z", "updated_at": "2018-09-05T18:28:35Z", "closed_at": null, "author_association": "MEMBER", "body_html": "<p>After the Tensor/Variable merge we have a perf regression with indexing a 1-d tensor:</p>\n<p>As of <a class=\"commit-link\" data-hovercard-type=\"commit\" data-hovercard-url=\"https://github.com/pytorch/pytorch/commit/6a2afe3b59e3ebc501d945cd8790c5e05670aaa4/hovercard\" href=\"https://github.com/pytorch/pytorch/commit/6a2afe3b59e3ebc501d945cd8790c5e05670aaa4\"><tt>6a2afe3</tt></a></p>\n<div class=\"highlight highlight-source-python\"><pre><span class=\"pl-k\">&gt;&gt;</span><span class=\"pl-k\">&gt;</span> <span class=\"pl-k\">import</span> torch\n<span class=\"pl-k\">&gt;&gt;</span><span class=\"pl-k\">&gt;</span> x <span class=\"pl-k\">=</span> torch.randn(<span class=\"pl-c1\">1000</span>)\n<span class=\"pl-k\">&gt;&gt;</span><span class=\"pl-k\">&gt;</span> <span class=\"pl-k\">%</span>timeit x[<span class=\"pl-c1\">0</span>]\n<span class=\"pl-c1\">435</span> ns \u00b1 <span class=\"pl-c1\">3.34</span> ns per loop (mean \u00b1 std. dev. of <span class=\"pl-c1\">7</span> runs, <span class=\"pl-c1\">1000000</span> loops each)\n<span class=\"pl-k\">&gt;&gt;</span><span class=\"pl-k\">&gt;</span> <span class=\"pl-k\">%</span>timeit x[<span class=\"pl-c1\">0</span>] <span class=\"pl-k\">=</span> <span class=\"pl-c1\">1</span>\n<span class=\"pl-c1\">449</span> ns \u00b1 <span class=\"pl-c1\">1.41</span> ns per loop (mean \u00b1 std. dev. of <span class=\"pl-c1\">7</span> runs, <span class=\"pl-c1\">1000000</span> loops each)</pre></div>\n<p>As of Tensor/Variable merge:</p>\n<div class=\"highlight highlight-source-python\"><pre><span class=\"pl-k\">&gt;&gt;</span><span class=\"pl-k\">&gt;</span> <span class=\"pl-k\">import</span> torch\n<span class=\"pl-k\">&gt;&gt;</span><span class=\"pl-k\">&gt;</span> x <span class=\"pl-k\">=</span> torch.randn(<span class=\"pl-c1\">1000</span>)\n<span class=\"pl-k\">&gt;&gt;</span><span class=\"pl-k\">&gt;</span> <span class=\"pl-k\">%</span>timeit x[<span class=\"pl-c1\">0</span>]\n<span class=\"pl-c1\">1000000</span> loops, best of <span class=\"pl-c1\">3</span>: <span class=\"pl-c1\">1.05</span> \u00b5s per loop\n<span class=\"pl-k\">&gt;&gt;</span><span class=\"pl-k\">&gt;</span> <span class=\"pl-k\">%</span>timeit x[<span class=\"pl-c1\">0</span>] <span class=\"pl-k\">=</span> <span class=\"pl-c1\">1</span>\n<span class=\"pl-c1\">100000</span> loops, best of <span class=\"pl-c1\">3</span>: <span class=\"pl-c1\">4.02</span> \u00b5s per loop</pre></div>\n<p>Note that indexing a Python list is even faster:</p>\n<div class=\"highlight highlight-source-python\"><pre><span class=\"pl-k\">&gt;&gt;</span><span class=\"pl-k\">&gt;</span> x <span class=\"pl-k\">=</span> [<span class=\"pl-c1\">0</span>] <span class=\"pl-k\">*</span> <span class=\"pl-c1\">1000</span>\n<span class=\"pl-k\">&gt;&gt;</span><span class=\"pl-k\">&gt;</span> <span class=\"pl-k\">%</span>timeit x[<span class=\"pl-c1\">0</span>]\n<span class=\"pl-c1\">10000000</span> loops, best of <span class=\"pl-c1\">3</span>: <span class=\"pl-c1\">36.3</span> ns per loop\n<span class=\"pl-k\">&gt;&gt;</span><span class=\"pl-k\">&gt;</span> <span class=\"pl-k\">%</span>timeit x[<span class=\"pl-c1\">0</span>] <span class=\"pl-k\">=</span> <span class=\"pl-c1\">1</span>\n<span class=\"pl-c1\">10000000</span> loops, best of <span class=\"pl-c1\">3</span>: <span class=\"pl-c1\">37.7</span> ns per loop</pre></div>\n<p>This affects things like:<br>\n<a href=\"https://github.com/pytorch/examples/blob/4ef2d4d0c8524372d0047e050065edcac665ce1a/word_language_model/data.py#L39-L46\">https://github.com/pytorch/examples/blob/4ef2d4d0c8524372d0047e050065edcac665ce1a/word_language_model/data.py#L39-L46</a></p>", "body_text": "After the Tensor/Variable merge we have a perf regression with indexing a 1-d tensor:\nAs of 6a2afe3\n>>> import torch\n>>> x = torch.randn(1000)\n>>> %timeit x[0]\n435 ns \u00b1 3.34 ns per loop (mean \u00b1 std. dev. of 7 runs, 1000000 loops each)\n>>> %timeit x[0] = 1\n449 ns \u00b1 1.41 ns per loop (mean \u00b1 std. dev. of 7 runs, 1000000 loops each)\nAs of Tensor/Variable merge:\n>>> import torch\n>>> x = torch.randn(1000)\n>>> %timeit x[0]\n1000000 loops, best of 3: 1.05 \u00b5s per loop\n>>> %timeit x[0] = 1\n100000 loops, best of 3: 4.02 \u00b5s per loop\nNote that indexing a Python list is even faster:\n>>> x = [0] * 1000\n>>> %timeit x[0]\n10000000 loops, best of 3: 36.3 ns per loop\n>>> %timeit x[0] = 1\n10000000 loops, best of 3: 37.7 ns per loop\nThis affects things like:\nhttps://github.com/pytorch/examples/blob/4ef2d4d0c8524372d0047e050065edcac665ce1a/word_language_model/data.py#L39-L46", "body": "After the Tensor/Variable merge we have a perf regression with indexing a 1-d tensor:\r\n\r\nAs of 6a2afe3\r\n\r\n```python\r\n>>> import torch\r\n>>> x = torch.randn(1000)\r\n>>> %timeit x[0]\r\n435 ns \u00b1 3.34 ns per loop (mean \u00b1 std. dev. of 7 runs, 1000000 loops each)\r\n>>> %timeit x[0] = 1\r\n449 ns \u00b1 1.41 ns per loop (mean \u00b1 std. dev. of 7 runs, 1000000 loops each)\r\n```\r\n\r\nAs of Tensor/Variable merge:\r\n\r\n```python\r\n>>> import torch\r\n>>> x = torch.randn(1000)\r\n>>> %timeit x[0]\r\n1000000 loops, best of 3: 1.05 \u00b5s per loop\r\n>>> %timeit x[0] = 1\r\n100000 loops, best of 3: 4.02 \u00b5s per loop\r\n```\r\n\r\nNote that indexing a Python list is even faster:\r\n\r\n```python\r\n>>> x = [0] * 1000\r\n>>> %timeit x[0]\r\n10000000 loops, best of 3: 36.3 ns per loop\r\n>>> %timeit x[0] = 1\r\n10000000 loops, best of 3: 37.7 ns per loop\r\n```\r\n\r\nThis affects things like:\r\nhttps://github.com/pytorch/examples/blob/4ef2d4d0c8524372d0047e050065edcac665ce1a/word_language_model/data.py#L39-L46"}