{"url": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/225736516", "pull_request_review_id": 165403284, "id": 225736516, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIyNTczNjUxNg==", "diff_hunk": "@@ -16,6 +17,27 @@ static Tensor to_impl(const Tensor& self, const TensorOptions& options, bool non\n                     .copy(self, non_blocking, options.device());\n }\n \n+Tensor to(const Tensor& self, const TensorOptions& options, bool non_blocking, bool copy) {\n+  AT_CHECK(options.requires_grad_opt() == c10::nullopt,\n+           \"to(options) expects unset requires_grad, but got \"\n+           \"options.requires_grad set as \", options.requires_grad());\n+\n+  const auto & layout_opt = options.layout_opt();\n+  AT_CHECK(!layout_opt || self.layout() == layout_opt.value(),\n+           \"to(options) doesn't support converting to a different layout, but \"\n+           \"got self.layout being \", self.layout(),\n+           \" and options.layout set as \", options.layout());\n+\n+  const auto & device_opt = options.device_opt();\n+  const auto & dtype_opt = options.dtype_opt();\n+  if ((!device_opt || self.device() == device_opt.value()) &&\n+      (!dtype_opt  || self.dtype()  ==  dtype_opt.value()) && !copy) {\n+    return self;\n+  }\n+\n+  return to_impl(self, options, non_blocking);", "path": "aten/src/ATen/native/TensorConversions.cpp", "position": 29, "original_position": 29, "commit_id": "3c55af0cc85820531adb0537e0fbb4ffdf7e3e82", "original_commit_id": "3c55af0cc85820531adb0537e0fbb4ffdf7e3e82", "user": {"login": "ezyang", "id": 13564, "node_id": "MDQ6VXNlcjEzNTY0", "avatar_url": "https://avatars0.githubusercontent.com/u/13564?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ezyang", "html_url": "https://github.com/ezyang", "followers_url": "https://api.github.com/users/ezyang/followers", "following_url": "https://api.github.com/users/ezyang/following{/other_user}", "gists_url": "https://api.github.com/users/ezyang/gists{/gist_id}", "starred_url": "https://api.github.com/users/ezyang/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ezyang/subscriptions", "organizations_url": "https://api.github.com/users/ezyang/orgs", "repos_url": "https://api.github.com/users/ezyang/repos", "events_url": "https://api.github.com/users/ezyang/events{/privacy}", "received_events_url": "https://api.github.com/users/ezyang/received_events", "type": "User", "site_admin": false}, "body": "Lol, I like how it's internally implemented as options.", "created_at": "2018-10-16T23:07:39Z", "updated_at": "2018-11-23T15:53:06Z", "html_url": "https://github.com/pytorch/pytorch/pull/12734#discussion_r225736516", "pull_request_url": "https://api.github.com/repos/pytorch/pytorch/pulls/12734", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/225736516"}, "html": {"href": "https://github.com/pytorch/pytorch/pull/12734#discussion_r225736516"}, "pull_request": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/12734"}}, "body_html": "<p>Lol, I like how it's internally implemented as options.</p>", "body_text": "Lol, I like how it's internally implemented as options."}