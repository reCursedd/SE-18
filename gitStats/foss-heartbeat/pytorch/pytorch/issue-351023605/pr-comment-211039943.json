{"url": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/211039943", "pull_request_review_id": 147390320, "id": 211039943, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIxMTAzOTk0Mw==", "diff_hunk": "@@ -1248,7 +1266,13 @@ struct to_ir {\n     if (it != function_table.end()) {\n       return std::make_shared<SimpleValue>(packOutputs(*graph, method.emit_call_to(ident.range(), it->second, inputs, attributes)));\n     }\n-    if(auto result = emitBuiltinCall(ident.range(), *method.graph(), Symbol::aten(ident.name()), inputs, attributes, false)) {\n+    if (auto result = emitBuiltinCall(\n+            ident.range(),\n+            *method.graph(),\n+            {Symbol::aten(ident.name()), Symbol::prim(ident.name())},", "path": "torch/csrc/jit/script/compiler.cpp", "position": 67, "original_position": 67, "commit_id": "de9110397a4d3cb7ca3823971426dc1059cdb35e", "original_commit_id": "de9110397a4d3cb7ca3823971426dc1059cdb35e", "user": {"login": "suo", "id": 1617424, "node_id": "MDQ6VXNlcjE2MTc0MjQ=", "avatar_url": "https://avatars2.githubusercontent.com/u/1617424?v=4", "gravatar_id": "", "url": "https://api.github.com/users/suo", "html_url": "https://github.com/suo", "followers_url": "https://api.github.com/users/suo/followers", "following_url": "https://api.github.com/users/suo/following{/other_user}", "gists_url": "https://api.github.com/users/suo/gists{/gist_id}", "starred_url": "https://api.github.com/users/suo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/suo/subscriptions", "organizations_url": "https://api.github.com/users/suo/orgs", "repos_url": "https://api.github.com/users/suo/repos", "events_url": "https://api.github.com/users/suo/events{/privacy}", "received_events_url": "https://api.github.com/users/suo/received_events", "type": "User", "site_admin": false}, "body": "I feel like that would add even more complexity to the compiler. Schema matching already chooses the right operator based on the type of the arguments. I guess we would save some time when looking for ops to match against but it seems unnecessary?", "created_at": "2018-08-17T21:45:03Z", "updated_at": "2018-11-23T15:49:37Z", "html_url": "https://github.com/pytorch/pytorch/pull/10566#discussion_r211039943", "pull_request_url": "https://api.github.com/repos/pytorch/pytorch/pulls/10566", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/211039943"}, "html": {"href": "https://github.com/pytorch/pytorch/pull/10566#discussion_r211039943"}, "pull_request": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/10566"}}, "body_html": "<p>I feel like that would add even more complexity to the compiler. Schema matching already chooses the right operator based on the type of the arguments. I guess we would save some time when looking for ops to match against but it seems unnecessary?</p>", "body_text": "I feel like that would add even more complexity to the compiler. Schema matching already chooses the right operator based on the type of the arguments. I guess we would save some time when looking for ops to match against but it seems unnecessary?", "in_reply_to_id": 210929883}