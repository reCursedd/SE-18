{"url": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/184164785", "pull_request_review_id": 115303759, "id": 184164785, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4NDE2NDc4NQ==", "diff_hunk": "@@ -373,6 +377,36 @@ void fixDefaultLstmCellState(Block *b) {\n   }\n }\n \n+static bool isSafeToSpeculate(Node* n) {\n+  return n->kind() == onnx::Transpose;\n+}\n+\n+static void speculateOps(Block* block) {\n+  for(auto it = block->nodes().begin(), end = block->nodes().end();\n+      it != end;) {\n+    Node * n = *it;\n+    ++it; //note: increment first so that it is safe to move the node if needed\n+\n+    for(auto b : n->blocks()) {\n+      speculateOps(b);\n+    }\n+    if(!isSafeToSpeculate(n))\n+      continue;\n+    // XXX - only works for nodes with a single input\n+    // move node n outside of the control flow it is nested in\n+    auto node_input = n->input()->node();\n+    if(node_input->owningBlock() == n->owningBlock())\n+      continue;\n+    // find the control flow node in the same block as node_input that contains\n+    // Node n\n+    auto flow_node = n->owningBlock()->owningNode();\n+    while(flow_node->owningBlock() != node_input->owningBlock())\n+      flow_node = flow_node->owningBlock()->owningNode();\n+    // put the node right before this flow node\n+    n->moveBefore(flow_node);\n+  }\n+}", "path": "torch/csrc/jit/passes/onnx/peephole.cpp", "position": null, "original_position": 50, "commit_id": "97fe2e468707c3df35b79dc078ca6fb5e5a88acd", "original_commit_id": "d82e18ab7e55654df2694ad75fa72ba0d7c4833d", "user": {"login": "zdevito", "id": 370202, "node_id": "MDQ6VXNlcjM3MDIwMg==", "avatar_url": "https://avatars0.githubusercontent.com/u/370202?v=4", "gravatar_id": "", "url": "https://api.github.com/users/zdevito", "html_url": "https://github.com/zdevito", "followers_url": "https://api.github.com/users/zdevito/followers", "following_url": "https://api.github.com/users/zdevito/following{/other_user}", "gists_url": "https://api.github.com/users/zdevito/gists{/gist_id}", "starred_url": "https://api.github.com/users/zdevito/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/zdevito/subscriptions", "organizations_url": "https://api.github.com/users/zdevito/orgs", "repos_url": "https://api.github.com/users/zdevito/repos", "events_url": "https://api.github.com/users/zdevito/events{/privacy}", "received_events_url": "https://api.github.com/users/zdevito/received_events", "type": "User", "site_admin": false}, "body": "We need to move transposes of weights into the ONNX `init_net` for perf reasons. But things inside control flow will not move to the init_net just the top-level nodes. ONNX Transpose is safe to speculate (it just reverses dimensions). Torch tranpose is not (it checks dim==2, i think). Moving it outside of an if statement can cause errors in a previously correct program. Almost _every_ operator in the graph is unsafe to speculate in this way, so this pass is very specific.", "created_at": "2018-04-25T18:34:20Z", "updated_at": "2018-11-23T15:43:11Z", "html_url": "https://github.com/pytorch/pytorch/pull/6924#discussion_r184164785", "pull_request_url": "https://api.github.com/repos/pytorch/pytorch/pulls/6924", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/184164785"}, "html": {"href": "https://github.com/pytorch/pytorch/pull/6924#discussion_r184164785"}, "pull_request": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/6924"}}, "body_html": "<p>We need to move transposes of weights into the ONNX <code>init_net</code> for perf reasons. But things inside control flow will not move to the init_net just the top-level nodes. ONNX Transpose is safe to speculate (it just reverses dimensions). Torch tranpose is not (it checks dim==2, i think). Moving it outside of an if statement can cause errors in a previously correct program. Almost <em>every</em> operator in the graph is unsafe to speculate in this way, so this pass is very specific.</p>", "body_text": "We need to move transposes of weights into the ONNX init_net for perf reasons. But things inside control flow will not move to the init_net just the top-level nodes. ONNX Transpose is safe to speculate (it just reverses dimensions). Torch tranpose is not (it checks dim==2, i think). Moving it outside of an if statement can cause errors in a previously correct program. Almost every operator in the graph is unsafe to speculate in this way, so this pass is very specific.", "in_reply_to_id": 183963168}