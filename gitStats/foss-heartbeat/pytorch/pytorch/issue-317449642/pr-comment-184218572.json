{"url": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/184218572", "pull_request_review_id": 115370015, "id": 184218572, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4NDIxODU3Mg==", "diff_hunk": "@@ -373,6 +377,36 @@ void fixDefaultLstmCellState(Block *b) {\n   }\n }\n \n+static bool isSafeToSpeculate(Node* n) {\n+  return n->kind() == onnx::Transpose;\n+}\n+\n+static void speculateOps(Block* block) {\n+  for(auto it = block->nodes().begin(), end = block->nodes().end();\n+      it != end;) {\n+    Node * n = *it;\n+    ++it; //note: increment first so that it is safe to move the node if needed\n+\n+    for(auto b : n->blocks()) {\n+      speculateOps(b);\n+    }\n+    if(!isSafeToSpeculate(n))\n+      continue;\n+    // XXX - only works for nodes with a single input\n+    // move node n outside of the control flow it is nested in\n+    auto node_input = n->input()->node();\n+    if(node_input->owningBlock() == n->owningBlock())\n+      continue;\n+    // find the control flow node in the same block as node_input that contains\n+    // Node n\n+    auto flow_node = n->owningBlock()->owningNode();\n+    while(flow_node->owningBlock() != node_input->owningBlock())\n+      flow_node = flow_node->owningBlock()->owningNode();\n+    // put the node right before this flow node\n+    n->moveBefore(flow_node);\n+  }\n+}", "path": "torch/csrc/jit/passes/onnx/peephole.cpp", "position": null, "original_position": 50, "commit_id": "97fe2e468707c3df35b79dc078ca6fb5e5a88acd", "original_commit_id": "d82e18ab7e55654df2694ad75fa72ba0d7c4833d", "user": {"login": "apaszke", "id": 4583066, "node_id": "MDQ6VXNlcjQ1ODMwNjY=", "avatar_url": "https://avatars3.githubusercontent.com/u/4583066?v=4", "gravatar_id": "", "url": "https://api.github.com/users/apaszke", "html_url": "https://github.com/apaszke", "followers_url": "https://api.github.com/users/apaszke/followers", "following_url": "https://api.github.com/users/apaszke/following{/other_user}", "gists_url": "https://api.github.com/users/apaszke/gists{/gist_id}", "starred_url": "https://api.github.com/users/apaszke/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/apaszke/subscriptions", "organizations_url": "https://api.github.com/users/apaszke/orgs", "repos_url": "https://api.github.com/users/apaszke/repos", "events_url": "https://api.github.com/users/apaszke/events{/privacy}", "received_events_url": "https://api.github.com/users/apaszke/received_events", "type": "User", "site_admin": false}, "body": "(Just a general comment, not to this PR) I'm not sure why the transpose in torch would be unsafe, since you know that it's input won't change because of the blocks that you take it out of.", "created_at": "2018-04-25T21:58:57Z", "updated_at": "2018-11-23T15:43:11Z", "html_url": "https://github.com/pytorch/pytorch/pull/6924#discussion_r184218572", "pull_request_url": "https://api.github.com/repos/pytorch/pytorch/pulls/6924", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/184218572"}, "html": {"href": "https://github.com/pytorch/pytorch/pull/6924#discussion_r184218572"}, "pull_request": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/6924"}}, "body_html": "<p>(Just a general comment, not to this PR) I'm not sure why the transpose in torch would be unsafe, since you know that it's input won't change because of the blocks that you take it out of.</p>", "body_text": "(Just a general comment, not to this PR) I'm not sure why the transpose in torch would be unsafe, since you know that it's input won't change because of the blocks that you take it out of.", "in_reply_to_id": 183963168}