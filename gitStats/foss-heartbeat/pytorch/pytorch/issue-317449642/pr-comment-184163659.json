{"url": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/184163659", "pull_request_review_id": 115302375, "id": 184163659, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4NDE2MzY1OQ==", "diff_hunk": "@@ -2833,6 +2833,34 @@ def foo(x, y):\n         foo.graph.propagate_shapes((a, b), False)\n         self.assertExpected(str(foo.graph))\n \n+    def test_onnx_export_speculate(self):\n+\n+        class Foo(torch.jit.ScriptModule):\n+            def __init__(self):\n+                super(Foo, self).__init__()\n+                self.linear = torch.jit.trace(torch.zeros(1, 10, dtype=torch.float))(nn.Linear(10, 20).float())\n+\n+            @torch.jit.script_method\n+            def forward(self, x):\n+                x += x\n+                if True:", "path": "test/test_jit.py", "position": 49, "original_position": 14, "commit_id": "97fe2e468707c3df35b79dc078ca6fb5e5a88acd", "original_commit_id": "bae5611f9433a1a8b9873c0fc751bb404d902409", "user": {"login": "zdevito", "id": 370202, "node_id": "MDQ6VXNlcjM3MDIwMg==", "avatar_url": "https://avatars0.githubusercontent.com/u/370202?v=4", "gravatar_id": "", "url": "https://api.github.com/users/zdevito", "html_url": "https://github.com/zdevito", "followers_url": "https://api.github.com/users/zdevito/followers", "following_url": "https://api.github.com/users/zdevito/following{/other_user}", "gists_url": "https://api.github.com/users/zdevito/gists{/gist_id}", "starred_url": "https://api.github.com/users/zdevito/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/zdevito/subscriptions", "organizations_url": "https://api.github.com/users/zdevito/orgs", "repos_url": "https://api.github.com/users/zdevito/repos", "events_url": "https://api.github.com/users/zdevito/events{/privacy}", "received_events_url": "https://api.github.com/users/zdevito/received_events", "type": "User", "site_admin": false}, "body": "y has to be assigned along all paths, so putting it into a loop would require putting `y = self.m(x)` before the loop but that would make it difficult to observe that the transpose call gets lifted. ", "created_at": "2018-04-25T18:30:41Z", "updated_at": "2018-11-23T15:43:11Z", "html_url": "https://github.com/pytorch/pytorch/pull/6924#discussion_r184163659", "pull_request_url": "https://api.github.com/repos/pytorch/pytorch/pulls/6924", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/184163659"}, "html": {"href": "https://github.com/pytorch/pytorch/pull/6924#discussion_r184163659"}, "pull_request": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/6924"}}, "body_html": "<p>y has to be assigned along all paths, so putting it into a loop would require putting <code>y = self.m(x)</code> before the loop but that would make it difficult to observe that the transpose call gets lifted.</p>", "body_text": "y has to be assigned along all paths, so putting it into a loop would require putting y = self.m(x) before the loop but that would make it difficult to observe that the transpose call gets lifted.", "in_reply_to_id": 184141978}