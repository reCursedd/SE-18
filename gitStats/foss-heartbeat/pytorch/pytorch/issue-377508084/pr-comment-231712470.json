{"url": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/231712470", "pull_request_review_id": 172734518, "id": 231712470, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIzMTcxMjQ3MA==", "diff_hunk": "@@ -675,6 +675,43 @@ def test_shape(sparse_dims, nnz, sizes):\n         test_shape(2, 20, [3, 17, 19, 5])\n         test_shape(2, 20, [3, 17, 19, 0])\n \n+    @skipIfRocm\n+    def test_cat(self):\n+        # shapes: list of tuples (sparse_dims, nnz, sizes)\n+        def test_shapes(shapes, dim, fail_message=None):\n+            inputs = [self._gen_sparse(shape[0], shape[1], shape[2])[0]\n+                      for shape in shapes]\n+            if fail_message:\n+                with self.assertRaisesRegex(RuntimeError, fail_message):\n+                    torch.cat(inputs, dim)\n+            else:\n+                result = torch.cat(inputs, dim)\n+                dense_result = torch.cat([t.to_dense() for t in inputs], dim)\n+                self.assertEqual(dense_result, result.to_dense())\n+\n+        test_shapes(\n+            [(3, 10, [2, 3, 4]), (3, 10, [2, 1, 4]), (3, 10, [2, 4, 4])], 1)\n+        test_shapes([(3, 10, [2, 3, 4]), (3, 10, [2, 1, 4])], 0,\n+                    \"can't be concatenated.*along dimension 0\")", "path": "test/test_sparse.py", "position": null, "original_position": 21, "commit_id": "0686a6a0c363cd8375953c7a488afc38272b4afa", "original_commit_id": "b5b88bdcfd55aa67dd888ed2731fc71b4fb62cb7", "user": {"login": "gchanan", "id": 3768583, "node_id": "MDQ6VXNlcjM3Njg1ODM=", "avatar_url": "https://avatars2.githubusercontent.com/u/3768583?v=4", "gravatar_id": "", "url": "https://api.github.com/users/gchanan", "html_url": "https://github.com/gchanan", "followers_url": "https://api.github.com/users/gchanan/followers", "following_url": "https://api.github.com/users/gchanan/following{/other_user}", "gists_url": "https://api.github.com/users/gchanan/gists{/gist_id}", "starred_url": "https://api.github.com/users/gchanan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/gchanan/subscriptions", "organizations_url": "https://api.github.com/users/gchanan/orgs", "repos_url": "https://api.github.com/users/gchanan/repos", "events_url": "https://api.github.com/users/gchanan/events{/privacy}", "received_events_url": "https://api.github.com/users/gchanan/received_events", "type": "User", "site_admin": false}, "body": "can you improve this check?  The error message you check could be valid for pretty much any error.", "created_at": "2018-11-07T23:05:56Z", "updated_at": "2018-11-23T15:54:29Z", "html_url": "https://github.com/pytorch/pytorch/pull/13577#discussion_r231712470", "pull_request_url": "https://api.github.com/repos/pytorch/pytorch/pulls/13577", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/231712470"}, "html": {"href": "https://github.com/pytorch/pytorch/pull/13577#discussion_r231712470"}, "pull_request": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/13577"}}, "body_html": "<p>can you improve this check?  The error message you check could be valid for pretty much any error.</p>", "body_text": "can you improve this check?  The error message you check could be valid for pretty much any error."}