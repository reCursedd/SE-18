{"url": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/170325991", "pull_request_review_id": 99003126, "id": 170325991, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE3MDMyNTk5MQ==", "diff_hunk": "@@ -1534,23 +1533,45 @@ def test_if_while(a, b) -> (c):\n         self.checkScript(script, inputs, outputs, False, 'test_if_while')\n \n     def test_script_ternary(self):\n-        cu = torch.jit._jit_script_compile('''\n+        cu = torch.jit.CompilationUnit('''\n         def test_ternary_control(a, b) -> (c):\n             c = 3\n             if a > 3:\n                 c = a + b\n             else:\n                 c = b\n         ''')\n-        cu2 = torch.jit._jit_script_compile('''\n+        cu2 = torch.jit.CompilationUnit('''\n         def test_ternary(a, b) -> (c):\n             c = 3\n             c = a + b if a > 3 else b\n         ''')\n         self.assertEqual(\n-            str(cu.get_graph('test_ternary_control')),\n-            str(cu2.get_graph('test_ternary')),\n+            str(cu.cu.get_graph('test_ternary_control')),\n+            str(cu2.cu.get_graph('test_ternary')),", "path": "test/test_jit.py", "position": 351, "original_position": 227, "commit_id": "6bf274f65a54b6d0f63db69e524d0a68591b9b90", "original_commit_id": "c2d7035cef0fcba2667fb3b9a14f4d4f3a88ad9d", "user": {"login": "zdevito", "id": 370202, "node_id": "MDQ6VXNlcjM3MDIwMg==", "avatar_url": "https://avatars0.githubusercontent.com/u/370202?v=4", "gravatar_id": "", "url": "https://api.github.com/users/zdevito", "html_url": "https://github.com/zdevito", "followers_url": "https://api.github.com/users/zdevito/followers", "following_url": "https://api.github.com/users/zdevito/following{/other_user}", "gists_url": "https://api.github.com/users/zdevito/gists{/gist_id}", "starred_url": "https://api.github.com/users/zdevito/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/zdevito/subscriptions", "organizations_url": "https://api.github.com/users/zdevito/orgs", "repos_url": "https://api.github.com/users/zdevito/repos", "events_url": "https://api.github.com/users/zdevito/events{/privacy}", "received_events_url": "https://api.github.com/users/zdevito/received_events", "type": "User", "site_admin": false}, "body": "The frontend-facing CompilationUnit doesn't expose graphs, just the GraphExecutor objects that run the graphs. I just reached into the members of CompilationUnit here to get to the underlying C struct so we can check graph equality. If in the future we see the need for users to call get_graph, we can create a proxy method.", "created_at": "2018-02-23T18:17:10Z", "updated_at": "2018-11-23T15:39:56Z", "html_url": "https://github.com/pytorch/pytorch/pull/5367#discussion_r170325991", "pull_request_url": "https://api.github.com/repos/pytorch/pytorch/pulls/5367", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/170325991"}, "html": {"href": "https://github.com/pytorch/pytorch/pull/5367#discussion_r170325991"}, "pull_request": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/5367"}}, "body_html": "<p>The frontend-facing CompilationUnit doesn't expose graphs, just the GraphExecutor objects that run the graphs. I just reached into the members of CompilationUnit here to get to the underlying C struct so we can check graph equality. If in the future we see the need for users to call get_graph, we can create a proxy method.</p>", "body_text": "The frontend-facing CompilationUnit doesn't expose graphs, just the GraphExecutor objects that run the graphs. I just reached into the members of CompilationUnit here to get to the underlying C struct so we can check graph equality. If in the future we see the need for users to call get_graph, we can create a proxy method.", "in_reply_to_id": 170193636}