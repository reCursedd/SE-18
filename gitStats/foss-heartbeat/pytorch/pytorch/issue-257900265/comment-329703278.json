{"url": "https://api.github.com/repos/pytorch/pytorch/issues/comments/329703278", "html_url": "https://github.com/pytorch/pytorch/issues/2747#issuecomment-329703278", "issue_url": "https://api.github.com/repos/pytorch/pytorch/issues/2747", "id": 329703278, "node_id": "MDEyOklzc3VlQ29tbWVudDMyOTcwMzI3OA==", "user": {"login": "Pavel-Akapian", "id": 30433974, "node_id": "MDQ6VXNlcjMwNDMzOTc0", "avatar_url": "https://avatars3.githubusercontent.com/u/30433974?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Pavel-Akapian", "html_url": "https://github.com/Pavel-Akapian", "followers_url": "https://api.github.com/users/Pavel-Akapian/followers", "following_url": "https://api.github.com/users/Pavel-Akapian/following{/other_user}", "gists_url": "https://api.github.com/users/Pavel-Akapian/gists{/gist_id}", "starred_url": "https://api.github.com/users/Pavel-Akapian/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Pavel-Akapian/subscriptions", "organizations_url": "https://api.github.com/users/Pavel-Akapian/orgs", "repos_url": "https://api.github.com/users/Pavel-Akapian/repos", "events_url": "https://api.github.com/users/Pavel-Akapian/events{/privacy}", "received_events_url": "https://api.github.com/users/Pavel-Akapian/received_events", "type": "User", "site_admin": false}, "created_at": "2017-09-15T07:22:12Z", "updated_at": "2017-09-15T07:25:23Z", "author_association": "NONE", "body_html": "<p><a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=191033\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/lantiga\">@lantiga</a> That's it...</p>\n<pre><code>---------------------------------------------------------------------------\nTypeError                                 Traceback (most recent call last)\n&lt;ipython-input-15-d2ab8dcf1693&gt; in &lt;module&gt;()\n      3                                test_value ,                       # model input (or a tuple for multiple inputs)\n      4                                \"nails.onnx\", # where to save the model (can be a file or file-like object)\n----&gt; 5                                export_params=True,verbose=True)  # store the trained parameter weights inside the model file\n\n/usr/local/share/anaconda2/envs/onnx_env/lib/python2.7/site-packages/torch/onnx.pyc in _export(model, args, f, export_params, kwargs, verbose)\n     49         # NB: OrderedDict values is not actually a list, but trace.export is\n     50         # not duck-typed and expects an actual list.\n---&gt; 51         proto = trace.export(list(model.state_dict().values()), verbose)\n     52     else:\n     53         proto = trace.export(verbose)\n\nTypeError: symbolic() takes at most 4 arguments (5 given)\n</code></pre>", "body_text": "@lantiga That's it...\n---------------------------------------------------------------------------\nTypeError                                 Traceback (most recent call last)\n<ipython-input-15-d2ab8dcf1693> in <module>()\n      3                                test_value ,                       # model input (or a tuple for multiple inputs)\n      4                                \"nails.onnx\", # where to save the model (can be a file or file-like object)\n----> 5                                export_params=True,verbose=True)  # store the trained parameter weights inside the model file\n\n/usr/local/share/anaconda2/envs/onnx_env/lib/python2.7/site-packages/torch/onnx.pyc in _export(model, args, f, export_params, kwargs, verbose)\n     49         # NB: OrderedDict values is not actually a list, but trace.export is\n     50         # not duck-typed and expects an actual list.\n---> 51         proto = trace.export(list(model.state_dict().values()), verbose)\n     52     else:\n     53         proto = trace.export(verbose)\n\nTypeError: symbolic() takes at most 4 arguments (5 given)", "body": "@lantiga That's it...\r\n```\r\n---------------------------------------------------------------------------\r\nTypeError                                 Traceback (most recent call last)\r\n<ipython-input-15-d2ab8dcf1693> in <module>()\r\n      3                                test_value ,                       # model input (or a tuple for multiple inputs)\r\n      4                                \"nails.onnx\", # where to save the model (can be a file or file-like object)\r\n----> 5                                export_params=True,verbose=True)  # store the trained parameter weights inside the model file\r\n\r\n/usr/local/share/anaconda2/envs/onnx_env/lib/python2.7/site-packages/torch/onnx.pyc in _export(model, args, f, export_params, kwargs, verbose)\r\n     49         # NB: OrderedDict values is not actually a list, but trace.export is\r\n     50         # not duck-typed and expects an actual list.\r\n---> 51         proto = trace.export(list(model.state_dict().values()), verbose)\r\n     52     else:\r\n     53         proto = trace.export(verbose)\r\n\r\nTypeError: symbolic() takes at most 4 arguments (5 given)\r\n```\r\n"}