{"url": "https://api.github.com/repos/pytorch/pytorch/issues/comments/386242514", "html_url": "https://github.com/pytorch/pytorch/issues/7228#issuecomment-386242514", "issue_url": "https://api.github.com/repos/pytorch/pytorch/issues/7228", "id": 386242514, "node_id": "MDEyOklzc3VlQ29tbWVudDM4NjI0MjUxNA==", "user": {"login": "apaszke", "id": 4583066, "node_id": "MDQ6VXNlcjQ1ODMwNjY=", "avatar_url": "https://avatars3.githubusercontent.com/u/4583066?v=4", "gravatar_id": "", "url": "https://api.github.com/users/apaszke", "html_url": "https://github.com/apaszke", "followers_url": "https://api.github.com/users/apaszke/followers", "following_url": "https://api.github.com/users/apaszke/following{/other_user}", "gists_url": "https://api.github.com/users/apaszke/gists{/gist_id}", "starred_url": "https://api.github.com/users/apaszke/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/apaszke/subscriptions", "organizations_url": "https://api.github.com/users/apaszke/orgs", "repos_url": "https://api.github.com/users/apaszke/repos", "events_url": "https://api.github.com/users/apaszke/events{/privacy}", "received_events_url": "https://api.github.com/users/apaszke/received_events", "type": "User", "site_admin": false}, "created_at": "2018-05-03T09:44:15Z", "updated_at": "2018-05-03T09:44:15Z", "author_association": "MEMBER", "body_html": "<p><a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=6429851\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/goldsborough\">@goldsborough</a> that doesn't sound too hard. I think we can safely pick a constant for maximum number of devices in the system of any particular kind. For now it can definitely be e.g. 128. Then, the hash of device object can just become <code>static_cast&lt;int&gt;(device.type) * MAX_DEVICES + device.index</code>. That would also have the property of being deterministic, although there's nothing wrong with hashing objects differently on different machines. In fact, <code>hash('asdf')</code> will have different value every time you run a new Python process.</p>", "body_text": "@goldsborough that doesn't sound too hard. I think we can safely pick a constant for maximum number of devices in the system of any particular kind. For now it can definitely be e.g. 128. Then, the hash of device object can just become static_cast<int>(device.type) * MAX_DEVICES + device.index. That would also have the property of being deterministic, although there's nothing wrong with hashing objects differently on different machines. In fact, hash('asdf') will have different value every time you run a new Python process.", "body": "@goldsborough that doesn't sound too hard. I think we can safely pick a constant for maximum number of devices in the system of any particular kind. For now it can definitely be e.g. 128. Then, the hash of device object can just become `static_cast<int>(device.type) * MAX_DEVICES + device.index`. That would also have the property of being deterministic, although there's nothing wrong with hashing objects differently on different machines. In fact, `hash('asdf')` will have different value every time you run a new Python process."}