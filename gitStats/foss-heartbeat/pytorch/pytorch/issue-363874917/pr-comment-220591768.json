{"url": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/220591768", "pull_request_review_id": 159033431, "id": 220591768, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIyMDU5MTc2OA==", "diff_hunk": "@@ -126,92 +125,83 @@ class CAFFE2_API Registerer {\n \n   template <class DerivedType>\n   static ObjectPtrType DefaultCreator(Args... args) {\n-    // TODO(jiayq): old versions of NVCC does not handle make_unique well\n-    // so we are forced to use a unique_ptr constructor here. Check if it is\n-    // fine to use make_unique in the future.\n-    // return make_unique<DerivedType>(args...);", "path": "c10/util/Registry.h", "position": 83, "original_position": 83, "commit_id": "0f4377afed19a4bc5b8444255394bff97fbe9559", "original_commit_id": "e393dc538498133938629877101c1a4814b67a32", "user": {"login": "Yangqing", "id": 551151, "node_id": "MDQ6VXNlcjU1MTE1MQ==", "avatar_url": "https://avatars1.githubusercontent.com/u/551151?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Yangqing", "html_url": "https://github.com/Yangqing", "followers_url": "https://api.github.com/users/Yangqing/followers", "following_url": "https://api.github.com/users/Yangqing/following{/other_user}", "gists_url": "https://api.github.com/users/Yangqing/gists{/gist_id}", "starred_url": "https://api.github.com/users/Yangqing/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Yangqing/subscriptions", "organizations_url": "https://api.github.com/users/Yangqing/orgs", "repos_url": "https://api.github.com/users/Yangqing/repos", "events_url": "https://api.github.com/users/Yangqing/events{/privacy}", "received_events_url": "https://api.github.com/users/Yangqing/received_events", "type": "User", "site_admin": false}, "body": "Good catch, this is an old comment folks forgot to remove. Background info is, registry always uses std::unique_ptr back then, and nvcc does not allow make_unique, and we had to not use it. \r\n\r\nToday the registry returns PtrType which could be std::shared_ptr, and as a result the make_unique function cannot be used anyway, so this comment is moot...", "created_at": "2018-09-26T14:40:16Z", "updated_at": "2018-11-23T15:52:02Z", "html_url": "https://github.com/pytorch/pytorch/pull/12077#discussion_r220591768", "pull_request_url": "https://api.github.com/repos/pytorch/pytorch/pulls/12077", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/220591768"}, "html": {"href": "https://github.com/pytorch/pytorch/pull/12077#discussion_r220591768"}, "pull_request": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/12077"}}, "body_html": "<p>Good catch, this is an old comment folks forgot to remove. Background info is, registry always uses std::unique_ptr back then, and nvcc does not allow make_unique, and we had to not use it.</p>\n<p>Today the registry returns PtrType which could be std::shared_ptr, and as a result the make_unique function cannot be used anyway, so this comment is moot...</p>", "body_text": "Good catch, this is an old comment folks forgot to remove. Background info is, registry always uses std::unique_ptr back then, and nvcc does not allow make_unique, and we had to not use it.\nToday the registry returns PtrType which could be std::shared_ptr, and as a result the make_unique function cannot be used anyway, so this comment is moot...", "in_reply_to_id": 220567636}