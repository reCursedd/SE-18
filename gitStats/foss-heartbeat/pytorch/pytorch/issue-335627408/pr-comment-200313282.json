{"url": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/200313282", "pull_request_review_id": 134601815, "id": 200313282, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwMDMxMzI4Mg==", "diff_hunk": "@@ -0,0 +1,68 @@\n+// in memory description of all ATen Ops similar to Caffe2 schema\n+// once C10 exists this can be removed, or stubbed out, but we need\n+// it now to implement correct semantic checking for script\n+#pragma once\n+#include \"ATen/ATen.h\"\n+#include \"torch/csrc/jit/ir.h\"\n+#include \"torch/csrc/jit/function_schema.h\"\n+#include \"torch/csrc/jit/stack_functions.h\"\n+\n+namespace torch { namespace jit {\n+\n+FunctionSchema parseSchema(const std::string& decl);\n+\n+using OperationCreator = std::function<Operation(Node*)>;\n+\n+struct Operator {\n+  Operator(FunctionSchema schema, OperationCreator op, OperationCreator op_const_attributes = nullptr)\n+    : schema(std::move(schema))\n+    , op(op)\n+    , op_const_attributes(op_const_attributes) {}\n+\n+  Operator(const std::string& schema, OperationCreator op, OperationCreator op_const_attributes = nullptr)\n+    : Operator(parseSchema(schema), op, op_const_attributes) {}\n+\n+  // primitive registration, creates a vararg schema with no required\n+  // arguments\n+  Operator(Symbol name, OperationCreator op)\n+  : Operator(FunctionSchema(name, {}, {}, true), op, op) {}\n+\n+  FunctionSchema schema;\n+\n+  bool matchesNode(Node* n) const;\n+  // Operators have different versions depending on if some inputs are encoded\n+  // as attributes or inputs. This function returns the right Operation function,\n+  // given a node encoded for one variant.\n+  // Behavior is undefined if matchesNode(n) == false\n+  Operation selectVariant(Node* n) const {\n+    if(n->hasAttributes()) {\n+      JIT_ASSERT(op_const_attributes != nullptr);\n+      return op_const_attributes(n);\n+    } else {\n+      return op(n);\n+    }\n+  }\n+private:\n+  OperationCreator op;\n+  OperationCreator op_const_attributes;\n+};\n+\n+const std::vector<std::shared_ptr<Operator>>& getOperatorsFor(Symbol name);\n+std::shared_ptr<Operator> findOperatorFor(Node* node);\n+const Operator& getOperatorFor(Node* node);\n+\n+inline Operation getOperation(Node* node) {\n+  return getOperatorFor(node).selectVariant(node);", "path": "torch/csrc/jit/operator.h", "position": null, "original_position": 55, "commit_id": "1efd5a0aff5427596ececb2c851b1ef6291a707b", "original_commit_id": "1715f95129be14a369d9c5324f601abdcabc6a77", "user": {"login": "apaszke", "id": 4583066, "node_id": "MDQ6VXNlcjQ1ODMwNjY=", "avatar_url": "https://avatars3.githubusercontent.com/u/4583066?v=4", "gravatar_id": "", "url": "https://api.github.com/users/apaszke", "html_url": "https://github.com/apaszke", "followers_url": "https://api.github.com/users/apaszke/followers", "following_url": "https://api.github.com/users/apaszke/following{/other_user}", "gists_url": "https://api.github.com/users/apaszke/gists{/gist_id}", "starred_url": "https://api.github.com/users/apaszke/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/apaszke/subscriptions", "organizations_url": "https://api.github.com/users/apaszke/orgs", "repos_url": "https://api.github.com/users/apaszke/repos", "events_url": "https://api.github.com/users/apaszke/events{/privacy}", "received_events_url": "https://api.github.com/users/apaszke/received_events", "type": "User", "site_admin": false}, "body": "This one is especially weird, given the undefined behavior warning above. It gets the operator, ignores matchesNode and just proceeds to call selectVariant", "created_at": "2018-07-05T11:03:03Z", "updated_at": "2018-11-23T15:46:48Z", "html_url": "https://github.com/pytorch/pytorch/pull/8885#discussion_r200313282", "pull_request_url": "https://api.github.com/repos/pytorch/pytorch/pulls/8885", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/200313282"}, "html": {"href": "https://github.com/pytorch/pytorch/pull/8885#discussion_r200313282"}, "pull_request": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/8885"}}, "body_html": "<p>This one is especially weird, given the undefined behavior warning above. It gets the operator, ignores matchesNode and just proceeds to call selectVariant</p>", "body_text": "This one is especially weird, given the undefined behavior warning above. It gets the operator, ignores matchesNode and just proceeds to call selectVariant"}