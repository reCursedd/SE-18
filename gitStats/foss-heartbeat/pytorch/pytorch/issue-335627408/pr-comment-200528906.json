{"url": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/200528906", "pull_request_review_id": 134863603, "id": 200528906, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwMDUyODkwNg==", "diff_hunk": "@@ -203,49 +207,179 @@ struct SchemaParser {\n   }\n   Lexer L;\n   bool kwarg_only;\n-  at::Tensor one = at::full({}, 1, at::kLong);\n-  at::Tensor zero = at::full({}, 0, at::kLong);\n+  static at::Tensor one() {\n+    static at::Tensor v = at::full({}, 1, at::kLong);\n+    return v;\n+  }\n+  static at::Tensor zero() {\n+    static at::Tensor v = at::full({}, 0, at::kLong);\n+    return v;\n+  }\n };\n }\n \n-using SchemaMap = std::unordered_map<std::string, std::vector<FunctionSchema>>;\n \n-// defined in aten_schema_declarations.cpp\n-extern const char * schema_declarations;\n+namespace {\n+\n+using OperatorMap = std::unordered_map<Symbol, std::vector<std::shared_ptr<Operator>>>;\n+struct OperatorRegistry  {\n+  OperatorMap operators;\n+  std::mutex lock;\n+  void registerOperator(Operator&& op){\n+    std::lock_guard<std::mutex> guard(lock);\n+    Symbol sym = Symbol::fromQualString(op.schema.name);", "path": "torch/csrc/jit/operator.cpp", "position": 232, "original_position": 62, "commit_id": "1efd5a0aff5427596ececb2c851b1ef6291a707b", "original_commit_id": "1715f95129be14a369d9c5324f601abdcabc6a77", "user": {"login": "zdevito", "id": 370202, "node_id": "MDQ6VXNlcjM3MDIwMg==", "avatar_url": "https://avatars0.githubusercontent.com/u/370202?v=4", "gravatar_id": "", "url": "https://api.github.com/users/zdevito", "html_url": "https://github.com/zdevito", "followers_url": "https://api.github.com/users/zdevito/followers", "following_url": "https://api.github.com/users/zdevito/following{/other_user}", "gists_url": "https://api.github.com/users/zdevito/gists{/gist_id}", "starred_url": "https://api.github.com/users/zdevito/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/zdevito/subscriptions", "organizations_url": "https://api.github.com/users/zdevito/orgs", "repos_url": "https://api.github.com/users/zdevito/repos", "events_url": "https://api.github.com/users/zdevito/events{/privacy}", "received_events_url": "https://api.github.com/users/zdevito/received_events", "type": "User", "site_admin": false}, "body": "I tried that, but we use FunctionSchema for non-operators as well where this really is just a raw name (e.g. it is the name of a method in a ScriptModule).  Since Symbols must have a namespace, it is clearest to just keep the name a function/method a raw string, and turn it into a Symbol when it is clearly being used as one.", "created_at": "2018-07-06T01:21:22Z", "updated_at": "2018-11-23T15:46:50Z", "html_url": "https://github.com/pytorch/pytorch/pull/8885#discussion_r200528906", "pull_request_url": "https://api.github.com/repos/pytorch/pytorch/pulls/8885", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/200528906"}, "html": {"href": "https://github.com/pytorch/pytorch/pull/8885#discussion_r200528906"}, "pull_request": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/8885"}}, "body_html": "<p>I tried that, but we use FunctionSchema for non-operators as well where this really is just a raw name (e.g. it is the name of a method in a ScriptModule).  Since Symbols must have a namespace, it is clearest to just keep the name a function/method a raw string, and turn it into a Symbol when it is clearly being used as one.</p>", "body_text": "I tried that, but we use FunctionSchema for non-operators as well where this really is just a raw name (e.g. it is the name of a method in a ScriptModule).  Since Symbols must have a namespace, it is clearest to just keep the name a function/method a raw string, and turn it into a Symbol when it is clearly being used as one.", "in_reply_to_id": 200312780}