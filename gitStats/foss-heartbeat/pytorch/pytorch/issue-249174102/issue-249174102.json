{"url": "https://api.github.com/repos/pytorch/pytorch/issues/2362", "repository_url": "https://api.github.com/repos/pytorch/pytorch", "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/2362/labels{/name}", "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/2362/comments", "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/2362/events", "html_url": "https://github.com/pytorch/pytorch/issues/2362", "id": 249174102, "node_id": "MDU6SXNzdWUyNDkxNzQxMDI=", "number": 2362, "title": "raise a warning if someone tries to access .grad of a Variable that will never be computed", "user": {"login": "BestSonny", "id": 6027713, "node_id": "MDQ6VXNlcjYwMjc3MTM=", "avatar_url": "https://avatars0.githubusercontent.com/u/6027713?v=4", "gravatar_id": "", "url": "https://api.github.com/users/BestSonny", "html_url": "https://github.com/BestSonny", "followers_url": "https://api.github.com/users/BestSonny/followers", "following_url": "https://api.github.com/users/BestSonny/following{/other_user}", "gists_url": "https://api.github.com/users/BestSonny/gists{/gist_id}", "starred_url": "https://api.github.com/users/BestSonny/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/BestSonny/subscriptions", "organizations_url": "https://api.github.com/users/BestSonny/orgs", "repos_url": "https://api.github.com/users/BestSonny/repos", "events_url": "https://api.github.com/users/BestSonny/events{/privacy}", "received_events_url": "https://api.github.com/users/BestSonny/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 424131849, "node_id": "MDU6TGFiZWw0MjQxMzE4NDk=", "url": "https://api.github.com/repos/pytorch/pytorch/labels/enhancement", "name": "enhancement", "color": "84b6eb", "default": true}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2017-08-09T21:56:56Z", "updated_at": "2017-08-30T23:15:53Z", "closed_at": null, "author_association": "CONTRIBUTOR", "body_html": "<p><a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=1310570\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/soumith\">@soumith</a><br>\nIn my understanding, these two kinds of initializations should give the same result.</p>\n<pre><code>grid_data_variable = Variable(torch.rand(batch_size, gh, gw, d, nchans), requires_grad=True).cuda()\nguide_data_variable = Variable(torch.rand(batch_size, h, w), requires_grad=True).cuda()\n</code></pre>\n<pre><code>grid_data_variable = Variable(torch.rand(batch_size, gh, gw, d, nchans).cuda(), requires_grad=True)\nguide_data_variable = Variable(torch.rand(batch_size, h, w).cuda(), requires_grad=True)\n</code></pre>\n<p>Then I test them on my customized layer.<br>\nThe first one would fail in the <strong>gradcheck</strong> while the second works well.</p>\n<p>Do you have any clues why the first one gives an incorrect gradient?</p>", "body_text": "@soumith\nIn my understanding, these two kinds of initializations should give the same result.\ngrid_data_variable = Variable(torch.rand(batch_size, gh, gw, d, nchans), requires_grad=True).cuda()\nguide_data_variable = Variable(torch.rand(batch_size, h, w), requires_grad=True).cuda()\n\ngrid_data_variable = Variable(torch.rand(batch_size, gh, gw, d, nchans).cuda(), requires_grad=True)\nguide_data_variable = Variable(torch.rand(batch_size, h, w).cuda(), requires_grad=True)\n\nThen I test them on my customized layer.\nThe first one would fail in the gradcheck while the second works well.\nDo you have any clues why the first one gives an incorrect gradient?", "body": "@soumith \r\nIn my understanding, these two kinds of initializations should give the same result.\r\n\r\n```\r\ngrid_data_variable = Variable(torch.rand(batch_size, gh, gw, d, nchans), requires_grad=True).cuda()\r\nguide_data_variable = Variable(torch.rand(batch_size, h, w), requires_grad=True).cuda()\r\n```\r\n\r\n```\r\ngrid_data_variable = Variable(torch.rand(batch_size, gh, gw, d, nchans).cuda(), requires_grad=True)\r\nguide_data_variable = Variable(torch.rand(batch_size, h, w).cuda(), requires_grad=True)\r\n```\r\n\r\nThen I test them on my customized layer.\r\nThe first one would fail in the **gradcheck** while the second works well.\r\n\r\nDo you have any clues why the first one gives an incorrect gradient?\r\n\r\n"}