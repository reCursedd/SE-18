{"url": "https://api.github.com/repos/pytorch/pytorch/issues/12173", "repository_url": "https://api.github.com/repos/pytorch/pytorch", "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/12173/labels{/name}", "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/12173/comments", "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/12173/events", "html_url": "https://github.com/pytorch/pytorch/pull/12173", "id": 364988536, "node_id": "MDExOlB1bGxSZXF1ZXN0MjE5MDQ1MDQ5", "number": 12173, "title": "Add a serial path to backward engine.", "user": {"login": "apaszke", "id": 4583066, "node_id": "MDQ6VXNlcjQ1ODMwNjY=", "avatar_url": "https://avatars3.githubusercontent.com/u/4583066?v=4", "gravatar_id": "", "url": "https://api.github.com/users/apaszke", "html_url": "https://github.com/apaszke", "followers_url": "https://api.github.com/users/apaszke/followers", "following_url": "https://api.github.com/users/apaszke/following{/other_user}", "gists_url": "https://api.github.com/users/apaszke/gists{/gist_id}", "starred_url": "https://api.github.com/users/apaszke/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/apaszke/subscriptions", "organizations_url": "https://api.github.com/users/apaszke/orgs", "repos_url": "https://api.github.com/users/apaszke/repos", "events_url": "https://api.github.com/users/apaszke/events{/privacy}", "received_events_url": "https://api.github.com/users/apaszke/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2018-09-28T18:07:29Z", "updated_at": "2018-11-23T15:52:11Z", "closed_at": null, "author_association": "MEMBER", "pull_request": {"url": "https://api.github.com/repos/pytorch/pytorch/pulls/12173", "html_url": "https://github.com/pytorch/pytorch/pull/12173", "diff_url": "https://github.com/pytorch/pytorch/pull/12173.diff", "patch_url": "https://github.com/pytorch/pytorch/pull/12173.patch"}, "body_html": "<p>Many graphs execute on a single device only, and our multithreaded<br>\nsolution is an overkill for them. This commit attempts to detect<br>\nthat and will use the user thread to execute backward in that case.</p>\n<p>Note that there are still many optimizations that can be applied to<br>\nthe single-threaded path (e.g. it doesn't need mutexes), but I decided<br>\nto leave them for the future.</p>\n<p>NB: This makes it impossible to trigger a parallel backward (it will be serialized) nested in a serial backward, but I don't think this will ever cause a problem, as nested graphs tend to be simple.</p>\n<p>This patch greatly improves stability of our performance in many environments, because the forward and backward thread switching generally plays badly with CPU frequency and turbo heuristics.</p>\n<p>Epoch times for word language model:</p>\n<pre><code>130 ms +- 23 ms (some epochs taking even longer than 150ms)\n108 ms +- 4 ms  (max epoch time is 113ms)\n</code></pre>\n<p><a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=655866\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/colesbury\">@colesbury</a></p>", "body_text": "Many graphs execute on a single device only, and our multithreaded\nsolution is an overkill for them. This commit attempts to detect\nthat and will use the user thread to execute backward in that case.\nNote that there are still many optimizations that can be applied to\nthe single-threaded path (e.g. it doesn't need mutexes), but I decided\nto leave them for the future.\nNB: This makes it impossible to trigger a parallel backward (it will be serialized) nested in a serial backward, but I don't think this will ever cause a problem, as nested graphs tend to be simple.\nThis patch greatly improves stability of our performance in many environments, because the forward and backward thread switching generally plays badly with CPU frequency and turbo heuristics.\nEpoch times for word language model:\n130 ms +- 23 ms (some epochs taking even longer than 150ms)\n108 ms +- 4 ms  (max epoch time is 113ms)\n\n@colesbury", "body": "Many graphs execute on a single device only, and our multithreaded\r\nsolution is an overkill for them. This commit attempts to detect\r\nthat and will use the user thread to execute backward in that case.\r\n\r\nNote that there are still many optimizations that can be applied to\r\nthe single-threaded path (e.g. it doesn't need mutexes), but I decided\r\nto leave them for the future.\r\n\r\nNB: This makes it impossible to trigger a parallel backward (it will be serialized) nested in a serial backward, but I don't think this will ever cause a problem, as nested graphs tend to be simple.\r\n\r\nThis patch greatly improves stability of our performance in many environments, because the forward and backward thread switching generally plays badly with CPU frequency and turbo heuristics.\r\n\r\nEpoch times for word language model:\r\n```\r\n130 ms +- 23 ms (some epochs taking even longer than 150ms)\r\n108 ms +- 4 ms  (max epoch time is 113ms)\r\n```\r\n\r\n@colesbury "}