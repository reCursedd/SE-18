{"url": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/233526811", "pull_request_review_id": 174961752, "id": 233526811, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIzMzUyNjgxMQ==", "diff_hunk": "@@ -468,15 +468,230 @@ install(FILES\n     ${PROJECT_BINARY_DIR}/TorchConfig.cmake\n     DESTINATION share/cmake/Torch)\n \n-if (USE_DISTRIBUTED)\n-  add_subdirectory(${TORCH_SRC_DIR}/lib/THD)\n-  if (NOT MSVC AND NOT APPLE)\n-    add_subdirectory(${TORCH_SRC_DIR}/lib/c10d)\n+if (BUILD_PYTHON)\n+  if (USE_DISTRIBUTED)\n+    add_subdirectory(${TORCH_SRC_DIR}/lib/THD)\n+    if (NOT MSVC AND NOT APPLE)\n+      add_subdirectory(${TORCH_SRC_DIR}/lib/c10d)\n+    endif()\n   endif()\n-endif()\n \n-if (MSVC)\n-  add_subdirectory(${TORCH_SRC_DIR}/lib/libshm_windows)\n-else()\n-  add_subdirectory(${TORCH_SRC_DIR}/lib/libshm)\n+  if (MSVC)\n+    add_subdirectory(${TORCH_SRC_DIR}/lib/libshm_windows)\n+  else()\n+    add_subdirectory(${TORCH_SRC_DIR}/lib/libshm)\n+  endif()\n+\n+  set(TORCH_PYTHON_SRCS\n+    ${TORCH_SRC_DIR}/csrc/DataLoader.cpp\n+    ${TORCH_SRC_DIR}/csrc/Device.cpp\n+    ${TORCH_SRC_DIR}/csrc/Dtype.cpp\n+    ${TORCH_SRC_DIR}/csrc/DynamicTypes.cpp\n+    ${TORCH_SRC_DIR}/csrc/Exceptions.cpp\n+    ${TORCH_SRC_DIR}/csrc/TypeInfo.cpp\n+    ${TORCH_SRC_DIR}/csrc/Generator.cpp\n+    ${TORCH_SRC_DIR}/csrc/Layout.cpp\n+    ${TORCH_SRC_DIR}/csrc/Module.cpp\n+    ${TORCH_SRC_DIR}/csrc/PtrWrapper.cpp\n+    ${TORCH_SRC_DIR}/csrc/Size.cpp\n+    ${TORCH_SRC_DIR}/csrc/Storage.cpp\n+    ${TORCH_SRC_DIR}/csrc/autograd/functions/init.cpp\n+    ${TORCH_SRC_DIR}/csrc/autograd/generated/python_functions.cpp\n+    ${TORCH_SRC_DIR}/csrc/autograd/generated/python_nn_functions.cpp\n+    ${TORCH_SRC_DIR}/csrc/autograd/generated/python_torch_functions.cpp\n+    ${TORCH_SRC_DIR}/csrc/autograd/generated/python_variable_methods.cpp\n+    ${TORCH_SRC_DIR}/csrc/autograd/init.cpp\n+    ${TORCH_SRC_DIR}/csrc/autograd/python_anomaly_mode.cpp\n+    ${TORCH_SRC_DIR}/csrc/autograd/python_cpp_function.cpp\n+    ${TORCH_SRC_DIR}/csrc/autograd/python_engine.cpp\n+    ${TORCH_SRC_DIR}/csrc/autograd/python_function.cpp\n+    ${TORCH_SRC_DIR}/csrc/autograd/python_hook.cpp\n+    ${TORCH_SRC_DIR}/csrc/autograd/python_legacy_variable.cpp\n+    ${TORCH_SRC_DIR}/csrc/autograd/python_variable.cpp\n+    ${TORCH_SRC_DIR}/csrc/autograd/python_variable_indexing.cpp\n+    ${TORCH_SRC_DIR}/csrc/byte_order.cpp\n+    ${TORCH_SRC_DIR}/csrc/jit/batched/BatchTensor.cpp\n+    ${TORCH_SRC_DIR}/csrc/jit/init.cpp\n+    ${TORCH_SRC_DIR}/csrc/jit/passes/onnx.cpp\n+    ${TORCH_SRC_DIR}/csrc/jit/passes/onnx/fixup_onnx_loop.cpp\n+    ${TORCH_SRC_DIR}/csrc/jit/passes/onnx/prepare_division_for_onnx.cpp\n+    ${TORCH_SRC_DIR}/csrc/jit/passes/onnx/peephole.cpp\n+    ${TORCH_SRC_DIR}/csrc/jit/passes/to_batch.cpp\n+    ${TORCH_SRC_DIR}/csrc/jit/python_arg_flatten.cpp\n+    ${TORCH_SRC_DIR}/csrc/jit/python_interpreter.cpp\n+    ${TORCH_SRC_DIR}/csrc/jit/python_ir.cpp\n+    ${TORCH_SRC_DIR}/csrc/jit/python_tracer.cpp\n+    ${TORCH_SRC_DIR}/csrc/jit/script/init.cpp\n+    ${TORCH_SRC_DIR}/csrc/jit/script/lexer.cpp\n+    ${TORCH_SRC_DIR}/csrc/jit/script/module.cpp\n+    ${TORCH_SRC_DIR}/csrc/jit/script/python_tree_views.cpp\n+    ${TORCH_SRC_DIR}/csrc/nn/THNN.cpp\n+    ${TORCH_SRC_DIR}/csrc/onnx/init.cpp\n+    ${TORCH_SRC_DIR}/csrc/serialization.cpp\n+    ${TORCH_SRC_DIR}/csrc/tensor/python_tensor.cpp\n+    ${TORCH_SRC_DIR}/csrc/utils.cpp\n+    ${TORCH_SRC_DIR}/csrc/utils/cuda_lazy_init.cpp\n+    ${TORCH_SRC_DIR}/csrc/utils/invalid_arguments.cpp\n+    ${TORCH_SRC_DIR}/csrc/utils/object_ptr.cpp\n+    ${TORCH_SRC_DIR}/csrc/utils/python_arg_parser.cpp\n+    ${TORCH_SRC_DIR}/csrc/utils/tensor_apply.cpp\n+    ${TORCH_SRC_DIR}/csrc/utils/tensor_conversion_dispatch.cpp\n+    ${TORCH_SRC_DIR}/csrc/utils/tensor_dtypes.cpp\n+    ${TORCH_SRC_DIR}/csrc/utils/tensor_flatten.cpp\n+    ${TORCH_SRC_DIR}/csrc/utils/tensor_layouts.cpp\n+    ${TORCH_SRC_DIR}/csrc/utils/tensor_list.cpp\n+    ${TORCH_SRC_DIR}/csrc/utils/tensor_new.cpp\n+    ${TORCH_SRC_DIR}/csrc/utils/tensor_numpy.cpp\n+    ${TORCH_SRC_DIR}/csrc/utils/tensor_types.cpp\n+    ${TORCH_SRC_DIR}/csrc/utils/tuple_parser.cpp\n+    )\n+\n+  set(TORCH_PYTHON_INCLUDE_DIRECTORIES\n+    ${PYTHON_INCLUDE_DIR}\n+\n+    ${TORCH_ROOT}\n+    ${TORCH_ROOT}/aten/src\n+    ${TORCH_ROOT}/aten/src/TH\n+\n+    ${CMAKE_BINARY_DIR}\n+    ${CMAKE_BINARY_DIR}/aten/src\n+    ${CMAKE_BINARY_DIR}/caffe2/aten/src\n+    ${CMAKE_BINARY_DIR}/caffe2/aten/src/TH\n+    ${CMAKE_BINARY_DIR}/caffe2/aten/src/THC\n+    ${CMAKE_BINARY_DIR}/third_party\n+    ${CMAKE_BINARY_DIR}/third_party/onnx\n+\n+    ${TORCH_ROOT}/third_party/build/nccl/include\n+    ${TORCH_ROOT}/third_party/gloo\n+    ${TORCH_ROOT}/third_party/onnx\n+    ${TORCH_ROOT}/third_party/onnx/onnx", "path": "torch/CMakeLists.txt", "position": null, "original_position": 136, "commit_id": "13162b86c2f74c71400afdb05cf753d11a511690", "original_commit_id": "cca9158a39bc564d7899f090a3a441d407c49017", "user": {"login": "ezyang", "id": 13564, "node_id": "MDQ6VXNlcjEzNTY0", "avatar_url": "https://avatars0.githubusercontent.com/u/13564?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ezyang", "html_url": "https://github.com/ezyang", "followers_url": "https://api.github.com/users/ezyang/followers", "following_url": "https://api.github.com/users/ezyang/following{/other_user}", "gists_url": "https://api.github.com/users/ezyang/gists{/gist_id}", "starred_url": "https://api.github.com/users/ezyang/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ezyang/subscriptions", "organizations_url": "https://api.github.com/users/ezyang/orgs", "repos_url": "https://api.github.com/users/ezyang/repos", "events_url": "https://api.github.com/users/ezyang/events{/privacy}", "received_events_url": "https://api.github.com/users/ezyang/received_events", "type": "User", "site_admin": false}, "body": "Why both of these?", "created_at": "2018-11-14T16:42:40Z", "updated_at": "2018-11-23T15:54:49Z", "html_url": "https://github.com/pytorch/pytorch/pull/12742#discussion_r233526811", "pull_request_url": "https://api.github.com/repos/pytorch/pytorch/pulls/12742", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/233526811"}, "html": {"href": "https://github.com/pytorch/pytorch/pull/12742#discussion_r233526811"}, "pull_request": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/12742"}}, "body_html": "<p>Why both of these?</p>", "body_text": "Why both of these?"}