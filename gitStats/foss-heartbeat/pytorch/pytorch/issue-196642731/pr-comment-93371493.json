{"url": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/93371493", "pull_request_review_id": 13896878, "id": 93371493, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDkzMzcxNDkz", "diff_hunk": "@@ -0,0 +1,358 @@\n+#ifndef THS_GENERIC_FILE\n+#define THS_GENERIC_FILE \"generic/THSTensor.c\"\n+#else\n+\n+/******************************************************************************\n+ * access methods\n+ ******************************************************************************/\n+\n+int THSTensor_(nDimension)(const THSTensor *self)\n+{\n+  return self->nDimension;\n+}\n+\n+long THSTensor_(size)(const THSTensor *self, int dim)\n+{\n+  THArgCheck((dim >= 0) && (dim < self->nDimension), 1, \"dimension %d out of range of %dD tensor\",\n+      dim+1, THSTensor_(nDimension)(self));\n+  return self->size[dim];\n+}\n+\n+long THSTensor_(nnz)(const THSTensor *self) {\n+  return self->nnz;\n+}\n+\n+THLongStorage *THSTensor_(newSizeOf)(THSTensor *self)\n+{\n+  THLongStorage *size = THLongStorage_newWithSize(self->nDimension);\n+  THLongStorage_rawCopy(size, self->size);\n+  return size;\n+}\n+\n+THLongTensor *THSTensor_(indices)(const THSTensor *self) {\n+  if (self->nnz == 0) {\n+    // Narrows don't work on 0-length tensors\n+    THLongTensor_retain(self->indices);\n+    return self->indices;\n+  }\n+  return THLongTensor_newNarrow(self->indices, 1, 0, self->nnz);\n+}\n+\n+THTensor *THSTensor_(values)(const THSTensor *self) {\n+  if (self->nnz == 0) {\n+    THTensor_(retain)(self->values);\n+    return self->values;\n+  }\n+  return THTensor_(newNarrow)(self->values, 0, 0, self->nnz);\n+}\n+\n+THSTensor *THSTensor_(set)(THSTensor *self, THLongTensor *indices, THTensor *values) {", "path": "torch/lib/THS/generic/THSTensor.c", "position": null, "original_position": 49, "commit_id": "faf9836c10da24d1d5ca51639780bd34a0a414dd", "original_commit_id": "c8b8d1a447ee21655f2e2ba282ba7b23478db4f0", "user": {"login": "ebetica", "id": 3605224, "node_id": "MDQ6VXNlcjM2MDUyMjQ=", "avatar_url": "https://avatars3.githubusercontent.com/u/3605224?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ebetica", "html_url": "https://github.com/ebetica", "followers_url": "https://api.github.com/users/ebetica/followers", "following_url": "https://api.github.com/users/ebetica/following{/other_user}", "gists_url": "https://api.github.com/users/ebetica/gists{/gist_id}", "starred_url": "https://api.github.com/users/ebetica/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ebetica/subscriptions", "organizations_url": "https://api.github.com/users/ebetica/orgs", "repos_url": "https://api.github.com/users/ebetica/repos", "events_url": "https://api.github.com/users/ebetica/events{/privacy}", "received_events_url": "https://api.github.com/users/ebetica/received_events", "type": "User", "site_admin": false}, "body": "Again, this doesn't make sense because \"views\" don't exist in sparse tensors.", "created_at": "2016-12-21T04:05:20Z", "updated_at": "2018-11-23T15:32:03Z", "html_url": "https://github.com/pytorch/pytorch/pull/333#discussion_r93371493", "pull_request_url": "https://api.github.com/repos/pytorch/pytorch/pulls/333", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/93371493"}, "html": {"href": "https://github.com/pytorch/pytorch/pull/333#discussion_r93371493"}, "pull_request": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/333"}}, "body_html": "<p>Again, this doesn't make sense because \"views\" don't exist in sparse tensors.</p>", "body_text": "Again, this doesn't make sense because \"views\" don't exist in sparse tensors.", "in_reply_to_id": 93228248}