{"url": "https://api.github.com/repos/pytorch/pytorch/issues/comments/313059337", "html_url": "https://github.com/pytorch/pytorch/issues/755#issuecomment-313059337", "issue_url": "https://api.github.com/repos/pytorch/pytorch/issues/755", "id": 313059337, "node_id": "MDEyOklzc3VlQ29tbWVudDMxMzA1OTMzNw==", "user": {"login": "PhilippPelz", "id": 1299153, "node_id": "MDQ6VXNlcjEyOTkxNTM=", "avatar_url": "https://avatars1.githubusercontent.com/u/1299153?v=4", "gravatar_id": "", "url": "https://api.github.com/users/PhilippPelz", "html_url": "https://github.com/PhilippPelz", "followers_url": "https://api.github.com/users/PhilippPelz/followers", "following_url": "https://api.github.com/users/PhilippPelz/following{/other_user}", "gists_url": "https://api.github.com/users/PhilippPelz/gists{/gist_id}", "starred_url": "https://api.github.com/users/PhilippPelz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/PhilippPelz/subscriptions", "organizations_url": "https://api.github.com/users/PhilippPelz/orgs", "repos_url": "https://api.github.com/users/PhilippPelz/repos", "events_url": "https://api.github.com/users/PhilippPelz/events{/privacy}", "received_events_url": "https://api.github.com/users/PhilippPelz/received_events", "type": "User", "site_admin": false}, "created_at": "2017-07-05T10:02:10Z", "updated_at": "2017-07-05T10:02:10Z", "author_association": "NONE", "body_html": "<p><a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=8445510\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/Roger-luo\">@Roger-luo</a>  Yes, I am also having some problems with that elsewhere. The complex types we are using should be either from complex.h or std::complex. Since THPP is the C++ wrapper, maybe std::complex is more appropriate. Can you please change that?</p>\n<p>Thrust is also causing problems for the exact same reason when trying to build cffi extensions. Right now I am doing a workaround, but the proper way would be to change the complex type to cuFloatComplex/cuDoubleComplex in THC. so that the cffi compiler does not complain. I just want to get on with research right now, this is taking way too much time from me :( . If you have time, please do it.</p>\n<p>Also, building cffi extension with custom kernel calls is quite cumbersome, because one always needs to create an extra library compiled with nvcc, which is then linked to a cffi wrapper. I guess there is no other way. One could use cffi in ABI mode, but the website says \"The API mode instead compiles a CPython C wrapper that directly invokes the target function. It is, comparatively, massively faster (and works better than libffi ever can).\"</p>", "body_text": "@Roger-luo  Yes, I am also having some problems with that elsewhere. The complex types we are using should be either from complex.h or std::complex. Since THPP is the C++ wrapper, maybe std::complex is more appropriate. Can you please change that?\nThrust is also causing problems for the exact same reason when trying to build cffi extensions. Right now I am doing a workaround, but the proper way would be to change the complex type to cuFloatComplex/cuDoubleComplex in THC. so that the cffi compiler does not complain. I just want to get on with research right now, this is taking way too much time from me :( . If you have time, please do it.\nAlso, building cffi extension with custom kernel calls is quite cumbersome, because one always needs to create an extra library compiled with nvcc, which is then linked to a cffi wrapper. I guess there is no other way. One could use cffi in ABI mode, but the website says \"The API mode instead compiles a CPython C wrapper that directly invokes the target function. It is, comparatively, massively faster (and works better than libffi ever can).\"", "body": "@Roger-luo  Yes, I am also having some problems with that elsewhere. The complex types we are using should be either from complex.h or std::complex. Since THPP is the C++ wrapper, maybe std::complex is more appropriate. Can you please change that?\r\n\r\nThrust is also causing problems for the exact same reason when trying to build cffi extensions. Right now I am doing a workaround, but the proper way would be to change the complex type to cuFloatComplex/cuDoubleComplex in THC. so that the cffi compiler does not complain. I just want to get on with research right now, this is taking way too much time from me :( . If you have time, please do it. \r\n\r\nAlso, building cffi extension with custom kernel calls is quite cumbersome, because one always needs to create an extra library compiled with nvcc, which is then linked to a cffi wrapper. I guess there is no other way. One could use cffi in ABI mode, but the website says \"The API mode instead compiles a CPython C wrapper that directly invokes the target function. It is, comparatively, massively faster (and works better than libffi ever can).\" \r\n\r\n\r\n"}