{"url": "https://api.github.com/repos/pytorch/pytorch/issues/comments/380498046", "html_url": "https://github.com/pytorch/pytorch/issues/755#issuecomment-380498046", "issue_url": "https://api.github.com/repos/pytorch/pytorch/issues/755", "id": 380498046, "node_id": "MDEyOklzc3VlQ29tbWVudDM4MDQ5ODA0Ng==", "user": {"login": "Roger-luo", "id": 8445510, "node_id": "MDQ6VXNlcjg0NDU1MTA=", "avatar_url": "https://avatars2.githubusercontent.com/u/8445510?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Roger-luo", "html_url": "https://github.com/Roger-luo", "followers_url": "https://api.github.com/users/Roger-luo/followers", "following_url": "https://api.github.com/users/Roger-luo/following{/other_user}", "gists_url": "https://api.github.com/users/Roger-luo/gists{/gist_id}", "starred_url": "https://api.github.com/users/Roger-luo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Roger-luo/subscriptions", "organizations_url": "https://api.github.com/users/Roger-luo/orgs", "repos_url": "https://api.github.com/users/Roger-luo/repos", "events_url": "https://api.github.com/users/Roger-luo/events{/privacy}", "received_events_url": "https://api.github.com/users/Roger-luo/received_events", "type": "User", "site_admin": false}, "created_at": "2018-04-11T15:39:05Z", "updated_at": "2018-04-11T15:39:05Z", "author_association": "CONTRIBUTOR", "body_html": "<p><a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=1299153\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/PhilippPelz\">@PhilippPelz</a> I am developing a quantum many-body toolkit  in Julia (since that PyTorch PR), it includes a complex/real neural network implementation based on some previous papers about complex neural network, and I found it is so easy to develop with Julia's metaprogramming. I currently just put it in <a href=\"https://github.com/Roger-luo/QMTK.jl\">QMTK.jl</a>, it is still working in progress and I have not finish all I want. PyTorch inspires me a lot indeed, but really sorry for the complex support...</p>\n<p>But I do have plans to separate it to a neural network single package in the future (just don't want to maintain several repos at the moment). And there will be more people join the development from the Institute of Physics, CAS. I'll accept PRs after its first tagged version (which will be in a few weeks).</p>\n<p>You can watch it if you are interested in its development.</p>\n<p>If the PyTorch team still have plans for complex support in the future, I'll be willing to help though.</p>", "body_text": "@PhilippPelz I am developing a quantum many-body toolkit  in Julia (since that PyTorch PR), it includes a complex/real neural network implementation based on some previous papers about complex neural network, and I found it is so easy to develop with Julia's metaprogramming. I currently just put it in QMTK.jl, it is still working in progress and I have not finish all I want. PyTorch inspires me a lot indeed, but really sorry for the complex support...\nBut I do have plans to separate it to a neural network single package in the future (just don't want to maintain several repos at the moment). And there will be more people join the development from the Institute of Physics, CAS. I'll accept PRs after its first tagged version (which will be in a few weeks).\nYou can watch it if you are interested in its development.\nIf the PyTorch team still have plans for complex support in the future, I'll be willing to help though.", "body": "@PhilippPelz I am developing a quantum many-body toolkit  in Julia (since that PyTorch PR), it includes a complex/real neural network implementation based on some previous papers about complex neural network, and I found it is so easy to develop with Julia's metaprogramming. I currently just put it in [QMTK.jl](https://github.com/Roger-luo/QMTK.jl), it is still working in progress and I have not finish all I want. PyTorch inspires me a lot indeed, but really sorry for the complex support...\r\n\r\nBut I do have plans to separate it to a neural network single package in the future (just don't want to maintain several repos at the moment). And there will be more people join the development from the Institute of Physics, CAS. I'll accept PRs after its first tagged version (which will be in a few weeks).\r\n\r\nYou can watch it if you are interested in its development.\r\n\r\nIf the PyTorch team still have plans for complex support in the future, I'll be willing to help though."}