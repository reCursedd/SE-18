{"url": "https://api.github.com/repos/pytorch/pytorch/issues/comments/380667124", "html_url": "https://github.com/pytorch/pytorch/issues/755#issuecomment-380667124", "issue_url": "https://api.github.com/repos/pytorch/pytorch/issues/755", "id": 380667124, "node_id": "MDEyOklzc3VlQ29tbWVudDM4MDY2NzEyNA==", "user": {"login": "ezyang", "id": 13564, "node_id": "MDQ6VXNlcjEzNTY0", "avatar_url": "https://avatars0.githubusercontent.com/u/13564?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ezyang", "html_url": "https://github.com/ezyang", "followers_url": "https://api.github.com/users/ezyang/followers", "following_url": "https://api.github.com/users/ezyang/following{/other_user}", "gists_url": "https://api.github.com/users/ezyang/gists{/gist_id}", "starred_url": "https://api.github.com/users/ezyang/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ezyang/subscriptions", "organizations_url": "https://api.github.com/users/ezyang/orgs", "repos_url": "https://api.github.com/users/ezyang/repos", "events_url": "https://api.github.com/users/ezyang/events{/privacy}", "received_events_url": "https://api.github.com/users/ezyang/received_events", "type": "User", "site_admin": false}, "created_at": "2018-04-12T03:33:34Z", "updated_at": "2018-04-12T03:33:34Z", "author_association": "CONTRIBUTOR", "body_html": "<p>Hey guys, so sorry that we haven't responded on this issue since it opened.</p>\n<p>Here are two facts:</p>\n<ol>\n<li>We absolutely agree that PyTorch needs complex support, and</li>\n<li>We don't have the manpower to adequately fill out the long tail that all complex operations would need. (For evidence of this, look at sparse support, which is in master and been limping along.)</li>\n</ol>\n<p>Since this issue was opened back in 2017, a few important things have changed that may make implementing complex support a bit simpler. The first is that we now have ATen, an ergonomic C++ library for manipulating tensors. This means that you don't <em>have</em> to copy paste giant swathes of TH/THC code and hope you've gotten all of the manual refcounting right, you can write C++ code as if it were Python and it will run fast. Second is that we're working on a new version of ATen, called C10, which is much more serious about having open backends than ATen (which is a closed thing) which should make it easier to work on complex support, since it wouldn't entail actually forking PyTorch, just adding a new directory of code.</p>\n<p>So, <a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=8445510\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/Roger-luo\">@Roger-luo</a> and <a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=1299153\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/PhilippPelz\">@PhilippPelz</a>, we'd love to have your help making the complex backend a reality, but we'd really like to figure out a way to do it that helps us sustainably maintain it into the future. Let us know what you think.</p>", "body_text": "Hey guys, so sorry that we haven't responded on this issue since it opened.\nHere are two facts:\n\nWe absolutely agree that PyTorch needs complex support, and\nWe don't have the manpower to adequately fill out the long tail that all complex operations would need. (For evidence of this, look at sparse support, which is in master and been limping along.)\n\nSince this issue was opened back in 2017, a few important things have changed that may make implementing complex support a bit simpler. The first is that we now have ATen, an ergonomic C++ library for manipulating tensors. This means that you don't have to copy paste giant swathes of TH/THC code and hope you've gotten all of the manual refcounting right, you can write C++ code as if it were Python and it will run fast. Second is that we're working on a new version of ATen, called C10, which is much more serious about having open backends than ATen (which is a closed thing) which should make it easier to work on complex support, since it wouldn't entail actually forking PyTorch, just adding a new directory of code.\nSo, @Roger-luo and @PhilippPelz, we'd love to have your help making the complex backend a reality, but we'd really like to figure out a way to do it that helps us sustainably maintain it into the future. Let us know what you think.", "body": "Hey guys, so sorry that we haven't responded on this issue since it opened.\r\n\r\nHere are two facts:\r\n\r\n1. We absolutely agree that PyTorch needs complex support, and\r\n2. We don't have the manpower to adequately fill out the long tail that all complex operations would need. (For evidence of this, look at sparse support, which is in master and been limping along.)\r\n\r\nSince this issue was opened back in 2017, a few important things have changed that may make implementing complex support a bit simpler. The first is that we now have ATen, an ergonomic C++ library for manipulating tensors. This means that you don't *have* to copy paste giant swathes of TH/THC code and hope you've gotten all of the manual refcounting right, you can write C++ code as if it were Python and it will run fast. Second is that we're working on a new version of ATen, called C10, which is much more serious about having open backends than ATen (which is a closed thing) which should make it easier to work on complex support, since it wouldn't entail actually forking PyTorch, just adding a new directory of code.\r\n\r\nSo, @Roger-luo and @PhilippPelz, we'd love to have your help making the complex backend a reality, but we'd really like to figure out a way to do it that helps us sustainably maintain it into the future. Let us know what you think."}