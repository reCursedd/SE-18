{"url": "https://api.github.com/repos/pytorch/pytorch/issues/7938", "repository_url": "https://api.github.com/repos/pytorch/pytorch", "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/7938/labels{/name}", "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/7938/comments", "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/7938/events", "html_url": "https://github.com/pytorch/pytorch/pull/7938", "id": 327533323, "node_id": "MDExOlB1bGxSZXF1ZXN0MTkxMzA0NDA5", "number": 7938, "title": "[JIT] Fission and fusion passes for addmm", "user": {"login": "jamesr66a", "id": 4685384, "node_id": "MDQ6VXNlcjQ2ODUzODQ=", "avatar_url": "https://avatars2.githubusercontent.com/u/4685384?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jamesr66a", "html_url": "https://github.com/jamesr66a", "followers_url": "https://api.github.com/users/jamesr66a/followers", "following_url": "https://api.github.com/users/jamesr66a/following{/other_user}", "gists_url": "https://api.github.com/users/jamesr66a/gists{/gist_id}", "starred_url": "https://api.github.com/users/jamesr66a/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jamesr66a/subscriptions", "organizations_url": "https://api.github.com/users/jamesr66a/orgs", "repos_url": "https://api.github.com/users/jamesr66a/repos", "events_url": "https://api.github.com/users/jamesr66a/events{/privacy}", "received_events_url": "https://api.github.com/users/jamesr66a/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2018-05-30T00:37:43Z", "updated_at": "2018-11-23T15:44:42Z", "closed_at": "2018-05-30T22:06:59Z", "author_association": "CONTRIBUTOR", "pull_request": {"url": "https://api.github.com/repos/pytorch/pytorch/pulls/7938", "html_url": "https://github.com/pytorch/pytorch/pull/7938", "diff_url": "https://github.com/pytorch/pytorch/pull/7938.diff", "patch_url": "https://github.com/pytorch/pytorch/pull/7938.patch"}, "body_html": "<p>This diff adds fission and fusion passes for addmm. Breaking apart addmm (where alpha=beta=1.0) allows us to use the existing machinery for <code>add</code> and <code>mm</code> in shape analysis and symbolic differentiation. Fusing <code>add</code> + <code>mm</code> instructions later improves efficiency.</p>\n<p>Remaining TODOs arising from this PR:</p>\n<ol>\n<li>Still need a way to dump and inspect the internal GraphExecutor state. This is needed so that we can ensure all of the four conditions tested in <code>test_addmm_grad</code> are actually firing. Right now, we just test the gradient values, which is susceptible to regression if something breaks symbolic differentiation and we fall back to autograd. cc <a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=4583066\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/apaszke\">@apaszke</a></li>\n<li>I didn't implement <code>isDifferentiable</code>'s schema checking mechanism since for some reason gen_jit_dispatch is emitting multiple schema for each op (it seems like one per variant). This is an error that <a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=370202\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/zdevito\">@zdevito</a> is looking into.</li>\n</ol>\n<p><a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load issue title\" data-id=\"327487348\" data-permission-text=\"Issue title is private\" data-url=\"https://github.com/pytorch/pytorch/issues/7930\" data-hovercard-type=\"issue\" data-hovercard-url=\"/pytorch/pytorch/issues/7930/hovercard\" href=\"https://github.com/pytorch/pytorch/issues/7930\">#7930</a></p>", "body_text": "This diff adds fission and fusion passes for addmm. Breaking apart addmm (where alpha=beta=1.0) allows us to use the existing machinery for add and mm in shape analysis and symbolic differentiation. Fusing add + mm instructions later improves efficiency.\nRemaining TODOs arising from this PR:\n\nStill need a way to dump and inspect the internal GraphExecutor state. This is needed so that we can ensure all of the four conditions tested in test_addmm_grad are actually firing. Right now, we just test the gradient values, which is susceptible to regression if something breaks symbolic differentiation and we fall back to autograd. cc @apaszke\nI didn't implement isDifferentiable's schema checking mechanism since for some reason gen_jit_dispatch is emitting multiple schema for each op (it seems like one per variant). This is an error that @zdevito is looking into.\n\n#7930", "body": "This diff adds fission and fusion passes for addmm. Breaking apart addmm (where alpha=beta=1.0) allows us to use the existing machinery for `add` and `mm` in shape analysis and symbolic differentiation. Fusing `add` + `mm` instructions later improves efficiency.\r\n\r\nRemaining TODOs arising from this PR:\r\n1) Still need a way to dump and inspect the internal GraphExecutor state. This is needed so that we can ensure all of the four conditions tested in `test_addmm_grad` are actually firing. Right now, we just test the gradient values, which is susceptible to regression if something breaks symbolic differentiation and we fall back to autograd. cc @apaszke \r\n2) I didn't implement `isDifferentiable`'s schema checking mechanism since for some reason gen_jit_dispatch is emitting multiple schema for each op (it seems like one per variant). This is an error that @zdevito is looking into.\r\n\r\nhttps://github.com/pytorch/pytorch/issues/7930"}