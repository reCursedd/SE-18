{"url": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/228412549", "pull_request_review_id": 168677914, "id": 228412549, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIyODQxMjU0OQ==", "diff_hunk": "@@ -1549,6 +1566,63 @@ struct to_ir {\n     return graph->insertConstant(stack[0], tree->range());\n   }\n \n+  // This function extract a new graph from its original subgraph\n+  std::shared_ptr<SugaredValue> emitForkExpr(\n+      SourceRange loc,\n+      const std::shared_ptr<SugaredValue> &forked,\n+      at::ArrayRef<NamedValue> inputs_,\n+      at::ArrayRef<NamedValue> attributes) {\n+    if (forked->kind() != \"module\" && forked->kind() != \"method\") {\n+      throw ErrorReport(loc) << \"Expected a single ScriptModule as the first argument to fork();\"\n+                             << \" but found \"\n+                             << forked->kind();\n+    }\n+    // Build the fork node.\n+    auto inputs = toValues(*method.graph(), inputs_);\n+    auto fork_node = method.graph()->insertNode(method.graph()->create(prim::fork, inputs, 1))\n+                ->setSourceLocation(std::make_shared<SourceRange>(loc));\n+    auto body_block = fork_node->addBlock();\n+\n+    // block_inputs should be the values that have already been captured.\n+    // Uncaptured values will be handled by \"env\" callback later on.\n+    std::vector<NamedValue> block_inputs;\n+    for (auto &input : inputs) {\n+      block_inputs.emplace_back(body_block->addInput()->setType(input->type()));", "path": "torch/csrc/jit/script/compiler.cpp", "position": null, "original_position": 56, "commit_id": "444a45cb215a9dc800f84aaff3de91b484dad6ca", "original_commit_id": "a6716a62d38492fb42410298064fb5725cefdf59", "user": {"login": "zdevito", "id": 370202, "node_id": "MDQ6VXNlcjM3MDIwMg==", "avatar_url": "https://avatars0.githubusercontent.com/u/370202?v=4", "gravatar_id": "", "url": "https://api.github.com/users/zdevito", "html_url": "https://github.com/zdevito", "followers_url": "https://api.github.com/users/zdevito/followers", "following_url": "https://api.github.com/users/zdevito/following{/other_user}", "gists_url": "https://api.github.com/users/zdevito/gists{/gist_id}", "starred_url": "https://api.github.com/users/zdevito/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/zdevito/subscriptions", "organizations_url": "https://api.github.com/users/zdevito/orgs", "repos_url": "https://api.github.com/users/zdevito/repos", "events_url": "https://api.github.com/users/zdevito/events{/privacy}", "received_events_url": "https://api.github.com/users/zdevito/received_events", "type": "User", "site_admin": false}, "body": "same here, let the lifting process decide what inputs to capture.", "created_at": "2018-10-26T05:57:11Z", "updated_at": "2018-11-23T15:53:40Z", "html_url": "https://github.com/pytorch/pytorch/pull/12976#discussion_r228412549", "pull_request_url": "https://api.github.com/repos/pytorch/pytorch/pulls/12976", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/228412549"}, "html": {"href": "https://github.com/pytorch/pytorch/pull/12976#discussion_r228412549"}, "pull_request": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/12976"}}, "body_html": "<p>same here, let the lifting process decide what inputs to capture.</p>", "body_text": "same here, let the lifting process decide what inputs to capture."}