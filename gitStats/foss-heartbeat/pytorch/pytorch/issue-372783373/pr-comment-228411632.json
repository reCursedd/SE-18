{"url": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/228411632", "pull_request_review_id": 168677914, "id": 228411632, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIyODQxMTYzMg==", "diff_hunk": "@@ -535,6 +535,25 @@ RegisterOperators reg({\n             };\n           }\n         }),\n+    Operator(prim::fork, [](Node* node) {", "path": "torch/csrc/jit/register_prim_ops.cpp", "position": null, "original_position": 4, "commit_id": "444a45cb215a9dc800f84aaff3de91b484dad6ca", "original_commit_id": "a6716a62d38492fb42410298064fb5725cefdf59", "user": {"login": "zdevito", "id": 370202, "node_id": "MDQ6VXNlcjM3MDIwMg==", "avatar_url": "https://avatars0.githubusercontent.com/u/370202?v=4", "gravatar_id": "", "url": "https://api.github.com/users/zdevito", "html_url": "https://github.com/zdevito", "followers_url": "https://api.github.com/users/zdevito/followers", "following_url": "https://api.github.com/users/zdevito/following{/other_user}", "gists_url": "https://api.github.com/users/zdevito/gists{/gist_id}", "starred_url": "https://api.github.com/users/zdevito/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/zdevito/subscriptions", "organizations_url": "https://api.github.com/users/zdevito/orgs", "repos_url": "https://api.github.com/users/zdevito/repos", "events_url": "https://api.github.com/users/zdevito/events{/privacy}", "received_events_url": "https://api.github.com/users/zdevito/received_events", "type": "User", "site_admin": false}, "body": "It is very inefficient to create the Code object from a Graph every iteration. Instead:\r\n```\r\n    Operator(prim::fork, [](Node* node) {\r\n      Code code(node->g(attr::Subgraph));\r\n      JIT_ASSERT(node->blocks().size() == 0);\r\n      JIT_ASSERT(node >hasAttribute(attr::Subgraph));\r\n      return [=](Stack& stack) {\r\n        InterpreterState(code).run(stack);\r\n        push(stack, Future(pop(stack)));\r\n        return 0;\r\n      };\r\n    }),\r\n```", "created_at": "2018-10-26T05:50:44Z", "updated_at": "2018-11-23T15:53:40Z", "html_url": "https://github.com/pytorch/pytorch/pull/12976#discussion_r228411632", "pull_request_url": "https://api.github.com/repos/pytorch/pytorch/pulls/12976", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/228411632"}, "html": {"href": "https://github.com/pytorch/pytorch/pull/12976#discussion_r228411632"}, "pull_request": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/12976"}}, "body_html": "<p>It is very inefficient to create the Code object from a Graph every iteration. Instead:</p>\n<pre><code>    Operator(prim::fork, [](Node* node) {\n      Code code(node-&gt;g(attr::Subgraph));\n      JIT_ASSERT(node-&gt;blocks().size() == 0);\n      JIT_ASSERT(node &gt;hasAttribute(attr::Subgraph));\n      return [=](Stack&amp; stack) {\n        InterpreterState(code).run(stack);\n        push(stack, Future(pop(stack)));\n        return 0;\n      };\n    }),\n</code></pre>", "body_text": "It is very inefficient to create the Code object from a Graph every iteration. Instead:\n    Operator(prim::fork, [](Node* node) {\n      Code code(node->g(attr::Subgraph));\n      JIT_ASSERT(node->blocks().size() == 0);\n      JIT_ASSERT(node >hasAttribute(attr::Subgraph));\n      return [=](Stack& stack) {\n        InterpreterState(code).run(stack);\n        push(stack, Future(pop(stack)));\n        return 0;\n      };\n    }),"}