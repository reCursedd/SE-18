{"url": "https://api.github.com/repos/pytorch/pytorch/issues/comments/383401780", "html_url": "https://github.com/pytorch/pytorch/issues/2259#issuecomment-383401780", "issue_url": "https://api.github.com/repos/pytorch/pytorch/issues/2259", "id": 383401780, "node_id": "MDEyOklzc3VlQ29tbWVudDM4MzQwMTc4MA==", "user": {"login": "t-vi", "id": 20787943, "node_id": "MDQ6VXNlcjIwNzg3OTQz", "avatar_url": "https://avatars2.githubusercontent.com/u/20787943?v=4", "gravatar_id": "", "url": "https://api.github.com/users/t-vi", "html_url": "https://github.com/t-vi", "followers_url": "https://api.github.com/users/t-vi/followers", "following_url": "https://api.github.com/users/t-vi/following{/other_user}", "gists_url": "https://api.github.com/users/t-vi/gists{/gist_id}", "starred_url": "https://api.github.com/users/t-vi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/t-vi/subscriptions", "organizations_url": "https://api.github.com/users/t-vi/orgs", "repos_url": "https://api.github.com/users/t-vi/repos", "events_url": "https://api.github.com/users/t-vi/events{/privacy}", "received_events_url": "https://api.github.com/users/t-vi/received_events", "type": "User", "site_admin": false}, "created_at": "2018-04-22T18:24:17Z", "updated_at": "2018-04-22T18:24:17Z", "author_association": "CONTRIBUTOR", "body_html": "<p>Would it be possible to have a deprecation-plan? Like printing out a UserWarning that it'll change unless one explicitly requests averaging for a release and then changing it. I would expect that currently pytorch changes fast enough to not keep old code working and a correct default would be a service to future generations of PyTorch users.</p>", "body_text": "Would it be possible to have a deprecation-plan? Like printing out a UserWarning that it'll change unless one explicitly requests averaging for a release and then changing it. I would expect that currently pytorch changes fast enough to not keep old code working and a correct default would be a service to future generations of PyTorch users.", "body": "Would it be possible to have a deprecation-plan? Like printing out a UserWarning that it'll change unless one explicitly requests averaging for a release and then changing it. I would expect that currently pytorch changes fast enough to not keep old code working and a correct default would be a service to future generations of PyTorch users.\r\n"}