{"url": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/221700594", "pull_request_review_id": 160413627, "id": 221700594, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIyMTcwMDU5NA==", "diff_hunk": "@@ -400,9 +400,6 @@ if (BUILD_TEST)\n     target_link_libraries(${test_name} ${Caffe2_MAIN_LIBS} gtest_main)\n     target_include_directories(${test_name} PRIVATE $<INSTALL_INTERFACE:include>)\n     target_include_directories(${test_name} PRIVATE ${Caffe2_CPU_INCLUDE})\n-    if (${CMAKE_MAJOR_VERSION}.${CMAKE_MINOR_VERSION} GREATER 3.0)\n-      target_compile_features(${test_name} PRIVATE cxx_range_for)", "path": "caffe2/CMakeLists.txt", "position": 5, "original_position": 5, "commit_id": "79422d0f8e7fb546d5f1c53ae6e083eb66c5f408", "original_commit_id": "4442521ae9113341e325925efbbb8400258ca673", "user": {"login": "bddppq", "id": 9300575, "node_id": "MDQ6VXNlcjkzMDA1NzU=", "avatar_url": "https://avatars2.githubusercontent.com/u/9300575?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bddppq", "html_url": "https://github.com/bddppq", "followers_url": "https://api.github.com/users/bddppq/followers", "following_url": "https://api.github.com/users/bddppq/following{/other_user}", "gists_url": "https://api.github.com/users/bddppq/gists{/gist_id}", "starred_url": "https://api.github.com/users/bddppq/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bddppq/subscriptions", "organizations_url": "https://api.github.com/users/bddppq/orgs", "repos_url": "https://api.github.com/users/bddppq/repos", "events_url": "https://api.github.com/users/bddppq/events{/privacy}", "received_events_url": "https://api.github.com/users/bddppq/received_events", "type": "User", "site_admin": false}, "body": "Old version of cmake (e.g. 3.5) doesn't know about clang 7 and so it doesn't have the list of supported compiler features of it. On the other hand, this seems to be legacy way of specifying c++11 in cmake pre 3.1 world (since which cmake has introduced `CMAKE_CXX_STANDARD` and `CMAKE_C_STANDARD`).", "created_at": "2018-10-01T17:56:43Z", "updated_at": "2018-11-23T15:52:14Z", "html_url": "https://github.com/pytorch/pytorch/pull/12223#discussion_r221700594", "pull_request_url": "https://api.github.com/repos/pytorch/pytorch/pulls/12223", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/221700594"}, "html": {"href": "https://github.com/pytorch/pytorch/pull/12223#discussion_r221700594"}, "pull_request": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/12223"}}, "body_html": "<p>Old version of cmake (e.g. 3.5) doesn't know about clang 7 and so it doesn't have the list of supported compiler features of it. On the other hand, this seems to be legacy way of specifying c++11 in cmake pre 3.1 world (since which cmake has introduced <code>CMAKE_CXX_STANDARD</code> and <code>CMAKE_C_STANDARD</code>).</p>", "body_text": "Old version of cmake (e.g. 3.5) doesn't know about clang 7 and so it doesn't have the list of supported compiler features of it. On the other hand, this seems to be legacy way of specifying c++11 in cmake pre 3.1 world (since which cmake has introduced CMAKE_CXX_STANDARD and CMAKE_C_STANDARD)."}