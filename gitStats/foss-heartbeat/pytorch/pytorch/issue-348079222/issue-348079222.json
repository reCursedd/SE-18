{"url": "https://api.github.com/repos/pytorch/pytorch/issues/10276", "repository_url": "https://api.github.com/repos/pytorch/pytorch", "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/10276/labels{/name}", "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/10276/comments", "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/10276/events", "html_url": "https://github.com/pytorch/pytorch/issues/10276", "id": 348079222, "node_id": "MDU6SXNzdWUzNDgwNzkyMjI=", "number": 10276, "title": "threshold(x, 0, 0) consistently faster than relu(x)", "user": {"login": "SsnL", "id": 5674597, "node_id": "MDQ6VXNlcjU2NzQ1OTc=", "avatar_url": "https://avatars2.githubusercontent.com/u/5674597?v=4", "gravatar_id": "", "url": "https://api.github.com/users/SsnL", "html_url": "https://github.com/SsnL", "followers_url": "https://api.github.com/users/SsnL/followers", "following_url": "https://api.github.com/users/SsnL/following{/other_user}", "gists_url": "https://api.github.com/users/SsnL/gists{/gist_id}", "starred_url": "https://api.github.com/users/SsnL/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/SsnL/subscriptions", "organizations_url": "https://api.github.com/users/SsnL/orgs", "repos_url": "https://api.github.com/users/SsnL/repos", "events_url": "https://api.github.com/users/SsnL/events{/privacy}", "received_events_url": "https://api.github.com/users/SsnL/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-08-06T20:56:44Z", "updated_at": "2018-08-09T19:42:07Z", "closed_at": "2018-08-09T19:42:07Z", "author_association": "CONTRIBUTOR", "body_html": "<p>In <code>CUDA_LAUNCH_BLOCKING=1 ipython</code>,</p>\n<div class=\"highlight highlight-source-python\"><pre>In [<span class=\"pl-c1\">26</span>]: x <span class=\"pl-k\">=</span> torch.randn(<span class=\"pl-c1\">200</span>,<span class=\"pl-c1\">300</span>,<span class=\"pl-c1\">400</span>)\n\nIn [<span class=\"pl-c1\">27</span>]: <span class=\"pl-k\">%</span>timeit <span class=\"pl-k\">-</span>n <span class=\"pl-c1\">100</span> torch.nn.functional.threshold(x, <span class=\"pl-c1\">0</span>, <span class=\"pl-c1\">0</span>)\n<span class=\"pl-c1\">71.5</span> ms \u00b1 <span class=\"pl-c1\">308</span> \u00b5s per loop (mean \u00b1 std. dev. of <span class=\"pl-c1\">7</span> runs, <span class=\"pl-c1\">100</span> loops each)\n\nIn [<span class=\"pl-c1\">28</span>]: <span class=\"pl-k\">%</span>timeit <span class=\"pl-k\">-</span>n <span class=\"pl-c1\">100</span> torch.nn.functional.relu(x)\n<span class=\"pl-c1\">78.9</span> ms \u00b1 <span class=\"pl-c1\">269</span> \u00b5s per loop (mean \u00b1 std. dev. of <span class=\"pl-c1\">7</span> runs, <span class=\"pl-c1\">100</span> loops each)\n\nIn [<span class=\"pl-c1\">29</span>]: xc <span class=\"pl-k\">=</span> x.cuda()\n\nIn [<span class=\"pl-c1\">30</span>]: <span class=\"pl-k\">%</span>timeit <span class=\"pl-k\">-</span>n <span class=\"pl-c1\">100</span> torch.nn.functional.threshold(xc, <span class=\"pl-c1\">0</span>, <span class=\"pl-c1\">0</span>)\n<span class=\"pl-c1\">883</span> \u00b5s \u00b1 <span class=\"pl-c1\">2.23</span> \u00b5s per loop (mean \u00b1 std. dev. of <span class=\"pl-c1\">7</span> runs, <span class=\"pl-c1\">100</span> loops each)\n\nIn [<span class=\"pl-c1\">31</span>]: <span class=\"pl-k\">%</span>timeit <span class=\"pl-k\">-</span>n <span class=\"pl-c1\">100</span> torch.nn.functional.relu(xc)\n<span class=\"pl-c1\">1.79</span> ms \u00b1 <span class=\"pl-c1\">2.78</span> \u00b5s per loop (mean \u00b1 std. dev. of <span class=\"pl-c1\">7</span> runs, <span class=\"pl-c1\">100</span> loops each)\n</pre></div>", "body_text": "In CUDA_LAUNCH_BLOCKING=1 ipython,\nIn [26]: x = torch.randn(200,300,400)\n\nIn [27]: %timeit -n 100 torch.nn.functional.threshold(x, 0, 0)\n71.5 ms \u00b1 308 \u00b5s per loop (mean \u00b1 std. dev. of 7 runs, 100 loops each)\n\nIn [28]: %timeit -n 100 torch.nn.functional.relu(x)\n78.9 ms \u00b1 269 \u00b5s per loop (mean \u00b1 std. dev. of 7 runs, 100 loops each)\n\nIn [29]: xc = x.cuda()\n\nIn [30]: %timeit -n 100 torch.nn.functional.threshold(xc, 0, 0)\n883 \u00b5s \u00b1 2.23 \u00b5s per loop (mean \u00b1 std. dev. of 7 runs, 100 loops each)\n\nIn [31]: %timeit -n 100 torch.nn.functional.relu(xc)\n1.79 ms \u00b1 2.78 \u00b5s per loop (mean \u00b1 std. dev. of 7 runs, 100 loops each)", "body": "In `CUDA_LAUNCH_BLOCKING=1 ipython`,\r\n```py\r\nIn [26]: x = torch.randn(200,300,400)\r\n\r\nIn [27]: %timeit -n 100 torch.nn.functional.threshold(x, 0, 0)\r\n71.5 ms \u00b1 308 \u00b5s per loop (mean \u00b1 std. dev. of 7 runs, 100 loops each)\r\n\r\nIn [28]: %timeit -n 100 torch.nn.functional.relu(x)\r\n78.9 ms \u00b1 269 \u00b5s per loop (mean \u00b1 std. dev. of 7 runs, 100 loops each)\r\n\r\nIn [29]: xc = x.cuda()\r\n\r\nIn [30]: %timeit -n 100 torch.nn.functional.threshold(xc, 0, 0)\r\n883 \u00b5s \u00b1 2.23 \u00b5s per loop (mean \u00b1 std. dev. of 7 runs, 100 loops each)\r\n\r\nIn [31]: %timeit -n 100 torch.nn.functional.relu(xc)\r\n1.79 ms \u00b1 2.78 \u00b5s per loop (mean \u00b1 std. dev. of 7 runs, 100 loops each)\r\n\r\n```"}