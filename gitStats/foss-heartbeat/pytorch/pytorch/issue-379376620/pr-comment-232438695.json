{"url": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/232438695", "pull_request_review_id": 173647053, "id": 232438695, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIzMjQzODY5NQ==", "diff_hunk": "@@ -0,0 +1,63 @@\n+#pragma once\n+\n+#include <torch/data/datasets/base.h>\n+\n+#include <c10/util/Exception.h>\n+\n+#include <memory>\n+#include <utility>\n+\n+namespace torch {\n+namespace data {\n+namespace datasets {\n+\n+template <typename UnderlyingDataset>\n+class SharedDataset : BatchDataset<\n+                          SharedDataset<UnderlyingDataset>,\n+                          typename UnderlyingDataset::BatchType,\n+                          typename UnderlyingDataset::BatchRequestType> {\n+ public:\n+  using BatchType = typename UnderlyingDataset::BatchType;\n+  using BatchRequestType = typename UnderlyingDataset::BatchRequestType;\n+\n+  /* implicit */ SharedDataset(\n+      std::shared_ptr<UnderlyingDataset> shared_dataset)\n+      : dataset_(std::move(shared_dataset)) {}\n+\n+  BatchType get_batch(BatchRequestType request) override {\n+    AT_ASSERT(dataset_ != nullptr);\n+    return dataset_->get_batch(std::move(request));\n+  }\n+\n+  optional<size_t> size() const override {\n+    AT_ASSERT(dataset_ != nullptr);\n+    return dataset_->size();\n+  }\n+\n+  UnderlyingDataset& operator*() {\n+    return *dataset_;\n+  }\n+\n+  const UnderlyingDataset& operator*() const {\n+    return *dataset_;\n+  }\n+\n+  UnderlyingDataset* operator->() {\n+    return dataset_.get();\n+  }\n+\n+  const UnderlyingDataset* operator->() const {\n+    return dataset_.get();\n+  }\n+\n+ private:\n+  std::shared_ptr<UnderlyingDataset> dataset_;\n+};\n+\n+template <typename UnderlyingDataset, typename... Args>", "path": "torch/csrc/api/include/torch/data/datasets/shared.h", "position": 72, "original_position": 57, "commit_id": "5f87f133050a37372c9aed0b95c273d467ab56a0", "original_commit_id": "bcfeccb5fd3e78f55238e9fc2b0c3651e1c85d18", "user": {"login": "jaliyae", "id": 12703337, "node_id": "MDQ6VXNlcjEyNzAzMzM3", "avatar_url": "https://avatars3.githubusercontent.com/u/12703337?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jaliyae", "html_url": "https://github.com/jaliyae", "followers_url": "https://api.github.com/users/jaliyae/followers", "following_url": "https://api.github.com/users/jaliyae/following{/other_user}", "gists_url": "https://api.github.com/users/jaliyae/gists{/gist_id}", "starred_url": "https://api.github.com/users/jaliyae/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jaliyae/subscriptions", "organizations_url": "https://api.github.com/users/jaliyae/orgs", "repos_url": "https://api.github.com/users/jaliyae/repos", "events_url": "https://api.github.com/users/jaliyae/events{/privacy}", "received_events_url": "https://api.github.com/users/jaliyae/received_events", "type": "User", "site_admin": false}, "body": "Yes, this is the trick, is this the right place or we can park it along with torch::make_unique", "created_at": "2018-11-10T02:43:12Z", "updated_at": "2018-11-23T15:54:38Z", "html_url": "https://github.com/pytorch/pytorch/pull/13800#discussion_r232438695", "pull_request_url": "https://api.github.com/repos/pytorch/pytorch/pulls/13800", "author_association": "NONE", "_links": {"self": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/232438695"}, "html": {"href": "https://github.com/pytorch/pytorch/pull/13800#discussion_r232438695"}, "pull_request": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/13800"}}, "body_html": "<p>Yes, this is the trick, is this the right place or we can park it along with torch::make_unique</p>", "body_text": "Yes, this is the trick, is this the right place or we can park it along with torch::make_unique"}