{"url": "https://api.github.com/repos/pytorch/pytorch/issues/3170", "repository_url": "https://api.github.com/repos/pytorch/pytorch", "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/3170/labels{/name}", "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/3170/comments", "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/3170/events", "html_url": "https://github.com/pytorch/pytorch/issues/3170", "id": 266651460, "node_id": "MDU6SXNzdWUyNjY2NTE0NjA=", "number": 3170, "title": "Probable refcount bug in CUDA coalesce", "user": {"login": "ezyang", "id": 13564, "node_id": "MDQ6VXNlcjEzNTY0", "avatar_url": "https://avatars0.githubusercontent.com/u/13564?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ezyang", "html_url": "https://github.com/ezyang", "followers_url": "https://api.github.com/users/ezyang/followers", "following_url": "https://api.github.com/users/ezyang/following{/other_user}", "gists_url": "https://api.github.com/users/ezyang/gists{/gist_id}", "starred_url": "https://api.github.com/users/ezyang/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ezyang/subscriptions", "organizations_url": "https://api.github.com/users/ezyang/orgs", "repos_url": "https://api.github.com/users/ezyang/repos", "events_url": "https://api.github.com/users/ezyang/events{/privacy}", "received_events_url": "https://api.github.com/users/ezyang/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 679954154, "node_id": "MDU6TGFiZWw2Nzk5NTQxNTQ=", "url": "https://api.github.com/repos/pytorch/pytorch/labels/sparse", "name": "sparse", "color": "bfd4f2", "default": false}], "state": "closed", "locked": false, "assignee": {"login": "SsnL", "id": 5674597, "node_id": "MDQ6VXNlcjU2NzQ1OTc=", "avatar_url": "https://avatars2.githubusercontent.com/u/5674597?v=4", "gravatar_id": "", "url": "https://api.github.com/users/SsnL", "html_url": "https://github.com/SsnL", "followers_url": "https://api.github.com/users/SsnL/followers", "following_url": "https://api.github.com/users/SsnL/following{/other_user}", "gists_url": "https://api.github.com/users/SsnL/gists{/gist_id}", "starred_url": "https://api.github.com/users/SsnL/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/SsnL/subscriptions", "organizations_url": "https://api.github.com/users/SsnL/orgs", "repos_url": "https://api.github.com/users/SsnL/repos", "events_url": "https://api.github.com/users/SsnL/events{/privacy}", "received_events_url": "https://api.github.com/users/SsnL/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "SsnL", "id": 5674597, "node_id": "MDQ6VXNlcjU2NzQ1OTc=", "avatar_url": "https://avatars2.githubusercontent.com/u/5674597?v=4", "gravatar_id": "", "url": "https://api.github.com/users/SsnL", "html_url": "https://github.com/SsnL", "followers_url": "https://api.github.com/users/SsnL/followers", "following_url": "https://api.github.com/users/SsnL/following{/other_user}", "gists_url": "https://api.github.com/users/SsnL/gists{/gist_id}", "starred_url": "https://api.github.com/users/SsnL/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/SsnL/subscriptions", "organizations_url": "https://api.github.com/users/SsnL/orgs", "repos_url": "https://api.github.com/users/SsnL/repos", "events_url": "https://api.github.com/users/SsnL/events{/privacy}", "received_events_url": "https://api.github.com/users/SsnL/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 3, "created_at": "2017-10-18T21:41:09Z", "updated_at": "2018-01-08T21:54:46Z", "closed_at": "2018-01-08T21:54:45Z", "author_association": "CONTRIBUTOR", "body_html": "<p>Reproduction script:</p>\n<pre><code>    def test_garbage_coalesce(self):\n        i = self.IndexTensor([[0, 0, 1, 1, 2, 2, 3, 3, 4, 4, 4, 4, 5, 5]])\n        v = self.ValueTensor([\n          [-0.1745, -0.9485, -1.7882],\n          [ 3.3324, -1.3192,  1.3591],\n          [ 0.0718,  0.3904,  0.7360],\n          [-3.3426,  1.3233, -1.3632],\n          [-1.3134, -0.6767,  1.0237],\n          [ 0.2384, -0.0944,  0.0972],\n          [-0.0967, -0.5256, -0.9908],\n          [ 1.2490, -0.4944,  0.5094],\n          [-0.2885, -1.5679, -2.9558],\n          [ 1.4541,  0.7492, -1.1334],\n          [-1.7823,  0.7056, -0.7269],\n          [-0.0859,  0.0601, -0.0219],\n          [-0.2227, -1.2103, -2.2817],\n          [ 0.3115, -0.2181,  0.0793],\n        ])\n        x = self.SparseTensor(i, v, torch.Size((7, 3)))\n        y = x.coalesce()\n        self.assertEqual(x.to_dense(), y.to_dense())\n</code></pre>\n<p>This fails.</p>\n<p>If I move the <code>x.to_dense()</code> before the coalesce, the test passes.</p>", "body_text": "Reproduction script:\n    def test_garbage_coalesce(self):\n        i = self.IndexTensor([[0, 0, 1, 1, 2, 2, 3, 3, 4, 4, 4, 4, 5, 5]])\n        v = self.ValueTensor([\n          [-0.1745, -0.9485, -1.7882],\n          [ 3.3324, -1.3192,  1.3591],\n          [ 0.0718,  0.3904,  0.7360],\n          [-3.3426,  1.3233, -1.3632],\n          [-1.3134, -0.6767,  1.0237],\n          [ 0.2384, -0.0944,  0.0972],\n          [-0.0967, -0.5256, -0.9908],\n          [ 1.2490, -0.4944,  0.5094],\n          [-0.2885, -1.5679, -2.9558],\n          [ 1.4541,  0.7492, -1.1334],\n          [-1.7823,  0.7056, -0.7269],\n          [-0.0859,  0.0601, -0.0219],\n          [-0.2227, -1.2103, -2.2817],\n          [ 0.3115, -0.2181,  0.0793],\n        ])\n        x = self.SparseTensor(i, v, torch.Size((7, 3)))\n        y = x.coalesce()\n        self.assertEqual(x.to_dense(), y.to_dense())\n\nThis fails.\nIf I move the x.to_dense() before the coalesce, the test passes.", "body": "Reproduction script:\r\n\r\n```\r\n    def test_garbage_coalesce(self):\r\n        i = self.IndexTensor([[0, 0, 1, 1, 2, 2, 3, 3, 4, 4, 4, 4, 5, 5]])\r\n        v = self.ValueTensor([\r\n          [-0.1745, -0.9485, -1.7882],\r\n          [ 3.3324, -1.3192,  1.3591],\r\n          [ 0.0718,  0.3904,  0.7360],\r\n          [-3.3426,  1.3233, -1.3632],\r\n          [-1.3134, -0.6767,  1.0237],\r\n          [ 0.2384, -0.0944,  0.0972],\r\n          [-0.0967, -0.5256, -0.9908],\r\n          [ 1.2490, -0.4944,  0.5094],\r\n          [-0.2885, -1.5679, -2.9558],\r\n          [ 1.4541,  0.7492, -1.1334],\r\n          [-1.7823,  0.7056, -0.7269],\r\n          [-0.0859,  0.0601, -0.0219],\r\n          [-0.2227, -1.2103, -2.2817],\r\n          [ 0.3115, -0.2181,  0.0793],\r\n        ])\r\n        x = self.SparseTensor(i, v, torch.Size((7, 3)))\r\n        y = x.coalesce()\r\n        self.assertEqual(x.to_dense(), y.to_dense())\r\n```\r\n\r\nThis fails.\r\n\r\nIf I move the `x.to_dense()` before the coalesce, the test passes."}