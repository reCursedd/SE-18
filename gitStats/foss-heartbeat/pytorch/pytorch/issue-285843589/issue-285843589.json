{"url": "https://api.github.com/repos/pytorch/pytorch/issues/4466", "repository_url": "https://api.github.com/repos/pytorch/pytorch", "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/4466/labels{/name}", "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/4466/comments", "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/4466/events", "html_url": "https://github.com/pytorch/pytorch/issues/4466", "id": 285843589, "node_id": "MDU6SXNzdWUyODU4NDM1ODk=", "number": 4466, "title": "polygamma(n, x) fails on Variables x (but works on Tensors)", "user": {"login": "fritzo", "id": 648532, "node_id": "MDQ6VXNlcjY0ODUzMg==", "avatar_url": "https://avatars0.githubusercontent.com/u/648532?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fritzo", "html_url": "https://github.com/fritzo", "followers_url": "https://api.github.com/users/fritzo/followers", "following_url": "https://api.github.com/users/fritzo/following{/other_user}", "gists_url": "https://api.github.com/users/fritzo/gists{/gist_id}", "starred_url": "https://api.github.com/users/fritzo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fritzo/subscriptions", "organizations_url": "https://api.github.com/users/fritzo/orgs", "repos_url": "https://api.github.com/users/fritzo/repos", "events_url": "https://api.github.com/users/fritzo/events{/privacy}", "received_events_url": "https://api.github.com/users/fritzo/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-01-03T23:48:47Z", "updated_at": "2018-01-08T02:20:12Z", "closed_at": null, "author_association": "CONTRIBUTOR", "body_html": "<p>To reproduce:</p>\n<div class=\"highlight highlight-source-python\"><pre><span class=\"pl-k\">&gt;&gt;</span><span class=\"pl-k\">&gt;</span> x <span class=\"pl-k\">=</span> torch.ones(<span class=\"pl-c1\">1</span>)\n<span class=\"pl-k\">&gt;&gt;</span><span class=\"pl-k\">&gt;</span> torch.polygamma(<span class=\"pl-c1\">0</span>, x)                   <span class=\"pl-c\"><span class=\"pl-c\">#</span> &lt;-------- Works as intended.</span>\n<span class=\"pl-k\">-</span><span class=\"pl-c1\">0.5772</span>\n[torch.FloatTensor of size <span class=\"pl-c1\">1</span>]\n\n<span class=\"pl-k\">&gt;&gt;</span><span class=\"pl-k\">&gt;</span> v <span class=\"pl-k\">=</span> torch.autograd.Variable(x, <span class=\"pl-v\">requires_grad</span><span class=\"pl-k\">=</span><span class=\"pl-c1\">True</span>)\n<span class=\"pl-k\">&gt;&gt;</span><span class=\"pl-k\">&gt;</span> torch.polygamma(<span class=\"pl-c1\">0</span>, v)                   <span class=\"pl-c\"><span class=\"pl-c\">#</span> &lt;-------- Fails.</span>\nTraceback (most recent call last):\n  File <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>&lt;stdin&gt;<span class=\"pl-pds\">\"</span></span>, line <span class=\"pl-c1\">1</span>, <span class=\"pl-k\">in</span> <span class=\"pl-k\">&lt;</span>module<span class=\"pl-k\">&gt;</span>\n<span class=\"pl-c1\">TypeError</span>: descriptor <span class=\"pl-s\"><span class=\"pl-pds\">'</span>polygamma<span class=\"pl-pds\">'</span></span> requires a <span class=\"pl-s\"><span class=\"pl-pds\">'</span>torch._C._VariableBase<span class=\"pl-pds\">'</span></span> <span class=\"pl-c1\">object</span> but received a <span class=\"pl-s\"><span class=\"pl-pds\">'</span>int<span class=\"pl-pds\">'</span></span></pre></div>\n<p>Note that <code>polygamma(n,0)</code> works as intended in computing derivatives of <code>digamma()</code>:</p>\n<div class=\"highlight highlight-source-python\"><pre><span class=\"pl-k\">&gt;&gt;</span><span class=\"pl-k\">&gt;</span> torch.autograd.grad([torch.digamma(v)], [v])\n(Variable containing:\n <span class=\"pl-c1\">1.6449</span>\n[torch.FloatTensor of size <span class=\"pl-c1\">1</span>]\n,)</pre></div>", "body_text": "To reproduce:\n>>> x = torch.ones(1)\n>>> torch.polygamma(0, x)                   # <-------- Works as intended.\n-0.5772\n[torch.FloatTensor of size 1]\n\n>>> v = torch.autograd.Variable(x, requires_grad=True)\n>>> torch.polygamma(0, v)                   # <-------- Fails.\nTraceback (most recent call last):\n  File \"<stdin>\", line 1, in <module>\nTypeError: descriptor 'polygamma' requires a 'torch._C._VariableBase' object but received a 'int'\nNote that polygamma(n,0) works as intended in computing derivatives of digamma():\n>>> torch.autograd.grad([torch.digamma(v)], [v])\n(Variable containing:\n 1.6449\n[torch.FloatTensor of size 1]\n,)", "body": "To reproduce:\r\n```py\r\n>>> x = torch.ones(1)\r\n>>> torch.polygamma(0, x)                   # <-------- Works as intended.\r\n-0.5772\r\n[torch.FloatTensor of size 1]\r\n\r\n>>> v = torch.autograd.Variable(x, requires_grad=True)\r\n>>> torch.polygamma(0, v)                   # <-------- Fails.\r\nTraceback (most recent call last):\r\n  File \"<stdin>\", line 1, in <module>\r\nTypeError: descriptor 'polygamma' requires a 'torch._C._VariableBase' object but received a 'int'\r\n```\r\nNote that `polygamma(n,0)` works as intended in computing derivatives of `digamma()`:\r\n```py\r\n>>> torch.autograd.grad([torch.digamma(v)], [v])\r\n(Variable containing:\r\n 1.6449\r\n[torch.FloatTensor of size 1]\r\n,)\r\n```\r\n  "}