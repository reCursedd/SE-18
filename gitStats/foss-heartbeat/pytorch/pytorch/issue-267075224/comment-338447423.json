{"url": "https://api.github.com/repos/pytorch/pytorch/issues/comments/338447423", "html_url": "https://github.com/pytorch/pytorch/issues/3196#issuecomment-338447423", "issue_url": "https://api.github.com/repos/pytorch/pytorch/issues/3196", "id": 338447423, "node_id": "MDEyOklzc3VlQ29tbWVudDMzODQ0NzQyMw==", "user": {"login": "isaykatsman", "id": 10509755, "node_id": "MDQ6VXNlcjEwNTA5NzU1", "avatar_url": "https://avatars1.githubusercontent.com/u/10509755?v=4", "gravatar_id": "", "url": "https://api.github.com/users/isaykatsman", "html_url": "https://github.com/isaykatsman", "followers_url": "https://api.github.com/users/isaykatsman/followers", "following_url": "https://api.github.com/users/isaykatsman/following{/other_user}", "gists_url": "https://api.github.com/users/isaykatsman/gists{/gist_id}", "starred_url": "https://api.github.com/users/isaykatsman/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/isaykatsman/subscriptions", "organizations_url": "https://api.github.com/users/isaykatsman/orgs", "repos_url": "https://api.github.com/users/isaykatsman/repos", "events_url": "https://api.github.com/users/isaykatsman/events{/privacy}", "received_events_url": "https://api.github.com/users/isaykatsman/received_events", "type": "User", "site_admin": false}, "created_at": "2017-10-22T03:00:37Z", "updated_at": "2017-10-22T03:00:37Z", "author_association": "NONE", "body_html": "<p><a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=6078431\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/rajathkmp\">@rajathkmp</a> This is janky, but you can essentially use a list comprehension to construct a tuple and then pass that to cat. For example expanding along dimension 1 (of size 1) to size <code>stack_size</code>:</p>\n<pre><code>torch.cat(tuple([x for i in range(stack_size)]), 1)\n</code></pre>", "body_text": "@rajathkmp This is janky, but you can essentially use a list comprehension to construct a tuple and then pass that to cat. For example expanding along dimension 1 (of size 1) to size stack_size:\ntorch.cat(tuple([x for i in range(stack_size)]), 1)", "body": "@rajathkmp This is janky, but you can essentially use a list comprehension to construct a tuple and then pass that to cat. For example expanding along dimension 1 (of size 1) to size `stack_size`:\r\n\r\n```\r\ntorch.cat(tuple([x for i in range(stack_size)]), 1)\r\n```"}