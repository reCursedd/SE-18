{"url": "https://api.github.com/repos/pytorch/pytorch/issues/comments/299669245", "html_url": "https://github.com/pytorch/pytorch/pull/1491#issuecomment-299669245", "issue_url": "https://api.github.com/repos/pytorch/pytorch/issues/1491", "id": 299669245, "node_id": "MDEyOklzc3VlQ29tbWVudDI5OTY2OTI0NQ==", "user": {"login": "lantiga", "id": 191033, "node_id": "MDQ6VXNlcjE5MTAzMw==", "avatar_url": "https://avatars2.githubusercontent.com/u/191033?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lantiga", "html_url": "https://github.com/lantiga", "followers_url": "https://api.github.com/users/lantiga/followers", "following_url": "https://api.github.com/users/lantiga/following{/other_user}", "gists_url": "https://api.github.com/users/lantiga/gists{/gist_id}", "starred_url": "https://api.github.com/users/lantiga/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lantiga/subscriptions", "organizations_url": "https://api.github.com/users/lantiga/orgs", "repos_url": "https://api.github.com/users/lantiga/repos", "events_url": "https://api.github.com/users/lantiga/events{/privacy}", "received_events_url": "https://api.github.com/users/lantiga/received_events", "type": "User", "site_admin": false}, "created_at": "2017-05-06T22:17:51Z", "updated_at": "2017-05-06T22:18:02Z", "author_association": "COLLABORATOR", "body_html": "<p>These changes unearthed two tests that were broken but were passing:</p>\n<ul>\n<li>test_bilinear</li>\n<li>test_pack_padded_sequence</li>\n</ul>\n<p>They were passing because <code>assertEqual</code> in <code>test/common.py</code> was not handling the combination of arguments (e.g one Variable and one Tensor), and the comparison was\u00a0falling back to <code>unittest.assertEqual</code>, which was using <code>==</code> (where the lhs was a Variable) and was evaluated as bool, ultimately returning True.</p>", "body_text": "These changes unearthed two tests that were broken but were passing:\n\ntest_bilinear\ntest_pack_padded_sequence\n\nThey were passing because assertEqual in test/common.py was not handling the combination of arguments (e.g one Variable and one Tensor), and the comparison was\u00a0falling back to unittest.assertEqual, which was using == (where the lhs was a Variable) and was evaluated as bool, ultimately returning True.", "body": "These changes unearthed two tests that were broken but were passing:\r\n* test_bilinear\r\n* test_pack_padded_sequence\r\n\r\nThey were passing because `assertEqual` in `test/common.py` was not handling the combination of arguments (e.g one Variable and one Tensor), and the comparison was\u00a0falling back to `unittest.assertEqual`, which was using `==` (where the lhs was a Variable) and was evaluated as bool, ultimately returning True."}