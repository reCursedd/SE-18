{"url": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/115138775", "pull_request_review_id": 36661000, "id": 115138775, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDExNTEzODc3NQ==", "diff_hunk": "@@ -151,13 +152,24 @@ def safeCoalesce(self, t):\n \n         return tg\n \n+    def unwrapVariables(self, x, y):\n+        if isinstance(x, Variable) and isinstance(y, Variable):\n+            return x.data, y.data\n+        if isinstance(x, Variable) and torch.is_tensor(y):\n+            return x.data, y\n+        if isinstance(x, Variable) and isinstance(y, Number):\n+            return x.data[0], y\n+        if torch.is_tensor(x) and isinstance(y, Variable):\n+            return x, y.data\n+        if isinstance(x, Number) and isinstance(y, Variable):\n+            return x, y.data[0]", "path": "test/common.py", "position": null, "original_position": 22, "commit_id": "6e27d074408c5b317751745bf49ea3d69cd207a0", "original_commit_id": "8ecc093b867f09eb5666d85824aeabf31ac7e8e3", "user": {"login": "apaszke", "id": 4583066, "node_id": "MDQ6VXNlcjQ1ODMwNjY=", "avatar_url": "https://avatars3.githubusercontent.com/u/4583066?v=4", "gravatar_id": "", "url": "https://api.github.com/users/apaszke", "html_url": "https://github.com/apaszke", "followers_url": "https://api.github.com/users/apaszke/followers", "following_url": "https://api.github.com/users/apaszke/following{/other_user}", "gists_url": "https://api.github.com/users/apaszke/gists{/gist_id}", "starred_url": "https://api.github.com/users/apaszke/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/apaszke/subscriptions", "organizations_url": "https://api.github.com/users/apaszke/orgs", "repos_url": "https://api.github.com/users/apaszke/repos", "events_url": "https://api.github.com/users/apaszke/events{/privacy}", "received_events_url": "https://api.github.com/users/apaszke/received_events", "type": "User", "site_admin": false}, "body": "I'm not sure if allowing cross-type comparisons here is the best idea. We can miss a case and accidentaly write broken tests in the future. I think it'd be best to either unpack them if both are variables, fail when Variable is mixed with sth else, and do nothing otherwise.", "created_at": "2017-05-07T09:59:37Z", "updated_at": "2018-11-23T15:33:22Z", "html_url": "https://github.com/pytorch/pytorch/pull/1491#discussion_r115138775", "pull_request_url": "https://api.github.com/repos/pytorch/pytorch/pulls/1491", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/115138775"}, "html": {"href": "https://github.com/pytorch/pytorch/pull/1491#discussion_r115138775"}, "pull_request": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/1491"}}, "body_html": "<p>I'm not sure if allowing cross-type comparisons here is the best idea. We can miss a case and accidentaly write broken tests in the future. I think it'd be best to either unpack them if both are variables, fail when Variable is mixed with sth else, and do nothing otherwise.</p>", "body_text": "I'm not sure if allowing cross-type comparisons here is the best idea. We can miss a case and accidentaly write broken tests in the future. I think it'd be best to either unpack them if both are variables, fail when Variable is mixed with sth else, and do nothing otherwise."}