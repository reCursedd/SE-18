{"url": "https://api.github.com/repos/pytorch/pytorch/issues/comments/299670500", "html_url": "https://github.com/pytorch/pytorch/pull/1491#issuecomment-299670500", "issue_url": "https://api.github.com/repos/pytorch/pytorch/issues/1491", "id": 299670500, "node_id": "MDEyOklzc3VlQ29tbWVudDI5OTY3MDUwMA==", "user": {"login": "lantiga", "id": 191033, "node_id": "MDQ6VXNlcjE5MTAzMw==", "avatar_url": "https://avatars2.githubusercontent.com/u/191033?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lantiga", "html_url": "https://github.com/lantiga", "followers_url": "https://api.github.com/users/lantiga/followers", "following_url": "https://api.github.com/users/lantiga/following{/other_user}", "gists_url": "https://api.github.com/users/lantiga/gists{/gist_id}", "starred_url": "https://api.github.com/users/lantiga/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lantiga/subscriptions", "organizations_url": "https://api.github.com/users/lantiga/orgs", "repos_url": "https://api.github.com/users/lantiga/repos", "events_url": "https://api.github.com/users/lantiga/events{/privacy}", "received_events_url": "https://api.github.com/users/lantiga/received_events", "type": "User", "site_admin": false}, "created_at": "2017-05-06T22:46:15Z", "updated_at": "2017-05-06T22:46:15Z", "author_association": "COLLABORATOR", "body_html": "<p>Issue with test_bilinear:</p>\n<p>See: <a href=\"https://github.com/pytorch/pytorch/blob/master/test/test_nn.py#L2073\">https://github.com/pytorch/pytorch/blob/master/test/test_nn.py#L2073</a><br>\nRelevant code here:</p>\n<pre><code>module = nn.Bilinear(10, 10, 8)\n\ninput1 = torch.randn(4, 10)\ninput2 = torch.randn(4, 10)\n\ninput1_1 = Variable(input1, requires_grad=True)\ninput2_1 = Variable(input2, requires_grad=True)\n\noutput3 = module(input1_1, input2_1)\ngrad = torch.randn(*output3.size())\noutput3.backward(grad)\ngi1 = input1_1.grad.data.clone()\ngi2 = input2_1.grad.data.clone()\n\nself.assertEqual([gi1, gi2], output3)\n</code></pre>\n<p>Maybe I'm missing something obvious, but how can the last assertion be true? /cc <a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=1310570\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/soumith\">@soumith</a> <a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=4583066\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/apaszke\">@apaszke</a><br>\n(code above from commit <a class=\"commit-link\" data-hovercard-type=\"commit\" data-hovercard-url=\"https://github.com/pytorch/pytorch/commit/75f1989bec555ea21836ad1906ac373f6434199c/hovercard\" href=\"https://github.com/pytorch/pytorch/commit/75f1989bec555ea21836ad1906ac373f6434199c\"><tt>75f1989</tt></a>)</p>", "body_text": "Issue with test_bilinear:\nSee: https://github.com/pytorch/pytorch/blob/master/test/test_nn.py#L2073\nRelevant code here:\nmodule = nn.Bilinear(10, 10, 8)\n\ninput1 = torch.randn(4, 10)\ninput2 = torch.randn(4, 10)\n\ninput1_1 = Variable(input1, requires_grad=True)\ninput2_1 = Variable(input2, requires_grad=True)\n\noutput3 = module(input1_1, input2_1)\ngrad = torch.randn(*output3.size())\noutput3.backward(grad)\ngi1 = input1_1.grad.data.clone()\ngi2 = input2_1.grad.data.clone()\n\nself.assertEqual([gi1, gi2], output3)\n\nMaybe I'm missing something obvious, but how can the last assertion be true? /cc @soumith @apaszke\n(code above from commit 75f1989)", "body": "Issue with test_bilinear:\r\n\r\nSee: https://github.com/pytorch/pytorch/blob/master/test/test_nn.py#L2073\r\nRelevant code here:\r\n```\r\nmodule = nn.Bilinear(10, 10, 8)\r\n\r\ninput1 = torch.randn(4, 10)\r\ninput2 = torch.randn(4, 10)\r\n\r\ninput1_1 = Variable(input1, requires_grad=True)\r\ninput2_1 = Variable(input2, requires_grad=True)\r\n\r\noutput3 = module(input1_1, input2_1)\r\ngrad = torch.randn(*output3.size())\r\noutput3.backward(grad)\r\ngi1 = input1_1.grad.data.clone()\r\ngi2 = input2_1.grad.data.clone()\r\n\r\nself.assertEqual([gi1, gi2], output3)\r\n```\r\nMaybe I'm missing something obvious, but how can the last assertion be true? /cc @soumith @apaszke \r\n(code above from commit 75f1989bec555ea21836ad1906ac373f6434199c)"}