{"url": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/122006710", "pull_request_review_id": 44083749, "id": 122006710, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEyMjAwNjcxMA==", "diff_hunk": "@@ -658,8 +658,20 @@ THC_API void THCTensor_(btrifact)(THCState *state, THCTensor *ra_, THCudaIntTens\n \n   long num_batches = ra__->size[0];\n \n-  THCudaIntTensor_resize2d(state, rpivots_, num_batches, n);\n-  int *pivots_gpu = THCudaIntTensor_data(state, rpivots_);\n+  if (!pivot) {\n+    THCudaIntTensor *t = THCudaIntTensor_new(state);\n+    THCudaIntTensor_range(state, t, 1, n, 1);", "path": "torch/lib/THC/generic/THCTensorMathBlas.cu", "position": 17, "original_position": 17, "commit_id": "03060b841b3bcfed80912e489c34d3e6048f6a76", "original_commit_id": "03060b841b3bcfed80912e489c34d3e6048f6a76", "user": {"login": "bamos", "id": 707462, "node_id": "MDQ6VXNlcjcwNzQ2Mg==", "avatar_url": "https://avatars1.githubusercontent.com/u/707462?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bamos", "html_url": "https://github.com/bamos", "followers_url": "https://api.github.com/users/bamos/followers", "following_url": "https://api.github.com/users/bamos/following{/other_user}", "gists_url": "https://api.github.com/users/bamos/gists{/gist_id}", "starred_url": "https://api.github.com/users/bamos/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bamos/subscriptions", "organizations_url": "https://api.github.com/users/bamos/orgs", "repos_url": "https://api.github.com/users/bamos/repos", "events_url": "https://api.github.com/users/bamos/events{/privacy}", "received_events_url": "https://api.github.com/users/bamos/received_events", "type": "User", "site_admin": false}, "body": "Yes, I think (but am not sure) it's for backwards compatibility with code that uses Fortran. This is documented in [dgetrf](http://www.netlib.org/clapack/clapack-3.2.1-CMAKE/SRC/VARIANTS/lu/REC/dgetrf.c) as `IPIV` (Although as another note I am nearly certain that the description of the `IPIV` there is wrong.)", "created_at": "2017-06-14T17:06:04Z", "updated_at": "2018-11-23T15:33:53Z", "html_url": "https://github.com/pytorch/pytorch/pull/1793#discussion_r122006710", "pull_request_url": "https://api.github.com/repos/pytorch/pytorch/pulls/1793", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/122006710"}, "html": {"href": "https://github.com/pytorch/pytorch/pull/1793#discussion_r122006710"}, "pull_request": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/1793"}}, "body_html": "<p>Yes, I think (but am not sure) it's for backwards compatibility with code that uses Fortran. This is documented in <a href=\"http://www.netlib.org/clapack/clapack-3.2.1-CMAKE/SRC/VARIANTS/lu/REC/dgetrf.c\" rel=\"nofollow\">dgetrf</a> as <code>IPIV</code> (Although as another note I am nearly certain that the description of the <code>IPIV</code> there is wrong.)</p>", "body_text": "Yes, I think (but am not sure) it's for backwards compatibility with code that uses Fortran. This is documented in dgetrf as IPIV (Although as another note I am nearly certain that the description of the IPIV there is wrong.)", "in_reply_to_id": 121906693}