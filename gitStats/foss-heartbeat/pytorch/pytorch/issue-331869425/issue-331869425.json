{"url": "https://api.github.com/repos/pytorch/pytorch/issues/8417", "repository_url": "https://api.github.com/repos/pytorch/pytorch", "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/8417/labels{/name}", "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/8417/comments", "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/8417/events", "html_url": "https://github.com/pytorch/pytorch/issues/8417", "id": 331869425, "node_id": "MDU6SXNzdWUzMzE4Njk0MjU=", "number": 8417, "title": "TypeError: __new__() got an unexpected keyword argument 'file'", "user": {"login": "SingL3", "id": 20473466, "node_id": "MDQ6VXNlcjIwNDczNDY2", "avatar_url": "https://avatars1.githubusercontent.com/u/20473466?v=4", "gravatar_id": "", "url": "https://api.github.com/users/SingL3", "html_url": "https://github.com/SingL3", "followers_url": "https://api.github.com/users/SingL3/followers", "following_url": "https://api.github.com/users/SingL3/following{/other_user}", "gists_url": "https://api.github.com/users/SingL3/gists{/gist_id}", "starred_url": "https://api.github.com/users/SingL3/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/SingL3/subscriptions", "organizations_url": "https://api.github.com/users/SingL3/orgs", "repos_url": "https://api.github.com/users/SingL3/repos", "events_url": "https://api.github.com/users/SingL3/events{/privacy}", "received_events_url": "https://api.github.com/users/SingL3/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2018-06-13T07:14:07Z", "updated_at": "2018-06-13T07:42:44Z", "closed_at": "2018-06-13T07:42:44Z", "author_association": "NONE", "body_html": "<p>I am trying to install caffe2, and here is the cmake output:</p>\n<blockquote>\n<p>-- The CXX compiler identification is GNU 5.3.1<br>\n-- The C compiler identification is GNU 5.3.1<br>\n-- Check for working CXX compiler: /usr/bin/c++<br>\n-- Check for working CXX compiler: /usr/bin/c++ -- works<br>\n-- Detecting CXX compiler ABI info<br>\n-- Detecting CXX compiler ABI info - done<br>\n-- Detecting CXX compile features<br>\n-- Detecting CXX compile features - done<br>\n-- Check for working C compiler: /usr/bin/cc<br>\n-- Check for working C compiler: /usr/bin/cc -- works<br>\n-- Detecting C compiler ABI info<br>\n-- Detecting C compiler ABI info - done<br>\n-- Detecting C compile features<br>\n-- Detecting C compile features - done<br>\n-- Not forcing any particular BLAS to be found<br>\n-- Build type not set - defaulting to Release<br>\n-- Performing Test CAFFE2_LONG_IS_INT32_OR_64<br>\n-- Performing Test CAFFE2_LONG_IS_INT32_OR_64 - Success<br>\n-- Does not need to define long separately.<br>\n-- Performing Test CAFFE2_EXCEPTION_PTR_SUPPORTED<br>\n-- Performing Test CAFFE2_EXCEPTION_PTR_SUPPORTED - Success<br>\n-- std::exception_ptr is supported.<br>\n-- Performing Test CAFFE2_IS_NUMA_AVAILABLE<br>\n-- Performing Test CAFFE2_IS_NUMA_AVAILABLE - Success<br>\n-- NUMA is available<br>\n-- Performing Test CAFFE2_NEED_TO_TURN_OFF_DEPRECATION_WARNING<br>\n-- Performing Test CAFFE2_NEED_TO_TURN_OFF_DEPRECATION_WARNING - Failed<br>\n-- Turning off deprecation warning due to glog.<br>\n-- Performing Test CAFFE2_COMPILER_SUPPORTS_AVX2_EXTENSIONS<br>\n-- Performing Test CAFFE2_COMPILER_SUPPORTS_AVX2_EXTENSIONS - Success<br>\n-- Current compiler supports avx2 extention. Will build perfkernels.<br>\n-- Performing Test COMPILER_SUPPORTS_HIDDEN_VISIBILITY<br>\n-- Performing Test COMPILER_SUPPORTS_HIDDEN_VISIBILITY - Success<br>\n-- Performing Test COMPILER_SUPPORTS_HIDDEN_INLINE_VISIBILITY<br>\n-- Performing Test COMPILER_SUPPORTS_HIDDEN_INLINE_VISIBILITY - Success<br>\n-- Building using own protobuf under third_party per request.<br>\n-- Use custom protobuf build.<br>\n-- Looking for pthread.h<br>\n-- Looking for pthread.h - found<br>\n-- Looking for pthread_create<br>\n-- Looking for pthread_create - not found<br>\n-- Looking for pthread_create in pthreads<br>\n-- Looking for pthread_create in pthreads - not found<br>\n-- Looking for pthread_create in pthread<br>\n-- Looking for pthread_create in pthread - found<br>\n-- Found Threads: TRUE<br>\n-- Caffe2 protobuf include directory: $&lt;BUILD_INTERFACE:/storage1/lin/Detetron/pytorch/third_party/protobuf/src&gt;$&lt;INSTALL_INTERFACE:include&gt;<br>\n-- Found Git: /usr/bin/git (found version \"2.7.4\")<br>\n-- The BLAS backend of choice:Eigen<br>\n-- Brace yourself, we are building NNPACK<br>\n-- The ASM compiler identification is GNU<br>\n-- Found assembler: /usr/bin/cc<br>\n-- Found PythonInterp: /usr/bin/python (found version \"2.7.11\")<br>\n-- Check if compiler accepts -pthread<br>\n-- Check if compiler accepts -pthread - yes<br>\n-- Caffe2: Cannot find gflags automatically. Using legacy find.<br>\n-- Found gflags: /usr/include<br>\n-- Caffe2: Found gflags  (include: /usr/include, library: /usr/lib/x86_64-linux-gnu/libgflags.so)<br>\n-- Caffe2: Cannot find glog automatically. Using legacy find.<br>\n-- Found glog: /usr/local/include<br>\n-- Caffe2: Found glog (include: /usr/local/include, library: /usr/local/lib/libglog.so)<br>\n-- Found LMDB: /usr/include<br>\n-- Found lmdb    (include: /usr/include, library: /usr/lib/x86_64-linux-gnu/liblmdb.so)<br>\n-- Found LevelDB: /usr/include<br>\n-- Found LevelDB (include: /usr/include, library: /usr/lib/x86_64-linux-gnu/libleveldb.so)<br>\n-- Found Snappy: /usr/include<br>\n-- Found Snappy  (include: /usr/include, library: /usr/lib/x86_64-linux-gnu/libsnappy.so)<br>\n-- Found Numa: /usr/include<br>\n-- Found Numa  (include: /usr/include, library: /usr/lib/x86_64-linux-gnu/libnuma.so)<br>\n-- Found CUDA: /usr/local/cuda-8.0 (found suitable exact version \"8.0\")<br>\n-- OpenCV found (/usr/local/opencv3.3.0/share/OpenCV)<br>\n-- Found system Eigen at /usr/include/eigen3<br>\n-- Found PythonInterp: /usr/bin/python (found suitable version \"2.7.11\", minimum required is \"2.7\")<br>\n-- Found PythonLibs: /usr/lib/x86_64-linux-gnu/libpython2.7.so (found suitable version \"2.7.11+\", minimum required is \"2.7\")<br>\n-- Found NumPy: /usr/local/lib/python2.7/dist-packages/numpy/core/include (found version \"1.14.1\")<br>\n-- NumPy ver. 1.14.1 found (include: /usr/local/lib/python2.7/dist-packages/numpy/core/include)<br>\n-- Could NOT find pybind11 (missing: pybind11_INCLUDE_DIR)<br>\n-- Found MPI_C: /usr/lib/openmpi/lib/libmpi.so (found version \"3.0\")<br>\n-- Found MPI_CXX: /usr/lib/openmpi/lib/libmpi_cxx.so (found version \"3.0\")<br>\n-- Found MPI: TRUE (found version \"3.0\")<br>\n-- MPI support found<br>\n-- MPI compile flags: -pthread<br>\n-- MPI include path: /usr/lib/openmpi/include/openmpi/opal/mca/event/libevent2021/libevent/usr/lib/openmpi/include/openmpi/opal/mca/event/libevent2021/libevent/include/usr/lib/openmpi/include/openmpi/usr/lib/openmpi/include<br>\n-- MPI LINK flags path: -Wl,-rpath -Wl,/usr/lib/openmpi/lib -Wl,--enable-new-dtags -pthread<br>\n-- MPI libraries: /usr/lib/openmpi/lib/libmpi_cxx.so/usr/lib/openmpi/lib/libmpi.so<br>\nCMake Warning at cmake/Dependencies.cmake:364 (message):<br>\nOpenMPI found, but it is not built with CUDA support.<br>\nCall Stack (most recent call first):<br>\nCMakeLists.txt:204 (include)<br>\n-- Found CUDA: /usr/local/cuda-8.0 (found suitable version \"8.0\", minimum required is \"7.0\")<br>\n-- Caffe2: CUDA detected: 8.0<br>\n-- Caffe2: CUDA nvcc is: /usr/local/cuda-8.0/bin/nvcc<br>\n-- Caffe2: CUDA toolkit directory: /usr/local/cuda-8.0<br>\n-- Caffe2: Header version is: 8.0<br>\n-- Found CUDNN: /usr/local/cuda-8.0/include<br>\n-- Found cuDNN: v6.0.21  (include: /usr/local/cuda-8.0/include, library: /usr/local/cuda-8.0/lib64/libcudnn.so)<br>\n-- Autodetected CUDA architecture(s): 6.1 6.1 6.1 6.1<br>\n-- Added CUDA NVCC flags for: -gencode;arch=compute_61,code=sm_61<br>\n-- Found NCCL: /usr/local/include<br>\n-- Determining NCCL version from the header file: /usr/local/include/nccl.h<br>\n-- Found NCCL (include: /usr/local/include, library: /usr/local/lib/libnccl.so)<br>\n-- Could NOT find CUB (missing: CUB_INCLUDE_DIR)<br>\n-- Could NOT find Gloo (missing: Gloo_INCLUDE_DIR Gloo_LIBRARY)<br>\n-- MPI include path: /usr/lib/openmpi/include/openmpi/opal/mca/event/libevent2021/libevent/usr/lib/openmpi/include/openmpi/opal/mca/event/libevent2021/libevent/include/usr/lib/openmpi/include/openmpi/usr/lib/openmpi/include<br>\n-- MPI libraries: /usr/lib/openmpi/lib/libmpi_cxx.so/usr/lib/openmpi/lib/libmpi.so<br>\n-- CUDA detected: 8.0<br>\n-- Found libcuda: /usr/lib/x86_64-linux-gnu/libcuda.so<br>\n-- Found libnvrtc: /usr/local/cuda-8.0/lib64/libnvrtc.so<br>\n-- Determining NCCL version from the header file: /usr/local/include/nccl.h<br>\n-- Found NCCL (include: /usr/local/include, library: /usr/local/lib/libnccl.so)<br>\nCMake Warning at cmake/Dependencies.cmake:573 (message):<br>\nmobile opengl is only used in android or ios builds.<br>\nCall Stack (most recent call first):<br>\nCMakeLists.txt:204 (include)<br>\nCMake Warning at cmake/Dependencies.cmake:649 (message):<br>\nMetal is only used in ios builds.<br>\nCall Stack (most recent call first):<br>\nCMakeLists.txt:204 (include)<br>\n-- GCC 5.3.1: Adding gcc and gcc_s libs to link line<br>\n-- Include NCCL operators<br>\n-- Excluding ideep operators as we are not using ideep<br>\n-- Including image processing operators<br>\n-- Excluding video processing operators due to no opencv<br>\n-- Excluding mkl operators as we are not using mkl<br>\n-- Include Observer library<br>\n-- Using lib/python2.7/dist-packages as python relative installation path<br>\n-- Automatically generating missing <strong>init</strong>.py files.<br>\nCMake Warning at CMakeLists.txt:351 (message):<br>\nGenerated cmake files are only fully tested if one builds with system glog,<br>\ngflags, and protobuf.  Other settings may generate files that are not well<br>\ntested.<br>\n--<br>\n-- ******** Summary ********<br>\n-- General:<br>\n--   CMake version         : 3.11.3<br>\n--   CMake command         : /mnt/disk1/lin/cmake3.11/cmake-3.11.3-Linux-x86_64/bin/cmake<br>\n--   Git version           : v0.1.11-8825-g01f5ba4<br>\n--   System                : Linux<br>\n--   C++ compiler          : /usr/bin/c++<br>\n--   C++ compiler version  : 5.3.1<br>\n--   BLAS                  : Eigen<br>\n--   CXX flags             :  -Wno-deprecated -fvisibility-inlines-hidden -DONNX_NAMESPACE=onnx_c2 -O2 -fPIC -Wno-narrowing -Wno-invalid-partial-specialization -Wall -Wextra -Wno-missing-field-initializers -Wno-type-limits -Wno-unknown-warning-option -Wno-unknown-pragmas -Wno-sign-compare -Wno-unused-parameter -Wno-unused-variable -Wno-unused-function -Wno-unused-result<br>\n--   Build type            : Release<br>\n--   Compile definitions   :<br>\n--<br>\n--   BUILD_CAFFE2          : ON<br>\n--   BUILD_ATEN            : OFF<br>\n--   BUILD_BINARY          : ON<br>\n--   BUILD_CUSTOM_PROTOBUF : ON<br>\n--     Link local protobuf : ON<br>\n--   BUILD_DOCS            : OFF<br>\n--   BUILD_PYTHON          : ON<br>\n--     Python version      : 2.7.11+<br>\n--     Python includes     : /usr/include/python2.7<br>\n--   BUILD_SHARED_LIBS     : ON<br>\n--   BUILD_TEST            : OFF<br>\n--   USE_ASAN              : OFF<br>\n--   USE_ATEN              : OFF<br>\n--   USE_CUDA              : ON<br>\n--     CUDA static link    : OFF<br>\n--     USE_CUDNN           : ON<br>\n--     CUDA version        : 8.0<br>\n--     cuDNN version       : 6.0.21<br>\n--     CUDA root directory : /usr/local/cuda-8.0<br>\n--     CUDA library        : /usr/lib/x86_64-linux-gnu/libcuda.so<br>\n--     cudart library      : /usr/local/cuda-8.0/lib64/libcudart_static.a;-pthread;dl;/usr/lib/x86_64-linux-gnu/librt.so<br>\n--     cublas library      : /usr/local/cuda-8.0/lib64/libcublas.so;/usr/local/cuda-8.0/lib64/libcublas_device.a<br>\n--     cufft library       : /usr/local/cuda-8.0/lib64/libcufft.so<br>\n--     curand library      : /usr/local/cuda-8.0/lib64/libcurand.so<br>\n--     cuDNN library       : /usr/local/cuda-8.0/lib64/libcudnn.so<br>\n--     nvrtc               : /usr/local/cuda-8.0/lib64/libnvrtc.so<br>\n--     CUDA include path   : /usr/local/cuda-8.0/include<br>\n--     NVCC executable     : /usr/local/cuda-8.0/bin/nvcc<br>\n--     CUDA host compiler  : /usr/bin/cc<br>\n--     USE_TENSORRT        : OFF<br>\n--   USE_ROCM              : OFF<br>\n--   USE_EIGEN_FOR_BLAS    : ON<br>\n--   USE_FFMPEG            : OFF<br>\n--   USE_GFLAGS            : ON<br>\n--   USE_GLOG              : ON<br>\n--   USE_GLOO              : ON<br>\n--     USE_GLOO_IBVERBS    : OFF<br>\n--   USE_LEVELDB           : ON<br>\n--     LevelDB version     : 1.18<br>\n--     Snappy version      : 1.1.3<br>\n--   USE_LITE_PROTO        : OFF<br>\n--   USE_LMDB              : ON<br>\n--     LMDB version        : 0.9.17<br>\n--   USE_METAL             : OFF<br>\n--   USE_MKL               :<br>\n--   USE_MOBILE_OPENGL     : OFF<br>\n--   USE_MPI               : ON<br>\n--   USE_NCCL              : ON<br>\n--     USE_SYSTEM_NCCL     : OFF<br>\n--   USE_NERVANA_GPU       : OFF<br>\n--   USE_NNPACK            : ON<br>\n--   USE_OBSERVERS         : ON<br>\n--   USE_OPENCL            : OFF<br>\n--   USE_OPENCV            : ON<br>\n--     OpenCV version      : 3.3.0<br>\n--   USE_OPENMP            : OFF<br>\n--   USE_PROF              : OFF<br>\n--   USE_REDIS             : OFF<br>\n--   USE_ROCKSDB           : OFF<br>\n--   USE_ZMQ               : OFF<br>\n-- Configuring done<br>\n-- Generating done</p>\n</blockquote>\n<p>and I think I success in make install but after that, when I trying to<br>\n<code>from caffe2.python import core</code><br>\nI got this error:</p>\n<blockquote>\n<blockquote>\n<blockquote>\n<blockquote>\n<p>from caffe2.python import core<br>\nTraceback (most recent call last):<br>\nFile \"\", line 1, in <br>\nFile \"caffe2/python/core.py\", line 14, in <br>\nfrom caffe2.proto import caffe2_pb2<br>\nFile \"caffe2/proto/caffe2_pb2.py\", line 168, in <br>\noptions=None, file=DESCRIPTOR),<br>\nTypeError: <strong>new</strong>() got an unexpected keyword argument 'file'</p>\n</blockquote>\n</blockquote>\n</blockquote>\n</blockquote>\n<ul>\n<li>Caffe2:</li>\n<li>OS: Ubuntu 16.04</li>\n<li>Python version: 2.7</li>\n<li>CUDA/cuDNN version: 8.0, 6.0</li>\n<li>GPU models and configuration: 6.1</li>\n<li>CMake version: 3.11</li>\n</ul>", "body_text": "I am trying to install caffe2, and here is the cmake output:\n\n-- The CXX compiler identification is GNU 5.3.1\n-- The C compiler identification is GNU 5.3.1\n-- Check for working CXX compiler: /usr/bin/c++\n-- Check for working CXX compiler: /usr/bin/c++ -- works\n-- Detecting CXX compiler ABI info\n-- Detecting CXX compiler ABI info - done\n-- Detecting CXX compile features\n-- Detecting CXX compile features - done\n-- Check for working C compiler: /usr/bin/cc\n-- Check for working C compiler: /usr/bin/cc -- works\n-- Detecting C compiler ABI info\n-- Detecting C compiler ABI info - done\n-- Detecting C compile features\n-- Detecting C compile features - done\n-- Not forcing any particular BLAS to be found\n-- Build type not set - defaulting to Release\n-- Performing Test CAFFE2_LONG_IS_INT32_OR_64\n-- Performing Test CAFFE2_LONG_IS_INT32_OR_64 - Success\n-- Does not need to define long separately.\n-- Performing Test CAFFE2_EXCEPTION_PTR_SUPPORTED\n-- Performing Test CAFFE2_EXCEPTION_PTR_SUPPORTED - Success\n-- std::exception_ptr is supported.\n-- Performing Test CAFFE2_IS_NUMA_AVAILABLE\n-- Performing Test CAFFE2_IS_NUMA_AVAILABLE - Success\n-- NUMA is available\n-- Performing Test CAFFE2_NEED_TO_TURN_OFF_DEPRECATION_WARNING\n-- Performing Test CAFFE2_NEED_TO_TURN_OFF_DEPRECATION_WARNING - Failed\n-- Turning off deprecation warning due to glog.\n-- Performing Test CAFFE2_COMPILER_SUPPORTS_AVX2_EXTENSIONS\n-- Performing Test CAFFE2_COMPILER_SUPPORTS_AVX2_EXTENSIONS - Success\n-- Current compiler supports avx2 extention. Will build perfkernels.\n-- Performing Test COMPILER_SUPPORTS_HIDDEN_VISIBILITY\n-- Performing Test COMPILER_SUPPORTS_HIDDEN_VISIBILITY - Success\n-- Performing Test COMPILER_SUPPORTS_HIDDEN_INLINE_VISIBILITY\n-- Performing Test COMPILER_SUPPORTS_HIDDEN_INLINE_VISIBILITY - Success\n-- Building using own protobuf under third_party per request.\n-- Use custom protobuf build.\n-- Looking for pthread.h\n-- Looking for pthread.h - found\n-- Looking for pthread_create\n-- Looking for pthread_create - not found\n-- Looking for pthread_create in pthreads\n-- Looking for pthread_create in pthreads - not found\n-- Looking for pthread_create in pthread\n-- Looking for pthread_create in pthread - found\n-- Found Threads: TRUE\n-- Caffe2 protobuf include directory: $<BUILD_INTERFACE:/storage1/lin/Detetron/pytorch/third_party/protobuf/src>$<INSTALL_INTERFACE:include>\n-- Found Git: /usr/bin/git (found version \"2.7.4\")\n-- The BLAS backend of choice:Eigen\n-- Brace yourself, we are building NNPACK\n-- The ASM compiler identification is GNU\n-- Found assembler: /usr/bin/cc\n-- Found PythonInterp: /usr/bin/python (found version \"2.7.11\")\n-- Check if compiler accepts -pthread\n-- Check if compiler accepts -pthread - yes\n-- Caffe2: Cannot find gflags automatically. Using legacy find.\n-- Found gflags: /usr/include\n-- Caffe2: Found gflags  (include: /usr/include, library: /usr/lib/x86_64-linux-gnu/libgflags.so)\n-- Caffe2: Cannot find glog automatically. Using legacy find.\n-- Found glog: /usr/local/include\n-- Caffe2: Found glog (include: /usr/local/include, library: /usr/local/lib/libglog.so)\n-- Found LMDB: /usr/include\n-- Found lmdb    (include: /usr/include, library: /usr/lib/x86_64-linux-gnu/liblmdb.so)\n-- Found LevelDB: /usr/include\n-- Found LevelDB (include: /usr/include, library: /usr/lib/x86_64-linux-gnu/libleveldb.so)\n-- Found Snappy: /usr/include\n-- Found Snappy  (include: /usr/include, library: /usr/lib/x86_64-linux-gnu/libsnappy.so)\n-- Found Numa: /usr/include\n-- Found Numa  (include: /usr/include, library: /usr/lib/x86_64-linux-gnu/libnuma.so)\n-- Found CUDA: /usr/local/cuda-8.0 (found suitable exact version \"8.0\")\n-- OpenCV found (/usr/local/opencv3.3.0/share/OpenCV)\n-- Found system Eigen at /usr/include/eigen3\n-- Found PythonInterp: /usr/bin/python (found suitable version \"2.7.11\", minimum required is \"2.7\")\n-- Found PythonLibs: /usr/lib/x86_64-linux-gnu/libpython2.7.so (found suitable version \"2.7.11+\", minimum required is \"2.7\")\n-- Found NumPy: /usr/local/lib/python2.7/dist-packages/numpy/core/include (found version \"1.14.1\")\n-- NumPy ver. 1.14.1 found (include: /usr/local/lib/python2.7/dist-packages/numpy/core/include)\n-- Could NOT find pybind11 (missing: pybind11_INCLUDE_DIR)\n-- Found MPI_C: /usr/lib/openmpi/lib/libmpi.so (found version \"3.0\")\n-- Found MPI_CXX: /usr/lib/openmpi/lib/libmpi_cxx.so (found version \"3.0\")\n-- Found MPI: TRUE (found version \"3.0\")\n-- MPI support found\n-- MPI compile flags: -pthread\n-- MPI include path: /usr/lib/openmpi/include/openmpi/opal/mca/event/libevent2021/libevent/usr/lib/openmpi/include/openmpi/opal/mca/event/libevent2021/libevent/include/usr/lib/openmpi/include/openmpi/usr/lib/openmpi/include\n-- MPI LINK flags path: -Wl,-rpath -Wl,/usr/lib/openmpi/lib -Wl,--enable-new-dtags -pthread\n-- MPI libraries: /usr/lib/openmpi/lib/libmpi_cxx.so/usr/lib/openmpi/lib/libmpi.so\nCMake Warning at cmake/Dependencies.cmake:364 (message):\nOpenMPI found, but it is not built with CUDA support.\nCall Stack (most recent call first):\nCMakeLists.txt:204 (include)\n-- Found CUDA: /usr/local/cuda-8.0 (found suitable version \"8.0\", minimum required is \"7.0\")\n-- Caffe2: CUDA detected: 8.0\n-- Caffe2: CUDA nvcc is: /usr/local/cuda-8.0/bin/nvcc\n-- Caffe2: CUDA toolkit directory: /usr/local/cuda-8.0\n-- Caffe2: Header version is: 8.0\n-- Found CUDNN: /usr/local/cuda-8.0/include\n-- Found cuDNN: v6.0.21  (include: /usr/local/cuda-8.0/include, library: /usr/local/cuda-8.0/lib64/libcudnn.so)\n-- Autodetected CUDA architecture(s): 6.1 6.1 6.1 6.1\n-- Added CUDA NVCC flags for: -gencode;arch=compute_61,code=sm_61\n-- Found NCCL: /usr/local/include\n-- Determining NCCL version from the header file: /usr/local/include/nccl.h\n-- Found NCCL (include: /usr/local/include, library: /usr/local/lib/libnccl.so)\n-- Could NOT find CUB (missing: CUB_INCLUDE_DIR)\n-- Could NOT find Gloo (missing: Gloo_INCLUDE_DIR Gloo_LIBRARY)\n-- MPI include path: /usr/lib/openmpi/include/openmpi/opal/mca/event/libevent2021/libevent/usr/lib/openmpi/include/openmpi/opal/mca/event/libevent2021/libevent/include/usr/lib/openmpi/include/openmpi/usr/lib/openmpi/include\n-- MPI libraries: /usr/lib/openmpi/lib/libmpi_cxx.so/usr/lib/openmpi/lib/libmpi.so\n-- CUDA detected: 8.0\n-- Found libcuda: /usr/lib/x86_64-linux-gnu/libcuda.so\n-- Found libnvrtc: /usr/local/cuda-8.0/lib64/libnvrtc.so\n-- Determining NCCL version from the header file: /usr/local/include/nccl.h\n-- Found NCCL (include: /usr/local/include, library: /usr/local/lib/libnccl.so)\nCMake Warning at cmake/Dependencies.cmake:573 (message):\nmobile opengl is only used in android or ios builds.\nCall Stack (most recent call first):\nCMakeLists.txt:204 (include)\nCMake Warning at cmake/Dependencies.cmake:649 (message):\nMetal is only used in ios builds.\nCall Stack (most recent call first):\nCMakeLists.txt:204 (include)\n-- GCC 5.3.1: Adding gcc and gcc_s libs to link line\n-- Include NCCL operators\n-- Excluding ideep operators as we are not using ideep\n-- Including image processing operators\n-- Excluding video processing operators due to no opencv\n-- Excluding mkl operators as we are not using mkl\n-- Include Observer library\n-- Using lib/python2.7/dist-packages as python relative installation path\n-- Automatically generating missing init.py files.\nCMake Warning at CMakeLists.txt:351 (message):\nGenerated cmake files are only fully tested if one builds with system glog,\ngflags, and protobuf.  Other settings may generate files that are not well\ntested.\n--\n-- ******** Summary ********\n-- General:\n--   CMake version         : 3.11.3\n--   CMake command         : /mnt/disk1/lin/cmake3.11/cmake-3.11.3-Linux-x86_64/bin/cmake\n--   Git version           : v0.1.11-8825-g01f5ba4\n--   System                : Linux\n--   C++ compiler          : /usr/bin/c++\n--   C++ compiler version  : 5.3.1\n--   BLAS                  : Eigen\n--   CXX flags             :  -Wno-deprecated -fvisibility-inlines-hidden -DONNX_NAMESPACE=onnx_c2 -O2 -fPIC -Wno-narrowing -Wno-invalid-partial-specialization -Wall -Wextra -Wno-missing-field-initializers -Wno-type-limits -Wno-unknown-warning-option -Wno-unknown-pragmas -Wno-sign-compare -Wno-unused-parameter -Wno-unused-variable -Wno-unused-function -Wno-unused-result\n--   Build type            : Release\n--   Compile definitions   :\n--\n--   BUILD_CAFFE2          : ON\n--   BUILD_ATEN            : OFF\n--   BUILD_BINARY          : ON\n--   BUILD_CUSTOM_PROTOBUF : ON\n--     Link local protobuf : ON\n--   BUILD_DOCS            : OFF\n--   BUILD_PYTHON          : ON\n--     Python version      : 2.7.11+\n--     Python includes     : /usr/include/python2.7\n--   BUILD_SHARED_LIBS     : ON\n--   BUILD_TEST            : OFF\n--   USE_ASAN              : OFF\n--   USE_ATEN              : OFF\n--   USE_CUDA              : ON\n--     CUDA static link    : OFF\n--     USE_CUDNN           : ON\n--     CUDA version        : 8.0\n--     cuDNN version       : 6.0.21\n--     CUDA root directory : /usr/local/cuda-8.0\n--     CUDA library        : /usr/lib/x86_64-linux-gnu/libcuda.so\n--     cudart library      : /usr/local/cuda-8.0/lib64/libcudart_static.a;-pthread;dl;/usr/lib/x86_64-linux-gnu/librt.so\n--     cublas library      : /usr/local/cuda-8.0/lib64/libcublas.so;/usr/local/cuda-8.0/lib64/libcublas_device.a\n--     cufft library       : /usr/local/cuda-8.0/lib64/libcufft.so\n--     curand library      : /usr/local/cuda-8.0/lib64/libcurand.so\n--     cuDNN library       : /usr/local/cuda-8.0/lib64/libcudnn.so\n--     nvrtc               : /usr/local/cuda-8.0/lib64/libnvrtc.so\n--     CUDA include path   : /usr/local/cuda-8.0/include\n--     NVCC executable     : /usr/local/cuda-8.0/bin/nvcc\n--     CUDA host compiler  : /usr/bin/cc\n--     USE_TENSORRT        : OFF\n--   USE_ROCM              : OFF\n--   USE_EIGEN_FOR_BLAS    : ON\n--   USE_FFMPEG            : OFF\n--   USE_GFLAGS            : ON\n--   USE_GLOG              : ON\n--   USE_GLOO              : ON\n--     USE_GLOO_IBVERBS    : OFF\n--   USE_LEVELDB           : ON\n--     LevelDB version     : 1.18\n--     Snappy version      : 1.1.3\n--   USE_LITE_PROTO        : OFF\n--   USE_LMDB              : ON\n--     LMDB version        : 0.9.17\n--   USE_METAL             : OFF\n--   USE_MKL               :\n--   USE_MOBILE_OPENGL     : OFF\n--   USE_MPI               : ON\n--   USE_NCCL              : ON\n--     USE_SYSTEM_NCCL     : OFF\n--   USE_NERVANA_GPU       : OFF\n--   USE_NNPACK            : ON\n--   USE_OBSERVERS         : ON\n--   USE_OPENCL            : OFF\n--   USE_OPENCV            : ON\n--     OpenCV version      : 3.3.0\n--   USE_OPENMP            : OFF\n--   USE_PROF              : OFF\n--   USE_REDIS             : OFF\n--   USE_ROCKSDB           : OFF\n--   USE_ZMQ               : OFF\n-- Configuring done\n-- Generating done\n\nand I think I success in make install but after that, when I trying to\nfrom caffe2.python import core\nI got this error:\n\n\n\n\nfrom caffe2.python import core\nTraceback (most recent call last):\nFile \"\", line 1, in \nFile \"caffe2/python/core.py\", line 14, in \nfrom caffe2.proto import caffe2_pb2\nFile \"caffe2/proto/caffe2_pb2.py\", line 168, in \noptions=None, file=DESCRIPTOR),\nTypeError: new() got an unexpected keyword argument 'file'\n\n\n\n\n\nCaffe2:\nOS: Ubuntu 16.04\nPython version: 2.7\nCUDA/cuDNN version: 8.0, 6.0\nGPU models and configuration: 6.1\nCMake version: 3.11", "body": "I am trying to install caffe2, and here is the cmake output:\r\n\r\n> -- The CXX compiler identification is GNU 5.3.1\r\n-- The C compiler identification is GNU 5.3.1\r\n-- Check for working CXX compiler: /usr/bin/c++\r\n-- Check for working CXX compiler: /usr/bin/c++ -- works\r\n-- Detecting CXX compiler ABI info\r\n-- Detecting CXX compiler ABI info - done\r\n-- Detecting CXX compile features\r\n-- Detecting CXX compile features - done\r\n-- Check for working C compiler: /usr/bin/cc\r\n-- Check for working C compiler: /usr/bin/cc -- works\r\n-- Detecting C compiler ABI info\r\n-- Detecting C compiler ABI info - done\r\n-- Detecting C compile features\r\n-- Detecting C compile features - done\r\n-- Not forcing any particular BLAS to be found\r\n-- Build type not set - defaulting to Release\r\n-- Performing Test CAFFE2_LONG_IS_INT32_OR_64\r\n-- Performing Test CAFFE2_LONG_IS_INT32_OR_64 - Success\r\n-- Does not need to define long separately.\r\n-- Performing Test CAFFE2_EXCEPTION_PTR_SUPPORTED\r\n-- Performing Test CAFFE2_EXCEPTION_PTR_SUPPORTED - Success\r\n-- std::exception_ptr is supported.\r\n-- Performing Test CAFFE2_IS_NUMA_AVAILABLE\r\n-- Performing Test CAFFE2_IS_NUMA_AVAILABLE - Success\r\n-- NUMA is available\r\n-- Performing Test CAFFE2_NEED_TO_TURN_OFF_DEPRECATION_WARNING\r\n-- Performing Test CAFFE2_NEED_TO_TURN_OFF_DEPRECATION_WARNING - Failed\r\n-- Turning off deprecation warning due to glog.\r\n-- Performing Test CAFFE2_COMPILER_SUPPORTS_AVX2_EXTENSIONS\r\n-- Performing Test CAFFE2_COMPILER_SUPPORTS_AVX2_EXTENSIONS - Success\r\n-- Current compiler supports avx2 extention. Will build perfkernels.\r\n-- Performing Test COMPILER_SUPPORTS_HIDDEN_VISIBILITY\r\n-- Performing Test COMPILER_SUPPORTS_HIDDEN_VISIBILITY - Success\r\n-- Performing Test COMPILER_SUPPORTS_HIDDEN_INLINE_VISIBILITY\r\n-- Performing Test COMPILER_SUPPORTS_HIDDEN_INLINE_VISIBILITY - Success\r\n-- Building using own protobuf under third_party per request.\r\n-- Use custom protobuf build.\r\n-- Looking for pthread.h\r\n-- Looking for pthread.h - found\r\n-- Looking for pthread_create\r\n-- Looking for pthread_create - not found\r\n-- Looking for pthread_create in pthreads\r\n-- Looking for pthread_create in pthreads - not found\r\n-- Looking for pthread_create in pthread\r\n-- Looking for pthread_create in pthread - found\r\n-- Found Threads: TRUE  \r\n-- Caffe2 protobuf include directory: $<BUILD_INTERFACE:/storage1/lin/Detetron/pytorch/third_party/protobuf/src>$<INSTALL_INTERFACE:include>\r\n-- Found Git: /usr/bin/git (found version \"2.7.4\") \r\n-- The BLAS backend of choice:Eigen\r\n-- Brace yourself, we are building NNPACK\r\n-- The ASM compiler identification is GNU\r\n-- Found assembler: /usr/bin/cc\r\n-- Found PythonInterp: /usr/bin/python (found version \"2.7.11\") \r\n-- Check if compiler accepts -pthread\r\n-- Check if compiler accepts -pthread - yes\r\n-- Caffe2: Cannot find gflags automatically. Using legacy find.\r\n-- Found gflags: /usr/include  \r\n-- Caffe2: Found gflags  (include: /usr/include, library: /usr/lib/x86_64-linux-gnu/libgflags.so)\r\n-- Caffe2: Cannot find glog automatically. Using legacy find.\r\n-- Found glog: /usr/local/include  \r\n-- Caffe2: Found glog (include: /usr/local/include, library: /usr/local/lib/libglog.so)\r\n-- Found LMDB: /usr/include  \r\n-- Found lmdb    (include: /usr/include, library: /usr/lib/x86_64-linux-gnu/liblmdb.so)\r\n-- Found LevelDB: /usr/include  \r\n-- Found LevelDB (include: /usr/include, library: /usr/lib/x86_64-linux-gnu/libleveldb.so)\r\n-- Found Snappy: /usr/include  \r\n-- Found Snappy  (include: /usr/include, library: /usr/lib/x86_64-linux-gnu/libsnappy.so)\r\n-- Found Numa: /usr/include  \r\n-- Found Numa  (include: /usr/include, library: /usr/lib/x86_64-linux-gnu/libnuma.so)\r\n-- Found CUDA: /usr/local/cuda-8.0 (found suitable exact version \"8.0\") \r\n-- OpenCV found (/usr/local/opencv3.3.0/share/OpenCV)\r\n-- Found system Eigen at /usr/include/eigen3\r\n-- Found PythonInterp: /usr/bin/python (found suitable version \"2.7.11\", minimum required is \"2.7\") \r\n-- Found PythonLibs: /usr/lib/x86_64-linux-gnu/libpython2.7.so (found suitable version \"2.7.11+\", minimum required is \"2.7\") \r\n-- Found NumPy: /usr/local/lib/python2.7/dist-packages/numpy/core/include (found version \"1.14.1\") \r\n-- NumPy ver. 1.14.1 found (include: /usr/local/lib/python2.7/dist-packages/numpy/core/include)\r\n-- Could NOT find pybind11 (missing: pybind11_INCLUDE_DIR) \r\n-- Found MPI_C: /usr/lib/openmpi/lib/libmpi.so (found version \"3.0\") \r\n-- Found MPI_CXX: /usr/lib/openmpi/lib/libmpi_cxx.so (found version \"3.0\") \r\n-- Found MPI: TRUE (found version \"3.0\")  \r\n-- MPI support found\r\n-- MPI compile flags: -pthread\r\n-- MPI include path: /usr/lib/openmpi/include/openmpi/opal/mca/event/libevent2021/libevent/usr/lib/openmpi/include/openmpi/opal/mca/event/libevent2021/libevent/include/usr/lib/openmpi/include/openmpi/usr/lib/openmpi/include\r\n-- MPI LINK flags path: -Wl,-rpath -Wl,/usr/lib/openmpi/lib -Wl,--enable-new-dtags -pthread\r\n-- MPI libraries: /usr/lib/openmpi/lib/libmpi_cxx.so/usr/lib/openmpi/lib/libmpi.so\r\nCMake Warning at cmake/Dependencies.cmake:364 (message):\r\n  OpenMPI found, but it is not built with CUDA support.\r\nCall Stack (most recent call first):\r\n  CMakeLists.txt:204 (include)\r\n-- Found CUDA: /usr/local/cuda-8.0 (found suitable version \"8.0\", minimum required is \"7.0\") \r\n-- Caffe2: CUDA detected: 8.0\r\n-- Caffe2: CUDA nvcc is: /usr/local/cuda-8.0/bin/nvcc\r\n-- Caffe2: CUDA toolkit directory: /usr/local/cuda-8.0\r\n-- Caffe2: Header version is: 8.0\r\n-- Found CUDNN: /usr/local/cuda-8.0/include  \r\n-- Found cuDNN: v6.0.21  (include: /usr/local/cuda-8.0/include, library: /usr/local/cuda-8.0/lib64/libcudnn.so)\r\n-- Autodetected CUDA architecture(s): 6.1 6.1 6.1 6.1 \r\n-- Added CUDA NVCC flags for: -gencode;arch=compute_61,code=sm_61\r\n-- Found NCCL: /usr/local/include  \r\n-- Determining NCCL version from the header file: /usr/local/include/nccl.h\r\n-- Found NCCL (include: /usr/local/include, library: /usr/local/lib/libnccl.so)\r\n-- Could NOT find CUB (missing: CUB_INCLUDE_DIR) \r\n-- Could NOT find Gloo (missing: Gloo_INCLUDE_DIR Gloo_LIBRARY) \r\n-- MPI include path: /usr/lib/openmpi/include/openmpi/opal/mca/event/libevent2021/libevent/usr/lib/openmpi/include/openmpi/opal/mca/event/libevent2021/libevent/include/usr/lib/openmpi/include/openmpi/usr/lib/openmpi/include\r\n-- MPI libraries: /usr/lib/openmpi/lib/libmpi_cxx.so/usr/lib/openmpi/lib/libmpi.so\r\n-- CUDA detected: 8.0\r\n-- Found libcuda: /usr/lib/x86_64-linux-gnu/libcuda.so\r\n-- Found libnvrtc: /usr/local/cuda-8.0/lib64/libnvrtc.so\r\n-- Determining NCCL version from the header file: /usr/local/include/nccl.h\r\n-- Found NCCL (include: /usr/local/include, library: /usr/local/lib/libnccl.so)\r\nCMake Warning at cmake/Dependencies.cmake:573 (message):\r\n  mobile opengl is only used in android or ios builds.\r\nCall Stack (most recent call first):\r\n  CMakeLists.txt:204 (include)\r\nCMake Warning at cmake/Dependencies.cmake:649 (message):\r\n  Metal is only used in ios builds.\r\nCall Stack (most recent call first):\r\n  CMakeLists.txt:204 (include)\r\n-- GCC 5.3.1: Adding gcc and gcc_s libs to link line\r\n-- Include NCCL operators\r\n-- Excluding ideep operators as we are not using ideep\r\n-- Including image processing operators\r\n-- Excluding video processing operators due to no opencv\r\n-- Excluding mkl operators as we are not using mkl\r\n-- Include Observer library\r\n-- Using lib/python2.7/dist-packages as python relative installation path\r\n-- Automatically generating missing __init__.py files.\r\nCMake Warning at CMakeLists.txt:351 (message):\r\n  Generated cmake files are only fully tested if one builds with system glog,\r\n  gflags, and protobuf.  Other settings may generate files that are not well\r\n  tested.\r\n-- \r\n-- ******** Summary ********\r\n-- General:\r\n--   CMake version         : 3.11.3\r\n--   CMake command         : /mnt/disk1/lin/cmake3.11/cmake-3.11.3-Linux-x86_64/bin/cmake\r\n--   Git version           : v0.1.11-8825-g01f5ba4\r\n--   System                : Linux\r\n--   C++ compiler          : /usr/bin/c++\r\n--   C++ compiler version  : 5.3.1\r\n--   BLAS                  : Eigen\r\n--   CXX flags             :  -Wno-deprecated -fvisibility-inlines-hidden -DONNX_NAMESPACE=onnx_c2 -O2 -fPIC -Wno-narrowing -Wno-invalid-partial-specialization -Wall -Wextra -Wno-missing-field-initializers -Wno-type-limits -Wno-unknown-warning-option -Wno-unknown-pragmas -Wno-sign-compare -Wno-unused-parameter -Wno-unused-variable -Wno-unused-function -Wno-unused-result\r\n--   Build type            : Release\r\n--   Compile definitions   : \r\n-- \r\n--   BUILD_CAFFE2          : ON\r\n--   BUILD_ATEN            : OFF\r\n--   BUILD_BINARY          : ON\r\n--   BUILD_CUSTOM_PROTOBUF : ON\r\n--     Link local protobuf : ON\r\n--   BUILD_DOCS            : OFF\r\n--   BUILD_PYTHON          : ON\r\n--     Python version      : 2.7.11+\r\n--     Python includes     : /usr/include/python2.7\r\n--   BUILD_SHARED_LIBS     : ON\r\n--   BUILD_TEST            : OFF\r\n--   USE_ASAN              : OFF\r\n--   USE_ATEN              : OFF\r\n--   USE_CUDA              : ON\r\n--     CUDA static link    : OFF\r\n--     USE_CUDNN           : ON\r\n--     CUDA version        : 8.0\r\n--     cuDNN version       : 6.0.21\r\n--     CUDA root directory : /usr/local/cuda-8.0\r\n--     CUDA library        : /usr/lib/x86_64-linux-gnu/libcuda.so\r\n--     cudart library      : /usr/local/cuda-8.0/lib64/libcudart_static.a;-pthread;dl;/usr/lib/x86_64-linux-gnu/librt.so\r\n--     cublas library      : /usr/local/cuda-8.0/lib64/libcublas.so;/usr/local/cuda-8.0/lib64/libcublas_device.a\r\n--     cufft library       : /usr/local/cuda-8.0/lib64/libcufft.so\r\n--     curand library      : /usr/local/cuda-8.0/lib64/libcurand.so\r\n--     cuDNN library       : /usr/local/cuda-8.0/lib64/libcudnn.so\r\n--     nvrtc               : /usr/local/cuda-8.0/lib64/libnvrtc.so\r\n--     CUDA include path   : /usr/local/cuda-8.0/include\r\n--     NVCC executable     : /usr/local/cuda-8.0/bin/nvcc\r\n--     CUDA host compiler  : /usr/bin/cc\r\n--     USE_TENSORRT        : OFF\r\n--   USE_ROCM              : OFF\r\n--   USE_EIGEN_FOR_BLAS    : ON\r\n--   USE_FFMPEG            : OFF\r\n--   USE_GFLAGS            : ON\r\n--   USE_GLOG              : ON\r\n--   USE_GLOO              : ON\r\n--     USE_GLOO_IBVERBS    : OFF\r\n--   USE_LEVELDB           : ON\r\n--     LevelDB version     : 1.18\r\n--     Snappy version      : 1.1.3\r\n--   USE_LITE_PROTO        : OFF\r\n--   USE_LMDB              : ON\r\n--     LMDB version        : 0.9.17\r\n--   USE_METAL             : OFF\r\n--   USE_MKL               : \r\n--   USE_MOBILE_OPENGL     : OFF\r\n--   USE_MPI               : ON\r\n--   USE_NCCL              : ON\r\n--     USE_SYSTEM_NCCL     : OFF\r\n--   USE_NERVANA_GPU       : OFF\r\n--   USE_NNPACK            : ON\r\n--   USE_OBSERVERS         : ON\r\n--   USE_OPENCL            : OFF\r\n--   USE_OPENCV            : ON\r\n--     OpenCV version      : 3.3.0\r\n--   USE_OPENMP            : OFF\r\n--   USE_PROF              : OFF\r\n--   USE_REDIS             : OFF\r\n--   USE_ROCKSDB           : OFF\r\n--   USE_ZMQ               : OFF\r\n-- Configuring done\r\n-- Generating done\r\n\r\nand I think I success in make install but after that, when I trying to\r\n`from caffe2.python import core`\r\nI got this error:\r\n> >>> from caffe2.python import core\r\nTraceback (most recent call last):\r\n  File \"<stdin>\", line 1, in <module>\r\n  File \"caffe2/python/core.py\", line 14, in <module>\r\n    from caffe2.proto import caffe2_pb2\r\n  File \"caffe2/proto/caffe2_pb2.py\", line 168, in <module>\r\n    options=None, file=DESCRIPTOR),\r\nTypeError: __new__() got an unexpected keyword argument 'file'\r\n\r\n- Caffe2:\r\n- OS: Ubuntu 16.04\r\n- Python version: 2.7\r\n- CUDA/cuDNN version: 8.0, 6.0\r\n- GPU models and configuration: 6.1\r\n- CMake version: 3.11\r\n"}