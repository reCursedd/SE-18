{"url": "https://api.github.com/repos/pytorch/pytorch/issues/comments/352109105", "html_url": "https://github.com/pytorch/pytorch/issues/4187#issuecomment-352109105", "issue_url": "https://api.github.com/repos/pytorch/pytorch/issues/4187", "id": 352109105, "node_id": "MDEyOklzc3VlQ29tbWVudDM1MjEwOTEwNQ==", "user": {"login": "colesbury", "id": 655866, "node_id": "MDQ6VXNlcjY1NTg2Ng==", "avatar_url": "https://avatars1.githubusercontent.com/u/655866?v=4", "gravatar_id": "", "url": "https://api.github.com/users/colesbury", "html_url": "https://github.com/colesbury", "followers_url": "https://api.github.com/users/colesbury/followers", "following_url": "https://api.github.com/users/colesbury/following{/other_user}", "gists_url": "https://api.github.com/users/colesbury/gists{/gist_id}", "starred_url": "https://api.github.com/users/colesbury/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/colesbury/subscriptions", "organizations_url": "https://api.github.com/users/colesbury/orgs", "repos_url": "https://api.github.com/users/colesbury/repos", "events_url": "https://api.github.com/users/colesbury/events{/privacy}", "received_events_url": "https://api.github.com/users/colesbury/received_events", "type": "User", "site_admin": false}, "created_at": "2017-12-15T20:52:57Z", "updated_at": "2017-12-15T20:52:57Z", "author_association": "MEMBER", "body_html": "<p>I don't think codegen is needed. There are only a few entry spots to ATen:</p>\n<ol>\n<li>Variable/Tensor methods. These already have correct stack traces</li>\n<li>Backwards functions. These can be captured with a <code>try/catch</code> around here:</li>\n</ol>\n<p><div class=\"border rounded-1 my-2\">\n  <div class=\"f6 px-3 py-2 lh-condensed border-bottom bg-gray-light\">\n    <p class=\"mb-0 text-bold\">\n      <a href=\"https://github.com/pytorch/pytorch/blob/6d72c829855607953ac001a21e34692f278f6439/torch/csrc/autograd/engine.cpp#L208\">pytorch/torch/csrc/autograd/engine.cpp</a>\n    </p>\n    <p class=\"mb-0 text-gray-light\">\n         Line 208\n      in\n      <a data-pjax=\"true\" class=\"commit-tease-sha\" href=\"/pytorch/pytorch/commit/6d72c829855607953ac001a21e34692f278f6439\">6d72c82</a>\n    </p>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper blob-wrapper-embedded data\">\n    <table class=\"highlight tab-size mb-0 js-file-line-container\" data-tab-size=\"8\">\n\n        <tbody><tr class=\"border-0\">\n          <td id=\"L208\" class=\"blob-num border-0 px-3 py-0 bg-white js-line-number\" data-line-number=\"208\"></td>\n          <td id=\"LC208\" class=\"blob-code border-0 px-3 py-0 bg-white blob-code-inner js-file-line\"> <span class=\"pl-k\">auto</span> outputs = <span class=\"pl-c1\">fn</span>(inputs); </td>\n        </tr>\n    </tbody></table>\n  </div>\n</div>\n</p>\n<p>We can get the name of the backward function via <code>fn-&gt;name()</code>.</p>", "body_text": "I don't think codegen is needed. There are only a few entry spots to ATen:\n\nVariable/Tensor methods. These already have correct stack traces\nBackwards functions. These can be captured with a try/catch around here:\n\n\n  \n    \n      pytorch/torch/csrc/autograd/engine.cpp\n    \n    \n         Line 208\n      in\n      6d72c82\n    \n    \n    \n    \n\n        \n          \n           auto outputs = fn(inputs); \n        \n    \n  \n\n\nWe can get the name of the backward function via fn->name().", "body": "I don't think codegen is needed. There are only a few entry spots to ATen:\r\n\r\n1) Variable/Tensor methods. These already have correct stack traces\r\n2) Backwards functions. These can be captured with a `try/catch` around here:\r\n\r\nhttps://github.com/pytorch/pytorch/blob/6d72c829855607953ac001a21e34692f278f6439/torch/csrc/autograd/engine.cpp#L208\r\n\r\nWe can get the name of the backward function via `fn->name()`."}