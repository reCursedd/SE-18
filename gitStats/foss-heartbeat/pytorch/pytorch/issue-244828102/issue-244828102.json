{"url": "https://api.github.com/repos/pytorch/pytorch/issues/2186", "repository_url": "https://api.github.com/repos/pytorch/pytorch", "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/2186/labels{/name}", "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/2186/comments", "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/2186/events", "html_url": "https://github.com/pytorch/pytorch/issues/2186", "id": 244828102, "node_id": "MDU6SXNzdWUyNDQ4MjgxMDI=", "number": 2186, "title": "How to incorporate OPENCV into pytorch docker image?", "user": {"login": "shwoo93", "id": 13035722, "node_id": "MDQ6VXNlcjEzMDM1NzIy", "avatar_url": "https://avatars2.githubusercontent.com/u/13035722?v=4", "gravatar_id": "", "url": "https://api.github.com/users/shwoo93", "html_url": "https://github.com/shwoo93", "followers_url": "https://api.github.com/users/shwoo93/followers", "following_url": "https://api.github.com/users/shwoo93/following{/other_user}", "gists_url": "https://api.github.com/users/shwoo93/gists{/gist_id}", "starred_url": "https://api.github.com/users/shwoo93/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/shwoo93/subscriptions", "organizations_url": "https://api.github.com/users/shwoo93/orgs", "repos_url": "https://api.github.com/users/shwoo93/repos", "events_url": "https://api.github.com/users/shwoo93/events{/privacy}", "received_events_url": "https://api.github.com/users/shwoo93/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-07-22T06:30:27Z", "updated_at": "2017-07-25T01:01:37Z", "closed_at": "2017-07-25T01:01:37Z", "author_association": "NONE", "body_html": "<p>Hello</p>\n<p>In order to be compatible with my local ubuntu version, I changed the version of ubuntu 16.04 to 14.04 in dockerfile which is provided and build the image from it. I just did as below.</p>\n<p>FROM nvidia/cuda:8.0-cudnn6-devel-<strong>ubuntu14.04</strong></p>\n<p>RUN echo \"deb <a href=\"http://developer.download.nvidia.com/compute/machine-learning/repos/ubuntu1404/x86_64\" rel=\"nofollow\">http://developer.download.nvidia.com/compute/machine-learning/repos/ubuntu1404/x86_64</a> /\" &gt; /etc/apt/sources.list.d/nvidia-ml.list</p>\n<p>I made the container and  checked that torch and torchvision are well installed.<br>\n(Explicitly sourced the conda environment as well. <strong>source activate pytorch-py35</strong>)</p>\n<p>After then, since I need opencv for my own code I tried to install opencv3 by the command below.</p>\n<p><strong>conda install -c menpo opencv3</strong></p>\n<p>However above command requires to downgrade the numpy and scipy packages.</p>\n<p>The following packages will be DOWNGRADED:</p>\n<pre><code>numpy:      1.13.1-py35_0            --&gt; 1.11.3-py35_0\nscipy:      0.19.1-np113py35_0       --&gt; 0.19.0-np111py35_0**\n</code></pre>\n<p>If I just execute the above command for opencv, it results in error for importing torch then.<br>\nGiving,</p>\n<p><strong>RuntimeError: module compiled against API version 0xb but this version of numpy is 0xa<br>\nTraceback (most recent call last):<br>\nFile \"\", line 1, in <br>\nFile \"/opt/conda/envs/pytorch-py35/lib/python3.5/site-packages/torch/<strong>init</strong>.py\", line 53, in <br>\nfrom torch._C import *<br>\nImportError: numpy.core.multiarray failed to import</strong></p>\n<p><strong>So I just upgraded using pip</strong><br>\npip install numpy --upgrade<br>\npip install scipy --upgrade</p>\n<p><strong>Then it gives below error</strong>.<br>\nImportError: libgtk-x11-2.0.so.0: cannot open shared object file: No such file or directory</p>\n<p><strong>So I installed libgtk2.0 with the below command</strong><br>\nsudo apt-get install libgtk2.0-0:i386</p>\n<p>And finally it seems to work with opencv</p>\n<p><strong>1 . I am wondering is this right way to incorporate opencv into pytorch docker image.<br>\nIs there any nice way to figure out this problem</strong>?</p>\n<p><strong>2. Additionally, I am curious about whether the docker file provided gives current master version of pytorch.</strong></p>\n<p>Thanks in advance.</p>", "body_text": "Hello\nIn order to be compatible with my local ubuntu version, I changed the version of ubuntu 16.04 to 14.04 in dockerfile which is provided and build the image from it. I just did as below.\nFROM nvidia/cuda:8.0-cudnn6-devel-ubuntu14.04\nRUN echo \"deb http://developer.download.nvidia.com/compute/machine-learning/repos/ubuntu1404/x86_64 /\" > /etc/apt/sources.list.d/nvidia-ml.list\nI made the container and  checked that torch and torchvision are well installed.\n(Explicitly sourced the conda environment as well. source activate pytorch-py35)\nAfter then, since I need opencv for my own code I tried to install opencv3 by the command below.\nconda install -c menpo opencv3\nHowever above command requires to downgrade the numpy and scipy packages.\nThe following packages will be DOWNGRADED:\nnumpy:      1.13.1-py35_0            --> 1.11.3-py35_0\nscipy:      0.19.1-np113py35_0       --> 0.19.0-np111py35_0**\n\nIf I just execute the above command for opencv, it results in error for importing torch then.\nGiving,\nRuntimeError: module compiled against API version 0xb but this version of numpy is 0xa\nTraceback (most recent call last):\nFile \"\", line 1, in \nFile \"/opt/conda/envs/pytorch-py35/lib/python3.5/site-packages/torch/init.py\", line 53, in \nfrom torch._C import *\nImportError: numpy.core.multiarray failed to import\nSo I just upgraded using pip\npip install numpy --upgrade\npip install scipy --upgrade\nThen it gives below error.\nImportError: libgtk-x11-2.0.so.0: cannot open shared object file: No such file or directory\nSo I installed libgtk2.0 with the below command\nsudo apt-get install libgtk2.0-0:i386\nAnd finally it seems to work with opencv\n1 . I am wondering is this right way to incorporate opencv into pytorch docker image.\nIs there any nice way to figure out this problem?\n2. Additionally, I am curious about whether the docker file provided gives current master version of pytorch.\nThanks in advance.", "body": "Hello\r\n\r\nIn order to be compatible with my local ubuntu version, I changed the version of ubuntu 16.04 to 14.04 in dockerfile which is provided and build the image from it. I just did as below.\r\n\r\nFROM nvidia/cuda:8.0-cudnn6-devel-**ubuntu14.04** \r\n\r\nRUN echo \"deb http://developer.download.nvidia.com/compute/machine-learning/repos/ubuntu1404/x86_64 /\" > /etc/apt/sources.list.d/nvidia-ml.list\r\n\r\nI made the container and  checked that torch and torchvision are well installed. \r\n(Explicitly sourced the conda environment as well. **source activate pytorch-py35**)\r\n\r\nAfter then, since I need opencv for my own code I tried to install opencv3 by the command below.\r\n\r\n**conda install -c menpo opencv3** \r\n\r\nHowever above command requires to downgrade the numpy and scipy packages. \r\n\r\nThe following packages will be DOWNGRADED:\r\n\r\n    numpy:      1.13.1-py35_0            --> 1.11.3-py35_0\r\n    scipy:      0.19.1-np113py35_0       --> 0.19.0-np111py35_0**\r\n\r\n\r\nIf I just execute the above command for opencv, it results in error for importing torch then. \r\nGiving,\r\n\r\n**RuntimeError: module compiled against API version 0xb but this version of numpy is 0xa\r\nTraceback (most recent call last):\r\n  File \"<stdin>\", line 1, in <module>\r\n  File \"/opt/conda/envs/pytorch-py35/lib/python3.5/site-packages/torch/__init__.py\", line 53, in <module>\r\n    from torch._C import *\r\nImportError: numpy.core.multiarray failed to import**\r\n\r\n**So I just upgraded using pip**\r\npip install numpy --upgrade\r\npip install scipy --upgrade\r\n\r\n**Then it gives below error**.\r\nImportError: libgtk-x11-2.0.so.0: cannot open shared object file: No such file or directory\r\n\r\n**So I installed libgtk2.0 with the below command**\r\nsudo apt-get install libgtk2.0-0:i386\r\n\r\nAnd finally it seems to work with opencv\r\n\r\n**1 . I am wondering is this right way to incorporate opencv into pytorch docker image.\r\nIs there any nice way to figure out this problem**?\r\n\r\n**2. Additionally, I am curious about whether the docker file provided gives current master version of pytorch.** \r\n\r\nThanks in advance.\r\n"}