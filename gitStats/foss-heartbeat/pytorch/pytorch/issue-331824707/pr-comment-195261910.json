{"url": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/195261910", "pull_request_review_id": 128595038, "id": 195261910, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5NTI2MTkxMA==", "diff_hunk": "@@ -0,0 +1,61 @@\n+import math\n+\n+from torch.distributions import constraints\n+from torch.distributions.transforms import AbsTransform\n+from torch.distributions.cauchy import Cauchy\n+from torch.distributions.transformed_distribution import TransformedDistribution\n+\n+\n+class HalfCauchy(TransformedDistribution):\n+    r\"\"\"\n+    Creates a half-normal distribution parameterized by `scale` where::\n+\n+        X ~ Cauchy(0, scale)\n+        Y = |X| ~ HalfCauchy(scale)\n+\n+    Example::\n+\n+        >>> m = HalfCauchy(torch.tensor([1.0]))\n+        >>> m.sample()  # half-cauchy distributed with scale=1\n+        tensor([ 2.3214])\n+\n+    Args:\n+        scale (float or Tensor): scale of the full Cauchy distribution\n+    \"\"\"\n+    arg_constraints = {'scale': constraints.positive}\n+    support = constraints.positive\n+    has_rsample = True\n+\n+    def __init__(self, scale, validate_args=None):\n+        super(HalfCauchy, self).__init__(Cauchy(0, scale), AbsTransform(),\n+                                         validate_args=validate_args)\n+\n+    @property\n+    def scale(self):\n+        return self.base_dist.scale\n+\n+    @property\n+    def mean(self):\n+        return self.base_dist.mean\n+\n+    @property\n+    def variance(self):\n+        return self.base_dist.variance\n+\n+    def log_prob(self, value):\n+        if self._validate_args:\n+            self._validate_sample(value)", "path": "torch/distributions/half_cauchy.py", "position": null, "original_position": 47, "commit_id": "3215714efcb3d5c1738eadda7e4ca8e3e8cb403c", "original_commit_id": "aa2927d8118cf23e084e552f796529231a0a7959", "user": {"login": "fehiepsi", "id": 4736342, "node_id": "MDQ6VXNlcjQ3MzYzNDI=", "avatar_url": "https://avatars1.githubusercontent.com/u/4736342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fehiepsi", "html_url": "https://github.com/fehiepsi", "followers_url": "https://api.github.com/users/fehiepsi/followers", "following_url": "https://api.github.com/users/fehiepsi/following{/other_user}", "gists_url": "https://api.github.com/users/fehiepsi/gists{/gist_id}", "starred_url": "https://api.github.com/users/fehiepsi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fehiepsi/subscriptions", "organizations_url": "https://api.github.com/users/fehiepsi/orgs", "repos_url": "https://api.github.com/users/fehiepsi/repos", "events_url": "https://api.github.com/users/fehiepsi/events{/privacy}", "received_events_url": "https://api.github.com/users/fehiepsi/received_events", "type": "User", "site_admin": false}, "body": "Yeah, I thought that we need to check the support but it is unnecessary because base_dist also checks that.", "created_at": "2018-06-13T23:03:08Z", "updated_at": "2018-11-23T15:45:29Z", "html_url": "https://github.com/pytorch/pytorch/pull/8411#discussion_r195261910", "pull_request_url": "https://api.github.com/repos/pytorch/pytorch/pulls/8411", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/195261910"}, "html": {"href": "https://github.com/pytorch/pytorch/pull/8411#discussion_r195261910"}, "pull_request": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/8411"}}, "body_html": "<p>Yeah, I thought that we need to check the support but it is unnecessary because base_dist also checks that.</p>", "body_text": "Yeah, I thought that we need to check the support but it is unnecessary because base_dist also checks that.", "in_reply_to_id": 195201950}