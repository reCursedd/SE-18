{"url": "https://api.github.com/repos/pytorch/pytorch/issues/16", "repository_url": "https://api.github.com/repos/pytorch/pytorch", "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/16/labels{/name}", "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/16/comments", "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/16/events", "html_url": "https://github.com/pytorch/pytorch/issues/16", "id": 175834985, "node_id": "MDU6SXNzdWUxNzU4MzQ5ODU=", "number": 16, "title": "Error on legacy.nn serialization", "user": {"login": "szagoruyko", "id": 4953728, "node_id": "MDQ6VXNlcjQ5NTM3Mjg=", "avatar_url": "https://avatars3.githubusercontent.com/u/4953728?v=4", "gravatar_id": "", "url": "https://api.github.com/users/szagoruyko", "html_url": "https://github.com/szagoruyko", "followers_url": "https://api.github.com/users/szagoruyko/followers", "following_url": "https://api.github.com/users/szagoruyko/following{/other_user}", "gists_url": "https://api.github.com/users/szagoruyko/gists{/gist_id}", "starred_url": "https://api.github.com/users/szagoruyko/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/szagoruyko/subscriptions", "organizations_url": "https://api.github.com/users/szagoruyko/orgs", "repos_url": "https://api.github.com/users/szagoruyko/repos", "events_url": "https://api.github.com/users/szagoruyko/events{/privacy}", "received_events_url": "https://api.github.com/users/szagoruyko/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2016-09-08T18:59:14Z", "updated_at": "2016-09-16T04:17:20Z", "closed_at": "2016-09-16T04:17:20Z", "author_association": "CONTRIBUTOR", "body_html": "<p>repro:</p>\n<div class=\"highlight highlight-source-python\"><pre><span class=\"pl-k\">import</span> torch                                                                                                                            \n<span class=\"pl-k\">import</span> torch.legacy.nn <span class=\"pl-k\">as</span> nn\n\nnet <span class=\"pl-k\">=</span> nn.Sequential()\nnet.add(nn.SpatialConvolution(<span class=\"pl-c1\">3</span>,<span class=\"pl-c1\">3</span>,<span class=\"pl-c1\">3</span>,<span class=\"pl-c1\">3</span>,<span class=\"pl-c1\">1</span>,<span class=\"pl-c1\">1</span>))\ntorch.save(net, <span class=\"pl-c1\">open</span>(<span class=\"pl-s\"><span class=\"pl-pds\">'</span>model.pt7<span class=\"pl-pds\">'</span></span>, <span class=\"pl-s\"><span class=\"pl-pds\">'</span>wb<span class=\"pl-pds\">'</span></span>))</pre></div>", "body_text": "repro:\nimport torch                                                                                                                            \nimport torch.legacy.nn as nn\n\nnet = nn.Sequential()\nnet.add(nn.SpatialConvolution(3,3,3,3,1,1))\ntorch.save(net, open('model.pt7', 'wb'))", "body": "repro:\n\n``` python\nimport torch                                                                                                                            \nimport torch.legacy.nn as nn\n\nnet = nn.Sequential()\nnet.add(nn.SpatialConvolution(3,3,3,3,1,1))\ntorch.save(net, open('model.pt7', 'wb'))\n```\n"}