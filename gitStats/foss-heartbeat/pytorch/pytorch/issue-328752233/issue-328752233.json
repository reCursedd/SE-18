{"url": "https://api.github.com/repos/pytorch/pytorch/issues/8072", "repository_url": "https://api.github.com/repos/pytorch/pytorch", "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/8072/labels{/name}", "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/8072/comments", "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/8072/events", "html_url": "https://github.com/pytorch/pytorch/issues/8072", "id": 328752233, "node_id": "MDU6SXNzdWUzMjg3NTIyMzM=", "number": 8072, "title": "[torchvision] [Feature Request] Functional processing for points", "user": {"login": "Naman-ntc", "id": 23135406, "node_id": "MDQ6VXNlcjIzMTM1NDA2", "avatar_url": "https://avatars2.githubusercontent.com/u/23135406?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Naman-ntc", "html_url": "https://github.com/Naman-ntc", "followers_url": "https://api.github.com/users/Naman-ntc/followers", "following_url": "https://api.github.com/users/Naman-ntc/following{/other_user}", "gists_url": "https://api.github.com/users/Naman-ntc/gists{/gist_id}", "starred_url": "https://api.github.com/users/Naman-ntc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Naman-ntc/subscriptions", "organizations_url": "https://api.github.com/users/Naman-ntc/orgs", "repos_url": "https://api.github.com/users/Naman-ntc/repos", "events_url": "https://api.github.com/users/Naman-ntc/events{/privacy}", "received_events_url": "https://api.github.com/users/Naman-ntc/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-06-02T15:19:37Z", "updated_at": "2018-06-03T04:54:39Z", "closed_at": "2018-06-03T04:54:32Z", "author_association": "CONTRIBUTOR", "body_html": "<p>Suppose I have to detect keypoints in image (bounding box pixel coordinates, or human joints coordinates), on applying transforms like rotation, padding, obviously the values of those coordinates will change. We can by basic geometry do the calculation but it would be awesome if it could be integrated into the torchvision functional part.<br>\nSo augmenting data for say human pose estimation would be easier and feels intuitive to me. For each functionsl tranform, a transform for target pixels or something like that!</p>", "body_text": "Suppose I have to detect keypoints in image (bounding box pixel coordinates, or human joints coordinates), on applying transforms like rotation, padding, obviously the values of those coordinates will change. We can by basic geometry do the calculation but it would be awesome if it could be integrated into the torchvision functional part.\nSo augmenting data for say human pose estimation would be easier and feels intuitive to me. For each functionsl tranform, a transform for target pixels or something like that!", "body": "Suppose I have to detect keypoints in image (bounding box pixel coordinates, or human joints coordinates), on applying transforms like rotation, padding, obviously the values of those coordinates will change. We can by basic geometry do the calculation but it would be awesome if it could be integrated into the torchvision functional part. \r\nSo augmenting data for say human pose estimation would be easier and feels intuitive to me. For each functionsl tranform, a transform for target pixels or something like that!"}