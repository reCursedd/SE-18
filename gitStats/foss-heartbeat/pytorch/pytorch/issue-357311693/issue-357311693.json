{"url": "https://api.github.com/repos/pytorch/pytorch/issues/11275", "repository_url": "https://api.github.com/repos/pytorch/pytorch", "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/11275/labels{/name}", "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/11275/comments", "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/11275/events", "html_url": "https://github.com/pytorch/pytorch/pull/11275", "id": 357311693, "node_id": "MDExOlB1bGxSZXF1ZXN0MjEzMzU4MTYw", "number": 11275, "title": "Update send/recv tests to reflect intended use", "user": {"login": "pietern", "id": 9845, "node_id": "MDQ6VXNlcjk4NDU=", "avatar_url": "https://avatars3.githubusercontent.com/u/9845?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pietern", "html_url": "https://github.com/pietern", "followers_url": "https://api.github.com/users/pietern/followers", "following_url": "https://api.github.com/users/pietern/following{/other_user}", "gists_url": "https://api.github.com/users/pietern/gists{/gist_id}", "starred_url": "https://api.github.com/users/pietern/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pietern/subscriptions", "organizations_url": "https://api.github.com/users/pietern/orgs", "repos_url": "https://api.github.com/users/pietern/repos", "events_url": "https://api.github.com/users/pietern/events{/privacy}", "received_events_url": "https://api.github.com/users/pietern/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-09-05T16:37:44Z", "updated_at": "2018-09-05T21:41:23Z", "closed_at": "2018-09-05T21:41:23Z", "author_association": "CONTRIBUTOR", "pull_request": {"url": "https://api.github.com/repos/pytorch/pytorch/pulls/11275", "html_url": "https://github.com/pytorch/pytorch/pull/11275", "diff_url": "https://github.com/pytorch/pytorch/pull/11275.diff", "patch_url": "https://github.com/pytorch/pytorch/pull/11275.patch"}, "body_html": "<p>The existing tests had every rank run send to every other rank and only<br>\nthen switch to recv mode. This only works if the send operations are<br>\nnon-blocking and the passed tensors are immediately copied to some kind<br>\nof send buffer. Instead, every send must be matched with a recv on the<br>\nother side, because from the API perspective they may block.</p>\n<p>E.g. imagine a 1GB tensor being sent to every other rank. It can only go<br>\nthrough if there is a recv on the other side, or it will deadlock.</p>\n<p>This change reflects this in the send/recv unit tests.</p>", "body_text": "The existing tests had every rank run send to every other rank and only\nthen switch to recv mode. This only works if the send operations are\nnon-blocking and the passed tensors are immediately copied to some kind\nof send buffer. Instead, every send must be matched with a recv on the\nother side, because from the API perspective they may block.\nE.g. imagine a 1GB tensor being sent to every other rank. It can only go\nthrough if there is a recv on the other side, or it will deadlock.\nThis change reflects this in the send/recv unit tests.", "body": "The existing tests had every rank run send to every other rank and only\r\nthen switch to recv mode. This only works if the send operations are\r\nnon-blocking and the passed tensors are immediately copied to some kind\r\nof send buffer. Instead, every send must be matched with a recv on the\r\nother side, because from the API perspective they may block.\r\n\r\nE.g. imagine a 1GB tensor being sent to every other rank. It can only go\r\nthrough if there is a recv on the other side, or it will deadlock.\r\n\r\nThis change reflects this in the send/recv unit tests.\r\n\r\n"}