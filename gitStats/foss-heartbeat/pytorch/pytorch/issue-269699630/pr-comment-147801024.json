{"url": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/147801024", "pull_request_review_id": 72948141, "id": 147801024, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE0NzgwMTAyNA==", "diff_hunk": "@@ -659,12 +673,20 @@ friend struct Node;\n   }\n };\n \n-inline Node::Node(Graph * graph_, NodeKind kind_) :\n+inline Node::Node(Graph * graph_, NodeKind kind_, std::string pretty_name_) :\n   kind_(kind_),\n   graph_(graph_),\n+  pretty_name_(pretty_name_),\n   unique_(graph_->next_unique_++),\n   stage_(graph_->new_node_stage_),\n   type_(getInitialType(kind_)) {\n+  if (pretty_name_ != \"\") {\n+    if (graph_->unique_pretty_names.find(pretty_name_) != graph_->unique_pretty_names.end()) {\n+      // TODO: how do I raise an error?", "path": "torch/csrc/jit/ir.h", "position": null, "original_position": 101, "commit_id": "1904c8a9c65f050513c1e1037861644b53fe6f34", "original_commit_id": "595289be0fca2e9c7f4daff3454a5fc604f57709", "user": {"login": "ezyang", "id": 13564, "node_id": "MDQ6VXNlcjEzNTY0", "avatar_url": "https://avatars0.githubusercontent.com/u/13564?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ezyang", "html_url": "https://github.com/ezyang", "followers_url": "https://api.github.com/users/ezyang/followers", "following_url": "https://api.github.com/users/ezyang/following{/other_user}", "gists_url": "https://api.github.com/users/ezyang/gists{/gist_id}", "starred_url": "https://api.github.com/users/ezyang/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ezyang/subscriptions", "organizations_url": "https://api.github.com/users/ezyang/orgs", "repos_url": "https://api.github.com/users/ezyang/repos", "events_url": "https://api.github.com/users/ezyang/events{/privacy}", "received_events_url": "https://api.github.com/users/ezyang/received_events", "type": "User", "site_admin": false}, "body": "You can use JIT_ASSERT(0) (or, more preferably, `JIT_ASSERT(graph_->unique_pretty_names.find(pretty_name_) != graph_->unique_pretty_names.end())`) to signify that there has been a fatal invariant broken, indicating developer error. Although, I'm not sure we should apply that here, because pretty names come from Python world, so they can trigger this condition themselves. In that case, raising a `std::runtime_error` is more appropriate.", "created_at": "2017-10-30T18:54:25Z", "updated_at": "2018-11-23T15:35:47Z", "html_url": "https://github.com/pytorch/pytorch/pull/3371#discussion_r147801024", "pull_request_url": "https://api.github.com/repos/pytorch/pytorch/pulls/3371", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/147801024"}, "html": {"href": "https://github.com/pytorch/pytorch/pull/3371#discussion_r147801024"}, "pull_request": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/3371"}}, "body_html": "<p>You can use JIT_ASSERT(0) (or, more preferably, <code>JIT_ASSERT(graph_-&gt;unique_pretty_names.find(pretty_name_) != graph_-&gt;unique_pretty_names.end())</code>) to signify that there has been a fatal invariant broken, indicating developer error. Although, I'm not sure we should apply that here, because pretty names come from Python world, so they can trigger this condition themselves. In that case, raising a <code>std::runtime_error</code> is more appropriate.</p>", "body_text": "You can use JIT_ASSERT(0) (or, more preferably, JIT_ASSERT(graph_->unique_pretty_names.find(pretty_name_) != graph_->unique_pretty_names.end())) to signify that there has been a fatal invariant broken, indicating developer error. Although, I'm not sure we should apply that here, because pretty names come from Python world, so they can trigger this condition themselves. In that case, raising a std::runtime_error is more appropriate."}