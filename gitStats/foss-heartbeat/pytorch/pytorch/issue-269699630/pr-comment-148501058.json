{"url": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/148501058", "pull_request_review_id": 73750794, "id": 148501058, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE0ODUwMTA1OA==", "diff_hunk": "@@ -531,4 +531,29 @@ void PythonOp::cloneFrom(Node * other_) {\n   }\n }\n \n+void renameInputsAndOutputs(const std::shared_ptr<Graph>& graph,\n+                            const std::vector<std::string>& input_names,\n+                            const std::vector<std::string>& output_names) {\n+  if (input_names.size() == 0 && output_names.size() == 0)\n+    return;\n+  if (graph->inputs().size() != input_names.size())\n+    throw std::runtime_error(\"number of input names provided (\"\n+                             + std::to_string(input_names.size())\n+                             + \") does not match number of inputs (\"\n+                             + std::to_string(graph->inputs().size())\n+                             + \")\");\n+  if (graph->outputs().size() != output_names.size())\n+    throw std::runtime_error(\"number of output names provided (\"\n+                             + std::to_string(output_names.size())\n+                             + \") does not match number of outputs (\"\n+                             + std::to_string(graph->outputs().size())\n+                             + \")\");\n+  for (size_t i = 0; i < input_names.size(); i++) {\n+    graph->inputs()[i]->setOverridingUniqueName(input_names[i]);\n+  }\n+  for (size_t i = 0; i < output_names.size(); i++) {\n+    graph->outputs()[i]->setOverridingUniqueName(output_names[i]);\n+  }\n+}", "path": "torch/csrc/jit/ir.cpp", "position": null, "original_position": 27, "commit_id": "1904c8a9c65f050513c1e1037861644b53fe6f34", "original_commit_id": "655b933b8921b84195eb395ed0fc896f7ccf64a6", "user": {"login": "apaszke", "id": 4583066, "node_id": "MDQ6VXNlcjQ1ODMwNjY=", "avatar_url": "https://avatars3.githubusercontent.com/u/4583066?v=4", "gravatar_id": "", "url": "https://api.github.com/users/apaszke", "html_url": "https://github.com/apaszke", "followers_url": "https://api.github.com/users/apaszke/followers", "following_url": "https://api.github.com/users/apaszke/following{/other_user}", "gists_url": "https://api.github.com/users/apaszke/gists{/gist_id}", "starred_url": "https://api.github.com/users/apaszke/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/apaszke/subscriptions", "organizations_url": "https://api.github.com/users/apaszke/orgs", "repos_url": "https://api.github.com/users/apaszke/repos", "events_url": "https://api.github.com/users/apaszke/events{/privacy}", "received_events_url": "https://api.github.com/users/apaszke/received_events", "type": "User", "site_admin": false}, "body": "Since all of this functionality is exposed in Python, wouldn't it be simpler to remove all those C++ helpers for renaming and write this code in Python as a helper to `_export`?", "created_at": "2017-11-02T11:09:07Z", "updated_at": "2018-11-23T15:35:54Z", "html_url": "https://github.com/pytorch/pytorch/pull/3371#discussion_r148501058", "pull_request_url": "https://api.github.com/repos/pytorch/pytorch/pulls/3371", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/148501058"}, "html": {"href": "https://github.com/pytorch/pytorch/pull/3371#discussion_r148501058"}, "pull_request": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/3371"}}, "body_html": "<p>Since all of this functionality is exposed in Python, wouldn't it be simpler to remove all those C++ helpers for renaming and write this code in Python as a helper to <code>_export</code>?</p>", "body_text": "Since all of this functionality is exposed in Python, wouldn't it be simpler to remove all those C++ helpers for renaming and write this code in Python as a helper to _export?"}