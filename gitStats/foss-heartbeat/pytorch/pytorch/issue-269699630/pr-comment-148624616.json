{"url": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/148624616", "pull_request_review_id": 73897798, "id": 148624616, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE0ODYyNDYxNg==", "diff_hunk": "@@ -531,4 +531,29 @@ void PythonOp::cloneFrom(Node * other_) {\n   }\n }\n \n+void renameInputsAndOutputs(const std::shared_ptr<Graph>& graph,\n+                            const std::vector<std::string>& input_names,\n+                            const std::vector<std::string>& output_names) {\n+  if (input_names.size() == 0 && output_names.size() == 0)\n+    return;\n+  if (graph->inputs().size() != input_names.size())\n+    throw std::runtime_error(\"number of input names provided (\"\n+                             + std::to_string(input_names.size())\n+                             + \") does not match number of inputs (\"\n+                             + std::to_string(graph->inputs().size())\n+                             + \")\");\n+  if (graph->outputs().size() != output_names.size())\n+    throw std::runtime_error(\"number of output names provided (\"\n+                             + std::to_string(output_names.size())\n+                             + \") does not match number of outputs (\"\n+                             + std::to_string(graph->outputs().size())\n+                             + \")\");\n+  for (size_t i = 0; i < input_names.size(); i++) {\n+    graph->inputs()[i]->setOverridingUniqueName(input_names[i]);\n+  }\n+  for (size_t i = 0; i < output_names.size(); i++) {\n+    graph->outputs()[i]->setOverridingUniqueName(output_names[i]);\n+  }\n+}", "path": "torch/csrc/jit/ir.cpp", "position": null, "original_position": 27, "commit_id": "1904c8a9c65f050513c1e1037861644b53fe6f34", "original_commit_id": "655b933b8921b84195eb395ed0fc896f7ccf64a6", "user": {"login": "anderspapitto", "id": 1388690, "node_id": "MDQ6VXNlcjEzODg2OTA=", "avatar_url": "https://avatars3.githubusercontent.com/u/1388690?v=4", "gravatar_id": "", "url": "https://api.github.com/users/anderspapitto", "html_url": "https://github.com/anderspapitto", "followers_url": "https://api.github.com/users/anderspapitto/followers", "following_url": "https://api.github.com/users/anderspapitto/following{/other_user}", "gists_url": "https://api.github.com/users/anderspapitto/gists{/gist_id}", "starred_url": "https://api.github.com/users/anderspapitto/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/anderspapitto/subscriptions", "organizations_url": "https://api.github.com/users/anderspapitto/orgs", "repos_url": "https://api.github.com/users/anderspapitto/repos", "events_url": "https://api.github.com/users/anderspapitto/events{/privacy}", "received_events_url": "https://api.github.com/users/anderspapitto/received_events", "type": "User", "site_admin": false}, "body": "modifying `overriding_unique_name_` isn't exposed in Python except through this mechanism (though of course I can expose it directly).\r\n\r\nI wasn't aware that direct access to graph->inputs() and graph->outputs() was exposed either. If I find where that functionality is I can try moving this to python code.", "created_at": "2017-11-02T18:37:37Z", "updated_at": "2018-11-23T15:35:55Z", "html_url": "https://github.com/pytorch/pytorch/pull/3371#discussion_r148624616", "pull_request_url": "https://api.github.com/repos/pytorch/pytorch/pulls/3371", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/148624616"}, "html": {"href": "https://github.com/pytorch/pytorch/pull/3371#discussion_r148624616"}, "pull_request": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/3371"}}, "body_html": "<p>modifying <code>overriding_unique_name_</code> isn't exposed in Python except through this mechanism (though of course I can expose it directly).</p>\n<p>I wasn't aware that direct access to graph-&gt;inputs() and graph-&gt;outputs() was exposed either. If I find where that functionality is I can try moving this to python code.</p>", "body_text": "modifying overriding_unique_name_ isn't exposed in Python except through this mechanism (though of course I can expose it directly).\nI wasn't aware that direct access to graph->inputs() and graph->outputs() was exposed either. If I find where that functionality is I can try moving this to python code.", "in_reply_to_id": 148501058}