{"url": "https://api.github.com/repos/pytorch/pytorch/issues/10223", "repository_url": "https://api.github.com/repos/pytorch/pytorch", "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/10223/labels{/name}", "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/10223/comments", "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/10223/events", "html_url": "https://github.com/pytorch/pytorch/issues/10223", "id": 347538989, "node_id": "MDU6SXNzdWUzNDc1Mzg5ODk=", "number": 10223, "title": "[feature request] Forward-mode automatic differentiation", "user": {"login": "krishnap25", "id": 6386753, "node_id": "MDQ6VXNlcjYzODY3NTM=", "avatar_url": "https://avatars1.githubusercontent.com/u/6386753?v=4", "gravatar_id": "", "url": "https://api.github.com/users/krishnap25", "html_url": "https://github.com/krishnap25", "followers_url": "https://api.github.com/users/krishnap25/followers", "following_url": "https://api.github.com/users/krishnap25/following{/other_user}", "gists_url": "https://api.github.com/users/krishnap25/gists{/gist_id}", "starred_url": "https://api.github.com/users/krishnap25/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/krishnap25/subscriptions", "organizations_url": "https://api.github.com/users/krishnap25/orgs", "repos_url": "https://api.github.com/users/krishnap25/repos", "events_url": "https://api.github.com/users/krishnap25/events{/privacy}", "received_events_url": "https://api.github.com/users/krishnap25/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-08-03T21:17:44Z", "updated_at": "2018-08-17T17:59:48Z", "closed_at": null, "author_association": "NONE", "body_html": "<p>Thanks for the awesome library! It would be great if PyTorch could support forward-mode automatic differentiation. The main use case is to compute a Jacobian-vector product. I tried using <a href=\"https://j-towns.github.io/2017/06/12/A-new-trick.html\" rel=\"nofollow\">this trick</a> that simulates forward-mode autodiff by running reverse-mode twice, but it causes my GPU to run out of memory with AlexNet. <a href=\"https://github.com/HIPS/autograd\">HIPS/autograd</a> supports this operation, and it would be really nice if PyTorch could as well. Thanks!</p>", "body_text": "Thanks for the awesome library! It would be great if PyTorch could support forward-mode automatic differentiation. The main use case is to compute a Jacobian-vector product. I tried using this trick that simulates forward-mode autodiff by running reverse-mode twice, but it causes my GPU to run out of memory with AlexNet. HIPS/autograd supports this operation, and it would be really nice if PyTorch could as well. Thanks!", "body": "Thanks for the awesome library! It would be great if PyTorch could support forward-mode automatic differentiation. The main use case is to compute a Jacobian-vector product. I tried using [this trick](https://j-towns.github.io/2017/06/12/A-new-trick.html) that simulates forward-mode autodiff by running reverse-mode twice, but it causes my GPU to run out of memory with AlexNet. [HIPS/autograd](https://github.com/HIPS/autograd) supports this operation, and it would be really nice if PyTorch could as well. Thanks!"}