{"url": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/222483499", "pull_request_review_id": 161382106, "id": 222483499, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIyMjQ4MzQ5OQ==", "diff_hunk": "@@ -0,0 +1,49 @@\n+#pragma once\n+\n+#include <torch/data/datasets/base.h>\n+\n+#include <ATen/core/ArrayRef.h>\n+\n+#include <cstddef>\n+#include <utility>\n+\n+namespace torch {\n+namespace data {\n+namespace datasets {\n+\n+template <typename S, typename T>\n+struct Map : BatchDataset<Map<S, T>, typename T::OutputBatchType> {\n+  using DatasetType = S;\n+  using TransformType = T;\n+\n+  Map(DatasetType dataset, TransformType transform)\n+      : dataset(std::move(dataset)), transform(std::move(transform)) {}\n+\n+  typename T::OutputBatchType batch(at::ArrayRef<size_t> indices) override {\n+    return transform.apply_batch(dataset.batch(indices));\n+  }\n+\n+  size_t size() const override {\n+    return dataset.size();\n+  }\n+\n+  S dataset;\n+  T transform;\n+};\n+\n+template <typename DatasetType, typename TransformType>\n+Map<DatasetType, TransformType> map(\n+    DatasetType&& dataset,\n+    TransformType&& transform) {", "path": "torch/csrc/api/include/torch/data/datasets/map.h", "position": null, "original_position": 37, "commit_id": "2fabdad63c0bc48b26af6bf8d2e74513b09c97da", "original_commit_id": "d87492e397ef6bf55e2fc8782dfaefdd5aba9920", "user": {"login": "cantordust", "id": 43831101, "node_id": "MDQ6VXNlcjQzODMxMTAx", "avatar_url": "https://avatars1.githubusercontent.com/u/43831101?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cantordust", "html_url": "https://github.com/cantordust", "followers_url": "https://api.github.com/users/cantordust/followers", "following_url": "https://api.github.com/users/cantordust/following{/other_user}", "gists_url": "https://api.github.com/users/cantordust/gists{/gist_id}", "starred_url": "https://api.github.com/users/cantordust/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cantordust/subscriptions", "organizations_url": "https://api.github.com/users/cantordust/orgs", "repos_url": "https://api.github.com/users/cantordust/repos", "events_url": "https://api.github.com/users/cantordust/events{/privacy}", "received_events_url": "https://api.github.com/users/cantordust/received_events", "type": "User", "site_admin": false}, "body": "These are deduced types, so they are universal references rather than rvalues.", "created_at": "2018-10-03T22:07:17Z", "updated_at": "2018-11-23T15:52:17Z", "html_url": "https://github.com/pytorch/pytorch/pull/11918#discussion_r222483499", "pull_request_url": "https://api.github.com/repos/pytorch/pytorch/pulls/11918", "author_association": "NONE", "_links": {"self": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/222483499"}, "html": {"href": "https://github.com/pytorch/pytorch/pull/11918#discussion_r222483499"}, "pull_request": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/11918"}}, "body_html": "<p>These are deduced types, so they are universal references rather than rvalues.</p>", "body_text": "These are deduced types, so they are universal references rather than rvalues.", "in_reply_to_id": 220225847}