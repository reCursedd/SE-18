{"url": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/220212954", "pull_request_review_id": 158568107, "id": 220212954, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIyMDIxMjk1NA==", "diff_hunk": "@@ -0,0 +1,233 @@\n+#pragma once\n+\n+#include <torch/data/detail/data-shuttle.h>\n+#include <torch/data/detail/sequencers.h>\n+#include <torch/data/options.h>\n+#include <torch/data/samplers/random.h>\n+\n+#include <torch/csrc/utils/memory.h>\n+#include <torch/csrc/utils/variadic.h>\n+\n+#include <ATen/Error.h>\n+#include <ATen/optional.h>\n+\n+#include <cstddef>\n+#include <thread>\n+#include <type_traits>\n+#include <utility>\n+\n+namespace torch {\n+namespace data {\n+template <\n+    typename DatasetType,\n+    typename SamplerType = samplers::RandomSampler<>>\n+class DataLoader {\n+ public:\n+  using Batch = typename DatasetType::BatchType;\n+  using IndexBatch = typename SamplerType::IndexBatchType;\n+\n+  DataLoader(\n+      DatasetType dataset,\n+      DataLoaderOptions options,\n+      SamplerType sampler)", "path": "torch/csrc/api/include/torch/data/dataloader.h", "position": null, "original_position": 32, "commit_id": "2fabdad63c0bc48b26af6bf8d2e74513b09c97da", "original_commit_id": "d87492e397ef6bf55e2fc8782dfaefdd5aba9920", "user": {"login": "apaszke", "id": 4583066, "node_id": "MDQ6VXNlcjQ1ODMwNjY=", "avatar_url": "https://avatars3.githubusercontent.com/u/4583066?v=4", "gravatar_id": "", "url": "https://api.github.com/users/apaszke", "html_url": "https://github.com/apaszke", "followers_url": "https://api.github.com/users/apaszke/followers", "following_url": "https://api.github.com/users/apaszke/following{/other_user}", "gists_url": "https://api.github.com/users/apaszke/gists{/gist_id}", "starred_url": "https://api.github.com/users/apaszke/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/apaszke/subscriptions", "organizations_url": "https://api.github.com/users/apaszke/orgs", "repos_url": "https://api.github.com/users/apaszke/repos", "events_url": "https://api.github.com/users/apaszke/events{/privacy}", "received_events_url": "https://api.github.com/users/apaszke/received_events", "type": "User", "site_admin": false}, "body": "Sampler is usually an advanced option, and its choice is often handled by the `shuffle` flag, which is much more user friendly. It would be great if we could use the same interface in C++, but idk if that's possible. We'd probably need to figure out a common superclass for samplers, which might be reasonable.", "created_at": "2018-09-25T14:21:31Z", "updated_at": "2018-11-23T15:51:52Z", "html_url": "https://github.com/pytorch/pytorch/pull/11918#discussion_r220212954", "pull_request_url": "https://api.github.com/repos/pytorch/pytorch/pulls/11918", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/220212954"}, "html": {"href": "https://github.com/pytorch/pytorch/pull/11918#discussion_r220212954"}, "pull_request": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/11918"}}, "body_html": "<p>Sampler is usually an advanced option, and its choice is often handled by the <code>shuffle</code> flag, which is much more user friendly. It would be great if we could use the same interface in C++, but idk if that's possible. We'd probably need to figure out a common superclass for samplers, which might be reasonable.</p>", "body_text": "Sampler is usually an advanced option, and its choice is often handled by the shuffle flag, which is much more user friendly. It would be great if we could use the same interface in C++, but idk if that's possible. We'd probably need to figure out a common superclass for samplers, which might be reasonable."}