{"url": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/187565523", "pull_request_review_id": 119372198, "id": 187565523, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4NzU2NTUyMw==", "diff_hunk": "@@ -63,58 +61,67 @@ kernelReduceNoncontigDim_shared(TensorInfo<T, IndexType> out,\n     //for(IndexType i=threadIdx.y; i<reductionSize; i+=blockDim.y){\n     //  local_reg += in[inOffset + i * reductionStride];\n     //}\n-    for(IndexType i=threadIdx.y; i<reductionSize; i+=blockDim.y*4){\n-      if(i + blockDim.y * 3 < reductionSize){\n-        load_reg[0] = modifyOp(in.data[inOffset + (i + blockDim.y * 0) * reductionStride]);\n-        load_reg[1] = modifyOp(in.data[inOffset + (i + blockDim.y * 1) * reductionStride]);\n-        load_reg[2] = modifyOp(in.data[inOffset + (i + blockDim.y * 2) * reductionStride]);\n-        load_reg[3] = modifyOp(in.data[inOffset + (i + blockDim.y * 3) * reductionStride]);\n+    for(IndexType i=threadIdx.y; i<reductionSize; i+=blockDim.y*4) {\n+      if (i + blockDim.y * 3 < reductionSize) {\n+        const AccT val0 = ScalarConvert<T, AccT>::to(in.data[inOffset + i * reductionStride]);", "path": "aten/src/THC/THCReduce.cuh", "position": null, "original_position": 51, "commit_id": "bcac88dd70acbbbfffa5177228745f8daad589a9", "original_commit_id": "3a2f88e7b6938e3994c90855dd9a9420b393db20", "user": {"login": "apaszke", "id": 4583066, "node_id": "MDQ6VXNlcjQ1ODMwNjY=", "avatar_url": "https://avatars3.githubusercontent.com/u/4583066?v=4", "gravatar_id": "", "url": "https://api.github.com/users/apaszke", "html_url": "https://github.com/apaszke", "followers_url": "https://api.github.com/users/apaszke/followers", "following_url": "https://api.github.com/users/apaszke/following{/other_user}", "gists_url": "https://api.github.com/users/apaszke/gists{/gist_id}", "starred_url": "https://api.github.com/users/apaszke/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/apaszke/subscriptions", "organizations_url": "https://api.github.com/users/apaszke/orgs", "repos_url": "https://api.github.com/users/apaszke/repos", "events_url": "https://api.github.com/users/apaszke/events{/privacy}", "received_events_url": "https://api.github.com/users/apaszke/received_events", "type": "User", "site_admin": false}, "body": "can you please use `scalar_cast`? It's much more readable", "created_at": "2018-05-11T09:29:43Z", "updated_at": "2018-11-23T15:43:56Z", "html_url": "https://github.com/pytorch/pytorch/pull/7487#discussion_r187565523", "pull_request_url": "https://api.github.com/repos/pytorch/pytorch/pulls/7487", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/187565523"}, "html": {"href": "https://github.com/pytorch/pytorch/pull/7487#discussion_r187565523"}, "pull_request": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/7487"}}, "body_html": "<p>can you please use <code>scalar_cast</code>? It's much more readable</p>", "body_text": "can you please use scalar_cast? It's much more readable"}