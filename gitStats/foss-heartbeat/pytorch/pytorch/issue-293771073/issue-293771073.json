{"url": "https://api.github.com/repos/pytorch/pytorch/issues/5007", "repository_url": "https://api.github.com/repos/pytorch/pytorch", "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/5007/labels{/name}", "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/5007/comments", "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/5007/events", "html_url": "https://github.com/pytorch/pytorch/issues/5007", "id": 293771073, "node_id": "MDU6SXNzdWUyOTM3NzEwNzM=", "number": 5007, "title": "nn.L1Loss takes input, target tensors that don't have broadcastable sizes", "user": {"login": "zou3519", "id": 5652049, "node_id": "MDQ6VXNlcjU2NTIwNDk=", "avatar_url": "https://avatars3.githubusercontent.com/u/5652049?v=4", "gravatar_id": "", "url": "https://api.github.com/users/zou3519", "html_url": "https://github.com/zou3519", "followers_url": "https://api.github.com/users/zou3519/followers", "following_url": "https://api.github.com/users/zou3519/following{/other_user}", "gists_url": "https://api.github.com/users/zou3519/gists{/gist_id}", "starred_url": "https://api.github.com/users/zou3519/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/zou3519/subscriptions", "organizations_url": "https://api.github.com/users/zou3519/orgs", "repos_url": "https://api.github.com/users/zou3519/repos", "events_url": "https://api.github.com/users/zou3519/events{/privacy}", "received_events_url": "https://api.github.com/users/zou3519/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2018-02-02T04:37:27Z", "updated_at": "2018-02-07T03:12:12Z", "closed_at": "2018-02-07T03:12:12Z", "author_association": "CONTRIBUTOR", "body_html": "<pre><code>import torch\nc = torch.nn.L1Loss()\na = torch.ones(10, 500, 80)\nb = torch.zeros(10, 80, 500)\nc(torch.autograd.Variable(a), torch.autograd.Variable(b))\n</code></pre>\n<p>per the documentation, this is not supposed to work. Either there is a bug or the documentation should be updated.</p>\n<p>Originally reported here: <a href=\"https://discuss.pytorch.org/t/l1loss-returns-value-on-data-with-different-shape-but-different-number-of-elements/13161\" rel=\"nofollow\">https://discuss.pytorch.org/t/l1loss-returns-value-on-data-with-different-shape-but-different-number-of-elements/13161</a></p>", "body_text": "import torch\nc = torch.nn.L1Loss()\na = torch.ones(10, 500, 80)\nb = torch.zeros(10, 80, 500)\nc(torch.autograd.Variable(a), torch.autograd.Variable(b))\n\nper the documentation, this is not supposed to work. Either there is a bug or the documentation should be updated.\nOriginally reported here: https://discuss.pytorch.org/t/l1loss-returns-value-on-data-with-different-shape-but-different-number-of-elements/13161", "body": "```\r\nimport torch\r\nc = torch.nn.L1Loss()\r\na = torch.ones(10, 500, 80)\r\nb = torch.zeros(10, 80, 500)\r\nc(torch.autograd.Variable(a), torch.autograd.Variable(b))\r\n```\r\nper the documentation, this is not supposed to work. Either there is a bug or the documentation should be updated.\r\n\r\nOriginally reported here: https://discuss.pytorch.org/t/l1loss-returns-value-on-data-with-different-shape-but-different-number-of-elements/13161"}