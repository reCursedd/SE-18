{"url": "https://api.github.com/repos/pytorch/pytorch/issues/4842", "repository_url": "https://api.github.com/repos/pytorch/pytorch", "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/4842/labels{/name}", "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/4842/comments", "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/4842/events", "html_url": "https://github.com/pytorch/pytorch/pull/4842", "id": 291470701, "node_id": "MDExOlB1bGxSZXF1ZXN0MTY1MDQzOTg3", "number": 4842, "title": "JIT compile C++ extensions", "user": {"login": "goldsborough", "id": 6429851, "node_id": "MDQ6VXNlcjY0Mjk4NTE=", "avatar_url": "https://avatars3.githubusercontent.com/u/6429851?v=4", "gravatar_id": "", "url": "https://api.github.com/users/goldsborough", "html_url": "https://github.com/goldsborough", "followers_url": "https://api.github.com/users/goldsborough/followers", "following_url": "https://api.github.com/users/goldsborough/following{/other_user}", "gists_url": "https://api.github.com/users/goldsborough/gists{/gist_id}", "starred_url": "https://api.github.com/users/goldsborough/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/goldsborough/subscriptions", "organizations_url": "https://api.github.com/users/goldsborough/orgs", "repos_url": "https://api.github.com/users/goldsborough/repos", "events_url": "https://api.github.com/users/goldsborough/events{/privacy}", "received_events_url": "https://api.github.com/users/goldsborough/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-01-25T07:06:59Z", "updated_at": "2018-11-23T15:38:52Z", "closed_at": "2018-02-02T06:42:08Z", "author_association": "CONTRIBUTOR", "pull_request": {"url": "https://api.github.com/repos/pytorch/pytorch/pulls/4842", "html_url": "https://github.com/pytorch/pytorch/pull/4842", "diff_url": "https://github.com/pytorch/pytorch/pull/4842.diff", "patch_url": "https://github.com/pytorch/pytorch/pull/4842.patch"}, "body_html": "<p>This PR builds on top of <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load issue title\" data-id=\"291005051\" data-permission-text=\"Issue title is private\" data-url=\"https://github.com/pytorch/pytorch/issues/4818\" data-hovercard-type=\"pull_request\" data-hovercard-url=\"/pytorch/pytorch/pull/4818/hovercard\" href=\"https://github.com/pytorch/pytorch/pull/4818\">#4818</a> to provide <code>torch.utils.cpp_extension.load()</code>, which will:</p>\n<ol>\n<li>Take a bunch of source files,</li>\n<li>Emit (approximately) <code>/tmp/torch_extensions/&lt;module_name&gt;/build.ninja</code>,</li>\n<li>Call <code>ninja</code> in that directory to produce a dynamic library,</li>\n<li>Load that dynamic library as a Python module.</li>\n</ol>\n<p>See <code>test/test_cpp_extensions.py</code> for an example of this. I've also tried to document <code>torch.utils.cpp_extension.load</code> fairly well.</p>\n<p>It's not quite yet complete, but looking for feedback. What's missing is mainly a way to inform the user about ABI incompatibilities between the PyTorch install and whatever <code>CXX</code> is for the user, in a more friendly way than <code>SEGFAULT</code>.</p>\n<p><a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=370202\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/zdevito\">@zdevito</a> <a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=1310570\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/soumith\">@soumith</a> <a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=13564\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/ezyang\">@ezyang</a> <a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=4583066\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/apaszke\">@apaszke</a></p>", "body_text": "This PR builds on top of #4818 to provide torch.utils.cpp_extension.load(), which will:\n\nTake a bunch of source files,\nEmit (approximately) /tmp/torch_extensions/<module_name>/build.ninja,\nCall ninja in that directory to produce a dynamic library,\nLoad that dynamic library as a Python module.\n\nSee test/test_cpp_extensions.py for an example of this. I've also tried to document torch.utils.cpp_extension.load fairly well.\nIt's not quite yet complete, but looking for feedback. What's missing is mainly a way to inform the user about ABI incompatibilities between the PyTorch install and whatever CXX is for the user, in a more friendly way than SEGFAULT.\n@zdevito @soumith @ezyang @apaszke", "body": "This PR builds on top of https://github.com/pytorch/pytorch/pull/4818 to provide `torch.utils.cpp_extension.load()`, which will:\r\n\r\n1. Take a bunch of source files,\r\n2. Emit (approximately) `/tmp/torch_extensions/<module_name>/build.ninja`,\r\n3. Call `ninja` in that directory to produce a dynamic library,\r\n4. Load that dynamic library as a Python module.\r\n\r\nSee `test/test_cpp_extensions.py` for an example of this. I've also tried to document `torch.utils.cpp_extension.load` fairly well.\r\n\r\nIt's not quite yet complete, but looking for feedback. What's missing is mainly a way to inform the user about ABI incompatibilities between the PyTorch install and whatever `CXX` is for the user, in a more friendly way than `SEGFAULT`.\r\n\r\n@zdevito @soumith @ezyang @apaszke "}