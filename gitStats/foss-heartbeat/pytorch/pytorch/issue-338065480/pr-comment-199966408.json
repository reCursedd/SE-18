{"url": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/199966408", "pull_request_review_id": 134188392, "id": 199966408, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5OTk2NjQwOA==", "diff_hunk": "@@ -60,25 +62,25 @@ THCStorage* THCStorage_newWithAllocator(THCState *state,\n   return storage;\n }\n \n-void THCStorage_free(THCState *state, THCStorage *self)\n+void THCStorage_free(THCState *state, THCStorage *storage)\n {\n-  AT_ASSERT(self->backend == at::kCUDA);\n-\n-  if(!(self->flag & TH_STORAGE_REFCOUNTED))\n-    return;\n+  AT_ASSERT(storage->backend == at::kCUDA);\n \n-  if (--self->refcount == 0)\n-  {\n-    if(self->flag & TH_STORAGE_FREEMEM) {\n-      auto* thc_device_allocator = static_cast<THCDeviceAllocator*>(self->allocatorVoidPtr);\n-      THCudaCheck(\n-        (*thc_device_allocator->free)(self->allocatorContext, self->data_ptr));\n-    }\n-    if(self->flag & TH_STORAGE_VIEW) {\n-      THCStorage_free(state, self->view);\n+  if ((storage->flag & TH_STORAGE_REFCOUNTED) && (storage->refcount.load() > 0)) {", "path": "aten/src/THC/THCStorage.cpp", "position": null, "original_position": 31, "commit_id": "b43bcef012b65b753803d38b09410402a42b6a18", "original_commit_id": "97cde7c18f84d8b3d0f630fdaa034dd598495874", "user": {"login": "colesbury", "id": 655866, "node_id": "MDQ6VXNlcjY1NTg2Ng==", "avatar_url": "https://avatars1.githubusercontent.com/u/655866?v=4", "gravatar_id": "", "url": "https://api.github.com/users/colesbury", "html_url": "https://github.com/colesbury", "followers_url": "https://api.github.com/users/colesbury/followers", "following_url": "https://api.github.com/users/colesbury/following{/other_user}", "gists_url": "https://api.github.com/users/colesbury/gists{/gist_id}", "starred_url": "https://api.github.com/users/colesbury/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/colesbury/subscriptions", "organizations_url": "https://api.github.com/users/colesbury/orgs", "repos_url": "https://api.github.com/users/colesbury/repos", "events_url": "https://api.github.com/users/colesbury/events{/privacy}", "received_events_url": "https://api.github.com/users/colesbury/received_events", "type": "User", "site_admin": false}, "body": "The `storage->refcount.load() > 0` checks feels wrong. If we're going to detect that we're in an inconsistent state, should throw an error or print a warning. \r\n\r\nI know this is from the THStorage_free version, so we can deal with it at some later point.", "created_at": "2018-07-03T22:24:52Z", "updated_at": "2018-11-23T15:46:44Z", "html_url": "https://github.com/pytorch/pytorch/pull/9148#discussion_r199966408", "pull_request_url": "https://api.github.com/repos/pytorch/pytorch/pulls/9148", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/199966408"}, "html": {"href": "https://github.com/pytorch/pytorch/pull/9148#discussion_r199966408"}, "pull_request": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/9148"}}, "body_html": "<p>The <code>storage-&gt;refcount.load() &gt; 0</code> checks feels wrong. If we're going to detect that we're in an inconsistent state, should throw an error or print a warning.</p>\n<p>I know this is from the THStorage_free version, so we can deal with it at some later point.</p>", "body_text": "The storage->refcount.load() > 0 checks feels wrong. If we're going to detect that we're in an inconsistent state, should throw an error or print a warning.\nI know this is from the THStorage_free version, so we can deal with it at some later point."}