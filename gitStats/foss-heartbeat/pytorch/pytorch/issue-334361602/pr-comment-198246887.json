{"url": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/198246887", "pull_request_review_id": 132143229, "id": 198246887, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5ODI0Njg4Nw==", "diff_hunk": "@@ -14,16 +13,16 @@ namespace nn {\n // Sequential.\n class FunctionalImpl : public torch::nn::Cloneable<FunctionalImpl> {\n  public:\n-  using Function = std::function<std::vector<Tensor>(std::vector<Tensor>)>;\n-\n-  explicit FunctionalImpl(Function function);\n   explicit FunctionalImpl(std::function<Tensor(Tensor)> function);", "path": "torch/csrc/api/include/torch/nn/modules/functional.h", "position": null, "original_position": 15, "commit_id": "dc9147095e587d48e374ace2d62c7eb6cc584ca1", "original_commit_id": "56df41e85b78a357d9c7ee528f712a3ed75b9c79", "user": {"login": "ebetica", "id": 3605224, "node_id": "MDQ6VXNlcjM2MDUyMjQ=", "avatar_url": "https://avatars3.githubusercontent.com/u/3605224?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ebetica", "html_url": "https://github.com/ebetica", "followers_url": "https://api.github.com/users/ebetica/followers", "following_url": "https://api.github.com/users/ebetica/following{/other_user}", "gists_url": "https://api.github.com/users/ebetica/gists{/gist_id}", "starred_url": "https://api.github.com/users/ebetica/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ebetica/subscriptions", "organizations_url": "https://api.github.com/users/ebetica/orgs", "repos_url": "https://api.github.com/users/ebetica/repos", "events_url": "https://api.github.com/users/ebetica/events{/privacy}", "received_events_url": "https://api.github.com/users/ebetica/received_events", "type": "User", "site_admin": false}, "body": "Maybe for a later PR:\r\n\r\nPossible to templatize this, so you can write `Functional(at::max_pool2d, {2, 2})` or something? Basically, it would replace that call with `at::max_pool2d(x, {2, 2})`.", "created_at": "2018-06-26T18:10:48Z", "updated_at": "2018-11-23T15:46:22Z", "html_url": "https://github.com/pytorch/pytorch/pull/8739#discussion_r198246887", "pull_request_url": "https://api.github.com/repos/pytorch/pytorch/pulls/8739", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/198246887"}, "html": {"href": "https://github.com/pytorch/pytorch/pull/8739#discussion_r198246887"}, "pull_request": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/8739"}}, "body_html": "<p>Maybe for a later PR:</p>\n<p>Possible to templatize this, so you can write <code>Functional(at::max_pool2d, {2, 2})</code> or something? Basically, it would replace that call with <code>at::max_pool2d(x, {2, 2})</code>.</p>", "body_text": "Maybe for a later PR:\nPossible to templatize this, so you can write Functional(at::max_pool2d, {2, 2}) or something? Basically, it would replace that call with at::max_pool2d(x, {2, 2})."}