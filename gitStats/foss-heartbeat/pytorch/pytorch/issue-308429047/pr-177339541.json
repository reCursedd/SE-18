{"url": "https://api.github.com/repos/pytorch/pytorch/pulls/6000", "id": 177339541, "node_id": "MDExOlB1bGxSZXF1ZXN0MTc3MzM5NTQx", "html_url": "https://github.com/pytorch/pytorch/pull/6000", "diff_url": "https://github.com/pytorch/pytorch/pull/6000.diff", "patch_url": "https://github.com/pytorch/pytorch/pull/6000.patch", "issue_url": "https://api.github.com/repos/pytorch/pytorch/issues/6000", "number": 6000, "state": "closed", "locked": false, "title": "Added parameter range checks for all optimizers", "user": {"login": "lazypanda1", "id": 35884075, "node_id": "MDQ6VXNlcjM1ODg0MDc1", "avatar_url": "https://avatars0.githubusercontent.com/u/35884075?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lazypanda1", "html_url": "https://github.com/lazypanda1", "followers_url": "https://api.github.com/users/lazypanda1/followers", "following_url": "https://api.github.com/users/lazypanda1/following{/other_user}", "gists_url": "https://api.github.com/users/lazypanda1/gists{/gist_id}", "starred_url": "https://api.github.com/users/lazypanda1/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lazypanda1/subscriptions", "organizations_url": "https://api.github.com/users/lazypanda1/orgs", "repos_url": "https://api.github.com/users/lazypanda1/repos", "events_url": "https://api.github.com/users/lazypanda1/events{/privacy}", "received_events_url": "https://api.github.com/users/lazypanda1/received_events", "type": "User", "site_admin": false}, "body": "This PR adds parameter range checks to all optimizers to ensure that end-users do not end up providing invalid values to the optimizers and be confused by the output when there is no actual problem with their model.\r\n\r\nFor example, running the following program produces `NaN`s in the output, due to invalid value of `rho` (>1.0).\r\n\r\n```python\r\nimport torch\r\nfrom torch.autograd import Variable\r\n\r\nN, D_in, H, D_out = 64, 1000, 100, 10\r\n\r\nx = Variable(torch.randn(N, D_in))\r\ny = Variable(torch.randn(N, D_out), requires_grad=False)\r\n\r\nmodel = torch.nn.Sequential(\r\n    torch.nn.Linear(D_in, H),\r\n    torch.nn.ReLU(),\r\n    torch.nn.Linear(H, D_out),\r\n)\r\nloss_fn = torch.nn.MSELoss(size_average=False)\r\n\r\nlearning_rate = 1e-4\r\noptimizer = torch.optim.Adadelta(model.parameters(), lr=learning_rate, rho=1.1)\r\nfor t in range(2):\r\n    y_pred = model(x)\r\n    loss = loss_fn(y_pred, y)\r\n    print(t, loss.data[0])\r\n    optimizer.zero_grad()\r\n    loss.backward()\r\n    optimizer.step()\r\n```\r\n\r\nOutput:\r\n```\r\n0 651.8707885742188\r\n1 nan\r\n```\r\n\r\nI tried adding constraints for all the parameters that I could infer from the corresponding articles, but I am still missing some. Please feel free to suggest what should be bound for the ones which are missing.\r\n\r\nThis is similar to the bounds check which I added for [`Adam Optimizer`](https://github.com/pytorch/pytorch/pull/5147)\r\n\r\nI can also add tests if needed.", "created_at": "2018-03-26T04:22:55Z", "updated_at": "2018-11-23T15:41:11Z", "closed_at": "2018-03-28T09:22:24Z", "merged_at": "2018-03-28T09:22:24Z", "merge_commit_sha": "063946d2b3f3f1e953a2a3b54e0b34f1393de295", "assignee": null, "assignees": [], "requested_reviewers": [], "requested_teams": [], "labels": [], "milestone": null, "commits_url": "https://api.github.com/repos/pytorch/pytorch/pulls/6000/commits", "review_comments_url": "https://api.github.com/repos/pytorch/pytorch/pulls/6000/comments", "review_comment_url": "https://api.github.com/repos/pytorch/pytorch/pulls/comments{/number}", "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/6000/comments", "statuses_url": "https://api.github.com/repos/pytorch/pytorch/statuses/3da7f95f51de9db2af1bea36a1b168d3dc4552a7", "head": {"label": "lazypanda1:optimizer-fixes", "ref": "optimizer-fixes", "sha": "3da7f95f51de9db2af1bea36a1b168d3dc4552a7", "user": {"login": "lazypanda1", "id": 35884075, "node_id": "MDQ6VXNlcjM1ODg0MDc1", "avatar_url": "https://avatars0.githubusercontent.com/u/35884075?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lazypanda1", "html_url": "https://github.com/lazypanda1", "followers_url": "https://api.github.com/users/lazypanda1/followers", "following_url": "https://api.github.com/users/lazypanda1/following{/other_user}", "gists_url": "https://api.github.com/users/lazypanda1/gists{/gist_id}", "starred_url": "https://api.github.com/users/lazypanda1/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lazypanda1/subscriptions", "organizations_url": "https://api.github.com/users/lazypanda1/orgs", "repos_url": "https://api.github.com/users/lazypanda1/repos", "events_url": "https://api.github.com/users/lazypanda1/events{/privacy}", "received_events_url": "https://api.github.com/users/lazypanda1/received_events", "type": "User", "site_admin": false}, "repo": {"id": 120821868, "node_id": "MDEwOlJlcG9zaXRvcnkxMjA4MjE4Njg=", "name": "pytorch", "full_name": "lazypanda1/pytorch", "private": false, "owner": {"login": "lazypanda1", "id": 35884075, "node_id": "MDQ6VXNlcjM1ODg0MDc1", "avatar_url": "https://avatars0.githubusercontent.com/u/35884075?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lazypanda1", "html_url": "https://github.com/lazypanda1", "followers_url": "https://api.github.com/users/lazypanda1/followers", "following_url": "https://api.github.com/users/lazypanda1/following{/other_user}", "gists_url": "https://api.github.com/users/lazypanda1/gists{/gist_id}", "starred_url": "https://api.github.com/users/lazypanda1/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lazypanda1/subscriptions", "organizations_url": "https://api.github.com/users/lazypanda1/orgs", "repos_url": "https://api.github.com/users/lazypanda1/repos", "events_url": "https://api.github.com/users/lazypanda1/events{/privacy}", "received_events_url": "https://api.github.com/users/lazypanda1/received_events", "type": "User", "site_admin": false}, "html_url": "https://github.com/lazypanda1/pytorch", "description": "Tensors and Dynamic neural networks in Python  with strong GPU acceleration", "fork": true, "url": "https://api.github.com/repos/lazypanda1/pytorch", "forks_url": "https://api.github.com/repos/lazypanda1/pytorch/forks", "keys_url": "https://api.github.com/repos/lazypanda1/pytorch/keys{/key_id}", "collaborators_url": "https://api.github.com/repos/lazypanda1/pytorch/collaborators{/collaborator}", "teams_url": "https://api.github.com/repos/lazypanda1/pytorch/teams", "hooks_url": "https://api.github.com/repos/lazypanda1/pytorch/hooks", "issue_events_url": "https://api.github.com/repos/lazypanda1/pytorch/issues/events{/number}", "events_url": "https://api.github.com/repos/lazypanda1/pytorch/events", "assignees_url": "https://api.github.com/repos/lazypanda1/pytorch/assignees{/user}", "branches_url": "https://api.github.com/repos/lazypanda1/pytorch/branches{/branch}", "tags_url": "https://api.github.com/repos/lazypanda1/pytorch/tags", "blobs_url": "https://api.github.com/repos/lazypanda1/pytorch/git/blobs{/sha}", "git_tags_url": "https://api.github.com/repos/lazypanda1/pytorch/git/tags{/sha}", "git_refs_url": "https://api.github.com/repos/lazypanda1/pytorch/git/refs{/sha}", "trees_url": "https://api.github.com/repos/lazypanda1/pytorch/git/trees{/sha}", "statuses_url": "https://api.github.com/repos/lazypanda1/pytorch/statuses/{sha}", "languages_url": "https://api.github.com/repos/lazypanda1/pytorch/languages", "stargazers_url": "https://api.github.com/repos/lazypanda1/pytorch/stargazers", "contributors_url": "https://api.github.com/repos/lazypanda1/pytorch/contributors", "subscribers_url": "https://api.github.com/repos/lazypanda1/pytorch/subscribers", "subscription_url": "https://api.github.com/repos/lazypanda1/pytorch/subscription", "commits_url": "https://api.github.com/repos/lazypanda1/pytorch/commits{/sha}", "git_commits_url": "https://api.github.com/repos/lazypanda1/pytorch/git/commits{/sha}", "comments_url": "https://api.github.com/repos/lazypanda1/pytorch/comments{/number}", "issue_comment_url": "https://api.github.com/repos/lazypanda1/pytorch/issues/comments{/number}", "contents_url": "https://api.github.com/repos/lazypanda1/pytorch/contents/{+path}", "compare_url": "https://api.github.com/repos/lazypanda1/pytorch/compare/{base}...{head}", "merges_url": "https://api.github.com/repos/lazypanda1/pytorch/merges", "archive_url": "https://api.github.com/repos/lazypanda1/pytorch/{archive_format}{/ref}", "downloads_url": "https://api.github.com/repos/lazypanda1/pytorch/downloads", "issues_url": "https://api.github.com/repos/lazypanda1/pytorch/issues{/number}", "pulls_url": "https://api.github.com/repos/lazypanda1/pytorch/pulls{/number}", "milestones_url": "https://api.github.com/repos/lazypanda1/pytorch/milestones{/number}", "notifications_url": "https://api.github.com/repos/lazypanda1/pytorch/notifications{?since,all,participating}", "labels_url": "https://api.github.com/repos/lazypanda1/pytorch/labels{/name}", "releases_url": "https://api.github.com/repos/lazypanda1/pytorch/releases{/id}", "deployments_url": "https://api.github.com/repos/lazypanda1/pytorch/deployments", "created_at": "2018-02-08T21:46:16Z", "updated_at": "2018-03-28T20:51:56Z", "pushed_at": "2018-03-29T18:49:10Z", "git_url": "git://github.com/lazypanda1/pytorch.git", "ssh_url": "git@github.com:lazypanda1/pytorch.git", "clone_url": "https://github.com/lazypanda1/pytorch.git", "svn_url": "https://github.com/lazypanda1/pytorch", "homepage": "http://pytorch.org", "size": 25365, "stargazers_count": 0, "watchers_count": 0, "language": "Python", "has_issues": false, "has_projects": true, "has_downloads": true, "has_wiki": true, "has_pages": false, "forks_count": 0, "mirror_url": null, "archived": false, "open_issues_count": 2, "license": {"key": "other", "name": "Other", "spdx_id": "NOASSERTION", "url": null, "node_id": "MDc6TGljZW5zZTA="}, "forks": 0, "open_issues": 2, "watchers": 0, "default_branch": "master"}}, "base": {"label": "pytorch:master", "ref": "master", "sha": "2df578a71af3fedf84717a112ef9c18335a01d4f", "user": {"login": "pytorch", "id": 21003710, "node_id": "MDEyOk9yZ2FuaXphdGlvbjIxMDAzNzEw", "avatar_url": "https://avatars3.githubusercontent.com/u/21003710?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pytorch", "html_url": "https://github.com/pytorch", "followers_url": "https://api.github.com/users/pytorch/followers", "following_url": "https://api.github.com/users/pytorch/following{/other_user}", "gists_url": "https://api.github.com/users/pytorch/gists{/gist_id}", "starred_url": "https://api.github.com/users/pytorch/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pytorch/subscriptions", "organizations_url": "https://api.github.com/users/pytorch/orgs", "repos_url": "https://api.github.com/users/pytorch/repos", "events_url": "https://api.github.com/users/pytorch/events{/privacy}", "received_events_url": "https://api.github.com/users/pytorch/received_events", "type": "Organization", "site_admin": false}, "repo": {"id": 65600975, "node_id": "MDEwOlJlcG9zaXRvcnk2NTYwMDk3NQ==", "name": "pytorch", "full_name": "pytorch/pytorch", "private": false, "owner": {"login": "pytorch", "id": 21003710, "node_id": "MDEyOk9yZ2FuaXphdGlvbjIxMDAzNzEw", "avatar_url": "https://avatars3.githubusercontent.com/u/21003710?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pytorch", "html_url": "https://github.com/pytorch", "followers_url": "https://api.github.com/users/pytorch/followers", "following_url": "https://api.github.com/users/pytorch/following{/other_user}", "gists_url": "https://api.github.com/users/pytorch/gists{/gist_id}", "starred_url": "https://api.github.com/users/pytorch/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pytorch/subscriptions", "organizations_url": "https://api.github.com/users/pytorch/orgs", "repos_url": "https://api.github.com/users/pytorch/repos", "events_url": "https://api.github.com/users/pytorch/events{/privacy}", "received_events_url": "https://api.github.com/users/pytorch/received_events", "type": "Organization", "site_admin": false}, "html_url": "https://github.com/pytorch/pytorch", "description": "Tensors and Dynamic neural networks in Python  with strong GPU acceleration", "fork": false, "url": "https://api.github.com/repos/pytorch/pytorch", "forks_url": "https://api.github.com/repos/pytorch/pytorch/forks", "keys_url": "https://api.github.com/repos/pytorch/pytorch/keys{/key_id}", "collaborators_url": "https://api.github.com/repos/pytorch/pytorch/collaborators{/collaborator}", "teams_url": "https://api.github.com/repos/pytorch/pytorch/teams", "hooks_url": "https://api.github.com/repos/pytorch/pytorch/hooks", "issue_events_url": "https://api.github.com/repos/pytorch/pytorch/issues/events{/number}", "events_url": "https://api.github.com/repos/pytorch/pytorch/events", "assignees_url": "https://api.github.com/repos/pytorch/pytorch/assignees{/user}", "branches_url": "https://api.github.com/repos/pytorch/pytorch/branches{/branch}", "tags_url": "https://api.github.com/repos/pytorch/pytorch/tags", "blobs_url": "https://api.github.com/repos/pytorch/pytorch/git/blobs{/sha}", "git_tags_url": "https://api.github.com/repos/pytorch/pytorch/git/tags{/sha}", "git_refs_url": "https://api.github.com/repos/pytorch/pytorch/git/refs{/sha}", "trees_url": "https://api.github.com/repos/pytorch/pytorch/git/trees{/sha}", "statuses_url": "https://api.github.com/repos/pytorch/pytorch/statuses/{sha}", "languages_url": "https://api.github.com/repos/pytorch/pytorch/languages", "stargazers_url": "https://api.github.com/repos/pytorch/pytorch/stargazers", "contributors_url": "https://api.github.com/repos/pytorch/pytorch/contributors", "subscribers_url": "https://api.github.com/repos/pytorch/pytorch/subscribers", "subscription_url": "https://api.github.com/repos/pytorch/pytorch/subscription", "commits_url": "https://api.github.com/repos/pytorch/pytorch/commits{/sha}", "git_commits_url": "https://api.github.com/repos/pytorch/pytorch/git/commits{/sha}", "comments_url": "https://api.github.com/repos/pytorch/pytorch/comments{/number}", "issue_comment_url": "https://api.github.com/repos/pytorch/pytorch/issues/comments{/number}", "contents_url": "https://api.github.com/repos/pytorch/pytorch/contents/{+path}", "compare_url": "https://api.github.com/repos/pytorch/pytorch/compare/{base}...{head}", "merges_url": "https://api.github.com/repos/pytorch/pytorch/merges", "archive_url": "https://api.github.com/repos/pytorch/pytorch/{archive_format}{/ref}", "downloads_url": "https://api.github.com/repos/pytorch/pytorch/downloads", "issues_url": "https://api.github.com/repos/pytorch/pytorch/issues{/number}", "pulls_url": "https://api.github.com/repos/pytorch/pytorch/pulls{/number}", "milestones_url": "https://api.github.com/repos/pytorch/pytorch/milestones{/number}", "notifications_url": "https://api.github.com/repos/pytorch/pytorch/notifications{?since,all,participating}", "labels_url": "https://api.github.com/repos/pytorch/pytorch/labels{/name}", "releases_url": "https://api.github.com/repos/pytorch/pytorch/releases{/id}", "deployments_url": "https://api.github.com/repos/pytorch/pytorch/deployments", "created_at": "2016-08-13T05:26:41Z", "updated_at": "2018-11-24T14:27:35Z", "pushed_at": "2018-11-24T12:42:01Z", "git_url": "git://github.com/pytorch/pytorch.git", "ssh_url": "git@github.com:pytorch/pytorch.git", "clone_url": "https://github.com/pytorch/pytorch.git", "svn_url": "https://github.com/pytorch/pytorch", "homepage": "http://pytorch.org", "size": 89656, "stargazers_count": 21591, "watchers_count": 21591, "language": "C++", "has_issues": true, "has_projects": true, "has_downloads": true, "has_wiki": true, "has_pages": false, "forks_count": 5154, "mirror_url": null, "archived": false, "open_issues_count": 2196, "license": {"key": "other", "name": "Other", "spdx_id": "NOASSERTION", "url": null, "node_id": "MDc6TGljZW5zZTA="}, "forks": 5154, "open_issues": 2196, "watchers": 21591, "default_branch": "master"}}, "_links": {"self": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/6000"}, "html": {"href": "https://github.com/pytorch/pytorch/pull/6000"}, "issue": {"href": "https://api.github.com/repos/pytorch/pytorch/issues/6000"}, "comments": {"href": "https://api.github.com/repos/pytorch/pytorch/issues/6000/comments"}, "review_comments": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/6000/comments"}, "review_comment": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/comments{/number}"}, "commits": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/6000/commits"}, "statuses": {"href": "https://api.github.com/repos/pytorch/pytorch/statuses/3da7f95f51de9db2af1bea36a1b168d3dc4552a7"}}, "author_association": "CONTRIBUTOR", "body_html": "<p>This PR adds parameter range checks to all optimizers to ensure that end-users do not end up providing invalid values to the optimizers and be confused by the output when there is no actual problem with their model.</p>\n<p>For example, running the following program produces <code>NaN</code>s in the output, due to invalid value of <code>rho</code> (&gt;1.0).</p>\n<div class=\"highlight highlight-source-python\"><pre><span class=\"pl-k\">import</span> torch\n<span class=\"pl-k\">from</span> torch.autograd <span class=\"pl-k\">import</span> Variable\n\nN, D_in, H, D_out <span class=\"pl-k\">=</span> <span class=\"pl-c1\">64</span>, <span class=\"pl-c1\">1000</span>, <span class=\"pl-c1\">100</span>, <span class=\"pl-c1\">10</span>\n\nx <span class=\"pl-k\">=</span> Variable(torch.randn(N, D_in))\ny <span class=\"pl-k\">=</span> Variable(torch.randn(N, D_out), <span class=\"pl-v\">requires_grad</span><span class=\"pl-k\">=</span><span class=\"pl-c1\">False</span>)\n\nmodel <span class=\"pl-k\">=</span> torch.nn.Sequential(\n    torch.nn.Linear(D_in, H),\n    torch.nn.ReLU(),\n    torch.nn.Linear(H, D_out),\n)\nloss_fn <span class=\"pl-k\">=</span> torch.nn.MSELoss(<span class=\"pl-v\">size_average</span><span class=\"pl-k\">=</span><span class=\"pl-c1\">False</span>)\n\nlearning_rate <span class=\"pl-k\">=</span> <span class=\"pl-c1\">1e-4</span>\noptimizer <span class=\"pl-k\">=</span> torch.optim.Adadelta(model.parameters(), <span class=\"pl-v\">lr</span><span class=\"pl-k\">=</span>learning_rate, <span class=\"pl-v\">rho</span><span class=\"pl-k\">=</span><span class=\"pl-c1\">1.1</span>)\n<span class=\"pl-k\">for</span> t <span class=\"pl-k\">in</span> <span class=\"pl-c1\">range</span>(<span class=\"pl-c1\">2</span>):\n    y_pred <span class=\"pl-k\">=</span> model(x)\n    loss <span class=\"pl-k\">=</span> loss_fn(y_pred, y)\n    <span class=\"pl-c1\">print</span>(t, loss.data[<span class=\"pl-c1\">0</span>])\n    optimizer.zero_grad()\n    loss.backward()\n    optimizer.step()</pre></div>\n<p>Output:</p>\n<pre><code>0 651.8707885742188\n1 nan\n</code></pre>\n<p>I tried adding constraints for all the parameters that I could infer from the corresponding articles, but I am still missing some. Please feel free to suggest what should be bound for the ones which are missing.</p>\n<p>This is similar to the bounds check which I added for <a href=\"https://github.com/pytorch/pytorch/pull/5147\" data-hovercard-type=\"pull_request\" data-hovercard-url=\"/pytorch/pytorch/pull/5147/hovercard\"><code>Adam Optimizer</code></a></p>\n<p>I can also add tests if needed.</p>", "body_text": "This PR adds parameter range checks to all optimizers to ensure that end-users do not end up providing invalid values to the optimizers and be confused by the output when there is no actual problem with their model.\nFor example, running the following program produces NaNs in the output, due to invalid value of rho (>1.0).\nimport torch\nfrom torch.autograd import Variable\n\nN, D_in, H, D_out = 64, 1000, 100, 10\n\nx = Variable(torch.randn(N, D_in))\ny = Variable(torch.randn(N, D_out), requires_grad=False)\n\nmodel = torch.nn.Sequential(\n    torch.nn.Linear(D_in, H),\n    torch.nn.ReLU(),\n    torch.nn.Linear(H, D_out),\n)\nloss_fn = torch.nn.MSELoss(size_average=False)\n\nlearning_rate = 1e-4\noptimizer = torch.optim.Adadelta(model.parameters(), lr=learning_rate, rho=1.1)\nfor t in range(2):\n    y_pred = model(x)\n    loss = loss_fn(y_pred, y)\n    print(t, loss.data[0])\n    optimizer.zero_grad()\n    loss.backward()\n    optimizer.step()\nOutput:\n0 651.8707885742188\n1 nan\n\nI tried adding constraints for all the parameters that I could infer from the corresponding articles, but I am still missing some. Please feel free to suggest what should be bound for the ones which are missing.\nThis is similar to the bounds check which I added for Adam Optimizer\nI can also add tests if needed.", "merged": true, "mergeable": null, "rebaseable": null, "mergeable_state": "unknown", "merged_by": {"login": "apaszke", "id": 4583066, "node_id": "MDQ6VXNlcjQ1ODMwNjY=", "avatar_url": "https://avatars3.githubusercontent.com/u/4583066?v=4", "gravatar_id": "", "url": "https://api.github.com/users/apaszke", "html_url": "https://github.com/apaszke", "followers_url": "https://api.github.com/users/apaszke/followers", "following_url": "https://api.github.com/users/apaszke/following{/other_user}", "gists_url": "https://api.github.com/users/apaszke/gists{/gist_id}", "starred_url": "https://api.github.com/users/apaszke/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/apaszke/subscriptions", "organizations_url": "https://api.github.com/users/apaszke/orgs", "repos_url": "https://api.github.com/users/apaszke/repos", "events_url": "https://api.github.com/users/apaszke/events{/privacy}", "received_events_url": "https://api.github.com/users/apaszke/received_events", "type": "User", "site_admin": false}, "comments": 5, "review_comments": 5, "maintainer_can_modify": false, "commits": 4, "additions": 83, "deletions": 0, "changed_files": 10}