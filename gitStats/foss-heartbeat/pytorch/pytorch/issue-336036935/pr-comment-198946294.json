{"url": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/198946294", "pull_request_review_id": 132971816, "id": 198946294, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5ODk0NjI5NA==", "diff_hunk": "@@ -337,12 +337,15 @@ def build_Name(ctx, expr):\n \n     @staticmethod\n     def build_NameConstant(ctx, expr):\n-        text = \"True\" if expr.value else \"False\"\n-        r = ctx.make_range(expr.lineno, expr.col_offset, expr.col_offset + len(text))\n-        if expr.value:\n+        r = ctx.make_range(expr.lineno, expr.col_offset, expr.col_offset + len(str(expr.value)))\n+        if expr.value is True:\n             return TrueLiteral(r)\n-        else:\n+        elif expr.value is False:\n             return FalseLiteral(r)\n+        elif expr.value is None:\n+            return Var(Ident(r, \"None\"))", "path": "torch/jit/frontend.py", "position": null, "original_position": 14, "commit_id": "5875573c2bb6f28c68a4080f268f863179fc7383", "original_commit_id": "884622c229488ab0eadb826b973a84dc6c4ded87", "user": {"login": "wanchaol", "id": 9443650, "node_id": "MDQ6VXNlcjk0NDM2NTA=", "avatar_url": "https://avatars2.githubusercontent.com/u/9443650?v=4", "gravatar_id": "", "url": "https://api.github.com/users/wanchaol", "html_url": "https://github.com/wanchaol", "followers_url": "https://api.github.com/users/wanchaol/followers", "following_url": "https://api.github.com/users/wanchaol/following{/other_user}", "gists_url": "https://api.github.com/users/wanchaol/gists{/gist_id}", "starred_url": "https://api.github.com/users/wanchaol/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/wanchaol/subscriptions", "organizations_url": "https://api.github.com/users/wanchaol/orgs", "repos_url": "https://api.github.com/users/wanchaol/repos", "events_url": "https://api.github.com/users/wanchaol/events{/privacy}", "received_events_url": "https://api.github.com/users/wanchaol/received_events", "type": "User", "site_admin": false}, "body": "I think so far we don't have a NoneLiteral yet. This PR is to correct the python3's behavior of treating None and match it with the python2 syntax (which treats None as a variable as well). When we begin to work on supporting None, we could think about making None as a Token and have a NoneLiteral here.  ", "created_at": "2018-06-28T18:44:26Z", "updated_at": "2018-11-23T15:46:31Z", "html_url": "https://github.com/pytorch/pytorch/pull/8925#discussion_r198946294", "pull_request_url": "https://api.github.com/repos/pytorch/pytorch/pulls/8925", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/198946294"}, "html": {"href": "https://github.com/pytorch/pytorch/pull/8925#discussion_r198946294"}, "pull_request": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/8925"}}, "body_html": "<p>I think so far we don't have a NoneLiteral yet. This PR is to correct the python3's behavior of treating None and match it with the python2 syntax (which treats None as a variable as well). When we begin to work on supporting None, we could think about making None as a Token and have a NoneLiteral here.</p>", "body_text": "I think so far we don't have a NoneLiteral yet. This PR is to correct the python3's behavior of treating None and match it with the python2 syntax (which treats None as a variable as well). When we begin to work on supporting None, we could think about making None as a Token and have a NoneLiteral here.", "in_reply_to_id": 198841729}