{"url": "https://api.github.com/repos/pytorch/pytorch/issues/1004", "repository_url": "https://api.github.com/repos/pytorch/pytorch", "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/1004/labels{/name}", "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/1004/comments", "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/1004/events", "html_url": "https://github.com/pytorch/pytorch/issues/1004", "id": 214427226, "node_id": "MDU6SXNzdWUyMTQ0MjcyMjY=", "number": 1004, "title": "cuDNN BatchNorm has max bound on the batch size", "user": {"login": "soumith", "id": 1310570, "node_id": "MDQ6VXNlcjEzMTA1NzA=", "avatar_url": "https://avatars0.githubusercontent.com/u/1310570?v=4", "gravatar_id": "", "url": "https://api.github.com/users/soumith", "html_url": "https://github.com/soumith", "followers_url": "https://api.github.com/users/soumith/followers", "following_url": "https://api.github.com/users/soumith/following{/other_user}", "gists_url": "https://api.github.com/users/soumith/gists{/gist_id}", "starred_url": "https://api.github.com/users/soumith/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/soumith/subscriptions", "organizations_url": "https://api.github.com/users/soumith/orgs", "repos_url": "https://api.github.com/users/soumith/repos", "events_url": "https://api.github.com/users/soumith/events{/privacy}", "received_events_url": "https://api.github.com/users/soumith/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2017-03-15T15:27:46Z", "updated_at": "2017-03-20T15:42:02Z", "closed_at": "2017-03-20T15:42:02Z", "author_association": "MEMBER", "body_html": "<p>Fatal CUDNN_NOT_SUPPORTED error. Reported by <a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=859004\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/namdar\">@namdar</a></p>\n<pre><code>import torch\nimport torch.nn as nn\nfrom torch.autograd import Variable\nclass TestModel(nn.Module):\n    def __init__(self,inp_size):\n        super(TestModel, self).__init__()\n        self.encoder = nn.Sequential(\n            nn.Linear(inp_size, 200),\n            nn.BatchNorm1d(200),\n        )\n    def forward(self, x):\n        x = self.encoder(x)\n        return x\nbatch_size = 10000\ninp_size = 1\nx = Variable(torch.randn(batch_size,inp_size)).cuda()\nm = TestModel(inp_size)\nm.cuda()\nout = m(x)\nprint(out.size())\nm.eval()\nout2 = m(x)\n</code></pre>", "body_text": "Fatal CUDNN_NOT_SUPPORTED error. Reported by @namdar\nimport torch\nimport torch.nn as nn\nfrom torch.autograd import Variable\nclass TestModel(nn.Module):\n    def __init__(self,inp_size):\n        super(TestModel, self).__init__()\n        self.encoder = nn.Sequential(\n            nn.Linear(inp_size, 200),\n            nn.BatchNorm1d(200),\n        )\n    def forward(self, x):\n        x = self.encoder(x)\n        return x\nbatch_size = 10000\ninp_size = 1\nx = Variable(torch.randn(batch_size,inp_size)).cuda()\nm = TestModel(inp_size)\nm.cuda()\nout = m(x)\nprint(out.size())\nm.eval()\nout2 = m(x)", "body": "Fatal CUDNN_NOT_SUPPORTED error. Reported by @namdar\r\n\r\n```\r\nimport torch\r\nimport torch.nn as nn\r\nfrom torch.autograd import Variable\r\nclass TestModel(nn.Module):\r\n    def __init__(self,inp_size):\r\n        super(TestModel, self).__init__()\r\n        self.encoder = nn.Sequential(\r\n            nn.Linear(inp_size, 200),\r\n            nn.BatchNorm1d(200),\r\n        )\r\n    def forward(self, x):\r\n        x = self.encoder(x)\r\n        return x\r\nbatch_size = 10000\r\ninp_size = 1\r\nx = Variable(torch.randn(batch_size,inp_size)).cuda()\r\nm = TestModel(inp_size)\r\nm.cuda()\r\nout = m(x)\r\nprint(out.size())\r\nm.eval()\r\nout2 = m(x)\r\n```\r\n"}