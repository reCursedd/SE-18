{"url": "https://api.github.com/repos/pytorch/pytorch/issues/7942", "repository_url": "https://api.github.com/repos/pytorch/pytorch", "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/7942/labels{/name}", "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/7942/comments", "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/7942/events", "html_url": "https://github.com/pytorch/pytorch/pull/7942", "id": 327561531, "node_id": "MDExOlB1bGxSZXF1ZXN0MTkxMzI0NzA3", "number": 7942, "title": "cache and use BLAS_SET_BY_USER so that it doesn't set itself to TRUE", "user": {"login": "soumith", "id": 1310570, "node_id": "MDQ6VXNlcjEzMTA1NzA=", "avatar_url": "https://avatars0.githubusercontent.com/u/1310570?v=4", "gravatar_id": "", "url": "https://api.github.com/users/soumith", "html_url": "https://github.com/soumith", "followers_url": "https://api.github.com/users/soumith/followers", "following_url": "https://api.github.com/users/soumith/following{/other_user}", "gists_url": "https://api.github.com/users/soumith/gists{/gist_id}", "starred_url": "https://api.github.com/users/soumith/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/soumith/subscriptions", "organizations_url": "https://api.github.com/users/soumith/orgs", "repos_url": "https://api.github.com/users/soumith/repos", "events_url": "https://api.github.com/users/soumith/events{/privacy}", "received_events_url": "https://api.github.com/users/soumith/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-05-30T03:36:00Z", "updated_at": "2018-09-20T16:54:46Z", "closed_at": "2018-05-30T18:44:24Z", "author_association": "MEMBER", "pull_request": {"url": "https://api.github.com/repos/pytorch/pytorch/pulls/7942", "html_url": "https://github.com/pytorch/pytorch/pull/7942", "diff_url": "https://github.com/pytorch/pytorch/pull/7942.diff", "patch_url": "https://github.com/pytorch/pytorch/pull/7942.patch"}, "body_html": "<p>cache and use BLAS_SET_BY_USER so that it doesn't set itself to TRUE when run a second time.</p>\n<p>This fixes the issue that if you run cmake a second time, but you dont actually have MKL in your environment, then cmake errors out.</p>\n<p>The blas detection is still quite hairy and needs to be converged. I can get to that as a follow-up.</p>\n<p>Things that need to be fixed:</p>\n<ul>\n<li>If MKL is not found, Caffe2 and PyTorch end up using different BLAS libs, because Caffe2 uses Eigen and PyTorch ends up finding whatever is the system BLAS (like openblas, Accelerate, cblas, etc.).</li>\n<li>The PyTorch/Caffe2 blas detection logic is different (so has risks of divergence)</li>\n<li>BLAS detection overlaps with library detection\n<ul>\n<li>Caffe2 and PyTorch detect Eigen and MKL as \"BLAS\" / \"LAPACK\" libs, but they actually end up special-casing these libs and use additional functionality (including the headers). This needs to be cleaned up.</li>\n</ul>\n</li>\n</ul>", "body_text": "cache and use BLAS_SET_BY_USER so that it doesn't set itself to TRUE when run a second time.\nThis fixes the issue that if you run cmake a second time, but you dont actually have MKL in your environment, then cmake errors out.\nThe blas detection is still quite hairy and needs to be converged. I can get to that as a follow-up.\nThings that need to be fixed:\n\nIf MKL is not found, Caffe2 and PyTorch end up using different BLAS libs, because Caffe2 uses Eigen and PyTorch ends up finding whatever is the system BLAS (like openblas, Accelerate, cblas, etc.).\nThe PyTorch/Caffe2 blas detection logic is different (so has risks of divergence)\nBLAS detection overlaps with library detection\n\nCaffe2 and PyTorch detect Eigen and MKL as \"BLAS\" / \"LAPACK\" libs, but they actually end up special-casing these libs and use additional functionality (including the headers). This needs to be cleaned up.", "body": "cache and use BLAS_SET_BY_USER so that it doesn't set itself to TRUE when run a second time.\r\n\r\nThis fixes the issue that if you run cmake a second time, but you dont actually have MKL in your environment, then cmake errors out.\r\n\r\nThe blas detection is still quite hairy and needs to be converged. I can get to that as a follow-up.\r\n\r\nThings that need to be fixed:\r\n\r\n- If MKL is not found, Caffe2 and PyTorch end up using different BLAS libs, because Caffe2 uses Eigen and PyTorch ends up finding whatever is the system BLAS (like openblas, Accelerate, cblas, etc.).\r\n- The PyTorch/Caffe2 blas detection logic is different (so has risks of divergence)\r\n- BLAS detection overlaps with library detection\r\n  - Caffe2 and PyTorch detect Eigen and MKL as \"BLAS\" / \"LAPACK\" libs, but they actually end up special-casing these libs and use additional functionality (including the headers). This needs to be cleaned up.\r\n"}