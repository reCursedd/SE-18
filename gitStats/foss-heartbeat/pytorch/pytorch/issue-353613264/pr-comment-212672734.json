{"url": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/212672734", "pull_request_review_id": 149358750, "id": 212672734, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIxMjY3MjczNA==", "diff_hunk": "@@ -205,6 +196,64 @@ bool canPropagateShapeByRunningIt(Node* node) {\n   return true;\n }\n \n+bool PropagateTensorShapeOnNode(\n+    Node * node, bool insert_expands, std::vector<TensorTypePtr> types);\n+bool PropagateCompleteShapeOnNode(\n+    Node * node, bool insert_expands, std::vector<CompleteTensorTypePtr> types);\n+\n+void PropagateCatShape(Node * cat_node) {", "path": "torch/csrc/jit/passes/shape_analysis.cpp", "position": 141, "original_position": 105, "commit_id": "acc2435ce6aed9b51258e32ff56124a11eaacd82", "original_commit_id": "5c300b6e70abb13121d37deac2f2bb9563d92a7b", "user": {"login": "apaszke", "id": 4583066, "node_id": "MDQ6VXNlcjQ1ODMwNjY=", "avatar_url": "https://avatars3.githubusercontent.com/u/4583066?v=4", "gravatar_id": "", "url": "https://api.github.com/users/apaszke", "html_url": "https://github.com/apaszke", "followers_url": "https://api.github.com/users/apaszke/followers", "following_url": "https://api.github.com/users/apaszke/following{/other_user}", "gists_url": "https://api.github.com/users/apaszke/gists{/gist_id}", "starred_url": "https://api.github.com/users/apaszke/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/apaszke/subscriptions", "organizations_url": "https://api.github.com/users/apaszke/orgs", "repos_url": "https://api.github.com/users/apaszke/repos", "events_url": "https://api.github.com/users/apaszke/events{/privacy}", "received_events_url": "https://api.github.com/users/apaszke/received_events", "type": "User", "site_admin": false}, "body": "I'm not exactly sure what you mean. This is exactly what happens now. If all arguments have complete type information available, we will try to use the complete shape prop. If this fails, those arguments still have valid `TensorType`s, and so we'll try to use the less detailed function. Finally, if this one fails too, we try to resort to shape prop by running.", "created_at": "2018-08-24T15:48:58Z", "updated_at": "2018-11-23T15:49:56Z", "html_url": "https://github.com/pytorch/pytorch/pull/10844#discussion_r212672734", "pull_request_url": "https://api.github.com/repos/pytorch/pytorch/pulls/10844", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/212672734"}, "html": {"href": "https://github.com/pytorch/pytorch/pull/10844#discussion_r212672734"}, "pull_request": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/10844"}}, "body_html": "<p>I'm not exactly sure what you mean. This is exactly what happens now. If all arguments have complete type information available, we will try to use the complete shape prop. If this fails, those arguments still have valid <code>TensorType</code>s, and so we'll try to use the less detailed function. Finally, if this one fails too, we try to resort to shape prop by running.</p>", "body_text": "I'm not exactly sure what you mean. This is exactly what happens now. If all arguments have complete type information available, we will try to use the complete shape prop. If this fails, those arguments still have valid TensorTypes, and so we'll try to use the less detailed function. Finally, if this one fails too, we try to resort to shape prop by running.", "in_reply_to_id": 212665892}