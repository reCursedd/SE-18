{"url": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/212657302", "pull_request_review_id": 149339579, "id": 212657302, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIxMjY1NzMwMg==", "diff_hunk": "@@ -463,19 +545,16 @@ std::tuple<std::vector<PartitionDesc>,std::vector<PartitionDesc>,bool> emitCompi\n   {\n     size_t input_index = 0;\n     for(auto p : subgraph.inputs()) {\n-      if (auto chunk = usedInFusedChunk(p)) {\n+      if (Node * chunk = usedInFusedChunk(p)) {\n         int64_t dim = chunk->i(attr::dim);\n         int64_t chunks = chunk->i(attr::chunks);\n-\t\t\t\tauto tensor_type = p->type()->cast<TensorType>();\n-        chunk_desc.emplace_back(tensor_type, chunks, dim, false);\n-\n+        chunk_desc.emplace_back(agraph.input_desc[input_index++], chunks, dim);\n         for (auto * o : chunk->outputs()) {\n           flat_inputs.emplace_back(o, *chunk_desc.back().subtensorDesc);\n         }\n-        ++input_index;\n       } else {\n-        flat_inputs.emplace_back(p, agraph.input_desc[input_index++]);\n         chunk_desc.emplace_back();\n+        flat_inputs.emplace_back(p, agraph.input_desc[input_index++]);", "path": "torch/csrc/jit/fusion_compiler.cpp", "position": 168, "original_position": 164, "commit_id": "acc2435ce6aed9b51258e32ff56124a11eaacd82", "original_commit_id": "5c300b6e70abb13121d37deac2f2bb9563d92a7b", "user": {"login": "ezyang", "id": 13564, "node_id": "MDQ6VXNlcjEzNTY0", "avatar_url": "https://avatars0.githubusercontent.com/u/13564?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ezyang", "html_url": "https://github.com/ezyang", "followers_url": "https://api.github.com/users/ezyang/followers", "following_url": "https://api.github.com/users/ezyang/following{/other_user}", "gists_url": "https://api.github.com/users/ezyang/gists{/gist_id}", "starred_url": "https://api.github.com/users/ezyang/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ezyang/subscriptions", "organizations_url": "https://api.github.com/users/ezyang/orgs", "repos_url": "https://api.github.com/users/ezyang/repos", "events_url": "https://api.github.com/users/ezyang/events{/privacy}", "received_events_url": "https://api.github.com/users/ezyang/received_events", "type": "User", "site_admin": false}, "body": "If `input_index++` is always incremented, why not just move it out of the conditional XD", "created_at": "2018-08-24T14:59:21Z", "updated_at": "2018-11-23T15:49:54Z", "html_url": "https://github.com/pytorch/pytorch/pull/10844#discussion_r212657302", "pull_request_url": "https://api.github.com/repos/pytorch/pytorch/pulls/10844", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/212657302"}, "html": {"href": "https://github.com/pytorch/pytorch/pull/10844#discussion_r212657302"}, "pull_request": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/10844"}}, "body_html": "<p>If <code>input_index++</code> is always incremented, why not just move it out of the conditional XD</p>", "body_text": "If input_index++ is always incremented, why not just move it out of the conditional XD"}