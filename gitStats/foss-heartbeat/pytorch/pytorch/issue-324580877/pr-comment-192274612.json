{"url": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/192274612", "pull_request_review_id": 125019842, "id": 192274612, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5MjI3NDYxMg==", "diff_hunk": "@@ -84,9 +90,40 @@ const ::gloo::ReductionFunction<T>* reductionFunction(const ReduceOp& r) {\n   throw std::runtime_error(\"Unhandled ReduceOp\");\n }\n \n+std::vector<cudaStream_t> getStreamVector(AlgorithmEntry& entry) {\n+  std::vector<cudaStream_t> streams(entry.streams.size());\n+  for (auto i = 0; i < entry.streams.size(); i++) {\n+    streams[i] = entry.streams[i].getStream();\n+  }\n+  return streams;\n+}\n+\n+// synchronizeStreams ensures that the private streams associated with\n+// an algorithm entry wait for the public streams to complete.\n+void synchronizeStreams(THCState* thcState, AlgorithmEntry* entry) {\n+  CUDADevice deviceGuard;\n+  const auto& key = entry->key;\n+  for (auto i = 0; i < key.devices.size(); i++) {\n+    const auto& device = key.devices[i];", "path": "torch/lib/c10d/ProcessGroupGloo.cpp", "position": 34, "original_position": 34, "commit_id": "b7e7f6c93df088eafff4c0a99ce4476519a4f489", "original_commit_id": "b7e7f6c93df088eafff4c0a99ce4476519a4f489", "user": {"login": "teng-li", "id": 8120856, "node_id": "MDQ6VXNlcjgxMjA4NTY=", "avatar_url": "https://avatars2.githubusercontent.com/u/8120856?v=4", "gravatar_id": "", "url": "https://api.github.com/users/teng-li", "html_url": "https://github.com/teng-li", "followers_url": "https://api.github.com/users/teng-li/followers", "following_url": "https://api.github.com/users/teng-li/following{/other_user}", "gists_url": "https://api.github.com/users/teng-li/gists{/gist_id}", "starred_url": "https://api.github.com/users/teng-li/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/teng-li/subscriptions", "organizations_url": "https://api.github.com/users/teng-li/orgs", "repos_url": "https://api.github.com/users/teng-li/repos", "events_url": "https://api.github.com/users/teng-li/events{/privacy}", "received_events_url": "https://api.github.com/users/teng-li/received_events", "type": "User", "site_admin": false}, "body": "maybe you can also do\r\n```\r\ndeviceGuard.setDevice(device);\r\nauto publicStream = THCState_getCurrentStream(thcState):\r\n```\r\n", "created_at": "2018-06-01T00:43:07Z", "updated_at": "2018-11-23T15:44:49Z", "html_url": "https://github.com/pytorch/pytorch/pull/7694#discussion_r192274612", "pull_request_url": "https://api.github.com/repos/pytorch/pytorch/pulls/7694", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/192274612"}, "html": {"href": "https://github.com/pytorch/pytorch/pull/7694#discussion_r192274612"}, "pull_request": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/7694"}}, "body_html": "<p>maybe you can also do</p>\n<pre><code>deviceGuard.setDevice(device);\nauto publicStream = THCState_getCurrentStream(thcState):\n</code></pre>", "body_text": "maybe you can also do\ndeviceGuard.setDevice(device);\nauto publicStream = THCState_getCurrentStream(thcState):"}