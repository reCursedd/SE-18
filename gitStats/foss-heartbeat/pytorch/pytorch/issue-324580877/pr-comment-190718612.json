{"url": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/190718612", "pull_request_review_id": 123156913, "id": 190718612, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5MDcxODYxMg==", "diff_hunk": "@@ -1,8 +1,52 @@\n cmake_minimum_required(VERSION 3.2 FATAL_ERROR)\n-set(CMAKE_MODULE_PATH ${CMAKE_CURRENT_SOURCE_DIR}/../../../cmake ${CMAKE_MODULE_PATH})\n+\n+# Find modules.\n+# Note: this does NOT include <root>/cmake/Modules, because that woud\n+# make find_package resolve to <root>cmake/Modules/FindGloo.cmake\n+# instead of resolving to ../tmp_install/share/cmake/Gloo.\n+list(APPEND CMAKE_MODULE_PATH\n+  /usr/lib/x86_64-linux-gnu/\n+  ${CMAKE_CURRENT_SOURCE_DIR}/../../../cmake/public\n+  ${CMAKE_CURRENT_SOURCE_DIR}/../../../cmake/Modules_CUDA_fix)\n+\n+# Polyfill for upstream FindCUDA\n+include(CMakeInitializeConfigs)\n+\n+# Relies on CMAKE_INSTALL_PREFIX to be set to ../tmp_install.\n+# It then finds $PREFIX/share/cmake/ATen/ATenConfig.cmake,\n+# which defines ATEN_INCLUDE_DIR and ATEN_LIBRARIES.\n+find_package(ATen REQUIRED)\n+if(NOT ATen_FOUND)\n+  message(FATAL_ERROR \"ATen not found\")\n+endif()\n+\n+find_package(Gloo REQUIRED)\n+if(NOT Gloo_FOUND)\n+  message(FATAL_ERROR \"Gloo not found\")\n+endif()\n+\n+find_package(CUDA REQUIRED)", "path": "torch/lib/c10d/CMakeLists.txt", "position": null, "original_position": 29, "commit_id": "b7e7f6c93df088eafff4c0a99ce4476519a4f489", "original_commit_id": "11221d5d226396f78eaba8dc05d45e02fb960a05", "user": {"login": "pietern", "id": 9845, "node_id": "MDQ6VXNlcjk4NDU=", "avatar_url": "https://avatars3.githubusercontent.com/u/9845?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pietern", "html_url": "https://github.com/pietern", "followers_url": "https://api.github.com/users/pietern/followers", "following_url": "https://api.github.com/users/pietern/following{/other_user}", "gists_url": "https://api.github.com/users/pietern/gists{/gist_id}", "starred_url": "https://api.github.com/users/pietern/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pietern/subscriptions", "organizations_url": "https://api.github.com/users/pietern/orgs", "repos_url": "https://api.github.com/users/pietern/repos", "events_url": "https://api.github.com/users/pietern/events{/privacy}", "received_events_url": "https://api.github.com/users/pietern/received_events", "type": "User", "site_admin": false}, "body": "Yep, that's the plan. Don't yet know how, but I want to have backend specific libraries like ATen.", "created_at": "2018-05-24T20:21:09Z", "updated_at": "2018-11-23T15:44:37Z", "html_url": "https://github.com/pytorch/pytorch/pull/7694#discussion_r190718612", "pull_request_url": "https://api.github.com/repos/pytorch/pytorch/pulls/7694", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/190718612"}, "html": {"href": "https://github.com/pytorch/pytorch/pull/7694#discussion_r190718612"}, "pull_request": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/7694"}}, "body_html": "<p>Yep, that's the plan. Don't yet know how, but I want to have backend specific libraries like ATen.</p>", "body_text": "Yep, that's the plan. Don't yet know how, but I want to have backend specific libraries like ATen.", "in_reply_to_id": 189468470}