{"url": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/205334336", "pull_request_review_id": 140536916, "id": 205334336, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwNTMzNDMzNg==", "diff_hunk": "@@ -32,6 +32,60 @@\n # ---------------------------------------------------------------------\n \n \n+def _parse_arg(value, desc):\n+    if desc == 'v' or not _is_value(value):\n+        return value\n+\n+    if value.node().kind() != 'onnx::Constant':\n+        raise RuntimeError(\"ONNX symbolic expected a constant value in the trace\")\n+    tval = value.node()['value']\n+    if desc == 'i':\n+        return int(tval)\n+    elif desc == 'f':\n+        return float(tval)\n+    elif desc == 't':\n+        return tval\n+    elif desc == 'is':\n+        return [int(v) for v in tval]\n+    else:\n+        raise RuntimeError(\"Casting constants to `{}` is not implemented\".format(desc))\n+\n+\n+def _maybe_get_const(value, desc):\n+    if _is_value(value) and value.node().kind() == 'onnx::Constant':\n+        return _parse_arg(value, desc)\n+    return value\n+\n+\n+def _maybe_get_scalar(value):\n+    value_t = _maybe_get_const(value, 't')\n+    if isinstance(value_t, torch.Tensor) and value_t.shape == ():\n+        return value_t\n+    return value\n+\n+\n+def _get_const(value, desc, arg_name):\n+    if _is_value(value) and value.node().kind() != 'onnx::Constant':\n+        raise RuntimeError(\"ONNX symbolic expected a constant value of the {} argument\".format(arg_name))\n+    return _parse_arg(value, desc)\n+\n+\n+def parse_args(*arg_descriptors):\n+    def decorator(fn):\n+        def wrapper(*args):", "path": "torch/onnx/symbolic.py", "position": null, "original_position": 53, "commit_id": "1f52f39901e6d1f1d0d263b5025388a55194ecc6", "original_commit_id": "9ee72f1547825a8e27d9ca8a7f00ce31e9741aae", "user": {"login": "zdevito", "id": 370202, "node_id": "MDQ6VXNlcjM3MDIwMg==", "avatar_url": "https://avatars0.githubusercontent.com/u/370202?v=4", "gravatar_id": "", "url": "https://api.github.com/users/zdevito", "html_url": "https://github.com/zdevito", "followers_url": "https://api.github.com/users/zdevito/followers", "following_url": "https://api.github.com/users/zdevito/following{/other_user}", "gists_url": "https://api.github.com/users/zdevito/gists{/gist_id}", "starred_url": "https://api.github.com/users/zdevito/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/zdevito/subscriptions", "organizations_url": "https://api.github.com/users/zdevito/orgs", "repos_url": "https://api.github.com/users/zdevito/repos", "events_url": "https://api.github.com/users/zdevito/events{/privacy}", "received_events_url": "https://api.github.com/users/zdevito/received_events", "type": "User", "site_admin": false}, "body": "`def wrapper(g, *args)` would simplify the logic, right?", "created_at": "2018-07-26T05:21:34Z", "updated_at": "2018-11-23T15:48:12Z", "html_url": "https://github.com/pytorch/pytorch/pull/9807#discussion_r205334336", "pull_request_url": "https://api.github.com/repos/pytorch/pytorch/pulls/9807", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/205334336"}, "html": {"href": "https://github.com/pytorch/pytorch/pull/9807#discussion_r205334336"}, "pull_request": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/9807"}}, "body_html": "<p><code>def wrapper(g, *args)</code> would simplify the logic, right?</p>", "body_text": "def wrapper(g, *args) would simplify the logic, right?"}