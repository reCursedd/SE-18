{"url": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/205297310", "pull_request_review_id": 140536916, "id": 205297310, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwNTI5NzMxMA==", "diff_hunk": "@@ -514,11 +448,21 @@ at::optional<std::vector<Value*>> tryMatchSchema(\n         err() << \"argument '\" << schema.arguments[i].name << \"' not provided.\\n\" << loc;\n         return at::nullopt;\n       }\n+      // There's little point in instantiating nodes of NumberType, since they will\n+      // always emit a value of a concrete type. That's why we specialize them here.\n+      auto arg_type = schema.arguments[i].type;\n+      if (*arg_type == *NumberType::get()) {\n+        if ((*default_value).isDouble()) {\n+          arg_type = FloatType::get();\n+        } else if ((*default_value).isInt()) {\n+          arg_type = IntType::get();\n+        } else {\n+          throw std::runtime_error(\"Unexpected default value type. File a bug report.\");\n+        }\n+      }\n       positional_inputs[i] = NamedValue(\n-          loc,\n-          i,\n-          insertConstant(graph, *default_value, loc)\n-              ->setType(schema.arguments[i].type));\n+          loc, i,\n+          insertConstant(graph, *default_value, loc)->setType(arg_type));", "path": "torch/csrc/jit/script/compiler.cpp", "position": null, "original_position": 95, "commit_id": "1f52f39901e6d1f1d0d263b5025388a55194ecc6", "original_commit_id": "9ee72f1547825a8e27d9ca8a7f00ce31e9741aae", "user": {"login": "zdevito", "id": 370202, "node_id": "MDQ6VXNlcjM3MDIwMg==", "avatar_url": "https://avatars0.githubusercontent.com/u/370202?v=4", "gravatar_id": "", "url": "https://api.github.com/users/zdevito", "html_url": "https://github.com/zdevito", "followers_url": "https://api.github.com/users/zdevito/followers", "following_url": "https://api.github.com/users/zdevito/following{/other_user}", "gists_url": "https://api.github.com/users/zdevito/gists{/gist_id}", "starred_url": "https://api.github.com/users/zdevito/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/zdevito/subscriptions", "organizations_url": "https://api.github.com/users/zdevito/orgs", "repos_url": "https://api.github.com/users/zdevito/repos", "events_url": "https://api.github.com/users/zdevito/events{/privacy}", "received_events_url": "https://api.github.com/users/zdevito/received_events", "type": "User", "site_admin": false}, "body": "Actually, `insertConstant` already sets the output type correctly. So you can just remove the ->setTypeCall and the if statement above it.", "created_at": "2018-07-26T00:03:14Z", "updated_at": "2018-11-23T15:48:10Z", "html_url": "https://github.com/pytorch/pytorch/pull/9807#discussion_r205297310", "pull_request_url": "https://api.github.com/repos/pytorch/pytorch/pulls/9807", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/205297310"}, "html": {"href": "https://github.com/pytorch/pytorch/pull/9807#discussion_r205297310"}, "pull_request": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/9807"}}, "body_html": "<p>Actually, <code>insertConstant</code> already sets the output type correctly. So you can just remove the -&gt;setTypeCall and the if statement above it.</p>", "body_text": "Actually, insertConstant already sets the output type correctly. So you can just remove the ->setTypeCall and the if statement above it."}