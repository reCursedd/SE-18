{"url": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/198521445", "pull_request_review_id": 132465199, "id": 198521445, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5ODUyMTQ0NQ==", "diff_hunk": "@@ -0,0 +1,23 @@\n+#include \"ATen/ATen.h\"\n+#include \"ATen/NativeFunctions.h\"\n+\n+#define MODE_ZEROS 0\n+#define MODE_BORDER 1\n+\n+namespace at { namespace native {\n+\n+Tensor grid_sampler(const Tensor& input, const Tensor& grid, int64_t padding_mode) {\n+  // as of cudnn 7102, will not work for larger than 1024\n+  if (at::native::cudnn_is_acceptable(input) && padding_mode == MODE_ZEROS && input.dim() == 4 && input.size(1) <= 1024) {\n+    return cudnn_grid_sampler(input, grid);\n+  }\n+  if (input.dim() == 4) {\n+    return thnn_grid_sampler_bilinear2d(input, grid, padding_mode);\n+  }\n+  if (input.dim() == 5) {\n+    return thnn_grid_sampler_bilinear3d(input, grid, padding_mode);\n+  }\n+  AT_ERROR(\"grid_sampler(): input must be 4d or 5d but got input of shape: \", input.dim());\n+}\n+", "path": "aten/src/ATen/native/Vision.cpp", "position": 27, "original_position": 22, "commit_id": "aa209c2a86df94f512b8cd2f49c0c6004258b63b", "original_commit_id": "79e1a808e1ed073054413516da3f97c837ee5682", "user": {"login": "zou3519", "id": 5652049, "node_id": "MDQ6VXNlcjU2NTIwNDk=", "avatar_url": "https://avatars3.githubusercontent.com/u/5652049?v=4", "gravatar_id": "", "url": "https://api.github.com/users/zou3519", "html_url": "https://github.com/zou3519", "followers_url": "https://api.github.com/users/zou3519/followers", "following_url": "https://api.github.com/users/zou3519/following{/other_user}", "gists_url": "https://api.github.com/users/zou3519/gists{/gist_id}", "starred_url": "https://api.github.com/users/zou3519/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/zou3519/subscriptions", "organizations_url": "https://api.github.com/users/zou3519/orgs", "repos_url": "https://api.github.com/users/zou3519/repos", "events_url": "https://api.github.com/users/zou3519/events{/privacy}", "received_events_url": "https://api.github.com/users/zou3519/received_events", "type": "User", "site_admin": false}, "body": "Should we #undef MODE_ZEROS and MODE_BORDER so those macros don't leak to the outside?\r\n\r\nIt might be better if MODE_ZEROS and MODE_BORDER are part of an enum", "created_at": "2018-06-27T14:42:11Z", "updated_at": "2018-11-23T15:46:27Z", "html_url": "https://github.com/pytorch/pytorch/pull/8929#discussion_r198521445", "pull_request_url": "https://api.github.com/repos/pytorch/pytorch/pulls/8929", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/198521445"}, "html": {"href": "https://github.com/pytorch/pytorch/pull/8929#discussion_r198521445"}, "pull_request": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/8929"}}, "body_html": "<p>Should we #undef MODE_ZEROS and MODE_BORDER so those macros don't leak to the outside?</p>\n<p>It might be better if MODE_ZEROS and MODE_BORDER are part of an enum</p>", "body_text": "Should we #undef MODE_ZEROS and MODE_BORDER so those macros don't leak to the outside?\nIt might be better if MODE_ZEROS and MODE_BORDER are part of an enum"}