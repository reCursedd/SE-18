{"url": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/201875054", "pull_request_review_id": 136463273, "id": 201875054, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwMTg3NTA1NA==", "diff_hunk": "@@ -41,8 +41,14 @@ std::vector<Tensor> chunk(const Tensor& self, int64_t chunks, int64_t dim) {\n     AT_ERROR(\"chunk expects `chunks` to be greater than 0, got: \", chunks);\n   }\n   int64_t split_size = (self.size(dim) + chunks - 1) / chunks;\n-  // ensure this is dispatched through Tensor/Type, rather than the native function directly.\n-  return self.split(split_size, dim);\n+\n+  // We need to call split_with_sizes in the case where split_size and dimension size are 0, because\n+  // a call to split would discard the number of chunks (because we can have an arbitrary number of\n+  // 0-sized chunks adding up to 0).  So, call split_with_sizes with the correct number of chunks,\n+  // and do this for all cases for consistency.\n+  std::vector<int64_t> split_sizes(chunks, split_size);", "path": "aten/src/ATen/native/TensorShape.cpp", "position": null, "original_position": 11, "commit_id": "6193143982dbda86bd844b548b0a9e142cf4cd1b", "original_commit_id": "f8468dd729d183130e6b8b3e255538fe18153e79", "user": {"login": "gchanan", "id": 3768583, "node_id": "MDQ6VXNlcjM3Njg1ODM=", "avatar_url": "https://avatars2.githubusercontent.com/u/3768583?v=4", "gravatar_id": "", "url": "https://api.github.com/users/gchanan", "html_url": "https://github.com/gchanan", "followers_url": "https://api.github.com/users/gchanan/followers", "following_url": "https://api.github.com/users/gchanan/following{/other_user}", "gists_url": "https://api.github.com/users/gchanan/gists{/gist_id}", "starred_url": "https://api.github.com/users/gchanan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/gchanan/subscriptions", "organizations_url": "https://api.github.com/users/gchanan/orgs", "repos_url": "https://api.github.com/users/gchanan/repos", "events_url": "https://api.github.com/users/gchanan/events{/privacy}", "received_events_url": "https://api.github.com/users/gchanan/received_events", "type": "User", "site_admin": false}, "body": "Right.  Honestly, split should probably just call split_sizes as well because it's better to just have one implementation than worry about something that isn't going to affect the performance.", "created_at": "2018-07-12T00:01:25Z", "updated_at": "2018-11-23T15:47:13Z", "html_url": "https://github.com/pytorch/pytorch/pull/9362#discussion_r201875054", "pull_request_url": "https://api.github.com/repos/pytorch/pytorch/pulls/9362", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/201875054"}, "html": {"href": "https://github.com/pytorch/pytorch/pull/9362#discussion_r201875054"}, "pull_request": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/9362"}}, "body_html": "<p>Right.  Honestly, split should probably just call split_sizes as well because it's better to just have one implementation than worry about something that isn't going to affect the performance.</p>", "body_text": "Right.  Honestly, split should probably just call split_sizes as well because it's better to just have one implementation than worry about something that isn't going to affect the performance.", "in_reply_to_id": 201867418}