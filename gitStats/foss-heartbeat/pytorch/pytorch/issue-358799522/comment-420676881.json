{"url": "https://api.github.com/repos/pytorch/pytorch/issues/comments/420676881", "html_url": "https://github.com/pytorch/pytorch/pull/11485#issuecomment-420676881", "issue_url": "https://api.github.com/repos/pytorch/pytorch/issues/11485", "id": 420676881, "node_id": "MDEyOklzc3VlQ29tbWVudDQyMDY3Njg4MQ==", "user": {"login": "zou3519", "id": 5652049, "node_id": "MDQ6VXNlcjU2NTIwNDk=", "avatar_url": "https://avatars3.githubusercontent.com/u/5652049?v=4", "gravatar_id": "", "url": "https://api.github.com/users/zou3519", "html_url": "https://github.com/zou3519", "followers_url": "https://api.github.com/users/zou3519/followers", "following_url": "https://api.github.com/users/zou3519/following{/other_user}", "gists_url": "https://api.github.com/users/zou3519/gists{/gist_id}", "starred_url": "https://api.github.com/users/zou3519/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/zou3519/subscriptions", "organizations_url": "https://api.github.com/users/zou3519/orgs", "repos_url": "https://api.github.com/users/zou3519/repos", "events_url": "https://api.github.com/users/zou3519/events{/privacy}", "received_events_url": "https://api.github.com/users/zou3519/received_events", "type": "User", "site_admin": false}, "created_at": "2018-09-12T14:48:58Z", "updated_at": "2018-09-12T14:48:58Z", "author_association": "CONTRIBUTOR", "body_html": "<p><a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=4583066\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/apaszke\">@apaszke</a> I don't think so, torch.jit.load still loads saved CUDA models onto the CPU. One still has to call .cuda() to bring them back to being CUDA models.</p>", "body_text": "@apaszke I don't think so, torch.jit.load still loads saved CUDA models onto the CPU. One still has to call .cuda() to bring them back to being CUDA models.", "body": "@apaszke I don't think so, torch.jit.load still loads saved CUDA models onto the CPU. One still has to call .cuda() to bring them back to being CUDA models."}