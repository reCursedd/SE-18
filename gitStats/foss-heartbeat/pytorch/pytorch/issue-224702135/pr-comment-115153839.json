{"url": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/115153839", "pull_request_review_id": 36673299, "id": 115153839, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDExNTE1MzgzOQ==", "diff_hunk": "@@ -124,3 +124,40 @@ def pad_packed_sequence(sequence, batch_first=False):\n     if batch_first:\n         output = output.transpose(0, 1)\n     return output, lengths\n+\n+def get_last_step_indices(lengths):\n+    \"\"\"A helper function for :func:`get_last_step_tensor`.\n+\n+    The returned indices is used to select the last step of a :class:`PackedSequence` object.\n+\n+    Arguments:\n+        lengths (list[int]): list of sequences lengths of each batch element.\n+\n+    Returns:\n+        List of int containing the indices of the last step of each sequence.\n+    \"\"\"\n+    indices = []\n+    for i, length in enumerate(lengths):\n+        index = sum([min(length - 1, l) for l in lengths]) + i\n+        indices.append(index)\n+    return indices", "path": "torch/nn/utils/rnn.py", "position": null, "original_position": 20, "commit_id": "8b22c4249b471c2b15eea183e916e042816ef671", "original_commit_id": "9a5371d68475be691a46a111ed0bf3fd2143b10a", "user": {"login": "apaszke", "id": 4583066, "node_id": "MDQ6VXNlcjQ1ODMwNjY=", "avatar_url": "https://avatars3.githubusercontent.com/u/4583066?v=4", "gravatar_id": "", "url": "https://api.github.com/users/apaszke", "html_url": "https://github.com/apaszke", "followers_url": "https://api.github.com/users/apaszke/followers", "following_url": "https://api.github.com/users/apaszke/following{/other_user}", "gists_url": "https://api.github.com/users/apaszke/gists{/gist_id}", "starred_url": "https://api.github.com/users/apaszke/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/apaszke/subscriptions", "organizations_url": "https://api.github.com/users/apaszke/orgs", "repos_url": "https://api.github.com/users/apaszke/repos", "events_url": "https://api.github.com/users/apaszke/events{/privacy}", "received_events_url": "https://api.github.com/users/apaszke/received_events", "type": "User", "site_admin": false}, "body": "This can be computed in O(n) time instead of O(n^2):\r\n```python\r\nn_lengths = len(lengths)\r\nrev_lengths = lengths[::-1]\r\nrev_lengths_sum = torch.LongTensor(rev_lengths).cumsum()\r\nreturn torch.LongTensor([(n_lengths - i - 1) * length + rev_lengths_sum[i]\r\n                         for i, length in enumerate(rev_lengths)])\r\n```", "created_at": "2017-05-07T20:59:40Z", "updated_at": "2018-11-23T15:33:23Z", "html_url": "https://github.com/pytorch/pytorch/pull/1375#discussion_r115153839", "pull_request_url": "https://api.github.com/repos/pytorch/pytorch/pulls/1375", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/115153839"}, "html": {"href": "https://github.com/pytorch/pytorch/pull/1375#discussion_r115153839"}, "pull_request": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/1375"}}, "body_html": "<p>This can be computed in O(n) time instead of O(n^2):</p>\n<div class=\"highlight highlight-source-python\"><pre>n_lengths <span class=\"pl-k\">=</span> <span class=\"pl-c1\">len</span>(lengths)\nrev_lengths <span class=\"pl-k\">=</span> lengths[::<span class=\"pl-k\">-</span><span class=\"pl-c1\">1</span>]\nrev_lengths_sum <span class=\"pl-k\">=</span> torch.LongTensor(rev_lengths).cumsum()\n<span class=\"pl-k\">return</span> torch.LongTensor([(n_lengths <span class=\"pl-k\">-</span> i <span class=\"pl-k\">-</span> <span class=\"pl-c1\">1</span>) <span class=\"pl-k\">*</span> length <span class=\"pl-k\">+</span> rev_lengths_sum[i]\n                         <span class=\"pl-k\">for</span> i, length <span class=\"pl-k\">in</span> <span class=\"pl-c1\">enumerate</span>(rev_lengths)])</pre></div>", "body_text": "This can be computed in O(n) time instead of O(n^2):\nn_lengths = len(lengths)\nrev_lengths = lengths[::-1]\nrev_lengths_sum = torch.LongTensor(rev_lengths).cumsum()\nreturn torch.LongTensor([(n_lengths - i - 1) * length + rev_lengths_sum[i]\n                         for i, length in enumerate(rev_lengths)])"}