{"url": "https://api.github.com/repos/pytorch/pytorch/issues/comments/258999035", "html_url": "https://github.com/pytorch/pytorch/issues/199#issuecomment-258999035", "issue_url": "https://api.github.com/repos/pytorch/pytorch/issues/199", "id": 258999035, "node_id": "MDEyOklzc3VlQ29tbWVudDI1ODk5OTAzNQ==", "user": {"login": "bamos", "id": 707462, "node_id": "MDQ6VXNlcjcwNzQ2Mg==", "avatar_url": "https://avatars1.githubusercontent.com/u/707462?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bamos", "html_url": "https://github.com/bamos", "followers_url": "https://api.github.com/users/bamos/followers", "following_url": "https://api.github.com/users/bamos/following{/other_user}", "gists_url": "https://api.github.com/users/bamos/gists{/gist_id}", "starred_url": "https://api.github.com/users/bamos/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bamos/subscriptions", "organizations_url": "https://api.github.com/users/bamos/orgs", "repos_url": "https://api.github.com/users/bamos/repos", "events_url": "https://api.github.com/users/bamos/events{/privacy}", "received_events_url": "https://api.github.com/users/bamos/received_events", "type": "User", "site_admin": false}, "created_at": "2016-11-07T23:37:36Z", "updated_at": "2016-11-07T23:37:36Z", "author_association": "CONTRIBUTOR", "body_html": "<p>Thanks Soumith and Adam. I've updated my <code>/usr/lib/libopenblas.so</code> library to have both BLAS and LAPACK instead of just BLAS and calling <code>torch.potrf</code> on my bad example from earlier is working great now.</p>\n<hr>\n<p>As a minor note, Torch's cmake files can't detect the LAPACK part of <code>/usr/lib/libopenblas.so</code>.  Here is the <code>cheev_</code> symbol defined in <code>/usr/lib/libopenblas.so</code>:</p>\n<pre><code>pytorch(master*)$ nm -D /usr/lib/libopenblas.so | grep cheev_\n00000000007b2fbf T cheev_\n</code></pre>\n<p>Here is the cmake output showing it can't detect that <code>/usr/lib/libopenblas.so</code> was compiled with Lapack support:</p>\n<pre><code>-- Checking for [openblas]\n--   Library openblas: /usr/lib/libopenblas.so\n-- Found a library with BLAS API (open).\n-- It seems OpenBlas has not been compiled with Lapack support\n-- Found a library with LAPACK API. (generic)\n</code></pre>\n<p>Here is the relevant line in <code>torch/lib/TH/cmake/FindLAPACK.cmake</code> that checks for LAPACK by looking for the <code>cheev_</code> function:</p>\n<div class=\"highlight highlight-source-cmake\"><pre><span class=\"pl-c\"><span class=\"pl-c\">#</span> OpenBlas</span>\n<span class=\"pl-k\">IF</span>((<span class=\"pl-k\">NOT</span> LAPACK_INFO) AND (BLAS_INFO STREQUAL <span class=\"pl-s\">\"open\"</span>))\n  <span class=\"pl-c1\">SET</span>(CMAKE_REQUIRED_LIBRARIES <span class=\"pl-smi\">${BLAS_LIBRARIES}</span>)\n  check_function_exists(<span class=\"pl-s\">\"cheev_\"</span> OPEN_LAPACK_WORKS)\n  <span class=\"pl-k\">if</span>(OPEN_LAPACK_WORKS)\n    <span class=\"pl-c1\">SET</span>(LAPACK_INFO <span class=\"pl-s\">\"open\"</span>)\n  <span class=\"pl-k\">else</span>()\n    <span class=\"pl-c1\">message</span>(STATUS <span class=\"pl-s\">\"It seems OpenBlas has not been compiled with Lapack support\"</span>)\n  <span class=\"pl-k\">endif</span>()\n<span class=\"pl-k\">endif</span>()</pre></div>", "body_text": "Thanks Soumith and Adam. I've updated my /usr/lib/libopenblas.so library to have both BLAS and LAPACK instead of just BLAS and calling torch.potrf on my bad example from earlier is working great now.\n\nAs a minor note, Torch's cmake files can't detect the LAPACK part of /usr/lib/libopenblas.so.  Here is the cheev_ symbol defined in /usr/lib/libopenblas.so:\npytorch(master*)$ nm -D /usr/lib/libopenblas.so | grep cheev_\n00000000007b2fbf T cheev_\n\nHere is the cmake output showing it can't detect that /usr/lib/libopenblas.so was compiled with Lapack support:\n-- Checking for [openblas]\n--   Library openblas: /usr/lib/libopenblas.so\n-- Found a library with BLAS API (open).\n-- It seems OpenBlas has not been compiled with Lapack support\n-- Found a library with LAPACK API. (generic)\n\nHere is the relevant line in torch/lib/TH/cmake/FindLAPACK.cmake that checks for LAPACK by looking for the cheev_ function:\n# OpenBlas\nIF((NOT LAPACK_INFO) AND (BLAS_INFO STREQUAL \"open\"))\n  SET(CMAKE_REQUIRED_LIBRARIES ${BLAS_LIBRARIES})\n  check_function_exists(\"cheev_\" OPEN_LAPACK_WORKS)\n  if(OPEN_LAPACK_WORKS)\n    SET(LAPACK_INFO \"open\")\n  else()\n    message(STATUS \"It seems OpenBlas has not been compiled with Lapack support\")\n  endif()\nendif()", "body": "Thanks Soumith and Adam. I've updated my `/usr/lib/libopenblas.so` library to have both BLAS and LAPACK instead of just BLAS and calling `torch.potrf` on my bad example from earlier is working great now.\n\n---\n\nAs a minor note, Torch's cmake files can't detect the LAPACK part of `/usr/lib/libopenblas.so`.  Here is the `cheev_` symbol defined in `/usr/lib/libopenblas.so`:\n\n```\npytorch(master*)$ nm -D /usr/lib/libopenblas.so | grep cheev_\n00000000007b2fbf T cheev_\n```\n\nHere is the cmake output showing it can't detect that `/usr/lib/libopenblas.so` was compiled with Lapack support:\n\n```\n-- Checking for [openblas]\n--   Library openblas: /usr/lib/libopenblas.so\n-- Found a library with BLAS API (open).\n-- It seems OpenBlas has not been compiled with Lapack support\n-- Found a library with LAPACK API. (generic)\n```\n\nHere is the relevant line in `torch/lib/TH/cmake/FindLAPACK.cmake` that checks for LAPACK by looking for the `cheev_` function:\n\n``` cmake\n# OpenBlas\nIF((NOT LAPACK_INFO) AND (BLAS_INFO STREQUAL \"open\"))\n  SET(CMAKE_REQUIRED_LIBRARIES ${BLAS_LIBRARIES})\n  check_function_exists(\"cheev_\" OPEN_LAPACK_WORKS)\n  if(OPEN_LAPACK_WORKS)\n    SET(LAPACK_INFO \"open\")\n  else()\n    message(STATUS \"It seems OpenBlas has not been compiled with Lapack support\")\n  endif()\nendif()\n```\n"}