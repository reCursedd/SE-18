{"url": "https://api.github.com/repos/pytorch/pytorch/issues/199", "repository_url": "https://api.github.com/repos/pytorch/pytorch", "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/199/labels{/name}", "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/199/comments", "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/199/events", "html_url": "https://github.com/pytorch/pytorch/issues/199", "id": 186949783, "node_id": "MDU6SXNzdWUxODY5NDk3ODM=", "number": 199, "title": "torch.potrf fails on a positive definite matrix", "user": {"login": "bamos", "id": 707462, "node_id": "MDQ6VXNlcjcwNzQ2Mg==", "avatar_url": "https://avatars1.githubusercontent.com/u/707462?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bamos", "html_url": "https://github.com/bamos", "followers_url": "https://api.github.com/users/bamos/followers", "following_url": "https://api.github.com/users/bamos/following{/other_user}", "gists_url": "https://api.github.com/users/bamos/gists{/gist_id}", "starred_url": "https://api.github.com/users/bamos/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bamos/subscriptions", "organizations_url": "https://api.github.com/users/bamos/orgs", "repos_url": "https://api.github.com/users/bamos/repos", "events_url": "https://api.github.com/users/bamos/events{/privacy}", "received_events_url": "https://api.github.com/users/bamos/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 424131847, "node_id": "MDU6TGFiZWw0MjQxMzE4NDc=", "url": "https://api.github.com/repos/pytorch/pytorch/labels/bug", "name": "bug", "color": "b60205", "default": true}, {"id": 443484135, "node_id": "MDU6TGFiZWw0NDM0ODQxMzU=", "url": "https://api.github.com/repos/pytorch/pytorch/labels/high%20priority", "name": "high priority", "color": "F22613", "default": false}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 11, "created_at": "2016-11-02T23:47:08Z", "updated_at": "2016-11-07T23:37:36Z", "closed_at": "2016-11-07T23:37:36Z", "author_association": "CONTRIBUTOR", "body_html": "<p>Hi, I could potentially be overlooking something simple here, but I think I'm hitting a rare edge case in <code>torch.potrf</code>. I've temporarily uploaded a 100x100 Tensor <a href=\"https://drive.google.com/open?id=0B9teuNU2y8wESndWVk5ORHp6OVk\" rel=\"nofollow\">here</a> that is positive definite. Numpy can compute the Cholesky on it, but Torch throws an error. As a hacky workaround I use <code>torch.Tensor(np.linalg.cholesky(X.cpu().numpy())).type_as(X)</code> if the factorization in Torch fails.</p>\n<h2>Source</h2>\n<div class=\"highlight highlight-source-python\"><pre><span class=\"pl-c\"><span class=\"pl-c\">#</span>!/usr/bin/env python3</span>\n\n<span class=\"pl-k\">import</span> numpy <span class=\"pl-k\">as</span> np\n<span class=\"pl-k\">import</span> numpy.random <span class=\"pl-k\">as</span> npr\n<span class=\"pl-k\">import</span> torch\n\n<span class=\"pl-k\">with</span> <span class=\"pl-c1\">open</span>(<span class=\"pl-s\"><span class=\"pl-pds\">'</span>X.pt<span class=\"pl-pds\">'</span></span>, <span class=\"pl-s\"><span class=\"pl-pds\">'</span>rb<span class=\"pl-pds\">'</span></span>) <span class=\"pl-k\">as</span> f: X <span class=\"pl-k\">=</span> torch.load(f)\nX_np <span class=\"pl-k\">=</span> X.numpy()\n\n<span class=\"pl-c1\">print</span>(<span class=\"pl-s\"><span class=\"pl-pds\">'</span>=== X is positive-definite, the minimum eigenvalue is:<span class=\"pl-pds\">'</span></span>,\n      np.min(np.linalg.eigvals(X_np)))\n\n<span class=\"pl-c1\">print</span>(<span class=\"pl-s\"><span class=\"pl-pds\">'</span><span class=\"pl-cce\">\\n\\n</span>=== Cholesky with np:<span class=\"pl-pds\">'</span></span>)\n<span class=\"pl-c1\">print</span>(np.linalg.cholesky(X_np))\n\n<span class=\"pl-c1\">print</span>(<span class=\"pl-s\"><span class=\"pl-pds\">'</span><span class=\"pl-cce\">\\n\\n</span>=== Cholesky with Torch:<span class=\"pl-pds\">'</span></span>)\n<span class=\"pl-c1\">print</span>(torch.potrf(X))</pre></div>\n<h2>Output</h2>\n<pre><code>=== X is positive-definite, the minimum eigenvalue is: 1.94934e-05\n\n\n=== Cholesky with np:\n[[  8.96033478   0.           0.         ...,   0.           0.           0.        ]\n [  0.12424465   7.53945875   0.         ...,   0.           0.           0.        ]\n [  2.70835567   0.68308622   7.09788656 ...,   0.           0.           0.        ]\n ...,\n [ -5.82428885   7.08884764 -10.74139786 ...,   0.26134527   0.           0.        ]\n [  0.87781757   1.51691735  -2.78839183 ...,   0.1106414    0.07375667\n    0.        ]\n [  0.40712687   4.66132307  -4.44510603 ...,   0.2638523    0.01533402\n    0.04457394]]\n\n\n=== Cholesky with Torch:\nTraceback (most recent call last):\n  File \"./t2.py\", line 17, in &lt;module&gt;\n    print(torch.potrf(X))\nRuntimeError: Lapack Error in potrf : the leading minor of order 100 is not positive definite at /home/bamos/src/pytorch/torch/lib/TH/generic/THTensorLapack.c:567\n</code></pre>", "body_text": "Hi, I could potentially be overlooking something simple here, but I think I'm hitting a rare edge case in torch.potrf. I've temporarily uploaded a 100x100 Tensor here that is positive definite. Numpy can compute the Cholesky on it, but Torch throws an error. As a hacky workaround I use torch.Tensor(np.linalg.cholesky(X.cpu().numpy())).type_as(X) if the factorization in Torch fails.\nSource\n#!/usr/bin/env python3\n\nimport numpy as np\nimport numpy.random as npr\nimport torch\n\nwith open('X.pt', 'rb') as f: X = torch.load(f)\nX_np = X.numpy()\n\nprint('=== X is positive-definite, the minimum eigenvalue is:',\n      np.min(np.linalg.eigvals(X_np)))\n\nprint('\\n\\n=== Cholesky with np:')\nprint(np.linalg.cholesky(X_np))\n\nprint('\\n\\n=== Cholesky with Torch:')\nprint(torch.potrf(X))\nOutput\n=== X is positive-definite, the minimum eigenvalue is: 1.94934e-05\n\n\n=== Cholesky with np:\n[[  8.96033478   0.           0.         ...,   0.           0.           0.        ]\n [  0.12424465   7.53945875   0.         ...,   0.           0.           0.        ]\n [  2.70835567   0.68308622   7.09788656 ...,   0.           0.           0.        ]\n ...,\n [ -5.82428885   7.08884764 -10.74139786 ...,   0.26134527   0.           0.        ]\n [  0.87781757   1.51691735  -2.78839183 ...,   0.1106414    0.07375667\n    0.        ]\n [  0.40712687   4.66132307  -4.44510603 ...,   0.2638523    0.01533402\n    0.04457394]]\n\n\n=== Cholesky with Torch:\nTraceback (most recent call last):\n  File \"./t2.py\", line 17, in <module>\n    print(torch.potrf(X))\nRuntimeError: Lapack Error in potrf : the leading minor of order 100 is not positive definite at /home/bamos/src/pytorch/torch/lib/TH/generic/THTensorLapack.c:567", "body": "Hi, I could potentially be overlooking something simple here, but I think I'm hitting a rare edge case in `torch.potrf`. I've temporarily uploaded a 100x100 Tensor [here](https://drive.google.com/open?id=0B9teuNU2y8wESndWVk5ORHp6OVk) that is positive definite. Numpy can compute the Cholesky on it, but Torch throws an error. As a hacky workaround I use `torch.Tensor(np.linalg.cholesky(X.cpu().numpy())).type_as(X)` if the factorization in Torch fails.\r\n\r\n## Source\r\n\r\n```Python\r\n#!/usr/bin/env python3\r\n\r\nimport numpy as np\r\nimport numpy.random as npr\r\nimport torch\r\n\r\nwith open('X.pt', 'rb') as f: X = torch.load(f)\r\nX_np = X.numpy()\r\n\r\nprint('=== X is positive-definite, the minimum eigenvalue is:',\r\n      np.min(np.linalg.eigvals(X_np)))\r\n\r\nprint('\\n\\n=== Cholesky with np:')\r\nprint(np.linalg.cholesky(X_np))\r\n\r\nprint('\\n\\n=== Cholesky with Torch:')\r\nprint(torch.potrf(X))\r\n```\r\n\r\n## Output\r\n\r\n```\r\n=== X is positive-definite, the minimum eigenvalue is: 1.94934e-05\r\n\r\n\r\n=== Cholesky with np:\r\n[[  8.96033478   0.           0.         ...,   0.           0.           0.        ]\r\n [  0.12424465   7.53945875   0.         ...,   0.           0.           0.        ]\r\n [  2.70835567   0.68308622   7.09788656 ...,   0.           0.           0.        ]\r\n ...,\r\n [ -5.82428885   7.08884764 -10.74139786 ...,   0.26134527   0.           0.        ]\r\n [  0.87781757   1.51691735  -2.78839183 ...,   0.1106414    0.07375667\r\n    0.        ]\r\n [  0.40712687   4.66132307  -4.44510603 ...,   0.2638523    0.01533402\r\n    0.04457394]]\r\n\r\n\r\n=== Cholesky with Torch:\r\nTraceback (most recent call last):\r\n  File \"./t2.py\", line 17, in <module>\r\n    print(torch.potrf(X))\r\nRuntimeError: Lapack Error in potrf : the leading minor of order 100 is not positive definite at /home/bamos/src/pytorch/torch/lib/TH/generic/THTensorLapack.c:567\r\n```"}