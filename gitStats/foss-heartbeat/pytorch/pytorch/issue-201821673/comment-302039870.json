{"url": "https://api.github.com/repos/pytorch/pytorch/issues/comments/302039870", "html_url": "https://github.com/pytorch/pytorch/issues/499#issuecomment-302039870", "issue_url": "https://api.github.com/repos/pytorch/pytorch/issues/499", "id": 302039870, "node_id": "MDEyOklzc3VlQ29tbWVudDMwMjAzOTg3MA==", "user": {"login": "1zb", "id": 4254703, "node_id": "MDQ6VXNlcjQyNTQ3MDM=", "avatar_url": "https://avatars3.githubusercontent.com/u/4254703?v=4", "gravatar_id": "", "url": "https://api.github.com/users/1zb", "html_url": "https://github.com/1zb", "followers_url": "https://api.github.com/users/1zb/followers", "following_url": "https://api.github.com/users/1zb/following{/other_user}", "gists_url": "https://api.github.com/users/1zb/gists{/gist_id}", "starred_url": "https://api.github.com/users/1zb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/1zb/subscriptions", "organizations_url": "https://api.github.com/users/1zb/orgs", "repos_url": "https://api.github.com/users/1zb/repos", "events_url": "https://api.github.com/users/1zb/events{/privacy}", "received_events_url": "https://api.github.com/users/1zb/received_events", "type": "User", "site_admin": false}, "created_at": "2017-05-17T09:40:43Z", "updated_at": "2017-05-17T09:40:43Z", "author_association": "NONE", "body_html": "<p>I came up with the same issue and found <code>torch.nn.backends.thnn.backend.SpatialConvolutionLocal</code>.</p>\n<p>For anyone who want to use locally connected layer in PyTorch,</p>\n<div class=\"highlight highlight-source-python\"><pre>inputs<span class=\"pl-k\">=</span>Variable(torch.randn(<span class=\"pl-c1\">1</span>,<span class=\"pl-c1\">3</span>,<span class=\"pl-c1\">32</span>,<span class=\"pl-c1\">32</span>)) <span class=\"pl-c\"><span class=\"pl-c\">#</span> N x inC x inH x inW</span>\nweight<span class=\"pl-k\">=</span>Variable(torch.randn(<span class=\"pl-c1\">30</span>,<span class=\"pl-c1\">30</span>,<span class=\"pl-c1\">64</span>,<span class=\"pl-c1\">3</span>,<span class=\"pl-c1\">3</span>,<span class=\"pl-c1\">3</span>)) <span class=\"pl-c\"><span class=\"pl-c\">#</span> outH x outW x outC x inC x kH x kW</span>\nbias<span class=\"pl-k\">=</span>Variable(torch.randn(<span class=\"pl-c1\">64</span>,<span class=\"pl-c1\">30</span>,<span class=\"pl-c1\">30</span>)) <span class=\"pl-c\"><span class=\"pl-c\">#</span> outC x outH x outW</span>\n\n<span class=\"pl-c\"><span class=\"pl-c\">#</span># arguments: kH, kW, strideH, strideW, padH, padW, inH, inW, outH, outW</span>\nlocal<span class=\"pl-k\">=</span>torch.nn.backends.thnn.backend.SpatialConvolutionLocal(<span class=\"pl-c1\">3</span>, <span class=\"pl-c1\">3</span>, <span class=\"pl-c1\">1</span>, <span class=\"pl-c1\">1</span>, <span class=\"pl-c1\">0</span>, <span class=\"pl-c1\">0</span>, <span class=\"pl-c1\">32</span>, <span class=\"pl-c1\">32</span>, <span class=\"pl-c1\">30</span>, <span class=\"pl-c1\">30</span>)\noutputs<span class=\"pl-k\">=</span>local(inputs, weight, bias) <span class=\"pl-c\"><span class=\"pl-c\">#</span> N x outC x outH x outW</span></pre></div>", "body_text": "I came up with the same issue and found torch.nn.backends.thnn.backend.SpatialConvolutionLocal.\nFor anyone who want to use locally connected layer in PyTorch,\ninputs=Variable(torch.randn(1,3,32,32)) # N x inC x inH x inW\nweight=Variable(torch.randn(30,30,64,3,3,3)) # outH x outW x outC x inC x kH x kW\nbias=Variable(torch.randn(64,30,30)) # outC x outH x outW\n\n## arguments: kH, kW, strideH, strideW, padH, padW, inH, inW, outH, outW\nlocal=torch.nn.backends.thnn.backend.SpatialConvolutionLocal(3, 3, 1, 1, 0, 0, 32, 32, 30, 30)\noutputs=local(inputs, weight, bias) # N x outC x outH x outW", "body": "I came up with the same issue and found `torch.nn.backends.thnn.backend.SpatialConvolutionLocal`.\r\n\r\nFor anyone who want to use locally connected layer in PyTorch,\r\n\r\n```python\r\ninputs=Variable(torch.randn(1,3,32,32)) # N x inC x inH x inW\r\nweight=Variable(torch.randn(30,30,64,3,3,3)) # outH x outW x outC x inC x kH x kW\r\nbias=Variable(torch.randn(64,30,30)) # outC x outH x outW\r\n\r\n## arguments: kH, kW, strideH, strideW, padH, padW, inH, inW, outH, outW\r\nlocal=torch.nn.backends.thnn.backend.SpatialConvolutionLocal(3, 3, 1, 1, 0, 0, 32, 32, 30, 30)\r\noutputs=local(inputs, weight, bias) # N x outC x outH x outW\r\n```\r\n"}