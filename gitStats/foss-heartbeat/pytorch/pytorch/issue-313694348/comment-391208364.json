{"url": "https://api.github.com/repos/pytorch/pytorch/issues/comments/391208364", "html_url": "https://github.com/pytorch/pytorch/issues/6548#issuecomment-391208364", "issue_url": "https://api.github.com/repos/pytorch/pytorch/issues/6548", "id": 391208364, "node_id": "MDEyOklzc3VlQ29tbWVudDM5MTIwODM2NA==", "user": {"login": "soumith", "id": 1310570, "node_id": "MDQ6VXNlcjEzMTA1NzA=", "avatar_url": "https://avatars0.githubusercontent.com/u/1310570?v=4", "gravatar_id": "", "url": "https://api.github.com/users/soumith", "html_url": "https://github.com/soumith", "followers_url": "https://api.github.com/users/soumith/followers", "following_url": "https://api.github.com/users/soumith/following{/other_user}", "gists_url": "https://api.github.com/users/soumith/gists{/gist_id}", "starred_url": "https://api.github.com/users/soumith/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/soumith/subscriptions", "organizations_url": "https://api.github.com/users/soumith/orgs", "repos_url": "https://api.github.com/users/soumith/repos", "events_url": "https://api.github.com/users/soumith/events{/privacy}", "received_events_url": "https://api.github.com/users/soumith/received_events", "type": "User", "site_admin": false}, "created_at": "2018-05-23T03:23:47Z", "updated_at": "2018-05-23T03:23:47Z", "author_association": "MEMBER", "body_html": "<p><a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=39281902\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/Baltazahr\">@Baltazahr</a> <code>net = net.to(device)</code> is not needed. nn.Module unlike a Tensor does a <code>to</code> recursively on it's members.</p>\n<pre><code>In [4]: x = torch.nn.Linear(10, 20)\n\nIn [5]: x\nOut[5]: Linear(in_features=10, out_features=20, bias=True)\n\nIn [6]: x.weight.device\nOut[6]: device(type='cpu')\n\nIn [7]: x.to('cuda:0')\nOut[7]: Linear(in_features=10, out_features=20, bias=True)\n\nIn [8]: x.weight.device\nOut[8]: device(type='cuda', index=0)\n</code></pre>", "body_text": "@Baltazahr net = net.to(device) is not needed. nn.Module unlike a Tensor does a to recursively on it's members.\nIn [4]: x = torch.nn.Linear(10, 20)\n\nIn [5]: x\nOut[5]: Linear(in_features=10, out_features=20, bias=True)\n\nIn [6]: x.weight.device\nOut[6]: device(type='cpu')\n\nIn [7]: x.to('cuda:0')\nOut[7]: Linear(in_features=10, out_features=20, bias=True)\n\nIn [8]: x.weight.device\nOut[8]: device(type='cuda', index=0)", "body": "@Baltazahr `net = net.to(device)` is not needed. nn.Module unlike a Tensor does a `to` recursively on it's members.\r\n\r\n```\r\nIn [4]: x = torch.nn.Linear(10, 20)\r\n\r\nIn [5]: x\r\nOut[5]: Linear(in_features=10, out_features=20, bias=True)\r\n\r\nIn [6]: x.weight.device\r\nOut[6]: device(type='cpu')\r\n\r\nIn [7]: x.to('cuda:0')\r\nOut[7]: Linear(in_features=10, out_features=20, bias=True)\r\n\r\nIn [8]: x.weight.device\r\nOut[8]: device(type='cuda', index=0)\r\n```"}