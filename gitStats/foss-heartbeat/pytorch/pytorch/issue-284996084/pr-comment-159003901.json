{"url": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/159003901", "pull_request_review_id": 85888748, "id": 159003901, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE1OTAwMzkwMQ==", "diff_hunk": "@@ -105,6 +105,193 @@ Tensor sum_backward(const Tensor & grad, IntList sizes, int64_t dim, bool keepdi\n   }\n }\n \n+Tensor reverse_dim(const Tensor& t, int64_t dim) {\n+  Tensor index = t.type().toScalarType(at::ScalarType::Long).arange(t.size(dim) -1, -1, -1);\n+  return t.index_select(dim, index);\n+}\n+\n+Tensor prod_safe_zeros_backward(const Tensor &grad, const Tensor& inp, int64_t dim) {\n+  if (inp.size(dim) == 1) {\n+    return grad;\n+  }\n+\n+  std::vector<int64_t> ones_size(inp.sizes());\n+  ones_size[dim] = 1;\n+  Tensor ones = grad.type().ones(ones_size);\n+  Tensor exclusive_normal_nocp = at::cat({ones, inp.narrow(dim, 0, inp.size(dim) - 1)}, dim);\n+  Tensor exclusive_normal = exclusive_normal_nocp.cumprod(dim);\n+\n+  Tensor narrow_reverse = reverse_dim(inp.narrow(dim, 1, inp.size(dim) - 1), dim);\n+  Tensor exclusive_reverse_nocp = at::cat({ones, narrow_reverse}, dim);\n+  Tensor exclusive_reverse = reverse_dim(exclusive_reverse_nocp.cumprod(dim), dim);\n+\n+  return grad.expand_as(exclusive_normal).mul(exclusive_normal.mul(exclusive_reverse));", "path": "tools/autograd/templates/Functions.cpp", "position": null, "original_position": 24, "commit_id": "2f52b3a11cb0f864f3bea88173df8f17114f1701", "original_commit_id": "b6a42143302dbc92f7362954d6b6840319a47f35", "user": {"login": "colesbury", "id": 655866, "node_id": "MDQ6VXNlcjY1NTg2Ng==", "avatar_url": "https://avatars1.githubusercontent.com/u/655866?v=4", "gravatar_id": "", "url": "https://api.github.com/users/colesbury", "html_url": "https://github.com/colesbury", "followers_url": "https://api.github.com/users/colesbury/followers", "following_url": "https://api.github.com/users/colesbury/following{/other_user}", "gists_url": "https://api.github.com/users/colesbury/gists{/gist_id}", "starred_url": "https://api.github.com/users/colesbury/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/colesbury/subscriptions", "organizations_url": "https://api.github.com/users/colesbury/orgs", "repos_url": "https://api.github.com/users/colesbury/repos", "events_url": "https://api.github.com/users/colesbury/events{/privacy}", "received_events_url": "https://api.github.com/users/colesbury/received_events", "type": "User", "site_admin": false}, "body": "`return grad * (exclusive_normal * exclusive_reverse);`", "created_at": "2017-12-28T21:59:53Z", "updated_at": "2018-11-23T15:37:41Z", "html_url": "https://github.com/pytorch/pytorch/pull/4394#discussion_r159003901", "pull_request_url": "https://api.github.com/repos/pytorch/pytorch/pulls/4394", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/159003901"}, "html": {"href": "https://github.com/pytorch/pytorch/pull/4394#discussion_r159003901"}, "pull_request": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/4394"}}, "body_html": "<p><code>return grad * (exclusive_normal * exclusive_reverse);</code></p>", "body_text": "return grad * (exclusive_normal * exclusive_reverse);"}