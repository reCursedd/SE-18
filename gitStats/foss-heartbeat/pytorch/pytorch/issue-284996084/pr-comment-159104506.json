{"url": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/159104506", "pull_request_review_id": 86011018, "id": 159104506, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE1OTEwNDUwNg==", "diff_hunk": "@@ -230,6 +230,8 @@\n \n - func: slice(Tensor self, int64_t start=0, int64_t end=9223372036854775807, int64_t step=1, int64_t dim=0) -> Tensor\n \n+- func: slice_dim(Tensor self, int64_t dim, int64_t start=0, int64_t end=9223372036854775807, int64_t step=1) -> Tensor", "path": "aten/src/ATen/native/native_functions.yaml", "position": null, "original_position": 4, "commit_id": "2f52b3a11cb0f864f3bea88173df8f17114f1701", "original_commit_id": "b6a42143302dbc92f7362954d6b6840319a47f35", "user": {"login": "colesbury", "id": 655866, "node_id": "MDQ6VXNlcjY1NTg2Ng==", "avatar_url": "https://avatars1.githubusercontent.com/u/655866?v=4", "gravatar_id": "", "url": "https://api.github.com/users/colesbury", "html_url": "https://github.com/colesbury", "followers_url": "https://api.github.com/users/colesbury/followers", "following_url": "https://api.github.com/users/colesbury/following{/other_user}", "gists_url": "https://api.github.com/users/colesbury/gists{/gist_id}", "starred_url": "https://api.github.com/users/colesbury/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/colesbury/subscriptions", "organizations_url": "https://api.github.com/users/colesbury/orgs", "repos_url": "https://api.github.com/users/colesbury/repos", "events_url": "https://api.github.com/users/colesbury/events{/privacy}", "received_events_url": "https://api.github.com/users/colesbury/received_events", "type": "User", "site_admin": false}, "body": "I'm not sure it's worth adding `slice_dim` as a public C++ function/method either. We already have `narrow` and `slice`.  \r\n\r\nFor example,\r\n\r\n```\r\ninput.slice_dim(dim, k + 1)\r\n```\r\n\r\nCan be written as:\r\n\r\n```\r\ninput.slice(k + 1, input.size(dim), 1, dim)\r\n```\r\n\r\nOr equivalently:\r\n\r\n```\r\ninput.narrow(dim, k + 1, input.size(dim) - k - 1)\r\n```\r\n\r\nOr `slice_dim` can just be defined locally in Functions.cpp or as a lambda in `prod_safe_zeros_backward`.", "created_at": "2017-12-29T21:19:56Z", "updated_at": "2018-11-23T15:37:43Z", "html_url": "https://github.com/pytorch/pytorch/pull/4394#discussion_r159104506", "pull_request_url": "https://api.github.com/repos/pytorch/pytorch/pulls/4394", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/159104506"}, "html": {"href": "https://github.com/pytorch/pytorch/pull/4394#discussion_r159104506"}, "pull_request": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/4394"}}, "body_html": "<p>I'm not sure it's worth adding <code>slice_dim</code> as a public C++ function/method either. We already have <code>narrow</code> and <code>slice</code>.</p>\n<p>For example,</p>\n<pre><code>input.slice_dim(dim, k + 1)\n</code></pre>\n<p>Can be written as:</p>\n<pre><code>input.slice(k + 1, input.size(dim), 1, dim)\n</code></pre>\n<p>Or equivalently:</p>\n<pre><code>input.narrow(dim, k + 1, input.size(dim) - k - 1)\n</code></pre>\n<p>Or <code>slice_dim</code> can just be defined locally in Functions.cpp or as a lambda in <code>prod_safe_zeros_backward</code>.</p>", "body_text": "I'm not sure it's worth adding slice_dim as a public C++ function/method either. We already have narrow and slice.\nFor example,\ninput.slice_dim(dim, k + 1)\n\nCan be written as:\ninput.slice(k + 1, input.size(dim), 1, dim)\n\nOr equivalently:\ninput.narrow(dim, k + 1, input.size(dim) - k - 1)\n\nOr slice_dim can just be defined locally in Functions.cpp or as a lambda in prod_safe_zeros_backward.", "in_reply_to_id": 159003618}