{"url": "https://api.github.com/repos/pytorch/pytorch/issues/comments/429823162", "html_url": "https://github.com/pytorch/pytorch/issues/12532#issuecomment-429823162", "issue_url": "https://api.github.com/repos/pytorch/pytorch/issues/12532", "id": 429823162, "node_id": "MDEyOklzc3VlQ29tbWVudDQyOTgyMzE2Mg==", "user": {"login": "nwly", "id": 2166635, "node_id": "MDQ6VXNlcjIxNjY2MzU=", "avatar_url": "https://avatars1.githubusercontent.com/u/2166635?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nwly", "html_url": "https://github.com/nwly", "followers_url": "https://api.github.com/users/nwly/followers", "following_url": "https://api.github.com/users/nwly/following{/other_user}", "gists_url": "https://api.github.com/users/nwly/gists{/gist_id}", "starred_url": "https://api.github.com/users/nwly/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nwly/subscriptions", "organizations_url": "https://api.github.com/users/nwly/orgs", "repos_url": "https://api.github.com/users/nwly/repos", "events_url": "https://api.github.com/users/nwly/events{/privacy}", "received_events_url": "https://api.github.com/users/nwly/received_events", "type": "User", "site_admin": false}, "created_at": "2018-10-15T11:56:19Z", "updated_at": "2018-10-15T11:56:19Z", "author_association": "NONE", "body_html": "<blockquote>\n<blockquote>\n<p><code>t = torch.tensor([1, 2, 3], dtype=torch.int)</code><br>\n<code>torch.Size(t.numpy())</code></p>\n</blockquote>\n<p>Ideally, I would like something that doesn't require numpy conversion, so everything stays on appropriate devices.</p>\n</blockquote>\n<p>Actually if <code>t</code> has already been specified to be <code>torch.int</code> type, <code>.numpy()</code> isn't needed.  i.e. this works:</p>\n<pre><code>t = torch.tensor([1, 2, 3], dtype=torch.int)\ntorch.Size(t)\n</code></pre>\n<blockquote>\n<blockquote>\n<p><code>s = torch.Size([1, 2, 3])</code><br>\n<code>torch.tensor(s)</code></p>\n</blockquote>\n<p>No, in this example I would like to get a 1D tensor with values [1,2,3].</p>\n</blockquote>\n<p>I get the return value <code>tensor([1, 2, 3])</code>, which is shape <code>torch.Size([3])</code>.  Is this not what you're looking for?</p>", "body_text": "t = torch.tensor([1, 2, 3], dtype=torch.int)\ntorch.Size(t.numpy())\n\nIdeally, I would like something that doesn't require numpy conversion, so everything stays on appropriate devices.\n\nActually if t has already been specified to be torch.int type, .numpy() isn't needed.  i.e. this works:\nt = torch.tensor([1, 2, 3], dtype=torch.int)\ntorch.Size(t)\n\n\n\ns = torch.Size([1, 2, 3])\ntorch.tensor(s)\n\nNo, in this example I would like to get a 1D tensor with values [1,2,3].\n\nI get the return value tensor([1, 2, 3]), which is shape torch.Size([3]).  Is this not what you're looking for?", "body": "> > `t = torch.tensor([1, 2, 3], dtype=torch.int)`\r\n> > `torch.Size(t.numpy())`\r\n> \r\n> Ideally, I would like something that doesn't require numpy conversion, so everything stays on appropriate devices.\r\n\r\nActually if `t` has already been specified to be `torch.int` type, `.numpy()` isn't needed.  i.e. this works:\r\n\r\n    t = torch.tensor([1, 2, 3], dtype=torch.int)\r\n    torch.Size(t)\r\n\r\n> \r\n> > `s = torch.Size([1, 2, 3])`\r\n> > `torch.tensor(s)`\r\n> \r\n> No, in this example I would like to get a 1D tensor with values [1,2,3].\r\n\r\nI get the return value `tensor([1, 2, 3])`, which is shape `torch.Size([3])`.  Is this not what you're looking for?"}