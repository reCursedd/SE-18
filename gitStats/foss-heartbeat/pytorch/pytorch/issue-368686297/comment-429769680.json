{"url": "https://api.github.com/repos/pytorch/pytorch/issues/comments/429769680", "html_url": "https://github.com/pytorch/pytorch/issues/12532#issuecomment-429769680", "issue_url": "https://api.github.com/repos/pytorch/pytorch/issues/12532", "id": 429769680, "node_id": "MDEyOklzc3VlQ29tbWVudDQyOTc2OTY4MA==", "user": {"login": "Rizhiy", "id": 5617397, "node_id": "MDQ6VXNlcjU2MTczOTc=", "avatar_url": "https://avatars1.githubusercontent.com/u/5617397?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Rizhiy", "html_url": "https://github.com/Rizhiy", "followers_url": "https://api.github.com/users/Rizhiy/followers", "following_url": "https://api.github.com/users/Rizhiy/following{/other_user}", "gists_url": "https://api.github.com/users/Rizhiy/gists{/gist_id}", "starred_url": "https://api.github.com/users/Rizhiy/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Rizhiy/subscriptions", "organizations_url": "https://api.github.com/users/Rizhiy/orgs", "repos_url": "https://api.github.com/users/Rizhiy/repos", "events_url": "https://api.github.com/users/Rizhiy/events{/privacy}", "received_events_url": "https://api.github.com/users/Rizhiy/received_events", "type": "User", "site_admin": false}, "created_at": "2018-10-15T09:18:39Z", "updated_at": "2018-10-15T09:18:50Z", "author_association": "NONE", "body_html": "<blockquote>\n<p><code>t = torch.tensor([1, 2, 3], dtype=torch.int)</code><br>\n<code>torch.Size(t.numpy())</code></p>\n</blockquote>\n<p>Ideally, I would like something that doesn't require numpy conversion, so everything stays on appropriate devices.</p>\n<blockquote>\n<p><code>s = torch.Size([1, 2, 3])</code><br>\n<code>torch.tensor(s)</code></p>\n</blockquote>\n<p>No, in this example I would like to get a 1D tensor with values [1,2,3].</p>", "body_text": "t = torch.tensor([1, 2, 3], dtype=torch.int)\ntorch.Size(t.numpy())\n\nIdeally, I would like something that doesn't require numpy conversion, so everything stays on appropriate devices.\n\ns = torch.Size([1, 2, 3])\ntorch.tensor(s)\n\nNo, in this example I would like to get a 1D tensor with values [1,2,3].", "body": "> `t = torch.tensor([1, 2, 3], dtype=torch.int)`\r\n> `torch.Size(t.numpy())`\r\n\r\nIdeally, I would like something that doesn't require numpy conversion, so everything stays on appropriate devices.\r\n\r\n> `s = torch.Size([1, 2, 3])`\r\n> `torch.tensor(s)`\r\n\r\nNo, in this example I would like to get a 1D tensor with values [1,2,3]."}