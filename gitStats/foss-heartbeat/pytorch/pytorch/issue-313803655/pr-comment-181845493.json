{"url": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/181845493", "pull_request_review_id": 112541087, "id": 181845493, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MTg0NTQ5Mw==", "diff_hunk": "@@ -131,7 +136,33 @@\n \"\"\")\n \n RECORD_ATTRIBUTE = CodeTemplate(\"\"\"\\\n-        setattr(trace_info.n, jit::attr::${name}, ${name});\"\"\")\n+setattr(trace_info.n, jit::attr::${name}, ${name});\"\"\")\n+\n+RECORD_POSITIONAL_ATTRIBUTE = CodeTemplate(\"\"\"\\\n+setposattr(trace_info.n, ${i}, \"${name}\", ${name});\"\"\")\n+\n+POSITIONAL_ATTR_NYI = \"\"\"\\\n+throw std::runtime_error(\"Can't have size-dependent arguments to functions that \"\n+                         \"take variable number of tensor arguments\");\n+\"\"\"\n+\n+\n+def should_trace(declaration):\n+    # Operations involving Generator, Storage, Type are not traceable\n+    # at the moment\n+    if any(arg['simple_type'] in {'Generator', 'Storage', 'ScalarType', 'Type'} for arg in declaration['arguments']):", "path": "tools/autograd/gen_variable_type.py", "position": null, "original_position": 33, "commit_id": "f28741691dae2b1b5540bc1b50d1b97ad4279cf8", "original_commit_id": "28a2f65c8728b3cd777477227f3c9d6b66eee018", "user": {"login": "dzhulgakov", "id": 17890620, "node_id": "MDQ6VXNlcjE3ODkwNjIw", "avatar_url": "https://avatars2.githubusercontent.com/u/17890620?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dzhulgakov", "html_url": "https://github.com/dzhulgakov", "followers_url": "https://api.github.com/users/dzhulgakov/followers", "following_url": "https://api.github.com/users/dzhulgakov/following{/other_user}", "gists_url": "https://api.github.com/users/dzhulgakov/gists{/gist_id}", "starred_url": "https://api.github.com/users/dzhulgakov/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dzhulgakov/subscriptions", "organizations_url": "https://api.github.com/users/dzhulgakov/orgs", "repos_url": "https://api.github.com/users/dzhulgakov/repos", "events_url": "https://api.github.com/users/dzhulgakov/events{/privacy}", "received_events_url": "https://api.github.com/users/dzhulgakov/received_events", "type": "User", "site_admin": false}, "body": "(not related to this diff per se)\r\nhm, what exactly does it mean? is it generic jit tracing or only onnx export? We'd need to figure out a way to handle opaque objects in tracing at some point too.", "created_at": "2018-04-16T18:44:03Z", "updated_at": "2018-11-23T15:42:31Z", "html_url": "https://github.com/pytorch/pytorch/pull/6554#discussion_r181845493", "pull_request_url": "https://api.github.com/repos/pytorch/pytorch/pulls/6554", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/181845493"}, "html": {"href": "https://github.com/pytorch/pytorch/pull/6554#discussion_r181845493"}, "pull_request": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/6554"}}, "body_html": "<p>(not related to this diff per se)<br>\nhm, what exactly does it mean? is it generic jit tracing or only onnx export? We'd need to figure out a way to handle opaque objects in tracing at some point too.</p>", "body_text": "(not related to this diff per se)\nhm, what exactly does it mean? is it generic jit tracing or only onnx export? We'd need to figure out a way to handle opaque objects in tracing at some point too."}