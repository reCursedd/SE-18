{"url": "https://api.github.com/repos/pytorch/pytorch/issues/comments/380927254", "html_url": "https://github.com/pytorch/pytorch/pull/6554#issuecomment-380927254", "issue_url": "https://api.github.com/repos/pytorch/pytorch/issues/6554", "id": 380927254, "node_id": "MDEyOklzc3VlQ29tbWVudDM4MDkyNzI1NA==", "user": {"login": "apaszke", "id": 4583066, "node_id": "MDQ6VXNlcjQ1ODMwNjY=", "avatar_url": "https://avatars3.githubusercontent.com/u/4583066?v=4", "gravatar_id": "", "url": "https://api.github.com/users/apaszke", "html_url": "https://github.com/apaszke", "followers_url": "https://api.github.com/users/apaszke/followers", "following_url": "https://api.github.com/users/apaszke/following{/other_user}", "gists_url": "https://api.github.com/users/apaszke/gists{/gist_id}", "starred_url": "https://api.github.com/users/apaszke/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/apaszke/subscriptions", "organizations_url": "https://api.github.com/users/apaszke/orgs", "repos_url": "https://api.github.com/users/apaszke/repos", "events_url": "https://api.github.com/users/apaszke/events{/privacy}", "received_events_url": "https://api.github.com/users/apaszke/received_events", "type": "User", "site_admin": false}, "created_at": "2018-04-12T20:01:55Z", "updated_at": "2018-04-12T20:01:55Z", "author_association": "MEMBER", "body_html": "<p><a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=1388690\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/anderspapitto\">@anderspapitto</a> what this patch does is change <code>.size()</code> to return a Python tuple of PyTorch scalars (instead of Python scalars). This means that both arithmetic and packing them into collections doesn't break the tracing, because it's no different than tracing of regular tensors.</p>", "body_text": "@anderspapitto what this patch does is change .size() to return a Python tuple of PyTorch scalars (instead of Python scalars). This means that both arithmetic and packing them into collections doesn't break the tracing, because it's no different than tracing of regular tensors.", "body": "@anderspapitto what this patch does is change `.size()` to return a Python tuple of PyTorch scalars (instead of Python scalars). This means that both arithmetic and packing them into collections doesn't break the tracing, because it's no different than tracing of regular tensors."}