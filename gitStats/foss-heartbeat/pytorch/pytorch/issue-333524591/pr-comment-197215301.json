{"url": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/197215301", "pull_request_review_id": 130913481, "id": 197215301, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5NzIxNTMwMQ==", "diff_hunk": "@@ -687,15 +687,30 @@ struct CodeImpl {\n         stack.push_back(at::Tensor());\n         return 0;\n       };\n-    IR_ELSEIF(ReplaceIfUndef)\n-      return [](Stack & stack) {\n-        auto alternate = pop(stack);\n-        auto result = pop(stack);\n-        if(result.defined()) {\n-          stack.push_back(std::move(result));\n-        } else {\n-          stack.push_back(std::move(alternate));\n+    IR_ELSEIF(AnyDefined)\n+      size_t num_inputs = value->inputs().size();\n+      return [=](Stack & stack) {\n+        int64_t result = 0;\n+        for(const at::Tensor& t : last(stack, num_inputs)) {\n+          if(t.defined()) {\n+            result = 1;\n+            break;\n+          }\n         }\n+        drop(stack, num_inputs);\n+        stack.push_back(at::full({}, result, at::kLong));", "path": "torch/csrc/jit/interpreter.cpp", "position": null, "original_position": 23, "commit_id": "e2b3828276930eaf208705eb3d91047bc109eca1", "original_commit_id": "3a4b65f33f2eccef207875e60b0f7e22646bbdb7", "user": {"login": "apaszke", "id": 4583066, "node_id": "MDQ6VXNlcjQ1ODMwNjY=", "avatar_url": "https://avatars3.githubusercontent.com/u/4583066?v=4", "gravatar_id": "", "url": "https://api.github.com/users/apaszke", "html_url": "https://github.com/apaszke", "followers_url": "https://api.github.com/users/apaszke/followers", "following_url": "https://api.github.com/users/apaszke/following{/other_user}", "gists_url": "https://api.github.com/users/apaszke/gists{/gist_id}", "starred_url": "https://api.github.com/users/apaszke/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/apaszke/subscriptions", "organizations_url": "https://api.github.com/users/apaszke/orgs", "repos_url": "https://api.github.com/users/apaszke/repos", "events_url": "https://api.github.com/users/apaszke/events{/privacy}", "received_events_url": "https://api.github.com/users/apaszke/received_events", "type": "User", "site_admin": false}, "body": "Would be nice to just preallocate two tensors for true and false statically", "created_at": "2018-06-21T17:26:31Z", "updated_at": "2018-11-23T15:46:00Z", "html_url": "https://github.com/pytorch/pytorch/pull/8641#discussion_r197215301", "pull_request_url": "https://api.github.com/repos/pytorch/pytorch/pulls/8641", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/197215301"}, "html": {"href": "https://github.com/pytorch/pytorch/pull/8641#discussion_r197215301"}, "pull_request": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/8641"}}, "body_html": "<p>Would be nice to just preallocate two tensors for true and false statically</p>", "body_text": "Would be nice to just preallocate two tensors for true and false statically"}