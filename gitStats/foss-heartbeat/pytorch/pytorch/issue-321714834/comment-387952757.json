{"url": "https://api.github.com/repos/pytorch/pytorch/issues/comments/387952757", "html_url": "https://github.com/pytorch/pytorch/pull/7437#issuecomment-387952757", "issue_url": "https://api.github.com/repos/pytorch/pytorch/issues/7437", "id": 387952757, "node_id": "MDEyOklzc3VlQ29tbWVudDM4Nzk1Mjc1Nw==", "user": {"login": "jerryzh168", "id": 4958441, "node_id": "MDQ6VXNlcjQ5NTg0NDE=", "avatar_url": "https://avatars0.githubusercontent.com/u/4958441?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jerryzh168", "html_url": "https://github.com/jerryzh168", "followers_url": "https://api.github.com/users/jerryzh168/followers", "following_url": "https://api.github.com/users/jerryzh168/following{/other_user}", "gists_url": "https://api.github.com/users/jerryzh168/gists{/gist_id}", "starred_url": "https://api.github.com/users/jerryzh168/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jerryzh168/subscriptions", "organizations_url": "https://api.github.com/users/jerryzh168/orgs", "repos_url": "https://api.github.com/users/jerryzh168/repos", "events_url": "https://api.github.com/users/jerryzh168/events{/privacy}", "received_events_url": "https://api.github.com/users/jerryzh168/received_events", "type": "User", "site_admin": false}, "created_at": "2018-05-10T05:03:07Z", "updated_at": "2018-05-10T05:03:07Z", "author_association": "CONTRIBUTOR", "body_html": "<p><a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=1100089\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/yinghai\">@yinghai</a> I'm talking about fusing Conv and Relu into a new operator called ConvRelu actually.<br>\nI believe the existing code only fuses Conv Relu into Conv + some arguments.</p>", "body_text": "@yinghai I'm talking about fusing Conv and Relu into a new operator called ConvRelu actually.\nI believe the existing code only fuses Conv Relu into Conv + some arguments.", "body": "@yinghai I'm talking about fusing Conv and Relu into a new operator called ConvRelu actually.\r\nI believe the existing code only fuses Conv Relu into Conv + some arguments."}