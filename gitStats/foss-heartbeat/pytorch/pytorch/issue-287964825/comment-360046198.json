{"url": "https://api.github.com/repos/pytorch/pytorch/issues/comments/360046198", "html_url": "https://github.com/pytorch/pytorch/issues/4620#issuecomment-360046198", "issue_url": "https://api.github.com/repos/pytorch/pytorch/issues/4620", "id": 360046198, "node_id": "MDEyOklzc3VlQ29tbWVudDM2MDA0NjE5OA==", "user": {"login": "samuela", "id": 226872, "node_id": "MDQ6VXNlcjIyNjg3Mg==", "avatar_url": "https://avatars0.githubusercontent.com/u/226872?v=4", "gravatar_id": "", "url": "https://api.github.com/users/samuela", "html_url": "https://github.com/samuela", "followers_url": "https://api.github.com/users/samuela/followers", "following_url": "https://api.github.com/users/samuela/following{/other_user}", "gists_url": "https://api.github.com/users/samuela/gists{/gist_id}", "starred_url": "https://api.github.com/users/samuela/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/samuela/subscriptions", "organizations_url": "https://api.github.com/users/samuela/orgs", "repos_url": "https://api.github.com/users/samuela/repos", "events_url": "https://api.github.com/users/samuela/events{/privacy}", "received_events_url": "https://api.github.com/users/samuela/received_events", "type": "User", "site_admin": false}, "created_at": "2018-01-24T07:38:44Z", "updated_at": "2018-01-24T07:38:44Z", "author_association": "CONTRIBUTOR", "body_html": "<p><a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=655866\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/colesbury\">@colesbury</a> Is there a reason that you say the error should be thrown when calling backwards, as opposed to when calling these functions with <code>Variable</code>s? It seems it would be even safer to prevent the entire calling convention itself.</p>", "body_text": "@colesbury Is there a reason that you say the error should be thrown when calling backwards, as opposed to when calling these functions with Variables? It seems it would be even safer to prevent the entire calling convention itself.", "body": "@colesbury Is there a reason that you say the error should be thrown when calling backwards, as opposed to when calling these functions with `Variable`s? It seems it would be even safer to prevent the entire calling convention itself."}