{"url": "https://api.github.com/repos/pytorch/pytorch/issues/12605", "repository_url": "https://api.github.com/repos/pytorch/pytorch", "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/12605/labels{/name}", "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/12605/comments", "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/12605/events", "html_url": "https://github.com/pytorch/pytorch/pull/12605", "id": 369520654, "node_id": "MDExOlB1bGxSZXF1ZXN0MjIyNDQyNjQ0", "number": 12605, "title": "Use SFINAE instead of macros for 'long' hack", "user": {"login": "smessmer", "id": 2373925, "node_id": "MDQ6VXNlcjIzNzM5MjU=", "avatar_url": "https://avatars3.githubusercontent.com/u/2373925?v=4", "gravatar_id": "", "url": "https://api.github.com/users/smessmer", "html_url": "https://github.com/smessmer", "followers_url": "https://api.github.com/users/smessmer/followers", "following_url": "https://api.github.com/users/smessmer/following{/other_user}", "gists_url": "https://api.github.com/users/smessmer/gists{/gist_id}", "starred_url": "https://api.github.com/users/smessmer/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/smessmer/subscriptions", "organizations_url": "https://api.github.com/users/smessmer/orgs", "repos_url": "https://api.github.com/users/smessmer/repos", "events_url": "https://api.github.com/users/smessmer/events{/privacy}", "received_events_url": "https://api.github.com/users/smessmer/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2018-10-12T11:58:01Z", "updated_at": "2018-10-12T16:47:22Z", "closed_at": "2018-10-12T16:47:22Z", "author_association": "CONTRIBUTOR", "pull_request": {"url": "https://api.github.com/repos/pytorch/pytorch/pulls/12605", "html_url": "https://github.com/pytorch/pytorch/pull/12605", "diff_url": "https://github.com/pytorch/pytorch/pull/12605.diff", "patch_url": "https://github.com/pytorch/pytorch/pull/12605.patch"}, "body_html": "<p>Stack:<br>\n\u00a0\u00a0\u00a0\u00a0<g-emoji class=\"g-emoji\" alias=\"black_circle\" fallback-src=\"https://assets-cdn.github.com/images/icons/emoji/unicode/26ab.png\">\u26ab\ufe0f</g-emoji>\u00a0 <strong><a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load issue title\" data-id=\"369520654\" data-permission-text=\"Issue title is private\" data-url=\"https://github.com/pytorch/pytorch/issues/12605\" data-hovercard-type=\"pull_request\" data-hovercard-url=\"/pytorch/pytorch/pull/12605/hovercard\" href=\"https://github.com/pytorch/pytorch/pull/12605\">#12605</a> Use SFINAE instead of macros for 'long' hack</strong>\u00a0\u00a0<a href=\"https://our.internmc.facebook.com/intern/diff/D10359443/\" rel=\"nofollow\"><g-emoji class=\"g-emoji\" alias=\"yellow_heart\" fallback-src=\"https://assets-cdn.github.com/images/icons/emoji/unicode/1f49b.png\">\ud83d\udc9b</g-emoji></a></p>\n<p>Some compilers define 'long' as a separate type from 'int32_t' or 'int64_t', some don't.<br>\nBefore, we had a cmake check setting a macro and depending on the macro, we either defined a separate type id for long or didn't.<br>\nThen, we removed the cmake check and used compiler detection macros directly. This is, however, error prone.</p>\n<p>This new approach uses SFINAE to register a type id for 'long' only if it's a separate type.</p>\n<p>Differential Revision: <a href=\"https://our.internmc.facebook.com/intern/diff/D10359443/\" rel=\"nofollow\">D10359443</a></p>", "body_text": "Stack:\n\u00a0\u00a0\u00a0\u00a0\u26ab\ufe0f\u00a0 #12605 Use SFINAE instead of macros for 'long' hack\u00a0\u00a0\ud83d\udc9b\nSome compilers define 'long' as a separate type from 'int32_t' or 'int64_t', some don't.\nBefore, we had a cmake check setting a macro and depending on the macro, we either defined a separate type id for long or didn't.\nThen, we removed the cmake check and used compiler detection macros directly. This is, however, error prone.\nThis new approach uses SFINAE to register a type id for 'long' only if it's a separate type.\nDifferential Revision: D10359443", "body": "Stack:\n&nbsp;&nbsp;&nbsp;&nbsp;:black_circle:&nbsp; **#12605 Use SFINAE instead of macros for 'long' hack**&nbsp;&nbsp;[:yellow_heart:](https://our.internmc.facebook.com/intern/diff/D10359443/)\n\nSome compilers define 'long' as a separate type from 'int32_t' or 'int64_t', some don't.\nBefore, we had a cmake check setting a macro and depending on the macro, we either defined a separate type id for long or didn't.\nThen, we removed the cmake check and used compiler detection macros directly. This is, however, error prone.\n\nThis new approach uses SFINAE to register a type id for 'long' only if it's a separate type.\n\nDifferential Revision: [D10359443](https://our.internmc.facebook.com/intern/diff/D10359443/)"}