{"url": "https://api.github.com/repos/pytorch/pytorch/issues/6139", "repository_url": "https://api.github.com/repos/pytorch/pytorch", "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/6139/labels{/name}", "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/6139/comments", "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/6139/events", "html_url": "https://github.com/pytorch/pytorch/issues/6139", "id": 310121968, "node_id": "MDU6SXNzdWUzMTAxMjE5Njg=", "number": 6139, "title": "[jit][script] Support shape inference of ops with integral constant arguments", "user": {"login": "zou3519", "id": 5652049, "node_id": "MDQ6VXNlcjU2NTIwNDk=", "avatar_url": "https://avatars3.githubusercontent.com/u/5652049?v=4", "gravatar_id": "", "url": "https://api.github.com/users/zou3519", "html_url": "https://github.com/zou3519", "followers_url": "https://api.github.com/users/zou3519/followers", "following_url": "https://api.github.com/users/zou3519/following{/other_user}", "gists_url": "https://api.github.com/users/zou3519/gists{/gist_id}", "starred_url": "https://api.github.com/users/zou3519/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/zou3519/subscriptions", "organizations_url": "https://api.github.com/users/zou3519/orgs", "repos_url": "https://api.github.com/users/zou3519/repos", "events_url": "https://api.github.com/users/zou3519/events{/privacy}", "received_events_url": "https://api.github.com/users/zou3519/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 679953983, "node_id": "MDU6TGFiZWw2Nzk5NTM5ODM=", "url": "https://api.github.com/repos/pytorch/pytorch/labels/jit", "name": "jit", "color": "c5def5", "default": false}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2018-03-30T17:27:30Z", "updated_at": "2018-05-31T15:58:11Z", "closed_at": "2018-05-31T15:58:11Z", "author_association": "CONTRIBUTOR", "body_html": "<p>The following will compile:</p>\n<pre><code>import torch\n@torch.jit.script\ndef unsqueeze0(x):\n    return x.unsqueeze(dim=0)\nx = torch.randn((2, 2), requires_grad=True)\nunsqueeze0(x)\n</code></pre>\n<p>while the following will not:</p>\n<pre><code>import torch\n@torch.jit.script\ndef unsqueeze0(x):\n    return x.unsqueeze(0)\nx = torch.randn((2, 2), requires_grad=True)\nunsqueeze0(x)\n---------------------------------------------------------------------------\nRuntimeError                              Traceback (most recent call last)\n&lt;ipython-input-4-6be6b64cf00e&gt; in &lt;module&gt;()\n      4     return x.unsqueeze(0)\n      5 x = torch.randn((2, 2), requires_grad=True)\n----&gt; 6 unsqueeze0(x)\n\nRuntimeError: torch/csrc/jit/autodiff.cpp:194: createZerosLike: can't allocate zero gradient for a value without a type\n</code></pre>\n<p>because the shapecheck pass ultimately doesn't recognize <code>x.unsqueeze(0)</code> and does not infer the type of its output as a result</p>\n<p>Both of these two examples should be compile-able.</p>\n<p>cc <a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=370202\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/zdevito\">@zdevito</a></p>", "body_text": "The following will compile:\nimport torch\n@torch.jit.script\ndef unsqueeze0(x):\n    return x.unsqueeze(dim=0)\nx = torch.randn((2, 2), requires_grad=True)\nunsqueeze0(x)\n\nwhile the following will not:\nimport torch\n@torch.jit.script\ndef unsqueeze0(x):\n    return x.unsqueeze(0)\nx = torch.randn((2, 2), requires_grad=True)\nunsqueeze0(x)\n---------------------------------------------------------------------------\nRuntimeError                              Traceback (most recent call last)\n<ipython-input-4-6be6b64cf00e> in <module>()\n      4     return x.unsqueeze(0)\n      5 x = torch.randn((2, 2), requires_grad=True)\n----> 6 unsqueeze0(x)\n\nRuntimeError: torch/csrc/jit/autodiff.cpp:194: createZerosLike: can't allocate zero gradient for a value without a type\n\nbecause the shapecheck pass ultimately doesn't recognize x.unsqueeze(0) and does not infer the type of its output as a result\nBoth of these two examples should be compile-able.\ncc @zdevito", "body": "The following will compile:\r\n```\r\nimport torch\r\n@torch.jit.script\r\ndef unsqueeze0(x):\r\n    return x.unsqueeze(dim=0)\r\nx = torch.randn((2, 2), requires_grad=True)\r\nunsqueeze0(x)\r\n```\r\nwhile the following will not:\r\n```\r\nimport torch\r\n@torch.jit.script\r\ndef unsqueeze0(x):\r\n    return x.unsqueeze(0)\r\nx = torch.randn((2, 2), requires_grad=True)\r\nunsqueeze0(x)\r\n---------------------------------------------------------------------------\r\nRuntimeError                              Traceback (most recent call last)\r\n<ipython-input-4-6be6b64cf00e> in <module>()\r\n      4     return x.unsqueeze(0)\r\n      5 x = torch.randn((2, 2), requires_grad=True)\r\n----> 6 unsqueeze0(x)\r\n\r\nRuntimeError: torch/csrc/jit/autodiff.cpp:194: createZerosLike: can't allocate zero gradient for a value without a type\r\n```\r\nbecause the shapecheck pass ultimately doesn't recognize `x.unsqueeze(0)` and does not infer the type of its output as a result\r\n\r\nBoth of these two examples should be compile-able.\r\n\r\ncc @zdevito "}