{"url": "https://api.github.com/repos/pytorch/pytorch/issues/comments/394397822", "html_url": "https://github.com/pytorch/pytorch/pull/7973#issuecomment-394397822", "issue_url": "https://api.github.com/repos/pytorch/pytorch/issues/7973", "id": 394397822, "node_id": "MDEyOklzc3VlQ29tbWVudDM5NDM5NzgyMg==", "user": {"login": "SsnL", "id": 5674597, "node_id": "MDQ6VXNlcjU2NzQ1OTc=", "avatar_url": "https://avatars2.githubusercontent.com/u/5674597?v=4", "gravatar_id": "", "url": "https://api.github.com/users/SsnL", "html_url": "https://github.com/SsnL", "followers_url": "https://api.github.com/users/SsnL/followers", "following_url": "https://api.github.com/users/SsnL/following{/other_user}", "gists_url": "https://api.github.com/users/SsnL/gists{/gist_id}", "starred_url": "https://api.github.com/users/SsnL/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/SsnL/subscriptions", "organizations_url": "https://api.github.com/users/SsnL/orgs", "repos_url": "https://api.github.com/users/SsnL/repos", "events_url": "https://api.github.com/users/SsnL/events{/privacy}", "received_events_url": "https://api.github.com/users/SsnL/received_events", "type": "User", "site_admin": false}, "created_at": "2018-06-04T15:31:57Z", "updated_at": "2018-06-04T15:31:57Z", "author_association": "CONTRIBUTOR", "body_html": "<p><a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=4583066\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/apaszke\">@apaszke</a> I have discussed with <a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=655866\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/colesbury\">@colesbury</a> and <a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=3768583\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/gchanan\">@gchanan</a> before writing this patch. I agree with some of your concerns, but here are a couple reasons:</p>\n<ol>\n<li>If people want to calculate their losses at each GPU, they can't treat DP as non-existent and will have to face this problem no matter what.</li>\n<li>Even if people use <code>.unsqueeze(0)</code>, the output shape will still be number_of_GPU-dependent.</li>\n<li>This pattern works before 0.4.</li>\n<li>The pattern <a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=655866\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/colesbury\">@colesbury</a> and I were thinking about is calculating loss with <code>size_average=False</code> in Module <code>forward</code>, and <code>sum</code> on the resulting vector from DP, and backward.</li>\n</ol>", "body_text": "@apaszke I have discussed with @colesbury and @gchanan before writing this patch. I agree with some of your concerns, but here are a couple reasons:\n\nIf people want to calculate their losses at each GPU, they can't treat DP as non-existent and will have to face this problem no matter what.\nEven if people use .unsqueeze(0), the output shape will still be number_of_GPU-dependent.\nThis pattern works before 0.4.\nThe pattern @colesbury and I were thinking about is calculating loss with size_average=False in Module forward, and sum on the resulting vector from DP, and backward.", "body": "@apaszke I have discussed with @colesbury and @gchanan before writing this patch. I agree with some of your concerns, but here are a couple reasons:\r\n1. If people want to calculate their losses at each GPU, they can't treat DP as non-existent and will have to face this problem no matter what.\r\n2. Even if people use `.unsqueeze(0)`, the output shape will still be number_of_GPU-dependent.\r\n3. This pattern works before 0.4.\r\n4. The pattern @colesbury and I were thinking about is calculating loss with `size_average=False` in Module `forward`, and `sum` on the resulting vector from DP, and backward. "}