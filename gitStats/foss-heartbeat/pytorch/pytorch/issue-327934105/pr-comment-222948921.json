{"url": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/222948921", "pull_request_review_id": 161960627, "id": 222948921, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIyMjk0ODkyMQ==", "diff_hunk": "@@ -51,12 +53,23 @@ def forward(ctx, target_device, dim, *inputs):\n         ctx.target_device = target_device\n         ctx.dim = dim\n         ctx.input_gpus = tuple(map(lambda i: i.get_device(), inputs))\n+        if all(t.dim() == 0 for t in inputs) and dim == 0:", "path": "torch/nn/parallel/_functions.py", "position": 10, "original_position": 10, "commit_id": "36da6db32f40dc1ce16537874f9209ae372f4db5", "original_commit_id": "36da6db32f40dc1ce16537874f9209ae372f4db5", "user": {"login": "ozancaglayan", "id": 330946, "node_id": "MDQ6VXNlcjMzMDk0Ng==", "avatar_url": "https://avatars0.githubusercontent.com/u/330946?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ozancaglayan", "html_url": "https://github.com/ozancaglayan", "followers_url": "https://api.github.com/users/ozancaglayan/followers", "following_url": "https://api.github.com/users/ozancaglayan/following{/other_user}", "gists_url": "https://api.github.com/users/ozancaglayan/gists{/gist_id}", "starred_url": "https://api.github.com/users/ozancaglayan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ozancaglayan/subscriptions", "organizations_url": "https://api.github.com/users/ozancaglayan/orgs", "repos_url": "https://api.github.com/users/ozancaglayan/repos", "events_url": "https://api.github.com/users/ozancaglayan/events{/privacy}", "received_events_url": "https://api.github.com/users/ozancaglayan/received_events", "type": "User", "site_admin": false}, "body": "But isn't this contradictory to the configurable `dim` argument of `DataParallel` ? So if one has the samples at `dim=1` and passes 1 to `DataParallel`, everything goes well under this unsqueezing logic where it fails.", "created_at": "2018-10-05T09:41:32Z", "updated_at": "2018-11-23T15:52:25Z", "html_url": "https://github.com/pytorch/pytorch/pull/7973#discussion_r222948921", "pull_request_url": "https://api.github.com/repos/pytorch/pytorch/pulls/7973", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/222948921"}, "html": {"href": "https://github.com/pytorch/pytorch/pull/7973#discussion_r222948921"}, "pull_request": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/7973"}}, "body_html": "<p>But isn't this contradictory to the configurable <code>dim</code> argument of <code>DataParallel</code> ? So if one has the samples at <code>dim=1</code> and passes 1 to <code>DataParallel</code>, everything goes well under this unsqueezing logic where it fails.</p>", "body_text": "But isn't this contradictory to the configurable dim argument of DataParallel ? So if one has the samples at dim=1 and passes 1 to DataParallel, everything goes well under this unsqueezing logic where it fails.", "in_reply_to_id": 222666048}