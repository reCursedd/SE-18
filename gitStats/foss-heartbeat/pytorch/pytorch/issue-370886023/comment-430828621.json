{"url": "https://api.github.com/repos/pytorch/pytorch/issues/comments/430828621", "html_url": "https://github.com/pytorch/pytorch/pull/12746#issuecomment-430828621", "issue_url": "https://api.github.com/repos/pytorch/pytorch/issues/12746", "id": 430828621, "node_id": "MDEyOklzc3VlQ29tbWVudDQzMDgyODYyMQ==", "user": {"login": "ailzhang", "id": 5248122, "node_id": "MDQ6VXNlcjUyNDgxMjI=", "avatar_url": "https://avatars2.githubusercontent.com/u/5248122?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ailzhang", "html_url": "https://github.com/ailzhang", "followers_url": "https://api.github.com/users/ailzhang/followers", "following_url": "https://api.github.com/users/ailzhang/following{/other_user}", "gists_url": "https://api.github.com/users/ailzhang/gists{/gist_id}", "starred_url": "https://api.github.com/users/ailzhang/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ailzhang/subscriptions", "organizations_url": "https://api.github.com/users/ailzhang/orgs", "repos_url": "https://api.github.com/users/ailzhang/repos", "events_url": "https://api.github.com/users/ailzhang/events{/privacy}", "received_events_url": "https://api.github.com/users/ailzhang/received_events", "type": "User", "site_admin": false}, "created_at": "2018-10-17T23:53:25Z", "updated_at": "2018-10-18T02:21:58Z", "author_association": "CONTRIBUTOR", "body_html": "<p><a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=1310570\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/soumith\">@soumith</a> I added a few tests. There is one thing left todo:<br>\nAs you can see from examples above, Numpy does automatic trimming and padding  while we use a fixed precision of 4.  Numpy default is 8. But this causes a problem when we try to print a really long tensor, we actually force the print precision to be 4:</p>\n<pre><code>&gt;&gt;&gt; np.array([123456789.])\narray([1.23456789e+08])\n&gt;&gt;&gt; torch.tensor([123456789.])\ntensor([1.2346e+08])\n</code></pre>\n<p>I actually think we should port the dragon4_scientific code from Numpy here to make the print prettier.  But it should be in a separate PR and depends on the priority. I opened <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load issue title\" data-id=\"371309565\" data-permission-text=\"Issue title is private\" data-url=\"https://github.com/pytorch/pytorch/issues/12797\" data-hovercard-type=\"issue\" data-hovercard-url=\"/pytorch/pytorch/issues/12797/hovercard\" href=\"https://github.com/pytorch/pytorch/issues/12797\">#12797</a> for it.<br>\n<a href=\"https://github.com/numpy/numpy/blob/f36d2d4d3f622f7901e3d5ade13e04fc05062948/numpy/core/src/multiarray/multiarraymodule.c#L3530\">https://github.com/numpy/numpy/blob/f36d2d4d3f622f7901e3d5ade13e04fc05062948/numpy/core/src/multiarray/multiarraymodule.c#L3530</a></p>", "body_text": "@soumith I added a few tests. There is one thing left todo:\nAs you can see from examples above, Numpy does automatic trimming and padding  while we use a fixed precision of 4.  Numpy default is 8. But this causes a problem when we try to print a really long tensor, we actually force the print precision to be 4:\n>>> np.array([123456789.])\narray([1.23456789e+08])\n>>> torch.tensor([123456789.])\ntensor([1.2346e+08])\n\nI actually think we should port the dragon4_scientific code from Numpy here to make the print prettier.  But it should be in a separate PR and depends on the priority. I opened #12797 for it.\nhttps://github.com/numpy/numpy/blob/f36d2d4d3f622f7901e3d5ade13e04fc05062948/numpy/core/src/multiarray/multiarraymodule.c#L3530", "body": "@soumith I added a few tests. There is one thing left todo:\r\nAs you can see from examples above, Numpy does automatic trimming and padding  while we use a fixed precision of 4.  Numpy default is 8. But this causes a problem when we try to print a really long tensor, we actually force the print precision to be 4:\r\n```\r\n>>> np.array([123456789.])\r\narray([1.23456789e+08])\r\n>>> torch.tensor([123456789.])\r\ntensor([1.2346e+08])\r\n```\r\nI actually think we should port the dragon4_scientific code from Numpy here to make the print prettier.  But it should be in a separate PR and depends on the priority. I opened #12797 for it. \r\nhttps://github.com/numpy/numpy/blob/f36d2d4d3f622f7901e3d5ade13e04fc05062948/numpy/core/src/multiarray/multiarraymodule.c#L3530"}