{"url": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/112008004", "pull_request_review_id": 33290103, "id": 112008004, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDExMjAwODAwNA==", "diff_hunk": "@@ -64,30 +45,48 @@ class UpsamplingNearest2d(_UpsamplingBase):\n         [torch.FloatTensor of size 1x1x4x4]\n \n     \"\"\"\n+    def __init__(self, size=None, scale_factor=None):", "path": "torch/nn/modules/upsampling.py", "position": null, "original_position": 32, "commit_id": "b72e375819b41e67a9003436a60ad20599dff389", "original_commit_id": "c31ded0c9f2613d7c5fb51cd0be738ba9fed4902", "user": {"login": "andrewgiessel", "id": 1160997, "node_id": "MDQ6VXNlcjExNjA5OTc=", "avatar_url": "https://avatars0.githubusercontent.com/u/1160997?v=4", "gravatar_id": "", "url": "https://api.github.com/users/andrewgiessel", "html_url": "https://github.com/andrewgiessel", "followers_url": "https://api.github.com/users/andrewgiessel/followers", "following_url": "https://api.github.com/users/andrewgiessel/following{/other_user}", "gists_url": "https://api.github.com/users/andrewgiessel/gists{/gist_id}", "starred_url": "https://api.github.com/users/andrewgiessel/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/andrewgiessel/subscriptions", "organizations_url": "https://api.github.com/users/andrewgiessel/orgs", "repos_url": "https://api.github.com/users/andrewgiessel/repos", "events_url": "https://api.github.com/users/andrewgiessel/events{/privacy}", "received_events_url": "https://api.github.com/users/andrewgiessel/received_events", "type": "User", "site_admin": false}, "body": "Ya, I didn't like that redundancy either, but that doesn't seem to be the convention-  see for instance the dropout module and dropout function, which both ensure the value of P is between 0 and 1.\r\n\r\nI can look into this, but where would you suggest such code go?  Seems like it'd set a precedent for refactoring lots of code.", "created_at": "2017-04-18T16:58:33Z", "updated_at": "2018-11-23T15:33:06Z", "html_url": "https://github.com/pytorch/pytorch/pull/1279#discussion_r112008004", "pull_request_url": "https://api.github.com/repos/pytorch/pytorch/pulls/1279", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/112008004"}, "html": {"href": "https://github.com/pytorch/pytorch/pull/1279#discussion_r112008004"}, "pull_request": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/1279"}}, "body_html": "<p>Ya, I didn't like that redundancy either, but that doesn't seem to be the convention-  see for instance the dropout module and dropout function, which both ensure the value of P is between 0 and 1.</p>\n<p>I can look into this, but where would you suggest such code go?  Seems like it'd set a precedent for refactoring lots of code.</p>", "body_text": "Ya, I didn't like that redundancy either, but that doesn't seem to be the convention-  see for instance the dropout module and dropout function, which both ensure the value of P is between 0 and 1.\nI can look into this, but where would you suggest such code go?  Seems like it'd set a precedent for refactoring lots of code.", "in_reply_to_id": 111992317}