{"url": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/112007995", "pull_request_review_id": 33290093, "id": 112007995, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDExMjAwNzk5NQ==", "diff_hunk": "@@ -62,15 +59,39 @@ def backward(self, grad_output):\n         return grad_input\n \n \n-class UpsamplingBilinear2d(_UpsamplingBase):\n+class UpsamplingBilinear2d(Function):\n+\n+    def __init__(self, size=None, scale_factor=None):\n+        super(UpsamplingBilinear2d, self).__init__()\n+        if size is None and scale_factor is None:\n+            raise ValueError('either size or scale_factor should be defined')\n+        if scale_factor is not None:\n+            if not isinstance(scale_factor, (Integral, tuple)):\n+                raise ValueError('scale_factor must be a non-negative integer, or a tuple of non-negative integers')\n+            if isinstance(scale_factor, tuple):\n+                try:\n+                    assert len(scale_factor) == 2\n+                    for i in scale_factor:\n+                        assert isinstance(i, Integral)\n+                        assert i >= 1\n+                except AssertionError as e:\n+                    raise ValueError('scale_factor must be a non-negative integer, or a tuple of non-negative integers')\n+                \n+        if size is not None and not isinstance(size, tuple):\n+            size = (size, size)\n+        if scale_factor is not None and not isinstance(scale_factor, tuple):\n+            scale_factor = (scale_factor, scale_factor)", "path": "torch/nn/_functions/thnn/upsampling.py", "position": null, "original_position": 50, "commit_id": "b72e375819b41e67a9003436a60ad20599dff389", "original_commit_id": "c31ded0c9f2613d7c5fb51cd0be738ba9fed4902", "user": {"login": "andrewgiessel", "id": 1160997, "node_id": "MDQ6VXNlcjExNjA5OTc=", "avatar_url": "https://avatars0.githubusercontent.com/u/1160997?v=4", "gravatar_id": "", "url": "https://api.github.com/users/andrewgiessel", "html_url": "https://github.com/andrewgiessel", "followers_url": "https://api.github.com/users/andrewgiessel/followers", "following_url": "https://api.github.com/users/andrewgiessel/following{/other_user}", "gists_url": "https://api.github.com/users/andrewgiessel/gists{/gist_id}", "starred_url": "https://api.github.com/users/andrewgiessel/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/andrewgiessel/subscriptions", "organizations_url": "https://api.github.com/users/andrewgiessel/orgs", "repos_url": "https://api.github.com/users/andrewgiessel/repos", "events_url": "https://api.github.com/users/andrewgiessel/events{/privacy}", "received_events_url": "https://api.github.com/users/andrewgiessel/received_events", "type": "User", "site_admin": false}, "body": "Thanks for pointing this out!  I used it elsewhere but can do it here too.\r\n\r\nI ran into some problems when the tests passed `None` for `scale_factor`; the code would pass in (None, None) and then the integer check would fail.  I'll take another pass at this in particular.", "created_at": "2017-04-18T16:58:31Z", "updated_at": "2018-11-23T15:33:06Z", "html_url": "https://github.com/pytorch/pytorch/pull/1279#discussion_r112007995", "pull_request_url": "https://api.github.com/repos/pytorch/pytorch/pulls/1279", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/112007995"}, "html": {"href": "https://github.com/pytorch/pytorch/pull/1279#discussion_r112007995"}, "pull_request": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/1279"}}, "body_html": "<p>Thanks for pointing this out!  I used it elsewhere but can do it here too.</p>\n<p>I ran into some problems when the tests passed <code>None</code> for <code>scale_factor</code>; the code would pass in (None, None) and then the integer check would fail.  I'll take another pass at this in particular.</p>", "body_text": "Thanks for pointing this out!  I used it elsewhere but can do it here too.\nI ran into some problems when the tests passed None for scale_factor; the code would pass in (None, None) and then the integer check would fail.  I'll take another pass at this in particular.", "in_reply_to_id": 111991231}