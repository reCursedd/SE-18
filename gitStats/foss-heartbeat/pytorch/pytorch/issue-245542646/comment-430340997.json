{"url": "https://api.github.com/repos/pytorch/pytorch/issues/comments/430340997", "html_url": "https://github.com/pytorch/pytorch/issues/2206#issuecomment-430340997", "issue_url": "https://api.github.com/repos/pytorch/pytorch/issues/2206", "id": 430340997, "node_id": "MDEyOklzc3VlQ29tbWVudDQzMDM0MDk5Nw==", "user": {"login": "colesbury", "id": 655866, "node_id": "MDQ6VXNlcjY1NTg2Ng==", "avatar_url": "https://avatars1.githubusercontent.com/u/655866?v=4", "gravatar_id": "", "url": "https://api.github.com/users/colesbury", "html_url": "https://github.com/colesbury", "followers_url": "https://api.github.com/users/colesbury/followers", "following_url": "https://api.github.com/users/colesbury/following{/other_user}", "gists_url": "https://api.github.com/users/colesbury/gists{/gist_id}", "starred_url": "https://api.github.com/users/colesbury/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/colesbury/subscriptions", "organizations_url": "https://api.github.com/users/colesbury/orgs", "repos_url": "https://api.github.com/users/colesbury/repos", "events_url": "https://api.github.com/users/colesbury/events{/privacy}", "received_events_url": "https://api.github.com/users/colesbury/received_events", "type": "User", "site_admin": false}, "created_at": "2018-10-16T18:12:11Z", "updated_at": "2018-10-16T18:12:11Z", "author_association": "MEMBER", "body_html": "<p>Yes, I think we want this functionality, but I think we should add it as a Tensor factory argument instead of to the Storage API. For example:</p>\n<pre><code>torch.empty(shape, pinned_memory=True)\n</code></pre>\n<p>In C++, it could be part of TensorOptions.</p>\n<p>In the future, we will probably want to do the same thing for shared memory allocations.</p>\n<p><a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=3768583\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/gchanan\">@gchanan</a></p>", "body_text": "Yes, I think we want this functionality, but I think we should add it as a Tensor factory argument instead of to the Storage API. For example:\ntorch.empty(shape, pinned_memory=True)\n\nIn C++, it could be part of TensorOptions.\nIn the future, we will probably want to do the same thing for shared memory allocations.\n@gchanan", "body": "Yes, I think we want this functionality, but I think we should add it as a Tensor factory argument instead of to the Storage API. For example:\r\n\r\n```\r\ntorch.empty(shape, pinned_memory=True)\r\n```\r\n\r\nIn C++, it could be part of TensorOptions.\r\n\r\nIn the future, we will probably want to do the same thing for shared memory allocations.\r\n\r\n@gchanan "}