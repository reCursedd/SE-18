{"url": "https://api.github.com/repos/pytorch/pytorch/issues/2206", "repository_url": "https://api.github.com/repos/pytorch/pytorch", "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/2206/labels{/name}", "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/2206/comments", "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/2206/events", "html_url": "https://github.com/pytorch/pytorch/issues/2206", "id": 245542646, "node_id": "MDU6SXNzdWUyNDU1NDI2NDY=", "number": 2206, "title": "Add method to allocate uninitialized pinned memory", "user": {"login": "kazimuth", "id": 555667, "node_id": "MDQ6VXNlcjU1NTY2Nw==", "avatar_url": "https://avatars3.githubusercontent.com/u/555667?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kazimuth", "html_url": "https://github.com/kazimuth", "followers_url": "https://api.github.com/users/kazimuth/followers", "following_url": "https://api.github.com/users/kazimuth/following{/other_user}", "gists_url": "https://api.github.com/users/kazimuth/gists{/gist_id}", "starred_url": "https://api.github.com/users/kazimuth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kazimuth/subscriptions", "organizations_url": "https://api.github.com/users/kazimuth/orgs", "repos_url": "https://api.github.com/users/kazimuth/repos", "events_url": "https://api.github.com/users/kazimuth/events{/privacy}", "received_events_url": "https://api.github.com/users/kazimuth/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 8, "created_at": "2017-07-25T21:35:42Z", "updated_at": "2018-10-17T14:58:52Z", "closed_at": null, "author_association": "NONE", "body_html": "<p>If you call:</p>\n<pre><code>torch.Storage(512).pin_memory()\n</code></pre>\n<p>pinned memory will be allocated, and then have your uninitialized tensor copied into it, which is unnecessary.</p>\n<p>It's possible to to directly allocate pinned memory using:</p>\n<pre><code>torch.Storage(512, allocator=torch.cuda._host_allocator())\n</code></pre>\n<p>But it would be nice if there was a stable method to call that did this, maybe similar to <a href=\"http://pytorch.org/docs/master/storage.html#torch.FloatStorage.from_file\" rel=\"nofollow\"><code>Storage.from_file()</code></a>. Maybe <code>Storage.pinned()</code>? Or <code>Storage(512, pinned=True)</code>?</p>\n<p>I'd be happy to implement this if I'm told what the API should look like.</p>", "body_text": "If you call:\ntorch.Storage(512).pin_memory()\n\npinned memory will be allocated, and then have your uninitialized tensor copied into it, which is unnecessary.\nIt's possible to to directly allocate pinned memory using:\ntorch.Storage(512, allocator=torch.cuda._host_allocator())\n\nBut it would be nice if there was a stable method to call that did this, maybe similar to Storage.from_file(). Maybe Storage.pinned()? Or Storage(512, pinned=True)?\nI'd be happy to implement this if I'm told what the API should look like.", "body": "If you call:\r\n```\r\ntorch.Storage(512).pin_memory()\r\n```\r\npinned memory will be allocated, and then have your uninitialized tensor copied into it, which is unnecessary.\r\n\r\nIt's possible to to directly allocate pinned memory using:\r\n\r\n```\r\ntorch.Storage(512, allocator=torch.cuda._host_allocator())\r\n```\r\n\r\nBut it would be nice if there was a stable method to call that did this, maybe similar to [`Storage.from_file()`](http://pytorch.org/docs/master/storage.html#torch.FloatStorage.from_file). Maybe `Storage.pinned()`? Or `Storage(512, pinned=True)`?\r\n\r\nI'd be happy to implement this if I'm told what the API should look like."}