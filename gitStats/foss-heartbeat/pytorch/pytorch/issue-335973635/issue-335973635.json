{"url": "https://api.github.com/repos/pytorch/pytorch/issues/8909", "repository_url": "https://api.github.com/repos/pytorch/pytorch", "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/8909/labels{/name}", "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/8909/comments", "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/8909/events", "html_url": "https://github.com/pytorch/pytorch/issues/8909", "id": 335973635, "node_id": "MDU6SXNzdWUzMzU5NzM2MzU=", "number": 8909, "title": "[ppc64le pytorch] RuntimeError: NCCL Error 13: invalid data type ", "user": {"login": "avmgithub", "id": 9083746, "node_id": "MDQ6VXNlcjkwODM3NDY=", "avatar_url": "https://avatars1.githubusercontent.com/u/9083746?v=4", "gravatar_id": "", "url": "https://api.github.com/users/avmgithub", "html_url": "https://github.com/avmgithub", "followers_url": "https://api.github.com/users/avmgithub/followers", "following_url": "https://api.github.com/users/avmgithub/following{/other_user}", "gists_url": "https://api.github.com/users/avmgithub/gists{/gist_id}", "starred_url": "https://api.github.com/users/avmgithub/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/avmgithub/subscriptions", "organizations_url": "https://api.github.com/users/avmgithub/orgs", "repos_url": "https://api.github.com/users/avmgithub/repos", "events_url": "https://api.github.com/users/avmgithub/events{/privacy}", "received_events_url": "https://api.github.com/users/avmgithub/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2018-06-26T20:13:43Z", "updated_at": "2018-07-27T15:59:52Z", "closed_at": "2018-07-27T15:59:52Z", "author_association": "CONTRIBUTOR", "body_html": "<p>torch (0.5.0a0+f607794)<br>\nRH 7.5<br>\nCUDA 9.2<br>\ncuDNN 7<br>\nGPU :  Pascal<br>\ncmake version 3.11.1</p>\n<h2>Issue description</h2>\n<p>When running autograd test and other tests ,  tests fails with :<br>\nRuntimeError: NCCL Error 13: invalid data type<br>\nExample:<br>\nERROR: test_unused_output_gpu (<strong>main</strong>.TestAutograd)</p>\n<p>Traceback (most recent call last):<br>\nFile \"test_autograd.py\", line 1360, in test_unused_output_gpu<br>\noutputs = Broadcast.apply(list(range(torch.cuda.device_count())), x)<br>\nFile \"/home/freddie/miniconda/lib/python3.6/site-packages/torch/nn/parallel/_functions.py\", line 19, in forward<br>\noutputs = comm.broadcast_coalesced(inputs, ctx.target_gpus)<br>\nFile \"/home/freddie/miniconda/lib/python3.6/site-packages/torch/cuda/comm.py\", line 40, in broadcast_coalesced<br>\nreturn torch._C._broadcast_coalesced(tensors, devices, buffer_size)<br>\nRuntimeError: NCCL Error 13: invalid data type</p>\n<p>The build log shows that it seemed to have found the nccl2 shipped with CUDA 9.2<br>\nbut later in the log it sets NCCL_ROOT_DIR==/home/****/builder/jenkins/pytorch/pytorch/torch/lib/tmp_install   which I believe is nccl1</p>\n<p>here is the portion of the log that finds nccl2<br>\n-- Determining NCCL version from the header file: /usr/local/cuda/include/nccl.h<br>\n-- NCCL_MAJOR_VERSION: 2<br>\n-- Found NCCL (include: /usr/local/cuda/include, library: /usr/local/cuda/lib64/libnccl.so)</p>\n<p>here is the portion that sets NCCL_ROOT_DIR</p>\n<ul>\n<li>NCCL_ROOT_DIR=/home/****/builder/jenkins/pytorch/pytorch/torch/lib/tmp_install</li>\n<li>[[ 1 -eq 1 ]]</li>\n<li>GLOO_FLAGS='-DUSE_CUDA=1 -DNCCL_ROOT_DIR=/home/****/builder/jenkins/pytorch/pytorch/torch/lib/tmp_install'</li>\n</ul>\n<p>Previous versions of CUDA like 9.1 and less did not have this problem.  If I remember correctly CUDA 9.1 and below shipped with nccl1.    I also did not have to set NCCL_ROOT_DIR, NCCL_LIB_DIR, NCCL_INCLUDE_DIR explicitly when using CUDA 9.1 and below.</p>\n<h2>Workaround</h2>\n<p>export USE_SYSTEM_NCCL=1<br>\nexport NCCL_ROOT_DIR=/usr/local/cuda<br>\nexport NCCL_LIB_DIR=/usr/local/cuda/lib64<br>\nexport NCCL_INCLUDE_DIR=/usr/local/cuda/include</p>", "body_text": "torch (0.5.0a0+f607794)\nRH 7.5\nCUDA 9.2\ncuDNN 7\nGPU :  Pascal\ncmake version 3.11.1\nIssue description\nWhen running autograd test and other tests ,  tests fails with :\nRuntimeError: NCCL Error 13: invalid data type\nExample:\nERROR: test_unused_output_gpu (main.TestAutograd)\nTraceback (most recent call last):\nFile \"test_autograd.py\", line 1360, in test_unused_output_gpu\noutputs = Broadcast.apply(list(range(torch.cuda.device_count())), x)\nFile \"/home/freddie/miniconda/lib/python3.6/site-packages/torch/nn/parallel/_functions.py\", line 19, in forward\noutputs = comm.broadcast_coalesced(inputs, ctx.target_gpus)\nFile \"/home/freddie/miniconda/lib/python3.6/site-packages/torch/cuda/comm.py\", line 40, in broadcast_coalesced\nreturn torch._C._broadcast_coalesced(tensors, devices, buffer_size)\nRuntimeError: NCCL Error 13: invalid data type\nThe build log shows that it seemed to have found the nccl2 shipped with CUDA 9.2\nbut later in the log it sets NCCL_ROOT_DIR==/home/****/builder/jenkins/pytorch/pytorch/torch/lib/tmp_install   which I believe is nccl1\nhere is the portion of the log that finds nccl2\n-- Determining NCCL version from the header file: /usr/local/cuda/include/nccl.h\n-- NCCL_MAJOR_VERSION: 2\n-- Found NCCL (include: /usr/local/cuda/include, library: /usr/local/cuda/lib64/libnccl.so)\nhere is the portion that sets NCCL_ROOT_DIR\n\nNCCL_ROOT_DIR=/home/****/builder/jenkins/pytorch/pytorch/torch/lib/tmp_install\n[[ 1 -eq 1 ]]\nGLOO_FLAGS='-DUSE_CUDA=1 -DNCCL_ROOT_DIR=/home/****/builder/jenkins/pytorch/pytorch/torch/lib/tmp_install'\n\nPrevious versions of CUDA like 9.1 and less did not have this problem.  If I remember correctly CUDA 9.1 and below shipped with nccl1.    I also did not have to set NCCL_ROOT_DIR, NCCL_LIB_DIR, NCCL_INCLUDE_DIR explicitly when using CUDA 9.1 and below.\nWorkaround\nexport USE_SYSTEM_NCCL=1\nexport NCCL_ROOT_DIR=/usr/local/cuda\nexport NCCL_LIB_DIR=/usr/local/cuda/lib64\nexport NCCL_INCLUDE_DIR=/usr/local/cuda/include", "body": "torch (0.5.0a0+f607794)\r\nRH 7.5\r\nCUDA 9.2 \r\ncuDNN 7\r\nGPU :  Pascal\r\ncmake version 3.11.1\r\n\r\n## Issue description\r\nWhen running autograd test and other tests ,  tests fails with :\r\nRuntimeError: NCCL Error 13: invalid data type\r\n Example:\r\nERROR: test_unused_output_gpu (__main__.TestAutograd)\r\n \r\nTraceback (most recent call last):\r\n  File \"test_autograd.py\", line 1360, in test_unused_output_gpu\r\n    outputs = Broadcast.apply(list(range(torch.cuda.device_count())), x)\r\n  File \"/home/freddie/miniconda/lib/python3.6/site-packages/torch/nn/parallel/_functions.py\", line 19, in forward\r\n    outputs = comm.broadcast_coalesced(inputs, ctx.target_gpus)\r\n  File \"/home/freddie/miniconda/lib/python3.6/site-packages/torch/cuda/comm.py\", line 40, in broadcast_coalesced\r\n    return torch._C._broadcast_coalesced(tensors, devices, buffer_size)\r\nRuntimeError: NCCL Error 13: invalid data type\r\n\r\nThe build log shows that it seemed to have found the nccl2 shipped with CUDA 9.2\r\nbut later in the log it sets NCCL_ROOT_DIR==/home/****/builder/jenkins/pytorch/pytorch/torch/lib/tmp_install   which I believe is nccl1\r\n\r\nhere is the portion of the log that finds nccl2 \r\n-- Determining NCCL version from the header file: /usr/local/cuda/include/nccl.h\r\n-- NCCL_MAJOR_VERSION: 2\r\n-- Found NCCL (include: /usr/local/cuda/include, library: /usr/local/cuda/lib64/libnccl.so)\r\n\r\nhere is the portion that sets NCCL_ROOT_DIR\r\n+ NCCL_ROOT_DIR=/home/****/builder/jenkins/pytorch/pytorch/torch/lib/tmp_install\r\n+ [[ 1 -eq 1 ]]\r\n+ GLOO_FLAGS='-DUSE_CUDA=1 -DNCCL_ROOT_DIR=/home/****/builder/jenkins/pytorch/pytorch/torch/lib/tmp_install'\r\n\r\nPrevious versions of CUDA like 9.1 and less did not have this problem.  If I remember correctly CUDA 9.1 and below shipped with nccl1.    I also did not have to set NCCL_ROOT_DIR, NCCL_LIB_DIR, NCCL_INCLUDE_DIR explicitly when using CUDA 9.1 and below.\r\n\r\n## Workaround\r\nexport USE_SYSTEM_NCCL=1\r\nexport NCCL_ROOT_DIR=/usr/local/cuda\r\nexport NCCL_LIB_DIR=/usr/local/cuda/lib64\r\nexport NCCL_INCLUDE_DIR=/usr/local/cuda/include"}