{"url": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/199326529", "pull_request_review_id": 133430284, "id": 199326529, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5OTMyNjUyOQ==", "diff_hunk": "@@ -96,10 +83,18 @@ std::tuple<Tensor, Tensor> slogdet(const Tensor& self) {\n   return std::make_tuple(det.sign(), diag_U.abs_().log_().sum());\n }\n \n+Tensor pinverse(const Tensor& self) {\n+  AT_CHECK(at::isFloatingType(self.type().scalarType()) && self.dim() == 2,\n+           \"pinverse(\", self.type(), \"{\", self.sizes(), \"}): expected a 2D tensor \"\n+           \"of floating types\");\n+  Tensor U, S, V;\n+  std::tie(U, S, V) = self.svd();\n+  Tensor S_pseudoinv = at::where(S != 0.0, S.reciprocal(), at::zeros({}, self.options()));", "path": "aten/src/ATen/native/LinearAlgebra.cpp", "position": null, "original_position": 77, "commit_id": "6bac86610365da9f0afe3a4d7f12275295a2918a", "original_commit_id": "1bb5614079c6685ce13dae37ec065fbad362b246", "user": {"login": "SsnL", "id": 5674597, "node_id": "MDQ6VXNlcjU2NzQ1OTc=", "avatar_url": "https://avatars2.githubusercontent.com/u/5674597?v=4", "gravatar_id": "", "url": "https://api.github.com/users/SsnL", "html_url": "https://github.com/SsnL", "followers_url": "https://api.github.com/users/SsnL/followers", "following_url": "https://api.github.com/users/SsnL/following{/other_user}", "gists_url": "https://api.github.com/users/SsnL/gists{/gist_id}", "starred_url": "https://api.github.com/users/SsnL/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/SsnL/subscriptions", "organizations_url": "https://api.github.com/users/SsnL/orgs", "repos_url": "https://api.github.com/users/SsnL/repos", "events_url": "https://api.github.com/users/SsnL/events{/privacy}", "received_events_url": "https://api.github.com/users/SsnL/received_events", "type": "User", "site_admin": false}, "body": "Let's do the [numpy](https://docs.scipy.org/doc/numpy/reference/generated/numpy.linalg.pinv.html) thing and introduce another `rcond` parameter s.t. `s[i] = s[i] > rcond * s[0] ? s[i] : 0`.\r\n\r\nBtw, why did you call this `pinverse` and not `pinv`?", "created_at": "2018-06-30T16:30:52Z", "updated_at": "2018-11-23T15:46:37Z", "html_url": "https://github.com/pytorch/pytorch/pull/9052#discussion_r199326529", "pull_request_url": "https://api.github.com/repos/pytorch/pytorch/pulls/9052", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/199326529"}, "html": {"href": "https://github.com/pytorch/pytorch/pull/9052#discussion_r199326529"}, "pull_request": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/9052"}}, "body_html": "<p>Let's do the <a href=\"https://docs.scipy.org/doc/numpy/reference/generated/numpy.linalg.pinv.html\" rel=\"nofollow\">numpy</a> thing and introduce another <code>rcond</code> parameter s.t. <code>s[i] = s[i] &gt; rcond * s[0] ? s[i] : 0</code>.</p>\n<p>Btw, why did you call this <code>pinverse</code> and not <code>pinv</code>?</p>", "body_text": "Let's do the numpy thing and introduce another rcond parameter s.t. s[i] = s[i] > rcond * s[0] ? s[i] : 0.\nBtw, why did you call this pinverse and not pinv?", "in_reply_to_id": 199324348}