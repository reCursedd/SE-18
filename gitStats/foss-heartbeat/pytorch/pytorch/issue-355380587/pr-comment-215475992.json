{"url": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/215475992", "pull_request_review_id": 152749295, "id": 215475992, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIxNTQ3NTk5Mg==", "diff_hunk": "@@ -0,0 +1,33 @@\n+#include \"torch/csrc/autograd/profiler.h\"\n+#include \"torch/csrc/jit/custom_operator.h\"\n+#include \"torch/csrc/jit/operator.h\"\n+\n+namespace torch {\n+namespace jit {\n+\n+namespace {\n+RegisterOperators reg({\n+    Operator(\n+        \"aten::split(Tensor self, int[] split_sizes, int dim=0) -> Tensor[]\",", "path": "torch/csrc/jit/register_special_ops.cpp", "position": 11, "original_position": 11, "commit_id": "e2ad1dab59c56d179028fb3c867c3059b6f6c368", "original_commit_id": "d1b70d6fabad2ab1508ee808761e9568e360f1be", "user": {"login": "driazati", "id": 9407960, "node_id": "MDQ6VXNlcjk0MDc5NjA=", "avatar_url": "https://avatars3.githubusercontent.com/u/9407960?v=4", "gravatar_id": "", "url": "https://api.github.com/users/driazati", "html_url": "https://github.com/driazati", "followers_url": "https://api.github.com/users/driazati/followers", "following_url": "https://api.github.com/users/driazati/following{/other_user}", "gists_url": "https://api.github.com/users/driazati/gists{/gist_id}", "starred_url": "https://api.github.com/users/driazati/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/driazati/subscriptions", "organizations_url": "https://api.github.com/users/driazati/orgs", "repos_url": "https://api.github.com/users/driazati/repos", "events_url": "https://api.github.com/users/driazati/events{/privacy}", "received_events_url": "https://api.github.com/users/driazati/received_events", "type": "User", "site_admin": false}, "body": "`split` is exposed on the user side for both a single int and a list param (e.g. `x.split(2)` and `x.split([2, 2])`), so I figured it would need to be the same case for the corresponding aten op. \r\n\r\nThe motivation for this was in [`test_autograd.py`](https://github.com/pytorch/pytorch/blob/master/test/test_autograd.py#L3163) some of the tests call `split` with a list.", "created_at": "2018-09-06T02:02:00Z", "updated_at": "2018-11-23T15:50:39Z", "html_url": "https://github.com/pytorch/pytorch/pull/11051#discussion_r215475992", "pull_request_url": "https://api.github.com/repos/pytorch/pytorch/pulls/11051", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/215475992"}, "html": {"href": "https://github.com/pytorch/pytorch/pull/11051#discussion_r215475992"}, "pull_request": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/11051"}}, "body_html": "<p><code>split</code> is exposed on the user side for both a single int and a list param (e.g. <code>x.split(2)</code> and <code>x.split([2, 2])</code>), so I figured it would need to be the same case for the corresponding aten op.</p>\n<p>The motivation for this was in <a href=\"https://github.com/pytorch/pytorch/blob/master/test/test_autograd.py#L3163\"><code>test_autograd.py</code></a> some of the tests call <code>split</code> with a list.</p>", "body_text": "split is exposed on the user side for both a single int and a list param (e.g. x.split(2) and x.split([2, 2])), so I figured it would need to be the same case for the corresponding aten op.\nThe motivation for this was in test_autograd.py some of the tests call split with a list.", "in_reply_to_id": 215468103}