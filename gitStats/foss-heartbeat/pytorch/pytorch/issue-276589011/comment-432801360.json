{"url": "https://api.github.com/repos/pytorch/pytorch/issues/comments/432801360", "html_url": "https://github.com/pytorch/pytorch/issues/3858#issuecomment-432801360", "issue_url": "https://api.github.com/repos/pytorch/pytorch/issues/3858", "id": 432801360, "node_id": "MDEyOklzc3VlQ29tbWVudDQzMjgwMTM2MA==", "user": {"login": "harpone", "id": 5112840, "node_id": "MDQ6VXNlcjUxMTI4NDA=", "avatar_url": "https://avatars0.githubusercontent.com/u/5112840?v=4", "gravatar_id": "", "url": "https://api.github.com/users/harpone", "html_url": "https://github.com/harpone", "followers_url": "https://api.github.com/users/harpone/followers", "following_url": "https://api.github.com/users/harpone/following{/other_user}", "gists_url": "https://api.github.com/users/harpone/gists{/gist_id}", "starred_url": "https://api.github.com/users/harpone/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/harpone/subscriptions", "organizations_url": "https://api.github.com/users/harpone/orgs", "repos_url": "https://api.github.com/users/harpone/repos", "events_url": "https://api.github.com/users/harpone/events{/privacy}", "received_events_url": "https://api.github.com/users/harpone/received_events", "type": "User", "site_admin": false}, "created_at": "2018-10-24T19:42:44Z", "updated_at": "2018-10-24T19:42:44Z", "author_association": "NONE", "body_html": "<p>Here's a simple and pretty fast implementation for <code>[H, W]</code> shaped arrays:</p>\n<pre><code>def pad_circular(x, pad):\n    \"\"\"\n\n    :param x: shape [H, W]\n    :param pad: int &gt;= 0\n    :return:\n    \"\"\"\n    x = torch.cat([x, x[0:pad]], dim=0)\n    x = torch.cat([x, x[:, 0:pad]], dim=1)\n    x = torch.cat([x[-2 * pad:-pad], x], dim=0)\n    x = torch.cat([x[:, -2 * pad:-pad], x], dim=1)\n\n    return x\n</code></pre>\n<p>For a <code>1000x1000</code> array I get this:</p>\n<pre><code>N = 1000\n\nx = torch.randn(N, N).cuda()\n\n%timeit pad_circular(x, 1)\n\n&gt; 38 \u00b5s \u00b1 1.53 \u00b5s per loop (mean \u00b1 std. dev. of 7 runs, 10000 loops each)\n</code></pre>\n<p>For the <code>repeat</code> way above I get CUDA OOM error...</p>", "body_text": "Here's a simple and pretty fast implementation for [H, W] shaped arrays:\ndef pad_circular(x, pad):\n    \"\"\"\n\n    :param x: shape [H, W]\n    :param pad: int >= 0\n    :return:\n    \"\"\"\n    x = torch.cat([x, x[0:pad]], dim=0)\n    x = torch.cat([x, x[:, 0:pad]], dim=1)\n    x = torch.cat([x[-2 * pad:-pad], x], dim=0)\n    x = torch.cat([x[:, -2 * pad:-pad], x], dim=1)\n\n    return x\n\nFor a 1000x1000 array I get this:\nN = 1000\n\nx = torch.randn(N, N).cuda()\n\n%timeit pad_circular(x, 1)\n\n> 38 \u00b5s \u00b1 1.53 \u00b5s per loop (mean \u00b1 std. dev. of 7 runs, 10000 loops each)\n\nFor the repeat way above I get CUDA OOM error...", "body": "Here's a simple and pretty fast implementation for `[H, W]` shaped arrays:\r\n\r\n```\r\ndef pad_circular(x, pad):\r\n    \"\"\"\r\n\r\n    :param x: shape [H, W]\r\n    :param pad: int >= 0\r\n    :return:\r\n    \"\"\"\r\n    x = torch.cat([x, x[0:pad]], dim=0)\r\n    x = torch.cat([x, x[:, 0:pad]], dim=1)\r\n    x = torch.cat([x[-2 * pad:-pad], x], dim=0)\r\n    x = torch.cat([x[:, -2 * pad:-pad], x], dim=1)\r\n\r\n    return x\r\n```\r\n\r\nFor a `1000x1000` array I get this:\r\n```\r\nN = 1000\r\n\r\nx = torch.randn(N, N).cuda()\r\n\r\n%timeit pad_circular(x, 1)\r\n\r\n> 38 \u00b5s \u00b1 1.53 \u00b5s per loop (mean \u00b1 std. dev. of 7 runs, 10000 loops each)\r\n```\r\n\r\nFor the `repeat` way above I get CUDA OOM error..."}