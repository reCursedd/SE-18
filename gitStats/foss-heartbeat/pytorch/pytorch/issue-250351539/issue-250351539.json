{"url": "https://api.github.com/repos/pytorch/pytorch/issues/2425", "repository_url": "https://api.github.com/repos/pytorch/pytorch", "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/2425/labels{/name}", "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/2425/comments", "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/2425/events", "html_url": "https://github.com/pytorch/pytorch/issues/2425", "id": 250351539, "node_id": "MDU6SXNzdWUyNTAzNTE1Mzk=", "number": 2425, "title": "RuntimeError when using a += b but not when doing a= a + b", "user": {"login": "MarkTension", "id": 16321685, "node_id": "MDQ6VXNlcjE2MzIxNjg1", "avatar_url": "https://avatars0.githubusercontent.com/u/16321685?v=4", "gravatar_id": "", "url": "https://api.github.com/users/MarkTension", "html_url": "https://github.com/MarkTension", "followers_url": "https://api.github.com/users/MarkTension/followers", "following_url": "https://api.github.com/users/MarkTension/following{/other_user}", "gists_url": "https://api.github.com/users/MarkTension/gists{/gist_id}", "starred_url": "https://api.github.com/users/MarkTension/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/MarkTension/subscriptions", "organizations_url": "https://api.github.com/users/MarkTension/orgs", "repos_url": "https://api.github.com/users/MarkTension/repos", "events_url": "https://api.github.com/users/MarkTension/events{/privacy}", "received_events_url": "https://api.github.com/users/MarkTension/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2017-08-15T15:35:12Z", "updated_at": "2017-08-15T17:16:35Z", "closed_at": "2017-08-15T17:16:35Z", "author_association": "NONE", "body_html": "<p>With PyTorch I'm having a problem doing an operation with two Variables:</p>\n<pre><code>    sub_patch  : [torch.FloatTensor of size 9x9x32]\n\n    pred_patch : [torch.FloatTensor of size 5x5x32]\n</code></pre>\n<p>sub_patch is a Variable made by torch.zeros<br>\npred_patch is a Variable of which I index each of the 25 nodes with a nested for-loop, and that I multiply with its corresponding unique filter (sub_filt_patch) of size [5,5,32]. The result is added to its respective place in sub_patch.</p>\n<p>This is a piece of my code:</p>\n<pre><code>for i in range(filter_sz):\n     for j in range(filter_sz):\n\n         # index correct filter from filter tensor\n         sub_filt_col = (patch_col + j) * filter_sz\n         sub_filt_row = (patch_row + i) * filter_sz\n\n         sub_filt_patch = sub_filt[sub_filt_row:(sub_filt_row + filter_sz), sub_filt_col:(sub_filt_col+filter_sz), :]\n\n         # multiply filter and pred_patch and sum onto sub patch\n         sub_patch[i:(i + filter_sz), j:(j + filter_sz), :] += (sub_filt_patch * pred_patch[i,j]).sum(dim=3)\n\n</code></pre>\n<p>The error I get from the bottom line of the piece of code here is</p>\n<pre><code>RuntimeError: in-place operations can be only used on variables that don't share storage with any other variables, but detected that there are 2 objects sharing it\n</code></pre>\n<p>This Error is not raised when using:</p>\n<p><code>   sub_patch[i:(i + filter_sz), j:(j + filter_sz), :] = sub_patch[i:(i + filter_sz), j:(j + filter_sz), :] + (sub_filt_patch * pred_patch[i,j]).sum(dim=3)</code><br>\ninstead of</p>\n<p><code>   sub_patch[i:(i + filter_sz), j:(j + filter_sz), :] += (sub_filt_patch * pred_patch[i,j]).sum(dim=3)</code><br>\nCould this be a bug?</p>", "body_text": "With PyTorch I'm having a problem doing an operation with two Variables:\n    sub_patch  : [torch.FloatTensor of size 9x9x32]\n\n    pred_patch : [torch.FloatTensor of size 5x5x32]\n\nsub_patch is a Variable made by torch.zeros\npred_patch is a Variable of which I index each of the 25 nodes with a nested for-loop, and that I multiply with its corresponding unique filter (sub_filt_patch) of size [5,5,32]. The result is added to its respective place in sub_patch.\nThis is a piece of my code:\nfor i in range(filter_sz):\n     for j in range(filter_sz):\n\n         # index correct filter from filter tensor\n         sub_filt_col = (patch_col + j) * filter_sz\n         sub_filt_row = (patch_row + i) * filter_sz\n\n         sub_filt_patch = sub_filt[sub_filt_row:(sub_filt_row + filter_sz), sub_filt_col:(sub_filt_col+filter_sz), :]\n\n         # multiply filter and pred_patch and sum onto sub patch\n         sub_patch[i:(i + filter_sz), j:(j + filter_sz), :] += (sub_filt_patch * pred_patch[i,j]).sum(dim=3)\n\n\nThe error I get from the bottom line of the piece of code here is\nRuntimeError: in-place operations can be only used on variables that don't share storage with any other variables, but detected that there are 2 objects sharing it\n\nThis Error is not raised when using:\n   sub_patch[i:(i + filter_sz), j:(j + filter_sz), :] = sub_patch[i:(i + filter_sz), j:(j + filter_sz), :] + (sub_filt_patch * pred_patch[i,j]).sum(dim=3)\ninstead of\n   sub_patch[i:(i + filter_sz), j:(j + filter_sz), :] += (sub_filt_patch * pred_patch[i,j]).sum(dim=3)\nCould this be a bug?", "body": "With PyTorch I'm having a problem doing an operation with two Variables:\r\n\r\n```\r\n    sub_patch  : [torch.FloatTensor of size 9x9x32]\r\n\r\n    pred_patch : [torch.FloatTensor of size 5x5x32]\r\n```\r\n\r\nsub_patch is a Variable made by torch.zeros\r\npred_patch is a Variable of which I index each of the 25 nodes with a nested for-loop, and that I multiply with its corresponding unique filter (sub_filt_patch) of size [5,5,32]. The result is added to its respective place in sub_patch.\r\n\r\nThis is a piece of my code:\r\n\r\n   ```\r\n for i in range(filter_sz):\r\n        for j in range(filter_sz):\r\n\r\n            # index correct filter from filter tensor\r\n            sub_filt_col = (patch_col + j) * filter_sz\r\n            sub_filt_row = (patch_row + i) * filter_sz\r\n\r\n            sub_filt_patch = sub_filt[sub_filt_row:(sub_filt_row + filter_sz), sub_filt_col:(sub_filt_col+filter_sz), :]\r\n\r\n            # multiply filter and pred_patch and sum onto sub patch\r\n            sub_patch[i:(i + filter_sz), j:(j + filter_sz), :] += (sub_filt_patch * pred_patch[i,j]).sum(dim=3)\r\n\r\n```\r\nThe error I get from the bottom line of the piece of code here is\r\n\r\n    RuntimeError: in-place operations can be only used on variables that don't share storage with any other variables, but detected that there are 2 objects sharing it\r\n\r\nThis Error is not raised when using:\r\n\r\n`    sub_patch[i:(i + filter_sz), j:(j + filter_sz), :] = sub_patch[i:(i + filter_sz), j:(j + filter_sz), :] + (sub_filt_patch * pred_patch[i,j]).sum(dim=3)\r\n`\r\ninstead of \r\n\r\n`    sub_patch[i:(i + filter_sz), j:(j + filter_sz), :] += (sub_filt_patch * pred_patch[i,j]).sum(dim=3)\r\n`\r\nCould this be a bug?\r\n"}