{"url": "https://api.github.com/repos/pytorch/pytorch/issues/comments/417997143", "html_url": "https://github.com/pytorch/pytorch/issues/11192#issuecomment-417997143", "issue_url": "https://api.github.com/repos/pytorch/pytorch/issues/11192", "id": 417997143, "node_id": "MDEyOklzc3VlQ29tbWVudDQxNzk5NzE0Mw==", "user": {"login": "purboo", "id": 3917986, "node_id": "MDQ6VXNlcjM5MTc5ODY=", "avatar_url": "https://avatars0.githubusercontent.com/u/3917986?v=4", "gravatar_id": "", "url": "https://api.github.com/users/purboo", "html_url": "https://github.com/purboo", "followers_url": "https://api.github.com/users/purboo/followers", "following_url": "https://api.github.com/users/purboo/following{/other_user}", "gists_url": "https://api.github.com/users/purboo/gists{/gist_id}", "starred_url": "https://api.github.com/users/purboo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/purboo/subscriptions", "organizations_url": "https://api.github.com/users/purboo/orgs", "repos_url": "https://api.github.com/users/purboo/repos", "events_url": "https://api.github.com/users/purboo/events{/privacy}", "received_events_url": "https://api.github.com/users/purboo/received_events", "type": "User", "site_admin": false}, "created_at": "2018-09-03T04:28:50Z", "updated_at": "2018-09-03T04:29:37Z", "author_association": "NONE", "body_html": "<p><a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=5674597\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/SsnL\">@SsnL</a> I found something strange. Very appreciate if you could help me clear my doubts:</p>\n<h3>Case 3:</h3>\n<pre><code>t = torch.tensor(1.0, requires_grad=True)\nk = 2 * t\nl1 = 2 * k\nl2 = 3 * k\n\nl1.backward() # ok\nl2.backward() # ok\n</code></pre>\n<p>In this case,</p>\n<pre><code>t ----&gt; k ----&gt; l1\n         \\\n           -----&gt; l2\n</code></pre>\n<p>However, after the graph <code>t ---&gt; k ----&gt; l1</code> is freed, the graph <code>t ---&gt; k ---&gt; l2</code> is still complete?</p>\n<h3>Case 4</h3>\n<p>The error occurs when changing <code>k = 2*t</code> to <code>k = t*t</code>:</p>\n<pre><code>t = torch.tensor(1.0, requires_grad=True)\nk = t * t\nl1 = 2 * k\nl2 = 3 * k\n\nl1.backward() # ok\nl2.backward() # Trying to backward through the graph a second time, but the buffers have already been freed. Specify retain_graph=True when calling backward the first time.\n</code></pre>\n<p>Is case 4 different from case 3? Thank you.</p>", "body_text": "@SsnL I found something strange. Very appreciate if you could help me clear my doubts:\nCase 3:\nt = torch.tensor(1.0, requires_grad=True)\nk = 2 * t\nl1 = 2 * k\nl2 = 3 * k\n\nl1.backward() # ok\nl2.backward() # ok\n\nIn this case,\nt ----> k ----> l1\n         \\\n           -----> l2\n\nHowever, after the graph t ---> k ----> l1 is freed, the graph t ---> k ---> l2 is still complete?\nCase 4\nThe error occurs when changing k = 2*t to k = t*t:\nt = torch.tensor(1.0, requires_grad=True)\nk = t * t\nl1 = 2 * k\nl2 = 3 * k\n\nl1.backward() # ok\nl2.backward() # Trying to backward through the graph a second time, but the buffers have already been freed. Specify retain_graph=True when calling backward the first time.\n\nIs case 4 different from case 3? Thank you.", "body": "@SsnL I found something strange. Very appreciate if you could help me clear my doubts:\r\n\r\n### Case 3:\r\n\r\n```\r\nt = torch.tensor(1.0, requires_grad=True)\r\nk = 2 * t\r\nl1 = 2 * k\r\nl2 = 3 * k\r\n\r\nl1.backward() # ok\r\nl2.backward() # ok\r\n```\r\n\r\nIn this case, \r\n\r\n```\r\nt ----> k ----> l1\r\n         \\\r\n           -----> l2\r\n```\r\n\r\nHowever, after the graph `t ---> k ----> l1` is freed, the graph `t ---> k ---> l2` is still complete? \r\n\r\n### Case 4\r\n\r\nThe error occurs when changing `k = 2*t` to `k = t*t`:\r\n\r\n```\r\nt = torch.tensor(1.0, requires_grad=True)\r\nk = t * t\r\nl1 = 2 * k\r\nl2 = 3 * k\r\n\r\nl1.backward() # ok\r\nl2.backward() # Trying to backward through the graph a second time, but the buffers have already been freed. Specify retain_graph=True when calling backward the first time.\r\n```\r\n\r\nIs case 4 different from case 3? Thank you.\r\n"}