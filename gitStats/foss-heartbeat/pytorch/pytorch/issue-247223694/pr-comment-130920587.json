{"url": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/130920587", "pull_request_review_id": 53848822, "id": 130920587, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEzMDkyMDU4Nw==", "diff_hunk": "@@ -206,7 +206,7 @@ auto BatchNormBackward::apply(const variable_list& grad_outputs) -> variable_lis\n                                  std::move(grad_bias));\n   return wrap_outputs(all_inputs, std::move(outputs), [&](FunctionFlags f) {\n     return std::make_shared<BatchNormBackwardBackward>(\n-      f, *this, std::move(save_mean), std::move(save_std),", "path": "torch/csrc/autograd/functions/batch_normalization.cpp", "position": 4, "original_position": 4, "commit_id": "70ddcf9e4f60275e9a92fdfe630217529d8c9c95", "original_commit_id": "70ddcf9e4f60275e9a92fdfe630217529d8c9c95", "user": {"login": "gchanan", "id": 3768583, "node_id": "MDQ6VXNlcjM3Njg1ODM=", "avatar_url": "https://avatars2.githubusercontent.com/u/3768583?v=4", "gravatar_id": "", "url": "https://api.github.com/users/gchanan", "html_url": "https://github.com/gchanan", "followers_url": "https://api.github.com/users/gchanan/followers", "following_url": "https://api.github.com/users/gchanan/following{/other_user}", "gists_url": "https://api.github.com/users/gchanan/gists{/gist_id}", "starred_url": "https://api.github.com/users/gchanan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/gchanan/subscriptions", "organizations_url": "https://api.github.com/users/gchanan/orgs", "repos_url": "https://api.github.com/users/gchanan/repos", "events_url": "https://api.github.com/users/gchanan/events{/privacy}", "received_events_url": "https://api.github.com/users/gchanan/received_events", "type": "User", "site_admin": false}, "body": "Right.  This makes me realize there are probably two issues here:\r\n1) The double backwards can probably be made more efficient by passing in the saved/running means/vars instead of recomputing\r\n2) We don't actually test BatchNorm single or double backwards with training=False.", "created_at": "2017-08-02T16:04:45Z", "updated_at": "2018-11-23T15:34:18Z", "html_url": "https://github.com/pytorch/pytorch/pull/2268#discussion_r130920587", "pull_request_url": "https://api.github.com/repos/pytorch/pytorch/pulls/2268", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/130920587"}, "html": {"href": "https://github.com/pytorch/pytorch/pull/2268#discussion_r130920587"}, "pull_request": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/2268"}}, "body_html": "<p>Right.  This makes me realize there are probably two issues here:</p>\n<ol>\n<li>The double backwards can probably be made more efficient by passing in the saved/running means/vars instead of recomputing</li>\n<li>We don't actually test BatchNorm single or double backwards with training=False.</li>\n</ol>", "body_text": "Right.  This makes me realize there are probably two issues here:\n\nThe double backwards can probably be made more efficient by passing in the saved/running means/vars instead of recomputing\nWe don't actually test BatchNorm single or double backwards with training=False.", "in_reply_to_id": 130769424}