{"url": "https://api.github.com/repos/pytorch/pytorch/issues/comments/389700580", "html_url": "https://github.com/pytorch/pytorch/issues/4518#issuecomment-389700580", "issue_url": "https://api.github.com/repos/pytorch/pytorch/issues/4518", "id": 389700580, "node_id": "MDEyOklzc3VlQ29tbWVudDM4OTcwMDU4MA==", "user": {"login": "roozmahdavian", "id": 11139870, "node_id": "MDQ6VXNlcjExMTM5ODcw", "avatar_url": "https://avatars0.githubusercontent.com/u/11139870?v=4", "gravatar_id": "", "url": "https://api.github.com/users/roozmahdavian", "html_url": "https://github.com/roozmahdavian", "followers_url": "https://api.github.com/users/roozmahdavian/followers", "following_url": "https://api.github.com/users/roozmahdavian/following{/other_user}", "gists_url": "https://api.github.com/users/roozmahdavian/gists{/gist_id}", "starred_url": "https://api.github.com/users/roozmahdavian/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/roozmahdavian/subscriptions", "organizations_url": "https://api.github.com/users/roozmahdavian/orgs", "repos_url": "https://api.github.com/users/roozmahdavian/repos", "events_url": "https://api.github.com/users/roozmahdavian/events{/privacy}", "received_events_url": "https://api.github.com/users/roozmahdavian/received_events", "type": "User", "site_admin": false}, "created_at": "2018-05-16T23:48:31Z", "updated_at": "2018-05-16T23:48:31Z", "author_association": "NONE", "body_html": "<p>Had the same issue, tried to reinstall <strong>both</strong> the VC2017 redist and CUDA 9.1 multiple times, to no avail. But installing numpy-mkl did the trick. This requirement should really be in the docs IMO (as the Windows FAQ insists this issue is one with VC2017), or perhaps more granularity when an dll import fails? (not sure if that's actually possible).</p>\n<p>to be fair, I'm not doing this in a conda environment - installed torch through pip. but would love some more info on explicitly what other binaries are required (be it CUDA, cuDNN, numpy-mkl, intel-openmp, etc.)</p>\n<p>In particular, the process for me to get import torch to work was:</p>\n<ol>\n<li>Install Visual Studio Community 2017</li>\n<li>Install VC2017 Redist.</li>\n<li>Install CUDA 9.1<br>\nNOTE: In this, the installation of Visual Studio Integration failed, likely due to an issue discussed <a href=\"https://devtalk.nvidia.com/default/topic/1033111/cuda-setup-and-installation/cuda-9-1-cannot-install-due-to-failed-visual-studio-integration/\" rel=\"nofollow\">here</a>:</li>\n<li>Install cuDNN 7.1.</li>\n<li>Install numpy-mkl via pip3 and the wheel provided <a href=\"http://www.lfd.uci.edu/~gohlke/pythonlibs\" rel=\"nofollow\">here</a>.</li>\n<li>pip3 install torch for CUDA 9.1 via the official website.</li>\n</ol>\n<p>Notably, I didn't explicitly install intel-openmp, and I didn't install CUDA Visual Studio integration, but I'm able to successfully import torch. <a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=9998726\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/peterjc123\">@peterjc123</a> any intuition for why this might be? Trying to avoid running into more subtle issues later, and above it's implied that intel-openmp is necessary, and in your (potentially deprecated) setup instructions pre-0.4 <a href=\"https://github.com/peterjc123/pytorch-scripts\">here</a>, it's implied that Visual Studio integration is necessary.</p>", "body_text": "Had the same issue, tried to reinstall both the VC2017 redist and CUDA 9.1 multiple times, to no avail. But installing numpy-mkl did the trick. This requirement should really be in the docs IMO (as the Windows FAQ insists this issue is one with VC2017), or perhaps more granularity when an dll import fails? (not sure if that's actually possible).\nto be fair, I'm not doing this in a conda environment - installed torch through pip. but would love some more info on explicitly what other binaries are required (be it CUDA, cuDNN, numpy-mkl, intel-openmp, etc.)\nIn particular, the process for me to get import torch to work was:\n\nInstall Visual Studio Community 2017\nInstall VC2017 Redist.\nInstall CUDA 9.1\nNOTE: In this, the installation of Visual Studio Integration failed, likely due to an issue discussed here:\nInstall cuDNN 7.1.\nInstall numpy-mkl via pip3 and the wheel provided here.\npip3 install torch for CUDA 9.1 via the official website.\n\nNotably, I didn't explicitly install intel-openmp, and I didn't install CUDA Visual Studio integration, but I'm able to successfully import torch. @peterjc123 any intuition for why this might be? Trying to avoid running into more subtle issues later, and above it's implied that intel-openmp is necessary, and in your (potentially deprecated) setup instructions pre-0.4 here, it's implied that Visual Studio integration is necessary.", "body": "Had the same issue, tried to reinstall **both** the VC2017 redist and CUDA 9.1 multiple times, to no avail. But installing numpy-mkl did the trick. This requirement should really be in the docs IMO (as the Windows FAQ insists this issue is one with VC2017), or perhaps more granularity when an dll import fails? (not sure if that's actually possible). \r\n\r\nto be fair, I'm not doing this in a conda environment - installed torch through pip. but would love some more info on explicitly what other binaries are required (be it CUDA, cuDNN, numpy-mkl, intel-openmp, etc.)\r\n\r\nIn particular, the process for me to get import torch to work was:\r\n1. Install Visual Studio Community 2017\r\n2. Install VC2017 Redist.   \r\n3. Install CUDA 9.1\r\nNOTE: In this, the installation of Visual Studio Integration failed, likely due to an issue discussed [here](https://devtalk.nvidia.com/default/topic/1033111/cuda-setup-and-installation/cuda-9-1-cannot-install-due-to-failed-visual-studio-integration/):\r\n4. Install cuDNN 7.1.\r\n5. Install numpy-mkl via pip3 and the wheel provided [here](http://www.lfd.uci.edu/~gohlke/pythonlibs).\r\n6. pip3 install torch for CUDA 9.1 via the official website.\r\n\r\nNotably, I didn't explicitly install intel-openmp, and I didn't install CUDA Visual Studio integration, but I'm able to successfully import torch. @peterjc123 any intuition for why this might be? Trying to avoid running into more subtle issues later, and above it's implied that intel-openmp is necessary, and in your (potentially deprecated) setup instructions pre-0.4 [here](https://github.com/peterjc123/pytorch-scripts), it's implied that Visual Studio integration is necessary. "}