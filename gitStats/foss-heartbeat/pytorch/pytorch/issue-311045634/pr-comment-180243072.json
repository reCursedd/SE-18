{"url": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/180243072", "pull_request_review_id": 110631306, "id": 180243072, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MDI0MzA3Mg==", "diff_hunk": "@@ -2213,6 +2213,42 @@ def forward(self, v):\n         with self.assertRaisesRegex(RuntimeError, \"is not iterable\"):\n             M()\n \n+    def test_rnn_trace_override(self):\n+        from torch.nn.utils.rnn import pack_padded_sequence, pad_packed_sequence\n+        T, B, C = 3, 5, 7\n+\n+        class PadPackedWrapper(torch.nn.Module):\n+            def __init__(self):\n+                super(PadPackedWrapper, self).__init__()\n+\n+            def forward(self, x, seq_lens):\n+                x = pack_padded_sequence(x, seq_lens)\n+                x, _ = pad_packed_sequence(x)\n+                return x\n+\n+        x = torch.ones(T, B, C, requires_grad=True)\n+        seq_lens = torch.ones(B, dtype=torch.int32)\n+        m = PadPackedWrapper()\n+        m_traced = torch.jit.trace(x, seq_lens)(m)\n+        criterion = nn.MSELoss()\n+\n+        y = m(x, seq_lens)\n+        loss = criterion(y, torch.zeros_like(y))", "path": "test/test_jit.py", "position": null, "original_position": 24, "commit_id": "35cc8f5e1688a7e07f0186f59b83eefd30f3d779", "original_commit_id": "624639a0ec137fcfda83d48d2471a6188746c8ae", "user": {"login": "apaszke", "id": 4583066, "node_id": "MDQ6VXNlcjQ1ODMwNjY=", "avatar_url": "https://avatars3.githubusercontent.com/u/4583066?v=4", "gravatar_id": "", "url": "https://api.github.com/users/apaszke", "html_url": "https://github.com/apaszke", "followers_url": "https://api.github.com/users/apaszke/followers", "following_url": "https://api.github.com/users/apaszke/following{/other_user}", "gists_url": "https://api.github.com/users/apaszke/gists{/gist_id}", "starred_url": "https://api.github.com/users/apaszke/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/apaszke/subscriptions", "organizations_url": "https://api.github.com/users/apaszke/orgs", "repos_url": "https://api.github.com/users/apaszke/repos", "events_url": "https://api.github.com/users/apaszke/events{/privacy}", "received_events_url": "https://api.github.com/users/apaszke/received_events", "type": "User", "site_admin": false}, "body": "You can probably just use `.sum()` as a fake loss", "created_at": "2018-04-09T21:55:46Z", "updated_at": "2018-11-23T15:42:06Z", "html_url": "https://github.com/pytorch/pytorch/pull/6256#discussion_r180243072", "pull_request_url": "https://api.github.com/repos/pytorch/pytorch/pulls/6256", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/180243072"}, "html": {"href": "https://github.com/pytorch/pytorch/pull/6256#discussion_r180243072"}, "pull_request": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/6256"}}, "body_html": "<p>You can probably just use <code>.sum()</code> as a fake loss</p>", "body_text": "You can probably just use .sum() as a fake loss"}