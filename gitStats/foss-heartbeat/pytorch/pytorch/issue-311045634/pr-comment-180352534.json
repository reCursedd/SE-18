{"url": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/180352534", "pull_request_review_id": 110757096, "id": 180352534, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MDM1MjUzNA==", "diff_hunk": "@@ -2213,6 +2213,41 @@ def forward(self, v):\n         with self.assertRaisesRegex(RuntimeError, \"cannot be used as tuple\"):\n             M()\n \n+    def test_rnn_trace_override(self):\n+        from torch.nn.utils.rnn import pack_padded_sequence, pad_packed_sequence\n+        T, B, C = 3, 5, 7\n+\n+        class PadPackedWrapper(torch.nn.Module):\n+            def __init__(self):\n+                super(PadPackedWrapper, self).__init__()\n+\n+            def forward(self, x, seq_lens):\n+                x = pack_padded_sequence(x, seq_lens)\n+                x, _ = pad_packed_sequence(x)\n+                return x\n+\n+        x = torch.ones(T, B, C, requires_grad=True)\n+        seq_lens = torch.ones(B, dtype=torch.int32)", "path": "test/test_jit.py", "position": null, "original_position": 18, "commit_id": "35cc8f5e1688a7e07f0186f59b83eefd30f3d779", "original_commit_id": "9efb72bb517ca8b31283bcec8f5bb733d82c798d", "user": {"login": "apaszke", "id": 4583066, "node_id": "MDQ6VXNlcjQ1ODMwNjY=", "avatar_url": "https://avatars3.githubusercontent.com/u/4583066?v=4", "gravatar_id": "", "url": "https://api.github.com/users/apaszke", "html_url": "https://github.com/apaszke", "followers_url": "https://api.github.com/users/apaszke/followers", "following_url": "https://api.github.com/users/apaszke/following{/other_user}", "gists_url": "https://api.github.com/users/apaszke/gists{/gist_id}", "starred_url": "https://api.github.com/users/apaszke/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/apaszke/subscriptions", "organizations_url": "https://api.github.com/users/apaszke/orgs", "repos_url": "https://api.github.com/users/apaszke/repos", "events_url": "https://api.github.com/users/apaszke/events{/privacy}", "received_events_url": "https://api.github.com/users/apaszke/received_events", "type": "User", "site_admin": false}, "body": "Can we test on some other tensor with non-trivial lengths? This one is extremely simple, and it would also be good to assert that the output is equal to input (since those functions are meant to be inverses of each other).", "created_at": "2018-04-10T09:29:24Z", "updated_at": "2018-11-23T15:42:09Z", "html_url": "https://github.com/pytorch/pytorch/pull/6256#discussion_r180352534", "pull_request_url": "https://api.github.com/repos/pytorch/pytorch/pulls/6256", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/180352534"}, "html": {"href": "https://github.com/pytorch/pytorch/pull/6256#discussion_r180352534"}, "pull_request": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/6256"}}, "body_html": "<p>Can we test on some other tensor with non-trivial lengths? This one is extremely simple, and it would also be good to assert that the output is equal to input (since those functions are meant to be inverses of each other).</p>", "body_text": "Can we test on some other tensor with non-trivial lengths? This one is extremely simple, and it would also be good to assert that the output is equal to input (since those functions are meant to be inverses of each other)."}