{"url": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/178428696", "pull_request_review_id": 108489476, "id": 178428696, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE3ODQyODY5Ng==", "diff_hunk": "@@ -32,99 +34,96 @@ static void parallel_apply(Tensor& result, const Tensor& self, F f) {\n \n   static tbb::affinity_partitioner ap;\n \n-  auto arr_out = result.data<scalar_t>();\n-  auto arr_in = self.data<scalar_t>();\n-  int64_t size = self.numel();\n-  if (size < internal::TBB_GRAIN_SIZE) {\n-    unary_kernel(arr_out, arr_in, size, f);\n+  if (result.is_contiguous() && self.is_contiguous()) {\n+    auto arr_out = result.data<scalar_t>();\n+    auto arr_in = self.data<scalar_t>();\n+    int64_t size = self.numel();\n+    if (size < internal::TBB_GRAIN_SIZE) {\n+      unary_kernel(arr_out, arr_in, size, f);\n+    } else {\n+      tbb::parallel_for(\n+          tbb::blocked_range<int64_t>(0, size, internal::TBB_GRAIN_SIZE),\n+          [&](const tbb::blocked_range<int64_t>& r) {\n+            auto size = r.end() - r.begin();\n+            unary_kernel(arr_out + r.begin(), arr_in + r.begin(), size, f);\n+          },\n+          ap);\n+    }\n   } else {\n-    tbb::parallel_for(\n-        tbb::blocked_range<int64_t>(0, size, internal::TBB_GRAIN_SIZE),\n-        [&](const tbb::blocked_range<int64_t>& r) {\n-          auto size = r.end() - r.begin();\n-          unary_kernel(arr_out + r.begin(), arr_in + r.begin(), size, f);\n-        },\n-        ap);\n+    CPU_tensor_apply2<scalar_t, scalar_t>(\n+        result, self, [f](scalar_t& a_val, const scalar_t& b_val) {\n+          unary_kernel(&a_val, &b_val, 1, f);", "path": "aten/src/ATen/native/cpu/UnaryOpsKernel.cpp", "position": null, "original_position": 52, "commit_id": "ca55c40ec722ecb64659682bdb81caa0cfb82e36", "original_commit_id": "3320a388c57cc148b0badef9bcdd2777ad6e7b89", "user": {"login": "apaszke", "id": 4583066, "node_id": "MDQ6VXNlcjQ1ODMwNjY=", "avatar_url": "https://avatars3.githubusercontent.com/u/4583066?v=4", "gravatar_id": "", "url": "https://api.github.com/users/apaszke", "html_url": "https://github.com/apaszke", "followers_url": "https://api.github.com/users/apaszke/followers", "following_url": "https://api.github.com/users/apaszke/following{/other_user}", "gists_url": "https://api.github.com/users/apaszke/gists{/gist_id}", "starred_url": "https://api.github.com/users/apaszke/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/apaszke/subscriptions", "organizations_url": "https://api.github.com/users/apaszke/orgs", "repos_url": "https://api.github.com/users/apaszke/repos", "events_url": "https://api.github.com/users/apaszke/events{/privacy}", "received_events_url": "https://api.github.com/users/apaszke/received_events", "type": "User", "site_admin": false}, "body": "Is it the plan to start finding smaller contiguous sub-regions in a tensor, and still use vectorization over them?", "created_at": "2018-03-31T10:20:24Z", "updated_at": "2018-11-23T15:41:27Z", "html_url": "https://github.com/pytorch/pytorch/pull/6119#discussion_r178428696", "pull_request_url": "https://api.github.com/repos/pytorch/pytorch/pulls/6119", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/178428696"}, "html": {"href": "https://github.com/pytorch/pytorch/pull/6119#discussion_r178428696"}, "pull_request": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/6119"}}, "body_html": "<p>Is it the plan to start finding smaller contiguous sub-regions in a tensor, and still use vectorization over them?</p>", "body_text": "Is it the plan to start finding smaller contiguous sub-regions in a tensor, and still use vectorization over them?"}