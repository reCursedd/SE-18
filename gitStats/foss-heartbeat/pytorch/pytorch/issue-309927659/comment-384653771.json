{"url": "https://api.github.com/repos/pytorch/pytorch/issues/comments/384653771", "html_url": "https://github.com/pytorch/pytorch/pull/6119#issuecomment-384653771", "issue_url": "https://api.github.com/repos/pytorch/pytorch/issues/6119", "id": 384653771, "node_id": "MDEyOklzc3VlQ29tbWVudDM4NDY1Mzc3MQ==", "user": {"login": "peterjc123", "id": 9998726, "node_id": "MDQ6VXNlcjk5OTg3MjY=", "avatar_url": "https://avatars3.githubusercontent.com/u/9998726?v=4", "gravatar_id": "", "url": "https://api.github.com/users/peterjc123", "html_url": "https://github.com/peterjc123", "followers_url": "https://api.github.com/users/peterjc123/followers", "following_url": "https://api.github.com/users/peterjc123/following{/other_user}", "gists_url": "https://api.github.com/users/peterjc123/gists{/gist_id}", "starred_url": "https://api.github.com/users/peterjc123/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/peterjc123/subscriptions", "organizations_url": "https://api.github.com/users/peterjc123/orgs", "repos_url": "https://api.github.com/users/peterjc123/repos", "events_url": "https://api.github.com/users/peterjc123/events{/privacy}", "received_events_url": "https://api.github.com/users/peterjc123/received_events", "type": "User", "site_admin": false}, "created_at": "2018-04-26T14:07:07Z", "updated_at": "2018-04-26T14:08:03Z", "author_association": "CONTRIBUTOR", "body_html": "<p><a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=1716488\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/cpuhrsch\">@cpuhrsch</a> I've scanned the code and the problem the compiler is complaining about might be this:</p>\n<div class=\"highlight highlight-source-c++\"><pre><span class=\"pl-c\"><span class=\"pl-c\">//</span> The definition is:</span>\n<span class=\"pl-k\">template </span>&lt;<span class=\"pl-k\">typename</span> scalar1, <span class=\"pl-k\">typename</span> scalar2, <span class=\"pl-k\">typename</span> Op&gt;  {\t\nAT_API <span class=\"pl-k\">inline</span> <span class=\"pl-k\">void</span> <span class=\"pl-smi\">CPU_tensor_apply2</span>(Tensor tensor1, Tensor tensor2, <span class=\"pl-k\">const</span> Op op) {\n\n<span class=\"pl-c\"><span class=\"pl-c\">//</span> But you used as </span>\nCPU_tensor_apply2&lt;scalar1, scalar2&gt;(tensor1, tensor2, op);\n\n<span class=\"pl-c\"><span class=\"pl-c\">//</span>Where is the third argument in the template? The compiler seems not to find the optimal one by itself.</span></pre></div>\n<p>The problem is the same with that of <code>v3</code> and <code>v4</code>.</p>", "body_text": "@cpuhrsch I've scanned the code and the problem the compiler is complaining about might be this:\n// The definition is:\ntemplate <typename scalar1, typename scalar2, typename Op>  {\t\nAT_API inline void CPU_tensor_apply2(Tensor tensor1, Tensor tensor2, const Op op) {\n\n// But you used as \nCPU_tensor_apply2<scalar1, scalar2>(tensor1, tensor2, op);\n\n//Where is the third argument in the template? The compiler seems not to find the optimal one by itself.\nThe problem is the same with that of v3 and v4.", "body": "@cpuhrsch I've scanned the code and the problem the compiler is complaining about might be this:\r\n```c++\r\n// The definition is:\r\ntemplate <typename scalar1, typename scalar2, typename Op>  {\t\r\nAT_API inline void CPU_tensor_apply2(Tensor tensor1, Tensor tensor2, const Op op) {\r\n\r\n// But you used as \r\nCPU_tensor_apply2<scalar1, scalar2>(tensor1, tensor2, op);\r\n\r\n//Where is the third argument in the template? The compiler seems not to find the optimal one by itself.\r\n```\r\nThe problem is the same with that of `v3` and `v4`."}