{"url": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/163186634", "pull_request_review_id": 90756700, "id": 163186634, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE2MzE4NjYzNA==", "diff_hunk": "@@ -0,0 +1,180 @@\n+#include <Python.h>\n+#include <iostream>\n+#include <vector>\n+#include \"torch/csrc/autograd/variable.h\"\n+#include \"torch/csrc/utils/hash.h\"\n+\n+namespace torch { namespace jit {\n+\n+// GraphExecutor creates specializations of Graphs for different dimensionalitities\n+// and types of inputs.\n+\n+// ArgumentSpec represents one particular specialization.\n+// It is designed so that it can be created, hashed, and compared quickly\n+// since it is used along the hot-path of the JIT to check if the code\n+// we have created is valid for the given inputs.\n+\n+// TensorInfoPOD is only used internally in ArgumentSpec\n+// API users should use TensorInfo\n+struct TensorInfoPOD {", "path": "torch/csrc/jit/argument_spec.h", "position": 19, "original_position": 19, "commit_id": "8c94a8bc0d4b5c4d066abd86087622fd6e0ed726", "original_commit_id": "4cda5572438f0aacf324b4b8d8b439647b1506b2", "user": {"login": "apaszke", "id": 4583066, "node_id": "MDQ6VXNlcjQ1ODMwNjY=", "avatar_url": "https://avatars3.githubusercontent.com/u/4583066?v=4", "gravatar_id": "", "url": "https://api.github.com/users/apaszke", "html_url": "https://github.com/apaszke", "followers_url": "https://api.github.com/users/apaszke/followers", "following_url": "https://api.github.com/users/apaszke/following{/other_user}", "gists_url": "https://api.github.com/users/apaszke/gists{/gist_id}", "starred_url": "https://api.github.com/users/apaszke/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/apaszke/subscriptions", "organizations_url": "https://api.github.com/users/apaszke/orgs", "repos_url": "https://api.github.com/users/apaszke/repos", "events_url": "https://api.github.com/users/apaszke/events{/privacy}", "received_events_url": "https://api.github.com/users/apaszke/received_events", "type": "User", "site_admin": false}, "body": "Don't you have to add `__attribute__(packed)` to be sure that it really is 64-bit? We're playing with fire in here. Remember that people build PyTorch not only on x86, but also e.g. on ARM, POWER and I don't know what are the alignment restrictions there.", "created_at": "2018-01-23T09:36:22Z", "updated_at": "2018-11-23T15:38:25Z", "html_url": "https://github.com/pytorch/pytorch/pull/4794#discussion_r163186634", "pull_request_url": "https://api.github.com/repos/pytorch/pytorch/pulls/4794", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/163186634"}, "html": {"href": "https://github.com/pytorch/pytorch/pull/4794#discussion_r163186634"}, "pull_request": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/4794"}}, "body_html": "<p>Don't you have to add <code>__attribute__(packed)</code> to be sure that it really is 64-bit? We're playing with fire in here. Remember that people build PyTorch not only on x86, but also e.g. on ARM, POWER and I don't know what are the alignment restrictions there.</p>", "body_text": "Don't you have to add __attribute__(packed) to be sure that it really is 64-bit? We're playing with fire in here. Remember that people build PyTorch not only on x86, but also e.g. on ARM, POWER and I don't know what are the alignment restrictions there."}