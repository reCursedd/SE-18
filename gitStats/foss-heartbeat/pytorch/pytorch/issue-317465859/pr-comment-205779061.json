{"url": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/205779061", "pull_request_review_id": 141120091, "id": 205779061, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwNTc3OTA2MQ==", "diff_hunk": "@@ -0,0 +1,118 @@\n+\"\"\"\n+Spectral Normalization from https://arxiv.org/abs/1802.05957\n+\"\"\"\n+import torch\n+from torch.nn.functional import normalize\n+from torch.nn.parameter import Parameter\n+\n+\n+class SpectralNorm(object):\n+\n+    def __init__(self, name='weight', n_power_iterations=1, eps=1e-12):\n+        self.name = name\n+        self.n_power_iterations = n_power_iterations\n+        self.eps = eps\n+\n+    def compute_weight(self, module):\n+        weight = module._parameters[self.name + '_org']\n+        u = module._buffers[self.name + '_u']\n+        height = weight.size(0)\n+        weight_mat = weight.view(height, -1)\n+        for _ in range(self.n_power_iterations):\n+            # Spectral norm of weight equals to `u^T W v`, where `u` and `v`\n+            # are the first left and right singular vectors.\n+            # This power iteration produces approximations of `u` and `v`.\n+            v = normalize(torch.matmul(weight_mat.t(), u), dim=0, eps=self.eps)\n+            u = normalize(torch.matmul(weight_mat, v), dim=0, eps=self.eps)\n+\n+        sigma = torch.dot(u, torch.matmul(weight_mat, v))\n+        weight.data /= sigma", "path": "torch/nn/utils/spectral_norm.py", "position": 29, "original_position": 29, "commit_id": "540b4b5dc6f80a93950d7b1a4c113a4536267b83", "original_commit_id": "540b4b5dc6f80a93950d7b1a4c113a4536267b83", "user": {"login": "SsnL", "id": 5674597, "node_id": "MDQ6VXNlcjU2NzQ1OTc=", "avatar_url": "https://avatars2.githubusercontent.com/u/5674597?v=4", "gravatar_id": "", "url": "https://api.github.com/users/SsnL", "html_url": "https://github.com/SsnL", "followers_url": "https://api.github.com/users/SsnL/followers", "following_url": "https://api.github.com/users/SsnL/following{/other_user}", "gists_url": "https://api.github.com/users/SsnL/gists{/gist_id}", "starred_url": "https://api.github.com/users/SsnL/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/SsnL/subscriptions", "organizations_url": "https://api.github.com/users/SsnL/orgs", "repos_url": "https://api.github.com/users/SsnL/repos", "events_url": "https://api.github.com/users/SsnL/events{/privacy}", "received_events_url": "https://api.github.com/users/SsnL/received_events", "type": "User", "site_admin": false}, "body": "A couple bugs of this initial implementation were fixed before release, including making it differentiable. ", "created_at": "2018-07-27T13:50:57Z", "updated_at": "2018-11-23T15:48:18Z", "html_url": "https://github.com/pytorch/pytorch/pull/6929#discussion_r205779061", "pull_request_url": "https://api.github.com/repos/pytorch/pytorch/pulls/6929", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/205779061"}, "html": {"href": "https://github.com/pytorch/pytorch/pull/6929#discussion_r205779061"}, "pull_request": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/6929"}}, "body_html": "<p>A couple bugs of this initial implementation were fixed before release, including making it differentiable.</p>", "body_text": "A couple bugs of this initial implementation were fixed before release, including making it differentiable.", "in_reply_to_id": 205778546}