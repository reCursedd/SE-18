{"url": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/184415563", "pull_request_review_id": 115607515, "id": 184415563, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4NDQxNTU2Mw==", "diff_hunk": "@@ -0,0 +1,117 @@\n+\"\"\"\n+Spectral Normalization from https://arxiv.org/abs/1802.05957\n+\"\"\"\n+import torch\n+from torch.nn.parameter import Parameter\n+\n+\n+def l2normalize(v, eps=1e-12):\n+    \"\"\"Scale to inputs norm to 1.\"\"\"\n+    denom = v.norm(p=2) + eps\n+    return v / denom\n+\n+\n+class SpectralNorm(object):\n+\n+    def __init__(self, name='weight', n_power_iterations=1, eps=1e-12):\n+        self.name = name\n+        self.n_power_iterations = n_power_iterations\n+        self.eps = eps\n+\n+    def compute_weight(self, module):\n+        weight = module._parameters[self.name + '_org']\n+        u = module._buffers[self.name + '_u']\n+        height, _cuda = weight.size(0), weight.is_cuda\n+        weight_mat = weight.view(height, -1)\n+        for _ in range(self.n_power_iterations):\n+            v = l2normalize(torch.matmul(weight_mat.t(), u), self.eps)\n+            u = l2normalize(torch.matmul(weight_mat, v), self.eps)\n+\n+        sigma = torch.dot(u, torch.matmul(weight_mat, v))\n+        weight.data /= sigma\n+        return weight, u\n+\n+    def remove(self, module):\n+        weight = module._parameters[self.name + '_org']\n+        del module._parameters[self.name]\n+        del module._buffers[self.name + '_u']\n+        del module._parameters[self.name + '_org']\n+        module.register_parameter(self.name, weight)\n+\n+    def __call__(self, module, inputs):\n+        weight, u = self.compute_weight(module)\n+        setattr(module, self.name, weight)\n+        setattr(module, self.name + '_u', u)\n+\n+    @staticmethod\n+    def apply(module, name, n_power_iterations, eps):\n+        fn = SpectralNorm(name, n_power_iterations, eps)\n+        weight = module._parameters[name]\n+        height = weight.size(0)\n+\n+        u = l2normalize(weight.data.new(height).normal_(0, 1), fn.eps)\n+        module.register_parameter(fn.name + \"_org\", weight)\n+        module.register_buffer(fn.name + \"_u\", u)\n+\n+        module.register_forward_pre_hook(fn)\n+        return fn\n+\n+\n+def spectral_norm(module, name='weight', n_power_iterations=1, eps=1e-12):\n+    r\"\"\"Applies spectral normalization to a parameter in the given module.\n+\n+    .. math::\n+         \\mathbf{W} &= \\dfrac{\\mathbf{W}}{\\sigma(\\mathbf{W})} \\\\\n+         \\sigma(\\mathbf{W}) &= \\max_{\\mathbf{h}: \\mathbf{h} \\ne 0} \\dfrac{\\|\\mathbf{W} \\mathbf{h}\\|_2}{\\|\\mathbf{h}\\|_2}\n+\n+    Spectral normalization stabilize the training of discriminators(critics)\n+    in GANs by rescaling the weight tensor by spectral norm \"sigma\" of the\n+    weight matrix calculated by power iteration method. If the dimension of the\n+    weight tensor is greater than 2, reahaped to 2D in power iteration method", "path": "torch/nn/utils/spectral_norm.py", "position": null, "original_position": 70, "commit_id": "540b4b5dc6f80a93950d7b1a4c113a4536267b83", "original_commit_id": "41f901a482f5b2a32475a07c44a583d3f546bee9", "user": {"login": "SsnL", "id": 5674597, "node_id": "MDQ6VXNlcjU2NzQ1OTc=", "avatar_url": "https://avatars2.githubusercontent.com/u/5674597?v=4", "gravatar_id": "", "url": "https://api.github.com/users/SsnL", "html_url": "https://github.com/SsnL", "followers_url": "https://api.github.com/users/SsnL/followers", "following_url": "https://api.github.com/users/SsnL/following{/other_user}", "gists_url": "https://api.github.com/users/SsnL/gists{/gist_id}", "starred_url": "https://api.github.com/users/SsnL/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/SsnL/subscriptions", "organizations_url": "https://api.github.com/users/SsnL/orgs", "repos_url": "https://api.github.com/users/SsnL/repos", "events_url": "https://api.github.com/users/SsnL/events{/privacy}", "received_events_url": "https://api.github.com/users/SsnL/received_events", "type": "User", "site_admin": false}, "body": "nit reshaped", "created_at": "2018-04-26T14:44:02Z", "updated_at": "2018-11-23T15:43:15Z", "html_url": "https://github.com/pytorch/pytorch/pull/6929#discussion_r184415563", "pull_request_url": "https://api.github.com/repos/pytorch/pytorch/pulls/6929", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/184415563"}, "html": {"href": "https://github.com/pytorch/pytorch/pull/6929#discussion_r184415563"}, "pull_request": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/6929"}}, "body_html": "<p>nit reshaped</p>", "body_text": "nit reshaped"}