{"url": "https://api.github.com/repos/pytorch/pytorch/issues/comments/282044907", "html_url": "https://github.com/pytorch/pytorch/pull/835#issuecomment-282044907", "issue_url": "https://api.github.com/repos/pytorch/pytorch/issues/835", "id": 282044907, "node_id": "MDEyOklzc3VlQ29tbWVudDI4MjA0NDkwNw==", "user": {"login": "fmassa", "id": 9110200, "node_id": "MDQ6VXNlcjkxMTAyMDA=", "avatar_url": "https://avatars2.githubusercontent.com/u/9110200?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fmassa", "html_url": "https://github.com/fmassa", "followers_url": "https://api.github.com/users/fmassa/followers", "following_url": "https://api.github.com/users/fmassa/following{/other_user}", "gists_url": "https://api.github.com/users/fmassa/gists{/gist_id}", "starred_url": "https://api.github.com/users/fmassa/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fmassa/subscriptions", "organizations_url": "https://api.github.com/users/fmassa/orgs", "repos_url": "https://api.github.com/users/fmassa/repos", "events_url": "https://api.github.com/users/fmassa/events{/privacy}", "received_events_url": "https://api.github.com/users/fmassa/received_events", "type": "User", "site_admin": false}, "created_at": "2017-02-23T16:33:06Z", "updated_at": "2017-02-23T16:33:06Z", "author_association": "MEMBER", "body_html": "<p>I agree with <a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=4953728\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/szagoruyko\">@szagoruyko</a>, it would be good to have it in <code>torch.nn.functional</code>. But do we want to have full parity between <code>torch.nn.functional</code> and <code>torch.nn</code> (meaning that we will always have to wrap the function in a <code>nn.Module</code> as well)?</p>", "body_text": "I agree with @szagoruyko, it would be good to have it in torch.nn.functional. But do we want to have full parity between torch.nn.functional and torch.nn (meaning that we will always have to wrap the function in a nn.Module as well)?", "body": "I agree with @szagoruyko, it would be good to have it in `torch.nn.functional`. But do we want to have full parity between `torch.nn.functional` and `torch.nn` (meaning that we will always have to wrap the function in a `nn.Module` as well)?"}