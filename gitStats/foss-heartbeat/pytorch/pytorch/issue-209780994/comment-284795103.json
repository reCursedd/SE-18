{"url": "https://api.github.com/repos/pytorch/pytorch/issues/comments/284795103", "html_url": "https://github.com/pytorch/pytorch/pull/835#issuecomment-284795103", "issue_url": "https://api.github.com/repos/pytorch/pytorch/issues/835", "id": 284795103, "node_id": "MDEyOklzc3VlQ29tbWVudDI4NDc5NTEwMw==", "user": {"login": "fmassa", "id": 9110200, "node_id": "MDQ6VXNlcjkxMTAyMDA=", "avatar_url": "https://avatars2.githubusercontent.com/u/9110200?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fmassa", "html_url": "https://github.com/fmassa", "followers_url": "https://api.github.com/users/fmassa/followers", "following_url": "https://api.github.com/users/fmassa/following{/other_user}", "gists_url": "https://api.github.com/users/fmassa/gists{/gist_id}", "starred_url": "https://api.github.com/users/fmassa/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fmassa/subscriptions", "organizations_url": "https://api.github.com/users/fmassa/orgs", "repos_url": "https://api.github.com/users/fmassa/repos", "events_url": "https://api.github.com/users/fmassa/events{/privacy}", "received_events_url": "https://api.github.com/users/fmassa/received_events", "type": "User", "site_admin": false}, "created_at": "2017-03-07T17:28:13Z", "updated_at": "2017-03-07T17:28:13Z", "author_association": "MEMBER", "body_html": "<p>The first thing that comes to my mind is to define a <code>Function</code> with a hand-coded backward for the cases that we are targeting. But I don't like that solution that much, and maybe it would be better to address those instability issues in the underlying implementations of the necessary functions (<code>div</code>, <code>pow</code> etc).</p>", "body_text": "The first thing that comes to my mind is to define a Function with a hand-coded backward for the cases that we are targeting. But I don't like that solution that much, and maybe it would be better to address those instability issues in the underlying implementations of the necessary functions (div, pow etc).", "body": "The first thing that comes to my mind is to define a `Function` with a hand-coded backward for the cases that we are targeting. But I don't like that solution that much, and maybe it would be better to address those instability issues in the underlying implementations of the necessary functions (`div`, `pow` etc)."}