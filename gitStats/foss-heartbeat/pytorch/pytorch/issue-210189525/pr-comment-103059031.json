{"url": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/103059031", "pull_request_review_id": 23838833, "id": 103059031, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEwMzA1OTAzMQ==", "diff_hunk": "@@ -1,25 +1,36 @@\n+import torch\n from torch.autograd import Variable\n from ._functions import Scatter, Gather\n+from torch.cuda.comm import broadcast\n \n \n-def scatter(input, target_gpus):\n-    \"\"\"Slices a given variable into approximately equal chunks and distributes\n-       them accross given GPUs\n+def scatter(input, target_gpus, dim=0):\n+    \"\"\"\n+    Slices a given variable into approximately equal chunks and distributes\n+      them accross given GPUs\n+    Duplicates references to objects that are not variables.\n     \"\"\"\n     def scatter_map(obj):\n         if isinstance(obj, Variable):\n-            return Scatter(target_gpus)(obj)\n-        return tuple(zip(*map(scatter_map, obj)))\n+            return Scatter(target_gpus, dim=dim)(obj)\n+        if isinstance(obj, tuple) or isinstance(obj, list):\n+            return type(obj)(zip(*map(scatter_map, obj)))\n+        if torch.is_tensor(obj):\n+            return broadcast(obj, target_gpus)", "path": "torch/nn/parallel/scatter_gather.py", "position": null, "original_position": 24, "commit_id": "f0189e462c383c56f42a18aec85806f3291e2133", "original_commit_id": "5f5704f96f04183c6b861821dd62b47b4e7b1634", "user": {"login": "apaszke", "id": 4583066, "node_id": "MDQ6VXNlcjQ1ODMwNjY=", "avatar_url": "https://avatars3.githubusercontent.com/u/4583066?v=4", "gravatar_id": "", "url": "https://api.github.com/users/apaszke", "html_url": "https://github.com/apaszke", "followers_url": "https://api.github.com/users/apaszke/followers", "following_url": "https://api.github.com/users/apaszke/following{/other_user}", "gists_url": "https://api.github.com/users/apaszke/gists{/gist_id}", "starred_url": "https://api.github.com/users/apaszke/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/apaszke/subscriptions", "organizations_url": "https://api.github.com/users/apaszke/orgs", "repos_url": "https://api.github.com/users/apaszke/repos", "events_url": "https://api.github.com/users/apaszke/events{/privacy}", "received_events_url": "https://api.github.com/users/apaszke/received_events", "type": "User", "site_admin": false}, "body": "I wouldn't say that this behaviour is an obvious choice for tensors. In most places we're treating Variables and Tensors in the same way. What's the use case for this?", "created_at": "2017-02-25T00:09:34Z", "updated_at": "2018-11-23T15:32:31Z", "html_url": "https://github.com/pytorch/pytorch/pull/843#discussion_r103059031", "pull_request_url": "https://api.github.com/repos/pytorch/pytorch/pulls/843", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/103059031"}, "html": {"href": "https://github.com/pytorch/pytorch/pull/843#discussion_r103059031"}, "pull_request": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/843"}}, "body_html": "<p>I wouldn't say that this behaviour is an obvious choice for tensors. In most places we're treating Variables and Tensors in the same way. What's the use case for this?</p>", "body_text": "I wouldn't say that this behaviour is an obvious choice for tensors. In most places we're treating Variables and Tensors in the same way. What's the use case for this?"}