{"url": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/103541489", "pull_request_review_id": 24331377, "id": 103541489, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEwMzU0MTQ4OQ==", "diff_hunk": "@@ -36,48 +43,71 @@ class DataParallel(Module):\n     \"\"\"\n \n     # TODO: update notes/cuda.rst when this class handles 8+ GPUs well\n-    def __init__(self, module, device_ids=None, output_device=None):\n+\n+    def __init__(self, module, device_ids=None, output_device=None, dim=0):\n         super(DataParallel, self).__init__()\n         if device_ids is None:\n             device_ids = list(range(torch.cuda.device_count()))\n         if output_device is None:\n             output_device = device_ids[0]\n+        self.dim = dim\n         self.module = module\n         self.device_ids = device_ids\n         self.output_device = output_device\n         if len(self.device_ids) == 1:\n             self.module.cuda(device_ids[0])\n \n-    def forward(self, *inputs):\n+    def forward(self, *inputs, **kwargs):\n         def _to_cuda(obj):\n             if isinstance(obj, Variable):\n                 return obj.cuda()\n-            return tuple((map(_to_cuda, obj)))\n+            if isinstance(obj, tuple) or isinstance(obj, list):\n+                return type(obj)((map(_to_cuda, obj)))\n+            return obj\n \n         if len(self.device_ids) == 1:\n             with torch.cuda.device(self.device_ids[0]):\n                 inputs_cuda = _to_cuda(inputs)\n-            return self.module(*inputs_cuda)\n+            if kwargs:\n+                gpu_dict = {}\n+                for key in kwargs.keys():\n+                    gpu_dict[key] = _to_cuda(kwargs[key])", "path": "torch/nn/parallel/data_parallel.py", "position": null, "original_position": 57, "commit_id": "f0189e462c383c56f42a18aec85806f3291e2133", "original_commit_id": "44fe916ed23814f4a5f7047b3a609e60f7d1dc00", "user": {"login": "apaszke", "id": 4583066, "node_id": "MDQ6VXNlcjQ1ODMwNjY=", "avatar_url": "https://avatars3.githubusercontent.com/u/4583066?v=4", "gravatar_id": "", "url": "https://api.github.com/users/apaszke", "html_url": "https://github.com/apaszke", "followers_url": "https://api.github.com/users/apaszke/followers", "following_url": "https://api.github.com/users/apaszke/following{/other_user}", "gists_url": "https://api.github.com/users/apaszke/gists{/gist_id}", "starred_url": "https://api.github.com/users/apaszke/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/apaszke/subscriptions", "organizations_url": "https://api.github.com/users/apaszke/orgs", "repos_url": "https://api.github.com/users/apaszke/repos", "events_url": "https://api.github.com/users/apaszke/events{/privacy}", "received_events_url": "https://api.github.com/users/apaszke/received_events", "type": "User", "site_admin": false}, "body": "I think you should call that in the `with` block. Otherwise it might end up on a different GPU.", "created_at": "2017-02-28T20:11:00Z", "updated_at": "2018-11-23T15:32:36Z", "html_url": "https://github.com/pytorch/pytorch/pull/843#discussion_r103541489", "pull_request_url": "https://api.github.com/repos/pytorch/pytorch/pulls/843", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/103541489"}, "html": {"href": "https://github.com/pytorch/pytorch/pull/843#discussion_r103541489"}, "pull_request": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/843"}}, "body_html": "<p>I think you should call that in the <code>with</code> block. Otherwise it might end up on a different GPU.</p>", "body_text": "I think you should call that in the with block. Otherwise it might end up on a different GPU."}