{"url": "https://api.github.com/repos/pytorch/pytorch/issues/13807", "repository_url": "https://api.github.com/repos/pytorch/pytorch", "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/13807/labels{/name}", "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/13807/comments", "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/13807/events", "html_url": "https://github.com/pytorch/pytorch/issues/13807", "id": 379409817, "node_id": "MDU6SXNzdWUzNzk0MDk4MTc=", "number": 13807, "title": "5x slowdown on Windows vs Ubuntu", "user": {"login": "CorentinJ", "id": 12038136, "node_id": "MDQ6VXNlcjEyMDM4MTM2", "avatar_url": "https://avatars0.githubusercontent.com/u/12038136?v=4", "gravatar_id": "", "url": "https://api.github.com/users/CorentinJ", "html_url": "https://github.com/CorentinJ", "followers_url": "https://api.github.com/users/CorentinJ/followers", "following_url": "https://api.github.com/users/CorentinJ/following{/other_user}", "gists_url": "https://api.github.com/users/CorentinJ/gists{/gist_id}", "starred_url": "https://api.github.com/users/CorentinJ/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/CorentinJ/subscriptions", "organizations_url": "https://api.github.com/users/CorentinJ/orgs", "repos_url": "https://api.github.com/users/CorentinJ/repos", "events_url": "https://api.github.com/users/CorentinJ/events{/privacy}", "received_events_url": "https://api.github.com/users/CorentinJ/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 17, "created_at": "2018-11-10T10:11:39Z", "updated_at": "2018-11-22T12:03:54Z", "closed_at": null, "author_association": "NONE", "body_html": "<h2>Bug</h2>\n<p>On a GTX1080 on Ubuntu18.04, Resnet50 takes 12ms on average for a forward pass. On my installation of Windows 7, it runs in 58ms.</p>\n<h2>To Reproduce</h2>\n<p>I used this small script:</p>\n<pre><code>import numpy as np\nimport torch\nfrom timeit import default_timer as timer\nfrom torchvision.models import resnet50\n\ndef main():\n    # Define model and input data\n    resnet = resnet50().cuda()\n    x = torch.from_numpy(np.random.rand(1, 3, 224, 224).astype(np.float32)).cuda()\n\n    # The first pass is always slower, so run it once\n    resnet.forward(x)\n    \n    # Measure elapsed time\n    passes = 20\n    total_time = 0\n    for _ in range(passes):\n        start = timer()\n        resnet.forward(x)\n        delta = timer() - start\n        \n        print('Forward pass: %.3fs' % delta)\n        total_time += delta\n    print('Average forward pass: %.3fs' % (total_time / passes))\n\nif __name__ == '__main__':\n    main()\n</code></pre>\n<h2>Expected behavior</h2>\n<p>The same model should run in approximately the same time on each OS.</p>\n<h2>Environment</h2>\n<p>My configuration:</p>\n<ul>\n<li>A GTX 1080</li>\n<li>Windows 7 x64 and Ubuntu18.04 installed (not in VMs)</li>\n<li>A fresh install of Python 3.6.6 on the same SSD for each OS</li>\n<li>Pytorch 0.4.1 with cuda 9.2 , installed through pip on each OS (although I followed the instructions to install cuda 9.2, the Ubuntu report shows 9.0.176 is installed). I do not know about cudnn, I assume it is installed with the torch package each time.</li>\n<li>The most recent nvidia drivers on each OS (390 on Ubuntu vs 416 on Windows)</li>\n</ul>\n<p>Windows environment info:</p>\n<pre><code>PyTorch version: 0.4.1\nIs debug build: No\nCUDA used to build PyTorch: 9.2\n\nOS: Microsoft Windows 7 Ultimate\nGCC version: Could not collect\nCMake version: Could not collect\n\nPython version: 3.6\nIs CUDA available: Yes\nCUDA runtime version: 9.0.176\nGPU models and configuration: GPU 0: GeForce GTX 1080\nNvidia driver version: 416.81\ncuDNN version: Could not collect\n\nVersions of relevant libraries:\n[pip] Could not collect\n[conda] Could not collect\n</code></pre>\n<p>Ubuntu environment info:</p>\n<pre><code>PyTorch version: 0.4.1\nIs debug build: No\nCUDA used to build PyTorch: 9.0.176\n\nOS: Ubuntu 18.04.1 LTS\nGCC version: (Ubuntu 7.3.0-27ubuntu1~18.04) 7.3.0\nCMake version: Could not collect\n\nPython version: 3.6\nIs CUDA available: Yes\nCUDA runtime version: Could not collect\nGPU models and configuration: GPU 0: GeForce GTX 1080\nNvidia driver version: 390.87\ncuDNN version: Could not collect\n\nVersions of relevant libraries:\n[pip3] numpy (1.15.4)\n[pip3] torch (0.4.1)\n[pip3] torchvision (0.2.1)\n[conda] Could not collect\n</code></pre>\n<h2>Additional info</h2>\n<p>I was able to test the same script on an Ubuntu 16.04 server with a GTX 1080 Ti and it ran in 10ms.</p>", "body_text": "Bug\nOn a GTX1080 on Ubuntu18.04, Resnet50 takes 12ms on average for a forward pass. On my installation of Windows 7, it runs in 58ms.\nTo Reproduce\nI used this small script:\nimport numpy as np\nimport torch\nfrom timeit import default_timer as timer\nfrom torchvision.models import resnet50\n\ndef main():\n    # Define model and input data\n    resnet = resnet50().cuda()\n    x = torch.from_numpy(np.random.rand(1, 3, 224, 224).astype(np.float32)).cuda()\n\n    # The first pass is always slower, so run it once\n    resnet.forward(x)\n    \n    # Measure elapsed time\n    passes = 20\n    total_time = 0\n    for _ in range(passes):\n        start = timer()\n        resnet.forward(x)\n        delta = timer() - start\n        \n        print('Forward pass: %.3fs' % delta)\n        total_time += delta\n    print('Average forward pass: %.3fs' % (total_time / passes))\n\nif __name__ == '__main__':\n    main()\n\nExpected behavior\nThe same model should run in approximately the same time on each OS.\nEnvironment\nMy configuration:\n\nA GTX 1080\nWindows 7 x64 and Ubuntu18.04 installed (not in VMs)\nA fresh install of Python 3.6.6 on the same SSD for each OS\nPytorch 0.4.1 with cuda 9.2 , installed through pip on each OS (although I followed the instructions to install cuda 9.2, the Ubuntu report shows 9.0.176 is installed). I do not know about cudnn, I assume it is installed with the torch package each time.\nThe most recent nvidia drivers on each OS (390 on Ubuntu vs 416 on Windows)\n\nWindows environment info:\nPyTorch version: 0.4.1\nIs debug build: No\nCUDA used to build PyTorch: 9.2\n\nOS: Microsoft Windows 7 Ultimate\nGCC version: Could not collect\nCMake version: Could not collect\n\nPython version: 3.6\nIs CUDA available: Yes\nCUDA runtime version: 9.0.176\nGPU models and configuration: GPU 0: GeForce GTX 1080\nNvidia driver version: 416.81\ncuDNN version: Could not collect\n\nVersions of relevant libraries:\n[pip] Could not collect\n[conda] Could not collect\n\nUbuntu environment info:\nPyTorch version: 0.4.1\nIs debug build: No\nCUDA used to build PyTorch: 9.0.176\n\nOS: Ubuntu 18.04.1 LTS\nGCC version: (Ubuntu 7.3.0-27ubuntu1~18.04) 7.3.0\nCMake version: Could not collect\n\nPython version: 3.6\nIs CUDA available: Yes\nCUDA runtime version: Could not collect\nGPU models and configuration: GPU 0: GeForce GTX 1080\nNvidia driver version: 390.87\ncuDNN version: Could not collect\n\nVersions of relevant libraries:\n[pip3] numpy (1.15.4)\n[pip3] torch (0.4.1)\n[pip3] torchvision (0.2.1)\n[conda] Could not collect\n\nAdditional info\nI was able to test the same script on an Ubuntu 16.04 server with a GTX 1080 Ti and it ran in 10ms.", "body": "## Bug\r\n\r\nOn a GTX1080 on Ubuntu18.04, Resnet50 takes 12ms on average for a forward pass. On my installation of Windows 7, it runs in 58ms.\r\n\r\n## To Reproduce\r\n\r\nI used this small script:\r\n```\r\nimport numpy as np\r\nimport torch\r\nfrom timeit import default_timer as timer\r\nfrom torchvision.models import resnet50\r\n\r\ndef main():\r\n    # Define model and input data\r\n    resnet = resnet50().cuda()\r\n    x = torch.from_numpy(np.random.rand(1, 3, 224, 224).astype(np.float32)).cuda()\r\n\r\n    # The first pass is always slower, so run it once\r\n    resnet.forward(x)\r\n    \r\n    # Measure elapsed time\r\n    passes = 20\r\n    total_time = 0\r\n    for _ in range(passes):\r\n        start = timer()\r\n        resnet.forward(x)\r\n        delta = timer() - start\r\n        \r\n        print('Forward pass: %.3fs' % delta)\r\n        total_time += delta\r\n    print('Average forward pass: %.3fs' % (total_time / passes))\r\n\r\nif __name__ == '__main__':\r\n    main()\r\n```\r\n\r\n## Expected behavior\r\n\r\nThe same model should run in approximately the same time on each OS.\r\n\r\n## Environment\r\n\r\nMy configuration:\r\n- A GTX 1080\r\n- Windows 7 x64 and Ubuntu18.04 installed (not in VMs)\r\n- A fresh install of Python 3.6.6 on the same SSD for each OS\r\n- Pytorch 0.4.1 with cuda 9.2 , installed through pip on each OS (although I followed the instructions to install cuda 9.2, the Ubuntu report shows 9.0.176 is installed). I do not know about cudnn, I assume it is installed with the torch package each time.\r\n- The most recent nvidia drivers on each OS (390 on Ubuntu vs 416 on Windows)\r\n\r\nWindows environment info:\r\n```\r\nPyTorch version: 0.4.1\r\nIs debug build: No\r\nCUDA used to build PyTorch: 9.2\r\n\r\nOS: Microsoft Windows 7 Ultimate\r\nGCC version: Could not collect\r\nCMake version: Could not collect\r\n\r\nPython version: 3.6\r\nIs CUDA available: Yes\r\nCUDA runtime version: 9.0.176\r\nGPU models and configuration: GPU 0: GeForce GTX 1080\r\nNvidia driver version: 416.81\r\ncuDNN version: Could not collect\r\n\r\nVersions of relevant libraries:\r\n[pip] Could not collect\r\n[conda] Could not collect\r\n```\r\n\r\nUbuntu environment info:\r\n```\r\nPyTorch version: 0.4.1\r\nIs debug build: No\r\nCUDA used to build PyTorch: 9.0.176\r\n\r\nOS: Ubuntu 18.04.1 LTS\r\nGCC version: (Ubuntu 7.3.0-27ubuntu1~18.04) 7.3.0\r\nCMake version: Could not collect\r\n\r\nPython version: 3.6\r\nIs CUDA available: Yes\r\nCUDA runtime version: Could not collect\r\nGPU models and configuration: GPU 0: GeForce GTX 1080\r\nNvidia driver version: 390.87\r\ncuDNN version: Could not collect\r\n\r\nVersions of relevant libraries:\r\n[pip3] numpy (1.15.4)\r\n[pip3] torch (0.4.1)\r\n[pip3] torchvision (0.2.1)\r\n[conda] Could not collect\r\n```\r\n\r\n## Additional info\r\nI was able to test the same script on an Ubuntu 16.04 server with a GTX 1080 Ti and it ran in 10ms.\r\n"}