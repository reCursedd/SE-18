{"url": "https://api.github.com/repos/pytorch/pytorch/issues/comments/290259814", "html_url": "https://github.com/pytorch/pytorch/pull/1141#issuecomment-290259814", "issue_url": "https://api.github.com/repos/pytorch/pytorch/issues/1141", "id": 290259814, "node_id": "MDEyOklzc3VlQ29tbWVudDI5MDI1OTgxNA==", "user": {"login": "ngimel", "id": 15841449, "node_id": "MDQ6VXNlcjE1ODQxNDQ5", "avatar_url": "https://avatars3.githubusercontent.com/u/15841449?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ngimel", "html_url": "https://github.com/ngimel", "followers_url": "https://api.github.com/users/ngimel/followers", "following_url": "https://api.github.com/users/ngimel/following{/other_user}", "gists_url": "https://api.github.com/users/ngimel/gists{/gist_id}", "starred_url": "https://api.github.com/users/ngimel/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ngimel/subscriptions", "organizations_url": "https://api.github.com/users/ngimel/orgs", "repos_url": "https://api.github.com/users/ngimel/repos", "events_url": "https://api.github.com/users/ngimel/events{/privacy}", "received_events_url": "https://api.github.com/users/ngimel/received_events", "type": "User", "site_admin": false}, "created_at": "2017-03-29T23:45:37Z", "updated_at": "2017-03-29T23:45:37Z", "author_association": "CONTRIBUTOR", "body_html": "<p>It's hard to say when persistent is faster than regular, that depends on the batch size and sequence length. Generally I agree that trying to switch to persistent only when possible make sense, but hardcoding that (e.g. crude heuristic - for batch size less than 16 use persistent, otherwise standard) can lead to perf regressions and still leaves issue 2 (if hiddenSize is too big, or one is running on Maxwell, persistent is not supported, yet cudnn backend will keep trying to use it). Keeping persistent kwarg gives user more control.</p>", "body_text": "It's hard to say when persistent is faster than regular, that depends on the batch size and sequence length. Generally I agree that trying to switch to persistent only when possible make sense, but hardcoding that (e.g. crude heuristic - for batch size less than 16 use persistent, otherwise standard) can lead to perf regressions and still leaves issue 2 (if hiddenSize is too big, or one is running on Maxwell, persistent is not supported, yet cudnn backend will keep trying to use it). Keeping persistent kwarg gives user more control.", "body": "It's hard to say when persistent is faster than regular, that depends on the batch size and sequence length. Generally I agree that trying to switch to persistent only when possible make sense, but hardcoding that (e.g. crude heuristic - for batch size less than 16 use persistent, otherwise standard) can lead to perf regressions and still leaves issue 2 (if hiddenSize is too big, or one is running on Maxwell, persistent is not supported, yet cudnn backend will keep trying to use it). Keeping persistent kwarg gives user more control. "}