{"url": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/109072725", "pull_request_review_id": 30151055, "id": 109072725, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEwOTA3MjcyNQ==", "diff_hunk": "@@ -190,7 +196,11 @@ def forward(fn, input, hx, weight, output, hy):\n         handle = cudnn.get_handle()\n         fn.datatype = cudnn._typemap[input.type()]\n         is_input_packed = fn.batch_sizes is not None\n-\n+        if is_input_packed:\n+            warnings.warn(\n+                \"Warning: persistent algorithm not supported for variable length input.\"\n+                \"Switching to standard\")\n+            fn.persistent = False  # persistent algo is not supported for variable length input", "path": "torch/backends/cudnn/rnn.py", "position": 41, "original_position": 41, "commit_id": "738ebd1be1c0444730a96ce650e85496a0f8444e", "original_commit_id": "738ebd1be1c0444730a96ce650e85496a0f8444e", "user": {"login": "ngimel", "id": 15841449, "node_id": "MDQ6VXNlcjE1ODQxNDQ5", "avatar_url": "https://avatars3.githubusercontent.com/u/15841449?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ngimel", "html_url": "https://github.com/ngimel", "followers_url": "https://api.github.com/users/ngimel/followers", "following_url": "https://api.github.com/users/ngimel/following{/other_user}", "gists_url": "https://api.github.com/users/ngimel/gists{/gist_id}", "starred_url": "https://api.github.com/users/ngimel/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ngimel/subscriptions", "organizations_url": "https://api.github.com/users/ngimel/orgs", "repos_url": "https://api.github.com/users/ngimel/repos", "events_url": "https://api.github.com/users/ngimel/events{/privacy}", "received_events_url": "https://api.github.com/users/ngimel/received_events", "type": "User", "site_admin": false}, "body": "Changes in sequence length are usually well behaved (it's the number of gemms called in standard algo, or the loop count in persistent), but changes in batch size/hidden size can alter performance a lot. Cublas releases are about every 6 months, give or take, but cudnn releases are independent and can be built with some intermediate versions of cublas. \r\nI can put in benchmarking persistent and standard algos if cudnn.benchmark is set, and we will seek input of power users like @jekbradbury to see if it's enough or if they want some better approach. \r\n", "created_at": "2017-03-31T01:28:39Z", "updated_at": "2018-11-23T15:32:55Z", "html_url": "https://github.com/pytorch/pytorch/pull/1141#discussion_r109072725", "pull_request_url": "https://api.github.com/repos/pytorch/pytorch/pulls/1141", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/109072725"}, "html": {"href": "https://github.com/pytorch/pytorch/pull/1141#discussion_r109072725"}, "pull_request": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/1141"}}, "body_html": "<p>Changes in sequence length are usually well behaved (it's the number of gemms called in standard algo, or the loop count in persistent), but changes in batch size/hidden size can alter performance a lot. Cublas releases are about every 6 months, give or take, but cudnn releases are independent and can be built with some intermediate versions of cublas.<br>\nI can put in benchmarking persistent and standard algos if cudnn.benchmark is set, and we will seek input of power users like <a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=11729078\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/jekbradbury\">@jekbradbury</a> to see if it's enough or if they want some better approach.</p>", "body_text": "Changes in sequence length are usually well behaved (it's the number of gemms called in standard algo, or the loop count in persistent), but changes in batch size/hidden size can alter performance a lot. Cublas releases are about every 6 months, give or take, but cudnn releases are independent and can be built with some intermediate versions of cublas.\nI can put in benchmarking persistent and standard algos if cudnn.benchmark is set, and we will seek input of power users like @jekbradbury to see if it's enough or if they want some better approach.", "in_reply_to_id": 109042245}