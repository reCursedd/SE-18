{"url": "https://api.github.com/repos/pytorch/pytorch/issues/851", "repository_url": "https://api.github.com/repos/pytorch/pytorch", "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/851/labels{/name}", "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/851/comments", "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/851/events", "html_url": "https://github.com/pytorch/pytorch/pull/851", "id": 210264479, "node_id": "MDExOlB1bGxSZXF1ZXN0MTA3OTc4NDk4", "number": 851, "title": "Add finite differences gradcheck", "user": {"login": "szagoruyko", "id": 4953728, "node_id": "MDQ6VXNlcjQ5NTM3Mjg=", "avatar_url": "https://avatars3.githubusercontent.com/u/4953728?v=4", "gravatar_id": "", "url": "https://api.github.com/users/szagoruyko", "html_url": "https://github.com/szagoruyko", "followers_url": "https://api.github.com/users/szagoruyko/followers", "following_url": "https://api.github.com/users/szagoruyko/following{/other_user}", "gists_url": "https://api.github.com/users/szagoruyko/gists{/gist_id}", "starred_url": "https://api.github.com/users/szagoruyko/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/szagoruyko/subscriptions", "organizations_url": "https://api.github.com/users/szagoruyko/orgs", "repos_url": "https://api.github.com/users/szagoruyko/repos", "events_url": "https://api.github.com/users/szagoruyko/events{/privacy}", "received_events_url": "https://api.github.com/users/szagoruyko/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-02-25T21:47:49Z", "updated_at": "2018-11-23T15:32:33Z", "closed_at": "2017-02-26T13:35:25Z", "author_association": "CONTRIBUTOR", "pull_request": {"url": "https://api.github.com/repos/pytorch/pytorch/pulls/851", "html_url": "https://github.com/pytorch/pytorch/pull/851", "diff_url": "https://github.com/pytorch/pytorch/pull/851.diff", "patch_url": "https://github.com/pytorch/pytorch/pull/851.patch"}, "body_html": "<p>Factored out torch_autograd.py testing code to a separate <code>torch.autograd.gradcheck</code> module. <a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=4583066\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/apaszke\">@apaszke</a> please take a look.</p>\n<p>address <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load issue title\" data-id=\"210229527\" data-permission-text=\"Issue title is private\" data-url=\"https://github.com/pytorch/pytorch/issues/849\" data-hovercard-type=\"issue\" data-hovercard-url=\"/pytorch/pytorch/issues/849/hovercard\" href=\"https://github.com/pytorch/pytorch/issues/849\">#849</a></p>\n<p>Example:</p>\n<div class=\"highlight highlight-source-python\"><pre><span class=\"pl-k\">from</span> torch.autograd <span class=\"pl-k\">import</span> Variable, gradcheck\n\ninputs <span class=\"pl-k\">=</span> Variable(torch.randn(<span class=\"pl-c1\">4</span>, <span class=\"pl-c1\">4</span>), <span class=\"pl-v\">requires_grad</span><span class=\"pl-k\">=</span><span class=\"pl-c1\">True</span>)\n\ngradcheck(<span class=\"pl-k\">lambda</span> <span class=\"pl-smi\">x</span>: <span class=\"pl-c1\">2</span><span class=\"pl-k\">*</span>x.diag(), (inputs,), <span class=\"pl-v\">eps</span><span class=\"pl-k\">=</span><span class=\"pl-c1\">1e-3</span>)</pre></div>", "body_text": "Factored out torch_autograd.py testing code to a separate torch.autograd.gradcheck module. @apaszke please take a look.\naddress #849\nExample:\nfrom torch.autograd import Variable, gradcheck\n\ninputs = Variable(torch.randn(4, 4), requires_grad=True)\n\ngradcheck(lambda x: 2*x.diag(), (inputs,), eps=1e-3)", "body": "Factored out torch_autograd.py testing code to a separate `torch.autograd.gradcheck` module. @apaszke please take a look.\r\n\r\naddress https://github.com/pytorch/pytorch/issues/849\r\n\r\nExample:\r\n\r\n```python\r\nfrom torch.autograd import Variable, gradcheck\r\n\r\ninputs = Variable(torch.randn(4, 4), requires_grad=True)\r\n\r\ngradcheck(lambda x: 2*x.diag(), (inputs,), eps=1e-3)\r\n```"}