{"url": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/197969638", "pull_request_review_id": 131814204, "id": 197969638, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5Nzk2OTYzOA==", "diff_hunk": "@@ -77,12 +77,17 @@ struct VISIBILITY_HIDDEN PythonValue : public SugaredValue {\n       throw ErrorReport(loc) << \"keyword arguments in Python calls aren't supported\";\n     Graph& g = *m.graph();\n \n-    // this python object might be a @trace or @script stand-alone function\n+    // this python object might be a @trace or @script function/module\n     // if so, inline the graph rather than calling the python\n-    if(py::isinstance<GraphExecutor>(self)) {\n-      GraphExecutor& ge = py::cast<GraphExecutor&>(self);\n-      ensureSizeMatches(loc, ge.graph()->inputs().size(), inputs.size(), \"arguments\");\n-      return packOutputs(*m.graph(),inlineCallTo(*m.graph(), *ge.graph(), inputs));\n+\n+    if(py::isinstance<Module>(self)) {", "path": "torch/csrc/jit/script/init.cpp", "position": 20, "original_position": 12, "commit_id": "7516ff5d0eac2aea1abecec3950d0d2becb2a198", "original_commit_id": "bb087a9bf5cab0aa96a450f7b742c50cdd1d9b13", "user": {"login": "zdevito", "id": 370202, "node_id": "MDQ6VXNlcjM3MDIwMg==", "avatar_url": "https://avatars0.githubusercontent.com/u/370202?v=4", "gravatar_id": "", "url": "https://api.github.com/users/zdevito", "html_url": "https://github.com/zdevito", "followers_url": "https://api.github.com/users/zdevito/followers", "following_url": "https://api.github.com/users/zdevito/following{/other_user}", "gists_url": "https://api.github.com/users/zdevito/gists{/gist_id}", "starred_url": "https://api.github.com/users/zdevito/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/zdevito/subscriptions", "organizations_url": "https://api.github.com/users/zdevito/orgs", "repos_url": "https://api.github.com/users/zdevito/repos", "events_url": "https://api.github.com/users/zdevito/events{/privacy}", "received_events_url": "https://api.github.com/users/zdevito/received_events", "type": "User", "site_admin": false}, "body": "This code is unsafe: We keep ModuleValues separate from PythonValues because the only legit module calls are to submodules which are obtained via attribute lookup from self. Otherwise you can call a non-submodule whose parameters are not owned by the surrounding module. Those parameters can then go out of scope and crash the program. \r\n\r\nThere needs to be a check that the \"module\" being accessed this way has no parameters before the call to emit_call_to is valid. ", "created_at": "2018-06-25T23:07:25Z", "updated_at": "2018-11-23T15:46:19Z", "html_url": "https://github.com/pytorch/pytorch/pull/8876#discussion_r197969638", "pull_request_url": "https://api.github.com/repos/pytorch/pytorch/pulls/8876", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/197969638"}, "html": {"href": "https://github.com/pytorch/pytorch/pull/8876#discussion_r197969638"}, "pull_request": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/8876"}}, "body_html": "<p>This code is unsafe: We keep ModuleValues separate from PythonValues because the only legit module calls are to submodules which are obtained via attribute lookup from self. Otherwise you can call a non-submodule whose parameters are not owned by the surrounding module. Those parameters can then go out of scope and crash the program.</p>\n<p>There needs to be a check that the \"module\" being accessed this way has no parameters before the call to emit_call_to is valid.</p>", "body_text": "This code is unsafe: We keep ModuleValues separate from PythonValues because the only legit module calls are to submodules which are obtained via attribute lookup from self. Otherwise you can call a non-submodule whose parameters are not owned by the surrounding module. Those parameters can then go out of scope and crash the program.\nThere needs to be a check that the \"module\" being accessed this way has no parameters before the call to emit_call_to is valid."}