{"url": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/198623175", "pull_request_review_id": 132561662, "id": 198623175, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5ODYyMzE3NQ==", "diff_hunk": "@@ -452,6 +460,23 @@ void initJitScriptBindings(PyObject* module) {\n           }\n           auto graph = tracer::createGraphByTracing(func, std::move(inputs), num_inputs);\n           self.create_method(name, std::move(graph), std::move(parameters));\n+      })\n+      .def(\"graph_for\", [](Module& self, py::args args) {\n+        if (self.find_method(\"forward\")) {\n+          return self.get_method(\"forward\").graph_for(createVariableTensorList(args));\n+        }\n+        throw std::runtime_error(\"Attempted to call graph_for on a Module without a compiled forward()\");\n+      })\n+      .def(\"_forward\", [](Module& self, py::args args) {\n+        // We implement this in C++ to avoid incurring the pybind11 dispatch\n+        // overhead twice: once to call into the method lookup for \"forward\"\n+        // and once to actually invoke the method.\n+        //\n+        // There is a thin wrapper on top of this method in the C++ version of\n+        // ScriptModule.\n+        auto inputs = createVariableTensorList(args);", "path": "torch/csrc/jit/script/init.cpp", "position": null, "original_position": 93, "commit_id": "7516ff5d0eac2aea1abecec3950d0d2becb2a198", "original_commit_id": "094f53b10d7accea28f9582011fe7ce478df83ad", "user": {"login": "zdevito", "id": 370202, "node_id": "MDQ6VXNlcjM3MDIwMg==", "avatar_url": "https://avatars0.githubusercontent.com/u/370202?v=4", "gravatar_id": "", "url": "https://api.github.com/users/zdevito", "html_url": "https://github.com/zdevito", "followers_url": "https://api.github.com/users/zdevito/followers", "following_url": "https://api.github.com/users/zdevito/following{/other_user}", "gists_url": "https://api.github.com/users/zdevito/gists{/gist_id}", "starred_url": "https://api.github.com/users/zdevito/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/zdevito/subscriptions", "organizations_url": "https://api.github.com/users/zdevito/orgs", "repos_url": "https://api.github.com/users/zdevito/repos", "events_url": "https://api.github.com/users/zdevito/events{/privacy}", "received_events_url": "https://api.github.com/users/zdevito/received_events", "type": "User", "site_admin": false}, "body": "It would be nice to have a single function that does these three lines for both forward and __call__ on Methods. We are going to update this site in the future to handle more data types, and having two site will add potential for divergence.", "created_at": "2018-06-27T20:03:27Z", "updated_at": "2018-11-23T15:46:29Z", "html_url": "https://github.com/pytorch/pytorch/pull/8876#discussion_r198623175", "pull_request_url": "https://api.github.com/repos/pytorch/pytorch/pulls/8876", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/198623175"}, "html": {"href": "https://github.com/pytorch/pytorch/pull/8876#discussion_r198623175"}, "pull_request": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/8876"}}, "body_html": "<p>It would be nice to have a single function that does these three lines for both forward and <strong>call</strong> on Methods. We are going to update this site in the future to handle more data types, and having two site will add potential for divergence.</p>", "body_text": "It would be nice to have a single function that does these three lines for both forward and call on Methods. We are going to update this site in the future to handle more data types, and having two site will add potential for divergence."}