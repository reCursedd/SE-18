{"url": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/109406845", "pull_request_review_id": 30446003, "id": 109406845, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEwOTQwNjg0NQ==", "diff_hunk": "@@ -100,9 +90,16 @@ def backward(self, grad_output):\n                 1\n             )\n         else:\n-            sp = self._make_sparse(indices, type(grad_output))\n-            go = grad_output.view(-1, grad_output.size()[-1])\n-            grad_weight = torch.smm(sp, go)\n+            tensor_type = type(grad_output).__name__\n+            if grad_output.is_cuda:\n+                SparseTensor = getattr(torch.cuda.sparse, tensor_type)\n+            else:\n+                SparseTensor = getattr(torch.sparse, tensor_type)\n+            grad_weight = SparseTensor(\n+                indices.view(1, -1),\n+                grad_output.view(-1, self._weight_size[1]),\n+                self._weight_size,\n+            )", "path": "torch/nn/_functions/thnn/sparse.py", "position": 38, "original_position": 38, "commit_id": "f4105bcbb3dc4ebc23f20112949a0de79e24d978", "original_commit_id": "8e4660ac5145c4a48e35620f8810fa8863cb7b50", "user": {"login": "martinraison", "id": 2560662, "node_id": "MDQ6VXNlcjI1NjA2NjI=", "avatar_url": "https://avatars3.githubusercontent.com/u/2560662?v=4", "gravatar_id": "", "url": "https://api.github.com/users/martinraison", "html_url": "https://github.com/martinraison", "followers_url": "https://api.github.com/users/martinraison/followers", "following_url": "https://api.github.com/users/martinraison/following{/other_user}", "gists_url": "https://api.github.com/users/martinraison/gists{/gist_id}", "starred_url": "https://api.github.com/users/martinraison/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/martinraison/subscriptions", "organizations_url": "https://api.github.com/users/martinraison/orgs", "repos_url": "https://api.github.com/users/martinraison/repos", "events_url": "https://api.github.com/users/martinraison/events{/privacy}", "received_events_url": "https://api.github.com/users/martinraison/received_events", "type": "User", "site_admin": false}, "body": "Sparse updates are only useful with some optimizers (specifically optimizers that don't have momentum). So SGD and Adagrad will benefit from it, however Adam will have to convert everything back to dense. This is why I didn't make `sparse` the default.\r\n\r\nBtw I'm not sure what's the preferred behavior when using e.g. Adam with sparse gradients. Silently convert everything to dense? Convert + warning? Convert + warning only once? Exception?", "created_at": "2017-04-03T12:43:52Z", "updated_at": "2018-11-23T15:32:59Z", "html_url": "https://github.com/pytorch/pytorch/pull/1147#discussion_r109406845", "pull_request_url": "https://api.github.com/repos/pytorch/pytorch/pulls/1147", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/109406845"}, "html": {"href": "https://github.com/pytorch/pytorch/pull/1147#discussion_r109406845"}, "pull_request": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/1147"}}, "body_html": "<p>Sparse updates are only useful with some optimizers (specifically optimizers that don't have momentum). So SGD and Adagrad will benefit from it, however Adam will have to convert everything back to dense. This is why I didn't make <code>sparse</code> the default.</p>\n<p>Btw I'm not sure what's the preferred behavior when using e.g. Adam with sparse gradients. Silently convert everything to dense? Convert + warning? Convert + warning only once? Exception?</p>", "body_text": "Sparse updates are only useful with some optimizers (specifically optimizers that don't have momentum). So SGD and Adagrad will benefit from it, however Adam will have to convert everything back to dense. This is why I didn't make sparse the default.\nBtw I'm not sure what's the preferred behavior when using e.g. Adam with sparse gradients. Silently convert everything to dense? Convert + warning? Convert + warning only once? Exception?", "in_reply_to_id": 109176885}