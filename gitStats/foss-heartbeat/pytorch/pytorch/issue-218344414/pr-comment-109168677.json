{"url": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/109168677", "pull_request_review_id": 30253008, "id": 109168677, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEwOTE2ODY3Nw==", "diff_hunk": "@@ -157,6 +155,37 @@ PyObject * THSPTensor_(size)(PyObject *self, PyObject *args, PyObject *kwargs)\n ]]\n \n [[\n+  name: t\n+  sparse: yes\n+  with_stateless: True\n+  cname: newTranspose\n+  return: THSTensor*\n+  before_call: |\n+    long nDimI = ((THSPTensor*)${arg0})->cdata->nDimensionI;\n+    long nDimV = ((THSPTensor*)${arg0})->cdata->nDimensionV;\n+    THPUtils_assert(nDimI == 2 && nDimV == 0, \"t() expects a 2D sparse tensor, but self is %ldD indices and %ldD values\", nDimI, nDimV);", "path": "torch/csrc/generic/methods/SparseTensor.cwrap", "position": 42, "original_position": 53, "commit_id": "f4105bcbb3dc4ebc23f20112949a0de79e24d978", "original_commit_id": "8e4660ac5145c4a48e35620f8810fa8863cb7b50", "user": {"login": "apaszke", "id": 4583066, "node_id": "MDQ6VXNlcjQ1ODMwNjY=", "avatar_url": "https://avatars3.githubusercontent.com/u/4583066?v=4", "gravatar_id": "", "url": "https://api.github.com/users/apaszke", "html_url": "https://github.com/apaszke", "followers_url": "https://api.github.com/users/apaszke/followers", "following_url": "https://api.github.com/users/apaszke/following{/other_user}", "gists_url": "https://api.github.com/users/apaszke/gists{/gist_id}", "starred_url": "https://api.github.com/users/apaszke/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/apaszke/subscriptions", "organizations_url": "https://api.github.com/users/apaszke/orgs", "repos_url": "https://api.github.com/users/apaszke/repos", "events_url": "https://api.github.com/users/apaszke/events{/privacy}", "received_events_url": "https://api.github.com/users/apaszke/received_events", "type": "User", "site_admin": false}, "body": "Is `transpose` supported for hybrid tensors? If yes, why not only check `nDimI + nDimV == 2`? If no, don't we need another check in the `transpose` method?", "created_at": "2017-03-31T14:12:43Z", "updated_at": "2018-11-23T15:32:55Z", "html_url": "https://github.com/pytorch/pytorch/pull/1147#discussion_r109168677", "pull_request_url": "https://api.github.com/repos/pytorch/pytorch/pulls/1147", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/109168677"}, "html": {"href": "https://github.com/pytorch/pytorch/pull/1147#discussion_r109168677"}, "pull_request": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/1147"}}, "body_html": "<p>Is <code>transpose</code> supported for hybrid tensors? If yes, why not only check <code>nDimI + nDimV == 2</code>? If no, don't we need another check in the <code>transpose</code> method?</p>", "body_text": "Is transpose supported for hybrid tensors? If yes, why not only check nDimI + nDimV == 2? If no, don't we need another check in the transpose method?"}