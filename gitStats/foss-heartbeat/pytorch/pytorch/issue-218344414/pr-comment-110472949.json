{"url": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/110472949", "pull_request_review_id": 31644119, "id": 110472949, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDExMDQ3Mjk0OQ==", "diff_hunk": "@@ -221,20 +242,43 @@ THCSTensor *THCSTensor_(newTranspose)(THCState *state, THCSTensor *self, int d1,\n   return other;\n }\n \n+THCTensor *THCSTensor_(newValuesWithSizeOf)(THCState *state, THCTensor *values, long nnz) {\n+  THCTensor *new_values;\n+  if (THCTensor_(nDimension)(state, values) == 0) { // values tensor uninitialized\n+    new_values = THCTensor_(newWithSize1d)(state, nnz);\n+  } else {\n+    THLongStorage *size = THCTensor_(newSizeOf)(state, values);\n+    size->data[0] = nnz;\n+    new_values = THCTensor_(newWithSize)(state, size, NULL);\n+    THLongStorage_free(size);\n+  }\n+  return new_values;\n+}\n \n /******************************************************************************\n  * reshaping methods\n  ******************************************************************************/\n \n int THCSTensor_(isSameSizeAs)(THCState *state, const THCSTensor *self, const THCSTensor* src)\n {\n-  int d;\n   if (self->nDimensionI != src->nDimensionI || self->nDimensionV != src->nDimensionV)\n     return 0;\n-  for(d = 0; d < self->nDimensionI + self->nDimensionV; ++d)\n-  {\n-    if(self->size[d] != src->size[d])\n+  for(int d = 0; d < self->nDimensionI + self->nDimensionV; ++d) {", "path": "torch/lib/THCS/generic/THCSTensor.c", "position": 238, "original_position": 180, "commit_id": "f4105bcbb3dc4ebc23f20112949a0de79e24d978", "original_commit_id": "179b2dafe865e7cbdd79b18f58143e8ca5d4782d", "user": {"login": "martinraison", "id": 2560662, "node_id": "MDQ6VXNlcjI1NjA2NjI=", "avatar_url": "https://avatars3.githubusercontent.com/u/2560662?v=4", "gravatar_id": "", "url": "https://api.github.com/users/martinraison", "html_url": "https://github.com/martinraison", "followers_url": "https://api.github.com/users/martinraison/followers", "following_url": "https://api.github.com/users/martinraison/following{/other_user}", "gists_url": "https://api.github.com/users/martinraison/gists{/gist_id}", "starred_url": "https://api.github.com/users/martinraison/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/martinraison/subscriptions", "organizations_url": "https://api.github.com/users/martinraison/orgs", "repos_url": "https://api.github.com/users/martinraison/repos", "events_url": "https://api.github.com/users/martinraison/events{/privacy}", "received_events_url": "https://api.github.com/users/martinraison/received_events", "type": "User", "site_admin": false}, "body": "This is already guaranteed by the previous if statement.", "created_at": "2017-04-07T20:09:43Z", "updated_at": "2018-11-23T15:33:04Z", "html_url": "https://github.com/pytorch/pytorch/pull/1147#discussion_r110472949", "pull_request_url": "https://api.github.com/repos/pytorch/pytorch/pulls/1147", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/110472949"}, "html": {"href": "https://github.com/pytorch/pytorch/pull/1147#discussion_r110472949"}, "pull_request": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/1147"}}, "body_html": "<p>This is already guaranteed by the previous if statement.</p>", "body_text": "This is already guaranteed by the previous if statement.", "in_reply_to_id": 109726287}