{"url": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/110470217", "pull_request_review_id": 31644119, "id": 110470217, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDExMDQ3MDIxNw==", "diff_hunk": "@@ -42,12 +42,19 @@ THLongStorage *THCSTensor_(newSizeOf)(THCState *state, THCSTensor *self)\n \n /*** TODO: watch out for memory leaks ***/\n THCIndexTensor *THCSTensor_(indices)(THCState *state, const THCSTensor *self) {\n-  if (!self->indices) return self->indices;", "path": "torch/lib/THCS/generic/THCSTensor.c", "position": null, "original_position": 4, "commit_id": "f4105bcbb3dc4ebc23f20112949a0de79e24d978", "original_commit_id": "179b2dafe865e7cbdd79b18f58143e8ca5d4782d", "user": {"login": "martinraison", "id": 2560662, "node_id": "MDQ6VXNlcjI1NjA2NjI=", "avatar_url": "https://avatars3.githubusercontent.com/u/2560662?v=4", "gravatar_id": "", "url": "https://api.github.com/users/martinraison", "html_url": "https://github.com/martinraison", "followers_url": "https://api.github.com/users/martinraison/followers", "following_url": "https://api.github.com/users/martinraison/following{/other_user}", "gists_url": "https://api.github.com/users/martinraison/gists{/gist_id}", "starred_url": "https://api.github.com/users/martinraison/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/martinraison/subscriptions", "organizations_url": "https://api.github.com/users/martinraison/orgs", "repos_url": "https://api.github.com/users/martinraison/repos", "events_url": "https://api.github.com/users/martinraison/events{/privacy}", "received_events_url": "https://api.github.com/users/martinraison/received_events", "type": "User", "site_admin": false}, "body": "narrow used to be necessary for THS because the `contiguous` function was operating (slowly) in-place, decreasing the total number of elements. Resizing in that case meant copying everything because the indices tensor size is `d x nnz` and not `nnz x d`, that's why we were using `narrow` in the `indices` function instead.\r\n\r\nI wasn't sure if it was a good idea to introduce the extra constraint that indices must contain exactly the right number of elements, so I also used `narrow` in `THCS`.\r\n\r\nI agree `newIndices` and `newValues` are better names, I'll make the change.", "created_at": "2017-04-07T19:54:34Z", "updated_at": "2018-11-23T15:33:04Z", "html_url": "https://github.com/pytorch/pytorch/pull/1147#discussion_r110470217", "pull_request_url": "https://api.github.com/repos/pytorch/pytorch/pulls/1147", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/110470217"}, "html": {"href": "https://github.com/pytorch/pytorch/pull/1147#discussion_r110470217"}, "pull_request": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/1147"}}, "body_html": "<p>narrow used to be necessary for THS because the <code>contiguous</code> function was operating (slowly) in-place, decreasing the total number of elements. Resizing in that case meant copying everything because the indices tensor size is <code>d x nnz</code> and not <code>nnz x d</code>, that's why we were using <code>narrow</code> in the <code>indices</code> function instead.</p>\n<p>I wasn't sure if it was a good idea to introduce the extra constraint that indices must contain exactly the right number of elements, so I also used <code>narrow</code> in <code>THCS</code>.</p>\n<p>I agree <code>newIndices</code> and <code>newValues</code> are better names, I'll make the change.</p>", "body_text": "narrow used to be necessary for THS because the contiguous function was operating (slowly) in-place, decreasing the total number of elements. Resizing in that case meant copying everything because the indices tensor size is d x nnz and not nnz x d, that's why we were using narrow in the indices function instead.\nI wasn't sure if it was a good idea to introduce the extra constraint that indices must contain exactly the right number of elements, so I also used narrow in THCS.\nI agree newIndices and newValues are better names, I'll make the change.", "in_reply_to_id": 109742609}