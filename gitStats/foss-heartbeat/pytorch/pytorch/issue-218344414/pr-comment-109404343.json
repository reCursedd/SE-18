{"url": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/109404343", "pull_request_review_id": 30446003, "id": 109404343, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEwOTQwNDM0Mw==", "diff_hunk": "@@ -275,6 +316,14 @@ THCSTensor *THCSTensor_(resize4d)(THCState *state, THCSTensor *self, long size0,\n   return self;\n }\n \n+void THCSTensor_(copy)(THCState *state, THCSTensor *self, THCSTensor *src) {\n+  if (self == src) return;\n+  THCSTensor_(rawResize)(state, self, src->nDimensionI, src->nDimensionV, src->size);\n+  THCSTensor_(_set)(state, self, src->indices, src->values);", "path": "torch/lib/THCS/generic/THCSTensor.c", "position": 291, "original_position": 203, "commit_id": "f4105bcbb3dc4ebc23f20112949a0de79e24d978", "original_commit_id": "8e4660ac5145c4a48e35620f8810fa8863cb7b50", "user": {"login": "martinraison", "id": 2560662, "node_id": "MDQ6VXNlcjI1NjA2NjI=", "avatar_url": "https://avatars3.githubusercontent.com/u/2560662?v=4", "gravatar_id": "", "url": "https://api.github.com/users/martinraison", "html_url": "https://github.com/martinraison", "followers_url": "https://api.github.com/users/martinraison/followers", "following_url": "https://api.github.com/users/martinraison/following{/other_user}", "gists_url": "https://api.github.com/users/martinraison/gists{/gist_id}", "starred_url": "https://api.github.com/users/martinraison/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/martinraison/subscriptions", "organizations_url": "https://api.github.com/users/martinraison/orgs", "repos_url": "https://api.github.com/users/martinraison/repos", "events_url": "https://api.github.com/users/martinraison/events{/privacy}", "received_events_url": "https://api.github.com/users/martinraison/received_events", "type": "User", "site_admin": false}, "body": "`_set` clones the indices and values tensors so there won't be shared memory (note: those were the original semantics of `set`, which I renamed to `set` in my previous PR because it was an internal method. We can change the name to `cloneInto` or something else if you want)", "created_at": "2017-04-03T12:30:51Z", "updated_at": "2018-11-23T15:32:58Z", "html_url": "https://github.com/pytorch/pytorch/pull/1147#discussion_r109404343", "pull_request_url": "https://api.github.com/repos/pytorch/pytorch/pulls/1147", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/109404343"}, "html": {"href": "https://github.com/pytorch/pytorch/pull/1147#discussion_r109404343"}, "pull_request": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/1147"}}, "body_html": "<p><code>_set</code> clones the indices and values tensors so there won't be shared memory (note: those were the original semantics of <code>set</code>, which I renamed to <code>set</code> in my previous PR because it was an internal method. We can change the name to <code>cloneInto</code> or something else if you want)</p>", "body_text": "_set clones the indices and values tensors so there won't be shared memory (note: those were the original semantics of set, which I renamed to set in my previous PR because it was an internal method. We can change the name to cloneInto or something else if you want)", "in_reply_to_id": 109173674}