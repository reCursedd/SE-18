{"url": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/109561734", "pull_request_review_id": 30671730, "id": 109561734, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEwOTU2MTczNA==", "diff_hunk": "@@ -259,61 +324,124 @@ def test_shape(di, dj, dk):\n             alpha = random.random()\n             beta = random.random()\n \n-            expected = torch.addmm(alpha, t.to_dense(), beta, x.to_dense(), y)\n             res = torch.saddmm(alpha, t, beta, x, y)\n+            expected = torch.addmm(alpha, t.to_dense(), beta, x.to_dense(), y)\n             self.assertEqual(res.to_dense(), expected)\n \n-            expected = torch.addmm(t.to_dense(), x.to_dense(), y)\n             res = torch.saddmm(t, x, y)\n+            expected = torch.addmm(t.to_dense(), x.to_dense(), y)\n             self.assertEqual(res.to_dense(), expected)\n \n-            expected = torch.mm(x.to_dense(), y)\n             res = torch.smm(x, y)\n+            expected = torch.mm(x.to_dense(), y)\n             self.assertEqual(res.to_dense(), expected)\n \n         test_shape(7, 5, 3)\n         test_shape(1000, 100, 100)\n         test_shape(3000, 64, 300)\n \n-    def _test_spadd_shape(self, shape_i, shape_v=None):\n+    def _test_dsmm(self, is_cuda):\n+        def test_shape(di, dj, dk):\n+            x = self._gen_sparse(2, 20, [di, dj], is_cuda)[0]\n+            y = torch.randn(dj, dk)\n+            if is_cuda:\n+                y = y.cuda()\n+\n+            res = torch.dsmm(x, y)\n+            expected = torch.mm(x.to_dense(), y)\n+            self.assertEqual(res, expected)\n+\n+        test_shape(7, 5, 3)\n+        test_shape(1000, 100, 100)\n+        test_shape(3000, 64, 300)\n+\n+    def test_dsmm(self):\n+        self._test_dsmm(False)\n+\n+    @unittest.skipIf(not TEST_CUDA, 'CUDA not available')\n+    def test_dsmm_cuda(self):\n+        self._test_dsmm(True)\n+\n+    def _test_hsmm(self, is_cuda):\n+        def test_shape(di, dj, dk):\n+            x = self._gen_sparse(2, 20, [di, dj], is_cuda)[0]\n+            y = torch.randn(dj, dk)\n+            if is_cuda:\n+                y = y.cuda()\n+\n+            res = torch.hsmm(x, y)", "path": "test/test_sparse.py", "position": 383, "original_position": 383, "commit_id": "f4105bcbb3dc4ebc23f20112949a0de79e24d978", "original_commit_id": "179b2dafe865e7cbdd79b18f58143e8ca5d4782d", "user": {"login": "adamlerer", "id": 5702157, "node_id": "MDQ6VXNlcjU3MDIxNTc=", "avatar_url": "https://avatars2.githubusercontent.com/u/5702157?v=4", "gravatar_id": "", "url": "https://api.github.com/users/adamlerer", "html_url": "https://github.com/adamlerer", "followers_url": "https://api.github.com/users/adamlerer/followers", "following_url": "https://api.github.com/users/adamlerer/following{/other_user}", "gists_url": "https://api.github.com/users/adamlerer/gists{/gist_id}", "starred_url": "https://api.github.com/users/adamlerer/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/adamlerer/subscriptions", "organizations_url": "https://api.github.com/users/adamlerer/orgs", "repos_url": "https://api.github.com/users/adamlerer/repos", "events_url": "https://api.github.com/users/adamlerer/events{/privacy}", "received_events_url": "https://api.github.com/users/adamlerer/received_events", "type": "User", "site_admin": false}, "body": "Is this hybrid-sparse? Can't this be routed automatically at runtime based on the types?\r\nI'm not quite sure why torch.mm doesn't automatically route to the correct types actually. I can see some pros and cons, but what were your thoughts?", "created_at": "2017-04-04T01:37:02Z", "updated_at": "2018-11-23T15:32:59Z", "html_url": "https://github.com/pytorch/pytorch/pull/1147#discussion_r109561734", "pull_request_url": "https://api.github.com/repos/pytorch/pytorch/pulls/1147", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/109561734"}, "html": {"href": "https://github.com/pytorch/pytorch/pull/1147#discussion_r109561734"}, "pull_request": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/1147"}}, "body_html": "<p>Is this hybrid-sparse? Can't this be routed automatically at runtime based on the types?<br>\nI'm not quite sure why torch.mm doesn't automatically route to the correct types actually. I can see some pros and cons, but what were your thoughts?</p>", "body_text": "Is this hybrid-sparse? Can't this be routed automatically at runtime based on the types?\nI'm not quite sure why torch.mm doesn't automatically route to the correct types actually. I can see some pros and cons, but what were your thoughts?"}