{"url": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/109400646", "pull_request_review_id": 30446003, "id": 109400646, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEwOTQwMDY0Ng==", "diff_hunk": "@@ -1,22 +1,238 @@\n #include \"THCSTensor.h\"\n #include \"THCApply.cuh\"\n+#include \"THCTensorMathPointwise.cuh\"\n #include \"stdio.h\"\n \n-template <typename IndexType, typename Real>\n-__global__ void THCSTensor_toDenseKernel(\n-    TensorInfo<Real, IndexType> other,\n-    TensorInfo<long, IndexType> indices,\n+template <typename IndexType, typename Real, typename Op>\n+__device__ void applyOp2(\n+    Op op, IndexType blockSize,\n+    TensorInfo<Real, IndexType> values1, IndexType idx1,\n+    TensorInfo<Real, IndexType> values2, IndexType idx2) {\n+  for (IndexType k = blockIdx.x * blockDim.x + threadIdx.x;\n+       k < blockSize;\n+       k += gridDim.x * blockDim.x) {\n+    op(values1.data + idx1 * blockSize + k, values2.data + idx2 * blockSize + k);\n+  }\n+}\n+\n+template <typename IndexType, typename Real, typename Op>\n+__device__ void applyOp3(\n+    Op op, IndexType blockSize,\n+    TensorInfo<Real, IndexType> values1, IndexType idx1,\n+    TensorInfo<Real, IndexType> values2, IndexType idx2,\n+    TensorInfo<Real, IndexType> values3, IndexType idx3) {\n+  for (IndexType k = blockIdx.x * blockDim.x + threadIdx.x;\n+       k < blockSize;\n+       k += gridDim.x * blockDim.x) {\n+    op(values1.data + idx1 * blockSize + k,\n+       values2.data + idx2 * blockSize + k,\n+       values3.data + idx3 * blockSize + k);\n+  }\n+}\n+\n+template <typename Op, typename IndexType, typename Real>\n+__global__ void THCSTensor_spcKernel(", "path": "torch/lib/THCS/THCSTensor.cu", "position": null, "original_position": 38, "commit_id": "f4105bcbb3dc4ebc23f20112949a0de79e24d978", "original_commit_id": "8e4660ac5145c4a48e35620f8810fa8863cb7b50", "user": {"login": "martinraison", "id": 2560662, "node_id": "MDQ6VXNlcjI1NjA2NjI=", "avatar_url": "https://avatars3.githubusercontent.com/u/2560662?v=4", "gravatar_id": "", "url": "https://api.github.com/users/martinraison", "html_url": "https://github.com/martinraison", "followers_url": "https://api.github.com/users/martinraison/followers", "following_url": "https://api.github.com/users/martinraison/following{/other_user}", "gists_url": "https://api.github.com/users/martinraison/gists{/gist_id}", "starred_url": "https://api.github.com/users/martinraison/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/martinraison/subscriptions", "organizations_url": "https://api.github.com/users/martinraison/orgs", "repos_url": "https://api.github.com/users/martinraison/repos", "events_url": "https://api.github.com/users/martinraison/events{/privacy}", "received_events_url": "https://api.github.com/users/martinraison/received_events", "type": "User", "site_admin": false}, "body": "\ud83d\udc4d ", "created_at": "2017-04-03T12:08:36Z", "updated_at": "2018-11-23T15:32:58Z", "html_url": "https://github.com/pytorch/pytorch/pull/1147#discussion_r109400646", "pull_request_url": "https://api.github.com/repos/pytorch/pytorch/pulls/1147", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/109400646"}, "html": {"href": "https://github.com/pytorch/pytorch/pull/1147#discussion_r109400646"}, "pull_request": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/1147"}}, "body_html": "<p><g-emoji class=\"g-emoji\" alias=\"+1\" fallback-src=\"https://assets-cdn.github.com/images/icons/emoji/unicode/1f44d.png\">\ud83d\udc4d</g-emoji></p>", "body_text": "\ud83d\udc4d", "in_reply_to_id": 109170632}