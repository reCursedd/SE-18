{"url": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/109713905", "pull_request_review_id": 30671730, "id": 109713905, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEwOTcxMzkwNQ==", "diff_hunk": "@@ -70,7 +77,7 @@ static void THCSTensor_(rawInit)(THCState *state, THCSTensor *self)\n   self->refcount = 1;\n }\n \n-static void THCSTensor_(rawResize)(THCState *state, THCSTensor *self, int nDimI, int nDimV, long *size) {\n+void THCSTensor_(rawResize)(THCState *state, THCSTensor *self, int nDimI, int nDimV, long *size) {\n   // Only resize valid sizes into tensor.\n   self->size = THRealloc(self->size, sizeof(long)*(nDimI + nDimV));\n ", "path": "torch/lib/THCS/generic/THCSTensor.c", "position": 44, "original_position": 41, "commit_id": "f4105bcbb3dc4ebc23f20112949a0de79e24d978", "original_commit_id": "179b2dafe865e7cbdd79b18f58143e8ca5d4782d", "user": {"login": "adamlerer", "id": 5702157, "node_id": "MDQ6VXNlcjU3MDIxNTc=", "avatar_url": "https://avatars2.githubusercontent.com/u/5702157?v=4", "gravatar_id": "", "url": "https://api.github.com/users/adamlerer", "html_url": "https://github.com/adamlerer", "followers_url": "https://api.github.com/users/adamlerer/followers", "following_url": "https://api.github.com/users/adamlerer/following{/other_user}", "gists_url": "https://api.github.com/users/adamlerer/gists{/gist_id}", "starred_url": "https://api.github.com/users/adamlerer/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/adamlerer/subscriptions", "organizations_url": "https://api.github.com/users/adamlerer/orgs", "repos_url": "https://api.github.com/users/adamlerer/repos", "events_url": "https://api.github.com/users/adamlerer/events{/privacy}", "received_events_url": "https://api.github.com/users/adamlerer/received_events", "type": "User", "site_admin": false}, "body": "What's the idea here? Skipping 0 dimensions leads to some weird results, maybe this is to handle some specific case?\r\n\r\n\r\n```\r\nIn [14]: a = torch.sparse.FloatTensor(torch.LongTensor([[1,3,5],[0,0,0]]), torch.FloatTensor([1,1,1]), torch.Size([6,0]))\r\n\r\nIn [15]: a\r\nOut[15]:\r\nFloatTensor with indices:\r\n\r\n 1  3  5\r\n 0  0  0\r\n[torch.LongTensor of size 2x3]\r\nand values:\r\n\r\n 1\r\n 1\r\n 1\r\n[torch.FloatTensor of size 3]\r\n\r\nIn [16]: a.size()\r\nOut[16]: torch.Size([6])\r\n```", "created_at": "2017-04-04T16:36:35Z", "updated_at": "2018-11-23T15:33:00Z", "html_url": "https://github.com/pytorch/pytorch/pull/1147#discussion_r109713905", "pull_request_url": "https://api.github.com/repos/pytorch/pytorch/pulls/1147", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/109713905"}, "html": {"href": "https://github.com/pytorch/pytorch/pull/1147#discussion_r109713905"}, "pull_request": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/1147"}}, "body_html": "<p>What's the idea here? Skipping 0 dimensions leads to some weird results, maybe this is to handle some specific case?</p>\n<pre><code>In [14]: a = torch.sparse.FloatTensor(torch.LongTensor([[1,3,5],[0,0,0]]), torch.FloatTensor([1,1,1]), torch.Size([6,0]))\n\nIn [15]: a\nOut[15]:\nFloatTensor with indices:\n\n 1  3  5\n 0  0  0\n[torch.LongTensor of size 2x3]\nand values:\n\n 1\n 1\n 1\n[torch.FloatTensor of size 3]\n\nIn [16]: a.size()\nOut[16]: torch.Size([6])\n</code></pre>", "body_text": "What's the idea here? Skipping 0 dimensions leads to some weird results, maybe this is to handle some specific case?\nIn [14]: a = torch.sparse.FloatTensor(torch.LongTensor([[1,3,5],[0,0,0]]), torch.FloatTensor([1,1,1]), torch.Size([6,0]))\n\nIn [15]: a\nOut[15]:\nFloatTensor with indices:\n\n 1  3  5\n 0  0  0\n[torch.LongTensor of size 2x3]\nand values:\n\n 1\n 1\n 1\n[torch.FloatTensor of size 3]\n\nIn [16]: a.size()\nOut[16]: torch.Size([6])"}