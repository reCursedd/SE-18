{"url": "https://api.github.com/repos/pytorch/pytorch/pulls/12824", "id": 224026270, "node_id": "MDExOlB1bGxSZXF1ZXN0MjI0MDI2Mjcw", "html_url": "https://github.com/pytorch/pytorch/pull/12824", "diff_url": "https://github.com/pytorch/pytorch/pull/12824.diff", "patch_url": "https://github.com/pytorch/pytorch/pull/12824.patch", "issue_url": "https://api.github.com/repos/pytorch/pytorch/issues/12824", "number": 12824, "state": "closed", "locked": false, "title": "Speed up tensor.resize_(sizes) when tensor has correct size", "user": {"login": "zou3519", "id": 5652049, "node_id": "MDQ6VXNlcjU2NTIwNDk=", "avatar_url": "https://avatars3.githubusercontent.com/u/5652049?v=4", "gravatar_id": "", "url": "https://api.github.com/users/zou3519", "html_url": "https://github.com/zou3519", "followers_url": "https://api.github.com/users/zou3519/followers", "following_url": "https://api.github.com/users/zou3519/following{/other_user}", "gists_url": "https://api.github.com/users/zou3519/gists{/gist_id}", "starred_url": "https://api.github.com/users/zou3519/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/zou3519/subscriptions", "organizations_url": "https://api.github.com/users/zou3519/orgs", "repos_url": "https://api.github.com/users/zou3519/repos", "events_url": "https://api.github.com/users/zou3519/events{/privacy}", "received_events_url": "https://api.github.com/users/zou3519/received_events", "type": "User", "site_admin": false}, "body": "While using gbenchmark, I found `tensor.resize_({0})` would take 300ns\r\nif tensor already has the correct size. This is important for\r\n`at::empty({0})` perf because `at::empty` always calls `resize_`, which\r\nin turn is a important for JIT perf: the fusion compiler creates empty\r\ntensors and then `resize_`s them to computed sizes. Most of the 300ns is\r\ndue to DeviceGuard (200ns)\r\n\r\nSummary of findings:\r\n- `at::empty({0}, cuda)`: 851ns\r\n- `empty_tensor.resize({0})`: 308ns\r\n- `DeviceGuard(tensor)`: ctor + dtor: 200ns (Going to look into this\r\n  next because it impacts `resize_` perf).\r\n- vdispatch overhead (`tensor.resize_()` vs\r\n  `at::native::resize__cuda(tensor)`): ~10ns\r\n\r\nThis PR rips out the TH `resize_` implementation and adds it to ATen\r\nwith the following modifications:\r\n- DeviceGuard used only after the same-size check.\r\n- Same-size check rewritten for simplicity. The new check doesn't\r\naffect perf.\r\n- empty_cpu / empty_cuda avoid the dispatch overhead to\r\ntensor.resize_.\r\n\r\nTiming with this PR:\r\n- `at::empty({0}, cuda)`: 363ns\r\n- `empty_tensor.resize_({0})`: 17ns\r\n\r\nFuture:\r\n- Investigate `resize_(sizes)` slowness when `tensor.sizes() != sizes`\r\n- Should tell resize_as_ to use the new resize_ implementation...\r\n(because resize_as_ is in TH, it is calling the old TH resize_)\r\n\r\n", "created_at": "2018-10-18T16:47:14Z", "updated_at": "2018-11-23T15:53:23Z", "closed_at": "2018-10-26T04:11:02Z", "merged_at": null, "merge_commit_sha": "5aa74e546d424f1e6407235568361cb648ff0a0c", "assignee": null, "assignees": [], "requested_reviewers": [{"login": "gchanan", "id": 3768583, "node_id": "MDQ6VXNlcjM3Njg1ODM=", "avatar_url": "https://avatars2.githubusercontent.com/u/3768583?v=4", "gravatar_id": "", "url": "https://api.github.com/users/gchanan", "html_url": "https://github.com/gchanan", "followers_url": "https://api.github.com/users/gchanan/followers", "following_url": "https://api.github.com/users/gchanan/following{/other_user}", "gists_url": "https://api.github.com/users/gchanan/gists{/gist_id}", "starred_url": "https://api.github.com/users/gchanan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/gchanan/subscriptions", "organizations_url": "https://api.github.com/users/gchanan/orgs", "repos_url": "https://api.github.com/users/gchanan/repos", "events_url": "https://api.github.com/users/gchanan/events{/privacy}", "received_events_url": "https://api.github.com/users/gchanan/received_events", "type": "User", "site_admin": false}], "requested_teams": [], "labels": [], "milestone": null, "commits_url": "https://api.github.com/repos/pytorch/pytorch/pulls/12824/commits", "review_comments_url": "https://api.github.com/repos/pytorch/pytorch/pulls/12824/comments", "review_comment_url": "https://api.github.com/repos/pytorch/pytorch/pulls/comments{/number}", "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/12824/comments", "statuses_url": "https://api.github.com/repos/pytorch/pytorch/statuses/3ba8ce0f99432d62f4f9f228168f2a109791db94", "head": {"label": "zou3519:resize", "ref": "resize", "sha": "3ba8ce0f99432d62f4f9f228168f2a109791db94", "user": {"login": "zou3519", "id": 5652049, "node_id": "MDQ6VXNlcjU2NTIwNDk=", "avatar_url": "https://avatars3.githubusercontent.com/u/5652049?v=4", "gravatar_id": "", "url": "https://api.github.com/users/zou3519", "html_url": "https://github.com/zou3519", "followers_url": "https://api.github.com/users/zou3519/followers", "following_url": "https://api.github.com/users/zou3519/following{/other_user}", "gists_url": "https://api.github.com/users/zou3519/gists{/gist_id}", "starred_url": "https://api.github.com/users/zou3519/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/zou3519/subscriptions", "organizations_url": "https://api.github.com/users/zou3519/orgs", "repos_url": "https://api.github.com/users/zou3519/repos", "events_url": "https://api.github.com/users/zou3519/events{/privacy}", "received_events_url": "https://api.github.com/users/zou3519/received_events", "type": "User", "site_admin": false}, "repo": {"id": 103550456, "node_id": "MDEwOlJlcG9zaXRvcnkxMDM1NTA0NTY=", "name": "pytorch", "full_name": "zou3519/pytorch", "private": false, "owner": {"login": "zou3519", "id": 5652049, "node_id": "MDQ6VXNlcjU2NTIwNDk=", "avatar_url": "https://avatars3.githubusercontent.com/u/5652049?v=4", "gravatar_id": "", "url": "https://api.github.com/users/zou3519", "html_url": "https://github.com/zou3519", "followers_url": "https://api.github.com/users/zou3519/followers", "following_url": "https://api.github.com/users/zou3519/following{/other_user}", "gists_url": "https://api.github.com/users/zou3519/gists{/gist_id}", "starred_url": "https://api.github.com/users/zou3519/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/zou3519/subscriptions", "organizations_url": "https://api.github.com/users/zou3519/orgs", "repos_url": "https://api.github.com/users/zou3519/repos", "events_url": "https://api.github.com/users/zou3519/events{/privacy}", "received_events_url": "https://api.github.com/users/zou3519/received_events", "type": "User", "site_admin": false}, "html_url": "https://github.com/zou3519/pytorch", "description": "Tensors and Dynamic neural networks in Python  with strong GPU acceleration", "fork": true, "url": "https://api.github.com/repos/zou3519/pytorch", "forks_url": "https://api.github.com/repos/zou3519/pytorch/forks", "keys_url": "https://api.github.com/repos/zou3519/pytorch/keys{/key_id}", "collaborators_url": "https://api.github.com/repos/zou3519/pytorch/collaborators{/collaborator}", "teams_url": "https://api.github.com/repos/zou3519/pytorch/teams", "hooks_url": "https://api.github.com/repos/zou3519/pytorch/hooks", "issue_events_url": "https://api.github.com/repos/zou3519/pytorch/issues/events{/number}", "events_url": "https://api.github.com/repos/zou3519/pytorch/events", "assignees_url": "https://api.github.com/repos/zou3519/pytorch/assignees{/user}", "branches_url": "https://api.github.com/repos/zou3519/pytorch/branches{/branch}", "tags_url": "https://api.github.com/repos/zou3519/pytorch/tags", "blobs_url": "https://api.github.com/repos/zou3519/pytorch/git/blobs{/sha}", "git_tags_url": "https://api.github.com/repos/zou3519/pytorch/git/tags{/sha}", "git_refs_url": "https://api.github.com/repos/zou3519/pytorch/git/refs{/sha}", "trees_url": "https://api.github.com/repos/zou3519/pytorch/git/trees{/sha}", "statuses_url": "https://api.github.com/repos/zou3519/pytorch/statuses/{sha}", "languages_url": "https://api.github.com/repos/zou3519/pytorch/languages", "stargazers_url": "https://api.github.com/repos/zou3519/pytorch/stargazers", "contributors_url": "https://api.github.com/repos/zou3519/pytorch/contributors", "subscribers_url": "https://api.github.com/repos/zou3519/pytorch/subscribers", "subscription_url": "https://api.github.com/repos/zou3519/pytorch/subscription", "commits_url": "https://api.github.com/repos/zou3519/pytorch/commits{/sha}", "git_commits_url": "https://api.github.com/repos/zou3519/pytorch/git/commits{/sha}", "comments_url": "https://api.github.com/repos/zou3519/pytorch/comments{/number}", "issue_comment_url": "https://api.github.com/repos/zou3519/pytorch/issues/comments{/number}", "contents_url": "https://api.github.com/repos/zou3519/pytorch/contents/{+path}", "compare_url": "https://api.github.com/repos/zou3519/pytorch/compare/{base}...{head}", "merges_url": "https://api.github.com/repos/zou3519/pytorch/merges", "archive_url": "https://api.github.com/repos/zou3519/pytorch/{archive_format}{/ref}", "downloads_url": "https://api.github.com/repos/zou3519/pytorch/downloads", "issues_url": "https://api.github.com/repos/zou3519/pytorch/issues{/number}", "pulls_url": "https://api.github.com/repos/zou3519/pytorch/pulls{/number}", "milestones_url": "https://api.github.com/repos/zou3519/pytorch/milestones{/number}", "notifications_url": "https://api.github.com/repos/zou3519/pytorch/notifications{?since,all,participating}", "labels_url": "https://api.github.com/repos/zou3519/pytorch/labels{/name}", "releases_url": "https://api.github.com/repos/zou3519/pytorch/releases{/id}", "deployments_url": "https://api.github.com/repos/zou3519/pytorch/deployments", "created_at": "2017-09-14T15:36:38Z", "updated_at": "2018-11-14T15:29:03Z", "pushed_at": "2018-11-21T19:36:59Z", "git_url": "git://github.com/zou3519/pytorch.git", "ssh_url": "git@github.com:zou3519/pytorch.git", "clone_url": "https://github.com/zou3519/pytorch.git", "svn_url": "https://github.com/zou3519/pytorch", "homepage": "http://pytorch.org", "size": 123188, "stargazers_count": 0, "watchers_count": 0, "language": "C++", "has_issues": false, "has_projects": true, "has_downloads": true, "has_wiki": true, "has_pages": false, "forks_count": 0, "mirror_url": null, "archived": false, "open_issues_count": 0, "license": {"key": "other", "name": "Other", "spdx_id": "NOASSERTION", "url": null, "node_id": "MDc6TGljZW5zZTA="}, "forks": 0, "open_issues": 0, "watchers": 0, "default_branch": "master"}}, "base": {"label": "pytorch:master", "ref": "master", "sha": "c47f680086802267aa93ea2dfa96b4a1a7a54dd1", "user": {"login": "pytorch", "id": 21003710, "node_id": "MDEyOk9yZ2FuaXphdGlvbjIxMDAzNzEw", "avatar_url": "https://avatars3.githubusercontent.com/u/21003710?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pytorch", "html_url": "https://github.com/pytorch", "followers_url": "https://api.github.com/users/pytorch/followers", "following_url": "https://api.github.com/users/pytorch/following{/other_user}", "gists_url": "https://api.github.com/users/pytorch/gists{/gist_id}", "starred_url": "https://api.github.com/users/pytorch/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pytorch/subscriptions", "organizations_url": "https://api.github.com/users/pytorch/orgs", "repos_url": "https://api.github.com/users/pytorch/repos", "events_url": "https://api.github.com/users/pytorch/events{/privacy}", "received_events_url": "https://api.github.com/users/pytorch/received_events", "type": "Organization", "site_admin": false}, "repo": {"id": 65600975, "node_id": "MDEwOlJlcG9zaXRvcnk2NTYwMDk3NQ==", "name": "pytorch", "full_name": "pytorch/pytorch", "private": false, "owner": {"login": "pytorch", "id": 21003710, "node_id": "MDEyOk9yZ2FuaXphdGlvbjIxMDAzNzEw", "avatar_url": "https://avatars3.githubusercontent.com/u/21003710?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pytorch", "html_url": "https://github.com/pytorch", "followers_url": "https://api.github.com/users/pytorch/followers", "following_url": "https://api.github.com/users/pytorch/following{/other_user}", "gists_url": "https://api.github.com/users/pytorch/gists{/gist_id}", "starred_url": "https://api.github.com/users/pytorch/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pytorch/subscriptions", "organizations_url": "https://api.github.com/users/pytorch/orgs", "repos_url": "https://api.github.com/users/pytorch/repos", "events_url": "https://api.github.com/users/pytorch/events{/privacy}", "received_events_url": "https://api.github.com/users/pytorch/received_events", "type": "Organization", "site_admin": false}, "html_url": "https://github.com/pytorch/pytorch", "description": "Tensors and Dynamic neural networks in Python  with strong GPU acceleration", "fork": false, "url": "https://api.github.com/repos/pytorch/pytorch", "forks_url": "https://api.github.com/repos/pytorch/pytorch/forks", "keys_url": "https://api.github.com/repos/pytorch/pytorch/keys{/key_id}", "collaborators_url": "https://api.github.com/repos/pytorch/pytorch/collaborators{/collaborator}", "teams_url": "https://api.github.com/repos/pytorch/pytorch/teams", "hooks_url": "https://api.github.com/repos/pytorch/pytorch/hooks", "issue_events_url": "https://api.github.com/repos/pytorch/pytorch/issues/events{/number}", "events_url": "https://api.github.com/repos/pytorch/pytorch/events", "assignees_url": "https://api.github.com/repos/pytorch/pytorch/assignees{/user}", "branches_url": "https://api.github.com/repos/pytorch/pytorch/branches{/branch}", "tags_url": "https://api.github.com/repos/pytorch/pytorch/tags", "blobs_url": "https://api.github.com/repos/pytorch/pytorch/git/blobs{/sha}", "git_tags_url": "https://api.github.com/repos/pytorch/pytorch/git/tags{/sha}", "git_refs_url": "https://api.github.com/repos/pytorch/pytorch/git/refs{/sha}", "trees_url": "https://api.github.com/repos/pytorch/pytorch/git/trees{/sha}", "statuses_url": "https://api.github.com/repos/pytorch/pytorch/statuses/{sha}", "languages_url": "https://api.github.com/repos/pytorch/pytorch/languages", "stargazers_url": "https://api.github.com/repos/pytorch/pytorch/stargazers", "contributors_url": "https://api.github.com/repos/pytorch/pytorch/contributors", "subscribers_url": "https://api.github.com/repos/pytorch/pytorch/subscribers", "subscription_url": "https://api.github.com/repos/pytorch/pytorch/subscription", "commits_url": "https://api.github.com/repos/pytorch/pytorch/commits{/sha}", "git_commits_url": "https://api.github.com/repos/pytorch/pytorch/git/commits{/sha}", "comments_url": "https://api.github.com/repos/pytorch/pytorch/comments{/number}", "issue_comment_url": "https://api.github.com/repos/pytorch/pytorch/issues/comments{/number}", "contents_url": "https://api.github.com/repos/pytorch/pytorch/contents/{+path}", "compare_url": "https://api.github.com/repos/pytorch/pytorch/compare/{base}...{head}", "merges_url": "https://api.github.com/repos/pytorch/pytorch/merges", "archive_url": "https://api.github.com/repos/pytorch/pytorch/{archive_format}{/ref}", "downloads_url": "https://api.github.com/repos/pytorch/pytorch/downloads", "issues_url": "https://api.github.com/repos/pytorch/pytorch/issues{/number}", "pulls_url": "https://api.github.com/repos/pytorch/pytorch/pulls{/number}", "milestones_url": "https://api.github.com/repos/pytorch/pytorch/milestones{/number}", "notifications_url": "https://api.github.com/repos/pytorch/pytorch/notifications{?since,all,participating}", "labels_url": "https://api.github.com/repos/pytorch/pytorch/labels{/name}", "releases_url": "https://api.github.com/repos/pytorch/pytorch/releases{/id}", "deployments_url": "https://api.github.com/repos/pytorch/pytorch/deployments", "created_at": "2016-08-13T05:26:41Z", "updated_at": "2018-11-24T05:35:41Z", "pushed_at": "2018-11-24T05:34:07Z", "git_url": "git://github.com/pytorch/pytorch.git", "ssh_url": "git@github.com:pytorch/pytorch.git", "clone_url": "https://github.com/pytorch/pytorch.git", "svn_url": "https://github.com/pytorch/pytorch", "homepage": "http://pytorch.org", "size": 89651, "stargazers_count": 21577, "watchers_count": 21577, "language": "C++", "has_issues": true, "has_projects": true, "has_downloads": true, "has_wiki": true, "has_pages": false, "forks_count": 5149, "mirror_url": null, "archived": false, "open_issues_count": 2193, "license": {"key": "other", "name": "Other", "spdx_id": "NOASSERTION", "url": null, "node_id": "MDc6TGljZW5zZTA="}, "forks": 5149, "open_issues": 2193, "watchers": 21577, "default_branch": "master"}}, "_links": {"self": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/12824"}, "html": {"href": "https://github.com/pytorch/pytorch/pull/12824"}, "issue": {"href": "https://api.github.com/repos/pytorch/pytorch/issues/12824"}, "comments": {"href": "https://api.github.com/repos/pytorch/pytorch/issues/12824/comments"}, "review_comments": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/12824/comments"}, "review_comment": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/comments{/number}"}, "commits": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/12824/commits"}, "statuses": {"href": "https://api.github.com/repos/pytorch/pytorch/statuses/3ba8ce0f99432d62f4f9f228168f2a109791db94"}}, "author_association": "CONTRIBUTOR", "body_html": "<p>While using gbenchmark, I found <code>tensor.resize_({0})</code> would take 300ns<br>\nif tensor already has the correct size. This is important for<br>\n<code>at::empty({0})</code> perf because <code>at::empty</code> always calls <code>resize_</code>, which<br>\nin turn is a important for JIT perf: the fusion compiler creates empty<br>\ntensors and then <code>resize_</code>s them to computed sizes. Most of the 300ns is<br>\ndue to DeviceGuard (200ns)</p>\n<p>Summary of findings:</p>\n<ul>\n<li><code>at::empty({0}, cuda)</code>: 851ns</li>\n<li><code>empty_tensor.resize({0})</code>: 308ns</li>\n<li><code>DeviceGuard(tensor)</code>: ctor + dtor: 200ns (Going to look into this<br>\nnext because it impacts <code>resize_</code> perf).</li>\n<li>vdispatch overhead (<code>tensor.resize_()</code> vs<br>\n<code>at::native::resize__cuda(tensor)</code>): ~10ns</li>\n</ul>\n<p>This PR rips out the TH <code>resize_</code> implementation and adds it to ATen<br>\nwith the following modifications:</p>\n<ul>\n<li>DeviceGuard used only after the same-size check.</li>\n<li>Same-size check rewritten for simplicity. The new check doesn't<br>\naffect perf.</li>\n<li>empty_cpu / empty_cuda avoid the dispatch overhead to<br>\ntensor.resize_.</li>\n</ul>\n<p>Timing with this PR:</p>\n<ul>\n<li><code>at::empty({0}, cuda)</code>: 363ns</li>\n<li><code>empty_tensor.resize_({0})</code>: 17ns</li>\n</ul>\n<p>Future:</p>\n<ul>\n<li>Investigate <code>resize_(sizes)</code> slowness when <code>tensor.sizes() != sizes</code></li>\n<li>Should tell resize_as_ to use the new resize_ implementation...<br>\n(because resize_as_ is in TH, it is calling the old TH resize_)</li>\n</ul>", "body_text": "While using gbenchmark, I found tensor.resize_({0}) would take 300ns\nif tensor already has the correct size. This is important for\nat::empty({0}) perf because at::empty always calls resize_, which\nin turn is a important for JIT perf: the fusion compiler creates empty\ntensors and then resize_s them to computed sizes. Most of the 300ns is\ndue to DeviceGuard (200ns)\nSummary of findings:\n\nat::empty({0}, cuda): 851ns\nempty_tensor.resize({0}): 308ns\nDeviceGuard(tensor): ctor + dtor: 200ns (Going to look into this\nnext because it impacts resize_ perf).\nvdispatch overhead (tensor.resize_() vs\nat::native::resize__cuda(tensor)): ~10ns\n\nThis PR rips out the TH resize_ implementation and adds it to ATen\nwith the following modifications:\n\nDeviceGuard used only after the same-size check.\nSame-size check rewritten for simplicity. The new check doesn't\naffect perf.\nempty_cpu / empty_cuda avoid the dispatch overhead to\ntensor.resize_.\n\nTiming with this PR:\n\nat::empty({0}, cuda): 363ns\nempty_tensor.resize_({0}): 17ns\n\nFuture:\n\nInvestigate resize_(sizes) slowness when tensor.sizes() != sizes\nShould tell resize_as_ to use the new resize_ implementation...\n(because resize_as_ is in TH, it is calling the old TH resize_)", "merged": false, "mergeable": null, "rebaseable": null, "mergeable_state": "unknown", "merged_by": null, "comments": 7, "review_comments": 5, "maintainer_can_modify": false, "commits": 5, "additions": 205, "deletions": 131, "changed_files": 15}