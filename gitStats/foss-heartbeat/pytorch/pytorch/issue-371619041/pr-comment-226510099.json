{"url": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/226510099", "pull_request_review_id": 166350377, "id": 226510099, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIyNjUxMDA5OQ==", "diff_hunk": "@@ -0,0 +1,43 @@\n+#include \"ATen/ATen.h\"\n+#include \"TH/THTensor.hpp\"\n+\n+namespace at { namespace native {\n+\n+Tensor& resize__cpu(Tensor& self, IntList size) {\n+  if (self.sizes() == size) {\n+    return self;\n+  }\n+\n+  auto* self_ = self.unsafeGetTensorImpl();\n+\n+  int totalSize = 1;\n+  int nDimension = size.size();\n+  if(nDimension != self_->dim()) {\n+    self_->resize_dim(nDimension);\n+  }\n+\n+  for (int d = nDimension - 1; d >= 0; d--) {\n+    self_->set_size(d, size[d]);", "path": "aten/src/ATen/native/Resize.cpp", "position": null, "original_position": 20, "commit_id": "3ba8ce0f99432d62f4f9f228168f2a109791db94", "original_commit_id": "53c49852b62b603a638c510b4eb51a3b437b3fed", "user": {"login": "ezyang", "id": 13564, "node_id": "MDQ6VXNlcjEzNTY0", "avatar_url": "https://avatars0.githubusercontent.com/u/13564?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ezyang", "html_url": "https://github.com/ezyang", "followers_url": "https://api.github.com/users/ezyang/followers", "following_url": "https://api.github.com/users/ezyang/following{/other_user}", "gists_url": "https://api.github.com/users/ezyang/gists{/gist_id}", "starred_url": "https://api.github.com/users/ezyang/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ezyang/subscriptions", "organizations_url": "https://api.github.com/users/ezyang/orgs", "repos_url": "https://api.github.com/users/ezyang/repos", "events_url": "https://api.github.com/users/ezyang/events{/privacy}", "received_events_url": "https://api.github.com/users/ezyang/received_events", "type": "User", "site_admin": false}, "body": "Oooh, please don't do it this way. Look at the implementation:\r\n\r\n```\r\n  virtual void set_size(int64_t dim, int64_t new_size) {\r\n    sizes_.at(dim) = new_size;\r\n    refresh_numel();\r\n    refresh_contiguous();\r\n  }\r\n```\r\n\r\nYou're doing way more work than you need to. Use `set_sizes_and_strides` instead.", "created_at": "2018-10-19T01:13:37Z", "updated_at": "2018-11-23T15:53:17Z", "html_url": "https://github.com/pytorch/pytorch/pull/12824#discussion_r226510099", "pull_request_url": "https://api.github.com/repos/pytorch/pytorch/pulls/12824", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/226510099"}, "html": {"href": "https://github.com/pytorch/pytorch/pull/12824#discussion_r226510099"}, "pull_request": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/12824"}}, "body_html": "<p>Oooh, please don't do it this way. Look at the implementation:</p>\n<pre><code>  virtual void set_size(int64_t dim, int64_t new_size) {\n    sizes_.at(dim) = new_size;\n    refresh_numel();\n    refresh_contiguous();\n  }\n</code></pre>\n<p>You're doing way more work than you need to. Use <code>set_sizes_and_strides</code> instead.</p>", "body_text": "Oooh, please don't do it this way. Look at the implementation:\n  virtual void set_size(int64_t dim, int64_t new_size) {\n    sizes_.at(dim) = new_size;\n    refresh_numel();\n    refresh_contiguous();\n  }\n\nYou're doing way more work than you need to. Use set_sizes_and_strides instead."}