{"url": "https://api.github.com/repos/pytorch/pytorch/issues/9435", "repository_url": "https://api.github.com/repos/pytorch/pytorch", "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/9435/labels{/name}", "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/9435/comments", "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/9435/events", "html_url": "https://github.com/pytorch/pytorch/pull/9435", "id": 341189745, "node_id": "MDExOlB1bGxSZXF1ZXN0MjAxNDIzNDE1", "number": 9435, "title": "Creates CUDAContext", "user": {"login": "mruberry", "id": 38511765, "node_id": "MDQ6VXNlcjM4NTExNzY1", "avatar_url": "https://avatars3.githubusercontent.com/u/38511765?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mruberry", "html_url": "https://github.com/mruberry", "followers_url": "https://api.github.com/users/mruberry/followers", "following_url": "https://api.github.com/users/mruberry/following{/other_user}", "gists_url": "https://api.github.com/users/mruberry/gists{/gist_id}", "starred_url": "https://api.github.com/users/mruberry/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mruberry/subscriptions", "organizations_url": "https://api.github.com/users/mruberry/orgs", "repos_url": "https://api.github.com/users/mruberry/repos", "events_url": "https://api.github.com/users/mruberry/events{/privacy}", "received_events_url": "https://api.github.com/users/mruberry/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 8, "created_at": "2018-07-13T23:55:44Z", "updated_at": "2018-11-23T15:47:25Z", "closed_at": "2018-07-20T19:57:25Z", "author_association": "CONTRIBUTOR", "pull_request": {"url": "https://api.github.com/repos/pytorch/pytorch/pulls/9435", "html_url": "https://github.com/pytorch/pytorch/pull/9435", "diff_url": "https://github.com/pytorch/pytorch/pull/9435.diff", "patch_url": "https://github.com/pytorch/pytorch/pull/9435.patch"}, "body_html": "<p><a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=13564\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/ezyang\">@ezyang</a> noticed that the CUDAStream files lived under ATen/ despite being CUDA-specific, and suggested porting them to ATen/cuda and exposing them with a new CUDAContext. This PR does that. It also:</p>\n<ul>\n<li>Moves ATen's CUDA-specific exceptions for ATen/cudnn to ATen/cuda for consistency</li>\n<li>Moves getDeviceProperties() and getCurrentCUDASparseHandle() to CUDAContext from CUDAHooks</li>\n</ul>\n<p>The separation between CUDAContext and CUDAHooks is straightforward. Files that are in CUDA-only builds should rely on CUDAContext, while CUDAHooks is for runtime dispatch in files that can be included in CPU-only builds. A comment in CUDAContext.h explains this pattern. Acquiring device properties and CUDA-specific handles is something only done in builds with CUDA, for example, so I moved them from CUDAHooks to CUDAContext.</p>\n<p>This PR will conflict with <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load issue title\" data-id=\"339568029\" data-permission-text=\"Issue title is private\" data-url=\"https://github.com/pytorch/pytorch/issues/9277\" data-hovercard-type=\"pull_request\" data-hovercard-url=\"/pytorch/pytorch/pull/9277/hovercard\" href=\"https://github.com/pytorch/pytorch/pull/9277\">#9277</a> and I will merge with master after <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load issue title\" data-id=\"339568029\" data-permission-text=\"Issue title is private\" data-url=\"https://github.com/pytorch/pytorch/issues/9277\" data-hovercard-type=\"pull_request\" data-hovercard-url=\"/pytorch/pytorch/pull/9277/hovercard\" href=\"https://github.com/pytorch/pytorch/pull/9277\">#9277</a> goes in.</p>", "body_text": "@ezyang noticed that the CUDAStream files lived under ATen/ despite being CUDA-specific, and suggested porting them to ATen/cuda and exposing them with a new CUDAContext. This PR does that. It also:\n\nMoves ATen's CUDA-specific exceptions for ATen/cudnn to ATen/cuda for consistency\nMoves getDeviceProperties() and getCurrentCUDASparseHandle() to CUDAContext from CUDAHooks\n\nThe separation between CUDAContext and CUDAHooks is straightforward. Files that are in CUDA-only builds should rely on CUDAContext, while CUDAHooks is for runtime dispatch in files that can be included in CPU-only builds. A comment in CUDAContext.h explains this pattern. Acquiring device properties and CUDA-specific handles is something only done in builds with CUDA, for example, so I moved them from CUDAHooks to CUDAContext.\nThis PR will conflict with #9277 and I will merge with master after #9277 goes in.", "body": "@ezyang noticed that the CUDAStream files lived under ATen/ despite being CUDA-specific, and suggested porting them to ATen/cuda and exposing them with a new CUDAContext. This PR does that. It also:\r\n\r\n- Moves ATen's CUDA-specific exceptions for ATen/cudnn to ATen/cuda for consistency\r\n- Moves getDeviceProperties() and getCurrentCUDASparseHandle() to CUDAContext from CUDAHooks\r\n\r\nThe separation between CUDAContext and CUDAHooks is straightforward. Files that are in CUDA-only builds should rely on CUDAContext, while CUDAHooks is for runtime dispatch in files that can be included in CPU-only builds. A comment in CUDAContext.h explains this pattern. Acquiring device properties and CUDA-specific handles is something only done in builds with CUDA, for example, so I moved them from CUDAHooks to CUDAContext.\r\n\r\nThis PR will conflict with #9277 and I will merge with master after #9277 goes in. "}