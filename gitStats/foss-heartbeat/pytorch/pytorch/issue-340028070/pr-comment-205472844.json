{"url": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/205472844", "pull_request_review_id": 140739530, "id": 205472844, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwNTQ3Mjg0NA==", "diff_hunk": "@@ -172,14 +175,68 @@ struct Parser {\n       L.expect(end);\n     return List<T>::create(r, elements);\n   }\n+\n   Const parseConst() {\n     auto range = L.cur().range;\n     auto t = L.expect(TK_NUMBER);\n     return Const::create(t.range, t.text());\n   }\n+\n+  bool isCharCount(char c, const std::string& str, size_t start, int len) {\n+    //count checks from [start, start + len)\n+    return start + len <= str.size() && std::count(str.begin() + start, str.begin() + start + len, c) == len;\n+  }\n+\n+  std::string parseString(const SourceRange& range, const std::string &str) {\n+    int quote_len = isCharCount(str[0], str, 0, 3) ? 3 : 1;\n+    auto ret_str = str.substr(quote_len, str.size() - quote_len * 2);\n+    size_t pos = ret_str.find('\\\\');\n+    while(pos != std::string::npos) {\n+      //invariant: backslash cannot be the last character\n+      char c = ret_str[pos + 1];\n+      switch (ret_str[pos + 1]) {\n+        case '\\\\':\n+        case '\\'':\n+        case '\\\"':\n+        case '\\n':\n+          break;\n+        case 'a':\n+          c = '\\a';\n+          break;\n+        case 'b':\n+          c = '\\b';\n+          break;\n+        case 'f':\n+          c = '\\f';\n+          break;\n+        case 'n':\n+          c = '\\n';\n+          break;\n+        case 'v':\n+          c = '\\v';\n+          break;\n+        default:\n+          throw ErrorReport(range) << \" octal and hex escaped sequences are not supported\";\n+      }\n+      ret_str.erase(pos, 2);\n+      ret_str.insert(pos, 1, c);", "path": "torch/csrc/jit/script/parser.h", "position": null, "original_position": 58, "commit_id": "e905658d61f902d3c9b75bf08d2504eb7e7b3e6f", "original_commit_id": "928abfd14883a073b10a2ce6b5cdc4dae676993d", "user": {"login": "apaszke", "id": 4583066, "node_id": "MDQ6VXNlcjQ1ODMwNjY=", "avatar_url": "https://avatars3.githubusercontent.com/u/4583066?v=4", "gravatar_id": "", "url": "https://api.github.com/users/apaszke", "html_url": "https://github.com/apaszke", "followers_url": "https://api.github.com/users/apaszke/followers", "following_url": "https://api.github.com/users/apaszke/following{/other_user}", "gists_url": "https://api.github.com/users/apaszke/gists{/gist_id}", "starred_url": "https://api.github.com/users/apaszke/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/apaszke/subscriptions", "organizations_url": "https://api.github.com/users/apaszke/orgs", "repos_url": "https://api.github.com/users/apaszke/repos", "events_url": "https://api.github.com/users/apaszke/events{/privacy}", "received_events_url": "https://api.github.com/users/apaszke/received_events", "type": "User", "site_admin": false}, "body": "nit: `.replace`?", "created_at": "2018-07-26T14:12:00Z", "updated_at": "2018-11-23T15:48:13Z", "html_url": "https://github.com/pytorch/pytorch/pull/9324#discussion_r205472844", "pull_request_url": "https://api.github.com/repos/pytorch/pytorch/pulls/9324", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/205472844"}, "html": {"href": "https://github.com/pytorch/pytorch/pull/9324#discussion_r205472844"}, "pull_request": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/9324"}}, "body_html": "<p>nit: <code>.replace</code>?</p>", "body_text": "nit: .replace?"}