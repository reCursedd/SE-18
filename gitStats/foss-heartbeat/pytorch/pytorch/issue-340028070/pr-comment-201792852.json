{"url": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/201792852", "pull_request_review_id": 136352248, "id": 201792852, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwMTc5Mjg1Mg==", "diff_hunk": "@@ -182,11 +185,58 @@ struct Parser {\n       L.expect(end);\n     return List<T>::create(r, elements);\n   }\n+\n   Const parseConst() {\n     auto range = L.cur().range;\n     auto t = L.expect(TK_NUMBER);\n     return Const::create(t.range, t.text());\n   }\n+\n+  bool isCharCount(char c, const std::string& str, size_t start, int len) {\n+    //count checks from [start, start + len) \n+    return start + len <= str.size() && std::count(str.begin() + start, str.begin() + start + len, c) == len; \n+  }\n+\n+  std::string parseLexedString(const std::string &str, size_t start) {\n+    //invariants: input consists of a valid adjacent python strings and start is the index at beginning \n+    //of a string\n+    char quote = str[start];\n+    int quote_len = isCharCount(quote, str, start, 3) ? 3 : 1;\n+    size_t end = start + quote_len;\n+    while(!isCharCount(quote, str, end, quote_len)) {", "path": "torch/csrc/jit/script/parser.h", "position": null, "original_position": 32, "commit_id": "e905658d61f902d3c9b75bf08d2504eb7e7b3e6f", "original_commit_id": "b2decb1ecffef6120bd76460622caa004bf0bac0", "user": {"login": "zdevito", "id": 370202, "node_id": "MDQ6VXNlcjM3MDIwMg==", "avatar_url": "https://avatars0.githubusercontent.com/u/370202?v=4", "gravatar_id": "", "url": "https://api.github.com/users/zdevito", "html_url": "https://github.com/zdevito", "followers_url": "https://api.github.com/users/zdevito/followers", "following_url": "https://api.github.com/users/zdevito/following{/other_user}", "gists_url": "https://api.github.com/users/zdevito/gists{/gist_id}", "starred_url": "https://api.github.com/users/zdevito/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/zdevito/subscriptions", "organizations_url": "https://api.github.com/users/zdevito/orgs", "repos_url": "https://api.github.com/users/zdevito/repos", "events_url": "https://api.github.com/users/zdevito/events{/privacy}", "received_events_url": "https://api.github.com/users/zdevito/received_events", "type": "User", "site_admin": false}, "body": "If we parsed a single string, then you calculate the body without scanning it. Which will remove the redundant handling of backslashes here.", "created_at": "2018-07-11T18:18:20Z", "updated_at": "2018-11-23T15:47:10Z", "html_url": "https://github.com/pytorch/pytorch/pull/9324#discussion_r201792852", "pull_request_url": "https://api.github.com/repos/pytorch/pytorch/pulls/9324", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/201792852"}, "html": {"href": "https://github.com/pytorch/pytorch/pull/9324#discussion_r201792852"}, "pull_request": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/9324"}}, "body_html": "<p>If we parsed a single string, then you calculate the body without scanning it. Which will remove the redundant handling of backslashes here.</p>", "body_text": "If we parsed a single string, then you calculate the body without scanning it. Which will remove the redundant handling of backslashes here."}