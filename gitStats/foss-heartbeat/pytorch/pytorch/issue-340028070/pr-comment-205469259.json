{"url": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/205469259", "pull_request_review_id": 140739530, "id": 205469259, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwNTQ2OTI1OQ==", "diff_hunk": "@@ -295,6 +361,7 @@ struct IValue {\n     at::TensorImpl* as_tensor_impl;\n     at::Retainable* as_retainable;\n     double as_double;\n+    std::string as_string;", "path": "torch/csrc/jit/ivalue.h", "position": null, "original_position": 132, "commit_id": "e905658d61f902d3c9b75bf08d2504eb7e7b3e6f", "original_commit_id": "928abfd14883a073b10a2ce6b5cdc4dae676993d", "user": {"login": "apaszke", "id": 4583066, "node_id": "MDQ6VXNlcjQ1ODMwNjY=", "avatar_url": "https://avatars3.githubusercontent.com/u/4583066?v=4", "gravatar_id": "", "url": "https://api.github.com/users/apaszke", "html_url": "https://github.com/apaszke", "followers_url": "https://api.github.com/users/apaszke/followers", "following_url": "https://api.github.com/users/apaszke/following{/other_user}", "gists_url": "https://api.github.com/users/apaszke/gists{/gist_id}", "starred_url": "https://api.github.com/users/apaszke/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/apaszke/subscriptions", "organizations_url": "https://api.github.com/users/apaszke/orgs", "repos_url": "https://api.github.com/users/apaszke/repos", "events_url": "https://api.github.com/users/apaszke/events{/privacy}", "received_events_url": "https://api.github.com/users/apaszke/received_events", "type": "User", "site_admin": false}, "body": "I doubt we want to embed the string in here as is. This means that our small struct (16B) that was meant to represent lightweight values, suddenly gains a 32B member, which means it ends up having 40B. This is a nearly 3x growth in size, which we should avoid. Strings should be probably kept in the `as_retainable` field. They're not meant as a highly performant value anyway, and shouldn't be used too often.", "created_at": "2018-07-26T14:03:34Z", "updated_at": "2018-11-23T15:48:12Z", "html_url": "https://github.com/pytorch/pytorch/pull/9324#discussion_r205469259", "pull_request_url": "https://api.github.com/repos/pytorch/pytorch/pulls/9324", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/205469259"}, "html": {"href": "https://github.com/pytorch/pytorch/pull/9324#discussion_r205469259"}, "pull_request": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/9324"}}, "body_html": "<p>I doubt we want to embed the string in here as is. This means that our small struct (16B) that was meant to represent lightweight values, suddenly gains a 32B member, which means it ends up having 40B. This is a nearly 3x growth in size, which we should avoid. Strings should be probably kept in the <code>as_retainable</code> field. They're not meant as a highly performant value anyway, and shouldn't be used too often.</p>", "body_text": "I doubt we want to embed the string in here as is. This means that our small struct (16B) that was meant to represent lightweight values, suddenly gains a 32B member, which means it ends up having 40B. This is a nearly 3x growth in size, which we should avoid. Strings should be probably kept in the as_retainable field. They're not meant as a highly performant value anyway, and shouldn't be used too often."}