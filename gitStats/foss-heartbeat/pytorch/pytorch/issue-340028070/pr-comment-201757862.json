{"url": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/201757862", "pull_request_review_id": 136033207, "id": 201757862, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwMTc1Nzg2Mg==", "diff_hunk": "@@ -110,19 +110,29 @@ RegisterOperators reg({\n         prim::Print,\n         [](Node* node) {\n           size_t num_inputs = node->inputs().size();\n-          return [num_inputs](Stack& stack) {\n+          std::vector<std::string> strings = node->ss(Symbol::attr(\"strings\"));\n+          std::vector<int64_t> indices = node->is(Symbol::attr(\"string_indices\"));\n+          return [num_inputs, strings, indices](Stack & stack) {\n+            size_t ten_i = 0;\n+            size_t str_i = 0;\n+            auto inputs = last(stack, num_inputs);\n             bool first = true;\n-            for (at::Tensor i : last(stack, num_inputs)) {\n-              if (!first)\n-                std::cout << \" \";\n+            //indices are the indices to print string\n+            while(ten_i < inputs.size() || str_i < strings.size()) {\n+              if (!first) std::cout << \" \";\n               first = false;\n-              if (auto tensor_impl = dynamic_cast<at::TensorImpl*>(i.get())) {\n-                std::cout << at::Tensor(tensor_impl, true);\n-              } else if (!i.defined()) {\n-                std::cout << \"<undefined tensor>\";\n+              if (str_i < strings.size() && int(ten_i + str_i) == indices[str_i]) {", "path": "torch/csrc/jit/register_prim_ops.cpp", "position": null, "original_position": 23, "commit_id": "e905658d61f902d3c9b75bf08d2504eb7e7b3e6f", "original_commit_id": "b2decb1ecffef6120bd76460622caa004bf0bac0", "user": {"login": "apaszke", "id": 4583066, "node_id": "MDQ6VXNlcjQ1ODMwNjY=", "avatar_url": "https://avatars3.githubusercontent.com/u/4583066?v=4", "gravatar_id": "", "url": "https://api.github.com/users/apaszke", "html_url": "https://github.com/apaszke", "followers_url": "https://api.github.com/users/apaszke/followers", "following_url": "https://api.github.com/users/apaszke/following{/other_user}", "gists_url": "https://api.github.com/users/apaszke/gists{/gist_id}", "starred_url": "https://api.github.com/users/apaszke/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/apaszke/subscriptions", "organizations_url": "https://api.github.com/users/apaszke/orgs", "repos_url": "https://api.github.com/users/apaszke/repos", "events_url": "https://api.github.com/users/apaszke/events{/privacy}", "received_events_url": "https://api.github.com/users/apaszke/received_events", "type": "User", "site_admin": false}, "body": "can you `static_cast<int64_t>` instead?", "created_at": "2018-07-11T16:24:44Z", "updated_at": "2018-11-23T15:47:07Z", "html_url": "https://github.com/pytorch/pytorch/pull/9324#discussion_r201757862", "pull_request_url": "https://api.github.com/repos/pytorch/pytorch/pulls/9324", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/201757862"}, "html": {"href": "https://github.com/pytorch/pytorch/pull/9324#discussion_r201757862"}, "pull_request": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/9324"}}, "body_html": "<p>can you <code>static_cast&lt;int64_t&gt;</code> instead?</p>", "body_text": "can you static_cast<int64_t> instead?"}