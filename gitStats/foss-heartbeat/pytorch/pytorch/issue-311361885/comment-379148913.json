{"url": "https://api.github.com/repos/pytorch/pytorch/issues/comments/379148913", "html_url": "https://github.com/pytorch/pytorch/pull/6277#issuecomment-379148913", "issue_url": "https://api.github.com/repos/pytorch/pytorch/issues/6277", "id": 379148913, "node_id": "MDEyOklzc3VlQ29tbWVudDM3OTE0ODkxMw==", "user": {"login": "Swetko", "id": 11769173, "node_id": "MDQ6VXNlcjExNzY5MTcz", "avatar_url": "https://avatars3.githubusercontent.com/u/11769173?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Swetko", "html_url": "https://github.com/Swetko", "followers_url": "https://api.github.com/users/Swetko/followers", "following_url": "https://api.github.com/users/Swetko/following{/other_user}", "gists_url": "https://api.github.com/users/Swetko/gists{/gist_id}", "starred_url": "https://api.github.com/users/Swetko/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Swetko/subscriptions", "organizations_url": "https://api.github.com/users/Swetko/orgs", "repos_url": "https://api.github.com/users/Swetko/repos", "events_url": "https://api.github.com/users/Swetko/events{/privacy}", "received_events_url": "https://api.github.com/users/Swetko/received_events", "type": "User", "site_admin": false}, "created_at": "2018-04-06T05:03:46Z", "updated_at": "2018-04-06T05:03:46Z", "author_association": "CONTRIBUTOR", "body_html": "<p>I'm sorry. I got confused and had to delete that branch and recreate the pull request.<br>\nWhat is gained by the using raw pointers is that the function being called does not need to have ownership of the objects. It just does an operation / inspection of them. It makes the interface and intent seem cleaner to me that way.</p>\n<p>As far as I understand,  unique_ptr   is used when you want to hold on to the object till you get out of scope/destroyed.  Shared_ptr is when multiple objects  want to hold on to an object.  A function that is performing an operation on an object does not need to hold on to the objects, provided they are being held by someone else. Anyways, either way is fine, but I thought it's cleaner intent with raw pointers.</p>", "body_text": "I'm sorry. I got confused and had to delete that branch and recreate the pull request.\nWhat is gained by the using raw pointers is that the function being called does not need to have ownership of the objects. It just does an operation / inspection of them. It makes the interface and intent seem cleaner to me that way.\nAs far as I understand,  unique_ptr   is used when you want to hold on to the object till you get out of scope/destroyed.  Shared_ptr is when multiple objects  want to hold on to an object.  A function that is performing an operation on an object does not need to hold on to the objects, provided they are being held by someone else. Anyways, either way is fine, but I thought it's cleaner intent with raw pointers.", "body": "I'm sorry. I got confused and had to delete that branch and recreate the pull request.\r\nWhat is gained by the using raw pointers is that the function being called does not need to have ownership of the objects. It just does an operation / inspection of them. It makes the interface and intent seem cleaner to me that way. \r\n\r\nAs far as I understand,  unique_ptr   is used when you want to hold on to the object till you get out of scope/destroyed.  Shared_ptr is when multiple objects  want to hold on to an object.  A function that is performing an operation on an object does not need to hold on to the objects, provided they are being held by someone else. Anyways, either way is fine, but I thought it's cleaner intent with raw pointers. "}