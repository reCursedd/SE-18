{"url": "https://api.github.com/repos/pytorch/pytorch/issues/comments/404352305", "html_url": "https://github.com/pytorch/pytorch/issues/678#issuecomment-404352305", "issue_url": "https://api.github.com/repos/pytorch/pytorch/issues/678", "id": 404352305, "node_id": "MDEyOklzc3VlQ29tbWVudDQwNDM1MjMwNQ==", "user": {"login": "Balandat", "id": 1605878, "node_id": "MDQ6VXNlcjE2MDU4Nzg=", "avatar_url": "https://avatars2.githubusercontent.com/u/1605878?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Balandat", "html_url": "https://github.com/Balandat", "followers_url": "https://api.github.com/users/Balandat/followers", "following_url": "https://api.github.com/users/Balandat/following{/other_user}", "gists_url": "https://api.github.com/users/Balandat/gists{/gist_id}", "starred_url": "https://api.github.com/users/Balandat/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Balandat/subscriptions", "organizations_url": "https://api.github.com/users/Balandat/orgs", "repos_url": "https://api.github.com/users/Balandat/repos", "events_url": "https://api.github.com/users/Balandat/events{/privacy}", "received_events_url": "https://api.github.com/users/Balandat/received_events", "type": "User", "site_admin": false}, "created_at": "2018-07-12T00:32:41Z", "updated_at": "2018-07-12T00:55:29Z", "author_association": "NONE", "body_html": "<p>Looks like there currently is no implementation of the (log-) multivariate Gamma function? That would be useful for implementing Wishart / inverse Wishart distributions. Any plans to add this?</p>\n<p>The straightforward way to do this would be to reduce it to multiple <code>lgamma</code> evaluations using the identity 35.3.4 from <a href=\"https://dlmf.nist.gov/35.3\" rel=\"nofollow\">https://dlmf.nist.gov/35.3</a>. For a float <code>a</code> in python this is just</p>\n<pre><code>def log_mv_gamma(p, a):\n    C = p * (p - 1) / 4 * math.log(math.pi)\n    return C + torch.lgamma(a - 0.5 * torch.arange(p, dtype=torch.float)).sum()\n</code></pre>\n<p>I'm not sure how numerically stable that is, but it doesn't look too bad at first glance.</p>\n<p>cc <a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=648532\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/fritzo\">@fritzo</a></p>", "body_text": "Looks like there currently is no implementation of the (log-) multivariate Gamma function? That would be useful for implementing Wishart / inverse Wishart distributions. Any plans to add this?\nThe straightforward way to do this would be to reduce it to multiple lgamma evaluations using the identity 35.3.4 from https://dlmf.nist.gov/35.3. For a float a in python this is just\ndef log_mv_gamma(p, a):\n    C = p * (p - 1) / 4 * math.log(math.pi)\n    return C + torch.lgamma(a - 0.5 * torch.arange(p, dtype=torch.float)).sum()\n\nI'm not sure how numerically stable that is, but it doesn't look too bad at first glance.\ncc @fritzo", "body": "Looks like there currently is no implementation of the (log-) multivariate Gamma function? That would be useful for implementing Wishart / inverse Wishart distributions. Any plans to add this?\r\n\r\nThe straightforward way to do this would be to reduce it to multiple `lgamma` evaluations using the identity 35.3.4 from https://dlmf.nist.gov/35.3. For a float `a` in python this is just \r\n```\r\ndef log_mv_gamma(p, a):\r\n    C = p * (p - 1) / 4 * math.log(math.pi)\r\n    return C + torch.lgamma(a - 0.5 * torch.arange(p, dtype=torch.float)).sum()\r\n```\r\nI'm not sure how numerically stable that is, but it doesn't look too bad at first glance.\r\n\r\ncc @fritzo "}