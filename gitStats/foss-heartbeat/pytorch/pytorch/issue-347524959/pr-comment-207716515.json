{"url": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/207716515", "pull_request_review_id": 143391052, "id": 207716515, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwNzcxNjUxNQ==", "diff_hunk": "@@ -14,6 +14,128 @@ void THTensor_free(THTensor *self)\n   self->release();\n }\n \n+void THTensor_setStorage(THTensor *self, THStorage *storage_, ptrdiff_t storageOffset_, at::IntList size_, at::IntList stride_) {\n+  if(size_.data() && stride_.data())\n+    THArgCheck(size_.size() == stride_.size(), 5, \"inconsistent size/stride sizes\");\n+\n+  AT_CHECK(size_.data(), \"size must not be null\");\n+#ifdef DEBUG\n+  THAssert(size_.size() <= INT_MAX);\n+#endif\n+  THTensor_setStorageNd(self,\n+                        storage_,\n+                        storageOffset_,\n+                        size_.size(),\n+                        size_.data(),\n+                        stride_.data());\n+}\n+\n+void THTensor_setStorageNd(THTensor *self, THStorage *storage, ptrdiff_t storageOffset, int nDimension, const int64_t *size, const int64_t *stride)\n+{\n+  /* storage */\n+  if(THTensor_getStoragePtr(self) != storage)\n+  {\n+    if (!THTensor_getStoragePtr(self)) {\n+      THError(\"Tensor: invalid null storage\");", "path": "aten/src/TH/THTensor.cpp", "position": 26, "original_position": 26, "commit_id": "20882fc9f39d99d5557d018c43607ef5ced5e1d8", "original_commit_id": "20882fc9f39d99d5557d018c43607ef5ced5e1d8", "user": {"login": "ezyang", "id": 13564, "node_id": "MDQ6VXNlcjEzNTY0", "avatar_url": "https://avatars0.githubusercontent.com/u/13564?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ezyang", "html_url": "https://github.com/ezyang", "followers_url": "https://api.github.com/users/ezyang/followers", "following_url": "https://api.github.com/users/ezyang/following{/other_user}", "gists_url": "https://api.github.com/users/ezyang/gists{/gist_id}", "starred_url": "https://api.github.com/users/ezyang/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ezyang/subscriptions", "organizations_url": "https://api.github.com/users/ezyang/orgs", "repos_url": "https://api.github.com/users/ezyang/repos", "events_url": "https://api.github.com/users/ezyang/events{/privacy}", "received_events_url": "https://api.github.com/users/ezyang/received_events", "type": "User", "site_admin": false}, "body": "Apropos of nothing... \"Call GetMutableData first!\"", "created_at": "2018-08-04T18:53:03Z", "updated_at": "2018-11-23T15:48:46Z", "html_url": "https://github.com/pytorch/pytorch/pull/10219#discussion_r207716515", "pull_request_url": "https://api.github.com/repos/pytorch/pytorch/pulls/10219", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/207716515"}, "html": {"href": "https://github.com/pytorch/pytorch/pull/10219#discussion_r207716515"}, "pull_request": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/10219"}}, "body_html": "<p>Apropos of nothing... \"Call GetMutableData first!\"</p>", "body_text": "Apropos of nothing... \"Call GetMutableData first!\""}