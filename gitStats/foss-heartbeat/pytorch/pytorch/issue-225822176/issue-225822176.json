{"url": "https://api.github.com/repos/pytorch/pytorch/issues/1449", "repository_url": "https://api.github.com/repos/pytorch/pytorch", "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/1449/labels{/name}", "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/1449/comments", "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/1449/events", "html_url": "https://github.com/pytorch/pytorch/issues/1449", "id": 225822176, "node_id": "MDU6SXNzdWUyMjU4MjIxNzY=", "number": 1449, "title": "coalesce for sparse tensors causes a memory leak", "user": {"login": "ikostrikov", "id": 1212494, "node_id": "MDQ6VXNlcjEyMTI0OTQ=", "avatar_url": "https://avatars3.githubusercontent.com/u/1212494?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ikostrikov", "html_url": "https://github.com/ikostrikov", "followers_url": "https://api.github.com/users/ikostrikov/followers", "following_url": "https://api.github.com/users/ikostrikov/following{/other_user}", "gists_url": "https://api.github.com/users/ikostrikov/gists{/gist_id}", "starred_url": "https://api.github.com/users/ikostrikov/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ikostrikov/subscriptions", "organizations_url": "https://api.github.com/users/ikostrikov/orgs", "repos_url": "https://api.github.com/users/ikostrikov/repos", "events_url": "https://api.github.com/users/ikostrikov/events{/privacy}", "received_events_url": "https://api.github.com/users/ikostrikov/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-05-02T21:08:59Z", "updated_at": "2017-05-03T17:29:39Z", "closed_at": "2017-05-03T17:29:39Z", "author_association": "NONE", "body_html": "<p>To reproduce the problem:</p>\n<div class=\"highlight highlight-source-python\"><pre><span class=\"pl-k\">import</span> torch\n\ni <span class=\"pl-k\">=</span> torch.LongTensor([\n            [<span class=\"pl-c1\">0</span>, <span class=\"pl-c1\">1</span>, <span class=\"pl-c1\">2</span>, <span class=\"pl-c1\">2</span>],\n            [<span class=\"pl-c1\">0</span>, <span class=\"pl-c1\">0</span>, <span class=\"pl-c1\">0</span>, <span class=\"pl-c1\">3</span>],\n])\nv <span class=\"pl-k\">=</span> torch.FloatTensor([[<span class=\"pl-c1\">2</span>, <span class=\"pl-c1\">3</span>], [<span class=\"pl-c1\">1</span>, <span class=\"pl-c1\">2</span>], [<span class=\"pl-c1\">3</span>, <span class=\"pl-c1\">4</span>], [<span class=\"pl-c1\">4</span>, <span class=\"pl-c1\">5</span>]])\nx <span class=\"pl-k\">=</span> torch.sparse.FloatTensor(i, v, torch.Size([<span class=\"pl-c1\">3</span>, <span class=\"pl-c1\">4</span>, <span class=\"pl-c1\">2</span>]))\n\nx <span class=\"pl-k\">=</span> x.cuda()\n\n<span class=\"pl-k\">while</span> <span class=\"pl-c1\">True</span>:\n    x <span class=\"pl-k\">=</span> x.transpose(<span class=\"pl-c1\">0</span>, <span class=\"pl-c1\">1</span>)\n    x <span class=\"pl-k\">=</span> x.coalesce()</pre></div>", "body_text": "To reproduce the problem:\nimport torch\n\ni = torch.LongTensor([\n            [0, 1, 2, 2],\n            [0, 0, 0, 3],\n])\nv = torch.FloatTensor([[2, 3], [1, 2], [3, 4], [4, 5]])\nx = torch.sparse.FloatTensor(i, v, torch.Size([3, 4, 2]))\n\nx = x.cuda()\n\nwhile True:\n    x = x.transpose(0, 1)\n    x = x.coalesce()", "body": " To reproduce the problem:\r\n\r\n```python\r\nimport torch\r\n\r\ni = torch.LongTensor([\r\n            [0, 1, 2, 2],\r\n            [0, 0, 0, 3],\r\n])\r\nv = torch.FloatTensor([[2, 3], [1, 2], [3, 4], [4, 5]])\r\nx = torch.sparse.FloatTensor(i, v, torch.Size([3, 4, 2]))\r\n\r\nx = x.cuda()\r\n\r\nwhile True:\r\n    x = x.transpose(0, 1)\r\n    x = x.coalesce()\r\n```"}