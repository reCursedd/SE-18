{"url": "https://api.github.com/repos/pytorch/pytorch/issues/4783", "repository_url": "https://api.github.com/repos/pytorch/pytorch", "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/4783/labels{/name}", "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/4783/comments", "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/4783/events", "html_url": "https://github.com/pytorch/pytorch/pull/4783", "id": 290552887, "node_id": "MDExOlB1bGxSZXF1ZXN0MTY0MzcxMTA5", "number": 4783, "title": "Fix squeeze() backward in edge case", "user": {"login": "zou3519", "id": 5652049, "node_id": "MDQ6VXNlcjU2NTIwNDk=", "avatar_url": "https://avatars3.githubusercontent.com/u/5652049?v=4", "gravatar_id": "", "url": "https://api.github.com/users/zou3519", "html_url": "https://github.com/zou3519", "followers_url": "https://api.github.com/users/zou3519/followers", "following_url": "https://api.github.com/users/zou3519/following{/other_user}", "gists_url": "https://api.github.com/users/zou3519/gists{/gist_id}", "starred_url": "https://api.github.com/users/zou3519/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/zou3519/subscriptions", "organizations_url": "https://api.github.com/users/zou3519/orgs", "repos_url": "https://api.github.com/users/zou3519/repos", "events_url": "https://api.github.com/users/zou3519/events{/privacy}", "received_events_url": "https://api.github.com/users/zou3519/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2018-01-22T17:39:04Z", "updated_at": "2018-11-23T15:38:26Z", "closed_at": "2018-01-22T21:36:03Z", "author_association": "CONTRIBUTOR", "pull_request": {"url": "https://api.github.com/repos/pytorch/pytorch/pulls/4783", "html_url": "https://github.com/pytorch/pytorch/pull/4783", "diff_url": "https://github.com/pytorch/pytorch/pull/4783.diff", "patch_url": "https://github.com/pytorch/pytorch/pull/4783.patch"}, "body_html": "<p><span class=\"issue-keyword tooltipped tooltipped-se\" aria-label=\"This pull request closes issue #4778.\">Fixes</span> <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load issue title\" data-id=\"290467299\" data-permission-text=\"Issue title is private\" data-url=\"https://github.com/pytorch/pytorch/issues/4778\" data-hovercard-type=\"issue\" data-hovercard-url=\"/pytorch/pytorch/issues/4778/hovercard\" href=\"https://github.com/pytorch/pytorch/issues/4778\">#4778</a></p>\n<p>There was a bug where if one calls <code>tensor.squeeze().backward()</code> where <code>tensor</code> has size <code>(1, 1)</code>, <code>tensor.grad</code> doesn't match the shape of <code>tensor</code>. This is because the result of <code>tensor.squeeze()</code> has size <code>(1,)</code>, and <code>squeeze()</code>'s backwards will <code>unsqueeze</code> the grad a number of times equal to the number of dimensions in <code>tensor</code> that have size 1.</p>\n<p>cc <a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=3768583\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/gchanan\">@gchanan</a> -- the code should work with both scalars enabled and disabled because there's a check for <code>dim() == 1</code>.</p>\n<h3>Test Plan</h3>\n<p>New unit test for this case</p>", "body_text": "Fixes #4778\nThere was a bug where if one calls tensor.squeeze().backward() where tensor has size (1, 1), tensor.grad doesn't match the shape of tensor. This is because the result of tensor.squeeze() has size (1,), and squeeze()'s backwards will unsqueeze the grad a number of times equal to the number of dimensions in tensor that have size 1.\ncc @gchanan -- the code should work with both scalars enabled and disabled because there's a check for dim() == 1.\nTest Plan\nNew unit test for this case", "body": "Fixes #4778 \r\n\r\nThere was a bug where if one calls `tensor.squeeze().backward()` where `tensor` has size `(1, 1)`, `tensor.grad` doesn't match the shape of `tensor`. This is because the result of `tensor.squeeze()` has size `(1,)`, and `squeeze()`'s backwards will `unsqueeze` the grad a number of times equal to the number of dimensions in `tensor` that have size 1.\r\n\r\ncc @gchanan -- the code should work with both scalars enabled and disabled because there's a check for `dim() == 1`.\r\n\r\n### Test Plan\r\nNew unit test for this case"}