{"url": "https://api.github.com/repos/pytorch/pytorch/issues/comments/424758131", "html_url": "https://github.com/pytorch/pytorch/issues/7318#issuecomment-424758131", "issue_url": "https://api.github.com/repos/pytorch/pytorch/issues/7318", "id": 424758131, "node_id": "MDEyOklzc3VlQ29tbWVudDQyNDc1ODEzMQ==", "user": {"login": "t-vi", "id": 20787943, "node_id": "MDQ6VXNlcjIwNzg3OTQz", "avatar_url": "https://avatars2.githubusercontent.com/u/20787943?v=4", "gravatar_id": "", "url": "https://api.github.com/users/t-vi", "html_url": "https://github.com/t-vi", "followers_url": "https://api.github.com/users/t-vi/followers", "following_url": "https://api.github.com/users/t-vi/following{/other_user}", "gists_url": "https://api.github.com/users/t-vi/gists{/gist_id}", "starred_url": "https://api.github.com/users/t-vi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/t-vi/subscriptions", "organizations_url": "https://api.github.com/users/t-vi/orgs", "repos_url": "https://api.github.com/users/t-vi/repos", "events_url": "https://api.github.com/users/t-vi/events{/privacy}", "received_events_url": "https://api.github.com/users/t-vi/received_events", "type": "User", "site_admin": false}, "created_at": "2018-09-26T15:25:03Z", "updated_at": "2018-09-27T11:56:08Z", "author_association": "CONTRIBUTOR", "body_html": "<p>For some reason or other, just having</p>\n<pre><code>class Tensor: ...\n\n@overload\ndef randn(size: Tuple[int, ...], *, out: Optional[torch.Tensor], dtype: dtype=None, layout: layout=torch.strided, device: Union[device, str, None]=None, requires_grad: bool=False) -&gt; Tensor: ...\n</code></pre>\n<p>in the <code>__init__.pyi</code> does not seem to allow PyCharm to infer that after <code>a = randn((1,2))</code>, <code>a</code> is of class <code>torch.Tensor</code>. :(<br>\n(I actually have annotations in the class, too, but they are only used if I spell out the annotation <code>a : torch.Tensor = ...</code>)</p>\n<p>I posted the pyi here, if you want to try: <a href=\"https://gist.github.com/t-vi/0d0ae013072f96f50fa11fbc2287e33b\">https://gist.github.com/t-vi/0d0ae013072f96f50fa11fbc2287e33b</a></p>\n<p>Again, if you have an idea why PyCharm doesn't appear to identify the return type, I would be most grateful if you shared it.</p>", "body_text": "For some reason or other, just having\nclass Tensor: ...\n\n@overload\ndef randn(size: Tuple[int, ...], *, out: Optional[torch.Tensor], dtype: dtype=None, layout: layout=torch.strided, device: Union[device, str, None]=None, requires_grad: bool=False) -> Tensor: ...\n\nin the __init__.pyi does not seem to allow PyCharm to infer that after a = randn((1,2)), a is of class torch.Tensor. :(\n(I actually have annotations in the class, too, but they are only used if I spell out the annotation a : torch.Tensor = ...)\nI posted the pyi here, if you want to try: https://gist.github.com/t-vi/0d0ae013072f96f50fa11fbc2287e33b\nAgain, if you have an idea why PyCharm doesn't appear to identify the return type, I would be most grateful if you shared it.", "body": "For some reason or other, just having\r\n```\r\nclass Tensor: ...\r\n\r\n@overload\r\ndef randn(size: Tuple[int, ...], *, out: Optional[torch.Tensor], dtype: dtype=None, layout: layout=torch.strided, device: Union[device, str, None]=None, requires_grad: bool=False) -> Tensor: ...\r\n```\r\nin the `__init__.pyi` does not seem to allow PyCharm to infer that after `a = randn((1,2))`, `a` is of class `torch.Tensor`. :(\r\n(I actually have annotations in the class, too, but they are only used if I spell out the annotation `a : torch.Tensor = ...`)\r\n\r\nI posted the pyi here, if you want to try: https://gist.github.com/t-vi/0d0ae013072f96f50fa11fbc2287e33b\r\n\r\nAgain, if you have an idea why PyCharm doesn't appear to identify the return type, I would be most grateful if you shared it."}