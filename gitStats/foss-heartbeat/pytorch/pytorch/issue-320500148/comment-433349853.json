{"url": "https://api.github.com/repos/pytorch/pytorch/issues/comments/433349853", "html_url": "https://github.com/pytorch/pytorch/issues/7318#issuecomment-433349853", "issue_url": "https://api.github.com/repos/pytorch/pytorch/issues/7318", "id": 433349853, "node_id": "MDEyOklzc3VlQ29tbWVudDQzMzM0OTg1Mw==", "user": {"login": "t-vi", "id": 20787943, "node_id": "MDQ6VXNlcjIwNzg3OTQz", "avatar_url": "https://avatars2.githubusercontent.com/u/20787943?v=4", "gravatar_id": "", "url": "https://api.github.com/users/t-vi", "html_url": "https://github.com/t-vi", "followers_url": "https://api.github.com/users/t-vi/followers", "following_url": "https://api.github.com/users/t-vi/following{/other_user}", "gists_url": "https://api.github.com/users/t-vi/gists{/gist_id}", "starred_url": "https://api.github.com/users/t-vi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/t-vi/subscriptions", "organizations_url": "https://api.github.com/users/t-vi/orgs", "repos_url": "https://api.github.com/users/t-vi/repos", "events_url": "https://api.github.com/users/t-vi/events{/privacy}", "received_events_url": "https://api.github.com/users/t-vi/received_events", "type": "User", "site_admin": false}, "created_at": "2018-10-26T09:38:08Z", "updated_at": "2018-10-26T09:38:08Z", "author_association": "CONTRIBUTOR", "body_html": "<p>Well, IPython uses dynamic introspection, and that always works (it only works <em>after</em> you have created the objects, so you'll be able to complete <code>mytensor.a</code> but not <code>mytensor.abs().m</code>, which you can with type hints.<br>\nAs far as I understand both VSCode and Jupyter also use Jedi. Stubs (.pyi files) are the \"standard\" way of adding type information on top of existing modules, but they not yet supported as widely as one might like (and there are still corner cases, e.g. you cannot express that you can pass an ellipsis (\"...\") to indexing functions). The right course of action is to hop over to Jedi and add type hint stub support (<a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load issue title\" data-id=\"203124600\" data-permission-text=\"Issue title is private\" data-url=\"https://github.com/davidhalter/jedi/issues/839\" data-hovercard-type=\"issue\" data-hovercard-url=\"/davidhalter/jedi/issues/839/hovercard\" href=\"https://github.com/davidhalter/jedi/issues/839\">davidhalter/jedi#839</a>). Your chance to invest your time or money to make your toolchain better!</p>", "body_text": "Well, IPython uses dynamic introspection, and that always works (it only works after you have created the objects, so you'll be able to complete mytensor.a but not mytensor.abs().m, which you can with type hints.\nAs far as I understand both VSCode and Jupyter also use Jedi. Stubs (.pyi files) are the \"standard\" way of adding type information on top of existing modules, but they not yet supported as widely as one might like (and there are still corner cases, e.g. you cannot express that you can pass an ellipsis (\"...\") to indexing functions). The right course of action is to hop over to Jedi and add type hint stub support (davidhalter/jedi#839). Your chance to invest your time or money to make your toolchain better!", "body": "Well, IPython uses dynamic introspection, and that always works (it only works *after* you have created the objects, so you'll be able to complete `mytensor.a` but not `mytensor.abs().m`, which you can with type hints. \r\nAs far as I understand both VSCode and Jupyter also use Jedi. Stubs (.pyi files) are the \"standard\" way of adding type information on top of existing modules, but they not yet supported as widely as one might like (and there are still corner cases, e.g. you cannot express that you can pass an ellipsis (\"...\") to indexing functions). The right course of action is to hop over to Jedi and add type hint stub support (https://github.com/davidhalter/jedi/issues/839). Your chance to invest your time or money to make your toolchain better!"}