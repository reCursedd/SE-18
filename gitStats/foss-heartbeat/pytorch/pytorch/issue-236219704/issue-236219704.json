{"url": "https://api.github.com/repos/pytorch/pytorch/issues/1814", "repository_url": "https://api.github.com/repos/pytorch/pytorch", "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/1814/labels{/name}", "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/1814/comments", "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/1814/events", "html_url": "https://github.com/pytorch/pytorch/issues/1814", "id": 236219704, "node_id": "MDU6SXNzdWUyMzYyMTk3MDQ=", "number": 1814, "title": "inplace function tests in test_autograd don't test inplace in the presence of other default args", "user": {"login": "gchanan", "id": 3768583, "node_id": "MDQ6VXNlcjM3Njg1ODM=", "avatar_url": "https://avatars2.githubusercontent.com/u/3768583?v=4", "gravatar_id": "", "url": "https://api.github.com/users/gchanan", "html_url": "https://github.com/gchanan", "followers_url": "https://api.github.com/users/gchanan/followers", "following_url": "https://api.github.com/users/gchanan/following{/other_user}", "gists_url": "https://api.github.com/users/gchanan/gists{/gist_id}", "starred_url": "https://api.github.com/users/gchanan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/gchanan/subscriptions", "organizations_url": "https://api.github.com/users/gchanan/orgs", "repos_url": "https://api.github.com/users/gchanan/repos", "events_url": "https://api.github.com/users/gchanan/events{/privacy}", "received_events_url": "https://api.github.com/users/gchanan/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 424131847, "node_id": "MDU6TGFiZWw0MjQxMzE4NDc=", "url": "https://api.github.com/repos/pytorch/pytorch/labels/bug", "name": "bug", "color": "b60205", "default": true}, {"id": 443483881, "node_id": "MDU6TGFiZWw0NDM0ODM4ODE=", "url": "https://api.github.com/repos/pytorch/pytorch/labels/todo", "name": "todo", "color": "c2e0c6", "default": false}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2017-06-15T14:57:44Z", "updated_at": "2017-07-13T07:10:31Z", "closed_at": null, "author_association": "CONTRIBUTOR", "body_html": "<p>The code adds a \"True\" to the end of the arguments, but this doesn't work if there are other default arguments (<div class=\"border rounded-1 my-2\">\n  <div class=\"f6 px-3 py-2 lh-condensed border-bottom bg-gray-light\">\n    <p class=\"mb-0 text-bold\">\n      <a href=\"https://github.com/pytorch/pytorch/blob/909f31764faf65c80f4d8eaeae8a12c67eb24c17/test/test_autograd.py#L1697-L1698\">pytorch/test/test_autograd.py</a>\n    </p>\n    <p class=\"mb-0 text-gray-light\">\n        Lines 1697 to 1698\n      in\n      <a data-pjax=\"true\" class=\"commit-tease-sha\" href=\"/pytorch/pytorch/commit/909f31764faf65c80f4d8eaeae8a12c67eb24c17\">909f317</a>\n    </p>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper blob-wrapper-embedded data\">\n    <table class=\"highlight tab-size mb-0 js-file-line-container\" data-tab-size=\"8\">\n\n        <tbody><tr class=\"border-0\">\n          <td id=\"L1697\" class=\"blob-num border-0 px-3 py-0 bg-white js-line-number\" data-line-number=\"1697\"></td>\n          <td id=\"LC1697\" class=\"blob-code border-0 px-3 py-0 bg-white blob-code-inner js-file-line\"> args <span class=\"pl-k\">=</span> <span class=\"pl-c1\">input</span> <span class=\"pl-k\">+</span> (<span class=\"pl-c1\">True</span>,)  <span class=\"pl-c\"><span class=\"pl-c\">#</span> for Python 2.7</span> </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L1698\" class=\"blob-num border-0 px-3 py-0 bg-white js-line-number\" data-line-number=\"1698\"></td>\n          <td id=\"LC1698\" class=\"blob-code border-0 px-3 py-0 bg-white blob-code-inner js-file-line\"> <span class=\"pl-k\">return</span> <span class=\"pl-c1\">cls</span>.apply(<span class=\"pl-k\">*</span>args) </td>\n        </tr>\n    </tbody></table>\n  </div>\n</div>\n).</p>\n<p>For example, TestAutograd.test_AddcmulFunction passes \"True\" for \"scale\" (and somehow this passes?).</p>\n<p>The \"method\" tests do the right thing for the inplace tests, however.  Apply doesn't currently take kwargs, so to fix this, we'd have to change that to fix this I think.</p>\n<p>I'm sort of confused on why we want both function and method tests in test_autograd, though.  They test similar things (as shown, they both test inplace), although currently only the function tests call gradcheck.  Since users only really interact with the methods (which in turn call the functions anyway), wouldn't it be simpler to just make everything a method test?  I'm probably missing something obvious, here.</p>", "body_text": "The code adds a \"True\" to the end of the arguments, but this doesn't work if there are other default arguments (\n  \n    \n      pytorch/test/test_autograd.py\n    \n    \n        Lines 1697 to 1698\n      in\n      909f317\n    \n    \n    \n    \n\n        \n          \n           args = input + (True,)  # for Python 2.7 \n        \n\n        \n          \n           return cls.apply(*args) \n        \n    \n  \n\n).\nFor example, TestAutograd.test_AddcmulFunction passes \"True\" for \"scale\" (and somehow this passes?).\nThe \"method\" tests do the right thing for the inplace tests, however.  Apply doesn't currently take kwargs, so to fix this, we'd have to change that to fix this I think.\nI'm sort of confused on why we want both function and method tests in test_autograd, though.  They test similar things (as shown, they both test inplace), although currently only the function tests call gradcheck.  Since users only really interact with the methods (which in turn call the functions anyway), wouldn't it be simpler to just make everything a method test?  I'm probably missing something obvious, here.", "body": "The code adds a \"True\" to the end of the arguments, but this doesn't work if there are other default arguments (https://github.com/pytorch/pytorch/blob/909f31764faf65c80f4d8eaeae8a12c67eb24c17/test/test_autograd.py#L1697-L1698).\r\n\r\nFor example, TestAutograd.test_AddcmulFunction passes \"True\" for \"scale\" (and somehow this passes?).\r\n\r\nThe \"method\" tests do the right thing for the inplace tests, however.  Apply doesn't currently take kwargs, so to fix this, we'd have to change that to fix this I think.\r\n\r\nI'm sort of confused on why we want both function and method tests in test_autograd, though.  They test similar things (as shown, they both test inplace), although currently only the function tests call gradcheck.  Since users only really interact with the methods (which in turn call the functions anyway), wouldn't it be simpler to just make everything a method test?  I'm probably missing something obvious, here."}