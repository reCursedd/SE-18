{"url": "https://api.github.com/repos/pytorch/pytorch/issues/5299", "repository_url": "https://api.github.com/repos/pytorch/pytorch", "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/5299/labels{/name}", "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/5299/comments", "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/5299/events", "html_url": "https://github.com/pytorch/pytorch/pull/5299", "id": 298277066, "node_id": "MDExOlB1bGxSZXF1ZXN0MTY5OTYxODc2", "number": 5299, "title": "Raise an error if target is out-of-bounds in ClassNLLCriterion", "user": {"login": "elanmart", "id": 10772830, "node_id": "MDQ6VXNlcjEwNzcyODMw", "avatar_url": "https://avatars3.githubusercontent.com/u/10772830?v=4", "gravatar_id": "", "url": "https://api.github.com/users/elanmart", "html_url": "https://github.com/elanmart", "followers_url": "https://api.github.com/users/elanmart/followers", "following_url": "https://api.github.com/users/elanmart/following{/other_user}", "gists_url": "https://api.github.com/users/elanmart/gists{/gist_id}", "starred_url": "https://api.github.com/users/elanmart/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/elanmart/subscriptions", "organizations_url": "https://api.github.com/users/elanmart/orgs", "repos_url": "https://api.github.com/users/elanmart/repos", "events_url": "https://api.github.com/users/elanmart/events{/privacy}", "received_events_url": "https://api.github.com/users/elanmart/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-02-19T13:35:11Z", "updated_at": "2018-02-19T16:32:09Z", "closed_at": "2018-02-19T16:18:53Z", "author_association": "CONTRIBUTOR", "pull_request": {"url": "https://api.github.com/repos/pytorch/pytorch/pulls/5299", "html_url": "https://github.com/pytorch/pytorch/pull/5299", "diff_url": "https://github.com/pytorch/pytorch/pull/5299.diff", "patch_url": "https://github.com/pytorch/pytorch/pull/5299.patch"}, "body_html": "<p>This PR is supposed to <span class=\"issue-keyword tooltipped tooltipped-se\" aria-label=\"This pull request closes issue #5296.\">fix</span> <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load issue title\" data-id=\"298190009\" data-permission-text=\"Issue title is private\" data-url=\"https://github.com/pytorch/pytorch/issues/5296\" data-hovercard-type=\"issue\" data-hovercard-url=\"/pytorch/pytorch/issues/5296/hovercard\" href=\"https://github.com/pytorch/pytorch/issues/5296\">#5296</a></p>\n<p>New behaviour:</p>\n<div class=\"highlight highlight-source-python\"><pre><span class=\"pl-k\">&gt;&gt;</span><span class=\"pl-k\">&gt;</span> <span class=\"pl-k\">import</span> torch\n<span class=\"pl-k\">&gt;&gt;</span><span class=\"pl-k\">&gt;</span> <span class=\"pl-k\">from</span> torch.autograd <span class=\"pl-k\">import</span> Variable\n<span class=\"pl-k\">&gt;&gt;</span><span class=\"pl-k\">&gt;</span> <span class=\"pl-k\">import</span> torch.nn.functional <span class=\"pl-k\">as</span> F\n\n<span class=\"pl-k\">&gt;&gt;</span><span class=\"pl-k\">&gt;</span> p <span class=\"pl-k\">=</span> Variable(torch.randn(<span class=\"pl-c1\">3</span>, <span class=\"pl-c1\">3</span>), <span class=\"pl-v\">requires_grad</span><span class=\"pl-k\">=</span><span class=\"pl-c1\">True</span>)\n<span class=\"pl-k\">&gt;&gt;</span><span class=\"pl-k\">&gt;</span> y <span class=\"pl-k\">=</span> Variable(torch.LongTensor([<span class=\"pl-c1\">99</span>, <span class=\"pl-c1\">100</span>, <span class=\"pl-c1\">101</span>]))\n<span class=\"pl-k\">&gt;&gt;</span><span class=\"pl-k\">&gt;</span> l <span class=\"pl-k\">=</span> F.cross_entropy(p, y, <span class=\"pl-v\">reduce</span><span class=\"pl-k\">=</span><span class=\"pl-c1\">False</span>)\n\n<span class=\"pl-c1\">RuntimeError</span>: Target <span class=\"pl-c1\">100</span> out of bounds at <span class=\"pl-k\">/</span><span class=\"pl-c1\">...</span><span class=\"pl-k\">/</span>pytorch<span class=\"pl-k\">/</span>aten<span class=\"pl-k\">/</span>src<span class=\"pl-k\">/</span><span class=\"pl-c1\">THNN</span><span class=\"pl-k\">/</span>generic<span class=\"pl-k\">/</span>ClassNLLCriterion.c:<span class=\"pl-c1\">56</span></pre></div>\n<p>I'm not sure why <code>*_no_reduce</code> cuda kernels did not take <code>n_classes</code> as argument, was it meant to be that way?</p>", "body_text": "This PR is supposed to fix #5296\nNew behaviour:\n>>> import torch\n>>> from torch.autograd import Variable\n>>> import torch.nn.functional as F\n\n>>> p = Variable(torch.randn(3, 3), requires_grad=True)\n>>> y = Variable(torch.LongTensor([99, 100, 101]))\n>>> l = F.cross_entropy(p, y, reduce=False)\n\nRuntimeError: Target 100 out of bounds at /.../pytorch/aten/src/THNN/generic/ClassNLLCriterion.c:56\nI'm not sure why *_no_reduce cuda kernels did not take n_classes as argument, was it meant to be that way?", "body": "This PR is supposed to fix https://github.com/pytorch/pytorch/issues/5296\r\n\r\nNew behaviour:\r\n\r\n```python\r\n>>> import torch\r\n>>> from torch.autograd import Variable\r\n>>> import torch.nn.functional as F\r\n\r\n>>> p = Variable(torch.randn(3, 3), requires_grad=True)\r\n>>> y = Variable(torch.LongTensor([99, 100, 101]))\r\n>>> l = F.cross_entropy(p, y, reduce=False)\r\n\r\nRuntimeError: Target 100 out of bounds at /.../pytorch/aten/src/THNN/generic/ClassNLLCriterion.c:56\r\n```\r\n\r\nI'm not sure why `*_no_reduce` cuda kernels did not take `n_classes` as argument, was it meant to be that way? "}