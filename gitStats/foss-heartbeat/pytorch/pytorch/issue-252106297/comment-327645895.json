{"url": "https://api.github.com/repos/pytorch/pytorch/issues/comments/327645895", "html_url": "https://github.com/pytorch/pytorch/issues/2515#issuecomment-327645895", "issue_url": "https://api.github.com/repos/pytorch/pytorch/issues/2515", "id": 327645895, "node_id": "MDEyOklzc3VlQ29tbWVudDMyNzY0NTg5NQ==", "user": {"login": "Smerity", "id": 32325, "node_id": "MDQ6VXNlcjMyMzI1", "avatar_url": "https://avatars0.githubusercontent.com/u/32325?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Smerity", "html_url": "https://github.com/Smerity", "followers_url": "https://api.github.com/users/Smerity/followers", "following_url": "https://api.github.com/users/Smerity/following{/other_user}", "gists_url": "https://api.github.com/users/Smerity/gists{/gist_id}", "starred_url": "https://api.github.com/users/Smerity/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Smerity/subscriptions", "organizations_url": "https://api.github.com/users/Smerity/orgs", "repos_url": "https://api.github.com/users/Smerity/repos", "events_url": "https://api.github.com/users/Smerity/events{/privacy}", "received_events_url": "https://api.github.com/users/Smerity/received_events", "type": "User", "site_admin": false}, "created_at": "2017-09-07T00:10:48Z", "updated_at": "2017-09-07T00:16:54Z", "author_association": "CONTRIBUTOR", "body_html": "<p>Thanks for the suggestion <a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=15841449\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/ngimel\">@ngimel</a>! If you're interested feel free to submit improvements to that model via pull request ^_^ Unfortunately in that specific situation I can't actually use in place dropout or multiplication as I'd be destroying the original weight matrix (<code>raw_w</code>) that must remain unmodified. Luckily weight drop is only called once per forward+backward which is then run over multiple timesteps.</p>\n<p>Regardless, I'm more focused on finding a clean fix for this broader <code>flatten_parameters</code> issue - my bad code can wait ;)</p>", "body_text": "Thanks for the suggestion @ngimel! If you're interested feel free to submit improvements to that model via pull request ^_^ Unfortunately in that specific situation I can't actually use in place dropout or multiplication as I'd be destroying the original weight matrix (raw_w) that must remain unmodified. Luckily weight drop is only called once per forward+backward which is then run over multiple timesteps.\nRegardless, I'm more focused on finding a clean fix for this broader flatten_parameters issue - my bad code can wait ;)", "body": "Thanks for the suggestion @ngimel! If you're interested feel free to submit improvements to that model via pull request ^_^ Unfortunately in that specific situation I can't actually use in place dropout or multiplication as I'd be destroying the original weight matrix (`raw_w`) that must remain unmodified. Luckily weight drop is only called once per forward+backward which is then run over multiple timesteps.\r\n\r\nRegardless, I'm more focused on finding a clean fix for this broader `flatten_parameters` issue - my bad code can wait ;)"}