{"url": "https://api.github.com/repos/pytorch/pytorch/issues/3587", "repository_url": "https://api.github.com/repos/pytorch/pytorch", "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/3587/labels{/name}", "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/3587/comments", "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/3587/events", "html_url": "https://github.com/pytorch/pytorch/issues/3587", "id": 272457973, "node_id": "MDU6SXNzdWUyNzI0NTc5NzM=", "number": 3587, "title": "Documentation: Indexing output from bidirectional RNN (GRU,LSTM)", "user": {"login": "olofmogren", "id": 3242719, "node_id": "MDQ6VXNlcjMyNDI3MTk=", "avatar_url": "https://avatars0.githubusercontent.com/u/3242719?v=4", "gravatar_id": "", "url": "https://api.github.com/users/olofmogren", "html_url": "https://github.com/olofmogren", "followers_url": "https://api.github.com/users/olofmogren/followers", "following_url": "https://api.github.com/users/olofmogren/following{/other_user}", "gists_url": "https://api.github.com/users/olofmogren/gists{/gist_id}", "starred_url": "https://api.github.com/users/olofmogren/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/olofmogren/subscriptions", "organizations_url": "https://api.github.com/users/olofmogren/orgs", "repos_url": "https://api.github.com/users/olofmogren/repos", "events_url": "https://api.github.com/users/olofmogren/events{/privacy}", "received_events_url": "https://api.github.com/users/olofmogren/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 9, "created_at": "2017-11-09T06:52:56Z", "updated_at": "2018-05-18T14:41:12Z", "closed_at": "2018-05-18T14:41:12Z", "author_association": "NONE", "body_html": "<p>The documentation for RNNs (including GRU and LSTM) states the dimensionality of hidden state (num_layers * num_directions, batch, hidden_size) and output (seq_len, batch, hidden_size * num_direction), but I cannot figure out how to index the output to get separate vectors for the two directions. Specifically, I'd like to get the output from the last cell on the forward RNN, and the output from the first cell in the backward RNN.</p>\n<p>From looking at the source code, you can infer that direction=0 is forward, and direction=1 is backward. I suppose that the \"hidden_size * num_direction\" dimension contains one forward-vector concatenated with one backward-vector, but I cannot find this anywhere in the documentation. Is this correct, and could this be specified in the documentation?</p>", "body_text": "The documentation for RNNs (including GRU and LSTM) states the dimensionality of hidden state (num_layers * num_directions, batch, hidden_size) and output (seq_len, batch, hidden_size * num_direction), but I cannot figure out how to index the output to get separate vectors for the two directions. Specifically, I'd like to get the output from the last cell on the forward RNN, and the output from the first cell in the backward RNN.\nFrom looking at the source code, you can infer that direction=0 is forward, and direction=1 is backward. I suppose that the \"hidden_size * num_direction\" dimension contains one forward-vector concatenated with one backward-vector, but I cannot find this anywhere in the documentation. Is this correct, and could this be specified in the documentation?", "body": "The documentation for RNNs (including GRU and LSTM) states the dimensionality of hidden state (num_layers * num_directions, batch, hidden_size) and output (seq_len, batch, hidden_size * num_direction), but I cannot figure out how to index the output to get separate vectors for the two directions. Specifically, I'd like to get the output from the last cell on the forward RNN, and the output from the first cell in the backward RNN.\r\n\r\nFrom looking at the source code, you can infer that direction=0 is forward, and direction=1 is backward. I suppose that the \"hidden_size * num_direction\" dimension contains one forward-vector concatenated with one backward-vector, but I cannot find this anywhere in the documentation. Is this correct, and could this be specified in the documentation?"}