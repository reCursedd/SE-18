{"url": "https://api.github.com/repos/pytorch/pytorch/issues/comments/428688489", "html_url": "https://github.com/pytorch/pytorch/pull/12541#issuecomment-428688489", "issue_url": "https://api.github.com/repos/pytorch/pytorch/issues/12541", "id": 428688489, "node_id": "MDEyOklzc3VlQ29tbWVudDQyODY4ODQ4OQ==", "user": {"login": "zou3519", "id": 5652049, "node_id": "MDQ6VXNlcjU2NTIwNDk=", "avatar_url": "https://avatars3.githubusercontent.com/u/5652049?v=4", "gravatar_id": "", "url": "https://api.github.com/users/zou3519", "html_url": "https://github.com/zou3519", "followers_url": "https://api.github.com/users/zou3519/followers", "following_url": "https://api.github.com/users/zou3519/following{/other_user}", "gists_url": "https://api.github.com/users/zou3519/gists{/gist_id}", "starred_url": "https://api.github.com/users/zou3519/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/zou3519/subscriptions", "organizations_url": "https://api.github.com/users/zou3519/orgs", "repos_url": "https://api.github.com/users/zou3519/repos", "events_url": "https://api.github.com/users/zou3519/events{/privacy}", "received_events_url": "https://api.github.com/users/zou3519/received_events", "type": "User", "site_admin": false}, "created_at": "2018-10-10T18:50:22Z", "updated_at": "2018-10-10T18:50:44Z", "author_association": "CONTRIBUTOR", "body_html": "<p>Oh I see, that makes sense. I'm mostly worried that the semantics of contiguous() change based on if we're tracing or not (if <code>self</code> is contiguous, it returns itself, otherwise a clone is made). Would it make sense to trace contiguous as <code>aten::contiguous</code> in the graph instead of recording aten::clone?</p>", "body_text": "Oh I see, that makes sense. I'm mostly worried that the semantics of contiguous() change based on if we're tracing or not (if self is contiguous, it returns itself, otherwise a clone is made). Would it make sense to trace contiguous as aten::contiguous in the graph instead of recording aten::clone?", "body": "Oh I see, that makes sense. I'm mostly worried that the semantics of contiguous() change based on if we're tracing or not (if `self` is contiguous, it returns itself, otherwise a clone is made). Would it make sense to trace contiguous as `aten::contiguous` in the graph instead of recording aten::clone?"}