{"url": "https://api.github.com/repos/pytorch/pytorch/issues/comments/428689439", "html_url": "https://github.com/pytorch/pytorch/pull/12541#issuecomment-428689439", "issue_url": "https://api.github.com/repos/pytorch/pytorch/issues/12541", "id": 428689439, "node_id": "MDEyOklzc3VlQ29tbWVudDQyODY4OTQzOQ==", "user": {"login": "jamesr66a", "id": 4685384, "node_id": "MDQ6VXNlcjQ2ODUzODQ=", "avatar_url": "https://avatars2.githubusercontent.com/u/4685384?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jamesr66a", "html_url": "https://github.com/jamesr66a", "followers_url": "https://api.github.com/users/jamesr66a/followers", "following_url": "https://api.github.com/users/jamesr66a/following{/other_user}", "gists_url": "https://api.github.com/users/jamesr66a/gists{/gist_id}", "starred_url": "https://api.github.com/users/jamesr66a/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jamesr66a/subscriptions", "organizations_url": "https://api.github.com/users/jamesr66a/orgs", "repos_url": "https://api.github.com/users/jamesr66a/repos", "events_url": "https://api.github.com/users/jamesr66a/events{/privacy}", "received_events_url": "https://api.github.com/users/jamesr66a/received_events", "type": "User", "site_admin": false}, "created_at": "2018-10-10T18:53:06Z", "updated_at": "2018-10-10T18:57:36Z", "author_association": "CONTRIBUTOR", "body_html": "<p><a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=5652049\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/zou3519\">@zou3519</a> in your code snippet:</p>\n<pre><code>   x.contiguous().copy_(y)\n</code></pre>\n<p>If <code>x</code> is already contiguous, we will copy the data from <code>y</code> into <code>x</code>. But if <code>x</code> is non-contiguous, won't we be copying <code>y</code> into a value that is dead after that statement? (i.e. the output of the internal <code>clone()</code> call)? Or am I misunderstanding this</p>", "body_text": "@zou3519 in your code snippet:\n   x.contiguous().copy_(y)\n\nIf x is already contiguous, we will copy the data from y into x. But if x is non-contiguous, won't we be copying y into a value that is dead after that statement? (i.e. the output of the internal clone() call)? Or am I misunderstanding this", "body": "@zou3519 in your code snippet:\r\n\r\n```\r\n   x.contiguous().copy_(y)\r\n```\r\n\r\nIf `x` is already contiguous, we will copy the data from `y` into `x`. But if `x` is non-contiguous, won't we be copying `y` into a value that is dead after that statement? (i.e. the output of the internal `clone()` call)? Or am I misunderstanding this\r\n"}