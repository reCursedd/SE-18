{"url": "https://api.github.com/repos/pytorch/pytorch/issues/comments/428695780", "html_url": "https://github.com/pytorch/pytorch/pull/12541#issuecomment-428695780", "issue_url": "https://api.github.com/repos/pytorch/pytorch/issues/12541", "id": 428695780, "node_id": "MDEyOklzc3VlQ29tbWVudDQyODY5NTc4MA==", "user": {"login": "zou3519", "id": 5652049, "node_id": "MDQ6VXNlcjU2NTIwNDk=", "avatar_url": "https://avatars3.githubusercontent.com/u/5652049?v=4", "gravatar_id": "", "url": "https://api.github.com/users/zou3519", "html_url": "https://github.com/zou3519", "followers_url": "https://api.github.com/users/zou3519/followers", "following_url": "https://api.github.com/users/zou3519/following{/other_user}", "gists_url": "https://api.github.com/users/zou3519/gists{/gist_id}", "starred_url": "https://api.github.com/users/zou3519/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/zou3519/subscriptions", "organizations_url": "https://api.github.com/users/zou3519/orgs", "repos_url": "https://api.github.com/users/zou3519/repos", "events_url": "https://api.github.com/users/zou3519/events{/privacy}", "received_events_url": "https://api.github.com/users/zou3519/received_events", "type": "User", "site_admin": false}, "created_at": "2018-10-10T19:11:07Z", "updated_at": "2018-10-10T19:11:07Z", "author_association": "CONTRIBUTOR", "body_html": "<p><a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=4685384\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/jamesr66a\">@jamesr66a</a> yes your understanding of my example is correct. I agree with your point that it seems like bad code style for users to rely on this (and do something like <code>tensor.contiguous()[0] = other</code>).</p>\n<p>I'm not sure if users rely on the in-place behavior in more reasonable ways, but we explicitly document <a href=\"https://pytorch.org/docs/master/tensors.html?highlight=contiguous#torch.Tensor.contiguous\" rel=\"nofollow\">tensor.contiguous</a> as returning the tensor if it is contiguous and returning a new tensor if it is not so that is something to consider</p>", "body_text": "@jamesr66a yes your understanding of my example is correct. I agree with your point that it seems like bad code style for users to rely on this (and do something like tensor.contiguous()[0] = other).\nI'm not sure if users rely on the in-place behavior in more reasonable ways, but we explicitly document tensor.contiguous as returning the tensor if it is contiguous and returning a new tensor if it is not so that is something to consider", "body": "@jamesr66a yes your understanding of my example is correct. I agree with your point that it seems like bad code style for users to rely on this (and do something like `tensor.contiguous()[0] = other`). \r\n\r\nI'm not sure if users rely on the in-place behavior in more reasonable ways, but we explicitly document [tensor.contiguous](https://pytorch.org/docs/master/tensors.html?highlight=contiguous#torch.Tensor.contiguous) as returning the tensor if it is contiguous and returning a new tensor if it is not so that is something to consider\r\n"}