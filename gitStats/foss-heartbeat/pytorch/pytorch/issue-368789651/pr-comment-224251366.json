{"url": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/224251366", "pull_request_review_id": 163573716, "id": 224251366, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIyNDI1MTM2Ng==", "diff_hunk": "@@ -461,10 +461,8 @@ Tensor & VariableType::resize_as_(Tensor & self, const Tensor & the_template) co\n \n Tensor VariableType::contiguous(const Tensor & self) const {\n   unpack(self, \"self\", 0);\n-  if (self.is_contiguous()) {\n-    return self;\n-  }\n-  return self.clone();\n+  auto result = self.is_contiguous() && !jit::tracer::isTracing() ? self : self.clone();", "path": "tools/autograd/templates/VariableType.cpp", "position": null, "original_position": 8, "commit_id": "a950ca563e9ec3257283b6e5a71e753e2d173f2c", "original_commit_id": "e65f6e682676ae4761910a084368b77dea337455", "user": {"login": "apaszke", "id": 4583066, "node_id": "MDQ6VXNlcjQ1ODMwNjY=", "avatar_url": "https://avatars3.githubusercontent.com/u/4583066?v=4", "gravatar_id": "", "url": "https://api.github.com/users/apaszke", "html_url": "https://github.com/apaszke", "followers_url": "https://api.github.com/users/apaszke/followers", "following_url": "https://api.github.com/users/apaszke/following{/other_user}", "gists_url": "https://api.github.com/users/apaszke/gists{/gist_id}", "starred_url": "https://api.github.com/users/apaszke/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/apaszke/subscriptions", "organizations_url": "https://api.github.com/users/apaszke/orgs", "repos_url": "https://api.github.com/users/apaszke/repos", "events_url": "https://api.github.com/users/apaszke/events{/privacy}", "received_events_url": "https://api.github.com/users/apaszke/received_events", "type": "User", "site_admin": false}, "body": "Well tracing all contiguous calls as clones is not perfect because the traces can end up being *way* slower than the original code (if it's called a lot on contiguous tensors). The right solution would be to add the code which instantiates the Node for `aten::contiguous`.", "created_at": "2018-10-10T21:40:32Z", "updated_at": "2018-11-23T15:52:50Z", "html_url": "https://github.com/pytorch/pytorch/pull/12541#discussion_r224251366", "pull_request_url": "https://api.github.com/repos/pytorch/pytorch/pulls/12541", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/224251366"}, "html": {"href": "https://github.com/pytorch/pytorch/pull/12541#discussion_r224251366"}, "pull_request": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/12541"}}, "body_html": "<p>Well tracing all contiguous calls as clones is not perfect because the traces can end up being <em>way</em> slower than the original code (if it's called a lot on contiguous tensors). The right solution would be to add the code which instantiates the Node for <code>aten::contiguous</code>.</p>", "body_text": "Well tracing all contiguous calls as clones is not perfect because the traces can end up being way slower than the original code (if it's called a lot on contiguous tensors). The right solution would be to add the code which instantiates the Node for aten::contiguous."}