{"url": "https://api.github.com/repos/pytorch/pytorch/issues/comments/361449591", "html_url": "https://github.com/pytorch/pytorch/issues/4903#issuecomment-361449591", "issue_url": "https://api.github.com/repos/pytorch/pytorch/issues/4903", "id": 361449591, "node_id": "MDEyOklzc3VlQ29tbWVudDM2MTQ0OTU5MQ==", "user": {"login": "ngimel", "id": 15841449, "node_id": "MDQ6VXNlcjE1ODQxNDQ5", "avatar_url": "https://avatars3.githubusercontent.com/u/15841449?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ngimel", "html_url": "https://github.com/ngimel", "followers_url": "https://api.github.com/users/ngimel/followers", "following_url": "https://api.github.com/users/ngimel/following{/other_user}", "gists_url": "https://api.github.com/users/ngimel/gists{/gist_id}", "starred_url": "https://api.github.com/users/ngimel/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ngimel/subscriptions", "organizations_url": "https://api.github.com/users/ngimel/orgs", "repos_url": "https://api.github.com/users/ngimel/repos", "events_url": "https://api.github.com/users/ngimel/events{/privacy}", "received_events_url": "https://api.github.com/users/ngimel/received_events", "type": "User", "site_admin": false}, "created_at": "2018-01-30T01:48:19Z", "updated_at": "2018-01-30T01:48:19Z", "author_association": "CONTRIBUTOR", "body_html": "<p><a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load issue title\" data-id=\"292570607\" data-permission-text=\"Issue title is private\" data-url=\"https://github.com/pytorch/pytorch/issues/4918\" data-hovercard-type=\"pull_request\" data-hovercard-url=\"/pytorch/pytorch/pull/4918/hovercard\" href=\"https://github.com/pytorch/pytorch/pull/4918\">#4918</a> should fix the issue (in context manager, it would call _lazy_init() <em>after</em> device is set, thus avoiding the problem)</p>", "body_text": "#4918 should fix the issue (in context manager, it would call _lazy_init() after device is set, thus avoiding the problem)", "body": "#4918 should fix the issue (in context manager, it would call _lazy_init() *after* device is set, thus avoiding the problem)"}