{"url": "https://api.github.com/repos/pytorch/pytorch/issues/13300", "repository_url": "https://api.github.com/repos/pytorch/pytorch", "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/13300/labels{/name}", "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/13300/comments", "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/13300/events", "html_url": "https://github.com/pytorch/pytorch/issues/13300", "id": 375360487, "node_id": "MDU6SXNzdWUzNzUzNjA0ODc=", "number": 13300, "title": "Use a dill-based multiprocessing library and serialization", "user": {"login": "nmatthews-asapp", "id": 41437605, "node_id": "MDQ6VXNlcjQxNDM3NjA1", "avatar_url": "https://avatars3.githubusercontent.com/u/41437605?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nmatthews-asapp", "html_url": "https://github.com/nmatthews-asapp", "followers_url": "https://api.github.com/users/nmatthews-asapp/followers", "following_url": "https://api.github.com/users/nmatthews-asapp/following{/other_user}", "gists_url": "https://api.github.com/users/nmatthews-asapp/gists{/gist_id}", "starred_url": "https://api.github.com/users/nmatthews-asapp/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nmatthews-asapp/subscriptions", "organizations_url": "https://api.github.com/users/nmatthews-asapp/orgs", "repos_url": "https://api.github.com/users/nmatthews-asapp/repos", "events_url": "https://api.github.com/users/nmatthews-asapp/events{/privacy}", "received_events_url": "https://api.github.com/users/nmatthews-asapp/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2018-10-30T07:51:01Z", "updated_at": "2018-10-30T23:21:07Z", "closed_at": null, "author_association": "NONE", "body_html": "<h2><g-emoji class=\"g-emoji\" alias=\"rocket\" fallback-src=\"https://assets-cdn.github.com/images/icons/emoji/unicode/1f680.png\">\ud83d\ude80</g-emoji> Feature</h2>\n\n<p>Use a dill-based multiprocessing library to enhance multiprocessing experience.</p>\n<h2>Motivation</h2>\n\n<p>Currently multiprocessing uses pickle, which has disadvantages. Not everything can be pickled easily. For example, dynamically created classes and nested classes will fail. If instead of multiprocessing, pytorch used a drop-in replacement that uses dill, e.g. <code>multiprocess</code> a fork of multiprocessing, these problems should be alleviated with few or no side-effects.</p>\n<h2>Pitch</h2>\n\n<p>Multiprocessing in torch should not be limited by the brittle pickle system. I want to be able to create python programs without the limitations of pickle, but still use pytorch and its multiprocessing system.</p>\n<h2>Alternatives</h2>\n\n<h2>Additional context</h2>\n", "body_text": "\ud83d\ude80 Feature\n\nUse a dill-based multiprocessing library to enhance multiprocessing experience.\nMotivation\n\nCurrently multiprocessing uses pickle, which has disadvantages. Not everything can be pickled easily. For example, dynamically created classes and nested classes will fail. If instead of multiprocessing, pytorch used a drop-in replacement that uses dill, e.g. multiprocess a fork of multiprocessing, these problems should be alleviated with few or no side-effects.\nPitch\n\nMultiprocessing in torch should not be limited by the brittle pickle system. I want to be able to create python programs without the limitations of pickle, but still use pytorch and its multiprocessing system.\nAlternatives\n\nAdditional context", "body": "## \ud83d\ude80 Feature\r\n<!-- A clear and concise description of the feature proposal -->\r\nUse a dill-based multiprocessing library to enhance multiprocessing experience.\r\n\r\n## Motivation\r\n\r\n<!-- Please outline the motivation for the proposal. Is your feature request related to a problem? e.g., I'm always frustrated when [...]. If this is related to another GitHub issue, please link here too -->\r\nCurrently multiprocessing uses pickle, which has disadvantages. Not everything can be pickled easily. For example, dynamically created classes and nested classes will fail. If instead of multiprocessing, pytorch used a drop-in replacement that uses dill, e.g. `multiprocess` a fork of multiprocessing, these problems should be alleviated with few or no side-effects.\r\n\r\n## Pitch\r\n\r\n<!-- A clear and concise description of what you want to happen. -->\r\nMultiprocessing in torch should not be limited by the brittle pickle system. I want to be able to create python programs without the limitations of pickle, but still use pytorch and its multiprocessing system.\r\n\r\n## Alternatives\r\n\r\n<!-- A clear and concise description of any alternative solutions or features you've considered, if any. -->\r\n\r\n## Additional context\r\n\r\n<!-- Add any other context or screenshots about the feature request here. -->\r\n"}