{"url": "https://api.github.com/repos/pytorch/pytorch/issues/comments/263632256", "html_url": "https://github.com/pytorch/pytorch/issues/263#issuecomment-263632256", "issue_url": "https://api.github.com/repos/pytorch/pytorch/issues/263", "id": 263632256, "node_id": "MDEyOklzc3VlQ29tbWVudDI2MzYzMjI1Ng==", "user": {"login": "ngimel", "id": 15841449, "node_id": "MDQ6VXNlcjE1ODQxNDQ5", "avatar_url": "https://avatars3.githubusercontent.com/u/15841449?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ngimel", "html_url": "https://github.com/ngimel", "followers_url": "https://api.github.com/users/ngimel/followers", "following_url": "https://api.github.com/users/ngimel/following{/other_user}", "gists_url": "https://api.github.com/users/ngimel/gists{/gist_id}", "starred_url": "https://api.github.com/users/ngimel/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ngimel/subscriptions", "organizations_url": "https://api.github.com/users/ngimel/orgs", "repos_url": "https://api.github.com/users/ngimel/repos", "events_url": "https://api.github.com/users/ngimel/events{/privacy}", "received_events_url": "https://api.github.com/users/ngimel/received_events", "type": "User", "site_admin": false}, "created_at": "2016-11-29T17:06:01Z", "updated_at": "2016-11-29T17:06:01Z", "author_association": "CONTRIBUTOR", "body_html": "<p>Re: operations being stateless between mini-batches, cudnn convolutions preserve algorithms cache between minibatches, so looks like this design principle is violated sometimes:<br>\n<a href=\"https://github.com/pytorch/pytorch/blob/master/torch/csrc/cudnn/Conv.cpp#L93-L95\">https://github.com/pytorch/pytorch/blob/master/torch/csrc/cudnn/Conv.cpp#L93-L95</a></p>", "body_text": "Re: operations being stateless between mini-batches, cudnn convolutions preserve algorithms cache between minibatches, so looks like this design principle is violated sometimes:\nhttps://github.com/pytorch/pytorch/blob/master/torch/csrc/cudnn/Conv.cpp#L93-L95", "body": "Re: operations being stateless between mini-batches, cudnn convolutions preserve algorithms cache between minibatches, so looks like this design principle is violated sometimes:\r\nhttps://github.com/pytorch/pytorch/blob/master/torch/csrc/cudnn/Conv.cpp#L93-L95"}