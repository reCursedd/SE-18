{"url": "https://api.github.com/repos/pytorch/pytorch/issues/comments/263492025", "html_url": "https://github.com/pytorch/pytorch/issues/263#issuecomment-263492025", "issue_url": "https://api.github.com/repos/pytorch/pytorch/issues/263", "id": 263492025, "node_id": "MDEyOklzc3VlQ29tbWVudDI2MzQ5MjAyNQ==", "user": {"login": "ngimel", "id": 15841449, "node_id": "MDQ6VXNlcjE1ODQxNDQ5", "avatar_url": "https://avatars3.githubusercontent.com/u/15841449?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ngimel", "html_url": "https://github.com/ngimel", "followers_url": "https://api.github.com/users/ngimel/followers", "following_url": "https://api.github.com/users/ngimel/following{/other_user}", "gists_url": "https://api.github.com/users/ngimel/gists{/gist_id}", "starred_url": "https://api.github.com/users/ngimel/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ngimel/subscriptions", "organizations_url": "https://api.github.com/users/ngimel/orgs", "repos_url": "https://api.github.com/users/ngimel/repos", "events_url": "https://api.github.com/users/ngimel/events{/privacy}", "received_events_url": "https://api.github.com/users/ngimel/received_events", "type": "User", "site_admin": false}, "created_at": "2016-11-29T06:58:12Z", "updated_at": "2016-11-29T06:58:12Z", "author_association": "CONTRIBUTOR", "body_html": "<p>curand device API implementation (that is currently used by cudnn) is open-source, see curand_device.h and other curand*.h files in cuda includes. Currently, cudnn uses XORWOW generator. There is no guarantee that cudnn will not switch to host curand APIs, where implementation is indeed closed-source, or won't switch to device API PRNG other than XORWOW. Philox, as currently implemented in curand device API, still requires each of the parallel rngs to carry a state, philox state definition can be found in one of curand*h includes (which is not to say that there can not be better implementation, where the only required state is <code>count</code>. However, it is still a state that has to be preserved between mini-batches).</p>", "body_text": "curand device API implementation (that is currently used by cudnn) is open-source, see curand_device.h and other curand*.h files in cuda includes. Currently, cudnn uses XORWOW generator. There is no guarantee that cudnn will not switch to host curand APIs, where implementation is indeed closed-source, or won't switch to device API PRNG other than XORWOW. Philox, as currently implemented in curand device API, still requires each of the parallel rngs to carry a state, philox state definition can be found in one of curand*h includes (which is not to say that there can not be better implementation, where the only required state is count. However, it is still a state that has to be preserved between mini-batches).", "body": "curand device API implementation (that is currently used by cudnn) is open-source, see curand_device.h and other curand*.h files in cuda includes. Currently, cudnn uses XORWOW generator. There is no guarantee that cudnn will not switch to host curand APIs, where implementation is indeed closed-source, or won't switch to device API PRNG other than XORWOW. Philox, as currently implemented in curand device API, still requires each of the parallel rngs to carry a state, philox state definition can be found in one of curand*h includes (which is not to say that there can not be better implementation, where the only required state is ```count```. However, it is still a state that has to be preserved between mini-batches). "}