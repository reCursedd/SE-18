{"url": "https://api.github.com/repos/pytorch/pytorch/issues/comments/263673154", "html_url": "https://github.com/pytorch/pytorch/issues/263#issuecomment-263673154", "issue_url": "https://api.github.com/repos/pytorch/pytorch/issues/263", "id": 263673154, "node_id": "MDEyOklzc3VlQ29tbWVudDI2MzY3MzE1NA==", "user": {"login": "ngimel", "id": 15841449, "node_id": "MDQ6VXNlcjE1ODQxNDQ5", "avatar_url": "https://avatars3.githubusercontent.com/u/15841449?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ngimel", "html_url": "https://github.com/ngimel", "followers_url": "https://api.github.com/users/ngimel/followers", "following_url": "https://api.github.com/users/ngimel/following{/other_user}", "gists_url": "https://api.github.com/users/ngimel/gists{/gist_id}", "starred_url": "https://api.github.com/users/ngimel/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ngimel/subscriptions", "organizations_url": "https://api.github.com/users/ngimel/orgs", "repos_url": "https://api.github.com/users/ngimel/repos", "events_url": "https://api.github.com/users/ngimel/events{/privacy}", "received_events_url": "https://api.github.com/users/ngimel/received_events", "type": "User", "site_admin": false}, "created_at": "2016-11-29T19:30:45Z", "updated_at": "2016-11-29T19:30:45Z", "author_association": "CONTRIBUTOR", "body_html": "<p>Workaround suggested by <a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=655866\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/colesbury\">@colesbury</a> sounds good to me. Cudnn manual mentions that no two Dropout/rnn layers sharing the same states should run concurrently, but it is hard to truly safeguard against it.<br>\nThanks for bringing Philox up, it might make sense for cudnn to switch to it at some point, but it will have to be a custom implementation, not the one in curand device APIs, that has all the drawbacks of the stateful generators. But it won't be near term.<br>\nAnd thanks a lot for your work!</p>", "body_text": "Workaround suggested by @colesbury sounds good to me. Cudnn manual mentions that no two Dropout/rnn layers sharing the same states should run concurrently, but it is hard to truly safeguard against it.\nThanks for bringing Philox up, it might make sense for cudnn to switch to it at some point, but it will have to be a custom implementation, not the one in curand device APIs, that has all the drawbacks of the stateful generators. But it won't be near term.\nAnd thanks a lot for your work!", "body": "Workaround suggested by @colesbury sounds good to me. Cudnn manual mentions that no two Dropout/rnn layers sharing the same states should run concurrently, but it is hard to truly safeguard against it. \r\nThanks for bringing Philox up, it might make sense for cudnn to switch to it at some point, but it will have to be a custom implementation, not the one in curand device APIs, that has all the drawbacks of the stateful generators. But it won't be near term. \r\nAnd thanks a lot for your work!"}