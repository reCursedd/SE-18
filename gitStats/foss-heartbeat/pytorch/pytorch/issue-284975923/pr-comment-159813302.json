{"url": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/159813302", "pull_request_review_id": 86710894, "id": 159813302, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE1OTgxMzMwMg==", "diff_hunk": "@@ -471,3 +473,90 @@ def exp(g, self):\n \n def conv_tbc(g, input, weight, bias, pad):\n     return g.op(\"ATen\", input, weight, bias, operator_s=\"conv_tbc\", pad_i=pad)\n+\n+def RNN_symbolic_builder(cell_type, *args, **kwargs):\n+    if cell_type == 'LSTM':\n+        return LSTM_symbolic_builder(*args, **kwargs)\n+    elif cell_type == 'GRU':\n+        return GRU_symbolic_builder(*args, **kwargs)\n+    else:\n+        assert False, cell_type\n+\n+\n+def reform_weights(g, w, n, intervals):\n+    slices = [g.op('Slice', w, axes_i=[0], starts_i=[x * n], ends_i=[y * n]) for x, y in intervals]\n+    return g.op('Concat', *slices, axis_i=0)\n+\n+\n+def LSTM_symbolic_builder(input_size, hidden_size, num_layers, batch_first, dropout, bidirectional, **kwargs):\n+    assert not batch_first", "path": "torch/onnx/symbolic.py", "position": null, "original_position": 29, "commit_id": "ff6499632c14fc33b1041f98132c25148160e7e7", "original_commit_id": "d1093726559c2e6398ea820e493ed1b8d6c9d2ec", "user": {"login": "houseroad", "id": 30275821, "node_id": "MDQ6VXNlcjMwMjc1ODIx", "avatar_url": "https://avatars0.githubusercontent.com/u/30275821?v=4", "gravatar_id": "", "url": "https://api.github.com/users/houseroad", "html_url": "https://github.com/houseroad", "followers_url": "https://api.github.com/users/houseroad/followers", "following_url": "https://api.github.com/users/houseroad/following{/other_user}", "gists_url": "https://api.github.com/users/houseroad/gists{/gist_id}", "starred_url": "https://api.github.com/users/houseroad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/houseroad/subscriptions", "organizations_url": "https://api.github.com/users/houseroad/orgs", "repos_url": "https://api.github.com/users/houseroad/repos", "events_url": "https://api.github.com/users/houseroad/events{/privacy}", "received_events_url": "https://api.github.com/users/houseroad/received_events", "type": "User", "site_admin": false}, "body": "Here also better use _unimplemented.", "created_at": "2018-01-05T05:51:07Z", "updated_at": "2018-11-23T15:37:50Z", "html_url": "https://github.com/pytorch/pytorch/pull/4390#discussion_r159813302", "pull_request_url": "https://api.github.com/repos/pytorch/pytorch/pulls/4390", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/159813302"}, "html": {"href": "https://github.com/pytorch/pytorch/pull/4390#discussion_r159813302"}, "pull_request": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/4390"}}, "body_html": "<p>Here also better use _unimplemented.</p>", "body_text": "Here also better use _unimplemented."}