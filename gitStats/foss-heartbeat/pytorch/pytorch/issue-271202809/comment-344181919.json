{"url": "https://api.github.com/repos/pytorch/pytorch/issues/comments/344181919", "html_url": "https://github.com/pytorch/pytorch/pull/3488#issuecomment-344181919", "issue_url": "https://api.github.com/repos/pytorch/pytorch/issues/3488", "id": 344181919, "node_id": "MDEyOklzc3VlQ29tbWVudDM0NDE4MTkxOQ==", "user": {"login": "dzhulgakov", "id": 17890620, "node_id": "MDQ6VXNlcjE3ODkwNjIw", "avatar_url": "https://avatars2.githubusercontent.com/u/17890620?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dzhulgakov", "html_url": "https://github.com/dzhulgakov", "followers_url": "https://api.github.com/users/dzhulgakov/followers", "following_url": "https://api.github.com/users/dzhulgakov/following{/other_user}", "gists_url": "https://api.github.com/users/dzhulgakov/gists{/gist_id}", "starred_url": "https://api.github.com/users/dzhulgakov/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dzhulgakov/subscriptions", "organizations_url": "https://api.github.com/users/dzhulgakov/orgs", "repos_url": "https://api.github.com/users/dzhulgakov/repos", "events_url": "https://api.github.com/users/dzhulgakov/events{/privacy}", "received_events_url": "https://api.github.com/users/dzhulgakov/received_events", "type": "User", "site_admin": false}, "created_at": "2017-11-14T08:30:00Z", "updated_at": "2017-11-14T08:30:00Z", "author_association": "MEMBER", "body_html": "<p>Hey folks, just breaking batch_norm export (and disabling tests) is not cool as it completely breaks ONNX export for anything having batchnorm!</p>\n<p>In fact, since we're doing match by the number of inputs when we're exporting the initializers in the graph (<a href=\"https://github.com/pytorch/pytorch/blob/master/torch/csrc/jit/export.cpp#L221\">https://github.com/pytorch/pytorch/blob/master/torch/csrc/jit/export.cpp#L221</a>) I suspect it also breaks any export if some of the modules has any buffers (since we compare the order of state_dict and parameters())</p>\n<p>Is there a more plausible fix for buffers handling? One option might be to just override the symbolic export for the entire module (batchnorm) that has buffers but that would require hack similar to <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load issue title\" data-id=\"264046092\" data-permission-text=\"Issue title is private\" data-url=\"https://github.com/pytorch/pytorch/issues/3044\" data-hovercard-type=\"pull_request\" data-hovercard-url=\"/pytorch/pytorch/pull/3044/hovercard\" href=\"https://github.com/pytorch/pytorch/pull/3044\">#3044</a></p>\n<p><a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=4583066\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/apaszke\">@apaszke</a> <a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=13564\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/ezyang\">@ezyang</a> <a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=30275821\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/houseroad\">@houseroad</a> - any suggestions?</p>", "body_text": "Hey folks, just breaking batch_norm export (and disabling tests) is not cool as it completely breaks ONNX export for anything having batchnorm!\nIn fact, since we're doing match by the number of inputs when we're exporting the initializers in the graph (https://github.com/pytorch/pytorch/blob/master/torch/csrc/jit/export.cpp#L221) I suspect it also breaks any export if some of the modules has any buffers (since we compare the order of state_dict and parameters())\nIs there a more plausible fix for buffers handling? One option might be to just override the symbolic export for the entire module (batchnorm) that has buffers but that would require hack similar to #3044\n@apaszke @ezyang @houseroad - any suggestions?", "body": "Hey folks, just breaking batch_norm export (and disabling tests) is not cool as it completely breaks ONNX export for anything having batchnorm!\r\n\r\nIn fact, since we're doing match by the number of inputs when we're exporting the initializers in the graph (https://github.com/pytorch/pytorch/blob/master/torch/csrc/jit/export.cpp#L221) I suspect it also breaks any export if some of the modules has any buffers (since we compare the order of state_dict and parameters())\r\n\r\nIs there a more plausible fix for buffers handling? One option might be to just override the symbolic export for the entire module (batchnorm) that has buffers but that would require hack similar to https://github.com/pytorch/pytorch/pull/3044/\r\n\r\n@apaszke @ezyang @houseroad - any suggestions?\r\n\r\n"}