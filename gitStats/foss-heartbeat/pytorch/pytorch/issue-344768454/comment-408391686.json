{"url": "https://api.github.com/repos/pytorch/pytorch/issues/comments/408391686", "html_url": "https://github.com/pytorch/pytorch/issues/9871#issuecomment-408391686", "issue_url": "https://api.github.com/repos/pytorch/pytorch/issues/9871", "id": 408391686, "node_id": "MDEyOklzc3VlQ29tbWVudDQwODM5MTY4Ng==", "user": {"login": "zuoxingdong", "id": 18168681, "node_id": "MDQ6VXNlcjE4MTY4Njgx", "avatar_url": "https://avatars0.githubusercontent.com/u/18168681?v=4", "gravatar_id": "", "url": "https://api.github.com/users/zuoxingdong", "html_url": "https://github.com/zuoxingdong", "followers_url": "https://api.github.com/users/zuoxingdong/followers", "following_url": "https://api.github.com/users/zuoxingdong/following{/other_user}", "gists_url": "https://api.github.com/users/zuoxingdong/gists{/gist_id}", "starred_url": "https://api.github.com/users/zuoxingdong/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/zuoxingdong/subscriptions", "organizations_url": "https://api.github.com/users/zuoxingdong/orgs", "repos_url": "https://api.github.com/users/zuoxingdong/repos", "events_url": "https://api.github.com/users/zuoxingdong/events{/privacy}", "received_events_url": "https://api.github.com/users/zuoxingdong/received_events", "type": "User", "site_admin": false}, "created_at": "2018-07-27T11:28:30Z", "updated_at": "2018-07-27T11:28:30Z", "author_association": "CONTRIBUTOR", "body_html": "<p><a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=1310570\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/soumith\">@soumith</a> It works ! Thanks a lot for that, if I understand it correctly, <code>torch.device</code> is only an object that parameters conveyed to, but without saying <code>torch.cuda.set_device</code>, all child processes by default using the first GPU right ? Just one small detail that I still feel a bit confused, because we already call all model and data tensor with <code>.to(device)</code>, why GPU0 still consume corresponding memories in this case ? It seems that the default CUDA device will anyhow take a copy once anything transfer to non-default GPUs ?</p>", "body_text": "@soumith It works ! Thanks a lot for that, if I understand it correctly, torch.device is only an object that parameters conveyed to, but without saying torch.cuda.set_device, all child processes by default using the first GPU right ? Just one small detail that I still feel a bit confused, because we already call all model and data tensor with .to(device), why GPU0 still consume corresponding memories in this case ? It seems that the default CUDA device will anyhow take a copy once anything transfer to non-default GPUs ?", "body": "@soumith It works ! Thanks a lot for that, if I understand it correctly, `torch.device` is only an object that parameters conveyed to, but without saying `torch.cuda.set_device`, all child processes by default using the first GPU right ? Just one small detail that I still feel a bit confused, because we already call all model and data tensor with `.to(device)`, why GPU0 still consume corresponding memories in this case ? It seems that the default CUDA device will anyhow take a copy once anything transfer to non-default GPUs ?"}