{"url": "https://api.github.com/repos/pytorch/pytorch/issues/9871", "repository_url": "https://api.github.com/repos/pytorch/pytorch", "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/9871/labels{/name}", "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/9871/comments", "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/9871/events", "html_url": "https://github.com/pytorch/pytorch/issues/9871", "id": 344768454, "node_id": "MDU6SXNzdWUzNDQ3Njg0NTQ=", "number": 9871, "title": "[Problem report] GPU 0 out of memory even if assigning one GPU for each model in multiprocessing", "user": {"login": "zuoxingdong", "id": 18168681, "node_id": "MDQ6VXNlcjE4MTY4Njgx", "avatar_url": "https://avatars0.githubusercontent.com/u/18168681?v=4", "gravatar_id": "", "url": "https://api.github.com/users/zuoxingdong", "html_url": "https://github.com/zuoxingdong", "followers_url": "https://api.github.com/users/zuoxingdong/followers", "following_url": "https://api.github.com/users/zuoxingdong/following{/other_user}", "gists_url": "https://api.github.com/users/zuoxingdong/gists{/gist_id}", "starred_url": "https://api.github.com/users/zuoxingdong/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/zuoxingdong/subscriptions", "organizations_url": "https://api.github.com/users/zuoxingdong/orgs", "repos_url": "https://api.github.com/users/zuoxingdong/repos", "events_url": "https://api.github.com/users/zuoxingdong/events{/privacy}", "received_events_url": "https://api.github.com/users/zuoxingdong/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2018-07-26T09:36:52Z", "updated_at": "2018-07-27T14:30:12Z", "closed_at": null, "author_association": "CONTRIBUTOR", "body_html": "<p>I am using Python multiprocessing to train a model with different random seeds (not using PyTorch multiprocessing because we do not want to share the model or the memory, but independent training). For example I have 7 GPUs in the server and created 7 training script each for a different random seeds. And in each file assign a specific gpu i.e. <code>torch.device(f'cuda:{i}')</code> where i is in the range [0, 6].</p>\n<p>However, although this should be expected to work fine, but from the second script to the last, they give a <code>CUDA Runtime Error with out of memory</code>. It seems GPU 0 always occupy a lot of memory for each script even if they are assigned with other GPUs.</p>\n<p>The PyTorch version is <code>0.5.0a0+1597fc5</code></p>", "body_text": "I am using Python multiprocessing to train a model with different random seeds (not using PyTorch multiprocessing because we do not want to share the model or the memory, but independent training). For example I have 7 GPUs in the server and created 7 training script each for a different random seeds. And in each file assign a specific gpu i.e. torch.device(f'cuda:{i}') where i is in the range [0, 6].\nHowever, although this should be expected to work fine, but from the second script to the last, they give a CUDA Runtime Error with out of memory. It seems GPU 0 always occupy a lot of memory for each script even if they are assigned with other GPUs.\nThe PyTorch version is 0.5.0a0+1597fc5", "body": "I am using Python multiprocessing to train a model with different random seeds (not using PyTorch multiprocessing because we do not want to share the model or the memory, but independent training). For example I have 7 GPUs in the server and created 7 training script each for a different random seeds. And in each file assign a specific gpu i.e. `torch.device(f'cuda:{i}')` where i is in the range [0, 6]. \r\n\r\nHowever, although this should be expected to work fine, but from the second script to the last, they give a `CUDA Runtime Error with out of memory`. It seems GPU 0 always occupy a lot of memory for each script even if they are assigned with other GPUs. \r\n\r\nThe PyTorch version is `0.5.0a0+1597fc5`"}