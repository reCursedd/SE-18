{"url": "https://api.github.com/repos/pytorch/pytorch/issues/4791", "repository_url": "https://api.github.com/repos/pytorch/pytorch", "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/4791/labels{/name}", "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/4791/comments", "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/4791/events", "html_url": "https://github.com/pytorch/pytorch/pull/4791", "id": 290664499, "node_id": "MDExOlB1bGxSZXF1ZXN0MTY0NDUxODY3", "number": 4791, "title": "Favor Variables over Tensors for scalar constructors in torch.distrib\u2026", "user": {"login": "gchanan", "id": 3768583, "node_id": "MDQ6VXNlcjM3Njg1ODM=", "avatar_url": "https://avatars2.githubusercontent.com/u/3768583?v=4", "gravatar_id": "", "url": "https://api.github.com/users/gchanan", "html_url": "https://github.com/gchanan", "followers_url": "https://api.github.com/users/gchanan/followers", "following_url": "https://api.github.com/users/gchanan/following{/other_user}", "gists_url": "https://api.github.com/users/gchanan/gists{/gist_id}", "starred_url": "https://api.github.com/users/gchanan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/gchanan/subscriptions", "organizations_url": "https://api.github.com/users/gchanan/orgs", "repos_url": "https://api.github.com/users/gchanan/repos", "events_url": "https://api.github.com/users/gchanan/events{/privacy}", "received_events_url": "https://api.github.com/users/gchanan/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 9, "created_at": "2018-01-23T00:18:50Z", "updated_at": "2018-01-23T19:13:48Z", "closed_at": "2018-01-23T16:49:15Z", "author_association": "CONTRIBUTOR", "pull_request": {"url": "https://api.github.com/repos/pytorch/pytorch/pulls/4791", "html_url": "https://github.com/pytorch/pytorch/pull/4791", "diff_url": "https://github.com/pytorch/pytorch/pull/4791.diff", "patch_url": "https://github.com/pytorch/pytorch/pull/4791.patch"}, "body_html": "<p>\u2026utions.</p>\n<p>Current behvior:</p>\n<ol>\n<li>distribution constructors containing only python number elements will have their python numbers upcasted to Tensors.</li>\n<li>Python number arguments of distribution constructors that also contain tensors and variables will be upcasted<br>\nto the first tensor/variable type.</li>\n</ol>\n<p>This PR changes the above to favor Variables as follows:</p>\n<ol>\n<li>The python numbers will now be upcasted to Variables</li>\n<li>An error will be raised if the first tensor/variable type is not a Variable.</li>\n</ol>\n<p>This is done in preparation for the introduction of Scalars (0-dimensional tensors), which are only available on the Variable API.</p>\n<p>Note that we are (separately) merging Variable and Tensor, so this PR should have no real long-term effect.</p>\n<p>Also note that the above means we don't change the behavior of constructors without python number arguments.</p>", "body_text": "\u2026utions.\nCurrent behvior:\n\ndistribution constructors containing only python number elements will have their python numbers upcasted to Tensors.\nPython number arguments of distribution constructors that also contain tensors and variables will be upcasted\nto the first tensor/variable type.\n\nThis PR changes the above to favor Variables as follows:\n\nThe python numbers will now be upcasted to Variables\nAn error will be raised if the first tensor/variable type is not a Variable.\n\nThis is done in preparation for the introduction of Scalars (0-dimensional tensors), which are only available on the Variable API.\nNote that we are (separately) merging Variable and Tensor, so this PR should have no real long-term effect.\nAlso note that the above means we don't change the behavior of constructors without python number arguments.", "body": "\u2026utions.\r\n\r\nCurrent behvior:\r\n1) distribution constructors containing only python number elements will have their python numbers upcasted to Tensors.\r\n2) Python number arguments of distribution constructors that also contain tensors and variables will be upcasted\r\nto the first tensor/variable type.\r\n\r\nThis PR changes the above to favor Variables as follows:\r\n1) The python numbers will now be upcasted to Variables\r\n2) An error will be raised if the first tensor/variable type is not a Variable.\r\n\r\nThis is done in preparation for the introduction of Scalars (0-dimensional tensors), which are only available on the Variable API.\r\n\r\nNote that we are (separately) merging Variable and Tensor, so this PR should have no real long-term effect.\r\n\r\nAlso note that the above means we don't change the behavior of constructors without python number arguments."}