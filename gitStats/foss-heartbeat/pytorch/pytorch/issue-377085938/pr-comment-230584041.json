{"url": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/230584041", "pull_request_review_id": 171357783, "id": 230584041, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIzMDU4NDA0MQ==", "diff_hunk": "@@ -0,0 +1,147 @@\n+\n+rem Remove to original folder after script is finished", "path": "scripts/build_windows_shared.bat", "position": null, "original_position": 2, "commit_id": "147c7f735d90054283afe1f78126a85fa03336bd", "original_commit_id": "35c094643b5725f1a59c6de6c7fb863708beaf44", "user": {"login": "ArutyunovG", "id": 10763026, "node_id": "MDQ6VXNlcjEwNzYzMDI2", "avatar_url": "https://avatars0.githubusercontent.com/u/10763026?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ArutyunovG", "html_url": "https://github.com/ArutyunovG", "followers_url": "https://api.github.com/users/ArutyunovG/followers", "following_url": "https://api.github.com/users/ArutyunovG/following{/other_user}", "gists_url": "https://api.github.com/users/ArutyunovG/gists{/gist_id}", "starred_url": "https://api.github.com/users/ArutyunovG/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ArutyunovG/subscriptions", "organizations_url": "https://api.github.com/users/ArutyunovG/orgs", "repos_url": "https://api.github.com/users/ArutyunovG/repos", "events_url": "https://api.github.com/users/ArutyunovG/events{/privacy}", "received_events_url": "https://api.github.com/users/ArutyunovG/received_events", "type": "User", "site_admin": false}, "body": "The goal of the new script is to provide convinient end-user tool, that being clicked builds you Caffe2 in Windows with VIsual Studios. It doesn't mean replacing something existing for well-qualified users.\r\n\r\nAt the moment it supports only Visual Studio 2015.\r\nHowever it is probably already more convenient for end-user with VS2015, then the existing two scripts\r\ntools\\build_pytorch_libs.bat\r\nand\r\nscripts\\build_windows.bat.\r\n\r\nThe first script requires some user experience to be used correctly. In case of the proposed script both Debug and Release builds are automatically performed with correct CMAKE_C_COMPILER, CMAKE_CXX_COMPILER, CMAKE_LINKER, vcvars64.bat. On my PC it is required to have enough heap space to build caffe2_gpu.dll with pdbs (in Debug with all symbols). It is not that trivial for a non-experienced in Windows builds person to figure out how to do it.\r\n\r\nThe second script allows too few functionality to be built, although it is automatic as the proposed one.\r\n\r\nThe goal here is not to replace something existing, but to provide a tool for end-user to be simple to use (just click twice with your mouse) and allow building Caffe2 with maximum supported options.\r\n\r\nThe next step will be adding Visual Studio 2017 support, and the final is to add support of\r\nglog, gflags, opencv, lmdb and probably leveldb (the last one is not that simple in Windows).", "created_at": "2018-11-04T11:01:44Z", "updated_at": "2018-11-23T15:54:15Z", "html_url": "https://github.com/pytorch/pytorch/pull/13550#discussion_r230584041", "pull_request_url": "https://api.github.com/repos/pytorch/pytorch/pulls/13550", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/230584041"}, "html": {"href": "https://github.com/pytorch/pytorch/pull/13550#discussion_r230584041"}, "pull_request": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/13550"}}, "body_html": "<p>The goal of the new script is to provide convinient end-user tool, that being clicked builds you Caffe2 in Windows with VIsual Studios. It doesn't mean replacing something existing for well-qualified users.</p>\n<p>At the moment it supports only Visual Studio 2015.<br>\nHowever it is probably already more convenient for end-user with VS2015, then the existing two scripts<br>\ntools\\build_pytorch_libs.bat<br>\nand<br>\nscripts\\build_windows.bat.</p>\n<p>The first script requires some user experience to be used correctly. In case of the proposed script both Debug and Release builds are automatically performed with correct CMAKE_C_COMPILER, CMAKE_CXX_COMPILER, CMAKE_LINKER, vcvars64.bat. On my PC it is required to have enough heap space to build caffe2_gpu.dll with pdbs (in Debug with all symbols). It is not that trivial for a non-experienced in Windows builds person to figure out how to do it.</p>\n<p>The second script allows too few functionality to be built, although it is automatic as the proposed one.</p>\n<p>The goal here is not to replace something existing, but to provide a tool for end-user to be simple to use (just click twice with your mouse) and allow building Caffe2 with maximum supported options.</p>\n<p>The next step will be adding Visual Studio 2017 support, and the final is to add support of<br>\nglog, gflags, opencv, lmdb and probably leveldb (the last one is not that simple in Windows).</p>", "body_text": "The goal of the new script is to provide convinient end-user tool, that being clicked builds you Caffe2 in Windows with VIsual Studios. It doesn't mean replacing something existing for well-qualified users.\nAt the moment it supports only Visual Studio 2015.\nHowever it is probably already more convenient for end-user with VS2015, then the existing two scripts\ntools\\build_pytorch_libs.bat\nand\nscripts\\build_windows.bat.\nThe first script requires some user experience to be used correctly. In case of the proposed script both Debug and Release builds are automatically performed with correct CMAKE_C_COMPILER, CMAKE_CXX_COMPILER, CMAKE_LINKER, vcvars64.bat. On my PC it is required to have enough heap space to build caffe2_gpu.dll with pdbs (in Debug with all symbols). It is not that trivial for a non-experienced in Windows builds person to figure out how to do it.\nThe second script allows too few functionality to be built, although it is automatic as the proposed one.\nThe goal here is not to replace something existing, but to provide a tool for end-user to be simple to use (just click twice with your mouse) and allow building Caffe2 with maximum supported options.\nThe next step will be adding Visual Studio 2017 support, and the final is to add support of\nglog, gflags, opencv, lmdb and probably leveldb (the last one is not that simple in Windows).", "in_reply_to_id": 230574292}