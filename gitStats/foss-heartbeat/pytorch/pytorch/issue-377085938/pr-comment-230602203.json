{"url": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/230602203", "pull_request_review_id": 171376165, "id": 230602203, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIzMDYwMjIwMw==", "diff_hunk": "@@ -523,6 +523,7 @@ if (BUILD_PYTHON)\n       caffe2_pybind11_state caffe2_library)\n   if (WIN32)\n     target_link_libraries(caffe2_pybind11_state ${PYTHON_LIBRARIES})\n+    target_link_libraries(caffe2_pybind11_state onnx_proto)", "path": "caffe2/CMakeLists.txt", "position": 4, "original_position": 4, "commit_id": "147c7f735d90054283afe1f78126a85fa03336bd", "original_commit_id": "35c094643b5725f1a59c6de6c7fb863708beaf44", "user": {"login": "ArutyunovG", "id": 10763026, "node_id": "MDQ6VXNlcjEwNzYzMDI2", "avatar_url": "https://avatars0.githubusercontent.com/u/10763026?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ArutyunovG", "html_url": "https://github.com/ArutyunovG", "followers_url": "https://api.github.com/users/ArutyunovG/followers", "following_url": "https://api.github.com/users/ArutyunovG/following{/other_user}", "gists_url": "https://api.github.com/users/ArutyunovG/gists{/gist_id}", "starred_url": "https://api.github.com/users/ArutyunovG/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ArutyunovG/subscriptions", "organizations_url": "https://api.github.com/users/ArutyunovG/orgs", "repos_url": "https://api.github.com/users/ArutyunovG/repos", "events_url": "https://api.github.com/users/ArutyunovG/events{/privacy}", "received_events_url": "https://api.github.com/users/ArutyunovG/received_events", "type": "User", "site_admin": false}, "body": "`add_library(onnx_proto ${ONNX_PROTO_SRCS} ${ONNX_PROTO_HDRS})` stays in third_party\\onnx, so BUILD_SHARED_LIBS variable doesn't affect it.\r\n\r\nPybind is declared as\r\n\r\n`add_library(caffe2_pybind11_state MODULE ${Caffe2_CPU_PYTHON_SRCS})`\r\n\r\nAs far as I am aware specifically in Windows (but not other platforms) MODULE and SHARED are essentially the same (dll).  \r\n.pyd extension is used just for python import statement to work.\r\n\r\nIf .pyd is just dll, then we definitely need to link it with unresolved externals as any other dll. \r\n\r\n--------------\r\n\r\nI experimented with BUILD_SHARED_LIBS variable in cmake.\r\nSetting it to OFF results in too big caffe2.lib file in case of Debug build. Consequently, I get an error when trying to build pybind:\r\n\r\n> D:\\MyPytorch\\pytorch\\build\\Debug\\lib\\Debug\\caffe2.lib : fatal error LNK1248: image size (10023B2FA) exceeds maximum allowable size (FFFFFFFF) [D:\\MyPytorch\\pytorch\\build\\Debug\\caff\r\n>        e2\\caffe2.vcxproj]\r\n\r\nMy cl.exe compiler is explicitly set to be x64 (as in deleted script).\r\n\r\nIt seems that for building pybind BUILD_SHARED_LIBS==ON is the only option for CMAKE_BUILD_TYPE==Debug case. In this case caffe2.dll is compiled and caffe2.lib is just an import library for that dll.", "created_at": "2018-11-04T19:45:08Z", "updated_at": "2018-11-23T15:54:15Z", "html_url": "https://github.com/pytorch/pytorch/pull/13550#discussion_r230602203", "pull_request_url": "https://api.github.com/repos/pytorch/pytorch/pulls/13550", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/230602203"}, "html": {"href": "https://github.com/pytorch/pytorch/pull/13550#discussion_r230602203"}, "pull_request": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/13550"}}, "body_html": "<p><code>add_library(onnx_proto ${ONNX_PROTO_SRCS} ${ONNX_PROTO_HDRS})</code> stays in third_party\\onnx, so BUILD_SHARED_LIBS variable doesn't affect it.</p>\n<p>Pybind is declared as</p>\n<p><code>add_library(caffe2_pybind11_state MODULE ${Caffe2_CPU_PYTHON_SRCS})</code></p>\n<p>As far as I am aware specifically in Windows (but not other platforms) MODULE and SHARED are essentially the same (dll).<br>\n.pyd extension is used just for python import statement to work.</p>\n<p>If .pyd is just dll, then we definitely need to link it with unresolved externals as any other dll.</p>\n<hr>\n<p>I experimented with BUILD_SHARED_LIBS variable in cmake.<br>\nSetting it to OFF results in too big caffe2.lib file in case of Debug build. Consequently, I get an error when trying to build pybind:</p>\n<blockquote>\n<p>D:\\MyPytorch\\pytorch\\build\\Debug\\lib\\Debug\\caffe2.lib : fatal error LNK1248: image size (10023B2FA) exceeds maximum allowable size (FFFFFFFF) [D:\\MyPytorch\\pytorch\\build\\Debug\\caff<br>\ne2\\caffe2.vcxproj]</p>\n</blockquote>\n<p>My cl.exe compiler is explicitly set to be x64 (as in deleted script).</p>\n<p>It seems that for building pybind BUILD_SHARED_LIBS==ON is the only option for CMAKE_BUILD_TYPE==Debug case. In this case caffe2.dll is compiled and caffe2.lib is just an import library for that dll.</p>", "body_text": "add_library(onnx_proto ${ONNX_PROTO_SRCS} ${ONNX_PROTO_HDRS}) stays in third_party\\onnx, so BUILD_SHARED_LIBS variable doesn't affect it.\nPybind is declared as\nadd_library(caffe2_pybind11_state MODULE ${Caffe2_CPU_PYTHON_SRCS})\nAs far as I am aware specifically in Windows (but not other platforms) MODULE and SHARED are essentially the same (dll).\n.pyd extension is used just for python import statement to work.\nIf .pyd is just dll, then we definitely need to link it with unresolved externals as any other dll.\n\nI experimented with BUILD_SHARED_LIBS variable in cmake.\nSetting it to OFF results in too big caffe2.lib file in case of Debug build. Consequently, I get an error when trying to build pybind:\n\nD:\\MyPytorch\\pytorch\\build\\Debug\\lib\\Debug\\caffe2.lib : fatal error LNK1248: image size (10023B2FA) exceeds maximum allowable size (FFFFFFFF) [D:\\MyPytorch\\pytorch\\build\\Debug\\caff\ne2\\caffe2.vcxproj]\n\nMy cl.exe compiler is explicitly set to be x64 (as in deleted script).\nIt seems that for building pybind BUILD_SHARED_LIBS==ON is the only option for CMAKE_BUILD_TYPE==Debug case. In this case caffe2.dll is compiled and caffe2.lib is just an import library for that dll.", "in_reply_to_id": 230574160}