{"url": "https://api.github.com/repos/pytorch/pytorch/issues/458", "repository_url": "https://api.github.com/repos/pytorch/pytorch", "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/458/labels{/name}", "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/458/comments", "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/458/events", "html_url": "https://github.com/pytorch/pytorch/issues/458", "id": 201174380, "node_id": "MDU6SXNzdWUyMDExNzQzODA=", "number": 458, "title": "`repeat` missing for Variable", "user": {"login": "adamlerer", "id": 5702157, "node_id": "MDQ6VXNlcjU3MDIxNTc=", "avatar_url": "https://avatars2.githubusercontent.com/u/5702157?v=4", "gravatar_id": "", "url": "https://api.github.com/users/adamlerer", "html_url": "https://github.com/adamlerer", "followers_url": "https://api.github.com/users/adamlerer/followers", "following_url": "https://api.github.com/users/adamlerer/following{/other_user}", "gists_url": "https://api.github.com/users/adamlerer/gists{/gist_id}", "starred_url": "https://api.github.com/users/adamlerer/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/adamlerer/subscriptions", "organizations_url": "https://api.github.com/users/adamlerer/orgs", "repos_url": "https://api.github.com/users/adamlerer/repos", "events_url": "https://api.github.com/users/adamlerer/events{/privacy}", "received_events_url": "https://api.github.com/users/adamlerer/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 424131847, "node_id": "MDU6TGFiZWw0MjQxMzE4NDc=", "url": "https://api.github.com/repos/pytorch/pytorch/labels/bug", "name": "bug", "color": "b60205", "default": true}, {"id": 443484135, "node_id": "MDU6TGFiZWw0NDM0ODQxMzU=", "url": "https://api.github.com/repos/pytorch/pytorch/labels/high%20priority", "name": "high priority", "color": "F22613", "default": false}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-01-17T04:34:25Z", "updated_at": "2017-01-18T21:47:30Z", "closed_at": "2017-01-18T21:47:30Z", "author_association": "CONTRIBUTOR", "body_html": "<pre><code>In [1]: import torch\npo\nIn [2]: from torch.autograd import Variable\n\nIn [3]: v = Variable(torch.Tensor(5))\n\nIn [4]: v.repeat(3)\n---------------------------------------------------------------------------\nAttributeError                            Traceback (most recent call last)\n&lt;ipython-input-4-420a652fee7c&gt; in &lt;module&gt;()\n----&gt; 1 v.repeat(3)\n\n/data/users/alerer/pytorch/pytorch/torch/autograd/variable.py in __getattr__(self, name)\n     84         if name in self._fallthrough_methods:\n     85             return getattr(self.data, name)\n---&gt; 86         raise AttributeError(name)\n     87\n     88     def __getitem__(self, key):\n\nAttributeError: repeat\n</code></pre>", "body_text": "In [1]: import torch\npo\nIn [2]: from torch.autograd import Variable\n\nIn [3]: v = Variable(torch.Tensor(5))\n\nIn [4]: v.repeat(3)\n---------------------------------------------------------------------------\nAttributeError                            Traceback (most recent call last)\n<ipython-input-4-420a652fee7c> in <module>()\n----> 1 v.repeat(3)\n\n/data/users/alerer/pytorch/pytorch/torch/autograd/variable.py in __getattr__(self, name)\n     84         if name in self._fallthrough_methods:\n     85             return getattr(self.data, name)\n---> 86         raise AttributeError(name)\n     87\n     88     def __getitem__(self, key):\n\nAttributeError: repeat", "body": "```\r\nIn [1]: import torch\r\npo\r\nIn [2]: from torch.autograd import Variable\r\n\r\nIn [3]: v = Variable(torch.Tensor(5))\r\n\r\nIn [4]: v.repeat(3)\r\n---------------------------------------------------------------------------\r\nAttributeError                            Traceback (most recent call last)\r\n<ipython-input-4-420a652fee7c> in <module>()\r\n----> 1 v.repeat(3)\r\n\r\n/data/users/alerer/pytorch/pytorch/torch/autograd/variable.py in __getattr__(self, name)\r\n     84         if name in self._fallthrough_methods:\r\n     85             return getattr(self.data, name)\r\n---> 86         raise AttributeError(name)\r\n     87\r\n     88     def __getitem__(self, key):\r\n\r\nAttributeError: repeat\r\n```"}