{"url": "https://api.github.com/repos/pytorch/pytorch/issues/comments/435461168", "html_url": "https://github.com/pytorch/pytorch/pull/13501#issuecomment-435461168", "issue_url": "https://api.github.com/repos/pytorch/pytorch/issues/13501", "id": 435461168, "node_id": "MDEyOklzc3VlQ29tbWVudDQzNTQ2MTE2OA==", "user": {"login": "zdevito", "id": 370202, "node_id": "MDQ6VXNlcjM3MDIwMg==", "avatar_url": "https://avatars0.githubusercontent.com/u/370202?v=4", "gravatar_id": "", "url": "https://api.github.com/users/zdevito", "html_url": "https://github.com/zdevito", "followers_url": "https://api.github.com/users/zdevito/followers", "following_url": "https://api.github.com/users/zdevito/following{/other_user}", "gists_url": "https://api.github.com/users/zdevito/gists{/gist_id}", "starred_url": "https://api.github.com/users/zdevito/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/zdevito/subscriptions", "organizations_url": "https://api.github.com/users/zdevito/orgs", "repos_url": "https://api.github.com/users/zdevito/repos", "events_url": "https://api.github.com/users/zdevito/events{/privacy}", "received_events_url": "https://api.github.com/users/zdevito/received_events", "type": "User", "site_admin": false}, "created_at": "2018-11-02T17:59:36Z", "updated_at": "2018-11-02T17:59:36Z", "author_association": "CONTRIBUTOR", "body_html": "<p><a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=4685384\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/jamesr66a\">@jamesr66a</a> Yes, which seems fine to me. When you call setUniqueName and there is already another thing with that name, the only guarantee is that the thing you are calling setUniqueName on will have that name after the call.</p>\n<p>I had to add more changes to make onnx still work, because it is using uniqueNames in a semantically meaningful way during export.</p>", "body_text": "@jamesr66a Yes, which seems fine to me. When you call setUniqueName and there is already another thing with that name, the only guarantee is that the thing you are calling setUniqueName on will have that name after the call.\nI had to add more changes to make onnx still work, because it is using uniqueNames in a semantically meaningful way during export.", "body": "@jamesr66a Yes, which seems fine to me. When you call setUniqueName and there is already another thing with that name, the only guarantee is that the thing you are calling setUniqueName on will have that name after the call. \r\n\r\nI had to add more changes to make onnx still work, because it is using uniqueNames in a semantically meaningful way during export."}