{"url": "https://api.github.com/repos/pytorch/pytorch/pulls/2796", "id": 142008539, "node_id": "MDExOlB1bGxSZXF1ZXN0MTQyMDA4NTM5", "html_url": "https://github.com/pytorch/pytorch/pull/2796", "diff_url": "https://github.com/pytorch/pytorch/pull/2796.diff", "patch_url": "https://github.com/pytorch/pytorch/pull/2796.patch", "issue_url": "https://api.github.com/repos/pytorch/pytorch/issues/2796", "number": 2796, "state": "closed", "locked": false, "title": "address issue #1488 by using defaultdict in load_state_dict", "user": {"login": "randxie", "id": 10520307, "node_id": "MDQ6VXNlcjEwNTIwMzA3", "avatar_url": "https://avatars0.githubusercontent.com/u/10520307?v=4", "gravatar_id": "", "url": "https://api.github.com/users/randxie", "html_url": "https://github.com/randxie", "followers_url": "https://api.github.com/users/randxie/followers", "following_url": "https://api.github.com/users/randxie/following{/other_user}", "gists_url": "https://api.github.com/users/randxie/gists{/gist_id}", "starred_url": "https://api.github.com/users/randxie/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/randxie/subscriptions", "organizations_url": "https://api.github.com/users/randxie/orgs", "repos_url": "https://api.github.com/users/randxie/repos", "events_url": "https://api.github.com/users/randxie/events{/privacy}", "received_events_url": "https://api.github.com/users/randxie/received_events", "type": "User", "site_admin": false}, "body": "Try PR another time. Based on Adam's feedback, when restoring state in the function \"load_state_dict\" of class \"optimizer.py\", use defaultdict to maintain consistency with self.state. \r\n\r\n**Test Procedure**\r\n(1) Use the following test case to verify the restored state is indeed a defaultdict.\r\n(2) Run test_optim.py to make sure no other impact.\r\n\r\n----------------------------- Test Case -------------------------------------------------\r\n```python\r\nimport torch\r\nfrom torch.optim import SGD\r\nfrom torch.autograd import Variable\r\n\r\n# initialize model\r\nN, D_in, H, D_out = 64, 1000, 100, 10\r\nx = Variable(torch.randn(N, D_in))\r\ny = Variable(torch.randn(N, D_out), requires_grad=False)\r\nmodel = torch.nn.Sequential(\r\n          torch.nn.Linear(D_in, H),\r\n          torch.nn.ReLU(),\r\n          torch.nn.Linear(H, D_out),\r\n        )\r\n\r\n# initialize optimizer\r\noptimizer = torch.optim.SGD(model.parameters(), lr=0.1, momentum=0.9)\r\n\r\n# state should be defaultdict\r\noriginal_type = type(optimizer.state)\r\nprint(original_type)\r\n\r\n# after saving and loading, the restored state should also be a defaultdict\r\ntorch.save(optimizer.state_dict(), 'optim.pth') \r\noptimizer.load_state_dict(torch.load('optim.pth')) \r\nrestored_type = type(optimizer.state)\r\nprint(restored_type)\r\n\r\nassert(original_type==restored_type)\r\n```", "created_at": "2017-09-20T04:34:39Z", "updated_at": "2017-09-20T18:56:24Z", "closed_at": "2017-09-20T18:56:22Z", "merged_at": "2017-09-20T18:56:22Z", "merge_commit_sha": "1a83c372ecb0c81bdd5110c516cc6e9f9554a469", "assignee": null, "assignees": [], "requested_reviewers": [], "requested_teams": [], "labels": [], "milestone": null, "commits_url": "https://api.github.com/repos/pytorch/pytorch/pulls/2796/commits", "review_comments_url": "https://api.github.com/repos/pytorch/pytorch/pulls/2796/comments", "review_comment_url": "https://api.github.com/repos/pytorch/pytorch/pulls/comments{/number}", "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/2796/comments", "statuses_url": "https://api.github.com/repos/pytorch/pytorch/statuses/a95a05681e2b0afc34f87447f1357a804824e0ef", "head": {"label": "randxie:master", "ref": "master", "sha": "a95a05681e2b0afc34f87447f1357a804824e0ef", "user": {"login": "randxie", "id": 10520307, "node_id": "MDQ6VXNlcjEwNTIwMzA3", "avatar_url": "https://avatars0.githubusercontent.com/u/10520307?v=4", "gravatar_id": "", "url": "https://api.github.com/users/randxie", "html_url": "https://github.com/randxie", "followers_url": "https://api.github.com/users/randxie/followers", "following_url": "https://api.github.com/users/randxie/following{/other_user}", "gists_url": "https://api.github.com/users/randxie/gists{/gist_id}", "starred_url": "https://api.github.com/users/randxie/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/randxie/subscriptions", "organizations_url": "https://api.github.com/users/randxie/orgs", "repos_url": "https://api.github.com/users/randxie/repos", "events_url": "https://api.github.com/users/randxie/events{/privacy}", "received_events_url": "https://api.github.com/users/randxie/received_events", "type": "User", "site_admin": false}, "repo": {"id": 101587005, "node_id": "MDEwOlJlcG9zaXRvcnkxMDE1ODcwMDU=", "name": "pytorch", "full_name": "randxie/pytorch", "private": false, "owner": {"login": "randxie", "id": 10520307, "node_id": "MDQ6VXNlcjEwNTIwMzA3", "avatar_url": "https://avatars0.githubusercontent.com/u/10520307?v=4", "gravatar_id": "", "url": "https://api.github.com/users/randxie", "html_url": "https://github.com/randxie", "followers_url": "https://api.github.com/users/randxie/followers", "following_url": "https://api.github.com/users/randxie/following{/other_user}", "gists_url": "https://api.github.com/users/randxie/gists{/gist_id}", "starred_url": "https://api.github.com/users/randxie/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/randxie/subscriptions", "organizations_url": "https://api.github.com/users/randxie/orgs", "repos_url": "https://api.github.com/users/randxie/repos", "events_url": "https://api.github.com/users/randxie/events{/privacy}", "received_events_url": "https://api.github.com/users/randxie/received_events", "type": "User", "site_admin": false}, "html_url": "https://github.com/randxie/pytorch", "description": "Tensors and Dynamic neural networks in Python  with strong GPU acceleration", "fork": true, "url": "https://api.github.com/repos/randxie/pytorch", "forks_url": "https://api.github.com/repos/randxie/pytorch/forks", "keys_url": "https://api.github.com/repos/randxie/pytorch/keys{/key_id}", "collaborators_url": "https://api.github.com/repos/randxie/pytorch/collaborators{/collaborator}", "teams_url": "https://api.github.com/repos/randxie/pytorch/teams", "hooks_url": "https://api.github.com/repos/randxie/pytorch/hooks", "issue_events_url": "https://api.github.com/repos/randxie/pytorch/issues/events{/number}", "events_url": "https://api.github.com/repos/randxie/pytorch/events", "assignees_url": "https://api.github.com/repos/randxie/pytorch/assignees{/user}", "branches_url": "https://api.github.com/repos/randxie/pytorch/branches{/branch}", "tags_url": "https://api.github.com/repos/randxie/pytorch/tags", "blobs_url": "https://api.github.com/repos/randxie/pytorch/git/blobs{/sha}", "git_tags_url": "https://api.github.com/repos/randxie/pytorch/git/tags{/sha}", "git_refs_url": "https://api.github.com/repos/randxie/pytorch/git/refs{/sha}", "trees_url": "https://api.github.com/repos/randxie/pytorch/git/trees{/sha}", "statuses_url": "https://api.github.com/repos/randxie/pytorch/statuses/{sha}", "languages_url": "https://api.github.com/repos/randxie/pytorch/languages", "stargazers_url": "https://api.github.com/repos/randxie/pytorch/stargazers", "contributors_url": "https://api.github.com/repos/randxie/pytorch/contributors", "subscribers_url": "https://api.github.com/repos/randxie/pytorch/subscribers", "subscription_url": "https://api.github.com/repos/randxie/pytorch/subscription", "commits_url": "https://api.github.com/repos/randxie/pytorch/commits{/sha}", "git_commits_url": "https://api.github.com/repos/randxie/pytorch/git/commits{/sha}", "comments_url": "https://api.github.com/repos/randxie/pytorch/comments{/number}", "issue_comment_url": "https://api.github.com/repos/randxie/pytorch/issues/comments{/number}", "contents_url": "https://api.github.com/repos/randxie/pytorch/contents/{+path}", "compare_url": "https://api.github.com/repos/randxie/pytorch/compare/{base}...{head}", "merges_url": "https://api.github.com/repos/randxie/pytorch/merges", "archive_url": "https://api.github.com/repos/randxie/pytorch/{archive_format}{/ref}", "downloads_url": "https://api.github.com/repos/randxie/pytorch/downloads", "issues_url": "https://api.github.com/repos/randxie/pytorch/issues{/number}", "pulls_url": "https://api.github.com/repos/randxie/pytorch/pulls{/number}", "milestones_url": "https://api.github.com/repos/randxie/pytorch/milestones{/number}", "notifications_url": "https://api.github.com/repos/randxie/pytorch/notifications{?since,all,participating}", "labels_url": "https://api.github.com/repos/randxie/pytorch/labels{/name}", "releases_url": "https://api.github.com/repos/randxie/pytorch/releases{/id}", "deployments_url": "https://api.github.com/repos/randxie/pytorch/deployments", "created_at": "2017-08-27T23:39:41Z", "updated_at": "2017-08-27T23:39:47Z", "pushed_at": "2017-10-08T03:06:54Z", "git_url": "git://github.com/randxie/pytorch.git", "ssh_url": "git@github.com:randxie/pytorch.git", "clone_url": "https://github.com/randxie/pytorch.git", "svn_url": "https://github.com/randxie/pytorch", "homepage": "http://pytorch.org", "size": 15979, "stargazers_count": 0, "watchers_count": 0, "language": "Python", "has_issues": false, "has_projects": true, "has_downloads": true, "has_wiki": true, "has_pages": false, "forks_count": 0, "mirror_url": null, "archived": false, "open_issues_count": 0, "license": {"key": "other", "name": "Other", "spdx_id": "NOASSERTION", "url": null, "node_id": "MDc6TGljZW5zZTA="}, "forks": 0, "open_issues": 0, "watchers": 0, "default_branch": "master"}}, "base": {"label": "pytorch:master", "ref": "master", "sha": "5deacb5bce8bfb41662b57a61ea635c44d2a347f", "user": {"login": "pytorch", "id": 21003710, "node_id": "MDEyOk9yZ2FuaXphdGlvbjIxMDAzNzEw", "avatar_url": "https://avatars3.githubusercontent.com/u/21003710?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pytorch", "html_url": "https://github.com/pytorch", "followers_url": "https://api.github.com/users/pytorch/followers", "following_url": "https://api.github.com/users/pytorch/following{/other_user}", "gists_url": "https://api.github.com/users/pytorch/gists{/gist_id}", "starred_url": "https://api.github.com/users/pytorch/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pytorch/subscriptions", "organizations_url": "https://api.github.com/users/pytorch/orgs", "repos_url": "https://api.github.com/users/pytorch/repos", "events_url": "https://api.github.com/users/pytorch/events{/privacy}", "received_events_url": "https://api.github.com/users/pytorch/received_events", "type": "Organization", "site_admin": false}, "repo": {"id": 65600975, "node_id": "MDEwOlJlcG9zaXRvcnk2NTYwMDk3NQ==", "name": "pytorch", "full_name": "pytorch/pytorch", "private": false, "owner": {"login": "pytorch", "id": 21003710, "node_id": "MDEyOk9yZ2FuaXphdGlvbjIxMDAzNzEw", "avatar_url": "https://avatars3.githubusercontent.com/u/21003710?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pytorch", "html_url": "https://github.com/pytorch", "followers_url": "https://api.github.com/users/pytorch/followers", "following_url": "https://api.github.com/users/pytorch/following{/other_user}", "gists_url": "https://api.github.com/users/pytorch/gists{/gist_id}", "starred_url": "https://api.github.com/users/pytorch/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pytorch/subscriptions", "organizations_url": "https://api.github.com/users/pytorch/orgs", "repos_url": "https://api.github.com/users/pytorch/repos", "events_url": "https://api.github.com/users/pytorch/events{/privacy}", "received_events_url": "https://api.github.com/users/pytorch/received_events", "type": "Organization", "site_admin": false}, "html_url": "https://github.com/pytorch/pytorch", "description": "Tensors and Dynamic neural networks in Python  with strong GPU acceleration", "fork": false, "url": "https://api.github.com/repos/pytorch/pytorch", "forks_url": "https://api.github.com/repos/pytorch/pytorch/forks", "keys_url": "https://api.github.com/repos/pytorch/pytorch/keys{/key_id}", "collaborators_url": "https://api.github.com/repos/pytorch/pytorch/collaborators{/collaborator}", "teams_url": "https://api.github.com/repos/pytorch/pytorch/teams", "hooks_url": "https://api.github.com/repos/pytorch/pytorch/hooks", "issue_events_url": "https://api.github.com/repos/pytorch/pytorch/issues/events{/number}", "events_url": "https://api.github.com/repos/pytorch/pytorch/events", "assignees_url": "https://api.github.com/repos/pytorch/pytorch/assignees{/user}", "branches_url": "https://api.github.com/repos/pytorch/pytorch/branches{/branch}", "tags_url": "https://api.github.com/repos/pytorch/pytorch/tags", "blobs_url": "https://api.github.com/repos/pytorch/pytorch/git/blobs{/sha}", "git_tags_url": "https://api.github.com/repos/pytorch/pytorch/git/tags{/sha}", "git_refs_url": "https://api.github.com/repos/pytorch/pytorch/git/refs{/sha}", "trees_url": "https://api.github.com/repos/pytorch/pytorch/git/trees{/sha}", "statuses_url": "https://api.github.com/repos/pytorch/pytorch/statuses/{sha}", "languages_url": "https://api.github.com/repos/pytorch/pytorch/languages", "stargazers_url": "https://api.github.com/repos/pytorch/pytorch/stargazers", "contributors_url": "https://api.github.com/repos/pytorch/pytorch/contributors", "subscribers_url": "https://api.github.com/repos/pytorch/pytorch/subscribers", "subscription_url": "https://api.github.com/repos/pytorch/pytorch/subscription", "commits_url": "https://api.github.com/repos/pytorch/pytorch/commits{/sha}", "git_commits_url": "https://api.github.com/repos/pytorch/pytorch/git/commits{/sha}", "comments_url": "https://api.github.com/repos/pytorch/pytorch/comments{/number}", "issue_comment_url": "https://api.github.com/repos/pytorch/pytorch/issues/comments{/number}", "contents_url": "https://api.github.com/repos/pytorch/pytorch/contents/{+path}", "compare_url": "https://api.github.com/repos/pytorch/pytorch/compare/{base}...{head}", "merges_url": "https://api.github.com/repos/pytorch/pytorch/merges", "archive_url": "https://api.github.com/repos/pytorch/pytorch/{archive_format}{/ref}", "downloads_url": "https://api.github.com/repos/pytorch/pytorch/downloads", "issues_url": "https://api.github.com/repos/pytorch/pytorch/issues{/number}", "pulls_url": "https://api.github.com/repos/pytorch/pytorch/pulls{/number}", "milestones_url": "https://api.github.com/repos/pytorch/pytorch/milestones{/number}", "notifications_url": "https://api.github.com/repos/pytorch/pytorch/notifications{?since,all,participating}", "labels_url": "https://api.github.com/repos/pytorch/pytorch/labels{/name}", "releases_url": "https://api.github.com/repos/pytorch/pytorch/releases{/id}", "deployments_url": "https://api.github.com/repos/pytorch/pytorch/deployments", "created_at": "2016-08-13T05:26:41Z", "updated_at": "2018-11-24T12:35:43Z", "pushed_at": "2018-11-24T12:42:01Z", "git_url": "git://github.com/pytorch/pytorch.git", "ssh_url": "git@github.com:pytorch/pytorch.git", "clone_url": "https://github.com/pytorch/pytorch.git", "svn_url": "https://github.com/pytorch/pytorch", "homepage": "http://pytorch.org", "size": 89656, "stargazers_count": 21589, "watchers_count": 21589, "language": "C++", "has_issues": true, "has_projects": true, "has_downloads": true, "has_wiki": true, "has_pages": false, "forks_count": 5153, "mirror_url": null, "archived": false, "open_issues_count": 2197, "license": {"key": "other", "name": "Other", "spdx_id": "NOASSERTION", "url": null, "node_id": "MDc6TGljZW5zZTA="}, "forks": 5153, "open_issues": 2197, "watchers": 21589, "default_branch": "master"}}, "_links": {"self": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/2796"}, "html": {"href": "https://github.com/pytorch/pytorch/pull/2796"}, "issue": {"href": "https://api.github.com/repos/pytorch/pytorch/issues/2796"}, "comments": {"href": "https://api.github.com/repos/pytorch/pytorch/issues/2796/comments"}, "review_comments": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/2796/comments"}, "review_comment": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/comments{/number}"}, "commits": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/2796/commits"}, "statuses": {"href": "https://api.github.com/repos/pytorch/pytorch/statuses/a95a05681e2b0afc34f87447f1357a804824e0ef"}}, "author_association": "CONTRIBUTOR", "body_html": "<p>Try PR another time. Based on Adam's feedback, when restoring state in the function \"load_state_dict\" of class \"optimizer.py\", use defaultdict to maintain consistency with self.state.</p>\n<p><strong>Test Procedure</strong><br>\n(1) Use the following test case to verify the restored state is indeed a defaultdict.<br>\n(2) Run test_optim.py to make sure no other impact.</p>\n<p>----------------------------- Test Case -------------------------------------------------</p>\n<div class=\"highlight highlight-source-python\"><pre><span class=\"pl-k\">import</span> torch\n<span class=\"pl-k\">from</span> torch.optim <span class=\"pl-k\">import</span> <span class=\"pl-c1\">SGD</span>\n<span class=\"pl-k\">from</span> torch.autograd <span class=\"pl-k\">import</span> Variable\n\n<span class=\"pl-c\"><span class=\"pl-c\">#</span> initialize model</span>\nN, D_in, H, D_out <span class=\"pl-k\">=</span> <span class=\"pl-c1\">64</span>, <span class=\"pl-c1\">1000</span>, <span class=\"pl-c1\">100</span>, <span class=\"pl-c1\">10</span>\nx <span class=\"pl-k\">=</span> Variable(torch.randn(N, D_in))\ny <span class=\"pl-k\">=</span> Variable(torch.randn(N, D_out), <span class=\"pl-v\">requires_grad</span><span class=\"pl-k\">=</span><span class=\"pl-c1\">False</span>)\nmodel <span class=\"pl-k\">=</span> torch.nn.Sequential(\n          torch.nn.Linear(D_in, H),\n          torch.nn.ReLU(),\n          torch.nn.Linear(H, D_out),\n        )\n\n<span class=\"pl-c\"><span class=\"pl-c\">#</span> initialize optimizer</span>\noptimizer <span class=\"pl-k\">=</span> torch.optim.SGD(model.parameters(), <span class=\"pl-v\">lr</span><span class=\"pl-k\">=</span><span class=\"pl-c1\">0.1</span>, <span class=\"pl-v\">momentum</span><span class=\"pl-k\">=</span><span class=\"pl-c1\">0.9</span>)\n\n<span class=\"pl-c\"><span class=\"pl-c\">#</span> state should be defaultdict</span>\noriginal_type <span class=\"pl-k\">=</span> <span class=\"pl-c1\">type</span>(optimizer.state)\n<span class=\"pl-c1\">print</span>(original_type)\n\n<span class=\"pl-c\"><span class=\"pl-c\">#</span> after saving and loading, the restored state should also be a defaultdict</span>\ntorch.save(optimizer.state_dict(), <span class=\"pl-s\"><span class=\"pl-pds\">'</span>optim.pth<span class=\"pl-pds\">'</span></span>) \noptimizer.load_state_dict(torch.load(<span class=\"pl-s\"><span class=\"pl-pds\">'</span>optim.pth<span class=\"pl-pds\">'</span></span>)) \nrestored_type <span class=\"pl-k\">=</span> <span class=\"pl-c1\">type</span>(optimizer.state)\n<span class=\"pl-c1\">print</span>(restored_type)\n\n<span class=\"pl-k\">assert</span>(original_type<span class=\"pl-k\">==</span>restored_type)</pre></div>", "body_text": "Try PR another time. Based on Adam's feedback, when restoring state in the function \"load_state_dict\" of class \"optimizer.py\", use defaultdict to maintain consistency with self.state.\nTest Procedure\n(1) Use the following test case to verify the restored state is indeed a defaultdict.\n(2) Run test_optim.py to make sure no other impact.\n----------------------------- Test Case -------------------------------------------------\nimport torch\nfrom torch.optim import SGD\nfrom torch.autograd import Variable\n\n# initialize model\nN, D_in, H, D_out = 64, 1000, 100, 10\nx = Variable(torch.randn(N, D_in))\ny = Variable(torch.randn(N, D_out), requires_grad=False)\nmodel = torch.nn.Sequential(\n          torch.nn.Linear(D_in, H),\n          torch.nn.ReLU(),\n          torch.nn.Linear(H, D_out),\n        )\n\n# initialize optimizer\noptimizer = torch.optim.SGD(model.parameters(), lr=0.1, momentum=0.9)\n\n# state should be defaultdict\noriginal_type = type(optimizer.state)\nprint(original_type)\n\n# after saving and loading, the restored state should also be a defaultdict\ntorch.save(optimizer.state_dict(), 'optim.pth') \noptimizer.load_state_dict(torch.load('optim.pth')) \nrestored_type = type(optimizer.state)\nprint(restored_type)\n\nassert(original_type==restored_type)", "merged": true, "mergeable": null, "rebaseable": null, "mergeable_state": "unknown", "merged_by": {"login": "apaszke", "id": 4583066, "node_id": "MDQ6VXNlcjQ1ODMwNjY=", "avatar_url": "https://avatars3.githubusercontent.com/u/4583066?v=4", "gravatar_id": "", "url": "https://api.github.com/users/apaszke", "html_url": "https://github.com/apaszke", "followers_url": "https://api.github.com/users/apaszke/followers", "following_url": "https://api.github.com/users/apaszke/following{/other_user}", "gists_url": "https://api.github.com/users/apaszke/gists{/gist_id}", "starred_url": "https://api.github.com/users/apaszke/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/apaszke/subscriptions", "organizations_url": "https://api.github.com/users/apaszke/orgs", "repos_url": "https://api.github.com/users/apaszke/repos", "events_url": "https://api.github.com/users/apaszke/events{/privacy}", "received_events_url": "https://api.github.com/users/apaszke/received_events", "type": "User", "site_admin": false}, "comments": 1, "review_comments": 0, "maintainer_can_modify": false, "commits": 1, "additions": 2, "deletions": 1, "changed_files": 1}