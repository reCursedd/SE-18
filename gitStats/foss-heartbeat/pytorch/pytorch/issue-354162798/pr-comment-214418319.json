{"url": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/214418319", "pull_request_review_id": 151478663, "id": 214418319, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIxNDQxODMxOQ==", "diff_hunk": "@@ -254,6 +298,19 @@ class CuFFTConfig {\n       }\n \n       // set odist, onembed, base_ostride\n+#ifdef __HIP_PLATFORM_HCC__\n+      int odist = at::prod_intlist(output_sizes.slice(1, signal_ndim));\n+      std::vector<int> onembed(output_sizes.data() + 1, output_sizes.data() + signal_ndim + 1);\n+      int base_ostride = 1;\n+\n+      int sizes = *signal_sizes.data();\n+      int istride = base_istride;\n+      int iidist = idist;\n+      CUFFT_CHECK(hipfftMakePlanMany(plan(), signal_ndim, &sizes,", "path": "aten/src/ATen/native/cuda/CuFFTPlanCache.h", "position": null, "original_position": 89, "commit_id": "734d988cefccfc4d2ad2443782cc3d07f61c82ea", "original_commit_id": "2fb92ad5f2e07334080b85e29cda7a99d24e11be", "user": {"login": "ezyang", "id": 13564, "node_id": "MDQ6VXNlcjEzNTY0", "avatar_url": "https://avatars0.githubusercontent.com/u/13564?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ezyang", "html_url": "https://github.com/ezyang", "followers_url": "https://api.github.com/users/ezyang/followers", "following_url": "https://api.github.com/users/ezyang/following{/other_user}", "gists_url": "https://api.github.com/users/ezyang/gists{/gist_id}", "starred_url": "https://api.github.com/users/ezyang/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ezyang/subscriptions", "organizations_url": "https://api.github.com/users/ezyang/orgs", "repos_url": "https://api.github.com/users/ezyang/repos", "events_url": "https://api.github.com/users/ezyang/events{/privacy}", "received_events_url": "https://api.github.com/users/ezyang/received_events", "type": "User", "site_admin": false}, "body": "Uhhhh. Unless `signal_ndim` is always 1, I am **highly skeptical** that this code works. Aren't you going to buffer overflow the `&sizes` address.", "created_at": "2018-08-31T17:08:22Z", "updated_at": "2018-11-23T15:50:26Z", "html_url": "https://github.com/pytorch/pytorch/pull/10893#discussion_r214418319", "pull_request_url": "https://api.github.com/repos/pytorch/pytorch/pulls/10893", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/214418319"}, "html": {"href": "https://github.com/pytorch/pytorch/pull/10893#discussion_r214418319"}, "pull_request": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/10893"}}, "body_html": "<p>Uhhhh. Unless <code>signal_ndim</code> is always 1, I am <strong>highly skeptical</strong> that this code works. Aren't you going to buffer overflow the <code>&amp;sizes</code> address.</p>", "body_text": "Uhhhh. Unless signal_ndim is always 1, I am highly skeptical that this code works. Aren't you going to buffer overflow the &sizes address."}