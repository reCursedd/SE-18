{"url": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/214420469", "pull_request_review_id": 151481367, "id": 214420469, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIxNDQyMDQ2OQ==", "diff_hunk": "@@ -248,45 +248,62 @@ def tmp(t):\n # - disable inplace test, if set to True, no inplace test will be done (default=False)\n # - decorator, e.g., unittest.skipIf (default is no decorator)\n tests = [\n-    ('add', small_3d, lambda t: [number(3.14, 3, t)]),\n+    ('add', small_3d, lambda t: [number(3.14, 3, t)], '', types, False,\n+        \"skipIfRocm:ByteTensor,CharTensor,HalfTensor,ShortTensor\"),", "path": "test/test_cuda.py", "position": 15, "original_position": 15, "commit_id": "734d988cefccfc4d2ad2443782cc3d07f61c82ea", "original_commit_id": "2fb92ad5f2e07334080b85e29cda7a99d24e11be", "user": {"login": "ezyang", "id": 13564, "node_id": "MDQ6VXNlcjEzNTY0", "avatar_url": "https://avatars0.githubusercontent.com/u/13564?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ezyang", "html_url": "https://github.com/ezyang", "followers_url": "https://api.github.com/users/ezyang/followers", "following_url": "https://api.github.com/users/ezyang/following{/other_user}", "gists_url": "https://api.github.com/users/ezyang/gists{/gist_id}", "starred_url": "https://api.github.com/users/ezyang/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ezyang/subscriptions", "organizations_url": "https://api.github.com/users/ezyang/orgs", "repos_url": "https://api.github.com/users/ezyang/repos", "events_url": "https://api.github.com/users/ezyang/events{/privacy}", "received_events_url": "https://api.github.com/users/ezyang/received_events", "type": "User", "site_admin": false}, "body": "Spelling all of this out is a bit weird. Do you really need to specify for each test, individually, which data types work, or are there well defined \"classes\" of tensors which do or don't work? I'm seeing something like Half + Small Integral (Byte,Char,Short) + Big Integral (Int,Long) + (Float,Double)", "created_at": "2018-08-31T17:16:44Z", "updated_at": "2018-11-23T15:50:26Z", "html_url": "https://github.com/pytorch/pytorch/pull/10893#discussion_r214420469", "pull_request_url": "https://api.github.com/repos/pytorch/pytorch/pulls/10893", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/214420469"}, "html": {"href": "https://github.com/pytorch/pytorch/pull/10893#discussion_r214420469"}, "pull_request": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/10893"}}, "body_html": "<p>Spelling all of this out is a bit weird. Do you really need to specify for each test, individually, which data types work, or are there well defined \"classes\" of tensors which do or don't work? I'm seeing something like Half + Small Integral (Byte,Char,Short) + Big Integral (Int,Long) + (Float,Double)</p>", "body_text": "Spelling all of this out is a bit weird. Do you really need to specify for each test, individually, which data types work, or are there well defined \"classes\" of tensors which do or don't work? I'm seeing something like Half + Small Integral (Byte,Char,Short) + Big Integral (Int,Long) + (Float,Double)"}