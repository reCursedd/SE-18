{"url": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/217592094", "pull_request_review_id": 155342307, "id": 217592094, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIxNzU5MjA5NA==", "diff_hunk": "@@ -47,19 +110,34 @@ class SequentialImpl : public Cloneable<SequentialImpl> {\n     return clone;\n   }\n \n-  /// `reset()` is empty for `Sequential`, since it does not have parameter of\n+  /// `reset()` is empty for `Sequential`, since it does not have parameters of\n   /// its own.\n   void reset() override {}\n \n-  /// Feeds the `inputs` to the first module, then chains the output of each\n-  /// module with the input of the next, in order of construction.\n-  template <typename ReturnType = Tensor, typename... ArgumentTypes>\n-  ReturnType forward(ArgumentTypes&&... arguments) {\n+  /// Feeds `inputs` to the first module and then chains outputs to inputs,\n+  /// returning the last output.\n+  ///\n+  /// Conceptually the following loop in Python:\n+  ///\n+  /// \\rst\n+  /// .. code-block:: python\n+  ///\n+  ///   def forward(sequential, input):\n+  ///     for module in sequential:\n+  ///       input = module(input)\n+  ///     return input\n+  ///\n+  /// \\endrst\n+  ///\n+  /// The return type is taken as the first template parameter. It defaults to\n+  /// `Tensor`. If the last module in the `Sequential` returns another type `T`,\n+  /// you should call `forward<T>(inputs)` instead of just `forward(inputs)`.", "path": "torch/csrc/api/include/torch/nn/modules/sequential.h", "position": null, "original_position": 119, "commit_id": "f223e16d7f935482955fa1e7b5f3508c7e6d267f", "original_commit_id": "a31312b83872a76a9aff036ac8d7afb437232a3c", "user": {"login": "ezyang", "id": 13564, "node_id": "MDQ6VXNlcjEzNTY0", "avatar_url": "https://avatars0.githubusercontent.com/u/13564?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ezyang", "html_url": "https://github.com/ezyang", "followers_url": "https://api.github.com/users/ezyang/followers", "following_url": "https://api.github.com/users/ezyang/following{/other_user}", "gists_url": "https://api.github.com/users/ezyang/gists{/gist_id}", "starred_url": "https://api.github.com/users/ezyang/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ezyang/subscriptions", "organizations_url": "https://api.github.com/users/ezyang/orgs", "repos_url": "https://api.github.com/users/ezyang/repos", "events_url": "https://api.github.com/users/ezyang/events{/privacy}", "received_events_url": "https://api.github.com/users/ezyang/received_events", "type": "User", "site_admin": false}, "body": "Give an example?", "created_at": "2018-09-14T03:26:06Z", "updated_at": "2018-11-23T15:51:21Z", "html_url": "https://github.com/pytorch/pytorch/pull/11648#discussion_r217592094", "pull_request_url": "https://api.github.com/repos/pytorch/pytorch/pulls/11648", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/217592094"}, "html": {"href": "https://github.com/pytorch/pytorch/pull/11648#discussion_r217592094"}, "pull_request": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/11648"}}, "body_html": "<p>Give an example?</p>", "body_text": "Give an example?"}