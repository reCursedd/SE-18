{"url": "https://api.github.com/repos/pytorch/pytorch/issues/comments/343029204", "html_url": "https://github.com/pytorch/pytorch/issues/3185#issuecomment-343029204", "issue_url": "https://api.github.com/repos/pytorch/pytorch/issues/3185", "id": 343029204, "node_id": "MDEyOklzc3VlQ29tbWVudDM0MzAyOTIwNA==", "user": {"login": "stepelu", "id": 6617696, "node_id": "MDQ6VXNlcjY2MTc2OTY=", "avatar_url": "https://avatars3.githubusercontent.com/u/6617696?v=4", "gravatar_id": "", "url": "https://api.github.com/users/stepelu", "html_url": "https://github.com/stepelu", "followers_url": "https://api.github.com/users/stepelu/followers", "following_url": "https://api.github.com/users/stepelu/following{/other_user}", "gists_url": "https://api.github.com/users/stepelu/gists{/gist_id}", "starred_url": "https://api.github.com/users/stepelu/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/stepelu/subscriptions", "organizations_url": "https://api.github.com/users/stepelu/orgs", "repos_url": "https://api.github.com/users/stepelu/repos", "events_url": "https://api.github.com/users/stepelu/events{/privacy}", "received_events_url": "https://api.github.com/users/stepelu/received_events", "type": "User", "site_admin": false}, "created_at": "2017-11-09T02:34:54Z", "updated_at": "2017-11-09T02:36:25Z", "author_association": "NONE", "body_html": "<p><a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=648532\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/fritzo\">@fritzo</a> I have a reasonaly accurate implementation (not sure if that's actually needed for float32) at: <a href=\"https://github.com/stepelu/lua-sci/blob/e43411044e45840230e9d5741e5c6a9960d443ed/math.lua#L128\">https://github.com/stepelu/lua-sci/blob/e43411044e45840230e9d5741e5c6a9960d443ed/math.lua#L128</a><br>\nLua code I'm afraid, should be easy to read though, and the cited PhD thesis in the comment is relevant.<br>\nI am concerned about the numerical accuracy/stability of this approach though (and that's indeed why I didn't end up implement the Gamma distribution in my small repo), as the numerical guarantees of the function's approximation don't transfer to its derivative.<br>\nHave you done some tests in this direction?</p>", "body_text": "@fritzo I have a reasonaly accurate implementation (not sure if that's actually needed for float32) at: https://github.com/stepelu/lua-sci/blob/e43411044e45840230e9d5741e5c6a9960d443ed/math.lua#L128\nLua code I'm afraid, should be easy to read though, and the cited PhD thesis in the comment is relevant.\nI am concerned about the numerical accuracy/stability of this approach though (and that's indeed why I didn't end up implement the Gamma distribution in my small repo), as the numerical guarantees of the function's approximation don't transfer to its derivative.\nHave you done some tests in this direction?", "body": "@fritzo I have a reasonaly accurate implementation (not sure if that's actually needed for float32) at: https://github.com/stepelu/lua-sci/blob/e43411044e45840230e9d5741e5c6a9960d443ed/math.lua#L128 \r\nLua code I'm afraid, should be easy to read though, and the cited PhD thesis in the comment is relevant.\r\nI am concerned about the numerical accuracy/stability of this approach though (and that's indeed why I didn't end up implement the Gamma distribution in my small repo), as the numerical guarantees of the function's approximation don't transfer to its derivative.\r\nHave you done some tests in this direction?"}