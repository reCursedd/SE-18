{"url": "https://api.github.com/repos/pytorch/pytorch/issues/comments/338979712", "html_url": "https://github.com/pytorch/pytorch/issues/3185#issuecomment-338979712", "issue_url": "https://api.github.com/repos/pytorch/pytorch/issues/3185", "id": 338979712, "node_id": "MDEyOklzc3VlQ29tbWVudDMzODk3OTcxMg==", "user": {"login": "Kaixhin", "id": 991891, "node_id": "MDQ6VXNlcjk5MTg5MQ==", "avatar_url": "https://avatars3.githubusercontent.com/u/991891?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Kaixhin", "html_url": "https://github.com/Kaixhin", "followers_url": "https://api.github.com/users/Kaixhin/followers", "following_url": "https://api.github.com/users/Kaixhin/following{/other_user}", "gists_url": "https://api.github.com/users/Kaixhin/gists{/gist_id}", "starred_url": "https://api.github.com/users/Kaixhin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Kaixhin/subscriptions", "organizations_url": "https://api.github.com/users/Kaixhin/orgs", "repos_url": "https://api.github.com/users/Kaixhin/repos", "events_url": "https://api.github.com/users/Kaixhin/events{/privacy}", "received_events_url": "https://api.github.com/users/Kaixhin/received_events", "type": "User", "site_admin": false}, "created_at": "2017-10-24T12:53:54Z", "updated_at": "2017-10-24T12:53:54Z", "author_association": "CONTRIBUTOR", "body_html": "<p><a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=1158561\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/jwvdm\">@jwvdm</a> That sounds fantastic - please submit a PR. Whilst we are currently basing the API on TensorFlow, there's no need to follow it exactly if alterations make sense for PyTorch.</p>\n<p>Having reparameterised distributions readily available sounds convenient, and indeed <a href=\"https://www.tensorflow.org/api_docs/python/tf/distributions/ReparameterizationType\" rel=\"nofollow\">what TensorFlow provides already</a>. Having a  section in the docs on a) the difference between reparameterised and normal/non-reparameterised distributions and b) what can be done with reparameterised distributions would be good.</p>", "body_text": "@jwvdm That sounds fantastic - please submit a PR. Whilst we are currently basing the API on TensorFlow, there's no need to follow it exactly if alterations make sense for PyTorch.\nHaving reparameterised distributions readily available sounds convenient, and indeed what TensorFlow provides already. Having a  section in the docs on a) the difference between reparameterised and normal/non-reparameterised distributions and b) what can be done with reparameterised distributions would be good.", "body": "@jwvdm That sounds fantastic - please submit a PR. Whilst we are currently basing the API on TensorFlow, there's no need to follow it exactly if alterations make sense for PyTorch.\r\n\r\nHaving reparameterised distributions readily available sounds convenient, and indeed [what TensorFlow provides already](https://www.tensorflow.org/api_docs/python/tf/distributions/ReparameterizationType). Having a  section in the docs on a) the difference between reparameterised and normal/non-reparameterised distributions and b) what can be done with reparameterised distributions would be good."}