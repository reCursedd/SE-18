{"url": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/194136936", "pull_request_review_id": 127259931, "id": 194136936, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5NDEzNjkzNg==", "diff_hunk": "@@ -43,14 +43,8 @@ Tensor& randperm_out_cuda(Tensor& result, int64_t n, Generator* generator) {\n     throw std::runtime_error(oss.str());\n   }\n \n-  if (n > 0) {\n-    AT_DISPATCH_ALL_TYPES_AND_HALF(\n-      result.type(), \"randperm_out_cuda\", [&] {\n-        AT_CHECK(Scalar(n).to<scalar_t>(),\n-          \"n is too large for result tensor type: '\", result.type().toString(), \"'\");", "path": "aten/src/ATen/native/cuda/TensorFactories.cu", "position": 8, "original_position": 8, "commit_id": "999d05423ec9bf3ed0a6eece9fee6a3ac40fae2a", "original_commit_id": "999d05423ec9bf3ed0a6eece9fee6a3ac40fae2a", "user": {"login": "yf225", "id": 4063635, "node_id": "MDQ6VXNlcjQwNjM2MzU=", "avatar_url": "https://avatars0.githubusercontent.com/u/4063635?v=4", "gravatar_id": "", "url": "https://api.github.com/users/yf225", "html_url": "https://github.com/yf225", "followers_url": "https://api.github.com/users/yf225/followers", "following_url": "https://api.github.com/users/yf225/following{/other_user}", "gists_url": "https://api.github.com/users/yf225/gists{/gist_id}", "starred_url": "https://api.github.com/users/yf225/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/yf225/subscriptions", "organizations_url": "https://api.github.com/users/yf225/orgs", "repos_url": "https://api.github.com/users/yf225/repos", "events_url": "https://api.github.com/users/yf225/events{/privacy}", "received_events_url": "https://api.github.com/users/yf225/received_events", "type": "User", "site_admin": false}, "body": "The old code will give \r\n```\r\nUndefined symbols for architecture x86_64:\r\n  \"std::__1::enable_if<!(::std::__1::is_integral<double>::value), bool>::type at::overflows<at::Half, double>(double)\", referenced from:\r\n      at::Half at::checked_convert<at::Half, double>(double, char const*) in caffe2_gpu_generated_TensorFactories.cu.o\r\n  \"std::__1::enable_if<::std::__1::is_integral<long long>::value, bool>::type at::overflows<at::Half, long long>(long long)\", referenced from:\r\n      at::Half at::checked_convert<at::Half, long long>(long long, char const*) in caffe2_gpu_generated_TensorFactories.cu.o\r\nld: symbol(s) not found for architecture x86_64\r\nclang: error: linker command failed with exit code 1 (use -v to see invocation)\r\n```\r\nwhen compiling with NVCC on macOS. I haven't figured out why it happens, but I think the new code is cleaner anyway.", "created_at": "2018-06-08T17:59:38Z", "updated_at": "2018-11-23T15:45:16Z", "html_url": "https://github.com/pytorch/pytorch/pull/8274#discussion_r194136936", "pull_request_url": "https://api.github.com/repos/pytorch/pytorch/pulls/8274", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/194136936"}, "html": {"href": "https://github.com/pytorch/pytorch/pull/8274#discussion_r194136936"}, "pull_request": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/8274"}}, "body_html": "<p>The old code will give</p>\n<pre><code>Undefined symbols for architecture x86_64:\n  \"std::__1::enable_if&lt;!(::std::__1::is_integral&lt;double&gt;::value), bool&gt;::type at::overflows&lt;at::Half, double&gt;(double)\", referenced from:\n      at::Half at::checked_convert&lt;at::Half, double&gt;(double, char const*) in caffe2_gpu_generated_TensorFactories.cu.o\n  \"std::__1::enable_if&lt;::std::__1::is_integral&lt;long long&gt;::value, bool&gt;::type at::overflows&lt;at::Half, long long&gt;(long long)\", referenced from:\n      at::Half at::checked_convert&lt;at::Half, long long&gt;(long long, char const*) in caffe2_gpu_generated_TensorFactories.cu.o\nld: symbol(s) not found for architecture x86_64\nclang: error: linker command failed with exit code 1 (use -v to see invocation)\n</code></pre>\n<p>when compiling with NVCC on macOS. I haven't figured out why it happens, but I think the new code is cleaner anyway.</p>", "body_text": "The old code will give\nUndefined symbols for architecture x86_64:\n  \"std::__1::enable_if<!(::std::__1::is_integral<double>::value), bool>::type at::overflows<at::Half, double>(double)\", referenced from:\n      at::Half at::checked_convert<at::Half, double>(double, char const*) in caffe2_gpu_generated_TensorFactories.cu.o\n  \"std::__1::enable_if<::std::__1::is_integral<long long>::value, bool>::type at::overflows<at::Half, long long>(long long)\", referenced from:\n      at::Half at::checked_convert<at::Half, long long>(long long, char const*) in caffe2_gpu_generated_TensorFactories.cu.o\nld: symbol(s) not found for architecture x86_64\nclang: error: linker command failed with exit code 1 (use -v to see invocation)\n\nwhen compiling with NVCC on macOS. I haven't figured out why it happens, but I think the new code is cleaner anyway.", "in_reply_to_id": 194127843}