{"url": "https://api.github.com/repos/pytorch/pytorch/issues/12923", "repository_url": "https://api.github.com/repos/pytorch/pytorch", "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/12923/labels{/name}", "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/12923/comments", "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/12923/events", "html_url": "https://github.com/pytorch/pytorch/issues/12923", "id": 372460146, "node_id": "MDU6SXNzdWUzNzI0NjAxNDY=", "number": 12923, "title": "How to compute grad after clone to other tensor?", "user": {"login": "zyoohv", "id": 16134679, "node_id": "MDQ6VXNlcjE2MTM0Njc5", "avatar_url": "https://avatars2.githubusercontent.com/u/16134679?v=4", "gravatar_id": "", "url": "https://api.github.com/users/zyoohv", "html_url": "https://github.com/zyoohv", "followers_url": "https://api.github.com/users/zyoohv/followers", "following_url": "https://api.github.com/users/zyoohv/following{/other_user}", "gists_url": "https://api.github.com/users/zyoohv/gists{/gist_id}", "starred_url": "https://api.github.com/users/zyoohv/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/zyoohv/subscriptions", "organizations_url": "https://api.github.com/users/zyoohv/orgs", "repos_url": "https://api.github.com/users/zyoohv/repos", "events_url": "https://api.github.com/users/zyoohv/events{/privacy}", "received_events_url": "https://api.github.com/users/zyoohv/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-10-22T10:00:36Z", "updated_at": "2018-10-22T17:25:08Z", "closed_at": "2018-10-22T17:25:08Z", "author_association": "NONE", "body_html": "<p>example code:</p>\n<div class=\"highlight highlight-source-python\"><pre><span class=\"pl-k\">import</span> torch\n\nx <span class=\"pl-k\">=</span> torch.randn(<span class=\"pl-c1\">4</span>, <span class=\"pl-v\">requires_grad</span><span class=\"pl-k\">=</span><span class=\"pl-c1\">True</span>).cuda()\ny <span class=\"pl-k\">=</span> torch.randn(<span class=\"pl-c1\">4</span>, <span class=\"pl-v\">requires_grad</span><span class=\"pl-k\">=</span><span class=\"pl-c1\">True</span>).cuda()\nz <span class=\"pl-k\">=</span> torch.zeros(<span class=\"pl-c1\">4</span>)\nz <span class=\"pl-k\">=</span> torch.clone(x)\nz.retain_grad()\nh <span class=\"pl-k\">=</span> (z <span class=\"pl-k\">+</span> y) <span class=\"pl-k\">*</span> z\nl <span class=\"pl-k\">=</span> torch.randn(<span class=\"pl-c1\">4</span>).cuda()\nloss <span class=\"pl-k\">=</span> (l <span class=\"pl-k\">-</span> h).pow(<span class=\"pl-c1\">2</span>).sum()\nloss.backward()\n<span class=\"pl-c1\">print</span>(<span class=\"pl-s\"><span class=\"pl-pds\">'</span>x.grad=<span class=\"pl-pds\">'</span></span>, x.grad)\n<span class=\"pl-c1\">print</span>(<span class=\"pl-s\"><span class=\"pl-pds\">'</span>z.grad=<span class=\"pl-pds\">'</span></span>, z.grad)\n<span class=\"pl-c1\">print</span>(x)\n<span class=\"pl-c1\">print</span>(z)</pre></div>\n<p>ouput:</p>\n<pre><code>x.grad= None\nz.grad= tensor([-15.3401,  -3.2623,  -2.1670,   0.1410], device='cuda:0')\ntensor([-0.8943, -1.6154,  0.0229,  0.4180],\n       device='cuda:0', grad_fn=&lt;CopyBackwards&gt;)\ntensor([-0.8943, -1.6154,  0.0229,  0.4180],\n       device='cuda:0', grad_fn=&lt;CloneBackward&gt;)\n</code></pre>\n<p>why x.grad is None but not same as z.grad?<br>\nwhat can I do if I want them be same?</p>", "body_text": "example code:\nimport torch\n\nx = torch.randn(4, requires_grad=True).cuda()\ny = torch.randn(4, requires_grad=True).cuda()\nz = torch.zeros(4)\nz = torch.clone(x)\nz.retain_grad()\nh = (z + y) * z\nl = torch.randn(4).cuda()\nloss = (l - h).pow(2).sum()\nloss.backward()\nprint('x.grad=', x.grad)\nprint('z.grad=', z.grad)\nprint(x)\nprint(z)\nouput:\nx.grad= None\nz.grad= tensor([-15.3401,  -3.2623,  -2.1670,   0.1410], device='cuda:0')\ntensor([-0.8943, -1.6154,  0.0229,  0.4180],\n       device='cuda:0', grad_fn=<CopyBackwards>)\ntensor([-0.8943, -1.6154,  0.0229,  0.4180],\n       device='cuda:0', grad_fn=<CloneBackward>)\n\nwhy x.grad is None but not same as z.grad?\nwhat can I do if I want them be same?", "body": "example code:\r\n\r\n```python\r\nimport torch\r\n\r\nx = torch.randn(4, requires_grad=True).cuda()\r\ny = torch.randn(4, requires_grad=True).cuda()\r\nz = torch.zeros(4)\r\nz = torch.clone(x)\r\nz.retain_grad()\r\nh = (z + y) * z\r\nl = torch.randn(4).cuda()\r\nloss = (l - h).pow(2).sum()\r\nloss.backward()\r\nprint('x.grad=', x.grad)\r\nprint('z.grad=', z.grad)\r\nprint(x)\r\nprint(z)\r\n```\r\n\r\nouput:\r\n```\r\nx.grad= None\r\nz.grad= tensor([-15.3401,  -3.2623,  -2.1670,   0.1410], device='cuda:0')\r\ntensor([-0.8943, -1.6154,  0.0229,  0.4180],\r\n       device='cuda:0', grad_fn=<CopyBackwards>)\r\ntensor([-0.8943, -1.6154,  0.0229,  0.4180],\r\n       device='cuda:0', grad_fn=<CloneBackward>)\r\n```\r\n\r\nwhy x.grad is None but not same as z.grad?\r\nwhat can I do if I want them be same?"}