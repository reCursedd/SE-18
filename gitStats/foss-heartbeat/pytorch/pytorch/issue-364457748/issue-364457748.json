{"url": "https://api.github.com/repos/pytorch/pytorch/issues/12135", "repository_url": "https://api.github.com/repos/pytorch/pytorch", "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/12135/labels{/name}", "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/12135/comments", "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/12135/events", "html_url": "https://github.com/pytorch/pytorch/issues/12135", "id": 364457748, "node_id": "MDU6SXNzdWUzNjQ0NTc3NDg=", "number": 12135, "title": ".device property on layers", "user": {"login": "mittagessen", "id": 3780295, "node_id": "MDQ6VXNlcjM3ODAyOTU=", "avatar_url": "https://avatars2.githubusercontent.com/u/3780295?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mittagessen", "html_url": "https://github.com/mittagessen", "followers_url": "https://api.github.com/users/mittagessen/followers", "following_url": "https://api.github.com/users/mittagessen/following{/other_user}", "gists_url": "https://api.github.com/users/mittagessen/gists{/gist_id}", "starred_url": "https://api.github.com/users/mittagessen/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mittagessen/subscriptions", "organizations_url": "https://api.github.com/users/mittagessen/orgs", "repos_url": "https://api.github.com/users/mittagessen/repos", "events_url": "https://api.github.com/users/mittagessen/events{/privacy}", "received_events_url": "https://api.github.com/users/mittagessen/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-09-27T12:43:13Z", "updated_at": "2018-09-27T15:14:03Z", "closed_at": "2018-09-27T15:14:03Z", "author_association": "NONE", "body_html": "<h2><g-emoji class=\"g-emoji\" alias=\"rocket\" fallback-src=\"https://assets-cdn.github.com/images/icons/emoji/unicode/1f680.png\">\ud83d\ude80</g-emoji> Feature</h2>\n<p>The <code>.device</code> property should be available on layers.</p>\n<h2>Motivation</h2>\n<p>While it is straightforward to determine on which device a tensor resides this is more complicated for layers, requiring a construction like <code>next(next(nn.children()).parameters()).device</code> in simple cases. This is a bit annoying when having to move a network temporarily onto the CPU for some operation like serialization and then moving it back to the original device.</p>\n<h2>Pitch</h2>\n<p>Just as there is a <code>.device</code> property on tensors, there should be one on layers.</p>\n<h2>Alternatives</h2>\n<p>Model sharding across devices might make this complicated to implement for questionable gains in user code cleanness.</p>", "body_text": "\ud83d\ude80 Feature\nThe .device property should be available on layers.\nMotivation\nWhile it is straightforward to determine on which device a tensor resides this is more complicated for layers, requiring a construction like next(next(nn.children()).parameters()).device in simple cases. This is a bit annoying when having to move a network temporarily onto the CPU for some operation like serialization and then moving it back to the original device.\nPitch\nJust as there is a .device property on tensors, there should be one on layers.\nAlternatives\nModel sharding across devices might make this complicated to implement for questionable gains in user code cleanness.", "body": "## \ud83d\ude80 Feature\r\n\r\nThe `.device` property should be available on layers.\r\n\r\n## Motivation\r\n\r\nWhile it is straightforward to determine on which device a tensor resides this is more complicated for layers, requiring a construction like `next(next(nn.children()).parameters()).device` in simple cases. This is a bit annoying when having to move a network temporarily onto the CPU for some operation like serialization and then moving it back to the original device.\r\n\r\n## Pitch\r\n\r\nJust as there is a `.device` property on tensors, there should be one on layers.\r\n\r\n## Alternatives\r\n\r\nModel sharding across devices might make this complicated to implement for questionable gains in user code cleanness."}