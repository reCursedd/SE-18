{"url": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/156190464", "pull_request_review_id": 82628289, "id": 156190464, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE1NjE5MDQ2NA==", "diff_hunk": "@@ -262,3 +262,107 @@ def log_prob(self, value):\n         return (self.alpha * torch.log(self.beta) +\n                 (self.alpha - 1) * torch.log(value) -\n                 self.beta * value - torch.lgamma(self.alpha))\n+\n+\n+def _dirichlet_sample_nograd(alpha):\n+    gammas = torch._C._standard_gamma(alpha)\n+    return gammas / gammas.sum(-1, True)\n+\n+\n+class _Dirichlet(Function):\n+    @staticmethod\n+    def forward(ctx, alpha):\n+        x = _dirichlet_sample_nograd(alpha)\n+        ctx.save_for_backward(x, alpha)\n+        return x\n+\n+    @staticmethod\n+    @once_differentiable\n+    def backward(ctx, grad_output):\n+        x, alpha = ctx.saved_tensors\n+        total = alpha.sum(-1, True).expand_as(alpha)\n+        grad = torch._C._dirichlet_grad(x, alpha, total)\n+        return grad_output * grad\n+\n+\n+class Dirichlet(Distribution):\n+    r\"\"\"\n+    Creates a Dirichlet distribution parameterized by concentration `alpha`.\n+\n+    Example::\n+\n+        >>> m = Dirichlet(torch.Tensor([0.5, 0.5]))\n+        >>> m.sample()  # Dirichlet distributed with concentrarion alpha\n+         0.1046\n+         0.8954\n+        [torch.FloatTensor of size 2]\n+\n+    Args:\n+        alpha (Tensor or Variable): concentration parameter of the distribution\n+    \"\"\"\n+    has_rsample = True\n+\n+    def __init__(self, alpha):\n+        self.alpha = alpha\n+\n+    def _sample(self, alpha):", "path": "torch/distributions.py", "position": null, "original_position": 47, "commit_id": "8d1c86ec401d659d545f165fadff23a9d8f69795", "original_commit_id": "e7abfca99ec8f1a97961ac6a8508bb4b664c24d4", "user": {"login": "fritzo", "id": 648532, "node_id": "MDQ6VXNlcjY0ODUzMg==", "avatar_url": "https://avatars0.githubusercontent.com/u/648532?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fritzo", "html_url": "https://github.com/fritzo", "followers_url": "https://api.github.com/users/fritzo/followers", "following_url": "https://api.github.com/users/fritzo/following{/other_user}", "gists_url": "https://api.github.com/users/fritzo/gists{/gist_id}", "starred_url": "https://api.github.com/users/fritzo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fritzo/subscriptions", "organizations_url": "https://api.github.com/users/fritzo/orgs", "repos_url": "https://api.github.com/users/fritzo/repos", "events_url": "https://api.github.com/users/fritzo/events{/privacy}", "received_events_url": "https://api.github.com/users/fritzo/received_events", "type": "User", "site_admin": false}, "body": "This helper is needed until #4100 is merged. Currently `.sample_n()` would not be able to change the shape of `self.alpha` for use inside `.sample()`. Once `.sample()` can accept an `n` or `sample_shape` parameter, we can combine all these methods into a single `.sample(sample_shape)` method.", "created_at": "2017-12-11T20:31:14Z", "updated_at": "2018-11-23T15:37:15Z", "html_url": "https://github.com/pytorch/pytorch/pull/4117#discussion_r156190464", "pull_request_url": "https://api.github.com/repos/pytorch/pytorch/pulls/4117", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/156190464"}, "html": {"href": "https://github.com/pytorch/pytorch/pull/4117#discussion_r156190464"}, "pull_request": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/4117"}}, "body_html": "<p>This helper is needed until <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load issue title\" data-id=\"280742775\" data-permission-text=\"Issue title is private\" data-url=\"https://github.com/pytorch/pytorch/issues/4100\" data-hovercard-type=\"pull_request\" data-hovercard-url=\"/pytorch/pytorch/pull/4100/hovercard\" href=\"https://github.com/pytorch/pytorch/pull/4100\">#4100</a> is merged. Currently <code>.sample_n()</code> would not be able to change the shape of <code>self.alpha</code> for use inside <code>.sample()</code>. Once <code>.sample()</code> can accept an <code>n</code> or <code>sample_shape</code> parameter, we can combine all these methods into a single <code>.sample(sample_shape)</code> method.</p>", "body_text": "This helper is needed until #4100 is merged. Currently .sample_n() would not be able to change the shape of self.alpha for use inside .sample(). Once .sample() can accept an n or sample_shape parameter, we can combine all these methods into a single .sample(sample_shape) method.", "in_reply_to_id": 156174933}