{"url": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/157377908", "pull_request_review_id": 84009214, "id": 157377908, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE1NzM3NzkwOA==", "diff_hunk": "@@ -0,0 +1,44 @@\n+from numbers import Number\n+\n+import torch\n+from torch.autograd import Variable\n+from torch.distributions.dirichlet import Dirichlet\n+from torch.distributions.distribution import Distribution\n+from torch.distributions.utils import broadcast_all\n+\n+\n+class Beta(Distribution):\n+    r\"\"\"\n+    Creates a Beta distribution parameterized by concentration `alpha` and `beta`.\n+\n+    Example::\n+\n+        >>> m = Beta(torch.Tensor([0.5]), torch.Tensor([0.5]))\n+        >>> m.sample()  # Beta distributed with concentrarion alpha\n+         0.1046\n+        [torch.FloatTensor of size 2]\n+\n+    Args:\n+        alpha (Tensor or Variable): concentration parameter of the distribution\n+    \"\"\"\n+    has_rsample = True\n+\n+    def __init__(self, alpha, beta):\n+        if isinstance(alpha, Number) and isinstance(beta, Number):\n+            alpha_beta = torch.Tensor([alpha, beta])\n+        else:\n+            alpha, beta = broadcast_all(alpha, beta)\n+            alpha_beta = torch.stack([alpha, beta], -1)", "path": "torch/distributions/beta.py", "position": 31, "original_position": 31, "commit_id": "8d1c86ec401d659d545f165fadff23a9d8f69795", "original_commit_id": "e726af144d34b204ea80d13e153e565f7d678306", "user": {"login": "fritzo", "id": 648532, "node_id": "MDQ6VXNlcjY0ODUzMg==", "avatar_url": "https://avatars0.githubusercontent.com/u/648532?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fritzo", "html_url": "https://github.com/fritzo", "followers_url": "https://api.github.com/users/fritzo/followers", "following_url": "https://api.github.com/users/fritzo/following{/other_user}", "gists_url": "https://api.github.com/users/fritzo/gists{/gist_id}", "starred_url": "https://api.github.com/users/fritzo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fritzo/subscriptions", "organizations_url": "https://api.github.com/users/fritzo/orgs", "repos_url": "https://api.github.com/users/fritzo/repos", "events_url": "https://api.github.com/users/fritzo/events{/privacy}", "received_events_url": "https://api.github.com/users/fritzo/received_events", "type": "User", "site_admin": false}, "body": "This is intended to match the behavior of other distributions. This special handling will no longer be needed once we have scalar support; until then you can get scalar-like shapes by passing `float`s as parameters.", "created_at": "2017-12-17T19:45:07Z", "updated_at": "2018-11-23T15:37:28Z", "html_url": "https://github.com/pytorch/pytorch/pull/4117#discussion_r157377908", "pull_request_url": "https://api.github.com/repos/pytorch/pytorch/pulls/4117", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/157377908"}, "html": {"href": "https://github.com/pytorch/pytorch/pull/4117#discussion_r157377908"}, "pull_request": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/4117"}}, "body_html": "<p>This is intended to match the behavior of other distributions. This special handling will no longer be needed once we have scalar support; until then you can get scalar-like shapes by passing <code>float</code>s as parameters.</p>", "body_text": "This is intended to match the behavior of other distributions. This special handling will no longer be needed once we have scalar support; until then you can get scalar-like shapes by passing floats as parameters.", "in_reply_to_id": 157367460}