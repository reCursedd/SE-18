{"url": "https://api.github.com/repos/pytorch/pytorch/issues/11061", "repository_url": "https://api.github.com/repos/pytorch/pytorch", "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/11061/labels{/name}", "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/11061/comments", "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/11061/events", "html_url": "https://github.com/pytorch/pytorch/pull/11061", "id": 355404721, "node_id": "MDExOlB1bGxSZXF1ZXN0MjExOTQxMTgz", "number": 11061, "title": "[Easy] make copy constructed tensor a leaf variable when using torch.tensor(sourceTensor)", "user": {"login": "weiyangfb", "id": 38509346, "node_id": "MDQ6VXNlcjM4NTA5MzQ2", "avatar_url": "https://avatars1.githubusercontent.com/u/38509346?v=4", "gravatar_id": "", "url": "https://api.github.com/users/weiyangfb", "html_url": "https://github.com/weiyangfb", "followers_url": "https://api.github.com/users/weiyangfb/followers", "following_url": "https://api.github.com/users/weiyangfb/following{/other_user}", "gists_url": "https://api.github.com/users/weiyangfb/gists{/gist_id}", "starred_url": "https://api.github.com/users/weiyangfb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/weiyangfb/subscriptions", "organizations_url": "https://api.github.com/users/weiyangfb/orgs", "repos_url": "https://api.github.com/users/weiyangfb/repos", "events_url": "https://api.github.com/users/weiyangfb/events{/privacy}", "received_events_url": "https://api.github.com/users/weiyangfb/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 559719279, "node_id": "MDU6TGFiZWw1NTk3MTkyNzk=", "url": "https://api.github.com/repos/pytorch/pytorch/labels/ready%20for%20review", "name": "ready for review", "color": "b60205", "default": false}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 8, "created_at": "2018-08-30T02:55:05Z", "updated_at": "2018-11-23T15:51:36Z", "closed_at": "2018-09-18T06:30:26Z", "author_association": "CONTRIBUTOR", "pull_request": {"url": "https://api.github.com/repos/pytorch/pytorch/pulls/11061", "html_url": "https://github.com/pytorch/pytorch/pull/11061", "diff_url": "https://github.com/pytorch/pytorch/pull/11061.diff", "patch_url": "https://github.com/pytorch/pytorch/pull/11061.patch"}, "body_html": "<ul>\n<li><span class=\"issue-keyword tooltipped tooltipped-se\" aria-label=\"This pull request closes issue #10876.\">fix</span> <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load issue title\" data-id=\"354016646\" data-permission-text=\"Issue title is private\" data-url=\"https://github.com/pytorch/pytorch/issues/10876\" data-hovercard-type=\"issue\" data-hovercard-url=\"/pytorch/pytorch/issues/10876/hovercard\" href=\"https://github.com/pytorch/pytorch/issues/10876\">#10876</a></li>\n<li>the cause of the bug is because copy constructor cannot distinguish between default value of requires_grad and requires_grad=False, thus it makes a copy from source tensor along with its grad_fn if requires_grad=True at source</li>\n<li>with this fix, the behavior becomes</li>\n</ul>\n<pre><code>&gt;&gt;&gt; source = torch.randn(2, 2, requires_grad=True)\n&gt;&gt;&gt; copy = torch.tensor(source, requires_grad=True)\n&gt;&gt;&gt; print(copy)\ntensor([[-1.2001,  1.9869],\n        [-1.0134,  1.3096]], grad_fn=&lt;CopyBackwards&gt;)\n\n&gt;&gt;&gt; source = torch.randn(2, 2, requires_grad=True)\n&gt;&gt;&gt; copy = torch.tensor(source, requires_grad=False)\n&gt;&gt;&gt; print(copy)\ntensor([[-0.7402,  0.0467],\n        [ 0.4344, -0.0420]])\n\n&gt;&gt;&gt; source = torch.randn(2, 2, requires_grad=True)\n&gt;&gt;&gt; copy = torch.tensor(source)\n&gt;&gt;&gt; print(copy)\ntensor([[-0.7402,  0.0467],\n        [ 0.4344, -0.0420]])\n</code></pre>", "body_text": "fix #10876\nthe cause of the bug is because copy constructor cannot distinguish between default value of requires_grad and requires_grad=False, thus it makes a copy from source tensor along with its grad_fn if requires_grad=True at source\nwith this fix, the behavior becomes\n\n>>> source = torch.randn(2, 2, requires_grad=True)\n>>> copy = torch.tensor(source, requires_grad=True)\n>>> print(copy)\ntensor([[-1.2001,  1.9869],\n        [-1.0134,  1.3096]], grad_fn=<CopyBackwards>)\n\n>>> source = torch.randn(2, 2, requires_grad=True)\n>>> copy = torch.tensor(source, requires_grad=False)\n>>> print(copy)\ntensor([[-0.7402,  0.0467],\n        [ 0.4344, -0.0420]])\n\n>>> source = torch.randn(2, 2, requires_grad=True)\n>>> copy = torch.tensor(source)\n>>> print(copy)\ntensor([[-0.7402,  0.0467],\n        [ 0.4344, -0.0420]])", "body": "- fix https://github.com/pytorch/pytorch/issues/10876\r\n- the cause of the bug is because copy constructor cannot distinguish between default value of requires_grad and requires_grad=False, thus it makes a copy from source tensor along with its grad_fn if requires_grad=True at source\r\n- with this fix, the behavior becomes\r\n```\r\n>>> source = torch.randn(2, 2, requires_grad=True)\r\n>>> copy = torch.tensor(source, requires_grad=True)\r\n>>> print(copy)\r\ntensor([[-1.2001,  1.9869],\r\n        [-1.0134,  1.3096]], grad_fn=<CopyBackwards>)\r\n\r\n>>> source = torch.randn(2, 2, requires_grad=True)\r\n>>> copy = torch.tensor(source, requires_grad=False)\r\n>>> print(copy)\r\ntensor([[-0.7402,  0.0467],\r\n        [ 0.4344, -0.0420]])\r\n\r\n>>> source = torch.randn(2, 2, requires_grad=True)\r\n>>> copy = torch.tensor(source)\r\n>>> print(copy)\r\ntensor([[-0.7402,  0.0467],\r\n        [ 0.4344, -0.0420]])\r\n```"}