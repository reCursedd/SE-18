{"url": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/218238339", "pull_request_review_id": 156131918, "id": 218238339, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIxODIzODMzOQ==", "diff_hunk": "@@ -216,8 +216,10 @@ Tensor internal_new_from_data(const Type & type, at::optional<Device> device_opt\n                                                        *torch::getLayout(type.backend()),\n                                                        type_inference_device_type);\n       const auto& type_to_use = type_inference ? type_inference_type : type;\n-      return copy_variables ? new_with_tensor_copy(type_to_use, var, device_index) :\n+      auto new_tensor = copy_variables ? new_with_tensor_copy(type_to_use, var, device_index) :\n                               new_with_type_conversion(type_to_use, var, device_index);\n+      if (!args_requires_grad) new_tensor.detach_();", "path": "torch/csrc/utils/tensor_new.cpp", "position": null, "original_position": 16, "commit_id": "9c413bb5467a7c4b4ab376bc3abc4aa0d1077f62", "original_commit_id": "c040b6b9aac05e05b249f61c50d548f74cad8eef", "user": {"login": "ezyang", "id": 13564, "node_id": "MDQ6VXNlcjEzNTY0", "avatar_url": "https://avatars0.githubusercontent.com/u/13564?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ezyang", "html_url": "https://github.com/ezyang", "followers_url": "https://api.github.com/users/ezyang/followers", "following_url": "https://api.github.com/users/ezyang/following{/other_user}", "gists_url": "https://api.github.com/users/ezyang/gists{/gist_id}", "starred_url": "https://api.github.com/users/ezyang/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ezyang/subscriptions", "organizations_url": "https://api.github.com/users/ezyang/orgs", "repos_url": "https://api.github.com/users/ezyang/repos", "events_url": "https://api.github.com/users/ezyang/events{/privacy}", "received_events_url": "https://api.github.com/users/ezyang/received_events", "type": "User", "site_admin": false}, "body": "No, this still looks wrong. Based on the proposed semantics in my comment, you should *unconditionally* detach, and then depending on `args_require_grad` set the `requires_grad` back to True (turning it into a requires_grad leaf variable).", "created_at": "2018-09-17T21:44:08Z", "updated_at": "2018-11-23T15:51:31Z", "html_url": "https://github.com/pytorch/pytorch/pull/11061#discussion_r218238339", "pull_request_url": "https://api.github.com/repos/pytorch/pytorch/pulls/11061", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/218238339"}, "html": {"href": "https://github.com/pytorch/pytorch/pull/11061#discussion_r218238339"}, "pull_request": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/11061"}}, "body_html": "<p>No, this still looks wrong. Based on the proposed semantics in my comment, you should <em>unconditionally</em> detach, and then depending on <code>args_require_grad</code> set the <code>requires_grad</code> back to True (turning it into a requires_grad leaf variable).</p>", "body_text": "No, this still looks wrong. Based on the proposed semantics in my comment, you should unconditionally detach, and then depending on args_require_grad set the requires_grad back to True (turning it into a requires_grad leaf variable)."}