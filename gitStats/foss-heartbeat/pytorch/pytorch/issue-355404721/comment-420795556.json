{"url": "https://api.github.com/repos/pytorch/pytorch/issues/comments/420795556", "html_url": "https://github.com/pytorch/pytorch/pull/11061#issuecomment-420795556", "issue_url": "https://api.github.com/repos/pytorch/pytorch/issues/11061", "id": 420795556, "node_id": "MDEyOklzc3VlQ29tbWVudDQyMDc5NTU1Ng==", "user": {"login": "weiyangfb", "id": 38509346, "node_id": "MDQ6VXNlcjM4NTA5MzQ2", "avatar_url": "https://avatars1.githubusercontent.com/u/38509346?v=4", "gravatar_id": "", "url": "https://api.github.com/users/weiyangfb", "html_url": "https://github.com/weiyangfb", "followers_url": "https://api.github.com/users/weiyangfb/followers", "following_url": "https://api.github.com/users/weiyangfb/following{/other_user}", "gists_url": "https://api.github.com/users/weiyangfb/gists{/gist_id}", "starred_url": "https://api.github.com/users/weiyangfb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/weiyangfb/subscriptions", "organizations_url": "https://api.github.com/users/weiyangfb/orgs", "repos_url": "https://api.github.com/users/weiyangfb/repos", "events_url": "https://api.github.com/users/weiyangfb/events{/privacy}", "received_events_url": "https://api.github.com/users/weiyangfb/received_events", "type": "User", "site_admin": false}, "created_at": "2018-09-12T20:58:53Z", "updated_at": "2018-09-12T20:58:53Z", "author_association": "CONTRIBUTOR", "body_html": "<p><a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=4583066\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/apaszke\">@apaszke</a> I would guess the copy constructed tensor should not be made differentiable through <code>copy</code> op here. Please correct me if I am wrong, I think the expected behavior should be the same as:</p>\n<pre><code>source = torch.randn(10, requires_grad=True)\ncopy = torch.tensor(source.data)\n</code></pre>", "body_text": "@apaszke I would guess the copy constructed tensor should not be made differentiable through copy op here. Please correct me if I am wrong, I think the expected behavior should be the same as:\nsource = torch.randn(10, requires_grad=True)\ncopy = torch.tensor(source.data)", "body": "@apaszke I would guess the copy constructed tensor should not be made differentiable through `copy` op here. Please correct me if I am wrong, I think the expected behavior should be the same as:\r\n```\r\nsource = torch.randn(10, requires_grad=True)\r\ncopy = torch.tensor(source.data)\r\n```"}