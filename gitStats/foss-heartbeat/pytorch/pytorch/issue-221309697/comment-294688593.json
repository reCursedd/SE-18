{"url": "https://api.github.com/repos/pytorch/pytorch/issues/comments/294688593", "html_url": "https://github.com/pytorch/pytorch/pull/1243#issuecomment-294688593", "issue_url": "https://api.github.com/repos/pytorch/pytorch/issues/1243", "id": 294688593, "node_id": "MDEyOklzc3VlQ29tbWVudDI5NDY4ODU5Mw==", "user": {"login": "tylergenter", "id": 4969356, "node_id": "MDQ6VXNlcjQ5NjkzNTY=", "avatar_url": "https://avatars0.githubusercontent.com/u/4969356?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tylergenter", "html_url": "https://github.com/tylergenter", "followers_url": "https://api.github.com/users/tylergenter/followers", "following_url": "https://api.github.com/users/tylergenter/following{/other_user}", "gists_url": "https://api.github.com/users/tylergenter/gists{/gist_id}", "starred_url": "https://api.github.com/users/tylergenter/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tylergenter/subscriptions", "organizations_url": "https://api.github.com/users/tylergenter/orgs", "repos_url": "https://api.github.com/users/tylergenter/repos", "events_url": "https://api.github.com/users/tylergenter/events{/privacy}", "received_events_url": "https://api.github.com/users/tylergenter/received_events", "type": "User", "site_admin": false}, "created_at": "2017-04-18T05:33:03Z", "updated_at": "2017-04-18T05:33:03Z", "author_association": "NONE", "body_html": "<p>I'm now getting a really weird deadlock in autograd on Windows. I wasn't having this problem a week ago, and I'm thinking this patch is the problem (although I'm not positive). Basically, a worker thread is throwing a runtime error, and everything goes to hell while that error is being propagated. Commenting out python_error::~python_error fixes the problem. What I think is happening is that the python_error destructor is being called before THPEngine_run_backward can process the error. For a test case, line 816 in test_nn.py deliberately causes the assert in THPFunction_saved_tensors to fail. I don't understand this code well enough to come up with a solution, or even be sure that this is the problem.</p>", "body_text": "I'm now getting a really weird deadlock in autograd on Windows. I wasn't having this problem a week ago, and I'm thinking this patch is the problem (although I'm not positive). Basically, a worker thread is throwing a runtime error, and everything goes to hell while that error is being propagated. Commenting out python_error::~python_error fixes the problem. What I think is happening is that the python_error destructor is being called before THPEngine_run_backward can process the error. For a test case, line 816 in test_nn.py deliberately causes the assert in THPFunction_saved_tensors to fail. I don't understand this code well enough to come up with a solution, or even be sure that this is the problem.", "body": "I'm now getting a really weird deadlock in autograd on Windows. I wasn't having this problem a week ago, and I'm thinking this patch is the problem (although I'm not positive). Basically, a worker thread is throwing a runtime error, and everything goes to hell while that error is being propagated. Commenting out python_error::~python_error fixes the problem. What I think is happening is that the python_error destructor is being called before THPEngine_run_backward can process the error. For a test case, line 816 in test_nn.py deliberately causes the assert in THPFunction_saved_tensors to fail. I don't understand this code well enough to come up with a solution, or even be sure that this is the problem."}