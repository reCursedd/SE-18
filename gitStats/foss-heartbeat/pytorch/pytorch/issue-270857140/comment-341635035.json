{"url": "https://api.github.com/repos/pytorch/pytorch/issues/comments/341635035", "html_url": "https://github.com/pytorch/pytorch/issues/3461#issuecomment-341635035", "issue_url": "https://api.github.com/repos/pytorch/pytorch/issues/3461", "id": 341635035, "node_id": "MDEyOklzc3VlQ29tbWVudDM0MTYzNTAzNQ==", "user": {"login": "zdevito", "id": 370202, "node_id": "MDQ6VXNlcjM3MDIwMg==", "avatar_url": "https://avatars0.githubusercontent.com/u/370202?v=4", "gravatar_id": "", "url": "https://api.github.com/users/zdevito", "html_url": "https://github.com/zdevito", "followers_url": "https://api.github.com/users/zdevito/followers", "following_url": "https://api.github.com/users/zdevito/following{/other_user}", "gists_url": "https://api.github.com/users/zdevito/gists{/gist_id}", "starred_url": "https://api.github.com/users/zdevito/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/zdevito/subscriptions", "organizations_url": "https://api.github.com/users/zdevito/orgs", "repos_url": "https://api.github.com/users/zdevito/repos", "events_url": "https://api.github.com/users/zdevito/events{/privacy}", "received_events_url": "https://api.github.com/users/zdevito/received_events", "type": "User", "site_admin": false}, "created_at": "2017-11-03T07:16:34Z", "updated_at": "2017-11-03T07:18:02Z", "author_association": "CONTRIBUTOR", "body_html": "<p>This is happening because 'all_load'  (grep for it in CMakeLists.txt) is interacting weirdly with some cuda libraries, because it is not a on/off switch like linux's whole-archive but a global flag to turn it on for all archives. <code>force_load</code> is the OSX equivalent, but of course it has different semantics.</p>\n<p>Instead of this:</p>\n<pre><code>-Wl,-all_load ../TH/libTH.a ../THNN/libTHNN.a ../THS/libTHS.a -Wl,-noall_load -Wl,-all_load ../THC/libTHC.a ../THCUNN/libTHCUNN.a ../THCS/libTHCS.a -Wl,-noall_load\n</code></pre>\n<p>We need this, OSX only:</p>\n<pre><code>-Wl,-force_load,../TH/libTH.a \n-Wl,-force_load,../THNN/libTHNN.a \n-Wl,-force_load,../THS/libTHS.a  \n-Wl,-force_load,../THC/libTHC.a \n-Wl,-force_load,../THCUNN/libTHCUNN.a \n-Wl,-force_load,../THCS/libTHCS.a\n</code></pre>\n<p>This is annoying in CMake because the <code>target_link_libraries</code> function is <em>also</em> figuring out what else to append to the linker command but these arguments are all in one argument.</p>", "body_text": "This is happening because 'all_load'  (grep for it in CMakeLists.txt) is interacting weirdly with some cuda libraries, because it is not a on/off switch like linux's whole-archive but a global flag to turn it on for all archives. force_load is the OSX equivalent, but of course it has different semantics.\nInstead of this:\n-Wl,-all_load ../TH/libTH.a ../THNN/libTHNN.a ../THS/libTHS.a -Wl,-noall_load -Wl,-all_load ../THC/libTHC.a ../THCUNN/libTHCUNN.a ../THCS/libTHCS.a -Wl,-noall_load\n\nWe need this, OSX only:\n-Wl,-force_load,../TH/libTH.a \n-Wl,-force_load,../THNN/libTHNN.a \n-Wl,-force_load,../THS/libTHS.a  \n-Wl,-force_load,../THC/libTHC.a \n-Wl,-force_load,../THCUNN/libTHCUNN.a \n-Wl,-force_load,../THCS/libTHCS.a\n\nThis is annoying in CMake because the target_link_libraries function is also figuring out what else to append to the linker command but these arguments are all in one argument.", "body": "This is happening because 'all_load'  (grep for it in CMakeLists.txt) is interacting weirdly with some cuda libraries, because it is not a on/off switch like linux's whole-archive but a global flag to turn it on for all archives. `force_load` is the OSX equivalent, but of course it has different semantics.\r\n\r\nInstead of this:\r\n```\r\n-Wl,-all_load ../TH/libTH.a ../THNN/libTHNN.a ../THS/libTHS.a -Wl,-noall_load -Wl,-all_load ../THC/libTHC.a ../THCUNN/libTHCUNN.a ../THCS/libTHCS.a -Wl,-noall_load\r\n```\r\nWe need this, OSX only:\r\n```\r\n-Wl,-force_load,../TH/libTH.a \r\n-Wl,-force_load,../THNN/libTHNN.a \r\n-Wl,-force_load,../THS/libTHS.a  \r\n-Wl,-force_load,../THC/libTHC.a \r\n-Wl,-force_load,../THCUNN/libTHCUNN.a \r\n-Wl,-force_load,../THCS/libTHCS.a\r\n```\r\n\r\nThis is annoying in CMake because the `target_link_libraries` function is _also_ figuring out what else to append to the linker command but these arguments are all in one argument."}