{"url": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/220287593", "pull_request_review_id": 158661354, "id": 220287593, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIyMDI4NzU5Mw==", "diff_hunk": "@@ -0,0 +1,55 @@\n+#include \"ATen/ATen.h\"\n+#include \"ATen/Dispatch.h\"\n+\n+#include <vector>\n+\n+namespace {\n+\n+using namespace at;\n+\n+Tensor _triu_mask(int64_t n, int64_t dims, bool diagonal, const TensorOptions &options) {\n+  // get a mask that has value 1 whose indices satisfies i < j < k < ...\n+  // or i <= j <= k <= ... (depending on diagonal)\n+  TensorOptions opt = std::move(options);", "path": "aten/src/ATen/native/Itertools.cpp", "position": null, "original_position": 13, "commit_id": "c201cbe8327481d310f1300cb5b9a866a3fdcc5d", "original_commit_id": "af933458c615d6ea6bb9d7b101a7cc43426e67fb", "user": {"login": "zasdfgbnm", "id": 1032377, "node_id": "MDQ6VXNlcjEwMzIzNzc=", "avatar_url": "https://avatars2.githubusercontent.com/u/1032377?v=4", "gravatar_id": "", "url": "https://api.github.com/users/zasdfgbnm", "html_url": "https://github.com/zasdfgbnm", "followers_url": "https://api.github.com/users/zasdfgbnm/followers", "following_url": "https://api.github.com/users/zasdfgbnm/following{/other_user}", "gists_url": "https://api.github.com/users/zasdfgbnm/gists{/gist_id}", "starred_url": "https://api.github.com/users/zasdfgbnm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/zasdfgbnm/subscriptions", "organizations_url": "https://api.github.com/users/zasdfgbnm/orgs", "repos_url": "https://api.github.com/users/zasdfgbnm/repos", "events_url": "https://api.github.com/users/zasdfgbnm/events{/privacy}", "received_events_url": "https://api.github.com/users/zasdfgbnm/received_events", "type": "User", "site_admin": false}, "body": "@zou3519 @apaszke @fmassa I think that was a mistake of me.\r\n`std::move(options)` has type `std::remove_reference<const TensorOptions&>::type` which is actually `const TensorOptions`. Also,\r\n\r\n```C++\r\n#include <iostream>\r\n#include <utility>\r\n\r\nusing namespace std;\r\n\r\nclass A {\r\npublic:\r\n    int a;\r\n    A(int a):a(a) {}\r\n    A(A &&rhs) {\r\n        cout << \"move constructor\" << endl;\r\n        a = rhs.a;\r\n        rhs.a = 0;\r\n    }\r\n    A(const A &rhs) {\r\n        cout << \"copy constructor\" << endl;\r\n        a = rhs.a;\r\n    }\r\n};\r\n\r\nvoid f(const A &a) {\r\n    cout << \"entering f\" << endl;\r\n    A b = a;\r\n    cout << \"leaving f\" << endl;\r\n}\r\n\r\nvoid g(const A &a) {\r\n    cout << \"entering g\" << endl;\r\n    A b = move(a);\r\n    cout << \"leaving g\" << endl;\r\n}\r\n\r\nint main() {\r\n    A a = 3;\r\n    f(a);\r\n    g(a);\r\n    cout << a.a;\r\n}\r\n```\r\noutputs\r\n```\r\nentering f\r\ncopy constructor\r\nleaving f\r\nentering g\r\ncopy constructor\r\nleaving g\r\n3\r\n```", "created_at": "2018-09-25T17:38:46Z", "updated_at": "2018-11-23T15:51:56Z", "html_url": "https://github.com/pytorch/pytorch/pull/9393#discussion_r220287593", "pull_request_url": "https://api.github.com/repos/pytorch/pytorch/pulls/9393", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/220287593"}, "html": {"href": "https://github.com/pytorch/pytorch/pull/9393#discussion_r220287593"}, "pull_request": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/9393"}}, "body_html": "<p><a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=5652049\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/zou3519\">@zou3519</a> <a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=4583066\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/apaszke\">@apaszke</a> <a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=9110200\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/fmassa\">@fmassa</a> I think that was a mistake of me.<br>\n<code>std::move(options)</code> has type <code>std::remove_reference&lt;const TensorOptions&amp;&gt;::type</code> which is actually <code>const TensorOptions</code>. Also,</p>\n<div class=\"highlight highlight-source-c++\"><pre>#<span class=\"pl-k\">include</span> <span class=\"pl-s\"><span class=\"pl-pds\">&lt;</span>iostream<span class=\"pl-pds\">&gt;</span></span>\n#<span class=\"pl-k\">include</span> <span class=\"pl-s\"><span class=\"pl-pds\">&lt;</span>utility<span class=\"pl-pds\">&gt;</span></span>\n\n<span class=\"pl-k\">using</span> <span class=\"pl-k\">namespace</span> <span class=\"pl-en\">std</span><span class=\"pl-k\">;</span>\n\n<span class=\"pl-k\">class</span> <span class=\"pl-en\">A</span> {\n<span class=\"pl-k\">public:</span>\n    <span class=\"pl-k\">int</span> a;\n    <span class=\"pl-en\">A</span>(<span class=\"pl-k\">int</span> a):a(a) {}\n    <span class=\"pl-en\">A</span>(A &amp;&amp;rhs) {\n        cout &lt;&lt; <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>move constructor<span class=\"pl-pds\">\"</span></span> &lt;&lt; endl;\n        a = rhs.<span class=\"pl-smi\">a</span>;\n        rhs.<span class=\"pl-smi\">a</span> = <span class=\"pl-c1\">0</span>;\n    }\n    <span class=\"pl-en\">A</span>(<span class=\"pl-k\">const</span> A &amp;rhs) {\n        cout &lt;&lt; <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>copy constructor<span class=\"pl-pds\">\"</span></span> &lt;&lt; endl;\n        a = rhs.<span class=\"pl-smi\">a</span>;\n    }\n};\n\n<span class=\"pl-k\">void</span> <span class=\"pl-en\">f</span>(<span class=\"pl-k\">const</span> A &amp;a) {\n    cout &lt;&lt; <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>entering f<span class=\"pl-pds\">\"</span></span> &lt;&lt; endl;\n    A b = a;\n    cout &lt;&lt; <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>leaving f<span class=\"pl-pds\">\"</span></span> &lt;&lt; endl;\n}\n\n<span class=\"pl-k\">void</span> <span class=\"pl-en\">g</span>(<span class=\"pl-k\">const</span> A &amp;a) {\n    cout &lt;&lt; <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>entering g<span class=\"pl-pds\">\"</span></span> &lt;&lt; endl;\n    A b = <span class=\"pl-c1\">move</span>(a);\n    cout &lt;&lt; <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>leaving g<span class=\"pl-pds\">\"</span></span> &lt;&lt; endl;\n}\n\n<span class=\"pl-k\">int</span> <span class=\"pl-en\">main</span>() {\n    A a = <span class=\"pl-c1\">3</span>;\n    <span class=\"pl-c1\">f</span>(a);\n    <span class=\"pl-c1\">g</span>(a);\n    cout &lt;&lt; a.<span class=\"pl-smi\">a</span>;\n}</pre></div>\n<p>outputs</p>\n<pre><code>entering f\ncopy constructor\nleaving f\nentering g\ncopy constructor\nleaving g\n3\n</code></pre>", "body_text": "@zou3519 @apaszke @fmassa I think that was a mistake of me.\nstd::move(options) has type std::remove_reference<const TensorOptions&>::type which is actually const TensorOptions. Also,\n#include <iostream>\n#include <utility>\n\nusing namespace std;\n\nclass A {\npublic:\n    int a;\n    A(int a):a(a) {}\n    A(A &&rhs) {\n        cout << \"move constructor\" << endl;\n        a = rhs.a;\n        rhs.a = 0;\n    }\n    A(const A &rhs) {\n        cout << \"copy constructor\" << endl;\n        a = rhs.a;\n    }\n};\n\nvoid f(const A &a) {\n    cout << \"entering f\" << endl;\n    A b = a;\n    cout << \"leaving f\" << endl;\n}\n\nvoid g(const A &a) {\n    cout << \"entering g\" << endl;\n    A b = move(a);\n    cout << \"leaving g\" << endl;\n}\n\nint main() {\n    A a = 3;\n    f(a);\n    g(a);\n    cout << a.a;\n}\noutputs\nentering f\ncopy constructor\nleaving f\nentering g\ncopy constructor\nleaving g\n3", "in_reply_to_id": 220274863}