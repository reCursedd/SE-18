{"url": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/212409687", "pull_request_review_id": 149037321, "id": 212409687, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIxMjQwOTY4Nw==", "diff_hunk": "@@ -8528,29 +8528,23 @@ def test_cartesian_prod(self):\n         a = torch.tensor(1)\n         b = torch.tensor([1, 2, 3])\n         c = torch.tensor([1, 2])\n-        a_, b_, c_ = torch.cartesian_prod([a, b, c])\n-        expected_b = torch.tensor([1, 1, 2, 2, 3, 3])\n-        expected_c = torch.tensor([1, 2, 1, 2, 1, 2])\n-        self.assertEqual((a - a_).abs().max().item(), 0)\n-        self.assertEqual(b_, expected_b)\n-        self.assertEqual(c_, expected_c)\n+        prod = torch.cartesian_prod([a, b, c])\n+        expected = torch.tensor(list(product([a], b, c)))\n+        self.assertEqual(expected, prod)", "path": "test/test_torch.py", "position": 19, "original_position": 21, "commit_id": "c201cbe8327481d310f1300cb5b9a866a3fdcc5d", "original_commit_id": "27e466a57e4c3a664fa1d37be42d9a6228d433a1", "user": {"login": "zou3519", "id": 5652049, "node_id": "MDQ6VXNlcjU2NTIwNDk=", "avatar_url": "https://avatars3.githubusercontent.com/u/5652049?v=4", "gravatar_id": "", "url": "https://api.github.com/users/zou3519", "html_url": "https://github.com/zou3519", "followers_url": "https://api.github.com/users/zou3519/followers", "following_url": "https://api.github.com/users/zou3519/following{/other_user}", "gists_url": "https://api.github.com/users/zou3519/gists{/gist_id}", "starred_url": "https://api.github.com/users/zou3519/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/zou3519/subscriptions", "organizations_url": "https://api.github.com/users/zou3519/orgs", "repos_url": "https://api.github.com/users/zou3519/repos", "events_url": "https://api.github.com/users/zou3519/events{/privacy}", "received_events_url": "https://api.github.com/users/zou3519/received_events", "type": "User", "site_admin": false}, "body": "Please add some tests for edge cases. In particular, I'd like to see the following:\r\n- one tensor is an empty tensor `torch.zeros(0, dtype=torch.int)`\r\n- what happens when you call cartesian_prod with only one element?\r\n", "created_at": "2018-08-23T18:20:30Z", "updated_at": "2018-11-23T15:49:50Z", "html_url": "https://github.com/pytorch/pytorch/pull/9393#discussion_r212409687", "pull_request_url": "https://api.github.com/repos/pytorch/pytorch/pulls/9393", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/212409687"}, "html": {"href": "https://github.com/pytorch/pytorch/pull/9393#discussion_r212409687"}, "pull_request": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/9393"}}, "body_html": "<p>Please add some tests for edge cases. In particular, I'd like to see the following:</p>\n<ul>\n<li>one tensor is an empty tensor <code>torch.zeros(0, dtype=torch.int)</code></li>\n<li>what happens when you call cartesian_prod with only one element?</li>\n</ul>", "body_text": "Please add some tests for edge cases. In particular, I'd like to see the following:\n\none tensor is an empty tensor torch.zeros(0, dtype=torch.int)\nwhat happens when you call cartesian_prod with only one element?"}