{"url": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/235097903", "pull_request_review_id": 176886048, "id": 235097903, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIzNTA5NzkwMw==", "diff_hunk": "@@ -652,6 +653,37 @@ def argsort(input, dim=None, descending=False):\n     return torch.sort(input, dim, descending)[1]\n \n \n+def cartesian_prod(*tensors):\n+    \"\"\"Do cartesian product of the given sequence of tensors. The behavior is similar to\n+    python's `itertools.product`.\n+\n+    Arguments:\n+        *tensors: any number of 1 dimensional tensors.\n+\n+    Returns:\n+        Tensor: A tensor equivalent to converting all the input tensors into lists,\n+            do `itertools.product` on these lists, and finally convert the resulting list\n+            into tensor.\n+\n+    Example::\n+\n+        >>> a = [1, 2, 3]\n+        >>> b = [4, 5]\n+        >>> list(itertools.product(a, b))\n+        [(1, 4), (1, 5), (2, 4), (2, 5), (3, 4), (3, 5)]\n+        >>> tensor_a = torch.tensor(a)\n+        >>> tensor_b = torch.tensor(b)\n+        >>> torch.cartesian_prod(tensor_a, tensor_b)\n+        tensor([[1, 4],\n+                [1, 5],\n+                [2, 4],\n+                [2, 5],\n+                [3, 4],\n+                [3, 5]])\n+    \"\"\"\n+    return torch._C._VariableFunctions.cartesian_prod(tensors)", "path": "torch/functional.py", "position": 40, "original_position": 40, "commit_id": "c201cbe8327481d310f1300cb5b9a866a3fdcc5d", "original_commit_id": "c201cbe8327481d310f1300cb5b9a866a3fdcc5d", "user": {"login": "zou3519", "id": 5652049, "node_id": "MDQ6VXNlcjU2NTIwNDk=", "avatar_url": "https://avatars3.githubusercontent.com/u/5652049?v=4", "gravatar_id": "", "url": "https://api.github.com/users/zou3519", "html_url": "https://github.com/zou3519", "followers_url": "https://api.github.com/users/zou3519/followers", "following_url": "https://api.github.com/users/zou3519/following{/other_user}", "gists_url": "https://api.github.com/users/zou3519/gists{/gist_id}", "starred_url": "https://api.github.com/users/zou3519/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/zou3519/subscriptions", "organizations_url": "https://api.github.com/users/zou3519/orgs", "repos_url": "https://api.github.com/users/zou3519/repos", "events_url": "https://api.github.com/users/zou3519/events{/privacy}", "received_events_url": "https://api.github.com/users/zou3519/received_events", "type": "User", "site_admin": false}, "body": "Can't you call torch.cartesian_prod(tensors)?\r\n\r\nDoing it that way helps enable JIT support for this function.", "created_at": "2018-11-20T17:26:08Z", "updated_at": "2018-11-23T15:55:14Z", "html_url": "https://github.com/pytorch/pytorch/pull/9393#discussion_r235097903", "pull_request_url": "https://api.github.com/repos/pytorch/pytorch/pulls/9393", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/235097903"}, "html": {"href": "https://github.com/pytorch/pytorch/pull/9393#discussion_r235097903"}, "pull_request": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/9393"}}, "body_html": "<p>Can't you call torch.cartesian_prod(tensors)?</p>\n<p>Doing it that way helps enable JIT support for this function.</p>", "body_text": "Can't you call torch.cartesian_prod(tensors)?\nDoing it that way helps enable JIT support for this function."}