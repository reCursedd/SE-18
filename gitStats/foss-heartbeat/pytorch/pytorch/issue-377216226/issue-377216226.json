{"url": "https://api.github.com/repos/pytorch/pytorch/issues/13560", "repository_url": "https://api.github.com/repos/pytorch/pytorch", "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/13560/labels{/name}", "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/13560/comments", "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/13560/events", "html_url": "https://github.com/pytorch/pytorch/issues/13560", "id": 377216226, "node_id": "MDU6SXNzdWUzNzcyMTYyMjY=", "number": 13560, "title": "Exception messages are getting swallowed in Script from python functions", "user": {"login": "dzhulgakov", "id": 17890620, "node_id": "MDQ6VXNlcjE3ODkwNjIw", "avatar_url": "https://avatars2.githubusercontent.com/u/17890620?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dzhulgakov", "html_url": "https://github.com/dzhulgakov", "followers_url": "https://api.github.com/users/dzhulgakov/followers", "following_url": "https://api.github.com/users/dzhulgakov/following{/other_user}", "gists_url": "https://api.github.com/users/dzhulgakov/gists{/gist_id}", "starred_url": "https://api.github.com/users/dzhulgakov/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dzhulgakov/subscriptions", "organizations_url": "https://api.github.com/users/dzhulgakov/orgs", "repos_url": "https://api.github.com/users/dzhulgakov/repos", "events_url": "https://api.github.com/users/dzhulgakov/events{/privacy}", "received_events_url": "https://api.github.com/users/dzhulgakov/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": {"login": "zdevito", "id": 370202, "node_id": "MDQ6VXNlcjM3MDIwMg==", "avatar_url": "https://avatars0.githubusercontent.com/u/370202?v=4", "gravatar_id": "", "url": "https://api.github.com/users/zdevito", "html_url": "https://github.com/zdevito", "followers_url": "https://api.github.com/users/zdevito/followers", "following_url": "https://api.github.com/users/zdevito/following{/other_user}", "gists_url": "https://api.github.com/users/zdevito/gists{/gist_id}", "starred_url": "https://api.github.com/users/zdevito/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/zdevito/subscriptions", "organizations_url": "https://api.github.com/users/zdevito/orgs", "repos_url": "https://api.github.com/users/zdevito/repos", "events_url": "https://api.github.com/users/zdevito/events{/privacy}", "received_events_url": "https://api.github.com/users/zdevito/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "zdevito", "id": 370202, "node_id": "MDQ6VXNlcjM3MDIwMg==", "avatar_url": "https://avatars0.githubusercontent.com/u/370202?v=4", "gravatar_id": "", "url": "https://api.github.com/users/zdevito", "html_url": "https://github.com/zdevito", "followers_url": "https://api.github.com/users/zdevito/followers", "following_url": "https://api.github.com/users/zdevito/following{/other_user}", "gists_url": "https://api.github.com/users/zdevito/gists{/gist_id}", "starred_url": "https://api.github.com/users/zdevito/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/zdevito/subscriptions", "organizations_url": "https://api.github.com/users/zdevito/orgs", "repos_url": "https://api.github.com/users/zdevito/repos", "events_url": "https://api.github.com/users/zdevito/events{/privacy}", "received_events_url": "https://api.github.com/users/zdevito/received_events", "type": "User", "site_admin": false}, {"login": "jamesr66a", "id": 4685384, "node_id": "MDQ6VXNlcjQ2ODUzODQ=", "avatar_url": "https://avatars2.githubusercontent.com/u/4685384?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jamesr66a", "html_url": "https://github.com/jamesr66a", "followers_url": "https://api.github.com/users/jamesr66a/followers", "following_url": "https://api.github.com/users/jamesr66a/following{/other_user}", "gists_url": "https://api.github.com/users/jamesr66a/gists{/gist_id}", "starred_url": "https://api.github.com/users/jamesr66a/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jamesr66a/subscriptions", "organizations_url": "https://api.github.com/users/jamesr66a/orgs", "repos_url": "https://api.github.com/users/jamesr66a/repos", "events_url": "https://api.github.com/users/jamesr66a/events{/privacy}", "received_events_url": "https://api.github.com/users/jamesr66a/received_events", "type": "User", "site_admin": false}, {"login": "wanchaol", "id": 9443650, "node_id": "MDQ6VXNlcjk0NDM2NTA=", "avatar_url": "https://avatars2.githubusercontent.com/u/9443650?v=4", "gravatar_id": "", "url": "https://api.github.com/users/wanchaol", "html_url": "https://github.com/wanchaol", "followers_url": "https://api.github.com/users/wanchaol/followers", "following_url": "https://api.github.com/users/wanchaol/following{/other_user}", "gists_url": "https://api.github.com/users/wanchaol/gists{/gist_id}", "starred_url": "https://api.github.com/users/wanchaol/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/wanchaol/subscriptions", "organizations_url": "https://api.github.com/users/wanchaol/orgs", "repos_url": "https://api.github.com/users/wanchaol/repos", "events_url": "https://api.github.com/users/wanchaol/events{/privacy}", "received_events_url": "https://api.github.com/users/wanchaol/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 2, "created_at": "2018-11-05T00:57:02Z", "updated_at": "2018-11-07T02:02:23Z", "closed_at": "2018-11-07T02:02:23Z", "author_association": "MEMBER", "body_html": "<h2><g-emoji class=\"g-emoji\" alias=\"bug\" fallback-src=\"https://assets-cdn.github.com/images/icons/emoji/unicode/1f41b.png\">\ud83d\udc1b</g-emoji> Bug</h2>\n<p>When script wraps a python function, the exception messages from python don't get back to the user and appear as just 'std::exception'</p>\n<h2>To Reproduce</h2>\n<pre><code>import torch\nfrom torch import nn\n\nclass Foo(torch.jit.ScriptModule):\n    def __init__(self):\n        super(Foo, self).__init__()\n        self.conv = nn.Conv2d(1, 10, kernel_size=5)\n\n    @torch.jit.script_method\n    def forward(self, x):\n        # `self.conv` gets picked up as python pointer\n        return self.conv(x)\n        # direct script functions produce error message fine\n        # return torch.conv2d(x, torch.ones([10,1,5,5]), torch.ones([10]))\n\nfoo = Foo()\nprint(foo.graph)\nfoo(torch.ones([123])) # wrong size\n</code></pre>\n<p>Produces</p>\n<pre><code>graph(%x : Dynamic) {\n  %1 : Dynamic = ^&lt;python_value&gt;()(%x)\n  return (%1);\n}\n\nRuntimeError:\nstd::exception:\noperation failed in interpreter:\n@torch.jit.script_method\ndef forward(self, x):\n    # `self.conv` gets picked up as python pointer\n    return self.conv(x)\n           ~~~~~~~~~ &lt;--- HERE\n</code></pre>\n<h2>Expected behavior</h2>\n<p>If one removes \"script\" or uses direct ATen wrapper, the message is fine:</p>\n<pre><code>RuntimeError: Expected 4-dimensional input for 4-dimensional weight [10, 1, 5, 5], but got 1-dimensional input of size [123] instead\n</code></pre>", "body_text": "\ud83d\udc1b Bug\nWhen script wraps a python function, the exception messages from python don't get back to the user and appear as just 'std::exception'\nTo Reproduce\nimport torch\nfrom torch import nn\n\nclass Foo(torch.jit.ScriptModule):\n    def __init__(self):\n        super(Foo, self).__init__()\n        self.conv = nn.Conv2d(1, 10, kernel_size=5)\n\n    @torch.jit.script_method\n    def forward(self, x):\n        # `self.conv` gets picked up as python pointer\n        return self.conv(x)\n        # direct script functions produce error message fine\n        # return torch.conv2d(x, torch.ones([10,1,5,5]), torch.ones([10]))\n\nfoo = Foo()\nprint(foo.graph)\nfoo(torch.ones([123])) # wrong size\n\nProduces\ngraph(%x : Dynamic) {\n  %1 : Dynamic = ^<python_value>()(%x)\n  return (%1);\n}\n\nRuntimeError:\nstd::exception:\noperation failed in interpreter:\n@torch.jit.script_method\ndef forward(self, x):\n    # `self.conv` gets picked up as python pointer\n    return self.conv(x)\n           ~~~~~~~~~ <--- HERE\n\nExpected behavior\nIf one removes \"script\" or uses direct ATen wrapper, the message is fine:\nRuntimeError: Expected 4-dimensional input for 4-dimensional weight [10, 1, 5, 5], but got 1-dimensional input of size [123] instead", "body": "## \ud83d\udc1b Bug\r\n\r\nWhen script wraps a python function, the exception messages from python don't get back to the user and appear as just 'std::exception'\r\n\r\n## To Reproduce\r\n\r\n```\r\nimport torch\r\nfrom torch import nn\r\n\r\nclass Foo(torch.jit.ScriptModule):\r\n    def __init__(self):\r\n        super(Foo, self).__init__()\r\n        self.conv = nn.Conv2d(1, 10, kernel_size=5)\r\n\r\n    @torch.jit.script_method\r\n    def forward(self, x):\r\n        # `self.conv` gets picked up as python pointer\r\n        return self.conv(x)\r\n        # direct script functions produce error message fine\r\n        # return torch.conv2d(x, torch.ones([10,1,5,5]), torch.ones([10]))\r\n\r\nfoo = Foo()\r\nprint(foo.graph)\r\nfoo(torch.ones([123])) # wrong size\r\n```\r\n\r\nProduces\r\n```\r\ngraph(%x : Dynamic) {\r\n  %1 : Dynamic = ^<python_value>()(%x)\r\n  return (%1);\r\n}\r\n\r\nRuntimeError:\r\nstd::exception:\r\noperation failed in interpreter:\r\n@torch.jit.script_method\r\ndef forward(self, x):\r\n    # `self.conv` gets picked up as python pointer\r\n    return self.conv(x)\r\n           ~~~~~~~~~ <--- HERE\r\n```\r\n\r\n## Expected behavior\r\n\r\nIf one removes \"script\" or uses direct ATen wrapper, the message is fine:\r\n```\r\nRuntimeError: Expected 4-dimensional input for 4-dimensional weight [10, 1, 5, 5], but got 1-dimensional input of size [123] instead\r\n```"}