{"url": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/121782917", "pull_request_review_id": 43839514, "id": 121782917, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEyMTc4MjkxNw==", "diff_hunk": "@@ -2698,6 +2707,8 @@\n \n If :attr:`mat` is a `n x m` Tensor, :attr:`vec` is a 1D Tensor of size `m`, :attr:`out` will be 1D of size `n`.\n \n+.. note:: This function does not :ref:`broadcast <broadcasting-semantics>`.", "path": "torch/_torch_docs.py", "position": 45, "original_position": 45, "commit_id": "07c3ae79bba7dcb5aeb730b192c3ba01a828319c", "original_commit_id": "07c3ae79bba7dcb5aeb730b192c3ba01a828319c", "user": {"login": "fmassa", "id": 9110200, "node_id": "MDQ6VXNlcjkxMTAyMDA=", "avatar_url": "https://avatars2.githubusercontent.com/u/9110200?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fmassa", "html_url": "https://github.com/fmassa", "followers_url": "https://api.github.com/users/fmassa/followers", "following_url": "https://api.github.com/users/fmassa/following{/other_user}", "gists_url": "https://api.github.com/users/fmassa/gists{/gist_id}", "starred_url": "https://api.github.com/users/fmassa/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fmassa/subscriptions", "organizations_url": "https://api.github.com/users/fmassa/orgs", "repos_url": "https://api.github.com/users/fmassa/repos", "events_url": "https://api.github.com/users/fmassa/events{/privacy}", "received_events_url": "https://api.github.com/users/fmassa/received_events", "type": "User", "site_admin": false}, "body": "Do we want our users to migrate to use `matmul` instead of the individual `mm`, `bmm`, `ger`, etc? Are there benefits on using these low-level functions compared to `matmul`?\r\nIf not, then I'd say to mention in the docs that these functions are internal or low-level, and point to the `matmul` documentation as well (not only for `mm` and `bmm`, but also `ger` ad `mv`.\r\nWhat do you think?", "created_at": "2017-06-13T20:06:30Z", "updated_at": "2018-11-23T15:33:52Z", "html_url": "https://github.com/pytorch/pytorch/pull/1781#discussion_r121782917", "pull_request_url": "https://api.github.com/repos/pytorch/pytorch/pulls/1781", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/121782917"}, "html": {"href": "https://github.com/pytorch/pytorch/pull/1781#discussion_r121782917"}, "pull_request": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/1781"}}, "body_html": "<p>Do we want our users to migrate to use <code>matmul</code> instead of the individual <code>mm</code>, <code>bmm</code>, <code>ger</code>, etc? Are there benefits on using these low-level functions compared to <code>matmul</code>?<br>\nIf not, then I'd say to mention in the docs that these functions are internal or low-level, and point to the <code>matmul</code> documentation as well (not only for <code>mm</code> and <code>bmm</code>, but also <code>ger</code> ad <code>mv</code>.<br>\nWhat do you think?</p>", "body_text": "Do we want our users to migrate to use matmul instead of the individual mm, bmm, ger, etc? Are there benefits on using these low-level functions compared to matmul?\nIf not, then I'd say to mention in the docs that these functions are internal or low-level, and point to the matmul documentation as well (not only for mm and bmm, but also ger ad mv.\nWhat do you think?"}