{"url": "https://api.github.com/repos/pytorch/pytorch/issues/comments/307053309", "html_url": "https://github.com/pytorch/pytorch/issues/975#issuecomment-307053309", "issue_url": "https://api.github.com/repos/pytorch/pytorch/issues/975", "id": 307053309, "node_id": "MDEyOklzc3VlQ29tbWVudDMwNzA1MzMwOQ==", "user": {"login": "apaszke", "id": 4583066, "node_id": "MDQ6VXNlcjQ1ODMwNjY=", "avatar_url": "https://avatars3.githubusercontent.com/u/4583066?v=4", "gravatar_id": "", "url": "https://api.github.com/users/apaszke", "html_url": "https://github.com/apaszke", "followers_url": "https://api.github.com/users/apaszke/followers", "following_url": "https://api.github.com/users/apaszke/following{/other_user}", "gists_url": "https://api.github.com/users/apaszke/gists{/gist_id}", "starred_url": "https://api.github.com/users/apaszke/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/apaszke/subscriptions", "organizations_url": "https://api.github.com/users/apaszke/orgs", "repos_url": "https://api.github.com/users/apaszke/repos", "events_url": "https://api.github.com/users/apaszke/events{/privacy}", "received_events_url": "https://api.github.com/users/apaszke/received_events", "type": "User", "site_admin": false}, "created_at": "2017-06-08T09:40:52Z", "updated_at": "2017-06-08T09:40:52Z", "author_association": "MEMBER", "body_html": "<p>I don't think it's solved. We're still linking against both <code>libgomp</code> and <code>libiomp</code>, which means that without env variables, users can't reliably set the number of threads (depending on which one is loaded first, they can only control MKL threads or TH threads, but never both). It can also lead to some very weird behaviour in the future, because one of these libraries probably has its public symbols resolved to these from the other one. This is what <code>ldd</code> shows for me:</p>\n<pre><code>\tlibiomp5.so =&gt; /home/apaszke/miniconda3/lib/libiomp5.so (0x00007f277a9dc000)\n\tlibgomp.so.1 =&gt; /usr/lib/x86_64-linux-gnu/libgomp.so.1 (0x00007f277a7ba000)\n</code></pre>", "body_text": "I don't think it's solved. We're still linking against both libgomp and libiomp, which means that without env variables, users can't reliably set the number of threads (depending on which one is loaded first, they can only control MKL threads or TH threads, but never both). It can also lead to some very weird behaviour in the future, because one of these libraries probably has its public symbols resolved to these from the other one. This is what ldd shows for me:\n\tlibiomp5.so => /home/apaszke/miniconda3/lib/libiomp5.so (0x00007f277a9dc000)\n\tlibgomp.so.1 => /usr/lib/x86_64-linux-gnu/libgomp.so.1 (0x00007f277a7ba000)", "body": "I don't think it's solved. We're still linking against both `libgomp` and `libiomp`, which means that without env variables, users can't reliably set the number of threads (depending on which one is loaded first, they can only control MKL threads or TH threads, but never both). It can also lead to some very weird behaviour in the future, because one of these libraries probably has its public symbols resolved to these from the other one. This is what `ldd` shows for me:\r\n```\r\n\tlibiomp5.so => /home/apaszke/miniconda3/lib/libiomp5.so (0x00007f277a9dc000)\r\n\tlibgomp.so.1 => /usr/lib/x86_64-linux-gnu/libgomp.so.1 (0x00007f277a7ba000)\r\n```"}