{"url": "https://api.github.com/repos/pytorch/pytorch/issues/comments/285872659", "html_url": "https://github.com/pytorch/pytorch/issues/975#issuecomment-285872659", "issue_url": "https://api.github.com/repos/pytorch/pytorch/issues/975", "id": 285872659, "node_id": "MDEyOklzc3VlQ29tbWVudDI4NTg3MjY1OQ==", "user": {"login": "floringogianu", "id": 1670348, "node_id": "MDQ6VXNlcjE2NzAzNDg=", "avatar_url": "https://avatars3.githubusercontent.com/u/1670348?v=4", "gravatar_id": "", "url": "https://api.github.com/users/floringogianu", "html_url": "https://github.com/floringogianu", "followers_url": "https://api.github.com/users/floringogianu/followers", "following_url": "https://api.github.com/users/floringogianu/following{/other_user}", "gists_url": "https://api.github.com/users/floringogianu/gists{/gist_id}", "starred_url": "https://api.github.com/users/floringogianu/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/floringogianu/subscriptions", "organizations_url": "https://api.github.com/users/floringogianu/orgs", "repos_url": "https://api.github.com/users/floringogianu/repos", "events_url": "https://api.github.com/users/floringogianu/events{/privacy}", "received_events_url": "https://api.github.com/users/floringogianu/received_events", "type": "User", "site_admin": false}, "created_at": "2017-03-11T15:14:34Z", "updated_at": "2017-03-11T15:18:05Z", "author_association": "NONE", "body_html": "<p>In general we noticed @761d679 finishing 3x times faster than <code>OMP_NUM_THREADS=1 python mp_benchmark.py</code> on the latest commits, especially when launching more processes. So while setting the variable helps a lot, there is still something off happening.</p>\n<p>We have pytorch installed on several machines and we get different performance figures. Right now we don't feel we can control the installation process well enough. For example on two identical 40-threads machines commit @4647f753 performs completely different: machine A performs simillar with @761d679 and is our baseline. Machine B with @4647f753 is at best 3x slower (even with <code>OMP_NUM_THREADS</code>) and slows down to a halt wihout it. However it performs the same as machine A with @761d679. <code>ldd</code> has the same output as above in <em>all cases</em>.</p>\n<p>Please let me know if there's anything else we can look into and report back. Not sure if these details are relevant for this issue anymore.</p>", "body_text": "In general we noticed @761d679 finishing 3x times faster than OMP_NUM_THREADS=1 python mp_benchmark.py on the latest commits, especially when launching more processes. So while setting the variable helps a lot, there is still something off happening.\nWe have pytorch installed on several machines and we get different performance figures. Right now we don't feel we can control the installation process well enough. For example on two identical 40-threads machines commit @4647f753 performs completely different: machine A performs simillar with @761d679 and is our baseline. Machine B with @4647f753 is at best 3x slower (even with OMP_NUM_THREADS) and slows down to a halt wihout it. However it performs the same as machine A with @761d679. ldd has the same output as above in all cases.\nPlease let me know if there's anything else we can look into and report back. Not sure if these details are relevant for this issue anymore.", "body": "In general we noticed @761d679 finishing 3x times faster than `OMP_NUM_THREADS=1 python mp_benchmark.py` on the latest commits, especially when launching more processes. So while setting the variable helps a lot, there is still something off happening.\r\n\r\nWe have pytorch installed on several machines and we get different performance figures. Right now we don't feel we can control the installation process well enough. For example on two identical 40-threads machines commit @4647f753 performs completely different: machine A performs simillar with @761d679 and is our baseline. Machine B with @4647f753 is at best 3x slower (even with `OMP_NUM_THREADS`) and slows down to a halt wihout it. However it performs the same as machine A with @761d679. `ldd` has the same output as above in *all cases*.\r\n\r\nPlease let me know if there's anything else we can look into and report back. Not sure if these details are relevant for this issue anymore."}