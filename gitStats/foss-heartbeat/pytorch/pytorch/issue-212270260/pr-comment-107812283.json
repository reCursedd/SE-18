{"url": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/107812283", "pull_request_review_id": 28807006, "id": 107812283, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEwNzgxMjI4Mw==", "diff_hunk": "@@ -357,6 +388,38 @@ def modules(self, memo=None):\n                 for m in module.modules(memo):\n                     yield m\n \n+    def named_modules(self, memo=None, prefix=None):\n+        \"\"\"Returns an iterator over all modules in the network, yielding\n+        both the name of the module as well as the module itself.\n+\n+        Note:\n+            Duplicate modules are returned only once. In the following\n+            example, ``l`` will be returned only once.\n+\n+            >>> l = nn.Linear(2, 2)\n+            >>> net = nn.Sequential(l, l)\n+            >>> for idx, m in enumerate(net.named_modules()):\n+            >>>     print(idx, '->', m)\n+            0 -> ('', Sequential (\n+              (0): Linear (2 -> 2)\n+              (1): Linear (2 -> 2)\n+            ))\n+            1 -> ('0', Linear (2 -> 2))\n+        \"\"\"\n+\n+        if memo is None:\n+            memo = set()\n+            prefix = []\n+        if self not in memo:\n+            memo.add(self)\n+            yield '.'.join(prefix), self", "path": "torch/nn/modules/module.py", "position": null, "original_position": 75, "commit_id": "43298c785f39c50d2b6cdc1b7d3dec597d16f3a7", "original_commit_id": "f063c61bda82b2e34f85454c765fc5ecf881b6b2", "user": {"login": "fmassa", "id": 9110200, "node_id": "MDQ6VXNlcjkxMTAyMDA=", "avatar_url": "https://avatars2.githubusercontent.com/u/9110200?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fmassa", "html_url": "https://github.com/fmassa", "followers_url": "https://api.github.com/users/fmassa/followers", "following_url": "https://api.github.com/users/fmassa/following{/other_user}", "gists_url": "https://api.github.com/users/fmassa/gists{/gist_id}", "starred_url": "https://api.github.com/users/fmassa/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fmassa/subscriptions", "organizations_url": "https://api.github.com/users/fmassa/orgs", "repos_url": "https://api.github.com/users/fmassa/repos", "events_url": "https://api.github.com/users/fmassa/events{/privacy}", "received_events_url": "https://api.github.com/users/fmassa/received_events", "type": "User", "site_admin": false}, "body": "Oh, now I remember. I added this `join` to avoid having spurious `.` either in the beginning or in the end of the names. I'll see if I fix it without using `join`", "created_at": "2017-03-24T00:06:46Z", "updated_at": "2018-11-23T15:32:50Z", "html_url": "https://github.com/pytorch/pytorch/pull/941#discussion_r107812283", "pull_request_url": "https://api.github.com/repos/pytorch/pytorch/pulls/941", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/107812283"}, "html": {"href": "https://github.com/pytorch/pytorch/pull/941#discussion_r107812283"}, "pull_request": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/941"}}, "body_html": "<p>Oh, now I remember. I added this <code>join</code> to avoid having spurious <code>.</code> either in the beginning or in the end of the names. I'll see if I fix it without using <code>join</code></p>", "body_text": "Oh, now I remember. I added this join to avoid having spurious . either in the beginning or in the end of the names. I'll see if I fix it without using join", "in_reply_to_id": 107790344}