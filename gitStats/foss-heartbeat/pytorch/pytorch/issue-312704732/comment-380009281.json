{"url": "https://api.github.com/repos/pytorch/pytorch/issues/comments/380009281", "html_url": "https://github.com/pytorch/pytorch/issues/6442#issuecomment-380009281", "issue_url": "https://api.github.com/repos/pytorch/pytorch/issues/6442", "id": 380009281, "node_id": "MDEyOklzc3VlQ29tbWVudDM4MDAwOTI4MQ==", "user": {"login": "Lyken17", "id": 7783214, "node_id": "MDQ6VXNlcjc3ODMyMTQ=", "avatar_url": "https://avatars2.githubusercontent.com/u/7783214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Lyken17", "html_url": "https://github.com/Lyken17", "followers_url": "https://api.github.com/users/Lyken17/followers", "following_url": "https://api.github.com/users/Lyken17/following{/other_user}", "gists_url": "https://api.github.com/users/Lyken17/gists{/gist_id}", "starred_url": "https://api.github.com/users/Lyken17/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Lyken17/subscriptions", "organizations_url": "https://api.github.com/users/Lyken17/orgs", "repos_url": "https://api.github.com/users/Lyken17/repos", "events_url": "https://api.github.com/users/Lyken17/events{/privacy}", "received_events_url": "https://api.github.com/users/Lyken17/received_events", "type": "User", "site_admin": false}, "created_at": "2018-04-10T07:56:15Z", "updated_at": "2018-04-10T07:56:15Z", "author_association": "NONE", "body_html": "<p>I think <code>nn.Dropout</code> already supports that</p>\n<div class=\"highlight highlight-source-python\"><pre>In [<span class=\"pl-c1\">5</span>]: model <span class=\"pl-k\">=</span> nn.Sequential(\n   <span class=\"pl-c1\">...</span>:     nn.Linear(<span class=\"pl-c1\">10</span>, <span class=\"pl-c1\">5</span>),\n   <span class=\"pl-c1\">...</span>:     nn.Dropout(<span class=\"pl-c1\">0.5</span>),\n   <span class=\"pl-c1\">...</span>:     nn.Linear(<span class=\"pl-c1\">5</span>, <span class=\"pl-c1\">1</span>)\n   <span class=\"pl-c1\">...</span>: )\n\nIn [<span class=\"pl-c1\">10</span>]: data <span class=\"pl-k\">=</span> Variable(torch.ones(<span class=\"pl-c1\">5</span>, <span class=\"pl-c1\">3</span>, <span class=\"pl-c1\">10</span>))\nIn [<span class=\"pl-c1\">11</span>]: model(data)\nOut[<span class=\"pl-c1\">11</span>]:\nVariable containing:\n(<span class=\"pl-c1\">0</span> ,.,.) <span class=\"pl-k\">=</span>\n <span class=\"pl-k\">-</span><span class=\"pl-c1\">0.1277</span>\n <span class=\"pl-k\">-</span><span class=\"pl-c1\">0.5975</span>\n <span class=\"pl-k\">-</span><span class=\"pl-c1\">1.0493</span>\n\n(<span class=\"pl-c1\">1</span> ,.,.) <span class=\"pl-k\">=</span>\n <span class=\"pl-k\">-</span><span class=\"pl-c1\">0.5795</span>\n <span class=\"pl-k\">-</span><span class=\"pl-c1\">0.1277</span>\n <span class=\"pl-k\">-</span><span class=\"pl-c1\">0.8607</span>\n\n(<span class=\"pl-c1\">2</span> ,.,.) <span class=\"pl-k\">=</span>\n <span class=\"pl-k\">-</span><span class=\"pl-c1\">0.8497</span>\n <span class=\"pl-k\">-</span><span class=\"pl-c1\">0.5865</span>\n <span class=\"pl-k\">-</span><span class=\"pl-c1\">0.8607</span>\n\n(<span class=\"pl-c1\">3</span> ,.,.) <span class=\"pl-k\">=</span>\n <span class=\"pl-k\">-</span><span class=\"pl-c1\">0.8623</span>\n <span class=\"pl-k\">-</span><span class=\"pl-c1\">0.5990</span>\n <span class=\"pl-k\">-</span><span class=\"pl-c1\">0.8607</span>\n\n(<span class=\"pl-c1\">4</span> ,.,.) <span class=\"pl-k\">=</span>\n <span class=\"pl-k\">-</span><span class=\"pl-c1\">0.1403</span>\n <span class=\"pl-k\">-</span><span class=\"pl-c1\">0.5780</span>\n <span class=\"pl-k\">-</span><span class=\"pl-c1\">0.3994</span>\n[torch.FloatTensor of size <span class=\"pl-ii\">5x3x1</span>]</pre></div>", "body_text": "I think nn.Dropout already supports that\nIn [5]: model = nn.Sequential(\n   ...:     nn.Linear(10, 5),\n   ...:     nn.Dropout(0.5),\n   ...:     nn.Linear(5, 1)\n   ...: )\n\nIn [10]: data = Variable(torch.ones(5, 3, 10))\nIn [11]: model(data)\nOut[11]:\nVariable containing:\n(0 ,.,.) =\n -0.1277\n -0.5975\n -1.0493\n\n(1 ,.,.) =\n -0.5795\n -0.1277\n -0.8607\n\n(2 ,.,.) =\n -0.8497\n -0.5865\n -0.8607\n\n(3 ,.,.) =\n -0.8623\n -0.5990\n -0.8607\n\n(4 ,.,.) =\n -0.1403\n -0.5780\n -0.3994\n[torch.FloatTensor of size 5x3x1]", "body": "I think `nn.Dropout` already supports that\r\n\r\n```python\r\nIn [5]: model = nn.Sequential(\r\n   ...:     nn.Linear(10, 5),\r\n   ...:     nn.Dropout(0.5),\r\n   ...:     nn.Linear(5, 1)\r\n   ...: )\r\n\r\nIn [10]: data = Variable(torch.ones(5, 3, 10))\r\nIn [11]: model(data)\r\nOut[11]:\r\nVariable containing:\r\n(0 ,.,.) =\r\n -0.1277\r\n -0.5975\r\n -1.0493\r\n\r\n(1 ,.,.) =\r\n -0.5795\r\n -0.1277\r\n -0.8607\r\n\r\n(2 ,.,.) =\r\n -0.8497\r\n -0.5865\r\n -0.8607\r\n\r\n(3 ,.,.) =\r\n -0.8623\r\n -0.5990\r\n -0.8607\r\n\r\n(4 ,.,.) =\r\n -0.1403\r\n -0.5780\r\n -0.3994\r\n[torch.FloatTensor of size 5x3x1]\r\n```\r\n"}