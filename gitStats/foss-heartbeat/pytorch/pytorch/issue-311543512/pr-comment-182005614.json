{"url": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/182005614", "pull_request_review_id": 112727818, "id": 182005614, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MjAwNTYxNA==", "diff_hunk": "@@ -1296,6 +1296,57 @@ def test_cmul(self):\n     def test_cpow(self):\n         self._test_cop(torch.pow, lambda x, y: float('nan') if x < 0 else math.pow(x, y))\n \n+    @unittest.skipIf(not TEST_NUMPY, 'Numpy not found')\n+    def test_einsum(self):\n+        # test cases taken from https://gist.github.com/rockt/15ee013889d65342088e9260a377dc8f\n+        x = torch.randn(5)\n+        y = torch.randn(7)\n+        A = torch.randn(3, 5)\n+        B = torch.randn(2, 5)\n+        C = torch.randn(2, 3, 5)\n+        D = torch.randn(2, 5, 7)\n+        E = torch.randn(7, 9)\n+        F = torch.randn(2, 3, 5, 7)\n+        G = torch.randn(7, 11, 13)\n+        l = torch.randn(5, 10)\n+        r = torch.randn(5, 20)\n+        w = torch.randn(30, 10, 20)\n+        test_list = [\n+            # -- Vector\n+            (\"i->\", x),                 # sum\n+            (\"i,i->\", x, x),            # dot\n+            (\"i,i->i\", x, x),           # vector element-wise mul\n+            (\"i,j->ij\", x, y),          # outer\n+            # -- Matrix\n+            (\"ij->ji\", A),              # transpose\n+            (\"ij->j\", A),               # row sum\n+            (\"ij->i\", A),               # col sum\n+            (\"ij,ij->ij\", A, A),        # matrix element-wise mul\n+            (\"ij,j->i\", A, x),          # matrix vector multiplication\n+            (\"ij,kj->ik\", A, B),        # matmul\n+            (\"ij,ab->ijab\", A, E),      # matrix outer product\n+            # -- Tensor\n+            (\"aij,ajk->aik\", C, D),     # batch matmul\n+            (\"ijk,jk->i\", C, A),        # tensor matrix contraction\n+            (\"aij,jk->aik\", D, E),      # tensor matrix contraction\n+            (\"abcd,dfg->abcfg\", F, G),  # tensor tensor contraction\n+            (\"ijk,jk->ik\", C, A),       # tensor matrix contraction with double indices\n+            (\"ijk,jk->ij\", C, A),       # tensor matrix contraction with double indices\n+            (\"ijk,ik->j\", C, B),        # fixme -- non contiguous", "path": "test/test_torch.py", "position": null, "original_position": 40, "commit_id": "daf3c25ee5e9a1a8fe038ddc416761646410b199", "original_commit_id": "d7c7ebe6d0a6513ea95fb356abe751ca4893b8ac", "user": {"login": "t-vi", "id": 20787943, "node_id": "MDQ6VXNlcjIwNzg3OTQz", "avatar_url": "https://avatars2.githubusercontent.com/u/20787943?v=4", "gravatar_id": "", "url": "https://api.github.com/users/t-vi", "html_url": "https://github.com/t-vi", "followers_url": "https://api.github.com/users/t-vi/followers", "following_url": "https://api.github.com/users/t-vi/following{/other_user}", "gists_url": "https://api.github.com/users/t-vi/gists{/gist_id}", "starred_url": "https://api.github.com/users/t-vi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/t-vi/subscriptions", "organizations_url": "https://api.github.com/users/t-vi/orgs", "repos_url": "https://api.github.com/users/t-vi/repos", "events_url": "https://api.github.com/users/t-vi/events{/privacy}", "received_events_url": "https://api.github.com/users/t-vi/received_events", "type": "User", "site_admin": false}, "body": "Ha, of course they are fixed. :)", "created_at": "2018-04-17T09:15:34Z", "updated_at": "2018-11-23T15:42:34Z", "html_url": "https://github.com/pytorch/pytorch/pull/6307#discussion_r182005614", "pull_request_url": "https://api.github.com/repos/pytorch/pytorch/pulls/6307", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/182005614"}, "html": {"href": "https://github.com/pytorch/pytorch/pull/6307#discussion_r182005614"}, "pull_request": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/6307"}}, "body_html": "<p>Ha, of course they are fixed. :)</p>", "body_text": "Ha, of course they are fixed. :)", "in_reply_to_id": 181850857}