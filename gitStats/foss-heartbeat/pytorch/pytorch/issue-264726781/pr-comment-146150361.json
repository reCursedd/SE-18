{"url": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/146150361", "pull_request_review_id": 71050976, "id": 146150361, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE0NjE1MDM2MQ==", "diff_hunk": "@@ -3561,8 +3561,134 @@ def mseloss_no_reduce_module_test():\n         reference_fn=lambda i, m: (i - target).pow(2))\n \n \n+class TestNLLLoss(torch.nn.modules.module.Module):", "path": "test/test_nn.py", "position": null, "original_position": 4, "commit_id": "81c2ad99e94da640e43931e777b99c5744978069", "original_commit_id": "9fb835a203e5122f5115f8f3afa1d1a765849d9b", "user": {"login": "zou3519", "id": 5652049, "node_id": "MDQ6VXNlcjU2NTIwNDk=", "avatar_url": "https://avatars3.githubusercontent.com/u/5652049?v=4", "gravatar_id": "", "url": "https://api.github.com/users/zou3519", "html_url": "https://github.com/zou3519", "followers_url": "https://api.github.com/users/zou3519/followers", "following_url": "https://api.github.com/users/zou3519/following{/other_user}", "gists_url": "https://api.github.com/users/zou3519/gists{/gist_id}", "starred_url": "https://api.github.com/users/zou3519/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/zou3519/subscriptions", "organizations_url": "https://api.github.com/users/zou3519/orgs", "repos_url": "https://api.github.com/users/zou3519/repos", "events_url": "https://api.github.com/users/zou3519/events{/privacy}", "received_events_url": "https://api.github.com/users/zou3519/received_events", "type": "User", "site_admin": false}, "body": "I made a module that wraps NLLLoss so that its forward function takes one argument, the input. The [module tests](https://github.com/pytorch/pytorch/blob/d5604aea0bf23c47a915f470c903beb3b6915090/test/common_nn.py#L646) assume that the module's forward function takes one argument and I wanted to reuse the module tests because the criterion tests assume the output of the loss is scalar.\r\n\r\nGood point about the return dicts. I think that once I add in reference functions for each of these, I'll need the return dict because a target should be passed to the test module constructor and to the reference function, just like [this](https://github.com/pytorch/pytorch/blob/master/test/test_nn.py#L3639)\r\n\r\nAlternatively to make testing cleaner I could write a new sort of criterion test logic that doesn't assume the output of the loss is scalar. ", "created_at": "2017-10-23T00:29:27Z", "updated_at": "2018-11-23T15:35:37Z", "html_url": "https://github.com/pytorch/pytorch/pull/3080#discussion_r146150361", "pull_request_url": "https://api.github.com/repos/pytorch/pytorch/pulls/3080", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/146150361"}, "html": {"href": "https://github.com/pytorch/pytorch/pull/3080#discussion_r146150361"}, "pull_request": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/3080"}}, "body_html": "<p>I made a module that wraps NLLLoss so that its forward function takes one argument, the input. The <a href=\"https://github.com/pytorch/pytorch/blob/d5604aea0bf23c47a915f470c903beb3b6915090/test/common_nn.py#L646\">module tests</a> assume that the module's forward function takes one argument and I wanted to reuse the module tests because the criterion tests assume the output of the loss is scalar.</p>\n<p>Good point about the return dicts. I think that once I add in reference functions for each of these, I'll need the return dict because a target should be passed to the test module constructor and to the reference function, just like <a href=\"https://github.com/pytorch/pytorch/blob/master/test/test_nn.py#L3639\">this</a></p>\n<p>Alternatively to make testing cleaner I could write a new sort of criterion test logic that doesn't assume the output of the loss is scalar.</p>", "body_text": "I made a module that wraps NLLLoss so that its forward function takes one argument, the input. The module tests assume that the module's forward function takes one argument and I wanted to reuse the module tests because the criterion tests assume the output of the loss is scalar.\nGood point about the return dicts. I think that once I add in reference functions for each of these, I'll need the return dict because a target should be passed to the test module constructor and to the reference function, just like this\nAlternatively to make testing cleaner I could write a new sort of criterion test logic that doesn't assume the output of the loss is scalar.", "in_reply_to_id": 146113201}