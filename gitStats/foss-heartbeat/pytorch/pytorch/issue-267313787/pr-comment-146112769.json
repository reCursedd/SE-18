{"url": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/146112769", "pull_request_review_id": 71014468, "id": 146112769, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE0NjExMjc2OQ==", "diff_hunk": "@@ -77,9 +81,11 @@ def reduce_add(inputs, destination=None):\n     if destination is None:\n         destination = torch.cuda.current_device()\n     input_size = inputs[0].size()\n+    is_sparse = inputs[0].is_sparse\n     nccl_root = None\n     for i, inp in enumerate(inputs):\n         assert inp.is_cuda, \"reduce_add expects all inputs to be on GPUs\"\n+        assert inp.is_sparse == is_sparse, \"reduce_add expects inputs to be either all sparse or all dense\"", "path": "torch/cuda/comm.py", "position": null, "original_position": 42, "commit_id": "7074f73ca6964b9a144cc808fd923ee8bc80f5ff", "original_commit_id": "8399fafd2163024522c7ccd1624b4b09ea952c43", "user": {"login": "apaszke", "id": 4583066, "node_id": "MDQ6VXNlcjQ1ODMwNjY=", "avatar_url": "https://avatars3.githubusercontent.com/u/4583066?v=4", "gravatar_id": "", "url": "https://api.github.com/users/apaszke", "html_url": "https://github.com/apaszke", "followers_url": "https://api.github.com/users/apaszke/followers", "following_url": "https://api.github.com/users/apaszke/following{/other_user}", "gists_url": "https://api.github.com/users/apaszke/gists{/gist_id}", "starred_url": "https://api.github.com/users/apaszke/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/apaszke/subscriptions", "organizations_url": "https://api.github.com/users/apaszke/orgs", "repos_url": "https://api.github.com/users/apaszke/repos", "events_url": "https://api.github.com/users/apaszke/events{/privacy}", "received_events_url": "https://api.github.com/users/apaszke/received_events", "type": "User", "site_admin": false}, "body": "I'm not really sure why do we need to enforce this. The function should be able to handle an arbitrary list of tensors", "created_at": "2017-10-21T18:54:40Z", "updated_at": "2018-11-23T15:35:36Z", "html_url": "https://github.com/pytorch/pytorch/pull/3211#discussion_r146112769", "pull_request_url": "https://api.github.com/repos/pytorch/pytorch/pulls/3211", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/146112769"}, "html": {"href": "https://github.com/pytorch/pytorch/pull/3211#discussion_r146112769"}, "pull_request": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/3211"}}, "body_html": "<p>I'm not really sure why do we need to enforce this. The function should be able to handle an arbitrary list of tensors</p>", "body_text": "I'm not really sure why do we need to enforce this. The function should be able to handle an arbitrary list of tensors"}