{"url": "https://api.github.com/repos/pytorch/pytorch/issues/13616", "repository_url": "https://api.github.com/repos/pytorch/pytorch", "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/13616/labels{/name}", "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/13616/comments", "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/13616/events", "html_url": "https://github.com/pytorch/pytorch/pull/13616", "id": 377715068, "node_id": "MDExOlB1bGxSZXF1ZXN0MjI4NTkxMDU1", "number": 13616, "title": "Get pretty printer ready for use as a serialization format", "user": {"login": "zdevito", "id": 370202, "node_id": "MDQ6VXNlcjM3MDIwMg==", "avatar_url": "https://avatars0.githubusercontent.com/u/370202?v=4", "gravatar_id": "", "url": "https://api.github.com/users/zdevito", "html_url": "https://github.com/zdevito", "followers_url": "https://api.github.com/users/zdevito/followers", "following_url": "https://api.github.com/users/zdevito/following{/other_user}", "gists_url": "https://api.github.com/users/zdevito/gists{/gist_id}", "starred_url": "https://api.github.com/users/zdevito/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/zdevito/subscriptions", "organizations_url": "https://api.github.com/users/zdevito/orgs", "repos_url": "https://api.github.com/users/zdevito/repos", "events_url": "https://api.github.com/users/zdevito/events{/privacy}", "received_events_url": "https://api.github.com/users/zdevito/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 679953983, "node_id": "MDU6TGFiZWw2Nzk5NTM5ODM=", "url": "https://api.github.com/repos/pytorch/pytorch/labels/jit", "name": "jit", "color": "c5def5", "default": false}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2018-11-06T06:57:21Z", "updated_at": "2018-11-23T15:54:38Z", "closed_at": "2018-11-12T18:23:12Z", "author_association": "CONTRIBUTOR", "pull_request": {"url": "https://api.github.com/repos/pytorch/pytorch/pulls/13616", "html_url": "https://github.com/pytorch/pytorch/pull/13616", "diff_url": "https://github.com/pytorch/pytorch/pull/13616.diff", "patch_url": "https://github.com/pytorch/pytorch/pull/13616.patch"}, "body_html": "<p>Get pretty printer ready for use as a serialization format</p>\n<p>This PR adds a bunch of functionality to the pretty printer (now called python_printer to reflect<br>\nthe fact that it will be used to output valid python source). The idea is to get the printer<br>\nready for use as serialization format.  This PR does not have tests beyond what the pretty<br>\nprinter already had. PRs stacked on this one will do round-trip export/import to test this functionality more robustly.</p>\n<p>Notes:</p>\n<ul>\n<li>PythonPrinter is an evolution of the original pretty printer. However, much of it has changed so it is best just to<br>\nread it as a new implementation. Trying to correlate it to the original implementation is probably not much help.</li>\n<li>The printer tries to get reasonably close to how the original function was likely written, such as<br>\nwriting expressions rather than making intermediates when possible. We may decide to turn this off<br>\nfor the actual serialization, but it is useful for pretty printing.</li>\n<li>tensor field access was changed so that prim::device and family have schema</li>\n<li>fixed a bug in the compiler where setUniqueName gets called even when a value already has one.<br>\nthis sometimes assigned really poor names to graph inputs</li>\n<li>Graph::insert gains an optional range argument to make range-preserving inserts easier.</li>\n<li>prim:: ops that can have schema now have schema. This is because when we parse them back in,<br>\nwe will need the schema to correctly set their output types.</li>\n<li>there is code in the python printer to complain if you try to add a prim op and do not update the printer.</li>\n<li>BuiltinModule is generalized to take an operator namespace and a version number for work in future commits.</li>\n</ul>", "body_text": "Get pretty printer ready for use as a serialization format\nThis PR adds a bunch of functionality to the pretty printer (now called python_printer to reflect\nthe fact that it will be used to output valid python source). The idea is to get the printer\nready for use as serialization format.  This PR does not have tests beyond what the pretty\nprinter already had. PRs stacked on this one will do round-trip export/import to test this functionality more robustly.\nNotes:\n\nPythonPrinter is an evolution of the original pretty printer. However, much of it has changed so it is best just to\nread it as a new implementation. Trying to correlate it to the original implementation is probably not much help.\nThe printer tries to get reasonably close to how the original function was likely written, such as\nwriting expressions rather than making intermediates when possible. We may decide to turn this off\nfor the actual serialization, but it is useful for pretty printing.\ntensor field access was changed so that prim::device and family have schema\nfixed a bug in the compiler where setUniqueName gets called even when a value already has one.\nthis sometimes assigned really poor names to graph inputs\nGraph::insert gains an optional range argument to make range-preserving inserts easier.\nprim:: ops that can have schema now have schema. This is because when we parse them back in,\nwe will need the schema to correctly set their output types.\nthere is code in the python printer to complain if you try to add a prim op and do not update the printer.\nBuiltinModule is generalized to take an operator namespace and a version number for work in future commits.", "body": "Get pretty printer ready for use as a serialization format\r\n\r\nThis PR adds a bunch of functionality to the pretty printer (now called python_printer to reflect\r\nthe fact that it will be used to output valid python source). The idea is to get the printer\r\nready for use as serialization format.  This PR does not have tests beyond what the pretty\r\nprinter already had. PRs stacked on this one will do round-trip export/import to test this functionality more robustly.\r\n\r\nNotes:\r\n* PythonPrinter is an evolution of the original pretty printer. However, much of it has changed so it is best just to \r\n  read it as a new implementation. Trying to correlate it to the original implementation is probably not much help.\r\n* The printer tries to get reasonably close to how the original function was likely written, such as\r\n  writing expressions rather than making intermediates when possible. We may decide to turn this off\r\n  for the actual serialization, but it is useful for pretty printing.\r\n* tensor field access was changed so that prim::device and family have schema\r\n* fixed a bug in the compiler where setUniqueName gets called even when a value already has one.\r\n  this sometimes assigned really poor names to graph inputs\r\n* Graph::insert gains an optional range argument to make range-preserving inserts easier.\r\n* prim:: ops that can have schema now have schema. This is because when we parse them back in,\r\n  we will need the schema to correctly set their output types.\r\n* there is code in the python printer to complain if you try to add a prim op and do not update the printer.\r\n* BuiltinModule is generalized to take an operator namespace and a version number for work in future commits."}