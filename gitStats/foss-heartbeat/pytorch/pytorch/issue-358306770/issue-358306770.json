{"url": "https://api.github.com/repos/pytorch/pytorch/issues/11426", "repository_url": "https://api.github.com/repos/pytorch/pytorch", "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/11426/labels{/name}", "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/11426/comments", "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/11426/events", "html_url": "https://github.com/pytorch/pytorch/issues/11426", "id": 358306770, "node_id": "MDU6SXNzdWUzNTgzMDY3NzA=", "number": 11426, "title": "[Feature request] Intuitive error message when input to Linear is not cudarized", "user": {"login": "hughperkins", "id": 123560, "node_id": "MDQ6VXNlcjEyMzU2MA==", "avatar_url": "https://avatars2.githubusercontent.com/u/123560?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hughperkins", "html_url": "https://github.com/hughperkins", "followers_url": "https://api.github.com/users/hughperkins/followers", "following_url": "https://api.github.com/users/hughperkins/following{/other_user}", "gists_url": "https://api.github.com/users/hughperkins/gists{/gist_id}", "starred_url": "https://api.github.com/users/hughperkins/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hughperkins/subscriptions", "organizations_url": "https://api.github.com/users/hughperkins/orgs", "repos_url": "https://api.github.com/users/hughperkins/repos", "events_url": "https://api.github.com/users/hughperkins/events{/privacy}", "received_events_url": "https://api.github.com/users/hughperkins/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 443483881, "node_id": "MDU6TGFiZWw0NDM0ODM4ODE=", "url": "https://api.github.com/repos/pytorch/pytorch/labels/todo", "name": "todo", "color": "c2e0c6", "default": false}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-09-08T15:54:26Z", "updated_at": "2018-09-10T17:26:54Z", "closed_at": null, "author_association": "CONTRIBUTOR", "body_html": "<p>If you have a question or would like help and support, please ask at our<br>\n<a href=\"https://discuss.pytorch.org/\" rel=\"nofollow\">forums</a>.</p>\n<p>If you are submitting a feature request, please preface the title with [feature request].<br>\nIf you are submitting a bug report, please fill in the following details.</p>\n<h2>Issue description</h2>\n<p>I run a program. The result is:</p>\n<pre><code>  File \"/toknas/hugh/condap4/lib/python3.6/site-packages/torch/nn/modules/linear.py\", line 55, in forward\n    return F.linear(input, self.weight, self.bias)\n  File \"/toknas/hugh/condap4/lib/python3.6/site-packages/torch/nn/functional.py\", line 1024, in linear\n    return torch.addmm(bias, input, weight.t())\nRuntimeError: Expected object of type torch.cuda.FloatTensor but found type torch.FloatTensor for argument #4 'mat1'\n</code></pre>\n<p>From inspection, I guess that argument 4 is probably argument 3, in <code>torch.addmm(bias, input, weight.t())</code>, and that there is some hidden 1st argument, which is why it's not 'argument 3'.</p>\n<p>Thus I deduce that the problem is that the Linear's <code>weight</code> has not been converted to cuda, and thus that the <code>Linear</code> itself hasnt been converted to <code>cuda</code>. I spend ...  a while .. trying to figure out why.</p>\n<p>In fact, I'm totally wrong. It's the input that is not cuda...</p>\n<p>I reckon the error message is not very clear. I'm not sure how to fix pytorch to give a clearer message, but I reckon it would be clearer if the pytorch message said something like 'mismatch between Linear(is_cuda=True) and input tensor (is_cuda=False)'.  How to achieve this is not clear to me. I'm just reporting this preference :)</p>\n<h2>Code example</h2>\n<pre><code>import torch\nfrom torch import nn\n\nh = nn.Linear(2, 3)\nh = h.cuda()\ni = torch.rand(1, 2)\nh(i)\n</code></pre>\n<p>output:</p>\n<pre><code>Traceback (most recent call last):\n  File \"tmp_prog/test.py\", line 7, in &lt;module&gt;\n    h(i)\n  File \"/toknas/hugh/condap4/lib/python3.6/site-packages/torch/nn/modules/module.py\", line 477, in __call__\n    result = self.forward(*input, **kwargs)\n  File \"/toknas/hugh/condap4/lib/python3.6/site-packages/torch/nn/modules/linear.py\", line 55, in forward\n    return F.linear(input, self.weight, self.bias)\n  File \"/toknas/hugh/condap4/lib/python3.6/site-packages/torch/nn/functional.py\", line 1024, in linear\n    return torch.addmm(bias, input, weight.t())\nRuntimeError: Expected object of type torch.cuda.FloatTensor but found type torch.FloatTensor for argument #4 'mat1'\n</code></pre>\n<h2>System Info</h2>\n<p>Please copy and paste the output from our<br>\n<a href=\"https://raw.githubusercontent.com/pytorch/pytorch/master/torch/utils/collect_env.py\" rel=\"nofollow\">environment collection script</a><br>\n(or fill out the checklist below manually).</p>\n<p>You can get the script and run it with:</p>\n<pre><code>wget https://raw.githubusercontent.com/pytorch/pytorch/master/torch/utils/collect_env.py\n# For security purposes, please check the contents of collect_env.py before running it.\npython collect_env.py\n</code></pre>\n<pre><code>Collecting environment information...\nPyTorch version: 0.4.1\nIs debug build: No\nCUDA used to build PyTorch: 9.0.176\n\nOS: Ubuntu 16.04.5 LTS\nGCC version: (Ubuntu 5.4.0-6ubuntu1~16.04.10) 5.4.0 20160609\nCMake version: version 3.5.1\n\nPython version: 3.6\nIs CUDA available: Yes\nCUDA runtime version: 9.0.176\nGPU models and configuration: GPU 0: Tesla M60\nNvidia driver version: 384.130\ncuDNN version: Probably one of the following:\n/usr/lib/x86_64-linux-gnu/libcudnn.so.5.1.10\n/usr/lib/x86_64-linux-gnu/libcudnn.so.6.0.21\n/usr/lib/x86_64-linux-gnu/libcudnn.so.7.0.3\n/usr/lib/x86_64-linux-gnu/libcudnn_static_v5.a\n/usr/lib/x86_64-linux-gnu/libcudnn_static_v6.a\n/usr/lib/x86_64-linux-gnu/libcudnn_static_v7.a\n\nVersions of relevant libraries:\n[pip] numpy (1.14.3)\n[pip] torch (0.4.1)\n[pip] torchtext (0.2.3)\n[pip] torchvision (0.2.1)\n[conda] pytorch                   0.4.1           py36_cuda9.0.176_cudnn7.1.2_1    pytorch\n[conda] torchtext                 0.2.3                     &lt;pip&gt;\n[conda] torchvision               0.2.1                    py36_1    pytorch\n</code></pre>\n<ul>\n<li>PyTorch or Caffe2: pytorch 0.4.1</li>\n<li>How you installed PyTorch (conda, pip, source): conda</li>\n<li>Build command you used (if compiling from source): n/a</li>\n<li>OS: ubuntu 16.04</li>\n<li>PyTorch version: 0.4.1</li>\n<li>Python version: 3.6.6</li>\n<li>CUDA/cuDNN version:</li>\n<li>GPU models and configuration:</li>\n<li>GCC version (if compiling from source):</li>\n<li>CMake version:</li>\n<li>Versions of any other relevant libraries:</li>\n</ul>", "body_text": "If you have a question or would like help and support, please ask at our\nforums.\nIf you are submitting a feature request, please preface the title with [feature request].\nIf you are submitting a bug report, please fill in the following details.\nIssue description\nI run a program. The result is:\n  File \"/toknas/hugh/condap4/lib/python3.6/site-packages/torch/nn/modules/linear.py\", line 55, in forward\n    return F.linear(input, self.weight, self.bias)\n  File \"/toknas/hugh/condap4/lib/python3.6/site-packages/torch/nn/functional.py\", line 1024, in linear\n    return torch.addmm(bias, input, weight.t())\nRuntimeError: Expected object of type torch.cuda.FloatTensor but found type torch.FloatTensor for argument #4 'mat1'\n\nFrom inspection, I guess that argument 4 is probably argument 3, in torch.addmm(bias, input, weight.t()), and that there is some hidden 1st argument, which is why it's not 'argument 3'.\nThus I deduce that the problem is that the Linear's weight has not been converted to cuda, and thus that the Linear itself hasnt been converted to cuda. I spend ...  a while .. trying to figure out why.\nIn fact, I'm totally wrong. It's the input that is not cuda...\nI reckon the error message is not very clear. I'm not sure how to fix pytorch to give a clearer message, but I reckon it would be clearer if the pytorch message said something like 'mismatch between Linear(is_cuda=True) and input tensor (is_cuda=False)'.  How to achieve this is not clear to me. I'm just reporting this preference :)\nCode example\nimport torch\nfrom torch import nn\n\nh = nn.Linear(2, 3)\nh = h.cuda()\ni = torch.rand(1, 2)\nh(i)\n\noutput:\nTraceback (most recent call last):\n  File \"tmp_prog/test.py\", line 7, in <module>\n    h(i)\n  File \"/toknas/hugh/condap4/lib/python3.6/site-packages/torch/nn/modules/module.py\", line 477, in __call__\n    result = self.forward(*input, **kwargs)\n  File \"/toknas/hugh/condap4/lib/python3.6/site-packages/torch/nn/modules/linear.py\", line 55, in forward\n    return F.linear(input, self.weight, self.bias)\n  File \"/toknas/hugh/condap4/lib/python3.6/site-packages/torch/nn/functional.py\", line 1024, in linear\n    return torch.addmm(bias, input, weight.t())\nRuntimeError: Expected object of type torch.cuda.FloatTensor but found type torch.FloatTensor for argument #4 'mat1'\n\nSystem Info\nPlease copy and paste the output from our\nenvironment collection script\n(or fill out the checklist below manually).\nYou can get the script and run it with:\nwget https://raw.githubusercontent.com/pytorch/pytorch/master/torch/utils/collect_env.py\n# For security purposes, please check the contents of collect_env.py before running it.\npython collect_env.py\n\nCollecting environment information...\nPyTorch version: 0.4.1\nIs debug build: No\nCUDA used to build PyTorch: 9.0.176\n\nOS: Ubuntu 16.04.5 LTS\nGCC version: (Ubuntu 5.4.0-6ubuntu1~16.04.10) 5.4.0 20160609\nCMake version: version 3.5.1\n\nPython version: 3.6\nIs CUDA available: Yes\nCUDA runtime version: 9.0.176\nGPU models and configuration: GPU 0: Tesla M60\nNvidia driver version: 384.130\ncuDNN version: Probably one of the following:\n/usr/lib/x86_64-linux-gnu/libcudnn.so.5.1.10\n/usr/lib/x86_64-linux-gnu/libcudnn.so.6.0.21\n/usr/lib/x86_64-linux-gnu/libcudnn.so.7.0.3\n/usr/lib/x86_64-linux-gnu/libcudnn_static_v5.a\n/usr/lib/x86_64-linux-gnu/libcudnn_static_v6.a\n/usr/lib/x86_64-linux-gnu/libcudnn_static_v7.a\n\nVersions of relevant libraries:\n[pip] numpy (1.14.3)\n[pip] torch (0.4.1)\n[pip] torchtext (0.2.3)\n[pip] torchvision (0.2.1)\n[conda] pytorch                   0.4.1           py36_cuda9.0.176_cudnn7.1.2_1    pytorch\n[conda] torchtext                 0.2.3                     <pip>\n[conda] torchvision               0.2.1                    py36_1    pytorch\n\n\nPyTorch or Caffe2: pytorch 0.4.1\nHow you installed PyTorch (conda, pip, source): conda\nBuild command you used (if compiling from source): n/a\nOS: ubuntu 16.04\nPyTorch version: 0.4.1\nPython version: 3.6.6\nCUDA/cuDNN version:\nGPU models and configuration:\nGCC version (if compiling from source):\nCMake version:\nVersions of any other relevant libraries:", "body": "If you have a question or would like help and support, please ask at our\r\n[forums](https://discuss.pytorch.org/).\r\n\r\nIf you are submitting a feature request, please preface the title with [feature request].\r\nIf you are submitting a bug report, please fill in the following details.\r\n\r\n## Issue description\r\n\r\nI run a program. The result is:\r\n\r\n```\r\n  File \"/toknas/hugh/condap4/lib/python3.6/site-packages/torch/nn/modules/linear.py\", line 55, in forward\r\n    return F.linear(input, self.weight, self.bias)\r\n  File \"/toknas/hugh/condap4/lib/python3.6/site-packages/torch/nn/functional.py\", line 1024, in linear\r\n    return torch.addmm(bias, input, weight.t())\r\nRuntimeError: Expected object of type torch.cuda.FloatTensor but found type torch.FloatTensor for argument #4 'mat1'\r\n```\r\n\r\nFrom inspection, I guess that argument 4 is probably argument 3, in `torch.addmm(bias, input, weight.t())`, and that there is some hidden 1st argument, which is why it's not 'argument 3'.\r\n\r\nThus I deduce that the problem is that the Linear's `weight` has not been converted to cuda, and thus that the `Linear` itself hasnt been converted to `cuda`. I spend ...  a while .. trying to figure out why.\r\n\r\nIn fact, I'm totally wrong. It's the input that is not cuda...\r\n\r\nI reckon the error message is not very clear. I'm not sure how to fix pytorch to give a clearer message, but I reckon it would be clearer if the pytorch message said something like 'mismatch between Linear(is_cuda=True) and input tensor (is_cuda=False)'.  How to achieve this is not clear to me. I'm just reporting this preference :)\r\n\r\n## Code example\r\n\r\n```\r\nimport torch\r\nfrom torch import nn\r\n\r\nh = nn.Linear(2, 3)\r\nh = h.cuda()\r\ni = torch.rand(1, 2)\r\nh(i)\r\n```\r\n\r\noutput:\r\n```\r\nTraceback (most recent call last):\r\n  File \"tmp_prog/test.py\", line 7, in <module>\r\n    h(i)\r\n  File \"/toknas/hugh/condap4/lib/python3.6/site-packages/torch/nn/modules/module.py\", line 477, in __call__\r\n    result = self.forward(*input, **kwargs)\r\n  File \"/toknas/hugh/condap4/lib/python3.6/site-packages/torch/nn/modules/linear.py\", line 55, in forward\r\n    return F.linear(input, self.weight, self.bias)\r\n  File \"/toknas/hugh/condap4/lib/python3.6/site-packages/torch/nn/functional.py\", line 1024, in linear\r\n    return torch.addmm(bias, input, weight.t())\r\nRuntimeError: Expected object of type torch.cuda.FloatTensor but found type torch.FloatTensor for argument #4 'mat1'\r\n```\r\n\r\n## System Info\r\nPlease copy and paste the output from our\r\n[environment collection script](https://raw.githubusercontent.com/pytorch/pytorch/master/torch/utils/collect_env.py)\r\n(or fill out the checklist below manually).\r\n\r\nYou can get the script and run it with:\r\n```\r\nwget https://raw.githubusercontent.com/pytorch/pytorch/master/torch/utils/collect_env.py\r\n# For security purposes, please check the contents of collect_env.py before running it.\r\npython collect_env.py\r\n```\r\n\r\n```\r\nCollecting environment information...\r\nPyTorch version: 0.4.1\r\nIs debug build: No\r\nCUDA used to build PyTorch: 9.0.176\r\n\r\nOS: Ubuntu 16.04.5 LTS\r\nGCC version: (Ubuntu 5.4.0-6ubuntu1~16.04.10) 5.4.0 20160609\r\nCMake version: version 3.5.1\r\n\r\nPython version: 3.6\r\nIs CUDA available: Yes\r\nCUDA runtime version: 9.0.176\r\nGPU models and configuration: GPU 0: Tesla M60\r\nNvidia driver version: 384.130\r\ncuDNN version: Probably one of the following:\r\n/usr/lib/x86_64-linux-gnu/libcudnn.so.5.1.10\r\n/usr/lib/x86_64-linux-gnu/libcudnn.so.6.0.21\r\n/usr/lib/x86_64-linux-gnu/libcudnn.so.7.0.3\r\n/usr/lib/x86_64-linux-gnu/libcudnn_static_v5.a\r\n/usr/lib/x86_64-linux-gnu/libcudnn_static_v6.a\r\n/usr/lib/x86_64-linux-gnu/libcudnn_static_v7.a\r\n\r\nVersions of relevant libraries:\r\n[pip] numpy (1.14.3)\r\n[pip] torch (0.4.1)\r\n[pip] torchtext (0.2.3)\r\n[pip] torchvision (0.2.1)\r\n[conda] pytorch                   0.4.1           py36_cuda9.0.176_cudnn7.1.2_1    pytorch\r\n[conda] torchtext                 0.2.3                     <pip>\r\n[conda] torchvision               0.2.1                    py36_1    pytorch\r\n```\r\n\r\n- PyTorch or Caffe2: pytorch 0.4.1\r\n- How you installed PyTorch (conda, pip, source): conda\r\n- Build command you used (if compiling from source): n/a\r\n- OS: ubuntu 16.04\r\n- PyTorch version: 0.4.1\r\n- Python version: 3.6.6\r\n- CUDA/cuDNN version: \r\n- GPU models and configuration:\r\n- GCC version (if compiling from source):\r\n- CMake version:\r\n- Versions of any other relevant libraries:\r\n"}