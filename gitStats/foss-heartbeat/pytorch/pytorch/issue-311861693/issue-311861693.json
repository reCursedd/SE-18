{"url": "https://api.github.com/repos/pytorch/pytorch/issues/6341", "repository_url": "https://api.github.com/repos/pytorch/pytorch", "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/6341/labels{/name}", "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/6341/comments", "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/6341/events", "html_url": "https://github.com/pytorch/pytorch/pull/6341", "id": 311861693, "node_id": "MDExOlB1bGxSZXF1ZXN0MTc5ODY0NTg0", "number": 6341, "title": "Allow script_methods to be defined out of order", "user": {"login": "zdevito", "id": 370202, "node_id": "MDQ6VXNlcjM3MDIwMg==", "avatar_url": "https://avatars0.githubusercontent.com/u/370202?v=4", "gravatar_id": "", "url": "https://api.github.com/users/zdevito", "html_url": "https://github.com/zdevito", "followers_url": "https://api.github.com/users/zdevito/followers", "following_url": "https://api.github.com/users/zdevito/following{/other_user}", "gists_url": "https://api.github.com/users/zdevito/gists{/gist_id}", "starred_url": "https://api.github.com/users/zdevito/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/zdevito/subscriptions", "organizations_url": "https://api.github.com/users/zdevito/orgs", "repos_url": "https://api.github.com/users/zdevito/repos", "events_url": "https://api.github.com/users/zdevito/events{/privacy}", "received_events_url": "https://api.github.com/users/zdevito/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-04-06T06:32:53Z", "updated_at": "2018-11-23T15:42:09Z", "closed_at": "2018-04-16T22:19:06Z", "author_association": "CONTRIBUTOR", "pull_request": {"url": "https://api.github.com/repos/pytorch/pytorch/pulls/6341", "html_url": "https://github.com/pytorch/pytorch/pull/6341", "diff_url": "https://github.com/pytorch/pytorch/pull/6341.diff", "patch_url": "https://github.com/pytorch/pytorch/pull/6341.patch"}, "body_html": "<p>This modifies the registration process so that all script methods<br>\nin a ScriptModule are defined at once.</p>\n<p>Method gains a <code>method_creator</code> callback that gets invoked when the<br>\nmethod is first called to define it if it has not already been defined.<br>\nRecursive cycles in this <code>method_creator</code> are checked.</p>\n<p>This approach was chosen over first creating all the graphs and then<br>\ninlining the call sites because it will combine better with type<br>\npropagation for non-tensor types like tuples. e.g.</p>\n<pre><code>a = foo(b)\nreturn bar(*a)\n</code></pre>\n<p><a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load issue title\" data-id=\"308706858\" data-permission-text=\"Issue title is private\" data-url=\"https://github.com/pytorch/pytorch/issues/6015\" data-hovercard-type=\"issue\" data-hovercard-url=\"/pytorch/pytorch/issues/6015/hovercard\" href=\"https://github.com/pytorch/pytorch/issues/6015\">#6015</a></p>", "body_text": "This modifies the registration process so that all script methods\nin a ScriptModule are defined at once.\nMethod gains a method_creator callback that gets invoked when the\nmethod is first called to define it if it has not already been defined.\nRecursive cycles in this method_creator are checked.\nThis approach was chosen over first creating all the graphs and then\ninlining the call sites because it will combine better with type\npropagation for non-tensor types like tuples. e.g.\na = foo(b)\nreturn bar(*a)\n\n#6015", "body": "This modifies the registration process so that all script methods\r\nin a ScriptModule are defined at once.\r\n\r\nMethod gains a `method_creator` callback that gets invoked when the\r\nmethod is first called to define it if it has not already been defined.\r\nRecursive cycles in this `method_creator` are checked.\r\n\r\nThis approach was chosen over first creating all the graphs and then\r\ninlining the call sites because it will combine better with type\r\npropagation for non-tensor types like tuples. e.g.\r\n\r\n```\r\na = foo(b)\r\nreturn bar(*a)\r\n```\r\n#6015"}