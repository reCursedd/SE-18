{"url": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/180221117", "pull_request_review_id": 110606005, "id": 180221117, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MDIyMTExNw==", "diff_hunk": "@@ -877,34 +875,57 @@ std::shared_ptr<SugaredValue> SimpleValue::attr(SourceRange loc, Method & m, con\n }\n \n \n-void defineMethodsInModule(Module & m, const std::vector<Def>& definitions, const Resolver& resolver, SugaredValuePtr self) {\n+void defineMethodsInModule(Module & m, const std::vector<Def>& definitions, const std::vector<Resolver>& resolvers, SugaredValuePtr self) {\n   FunctionTable table;\n-  for(auto def : definitions) {\n+  JIT_ASSERT(definitions.size() == resolvers.size());\n+  auto resolver_it = resolvers.begin();\n+  std::vector<Method*> methods;\n+  for(Def def : definitions) {\n     const std::string& name = def.name().name();\n-    Method& method = m.create_method(name);\n-    to_ir(def, table, resolver, self,  method);\n-    auto result = table.emplace(name, method);\n-    if(!result.second) {\n-      throw ErrorReport(def) << \"duplicate definition of function '\" << name << \"'\";\n+    Resolver resolver = *resolver_it++;\n+    auto creator = [def, &table, resolver, self](Method& method) {\n+      to_ir(def, table, resolver, self,  method);\n+    };\n+    Method& method = m.create_method(name, creator);\n+    // if self is defined, then these are methods and do not go into the global namespace\n+    // otherwise, they get defined together so we add them to the function table\n+    // so the methods can see each other", "path": "torch/csrc/jit/script/compiler.cpp", "position": 36, "original_position": 36, "commit_id": "7559edccef7e6e3a60b26cf9bf498389a903207f", "original_commit_id": "984ecf2b6a1c7a94c816f8fb134e1359503cc5c1", "user": {"login": "apaszke", "id": 4583066, "node_id": "MDQ6VXNlcjQ1ODMwNjY=", "avatar_url": "https://avatars3.githubusercontent.com/u/4583066?v=4", "gravatar_id": "", "url": "https://api.github.com/users/apaszke", "html_url": "https://github.com/apaszke", "followers_url": "https://api.github.com/users/apaszke/followers", "following_url": "https://api.github.com/users/apaszke/following{/other_user}", "gists_url": "https://api.github.com/users/apaszke/gists{/gist_id}", "starred_url": "https://api.github.com/users/apaszke/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/apaszke/subscriptions", "organizations_url": "https://api.github.com/users/apaszke/orgs", "repos_url": "https://api.github.com/users/apaszke/repos", "events_url": "https://api.github.com/users/apaszke/events{/privacy}", "received_events_url": "https://api.github.com/users/apaszke/received_events", "type": "User", "site_admin": false}, "body": "I'm not sure if I understand this comment. How do the functions see each other if you don't put them in the table (the method case)?", "created_at": "2018-04-09T20:32:11Z", "updated_at": "2018-11-23T15:42:05Z", "html_url": "https://github.com/pytorch/pytorch/pull/6341#discussion_r180221117", "pull_request_url": "https://api.github.com/repos/pytorch/pytorch/pulls/6341", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/180221117"}, "html": {"href": "https://github.com/pytorch/pytorch/pull/6341#discussion_r180221117"}, "pull_request": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/6341"}}, "body_html": "<p>I'm not sure if I understand this comment. How do the functions see each other if you don't put them in the table (the method case)?</p>", "body_text": "I'm not sure if I understand this comment. How do the functions see each other if you don't put them in the table (the method case)?"}