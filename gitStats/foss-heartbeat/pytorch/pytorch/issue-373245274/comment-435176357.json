{"url": "https://api.github.com/repos/pytorch/pytorch/issues/comments/435176357", "html_url": "https://github.com/pytorch/pytorch/issues/13023#issuecomment-435176357", "issue_url": "https://api.github.com/repos/pytorch/pytorch/issues/13023", "id": 435176357, "node_id": "MDEyOklzc3VlQ29tbWVudDQzNTE3NjM1Nw==", "user": {"login": "apaszke", "id": 4583066, "node_id": "MDQ6VXNlcjQ1ODMwNjY=", "avatar_url": "https://avatars3.githubusercontent.com/u/4583066?v=4", "gravatar_id": "", "url": "https://api.github.com/users/apaszke", "html_url": "https://github.com/apaszke", "followers_url": "https://api.github.com/users/apaszke/followers", "following_url": "https://api.github.com/users/apaszke/following{/other_user}", "gists_url": "https://api.github.com/users/apaszke/gists{/gist_id}", "starred_url": "https://api.github.com/users/apaszke/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/apaszke/subscriptions", "organizations_url": "https://api.github.com/users/apaszke/orgs", "repos_url": "https://api.github.com/users/apaszke/repos", "events_url": "https://api.github.com/users/apaszke/events{/privacy}", "received_events_url": "https://api.github.com/users/apaszke/received_events", "type": "User", "site_admin": false}, "created_at": "2018-11-01T20:30:08Z", "updated_at": "2018-11-01T20:30:08Z", "author_association": "MEMBER", "body_html": "<blockquote>\n<p>The second. However, considering that we cache out-of-order batches, this may not work perfectly.</p>\n</blockquote>\n<p>Exactly. Those are very very stateful objects, and do a lot of preprocessing in the background, so I'm not sure if that's even feasible and useful in many cases. I'd err on the side of simplicity and avoid implementing that.</p>\n<blockquote>\n<p>It's used a lot, but not standard so we can't rely on that.</p>\n</blockquote>\n<p>I'm not sure if I understand. Can you please elaborate?</p>\n<blockquote>\n<p>The <code>worker_init_fn</code> you described still doesn't have access to the <code>dataset</code> object ...</p>\n</blockquote>\n<p>Can you also please elaborate on the API and maybe post an example? I'm not exactly sure how would someone use it based on your description.</p>", "body_text": "The second. However, considering that we cache out-of-order batches, this may not work perfectly.\n\nExactly. Those are very very stateful objects, and do a lot of preprocessing in the background, so I'm not sure if that's even feasible and useful in many cases. I'd err on the side of simplicity and avoid implementing that.\n\nIt's used a lot, but not standard so we can't rely on that.\n\nI'm not sure if I understand. Can you please elaborate?\n\nThe worker_init_fn you described still doesn't have access to the dataset object ...\n\nCan you also please elaborate on the API and maybe post an example? I'm not exactly sure how would someone use it based on your description.", "body": "> The second. However, considering that we cache out-of-order batches, this may not work perfectly.\r\n\r\nExactly. Those are very very stateful objects, and do a lot of preprocessing in the background, so I'm not sure if that's even feasible and useful in many cases. I'd err on the side of simplicity and avoid implementing that.\r\n\r\n> It's used a lot, but not standard so we can't rely on that.\r\n\r\nI'm not sure if I understand. Can you please elaborate?\r\n\r\n> The `worker_init_fn` you described still doesn't have access to the `dataset` object ...\r\n\r\nCan you also please elaborate on the API and maybe post an example? I'm not exactly sure how would someone use it based on your description."}