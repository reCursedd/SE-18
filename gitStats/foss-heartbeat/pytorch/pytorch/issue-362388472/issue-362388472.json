{"url": "https://api.github.com/repos/pytorch/pytorch/issues/11912", "repository_url": "https://api.github.com/repos/pytorch/pytorch", "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/11912/labels{/name}", "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/11912/comments", "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/11912/events", "html_url": "https://github.com/pytorch/pytorch/issues/11912", "id": 362388472, "node_id": "MDU6SXNzdWUzNjIzODg0NzI=", "number": 11912, "title": "Use ATen CUDA event/stream wrappers in c10d", "user": {"login": "pietern", "id": 9845, "node_id": "MDQ6VXNlcjk4NDU=", "avatar_url": "https://avatars3.githubusercontent.com/u/9845?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pietern", "html_url": "https://github.com/pietern", "followers_url": "https://api.github.com/users/pietern/followers", "following_url": "https://api.github.com/users/pietern/following{/other_user}", "gists_url": "https://api.github.com/users/pietern/gists{/gist_id}", "starred_url": "https://api.github.com/users/pietern/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pietern/subscriptions", "organizations_url": "https://api.github.com/users/pietern/orgs", "repos_url": "https://api.github.com/users/pietern/repos", "events_url": "https://api.github.com/users/pietern/events{/privacy}", "received_events_url": "https://api.github.com/users/pietern/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1002728630, "node_id": "MDU6TGFiZWwxMDAyNzI4NjMw", "url": "https://api.github.com/repos/pytorch/pytorch/labels/1.0", "name": "1.0", "color": "f9db31", "default": false}, {"id": 679953883, "node_id": "MDU6TGFiZWw2Nzk5NTM4ODM=", "url": "https://api.github.com/repos/pytorch/pytorch/labels/distributed", "name": "distributed", "color": "c2e0c6", "default": false}], "state": "open", "locked": false, "assignee": {"login": "pietern", "id": 9845, "node_id": "MDQ6VXNlcjk4NDU=", "avatar_url": "https://avatars3.githubusercontent.com/u/9845?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pietern", "html_url": "https://github.com/pietern", "followers_url": "https://api.github.com/users/pietern/followers", "following_url": "https://api.github.com/users/pietern/following{/other_user}", "gists_url": "https://api.github.com/users/pietern/gists{/gist_id}", "starred_url": "https://api.github.com/users/pietern/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pietern/subscriptions", "organizations_url": "https://api.github.com/users/pietern/orgs", "repos_url": "https://api.github.com/users/pietern/repos", "events_url": "https://api.github.com/users/pietern/events{/privacy}", "received_events_url": "https://api.github.com/users/pietern/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "pietern", "id": 9845, "node_id": "MDQ6VXNlcjk4NDU=", "avatar_url": "https://avatars3.githubusercontent.com/u/9845?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pietern", "html_url": "https://github.com/pietern", "followers_url": "https://api.github.com/users/pietern/followers", "following_url": "https://api.github.com/users/pietern/following{/other_user}", "gists_url": "https://api.github.com/users/pietern/gists{/gist_id}", "starred_url": "https://api.github.com/users/pietern/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pietern/subscriptions", "organizations_url": "https://api.github.com/users/pietern/orgs", "repos_url": "https://api.github.com/users/pietern/repos", "events_url": "https://api.github.com/users/pietern/events{/privacy}", "received_events_url": "https://api.github.com/users/pietern/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 3, "created_at": "2018-09-20T22:18:17Z", "updated_at": "2018-11-16T23:14:06Z", "closed_at": null, "author_association": "CONTRIBUTOR", "body_html": "<p>In c10d we still use legacy CUDA event and stream wrappers. These are not aware of the CUDA stream pool that was added by <a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=38511765\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/mruberry\">@mruberry</a> in <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load issue title\" data-id=\"345293124\" data-permission-text=\"Issue title is private\" data-url=\"https://github.com/pytorch/pytorch/issues/9938\" data-hovercard-type=\"pull_request\" data-hovercard-url=\"/pytorch/pytorch/pull/9938/hovercard\" href=\"https://github.com/pytorch/pytorch/pull/9938\">#9938</a>.</p>\n<p>One issue we need to solve beforehand is that currently Gloo algorithms take a stream at construction time and we cache them in the c10d process group. This needs to be redone to support passing a stream when running the algorithm instead of when it is constructed.</p>\n<p><a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=38511765\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/mruberry\">@mruberry</a> I owed you this issue. We can use this issue to discuss how to proceed.</p>", "body_text": "In c10d we still use legacy CUDA event and stream wrappers. These are not aware of the CUDA stream pool that was added by @mruberry in #9938.\nOne issue we need to solve beforehand is that currently Gloo algorithms take a stream at construction time and we cache them in the c10d process group. This needs to be redone to support passing a stream when running the algorithm instead of when it is constructed.\n@mruberry I owed you this issue. We can use this issue to discuss how to proceed.", "body": "In c10d we still use legacy CUDA event and stream wrappers. These are not aware of the CUDA stream pool that was added by @mruberry in #9938.\r\n\r\nOne issue we need to solve beforehand is that currently Gloo algorithms take a stream at construction time and we cache them in the c10d process group. This needs to be redone to support passing a stream when running the algorithm instead of when it is constructed.\r\n\r\n@mruberry I owed you this issue. We can use this issue to discuss how to proceed."}