{"url": "https://api.github.com/repos/pytorch/pytorch/issues/comments/390688344", "html_url": "https://github.com/pytorch/pytorch/issues/7722#issuecomment-390688344", "issue_url": "https://api.github.com/repos/pytorch/pytorch/issues/7722", "id": 390688344, "node_id": "MDEyOklzc3VlQ29tbWVudDM5MDY4ODM0NA==", "user": {"login": "zou3519", "id": 5652049, "node_id": "MDQ6VXNlcjU2NTIwNDk=", "avatar_url": "https://avatars3.githubusercontent.com/u/5652049?v=4", "gravatar_id": "", "url": "https://api.github.com/users/zou3519", "html_url": "https://github.com/zou3519", "followers_url": "https://api.github.com/users/zou3519/followers", "following_url": "https://api.github.com/users/zou3519/following{/other_user}", "gists_url": "https://api.github.com/users/zou3519/gists{/gist_id}", "starred_url": "https://api.github.com/users/zou3519/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/zou3519/subscriptions", "organizations_url": "https://api.github.com/users/zou3519/orgs", "repos_url": "https://api.github.com/users/zou3519/repos", "events_url": "https://api.github.com/users/zou3519/events{/privacy}", "received_events_url": "https://api.github.com/users/zou3519/received_events", "type": "User", "site_admin": false}, "created_at": "2018-05-21T15:26:05Z", "updated_at": "2018-05-21T15:30:54Z", "author_association": "CONTRIBUTOR", "body_html": "<p>I can repro this on master on a linux box as well.</p>\n<p>Repro script: (I took the ipython notebook in the code example and copy pasted the lines from there):</p>\n<pre><code>import torch\nfrom torch.autograd import Variable as V\nimport torch.nn as nn\nimport torch.nn.functional as F\n\nmodel = nn.Sequential(nn.Linear(10,20), nn.ReLU(inplace=True),nn.LSTM(20,5, 1)).cuda()\nfor param in list(model.parameters())[2:]:\n    param.requires_grad=False\nx = torch.randn(2,4,10).cuda()\nx.requires_grad = True\nz = model(x)\ny = torch.Tensor([0,1,2,3, 0,1,2,3]).long().cuda()\nloss = F.cross_entropy(z[0].view(-1,5),y)\nloss.backward()\n</code></pre>", "body_text": "I can repro this on master on a linux box as well.\nRepro script: (I took the ipython notebook in the code example and copy pasted the lines from there):\nimport torch\nfrom torch.autograd import Variable as V\nimport torch.nn as nn\nimport torch.nn.functional as F\n\nmodel = nn.Sequential(nn.Linear(10,20), nn.ReLU(inplace=True),nn.LSTM(20,5, 1)).cuda()\nfor param in list(model.parameters())[2:]:\n    param.requires_grad=False\nx = torch.randn(2,4,10).cuda()\nx.requires_grad = True\nz = model(x)\ny = torch.Tensor([0,1,2,3, 0,1,2,3]).long().cuda()\nloss = F.cross_entropy(z[0].view(-1,5),y)\nloss.backward()", "body": "I can repro this on master on a linux box as well.\r\n\r\nRepro script: (I took the ipython notebook in the code example and copy pasted the lines from there):\r\n```\r\nimport torch\r\nfrom torch.autograd import Variable as V\r\nimport torch.nn as nn\r\nimport torch.nn.functional as F\r\n\r\nmodel = nn.Sequential(nn.Linear(10,20), nn.ReLU(inplace=True),nn.LSTM(20,5, 1)).cuda()\r\nfor param in list(model.parameters())[2:]:\r\n    param.requires_grad=False\r\nx = torch.randn(2,4,10).cuda()\r\nx.requires_grad = True\r\nz = model(x)\r\ny = torch.Tensor([0,1,2,3, 0,1,2,3]).long().cuda()\r\nloss = F.cross_entropy(z[0].view(-1,5),y)\r\nloss.backward()\r\n```"}