{"url": "https://api.github.com/repos/pytorch/pytorch/issues/comments/434796407", "html_url": "https://github.com/pytorch/pytorch/issues/6419#issuecomment-434796407", "issue_url": "https://api.github.com/repos/pytorch/pytorch/issues/6419", "id": 434796407, "node_id": "MDEyOklzc3VlQ29tbWVudDQzNDc5NjQwNw==", "user": {"login": "pietern", "id": 9845, "node_id": "MDQ6VXNlcjk4NDU=", "avatar_url": "https://avatars3.githubusercontent.com/u/9845?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pietern", "html_url": "https://github.com/pietern", "followers_url": "https://api.github.com/users/pietern/followers", "following_url": "https://api.github.com/users/pietern/following{/other_user}", "gists_url": "https://api.github.com/users/pietern/gists{/gist_id}", "starred_url": "https://api.github.com/users/pietern/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pietern/subscriptions", "organizations_url": "https://api.github.com/users/pietern/orgs", "repos_url": "https://api.github.com/users/pietern/repos", "events_url": "https://api.github.com/users/pietern/events{/privacy}", "received_events_url": "https://api.github.com/users/pietern/received_events", "type": "User", "site_admin": false}, "created_at": "2018-10-31T18:24:09Z", "updated_at": "2018-10-31T18:24:09Z", "author_association": "CONTRIBUTOR", "body_html": "<p><a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=5248122\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/ailzhang\">@ailzhang</a> <a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=1852126\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/ejoebstl\">@ejoebstl</a> I added the basic support in <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load issue title\" data-id=\"373590347\" data-permission-text=\"Issue title is private\" data-url=\"https://github.com/pytorch/pytorch/issues/13056\" data-hovercard-type=\"pull_request\" data-hovercard-url=\"/pytorch/pytorch/pull/13056/hovercard\" href=\"https://github.com/pytorch/pytorch/pull/13056\">#13056</a> but it isn't exposed to <code>torch.distributed.init_process_group</code> yet. This is an easy addition but we do have to make sure to throw if the timeout is set for any other backend as we can only set it for the gloo backend.</p>\n<p>FWIW, I'd like to add per-operation timeouts later. Often times the application knows best what to expect per operation and you want both fast failure detection as well as be resilient against desynchronization (e.g. with a barrier with a long timeout).</p>", "body_text": "@ailzhang @ejoebstl I added the basic support in #13056 but it isn't exposed to torch.distributed.init_process_group yet. This is an easy addition but we do have to make sure to throw if the timeout is set for any other backend as we can only set it for the gloo backend.\nFWIW, I'd like to add per-operation timeouts later. Often times the application knows best what to expect per operation and you want both fast failure detection as well as be resilient against desynchronization (e.g. with a barrier with a long timeout).", "body": "@ailzhang @ejoebstl I added the basic support in #13056 but it isn't exposed to `torch.distributed.init_process_group` yet. This is an easy addition but we do have to make sure to throw if the timeout is set for any other backend as we can only set it for the gloo backend.\r\n\r\nFWIW, I'd like to add per-operation timeouts later. Often times the application knows best what to expect per operation and you want both fast failure detection as well as be resilient against desynchronization (e.g. with a barrier with a long timeout)."}