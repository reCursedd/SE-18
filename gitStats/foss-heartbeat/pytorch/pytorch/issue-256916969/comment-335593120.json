{"url": "https://api.github.com/repos/pytorch/pytorch/issues/comments/335593120", "html_url": "https://github.com/pytorch/pytorch/issues/2702#issuecomment-335593120", "issue_url": "https://api.github.com/repos/pytorch/pytorch/issues/2702", "id": 335593120, "node_id": "MDEyOklzc3VlQ29tbWVudDMzNTU5MzEyMA==", "user": {"login": "zou3519", "id": 5652049, "node_id": "MDQ6VXNlcjU2NTIwNDk=", "avatar_url": "https://avatars3.githubusercontent.com/u/5652049?v=4", "gravatar_id": "", "url": "https://api.github.com/users/zou3519", "html_url": "https://github.com/zou3519", "followers_url": "https://api.github.com/users/zou3519/followers", "following_url": "https://api.github.com/users/zou3519/following{/other_user}", "gists_url": "https://api.github.com/users/zou3519/gists{/gist_id}", "starred_url": "https://api.github.com/users/zou3519/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/zou3519/subscriptions", "organizations_url": "https://api.github.com/users/zou3519/orgs", "repos_url": "https://api.github.com/users/zou3519/repos", "events_url": "https://api.github.com/users/zou3519/events{/privacy}", "received_events_url": "https://api.github.com/users/zou3519/received_events", "type": "User", "site_admin": false}, "created_at": "2017-10-10T20:11:38Z", "updated_at": "2017-10-10T20:11:38Z", "author_association": "CONTRIBUTOR", "body_html": "<p><a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=15841449\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/ngimel\">@ngimel</a> thanks for identifying the bug!</p>\n<p><a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=31876421\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/yongjik\">@yongjik</a> yes, that fixes the bug (and probably is an efficiency win).<br>\nI think for now though I'd rather keep the DtoH transfers on the default stream (and think about moving DtoH transfers to the current stream later for efficiency gains). Creating new streams with cudaStreamNonBlocking set by default seems like it could lead to a bunch of problems so I think turning that off is the way to go</p>", "body_text": "@ngimel thanks for identifying the bug!\n@yongjik yes, that fixes the bug (and probably is an efficiency win).\nI think for now though I'd rather keep the DtoH transfers on the default stream (and think about moving DtoH transfers to the current stream later for efficiency gains). Creating new streams with cudaStreamNonBlocking set by default seems like it could lead to a bunch of problems so I think turning that off is the way to go", "body": "@ngimel thanks for identifying the bug!\r\n\r\n@yongjik yes, that fixes the bug (and probably is an efficiency win).\r\nI think for now though I'd rather keep the DtoH transfers on the default stream (and think about moving DtoH transfers to the current stream later for efficiency gains). Creating new streams with cudaStreamNonBlocking set by default seems like it could lead to a bunch of problems so I think turning that off is the way to go"}