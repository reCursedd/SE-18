{"url": "https://api.github.com/repos/pytorch/pytorch/issues/11205", "repository_url": "https://api.github.com/repos/pytorch/pytorch", "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/11205/labels{/name}", "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/11205/comments", "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/11205/events", "html_url": "https://github.com/pytorch/pytorch/pull/11205", "id": 356584901, "node_id": "MDExOlB1bGxSZXF1ZXN0MjEyODA4NDIw", "number": 11205, "title": "Reorganize methods in Type, add CPUTypeDefault/CUDATypeDefault", "user": {"login": "ezyang", "id": 13564, "node_id": "MDQ6VXNlcjEzNTY0", "avatar_url": "https://avatars0.githubusercontent.com/u/13564?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ezyang", "html_url": "https://github.com/ezyang", "followers_url": "https://api.github.com/users/ezyang/followers", "following_url": "https://api.github.com/users/ezyang/following{/other_user}", "gists_url": "https://api.github.com/users/ezyang/gists{/gist_id}", "starred_url": "https://api.github.com/users/ezyang/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ezyang/subscriptions", "organizations_url": "https://api.github.com/users/ezyang/orgs", "repos_url": "https://api.github.com/users/ezyang/repos", "events_url": "https://api.github.com/users/ezyang/events{/privacy}", "received_events_url": "https://api.github.com/users/ezyang/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2018-09-03T19:13:55Z", "updated_at": "2018-11-23T15:50:33Z", "closed_at": "2018-09-05T03:27:34Z", "author_association": "CONTRIBUTOR", "pull_request": {"url": "https://api.github.com/repos/pytorch/pytorch/pulls/11205", "html_url": "https://github.com/pytorch/pytorch/pull/11205", "diff_url": "https://github.com/pytorch/pytorch/pull/11205.diff", "patch_url": "https://github.com/pytorch/pytorch/pull/11205.patch"}, "body_html": "<p>Reorganize methods in Type, add CPUTypeDefault/CUDATypeDefault</p>\n<p>Our short term plan for supporting out of tree complex development requires an<br>\nexternal library to add a custom subclass of Type without access to the<br>\ncode generation facilities in ATen.  This commit reorganizes Type so<br>\nas to minimize the amount of boilerplate you have to write when making<br>\na subclass of Type.</p>\n<p>In particular, it:</p>\n<ul>\n<li>Creates a new CPUTypeDefault/CUDATypeDefault class, which you are<br>\nintended to inherit from, which provides default implementations<br>\nof CPU/CUDA that is layout/dtype agnostic.</li>\n<li>Adds new getCPUAllocator() and getCUDAAllocator() functions, as<br>\na more public API to get your hands on Allocator</li>\n<li>Adds allocator() and getDeviceFromPtr(), abstracting the device<br>\nspecific parts of storage() methods; these methods are now<br>\nimplemented in base TypeDefault.</li>\n<li>Delete the static typeString() method, which is now dead.</li>\n<li>Move is_cuda/is_sparse/is_distributed to TypeDefault.</li>\n</ul>\n<p>Differential Revision: D9631619</p>", "body_text": "Reorganize methods in Type, add CPUTypeDefault/CUDATypeDefault\nOur short term plan for supporting out of tree complex development requires an\nexternal library to add a custom subclass of Type without access to the\ncode generation facilities in ATen.  This commit reorganizes Type so\nas to minimize the amount of boilerplate you have to write when making\na subclass of Type.\nIn particular, it:\n\nCreates a new CPUTypeDefault/CUDATypeDefault class, which you are\nintended to inherit from, which provides default implementations\nof CPU/CUDA that is layout/dtype agnostic.\nAdds new getCPUAllocator() and getCUDAAllocator() functions, as\na more public API to get your hands on Allocator\nAdds allocator() and getDeviceFromPtr(), abstracting the device\nspecific parts of storage() methods; these methods are now\nimplemented in base TypeDefault.\nDelete the static typeString() method, which is now dead.\nMove is_cuda/is_sparse/is_distributed to TypeDefault.\n\nDifferential Revision: D9631619", "body": "Reorganize methods in Type, add CPUTypeDefault/CUDATypeDefault\n\nOur short term plan for supporting out of tree complex development requires an\nexternal library to add a custom subclass of Type without access to the\ncode generation facilities in ATen.  This commit reorganizes Type so\nas to minimize the amount of boilerplate you have to write when making\na subclass of Type.\n\nIn particular, it:\n- Creates a new CPUTypeDefault/CUDATypeDefault class, which you are\n  intended to inherit from, which provides default implementations\n  of CPU/CUDA that is layout/dtype agnostic.\n- Adds new getCPUAllocator() and getCUDAAllocator() functions, as\n  a more public API to get your hands on Allocator\n- Adds allocator() and getDeviceFromPtr(), abstracting the device\n  specific parts of storage() methods; these methods are now\n  implemented in base TypeDefault.\n- Delete the static typeString() method, which is now dead.\n- Move is_cuda/is_sparse/is_distributed to TypeDefault.\n\nDifferential Revision: D9631619\n\n"}