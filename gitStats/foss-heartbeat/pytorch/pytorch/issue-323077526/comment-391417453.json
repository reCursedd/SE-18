{"url": "https://api.github.com/repos/pytorch/pytorch/issues/comments/391417453", "html_url": "https://github.com/pytorch/pytorch/pull/7566#issuecomment-391417453", "issue_url": "https://api.github.com/repos/pytorch/pytorch/issues/7566", "id": 391417453, "node_id": "MDEyOklzc3VlQ29tbWVudDM5MTQxNzQ1Mw==", "user": {"login": "bddppq", "id": 9300575, "node_id": "MDQ6VXNlcjkzMDA1NzU=", "avatar_url": "https://avatars2.githubusercontent.com/u/9300575?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bddppq", "html_url": "https://github.com/bddppq", "followers_url": "https://api.github.com/users/bddppq/followers", "following_url": "https://api.github.com/users/bddppq/following{/other_user}", "gists_url": "https://api.github.com/users/bddppq/gists{/gist_id}", "starred_url": "https://api.github.com/users/bddppq/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bddppq/subscriptions", "organizations_url": "https://api.github.com/users/bddppq/orgs", "repos_url": "https://api.github.com/users/bddppq/repos", "events_url": "https://api.github.com/users/bddppq/events{/privacy}", "received_events_url": "https://api.github.com/users/bddppq/received_events", "type": "User", "site_admin": false}, "created_at": "2018-05-23T16:41:39Z", "updated_at": "2018-05-23T16:41:56Z", "author_association": "MEMBER", "body_html": "<p><a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=13564\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/ezyang\">@ezyang</a> <a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=8586039\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/Jorghi12\">@Jorghi12</a> Ok let me explain here again, <code>PYTORCH_HIP_HCC_LIBRARIES</code> and <code>PYTORCH_MIOPEN_LIBRARIES</code> are workaround upstream cmake files bug and I do have put two TODO comments at the bottom of cmake/public/LoadHIP.cmake with explanations. <code>PYTORCH_FOUND_HIP</code> is not a workaround, it's because we have extra logic (and there will be more in the future) on top of the native find HIP, so it's worth to have its own name.</p>", "body_text": "@ezyang @Jorghi12 Ok let me explain here again, PYTORCH_HIP_HCC_LIBRARIES and PYTORCH_MIOPEN_LIBRARIES are workaround upstream cmake files bug and I do have put two TODO comments at the bottom of cmake/public/LoadHIP.cmake with explanations. PYTORCH_FOUND_HIP is not a workaround, it's because we have extra logic (and there will be more in the future) on top of the native find HIP, so it's worth to have its own name.", "body": "@ezyang @Jorghi12 Ok let me explain here again, `PYTORCH_HIP_HCC_LIBRARIES` and `PYTORCH_MIOPEN_LIBRARIES` are workaround upstream cmake files bug and I do have put two TODO comments at the bottom of cmake/public/LoadHIP.cmake with explanations. `PYTORCH_FOUND_HIP` is not a workaround, it's because we have extra logic (and there will be more in the future) on top of the native find HIP, so it's worth to have its own name."}