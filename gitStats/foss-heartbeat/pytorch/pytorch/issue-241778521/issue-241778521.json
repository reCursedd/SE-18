{"url": "https://api.github.com/repos/pytorch/pytorch/issues/2037", "repository_url": "https://api.github.com/repos/pytorch/pytorch", "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/2037/labels{/name}", "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/2037/comments", "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/2037/events", "html_url": "https://github.com/pytorch/pytorch/pull/2037", "id": 241778521, "node_id": "MDExOlB1bGxSZXF1ZXN0MTI5NzI1OTEz", "number": 2037, "title": "support dictionary return types in nn.Module's __call__", "user": {"login": "DeNeutoy", "id": 16001974, "node_id": "MDQ6VXNlcjE2MDAxOTc0", "avatar_url": "https://avatars1.githubusercontent.com/u/16001974?v=4", "gravatar_id": "", "url": "https://api.github.com/users/DeNeutoy", "html_url": "https://github.com/DeNeutoy", "followers_url": "https://api.github.com/users/DeNeutoy/followers", "following_url": "https://api.github.com/users/DeNeutoy/following{/other_user}", "gists_url": "https://api.github.com/users/DeNeutoy/gists{/gist_id}", "starred_url": "https://api.github.com/users/DeNeutoy/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/DeNeutoy/subscriptions", "organizations_url": "https://api.github.com/users/DeNeutoy/orgs", "repos_url": "https://api.github.com/users/DeNeutoy/repos", "events_url": "https://api.github.com/users/DeNeutoy/events{/privacy}", "received_events_url": "https://api.github.com/users/DeNeutoy/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2017-07-10T16:53:33Z", "updated_at": "2018-11-23T15:34:04Z", "closed_at": "2017-10-02T00:33:04Z", "author_association": "CONTRIBUTOR", "pull_request": {"url": "https://api.github.com/repos/pytorch/pytorch/pulls/2037", "html_url": "https://github.com/pytorch/pytorch/pull/2037", "diff_url": "https://github.com/pytorch/pytorch/pull/2037.diff", "patch_url": "https://github.com/pytorch/pytorch/pull/2037.patch"}, "body_html": "<p>using <code>__call__</code> currently throws an error if the return type of <code>forward</code> is a <code>dict</code>. It would be useful to be able to return complex outputs with names - this PR just hooks the backward hooks onto an arbitrary element of the return dict (I assumed this was ok because previously the hook is just registered to the first element returned from <code>forward</code>). Let me know if i've put the test in the wrong place/ you would like it to be different.</p>\n<p>Thanks!</p>", "body_text": "using __call__ currently throws an error if the return type of forward is a dict. It would be useful to be able to return complex outputs with names - this PR just hooks the backward hooks onto an arbitrary element of the return dict (I assumed this was ok because previously the hook is just registered to the first element returned from forward). Let me know if i've put the test in the wrong place/ you would like it to be different.\nThanks!", "body": "using `__call__` currently throws an error if the return type of `forward` is a `dict`. It would be useful to be able to return complex outputs with names - this PR just hooks the backward hooks onto an arbitrary element of the return dict (I assumed this was ok because previously the hook is just registered to the first element returned from `forward`). Let me know if i've put the test in the wrong place/ you would like it to be different. \r\n\r\nThanks!"}