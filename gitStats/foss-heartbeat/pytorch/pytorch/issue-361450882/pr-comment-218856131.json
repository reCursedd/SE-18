{"url": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/218856131", "pull_request_review_id": 156885533, "id": 218856131, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIxODg1NjEzMQ==", "diff_hunk": "@@ -546,11 +576,21 @@ Tensor new_tensor(const Type& type, PyObject* args, PyObject* kwargs) {\n   ParsedArgs<4> parsed_args;\n   auto r = parser.parse(args, kwargs, parsed_args);\n   if (r.idx == 0) {\n-    return new_from_data_copy(\n+    PyObject* data = r.pyobject(0);\n+    if (THPVariable_Check(data)) {\n+      PyErr_WarnEx(PyExc_UserWarning,\n+        \"To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() \"", "path": "torch/csrc/utils/tensor_new.cpp", "position": 84, "original_position": 115, "commit_id": "36d298cb704d694bee62dd72e88973fd72e343c2", "original_commit_id": "d2769423060c797280f006b501cd687ed369d271", "user": {"login": "gchanan", "id": 3768583, "node_id": "MDQ6VXNlcjM3Njg1ODM=", "avatar_url": "https://avatars2.githubusercontent.com/u/3768583?v=4", "gravatar_id": "", "url": "https://api.github.com/users/gchanan", "html_url": "https://github.com/gchanan", "followers_url": "https://api.github.com/users/gchanan/followers", "following_url": "https://api.github.com/users/gchanan/following{/other_user}", "gists_url": "https://api.github.com/users/gchanan/gists{/gist_id}", "starred_url": "https://api.github.com/users/gchanan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/gchanan/subscriptions", "organizations_url": "https://api.github.com/users/gchanan/orgs", "repos_url": "https://api.github.com/users/gchanan/repos", "events_url": "https://api.github.com/users/gchanan/events{/privacy}", "received_events_url": "https://api.github.com/users/gchanan/received_events", "type": "User", "site_admin": false}, "body": "It seems okay to put the warning in internal_new_from_data (you can pass in the name of the function).  The problem with the previous implementation was that args_requires_grad wasn't respected across all code paths, but the name of the function can easily be respected across all code paths.", "created_at": "2018-09-19T15:39:49Z", "updated_at": "2018-11-23T15:51:39Z", "html_url": "https://github.com/pytorch/pytorch/pull/11815#discussion_r218856131", "pull_request_url": "https://api.github.com/repos/pytorch/pytorch/pulls/11815", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/218856131"}, "html": {"href": "https://github.com/pytorch/pytorch/pull/11815#discussion_r218856131"}, "pull_request": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/11815"}}, "body_html": "<p>It seems okay to put the warning in internal_new_from_data (you can pass in the name of the function).  The problem with the previous implementation was that args_requires_grad wasn't respected across all code paths, but the name of the function can easily be respected across all code paths.</p>", "body_text": "It seems okay to put the warning in internal_new_from_data (you can pass in the name of the function).  The problem with the previous implementation was that args_requires_grad wasn't respected across all code paths, but the name of the function can easily be respected across all code paths."}