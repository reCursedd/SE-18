{"url": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/218971344", "pull_request_review_id": 157031419, "id": 218971344, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIxODk3MTM0NA==", "diff_hunk": "@@ -506,18 +499,25 @@ Tensor tensor_ctor(const Type& type, PyObject* args, PyObject* kwargs) {\n   ParsedArgs<4> parsed_args;\n   auto r = parser.parse(args, kwargs, parsed_args);\n   if (r.idx == 0) {\n+    PyObject* data = r.pyobject(0);\n+    if (THPVariable_Check(data)) {\n+      PyErr_WarnEx(PyExc_UserWarning,", "path": "torch/csrc/utils/tensor_new.cpp", "position": 50, "original_position": 39, "commit_id": "36d298cb704d694bee62dd72e88973fd72e343c2", "original_commit_id": "4b680f03d7fc04333f9bd670adb2b5a89f319a50", "user": {"login": "gchanan", "id": 3768583, "node_id": "MDQ6VXNlcjM3Njg1ODM=", "avatar_url": "https://avatars2.githubusercontent.com/u/3768583?v=4", "gravatar_id": "", "url": "https://api.github.com/users/gchanan", "html_url": "https://github.com/gchanan", "followers_url": "https://api.github.com/users/gchanan/followers", "following_url": "https://api.github.com/users/gchanan/following{/other_user}", "gists_url": "https://api.github.com/users/gchanan/gists{/gist_id}", "starred_url": "https://api.github.com/users/gchanan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/gchanan/subscriptions", "organizations_url": "https://api.github.com/users/gchanan/orgs", "repos_url": "https://api.github.com/users/gchanan/repos", "events_url": "https://api.github.com/users/gchanan/events{/privacy}", "received_events_url": "https://api.github.com/users/gchanan/received_events", "type": "User", "site_admin": false}, "body": "` yes, for sure torch.as_tensor(tensor) is differentiable.`\r\n\r\nWell, that's clearly true because it's the same tensor.\r\n\r\nThe behavior of `torch.as_tensor(tensor, dtype=dtype, device=device` is a good question.  I guess my thought process is you'd call `as_tensor` on heterogeneous inputs (i.e. some things are tensors, some are lists, etc).  So as @SsnL says, you probably don't care about gradients flowing back through.  If you did, you'd call `to`.  It also seems a little strange that `torch.tensor` isn't differentiable, but `torch.as_tensor` is.  I bet I could be convinced of the opposite though! @apaszke ? @fmassa ?", "created_at": "2018-09-19T21:32:41Z", "updated_at": "2018-11-23T15:51:43Z", "html_url": "https://github.com/pytorch/pytorch/pull/11815#discussion_r218971344", "pull_request_url": "https://api.github.com/repos/pytorch/pytorch/pulls/11815", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/218971344"}, "html": {"href": "https://github.com/pytorch/pytorch/pull/11815#discussion_r218971344"}, "pull_request": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/11815"}}, "body_html": "<p><code> yes, for sure torch.as_tensor(tensor) is differentiable.</code></p>\n<p>Well, that's clearly true because it's the same tensor.</p>\n<p>The behavior of <code>torch.as_tensor(tensor, dtype=dtype, device=device</code> is a good question.  I guess my thought process is you'd call <code>as_tensor</code> on heterogeneous inputs (i.e. some things are tensors, some are lists, etc).  So as <a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=5674597\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/SsnL\">@SsnL</a> says, you probably don't care about gradients flowing back through.  If you did, you'd call <code>to</code>.  It also seems a little strange that <code>torch.tensor</code> isn't differentiable, but <code>torch.as_tensor</code> is.  I bet I could be convinced of the opposite though! <a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=4583066\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/apaszke\">@apaszke</a> ? <a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=9110200\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/fmassa\">@fmassa</a> ?</p>", "body_text": "yes, for sure torch.as_tensor(tensor) is differentiable.\nWell, that's clearly true because it's the same tensor.\nThe behavior of torch.as_tensor(tensor, dtype=dtype, device=device is a good question.  I guess my thought process is you'd call as_tensor on heterogeneous inputs (i.e. some things are tensors, some are lists, etc).  So as @SsnL says, you probably don't care about gradients flowing back through.  If you did, you'd call to.  It also seems a little strange that torch.tensor isn't differentiable, but torch.as_tensor is.  I bet I could be convinced of the opposite though! @apaszke ? @fmassa ?", "in_reply_to_id": 218608274}