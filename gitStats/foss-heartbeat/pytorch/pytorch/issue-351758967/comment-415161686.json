{"url": "https://api.github.com/repos/pytorch/pytorch/issues/comments/415161686", "html_url": "https://github.com/pytorch/pytorch/issues/10642#issuecomment-415161686", "issue_url": "https://api.github.com/repos/pytorch/pytorch/issues/10642", "id": 415161686, "node_id": "MDEyOklzc3VlQ29tbWVudDQxNTE2MTY4Ng==", "user": {"login": "weiyangfb", "id": 38509346, "node_id": "MDQ6VXNlcjM4NTA5MzQ2", "avatar_url": "https://avatars1.githubusercontent.com/u/38509346?v=4", "gravatar_id": "", "url": "https://api.github.com/users/weiyangfb", "html_url": "https://github.com/weiyangfb", "followers_url": "https://api.github.com/users/weiyangfb/followers", "following_url": "https://api.github.com/users/weiyangfb/following{/other_user}", "gists_url": "https://api.github.com/users/weiyangfb/gists{/gist_id}", "starred_url": "https://api.github.com/users/weiyangfb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/weiyangfb/subscriptions", "organizations_url": "https://api.github.com/users/weiyangfb/orgs", "repos_url": "https://api.github.com/users/weiyangfb/repos", "events_url": "https://api.github.com/users/weiyangfb/events{/privacy}", "received_events_url": "https://api.github.com/users/weiyangfb/received_events", "type": "User", "site_admin": false}, "created_at": "2018-08-22T20:04:54Z", "updated_at": "2018-08-22T20:05:37Z", "author_association": "CONTRIBUTOR", "body_html": "<p>The <a href=\"https://github.com/pytorch/pytorch/blob/1af1b0c2a5d1dc708f5ff1d2acf69ff186a67a1a/aten/src/TH/generic/THTensorRandom.cpp#L196-L197\">magic number here is 16</a>, repro:</p>\n<pre><code># correct behavior\n&gt;&gt;&gt; t = torch.rand(3, 15)\n&gt;&gt;&gt; print(t)\ntensor([[0.5922, 0.9215, 0.2664, 0.1841, 0.0627, 0.3569, 0.5967, 0.8397, 0.9014,\n         0.8147, 0.7049, 0.0154, 0.6450, 0.3442, 0.2920],\n        [0.6326, 0.2334, 0.0461, 0.8352, 0.5155, 0.1291, 0.7841, 0.5856, 0.3210,\n         0.3861, 0.8823, 0.8920, 0.0720, 0.8782, 0.2836],\n        [0.4529, 0.3663, 0.5829, 0.7314, 0.2392, 0.5563, 0.1536, 0.6983, 0.4454,\n         0.7274, 0.9973, 0.4572, 0.2686, 0.3013, 0.5389]])\n\n&gt;&gt;&gt; t[2:3].normal_(0, 1)\n&gt;&gt;&gt; print(t)\ntensor([[ 0.5922,  0.9215,  0.2664,  0.1841,  0.0627,  0.3569,  0.5967,  0.8397,\n          0.9014,  0.8147,  0.7049,  0.0154,  0.6450,  0.3442,  0.2920],\n        [ 0.6326,  0.2334,  0.0461,  0.8352,  0.5155,  0.1291,  0.7841,  0.5856,\n          0.3210,  0.3861,  0.8823,  0.8920,  0.0720,  0.8782,  0.2836],\n        [ 0.4721,  1.3171,  0.4320,  0.3972, -0.6253, -0.2448,  0.3149,  0.8620,\n         -1.0889, -0.1088,  0.0826, -0.4618, -0.5504, -0.4960, -0.8308]])\n\n# buggy behavior\n&gt;&gt;&gt; t = torch.rand(3, 16)\n&gt;&gt;&gt; print(t)\ntensor([[0.1006, 0.9014, 0.0416, 0.1380, 0.1945, 0.6431, 0.1299, 0.6906, 0.7418,\n         0.5635, 0.6787, 0.4271, 0.4772, 0.3306, 0.4865, 0.8211],\n        [0.4450, 0.0186, 0.0372, 0.8363, 0.0270, 0.3087, 0.5484, 0.9798, 0.4941,\n         0.2091, 0.3329, 0.5028, 0.1156, 0.7811, 0.4576, 0.8761],\n        [0.7564, 0.7975, 0.8390, 0.7712, 0.9964, 0.5974, 0.7153, 0.3765, 0.1116,\n         0.9046, 0.6181, 0.4978, 0.9474, 0.6938, 0.5613, 0.2087]])\n\n&gt;&gt;&gt; t[2:3].normal_(0, 1)\n&gt;&gt;&gt; print(t)\ntensor([[-0.8513, -0.1027,  0.5992,  1.5048, -0.0625,  0.5813, -0.1488, -0.7693,\n         -1.4448, -1.7390,  1.7818, -0.3038, -1.3087,  0.7087,  0.7492,  0.9667],\n        [ 0.4450,  0.0186,  0.0372,  0.8363,  0.0270,  0.3087,  0.5484,  0.9798,\n          0.4941,  0.2091,  0.3329,  0.5028,  0.1156,  0.7811,  0.4576,  0.8761],\n        [ 0.7564,  0.7975,  0.8390,  0.7712,  0.9964,  0.5974,  0.7153,  0.3765,\n          0.1116,  0.9046,  0.6181,  0.4978,  0.9474,  0.6938,  0.5613,  0.2087]])\n</code></pre>\n<p>In error cases, seems like only the first N rows have <code>normal_()</code> applied.</p>", "body_text": "The magic number here is 16, repro:\n# correct behavior\n>>> t = torch.rand(3, 15)\n>>> print(t)\ntensor([[0.5922, 0.9215, 0.2664, 0.1841, 0.0627, 0.3569, 0.5967, 0.8397, 0.9014,\n         0.8147, 0.7049, 0.0154, 0.6450, 0.3442, 0.2920],\n        [0.6326, 0.2334, 0.0461, 0.8352, 0.5155, 0.1291, 0.7841, 0.5856, 0.3210,\n         0.3861, 0.8823, 0.8920, 0.0720, 0.8782, 0.2836],\n        [0.4529, 0.3663, 0.5829, 0.7314, 0.2392, 0.5563, 0.1536, 0.6983, 0.4454,\n         0.7274, 0.9973, 0.4572, 0.2686, 0.3013, 0.5389]])\n\n>>> t[2:3].normal_(0, 1)\n>>> print(t)\ntensor([[ 0.5922,  0.9215,  0.2664,  0.1841,  0.0627,  0.3569,  0.5967,  0.8397,\n          0.9014,  0.8147,  0.7049,  0.0154,  0.6450,  0.3442,  0.2920],\n        [ 0.6326,  0.2334,  0.0461,  0.8352,  0.5155,  0.1291,  0.7841,  0.5856,\n          0.3210,  0.3861,  0.8823,  0.8920,  0.0720,  0.8782,  0.2836],\n        [ 0.4721,  1.3171,  0.4320,  0.3972, -0.6253, -0.2448,  0.3149,  0.8620,\n         -1.0889, -0.1088,  0.0826, -0.4618, -0.5504, -0.4960, -0.8308]])\n\n# buggy behavior\n>>> t = torch.rand(3, 16)\n>>> print(t)\ntensor([[0.1006, 0.9014, 0.0416, 0.1380, 0.1945, 0.6431, 0.1299, 0.6906, 0.7418,\n         0.5635, 0.6787, 0.4271, 0.4772, 0.3306, 0.4865, 0.8211],\n        [0.4450, 0.0186, 0.0372, 0.8363, 0.0270, 0.3087, 0.5484, 0.9798, 0.4941,\n         0.2091, 0.3329, 0.5028, 0.1156, 0.7811, 0.4576, 0.8761],\n        [0.7564, 0.7975, 0.8390, 0.7712, 0.9964, 0.5974, 0.7153, 0.3765, 0.1116,\n         0.9046, 0.6181, 0.4978, 0.9474, 0.6938, 0.5613, 0.2087]])\n\n>>> t[2:3].normal_(0, 1)\n>>> print(t)\ntensor([[-0.8513, -0.1027,  0.5992,  1.5048, -0.0625,  0.5813, -0.1488, -0.7693,\n         -1.4448, -1.7390,  1.7818, -0.3038, -1.3087,  0.7087,  0.7492,  0.9667],\n        [ 0.4450,  0.0186,  0.0372,  0.8363,  0.0270,  0.3087,  0.5484,  0.9798,\n          0.4941,  0.2091,  0.3329,  0.5028,  0.1156,  0.7811,  0.4576,  0.8761],\n        [ 0.7564,  0.7975,  0.8390,  0.7712,  0.9964,  0.5974,  0.7153,  0.3765,\n          0.1116,  0.9046,  0.6181,  0.4978,  0.9474,  0.6938,  0.5613,  0.2087]])\n\nIn error cases, seems like only the first N rows have normal_() applied.", "body": "The [magic number here is 16](https://github.com/pytorch/pytorch/blob/1af1b0c2a5d1dc708f5ff1d2acf69ff186a67a1a/aten/src/TH/generic/THTensorRandom.cpp#L196-L197), repro:\r\n```\r\n# correct behavior\r\n>>> t = torch.rand(3, 15)\r\n>>> print(t)\r\ntensor([[0.5922, 0.9215, 0.2664, 0.1841, 0.0627, 0.3569, 0.5967, 0.8397, 0.9014,\r\n         0.8147, 0.7049, 0.0154, 0.6450, 0.3442, 0.2920],\r\n        [0.6326, 0.2334, 0.0461, 0.8352, 0.5155, 0.1291, 0.7841, 0.5856, 0.3210,\r\n         0.3861, 0.8823, 0.8920, 0.0720, 0.8782, 0.2836],\r\n        [0.4529, 0.3663, 0.5829, 0.7314, 0.2392, 0.5563, 0.1536, 0.6983, 0.4454,\r\n         0.7274, 0.9973, 0.4572, 0.2686, 0.3013, 0.5389]])\r\n\r\n>>> t[2:3].normal_(0, 1)\r\n>>> print(t)\r\ntensor([[ 0.5922,  0.9215,  0.2664,  0.1841,  0.0627,  0.3569,  0.5967,  0.8397,\r\n          0.9014,  0.8147,  0.7049,  0.0154,  0.6450,  0.3442,  0.2920],\r\n        [ 0.6326,  0.2334,  0.0461,  0.8352,  0.5155,  0.1291,  0.7841,  0.5856,\r\n          0.3210,  0.3861,  0.8823,  0.8920,  0.0720,  0.8782,  0.2836],\r\n        [ 0.4721,  1.3171,  0.4320,  0.3972, -0.6253, -0.2448,  0.3149,  0.8620,\r\n         -1.0889, -0.1088,  0.0826, -0.4618, -0.5504, -0.4960, -0.8308]])\r\n\r\n# buggy behavior\r\n>>> t = torch.rand(3, 16)\r\n>>> print(t)\r\ntensor([[0.1006, 0.9014, 0.0416, 0.1380, 0.1945, 0.6431, 0.1299, 0.6906, 0.7418,\r\n         0.5635, 0.6787, 0.4271, 0.4772, 0.3306, 0.4865, 0.8211],\r\n        [0.4450, 0.0186, 0.0372, 0.8363, 0.0270, 0.3087, 0.5484, 0.9798, 0.4941,\r\n         0.2091, 0.3329, 0.5028, 0.1156, 0.7811, 0.4576, 0.8761],\r\n        [0.7564, 0.7975, 0.8390, 0.7712, 0.9964, 0.5974, 0.7153, 0.3765, 0.1116,\r\n         0.9046, 0.6181, 0.4978, 0.9474, 0.6938, 0.5613, 0.2087]])\r\n\r\n>>> t[2:3].normal_(0, 1)\r\n>>> print(t)\r\ntensor([[-0.8513, -0.1027,  0.5992,  1.5048, -0.0625,  0.5813, -0.1488, -0.7693,\r\n         -1.4448, -1.7390,  1.7818, -0.3038, -1.3087,  0.7087,  0.7492,  0.9667],\r\n        [ 0.4450,  0.0186,  0.0372,  0.8363,  0.0270,  0.3087,  0.5484,  0.9798,\r\n          0.4941,  0.2091,  0.3329,  0.5028,  0.1156,  0.7811,  0.4576,  0.8761],\r\n        [ 0.7564,  0.7975,  0.8390,  0.7712,  0.9964,  0.5974,  0.7153,  0.3765,\r\n          0.1116,  0.9046,  0.6181,  0.4978,  0.9474,  0.6938,  0.5613,  0.2087]])\r\n```\r\n\r\nIn error cases, seems like only the first N rows have `normal_()` applied."}