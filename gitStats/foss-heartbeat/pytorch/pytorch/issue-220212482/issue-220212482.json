{"url": "https://api.github.com/repos/pytorch/pytorch/issues/1208", "repository_url": "https://api.github.com/repos/pytorch/pytorch", "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/1208/labels{/name}", "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/1208/comments", "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/1208/events", "html_url": "https://github.com/pytorch/pytorch/pull/1208", "id": 220212482, "node_id": "MDExOlB1bGxSZXF1ZXN0MTE0ODE0OTYy", "number": 1208, "title": "Fix unfold variable types", "user": {"login": "albanD", "id": 6359743, "node_id": "MDQ6VXNlcjYzNTk3NDM=", "avatar_url": "https://avatars3.githubusercontent.com/u/6359743?v=4", "gravatar_id": "", "url": "https://api.github.com/users/albanD", "html_url": "https://github.com/albanD", "followers_url": "https://api.github.com/users/albanD/followers", "following_url": "https://api.github.com/users/albanD/following{/other_user}", "gists_url": "https://api.github.com/users/albanD/gists{/gist_id}", "starred_url": "https://api.github.com/users/albanD/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/albanD/subscriptions", "organizations_url": "https://api.github.com/users/albanD/orgs", "repos_url": "https://api.github.com/users/albanD/repos", "events_url": "https://api.github.com/users/albanD/events{/privacy}", "received_events_url": "https://api.github.com/users/albanD/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-04-07T13:23:25Z", "updated_at": "2017-04-08T08:31:12Z", "closed_at": "2017-04-07T20:56:48Z", "author_association": "COLLABORATOR", "pull_request": {"url": "https://api.github.com/repos/pytorch/pytorch/pulls/1208", "html_url": "https://github.com/pytorch/pytorch/pull/1208", "diff_url": "https://github.com/pytorch/pytorch/pull/1208.diff", "patch_url": "https://github.com/pytorch/pytorch/pull/1208.patch"}, "body_html": "<p>Fix segfault corresponding to <a href=\"https://discuss.pytorch.org/t/sigsegv-when-applying-conv1d-with-padding/1726/2\" rel=\"nofollow\">this</a> forum bug, thanks to <a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=1908458\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/tudor-berariu\">@tudor-berariu</a> .</p>\n<p>This rework the changes of <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load issue title\" data-id=\"113132638\" data-permission-text=\"Issue title is private\" data-url=\"https://github.com/torch/nn/issues/443\" data-hovercard-type=\"pull_request\" data-hovercard-url=\"/torch/nn/pull/443/hovercard\" href=\"https://github.com/torch/nn/pull/443\">torch/nn#443</a> and the following commits that solved various bugs introduced by the original PR by casting only when necessary and keeping all types (other than pointers and sizes) signed.<br>\nAdded a comment on the assumptions made which is mainly that any size of the image (given as an <code>int</code> to the function) multiplied by the stride should not overflow a <code>long</code>.</p>", "body_text": "Fix segfault corresponding to this forum bug, thanks to @tudor-berariu .\nThis rework the changes of torch/nn#443 and the following commits that solved various bugs introduced by the original PR by casting only when necessary and keeping all types (other than pointers and sizes) signed.\nAdded a comment on the assumptions made which is mainly that any size of the image (given as an int to the function) multiplied by the stride should not overflow a long.", "body": "Fix segfault corresponding to [this](https://discuss.pytorch.org/t/sigsegv-when-applying-conv1d-with-padding/1726/2) forum bug, thanks to @tudor-berariu .\r\n\r\nThis rework the changes of torch/nn#443 and the following commits that solved various bugs introduced by the original PR by casting only when necessary and keeping all types (other than pointers and sizes) signed.\r\nAdded a comment on the assumptions made which is mainly that any size of the image (given as an `int` to the function) multiplied by the stride should not overflow a `long`."}