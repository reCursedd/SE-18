{"url": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/202523454", "pull_request_review_id": 137246767, "id": 202523454, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwMjUyMzQ1NA==", "diff_hunk": "@@ -66,3 +66,64 @@ def symbolic(g, input, p=0.5, train=False, inplace=False):\n     def _make_noise(input):\n         return input.new().resize_(input.size(0), input.size(1),\n                                    *repeat(1, input.dim() - 2))\n+\n+\n+class AlphaDropout(Dropout):\n+\n+    @staticmethod\n+    def symbolic(g, input, p=0.5, train=False, inplace=False):\n+        # See Note [Export inplace]\n+        # NB: In inference mode, FeatureDropout is exported as an identity op.\n+        from torch.onnx.symbolic import _unimplemented\n+        if train:\n+            return _unimplemented(\"AlphaDropout\", \"training mode\")\n+        return input\n+\n+    @classmethod\n+    def forward(cls, ctx, input, p=0.5, train=False, inplace=False):\n+        if p < 0 or p > 1:\n+            raise ValueError(\"dropout probability has to be between 0 and 1, \"\n+                             \"but got {}\".format(p))\n+        ctx.p = p\n+        ctx.train = train\n+        ctx.inplace = inplace\n+\n+        if ctx.p == 0 or not ctx.train:\n+            return input\n+\n+        if ctx.inplace:\n+            ctx.mark_dirty(input)\n+            output = input\n+        else:\n+            output = input.clone()\n+\n+        ctx.noise = cls._make_noise(input)\n+        if ctx.p == 1:\n+            a = 0\n+            b = ctx.noise\n+        else:\n+            ctx.noise.bernoulli_(1 - ctx.p)\n+            a = ((3.09091329228798008 * ctx.p + 1) * (1 - ctx.p)) ** (-0.5)", "path": "torch/nn/_functions/dropout.py", "position": null, "original_position": 41, "commit_id": "f9a7b5da589fed29d1c96773cdb36a19bd16fd16", "original_commit_id": "fc8a89571e895678bc159f2ce91a83b11480a2ae", "user": {"login": "ezyang", "id": 13564, "node_id": "MDQ6VXNlcjEzNTY0", "avatar_url": "https://avatars0.githubusercontent.com/u/13564?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ezyang", "html_url": "https://github.com/ezyang", "followers_url": "https://api.github.com/users/ezyang/followers", "following_url": "https://api.github.com/users/ezyang/following{/other_user}", "gists_url": "https://api.github.com/users/ezyang/gists{/gist_id}", "starred_url": "https://api.github.com/users/ezyang/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ezyang/subscriptions", "organizations_url": "https://api.github.com/users/ezyang/orgs", "repos_url": "https://api.github.com/users/ezyang/repos", "events_url": "https://api.github.com/users/ezyang/events{/privacy}", "received_events_url": "https://api.github.com/users/ezyang/received_events", "type": "User", "site_admin": false}, "body": "Can you comment that this is 1.7580993408473766 ** 2? (In fact, I'd feel better if we still had alpha written out explicitly as a variable.", "created_at": "2018-07-14T19:30:18Z", "updated_at": "2018-11-23T15:47:26Z", "html_url": "https://github.com/pytorch/pytorch/pull/9073#discussion_r202523454", "pull_request_url": "https://api.github.com/repos/pytorch/pytorch/pulls/9073", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/202523454"}, "html": {"href": "https://github.com/pytorch/pytorch/pull/9073#discussion_r202523454"}, "pull_request": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/9073"}}, "body_html": "<p>Can you comment that this is 1.7580993408473766 ** 2? (In fact, I'd feel better if we still had alpha written out explicitly as a variable.</p>", "body_text": "Can you comment that this is 1.7580993408473766 ** 2? (In fact, I'd feel better if we still had alpha written out explicitly as a variable."}