{"url": "https://api.github.com/repos/pytorch/pytorch/issues/comments/383980556", "html_url": "https://github.com/pytorch/pytorch/issues/6765#issuecomment-383980556", "issue_url": "https://api.github.com/repos/pytorch/pytorch/issues/6765", "id": 383980556, "node_id": "MDEyOklzc3VlQ29tbWVudDM4Mzk4MDU1Ng==", "user": {"login": "fmassa", "id": 9110200, "node_id": "MDQ6VXNlcjkxMTAyMDA=", "avatar_url": "https://avatars2.githubusercontent.com/u/9110200?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fmassa", "html_url": "https://github.com/fmassa", "followers_url": "https://api.github.com/users/fmassa/followers", "following_url": "https://api.github.com/users/fmassa/following{/other_user}", "gists_url": "https://api.github.com/users/fmassa/gists{/gist_id}", "starred_url": "https://api.github.com/users/fmassa/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fmassa/subscriptions", "organizations_url": "https://api.github.com/users/fmassa/orgs", "repos_url": "https://api.github.com/users/fmassa/repos", "events_url": "https://api.github.com/users/fmassa/events{/privacy}", "received_events_url": "https://api.github.com/users/fmassa/received_events", "type": "User", "site_admin": false}, "created_at": "2018-04-24T15:43:10Z", "updated_at": "2018-04-24T15:43:10Z", "author_association": "MEMBER", "body_html": "<p>For <code>p</code> even, <code>out &gt;= 0</code>, and thus adding an epsilon avoids the division by zero. That's not the case currently for <code>p</code> odd (and in this case I think we should add an <code>abs</code> in the code), but if we add the <code>abs</code> then the same case happens.</p>\n<p>But as I said before, I'm not sure this is numerically better than your proposed solution.</p>", "body_text": "For p even, out >= 0, and thus adding an epsilon avoids the division by zero. That's not the case currently for p odd (and in this case I think we should add an abs in the code), but if we add the abs then the same case happens.\nBut as I said before, I'm not sure this is numerically better than your proposed solution.", "body": "For `p` even, `out >= 0`, and thus adding an epsilon avoids the division by zero. That's not the case currently for `p` odd (and in this case I think we should add an `abs` in the code), but if we add the `abs` then the same case happens.\r\n\r\nBut as I said before, I'm not sure this is numerically better than your proposed solution."}