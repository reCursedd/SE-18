{"url": "https://api.github.com/repos/pytorch/pytorch/issues/comments/428675843", "html_url": "https://github.com/pytorch/pytorch/issues/10446#issuecomment-428675843", "issue_url": "https://api.github.com/repos/pytorch/pytorch/issues/10446", "id": 428675843, "node_id": "MDEyOklzc3VlQ29tbWVudDQyODY3NTg0Mw==", "user": {"login": "thedch", "id": 13357734, "node_id": "MDQ6VXNlcjEzMzU3NzM0", "avatar_url": "https://avatars3.githubusercontent.com/u/13357734?v=4", "gravatar_id": "", "url": "https://api.github.com/users/thedch", "html_url": "https://github.com/thedch", "followers_url": "https://api.github.com/users/thedch/followers", "following_url": "https://api.github.com/users/thedch/following{/other_user}", "gists_url": "https://api.github.com/users/thedch/gists{/gist_id}", "starred_url": "https://api.github.com/users/thedch/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/thedch/subscriptions", "organizations_url": "https://api.github.com/users/thedch/orgs", "repos_url": "https://api.github.com/users/thedch/repos", "events_url": "https://api.github.com/users/thedch/events{/privacy}", "received_events_url": "https://api.github.com/users/thedch/received_events", "type": "User", "site_admin": false}, "created_at": "2018-10-10T18:14:17Z", "updated_at": "2018-10-10T18:14:17Z", "author_association": "NONE", "body_html": "<p>hi <a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=30275821\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/houseroad\">@houseroad</a> -- thank you very much for your help. you are right, nightly build of pytorch fixes this problem:</p>\n<pre><code>$ conda list | grep -E \"pytorch|onnx\"\nonnx                      1.3.0                     &lt;pip&gt;\npytorch-nightly           1.0.0.dev20180929         py3.6_0    pytorch\n</code></pre>\n<p>prints:</p>\n<pre><code>value_info {\n  name: \"3\"\n  type {\n    tensor_type {\n      elem_type: FLOAT\n      shape {\n        dim {\n          dim_value: 1\n        }\n        dim {\n          dim_value: 3\n        }\n        dim {\n          dim_value: 100\n        }\n        dim {\n          dim_value: 100\n        }\n      }\n    }\n  }\n}\n</code></pre>\n<p>Note to any future readers: at the time of this writing, the standard <code>conda install -c conda-forge onnx</code> gives version 1.1.2, which <em>does not</em> have <code>shape_inference</code>. As such, you must install pytorch nightly <em>and</em> build onnx from source to get the code snippet I posted above to work.</p>", "body_text": "hi @houseroad -- thank you very much for your help. you are right, nightly build of pytorch fixes this problem:\n$ conda list | grep -E \"pytorch|onnx\"\nonnx                      1.3.0                     <pip>\npytorch-nightly           1.0.0.dev20180929         py3.6_0    pytorch\n\nprints:\nvalue_info {\n  name: \"3\"\n  type {\n    tensor_type {\n      elem_type: FLOAT\n      shape {\n        dim {\n          dim_value: 1\n        }\n        dim {\n          dim_value: 3\n        }\n        dim {\n          dim_value: 100\n        }\n        dim {\n          dim_value: 100\n        }\n      }\n    }\n  }\n}\n\nNote to any future readers: at the time of this writing, the standard conda install -c conda-forge onnx gives version 1.1.2, which does not have shape_inference. As such, you must install pytorch nightly and build onnx from source to get the code snippet I posted above to work.", "body": "hi @houseroad -- thank you very much for your help. you are right, nightly build of pytorch fixes this problem:\r\n\r\n```\r\n$ conda list | grep -E \"pytorch|onnx\"\r\nonnx                      1.3.0                     <pip>\r\npytorch-nightly           1.0.0.dev20180929         py3.6_0    pytorch\r\n```\r\n\r\nprints:\r\n\r\n```\r\nvalue_info {\r\n  name: \"3\"\r\n  type {\r\n    tensor_type {\r\n      elem_type: FLOAT\r\n      shape {\r\n        dim {\r\n          dim_value: 1\r\n        }\r\n        dim {\r\n          dim_value: 3\r\n        }\r\n        dim {\r\n          dim_value: 100\r\n        }\r\n        dim {\r\n          dim_value: 100\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\n```\r\n\r\nNote to any future readers: at the time of this writing, the standard `conda install -c conda-forge onnx` gives version 1.1.2, which *does not* have `shape_inference`. As such, you must install pytorch nightly *and* build onnx from source to get the code snippet I posted above to work. "}