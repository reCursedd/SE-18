{"url": "https://api.github.com/repos/pytorch/pytorch/issues/6736", "repository_url": "https://api.github.com/repos/pytorch/pytorch", "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/6736/labels{/name}", "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/6736/comments", "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/6736/events", "html_url": "https://github.com/pytorch/pytorch/pull/6736", "id": 315677247, "node_id": "MDExOlB1bGxSZXF1ZXN0MTgyNjI5ODQ5", "number": 6736, "title": "Fixes test_torch.py so that all tests pass on Volta hardware.", "user": {"login": "mruberry", "id": 38511765, "node_id": "MDQ6VXNlcjM4NTExNzY1", "avatar_url": "https://avatars3.githubusercontent.com/u/38511765?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mruberry", "html_url": "https://github.com/mruberry", "followers_url": "https://api.github.com/users/mruberry/followers", "following_url": "https://api.github.com/users/mruberry/following{/other_user}", "gists_url": "https://api.github.com/users/mruberry/gists{/gist_id}", "starred_url": "https://api.github.com/users/mruberry/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mruberry/subscriptions", "organizations_url": "https://api.github.com/users/mruberry/orgs", "repos_url": "https://api.github.com/users/mruberry/repos", "events_url": "https://api.github.com/users/mruberry/events{/privacy}", "received_events_url": "https://api.github.com/users/mruberry/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2018-04-18T23:30:58Z", "updated_at": "2018-04-19T23:55:42Z", "closed_at": "2018-04-19T02:44:14Z", "author_association": "CONTRIBUTOR", "pull_request": {"url": "https://api.github.com/repos/pytorch/pytorch/pulls/6736", "html_url": "https://github.com/pytorch/pytorch/pull/6736", "diff_url": "https://github.com/pytorch/pytorch/pull/6736.diff", "patch_url": "https://github.com/pytorch/pytorch/pull/6736.patch"}, "body_html": "<p>Issue: \"python3 test_cuda.py\" currently results in a failure when using Volta hardware.</p>\n<p>The failure is in test_advancedindex, and is caused by two \"sub-tests.\" At line 4651 a series of indices are used to compare PyTorch's and Numpy's indexing behavior. At least two of these indices index the same element of the reference tensor multiple times. These are:</p>\n<p>[slice(None), [[2]], [[0, 3], [4, 4]]]<br>\n[slice(None), [[0, 1], [1, 0]], [[2, 3], [3, 0]]]</p>\n<p>The first index selects the 5th element of the third row twice, and the<br>\nsecond index selects the 4th element of the second row twice.</p>\n<p>This causes the test to attempt to update the same index with two distinct values simultaneously. On my machine the Numpy created tensor will always take the \"latter\" of these two values, while the Volta tensor will always take the \"former.\" (Not to say this behavior is guaranteed by either framework.)</p>\n<p>The fix is to remove these two indices from test_torch.py. This causes all tests to pass.</p>\n<p>While updating test_torch.py I also noticed that assert_get_eq(tensor, indexer) had a bug where it was referring to \"reference\" instead of \"tensor.\" This bug had no impact on behavior. The fix is to have this function refer to its input tensor, \"tensor,\" instead. All tests still pass after this fix.</p>", "body_text": "Issue: \"python3 test_cuda.py\" currently results in a failure when using Volta hardware.\nThe failure is in test_advancedindex, and is caused by two \"sub-tests.\" At line 4651 a series of indices are used to compare PyTorch's and Numpy's indexing behavior. At least two of these indices index the same element of the reference tensor multiple times. These are:\n[slice(None), [[2]], [[0, 3], [4, 4]]]\n[slice(None), [[0, 1], [1, 0]], [[2, 3], [3, 0]]]\nThe first index selects the 5th element of the third row twice, and the\nsecond index selects the 4th element of the second row twice.\nThis causes the test to attempt to update the same index with two distinct values simultaneously. On my machine the Numpy created tensor will always take the \"latter\" of these two values, while the Volta tensor will always take the \"former.\" (Not to say this behavior is guaranteed by either framework.)\nThe fix is to remove these two indices from test_torch.py. This causes all tests to pass.\nWhile updating test_torch.py I also noticed that assert_get_eq(tensor, indexer) had a bug where it was referring to \"reference\" instead of \"tensor.\" This bug had no impact on behavior. The fix is to have this function refer to its input tensor, \"tensor,\" instead. All tests still pass after this fix.", "body": "Issue: \"python3 test_cuda.py\" currently results in a failure when using Volta hardware.\r\n\r\nThe failure is in test_advancedindex, and is caused by two \"sub-tests.\" At line 4651 a series of indices are used to compare PyTorch's and Numpy's indexing behavior. At least two of these indices index the same element of the reference tensor multiple times. These are:\r\n\r\n[slice(None), [[2]], [[0, 3], [4, 4]]]\r\n[slice(None), [[0, 1], [1, 0]], [[2, 3], [3, 0]]]\r\n\r\nThe first index selects the 5th element of the third row twice, and the\r\nsecond index selects the 4th element of the second row twice.\r\n\r\nThis causes the test to attempt to update the same index with two distinct values simultaneously. On my machine the Numpy created tensor will always take the \"latter\" of these two values, while the Volta tensor will always take the \"former.\" (Not to say this behavior is guaranteed by either framework.)\r\n\r\nThe fix is to remove these two indices from test_torch.py. This causes all tests to pass.\r\n\r\nWhile updating test_torch.py I also noticed that assert_get_eq(tensor, indexer) had a bug where it was referring to \"reference\" instead of \"tensor.\" This bug had no impact on behavior. The fix is to have this function refer to its input tensor, \"tensor,\" instead. All tests still pass after this fix.\r\n\r\n"}