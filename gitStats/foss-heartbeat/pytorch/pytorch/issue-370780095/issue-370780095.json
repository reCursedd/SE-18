{"url": "https://api.github.com/repos/pytorch/pytorch/issues/12724", "repository_url": "https://api.github.com/repos/pytorch/pytorch", "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/12724/labels{/name}", "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/12724/comments", "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/12724/events", "html_url": "https://github.com/pytorch/pytorch/issues/12724", "id": 370780095, "node_id": "MDU6SXNzdWUzNzA3ODAwOTU=", "number": 12724, "title": "Passing a scalar Tensor inside tuple size can cause segfaults sometimes (PyTorch 0.4.1)", "user": {"login": "ezyang", "id": 13564, "node_id": "MDQ6VXNlcjEzNTY0", "avatar_url": "https://avatars0.githubusercontent.com/u/13564?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ezyang", "html_url": "https://github.com/ezyang", "followers_url": "https://api.github.com/users/ezyang/followers", "following_url": "https://api.github.com/users/ezyang/following{/other_user}", "gists_url": "https://api.github.com/users/ezyang/gists{/gist_id}", "starred_url": "https://api.github.com/users/ezyang/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ezyang/subscriptions", "organizations_url": "https://api.github.com/users/ezyang/orgs", "repos_url": "https://api.github.com/users/ezyang/repos", "events_url": "https://api.github.com/users/ezyang/events{/privacy}", "received_events_url": "https://api.github.com/users/ezyang/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-10-16T20:12:22Z", "updated_at": "2018-10-17T18:01:55Z", "closed_at": "2018-10-17T18:01:54Z", "author_association": "CONTRIBUTOR", "body_html": "<p><a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=16548550\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/jwieting\">@jwieting</a> reported that they had a segfault in PyTorch, and they fixed it by making the following code change:</p>\n<pre><code>torch.zeros((n2, torch.max(all_g1_lengths)).long()\n// to\ntorch.zeros((n2, torch.max(all_g1_lengths).item())).long() \n</code></pre>\n<p>I checked and tensors are still accepted as arguments on master:</p>\n<pre><code>&gt;&gt;&gt; torch.zeros((2, torch.tensor(3)))\ntensor([[0., 0., 0.],\n        [0., 0., 0.]])\n</code></pre>\n<p>But maybe there is some funny business going here? Worth a closer look, perhaps.</p>\n<p>We don't have a small repro, it was some training job that failed on the fourth epoch.</p>", "body_text": "@jwieting reported that they had a segfault in PyTorch, and they fixed it by making the following code change:\ntorch.zeros((n2, torch.max(all_g1_lengths)).long()\n// to\ntorch.zeros((n2, torch.max(all_g1_lengths).item())).long() \n\nI checked and tensors are still accepted as arguments on master:\n>>> torch.zeros((2, torch.tensor(3)))\ntensor([[0., 0., 0.],\n        [0., 0., 0.]])\n\nBut maybe there is some funny business going here? Worth a closer look, perhaps.\nWe don't have a small repro, it was some training job that failed on the fourth epoch.", "body": "@jwieting reported that they had a segfault in PyTorch, and they fixed it by making the following code change:\r\n\r\n```\r\ntorch.zeros((n2, torch.max(all_g1_lengths)).long()\r\n// to\r\ntorch.zeros((n2, torch.max(all_g1_lengths).item())).long() \r\n```\r\n\r\nI checked and tensors are still accepted as arguments on master:\r\n\r\n```\r\n>>> torch.zeros((2, torch.tensor(3)))\r\ntensor([[0., 0., 0.],\r\n        [0., 0., 0.]])\r\n```\r\n\r\nBut maybe there is some funny business going here? Worth a closer look, perhaps.\r\n\r\nWe don't have a small repro, it was some training job that failed on the fourth epoch."}