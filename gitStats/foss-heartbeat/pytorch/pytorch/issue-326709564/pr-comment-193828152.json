{"url": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/193828152", "pull_request_review_id": 126880798, "id": 193828152, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5MzgyODE1Mg==", "diff_hunk": "@@ -0,0 +1,25 @@\n+#include \"TensorTransformations.h\"\n+\n+#include \"ATen/NativeFunctions.h\"\n+\n+namespace at {\n+namespace native {\n+\n+Tensor flip_cpu(const Tensor& self, IntList dims) {\n+  const int64_t total_dims = self.dim(), flip_dims_size = dims.size();\n+  check_errors(total_dims, flip_dims_size, dims);\n+\n+  auto indices = std::vector<at::Tensor>(flip_dims_size);\n+  for (int64_t i = 0; i < flip_dims_size; i++) {\n+    indices[i] = at::arange(self.type().toScalarType(at::ScalarType::Long), self.size(i) - 1, -1, -1);\n+  }\n+  // creates a meshgrid\n+  for (int64_t i = 0; i < flip_dims_size; i++) {\n+    auto temp = std::vector<int64_t>(flip_dims_size, 1);\n+    temp[i] = indices[i].size(0);\n+    indices[i] = indices[i].view(IntList(temp));\n+  }\n+  return self.index(TensorList(indices));", "path": "aten/src/ATen/native/TensorTransformations.cpp", "position": null, "original_position": 22, "commit_id": "0709c30284942f0169b9b17ddd5c4e309fd8e1c1", "original_commit_id": "2173b886878ad9f8b1df34e6755791b6fa4276eb", "user": {"login": "weiyangfb", "id": 38509346, "node_id": "MDQ6VXNlcjM4NTA5MzQ2", "avatar_url": "https://avatars1.githubusercontent.com/u/38509346?v=4", "gravatar_id": "", "url": "https://api.github.com/users/weiyangfb", "html_url": "https://github.com/weiyangfb", "followers_url": "https://api.github.com/users/weiyangfb/followers", "following_url": "https://api.github.com/users/weiyangfb/following{/other_user}", "gists_url": "https://api.github.com/users/weiyangfb/gists{/gist_id}", "starred_url": "https://api.github.com/users/weiyangfb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/weiyangfb/subscriptions", "organizations_url": "https://api.github.com/users/weiyangfb/orgs", "repos_url": "https://api.github.com/users/weiyangfb/repos", "events_url": "https://api.github.com/users/weiyangfb/events{/privacy}", "received_events_url": "https://api.github.com/users/weiyangfb/received_events", "type": "User", "site_admin": false}, "body": "Good catch! I will add this. Is there an easy way to generate the correct permute order?", "created_at": "2018-06-07T17:25:58Z", "updated_at": "2018-11-23T15:45:10Z", "html_url": "https://github.com/pytorch/pytorch/pull/7873#discussion_r193828152", "pull_request_url": "https://api.github.com/repos/pytorch/pytorch/pulls/7873", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/193828152"}, "html": {"href": "https://github.com/pytorch/pytorch/pull/7873#discussion_r193828152"}, "pull_request": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/7873"}}, "body_html": "<p>Good catch! I will add this. Is there an easy way to generate the correct permute order?</p>", "body_text": "Good catch! I will add this. Is there an easy way to generate the correct permute order?", "in_reply_to_id": 192048348}