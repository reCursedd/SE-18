{"url": "https://api.github.com/repos/pytorch/pytorch/issues/7873", "repository_url": "https://api.github.com/repos/pytorch/pytorch", "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/7873/labels{/name}", "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/7873/comments", "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/7873/events", "html_url": "https://github.com/pytorch/pytorch/pull/7873", "id": 326709564, "node_id": "MDExOlB1bGxSZXF1ZXN0MTkwNzI1MzI5", "number": 7873, "title": "Added flip() fn in ATen (CPU + CUDA)", "user": {"login": "weiyangfb", "id": 38509346, "node_id": "MDQ6VXNlcjM4NTA5MzQ2", "avatar_url": "https://avatars1.githubusercontent.com/u/38509346?v=4", "gravatar_id": "", "url": "https://api.github.com/users/weiyangfb", "html_url": "https://github.com/weiyangfb", "followers_url": "https://api.github.com/users/weiyangfb/followers", "following_url": "https://api.github.com/users/weiyangfb/following{/other_user}", "gists_url": "https://api.github.com/users/weiyangfb/gists{/gist_id}", "starred_url": "https://api.github.com/users/weiyangfb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/weiyangfb/subscriptions", "organizations_url": "https://api.github.com/users/weiyangfb/orgs", "repos_url": "https://api.github.com/users/weiyangfb/repos", "events_url": "https://api.github.com/users/weiyangfb/events{/privacy}", "received_events_url": "https://api.github.com/users/weiyangfb/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 30, "created_at": "2018-05-26T04:40:26Z", "updated_at": "2018-11-23T15:45:37Z", "closed_at": "2018-06-16T01:20:56Z", "author_association": "CONTRIBUTOR", "pull_request": {"url": "https://api.github.com/repos/pytorch/pytorch/pulls/7873", "html_url": "https://github.com/pytorch/pytorch/pull/7873", "diff_url": "https://github.com/pytorch/pytorch/pull/7873.diff", "patch_url": "https://github.com/pytorch/pytorch/pull/7873.patch"}, "body_html": "<p>Summary:</p>\n<ol>\n<li><span class=\"issue-keyword tooltipped tooltipped-se\" aria-label=\"This pull request closes issue #229.\">fixes</span> <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load issue title\" data-id=\"190314353\" data-permission-text=\"Issue title is private\" data-url=\"https://github.com/pytorch/pytorch/issues/229\" data-hovercard-type=\"issue\" data-hovercard-url=\"/pytorch/pytorch/issues/229/hovercard\" href=\"https://github.com/pytorch/pytorch/issues/229\">#229</a></li>\n<li>implemented torch.flip() to reverse tensor (contiguous and non-contiguous) along specified dimensions</li>\n<li>implemented forward and backward functions for both of CPU and CUDA</li>\n<li>added tests at test_torch, test_cuda, and test_autograd</li>\n</ol>\n<p>Details:<br>\nGiven that a tensor element's offset = sum_i indices[i] * strides(i), we can flip on indices for each element, and then copy values to the corresponding offset.</p>\n<p>Usage:<br>\nx = torch.arange(8).view(2, 2, 2).flip(0, 1, 2) # flip along the 1st, 2nd, and 3rd dimensions</p>\n<p>Future work:</p>\n<ol>\n<li>use thrust to speed up CUDA implementation</li>\n</ol>", "body_text": "Summary:\n\nfixes #229\nimplemented torch.flip() to reverse tensor (contiguous and non-contiguous) along specified dimensions\nimplemented forward and backward functions for both of CPU and CUDA\nadded tests at test_torch, test_cuda, and test_autograd\n\nDetails:\nGiven that a tensor element's offset = sum_i indices[i] * strides(i), we can flip on indices for each element, and then copy values to the corresponding offset.\nUsage:\nx = torch.arange(8).view(2, 2, 2).flip(0, 1, 2) # flip along the 1st, 2nd, and 3rd dimensions\nFuture work:\n\nuse thrust to speed up CUDA implementation", "body": "Summary:\r\n1. fixes #229 \r\n2. implemented torch.flip() to reverse tensor (contiguous and non-contiguous) along specified dimensions\r\n3. implemented forward and backward functions for both of CPU and CUDA\r\n4. added tests at test_torch, test_cuda, and test_autograd\r\n\r\nDetails:\r\nGiven that a tensor element's offset = sum_i indices[i] * strides(i), we can flip on indices for each element, and then copy values to the corresponding offset.\r\n\r\nUsage:\r\nx = torch.arange(8).view(2, 2, 2).flip(0, 1, 2) # flip along the 1st, 2nd, and 3rd dimensions\r\n\r\nFuture work:\r\n1. use thrust to speed up CUDA implementation"}