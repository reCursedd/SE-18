{"url": "https://api.github.com/repos/pytorch/pytorch/issues/comments/396772382", "html_url": "https://github.com/pytorch/pytorch/pull/7873#issuecomment-396772382", "issue_url": "https://api.github.com/repos/pytorch/pytorch/issues/7873", "id": 396772382, "node_id": "MDEyOklzc3VlQ29tbWVudDM5Njc3MjM4Mg==", "user": {"login": "weiyangfb", "id": 38509346, "node_id": "MDQ6VXNlcjM4NTA5MzQ2", "avatar_url": "https://avatars1.githubusercontent.com/u/38509346?v=4", "gravatar_id": "", "url": "https://api.github.com/users/weiyangfb", "html_url": "https://github.com/weiyangfb", "followers_url": "https://api.github.com/users/weiyangfb/followers", "following_url": "https://api.github.com/users/weiyangfb/following{/other_user}", "gists_url": "https://api.github.com/users/weiyangfb/gists{/gist_id}", "starred_url": "https://api.github.com/users/weiyangfb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/weiyangfb/subscriptions", "organizations_url": "https://api.github.com/users/weiyangfb/orgs", "repos_url": "https://api.github.com/users/weiyangfb/repos", "events_url": "https://api.github.com/users/weiyangfb/events{/privacy}", "received_events_url": "https://api.github.com/users/weiyangfb/received_events", "type": "User", "site_admin": false}, "created_at": "2018-06-13T00:05:56Z", "updated_at": "2018-06-13T00:08:23Z", "author_association": "CONTRIBUTOR", "body_html": "<p><a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=9110200\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/fmassa\">@fmassa</a> Using <code>torch.cuda.synchronize()</code> does not change much on the runtime, am I doing it correctly?</p>\n<div class=\"highlight highlight-source-python\"><pre>data_cuda <span class=\"pl-k\">=</span> torch.arange(<span class=\"pl-c1\">1000000</span>, <span class=\"pl-v\">device</span><span class=\"pl-k\">=</span>cuda).view(<span class=\"pl-c1\">1000</span>,<span class=\"pl-c1\">1000</span>)\n<span class=\"pl-k\">def</span> <span class=\"pl-en\">meshgrid</span>():\n    flip_meshgrid(data_cuda, (<span class=\"pl-c1\">0</span>, <span class=\"pl-c1\">1</span>))\n    torch.cuda.synchronize()\n<span class=\"pl-k\">%</span>timeit meshgrid()</pre></div>\n<p>1000 loops, best of 3: 1.76 ms per loop</p>\n<div class=\"highlight highlight-source-python\"><pre>data_cuda <span class=\"pl-k\">=</span> torch.arange(<span class=\"pl-c1\">1000000</span>, <span class=\"pl-v\">device</span><span class=\"pl-k\">=</span>cuda).view(<span class=\"pl-c1\">1000</span>,<span class=\"pl-c1\">1000</span>)\n<span class=\"pl-k\">def</span> <span class=\"pl-en\">flip</span>():\n    data_cuda.flip(<span class=\"pl-c1\">0</span>,<span class=\"pl-c1\">1</span>)\n    torch.cuda.synchronize()\n<span class=\"pl-k\">%</span>timeit flip()</pre></div>\n<p>1000 loops, best of 3: 353 \u00b5s per loop</p>\n<p>I don't know why though. Can I ask normally how to profile the fraction of time spent?</p>", "body_text": "@fmassa Using torch.cuda.synchronize() does not change much on the runtime, am I doing it correctly?\ndata_cuda = torch.arange(1000000, device=cuda).view(1000,1000)\ndef meshgrid():\n    flip_meshgrid(data_cuda, (0, 1))\n    torch.cuda.synchronize()\n%timeit meshgrid()\n1000 loops, best of 3: 1.76 ms per loop\ndata_cuda = torch.arange(1000000, device=cuda).view(1000,1000)\ndef flip():\n    data_cuda.flip(0,1)\n    torch.cuda.synchronize()\n%timeit flip()\n1000 loops, best of 3: 353 \u00b5s per loop\nI don't know why though. Can I ask normally how to profile the fraction of time spent?", "body": "@fmassa Using `torch.cuda.synchronize()` does not change much on the runtime, am I doing it correctly?\r\n\r\n```python\r\ndata_cuda = torch.arange(1000000, device=cuda).view(1000,1000)\r\ndef meshgrid():\r\n    flip_meshgrid(data_cuda, (0, 1))\r\n    torch.cuda.synchronize()\r\n%timeit meshgrid()\r\n```\r\n1000 loops, best of 3: 1.76 ms per loop\r\n\r\n```python\r\ndata_cuda = torch.arange(1000000, device=cuda).view(1000,1000)\r\ndef flip():\r\n    data_cuda.flip(0,1)\r\n    torch.cuda.synchronize()\r\n%timeit flip()\r\n```\r\n1000 loops, best of 3: 353 \u00b5s per loop\r\n\r\nI don't know why though. Can I ask normally how to profile the fraction of time spent?"}