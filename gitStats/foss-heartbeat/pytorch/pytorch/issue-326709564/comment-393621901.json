{"url": "https://api.github.com/repos/pytorch/pytorch/issues/comments/393621901", "html_url": "https://github.com/pytorch/pytorch/pull/7873#issuecomment-393621901", "issue_url": "https://api.github.com/repos/pytorch/pytorch/issues/7873", "id": 393621901, "node_id": "MDEyOklzc3VlQ29tbWVudDM5MzYyMTkwMQ==", "user": {"login": "ngimel", "id": 15841449, "node_id": "MDQ6VXNlcjE1ODQxNDQ5", "avatar_url": "https://avatars3.githubusercontent.com/u/15841449?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ngimel", "html_url": "https://github.com/ngimel", "followers_url": "https://api.github.com/users/ngimel/followers", "following_url": "https://api.github.com/users/ngimel/following{/other_user}", "gists_url": "https://api.github.com/users/ngimel/gists{/gist_id}", "starred_url": "https://api.github.com/users/ngimel/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ngimel/subscriptions", "organizations_url": "https://api.github.com/users/ngimel/orgs", "repos_url": "https://api.github.com/users/ngimel/repos", "events_url": "https://api.github.com/users/ngimel/events{/privacy}", "received_events_url": "https://api.github.com/users/ngimel/received_events", "type": "User", "site_admin": false}, "created_at": "2018-05-31T18:04:04Z", "updated_at": "2018-05-31T18:04:04Z", "author_association": "CONTRIBUTOR", "body_html": "<p><a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=38509346\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/weiyangfb\">@weiyangfb</a>, correct about collapseDims, as for bandwidth, you can compute it as bytes/time, in you case its 8e6/357e-6 = 22.4 GB/s, not that great. K40 peak bandwidth is around 200 GB/s. (8e6 because your tensor has 1 million elements, 4 bytes per element, each element has to be read and written, hence 4*2). You can also compare your time with e.g. time for a pointwise operation for a same size tensor, e.g. a *=2.<br>\nFor nD tensor, for each dimension that you are flipping you have to shift the base pointer by (dim[i]-1)*stride[i], and set the stride to -stride[i], where stride[i] are the strides of contiguous tensor of those dimensions. At least I think so, please check my math.</p>", "body_text": "@weiyangfb, correct about collapseDims, as for bandwidth, you can compute it as bytes/time, in you case its 8e6/357e-6 = 22.4 GB/s, not that great. K40 peak bandwidth is around 200 GB/s. (8e6 because your tensor has 1 million elements, 4 bytes per element, each element has to be read and written, hence 4*2). You can also compare your time with e.g. time for a pointwise operation for a same size tensor, e.g. a *=2.\nFor nD tensor, for each dimension that you are flipping you have to shift the base pointer by (dim[i]-1)*stride[i], and set the stride to -stride[i], where stride[i] are the strides of contiguous tensor of those dimensions. At least I think so, please check my math.", "body": "@weiyangfb, correct about collapseDims, as for bandwidth, you can compute it as bytes/time, in you case its 8e6/357e-6 = 22.4 GB/s, not that great. K40 peak bandwidth is around 200 GB/s. (8e6 because your tensor has 1 million elements, 4 bytes per element, each element has to be read and written, hence 4*2). You can also compare your time with e.g. time for a pointwise operation for a same size tensor, e.g. a *=2. \r\nFor nD tensor, for each dimension that you are flipping you have to shift the base pointer by (dim[i]-1)*stride[i], and set the stride to -stride[i], where stride[i] are the strides of contiguous tensor of those dimensions. At least I think so, please check my math. "}