{"url": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/195612893", "pull_request_review_id": 129018380, "id": 195612893, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5NTYxMjg5Mw==", "diff_hunk": "@@ -0,0 +1,121 @@\n+#include \"ATen/native/TensorTransformations.h\"\n+\n+#include \"ATen/cuda/detail/IndexUtils.cuh\"\n+#include \"ATen/NativeFunctions.h\"\n+#include \"ATen/cuda/CUDATensorMethods.cuh\"\n+#include \"ATen/cuda/CUDATypeConversion.cuh\"\n+\n+namespace at {\n+namespace native {\n+\n+#define AT_APPLY_THREADS_PER_BLOCK 32 * 16\n+#define AT_APPLY_BLOCKS_PER_SM 4\n+\n+template <typename scalar_t, typename IndexType>\n+#if __CUDA_ARCH__ >= 350\n+__launch_bounds__(AT_APPLY_THREADS_PER_BLOCK, AT_APPLY_BLOCKS_PER_SM)\n+#endif\n+__global__ void\n+kernel_pointwise_flip_apply2(const cuda::detail::TensorInfo<scalar_t, IndexType> in_tensor_info,\n+                          cuda::detail::TensorInfo<scalar_t, IndexType> out_tensor_info,\n+                          IndexType N,\n+                          int flip_dim,\n+                          int64_t total_dims) {\n+  for (IndexType linear_index = blockIdx.x * blockDim.x + threadIdx.x; linear_index < N; linear_index += gridDim.x * blockDim.x) {\n+    int64_t cur_indices = linear_index, rem = 0, dst_offset = 0;", "path": "aten/src/ATen/native/cuda/TensorTransformations.cu", "position": null, "original_position": 25, "commit_id": "0709c30284942f0169b9b17ddd5c4e309fd8e1c1", "original_commit_id": "a35d2adc1a2a62fc9b88954de4df6f12b9bd5e13", "user": {"login": "weiyangfb", "id": 38509346, "node_id": "MDQ6VXNlcjM4NTA5MzQ2", "avatar_url": "https://avatars1.githubusercontent.com/u/38509346?v=4", "gravatar_id": "", "url": "https://api.github.com/users/weiyangfb", "html_url": "https://github.com/weiyangfb", "followers_url": "https://api.github.com/users/weiyangfb/followers", "following_url": "https://api.github.com/users/weiyangfb/following{/other_user}", "gists_url": "https://api.github.com/users/weiyangfb/gists{/gist_id}", "starred_url": "https://api.github.com/users/weiyangfb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/weiyangfb/subscriptions", "organizations_url": "https://api.github.com/users/weiyangfb/orgs", "repos_url": "https://api.github.com/users/weiyangfb/repos", "events_url": "https://api.github.com/users/weiyangfb/events{/privacy}", "received_events_url": "https://api.github.com/users/weiyangfb/received_events", "type": "User", "site_admin": false}, "body": "@soumith Thanks a lot! The results of hardcode and templating are the same now:\r\n\r\n\u00a0 | time\r\n-- | --\r\nhardcode int64_t | 165 \u00b5s\r\nhardcode int32_t | 128 \u00b5s\r\ntemplating int64_t | 165 \u00b5s\r\ntemplating int32_t | 128 \u00b5s\r\n\r\n@ngimel will it be fine to template on index type = int64_t in this case?", "created_at": "2018-06-15T01:11:26Z", "updated_at": "2018-11-23T15:45:37Z", "html_url": "https://github.com/pytorch/pytorch/pull/7873#discussion_r195612893", "pull_request_url": "https://api.github.com/repos/pytorch/pytorch/pulls/7873", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/195612893"}, "html": {"href": "https://github.com/pytorch/pytorch/pull/7873#discussion_r195612893"}, "pull_request": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/7873"}}, "body_html": "<p><a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=1310570\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/soumith\">@soumith</a> Thanks a lot! The results of hardcode and templating are the same now:</p>\n<table>\n<thead>\n<tr>\n<th>\u00a0</th>\n<th>time</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>hardcode int64_t</td>\n<td>165 \u00b5s</td>\n</tr>\n<tr>\n<td>hardcode int32_t</td>\n<td>128 \u00b5s</td>\n</tr>\n<tr>\n<td>templating int64_t</td>\n<td>165 \u00b5s</td>\n</tr>\n<tr>\n<td>templating int32_t</td>\n<td>128 \u00b5s</td>\n</tr>\n</tbody>\n</table>\n<p><a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=15841449\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/ngimel\">@ngimel</a> will it be fine to template on index type = int64_t in this case?</p>", "body_text": "@soumith Thanks a lot! The results of hardcode and templating are the same now:\n\n\n\n\u00a0\ntime\n\n\n\n\nhardcode int64_t\n165 \u00b5s\n\n\nhardcode int32_t\n128 \u00b5s\n\n\ntemplating int64_t\n165 \u00b5s\n\n\ntemplating int32_t\n128 \u00b5s\n\n\n\n@ngimel will it be fine to template on index type = int64_t in this case?", "in_reply_to_id": 195557001}