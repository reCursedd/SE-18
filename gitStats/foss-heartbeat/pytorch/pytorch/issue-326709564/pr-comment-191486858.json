{"url": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/191486858", "pull_request_review_id": 124068472, "id": 191486858, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5MTQ4Njg1OA==", "diff_hunk": "@@ -0,0 +1,78 @@\n+#include \"ATen/ATen.h\"\n+#include \"ATen/ExpandUtils.h\"\n+#include \"ATen/NativeFunctions.h\"\n+#include <functional>\n+#include <numeric>\n+#include <vector>\n+\n+\n+namespace at {\n+namespace native {\n+\n+Tensor reverse_dim(const Tensor& t, int64_t dim) {\n+  Tensor index = at::arange(t.type().toScalarType(at::ScalarType::Long), t.size(dim) - 1, -1, -1);\n+  return t.index_select(dim, index);\n+}\n+\n+Tensor flip_cpu(const Tensor& self, IntList dims) {\n+\n+  int64_t total_dims = self.dim(), flip_dims_size = dims.size();\n+\n+  // check if number of axis in dim is valid\n+  if (flip_dims_size == 0) {\n+    std::stringstream ss;\n+    ss << \"expected input tensor dims not empty, \"\n+       << \"but got tensor dims size=\" << flip_dims_size;\n+    throw std::runtime_error(ss.str());", "path": "aten/src/ATen/native/TensorTransformations.cpp", "position": null, "original_position": 26, "commit_id": "0709c30284942f0169b9b17ddd5c4e309fd8e1c1", "original_commit_id": "d44a3ba5fefcf037355236cc9064e42585912c79", "user": {"login": "goldsborough", "id": 6429851, "node_id": "MDQ6VXNlcjY0Mjk4NTE=", "avatar_url": "https://avatars3.githubusercontent.com/u/6429851?v=4", "gravatar_id": "", "url": "https://api.github.com/users/goldsborough", "html_url": "https://github.com/goldsborough", "followers_url": "https://api.github.com/users/goldsborough/followers", "following_url": "https://api.github.com/users/goldsborough/following{/other_user}", "gists_url": "https://api.github.com/users/goldsborough/gists{/gist_id}", "starred_url": "https://api.github.com/users/goldsborough/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/goldsborough/subscriptions", "organizations_url": "https://api.github.com/users/goldsborough/orgs", "repos_url": "https://api.github.com/users/goldsborough/repos", "events_url": "https://api.github.com/users/goldsborough/events{/privacy}", "received_events_url": "https://api.github.com/users/goldsborough/received_events", "type": "User", "site_admin": false}, "body": "Please use the `AT_ERROR`/`AT_CHECK` macro, which includes backtraces in errors. Write this as `AT_CHECK(flip_dims_size != 0, \"expected input tensor dims not to be empty, but got tensor dims size=\", flip_dims_size)`", "created_at": "2018-05-29T16:20:13Z", "updated_at": "2018-11-23T15:44:41Z", "html_url": "https://github.com/pytorch/pytorch/pull/7873#discussion_r191486858", "pull_request_url": "https://api.github.com/repos/pytorch/pytorch/pulls/7873", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/191486858"}, "html": {"href": "https://github.com/pytorch/pytorch/pull/7873#discussion_r191486858"}, "pull_request": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/7873"}}, "body_html": "<p>Please use the <code>AT_ERROR</code>/<code>AT_CHECK</code> macro, which includes backtraces in errors. Write this as <code>AT_CHECK(flip_dims_size != 0, \"expected input tensor dims not to be empty, but got tensor dims size=\", flip_dims_size)</code></p>", "body_text": "Please use the AT_ERROR/AT_CHECK macro, which includes backtraces in errors. Write this as AT_CHECK(flip_dims_size != 0, \"expected input tensor dims not to be empty, but got tensor dims size=\", flip_dims_size)"}