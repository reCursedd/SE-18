{"url": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/206889249", "pull_request_review_id": 142388473, "id": 206889249, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwNjg4OTI0OQ==", "diff_hunk": "@@ -137,25 +137,34 @@ void THStorage_(resize)(THStorage *storage, ptrdiff_t size)\n void THStorage_(fill)(THStorage *storage, real value)\n {\n   ptrdiff_t i;\n-  for(i = 0; i < storage->size; i++)\n+  for(i = 0; i < storage->size(); i++)\n     THStorage_(data)(storage)[i] = value;\n }\n \n void THStorage_(set)(THStorage *self, ptrdiff_t idx, real value)\n {\n-  THArgCheck((idx >= 0) && (idx < self->size), 2, \"out of bounds\");\n+  THArgCheck((idx >= 0) && (idx < self->size()), 2, \"out of bounds\");\n   THStorage_(data)(self)[idx] = value;\n }\n \n real THStorage_(get)(const THStorage *self, ptrdiff_t idx)\n {\n-  THArgCheck((idx >= 0) && (idx < self->size), 2, \"out of bounds\");\n+  THArgCheck((idx >= 0) && (idx < self->size()), 2, \"out of bounds\");\n   return THStorage_(data)(self)[idx];\n }\n \n void THStorage_(swap)(THStorage *storage1, THStorage *storage2)\n {\n-  THStorage_swap(storage1, storage2);\n+  std::swap(storage1->scalar_type(), storage2->scalar_type());\n+  std::swap(storage1->data_ptr(), storage2->data_ptr());\n+  ptrdiff_t tmp_size = storage1->size();\n+  storage1->set_size(storage2->size());\n+  storage2->set_size(tmp_size);\n+  bool tmp_bool = storage1->resizable();\n+  storage1->set_resizable(storage2->resizable());\n+  storage2->set_resizable(tmp_bool);\n+  std::swap(storage1->allocator_, storage2->allocator_);\n+  std::swap(storage1->finalizer_, storage2->finalizer_);", "path": "aten/src/TH/generic/THStorage.cpp", "position": 44, "original_position": 44, "commit_id": "fde356244d98e4a10a1fd50a67429658b9eae788", "original_commit_id": "b782a3009559da19e0d8f11f6316f48d8f839b36", "user": {"login": "ezyang", "id": 13564, "node_id": "MDQ6VXNlcjEzNTY0", "avatar_url": "https://avatars0.githubusercontent.com/u/13564?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ezyang", "html_url": "https://github.com/ezyang", "followers_url": "https://api.github.com/users/ezyang/followers", "following_url": "https://api.github.com/users/ezyang/following{/other_user}", "gists_url": "https://api.github.com/users/ezyang/gists{/gist_id}", "starred_url": "https://api.github.com/users/ezyang/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ezyang/subscriptions", "organizations_url": "https://api.github.com/users/ezyang/orgs", "repos_url": "https://api.github.com/users/ezyang/repos", "events_url": "https://api.github.com/users/ezyang/events{/privacy}", "received_events_url": "https://api.github.com/users/ezyang/received_events", "type": "User", "site_admin": false}, "body": "I know I gave conflicting advice here, but I think my preferred implementations of swap is using a hypothetical move constructor on storage. The move constructor is closer to the fields and more likely to be updated if someone adds another field. But this is OK for now.", "created_at": "2018-08-01T13:57:12Z", "updated_at": "2018-11-23T15:48:31Z", "html_url": "https://github.com/pytorch/pytorch/pull/10074#discussion_r206889249", "pull_request_url": "https://api.github.com/repos/pytorch/pytorch/pulls/10074", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/206889249"}, "html": {"href": "https://github.com/pytorch/pytorch/pull/10074#discussion_r206889249"}, "pull_request": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/10074"}}, "body_html": "<p>I know I gave conflicting advice here, but I think my preferred implementations of swap is using a hypothetical move constructor on storage. The move constructor is closer to the fields and more likely to be updated if someone adds another field. But this is OK for now.</p>", "body_text": "I know I gave conflicting advice here, but I think my preferred implementations of swap is using a hypothetical move constructor on storage. The move constructor is closer to the fields and more likely to be updated if someone adds another field. But this is OK for now."}