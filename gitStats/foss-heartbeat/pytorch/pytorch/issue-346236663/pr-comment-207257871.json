{"url": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/207257871", "pull_request_review_id": 142832634, "id": 207257871, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwNzI1Nzg3MQ==", "diff_hunk": "@@ -53,22 +53,33 @@ class THLongStorageView {\n         break;\n     }\n \n-    if(zero_dim_to_one && ref.size() == 0) {\n+    if (zero_dim_to_one && ref.size() == 0) {\n       // make storage of size 0 actually a 1-length storage with 1 element\n       // so that our 0-dim tensors get allocated as 1-dim inside TH\n+\n       one = 1;\n-      storage.data_ptr = {&one, kCPU}; // non-owning\n-      storage.size = 1;\n+      storage.set_pImpl(new StorageImpl(", "path": "aten/src/ATen/THLongStorageView.h", "position": 44, "original_position": 44, "commit_id": "fde356244d98e4a10a1fd50a67429658b9eae788", "original_commit_id": "876569841ded380e0ef63b899fa446052f79502f", "user": {"login": "ezyang", "id": 13564, "node_id": "MDQ6VXNlcjEzNTY0", "avatar_url": "https://avatars0.githubusercontent.com/u/13564?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ezyang", "html_url": "https://github.com/ezyang", "followers_url": "https://api.github.com/users/ezyang/followers", "following_url": "https://api.github.com/users/ezyang/following{/other_user}", "gists_url": "https://api.github.com/users/ezyang/gists{/gist_id}", "starred_url": "https://api.github.com/users/ezyang/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ezyang/subscriptions", "organizations_url": "https://api.github.com/users/ezyang/orgs", "repos_url": "https://api.github.com/users/ezyang/repos", "events_url": "https://api.github.com/users/ezyang/events{/privacy}", "received_events_url": "https://api.github.com/users/ezyang/received_events", "type": "User", "site_admin": false}, "body": "This comment is not requesting a code change, it's just a \"for your information.\"\r\n\r\nBecause this is a constructor, you could have avoided the need for `set_pImpl` by simply calling the correct constructor on `storage` at the very beginning. Obviously the `StorageImpl` to allocate in this case is somewhat complex, so you'd add a helper function to actually compute and return it.", "created_at": "2018-08-02T14:53:43Z", "updated_at": "2018-11-23T15:48:37Z", "html_url": "https://github.com/pytorch/pytorch/pull/10074#discussion_r207257871", "pull_request_url": "https://api.github.com/repos/pytorch/pytorch/pulls/10074", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/207257871"}, "html": {"href": "https://github.com/pytorch/pytorch/pull/10074#discussion_r207257871"}, "pull_request": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/10074"}}, "body_html": "<p>This comment is not requesting a code change, it's just a \"for your information.\"</p>\n<p>Because this is a constructor, you could have avoided the need for <code>set_pImpl</code> by simply calling the correct constructor on <code>storage</code> at the very beginning. Obviously the <code>StorageImpl</code> to allocate in this case is somewhat complex, so you'd add a helper function to actually compute and return it.</p>", "body_text": "This comment is not requesting a code change, it's just a \"for your information.\"\nBecause this is a constructor, you could have avoided the need for set_pImpl by simply calling the correct constructor on storage at the very beginning. Obviously the StorageImpl to allocate in this case is somewhat complex, so you'd add a helper function to actually compute and return it."}