{"url": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/206911076", "pull_request_review_id": 142415899, "id": 206911076, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwNjkxMTA3Ng==", "diff_hunk": "@@ -74,42 +70,72 @@ struct AT_API StorageImpl : public Retainable {\n \n   template <typename T>\n   inline T* unsafe_data() const {\n-    return static_cast<T*>(this->data_ptr.get());\n+    return static_cast<T*>(this->data_ptr_.get());\n   }\n \n   void release_resources() {\n-    if (finalizer) {\n-      (*finalizer)();\n+    if (finalizer_) {\n+      (*finalizer_)();\n     }\n-    finalizer = nullptr;\n-    data_ptr.clear();\n+    finalizer_ = nullptr;\n+    data_ptr_.clear();\n   }\n \n   void operator=(const StorageImpl&) = delete;\n \n   virtual size_t elementSize() const {\n-    return at::elementSize(scalar_type);\n+    return at::elementSize(scalar_type_);\n   }\n \n   Type& type();\n \n-  //TODO: Rename to size() and size to size_\n-  size_t get_size() const { \n-    return size;\n+  // TODO: Rename to size() and size to size_\n+  ptrdiff_t size() const {\n+    return size_;\n+  };\n+  void set_size(ptrdiff_t size) {\n+    size_ = size;\n+  };\n+  bool resizable() const {\n+    return resizable_;\n+  };\n+  at::DataPtr& data_ptr() {\n+    return data_ptr_;\n+  };\n+  void set_data_ptr(at::DataPtr&& data_ptr) {\n+    data_ptr_ = std::move(data_ptr);\n   };\n   void* data() {\n-    return data_ptr.get();\n+    return data_ptr_.get();\n   };\n   const void* data() const {\n-    return data_ptr.get();\n+    return data_ptr_.get();\n+  };\n+  at::Allocator* allocator() {\n+    return allocator_;\n+  };\n+  at::ScalarType& scalar_type() {\n+    return scalar_type_;\n+  };\n+  const at::Allocator* allocator() const {\n+    return allocator_;\n   };\n-\n   int getDevice() const {\n-    return data_ptr.device().index();\n+    return data_ptr_.device().index();\n   }\n-  void set_resizable(bool resizable_) {\n-    resizable = resizable_;\n+  void set_resizable(bool resizable) {\n+    resizable_ = resizable;\n   }\n+\n+ private:\n+  at::ScalarType scalar_type_;\n+  at::DataPtr data_ptr_;\n+  ptrdiff_t size_;\n+  bool resizable_;\n+\n+ public:\n+  at::Allocator* allocator_;", "path": "aten/src/ATen/StorageImpl.h", "position": 121, "original_position": 121, "commit_id": "fde356244d98e4a10a1fd50a67429658b9eae788", "original_commit_id": "b782a3009559da19e0d8f11f6316f48d8f839b36", "user": {"login": "cpuhrsch", "id": 1716488, "node_id": "MDQ6VXNlcjE3MTY0ODg=", "avatar_url": "https://avatars1.githubusercontent.com/u/1716488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cpuhrsch", "html_url": "https://github.com/cpuhrsch", "followers_url": "https://api.github.com/users/cpuhrsch/followers", "following_url": "https://api.github.com/users/cpuhrsch/following{/other_user}", "gists_url": "https://api.github.com/users/cpuhrsch/gists{/gist_id}", "starred_url": "https://api.github.com/users/cpuhrsch/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cpuhrsch/subscriptions", "organizations_url": "https://api.github.com/users/cpuhrsch/orgs", "repos_url": "https://api.github.com/users/cpuhrsch/repos", "events_url": "https://api.github.com/users/cpuhrsch/events{/privacy}", "received_events_url": "https://api.github.com/users/cpuhrsch/received_events", "type": "User", "site_admin": false}, "body": "Yes, in an upcoming PR to keep this one small.", "created_at": "2018-08-01T14:50:50Z", "updated_at": "2018-11-23T15:48:32Z", "html_url": "https://github.com/pytorch/pytorch/pull/10074#discussion_r206911076", "pull_request_url": "https://api.github.com/repos/pytorch/pytorch/pulls/10074", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/206911076"}, "html": {"href": "https://github.com/pytorch/pytorch/pull/10074#discussion_r206911076"}, "pull_request": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/10074"}}, "body_html": "<p>Yes, in an upcoming PR to keep this one small.</p>", "body_text": "Yes, in an upcoming PR to keep this one small.", "in_reply_to_id": 206885176}