{"url": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/155941312", "pull_request_review_id": 82344231, "id": 155941312, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE1NTk0MTMxMg==", "diff_hunk": "@@ -355,6 +355,50 @@ def lookup_pred(pred, xs):\n         \"\"\"Return the index of the first element of xs matching pred.\"\"\"\n         return next((i, x) for i, x in enumerate(xs) if pred(x))\n \n+    def is_nn_fwd(defn_name, declarations_by_name):", "path": "tools/autograd/gen_variable_type.py", "position": null, "original_position": 13, "commit_id": "f806cacd7c92d2f8205a73bfdaad3ddfa93d79f4", "original_commit_id": "a017bdd9b28f6d350f16eab7c4f7a860c10b337c", "user": {"login": "lantiga", "id": 191033, "node_id": "MDQ6VXNlcjE5MTAzMw==", "avatar_url": "https://avatars2.githubusercontent.com/u/191033?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lantiga", "html_url": "https://github.com/lantiga", "followers_url": "https://api.github.com/users/lantiga/followers", "following_url": "https://api.github.com/users/lantiga/following{/other_user}", "gists_url": "https://api.github.com/users/lantiga/gists{/gist_id}", "starred_url": "https://api.github.com/users/lantiga/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lantiga/subscriptions", "organizations_url": "https://api.github.com/users/lantiga/orgs", "repos_url": "https://api.github.com/users/lantiga/repos", "events_url": "https://api.github.com/users/lantiga/events{/privacy}", "received_events_url": "https://api.github.com/users/lantiga/received_events", "type": "User", "site_admin": false}, "body": "Yes, they are declared, but the declarations are generated by `parse_nn.py` and there\u2019s currently no way of telling that `nll_loss` dispatches `nll_loss_forward`, there's no explicit link between them except their name.\r\nWe could get rid of `is_nn_fwd` and `preprocess_nn_function` by introducing a `dispatch` property in `Declarations.yaml` and instructing `parse_nn` to generate it. What do you think?\r\n\r\nAs for buffers, we know they are there in the generator, but I agree it\u2019s ugly that they pop out of nowhere in backwards. Maybe there\u2019s another option to annotate `derivatives.yaml`: do it after the function signature, something like:\r\n```\r\n- name: nll_loss(...args...) buffers=[foo, bar]\r\n```\r\nor\r\n```\r\n- name: nll_loss(...args...) [foo, bar]\r\n```\r\nThe alternative is have a reserved key for buffers, or refactor the schema in `derivatives.yaml` to cleanly allow keys for annotating signatures.", "created_at": "2017-12-10T08:36:05Z", "updated_at": "2018-11-23T15:37:14Z", "html_url": "https://github.com/pytorch/pytorch/pull/4096#discussion_r155941312", "pull_request_url": "https://api.github.com/repos/pytorch/pytorch/pulls/4096", "author_association": "COLLABORATOR", "_links": {"self": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/155941312"}, "html": {"href": "https://github.com/pytorch/pytorch/pull/4096#discussion_r155941312"}, "pull_request": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/4096"}}, "body_html": "<p>Yes, they are declared, but the declarations are generated by <code>parse_nn.py</code> and there\u2019s currently no way of telling that <code>nll_loss</code> dispatches <code>nll_loss_forward</code>, there's no explicit link between them except their name.<br>\nWe could get rid of <code>is_nn_fwd</code> and <code>preprocess_nn_function</code> by introducing a <code>dispatch</code> property in <code>Declarations.yaml</code> and instructing <code>parse_nn</code> to generate it. What do you think?</p>\n<p>As for buffers, we know they are there in the generator, but I agree it\u2019s ugly that they pop out of nowhere in backwards. Maybe there\u2019s another option to annotate <code>derivatives.yaml</code>: do it after the function signature, something like:</p>\n<pre><code>- name: nll_loss(...args...) buffers=[foo, bar]\n</code></pre>\n<p>or</p>\n<pre><code>- name: nll_loss(...args...) [foo, bar]\n</code></pre>\n<p>The alternative is have a reserved key for buffers, or refactor the schema in <code>derivatives.yaml</code> to cleanly allow keys for annotating signatures.</p>", "body_text": "Yes, they are declared, but the declarations are generated by parse_nn.py and there\u2019s currently no way of telling that nll_loss dispatches nll_loss_forward, there's no explicit link between them except their name.\nWe could get rid of is_nn_fwd and preprocess_nn_function by introducing a dispatch property in Declarations.yaml and instructing parse_nn to generate it. What do you think?\nAs for buffers, we know they are there in the generator, but I agree it\u2019s ugly that they pop out of nowhere in backwards. Maybe there\u2019s another option to annotate derivatives.yaml: do it after the function signature, something like:\n- name: nll_loss(...args...) buffers=[foo, bar]\n\nor\n- name: nll_loss(...args...) [foo, bar]\n\nThe alternative is have a reserved key for buffers, or refactor the schema in derivatives.yaml to cleanly allow keys for annotating signatures.", "in_reply_to_id": 155932189}