{"url": "https://api.github.com/repos/pytorch/pytorch/issues/4096", "repository_url": "https://api.github.com/repos/pytorch/pytorch", "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/4096/labels{/name}", "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/4096/comments", "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/4096/events", "html_url": "https://github.com/pytorch/pytorch/pull/4096", "id": 280661552, "node_id": "MDExOlB1bGxSZXF1ZXN0MTU3MzY0OTI0", "number": 4096, "title": "Refactor generation of NN derivatives", "user": {"login": "lantiga", "id": 191033, "node_id": "MDQ6VXNlcjE5MTAzMw==", "avatar_url": "https://avatars2.githubusercontent.com/u/191033?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lantiga", "html_url": "https://github.com/lantiga", "followers_url": "https://api.github.com/users/lantiga/followers", "following_url": "https://api.github.com/users/lantiga/following{/other_user}", "gists_url": "https://api.github.com/users/lantiga/gists{/gist_id}", "starred_url": "https://api.github.com/users/lantiga/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lantiga/subscriptions", "organizations_url": "https://api.github.com/users/lantiga/orgs", "repos_url": "https://api.github.com/users/lantiga/repos", "events_url": "https://api.github.com/users/lantiga/events{/privacy}", "received_events_url": "https://api.github.com/users/lantiga/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 7, "created_at": "2017-12-09T01:11:36Z", "updated_at": "2018-11-23T15:37:15Z", "closed_at": "2017-12-13T22:25:10Z", "author_association": "COLLABORATOR", "pull_request": {"url": "https://api.github.com/repos/pytorch/pytorch/pulls/4096", "html_url": "https://github.com/pytorch/pytorch/pull/4096", "diff_url": "https://github.com/pytorch/pytorch/pull/4096.diff", "patch_url": "https://github.com/pytorch/pytorch/pull/4096.patch"}, "body_html": "<p>This PR addresses <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load issue title\" data-id=\"276752103\" data-permission-text=\"Issue title is private\" data-url=\"https://github.com/pytorch/pytorch/issues/3874\" data-hovercard-type=\"issue\" data-hovercard-url=\"/pytorch/pytorch/issues/3874/hovercard\" href=\"https://github.com/pytorch/pytorch/issues/3874\">#3874</a> (also, /cc <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load issue title\" data-id=\"280293857\" data-permission-text=\"Issue title is private\" data-url=\"https://github.com/pytorch/pytorch/issues/4081\" data-hovercard-type=\"issue\" data-hovercard-url=\"/pytorch/pytorch/issues/4081/hovercard\" href=\"https://github.com/pytorch/pytorch/issues/4081\">#4081</a>).</p>\n<p>Derivatives for NN functions now have to be specified in <a href=\"https://github.com/pytorch/pytorch/blob/master/tools/autograd/derivatives.yaml\">https://github.com/pytorch/pytorch/blob/master/tools/autograd/derivatives.yaml</a>. Leaving a function out will result in that function not being available in autograd.</p>\n<p>Note that <code>_backward</code> declarations used in <code>derivatives.yaml</code> are auto-generated by <a href=\"https://github.com/pytorch/pytorch/blob/master/aten/src/ATen/nn_parse.py\">https://github.com/pytorch/pytorch/blob/master/aten/src/ATen/nn_parse.py</a><br>\nso the content of <a href=\"https://github.com/pytorch/pytorch/blob/master/tools/autograd/derivatives.yaml\">https://github.com/pytorch/pytorch/blob/master/tools/autograd/derivatives.yaml</a> has to reflect the generated declarations.<br>\nThis is an inconvenience, although it's smaller than it looks: future kernels will be implemented directly as ATen native functions.</p>\n<p>As a help to the user, we could eventually save declarations generated in <code>nn_parse.py</code> to a file.</p>", "body_text": "This PR addresses #3874 (also, /cc #4081).\nDerivatives for NN functions now have to be specified in https://github.com/pytorch/pytorch/blob/master/tools/autograd/derivatives.yaml. Leaving a function out will result in that function not being available in autograd.\nNote that _backward declarations used in derivatives.yaml are auto-generated by https://github.com/pytorch/pytorch/blob/master/aten/src/ATen/nn_parse.py\nso the content of https://github.com/pytorch/pytorch/blob/master/tools/autograd/derivatives.yaml has to reflect the generated declarations.\nThis is an inconvenience, although it's smaller than it looks: future kernels will be implemented directly as ATen native functions.\nAs a help to the user, we could eventually save declarations generated in nn_parse.py to a file.", "body": "This PR addresses #3874 (also, /cc #4081).\r\n\r\nDerivatives for NN functions now have to be specified in https://github.com/pytorch/pytorch/blob/master/tools/autograd/derivatives.yaml. Leaving a function out will result in that function not being available in autograd.\r\n\r\nNote that `_backward` declarations used in `derivatives.yaml` are auto-generated by https://github.com/pytorch/pytorch/blob/master/aten/src/ATen/nn_parse.py\r\nso the content of https://github.com/pytorch/pytorch/blob/master/tools/autograd/derivatives.yaml has to reflect the generated declarations.\r\nThis is an inconvenience, although it's smaller than it looks: future kernels will be implemented directly as ATen native functions.\r\n\r\nAs a help to the user, we could eventually save declarations generated in `nn_parse.py` to a file."}