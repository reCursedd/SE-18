{"url": "https://api.github.com/repos/pytorch/pytorch/issues/comments/363245536", "html_url": "https://github.com/pytorch/pytorch/issues/5062#issuecomment-363245536", "issue_url": "https://api.github.com/repos/pytorch/pytorch/issues/5062", "id": 363245536, "node_id": "MDEyOklzc3VlQ29tbWVudDM2MzI0NTUzNg==", "user": {"login": "christinaheinze", "id": 10484979, "node_id": "MDQ6VXNlcjEwNDg0OTc5", "avatar_url": "https://avatars1.githubusercontent.com/u/10484979?v=4", "gravatar_id": "", "url": "https://api.github.com/users/christinaheinze", "html_url": "https://github.com/christinaheinze", "followers_url": "https://api.github.com/users/christinaheinze/followers", "following_url": "https://api.github.com/users/christinaheinze/following{/other_user}", "gists_url": "https://api.github.com/users/christinaheinze/gists{/gist_id}", "starred_url": "https://api.github.com/users/christinaheinze/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/christinaheinze/subscriptions", "organizations_url": "https://api.github.com/users/christinaheinze/orgs", "repos_url": "https://api.github.com/users/christinaheinze/repos", "events_url": "https://api.github.com/users/christinaheinze/events{/privacy}", "received_events_url": "https://api.github.com/users/christinaheinze/received_events", "type": "User", "site_admin": false}, "created_at": "2018-02-05T22:38:16Z", "updated_at": "2018-02-05T22:38:16Z", "author_association": "NONE", "body_html": "<p>On master the issue has been solved for the categorial distribution but not for the multinomial distribution as it seems:</p>\n<pre><code>import torch.distributions as dis\nimport torch\nimport numpy as np\n\nG = 3\nD = 2\np_dG = torch.Tensor(G, D)\np_dG[:, 0] = torch.Tensor([0.1, 0.8, 0.1])\np_dG[:, 1] = torch.Tensor([0.1, 0.8, 0.1])\n\np_dg = p_dG[:, 0]\nz = p_dg.multinomial(250, replacement=True)\ntrue_z_np = z.numpy()\nv, c = np.unique(true_z_np, return_counts=True)\nprint(v)\nprint(c)\n</code></pre>\n<p>and also</p>\n<pre><code>z = torch.multinomial(p_dg, 250, replacement=True)\ntrue_z_np = z.numpy()\nv, c = np.unique(true_z_np, return_counts=True)\nprint(v)\nprint(c)\n</code></pre>", "body_text": "On master the issue has been solved for the categorial distribution but not for the multinomial distribution as it seems:\nimport torch.distributions as dis\nimport torch\nimport numpy as np\n\nG = 3\nD = 2\np_dG = torch.Tensor(G, D)\np_dG[:, 0] = torch.Tensor([0.1, 0.8, 0.1])\np_dG[:, 1] = torch.Tensor([0.1, 0.8, 0.1])\n\np_dg = p_dG[:, 0]\nz = p_dg.multinomial(250, replacement=True)\ntrue_z_np = z.numpy()\nv, c = np.unique(true_z_np, return_counts=True)\nprint(v)\nprint(c)\n\nand also\nz = torch.multinomial(p_dg, 250, replacement=True)\ntrue_z_np = z.numpy()\nv, c = np.unique(true_z_np, return_counts=True)\nprint(v)\nprint(c)", "body": "On master the issue has been solved for the categorial distribution but not for the multinomial distribution as it seems: \r\n\r\n```\r\nimport torch.distributions as dis\r\nimport torch\r\nimport numpy as np\r\n\r\nG = 3\r\nD = 2\r\np_dG = torch.Tensor(G, D)\r\np_dG[:, 0] = torch.Tensor([0.1, 0.8, 0.1])\r\np_dG[:, 1] = torch.Tensor([0.1, 0.8, 0.1])\r\n\r\np_dg = p_dG[:, 0]\r\nz = p_dg.multinomial(250, replacement=True)\r\ntrue_z_np = z.numpy()\r\nv, c = np.unique(true_z_np, return_counts=True)\r\nprint(v)\r\nprint(c)\r\n```\r\nand also\r\n```\r\nz = torch.multinomial(p_dg, 250, replacement=True)\r\ntrue_z_np = z.numpy()\r\nv, c = np.unique(true_z_np, return_counts=True)\r\nprint(v)\r\nprint(c)\r\n```\r\n"}