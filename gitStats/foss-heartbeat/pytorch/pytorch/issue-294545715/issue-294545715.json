{"url": "https://api.github.com/repos/pytorch/pytorch/issues/5062", "repository_url": "https://api.github.com/repos/pytorch/pytorch", "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/5062/labels{/name}", "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/5062/comments", "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/5062/events", "html_url": "https://github.com/pytorch/pytorch/issues/5062", "id": 294545715, "node_id": "MDU6SXNzdWUyOTQ1NDU3MTU=", "number": 5062, "title": "Potential bug when sampling from categorical distribution", "user": {"login": "christinaheinze", "id": 10484979, "node_id": "MDQ6VXNlcjEwNDg0OTc5", "avatar_url": "https://avatars1.githubusercontent.com/u/10484979?v=4", "gravatar_id": "", "url": "https://api.github.com/users/christinaheinze", "html_url": "https://github.com/christinaheinze", "followers_url": "https://api.github.com/users/christinaheinze/followers", "following_url": "https://api.github.com/users/christinaheinze/following{/other_user}", "gists_url": "https://api.github.com/users/christinaheinze/gists{/gist_id}", "starred_url": "https://api.github.com/users/christinaheinze/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/christinaheinze/subscriptions", "organizations_url": "https://api.github.com/users/christinaheinze/orgs", "repos_url": "https://api.github.com/users/christinaheinze/repos", "events_url": "https://api.github.com/users/christinaheinze/events{/privacy}", "received_events_url": "https://api.github.com/users/christinaheinze/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 424131847, "node_id": "MDU6TGFiZWw0MjQxMzE4NDc=", "url": "https://api.github.com/repos/pytorch/pytorch/labels/bug", "name": "bug", "color": "b60205", "default": true}, {"id": 443484135, "node_id": "MDU6TGFiZWw0NDM0ODQxMzU=", "url": "https://api.github.com/repos/pytorch/pytorch/labels/high%20priority", "name": "high priority", "color": "F22613", "default": false}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 12, "created_at": "2018-02-05T21:19:18Z", "updated_at": "2018-02-07T03:11:44Z", "closed_at": "2018-02-07T03:11:44Z", "author_association": "NONE", "body_html": "<p>Hi,</p>\n<p>I would like to sample from a categorical distribution where the probabilities passed are the columns of a tensor p_dG:</p>\n<pre><code>G = 3\nD = 2\np_dG = torch.Tensor(G, D)\np_dG[:, 0] = torch.Tensor([0.1, 0.8, 0.1])\np_dG[:, 1] = torch.Tensor([0.1, 0.8, 0.1])\n\nz_list = []\np_dg = p_dG[:, 0]\nprint(p_dg)\ndis_Z = dis.Categorical(p_dg)\nfor _ in range(250):\n    z = dis_Z.sample()\n    z_list.append(z)\n\nz = torch.cat(z_list, dim=0)\n\ntrue_z_np = z.numpy()\nv, c = np.unique(true_z_np, return_counts=True)\nprint(v)\nprint(c)\n</code></pre>\n<p>The output from <code>print(c)</code> is <code>[ 29  25 196]</code>. So the distribution is completely off since the bulk of the observations should be equal to 1 (instead of being equal to 2).</p>\n<p>In contrast, the following code works as expected:</p>\n<pre><code>z_list = []\ndis_Z = dis.Categorical(torch.Tensor([0.1, 0.8, 0.1]))\nfor _ in range(250):\n    z = dis_Z.sample()\n    z_list.append(z)\n\nz = torch.cat(z_list, dim=0)\ntrue_z_np = z.numpy()\nv, c = np.unique(true_z_np, return_counts=True)\nprint(v)\nprint(c)\n</code></pre>\n<p>Is this a bug or am I missing something?</p>\n<p>I am using:</p>\n<ul>\n<li>OS: macOS High Sierra</li>\n<li>PyTorch version: 0.3.0</li>\n<li>How you installed PyTorch (conda, pip, source): conda</li>\n<li>Python version: Python 3.6.3 |Anaconda custom (64-bit)| (default, Oct  6 2017, 12:04:38)</li>\n<li>CUDA/cuDNN version: --</li>\n<li>GPU models and configuration: --</li>\n<li>GCC version (if compiling from source): --</li>\n</ul>\n<p>Thanks!</p>", "body_text": "Hi,\nI would like to sample from a categorical distribution where the probabilities passed are the columns of a tensor p_dG:\nG = 3\nD = 2\np_dG = torch.Tensor(G, D)\np_dG[:, 0] = torch.Tensor([0.1, 0.8, 0.1])\np_dG[:, 1] = torch.Tensor([0.1, 0.8, 0.1])\n\nz_list = []\np_dg = p_dG[:, 0]\nprint(p_dg)\ndis_Z = dis.Categorical(p_dg)\nfor _ in range(250):\n    z = dis_Z.sample()\n    z_list.append(z)\n\nz = torch.cat(z_list, dim=0)\n\ntrue_z_np = z.numpy()\nv, c = np.unique(true_z_np, return_counts=True)\nprint(v)\nprint(c)\n\nThe output from print(c) is [ 29  25 196]. So the distribution is completely off since the bulk of the observations should be equal to 1 (instead of being equal to 2).\nIn contrast, the following code works as expected:\nz_list = []\ndis_Z = dis.Categorical(torch.Tensor([0.1, 0.8, 0.1]))\nfor _ in range(250):\n    z = dis_Z.sample()\n    z_list.append(z)\n\nz = torch.cat(z_list, dim=0)\ntrue_z_np = z.numpy()\nv, c = np.unique(true_z_np, return_counts=True)\nprint(v)\nprint(c)\n\nIs this a bug or am I missing something?\nI am using:\n\nOS: macOS High Sierra\nPyTorch version: 0.3.0\nHow you installed PyTorch (conda, pip, source): conda\nPython version: Python 3.6.3 |Anaconda custom (64-bit)| (default, Oct  6 2017, 12:04:38)\nCUDA/cuDNN version: --\nGPU models and configuration: --\nGCC version (if compiling from source): --\n\nThanks!", "body": "Hi,\r\n\r\nI would like to sample from a categorical distribution where the probabilities passed are the columns of a tensor p_dG:\r\n\r\n```\r\nG = 3\r\nD = 2\r\np_dG = torch.Tensor(G, D)\r\np_dG[:, 0] = torch.Tensor([0.1, 0.8, 0.1])\r\np_dG[:, 1] = torch.Tensor([0.1, 0.8, 0.1])\r\n\r\nz_list = []\r\np_dg = p_dG[:, 0]\r\nprint(p_dg)\r\ndis_Z = dis.Categorical(p_dg)\r\nfor _ in range(250):\r\n    z = dis_Z.sample()\r\n    z_list.append(z)\r\n\r\nz = torch.cat(z_list, dim=0)\r\n\r\ntrue_z_np = z.numpy()\r\nv, c = np.unique(true_z_np, return_counts=True)\r\nprint(v)\r\nprint(c)\r\n```\r\n\r\nThe output from `print(c)` is `[ 29  25 196]`. So the distribution is completely off since the bulk of the observations should be equal to 1 (instead of being equal to 2).\r\n\r\nIn contrast, the following code works as expected:\r\n```\r\nz_list = []\r\ndis_Z = dis.Categorical(torch.Tensor([0.1, 0.8, 0.1]))\r\nfor _ in range(250):\r\n    z = dis_Z.sample()\r\n    z_list.append(z)\r\n\r\nz = torch.cat(z_list, dim=0)\r\ntrue_z_np = z.numpy()\r\nv, c = np.unique(true_z_np, return_counts=True)\r\nprint(v)\r\nprint(c)\r\n```\r\n\r\nIs this a bug or am I missing something?\r\n\r\nI am using:\r\n- OS: macOS High Sierra\r\n- PyTorch version: 0.3.0\r\n- How you installed PyTorch (conda, pip, source): conda\r\n- Python version: Python 3.6.3 |Anaconda custom (64-bit)| (default, Oct  6 2017, 12:04:38) \r\n- CUDA/cuDNN version: --\r\n- GPU models and configuration: --\r\n- GCC version (if compiling from source): --\r\n\r\nThanks!\r\n"}