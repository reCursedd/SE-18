{"url": "https://api.github.com/repos/pytorch/pytorch/issues/comments/320673920", "html_url": "https://github.com/pytorch/pytorch/issues/2316#issuecomment-320673920", "issue_url": "https://api.github.com/repos/pytorch/pytorch/issues/2316", "id": 320673920, "node_id": "MDEyOklzc3VlQ29tbWVudDMyMDY3MzkyMA==", "user": {"login": "killeent", "id": 4529377, "node_id": "MDQ6VXNlcjQ1MjkzNzc=", "avatar_url": "https://avatars1.githubusercontent.com/u/4529377?v=4", "gravatar_id": "", "url": "https://api.github.com/users/killeent", "html_url": "https://github.com/killeent", "followers_url": "https://api.github.com/users/killeent/followers", "following_url": "https://api.github.com/users/killeent/following{/other_user}", "gists_url": "https://api.github.com/users/killeent/gists{/gist_id}", "starred_url": "https://api.github.com/users/killeent/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/killeent/subscriptions", "organizations_url": "https://api.github.com/users/killeent/orgs", "repos_url": "https://api.github.com/users/killeent/repos", "events_url": "https://api.github.com/users/killeent/events{/privacy}", "received_events_url": "https://api.github.com/users/killeent/received_events", "type": "User", "site_admin": false}, "created_at": "2017-08-07T14:09:20Z", "updated_at": "2017-08-07T14:09:20Z", "author_association": "CONTRIBUTOR", "body_html": "<p><a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=1930625\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/snowyday\">@snowyday</a> by definition, advanced indexing requires a sequence, so the behavior without sequences in PyTorch is unchanged. The currently supported way of doing what you want is:</p>\n<pre><code>x = torch.Tensor(5)\nx[torch.LongTensor([0, 3])]\n</code></pre>", "body_text": "@snowyday by definition, advanced indexing requires a sequence, so the behavior without sequences in PyTorch is unchanged. The currently supported way of doing what you want is:\nx = torch.Tensor(5)\nx[torch.LongTensor([0, 3])]", "body": "@snowyday by definition, advanced indexing requires a sequence, so the behavior without sequences in PyTorch is unchanged. The currently supported way of doing what you want is:\r\n\r\n```\r\nx = torch.Tensor(5)\r\nx[torch.LongTensor([0, 3])]\r\n```"}