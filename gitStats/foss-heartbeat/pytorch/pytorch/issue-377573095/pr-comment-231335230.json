{"url": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/231335230", "pull_request_review_id": 172280713, "id": 231335230, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIzMTMzNTIzMA==", "diff_hunk": "@@ -58,19 +58,24 @@ Tensor flip_cpu(const Tensor& self, IntList dims) {\n }\n \n Tensor roll_cpu(const Tensor& self, IntList shifts, IntList dims) {\n-  // todo: support rolling along no or multiple dimensions as in numpy.roll.\n-  AT_CHECK(dims.size() == 1, \"only single dimension roll currently supported\");\n+  if (dims.size() == 0 && shifts.size() == 1) {\n+    auto flattened = self.contiguous().view(self.numel());\n+    return roll_cpu(flattened, shifts[0], 0).view(self.sizes());\n+  }\n   AT_CHECK(shifts.size() == dims.size(), \"shifts and dimensions must align\");\n+  // todo: support rolling along multiple dimensions as in numpy.roll.\n+  AT_CHECK(dims.size() == 1, \"only single dimension roll currently supported\");\n   // avoid a div zero error below.\n-  if( self.numel() == 0 ) {\n+  if (self.numel() == 0) {\n     return self.clone();\n   }\n   int64_t dim = dims[0];\n   int64_t size = self.size(dim);\n   int64_t start = (size - shifts[0]) % size;\n   // Behavior of % is different in C++ vs Python for negative numbers. This\n   // corrects the difference.\n-  if( start < 0 ) start = start + size;\n+  if (start < 0)", "path": "aten/src/ATen/native/TensorTransformations.cpp", "position": null, "original_position": 24, "commit_id": "bbd9ef28058d2874163feb8ae54dd769565e4cf8", "original_commit_id": "9c205462bcfceaec9227bffaab3827214f8738f9", "user": {"login": "gchanan", "id": 3768583, "node_id": "MDQ6VXNlcjM3Njg1ODM=", "avatar_url": "https://avatars2.githubusercontent.com/u/3768583?v=4", "gravatar_id": "", "url": "https://api.github.com/users/gchanan", "html_url": "https://github.com/gchanan", "followers_url": "https://api.github.com/users/gchanan/followers", "following_url": "https://api.github.com/users/gchanan/following{/other_user}", "gists_url": "https://api.github.com/users/gchanan/gists{/gist_id}", "starred_url": "https://api.github.com/users/gchanan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/gchanan/subscriptions", "organizations_url": "https://api.github.com/users/gchanan/orgs", "repos_url": "https://api.github.com/users/gchanan/repos", "events_url": "https://api.github.com/users/gchanan/events{/privacy}", "received_events_url": "https://api.github.com/users/gchanan/received_events", "type": "User", "site_admin": false}, "body": "if you do this can you surround it with {} -- too easy to add something and forget.", "created_at": "2018-11-06T23:40:08Z", "updated_at": "2018-11-23T15:54:25Z", "html_url": "https://github.com/pytorch/pytorch/pull/13588#discussion_r231335230", "pull_request_url": "https://api.github.com/repos/pytorch/pytorch/pulls/13588", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/231335230"}, "html": {"href": "https://github.com/pytorch/pytorch/pull/13588#discussion_r231335230"}, "pull_request": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/13588"}}, "body_html": "<p>if you do this can you surround it with {} -- too easy to add something and forget.</p>", "body_text": "if you do this can you surround it with {} -- too easy to add something and forget."}