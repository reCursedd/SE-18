{"url": "https://api.github.com/repos/pytorch/pytorch/issues/7278", "repository_url": "https://api.github.com/repos/pytorch/pytorch", "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/7278/labels{/name}", "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/7278/comments", "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/7278/events", "html_url": "https://github.com/pytorch/pytorch/issues/7278", "id": 320192756, "node_id": "MDU6SXNzdWUzMjAxOTI3NTY=", "number": 7278, "title": "Python segfaults if torch.tensor is called with pandas series slice", "user": {"login": "sharpsy", "id": 7761488, "node_id": "MDQ6VXNlcjc3NjE0ODg=", "avatar_url": "https://avatars2.githubusercontent.com/u/7761488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sharpsy", "html_url": "https://github.com/sharpsy", "followers_url": "https://api.github.com/users/sharpsy/followers", "following_url": "https://api.github.com/users/sharpsy/following{/other_user}", "gists_url": "https://api.github.com/users/sharpsy/gists{/gist_id}", "starred_url": "https://api.github.com/users/sharpsy/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sharpsy/subscriptions", "organizations_url": "https://api.github.com/users/sharpsy/orgs", "repos_url": "https://api.github.com/users/sharpsy/repos", "events_url": "https://api.github.com/users/sharpsy/events{/privacy}", "received_events_url": "https://api.github.com/users/sharpsy/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 443484050, "node_id": "MDU6TGFiZWw0NDM0ODQwNTA=", "url": "https://api.github.com/repos/pytorch/pytorch/labels/medium%20priority", "name": "medium priority", "color": "fbca04", "default": false}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2018-05-04T08:34:56Z", "updated_at": "2018-05-18T17:14:43Z", "closed_at": "2018-05-18T17:14:43Z", "author_association": "NONE", "body_html": "<h2>Issue description</h2>\n<p>Python segfaults if torch.tensor is created from the pandas series slice.</p>\n<h2>Code example</h2>\n<pre><code>import torch\nimport pandas as pd\n\nseq = pd.Series([0.1, 0.2, 0.3])\nprint(seq)\n# outputs:\n#0  0.1\n#1  0.2\n#2  0.3\n#dtype: float64\n\nprint(torch.tensor(seq))  # OK\n# outputs:\n#tensor([ 0.1000,  0.2000,  0.3000])\n\ntorch.tensor(seq[1:])  # SEGFAULT\n</code></pre>\n<h2>System Info</h2>\n<pre><code>PyTorch version: 0.4.0\nIs debug build: No\nCUDA used to build PyTorch: None\n\nOS: Ubuntu 16.04.3 LTS\nGCC version: (Ubuntu 5.4.0-6ubuntu1~16.04.9) 5.4.0 20160609\nCMake version: Could not collect\n\nPython version: 3.5\nIs CUDA available: No\nCUDA runtime version: No CUDA\nGPU models and configuration: No CUDA\nNvidia driver version: No CUDA\ncuDNN version: No CUDA\n\nVersions of relevant libraries:\n[pip3] numpy (1.14.0)\n[pip3] torch (0.4.0)\n[pip3] torchvision (0.2.1)\n[conda] Could not collect\n</code></pre>\n<h2>GDB</h2>\n<p>I can also crash it from the GDB and this is the resulting stacktrace:</p>\n<pre><code>#0  0x00000000005bee30 in PySequence_Check ()\n#1  0x00007fffe88dbcc4 in torch::utils::compute_sizes (seq=0x0)\n    at torch/csrc/utils/tensor_new.cpp:90\n#2  torch::utils::internal_new_from_data (type=..., device=device@entry=-1, \n    data=data@entry=0x7fffe9f1d6d8, copy_variables=copy_variables@entry=true, \n    copy_numpy=copy_numpy@entry=true, type_inference=true)\n    at torch/csrc/utils/tensor_new.cpp:197\n#3  0x00007fffe88dd4cd in torch::utils::tensor_ctor (type=..., \n    args=args@entry=0x7ffff7e85be0, kwargs=kwargs@entry=0x0)\n    at torch/csrc/utils/tensor_new.cpp:433\n#4  0x00007fffe8ce66f8 in torch::autograd::THPVariable_tensor (\n    self=&lt;optimized out&gt;, args=0x7ffff7e85be0, kwargs=0x0)\n    at torch/csrc/autograd/generated/python_torch_functions.cpp:119\n#5  0x00000000004e9ba7 in PyCFunction_Call ()\n#6  0x00000000005372f4 in PyEval_EvalFrameEx ()\n#7  0x0000000000540199 in ?? ()\n#8  0x0000000000540e4f in PyEval_EvalCode ()\n#9  0x000000000060c272 in ?? ()\n#10 0x000000000046b89f in PyRun_InteractiveOneObject ()\n#11 0x000000000046ba48 in PyRun_InteractiveLoopFlags ()\n#12 0x000000000046cfa0 in ?? ()\n#13 0x00000000004cf2bd in ?? ()\n#14 0x00000000004cfeb1 in main ()\n</code></pre>", "body_text": "Issue description\nPython segfaults if torch.tensor is created from the pandas series slice.\nCode example\nimport torch\nimport pandas as pd\n\nseq = pd.Series([0.1, 0.2, 0.3])\nprint(seq)\n# outputs:\n#0  0.1\n#1  0.2\n#2  0.3\n#dtype: float64\n\nprint(torch.tensor(seq))  # OK\n# outputs:\n#tensor([ 0.1000,  0.2000,  0.3000])\n\ntorch.tensor(seq[1:])  # SEGFAULT\n\nSystem Info\nPyTorch version: 0.4.0\nIs debug build: No\nCUDA used to build PyTorch: None\n\nOS: Ubuntu 16.04.3 LTS\nGCC version: (Ubuntu 5.4.0-6ubuntu1~16.04.9) 5.4.0 20160609\nCMake version: Could not collect\n\nPython version: 3.5\nIs CUDA available: No\nCUDA runtime version: No CUDA\nGPU models and configuration: No CUDA\nNvidia driver version: No CUDA\ncuDNN version: No CUDA\n\nVersions of relevant libraries:\n[pip3] numpy (1.14.0)\n[pip3] torch (0.4.0)\n[pip3] torchvision (0.2.1)\n[conda] Could not collect\n\nGDB\nI can also crash it from the GDB and this is the resulting stacktrace:\n#0  0x00000000005bee30 in PySequence_Check ()\n#1  0x00007fffe88dbcc4 in torch::utils::compute_sizes (seq=0x0)\n    at torch/csrc/utils/tensor_new.cpp:90\n#2  torch::utils::internal_new_from_data (type=..., device=device@entry=-1, \n    data=data@entry=0x7fffe9f1d6d8, copy_variables=copy_variables@entry=true, \n    copy_numpy=copy_numpy@entry=true, type_inference=true)\n    at torch/csrc/utils/tensor_new.cpp:197\n#3  0x00007fffe88dd4cd in torch::utils::tensor_ctor (type=..., \n    args=args@entry=0x7ffff7e85be0, kwargs=kwargs@entry=0x0)\n    at torch/csrc/utils/tensor_new.cpp:433\n#4  0x00007fffe8ce66f8 in torch::autograd::THPVariable_tensor (\n    self=<optimized out>, args=0x7ffff7e85be0, kwargs=0x0)\n    at torch/csrc/autograd/generated/python_torch_functions.cpp:119\n#5  0x00000000004e9ba7 in PyCFunction_Call ()\n#6  0x00000000005372f4 in PyEval_EvalFrameEx ()\n#7  0x0000000000540199 in ?? ()\n#8  0x0000000000540e4f in PyEval_EvalCode ()\n#9  0x000000000060c272 in ?? ()\n#10 0x000000000046b89f in PyRun_InteractiveOneObject ()\n#11 0x000000000046ba48 in PyRun_InteractiveLoopFlags ()\n#12 0x000000000046cfa0 in ?? ()\n#13 0x00000000004cf2bd in ?? ()\n#14 0x00000000004cfeb1 in main ()", "body": "## Issue description\r\nPython segfaults if torch.tensor is created from the pandas series slice.\r\n\r\n## Code example\r\n```\r\nimport torch\r\nimport pandas as pd\r\n\r\nseq = pd.Series([0.1, 0.2, 0.3])\r\nprint(seq)\r\n# outputs:\r\n#0  0.1\r\n#1  0.2\r\n#2  0.3\r\n#dtype: float64\r\n\r\nprint(torch.tensor(seq))  # OK\r\n# outputs:\r\n#tensor([ 0.1000,  0.2000,  0.3000])\r\n\r\ntorch.tensor(seq[1:])  # SEGFAULT\r\n```\r\n\r\n## System Info\r\n```\r\nPyTorch version: 0.4.0\r\nIs debug build: No\r\nCUDA used to build PyTorch: None\r\n\r\nOS: Ubuntu 16.04.3 LTS\r\nGCC version: (Ubuntu 5.4.0-6ubuntu1~16.04.9) 5.4.0 20160609\r\nCMake version: Could not collect\r\n\r\nPython version: 3.5\r\nIs CUDA available: No\r\nCUDA runtime version: No CUDA\r\nGPU models and configuration: No CUDA\r\nNvidia driver version: No CUDA\r\ncuDNN version: No CUDA\r\n\r\nVersions of relevant libraries:\r\n[pip3] numpy (1.14.0)\r\n[pip3] torch (0.4.0)\r\n[pip3] torchvision (0.2.1)\r\n[conda] Could not collect\r\n```\r\n\r\n## GDB\r\nI can also crash it from the GDB and this is the resulting stacktrace:\r\n```\r\n#0  0x00000000005bee30 in PySequence_Check ()\r\n#1  0x00007fffe88dbcc4 in torch::utils::compute_sizes (seq=0x0)\r\n    at torch/csrc/utils/tensor_new.cpp:90\r\n#2  torch::utils::internal_new_from_data (type=..., device=device@entry=-1, \r\n    data=data@entry=0x7fffe9f1d6d8, copy_variables=copy_variables@entry=true, \r\n    copy_numpy=copy_numpy@entry=true, type_inference=true)\r\n    at torch/csrc/utils/tensor_new.cpp:197\r\n#3  0x00007fffe88dd4cd in torch::utils::tensor_ctor (type=..., \r\n    args=args@entry=0x7ffff7e85be0, kwargs=kwargs@entry=0x0)\r\n    at torch/csrc/utils/tensor_new.cpp:433\r\n#4  0x00007fffe8ce66f8 in torch::autograd::THPVariable_tensor (\r\n    self=<optimized out>, args=0x7ffff7e85be0, kwargs=0x0)\r\n    at torch/csrc/autograd/generated/python_torch_functions.cpp:119\r\n#5  0x00000000004e9ba7 in PyCFunction_Call ()\r\n#6  0x00000000005372f4 in PyEval_EvalFrameEx ()\r\n#7  0x0000000000540199 in ?? ()\r\n#8  0x0000000000540e4f in PyEval_EvalCode ()\r\n#9  0x000000000060c272 in ?? ()\r\n#10 0x000000000046b89f in PyRun_InteractiveOneObject ()\r\n#11 0x000000000046ba48 in PyRun_InteractiveLoopFlags ()\r\n#12 0x000000000046cfa0 in ?? ()\r\n#13 0x00000000004cf2bd in ?? ()\r\n#14 0x00000000004cfeb1 in main ()\r\n```"}