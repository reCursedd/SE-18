{"url": "https://api.github.com/repos/pytorch/pytorch/issues/comments/405305775", "html_url": "https://github.com/pytorch/pytorch/pull/9281#issuecomment-405305775", "issue_url": "https://api.github.com/repos/pytorch/pytorch/issues/9281", "id": 405305775, "node_id": "MDEyOklzc3VlQ29tbWVudDQwNTMwNTc3NQ==", "user": {"login": "SsnL", "id": 5674597, "node_id": "MDQ6VXNlcjU2NzQ1OTc=", "avatar_url": "https://avatars2.githubusercontent.com/u/5674597?v=4", "gravatar_id": "", "url": "https://api.github.com/users/SsnL", "html_url": "https://github.com/SsnL", "followers_url": "https://api.github.com/users/SsnL/followers", "following_url": "https://api.github.com/users/SsnL/following{/other_user}", "gists_url": "https://api.github.com/users/SsnL/gists{/gist_id}", "starred_url": "https://api.github.com/users/SsnL/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/SsnL/subscriptions", "organizations_url": "https://api.github.com/users/SsnL/orgs", "repos_url": "https://api.github.com/users/SsnL/repos", "events_url": "https://api.github.com/users/SsnL/events{/privacy}", "received_events_url": "https://api.github.com/users/SsnL/received_events", "type": "User", "site_admin": false}, "created_at": "2018-07-16T16:28:14Z", "updated_at": "2018-07-16T16:28:14Z", "author_association": "CONTRIBUTOR", "body_html": "<div class=\"email-fragment\">I still don\u2019t like tensor.options() because:\n1. It\u2019s very verbose\n2. It pretty much can only be used this way. (Where else can such a dict be\nused?) If it can only be used this way, why don\u2019t we go for more concise\napproaches , e.g. like/as ?</div>\n<span class=\"email-hidden-toggle\"><a href=\"#\">\u2026</a></span><div class=\"email-hidden-reply\">\n<div class=\"email-quoted-reply\">On Mon, Jul 16, 2018 at 17:43 Vadim Kantorov ***@***.***&gt; wrote:\n torch.ones(..., like/as/type_as/... = tensor) and torch.ones(...,\n **tensor.options()) need not be exclusive\n\n The like/as variant is really concies; and the **tensor.options()\n suppport just boils down to supporting options() method, the keyword\n arguments like device/dtype are already there.\n\n \u2014\n You are receiving this because you were mentioned.\n Reply to this email directly, view it on GitHub\n &lt;<a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load issue title\" data-id=\"339583082\" data-permission-text=\"Issue title is private\" data-url=\"https://github.com/pytorch/pytorch/issues/9281\" href=\"https://github.com/pytorch/pytorch/pull/9281#issuecomment-405291613\">#9281 (comment)</a>&gt;, or mute\n the thread\n &lt;<a href=\"https://github.com/notifications/unsubscribe-auth/AFaWZf0gpD2A_edpJsQjkLJwAhBXWBvBks5uHLS8gaJpZM4VISO9\">https://github.com/notifications/unsubscribe-auth/AFaWZf0gpD2A_edpJsQjkLJwAhBXWBvBks5uHLS8gaJpZM4VISO9</a>&gt;\n .\n</div>\n<div class=\"email-fragment\"></div>\n</div>", "body_text": "I still don\u2019t like tensor.options() because:\n1. It\u2019s very verbose\n2. It pretty much can only be used this way. (Where else can such a dict be\nused?) If it can only be used this way, why don\u2019t we go for more concise\napproaches , e.g. like/as ?\n\u2026\nOn Mon, Jul 16, 2018 at 17:43 Vadim Kantorov ***@***.***> wrote:\n torch.ones(..., like/as/type_as/... = tensor) and torch.ones(...,\n **tensor.options()) need not be exclusive\n\n The like/as variant is really concies; and the **tensor.options()\n suppport just boils down to supporting options() method, the keyword\n arguments like device/dtype are already there.\n\n \u2014\n You are receiving this because you were mentioned.\n Reply to this email directly, view it on GitHub\n <#9281 (comment)>, or mute\n the thread\n <https://github.com/notifications/unsubscribe-auth/AFaWZf0gpD2A_edpJsQjkLJwAhBXWBvBks5uHLS8gaJpZM4VISO9>\n .", "body": "I still don\u2019t like tensor.options() because:\n1. It\u2019s very verbose\n2. It pretty much can only be used this way. (Where else can such a dict be\nused?) If it can only be used this way, why don\u2019t we go for more concise\napproaches , e.g. like/as ?\n\nOn Mon, Jul 16, 2018 at 17:43 Vadim Kantorov <notifications@github.com>\nwrote:\n\n> torch.ones(..., like/as/type_as/... = tensor) and torch.ones(...,\n> **tensor.options()) need not be exclusive\n>\n> The like/as variant is really concies; and the **tensor.options()\n> suppport just boils down to supporting options() method, the keyword\n> arguments like device/dtype are already there.\n>\n> \u2014\n> You are receiving this because you were mentioned.\n> Reply to this email directly, view it on GitHub\n> <https://github.com/pytorch/pytorch/pull/9281#issuecomment-405291613>, or mute\n> the thread\n> <https://github.com/notifications/unsubscribe-auth/AFaWZf0gpD2A_edpJsQjkLJwAhBXWBvBks5uHLS8gaJpZM4VISO9>\n> .\n>\n"}