{"url": "https://api.github.com/repos/pytorch/pytorch/issues/comments/405291613", "html_url": "https://github.com/pytorch/pytorch/pull/9281#issuecomment-405291613", "issue_url": "https://api.github.com/repos/pytorch/pytorch/issues/9281", "id": 405291613, "node_id": "MDEyOklzc3VlQ29tbWVudDQwNTI5MTYxMw==", "user": {"login": "vadimkantorov", "id": 1041752, "node_id": "MDQ6VXNlcjEwNDE3NTI=", "avatar_url": "https://avatars0.githubusercontent.com/u/1041752?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vadimkantorov", "html_url": "https://github.com/vadimkantorov", "followers_url": "https://api.github.com/users/vadimkantorov/followers", "following_url": "https://api.github.com/users/vadimkantorov/following{/other_user}", "gists_url": "https://api.github.com/users/vadimkantorov/gists{/gist_id}", "starred_url": "https://api.github.com/users/vadimkantorov/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vadimkantorov/subscriptions", "organizations_url": "https://api.github.com/users/vadimkantorov/orgs", "repos_url": "https://api.github.com/users/vadimkantorov/repos", "events_url": "https://api.github.com/users/vadimkantorov/events{/privacy}", "received_events_url": "https://api.github.com/users/vadimkantorov/received_events", "type": "User", "site_admin": false}, "created_at": "2018-07-16T15:43:44Z", "updated_at": "2018-07-16T15:43:44Z", "author_association": "NONE", "body_html": "<p><code>torch.ones(..., like/as/type_as/... = tensor)</code> and <code>torch.ones(..., **tensor.options())</code> need not be exclusive</p>\n<p>The <code>like/as</code> variant is really concies; and the <code>**tensor.options()</code> suppport just boils down to supporting <code>options()</code> method, the keyword arguments like device/dtype are already there.</p>", "body_text": "torch.ones(..., like/as/type_as/... = tensor) and torch.ones(..., **tensor.options()) need not be exclusive\nThe like/as variant is really concies; and the **tensor.options() suppport just boils down to supporting options() method, the keyword arguments like device/dtype are already there.", "body": " `torch.ones(..., like/as/type_as/... = tensor)` and `torch.ones(..., **tensor.options())` need not be exclusive\r\n\r\nThe `like/as` variant is really concies; and the `**tensor.options()` suppport just boils down to supporting `options()` method, the keyword arguments like device/dtype are already there."}