{"url": "https://api.github.com/repos/pytorch/pytorch/issues/comments/334193960", "html_url": "https://github.com/pytorch/pytorch/pull/2899#issuecomment-334193960", "issue_url": "https://api.github.com/repos/pytorch/pytorch/issues/2899", "id": 334193960, "node_id": "MDEyOklzc3VlQ29tbWVudDMzNDE5Mzk2MA==", "user": {"login": "colesbury", "id": 655866, "node_id": "MDQ6VXNlcjY1NTg2Ng==", "avatar_url": "https://avatars1.githubusercontent.com/u/655866?v=4", "gravatar_id": "", "url": "https://api.github.com/users/colesbury", "html_url": "https://github.com/colesbury", "followers_url": "https://api.github.com/users/colesbury/followers", "following_url": "https://api.github.com/users/colesbury/following{/other_user}", "gists_url": "https://api.github.com/users/colesbury/gists{/gist_id}", "starred_url": "https://api.github.com/users/colesbury/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/colesbury/subscriptions", "organizations_url": "https://api.github.com/users/colesbury/orgs", "repos_url": "https://api.github.com/users/colesbury/repos", "events_url": "https://api.github.com/users/colesbury/events{/privacy}", "received_events_url": "https://api.github.com/users/colesbury/received_events", "type": "User", "site_admin": false}, "created_at": "2017-10-04T15:28:01Z", "updated_at": "2017-10-04T15:28:01Z", "author_association": "MEMBER", "body_html": "<p>I don't want to delay this any further, so if you don't like this suggestion just ignore it.</p>\n<p>Another option is deprecate the call without a dim. This keeps backwards compatibility, but let's us eventually move away from the old behavior. e.g.</p>\n<div class=\"highlight highlight-source-python\"><pre><span class=\"pl-k\">def</span> <span class=\"pl-en\">softmax</span>(<span class=\"pl-smi\">input</span>, <span class=\"pl-smi\">dim</span><span class=\"pl-k\">=</span><span class=\"pl-c1\">None</span>):\n  <span class=\"pl-k\">if</span> dim <span class=\"pl-k\">is</span> <span class=\"pl-c1\">None</span>:\n    dim <span class=\"pl-k\">=</span> <span class=\"pl-c1\">...</span> <span class=\"pl-c\"><span class=\"pl-c\">#</span> old behavior</span>\n    <span class=\"pl-c\"><span class=\"pl-c\">#</span> raise deprecated warning</span>\n  <span class=\"pl-k\">return</span> _Softmax(dim)(<span class=\"pl-c1\">input</span>)</pre></div>", "body_text": "I don't want to delay this any further, so if you don't like this suggestion just ignore it.\nAnother option is deprecate the call without a dim. This keeps backwards compatibility, but let's us eventually move away from the old behavior. e.g.\ndef softmax(input, dim=None):\n  if dim is None:\n    dim = ... # old behavior\n    # raise deprecated warning\n  return _Softmax(dim)(input)", "body": "I don't want to delay this any further, so if you don't like this suggestion just ignore it. \r\n\r\nAnother option is deprecate the call without a dim. This keeps backwards compatibility, but let's us eventually move away from the old behavior. e.g.\r\n\r\n```python\r\ndef softmax(input, dim=None):\r\n  if dim is None:\r\n    dim = ... # old behavior\r\n    # raise deprecated warning\r\n  return _Softmax(dim)(input)\r\n```"}