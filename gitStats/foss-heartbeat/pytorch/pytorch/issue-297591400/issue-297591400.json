{"url": "https://api.github.com/repos/pytorch/pytorch/issues/5265", "repository_url": "https://api.github.com/repos/pytorch/pytorch", "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/5265/labels{/name}", "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/5265/comments", "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/5265/events", "html_url": "https://github.com/pytorch/pytorch/pull/5265", "id": 297591400, "node_id": "MDExOlB1bGxSZXF1ZXN0MTY5NDgxMTc3", "number": 5265, "title": "Fix THCTensor_(max) and THCTensor_(min) initializations", "user": {"login": "zou3519", "id": 5652049, "node_id": "MDQ6VXNlcjU2NTIwNDk=", "avatar_url": "https://avatars3.githubusercontent.com/u/5652049?v=4", "gravatar_id": "", "url": "https://api.github.com/users/zou3519", "html_url": "https://github.com/zou3519", "followers_url": "https://api.github.com/users/zou3519/followers", "following_url": "https://api.github.com/users/zou3519/following{/other_user}", "gists_url": "https://api.github.com/users/zou3519/gists{/gist_id}", "starred_url": "https://api.github.com/users/zou3519/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/zou3519/subscriptions", "organizations_url": "https://api.github.com/users/zou3519/orgs", "repos_url": "https://api.github.com/users/zou3519/repos", "events_url": "https://api.github.com/users/zou3519/events{/privacy}", "received_events_url": "https://api.github.com/users/zou3519/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2018-02-15T20:48:50Z", "updated_at": "2018-02-15T22:41:20Z", "closed_at": "2018-02-15T22:41:20Z", "author_association": "CONTRIBUTOR", "pull_request": {"url": "https://api.github.com/repos/pytorch/pytorch/pulls/5265", "html_url": "https://github.com/pytorch/pytorch/pull/5265", "diff_url": "https://github.com/pytorch/pytorch/pull/5265.diff", "patch_url": "https://github.com/pytorch/pytorch/pull/5265.patch"}, "body_html": "<p><span class=\"issue-keyword tooltipped tooltipped-se\" aria-label=\"This pull request closes issue #4076.\">Fixes</span> <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load issue title\" data-id=\"280241524\" data-permission-text=\"Issue title is private\" data-url=\"https://github.com/pytorch/pytorch/issues/4076\" data-hovercard-type=\"issue\" data-hovercard-url=\"/pytorch/pytorch/issues/4076/hovercard\" href=\"https://github.com/pytorch/pytorch/issues/4076\">#4076</a>.</p>\n<p>Their cuda kernels should be initialized with (min_value, 0) and<br>\n(max_value, 0), respectively, where the second number is a default index<br>\nvalue. However, they were being initialized with (max, 1) and (min, 1)<br>\ninstead, probably a remnant from the lua torch days where everything is 1-indexed.</p>\n<p>This caused bugs in torch.max() and torch.min() when the input is at the<br>\nextreme value, and the max value (or min value) occurs at index 0. For example,</p>\n<pre><code>import torch\nx = torch.ByteTensor([[0]])\nx.cuda().max(dim=0)  # returns (0, 1) but the expected result is (0, 0)\n</code></pre>\n<h3>Test Plan</h3>\n<p>Add a unit test for this case.</p>", "body_text": "Fixes #4076.\nTheir cuda kernels should be initialized with (min_value, 0) and\n(max_value, 0), respectively, where the second number is a default index\nvalue. However, they were being initialized with (max, 1) and (min, 1)\ninstead, probably a remnant from the lua torch days where everything is 1-indexed.\nThis caused bugs in torch.max() and torch.min() when the input is at the\nextreme value, and the max value (or min value) occurs at index 0. For example,\nimport torch\nx = torch.ByteTensor([[0]])\nx.cuda().max(dim=0)  # returns (0, 1) but the expected result is (0, 0)\n\nTest Plan\nAdd a unit test for this case.", "body": "Fixes #4076.\r\n\r\nTheir cuda kernels should be initialized with (min_value, 0) and\r\n(max_value, 0), respectively, where the second number is a default index\r\nvalue. However, they were being initialized with (max, 1) and (min, 1)\r\ninstead, probably a remnant from the lua torch days where everything is 1-indexed.\r\n\r\nThis caused bugs in torch.max() and torch.min() when the input is at the\r\nextreme value, and the max value (or min value) occurs at index 0. For example,\r\n```\r\nimport torch\r\nx = torch.ByteTensor([[0]])\r\nx.cuda().max(dim=0)  # returns (0, 1) but the expected result is (0, 0)\r\n```\r\n\r\n### Test Plan\r\nAdd a unit test for this case."}