{"url": "https://api.github.com/repos/pytorch/pytorch/issues/2044", "repository_url": "https://api.github.com/repos/pytorch/pytorch", "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/2044/labels{/name}", "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/2044/comments", "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/2044/events", "html_url": "https://github.com/pytorch/pytorch/issues/2044", "id": 241869126, "node_id": "MDU6SXNzdWUyNDE4NjkxMjY=", "number": 2044, "title": "[bug] .multinomial() for cuda.DoubleTensor", "user": {"login": "donglixp", "id": 1070872, "node_id": "MDQ6VXNlcjEwNzA4NzI=", "avatar_url": "https://avatars1.githubusercontent.com/u/1070872?v=4", "gravatar_id": "", "url": "https://api.github.com/users/donglixp", "html_url": "https://github.com/donglixp", "followers_url": "https://api.github.com/users/donglixp/followers", "following_url": "https://api.github.com/users/donglixp/following{/other_user}", "gists_url": "https://api.github.com/users/donglixp/gists{/gist_id}", "starred_url": "https://api.github.com/users/donglixp/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/donglixp/subscriptions", "organizations_url": "https://api.github.com/users/donglixp/orgs", "repos_url": "https://api.github.com/users/donglixp/repos", "events_url": "https://api.github.com/users/donglixp/events{/privacy}", "received_events_url": "https://api.github.com/users/donglixp/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 424131847, "node_id": "MDU6TGFiZWw0MjQxMzE4NDc=", "url": "https://api.github.com/repos/pytorch/pytorch/labels/bug", "name": "bug", "color": "b60205", "default": true}, {"id": 443484135, "node_id": "MDU6TGFiZWw0NDM0ODQxMzU=", "url": "https://api.github.com/repos/pytorch/pytorch/labels/high%20priority", "name": "high priority", "color": "F22613", "default": false}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": {"url": "https://api.github.com/repos/pytorch/pytorch/milestones/2", "html_url": "https://github.com/pytorch/pytorch/milestone/2", "labels_url": "https://api.github.com/repos/pytorch/pytorch/milestones/2/labels", "id": 2536200, "node_id": "MDk6TWlsZXN0b25lMjUzNjIwMA==", "number": 2, "title": "v0.2", "description": "", "creator": {"login": "apaszke", "id": 4583066, "node_id": "MDQ6VXNlcjQ1ODMwNjY=", "avatar_url": "https://avatars3.githubusercontent.com/u/4583066?v=4", "gravatar_id": "", "url": "https://api.github.com/users/apaszke", "html_url": "https://github.com/apaszke", "followers_url": "https://api.github.com/users/apaszke/followers", "following_url": "https://api.github.com/users/apaszke/following{/other_user}", "gists_url": "https://api.github.com/users/apaszke/gists{/gist_id}", "starred_url": "https://api.github.com/users/apaszke/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/apaszke/subscriptions", "organizations_url": "https://api.github.com/users/apaszke/orgs", "repos_url": "https://api.github.com/users/apaszke/repos", "events_url": "https://api.github.com/users/apaszke/events{/privacy}", "received_events_url": "https://api.github.com/users/apaszke/received_events", "type": "User", "site_admin": false}, "open_issues": 2, "closed_issues": 34, "state": "closed", "created_at": "2017-05-22T18:19:28Z", "updated_at": "2018-08-06T21:16:06Z", "due_on": "2017-06-04T07:00:00Z", "closed_at": "2018-08-06T21:16:06Z"}, "comments": 11, "created_at": "2017-07-10T22:19:52Z", "updated_at": "2017-07-13T17:32:59Z", "closed_at": "2017-07-13T04:27:08Z", "author_association": "CONTRIBUTOR", "body_html": "<p>The following code can reproduce the bug. The line \"torch.multinomial(a.exp(), 1)\" could work properly. But after casting into DoubleTensor, the sampled indexes will be out of range.</p>\n<div class=\"highlight highlight-source-python\"><pre><span class=\"pl-k\">import</span> torch\n\na <span class=\"pl-k\">=</span> torch.rand(<span class=\"pl-c1\">20000</span>).float().mul(<span class=\"pl-k\">-</span><span class=\"pl-c1\">20</span>).view(<span class=\"pl-c1\">20</span>,<span class=\"pl-c1\">1000</span>).clone().cuda()\n<span class=\"pl-c1\">print</span>(a)\n\n<span class=\"pl-c\"><span class=\"pl-c\">#</span> this returns correct results</span>\n<span class=\"pl-c1\">print</span>(torch.multinomial(a.exp(), <span class=\"pl-c1\">1</span>))\n<span class=\"pl-c\"><span class=\"pl-c\">#</span> incorrect!</span>\n<span class=\"pl-c1\">print</span>(torch.multinomial(a.double().exp_(), <span class=\"pl-c1\">1</span>))</pre></div>\n<pre><code>-15.8601 -14.0862 -11.3351  ...  -11.1707 -10.3008  -0.7116\n-18.1648  -9.0676  -0.4030  ...  -15.8194 -10.5331  -9.2996\n-12.7967  -5.2371 -18.6317  ...   -0.1992 -15.9085 -15.9299\n           ...               \u22f1              ...\n -9.2137  -2.4529  -2.9928  ...  -14.3643 -12.9492 -17.5611\n -5.5278  -2.8773 -19.5927  ...  -11.5547  -4.2149 -18.7635\n -3.0814  -6.3477  -0.3227  ...   -7.2171 -15.2311  -0.4129\n[torch.cuda.FloatTensor of size 20x1000 (GPU 0)]\n\n\n  723\n  261\n  657\n  663\n  851\n  764\n  245\n  417\n  405\n  210\n  420\n  479\n  213\n  919\n  532\n  742\n  994\n  416\n  176\n  833\n[torch.cuda.LongTensor of size 20x1 (GPU 0)]\n\n\n 3.8407e+18\n 3.5479e+18\n 4.0363e+18\n 3.7260e+18\n 4.1986e+18\n 4.2638e+18\n 4.5605e+18\n 4.4725e+18\n 3.5909e+18\n 3.8631e+18\n 4.5026e+18\n 4.2295e+18\n 4.5749e+18\n 4.3938e+18\n 4.2139e+18\n 4.3064e+18\n 4.3244e+18\n 3.9574e+18\n 4.0812e+18\n 4.5084e+18\n[torch.cuda.LongTensor of size 20x1 (GPU 0)]\n</code></pre>", "body_text": "The following code can reproduce the bug. The line \"torch.multinomial(a.exp(), 1)\" could work properly. But after casting into DoubleTensor, the sampled indexes will be out of range.\nimport torch\n\na = torch.rand(20000).float().mul(-20).view(20,1000).clone().cuda()\nprint(a)\n\n# this returns correct results\nprint(torch.multinomial(a.exp(), 1))\n# incorrect!\nprint(torch.multinomial(a.double().exp_(), 1))\n-15.8601 -14.0862 -11.3351  ...  -11.1707 -10.3008  -0.7116\n-18.1648  -9.0676  -0.4030  ...  -15.8194 -10.5331  -9.2996\n-12.7967  -5.2371 -18.6317  ...   -0.1992 -15.9085 -15.9299\n           ...               \u22f1              ...\n -9.2137  -2.4529  -2.9928  ...  -14.3643 -12.9492 -17.5611\n -5.5278  -2.8773 -19.5927  ...  -11.5547  -4.2149 -18.7635\n -3.0814  -6.3477  -0.3227  ...   -7.2171 -15.2311  -0.4129\n[torch.cuda.FloatTensor of size 20x1000 (GPU 0)]\n\n\n  723\n  261\n  657\n  663\n  851\n  764\n  245\n  417\n  405\n  210\n  420\n  479\n  213\n  919\n  532\n  742\n  994\n  416\n  176\n  833\n[torch.cuda.LongTensor of size 20x1 (GPU 0)]\n\n\n 3.8407e+18\n 3.5479e+18\n 4.0363e+18\n 3.7260e+18\n 4.1986e+18\n 4.2638e+18\n 4.5605e+18\n 4.4725e+18\n 3.5909e+18\n 3.8631e+18\n 4.5026e+18\n 4.2295e+18\n 4.5749e+18\n 4.3938e+18\n 4.2139e+18\n 4.3064e+18\n 4.3244e+18\n 3.9574e+18\n 4.0812e+18\n 4.5084e+18\n[torch.cuda.LongTensor of size 20x1 (GPU 0)]", "body": "The following code can reproduce the bug. The line \"torch.multinomial(a.exp(), 1)\" could work properly. But after casting into DoubleTensor, the sampled indexes will be out of range.\r\n\r\n```python\r\nimport torch\r\n\r\na = torch.rand(20000).float().mul(-20).view(20,1000).clone().cuda()\r\nprint(a)\r\n\r\n# this returns correct results\r\nprint(torch.multinomial(a.exp(), 1))\r\n# incorrect!\r\nprint(torch.multinomial(a.double().exp_(), 1))\r\n```\r\n\r\n```\r\n-15.8601 -14.0862 -11.3351  ...  -11.1707 -10.3008  -0.7116\r\n-18.1648  -9.0676  -0.4030  ...  -15.8194 -10.5331  -9.2996\r\n-12.7967  -5.2371 -18.6317  ...   -0.1992 -15.9085 -15.9299\r\n           ...               \u22f1              ...\r\n -9.2137  -2.4529  -2.9928  ...  -14.3643 -12.9492 -17.5611\r\n -5.5278  -2.8773 -19.5927  ...  -11.5547  -4.2149 -18.7635\r\n -3.0814  -6.3477  -0.3227  ...   -7.2171 -15.2311  -0.4129\r\n[torch.cuda.FloatTensor of size 20x1000 (GPU 0)]\r\n\r\n\r\n  723\r\n  261\r\n  657\r\n  663\r\n  851\r\n  764\r\n  245\r\n  417\r\n  405\r\n  210\r\n  420\r\n  479\r\n  213\r\n  919\r\n  532\r\n  742\r\n  994\r\n  416\r\n  176\r\n  833\r\n[torch.cuda.LongTensor of size 20x1 (GPU 0)]\r\n\r\n\r\n 3.8407e+18\r\n 3.5479e+18\r\n 4.0363e+18\r\n 3.7260e+18\r\n 4.1986e+18\r\n 4.2638e+18\r\n 4.5605e+18\r\n 4.4725e+18\r\n 3.5909e+18\r\n 3.8631e+18\r\n 4.5026e+18\r\n 4.2295e+18\r\n 4.5749e+18\r\n 4.3938e+18\r\n 4.2139e+18\r\n 4.3064e+18\r\n 4.3244e+18\r\n 3.9574e+18\r\n 4.0812e+18\r\n 4.5084e+18\r\n[torch.cuda.LongTensor of size 20x1 (GPU 0)]\r\n```"}