{"url": "https://api.github.com/repos/pytorch/pytorch/issues/13102", "repository_url": "https://api.github.com/repos/pytorch/pytorch", "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/13102/labels{/name}", "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/13102/comments", "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/13102/events", "html_url": "https://github.com/pytorch/pytorch/pull/13102", "id": 373758012, "node_id": "MDExOlB1bGxSZXF1ZXN0MjI1NjEyMzA5", "number": 13102, "title": "Keep `ModuleList` consistent with python `list` in `__setitem__` function.", "user": {"login": "lyuwenyu", "id": 17582080, "node_id": "MDQ6VXNlcjE3NTgyMDgw", "avatar_url": "https://avatars0.githubusercontent.com/u/17582080?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lyuwenyu", "html_url": "https://github.com/lyuwenyu", "followers_url": "https://api.github.com/users/lyuwenyu/followers", "following_url": "https://api.github.com/users/lyuwenyu/following{/other_user}", "gists_url": "https://api.github.com/users/lyuwenyu/gists{/gist_id}", "starred_url": "https://api.github.com/users/lyuwenyu/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lyuwenyu/subscriptions", "organizations_url": "https://api.github.com/users/lyuwenyu/orgs", "repos_url": "https://api.github.com/users/lyuwenyu/repos", "events_url": "https://api.github.com/users/lyuwenyu/events{/privacy}", "received_events_url": "https://api.github.com/users/lyuwenyu/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-10-25T03:24:14Z", "updated_at": "2018-11-16T15:40:57Z", "closed_at": "2018-11-16T15:40:57Z", "author_association": "CONTRIBUTOR", "pull_request": {"url": "https://api.github.com/repos/pytorch/pytorch/pulls/13102", "html_url": "https://github.com/pytorch/pytorch/pull/13102", "diff_url": "https://github.com/pytorch/pytorch/pull/13102.diff", "patch_url": "https://github.com/pytorch/pytorch/pull/13102.patch"}, "body_html": "<p><code>ModuleList</code> class function <code>__setitem__</code> has implicit rist</p>\n<pre><code>In [26]: mlist = nn.ModuleList([nn.ReLU(), nn.Conv2d(10, 10, 3, 1)])\n\nIn [27]: mlist\nOut[27]: \nModuleList(\n  (0): ReLU()\n  (1): Conv2d(10, 10, kernel_size=(3, 3), stride=(1, 1))\n)\n\nIn [28]: mlist[-1] = nn.ReLU()\n\nIn [29]: mlist\nOut[29]: \nModuleList(\n  (0): ReLU()\n  (1): Conv2d(10, 10, kernel_size=(3, 3), stride=(1, 1))\n  (-1): ReLU()\n)\n\nIn [30]: mlist[-1]\n---------------------------------------------------------------------------\nKeyError                                  Traceback (most recent call last)\n&lt;ipython-input-30-229d1b6823a0&gt; in &lt;module&gt;()\n----&gt; 1 mlist[-1]\n\n~/anaconda3/lib/python3.6/site-packages/torch/nn/modules/container.py in __getitem__(self, idx)\n    134             return ModuleList(list(self._modules.values())[idx])\n    135         else:\n--&gt; 136             return self._modules[self._get_abs_string_index(idx)]\n    137 \n    138     def __setitem__(self, idx, module):\n\nKeyError: '2'\n\n</code></pre>\n<p>modified as</p>\n<pre><code>    def __setitem__(self, idx, module):\n        idx = self._get_abs_string_index(idx)\n        return setattr(self, str(idx), module)\n</code></pre>\n<p>to fix it.</p>\n<pre><code>In [31]: class NewModuleList(nn.ModuleList):\n    ...:     def __setitem__(self, idx, module):\n    ...:         idx = self._get_abs_string_index(idx)\n    ...:         return setattr(self, str(idx), module)\n    ...:     \n\nIn [32]: mlist = NewModuleList([nn.ReLU(), nn.Conv2d(10, 10, 2, 1)])\n\nIn [33]: mlist[-1] = nn.ReLU()\n\nIn [34]: mlist\nOut[34]: \nNewModuleList(\n  (0): ReLU()\n  (1): ReLU()\n)\n</code></pre>", "body_text": "ModuleList class function __setitem__ has implicit rist\nIn [26]: mlist = nn.ModuleList([nn.ReLU(), nn.Conv2d(10, 10, 3, 1)])\n\nIn [27]: mlist\nOut[27]: \nModuleList(\n  (0): ReLU()\n  (1): Conv2d(10, 10, kernel_size=(3, 3), stride=(1, 1))\n)\n\nIn [28]: mlist[-1] = nn.ReLU()\n\nIn [29]: mlist\nOut[29]: \nModuleList(\n  (0): ReLU()\n  (1): Conv2d(10, 10, kernel_size=(3, 3), stride=(1, 1))\n  (-1): ReLU()\n)\n\nIn [30]: mlist[-1]\n---------------------------------------------------------------------------\nKeyError                                  Traceback (most recent call last)\n<ipython-input-30-229d1b6823a0> in <module>()\n----> 1 mlist[-1]\n\n~/anaconda3/lib/python3.6/site-packages/torch/nn/modules/container.py in __getitem__(self, idx)\n    134             return ModuleList(list(self._modules.values())[idx])\n    135         else:\n--> 136             return self._modules[self._get_abs_string_index(idx)]\n    137 \n    138     def __setitem__(self, idx, module):\n\nKeyError: '2'\n\n\nmodified as\n    def __setitem__(self, idx, module):\n        idx = self._get_abs_string_index(idx)\n        return setattr(self, str(idx), module)\n\nto fix it.\nIn [31]: class NewModuleList(nn.ModuleList):\n    ...:     def __setitem__(self, idx, module):\n    ...:         idx = self._get_abs_string_index(idx)\n    ...:         return setattr(self, str(idx), module)\n    ...:     \n\nIn [32]: mlist = NewModuleList([nn.ReLU(), nn.Conv2d(10, 10, 2, 1)])\n\nIn [33]: mlist[-1] = nn.ReLU()\n\nIn [34]: mlist\nOut[34]: \nNewModuleList(\n  (0): ReLU()\n  (1): ReLU()\n)", "body": "`ModuleList` class function `__setitem__` has implicit rist\r\n```\r\nIn [26]: mlist = nn.ModuleList([nn.ReLU(), nn.Conv2d(10, 10, 3, 1)])\r\n\r\nIn [27]: mlist\r\nOut[27]: \r\nModuleList(\r\n  (0): ReLU()\r\n  (1): Conv2d(10, 10, kernel_size=(3, 3), stride=(1, 1))\r\n)\r\n\r\nIn [28]: mlist[-1] = nn.ReLU()\r\n\r\nIn [29]: mlist\r\nOut[29]: \r\nModuleList(\r\n  (0): ReLU()\r\n  (1): Conv2d(10, 10, kernel_size=(3, 3), stride=(1, 1))\r\n  (-1): ReLU()\r\n)\r\n\r\nIn [30]: mlist[-1]\r\n---------------------------------------------------------------------------\r\nKeyError                                  Traceback (most recent call last)\r\n<ipython-input-30-229d1b6823a0> in <module>()\r\n----> 1 mlist[-1]\r\n\r\n~/anaconda3/lib/python3.6/site-packages/torch/nn/modules/container.py in __getitem__(self, idx)\r\n    134             return ModuleList(list(self._modules.values())[idx])\r\n    135         else:\r\n--> 136             return self._modules[self._get_abs_string_index(idx)]\r\n    137 \r\n    138     def __setitem__(self, idx, module):\r\n\r\nKeyError: '2'\r\n\r\n```\r\n\r\nmodified as \r\n```\r\n    def __setitem__(self, idx, module):\r\n        idx = self._get_abs_string_index(idx)\r\n        return setattr(self, str(idx), module)\r\n```\r\nto fix it.\r\n\r\n```\r\nIn [31]: class NewModuleList(nn.ModuleList):\r\n    ...:     def __setitem__(self, idx, module):\r\n    ...:         idx = self._get_abs_string_index(idx)\r\n    ...:         return setattr(self, str(idx), module)\r\n    ...:     \r\n\r\nIn [32]: mlist = NewModuleList([nn.ReLU(), nn.Conv2d(10, 10, 2, 1)])\r\n\r\nIn [33]: mlist[-1] = nn.ReLU()\r\n\r\nIn [34]: mlist\r\nOut[34]: \r\nNewModuleList(\r\n  (0): ReLU()\r\n  (1): ReLU()\r\n)\r\n```\r\n\r\n"}