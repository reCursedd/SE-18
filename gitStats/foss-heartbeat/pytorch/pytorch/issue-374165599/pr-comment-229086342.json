{"url": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/229086342", "pull_request_review_id": 169502698, "id": 229086342, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIyOTA4NjM0Mg==", "diff_hunk": "@@ -124,6 +124,34 @@ Tensor empty(at::IntList dims, at::TensorOptions options) {\n   return tensor;\n }\n \n+void reinitialize_(\n+    Tensor* tensor,\n+    at::IntList dims,\n+    at::TensorOptions options) {\n+  CAFFE_ENFORCE(options.device_opt() != c10::nullopt);\n+  if (*tensor) {\n+    if (tensor->GetDevice() == options.device()) {\n+      if (tensor->sizes() != dims) {\n+        // Resize when the dims doesn't match\n+        tensor->Resize(dims);\n+      }\n+      auto type_meta = at::scalarTypeToTypeMeta(options.dtype());\n+      if (tensor->meta() == type_meta) {\n+        tensor->raw_mutable_data();\n+      } else {\n+        // create a new Tensor when the data_type doesn't match", "path": "caffe2/core/tensor.cc", "position": 22, "original_position": 19, "commit_id": "bf0bdf7f21d963574d36f0a2ad5dd69000bf5237", "original_commit_id": "7ef8aa992bfb2d4acbddb67800a6a0f8ffb29606", "user": {"login": "jerryzh168", "id": 4958441, "node_id": "MDQ6VXNlcjQ5NTg0NDE=", "avatar_url": "https://avatars0.githubusercontent.com/u/4958441?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jerryzh168", "html_url": "https://github.com/jerryzh168", "followers_url": "https://api.github.com/users/jerryzh168/followers", "following_url": "https://api.github.com/users/jerryzh168/following{/other_user}", "gists_url": "https://api.github.com/users/jerryzh168/gists{/gist_id}", "starred_url": "https://api.github.com/users/jerryzh168/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jerryzh168/subscriptions", "organizations_url": "https://api.github.com/users/jerryzh168/orgs", "repos_url": "https://api.github.com/users/jerryzh168/repos", "events_url": "https://api.github.com/users/jerryzh168/events{/privacy}", "received_events_url": "https://api.github.com/users/jerryzh168/received_events", "type": "User", "site_admin": false}, "body": "For current codemod, the pattern we are matching is Tensor in memeber variable and we'll replace the first Resize call with initialize, I don't think it will get triggered. I think the question is whether we want to use this API for other purposes as well, or just for the single purpose of reinitializing a member variable of type Tensor.", "created_at": "2018-10-29T20:29:51Z", "updated_at": "2018-11-23T15:53:47Z", "html_url": "https://github.com/pytorch/pytorch/pull/13147#discussion_r229086342", "pull_request_url": "https://api.github.com/repos/pytorch/pytorch/pulls/13147", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/229086342"}, "html": {"href": "https://github.com/pytorch/pytorch/pull/13147#discussion_r229086342"}, "pull_request": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/13147"}}, "body_html": "<p>For current codemod, the pattern we are matching is Tensor in memeber variable and we'll replace the first Resize call with initialize, I don't think it will get triggered. I think the question is whether we want to use this API for other purposes as well, or just for the single purpose of reinitializing a member variable of type Tensor.</p>", "body_text": "For current codemod, the pattern we are matching is Tensor in memeber variable and we'll replace the first Resize call with initialize, I don't think it will get triggered. I think the question is whether we want to use this API for other purposes as well, or just for the single purpose of reinitializing a member variable of type Tensor.", "in_reply_to_id": 228678673}