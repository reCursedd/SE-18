{"url": "https://api.github.com/repos/pytorch/pytorch/issues/comments/433557579", "html_url": "https://github.com/pytorch/pytorch/pull/13147#issuecomment-433557579", "issue_url": "https://api.github.com/repos/pytorch/pytorch/issues/13147", "id": 433557579, "node_id": "MDEyOklzc3VlQ29tbWVudDQzMzU1NzU3OQ==", "user": {"login": "ezyang", "id": 13564, "node_id": "MDQ6VXNlcjEzNTY0", "avatar_url": "https://avatars0.githubusercontent.com/u/13564?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ezyang", "html_url": "https://github.com/ezyang", "followers_url": "https://api.github.com/users/ezyang/followers", "following_url": "https://api.github.com/users/ezyang/following{/other_user}", "gists_url": "https://api.github.com/users/ezyang/gists{/gist_id}", "starred_url": "https://api.github.com/users/ezyang/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ezyang/subscriptions", "organizations_url": "https://api.github.com/users/ezyang/orgs", "repos_url": "https://api.github.com/users/ezyang/repos", "events_url": "https://api.github.com/users/ezyang/events{/privacy}", "received_events_url": "https://api.github.com/users/ezyang/received_events", "type": "User", "site_admin": false}, "created_at": "2018-10-26T22:15:29Z", "updated_at": "2018-10-26T22:15:29Z", "author_association": "CONTRIBUTOR", "body_html": "<p>I'm not sure this function should handle dtype-change. In the two(!!) cases of caching I've seen, they only check for size change, not dtype change. This implies that the dtype never changes. I'm much happier if we don't have to deal with a dtype change in this function.</p>\n<p>Also, I'd strongly advise you to write a description of this function that makes sense, independently of the refactor you're trying to do. If it seems hard or convoluted to describe what it does, that implies that maybe we should do more work figuring out a clear API semantics.</p>", "body_text": "I'm not sure this function should handle dtype-change. In the two(!!) cases of caching I've seen, they only check for size change, not dtype change. This implies that the dtype never changes. I'm much happier if we don't have to deal with a dtype change in this function.\nAlso, I'd strongly advise you to write a description of this function that makes sense, independently of the refactor you're trying to do. If it seems hard or convoluted to describe what it does, that implies that maybe we should do more work figuring out a clear API semantics.", "body": "I'm not sure this function should handle dtype-change. In the two(!!) cases of caching I've seen, they only check for size change, not dtype change. This implies that the dtype never changes. I'm much happier if we don't have to deal with a dtype change in this function.\r\n\r\nAlso, I'd strongly advise you to write a description of this function that makes sense, independently of the refactor you're trying to do. If it seems hard or convoluted to describe what it does, that implies that maybe we should do more work figuring out a clear API semantics."}