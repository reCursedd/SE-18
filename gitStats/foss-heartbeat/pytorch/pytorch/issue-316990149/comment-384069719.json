{"url": "https://api.github.com/repos/pytorch/pytorch/issues/comments/384069719", "html_url": "https://github.com/pytorch/pytorch/pull/6882#issuecomment-384069719", "issue_url": "https://api.github.com/repos/pytorch/pytorch/issues/6882", "id": 384069719, "node_id": "MDEyOklzc3VlQ29tbWVudDM4NDA2OTcxOQ==", "user": {"login": "zdevito", "id": 370202, "node_id": "MDQ6VXNlcjM3MDIwMg==", "avatar_url": "https://avatars0.githubusercontent.com/u/370202?v=4", "gravatar_id": "", "url": "https://api.github.com/users/zdevito", "html_url": "https://github.com/zdevito", "followers_url": "https://api.github.com/users/zdevito/followers", "following_url": "https://api.github.com/users/zdevito/following{/other_user}", "gists_url": "https://api.github.com/users/zdevito/gists{/gist_id}", "starred_url": "https://api.github.com/users/zdevito/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/zdevito/subscriptions", "organizations_url": "https://api.github.com/users/zdevito/orgs", "repos_url": "https://api.github.com/users/zdevito/repos", "events_url": "https://api.github.com/users/zdevito/events{/privacy}", "received_events_url": "https://api.github.com/users/zdevito/received_events", "type": "User", "site_admin": false}, "created_at": "2018-04-24T20:31:05Z", "updated_at": "2018-04-24T20:31:05Z", "author_association": "CONTRIBUTOR", "body_html": "<p>The bug was an interaction between TensorType and DynamicType. We'd see TensorTypes in the IR when that graph fragment came from a trace. If you then tried to re-assign one of those values, it would fail because the original type was TensorType and the new type was Dynamic. This PR makes the subtype relationship explicit, and then uses <code>interpreterType</code> to wipe away size-specific information  in the type-checker so it would allow this situations.  An alternative, wiping away trace-recorded size information, seemed less robust.</p>", "body_text": "The bug was an interaction between TensorType and DynamicType. We'd see TensorTypes in the IR when that graph fragment came from a trace. If you then tried to re-assign one of those values, it would fail because the original type was TensorType and the new type was Dynamic. This PR makes the subtype relationship explicit, and then uses interpreterType to wipe away size-specific information  in the type-checker so it would allow this situations.  An alternative, wiping away trace-recorded size information, seemed less robust.", "body": "The bug was an interaction between TensorType and DynamicType. We'd see TensorTypes in the IR when that graph fragment came from a trace. If you then tried to re-assign one of those values, it would fail because the original type was TensorType and the new type was Dynamic. This PR makes the subtype relationship explicit, and then uses `interpreterType` to wipe away size-specific information  in the type-checker so it would allow this situations.  An alternative, wiping away trace-recorded size information, seemed less robust."}