{"url": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/184772238", "pull_request_review_id": 116040563, "id": 184772238, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4NDc3MjIzOA==", "diff_hunk": "@@ -231,36 +224,41 @@ struct Environment {\n   ValueTable value_table;\n };\n \n-Const getAttributeValue(Expr value_expr) {\n-  switch (value_expr.kind()) {\n-    case TK_CONST: {\n-      return Const(value_expr);\n-    } break;\n-    case TK_TRUE: {\n-      return Const::create(value_expr.range(), \"1\");\n-    } break;\n-    case TK_FALSE: {\n-      return Const::create(value_expr.range(), \"0\");\n-    } break;\n-    default:\n-      throw ErrorReport(value_expr) << \"attributes must be constants, or a list of constants\";\n-      break;\n-  }\n-}\n-\n std::shared_ptr<SugaredValue> packOutputs(Graph& g, at::ArrayRef<Value*> values) {\n   if(values.size() == 1) {\n     return std::make_shared<SimpleValue>(values[0]);\n   }\n   return std::make_shared<SimpleValue>(g.insertNode(g.createTuple(values))->output());\n }\n \n+at::Tensor getConstantValue(const SourceRange& loc, Value* v, int64_t max_dim) {\n+  if(v->node()->kind() == prim::Constant) {\n+    auto t = v->node()->t(attr::value);\n+    if(t.ndimension() > max_dim) {\n+      throw ErrorReport(loc) << \"attributes must be scalars or lists of scalars\";", "path": "torch/csrc/jit/script/compiler.cpp", "position": null, "original_position": 75, "commit_id": "6351e1b8d31c079105ffc682c400cb62428a34be", "original_commit_id": "40e02172debd92ca4b425f8d656694fe5f3c70a5", "user": {"login": "zdevito", "id": 370202, "node_id": "MDQ6VXNlcjM3MDIwMg==", "avatar_url": "https://avatars0.githubusercontent.com/u/370202?v=4", "gravatar_id": "", "url": "https://api.github.com/users/zdevito", "html_url": "https://github.com/zdevito", "followers_url": "https://api.github.com/users/zdevito/followers", "following_url": "https://api.github.com/users/zdevito/following{/other_user}", "gists_url": "https://api.github.com/users/zdevito/gists{/gist_id}", "starred_url": "https://api.github.com/users/zdevito/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/zdevito/subscriptions", "organizations_url": "https://api.github.com/users/zdevito/orgs", "repos_url": "https://api.github.com/users/zdevito/repos", "events_url": "https://api.github.com/users/zdevito/events{/privacy}", "received_events_url": "https://api.github.com/users/zdevito/received_events", "type": "User", "site_admin": false}, "body": "What zero? In one call max_dim is 1 and in the other it is 0", "created_at": "2018-04-27T18:33:43Z", "updated_at": "2018-11-23T15:43:20Z", "html_url": "https://github.com/pytorch/pytorch/pull/7017#discussion_r184772238", "pull_request_url": "https://api.github.com/repos/pytorch/pytorch/pulls/7017", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/184772238"}, "html": {"href": "https://github.com/pytorch/pytorch/pull/7017#discussion_r184772238"}, "pull_request": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/7017"}}, "body_html": "<p>What zero? In one call max_dim is 1 and in the other it is 0</p>", "body_text": "What zero? In one call max_dim is 1 and in the other it is 0", "in_reply_to_id": 184654477}