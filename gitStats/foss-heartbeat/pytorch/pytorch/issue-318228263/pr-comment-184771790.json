{"url": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/184771790", "pull_request_review_id": 116040102, "id": 184771790, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4NDc3MTc5MA==", "diff_hunk": "@@ -44,17 +44,19 @@ bool mergeTypes(ArrayRef<Value*> lhs, ArrayRef<Value*> rhs, ArrayRef<Value*> out\n   JIT_ASSERT(lhs.size() == rhs.size() && rhs.size() == outputs.size());\n   bool changed = false;\n   for(size_t i = 0; i < lhs.size(); ++i) {\n+    auto old_output_type = outputs[i]->type();\n     if(*lhs[i]->type() == *rhs[i]->type()) {\n       outputs[i]->setType(lhs[i]->type());\n     } else {\n       outputs[i]->setType(DynamicType::get());\n-      changed = true;\n     }\n+    if(*old_output_type != *outputs[i]->type())\n+      changed = true;", "path": "torch/csrc/jit/passes/shape_analysis.cpp", "position": 21, "original_position": 21, "commit_id": "6351e1b8d31c079105ffc682c400cb62428a34be", "original_commit_id": "40e02172debd92ca4b425f8d656694fe5f3c70a5", "user": {"login": "zdevito", "id": 370202, "node_id": "MDQ6VXNlcjM3MDIwMg==", "avatar_url": "https://avatars0.githubusercontent.com/u/370202?v=4", "gravatar_id": "", "url": "https://api.github.com/users/zdevito", "html_url": "https://github.com/zdevito", "followers_url": "https://api.github.com/users/zdevito/followers", "following_url": "https://api.github.com/users/zdevito/following{/other_user}", "gists_url": "https://api.github.com/users/zdevito/gists{/gist_id}", "starred_url": "https://api.github.com/users/zdevito/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/zdevito/subscriptions", "organizations_url": "https://api.github.com/users/zdevito/orgs", "repos_url": "https://api.github.com/users/zdevito/repos", "events_url": "https://api.github.com/users/zdevito/events{/privacy}", "received_events_url": "https://api.github.com/users/zdevito/received_events", "type": "User", "site_admin": false}, "body": "test_shape_analysis_loop causes an infinite loop without this change. I added a note. What happens is that the c, b outputs always have size 5, so it was always thinking the sizes didn't match because it would be merging with a  dynamic size. The change makes it so that we are actually looking at whether we changed something that would be in input to the iteration.", "created_at": "2018-04-27T18:32:12Z", "updated_at": "2018-11-23T15:43:20Z", "html_url": "https://github.com/pytorch/pytorch/pull/7017#discussion_r184771790", "pull_request_url": "https://api.github.com/repos/pytorch/pytorch/pulls/7017", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/184771790"}, "html": {"href": "https://github.com/pytorch/pytorch/pull/7017#discussion_r184771790"}, "pull_request": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/7017"}}, "body_html": "<p>test_shape_analysis_loop causes an infinite loop without this change. I added a note. What happens is that the c, b outputs always have size 5, so it was always thinking the sizes didn't match because it would be merging with a  dynamic size. The change makes it so that we are actually looking at whether we changed something that would be in input to the iteration.</p>", "body_text": "test_shape_analysis_loop causes an infinite loop without this change. I added a note. What happens is that the c, b outputs always have size 5, so it was always thinking the sizes didn't match because it would be merging with a  dynamic size. The change makes it so that we are actually looking at whether we changed something that would be in input to the iteration.", "in_reply_to_id": 184650530}