{"url": "https://api.github.com/repos/pytorch/pytorch/issues/comments/380744156", "html_url": "https://github.com/pytorch/pytorch/pull/6370#issuecomment-380744156", "issue_url": "https://api.github.com/repos/pytorch/pytorch/issues/6370", "id": 380744156, "node_id": "MDEyOklzc3VlQ29tbWVudDM4MDc0NDE1Ng==", "user": {"login": "apaszke", "id": 4583066, "node_id": "MDQ6VXNlcjQ1ODMwNjY=", "avatar_url": "https://avatars3.githubusercontent.com/u/4583066?v=4", "gravatar_id": "", "url": "https://api.github.com/users/apaszke", "html_url": "https://github.com/apaszke", "followers_url": "https://api.github.com/users/apaszke/followers", "following_url": "https://api.github.com/users/apaszke/following{/other_user}", "gists_url": "https://api.github.com/users/apaszke/gists{/gist_id}", "starred_url": "https://api.github.com/users/apaszke/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/apaszke/subscriptions", "organizations_url": "https://api.github.com/users/apaszke/orgs", "repos_url": "https://api.github.com/users/apaszke/repos", "events_url": "https://api.github.com/users/apaszke/events{/privacy}", "received_events_url": "https://api.github.com/users/apaszke/received_events", "type": "User", "site_admin": false}, "created_at": "2018-04-12T09:47:36Z", "updated_at": "2018-04-12T09:48:33Z", "author_association": "MEMBER", "body_html": "<p><a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=1656541\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/Evpok\">@Evpok</a> The reason to avoid always printing full tensors is that the size of the printout on real world tasks can easily reach megabytes, and just the formatting takes around a minute. I wouldn't argue that <code>__str__</code> is sufficient, because if you e.g. have a <code>list</code> of tensors, then the list will use its <code>__str__</code>, which in turn calls <code>__repr__</code> of its elems, and would give you that huge printout that you most likely don't want and need.</p>\n<p>There are better ways of serializing large arrays, and if you still need this, then you can always raise the summary threshold to some really large number.</p>", "body_text": "@Evpok The reason to avoid always printing full tensors is that the size of the printout on real world tasks can easily reach megabytes, and just the formatting takes around a minute. I wouldn't argue that __str__ is sufficient, because if you e.g. have a list of tensors, then the list will use its __str__, which in turn calls __repr__ of its elems, and would give you that huge printout that you most likely don't want and need.\nThere are better ways of serializing large arrays, and if you still need this, then you can always raise the summary threshold to some really large number.", "body": "@Evpok The reason to avoid always printing full tensors is that the size of the printout on real world tasks can easily reach megabytes, and just the formatting takes around a minute. I wouldn't argue that `__str__` is sufficient, because if you e.g. have a `list` of tensors, then the list will use its `__str__`, which in turn calls `__repr__` of its elems, and would give you that huge printout that you most likely don't want and need.\r\n\r\nThere are better ways of serializing large arrays, and if you still need this, then you can always raise the summary threshold to some really large number."}