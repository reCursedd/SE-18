{"url": "https://api.github.com/repos/pytorch/pytorch/issues/comments/380720062", "html_url": "https://github.com/pytorch/pytorch/pull/6370#issuecomment-380720062", "issue_url": "https://api.github.com/repos/pytorch/pytorch/issues/6370", "id": 380720062, "node_id": "MDEyOklzc3VlQ29tbWVudDM4MDcyMDA2Mg==", "user": {"login": "fmassa", "id": 9110200, "node_id": "MDQ6VXNlcjkxMTAyMDA=", "avatar_url": "https://avatars2.githubusercontent.com/u/9110200?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fmassa", "html_url": "https://github.com/fmassa", "followers_url": "https://api.github.com/users/fmassa/followers", "following_url": "https://api.github.com/users/fmassa/following{/other_user}", "gists_url": "https://api.github.com/users/fmassa/gists{/gist_id}", "starred_url": "https://api.github.com/users/fmassa/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fmassa/subscriptions", "organizations_url": "https://api.github.com/users/fmassa/orgs", "repos_url": "https://api.github.com/users/fmassa/repos", "events_url": "https://api.github.com/users/fmassa/events{/privacy}", "received_events_url": "https://api.github.com/users/fmassa/received_events", "type": "User", "site_admin": false}, "created_at": "2018-04-12T08:23:14Z", "updated_at": "2018-04-12T08:23:14Z", "author_association": "MEMBER", "body_html": "<p>The reason why it's valuable to have such complete <code>repr</code> is that one can just copy-paste the output of <code>repr</code> to create a new tensor, as in numpy.<br>\nThe current way of printing tensors returns something like</p>\n<div class=\"highlight highlight-source-python\"><pre>In [<span class=\"pl-c1\">2</span>]: torch.rand(<span class=\"pl-c1\">3</span>)\nOut[<span class=\"pl-c1\">2</span>]:\n\n <span class=\"pl-c1\">0.6747</span>\n <span class=\"pl-c1\">0.8760</span>\n <span class=\"pl-c1\">0.3445</span>\n[torch.FloatTensor of size (<span class=\"pl-c1\">3</span>,)]</pre></div>\n<p>and if I ask you to go get those numbers in your interpreter, you need to remove the new lines and add commas. The numpy representation, however, allows for a simple copy-paste</p>\n<div class=\"highlight highlight-source-python\"><pre>In [<span class=\"pl-c1\">4</span>]: np.random.rand(<span class=\"pl-c1\">3</span>)\nOut[<span class=\"pl-c1\">4</span>]: array([<span class=\"pl-c1\">0.55757368</span>, <span class=\"pl-c1\">0.7748524</span> , <span class=\"pl-c1\">0.13135969</span>])</pre></div>", "body_text": "The reason why it's valuable to have such complete repr is that one can just copy-paste the output of repr to create a new tensor, as in numpy.\nThe current way of printing tensors returns something like\nIn [2]: torch.rand(3)\nOut[2]:\n\n 0.6747\n 0.8760\n 0.3445\n[torch.FloatTensor of size (3,)]\nand if I ask you to go get those numbers in your interpreter, you need to remove the new lines and add commas. The numpy representation, however, allows for a simple copy-paste\nIn [4]: np.random.rand(3)\nOut[4]: array([0.55757368, 0.7748524 , 0.13135969])", "body": "The reason why it's valuable to have such complete `repr` is that one can just copy-paste the output of `repr` to create a new tensor, as in numpy.\r\nThe current way of printing tensors returns something like\r\n```python\r\nIn [2]: torch.rand(3)\r\nOut[2]:\r\n\r\n 0.6747\r\n 0.8760\r\n 0.3445\r\n[torch.FloatTensor of size (3,)]\r\n```\r\nand if I ask you to go get those numbers in your interpreter, you need to remove the new lines and add commas. The numpy representation, however, allows for a simple copy-paste\r\n```python\r\nIn [4]: np.random.rand(3)\r\nOut[4]: array([0.55757368, 0.7748524 , 0.13135969])\r\n```"}