{"url": "https://api.github.com/repos/pytorch/pytorch/issues/5114", "repository_url": "https://api.github.com/repos/pytorch/pytorch", "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/5114/labels{/name}", "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/5114/comments", "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/5114/events", "html_url": "https://github.com/pytorch/pytorch/pull/5114", "id": 295282487, "node_id": "MDExOlB1bGxSZXF1ZXN0MTY3ODAxMjM5", "number": 5114, "title": "Allow and warn when indexing a zero-dim Variable", "user": {"login": "colesbury", "id": 655866, "node_id": "MDQ6VXNlcjY1NTg2Ng==", "avatar_url": "https://avatars1.githubusercontent.com/u/655866?v=4", "gravatar_id": "", "url": "https://api.github.com/users/colesbury", "html_url": "https://github.com/colesbury", "followers_url": "https://api.github.com/users/colesbury/followers", "following_url": "https://api.github.com/users/colesbury/following{/other_user}", "gists_url": "https://api.github.com/users/colesbury/gists{/gist_id}", "starred_url": "https://api.github.com/users/colesbury/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/colesbury/subscriptions", "organizations_url": "https://api.github.com/users/colesbury/orgs", "repos_url": "https://api.github.com/users/colesbury/repos", "events_url": "https://api.github.com/users/colesbury/events{/privacy}", "received_events_url": "https://api.github.com/users/colesbury/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2018-02-07T20:32:11Z", "updated_at": "2018-11-23T15:39:24Z", "closed_at": "2018-02-12T22:50:20Z", "author_association": "MEMBER", "pull_request": {"url": "https://api.github.com/repos/pytorch/pytorch/pulls/5114", "html_url": "https://github.com/pytorch/pytorch/pull/5114", "diff_url": "https://github.com/pytorch/pytorch/pull/5114.diff", "patch_url": "https://github.com/pytorch/pytorch/pull/5114.patch"}, "body_html": "<pre><code>This better maintains backwards compatibility when Tensors and Variables\nare merged. For example:\n\n   &gt;&gt;&gt; loss = var.sum().data[0]\n\nCurrently, `var.sum().data` is 1-dim so indexing. Once scalars are\nenabled and Variable and Tensor are merged it will be zero-dim. This\nchange allows that expression to continue working (with a warning). In\nthe future, the canonical way to compute that expression will be:\n\n   &gt;&gt;&gt; loss = float(var.sum())\n\nOr an equivalent alternative:\n\n   &gt;&gt;&gt; loss = var.sum().item()\n\nAlso fixes a few error cases.\n</code></pre>", "body_text": "This better maintains backwards compatibility when Tensors and Variables\nare merged. For example:\n\n   >>> loss = var.sum().data[0]\n\nCurrently, `var.sum().data` is 1-dim so indexing. Once scalars are\nenabled and Variable and Tensor are merged it will be zero-dim. This\nchange allows that expression to continue working (with a warning). In\nthe future, the canonical way to compute that expression will be:\n\n   >>> loss = float(var.sum())\n\nOr an equivalent alternative:\n\n   >>> loss = var.sum().item()\n\nAlso fixes a few error cases.", "body": "```\r\nThis better maintains backwards compatibility when Tensors and Variables\r\nare merged. For example:\r\n\r\n   >>> loss = var.sum().data[0]\r\n\r\nCurrently, `var.sum().data` is 1-dim so indexing. Once scalars are\r\nenabled and Variable and Tensor are merged it will be zero-dim. This\r\nchange allows that expression to continue working (with a warning). In\r\nthe future, the canonical way to compute that expression will be:\r\n\r\n   >>> loss = float(var.sum())\r\n\r\nOr an equivalent alternative:\r\n\r\n   >>> loss = var.sum().item()\r\n\r\nAlso fixes a few error cases.\r\n```"}