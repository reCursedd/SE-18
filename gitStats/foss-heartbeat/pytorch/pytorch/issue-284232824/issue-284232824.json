{"url": "https://api.github.com/repos/pytorch/pytorch/issues/4320", "repository_url": "https://api.github.com/repos/pytorch/pytorch", "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/4320/labels{/name}", "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/4320/comments", "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/4320/events", "html_url": "https://github.com/pytorch/pytorch/issues/4320", "id": 284232824, "node_id": "MDU6SXNzdWUyODQyMzI4MjQ=", "number": 4320, "title": "torch.std NaN gradient", "user": {"login": "elbaro", "id": 1851290, "node_id": "MDQ6VXNlcjE4NTEyOTA=", "avatar_url": "https://avatars3.githubusercontent.com/u/1851290?v=4", "gravatar_id": "", "url": "https://api.github.com/users/elbaro", "html_url": "https://github.com/elbaro", "followers_url": "https://api.github.com/users/elbaro/followers", "following_url": "https://api.github.com/users/elbaro/following{/other_user}", "gists_url": "https://api.github.com/users/elbaro/gists{/gist_id}", "starred_url": "https://api.github.com/users/elbaro/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/elbaro/subscriptions", "organizations_url": "https://api.github.com/users/elbaro/orgs", "repos_url": "https://api.github.com/users/elbaro/repos", "events_url": "https://api.github.com/users/elbaro/events{/privacy}", "received_events_url": "https://api.github.com/users/elbaro/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2017-12-22T19:13:19Z", "updated_at": "2017-12-22T19:13:19Z", "closed_at": null, "author_association": "NONE", "body_html": "<p><code>torch.std(x)</code> gives NaN gradients at <code>x=0</code>.</p>\n<div class=\"highlight highlight-source-python\"><pre><span class=\"pl-k\">import</span> torch\n<span class=\"pl-k\">from</span> torch.autograd.variable <span class=\"pl-k\">import</span> Variable\n<span class=\"pl-k\">import</span> torch.nn.functional <span class=\"pl-k\">as</span> F\n\na <span class=\"pl-k\">=</span> Variable(torch.FloatTensor(<span class=\"pl-c1\">16</span>,<span class=\"pl-c1\">3</span>,<span class=\"pl-c1\">64</span>,<span class=\"pl-c1\">64</span>).zero_(),<span class=\"pl-v\">requires_grad</span><span class=\"pl-k\">=</span><span class=\"pl-c1\">True</span>)\n\n<span class=\"pl-c\"><span class=\"pl-c\">#</span> b = a.std(dim=0).mean()  # NaN gradients</span>\n<span class=\"pl-c\"><span class=\"pl-c\">#</span> b = (a - a.mean(dim=0,keepdim=True)).norm(p=2,dim=0).mean() / (15**0.5)  # 0 gradients</span>\n\nb.backward()\n\n<span class=\"pl-c1\">print</span>(a.grad.data)</pre></div>\n<p>related <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load issue title\" data-id=\"250308860\" data-permission-text=\"Issue title is private\" data-url=\"https://github.com/pytorch/pytorch/issues/2421\" data-hovercard-type=\"issue\" data-hovercard-url=\"/pytorch/pytorch/issues/2421/hovercard\" href=\"https://github.com/pytorch/pytorch/issues/2421\">#2421</a> <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load issue title\" data-id=\"268098437\" data-permission-text=\"Issue title is private\" data-url=\"https://github.com/pytorch/pytorch/issues/3264\" data-hovercard-type=\"issue\" data-hovercard-url=\"/pytorch/pytorch/issues/3264/hovercard\" href=\"https://github.com/pytorch/pytorch/issues/3264\">#3264</a></p>", "body_text": "torch.std(x) gives NaN gradients at x=0.\nimport torch\nfrom torch.autograd.variable import Variable\nimport torch.nn.functional as F\n\na = Variable(torch.FloatTensor(16,3,64,64).zero_(),requires_grad=True)\n\n# b = a.std(dim=0).mean()  # NaN gradients\n# b = (a - a.mean(dim=0,keepdim=True)).norm(p=2,dim=0).mean() / (15**0.5)  # 0 gradients\n\nb.backward()\n\nprint(a.grad.data)\nrelated #2421 #3264", "body": "`torch.std(x)` gives NaN gradients at `x=0`.\r\n\r\n```py\r\nimport torch\r\nfrom torch.autograd.variable import Variable\r\nimport torch.nn.functional as F\r\n\r\na = Variable(torch.FloatTensor(16,3,64,64).zero_(),requires_grad=True)\r\n\r\n# b = a.std(dim=0).mean()  # NaN gradients\r\n# b = (a - a.mean(dim=0,keepdim=True)).norm(p=2,dim=0).mean() / (15**0.5)  # 0 gradients\r\n\r\nb.backward()\r\n\r\nprint(a.grad.data)\r\n```\r\n\r\nrelated #2421 #3264\r\n"}