{"url": "https://api.github.com/repos/pytorch/pytorch/issues/8955", "repository_url": "https://api.github.com/repos/pytorch/pytorch", "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/8955/labels{/name}", "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/8955/comments", "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/8955/events", "html_url": "https://github.com/pytorch/pytorch/pull/8955", "id": 336341737, "node_id": "MDExOlB1bGxSZXF1ZXN0MTk3ODE3NTk4", "number": 8955, "title": "[Caffe2] Avoid iomp/gomp clash when building IDEEP ops", "user": {"login": "yinghai", "id": 1100089, "node_id": "MDQ6VXNlcjExMDAwODk=", "avatar_url": "https://avatars1.githubusercontent.com/u/1100089?v=4", "gravatar_id": "", "url": "https://api.github.com/users/yinghai", "html_url": "https://github.com/yinghai", "followers_url": "https://api.github.com/users/yinghai/followers", "following_url": "https://api.github.com/users/yinghai/following{/other_user}", "gists_url": "https://api.github.com/users/yinghai/gists{/gist_id}", "starred_url": "https://api.github.com/users/yinghai/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/yinghai/subscriptions", "organizations_url": "https://api.github.com/users/yinghai/orgs", "repos_url": "https://api.github.com/users/yinghai/repos", "events_url": "https://api.github.com/users/yinghai/events{/privacy}", "received_events_url": "https://api.github.com/users/yinghai/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2018-06-27T18:35:25Z", "updated_at": "2018-11-23T15:46:30Z", "closed_at": "2018-06-28T04:25:44Z", "author_association": "CONTRIBUTOR", "pull_request": {"url": "https://api.github.com/repos/pytorch/pytorch/pulls/8955", "html_url": "https://github.com/pytorch/pytorch/pull/8955", "diff_url": "https://github.com/pytorch/pytorch/pull/8955.diff", "patch_url": "https://github.com/pytorch/pytorch/pull/8955.patch"}, "body_html": "<p>This PR does 3 things</p>\n<ul>\n<li>Reorder the search order of <code>intel_lp64</code> and <code>gf_lp64</code> as the first one is more essential and should have high priority.</li>\n<li>Avoid repetitive searching of MKL libraries in <code>ideep</code> and <code>mkldnn</code> submodule if we already found those in <code>FindMKL</code></li>\n<li>Avoid adding more MKL dependencies to IDEEP if MKL is also found.</li>\n</ul>\n<p>TODO: provide an option for user to chose iomp or gomp.</p>", "body_text": "This PR does 3 things\n\nReorder the search order of intel_lp64 and gf_lp64 as the first one is more essential and should have high priority.\nAvoid repetitive searching of MKL libraries in ideep and mkldnn submodule if we already found those in FindMKL\nAvoid adding more MKL dependencies to IDEEP if MKL is also found.\n\nTODO: provide an option for user to chose iomp or gomp.", "body": "This PR does 3 things\r\n- Reorder the search order of `intel_lp64` and `gf_lp64` as the first one is more essential and should have high priority. \r\n- Avoid repetitive searching of MKL libraries in `ideep` and `mkldnn` submodule if we already found those in `FindMKL`\r\n- Avoid adding more MKL dependencies to IDEEP if MKL is also found. \r\n\r\nTODO: provide an option for user to chose iomp or gomp. "}