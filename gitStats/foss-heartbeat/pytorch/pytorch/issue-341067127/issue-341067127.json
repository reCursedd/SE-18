{"url": "https://api.github.com/repos/pytorch/pytorch/issues/9422", "repository_url": "https://api.github.com/repos/pytorch/pytorch", "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/9422/labels{/name}", "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/9422/comments", "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/9422/events", "html_url": "https://github.com/pytorch/pytorch/pull/9422", "id": 341067127, "node_id": "MDExOlB1bGxSZXF1ZXN0MjAxMzI4NTM0", "number": 9422, "title": "[JIT] allow reading numeric types and tensor attribute objects from all module", "user": {"login": "zasdfgbnm", "id": 1032377, "node_id": "MDQ6VXNlcjEwMzIzNzc=", "avatar_url": "https://avatars2.githubusercontent.com/u/1032377?v=4", "gravatar_id": "", "url": "https://api.github.com/users/zasdfgbnm", "html_url": "https://github.com/zasdfgbnm", "followers_url": "https://api.github.com/users/zasdfgbnm/followers", "following_url": "https://api.github.com/users/zasdfgbnm/following{/other_user}", "gists_url": "https://api.github.com/users/zasdfgbnm/gists{/gist_id}", "starred_url": "https://api.github.com/users/zasdfgbnm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/zasdfgbnm/subscriptions", "organizations_url": "https://api.github.com/users/zasdfgbnm/orgs", "repos_url": "https://api.github.com/users/zasdfgbnm/repos", "events_url": "https://api.github.com/users/zasdfgbnm/events{/privacy}", "received_events_url": "https://api.github.com/users/zasdfgbnm/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 679953983, "node_id": "MDU6TGFiZWw2Nzk5NTM5ODM=", "url": "https://api.github.com/repos/pytorch/pytorch/labels/jit", "name": "jit", "color": "c5def5", "default": false}, {"id": 559719279, "node_id": "MDU6TGFiZWw1NTk3MTkyNzk=", "url": "https://api.github.com/repos/pytorch/pytorch/labels/ready%20for%20review", "name": "ready for review", "color": "b60205", "default": false}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 9, "created_at": "2018-07-13T15:40:49Z", "updated_at": "2018-09-26T02:06:36Z", "closed_at": "2018-09-26T02:06:36Z", "author_association": "CONTRIBUTOR", "pull_request": {"url": "https://api.github.com/repos/pytorch/pytorch/pulls/9422", "html_url": "https://github.com/pytorch/pytorch/pull/9422", "diff_url": "https://github.com/pytorch/pytorch/pull/9422.diff", "patch_url": "https://github.com/pytorch/pytorch/pull/9422.patch"}, "body_html": "<p>Currently JIT can only resolve from <code>torch</code> and <code>torch.nn.functional</code>. This allow JIT to resolve references from other modules. Such as, to allow <code>@script</code> functions like:</p>\n<div class=\"highlight highlight-source-python\"><pre><span class=\"pl-k\">import</span> torch\n<span class=\"pl-k\">import</span> math\n<span class=\"pl-k\">import</span> numpy\n\na <span class=\"pl-k\">=</span> torch.tensor(<span class=\"pl-c1\">1.0</span>)\n\n<span class=\"pl-en\">@torch.jit.script</span>\n<span class=\"pl-k\">def</span> <span class=\"pl-en\">f</span>(<span class=\"pl-smi\">x</span>):\n    <span class=\"pl-k\">return</span> math.pi <span class=\"pl-k\">*</span> x\n\n<span class=\"pl-en\">@torch.jit.script</span>\n<span class=\"pl-k\">def</span> <span class=\"pl-en\">g</span>(<span class=\"pl-smi\">x</span>):\n    <span class=\"pl-k\">return</span> numpy.pi <span class=\"pl-k\">*</span> x\n\n<span class=\"pl-c1\">print</span>(f(a))\n<span class=\"pl-c1\">print</span>(g(a))</pre></div>", "body_text": "Currently JIT can only resolve from torch and torch.nn.functional. This allow JIT to resolve references from other modules. Such as, to allow @script functions like:\nimport torch\nimport math\nimport numpy\n\na = torch.tensor(1.0)\n\n@torch.jit.script\ndef f(x):\n    return math.pi * x\n\n@torch.jit.script\ndef g(x):\n    return numpy.pi * x\n\nprint(f(a))\nprint(g(a))", "body": "Currently JIT can only resolve from `torch` and `torch.nn.functional`. This allow JIT to resolve references from other modules. Such as, to allow `@script` functions like:\r\n```python\r\nimport torch\r\nimport math\r\nimport numpy\r\n\r\na = torch.tensor(1.0)\r\n\r\n@torch.jit.script\r\ndef f(x):\r\n    return math.pi * x\r\n\r\n@torch.jit.script\r\ndef g(x):\r\n    return numpy.pi * x\r\n\r\nprint(f(a))\r\nprint(g(a))\r\n```"}