{"url": "https://api.github.com/repos/pytorch/pytorch/issues/comments/375124913", "html_url": "https://github.com/pytorch/pytorch/pull/5511#issuecomment-375124913", "issue_url": "https://api.github.com/repos/pytorch/pytorch/issues/5511", "id": 375124913, "node_id": "MDEyOklzc3VlQ29tbWVudDM3NTEyNDkxMw==", "user": {"login": "Dorimer", "id": 22355406, "node_id": "MDQ6VXNlcjIyMzU1NDA2", "avatar_url": "https://avatars1.githubusercontent.com/u/22355406?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Dorimer", "html_url": "https://github.com/Dorimer", "followers_url": "https://api.github.com/users/Dorimer/followers", "following_url": "https://api.github.com/users/Dorimer/following{/other_user}", "gists_url": "https://api.github.com/users/Dorimer/gists{/gist_id}", "starred_url": "https://api.github.com/users/Dorimer/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Dorimer/subscriptions", "organizations_url": "https://api.github.com/users/Dorimer/orgs", "repos_url": "https://api.github.com/users/Dorimer/repos", "events_url": "https://api.github.com/users/Dorimer/events{/privacy}", "received_events_url": "https://api.github.com/users/Dorimer/received_events", "type": "User", "site_admin": false}, "created_at": "2018-03-21T23:06:33Z", "updated_at": "2018-03-21T23:08:55Z", "author_association": "NONE", "body_html": "<p><a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=5674597\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/SsnL\">@SsnL</a></p>\n<blockquote>\n<p>The fix is not ideal.</p>\n</blockquote>\n<p>This is not an error, because it is a formal bilinear interpolation behaviour, which strictly follows the definition in Wikipedia. It is also identical with caffe's upsampling as shown here: <a href=\"https://gist.github.com/Dorimer/93470646cdac125b36ab54e742796571\">https://gist.github.com/Dorimer/93470646cdac125b36ab54e742796571</a><br>\nYes, it may give questionable results at a first glance, but I can show that this is correct. Let's look at the first row's pixels, their values and their horizontal coordinates (vertical can be omitted because we are next to the border). For example, the 2nd output pixel (located at 0.75) has a value of 1.25 because it is an interpolation between the 1st input pixel (located at 0.5 with value 1) and a 2nd input pixel (located at 1.5 with value 2). So, it is 1*(1-(0.75-0.5))+2*(1-(1.5-0.75))=0.75+0.5=1.25<br>\nIf we talk about <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load issue title\" data-id=\"307410160\" data-permission-text=\"Issue title is private\" data-url=\"https://github.com/pytorch/pytorch/issues/5927\" data-hovercard-type=\"pull_request\" data-hovercard-url=\"/pytorch/pytorch/pull/5927/hovercard\" href=\"https://github.com/pytorch/pytorch/pull/5927\">#5927</a>, what if align_corners=False could be done with <code>const Acctype h1r = (h2 &gt; 0) ? rheight * (h2 - Acctype(0.5)) : Acctype(0);</code> to preserve formal behaviour and align_corners=True with <code>const Acctype h1r = rheight * h2;</code>?</p>", "body_text": "@SsnL\n\nThe fix is not ideal.\n\nThis is not an error, because it is a formal bilinear interpolation behaviour, which strictly follows the definition in Wikipedia. It is also identical with caffe's upsampling as shown here: https://gist.github.com/Dorimer/93470646cdac125b36ab54e742796571\nYes, it may give questionable results at a first glance, but I can show that this is correct. Let's look at the first row's pixels, their values and their horizontal coordinates (vertical can be omitted because we are next to the border). For example, the 2nd output pixel (located at 0.75) has a value of 1.25 because it is an interpolation between the 1st input pixel (located at 0.5 with value 1) and a 2nd input pixel (located at 1.5 with value 2). So, it is 1*(1-(0.75-0.5))+2*(1-(1.5-0.75))=0.75+0.5=1.25\nIf we talk about #5927, what if align_corners=False could be done with const Acctype h1r = (h2 > 0) ? rheight * (h2 - Acctype(0.5)) : Acctype(0); to preserve formal behaviour and align_corners=True with const Acctype h1r = rheight * h2;?", "body": "@SsnL  \r\n> The fix is not ideal.\r\n\r\nThis is not an error, because it is a formal bilinear interpolation behaviour, which strictly follows the definition in Wikipedia. It is also identical with caffe's upsampling as shown here: https://gist.github.com/Dorimer/93470646cdac125b36ab54e742796571 \r\nYes, it may give questionable results at a first glance, but I can show that this is correct. Let's look at the first row's pixels, their values and their horizontal coordinates (vertical can be omitted because we are next to the border). For example, the 2nd output pixel (located at 0.75) has a value of 1.25 because it is an interpolation between the 1st input pixel (located at 0.5 with value 1) and a 2nd input pixel (located at 1.5 with value 2). So, it is 1*(1-(0.75-0.5))+2*(1-(1.5-0.75))=0.75+0.5=1.25\r\nIf we talk about #5927, what if align_corners=False could be done with `const Acctype h1r = (h2 > 0) ? rheight * (h2 - Acctype(0.5)) : Acctype(0);` to preserve formal behaviour and align_corners=True with `const Acctype h1r = rheight * h2;`?"}