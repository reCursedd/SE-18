{"url": "https://api.github.com/repos/pytorch/pytorch/issues/3679", "repository_url": "https://api.github.com/repos/pytorch/pytorch", "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/3679/labels{/name}", "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/3679/comments", "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/3679/events", "html_url": "https://github.com/pytorch/pytorch/pull/3679", "id": 273592031, "node_id": "MDExOlB1bGxSZXF1ZXN0MTUyMzU4MTIx", "number": 3679, "title": "Fix a reference cycle when in-place ops on views save the output", "user": {"login": "colesbury", "id": 655866, "node_id": "MDQ6VXNlcjY1NTg2Ng==", "avatar_url": "https://avatars1.githubusercontent.com/u/655866?v=4", "gravatar_id": "", "url": "https://api.github.com/users/colesbury", "html_url": "https://github.com/colesbury", "followers_url": "https://api.github.com/users/colesbury/followers", "following_url": "https://api.github.com/users/colesbury/following{/other_user}", "gists_url": "https://api.github.com/users/colesbury/gists{/gist_id}", "starred_url": "https://api.github.com/users/colesbury/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/colesbury/subscriptions", "organizations_url": "https://api.github.com/users/colesbury/orgs", "repos_url": "https://api.github.com/users/colesbury/repos", "events_url": "https://api.github.com/users/colesbury/events{/privacy}", "received_events_url": "https://api.github.com/users/colesbury/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2017-11-13T21:55:47Z", "updated_at": "2018-11-23T15:36:32Z", "closed_at": "2017-11-15T20:19:42Z", "author_association": "MEMBER", "pull_request": {"url": "https://api.github.com/repos/pytorch/pytorch/pulls/3679", "html_url": "https://github.com/pytorch/pytorch/pull/3679", "diff_url": "https://github.com/pytorch/pytorch/pull/3679.diff", "patch_url": "https://github.com/pytorch/pytorch/pull/3679.patch"}, "body_html": "<pre><code>Previously, an in-place operation that saves its output (such as\nrelu/threshold) would create a reference cycle when applied to the a\nview. There were two cycles created:\n\n1) The cycle base.grad_fn.fn.input_.base\n   base.grad_fn is a CopySlices\n   base.grad_fn.fn is ThresholdBackward\n   base.grad_fn.fn.input_ is a SavedVariable with base pointing to base\n\n2) The cycle base.grad_fn.fn.input_.grad_fn.next_functions[0]\n   base.grad_fn.fn.input_.grad_fn is AsStridedBackward\n   and next_functions[0] points to base.grad_fn\n\nGenerally, we avoid cycles because the AD graph is mostly immutable. Two\nnotable exceptions are:\n\na) Variable.grad_fn can change to point to a new grad_fn\nb) SavedVariables in a function can be set after the function is created\n\nThe first case is not a problem if grad_fns do not hold strong references\nto Variables. Removing \"base\" from SavedVariable removes the strong ref.\n\nFor the second case, we need to avoid saving the grad_fn of outputs. We\nwere incorrectly saving the grad_fns of outputs when they were the\nresult of in-place ops on views.\n</code></pre>", "body_text": "Previously, an in-place operation that saves its output (such as\nrelu/threshold) would create a reference cycle when applied to the a\nview. There were two cycles created:\n\n1) The cycle base.grad_fn.fn.input_.base\n   base.grad_fn is a CopySlices\n   base.grad_fn.fn is ThresholdBackward\n   base.grad_fn.fn.input_ is a SavedVariable with base pointing to base\n\n2) The cycle base.grad_fn.fn.input_.grad_fn.next_functions[0]\n   base.grad_fn.fn.input_.grad_fn is AsStridedBackward\n   and next_functions[0] points to base.grad_fn\n\nGenerally, we avoid cycles because the AD graph is mostly immutable. Two\nnotable exceptions are:\n\na) Variable.grad_fn can change to point to a new grad_fn\nb) SavedVariables in a function can be set after the function is created\n\nThe first case is not a problem if grad_fns do not hold strong references\nto Variables. Removing \"base\" from SavedVariable removes the strong ref.\n\nFor the second case, we need to avoid saving the grad_fn of outputs. We\nwere incorrectly saving the grad_fns of outputs when they were the\nresult of in-place ops on views.", "body": "```\r\nPreviously, an in-place operation that saves its output (such as\r\nrelu/threshold) would create a reference cycle when applied to the a\r\nview. There were two cycles created:\r\n\r\n1) The cycle base.grad_fn.fn.input_.base\r\n   base.grad_fn is a CopySlices\r\n   base.grad_fn.fn is ThresholdBackward\r\n   base.grad_fn.fn.input_ is a SavedVariable with base pointing to base\r\n\r\n2) The cycle base.grad_fn.fn.input_.grad_fn.next_functions[0]\r\n   base.grad_fn.fn.input_.grad_fn is AsStridedBackward\r\n   and next_functions[0] points to base.grad_fn\r\n\r\nGenerally, we avoid cycles because the AD graph is mostly immutable. Two\r\nnotable exceptions are:\r\n\r\na) Variable.grad_fn can change to point to a new grad_fn\r\nb) SavedVariables in a function can be set after the function is created\r\n\r\nThe first case is not a problem if grad_fns do not hold strong references\r\nto Variables. Removing \"base\" from SavedVariable removes the strong ref.\r\n\r\nFor the second case, we need to avoid saving the grad_fn of outputs. We\r\nwere incorrectly saving the grad_fns of outputs when they were the\r\nresult of in-place ops on views.\r\n```"}