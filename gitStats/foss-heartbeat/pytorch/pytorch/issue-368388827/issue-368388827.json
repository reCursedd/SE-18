{"url": "https://api.github.com/repos/pytorch/pytorch/issues/12498", "repository_url": "https://api.github.com/repos/pytorch/pytorch", "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/12498/labels{/name}", "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/12498/comments", "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/12498/events", "html_url": "https://github.com/pytorch/pytorch/issues/12498", "id": 368388827, "node_id": "MDU6SXNzdWUzNjgzODg4Mjc=", "number": 12498, "title": "Support calculating grad for dense in sparse @ dense ", "user": {"login": "nkolot", "id": 31786013, "node_id": "MDQ6VXNlcjMxNzg2MDEz", "avatar_url": "https://avatars3.githubusercontent.com/u/31786013?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nkolot", "html_url": "https://github.com/nkolot", "followers_url": "https://api.github.com/users/nkolot/followers", "following_url": "https://api.github.com/users/nkolot/following{/other_user}", "gists_url": "https://api.github.com/users/nkolot/gists{/gist_id}", "starred_url": "https://api.github.com/users/nkolot/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nkolot/subscriptions", "organizations_url": "https://api.github.com/users/nkolot/orgs", "repos_url": "https://api.github.com/users/nkolot/repos", "events_url": "https://api.github.com/users/nkolot/events{/privacy}", "received_events_url": "https://api.github.com/users/nkolot/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 679954154, "node_id": "MDU6TGFiZWw2Nzk5NTQxNTQ=", "url": "https://api.github.com/repos/pytorch/pytorch/labels/sparse", "name": "sparse", "color": "bfd4f2", "default": false}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2018-10-09T20:42:53Z", "updated_at": "2018-10-18T02:02:47Z", "closed_at": null, "author_association": "NONE", "body_html": "<h2><g-emoji class=\"g-emoji\" alias=\"bug\" fallback-src=\"https://assets-cdn.github.com/images/icons/emoji/unicode/1f41b.png\">\ud83d\udc1b</g-emoji> Bug</h2>\n<p>I get an error when I try to backprop through <code>torch.matmul</code> where the first matrix is a sparse matrix and the second matrix (dense) requires gradient. I am getting the following error:</p>\n<pre><code>RuntimeError: Expected object of type torch.FloatTensor but found type torch.sparse.FloatTensor for argument #2 'mat2'\n</code></pre>\n<p>Note that the sparse matrix does not require gradient in my case.</p>\n<p>More specifically backpropagating through <code>torch.matmul(A, x)</code> works fine, but it doesn't work for <code>torch.matmul(A, x.transpose(0,1))</code>. It works fine when doing <code>torch.matmul(A, x.transpose(0,1).clone())</code></p>\n<h2>To Reproduce</h2>\n<p>Steps to reproduce the behavior:</p>\n<p>Run the following script</p>\n<pre><code>import torch\nx = torch.ones(3, 3, requires_grad=True)\ni = torch.LongTensor([ [0, 1, 2], [0, 1, 2] ])\nv = torch.FloatTensor([1,1,1])\nA = torch.sparse.FloatTensor(i, v, (3,3))\ny = torch.matmul(A, x.transpose(0,1))\nloss = y.mean()\nloss.backward()\n</code></pre>\n<h2>Expected behavior</h2>\n<p>Backprop normally through this operation.</p>\n<h2>Environment</h2>\n<p>I am using <strong>pytorch/pytorch:0.4.1-cuda9-cudnn7-runtime</strong></p>\n<pre><code>PyTorch version: 0.4.1\nIs debug build: No\nCUDA used to build PyTorch: 9.0.176\n\nOS: Ubuntu 16.04.5 LTS\nGCC version: (Ubuntu 5.4.0-6ubuntu1~16.04.10) 5.4.0 20160609\nCMake version: Could not collect\n\nPython version: 3.6\nIs CUDA available: Yes\nCUDA runtime version: Could not collect\nGPU models and configuration: GPU 0: GeForce GTX TITAN Z\nNvidia driver version: 384.130\ncuDNN version: Could not collect\n\nVersions of relevant libraries:\n[pip] numpy (1.14.5)\n[pip] torch (0.4.1)\n[pip] torchvision (0.2.1)\n[conda] cuda90                    1.0                  h6433d27_0    pytorch\n[conda] pytorch                   0.4.1           py36_cuda9.0.176_cudnn7.1.2_1    pytorch\n[conda] torchvision               0.2.1                    py36_1    pytorch\n</code></pre>", "body_text": "\ud83d\udc1b Bug\nI get an error when I try to backprop through torch.matmul where the first matrix is a sparse matrix and the second matrix (dense) requires gradient. I am getting the following error:\nRuntimeError: Expected object of type torch.FloatTensor but found type torch.sparse.FloatTensor for argument #2 'mat2'\n\nNote that the sparse matrix does not require gradient in my case.\nMore specifically backpropagating through torch.matmul(A, x) works fine, but it doesn't work for torch.matmul(A, x.transpose(0,1)). It works fine when doing torch.matmul(A, x.transpose(0,1).clone())\nTo Reproduce\nSteps to reproduce the behavior:\nRun the following script\nimport torch\nx = torch.ones(3, 3, requires_grad=True)\ni = torch.LongTensor([ [0, 1, 2], [0, 1, 2] ])\nv = torch.FloatTensor([1,1,1])\nA = torch.sparse.FloatTensor(i, v, (3,3))\ny = torch.matmul(A, x.transpose(0,1))\nloss = y.mean()\nloss.backward()\n\nExpected behavior\nBackprop normally through this operation.\nEnvironment\nI am using pytorch/pytorch:0.4.1-cuda9-cudnn7-runtime\nPyTorch version: 0.4.1\nIs debug build: No\nCUDA used to build PyTorch: 9.0.176\n\nOS: Ubuntu 16.04.5 LTS\nGCC version: (Ubuntu 5.4.0-6ubuntu1~16.04.10) 5.4.0 20160609\nCMake version: Could not collect\n\nPython version: 3.6\nIs CUDA available: Yes\nCUDA runtime version: Could not collect\nGPU models and configuration: GPU 0: GeForce GTX TITAN Z\nNvidia driver version: 384.130\ncuDNN version: Could not collect\n\nVersions of relevant libraries:\n[pip] numpy (1.14.5)\n[pip] torch (0.4.1)\n[pip] torchvision (0.2.1)\n[conda] cuda90                    1.0                  h6433d27_0    pytorch\n[conda] pytorch                   0.4.1           py36_cuda9.0.176_cudnn7.1.2_1    pytorch\n[conda] torchvision               0.2.1                    py36_1    pytorch", "body": "## \ud83d\udc1b Bug\r\n\r\nI get an error when I try to backprop through `torch.matmul` where the first matrix is a sparse matrix and the second matrix (dense) requires gradient. I am getting the following error:\r\n\r\n```\r\nRuntimeError: Expected object of type torch.FloatTensor but found type torch.sparse.FloatTensor for argument #2 'mat2'\r\n```\r\n\r\nNote that the sparse matrix does not require gradient in my case.\r\n\r\nMore specifically backpropagating through `torch.matmul(A, x)` works fine, but it doesn't work for `torch.matmul(A, x.transpose(0,1))`. It works fine when doing `torch.matmul(A, x.transpose(0,1).clone())`\r\n\r\n## To Reproduce\r\n\r\nSteps to reproduce the behavior:\r\n\r\nRun the following script\r\n\r\n```\r\nimport torch\r\nx = torch.ones(3, 3, requires_grad=True)\r\ni = torch.LongTensor([ [0, 1, 2], [0, 1, 2] ])\r\nv = torch.FloatTensor([1,1,1])\r\nA = torch.sparse.FloatTensor(i, v, (3,3))\r\ny = torch.matmul(A, x.transpose(0,1))\r\nloss = y.mean()\r\nloss.backward()\r\n```\r\n\r\n## Expected behavior\r\n\r\nBackprop normally through this operation.\r\n\r\n## Environment\r\n\r\nI am using **pytorch/pytorch:0.4.1-cuda9-cudnn7-runtime**\r\n\r\n```\r\nPyTorch version: 0.4.1\r\nIs debug build: No\r\nCUDA used to build PyTorch: 9.0.176\r\n\r\nOS: Ubuntu 16.04.5 LTS\r\nGCC version: (Ubuntu 5.4.0-6ubuntu1~16.04.10) 5.4.0 20160609\r\nCMake version: Could not collect\r\n\r\nPython version: 3.6\r\nIs CUDA available: Yes\r\nCUDA runtime version: Could not collect\r\nGPU models and configuration: GPU 0: GeForce GTX TITAN Z\r\nNvidia driver version: 384.130\r\ncuDNN version: Could not collect\r\n\r\nVersions of relevant libraries:\r\n[pip] numpy (1.14.5)\r\n[pip] torch (0.4.1)\r\n[pip] torchvision (0.2.1)\r\n[conda] cuda90                    1.0                  h6433d27_0    pytorch\r\n[conda] pytorch                   0.4.1           py36_cuda9.0.176_cudnn7.1.2_1    pytorch\r\n[conda] torchvision               0.2.1                    py36_1    pytorch\r\n```"}