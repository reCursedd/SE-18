{"url": "https://api.github.com/repos/pytorch/pytorch/issues/3573", "repository_url": "https://api.github.com/repos/pytorch/pytorch", "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/3573/labels{/name}", "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/3573/comments", "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/3573/events", "html_url": "https://github.com/pytorch/pytorch/issues/3573", "id": 272345580, "node_id": "MDU6SXNzdWUyNzIzNDU1ODA=", "number": 3573, "title": "Mac OS X build with Python 3.6 fails", "user": {"login": "ezyang", "id": 13564, "node_id": "MDQ6VXNlcjEzNTY0", "avatar_url": "https://avatars0.githubusercontent.com/u/13564?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ezyang", "html_url": "https://github.com/ezyang", "followers_url": "https://api.github.com/users/ezyang/followers", "following_url": "https://api.github.com/users/ezyang/following{/other_user}", "gists_url": "https://api.github.com/users/ezyang/gists{/gist_id}", "starred_url": "https://api.github.com/users/ezyang/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ezyang/subscriptions", "organizations_url": "https://api.github.com/users/ezyang/orgs", "repos_url": "https://api.github.com/users/ezyang/repos", "events_url": "https://api.github.com/users/ezyang/events{/privacy}", "received_events_url": "https://api.github.com/users/ezyang/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": {"login": "ezyang", "id": 13564, "node_id": "MDQ6VXNlcjEzNTY0", "avatar_url": "https://avatars0.githubusercontent.com/u/13564?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ezyang", "html_url": "https://github.com/ezyang", "followers_url": "https://api.github.com/users/ezyang/followers", "following_url": "https://api.github.com/users/ezyang/following{/other_user}", "gists_url": "https://api.github.com/users/ezyang/gists{/gist_id}", "starred_url": "https://api.github.com/users/ezyang/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ezyang/subscriptions", "organizations_url": "https://api.github.com/users/ezyang/orgs", "repos_url": "https://api.github.com/users/ezyang/repos", "events_url": "https://api.github.com/users/ezyang/events{/privacy}", "received_events_url": "https://api.github.com/users/ezyang/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "ezyang", "id": 13564, "node_id": "MDQ6VXNlcjEzNTY0", "avatar_url": "https://avatars0.githubusercontent.com/u/13564?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ezyang", "html_url": "https://github.com/ezyang", "followers_url": "https://api.github.com/users/ezyang/followers", "following_url": "https://api.github.com/users/ezyang/following{/other_user}", "gists_url": "https://api.github.com/users/ezyang/gists{/gist_id}", "starred_url": "https://api.github.com/users/ezyang/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ezyang/subscriptions", "organizations_url": "https://api.github.com/users/ezyang/orgs", "repos_url": "https://api.github.com/users/ezyang/repos", "events_url": "https://api.github.com/users/ezyang/events{/privacy}", "received_events_url": "https://api.github.com/users/ezyang/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 0, "created_at": "2017-11-08T20:53:45Z", "updated_at": "2017-11-09T08:16:25Z", "closed_at": "2017-11-09T08:16:25Z", "author_association": "CONTRIBUTOR", "body_html": "<p>One representative error:</p>\n<pre><code>torch/csrc/autograd/functions/init.cpp:220:37: error: address of overloaded function 'getTupleAttr' does not match required type '_object *(_object *, void *)'\n  {(char*)\"output_padding\", (getter)getTupleAttr&lt;ConvBackwardBackward, std::vector&lt;int&gt;, ConvParams,\n                                    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\ntorch/csrc/autograd/functions/init.cpp:82:11: note: candidate template ignored: invalid explicitly-specified argument for template parameter 'Convert'\nPyObject* getTupleAttr(PyObject* obj, void* _unused)\n</code></pre>\n<p>The cause of the problem is <a class=\"commit-link\" data-hovercard-type=\"commit\" data-hovercard-url=\"https://github.com/pytorch/pytorch/commit/aa911939a328eff55c9b28b39ed3c43507ba8a2a/hovercard\" href=\"https://github.com/pytorch/pytorch/commit/aa911939a328eff55c9b28b39ed3c43507ba8a2a\"><tt>aa91193</tt></a>:</p>\n<pre><code>   {(char*)\"output_padding\", (getter)getTupleAttr&lt;ConvForward, std::vector&lt;int&gt;, ConvParams,\n-                                         &amp;ConvParams::output_padding, long, PyInt_FromLong&gt;, NULL, NULL, NULL},\n+                                         &amp;ConvParams::output_padding, int64_t, PyInt_FromLong&gt;, NULL, NULL, NULL},\n</code></pre>\n<p>It seems that on clang, changing the type parameter here is sufficient to cause template instantiation to fail.</p>\n<p>Maybe the easiest way to fix this is to write a more portable version of PyInt_FromLong (and friends) which always returns <code>int64_t</code>.</p>", "body_text": "One representative error:\ntorch/csrc/autograd/functions/init.cpp:220:37: error: address of overloaded function 'getTupleAttr' does not match required type '_object *(_object *, void *)'\n  {(char*)\"output_padding\", (getter)getTupleAttr<ConvBackwardBackward, std::vector<int>, ConvParams,\n                                    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\ntorch/csrc/autograd/functions/init.cpp:82:11: note: candidate template ignored: invalid explicitly-specified argument for template parameter 'Convert'\nPyObject* getTupleAttr(PyObject* obj, void* _unused)\n\nThe cause of the problem is aa91193:\n   {(char*)\"output_padding\", (getter)getTupleAttr<ConvForward, std::vector<int>, ConvParams,\n-                                         &ConvParams::output_padding, long, PyInt_FromLong>, NULL, NULL, NULL},\n+                                         &ConvParams::output_padding, int64_t, PyInt_FromLong>, NULL, NULL, NULL},\n\nIt seems that on clang, changing the type parameter here is sufficient to cause template instantiation to fail.\nMaybe the easiest way to fix this is to write a more portable version of PyInt_FromLong (and friends) which always returns int64_t.", "body": "One representative error:\r\n\r\n```\r\ntorch/csrc/autograd/functions/init.cpp:220:37: error: address of overloaded function 'getTupleAttr' does not match required type '_object *(_object *, void *)'\r\n  {(char*)\"output_padding\", (getter)getTupleAttr<ConvBackwardBackward, std::vector<int>, ConvParams,\r\n                                    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\ntorch/csrc/autograd/functions/init.cpp:82:11: note: candidate template ignored: invalid explicitly-specified argument for template parameter 'Convert'\r\nPyObject* getTupleAttr(PyObject* obj, void* _unused)\r\n```\r\n\r\nThe cause of the problem is aa911939a328eff55c9b28b39ed3c43507ba8a2a:\r\n\r\n```\r\n   {(char*)\"output_padding\", (getter)getTupleAttr<ConvForward, std::vector<int>, ConvParams,\r\n-                                         &ConvParams::output_padding, long, PyInt_FromLong>, NULL, NULL, NULL},\r\n+                                         &ConvParams::output_padding, int64_t, PyInt_FromLong>, NULL, NULL, NULL},\r\n```\r\n\r\nIt seems that on clang, changing the type parameter here is sufficient to cause template instantiation to fail.\r\n\r\nMaybe the easiest way to fix this is to write a more portable version of PyInt_FromLong (and friends) which always returns `int64_t`."}