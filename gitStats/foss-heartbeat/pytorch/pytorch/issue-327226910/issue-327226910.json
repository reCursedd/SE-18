{"url": "https://api.github.com/repos/pytorch/pytorch/issues/7912", "repository_url": "https://api.github.com/repos/pytorch/pytorch", "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/7912/labels{/name}", "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/7912/comments", "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/7912/events", "html_url": "https://github.com/pytorch/pytorch/issues/7912", "id": 327226910, "node_id": "MDU6SXNzdWUzMjcyMjY5MTA=", "number": 7912, "title": "[Caffe2] Operators of Detectron module not registered/compiled when built on windows", "user": {"login": "II-Matto", "id": 2261229, "node_id": "MDQ6VXNlcjIyNjEyMjk=", "avatar_url": "https://avatars0.githubusercontent.com/u/2261229?v=4", "gravatar_id": "", "url": "https://api.github.com/users/II-Matto", "html_url": "https://github.com/II-Matto", "followers_url": "https://api.github.com/users/II-Matto/followers", "following_url": "https://api.github.com/users/II-Matto/following{/other_user}", "gists_url": "https://api.github.com/users/II-Matto/gists{/gist_id}", "starred_url": "https://api.github.com/users/II-Matto/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/II-Matto/subscriptions", "organizations_url": "https://api.github.com/users/II-Matto/orgs", "repos_url": "https://api.github.com/users/II-Matto/repos", "events_url": "https://api.github.com/users/II-Matto/events{/privacy}", "received_events_url": "https://api.github.com/users/II-Matto/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 890282107, "node_id": "MDU6TGFiZWw4OTAyODIxMDc=", "url": "https://api.github.com/repos/pytorch/pytorch/labels/caffe2", "name": "caffe2", "color": "210aa8", "default": false}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2018-05-29T08:54:40Z", "updated_at": "2018-10-20T20:49:15Z", "closed_at": null, "author_association": "NONE", "body_html": "<h2>Issue description</h2>\n<p>I am using Caffe2+Detectron in Windows. After successfully building Caffe2 (with CUDA, cuDNN, OpenCV), COCOAPI and Detectron modules, I ran the <code>tools/train_net.py</code> script in Detectron, trying to train Faster R-CNN on Pascal VOC. But the following errors appeared, reporting a Detectron operator <code>AffineChannel</code> not registered. With different configurations, similar errors for other Detectron operators happen.</p>\n<pre><code>...\n  File \"D:/repo/github/Detectron_facebookresearch\\detectron\\utils\\train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"D:/repo/github/Detectron_facebookresearch\\detectron\\utils\\train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"D:/repo/github/Detectron_facebookresearch\\detectron\\modeling\\model_builder.py\", line 124, in create\n    return get_func(model_type_func)(model)\n  File \"D:/repo/github/Detectron_facebookresearch\\detectron\\modeling\\model_builder.py\", line 89, in generalized_rcnn\n    freeze_conv_body=cfg.TRAIN.FREEZE_CONV_BODY\n  File \"D:/repo/github/Detectron_facebookresearch\\detectron\\modeling\\model_builder.py\", line 229, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"D:/repo/github/Detectron_facebookresearch\\detectron\\modeling\\optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"D:/repo/github/Detectron_facebookresearch\\detectron\\modeling\\optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"D:/repo/github/Detectron_facebookresearch\\detectron\\modeling\\model_builder.py\", line 169, in _single_gpu_build_func\n    blob_conv, dim_conv, spatial_scale_conv = add_conv_body_func(model)\n  File \"D:/repo/github/Detectron_facebookresearch\\detectron\\modeling\\ResNet.py\", line 36, in add_ResNet50_conv4_body\n    return add_ResNet_convX_body(model, (3, 4, 6))\n  File \"D:/repo/github/Detectron_facebookresearch\\detectron\\modeling\\ResNet.py\", line 98, in add_ResNet_convX_body\n    p, dim_in = globals()[cfg.RESNETS.STEM_FUNC](model, 'data')\n  File \"D:/repo/github/Detectron_facebookresearch\\detectron\\modeling\\ResNet.py\", line 252, in basic_bn_stem\n    p = model.AffineChannel(p, 'res_conv1_bn', dim=dim, inplace=True)\n  File \"D:/repo/github/Detectron_facebookresearch\\detectron\\modeling\\detector.py\", line 103, in AffineChannel\n    return self.net.AffineChannel([blob_in, scale, bias], blob_in)\n  File \"D:/repo/github/pytorch/build\\caffe2\\python\\core.py\", line 2067, in __getattr__\n    \",\".join(workspace.C.nearby_opnames(op_type)) + ']'\nAttributeError: Method AffineChannel is not a registered operator. Did you mean: []\n</code></pre>\n<p>I have modified <code>import_detectron_ops()</code> in <code>detectron/utils/c2.py</code> to use my <code>caffe2_detectron_ops_gpu.dll</code> path.</p>\n<p>I have added the following path with <code>sys.path.insert(0, path)</code> in the training script.</p>\n<ul>\n<li>pytorch build directory</li>\n<li>detectron root directory</li>\n<li>COCOAPI PythonAPI directory</li>\n</ul>\n<p>I have added the following path to my <code>PATH</code> variable.</p>\n<ul>\n<li>cuDNN bin directory</li>\n<li>pytorch build bin directory (<code>pytorch/build/bin/Release</code>), which contains <code>caffe2_detectron_ops_gpu.dll</code></li>\n<li>OpenCV bin directory</li>\n</ul>\n<p>The <code>import</code> commands seem to have all been successful. So I guess the environment setting should be OK.</p>\n<p>I used the dumpbin tool to examine my <code>caffe2_detectron_ops_gpu.dll</code>, which only has a size of ~5.5MB.</p>\n<p>With the <code>EXPORTS</code> option, the results are as follows:</p>\n<pre><code>Microsoft (R) COFF/PE Dumper Version 14.00.24215.1\nCopyright (C) Microsoft Corporation.  All rights reserved.\n\n\nDump of file D:\\repo\\github\\pytorch\\build\\bin\\Release\\caffe2_detectron_ops_gpu.dll\n\nFile Type: DLL\n\n  Section contains the following exports for caffe2_detectron_ops_gpu.dll\n\n    00000000 characteristics\n    5B0CBE13 time date stamp Tue May 29 10:42:27 2018\n        0.00 version\n           1 ordinal base\n           1 number of functions\n           1 number of names\n\n    ordinal hint RVA      name\n\n          1    0 003393E8 NvOptimusEnablementCuda\n\n  Summary\n\n       13000 .data\n        1000 .gfids\n        1000 .nvFatBi\n      20C000 .nv_fatb\n       23000 .pdata\n       E6000 .rdata\n        5000 .reloc\n        1000 .rsrc\n      252000 .text\n        1000 .tls\n</code></pre>\n<p>With the <code>SYMBOLS</code> option, the results are as follows:</p>\n<pre><code>Microsoft (R) COFF/PE Dumper Version 14.00.24215.1\nCopyright (C) Microsoft Corporation.  All rights reserved.\n\n\nDump of file D:\\repo\\github\\pytorch\\build\\bin\\Release\\caffe2_detectron_ops_gpu.dll\n\nFile Type: DLL\n\n  Summary\n\n       13000 .data\n        1000 .gfids\n        1000 .nvFatBi\n      20C000 .nv_fatb\n       23000 .pdata\n       E6000 .rdata\n        5000 .reloc\n        1000 .rsrc\n      252000 .text\n        1000 .tls\n</code></pre>\n<p>Does this mean the Detectron operators are actually not compiled? If so, what could possibly be the reason and how can I make them compile?</p>\n<h2>Code example</h2>\n<ol>\n<li>Build Caffe2 with CUDA, cuDNN, OpenCV.</li>\n<li>Build COCOAPI modules.</li>\n<li>Build Detectron modules.</li>\n<li>Add all sorts of paths properly (as described above).</li>\n<li>Run <code>tools/train_net.py</code> in Detectron with proper arguments.</li>\n</ol>\n<h2>System Info</h2>\n<ul>\n<li>PyTorch or Caffe2: <strong>Caffe2</strong></li>\n<li>How you installed PyTorch (conda, pip, source): <strong>source</strong></li>\n<li>Build command you used (if compiling from source): <strong>scripts/build_windows.bat</strong></li>\n<li>OS: <strong>Windows 10 Home Edition</strong></li>\n<li>PyTorch version: (Latest clone)</li>\n<li>Python version: <strong>Python 2.7.12 :: Anaconda custom (64-bit)</strong></li>\n<li>CUDA/cuDNN version: <strong>8.0/cudnn-8.0-windows10-x64-v7</strong></li>\n<li>GPU models and configuration: (GTX 1050)</li>\n<li>GCC version (if compiling from source):</li>\n<li>CMake version: <strong>cmake-3.7.2-win64-x64</strong></li>\n<li>Versions of any other relevant libraries: <strong>Visual Studio 2015, OpenCV 3.2.0-vc14</strong></li>\n</ul>", "body_text": "Issue description\nI am using Caffe2+Detectron in Windows. After successfully building Caffe2 (with CUDA, cuDNN, OpenCV), COCOAPI and Detectron modules, I ran the tools/train_net.py script in Detectron, trying to train Faster R-CNN on Pascal VOC. But the following errors appeared, reporting a Detectron operator AffineChannel not registered. With different configurations, similar errors for other Detectron operators happen.\n...\n  File \"D:/repo/github/Detectron_facebookresearch\\detectron\\utils\\train.py\", line 53, in train_model\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\n  File \"D:/repo/github/Detectron_facebookresearch\\detectron\\utils\\train.py\", line 132, in create_model\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\n  File \"D:/repo/github/Detectron_facebookresearch\\detectron\\modeling\\model_builder.py\", line 124, in create\n    return get_func(model_type_func)(model)\n  File \"D:/repo/github/Detectron_facebookresearch\\detectron\\modeling\\model_builder.py\", line 89, in generalized_rcnn\n    freeze_conv_body=cfg.TRAIN.FREEZE_CONV_BODY\n  File \"D:/repo/github/Detectron_facebookresearch\\detectron\\modeling\\model_builder.py\", line 229, in build_generic_detection_model\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\n  File \"D:/repo/github/Detectron_facebookresearch\\detectron\\modeling\\optimizer.py\", line 40, in build_data_parallel_model\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\n  File \"D:/repo/github/Detectron_facebookresearch\\detectron\\modeling\\optimizer.py\", line 63, in _build_forward_graph\n    all_loss_gradients.update(single_gpu_build_func(model))\n  File \"D:/repo/github/Detectron_facebookresearch\\detectron\\modeling\\model_builder.py\", line 169, in _single_gpu_build_func\n    blob_conv, dim_conv, spatial_scale_conv = add_conv_body_func(model)\n  File \"D:/repo/github/Detectron_facebookresearch\\detectron\\modeling\\ResNet.py\", line 36, in add_ResNet50_conv4_body\n    return add_ResNet_convX_body(model, (3, 4, 6))\n  File \"D:/repo/github/Detectron_facebookresearch\\detectron\\modeling\\ResNet.py\", line 98, in add_ResNet_convX_body\n    p, dim_in = globals()[cfg.RESNETS.STEM_FUNC](model, 'data')\n  File \"D:/repo/github/Detectron_facebookresearch\\detectron\\modeling\\ResNet.py\", line 252, in basic_bn_stem\n    p = model.AffineChannel(p, 'res_conv1_bn', dim=dim, inplace=True)\n  File \"D:/repo/github/Detectron_facebookresearch\\detectron\\modeling\\detector.py\", line 103, in AffineChannel\n    return self.net.AffineChannel([blob_in, scale, bias], blob_in)\n  File \"D:/repo/github/pytorch/build\\caffe2\\python\\core.py\", line 2067, in __getattr__\n    \",\".join(workspace.C.nearby_opnames(op_type)) + ']'\nAttributeError: Method AffineChannel is not a registered operator. Did you mean: []\n\nI have modified import_detectron_ops() in detectron/utils/c2.py to use my caffe2_detectron_ops_gpu.dll path.\nI have added the following path with sys.path.insert(0, path) in the training script.\n\npytorch build directory\ndetectron root directory\nCOCOAPI PythonAPI directory\n\nI have added the following path to my PATH variable.\n\ncuDNN bin directory\npytorch build bin directory (pytorch/build/bin/Release), which contains caffe2_detectron_ops_gpu.dll\nOpenCV bin directory\n\nThe import commands seem to have all been successful. So I guess the environment setting should be OK.\nI used the dumpbin tool to examine my caffe2_detectron_ops_gpu.dll, which only has a size of ~5.5MB.\nWith the EXPORTS option, the results are as follows:\nMicrosoft (R) COFF/PE Dumper Version 14.00.24215.1\nCopyright (C) Microsoft Corporation.  All rights reserved.\n\n\nDump of file D:\\repo\\github\\pytorch\\build\\bin\\Release\\caffe2_detectron_ops_gpu.dll\n\nFile Type: DLL\n\n  Section contains the following exports for caffe2_detectron_ops_gpu.dll\n\n    00000000 characteristics\n    5B0CBE13 time date stamp Tue May 29 10:42:27 2018\n        0.00 version\n           1 ordinal base\n           1 number of functions\n           1 number of names\n\n    ordinal hint RVA      name\n\n          1    0 003393E8 NvOptimusEnablementCuda\n\n  Summary\n\n       13000 .data\n        1000 .gfids\n        1000 .nvFatBi\n      20C000 .nv_fatb\n       23000 .pdata\n       E6000 .rdata\n        5000 .reloc\n        1000 .rsrc\n      252000 .text\n        1000 .tls\n\nWith the SYMBOLS option, the results are as follows:\nMicrosoft (R) COFF/PE Dumper Version 14.00.24215.1\nCopyright (C) Microsoft Corporation.  All rights reserved.\n\n\nDump of file D:\\repo\\github\\pytorch\\build\\bin\\Release\\caffe2_detectron_ops_gpu.dll\n\nFile Type: DLL\n\n  Summary\n\n       13000 .data\n        1000 .gfids\n        1000 .nvFatBi\n      20C000 .nv_fatb\n       23000 .pdata\n       E6000 .rdata\n        5000 .reloc\n        1000 .rsrc\n      252000 .text\n        1000 .tls\n\nDoes this mean the Detectron operators are actually not compiled? If so, what could possibly be the reason and how can I make them compile?\nCode example\n\nBuild Caffe2 with CUDA, cuDNN, OpenCV.\nBuild COCOAPI modules.\nBuild Detectron modules.\nAdd all sorts of paths properly (as described above).\nRun tools/train_net.py in Detectron with proper arguments.\n\nSystem Info\n\nPyTorch or Caffe2: Caffe2\nHow you installed PyTorch (conda, pip, source): source\nBuild command you used (if compiling from source): scripts/build_windows.bat\nOS: Windows 10 Home Edition\nPyTorch version: (Latest clone)\nPython version: Python 2.7.12 :: Anaconda custom (64-bit)\nCUDA/cuDNN version: 8.0/cudnn-8.0-windows10-x64-v7\nGPU models and configuration: (GTX 1050)\nGCC version (if compiling from source):\nCMake version: cmake-3.7.2-win64-x64\nVersions of any other relevant libraries: Visual Studio 2015, OpenCV 3.2.0-vc14", "body": "## Issue description\r\n\r\nI am using Caffe2+Detectron in Windows. After successfully building Caffe2 (with CUDA, cuDNN, OpenCV), COCOAPI and Detectron modules, I ran the `tools/train_net.py` script in Detectron, trying to train Faster R-CNN on Pascal VOC. But the following errors appeared, reporting a Detectron operator `AffineChannel` not registered. With different configurations, similar errors for other Detectron operators happen.\r\n```\r\n...\r\n  File \"D:/repo/github/Detectron_facebookresearch\\detectron\\utils\\train.py\", line 53, in train_model\r\n    model, weights_file, start_iter, checkpoints, output_dir = create_model()\r\n  File \"D:/repo/github/Detectron_facebookresearch\\detectron\\utils\\train.py\", line 132, in create_model\r\n    model = model_builder.create(cfg.MODEL.TYPE, train=True)\r\n  File \"D:/repo/github/Detectron_facebookresearch\\detectron\\modeling\\model_builder.py\", line 124, in create\r\n    return get_func(model_type_func)(model)\r\n  File \"D:/repo/github/Detectron_facebookresearch\\detectron\\modeling\\model_builder.py\", line 89, in generalized_rcnn\r\n    freeze_conv_body=cfg.TRAIN.FREEZE_CONV_BODY\r\n  File \"D:/repo/github/Detectron_facebookresearch\\detectron\\modeling\\model_builder.py\", line 229, in build_generic_detection_model\r\n    optim.build_data_parallel_model(model, _single_gpu_build_func)\r\n  File \"D:/repo/github/Detectron_facebookresearch\\detectron\\modeling\\optimizer.py\", line 40, in build_data_parallel_model\r\n    all_loss_gradients = _build_forward_graph(model, single_gpu_build_func)\r\n  File \"D:/repo/github/Detectron_facebookresearch\\detectron\\modeling\\optimizer.py\", line 63, in _build_forward_graph\r\n    all_loss_gradients.update(single_gpu_build_func(model))\r\n  File \"D:/repo/github/Detectron_facebookresearch\\detectron\\modeling\\model_builder.py\", line 169, in _single_gpu_build_func\r\n    blob_conv, dim_conv, spatial_scale_conv = add_conv_body_func(model)\r\n  File \"D:/repo/github/Detectron_facebookresearch\\detectron\\modeling\\ResNet.py\", line 36, in add_ResNet50_conv4_body\r\n    return add_ResNet_convX_body(model, (3, 4, 6))\r\n  File \"D:/repo/github/Detectron_facebookresearch\\detectron\\modeling\\ResNet.py\", line 98, in add_ResNet_convX_body\r\n    p, dim_in = globals()[cfg.RESNETS.STEM_FUNC](model, 'data')\r\n  File \"D:/repo/github/Detectron_facebookresearch\\detectron\\modeling\\ResNet.py\", line 252, in basic_bn_stem\r\n    p = model.AffineChannel(p, 'res_conv1_bn', dim=dim, inplace=True)\r\n  File \"D:/repo/github/Detectron_facebookresearch\\detectron\\modeling\\detector.py\", line 103, in AffineChannel\r\n    return self.net.AffineChannel([blob_in, scale, bias], blob_in)\r\n  File \"D:/repo/github/pytorch/build\\caffe2\\python\\core.py\", line 2067, in __getattr__\r\n    \",\".join(workspace.C.nearby_opnames(op_type)) + ']'\r\nAttributeError: Method AffineChannel is not a registered operator. Did you mean: []\r\n```\r\n\r\nI have modified `import_detectron_ops()` in `detectron/utils/c2.py` to use my `caffe2_detectron_ops_gpu.dll` path.\r\n\r\nI have added the following path with `sys.path.insert(0, path)` in the training script.\r\n- pytorch build directory\r\n- detectron root directory\r\n- COCOAPI PythonAPI directory\r\n\r\nI have added the following path to my `PATH` variable.\r\n- cuDNN bin directory\r\n- pytorch build bin directory (`pytorch/build/bin/Release`), which contains `caffe2_detectron_ops_gpu.dll`\r\n- OpenCV bin directory\r\n\r\nThe `import` commands seem to have all been successful. So I guess the environment setting should be OK.\r\n\r\nI used the dumpbin tool to examine my `caffe2_detectron_ops_gpu.dll`, which only has a size of ~5.5MB.\r\n\r\nWith the `EXPORTS` option, the results are as follows:\r\n```\r\nMicrosoft (R) COFF/PE Dumper Version 14.00.24215.1\r\nCopyright (C) Microsoft Corporation.  All rights reserved.\r\n\r\n\r\nDump of file D:\\repo\\github\\pytorch\\build\\bin\\Release\\caffe2_detectron_ops_gpu.dll\r\n\r\nFile Type: DLL\r\n\r\n  Section contains the following exports for caffe2_detectron_ops_gpu.dll\r\n\r\n    00000000 characteristics\r\n    5B0CBE13 time date stamp Tue May 29 10:42:27 2018\r\n        0.00 version\r\n           1 ordinal base\r\n           1 number of functions\r\n           1 number of names\r\n\r\n    ordinal hint RVA      name\r\n\r\n          1    0 003393E8 NvOptimusEnablementCuda\r\n\r\n  Summary\r\n\r\n       13000 .data\r\n        1000 .gfids\r\n        1000 .nvFatBi\r\n      20C000 .nv_fatb\r\n       23000 .pdata\r\n       E6000 .rdata\r\n        5000 .reloc\r\n        1000 .rsrc\r\n      252000 .text\r\n        1000 .tls\r\n```\r\n\r\nWith the `SYMBOLS` option, the results are as follows:\r\n```\r\nMicrosoft (R) COFF/PE Dumper Version 14.00.24215.1\r\nCopyright (C) Microsoft Corporation.  All rights reserved.\r\n\r\n\r\nDump of file D:\\repo\\github\\pytorch\\build\\bin\\Release\\caffe2_detectron_ops_gpu.dll\r\n\r\nFile Type: DLL\r\n\r\n  Summary\r\n\r\n       13000 .data\r\n        1000 .gfids\r\n        1000 .nvFatBi\r\n      20C000 .nv_fatb\r\n       23000 .pdata\r\n       E6000 .rdata\r\n        5000 .reloc\r\n        1000 .rsrc\r\n      252000 .text\r\n        1000 .tls\r\n```\r\n\r\nDoes this mean the Detectron operators are actually not compiled? If so, what could possibly be the reason and how can I make them compile?\r\n\r\n## Code example\r\n\r\n1. Build Caffe2 with CUDA, cuDNN, OpenCV.\r\n2. Build COCOAPI modules.\r\n3. Build Detectron modules.\r\n4. Add all sorts of paths properly (as described above).\r\n5. Run `tools/train_net.py` in Detectron with proper arguments.\r\n\r\n## System Info\r\n\r\n- PyTorch or Caffe2: **Caffe2**\r\n- How you installed PyTorch (conda, pip, source): **source**\r\n- Build command you used (if compiling from source): **scripts/build_windows.bat**\r\n- OS: **Windows 10 Home Edition**\r\n- PyTorch version: (Latest clone)\r\n- Python version: **Python 2.7.12 :: Anaconda custom (64-bit)**\r\n- CUDA/cuDNN version: **8.0/cudnn-8.0-windows10-x64-v7**\r\n- GPU models and configuration: (GTX 1050)\r\n- GCC version (if compiling from source):\r\n- CMake version: **cmake-3.7.2-win64-x64**\r\n- Versions of any other relevant libraries: **Visual Studio 2015, OpenCV 3.2.0-vc14**\r\n"}