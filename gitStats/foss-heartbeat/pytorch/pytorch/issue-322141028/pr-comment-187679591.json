{"url": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/187679591", "pull_request_review_id": 119514767, "id": 187679591, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4NzY3OTU5MQ==", "diff_hunk": "@@ -314,10 +325,11 @@ struct GraphExecutorImpl {\n     auto graph_ = graph->copy();\n     runRequiredPasses(graph_);\n     if(optimize) {\n-      CreateAutodiffSubgraphs(*graph_);\n+      if(!symbolically_differentiable)\n+        CreateAutodiffSubgraphs(*graph_);", "path": "torch/csrc/jit/graph_executor.cpp", "position": 85, "original_position": 85, "commit_id": "ba574c6b8fe9cef23df54f42b658729cf5c63b5b", "original_commit_id": "3715ff61a72d1845f90361f20171025396484c88", "user": {"login": "zdevito", "id": 370202, "node_id": "MDQ6VXNlcjM3MDIwMg==", "avatar_url": "https://avatars0.githubusercontent.com/u/370202?v=4", "gravatar_id": "", "url": "https://api.github.com/users/zdevito", "html_url": "https://github.com/zdevito", "followers_url": "https://api.github.com/users/zdevito/followers", "following_url": "https://api.github.com/users/zdevito/following{/other_user}", "gists_url": "https://api.github.com/users/zdevito/gists{/gist_id}", "starred_url": "https://api.github.com/users/zdevito/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/zdevito/subscriptions", "organizations_url": "https://api.github.com/users/zdevito/orgs", "repos_url": "https://api.github.com/users/zdevito/repos", "events_url": "https://api.github.com/users/zdevito/events{/privacy}", "received_events_url": "https://api.github.com/users/zdevito/received_events", "type": "User", "site_admin": false}, "body": "Yeah, we need to refactor this. The condition is: `runTraced` uses getOrCreateAutograd fallback regardless of symbolically_differentiable. Then CreateAutodiffSubgraphs  makes a subgraph of everything, it executes that recursively, and enters an infinite loop doing this.  Not sure what would be better, we should discuss how we actually want to execute graphs, which with the addition of control flow has likely changed.", "created_at": "2018-05-11T17:24:58Z", "updated_at": "2018-11-23T15:43:57Z", "html_url": "https://github.com/pytorch/pytorch/pull/7489#discussion_r187679591", "pull_request_url": "https://api.github.com/repos/pytorch/pytorch/pulls/7489", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/187679591"}, "html": {"href": "https://github.com/pytorch/pytorch/pull/7489#discussion_r187679591"}, "pull_request": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/7489"}}, "body_html": "<p>Yeah, we need to refactor this. The condition is: <code>runTraced</code> uses getOrCreateAutograd fallback regardless of symbolically_differentiable. Then CreateAutodiffSubgraphs  makes a subgraph of everything, it executes that recursively, and enters an infinite loop doing this.  Not sure what would be better, we should discuss how we actually want to execute graphs, which with the addition of control flow has likely changed.</p>", "body_text": "Yeah, we need to refactor this. The condition is: runTraced uses getOrCreateAutograd fallback regardless of symbolically_differentiable. Then CreateAutodiffSubgraphs  makes a subgraph of everything, it executes that recursively, and enters an infinite loop doing this.  Not sure what would be better, we should discuss how we actually want to execute graphs, which with the addition of control flow has likely changed.", "in_reply_to_id": 187559684}