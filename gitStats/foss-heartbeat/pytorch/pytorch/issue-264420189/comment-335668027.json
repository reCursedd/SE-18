{"url": "https://api.github.com/repos/pytorch/pytorch/issues/comments/335668027", "html_url": "https://github.com/pytorch/pytorch/issues/3059#issuecomment-335668027", "issue_url": "https://api.github.com/repos/pytorch/pytorch/issues/3059", "id": 335668027, "node_id": "MDEyOklzc3VlQ29tbWVudDMzNTY2ODAyNw==", "user": {"login": "soumith", "id": 1310570, "node_id": "MDQ6VXNlcjEzMTA1NzA=", "avatar_url": "https://avatars0.githubusercontent.com/u/1310570?v=4", "gravatar_id": "", "url": "https://api.github.com/users/soumith", "html_url": "https://github.com/soumith", "followers_url": "https://api.github.com/users/soumith/followers", "following_url": "https://api.github.com/users/soumith/following{/other_user}", "gists_url": "https://api.github.com/users/soumith/gists{/gist_id}", "starred_url": "https://api.github.com/users/soumith/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/soumith/subscriptions", "organizations_url": "https://api.github.com/users/soumith/orgs", "repos_url": "https://api.github.com/users/soumith/repos", "events_url": "https://api.github.com/users/soumith/events{/privacy}", "received_events_url": "https://api.github.com/users/soumith/received_events", "type": "User", "site_admin": false}, "created_at": "2017-10-11T03:01:31Z", "updated_at": "2017-10-11T03:02:05Z", "author_association": "MEMBER", "body_html": "<p>We rely on RTLD_GLOBAL for pytorch extensions to be able to find the TH/THC/THNN/THCUNN/THP symbols. So we will likely keep this option.</p>\n<p>However, a better fix is to specify a linker version script that explicitly specifies what global symbols to export: <a href=\"https://github.com/pytorch/pytorch/blob/v0.2.0/tools/pytorch.version\">https://github.com/pytorch/pytorch/blob/v0.2.0/tools/pytorch.version</a><br>\nRight now I've only set it up for PyTorch's _C.so which is the main CPython entry point. I'll setup a similar script for TH, THNN, THC, THCUNN, THS, THCS, ATen etc. as well. (or switch those libraries to static linkage and dynamic link them to _C.so). Right now these libs are still leaking symbols like pthread (as you noticed)</p>", "body_text": "We rely on RTLD_GLOBAL for pytorch extensions to be able to find the TH/THC/THNN/THCUNN/THP symbols. So we will likely keep this option.\nHowever, a better fix is to specify a linker version script that explicitly specifies what global symbols to export: https://github.com/pytorch/pytorch/blob/v0.2.0/tools/pytorch.version\nRight now I've only set it up for PyTorch's _C.so which is the main CPython entry point. I'll setup a similar script for TH, THNN, THC, THCUNN, THS, THCS, ATen etc. as well. (or switch those libraries to static linkage and dynamic link them to _C.so). Right now these libs are still leaking symbols like pthread (as you noticed)", "body": "We rely on RTLD_GLOBAL for pytorch extensions to be able to find the TH/THC/THNN/THCUNN/THP symbols. So we will likely keep this option.\r\n\r\nHowever, a better fix is to specify a linker version script that explicitly specifies what global symbols to export: https://github.com/pytorch/pytorch/blob/v0.2.0/tools/pytorch.version\r\nRight now I've only set it up for PyTorch's _C.so which is the main CPython entry point. I'll setup a similar script for TH, THNN, THC, THCUNN, THS, THCS, ATen etc. as well. (or switch those libraries to static linkage and dynamic link them to _C.so). Right now these libs are still leaking symbols like pthread (as you noticed)"}