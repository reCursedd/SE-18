{"url": "https://api.github.com/repos/pytorch/pytorch/issues/comments/432344676", "html_url": "https://github.com/pytorch/pytorch/issues/3059#issuecomment-432344676", "issue_url": "https://api.github.com/repos/pytorch/pytorch/issues/3059", "id": 432344676, "node_id": "MDEyOklzc3VlQ29tbWVudDQzMjM0NDY3Ng==", "user": {"login": "scott-vsi", "id": 5100631, "node_id": "MDQ6VXNlcjUxMDA2MzE=", "avatar_url": "https://avatars3.githubusercontent.com/u/5100631?v=4", "gravatar_id": "", "url": "https://api.github.com/users/scott-vsi", "html_url": "https://github.com/scott-vsi", "followers_url": "https://api.github.com/users/scott-vsi/followers", "following_url": "https://api.github.com/users/scott-vsi/following{/other_user}", "gists_url": "https://api.github.com/users/scott-vsi/gists{/gist_id}", "starred_url": "https://api.github.com/users/scott-vsi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/scott-vsi/subscriptions", "organizations_url": "https://api.github.com/users/scott-vsi/orgs", "repos_url": "https://api.github.com/users/scott-vsi/repos", "events_url": "https://api.github.com/users/scott-vsi/events{/privacy}", "received_events_url": "https://api.github.com/users/scott-vsi/received_events", "type": "User", "site_admin": false}, "created_at": "2018-10-23T17:34:40Z", "updated_at": "2018-10-23T17:34:40Z", "author_association": "NONE", "body_html": "<p>I looked at it a little closer and found that would not actually fix the problem in my case.</p>\n<p>The problem is actually that _C.so is being loaded with the RTLD_GLOBAL, which loads all the exported symbols globally, including those from its dynamically linked dependencies (so manylinux doesn't help).</p>\n<p>In my case, symbols from one of those dependencies are incompatible with another library I'm importing, which results in a segfault.</p>", "body_text": "I looked at it a little closer and found that would not actually fix the problem in my case.\nThe problem is actually that _C.so is being loaded with the RTLD_GLOBAL, which loads all the exported symbols globally, including those from its dynamically linked dependencies (so manylinux doesn't help).\nIn my case, symbols from one of those dependencies are incompatible with another library I'm importing, which results in a segfault.", "body": "I looked at it a little closer and found that would not actually fix the problem in my case.\r\n\r\nThe problem is actually that _C.so is being loaded with the RTLD_GLOBAL, which loads all the exported symbols globally, including those from its dynamically linked dependencies (so manylinux doesn't help). \r\n\r\nIn my case, symbols from one of those dependencies are incompatible with another library I'm importing, which results in a segfault."}