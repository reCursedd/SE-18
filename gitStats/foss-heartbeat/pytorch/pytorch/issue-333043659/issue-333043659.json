{"url": "https://api.github.com/repos/pytorch/pytorch/issues/8589", "repository_url": "https://api.github.com/repos/pytorch/pytorch", "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/8589/labels{/name}", "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/8589/comments", "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/8589/events", "html_url": "https://github.com/pytorch/pytorch/issues/8589", "id": 333043659, "node_id": "MDU6SXNzdWUzMzMwNDM2NTk=", "number": 8589, "title": "Two segfaults in autograd/engine.cpp", "user": {"login": "ivankreso", "id": 2056432, "node_id": "MDQ6VXNlcjIwNTY0MzI=", "avatar_url": "https://avatars3.githubusercontent.com/u/2056432?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ivankreso", "html_url": "https://github.com/ivankreso", "followers_url": "https://api.github.com/users/ivankreso/followers", "following_url": "https://api.github.com/users/ivankreso/following{/other_user}", "gists_url": "https://api.github.com/users/ivankreso/gists{/gist_id}", "starred_url": "https://api.github.com/users/ivankreso/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ivankreso/subscriptions", "organizations_url": "https://api.github.com/users/ivankreso/orgs", "repos_url": "https://api.github.com/users/ivankreso/repos", "events_url": "https://api.github.com/users/ivankreso/events{/privacy}", "received_events_url": "https://api.github.com/users/ivankreso/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2018-06-17T07:53:23Z", "updated_at": "2018-06-17T07:58:12Z", "closed_at": null, "author_association": "NONE", "body_html": "<h2>Issue description</h2>\n<p>I believe I found segfaults at two places in autograd/engine.cpp.</p>\n<p>The first one I already described in the following comment:<br>\n<a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load issue title\" data-id=\"296852766\" data-permission-text=\"Issue title is private\" data-url=\"https://github.com/pytorch/pytorch/issues/5219\" data-hovercard-type=\"issue\" data-hovercard-url=\"/pytorch/pytorch/issues/5219/hovercard?comment_id=392341351&amp;comment_type=issue_comment\" href=\"https://github.com/pytorch/pytorch/issues/5219#issuecomment-392341351\">#5219 (comment)</a></p>\n<p>The second is related to the first one. Even if you fix the first segfault, there is another one here:<br>\n<a href=\"https://github.com/pytorch/pytorch/blob/master/torch/csrc/autograd/engine.cpp#L362\">https://github.com/pytorch/pytorch/blob/master/torch/csrc/autograd/engine.cpp#L362</a></p>\n<p>because task.base-&gt;exec_info map will not have the \"dummy\" function added here:<br>\n<a href=\"https://github.com/pytorch/pytorch/blob/master/torch/csrc/autograd/engine.cpp#L264\">https://github.com/pytorch/pytorch/blob/master/torch/csrc/autograd/engine.cpp#L264</a></p>\n<p>Stacktrace of the second segfault:</p>\n<pre><code>#0  0x00007fffea95be4f in std::_Hashtable&lt;torch::autograd::Function*, std::pair&lt;torch::autograd::Function* const, torch::autograd::GraphTask::ExecInfo&gt;, std::allocator&lt;std::pair&lt;torch::autograd::Function* const, torch::autograd::GraphTask::ExecInfo&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;torch::autograd::Function*&gt;, std::hash&lt;torch::autograd::Function*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_find_before_node (__code=&lt;optimized out&gt;, \n    __k=&lt;optimized out&gt;, __n=&lt;optimized out&gt;, this=&lt;optimized out&gt;) at /usr/lib/gcc/x86_64-pc-linux-gnu/5.4.1/include/c++/bits/hashtable.h:1426                                               \n#1  std::_Hashtable&lt;torch::autograd::Function*, std::pair&lt;torch::autograd::Function* const, torch::autograd::GraphTask::ExecInfo&gt;, std::allocator&lt;std::pair&lt;torch::autograd::Function* const, torch::autograd::GraphTask::ExecInfo&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;torch::autograd::Function*&gt;, std::hash&lt;torch::autograd::Function*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_find_node (__c=&lt;optimized out&gt;, __key=&lt;optimized out&gt;,          \n    __bkt=&lt;optimized out&gt;, this=&lt;optimized out&gt;) at /usr/lib/gcc/x86_64-pc-linux-gnu/5.4.1/include/c++/bits/hashtable.h:632                                                                   \n#2  std::__detail::_Map_base&lt;torch::autograd::Function*, std::pair&lt;torch::autograd::Function* const, torch::autograd::GraphTask::ExecInfo&gt;, std::allocator&lt;std::pair&lt;torch::autograd::Function* const, torch::autograd::GraphTask::ExecInfo&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;torch::autograd::Function*&gt;, std::hash&lt;torch::autograd::Function*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt;, true&gt;::at (__k=&lt;optimized out&gt;, this=0x7fff78985a68)        \n    at /usr/lib/gcc/x86_64-pc-linux-gnu/5.4.1/include/c++/bits/hashtable_policy.h:643\n#3  std::unordered_map&lt;torch::autograd::Function*, torch::autograd::GraphTask::ExecInfo, std::hash&lt;torch::autograd::Function*&gt;, std::equal_to&lt;torch::autograd::Function*&gt;, std::allocator&lt;std::pair&lt;torch::autograd::Function* const, torch::autograd::GraphTask::ExecInfo&gt; &gt; &gt;::at (__k=&lt;optimized out&gt;, this=0x7fff78985a68)                                                               \n    at /usr/lib/gcc/x86_64-pc-linux-gnu/5.4.1/include/c++/bits/unordered_map.h:685\n#4  torch::autograd::Engine::evaluate_function (this=this@entry=0x7fffeb466fc0 &lt;engine&gt;, task=...) at torch/csrc/autograd/engine.cpp:309                                                      \n#5  0x00007fffea95d9e7 in torch::autograd::Engine::thread_main (this=0x7fffeb466fc0 &lt;engine&gt;, graph_task=0x0) at torch/csrc/autograd/engine.cpp:233                                           \n#6  0x00007fffea95ae82 in torch::autograd::Engine::thread_init (this=this@entry=0x7fffeb466fc0 &lt;engine&gt;, device=device@entry=-1) at torch/csrc/autograd/engine.cpp:207                        \n#7  0x00007fffea9898ea in torch::autograd::python::PythonEngine::thread_init (this=0x7fffeb466fc0 &lt;engine&gt;, device=-1) at torch/csrc/autograd/python_engine.cpp:40                            \n#8  0x00007fffd7525c5c in std::execute_native_thread_routine_compat (__p=&lt;optimized out&gt;)\n    at /opt/conda/conda-bld/compilers_linux-64_1520532893746/work/.build/src/gcc-7.2.0/libstdc++-v3/src/c++11/thread.cc:110                                                                   \n#9  0x00007ffff7685075 in start_thread () from /usr/lib/libpthread.so.0\n#10 0x00007ffff6a1653f in clone () from /usr/lib/libc.so.6\n</code></pre>\n<h2>System Info</h2>\n<ul>\n<li>PyTorch or Caffe2:</li>\n<li>How you installed PyTorch (conda, pip, source): conda</li>\n<li>OS: ArchLinux</li>\n<li>PyTorch version: 0.4</li>\n<li>Python version: 3.6</li>\n<li>CUDA/cuDNN version: 9.1</li>\n</ul>", "body_text": "Issue description\nI believe I found segfaults at two places in autograd/engine.cpp.\nThe first one I already described in the following comment:\n#5219 (comment)\nThe second is related to the first one. Even if you fix the first segfault, there is another one here:\nhttps://github.com/pytorch/pytorch/blob/master/torch/csrc/autograd/engine.cpp#L362\nbecause task.base->exec_info map will not have the \"dummy\" function added here:\nhttps://github.com/pytorch/pytorch/blob/master/torch/csrc/autograd/engine.cpp#L264\nStacktrace of the second segfault:\n#0  0x00007fffea95be4f in std::_Hashtable<torch::autograd::Function*, std::pair<torch::autograd::Function* const, torch::autograd::GraphTask::ExecInfo>, std::allocator<std::pair<torch::autograd::Function* const, torch::autograd::GraphTask::ExecInfo> >, std::__detail::_Select1st, std::equal_to<torch::autograd::Function*>, std::hash<torch::autograd::Function*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_find_before_node (__code=<optimized out>, \n    __k=<optimized out>, __n=<optimized out>, this=<optimized out>) at /usr/lib/gcc/x86_64-pc-linux-gnu/5.4.1/include/c++/bits/hashtable.h:1426                                               \n#1  std::_Hashtable<torch::autograd::Function*, std::pair<torch::autograd::Function* const, torch::autograd::GraphTask::ExecInfo>, std::allocator<std::pair<torch::autograd::Function* const, torch::autograd::GraphTask::ExecInfo> >, std::__detail::_Select1st, std::equal_to<torch::autograd::Function*>, std::hash<torch::autograd::Function*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_find_node (__c=<optimized out>, __key=<optimized out>,          \n    __bkt=<optimized out>, this=<optimized out>) at /usr/lib/gcc/x86_64-pc-linux-gnu/5.4.1/include/c++/bits/hashtable.h:632                                                                   \n#2  std::__detail::_Map_base<torch::autograd::Function*, std::pair<torch::autograd::Function* const, torch::autograd::GraphTask::ExecInfo>, std::allocator<std::pair<torch::autograd::Function* const, torch::autograd::GraphTask::ExecInfo> >, std::__detail::_Select1st, std::equal_to<torch::autograd::Function*>, std::hash<torch::autograd::Function*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true>, true>::at (__k=<optimized out>, this=0x7fff78985a68)        \n    at /usr/lib/gcc/x86_64-pc-linux-gnu/5.4.1/include/c++/bits/hashtable_policy.h:643\n#3  std::unordered_map<torch::autograd::Function*, torch::autograd::GraphTask::ExecInfo, std::hash<torch::autograd::Function*>, std::equal_to<torch::autograd::Function*>, std::allocator<std::pair<torch::autograd::Function* const, torch::autograd::GraphTask::ExecInfo> > >::at (__k=<optimized out>, this=0x7fff78985a68)                                                               \n    at /usr/lib/gcc/x86_64-pc-linux-gnu/5.4.1/include/c++/bits/unordered_map.h:685\n#4  torch::autograd::Engine::evaluate_function (this=this@entry=0x7fffeb466fc0 <engine>, task=...) at torch/csrc/autograd/engine.cpp:309                                                      \n#5  0x00007fffea95d9e7 in torch::autograd::Engine::thread_main (this=0x7fffeb466fc0 <engine>, graph_task=0x0) at torch/csrc/autograd/engine.cpp:233                                           \n#6  0x00007fffea95ae82 in torch::autograd::Engine::thread_init (this=this@entry=0x7fffeb466fc0 <engine>, device=device@entry=-1) at torch/csrc/autograd/engine.cpp:207                        \n#7  0x00007fffea9898ea in torch::autograd::python::PythonEngine::thread_init (this=0x7fffeb466fc0 <engine>, device=-1) at torch/csrc/autograd/python_engine.cpp:40                            \n#8  0x00007fffd7525c5c in std::execute_native_thread_routine_compat (__p=<optimized out>)\n    at /opt/conda/conda-bld/compilers_linux-64_1520532893746/work/.build/src/gcc-7.2.0/libstdc++-v3/src/c++11/thread.cc:110                                                                   \n#9  0x00007ffff7685075 in start_thread () from /usr/lib/libpthread.so.0\n#10 0x00007ffff6a1653f in clone () from /usr/lib/libc.so.6\n\nSystem Info\n\nPyTorch or Caffe2:\nHow you installed PyTorch (conda, pip, source): conda\nOS: ArchLinux\nPyTorch version: 0.4\nPython version: 3.6\nCUDA/cuDNN version: 9.1", "body": "## Issue description\r\n\r\nI believe I found segfaults at two places in autograd/engine.cpp.\r\n\r\nThe first one I already described in the following comment:\r\nhttps://github.com/pytorch/pytorch/issues/5219#issuecomment-392341351\r\n\r\nThe second is related to the first one. Even if you fix the first segfault, there is another one here: \r\nhttps://github.com/pytorch/pytorch/blob/master/torch/csrc/autograd/engine.cpp#L362\r\n\r\nbecause task.base->exec_info map will not have the \"dummy\" function added here:\r\nhttps://github.com/pytorch/pytorch/blob/master/torch/csrc/autograd/engine.cpp#L264\r\n\r\nStacktrace of the second segfault:\r\n```\r\n#0  0x00007fffea95be4f in std::_Hashtable<torch::autograd::Function*, std::pair<torch::autograd::Function* const, torch::autograd::GraphTask::ExecInfo>, std::allocator<std::pair<torch::autograd::Function* const, torch::autograd::GraphTask::ExecInfo> >, std::__detail::_Select1st, std::equal_to<torch::autograd::Function*>, std::hash<torch::autograd::Function*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_find_before_node (__code=<optimized out>, \r\n    __k=<optimized out>, __n=<optimized out>, this=<optimized out>) at /usr/lib/gcc/x86_64-pc-linux-gnu/5.4.1/include/c++/bits/hashtable.h:1426                                               \r\n#1  std::_Hashtable<torch::autograd::Function*, std::pair<torch::autograd::Function* const, torch::autograd::GraphTask::ExecInfo>, std::allocator<std::pair<torch::autograd::Function* const, torch::autograd::GraphTask::ExecInfo> >, std::__detail::_Select1st, std::equal_to<torch::autograd::Function*>, std::hash<torch::autograd::Function*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_find_node (__c=<optimized out>, __key=<optimized out>,          \r\n    __bkt=<optimized out>, this=<optimized out>) at /usr/lib/gcc/x86_64-pc-linux-gnu/5.4.1/include/c++/bits/hashtable.h:632                                                                   \r\n#2  std::__detail::_Map_base<torch::autograd::Function*, std::pair<torch::autograd::Function* const, torch::autograd::GraphTask::ExecInfo>, std::allocator<std::pair<torch::autograd::Function* const, torch::autograd::GraphTask::ExecInfo> >, std::__detail::_Select1st, std::equal_to<torch::autograd::Function*>, std::hash<torch::autograd::Function*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true>, true>::at (__k=<optimized out>, this=0x7fff78985a68)        \r\n    at /usr/lib/gcc/x86_64-pc-linux-gnu/5.4.1/include/c++/bits/hashtable_policy.h:643\r\n#3  std::unordered_map<torch::autograd::Function*, torch::autograd::GraphTask::ExecInfo, std::hash<torch::autograd::Function*>, std::equal_to<torch::autograd::Function*>, std::allocator<std::pair<torch::autograd::Function* const, torch::autograd::GraphTask::ExecInfo> > >::at (__k=<optimized out>, this=0x7fff78985a68)                                                               \r\n    at /usr/lib/gcc/x86_64-pc-linux-gnu/5.4.1/include/c++/bits/unordered_map.h:685\r\n#4  torch::autograd::Engine::evaluate_function (this=this@entry=0x7fffeb466fc0 <engine>, task=...) at torch/csrc/autograd/engine.cpp:309                                                      \r\n#5  0x00007fffea95d9e7 in torch::autograd::Engine::thread_main (this=0x7fffeb466fc0 <engine>, graph_task=0x0) at torch/csrc/autograd/engine.cpp:233                                           \r\n#6  0x00007fffea95ae82 in torch::autograd::Engine::thread_init (this=this@entry=0x7fffeb466fc0 <engine>, device=device@entry=-1) at torch/csrc/autograd/engine.cpp:207                        \r\n#7  0x00007fffea9898ea in torch::autograd::python::PythonEngine::thread_init (this=0x7fffeb466fc0 <engine>, device=-1) at torch/csrc/autograd/python_engine.cpp:40                            \r\n#8  0x00007fffd7525c5c in std::execute_native_thread_routine_compat (__p=<optimized out>)\r\n    at /opt/conda/conda-bld/compilers_linux-64_1520532893746/work/.build/src/gcc-7.2.0/libstdc++-v3/src/c++11/thread.cc:110                                                                   \r\n#9  0x00007ffff7685075 in start_thread () from /usr/lib/libpthread.so.0\r\n#10 0x00007ffff6a1653f in clone () from /usr/lib/libc.so.6\r\n```\r\n\r\n\r\n## System Info\r\n- PyTorch or Caffe2:\r\n- How you installed PyTorch (conda, pip, source): conda\r\n- OS: ArchLinux\r\n- PyTorch version: 0.4\r\n- Python version: 3.6\r\n- CUDA/cuDNN version: 9.1\r\n"}