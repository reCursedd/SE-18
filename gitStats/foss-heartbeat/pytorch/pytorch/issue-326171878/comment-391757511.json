{"url": "https://api.github.com/repos/pytorch/pytorch/issues/comments/391757511", "html_url": "https://github.com/pytorch/pytorch/pull/7811#issuecomment-391757511", "issue_url": "https://api.github.com/repos/pytorch/pytorch/issues/7811", "id": 391757511, "node_id": "MDEyOklzc3VlQ29tbWVudDM5MTc1NzUxMQ==", "user": {"login": "gchanan", "id": 3768583, "node_id": "MDQ6VXNlcjM3Njg1ODM=", "avatar_url": "https://avatars2.githubusercontent.com/u/3768583?v=4", "gravatar_id": "", "url": "https://api.github.com/users/gchanan", "html_url": "https://github.com/gchanan", "followers_url": "https://api.github.com/users/gchanan/followers", "following_url": "https://api.github.com/users/gchanan/following{/other_user}", "gists_url": "https://api.github.com/users/gchanan/gists{/gist_id}", "starred_url": "https://api.github.com/users/gchanan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/gchanan/subscriptions", "organizations_url": "https://api.github.com/users/gchanan/orgs", "repos_url": "https://api.github.com/users/gchanan/repos", "events_url": "https://api.github.com/users/gchanan/events{/privacy}", "received_events_url": "https://api.github.com/users/gchanan/received_events", "type": "User", "site_admin": false}, "created_at": "2018-05-24T15:29:33Z", "updated_at": "2018-05-24T15:29:33Z", "author_association": "CONTRIBUTOR", "body_html": "<p>The goal of this refactor is to unify the tensor representation of ATen and TH/THC, and ultimately C10.  This will allow us to modify tensor sizes/strides directly in ATen/C10 as well as share code in the C10.</p>\n<p>Today in ATen we have Tensor.pImpl which is an at::TensorImpl* pointing to a derived type, e.g. at::CPUFloatTensor.  The at::CPUFloatTensor holds a THFloatTensor.</p>\n<p>The steps to unify these roughly are:</p>\n<ol>\n<li>THStorage becomes a single StorageImpl class.</li>\n<li>THTensor becomes a single TensorImpl class.</li>\n<li>we get rid of the tensor in at::CPUFloatTensor and just use the TensorImpl (parent) directly.  We may want to get rid of the CPUFloatTensor-style derived types, but we'd have to reimplement the checked_cast calls in some way.</li>\n</ol>", "body_text": "The goal of this refactor is to unify the tensor representation of ATen and TH/THC, and ultimately C10.  This will allow us to modify tensor sizes/strides directly in ATen/C10 as well as share code in the C10.\nToday in ATen we have Tensor.pImpl which is an at::TensorImpl* pointing to a derived type, e.g. at::CPUFloatTensor.  The at::CPUFloatTensor holds a THFloatTensor.\nThe steps to unify these roughly are:\n\nTHStorage becomes a single StorageImpl class.\nTHTensor becomes a single TensorImpl class.\nwe get rid of the tensor in at::CPUFloatTensor and just use the TensorImpl (parent) directly.  We may want to get rid of the CPUFloatTensor-style derived types, but we'd have to reimplement the checked_cast calls in some way.", "body": "The goal of this refactor is to unify the tensor representation of ATen and TH/THC, and ultimately C10.  This will allow us to modify tensor sizes/strides directly in ATen/C10 as well as share code in the C10.\r\n\r\nToday in ATen we have Tensor.pImpl which is an at::TensorImpl* pointing to a derived type, e.g. at::CPUFloatTensor.  The at::CPUFloatTensor holds a THFloatTensor.\r\n\r\nThe steps to unify these roughly are:\r\n1) THStorage becomes a single StorageImpl class.\r\n2) THTensor becomes a single TensorImpl class.\r\n3) we get rid of the tensor in at::CPUFloatTensor and just use the TensorImpl (parent) directly.  We may want to get rid of the CPUFloatTensor-style derived types, but we'd have to reimplement the checked_cast calls in some way."}