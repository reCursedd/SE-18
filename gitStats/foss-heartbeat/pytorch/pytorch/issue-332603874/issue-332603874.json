{"url": "https://api.github.com/repos/pytorch/pytorch/issues/8538", "repository_url": "https://api.github.com/repos/pytorch/pytorch", "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/8538/labels{/name}", "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/8538/comments", "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/8538/events", "html_url": "https://github.com/pytorch/pytorch/issues/8538", "id": 332603874, "node_id": "MDU6SXNzdWUzMzI2MDM4NzQ=", "number": 8538, "title": "[JIT] Missing check for non-method functions in operator-level tests", "user": {"login": "jamesr66a", "id": 4685384, "node_id": "MDQ6VXNlcjQ2ODUzODQ=", "avatar_url": "https://avatars2.githubusercontent.com/u/4685384?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jamesr66a", "html_url": "https://github.com/jamesr66a", "followers_url": "https://api.github.com/users/jamesr66a/followers", "following_url": "https://api.github.com/users/jamesr66a/following{/other_user}", "gists_url": "https://api.github.com/users/jamesr66a/gists{/gist_id}", "starred_url": "https://api.github.com/users/jamesr66a/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jamesr66a/subscriptions", "organizations_url": "https://api.github.com/users/jamesr66a/orgs", "repos_url": "https://api.github.com/users/jamesr66a/repos", "events_url": "https://api.github.com/users/jamesr66a/events{/privacy}", "received_events_url": "https://api.github.com/users/jamesr66a/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 679953983, "node_id": "MDU6TGFiZWw2Nzk5NTM5ODM=", "url": "https://api.github.com/repos/pytorch/pytorch/labels/jit", "name": "jit", "color": "c5def5", "default": false}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-06-15T00:01:54Z", "updated_at": "2018-06-18T22:13:59Z", "closed_at": "2018-06-18T22:13:59Z", "author_association": "CONTRIBUTOR", "body_html": "<p>Example: tests including <code>torch.where</code> still fail because we need to pass in a ByteTensor for the first argument, but currently we pass in Double</p>\n<p>Tests affected:</p>\n<ul>\n<li><code>test_where</code></li>\n<li><code>test_where_broadcast_all</code></li>\n<li><code>test_where_scalar</code></li>\n<li><code>test_where_scalar_broadcast_mask</code></li>\n<li><code>test_where_scalar_broadcast_non_mask</code></li>\n</ul>", "body_text": "Example: tests including torch.where still fail because we need to pass in a ByteTensor for the first argument, but currently we pass in Double\nTests affected:\n\ntest_where\ntest_where_broadcast_all\ntest_where_scalar\ntest_where_scalar_broadcast_mask\ntest_where_scalar_broadcast_non_mask", "body": "Example: tests including `torch.where` still fail because we need to pass in a ByteTensor for the first argument, but currently we pass in Double\r\n\r\nTests affected:\r\n\r\n- `test_where`\r\n- `test_where_broadcast_all`\r\n- `test_where_scalar`\r\n- `test_where_scalar_broadcast_mask`\r\n- `test_where_scalar_broadcast_non_mask`"}