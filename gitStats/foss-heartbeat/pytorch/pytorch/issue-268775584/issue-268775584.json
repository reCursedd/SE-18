{"url": "https://api.github.com/repos/pytorch/pytorch/issues/3304", "repository_url": "https://api.github.com/repos/pytorch/pytorch", "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/3304/labels{/name}", "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/3304/comments", "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/3304/events", "html_url": "https://github.com/pytorch/pytorch/issues/3304", "id": 268775584, "node_id": "MDU6SXNzdWUyNjg3NzU1ODQ=", "number": 3304, "title": "Overflow in ByteTensor.cumsum()", "user": {"login": "bermanmaxim", "id": 5989894, "node_id": "MDQ6VXNlcjU5ODk4OTQ=", "avatar_url": "https://avatars3.githubusercontent.com/u/5989894?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bermanmaxim", "html_url": "https://github.com/bermanmaxim", "followers_url": "https://api.github.com/users/bermanmaxim/followers", "following_url": "https://api.github.com/users/bermanmaxim/following{/other_user}", "gists_url": "https://api.github.com/users/bermanmaxim/gists{/gist_id}", "starred_url": "https://api.github.com/users/bermanmaxim/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bermanmaxim/subscriptions", "organizations_url": "https://api.github.com/users/bermanmaxim/orgs", "repos_url": "https://api.github.com/users/bermanmaxim/repos", "events_url": "https://api.github.com/users/bermanmaxim/events{/privacy}", "received_events_url": "https://api.github.com/users/bermanmaxim/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-10-26T14:11:02Z", "updated_at": "2018-04-24T20:26:28Z", "closed_at": "2018-04-24T20:26:28Z", "author_association": "CONTRIBUTOR", "body_html": "<p>I believe ByteTensor.cumsum() should return a LongTensor (similar to an former issue with ByteTensor.sum() that was fixed).</p>\n<p>Example:</p>\n<pre><code>&gt;&gt;&gt; torch.ByteTensor(300).fill_(1).cumsum(0)[-1]\n44\n&gt;&gt;&gt; torch.LongTensor(300).fill_(1).cumsum(0)[-1]\n300\n&gt;&gt;&gt; torch.cuda.ByteTensor(300).fill_(1).cumsum(0)[-1]\n44\n&gt;&gt;&gt; torch.cuda.LongTensor(300).fill_(1).cumsum(0)[-1]\n300\n&gt;&gt;&gt; torch.ByteTensor(300).fill_(1).sum()\n300\n&gt;&gt;&gt; torch.LongTensor(300).fill_(1).sum()\n300\n</code></pre>", "body_text": "I believe ByteTensor.cumsum() should return a LongTensor (similar to an former issue with ByteTensor.sum() that was fixed).\nExample:\n>>> torch.ByteTensor(300).fill_(1).cumsum(0)[-1]\n44\n>>> torch.LongTensor(300).fill_(1).cumsum(0)[-1]\n300\n>>> torch.cuda.ByteTensor(300).fill_(1).cumsum(0)[-1]\n44\n>>> torch.cuda.LongTensor(300).fill_(1).cumsum(0)[-1]\n300\n>>> torch.ByteTensor(300).fill_(1).sum()\n300\n>>> torch.LongTensor(300).fill_(1).sum()\n300", "body": "I believe ByteTensor.cumsum() should return a LongTensor (similar to an former issue with ByteTensor.sum() that was fixed).\r\n\r\nExample:\r\n\r\n```\r\n>>> torch.ByteTensor(300).fill_(1).cumsum(0)[-1]\r\n44\r\n>>> torch.LongTensor(300).fill_(1).cumsum(0)[-1]\r\n300\r\n>>> torch.cuda.ByteTensor(300).fill_(1).cumsum(0)[-1]\r\n44\r\n>>> torch.cuda.LongTensor(300).fill_(1).cumsum(0)[-1]\r\n300\r\n>>> torch.ByteTensor(300).fill_(1).sum()\r\n300\r\n>>> torch.LongTensor(300).fill_(1).sum()\r\n300\r\n```\r\n\r\n"}