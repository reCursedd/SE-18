{"url": "https://api.github.com/repos/pytorch/pytorch/issues/8607", "repository_url": "https://api.github.com/repos/pytorch/pytorch", "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/8607/labels{/name}", "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/8607/comments", "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/8607/events", "html_url": "https://github.com/pytorch/pytorch/issues/8607", "id": 333345905, "node_id": "MDU6SXNzdWUzMzMzNDU5MDU=", "number": 8607, "title": "[Caffe2] Wrong prediction with simple FF", "user": {"login": "domett93", "id": 40364992, "node_id": "MDQ6VXNlcjQwMzY0OTky", "avatar_url": "https://avatars3.githubusercontent.com/u/40364992?v=4", "gravatar_id": "", "url": "https://api.github.com/users/domett93", "html_url": "https://github.com/domett93", "followers_url": "https://api.github.com/users/domett93/followers", "following_url": "https://api.github.com/users/domett93/following{/other_user}", "gists_url": "https://api.github.com/users/domett93/gists{/gist_id}", "starred_url": "https://api.github.com/users/domett93/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/domett93/subscriptions", "organizations_url": "https://api.github.com/users/domett93/orgs", "repos_url": "https://api.github.com/users/domett93/repos", "events_url": "https://api.github.com/users/domett93/events{/privacy}", "received_events_url": "https://api.github.com/users/domett93/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 890282107, "node_id": "MDU6TGFiZWw4OTAyODIxMDc=", "url": "https://api.github.com/repos/pytorch/pytorch/labels/caffe2", "name": "caffe2", "color": "210aa8", "default": false}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2018-06-18T16:31:04Z", "updated_at": "2018-06-18T17:17:58Z", "closed_at": null, "author_association": "NONE", "body_html": "<p>Hello,<br>\nI am new to Caffe2.<br>\nFor my first attempts with Caffe2 I am trying a simple Feed Forward, but I don't get a correct prediction.<br>\nCould please somebody explain my mistake?</p>\n<p>It's a simple net to solve a XOR</p>\n<pre><code>data = np.array([[0, 0],[0, 1], [1, 0], [1, 1]]).astype(np.float32)\nlabel = np.array([[0],[1],[1],[0]]).astype(np.float32)\n\nworkspace.FeedBlob(\"data\", data)\nworkspace.FeedBlob(\"label\", label)\n\nprint(workspace.FetchBlob(\"data\"))\n\nm = model_helper.ModelHelper(name=\"my first net\")\n\nweight = m.param_init_net.XavierFill([], 'fc_w', shape=[2, 2])\nbias = m.param_init_net.ConstantFill([], 'fc_b', shape=[2, ])\n\nfc_1 = m.net.FC([\"data\", \"fc_w\", \"fc_b\"], \"fc1\")\npred = m.net.Sigmoid(fc_1, \"pred\")\n\n\nweight2 = m.param_init_net.XavierFill([], 'fc_w2', shape=[1, 2])\nbias2 = m.param_init_net.ConstantFill([], 'fc_b2', shape=[1, ])\n\nfc_2 = m.net.FC([\"pred\", \"fc_w2\", \"fc_b2\"], \"fc2\")\npred2 = m.net.Sigmoid(fc_2, \"pred2\")\n\nxent = m.net.SigmoidCrossEntropyWithLogits([pred2,\"label\"], \"xent\")\nloss = m.net.AveragedLoss(xent, \"loss\")\n\n# learning\ngradient_map = m.AddGradientOperators([loss])\nITER = m.param_init_net.ConstantFill([], \"ITER\", shape=[1], value=0)\nm.net.Iter(ITER, ITER)\nLR = m.net.LearningRate(ITER, \"LR\", base_lr=-0.1, policy=\"step\", stepsize=1, gamma=0.999 )\nONE = m.param_init_net.ConstantFill([], \"ONE\", shape=[1], value=1.0)\n\n# update weights\nm.net.WeightedSum([weight, ONE, gradient_map[weight], LR], weight)\nm.net.WeightedSum([bias, ONE, gradient_map[bias], LR], bias)\n\nm.net.WeightedSum([weight2, ONE, gradient_map[weight2], LR], weight2)\nm.net.WeightedSum([bias2, ONE, gradient_map[bias2], LR], bias2)\n\n\nworkspace.RunNetOnce(m.param_init_net)\n\nworkspace.CreateNet(m.net)\n\nworkspace.RunNet(m.name, 1) \n\nprint(workspace.FetchBlob(\"pred2\"))\nprint(workspace.FetchBlob(\"loss\"))\n\nfor i in range(100000):\n    r = randint(0, 3)\n    inp = np.array([data[r]])\n    inplbl = np.array([label[r]])\n\n    workspace.FeedBlob(\"data\", inp)\n    workspace.FeedBlob(\"label\", inplbl)\n    workspace.RunNet(m.name, 10) \n    \nprint \"------------------\"\nprint(workspace.FetchBlob(\"pred2\"))\nprint(workspace.FetchBlob(\"loss\"))\n\nprint \"------------------\"\nworkspace.FeedBlob(\"data\", data)\nworkspace.FeedBlob(\"label\", label)\n\nworkspace.RunNet(m.name, 1) \n\nprint(workspace.FetchBlob(\"pred2\"))\nprint(workspace.FetchBlob(\"loss\"))\n</code></pre>", "body_text": "Hello,\nI am new to Caffe2.\nFor my first attempts with Caffe2 I am trying a simple Feed Forward, but I don't get a correct prediction.\nCould please somebody explain my mistake?\nIt's a simple net to solve a XOR\ndata = np.array([[0, 0],[0, 1], [1, 0], [1, 1]]).astype(np.float32)\nlabel = np.array([[0],[1],[1],[0]]).astype(np.float32)\n\nworkspace.FeedBlob(\"data\", data)\nworkspace.FeedBlob(\"label\", label)\n\nprint(workspace.FetchBlob(\"data\"))\n\nm = model_helper.ModelHelper(name=\"my first net\")\n\nweight = m.param_init_net.XavierFill([], 'fc_w', shape=[2, 2])\nbias = m.param_init_net.ConstantFill([], 'fc_b', shape=[2, ])\n\nfc_1 = m.net.FC([\"data\", \"fc_w\", \"fc_b\"], \"fc1\")\npred = m.net.Sigmoid(fc_1, \"pred\")\n\n\nweight2 = m.param_init_net.XavierFill([], 'fc_w2', shape=[1, 2])\nbias2 = m.param_init_net.ConstantFill([], 'fc_b2', shape=[1, ])\n\nfc_2 = m.net.FC([\"pred\", \"fc_w2\", \"fc_b2\"], \"fc2\")\npred2 = m.net.Sigmoid(fc_2, \"pred2\")\n\nxent = m.net.SigmoidCrossEntropyWithLogits([pred2,\"label\"], \"xent\")\nloss = m.net.AveragedLoss(xent, \"loss\")\n\n# learning\ngradient_map = m.AddGradientOperators([loss])\nITER = m.param_init_net.ConstantFill([], \"ITER\", shape=[1], value=0)\nm.net.Iter(ITER, ITER)\nLR = m.net.LearningRate(ITER, \"LR\", base_lr=-0.1, policy=\"step\", stepsize=1, gamma=0.999 )\nONE = m.param_init_net.ConstantFill([], \"ONE\", shape=[1], value=1.0)\n\n# update weights\nm.net.WeightedSum([weight, ONE, gradient_map[weight], LR], weight)\nm.net.WeightedSum([bias, ONE, gradient_map[bias], LR], bias)\n\nm.net.WeightedSum([weight2, ONE, gradient_map[weight2], LR], weight2)\nm.net.WeightedSum([bias2, ONE, gradient_map[bias2], LR], bias2)\n\n\nworkspace.RunNetOnce(m.param_init_net)\n\nworkspace.CreateNet(m.net)\n\nworkspace.RunNet(m.name, 1) \n\nprint(workspace.FetchBlob(\"pred2\"))\nprint(workspace.FetchBlob(\"loss\"))\n\nfor i in range(100000):\n    r = randint(0, 3)\n    inp = np.array([data[r]])\n    inplbl = np.array([label[r]])\n\n    workspace.FeedBlob(\"data\", inp)\n    workspace.FeedBlob(\"label\", inplbl)\n    workspace.RunNet(m.name, 10) \n    \nprint \"------------------\"\nprint(workspace.FetchBlob(\"pred2\"))\nprint(workspace.FetchBlob(\"loss\"))\n\nprint \"------------------\"\nworkspace.FeedBlob(\"data\", data)\nworkspace.FeedBlob(\"label\", label)\n\nworkspace.RunNet(m.name, 1) \n\nprint(workspace.FetchBlob(\"pred2\"))\nprint(workspace.FetchBlob(\"loss\"))", "body": "Hello,\r\nI am new to Caffe2.\r\nFor my first attempts with Caffe2 I am trying a simple Feed Forward, but I don't get a correct prediction.\r\nCould please somebody explain my mistake?\r\n\r\nIt's a simple net to solve a XOR\r\n\r\n\r\n```\r\ndata = np.array([[0, 0],[0, 1], [1, 0], [1, 1]]).astype(np.float32)\r\nlabel = np.array([[0],[1],[1],[0]]).astype(np.float32)\r\n\r\nworkspace.FeedBlob(\"data\", data)\r\nworkspace.FeedBlob(\"label\", label)\r\n\r\nprint(workspace.FetchBlob(\"data\"))\r\n\r\nm = model_helper.ModelHelper(name=\"my first net\")\r\n\r\nweight = m.param_init_net.XavierFill([], 'fc_w', shape=[2, 2])\r\nbias = m.param_init_net.ConstantFill([], 'fc_b', shape=[2, ])\r\n\r\nfc_1 = m.net.FC([\"data\", \"fc_w\", \"fc_b\"], \"fc1\")\r\npred = m.net.Sigmoid(fc_1, \"pred\")\r\n\r\n\r\nweight2 = m.param_init_net.XavierFill([], 'fc_w2', shape=[1, 2])\r\nbias2 = m.param_init_net.ConstantFill([], 'fc_b2', shape=[1, ])\r\n\r\nfc_2 = m.net.FC([\"pred\", \"fc_w2\", \"fc_b2\"], \"fc2\")\r\npred2 = m.net.Sigmoid(fc_2, \"pred2\")\r\n\r\nxent = m.net.SigmoidCrossEntropyWithLogits([pred2,\"label\"], \"xent\")\r\nloss = m.net.AveragedLoss(xent, \"loss\")\r\n\r\n# learning\r\ngradient_map = m.AddGradientOperators([loss])\r\nITER = m.param_init_net.ConstantFill([], \"ITER\", shape=[1], value=0)\r\nm.net.Iter(ITER, ITER)\r\nLR = m.net.LearningRate(ITER, \"LR\", base_lr=-0.1, policy=\"step\", stepsize=1, gamma=0.999 )\r\nONE = m.param_init_net.ConstantFill([], \"ONE\", shape=[1], value=1.0)\r\n\r\n# update weights\r\nm.net.WeightedSum([weight, ONE, gradient_map[weight], LR], weight)\r\nm.net.WeightedSum([bias, ONE, gradient_map[bias], LR], bias)\r\n\r\nm.net.WeightedSum([weight2, ONE, gradient_map[weight2], LR], weight2)\r\nm.net.WeightedSum([bias2, ONE, gradient_map[bias2], LR], bias2)\r\n\r\n\r\nworkspace.RunNetOnce(m.param_init_net)\r\n\r\nworkspace.CreateNet(m.net)\r\n\r\nworkspace.RunNet(m.name, 1) \r\n\r\nprint(workspace.FetchBlob(\"pred2\"))\r\nprint(workspace.FetchBlob(\"loss\"))\r\n\r\nfor i in range(100000):\r\n    r = randint(0, 3)\r\n    inp = np.array([data[r]])\r\n    inplbl = np.array([label[r]])\r\n\r\n    workspace.FeedBlob(\"data\", inp)\r\n    workspace.FeedBlob(\"label\", inplbl)\r\n    workspace.RunNet(m.name, 10) \r\n    \r\nprint \"------------------\"\r\nprint(workspace.FetchBlob(\"pred2\"))\r\nprint(workspace.FetchBlob(\"loss\"))\r\n\r\nprint \"------------------\"\r\nworkspace.FeedBlob(\"data\", data)\r\nworkspace.FeedBlob(\"label\", label)\r\n\r\nworkspace.RunNet(m.name, 1) \r\n\r\nprint(workspace.FetchBlob(\"pred2\"))\r\nprint(workspace.FetchBlob(\"loss\"))\r\n```\r\n\r\n"}