{"url": "https://api.github.com/repos/pytorch/pytorch/issues/comments/388778689", "html_url": "https://github.com/pytorch/pytorch/issues/7481#issuecomment-388778689", "issue_url": "https://api.github.com/repos/pytorch/pytorch/issues/7481", "id": 388778689, "node_id": "MDEyOklzc3VlQ29tbWVudDM4ODc3ODY4OQ==", "user": {"login": "emanjavacas", "id": 6195107, "node_id": "MDQ6VXNlcjYxOTUxMDc=", "avatar_url": "https://avatars1.githubusercontent.com/u/6195107?v=4", "gravatar_id": "", "url": "https://api.github.com/users/emanjavacas", "html_url": "https://github.com/emanjavacas", "followers_url": "https://api.github.com/users/emanjavacas/followers", "following_url": "https://api.github.com/users/emanjavacas/following{/other_user}", "gists_url": "https://api.github.com/users/emanjavacas/gists{/gist_id}", "starred_url": "https://api.github.com/users/emanjavacas/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/emanjavacas/subscriptions", "organizations_url": "https://api.github.com/users/emanjavacas/orgs", "repos_url": "https://api.github.com/users/emanjavacas/repos", "events_url": "https://api.github.com/users/emanjavacas/events{/privacy}", "received_events_url": "https://api.github.com/users/emanjavacas/received_events", "type": "User", "site_admin": false}, "created_at": "2018-05-14T11:01:06Z", "updated_at": "2018-05-14T11:01:47Z", "author_association": "NONE", "body_html": "<div class=\"email-fragment\">I do have a use case. In my label encoder I use to transform data to\npytorch tensors I'd like to store the desired output type as a property.\nWhenever I want to deepcopy/pickle that object I got that error.\nOf course, very easy to work around, but a bit counterintuitive that you have to. Also numpy types can be serialized just fine.\n\n2018-05-14 10:19 GMT+02:00 Adam Paszke &lt;notifications@github.com&gt;:</div>\n<span class=\"email-hidden-toggle\"><a href=\"#\">\u2026</a></span><div class=\"email-hidden-reply\">\n<div class=\"email-quoted-reply\"> It would still be nice to support it. We can just return the original\n object, since they\u2019re immutable\n\n \u2014\n You are receiving this because you were mentioned.\n Reply to this email directly, view it on GitHub\n &lt;<a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load issue title\" data-id=\"322073844\" data-permission-text=\"Issue title is private\" data-url=\"https://github.com/pytorch/pytorch/issues/7481\" href=\"https://github.com/pytorch/pytorch/issues/7481#issuecomment-388734765\">#7481 (comment)</a>&gt;,\n or mute the thread\n &lt;<a href=\"https://github.com/notifications/unsubscribe-auth/AF6HoyGTv5gZWgyklnc1PI2P_hT-lx_iks5tyT4FgaJpZM4T6gVR\">https://github.com/notifications/unsubscribe-auth/AF6HoyGTv5gZWgyklnc1PI2P_hT-lx_iks5tyT4FgaJpZM4T6gVR</a>&gt;\n .\n</div>\n<div class=\"email-fragment\"></div>\n<div class=\"email-signature-reply\">-- \nEnrique Manjavacas.</div>\n</div>", "body_text": "I do have a use case. In my label encoder I use to transform data to\npytorch tensors I'd like to store the desired output type as a property.\nWhenever I want to deepcopy/pickle that object I got that error.\nOf course, very easy to work around, but a bit counterintuitive that you have to. Also numpy types can be serialized just fine.\n\n2018-05-14 10:19 GMT+02:00 Adam Paszke <notifications@github.com>:\n\u2026\n It would still be nice to support it. We can just return the original\n object, since they\u2019re immutable\n\n \u2014\n You are receiving this because you were mentioned.\n Reply to this email directly, view it on GitHub\n <#7481 (comment)>,\n or mute the thread\n <https://github.com/notifications/unsubscribe-auth/AF6HoyGTv5gZWgyklnc1PI2P_hT-lx_iks5tyT4FgaJpZM4T6gVR>\n .\n\n\n-- \nEnrique Manjavacas.", "body": "I do have a use case. In my label encoder I use to transform data to\r\npytorch tensors I'd like to store the desired output type as a property.\r\nWhenever I want to deepcopy/pickle that object I got that error.\r\nOf course, very easy to work around, but a bit counterintuitive that you have to. Also numpy types can be serialized just fine.\r\n\r\n2018-05-14 10:19 GMT+02:00 Adam Paszke <notifications@github.com>:\r\n\r\n> It would still be nice to support it. We can just return the original\r\n> object, since they\u2019re immutable\r\n>\r\n> \u2014\r\n> You are receiving this because you were mentioned.\r\n> Reply to this email directly, view it on GitHub\r\n> <https://github.com/pytorch/pytorch/issues/7481#issuecomment-388734765>,\r\n> or mute the thread\r\n> <https://github.com/notifications/unsubscribe-auth/AF6HoyGTv5gZWgyklnc1PI2P_hT-lx_iks5tyT4FgaJpZM4T6gVR>\r\n> .\r\n>\r\n\r\n\r\n\r\n-- \r\nEnrique Manjavacas.\r\n"}