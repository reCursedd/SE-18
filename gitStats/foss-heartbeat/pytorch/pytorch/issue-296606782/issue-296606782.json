{"url": "https://api.github.com/repos/pytorch/pytorch/issues/5206", "repository_url": "https://api.github.com/repos/pytorch/pytorch", "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/5206/labels{/name}", "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/5206/comments", "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/5206/events", "html_url": "https://github.com/pytorch/pytorch/issues/5206", "id": 296606782, "node_id": "MDU6SXNzdWUyOTY2MDY3ODI=", "number": 5206, "title": "[feature request] Add __delitem__ for Sequential", "user": {"login": "vishwakftw", "id": 23639302, "node_id": "MDQ6VXNlcjIzNjM5MzAy", "avatar_url": "https://avatars2.githubusercontent.com/u/23639302?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vishwakftw", "html_url": "https://github.com/vishwakftw", "followers_url": "https://api.github.com/users/vishwakftw/followers", "following_url": "https://api.github.com/users/vishwakftw/following{/other_user}", "gists_url": "https://api.github.com/users/vishwakftw/gists{/gist_id}", "starred_url": "https://api.github.com/users/vishwakftw/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vishwakftw/subscriptions", "organizations_url": "https://api.github.com/users/vishwakftw/orgs", "repos_url": "https://api.github.com/users/vishwakftw/repos", "events_url": "https://api.github.com/users/vishwakftw/events{/privacy}", "received_events_url": "https://api.github.com/users/vishwakftw/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-02-13T04:02:04Z", "updated_at": "2018-02-14T12:05:45Z", "closed_at": "2018-02-14T12:05:45Z", "author_association": "CONTRIBUTOR", "body_html": "<p>Since we have some elementary features for <code>Sequential</code> to behave like a list, I thought we could add this too for completion.</p>\n<p>Expected behaviour:</p>\n<div class=\"highlight highlight-source-python\"><pre><span class=\"pl-k\">&gt;&gt;</span><span class=\"pl-k\">&gt;</span> <span class=\"pl-k\">import</span> torch.nn <span class=\"pl-k\">as</span> nn\n<span class=\"pl-k\">&gt;&gt;</span><span class=\"pl-k\">&gt;</span> k <span class=\"pl-k\">=</span> nn.Sequential(nn.Linear(<span class=\"pl-c1\">30</span>, <span class=\"pl-c1\">40</span>), nn.ReLU(<span class=\"pl-v\">inplace</span><span class=\"pl-k\">=</span><span class=\"pl-c1\">True</span>), nn.Linear(<span class=\"pl-c1\">40</span>, <span class=\"pl-c1\">50</span>), \n<span class=\"pl-c1\">...</span> nn.Linear(<span class=\"pl-c1\">50</span>, <span class=\"pl-c1\">60</span>), nn.Sigmoid(), nn.Linear(<span class=\"pl-c1\">60</span>, <span class=\"pl-c1\">70</span>), nn.Tanh())\n<span class=\"pl-k\">&gt;&gt;</span><span class=\"pl-k\">&gt;</span> <span class=\"pl-k\">del</span> k[<span class=\"pl-c1\">1</span>]  <span class=\"pl-c\"><span class=\"pl-c\">#</span> currently not supported, expected to remove nn.ReLU(inplace=True)</span>\n<span class=\"pl-k\">&gt;&gt;</span><span class=\"pl-k\">&gt;</span> <span class=\"pl-k\">del</span> k[<span class=\"pl-k\">-</span><span class=\"pl-c1\">4</span>:]  <span class=\"pl-c\"><span class=\"pl-c\">#</span> currently not supported, expected to remove the last four elements.</span>\n<span class=\"pl-k\">&gt;&gt;</span><span class=\"pl-k\">&gt;</span> k\nSequential(\n  (<span class=\"pl-c1\">0</span>): Linear(<span class=\"pl-c1\">...</span>)\n  (<span class=\"pl-c1\">1</span>): Linear(<span class=\"pl-c1\">...</span>)\n)</pre></div>\n<p>Please let me know what you think.</p>", "body_text": "Since we have some elementary features for Sequential to behave like a list, I thought we could add this too for completion.\nExpected behaviour:\n>>> import torch.nn as nn\n>>> k = nn.Sequential(nn.Linear(30, 40), nn.ReLU(inplace=True), nn.Linear(40, 50), \n... nn.Linear(50, 60), nn.Sigmoid(), nn.Linear(60, 70), nn.Tanh())\n>>> del k[1]  # currently not supported, expected to remove nn.ReLU(inplace=True)\n>>> del k[-4:]  # currently not supported, expected to remove the last four elements.\n>>> k\nSequential(\n  (0): Linear(...)\n  (1): Linear(...)\n)\nPlease let me know what you think.", "body": "Since we have some elementary features for `Sequential` to behave like a list, I thought we could add this too for completion.\r\n\r\nExpected behaviour:\r\n```python\r\n>>> import torch.nn as nn\r\n>>> k = nn.Sequential(nn.Linear(30, 40), nn.ReLU(inplace=True), nn.Linear(40, 50), \r\n... nn.Linear(50, 60), nn.Sigmoid(), nn.Linear(60, 70), nn.Tanh())\r\n>>> del k[1]  # currently not supported, expected to remove nn.ReLU(inplace=True)\r\n>>> del k[-4:]  # currently not supported, expected to remove the last four elements.\r\n>>> k\r\nSequential(\r\n  (0): Linear(...)\r\n  (1): Linear(...)\r\n)\r\n```\r\n\r\nPlease let me know what you think."}