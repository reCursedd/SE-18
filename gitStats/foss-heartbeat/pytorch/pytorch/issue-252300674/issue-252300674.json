{"url": "https://api.github.com/repos/pytorch/pytorch/issues/2518", "repository_url": "https://api.github.com/repos/pytorch/pytorch", "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/2518/labels{/name}", "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/2518/comments", "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/2518/events", "html_url": "https://github.com/pytorch/pytorch/issues/2518", "id": 252300674, "node_id": "MDU6SXNzdWUyNTIzMDA2NzQ=", "number": 2518, "title": "investigate performance regressions in v0.2.0 + DyNet benchmarks", "user": {"login": "soumith", "id": 1310570, "node_id": "MDQ6VXNlcjEzMTA1NzA=", "avatar_url": "https://avatars0.githubusercontent.com/u/1310570?v=4", "gravatar_id": "", "url": "https://api.github.com/users/soumith", "html_url": "https://github.com/soumith", "followers_url": "https://api.github.com/users/soumith/followers", "following_url": "https://api.github.com/users/soumith/following{/other_user}", "gists_url": "https://api.github.com/users/soumith/gists{/gist_id}", "starred_url": "https://api.github.com/users/soumith/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/soumith/subscriptions", "organizations_url": "https://api.github.com/users/soumith/orgs", "repos_url": "https://api.github.com/users/soumith/repos", "events_url": "https://api.github.com/users/soumith/events{/privacy}", "received_events_url": "https://api.github.com/users/soumith/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 424131847, "node_id": "MDU6TGFiZWw0MjQxMzE4NDc=", "url": "https://api.github.com/repos/pytorch/pytorch/labels/bug", "name": "bug", "color": "b60205", "default": true}, {"id": 443484135, "node_id": "MDU6TGFiZWw0NDM0ODQxMzU=", "url": "https://api.github.com/repos/pytorch/pytorch/labels/high%20priority", "name": "high priority", "color": "F22613", "default": false}], "state": "open", "locked": false, "assignee": {"login": "gchanan", "id": 3768583, "node_id": "MDQ6VXNlcjM3Njg1ODM=", "avatar_url": "https://avatars2.githubusercontent.com/u/3768583?v=4", "gravatar_id": "", "url": "https://api.github.com/users/gchanan", "html_url": "https://github.com/gchanan", "followers_url": "https://api.github.com/users/gchanan/followers", "following_url": "https://api.github.com/users/gchanan/following{/other_user}", "gists_url": "https://api.github.com/users/gchanan/gists{/gist_id}", "starred_url": "https://api.github.com/users/gchanan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/gchanan/subscriptions", "organizations_url": "https://api.github.com/users/gchanan/orgs", "repos_url": "https://api.github.com/users/gchanan/repos", "events_url": "https://api.github.com/users/gchanan/events{/privacy}", "received_events_url": "https://api.github.com/users/gchanan/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "gchanan", "id": 3768583, "node_id": "MDQ6VXNlcjM3Njg1ODM=", "avatar_url": "https://avatars2.githubusercontent.com/u/3768583?v=4", "gravatar_id": "", "url": "https://api.github.com/users/gchanan", "html_url": "https://github.com/gchanan", "followers_url": "https://api.github.com/users/gchanan/followers", "following_url": "https://api.github.com/users/gchanan/following{/other_user}", "gists_url": "https://api.github.com/users/gchanan/gists{/gist_id}", "starred_url": "https://api.github.com/users/gchanan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/gchanan/subscriptions", "organizations_url": "https://api.github.com/users/gchanan/orgs", "repos_url": "https://api.github.com/users/gchanan/repos", "events_url": "https://api.github.com/users/gchanan/events{/privacy}", "received_events_url": "https://api.github.com/users/gchanan/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 17, "created_at": "2017-08-23T14:20:22Z", "updated_at": "2018-05-09T01:50:08Z", "closed_at": null, "author_association": "MEMBER", "body_html": "<p>According to the scripts given in <a href=\"https://twitter.com/kchonyc/status/899832376955744257\" rel=\"nofollow\">https://twitter.com/kchonyc/status/899832376955744257</a> there are two issues:</p>\n<ol>\n<li>0.2.0 has a 2x perf regression over 0.1.2 on small workloads</li>\n<li>pytorch is ~10x slower than DyNet on this workload.</li>\n</ol>\n<p>An issue to track this.</p>\n<p>Here's the google doc with links to the code snippets, current numbers (with and without threading) and will update further as I investigate: <a href=\"https://docs.google.com/spreadsheets/d/1_k_mcxgR94OXH4qD6YYZNiS25QnKbQqAyB72KVD-Z9M/edit?usp=sharing\" rel=\"nofollow\">https://docs.google.com/spreadsheets/d/1_k_mcxgR94OXH4qD6YYZNiS25QnKbQqAyB72KVD-Z9M/edit?usp=sharing</a></p>\n<h4>On PyTorch vs DyNet</h4>\n<p>So far, I've done stack sampling using <code>perf top</code> and it looks like MKL is spending significant time in barriers / threading overhead. DyNet on the other hand seems to be using Eigen's gemm for the workload.</p>\n<h4>On 0.2.0 vs 0.1.2</h4>\n<p>investigating, will edit comment once I know more.</p>\n<p>Thanks to <a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=4028979\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/kyunghyuncho\">@kyunghyuncho</a> <a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=1334513\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/hal3\">@hal3</a> and <a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=398875\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/neubig\">@neubig</a> for bringing this up. I will only close this issue once we're within reasonable ballpark of the DyNet numbers.</p>", "body_text": "According to the scripts given in https://twitter.com/kchonyc/status/899832376955744257 there are two issues:\n\n0.2.0 has a 2x perf regression over 0.1.2 on small workloads\npytorch is ~10x slower than DyNet on this workload.\n\nAn issue to track this.\nHere's the google doc with links to the code snippets, current numbers (with and without threading) and will update further as I investigate: https://docs.google.com/spreadsheets/d/1_k_mcxgR94OXH4qD6YYZNiS25QnKbQqAyB72KVD-Z9M/edit?usp=sharing\nOn PyTorch vs DyNet\nSo far, I've done stack sampling using perf top and it looks like MKL is spending significant time in barriers / threading overhead. DyNet on the other hand seems to be using Eigen's gemm for the workload.\nOn 0.2.0 vs 0.1.2\ninvestigating, will edit comment once I know more.\nThanks to @kyunghyuncho @hal3 and @neubig for bringing this up. I will only close this issue once we're within reasonable ballpark of the DyNet numbers.", "body": "According to the scripts given in https://twitter.com/kchonyc/status/899832376955744257 there are two issues:\r\n1. 0.2.0 has a 2x perf regression over 0.1.2 on small workloads\r\n2. pytorch is ~10x slower than DyNet on this workload.\r\n\r\nAn issue to track this.\r\n\r\nHere's the google doc with links to the code snippets, current numbers (with and without threading) and will update further as I investigate: https://docs.google.com/spreadsheets/d/1_k_mcxgR94OXH4qD6YYZNiS25QnKbQqAyB72KVD-Z9M/edit?usp=sharing\r\n\r\n#### On PyTorch vs DyNet\r\n\r\nSo far, I've done stack sampling using `perf top` and it looks like MKL is spending significant time in barriers / threading overhead. DyNet on the other hand seems to be using Eigen's gemm for the workload.\r\n\r\n#### On 0.2.0 vs 0.1.2\r\ninvestigating, will edit comment once I know more.\r\n\r\n\r\nThanks to @kyunghyuncho @hal3 and @neubig for bringing this up. I will only close this issue once we're within reasonable ballpark of the DyNet numbers."}