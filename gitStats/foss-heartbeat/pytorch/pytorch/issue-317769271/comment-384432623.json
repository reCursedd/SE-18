{"url": "https://api.github.com/repos/pytorch/pytorch/issues/comments/384432623", "html_url": "https://github.com/pytorch/pytorch/issues/6963#issuecomment-384432623", "issue_url": "https://api.github.com/repos/pytorch/pytorch/issues/6963", "id": 384432623, "node_id": "MDEyOklzc3VlQ29tbWVudDM4NDQzMjYyMw==", "user": {"login": "ProGamerGov", "id": 10626398, "node_id": "MDQ6VXNlcjEwNjI2Mzk4", "avatar_url": "https://avatars1.githubusercontent.com/u/10626398?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ProGamerGov", "html_url": "https://github.com/ProGamerGov", "followers_url": "https://api.github.com/users/ProGamerGov/followers", "following_url": "https://api.github.com/users/ProGamerGov/following{/other_user}", "gists_url": "https://api.github.com/users/ProGamerGov/gists{/gist_id}", "starred_url": "https://api.github.com/users/ProGamerGov/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ProGamerGov/subscriptions", "organizations_url": "https://api.github.com/users/ProGamerGov/orgs", "repos_url": "https://api.github.com/users/ProGamerGov/repos", "events_url": "https://api.github.com/users/ProGamerGov/events{/privacy}", "received_events_url": "https://api.github.com/users/ProGamerGov/received_events", "type": "User", "site_admin": false}, "created_at": "2018-04-25T21:01:10Z", "updated_at": "2018-04-25T21:06:42Z", "author_association": "NONE", "body_html": "<p>Looking in to the cause of the difference in my code, one these two methods of adding the intermediate loss for printing are used:</p>\n<p>This was what I was using, and it was giving me a different result:</p>\n<pre><code>                totalLoss += float(mod.loss)\n</code></pre>\n<p>This gives me the same result as printing the loss variable which I ran <code>backward()</code> on:</p>\n<pre><code>                totalLoss += mod.loss\n</code></pre>\n<p>If I use <code>+= float(mod.loss)</code>, I get a different result than just using <code>+= mod.loss</code>. I would imagine that using <code>+= mod.loss.item()</code> is the same as <code>+= float(mod.loss)</code>.</p>\n<p>Maybe I'm just using the wrong method of printing the losses? Which of the 3 should I be using? But how would that explain why the intermediate losses printed via <code>float()</code> or <code>item()</code> don't add up to the same value?</p>", "body_text": "Looking in to the cause of the difference in my code, one these two methods of adding the intermediate loss for printing are used:\nThis was what I was using, and it was giving me a different result:\n                totalLoss += float(mod.loss)\n\nThis gives me the same result as printing the loss variable which I ran backward() on:\n                totalLoss += mod.loss\n\nIf I use += float(mod.loss), I get a different result than just using += mod.loss. I would imagine that using += mod.loss.item() is the same as += float(mod.loss).\nMaybe I'm just using the wrong method of printing the losses? Which of the 3 should I be using? But how would that explain why the intermediate losses printed via float() or item() don't add up to the same value?", "body": "Looking in to the cause of the difference in my code, one these two methods of adding the intermediate loss for printing are used:\r\n\r\n\r\nThis was what I was using, and it was giving me a different result:\r\n```\r\n                totalLoss += float(mod.loss)\r\n```\r\nThis gives me the same result as printing the loss variable which I ran `backward()` on:\r\n\r\n```\r\n                totalLoss += mod.loss\r\n```\r\n\r\nIf I use `+= float(mod.loss)`, I get a different result than just using `+= mod.loss`. I would imagine that using `+= mod.loss.item()` is the same as `+= float(mod.loss)`. \r\n\r\nMaybe I'm just using the wrong method of printing the losses? Which of the 3 should I be using? But how would that explain why the intermediate losses printed via `float()` or `item()` don't add up to the same value?"}