{"url": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/88489820", "pull_request_review_id": 9061645, "id": 88489820, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDg4NDg5ODIw", "diff_hunk": "@@ -239,11 +286,48 @@ your operations.\n To make it easier to understand, given is a small example.\n \n One can also add new modules to a container after construction.\n-You can do this with the add_module function.\n+You can do this with the add_module function \n+or by simply setting them to self.\n+\n+### one can also set modules to the container\n+model.conv1 = nn.Conv2d(12, 24, 3)\n+The container has some important additional methods: \n+\n+**`[generator] parameters()`**\n+\n+returns a generator over all learnable parameters in the container instance. \n+This can typically be passed to the optimizer API\n+\n+**`[dict] parameter_dict()`**\n+\n+returns a dictionary of learnable parameters of the Container.\n+For example: ['conv1.weight' : Parameter(torch.FloatTensor(20x1x5x5)),\n+              'conv1.bias'   : Parameter(torch.FloatTensor(20)),\n+             ]\n+\n+\n+**`load_parameter_dict(dict)`**\n+\n+Given a parameter dict, sets the parameters of self to be the given dict.\n \n+**`children()`**\n \n-The container has one additional method `parameters()` which\n-returns the list of learnable parameters in the container instance.\n+Returns a generator over all the children modules of self\n+\n+**`train()`**\n+\n+Sets the Container to training mode (for modules such as batchnorm, dropout etc.)", "path": "docs/nn.md", "position": null, "original_position": 98, "commit_id": "26d626a47c9c676af456ce6b6025ce5575ad4b2f", "original_commit_id": "9bc671dbc9166788396b86400e0a87414de7dea7", "user": {"login": "apaszke", "id": 4583066, "node_id": "MDQ6VXNlcjQ1ODMwNjY=", "avatar_url": "https://avatars3.githubusercontent.com/u/4583066?v=4", "gravatar_id": "", "url": "https://api.github.com/users/apaszke", "html_url": "https://github.com/apaszke", "followers_url": "https://api.github.com/users/apaszke/followers", "following_url": "https://api.github.com/users/apaszke/following{/other_user}", "gists_url": "https://api.github.com/users/apaszke/gists{/gist_id}", "starred_url": "https://api.github.com/users/apaszke/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/apaszke/subscriptions", "organizations_url": "https://api.github.com/users/apaszke/orgs", "repos_url": "https://api.github.com/users/apaszke/repos", "events_url": "https://api.github.com/users/apaszke/events{/privacy}", "received_events_url": "https://api.github.com/users/apaszke/received_events", "type": "User", "site_admin": false}, "body": "and its child modules\n", "created_at": "2016-11-17T16:28:36Z", "updated_at": "2018-11-23T15:31:54Z", "html_url": "https://github.com/pytorch/pytorch/pull/225#discussion_r88489820", "pull_request_url": "https://api.github.com/repos/pytorch/pytorch/pulls/225", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/88489820"}, "html": {"href": "https://github.com/pytorch/pytorch/pull/225#discussion_r88489820"}, "pull_request": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/225"}}, "body_html": "<p>and its child modules</p>", "body_text": "and its child modules"}