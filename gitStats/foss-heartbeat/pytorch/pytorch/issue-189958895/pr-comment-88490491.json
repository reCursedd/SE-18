{"url": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/88490491", "pull_request_review_id": 9061645, "id": 88490491, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDg4NDkwNDkx", "diff_hunk": "@@ -479,6 +563,54 @@ Parameter | Description\n --------- | -----------\n weight | the learnable weights of the module of shape (in_channels x out_channels x kT x kH x kW)\n bias | the learnable bias of the module of shape (out_channels)\n+## CosineEmbeddingLoss\n+\n+Creates a criterion that measures the loss given  an input tensors x1, x2 \n+\n+and a `Tensor` label `y` with values 1 or -1.\n+This is used for measuring whether two inputs are similar or dissimilar, \n+using the cosine distance, and is typically used for learning nonlinear \n+embeddings or semi-supervised learning.\n+\n+`margin` should be a number from `-1` to `1`, `0` to `0.5` is suggested.\n+If `margin` is missing, the default value is `0`.\n+\n+The loss function for each sample is:\n+\n+                 { 1 - cos(x1, x2),              if y ==  1\n+    loss(x, y) = {\n+                 { max(0, cos(x1, x2) - margin), if y == -1\n+\n+For batched inputs, if the internal variable `sizeAverage` is equal to `True`, \n+the loss function averages the loss over the batch samples; \n+if `sizeAverage` is `False`, then the loss function sums over the \n+batch samples. By default, `sizeAverage = True`.\n+## CrossEntropyLoss\n+\n+This criterion combines `LogSoftMax` and `ClassNLLLoss` in one single class.\n+\n+\n+It is useful when training a classification problem with `n` classes.\n+If provided, the optional argument `weights` should be a 1D `Tensor` \n+assigning weight to each of the classes. \n+This is particularly useful when you have an unbalanced training set.\n+\n+The `input` is expected to contain scores for each class: \n+      `input` has to be a 1D or 2D `Tensor` of size `n` or `batch x n`.\n+This criterion expects a class index (0 to nClasses-1) as the `target`\n+\n+The loss can be described as:\n+\n+loss(x, class) = -log(exp(x[class]) / (\\sum_j exp(x[j])))\n+               = -x[class] + log(\\sum_j exp(x[j]))\n+\n+or in the case of the `weights` argument being specified:\n+\n+loss(x, class) = weights[class] * (-x[class] + log(\\sum_j exp(x[j])))\n+\n+Due to the behaviour of the backend code, it is necessary to set ", "path": "docs/nn.md", "position": null, "original_position": 180, "commit_id": "26d626a47c9c676af456ce6b6025ce5575ad4b2f", "original_commit_id": "9bc671dbc9166788396b86400e0a87414de7dea7", "user": {"login": "apaszke", "id": 4583066, "node_id": "MDQ6VXNlcjQ1ODMwNjY=", "avatar_url": "https://avatars3.githubusercontent.com/u/4583066?v=4", "gravatar_id": "", "url": "https://api.github.com/users/apaszke", "html_url": "https://github.com/apaszke", "followers_url": "https://api.github.com/users/apaszke/followers", "following_url": "https://api.github.com/users/apaszke/following{/other_user}", "gists_url": "https://api.github.com/users/apaszke/gists{/gist_id}", "starred_url": "https://api.github.com/users/apaszke/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/apaszke/subscriptions", "organizations_url": "https://api.github.com/users/apaszke/orgs", "repos_url": "https://api.github.com/users/apaszke/repos", "events_url": "https://api.github.com/users/apaszke/events{/privacy}", "received_events_url": "https://api.github.com/users/apaszke/received_events", "type": "User", "site_admin": false}, "body": "1. This looks like a bug to me\n2. We don't have a non-batch mode (or at least we don't support it officially)\n", "created_at": "2016-11-17T16:31:10Z", "updated_at": "2018-11-23T15:31:54Z", "html_url": "https://github.com/pytorch/pytorch/pull/225#discussion_r88490491", "pull_request_url": "https://api.github.com/repos/pytorch/pytorch/pulls/225", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/88490491"}, "html": {"href": "https://github.com/pytorch/pytorch/pull/225#discussion_r88490491"}, "pull_request": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/225"}}, "body_html": "<ol>\n<li>This looks like a bug to me</li>\n<li>We don't have a non-batch mode (or at least we don't support it officially)</li>\n</ol>", "body_text": "This looks like a bug to me\nWe don't have a non-batch mode (or at least we don't support it officially)"}