{"url": "https://api.github.com/repos/pytorch/pytorch/issues/4607", "repository_url": "https://api.github.com/repos/pytorch/pytorch", "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/4607/labels{/name}", "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/4607/comments", "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/4607/events", "html_url": "https://github.com/pytorch/pytorch/issues/4607", "id": 287829741, "node_id": "MDU6SXNzdWUyODc4Mjk3NDE=", "number": 4607, "title": "conv1d needs additional shape checks", "user": {"login": "soumith", "id": 1310570, "node_id": "MDQ6VXNlcjEzMTA1NzA=", "avatar_url": "https://avatars0.githubusercontent.com/u/1310570?v=4", "gravatar_id": "", "url": "https://api.github.com/users/soumith", "html_url": "https://github.com/soumith", "followers_url": "https://api.github.com/users/soumith/followers", "following_url": "https://api.github.com/users/soumith/following{/other_user}", "gists_url": "https://api.github.com/users/soumith/gists{/gist_id}", "starred_url": "https://api.github.com/users/soumith/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/soumith/subscriptions", "organizations_url": "https://api.github.com/users/soumith/orgs", "repos_url": "https://api.github.com/users/soumith/repos", "events_url": "https://api.github.com/users/soumith/events{/privacy}", "received_events_url": "https://api.github.com/users/soumith/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-01-11T15:54:29Z", "updated_at": "2018-02-15T19:26:54Z", "closed_at": "2018-02-15T19:26:54Z", "author_association": "MEMBER", "body_html": "<pre><code>   import torch.nn as nn\n   from torch import autograd\n   input = autograd.Variable(torch.randn(1, 1, 2))\n   conv = nn.Conv1d(1, 1, 3, stride=2)\n   conv(input)\n</code></pre>\n<p>Should error out but returns without error (returns uninitialized output).<br>\nReported here: <a href=\"https://discuss.pytorch.org/t/minimum-kernel-size-convolution-solved-by-striding/12162\" rel=\"nofollow\">https://discuss.pytorch.org/t/minimum-kernel-size-convolution-solved-by-striding/12162</a></p>", "body_text": "import torch.nn as nn\n   from torch import autograd\n   input = autograd.Variable(torch.randn(1, 1, 2))\n   conv = nn.Conv1d(1, 1, 3, stride=2)\n   conv(input)\n\nShould error out but returns without error (returns uninitialized output).\nReported here: https://discuss.pytorch.org/t/minimum-kernel-size-convolution-solved-by-striding/12162", "body": "```\r\n   import torch.nn as nn\r\n   from torch import autograd\r\n   input = autograd.Variable(torch.randn(1, 1, 2))\r\n   conv = nn.Conv1d(1, 1, 3, stride=2)\r\n   conv(input)\r\n```\r\n\r\nShould error out but returns without error (returns uninitialized output).\r\nReported here: https://discuss.pytorch.org/t/minimum-kernel-size-convolution-solved-by-striding/12162"}