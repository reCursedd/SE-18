{"url": "https://api.github.com/repos/pytorch/pytorch/issues/comments/389509769", "html_url": "https://github.com/pytorch/pytorch/issues/7420#issuecomment-389509769", "issue_url": "https://api.github.com/repos/pytorch/pytorch/issues/7420", "id": 389509769, "node_id": "MDEyOklzc3VlQ29tbWVudDM4OTUwOTc2OQ==", "user": {"login": "avmgithub", "id": 9083746, "node_id": "MDQ6VXNlcjkwODM3NDY=", "avatar_url": "https://avatars1.githubusercontent.com/u/9083746?v=4", "gravatar_id": "", "url": "https://api.github.com/users/avmgithub", "html_url": "https://github.com/avmgithub", "followers_url": "https://api.github.com/users/avmgithub/followers", "following_url": "https://api.github.com/users/avmgithub/following{/other_user}", "gists_url": "https://api.github.com/users/avmgithub/gists{/gist_id}", "starred_url": "https://api.github.com/users/avmgithub/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/avmgithub/subscriptions", "organizations_url": "https://api.github.com/users/avmgithub/orgs", "repos_url": "https://api.github.com/users/avmgithub/repos", "events_url": "https://api.github.com/users/avmgithub/events{/privacy}", "received_events_url": "https://api.github.com/users/avmgithub/received_events", "type": "User", "site_admin": false}, "created_at": "2018-05-16T13:00:45Z", "updated_at": "2018-05-16T13:00:45Z", "author_association": "CONTRIBUTOR", "body_html": "<p><a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=15841449\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/ngimel\">@ngimel</a> <a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=22205833\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/csarofeen\">@csarofeen</a> I'm just tested cudnn 7.1.3 on a Power9 with cuda 9.1 and Volta GPU.  Here are the results for the second test :</p>\n<p>$ python -m unittest test_nn.TestNN.test_variable_sequence_cuda -v<br>\ntest_variable_sequence_cuda (test_nn.TestNN) ...</p>\n<p>FAIL: test_variable_sequence_cuda (test_nn.TestNN) (dtype=torch.float16)</p>\n<p>Traceback (most recent call last):<br>\nFile \"/home/freddie/pytorch/test/test_nn.py\", line 65, in call_helper<br>\nf(self, *args, dtype=dtype)<br>\nFile \"/home/freddie/pytorch/test/test_nn.py\", line 3369, in test_variable_sequence_cuda<br>\nself._test_variable_sequence(\"cuda\", dtype)<br>\nFile \"/home/freddie/pytorch/test/test_nn.py\", line 3361, in _test_variable_sequence<br>\nself.assertEqual(p1.grad, p2.grad, dtype2prec[dtype])<br>\nFile \"/home/freddie/pytorch/test/common.py\", line 245, in assertEqual<br>\nassertTensorsEqual(x, y)<br>\nFile \"/home/freddie/pytorch/test/common.py\", line 230, in assertTensorsEqual<br>\nself.assertTrue(torch.equal(nan_mask, b != b), message)<br>\nAssertionError: False is not true :</p>\n<hr>\n<p>Ran 1 test in 0.753s</p>\n<p>For the first test:</p>\n<p>$ python -m unittest test_nn.TestNN.test_Conv2d_groups_nobias -v<br>\ntest_Conv2d_groups_nobias (test_nn.TestNN) ... FAIL</p>\n<p>FAIL: test_Conv2d_groups_nobias (test_nn.TestNN)</p>\n<p>Traceback (most recent call last):<br>\nFile \"/home/freddie/pytorch/test/test_nn.py\", line 3032, in test_Conv2d_groups_nobias<br>\ndtype2prec[dtype])<br>\nFile \"/home/freddie/pytorch/test/common.py\", line 245, in assertEqual<br>\nassertTensorsEqual(x, y)<br>\nFile \"/home/freddie/pytorch/test/common.py\", line 237, in assertTensorsEqual<br>\nself.assertLessEqual(max_err, prec, message)<br>\nAssertionError: tensor(1.00000e-02 *<br>\n1.5625, dtype=torch.float16, device='cuda:0') not less than or equal to 0.01 :</p>\n<hr>\n<p>Ran 1 test in 0.612s</p>\n<p>FAILED (failures=1)</p>", "body_text": "@ngimel @csarofeen I'm just tested cudnn 7.1.3 on a Power9 with cuda 9.1 and Volta GPU.  Here are the results for the second test :\n$ python -m unittest test_nn.TestNN.test_variable_sequence_cuda -v\ntest_variable_sequence_cuda (test_nn.TestNN) ...\nFAIL: test_variable_sequence_cuda (test_nn.TestNN) (dtype=torch.float16)\nTraceback (most recent call last):\nFile \"/home/freddie/pytorch/test/test_nn.py\", line 65, in call_helper\nf(self, *args, dtype=dtype)\nFile \"/home/freddie/pytorch/test/test_nn.py\", line 3369, in test_variable_sequence_cuda\nself._test_variable_sequence(\"cuda\", dtype)\nFile \"/home/freddie/pytorch/test/test_nn.py\", line 3361, in _test_variable_sequence\nself.assertEqual(p1.grad, p2.grad, dtype2prec[dtype])\nFile \"/home/freddie/pytorch/test/common.py\", line 245, in assertEqual\nassertTensorsEqual(x, y)\nFile \"/home/freddie/pytorch/test/common.py\", line 230, in assertTensorsEqual\nself.assertTrue(torch.equal(nan_mask, b != b), message)\nAssertionError: False is not true :\n\nRan 1 test in 0.753s\nFor the first test:\n$ python -m unittest test_nn.TestNN.test_Conv2d_groups_nobias -v\ntest_Conv2d_groups_nobias (test_nn.TestNN) ... FAIL\nFAIL: test_Conv2d_groups_nobias (test_nn.TestNN)\nTraceback (most recent call last):\nFile \"/home/freddie/pytorch/test/test_nn.py\", line 3032, in test_Conv2d_groups_nobias\ndtype2prec[dtype])\nFile \"/home/freddie/pytorch/test/common.py\", line 245, in assertEqual\nassertTensorsEqual(x, y)\nFile \"/home/freddie/pytorch/test/common.py\", line 237, in assertTensorsEqual\nself.assertLessEqual(max_err, prec, message)\nAssertionError: tensor(1.00000e-02 *\n1.5625, dtype=torch.float16, device='cuda:0') not less than or equal to 0.01 :\n\nRan 1 test in 0.612s\nFAILED (failures=1)", "body": "@ngimel @csarofeen I'm just tested cudnn 7.1.3 on a Power9 with cuda 9.1 and Volta GPU.  Here are the results for the second test :\r\n\r\n$ python -m unittest test_nn.TestNN.test_variable_sequence_cuda -v\r\ntest_variable_sequence_cuda (test_nn.TestNN) ...\r\n\r\nFAIL: test_variable_sequence_cuda (test_nn.TestNN) (dtype=torch.float16)\r\n\r\nTraceback (most recent call last):\r\n  File \"/home/freddie/pytorch/test/test_nn.py\", line 65, in call_helper\r\n    f(self, *args, dtype=dtype)\r\n  File \"/home/freddie/pytorch/test/test_nn.py\", line 3369, in test_variable_sequence_cuda\r\n    self._test_variable_sequence(\"cuda\", dtype)\r\n  File \"/home/freddie/pytorch/test/test_nn.py\", line 3361, in _test_variable_sequence\r\n    self.assertEqual(p1.grad, p2.grad, dtype2prec[dtype])\r\n  File \"/home/freddie/pytorch/test/common.py\", line 245, in assertEqual\r\n    assertTensorsEqual(x, y)\r\n  File \"/home/freddie/pytorch/test/common.py\", line 230, in assertTensorsEqual\r\n    self.assertTrue(torch.equal(nan_mask, b != b), message)\r\nAssertionError: False is not true :\r\n\r\n----------------------------------------------------------------------\r\nRan 1 test in 0.753s\r\n\r\nFor the first test: \r\n\r\n$ python -m unittest test_nn.TestNN.test_Conv2d_groups_nobias -v\r\ntest_Conv2d_groups_nobias (test_nn.TestNN) ... FAIL\r\n\r\n\r\nFAIL: test_Conv2d_groups_nobias (test_nn.TestNN)\r\n \r\nTraceback (most recent call last):\r\n  File \"/home/freddie/pytorch/test/test_nn.py\", line 3032, in test_Conv2d_groups_nobias\r\n    dtype2prec[dtype])\r\n  File \"/home/freddie/pytorch/test/common.py\", line 245, in assertEqual\r\n    assertTensorsEqual(x, y)\r\n  File \"/home/freddie/pytorch/test/common.py\", line 237, in assertTensorsEqual\r\n    self.assertLessEqual(max_err, prec, message)\r\nAssertionError: tensor(1.00000e-02 *\r\n       1.5625, dtype=torch.float16, device='cuda:0') not less than or equal to 0.01 :\r\n\r\n----------------------------------------------------------------------\r\nRan 1 test in 0.612s\r\n\r\nFAILED (failures=1)\r\n\r\n"}