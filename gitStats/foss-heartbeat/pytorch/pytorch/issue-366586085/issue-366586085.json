{"url": "https://api.github.com/repos/pytorch/pytorch/issues/12309", "repository_url": "https://api.github.com/repos/pytorch/pytorch", "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/12309/labels{/name}", "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/12309/comments", "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/12309/events", "html_url": "https://github.com/pytorch/pytorch/issues/12309", "id": 366586085, "node_id": "MDU6SXNzdWUzNjY1ODYwODU=", "number": 12309, "title": "tensor multinomial dependent on shape for some reason", "user": {"login": "shriphani", "id": 357480, "node_id": "MDQ6VXNlcjM1NzQ4MA==", "avatar_url": "https://avatars0.githubusercontent.com/u/357480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/shriphani", "html_url": "https://github.com/shriphani", "followers_url": "https://api.github.com/users/shriphani/followers", "following_url": "https://api.github.com/users/shriphani/following{/other_user}", "gists_url": "https://api.github.com/users/shriphani/gists{/gist_id}", "starred_url": "https://api.github.com/users/shriphani/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/shriphani/subscriptions", "organizations_url": "https://api.github.com/users/shriphani/orgs", "repos_url": "https://api.github.com/users/shriphani/repos", "events_url": "https://api.github.com/users/shriphani/events{/privacy}", "received_events_url": "https://api.github.com/users/shriphani/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 424131847, "node_id": "MDU6TGFiZWw0MjQxMzE4NDc=", "url": "https://api.github.com/repos/pytorch/pytorch/labels/bug", "name": "bug", "color": "b60205", "default": true}, {"id": 443483881, "node_id": "MDU6TGFiZWw0NDM0ODM4ODE=", "url": "https://api.github.com/repos/pytorch/pytorch/labels/todo", "name": "todo", "color": "c2e0c6", "default": false}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 8, "created_at": "2018-10-04T01:14:09Z", "updated_at": "2018-10-17T20:13:52Z", "closed_at": null, "author_association": "NONE", "body_html": "<h2><g-emoji class=\"g-emoji\" alias=\"bug\" fallback-src=\"https://assets-cdn.github.com/images/icons/emoji/unicode/1f41b.png\">\ud83d\udc1b</g-emoji> Bug</h2>\n\n<p>I drew some multinomial samples from the following distribution tensors:</p>\n<pre><code>foo1 = torch.from_numpy(np.array([0.25, 0.25, 0.25, 0.25]))\nfoo2 = torch.from_numpy(np.array([[0.25, 0.25, 0.25, 0.25]]))\nfoo3 = torch.from_numpy(np.array([[[0.25, 0.25, 0.25, 0.25]]]))\n</code></pre>\n<p>Here's a histogram of the entries it produces: (first element is the counts, second is the bins)</p>\n<p><code>foo1</code></p>\n<pre><code>(array([26, 28, 46]), array([0, 1, 2, 3]))\n</code></pre>\n<p>this looks alright:</p>\n<p><code>foo2</code></p>\n<pre><code>(array([25, 28, 47]), array([0, 1, 2, 3]))\n</code></pre>\n<p>also looks alright</p>\n<p><code>foo3</code></p>\n<pre><code>(array([100,   0,   0]), array([0, 1, 2, 3]))\n</code></pre>\n<p>basically it just picked the first element - I don't see why <code>.multinomial</code> needs to depend on this dimension of the probabilities tensor.</p>\n<h2>Environment</h2>\n<pre><code>PyTorch version: 0.4.1\nIs debug build: No\nCUDA used to build PyTorch: 9.0.176\n\nOS: Ubuntu 18.04 LTS\nGCC version: (Ubuntu 7.3.0-16ubuntu3) 7.3.0\nCMake version: Could not collect\n\nPython version: 3.6\nIs CUDA available: Yes\nCUDA runtime version: Could not collect\nGPU models and configuration:\nGPU 0: Tesla K40c\nGPU 1: GeForce GTX TITAN X\nGPU 2: GeForce GTX TITAN X\n\nNvidia driver version: 396.24\ncuDNN version: Probably one of the following:\n/usr/local/cuda-9.0/lib64/libcudnn.so\n/usr/local/cuda-9.0/lib64/libcudnn.so.7\n/usr/local/cuda-9.0/lib64/libcudnn.so.7.1.4\n/usr/local/cuda-9.0/lib64/libcudnn_static.a\n\nVersions of relevant libraries:\n[pip3] numpy (1.13.3)\n[conda] cuda90                    1.0                  h6433d27_0    pytorch\n[conda] pytorch                   0.4.1           py36_py35_py27__9.0.176_7.1.2_2    pytorch\n[conda] torch                     0.4.1                     &lt;pip&gt;\n[conda] torchfile                 0.1.0                     &lt;pip&gt;\n[conda] torchvision               0.2.1                    py36_1    pytorch\n</code></pre>", "body_text": "\ud83d\udc1b Bug\n\nI drew some multinomial samples from the following distribution tensors:\nfoo1 = torch.from_numpy(np.array([0.25, 0.25, 0.25, 0.25]))\nfoo2 = torch.from_numpy(np.array([[0.25, 0.25, 0.25, 0.25]]))\nfoo3 = torch.from_numpy(np.array([[[0.25, 0.25, 0.25, 0.25]]]))\n\nHere's a histogram of the entries it produces: (first element is the counts, second is the bins)\nfoo1\n(array([26, 28, 46]), array([0, 1, 2, 3]))\n\nthis looks alright:\nfoo2\n(array([25, 28, 47]), array([0, 1, 2, 3]))\n\nalso looks alright\nfoo3\n(array([100,   0,   0]), array([0, 1, 2, 3]))\n\nbasically it just picked the first element - I don't see why .multinomial needs to depend on this dimension of the probabilities tensor.\nEnvironment\nPyTorch version: 0.4.1\nIs debug build: No\nCUDA used to build PyTorch: 9.0.176\n\nOS: Ubuntu 18.04 LTS\nGCC version: (Ubuntu 7.3.0-16ubuntu3) 7.3.0\nCMake version: Could not collect\n\nPython version: 3.6\nIs CUDA available: Yes\nCUDA runtime version: Could not collect\nGPU models and configuration:\nGPU 0: Tesla K40c\nGPU 1: GeForce GTX TITAN X\nGPU 2: GeForce GTX TITAN X\n\nNvidia driver version: 396.24\ncuDNN version: Probably one of the following:\n/usr/local/cuda-9.0/lib64/libcudnn.so\n/usr/local/cuda-9.0/lib64/libcudnn.so.7\n/usr/local/cuda-9.0/lib64/libcudnn.so.7.1.4\n/usr/local/cuda-9.0/lib64/libcudnn_static.a\n\nVersions of relevant libraries:\n[pip3] numpy (1.13.3)\n[conda] cuda90                    1.0                  h6433d27_0    pytorch\n[conda] pytorch                   0.4.1           py36_py35_py27__9.0.176_7.1.2_2    pytorch\n[conda] torch                     0.4.1                     <pip>\n[conda] torchfile                 0.1.0                     <pip>\n[conda] torchvision               0.2.1                    py36_1    pytorch", "body": "## \ud83d\udc1b Bug\r\n\r\n<!-- A clear and concise description of what the bug is. -->\r\n\r\nI drew some multinomial samples from the following distribution tensors:\r\n\r\n```\r\nfoo1 = torch.from_numpy(np.array([0.25, 0.25, 0.25, 0.25]))\r\nfoo2 = torch.from_numpy(np.array([[0.25, 0.25, 0.25, 0.25]]))\r\nfoo3 = torch.from_numpy(np.array([[[0.25, 0.25, 0.25, 0.25]]]))\r\n```\r\n\r\nHere's a histogram of the entries it produces: (first element is the counts, second is the bins)\r\n\r\n`foo1`\r\n```\r\n(array([26, 28, 46]), array([0, 1, 2, 3]))\r\n```\r\n\r\nthis looks alright:\r\n\r\n`foo2`\r\n```\r\n(array([25, 28, 47]), array([0, 1, 2, 3]))\r\n```\r\n\r\nalso looks alright\r\n\r\n`foo3`\r\n```\r\n(array([100,   0,   0]), array([0, 1, 2, 3]))\r\n```\r\n\r\nbasically it just picked the first element - I don't see why `.multinomial` needs to depend on this dimension of the probabilities tensor.\r\n\r\n## Environment\r\n```\r\nPyTorch version: 0.4.1\r\nIs debug build: No\r\nCUDA used to build PyTorch: 9.0.176\r\n\r\nOS: Ubuntu 18.04 LTS\r\nGCC version: (Ubuntu 7.3.0-16ubuntu3) 7.3.0\r\nCMake version: Could not collect\r\n\r\nPython version: 3.6\r\nIs CUDA available: Yes\r\nCUDA runtime version: Could not collect\r\nGPU models and configuration:\r\nGPU 0: Tesla K40c\r\nGPU 1: GeForce GTX TITAN X\r\nGPU 2: GeForce GTX TITAN X\r\n\r\nNvidia driver version: 396.24\r\ncuDNN version: Probably one of the following:\r\n/usr/local/cuda-9.0/lib64/libcudnn.so\r\n/usr/local/cuda-9.0/lib64/libcudnn.so.7\r\n/usr/local/cuda-9.0/lib64/libcudnn.so.7.1.4\r\n/usr/local/cuda-9.0/lib64/libcudnn_static.a\r\n\r\nVersions of relevant libraries:\r\n[pip3] numpy (1.13.3)\r\n[conda] cuda90                    1.0                  h6433d27_0    pytorch\r\n[conda] pytorch                   0.4.1           py36_py35_py27__9.0.176_7.1.2_2    pytorch\r\n[conda] torch                     0.4.1                     <pip>\r\n[conda] torchfile                 0.1.0                     <pip>\r\n[conda] torchvision               0.2.1                    py36_1    pytorch\r\n```\r\n\r\n"}