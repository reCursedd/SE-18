{"url": "https://api.github.com/repos/pytorch/pytorch/issues/comments/358657575", "html_url": "https://github.com/pytorch/pytorch/issues/4679#issuecomment-358657575", "issue_url": "https://api.github.com/repos/pytorch/pytorch/issues/4679", "id": 358657575, "node_id": "MDEyOklzc3VlQ29tbWVudDM1ODY1NzU3NQ==", "user": {"login": "Zrachel", "id": 4532062, "node_id": "MDQ6VXNlcjQ1MzIwNjI=", "avatar_url": "https://avatars0.githubusercontent.com/u/4532062?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Zrachel", "html_url": "https://github.com/Zrachel", "followers_url": "https://api.github.com/users/Zrachel/followers", "following_url": "https://api.github.com/users/Zrachel/following{/other_user}", "gists_url": "https://api.github.com/users/Zrachel/gists{/gist_id}", "starred_url": "https://api.github.com/users/Zrachel/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Zrachel/subscriptions", "organizations_url": "https://api.github.com/users/Zrachel/orgs", "repos_url": "https://api.github.com/users/Zrachel/repos", "events_url": "https://api.github.com/users/Zrachel/events{/privacy}", "received_events_url": "https://api.github.com/users/Zrachel/received_events", "type": "User", "site_admin": false}, "created_at": "2018-01-18T14:10:51Z", "updated_at": "2018-01-18T14:18:04Z", "author_association": "NONE", "body_html": "<p>The first process with <code>rank=0</code> sucessfully <code>p.join()</code>, in <code>multiprocessing/popen_fork.py</code>,</p>\n<pre><code>def poll(self, flag=os.WNOHANG):             \n    if self.returncode is None:                          # HERE\n        while True:\n            try:\n                pid, sts = os.waitpid(self.pid, flag)         # HERE\n            except OSError as e:\n                # Child process not yet created. See #1731717\n                # e.errno == errno.ECHILD == 10\n                return None\n            else:\n                break                                                #HERE\n        if pid == self.pid:  #HERE\n            if os.WIFSIGNALED(sts):\n                self.returncode = -os.WTERMSIG(sts)\n            else:\n                assert os.WIFEXITED(sts)\n                self.returncode = os.WEXITSTATUS(sts)\n    return self.returncode                          #HERE(self.returncode=None)\n\n</code></pre>\n<p>The second process:<br>\nstuck at <code>HERE</code></p>\n<pre><code>def poll(self, flag=os.WNOHANG):             \n    if self.returncode is None:                          \n        while True:\n            try:\n                pid, sts = os.waitpid(self.pid, flag)         # HERE\n            except OSError as e:\n                # Child process not yet created. See #1731717\n                # e.errno == errno.ECHILD == 10\n                return None\n</code></pre>\n<p>and the <code>self.pid</code> here is exactly the same with the first process.</p>", "body_text": "The first process with rank=0 sucessfully p.join(), in multiprocessing/popen_fork.py,\ndef poll(self, flag=os.WNOHANG):             \n    if self.returncode is None:                          # HERE\n        while True:\n            try:\n                pid, sts = os.waitpid(self.pid, flag)         # HERE\n            except OSError as e:\n                # Child process not yet created. See #1731717\n                # e.errno == errno.ECHILD == 10\n                return None\n            else:\n                break                                                #HERE\n        if pid == self.pid:  #HERE\n            if os.WIFSIGNALED(sts):\n                self.returncode = -os.WTERMSIG(sts)\n            else:\n                assert os.WIFEXITED(sts)\n                self.returncode = os.WEXITSTATUS(sts)\n    return self.returncode                          #HERE(self.returncode=None)\n\n\nThe second process:\nstuck at HERE\ndef poll(self, flag=os.WNOHANG):             \n    if self.returncode is None:                          \n        while True:\n            try:\n                pid, sts = os.waitpid(self.pid, flag)         # HERE\n            except OSError as e:\n                # Child process not yet created. See #1731717\n                # e.errno == errno.ECHILD == 10\n                return None\n\nand the self.pid here is exactly the same with the first process.", "body": "The first process with `rank=0` sucessfully `p.join()`, in `multiprocessing/popen_fork.py`,\r\n```\r\ndef poll(self, flag=os.WNOHANG):             \r\n    if self.returncode is None:                          # HERE\r\n        while True:\r\n            try:\r\n                pid, sts = os.waitpid(self.pid, flag)         # HERE\r\n            except OSError as e:\r\n                # Child process not yet created. See #1731717\r\n                # e.errno == errno.ECHILD == 10\r\n                return None\r\n            else:\r\n                break                                                #HERE\r\n        if pid == self.pid:  #HERE\r\n            if os.WIFSIGNALED(sts):\r\n                self.returncode = -os.WTERMSIG(sts)\r\n            else:\r\n                assert os.WIFEXITED(sts)\r\n                self.returncode = os.WEXITSTATUS(sts)\r\n    return self.returncode                          #HERE(self.returncode=None)\r\n\r\n```\r\n\r\nThe second process:\r\nstuck at `HERE`\r\n```\r\ndef poll(self, flag=os.WNOHANG):             \r\n    if self.returncode is None:                          \r\n        while True:\r\n            try:\r\n                pid, sts = os.waitpid(self.pid, flag)         # HERE\r\n            except OSError as e:\r\n                # Child process not yet created. See #1731717\r\n                # e.errno == errno.ECHILD == 10\r\n                return None\r\n```\r\nand the `self.pid` here is exactly the same with the first process."}