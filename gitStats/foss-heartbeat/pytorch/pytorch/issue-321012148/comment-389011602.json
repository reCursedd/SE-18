{"url": "https://api.github.com/repos/pytorch/pytorch/issues/comments/389011602", "html_url": "https://github.com/pytorch/pytorch/pull/7361#issuecomment-389011602", "issue_url": "https://api.github.com/repos/pytorch/pytorch/issues/7361", "id": 389011602, "node_id": "MDEyOklzc3VlQ29tbWVudDM4OTAxMTYwMg==", "user": {"login": "yf225", "id": 4063635, "node_id": "MDQ6VXNlcjQwNjM2MzU=", "avatar_url": "https://avatars0.githubusercontent.com/u/4063635?v=4", "gravatar_id": "", "url": "https://api.github.com/users/yf225", "html_url": "https://github.com/yf225", "followers_url": "https://api.github.com/users/yf225/followers", "following_url": "https://api.github.com/users/yf225/following{/other_user}", "gists_url": "https://api.github.com/users/yf225/gists{/gist_id}", "starred_url": "https://api.github.com/users/yf225/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/yf225/subscriptions", "organizations_url": "https://api.github.com/users/yf225/orgs", "repos_url": "https://api.github.com/users/yf225/repos", "events_url": "https://api.github.com/users/yf225/events{/privacy}", "received_events_url": "https://api.github.com/users/yf225/received_events", "type": "User", "site_admin": false}, "created_at": "2018-05-15T01:17:48Z", "updated_at": "2018-05-15T01:17:48Z", "author_association": "CONTRIBUTOR", "body_html": "<p>Possible reason for the need to do <code>nproc - 1</code> (copied from <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load issue title\" data-id=\"322680404\" data-permission-text=\"Issue title is private\" data-url=\"https://github.com/pytorch/pytorch/issues/7547\" data-hovercard-type=\"pull_request\" data-hovercard-url=\"/pytorch/pytorch/pull/7547/hovercard?comment_id=188048707&amp;comment_type=review_comment\" href=\"https://github.com/pytorch/pytorch/pull/7547#discussion_r188048707\">#7547 (comment)</a>):</p>\n<p>I suspect that it's because <code>sccache nvcc</code> is using <code>sccache gcc</code> as host compiler by default (because of the <code>CC</code> and <code>CXX</code> settings, or because <code>/opt/cache/bin</code> is the first path in the <code>PATH</code> env var), but if all cores are already used up by the <code>sccache nvcc</code> invocations, there will be no core available to the <code>sccache gcc</code> invocations and the compilation will be stuck. As a comparison, on Windows we explicitly specify <code>cl.exe</code> as CUDA_HOST_COMPILER and this issue doesn't appear.</p>\n<p>There is probably a way to fix it e.g. by forcing NVCC to use <code>/usr/bin/cc</code> as host compiler regardless of <code>-ccbin</code> settings, but I haven't figured out a nice way to do so yet.</p>", "body_text": "Possible reason for the need to do nproc - 1 (copied from #7547 (comment)):\nI suspect that it's because sccache nvcc is using sccache gcc as host compiler by default (because of the CC and CXX settings, or because /opt/cache/bin is the first path in the PATH env var), but if all cores are already used up by the sccache nvcc invocations, there will be no core available to the sccache gcc invocations and the compilation will be stuck. As a comparison, on Windows we explicitly specify cl.exe as CUDA_HOST_COMPILER and this issue doesn't appear.\nThere is probably a way to fix it e.g. by forcing NVCC to use /usr/bin/cc as host compiler regardless of -ccbin settings, but I haven't figured out a nice way to do so yet.", "body": "Possible reason for the need to do `nproc - 1` (copied from https://github.com/pytorch/pytorch/pull/7547#discussion_r188048707):\r\n\r\nI suspect that it's because `sccache nvcc` is using `sccache gcc` as host compiler by default (because of the `CC` and `CXX` settings, or because `/opt/cache/bin` is the first path in the `PATH` env var), but if all cores are already used up by the `sccache nvcc` invocations, there will be no core available to the `sccache gcc` invocations and the compilation will be stuck. As a comparison, on Windows we explicitly specify `cl.exe` as CUDA_HOST_COMPILER and this issue doesn't appear.\r\n\r\nThere is probably a way to fix it e.g. by forcing NVCC to use `/usr/bin/cc` as host compiler regardless of `-ccbin` settings, but I haven't figured out a nice way to do so yet."}