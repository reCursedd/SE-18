{"url": "https://api.github.com/repos/pytorch/pytorch/issues/comments/291189479", "html_url": "https://github.com/pytorch/pytorch/issues/1171#issuecomment-291189479", "issue_url": "https://api.github.com/repos/pytorch/pytorch/issues/1171", "id": 291189479, "node_id": "MDEyOklzc3VlQ29tbWVudDI5MTE4OTQ3OQ==", "user": {"login": "ngimel", "id": 15841449, "node_id": "MDQ6VXNlcjE1ODQxNDQ5", "avatar_url": "https://avatars3.githubusercontent.com/u/15841449?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ngimel", "html_url": "https://github.com/ngimel", "followers_url": "https://api.github.com/users/ngimel/followers", "following_url": "https://api.github.com/users/ngimel/following{/other_user}", "gists_url": "https://api.github.com/users/ngimel/gists{/gist_id}", "starred_url": "https://api.github.com/users/ngimel/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ngimel/subscriptions", "organizations_url": "https://api.github.com/users/ngimel/orgs", "repos_url": "https://api.github.com/users/ngimel/repos", "events_url": "https://api.github.com/users/ngimel/events{/privacy}", "received_events_url": "https://api.github.com/users/ngimel/received_events", "type": "User", "site_admin": false}, "created_at": "2017-04-03T16:04:43Z", "updated_at": "2017-04-03T16:04:43Z", "author_association": "CONTRIBUTOR", "body_html": "<p>Yes, cudnn v6 is not binary compatible with cudnn v5, so if you just drop in the new library (instead of compiling against it), you are likely to see bugs. In particular, cudnnConvolution*AlgoPerf_t structure was changed, so once you start using cudnnFind routines (that happens if torch.backends.cudnn.benchmark is set to true), anything could happen.</p>", "body_text": "Yes, cudnn v6 is not binary compatible with cudnn v5, so if you just drop in the new library (instead of compiling against it), you are likely to see bugs. In particular, cudnnConvolution*AlgoPerf_t structure was changed, so once you start using cudnnFind routines (that happens if torch.backends.cudnn.benchmark is set to true), anything could happen.", "body": "Yes, cudnn v6 is not binary compatible with cudnn v5, so if you just drop in the new library (instead of compiling against it), you are likely to see bugs. In particular, cudnnConvolution*AlgoPerf_t structure was changed, so once you start using cudnnFind routines (that happens if torch.backends.cudnn.benchmark is set to true), anything could happen. "}