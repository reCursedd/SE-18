{"url": "https://api.github.com/repos/pytorch/pytorch/issues/comments/350061000", "html_url": "https://github.com/pytorch/pytorch/pull/4058#issuecomment-350061000", "issue_url": "https://api.github.com/repos/pytorch/pytorch/issues/4058", "id": 350061000, "node_id": "MDEyOklzc3VlQ29tbWVudDM1MDA2MTAwMA==", "user": {"login": "gchanan", "id": 3768583, "node_id": "MDQ6VXNlcjM3Njg1ODM=", "avatar_url": "https://avatars2.githubusercontent.com/u/3768583?v=4", "gravatar_id": "", "url": "https://api.github.com/users/gchanan", "html_url": "https://github.com/gchanan", "followers_url": "https://api.github.com/users/gchanan/followers", "following_url": "https://api.github.com/users/gchanan/following{/other_user}", "gists_url": "https://api.github.com/users/gchanan/gists{/gist_id}", "starred_url": "https://api.github.com/users/gchanan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/gchanan/subscriptions", "organizations_url": "https://api.github.com/users/gchanan/orgs", "repos_url": "https://api.github.com/users/gchanan/repos", "events_url": "https://api.github.com/users/gchanan/events{/privacy}", "received_events_url": "https://api.github.com/users/gchanan/received_events", "type": "User", "site_admin": false}, "created_at": "2017-12-07T18:56:07Z", "updated_at": "2017-12-07T18:56:07Z", "author_association": "CONTRIBUTOR", "body_html": "<p>I'm not really sure.  For a dense tensor you would get the type object and call a factory function (e.g. zeros, ones, randn with size {}) or call scalarTensor.  I don't know if any of those work for sparse tensors though.</p>", "body_text": "I'm not really sure.  For a dense tensor you would get the type object and call a factory function (e.g. zeros, ones, randn with size {}) or call scalarTensor.  I don't know if any of those work for sparse tensors though.", "body": "I'm not really sure.  For a dense tensor you would get the type object and call a factory function (e.g. zeros, ones, randn with size {}) or call scalarTensor.  I don't know if any of those work for sparse tensors though."}