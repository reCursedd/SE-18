{"url": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/169914371", "pull_request_review_id": 98515584, "id": 169914371, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE2OTkxNDM3MQ==", "diff_hunk": "@@ -1401,25 +1400,33 @@ def fn(x, y, z):\n         ast = torch.jit.frontend.get_jit_ast(fn)\n         self.assertExpected(str(ast))\n \n+    def _make_scalar_vars(self, arr, dtype):\n+        out = []\n+        for inp in arr:\n+            out.append(Variable(torch.from_numpy(np.array([inp], dtype=dtype))))\n+        return out\n+\n     def test_script_while(self):\n-        cu = torch.jit._jit_script_compile('''\n-        def test_while(a, b) -> (c):\n-            while a < 10:\n+        script = '''\n+        def test_while(a, b, max) -> (c):\n+            while a < max:\n                 a = a + 1\n                 b = b + 1\n             c = a + b\n-        ''')\n-        self.assertExpected(str(cu.get_graph('test_while')))\n+        '''\n+        inputs = self._make_scalar_vars([1, 1, 10], np.int32)\n+        outputs = self._make_scalar_vars([20], np.int32)", "path": "test/test_jit.py", "position": 41, "original_position": 41, "commit_id": "f5f7d01b5b3c2859ffdb99316771529d4a624c22", "original_commit_id": "be682ec37e185e4b57c4b125d715d2d9e86485de", "user": {"login": "apaszke", "id": 4583066, "node_id": "MDQ6VXNlcjQ1ODMwNjY=", "avatar_url": "https://avatars3.githubusercontent.com/u/4583066?v=4", "gravatar_id": "", "url": "https://api.github.com/users/apaszke", "html_url": "https://github.com/apaszke", "followers_url": "https://api.github.com/users/apaszke/followers", "following_url": "https://api.github.com/users/apaszke/following{/other_user}", "gists_url": "https://api.github.com/users/apaszke/gists{/gist_id}", "starred_url": "https://api.github.com/users/apaszke/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/apaszke/subscriptions", "organizations_url": "https://api.github.com/users/apaszke/orgs", "repos_url": "https://api.github.com/users/apaszke/repos", "events_url": "https://api.github.com/users/apaszke/events{/privacy}", "received_events_url": "https://api.github.com/users/apaszke/received_events", "type": "User", "site_admin": false}, "body": "We just got `dtypes` into PyTorch, so please use that. The convention is that all tests should pass even without numpy, and if it's unavailable they should be skipped.", "created_at": "2018-02-22T10:33:34Z", "updated_at": "2018-11-23T15:39:48Z", "html_url": "https://github.com/pytorch/pytorch/pull/5293#discussion_r169914371", "pull_request_url": "https://api.github.com/repos/pytorch/pytorch/pulls/5293", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/169914371"}, "html": {"href": "https://github.com/pytorch/pytorch/pull/5293#discussion_r169914371"}, "pull_request": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/5293"}}, "body_html": "<p>We just got <code>dtypes</code> into PyTorch, so please use that. The convention is that all tests should pass even without numpy, and if it's unavailable they should be skipped.</p>", "body_text": "We just got dtypes into PyTorch, so please use that. The convention is that all tests should pass even without numpy, and if it's unavailable they should be skipped."}