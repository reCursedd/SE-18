{"url": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/169498216", "pull_request_review_id": 98034011, "id": 169498216, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE2OTQ5ODIxNg==", "diff_hunk": "@@ -216,46 +489,65 @@ Operation getOperation(jit::Node *node) {\n     }\n   IR_ELSEIF(FusionGroup)\n     auto fusion_fn = sharedFusionCompiler().getOrCompile(value);\n-    return [fusion_fn](const list_of_retainable & inputs, list_of_retainable & outputs) {\n+    auto num_inputs = value->inputs().size();\n+    return [fusion_fn, num_inputs](Stack & stack) {\n       autograd::profiler::RecordFunction record(\"FusionGroup\");\n-      tensor_list tinputs = unsafeToTensorListShare(inputs);\n-      tensor_list toutputs;\n-      fusion_fn->launch(tinputs, toutputs);\n-      moveToListOfRetainables(std::move(toutputs), outputs);\n+      Stack toutputs;\n+      // TODO: have fusion_fn work off of a stack as well\n+      fusion_fn->launch(last(stack, num_inputs), toutputs);\n+      drop(stack, num_inputs);\n+      stack.insert(stack.end(), toutputs.begin(), toutputs.end());\n+      return 0;\n     };\n   IR_ELSEIF(Constant)\n     auto t = value->t(kvalue);\n-    return [t](const list_of_retainable & inputs, list_of_retainable & outputs) {\n-      outputs.push_back(toRetainableShare(t));\n+    return [t](Stack & stack) {\n+      stack.push_back(t);", "path": "torch/csrc/jit/interpreter.cpp", "position": null, "original_position": 478, "commit_id": "f5f7d01b5b3c2859ffdb99316771529d4a624c22", "original_commit_id": "1d156e6faf3a47fefe5940e28940d486090ca429", "user": {"login": "jamesr66a", "id": 4685384, "node_id": "MDQ6VXNlcjQ2ODUzODQ=", "avatar_url": "https://avatars2.githubusercontent.com/u/4685384?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jamesr66a", "html_url": "https://github.com/jamesr66a", "followers_url": "https://api.github.com/users/jamesr66a/followers", "following_url": "https://api.github.com/users/jamesr66a/following{/other_user}", "gists_url": "https://api.github.com/users/jamesr66a/gists{/gist_id}", "starred_url": "https://api.github.com/users/jamesr66a/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jamesr66a/subscriptions", "organizations_url": "https://api.github.com/users/jamesr66a/orgs", "repos_url": "https://api.github.com/users/jamesr66a/repos", "events_url": "https://api.github.com/users/jamesr66a/events{/privacy}", "received_events_url": "https://api.github.com/users/jamesr66a/received_events", "type": "User", "site_admin": false}, "body": "I had to make this\r\n```\r\n      stack.push_back(torch::autograd::make_variable(t, true));\r\n```\r\n\r\nto get downstream operations (such as `add`) to work when passing in Variables from python", "created_at": "2018-02-20T23:51:48Z", "updated_at": "2018-11-23T15:39:47Z", "html_url": "https://github.com/pytorch/pytorch/pull/5293#discussion_r169498216", "pull_request_url": "https://api.github.com/repos/pytorch/pytorch/pulls/5293", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/169498216"}, "html": {"href": "https://github.com/pytorch/pytorch/pull/5293#discussion_r169498216"}, "pull_request": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/5293"}}, "body_html": "<p>I had to make this</p>\n<pre><code>      stack.push_back(torch::autograd::make_variable(t, true));\n</code></pre>\n<p>to get downstream operations (such as <code>add</code>) to work when passing in Variables from python</p>", "body_text": "I had to make this\n      stack.push_back(torch::autograd::make_variable(t, true));\n\nto get downstream operations (such as add) to work when passing in Variables from python"}