{"url": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/206550567", "pull_request_review_id": 141982397, "id": 206550567, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwNjU1MDU2Nw==", "diff_hunk": "@@ -0,0 +1,782 @@\n+#include \"ATen/ATen.h\"\n+#include \"ATen/native/GridSampler.h\"\n+#include \"ATen/cuda/CUDAContext.h\"\n+#include \"ATen/cuda/CUDAApplyUtils.cuh\"\n+#include \"ATen/cuda/detail/TensorInfo.cuh\"\n+#include \"ATen/cuda/detail/IndexUtils.cuh\"\n+#include \"ATen/cuda/detail/KernelUtils.h\"\n+\n+namespace at { namespace native {\n+\n+using namespace at::cuda::detail;\n+\n+using at::native::detail::GridSamplerInterpolation;\n+using at::native::detail::GridSamplerPadding;\n+\n+namespace {\n+\tstatic __forceinline__ __device__\n+\tint clip_coordinates(int in, int clip_limit) {\n+\t  return ::min(clip_limit - 1, ::max(in, static_cast<int>(0)));\n+\t}\n+\n+\tstatic __forceinline__ __device__\n+\tbool within_bounds_2d(int h, int w, int H, int W) {\n+\t  return h >= 0 && h < H && w >= 0 && w < W;\n+\t}\n+\n+\tstatic __forceinline__ __device__\n+\tbool within_bounds_3d(int d, int h, int w, int D, int H, int W) {\n+\t  return d >= 0 && d < D && h >= 0 && h < H && w >= 0 && w < W;\n+\t}\n+\n+  template<typename scalar_t>\n+\tstatic __forceinline__ __device__\n+  void safe_add_2d(scalar_t *data, int h, int w,\n+                   int sH, int sW, int H, int W,\n+                   scalar_t delta) {\n+    if (h >= 0 && h < H && w >= 0 && w < W) {", "path": "aten/src/ATen/native/cuda/GridSampler.cu", "position": null, "original_position": 37, "commit_id": "7acb794792a691f5ebd29a6b634f917536353723", "original_commit_id": "50e624fe8ccd9545cc2bb7d0ce88a6121ac4178a", "user": {"login": "SsnL", "id": 5674597, "node_id": "MDQ6VXNlcjU2NzQ1OTc=", "avatar_url": "https://avatars2.githubusercontent.com/u/5674597?v=4", "gravatar_id": "", "url": "https://api.github.com/users/SsnL", "html_url": "https://github.com/SsnL", "followers_url": "https://api.github.com/users/SsnL/followers", "following_url": "https://api.github.com/users/SsnL/following{/other_user}", "gists_url": "https://api.github.com/users/SsnL/gists{/gist_id}", "starred_url": "https://api.github.com/users/SsnL/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/SsnL/subscriptions", "organizations_url": "https://api.github.com/users/SsnL/orgs", "repos_url": "https://api.github.com/users/SsnL/repos", "events_url": "https://api.github.com/users/SsnL/events{/privacy}", "received_events_url": "https://api.github.com/users/SsnL/received_events", "type": "User", "site_admin": false}, "body": "ah good point. I'll use `within_bounds`.", "created_at": "2018-07-31T14:28:42Z", "updated_at": "2018-11-23T15:48:26Z", "html_url": "https://github.com/pytorch/pytorch/pull/9961#discussion_r206550567", "pull_request_url": "https://api.github.com/repos/pytorch/pytorch/pulls/9961", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/206550567"}, "html": {"href": "https://github.com/pytorch/pytorch/pull/9961#discussion_r206550567"}, "pull_request": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/9961"}}, "body_html": "<p>ah good point. I'll use <code>within_bounds</code>.</p>", "body_text": "ah good point. I'll use within_bounds.", "in_reply_to_id": 206549740}