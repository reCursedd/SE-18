{"url": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/206372474", "pull_request_review_id": 141774619, "id": 206372474, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwNjM3MjQ3NA==", "diff_hunk": "@@ -0,0 +1,780 @@\n+#include \"ATen/ATen.h\"\n+#include \"ATen/NativeFunctions.h\"\n+#include \"ATen/detail/CUDAHooksInterface.h\"\n+#include \"ATen/native/GridSampler.h\"\n+\n+#ifdef _OPENMP\n+#include <omp.h>\n+#endif\n+\n+namespace at { namespace native {\n+\n+using at::native::detail::GridSamplerInterpolation;\n+using at::native::detail::GridSamplerPadding;\n+\n+namespace {\n+  static inline int64_t clip_coordinates(int64_t in, int64_t clip_limit) {\n+    return std::min(clip_limit - 1, std::max(in, static_cast<int64_t>(0)));\n+  }\n+\n+  static inline bool within_bounds_2d(int64_t h, int64_t w, int64_t H, int64_t W) {\n+    return h >= 0 && h < H && w >= 0 && w < W;\n+  }\n+\n+  static inline bool within_bounds_3d(int64_t d, int64_t h, int64_t w, int64_t D, int64_t H, int64_t W) {\n+    return d >= 0 && d < D && h >= 0 && h < H && w >= 0 && w < W;\n+  }\n+\n+  template<typename scalar_t>\n+  static inline void safe_add_2d(scalar_t *data, int64_t h, int64_t w,\n+                                 int64_t sH, int64_t sW, int64_t H, int64_t W,\n+                                 scalar_t delta) {\n+    if (h >= 0 && h < H && w >= 0 && w < W) {\n+      data[h * sH + w * sW] += delta;", "path": "aten/src/ATen/native/GridSampler.cpp", "position": null, "original_position": 33, "commit_id": "7acb794792a691f5ebd29a6b634f917536353723", "original_commit_id": "50e624fe8ccd9545cc2bb7d0ce88a6121ac4178a", "user": {"login": "SsnL", "id": 5674597, "node_id": "MDQ6VXNlcjU2NzQ1OTc=", "avatar_url": "https://avatars2.githubusercontent.com/u/5674597?v=4", "gravatar_id": "", "url": "https://api.github.com/users/SsnL", "html_url": "https://github.com/SsnL", "followers_url": "https://api.github.com/users/SsnL/followers", "following_url": "https://api.github.com/users/SsnL/following{/other_user}", "gists_url": "https://api.github.com/users/SsnL/gists{/gist_id}", "starred_url": "https://api.github.com/users/SsnL/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/SsnL/subscriptions", "organizations_url": "https://api.github.com/users/SsnL/orgs", "repos_url": "https://api.github.com/users/SsnL/repos", "events_url": "https://api.github.com/users/SsnL/events{/privacy}", "received_events_url": "https://api.github.com/users/SsnL/received_events", "type": "User", "site_admin": false}, "body": "On CPU previously it was\r\n```\r\n      real old_value = THTensor_(fastGet4d)(input, n, c, y, x); \\\r\n      THTensor_(fastSet4d)(input, n, c, y, x, value + old_value); \\\r\n```\r\nSo unfortunately it doesn't explain the perf difference. \r\n\r\nI did do some optimization in computing the offset of a value in a tensor, but that doesn't quite explain 6~10x perf difference.", "created_at": "2018-07-31T01:35:33Z", "updated_at": "2018-11-23T15:48:24Z", "html_url": "https://github.com/pytorch/pytorch/pull/9961#discussion_r206372474", "pull_request_url": "https://api.github.com/repos/pytorch/pytorch/pulls/9961", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/206372474"}, "html": {"href": "https://github.com/pytorch/pytorch/pull/9961#discussion_r206372474"}, "pull_request": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/9961"}}, "body_html": "<p>On CPU previously it was</p>\n<pre><code>      real old_value = THTensor_(fastGet4d)(input, n, c, y, x); \\\n      THTensor_(fastSet4d)(input, n, c, y, x, value + old_value); \\\n</code></pre>\n<p>So unfortunately it doesn't explain the perf difference.</p>\n<p>I did do some optimization in computing the offset of a value in a tensor, but that doesn't quite explain 6~10x perf difference.</p>", "body_text": "On CPU previously it was\n      real old_value = THTensor_(fastGet4d)(input, n, c, y, x); \\\n      THTensor_(fastSet4d)(input, n, c, y, x, value + old_value); \\\n\nSo unfortunately it doesn't explain the perf difference.\nI did do some optimization in computing the offset of a value in a tensor, but that doesn't quite explain 6~10x perf difference.", "in_reply_to_id": 206369670}