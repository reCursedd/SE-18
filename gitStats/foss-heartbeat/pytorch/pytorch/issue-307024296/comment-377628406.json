{"url": "https://api.github.com/repos/pytorch/pytorch/issues/comments/377628406", "html_url": "https://github.com/pytorch/pytorch/issues/5912#issuecomment-377628406", "issue_url": "https://api.github.com/repos/pytorch/pytorch/issues/5912", "id": 377628406, "node_id": "MDEyOklzc3VlQ29tbWVudDM3NzYyODQwNg==", "user": {"login": "jekbradbury", "id": 11729078, "node_id": "MDQ6VXNlcjExNzI5MDc4", "avatar_url": "https://avatars2.githubusercontent.com/u/11729078?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jekbradbury", "html_url": "https://github.com/jekbradbury", "followers_url": "https://api.github.com/users/jekbradbury/followers", "following_url": "https://api.github.com/users/jekbradbury/following{/other_user}", "gists_url": "https://api.github.com/users/jekbradbury/gists{/gist_id}", "starred_url": "https://api.github.com/users/jekbradbury/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jekbradbury/subscriptions", "organizations_url": "https://api.github.com/users/jekbradbury/orgs", "repos_url": "https://api.github.com/users/jekbradbury/repos", "events_url": "https://api.github.com/users/jekbradbury/events{/privacy}", "received_events_url": "https://api.github.com/users/jekbradbury/received_events", "type": "User", "site_admin": false}, "created_at": "2018-03-30T21:33:57Z", "updated_at": "2018-03-30T21:34:35Z", "author_association": "CONTRIBUTOR", "body_html": "<p>Is this the issue? Note the \"ouch\" and the explicit for loop...<br>\n<div class=\"border rounded-1 my-2\">\n  <div class=\"f6 px-3 py-2 lh-condensed border-bottom bg-gray-light\">\n    <p class=\"mb-0 text-bold\">\n      <a href=\"https://github.com/pytorch/pytorch/blob/4563e190c4e5b18322a36064854409c0fb51f32e/aten/src/THCUNN/generic/TemporalConvolution.cu#L71-L108\">pytorch/aten/src/THCUNN/generic/TemporalConvolution.cu</a>\n    </p>\n    <p class=\"mb-0 text-gray-light\">\n        Lines 71 to 108\n      in\n      <a data-pjax=\"true\" class=\"commit-tease-sha\" href=\"/pytorch/pytorch/commit/4563e190c4e5b18322a36064854409c0fb51f32e\">4563e19</a>\n    </p>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper blob-wrapper-embedded data\">\n    <table class=\"highlight tab-size mb-0 js-file-line-container\" data-tab-size=\"8\">\n\n        <tbody><tr class=\"border-0\">\n          <td id=\"L71\" class=\"blob-num border-0 px-3 py-0 bg-white js-line-number\" data-line-number=\"71\"></td>\n          <td id=\"LC71\" class=\"blob-code border-0 px-3 py-0 bg-white blob-code-inner js-file-line\"> <span class=\"pl-k\">if</span> (input-&gt;<span class=\"pl-smi\">nDimension</span> == <span class=\"pl-c1\">2</span>) </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L72\" class=\"blob-num border-0 px-3 py-0 bg-white js-line-number\" data-line-number=\"72\"></td>\n          <td id=\"LC72\" class=\"blob-code border-0 px-3 py-0 bg-white blob-code-inner js-file-line\"> { </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L73\" class=\"blob-num border-0 px-3 py-0 bg-white js-line-number\" data-line-number=\"73\"></td>\n          <td id=\"LC73\" class=\"blob-code border-0 px-3 py-0 bg-white blob-code-inner js-file-line\">   <span class=\"pl-c1\">THCTensor_</span>(resize2d)(state, output, </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L74\" class=\"blob-num border-0 px-3 py-0 bg-white js-line-number\" data-line-number=\"74\"></td>\n          <td id=\"LC74\" class=\"blob-code border-0 px-3 py-0 bg-white blob-code-inner js-file-line\">                         nOutputFrame, </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L75\" class=\"blob-num border-0 px-3 py-0 bg-white js-line-number\" data-line-number=\"75\"></td>\n          <td id=\"LC75\" class=\"blob-code border-0 px-3 py-0 bg-white blob-code-inner js-file-line\">                         outputFrameSize); </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L76\" class=\"blob-num border-0 px-3 py-0 bg-white js-line-number\" data-line-number=\"76\"></td>\n          <td id=\"LC76\" class=\"blob-code border-0 px-3 py-0 bg-white blob-code-inner js-file-line\">  </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L77\" class=\"blob-num border-0 px-3 py-0 bg-white js-line-number\" data-line-number=\"77\"></td>\n          <td id=\"LC77\" class=\"blob-code border-0 px-3 py-0 bg-white blob-code-inner js-file-line\">   <span class=\"pl-c\"><span class=\"pl-c\">/*</span> bias first <span class=\"pl-c\">*/</span></span> </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L78\" class=\"blob-num border-0 px-3 py-0 bg-white js-line-number\" data-line-number=\"78\"></td>\n          <td id=\"LC78\" class=\"blob-code border-0 px-3 py-0 bg-white blob-code-inner js-file-line\">   <span class=\"pl-k\">for</span>(k = <span class=\"pl-c1\">0</span>; k &lt; nOutputFrame; k++) </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L79\" class=\"blob-num border-0 px-3 py-0 bg-white js-line-number\" data-line-number=\"79\"></td>\n          <td id=\"LC79\" class=\"blob-code border-0 px-3 py-0 bg-white blob-code-inner js-file-line\">   { </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L80\" class=\"blob-num border-0 px-3 py-0 bg-white js-line-number\" data-line-number=\"80\"></td>\n          <td id=\"LC80\" class=\"blob-code border-0 px-3 py-0 bg-white blob-code-inner js-file-line\">     <span class=\"pl-c1\">THCTensor_</span>(<span class=\"pl-c1\">select</span>)(state, outputWindow, output, <span class=\"pl-c1\">0</span>, k); </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L81\" class=\"blob-num border-0 px-3 py-0 bg-white js-line-number\" data-line-number=\"81\"></td>\n          <td id=\"LC81\" class=\"blob-code border-0 px-3 py-0 bg-white blob-code-inner js-file-line\">     <span class=\"pl-c1\">THCTensor_</span>(copy)(state, outputWindow, bias); </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L82\" class=\"blob-num border-0 px-3 py-0 bg-white js-line-number\" data-line-number=\"82\"></td>\n          <td id=\"LC82\" class=\"blob-code border-0 px-3 py-0 bg-white blob-code-inner js-file-line\">   } </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L83\" class=\"blob-num border-0 px-3 py-0 bg-white js-line-number\" data-line-number=\"83\"></td>\n          <td id=\"LC83\" class=\"blob-code border-0 px-3 py-0 bg-white blob-code-inner js-file-line\">  </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L84\" class=\"blob-num border-0 px-3 py-0 bg-white js-line-number\" data-line-number=\"84\"></td>\n          <td id=\"LC84\" class=\"blob-code border-0 px-3 py-0 bg-white blob-code-inner js-file-line\">  </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L85\" class=\"blob-num border-0 px-3 py-0 bg-white js-line-number\" data-line-number=\"85\"></td>\n          <td id=\"LC85\" class=\"blob-code border-0 px-3 py-0 bg-white blob-code-inner js-file-line\">   <span class=\"pl-c\"><span class=\"pl-c\">/*</span> ouch <span class=\"pl-c\">*/</span></span> </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L86\" class=\"blob-num border-0 px-3 py-0 bg-white js-line-number\" data-line-number=\"86\"></td>\n          <td id=\"LC86\" class=\"blob-code border-0 px-3 py-0 bg-white blob-code-inner js-file-line\">   <span class=\"pl-k\">for</span>(k = <span class=\"pl-c1\">0</span>; nOutputFrame &gt; <span class=\"pl-c1\">0</span>; k++) </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L87\" class=\"blob-num border-0 px-3 py-0 bg-white js-line-number\" data-line-number=\"87\"></td>\n          <td id=\"LC87\" class=\"blob-code border-0 px-3 py-0 bg-white blob-code-inner js-file-line\">   { </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L88\" class=\"blob-num border-0 px-3 py-0 bg-white js-line-number\" data-line-number=\"88\"></td>\n          <td id=\"LC88\" class=\"blob-code border-0 px-3 py-0 bg-white blob-code-inner js-file-line\">     <span class=\"pl-c1\">int64_t</span> outputFrameStride = (<span class=\"pl-c1\">kW</span>-<span class=\"pl-c1\">1</span>)/dW+<span class=\"pl-c1\">1</span>; </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L89\" class=\"blob-num border-0 px-3 py-0 bg-white js-line-number\" data-line-number=\"89\"></td>\n          <td id=\"LC89\" class=\"blob-code border-0 px-3 py-0 bg-white blob-code-inner js-file-line\">     <span class=\"pl-c1\">int64_t</span> inputFrameStride = outputFrameStride*dW; </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L90\" class=\"blob-num border-0 px-3 py-0 bg-white js-line-number\" data-line-number=\"90\"></td>\n          <td id=\"LC90\" class=\"blob-code border-0 px-3 py-0 bg-white blob-code-inner js-file-line\">     <span class=\"pl-c1\">int64_t</span> nFrame = (nInputFrame-k*dW-<span class=\"pl-c1\">kW</span>)/inputFrameStride + <span class=\"pl-c1\">1</span>; </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L91\" class=\"blob-num border-0 px-3 py-0 bg-white js-line-number\" data-line-number=\"91\"></td>\n          <td id=\"LC91\" class=\"blob-code border-0 px-3 py-0 bg-white blob-code-inner js-file-line\">     nOutputFrame -= nFrame; </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L92\" class=\"blob-num border-0 px-3 py-0 bg-white js-line-number\" data-line-number=\"92\"></td>\n          <td id=\"LC92\" class=\"blob-code border-0 px-3 py-0 bg-white blob-code-inner js-file-line\">  </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L93\" class=\"blob-num border-0 px-3 py-0 bg-white js-line-number\" data-line-number=\"93\"></td>\n          <td id=\"LC93\" class=\"blob-code border-0 px-3 py-0 bg-white blob-code-inner js-file-line\">     <span class=\"pl-c1\">THCTensor_</span>(setStorage2d)(state, inputWindow, input-&gt;<span class=\"pl-smi\">storage</span>, </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L94\" class=\"blob-num border-0 px-3 py-0 bg-white js-line-number\" data-line-number=\"94\"></td>\n          <td id=\"LC94\" class=\"blob-code border-0 px-3 py-0 bg-white blob-code-inner js-file-line\">                             input-&gt;<span class=\"pl-smi\">storageOffset</span>+k*dW*input-&gt;<span class=\"pl-smi\">size</span>[<span class=\"pl-c1\">1</span>], </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L95\" class=\"blob-num border-0 px-3 py-0 bg-white js-line-number\" data-line-number=\"95\"></td>\n          <td id=\"LC95\" class=\"blob-code border-0 px-3 py-0 bg-white blob-code-inner js-file-line\">                             nFrame, inputFrameStride*input-&gt;<span class=\"pl-smi\">size</span>[<span class=\"pl-c1\">1</span>], </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L96\" class=\"blob-num border-0 px-3 py-0 bg-white js-line-number\" data-line-number=\"96\"></td>\n          <td id=\"LC96\" class=\"blob-code border-0 px-3 py-0 bg-white blob-code-inner js-file-line\">                             <span class=\"pl-c1\">kW</span>*input-&gt;<span class=\"pl-smi\">size</span>[<span class=\"pl-c1\">1</span>], <span class=\"pl-c1\">1</span>); </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L97\" class=\"blob-num border-0 px-3 py-0 bg-white js-line-number\" data-line-number=\"97\"></td>\n          <td id=\"LC97\" class=\"blob-code border-0 px-3 py-0 bg-white blob-code-inner js-file-line\">  </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L98\" class=\"blob-num border-0 px-3 py-0 bg-white js-line-number\" data-line-number=\"98\"></td>\n          <td id=\"LC98\" class=\"blob-code border-0 px-3 py-0 bg-white blob-code-inner js-file-line\">     <span class=\"pl-c1\">THCTensor_</span>(setStorage2d)(state, outputWindow, output-&gt;<span class=\"pl-smi\">storage</span>, </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L99\" class=\"blob-num border-0 px-3 py-0 bg-white js-line-number\" data-line-number=\"99\"></td>\n          <td id=\"LC99\" class=\"blob-code border-0 px-3 py-0 bg-white blob-code-inner js-file-line\">                             output-&gt;<span class=\"pl-smi\">storageOffset</span> + k*output-&gt;<span class=\"pl-smi\">size</span>[<span class=\"pl-c1\">1</span>], </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L100\" class=\"blob-num border-0 px-3 py-0 bg-white js-line-number\" data-line-number=\"100\"></td>\n          <td id=\"LC100\" class=\"blob-code border-0 px-3 py-0 bg-white blob-code-inner js-file-line\">                             nFrame, outputFrameStride*output-&gt;<span class=\"pl-smi\">size</span>[<span class=\"pl-c1\">1</span>], </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L101\" class=\"blob-num border-0 px-3 py-0 bg-white js-line-number\" data-line-number=\"101\"></td>\n          <td id=\"LC101\" class=\"blob-code border-0 px-3 py-0 bg-white blob-code-inner js-file-line\">                             output-&gt;<span class=\"pl-smi\">size</span>[<span class=\"pl-c1\">1</span>], <span class=\"pl-c1\">1</span>); </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L102\" class=\"blob-num border-0 px-3 py-0 bg-white js-line-number\" data-line-number=\"102\"></td>\n          <td id=\"LC102\" class=\"blob-code border-0 px-3 py-0 bg-white blob-code-inner js-file-line\">  </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L103\" class=\"blob-num border-0 px-3 py-0 bg-white js-line-number\" data-line-number=\"103\"></td>\n          <td id=\"LC103\" class=\"blob-code border-0 px-3 py-0 bg-white blob-code-inner js-file-line\">     THCTensor *tweight = <span class=\"pl-c1\">THCTensor_</span>(<span class=\"pl-k\">new</span>)(state); </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L104\" class=\"blob-num border-0 px-3 py-0 bg-white js-line-number\" data-line-number=\"104\"></td>\n          <td id=\"LC104\" class=\"blob-code border-0 px-3 py-0 bg-white blob-code-inner js-file-line\">     <span class=\"pl-c1\">THCTensor_</span>(transpose)(state, tweight, weight, <span class=\"pl-c1\">0</span>, <span class=\"pl-c1\">1</span>); </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L105\" class=\"blob-num border-0 px-3 py-0 bg-white js-line-number\" data-line-number=\"105\"></td>\n          <td id=\"LC105\" class=\"blob-code border-0 px-3 py-0 bg-white blob-code-inner js-file-line\">     <span class=\"pl-c1\">THCTensor_</span>(addmm)(state, outputWindow, ScalarConvert&lt;<span class=\"pl-k\">int</span>, real&gt;::<span class=\"pl-c1\">to</span>(<span class=\"pl-c1\">1</span>), outputWindow, ScalarConvert&lt;<span class=\"pl-k\">int</span>, real&gt;::<span class=\"pl-c1\">to</span>(<span class=\"pl-c1\">1</span>), inputWindow, tweight); </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L106\" class=\"blob-num border-0 px-3 py-0 bg-white js-line-number\" data-line-number=\"106\"></td>\n          <td id=\"LC106\" class=\"blob-code border-0 px-3 py-0 bg-white blob-code-inner js-file-line\">     <span class=\"pl-c1\">THCTensor_</span>(<span class=\"pl-c1\">free</span>)(state, tweight); </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L107\" class=\"blob-num border-0 px-3 py-0 bg-white js-line-number\" data-line-number=\"107\"></td>\n          <td id=\"LC107\" class=\"blob-code border-0 px-3 py-0 bg-white blob-code-inner js-file-line\">   } </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L108\" class=\"blob-num border-0 px-3 py-0 bg-white js-line-number\" data-line-number=\"108\"></td>\n          <td id=\"LC108\" class=\"blob-code border-0 px-3 py-0 bg-white blob-code-inner js-file-line\"> } </td>\n        </tr>\n    </tbody></table>\n  </div>\n</div>\n</p>", "body_text": "Is this the issue? Note the \"ouch\" and the explicit for loop...\n\n  \n    \n      pytorch/aten/src/THCUNN/generic/TemporalConvolution.cu\n    \n    \n        Lines 71 to 108\n      in\n      4563e19\n    \n    \n    \n    \n\n        \n          \n           if (input->nDimension == 2) \n        \n\n        \n          \n           { \n        \n\n        \n          \n             THCTensor_(resize2d)(state, output, \n        \n\n        \n          \n                                   nOutputFrame, \n        \n\n        \n          \n                                   outputFrameSize); \n        \n\n        \n          \n            \n        \n\n        \n          \n             /* bias first */ \n        \n\n        \n          \n             for(k = 0; k < nOutputFrame; k++) \n        \n\n        \n          \n             { \n        \n\n        \n          \n               THCTensor_(select)(state, outputWindow, output, 0, k); \n        \n\n        \n          \n               THCTensor_(copy)(state, outputWindow, bias); \n        \n\n        \n          \n             } \n        \n\n        \n          \n            \n        \n\n        \n          \n            \n        \n\n        \n          \n             /* ouch */ \n        \n\n        \n          \n             for(k = 0; nOutputFrame > 0; k++) \n        \n\n        \n          \n             { \n        \n\n        \n          \n               int64_t outputFrameStride = (kW-1)/dW+1; \n        \n\n        \n          \n               int64_t inputFrameStride = outputFrameStride*dW; \n        \n\n        \n          \n               int64_t nFrame = (nInputFrame-k*dW-kW)/inputFrameStride + 1; \n        \n\n        \n          \n               nOutputFrame -= nFrame; \n        \n\n        \n          \n            \n        \n\n        \n          \n               THCTensor_(setStorage2d)(state, inputWindow, input->storage, \n        \n\n        \n          \n                                       input->storageOffset+k*dW*input->size[1], \n        \n\n        \n          \n                                       nFrame, inputFrameStride*input->size[1], \n        \n\n        \n          \n                                       kW*input->size[1], 1); \n        \n\n        \n          \n            \n        \n\n        \n          \n               THCTensor_(setStorage2d)(state, outputWindow, output->storage, \n        \n\n        \n          \n                                       output->storageOffset + k*output->size[1], \n        \n\n        \n          \n                                       nFrame, outputFrameStride*output->size[1], \n        \n\n        \n          \n                                       output->size[1], 1); \n        \n\n        \n          \n            \n        \n\n        \n          \n               THCTensor *tweight = THCTensor_(new)(state); \n        \n\n        \n          \n               THCTensor_(transpose)(state, tweight, weight, 0, 1); \n        \n\n        \n          \n               THCTensor_(addmm)(state, outputWindow, ScalarConvert<int, real>::to(1), outputWindow, ScalarConvert<int, real>::to(1), inputWindow, tweight); \n        \n\n        \n          \n               THCTensor_(free)(state, tweight); \n        \n\n        \n          \n             } \n        \n\n        \n          \n           }", "body": "Is this the issue? Note the \"ouch\" and the explicit for loop...\r\nhttps://github.com/pytorch/pytorch/blob/4563e190c4e5b18322a36064854409c0fb51f32e/aten/src/THCUNN/generic/TemporalConvolution.cu#L71-L108"}