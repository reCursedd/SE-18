{"url": "https://api.github.com/repos/pytorch/pytorch/issues/7844", "repository_url": "https://api.github.com/repos/pytorch/pytorch", "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/7844/labels{/name}", "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/7844/comments", "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/7844/events", "html_url": "https://github.com/pytorch/pytorch/issues/7844", "id": 326528113, "node_id": "MDU6SXNzdWUzMjY1MjgxMTM=", "number": 7844, "title": "\"Parameters of a model after .cuda() will be different objects with those before the call.\" is wrong.", "user": {"login": "freud14", "id": 1090012, "node_id": "MDQ6VXNlcjEwOTAwMTI=", "avatar_url": "https://avatars1.githubusercontent.com/u/1090012?v=4", "gravatar_id": "", "url": "https://api.github.com/users/freud14", "html_url": "https://github.com/freud14", "followers_url": "https://api.github.com/users/freud14/followers", "following_url": "https://api.github.com/users/freud14/following{/other_user}", "gists_url": "https://api.github.com/users/freud14/gists{/gist_id}", "starred_url": "https://api.github.com/users/freud14/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/freud14/subscriptions", "organizations_url": "https://api.github.com/users/freud14/orgs", "repos_url": "https://api.github.com/users/freud14/repos", "events_url": "https://api.github.com/users/freud14/events{/privacy}", "received_events_url": "https://api.github.com/users/freud14/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 443483881, "node_id": "MDU6TGFiZWw0NDM0ODM4ODE=", "url": "https://api.github.com/repos/pytorch/pytorch/labels/todo", "name": "todo", "color": "c2e0c6", "default": false}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-05-25T13:38:47Z", "updated_at": "2018-05-29T14:04:18Z", "closed_at": null, "author_association": "NONE", "body_html": "<p>Hi,</p>\n<p>In the documentation, it is written:</p>\n<blockquote>\n<p>If you need to move a model to GPU via .cuda(), please do so before constructing optimizers for it. Parameters of a model after .cuda() will be different objects with those before the call.</p>\n<p>In general, you should make sure that optimized parameters live in consistent locations when optimizers are constructed and used.</p>\n</blockquote>\n<p>However, doing .cuda() after intialiazing the optimizer still works. This is because the Module class applies the .cuda() in this way:</p>\n<div class=\"highlight highlight-source-python\"><pre>param.data <span class=\"pl-k\">=</span> fn(param.data)\n<span class=\"pl-k\">if</span> param._grad <span class=\"pl-k\">is</span> <span class=\"pl-k\">not</span> <span class=\"pl-c1\">None</span>:\n    param._grad.data <span class=\"pl-k\">=</span> fn(param._grad.data)</pre></div>\n<p>Thus, by modifying the <code>.data</code> attribute, it modifies the parameter tensors in-place.</p>\n<p>I then suggest to remove this \"warning\" from the documentation since I actually find this quite useful to be able to initialize the optimizer before doing .cuda().</p>\n<p>Thank you.</p>\n<p>Fr\u00e9d\u00e9rik</p>", "body_text": "Hi,\nIn the documentation, it is written:\n\nIf you need to move a model to GPU via .cuda(), please do so before constructing optimizers for it. Parameters of a model after .cuda() will be different objects with those before the call.\nIn general, you should make sure that optimized parameters live in consistent locations when optimizers are constructed and used.\n\nHowever, doing .cuda() after intialiazing the optimizer still works. This is because the Module class applies the .cuda() in this way:\nparam.data = fn(param.data)\nif param._grad is not None:\n    param._grad.data = fn(param._grad.data)\nThus, by modifying the .data attribute, it modifies the parameter tensors in-place.\nI then suggest to remove this \"warning\" from the documentation since I actually find this quite useful to be able to initialize the optimizer before doing .cuda().\nThank you.\nFr\u00e9d\u00e9rik", "body": "Hi,\r\n\r\nIn the documentation, it is written:\r\n\r\n> If you need to move a model to GPU via .cuda(), please do so before constructing optimizers for it. Parameters of a model after .cuda() will be different objects with those before the call.\r\n>\r\n> In general, you should make sure that optimized parameters live in consistent locations when optimizers are constructed and used.\r\n\r\nHowever, doing .cuda() after intialiazing the optimizer still works. This is because the Module class applies the .cuda() in this way:\r\n```python\r\nparam.data = fn(param.data)\r\nif param._grad is not None:\r\n    param._grad.data = fn(param._grad.data)\r\n```\r\nThus, by modifying the `.data` attribute, it modifies the parameter tensors in-place. \r\n\r\nI then suggest to remove this \"warning\" from the documentation since I actually find this quite useful to be able to initialize the optimizer before doing .cuda().\r\n\r\nThank you.\r\n\r\nFr\u00e9d\u00e9rik\r\n"}