{"url": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/157294079", "pull_request_review_id": 83919606, "id": 157294079, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE1NzI5NDA3OQ==", "diff_hunk": "@@ -26,6 +27,25 @@ static THCDeviceAllocator storage_deleter = {\n   nullptr,\n   nullptr,\n };\n+static cudaError_t wrapped_alloc(void * ctx, void** result, size_t size, cudaStream_t stream) {", "path": "aten/src/ATen/templates/StorageDerived.cpp", "position": 11, "original_position": 11, "commit_id": "cd4cdb9fa1bbafa2abfb13878e7c22d3d88f5c9a", "original_commit_id": "d14d14d79a21f50157ca732f4349b9a1ff242711", "user": {"login": "colesbury", "id": 655866, "node_id": "MDQ6VXNlcjY1NTg2Ng==", "avatar_url": "https://avatars1.githubusercontent.com/u/655866?v=4", "gravatar_id": "", "url": "https://api.github.com/users/colesbury", "html_url": "https://github.com/colesbury", "followers_url": "https://api.github.com/users/colesbury/followers", "following_url": "https://api.github.com/users/colesbury/following{/other_user}", "gists_url": "https://api.github.com/users/colesbury/gists{/gist_id}", "starred_url": "https://api.github.com/users/colesbury/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/colesbury/subscriptions", "organizations_url": "https://api.github.com/users/colesbury/orgs", "repos_url": "https://api.github.com/users/colesbury/repos", "events_url": "https://api.github.com/users/colesbury/events{/privacy}", "received_events_url": "https://api.github.com/users/colesbury/received_events", "type": "User", "site_admin": false}, "body": "If an allocator uses the stream it can access it via `at::globalContext().getCurrentCUDAStream()`. This keeps the Allocator interface simple and consistent between CPU and CUDA.", "created_at": "2017-12-15T20:38:41Z", "updated_at": "2018-11-23T15:37:27Z", "html_url": "https://github.com/pytorch/pytorch/pull/4094#discussion_r157294079", "pull_request_url": "https://api.github.com/repos/pytorch/pytorch/pulls/4094", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/157294079"}, "html": {"href": "https://github.com/pytorch/pytorch/pull/4094#discussion_r157294079"}, "pull_request": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/4094"}}, "body_html": "<p>If an allocator uses the stream it can access it via <code>at::globalContext().getCurrentCUDAStream()</code>. This keeps the Allocator interface simple and consistent between CPU and CUDA.</p>", "body_text": "If an allocator uses the stream it can access it via at::globalContext().getCurrentCUDAStream(). This keeps the Allocator interface simple and consistent between CPU and CUDA.", "in_reply_to_id": 157290508}