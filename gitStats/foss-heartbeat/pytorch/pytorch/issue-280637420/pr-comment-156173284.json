{"url": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/156173284", "pull_request_review_id": 82607940, "id": 156173284, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE1NjE3MzI4NA==", "diff_hunk": "@@ -0,0 +1,33 @@\n+#pragma once\n+\n+#include <memory>\n+#include <stddef.h>\n+\n+#include \"ATen/Retainable.h\"\n+\n+namespace at {\n+\n+struct Allocator {\n+  virtual void* allocate(std::size_t n) const = 0;\n+  virtual void deallocate(void* ptr) const = 0;\n+};\n+\n+namespace detail {\n+\n+struct AllocatorContext : public Retainable {", "path": "aten/src/ATen/Allocator.h", "position": null, "original_position": 17, "commit_id": "cd4cdb9fa1bbafa2abfb13878e7c22d3d88f5c9a", "original_commit_id": "54f86b50661dc920ee70d6a00ce5e40e2f5a3e6e", "user": {"login": "apaszke", "id": 4583066, "node_id": "MDQ6VXNlcjQ1ODMwNjY=", "avatar_url": "https://avatars3.githubusercontent.com/u/4583066?v=4", "gravatar_id": "", "url": "https://api.github.com/users/apaszke", "html_url": "https://github.com/apaszke", "followers_url": "https://api.github.com/users/apaszke/followers", "following_url": "https://api.github.com/users/apaszke/following{/other_user}", "gists_url": "https://api.github.com/users/apaszke/gists{/gist_id}", "starred_url": "https://api.github.com/users/apaszke/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/apaszke/subscriptions", "organizations_url": "https://api.github.com/users/apaszke/orgs", "repos_url": "https://api.github.com/users/apaszke/repos", "events_url": "https://api.github.com/users/apaszke/events{/privacy}", "received_events_url": "https://api.github.com/users/apaszke/received_events", "type": "User", "site_admin": false}, "body": "I guess my problem is that I don\u2019t understand where the Context suffix is coming from, since this object doesn\u2019t hold any extra information that an allocator could use. Why not use the pImpl pattern that\u2019s everywhere and call the refcounted thing an Allocator?", "created_at": "2017-12-11T19:22:44Z", "updated_at": "2018-11-23T15:37:15Z", "html_url": "https://github.com/pytorch/pytorch/pull/4094#discussion_r156173284", "pull_request_url": "https://api.github.com/repos/pytorch/pytorch/pulls/4094", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/156173284"}, "html": {"href": "https://github.com/pytorch/pytorch/pull/4094#discussion_r156173284"}, "pull_request": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/4094"}}, "body_html": "<p>I guess my problem is that I don\u2019t understand where the Context suffix is coming from, since this object doesn\u2019t hold any extra information that an allocator could use. Why not use the pImpl pattern that\u2019s everywhere and call the refcounted thing an Allocator?</p>", "body_text": "I guess my problem is that I don\u2019t understand where the Context suffix is coming from, since this object doesn\u2019t hold any extra information that an allocator could use. Why not use the pImpl pattern that\u2019s everywhere and call the refcounted thing an Allocator?", "in_reply_to_id": 155911367}