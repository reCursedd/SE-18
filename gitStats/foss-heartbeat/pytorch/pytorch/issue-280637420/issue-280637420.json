{"url": "https://api.github.com/repos/pytorch/pytorch/issues/4094", "repository_url": "https://api.github.com/repos/pytorch/pytorch", "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/4094/labels{/name}", "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/4094/comments", "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/4094/events", "html_url": "https://github.com/pytorch/pytorch/pull/4094", "id": 280637420, "node_id": "MDExOlB1bGxSZXF1ZXN0MTU3MzQ4NjM0", "number": 4094, "title": "Implement pin_memory() as a NativeFunction", "user": {"login": "colesbury", "id": 655866, "node_id": "MDQ6VXNlcjY1NTg2Ng==", "avatar_url": "https://avatars1.githubusercontent.com/u/655866?v=4", "gravatar_id": "", "url": "https://api.github.com/users/colesbury", "html_url": "https://github.com/colesbury", "followers_url": "https://api.github.com/users/colesbury/followers", "following_url": "https://api.github.com/users/colesbury/following{/other_user}", "gists_url": "https://api.github.com/users/colesbury/gists{/gist_id}", "starred_url": "https://api.github.com/users/colesbury/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/colesbury/subscriptions", "organizations_url": "https://api.github.com/users/colesbury/orgs", "repos_url": "https://api.github.com/users/colesbury/repos", "events_url": "https://api.github.com/users/colesbury/events{/privacy}", "received_events_url": "https://api.github.com/users/colesbury/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-12-08T22:35:43Z", "updated_at": "2018-11-23T15:46:19Z", "closed_at": "2017-12-18T07:03:28Z", "author_association": "MEMBER", "pull_request": {"url": "https://api.github.com/repos/pytorch/pytorch/pulls/4094", "html_url": "https://github.com/pytorch/pytorch/pull/4094", "diff_url": "https://github.com/pytorch/pytorch/pull/4094.diff", "patch_url": "https://github.com/pytorch/pytorch/pull/4094.patch"}, "body_html": "<pre><code>This adds allocators as a concept in ATen that extends deleters. An\nallocator is a subclass of at::Allocator that implements the virtual\nmethods:\n\n  virtual void* allocate(size_t n);\n  virutal void deallocate(void* ptr);\n\nA tensor created with a custom allocator can be resized, unlike a tensor\nwith a custom deleter.\n</code></pre>\n<p>cc <a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=370202\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/zdevito\">@zdevito</a></p>", "body_text": "This adds allocators as a concept in ATen that extends deleters. An\nallocator is a subclass of at::Allocator that implements the virtual\nmethods:\n\n  virtual void* allocate(size_t n);\n  virutal void deallocate(void* ptr);\n\nA tensor created with a custom allocator can be resized, unlike a tensor\nwith a custom deleter.\n\ncc @zdevito", "body": "```\r\nThis adds allocators as a concept in ATen that extends deleters. An\r\nallocator is a subclass of at::Allocator that implements the virtual\r\nmethods:\r\n\r\n  virtual void* allocate(size_t n);\r\n  virutal void deallocate(void* ptr);\r\n\r\nA tensor created with a custom allocator can be resized, unlike a tensor\r\nwith a custom deleter.\r\n```\r\n\r\ncc @zdevito"}