{"url": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/211762950", "pull_request_review_id": 148254687, "id": 211762950, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIxMTc2Mjk1MA==", "diff_hunk": "@@ -251,6 +255,322 @@ std::ostream& operator<<(std::ostream & out, const Graph & g) {\n   return out;\n }\n \n+struct PrettyPrintPass {\n+  std::unordered_map<std::string, std::string> aliases;\n+  std::unordered_set<const Node*> seen_nodes;\n+  std::unordered_map<std::string, std::pair<const Node*, Symbol>> constants;\n+  std::unordered_set<const Value*> unresolved_values;\n+};\n+\n+template<class T>\n+static void dualIterator(\n+  at::ArrayRef<T> list_a,\n+  at::ArrayRef<T> list_b,\n+  const size_t offset_a,\n+  const size_t offset_b,\n+  std::function<void(T, T)> action\n+) {\n+  auto it_a = list_a.begin() + offset_a;\n+  auto it_b = list_b.begin() + offset_b;\n+\n+  for (; it_a != list_a.end() && it_b != list_b.end(); ++it_a, ++it_b) {\n+    action(*it_a, *it_b);\n+  }\n+}\n+\n+static std::ostream& prettyPrintNode(", "path": "torch/csrc/jit/ir.cpp", "position": null, "original_position": 155, "commit_id": "18b69e2bcd43668ecfbec43f1f39c956378a9608", "original_commit_id": "a271d2b0ed13d0574a8035315125fe713b41c9fe", "user": {"login": "zdevito", "id": 370202, "node_id": "MDQ6VXNlcjM3MDIwMg==", "avatar_url": "https://avatars0.githubusercontent.com/u/370202?v=4", "gravatar_id": "", "url": "https://api.github.com/users/zdevito", "html_url": "https://github.com/zdevito", "followers_url": "https://api.github.com/users/zdevito/followers", "following_url": "https://api.github.com/users/zdevito/following{/other_user}", "gists_url": "https://api.github.com/users/zdevito/gists{/gist_id}", "starred_url": "https://api.github.com/users/zdevito/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/zdevito/subscriptions", "organizations_url": "https://api.github.com/users/zdevito/orgs", "repos_url": "https://api.github.com/users/zdevito/repos", "events_url": "https://api.github.com/users/zdevito/events{/privacy}", "received_events_url": "https://api.github.com/users/zdevito/received_events", "type": "User", "site_admin": false}, "body": "simple style thing: it makes sense for these functions to be methods of PrettyPrintPass, and follows how other passes are organized when there is non-trivial context shared between nodes.", "created_at": "2018-08-21T21:16:22Z", "updated_at": "2018-11-23T15:49:42Z", "html_url": "https://github.com/pytorch/pytorch/pull/10319#discussion_r211762950", "pull_request_url": "https://api.github.com/repos/pytorch/pytorch/pulls/10319", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/211762950"}, "html": {"href": "https://github.com/pytorch/pytorch/pull/10319#discussion_r211762950"}, "pull_request": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/10319"}}, "body_html": "<p>simple style thing: it makes sense for these functions to be methods of PrettyPrintPass, and follows how other passes are organized when there is non-trivial context shared between nodes.</p>", "body_text": "simple style thing: it makes sense for these functions to be methods of PrettyPrintPass, and follows how other passes are organized when there is non-trivial context shared between nodes."}