{"url": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/216733120", "pull_request_review_id": 154283631, "id": 216733120, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIxNjczMzEyMA==", "diff_hunk": "@@ -251,6 +256,357 @@ std::ostream& operator<<(std::ostream & out, const Graph & g) {\n   return out;\n }\n \n+class PrettyPrintPass {\n+  Graph& graph_;\n+\n+  // When printing a name if there is a conflict with an existing name in the\n+  // graph, record the value -> new generated name mapping\n+  std::unordered_map<const Value*, const Value*> aliases_;\n+\n+  // The Graph already tracks unique_names_, this is just for additional ones\n+  // generated during printing\n+  std::unordered_map<std::string, const Value*> generated_names_;\n+\n+  // Cache of value names\n+  std::unordered_map<const Value*, std::string> value_names_;\n+\n+  template<class T>\n+  void dualIterator(\n+    at::ArrayRef<T> list_a,\n+    at::ArrayRef<T> list_b,\n+    const size_t offset_a,\n+    const size_t offset_b,\n+    std::function<void(T, T)> action\n+  ) const {\n+    auto it_a = list_a.begin() + offset_a;\n+    auto it_b = list_b.begin() + offset_b;\n+\n+    for (; it_a != list_a.end() && it_b != list_b.end(); ++it_a, ++it_b) {", "path": "torch/csrc/jit/ir.cpp", "position": null, "original_position": 160, "commit_id": "18b69e2bcd43668ecfbec43f1f39c956378a9608", "original_commit_id": "8cd596a427051487ad3c148fa3ab3dffc9253f7e", "user": {"login": "apaszke", "id": 4583066, "node_id": "MDQ6VXNlcjQ1ODMwNjY=", "avatar_url": "https://avatars3.githubusercontent.com/u/4583066?v=4", "gravatar_id": "", "url": "https://api.github.com/users/apaszke", "html_url": "https://github.com/apaszke", "followers_url": "https://api.github.com/users/apaszke/followers", "following_url": "https://api.github.com/users/apaszke/following{/other_user}", "gists_url": "https://api.github.com/users/apaszke/gists{/gist_id}", "starred_url": "https://api.github.com/users/apaszke/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/apaszke/subscriptions", "organizations_url": "https://api.github.com/users/apaszke/orgs", "repos_url": "https://api.github.com/users/apaszke/repos", "events_url": "https://api.github.com/users/apaszke/events{/privacy}", "received_events_url": "https://api.github.com/users/apaszke/received_events", "type": "User", "site_admin": false}, "body": "It would be better to assert that the `ArrayRef` slices are of the same length", "created_at": "2018-09-11T16:25:04Z", "updated_at": "2018-11-23T15:50:59Z", "html_url": "https://github.com/pytorch/pytorch/pull/10319#discussion_r216733120", "pull_request_url": "https://api.github.com/repos/pytorch/pytorch/pulls/10319", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/216733120"}, "html": {"href": "https://github.com/pytorch/pytorch/pull/10319#discussion_r216733120"}, "pull_request": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/10319"}}, "body_html": "<p>It would be better to assert that the <code>ArrayRef</code> slices are of the same length</p>", "body_text": "It would be better to assert that the ArrayRef slices are of the same length"}