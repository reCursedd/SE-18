{"url": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/108405412", "pull_request_review_id": 29432674, "id": 108405412, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEwODQwNTQxMg==", "diff_hunk": "@@ -66,3 +66,59 @@ def unbind(tensor, dim=0):\n         dim (int): dimension to remove.\n     \"\"\"\n     return tuple(tensor.select(dim, i) for i in _range(tensor.size(dim)))\n+\n+\n+def btriunpack(LU_data, LU_pivots, mode='E', dtype=None):\n+    \"\"\"Unpacks the data and pivots from a batched LU factorization (btrifact) of a tensor.\n+\n+    Returns a tuple indexed by:\n+      0: The pivots.\n+      1: The L tensor.\n+      2: The U tensor.\n+\n+    The mode flag indicates what should be unpacked:\n+      'E' unpacks everything (data and pivots)\n+      'D' unpacks just the data\n+      'P' unpacks just the pivots\n+\n+    Arguments:\n+        LU_data (Tensor): The packed LU factorization data.\n+        LU_pivots (Tensor): The packed LU factorization pivots.\n+        mode (str): The mode indicating what should be unpacked.\n+    \"\"\"\n+    assert mode in ('E', 'D', 'P')\n+\n+    if mode in ('E', 'D'):\n+        nBatch, sz, _ = LU_data.size()\n+        I_U = torch.triu(torch.ones(sz, sz)).unsqueeze(0).expand(nBatch, sz, sz).type_as(LU_data).byte()\n+        I_L = 1 - I_U\n+        L = torch.zeros(LU_data.size()).type_as(LU_data)", "path": "torch/functional.py", "position": null, "original_position": 30, "commit_id": "18b35fadc337a95e7cb66d78c7ab91c8be7d8ac6", "original_commit_id": "f2028e913d8cf258eb80d3b26f38863be754d44a", "user": {"login": "apaszke", "id": 4583066, "node_id": "MDQ6VXNlcjQ1ODMwNjY=", "avatar_url": "https://avatars3.githubusercontent.com/u/4583066?v=4", "gravatar_id": "", "url": "https://api.github.com/users/apaszke", "html_url": "https://github.com/apaszke", "followers_url": "https://api.github.com/users/apaszke/followers", "following_url": "https://api.github.com/users/apaszke/following{/other_user}", "gists_url": "https://api.github.com/users/apaszke/gists{/gist_id}", "starred_url": "https://api.github.com/users/apaszke/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/apaszke/subscriptions", "organizations_url": "https://api.github.com/users/apaszke/orgs", "repos_url": "https://api.github.com/users/apaszke/repos", "events_url": "https://api.github.com/users/apaszke/events{/privacy}", "received_events_url": "https://api.github.com/users/apaszke/received_events", "type": "User", "site_admin": false}, "body": "`LU_data.new(LU_data.size()).zero_()` is faster", "created_at": "2017-03-28T12:24:20Z", "updated_at": "2018-11-23T15:32:53Z", "html_url": "https://github.com/pytorch/pytorch/pull/1118#discussion_r108405412", "pull_request_url": "https://api.github.com/repos/pytorch/pytorch/pulls/1118", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/108405412"}, "html": {"href": "https://github.com/pytorch/pytorch/pull/1118#discussion_r108405412"}, "pull_request": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/1118"}}, "body_html": "<p><code>LU_data.new(LU_data.size()).zero_()</code> is faster</p>", "body_text": "LU_data.new(LU_data.size()).zero_() is faster"}