{"url": "https://api.github.com/repos/pytorch/pytorch/issues/comments/416741826", "html_url": "https://github.com/pytorch/pytorch/pull/10952#issuecomment-416741826", "issue_url": "https://api.github.com/repos/pytorch/pytorch/issues/10952", "id": 416741826, "node_id": "MDEyOklzc3VlQ29tbWVudDQxNjc0MTgyNg==", "user": {"login": "neerajprad", "id": 1762463, "node_id": "MDQ6VXNlcjE3NjI0NjM=", "avatar_url": "https://avatars3.githubusercontent.com/u/1762463?v=4", "gravatar_id": "", "url": "https://api.github.com/users/neerajprad", "html_url": "https://github.com/neerajprad", "followers_url": "https://api.github.com/users/neerajprad/followers", "following_url": "https://api.github.com/users/neerajprad/following{/other_user}", "gists_url": "https://api.github.com/users/neerajprad/gists{/gist_id}", "starred_url": "https://api.github.com/users/neerajprad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/neerajprad/subscriptions", "organizations_url": "https://api.github.com/users/neerajprad/orgs", "repos_url": "https://api.github.com/users/neerajprad/repos", "events_url": "https://api.github.com/users/neerajprad/events{/privacy}", "received_events_url": "https://api.github.com/users/neerajprad/received_events", "type": "User", "site_admin": false}, "created_at": "2018-08-28T21:10:46Z", "updated_at": "2018-08-28T21:11:32Z", "author_association": "CONTRIBUTOR", "body_html": "<p><a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=5652049\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/zou3519\">@zou3519</a> : This fixes the particular <code>assert (nDim &lt;= uncompressedDims)</code> issue on the Pyro examples in <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load issue title\" data-id=\"352355590\" data-permission-text=\"Issue title is private\" data-url=\"https://github.com/pytorch/pytorch/issues/10715\" data-hovercard-type=\"issue\" data-hovercard-url=\"/pytorch/pytorch/issues/10715/hovercard\" href=\"https://github.com/pytorch/pytorch/issues/10715\">#10715</a>, but they are now segfaulting. I think it might be related?</p>\n<pre><code>Process 2322 stopped\n* thread #1, queue = 'com.apple.main-thread', stop reason = EXC_BAD_ACCESS (code=EXC_I386_GPFLT)\n    frame #0: 0x0000000115059c6d libtorch.dylib`torch::jit::(anonymous namespace)::compressContiguous(at::ArrayRef&lt;long long&gt;, at::ArrayRef&lt;long long&gt;, std::__1::vector&lt;bool, std::__1::allocator&lt;bool&gt; &gt; const&amp;, unsigned int*, unsigned int*) [inlined] std::__1::__bit_const_reference&lt;std::__1::vector&lt;bool, std::__1::allocator&lt;bool&gt; &gt; &gt;::operator bool(this=0x00007ffeefbf7840) const at __bit_reference:140\n   137 \t        : __seg_(__x.__seg_), __mask_(__x.__mask_) {}\n   138\n   139 \t    _LIBCPP_INLINE_VISIBILITY _LIBCPP_CONSTEXPR operator bool() const _NOEXCEPT\n-&gt; 140 \t        {return static_cast&lt;bool&gt;(*__seg_ &amp; __mask_);}\n   141\n   142 \t    _LIBCPP_INLINE_VISIBILITY __bit_iterator&lt;_Cp, true&gt; operator&amp;() const _NOEXCEPT\n   143 \t        {return __bit_iterator&lt;_Cp, true&gt;(__seg_, static_cast&lt;unsigned&gt;(__ctz(__mask_)));}\nTarget 0: (python) stopped.\n</code></pre>", "body_text": "@zou3519 : This fixes the particular assert (nDim <= uncompressedDims) issue on the Pyro examples in #10715, but they are now segfaulting. I think it might be related?\nProcess 2322 stopped\n* thread #1, queue = 'com.apple.main-thread', stop reason = EXC_BAD_ACCESS (code=EXC_I386_GPFLT)\n    frame #0: 0x0000000115059c6d libtorch.dylib`torch::jit::(anonymous namespace)::compressContiguous(at::ArrayRef<long long>, at::ArrayRef<long long>, std::__1::vector<bool, std::__1::allocator<bool> > const&, unsigned int*, unsigned int*) [inlined] std::__1::__bit_const_reference<std::__1::vector<bool, std::__1::allocator<bool> > >::operator bool(this=0x00007ffeefbf7840) const at __bit_reference:140\n   137 \t        : __seg_(__x.__seg_), __mask_(__x.__mask_) {}\n   138\n   139 \t    _LIBCPP_INLINE_VISIBILITY _LIBCPP_CONSTEXPR operator bool() const _NOEXCEPT\n-> 140 \t        {return static_cast<bool>(*__seg_ & __mask_);}\n   141\n   142 \t    _LIBCPP_INLINE_VISIBILITY __bit_iterator<_Cp, true> operator&() const _NOEXCEPT\n   143 \t        {return __bit_iterator<_Cp, true>(__seg_, static_cast<unsigned>(__ctz(__mask_)));}\nTarget 0: (python) stopped.", "body": "@zou3519 : This fixes the particular `assert (nDim <= uncompressedDims)` issue on the Pyro examples in #10715, but they are now segfaulting. I think it might be related?\r\n\r\n```\r\nProcess 2322 stopped\r\n* thread #1, queue = 'com.apple.main-thread', stop reason = EXC_BAD_ACCESS (code=EXC_I386_GPFLT)\r\n    frame #0: 0x0000000115059c6d libtorch.dylib`torch::jit::(anonymous namespace)::compressContiguous(at::ArrayRef<long long>, at::ArrayRef<long long>, std::__1::vector<bool, std::__1::allocator<bool> > const&, unsigned int*, unsigned int*) [inlined] std::__1::__bit_const_reference<std::__1::vector<bool, std::__1::allocator<bool> > >::operator bool(this=0x00007ffeefbf7840) const at __bit_reference:140\r\n   137 \t        : __seg_(__x.__seg_), __mask_(__x.__mask_) {}\r\n   138\r\n   139 \t    _LIBCPP_INLINE_VISIBILITY _LIBCPP_CONSTEXPR operator bool() const _NOEXCEPT\r\n-> 140 \t        {return static_cast<bool>(*__seg_ & __mask_);}\r\n   141\r\n   142 \t    _LIBCPP_INLINE_VISIBILITY __bit_iterator<_Cp, true> operator&() const _NOEXCEPT\r\n   143 \t        {return __bit_iterator<_Cp, true>(__seg_, static_cast<unsigned>(__ctz(__mask_)));}\r\nTarget 0: (python) stopped.\r\n```"}