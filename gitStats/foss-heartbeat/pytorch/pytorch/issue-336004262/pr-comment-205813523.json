{"url": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/205813523", "pull_request_review_id": 141161891, "id": 205813523, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwNTgxMzUyMw==", "diff_hunk": "@@ -273,11 +276,12 @@ void PropagateShapeOnNode(Node * node, bool insert_expands) {\n   // For expensive ops we can directly encode their shape propagation\n   // here, otherwise we fallback to running a fake version of the op\n   // to get a quick and dirty propagation.\n-  if (insert_expands && (\n-      node->matches(\"aten::add(Tensor self, Tensor other, *, Scalar alpha) -> Tensor\") ||\n+  if (node->matches(\"aten::add(Tensor self, Tensor other, *, Scalar alpha) -> Tensor\") ||\n       node->matches(\"aten::sub(Tensor self, Tensor other, *, Scalar alpha) -> Tensor\") ||\n-      node->matches(\"aten::mul(Tensor self, Tensor other) -> Tensor\") ||\n-      node->matches(\"aten::div(Tensor self, Tensor other) -> Tensor\") ||\n+      node->matches(\"aten::mul(Tensor self, Tensor other) -> Tensor\")) {\n+    PropagateShapeOnNodeByRunningIt(node);\n+    return;\n+  } else if (insert_expands && (", "path": "torch/csrc/jit/passes/shape_analysis.cpp", "position": null, "original_position": 32, "commit_id": "b2efd9cc7a5dcff977b0be9aff2ca3bc0cfa159d", "original_commit_id": "7233cd64452c52dcc9744e92d18885d16aced6ec", "user": {"login": "apaszke", "id": 4583066, "node_id": "MDQ6VXNlcjQ1ODMwNjY=", "avatar_url": "https://avatars3.githubusercontent.com/u/4583066?v=4", "gravatar_id": "", "url": "https://api.github.com/users/apaszke", "html_url": "https://github.com/apaszke", "followers_url": "https://api.github.com/users/apaszke/followers", "following_url": "https://api.github.com/users/apaszke/following{/other_user}", "gists_url": "https://api.github.com/users/apaszke/gists{/gist_id}", "starred_url": "https://api.github.com/users/apaszke/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/apaszke/subscriptions", "organizations_url": "https://api.github.com/users/apaszke/orgs", "repos_url": "https://api.github.com/users/apaszke/repos", "events_url": "https://api.github.com/users/apaszke/events{/privacy}", "received_events_url": "https://api.github.com/users/apaszke/received_events", "type": "User", "site_admin": false}, "body": "Why is only such a small subset of nodes excluded from the `insert_expands` logic?", "created_at": "2018-07-27T15:31:10Z", "updated_at": "2018-11-23T15:48:19Z", "html_url": "https://github.com/pytorch/pytorch/pull/8919#discussion_r205813523", "pull_request_url": "https://api.github.com/repos/pytorch/pytorch/pulls/8919", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/205813523"}, "html": {"href": "https://github.com/pytorch/pytorch/pull/8919#discussion_r205813523"}, "pull_request": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/8919"}}, "body_html": "<p>Why is only such a small subset of nodes excluded from the <code>insert_expands</code> logic?</p>", "body_text": "Why is only such a small subset of nodes excluded from the insert_expands logic?"}