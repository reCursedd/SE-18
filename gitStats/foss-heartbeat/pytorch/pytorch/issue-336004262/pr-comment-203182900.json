{"url": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/203182900", "pull_request_review_id": 138023946, "id": 203182900, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwMzE4MjkwMA==", "diff_hunk": "@@ -66,9 +66,10 @@ struct TensorImpl : public Retainable {\n   }\n \n   // True if a tensor was auto-wrapped from a C++ or Python number.\n-  // Wrapped numbers are considered \"lower priority\" when computing the result\n-  // of an operation. Otherwise, they behave like their non-wrapped, zero-dim\n-  // equivalents.\n+  // Wrapped numbers do not participate in the result type computation for\n+  // mixed- type operations if there are any Tensors that are not wrapped\n+  // numbers. In other respsects, they behave like their non-wrapped, zero-dim", "path": "aten/src/ATen/TensorImpl.h", "position": null, "original_position": 9, "commit_id": "b2efd9cc7a5dcff977b0be9aff2ca3bc0cfa159d", "original_commit_id": "bdf5c0b6a9d1832f8f7c04bf116a02fde1ad1e93", "user": {"login": "gchanan", "id": 3768583, "node_id": "MDQ6VXNlcjM3Njg1ODM=", "avatar_url": "https://avatars2.githubusercontent.com/u/3768583?v=4", "gravatar_id": "", "url": "https://api.github.com/users/gchanan", "html_url": "https://github.com/gchanan", "followers_url": "https://api.github.com/users/gchanan/followers", "following_url": "https://api.github.com/users/gchanan/following{/other_user}", "gists_url": "https://api.github.com/users/gchanan/gists{/gist_id}", "starred_url": "https://api.github.com/users/gchanan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/gchanan/subscriptions", "organizations_url": "https://api.github.com/users/gchanan/orgs", "repos_url": "https://api.github.com/users/gchanan/repos", "events_url": "https://api.github.com/users/gchanan/events{/privacy}", "received_events_url": "https://api.github.com/users/gchanan/received_events", "type": "User", "site_admin": false}, "body": "nit: respects.  I also preferred the previous wording \"Otherwise, they behave like\" wording...I don't know what other respects there are.  Also, do you need to say \"non-wrapped, zero-dim equivalents\" over \"non-wrapped equivalents\" -- they only matter if there are any tensors that aren't wrapped, so it doesn't matter if there are zero dim or not.", "created_at": "2018-07-17T21:21:52Z", "updated_at": "2018-11-23T15:47:35Z", "html_url": "https://github.com/pytorch/pytorch/pull/8919#discussion_r203182900", "pull_request_url": "https://api.github.com/repos/pytorch/pytorch/pulls/8919", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/203182900"}, "html": {"href": "https://github.com/pytorch/pytorch/pull/8919#discussion_r203182900"}, "pull_request": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/8919"}}, "body_html": "<p>nit: respects.  I also preferred the previous wording \"Otherwise, they behave like\" wording...I don't know what other respects there are.  Also, do you need to say \"non-wrapped, zero-dim equivalents\" over \"non-wrapped equivalents\" -- they only matter if there are any tensors that aren't wrapped, so it doesn't matter if there are zero dim or not.</p>", "body_text": "nit: respects.  I also preferred the previous wording \"Otherwise, they behave like\" wording...I don't know what other respects there are.  Also, do you need to say \"non-wrapped, zero-dim equivalents\" over \"non-wrapped equivalents\" -- they only matter if there are any tensors that aren't wrapped, so it doesn't matter if there are zero dim or not."}