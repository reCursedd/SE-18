{"url": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/201154344", "pull_request_review_id": 135166498, "id": 201154344, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwMTE1NDM0NA==", "diff_hunk": "@@ -0,0 +1,137 @@\n+#pragma once\n+\n+#include <stdint.h>\n+#include <ATen/detail/FunctionTraits.h>\n+#include <ATen/native/TensorIterator.h>\n+#include <ATen/cpu/vec256/vec256.h>\n+\n+namespace at { namespace native { namespace {\n+\n+using namespace vec256;\n+\n+// all three operands contiguous\n+static inline bool is_binary_contiguous(const int64_t* strides, const int64_t* element_sizes) {\n+  return strides[0] == element_sizes[0] &&\n+         strides[1] == element_sizes[1] &&\n+         strides[2] == element_sizes[2];\n+}\n+\n+// arg1 is a scalar, output and arg2 are contiguous\n+static inline bool is_binary_contiguous_s1(const int64_t* strides, const int64_t* element_sizes) {\n+  return strides[0] == element_sizes[0] &&\n+         strides[1] == 0 &&\n+         strides[2] == element_sizes[2];\n+}\n+\n+// arg2 is a scalar, output and arg1 are contiguous\n+static inline bool is_binary_contiguous_s2(const int64_t* strides, const int64_t* element_sizes) {\n+  return strides[0] == element_sizes[0] &&\n+         strides[1] == element_sizes[1] &&\n+         strides[2] == 0;\n+}\n+\n+// Basic loop binary operation (two inputs, one output). May be auto-vectorized\n+// by the compiler.\n+#define BASE_BINARY_LOOP(op) \\", "path": "aten/src/ATen/native/cpu/Loops.h", "position": null, "original_position": 35, "commit_id": "b2efd9cc7a5dcff977b0be9aff2ca3bc0cfa159d", "original_commit_id": "38d31d836a8c373b2f34acc35953c2ad910bca3e", "user": {"login": "gchanan", "id": 3768583, "node_id": "MDQ6VXNlcjM3Njg1ODM=", "avatar_url": "https://avatars2.githubusercontent.com/u/3768583?v=4", "gravatar_id": "", "url": "https://api.github.com/users/gchanan", "html_url": "https://github.com/gchanan", "followers_url": "https://api.github.com/users/gchanan/followers", "following_url": "https://api.github.com/users/gchanan/following{/other_user}", "gists_url": "https://api.github.com/users/gchanan/gists{/gist_id}", "starred_url": "https://api.github.com/users/gchanan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/gchanan/subscriptions", "organizations_url": "https://api.github.com/users/gchanan/orgs", "repos_url": "https://api.github.com/users/gchanan/repos", "events_url": "https://api.github.com/users/gchanan/events{/privacy}", "received_events_url": "https://api.github.com/users/gchanan/received_events", "type": "User", "site_admin": false}, "body": "are these all safe for n-dimensional empty tensors?", "created_at": "2018-07-09T21:33:48Z", "updated_at": "2018-11-23T15:47:02Z", "html_url": "https://github.com/pytorch/pytorch/pull/8919#discussion_r201154344", "pull_request_url": "https://api.github.com/repos/pytorch/pytorch/pulls/8919", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/201154344"}, "html": {"href": "https://github.com/pytorch/pytorch/pull/8919#discussion_r201154344"}, "pull_request": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/8919"}}, "body_html": "<p>are these all safe for n-dimensional empty tensors?</p>", "body_text": "are these all safe for n-dimensional empty tensors?"}