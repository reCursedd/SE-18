{"url": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/200728002", "pull_request_review_id": 135105270, "id": 200728002, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwMDcyODAwMg==", "diff_hunk": "@@ -130,4 +130,39 @@ inline std::vector<Tensor> expand_outplace(TensorList to_expand) {\n   return result;\n }\n \n+// Sums `tensor` repeatedly to produce a tensor of shape `shape`.\n+// Precondition: is_expandable_to(shape, tensor.sizes()) must be true\n+static inline Tensor reduce_to(Tensor tensor, IntList shape) {\n+  if (shape.size() == 0) {\n+    return tensor.sum();\n+  }\n+  Tensor result = tensor;\n+  while (result.dim() > (int64_t)shape.size()) {\n+    result = result.sum(0, false);\n+  }\n+  for (int64_t i = 0; i < result.dim(); ++i) {\n+    if (shape[i] == 1 && result.sizes()[i] > 1) {\n+      result = result.sum(i, true);\n+    }\n+  }", "path": "aten/src/ATen/ExpandUtils.h", "position": 18, "original_position": 18, "commit_id": "b2efd9cc7a5dcff977b0be9aff2ca3bc0cfa159d", "original_commit_id": "38d31d836a8c373b2f34acc35953c2ad910bca3e", "user": {"login": "colesbury", "id": 655866, "node_id": "MDQ6VXNlcjY1NTg2Ng==", "avatar_url": "https://avatars1.githubusercontent.com/u/655866?v=4", "gravatar_id": "", "url": "https://api.github.com/users/colesbury", "html_url": "https://github.com/colesbury", "followers_url": "https://api.github.com/users/colesbury/followers", "following_url": "https://api.github.com/users/colesbury/following{/other_user}", "gists_url": "https://api.github.com/users/colesbury/gists{/gist_id}", "starred_url": "https://api.github.com/users/colesbury/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/colesbury/subscriptions", "organizations_url": "https://api.github.com/users/colesbury/orgs", "repos_url": "https://api.github.com/users/colesbury/repos", "events_url": "https://api.github.com/users/colesbury/events{/privacy}", "received_events_url": "https://api.github.com/users/colesbury/received_events", "type": "User", "site_admin": false}, "body": "I copied this as-is from `tools/autograd/templates/Functions.cpp` (forgot to delete the existing code, will do that). Once we get reductions to use TensorIterator, I'd like to replace this with a single call to `sum()` over all the expanded dimensions (and then a `reshape` or `squeeze` to remove the extra size-1 dims)", "created_at": "2018-07-06T17:56:59Z", "updated_at": "2018-11-23T15:46:53Z", "html_url": "https://github.com/pytorch/pytorch/pull/8919#discussion_r200728002", "pull_request_url": "https://api.github.com/repos/pytorch/pytorch/pulls/8919", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/200728002"}, "html": {"href": "https://github.com/pytorch/pytorch/pull/8919#discussion_r200728002"}, "pull_request": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/8919"}}, "body_html": "<p>I copied this as-is from <code>tools/autograd/templates/Functions.cpp</code> (forgot to delete the existing code, will do that). Once we get reductions to use TensorIterator, I'd like to replace this with a single call to <code>sum()</code> over all the expanded dimensions (and then a <code>reshape</code> or <code>squeeze</code> to remove the extra size-1 dims)</p>", "body_text": "I copied this as-is from tools/autograd/templates/Functions.cpp (forgot to delete the existing code, will do that). Once we get reductions to use TensorIterator, I'd like to replace this with a single call to sum() over all the expanded dimensions (and then a reshape or squeeze to remove the extra size-1 dims)", "in_reply_to_id": 200678958}