{"url": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/199621057", "pull_request_review_id": 133777188, "id": 199621057, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5OTYyMTA1Nw==", "diff_hunk": "@@ -21,7 +21,7 @@ std::vector<int64_t> infer_size(IntList a, IntList b) {\n         \") must match the size of tensor b (\", sizeB,\n         \") at non-singleton dimension \", i);\n \n-    expandedSizes[i] = std::max(sizeA, sizeB);\n+    expandedSizes[i] = sizeA == 1 ? sizeB : sizeA;", "path": "aten/src/ATen/ExpandUtils.cpp", "position": null, "original_position": 5, "commit_id": "b2efd9cc7a5dcff977b0be9aff2ca3bc0cfa159d", "original_commit_id": "38d31d836a8c373b2f34acc35953c2ad910bca3e", "user": {"login": "gchanan", "id": 3768583, "node_id": "MDQ6VXNlcjM3Njg1ODM=", "avatar_url": "https://avatars2.githubusercontent.com/u/3768583?v=4", "gravatar_id": "", "url": "https://api.github.com/users/gchanan", "html_url": "https://github.com/gchanan", "followers_url": "https://api.github.com/users/gchanan/followers", "following_url": "https://api.github.com/users/gchanan/following{/other_user}", "gists_url": "https://api.github.com/users/gchanan/gists{/gist_id}", "starred_url": "https://api.github.com/users/gchanan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/gchanan/subscriptions", "organizations_url": "https://api.github.com/users/gchanan/orgs", "repos_url": "https://api.github.com/users/gchanan/repos", "events_url": "https://api.github.com/users/gchanan/events{/privacy}", "received_events_url": "https://api.github.com/users/gchanan/received_events", "type": "User", "site_admin": false}, "body": "Yes (I think, the old behavior may have been there to preserve TH-style semantics, although I don't remember off the top of my head if that was intentional or not).  Anyway, I have the same fix in one of my n-dimensional 0-size branches and tests.", "created_at": "2018-07-02T21:06:17Z", "updated_at": "2018-11-23T15:46:41Z", "html_url": "https://github.com/pytorch/pytorch/pull/8919#discussion_r199621057", "pull_request_url": "https://api.github.com/repos/pytorch/pytorch/pulls/8919", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/199621057"}, "html": {"href": "https://github.com/pytorch/pytorch/pull/8919#discussion_r199621057"}, "pull_request": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/8919"}}, "body_html": "<p>Yes (I think, the old behavior may have been there to preserve TH-style semantics, although I don't remember off the top of my head if that was intentional or not).  Anyway, I have the same fix in one of my n-dimensional 0-size branches and tests.</p>", "body_text": "Yes (I think, the old behavior may have been there to preserve TH-style semantics, although I don't remember off the top of my head if that was intentional or not).  Anyway, I have the same fix in one of my n-dimensional 0-size branches and tests.", "in_reply_to_id": 199380940}