{"url": "https://api.github.com/repos/pytorch/pytorch/issues/comments/294084607", "html_url": "https://github.com/pytorch/pytorch/issues/1154#issuecomment-294084607", "issue_url": "https://api.github.com/repos/pytorch/pytorch/issues/1154", "id": 294084607, "node_id": "MDEyOklzc3VlQ29tbWVudDI5NDA4NDYwNw==", "user": {"login": "wddabc", "id": 5722427, "node_id": "MDQ6VXNlcjU3MjI0Mjc=", "avatar_url": "https://avatars3.githubusercontent.com/u/5722427?v=4", "gravatar_id": "", "url": "https://api.github.com/users/wddabc", "html_url": "https://github.com/wddabc", "followers_url": "https://api.github.com/users/wddabc/followers", "following_url": "https://api.github.com/users/wddabc/following{/other_user}", "gists_url": "https://api.github.com/users/wddabc/gists{/gist_id}", "starred_url": "https://api.github.com/users/wddabc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/wddabc/subscriptions", "organizations_url": "https://api.github.com/users/wddabc/orgs", "repos_url": "https://api.github.com/users/wddabc/repos", "events_url": "https://api.github.com/users/wddabc/events{/privacy}", "received_events_url": "https://api.github.com/users/wddabc/received_events", "type": "User", "site_admin": false}, "created_at": "2017-04-14T04:25:26Z", "updated_at": "2017-04-14T04:25:26Z", "author_association": "NONE", "body_html": "<p>Hello, I think I found the issue it comes from.</p>\n<p>I'd like to ask is there a particular reason using a black list like <a href=\"https://github.com/pytorch/pytorch/blob/master/torch/csrc/autograd/engine.cpp#L357\">https://github.com/pytorch/pytorch/blob/master/torch/csrc/autograd/engine.cpp#L357</a> for blocking the GPU? I understand the logic here --- if the error code == 35 (CUDA driver version is insufficient for CUDA runtime version), then backoff to CPU. But shouldn't it be a white list -- only allowing the error code == 0 to pass and otherwise backoff to CPU?</p>\n<p>The reason of my suggestion is I have a weird situation where the error code is unknown (30) and it crashed the whole program at <a href=\"https://github.com/pytorch/pytorch/blob/master/torch/csrc/autograd/engine.cpp#L360\">https://github.com/pytorch/pytorch/blob/master/torch/csrc/autograd/engine.cpp#L360</a>. I've already asked my server admin how this err code could happen. (Something is apparently wrong with the system setup) But I might suggest to change this to a white list to make it more robust? Any concerns for that?</p>", "body_text": "Hello, I think I found the issue it comes from.\nI'd like to ask is there a particular reason using a black list like https://github.com/pytorch/pytorch/blob/master/torch/csrc/autograd/engine.cpp#L357 for blocking the GPU? I understand the logic here --- if the error code == 35 (CUDA driver version is insufficient for CUDA runtime version), then backoff to CPU. But shouldn't it be a white list -- only allowing the error code == 0 to pass and otherwise backoff to CPU?\nThe reason of my suggestion is I have a weird situation where the error code is unknown (30) and it crashed the whole program at https://github.com/pytorch/pytorch/blob/master/torch/csrc/autograd/engine.cpp#L360. I've already asked my server admin how this err code could happen. (Something is apparently wrong with the system setup) But I might suggest to change this to a white list to make it more robust? Any concerns for that?", "body": "Hello, I think I found the issue it comes from. \r\n\r\nI'd like to ask is there a particular reason using a black list like https://github.com/pytorch/pytorch/blob/master/torch/csrc/autograd/engine.cpp#L357 for blocking the GPU? I understand the logic here --- if the error code == 35 (CUDA driver version is insufficient for CUDA runtime version), then backoff to CPU. But shouldn't it be a white list -- only allowing the error code == 0 to pass and otherwise backoff to CPU?\r\n\r\nThe reason of my suggestion is I have a weird situation where the error code is unknown (30) and it crashed the whole program at https://github.com/pytorch/pytorch/blob/master/torch/csrc/autograd/engine.cpp#L360. I've already asked my server admin how this err code could happen. (Something is apparently wrong with the system setup) But I might suggest to change this to a white list to make it more robust? Any concerns for that?"}