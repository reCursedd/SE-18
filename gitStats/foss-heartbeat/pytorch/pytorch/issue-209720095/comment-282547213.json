{"url": "https://api.github.com/repos/pytorch/pytorch/issues/comments/282547213", "html_url": "https://github.com/pytorch/pytorch/pull/833#issuecomment-282547213", "issue_url": "https://api.github.com/repos/pytorch/pytorch/issues/833", "id": 282547213, "node_id": "MDEyOklzc3VlQ29tbWVudDI4MjU0NzIxMw==", "user": {"login": "alykhantejani", "id": 687194, "node_id": "MDQ6VXNlcjY4NzE5NA==", "avatar_url": "https://avatars1.githubusercontent.com/u/687194?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alykhantejani", "html_url": "https://github.com/alykhantejani", "followers_url": "https://api.github.com/users/alykhantejani/followers", "following_url": "https://api.github.com/users/alykhantejani/following{/other_user}", "gists_url": "https://api.github.com/users/alykhantejani/gists{/gist_id}", "starred_url": "https://api.github.com/users/alykhantejani/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alykhantejani/subscriptions", "organizations_url": "https://api.github.com/users/alykhantejani/orgs", "repos_url": "https://api.github.com/users/alykhantejani/repos", "events_url": "https://api.github.com/users/alykhantejani/events{/privacy}", "received_events_url": "https://api.github.com/users/alykhantejani/received_events", "type": "User", "site_admin": false}, "created_at": "2017-02-26T10:41:53Z", "updated_at": "2017-02-26T10:54:50Z", "author_association": "CONTRIBUTOR", "body_html": "<p>I've answered most reviews, but I still think there are the following open questions:</p>\n<ol>\n<li>\n<p>As <a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=4953728\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/szagoruyko\">@szagoruyko</a> pointed out, in Kaiming initialization, there are two variants where one divides by <code>nInputPlane*kw*kh</code>, another by <code>nOutputPlane*kw*kh</code> (<a href=\"https://github.com/facebook/fb.resnet.torch/issues/106\" data-hovercard-type=\"issue\" data-hovercard-url=\"/facebook/fb.resnet.torch/issues/106/hovercard\">see here</a>). The method in this PR divides by <code>nInputPlane*kw*kh</code> (fan_in). Do we want to support both? If so, what's the best way to modify the interface i.e. should we take an additional param <code>use_fan_out=False</code>?</p>\n</li>\n<li>\n<p>Should we remove the <code>gain</code> parameter from the <code>xavier_*</code> functions? I initially added it as this is what the Lasagne implementation has (used as reference). However, now not sure it's needed or useful?</p>\n</li>\n<li>\n<p>Is it still the preferred method to rebase and squash all commits? If so, I will do this once we are all happy (so no more commits go in)</p>\n</li>\n</ol>", "body_text": "I've answered most reviews, but I still think there are the following open questions:\n\n\nAs @szagoruyko pointed out, in Kaiming initialization, there are two variants where one divides by nInputPlane*kw*kh, another by nOutputPlane*kw*kh (see here). The method in this PR divides by nInputPlane*kw*kh (fan_in). Do we want to support both? If so, what's the best way to modify the interface i.e. should we take an additional param use_fan_out=False?\n\n\nShould we remove the gain parameter from the xavier_* functions? I initially added it as this is what the Lasagne implementation has (used as reference). However, now not sure it's needed or useful?\n\n\nIs it still the preferred method to rebase and squash all commits? If so, I will do this once we are all happy (so no more commits go in)", "body": "I've answered most reviews, but I still think there are the following open questions:\r\n\r\n1. As @szagoruyko pointed out, in Kaiming initialization, there are two variants where one divides by `nInputPlane*kw*kh`, another by `nOutputPlane*kw*kh` ([see here](https://github.com/facebook/fb.resnet.torch/issues/106)). The method in this PR divides by `nInputPlane*kw*kh` (fan_in). Do we want to support both? If so, what's the best way to modify the interface i.e. should we take an additional param `use_fan_out=False`?\r\n\r\n2. Should we remove the `gain` parameter from the `xavier_*` functions? I initially added it as this is what the Lasagne implementation has (used as reference). However, now not sure it's needed or useful?\r\n\r\n3. Is it still the preferred method to rebase and squash all commits? If so, I will do this once we are all happy (so no more commits go in)"}