{"url": "https://api.github.com/repos/pytorch/pytorch/issues/comments/392625750", "html_url": "https://github.com/pytorch/pytorch/issues/5566#issuecomment-392625750", "issue_url": "https://api.github.com/repos/pytorch/pytorch/issues/5566", "id": 392625750, "node_id": "MDEyOklzc3VlQ29tbWVudDM5MjYyNTc1MA==", "user": {"login": "ezyang", "id": 13564, "node_id": "MDQ6VXNlcjEzNTY0", "avatar_url": "https://avatars0.githubusercontent.com/u/13564?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ezyang", "html_url": "https://github.com/ezyang", "followers_url": "https://api.github.com/users/ezyang/followers", "following_url": "https://api.github.com/users/ezyang/following{/other_user}", "gists_url": "https://api.github.com/users/ezyang/gists{/gist_id}", "starred_url": "https://api.github.com/users/ezyang/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ezyang/subscriptions", "organizations_url": "https://api.github.com/users/ezyang/orgs", "repos_url": "https://api.github.com/users/ezyang/repos", "events_url": "https://api.github.com/users/ezyang/events{/privacy}", "received_events_url": "https://api.github.com/users/ezyang/received_events", "type": "User", "site_admin": false}, "created_at": "2018-05-29T01:09:34Z", "updated_at": "2018-05-29T01:09:34Z", "author_association": "CONTRIBUTOR", "body_html": "<p><a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=17853685\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/avloss\">@avloss</a> Please file a new ticket about this, the issue is unrelated. BTW, installing pytorch/aten is the WRONG resolution for the problem here.</p>\n<p>In any case, the error message you see here happens when created a <code>_C.dylib</code> that didn't actually depend on <code>libATen_cuda.dylib</code> (if you have the original build handy, you can check if this happened or not). The problem is probably here:</p>\n<pre><code>\n# we specify exact lib names to avoid conflict with lua-torch installs\nATEN_LIBS = [os.path.join(lib_path, 'libATen_cpu.so')]\nif WITH_CUDA or WITH_ROCM:\n    ATEN_LIBS.extend(['-Wl,--no-as-needed', os.path.join(lib_path, 'libATen_cuda.so'), '-Wl,--as-needed'])\nTHD_LIB = os.path.join(lib_path, 'libTHD.a')\nNCCL_LIB = os.path.join(lib_path, 'libnccl.so.1')\n\n# static library only\nNANOPB_STATIC_LIB = os.path.join(lib_path, 'libprotobuf-nanopb.a')\n\nif IS_DARWIN:\n    ATEN_LIBS = [os.path.join(lib_path, 'libATen_cpu.dylib')]\n    if WITH_CUDA or WITH_ROCM:\n        ATEN_LIBS.append(os.path.join(lib_path, 'libATen_cuda.dylib'))\n    NCCL_LIB = os.path.join(lib_path, 'libnccl.1.dylib')\n</code></pre>\n<p>I see logic to pass <code>no-as-needed</code> for Linux but not for OS X.</p>\n<p>Would be nice to get CI covering the build for OS X CUDA-enabled build.</p>", "body_text": "@avloss Please file a new ticket about this, the issue is unrelated. BTW, installing pytorch/aten is the WRONG resolution for the problem here.\nIn any case, the error message you see here happens when created a _C.dylib that didn't actually depend on libATen_cuda.dylib (if you have the original build handy, you can check if this happened or not). The problem is probably here:\n\n# we specify exact lib names to avoid conflict with lua-torch installs\nATEN_LIBS = [os.path.join(lib_path, 'libATen_cpu.so')]\nif WITH_CUDA or WITH_ROCM:\n    ATEN_LIBS.extend(['-Wl,--no-as-needed', os.path.join(lib_path, 'libATen_cuda.so'), '-Wl,--as-needed'])\nTHD_LIB = os.path.join(lib_path, 'libTHD.a')\nNCCL_LIB = os.path.join(lib_path, 'libnccl.so.1')\n\n# static library only\nNANOPB_STATIC_LIB = os.path.join(lib_path, 'libprotobuf-nanopb.a')\n\nif IS_DARWIN:\n    ATEN_LIBS = [os.path.join(lib_path, 'libATen_cpu.dylib')]\n    if WITH_CUDA or WITH_ROCM:\n        ATEN_LIBS.append(os.path.join(lib_path, 'libATen_cuda.dylib'))\n    NCCL_LIB = os.path.join(lib_path, 'libnccl.1.dylib')\n\nI see logic to pass no-as-needed for Linux but not for OS X.\nWould be nice to get CI covering the build for OS X CUDA-enabled build.", "body": "@avloss Please file a new ticket about this, the issue is unrelated. BTW, installing pytorch/aten is the WRONG resolution for the problem here.\r\n\r\nIn any case, the error message you see here happens when created a `_C.dylib` that didn't actually depend on `libATen_cuda.dylib` (if you have the original build handy, you can check if this happened or not). The problem is probably here:\r\n\r\n```\r\n\r\n# we specify exact lib names to avoid conflict with lua-torch installs\r\nATEN_LIBS = [os.path.join(lib_path, 'libATen_cpu.so')]\r\nif WITH_CUDA or WITH_ROCM:\r\n    ATEN_LIBS.extend(['-Wl,--no-as-needed', os.path.join(lib_path, 'libATen_cuda.so'), '-Wl,--as-needed'])\r\nTHD_LIB = os.path.join(lib_path, 'libTHD.a')\r\nNCCL_LIB = os.path.join(lib_path, 'libnccl.so.1')\r\n\r\n# static library only\r\nNANOPB_STATIC_LIB = os.path.join(lib_path, 'libprotobuf-nanopb.a')\r\n\r\nif IS_DARWIN:\r\n    ATEN_LIBS = [os.path.join(lib_path, 'libATen_cpu.dylib')]\r\n    if WITH_CUDA or WITH_ROCM:\r\n        ATEN_LIBS.append(os.path.join(lib_path, 'libATen_cuda.dylib'))\r\n    NCCL_LIB = os.path.join(lib_path, 'libnccl.1.dylib')\r\n```\r\n\r\nI see logic to pass `no-as-needed` for Linux but not for OS X.\r\n\r\nWould be nice to get CI covering the build for OS X CUDA-enabled build."}