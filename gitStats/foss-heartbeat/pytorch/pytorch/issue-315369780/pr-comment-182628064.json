{"url": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/182628064", "pull_request_review_id": 113455610, "id": 182628064, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MjYyODA2NA==", "diff_hunk": "@@ -0,0 +1,55 @@\n+/**\n+ * Copyright (c) 2016-present, Facebook, Inc.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+#include <caffe2/ideep/ideep_utils.h>\n+\n+namespace caffe2 {\n+\n+class IDEEPFullyConnectedOp final : public IDEEPOperator {\n+ public:\n+  USE_IDEEP_DEF_ALIASES();\n+  USE_IDEEP_OPERATOR_FUNCTIONS();\n+\n+  IDEEPFullyConnectedOp(const OperatorDef& operator_def, Workspace* ws)\n+      : IDEEPOperator(operator_def, ws),\n+        float16_compute_(\n+            OperatorBase::GetSingleArgument<bool>(\"float16_compute\", false)) {}\n+  virtual ~IDEEPFullyConnectedOp() {}\n+\n+  bool RunOnDevice() override {\n+    const auto& X = Input(INPUT);\n+    const auto& filter = Input(FILTER);\n+    auto* Y = Output(OUTPUT);\n+\n+    if (InputSize() > BIAS) {\n+      ideep::inner_product_forward::compute(X, filter, Input(BIAS), *Y);\n+    } else {\n+      ideep::inner_product_forward::compute(X, filter, *Y);\n+    }\n+\n+    return true;\n+  }\n+\n+ private:\n+  bool float16_compute_;", "path": "caffe2/ideep/operators/fully_connected_op.cc", "position": null, "original_position": 47, "commit_id": "906941ee3d716176247e2092444da86251bb3304", "original_commit_id": "ba9a6828db4e4409ed34b0ab82f35687cdd956d1", "user": {"login": "yinghai", "id": 1100089, "node_id": "MDQ6VXNlcjExMDAwODk=", "avatar_url": "https://avatars1.githubusercontent.com/u/1100089?v=4", "gravatar_id": "", "url": "https://api.github.com/users/yinghai", "html_url": "https://github.com/yinghai", "followers_url": "https://api.github.com/users/yinghai/followers", "following_url": "https://api.github.com/users/yinghai/following{/other_user}", "gists_url": "https://api.github.com/users/yinghai/gists{/gist_id}", "starred_url": "https://api.github.com/users/yinghai/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/yinghai/subscriptions", "organizations_url": "https://api.github.com/users/yinghai/orgs", "repos_url": "https://api.github.com/users/yinghai/repos", "events_url": "https://api.github.com/users/yinghai/events{/privacy}", "received_events_url": "https://api.github.com/users/yinghai/received_events", "type": "User", "site_admin": false}, "body": "Where is this variable used? ", "created_at": "2018-04-19T03:55:14Z", "updated_at": "2018-11-23T15:42:49Z", "html_url": "https://github.com/pytorch/pytorch/pull/6699#discussion_r182628064", "pull_request_url": "https://api.github.com/repos/pytorch/pytorch/pulls/6699", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/182628064"}, "html": {"href": "https://github.com/pytorch/pytorch/pull/6699#discussion_r182628064"}, "pull_request": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/6699"}}, "body_html": "<p>Where is this variable used?</p>", "body_text": "Where is this variable used?"}