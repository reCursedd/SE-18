{"url": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/182638468", "pull_request_review_id": 113472622, "id": 182638468, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MjYzODQ2OA==", "diff_hunk": "@@ -0,0 +1,182 @@\n+/**\n+ * Copyright (c) 2016-present, Facebook, Inc.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+#include <caffe2/ideep/ideep_utils.h>\n+\n+namespace caffe2 {\n+\n+class IDEEPConvFusionOp final : public IDEEPConvPoolOpBase {\n+ public:\n+  USE_IDEEP_DEF_ALIASES();\n+  USE_IDEEP_CONV_POOL_BASE_FUNCTIONS();\n+\n+  enum FusionType {\n+    FUSION_UNKNOWN = 0,\n+    FUSION_CONV_RELU = 1,\n+    FUSION_CONV_SUM = 2,\n+    FUSION_CONV_SUM_RELU = 3,\n+    FUSION_MAX = FUSION_CONV_SUM_RELU + 1,\n+  };\n+\n+  IDEEPConvFusionOp(const OperatorDef& operator_def, Workspace* ws)\n+      : IDEEPConvPoolOpBase(operator_def, ws),\n+        fusion_type_(static_cast<FusionType>(\n+            OperatorBase::GetSingleArgument<int>(\"fusion_type\", 0))) {\n+    OPERATOR_NEEDS_FEATURE(\n+        pad_l() == pad_r() && pad_t() == pad_b(),\n+        \"Uneven padding not supported.\");\n+    OPERATOR_NEEDS_FEATURE(\n+        group_ == 1, \"Group not supported.\");\n+    OPERATOR_NEEDS_FEATURE(\n+        fusion_type_ > FUSION_UNKNOWN && fusion_type_ < FUSION_MAX,\n+        \"Undefined Conv fusion type.\", fusion_type_);\n+\n+    // Check kernel only if we are doing conv. The reason is that a\n+    // few other ops, like PadImage, are also using this base class. We really\n+    // need to clean this up.\n+    for (int dim = 0; dim < kernel_.size(); ++dim) {\n+      CAFFE_ENFORCE_GE(pads_[dim], 0);\n+      CAFFE_ENFORCE_GE(pads_[kernel_.size() + dim], 0);\n+      CAFFE_ENFORCE(\n+          kernel_[dim],\n+          \"If you are doing convolution, you will need to set \"\n+          \"explicitly the kernel size.\");\n+    }\n+  }\n+  virtual ~IDEEPConvFusionOp() {}\n+\n+  bool RunOnDeviceWithOrderNCHW() override {\n+    const auto& X = Input(INPUT_X);\n+    const auto& filter = Input(FILTER);\n+    auto* Y = Output(OUTPUT);\n+    auto Y_dims_conv = CalcOutputDims(X, filter.get_dim(0));\n+    auto attr = [&]() {", "path": "caffe2/ideep/operators/conv_fusion_op.cc", "position": null, "original_position": 66, "commit_id": "906941ee3d716176247e2092444da86251bb3304", "original_commit_id": "ba9a6828db4e4409ed34b0ab82f35687cdd956d1", "user": {"login": "gujinghui", "id": 31264804, "node_id": "MDQ6VXNlcjMxMjY0ODA0", "avatar_url": "https://avatars2.githubusercontent.com/u/31264804?v=4", "gravatar_id": "", "url": "https://api.github.com/users/gujinghui", "html_url": "https://github.com/gujinghui", "followers_url": "https://api.github.com/users/gujinghui/followers", "following_url": "https://api.github.com/users/gujinghui/following{/other_user}", "gists_url": "https://api.github.com/users/gujinghui/gists{/gist_id}", "starred_url": "https://api.github.com/users/gujinghui/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/gujinghui/subscriptions", "organizations_url": "https://api.github.com/users/gujinghui/orgs", "repos_url": "https://api.github.com/users/gujinghui/repos", "events_url": "https://api.github.com/users/gujinghui/events{/privacy}", "received_events_url": "https://api.github.com/users/gujinghui/received_events", "type": "User", "site_admin": false}, "body": "OK. Will fix it.", "created_at": "2018-04-19T05:45:31Z", "updated_at": "2018-11-23T15:42:49Z", "html_url": "https://github.com/pytorch/pytorch/pull/6699#discussion_r182638468", "pull_request_url": "https://api.github.com/repos/pytorch/pytorch/pulls/6699", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/182638468"}, "html": {"href": "https://github.com/pytorch/pytorch/pull/6699#discussion_r182638468"}, "pull_request": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/6699"}}, "body_html": "<p>OK. Will fix it.</p>", "body_text": "OK. Will fix it.", "in_reply_to_id": 182627211}