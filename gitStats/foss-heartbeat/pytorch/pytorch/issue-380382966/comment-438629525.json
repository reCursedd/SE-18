{"url": "https://api.github.com/repos/pytorch/pytorch/issues/comments/438629525", "html_url": "https://github.com/pytorch/pytorch/issues/13913#issuecomment-438629525", "issue_url": "https://api.github.com/repos/pytorch/pytorch/issues/13913", "id": 438629525, "node_id": "MDEyOklzc3VlQ29tbWVudDQzODYyOTUyNQ==", "user": {"login": "jjsjann123", "id": 3709243, "node_id": "MDQ6VXNlcjM3MDkyNDM=", "avatar_url": "https://avatars3.githubusercontent.com/u/3709243?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jjsjann123", "html_url": "https://github.com/jjsjann123", "followers_url": "https://api.github.com/users/jjsjann123/followers", "following_url": "https://api.github.com/users/jjsjann123/following{/other_user}", "gists_url": "https://api.github.com/users/jjsjann123/gists{/gist_id}", "starred_url": "https://api.github.com/users/jjsjann123/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jjsjann123/subscriptions", "organizations_url": "https://api.github.com/users/jjsjann123/orgs", "repos_url": "https://api.github.com/users/jjsjann123/repos", "events_url": "https://api.github.com/users/jjsjann123/events{/privacy}", "received_events_url": "https://api.github.com/users/jjsjann123/received_events", "type": "User", "site_admin": false}, "created_at": "2018-11-14T11:23:34Z", "updated_at": "2018-11-14T11:23:34Z", "author_association": "CONTRIBUTOR", "body_html": "<p>Okey, compiler warning seems a little crazy to me.</p>\n<p>I can repro the same warning with code like</p>\n<pre><code>template &lt;typename T&gt;\nstruct Data {\n  T x_;\n  __device__ Data() {}\n};\n\n__device__ void test() {\n  __shared__ Data&lt;int&gt; q[10];\n}\n</code></pre>\n<p>Which seem legit to me. Replacing it with a template function does remove the warning.</p>\n<pre><code>template &lt;typename T&gt;\nstruct Data {\n  T x_;\n  __device__ Data() {}\n};\n\ntemplate &lt;typename Q&gt;\n__device__ void test() {\n  __shared__ Q q[10];\n}\n\ntemplate __device__ void test&lt;Data&lt;int&gt;&gt;();\n</code></pre>\n<p>Inserting an assignment in the default constructor <code>__device__ Data() { x = T(0)}</code> would give me this warning again.</p>", "body_text": "Okey, compiler warning seems a little crazy to me.\nI can repro the same warning with code like\ntemplate <typename T>\nstruct Data {\n  T x_;\n  __device__ Data() {}\n};\n\n__device__ void test() {\n  __shared__ Data<int> q[10];\n}\n\nWhich seem legit to me. Replacing it with a template function does remove the warning.\ntemplate <typename T>\nstruct Data {\n  T x_;\n  __device__ Data() {}\n};\n\ntemplate <typename Q>\n__device__ void test() {\n  __shared__ Q q[10];\n}\n\ntemplate __device__ void test<Data<int>>();\n\nInserting an assignment in the default constructor __device__ Data() { x = T(0)} would give me this warning again.", "body": "Okey, compiler warning seems a little crazy to me.\r\n\r\nI can repro the same warning with code like\r\n```\r\ntemplate <typename T>\r\nstruct Data {\r\n  T x_;\r\n  __device__ Data() {}\r\n};\r\n\r\n__device__ void test() {\r\n  __shared__ Data<int> q[10];\r\n}\r\n```\r\nWhich seem legit to me. Replacing it with a template function does remove the warning.\r\n```\r\ntemplate <typename T>\r\nstruct Data {\r\n  T x_;\r\n  __device__ Data() {}\r\n};\r\n\r\ntemplate <typename Q>\r\n__device__ void test() {\r\n  __shared__ Q q[10];\r\n}\r\n\r\ntemplate __device__ void test<Data<int>>();\r\n```\r\nInserting an assignment in the default constructor `__device__ Data() { x = T(0)}` would give me this warning again.\r\n\r\n"}