{"url": "https://api.github.com/repos/pytorch/pytorch/issues/comments/355817342", "html_url": "https://github.com/pytorch/pytorch/issues/4514#issuecomment-355817342", "issue_url": "https://api.github.com/repos/pytorch/pytorch/issues/4514", "id": 355817342, "node_id": "MDEyOklzc3VlQ29tbWVudDM1NTgxNzM0Mg==", "user": {"login": "bamtercelboo", "id": 22359268, "node_id": "MDQ6VXNlcjIyMzU5MjY4", "avatar_url": "https://avatars0.githubusercontent.com/u/22359268?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bamtercelboo", "html_url": "https://github.com/bamtercelboo", "followers_url": "https://api.github.com/users/bamtercelboo/followers", "following_url": "https://api.github.com/users/bamtercelboo/following{/other_user}", "gists_url": "https://api.github.com/users/bamtercelboo/gists{/gist_id}", "starred_url": "https://api.github.com/users/bamtercelboo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bamtercelboo/subscriptions", "organizations_url": "https://api.github.com/users/bamtercelboo/orgs", "repos_url": "https://api.github.com/users/bamtercelboo/repos", "events_url": "https://api.github.com/users/bamtercelboo/events{/privacy}", "received_events_url": "https://api.github.com/users/bamtercelboo/received_events", "type": "User", "site_admin": false}, "created_at": "2018-01-07T11:54:56Z", "updated_at": "2018-01-07T11:54:56Z", "author_association": "NONE", "body_html": "<p><a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=4583066\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/apaszke\">@apaszke</a> all right, the test following:</p>\n<ul>\n<li>\n<p>the same demo, <strong>max_norm is not None</strong>, <code> self.embed = nn.Embedding(V, D, max_norm=5, scale_grad_by_freq=True)</code>run two times on <code>cuda</code>:<br>\nfirst result:<br>\n<a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://user-images.githubusercontent.com/22359268/34649069-3e3d5556-f3e2-11e7-8f0c-12ac4d71a79a.png\"><img src=\"https://user-images.githubusercontent.com/22359268/34649069-3e3d5556-f3e2-11e7-8f0c-12ac4d71a79a.png\" alt=\"default\" style=\"max-width:100%;\"></a><br>\nsecond result:<br>\n<a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://user-images.githubusercontent.com/22359268/34649076-64cbf0f6-f3e2-11e7-8854-155ca218ae6e.png\"><img src=\"https://user-images.githubusercontent.com/22359268/34649076-64cbf0f6-f3e2-11e7-8854-155ca218ae6e.png\" alt=\"default\" style=\"max-width:100%;\"></a></p>\n</li>\n<li>\n<p><strong>two times of loss and acc is not same.</strong></p>\n</li>\n<li>\n<p>the same demo, <strong>max_norm is None</strong>, <code> self.embed = nn.Embedding(V, D, max_norm=None, scale_grad_by_freq=True)</code>run two times on <code>cuda</code>:<br>\nfirst result:<br>\n<a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://user-images.githubusercontent.com/22359268/34649096-d3924404-f3e2-11e7-94a5-d543950ca532.png\"><img src=\"https://user-images.githubusercontent.com/22359268/34649096-d3924404-f3e2-11e7-94a5-d543950ca532.png\" alt=\"default\" style=\"max-width:100%;\"></a><br>\nsecond result:<br>\n<a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://user-images.githubusercontent.com/22359268/34649100-ea33b666-f3e2-11e7-9e0a-c5625b07ce81.png\"><img src=\"https://user-images.githubusercontent.com/22359268/34649100-ea33b666-f3e2-11e7-9e0a-c5625b07ce81.png\" alt=\"default\" style=\"max-width:100%;\"></a></p>\n</li>\n<li>\n<p><strong>two times of loss and acc is same.</strong></p>\n</li>\n<li>\n<p>above test, when run on <code>cpu</code>, max_norm is None or max_norm is not None has <strong>no influence</strong> on the random state.</p>\n</li>\n<li>\n<p>above test, <strong>nothing changed</strong> every time, except the parameter of max_norm.</p>\n</li>\n<li>\n<p>above demo, you can see <a href=\"https://github.com/bamtercelboo/cnn-lstm-bilstm-deepcnn-clstm-in-pytorch/blob/master/models/model_CNN.py\">here</a></p>\n</li>\n<li>\n<p>Are you sure <code>nn.Embedding()</code> has no influence on the random state when run demo <strong>on gpu(cuda)</strong>?</p>\n</li>\n</ul>", "body_text": "@apaszke all right, the test following:\n\n\nthe same demo, max_norm is not None,  self.embed = nn.Embedding(V, D, max_norm=5, scale_grad_by_freq=True)run two times on cuda:\nfirst result:\n\nsecond result:\n\n\n\ntwo times of loss and acc is not same.\n\n\nthe same demo, max_norm is None,  self.embed = nn.Embedding(V, D, max_norm=None, scale_grad_by_freq=True)run two times on cuda:\nfirst result:\n\nsecond result:\n\n\n\ntwo times of loss and acc is same.\n\n\nabove test, when run on cpu, max_norm is None or max_norm is not None has no influence on the random state.\n\n\nabove test, nothing changed every time, except the parameter of max_norm.\n\n\nabove demo, you can see here\n\n\nAre you sure nn.Embedding() has no influence on the random state when run demo on gpu(cuda)?", "body": "@apaszke all right, the test following:\r\n\r\n- the same demo, **max_norm is not None**, ` self.embed = nn.Embedding(V, D, max_norm=5, scale_grad_by_freq=True)`run two times on `cuda`:\r\nfirst result:\r\n![default](https://user-images.githubusercontent.com/22359268/34649069-3e3d5556-f3e2-11e7-8f0c-12ac4d71a79a.png)\r\nsecond result:\r\n![default](https://user-images.githubusercontent.com/22359268/34649076-64cbf0f6-f3e2-11e7-8854-155ca218ae6e.png)\r\n\r\n- **two times of loss and acc is not same.**\r\n\r\n- the same demo, **max_norm is None**, ` self.embed = nn.Embedding(V, D, max_norm=None, scale_grad_by_freq=True)`run two times on `cuda`:\r\nfirst result:\r\n![default](https://user-images.githubusercontent.com/22359268/34649096-d3924404-f3e2-11e7-94a5-d543950ca532.png)\r\nsecond result: \r\n![default](https://user-images.githubusercontent.com/22359268/34649100-ea33b666-f3e2-11e7-9e0a-c5625b07ce81.png)\r\n\r\n- **two times of loss and acc is same.**\r\n\r\n- above test, when run on `cpu`, max_norm is None or max_norm is not None has **no influence** on the random state.\r\n\r\n- above test, **nothing changed** every time, except the parameter of max_norm.\r\n\r\n- above demo, you can see [here](https://github.com/bamtercelboo/cnn-lstm-bilstm-deepcnn-clstm-in-pytorch/blob/master/models/model_CNN.py)\r\n\r\n- Are you sure `nn.Embedding()` has no influence on the random state when run demo **on gpu(cuda)**?"}