{"url": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/142530381", "pull_request_review_id": 66905687, "id": 142530381, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE0MjUzMDM4MQ==", "diff_hunk": "@@ -111,16 +111,15 @@ void THCTensor_(scatter)(THCState* state, THCTensor *tensor, int dim, THCudaLong\n              \"Index tensor must have same dimensions as input tensor\");\n   THArgCheck(THCTensor_(nDimension)(state, src) == THCTensor_(nDimension)(state, tensor), 4,\n              \"Input tensor must have same dimensions as output tensor\");\n-  THLongStorage *indexDims = THCudaLongTensor_newSizeOf(state, index);\n-  THArgCheck(THCTensor_(isSize)(state, src, indexDims), 3,\n-             \"Index tensor must have the same size as input tensor.\");\n-  THLongStorage_free(indexDims);\n \n   for (int d = 0; d < THCTensor_(nDimension)(state, tensor); d++) {\n+    int64_t indexSizeD = THCudaLongTensor_size(state, index, d);\n     if (d != dim) {\n-      THArgCheck(THCTensor_(size)(state, tensor, d) == THCTensor_(size)(state, src, d), 4,\n-                 \"Input tensor must have same size as output tensor apart from the specified dimension\");\n+      THArgCheck(indexSizeD <= THCTensor_(size)(state, tensor, d), 3,\n+                 \"Index tensor must not have larger size than output tensor apart from the specified dimension\");", "path": "torch/lib/THC/generic/THCTensorScatterGather.cu", "position": null, "original_position": 15, "commit_id": "d7a3642b11eb07b0df68edda123a234136a4c989", "original_commit_id": "64084f6dc8e7d1f0e9934275d319acb474011122", "user": {"login": "SsnL", "id": 5674597, "node_id": "MDQ6VXNlcjU2NzQ1OTc=", "avatar_url": "https://avatars2.githubusercontent.com/u/5674597?v=4", "gravatar_id": "", "url": "https://api.github.com/users/SsnL", "html_url": "https://github.com/SsnL", "followers_url": "https://api.github.com/users/SsnL/followers", "following_url": "https://api.github.com/users/SsnL/following{/other_user}", "gists_url": "https://api.github.com/users/SsnL/gists{/gist_id}", "starred_url": "https://api.github.com/users/SsnL/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/SsnL/subscriptions", "organizations_url": "https://api.github.com/users/SsnL/orgs", "repos_url": "https://api.github.com/users/SsnL/repos", "events_url": "https://api.github.com/users/SsnL/events{/privacy}", "received_events_url": "https://api.github.com/users/SsnL/received_events", "type": "User", "site_admin": false}, "body": "On it.", "created_at": "2017-10-03T21:35:40Z", "updated_at": "2018-11-23T15:34:59Z", "html_url": "https://github.com/pytorch/pytorch/pull/2960#discussion_r142530381", "pull_request_url": "https://api.github.com/repos/pytorch/pytorch/pulls/2960", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/142530381"}, "html": {"href": "https://github.com/pytorch/pytorch/pull/2960#discussion_r142530381"}, "pull_request": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/2960"}}, "body_html": "<p>On it.</p>", "body_text": "On it.", "in_reply_to_id": 142530204}