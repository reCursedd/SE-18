{"url": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/165505959", "pull_request_review_id": 93459452, "id": 165505959, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE2NTUwNTk1OQ==", "diff_hunk": "@@ -3,71 +3,62 @@\n \n \n class _InstanceNorm(_BatchNorm):\n-    def __init__(self, num_features, eps=1e-5, momentum=0.1, affine=False):\n+    def __init__(self, num_features, eps=1e-5, momentum=0.1, affine=False,\n+                 track_running_stats=False):\n         super(_InstanceNorm, self).__init__(\n-            num_features, eps, momentum, affine)\n-        self._use_running_stats = False\n+            num_features, eps, momentum, affine, track_running_stats)\n \n-    def forward(self, input):\n-        b, c = input.size(0), input.size(1)\n-\n-        # Repeat stored stats and affine transform params\n-        running_mean = self.running_mean.repeat(b)\n-        running_var = self.running_var.repeat(b)\n-\n-        weight, bias = None, None\n-        if self.affine:\n-            weight = self.weight.repeat(b)\n-            bias = self.bias.repeat(b)\n-\n-        # Apply instance norm\n-        input_reshaped = input.contiguous().view(1, b * c, *input.size()[2:])\n-\n-        out = F.batch_norm(\n-            input_reshaped, running_mean, running_var, weight, bias,\n-            not self._use_running_stats, self.momentum, self.eps)\n-\n-        # Reshape back\n-        self.running_mean.copy_(running_mean.view(b, c).mean(0, keepdim=False))\n-        self.running_var.copy_(running_var.view(b, c).mean(0, keepdim=False))\n-\n-        return out.view(b, c, *input.size()[2:])\n+    def _check_input_dim(self, input):\n+        return NotImplemented\n \n-    def use_running_stats(self, mode=True):\n-        r\"\"\"Set using running statistics or instance statistics.\n+    def forward(self, input):\n+        self._check_input_dim(input)\n \n-        Instance normalization usually use instance statistics in both training\n-        and evaluation modes. But users can set this method to use running\n-        statistics in the fashion similar to batch normalization in eval mode.\n-        \"\"\"\n-        self._use_running_stats = mode\n+        return F.instance_norm(\n+            input, self.running_mean, self.running_var, self.weight, self.bias,\n+            self.training or not self.track_running_stats, self.momentum, self.eps)\n \n \n class InstanceNorm1d(_InstanceNorm):\n-    r\"\"\"Applies Instance Normalization over a 3d input that is seen as a mini-batch.\n+    r\"\"\"Applies Batch Normalization over a 3d input (a mini-batch of 2d inputs)", "path": "torch/nn/modules/instancenorm.py", "position": null, "original_position": 56, "commit_id": "b1359c8212165027bb3a1fbf500a1328ef7e0f39", "original_commit_id": "e282e75802f97731ea048abd8d126ad6b7d715ea", "user": {"login": "Kaixhin", "id": 991891, "node_id": "MDQ6VXNlcjk5MTg5MQ==", "avatar_url": "https://avatars3.githubusercontent.com/u/991891?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Kaixhin", "html_url": "https://github.com/Kaixhin", "followers_url": "https://api.github.com/users/Kaixhin/followers", "following_url": "https://api.github.com/users/Kaixhin/following{/other_user}", "gists_url": "https://api.github.com/users/Kaixhin/gists{/gist_id}", "starred_url": "https://api.github.com/users/Kaixhin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Kaixhin/subscriptions", "organizations_url": "https://api.github.com/users/Kaixhin/orgs", "repos_url": "https://api.github.com/users/Kaixhin/repos", "events_url": "https://api.github.com/users/Kaixhin/events{/privacy}", "received_events_url": "https://api.github.com/users/Kaixhin/received_events", "type": "User", "site_admin": false}, "body": "Typo here as well as at the 2D and 3D versions.", "created_at": "2018-02-01T22:20:28Z", "updated_at": "2018-11-23T15:38:57Z", "html_url": "https://github.com/pytorch/pytorch/pull/4922#discussion_r165505959", "pull_request_url": "https://api.github.com/repos/pytorch/pytorch/pulls/4922", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/165505959"}, "html": {"href": "https://github.com/pytorch/pytorch/pull/4922#discussion_r165505959"}, "pull_request": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/4922"}}, "body_html": "<p>Typo here as well as at the 2D and 3D versions.</p>", "body_text": "Typo here as well as at the 2D and 3D versions."}