{"url": "https://api.github.com/repos/pytorch/pytorch/issues/comments/362434538", "html_url": "https://github.com/pytorch/pytorch/pull/4922#issuecomment-362434538", "issue_url": "https://api.github.com/repos/pytorch/pytorch/issues/4922", "id": 362434538, "node_id": "MDEyOklzc3VlQ29tbWVudDM2MjQzNDUzOA==", "user": {"login": "SsnL", "id": 5674597, "node_id": "MDQ6VXNlcjU2NzQ1OTc=", "avatar_url": "https://avatars2.githubusercontent.com/u/5674597?v=4", "gravatar_id": "", "url": "https://api.github.com/users/SsnL", "html_url": "https://github.com/SsnL", "followers_url": "https://api.github.com/users/SsnL/followers", "following_url": "https://api.github.com/users/SsnL/following{/other_user}", "gists_url": "https://api.github.com/users/SsnL/gists{/gist_id}", "starred_url": "https://api.github.com/users/SsnL/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/SsnL/subscriptions", "organizations_url": "https://api.github.com/users/SsnL/orgs", "repos_url": "https://api.github.com/users/SsnL/repos", "events_url": "https://api.github.com/users/SsnL/events{/privacy}", "received_events_url": "https://api.github.com/users/SsnL/received_events", "type": "User", "site_admin": false}, "created_at": "2018-02-01T23:18:31Z", "updated_at": "2018-02-01T23:18:31Z", "author_association": "CONTRIBUTOR", "body_html": "<div class=\"email-fragment\">Well, LN normalizes the last certain number dimensions. And IN normalizes\nthe dimensions after channel. So LN can do what IN does in terms of\nnormalization. However, they apply affine transforms differently.</div>\n<span class=\"email-hidden-toggle\"><a href=\"#\">\u2026</a></span><div class=\"email-hidden-reply\">\n<div class=\"email-quoted-reply\">On Thu, Feb 1, 2018 at 17:25 Kai Arulkumaran ***@***.***&gt; wrote:\n So we've gone for LayerNorm normalising over every element in each sample,\n and InstanceNorm{1,2,3}d normalising only over channels?\n\n \u2014\n You are receiving this because you were mentioned.\n Reply to this email directly, view it on GitHub\n &lt;<a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load issue title\" data-id=\"292608373\" data-permission-text=\"Issue title is private\" data-url=\"https://github.com/pytorch/pytorch/issues/4922\" href=\"https://github.com/pytorch/pytorch/pull/4922#issuecomment-362422781\">#4922 (comment)</a>&gt;, or mute\n the thread\n &lt;<a href=\"https://github.com/notifications/unsubscribe-auth/AFaWZbuQe748hcGPZdEyiyr_rP5no6eeks5tQjnzgaJpZM4RxkM-\">https://github.com/notifications/unsubscribe-auth/AFaWZbuQe748hcGPZdEyiyr_rP5no6eeks5tQjnzgaJpZM4RxkM-</a>&gt;\n .\n</div>\n<div class=\"email-fragment\"></div>\n</div>", "body_text": "Well, LN normalizes the last certain number dimensions. And IN normalizes\nthe dimensions after channel. So LN can do what IN does in terms of\nnormalization. However, they apply affine transforms differently.\n\u2026\nOn Thu, Feb 1, 2018 at 17:25 Kai Arulkumaran ***@***.***> wrote:\n So we've gone for LayerNorm normalising over every element in each sample,\n and InstanceNorm{1,2,3}d normalising only over channels?\n\n \u2014\n You are receiving this because you were mentioned.\n Reply to this email directly, view it on GitHub\n <#4922 (comment)>, or mute\n the thread\n <https://github.com/notifications/unsubscribe-auth/AFaWZbuQe748hcGPZdEyiyr_rP5no6eeks5tQjnzgaJpZM4RxkM->\n .", "body": "Well, LN normalizes the last certain number dimensions. And IN normalizes\nthe dimensions after channel. So LN can do what IN does in terms of\nnormalization. However, they apply affine transforms differently.\n\nOn Thu, Feb 1, 2018 at 17:25 Kai Arulkumaran <notifications@github.com>\nwrote:\n\n> So we've gone for LayerNorm normalising over every element in each sample,\n> and InstanceNorm{1,2,3}d normalising only over channels?\n>\n> \u2014\n> You are receiving this because you were mentioned.\n> Reply to this email directly, view it on GitHub\n> <https://github.com/pytorch/pytorch/pull/4922#issuecomment-362422781>, or mute\n> the thread\n> <https://github.com/notifications/unsubscribe-auth/AFaWZbuQe748hcGPZdEyiyr_rP5no6eeks5tQjnzgaJpZM4RxkM->\n> .\n>\n"}