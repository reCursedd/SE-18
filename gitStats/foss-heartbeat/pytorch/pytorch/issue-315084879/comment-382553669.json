{"url": "https://api.github.com/repos/pytorch/pytorch/issues/comments/382553669", "html_url": "https://github.com/pytorch/pytorch/issues/6660#issuecomment-382553669", "issue_url": "https://api.github.com/repos/pytorch/pytorch/issues/6660", "id": 382553669, "node_id": "MDEyOklzc3VlQ29tbWVudDM4MjU1MzY2OQ==", "user": {"login": "orionr", "id": 79994, "node_id": "MDQ6VXNlcjc5OTk0", "avatar_url": "https://avatars3.githubusercontent.com/u/79994?v=4", "gravatar_id": "", "url": "https://api.github.com/users/orionr", "html_url": "https://github.com/orionr", "followers_url": "https://api.github.com/users/orionr/followers", "following_url": "https://api.github.com/users/orionr/following{/other_user}", "gists_url": "https://api.github.com/users/orionr/gists{/gist_id}", "starred_url": "https://api.github.com/users/orionr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/orionr/subscriptions", "organizations_url": "https://api.github.com/users/orionr/orgs", "repos_url": "https://api.github.com/users/orionr/repos", "events_url": "https://api.github.com/users/orionr/events{/privacy}", "received_events_url": "https://api.github.com/users/orionr/received_events", "type": "User", "site_admin": false}, "created_at": "2018-04-18T22:50:37Z", "updated_at": "2018-04-18T22:50:37Z", "author_association": "CONTRIBUTOR", "body_html": "<p>Hi <a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=214761\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/edubois\">@edubois</a> - you can. Likely you'd want to have both generator and discriminator loaded into the same workspace and linked through their inputs and outputs. You would then need to selectively enable and disable propagation. However, for this case, you might be able to iterate faster with PyTorch. For DCGAN, a great example is <a href=\"https://github.com/pytorch/examples/tree/master/dcgan\">https://github.com/pytorch/examples/tree/master/dcgan</a></p>\n<p>Hope that helps.</p>", "body_text": "Hi @edubois - you can. Likely you'd want to have both generator and discriminator loaded into the same workspace and linked through their inputs and outputs. You would then need to selectively enable and disable propagation. However, for this case, you might be able to iterate faster with PyTorch. For DCGAN, a great example is https://github.com/pytorch/examples/tree/master/dcgan\nHope that helps.", "body": "Hi @edubois - you can. Likely you'd want to have both generator and discriminator loaded into the same workspace and linked through their inputs and outputs. You would then need to selectively enable and disable propagation. However, for this case, you might be able to iterate faster with PyTorch. For DCGAN, a great example is https://github.com/pytorch/examples/tree/master/dcgan\r\n\r\nHope that helps."}