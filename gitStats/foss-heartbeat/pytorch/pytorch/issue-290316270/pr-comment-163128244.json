{"url": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/163128244", "pull_request_review_id": 90691973, "id": 163128244, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE2MzEyODI0NA==", "diff_hunk": "@@ -0,0 +1,39 @@\n+import math\r\n+from torch.distributions import constraints\r\n+from torch.distributions.transforms import AbsTransform\r\n+from torch.distributions.normal import Normal\r\n+from torch.distributions.transformed_distribution import TransformedDistribution\r\n+\r\n+\r\n+class HalfNormal(TransformedDistribution):\r", "path": "torch/distributions/half_normal.py", "position": null, "original_position": 8, "commit_id": "244932097058605559f6baa57da01c50b32a4131", "original_commit_id": "f24d3a3e5bae1838f56a7a2b389ec795d7b1de6b", "user": {"login": "fritzo", "id": 648532, "node_id": "MDQ6VXNlcjY0ODUzMg==", "avatar_url": "https://avatars0.githubusercontent.com/u/648532?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fritzo", "html_url": "https://github.com/fritzo", "followers_url": "https://api.github.com/users/fritzo/followers", "following_url": "https://api.github.com/users/fritzo/following{/other_user}", "gists_url": "https://api.github.com/users/fritzo/gists{/gist_id}", "starred_url": "https://api.github.com/users/fritzo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fritzo/subscriptions", "organizations_url": "https://api.github.com/users/fritzo/orgs", "repos_url": "https://api.github.com/users/fritzo/repos", "events_url": "https://api.github.com/users/fritzo/events{/privacy}", "received_events_url": "https://api.github.com/users/fritzo/received_events", "type": "User", "site_admin": false}, "body": "I agree this one might not be very useful. @jpchen is working on a `HalfCauchy` which is actually commonly used as a prior on variances especially in linguistics and is worth maintaining. We could use `HalfCauchy` as the canonical demonstration of `AbsTransform` and add `TruncatedNormal` in a later PR (`TruncatedNormal` is actually really tricky to get right, due to reparameterized gradients). @alicanb WDYT?", "created_at": "2018-01-23T02:20:36Z", "updated_at": "2018-11-23T15:38:25Z", "html_url": "https://github.com/pytorch/pytorch/pull/4771#discussion_r163128244", "pull_request_url": "https://api.github.com/repos/pytorch/pytorch/pulls/4771", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/163128244"}, "html": {"href": "https://github.com/pytorch/pytorch/pull/4771#discussion_r163128244"}, "pull_request": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/4771"}}, "body_html": "<p>I agree this one might not be very useful. <a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=1869641\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/jpchen\">@jpchen</a> is working on a <code>HalfCauchy</code> which is actually commonly used as a prior on variances especially in linguistics and is worth maintaining. We could use <code>HalfCauchy</code> as the canonical demonstration of <code>AbsTransform</code> and add <code>TruncatedNormal</code> in a later PR (<code>TruncatedNormal</code> is actually really tricky to get right, due to reparameterized gradients). <a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=1093846\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/alicanb\">@alicanb</a> WDYT?</p>", "body_text": "I agree this one might not be very useful. @jpchen is working on a HalfCauchy which is actually commonly used as a prior on variances especially in linguistics and is worth maintaining. We could use HalfCauchy as the canonical demonstration of AbsTransform and add TruncatedNormal in a later PR (TruncatedNormal is actually really tricky to get right, due to reparameterized gradients). @alicanb WDYT?", "in_reply_to_id": 162830335}