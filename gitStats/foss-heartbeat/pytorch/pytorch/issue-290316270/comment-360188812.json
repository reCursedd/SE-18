{"url": "https://api.github.com/repos/pytorch/pytorch/issues/comments/360188812", "html_url": "https://github.com/pytorch/pytorch/pull/4771#issuecomment-360188812", "issue_url": "https://api.github.com/repos/pytorch/pytorch/issues/4771", "id": 360188812, "node_id": "MDEyOklzc3VlQ29tbWVudDM2MDE4ODgxMg==", "user": {"login": "fritzo", "id": 648532, "node_id": "MDQ6VXNlcjY0ODUzMg==", "avatar_url": "https://avatars0.githubusercontent.com/u/648532?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fritzo", "html_url": "https://github.com/fritzo", "followers_url": "https://api.github.com/users/fritzo/followers", "following_url": "https://api.github.com/users/fritzo/following{/other_user}", "gists_url": "https://api.github.com/users/fritzo/gists{/gist_id}", "starred_url": "https://api.github.com/users/fritzo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fritzo/subscriptions", "organizations_url": "https://api.github.com/users/fritzo/orgs", "repos_url": "https://api.github.com/users/fritzo/repos", "events_url": "https://api.github.com/users/fritzo/events{/privacy}", "received_events_url": "https://api.github.com/users/fritzo/received_events", "type": "User", "site_admin": false}, "created_at": "2018-01-24T16:21:57Z", "updated_at": "2018-01-24T16:21:57Z", "author_association": "CONTRIBUTOR", "body_html": "<p><a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=4583066\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/apaszke\">@apaszke</a> <code>Transform</code> objects now support your suggested syntax <code>t()</code> and <code>t.inv()</code>. This looks very nice:</p>\n<div class=\"highlight highlight-source-python\"><pre>t <span class=\"pl-k\">=</span> ExpTransform()\n<span class=\"pl-k\">assert</span> <span class=\"pl-c1\">isinstance</span>(t.inv, Transform)\n<span class=\"pl-k\">assert</span> t.inv.inv <span class=\"pl-k\">is</span> t</pre></div>", "body_text": "@apaszke Transform objects now support your suggested syntax t() and t.inv(). This looks very nice:\nt = ExpTransform()\nassert isinstance(t.inv, Transform)\nassert t.inv.inv is t", "body": "@apaszke `Transform` objects now support your suggested syntax `t()` and `t.inv()`. This looks very nice:\r\n```py\r\nt = ExpTransform()\r\nassert isinstance(t.inv, Transform)\r\nassert t.inv.inv is t\r\n```"}