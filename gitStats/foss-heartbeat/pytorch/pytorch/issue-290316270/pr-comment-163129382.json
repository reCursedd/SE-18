{"url": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/163129382", "pull_request_review_id": 90693217, "id": 163129382, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE2MzEyOTM4Mg==", "diff_hunk": "@@ -0,0 +1,39 @@\n+import math\r\n+from torch.distributions import constraints\r\n+from torch.distributions.transforms import AbsTransform\r\n+from torch.distributions.normal import Normal\r\n+from torch.distributions.transformed_distribution import TransformedDistribution\r\n+\r\n+\r\n+class HalfNormal(TransformedDistribution):\r", "path": "torch/distributions/half_normal.py", "position": null, "original_position": 8, "commit_id": "244932097058605559f6baa57da01c50b32a4131", "original_commit_id": "f24d3a3e5bae1838f56a7a2b389ec795d7b1de6b", "user": {"login": "alicanb", "id": 1093846, "node_id": "MDQ6VXNlcjEwOTM4NDY=", "avatar_url": "https://avatars2.githubusercontent.com/u/1093846?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alicanb", "html_url": "https://github.com/alicanb", "followers_url": "https://api.github.com/users/alicanb/followers", "following_url": "https://api.github.com/users/alicanb/following{/other_user}", "gists_url": "https://api.github.com/users/alicanb/gists{/gist_id}", "starred_url": "https://api.github.com/users/alicanb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alicanb/subscriptions", "organizations_url": "https://api.github.com/users/alicanb/orgs", "repos_url": "https://api.github.com/users/alicanb/repos", "events_url": "https://api.github.com/users/alicanb/events{/privacy}", "received_events_url": "https://api.github.com/users/alicanb/received_events", "type": "User", "site_admin": false}, "body": "Works for me \ud83d\udc4d I've been thinking about how to handle `TruncatedNomal` but we can discuss that later. In the meantime, we can remove `HalfNormal` and ask @jpchen to push an implementation of `HalfCauchy` with `Transforms` to this branch (Nice thing about `HalfCauchy` is it uses both `AffineTransform` and `AbsTransform`, so it will be a perfect example) ", "created_at": "2018-01-23T02:30:02Z", "updated_at": "2018-11-23T15:38:25Z", "html_url": "https://github.com/pytorch/pytorch/pull/4771#discussion_r163129382", "pull_request_url": "https://api.github.com/repos/pytorch/pytorch/pulls/4771", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/163129382"}, "html": {"href": "https://github.com/pytorch/pytorch/pull/4771#discussion_r163129382"}, "pull_request": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/4771"}}, "body_html": "<p>Works for me <g-emoji class=\"g-emoji\" alias=\"+1\" fallback-src=\"https://assets-cdn.github.com/images/icons/emoji/unicode/1f44d.png\">\ud83d\udc4d</g-emoji> I've been thinking about how to handle <code>TruncatedNomal</code> but we can discuss that later. In the meantime, we can remove <code>HalfNormal</code> and ask <a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=1869641\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/jpchen\">@jpchen</a> to push an implementation of <code>HalfCauchy</code> with <code>Transforms</code> to this branch (Nice thing about <code>HalfCauchy</code> is it uses both <code>AffineTransform</code> and <code>AbsTransform</code>, so it will be a perfect example)</p>", "body_text": "Works for me \ud83d\udc4d I've been thinking about how to handle TruncatedNomal but we can discuss that later. In the meantime, we can remove HalfNormal and ask @jpchen to push an implementation of HalfCauchy with Transforms to this branch (Nice thing about HalfCauchy is it uses both AffineTransform and AbsTransform, so it will be a perfect example)", "in_reply_to_id": 162830335}