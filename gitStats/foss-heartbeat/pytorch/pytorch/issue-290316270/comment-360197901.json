{"url": "https://api.github.com/repos/pytorch/pytorch/issues/comments/360197901", "html_url": "https://github.com/pytorch/pytorch/pull/4771#issuecomment-360197901", "issue_url": "https://api.github.com/repos/pytorch/pytorch/issues/4771", "id": 360197901, "node_id": "MDEyOklzc3VlQ29tbWVudDM2MDE5NzkwMQ==", "user": {"login": "alicanb", "id": 1093846, "node_id": "MDQ6VXNlcjEwOTM4NDY=", "avatar_url": "https://avatars2.githubusercontent.com/u/1093846?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alicanb", "html_url": "https://github.com/alicanb", "followers_url": "https://api.github.com/users/alicanb/followers", "following_url": "https://api.github.com/users/alicanb/following{/other_user}", "gists_url": "https://api.github.com/users/alicanb/gists{/gist_id}", "starred_url": "https://api.github.com/users/alicanb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alicanb/subscriptions", "organizations_url": "https://api.github.com/users/alicanb/orgs", "repos_url": "https://api.github.com/users/alicanb/repos", "events_url": "https://api.github.com/users/alicanb/events{/privacy}", "received_events_url": "https://api.github.com/users/alicanb/received_events", "type": "User", "site_admin": false}, "created_at": "2018-01-24T16:48:36Z", "updated_at": "2018-01-24T16:48:36Z", "author_association": "CONTRIBUTOR", "body_html": "<p>I'm having a hard time with the <code>__call__</code>. I think conceptually <code>Transform</code>s should operate on <code>Distribution</code>s and return <code>TransformedDistribution</code>, ex. <code>AbsTransform(Normal(0, scale))</code> to implement <code>HalfNormal</code> (I guess <code>AbsTransform()(Normal(0, scale))</code> is close enough). Nice thing about this is if we want to do <code>torch.abs(Normal(0, scale))</code>, we can simply define <code>abs=AbsTransform</code> in transforms.py and create attribute <code>_torch = transforms</code> in <code>Distribution</code> (I think this is how it's supposed to work at least, but I tried it and it doesn't, so I may have got this completely wrong <g-emoji class=\"g-emoji\" alias=\"smile\" fallback-src=\"https://assets-cdn.github.com/images/icons/emoji/unicode/1f604.png\">\ud83d\ude04</g-emoji>)</p>", "body_text": "I'm having a hard time with the __call__. I think conceptually Transforms should operate on Distributions and return TransformedDistribution, ex. AbsTransform(Normal(0, scale)) to implement HalfNormal (I guess AbsTransform()(Normal(0, scale)) is close enough). Nice thing about this is if we want to do torch.abs(Normal(0, scale)), we can simply define abs=AbsTransform in transforms.py and create attribute _torch = transforms in Distribution (I think this is how it's supposed to work at least, but I tried it and it doesn't, so I may have got this completely wrong \ud83d\ude04)", "body": "I'm having a hard time with the `__call__`. I think conceptually `Transform`s should operate on `Distribution`s and return `TransformedDistribution`, ex. `AbsTransform(Normal(0, scale))` to implement `HalfNormal` (I guess `AbsTransform()(Normal(0, scale))` is close enough). Nice thing about this is if we want to do `torch.abs(Normal(0, scale))`, we can simply define `abs=AbsTransform` in transforms.py and create attribute `_torch = transforms` in `Distribution` (I think this is how it's supposed to work at least, but I tried it and it doesn't, so I may have got this completely wrong \ud83d\ude04) "}