{"url": "https://api.github.com/repos/pytorch/pytorch/issues/622", "repository_url": "https://api.github.com/repos/pytorch/pytorch", "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/622/labels{/name}", "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/622/comments", "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/622/events", "html_url": "https://github.com/pytorch/pytorch/pull/622", "id": 203822718, "node_id": "MDExOlB1bGxSZXF1ZXN0MTAzNjE5ODk1", "number": 622, "title": "remove circular references in NestedIOFunction", "user": {"login": "adamlerer", "id": 5702157, "node_id": "MDQ6VXNlcjU3MDIxNTc=", "avatar_url": "https://avatars2.githubusercontent.com/u/5702157?v=4", "gravatar_id": "", "url": "https://api.github.com/users/adamlerer", "html_url": "https://github.com/adamlerer", "followers_url": "https://api.github.com/users/adamlerer/followers", "following_url": "https://api.github.com/users/adamlerer/following{/other_user}", "gists_url": "https://api.github.com/users/adamlerer/gists{/gist_id}", "starred_url": "https://api.github.com/users/adamlerer/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/adamlerer/subscriptions", "organizations_url": "https://api.github.com/users/adamlerer/orgs", "repos_url": "https://api.github.com/users/adamlerer/repos", "events_url": "https://api.github.com/users/adamlerer/events{/privacy}", "received_events_url": "https://api.github.com/users/adamlerer/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-01-28T18:28:09Z", "updated_at": "2017-01-28T22:30:08Z", "closed_at": "2017-01-28T22:30:08Z", "author_association": "CONTRIBUTOR", "pull_request": {"url": "https://api.github.com/repos/pytorch/pytorch/pulls/622", "html_url": "https://github.com/pytorch/pytorch/pull/622", "diff_url": "https://github.com/pytorch/pytorch/pull/622.diff", "patch_url": "https://github.com/pytorch/pytorch/pull/622.patch"}, "body_html": "<p>This <span class=\"issue-keyword tooltipped tooltipped-se\" aria-label=\"This pull request closes issue #599.\">fixes</span> <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load issue title\" data-id=\"203469897\" data-permission-text=\"Issue title is private\" data-url=\"https://github.com/pytorch/pytorch/issues/599\" data-hovercard-type=\"issue\" data-hovercard-url=\"/pytorch/pytorch/issues/599/hovercard\" href=\"https://github.com/pytorch/pytorch/issues/599\">#599</a>.</p>\n<p>It looks like <code>_map_tensor_fromiter</code> was inducing a circular reference, probably because it doesn't run the iterator to completion, so ends up holding a reference to the output variables. I would expect this should still be destroyed when the function scope exists, but appears not to.</p>\n<p>Writing a simple unflatten function fixed the memory leak. The example code in <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load issue title\" data-id=\"203469897\" data-permission-text=\"Issue title is private\" data-url=\"https://github.com/pytorch/pytorch/issues/599\" data-hovercard-type=\"issue\" data-hovercard-url=\"/pytorch/pytorch/issues/599/hovercard\" href=\"https://github.com/pytorch/pytorch/issues/599\">#599</a> no longer runs out of memory.</p>\n<p>Thanks to <a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=655866\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/colesbury\">@colesbury</a> for identifying the problem.</p>\n<p>P.S. I also fixed the tests to avoid running RNN dropout tests when the cudnn version is too low.</p>", "body_text": "This fixes #599.\nIt looks like _map_tensor_fromiter was inducing a circular reference, probably because it doesn't run the iterator to completion, so ends up holding a reference to the output variables. I would expect this should still be destroyed when the function scope exists, but appears not to.\nWriting a simple unflatten function fixed the memory leak. The example code in #599 no longer runs out of memory.\nThanks to @colesbury for identifying the problem.\nP.S. I also fixed the tests to avoid running RNN dropout tests when the cudnn version is too low.", "body": "This fixes https://github.com/pytorch/pytorch/issues/599.\r\n\r\nIt looks like `_map_tensor_fromiter` was inducing a circular reference, probably because it doesn't run the iterator to completion, so ends up holding a reference to the output variables. I would expect this should still be destroyed when the function scope exists, but appears not to.\r\n\r\nWriting a simple unflatten function fixed the memory leak. The example code in https://github.com/pytorch/pytorch/issues/599 no longer runs out of memory.\r\n\r\nThanks to @colesbury for identifying the problem.\r\n\r\nP.S. I also fixed the tests to avoid running RNN dropout tests when the cudnn version is too low.\r\n"}