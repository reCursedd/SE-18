{"url": "https://api.github.com/repos/pytorch/pytorch/issues/9893", "repository_url": "https://api.github.com/repos/pytorch/pytorch", "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/9893/labels{/name}", "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/9893/comments", "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/9893/events", "html_url": "https://github.com/pytorch/pytorch/issues/9893", "id": 344957043, "node_id": "MDU6SXNzdWUzNDQ5NTcwNDM=", "number": 9893, "title": "interaction with FindCUDA causes spurious re-cmakes", "user": {"login": "anderspapitto", "id": 1388690, "node_id": "MDQ6VXNlcjEzODg2OTA=", "avatar_url": "https://avatars3.githubusercontent.com/u/1388690?v=4", "gravatar_id": "", "url": "https://api.github.com/users/anderspapitto", "html_url": "https://github.com/anderspapitto", "followers_url": "https://api.github.com/users/anderspapitto/followers", "following_url": "https://api.github.com/users/anderspapitto/following{/other_user}", "gists_url": "https://api.github.com/users/anderspapitto/gists{/gist_id}", "starred_url": "https://api.github.com/users/anderspapitto/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/anderspapitto/subscriptions", "organizations_url": "https://api.github.com/users/anderspapitto/orgs", "repos_url": "https://api.github.com/users/anderspapitto/repos", "events_url": "https://api.github.com/users/anderspapitto/events{/privacy}", "received_events_url": "https://api.github.com/users/anderspapitto/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-07-26T18:31:21Z", "updated_at": "2018-07-26T18:43:36Z", "closed_at": null, "author_association": "MEMBER", "body_html": "<p>(see <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load issue title\" data-id=\"344635754\" data-permission-text=\"Issue title is private\" data-url=\"https://github.com/pytorch/pytorch/issues/9845\" data-hovercard-type=\"pull_request\" data-hovercard-url=\"/pytorch/pytorch/pull/9845/hovercard\" href=\"https://github.com/pytorch/pytorch/pull/9845\">#9845</a> for a discarded potential solution)</p>\n<p>FindCUDA generates a C++ source file at CMake time. When building with ninja (haven't tested with make), a dependency is recorded of build.ninja on that generated file. After invoking cmake manually, that generated file is (for some reason - it doesn't make sense to me why this is the case, and poking around to look at timestamps even suggests that it's not true) considered to be newer than build.ninja. Therefore upon the next time running <code>ninja build</code>, ninja spuriously reruns CMake (but not on additional subsequent runs).</p>\n<p>expected behavior: running <code>cmake; ninja</code> doesn't cause cmake to be run twice</p>\n<p>environment: on linux, with cuda and ninja</p>\n<p>to reproduce:</p>\n<p>(1) grab the cmake command. I did this by prepending an <code>echo</code> to the cmake invocation in build_pytorch_libs.sh<br>\n(2) <code>cd build</code><br>\n(3) manually run that cmake command<br>\n(4) <code>ninja -d explain</code><br>\n(5) note that cmake is rerun. The very first line of output should be a message from ninja saying that the dependency on the aforementioned generated source file is triggering a rebuild of build.ninja itself</p>\n<p>Note: I'm not sure of exactly how to characterize the underlying problem. It could be that the timestamps are recorded incorrectly (on the filesystem, they appear to be within a few ms of each other). It could be that the dependency itself is bogus. It could be either an upstream bug of FindCUDA, or a problem with our usage of it.</p>", "body_text": "(see #9845 for a discarded potential solution)\nFindCUDA generates a C++ source file at CMake time. When building with ninja (haven't tested with make), a dependency is recorded of build.ninja on that generated file. After invoking cmake manually, that generated file is (for some reason - it doesn't make sense to me why this is the case, and poking around to look at timestamps even suggests that it's not true) considered to be newer than build.ninja. Therefore upon the next time running ninja build, ninja spuriously reruns CMake (but not on additional subsequent runs).\nexpected behavior: running cmake; ninja doesn't cause cmake to be run twice\nenvironment: on linux, with cuda and ninja\nto reproduce:\n(1) grab the cmake command. I did this by prepending an echo to the cmake invocation in build_pytorch_libs.sh\n(2) cd build\n(3) manually run that cmake command\n(4) ninja -d explain\n(5) note that cmake is rerun. The very first line of output should be a message from ninja saying that the dependency on the aforementioned generated source file is triggering a rebuild of build.ninja itself\nNote: I'm not sure of exactly how to characterize the underlying problem. It could be that the timestamps are recorded incorrectly (on the filesystem, they appear to be within a few ms of each other). It could be that the dependency itself is bogus. It could be either an upstream bug of FindCUDA, or a problem with our usage of it.", "body": "(see https://github.com/pytorch/pytorch/pull/9845 for a discarded potential solution)\r\n\r\nFindCUDA generates a C++ source file at CMake time. When building with ninja (haven't tested with make), a dependency is recorded of build.ninja on that generated file. After invoking cmake manually, that generated file is (for some reason - it doesn't make sense to me why this is the case, and poking around to look at timestamps even suggests that it's not true) considered to be newer than build.ninja. Therefore upon the next time running `ninja build`, ninja spuriously reruns CMake (but not on additional subsequent runs).\r\n\r\nexpected behavior: running `cmake; ninja` doesn't cause cmake to be run twice\r\n\r\nenvironment: on linux, with cuda and ninja\r\n\r\nto reproduce:\r\n\r\n(1) grab the cmake command. I did this by prepending an `echo` to the cmake invocation in build_pytorch_libs.sh\r\n(2) `cd build`\r\n(3) manually run that cmake command\r\n(4) `ninja -d explain`\r\n(5) note that cmake is rerun. The very first line of output should be a message from ninja saying that the dependency on the aforementioned generated source file is triggering a rebuild of build.ninja itself\r\n\r\nNote: I'm not sure of exactly how to characterize the underlying problem. It could be that the timestamps are recorded incorrectly (on the filesystem, they appear to be within a few ms of each other). It could be that the dependency itself is bogus. It could be either an upstream bug of FindCUDA, or a problem with our usage of it."}