{"url": "https://api.github.com/repos/pytorch/pytorch/issues/comments/413660763", "html_url": "https://github.com/pytorch/pytorch/pull/10378#issuecomment-413660763", "issue_url": "https://api.github.com/repos/pytorch/pytorch/issues/10378", "id": 413660763, "node_id": "MDEyOklzc3VlQ29tbWVudDQxMzY2MDc2Mw==", "user": {"login": "colesbury", "id": 655866, "node_id": "MDQ6VXNlcjY1NTg2Ng==", "avatar_url": "https://avatars1.githubusercontent.com/u/655866?v=4", "gravatar_id": "", "url": "https://api.github.com/users/colesbury", "html_url": "https://github.com/colesbury", "followers_url": "https://api.github.com/users/colesbury/followers", "following_url": "https://api.github.com/users/colesbury/following{/other_user}", "gists_url": "https://api.github.com/users/colesbury/gists{/gist_id}", "starred_url": "https://api.github.com/users/colesbury/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/colesbury/subscriptions", "organizations_url": "https://api.github.com/users/colesbury/orgs", "repos_url": "https://api.github.com/users/colesbury/repos", "events_url": "https://api.github.com/users/colesbury/events{/privacy}", "received_events_url": "https://api.github.com/users/colesbury/received_events", "type": "User", "site_admin": false}, "created_at": "2018-08-16T19:37:42Z", "updated_at": "2018-08-16T19:37:42Z", "author_association": "MEMBER", "body_html": "<p><a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=1032377\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/zasdfgbnm\">@zasdfgbnm</a> I think the special case you suggest might work. You would also need to check that <code>indices[0].sizes() == self.sizes()</code> since advanced indexing handles broadcasting but masked_select does not.</p>", "body_text": "@zasdfgbnm I think the special case you suggest might work. You would also need to check that indices[0].sizes() == self.sizes() since advanced indexing handles broadcasting but masked_select does not.", "body": "@zasdfgbnm I think the special case you suggest might work. You would also need to check that `indices[0].sizes() == self.sizes()` since advanced indexing handles broadcasting but masked_select does not."}