{"url": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/209030552", "pull_request_review_id": 144964648, "id": 209030552, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwOTAzMDU1Mg==", "diff_hunk": "@@ -142,21 +141,21 @@ static Tensor unsqueezeN(const Tensor & src, int64_t before, int64_t after) {\n   return src.view(sizes);\n }\n \n-static Tensor wrapIndexOnce(const Tensor & index, int64_t dim, int64_t dim_size) {\n-  if (index.numel() != 0) {\n-    auto max_idx = index.max().toCLong();\n-    auto min_idx = index.min().toCLong();\n+Tensor _wrap_index_once(const Tensor & self, int64_t dim, int64_t dim_size) {\n+  if (self.numel() != 0) {\n+    auto max_idx = self.max().toCLong();\n+    auto min_idx = self.min().toCLong();\n     if (max_idx >= dim_size) {\n       AT_ERROR(\"index \", max_idx, \" is out of bounds for dimension \", dim, \" with size \", dim_size);\n     }\n     if (min_idx < -dim_size) {\n       AT_ERROR(\"index \", min_idx, \" is out of bounds for dimension \", dim, \" with size \", dim_size);\n     }\n   }\n-  return index.remainder(dim_size);\n+  return self.remainder(dim_size);\n }\n \n-static Tensor computeLinearIndex(const Tensor & src, TensorList indices) {\n+static Tensor computeLinearIndex(const Tensor & src, std::vector<std::tuple<Tensor, bool>> indices) {", "path": "aten/src/ATen/native/Indexing.cpp", "position": null, "original_position": 112, "commit_id": "7f57acc1f15f4f80b5d6f73cd4576cc40efcffeb", "original_commit_id": "04b3fb37d1b4866e06093c627075a90b04b682f8", "user": {"login": "goldsborough", "id": 6429851, "node_id": "MDQ6VXNlcjY0Mjk4NTE=", "avatar_url": "https://avatars3.githubusercontent.com/u/6429851?v=4", "gravatar_id": "", "url": "https://api.github.com/users/goldsborough", "html_url": "https://github.com/goldsborough", "followers_url": "https://api.github.com/users/goldsborough/followers", "following_url": "https://api.github.com/users/goldsborough/following{/other_user}", "gists_url": "https://api.github.com/users/goldsborough/gists{/gist_id}", "starred_url": "https://api.github.com/users/goldsborough/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/goldsborough/subscriptions", "organizations_url": "https://api.github.com/users/goldsborough/orgs", "repos_url": "https://api.github.com/users/goldsborough/repos", "events_url": "https://api.github.com/users/goldsborough/events{/privacy}", "received_events_url": "https://api.github.com/users/goldsborough/received_events", "type": "User", "site_admin": false}, "body": "copying argument", "created_at": "2018-08-09T18:17:35Z", "updated_at": "2018-11-23T15:49:02Z", "html_url": "https://github.com/pytorch/pytorch/pull/10378#discussion_r209030552", "pull_request_url": "https://api.github.com/repos/pytorch/pytorch/pulls/10378", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/209030552"}, "html": {"href": "https://github.com/pytorch/pytorch/pull/10378#discussion_r209030552"}, "pull_request": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/10378"}}, "body_html": "<p>copying argument</p>", "body_text": "copying argument"}