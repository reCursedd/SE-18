{"url": "https://api.github.com/repos/pytorch/pytorch/issues/comments/412593171", "html_url": "https://github.com/pytorch/pytorch/pull/10466#issuecomment-412593171", "issue_url": "https://api.github.com/repos/pytorch/pytorch/issues/10466", "id": 412593171, "node_id": "MDEyOklzc3VlQ29tbWVudDQxMjU5MzE3MQ==", "user": {"login": "zdevito", "id": 370202, "node_id": "MDQ6VXNlcjM3MDIwMg==", "avatar_url": "https://avatars0.githubusercontent.com/u/370202?v=4", "gravatar_id": "", "url": "https://api.github.com/users/zdevito", "html_url": "https://github.com/zdevito", "followers_url": "https://api.github.com/users/zdevito/followers", "following_url": "https://api.github.com/users/zdevito/following{/other_user}", "gists_url": "https://api.github.com/users/zdevito/gists{/gist_id}", "starred_url": "https://api.github.com/users/zdevito/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/zdevito/subscriptions", "organizations_url": "https://api.github.com/users/zdevito/orgs", "repos_url": "https://api.github.com/users/zdevito/repos", "events_url": "https://api.github.com/users/zdevito/events{/privacy}", "received_events_url": "https://api.github.com/users/zdevito/received_events", "type": "User", "site_admin": false}, "created_at": "2018-08-13T17:11:35Z", "updated_at": "2018-08-13T17:11:35Z", "author_association": "CONTRIBUTOR", "body_html": "<p>This is a regression introduced with prim::FusionConcat. It used to be the case that isFusible was false for cat nodes, and only true for isFusableAsExitNode. The purpose of isFusableAsExitNode was to check for this case. Right now it looks like prim::FusionConcat is considered fusible and then extra code is added to shouldFuse to stop it. This is confusing because it handles the case for prim::FusionConcat differently than for aten::cat which is handled by isFusibleAsExitNode. Is it possible to unify these two cases?</p>", "body_text": "This is a regression introduced with prim::FusionConcat. It used to be the case that isFusible was false for cat nodes, and only true for isFusableAsExitNode. The purpose of isFusableAsExitNode was to check for this case. Right now it looks like prim::FusionConcat is considered fusible and then extra code is added to shouldFuse to stop it. This is confusing because it handles the case for prim::FusionConcat differently than for aten::cat which is handled by isFusibleAsExitNode. Is it possible to unify these two cases?", "body": "This is a regression introduced with prim::FusionConcat. It used to be the case that isFusible was false for cat nodes, and only true for isFusableAsExitNode. The purpose of isFusableAsExitNode was to check for this case. Right now it looks like prim::FusionConcat is considered fusible and then extra code is added to shouldFuse to stop it. This is confusing because it handles the case for prim::FusionConcat differently than for aten::cat which is handled by isFusibleAsExitNode. Is it possible to unify these two cases?"}