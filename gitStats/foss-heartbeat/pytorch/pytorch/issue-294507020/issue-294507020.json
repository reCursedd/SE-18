{"url": "https://api.github.com/repos/pytorch/pytorch/issues/5058", "repository_url": "https://api.github.com/repos/pytorch/pytorch", "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/5058/labels{/name}", "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/5058/comments", "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/5058/events", "html_url": "https://github.com/pytorch/pytorch/pull/5058", "id": 294507020, "node_id": "MDExOlB1bGxSZXF1ZXN0MTY3MjI4MzE2", "number": 5058, "title": "Run test_nn criterion tests over Variables, add a scalar test", "user": {"login": "gchanan", "id": 3768583, "node_id": "MDQ6VXNlcjM3Njg1ODM=", "avatar_url": "https://avatars2.githubusercontent.com/u/3768583?v=4", "gravatar_id": "", "url": "https://api.github.com/users/gchanan", "html_url": "https://github.com/gchanan", "followers_url": "https://api.github.com/users/gchanan/followers", "following_url": "https://api.github.com/users/gchanan/following{/other_user}", "gists_url": "https://api.github.com/users/gchanan/gists{/gist_id}", "starred_url": "https://api.github.com/users/gchanan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/gchanan/subscriptions", "organizations_url": "https://api.github.com/users/gchanan/orgs", "repos_url": "https://api.github.com/users/gchanan/repos", "events_url": "https://api.github.com/users/gchanan/events{/privacy}", "received_events_url": "https://api.github.com/users/gchanan/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2018-02-05T19:06:06Z", "updated_at": "2018-02-06T16:11:18Z", "closed_at": "2018-02-06T16:11:18Z", "author_association": "CONTRIBUTOR", "pull_request": {"url": "https://api.github.com/repos/pytorch/pytorch/pulls/5058", "html_url": "https://github.com/pytorch/pytorch/pull/5058", "diff_url": "https://github.com/pytorch/pytorch/pull/5058.diff", "patch_url": "https://github.com/pytorch/pytorch/pull/5058.patch"}, "body_html": "<p>The main change here is that instead of (possibly) creating module arguments as tensors, we create them as Variables; this is necessary to add scalar tests because there is no way to create a scalar tensor.</p>\n<p>In legacy_nn we immediately unpack these Variables, so there should be no change in behavior there.  In test_nn we operate on Variables, so there are some minor changes that should be needed for merging variable and tensor anyway.  There are some minor hacks for dealing with tensors in legacy_nn, but those should be able to go away soon.</p>\n<p>This also fixes a few issues with Criterion tests when scalars are enabled; the HingeEmbedding tests still fail because of some details of python autograd Functions; I'll look to see if it can be easily moved to ATen, otherwise we might have to wait for variables and tensors to merged to get it to pass.</p>", "body_text": "The main change here is that instead of (possibly) creating module arguments as tensors, we create them as Variables; this is necessary to add scalar tests because there is no way to create a scalar tensor.\nIn legacy_nn we immediately unpack these Variables, so there should be no change in behavior there.  In test_nn we operate on Variables, so there are some minor changes that should be needed for merging variable and tensor anyway.  There are some minor hacks for dealing with tensors in legacy_nn, but those should be able to go away soon.\nThis also fixes a few issues with Criterion tests when scalars are enabled; the HingeEmbedding tests still fail because of some details of python autograd Functions; I'll look to see if it can be easily moved to ATen, otherwise we might have to wait for variables and tensors to merged to get it to pass.", "body": "The main change here is that instead of (possibly) creating module arguments as tensors, we create them as Variables; this is necessary to add scalar tests because there is no way to create a scalar tensor.\r\n\r\nIn legacy_nn we immediately unpack these Variables, so there should be no change in behavior there.  In test_nn we operate on Variables, so there are some minor changes that should be needed for merging variable and tensor anyway.  There are some minor hacks for dealing with tensors in legacy_nn, but those should be able to go away soon.\r\n\r\nThis also fixes a few issues with Criterion tests when scalars are enabled; the HingeEmbedding tests still fail because of some details of python autograd Functions; I'll look to see if it can be easily moved to ATen, otherwise we might have to wait for variables and tensors to merged to get it to pass."}