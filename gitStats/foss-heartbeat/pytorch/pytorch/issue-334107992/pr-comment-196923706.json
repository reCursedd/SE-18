{"url": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/196923706", "pull_request_review_id": 130566006, "id": 196923706, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5NjkyMzcwNg==", "diff_hunk": "@@ -274,6 +274,32 @@ def emit_decl(decl):\n         for variant in {all_real_arguments_are_inputs, only_tensors_are_inputs}:\n             emit_decl_variant(decl, variant, has_tensorlist)\n \n+    # This function declares an order on declarations. This is necessary because", "path": "tools/jit/gen_jit_dispatch.py", "position": 12, "original_position": 12, "commit_id": "5eda0ceda38ead73ca63cfaf60091a2d55c6eef0", "original_commit_id": "416c80cde11c348807ca5d62140f18dcbaa6a296", "user": {"login": "zou3519", "id": 5652049, "node_id": "MDQ6VXNlcjU2NTIwNDk=", "avatar_url": "https://avatars3.githubusercontent.com/u/5652049?v=4", "gravatar_id": "", "url": "https://api.github.com/users/zou3519", "html_url": "https://github.com/zou3519", "followers_url": "https://api.github.com/users/zou3519/followers", "following_url": "https://api.github.com/users/zou3519/following{/other_user}", "gists_url": "https://api.github.com/users/zou3519/gists{/gist_id}", "starred_url": "https://api.github.com/users/zou3519/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/zou3519/subscriptions", "organizations_url": "https://api.github.com/users/zou3519/orgs", "repos_url": "https://api.github.com/users/zou3519/repos", "events_url": "https://api.github.com/users/zou3519/events{/privacy}", "received_events_url": "https://api.github.com/users/zou3519/received_events", "type": "User", "site_admin": false}, "body": "Most likely yes. There's an edge case that I'm worried about (pytorch allows one to pass in a scalar tensor as both a Scalar and Tensor argument, and if we allow that too in jit script the ordering will matter), but I think Sam is working on getting rid of overloads like this. I'll make a note here.", "created_at": "2018-06-20T20:01:54Z", "updated_at": "2018-11-23T15:45:55Z", "html_url": "https://github.com/pytorch/pytorch/pull/8687#discussion_r196923706", "pull_request_url": "https://api.github.com/repos/pytorch/pytorch/pulls/8687", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/196923706"}, "html": {"href": "https://github.com/pytorch/pytorch/pull/8687#discussion_r196923706"}, "pull_request": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/8687"}}, "body_html": "<p>Most likely yes. There's an edge case that I'm worried about (pytorch allows one to pass in a scalar tensor as both a Scalar and Tensor argument, and if we allow that too in jit script the ordering will matter), but I think Sam is working on getting rid of overloads like this. I'll make a note here.</p>", "body_text": "Most likely yes. There's an edge case that I'm worried about (pytorch allows one to pass in a scalar tensor as both a Scalar and Tensor argument, and if we allow that too in jit script the ordering will matter), but I think Sam is working on getting rid of overloads like this. I'll make a note here.", "in_reply_to_id": 196895257}