{"url": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/196929230", "pull_request_review_id": 130572893, "id": 196929230, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5NjkyOTIzMA==", "diff_hunk": "@@ -3639,6 +3808,14 @@ def forward(self, x, y):\n     'test_clamp_max_scalar',\n     'test_clamp_min',\n     'test_clamp_min_scalar',\n+    'test_std_dim',\n+    'test_std_dim_1d',\n+    'test_std_dim_1d_neg0',\n+    'test_std_dim_neg0',\n+    'test_var_dim',\n+    'test_var_dim_1d',\n+    'test_var_dim_1d_neg0',\n+    'test_var_dim_neg0',", "path": "test/test_jit.py", "position": 582, "original_position": 424, "commit_id": "5eda0ceda38ead73ca63cfaf60091a2d55c6eef0", "original_commit_id": "416c80cde11c348807ca5d62140f18dcbaa6a296", "user": {"login": "zou3519", "id": 5652049, "node_id": "MDQ6VXNlcjU2NTIwNDk=", "avatar_url": "https://avatars3.githubusercontent.com/u/5652049?v=4", "gravatar_id": "", "url": "https://api.github.com/users/zou3519", "html_url": "https://github.com/zou3519", "followers_url": "https://api.github.com/users/zou3519/followers", "following_url": "https://api.github.com/users/zou3519/following{/other_user}", "gists_url": "https://api.github.com/users/zou3519/gists{/gist_id}", "starred_url": "https://api.github.com/users/zou3519/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/zou3519/subscriptions", "organizations_url": "https://api.github.com/users/zou3519/orgs", "repos_url": "https://api.github.com/users/zou3519/repos", "events_url": "https://api.github.com/users/zou3519/events{/privacy}", "received_events_url": "https://api.github.com/users/zou3519/received_events", "type": "User", "site_admin": false}, "body": "I think what's going is the following:\r\n\r\nthere are two schemas for `var`: (* means that after this point everything is a kwarg).\r\n(1) var(Tensor, int, *, bool, bool, Tensor)\r\n(2) var(Tensor, *, bool)\r\n\r\n(1) used to come before (2) in aten_schema.cpp. [I haven't verified this yet, but the other case, (2) coming before (1), doesn't make sense to me]\r\n\r\nI made the following changes to schemas:\r\n- Shorter schemas come before longer schemas\r\n- bool, int are treated as IntType rather than DynamicType like before\r\n\r\nSo the schemas look like the following in aten_schema:\r\n(2) var(DynamicType, IntType)\r\n(1) var(DynamicType, IntType, IntType, DynamicType)\r\nNow, when you call `torch.var(tensor, dim=1)`, the compiler mistakingly matches it with (2) instead of (1), which is a problem.\r\n\r\nI'll put a comment in the code with this (and think about if I can fix this quickly or not)\r\n", "created_at": "2018-06-20T20:21:20Z", "updated_at": "2018-11-23T15:45:56Z", "html_url": "https://github.com/pytorch/pytorch/pull/8687#discussion_r196929230", "pull_request_url": "https://api.github.com/repos/pytorch/pytorch/pulls/8687", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/196929230"}, "html": {"href": "https://github.com/pytorch/pytorch/pull/8687#discussion_r196929230"}, "pull_request": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/8687"}}, "body_html": "<p>I think what's going is the following:</p>\n<p>there are two schemas for <code>var</code>: (* means that after this point everything is a kwarg).<br>\n(1) var(Tensor, int, *, bool, bool, Tensor)<br>\n(2) var(Tensor, *, bool)</p>\n<p>(1) used to come before (2) in aten_schema.cpp. [I haven't verified this yet, but the other case, (2) coming before (1), doesn't make sense to me]</p>\n<p>I made the following changes to schemas:</p>\n<ul>\n<li>Shorter schemas come before longer schemas</li>\n<li>bool, int are treated as IntType rather than DynamicType like before</li>\n</ul>\n<p>So the schemas look like the following in aten_schema:<br>\n(2) var(DynamicType, IntType)<br>\n(1) var(DynamicType, IntType, IntType, DynamicType)<br>\nNow, when you call <code>torch.var(tensor, dim=1)</code>, the compiler mistakingly matches it with (2) instead of (1), which is a problem.</p>\n<p>I'll put a comment in the code with this (and think about if I can fix this quickly or not)</p>", "body_text": "I think what's going is the following:\nthere are two schemas for var: (* means that after this point everything is a kwarg).\n(1) var(Tensor, int, *, bool, bool, Tensor)\n(2) var(Tensor, *, bool)\n(1) used to come before (2) in aten_schema.cpp. [I haven't verified this yet, but the other case, (2) coming before (1), doesn't make sense to me]\nI made the following changes to schemas:\n\nShorter schemas come before longer schemas\nbool, int are treated as IntType rather than DynamicType like before\n\nSo the schemas look like the following in aten_schema:\n(2) var(DynamicType, IntType)\n(1) var(DynamicType, IntType, IntType, DynamicType)\nNow, when you call torch.var(tensor, dim=1), the compiler mistakingly matches it with (2) instead of (1), which is a problem.\nI'll put a comment in the code with this (and think about if I can fix this quickly or not)", "in_reply_to_id": 196924136}