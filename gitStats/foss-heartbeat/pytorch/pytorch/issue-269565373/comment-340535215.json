{"url": "https://api.github.com/repos/pytorch/pytorch/issues/comments/340535215", "html_url": "https://github.com/pytorch/pytorch/issues/3364#issuecomment-340535215", "issue_url": "https://api.github.com/repos/pytorch/pytorch/issues/3364", "id": 340535215, "node_id": "MDEyOklzc3VlQ29tbWVudDM0MDUzNTIxNQ==", "user": {"login": "apaszke", "id": 4583066, "node_id": "MDQ6VXNlcjQ1ODMwNjY=", "avatar_url": "https://avatars3.githubusercontent.com/u/4583066?v=4", "gravatar_id": "", "url": "https://api.github.com/users/apaszke", "html_url": "https://github.com/apaszke", "followers_url": "https://api.github.com/users/apaszke/followers", "following_url": "https://api.github.com/users/apaszke/following{/other_user}", "gists_url": "https://api.github.com/users/apaszke/gists{/gist_id}", "starred_url": "https://api.github.com/users/apaszke/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/apaszke/subscriptions", "organizations_url": "https://api.github.com/users/apaszke/orgs", "repos_url": "https://api.github.com/users/apaszke/repos", "events_url": "https://api.github.com/users/apaszke/events{/privacy}", "received_events_url": "https://api.github.com/users/apaszke/received_events", "type": "User", "site_admin": false}, "created_at": "2017-10-30T18:11:28Z", "updated_at": "2017-10-30T18:11:28Z", "author_association": "MEMBER", "body_html": "<p>So I guess the reasoning is that while Bernoulli sampling output can be always safely represented as a <code>float</code>, it's no longer true for <code>multinomial</code> if you have many classes. On the other hand, we don't have operators overloaded for cross-type ops, so returning a <code>LongTensor</code> would likely require a cast afterwards if someone wanted to use the value in the model code (which pretty much always uses <code>float</code>).</p>", "body_text": "So I guess the reasoning is that while Bernoulli sampling output can be always safely represented as a float, it's no longer true for multinomial if you have many classes. On the other hand, we don't have operators overloaded for cross-type ops, so returning a LongTensor would likely require a cast afterwards if someone wanted to use the value in the model code (which pretty much always uses float).", "body": "So I guess the reasoning is that while Bernoulli sampling output can be always safely represented as a `float`, it's no longer true for `multinomial` if you have many classes. On the other hand, we don't have operators overloaded for cross-type ops, so returning a `LongTensor` would likely require a cast afterwards if someone wanted to use the value in the model code (which pretty much always uses `float`)."}