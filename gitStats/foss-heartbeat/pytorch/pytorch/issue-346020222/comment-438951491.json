{"url": "https://api.github.com/repos/pytorch/pytorch/issues/comments/438951491", "html_url": "https://github.com/pytorch/pytorch/issues/10050#issuecomment-438951491", "issue_url": "https://api.github.com/repos/pytorch/pytorch/issues/10050", "id": 438951491, "node_id": "MDEyOklzc3VlQ29tbWVudDQzODk1MTQ5MQ==", "user": {"login": "iNLyze", "id": 8356146, "node_id": "MDQ6VXNlcjgzNTYxNDY=", "avatar_url": "https://avatars3.githubusercontent.com/u/8356146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/iNLyze", "html_url": "https://github.com/iNLyze", "followers_url": "https://api.github.com/users/iNLyze/followers", "following_url": "https://api.github.com/users/iNLyze/following{/other_user}", "gists_url": "https://api.github.com/users/iNLyze/gists{/gist_id}", "starred_url": "https://api.github.com/users/iNLyze/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/iNLyze/subscriptions", "organizations_url": "https://api.github.com/users/iNLyze/orgs", "repos_url": "https://api.github.com/users/iNLyze/repos", "events_url": "https://api.github.com/users/iNLyze/events{/privacy}", "received_events_url": "https://api.github.com/users/iNLyze/received_events", "type": "User", "site_admin": false}, "created_at": "2018-11-15T08:03:01Z", "updated_at": "2018-11-15T08:03:01Z", "author_association": "NONE", "body_html": "<p><a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=2877531\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/tengyifei\">@tengyifei</a> , could you elaborate on how you roll your own version? I tried</p>\n<div class=\"highlight highlight-source-python\"><pre><span class=\"pl-k\">class</span> <span class=\"pl-en\">ELU</span>(<span class=\"pl-e\">nn</span>.<span class=\"pl-c1\">ELU</span>):\n    <span class=\"pl-k\">def</span> <span class=\"pl-c1\">__init__</span>(<span class=\"pl-smi\"><span class=\"pl-smi\">self</span></span>, <span class=\"pl-smi\">alpha</span><span class=\"pl-k\">=</span><span class=\"pl-c1\">1</span>., <span class=\"pl-smi\">inplace</span><span class=\"pl-k\">=</span><span class=\"pl-c1\">False</span>, <span class=\"pl-smi\">scale</span><span class=\"pl-k\">=</span><span class=\"pl-c1\">1</span>.):\n        <span class=\"pl-c1\">super</span>(nn.<span class=\"pl-c1\">ELU</span>, <span class=\"pl-c1\">self</span>).<span class=\"pl-c1\">__init__</span>()\n        <span class=\"pl-c1\">self</span>.alpha<span class=\"pl-k\">=</span>alpha\n        <span class=\"pl-c1\">self</span>.inplace<span class=\"pl-k\">=</span>inplace\n        <span class=\"pl-c1\">self</span>.scale<span class=\"pl-k\">=</span>scale</pre></div>\n<p>but it did not help.</p>", "body_text": "@tengyifei , could you elaborate on how you roll your own version? I tried\nclass ELU(nn.ELU):\n    def __init__(self, alpha=1., inplace=False, scale=1.):\n        super(nn.ELU, self).__init__()\n        self.alpha=alpha\n        self.inplace=inplace\n        self.scale=scale\nbut it did not help.", "body": "@tengyifei , could you elaborate on how you roll your own version? I tried\r\n\r\n```python\r\nclass ELU(nn.ELU):\r\n    def __init__(self, alpha=1., inplace=False, scale=1.):\r\n        super(nn.ELU, self).__init__()\r\n        self.alpha=alpha\r\n        self.inplace=inplace\r\n        self.scale=scale\r\n```\r\nbut it did not help. "}