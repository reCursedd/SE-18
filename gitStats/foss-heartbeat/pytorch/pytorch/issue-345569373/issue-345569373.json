{"url": "https://api.github.com/repos/pytorch/pytorch/issues/9997", "repository_url": "https://api.github.com/repos/pytorch/pytorch", "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/9997/labels{/name}", "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/9997/comments", "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/9997/events", "html_url": "https://github.com/pytorch/pytorch/issues/9997", "id": 345569373, "node_id": "MDU6SXNzdWUzNDU1NjkzNzM=", "number": 9997, "title": "[feature request] unique to work on nd tensors via dim arg", "user": {"login": "alicanb", "id": 1093846, "node_id": "MDQ6VXNlcjEwOTM4NDY=", "avatar_url": "https://avatars2.githubusercontent.com/u/1093846?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alicanb", "html_url": "https://github.com/alicanb", "followers_url": "https://api.github.com/users/alicanb/followers", "following_url": "https://api.github.com/users/alicanb/following{/other_user}", "gists_url": "https://api.github.com/users/alicanb/gists{/gist_id}", "starred_url": "https://api.github.com/users/alicanb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alicanb/subscriptions", "organizations_url": "https://api.github.com/users/alicanb/orgs", "repos_url": "https://api.github.com/users/alicanb/repos", "events_url": "https://api.github.com/users/alicanb/events{/privacy}", "received_events_url": "https://api.github.com/users/alicanb/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 443483881, "node_id": "MDU6TGFiZWw0NDM0ODM4ODE=", "url": "https://api.github.com/repos/pytorch/pytorch/labels/todo", "name": "todo", "color": "c2e0c6", "default": false}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 8, "created_at": "2018-07-29T22:45:06Z", "updated_at": "2018-09-01T16:31:22Z", "closed_at": "2018-09-01T16:31:22Z", "author_association": "CONTRIBUTOR", "body_html": "<p>Can we have <code>unique</code> to return unique rows and cols as well, similar to <code>numpy.unique</code>? Example usage to give an idea:</p>\n<pre><code>&gt;&gt;&gt; a = torch.tensor([[1, 0, 0], [1, 0, 0], [2, 3, 3]])\n&gt;&gt;&gt; torch.unique(a)\ntensor([0, 1, 2, 3])\n&gt;&gt;&gt; torch.unique(a, dim=0)\ntensor([[1, 0, 0], [2, 3, 3]])\n&gt;&gt;&gt; torch.unique(a, dim=1)\ntensor([[1, 0], [1, 0], [2, 3]])\n</code></pre>", "body_text": "Can we have unique to return unique rows and cols as well, similar to numpy.unique? Example usage to give an idea:\n>>> a = torch.tensor([[1, 0, 0], [1, 0, 0], [2, 3, 3]])\n>>> torch.unique(a)\ntensor([0, 1, 2, 3])\n>>> torch.unique(a, dim=0)\ntensor([[1, 0, 0], [2, 3, 3]])\n>>> torch.unique(a, dim=1)\ntensor([[1, 0], [1, 0], [2, 3]])", "body": "Can we have `unique` to return unique rows and cols as well, similar to `numpy.unique`? Example usage to give an idea:\r\n```\r\n>>> a = torch.tensor([[1, 0, 0], [1, 0, 0], [2, 3, 3]])\r\n>>> torch.unique(a)\r\ntensor([0, 1, 2, 3])\r\n>>> torch.unique(a, dim=0)\r\ntensor([[1, 0, 0], [2, 3, 3]])\r\n>>> torch.unique(a, dim=1)\r\ntensor([[1, 0], [1, 0], [2, 3]])\r\n```"}