{"url": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/160185855", "pull_request_review_id": 87257121, "id": 160185855, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE2MDE4NTg1NQ==", "diff_hunk": "@@ -158,6 +158,47 @@ def f(x, y):\n         trace, z = torch.jit.trace(f, (x, y), nderivs=0)\n         self.assertExpectedTrace(trace)\n \n+        class Net(nn.Module):\n+            def forward(self, x):\n+                return F.log_softmax(x, dim=0)\n+\n+        net = Net()\n+        t = Variable(torch.ones(2), requires_grad=True)\n+        trace, _ = torch.jit.trace(net, (t, ))\n+        torch.onnx._optimize_trace(trace, False)\n+        g = torch._C._jit_get_graph(trace)\n+        for node in g.nodes():\n+            self.assertTrue(node.scopeName() == 'Net')\n+\n+        class Net(nn.Module):\n+\n+            def __init__(self):\n+                super(Net, self).__init__()\n+                self.features = nn.Sequential(\n+                    nn.Conv2d(3, 64, kernel_size=11, stride=4, padding=2),\n+                    nn.ReLU(inplace=True),\n+                    nn.MaxPool2d(kernel_size=3, stride=2),\n+                )\n+\n+            def forward(self, x):\n+                x = self.features(x)\n+                return x\n+\n+        model = Net()\n+\n+        t = Variable(torch.ones(1, 3, 227, 227), requires_grad=True)\n+\n+        with torch.onnx.set_training(model, False):\n+            trace, _ = torch.jit.trace(model, (t, ))\n+\n+        torch.onnx._optimize_trace(trace, False)\n+        graph = torch._C._jit_get_graph(trace)\n+        nodes = list(graph.nodes())\n+\n+        self.assertTrue(nodes[0].scopeName() == 'Net/Sequential[features]/Conv2d[0]')\n+        self.assertTrue(nodes[1].scopeName() == 'Net/Sequential[features]/ReLU[1]')\n+        self.assertTrue(nodes[2].scopeName() == 'Net/Sequential[features]/MaxPool2d[2]')", "path": "test/test_jit.py", "position": 43, "original_position": 43, "commit_id": "cec3c5c8075dc2d67decb7a798e85a6593103843", "original_commit_id": "cec3c5c8075dc2d67decb7a798e85a6593103843", "user": {"login": "ezyang", "id": 13564, "node_id": "MDQ6VXNlcjEzNTY0", "avatar_url": "https://avatars0.githubusercontent.com/u/13564?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ezyang", "html_url": "https://github.com/ezyang", "followers_url": "https://api.github.com/users/ezyang/followers", "following_url": "https://api.github.com/users/ezyang/following{/other_user}", "gists_url": "https://api.github.com/users/ezyang/gists{/gist_id}", "starred_url": "https://api.github.com/users/ezyang/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ezyang/subscriptions", "organizations_url": "https://api.github.com/users/ezyang/orgs", "repos_url": "https://api.github.com/users/ezyang/repos", "events_url": "https://api.github.com/users/ezyang/events{/privacy}", "received_events_url": "https://api.github.com/users/ezyang/received_events", "type": "User", "site_admin": false}, "body": "I wonder why we can't use the expect-testing framework here.", "created_at": "2018-01-08T16:18:31Z", "updated_at": "2018-11-23T15:37:56Z", "html_url": "https://github.com/pytorch/pytorch/pull/4524#discussion_r160185855", "pull_request_url": "https://api.github.com/repos/pytorch/pytorch/pulls/4524", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/160185855"}, "html": {"href": "https://github.com/pytorch/pytorch/pull/4524#discussion_r160185855"}, "pull_request": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/4524"}}, "body_html": "<p>I wonder why we can't use the expect-testing framework here.</p>", "body_text": "I wonder why we can't use the expect-testing framework here."}