{"url": "https://api.github.com/repos/pytorch/pytorch/issues/8891", "repository_url": "https://api.github.com/repos/pytorch/pytorch", "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/8891/labels{/name}", "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/8891/comments", "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/8891/events", "html_url": "https://github.com/pytorch/pytorch/pull/8891", "id": 335661525, "node_id": "MDExOlB1bGxSZXF1ZXN0MTk3MzAzNjkx", "number": 8891, "title": "Fix CMake cuDNN autodetection", "user": {"login": "pietern", "id": 9845, "node_id": "MDQ6VXNlcjk4NDU=", "avatar_url": "https://avatars3.githubusercontent.com/u/9845?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pietern", "html_url": "https://github.com/pietern", "followers_url": "https://api.github.com/users/pietern/followers", "following_url": "https://api.github.com/users/pietern/following{/other_user}", "gists_url": "https://api.github.com/users/pietern/gists{/gist_id}", "starred_url": "https://api.github.com/users/pietern/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pietern/subscriptions", "organizations_url": "https://api.github.com/users/pietern/orgs", "repos_url": "https://api.github.com/users/pietern/repos", "events_url": "https://api.github.com/users/pietern/events{/privacy}", "received_events_url": "https://api.github.com/users/pietern/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 778855555, "node_id": "MDU6TGFiZWw3Nzg4NTU1NTU=", "url": "https://api.github.com/repos/pytorch/pytorch/labels/build", "name": "build", "color": "bfdadc", "default": false}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2018-06-26T05:11:25Z", "updated_at": "2018-06-26T18:35:00Z", "closed_at": "2018-06-26T13:54:27Z", "author_association": "CONTRIBUTOR", "pull_request": {"url": "https://api.github.com/repos/pytorch/pytorch/pulls/8891", "html_url": "https://github.com/pytorch/pytorch/pull/8891", "diff_url": "https://github.com/pytorch/pytorch/pull/8891.diff", "patch_url": "https://github.com/pytorch/pytorch/pull/8891.patch"}, "body_html": "<p>If CUDNN_INCLUDE_DIR, CUDNN_LIB_DIR, and/or CUDNN_ROOT_DIR were set,<br>\nbut USE_CUDNN was not explicitly set, the code in<br>\ncmake/Dependencies.cmake would set USE_CUDNN=OFF even though it could<br>\nbe found. This caused an issue in ATen, where it includes its cuDNN<br>\nbindings if the variable CUDNN_FOUND is set. This was the case,<br>\nbecause the find_package call in cmake/public/cuda.cmake searches for<br>\ncuDNN and ends up finding it. The net result is that ATen tried to<br>\ncompile cuDNN bits, but the caffe2::cudnn target is never defined let<br>\nalone added as dependency, and the build fails on not being able to<br>\nfind the header cudnn.h.</p>\n<p>This change does two things:</p>\n<ol>\n<li>Restore cuDNN autodetection by setting USE_CUDNN=ON if it is found.</li>\n<li>Remove obsolete FindCuDNN.cmake module. This functionality now<br>\nlives in cmake/public/cuda.cmake.</li>\n</ol>", "body_text": "If CUDNN_INCLUDE_DIR, CUDNN_LIB_DIR, and/or CUDNN_ROOT_DIR were set,\nbut USE_CUDNN was not explicitly set, the code in\ncmake/Dependencies.cmake would set USE_CUDNN=OFF even though it could\nbe found. This caused an issue in ATen, where it includes its cuDNN\nbindings if the variable CUDNN_FOUND is set. This was the case,\nbecause the find_package call in cmake/public/cuda.cmake searches for\ncuDNN and ends up finding it. The net result is that ATen tried to\ncompile cuDNN bits, but the caffe2::cudnn target is never defined let\nalone added as dependency, and the build fails on not being able to\nfind the header cudnn.h.\nThis change does two things:\n\nRestore cuDNN autodetection by setting USE_CUDNN=ON if it is found.\nRemove obsolete FindCuDNN.cmake module. This functionality now\nlives in cmake/public/cuda.cmake.", "body": "If CUDNN_INCLUDE_DIR, CUDNN_LIB_DIR, and/or CUDNN_ROOT_DIR were set,\r\nbut USE_CUDNN was not explicitly set, the code in\r\ncmake/Dependencies.cmake would set USE_CUDNN=OFF even though it could\r\nbe found. This caused an issue in ATen, where it includes its cuDNN\r\nbindings if the variable CUDNN_FOUND is set. This was the case,\r\nbecause the find_package call in cmake/public/cuda.cmake searches for\r\ncuDNN and ends up finding it. The net result is that ATen tried to\r\ncompile cuDNN bits, but the caffe2::cudnn target is never defined let\r\nalone added as dependency, and the build fails on not being able to\r\nfind the header cudnn.h.\r\n\r\nThis change does two things:\r\n\r\n1) Restore cuDNN autodetection by setting USE_CUDNN=ON if it is found.\r\n2) Remove obsolete FindCuDNN.cmake module. This functionality now\r\nlives in cmake/public/cuda.cmake.\r\n\r\n"}