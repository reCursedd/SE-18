{"url": "https://api.github.com/repos/pytorch/pytorch/issues/14329", "repository_url": "https://api.github.com/repos/pytorch/pytorch", "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/14329/labels{/name}", "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/14329/comments", "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/14329/events", "html_url": "https://github.com/pytorch/pytorch/issues/14329", "id": 383677496, "node_id": "MDU6SXNzdWUzODM2Nzc0OTY=", "number": 14329, "title": "DataParallel with distributions", "user": {"login": "kamenbliznashki", "id": 28743615, "node_id": "MDQ6VXNlcjI4NzQzNjE1", "avatar_url": "https://avatars3.githubusercontent.com/u/28743615?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kamenbliznashki", "html_url": "https://github.com/kamenbliznashki", "followers_url": "https://api.github.com/users/kamenbliznashki/followers", "following_url": "https://api.github.com/users/kamenbliznashki/following{/other_user}", "gists_url": "https://api.github.com/users/kamenbliznashki/gists{/gist_id}", "starred_url": "https://api.github.com/users/kamenbliznashki/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kamenbliznashki/subscriptions", "organizations_url": "https://api.github.com/users/kamenbliznashki/orgs", "repos_url": "https://api.github.com/users/kamenbliznashki/repos", "events_url": "https://api.github.com/users/kamenbliznashki/events{/privacy}", "received_events_url": "https://api.github.com/users/kamenbliznashki/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-11-23T00:30:54Z", "updated_at": "2018-11-23T15:52:36Z", "closed_at": "2018-11-23T15:52:36Z", "author_association": "NONE", "body_html": "<p>DataParallel throws a \"zip argument must support iteration\" error when the model forward returns a torch.distirbution e.g if model returns a Bernoulli and I'd like to call log_prob(inputs) to calculate my loss function.</p>\n<p>Is there a work around without having to drop using the distributions module?</p>", "body_text": "DataParallel throws a \"zip argument must support iteration\" error when the model forward returns a torch.distirbution e.g if model returns a Bernoulli and I'd like to call log_prob(inputs) to calculate my loss function.\nIs there a work around without having to drop using the distributions module?", "body": "DataParallel throws a \"zip argument must support iteration\" error when the model forward returns a torch.distirbution e.g if model returns a Bernoulli and I'd like to call log_prob(inputs) to calculate my loss function. \r\n\r\nIs there a work around without having to drop using the distributions module?"}