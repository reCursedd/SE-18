{"url": "https://api.github.com/repos/pytorch/pytorch/issues/comments/430815843", "html_url": "https://github.com/pytorch/pytorch/issues/12633#issuecomment-430815843", "issue_url": "https://api.github.com/repos/pytorch/pytorch/issues/12633", "id": 430815843, "node_id": "MDEyOklzc3VlQ29tbWVudDQzMDgxNTg0Mw==", "user": {"login": "SsnL", "id": 5674597, "node_id": "MDQ6VXNlcjU2NzQ1OTc=", "avatar_url": "https://avatars2.githubusercontent.com/u/5674597?v=4", "gravatar_id": "", "url": "https://api.github.com/users/SsnL", "html_url": "https://github.com/SsnL", "followers_url": "https://api.github.com/users/SsnL/followers", "following_url": "https://api.github.com/users/SsnL/following{/other_user}", "gists_url": "https://api.github.com/users/SsnL/gists{/gist_id}", "starred_url": "https://api.github.com/users/SsnL/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/SsnL/subscriptions", "organizations_url": "https://api.github.com/users/SsnL/orgs", "repos_url": "https://api.github.com/users/SsnL/repos", "events_url": "https://api.github.com/users/SsnL/events{/privacy}", "received_events_url": "https://api.github.com/users/SsnL/received_events", "type": "User", "site_admin": false}, "created_at": "2018-10-17T22:47:49Z", "updated_at": "2018-10-17T22:47:49Z", "author_association": "CONTRIBUTOR", "body_html": "<div class=\"email-fragment\">FWIW, set_coalesced is becoming _coalesced_, a part of the unsafe\nuse-at-your-own-discretion API.</div>\n<span class=\"email-hidden-toggle\"><a href=\"#\">\u2026</a></span><div class=\"email-hidden-reply\">\n<div class=\"email-quoted-reply\">On Wed, Oct 17, 2018 at 18:03 Wei Yang ***@***.***&gt; wrote:\n If we want to keep set_coalesced(), can we have is_coalesced() explicitly\n check if the indices is both unique and sorted? We should be able to\n parallelize it in both of CPU and CUDA by checking left and right neighbors\n for each index.\n <a class=\"user-mention\" href=\"https://github.com/ezyang\">@ezyang</a> &lt;<a href=\"https://github.com/ezyang\">https://github.com/ezyang</a>&gt; <a class=\"user-mention\" href=\"https://github.com/SsnL\">@SsnL</a> &lt;<a href=\"https://github.com/SsnL\">https://github.com/SsnL</a>&gt;\n <a class=\"user-mention\" href=\"https://github.com/zou3519\">@zou3519</a> &lt;<a href=\"https://github.com/zou3519\">https://github.com/zou3519</a>&gt;\n\n \u2014\n You are receiving this because you were mentioned.\n Reply to this email directly, view it on GitHub\n &lt;<a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load issue title\" data-id=\"369906943\" data-permission-text=\"Issue title is private\" data-url=\"https://github.com/pytorch/pytorch/issues/12633\" href=\"https://github.com/pytorch/pytorch/issues/12633#issuecomment-430805634\">#12633 (comment)</a>&gt;,\n or mute the thread\n &lt;<a href=\"https://github.com/notifications/unsubscribe-auth/AFaWZXuMX8_mmb6SQ6s7FNnE1EP_vUr_ks5ul6kqgaJpZM4XbJmu\">https://github.com/notifications/unsubscribe-auth/AFaWZXuMX8_mmb6SQ6s7FNnE1EP_vUr_ks5ul6kqgaJpZM4XbJmu</a>&gt;\n .\n</div>\n<div class=\"email-fragment\"></div>\n</div>", "body_text": "FWIW, set_coalesced is becoming _coalesced_, a part of the unsafe\nuse-at-your-own-discretion API.\n\u2026\nOn Wed, Oct 17, 2018 at 18:03 Wei Yang ***@***.***> wrote:\n If we want to keep set_coalesced(), can we have is_coalesced() explicitly\n check if the indices is both unique and sorted? We should be able to\n parallelize it in both of CPU and CUDA by checking left and right neighbors\n for each index.\n @ezyang <https://github.com/ezyang> @SsnL <https://github.com/SsnL>\n @zou3519 <https://github.com/zou3519>\n\n \u2014\n You are receiving this because you were mentioned.\n Reply to this email directly, view it on GitHub\n <#12633 (comment)>,\n or mute the thread\n <https://github.com/notifications/unsubscribe-auth/AFaWZXuMX8_mmb6SQ6s7FNnE1EP_vUr_ks5ul6kqgaJpZM4XbJmu>\n .", "body": "FWIW, set_coalesced is becoming _coalesced_, a part of the unsafe\nuse-at-your-own-discretion API.\n\nOn Wed, Oct 17, 2018 at 18:03 Wei Yang <notifications@github.com> wrote:\n\n> If we want to keep set_coalesced(), can we have is_coalesced() explicitly\n> check if the indices is both unique and sorted? We should be able to\n> parallelize it in both of CPU and CUDA by checking left and right neighbors\n> for each index.\n> @ezyang <https://github.com/ezyang> @SsnL <https://github.com/SsnL>\n> @zou3519 <https://github.com/zou3519>\n>\n> \u2014\n> You are receiving this because you were mentioned.\n> Reply to this email directly, view it on GitHub\n> <https://github.com/pytorch/pytorch/issues/12633#issuecomment-430805634>,\n> or mute the thread\n> <https://github.com/notifications/unsubscribe-auth/AFaWZXuMX8_mmb6SQ6s7FNnE1EP_vUr_ks5ul6kqgaJpZM4XbJmu>\n> .\n>\n"}