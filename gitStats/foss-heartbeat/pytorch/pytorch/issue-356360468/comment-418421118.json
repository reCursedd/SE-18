{"url": "https://api.github.com/repos/pytorch/pytorch/issues/comments/418421118", "html_url": "https://github.com/pytorch/pytorch/pull/11194#issuecomment-418421118", "issue_url": "https://api.github.com/repos/pytorch/pytorch/issues/11194", "id": 418421118, "node_id": "MDEyOklzc3VlQ29tbWVudDQxODQyMTExOA==", "user": {"login": "yaroslavvb", "id": 23068, "node_id": "MDQ6VXNlcjIzMDY4", "avatar_url": "https://avatars3.githubusercontent.com/u/23068?v=4", "gravatar_id": "", "url": "https://api.github.com/users/yaroslavvb", "html_url": "https://github.com/yaroslavvb", "followers_url": "https://api.github.com/users/yaroslavvb/followers", "following_url": "https://api.github.com/users/yaroslavvb/following{/other_user}", "gists_url": "https://api.github.com/users/yaroslavvb/gists{/gist_id}", "starred_url": "https://api.github.com/users/yaroslavvb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/yaroslavvb/subscriptions", "organizations_url": "https://api.github.com/users/yaroslavvb/orgs", "repos_url": "https://api.github.com/users/yaroslavvb/repos", "events_url": "https://api.github.com/users/yaroslavvb/events{/privacy}", "received_events_url": "https://api.github.com/users/yaroslavvb/received_events", "type": "User", "site_admin": false}, "created_at": "2018-09-04T15:54:12Z", "updated_at": "2018-09-04T15:56:14Z", "author_association": "NONE", "body_html": "<p>BTW, I would also check if the result has any NaN's. I found Intel's gesdd <a href=\"https://software.intel.com/en-us/forums/intel-distribution-for-python/topic/628049#comment-1904231\" rel=\"nofollow\">erroneously produced</a> NaNs when gesvd didn't.</p>\n<p>I feel like some of the edge cases are likely to come up on more ill-conditioned matrices. For instance here's a particular (very ill-conditioned) matrix that <a href=\"https://github.com/tensorflow/tensorflow/issues/9234\" data-hovercard-type=\"issue\" data-hovercard-url=\"/tensorflow/tensorflow/issues/9234/hovercard\">breaks</a> TensorFlow's SVD routine</p>\n<pre><code>from scipy import linalg  # for svd\nimport urllib.request\nimport numpy as np\n\nurl=\"https://storage.googleapis.com/tensorflow-community-wheels/svd_in\"\nresponse = urllib.request.urlopen(url)\nbody = response.read()\nprint(\"Read %d bytes\"%(len(body),))\nassert len(body) == 15366400\nopen(\"svd_in\", \"wb\").write(body)\n\ndtype = np.float32\nmatrix0 = np.genfromtxt('svd_in',\n                        delimiter= \",\").astype(dtype)\nassert matrix0.shape == (784, 784)\nu, s, v = linalg.svd(matrix0)\nprint(\"matrix0 any NaNs: %s\"% (np.isnan(matrix0).any(),))\nprint(\"u had NaNs: %s\"% (np.isnan(u).any(),))\n</code></pre>", "body_text": "BTW, I would also check if the result has any NaN's. I found Intel's gesdd erroneously produced NaNs when gesvd didn't.\nI feel like some of the edge cases are likely to come up on more ill-conditioned matrices. For instance here's a particular (very ill-conditioned) matrix that breaks TensorFlow's SVD routine\nfrom scipy import linalg  # for svd\nimport urllib.request\nimport numpy as np\n\nurl=\"https://storage.googleapis.com/tensorflow-community-wheels/svd_in\"\nresponse = urllib.request.urlopen(url)\nbody = response.read()\nprint(\"Read %d bytes\"%(len(body),))\nassert len(body) == 15366400\nopen(\"svd_in\", \"wb\").write(body)\n\ndtype = np.float32\nmatrix0 = np.genfromtxt('svd_in',\n                        delimiter= \",\").astype(dtype)\nassert matrix0.shape == (784, 784)\nu, s, v = linalg.svd(matrix0)\nprint(\"matrix0 any NaNs: %s\"% (np.isnan(matrix0).any(),))\nprint(\"u had NaNs: %s\"% (np.isnan(u).any(),))", "body": "BTW, I would also check if the result has any NaN's. I found Intel's gesdd [erroneously produced](https://software.intel.com/en-us/forums/intel-distribution-for-python/topic/628049#comment-1904231) NaNs when gesvd didn't.\r\n\r\nI feel like some of the edge cases are likely to come up on more ill-conditioned matrices. For instance here's a particular (very ill-conditioned) matrix that [breaks](https://github.com/tensorflow/tensorflow/issues/9234) TensorFlow's SVD routine\r\n\r\n```\r\nfrom scipy import linalg  # for svd\r\nimport urllib.request\r\nimport numpy as np\r\n\r\nurl=\"https://storage.googleapis.com/tensorflow-community-wheels/svd_in\"\r\nresponse = urllib.request.urlopen(url)\r\nbody = response.read()\r\nprint(\"Read %d bytes\"%(len(body),))\r\nassert len(body) == 15366400\r\nopen(\"svd_in\", \"wb\").write(body)\r\n\r\ndtype = np.float32\r\nmatrix0 = np.genfromtxt('svd_in',\r\n                        delimiter= \",\").astype(dtype)\r\nassert matrix0.shape == (784, 784)\r\nu, s, v = linalg.svd(matrix0)\r\nprint(\"matrix0 any NaNs: %s\"% (np.isnan(matrix0).any(),))\r\nprint(\"u had NaNs: %s\"% (np.isnan(u).any(),))\r\n```"}