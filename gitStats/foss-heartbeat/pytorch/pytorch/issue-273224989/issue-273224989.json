{"url": "https://api.github.com/repos/pytorch/pytorch/issues/3655", "repository_url": "https://api.github.com/repos/pytorch/pytorch", "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/3655/labels{/name}", "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/3655/comments", "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/3655/events", "html_url": "https://github.com/pytorch/pytorch/issues/3655", "id": 273224989, "node_id": "MDU6SXNzdWUyNzMyMjQ5ODk=", "number": 3655, "title": "Have __sizeof__ on tensors account for size of data", "user": {"login": "lantiga", "id": 191033, "node_id": "MDQ6VXNlcjE5MTAzMw==", "avatar_url": "https://avatars2.githubusercontent.com/u/191033?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lantiga", "html_url": "https://github.com/lantiga", "followers_url": "https://api.github.com/users/lantiga/followers", "following_url": "https://api.github.com/users/lantiga/following{/other_user}", "gists_url": "https://api.github.com/users/lantiga/gists{/gist_id}", "starred_url": "https://api.github.com/users/lantiga/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lantiga/subscriptions", "organizations_url": "https://api.github.com/users/lantiga/orgs", "repos_url": "https://api.github.com/users/lantiga/repos", "events_url": "https://api.github.com/users/lantiga/events{/privacy}", "received_events_url": "https://api.github.com/users/lantiga/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2017-11-12T12:22:11Z", "updated_at": "2017-11-27T20:48:08Z", "closed_at": "2017-11-27T20:48:08Z", "author_association": "COLLABORATOR", "body_html": "<p>From <a href=\"https://discuss.pytorch.org/t/data-type-when-change-tensor-array-to-numpy-array/9786\" rel=\"nofollow\">https://discuss.pytorch.org/t/data-type-when-change-tensor-array-to-numpy-array/9786</a></p>\n<p><code>getsizeof</code> internally calls the <code>__sizeof__</code> method on the object, then it adds the garbage collection overhead to it and returns. Apparently <code>__sizeof__</code> on PyTorch tensors doesn\u2019t take the size of the underlying buffer into account:</p>\n<pre><code>torch.ones(10,10).__sizeof__()  # 40\ntorch.ones(100,100).__sizeof__()  # 40\nnp.ones((10,10)).__sizeof__() # 912\nnp.ones((100,100)).__sizeof__() # 80112\n</code></pre>\n<p>I can take care of this a few days from now.</p>", "body_text": "From https://discuss.pytorch.org/t/data-type-when-change-tensor-array-to-numpy-array/9786\ngetsizeof internally calls the __sizeof__ method on the object, then it adds the garbage collection overhead to it and returns. Apparently __sizeof__ on PyTorch tensors doesn\u2019t take the size of the underlying buffer into account:\ntorch.ones(10,10).__sizeof__()  # 40\ntorch.ones(100,100).__sizeof__()  # 40\nnp.ones((10,10)).__sizeof__() # 912\nnp.ones((100,100)).__sizeof__() # 80112\n\nI can take care of this a few days from now.", "body": "From https://discuss.pytorch.org/t/data-type-when-change-tensor-array-to-numpy-array/9786\r\n\r\n`getsizeof` internally calls the `__sizeof__` method on the object, then it adds the garbage collection overhead to it and returns. Apparently `__sizeof__` on PyTorch tensors doesn\u2019t take the size of the underlying buffer into account:\r\n\r\n```\r\ntorch.ones(10,10).__sizeof__()  # 40\r\ntorch.ones(100,100).__sizeof__()  # 40\r\nnp.ones((10,10)).__sizeof__() # 912\r\nnp.ones((100,100)).__sizeof__() # 80112\r\n```\r\n\r\nI can take care of this a few days from now."}