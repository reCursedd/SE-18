{"url": "https://api.github.com/repos/pytorch/pytorch/issues/comments/314854381", "html_url": "https://github.com/pytorch/pytorch/issues/2068#issuecomment-314854381", "issue_url": "https://api.github.com/repos/pytorch/pytorch/issues/2068", "id": 314854381, "node_id": "MDEyOklzc3VlQ29tbWVudDMxNDg1NDM4MQ==", "user": {"login": "hongzimao", "id": 5906100, "node_id": "MDQ6VXNlcjU5MDYxMDA=", "avatar_url": "https://avatars0.githubusercontent.com/u/5906100?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hongzimao", "html_url": "https://github.com/hongzimao", "followers_url": "https://api.github.com/users/hongzimao/followers", "following_url": "https://api.github.com/users/hongzimao/following{/other_user}", "gists_url": "https://api.github.com/users/hongzimao/gists{/gist_id}", "starred_url": "https://api.github.com/users/hongzimao/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hongzimao/subscriptions", "organizations_url": "https://api.github.com/users/hongzimao/orgs", "repos_url": "https://api.github.com/users/hongzimao/repos", "events_url": "https://api.github.com/users/hongzimao/events{/privacy}", "received_events_url": "https://api.github.com/users/hongzimao/received_events", "type": "User", "site_admin": false}, "created_at": "2017-07-12T18:20:29Z", "updated_at": "2017-07-12T18:22:27Z", "author_association": "NONE", "body_html": "<p>[update] it looks if I add a line after variable <code>b</code> and change the assignment of <code>c</code> to be</p>\n<pre><code>d = Variable(torch.from_numpy(a).clone(), requires_grad=False)\nc = torch.index_select(d, 0, Variable(torch.LongTensor([4])))\n</code></pre>\n<p>(basically remove the 'self-assignment') memory usage will become stable.</p>\n<p>I think this may have to do with the garbage collection?</p>", "body_text": "[update] it looks if I add a line after variable b and change the assignment of c to be\nd = Variable(torch.from_numpy(a).clone(), requires_grad=False)\nc = torch.index_select(d, 0, Variable(torch.LongTensor([4])))\n\n(basically remove the 'self-assignment') memory usage will become stable.\nI think this may have to do with the garbage collection?", "body": "[update] it looks if I add a line after variable `b` and change the assignment of `c` to be\r\n```\r\nd = Variable(torch.from_numpy(a).clone(), requires_grad=False)\r\nc = torch.index_select(d, 0, Variable(torch.LongTensor([4])))\r\n```\r\n(basically remove the 'self-assignment') memory usage will become stable.\r\n\r\nI think this may have to do with the garbage collection?"}