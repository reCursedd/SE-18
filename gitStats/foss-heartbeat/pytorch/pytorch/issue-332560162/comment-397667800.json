{"url": "https://api.github.com/repos/pytorch/pytorch/issues/comments/397667800", "html_url": "https://github.com/pytorch/pytorch/issues/8520#issuecomment-397667800", "issue_url": "https://api.github.com/repos/pytorch/pytorch/issues/8520", "id": 397667800, "node_id": "MDEyOklzc3VlQ29tbWVudDM5NzY2NzgwMA==", "user": {"login": "fmassa", "id": 9110200, "node_id": "MDQ6VXNlcjkxMTAyMDA=", "avatar_url": "https://avatars2.githubusercontent.com/u/9110200?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fmassa", "html_url": "https://github.com/fmassa", "followers_url": "https://api.github.com/users/fmassa/followers", "following_url": "https://api.github.com/users/fmassa/following{/other_user}", "gists_url": "https://api.github.com/users/fmassa/gists{/gist_id}", "starred_url": "https://api.github.com/users/fmassa/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fmassa/subscriptions", "organizations_url": "https://api.github.com/users/fmassa/orgs", "repos_url": "https://api.github.com/users/fmassa/repos", "events_url": "https://api.github.com/users/fmassa/events{/privacy}", "received_events_url": "https://api.github.com/users/fmassa/received_events", "type": "User", "site_admin": false}, "created_at": "2018-06-15T16:05:20Z", "updated_at": "2018-06-15T16:05:20Z", "author_association": "MEMBER", "body_html": "<p>BTW, the main reason why we created <code>torch.Size</code> was to be able to use the legacy <code>torch.Tensor</code> constructor, which was overloaded on size / data.<br>\nNow that we are mainly moving towards having a data constructor <code>torch.tensor</code> and a size constructor <code>torch.empty</code>, I believe we could deprecate at some point <code>torch.Size</code>, and once (if) we drop support for <code>torch.Tensor</code> altogether, we can probably just make <code>tensor.size()</code> return a tuple as well.</p>", "body_text": "BTW, the main reason why we created torch.Size was to be able to use the legacy torch.Tensor constructor, which was overloaded on size / data.\nNow that we are mainly moving towards having a data constructor torch.tensor and a size constructor torch.empty, I believe we could deprecate at some point torch.Size, and once (if) we drop support for torch.Tensor altogether, we can probably just make tensor.size() return a tuple as well.", "body": "BTW, the main reason why we created `torch.Size` was to be able to use the legacy `torch.Tensor` constructor, which was overloaded on size / data.\r\nNow that we are mainly moving towards having a data constructor `torch.tensor` and a size constructor `torch.empty`, I believe we could deprecate at some point `torch.Size`, and once (if) we drop support for `torch.Tensor` altogether, we can probably just make `tensor.size()` return a tuple as well."}