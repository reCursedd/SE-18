{"url": "https://api.github.com/repos/pytorch/pytorch/issues/comments/396694128", "html_url": "https://github.com/pytorch/pytorch/issues/8304#issuecomment-396694128", "issue_url": "https://api.github.com/repos/pytorch/pytorch/issues/8304", "id": 396694128, "node_id": "MDEyOklzc3VlQ29tbWVudDM5NjY5NDEyOA==", "user": {"login": "phizaz", "id": 451667, "node_id": "MDQ6VXNlcjQ1MTY2Nw==", "avatar_url": "https://avatars3.githubusercontent.com/u/451667?v=4", "gravatar_id": "", "url": "https://api.github.com/users/phizaz", "html_url": "https://github.com/phizaz", "followers_url": "https://api.github.com/users/phizaz/followers", "following_url": "https://api.github.com/users/phizaz/following{/other_user}", "gists_url": "https://api.github.com/users/phizaz/gists{/gist_id}", "starred_url": "https://api.github.com/users/phizaz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/phizaz/subscriptions", "organizations_url": "https://api.github.com/users/phizaz/orgs", "repos_url": "https://api.github.com/users/phizaz/repos", "events_url": "https://api.github.com/users/phizaz/events{/privacy}", "received_events_url": "https://api.github.com/users/phizaz/received_events", "type": "User", "site_admin": false}, "created_at": "2018-06-12T18:46:08Z", "updated_at": "2018-06-12T18:46:08Z", "author_association": "CONTRIBUTOR", "body_html": "<p>I think I under stand your point, which is Jacobian-vector product right? I'm just saying that there should be a way to get a Jacobian in those specific trivial cases. Like, <code>y = sigmoid(Wx)</code>, Jacobian of <code>dy/dx</code> in this case is simply <code>y * (1- y) * W</code>.</p>", "body_text": "I think I under stand your point, which is Jacobian-vector product right? I'm just saying that there should be a way to get a Jacobian in those specific trivial cases. Like, y = sigmoid(Wx), Jacobian of dy/dx in this case is simply y * (1- y) * W.", "body": "I think I under stand your point, which is Jacobian-vector product right? I'm just saying that there should be a way to get a Jacobian in those specific trivial cases. Like, `y = sigmoid(Wx)`, Jacobian of `dy/dx` in this case is simply `y * (1- y) * W`. "}