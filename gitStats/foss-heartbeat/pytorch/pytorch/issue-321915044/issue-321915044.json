{"url": "https://api.github.com/repos/pytorch/pytorch/issues/7463", "repository_url": "https://api.github.com/repos/pytorch/pytorch", "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/7463/labels{/name}", "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/7463/comments", "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/7463/events", "html_url": "https://github.com/pytorch/pytorch/issues/7463", "id": 321915044, "node_id": "MDU6SXNzdWUzMjE5MTUwNDQ=", "number": 7463, "title": "test time is not reasonable.", "user": {"login": "noUmbrella", "id": 34088304, "node_id": "MDQ6VXNlcjM0MDg4MzA0", "avatar_url": "https://avatars2.githubusercontent.com/u/34088304?v=4", "gravatar_id": "", "url": "https://api.github.com/users/noUmbrella", "html_url": "https://github.com/noUmbrella", "followers_url": "https://api.github.com/users/noUmbrella/followers", "following_url": "https://api.github.com/users/noUmbrella/following{/other_user}", "gists_url": "https://api.github.com/users/noUmbrella/gists{/gist_id}", "starred_url": "https://api.github.com/users/noUmbrella/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/noUmbrella/subscriptions", "organizations_url": "https://api.github.com/users/noUmbrella/orgs", "repos_url": "https://api.github.com/users/noUmbrella/repos", "events_url": "https://api.github.com/users/noUmbrella/events{/privacy}", "received_events_url": "https://api.github.com/users/noUmbrella/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-05-10T12:32:40Z", "updated_at": "2018-05-10T12:54:07Z", "closed_at": "2018-05-10T12:54:07Z", "author_association": "NONE", "body_html": "<p>I write a code to calculate the execute in pytorch, here is my code<br>\n`import pdb<br>\nimport time<br>\nimport torch</p>\n<p>x = torch.rand([30,30])<br>\nx = x.cuda()<br>\ny = torch.rand([30,1])<br>\ny = y.cuda()</p>\n<p>start = time.time()<br>\nw = torch.gesv(y,x)<br>\nend = time.time()</p>\n<p>print \"do once gesv:\"<br>\nprint end-start</p>\n<p>start = time.time()<br>\nfor i in range(10):<br>\nw = torch.gesv(y,x)<br>\nend = time.time()</p>\n<p>print \"do ten gesv:\"<br>\nprint end-start</p>\n<p>start = time.time()<br>\nw = torch.add(y,x)<br>\nend = time.time()</p>\n<p>print \"do once add:\"<br>\nprint end-start</p>\n<p>start = time.time()<br>\nfor i in range(10):<br>\nw = torch.add(y,x)<br>\nend = time.time()</p>\n<p>print \"do ten add:\"<br>\nprint end-start<br>\n<code>the result is</code>do once gesv:<br>\n0.00714206695557<br>\ndo ten gesv:<br>\n0.0572240352631<br>\ndo once add:<br>\n0.000344038009644<br>\ndo ten add:<br>\n0.000396966934204`<br>\nwe can find that the time of 'do ten gesv' is about ten times as much as 'do once gesv', however the time of \"do once add\" and \"do ten add\" almost the same, Why is that?</p>", "body_text": "I write a code to calculate the execute in pytorch, here is my code\n`import pdb\nimport time\nimport torch\nx = torch.rand([30,30])\nx = x.cuda()\ny = torch.rand([30,1])\ny = y.cuda()\nstart = time.time()\nw = torch.gesv(y,x)\nend = time.time()\nprint \"do once gesv:\"\nprint end-start\nstart = time.time()\nfor i in range(10):\nw = torch.gesv(y,x)\nend = time.time()\nprint \"do ten gesv:\"\nprint end-start\nstart = time.time()\nw = torch.add(y,x)\nend = time.time()\nprint \"do once add:\"\nprint end-start\nstart = time.time()\nfor i in range(10):\nw = torch.add(y,x)\nend = time.time()\nprint \"do ten add:\"\nprint end-start\nthe result isdo once gesv:\n0.00714206695557\ndo ten gesv:\n0.0572240352631\ndo once add:\n0.000344038009644\ndo ten add:\n0.000396966934204`\nwe can find that the time of 'do ten gesv' is about ten times as much as 'do once gesv', however the time of \"do once add\" and \"do ten add\" almost the same, Why is that?", "body": "I write a code to calculate the execute in pytorch, here is my code\r\n`import pdb\r\nimport time\r\nimport torch\r\n\r\nx = torch.rand([30,30])\r\nx = x.cuda()\r\ny = torch.rand([30,1])\r\ny = y.cuda()\r\n\r\nstart = time.time()\r\nw = torch.gesv(y,x)\r\nend = time.time()\r\n\r\nprint \"do once gesv:\"\r\nprint end-start\r\n\r\nstart = time.time()\r\nfor i in range(10):\r\n  w = torch.gesv(y,x)\r\nend = time.time()\r\n\r\nprint \"do ten gesv:\"\r\nprint end-start\r\n\r\nstart = time.time()\r\nw = torch.add(y,x)\r\nend = time.time()\r\n\r\nprint \"do once add:\"\r\nprint end-start\r\n\r\nstart = time.time()\r\nfor i in range(10):\r\n  w = torch.add(y,x)\r\nend = time.time()\r\n\r\nprint \"do ten add:\"\r\nprint end-start\r\n`\r\nthe result is\r\n`do once gesv:\r\n0.00714206695557\r\ndo ten gesv:\r\n0.0572240352631\r\ndo once add:\r\n0.000344038009644\r\ndo ten add:\r\n0.000396966934204`\r\nwe can find that the time of 'do ten gesv' is about ten times as much as 'do once gesv', however the time of \"do once add\" and \"do ten add\" almost the same, Why is that?\r\n"}