{"url": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/203175710", "pull_request_review_id": 138015129, "id": 203175710, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwMzE3NTcxMA==", "diff_hunk": "@@ -0,0 +1,103 @@\n+import torch\n+import torch.nn.functional as F\n+from torch.distributions import constraints\n+from torch.distributions.constraints import Constraint\n+from torch.distributions.distribution import Distribution\n+from torch.distributions.utils import broadcast_all, probs_to_logits, lazy_property, logits_to_probs\n+\n+\n+class _GreaterThanEq(Constraint):\n+    \"\"\"\n+    Constrain to a real half line `[lower_bound, inf)`.\n+    \"\"\"\n+    def __init__(self, lower_bound):\n+        self.lower_bound = lower_bound\n+\n+    def check(self, value):\n+        return self.lower_bound <= value\n+\n+\n+class _HalfOpenInterval(Constraint):", "path": "torch/distributions/negative_binomial.py", "position": null, "original_position": 20, "commit_id": "77785d7475f34184746e37a5a1431548727c5b64", "original_commit_id": "4d9fc6759cf08176e4dfa72003ad467e727e132e", "user": {"login": "fritzo", "id": 648532, "node_id": "MDQ6VXNlcjY0ODUzMg==", "avatar_url": "https://avatars0.githubusercontent.com/u/648532?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fritzo", "html_url": "https://github.com/fritzo", "followers_url": "https://api.github.com/users/fritzo/followers", "following_url": "https://api.github.com/users/fritzo/following{/other_user}", "gists_url": "https://api.github.com/users/fritzo/gists{/gist_id}", "starred_url": "https://api.github.com/users/fritzo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fritzo/subscriptions", "organizations_url": "https://api.github.com/users/fritzo/orgs", "repos_url": "https://api.github.com/users/fritzo/repos", "events_url": "https://api.github.com/users/fritzo/events{/privacy}", "received_events_url": "https://api.github.com/users/fritzo/received_events", "type": "User", "site_admin": false}, "body": "Can you move this to constraints.py and add:\r\n- an alias `half_open_interval`\r\n- a test\r\n- two declarations in the constraint registries `transform_to` and `biject_to` using the same transform as `interval`. These will only be approximate (not handling the boundary value), but will enable HMC and SVI algorithms to learn this parameter.", "created_at": "2018-07-17T20:56:54Z", "updated_at": "2018-11-23T15:47:35Z", "html_url": "https://github.com/pytorch/pytorch/pull/9345#discussion_r203175710", "pull_request_url": "https://api.github.com/repos/pytorch/pytorch/pulls/9345", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/203175710"}, "html": {"href": "https://github.com/pytorch/pytorch/pull/9345#discussion_r203175710"}, "pull_request": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/9345"}}, "body_html": "<p>Can you move this to constraints.py and add:</p>\n<ul>\n<li>an alias <code>half_open_interval</code></li>\n<li>a test</li>\n<li>two declarations in the constraint registries <code>transform_to</code> and <code>biject_to</code> using the same transform as <code>interval</code>. These will only be approximate (not handling the boundary value), but will enable HMC and SVI algorithms to learn this parameter.</li>\n</ul>", "body_text": "Can you move this to constraints.py and add:\n\nan alias half_open_interval\na test\ntwo declarations in the constraint registries transform_to and biject_to using the same transform as interval. These will only be approximate (not handling the boundary value), but will enable HMC and SVI algorithms to learn this parameter."}