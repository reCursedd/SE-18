{"url": "https://api.github.com/repos/pytorch/pytorch/issues/comments/315225244", "html_url": "https://github.com/pytorch/pytorch/issues/2050#issuecomment-315225244", "issue_url": "https://api.github.com/repos/pytorch/pytorch/issues/2050", "id": 315225244, "node_id": "MDEyOklzc3VlQ29tbWVudDMxNTIyNTI0NA==", "user": {"login": "jekbradbury", "id": 11729078, "node_id": "MDQ6VXNlcjExNzI5MDc4", "avatar_url": "https://avatars2.githubusercontent.com/u/11729078?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jekbradbury", "html_url": "https://github.com/jekbradbury", "followers_url": "https://api.github.com/users/jekbradbury/followers", "following_url": "https://api.github.com/users/jekbradbury/following{/other_user}", "gists_url": "https://api.github.com/users/jekbradbury/gists{/gist_id}", "starred_url": "https://api.github.com/users/jekbradbury/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jekbradbury/subscriptions", "organizations_url": "https://api.github.com/users/jekbradbury/orgs", "repos_url": "https://api.github.com/users/jekbradbury/repos", "events_url": "https://api.github.com/users/jekbradbury/events{/privacy}", "received_events_url": "https://api.github.com/users/jekbradbury/received_events", "type": "User", "site_admin": false}, "created_at": "2017-07-13T23:02:47Z", "updated_at": "2017-07-13T23:02:47Z", "author_association": "CONTRIBUTOR", "body_html": "<p><a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=20129246\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/meownoid\">@meownoid</a> in general the easiest way to do what you want is to use <code>tensor.new(sizes)</code>, which creates a new tensor on the same device as <code>tensor</code>.</p>", "body_text": "@meownoid in general the easiest way to do what you want is to use tensor.new(sizes), which creates a new tensor on the same device as tensor.", "body": "@meownoid in general the easiest way to do what you want is to use `tensor.new(sizes)`, which creates a new tensor on the same device as `tensor`."}