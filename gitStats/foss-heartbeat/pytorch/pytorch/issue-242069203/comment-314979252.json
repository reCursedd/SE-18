{"url": "https://api.github.com/repos/pytorch/pytorch/issues/comments/314979252", "html_url": "https://github.com/pytorch/pytorch/issues/2050#issuecomment-314979252", "issue_url": "https://api.github.com/repos/pytorch/pytorch/issues/2050", "id": 314979252, "node_id": "MDEyOklzc3VlQ29tbWVudDMxNDk3OTI1Mg==", "user": {"login": "soumith", "id": 1310570, "node_id": "MDQ6VXNlcjEzMTA1NzA=", "avatar_url": "https://avatars0.githubusercontent.com/u/1310570?v=4", "gravatar_id": "", "url": "https://api.github.com/users/soumith", "html_url": "https://github.com/soumith", "followers_url": "https://api.github.com/users/soumith/followers", "following_url": "https://api.github.com/users/soumith/following{/other_user}", "gists_url": "https://api.github.com/users/soumith/gists{/gist_id}", "starred_url": "https://api.github.com/users/soumith/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/soumith/subscriptions", "organizations_url": "https://api.github.com/users/soumith/orgs", "repos_url": "https://api.github.com/users/soumith/repos", "events_url": "https://api.github.com/users/soumith/events{/privacy}", "received_events_url": "https://api.github.com/users/soumith/received_events", "type": "User", "site_admin": false}, "created_at": "2017-07-13T05:58:36Z", "updated_at": "2017-07-13T05:58:42Z", "author_association": "MEMBER", "body_html": "<p>this isn't a great idea, it doesn't generalize to multi-GPU models, and likely adds to confusion.</p>\n<p>You can manually set a <code>_cuda</code> <code>@property</code> in your particular models using this code in your class definition:</p>\n<div class=\"highlight highlight-source-python\"><pre><span class=\"pl-en\">@</span><span class=\"pl-c1\">property</span>\n<span class=\"pl-k\">def</span> <span class=\"pl-en\">_cuda</span>(<span class=\"pl-smi\"><span class=\"pl-smi\">self</span></span>):\n    <span class=\"pl-k\">return</span> <span class=\"pl-c1\">next</span>(<span class=\"pl-c1\">self</span>.parameters()).is_cuda</pre></div>", "body_text": "this isn't a great idea, it doesn't generalize to multi-GPU models, and likely adds to confusion.\nYou can manually set a _cuda @property in your particular models using this code in your class definition:\n@property\ndef _cuda(self):\n    return next(self.parameters()).is_cuda", "body": "this isn't a great idea, it doesn't generalize to multi-GPU models, and likely adds to confusion.\r\n\r\nYou can manually set a `_cuda` `@property` in your particular models using this code in your class definition: \r\n\r\n```python\r\n@property\r\ndef _cuda(self):\r\n    return next(self.parameters()).is_cuda\r\n```"}