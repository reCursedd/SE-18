{"url": "https://api.github.com/repos/pytorch/pytorch/issues/7895", "repository_url": "https://api.github.com/repos/pytorch/pytorch", "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/7895/labels{/name}", "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/7895/comments", "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/7895/events", "html_url": "https://github.com/pytorch/pytorch/issues/7895", "id": 327003942, "node_id": "MDU6SXNzdWUzMjcwMDM5NDI=", "number": 7895, "title": "[Caffe2]Build failed: cannot find nvrtc", "user": {"login": "AtlantixJJ", "id": 20163080, "node_id": "MDQ6VXNlcjIwMTYzMDgw", "avatar_url": "https://avatars1.githubusercontent.com/u/20163080?v=4", "gravatar_id": "", "url": "https://api.github.com/users/AtlantixJJ", "html_url": "https://github.com/AtlantixJJ", "followers_url": "https://api.github.com/users/AtlantixJJ/followers", "following_url": "https://api.github.com/users/AtlantixJJ/following{/other_user}", "gists_url": "https://api.github.com/users/AtlantixJJ/gists{/gist_id}", "starred_url": "https://api.github.com/users/AtlantixJJ/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/AtlantixJJ/subscriptions", "organizations_url": "https://api.github.com/users/AtlantixJJ/orgs", "repos_url": "https://api.github.com/users/AtlantixJJ/repos", "events_url": "https://api.github.com/users/AtlantixJJ/events{/privacy}", "received_events_url": "https://api.github.com/users/AtlantixJJ/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 890282107, "node_id": "MDU6TGFiZWw4OTAyODIxMDc=", "url": "https://api.github.com/repos/pytorch/pytorch/labels/caffe2", "name": "caffe2", "color": "210aa8", "default": false}], "state": "closed", "locked": false, "assignee": {"login": "pjh5", "id": 6456020, "node_id": "MDQ6VXNlcjY0NTYwMjA=", "avatar_url": "https://avatars1.githubusercontent.com/u/6456020?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pjh5", "html_url": "https://github.com/pjh5", "followers_url": "https://api.github.com/users/pjh5/followers", "following_url": "https://api.github.com/users/pjh5/following{/other_user}", "gists_url": "https://api.github.com/users/pjh5/gists{/gist_id}", "starred_url": "https://api.github.com/users/pjh5/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pjh5/subscriptions", "organizations_url": "https://api.github.com/users/pjh5/orgs", "repos_url": "https://api.github.com/users/pjh5/repos", "events_url": "https://api.github.com/users/pjh5/events{/privacy}", "received_events_url": "https://api.github.com/users/pjh5/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "pjh5", "id": 6456020, "node_id": "MDQ6VXNlcjY0NTYwMjA=", "avatar_url": "https://avatars1.githubusercontent.com/u/6456020?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pjh5", "html_url": "https://github.com/pjh5", "followers_url": "https://api.github.com/users/pjh5/followers", "following_url": "https://api.github.com/users/pjh5/following{/other_user}", "gists_url": "https://api.github.com/users/pjh5/gists{/gist_id}", "starred_url": "https://api.github.com/users/pjh5/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pjh5/subscriptions", "organizations_url": "https://api.github.com/users/pjh5/orgs", "repos_url": "https://api.github.com/users/pjh5/repos", "events_url": "https://api.github.com/users/pjh5/events{/privacy}", "received_events_url": "https://api.github.com/users/pjh5/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 7, "created_at": "2018-05-28T12:05:55Z", "updated_at": "2018-10-30T03:30:50Z", "closed_at": "2018-10-30T03:30:50Z", "author_association": "NONE", "body_html": "<ul>\n<li>System: Linux fit16 4.4.0-94-generic <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load issue title\" data-id=\"182559240\" data-permission-text=\"Issue title is private\" data-url=\"https://github.com/pytorch/pytorch/issues/117\" data-hovercard-type=\"pull_request\" data-hovercard-url=\"/pytorch/pytorch/pull/117/hovercard\" href=\"https://github.com/pytorch/pytorch/pull/117\">#117</a>~14.04.1-Ubuntu SMP Wed Aug 30 06:50:25 UTC 2017 x86_64 x86_64 x86_64 GNU/Linux</li>\n<li>Instruction: <a href=\"https://caffe2.ai/docs/getting-started.html?platform=ubuntu&amp;configuration=compile\" rel=\"nofollow\">https://caffe2.ai/docs/getting-started.html?platform=ubuntu&amp;configuration=compile</a> failed at <code>make</code> step</li>\n<li>no other flags. <code>cmake ..</code></li>\n<li>CMake output:</li>\n</ul>\n<pre><code>-- The CXX compiler identification is GNU 4.8.5\n-- The C compiler identification is GNU 4.8.5\n-- Check for working CXX compiler: /usr/bin/c++\n-- Check for working CXX compiler: /usr/bin/c++ -- works\n-- Detecting CXX compiler ABI info\n-- Detecting CXX compiler ABI info - done\n-- Detecting CXX compile features\n-- Detecting CXX compile features - done\n-- Check for working C compiler: /usr/bin/cc\n-- Check for working C compiler: /usr/bin/cc -- works\n-- Detecting C compiler ABI info\n-- Detecting C compiler ABI info - done\n-- Detecting C compile features\n-- Detecting C compile features - done\n-- Not forcing any particular BLAS to be found\n-- Build type not set - defaulting to Release\n-- Performing Test CAFFE2_LONG_IS_INT32_OR_64\n-- Performing Test CAFFE2_LONG_IS_INT32_OR_64 - Success\n-- Does not need to define long separately.\n-- Performing Test CAFFE2_EXCEPTION_PTR_SUPPORTED\n-- Performing Test CAFFE2_EXCEPTION_PTR_SUPPORTED - Success\n-- std::exception_ptr is supported.\n-- Performing Test CAFFE2_IS_NUMA_AVAILABLE\n-- Performing Test CAFFE2_IS_NUMA_AVAILABLE - Failed\n-- NUMA is not available\n-- Performing Test CAFFE2_NEED_TO_TURN_OFF_DEPRECATION_WARNING\n-- Performing Test CAFFE2_NEED_TO_TURN_OFF_DEPRECATION_WARNING - Failed\n-- Turning off deprecation warning due to glog.\n-- Performing Test CAFFE2_COMPILER_SUPPORTS_AVX2_EXTENSIONS\n-- Performing Test CAFFE2_COMPILER_SUPPORTS_AVX2_EXTENSIONS - Success\n-- Current compiler supports avx2 extention. Will build perfkernels.\n-- Performing Test COMPILER_SUPPORTS_HIDDEN_VISIBILITY\n-- Performing Test COMPILER_SUPPORTS_HIDDEN_VISIBILITY - Success\n-- Performing Test COMPILER_SUPPORTS_HIDDEN_INLINE_VISIBILITY\n-- Performing Test COMPILER_SUPPORTS_HIDDEN_INLINE_VISIBILITY - Success\n-- Building using own protobuf under third_party per request.\n-- Use custom protobuf build.\n-- Looking for pthread.h\n-- Looking for pthread.h - found\n-- Looking for pthread_create\n-- Looking for pthread_create - not found\n-- Looking for pthread_create in pthreads\n-- Looking for pthread_create in pthreads - not found\n-- Looking for pthread_create in pthread\n-- Looking for pthread_create in pthread - found\n-- Found Threads: TRUE  \n-- Caffe2 protobuf include directory: $&lt;BUILD_INTERFACE:/home/atlantix/pytorch/third_party/protobuf/src&gt;$&lt;INSTALL_INTERFACE:include&gt;\n-- Found Git: /usr/bin/git (found version \"1.9.1\") \n-- The BLAS backend of choice:Eigen\n-- Brace yourself, we are building NNPACK\n-- The ASM compiler identification is GNU\n-- Found assembler: /usr/bin/cc\n-- Found PythonInterp: /usr/bin/python (found version \"2.7.6\") \n-- Check if compiler accepts -pthread\n-- Check if compiler accepts -pthread - yes\n-- Caffe2: Cannot find gflags automatically. Using legacy find.\n-- Found gflags: /usr/include  \n-- Caffe2: Found gflags  (include: /usr/include, library: /usr/lib/x86_64-linux-gnu/libgflags.so)\n-- Caffe2: Cannot find glog automatically. Using legacy find.\n-- Found glog: /usr/include  \n-- Caffe2: Found glog (include: /usr/include, library: /usr/lib/x86_64-linux-gnu/libglog.so)\n-- Failed to find LLVM FileCheck\n-- git Version: v0.0.0\n-- Version: 0.0.0\n-- Performing Test HAVE_CXX_FLAG_STD_CXX11\n-- Performing Test HAVE_CXX_FLAG_STD_CXX11 - Success\n-- Performing Test HAVE_CXX_FLAG_WALL\n-- Performing Test HAVE_CXX_FLAG_WALL - Success\n-- Performing Test HAVE_CXX_FLAG_WEXTRA\n-- Performing Test HAVE_CXX_FLAG_WEXTRA - Success\n-- Performing Test HAVE_CXX_FLAG_WSHADOW\n-- Performing Test HAVE_CXX_FLAG_WSHADOW - Success\n-- Performing Test HAVE_CXX_FLAG_WERROR\n-- Performing Test HAVE_CXX_FLAG_WERROR - Success\n-- Performing Test HAVE_CXX_FLAG_PEDANTIC\n-- Performing Test HAVE_CXX_FLAG_PEDANTIC - Success\n-- Performing Test HAVE_CXX_FLAG_PEDANTIC_ERRORS\n-- Performing Test HAVE_CXX_FLAG_PEDANTIC_ERRORS - Success\n-- Performing Test HAVE_CXX_FLAG_WSHORTEN_64_TO_32\n-- Performing Test HAVE_CXX_FLAG_WSHORTEN_64_TO_32 - Failed\n-- Performing Test HAVE_CXX_FLAG_WFLOAT_EQUAL\n-- Performing Test HAVE_CXX_FLAG_WFLOAT_EQUAL - Success\n-- Performing Test HAVE_CXX_FLAG_FSTRICT_ALIASING\n-- Performing Test HAVE_CXX_FLAG_FSTRICT_ALIASING - Success\n-- Performing Test HAVE_CXX_FLAG_WSTRICT_ALIASING\n-- Performing Test HAVE_CXX_FLAG_WSTRICT_ALIASING - Success\n-- Performing Test HAVE_CXX_FLAG_WD654\n-- Performing Test HAVE_CXX_FLAG_WD654 - Failed\n-- Performing Test HAVE_CXX_FLAG_WTHREAD_SAFETY\n-- Performing Test HAVE_CXX_FLAG_WTHREAD_SAFETY - Failed\n-- Performing Test HAVE_CXX_FLAG_COVERAGE\n-- Performing Test HAVE_CXX_FLAG_COVERAGE - Success\n-- Performing Test HAVE_STD_REGEX\n-- Performing Test HAVE_STD_REGEX\n-- Performing Test HAVE_STD_REGEX -- compiled but failed to run\n-- Performing Test HAVE_GNU_POSIX_REGEX\n-- Performing Test HAVE_GNU_POSIX_REGEX\n-- Performing Test HAVE_GNU_POSIX_REGEX -- failed to compile\n-- Performing Test HAVE_POSIX_REGEX\n-- Performing Test HAVE_POSIX_REGEX\n-- Performing Test HAVE_POSIX_REGEX -- success\n-- Performing Test HAVE_STEADY_CLOCK\n-- Performing Test HAVE_STEADY_CLOCK\n-- Performing Test HAVE_STEADY_CLOCK -- success\n-- Found LMDB: /usr/include  \n-- Found lmdb    (include: /usr/include, library: /usr/lib/x86_64-linux-gnu/liblmdb.so)\n-- Found LevelDB: /usr/include  \n-- Found LevelDB (include: /usr/include, library: /usr/lib/x86_64-linux-gnu/libleveldb.so)\n-- Found Snappy: /usr/include  \n-- Found Snappy  (include: /usr/include, library: /usr/lib/libsnappy.so)\n-- Could NOT find Numa (missing: Numa_INCLUDE_DIR Numa_LIBRARIES) \nCMake Warning at cmake/Dependencies.cmake:243 (message):\n  Not compiling with NUMA.  Suppress this warning with -DUSE_NUMA=OFF\nCall Stack (most recent call first):\n  CMakeLists.txt:188 (include)\n\n\n-- OpenCV found (/usr/local/share/OpenCV)\nCMake Warning at cmake/Dependencies.cmake:309 (find_package):\n  By not providing \"FindEigen3.cmake\" in CMAKE_MODULE_PATH this project has\n  asked CMake to find a package configuration file provided by \"Eigen3\", but\n  CMake did not find one.\n\n  Could not find a package configuration file provided by \"Eigen3\" with any\n  of the following names:\n\n    Eigen3Config.cmake\n    eigen3-config.cmake\n\n  Add the installation prefix of \"Eigen3\" to CMAKE_PREFIX_PATH or set\n  \"Eigen3_DIR\" to a directory containing one of the above files.  If \"Eigen3\"\n  provides a separate development package or SDK, be sure it has been\n  installed.\nCall Stack (most recent call first):\n  CMakeLists.txt:188 (include)\n\n\n-- Did not find system Eigen. Using third party subdirectory.\n-- Found PythonInterp: /usr/bin/python (found suitable version \"2.7.6\", minimum required is \"2.7\") \n-- Found PythonLibs: /usr/lib/x86_64-linux-gnu/libpython2.7.so (found suitable version \"2.7.6\", minimum required is \"2.7\") \n-- Found NumPy: /usr/local/lib/python2.7/dist-packages/numpy/core/include (found version \"1.13.3\") \n-- NumPy ver. 1.13.3 found (include: /usr/local/lib/python2.7/dist-packages/numpy/core/include)\n-- Could NOT find pybind11 (missing: pybind11_INCLUDE_DIR) \n-- Found MPI_C: /usr/lib/libmpi.so (found version \"2.1\") \n-- Found MPI_CXX: /usr/lib/libmpi_cxx.so (found version \"2.1\") \n-- Found MPI: TRUE (found version \"2.1\")  \n-- MPI support found\n-- MPI compile flags: -pthread\n-- MPI include path: /usr/lib/openmpi/include/openmpi/usr/lib/openmpi/include\n-- MPI LINK flags path: -L/usr/lib/openmpi/lib -pthread\n-- MPI libraries: /usr/lib/libmpi_cxx.so/usr/lib/libmpi.so/usr/lib/x86_64-linux-gnu/libdl.so/usr/lib/x86_64-linux-gnu/libhwloc.so\nCMake Warning at cmake/Dependencies.cmake:364 (message):\n  OpenMPI found, but it is not built with CUDA support.\nCall Stack (most recent call first):\n  CMakeLists.txt:188 (include)\n\n\n-- Found CUDA: /usr/local/cuda-8.0 (found suitable version \"8.0\", minimum required is \"7.0\") \n-- Found CUDNN: /usr/local/cuda-8.0/include  \n-- Caffe2: CUDA detected: 8.0\n-- Found cuDNN: v6.0.21  (include: /usr/local/cuda-8.0/include, library: /usr/local/cuda-8.0/lib64/libcudnn.so)\n-- Automatic GPU detection failed. Building for all known architectures.\n-- Added CUDA NVCC flags for: sm_30 sm_35 sm_50 sm_52 sm_60 sm_61\n-- Could NOT find NCCL (missing: NCCL_INCLUDE_DIRS NCCL_LIBRARIES) \n-- Could NOT find CUB (missing: CUB_INCLUDE_DIR) \n-- Could NOT find Gloo (missing: Gloo_INCLUDE_DIR Gloo_LIBRARY) \n-- MPI include path: /usr/lib/openmpi/include/openmpi/usr/lib/openmpi/include\n-- MPI libraries: /usr/lib/libmpi_cxx.so/usr/lib/libmpi.so/usr/lib/x86_64-linux-gnu/libdl.so/usr/lib/x86_64-linux-gnu/libhwloc.so\n-- CUDA detected: 8.0\n-- Found libcuda: /usr/lib/x86_64-linux-gnu/libcuda.so\n-- Found libnvrtc: /usr/local/cuda-8.0/lib64/libnvrtc.so\n-- Found nccl: /home/atlantix/pytorch/third_party/nccl/build/include  \nCMake Warning at cmake/Dependencies.cmake:551 (message):\n  mobile opengl is only used in android or ios builds.\nCall Stack (most recent call first):\n  CMakeLists.txt:188 (include)\n\n\nCMake Warning at cmake/Dependencies.cmake:627 (message):\n  Metal is only used in ios builds.\nCall Stack (most recent call first):\n  CMakeLists.txt:188 (include)\n\n\n-- GCC 4.8.5: Adding gcc and gcc_s libs to link line\n-- Include NCCL operators\n-- Excluding ideep operators as we are not using ideep\n-- Including image processing operators\n-- Excluding video processing operators due to no opencv\n-- Excluding mkl operators as we are not using mkl\n-- Include Observer library\n-- Using lib/python2.7/dist-packages as python relative installation path\n-- Automatically generating missing __init__.py files.\nCMake Warning at CMakeLists.txt:318 (message):\n  Generated cmake files are only fully tested if one builds with system glog,\n  gflags, and protobuf.  Other settings may generate files that are not well\n  tested.\n\n\n-- \n-- ******** Summary ********\n-- General:\n--   CMake version         : 3.11.2\n--   CMake command         : /usr/local/bin/cmake\n--   Git version           : v0.1.11-8572-g45cdb63\n--   System                : Linux\n--   C++ compiler          : /usr/bin/c++\n--   C++ compiler version  : 4.8.5\n--   BLAS                  : Eigen\n--   CXX flags             :  -Wno-deprecated -fvisibility-inlines-hidden -DONNX_NAMESPACE=onnx_c2 -O2 -fPIC -Wno-narrowing -Wno-invalid-partial-specialization\n--   Build type            : Release\n--   Compile definitions   : \n-- \n--   BUILD_CAFFE2          : ON\n--   BUILD_ATEN            : OFF\n--   BUILD_BINARY          : ON\n--   BUILD_CUSTOM_PROTOBUF : ON\n--     Link local protobuf : ON\n--   BUILD_DOCS            : OFF\n--   BUILD_PYTHON          : ON\n--     Python version      : 2.7.6\n--     Python includes     : /usr/include/python2.7\n--   BUILD_SHARED_LIBS     : ON\n--   BUILD_TEST            : ON\n--   USE_ASAN              : OFF\n--   USE_CUDA              : ON\n--     CUDA static link    : OFF\n--     USE_CUDNN           : ON\n--     CUDA version        : 8.0\n--     cuDNN version       : 6.0.21\n--     CUDA root directory : /usr/local/cuda-8.0\n--     CUDA library        : /usr/lib/x86_64-linux-gnu/libcuda.so\n--     cudart library      : /usr/local/cuda-8.0/lib64/libcudart_static.a;-pthread;dl;/usr/lib/x86_64-linux-gnu/librt.so\n--     cublas library      : /usr/local/cuda-8.0/lib64/libcublas.so;/usr/local/cuda-8.0/lib64/libcublas_device.a\n--     cufft library       : /usr/local/cuda-8.0/lib64/libcufft.so\n--     curand library      : /usr/local/cuda-8.0/lib64/libcurand.so\n--     cuDNN library       : /usr/local/cuda-8.0/lib64/libcudnn.so\n--     nvrtc               : /usr/local/cuda-8.0/lib64/libnvrtc.so\n--     CUDA include path   : /usr/local/cuda-8.0/include\n--     NVCC executable     : /usr/local/cuda-8.0/bin/nvcc\n--     CUDA host compiler  : /usr/bin/cc\n--     USE_TENSORRT        : OFF\n--   USE_ROCM              : OFF\n--   USE_EIGEN_FOR_BLAS    : ON\n--   USE_FFMPEG            : OFF\n--   USE_GFLAGS            : ON\n--   USE_GLOG              : ON\n--   USE_GLOO              : ON\n--     USE_GLOO_IBVERBS    : OFF\n--   USE_LEVELDB           : ON\n--     LevelDB version     : 1.15\n--     Snappy version      : 1.1.0\n--   USE_LITE_PROTO        : OFF\n--   USE_LMDB              : ON\n--     LMDB version        : 0.9.16\n--   USE_METAL             : OFF\n--   USE_MKL               : \n--   USE_MOBILE_OPENGL     : OFF\n--   USE_MPI               : ON\n--   USE_NCCL              : ON\n--     USE_SYSTEM_NCCL     : OFF\n--   USE_NERVANA_GPU       : OFF\n--   USE_NNPACK            : ON\n--   USE_OBSERVERS         : ON\n--   USE_OPENCL            : OFF\n--   USE_OPENCV            : ON\n--     OpenCV version      : 3.4.1\n--   USE_OPENMP            : OFF\n--   USE_PROF              : OFF\n--   USE_REDIS             : OFF\n--   USE_ROCKSDB           : OFF\n--   USE_ZMQ               : OFF\n-- Configuring done\n-- Generating done\n-- Build files have been written to: /home/atlantix/pytorch/build\n</code></pre>\n<ul>\n<li>Error message:</li>\n</ul>\n<pre><code>[ 67%] Linking CXX shared library ../lib/libcaffe2.so\n/usr/bin/ld: cannot find -lnvrtc\ncollect2: error: ld returned 1 exit status\nmake[2]: *** [lib/libcaffe2.so.1] Error 1\nmake[1]: *** [caffe2/CMakeFiles/caffe2.dir/all] Error 2\nmake: *** [all] Error 2\n</code></pre>\n<p>My installation command is very simple: <code>cmake ..</code> and <code>make</code>, but it failed in the second step.<br>\nI notice that <code>libnvrtc</code> can be found in <code>ldconfig</code>, and is found by cmake, but failed in make.<br>\nCan anyone help?</p>", "body_text": "System: Linux fit16 4.4.0-94-generic #117~14.04.1-Ubuntu SMP Wed Aug 30 06:50:25 UTC 2017 x86_64 x86_64 x86_64 GNU/Linux\nInstruction: https://caffe2.ai/docs/getting-started.html?platform=ubuntu&configuration=compile failed at make step\nno other flags. cmake ..\nCMake output:\n\n-- The CXX compiler identification is GNU 4.8.5\n-- The C compiler identification is GNU 4.8.5\n-- Check for working CXX compiler: /usr/bin/c++\n-- Check for working CXX compiler: /usr/bin/c++ -- works\n-- Detecting CXX compiler ABI info\n-- Detecting CXX compiler ABI info - done\n-- Detecting CXX compile features\n-- Detecting CXX compile features - done\n-- Check for working C compiler: /usr/bin/cc\n-- Check for working C compiler: /usr/bin/cc -- works\n-- Detecting C compiler ABI info\n-- Detecting C compiler ABI info - done\n-- Detecting C compile features\n-- Detecting C compile features - done\n-- Not forcing any particular BLAS to be found\n-- Build type not set - defaulting to Release\n-- Performing Test CAFFE2_LONG_IS_INT32_OR_64\n-- Performing Test CAFFE2_LONG_IS_INT32_OR_64 - Success\n-- Does not need to define long separately.\n-- Performing Test CAFFE2_EXCEPTION_PTR_SUPPORTED\n-- Performing Test CAFFE2_EXCEPTION_PTR_SUPPORTED - Success\n-- std::exception_ptr is supported.\n-- Performing Test CAFFE2_IS_NUMA_AVAILABLE\n-- Performing Test CAFFE2_IS_NUMA_AVAILABLE - Failed\n-- NUMA is not available\n-- Performing Test CAFFE2_NEED_TO_TURN_OFF_DEPRECATION_WARNING\n-- Performing Test CAFFE2_NEED_TO_TURN_OFF_DEPRECATION_WARNING - Failed\n-- Turning off deprecation warning due to glog.\n-- Performing Test CAFFE2_COMPILER_SUPPORTS_AVX2_EXTENSIONS\n-- Performing Test CAFFE2_COMPILER_SUPPORTS_AVX2_EXTENSIONS - Success\n-- Current compiler supports avx2 extention. Will build perfkernels.\n-- Performing Test COMPILER_SUPPORTS_HIDDEN_VISIBILITY\n-- Performing Test COMPILER_SUPPORTS_HIDDEN_VISIBILITY - Success\n-- Performing Test COMPILER_SUPPORTS_HIDDEN_INLINE_VISIBILITY\n-- Performing Test COMPILER_SUPPORTS_HIDDEN_INLINE_VISIBILITY - Success\n-- Building using own protobuf under third_party per request.\n-- Use custom protobuf build.\n-- Looking for pthread.h\n-- Looking for pthread.h - found\n-- Looking for pthread_create\n-- Looking for pthread_create - not found\n-- Looking for pthread_create in pthreads\n-- Looking for pthread_create in pthreads - not found\n-- Looking for pthread_create in pthread\n-- Looking for pthread_create in pthread - found\n-- Found Threads: TRUE  \n-- Caffe2 protobuf include directory: $<BUILD_INTERFACE:/home/atlantix/pytorch/third_party/protobuf/src>$<INSTALL_INTERFACE:include>\n-- Found Git: /usr/bin/git (found version \"1.9.1\") \n-- The BLAS backend of choice:Eigen\n-- Brace yourself, we are building NNPACK\n-- The ASM compiler identification is GNU\n-- Found assembler: /usr/bin/cc\n-- Found PythonInterp: /usr/bin/python (found version \"2.7.6\") \n-- Check if compiler accepts -pthread\n-- Check if compiler accepts -pthread - yes\n-- Caffe2: Cannot find gflags automatically. Using legacy find.\n-- Found gflags: /usr/include  \n-- Caffe2: Found gflags  (include: /usr/include, library: /usr/lib/x86_64-linux-gnu/libgflags.so)\n-- Caffe2: Cannot find glog automatically. Using legacy find.\n-- Found glog: /usr/include  \n-- Caffe2: Found glog (include: /usr/include, library: /usr/lib/x86_64-linux-gnu/libglog.so)\n-- Failed to find LLVM FileCheck\n-- git Version: v0.0.0\n-- Version: 0.0.0\n-- Performing Test HAVE_CXX_FLAG_STD_CXX11\n-- Performing Test HAVE_CXX_FLAG_STD_CXX11 - Success\n-- Performing Test HAVE_CXX_FLAG_WALL\n-- Performing Test HAVE_CXX_FLAG_WALL - Success\n-- Performing Test HAVE_CXX_FLAG_WEXTRA\n-- Performing Test HAVE_CXX_FLAG_WEXTRA - Success\n-- Performing Test HAVE_CXX_FLAG_WSHADOW\n-- Performing Test HAVE_CXX_FLAG_WSHADOW - Success\n-- Performing Test HAVE_CXX_FLAG_WERROR\n-- Performing Test HAVE_CXX_FLAG_WERROR - Success\n-- Performing Test HAVE_CXX_FLAG_PEDANTIC\n-- Performing Test HAVE_CXX_FLAG_PEDANTIC - Success\n-- Performing Test HAVE_CXX_FLAG_PEDANTIC_ERRORS\n-- Performing Test HAVE_CXX_FLAG_PEDANTIC_ERRORS - Success\n-- Performing Test HAVE_CXX_FLAG_WSHORTEN_64_TO_32\n-- Performing Test HAVE_CXX_FLAG_WSHORTEN_64_TO_32 - Failed\n-- Performing Test HAVE_CXX_FLAG_WFLOAT_EQUAL\n-- Performing Test HAVE_CXX_FLAG_WFLOAT_EQUAL - Success\n-- Performing Test HAVE_CXX_FLAG_FSTRICT_ALIASING\n-- Performing Test HAVE_CXX_FLAG_FSTRICT_ALIASING - Success\n-- Performing Test HAVE_CXX_FLAG_WSTRICT_ALIASING\n-- Performing Test HAVE_CXX_FLAG_WSTRICT_ALIASING - Success\n-- Performing Test HAVE_CXX_FLAG_WD654\n-- Performing Test HAVE_CXX_FLAG_WD654 - Failed\n-- Performing Test HAVE_CXX_FLAG_WTHREAD_SAFETY\n-- Performing Test HAVE_CXX_FLAG_WTHREAD_SAFETY - Failed\n-- Performing Test HAVE_CXX_FLAG_COVERAGE\n-- Performing Test HAVE_CXX_FLAG_COVERAGE - Success\n-- Performing Test HAVE_STD_REGEX\n-- Performing Test HAVE_STD_REGEX\n-- Performing Test HAVE_STD_REGEX -- compiled but failed to run\n-- Performing Test HAVE_GNU_POSIX_REGEX\n-- Performing Test HAVE_GNU_POSIX_REGEX\n-- Performing Test HAVE_GNU_POSIX_REGEX -- failed to compile\n-- Performing Test HAVE_POSIX_REGEX\n-- Performing Test HAVE_POSIX_REGEX\n-- Performing Test HAVE_POSIX_REGEX -- success\n-- Performing Test HAVE_STEADY_CLOCK\n-- Performing Test HAVE_STEADY_CLOCK\n-- Performing Test HAVE_STEADY_CLOCK -- success\n-- Found LMDB: /usr/include  \n-- Found lmdb    (include: /usr/include, library: /usr/lib/x86_64-linux-gnu/liblmdb.so)\n-- Found LevelDB: /usr/include  \n-- Found LevelDB (include: /usr/include, library: /usr/lib/x86_64-linux-gnu/libleveldb.so)\n-- Found Snappy: /usr/include  \n-- Found Snappy  (include: /usr/include, library: /usr/lib/libsnappy.so)\n-- Could NOT find Numa (missing: Numa_INCLUDE_DIR Numa_LIBRARIES) \nCMake Warning at cmake/Dependencies.cmake:243 (message):\n  Not compiling with NUMA.  Suppress this warning with -DUSE_NUMA=OFF\nCall Stack (most recent call first):\n  CMakeLists.txt:188 (include)\n\n\n-- OpenCV found (/usr/local/share/OpenCV)\nCMake Warning at cmake/Dependencies.cmake:309 (find_package):\n  By not providing \"FindEigen3.cmake\" in CMAKE_MODULE_PATH this project has\n  asked CMake to find a package configuration file provided by \"Eigen3\", but\n  CMake did not find one.\n\n  Could not find a package configuration file provided by \"Eigen3\" with any\n  of the following names:\n\n    Eigen3Config.cmake\n    eigen3-config.cmake\n\n  Add the installation prefix of \"Eigen3\" to CMAKE_PREFIX_PATH or set\n  \"Eigen3_DIR\" to a directory containing one of the above files.  If \"Eigen3\"\n  provides a separate development package or SDK, be sure it has been\n  installed.\nCall Stack (most recent call first):\n  CMakeLists.txt:188 (include)\n\n\n-- Did not find system Eigen. Using third party subdirectory.\n-- Found PythonInterp: /usr/bin/python (found suitable version \"2.7.6\", minimum required is \"2.7\") \n-- Found PythonLibs: /usr/lib/x86_64-linux-gnu/libpython2.7.so (found suitable version \"2.7.6\", minimum required is \"2.7\") \n-- Found NumPy: /usr/local/lib/python2.7/dist-packages/numpy/core/include (found version \"1.13.3\") \n-- NumPy ver. 1.13.3 found (include: /usr/local/lib/python2.7/dist-packages/numpy/core/include)\n-- Could NOT find pybind11 (missing: pybind11_INCLUDE_DIR) \n-- Found MPI_C: /usr/lib/libmpi.so (found version \"2.1\") \n-- Found MPI_CXX: /usr/lib/libmpi_cxx.so (found version \"2.1\") \n-- Found MPI: TRUE (found version \"2.1\")  \n-- MPI support found\n-- MPI compile flags: -pthread\n-- MPI include path: /usr/lib/openmpi/include/openmpi/usr/lib/openmpi/include\n-- MPI LINK flags path: -L/usr/lib/openmpi/lib -pthread\n-- MPI libraries: /usr/lib/libmpi_cxx.so/usr/lib/libmpi.so/usr/lib/x86_64-linux-gnu/libdl.so/usr/lib/x86_64-linux-gnu/libhwloc.so\nCMake Warning at cmake/Dependencies.cmake:364 (message):\n  OpenMPI found, but it is not built with CUDA support.\nCall Stack (most recent call first):\n  CMakeLists.txt:188 (include)\n\n\n-- Found CUDA: /usr/local/cuda-8.0 (found suitable version \"8.0\", minimum required is \"7.0\") \n-- Found CUDNN: /usr/local/cuda-8.0/include  \n-- Caffe2: CUDA detected: 8.0\n-- Found cuDNN: v6.0.21  (include: /usr/local/cuda-8.0/include, library: /usr/local/cuda-8.0/lib64/libcudnn.so)\n-- Automatic GPU detection failed. Building for all known architectures.\n-- Added CUDA NVCC flags for: sm_30 sm_35 sm_50 sm_52 sm_60 sm_61\n-- Could NOT find NCCL (missing: NCCL_INCLUDE_DIRS NCCL_LIBRARIES) \n-- Could NOT find CUB (missing: CUB_INCLUDE_DIR) \n-- Could NOT find Gloo (missing: Gloo_INCLUDE_DIR Gloo_LIBRARY) \n-- MPI include path: /usr/lib/openmpi/include/openmpi/usr/lib/openmpi/include\n-- MPI libraries: /usr/lib/libmpi_cxx.so/usr/lib/libmpi.so/usr/lib/x86_64-linux-gnu/libdl.so/usr/lib/x86_64-linux-gnu/libhwloc.so\n-- CUDA detected: 8.0\n-- Found libcuda: /usr/lib/x86_64-linux-gnu/libcuda.so\n-- Found libnvrtc: /usr/local/cuda-8.0/lib64/libnvrtc.so\n-- Found nccl: /home/atlantix/pytorch/third_party/nccl/build/include  \nCMake Warning at cmake/Dependencies.cmake:551 (message):\n  mobile opengl is only used in android or ios builds.\nCall Stack (most recent call first):\n  CMakeLists.txt:188 (include)\n\n\nCMake Warning at cmake/Dependencies.cmake:627 (message):\n  Metal is only used in ios builds.\nCall Stack (most recent call first):\n  CMakeLists.txt:188 (include)\n\n\n-- GCC 4.8.5: Adding gcc and gcc_s libs to link line\n-- Include NCCL operators\n-- Excluding ideep operators as we are not using ideep\n-- Including image processing operators\n-- Excluding video processing operators due to no opencv\n-- Excluding mkl operators as we are not using mkl\n-- Include Observer library\n-- Using lib/python2.7/dist-packages as python relative installation path\n-- Automatically generating missing __init__.py files.\nCMake Warning at CMakeLists.txt:318 (message):\n  Generated cmake files are only fully tested if one builds with system glog,\n  gflags, and protobuf.  Other settings may generate files that are not well\n  tested.\n\n\n-- \n-- ******** Summary ********\n-- General:\n--   CMake version         : 3.11.2\n--   CMake command         : /usr/local/bin/cmake\n--   Git version           : v0.1.11-8572-g45cdb63\n--   System                : Linux\n--   C++ compiler          : /usr/bin/c++\n--   C++ compiler version  : 4.8.5\n--   BLAS                  : Eigen\n--   CXX flags             :  -Wno-deprecated -fvisibility-inlines-hidden -DONNX_NAMESPACE=onnx_c2 -O2 -fPIC -Wno-narrowing -Wno-invalid-partial-specialization\n--   Build type            : Release\n--   Compile definitions   : \n-- \n--   BUILD_CAFFE2          : ON\n--   BUILD_ATEN            : OFF\n--   BUILD_BINARY          : ON\n--   BUILD_CUSTOM_PROTOBUF : ON\n--     Link local protobuf : ON\n--   BUILD_DOCS            : OFF\n--   BUILD_PYTHON          : ON\n--     Python version      : 2.7.6\n--     Python includes     : /usr/include/python2.7\n--   BUILD_SHARED_LIBS     : ON\n--   BUILD_TEST            : ON\n--   USE_ASAN              : OFF\n--   USE_CUDA              : ON\n--     CUDA static link    : OFF\n--     USE_CUDNN           : ON\n--     CUDA version        : 8.0\n--     cuDNN version       : 6.0.21\n--     CUDA root directory : /usr/local/cuda-8.0\n--     CUDA library        : /usr/lib/x86_64-linux-gnu/libcuda.so\n--     cudart library      : /usr/local/cuda-8.0/lib64/libcudart_static.a;-pthread;dl;/usr/lib/x86_64-linux-gnu/librt.so\n--     cublas library      : /usr/local/cuda-8.0/lib64/libcublas.so;/usr/local/cuda-8.0/lib64/libcublas_device.a\n--     cufft library       : /usr/local/cuda-8.0/lib64/libcufft.so\n--     curand library      : /usr/local/cuda-8.0/lib64/libcurand.so\n--     cuDNN library       : /usr/local/cuda-8.0/lib64/libcudnn.so\n--     nvrtc               : /usr/local/cuda-8.0/lib64/libnvrtc.so\n--     CUDA include path   : /usr/local/cuda-8.0/include\n--     NVCC executable     : /usr/local/cuda-8.0/bin/nvcc\n--     CUDA host compiler  : /usr/bin/cc\n--     USE_TENSORRT        : OFF\n--   USE_ROCM              : OFF\n--   USE_EIGEN_FOR_BLAS    : ON\n--   USE_FFMPEG            : OFF\n--   USE_GFLAGS            : ON\n--   USE_GLOG              : ON\n--   USE_GLOO              : ON\n--     USE_GLOO_IBVERBS    : OFF\n--   USE_LEVELDB           : ON\n--     LevelDB version     : 1.15\n--     Snappy version      : 1.1.0\n--   USE_LITE_PROTO        : OFF\n--   USE_LMDB              : ON\n--     LMDB version        : 0.9.16\n--   USE_METAL             : OFF\n--   USE_MKL               : \n--   USE_MOBILE_OPENGL     : OFF\n--   USE_MPI               : ON\n--   USE_NCCL              : ON\n--     USE_SYSTEM_NCCL     : OFF\n--   USE_NERVANA_GPU       : OFF\n--   USE_NNPACK            : ON\n--   USE_OBSERVERS         : ON\n--   USE_OPENCL            : OFF\n--   USE_OPENCV            : ON\n--     OpenCV version      : 3.4.1\n--   USE_OPENMP            : OFF\n--   USE_PROF              : OFF\n--   USE_REDIS             : OFF\n--   USE_ROCKSDB           : OFF\n--   USE_ZMQ               : OFF\n-- Configuring done\n-- Generating done\n-- Build files have been written to: /home/atlantix/pytorch/build\n\n\nError message:\n\n[ 67%] Linking CXX shared library ../lib/libcaffe2.so\n/usr/bin/ld: cannot find -lnvrtc\ncollect2: error: ld returned 1 exit status\nmake[2]: *** [lib/libcaffe2.so.1] Error 1\nmake[1]: *** [caffe2/CMakeFiles/caffe2.dir/all] Error 2\nmake: *** [all] Error 2\n\nMy installation command is very simple: cmake .. and make, but it failed in the second step.\nI notice that libnvrtc can be found in ldconfig, and is found by cmake, but failed in make.\nCan anyone help?", "body": "* System: Linux fit16 4.4.0-94-generic #117~14.04.1-Ubuntu SMP Wed Aug 30 06:50:25 UTC 2017 x86_64 x86_64 x86_64 GNU/Linux\r\n* Instruction: https://caffe2.ai/docs/getting-started.html?platform=ubuntu&configuration=compile failed at `make` step\r\n* no other flags. `cmake ..`\r\n* CMake output:\r\n\r\n```\r\n-- The CXX compiler identification is GNU 4.8.5\r\n-- The C compiler identification is GNU 4.8.5\r\n-- Check for working CXX compiler: /usr/bin/c++\r\n-- Check for working CXX compiler: /usr/bin/c++ -- works\r\n-- Detecting CXX compiler ABI info\r\n-- Detecting CXX compiler ABI info - done\r\n-- Detecting CXX compile features\r\n-- Detecting CXX compile features - done\r\n-- Check for working C compiler: /usr/bin/cc\r\n-- Check for working C compiler: /usr/bin/cc -- works\r\n-- Detecting C compiler ABI info\r\n-- Detecting C compiler ABI info - done\r\n-- Detecting C compile features\r\n-- Detecting C compile features - done\r\n-- Not forcing any particular BLAS to be found\r\n-- Build type not set - defaulting to Release\r\n-- Performing Test CAFFE2_LONG_IS_INT32_OR_64\r\n-- Performing Test CAFFE2_LONG_IS_INT32_OR_64 - Success\r\n-- Does not need to define long separately.\r\n-- Performing Test CAFFE2_EXCEPTION_PTR_SUPPORTED\r\n-- Performing Test CAFFE2_EXCEPTION_PTR_SUPPORTED - Success\r\n-- std::exception_ptr is supported.\r\n-- Performing Test CAFFE2_IS_NUMA_AVAILABLE\r\n-- Performing Test CAFFE2_IS_NUMA_AVAILABLE - Failed\r\n-- NUMA is not available\r\n-- Performing Test CAFFE2_NEED_TO_TURN_OFF_DEPRECATION_WARNING\r\n-- Performing Test CAFFE2_NEED_TO_TURN_OFF_DEPRECATION_WARNING - Failed\r\n-- Turning off deprecation warning due to glog.\r\n-- Performing Test CAFFE2_COMPILER_SUPPORTS_AVX2_EXTENSIONS\r\n-- Performing Test CAFFE2_COMPILER_SUPPORTS_AVX2_EXTENSIONS - Success\r\n-- Current compiler supports avx2 extention. Will build perfkernels.\r\n-- Performing Test COMPILER_SUPPORTS_HIDDEN_VISIBILITY\r\n-- Performing Test COMPILER_SUPPORTS_HIDDEN_VISIBILITY - Success\r\n-- Performing Test COMPILER_SUPPORTS_HIDDEN_INLINE_VISIBILITY\r\n-- Performing Test COMPILER_SUPPORTS_HIDDEN_INLINE_VISIBILITY - Success\r\n-- Building using own protobuf under third_party per request.\r\n-- Use custom protobuf build.\r\n-- Looking for pthread.h\r\n-- Looking for pthread.h - found\r\n-- Looking for pthread_create\r\n-- Looking for pthread_create - not found\r\n-- Looking for pthread_create in pthreads\r\n-- Looking for pthread_create in pthreads - not found\r\n-- Looking for pthread_create in pthread\r\n-- Looking for pthread_create in pthread - found\r\n-- Found Threads: TRUE  \r\n-- Caffe2 protobuf include directory: $<BUILD_INTERFACE:/home/atlantix/pytorch/third_party/protobuf/src>$<INSTALL_INTERFACE:include>\r\n-- Found Git: /usr/bin/git (found version \"1.9.1\") \r\n-- The BLAS backend of choice:Eigen\r\n-- Brace yourself, we are building NNPACK\r\n-- The ASM compiler identification is GNU\r\n-- Found assembler: /usr/bin/cc\r\n-- Found PythonInterp: /usr/bin/python (found version \"2.7.6\") \r\n-- Check if compiler accepts -pthread\r\n-- Check if compiler accepts -pthread - yes\r\n-- Caffe2: Cannot find gflags automatically. Using legacy find.\r\n-- Found gflags: /usr/include  \r\n-- Caffe2: Found gflags  (include: /usr/include, library: /usr/lib/x86_64-linux-gnu/libgflags.so)\r\n-- Caffe2: Cannot find glog automatically. Using legacy find.\r\n-- Found glog: /usr/include  \r\n-- Caffe2: Found glog (include: /usr/include, library: /usr/lib/x86_64-linux-gnu/libglog.so)\r\n-- Failed to find LLVM FileCheck\r\n-- git Version: v0.0.0\r\n-- Version: 0.0.0\r\n-- Performing Test HAVE_CXX_FLAG_STD_CXX11\r\n-- Performing Test HAVE_CXX_FLAG_STD_CXX11 - Success\r\n-- Performing Test HAVE_CXX_FLAG_WALL\r\n-- Performing Test HAVE_CXX_FLAG_WALL - Success\r\n-- Performing Test HAVE_CXX_FLAG_WEXTRA\r\n-- Performing Test HAVE_CXX_FLAG_WEXTRA - Success\r\n-- Performing Test HAVE_CXX_FLAG_WSHADOW\r\n-- Performing Test HAVE_CXX_FLAG_WSHADOW - Success\r\n-- Performing Test HAVE_CXX_FLAG_WERROR\r\n-- Performing Test HAVE_CXX_FLAG_WERROR - Success\r\n-- Performing Test HAVE_CXX_FLAG_PEDANTIC\r\n-- Performing Test HAVE_CXX_FLAG_PEDANTIC - Success\r\n-- Performing Test HAVE_CXX_FLAG_PEDANTIC_ERRORS\r\n-- Performing Test HAVE_CXX_FLAG_PEDANTIC_ERRORS - Success\r\n-- Performing Test HAVE_CXX_FLAG_WSHORTEN_64_TO_32\r\n-- Performing Test HAVE_CXX_FLAG_WSHORTEN_64_TO_32 - Failed\r\n-- Performing Test HAVE_CXX_FLAG_WFLOAT_EQUAL\r\n-- Performing Test HAVE_CXX_FLAG_WFLOAT_EQUAL - Success\r\n-- Performing Test HAVE_CXX_FLAG_FSTRICT_ALIASING\r\n-- Performing Test HAVE_CXX_FLAG_FSTRICT_ALIASING - Success\r\n-- Performing Test HAVE_CXX_FLAG_WSTRICT_ALIASING\r\n-- Performing Test HAVE_CXX_FLAG_WSTRICT_ALIASING - Success\r\n-- Performing Test HAVE_CXX_FLAG_WD654\r\n-- Performing Test HAVE_CXX_FLAG_WD654 - Failed\r\n-- Performing Test HAVE_CXX_FLAG_WTHREAD_SAFETY\r\n-- Performing Test HAVE_CXX_FLAG_WTHREAD_SAFETY - Failed\r\n-- Performing Test HAVE_CXX_FLAG_COVERAGE\r\n-- Performing Test HAVE_CXX_FLAG_COVERAGE - Success\r\n-- Performing Test HAVE_STD_REGEX\r\n-- Performing Test HAVE_STD_REGEX\r\n-- Performing Test HAVE_STD_REGEX -- compiled but failed to run\r\n-- Performing Test HAVE_GNU_POSIX_REGEX\r\n-- Performing Test HAVE_GNU_POSIX_REGEX\r\n-- Performing Test HAVE_GNU_POSIX_REGEX -- failed to compile\r\n-- Performing Test HAVE_POSIX_REGEX\r\n-- Performing Test HAVE_POSIX_REGEX\r\n-- Performing Test HAVE_POSIX_REGEX -- success\r\n-- Performing Test HAVE_STEADY_CLOCK\r\n-- Performing Test HAVE_STEADY_CLOCK\r\n-- Performing Test HAVE_STEADY_CLOCK -- success\r\n-- Found LMDB: /usr/include  \r\n-- Found lmdb    (include: /usr/include, library: /usr/lib/x86_64-linux-gnu/liblmdb.so)\r\n-- Found LevelDB: /usr/include  \r\n-- Found LevelDB (include: /usr/include, library: /usr/lib/x86_64-linux-gnu/libleveldb.so)\r\n-- Found Snappy: /usr/include  \r\n-- Found Snappy  (include: /usr/include, library: /usr/lib/libsnappy.so)\r\n-- Could NOT find Numa (missing: Numa_INCLUDE_DIR Numa_LIBRARIES) \r\nCMake Warning at cmake/Dependencies.cmake:243 (message):\r\n  Not compiling with NUMA.  Suppress this warning with -DUSE_NUMA=OFF\r\nCall Stack (most recent call first):\r\n  CMakeLists.txt:188 (include)\r\n\r\n\r\n-- OpenCV found (/usr/local/share/OpenCV)\r\nCMake Warning at cmake/Dependencies.cmake:309 (find_package):\r\n  By not providing \"FindEigen3.cmake\" in CMAKE_MODULE_PATH this project has\r\n  asked CMake to find a package configuration file provided by \"Eigen3\", but\r\n  CMake did not find one.\r\n\r\n  Could not find a package configuration file provided by \"Eigen3\" with any\r\n  of the following names:\r\n\r\n    Eigen3Config.cmake\r\n    eigen3-config.cmake\r\n\r\n  Add the installation prefix of \"Eigen3\" to CMAKE_PREFIX_PATH or set\r\n  \"Eigen3_DIR\" to a directory containing one of the above files.  If \"Eigen3\"\r\n  provides a separate development package or SDK, be sure it has been\r\n  installed.\r\nCall Stack (most recent call first):\r\n  CMakeLists.txt:188 (include)\r\n\r\n\r\n-- Did not find system Eigen. Using third party subdirectory.\r\n-- Found PythonInterp: /usr/bin/python (found suitable version \"2.7.6\", minimum required is \"2.7\") \r\n-- Found PythonLibs: /usr/lib/x86_64-linux-gnu/libpython2.7.so (found suitable version \"2.7.6\", minimum required is \"2.7\") \r\n-- Found NumPy: /usr/local/lib/python2.7/dist-packages/numpy/core/include (found version \"1.13.3\") \r\n-- NumPy ver. 1.13.3 found (include: /usr/local/lib/python2.7/dist-packages/numpy/core/include)\r\n-- Could NOT find pybind11 (missing: pybind11_INCLUDE_DIR) \r\n-- Found MPI_C: /usr/lib/libmpi.so (found version \"2.1\") \r\n-- Found MPI_CXX: /usr/lib/libmpi_cxx.so (found version \"2.1\") \r\n-- Found MPI: TRUE (found version \"2.1\")  \r\n-- MPI support found\r\n-- MPI compile flags: -pthread\r\n-- MPI include path: /usr/lib/openmpi/include/openmpi/usr/lib/openmpi/include\r\n-- MPI LINK flags path: -L/usr/lib/openmpi/lib -pthread\r\n-- MPI libraries: /usr/lib/libmpi_cxx.so/usr/lib/libmpi.so/usr/lib/x86_64-linux-gnu/libdl.so/usr/lib/x86_64-linux-gnu/libhwloc.so\r\nCMake Warning at cmake/Dependencies.cmake:364 (message):\r\n  OpenMPI found, but it is not built with CUDA support.\r\nCall Stack (most recent call first):\r\n  CMakeLists.txt:188 (include)\r\n\r\n\r\n-- Found CUDA: /usr/local/cuda-8.0 (found suitable version \"8.0\", minimum required is \"7.0\") \r\n-- Found CUDNN: /usr/local/cuda-8.0/include  \r\n-- Caffe2: CUDA detected: 8.0\r\n-- Found cuDNN: v6.0.21  (include: /usr/local/cuda-8.0/include, library: /usr/local/cuda-8.0/lib64/libcudnn.so)\r\n-- Automatic GPU detection failed. Building for all known architectures.\r\n-- Added CUDA NVCC flags for: sm_30 sm_35 sm_50 sm_52 sm_60 sm_61\r\n-- Could NOT find NCCL (missing: NCCL_INCLUDE_DIRS NCCL_LIBRARIES) \r\n-- Could NOT find CUB (missing: CUB_INCLUDE_DIR) \r\n-- Could NOT find Gloo (missing: Gloo_INCLUDE_DIR Gloo_LIBRARY) \r\n-- MPI include path: /usr/lib/openmpi/include/openmpi/usr/lib/openmpi/include\r\n-- MPI libraries: /usr/lib/libmpi_cxx.so/usr/lib/libmpi.so/usr/lib/x86_64-linux-gnu/libdl.so/usr/lib/x86_64-linux-gnu/libhwloc.so\r\n-- CUDA detected: 8.0\r\n-- Found libcuda: /usr/lib/x86_64-linux-gnu/libcuda.so\r\n-- Found libnvrtc: /usr/local/cuda-8.0/lib64/libnvrtc.so\r\n-- Found nccl: /home/atlantix/pytorch/third_party/nccl/build/include  \r\nCMake Warning at cmake/Dependencies.cmake:551 (message):\r\n  mobile opengl is only used in android or ios builds.\r\nCall Stack (most recent call first):\r\n  CMakeLists.txt:188 (include)\r\n\r\n\r\nCMake Warning at cmake/Dependencies.cmake:627 (message):\r\n  Metal is only used in ios builds.\r\nCall Stack (most recent call first):\r\n  CMakeLists.txt:188 (include)\r\n\r\n\r\n-- GCC 4.8.5: Adding gcc and gcc_s libs to link line\r\n-- Include NCCL operators\r\n-- Excluding ideep operators as we are not using ideep\r\n-- Including image processing operators\r\n-- Excluding video processing operators due to no opencv\r\n-- Excluding mkl operators as we are not using mkl\r\n-- Include Observer library\r\n-- Using lib/python2.7/dist-packages as python relative installation path\r\n-- Automatically generating missing __init__.py files.\r\nCMake Warning at CMakeLists.txt:318 (message):\r\n  Generated cmake files are only fully tested if one builds with system glog,\r\n  gflags, and protobuf.  Other settings may generate files that are not well\r\n  tested.\r\n\r\n\r\n-- \r\n-- ******** Summary ********\r\n-- General:\r\n--   CMake version         : 3.11.2\r\n--   CMake command         : /usr/local/bin/cmake\r\n--   Git version           : v0.1.11-8572-g45cdb63\r\n--   System                : Linux\r\n--   C++ compiler          : /usr/bin/c++\r\n--   C++ compiler version  : 4.8.5\r\n--   BLAS                  : Eigen\r\n--   CXX flags             :  -Wno-deprecated -fvisibility-inlines-hidden -DONNX_NAMESPACE=onnx_c2 -O2 -fPIC -Wno-narrowing -Wno-invalid-partial-specialization\r\n--   Build type            : Release\r\n--   Compile definitions   : \r\n-- \r\n--   BUILD_CAFFE2          : ON\r\n--   BUILD_ATEN            : OFF\r\n--   BUILD_BINARY          : ON\r\n--   BUILD_CUSTOM_PROTOBUF : ON\r\n--     Link local protobuf : ON\r\n--   BUILD_DOCS            : OFF\r\n--   BUILD_PYTHON          : ON\r\n--     Python version      : 2.7.6\r\n--     Python includes     : /usr/include/python2.7\r\n--   BUILD_SHARED_LIBS     : ON\r\n--   BUILD_TEST            : ON\r\n--   USE_ASAN              : OFF\r\n--   USE_CUDA              : ON\r\n--     CUDA static link    : OFF\r\n--     USE_CUDNN           : ON\r\n--     CUDA version        : 8.0\r\n--     cuDNN version       : 6.0.21\r\n--     CUDA root directory : /usr/local/cuda-8.0\r\n--     CUDA library        : /usr/lib/x86_64-linux-gnu/libcuda.so\r\n--     cudart library      : /usr/local/cuda-8.0/lib64/libcudart_static.a;-pthread;dl;/usr/lib/x86_64-linux-gnu/librt.so\r\n--     cublas library      : /usr/local/cuda-8.0/lib64/libcublas.so;/usr/local/cuda-8.0/lib64/libcublas_device.a\r\n--     cufft library       : /usr/local/cuda-8.0/lib64/libcufft.so\r\n--     curand library      : /usr/local/cuda-8.0/lib64/libcurand.so\r\n--     cuDNN library       : /usr/local/cuda-8.0/lib64/libcudnn.so\r\n--     nvrtc               : /usr/local/cuda-8.0/lib64/libnvrtc.so\r\n--     CUDA include path   : /usr/local/cuda-8.0/include\r\n--     NVCC executable     : /usr/local/cuda-8.0/bin/nvcc\r\n--     CUDA host compiler  : /usr/bin/cc\r\n--     USE_TENSORRT        : OFF\r\n--   USE_ROCM              : OFF\r\n--   USE_EIGEN_FOR_BLAS    : ON\r\n--   USE_FFMPEG            : OFF\r\n--   USE_GFLAGS            : ON\r\n--   USE_GLOG              : ON\r\n--   USE_GLOO              : ON\r\n--     USE_GLOO_IBVERBS    : OFF\r\n--   USE_LEVELDB           : ON\r\n--     LevelDB version     : 1.15\r\n--     Snappy version      : 1.1.0\r\n--   USE_LITE_PROTO        : OFF\r\n--   USE_LMDB              : ON\r\n--     LMDB version        : 0.9.16\r\n--   USE_METAL             : OFF\r\n--   USE_MKL               : \r\n--   USE_MOBILE_OPENGL     : OFF\r\n--   USE_MPI               : ON\r\n--   USE_NCCL              : ON\r\n--     USE_SYSTEM_NCCL     : OFF\r\n--   USE_NERVANA_GPU       : OFF\r\n--   USE_NNPACK            : ON\r\n--   USE_OBSERVERS         : ON\r\n--   USE_OPENCL            : OFF\r\n--   USE_OPENCV            : ON\r\n--     OpenCV version      : 3.4.1\r\n--   USE_OPENMP            : OFF\r\n--   USE_PROF              : OFF\r\n--   USE_REDIS             : OFF\r\n--   USE_ROCKSDB           : OFF\r\n--   USE_ZMQ               : OFF\r\n-- Configuring done\r\n-- Generating done\r\n-- Build files have been written to: /home/atlantix/pytorch/build\r\n```\r\n\r\n* Error message:\r\n\r\n```\r\n[ 67%] Linking CXX shared library ../lib/libcaffe2.so\r\n/usr/bin/ld: cannot find -lnvrtc\r\ncollect2: error: ld returned 1 exit status\r\nmake[2]: *** [lib/libcaffe2.so.1] Error 1\r\nmake[1]: *** [caffe2/CMakeFiles/caffe2.dir/all] Error 2\r\nmake: *** [all] Error 2\r\n```\r\n\r\nMy installation command is very simple: `cmake ..` and `make`, but it failed in the second step.\r\nI notice that `libnvrtc` can be found in `ldconfig`, and is found by cmake, but failed in make.\r\nCan anyone help? "}