{"url": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/151535932", "pull_request_review_id": 77260414, "id": 151535932, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE1MTUzNTkzMg==", "diff_hunk": "@@ -0,0 +1,297 @@\n+#include \"torch/csrc/autograd/python_variable_indexing.h\"\n+\n+#include \"torch/csrc/DynamicTypes.h\"\n+#include \"torch/csrc/Exceptions.h\"\n+#include \"torch/csrc/autograd/python_variable.h\"\n+#include \"torch/csrc/autograd/utils/wrap_outputs.h\"\n+#include \"torch/csrc/utils/python_compat.h\"\n+#include \"torch/csrc/utils/python_numbers.h\"\n+\n+#include <vector>\n+\n+using namespace at;\n+using namespace torch::autograd::utils;\n+\n+extern PyObject* THPLongTensorClass;\n+#ifdef WITH_CUDA\n+extern PyObject* THCPLongTensorClass;\n+#endif\n+\n+extern bool THPModule_isTensor(PyObject *obj);\n+\n+namespace torch { namespace autograd {\n+\n+Py_ssize_t THPVariable_length(PyObject* self) {\n+  HANDLE_TH_ERRORS\n+  auto& self_ = reinterpret_cast<THPVariable*>(self)->cdata;\n+  if (self_.dim() == 0) {\n+    return 0;\n+  }\n+  return (Py_ssize_t)self_.size(0);\n+  END_HANDLE_TH_ERRORS_RET(-1)\n+}\n+\n+\n+// We allow indexing by integers, slices, ellipsis, None, Variables,\n+// and tuples of those types. We also handle bools as if they were a\n+// Variable[ByteTensor].\n+\n+static int64_t count_specified_dimensions(PyObject* index) {\n+  // Count the number of indexed dimensions (everything but ellipsis and None)\n+  int64_t count = 0;\n+  auto size = PyTuple_GET_SIZE(index);\n+  for (Py_ssize_t i = 0; i < size; i++) {\n+    PyObject* obj = PyTuple_GET_ITEM(index, i);\n+    if (THPVariable_Check(obj)) {\n+      auto& var = reinterpret_cast<THPVariable*>(obj)->cdata;\n+      if (var.type().scalarType() == kByte) {\n+        count += var.dim();\n+      }\n+    } else if (obj != Py_None && obj != Py_Ellipsis) {\n+      count++;\n+    }\n+  }\n+  return count;\n+}\n+\n+[[noreturn]]\n+static void invalid_index(PyObject* obj) {\n+  throw IndexError(\n+    \"only integers, slices (`:`), ellipsis (`...`), None and long or byte \"\n+    \"Variables are valid indices (got %s)\", Py_TYPE(obj)->tp_name);", "path": "torch/csrc/autograd/python_variable_indexing.cpp", "position": 61, "original_position": 61, "commit_id": "3c591710eb478eb94498f6333c8a1428a1557933", "original_commit_id": "9435b2238f641ff3f9e7ae3bb56a41b9e91acba4", "user": {"login": "apaszke", "id": 4583066, "node_id": "MDQ6VXNlcjQ1ODMwNjY=", "avatar_url": "https://avatars3.githubusercontent.com/u/4583066?v=4", "gravatar_id": "", "url": "https://api.github.com/users/apaszke", "html_url": "https://github.com/apaszke", "followers_url": "https://api.github.com/users/apaszke/followers", "following_url": "https://api.github.com/users/apaszke/following{/other_user}", "gists_url": "https://api.github.com/users/apaszke/gists{/gist_id}", "starred_url": "https://api.github.com/users/apaszke/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/apaszke/subscriptions", "organizations_url": "https://api.github.com/users/apaszke/orgs", "repos_url": "https://api.github.com/users/apaszke/repos", "events_url": "https://api.github.com/users/apaszke/events{/privacy}", "received_events_url": "https://api.github.com/users/apaszke/received_events", "type": "User", "site_admin": false}, "body": "I think you should still mention that they have to be on a correct device", "created_at": "2017-11-16T21:02:14Z", "updated_at": "2018-11-23T15:36:36Z", "html_url": "https://github.com/pytorch/pytorch/pull/3725#discussion_r151535932", "pull_request_url": "https://api.github.com/repos/pytorch/pytorch/pulls/3725", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/151535932"}, "html": {"href": "https://github.com/pytorch/pytorch/pull/3725#discussion_r151535932"}, "pull_request": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/3725"}}, "body_html": "<p>I think you should still mention that they have to be on a correct device</p>", "body_text": "I think you should still mention that they have to be on a correct device"}