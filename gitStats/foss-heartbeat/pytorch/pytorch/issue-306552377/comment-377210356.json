{"url": "https://api.github.com/repos/pytorch/pytorch/issues/comments/377210356", "html_url": "https://github.com/pytorch/pytorch/issues/5879#issuecomment-377210356", "issue_url": "https://api.github.com/repos/pytorch/pytorch/issues/5879", "id": 377210356, "node_id": "MDEyOklzc3VlQ29tbWVudDM3NzIxMDM1Ng==", "user": {"login": "pohmelie", "id": 2385765, "node_id": "MDQ6VXNlcjIzODU3NjU=", "avatar_url": "https://avatars2.githubusercontent.com/u/2385765?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pohmelie", "html_url": "https://github.com/pohmelie", "followers_url": "https://api.github.com/users/pohmelie/followers", "following_url": "https://api.github.com/users/pohmelie/following{/other_user}", "gists_url": "https://api.github.com/users/pohmelie/gists{/gist_id}", "starred_url": "https://api.github.com/users/pohmelie/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pohmelie/subscriptions", "organizations_url": "https://api.github.com/users/pohmelie/orgs", "repos_url": "https://api.github.com/users/pohmelie/repos", "events_url": "https://api.github.com/users/pohmelie/events{/privacy}", "received_events_url": "https://api.github.com/users/pohmelie/received_events", "type": "User", "site_admin": false}, "created_at": "2018-03-29T11:48:50Z", "updated_at": "2018-03-29T11:48:50Z", "author_association": "CONTRIBUTOR", "body_html": "<p>Yes, it looks like it is pickle. I add some raw pickle load and see pretty same behavior.</p>\n<div class=\"highlight highlight-source-python\"><pre><span class=\"pl-k\">import</span> asyncio\n<span class=\"pl-k\">import</span> logging\n<span class=\"pl-k\">import</span> pickle\n<span class=\"pl-k\">import</span> pathlib\n<span class=\"pl-k\">import</span> time\n<span class=\"pl-k\">import</span> contextlib\n\n<span class=\"pl-k\">import</span> torch\n\n\n<span class=\"pl-en\">@contextlib.contextmanager</span>\n<span class=\"pl-k\">def</span> <span class=\"pl-en\">timer</span>(<span class=\"pl-smi\">action</span>):\n    logging.info(<span class=\"pl-s\">f</span><span class=\"pl-pds\">\"</span><span class=\"pl-s\">start </span><span class=\"pl-c1\">{</span>action<span class=\"pl-k\">!r</span><span class=\"pl-c1\">}</span><span class=\"pl-pds\">\"</span>)\n    start <span class=\"pl-k\">=</span> time.perf_counter()\n    <span class=\"pl-k\">yield</span>\n    logging.info(<span class=\"pl-s\">f</span><span class=\"pl-pds\">\"</span><span class=\"pl-s\">action </span><span class=\"pl-c1\">{</span>action<span class=\"pl-k\">!r</span><span class=\"pl-c1\">}</span><span class=\"pl-s\"> took </span><span class=\"pl-c1\">{</span>time.perf_counter() <span class=\"pl-k\">-</span> start<span class=\"pl-k\">:.3f</span><span class=\"pl-c1\">}</span><span class=\"pl-pds\">\"</span>)\n\n\n<span class=\"pl-k\">async</span> <span class=\"pl-k\">def</span> <span class=\"pl-en\">foo</span>():\n    last_log <span class=\"pl-k\">=</span> <span class=\"pl-c1\">None</span>\n    <span class=\"pl-k\">while</span> <span class=\"pl-c1\">True</span>:\n        now <span class=\"pl-k\">=</span> time.perf_counter()\n        <span class=\"pl-k\">if</span> last_log <span class=\"pl-k\">is</span> <span class=\"pl-k\">not</span> <span class=\"pl-c1\">None</span>:\n            logging.info(<span class=\"pl-s\">f</span><span class=\"pl-pds\">\"</span><span class=\"pl-s\">0.25 sec: </span><span class=\"pl-c1\">{</span>now <span class=\"pl-k\">-</span> last_log<span class=\"pl-k\">:.3f</span><span class=\"pl-c1\">}</span><span class=\"pl-pds\">\"</span>)\n        last_log <span class=\"pl-k\">=</span> now\n        <span class=\"pl-k\">await</span> asyncio.sleep(<span class=\"pl-c1\">max</span>(<span class=\"pl-c1\">0</span>, now <span class=\"pl-k\">+</span> <span class=\"pl-c1\">0.25</span> <span class=\"pl-k\">-</span> time.perf_counter()))\n\n\n<span class=\"pl-k\">def</span> <span class=\"pl-en\">pickle_load</span>():\n    <span class=\"pl-k\">with</span> pathlib.Path(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>test.pickle<span class=\"pl-pds\">\"</span></span>).open(<span class=\"pl-v\">mode</span><span class=\"pl-k\">=</span><span class=\"pl-s\"><span class=\"pl-pds\">\"</span>rb<span class=\"pl-pds\">\"</span></span>) <span class=\"pl-k\">as</span> f:\n        <span class=\"pl-k\">return</span> pickle.load(f)\n\n\n<span class=\"pl-k\">def</span> <span class=\"pl-en\">torch_load</span>():\n    <span class=\"pl-k\">return</span> torch.load(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>model.pth<span class=\"pl-pds\">\"</span></span>)\n\n\n<span class=\"pl-k\">async</span> <span class=\"pl-k\">def</span> <span class=\"pl-en\">yoba</span>():\n    task <span class=\"pl-k\">=</span> asyncio.ensure_future(foo())\n    <span class=\"pl-k\">await</span> asyncio.sleep(<span class=\"pl-c1\">0.5</span>)\n    <span class=\"pl-k\">with</span> timer(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>pickle load<span class=\"pl-pds\">\"</span></span>):\n        <span class=\"pl-k\">await</span> loop.run_in_executor(<span class=\"pl-c1\">None</span>, pickle_load)\n    <span class=\"pl-k\">await</span> asyncio.sleep(<span class=\"pl-c1\">0.5</span>)\n    <span class=\"pl-k\">with</span> timer(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>torch load<span class=\"pl-pds\">\"</span></span>):\n        <span class=\"pl-k\">await</span> loop.run_in_executor(<span class=\"pl-c1\">None</span>, torch_load)\n    task.cancel()\n\n\nm <span class=\"pl-k\">=</span> {}\ndata <span class=\"pl-k\">=</span> <span class=\"pl-c1\">list</span>(<span class=\"pl-c1\">range</span>(<span class=\"pl-c1\">10</span> <span class=\"pl-k\">**</span> <span class=\"pl-c1\">4</span>))\n<span class=\"pl-k\">for</span> i <span class=\"pl-k\">in</span> <span class=\"pl-c1\">range</span>(<span class=\"pl-c1\">10</span> <span class=\"pl-k\">**</span> <span class=\"pl-c1\">4</span>):\n    m[i] <span class=\"pl-k\">=</span> data[:]\n\nlogging.basicConfig(<span class=\"pl-v\">level</span><span class=\"pl-k\">=</span>logging.<span class=\"pl-c1\">DEBUG</span>, <span class=\"pl-v\">format</span><span class=\"pl-k\">=</span><span class=\"pl-s\"><span class=\"pl-pds\">\"</span><span class=\"pl-c1\">%(asctime)s</span> - <span class=\"pl-c1\">%(name)s</span> - <span class=\"pl-c1\">%(levelname)s</span> - <span class=\"pl-c1\">%(message)s</span><span class=\"pl-pds\">\"</span></span>)\n<span class=\"pl-k\">with</span> timer(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>save pickled file<span class=\"pl-pds\">\"</span></span>):\n    <span class=\"pl-c\"><span class=\"pl-c\">#</span> this is ~ 280Mb pickle file</span>\n    pathlib.Path(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>test.pickle<span class=\"pl-pds\">\"</span></span>).write_bytes(pickle.dumps(m))\nasyncio.ensure_future(yoba())\nloop <span class=\"pl-k\">=</span> asyncio.get_event_loop()\nloop.run_forever()</pre></div>\n<pre><code>$ PYTHONASYNCIODEBUG=1 python pytorch-block-asyncio2.py\n2018-03-29 14:24:33,959 - root - INFO - start 'save pickled file'\n2018-03-29 14:24:37,753 - root - INFO - action 'save pickled file' took 3.794\n2018-03-29 14:24:37,754 - asyncio - DEBUG - Using selector: EpollSelector\n2018-03-29 14:24:38,008 - root - INFO - 0.25 sec: 0.251\n2018-03-29 14:24:38,257 - root - INFO - start 'pickle load'\n2018-03-29 14:24:38,259 - root - INFO - 0.25 sec: 0.251\n2018-03-29 14:24:38,512 - root - INFO - 0.25 sec: 0.253\n2018-03-29 14:24:38,764 - root - INFO - 0.25 sec: 0.252\n2018-03-29 14:24:39,016 - root - INFO - 0.25 sec: 0.252\n2018-03-29 14:24:39,267 - root - INFO - 0.25 sec: 0.252\n2018-03-29 14:24:39,871 - root - INFO - 0.25 sec: 0.603\n2018-03-29 14:24:40,139 - root - INFO - 0.25 sec: 0.268\n2018-03-29 14:24:40,405 - root - INFO - 0.25 sec: 0.266\n2018-03-29 14:24:40,671 - root - INFO - 0.25 sec: 0.266\n2018-03-29 14:24:40,934 - root - INFO - 0.25 sec: 0.263\n2018-03-29 14:24:41,198 - root - INFO - 0.25 sec: 0.264\n2018-03-29 14:24:41,463 - root - INFO - 0.25 sec: 0.265\n2018-03-29 14:24:41,730 - root - INFO - 0.25 sec: 0.267\n2018-03-29 14:24:41,995 - root - INFO - 0.25 sec: 0.265\n2018-03-29 14:24:42,258 - root - INFO - 0.25 sec: 0.263\n2018-03-29 14:24:42,522 - root - INFO - 0.25 sec: 0.264\n2018-03-29 14:24:42,537 - asyncio - DEBUG - poll 249.486 ms took 14.407 ms: 1 events\n2018-03-29 14:24:42,537 - root - INFO - action 'pickle load' took 4.280\n2018-03-29 14:24:43,330 - root - INFO - 0.25 sec: 0.809\n2018-03-29 14:24:43,331 - root - INFO - start 'torch load'\n2018-03-29 14:24:44,757 - asyncio - INFO - poll 243.825 ms took 1420.110 ms: timeout\n2018-03-29 14:24:44,758 - root - INFO - 0.25 sec: 1.427\n2018-03-29 14:24:44,873 - asyncio - DEBUG - poll 249.754 ms took 114.855 ms: 1 events\n2018-03-29 14:24:44,873 - root - INFO - action 'torch load' took 1.543\n</code></pre>", "body_text": "Yes, it looks like it is pickle. I add some raw pickle load and see pretty same behavior.\nimport asyncio\nimport logging\nimport pickle\nimport pathlib\nimport time\nimport contextlib\n\nimport torch\n\n\n@contextlib.contextmanager\ndef timer(action):\n    logging.info(f\"start {action!r}\")\n    start = time.perf_counter()\n    yield\n    logging.info(f\"action {action!r} took {time.perf_counter() - start:.3f}\")\n\n\nasync def foo():\n    last_log = None\n    while True:\n        now = time.perf_counter()\n        if last_log is not None:\n            logging.info(f\"0.25 sec: {now - last_log:.3f}\")\n        last_log = now\n        await asyncio.sleep(max(0, now + 0.25 - time.perf_counter()))\n\n\ndef pickle_load():\n    with pathlib.Path(\"test.pickle\").open(mode=\"rb\") as f:\n        return pickle.load(f)\n\n\ndef torch_load():\n    return torch.load(\"model.pth\")\n\n\nasync def yoba():\n    task = asyncio.ensure_future(foo())\n    await asyncio.sleep(0.5)\n    with timer(\"pickle load\"):\n        await loop.run_in_executor(None, pickle_load)\n    await asyncio.sleep(0.5)\n    with timer(\"torch load\"):\n        await loop.run_in_executor(None, torch_load)\n    task.cancel()\n\n\nm = {}\ndata = list(range(10 ** 4))\nfor i in range(10 ** 4):\n    m[i] = data[:]\n\nlogging.basicConfig(level=logging.DEBUG, format=\"%(asctime)s - %(name)s - %(levelname)s - %(message)s\")\nwith timer(\"save pickled file\"):\n    # this is ~ 280Mb pickle file\n    pathlib.Path(\"test.pickle\").write_bytes(pickle.dumps(m))\nasyncio.ensure_future(yoba())\nloop = asyncio.get_event_loop()\nloop.run_forever()\n$ PYTHONASYNCIODEBUG=1 python pytorch-block-asyncio2.py\n2018-03-29 14:24:33,959 - root - INFO - start 'save pickled file'\n2018-03-29 14:24:37,753 - root - INFO - action 'save pickled file' took 3.794\n2018-03-29 14:24:37,754 - asyncio - DEBUG - Using selector: EpollSelector\n2018-03-29 14:24:38,008 - root - INFO - 0.25 sec: 0.251\n2018-03-29 14:24:38,257 - root - INFO - start 'pickle load'\n2018-03-29 14:24:38,259 - root - INFO - 0.25 sec: 0.251\n2018-03-29 14:24:38,512 - root - INFO - 0.25 sec: 0.253\n2018-03-29 14:24:38,764 - root - INFO - 0.25 sec: 0.252\n2018-03-29 14:24:39,016 - root - INFO - 0.25 sec: 0.252\n2018-03-29 14:24:39,267 - root - INFO - 0.25 sec: 0.252\n2018-03-29 14:24:39,871 - root - INFO - 0.25 sec: 0.603\n2018-03-29 14:24:40,139 - root - INFO - 0.25 sec: 0.268\n2018-03-29 14:24:40,405 - root - INFO - 0.25 sec: 0.266\n2018-03-29 14:24:40,671 - root - INFO - 0.25 sec: 0.266\n2018-03-29 14:24:40,934 - root - INFO - 0.25 sec: 0.263\n2018-03-29 14:24:41,198 - root - INFO - 0.25 sec: 0.264\n2018-03-29 14:24:41,463 - root - INFO - 0.25 sec: 0.265\n2018-03-29 14:24:41,730 - root - INFO - 0.25 sec: 0.267\n2018-03-29 14:24:41,995 - root - INFO - 0.25 sec: 0.265\n2018-03-29 14:24:42,258 - root - INFO - 0.25 sec: 0.263\n2018-03-29 14:24:42,522 - root - INFO - 0.25 sec: 0.264\n2018-03-29 14:24:42,537 - asyncio - DEBUG - poll 249.486 ms took 14.407 ms: 1 events\n2018-03-29 14:24:42,537 - root - INFO - action 'pickle load' took 4.280\n2018-03-29 14:24:43,330 - root - INFO - 0.25 sec: 0.809\n2018-03-29 14:24:43,331 - root - INFO - start 'torch load'\n2018-03-29 14:24:44,757 - asyncio - INFO - poll 243.825 ms took 1420.110 ms: timeout\n2018-03-29 14:24:44,758 - root - INFO - 0.25 sec: 1.427\n2018-03-29 14:24:44,873 - asyncio - DEBUG - poll 249.754 ms took 114.855 ms: 1 events\n2018-03-29 14:24:44,873 - root - INFO - action 'torch load' took 1.543", "body": "Yes, it looks like it is pickle. I add some raw pickle load and see pretty same behavior.\r\n``` python\r\nimport asyncio\r\nimport logging\r\nimport pickle\r\nimport pathlib\r\nimport time\r\nimport contextlib\r\n\r\nimport torch\r\n\r\n\r\n@contextlib.contextmanager\r\ndef timer(action):\r\n    logging.info(f\"start {action!r}\")\r\n    start = time.perf_counter()\r\n    yield\r\n    logging.info(f\"action {action!r} took {time.perf_counter() - start:.3f}\")\r\n\r\n\r\nasync def foo():\r\n    last_log = None\r\n    while True:\r\n        now = time.perf_counter()\r\n        if last_log is not None:\r\n            logging.info(f\"0.25 sec: {now - last_log:.3f}\")\r\n        last_log = now\r\n        await asyncio.sleep(max(0, now + 0.25 - time.perf_counter()))\r\n\r\n\r\ndef pickle_load():\r\n    with pathlib.Path(\"test.pickle\").open(mode=\"rb\") as f:\r\n        return pickle.load(f)\r\n\r\n\r\ndef torch_load():\r\n    return torch.load(\"model.pth\")\r\n\r\n\r\nasync def yoba():\r\n    task = asyncio.ensure_future(foo())\r\n    await asyncio.sleep(0.5)\r\n    with timer(\"pickle load\"):\r\n        await loop.run_in_executor(None, pickle_load)\r\n    await asyncio.sleep(0.5)\r\n    with timer(\"torch load\"):\r\n        await loop.run_in_executor(None, torch_load)\r\n    task.cancel()\r\n\r\n\r\nm = {}\r\ndata = list(range(10 ** 4))\r\nfor i in range(10 ** 4):\r\n    m[i] = data[:]\r\n\r\nlogging.basicConfig(level=logging.DEBUG, format=\"%(asctime)s - %(name)s - %(levelname)s - %(message)s\")\r\nwith timer(\"save pickled file\"):\r\n    # this is ~ 280Mb pickle file\r\n    pathlib.Path(\"test.pickle\").write_bytes(pickle.dumps(m))\r\nasyncio.ensure_future(yoba())\r\nloop = asyncio.get_event_loop()\r\nloop.run_forever()\r\n```\r\n```\r\n$ PYTHONASYNCIODEBUG=1 python pytorch-block-asyncio2.py\r\n2018-03-29 14:24:33,959 - root - INFO - start 'save pickled file'\r\n2018-03-29 14:24:37,753 - root - INFO - action 'save pickled file' took 3.794\r\n2018-03-29 14:24:37,754 - asyncio - DEBUG - Using selector: EpollSelector\r\n2018-03-29 14:24:38,008 - root - INFO - 0.25 sec: 0.251\r\n2018-03-29 14:24:38,257 - root - INFO - start 'pickle load'\r\n2018-03-29 14:24:38,259 - root - INFO - 0.25 sec: 0.251\r\n2018-03-29 14:24:38,512 - root - INFO - 0.25 sec: 0.253\r\n2018-03-29 14:24:38,764 - root - INFO - 0.25 sec: 0.252\r\n2018-03-29 14:24:39,016 - root - INFO - 0.25 sec: 0.252\r\n2018-03-29 14:24:39,267 - root - INFO - 0.25 sec: 0.252\r\n2018-03-29 14:24:39,871 - root - INFO - 0.25 sec: 0.603\r\n2018-03-29 14:24:40,139 - root - INFO - 0.25 sec: 0.268\r\n2018-03-29 14:24:40,405 - root - INFO - 0.25 sec: 0.266\r\n2018-03-29 14:24:40,671 - root - INFO - 0.25 sec: 0.266\r\n2018-03-29 14:24:40,934 - root - INFO - 0.25 sec: 0.263\r\n2018-03-29 14:24:41,198 - root - INFO - 0.25 sec: 0.264\r\n2018-03-29 14:24:41,463 - root - INFO - 0.25 sec: 0.265\r\n2018-03-29 14:24:41,730 - root - INFO - 0.25 sec: 0.267\r\n2018-03-29 14:24:41,995 - root - INFO - 0.25 sec: 0.265\r\n2018-03-29 14:24:42,258 - root - INFO - 0.25 sec: 0.263\r\n2018-03-29 14:24:42,522 - root - INFO - 0.25 sec: 0.264\r\n2018-03-29 14:24:42,537 - asyncio - DEBUG - poll 249.486 ms took 14.407 ms: 1 events\r\n2018-03-29 14:24:42,537 - root - INFO - action 'pickle load' took 4.280\r\n2018-03-29 14:24:43,330 - root - INFO - 0.25 sec: 0.809\r\n2018-03-29 14:24:43,331 - root - INFO - start 'torch load'\r\n2018-03-29 14:24:44,757 - asyncio - INFO - poll 243.825 ms took 1420.110 ms: timeout\r\n2018-03-29 14:24:44,758 - root - INFO - 0.25 sec: 1.427\r\n2018-03-29 14:24:44,873 - asyncio - DEBUG - poll 249.754 ms took 114.855 ms: 1 events\r\n2018-03-29 14:24:44,873 - root - INFO - action 'torch load' took 1.543\r\n```"}