{"url": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/202428806", "pull_request_review_id": 137133564, "id": 202428806, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwMjQyODgwNg==", "diff_hunk": "@@ -5,54 +5,85 @@\n \n namespace at { namespace detail {\n \n-// TensorBase is the base class for Tensor which handles the reference counting\n-struct TensorBase {\n-  TensorBase(): TensorBase(UndefinedTensor::singleton(), false) {}\n-  TensorBase(TensorImpl * self, bool retain)\n+template<bool is_strong>\n+struct retainable_traits {};\n+\n+template<>\n+struct retainable_traits<true> {\n+  static void retain(Retainable* r) {\n+    r->retain();\n+  }\n+  static void release(Retainable* r) {\n+    r->release();\n+  }\n+};\n+\n+template<>\n+struct retainable_traits<false> {\n+  static void retain(Retainable* r) {\n+    r->weakRetain();\n+  }\n+  static void release(Retainable* r) {\n+    r->weakRelease();\n+  }\n+};\n+\n+// TensorBaseImpl is the base class for Tensor which handles the reference counting\n+template<bool is_strong>\n+struct TensorBaseImpl {\n+  TensorBaseImpl(): TensorBaseImpl(UndefinedTensor::singleton(), false) {}\n+  TensorBaseImpl(TensorImpl * self, bool retain)\n   : pImpl(self) {\n     if (pImpl == nullptr) {\n-      throw std::runtime_error(\"TensorBase with nullptr not supported\");\n+      throw std::runtime_error(\"TensorBaseImpl with nullptr not supported\");\n+    }\n+    if(retain && pImpl != UndefinedTensor::singleton()) {\n+      retainable_traits<is_strong>::retain(pImpl);", "path": "aten/src/ATen/TensorBase.h", "position": null, "original_position": 42, "commit_id": "76be0f21821be91b7e717715314b4eba472d4c57", "original_commit_id": "376333e2e4ea11009768b7d5026b132ec8a146c5", "user": {"login": "colesbury", "id": 655866, "node_id": "MDQ6VXNlcjY1NTg2Ng==", "avatar_url": "https://avatars1.githubusercontent.com/u/655866?v=4", "gravatar_id": "", "url": "https://api.github.com/users/colesbury", "html_url": "https://github.com/colesbury", "followers_url": "https://api.github.com/users/colesbury/followers", "following_url": "https://api.github.com/users/colesbury/following{/other_user}", "gists_url": "https://api.github.com/users/colesbury/gists{/gist_id}", "starred_url": "https://api.github.com/users/colesbury/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/colesbury/subscriptions", "organizations_url": "https://api.github.com/users/colesbury/orgs", "repos_url": "https://api.github.com/users/colesbury/repos", "events_url": "https://api.github.com/users/colesbury/events{/privacy}", "received_events_url": "https://api.github.com/users/colesbury/received_events", "type": "User", "site_admin": false}, "body": "Can't this just be:\r\n\r\n```\r\nif (is_strong) {\r\n  ...\r\n} else {\r\n  ...\r\n}\r\n```\r\n\r\n(you use this pattern in `dim()` below)", "created_at": "2018-07-13T17:58:20Z", "updated_at": "2018-11-23T15:47:21Z", "html_url": "https://github.com/pytorch/pytorch/pull/9363#discussion_r202428806", "pull_request_url": "https://api.github.com/repos/pytorch/pytorch/pulls/9363", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/202428806"}, "html": {"href": "https://github.com/pytorch/pytorch/pull/9363#discussion_r202428806"}, "pull_request": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/9363"}}, "body_html": "<p>Can't this just be:</p>\n<pre><code>if (is_strong) {\n  ...\n} else {\n  ...\n}\n</code></pre>\n<p>(you use this pattern in <code>dim()</code> below)</p>", "body_text": "Can't this just be:\nif (is_strong) {\n  ...\n} else {\n  ...\n}\n\n(you use this pattern in dim() below)"}