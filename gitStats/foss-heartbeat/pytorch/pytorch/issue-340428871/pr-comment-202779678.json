{"url": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/202779678", "pull_request_review_id": 137542279, "id": 202779678, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwMjc3OTY3OA==", "diff_hunk": "@@ -7,21 +7,52 @@ namespace at {\n // base class for refcounted things, allows for collects of generic\n // refcounted objects that include tensors\n struct Retainable {\n-  Retainable(): refcount(1) {}\n+  Retainable(): refcount(1), weak_refcount(1) {}", "path": "aten/src/ATen/Retainable.h", "position": 5, "original_position": 5, "commit_id": "76be0f21821be91b7e717715314b4eba472d4c57", "original_commit_id": "76be0f21821be91b7e717715314b4eba472d4c57", "user": {"login": "dzhulgakov", "id": 17890620, "node_id": "MDQ6VXNlcjE3ODkwNjIw", "avatar_url": "https://avatars2.githubusercontent.com/u/17890620?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dzhulgakov", "html_url": "https://github.com/dzhulgakov", "followers_url": "https://api.github.com/users/dzhulgakov/followers", "following_url": "https://api.github.com/users/dzhulgakov/following{/other_user}", "gists_url": "https://api.github.com/users/dzhulgakov/gists{/gist_id}", "starred_url": "https://api.github.com/users/dzhulgakov/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dzhulgakov/subscriptions", "organizations_url": "https://api.github.com/users/dzhulgakov/orgs", "repos_url": "https://api.github.com/users/dzhulgakov/repos", "events_url": "https://api.github.com/users/dzhulgakov/events{/privacy}", "received_events_url": "https://api.github.com/users/dzhulgakov/received_events", "type": "User", "site_admin": false}, "body": "would it cause perf overhead as Retainable is used in several places and it increases the size of struct?\r\n\r\nMaybe I'm missing the context, but what is the motivation for this PR? It diverges quite a bit from the unified design we were hashing out. @ezyang @smessmer ", "created_at": "2018-07-16T18:31:22Z", "updated_at": "2018-11-23T15:47:28Z", "html_url": "https://github.com/pytorch/pytorch/pull/9363#discussion_r202779678", "pull_request_url": "https://api.github.com/repos/pytorch/pytorch/pulls/9363", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/202779678"}, "html": {"href": "https://github.com/pytorch/pytorch/pull/9363#discussion_r202779678"}, "pull_request": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/9363"}}, "body_html": "<p>would it cause perf overhead as Retainable is used in several places and it increases the size of struct?</p>\n<p>Maybe I'm missing the context, but what is the motivation for this PR? It diverges quite a bit from the unified design we were hashing out. <a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=13564\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/ezyang\">@ezyang</a> <a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=2373925\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/smessmer\">@smessmer</a></p>", "body_text": "would it cause perf overhead as Retainable is used in several places and it increases the size of struct?\nMaybe I'm missing the context, but what is the motivation for this PR? It diverges quite a bit from the unified design we were hashing out. @ezyang @smessmer"}