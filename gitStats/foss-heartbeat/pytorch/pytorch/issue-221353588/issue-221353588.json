{"url": "https://api.github.com/repos/pytorch/pytorch/issues/1245", "repository_url": "https://api.github.com/repos/pytorch/pytorch", "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/1245/labels{/name}", "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/1245/comments", "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/1245/events", "html_url": "https://github.com/pytorch/pytorch/issues/1245", "id": 221353588, "node_id": "MDU6SXNzdWUyMjEzNTM1ODg=", "number": 1245, "title": "torch.sigmoid and torch.nn.sigmoid are different (other functions too?)", "user": {"login": "csarofeen", "id": 22205833, "node_id": "MDQ6VXNlcjIyMjA1ODMz", "avatar_url": "https://avatars2.githubusercontent.com/u/22205833?v=4", "gravatar_id": "", "url": "https://api.github.com/users/csarofeen", "html_url": "https://github.com/csarofeen", "followers_url": "https://api.github.com/users/csarofeen/followers", "following_url": "https://api.github.com/users/csarofeen/following{/other_user}", "gists_url": "https://api.github.com/users/csarofeen/gists{/gist_id}", "starred_url": "https://api.github.com/users/csarofeen/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/csarofeen/subscriptions", "organizations_url": "https://api.github.com/users/csarofeen/orgs", "repos_url": "https://api.github.com/users/csarofeen/repos", "events_url": "https://api.github.com/users/csarofeen/events{/privacy}", "received_events_url": "https://api.github.com/users/csarofeen/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 424131849, "node_id": "MDU6TGFiZWw0MjQxMzE4NDk=", "url": "https://api.github.com/repos/pytorch/pytorch/labels/enhancement", "name": "enhancement", "color": "84b6eb", "default": true}, {"id": 443484135, "node_id": "MDU6TGFiZWw0NDM0ODQxMzU=", "url": "https://api.github.com/repos/pytorch/pytorch/labels/high%20priority", "name": "high priority", "color": "F22613", "default": false}], "state": "closed", "locked": false, "assignee": {"login": "apaszke", "id": 4583066, "node_id": "MDQ6VXNlcjQ1ODMwNjY=", "avatar_url": "https://avatars3.githubusercontent.com/u/4583066?v=4", "gravatar_id": "", "url": "https://api.github.com/users/apaszke", "html_url": "https://github.com/apaszke", "followers_url": "https://api.github.com/users/apaszke/followers", "following_url": "https://api.github.com/users/apaszke/following{/other_user}", "gists_url": "https://api.github.com/users/apaszke/gists{/gist_id}", "starred_url": "https://api.github.com/users/apaszke/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/apaszke/subscriptions", "organizations_url": "https://api.github.com/users/apaszke/orgs", "repos_url": "https://api.github.com/users/apaszke/repos", "events_url": "https://api.github.com/users/apaszke/events{/privacy}", "received_events_url": "https://api.github.com/users/apaszke/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "apaszke", "id": 4583066, "node_id": "MDQ6VXNlcjQ1ODMwNjY=", "avatar_url": "https://avatars3.githubusercontent.com/u/4583066?v=4", "gravatar_id": "", "url": "https://api.github.com/users/apaszke", "html_url": "https://github.com/apaszke", "followers_url": "https://api.github.com/users/apaszke/followers", "following_url": "https://api.github.com/users/apaszke/following{/other_user}", "gists_url": "https://api.github.com/users/apaszke/gists{/gist_id}", "starred_url": "https://api.github.com/users/apaszke/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/apaszke/subscriptions", "organizations_url": "https://api.github.com/users/apaszke/orgs", "repos_url": "https://api.github.com/users/apaszke/repos", "events_url": "https://api.github.com/users/apaszke/events{/privacy}", "received_events_url": "https://api.github.com/users/apaszke/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 2, "created_at": "2017-04-12T18:40:05Z", "updated_at": "2017-05-03T23:06:13Z", "closed_at": "2017-05-03T23:06:13Z", "author_association": "CONTRIBUTOR", "body_html": "<p>Performance and numerics of torch.sigmoid and torch.nn.functional.sigmoid are different kernels. One being...</p>\n<div class=\"highlight highlight-source-c++\"><pre><span class=\"pl-k\">template </span>&lt;<span class=\"pl-k\">typename</span> T&gt;\n<span class=\"pl-k\">struct</span> <span class=\"pl-en\">TensorSigmoidOp</span> {\n  __device__ __forceinline__ <span class=\"pl-k\">void</span> <span class=\"pl-en\">operator</span>()(T* out, T* in) <span class=\"pl-k\">const</span> {\n    T one = (T) <span class=\"pl-c1\">1.0</span>;\n    *out = one / (one + THCNumerics&lt;T&gt;::<span class=\"pl-c1\">exp</span>(- *in));\n  }\n\n  __device__ __forceinline__ <span class=\"pl-k\">void</span> <span class=\"pl-en\">operator</span>()(T* v) <span class=\"pl-k\">const</span> {\n    T one = (T) <span class=\"pl-c1\">1.0</span>;\n    *v = one / (one + THCNumerics&lt;T&gt;::<span class=\"pl-c1\">exp</span>(- *v));\n  }\n};</pre></div>\n<p>The other being...</p>\n<div class=\"highlight highlight-source-c++\"><pre><span class=\"pl-k\">template </span>&lt;<span class=\"pl-k\">typename</span> T&gt;\n<span class=\"pl-k\">struct</span> <span class=\"pl-en\">sigmoidupdateOutput_functor</span>\n{\n  __device__ <span class=\"pl-k\">void</span> <span class=\"pl-en\">operator</span>()(T *output, <span class=\"pl-k\">const</span> T *input) <span class=\"pl-k\">const</span>\n  {\n    *output = ScalarConvert&lt;<span class=\"pl-k\">double</span>, T&gt;::<span class=\"pl-c1\">to</span>(<span class=\"pl-c1\">1</span>./(<span class=\"pl-c1\">1</span>.+ <span class=\"pl-c1\">exp</span>(-*input)));\n  }\n};</pre></div>\n<p>Typical numerical difference between sigmoid functions appears to be ~5.96e-8 . Performance difference could be significant due to the double precision operations.</p>\n<p>Should they be different?<br>\nWhich one is preferred?<br>\nHow wide spread is this?<br>\nShouldn't THCTensorMathPointwise functions be used in THCUNN operations when possible?</p>\n<p>Opinions <a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=3768583\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/gchanan\">@gchanan</a> <a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=11729078\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/jekbradbury\">@jekbradbury</a> ?</p>", "body_text": "Performance and numerics of torch.sigmoid and torch.nn.functional.sigmoid are different kernels. One being...\ntemplate <typename T>\nstruct TensorSigmoidOp {\n  __device__ __forceinline__ void operator()(T* out, T* in) const {\n    T one = (T) 1.0;\n    *out = one / (one + THCNumerics<T>::exp(- *in));\n  }\n\n  __device__ __forceinline__ void operator()(T* v) const {\n    T one = (T) 1.0;\n    *v = one / (one + THCNumerics<T>::exp(- *v));\n  }\n};\nThe other being...\ntemplate <typename T>\nstruct sigmoidupdateOutput_functor\n{\n  __device__ void operator()(T *output, const T *input) const\n  {\n    *output = ScalarConvert<double, T>::to(1./(1.+ exp(-*input)));\n  }\n};\nTypical numerical difference between sigmoid functions appears to be ~5.96e-8 . Performance difference could be significant due to the double precision operations.\nShould they be different?\nWhich one is preferred?\nHow wide spread is this?\nShouldn't THCTensorMathPointwise functions be used in THCUNN operations when possible?\nOpinions @gchanan @jekbradbury ?", "body": "Performance and numerics of torch.sigmoid and torch.nn.functional.sigmoid are different kernels. One being...\r\n```.cpp\r\ntemplate <typename T>\r\nstruct TensorSigmoidOp {\r\n  __device__ __forceinline__ void operator()(T* out, T* in) const {\r\n    T one = (T) 1.0;\r\n    *out = one / (one + THCNumerics<T>::exp(- *in));\r\n  }\r\n\r\n  __device__ __forceinline__ void operator()(T* v) const {\r\n    T one = (T) 1.0;\r\n    *v = one / (one + THCNumerics<T>::exp(- *v));\r\n  }\r\n};\r\n```\r\n\r\nThe other being...\r\n```.cpp\r\ntemplate <typename T>\r\nstruct sigmoidupdateOutput_functor\r\n{\r\n  __device__ void operator()(T *output, const T *input) const\r\n  {\r\n    *output = ScalarConvert<double, T>::to(1./(1.+ exp(-*input)));\r\n  }\r\n};\r\n```\r\n\r\nTypical numerical difference between sigmoid functions appears to be ~5.96e-8 . Performance difference could be significant due to the double precision operations.\r\n\r\nShould they be different?\r\nWhich one is preferred?\r\nHow wide spread is this?\r\nShouldn't THCTensorMathPointwise functions be used in THCUNN operations when possible?\r\n\r\nOpinions @gchanan @jekbradbury ?"}