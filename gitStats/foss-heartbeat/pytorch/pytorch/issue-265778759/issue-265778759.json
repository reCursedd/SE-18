{"url": "https://api.github.com/repos/pytorch/pytorch/issues/3130", "repository_url": "https://api.github.com/repos/pytorch/pytorch", "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/3130/labels{/name}", "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/3130/comments", "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/3130/events", "html_url": "https://github.com/pytorch/pytorch/pull/3130", "id": 265778759, "node_id": "MDExOlB1bGxSZXF1ZXN0MTQ2NzkxMDAy", "number": 3130, "title": "Reverse the order of checks in torch.gather", "user": {"login": "elanmart", "id": 10772830, "node_id": "MDQ6VXNlcjEwNzcyODMw", "avatar_url": "https://avatars3.githubusercontent.com/u/10772830?v=4", "gravatar_id": "", "url": "https://api.github.com/users/elanmart", "html_url": "https://github.com/elanmart", "followers_url": "https://api.github.com/users/elanmart/followers", "following_url": "https://api.github.com/users/elanmart/following{/other_user}", "gists_url": "https://api.github.com/users/elanmart/gists{/gist_id}", "starred_url": "https://api.github.com/users/elanmart/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/elanmart/subscriptions", "organizations_url": "https://api.github.com/users/elanmart/orgs", "repos_url": "https://api.github.com/users/elanmart/repos", "events_url": "https://api.github.com/users/elanmart/events{/privacy}", "received_events_url": "https://api.github.com/users/elanmart/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2017-10-16T13:54:42Z", "updated_at": "2018-11-23T15:35:19Z", "closed_at": "2017-10-18T10:30:05Z", "author_association": "CONTRIBUTOR", "pull_request": {"url": "https://api.github.com/repos/pytorch/pytorch/pulls/3130", "html_url": "https://github.com/pytorch/pytorch/pull/3130", "diff_url": "https://github.com/pytorch/pytorch/pull/3130.diff", "patch_url": "https://github.com/pytorch/pytorch/pull/3130.patch"}, "body_html": "<p>Right now</p>\n<div class=\"highlight highlight-source-python\"><pre>idx <span class=\"pl-k\">=</span> th.LongTensor([<span class=\"pl-c1\">0</span>, <span class=\"pl-c1\">1</span>, <span class=\"pl-c1\">2</span>])\narr <span class=\"pl-k\">=</span> th.eye(<span class=\"pl-c1\">3</span>)\nth.gather(arr, <span class=\"pl-c1\">1</span>, idx)</pre></div>\n<p>gives</p>\n<div class=\"highlight highlight-source-python\"><pre><span class=\"pl-c1\">RuntimeError</span>: invalid argument <span class=\"pl-c1\">2</span>: Input tensor must have same dimensions <span class=\"pl-k\">as</span> output tensor</pre></div>\n<p>By checking the index dimensions first we get</p>\n<div class=\"highlight highlight-source-python\"><pre><span class=\"pl-c1\">RuntimeError</span>: invalid argument <span class=\"pl-c1\">4</span>: Index tensor must have same dimensions <span class=\"pl-k\">as</span> <span class=\"pl-c1\">input</span> tensor</pre></div>", "body_text": "Right now\nidx = th.LongTensor([0, 1, 2])\narr = th.eye(3)\nth.gather(arr, 1, idx)\ngives\nRuntimeError: invalid argument 2: Input tensor must have same dimensions as output tensor\nBy checking the index dimensions first we get\nRuntimeError: invalid argument 4: Index tensor must have same dimensions as input tensor", "body": "Right now\r\n```python\r\nidx = th.LongTensor([0, 1, 2])\r\narr = th.eye(3)\r\nth.gather(arr, 1, idx)\r\n```\r\ngives \r\n```python\r\nRuntimeError: invalid argument 2: Input tensor must have same dimensions as output tensor\r\n```\r\nBy checking the index dimensions first we get\r\n```python\r\nRuntimeError: invalid argument 4: Index tensor must have same dimensions as input tensor\r\n```"}