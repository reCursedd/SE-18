{"url": "https://api.github.com/repos/pytorch/pytorch/issues/7327", "repository_url": "https://api.github.com/repos/pytorch/pytorch", "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/7327/labels{/name}", "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/7327/comments", "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/7327/events", "html_url": "https://github.com/pytorch/pytorch/issues/7327", "id": 320590646, "node_id": "MDU6SXNzdWUzMjA1OTA2NDY=", "number": 7327, "title": "Possible error in max_unpool1d in module Functional", "user": {"login": "erlebach", "id": 324708, "node_id": "MDQ6VXNlcjMyNDcwOA==", "avatar_url": "https://avatars3.githubusercontent.com/u/324708?v=4", "gravatar_id": "", "url": "https://api.github.com/users/erlebach", "html_url": "https://github.com/erlebach", "followers_url": "https://api.github.com/users/erlebach/followers", "following_url": "https://api.github.com/users/erlebach/following{/other_user}", "gists_url": "https://api.github.com/users/erlebach/gists{/gist_id}", "starred_url": "https://api.github.com/users/erlebach/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/erlebach/subscriptions", "organizations_url": "https://api.github.com/users/erlebach/orgs", "repos_url": "https://api.github.com/users/erlebach/repos", "events_url": "https://api.github.com/users/erlebach/events{/privacy}", "received_events_url": "https://api.github.com/users/erlebach/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 443483881, "node_id": "MDU6TGFiZWw0NDM0ODM4ODE=", "url": "https://api.github.com/repos/pytorch/pytorch/labels/todo", "name": "todo", "color": "c2e0c6", "default": false}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-05-06T12:58:52Z", "updated_at": "2018-05-29T19:02:59Z", "closed_at": "2018-05-29T19:02:59Z", "author_association": "NONE", "body_html": "<p>Hi,</p>\n<pre><code>def max_unpool1d(input, indices, kernel_size, stride=None, padding=0,\n                 output_size=None):\n    r\"\"\"Computes a partial inverse of :class:`MaxPool1d`.\n\n    See :class:`~torch.nn.MaxUnpool1d` for details.\n    \"\"\"\n    kernel_size = _single(kernel_size)\n    stride = _single(stride)\n    padding = _single(padding)\n    output_size = _unpool_output_size(input, kernel_size, stride, padding,\n                                      output_size)\n    return torch._C._nn.max_unpool2d(input.unsqueeze(3), indices.unsqueeze(3), output_size + [1]).squeeze(3)\n.....\n</code></pre>\n<p>The line:<br>\nstride = _single(stride)</p>\n<p>should probably read as</p>\n<p>stride = _single(stride or kernel_size)</p>\n<p>similarly to the code MaxUnpool1d in module nn. Otherwise one gets an error message similar to</p>\n<p>TypeError: unsupported operand type(s) for *: 'int' and 'NoneType'</p>\n<p>if the \"stride\" argument is omitted when called.</p>\n<pre><code>Gordon\n</code></pre>", "body_text": "Hi,\ndef max_unpool1d(input, indices, kernel_size, stride=None, padding=0,\n                 output_size=None):\n    r\"\"\"Computes a partial inverse of :class:`MaxPool1d`.\n\n    See :class:`~torch.nn.MaxUnpool1d` for details.\n    \"\"\"\n    kernel_size = _single(kernel_size)\n    stride = _single(stride)\n    padding = _single(padding)\n    output_size = _unpool_output_size(input, kernel_size, stride, padding,\n                                      output_size)\n    return torch._C._nn.max_unpool2d(input.unsqueeze(3), indices.unsqueeze(3), output_size + [1]).squeeze(3)\n.....\n\nThe line:\nstride = _single(stride)\nshould probably read as\nstride = _single(stride or kernel_size)\nsimilarly to the code MaxUnpool1d in module nn. Otherwise one gets an error message similar to\nTypeError: unsupported operand type(s) for *: 'int' and 'NoneType'\nif the \"stride\" argument is omitted when called.\nGordon", "body": "Hi,\r\n\r\n```\r\ndef max_unpool1d(input, indices, kernel_size, stride=None, padding=0,\r\n                 output_size=None):\r\n    r\"\"\"Computes a partial inverse of :class:`MaxPool1d`.\r\n\r\n    See :class:`~torch.nn.MaxUnpool1d` for details.\r\n    \"\"\"\r\n    kernel_size = _single(kernel_size)\r\n    stride = _single(stride)\r\n    padding = _single(padding)\r\n    output_size = _unpool_output_size(input, kernel_size, stride, padding,\r\n                                      output_size)\r\n    return torch._C._nn.max_unpool2d(input.unsqueeze(3), indices.unsqueeze(3), output_size + [1]).squeeze(3)\r\n.....\r\n```\r\n\r\nThe line: \r\n   stride = _single(stride)\r\n\r\nshould probably read as \r\n\r\n   stride = _single(stride or kernel_size)\r\n\r\nsimilarly to the code MaxUnpool1d in module nn. Otherwise one gets an error message similar to \r\n\r\nTypeError: unsupported operand type(s) for *: 'int' and 'NoneType'\r\n\r\nif the \"stride\" argument is omitted when called. \r\n\r\n    Gordon\r\n\r\n\r\n\r\n"}