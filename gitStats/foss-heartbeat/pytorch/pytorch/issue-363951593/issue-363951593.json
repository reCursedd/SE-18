{"url": "https://api.github.com/repos/pytorch/pytorch/issues/12083", "repository_url": "https://api.github.com/repos/pytorch/pytorch", "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/12083/labels{/name}", "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/12083/comments", "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/12083/events", "html_url": "https://github.com/pytorch/pytorch/issues/12083", "id": 363951593, "node_id": "MDU6SXNzdWUzNjM5NTE1OTM=", "number": 12083, "title": "CUDAGenerator.cpp doesn't call THCRandom_seed()", "user": {"login": "meganset", "id": 26304558, "node_id": "MDQ6VXNlcjI2MzA0NTU4", "avatar_url": "https://avatars0.githubusercontent.com/u/26304558?v=4", "gravatar_id": "", "url": "https://api.github.com/users/meganset", "html_url": "https://github.com/meganset", "followers_url": "https://api.github.com/users/meganset/followers", "following_url": "https://api.github.com/users/meganset/following{/other_user}", "gists_url": "https://api.github.com/users/meganset/gists{/gist_id}", "starred_url": "https://api.github.com/users/meganset/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/meganset/subscriptions", "organizations_url": "https://api.github.com/users/meganset/orgs", "repos_url": "https://api.github.com/users/meganset/repos", "events_url": "https://api.github.com/users/meganset/events{/privacy}", "received_events_url": "https://api.github.com/users/meganset/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 443483881, "node_id": "MDU6TGFiZWw0NDM0ODM4ODE=", "url": "https://api.github.com/repos/pytorch/pytorch/labels/todo", "name": "todo", "color": "c2e0c6", "default": false}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2018-09-26T10:09:12Z", "updated_at": "2018-10-01T17:44:04Z", "closed_at": null, "author_association": "NONE", "body_html": "<h2>Issue description</h2>\n<p>On the CUDA side, the <em>seed()</em> call doesn't reset the seed, just returns the result of <em>initialSeed()</em></p>\n<h2>Code example</h2>\n<p>pytorch/aten/src/ATen/cuda/CUDAGenerator.cpp</p>\n<p><code>uint64_t CUDAGenerator::seed() {</code><br>\n<code>return THCRandom_initialSeed(context-&gt;getTHCState());</code><br>\n<code>}</code></p>\n<p><code>uint64_t CUDAGenerator::initialSeed() {</code><br>\n<code>return THCRandom_initialSeed(context-&gt;getTHCState());</code><br>\n<code>}</code></p>\n<p>over on the CPU side, the re-seeding call is there:</p>\n<p><code>uint64_t CPUGenerator::seed() {</code><br>\n<code>return THRandom_seed(generator);</code><br>\n<code>}</code></p>", "body_text": "Issue description\nOn the CUDA side, the seed() call doesn't reset the seed, just returns the result of initialSeed()\nCode example\npytorch/aten/src/ATen/cuda/CUDAGenerator.cpp\nuint64_t CUDAGenerator::seed() {\nreturn THCRandom_initialSeed(context->getTHCState());\n}\nuint64_t CUDAGenerator::initialSeed() {\nreturn THCRandom_initialSeed(context->getTHCState());\n}\nover on the CPU side, the re-seeding call is there:\nuint64_t CPUGenerator::seed() {\nreturn THRandom_seed(generator);\n}", "body": "## Issue description\r\nOn the CUDA side, the _seed()_ call doesn't reset the seed, just returns the result of _initialSeed()_\r\n\r\n## Code example\r\n\r\npytorch/aten/src/ATen/cuda/CUDAGenerator.cpp\r\n    \r\n`uint64_t CUDAGenerator::seed() {`\r\n  `return THCRandom_initialSeed(context->getTHCState());`\r\n`}`\r\n\r\n`uint64_t CUDAGenerator::initialSeed() {`\r\n  `return THCRandom_initialSeed(context->getTHCState());`\r\n`}`\r\n\r\nover on the CPU side, the re-seeding call is there:\r\n\r\n`uint64_t CPUGenerator::seed() {`\r\n  `return THRandom_seed(generator);`\r\n`}`\r\n"}