{"url": "https://api.github.com/repos/pytorch/pytorch/issues/4215", "repository_url": "https://api.github.com/repos/pytorch/pytorch", "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/4215/labels{/name}", "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/4215/comments", "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/4215/events", "html_url": "https://github.com/pytorch/pytorch/issues/4215", "id": 282717605, "node_id": "MDU6SXNzdWUyODI3MTc2MDU=", "number": 4215, "title": "var.get()->requires_grad idiom is unchecked and allows silent memory corruption", "user": {"login": "ezyang", "id": 13564, "node_id": "MDQ6VXNlcjEzNTY0", "avatar_url": "https://avatars0.githubusercontent.com/u/13564?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ezyang", "html_url": "https://github.com/ezyang", "followers_url": "https://api.github.com/users/ezyang/followers", "following_url": "https://api.github.com/users/ezyang/following{/other_user}", "gists_url": "https://api.github.com/users/ezyang/gists{/gist_id}", "starred_url": "https://api.github.com/users/ezyang/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ezyang/subscriptions", "organizations_url": "https://api.github.com/users/ezyang/orgs", "repos_url": "https://api.github.com/users/ezyang/repos", "events_url": "https://api.github.com/users/ezyang/events{/privacy}", "received_events_url": "https://api.github.com/users/ezyang/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 9, "created_at": "2017-12-17T19:34:51Z", "updated_at": "2018-02-07T21:52:20Z", "closed_at": null, "author_association": "CONTRIBUTOR", "body_html": "<p>Steps to reproduce:</p>\n<pre><code>void f(Variable&amp; var) {\n  var.get()-&gt;grad_fn = nullptr;\n}\nint main() {\n  Variable v;\n  f(v);\n}\n</code></pre>\n<p>Expected result: runtime error of some sort.</p>\n<p>Actual result: segmentation fault on program shutdown</p>\n<p>You can try it out yourself by applying the following patch:</p>\n<pre><code>diff --git a/torch/csrc/jit/test_jit.cpp b/torch/csrc/jit/test_jit.cpp\nindex 0087310..12ccb64 100644\n--- a/torch/csrc/jit/test_jit.cpp\n+++ b/torch/csrc/jit/test_jit.cpp\n@@ -8,6 +8,7 @@\n #include \"torch/csrc/jit/interned_strings.h\"\n #include &lt;vector&gt;\n #include \"torch/csrc/jit/interpreter.h\"\n+#include \"torch/csrc/autograd/variable.h\"\n \n namespace torch { namespace jit {\n \n@@ -496,7 +497,14 @@ void interpStageTest() {\n     JIT_ASSERT(exactlyEqual(outputs[1],cx));\n }\n \n+void f(torch::autograd::Variable&amp; var) {\n+  var.get()-&gt;_grad_fn = nullptr;\n+}\n+\n void runJITCPPTests() {\n+  torch::autograd::Variable v;\n+  f(v);\n+  return;\n   interpTest();\n   interpStageTest();\n   codeTemplateTest();\n</code></pre>\n<p>and then running <code>python test/test_jit.py TestJit.test_cpp</code></p>\n<p>I boiled this test case down while chasing down a very difficult to reproduce memory corruption.</p>\n<p>CC <a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=655866\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/colesbury\">@colesbury</a></p>", "body_text": "Steps to reproduce:\nvoid f(Variable& var) {\n  var.get()->grad_fn = nullptr;\n}\nint main() {\n  Variable v;\n  f(v);\n}\n\nExpected result: runtime error of some sort.\nActual result: segmentation fault on program shutdown\nYou can try it out yourself by applying the following patch:\ndiff --git a/torch/csrc/jit/test_jit.cpp b/torch/csrc/jit/test_jit.cpp\nindex 0087310..12ccb64 100644\n--- a/torch/csrc/jit/test_jit.cpp\n+++ b/torch/csrc/jit/test_jit.cpp\n@@ -8,6 +8,7 @@\n #include \"torch/csrc/jit/interned_strings.h\"\n #include <vector>\n #include \"torch/csrc/jit/interpreter.h\"\n+#include \"torch/csrc/autograd/variable.h\"\n \n namespace torch { namespace jit {\n \n@@ -496,7 +497,14 @@ void interpStageTest() {\n     JIT_ASSERT(exactlyEqual(outputs[1],cx));\n }\n \n+void f(torch::autograd::Variable& var) {\n+  var.get()->_grad_fn = nullptr;\n+}\n+\n void runJITCPPTests() {\n+  torch::autograd::Variable v;\n+  f(v);\n+  return;\n   interpTest();\n   interpStageTest();\n   codeTemplateTest();\n\nand then running python test/test_jit.py TestJit.test_cpp\nI boiled this test case down while chasing down a very difficult to reproduce memory corruption.\nCC @colesbury", "body": "Steps to reproduce:\r\n\r\n```\r\nvoid f(Variable& var) {\r\n  var.get()->grad_fn = nullptr;\r\n}\r\nint main() {\r\n  Variable v;\r\n  f(v);\r\n}\r\n```\r\n\r\nExpected result: runtime error of some sort.\r\n\r\nActual result: segmentation fault on program shutdown\r\n\r\nYou can try it out yourself by applying the following patch:\r\n\r\n```\r\ndiff --git a/torch/csrc/jit/test_jit.cpp b/torch/csrc/jit/test_jit.cpp\r\nindex 0087310..12ccb64 100644\r\n--- a/torch/csrc/jit/test_jit.cpp\r\n+++ b/torch/csrc/jit/test_jit.cpp\r\n@@ -8,6 +8,7 @@\r\n #include \"torch/csrc/jit/interned_strings.h\"\r\n #include <vector>\r\n #include \"torch/csrc/jit/interpreter.h\"\r\n+#include \"torch/csrc/autograd/variable.h\"\r\n \r\n namespace torch { namespace jit {\r\n \r\n@@ -496,7 +497,14 @@ void interpStageTest() {\r\n     JIT_ASSERT(exactlyEqual(outputs[1],cx));\r\n }\r\n \r\n+void f(torch::autograd::Variable& var) {\r\n+  var.get()->_grad_fn = nullptr;\r\n+}\r\n+\r\n void runJITCPPTests() {\r\n+  torch::autograd::Variable v;\r\n+  f(v);\r\n+  return;\r\n   interpTest();\r\n   interpStageTest();\r\n   codeTemplateTest();\r\n```\r\n\r\nand then running `python test/test_jit.py TestJit.test_cpp`\r\n\r\nI boiled this test case down while chasing down a very difficult to reproduce memory corruption.\r\n\r\nCC @colesbury "}