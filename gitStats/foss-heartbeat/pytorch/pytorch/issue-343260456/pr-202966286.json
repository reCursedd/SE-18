{"url": "https://api.github.com/repos/pytorch/pytorch/pulls/9661", "id": 202966286, "node_id": "MDExOlB1bGxSZXF1ZXN0MjAyOTY2Mjg2", "html_url": "https://github.com/pytorch/pytorch/pull/9661", "diff_url": "https://github.com/pytorch/pytorch/pull/9661.diff", "patch_url": "https://github.com/pytorch/pytorch/pull/9661.patch", "issue_url": "https://api.github.com/repos/pytorch/pytorch/issues/9661", "number": 9661, "state": "closed", "locked": false, "title": "fix argmax/min perf gap with numpy", "user": {"login": "ailzhang", "id": 5248122, "node_id": "MDQ6VXNlcjUyNDgxMjI=", "avatar_url": "https://avatars2.githubusercontent.com/u/5248122?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ailzhang", "html_url": "https://github.com/ailzhang", "followers_url": "https://api.github.com/users/ailzhang/followers", "following_url": "https://api.github.com/users/ailzhang/following{/other_user}", "gists_url": "https://api.github.com/users/ailzhang/gists{/gist_id}", "starred_url": "https://api.github.com/users/ailzhang/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ailzhang/subscriptions", "organizations_url": "https://api.github.com/users/ailzhang/orgs", "repos_url": "https://api.github.com/users/ailzhang/repos", "events_url": "https://api.github.com/users/ailzhang/events{/privacy}", "received_events_url": "https://api.github.com/users/ailzhang/received_events", "type": "User", "site_admin": false}, "body": "This PR fix #8817 (also master track of 0.4.1 #9280) the perf gap from GPU argmax/argmin with numpy argmax/argmin.\r\n\r\n\r\nI will explain using argmax, where argmin is almost the same. There were two issues:\r\n1. The way kernel was designed was not friendly to tensors with very long rows. The old logic was designed to use a kernel with `BlockDim(16,32,1)`, all 16 threads in the same column of block handles the reduction over one row. Given an edge case of `[1, 1440000]`, we actually only have 16 thread doing the reduction over 1440000 elements which is slow. We used `BlockDim.y=32` to coordinate handling different rows, which is actually not necessary. A better logic is to have `BlockDim(512,1,1)`, let 512 threads working on a single row. And let `GridDim(min(1024, num_rows))` to handle reduction for different rows.\r\n2. When dim=None(argmax over the  whole tensor), we squeeze the tensor to a 1-d tensor first and then reduce over dim=0. This actually always put us in an edge case that our old kernel fails to handle efficiently. To fix, it actually makes sense to do it multiple passes over each dimension, and then translates the index back. \r\n\r\n\r\n\r\nThis PR implements the logic above and here's a brief perf comparison.\r\n\r\nComparison for kernel: `argmax(dim=1)` of shape \r\n\r\n|  | [1, 1440000]  | [14400, 14400]|\r\n|---|---|---|\r\n|old kernel [16,32]:|37.5|4.49|\r\n|new kernel [512, 1]:|1.96| 3.58|\r\n|numpy:\t|2.25|446|\r\n|cpu:|2.01|448|\r\n\r\nComparing for multiple pass: `argmax()` of shape \r\n\r\n| |[14400, 14400] | [1, 1440000]|\r\n|---|---|---|\r\n|gpu with multi pass:|  3.59|\t2.35|\r\n|gpu without multi pass:|  175 | 1.97|\r\n|numpy:| 458  |2.17|\r\n|cpu with multi pass:\t|  733 | 22|\r\n|cpu without multi pass: |  411| 1.98|\r\n\r\nWe can see that with a regular large tensor shape, multiple pass could help a lot in GPU perf.\r\nBut doing so is not good from cpu side. On the other side, even without this multiple pass, our GPU perf with new kernel is still better than CPU and numpy. So I'm not sure if we would like to aggressively optimize for this. Attaching some perf numbers for our reference.  IIRC we do this multiple pass logic in kernels of torch.max() so that we could keep CPU separate. We could also do that if it's preferred.\r\n\r\ncc: @soumith  @SsnL \r\n\r\n\r\n\r\n", "created_at": "2018-07-20T22:03:29Z", "updated_at": "2018-11-23T15:47:55Z", "closed_at": "2018-08-06T21:48:40Z", "merged_at": null, "merge_commit_sha": "59636dd066d6fb615d485e8eae0cc3a6d5204745", "assignee": null, "assignees": [], "requested_reviewers": [{"login": "ezyang", "id": 13564, "node_id": "MDQ6VXNlcjEzNTY0", "avatar_url": "https://avatars0.githubusercontent.com/u/13564?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ezyang", "html_url": "https://github.com/ezyang", "followers_url": "https://api.github.com/users/ezyang/followers", "following_url": "https://api.github.com/users/ezyang/following{/other_user}", "gists_url": "https://api.github.com/users/ezyang/gists{/gist_id}", "starred_url": "https://api.github.com/users/ezyang/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ezyang/subscriptions", "organizations_url": "https://api.github.com/users/ezyang/orgs", "repos_url": "https://api.github.com/users/ezyang/repos", "events_url": "https://api.github.com/users/ezyang/events{/privacy}", "received_events_url": "https://api.github.com/users/ezyang/received_events", "type": "User", "site_admin": false}, {"login": "zdevito", "id": 370202, "node_id": "MDQ6VXNlcjM3MDIwMg==", "avatar_url": "https://avatars0.githubusercontent.com/u/370202?v=4", "gravatar_id": "", "url": "https://api.github.com/users/zdevito", "html_url": "https://github.com/zdevito", "followers_url": "https://api.github.com/users/zdevito/followers", "following_url": "https://api.github.com/users/zdevito/following{/other_user}", "gists_url": "https://api.github.com/users/zdevito/gists{/gist_id}", "starred_url": "https://api.github.com/users/zdevito/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/zdevito/subscriptions", "organizations_url": "https://api.github.com/users/zdevito/orgs", "repos_url": "https://api.github.com/users/zdevito/repos", "events_url": "https://api.github.com/users/zdevito/events{/privacy}", "received_events_url": "https://api.github.com/users/zdevito/received_events", "type": "User", "site_admin": false}, {"login": "colesbury", "id": 655866, "node_id": "MDQ6VXNlcjY1NTg2Ng==", "avatar_url": "https://avatars1.githubusercontent.com/u/655866?v=4", "gravatar_id": "", "url": "https://api.github.com/users/colesbury", "html_url": "https://github.com/colesbury", "followers_url": "https://api.github.com/users/colesbury/followers", "following_url": "https://api.github.com/users/colesbury/following{/other_user}", "gists_url": "https://api.github.com/users/colesbury/gists{/gist_id}", "starred_url": "https://api.github.com/users/colesbury/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/colesbury/subscriptions", "organizations_url": "https://api.github.com/users/colesbury/orgs", "repos_url": "https://api.github.com/users/colesbury/repos", "events_url": "https://api.github.com/users/colesbury/events{/privacy}", "received_events_url": "https://api.github.com/users/colesbury/received_events", "type": "User", "site_admin": false}, {"login": "soumith", "id": 1310570, "node_id": "MDQ6VXNlcjEzMTA1NzA=", "avatar_url": "https://avatars0.githubusercontent.com/u/1310570?v=4", "gravatar_id": "", "url": "https://api.github.com/users/soumith", "html_url": "https://github.com/soumith", "followers_url": "https://api.github.com/users/soumith/followers", "following_url": "https://api.github.com/users/soumith/following{/other_user}", "gists_url": "https://api.github.com/users/soumith/gists{/gist_id}", "starred_url": "https://api.github.com/users/soumith/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/soumith/subscriptions", "organizations_url": "https://api.github.com/users/soumith/orgs", "repos_url": "https://api.github.com/users/soumith/repos", "events_url": "https://api.github.com/users/soumith/events{/privacy}", "received_events_url": "https://api.github.com/users/soumith/received_events", "type": "User", "site_admin": false}, {"login": "gchanan", "id": 3768583, "node_id": "MDQ6VXNlcjM3Njg1ODM=", "avatar_url": "https://avatars2.githubusercontent.com/u/3768583?v=4", "gravatar_id": "", "url": "https://api.github.com/users/gchanan", "html_url": "https://github.com/gchanan", "followers_url": "https://api.github.com/users/gchanan/followers", "following_url": "https://api.github.com/users/gchanan/following{/other_user}", "gists_url": "https://api.github.com/users/gchanan/gists{/gist_id}", "starred_url": "https://api.github.com/users/gchanan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/gchanan/subscriptions", "organizations_url": "https://api.github.com/users/gchanan/orgs", "repos_url": "https://api.github.com/users/gchanan/repos", "events_url": "https://api.github.com/users/gchanan/events{/privacy}", "received_events_url": "https://api.github.com/users/gchanan/received_events", "type": "User", "site_admin": false}], "requested_teams": [], "labels": [], "milestone": null, "commits_url": "https://api.github.com/repos/pytorch/pytorch/pulls/9661/commits", "review_comments_url": "https://api.github.com/repos/pytorch/pytorch/pulls/9661/comments", "review_comment_url": "https://api.github.com/repos/pytorch/pytorch/pulls/comments{/number}", "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/9661/comments", "statuses_url": "https://api.github.com/repos/pytorch/pytorch/statuses/492bce85d4859c74db558b1189b98181c8a948ae", "head": {"label": "ailzhang:argmax", "ref": "argmax", "sha": "492bce85d4859c74db558b1189b98181c8a948ae", "user": {"login": "ailzhang", "id": 5248122, "node_id": "MDQ6VXNlcjUyNDgxMjI=", "avatar_url": "https://avatars2.githubusercontent.com/u/5248122?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ailzhang", "html_url": "https://github.com/ailzhang", "followers_url": "https://api.github.com/users/ailzhang/followers", "following_url": "https://api.github.com/users/ailzhang/following{/other_user}", "gists_url": "https://api.github.com/users/ailzhang/gists{/gist_id}", "starred_url": "https://api.github.com/users/ailzhang/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ailzhang/subscriptions", "organizations_url": "https://api.github.com/users/ailzhang/orgs", "repos_url": "https://api.github.com/users/ailzhang/repos", "events_url": "https://api.github.com/users/ailzhang/events{/privacy}", "received_events_url": "https://api.github.com/users/ailzhang/received_events", "type": "User", "site_admin": false}, "repo": {"id": 100415363, "node_id": "MDEwOlJlcG9zaXRvcnkxMDA0MTUzNjM=", "name": "pytorch", "full_name": "ailzhang/pytorch", "private": false, "owner": {"login": "ailzhang", "id": 5248122, "node_id": "MDQ6VXNlcjUyNDgxMjI=", "avatar_url": "https://avatars2.githubusercontent.com/u/5248122?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ailzhang", "html_url": "https://github.com/ailzhang", "followers_url": "https://api.github.com/users/ailzhang/followers", "following_url": "https://api.github.com/users/ailzhang/following{/other_user}", "gists_url": "https://api.github.com/users/ailzhang/gists{/gist_id}", "starred_url": "https://api.github.com/users/ailzhang/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ailzhang/subscriptions", "organizations_url": "https://api.github.com/users/ailzhang/orgs", "repos_url": "https://api.github.com/users/ailzhang/repos", "events_url": "https://api.github.com/users/ailzhang/events{/privacy}", "received_events_url": "https://api.github.com/users/ailzhang/received_events", "type": "User", "site_admin": false}, "html_url": "https://github.com/ailzhang/pytorch", "description": "Tensors and Dynamic neural networks in Python  with strong GPU acceleration", "fork": true, "url": "https://api.github.com/repos/ailzhang/pytorch", "forks_url": "https://api.github.com/repos/ailzhang/pytorch/forks", "keys_url": "https://api.github.com/repos/ailzhang/pytorch/keys{/key_id}", "collaborators_url": "https://api.github.com/repos/ailzhang/pytorch/collaborators{/collaborator}", "teams_url": "https://api.github.com/repos/ailzhang/pytorch/teams", "hooks_url": "https://api.github.com/repos/ailzhang/pytorch/hooks", "issue_events_url": "https://api.github.com/repos/ailzhang/pytorch/issues/events{/number}", "events_url": "https://api.github.com/repos/ailzhang/pytorch/events", "assignees_url": "https://api.github.com/repos/ailzhang/pytorch/assignees{/user}", "branches_url": "https://api.github.com/repos/ailzhang/pytorch/branches{/branch}", "tags_url": "https://api.github.com/repos/ailzhang/pytorch/tags", "blobs_url": "https://api.github.com/repos/ailzhang/pytorch/git/blobs{/sha}", "git_tags_url": "https://api.github.com/repos/ailzhang/pytorch/git/tags{/sha}", "git_refs_url": "https://api.github.com/repos/ailzhang/pytorch/git/refs{/sha}", "trees_url": "https://api.github.com/repos/ailzhang/pytorch/git/trees{/sha}", "statuses_url": "https://api.github.com/repos/ailzhang/pytorch/statuses/{sha}", "languages_url": "https://api.github.com/repos/ailzhang/pytorch/languages", "stargazers_url": "https://api.github.com/repos/ailzhang/pytorch/stargazers", "contributors_url": "https://api.github.com/repos/ailzhang/pytorch/contributors", "subscribers_url": "https://api.github.com/repos/ailzhang/pytorch/subscribers", "subscription_url": "https://api.github.com/repos/ailzhang/pytorch/subscription", "commits_url": "https://api.github.com/repos/ailzhang/pytorch/commits{/sha}", "git_commits_url": "https://api.github.com/repos/ailzhang/pytorch/git/commits{/sha}", "comments_url": "https://api.github.com/repos/ailzhang/pytorch/comments{/number}", "issue_comment_url": "https://api.github.com/repos/ailzhang/pytorch/issues/comments{/number}", "contents_url": "https://api.github.com/repos/ailzhang/pytorch/contents/{+path}", "compare_url": "https://api.github.com/repos/ailzhang/pytorch/compare/{base}...{head}", "merges_url": "https://api.github.com/repos/ailzhang/pytorch/merges", "archive_url": "https://api.github.com/repos/ailzhang/pytorch/{archive_format}{/ref}", "downloads_url": "https://api.github.com/repos/ailzhang/pytorch/downloads", "issues_url": "https://api.github.com/repos/ailzhang/pytorch/issues{/number}", "pulls_url": "https://api.github.com/repos/ailzhang/pytorch/pulls{/number}", "milestones_url": "https://api.github.com/repos/ailzhang/pytorch/milestones{/number}", "notifications_url": "https://api.github.com/repos/ailzhang/pytorch/notifications{?since,all,participating}", "labels_url": "https://api.github.com/repos/ailzhang/pytorch/labels{/name}", "releases_url": "https://api.github.com/repos/ailzhang/pytorch/releases{/id}", "deployments_url": "https://api.github.com/repos/ailzhang/pytorch/deployments", "created_at": "2017-08-15T20:09:33Z", "updated_at": "2018-07-25T18:23:56Z", "pushed_at": "2018-11-22T01:26:01Z", "git_url": "git://github.com/ailzhang/pytorch.git", "ssh_url": "git@github.com:ailzhang/pytorch.git", "clone_url": "https://github.com/ailzhang/pytorch.git", "svn_url": "https://github.com/ailzhang/pytorch", "homepage": "http://pytorch.org", "size": 86152, "stargazers_count": 0, "watchers_count": 0, "language": "C++", "has_issues": false, "has_projects": true, "has_downloads": true, "has_wiki": true, "has_pages": false, "forks_count": 0, "mirror_url": null, "archived": false, "open_issues_count": 0, "license": {"key": "other", "name": "Other", "spdx_id": "NOASSERTION", "url": null, "node_id": "MDc6TGljZW5zZTA="}, "forks": 0, "open_issues": 0, "watchers": 0, "default_branch": "master"}}, "base": {"label": "pytorch:master", "ref": "master", "sha": "01581037dca1176508f4544b377a4c0f2d0dd165", "user": {"login": "pytorch", "id": 21003710, "node_id": "MDEyOk9yZ2FuaXphdGlvbjIxMDAzNzEw", "avatar_url": "https://avatars3.githubusercontent.com/u/21003710?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pytorch", "html_url": "https://github.com/pytorch", "followers_url": "https://api.github.com/users/pytorch/followers", "following_url": "https://api.github.com/users/pytorch/following{/other_user}", "gists_url": "https://api.github.com/users/pytorch/gists{/gist_id}", "starred_url": "https://api.github.com/users/pytorch/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pytorch/subscriptions", "organizations_url": "https://api.github.com/users/pytorch/orgs", "repos_url": "https://api.github.com/users/pytorch/repos", "events_url": "https://api.github.com/users/pytorch/events{/privacy}", "received_events_url": "https://api.github.com/users/pytorch/received_events", "type": "Organization", "site_admin": false}, "repo": {"id": 65600975, "node_id": "MDEwOlJlcG9zaXRvcnk2NTYwMDk3NQ==", "name": "pytorch", "full_name": "pytorch/pytorch", "private": false, "owner": {"login": "pytorch", "id": 21003710, "node_id": "MDEyOk9yZ2FuaXphdGlvbjIxMDAzNzEw", "avatar_url": "https://avatars3.githubusercontent.com/u/21003710?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pytorch", "html_url": "https://github.com/pytorch", "followers_url": "https://api.github.com/users/pytorch/followers", "following_url": "https://api.github.com/users/pytorch/following{/other_user}", "gists_url": "https://api.github.com/users/pytorch/gists{/gist_id}", "starred_url": "https://api.github.com/users/pytorch/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pytorch/subscriptions", "organizations_url": "https://api.github.com/users/pytorch/orgs", "repos_url": "https://api.github.com/users/pytorch/repos", "events_url": "https://api.github.com/users/pytorch/events{/privacy}", "received_events_url": "https://api.github.com/users/pytorch/received_events", "type": "Organization", "site_admin": false}, "html_url": "https://github.com/pytorch/pytorch", "description": "Tensors and Dynamic neural networks in Python  with strong GPU acceleration", "fork": false, "url": "https://api.github.com/repos/pytorch/pytorch", "forks_url": "https://api.github.com/repos/pytorch/pytorch/forks", "keys_url": "https://api.github.com/repos/pytorch/pytorch/keys{/key_id}", "collaborators_url": "https://api.github.com/repos/pytorch/pytorch/collaborators{/collaborator}", "teams_url": "https://api.github.com/repos/pytorch/pytorch/teams", "hooks_url": "https://api.github.com/repos/pytorch/pytorch/hooks", "issue_events_url": "https://api.github.com/repos/pytorch/pytorch/issues/events{/number}", "events_url": "https://api.github.com/repos/pytorch/pytorch/events", "assignees_url": "https://api.github.com/repos/pytorch/pytorch/assignees{/user}", "branches_url": "https://api.github.com/repos/pytorch/pytorch/branches{/branch}", "tags_url": "https://api.github.com/repos/pytorch/pytorch/tags", "blobs_url": "https://api.github.com/repos/pytorch/pytorch/git/blobs{/sha}", "git_tags_url": "https://api.github.com/repos/pytorch/pytorch/git/tags{/sha}", "git_refs_url": "https://api.github.com/repos/pytorch/pytorch/git/refs{/sha}", "trees_url": "https://api.github.com/repos/pytorch/pytorch/git/trees{/sha}", "statuses_url": "https://api.github.com/repos/pytorch/pytorch/statuses/{sha}", "languages_url": "https://api.github.com/repos/pytorch/pytorch/languages", "stargazers_url": "https://api.github.com/repos/pytorch/pytorch/stargazers", "contributors_url": "https://api.github.com/repos/pytorch/pytorch/contributors", "subscribers_url": "https://api.github.com/repos/pytorch/pytorch/subscribers", "subscription_url": "https://api.github.com/repos/pytorch/pytorch/subscription", "commits_url": "https://api.github.com/repos/pytorch/pytorch/commits{/sha}", "git_commits_url": "https://api.github.com/repos/pytorch/pytorch/git/commits{/sha}", "comments_url": "https://api.github.com/repos/pytorch/pytorch/comments{/number}", "issue_comment_url": "https://api.github.com/repos/pytorch/pytorch/issues/comments{/number}", "contents_url": "https://api.github.com/repos/pytorch/pytorch/contents/{+path}", "compare_url": "https://api.github.com/repos/pytorch/pytorch/compare/{base}...{head}", "merges_url": "https://api.github.com/repos/pytorch/pytorch/merges", "archive_url": "https://api.github.com/repos/pytorch/pytorch/{archive_format}{/ref}", "downloads_url": "https://api.github.com/repos/pytorch/pytorch/downloads", "issues_url": "https://api.github.com/repos/pytorch/pytorch/issues{/number}", "pulls_url": "https://api.github.com/repos/pytorch/pytorch/pulls{/number}", "milestones_url": "https://api.github.com/repos/pytorch/pytorch/milestones{/number}", "notifications_url": "https://api.github.com/repos/pytorch/pytorch/notifications{?since,all,participating}", "labels_url": "https://api.github.com/repos/pytorch/pytorch/labels{/name}", "releases_url": "https://api.github.com/repos/pytorch/pytorch/releases{/id}", "deployments_url": "https://api.github.com/repos/pytorch/pytorch/deployments", "created_at": "2016-08-13T05:26:41Z", "updated_at": "2018-11-24T12:35:43Z", "pushed_at": "2018-11-24T12:42:01Z", "git_url": "git://github.com/pytorch/pytorch.git", "ssh_url": "git@github.com:pytorch/pytorch.git", "clone_url": "https://github.com/pytorch/pytorch.git", "svn_url": "https://github.com/pytorch/pytorch", "homepage": "http://pytorch.org", "size": 89656, "stargazers_count": 21589, "watchers_count": 21589, "language": "C++", "has_issues": true, "has_projects": true, "has_downloads": true, "has_wiki": true, "has_pages": false, "forks_count": 5153, "mirror_url": null, "archived": false, "open_issues_count": 2196, "license": {"key": "other", "name": "Other", "spdx_id": "NOASSERTION", "url": null, "node_id": "MDc6TGljZW5zZTA="}, "forks": 5153, "open_issues": 2196, "watchers": 21589, "default_branch": "master"}}, "_links": {"self": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/9661"}, "html": {"href": "https://github.com/pytorch/pytorch/pull/9661"}, "issue": {"href": "https://api.github.com/repos/pytorch/pytorch/issues/9661"}, "comments": {"href": "https://api.github.com/repos/pytorch/pytorch/issues/9661/comments"}, "review_comments": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/9661/comments"}, "review_comment": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/comments{/number}"}, "commits": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/9661/commits"}, "statuses": {"href": "https://api.github.com/repos/pytorch/pytorch/statuses/492bce85d4859c74db558b1189b98181c8a948ae"}}, "author_association": "CONTRIBUTOR", "body_html": "<p>This PR <span class=\"issue-keyword tooltipped tooltipped-se\" aria-label=\"This pull request closes issue #8817.\">fix</span> <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load issue title\" data-id=\"335055825\" data-permission-text=\"Issue title is private\" data-url=\"https://github.com/pytorch/pytorch/issues/8817\" data-hovercard-type=\"issue\" data-hovercard-url=\"/pytorch/pytorch/issues/8817/hovercard\" href=\"https://github.com/pytorch/pytorch/issues/8817\">#8817</a> (also master track of 0.4.1 <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load issue title\" data-id=\"339582935\" data-permission-text=\"Issue title is private\" data-url=\"https://github.com/pytorch/pytorch/issues/9280\" data-hovercard-type=\"issue\" data-hovercard-url=\"/pytorch/pytorch/issues/9280/hovercard\" href=\"https://github.com/pytorch/pytorch/issues/9280\">#9280</a>) the perf gap from GPU argmax/argmin with numpy argmax/argmin.</p>\n<p>I will explain using argmax, where argmin is almost the same. There were two issues:</p>\n<ol>\n<li>The way kernel was designed was not friendly to tensors with very long rows. The old logic was designed to use a kernel with <code>BlockDim(16,32,1)</code>, all 16 threads in the same column of block handles the reduction over one row. Given an edge case of <code>[1, 1440000]</code>, we actually only have 16 thread doing the reduction over 1440000 elements which is slow. We used <code>BlockDim.y=32</code> to coordinate handling different rows, which is actually not necessary. A better logic is to have <code>BlockDim(512,1,1)</code>, let 512 threads working on a single row. And let <code>GridDim(min(1024, num_rows))</code> to handle reduction for different rows.</li>\n<li>When dim=None(argmax over the  whole tensor), we squeeze the tensor to a 1-d tensor first and then reduce over dim=0. This actually always put us in an edge case that our old kernel fails to handle efficiently. To fix, it actually makes sense to do it multiple passes over each dimension, and then translates the index back.</li>\n</ol>\n<p>This PR implements the logic above and here's a brief perf comparison.</p>\n<p>Comparison for kernel: <code>argmax(dim=1)</code> of shape</p>\n<table>\n<thead>\n<tr>\n<th></th>\n<th>[1, 1440000]</th>\n<th>[14400, 14400]</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>old kernel [16,32]:</td>\n<td>37.5</td>\n<td>4.49</td>\n</tr>\n<tr>\n<td>new kernel [512, 1]:</td>\n<td>1.96</td>\n<td>3.58</td>\n</tr>\n<tr>\n<td>numpy:</td>\n<td>2.25</td>\n<td>446</td>\n</tr>\n<tr>\n<td>cpu:</td>\n<td>2.01</td>\n<td>448</td>\n</tr>\n</tbody>\n</table>\n<p>Comparing for multiple pass: <code>argmax()</code> of shape</p>\n<table>\n<thead>\n<tr>\n<th></th>\n<th>[14400, 14400]</th>\n<th>[1, 1440000]</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>gpu with multi pass:</td>\n<td>3.59</td>\n<td>2.35</td>\n</tr>\n<tr>\n<td>gpu without multi pass:</td>\n<td>175</td>\n<td>1.97</td>\n</tr>\n<tr>\n<td>numpy:</td>\n<td>458</td>\n<td>2.17</td>\n</tr>\n<tr>\n<td>cpu with multi pass:</td>\n<td>733</td>\n<td>22</td>\n</tr>\n<tr>\n<td>cpu without multi pass:</td>\n<td>411</td>\n<td>1.98</td>\n</tr>\n</tbody>\n</table>\n<p>We can see that with a regular large tensor shape, multiple pass could help a lot in GPU perf.<br>\nBut doing so is not good from cpu side. On the other side, even without this multiple pass, our GPU perf with new kernel is still better than CPU and numpy. So I'm not sure if we would like to aggressively optimize for this. Attaching some perf numbers for our reference.  IIRC we do this multiple pass logic in kernels of torch.max() so that we could keep CPU separate. We could also do that if it's preferred.</p>\n<p>cc: <a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=1310570\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/soumith\">@soumith</a>  <a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=5674597\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/SsnL\">@SsnL</a></p>", "body_text": "This PR fix #8817 (also master track of 0.4.1 #9280) the perf gap from GPU argmax/argmin with numpy argmax/argmin.\nI will explain using argmax, where argmin is almost the same. There were two issues:\n\nThe way kernel was designed was not friendly to tensors with very long rows. The old logic was designed to use a kernel with BlockDim(16,32,1), all 16 threads in the same column of block handles the reduction over one row. Given an edge case of [1, 1440000], we actually only have 16 thread doing the reduction over 1440000 elements which is slow. We used BlockDim.y=32 to coordinate handling different rows, which is actually not necessary. A better logic is to have BlockDim(512,1,1), let 512 threads working on a single row. And let GridDim(min(1024, num_rows)) to handle reduction for different rows.\nWhen dim=None(argmax over the  whole tensor), we squeeze the tensor to a 1-d tensor first and then reduce over dim=0. This actually always put us in an edge case that our old kernel fails to handle efficiently. To fix, it actually makes sense to do it multiple passes over each dimension, and then translates the index back.\n\nThis PR implements the logic above and here's a brief perf comparison.\nComparison for kernel: argmax(dim=1) of shape\n\n\n\n\n[1, 1440000]\n[14400, 14400]\n\n\n\n\nold kernel [16,32]:\n37.5\n4.49\n\n\nnew kernel [512, 1]:\n1.96\n3.58\n\n\nnumpy:\n2.25\n446\n\n\ncpu:\n2.01\n448\n\n\n\nComparing for multiple pass: argmax() of shape\n\n\n\n\n[14400, 14400]\n[1, 1440000]\n\n\n\n\ngpu with multi pass:\n3.59\n2.35\n\n\ngpu without multi pass:\n175\n1.97\n\n\nnumpy:\n458\n2.17\n\n\ncpu with multi pass:\n733\n22\n\n\ncpu without multi pass:\n411\n1.98\n\n\n\nWe can see that with a regular large tensor shape, multiple pass could help a lot in GPU perf.\nBut doing so is not good from cpu side. On the other side, even without this multiple pass, our GPU perf with new kernel is still better than CPU and numpy. So I'm not sure if we would like to aggressively optimize for this. Attaching some perf numbers for our reference.  IIRC we do this multiple pass logic in kernels of torch.max() so that we could keep CPU separate. We could also do that if it's preferred.\ncc: @soumith  @SsnL", "merged": false, "mergeable": null, "rebaseable": null, "mergeable_state": "unknown", "merged_by": null, "comments": 10, "review_comments": 3, "maintainer_can_modify": false, "commits": 2, "additions": 62, "deletions": 25, "changed_files": 4}