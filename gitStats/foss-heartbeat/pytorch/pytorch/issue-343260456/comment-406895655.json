{"url": "https://api.github.com/repos/pytorch/pytorch/issues/comments/406895655", "html_url": "https://github.com/pytorch/pytorch/pull/9661#issuecomment-406895655", "issue_url": "https://api.github.com/repos/pytorch/pytorch/issues/9661", "id": 406895655, "node_id": "MDEyOklzc3VlQ29tbWVudDQwNjg5NTY1NQ==", "user": {"login": "ailzhang", "id": 5248122, "node_id": "MDQ6VXNlcjUyNDgxMjI=", "avatar_url": "https://avatars2.githubusercontent.com/u/5248122?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ailzhang", "html_url": "https://github.com/ailzhang", "followers_url": "https://api.github.com/users/ailzhang/followers", "following_url": "https://api.github.com/users/ailzhang/following{/other_user}", "gists_url": "https://api.github.com/users/ailzhang/gists{/gist_id}", "starred_url": "https://api.github.com/users/ailzhang/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ailzhang/subscriptions", "organizations_url": "https://api.github.com/users/ailzhang/orgs", "repos_url": "https://api.github.com/users/ailzhang/repos", "events_url": "https://api.github.com/users/ailzhang/events{/privacy}", "received_events_url": "https://api.github.com/users/ailzhang/received_events", "type": "User", "site_admin": false}, "created_at": "2018-07-22T20:49:24Z", "updated_at": "2018-07-22T20:49:24Z", "author_association": "CONTRIBUTOR", "body_html": "<p><a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=5674597\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/SsnL\">@SsnL</a> <a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=9110200\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/fmassa\">@fmassa</a> Would you mind we still keep the multiple_pass logic in python side but add a <code>if is_cuda()</code> condition there?<br>\nI've tried moving it to Aten or TH/THC, but none of these have the convenient tensor indexing like tensor[(3,4)] in python, which means we have to do tensor[3][4] and that actually depend on ndim, it makes code tedious on C++ side. Or am I missing some convenient functions for this use case?</p>", "body_text": "@SsnL @fmassa Would you mind we still keep the multiple_pass logic in python side but add a if is_cuda() condition there?\nI've tried moving it to Aten or TH/THC, but none of these have the convenient tensor indexing like tensor[(3,4)] in python, which means we have to do tensor[3][4] and that actually depend on ndim, it makes code tedious on C++ side. Or am I missing some convenient functions for this use case?", "body": "@SsnL @fmassa Would you mind we still keep the multiple_pass logic in python side but add a `if is_cuda()` condition there?\r\nI've tried moving it to Aten or TH/THC, but none of these have the convenient tensor indexing like tensor[(3,4)] in python, which means we have to do tensor[3][4] and that actually depend on ndim, it makes code tedious on C++ side. Or am I missing some convenient functions for this use case?"}