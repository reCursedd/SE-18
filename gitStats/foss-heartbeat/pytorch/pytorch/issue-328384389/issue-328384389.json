{"url": "https://api.github.com/repos/pytorch/pytorch/issues/8023", "repository_url": "https://api.github.com/repos/pytorch/pytorch", "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/8023/labels{/name}", "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/8023/comments", "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/8023/events", "html_url": "https://github.com/pytorch/pytorch/issues/8023", "id": 328384389, "node_id": "MDU6SXNzdWUzMjgzODQzODk=", "number": 8023, "title": "[feature request] Hooks after accumulating all the gradients", "user": {"login": "Stonesjtu", "id": 4556044, "node_id": "MDQ6VXNlcjQ1NTYwNDQ=", "avatar_url": "https://avatars3.githubusercontent.com/u/4556044?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Stonesjtu", "html_url": "https://github.com/Stonesjtu", "followers_url": "https://api.github.com/users/Stonesjtu/followers", "following_url": "https://api.github.com/users/Stonesjtu/following{/other_user}", "gists_url": "https://api.github.com/users/Stonesjtu/gists{/gist_id}", "starred_url": "https://api.github.com/users/Stonesjtu/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Stonesjtu/subscriptions", "organizations_url": "https://api.github.com/users/Stonesjtu/orgs", "repos_url": "https://api.github.com/users/Stonesjtu/repos", "events_url": "https://api.github.com/users/Stonesjtu/events{/privacy}", "received_events_url": "https://api.github.com/users/Stonesjtu/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2018-06-01T05:13:54Z", "updated_at": "2018-06-01T13:00:46Z", "closed_at": "2018-06-01T13:00:46Z", "author_association": "CONTRIBUTOR", "body_html": "<p>Currently we can <code>register_hook</code> so a customized function is going to execute every time a gradient is computed. But what if I want to run a hook function only when the total <strong>gradient is accumulated</strong>?<br>\nSuch hook should be helpful when I want to overlap the transfer latency with backward on distributed training.<br>\nI can't find any documentation for that. And I think the <em>hook system</em> can potentially be much more powerful.</p>", "body_text": "Currently we can register_hook so a customized function is going to execute every time a gradient is computed. But what if I want to run a hook function only when the total gradient is accumulated?\nSuch hook should be helpful when I want to overlap the transfer latency with backward on distributed training.\nI can't find any documentation for that. And I think the hook system can potentially be much more powerful.", "body": "Currently we can `register_hook` so a customized function is going to execute every time a gradient is computed. But what if I want to run a hook function only when the total **gradient is accumulated**? \r\nSuch hook should be helpful when I want to overlap the transfer latency with backward on distributed training.\r\nI can't find any documentation for that. And I think the *hook system* can potentially be much more powerful."}