{"url": "https://api.github.com/repos/pytorch/pytorch/issues/comments/359077032", "html_url": "https://github.com/pytorch/pytorch/pull/4746#issuecomment-359077032", "issue_url": "https://api.github.com/repos/pytorch/pytorch/issues/4746", "id": 359077032, "node_id": "MDEyOklzc3VlQ29tbWVudDM1OTA3NzAzMg==", "user": {"login": "SsnL", "id": 5674597, "node_id": "MDQ6VXNlcjU2NzQ1OTc=", "avatar_url": "https://avatars2.githubusercontent.com/u/5674597?v=4", "gravatar_id": "", "url": "https://api.github.com/users/SsnL", "html_url": "https://github.com/SsnL", "followers_url": "https://api.github.com/users/SsnL/followers", "following_url": "https://api.github.com/users/SsnL/following{/other_user}", "gists_url": "https://api.github.com/users/SsnL/gists{/gist_id}", "starred_url": "https://api.github.com/users/SsnL/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/SsnL/subscriptions", "organizations_url": "https://api.github.com/users/SsnL/orgs", "repos_url": "https://api.github.com/users/SsnL/repos", "events_url": "https://api.github.com/users/SsnL/events{/privacy}", "received_events_url": "https://api.github.com/users/SsnL/received_events", "type": "User", "site_admin": false}, "created_at": "2018-01-19T20:14:23Z", "updated_at": "2018-01-19T20:14:23Z", "author_association": "CONTRIBUTOR", "body_html": "<p>pinging <a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=4583066\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/apaszke\">@apaszke</a> about the failing JIT test:</p>\n<p>It seems that the arg order of an Add is swapped. Should I just fix the test? Or are there more things I need to worry about?</p>\n<p>The error is:</p>\n<pre><code>20:06:26 OK\n20:06:26 Running JIT tests\n20:06:27 s...s..s...ss.s..s.....sx...x...F.s...........s...s.s..........\n20:06:27 ======================================================================\n20:06:27 FAIL: test_input_pruning (_main_.TestJit)\n20:06:27 Check that stage 1 will return only one value\n20:06:27 ----------------------------------------------------------------------\n20:06:27 Traceback (most recent call last):\n20:06:27   File \"test_jit.py\", line 1080, in test_input_pruning\n20:06:27     self.assertExpected(str(fn.graph_for(x, y)))\n20:06:27   File \"/var/lib/jenkins/workspace/test/common.py\", line 376, in assertExpected\n20:06:27     self.assertMultiLineEqual(expected, s)\n20:06:27 AssertionError: 'grap[304 chars]le(5, 5) = add[alpha={1}](%6, %5)\\n  return (%2, %3, %7);\\n}\\n' != 'grap[304 chars]le(5, 5) = add[alpha={1}](%5, %6)\\n  return (%2, %3, %7);\\n}\\n'\n20:06:27   graph(%0 : Double(5, 5)\n20:06:27         %1 : Double(5, 5)\n20:06:27         -------- stage 1 --------\n20:06:27         %4 : Double(5, 5)\n20:06:27         %5 : Double(5, 5)) {\n20:06:27     %2 : Double(5, 5) = mul(%0, %1)\n20:06:27     %3 : Double(5, 5) = add[alpha={1}](%0, %1)\n20:06:27     ---------------- stage 1 ----------------\n20:06:27     %6 : Double(5, 5) = mul(%4, %1)\n20:06:27 -   %7 : Double(5, 5) = add[alpha={1}](%6, %5)\n20:06:27 ?                                        ----\n20:06:27 +   %7 : Double(5, 5) = add[alpha={1}](%5, %6)\n20:06:27 ?                                       ++++\n20:06:27     return (%2, %3, %7);\n20:06:27   }\n20:06:27\n</code></pre>", "body_text": "pinging @apaszke about the failing JIT test:\nIt seems that the arg order of an Add is swapped. Should I just fix the test? Or are there more things I need to worry about?\nThe error is:\n20:06:26 OK\n20:06:26 Running JIT tests\n20:06:27 s...s..s...ss.s..s.....sx...x...F.s...........s...s.s..........\n20:06:27 ======================================================================\n20:06:27 FAIL: test_input_pruning (_main_.TestJit)\n20:06:27 Check that stage 1 will return only one value\n20:06:27 ----------------------------------------------------------------------\n20:06:27 Traceback (most recent call last):\n20:06:27   File \"test_jit.py\", line 1080, in test_input_pruning\n20:06:27     self.assertExpected(str(fn.graph_for(x, y)))\n20:06:27   File \"/var/lib/jenkins/workspace/test/common.py\", line 376, in assertExpected\n20:06:27     self.assertMultiLineEqual(expected, s)\n20:06:27 AssertionError: 'grap[304 chars]le(5, 5) = add[alpha={1}](%6, %5)\\n  return (%2, %3, %7);\\n}\\n' != 'grap[304 chars]le(5, 5) = add[alpha={1}](%5, %6)\\n  return (%2, %3, %7);\\n}\\n'\n20:06:27   graph(%0 : Double(5, 5)\n20:06:27         %1 : Double(5, 5)\n20:06:27         -------- stage 1 --------\n20:06:27         %4 : Double(5, 5)\n20:06:27         %5 : Double(5, 5)) {\n20:06:27     %2 : Double(5, 5) = mul(%0, %1)\n20:06:27     %3 : Double(5, 5) = add[alpha={1}](%0, %1)\n20:06:27     ---------------- stage 1 ----------------\n20:06:27     %6 : Double(5, 5) = mul(%4, %1)\n20:06:27 -   %7 : Double(5, 5) = add[alpha={1}](%6, %5)\n20:06:27 ?                                        ----\n20:06:27 +   %7 : Double(5, 5) = add[alpha={1}](%5, %6)\n20:06:27 ?                                       ++++\n20:06:27     return (%2, %3, %7);\n20:06:27   }\n20:06:27", "body": "pinging @apaszke about the failing JIT test:\r\n\r\nIt seems that the arg order of an Add is swapped. Should I just fix the test? Or are there more things I need to worry about? \r\n\r\nThe error is:\r\n```\r\n20:06:26 OK\r\n20:06:26 Running JIT tests\r\n20:06:27 s...s..s...ss.s..s.....sx...x...F.s...........s...s.s..........\r\n20:06:27 ======================================================================\r\n20:06:27 FAIL: test_input_pruning (_main_.TestJit)\r\n20:06:27 Check that stage 1 will return only one value\r\n20:06:27 ----------------------------------------------------------------------\r\n20:06:27 Traceback (most recent call last):\r\n20:06:27   File \"test_jit.py\", line 1080, in test_input_pruning\r\n20:06:27     self.assertExpected(str(fn.graph_for(x, y)))\r\n20:06:27   File \"/var/lib/jenkins/workspace/test/common.py\", line 376, in assertExpected\r\n20:06:27     self.assertMultiLineEqual(expected, s)\r\n20:06:27 AssertionError: 'grap[304 chars]le(5, 5) = add[alpha={1}](%6, %5)\\n  return (%2, %3, %7);\\n}\\n' != 'grap[304 chars]le(5, 5) = add[alpha={1}](%5, %6)\\n  return (%2, %3, %7);\\n}\\n'\r\n20:06:27   graph(%0 : Double(5, 5)\r\n20:06:27         %1 : Double(5, 5)\r\n20:06:27         -------- stage 1 --------\r\n20:06:27         %4 : Double(5, 5)\r\n20:06:27         %5 : Double(5, 5)) {\r\n20:06:27     %2 : Double(5, 5) = mul(%0, %1)\r\n20:06:27     %3 : Double(5, 5) = add[alpha={1}](%0, %1)\r\n20:06:27     ---------------- stage 1 ----------------\r\n20:06:27     %6 : Double(5, 5) = mul(%4, %1)\r\n20:06:27 -   %7 : Double(5, 5) = add[alpha={1}](%6, %5)\r\n20:06:27 ?                                        ----\r\n20:06:27 +   %7 : Double(5, 5) = add[alpha={1}](%5, %6)\r\n20:06:27 ?                                       ++++\r\n20:06:27     return (%2, %3, %7);\r\n20:06:27   }\r\n20:06:27\r\n```"}