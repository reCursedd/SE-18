{"url": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/227506410", "pull_request_review_id": 167560635, "id": 227506410, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIyNzUwNjQxMA==", "diff_hunk": "@@ -259,48 +341,77 @@ class PyTorchStreamWriter {\n \n   void writeFileFooter() {\n     write64BitIntegerLittleEndian(RecordTags::FOOTER);\n-    write64BitIntegerLittleEndian(last_record_idx);\n+    write64BitIntegerLittleEndian(last_record_idx_);\n     padToNextAlignmentBoundary();\n   }\n };\n \n-class PyTorchFileReader {\n+class PyTorchFileReader final {\n  public:\n-  PyTorchFileReader(const std::string& filename) :\n-    in(filename, std::ios_base::binary),\n-    stream_reader(in) {}\n+  PyTorchFileReader(const std::string& filename)\n+      : in_(filename, std::ios_base::binary), stream_reader_(in_) {}\n+\n+  bool hasNextRecord() {\n+    return stream_reader_.hasNextRecord();\n+  }\n+\n+  // return dataptr, key, size\n+  std::tuple<at::DataPtr, int64_t, int64_t> getNextRecord() {\n+    return stream_reader_.getNextRecord();\n+  }\n \n   std::tuple<at::DataPtr, size_t> getLastRecord() {\n-    return stream_reader.getLastRecord();\n+    return stream_reader_.getLastRecord();\n   }\n \n   std::tuple<at::DataPtr, size_t> getRecordWithKey(uint64_t key) {\n-    return stream_reader.getRecordWithKey(key);\n+    return stream_reader_.getRecordWithKey(key);\n+  }\n+\n+  bool close() {\n+    return stream_reader_.close();\n+  }\n+\n+  bool closed() {\n+    return stream_reader_.closed();\n   }\n \n  private:\n-  std::ifstream in;\n-  PyTorchStreamReader stream_reader;\n+  std::ifstream in_;\n+  PyTorchStreamReader stream_reader_;\n };\n \n-class PyTorchFileWriter {\n+class PyTorchFileWriter final {\n  public:\n-  PyTorchFileWriter(const std::string& filename) :\n-    out(filename, std::ios_base::binary),\n-    stream_writer(out) {}\n+  PyTorchFileWriter(const std::string& filename)\n+      : out_(filename, std::ios_base::binary), stream_writer_(out_) {}\n \n   uint64_t writeRecord(const char* data, size_t size) {\n-    return stream_writer.writeRecord(data, size);\n+    CAFFE_ENFORCE(\n+        !stream_writer_.finalized(),\n+        \"cannot write to a finalized stream writer.\");\n+    return stream_writer_.writeRecord(data, size);\n   }\n \n   void writeEndOfFile() {\n-    stream_writer.writeEndOfFile();\n-    out.close();\n+    CAFFE_ENFORCE(\n+        !stream_writer_.finalized(),\n+        \"cannot write end to a finalized stream writer.\");\n+    stream_writer_.writeEndOfFile();\n+    out_.close();\n+  }\n+\n+  int64_t getCurrentSize() {", "path": "caffe2/serialize/inline_container.h", "position": null, "original_position": 454, "commit_id": "8beeb484bf4d149767c4ea9d1d376a4c3d0b7c3e", "original_commit_id": "ba909b162a712710d63e679d9ce71dcc7dc4ecb6", "user": {"login": "BIT-silence", "id": 3357667, "node_id": "MDQ6VXNlcjMzNTc2Njc=", "avatar_url": "https://avatars0.githubusercontent.com/u/3357667?v=4", "gravatar_id": "", "url": "https://api.github.com/users/BIT-silence", "html_url": "https://github.com/BIT-silence", "followers_url": "https://api.github.com/users/BIT-silence/followers", "following_url": "https://api.github.com/users/BIT-silence/following{/other_user}", "gists_url": "https://api.github.com/users/BIT-silence/gists{/gist_id}", "starred_url": "https://api.github.com/users/BIT-silence/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/BIT-silence/subscriptions", "organizations_url": "https://api.github.com/users/BIT-silence/orgs", "repos_url": "https://api.github.com/users/BIT-silence/repos", "events_url": "https://api.github.com/users/BIT-silence/events{/privacy}", "received_events_url": "https://api.github.com/users/BIT-silence/received_events", "type": "User", "site_admin": false}, "body": "```suggestion\r\n  int64_t getCurrentSize() const {\r\n```", "created_at": "2018-10-23T18:12:10Z", "updated_at": "2018-11-23T15:53:27Z", "html_url": "https://github.com/pytorch/pytorch/pull/12993#discussion_r227506410", "pull_request_url": "https://api.github.com/repos/pytorch/pytorch/pulls/12993", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/227506410"}, "html": {"href": "https://github.com/pytorch/pytorch/pull/12993#discussion_r227506410"}, "pull_request": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/12993"}}, "body_html": "  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center text-gray\">\n        Suggested change <span class=\"d-inline-block lh-condensed px-1 rounded-1 border border-green\">Beta</span>\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by the pull request author or assignees.\">\n          <svg class=\"hide-sm octicon octicon-info\" viewBox=\"0 0 14 16\" version=\"1.1\" width=\"14\" height=\"16\">\n            <path fill-rule=\"evenodd\" d=\"M6.3 5.69a.942.942 0 0 1-.28-.7c0-.28.09-.52.28-.7.19-.18.42-.28.7-.28.28 0 .52.09.7.28.18.19.28.42.28.7 0 .28-.09.52-.28.7a1 1 0 0 1-.7.3c-.28 0-.52-.11-.7-.3zM8 7.99c-.02-.25-.11-.48-.31-.69-.2-.19-.42-.3-.69-.31H6c-.27.02-.48.13-.69.31-.2.2-.3.44-.31.69h1v3c.02.27.11.5.31.69.2.2.42.31.69.31h1c.27 0 .48-.11.69-.31.2-.19.3-.42.31-.69H8V7.98v.01zM7 2.3c-3.14 0-5.7 2.54-5.7 5.68 0 3.14 2.56 5.7 5.7 5.7s5.7-2.55 5.7-5.7c0-3.15-2.56-5.69-5.7-5.69v.01zM7 .98c3.86 0 7 3.14 7 7s-3.14 7-7 7-7-3.12-7-7 3.14-7 7-7z\"></path>\n          </svg>\n        </span>\n      </div>\n      <div class=\"flex-auto text-right text-gray\">\n        <a href=\"https://www.research.net/r/SuggestedChanges\" target=\"_blank\">Give us feedback</a>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0\">\n        <tbody><tr class=\"border-0\">\n          <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n          <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">  <span class=\"pl-c1\">int64_t</span> <span class=\"pl-en\">getCurrentSize</span>() {</td>\n        </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">  <span class=\"pl-c1\">int64_t</span> <span class=\"pl-en\">getCurrentSize</span>() <span class=\"pl-k x x-first\">const</span><span class=\"x x-last\"> </span>{</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "body_text": "Suggested change Beta\n        \n          \n            \n          \n        \n      \n      \n        Give us feedback\n      \n    \n    \n      \n        \n          \n            int64_t getCurrentSize() {\n        \n          \n            \n              int64_t getCurrentSize() const {"}