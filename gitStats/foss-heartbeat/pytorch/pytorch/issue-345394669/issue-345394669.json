{"url": "https://api.github.com/repos/pytorch/pytorch/issues/9965", "repository_url": "https://api.github.com/repos/pytorch/pytorch", "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/9965/labels{/name}", "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/9965/comments", "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/9965/events", "html_url": "https://github.com/pytorch/pytorch/pull/9965", "id": 345394669, "node_id": "MDExOlB1bGxSZXF1ZXN0MjA0NTYxMzk4", "number": 9965, "title": "use logsigmoid at multilabel_soft_margin_loss, and change output from shape=(N, C)to (N,)", "user": {"login": "weiyangfb", "id": 38509346, "node_id": "MDQ6VXNlcjM4NTA5MzQ2", "avatar_url": "https://avatars1.githubusercontent.com/u/38509346?v=4", "gravatar_id": "", "url": "https://api.github.com/users/weiyangfb", "html_url": "https://github.com/weiyangfb", "followers_url": "https://api.github.com/users/weiyangfb/followers", "following_url": "https://api.github.com/users/weiyangfb/following{/other_user}", "gists_url": "https://api.github.com/users/weiyangfb/gists{/gist_id}", "starred_url": "https://api.github.com/users/weiyangfb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/weiyangfb/subscriptions", "organizations_url": "https://api.github.com/users/weiyangfb/orgs", "repos_url": "https://api.github.com/users/weiyangfb/repos", "events_url": "https://api.github.com/users/weiyangfb/events{/privacy}", "received_events_url": "https://api.github.com/users/weiyangfb/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2018-07-27T23:35:02Z", "updated_at": "2018-11-23T15:48:43Z", "closed_at": "2018-08-04T00:55:34Z", "author_association": "CONTRIBUTOR", "pull_request": {"url": "https://api.github.com/repos/pytorch/pytorch/pulls/9965", "html_url": "https://github.com/pytorch/pytorch/pull/9965", "diff_url": "https://github.com/pytorch/pytorch/pull/9965.diff", "patch_url": "https://github.com/pytorch/pytorch/pull/9965.patch"}, "body_html": "<ul>\n<li><span class=\"issue-keyword tooltipped tooltipped-se\" aria-label=\"This pull request closes issue #9141.\">fixes</span> <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load issue title\" data-id=\"337962771\" data-permission-text=\"Issue title is private\" data-url=\"https://github.com/pytorch/pytorch/issues/9141\" data-hovercard-type=\"issue\" data-hovercard-url=\"/pytorch/pytorch/issues/9141/hovercard\" href=\"https://github.com/pytorch/pytorch/issues/9141\">#9141</a>, <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load issue title\" data-id=\"339750260\" data-permission-text=\"Issue title is private\" data-url=\"https://github.com/pytorch/pytorch/issues/9301\" data-hovercard-type=\"issue\" data-hovercard-url=\"/pytorch/pytorch/issues/9301/hovercard\" href=\"https://github.com/pytorch/pytorch/issues/9301\">#9301</a></li>\n<li>use logsigmoid at multilabel_soft_margin_loss to make it more stable (NOT fixing legacy MultiLabelSoftMarginCriterion)</li>\n<li>return (N) instead of (N, C) to match the same behavior as MultiMarginLoss</li>\n<li>Note that with this PR, the following behavior is expected:</li>\n</ul>\n<pre><code>loss = F.multilabel_soft_margin_loss(outputs, labels, reduction='none')\nloss_mean = F.multilabel_soft_margin_loss(outputs, labels, reduction='elementwise_mean')\nloss_sum = F.multilabel_soft_margin_loss(outputs, labels, reduction='sum')\n\nloss.sum() == loss_sum  # True\nloss.mean() == loss_mean  # True\n</code></pre>", "body_text": "fixes #9141, #9301\nuse logsigmoid at multilabel_soft_margin_loss to make it more stable (NOT fixing legacy MultiLabelSoftMarginCriterion)\nreturn (N) instead of (N, C) to match the same behavior as MultiMarginLoss\nNote that with this PR, the following behavior is expected:\n\nloss = F.multilabel_soft_margin_loss(outputs, labels, reduction='none')\nloss_mean = F.multilabel_soft_margin_loss(outputs, labels, reduction='elementwise_mean')\nloss_sum = F.multilabel_soft_margin_loss(outputs, labels, reduction='sum')\n\nloss.sum() == loss_sum  # True\nloss.mean() == loss_mean  # True", "body": "- fixes #9141, #9301\r\n- use logsigmoid at multilabel_soft_margin_loss to make it more stable (NOT fixing legacy MultiLabelSoftMarginCriterion)\r\n- return (N) instead of (N, C) to match the same behavior as MultiMarginLoss\r\n- Note that with this PR, the following behavior is expected:\r\n```\r\nloss = F.multilabel_soft_margin_loss(outputs, labels, reduction='none')\r\nloss_mean = F.multilabel_soft_margin_loss(outputs, labels, reduction='elementwise_mean')\r\nloss_sum = F.multilabel_soft_margin_loss(outputs, labels, reduction='sum')\r\n\r\nloss.sum() == loss_sum  # True\r\nloss.mean() == loss_mean  # True\r\n```"}