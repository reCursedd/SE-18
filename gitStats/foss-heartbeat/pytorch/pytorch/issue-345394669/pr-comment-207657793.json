{"url": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/207657793", "pull_request_review_id": 143322973, "id": 207657793, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwNzY1Nzc5Mw==", "diff_hunk": "@@ -1827,8 +1827,22 @@ def multilabel_soft_margin_loss(input, target, weight=None, size_average=None,\n     \"\"\"\n     if size_average is not None or reduce is not None:\n         reduction = _Reduction.legacy_get_string(size_average, reduce)\n-    input = torch.sigmoid(input)\n-    return binary_cross_entropy(input, target, weight, None, None, reduction)\n+\n+    loss = -(target * logsigmoid(input) + (1 - target) * logsigmoid(-input))\n+\n+    if weight is not None:\n+        loss = loss * weight\n+\n+    loss = loss.sum(dim=1)  # only return N loss values\n+\n+    if reduction == 'none':\n+        return loss", "path": "torch/nn/functional.py", "position": null, "original_position": 15, "commit_id": "5ae40c448843e915f45bb4a7b649718dbb555527", "original_commit_id": "f8fb4118235f697989cdc9cb436ff364937225da", "user": {"login": "weiyangfb", "id": 38509346, "node_id": "MDQ6VXNlcjM4NTA5MzQ2", "avatar_url": "https://avatars1.githubusercontent.com/u/38509346?v=4", "gravatar_id": "", "url": "https://api.github.com/users/weiyangfb", "html_url": "https://github.com/weiyangfb", "followers_url": "https://api.github.com/users/weiyangfb/followers", "following_url": "https://api.github.com/users/weiyangfb/following{/other_user}", "gists_url": "https://api.github.com/users/weiyangfb/gists{/gist_id}", "starred_url": "https://api.github.com/users/weiyangfb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/weiyangfb/subscriptions", "organizations_url": "https://api.github.com/users/weiyangfb/orgs", "repos_url": "https://api.github.com/users/weiyangfb/repos", "events_url": "https://api.github.com/users/weiyangfb/events{/privacy}", "received_events_url": "https://api.github.com/users/weiyangfb/received_events", "type": "User", "site_admin": false}, "body": "oh, you're right. Yeah, I will change that to follow the legacy behavior, so that \r\n```\r\nloss = F.multilabel_soft_margin_loss(outputs, labels, reduction='none')\r\nloss_mean = F.multilabel_soft_margin_loss(outputs, labels, reduction='elementwise_mean')\r\nloss_sum = F.multilabel_soft_margin_loss(outputs, labels, reduction='sum')\r\n\r\nloss.sum() == loss_sum  # True\r\nloss.mean() == loss_mean  # True\r\n```", "created_at": "2018-08-03T20:24:32Z", "updated_at": "2018-11-23T15:48:43Z", "html_url": "https://github.com/pytorch/pytorch/pull/9965#discussion_r207657793", "pull_request_url": "https://api.github.com/repos/pytorch/pytorch/pulls/9965", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/207657793"}, "html": {"href": "https://github.com/pytorch/pytorch/pull/9965#discussion_r207657793"}, "pull_request": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/9965"}}, "body_html": "<p>oh, you're right. Yeah, I will change that to follow the legacy behavior, so that</p>\n<pre><code>loss = F.multilabel_soft_margin_loss(outputs, labels, reduction='none')\nloss_mean = F.multilabel_soft_margin_loss(outputs, labels, reduction='elementwise_mean')\nloss_sum = F.multilabel_soft_margin_loss(outputs, labels, reduction='sum')\n\nloss.sum() == loss_sum  # True\nloss.mean() == loss_mean  # True\n</code></pre>", "body_text": "oh, you're right. Yeah, I will change that to follow the legacy behavior, so that\nloss = F.multilabel_soft_margin_loss(outputs, labels, reduction='none')\nloss_mean = F.multilabel_soft_margin_loss(outputs, labels, reduction='elementwise_mean')\nloss_sum = F.multilabel_soft_margin_loss(outputs, labels, reduction='sum')\n\nloss.sum() == loss_sum  # True\nloss.mean() == loss_mean  # True", "in_reply_to_id": 207654714}