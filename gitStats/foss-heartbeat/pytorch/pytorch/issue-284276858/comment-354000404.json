{"url": "https://api.github.com/repos/pytorch/pytorch/issues/comments/354000404", "html_url": "https://github.com/pytorch/pytorch/pull/4328#issuecomment-354000404", "issue_url": "https://api.github.com/repos/pytorch/pytorch/issues/4328", "id": 354000404, "node_id": "MDEyOklzc3VlQ29tbWVudDM1NDAwMDQwNA==", "user": {"login": "neerajprad", "id": 1762463, "node_id": "MDQ6VXNlcjE3NjI0NjM=", "avatar_url": "https://avatars3.githubusercontent.com/u/1762463?v=4", "gravatar_id": "", "url": "https://api.github.com/users/neerajprad", "html_url": "https://github.com/neerajprad", "followers_url": "https://api.github.com/users/neerajprad/followers", "following_url": "https://api.github.com/users/neerajprad/following{/other_user}", "gists_url": "https://api.github.com/users/neerajprad/gists{/gist_id}", "starred_url": "https://api.github.com/users/neerajprad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/neerajprad/subscriptions", "organizations_url": "https://api.github.com/users/neerajprad/orgs", "repos_url": "https://api.github.com/users/neerajprad/repos", "events_url": "https://api.github.com/users/neerajprad/events{/privacy}", "received_events_url": "https://api.github.com/users/neerajprad/received_events", "type": "User", "site_admin": false}, "created_at": "2017-12-26T18:49:26Z", "updated_at": "2017-12-26T18:49:26Z", "author_association": "CONTRIBUTOR", "body_html": "<blockquote>\n<p>Creating a tensor out of a tuple doesn't take the last dim (change it to sth else). It just treats it as a sequence (as if you gave it a list), and creates a 2-element tensor.</p>\n</blockquote>\n<p>Thanks for explaining, <a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=4583066\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/apaszke\">@apaszke</a>! What causes confusion is that most functions treat a <code>tuple</code> or a <code>torch.Size</code> argument the same (not by design but simply due to duck typing). If function could take either a sequence or a <code>torch.Size</code> arg, there is no way to prevent this kind of ambiguity I guess.</p>", "body_text": "Creating a tensor out of a tuple doesn't take the last dim (change it to sth else). It just treats it as a sequence (as if you gave it a list), and creates a 2-element tensor.\n\nThanks for explaining, @apaszke! What causes confusion is that most functions treat a tuple or a torch.Size argument the same (not by design but simply due to duck typing). If function could take either a sequence or a torch.Size arg, there is no way to prevent this kind of ambiguity I guess.", "body": "> Creating a tensor out of a tuple doesn't take the last dim (change it to sth else). It just treats it as a sequence (as if you gave it a list), and creates a 2-element tensor.\r\n\r\nThanks for explaining, @apaszke! What causes confusion is that most functions treat a `tuple` or a `torch.Size` argument the same (not by design but simply due to duck typing). If function could take either a sequence or a `torch.Size` arg, there is no way to prevent this kind of ambiguity I guess. \r\n\r\n\r\n"}