{"url": "https://api.github.com/repos/pytorch/pytorch/issues/11476", "repository_url": "https://api.github.com/repos/pytorch/pytorch", "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/11476/labels{/name}", "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/11476/comments", "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/11476/events", "html_url": "https://github.com/pytorch/pytorch/issues/11476", "id": 358761630, "node_id": "MDU6SXNzdWUzNTg3NjE2MzA=", "number": 11476, "title": "DataParallel replicates network object for device 0", "user": {"login": "SsnL", "id": 5674597, "node_id": "MDQ6VXNlcjU2NzQ1OTc=", "avatar_url": "https://avatars2.githubusercontent.com/u/5674597?v=4", "gravatar_id": "", "url": "https://api.github.com/users/SsnL", "html_url": "https://github.com/SsnL", "followers_url": "https://api.github.com/users/SsnL/followers", "following_url": "https://api.github.com/users/SsnL/following{/other_user}", "gists_url": "https://api.github.com/users/SsnL/gists{/gist_id}", "starred_url": "https://api.github.com/users/SsnL/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/SsnL/subscriptions", "organizations_url": "https://api.github.com/users/SsnL/orgs", "repos_url": "https://api.github.com/users/SsnL/repos", "events_url": "https://api.github.com/users/SsnL/events{/privacy}", "received_events_url": "https://api.github.com/users/SsnL/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1002715609, "node_id": "MDU6TGFiZWwxMDAyNzE1NjA5", "url": "https://api.github.com/repos/pytorch/pytorch/labels/blocker", "name": "blocker", "color": "b60205", "default": false}], "state": "closed", "locked": false, "assignee": {"login": "SsnL", "id": 5674597, "node_id": "MDQ6VXNlcjU2NzQ1OTc=", "avatar_url": "https://avatars2.githubusercontent.com/u/5674597?v=4", "gravatar_id": "", "url": "https://api.github.com/users/SsnL", "html_url": "https://github.com/SsnL", "followers_url": "https://api.github.com/users/SsnL/followers", "following_url": "https://api.github.com/users/SsnL/following{/other_user}", "gists_url": "https://api.github.com/users/SsnL/gists{/gist_id}", "starred_url": "https://api.github.com/users/SsnL/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/SsnL/subscriptions", "organizations_url": "https://api.github.com/users/SsnL/orgs", "repos_url": "https://api.github.com/users/SsnL/repos", "events_url": "https://api.github.com/users/SsnL/events{/privacy}", "received_events_url": "https://api.github.com/users/SsnL/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "SsnL", "id": 5674597, "node_id": "MDQ6VXNlcjU2NzQ1OTc=", "avatar_url": "https://avatars2.githubusercontent.com/u/5674597?v=4", "gravatar_id": "", "url": "https://api.github.com/users/SsnL", "html_url": "https://github.com/SsnL", "followers_url": "https://api.github.com/users/SsnL/followers", "following_url": "https://api.github.com/users/SsnL/following{/other_user}", "gists_url": "https://api.github.com/users/SsnL/gists{/gist_id}", "starred_url": "https://api.github.com/users/SsnL/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/SsnL/subscriptions", "organizations_url": "https://api.github.com/users/SsnL/orgs", "repos_url": "https://api.github.com/users/SsnL/repos", "events_url": "https://api.github.com/users/SsnL/events{/privacy}", "received_events_url": "https://api.github.com/users/SsnL/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 3, "created_at": "2018-09-10T19:30:28Z", "updated_at": "2018-10-16T23:03:26Z", "closed_at": "2018-10-16T23:03:26Z", "author_association": "CONTRIBUTOR", "body_html": "<p>This makes some hooks just not work, e.g., if your hook sets some attribute on the <code>module</code> input, they are lost. E.g., spectral norm. This makes DataParallel + spectral norm not converging.</p>\n<p>Also DataParallel + spectral norm doesn't work in eval mode because we don't properly broadcast buffers that require grad. See the following repro:</p>\n<pre><code>import torch\nimport torch.nn as nn\nfrom torch.nn.utils import spectral_norm\n\nnet = nn.Conv2d(3, 3, 3).cuda()\nnet = spectral_norm(net)\nnet = nn.DataParallel(net)\n\ninp = torch.randn(2, 3, 4, 4).cuda()\n\nnet(inp)\n\nnet.eval()\nnet(inp)\n</code></pre>\n<p>I'll fix both.</p>", "body_text": "This makes some hooks just not work, e.g., if your hook sets some attribute on the module input, they are lost. E.g., spectral norm. This makes DataParallel + spectral norm not converging.\nAlso DataParallel + spectral norm doesn't work in eval mode because we don't properly broadcast buffers that require grad. See the following repro:\nimport torch\nimport torch.nn as nn\nfrom torch.nn.utils import spectral_norm\n\nnet = nn.Conv2d(3, 3, 3).cuda()\nnet = spectral_norm(net)\nnet = nn.DataParallel(net)\n\ninp = torch.randn(2, 3, 4, 4).cuda()\n\nnet(inp)\n\nnet.eval()\nnet(inp)\n\nI'll fix both.", "body": "This makes some hooks just not work, e.g., if your hook sets some attribute on the `module` input, they are lost. E.g., spectral norm. This makes DataParallel + spectral norm not converging.\r\n\r\nAlso DataParallel + spectral norm doesn't work in eval mode because we don't properly broadcast buffers that require grad. See the following repro:\r\n\r\n```\r\nimport torch\r\nimport torch.nn as nn\r\nfrom torch.nn.utils import spectral_norm\r\n\r\nnet = nn.Conv2d(3, 3, 3).cuda()\r\nnet = spectral_norm(net)\r\nnet = nn.DataParallel(net)\r\n\r\ninp = torch.randn(2, 3, 4, 4).cuda()\r\n\r\nnet(inp)\r\n\r\nnet.eval()\r\nnet(inp)\r\n```\r\n\r\nI'll fix both."}