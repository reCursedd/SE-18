{"url": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/153272697", "pull_request_review_id": 79254374, "id": 153272697, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE1MzI3MjY5Nw==", "diff_hunk": "@@ -294,6 +294,26 @@ def test_default_colate_bad_numpy_types(self):\n         arr = np.array([[[object(), object(), object()]]])\n         self.assertRaises(TypeError, lambda: default_collate(arr))\n \n+    def test_sparse_tensor_loading(self):\n+        i0 = torch.LongTensor([[0, 1, 1], [2, 0, 2]])\n+        v0 = torch.FloatTensor([3, 4, 5])\n+        sparse_tensor0 = torch.sparse.FloatTensor(i0, v0, torch.Size([2, 3]))\n+\n+        i1 = torch.LongTensor([[1, 0, 1], [2, 0, 0]])\n+        v1 = torch.FloatTensor([3.1415, -1, 42])\n+        sparse_tensor1 = torch.sparse.FloatTensor(i1, v1, torch.Size([2, 3]))\n+\n+        dataset = [sparse_tensor0, sparse_tensor1]\n+\n+        def collate_fn(batch):\n+            return batch[0]\n+\n+        loader = DataLoader(dataset, batch_size=1, num_workers=2, collate_fn=collate_fn)", "path": "test/test_dataloader.py", "position": 18, "original_position": 18, "commit_id": "0c939aec2cb75417fd23f13b40e66da231b764e1", "original_commit_id": "0c939aec2cb75417fd23f13b40e66da231b764e1", "user": {"login": "apaszke", "id": 4583066, "node_id": "MDQ6VXNlcjQ1ODMwNjY=", "avatar_url": "https://avatars3.githubusercontent.com/u/4583066?v=4", "gravatar_id": "", "url": "https://api.github.com/users/apaszke", "html_url": "https://github.com/apaszke", "followers_url": "https://api.github.com/users/apaszke/followers", "following_url": "https://api.github.com/users/apaszke/following{/other_user}", "gists_url": "https://api.github.com/users/apaszke/gists{/gist_id}", "starred_url": "https://api.github.com/users/apaszke/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/apaszke/subscriptions", "organizations_url": "https://api.github.com/users/apaszke/orgs", "repos_url": "https://api.github.com/users/apaszke/repos", "events_url": "https://api.github.com/users/apaszke/events{/privacy}", "received_events_url": "https://api.github.com/users/apaszke/received_events", "type": "User", "site_admin": false}, "body": "I thought the test is to check that they work with data loaders, not that you can serialize them in multiprocessing. It's not a complete fix for that issue. You need to make sure that the default `collate_fn` can batch sparse tensors.", "created_at": "2017-11-27T17:51:36Z", "updated_at": "2018-11-23T15:36:51Z", "html_url": "https://github.com/pytorch/pytorch/pull/3902#discussion_r153272697", "pull_request_url": "https://api.github.com/repos/pytorch/pytorch/pulls/3902", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/153272697"}, "html": {"href": "https://github.com/pytorch/pytorch/pull/3902#discussion_r153272697"}, "pull_request": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/3902"}}, "body_html": "<p>I thought the test is to check that they work with data loaders, not that you can serialize them in multiprocessing. It's not a complete fix for that issue. You need to make sure that the default <code>collate_fn</code> can batch sparse tensors.</p>", "body_text": "I thought the test is to check that they work with data loaders, not that you can serialize them in multiprocessing. It's not a complete fix for that issue. You need to make sure that the default collate_fn can batch sparse tensors."}