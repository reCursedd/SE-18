{"url": "https://api.github.com/repos/pytorch/pytorch/issues/comments/305698763", "html_url": "https://github.com/pytorch/pytorch/issues/1362#issuecomment-305698763", "issue_url": "https://api.github.com/repos/pytorch/pytorch/issues/1362", "id": 305698763, "node_id": "MDEyOklzc3VlQ29tbWVudDMwNTY5ODc2Mw==", "user": {"login": "Stonesjtu", "id": 4556044, "node_id": "MDQ6VXNlcjQ1NTYwNDQ=", "avatar_url": "https://avatars3.githubusercontent.com/u/4556044?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Stonesjtu", "html_url": "https://github.com/Stonesjtu", "followers_url": "https://api.github.com/users/Stonesjtu/followers", "following_url": "https://api.github.com/users/Stonesjtu/following{/other_user}", "gists_url": "https://api.github.com/users/Stonesjtu/gists{/gist_id}", "starred_url": "https://api.github.com/users/Stonesjtu/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Stonesjtu/subscriptions", "organizations_url": "https://api.github.com/users/Stonesjtu/orgs", "repos_url": "https://api.github.com/users/Stonesjtu/repos", "events_url": "https://api.github.com/users/Stonesjtu/events{/privacy}", "received_events_url": "https://api.github.com/users/Stonesjtu/received_events", "type": "User", "site_admin": false}, "created_at": "2017-06-02T06:10:51Z", "updated_at": "2017-06-02T06:10:51Z", "author_association": "CONTRIBUTOR", "body_html": "<div class=\"email-fragment\">Q1: It depends on you wether to tie weights of encoder and decoder.\nQ2: You should add the parameters of nce to the optimizer, which means you will optimize both your original model and NCE output module.</div>\n<span class=\"email-hidden-toggle\"><a href=\"#\">\u2026</a></span><div class=\"email-hidden-reply\">\n<div class=\"email-quoted-reply\"> On 2 Jun 2017, at 1:57 PM, tonyyuango ***@***.***&gt; wrote:\n\n Thanks <a class=\"user-mention\" href=\"https://github.com/parthaca\">@parthaca</a> &lt;<a href=\"https://github.com/parthaca\">https://github.com/parthaca</a>&gt; and <a class=\"user-mention\" href=\"https://github.com/Stonesjtu\">@Stonesjtu</a> &lt;<a href=\"https://github.com/stonesjtu\">https://github.com/stonesjtu</a>&gt;! Your implementations help me a lot! I'm new to both pytorch and deep learning, and I just transfer to python from Java, so I encountered some difficulties when reading your code. It would be appreciated if you could clarify them.\n\n I found <a class=\"user-mention\" href=\"https://github.com/parthaca\">@parthaca</a> &lt;<a href=\"https://github.com/parthaca\">https://github.com/parthaca</a>&gt; uses the same parameters (weight and bias) for both encoder and nce decoder (\"self.decoder.weight = self.encoder.weight\" in model.py). I'm not quite clear about the reason. Does it mean that the input and output spaces must be the same?\n\n I implemented my nce by following <a class=\"user-mention\" href=\"https://github.com/Stonesjtu\">@Stonesjtu</a> &lt;<a href=\"https://github.com/stonesjtu\">https://github.com/stonesjtu</a>&gt; 's code as it came out a little earlier, but I found the parameters of the decoder don't change during model fitting. Perhaps it's because the decoder is a part of the loss function and its parameters are not involved in the backward propagation (please correct me if I'm wrong). Thus I put the decoder into the RNN model and then it worked.\n\n \u2014\n You are receiving this because you were mentioned.\n Reply to this email directly, view it on GitHub &lt;<a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load issue title\" data-id=\"224562251\" data-permission-text=\"Issue title is private\" data-url=\"https://github.com/pytorch/pytorch/issues/1362\" href=\"https://github.com/pytorch/pytorch/issues/1362#issuecomment-305696922\">#1362 (comment)</a>&gt;, or mute the thread &lt;<a href=\"https://github.com/notifications/unsubscribe-auth/AEWFDKgwlCtADMKk1Hjnppuc3wGJD9f-ks5r_6QsgaJpZM4NJQ9A\">https://github.com/notifications/unsubscribe-auth/AEWFDKgwlCtADMKk1Hjnppuc3wGJD9f-ks5r_6QsgaJpZM4NJQ9A</a>&gt;.\n</div>\n<div class=\"email-fragment\"></div>\n</div>", "body_text": "Q1: It depends on you wether to tie weights of encoder and decoder.\nQ2: You should add the parameters of nce to the optimizer, which means you will optimize both your original model and NCE output module.\n\u2026\n On 2 Jun 2017, at 1:57 PM, tonyyuango ***@***.***> wrote:\n\n Thanks @parthaca <https://github.com/parthaca> and @Stonesjtu <https://github.com/stonesjtu>! Your implementations help me a lot! I'm new to both pytorch and deep learning, and I just transfer to python from Java, so I encountered some difficulties when reading your code. It would be appreciated if you could clarify them.\n\n I found @parthaca <https://github.com/parthaca> uses the same parameters (weight and bias) for both encoder and nce decoder (\"self.decoder.weight = self.encoder.weight\" in model.py). I'm not quite clear about the reason. Does it mean that the input and output spaces must be the same?\n\n I implemented my nce by following @Stonesjtu <https://github.com/stonesjtu> 's code as it came out a little earlier, but I found the parameters of the decoder don't change during model fitting. Perhaps it's because the decoder is a part of the loss function and its parameters are not involved in the backward propagation (please correct me if I'm wrong). Thus I put the decoder into the RNN model and then it worked.\n\n \u2014\n You are receiving this because you were mentioned.\n Reply to this email directly, view it on GitHub <#1362 (comment)>, or mute the thread <https://github.com/notifications/unsubscribe-auth/AEWFDKgwlCtADMKk1Hjnppuc3wGJD9f-ks5r_6QsgaJpZM4NJQ9A>.", "body": "Q1: It depends on you wether to tie weights of encoder and decoder.\nQ2: You should add the parameters of nce to the optimizer, which means you will optimize both your original model and NCE output module. \n> On 2 Jun 2017, at 1:57 PM, tonyyuango <notifications@github.com> wrote:\n> \n> Thanks @parthaca <https://github.com/parthaca> and @Stonesjtu <https://github.com/stonesjtu>! Your implementations help me a lot! I'm new to both pytorch and deep learning, and I just transfer to python from Java, so I encountered some difficulties when reading your code. It would be appreciated if you could clarify them.\n> \n> I found @parthaca <https://github.com/parthaca> uses the same parameters (weight and bias) for both encoder and nce decoder (\"self.decoder.weight = self.encoder.weight\" in model.py). I'm not quite clear about the reason. Does it mean that the input and output spaces must be the same?\n> \n> I implemented my nce by following @Stonesjtu <https://github.com/stonesjtu> 's code as it came out a little earlier, but I found the parameters of the decoder don't change during model fitting. Perhaps it's because the decoder is a part of the loss function and its parameters are not involved in the backward propagation (please correct me if I'm wrong). Thus I put the decoder into the RNN model and then it worked.\n> \n> \u2014\n> You are receiving this because you were mentioned.\n> Reply to this email directly, view it on GitHub <https://github.com/pytorch/pytorch/issues/1362#issuecomment-305696922>, or mute the thread <https://github.com/notifications/unsubscribe-auth/AEWFDKgwlCtADMKk1Hjnppuc3wGJD9f-ks5r_6QsgaJpZM4NJQ9A>.\n> \n\n"}