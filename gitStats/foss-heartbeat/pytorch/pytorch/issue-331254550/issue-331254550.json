{"url": "https://api.github.com/repos/pytorch/pytorch/issues/8335", "repository_url": "https://api.github.com/repos/pytorch/pytorch", "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/8335/labels{/name}", "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/8335/comments", "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/8335/events", "html_url": "https://github.com/pytorch/pytorch/issues/8335", "id": 331254550, "node_id": "MDU6SXNzdWUzMzEyNTQ1NTA=", "number": 8335, "title": "DEBUG mode no longer builds with -O0", "user": {"login": "ezyang", "id": 13564, "node_id": "MDQ6VXNlcjEzNTY0", "avatar_url": "https://avatars0.githubusercontent.com/u/13564?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ezyang", "html_url": "https://github.com/ezyang", "followers_url": "https://api.github.com/users/ezyang/followers", "following_url": "https://api.github.com/users/ezyang/following{/other_user}", "gists_url": "https://api.github.com/users/ezyang/gists{/gist_id}", "starred_url": "https://api.github.com/users/ezyang/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ezyang/subscriptions", "organizations_url": "https://api.github.com/users/ezyang/orgs", "repos_url": "https://api.github.com/users/ezyang/repos", "events_url": "https://api.github.com/users/ezyang/events{/privacy}", "received_events_url": "https://api.github.com/users/ezyang/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2018-06-11T16:10:41Z", "updated_at": "2018-06-12T01:05:54Z", "closed_at": "2018-06-12T01:05:54Z", "author_association": "CONTRIBUTOR", "body_html": "<p>I think this may have been intentional, so I want to float this first before I apply the change.</p>\n<p>Historically, PyTorch did DEBUG builds with <code>-O0</code>, because it prevents inlining, which means that you can inspect variables in all stack frames. However, in master, DEBUG mode appears to be compiled with optimizations, which means that any inlined functions are non-inspectable.</p>\n<p>The following patch will turn off optimizations when compiled in DEBUG mode. Is there any reason not to apply this?</p>\n<pre><code>diff --git a/CMakeLists.txt b/CMakeLists.txt\nindex e80f1b0..37f5c42 100644\n--- a/CMakeLists.txt\n+++ b/CMakeLists.txt\n@@ -250,8 +250,8 @@ else()\n   endforeach(flag_var)\n endif()\n \n-set (CMAKE_CXX_FLAGS_DEBUG \"${CMAKE_CXX_FLAGS_DEBUG} -fno-omit-frame-pointer\")\n-set (CMAKE_LINKER_FLAGS_DEBUG \"${CMAKE_STATIC_LINKER_FLAGS_DEBUG} -fno-omit-frame-pointer\")\n+set (CMAKE_CXX_FLAGS_DEBUG \"${CMAKE_CXX_FLAGS_DEBUG} -fno-omit-frame-pointer -O0\")\n+set (CMAKE_LINKER_FLAGS_DEBUG \"${CMAKE_STATIC_LINKER_FLAGS_DEBUG} -fno-omit-frame-pointer -O0\")\n if (USE_ASAN)\n     set (CMAKE_CXX_FLAGS_DEBUG \"${CMAKE_CXX_FLAGS_DEBUG} -fsanitize=address\")\n     set (CMAKE_LINKER_FLAGS_DEBUG \"${CMAKE_STATIC_LINKER_FLAGS_DEBUG} -fsanitize=address\")\n</code></pre>", "body_text": "I think this may have been intentional, so I want to float this first before I apply the change.\nHistorically, PyTorch did DEBUG builds with -O0, because it prevents inlining, which means that you can inspect variables in all stack frames. However, in master, DEBUG mode appears to be compiled with optimizations, which means that any inlined functions are non-inspectable.\nThe following patch will turn off optimizations when compiled in DEBUG mode. Is there any reason not to apply this?\ndiff --git a/CMakeLists.txt b/CMakeLists.txt\nindex e80f1b0..37f5c42 100644\n--- a/CMakeLists.txt\n+++ b/CMakeLists.txt\n@@ -250,8 +250,8 @@ else()\n   endforeach(flag_var)\n endif()\n \n-set (CMAKE_CXX_FLAGS_DEBUG \"${CMAKE_CXX_FLAGS_DEBUG} -fno-omit-frame-pointer\")\n-set (CMAKE_LINKER_FLAGS_DEBUG \"${CMAKE_STATIC_LINKER_FLAGS_DEBUG} -fno-omit-frame-pointer\")\n+set (CMAKE_CXX_FLAGS_DEBUG \"${CMAKE_CXX_FLAGS_DEBUG} -fno-omit-frame-pointer -O0\")\n+set (CMAKE_LINKER_FLAGS_DEBUG \"${CMAKE_STATIC_LINKER_FLAGS_DEBUG} -fno-omit-frame-pointer -O0\")\n if (USE_ASAN)\n     set (CMAKE_CXX_FLAGS_DEBUG \"${CMAKE_CXX_FLAGS_DEBUG} -fsanitize=address\")\n     set (CMAKE_LINKER_FLAGS_DEBUG \"${CMAKE_STATIC_LINKER_FLAGS_DEBUG} -fsanitize=address\")", "body": "I think this may have been intentional, so I want to float this first before I apply the change.\r\n\r\nHistorically, PyTorch did DEBUG builds with `-O0`, because it prevents inlining, which means that you can inspect variables in all stack frames. However, in master, DEBUG mode appears to be compiled with optimizations, which means that any inlined functions are non-inspectable.\r\n\r\nThe following patch will turn off optimizations when compiled in DEBUG mode. Is there any reason not to apply this?\r\n\r\n```\r\ndiff --git a/CMakeLists.txt b/CMakeLists.txt\r\nindex e80f1b0..37f5c42 100644\r\n--- a/CMakeLists.txt\r\n+++ b/CMakeLists.txt\r\n@@ -250,8 +250,8 @@ else()\r\n   endforeach(flag_var)\r\n endif()\r\n \r\n-set (CMAKE_CXX_FLAGS_DEBUG \"${CMAKE_CXX_FLAGS_DEBUG} -fno-omit-frame-pointer\")\r\n-set (CMAKE_LINKER_FLAGS_DEBUG \"${CMAKE_STATIC_LINKER_FLAGS_DEBUG} -fno-omit-frame-pointer\")\r\n+set (CMAKE_CXX_FLAGS_DEBUG \"${CMAKE_CXX_FLAGS_DEBUG} -fno-omit-frame-pointer -O0\")\r\n+set (CMAKE_LINKER_FLAGS_DEBUG \"${CMAKE_STATIC_LINKER_FLAGS_DEBUG} -fno-omit-frame-pointer -O0\")\r\n if (USE_ASAN)\r\n     set (CMAKE_CXX_FLAGS_DEBUG \"${CMAKE_CXX_FLAGS_DEBUG} -fsanitize=address\")\r\n     set (CMAKE_LINKER_FLAGS_DEBUG \"${CMAKE_STATIC_LINKER_FLAGS_DEBUG} -fsanitize=address\")\r\n```"}