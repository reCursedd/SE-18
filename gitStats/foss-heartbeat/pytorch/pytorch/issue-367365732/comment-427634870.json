{"url": "https://api.github.com/repos/pytorch/pytorch/issues/comments/427634870", "html_url": "https://github.com/pytorch/pytorch/pull/12394#issuecomment-427634870", "issue_url": "https://api.github.com/repos/pytorch/pytorch/issues/12394", "id": 427634870, "node_id": "MDEyOklzc3VlQ29tbWVudDQyNzYzNDg3MA==", "user": {"login": "samedii", "id": 1872050, "node_id": "MDQ6VXNlcjE4NzIwNTA=", "avatar_url": "https://avatars0.githubusercontent.com/u/1872050?v=4", "gravatar_id": "", "url": "https://api.github.com/users/samedii", "html_url": "https://github.com/samedii", "followers_url": "https://api.github.com/users/samedii/followers", "following_url": "https://api.github.com/users/samedii/following{/other_user}", "gists_url": "https://api.github.com/users/samedii/gists{/gist_id}", "starred_url": "https://api.github.com/users/samedii/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/samedii/subscriptions", "organizations_url": "https://api.github.com/users/samedii/orgs", "repos_url": "https://api.github.com/users/samedii/repos", "events_url": "https://api.github.com/users/samedii/events{/privacy}", "received_events_url": "https://api.github.com/users/samedii/received_events", "type": "User", "site_admin": false}, "created_at": "2018-10-07T08:17:23Z", "updated_at": "2018-10-07T19:52:42Z", "author_association": "NONE", "body_html": "<p>After looking a bit more and from my limited understanding of the framework it seems most likely that <code>torch._standard_gamma()</code> is not behaving properly when views are involved.</p>\n<p>Cloning immediately after expanding \"resolves\" the issue:</p>\n<pre><code>def rsample(self, sample_shape=()):\n    shape = self._extended_shape(sample_shape)\n    # this clone has no effect\n    # self.concentration = self.concentration.clone()\n    print(self.concentration)\n    print(shape)\n    concentration = self.concentration.expand(shape)\n    # this clone \"resolves\" the issue\n    concentration = concentration.clone()\n\n    if isinstance(concentration, torch.Tensor):\n        return _Dirichlet.apply(concentration)\n    return _dirichlet_sample_nograd(concentration)\n</code></pre>", "body_text": "After looking a bit more and from my limited understanding of the framework it seems most likely that torch._standard_gamma() is not behaving properly when views are involved.\nCloning immediately after expanding \"resolves\" the issue:\ndef rsample(self, sample_shape=()):\n    shape = self._extended_shape(sample_shape)\n    # this clone has no effect\n    # self.concentration = self.concentration.clone()\n    print(self.concentration)\n    print(shape)\n    concentration = self.concentration.expand(shape)\n    # this clone \"resolves\" the issue\n    concentration = concentration.clone()\n\n    if isinstance(concentration, torch.Tensor):\n        return _Dirichlet.apply(concentration)\n    return _dirichlet_sample_nograd(concentration)", "body": "After looking a bit more and from my limited understanding of the framework it seems most likely that `torch._standard_gamma()` is not behaving properly when views are involved.\r\n\r\nCloning immediately after expanding \"resolves\" the issue:\r\n\r\n    def rsample(self, sample_shape=()):\r\n        shape = self._extended_shape(sample_shape)\r\n        # this clone has no effect\r\n        # self.concentration = self.concentration.clone()\r\n        print(self.concentration)\r\n        print(shape)\r\n        concentration = self.concentration.expand(shape)\r\n        # this clone \"resolves\" the issue\r\n        concentration = concentration.clone()\r\n\r\n        if isinstance(concentration, torch.Tensor):\r\n            return _Dirichlet.apply(concentration)\r\n        return _dirichlet_sample_nograd(concentration)\r\n"}