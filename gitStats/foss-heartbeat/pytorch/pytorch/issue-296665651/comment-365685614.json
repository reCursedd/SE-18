{"url": "https://api.github.com/repos/pytorch/pytorch/issues/comments/365685614", "html_url": "https://github.com/pytorch/pytorch/issues/5210#issuecomment-365685614", "issue_url": "https://api.github.com/repos/pytorch/pytorch/issues/5210", "id": 365685614, "node_id": "MDEyOklzc3VlQ29tbWVudDM2NTY4NTYxNA==", "user": {"login": "ezyang", "id": 13564, "node_id": "MDQ6VXNlcjEzNTY0", "avatar_url": "https://avatars0.githubusercontent.com/u/13564?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ezyang", "html_url": "https://github.com/ezyang", "followers_url": "https://api.github.com/users/ezyang/followers", "following_url": "https://api.github.com/users/ezyang/following{/other_user}", "gists_url": "https://api.github.com/users/ezyang/gists{/gist_id}", "starred_url": "https://api.github.com/users/ezyang/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ezyang/subscriptions", "organizations_url": "https://api.github.com/users/ezyang/orgs", "repos_url": "https://api.github.com/users/ezyang/repos", "events_url": "https://api.github.com/users/ezyang/events{/privacy}", "received_events_url": "https://api.github.com/users/ezyang/received_events", "type": "User", "site_admin": false}, "created_at": "2018-02-14T17:37:52Z", "updated_at": "2018-02-14T17:37:52Z", "author_association": "CONTRIBUTOR", "body_html": "<p>I don't see any occurrences of volatile in your evaluation code, which means that you are likely attempting to backprop through the <em>entirety</em> of your validation data set, leading to an OOM. Try repackaging the input in:</p>\n<pre><code>\n            if use_cuda:\n                input_var = torch.autograd.Variable(i[0].cuda())\n                label_var = torch.autograd.Variable(i[1].cuda())\n            else:\n                input_var = torch.autograd.Variable(i[0])\n                label_var = torch.autograd.Variable(i[1])\n                pass\n</code></pre>\n<p>as</p>\n<pre><code>\n            if use_cuda:\n                input_var = torch.autograd.Variable(i[0].cuda(), volatile=True)\n                label_var = torch.autograd.Variable(i[1].cuda(), volatile=True)\n            else:\n                input_var = torch.autograd.Variable(i[0], volatile=True)\n                label_var = torch.autograd.Variable(i[1], volatile=True)\n                pass\n</code></pre>", "body_text": "I don't see any occurrences of volatile in your evaluation code, which means that you are likely attempting to backprop through the entirety of your validation data set, leading to an OOM. Try repackaging the input in:\n\n            if use_cuda:\n                input_var = torch.autograd.Variable(i[0].cuda())\n                label_var = torch.autograd.Variable(i[1].cuda())\n            else:\n                input_var = torch.autograd.Variable(i[0])\n                label_var = torch.autograd.Variable(i[1])\n                pass\n\nas\n\n            if use_cuda:\n                input_var = torch.autograd.Variable(i[0].cuda(), volatile=True)\n                label_var = torch.autograd.Variable(i[1].cuda(), volatile=True)\n            else:\n                input_var = torch.autograd.Variable(i[0], volatile=True)\n                label_var = torch.autograd.Variable(i[1], volatile=True)\n                pass", "body": "I don't see any occurrences of volatile in your evaluation code, which means that you are likely attempting to backprop through the *entirety* of your validation data set, leading to an OOM. Try repackaging the input in:\r\n\r\n```\r\n\r\n            if use_cuda:\r\n                input_var = torch.autograd.Variable(i[0].cuda())\r\n                label_var = torch.autograd.Variable(i[1].cuda())\r\n            else:\r\n                input_var = torch.autograd.Variable(i[0])\r\n                label_var = torch.autograd.Variable(i[1])\r\n                pass\r\n```\r\n\r\nas\r\n\r\n```\r\n\r\n            if use_cuda:\r\n                input_var = torch.autograd.Variable(i[0].cuda(), volatile=True)\r\n                label_var = torch.autograd.Variable(i[1].cuda(), volatile=True)\r\n            else:\r\n                input_var = torch.autograd.Variable(i[0], volatile=True)\r\n                label_var = torch.autograd.Variable(i[1], volatile=True)\r\n                pass\r\n```"}