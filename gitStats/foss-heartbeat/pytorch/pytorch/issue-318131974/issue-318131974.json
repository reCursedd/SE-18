{"url": "https://api.github.com/repos/pytorch/pytorch/issues/7002", "repository_url": "https://api.github.com/repos/pytorch/pytorch", "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/7002/labels{/name}", "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/7002/comments", "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/7002/events", "html_url": "https://github.com/pytorch/pytorch/issues/7002", "id": 318131974, "node_id": "MDU6SXNzdWUzMTgxMzE5NzQ=", "number": 7002, "title": "torch.clamp kills gradients at the border", "user": {"login": "SevenBlocks", "id": 8278755, "node_id": "MDQ6VXNlcjgyNzg3NTU=", "avatar_url": "https://avatars2.githubusercontent.com/u/8278755?v=4", "gravatar_id": "", "url": "https://api.github.com/users/SevenBlocks", "html_url": "https://github.com/SevenBlocks", "followers_url": "https://api.github.com/users/SevenBlocks/followers", "following_url": "https://api.github.com/users/SevenBlocks/following{/other_user}", "gists_url": "https://api.github.com/users/SevenBlocks/gists{/gist_id}", "starred_url": "https://api.github.com/users/SevenBlocks/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/SevenBlocks/subscriptions", "organizations_url": "https://api.github.com/users/SevenBlocks/orgs", "repos_url": "https://api.github.com/users/SevenBlocks/repos", "events_url": "https://api.github.com/users/SevenBlocks/events{/privacy}", "received_events_url": "https://api.github.com/users/SevenBlocks/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 897288569, "node_id": "MDU6TGFiZWw4OTcyODg1Njk=", "url": "https://api.github.com/repos/pytorch/pytorch/labels/pytorch", "name": "pytorch", "color": "f05732", "default": false}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 16, "created_at": "2018-04-26T17:45:53Z", "updated_at": "2018-04-30T13:22:12Z", "closed_at": "2018-04-30T13:22:12Z", "author_association": "NONE", "body_html": "<h2>Issue description</h2>\n<p>torch.clamp() should only affect gradients for values outside the min and max range, but it also appears to affect values equal to the min or max. I.e. clamping the value 0 to min=0, max=1 should have no effect on the gradient for that value, but it does--the gradient is being set to 0.</p>\n<h2>Code example</h2>\n<p>a=Variable(torch.tensor([0.0]), requires_grad=True)</p>\n<p># Normal result, gradient of a with respect to a is 1<br>\n&gt; torch.autograd.grad(a, a)<br>\n(tensor([ 1.]),)</p>\n<p># Incorrect result<br>\n&gt; torch.autograd.grad(torch.clamp(a, 0, 1), a)<br>\n(tensor([ 0.]),)</p>\n<p># Setting the min just below 0 also produces the correct result<br>\n&gt; torch.autograd.grad(torch.clamp(a, -0.1, 1), a)<br>\n(tensor([ 1.]),)</p>\n<h2>System Info</h2>\n<p>Collecting environment information...<br>\nPyTorch version: 0.4.0<br>\nIs debug build: No<br>\nCUDA used to build PyTorch: 8.0.61</p>\n<p>OS: Ubuntu 16.04.4 LTS<br>\nGCC version: (Ubuntu 5.4.0-6ubuntu1~16.04.9) 5.4.0 20160609<br>\nCMake version: version 3.5.1</p>\n<p>Python version: 3.5<br>\nIs CUDA available: Yes<br>\nCUDA runtime version: 9.0.176<br>\nGPU models and configuration:<br>\nGPU 0: GeForce GTX 980 Ti<br>\nGPU 1: GeForce GTX TITAN X</p>\n<p>Nvidia driver version: 384.111<br>\ncuDNN version: Probably one of the following:<br>\n/usr/lib/x86_64-linux-gnu/libcudnn.so.7.0.5<br>\n/usr/local/cuda-8.0/targets/x86_64-linux/lib/libcudnn.so.5.1.5<br>\n/usr/local/cuda-8.0/targets/x86_64-linux/lib/libcudnn.so.6.0.21<br>\n/usr/local/cuda-8.0/targets/x86_64-linux/lib/libcudnn_static.a</p>\n<p>Versions of relevant libraries:<br>\n[pip3] numpy (1.14.1)<br>\n[pip3] torch (0.4.0)<br>\n[pip3] torchvision (0.2.0)<br>\n[conda] Could not collect</p>\n<ul>\n<li>PyTorch or Caffe2:</li>\n<li>How you installed PyTorch (conda, pip, source): pip</li>\n<li>Build command you used (if compiling from source):</li>\n<li>OS:</li>\n<li>PyTorch version:</li>\n<li>Python version:</li>\n<li>CUDA/cuDNN version:</li>\n<li>GPU models and configuration:</li>\n<li>GCC version (if compiling from source):</li>\n<li>CMake version:</li>\n<li>Versions of any other relevant libraries:</li>\n</ul>", "body_text": "Issue description\ntorch.clamp() should only affect gradients for values outside the min and max range, but it also appears to affect values equal to the min or max. I.e. clamping the value 0 to min=0, max=1 should have no effect on the gradient for that value, but it does--the gradient is being set to 0.\nCode example\na=Variable(torch.tensor([0.0]), requires_grad=True)\n# Normal result, gradient of a with respect to a is 1\n> torch.autograd.grad(a, a)\n(tensor([ 1.]),)\n# Incorrect result\n> torch.autograd.grad(torch.clamp(a, 0, 1), a)\n(tensor([ 0.]),)\n# Setting the min just below 0 also produces the correct result\n> torch.autograd.grad(torch.clamp(a, -0.1, 1), a)\n(tensor([ 1.]),)\nSystem Info\nCollecting environment information...\nPyTorch version: 0.4.0\nIs debug build: No\nCUDA used to build PyTorch: 8.0.61\nOS: Ubuntu 16.04.4 LTS\nGCC version: (Ubuntu 5.4.0-6ubuntu1~16.04.9) 5.4.0 20160609\nCMake version: version 3.5.1\nPython version: 3.5\nIs CUDA available: Yes\nCUDA runtime version: 9.0.176\nGPU models and configuration:\nGPU 0: GeForce GTX 980 Ti\nGPU 1: GeForce GTX TITAN X\nNvidia driver version: 384.111\ncuDNN version: Probably one of the following:\n/usr/lib/x86_64-linux-gnu/libcudnn.so.7.0.5\n/usr/local/cuda-8.0/targets/x86_64-linux/lib/libcudnn.so.5.1.5\n/usr/local/cuda-8.0/targets/x86_64-linux/lib/libcudnn.so.6.0.21\n/usr/local/cuda-8.0/targets/x86_64-linux/lib/libcudnn_static.a\nVersions of relevant libraries:\n[pip3] numpy (1.14.1)\n[pip3] torch (0.4.0)\n[pip3] torchvision (0.2.0)\n[conda] Could not collect\n\nPyTorch or Caffe2:\nHow you installed PyTorch (conda, pip, source): pip\nBuild command you used (if compiling from source):\nOS:\nPyTorch version:\nPython version:\nCUDA/cuDNN version:\nGPU models and configuration:\nGCC version (if compiling from source):\nCMake version:\nVersions of any other relevant libraries:", "body": "## Issue description\r\n\r\ntorch.clamp() should only affect gradients for values outside the min and max range, but it also appears to affect values equal to the min or max. I.e. clamping the value 0 to min=0, max=1 should have no effect on the gradient for that value, but it does--the gradient is being set to 0.\r\n\r\n## Code example\r\n\r\na=Variable(torch.tensor([0.0]), requires_grad=True)\r\n\r\n\\# Normal result, gradient of a with respect to a is 1\r\n\\> torch.autograd.grad(a, a)\r\n(tensor([ 1.]),)\r\n\r\n\\# Incorrect result\r\n\\> torch.autograd.grad(torch.clamp(a, 0, 1), a)\r\n(tensor([ 0.]),)\r\n\r\n\\# Setting the min just below 0 also produces the correct result\r\n\\> torch.autograd.grad(torch.clamp(a, -0.1, 1), a)\r\n(tensor([ 1.]),)\r\n\r\n\r\n## System Info\r\nCollecting environment information...\r\nPyTorch version: 0.4.0\r\nIs debug build: No\r\nCUDA used to build PyTorch: 8.0.61\r\n\r\nOS: Ubuntu 16.04.4 LTS\r\nGCC version: (Ubuntu 5.4.0-6ubuntu1~16.04.9) 5.4.0 20160609\r\nCMake version: version 3.5.1\r\n\r\nPython version: 3.5\r\nIs CUDA available: Yes\r\nCUDA runtime version: 9.0.176\r\nGPU models and configuration: \r\nGPU 0: GeForce GTX 980 Ti\r\nGPU 1: GeForce GTX TITAN X\r\n\r\nNvidia driver version: 384.111\r\ncuDNN version: Probably one of the following:\r\n/usr/lib/x86_64-linux-gnu/libcudnn.so.7.0.5\r\n/usr/local/cuda-8.0/targets/x86_64-linux/lib/libcudnn.so.5.1.5\r\n/usr/local/cuda-8.0/targets/x86_64-linux/lib/libcudnn.so.6.0.21\r\n/usr/local/cuda-8.0/targets/x86_64-linux/lib/libcudnn_static.a\r\n\r\nVersions of relevant libraries:\r\n[pip3] numpy (1.14.1)\r\n[pip3] torch (0.4.0)\r\n[pip3] torchvision (0.2.0)\r\n[conda] Could not collect\r\n\r\n- PyTorch or Caffe2:\r\n- How you installed PyTorch (conda, pip, source): pip\r\n- Build command you used (if compiling from source):\r\n- OS:\r\n- PyTorch version:\r\n- Python version:\r\n- CUDA/cuDNN version:\r\n- GPU models and configuration:\r\n- GCC version (if compiling from source):\r\n- CMake version:\r\n- Versions of any other relevant libraries:\r\n"}