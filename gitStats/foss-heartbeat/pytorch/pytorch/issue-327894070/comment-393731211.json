{"url": "https://api.github.com/repos/pytorch/pytorch/issues/comments/393731211", "html_url": "https://github.com/pytorch/pytorch/issues/7962#issuecomment-393731211", "issue_url": "https://api.github.com/repos/pytorch/pytorch/issues/7962", "id": 393731211, "node_id": "MDEyOklzc3VlQ29tbWVudDM5MzczMTIxMQ==", "user": {"login": "skelleher", "id": 814866, "node_id": "MDQ6VXNlcjgxNDg2Ng==", "avatar_url": "https://avatars0.githubusercontent.com/u/814866?v=4", "gravatar_id": "", "url": "https://api.github.com/users/skelleher", "html_url": "https://github.com/skelleher", "followers_url": "https://api.github.com/users/skelleher/followers", "following_url": "https://api.github.com/users/skelleher/following{/other_user}", "gists_url": "https://api.github.com/users/skelleher/gists{/gist_id}", "starred_url": "https://api.github.com/users/skelleher/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/skelleher/subscriptions", "organizations_url": "https://api.github.com/users/skelleher/orgs", "repos_url": "https://api.github.com/users/skelleher/repos", "events_url": "https://api.github.com/users/skelleher/events{/privacy}", "received_events_url": "https://api.github.com/users/skelleher/received_events", "type": "User", "site_admin": false}, "created_at": "2018-06-01T01:26:50Z", "updated_at": "2018-06-01T01:26:50Z", "author_association": "NONE", "body_html": "<p>The problem I was trying to solve was compiling caffe2 with /MD instead of /MT.  Almost everywhere this is controlled by CAFFE2_USE_MSVC_STATIC_RUNTIME.</p>\n<p>I think there's a bad assumption in cuda.cmake, where this switch is instead controlled by BUILD_SHARED_LIBS (I don't agree that this should control /MT or /MD; static libs often need to be built with /MD).  But I enabled BUILD_SHARED_LIBS anyway, which failed to build.</p>\n<p>I think, to be consistent, cuda.cmake should use CAFFE2_USE_MSVC_STATIC_RUNTIME e.g.:</p>\n<pre><code>if (MSVC)\n  if (${CMAKE_BUILD_TYPE} MATCHES \"Release\")\n    if (${CAFFE2_USE_MSVC_STATIC_RUNTIME})\n      list(APPEND CUDA_NVCC_FLAGS \"-Xcompiler\" \"-MT\")\n    else()\n      list(APPEND CUDA_NVCC_FLAGS \"-Xcompiler\" \"-MD\")\n    endif()\n  elseif(${CMAKE_BUILD_TYPE} MATCHES \"Debug\")\n    message(FATAL_ERROR\n            \"Caffe2 currently does not support the combination of MSVC, Cuda \"\n            \"and Debug mode. Either set USE_CUDA=OFF or set the build type \"\n            \"to Release\")\n    if (${CAFFE2_USE_MSVC_STATIC_RUNTIME})\n      list(APPEND CUDA_NVCC_FLAGS \"-Xcompiler\" \"-MTd\")\n    else()\n      list(APPEND CUDA_NVCC_FLAGS \"-Xcompiler\" \"-MDd\")\n    endif()\n  else()\n    message(FATAL_ERROR \"Unknown cmake build type: \" ${CMAKE_BUILD_TYPE})\n  endif()\nendif()\n\n</code></pre>\n<p>As for the caffe2.pb.h compiler errors with BUILD_SHARED_LIBS, it beats me.</p>", "body_text": "The problem I was trying to solve was compiling caffe2 with /MD instead of /MT.  Almost everywhere this is controlled by CAFFE2_USE_MSVC_STATIC_RUNTIME.\nI think there's a bad assumption in cuda.cmake, where this switch is instead controlled by BUILD_SHARED_LIBS (I don't agree that this should control /MT or /MD; static libs often need to be built with /MD).  But I enabled BUILD_SHARED_LIBS anyway, which failed to build.\nI think, to be consistent, cuda.cmake should use CAFFE2_USE_MSVC_STATIC_RUNTIME e.g.:\nif (MSVC)\n  if (${CMAKE_BUILD_TYPE} MATCHES \"Release\")\n    if (${CAFFE2_USE_MSVC_STATIC_RUNTIME})\n      list(APPEND CUDA_NVCC_FLAGS \"-Xcompiler\" \"-MT\")\n    else()\n      list(APPEND CUDA_NVCC_FLAGS \"-Xcompiler\" \"-MD\")\n    endif()\n  elseif(${CMAKE_BUILD_TYPE} MATCHES \"Debug\")\n    message(FATAL_ERROR\n            \"Caffe2 currently does not support the combination of MSVC, Cuda \"\n            \"and Debug mode. Either set USE_CUDA=OFF or set the build type \"\n            \"to Release\")\n    if (${CAFFE2_USE_MSVC_STATIC_RUNTIME})\n      list(APPEND CUDA_NVCC_FLAGS \"-Xcompiler\" \"-MTd\")\n    else()\n      list(APPEND CUDA_NVCC_FLAGS \"-Xcompiler\" \"-MDd\")\n    endif()\n  else()\n    message(FATAL_ERROR \"Unknown cmake build type: \" ${CMAKE_BUILD_TYPE})\n  endif()\nendif()\n\n\nAs for the caffe2.pb.h compiler errors with BUILD_SHARED_LIBS, it beats me.", "body": "The problem I was trying to solve was compiling caffe2 with /MD instead of /MT.  Almost everywhere this is controlled by CAFFE2_USE_MSVC_STATIC_RUNTIME.\r\n\r\nI think there's a bad assumption in cuda.cmake, where this switch is instead controlled by BUILD_SHARED_LIBS (I don't agree that this should control /MT or /MD; static libs often need to be built with /MD).  But I enabled BUILD_SHARED_LIBS anyway, which failed to build.\r\n\r\nI think, to be consistent, cuda.cmake should use CAFFE2_USE_MSVC_STATIC_RUNTIME e.g.:\r\n\r\n```\r\nif (MSVC)\r\n  if (${CMAKE_BUILD_TYPE} MATCHES \"Release\")\r\n    if (${CAFFE2_USE_MSVC_STATIC_RUNTIME})\r\n      list(APPEND CUDA_NVCC_FLAGS \"-Xcompiler\" \"-MT\")\r\n    else()\r\n      list(APPEND CUDA_NVCC_FLAGS \"-Xcompiler\" \"-MD\")\r\n    endif()\r\n  elseif(${CMAKE_BUILD_TYPE} MATCHES \"Debug\")\r\n    message(FATAL_ERROR\r\n            \"Caffe2 currently does not support the combination of MSVC, Cuda \"\r\n            \"and Debug mode. Either set USE_CUDA=OFF or set the build type \"\r\n            \"to Release\")\r\n    if (${CAFFE2_USE_MSVC_STATIC_RUNTIME})\r\n      list(APPEND CUDA_NVCC_FLAGS \"-Xcompiler\" \"-MTd\")\r\n    else()\r\n      list(APPEND CUDA_NVCC_FLAGS \"-Xcompiler\" \"-MDd\")\r\n    endif()\r\n  else()\r\n    message(FATAL_ERROR \"Unknown cmake build type: \" ${CMAKE_BUILD_TYPE})\r\n  endif()\r\nendif()\r\n\r\n```\r\n\r\nAs for the caffe2.pb.h compiler errors with BUILD_SHARED_LIBS, it beats me.\r\n"}