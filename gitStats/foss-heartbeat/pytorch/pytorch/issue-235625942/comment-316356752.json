{"url": "https://api.github.com/repos/pytorch/pytorch/issues/comments/316356752", "html_url": "https://github.com/pytorch/pytorch/pull/1792#issuecomment-316356752", "issue_url": "https://api.github.com/repos/pytorch/pytorch/issues/1792", "id": 316356752, "node_id": "MDEyOklzc3VlQ29tbWVudDMxNjM1Njc1Mg==", "user": {"login": "fmassa", "id": 9110200, "node_id": "MDQ6VXNlcjkxMTAyMDA=", "avatar_url": "https://avatars2.githubusercontent.com/u/9110200?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fmassa", "html_url": "https://github.com/fmassa", "followers_url": "https://api.github.com/users/fmassa/followers", "following_url": "https://api.github.com/users/fmassa/following{/other_user}", "gists_url": "https://api.github.com/users/fmassa/gists{/gist_id}", "starred_url": "https://api.github.com/users/fmassa/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fmassa/subscriptions", "organizations_url": "https://api.github.com/users/fmassa/orgs", "repos_url": "https://api.github.com/users/fmassa/repos", "events_url": "https://api.github.com/users/fmassa/events{/privacy}", "received_events_url": "https://api.github.com/users/fmassa/received_events", "type": "User", "site_admin": false}, "created_at": "2017-07-19T11:30:51Z", "updated_at": "2017-07-19T11:30:51Z", "author_association": "MEMBER", "body_html": "<p><a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=687194\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/alykhantejani\">@alykhantejani</a> about the internal function to perform the broadcasting, you can use <a href=\"https://github.com/pytorch/pytorch/blob/master/torch/functional.py#L214\"><code>_infer_size</code></a> from python. I think this is the easiest route.</p>", "body_text": "@alykhantejani about the internal function to perform the broadcasting, you can use _infer_size from python. I think this is the easiest route.", "body": "@alykhantejani about the internal function to perform the broadcasting, you can use [`_infer_size`](https://github.com/pytorch/pytorch/blob/master/torch/functional.py#L214) from python. I think this is the easiest route."}