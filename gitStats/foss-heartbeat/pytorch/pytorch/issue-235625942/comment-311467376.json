{"url": "https://api.github.com/repos/pytorch/pytorch/issues/comments/311467376", "html_url": "https://github.com/pytorch/pytorch/pull/1792#issuecomment-311467376", "issue_url": "https://api.github.com/repos/pytorch/pytorch/issues/1792", "id": 311467376, "node_id": "MDEyOklzc3VlQ29tbWVudDMxMTQ2NzM3Ng==", "user": {"login": "esube", "id": 7385894, "node_id": "MDQ6VXNlcjczODU4OTQ=", "avatar_url": "https://avatars0.githubusercontent.com/u/7385894?v=4", "gravatar_id": "", "url": "https://api.github.com/users/esube", "html_url": "https://github.com/esube", "followers_url": "https://api.github.com/users/esube/followers", "following_url": "https://api.github.com/users/esube/following{/other_user}", "gists_url": "https://api.github.com/users/esube/gists{/gist_id}", "starred_url": "https://api.github.com/users/esube/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/esube/subscriptions", "organizations_url": "https://api.github.com/users/esube/orgs", "repos_url": "https://api.github.com/users/esube/repos", "events_url": "https://api.github.com/users/esube/events{/privacy}", "received_events_url": "https://api.github.com/users/esube/received_events", "type": "User", "site_admin": false}, "created_at": "2017-06-27T19:56:20Z", "updated_at": "2017-06-27T19:59:22Z", "author_association": "NONE", "body_html": "<p><a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=687194\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/alykhantejani\">@alykhantejani</a> Thanks for updating it to accommodate this. I had to do these modifications with the regular <code>BCELoss + Sigmoid</code> as well. In short most losses are written without multi-label weighting in mind.</p>\n<p>Note: that adding this support shouldn't break the support for class-based weighting so you might want to have two weights (class weight in the constructor as ussual and sample weight in the forward function and multiply with both).</p>", "body_text": "@alykhantejani Thanks for updating it to accommodate this. I had to do these modifications with the regular BCELoss + Sigmoid as well. In short most losses are written without multi-label weighting in mind.\nNote: that adding this support shouldn't break the support for class-based weighting so you might want to have two weights (class weight in the constructor as ussual and sample weight in the forward function and multiply with both).", "body": "@alykhantejani Thanks for updating it to accommodate this. I had to do these modifications with the regular `BCELoss + Sigmoid` as well. In short most losses are written without multi-label weighting in mind.\r\n\r\nNote: that adding this support shouldn't break the support for class-based weighting so you might want to have two weights (class weight in the constructor as ussual and sample weight in the forward function and multiply with both)."}