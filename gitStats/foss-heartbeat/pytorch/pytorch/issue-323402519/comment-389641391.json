{"url": "https://api.github.com/repos/pytorch/pytorch/issues/comments/389641391", "html_url": "https://github.com/pytorch/pytorch/pull/7597#issuecomment-389641391", "issue_url": "https://api.github.com/repos/pytorch/pytorch/issues/7597", "id": 389641391, "node_id": "MDEyOklzc3VlQ29tbWVudDM4OTY0MTM5MQ==", "user": {"login": "goldsborough", "id": 6429851, "node_id": "MDQ6VXNlcjY0Mjk4NTE=", "avatar_url": "https://avatars3.githubusercontent.com/u/6429851?v=4", "gravatar_id": "", "url": "https://api.github.com/users/goldsborough", "html_url": "https://github.com/goldsborough", "followers_url": "https://api.github.com/users/goldsborough/followers", "following_url": "https://api.github.com/users/goldsborough/following{/other_user}", "gists_url": "https://api.github.com/users/goldsborough/gists{/gist_id}", "starred_url": "https://api.github.com/users/goldsborough/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/goldsborough/subscriptions", "organizations_url": "https://api.github.com/users/goldsborough/orgs", "repos_url": "https://api.github.com/users/goldsborough/repos", "events_url": "https://api.github.com/users/goldsborough/events{/privacy}", "received_events_url": "https://api.github.com/users/goldsborough/received_events", "type": "User", "site_admin": false}, "created_at": "2018-05-16T19:40:55Z", "updated_at": "2018-05-16T19:41:06Z", "author_association": "CONTRIBUTOR", "body_html": "<p><a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=13564\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/ezyang\">@ezyang</a> Oh man, the fact that <code>mod.foo_ = my_new_var_param</code> works just gives me shivers. Theoretically I would say no, because if you move a <code>Module</code> all your references become garbage. If we're really hardcore about only ever storing Modules inside <code>shared_ptr</code>s, it would work. But I don't think we can make that constraint for user modules</p>", "body_text": "@ezyang Oh man, the fact that mod.foo_ = my_new_var_param works just gives me shivers. Theoretically I would say no, because if you move a Module all your references become garbage. If we're really hardcore about only ever storing Modules inside shared_ptrs, it would work. But I don't think we can make that constraint for user modules", "body": "@ezyang Oh man, the fact that `mod.foo_ = my_new_var_param` works just gives me shivers. Theoretically I would say no, because if you move a `Module` all your references become garbage. If we're really hardcore about only ever storing Modules inside `shared_ptr`s, it would work. But I don't think we can make that constraint for user modules"}