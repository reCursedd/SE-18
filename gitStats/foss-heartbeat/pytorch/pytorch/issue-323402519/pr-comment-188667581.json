{"url": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/188667581", "pull_request_review_id": 120692676, "id": 188667581, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4ODY2NzU4MQ==", "diff_hunk": "@@ -1,121 +1,113 @@\n #pragma once\n \n-#include <torch/detail.h>\n #include <torch/nn/module.h>\n \n #include <torch/csrc/autograd/variable.h>\n \n #include <ATen/Error.h>\n+#include <ATen/optional.h>\n \n #include <cstdint>\n+#include <functional>\n #include <memory>\n #include <vector>\n \n+namespace torch { namespace nn {\n+class Dropout;\n+}} // namespace torch::nn\n+\n namespace torch { namespace nn {\n template <typename Derived>\n class RNNBase : public CloneableModule<Derived> {\n  public:\n-  // These must line up with the CUDNN mode codes\n-  enum RNNMode { RNN_RELU = 0, RNN_TANH = 1, LSTM = 2, GRU = 3 };\n+  // These must line up with the CUDNN mode codes:\n+  // https://docs.nvidia.com/deeplearning/sdk/cudnn-developer-guide/index.html#cudnnRNNMode_t\n+  enum class CuDNNMode { RNN_RELU, RNN_TANH, LSTM, GRU };", "path": "torch/csrc/api/include/torch/nn/modules/rnn.h", "position": null, "original_position": 28, "commit_id": "994d74d21af6b1a2712a58c7ca15146c0166f1d3", "original_commit_id": "0028a7088f029ea74c4f8a96426a921bd926ea53", "user": {"login": "goldsborough", "id": 6429851, "node_id": "MDQ6VXNlcjY0Mjk4NTE=", "avatar_url": "https://avatars3.githubusercontent.com/u/6429851?v=4", "gravatar_id": "", "url": "https://api.github.com/users/goldsborough", "html_url": "https://github.com/goldsborough", "followers_url": "https://api.github.com/users/goldsborough/followers", "following_url": "https://api.github.com/users/goldsborough/following{/other_user}", "gists_url": "https://api.github.com/users/goldsborough/gists{/gist_id}", "starred_url": "https://api.github.com/users/goldsborough/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/goldsborough/subscriptions", "organizations_url": "https://api.github.com/users/goldsborough/orgs", "repos_url": "https://api.github.com/users/goldsborough/repos", "events_url": "https://api.github.com/users/goldsborough/events{/privacy}", "received_events_url": "https://api.github.com/users/goldsborough/received_events", "type": "User", "site_admin": false}, "body": "I'll add the numbers so it's clearer. But just for reference, standard paragraph 10.2:\r\n> An enumerator-definition with = gives the associated enumerator the value indicated by the constant-expression. If the first enumerator has no initializer, the value of the corresponding constant is zero. An enumerator-definition without an initializer gives the enumerator the value obtained by increasing the value of the previous enumerator by one", "created_at": "2018-05-16T15:23:45Z", "updated_at": "2018-11-23T15:44:09Z", "html_url": "https://github.com/pytorch/pytorch/pull/7597#discussion_r188667581", "pull_request_url": "https://api.github.com/repos/pytorch/pytorch/pulls/7597", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/188667581"}, "html": {"href": "https://github.com/pytorch/pytorch/pull/7597#discussion_r188667581"}, "pull_request": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/7597"}}, "body_html": "<p>I'll add the numbers so it's clearer. But just for reference, standard paragraph 10.2:</p>\n<blockquote>\n<p>An enumerator-definition with = gives the associated enumerator the value indicated by the constant-expression. If the first enumerator has no initializer, the value of the corresponding constant is zero. An enumerator-definition without an initializer gives the enumerator the value obtained by increasing the value of the previous enumerator by one</p>\n</blockquote>", "body_text": "I'll add the numbers so it's clearer. But just for reference, standard paragraph 10.2:\n\nAn enumerator-definition with = gives the associated enumerator the value indicated by the constant-expression. If the first enumerator has no initializer, the value of the corresponding constant is zero. An enumerator-definition without an initializer gives the enumerator the value obtained by increasing the value of the previous enumerator by one", "in_reply_to_id": 188459414}