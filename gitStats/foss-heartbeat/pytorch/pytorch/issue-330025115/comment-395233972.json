{"url": "https://api.github.com/repos/pytorch/pytorch/issues/comments/395233972", "html_url": "https://github.com/pytorch/pytorch/pull/8211#issuecomment-395233972", "issue_url": "https://api.github.com/repos/pytorch/pytorch/issues/8211", "id": 395233972, "node_id": "MDEyOklzc3VlQ29tbWVudDM5NTIzMzk3Mg==", "user": {"login": "colesbury", "id": 655866, "node_id": "MDQ6VXNlcjY1NTg2Ng==", "avatar_url": "https://avatars1.githubusercontent.com/u/655866?v=4", "gravatar_id": "", "url": "https://api.github.com/users/colesbury", "html_url": "https://github.com/colesbury", "followers_url": "https://api.github.com/users/colesbury/followers", "following_url": "https://api.github.com/users/colesbury/following{/other_user}", "gists_url": "https://api.github.com/users/colesbury/gists{/gist_id}", "starred_url": "https://api.github.com/users/colesbury/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/colesbury/subscriptions", "organizations_url": "https://api.github.com/users/colesbury/orgs", "repos_url": "https://api.github.com/users/colesbury/repos", "events_url": "https://api.github.com/users/colesbury/events{/privacy}", "received_events_url": "https://api.github.com/users/colesbury/received_events", "type": "User", "site_admin": false}, "created_at": "2018-06-06T22:28:03Z", "updated_at": "2018-06-06T22:28:03Z", "author_association": "MEMBER", "body_html": "<p>To expand on the above point: a tensor with history is behaves differently from a (leaf) tensor that has requires_grad=True. This includes whether the <code>.grad</code> is stored during <code>backward()</code> and whether the tensor may be holding on to a large computational graph.</p>\n<p>This is a common source of confusion, especially for people new to PyTorch. We should ease this confusion by making it immediately visible when a tensor has history (a grad_fn). Printing out the name of the grad_fn gives more useful information than something like <code>is_leaf=False</code>.</p>", "body_text": "To expand on the above point: a tensor with history is behaves differently from a (leaf) tensor that has requires_grad=True. This includes whether the .grad is stored during backward() and whether the tensor may be holding on to a large computational graph.\nThis is a common source of confusion, especially for people new to PyTorch. We should ease this confusion by making it immediately visible when a tensor has history (a grad_fn). Printing out the name of the grad_fn gives more useful information than something like is_leaf=False.", "body": "To expand on the above point: a tensor with history is behaves differently from a (leaf) tensor that has requires_grad=True. This includes whether the `.grad` is stored during `backward()` and whether the tensor may be holding on to a large computational graph.\r\n\r\nThis is a common source of confusion, especially for people new to PyTorch. We should ease this confusion by making it immediately visible when a tensor has history (a grad_fn). Printing out the name of the grad_fn gives more useful information than something like `is_leaf=False`."}