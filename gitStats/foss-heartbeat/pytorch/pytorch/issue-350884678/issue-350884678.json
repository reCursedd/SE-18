{"url": "https://api.github.com/repos/pytorch/pytorch/issues/10544", "repository_url": "https://api.github.com/repos/pytorch/pytorch", "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/10544/labels{/name}", "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/10544/comments", "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/10544/events", "html_url": "https://github.com/pytorch/pytorch/pull/10544", "id": 350884678, "node_id": "MDExOlB1bGxSZXF1ZXN0MjA4NjE5MjYw", "number": 10544, "title": "[JIT] Separates CPU and CUDA fusers", "user": {"login": "mruberry", "id": 38511765, "node_id": "MDQ6VXNlcjM4NTExNzY1", "avatar_url": "https://avatars3.githubusercontent.com/u/38511765?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mruberry", "html_url": "https://github.com/mruberry", "followers_url": "https://api.github.com/users/mruberry/followers", "following_url": "https://api.github.com/users/mruberry/following{/other_user}", "gists_url": "https://api.github.com/users/mruberry/gists{/gist_id}", "starred_url": "https://api.github.com/users/mruberry/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mruberry/subscriptions", "organizations_url": "https://api.github.com/users/mruberry/orgs", "repos_url": "https://api.github.com/users/mruberry/repos", "events_url": "https://api.github.com/users/mruberry/events{/privacy}", "received_events_url": "https://api.github.com/users/mruberry/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 679953983, "node_id": "MDU6TGFiZWw2Nzk5NTM5ODM=", "url": "https://api.github.com/repos/pytorch/pytorch/labels/jit", "name": "jit", "color": "c5def5", "default": false}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-08-15T16:54:04Z", "updated_at": "2018-09-25T16:42:26Z", "closed_at": "2018-08-16T16:38:39Z", "author_association": "CONTRIBUTOR", "pull_request": {"url": "https://api.github.com/repos/pytorch/pytorch/pulls/10544", "html_url": "https://github.com/pytorch/pytorch/pull/10544", "diff_url": "https://github.com/pytorch/pytorch/pull/10544.diff", "patch_url": "https://github.com/pytorch/pytorch/pull/10544.patch"}, "body_html": "<p>This PR separates the CPU and CUDA fusion passes and compilers, created a new fusers subdirectory to store the logic for each. The passes were updated to only operate on CPU or CUDA nodes, and the compilers have checks to ensure they're dealing with the correct type. More precisely:</p>\n<ul>\n<li>Creates a new \"fusers\" directory</li>\n<li>The graph_fuser pass now calls a cpu fusion pass if we can compile on the cpu</li>\n<li>The graph_fuser pass also calls a cuda fusion pass if we're using cuda, not ROCm, and not Windows</li>\n<li>The cuda fuser is only built if using cuda, not ROCm, and not Windows</li>\n<li>The passes now operate only on nodes of their respective types</li>\n<li>The fusers now operate only on nodes of their respective types</li>\n<li>The CUDA fuser has some clean-up refactoring, mostly spinning classes off into their own headers</li>\n</ul>\n<p>There is no end-user functionality change with this PR, but it sets the stage for further fusion enhancements.</p>", "body_text": "This PR separates the CPU and CUDA fusion passes and compilers, created a new fusers subdirectory to store the logic for each. The passes were updated to only operate on CPU or CUDA nodes, and the compilers have checks to ensure they're dealing with the correct type. More precisely:\n\nCreates a new \"fusers\" directory\nThe graph_fuser pass now calls a cpu fusion pass if we can compile on the cpu\nThe graph_fuser pass also calls a cuda fusion pass if we're using cuda, not ROCm, and not Windows\nThe cuda fuser is only built if using cuda, not ROCm, and not Windows\nThe passes now operate only on nodes of their respective types\nThe fusers now operate only on nodes of their respective types\nThe CUDA fuser has some clean-up refactoring, mostly spinning classes off into their own headers\n\nThere is no end-user functionality change with this PR, but it sets the stage for further fusion enhancements.", "body": "This PR separates the CPU and CUDA fusion passes and compilers, created a new fusers subdirectory to store the logic for each. The passes were updated to only operate on CPU or CUDA nodes, and the compilers have checks to ensure they're dealing with the correct type. More precisely:\r\n\r\n- Creates a new \"fusers\" directory\r\n- The graph_fuser pass now calls a cpu fusion pass if we can compile on the cpu\r\n- The graph_fuser pass also calls a cuda fusion pass if we're using cuda, not ROCm, and not Windows\r\n- The cuda fuser is only built if using cuda, not ROCm, and not Windows\r\n- The passes now operate only on nodes of their respective types\r\n- The fusers now operate only on nodes of their respective types\r\n- The CUDA fuser has some clean-up refactoring, mostly spinning classes off into their own headers\r\n\r\nThere is no end-user functionality change with this PR, but it sets the stage for further fusion enhancements."}