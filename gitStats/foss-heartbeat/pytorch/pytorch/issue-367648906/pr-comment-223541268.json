{"url": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/223541268", "pull_request_review_id": 162693270, "id": 223541268, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIyMzU0MTI2OA==", "diff_hunk": "@@ -91,6 +91,7 @@ if \"%REBUILD%\"==\"\" ( call conda install -y -q numpy cffi pyyaml boto3 )\n :: Install ninja\n if \"%REBUILD%\"==\"\" ( pip install ninja )\n \n+call \"C:\\\\Program Files (x86)\\\\Microsoft Visual Studio\\\\2017\\\\Community\\\\VC\\\\Auxiliary\\\\Build\\\\vcvarsall.bat\" x64\n call \"C:\\\\Program Files (x86)\\\\Microsoft Visual Studio\\\\2017\\\\Community\\\\VC\\\\Auxiliary\\\\Build\\\\vcvarsall.bat\" x86_amd64", "path": ".jenkins/pytorch/win-build.sh", "position": 5, "original_position": 5, "commit_id": "c6e0250bfaba5bdac30e836809320e419eae1c85", "original_commit_id": "c6e0250bfaba5bdac30e836809320e419eae1c85", "user": {"login": "peterjc123", "id": 9998726, "node_id": "MDQ6VXNlcjk5OTg3MjY=", "avatar_url": "https://avatars3.githubusercontent.com/u/9998726?v=4", "gravatar_id": "", "url": "https://api.github.com/users/peterjc123", "html_url": "https://github.com/peterjc123", "followers_url": "https://api.github.com/users/peterjc123/followers", "following_url": "https://api.github.com/users/peterjc123/following{/other_user}", "gists_url": "https://api.github.com/users/peterjc123/gists{/gist_id}", "starred_url": "https://api.github.com/users/peterjc123/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/peterjc123/subscriptions", "organizations_url": "https://api.github.com/users/peterjc123/orgs", "repos_url": "https://api.github.com/users/peterjc123/repos", "events_url": "https://api.github.com/users/peterjc123/events{/privacy}", "received_events_url": "https://api.github.com/users/peterjc123/received_events", "type": "User", "site_admin": false}, "body": "Yes, I tried that first. But it seems that the x64 compiler has some bug in it and cannot complete the build process. See the [log](https://ci.pytorch.org/jenkins/job/pytorch-builds/job/pytorch-win-ws2016-cuda9-cudnn7-py3-trigger/23914/) for details. So I switched back to x86_amd64 and only added x64 toolchain into PATH by activating it first.\r\nYou may say that this line is useless in your own environment. But this one is necessary here. Because there is another `link.exe` in `PATH` (used by git bash), it will cause the auto fallback mechanism to fail. By activating the x64 env, the x64 linker will be listed before the linker provided by git bash in `PATH`, thus the problem is solved.", "created_at": "2018-10-09T01:50:49Z", "updated_at": "2018-11-23T15:52:39Z", "html_url": "https://github.com/pytorch/pytorch/pull/12446#discussion_r223541268", "pull_request_url": "https://api.github.com/repos/pytorch/pytorch/pulls/12446", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/223541268"}, "html": {"href": "https://github.com/pytorch/pytorch/pull/12446#discussion_r223541268"}, "pull_request": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/12446"}}, "body_html": "<p>Yes, I tried that first. But it seems that the x64 compiler has some bug in it and cannot complete the build process. See the <a href=\"https://ci.pytorch.org/jenkins/job/pytorch-builds/job/pytorch-win-ws2016-cuda9-cudnn7-py3-trigger/23914/\" rel=\"nofollow\">log</a> for details. So I switched back to x86_amd64 and only added x64 toolchain into PATH by activating it first.<br>\nYou may say that this line is useless in your own environment. But this one is necessary here. Because there is another <code>link.exe</code> in <code>PATH</code> (used by git bash), it will cause the auto fallback mechanism to fail. By activating the x64 env, the x64 linker will be listed before the linker provided by git bash in <code>PATH</code>, thus the problem is solved.</p>", "body_text": "Yes, I tried that first. But it seems that the x64 compiler has some bug in it and cannot complete the build process. See the log for details. So I switched back to x86_amd64 and only added x64 toolchain into PATH by activating it first.\nYou may say that this line is useless in your own environment. But this one is necessary here. Because there is another link.exe in PATH (used by git bash), it will cause the auto fallback mechanism to fail. By activating the x64 env, the x64 linker will be listed before the linker provided by git bash in PATH, thus the problem is solved.", "in_reply_to_id": 223438539}