{"url": "https://api.github.com/repos/pytorch/pytorch/issues/921", "repository_url": "https://api.github.com/repos/pytorch/pytorch", "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/921/labels{/name}", "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/921/comments", "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/921/events", "html_url": "https://github.com/pytorch/pytorch/issues/921", "id": 211917787, "node_id": "MDU6SXNzdWUyMTE5MTc3ODc=", "number": 921, "title": "load_state_dict: KeyError: 'unexpected key in state_dict'", "user": {"login": "anantzoid", "id": 7965181, "node_id": "MDQ6VXNlcjc5NjUxODE=", "avatar_url": "https://avatars1.githubusercontent.com/u/7965181?v=4", "gravatar_id": "", "url": "https://api.github.com/users/anantzoid", "html_url": "https://github.com/anantzoid", "followers_url": "https://api.github.com/users/anantzoid/followers", "following_url": "https://api.github.com/users/anantzoid/following{/other_user}", "gists_url": "https://api.github.com/users/anantzoid/gists{/gist_id}", "starred_url": "https://api.github.com/users/anantzoid/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/anantzoid/subscriptions", "organizations_url": "https://api.github.com/users/anantzoid/orgs", "repos_url": "https://api.github.com/users/anantzoid/repos", "events_url": "https://api.github.com/users/anantzoid/events{/privacy}", "received_events_url": "https://api.github.com/users/anantzoid/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2017-03-04T23:57:17Z", "updated_at": "2017-04-17T20:45:54Z", "closed_at": "2017-03-05T00:07:47Z", "author_association": "NONE", "body_html": "<p><code>state_dict</code> does not acknowledge custom layers before calling the forward function.</p>\n<pre><code>class AuxNet(nn.Module):\n    def __init__(self, num_pieces):\n        super(AuxNet, self).__init__()\n\n    def forward(self, input):\n        shape = input.size()\n        self.linear = nn.Linear(shape[-1], shape[-1], bias=False)\n        # Do some stuff..\n        return input\n       \nclass SNet(nn.Module):\n    def __init__(self):\n        super(SNet, self).__init__()\n        self.main = nn.Sequential(\n                nn.Conv2d(3, 32, 5, 1, 0, bias=False),\n                nn.Dropout(0.2),\n                AuxNet()\n            )\n    def forward(self, input):\n        return self.main(input)\n  \nn = SNet()\nprint n.state_dict().keys()\nn(Variable(torch.FloatTensor(10,3,16,16)))\nprint n.state_dict().keys()\n</code></pre>\n<p>The above code prints the following output:</p>\n<pre><code>['main.0.weight']\n['main.0.weight', 'main.2.linear.weight']\n</code></pre>\n<p>Thus, <code>load_state_dict</code> gives the following error when called just after initialising the net:<br>\n<code>KeyError: 'unexpected key \"main.2.linear.weight\" in state_dict'</code></p>", "body_text": "state_dict does not acknowledge custom layers before calling the forward function.\nclass AuxNet(nn.Module):\n    def __init__(self, num_pieces):\n        super(AuxNet, self).__init__()\n\n    def forward(self, input):\n        shape = input.size()\n        self.linear = nn.Linear(shape[-1], shape[-1], bias=False)\n        # Do some stuff..\n        return input\n       \nclass SNet(nn.Module):\n    def __init__(self):\n        super(SNet, self).__init__()\n        self.main = nn.Sequential(\n                nn.Conv2d(3, 32, 5, 1, 0, bias=False),\n                nn.Dropout(0.2),\n                AuxNet()\n            )\n    def forward(self, input):\n        return self.main(input)\n  \nn = SNet()\nprint n.state_dict().keys()\nn(Variable(torch.FloatTensor(10,3,16,16)))\nprint n.state_dict().keys()\n\nThe above code prints the following output:\n['main.0.weight']\n['main.0.weight', 'main.2.linear.weight']\n\nThus, load_state_dict gives the following error when called just after initialising the net:\nKeyError: 'unexpected key \"main.2.linear.weight\" in state_dict'", "body": "`state_dict` does not acknowledge custom layers before calling the forward function. \r\n```\r\nclass AuxNet(nn.Module):\r\n    def __init__(self, num_pieces):\r\n        super(AuxNet, self).__init__()\r\n\r\n    def forward(self, input):\r\n        shape = input.size()\r\n        self.linear = nn.Linear(shape[-1], shape[-1], bias=False)\r\n        # Do some stuff..\r\n        return input\r\n       \r\nclass SNet(nn.Module):\r\n    def __init__(self):\r\n        super(SNet, self).__init__()\r\n        self.main = nn.Sequential(\r\n                nn.Conv2d(3, 32, 5, 1, 0, bias=False),\r\n                nn.Dropout(0.2),\r\n                AuxNet()\r\n            )\r\n    def forward(self, input):\r\n        return self.main(input)\r\n  \r\nn = SNet()\r\nprint n.state_dict().keys()\r\nn(Variable(torch.FloatTensor(10,3,16,16)))\r\nprint n.state_dict().keys()\r\n```\r\n\r\nThe above code prints the following output:\r\n```\r\n['main.0.weight']\r\n['main.0.weight', 'main.2.linear.weight']\r\n```\r\n\r\nThus, `load_state_dict` gives the following error when called just after initialising the net:\r\n`KeyError: 'unexpected key \"main.2.linear.weight\" in state_dict'`"}