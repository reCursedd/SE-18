{"url": "https://api.github.com/repos/pytorch/pytorch/issues/comments/425793809", "html_url": "https://github.com/pytorch/pytorch/issues/12013#issuecomment-425793809", "issue_url": "https://api.github.com/repos/pytorch/pytorch/issues/12013", "id": 425793809, "node_id": "MDEyOklzc3VlQ29tbWVudDQyNTc5MzgwOQ==", "user": {"login": "fmassa", "id": 9110200, "node_id": "MDQ6VXNlcjkxMTAyMDA=", "avatar_url": "https://avatars2.githubusercontent.com/u/9110200?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fmassa", "html_url": "https://github.com/fmassa", "followers_url": "https://api.github.com/users/fmassa/followers", "following_url": "https://api.github.com/users/fmassa/following{/other_user}", "gists_url": "https://api.github.com/users/fmassa/gists{/gist_id}", "starred_url": "https://api.github.com/users/fmassa/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fmassa/subscriptions", "organizations_url": "https://api.github.com/users/fmassa/orgs", "repos_url": "https://api.github.com/users/fmassa/repos", "events_url": "https://api.github.com/users/fmassa/events{/privacy}", "received_events_url": "https://api.github.com/users/fmassa/received_events", "type": "User", "site_admin": false}, "created_at": "2018-10-01T05:32:16Z", "updated_at": "2018-10-01T05:32:16Z", "author_association": "MEMBER", "body_html": "<p><a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=1794273\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/bhushan23\">@bhushan23</a> some models (see Detectron Mask R-CNN for example) have a data-dependent generation of batches inside of their model. So even if we pass a fixed number of images, there might be no image which contains (or at least the model doesn't detect) a certain subset of categories, which corresponds to forwarding to a model a batch size of zero.</p>\n<p>Another use-cases if when tracing models using the jit. If we support empty batch sizes, the runtime cost for the tracing is reduced, as we don't need to compute convolutions/ poolings anymore, almost if we had shape inference functions for those operations.</p>\n<p>More generally, with support for zero-sized tensors, a number of restrictions that we used to have can be removed, and just makes writing code that works in some edge cases a no-brainer</p>", "body_text": "@bhushan23 some models (see Detectron Mask R-CNN for example) have a data-dependent generation of batches inside of their model. So even if we pass a fixed number of images, there might be no image which contains (or at least the model doesn't detect) a certain subset of categories, which corresponds to forwarding to a model a batch size of zero.\nAnother use-cases if when tracing models using the jit. If we support empty batch sizes, the runtime cost for the tracing is reduced, as we don't need to compute convolutions/ poolings anymore, almost if we had shape inference functions for those operations.\nMore generally, with support for zero-sized tensors, a number of restrictions that we used to have can be removed, and just makes writing code that works in some edge cases a no-brainer", "body": "@bhushan23 some models (see Detectron Mask R-CNN for example) have a data-dependent generation of batches inside of their model. So even if we pass a fixed number of images, there might be no image which contains (or at least the model doesn't detect) a certain subset of categories, which corresponds to forwarding to a model a batch size of zero.\r\n\r\nAnother use-cases if when tracing models using the jit. If we support empty batch sizes, the runtime cost for the tracing is reduced, as we don't need to compute convolutions/ poolings anymore, almost if we had shape inference functions for those operations.\r\n\r\nMore generally, with support for zero-sized tensors, a number of restrictions that we used to have can be removed, and just makes writing code that works in some edge cases a no-brainer"}