{"url": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/195836791", "pull_request_review_id": 129285829, "id": 195836791, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5NTgzNjc5MQ==", "diff_hunk": "@@ -47,7 +47,13 @@ std::vector<Tensor> broadcast(const Tensor& tensor, IntList devices) {\n   {\n #endif\n     auto & gpu_type = type.toBackend(type.is_sparse() ? at::kSparseCUDA : at::kCUDA);\n-    for (auto device : devices) {\n+    if (type.is_cuda()) {\n+      tensors.push_back(tensor);\n+    } else {\n+      AutoGPU _gpu_guard(devices[0]);\n+      tensors.push_back(gpu_type.copy(tensor, true));\n+    }", "path": "torch/csrc/cuda/comm.cpp", "position": null, "original_position": 10, "commit_id": "3eca907a32b8e3388d360cbb7859763c073d5ef3", "original_commit_id": "daf1740939d645b461221273bcd3c870d8820f2d", "user": {"login": "apaszke", "id": 4583066, "node_id": "MDQ6VXNlcjQ1ODMwNjY=", "avatar_url": "https://avatars3.githubusercontent.com/u/4583066?v=4", "gravatar_id": "", "url": "https://api.github.com/users/apaszke", "html_url": "https://github.com/apaszke", "followers_url": "https://api.github.com/users/apaszke/followers", "following_url": "https://api.github.com/users/apaszke/following{/other_user}", "gists_url": "https://api.github.com/users/apaszke/gists{/gist_id}", "starred_url": "https://api.github.com/users/apaszke/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/apaszke/subscriptions", "organizations_url": "https://api.github.com/users/apaszke/orgs", "repos_url": "https://api.github.com/users/apaszke/repos", "events_url": "https://api.github.com/users/apaszke/events{/privacy}", "received_events_url": "https://api.github.com/users/apaszke/received_events", "type": "User", "site_admin": false}, "body": "Can we just make it this? It will let us avoid duplicating the body.\r\n```cpp\r\nIntList loopDevices = ... ? devices : devices.slice(1);\r\nfor (auto device : loopDevices) {\r\n  ...\r\n}\r\n```", "created_at": "2018-06-15T19:07:56Z", "updated_at": "2018-11-23T15:45:40Z", "html_url": "https://github.com/pytorch/pytorch/pull/8222#discussion_r195836791", "pull_request_url": "https://api.github.com/repos/pytorch/pytorch/pulls/8222", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/195836791"}, "html": {"href": "https://github.com/pytorch/pytorch/pull/8222#discussion_r195836791"}, "pull_request": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/8222"}}, "body_html": "<p>Can we just make it this? It will let us avoid duplicating the body.</p>\n<div class=\"highlight highlight-source-c++\"><pre>IntList loopDevices = ... ? devices : devices.slice(<span class=\"pl-c1\">1</span>);\n<span class=\"pl-k\">for</span> (<span class=\"pl-k\">auto</span> device : loopDevices) {\n  ...\n}</pre></div>", "body_text": "Can we just make it this? It will let us avoid duplicating the body.\nIntList loopDevices = ... ? devices : devices.slice(1);\nfor (auto device : loopDevices) {\n  ...\n}"}