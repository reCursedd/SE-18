{"url": "https://api.github.com/repos/pytorch/pytorch/issues/8540", "repository_url": "https://api.github.com/repos/pytorch/pytorch", "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/8540/labels{/name}", "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/8540/comments", "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/8540/events", "html_url": "https://github.com/pytorch/pytorch/pull/8540", "id": 332607320, "node_id": "MDExOlB1bGxSZXF1ZXN0MTk1MDUwNzY3", "number": 8540, "title": "Enable open registration of VariableType objects", "user": {"login": "zdevito", "id": 370202, "node_id": "MDQ6VXNlcjM3MDIwMg==", "avatar_url": "https://avatars0.githubusercontent.com/u/370202?v=4", "gravatar_id": "", "url": "https://api.github.com/users/zdevito", "html_url": "https://github.com/zdevito", "followers_url": "https://api.github.com/users/zdevito/followers", "following_url": "https://api.github.com/users/zdevito/following{/other_user}", "gists_url": "https://api.github.com/users/zdevito/gists{/gist_id}", "starred_url": "https://api.github.com/users/zdevito/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/zdevito/subscriptions", "organizations_url": "https://api.github.com/users/zdevito/orgs", "repos_url": "https://api.github.com/users/zdevito/repos", "events_url": "https://api.github.com/users/zdevito/events{/privacy}", "received_events_url": "https://api.github.com/users/zdevito/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2018-06-15T00:24:30Z", "updated_at": "2018-11-23T15:45:41Z", "closed_at": "2018-06-15T21:56:19Z", "author_association": "CONTRIBUTOR", "pull_request": {"url": "https://api.github.com/repos/pytorch/pytorch/pulls/8540", "html_url": "https://github.com/pytorch/pytorch/pull/8540", "diff_url": "https://github.com/pytorch/pytorch/pull/8540.diff", "patch_url": "https://github.com/pytorch/pytorch/pull/8540.patch"}, "body_html": "<p>We have 2 use cases where we want to experiment with new base ATen<br>\ntensor types:</p>\n<ul>\n<li>BatchTensor for matchbox</li>\n<li>Tensors that live on accelerators</li>\n</ul>\n<p>It is possible to subclass TensorImpl to implement these but VariableType<br>\ndoes not work with them because it cannot find the equivalent variable type<br>\nin the registry.</p>\n<p>This commit changes the way we implement type -&gt; variable(type) lookup so that<br>\ntorch::register_variable_type_for can be called on any at::Type.</p>\n<p>Lookups are still done using arrays so there should be no perf impact from the change.</p>", "body_text": "We have 2 use cases where we want to experiment with new base ATen\ntensor types:\n\nBatchTensor for matchbox\nTensors that live on accelerators\n\nIt is possible to subclass TensorImpl to implement these but VariableType\ndoes not work with them because it cannot find the equivalent variable type\nin the registry.\nThis commit changes the way we implement type -> variable(type) lookup so that\ntorch::register_variable_type_for can be called on any at::Type.\nLookups are still done using arrays so there should be no perf impact from the change.", "body": "We have 2 use cases where we want to experiment with new base ATen\r\ntensor types:\r\n\r\n* BatchTensor for matchbox\r\n* Tensors that live on accelerators\r\n\r\nIt is possible to subclass TensorImpl to implement these but VariableType\r\ndoes not work with them because it cannot find the equivalent variable type\r\nin the registry.\r\n\r\nThis commit changes the way we implement type -> variable(type) lookup so that\r\ntorch::register_variable_type_for can be called on any at::Type.\r\n\r\nLookups are still done using arrays so there should be no perf impact from the change.\r\n\r\n"}