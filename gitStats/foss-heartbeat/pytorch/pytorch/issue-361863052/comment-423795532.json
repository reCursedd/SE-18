{"url": "https://api.github.com/repos/pytorch/pytorch/issues/comments/423795532", "html_url": "https://github.com/pytorch/pytorch/issues/11867#issuecomment-423795532", "issue_url": "https://api.github.com/repos/pytorch/pytorch/issues/11867", "id": 423795532, "node_id": "MDEyOklzc3VlQ29tbWVudDQyMzc5NTUzMg==", "user": {"login": "ngimel", "id": 15841449, "node_id": "MDQ6VXNlcjE1ODQxNDQ5", "avatar_url": "https://avatars3.githubusercontent.com/u/15841449?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ngimel", "html_url": "https://github.com/ngimel", "followers_url": "https://api.github.com/users/ngimel/followers", "following_url": "https://api.github.com/users/ngimel/following{/other_user}", "gists_url": "https://api.github.com/users/ngimel/gists{/gist_id}", "starred_url": "https://api.github.com/users/ngimel/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ngimel/subscriptions", "organizations_url": "https://api.github.com/users/ngimel/orgs", "repos_url": "https://api.github.com/users/ngimel/repos", "events_url": "https://api.github.com/users/ngimel/events{/privacy}", "received_events_url": "https://api.github.com/users/ngimel/received_events", "type": "User", "site_admin": false}, "created_at": "2018-09-23T06:38:54Z", "updated_at": "2018-09-23T06:38:54Z", "author_association": "CONTRIBUTOR", "body_html": "<p><a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=4685384\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/jamesr66a\">@jamesr66a</a> As bad as aten::layer_norm forward might be, backward is much worse - did you compare backward with c2 implementation?<br>\n<a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=5674597\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/SsnL\">@SsnL</a> the reason why THNN is used is for layer norm the learnable scale and shift are different from bn, so bn kernel is used exclusively for normalization, and scale/shift is applied separately. cudnn likely does not support this mode.</p>", "body_text": "@jamesr66a As bad as aten::layer_norm forward might be, backward is much worse - did you compare backward with c2 implementation?\n@SsnL the reason why THNN is used is for layer norm the learnable scale and shift are different from bn, so bn kernel is used exclusively for normalization, and scale/shift is applied separately. cudnn likely does not support this mode.", "body": "@jamesr66a As bad as aten::layer_norm forward might be, backward is much worse - did you compare backward with c2 implementation? \r\n@ssnl the reason why THNN is used is for layer norm the learnable scale and shift are different from bn, so bn kernel is used exclusively for normalization, and scale/shift is applied separately. cudnn likely does not support this mode. "}