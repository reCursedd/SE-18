{"url": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/150121373", "pull_request_review_id": 75627102, "id": 150121373, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE1MDEyMTM3Mw==", "diff_hunk": "@@ -106,13 +105,36 @@ def compile(arg=None, **kwargs):\n     function must declare *all* Variable inputs in its arguments.\n \n         >>> @jit.compile\n-        >>> def f(x);\n+        >>> def f(x):\n         >>>     return x * 2\n     \"\"\"\n     def _compile(arg):\n         if inspect.isclass(arg):\n-            if issubclass(arg, _CompiledMixin):\n-                raise TypeError(\"Cannot compile a model class that already is compiled\")\n+            class CompiledModuleMeta(type):\n+                def __call__(cls, *args, **kwargs):\n+                    # NOTE: this is called whenever an instance of this class is created\n+                    # The super call below will call __new__ and __init__, and we will\n+                    # patch things later.\n+                    try:\n+                        obj = super(CompiledModuleMeta, cls).__call__(*args, **kwargs)\n+                    except TypeError as e:\n+                        # If this fails here, the user probably didn't use this as a class decorator\n+                        if \"super\" in str(e):\n+                            raise_from(TypeError(\"torch.jit.compile must be used as a class decorator; \"\n+                                                \"using it on an already defined class is not valid.\"\n+                                                \"\\n\\nOriginal error: {}\".format(str(e))), e)\n+                        else:\n+                            raise\n+\n+                    meth = obj.forward", "path": "torch/jit/__init__.py", "position": null, "original_position": 45, "commit_id": "f98292f85b7bceddb52a7e160cb94a9aef261cd2", "original_commit_id": "66aa44d2b1851587309961284cf2e5feaa37fed5", "user": {"login": "apaszke", "id": 4583066, "node_id": "MDQ6VXNlcjQ1ODMwNjY=", "avatar_url": "https://avatars3.githubusercontent.com/u/4583066?v=4", "gravatar_id": "", "url": "https://api.github.com/users/apaszke", "html_url": "https://github.com/apaszke", "followers_url": "https://api.github.com/users/apaszke/followers", "following_url": "https://api.github.com/users/apaszke/following{/other_user}", "gists_url": "https://api.github.com/users/apaszke/gists{/gist_id}", "starred_url": "https://api.github.com/users/apaszke/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/apaszke/subscriptions", "organizations_url": "https://api.github.com/users/apaszke/orgs", "repos_url": "https://api.github.com/users/apaszke/repos", "events_url": "https://api.github.com/users/apaszke/events{/privacy}", "received_events_url": "https://api.github.com/users/apaszke/received_events", "type": "User", "site_admin": false}, "body": "That looks like a leftover from a few quick experiments I ran. Will remove tomorrow", "created_at": "2017-11-09T23:50:57Z", "updated_at": "2018-11-23T15:36:19Z", "html_url": "https://github.com/pytorch/pytorch/pull/3597#discussion_r150121373", "pull_request_url": "https://api.github.com/repos/pytorch/pytorch/pulls/3597", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/150121373"}, "html": {"href": "https://github.com/pytorch/pytorch/pull/3597#discussion_r150121373"}, "pull_request": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/3597"}}, "body_html": "<p>That looks like a leftover from a few quick experiments I ran. Will remove tomorrow</p>", "body_text": "That looks like a leftover from a few quick experiments I ran. Will remove tomorrow", "in_reply_to_id": 150113141}