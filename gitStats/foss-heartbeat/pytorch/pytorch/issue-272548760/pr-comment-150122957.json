{"url": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/150122957", "pull_request_review_id": 75628778, "id": 150122957, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE1MDEyMjk1Nw==", "diff_hunk": "@@ -134,12 +156,9 @@ def _compile(arg):\n             # user passed in), this problem goes away, because the class\n             # __init__ is a part of is indeed Foo.\n \n-            # Make a copy of the class, with the extra _CompiledMixin base\n-            cls = type(arg.__name__, (_CompiledMixin,) + arg.__bases__, dict(arg.__dict__))\n-\n-            # Monkey-patch forward and __init__ with the compiler versions\n-            cls.init_compiler(**kwargs)\n-            return cls\n+            return type(arg.__name__,\n+                        (torch._six.with_metaclass(CompiledModuleMeta, *arg.__bases__),),", "path": "torch/jit/__init__.py", "position": 67, "original_position": 68, "commit_id": "f98292f85b7bceddb52a7e160cb94a9aef261cd2", "original_commit_id": "66aa44d2b1851587309961284cf2e5feaa37fed5", "user": {"login": "apaszke", "id": 4583066, "node_id": "MDQ6VXNlcjQ1ODMwNjY=", "avatar_url": "https://avatars3.githubusercontent.com/u/4583066?v=4", "gravatar_id": "", "url": "https://api.github.com/users/apaszke", "html_url": "https://github.com/apaszke", "followers_url": "https://api.github.com/users/apaszke/followers", "following_url": "https://api.github.com/users/apaszke/following{/other_user}", "gists_url": "https://api.github.com/users/apaszke/gists{/gist_id}", "starred_url": "https://api.github.com/users/apaszke/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/apaszke/subscriptions", "organizations_url": "https://api.github.com/users/apaszke/orgs", "repos_url": "https://api.github.com/users/apaszke/repos", "events_url": "https://api.github.com/users/apaszke/events{/privacy}", "received_events_url": "https://api.github.com/users/apaszke/received_events", "type": "User", "site_admin": false}, "body": "And the call to `_six` is necessary because Py2 and Py3 require specifying metaclasses in two completely incompatible ways, so we need certain hacks \ud83d\ude0a (I think Py3's way is even a syntax error in Py2)", "created_at": "2017-11-10T00:00:11Z", "updated_at": "2018-11-23T15:36:19Z", "html_url": "https://github.com/pytorch/pytorch/pull/3597#discussion_r150122957", "pull_request_url": "https://api.github.com/repos/pytorch/pytorch/pulls/3597", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/150122957"}, "html": {"href": "https://github.com/pytorch/pytorch/pull/3597#discussion_r150122957"}, "pull_request": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/3597"}}, "body_html": "<p>And the call to <code>_six</code> is necessary because Py2 and Py3 require specifying metaclasses in two completely incompatible ways, so we need certain hacks <g-emoji class=\"g-emoji\" alias=\"blush\" fallback-src=\"https://assets-cdn.github.com/images/icons/emoji/unicode/1f60a.png\">\ud83d\ude0a</g-emoji> (I think Py3's way is even a syntax error in Py2)</p>", "body_text": "And the call to _six is necessary because Py2 and Py3 require specifying metaclasses in two completely incompatible ways, so we need certain hacks \ud83d\ude0a (I think Py3's way is even a syntax error in Py2)", "in_reply_to_id": 150113579}