{"url": "https://api.github.com/repos/pytorch/pytorch/issues/1777", "repository_url": "https://api.github.com/repos/pytorch/pytorch", "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/1777/labels{/name}", "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/1777/comments", "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/1777/events", "html_url": "https://github.com/pytorch/pytorch/issues/1777", "id": 235069343, "node_id": "MDU6SXNzdWUyMzUwNjkzNDM=", "number": 1777, "title": "index_copy inconsistent behavior on CPU and GPU", "user": {"login": "xwgeng", "id": 7008668, "node_id": "MDQ6VXNlcjcwMDg2Njg=", "avatar_url": "https://avatars3.githubusercontent.com/u/7008668?v=4", "gravatar_id": "", "url": "https://api.github.com/users/xwgeng", "html_url": "https://github.com/xwgeng", "followers_url": "https://api.github.com/users/xwgeng/followers", "following_url": "https://api.github.com/users/xwgeng/following{/other_user}", "gists_url": "https://api.github.com/users/xwgeng/gists{/gist_id}", "starred_url": "https://api.github.com/users/xwgeng/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/xwgeng/subscriptions", "organizations_url": "https://api.github.com/users/xwgeng/orgs", "repos_url": "https://api.github.com/users/xwgeng/repos", "events_url": "https://api.github.com/users/xwgeng/events{/privacy}", "received_events_url": "https://api.github.com/users/xwgeng/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2017-06-11T14:32:22Z", "updated_at": "2018-03-23T00:07:16Z", "closed_at": "2018-03-23T00:07:16Z", "author_association": "CONTRIBUTOR", "body_html": "<p><code>index_copy</code> has inconsistent behaviors for the shape of the tensor which is used to copy on CPU and GPU. In following examples, <code>index_copy</code> raises an error on CPU due to the invalid shape of <code>y</code>, but it works well on GPU for same tensors <code>x</code>, <code>y</code>, <code>z</code>.</p>\n<pre><code>In [1]: import torch\n\nIn [2]: from torch.autograd import Variable\n\nIn [3]: x = torch.ones(3,1)\n\nIn [4]: y = torch.Tensor([4])\n\nIn [5]: z = torch.LongTensor([2])\n\nIn [6]: x.index_copy_(0, z, y)\n---------------------------------------------------------------------------\nRuntimeError                              Traceback (most recent call last)\n&lt;ipython-input-6-a1189d076165&gt; in &lt;module&gt;()\n----&gt; 1 x.index_copy_(0, z, y)\n\nRuntimeError: cannot select on a vector at /users1/xwgeng/pytorch/torch/lib/TH/generic/THTensor.c:403\n\nIn [7]: x = x.cuda()\n\nIn [8]: y = y.cuda()\n\nIn [9]: z = z.cuda()\n\nIn [10]: x.index_copy_(0, z, y)\nOut[10]: \n\n 1\n 1\n 4\n[torch.cuda.FloatTensor of size 3x1 (GPU 0)]\n</code></pre>\n<p>The pytorch version is <code>0.1.12+d7db75c</code></p>", "body_text": "index_copy has inconsistent behaviors for the shape of the tensor which is used to copy on CPU and GPU. In following examples, index_copy raises an error on CPU due to the invalid shape of y, but it works well on GPU for same tensors x, y, z.\nIn [1]: import torch\n\nIn [2]: from torch.autograd import Variable\n\nIn [3]: x = torch.ones(3,1)\n\nIn [4]: y = torch.Tensor([4])\n\nIn [5]: z = torch.LongTensor([2])\n\nIn [6]: x.index_copy_(0, z, y)\n---------------------------------------------------------------------------\nRuntimeError                              Traceback (most recent call last)\n<ipython-input-6-a1189d076165> in <module>()\n----> 1 x.index_copy_(0, z, y)\n\nRuntimeError: cannot select on a vector at /users1/xwgeng/pytorch/torch/lib/TH/generic/THTensor.c:403\n\nIn [7]: x = x.cuda()\n\nIn [8]: y = y.cuda()\n\nIn [9]: z = z.cuda()\n\nIn [10]: x.index_copy_(0, z, y)\nOut[10]: \n\n 1\n 1\n 4\n[torch.cuda.FloatTensor of size 3x1 (GPU 0)]\n\nThe pytorch version is 0.1.12+d7db75c", "body": "`index_copy` has inconsistent behaviors for the shape of the tensor which is used to copy on CPU and GPU. In following examples, `index_copy` raises an error on CPU due to the invalid shape of `y`, but it works well on GPU for same tensors `x`, `y`, `z`.\r\n```\r\nIn [1]: import torch\r\n\r\nIn [2]: from torch.autograd import Variable\r\n\r\nIn [3]: x = torch.ones(3,1)\r\n\r\nIn [4]: y = torch.Tensor([4])\r\n\r\nIn [5]: z = torch.LongTensor([2])\r\n\r\nIn [6]: x.index_copy_(0, z, y)\r\n---------------------------------------------------------------------------\r\nRuntimeError                              Traceback (most recent call last)\r\n<ipython-input-6-a1189d076165> in <module>()\r\n----> 1 x.index_copy_(0, z, y)\r\n\r\nRuntimeError: cannot select on a vector at /users1/xwgeng/pytorch/torch/lib/TH/generic/THTensor.c:403\r\n\r\nIn [7]: x = x.cuda()\r\n\r\nIn [8]: y = y.cuda()\r\n\r\nIn [9]: z = z.cuda()\r\n\r\nIn [10]: x.index_copy_(0, z, y)\r\nOut[10]: \r\n\r\n 1\r\n 1\r\n 4\r\n[torch.cuda.FloatTensor of size 3x1 (GPU 0)]\r\n```\r\nThe pytorch version is `0.1.12+d7db75c`"}