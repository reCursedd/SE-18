{"url": "https://api.github.com/repos/pytorch/pytorch/issues/comments/378407825", "html_url": "https://github.com/pytorch/pytorch/pull/6240#issuecomment-378407825", "issue_url": "https://api.github.com/repos/pytorch/pytorch/issues/6240", "id": 378407825, "node_id": "MDEyOklzc3VlQ29tbWVudDM3ODQwNzgyNQ==", "user": {"login": "ezyang", "id": 13564, "node_id": "MDQ6VXNlcjEzNTY0", "avatar_url": "https://avatars0.githubusercontent.com/u/13564?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ezyang", "html_url": "https://github.com/ezyang", "followers_url": "https://api.github.com/users/ezyang/followers", "following_url": "https://api.github.com/users/ezyang/following{/other_user}", "gists_url": "https://api.github.com/users/ezyang/gists{/gist_id}", "starred_url": "https://api.github.com/users/ezyang/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ezyang/subscriptions", "organizations_url": "https://api.github.com/users/ezyang/orgs", "repos_url": "https://api.github.com/users/ezyang/repos", "events_url": "https://api.github.com/users/ezyang/events{/privacy}", "received_events_url": "https://api.github.com/users/ezyang/received_events", "type": "User", "site_admin": false}, "created_at": "2018-04-03T21:38:28Z", "updated_at": "2018-04-03T21:39:44Z", "author_association": "CONTRIBUTOR", "body_html": "<p><a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=9998726\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/peterjc123\">@peterjc123</a> OK, I think I have a pretty good idea what's going on here, just want to keep you posted.</p>\n<p>(1) It turns out that upstream support for CUDA on Windows only works if you are using the Visual Studio cmake generator. We're using the ninja generator, so it is triggering our error. <a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=9998726\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/peterjc123\">@peterjc123</a> wrote us a patch to handle this correctly in <a class=\"commit-link\" data-hovercard-type=\"commit\" data-hovercard-url=\"https://github.com/pytorch/pytorch/commit/737aba3fc5ed009cd91a48715bf7765b6cb8a1a1/hovercard\" href=\"https://github.com/pytorch/pytorch/commit/737aba3fc5ed009cd91a48715bf7765b6cb8a1a1\"><tt>737aba3</tt></a> which we just need to upstream.</p>\n<p>(2) In <a class=\"commit-link\" data-hovercard-type=\"commit\" data-hovercard-url=\"https://github.com/pytorch/pytorch/commit/737aba3fc5ed009cd91a48715bf7765b6cb8a1a1/hovercard\" href=\"https://github.com/pytorch/pytorch/commit/737aba3fc5ed009cd91a48715bf7765b6cb8a1a1\"><tt>737aba3</tt></a> and <a class=\"commit-link\" data-hovercard-type=\"commit\" data-hovercard-url=\"https://github.com/pytorch/pytorch/commit/522276759d3fdf266608a37b517cc62a6cbc06e4/hovercard\" href=\"https://github.com/pytorch/pytorch/commit/522276759d3fdf266608a37b517cc62a6cbc06e4\"><tt>5222767</tt></a> there was also some work done passing <code>ccbin</code> appropriately so that <code>select_compute_arch</code> works correctly. This is a bit trickier, because upstream has completely diverged from our local copy and now uses <code>try_run</code> directly to snoop the information. I did a test of the upstream logic and it seems to properly detect the GPU version on the windows GPU machines we have on AWS. Would you like to double check this on your local dev environment? (To double check, do a Windows build of this build tree.)</p>\n<p>I think it's clear what we have to do, just would like a double check, thanks!</p>", "body_text": "@peterjc123 OK, I think I have a pretty good idea what's going on here, just want to keep you posted.\n(1) It turns out that upstream support for CUDA on Windows only works if you are using the Visual Studio cmake generator. We're using the ninja generator, so it is triggering our error. @peterjc123 wrote us a patch to handle this correctly in 737aba3 which we just need to upstream.\n(2) In 737aba3 and 5222767 there was also some work done passing ccbin appropriately so that select_compute_arch works correctly. This is a bit trickier, because upstream has completely diverged from our local copy and now uses try_run directly to snoop the information. I did a test of the upstream logic and it seems to properly detect the GPU version on the windows GPU machines we have on AWS. Would you like to double check this on your local dev environment? (To double check, do a Windows build of this build tree.)\nI think it's clear what we have to do, just would like a double check, thanks!", "body": "@peterjc123 OK, I think I have a pretty good idea what's going on here, just want to keep you posted.\r\n\r\n(1) It turns out that upstream support for CUDA on Windows only works if you are using the Visual Studio cmake generator. We're using the ninja generator, so it is triggering our error. @peterjc123 wrote us a patch to handle this correctly in 737aba3fc5ed009cd91a48715bf7765b6cb8a1a1 which we just need to upstream.\r\n\r\n(2) In 737aba3fc5ed009cd91a48715bf7765b6cb8a1a1 and 522276759d3fdf266608a37b517cc62a6cbc06e4 there was also some work done passing `ccbin` appropriately so that `select_compute_arch` works correctly. This is a bit trickier, because upstream has completely diverged from our local copy and now uses `try_run` directly to snoop the information. I did a test of the upstream logic and it seems to properly detect the GPU version on the windows GPU machines we have on AWS. Would you like to double check this on your local dev environment? (To double check, do a Windows build of this build tree.)\r\n\r\nI think it's clear what we have to do, just would like a double check, thanks!"}