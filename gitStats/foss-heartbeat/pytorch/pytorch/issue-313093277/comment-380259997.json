{"url": "https://api.github.com/repos/pytorch/pytorch/issues/comments/380259997", "html_url": "https://github.com/pytorch/pytorch/pull/6485#issuecomment-380259997", "issue_url": "https://api.github.com/repos/pytorch/pytorch/issues/6485", "id": 380259997, "node_id": "MDEyOklzc3VlQ29tbWVudDM4MDI1OTk5Nw==", "user": {"login": "cpuhrsch", "id": 1716488, "node_id": "MDQ6VXNlcjE3MTY0ODg=", "avatar_url": "https://avatars1.githubusercontent.com/u/1716488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cpuhrsch", "html_url": "https://github.com/cpuhrsch", "followers_url": "https://api.github.com/users/cpuhrsch/followers", "following_url": "https://api.github.com/users/cpuhrsch/following{/other_user}", "gists_url": "https://api.github.com/users/cpuhrsch/gists{/gist_id}", "starred_url": "https://api.github.com/users/cpuhrsch/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cpuhrsch/subscriptions", "organizations_url": "https://api.github.com/users/cpuhrsch/orgs", "repos_url": "https://api.github.com/users/cpuhrsch/repos", "events_url": "https://api.github.com/users/cpuhrsch/events{/privacy}", "received_events_url": "https://api.github.com/users/cpuhrsch/received_events", "type": "User", "site_admin": false}, "created_at": "2018-04-10T21:54:20Z", "updated_at": "2018-04-10T21:55:08Z", "author_association": "CONTRIBUTOR", "body_html": "<p><a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=4583066\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/apaszke\">@apaszke</a> one example would be storing sizes, counters and strides for the cpu apply utils with std::vector semantics. It's actually much faster to use an array that's stored on the stack than allocated on the heap in that specific case. This will only allocate memory on the heap for tensors with very high dimensionality.</p>", "body_text": "@apaszke one example would be storing sizes, counters and strides for the cpu apply utils with std::vector semantics. It's actually much faster to use an array that's stored on the stack than allocated on the heap in that specific case. This will only allocate memory on the heap for tensors with very high dimensionality.", "body": "@apaszke one example would be storing sizes, counters and strides for the cpu apply utils with std::vector semantics. It's actually much faster to use an array that's stored on the stack than allocated on the heap in that specific case. This will only allocate memory on the heap for tensors with very high dimensionality."}