{"url": "https://api.github.com/repos/pytorch/pytorch/issues/comments/377770555", "html_url": "https://github.com/pytorch/pytorch/issues/6164#issuecomment-377770555", "issue_url": "https://api.github.com/repos/pytorch/pytorch/issues/6164", "id": 377770555, "node_id": "MDEyOklzc3VlQ29tbWVudDM3Nzc3MDU1NQ==", "user": {"login": "Stonesjtu", "id": 4556044, "node_id": "MDQ6VXNlcjQ1NTYwNDQ=", "avatar_url": "https://avatars3.githubusercontent.com/u/4556044?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Stonesjtu", "html_url": "https://github.com/Stonesjtu", "followers_url": "https://api.github.com/users/Stonesjtu/followers", "following_url": "https://api.github.com/users/Stonesjtu/following{/other_user}", "gists_url": "https://api.github.com/users/Stonesjtu/gists{/gist_id}", "starred_url": "https://api.github.com/users/Stonesjtu/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Stonesjtu/subscriptions", "organizations_url": "https://api.github.com/users/Stonesjtu/orgs", "repos_url": "https://api.github.com/users/Stonesjtu/repos", "events_url": "https://api.github.com/users/Stonesjtu/events{/privacy}", "received_events_url": "https://api.github.com/users/Stonesjtu/received_events", "type": "User", "site_admin": false}, "created_at": "2018-04-01T08:08:01Z", "updated_at": "2018-04-01T08:08:01Z", "author_association": "CONTRIBUTOR", "body_html": "<ol>\n<li><code>torch.save</code> and <code>torch.load</code> may work as <code>model.save</code> and <code>model.load</code>.</li>\n<li>I don't think <code>pytorch</code> uses <code>Layer</code></li>\n<li><code>torch.set_default_tensor_type('torch.cuda.DoubleTensor')</code> should probably solve your problem.</li>\n<li><code>tensor[-4]</code> is already supported.</li>\n<li>refer to <a href=\"https://github.com/lanpa/tensorboard-pytorch\">https://github.com/lanpa/tensorboard-pytorch</a></li>\n<li>agree with you.</li>\n</ol>\n<p>Correct me if I misunderstand.</p>", "body_text": "torch.save and torch.load may work as model.save and model.load.\nI don't think pytorch uses Layer\ntorch.set_default_tensor_type('torch.cuda.DoubleTensor') should probably solve your problem.\ntensor[-4] is already supported.\nrefer to https://github.com/lanpa/tensorboard-pytorch\nagree with you.\n\nCorrect me if I misunderstand.", "body": "1. `torch.save` and `torch.load` may work as `model.save` and `model.load`.\r\n2. I don't think `pytorch` uses `Layer`\r\n3. `torch.set_default_tensor_type('torch.cuda.DoubleTensor')` should probably solve your problem.\r\n4. `tensor[-4]` is already supported.\r\n5.  refer to https://github.com/lanpa/tensorboard-pytorch\r\n6.  agree with you.\r\n\r\nCorrect me if I misunderstand."}