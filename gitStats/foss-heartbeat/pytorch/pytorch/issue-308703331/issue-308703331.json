{"url": "https://api.github.com/repos/pytorch/pytorch/issues/6011", "repository_url": "https://api.github.com/repos/pytorch/pytorch", "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/6011/labels{/name}", "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/6011/comments", "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/6011/events", "html_url": "https://github.com/pytorch/pytorch/issues/6011", "id": 308703331, "node_id": "MDU6SXNzdWUzMDg3MDMzMzE=", "number": 6011, "title": "Add expand nodes to point-wise operators generated by @script", "user": {"login": "zdevito", "id": 370202, "node_id": "MDQ6VXNlcjM3MDIwMg==", "avatar_url": "https://avatars0.githubusercontent.com/u/370202?v=4", "gravatar_id": "", "url": "https://api.github.com/users/zdevito", "html_url": "https://github.com/zdevito", "followers_url": "https://api.github.com/users/zdevito/followers", "following_url": "https://api.github.com/users/zdevito/following{/other_user}", "gists_url": "https://api.github.com/users/zdevito/gists{/gist_id}", "starred_url": "https://api.github.com/users/zdevito/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/zdevito/subscriptions", "organizations_url": "https://api.github.com/users/zdevito/orgs", "repos_url": "https://api.github.com/users/zdevito/repos", "events_url": "https://api.github.com/users/zdevito/events{/privacy}", "received_events_url": "https://api.github.com/users/zdevito/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 679953983, "node_id": "MDU6TGFiZWw2Nzk5NTM5ODM=", "url": "https://api.github.com/repos/pytorch/pytorch/labels/jit", "name": "jit", "color": "c5def5", "default": false}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-03-26T19:25:25Z", "updated_at": "2018-04-06T00:07:54Z", "closed_at": "2018-04-06T00:07:54Z", "author_association": "CONTRIBUTOR", "body_html": "<p><a class=\"user-mention\" data-hovercard-type=\"organization\" data-hovercard-url=\"/orgs/script/hovercard\" href=\"https://github.com/script\">@script</a> doesn't insert expand nodes, but our fuser assumes that point-wise operators cannot broadcast, which is unsafe. We need to fix this in a way makes the fuser safe, while still having it produce good fusions for <a class=\"user-mention\" data-hovercard-type=\"organization\" data-hovercard-url=\"/orgs/script/hovercard\" href=\"https://github.com/script\">@script</a> nodes. This can be a modification to shape analysis that is aware of the (relatively small) set of point-wise operators that do broadcasting.</p>\n<pre><code># before analysis\ny = rand(1,4)\nz = rand(4,4)\nx = exp(add(y, z)) # broadcasting add\n\n# using the result of shape analysis, we insert expand nodes and replace\n# broadcasting add with a non-broadcasting variant:\n\n# after\ny = rand(1,4)\nz = rand(4,4)\nx = exp(add_nobroadcast(expand_to(y, z), z)) # non-broadcasting add, nobroadcast could be an attribute if that turns out to work.\n\n# fuser is modified to only work on non-broadcasting adds.\n\n</code></pre>", "body_text": "@script doesn't insert expand nodes, but our fuser assumes that point-wise operators cannot broadcast, which is unsafe. We need to fix this in a way makes the fuser safe, while still having it produce good fusions for @script nodes. This can be a modification to shape analysis that is aware of the (relatively small) set of point-wise operators that do broadcasting.\n# before analysis\ny = rand(1,4)\nz = rand(4,4)\nx = exp(add(y, z)) # broadcasting add\n\n# using the result of shape analysis, we insert expand nodes and replace\n# broadcasting add with a non-broadcasting variant:\n\n# after\ny = rand(1,4)\nz = rand(4,4)\nx = exp(add_nobroadcast(expand_to(y, z), z)) # non-broadcasting add, nobroadcast could be an attribute if that turns out to work.\n\n# fuser is modified to only work on non-broadcasting adds.", "body": "@script doesn't insert expand nodes, but our fuser assumes that point-wise operators cannot broadcast, which is unsafe. We need to fix this in a way makes the fuser safe, while still having it produce good fusions for @script nodes. This can be a modification to shape analysis that is aware of the (relatively small) set of point-wise operators that do broadcasting.\r\n\r\n```\r\n# before analysis\r\ny = rand(1,4)\r\nz = rand(4,4)\r\nx = exp(add(y, z)) # broadcasting add\r\n\r\n# using the result of shape analysis, we insert expand nodes and replace\r\n# broadcasting add with a non-broadcasting variant:\r\n\r\n# after\r\ny = rand(1,4)\r\nz = rand(4,4)\r\nx = exp(add_nobroadcast(expand_to(y, z), z)) # non-broadcasting add, nobroadcast could be an attribute if that turns out to work.\r\n\r\n# fuser is modified to only work on non-broadcasting adds.\r\n\r\n```\r\n"}