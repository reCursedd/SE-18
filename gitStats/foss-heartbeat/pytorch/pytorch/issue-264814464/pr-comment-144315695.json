{"url": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/144315695", "pull_request_review_id": 68955711, "id": 144315695, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE0NDMxNTY5NQ==", "diff_hunk": "@@ -116,10 +116,30 @@ def sort_args(a, b, key=torch.is_tensor):\n     return (a, b, True) if key(a) else (b, a, False)\n \n \n+def gen_inputs(g, a, b):\n+    tensor, constant, tensor_first = sort_args(a, b, key=is_node)\n+    assert tensor.hasType()\n+    type = str(tensor.type().scalarType())\n+    broadcast = False\n+    if len(tensor.type().sizes()) > 1:\n+        broadcast = True\n+    constant = g.constant(constant, [tensor.type().sizes()[-1]], type).typeAs(tensor)", "path": "torch/autograd/_functions/basic_ops.py", "position": null, "original_position": 11, "commit_id": "c0dcf56409dbb00eb26ba5d89f3618911eacd3f1", "original_commit_id": "4c4c73c01c37c7b44126bd79e82bc198bfaa36b5", "user": {"login": "ezyang", "id": 13564, "node_id": "MDQ6VXNlcjEzNTY0", "avatar_url": "https://avatars0.githubusercontent.com/u/13564?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ezyang", "html_url": "https://github.com/ezyang", "followers_url": "https://api.github.com/users/ezyang/followers", "following_url": "https://api.github.com/users/ezyang/following{/other_user}", "gists_url": "https://api.github.com/users/ezyang/gists{/gist_id}", "starred_url": "https://api.github.com/users/ezyang/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ezyang/subscriptions", "organizations_url": "https://api.github.com/users/ezyang/orgs", "repos_url": "https://api.github.com/users/ezyang/repos", "events_url": "https://api.github.com/users/ezyang/events{/privacy}", "received_events_url": "https://api.github.com/users/ezyang/received_events", "type": "User", "site_admin": false}, "body": "This is not what we want long term and it should be documented accordingly (with this code, if you add a constant n to a 100 x 100 tensor, ONNX will serialize a size 100 1-dim tensor; not great.)  In hopefully not too long, we'll serialize this as a scalar getting rid of this goofiness.", "created_at": "2017-10-12T14:59:55Z", "updated_at": "2018-11-23T15:35:15Z", "html_url": "https://github.com/pytorch/pytorch/pull/3084#discussion_r144315695", "pull_request_url": "https://api.github.com/repos/pytorch/pytorch/pulls/3084", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/144315695"}, "html": {"href": "https://github.com/pytorch/pytorch/pull/3084#discussion_r144315695"}, "pull_request": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/3084"}}, "body_html": "<p>This is not what we want long term and it should be documented accordingly (with this code, if you add a constant n to a 100 x 100 tensor, ONNX will serialize a size 100 1-dim tensor; not great.)  In hopefully not too long, we'll serialize this as a scalar getting rid of this goofiness.</p>", "body_text": "This is not what we want long term and it should be documented accordingly (with this code, if you add a constant n to a 100 x 100 tensor, ONNX will serialize a size 100 1-dim tensor; not great.)  In hopefully not too long, we'll serialize this as a scalar getting rid of this goofiness."}