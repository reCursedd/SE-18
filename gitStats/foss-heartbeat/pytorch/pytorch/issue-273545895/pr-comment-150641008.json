{"url": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/150641008", "pull_request_review_id": 76219580, "id": 150641008, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE1MDY0MTAwOA==", "diff_hunk": "@@ -4,35 +4,126 @@ def python_num(s):\n     except Exception:\n         return float(s)\n \n+CPP_TO_ATEN_TYPE_MAP = {\n+  'std::vector<Tensor>': 'TensorList',\n+}\n+\n+# change C++ types into ATen types (for output to Declarations.yaml);\n+# e.g. std::vector<Tensor> -> TensorList, const/reference modifiers on Tensor\n+# go away and are eventually restored to dynamic_type (this can probably be simplified\n+# to a single transformation).\n+def to_aten_type(typ):\n+    # split tuples into constituents\n+    if 'std::tuple<' in typ:\n+        template = typ.split('std::tuple<', 1)[1].rsplit('>', 1)[0]\n+        type_list = template.split(',')\n+    else:\n+        type_list = [typ]\n+    # remove const/references\n+    type_list = [t.replace('const ', '').replace('&', '').strip() for t in type_list]\n+    type_list = [CPP_TO_ATEN_TYPE_MAP.get(t, t) for t in type_list]\n+    return ','.join(type_list)\n+\n+def parse_arguments(args):", "path": "aten/src/ATen/native_parse.py", "position": null, "original_position": 24, "commit_id": "63ed778c9072b62a38365a69636e3b78e29e031f", "original_commit_id": "6bf2b3d3507f7cc0a05ba47df644689bd6886a47", "user": {"login": "killeent", "id": 4529377, "node_id": "MDQ6VXNlcjQ1MjkzNzc=", "avatar_url": "https://avatars1.githubusercontent.com/u/4529377?v=4", "gravatar_id": "", "url": "https://api.github.com/users/killeent", "html_url": "https://github.com/killeent", "followers_url": "https://api.github.com/users/killeent/followers", "following_url": "https://api.github.com/users/killeent/following{/other_user}", "gists_url": "https://api.github.com/users/killeent/gists{/gist_id}", "starred_url": "https://api.github.com/users/killeent/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/killeent/subscriptions", "organizations_url": "https://api.github.com/users/killeent/orgs", "repos_url": "https://api.github.com/users/killeent/repos", "events_url": "https://api.github.com/users/killeent/events{/privacy}", "received_events_url": "https://api.github.com/users/killeent/received_events", "type": "User", "site_admin": false}, "body": "This function / file as a whole could use some documentation, but if its rapidly evolving, thats okay.", "created_at": "2017-11-13T19:29:28Z", "updated_at": "2018-11-23T15:36:26Z", "html_url": "https://github.com/pytorch/pytorch/pull/3672#discussion_r150641008", "pull_request_url": "https://api.github.com/repos/pytorch/pytorch/pulls/3672", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/150641008"}, "html": {"href": "https://github.com/pytorch/pytorch/pull/3672#discussion_r150641008"}, "pull_request": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/3672"}}, "body_html": "<p>This function / file as a whole could use some documentation, but if its rapidly evolving, thats okay.</p>", "body_text": "This function / file as a whole could use some documentation, but if its rapidly evolving, thats okay."}