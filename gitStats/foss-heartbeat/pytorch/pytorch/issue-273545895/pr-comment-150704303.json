{"url": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/150704303", "pull_request_review_id": 76294028, "id": 150704303, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE1MDcwNDMwMw==", "diff_hunk": "@@ -0,0 +1,126 @@\n+#pragma once\n+\n+#include \"ATen/ATen.h\"\n+#include <vector>\n+\n+/**\n+ * ATen native functions are ways to write ATen methods which make only\n+ * make use of other ATen operations (e.g., it is not necessary to\n+ * bind into TH/THC code or drop into CUDA kernels.)  These functions\n+ * are written as both functions as well as cwrap fragments, which are\n+ * then folded into the ATen code generation process; define a function\n+ * here, and it will show up as a method on at::Tensor.\n+ *\n+ * At the moment, only type_method_definition_level: base is supported.", "path": "aten/src/ATen/native/NativeFunctions.h", "position": null, "original_position": 14, "commit_id": "63ed778c9072b62a38365a69636e3b78e29e031f", "original_commit_id": "9511912ef618c337bd4c129a722dcd83a3ddb306", "user": {"login": "ezyang", "id": 13564, "node_id": "MDQ6VXNlcjEzNTY0", "avatar_url": "https://avatars0.githubusercontent.com/u/13564?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ezyang", "html_url": "https://github.com/ezyang", "followers_url": "https://api.github.com/users/ezyang/followers", "following_url": "https://api.github.com/users/ezyang/following{/other_user}", "gists_url": "https://api.github.com/users/ezyang/gists{/gist_id}", "starred_url": "https://api.github.com/users/ezyang/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ezyang/subscriptions", "organizations_url": "https://api.github.com/users/ezyang/orgs", "repos_url": "https://api.github.com/users/ezyang/repos", "events_url": "https://api.github.com/users/ezyang/events{/privacy}", "received_events_url": "https://api.github.com/users/ezyang/received_events", "type": "User", "site_admin": false}, "body": "While we're in the business of parsing the actual C prototypes, there should be a comment to that effect here; if we're going to keep the code like this longer term, there should be some commentary about the limitations of the parser, and where you should look if you need to extend it to support something else.", "created_at": "2017-11-14T00:12:16Z", "updated_at": "2018-11-23T15:36:28Z", "html_url": "https://github.com/pytorch/pytorch/pull/3672#discussion_r150704303", "pull_request_url": "https://api.github.com/repos/pytorch/pytorch/pulls/3672", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/150704303"}, "html": {"href": "https://github.com/pytorch/pytorch/pull/3672#discussion_r150704303"}, "pull_request": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/3672"}}, "body_html": "<p>While we're in the business of parsing the actual C prototypes, there should be a comment to that effect here; if we're going to keep the code like this longer term, there should be some commentary about the limitations of the parser, and where you should look if you need to extend it to support something else.</p>", "body_text": "While we're in the business of parsing the actual C prototypes, there should be a comment to that effect here; if we're going to keep the code like this longer term, there should be some commentary about the limitations of the parser, and where you should look if you need to extend it to support something else."}