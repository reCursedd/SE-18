{"url": "https://api.github.com/repos/pytorch/pytorch/issues/comments/412661177", "html_url": "https://github.com/pytorch/pytorch/issues/10324#issuecomment-412661177", "issue_url": "https://api.github.com/repos/pytorch/pytorch/issues/10324", "id": 412661177, "node_id": "MDEyOklzc3VlQ29tbWVudDQxMjY2MTE3Nw==", "user": {"login": "shawnjhenry", "id": 9464836, "node_id": "MDQ6VXNlcjk0NjQ4MzY=", "avatar_url": "https://avatars1.githubusercontent.com/u/9464836?v=4", "gravatar_id": "", "url": "https://api.github.com/users/shawnjhenry", "html_url": "https://github.com/shawnjhenry", "followers_url": "https://api.github.com/users/shawnjhenry/followers", "following_url": "https://api.github.com/users/shawnjhenry/following{/other_user}", "gists_url": "https://api.github.com/users/shawnjhenry/gists{/gist_id}", "starred_url": "https://api.github.com/users/shawnjhenry/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/shawnjhenry/subscriptions", "organizations_url": "https://api.github.com/users/shawnjhenry/orgs", "repos_url": "https://api.github.com/users/shawnjhenry/repos", "events_url": "https://api.github.com/users/shawnjhenry/events{/privacy}", "received_events_url": "https://api.github.com/users/shawnjhenry/received_events", "type": "User", "site_admin": false}, "created_at": "2018-08-13T20:56:23Z", "updated_at": "2018-08-13T20:56:23Z", "author_association": "NONE", "body_html": "<p>Hi,</p>\n<p>See, for example, this paper on learning hierarchical relationships given unstructured similarity scores: <a href=\"https://arxiv.org/pdf/1806.03417.pdf\" rel=\"nofollow\">https://arxiv.org/pdf/1806.03417.pdf</a>. The authors embed various items (e.g. words in WordNet, persons at Enron, languages) in the hyperboloid model of hyperbolic space to learn hierarchical relations between them in an unsupervised fashion.  The computation of the distance function in the hyperboloid model requires the inverse hyperbolic cosine, which is not currently implemented in PyTorch.  (I would expect it since inverses are implemented for regular trig functions.)  It would be convenient to have these for implementing models like this.</p>\n<p>Another use case would be in models that use normalizing flows (sequences of invertible transformations) as in this paper: <a href=\"https://d4mucfpksywv.cloudfront.net/research-covers/glow/paper/glow.pdf\" rel=\"nofollow\">https://d4mucfpksywv.cloudfront.net/research-covers/glow/paper/glow.pdf</a>.  When using the model to generate by sampling from the latent space and passing the sample through the inverse network, if one chose to use hyperbolic tangent activations, the inverse network computation would require the inverse hyperbolic tangent.</p>\n<p>Regards,<br>\nShawn</p>", "body_text": "Hi,\nSee, for example, this paper on learning hierarchical relationships given unstructured similarity scores: https://arxiv.org/pdf/1806.03417.pdf. The authors embed various items (e.g. words in WordNet, persons at Enron, languages) in the hyperboloid model of hyperbolic space to learn hierarchical relations between them in an unsupervised fashion.  The computation of the distance function in the hyperboloid model requires the inverse hyperbolic cosine, which is not currently implemented in PyTorch.  (I would expect it since inverses are implemented for regular trig functions.)  It would be convenient to have these for implementing models like this.\nAnother use case would be in models that use normalizing flows (sequences of invertible transformations) as in this paper: https://d4mucfpksywv.cloudfront.net/research-covers/glow/paper/glow.pdf.  When using the model to generate by sampling from the latent space and passing the sample through the inverse network, if one chose to use hyperbolic tangent activations, the inverse network computation would require the inverse hyperbolic tangent.\nRegards,\nShawn", "body": "Hi,\r\n\r\nSee, for example, this paper on learning hierarchical relationships given unstructured similarity scores: https://arxiv.org/pdf/1806.03417.pdf. The authors embed various items (e.g. words in WordNet, persons at Enron, languages) in the hyperboloid model of hyperbolic space to learn hierarchical relations between them in an unsupervised fashion.  The computation of the distance function in the hyperboloid model requires the inverse hyperbolic cosine, which is not currently implemented in PyTorch.  (I would expect it since inverses are implemented for regular trig functions.)  It would be convenient to have these for implementing models like this.  \r\n\r\nAnother use case would be in models that use normalizing flows (sequences of invertible transformations) as in this paper: https://d4mucfpksywv.cloudfront.net/research-covers/glow/paper/glow.pdf.  When using the model to generate by sampling from the latent space and passing the sample through the inverse network, if one chose to use hyperbolic tangent activations, the inverse network computation would require the inverse hyperbolic tangent.\r\n\r\nRegards,\r\nShawn"}