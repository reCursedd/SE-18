{"url": "https://api.github.com/repos/pytorch/pytorch/issues/comments/400172582", "html_url": "https://github.com/pytorch/pytorch/issues/3965#issuecomment-400172582", "issue_url": "https://api.github.com/repos/pytorch/pytorch/issues/3965", "id": 400172582, "node_id": "MDEyOklzc3VlQ29tbWVudDQwMDE3MjU4Mg==", "user": {"login": "goldsborough", "id": 6429851, "node_id": "MDQ6VXNlcjY0Mjk4NTE=", "avatar_url": "https://avatars3.githubusercontent.com/u/6429851?v=4", "gravatar_id": "", "url": "https://api.github.com/users/goldsborough", "html_url": "https://github.com/goldsborough", "followers_url": "https://api.github.com/users/goldsborough/followers", "following_url": "https://api.github.com/users/goldsborough/following{/other_user}", "gists_url": "https://api.github.com/users/goldsborough/gists{/gist_id}", "starred_url": "https://api.github.com/users/goldsborough/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/goldsborough/subscriptions", "organizations_url": "https://api.github.com/users/goldsborough/orgs", "repos_url": "https://api.github.com/users/goldsborough/repos", "events_url": "https://api.github.com/users/goldsborough/events{/privacy}", "received_events_url": "https://api.github.com/users/goldsborough/received_events", "type": "User", "site_admin": false}, "created_at": "2018-06-26T04:14:29Z", "updated_at": "2018-06-26T04:14:29Z", "author_association": "CONTRIBUTOR", "body_html": "<p>This won't work per se because <code>vector&lt;A&gt;</code> is unrelated to <code>vector&lt;B&gt;</code> in C++ even if <code>B</code> inherits <code>A</code>. The workaround I have created for this is <code>TensorListView(...)</code> which constructs a <code>vector&lt;Tensor&gt;</code> from a <code>vector&lt;Variable&gt;</code> inside: <a href=\"https://github.com/pytorch/pytorch/blob/master/torch/csrc/api/src/nn/modules/rnn.cpp#L156\">https://github.com/pytorch/pytorch/blob/master/torch/csrc/api/src/nn/modules/rnn.cpp#L156</a></p>", "body_text": "This won't work per se because vector<A> is unrelated to vector<B> in C++ even if B inherits A. The workaround I have created for this is TensorListView(...) which constructs a vector<Tensor> from a vector<Variable> inside: https://github.com/pytorch/pytorch/blob/master/torch/csrc/api/src/nn/modules/rnn.cpp#L156", "body": "This won't work per se because `vector<A>` is unrelated to `vector<B>` in C++ even if `B` inherits `A`. The workaround I have created for this is `TensorListView(...)` which constructs a `vector<Tensor>` from a `vector<Variable>` inside: https://github.com/pytorch/pytorch/blob/master/torch/csrc/api/src/nn/modules/rnn.cpp#L156"}