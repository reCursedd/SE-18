{"url": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/209275788", "pull_request_review_id": 145262178, "id": 209275788, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwOTI3NTc4OA==", "diff_hunk": "@@ -55,13 +56,29 @@ void Tensor::backward(\n   pImpl->backward(std::move(gradient), keep_graph, create_graph);\n }\n \n-TensorImpl::TensorImpl(Backend backend, ScalarType scalar_type) {\n-  backend_ = backend;\n-  scalar_type_ = scalar_type;\n+TensorImpl::TensorImpl(Backend backend, ScalarType scalar_type, bool is_variable) {\n   auto type = &globalContext().getType(backend, scalar_type);\n   Storage* storage = type->storage(true).release();\n   StorageImpl* storage_impl = storage->pImpl();\n   tensor = new THTensor(storage_impl);\n+  tensor->backend_ = backend;\n+  tensor->scalar_type_ = scalar_type;\n+  tensor->is_variable_ = is_variable;", "path": "aten/src/ATen/TensorImpl.cpp", "position": 26, "original_position": 26, "commit_id": "ede78c4458cc77af76de57acdba7b67e84c88d91", "original_commit_id": "ede78c4458cc77af76de57acdba7b67e84c88d91", "user": {"login": "ezyang", "id": 13564, "node_id": "MDQ6VXNlcjEzNTY0", "avatar_url": "https://avatars0.githubusercontent.com/u/13564?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ezyang", "html_url": "https://github.com/ezyang", "followers_url": "https://api.github.com/users/ezyang/followers", "following_url": "https://api.github.com/users/ezyang/following{/other_user}", "gists_url": "https://api.github.com/users/ezyang/gists{/gist_id}", "starred_url": "https://api.github.com/users/ezyang/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ezyang/subscriptions", "organizations_url": "https://api.github.com/users/ezyang/orgs", "repos_url": "https://api.github.com/users/ezyang/repos", "events_url": "https://api.github.com/users/ezyang/events{/privacy}", "received_events_url": "https://api.github.com/users/ezyang/received_events", "type": "User", "site_admin": false}, "body": "So... I guess maybe this PR wasn't a good idea after all. The problem is that we always need to know if something is a variable or not, even if `tensor` member was traditionally null. So basically, to make this patch pass all tests, we have to make sure that `tensor` is never null (so we can store this information), even for, e.g., UndefinedTensor and SparseTensor. So, we can make it work, but maybe it just makes more sense to just land the merge entirely (once Greg finishes the size changes).", "created_at": "2018-08-10T14:22:25Z", "updated_at": "2018-11-23T15:49:05Z", "html_url": "https://github.com/pytorch/pytorch/pull/10335#discussion_r209275788", "pull_request_url": "https://api.github.com/repos/pytorch/pytorch/pulls/10335", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/209275788"}, "html": {"href": "https://github.com/pytorch/pytorch/pull/10335#discussion_r209275788"}, "pull_request": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/10335"}}, "body_html": "<p>So... I guess maybe this PR wasn't a good idea after all. The problem is that we always need to know if something is a variable or not, even if <code>tensor</code> member was traditionally null. So basically, to make this patch pass all tests, we have to make sure that <code>tensor</code> is never null (so we can store this information), even for, e.g., UndefinedTensor and SparseTensor. So, we can make it work, but maybe it just makes more sense to just land the merge entirely (once Greg finishes the size changes).</p>", "body_text": "So... I guess maybe this PR wasn't a good idea after all. The problem is that we always need to know if something is a variable or not, even if tensor member was traditionally null. So basically, to make this patch pass all tests, we have to make sure that tensor is never null (so we can store this information), even for, e.g., UndefinedTensor and SparseTensor. So, we can make it work, but maybe it just makes more sense to just land the merge entirely (once Greg finishes the size changes)."}