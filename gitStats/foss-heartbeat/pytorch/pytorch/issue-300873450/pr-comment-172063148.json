{"url": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/172063148", "pull_request_review_id": 101018321, "id": 172063148, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE3MjA2MzE0OA==", "diff_hunk": "@@ -13,7 +13,7 @@ help:\n \t@$(SPHINXBUILD) -M help \"$(SOURCEDIR)\" \"$(BUILDDIR)\" $(SPHINXOPTS) $(O)\n \n figures:\n-\tpython source/scripts/build_activation_images.py\n+\tpython3 source/scripts/build_activation_images.py", "path": "docs/Makefile", "position": null, "original_position": 5, "commit_id": "4477f8a785eafbd03d640e319bec030d543fb287", "original_commit_id": "29e83875c1294c9a70ffaf8bde538764e49fa21b", "user": {"login": "apaszke", "id": 4583066, "node_id": "MDQ6VXNlcjQ1ODMwNjY=", "avatar_url": "https://avatars3.githubusercontent.com/u/4583066?v=4", "gravatar_id": "", "url": "https://api.github.com/users/apaszke", "html_url": "https://github.com/apaszke", "followers_url": "https://api.github.com/users/apaszke/followers", "following_url": "https://api.github.com/users/apaszke/following{/other_user}", "gists_url": "https://api.github.com/users/apaszke/gists{/gist_id}", "starred_url": "https://api.github.com/users/apaszke/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/apaszke/subscriptions", "organizations_url": "https://api.github.com/users/apaszke/orgs", "repos_url": "https://api.github.com/users/apaszke/repos", "events_url": "https://api.github.com/users/apaszke/events{/privacy}", "received_events_url": "https://api.github.com/users/apaszke/received_events", "type": "User", "site_admin": false}, "body": "It's not Python 3 only, it's \"the python you used to build PyTorch\" only. I can see two possibilities:\r\n- make the Python command to use a Makefile variable (that can be overriden using an env variable). We already use this strategy in `test/run_test.sh`.\r\n- Do `python <script_path> || python3 <script_path>` to handle failures automatically. A bit non-obivous, so I'd lean towards the first solution", "created_at": "2018-03-04T20:26:27Z", "updated_at": "2018-11-23T15:40:20Z", "html_url": "https://github.com/pytorch/pytorch/pull/5450#discussion_r172063148", "pull_request_url": "https://api.github.com/repos/pytorch/pytorch/pulls/5450", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/172063148"}, "html": {"href": "https://github.com/pytorch/pytorch/pull/5450#discussion_r172063148"}, "pull_request": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/5450"}}, "body_html": "<p>It's not Python 3 only, it's \"the python you used to build PyTorch\" only. I can see two possibilities:</p>\n<ul>\n<li>make the Python command to use a Makefile variable (that can be overriden using an env variable). We already use this strategy in <code>test/run_test.sh</code>.</li>\n<li>Do <code>python &lt;script_path&gt; || python3 &lt;script_path&gt;</code> to handle failures automatically. A bit non-obivous, so I'd lean towards the first solution</li>\n</ul>", "body_text": "It's not Python 3 only, it's \"the python you used to build PyTorch\" only. I can see two possibilities:\n\nmake the Python command to use a Makefile variable (that can be overriden using an env variable). We already use this strategy in test/run_test.sh.\nDo python <script_path> || python3 <script_path> to handle failures automatically. A bit non-obivous, so I'd lean towards the first solution", "in_reply_to_id": 172019205}