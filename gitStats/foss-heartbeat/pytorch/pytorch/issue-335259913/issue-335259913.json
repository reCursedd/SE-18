{"url": "https://api.github.com/repos/pytorch/pytorch/issues/8840", "repository_url": "https://api.github.com/repos/pytorch/pytorch", "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/8840/labels{/name}", "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/8840/comments", "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/8840/events", "html_url": "https://github.com/pytorch/pytorch/issues/8840", "id": 335259913, "node_id": "MDU6SXNzdWUzMzUyNTk5MTM=", "number": 8840, "title": "nn.NLLLoss example throws error", "user": {"login": "ptrblck", "id": 11662379, "node_id": "MDQ6VXNlcjExNjYyMzc5", "avatar_url": "https://avatars3.githubusercontent.com/u/11662379?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ptrblck", "html_url": "https://github.com/ptrblck", "followers_url": "https://api.github.com/users/ptrblck/followers", "following_url": "https://api.github.com/users/ptrblck/following{/other_user}", "gists_url": "https://api.github.com/users/ptrblck/gists{/gist_id}", "starred_url": "https://api.github.com/users/ptrblck/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ptrblck/subscriptions", "organizations_url": "https://api.github.com/users/ptrblck/orgs", "repos_url": "https://api.github.com/users/ptrblck/repos", "events_url": "https://api.github.com/users/ptrblck/events{/privacy}", "received_events_url": "https://api.github.com/users/ptrblck/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2018-06-25T04:59:55Z", "updated_at": "2018-06-25T06:01:06Z", "closed_at": "2018-06-25T06:01:06Z", "author_association": "CONTRIBUTOR", "body_html": "<h2><code>nn.NLLLoss</code> example does not work in current stable and master doc.</h2>\n<p>Reported <a href=\"https://discuss.pytorch.org/t/help-understanding-nn-nllloss-example/20153\" rel=\"nofollow\">in this thread</a>.</p>\n<p>The second example of <code>nn.NLLLoss</code>  from <a href=\"https://pytorch.org/docs/master/nn.html?#torch.nn.NLLLoss\" rel=\"nofollow\">the docs</a> throws an error on creating the <code>target</code> <code>tensor</code>:</p>\n<div class=\"highlight highlight-source-python\"><pre><span class=\"pl-c\"><span class=\"pl-c\">#</span> 2D loss example (used, for example, with image inputs)</span>\nN, C <span class=\"pl-k\">=</span> <span class=\"pl-c1\">5</span>, <span class=\"pl-c1\">4</span>\nloss <span class=\"pl-k\">=</span> nn.NLLLoss()\n<span class=\"pl-c\"><span class=\"pl-c\">#</span> input is of size N x C x height x width</span>\ndata <span class=\"pl-k\">=</span> torch.randn(N, <span class=\"pl-c1\">16</span>, <span class=\"pl-c1\">10</span>, <span class=\"pl-c1\">10</span>)\nm <span class=\"pl-k\">=</span> nn.Conv2d(<span class=\"pl-c1\">16</span>, C, (<span class=\"pl-c1\">3</span>, <span class=\"pl-c1\">3</span>))\n<span class=\"pl-c\"><span class=\"pl-c\">#</span> each element in target has to have 0 &lt;= value &lt; C</span>\ntarget <span class=\"pl-k\">=</span> torch.tensor(N, <span class=\"pl-c1\">8</span>, <span class=\"pl-c1\">8</span>).random_(<span class=\"pl-c1\">0</span>, C)\n<span class=\"pl-k\">&gt;</span> <span class=\"pl-c1\">TypeError</span>: tensor() takes <span class=\"pl-c1\">1</span> positional argument but <span class=\"pl-c1\">3</span> were given\noutput <span class=\"pl-k\">=</span> loss(m(data), target)\noutput.backward()</pre></div>\n<p>Tested under <code>0.4.0</code> and <code>0.5.0a0+e62c3a4</code>.</p>\n<p>The fix could be:</p>\n<div class=\"highlight highlight-source-python\"><pre>target <span class=\"pl-k\">=</span> torch.empty(N, <span class=\"pl-c1\">8</span>, <span class=\"pl-c1\">8</span>, <span class=\"pl-v\">dtype</span><span class=\"pl-k\">=</span>torch.long).random_(<span class=\"pl-c1\">0</span>, C)</pre></div>\n<p>I'm creating a pull request to fix this issue.</p>", "body_text": "nn.NLLLoss example does not work in current stable and master doc.\nReported in this thread.\nThe second example of nn.NLLLoss  from the docs throws an error on creating the target tensor:\n# 2D loss example (used, for example, with image inputs)\nN, C = 5, 4\nloss = nn.NLLLoss()\n# input is of size N x C x height x width\ndata = torch.randn(N, 16, 10, 10)\nm = nn.Conv2d(16, C, (3, 3))\n# each element in target has to have 0 <= value < C\ntarget = torch.tensor(N, 8, 8).random_(0, C)\n> TypeError: tensor() takes 1 positional argument but 3 were given\noutput = loss(m(data), target)\noutput.backward()\nTested under 0.4.0 and 0.5.0a0+e62c3a4.\nThe fix could be:\ntarget = torch.empty(N, 8, 8, dtype=torch.long).random_(0, C)\nI'm creating a pull request to fix this issue.", "body": "## `nn.NLLLoss` example does not work in current stable and master doc.\r\n\r\nReported [in this thread](https://discuss.pytorch.org/t/help-understanding-nn-nllloss-example/20153).\r\n\r\nThe second example of `nn.NLLLoss`  from [the docs](https://pytorch.org/docs/master/nn.html?#torch.nn.NLLLoss) throws an error on creating the `target` `tensor`:\r\n```python\r\n# 2D loss example (used, for example, with image inputs)\r\nN, C = 5, 4\r\nloss = nn.NLLLoss()\r\n# input is of size N x C x height x width\r\ndata = torch.randn(N, 16, 10, 10)\r\nm = nn.Conv2d(16, C, (3, 3))\r\n# each element in target has to have 0 <= value < C\r\ntarget = torch.tensor(N, 8, 8).random_(0, C)\r\n> TypeError: tensor() takes 1 positional argument but 3 were given\r\noutput = loss(m(data), target)\r\noutput.backward()\r\n```\r\n\r\nTested under `0.4.0` and `0.5.0a0+e62c3a4`.\r\n\r\nThe fix could be:\r\n```python\r\ntarget = torch.empty(N, 8, 8, dtype=torch.long).random_(0, C)\r\n```\r\nI'm creating a pull request to fix this issue."}