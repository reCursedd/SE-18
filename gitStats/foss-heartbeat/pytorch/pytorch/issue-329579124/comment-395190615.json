{"url": "https://api.github.com/repos/pytorch/pytorch/issues/comments/395190615", "html_url": "https://github.com/pytorch/pytorch/pull/8168#issuecomment-395190615", "issue_url": "https://api.github.com/repos/pytorch/pytorch/issues/8168", "id": 395190615, "node_id": "MDEyOklzc3VlQ29tbWVudDM5NTE5MDYxNQ==", "user": {"login": "colesbury", "id": 655866, "node_id": "MDQ6VXNlcjY1NTg2Ng==", "avatar_url": "https://avatars1.githubusercontent.com/u/655866?v=4", "gravatar_id": "", "url": "https://api.github.com/users/colesbury", "html_url": "https://github.com/colesbury", "followers_url": "https://api.github.com/users/colesbury/followers", "following_url": "https://api.github.com/users/colesbury/following{/other_user}", "gists_url": "https://api.github.com/users/colesbury/gists{/gist_id}", "starred_url": "https://api.github.com/users/colesbury/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/colesbury/subscriptions", "organizations_url": "https://api.github.com/users/colesbury/orgs", "repos_url": "https://api.github.com/users/colesbury/repos", "events_url": "https://api.github.com/users/colesbury/events{/privacy}", "received_events_url": "https://api.github.com/users/colesbury/received_events", "type": "User", "site_admin": false}, "created_at": "2018-06-06T19:45:15Z", "updated_at": "2018-06-06T19:45:15Z", "author_association": "MEMBER", "body_html": "<p><a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=4583066\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/apaszke\">@apaszke</a> I guess we could expose <code>input_metadata</code> to Python autograd function if we want to support that sort of trick. i.e. if you want implement those sorts of functions you could call something like <code>ctx.clear_input_metadata()</code> to avoid the shape and type checks.</p>", "body_text": "@apaszke I guess we could expose input_metadata to Python autograd function if we want to support that sort of trick. i.e. if you want implement those sorts of functions you could call something like ctx.clear_input_metadata() to avoid the shape and type checks.", "body": "@apaszke I guess we could expose `input_metadata` to Python autograd function if we want to support that sort of trick. i.e. if you want implement those sorts of functions you could call something like `ctx.clear_input_metadata()` to avoid the shape and type checks."}