{"url": "https://api.github.com/repos/pytorch/pytorch/issues/7336", "repository_url": "https://api.github.com/repos/pytorch/pytorch", "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/7336/labels{/name}", "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/7336/comments", "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/7336/events", "html_url": "https://github.com/pytorch/pytorch/issues/7336", "id": 320806792, "node_id": "MDU6SXNzdWUzMjA4MDY3OTI=", "number": 7336, "title": "MaxPool2d returns FloatTensor as indices", "user": {"login": "magnusja", "id": 1659457, "node_id": "MDQ6VXNlcjE2NTk0NTc=", "avatar_url": "https://avatars0.githubusercontent.com/u/1659457?v=4", "gravatar_id": "", "url": "https://api.github.com/users/magnusja", "html_url": "https://github.com/magnusja", "followers_url": "https://api.github.com/users/magnusja/followers", "following_url": "https://api.github.com/users/magnusja/following{/other_user}", "gists_url": "https://api.github.com/users/magnusja/gists{/gist_id}", "starred_url": "https://api.github.com/users/magnusja/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/magnusja/subscriptions", "organizations_url": "https://api.github.com/users/magnusja/orgs", "repos_url": "https://api.github.com/users/magnusja/repos", "events_url": "https://api.github.com/users/magnusja/events{/privacy}", "received_events_url": "https://api.github.com/users/magnusja/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": {"login": "li-roy", "id": 8813817, "node_id": "MDQ6VXNlcjg4MTM4MTc=", "avatar_url": "https://avatars0.githubusercontent.com/u/8813817?v=4", "gravatar_id": "", "url": "https://api.github.com/users/li-roy", "html_url": "https://github.com/li-roy", "followers_url": "https://api.github.com/users/li-roy/followers", "following_url": "https://api.github.com/users/li-roy/following{/other_user}", "gists_url": "https://api.github.com/users/li-roy/gists{/gist_id}", "starred_url": "https://api.github.com/users/li-roy/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/li-roy/subscriptions", "organizations_url": "https://api.github.com/users/li-roy/orgs", "repos_url": "https://api.github.com/users/li-roy/repos", "events_url": "https://api.github.com/users/li-roy/events{/privacy}", "received_events_url": "https://api.github.com/users/li-roy/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "li-roy", "id": 8813817, "node_id": "MDQ6VXNlcjg4MTM4MTc=", "avatar_url": "https://avatars0.githubusercontent.com/u/8813817?v=4", "gravatar_id": "", "url": "https://api.github.com/users/li-roy", "html_url": "https://github.com/li-roy", "followers_url": "https://api.github.com/users/li-roy/followers", "following_url": "https://api.github.com/users/li-roy/following{/other_user}", "gists_url": "https://api.github.com/users/li-roy/gists{/gist_id}", "starred_url": "https://api.github.com/users/li-roy/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/li-roy/subscriptions", "organizations_url": "https://api.github.com/users/li-roy/orgs", "repos_url": "https://api.github.com/users/li-roy/repos", "events_url": "https://api.github.com/users/li-roy/events{/privacy}", "received_events_url": "https://api.github.com/users/li-roy/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 3, "created_at": "2018-05-07T13:34:35Z", "updated_at": "2018-05-08T18:19:11Z", "closed_at": "2018-05-08T18:19:10Z", "author_association": "NONE", "body_html": "<h2>Issue description</h2>\n<p>MaxPool2d returns a FloatTensor as indices which results in an exception with MaxUnpool2d.</p>\n<h2>Code example</h2>\n<pre><code>    def forward(self, input):\n        tmp = self.basic(input)\n        out, indices = self.pool(tmp) # indices are FloatTensor (sometimes)\n        return out, indices, tmp\n\n      def forward(self, input, indices, encoder_block):\n        tmp = self.unpool(input, indices) # exception expected LongTensor for indices\n        tmp = torch.cat((encoder_block, tmp), dim=1)\n        return self.basic(tmp)\n</code></pre>\n<h2>System Info</h2>\n<pre><code>Collecting environment information...\nPyTorch version: 0.4.0\nIs debug build: No\nCUDA used to build PyTorch: 9.0.176\n\nOS: Ubuntu 17.10\nGCC version: (Ubuntu 7.2.0-8ubuntu3.2) 7.2.0\nCMake version: Could not collect\n\nPython version: 3.6\nIs CUDA available: Yes\nCUDA runtime version: Could not collect\nGPU models and configuration: GPU 0: GeForce GTX 1080 Ti\nNvidia driver version: 390.30\ncuDNN version: Probably one of the following:\n/usr/lib/x86_64-linux-gnu/libcudnn.so.7.0.5\n\nVersions of relevant libraries:\n[pip3] numpy (1.14.2)\n[pip3] torch (0.4.0)\n[pip3] torchvision (0.2.1)\n[conda] Could not collect\n</code></pre>", "body_text": "Issue description\nMaxPool2d returns a FloatTensor as indices which results in an exception with MaxUnpool2d.\nCode example\n    def forward(self, input):\n        tmp = self.basic(input)\n        out, indices = self.pool(tmp) # indices are FloatTensor (sometimes)\n        return out, indices, tmp\n\n      def forward(self, input, indices, encoder_block):\n        tmp = self.unpool(input, indices) # exception expected LongTensor for indices\n        tmp = torch.cat((encoder_block, tmp), dim=1)\n        return self.basic(tmp)\n\nSystem Info\nCollecting environment information...\nPyTorch version: 0.4.0\nIs debug build: No\nCUDA used to build PyTorch: 9.0.176\n\nOS: Ubuntu 17.10\nGCC version: (Ubuntu 7.2.0-8ubuntu3.2) 7.2.0\nCMake version: Could not collect\n\nPython version: 3.6\nIs CUDA available: Yes\nCUDA runtime version: Could not collect\nGPU models and configuration: GPU 0: GeForce GTX 1080 Ti\nNvidia driver version: 390.30\ncuDNN version: Probably one of the following:\n/usr/lib/x86_64-linux-gnu/libcudnn.so.7.0.5\n\nVersions of relevant libraries:\n[pip3] numpy (1.14.2)\n[pip3] torch (0.4.0)\n[pip3] torchvision (0.2.1)\n[conda] Could not collect", "body": "## Issue description\r\n\r\nMaxPool2d returns a FloatTensor as indices which results in an exception with MaxUnpool2d.\r\n\r\n## Code example\r\n\r\n```\r\n    def forward(self, input):\r\n        tmp = self.basic(input)\r\n        out, indices = self.pool(tmp) # indices are FloatTensor (sometimes)\r\n        return out, indices, tmp\r\n\r\n      def forward(self, input, indices, encoder_block):\r\n        tmp = self.unpool(input, indices) # exception expected LongTensor for indices\r\n        tmp = torch.cat((encoder_block, tmp), dim=1)\r\n        return self.basic(tmp)\r\n```\r\n\r\n## System Info\r\n\r\n```\r\nCollecting environment information...\r\nPyTorch version: 0.4.0\r\nIs debug build: No\r\nCUDA used to build PyTorch: 9.0.176\r\n\r\nOS: Ubuntu 17.10\r\nGCC version: (Ubuntu 7.2.0-8ubuntu3.2) 7.2.0\r\nCMake version: Could not collect\r\n\r\nPython version: 3.6\r\nIs CUDA available: Yes\r\nCUDA runtime version: Could not collect\r\nGPU models and configuration: GPU 0: GeForce GTX 1080 Ti\r\nNvidia driver version: 390.30\r\ncuDNN version: Probably one of the following:\r\n/usr/lib/x86_64-linux-gnu/libcudnn.so.7.0.5\r\n\r\nVersions of relevant libraries:\r\n[pip3] numpy (1.14.2)\r\n[pip3] torch (0.4.0)\r\n[pip3] torchvision (0.2.1)\r\n[conda] Could not collect\r\n```\r\n"}