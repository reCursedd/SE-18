{"url": "https://api.github.com/repos/pytorch/pytorch/issues/3152", "repository_url": "https://api.github.com/repos/pytorch/pytorch", "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/3152/labels{/name}", "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/3152/comments", "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/3152/events", "html_url": "https://github.com/pytorch/pytorch/issues/3152", "id": 266228215, "node_id": "MDU6SXNzdWUyNjYyMjgyMTU=", "number": 3152, "title": "Sparse tensor .new(size) can be confusing", "user": {"login": "SsnL", "id": 5674597, "node_id": "MDQ6VXNlcjU2NzQ1OTc=", "avatar_url": "https://avatars2.githubusercontent.com/u/5674597?v=4", "gravatar_id": "", "url": "https://api.github.com/users/SsnL", "html_url": "https://github.com/SsnL", "followers_url": "https://api.github.com/users/SsnL/followers", "following_url": "https://api.github.com/users/SsnL/following{/other_user}", "gists_url": "https://api.github.com/users/SsnL/gists{/gist_id}", "starred_url": "https://api.github.com/users/SsnL/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/SsnL/subscriptions", "organizations_url": "https://api.github.com/users/SsnL/orgs", "repos_url": "https://api.github.com/users/SsnL/repos", "events_url": "https://api.github.com/users/SsnL/events{/privacy}", "received_events_url": "https://api.github.com/users/SsnL/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 679954154, "node_id": "MDU6TGFiZWw2Nzk5NTQxNTQ=", "url": "https://api.github.com/repos/pytorch/pytorch/labels/sparse", "name": "sparse", "color": "bfd4f2", "default": false}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2017-10-17T18:19:13Z", "updated_at": "2018-09-12T21:12:47Z", "closed_at": null, "author_association": "CONTRIBUTOR", "body_html": "<p>Say <code>x</code> is a sparse tensor. When calling <code>y = x.new(x.size())</code>, it automatically creates a new sparse tensor with <code>y.dimensionI = x.dimensionI + x.dimensionV</code> and <code>y.dimensionV = 0</code>, regardless of <code>x.dimensionV</code>. This causes extremely confusing behaviors like the following, where <code>x.new(x.size()) + x</code> errors but <code>x.new(x.size()).resize_as_(x) + x</code> works:</p>\n<pre><code>(Pdb) x\nFloatTensor of size 10x3 with indices:\n\n    1     2     4     5     4     1     3     1     3     2     0\n[torch.cuda.LongTensor of size 1x11 (GPU 0)]\nand values:\n\n    1     1     1\n    1     1     1\n    1     1     1\n    1     1     1\n    1     1     1\n    1     1     1\n    1     1     1\n    1     1     1\n    1     1     1\n    1     1     1\n    1     1     1\n[torch.cuda.FloatTensor of size 11x3 (GPU 0)]\n\n(Pdb) y = x.new(x.size())\n(Pdb) y\nFloatTensor of size 10x3 with indices:\n[torch.cuda.LongTensor with no dimension]\nand values:\n[torch.cuda.FloatTensor with no dimension]\n\n(Pdb) y + x\n*** RuntimeError: cadd operands have incompatible sizes or dimension types at /home/ssnl/sftp/pytorch/torch/lib/THCS/generic/THCSTensorMath.cu:358\n(Pdb) yy = x.new(x.size()).resize_as_(x)\n(Pdb) yy\nFloatTensor of size 10x3 with indices:\n[torch.cuda.LongTensor with no dimension]\nand values:\n[torch.cuda.FloatTensor with no dimension]\n\n(Pdb) yy + x\nFloatTensor of size 10x3 with indices:\n\n    1     2     4     5     4     1     3     1     3     2     0\n[torch.cuda.LongTensor of size 1x11 (GPU 0)]\nand values:\n\n    1     1     1\n    1     1     1\n    1     1     1\n    1     1     1\n    1     1     1\n    1     1     1\n    1     1     1\n    1     1     1\n    1     1     1\n    1     1     1\n    1     1     1\n[torch.cuda.FloatTensor of size 11x3 (GPU 0)]\n</code></pre>", "body_text": "Say x is a sparse tensor. When calling y = x.new(x.size()), it automatically creates a new sparse tensor with y.dimensionI = x.dimensionI + x.dimensionV and y.dimensionV = 0, regardless of x.dimensionV. This causes extremely confusing behaviors like the following, where x.new(x.size()) + x errors but x.new(x.size()).resize_as_(x) + x works:\n(Pdb) x\nFloatTensor of size 10x3 with indices:\n\n    1     2     4     5     4     1     3     1     3     2     0\n[torch.cuda.LongTensor of size 1x11 (GPU 0)]\nand values:\n\n    1     1     1\n    1     1     1\n    1     1     1\n    1     1     1\n    1     1     1\n    1     1     1\n    1     1     1\n    1     1     1\n    1     1     1\n    1     1     1\n    1     1     1\n[torch.cuda.FloatTensor of size 11x3 (GPU 0)]\n\n(Pdb) y = x.new(x.size())\n(Pdb) y\nFloatTensor of size 10x3 with indices:\n[torch.cuda.LongTensor with no dimension]\nand values:\n[torch.cuda.FloatTensor with no dimension]\n\n(Pdb) y + x\n*** RuntimeError: cadd operands have incompatible sizes or dimension types at /home/ssnl/sftp/pytorch/torch/lib/THCS/generic/THCSTensorMath.cu:358\n(Pdb) yy = x.new(x.size()).resize_as_(x)\n(Pdb) yy\nFloatTensor of size 10x3 with indices:\n[torch.cuda.LongTensor with no dimension]\nand values:\n[torch.cuda.FloatTensor with no dimension]\n\n(Pdb) yy + x\nFloatTensor of size 10x3 with indices:\n\n    1     2     4     5     4     1     3     1     3     2     0\n[torch.cuda.LongTensor of size 1x11 (GPU 0)]\nand values:\n\n    1     1     1\n    1     1     1\n    1     1     1\n    1     1     1\n    1     1     1\n    1     1     1\n    1     1     1\n    1     1     1\n    1     1     1\n    1     1     1\n    1     1     1\n[torch.cuda.FloatTensor of size 11x3 (GPU 0)]", "body": "Say `x` is a sparse tensor. When calling `y = x.new(x.size())`, it automatically creates a new sparse tensor with `y.dimensionI = x.dimensionI + x.dimensionV` and `y.dimensionV = 0`, regardless of `x.dimensionV`. This causes extremely confusing behaviors like the following, where `x.new(x.size()) + x` errors but `x.new(x.size()).resize_as_(x) + x` works:\r\n\r\n```\r\n(Pdb) x\r\nFloatTensor of size 10x3 with indices:\r\n\r\n    1     2     4     5     4     1     3     1     3     2     0\r\n[torch.cuda.LongTensor of size 1x11 (GPU 0)]\r\nand values:\r\n\r\n    1     1     1\r\n    1     1     1\r\n    1     1     1\r\n    1     1     1\r\n    1     1     1\r\n    1     1     1\r\n    1     1     1\r\n    1     1     1\r\n    1     1     1\r\n    1     1     1\r\n    1     1     1\r\n[torch.cuda.FloatTensor of size 11x3 (GPU 0)]\r\n\r\n(Pdb) y = x.new(x.size())\r\n(Pdb) y\r\nFloatTensor of size 10x3 with indices:\r\n[torch.cuda.LongTensor with no dimension]\r\nand values:\r\n[torch.cuda.FloatTensor with no dimension]\r\n\r\n(Pdb) y + x\r\n*** RuntimeError: cadd operands have incompatible sizes or dimension types at /home/ssnl/sftp/pytorch/torch/lib/THCS/generic/THCSTensorMath.cu:358\r\n(Pdb) yy = x.new(x.size()).resize_as_(x)\r\n(Pdb) yy\r\nFloatTensor of size 10x3 with indices:\r\n[torch.cuda.LongTensor with no dimension]\r\nand values:\r\n[torch.cuda.FloatTensor with no dimension]\r\n\r\n(Pdb) yy + x\r\nFloatTensor of size 10x3 with indices:\r\n\r\n    1     2     4     5     4     1     3     1     3     2     0\r\n[torch.cuda.LongTensor of size 1x11 (GPU 0)]\r\nand values:\r\n\r\n    1     1     1\r\n    1     1     1\r\n    1     1     1\r\n    1     1     1\r\n    1     1     1\r\n    1     1     1\r\n    1     1     1\r\n    1     1     1\r\n    1     1     1\r\n    1     1     1\r\n    1     1     1\r\n[torch.cuda.FloatTensor of size 11x3 (GPU 0)]\r\n```"}