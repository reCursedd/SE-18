{"url": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/208062921", "pull_request_review_id": 143799601, "id": 208062921, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwODA2MjkyMQ==", "diff_hunk": "@@ -2391,7 +2391,7 @@\n     if (self_->dim() == 0) {\n       throw std::runtime_error(\"Input must be 1-d or 2-d\");\n     }\n-    ${THTensor}_diag(${state,}result_->tensor, self_->tensor, diagonal);\n+    ${THTensor}_diag(${state,}(THTensor*)(result_->unsafeGetTH(false)), (THTensor*)(self_->unsafeGetTH(false)), diagonal);", "path": "aten/src/ATen/Declarations.cwrap", "position": 5, "original_position": 5, "commit_id": "14167d00c9a55e9558ea69d9da84f3fa23eda382", "original_commit_id": "14167d00c9a55e9558ea69d9da84f3fa23eda382", "user": {"login": "ezyang", "id": 13564, "node_id": "MDQ6VXNlcjEzNTY0", "avatar_url": "https://avatars0.githubusercontent.com/u/13564?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ezyang", "html_url": "https://github.com/ezyang", "followers_url": "https://api.github.com/users/ezyang/followers", "following_url": "https://api.github.com/users/ezyang/following{/other_user}", "gists_url": "https://api.github.com/users/ezyang/gists{/gist_id}", "starred_url": "https://api.github.com/users/ezyang/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ezyang/subscriptions", "organizations_url": "https://api.github.com/users/ezyang/orgs", "repos_url": "https://api.github.com/users/ezyang/repos", "events_url": "https://api.github.com/users/ezyang/events{/privacy}", "received_events_url": "https://api.github.com/users/ezyang/received_events", "type": "User", "site_admin": false}, "body": "A safer way to do this is by adding a different, templated function, like `result_->unsafeGetTH<THTensor>`. This will do a `static_cast` in the current impl, but then later it will just static assert that the template argument is `T`, and then at some later point these can all be code-modded to be named a different function without the template argument.", "created_at": "2018-08-07T00:01:51Z", "updated_at": "2018-11-23T15:48:51Z", "html_url": "https://github.com/pytorch/pytorch/pull/10283#discussion_r208062921", "pull_request_url": "https://api.github.com/repos/pytorch/pytorch/pulls/10283", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/208062921"}, "html": {"href": "https://github.com/pytorch/pytorch/pull/10283#discussion_r208062921"}, "pull_request": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/10283"}}, "body_html": "<p>A safer way to do this is by adding a different, templated function, like <code>result_-&gt;unsafeGetTH&lt;THTensor&gt;</code>. This will do a <code>static_cast</code> in the current impl, but then later it will just static assert that the template argument is <code>T</code>, and then at some later point these can all be code-modded to be named a different function without the template argument.</p>", "body_text": "A safer way to do this is by adding a different, templated function, like result_->unsafeGetTH<THTensor>. This will do a static_cast in the current impl, but then later it will just static assert that the template argument is T, and then at some later point these can all be code-modded to be named a different function without the template argument.", "in_reply_to_id": 208062659}