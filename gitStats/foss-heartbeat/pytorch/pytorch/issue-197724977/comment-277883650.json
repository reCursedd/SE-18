{"url": "https://api.github.com/repos/pytorch/pytorch/issues/comments/277883650", "html_url": "https://github.com/pytorch/pytorch/issues/358#issuecomment-277883650", "issue_url": "https://api.github.com/repos/pytorch/pytorch/issues/358", "id": 277883650, "node_id": "MDEyOklzc3VlQ29tbWVudDI3Nzg4MzY1MA==", "user": {"login": "nhynes", "id": 2353785, "node_id": "MDQ6VXNlcjIzNTM3ODU=", "avatar_url": "https://avatars2.githubusercontent.com/u/2353785?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nhynes", "html_url": "https://github.com/nhynes", "followers_url": "https://api.github.com/users/nhynes/followers", "following_url": "https://api.github.com/users/nhynes/following{/other_user}", "gists_url": "https://api.github.com/users/nhynes/gists{/gist_id}", "starred_url": "https://api.github.com/users/nhynes/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nhynes/subscriptions", "organizations_url": "https://api.github.com/users/nhynes/orgs", "repos_url": "https://api.github.com/users/nhynes/repos", "events_url": "https://api.github.com/users/nhynes/events{/privacy}", "received_events_url": "https://api.github.com/users/nhynes/received_events", "type": "User", "site_admin": false}, "created_at": "2017-02-07T02:36:17Z", "updated_at": "2017-02-07T02:36:17Z", "author_association": "CONTRIBUTOR", "body_html": "<p>How about:</p>\n<ul>\n<li>adding <code>Module.remove_module(name)</code></li>\n<li>adding <code>Sequential.insert_module(index=None)</code> (where <code>None</code> represents \"append\")</li>\n<li>overriding <code>Sequential.remove_module(index=-1)</code></li>\n<li>enforcing the invariant that <code>Sequential._modules</code> contains contiguous, sequential indices</li>\n</ul>\n<p><code>Parallel</code> and <code>Concat</code> can then subclass Sequential and haven very simple <code>forward</code>s.</p>\n<p>If this sounds good, I'll post the PRs. In any case, having the ability to fine tune models would be nice!</p>", "body_text": "How about:\n\nadding Module.remove_module(name)\nadding Sequential.insert_module(index=None) (where None represents \"append\")\noverriding Sequential.remove_module(index=-1)\nenforcing the invariant that Sequential._modules contains contiguous, sequential indices\n\nParallel and Concat can then subclass Sequential and haven very simple forwards.\nIf this sounds good, I'll post the PRs. In any case, having the ability to fine tune models would be nice!", "body": "How about:\r\n* adding `Module.remove_module(name)`\r\n* adding `Sequential.insert_module(index=None)` (where `None` represents \"append\")\r\n* overriding `Sequential.remove_module(index=-1)`\r\n* enforcing the invariant that `Sequential._modules` contains contiguous, sequential indices\r\n\r\n`Parallel` and `Concat` can then subclass Sequential and haven very simple `forward`s.\r\n\r\nIf this sounds good, I'll post the PRs. In any case, having the ability to fine tune models would be nice!"}