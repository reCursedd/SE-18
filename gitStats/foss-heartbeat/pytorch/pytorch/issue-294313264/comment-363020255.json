{"url": "https://api.github.com/repos/pytorch/pytorch/issues/comments/363020255", "html_url": "https://github.com/pytorch/pytorch/issues/5044#issuecomment-363020255", "issue_url": "https://api.github.com/repos/pytorch/pytorch/issues/5044", "id": 363020255, "node_id": "MDEyOklzc3VlQ29tbWVudDM2MzAyMDI1NQ==", "user": {"login": "WarBean", "id": 5501392, "node_id": "MDQ6VXNlcjU1MDEzOTI=", "avatar_url": "https://avatars2.githubusercontent.com/u/5501392?v=4", "gravatar_id": "", "url": "https://api.github.com/users/WarBean", "html_url": "https://github.com/WarBean", "followers_url": "https://api.github.com/users/WarBean/followers", "following_url": "https://api.github.com/users/WarBean/following{/other_user}", "gists_url": "https://api.github.com/users/WarBean/gists{/gist_id}", "starred_url": "https://api.github.com/users/WarBean/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/WarBean/subscriptions", "organizations_url": "https://api.github.com/users/WarBean/orgs", "repos_url": "https://api.github.com/users/WarBean/repos", "events_url": "https://api.github.com/users/WarBean/events{/privacy}", "received_events_url": "https://api.github.com/users/WarBean/received_events", "type": "User", "site_admin": false}, "created_at": "2018-02-05T08:59:01Z", "updated_at": "2018-02-05T08:59:23Z", "author_association": "NONE", "body_html": "<p>Temporal solution: replacing deconv with upsample + conv is ok:</p>\n<pre><code>import torch\nimport torch.nn as nn\nfrom torch.autograd import Variable\n\na = Variable(torch.rand(10, 3, 5, 5).cuda(), requires_grad = True)\ndeconv = nn.ConvTranspose2d(3, 10, 3, 1, 1).cuda()\nupsample = nn.Upsample(scale_factor = 2, mode = 'nearest').cuda()\nconv = nn.Conv2d(3, 10, 3, 1, 1).cuda()\n\n#b = deconv(a)\nb = conv(upsample(a))\nc = b.mean()\ng = torch.autograd.grad(outputs = c, inputs = a, retain_graph = True, create_graph = True, only_inputs = True)[0]\nloss = g.mean()\nloss.backward()\n</code></pre>\n<p>Though the original bug is not fixed.</p>", "body_text": "Temporal solution: replacing deconv with upsample + conv is ok:\nimport torch\nimport torch.nn as nn\nfrom torch.autograd import Variable\n\na = Variable(torch.rand(10, 3, 5, 5).cuda(), requires_grad = True)\ndeconv = nn.ConvTranspose2d(3, 10, 3, 1, 1).cuda()\nupsample = nn.Upsample(scale_factor = 2, mode = 'nearest').cuda()\nconv = nn.Conv2d(3, 10, 3, 1, 1).cuda()\n\n#b = deconv(a)\nb = conv(upsample(a))\nc = b.mean()\ng = torch.autograd.grad(outputs = c, inputs = a, retain_graph = True, create_graph = True, only_inputs = True)[0]\nloss = g.mean()\nloss.backward()\n\nThough the original bug is not fixed.", "body": "Temporal solution: replacing deconv with upsample + conv is ok:\r\n\r\n```\r\nimport torch\r\nimport torch.nn as nn\r\nfrom torch.autograd import Variable\r\n\r\na = Variable(torch.rand(10, 3, 5, 5).cuda(), requires_grad = True)\r\ndeconv = nn.ConvTranspose2d(3, 10, 3, 1, 1).cuda()\r\nupsample = nn.Upsample(scale_factor = 2, mode = 'nearest').cuda()\r\nconv = nn.Conv2d(3, 10, 3, 1, 1).cuda()\r\n\r\n#b = deconv(a)\r\nb = conv(upsample(a))\r\nc = b.mean()\r\ng = torch.autograd.grad(outputs = c, inputs = a, retain_graph = True, create_graph = True, only_inputs = True)[0]\r\nloss = g.mean()\r\nloss.backward()\r\n```\r\n\r\nThough the original bug is not fixed."}