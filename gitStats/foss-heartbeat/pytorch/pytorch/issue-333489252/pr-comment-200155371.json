{"url": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/200155371", "pull_request_review_id": 134408621, "id": 200155371, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwMDE1NTM3MQ==", "diff_hunk": "@@ -0,0 +1,181 @@\n+import math\n+\n+import torch\n+from torch.distributions import constraints\n+from torch.distributions.distribution import Distribution\n+from torch.distributions.multivariate_normal import (_batch_diag, _batch_mahalanobis, _batch_mv,\n+                                                     _batch_potrf_lower, _batch_trtrs_lower,\n+                                                     _get_batch_shape)\n+from torch.distributions.utils import lazy_property\n+\n+\n+def _batch_vector_diag(bvec):\n+    \"\"\"\n+    Returns the diagonal matrices of a batch of vectors.\n+    \"\"\"\n+    n = bvec.size(-1)\n+    flat_bvec = bvec.reshape(-1, n)\n+    flat_bmat = torch.stack([v.diag() for v in flat_bvec])\n+    return flat_bmat.reshape(bvec.shape + (n,))\n+\n+\n+def _batch_capacitance_tril(W, D):\n+    r\"\"\"\n+    Computes Cholesky of :math:`I + W.T @ inv(D) @ W` for a batch of matrices :math:`W`\n+    and a batch of vectors :math:`D`.\n+    \"\"\"\n+    m = W.size(-1)\n+    Wt_Dinv = W.transpose(-1, -2) / D.unsqueeze(-2)\n+    K = torch.matmul(Wt_Dinv, W).contiguous()\n+    K.view(-1, m * m)[:, ::m + 1] += 1  # add identity matrix to K\n+    return _batch_potrf_lower(K)\n+\n+\n+def _batch_lowrank_logdet(W, D, capacitance_tril=None):\n+    r\"\"\"\n+    Uses \"matrix determinant lemma\"::\n+        log|W @ W.T + D| = log|C| + log|D|,\n+    where :math:`C` is the capacitance matrix :math:`I + W.T @ inv(D) @ W`, to compute\n+    the log determinant.\n+    \"\"\"\n+    if capacitance_tril is None:\n+        capacitance_tril = _batch_capacitance_tril(W, D)\n+    return 2 * _batch_diag(capacitance_tril).log().sum(-1) + D.log().sum(-1)\n+\n+\n+def _batch_lowrank_mahalanobis(W, D, x, capacitance_tril=None):\n+    r\"\"\"\n+    Uses \"Woodbury matrix identity\"::\n+        inv(W @ W.T + D) = inv(D) - inv(D) @ W @ inv(C) @ W.T @ inv(D),\n+    where :math:`C` is the capacitance matrix :math:`I + W.T @ inv(D) @ W`, to compute the squared\n+    Mahalanobis distance :math:`x.T @ inv(W @ W.T + D) @ x`.\n+    \"\"\"\n+    if capacitance_tril is None:\n+        capacitance_tril = _batch_capacitance_tril(W, D)", "path": "torch/distributions/lowrank_multivariate_normal.py", "position": null, "original_position": 54, "commit_id": "36d6044c64e07c795b8f2b8c9a88df25a407e025", "original_commit_id": "465e3f155b7522370272851c1579e6494d077c88", "user": {"login": "fritzo", "id": 648532, "node_id": "MDQ6VXNlcjY0ODUzMg==", "avatar_url": "https://avatars0.githubusercontent.com/u/648532?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fritzo", "html_url": "https://github.com/fritzo", "followers_url": "https://api.github.com/users/fritzo/followers", "following_url": "https://api.github.com/users/fritzo/following{/other_user}", "gists_url": "https://api.github.com/users/fritzo/gists{/gist_id}", "starred_url": "https://api.github.com/users/fritzo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fritzo/subscriptions", "organizations_url": "https://api.github.com/users/fritzo/orgs", "repos_url": "https://api.github.com/users/fritzo/repos", "events_url": "https://api.github.com/users/fritzo/events{/privacy}", "received_events_url": "https://api.github.com/users/fritzo/received_events", "type": "User", "site_admin": false}, "body": "nit: I would remove the `None` default to make it clear that there is no duplicated computation.", "created_at": "2018-07-04T15:10:38Z", "updated_at": "2018-11-23T15:46:46Z", "html_url": "https://github.com/pytorch/pytorch/pull/8635#discussion_r200155371", "pull_request_url": "https://api.github.com/repos/pytorch/pytorch/pulls/8635", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/200155371"}, "html": {"href": "https://github.com/pytorch/pytorch/pull/8635#discussion_r200155371"}, "pull_request": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/8635"}}, "body_html": "<p>nit: I would remove the <code>None</code> default to make it clear that there is no duplicated computation.</p>", "body_text": "nit: I would remove the None default to make it clear that there is no duplicated computation."}