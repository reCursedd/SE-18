{"url": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/196273234", "pull_request_review_id": 129793369, "id": 196273234, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5NjI3MzIzNA==", "diff_hunk": "@@ -119,28 +124,28 @@ class MultivariateNormal(Distribution):\n     has_rsample = True\n \n     def __init__(self, loc, covariance_matrix=None, precision_matrix=None, scale_tril=None, validate_args=None):\n-        event_shape = torch.Size(loc.shape[-1:])\n+        event_shape = loc.shape[-1:]\n         if (covariance_matrix is not None) + (scale_tril is not None) + (precision_matrix is not None) != 1:\n             raise ValueError(\"Exactly one of covariance_matrix or precision_matrix or scale_tril may be specified.\")\n         if scale_tril is not None:\n             if scale_tril.dim() < 2:\n                 raise ValueError(\"scale_tril matrix must be at least two-dimensional, \"\n                                  \"with optional leading batch dimensions\")\n-            self.scale_tril = scale_tril\n             batch_shape = _get_batch_shape(scale_tril, loc)\n+            self.scale_tril = scale_tril.expand(batch_shape + event_shape + event_shape)\n         elif covariance_matrix is not None:\n             if covariance_matrix.dim() < 2:\n                 raise ValueError(\"covariance_matrix must be at least two-dimensional, \"\n                                  \"with optional leading batch dimensions\")\n-            self.covariance_matrix = covariance_matrix\n             batch_shape = _get_batch_shape(covariance_matrix, loc)\n+            self.covariance_matrix = covariance_matrix.expand(batch_shape + event_shape + event_shape)\n         else:\n             if precision_matrix.dim() < 2:\n                 raise ValueError(\"precision_matrix must be at least two-dimensional, \"\n                                  \"with optional leading batch dimensions\")\n-            self.precision_matrix = precision_matrix\n-            self.covariance_matrix = _batch_inverse(precision_matrix)\n             batch_shape = _get_batch_shape(precision_matrix, loc)\n+            self.precision_matrix = precision_matrix.expand(batch_shape + event_shape + event_shape)\n+            self.covariance_matrix = _batch_inverse(precision_matrix)", "path": "torch/distributions/multivariate_normal.py", "position": null, "original_position": 124, "commit_id": "36d6044c64e07c795b8f2b8c9a88df25a407e025", "original_commit_id": "354dc255469d07783243279d92b2190b220c5551", "user": {"login": "fehiepsi", "id": 4736342, "node_id": "MDQ6VXNlcjQ3MzYzNDI=", "avatar_url": "https://avatars1.githubusercontent.com/u/4736342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fehiepsi", "html_url": "https://github.com/fehiepsi", "followers_url": "https://api.github.com/users/fehiepsi/followers", "following_url": "https://api.github.com/users/fehiepsi/following{/other_user}", "gists_url": "https://api.github.com/users/fehiepsi/gists{/gist_id}", "starred_url": "https://api.github.com/users/fehiepsi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fehiepsi/subscriptions", "organizations_url": "https://api.github.com/users/fehiepsi/orgs", "repos_url": "https://api.github.com/users/fehiepsi/repos", "events_url": "https://api.github.com/users/fehiepsi/events{/privacy}", "received_events_url": "https://api.github.com/users/fehiepsi/received_events", "type": "User", "site_admin": false}, "body": "However, with these `.expand`s, tests `_gradcheck_log_prob` failed for MultivariateNormal distribution. Adding `.clone` after `.expand` helps for the old implementation of `batch_mahalanobis`, but does not help for this new implementation. I am not sure what is wrong here.", "created_at": "2018-06-19T01:38:41Z", "updated_at": "2018-11-23T15:45:44Z", "html_url": "https://github.com/pytorch/pytorch/pull/8635#discussion_r196273234", "pull_request_url": "https://api.github.com/repos/pytorch/pytorch/pulls/8635", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/196273234"}, "html": {"href": "https://github.com/pytorch/pytorch/pull/8635#discussion_r196273234"}, "pull_request": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/8635"}}, "body_html": "<p>However, with these <code>.expand</code>s, tests <code>_gradcheck_log_prob</code> failed for MultivariateNormal distribution. Adding <code>.clone</code> after <code>.expand</code> helps for the old implementation of <code>batch_mahalanobis</code>, but does not help for this new implementation. I am not sure what is wrong here.</p>", "body_text": "However, with these .expands, tests _gradcheck_log_prob failed for MultivariateNormal distribution. Adding .clone after .expand helps for the old implementation of batch_mahalanobis, but does not help for this new implementation. I am not sure what is wrong here."}