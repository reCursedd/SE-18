{"url": "https://api.github.com/repos/pytorch/pytorch/issues/8635", "repository_url": "https://api.github.com/repos/pytorch/pytorch", "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/8635/labels{/name}", "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/8635/comments", "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/8635/events", "html_url": "https://github.com/pytorch/pytorch/pull/8635", "id": 333489252, "node_id": "MDExOlB1bGxSZXF1ZXN0MTk1NjkwNDY0", "number": 8635, "title": "[distributions] Low rank multivariate normal", "user": {"login": "fehiepsi", "id": 4736342, "node_id": "MDQ6VXNlcjQ3MzYzNDI=", "avatar_url": "https://avatars1.githubusercontent.com/u/4736342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fehiepsi", "html_url": "https://github.com/fehiepsi", "followers_url": "https://api.github.com/users/fehiepsi/followers", "following_url": "https://api.github.com/users/fehiepsi/following{/other_user}", "gists_url": "https://api.github.com/users/fehiepsi/gists{/gist_id}", "starred_url": "https://api.github.com/users/fehiepsi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fehiepsi/subscriptions", "organizations_url": "https://api.github.com/users/fehiepsi/orgs", "repos_url": "https://api.github.com/users/fehiepsi/repos", "events_url": "https://api.github.com/users/fehiepsi/events{/privacy}", "received_events_url": "https://api.github.com/users/fehiepsi/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 26, "created_at": "2018-06-19T01:33:54Z", "updated_at": "2018-11-23T15:47:32Z", "closed_at": "2018-07-23T17:12:02Z", "author_association": "CONTRIBUTOR", "pull_request": {"url": "https://api.github.com/repos/pytorch/pytorch/pulls/8635", "html_url": "https://github.com/pytorch/pytorch/pull/8635", "diff_url": "https://github.com/pytorch/pytorch/pull/8635.diff", "patch_url": "https://github.com/pytorch/pytorch/pull/8635.patch"}, "body_html": "<p>This pull request implements low rank multivariate normal distribution where the covariance matrix has the from <code>W @ W.T + D</code>. Here D is a diagonal matrix, W has shape n x m where m &lt;&lt; n. It used \"matrix determinant lemma\" and \"Woodbury matrix identity\" to save computational cost.</p>\n<p>During the way, I also revise MultivariateNormal distribution a bit. Here are other changes:</p>\n<ul>\n<li><code>torch.trtrs</code> works with cuda tensor. So I tried to use it instead of <code>torch.inverse</code>.</li>\n<li>Use <code>torch.matmul</code> instead of <code>torch.bmm</code> in <code>_batch_mv</code>. The former is faster and simpler.</li>\n<li>Use <code>torch.diagonal</code> for <code>_batch_diag</code></li>\n<li>Reimplement <code>_batch_mahalanobis</code> based on <code>_batch_trtrs_lower</code>.</li>\n<li>Use trtrs to compute term2 of KL.</li>\n<li><code>variance</code> relies on <code>scale_tril</code> instead of <code>covariance_matrix</code></li>\n</ul>\n<p>TODO:</p>\n<ul class=\"contains-task-list\">\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\" checked=\"\"> Resolve the fail at <code>_gradcheck_log_prob</code></li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\" checked=\"\"> Add test for KL</li>\n</ul>\n<p>cc <a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=648532\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/fritzo\">@fritzo</a> <a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=6617696\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/stepelu\">@stepelu</a> <a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=4583066\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/apaszke\">@apaszke</a></p>", "body_text": "This pull request implements low rank multivariate normal distribution where the covariance matrix has the from W @ W.T + D. Here D is a diagonal matrix, W has shape n x m where m << n. It used \"matrix determinant lemma\" and \"Woodbury matrix identity\" to save computational cost.\nDuring the way, I also revise MultivariateNormal distribution a bit. Here are other changes:\n\ntorch.trtrs works with cuda tensor. So I tried to use it instead of torch.inverse.\nUse torch.matmul instead of torch.bmm in _batch_mv. The former is faster and simpler.\nUse torch.diagonal for _batch_diag\nReimplement _batch_mahalanobis based on _batch_trtrs_lower.\nUse trtrs to compute term2 of KL.\nvariance relies on scale_tril instead of covariance_matrix\n\nTODO:\n\n Resolve the fail at _gradcheck_log_prob\n Add test for KL\n\ncc @fritzo @stepelu @apaszke", "body": "This pull request implements low rank multivariate normal distribution where the covariance matrix has the from `W @ W.T + D`. Here D is a diagonal matrix, W has shape n x m where m << n. It used \"matrix determinant lemma\" and \"Woodbury matrix identity\" to save computational cost.\r\n\r\nDuring the way, I also revise MultivariateNormal distribution a bit. Here are other changes:\r\n+ `torch.trtrs` works with cuda tensor. So I tried to use it instead of `torch.inverse`.\r\n+ Use `torch.matmul` instead of `torch.bmm` in `_batch_mv`. The former is faster and simpler.\r\n+ Use `torch.diagonal` for `_batch_diag`\r\n+ Reimplement `_batch_mahalanobis` based on `_batch_trtrs_lower`.\r\n+ Use trtrs to compute term2 of KL.\r\n+ `variance` relies on `scale_tril` instead of `covariance_matrix`\r\n\r\nTODO:\r\n- [x] Resolve the fail at `_gradcheck_log_prob`\r\n- [x] Add test for KL\r\n\r\ncc @fritzo @stepelu @apaszke "}