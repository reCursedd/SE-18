{"url": "https://api.github.com/repos/pytorch/pytorch/issues/comments/348546498", "html_url": "https://github.com/pytorch/pytorch/issues/2140#issuecomment-348546498", "issue_url": "https://api.github.com/repos/pytorch/pytorch/issues/2140", "id": 348546498, "node_id": "MDEyOklzc3VlQ29tbWVudDM0ODU0NjQ5OA==", "user": {"login": "Dezhic", "id": 4923054, "node_id": "MDQ6VXNlcjQ5MjMwNTQ=", "avatar_url": "https://avatars1.githubusercontent.com/u/4923054?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Dezhic", "html_url": "https://github.com/Dezhic", "followers_url": "https://api.github.com/users/Dezhic/followers", "following_url": "https://api.github.com/users/Dezhic/following{/other_user}", "gists_url": "https://api.github.com/users/Dezhic/gists{/gist_id}", "starred_url": "https://api.github.com/users/Dezhic/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Dezhic/subscriptions", "organizations_url": "https://api.github.com/users/Dezhic/orgs", "repos_url": "https://api.github.com/users/Dezhic/repos", "events_url": "https://api.github.com/users/Dezhic/events{/privacy}", "received_events_url": "https://api.github.com/users/Dezhic/received_events", "type": "User", "site_admin": false}, "created_at": "2017-12-01T16:49:29Z", "updated_at": "2017-12-01T16:49:29Z", "author_association": "NONE", "body_html": "<p>Same here but with custom network:</p>\n<pre><code>/usr/local/lib/python3.5/dist-packages/torch/nn/modules/batchnorm.py in forward(self, input)\n     35         return F.batch_norm(\n     36             input, self.running_mean, self.running_var, self.weight, self.bias,\n---&gt; 37             self.training, self.momentum, self.eps)\n     38 \n     39     def __repr__(self):\n\n/usr/local/lib/python3.5/dist-packages/torch/nn/functional.py in batch_norm(input, running_mean, running_var, weight, bias, training, momentum, eps)\n    637                training=False, momentum=0.1, eps=1e-5):\n    638     f = torch._C._functions.BatchNorm(running_mean, running_var, training, momentum, eps, torch.backends.cudnn.enabled)\n--&gt; 639     return f(input, weight, bias)\n    640 \n    641 \n\nRuntimeError: std::bad_cast\n</code></pre>", "body_text": "Same here but with custom network:\n/usr/local/lib/python3.5/dist-packages/torch/nn/modules/batchnorm.py in forward(self, input)\n     35         return F.batch_norm(\n     36             input, self.running_mean, self.running_var, self.weight, self.bias,\n---> 37             self.training, self.momentum, self.eps)\n     38 \n     39     def __repr__(self):\n\n/usr/local/lib/python3.5/dist-packages/torch/nn/functional.py in batch_norm(input, running_mean, running_var, weight, bias, training, momentum, eps)\n    637                training=False, momentum=0.1, eps=1e-5):\n    638     f = torch._C._functions.BatchNorm(running_mean, running_var, training, momentum, eps, torch.backends.cudnn.enabled)\n--> 639     return f(input, weight, bias)\n    640 \n    641 \n\nRuntimeError: std::bad_cast", "body": "Same here but with custom network:\r\n```\r\n/usr/local/lib/python3.5/dist-packages/torch/nn/modules/batchnorm.py in forward(self, input)\r\n     35         return F.batch_norm(\r\n     36             input, self.running_mean, self.running_var, self.weight, self.bias,\r\n---> 37             self.training, self.momentum, self.eps)\r\n     38 \r\n     39     def __repr__(self):\r\n\r\n/usr/local/lib/python3.5/dist-packages/torch/nn/functional.py in batch_norm(input, running_mean, running_var, weight, bias, training, momentum, eps)\r\n    637                training=False, momentum=0.1, eps=1e-5):\r\n    638     f = torch._C._functions.BatchNorm(running_mean, running_var, training, momentum, eps, torch.backends.cudnn.enabled)\r\n--> 639     return f(input, weight, bias)\r\n    640 \r\n    641 \r\n\r\nRuntimeError: std::bad_cast\r\n```"}