{"url": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/185170582", "pull_request_review_id": 116506030, "id": 185170582, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4NTE3MDU4Mg==", "diff_hunk": "@@ -0,0 +1,79 @@\n+#include \"caffe2/operators/moments_op.h\"\n+\n+#include <functional>\n+#include <string>\n+\n+namespace caffe2 {\n+\n+template <typename T, class Context>\n+bool MomentsGradientOp<T, Context>::Compute(\n+    const std::vector<int>& dY_dims,\n+    const std::vector<int>& dX_dims,\n+    const T* dmean_data,\n+    const T* dvariance_data,\n+    const T* X_data,\n+    const T* mean_data,\n+    T* dX_data) {\n+  const int dY_size = std::accumulate(\n+      dY_dims.cbegin(), dY_dims.cend(), 1, std::multiplies<int>());\n+  const int dX_size = std::accumulate(\n+      dX_dims.cbegin(), dX_dims.cend(), 1, std::multiplies<int>());\n+  const int ndim = dX_dims.size();\n+  std::vector<int> index(ndim, 0);\n+  const T norm = static_cast<T>(dY_size) / static_cast<T>(dX_size);\n+  for (int dX_index = 0; dX_index < dX_size; ++dX_index) {\n+    const int dY_index =\n+        math::internal::GetIndexFromDims(ndim, dY_dims.data(), index.data());", "path": "caffe2/operators/moments_op.cc", "position": 26, "original_position": 26, "commit_id": "7c395e954a7ff2b29b14130d61222acb0fd426c1", "original_commit_id": "3d502368f0a0eb900e72641b363674496377a9ba", "user": {"login": "houseroad", "id": 30275821, "node_id": "MDQ6VXNlcjMwMjc1ODIx", "avatar_url": "https://avatars0.githubusercontent.com/u/30275821?v=4", "gravatar_id": "", "url": "https://api.github.com/users/houseroad", "html_url": "https://github.com/houseroad", "followers_url": "https://api.github.com/users/houseroad/followers", "following_url": "https://api.github.com/users/houseroad/following{/other_user}", "gists_url": "https://api.github.com/users/houseroad/gists{/gist_id}", "starred_url": "https://api.github.com/users/houseroad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/houseroad/subscriptions", "organizations_url": "https://api.github.com/users/houseroad/orgs", "repos_url": "https://api.github.com/users/houseroad/repos", "events_url": "https://api.github.com/users/houseroad/events{/privacy}", "received_events_url": "https://api.github.com/users/houseroad/received_events", "type": "User", "site_admin": false}, "body": "~~If dY_size < dX_size, it seems we may have overflow here~~ savvy! GetIndexFromDims skips the dim which equals to 1.", "created_at": "2018-05-01T05:52:32Z", "updated_at": "2018-11-23T15:43:28Z", "html_url": "https://github.com/pytorch/pytorch/pull/7114#discussion_r185170582", "pull_request_url": "https://api.github.com/repos/pytorch/pytorch/pulls/7114", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/185170582"}, "html": {"href": "https://github.com/pytorch/pytorch/pull/7114#discussion_r185170582"}, "pull_request": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/7114"}}, "body_html": "<p><del>If dY_size &lt; dX_size, it seems we may have overflow here</del> savvy! GetIndexFromDims skips the dim which equals to 1.</p>", "body_text": "If dY_size < dX_size, it seems we may have overflow here savvy! GetIndexFromDims skips the dim which equals to 1."}