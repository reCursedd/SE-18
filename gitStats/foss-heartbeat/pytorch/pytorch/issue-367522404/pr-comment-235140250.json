{"url": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/235140250", "pull_request_review_id": 176938563, "id": 235140250, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIzNTE0MDI1MA==", "diff_hunk": "@@ -799,4 +799,294 @@ Tensor sspaddmm(const Tensor& self, const Tensor& mat1, const Tensor& mat2,\n   return result;\n }\n \n+// --------------------------------------------------------------------\n+// sparse.sum()\n+//\n+// This implementation calls coalesce() to do the sum reduction on\n+// sparse dims. Ideally in the future there should be unified reduction function\n+// for ops like sum, max, and min.\n+// --------------------------------------------------------------------\n+Tensor _sparse_sum(const SparseTensor& input) {\n+  return input.coalesce().values().sum();", "path": "aten/src/ATen/native/sparse/SparseTensorMath.cpp", "position": 27, "original_position": 27, "commit_id": "f3db2514189f34fbdf9ea48fbebeacd8fa711b7c", "original_commit_id": "cf0b6dd308faac8f66f5a8ace4fec04b9bee6bc6", "user": {"login": "weiyangfb", "id": 38509346, "node_id": "MDQ6VXNlcjM4NTA5MzQ2", "avatar_url": "https://avatars1.githubusercontent.com/u/38509346?v=4", "gravatar_id": "", "url": "https://api.github.com/users/weiyangfb", "html_url": "https://github.com/weiyangfb", "followers_url": "https://api.github.com/users/weiyangfb/followers", "following_url": "https://api.github.com/users/weiyangfb/following{/other_user}", "gists_url": "https://api.github.com/users/weiyangfb/gists{/gist_id}", "starred_url": "https://api.github.com/users/weiyangfb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/weiyangfb/subscriptions", "organizations_url": "https://api.github.com/users/weiyangfb/orgs", "repos_url": "https://api.github.com/users/weiyangfb/repos", "events_url": "https://api.github.com/users/weiyangfb/events{/privacy}", "received_events_url": "https://api.github.com/users/weiyangfb/received_events", "type": "User", "site_admin": false}, "body": "here I am making sure the default sum matches the behavior as in dense:\r\n```\r\n>>> a = torch.randn(2, 3)\r\n>>> type(a.sum())\r\ntorch.Tensor\r\n```\r\nI will update the doc says the default behavior of sum with any specified dims will return a scalar tensor", "created_at": "2018-11-20T19:31:10Z", "updated_at": "2018-11-23T15:55:15Z", "html_url": "https://github.com/pytorch/pytorch/pull/12430#discussion_r235140250", "pull_request_url": "https://api.github.com/repos/pytorch/pytorch/pulls/12430", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/235140250"}, "html": {"href": "https://github.com/pytorch/pytorch/pull/12430#discussion_r235140250"}, "pull_request": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/12430"}}, "body_html": "<p>here I am making sure the default sum matches the behavior as in dense:</p>\n<pre><code>&gt;&gt;&gt; a = torch.randn(2, 3)\n&gt;&gt;&gt; type(a.sum())\ntorch.Tensor\n</code></pre>\n<p>I will update the doc says the default behavior of sum with any specified dims will return a scalar tensor</p>", "body_text": "here I am making sure the default sum matches the behavior as in dense:\n>>> a = torch.randn(2, 3)\n>>> type(a.sum())\ntorch.Tensor\n\nI will update the doc says the default behavior of sum with any specified dims will return a scalar tensor", "in_reply_to_id": 234886689}