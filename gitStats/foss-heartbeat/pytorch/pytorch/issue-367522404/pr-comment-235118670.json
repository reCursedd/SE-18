{"url": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/235118670", "pull_request_review_id": 176911903, "id": 235118670, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIzNTExODY3MA==", "diff_hunk": "@@ -109,4 +109,33 @@ inline LongTensor flatten_indices(const Tensor& indices, IntList full_size, bool\n   }\n }\n \n+// Flatten sparse tensor's indices from nD to 1D, similar to NOTE [ Flatten Sparse Indices ],\n+// except this one allows partial flatten: only flatten on specified dims. Note that\n+// the flatten indices might be uncoalesced if dims_to_flatten.size() < sparse_dim.\n+// Also if input indices is already coalesced, the flattened indices will also be sorted.\n+//\n+// args:\n+//    indices: sparse tensor indices\n+//    sizes: sparse tensor sizes\n+//    dims_to_flatten: a list of dim index to flatten\n+//\n+// Ex1:\n+//   indices = [[2, 4, 0],\n+//             [3, 1, 3]]\n+//   sizes = [2, 12]\n+//   dims_to_flatten = [0, 1]\n+//   new_indices = [ 2 * 12 + 3, 4 * 12 + 1, 0 * 12 + 3 ] = [27, 49, 3]\n+//\n+// Ex2:\n+//   dims_to_flatten = [1]\n+//   new_indices = [ 3, 1, 3 ]  # uncoalesced\n+inline LongTensor flatten_indices_by_dims(const LongTensor& indices, const IntList& sizes, const IntList& dims_to_flatten){", "path": "aten/src/ATen/SparseTensorUtils.h", "position": 24, "original_position": 24, "commit_id": "f3db2514189f34fbdf9ea48fbebeacd8fa711b7c", "original_commit_id": "cf0b6dd308faac8f66f5a8ace4fec04b9bee6bc6", "user": {"login": "weiyangfb", "id": 38509346, "node_id": "MDQ6VXNlcjM4NTA5MzQ2", "avatar_url": "https://avatars1.githubusercontent.com/u/38509346?v=4", "gravatar_id": "", "url": "https://api.github.com/users/weiyangfb", "html_url": "https://github.com/weiyangfb", "followers_url": "https://api.github.com/users/weiyangfb/followers", "following_url": "https://api.github.com/users/weiyangfb/following{/other_user}", "gists_url": "https://api.github.com/users/weiyangfb/gists{/gist_id}", "starred_url": "https://api.github.com/users/weiyangfb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/weiyangfb/subscriptions", "organizations_url": "https://api.github.com/users/weiyangfb/orgs", "repos_url": "https://api.github.com/users/weiyangfb/repos", "events_url": "https://api.github.com/users/weiyangfb/events{/privacy}", "received_events_url": "https://api.github.com/users/weiyangfb/received_events", "type": "User", "site_admin": false}, "body": "`Ex2` shows when flatten works on `dims_to_flatten = [1]` instead of `[0, 1]` as in `Ex1`", "created_at": "2018-11-20T18:27:23Z", "updated_at": "2018-11-23T15:55:14Z", "html_url": "https://github.com/pytorch/pytorch/pull/12430#discussion_r235118670", "pull_request_url": "https://api.github.com/repos/pytorch/pytorch/pulls/12430", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/235118670"}, "html": {"href": "https://github.com/pytorch/pytorch/pull/12430#discussion_r235118670"}, "pull_request": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/12430"}}, "body_html": "<p><code>Ex2</code> shows when flatten works on <code>dims_to_flatten = [1]</code> instead of <code>[0, 1]</code> as in <code>Ex1</code></p>", "body_text": "Ex2 shows when flatten works on dims_to_flatten = [1] instead of [0, 1] as in Ex1", "in_reply_to_id": 234885539}