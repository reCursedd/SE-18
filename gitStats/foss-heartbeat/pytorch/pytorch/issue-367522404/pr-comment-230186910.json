{"url": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/230186910", "pull_request_review_id": 170869335, "id": 230186910, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIzMDE4NjkxMA==", "diff_hunk": "@@ -799,4 +800,241 @@ Tensor sspaddmm(const Tensor& self, const Tensor& mat1, const Tensor& mat2,\n   return result;\n }\n \n+// --------------------------------------------------------------------\n+// sparse.sum()\n+// --------------------------------------------------------------------\n+Tensor _sparse_sum(const SparseTensor& input) {\n+  return input.values().sum();\n+}\n+\n+Tensor _sparse_sum(const SparseTensor& input, ScalarType dtype) {\n+  return at::_sparse_sum(input.to(dtype));\n+}\n+\n+Tensor _sparse_sum(const SparseTensor& input, IntList dims_to_sum) {\n+  return at::_sparse_sum(input, dims_to_sum, false);\n+}\n+\n+Tensor _sparse_sum(const SparseTensor& input, IntList dims_to_sum, ScalarType dtype) {\n+  return at::_sparse_sum(input.to(dtype), dims_to_sum, false);\n+}\n+\n+Tensor _sparse_sum(const SparseTensor& input, IntList dims_to_sum, bool keepdim) {\n+\n+  AT_CHECK(input.is_coalesced(), \"To support autograd, input SparseTensor has to be coalesced.\");", "path": "aten/src/ATen/native/sparse/SparseTensorMath.cpp", "position": null, "original_position": 33, "commit_id": "f3db2514189f34fbdf9ea48fbebeacd8fa711b7c", "original_commit_id": "8399bdf6b12eb79a790ffcd3f35c8a47252662dc", "user": {"login": "weiyangfb", "id": 38509346, "node_id": "MDQ6VXNlcjM4NTA5MzQ2", "avatar_url": "https://avatars1.githubusercontent.com/u/38509346?v=4", "gravatar_id": "", "url": "https://api.github.com/users/weiyangfb", "html_url": "https://github.com/weiyangfb", "followers_url": "https://api.github.com/users/weiyangfb/followers", "following_url": "https://api.github.com/users/weiyangfb/following{/other_user}", "gists_url": "https://api.github.com/users/weiyangfb/gists{/gist_id}", "starred_url": "https://api.github.com/users/weiyangfb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/weiyangfb/subscriptions", "organizations_url": "https://api.github.com/users/weiyangfb/orgs", "repos_url": "https://api.github.com/users/weiyangfb/repos", "events_url": "https://api.github.com/users/weiyangfb/events{/privacy}", "received_events_url": "https://api.github.com/users/weiyangfb/received_events", "type": "User", "site_admin": false}, "body": "@ezyang Yeah, totally agreed! Sorry about the wordy. And yes, we could support non-coalesced case, but just not there yet. I will change the message. \r\n\r\n@SsnL You mean to mutate the input tensor? Is it legitimate to do that? I thought for the case of  `contiguous` it is because backwards can handle for non-contiguous inputs.", "created_at": "2018-11-01T20:30:27Z", "updated_at": "2018-11-23T15:54:05Z", "html_url": "https://github.com/pytorch/pytorch/pull/12430#discussion_r230186910", "pull_request_url": "https://api.github.com/repos/pytorch/pytorch/pulls/12430", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/230186910"}, "html": {"href": "https://github.com/pytorch/pytorch/pull/12430#discussion_r230186910"}, "pull_request": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/12430"}}, "body_html": "<p><a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=13564\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/ezyang\">@ezyang</a> Yeah, totally agreed! Sorry about the wordy. And yes, we could support non-coalesced case, but just not there yet. I will change the message.</p>\n<p><a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=5674597\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/SsnL\">@SsnL</a> You mean to mutate the input tensor? Is it legitimate to do that? I thought for the case of  <code>contiguous</code> it is because backwards can handle for non-contiguous inputs.</p>", "body_text": "@ezyang Yeah, totally agreed! Sorry about the wordy. And yes, we could support non-coalesced case, but just not there yet. I will change the message.\n@SsnL You mean to mutate the input tensor? Is it legitimate to do that? I thought for the case of  contiguous it is because backwards can handle for non-contiguous inputs.", "in_reply_to_id": 230137689}