{"url": "https://api.github.com/repos/pytorch/pytorch/issues/comments/428339766", "html_url": "https://github.com/pytorch/pytorch/pull/12430#issuecomment-428339766", "issue_url": "https://api.github.com/repos/pytorch/pytorch/issues/12430", "id": 428339766, "node_id": "MDEyOklzc3VlQ29tbWVudDQyODMzOTc2Ng==", "user": {"login": "weiyangfb", "id": 38509346, "node_id": "MDQ6VXNlcjM4NTA5MzQ2", "avatar_url": "https://avatars1.githubusercontent.com/u/38509346?v=4", "gravatar_id": "", "url": "https://api.github.com/users/weiyangfb", "html_url": "https://github.com/weiyangfb", "followers_url": "https://api.github.com/users/weiyangfb/followers", "following_url": "https://api.github.com/users/weiyangfb/following{/other_user}", "gists_url": "https://api.github.com/users/weiyangfb/gists{/gist_id}", "starred_url": "https://api.github.com/users/weiyangfb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/weiyangfb/subscriptions", "organizations_url": "https://api.github.com/users/weiyangfb/orgs", "repos_url": "https://api.github.com/users/weiyangfb/repos", "events_url": "https://api.github.com/users/weiyangfb/events{/privacy}", "received_events_url": "https://api.github.com/users/weiyangfb/received_events", "type": "User", "site_admin": false}, "created_at": "2018-10-09T20:29:27Z", "updated_at": "2018-10-09T20:29:27Z", "author_association": "CONTRIBUTOR", "body_html": "<p><a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=4583066\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/apaszke\">@apaszke</a> It is for the sake of autograd support. Ops prefixed with <code>sparse_</code> will have autograd support with gradients zeroed out at zero input locations during backward. But yes, I can also provide <code>sum(SparseTensor)</code> without backward.</p>", "body_text": "@apaszke It is for the sake of autograd support. Ops prefixed with sparse_ will have autograd support with gradients zeroed out at zero input locations during backward. But yes, I can also provide sum(SparseTensor) without backward.", "body": "@apaszke It is for the sake of autograd support. Ops prefixed with `sparse_` will have autograd support with gradients zeroed out at zero input locations during backward. But yes, I can also provide `sum(SparseTensor)` without backward."}