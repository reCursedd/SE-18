{"url": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/234898247", "pull_request_review_id": 176617477, "id": 234898247, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIzNDg5ODI0Nw==", "diff_hunk": "@@ -883,6 +883,59 @@ def test_shape(sparse_dims, nnz, with_size):\n         test_shape(4, 10, [100, 100, 100, 5, 5, 5, 0])\n         test_shape(4, 0, [0, 0, 100, 5, 5, 5, 0])\n \n+    @skipIfRocm\n+    def test_sparse_sum(self):\n+\n+        def run_tests(S, td=None, k=False):\n+            D = S.to_dense().detach().requires_grad_(True)\n+            mask = (D == 0)\n+            if td is None:\n+                S_sum = torch.sparse.sum(S)\n+                D_sum = D.sum()\n+                self.assertEqual(S_sum, D_sum)\n+                S_sum.backward()\n+                D_sum.backward()\n+                D_grad = D.grad.masked_fill_(mask, 0)\n+                self.assertEqual(S.grad.to_dense(), D_grad)\n+            else:\n+                S_sum = torch.sparse.sum(S, td, k)\n+                D_sum = D.sum(td, k)\n+                self.assertEqual(S_sum.to_dense() if S_sum.is_sparse else S_sum, D_sum)\n+                S_sum.backward(S_sum.detach())\n+                S_grad = S.grad\n+                data = S_sum.to_dense().detach() if S_sum.is_sparse else S_sum.detach()\n+                D_sum.backward(data)\n+                D_grad = D.grad.masked_fill_(mask, 0)\n+                S_grad_dense = S_grad.to_dense() if S_grad.is_sparse else S_grad\n+                self.assertEqual(S_grad_dense, D_grad)\n+\n+        nnz = 10", "path": "test/test_sparse.py", "position": 30, "original_position": 30, "commit_id": "f3db2514189f34fbdf9ea48fbebeacd8fa711b7c", "original_commit_id": "cf0b6dd308faac8f66f5a8ace4fec04b9bee6bc6", "user": {"login": "soumith", "id": 1310570, "node_id": "MDQ6VXNlcjEzMTA1NzA=", "avatar_url": "https://avatars0.githubusercontent.com/u/1310570?v=4", "gravatar_id": "", "url": "https://api.github.com/users/soumith", "html_url": "https://github.com/soumith", "followers_url": "https://api.github.com/users/soumith/followers", "following_url": "https://api.github.com/users/soumith/following{/other_user}", "gists_url": "https://api.github.com/users/soumith/gists{/gist_id}", "starred_url": "https://api.github.com/users/soumith/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/soumith/subscriptions", "organizations_url": "https://api.github.com/users/soumith/orgs", "repos_url": "https://api.github.com/users/soumith/repos", "events_url": "https://api.github.com/users/soumith/events{/privacy}", "received_events_url": "https://api.github.com/users/soumith/received_events", "type": "User", "site_admin": false}, "body": "can you also add tests for some corner-cases -- such as empty tensor", "created_at": "2018-11-20T07:55:24Z", "updated_at": "2018-11-23T15:55:13Z", "html_url": "https://github.com/pytorch/pytorch/pull/12430#discussion_r234898247", "pull_request_url": "https://api.github.com/repos/pytorch/pytorch/pulls/12430", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/234898247"}, "html": {"href": "https://github.com/pytorch/pytorch/pull/12430#discussion_r234898247"}, "pull_request": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/12430"}}, "body_html": "<p>can you also add tests for some corner-cases -- such as empty tensor</p>", "body_text": "can you also add tests for some corner-cases -- such as empty tensor"}