{"url": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/230143868", "pull_request_review_id": 170814244, "id": 230143868, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIzMDE0Mzg2OA==", "diff_hunk": "@@ -823,6 +823,69 @@ def test_shape(sparse_dims, nnz, with_size):\n         test_shape(4, 10, [100, 100, 100, 5, 5, 5, 0])\n         test_shape(4, 0, [0, 0, 100, 5, 5, 5, 0])\n \n+    @skipIfRocm\n+    def test_sparse_sum(self):\n+        nnz = 10\n+        sparse_dims = 2\n+        with_size = [5, 5, 3, 4]\n+        S, _, _ = self._gen_sparse(sparse_dims, nnz, with_size)\n+        S = S.coalesce()\n+        D = S.to_dense()\n+\n+        self.assertEqual(torch.sparse.sum(S), D.sum())\n+\n+        # raise at SparseTensor.sum()\n+        self.assertRaises(RuntimeError, lambda: S.sum())\n+\n+        test_dims = []\n+        for i in range(1, 5):\n+            test_dims += itertools.combinations(range(len(with_size)), i)\n+\n+        keepdim = [False, True]\n+\n+        for td in test_dims:\n+            for k in keepdim:\n+                S_copy = S.clone()\n+                S_sum = torch.sparse.sum(S, td, k)\n+                D_sum = D.sum(td, k)\n+                self.assertEqual(S_sum.to_dense() if S_sum.is_sparse else S_sum, D_sum)\n+                self.assertEqual(S_copy.to_dense(), S.to_dense())  # ensure S is not changed\n+\n+        # raise at dims out of range\n+        self.assertRaises(RuntimeError, lambda: torch.sparse.sum(S, 5))\n+\n+        # test backward", "path": "test/test_sparse.py", "position": null, "original_position": 35, "commit_id": "f3db2514189f34fbdf9ea48fbebeacd8fa711b7c", "original_commit_id": "8399bdf6b12eb79a790ffcd3f35c8a47252662dc", "user": {"login": "ezyang", "id": 13564, "node_id": "MDQ6VXNlcjEzNTY0", "avatar_url": "https://avatars0.githubusercontent.com/u/13564?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ezyang", "html_url": "https://github.com/ezyang", "followers_url": "https://api.github.com/users/ezyang/followers", "following_url": "https://api.github.com/users/ezyang/following{/other_user}", "gists_url": "https://api.github.com/users/ezyang/gists{/gist_id}", "starred_url": "https://api.github.com/users/ezyang/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ezyang/subscriptions", "organizations_url": "https://api.github.com/users/ezyang/orgs", "repos_url": "https://api.github.com/users/ezyang/repos", "events_url": "https://api.github.com/users/ezyang/events{/privacy}", "received_events_url": "https://api.github.com/users/ezyang/received_events", "type": "User", "site_admin": false}, "body": "You are kind of trailblazing here, since historically we didn't have any backwards for sparse. It would be really good to get gradcheck working in the sparse case. Doesn't have to be this PR, but gradcheck tests will give much more assurance than manually testing at a few points. (In this case, sum is pretty simple to check, but this won't always be the case.)", "created_at": "2018-11-01T18:13:53Z", "updated_at": "2018-11-23T15:54:02Z", "html_url": "https://github.com/pytorch/pytorch/pull/12430#discussion_r230143868", "pull_request_url": "https://api.github.com/repos/pytorch/pytorch/pulls/12430", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/230143868"}, "html": {"href": "https://github.com/pytorch/pytorch/pull/12430#discussion_r230143868"}, "pull_request": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/12430"}}, "body_html": "<p>You are kind of trailblazing here, since historically we didn't have any backwards for sparse. It would be really good to get gradcheck working in the sparse case. Doesn't have to be this PR, but gradcheck tests will give much more assurance than manually testing at a few points. (In this case, sum is pretty simple to check, but this won't always be the case.)</p>", "body_text": "You are kind of trailblazing here, since historically we didn't have any backwards for sparse. It would be really good to get gradcheck working in the sparse case. Doesn't have to be this PR, but gradcheck tests will give much more assurance than manually testing at a few points. (In this case, sum is pretty simple to check, but this won't always be the case.)"}