{"url": "https://api.github.com/repos/pytorch/pytorch/issues/8498", "repository_url": "https://api.github.com/repos/pytorch/pytorch", "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/8498/labels{/name}", "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/8498/comments", "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/8498/events", "html_url": "https://github.com/pytorch/pytorch/issues/8498", "id": 332529852, "node_id": "MDU6SXNzdWUzMzI1Mjk4NTI=", "number": 8498, "title": "[JIT] Expand number of sizes provided (0) must be greater or equal to the number of dimensions in the tensor (1)", "user": {"login": "jamesr66a", "id": 4685384, "node_id": "MDQ6VXNlcjQ2ODUzODQ=", "avatar_url": "https://avatars2.githubusercontent.com/u/4685384?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jamesr66a", "html_url": "https://github.com/jamesr66a", "followers_url": "https://api.github.com/users/jamesr66a/followers", "following_url": "https://api.github.com/users/jamesr66a/following{/other_user}", "gists_url": "https://api.github.com/users/jamesr66a/gists{/gist_id}", "starred_url": "https://api.github.com/users/jamesr66a/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jamesr66a/subscriptions", "organizations_url": "https://api.github.com/users/jamesr66a/orgs", "repos_url": "https://api.github.com/users/jamesr66a/repos", "events_url": "https://api.github.com/users/jamesr66a/events{/privacy}", "received_events_url": "https://api.github.com/users/jamesr66a/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 679953983, "node_id": "MDU6TGFiZWw2Nzk5NTM5ODM=", "url": "https://api.github.com/repos/pytorch/pytorch/labels/jit", "name": "jit", "color": "c5def5", "default": false}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2018-06-14T19:15:45Z", "updated_at": "2018-06-15T03:51:35Z", "closed_at": "2018-06-15T03:51:35Z", "author_association": "CONTRIBUTOR", "body_html": "<p>These operator-level tests fail with an issue about passed-in sizes to <code>expand</code>:</p>\n<p>Example error</p>\n<pre><code>======================================================================\nERROR: test___radd___scalar_constant (__main__.TestAutogradGenerated)\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"test/test_autograd.py\", line 3665, in do_test\n    check(name)\n  File \"test/test_autograd.py\", line 3587, in check\n    check_against_reference(self, create_traced_fn(fn), fn, (self_variable,) + args_variable)\n  File \"test/test_autograd.py\", line 3506, in check_against_reference\n    outputs_test = func(*recording_inputs)\n  File \"test/test_autograd.py\", line 3446, in traced_fn\n    return traced(*inputs_tensors)\nRuntimeError: expand(CPUDoubleType{[1]}, size=[]): the number of sizes provided (0) must be greater or equal to the number of dimensions in the tensor (1)\n\n</code></pre>\n<p>Failing tests:</p>\n<ul>\n<li><code>test___radd___scalar_constant</code></li>\n<li><code>test___rmul___scalar_constant</code></li>\n<li><code>test___rsub___scalar_constant</code></li>\n<li><code>test_add_scalar</code></li>\n<li><code>test_add_scalar_constant</code></li>\n<li><code>test_expand_scalar_to_scalar</code></li>\n<li><code>test_mul_scalar</code></li>\n<li><code>test_mul_scalar_constant</code></li>\n<li><code>test_sigmoid_scalar</code></li>\n<li><code>test_sub_scalar_constant</code></li>\n<li><code>test_tanh_scalar</code></li>\n</ul>", "body_text": "These operator-level tests fail with an issue about passed-in sizes to expand:\nExample error\n======================================================================\nERROR: test___radd___scalar_constant (__main__.TestAutogradGenerated)\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"test/test_autograd.py\", line 3665, in do_test\n    check(name)\n  File \"test/test_autograd.py\", line 3587, in check\n    check_against_reference(self, create_traced_fn(fn), fn, (self_variable,) + args_variable)\n  File \"test/test_autograd.py\", line 3506, in check_against_reference\n    outputs_test = func(*recording_inputs)\n  File \"test/test_autograd.py\", line 3446, in traced_fn\n    return traced(*inputs_tensors)\nRuntimeError: expand(CPUDoubleType{[1]}, size=[]): the number of sizes provided (0) must be greater or equal to the number of dimensions in the tensor (1)\n\n\nFailing tests:\n\ntest___radd___scalar_constant\ntest___rmul___scalar_constant\ntest___rsub___scalar_constant\ntest_add_scalar\ntest_add_scalar_constant\ntest_expand_scalar_to_scalar\ntest_mul_scalar\ntest_mul_scalar_constant\ntest_sigmoid_scalar\ntest_sub_scalar_constant\ntest_tanh_scalar", "body": "These operator-level tests fail with an issue about passed-in sizes to `expand`:\r\n\r\nExample error\r\n```\r\n======================================================================\r\nERROR: test___radd___scalar_constant (__main__.TestAutogradGenerated)\r\n----------------------------------------------------------------------\r\nTraceback (most recent call last):\r\n  File \"test/test_autograd.py\", line 3665, in do_test\r\n    check(name)\r\n  File \"test/test_autograd.py\", line 3587, in check\r\n    check_against_reference(self, create_traced_fn(fn), fn, (self_variable,) + args_variable)\r\n  File \"test/test_autograd.py\", line 3506, in check_against_reference\r\n    outputs_test = func(*recording_inputs)\r\n  File \"test/test_autograd.py\", line 3446, in traced_fn\r\n    return traced(*inputs_tensors)\r\nRuntimeError: expand(CPUDoubleType{[1]}, size=[]): the number of sizes provided (0) must be greater or equal to the number of dimensions in the tensor (1)\r\n\r\n```\r\n\r\nFailing tests:\r\n- `test___radd___scalar_constant`\r\n- `test___rmul___scalar_constant`\r\n- `test___rsub___scalar_constant`\r\n- `test_add_scalar`\r\n- `test_add_scalar_constant`\r\n- `test_expand_scalar_to_scalar`\r\n- `test_mul_scalar`\r\n- `test_mul_scalar_constant`\r\n- `test_sigmoid_scalar`\r\n- `test_sub_scalar_constant`\r\n- `test_tanh_scalar`\r\n"}