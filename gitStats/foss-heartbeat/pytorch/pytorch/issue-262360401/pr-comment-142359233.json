{"url": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/142359233", "pull_request_review_id": 66707093, "id": 142359233, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE0MjM1OTIzMw==", "diff_hunk": "@@ -4231,6 +4231,83 @@ def test_numpy_index(self):\n             self.assertFalse(isinstance(idx, int))\n             self.assertEqual(x[idx], x[int(idx)])\n \n+    @unittest.skipIf(not TEST_NUMPY, \"Numpy not found\")\n+    def test_numpy_array_interface(self):\n+        types = [\n+            'torch.DoubleTensor',\n+            'torch.FloatTensor',\n+            'torch.LongTensor',\n+            'torch.IntTensor',\n+            'torch.ShortTensor',\n+            'torch.ByteTensor',\n+        ]\n+        dtypes = [\n+            np.float64,\n+            np.float32,\n+            np.int64,\n+            np.int32,\n+            np.int16,\n+            np.uint8,\n+        ]\n+        for tp, dtype in zip(types, dtypes):\n+            if np.dtype(dtype).kind == 'u':\n+                x = torch.Tensor([1, 2, 3, 4]).type(tp)\n+                array = np.array([1, 2, 3, 4], dtype=dtype)\n+            else:\n+                x = torch.Tensor([1, -2, 3, -4]).type(tp)\n+                array = np.array([1, -2, 3, -4], dtype=dtype)\n+\n+            # Test __array__ w/o dtype argument\n+            asarray = np.asarray(x)\n+            self.assertIsInstance(asarray, np.ndarray)\n+            self.assertEqual(asarray.dtype, dtype)\n+            for i in range(len(x)):\n+                self.assertEqual(asarray[i], x[i])\n+\n+            # Test __array_wrap__, same dtype\n+            abs_x = np.abs(x)\n+            abs_array = np.abs(array)\n+            self.assertIsInstance(abs_x, getattr(torch, tp.split('.')[1]))", "path": "test/test_torch.py", "position": null, "original_position": 40, "commit_id": "d889a956c4219da70ba7b592e91adec75f054742", "original_commit_id": "44dfe854c3b7d177064f9833a4dc40cb70c81319", "user": {"login": "apaszke", "id": 4583066, "node_id": "MDQ6VXNlcjQ1ODMwNjY=", "avatar_url": "https://avatars3.githubusercontent.com/u/4583066?v=4", "gravatar_id": "", "url": "https://api.github.com/users/apaszke", "html_url": "https://github.com/apaszke", "followers_url": "https://api.github.com/users/apaszke/followers", "following_url": "https://api.github.com/users/apaszke/following{/other_user}", "gists_url": "https://api.github.com/users/apaszke/gists{/gist_id}", "starred_url": "https://api.github.com/users/apaszke/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/apaszke/subscriptions", "organizations_url": "https://api.github.com/users/apaszke/orgs", "repos_url": "https://api.github.com/users/apaszke/repos", "events_url": "https://api.github.com/users/apaszke/events{/privacy}", "received_events_url": "https://api.github.com/users/apaszke/received_events", "type": "User", "site_admin": false}, "body": "you wouldn't need this `getattr` if you kept the tensor types in a list", "created_at": "2017-10-03T09:58:48Z", "updated_at": "2018-11-23T15:34:56Z", "html_url": "https://github.com/pytorch/pytorch/pull/2945#discussion_r142359233", "pull_request_url": "https://api.github.com/repos/pytorch/pytorch/pulls/2945", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/142359233"}, "html": {"href": "https://github.com/pytorch/pytorch/pull/2945#discussion_r142359233"}, "pull_request": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/2945"}}, "body_html": "<p>you wouldn't need this <code>getattr</code> if you kept the tensor types in a list</p>", "body_text": "you wouldn't need this getattr if you kept the tensor types in a list"}