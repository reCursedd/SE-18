{"url": "https://api.github.com/repos/pytorch/pytorch/issues/2179", "repository_url": "https://api.github.com/repos/pytorch/pytorch", "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/2179/labels{/name}", "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/2179/comments", "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/2179/events", "html_url": "https://github.com/pytorch/pytorch/pull/2179", "id": 244681283, "node_id": "MDExOlB1bGxSZXF1ZXN0MTMxNzgzMzA5", "number": 2179, "title": "Improve memory usage of cuDNN RNN modules", "user": {"login": "apaszke", "id": 4583066, "node_id": "MDQ6VXNlcjQ1ODMwNjY=", "avatar_url": "https://avatars3.githubusercontent.com/u/4583066?v=4", "gravatar_id": "", "url": "https://api.github.com/users/apaszke", "html_url": "https://github.com/apaszke", "followers_url": "https://api.github.com/users/apaszke/followers", "following_url": "https://api.github.com/users/apaszke/following{/other_user}", "gists_url": "https://api.github.com/users/apaszke/gists{/gist_id}", "starred_url": "https://api.github.com/users/apaszke/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/apaszke/subscriptions", "organizations_url": "https://api.github.com/users/apaszke/orgs", "repos_url": "https://api.github.com/users/apaszke/repos", "events_url": "https://api.github.com/users/apaszke/events{/privacy}", "received_events_url": "https://api.github.com/users/apaszke/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2017-07-21T14:13:37Z", "updated_at": "2018-11-23T15:34:12Z", "closed_at": "2017-07-24T22:30:18Z", "author_association": "MEMBER", "pull_request": {"url": "https://api.github.com/repos/pytorch/pytorch/pulls/2179", "html_url": "https://github.com/pytorch/pytorch/pull/2179", "diff_url": "https://github.com/pytorch/pytorch/pull/2179.diff", "patch_url": "https://github.com/pytorch/pytorch/pull/2179.patch"}, "body_html": "<p>This should solve <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load issue title\" data-id=\"211777412\" data-permission-text=\"Issue title is private\" data-url=\"https://github.com/pytorch/pytorch/issues/914\" data-hovercard-type=\"issue\" data-hovercard-url=\"/pytorch/pytorch/issues/914/hovercard\" href=\"https://github.com/pytorch/pytorch/issues/914\">#914</a> in most cases. Weights of RNN modules are now allocated in the default cuDNN format (wasting some memory in no-bias case), and type/device casts preserve it. In-place modifications of data are fine, and if someone resets the parameter tensors to point to different memory, a warning will be raised, and the code will fall back to old behaviour.</p>", "body_text": "This should solve #914 in most cases. Weights of RNN modules are now allocated in the default cuDNN format (wasting some memory in no-bias case), and type/device casts preserve it. In-place modifications of data are fine, and if someone resets the parameter tensors to point to different memory, a warning will be raised, and the code will fall back to old behaviour.", "body": "This should solve #914 in most cases. Weights of RNN modules are now allocated in the default cuDNN format (wasting some memory in no-bias case), and type/device casts preserve it. In-place modifications of data are fine, and if someone resets the parameter tensors to point to different memory, a warning will be raised, and the code will fall back to old behaviour."}