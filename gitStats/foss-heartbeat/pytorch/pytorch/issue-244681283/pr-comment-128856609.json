{"url": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/128856609", "pull_request_review_id": 51580338, "id": 128856609, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEyODg1NjYwOQ==", "diff_hunk": "@@ -86,13 +113,49 @@ def forward(self, input, hx=None):\n             train=self.training,\n             bidirectional=self.bidirectional,\n             batch_sizes=batch_sizes,\n-            dropout_state=self.dropout_state\n+            dropout_state=self.dropout_state,\n+            flat_weight=flat_weight\n         )\n         output, hidden = func(input, self.all_weights, hx)\n         if is_packed:\n             output = PackedSequence(output, batch_sizes)\n         return output, hidden\n \n+    def cuda(self, device_id=None):\n+        \"\"\"Moves all model parameters and buffers to the GPU.", "path": "torch/nn/modules/rnn.py", "position": null, "original_position": 71, "commit_id": "d9d0a56013fb890728af637963fedda546d952af", "original_commit_id": "05bbe1ea487354cd48947c1c14bec07323cd5125", "user": {"login": "ngimel", "id": 15841449, "node_id": "MDQ6VXNlcjE1ODQxNDQ5", "avatar_url": "https://avatars3.githubusercontent.com/u/15841449?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ngimel", "html_url": "https://github.com/ngimel", "followers_url": "https://api.github.com/users/ngimel/followers", "following_url": "https://api.github.com/users/ngimel/following{/other_user}", "gists_url": "https://api.github.com/users/ngimel/gists{/gist_id}", "starred_url": "https://api.github.com/users/ngimel/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ngimel/subscriptions", "organizations_url": "https://api.github.com/users/ngimel/orgs", "repos_url": "https://api.github.com/users/ngimel/repos", "events_url": "https://api.github.com/users/ngimel/events{/privacy}", "received_events_url": "https://api.github.com/users/ngimel/received_events", "type": "User", "site_admin": false}, "body": "All the .type() functions won't work if RNN is in a module. In this case, _apply would be called for the top level module, which in turn will call _apply on RNN, and never call .type() on RNN directly. Since RNN does not override _apply, the functions below will never be called. ", "created_at": "2017-07-21T20:39:32Z", "updated_at": "2018-11-23T15:34:12Z", "html_url": "https://github.com/pytorch/pytorch/pull/2179#discussion_r128856609", "pull_request_url": "https://api.github.com/repos/pytorch/pytorch/pulls/2179", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/128856609"}, "html": {"href": "https://github.com/pytorch/pytorch/pull/2179#discussion_r128856609"}, "pull_request": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/2179"}}, "body_html": "<p>All the .type() functions won't work if RNN is in a module. In this case, _apply would be called for the top level module, which in turn will call _apply on RNN, and never call .type() on RNN directly. Since RNN does not override _apply, the functions below will never be called.</p>", "body_text": "All the .type() functions won't work if RNN is in a module. In this case, _apply would be called for the top level module, which in turn will call _apply on RNN, and never call .type() on RNN directly. Since RNN does not override _apply, the functions below will never be called."}