{"url": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/161093860", "pull_request_review_id": 88327518, "id": 161093860, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE2MTA5Mzg2MA==", "diff_hunk": "@@ -497,6 +499,41 @@ def reform_weights(g, w, n, intervals):\n     return g.op('Concat', *slices, axis_i=0)\n \n \n+def Elman_RNN_symbolic_builder(nonlinearity, input_size, hidden_size, num_layers, batch_first, dropout, bidirectional, **kwargs):\n+    if batch_first:\n+        return _unimplemented(\"RNN\", \"batch_first\")\n+    if dropout:\n+        return _unimplemented(\"RNN\", \"dropout\")\n+    if bidirectional:\n+        return _unimplemented(\"RNN\", \"bidirectional\")\n+\n+    def symbolic(g, input, all_weights, h0, **fkwargs):\n+        # TODO elide this argument to increase parametricity. This is\n+        # nontrivial because we provide subsequent optional arguments,\n+        # and ONNX does not have a mechanism for skipping non-trailing\n+        # optional arguments.\n+        sequence_len, batch_size = input.type().sizes()[0:2]\n+        sequence_lens = g.op('Constant', value_t=torch.IntTensor(batch_size).fill_(sequence_len))", "path": "torch/onnx/symbolic.py", "position": 28, "original_position": 27, "commit_id": "f00f342136c4a33606084e6bb7f38b3a63546a54", "original_commit_id": "672f1ba3b68ef6dfdb067f6fbf8b86b659fce8fc", "user": {"login": "dzhulgakov", "id": 17890620, "node_id": "MDQ6VXNlcjE3ODkwNjIw", "avatar_url": "https://avatars2.githubusercontent.com/u/17890620?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dzhulgakov", "html_url": "https://github.com/dzhulgakov", "followers_url": "https://api.github.com/users/dzhulgakov/followers", "following_url": "https://api.github.com/users/dzhulgakov/following{/other_user}", "gists_url": "https://api.github.com/users/dzhulgakov/gists{/gist_id}", "starred_url": "https://api.github.com/users/dzhulgakov/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dzhulgakov/subscriptions", "organizations_url": "https://api.github.com/users/dzhulgakov/orgs", "repos_url": "https://api.github.com/users/dzhulgakov/repos", "events_url": "https://api.github.com/users/dzhulgakov/events{/privacy}", "received_events_url": "https://api.github.com/users/dzhulgakov/received_events", "type": "User", "site_admin": false}, "body": "btw, we should fix this part of export as well - model should definitely work with different batch sizes (not in this diff of course)", "created_at": "2018-01-11T22:26:37Z", "updated_at": "2018-11-23T15:38:04Z", "html_url": "https://github.com/pytorch/pytorch/pull/4613#discussion_r161093860", "pull_request_url": "https://api.github.com/repos/pytorch/pytorch/pulls/4613", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/161093860"}, "html": {"href": "https://github.com/pytorch/pytorch/pull/4613#discussion_r161093860"}, "pull_request": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/4613"}}, "body_html": "<p>btw, we should fix this part of export as well - model should definitely work with different batch sizes (not in this diff of course)</p>", "body_text": "btw, we should fix this part of export as well - model should definitely work with different batch sizes (not in this diff of course)"}