{"url": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/122324305", "pull_request_review_id": 44431314, "id": 122324305, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEyMjMyNDMwNQ==", "diff_hunk": "@@ -0,0 +1,56 @@\n+#pragma once\n+\n+#include <Python.h>\n+\n+class PyTuple {\n+private:\n+  PyObject* tuple;\n+\n+public:\n+  PyTuple(PyObject* tuple) : tuple(tuple) {}\n+\n+  class proxy {\n+    PyObject* tuple;\n+    Py_ssize_t index;\n+  public:\n+    proxy(PyObject *tuple, Py_ssize_t index) : tuple(tuple), index(index) {}\n+    operator PyObject*() const { return PyTuple_GET_ITEM(tuple, index); }\n+    void operator=(PyObject* o) {\n+      PyTuple_SET_ITEM(tuple, index, o);\n+    }\n+  };\n+\n+  class iterator {\n+    PyObject* tuple;\n+    Py_ssize_t index;\n+  public:\n+    using difference_type = Py_ssize_t;\n+    using value_type = proxy;\n+    using pointer = proxy*;\n+    using reference = proxy&;\n+    using iterator_category = std::forward_iterator_tag;\n+\n+    iterator(PyObject *tuple, Py_ssize_t index) : tuple(tuple), index(index) {}\n+\n+    proxy operator*() const { return proxy(tuple, index); }\n+    iterator& operator++() { index++; return *this; }\n+    iterator operator++(int) { auto r = *this; ++(*this); return r; }\n+    bool operator==(iterator other) const { return tuple == other.tuple && index == other.index; }", "path": "torch/csrc/utils/python_tuples.h", "position": null, "original_position": 38, "commit_id": "44aacf730f0dd790657257a7a5ea23fe7cf648ee", "original_commit_id": "0a1c901e80e7ad7f4cb340047d4a2cc271a08efc", "user": {"login": "apaszke", "id": 4583066, "node_id": "MDQ6VXNlcjQ1ODMwNjY=", "avatar_url": "https://avatars3.githubusercontent.com/u/4583066?v=4", "gravatar_id": "", "url": "https://api.github.com/users/apaszke", "html_url": "https://github.com/apaszke", "followers_url": "https://api.github.com/users/apaszke/followers", "following_url": "https://api.github.com/users/apaszke/following{/other_user}", "gists_url": "https://api.github.com/users/apaszke/gists{/gist_id}", "starred_url": "https://api.github.com/users/apaszke/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/apaszke/subscriptions", "organizations_url": "https://api.github.com/users/apaszke/orgs", "repos_url": "https://api.github.com/users/apaszke/repos", "events_url": "https://api.github.com/users/apaszke/events{/privacy}", "received_events_url": "https://api.github.com/users/apaszke/received_events", "type": "User", "site_admin": false}, "body": "I think you don't need to compare tuple ptrs (you can assert they're equal). C++ standard says that comparing iterators from different containers (in this case TupleProxies) is UB", "created_at": "2017-06-15T22:06:28Z", "updated_at": "2018-11-23T15:33:54Z", "html_url": "https://github.com/pytorch/pytorch/pull/1815#discussion_r122324305", "pull_request_url": "https://api.github.com/repos/pytorch/pytorch/pulls/1815", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/122324305"}, "html": {"href": "https://github.com/pytorch/pytorch/pull/1815#discussion_r122324305"}, "pull_request": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/1815"}}, "body_html": "<p>I think you don't need to compare tuple ptrs (you can assert they're equal). C++ standard says that comparing iterators from different containers (in this case TupleProxies) is UB</p>", "body_text": "I think you don't need to compare tuple ptrs (you can assert they're equal). C++ standard says that comparing iterators from different containers (in this case TupleProxies) is UB"}