{"url": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/124301989", "pull_request_review_id": 46578594, "id": 124301989, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEyNDMwMTk4OQ==", "diff_hunk": "@@ -0,0 +1,126 @@\n+#include \"torch/csrc/autograd/python_ir.h\"\n+#include \"torch/csrc/utils/python_strings.h\"\n+\n+using namespace torch::autograd;\n+\n+PyObject* THPNodeClass = nullptr;\n+\n+PyObject* THPNode_Wrap(const std::shared_ptr<Node>& node)\n+{\n+  if (!node) {\n+    Py_RETURN_NONE;\n+  } else {\n+    auto type = (PyTypeObject*) THPNodeClass;\n+    THPNode* obj = (THPNode*)type->tp_alloc(type, 0);\n+    if (obj) {\n+      obj->cdata = node;\n+    }\n+    return (PyObject*) obj;\n+  }\n+}\n+\n+static int THPNode_traverse(THPNode *self, visitproc visit, void *arg)\n+{\n+  if (self->cdata) {\n+    if (auto fn = dynamic_cast<PyNode*>(self->cdata.get())) {\n+      Py_VISIT(fn->pyobj);\n+    }\n+  }\n+  return 0;\n+}\n+\n+static int THPNode_clear(THPNode *self)\n+{\n+  if (self->cdata) {\n+    if (auto fn = dynamic_cast<PyNode*>(self->cdata.get())) {\n+      fn->pyobj = nullptr;\n+    }\n+  }\n+  self->cdata.reset();\n+  return 0;\n+}\n+\n+static void THPNode_dealloc(THPNode* self)\n+{\n+  PyObject_GC_UnTrack(self);\n+  THPNode_clear(self);", "path": "torch/csrc/autograd/python_ir.cpp", "position": null, "original_position": 46, "commit_id": "44aacf730f0dd790657257a7a5ea23fe7cf648ee", "original_commit_id": "0a1c901e80e7ad7f4cb340047d4a2cc271a08efc", "user": {"login": "ezyang", "id": 13564, "node_id": "MDQ6VXNlcjEzNTY0", "avatar_url": "https://avatars0.githubusercontent.com/u/13564?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ezyang", "html_url": "https://github.com/ezyang", "followers_url": "https://api.github.com/users/ezyang/followers", "following_url": "https://api.github.com/users/ezyang/following{/other_user}", "gists_url": "https://api.github.com/users/ezyang/gists{/gist_id}", "starred_url": "https://api.github.com/users/ezyang/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ezyang/subscriptions", "organizations_url": "https://api.github.com/users/ezyang/orgs", "repos_url": "https://api.github.com/users/ezyang/repos", "events_url": "https://api.github.com/users/ezyang/events{/privacy}", "received_events_url": "https://api.github.com/users/ezyang/received_events", "type": "User", "site_admin": false}, "body": "@apaszke So, It looks like I cargo-culted this code from THPVariable_dealloc. But I guess indeed we should not have a clear here; the clear is necessary for THPVariable because there is only at most one Python object per Variable, but that invariant doesn't hold here.", "created_at": "2017-06-27T15:05:16Z", "updated_at": "2018-11-23T15:33:59Z", "html_url": "https://github.com/pytorch/pytorch/pull/1815#discussion_r124301989", "pull_request_url": "https://api.github.com/repos/pytorch/pytorch/pulls/1815", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/124301989"}, "html": {"href": "https://github.com/pytorch/pytorch/pull/1815#discussion_r124301989"}, "pull_request": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/1815"}}, "body_html": "<p><a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=4583066\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/apaszke\">@apaszke</a> So, It looks like I cargo-culted this code from THPVariable_dealloc. But I guess indeed we should not have a clear here; the clear is necessary for THPVariable because there is only at most one Python object per Variable, but that invariant doesn't hold here.</p>", "body_text": "@apaszke So, It looks like I cargo-culted this code from THPVariable_dealloc. But I guess indeed we should not have a clear here; the clear is necessary for THPVariable because there is only at most one Python object per Variable, but that invariant doesn't hold here.", "in_reply_to_id": 122602332}