{"url": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/186188151", "pull_request_review_id": 117727899, "id": 186188151, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4NjE4ODE1MQ==", "diff_hunk": "@@ -451,28 +451,30 @@ def max_pool3d(g, input, kernel_size, stride, padding, dilation, ceil_mode):\n     return r, None\n \n \n-def avg_pool2d(g, input, kernel_size, stride, padding, ceil_mode, count_include_pad):\n-    if ceil_mode:\n-        return _unimplemented(\"avg_pool2d\", \"ceil_mode\")\n-    if not stride:\n-        stride = kernel_size\n-    # TODO: What about count_include_pad?!\n-    return g.op(\"AveragePool\", input,\n-                kernel_shape_i=_pair(kernel_size),\n-                strides_i=_pair(stride),\n-                pads_i=_pair(padding) * 2)\n-\n-\n-def avg_pool3d(g, input, kernel_size, stride, padding, ceil_mode, count_include_pad):\n-    if ceil_mode:\n-        return _unimplemented(\"avg_pool3d\", \"ceil_mode\")\n-    if not stride:\n-        stride = kernel_size\n-    # TODO: What about count_include_pad?!\n-    return g.op(\"AveragePool\", input,\n-                kernel_shape_i=_triple(kernel_size),\n-                strides_i=_triple(stride),\n-                pads_i=_triple(padding) * 2)\n+def _avg_pool(name, tuple_fn):\n+    def symbolic_fn(g, input, kernel_size, stride, padding, ceil_mode, count_include_pad):\n+        if ceil_mode:\n+            return _unimplemented(\"avg_pool2d\", \"ceil_mode\")\n+        if not stride:\n+            stride = kernel_size\n+\n+        padding = tuple(tuple_fn(padding))\n+        if count_include_pad:\n+            input = g.op(\"Pad\", input,\n+                         pads_i=((0,) * 2 + padding) * 2,\n+                         mode_s='constant',\n+                         value_f=0.)\n+            padding = (0,) * len(padding)\n+\n+        return g.op(\"AveragePool\", input,\n+                    kernel_shape_i=tuple_fn(kernel_size),\n+                    strides_i=tuple_fn(stride),\n+                    pads_i=padding * 2)\n+    return symbolic_fn\n+\n+", "path": "torch/onnx/symbolic.py", "position": 47, "original_position": 47, "commit_id": "acdea50b6e9fafdd4445717c525bdf9aa6232292", "original_commit_id": "914c2ff66715f1e1d6837c291a24d82c5af08a50", "user": {"login": "bddppq", "id": 9300575, "node_id": "MDQ6VXNlcjkzMDA1NzU=", "avatar_url": "https://avatars2.githubusercontent.com/u/9300575?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bddppq", "html_url": "https://github.com/bddppq", "followers_url": "https://api.github.com/users/bddppq/followers", "following_url": "https://api.github.com/users/bddppq/following{/other_user}", "gists_url": "https://api.github.com/users/bddppq/gists{/gist_id}", "starred_url": "https://api.github.com/users/bddppq/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bddppq/subscriptions", "organizations_url": "https://api.github.com/users/bddppq/orgs", "repos_url": "https://api.github.com/users/bddppq/repos", "events_url": "https://api.github.com/users/bddppq/events{/privacy}", "received_events_url": "https://api.github.com/users/bddppq/received_events", "type": "User", "site_admin": false}, "body": "Done", "created_at": "2018-05-04T19:11:58Z", "updated_at": "2018-11-23T15:43:38Z", "html_url": "https://github.com/pytorch/pytorch/pull/7279#discussion_r186188151", "pull_request_url": "https://api.github.com/repos/pytorch/pytorch/pulls/7279", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/186188151"}, "html": {"href": "https://github.com/pytorch/pytorch/pull/7279#discussion_r186188151"}, "pull_request": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/7279"}}, "body_html": "<p>Done</p>", "body_text": "Done", "in_reply_to_id": 186185831}