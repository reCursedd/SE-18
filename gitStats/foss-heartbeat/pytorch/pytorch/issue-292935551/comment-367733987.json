{"url": "https://api.github.com/repos/pytorch/pytorch/issues/comments/367733987", "html_url": "https://github.com/pytorch/pytorch/issues/4946#issuecomment-367733987", "issue_url": "https://api.github.com/repos/pytorch/pytorch/issues/4946", "id": 367733987, "node_id": "MDEyOklzc3VlQ29tbWVudDM2NzczMzk4Nw==", "user": {"login": "varunagrawal", "id": 975964, "node_id": "MDQ6VXNlcjk3NTk2NA==", "avatar_url": "https://avatars2.githubusercontent.com/u/975964?v=4", "gravatar_id": "", "url": "https://api.github.com/users/varunagrawal", "html_url": "https://github.com/varunagrawal", "followers_url": "https://api.github.com/users/varunagrawal/followers", "following_url": "https://api.github.com/users/varunagrawal/following{/other_user}", "gists_url": "https://api.github.com/users/varunagrawal/gists{/gist_id}", "starred_url": "https://api.github.com/users/varunagrawal/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/varunagrawal/subscriptions", "organizations_url": "https://api.github.com/users/varunagrawal/orgs", "repos_url": "https://api.github.com/users/varunagrawal/repos", "events_url": "https://api.github.com/users/varunagrawal/events{/privacy}", "received_events_url": "https://api.github.com/users/varunagrawal/received_events", "type": "User", "site_admin": false}, "created_at": "2018-02-22T16:18:49Z", "updated_at": "2018-02-22T16:18:49Z", "author_association": "CONTRIBUTOR", "body_html": "<p>That seems really cool. I wasn't aware till now that PyTorch supported JIT compilation of C++ extensions.</p>\n<p>The C backend already seems to have support for CUDA enabled ROI pooling. Would your extension basically do a C++ to C++ function call, exposed in Python? I'm still wrapping my head around the JIT features and the new ATen library. <g-emoji class=\"g-emoji\" alias=\"sweat_smile\" fallback-src=\"https://assets-cdn.github.com/images/icons/emoji/unicode/1f605.png\">\ud83d\ude05</g-emoji></p>", "body_text": "That seems really cool. I wasn't aware till now that PyTorch supported JIT compilation of C++ extensions.\nThe C backend already seems to have support for CUDA enabled ROI pooling. Would your extension basically do a C++ to C++ function call, exposed in Python? I'm still wrapping my head around the JIT features and the new ATen library. \ud83d\ude05", "body": "That seems really cool. I wasn't aware till now that PyTorch supported JIT compilation of C++ extensions.\r\n\r\nThe C backend already seems to have support for CUDA enabled ROI pooling. Would your extension basically do a C++ to C++ function call, exposed in Python? I'm still wrapping my head around the JIT features and the new ATen library. \ud83d\ude05"}