{"url": "https://api.github.com/repos/pytorch/pytorch/issues/comments/434359919", "html_url": "https://github.com/pytorch/pytorch/issues/4946#issuecomment-434359919", "issue_url": "https://api.github.com/repos/pytorch/pytorch/issues/4946", "id": 434359919, "node_id": "MDEyOklzc3VlQ29tbWVudDQzNDM1OTkxOQ==", "user": {"login": "edgarriba", "id": 5157099, "node_id": "MDQ6VXNlcjUxNTcwOTk=", "avatar_url": "https://avatars0.githubusercontent.com/u/5157099?v=4", "gravatar_id": "", "url": "https://api.github.com/users/edgarriba", "html_url": "https://github.com/edgarriba", "followers_url": "https://api.github.com/users/edgarriba/followers", "following_url": "https://api.github.com/users/edgarriba/following{/other_user}", "gists_url": "https://api.github.com/users/edgarriba/gists{/gist_id}", "starred_url": "https://api.github.com/users/edgarriba/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/edgarriba/subscriptions", "organizations_url": "https://api.github.com/users/edgarriba/orgs", "repos_url": "https://api.github.com/users/edgarriba/repos", "events_url": "https://api.github.com/users/edgarriba/events{/privacy}", "received_events_url": "https://api.github.com/users/edgarriba/received_events", "type": "User", "site_admin": false}, "created_at": "2018-10-30T15:57:47Z", "updated_at": "2018-10-30T15:57:47Z", "author_association": "CONTRIBUTOR", "body_html": "<p><a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=12434910\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/isalirezag\">@isalirezag</a> what you describe is exactly what's happening to the example link I shared using <code>get_perspective_transform</code> + <code>warp_perspective</code>. Given rois defined by 4 corners you can extract and rectify the patch from the image or the features tensor of an arbitrary size with subpixel accuracy. For averaging, I guess you can use <code>adaptive_avg2d</code> or similar.</p>", "body_text": "@isalirezag what you describe is exactly what's happening to the example link I shared using get_perspective_transform + warp_perspective. Given rois defined by 4 corners you can extract and rectify the patch from the image or the features tensor of an arbitrary size with subpixel accuracy. For averaging, I guess you can use adaptive_avg2d or similar.", "body": "@isalirezag what you describe is exactly what's happening to the example link I shared using `get_perspective_transform` + `warp_perspective`. Given rois defined by 4 corners you can extract and rectify the patch from the image or the features tensor of an arbitrary size with subpixel accuracy. For averaging, I guess you can use `adaptive_avg2d` or similar."}