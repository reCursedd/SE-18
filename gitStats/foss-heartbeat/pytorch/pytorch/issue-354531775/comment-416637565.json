{"url": "https://api.github.com/repos/pytorch/pytorch/issues/comments/416637565", "html_url": "https://github.com/pytorch/pytorch/pull/10928#issuecomment-416637565", "issue_url": "https://api.github.com/repos/pytorch/pytorch/issues/10928", "id": 416637565, "node_id": "MDEyOklzc3VlQ29tbWVudDQxNjYzNzU2NQ==", "user": {"login": "colesbury", "id": 655866, "node_id": "MDQ6VXNlcjY1NTg2Ng==", "avatar_url": "https://avatars1.githubusercontent.com/u/655866?v=4", "gravatar_id": "", "url": "https://api.github.com/users/colesbury", "html_url": "https://github.com/colesbury", "followers_url": "https://api.github.com/users/colesbury/followers", "following_url": "https://api.github.com/users/colesbury/following{/other_user}", "gists_url": "https://api.github.com/users/colesbury/gists{/gist_id}", "starred_url": "https://api.github.com/users/colesbury/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/colesbury/subscriptions", "organizations_url": "https://api.github.com/users/colesbury/orgs", "repos_url": "https://api.github.com/users/colesbury/repos", "events_url": "https://api.github.com/users/colesbury/events{/privacy}", "received_events_url": "https://api.github.com/users/colesbury/received_events", "type": "User", "site_admin": false}, "created_at": "2018-08-28T15:46:21Z", "updated_at": "2018-08-28T15:46:21Z", "author_association": "MEMBER", "body_html": "<p>Greg pointed out that you can also use the same trick as <code>generic/THTensor.h</code>:</p>\n<div class=\"highlight highlight-source-c\"><pre>#<span class=\"pl-k\">ifdef</span> __cplusplus\n#<span class=\"pl-k\">define</span> <span class=\"pl-en\">THTensor</span> at::TensorImpl\n#<span class=\"pl-k\">else</span>\n<span class=\"pl-k\">typedef</span> <span class=\"pl-k\">struct</span> at_Tensor_Impl at_Tensor_Impl;\n#<span class=\"pl-k\">define</span> <span class=\"pl-en\">THTensor</span> at_Tensor_Impl\n#<span class=\"pl-k\">endif</span></pre></div>\n<p>(Substitute THHalf for THTensor and at::Half for at::TensorImpl)</p>\n<p>That would keep the THHalf name, but not as a distinct type.</p>", "body_text": "Greg pointed out that you can also use the same trick as generic/THTensor.h:\n#ifdef __cplusplus\n#define THTensor at::TensorImpl\n#else\ntypedef struct at_Tensor_Impl at_Tensor_Impl;\n#define THTensor at_Tensor_Impl\n#endif\n(Substitute THHalf for THTensor and at::Half for at::TensorImpl)\nThat would keep the THHalf name, but not as a distinct type.", "body": "Greg pointed out that you can also use the same trick as `generic/THTensor.h`:\r\n\r\n```c\r\n#ifdef __cplusplus\r\n#define THTensor at::TensorImpl\r\n#else\r\ntypedef struct at_Tensor_Impl at_Tensor_Impl;\r\n#define THTensor at_Tensor_Impl\r\n#endif\r\n```\r\n\r\n(Substitute THHalf for THTensor and at::Half for at::TensorImpl)\r\n\r\nThat would keep the THHalf name, but not as a distinct type."}