{"url": "https://api.github.com/repos/pytorch/pytorch/issues/comments/340454761", "html_url": "https://github.com/pytorch/pytorch/pull/3359#issuecomment-340454761", "issue_url": "https://api.github.com/repos/pytorch/pytorch/issues/3359", "id": 340454761, "node_id": "MDEyOklzc3VlQ29tbWVudDM0MDQ1NDc2MQ==", "user": {"login": "ezyang", "id": 13564, "node_id": "MDQ6VXNlcjEzNTY0", "avatar_url": "https://avatars0.githubusercontent.com/u/13564?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ezyang", "html_url": "https://github.com/ezyang", "followers_url": "https://api.github.com/users/ezyang/followers", "following_url": "https://api.github.com/users/ezyang/following{/other_user}", "gists_url": "https://api.github.com/users/ezyang/gists{/gist_id}", "starred_url": "https://api.github.com/users/ezyang/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ezyang/subscriptions", "organizations_url": "https://api.github.com/users/ezyang/orgs", "repos_url": "https://api.github.com/users/ezyang/repos", "events_url": "https://api.github.com/users/ezyang/events{/privacy}", "received_events_url": "https://api.github.com/users/ezyang/received_events", "type": "User", "site_admin": false}, "created_at": "2017-10-30T14:08:19Z", "updated_at": "2017-10-30T14:08:19Z", "author_association": "CONTRIBUTOR", "body_html": "<blockquote>\n<p>Its not clear if we should be copying the inputs list every time just because of const correctness. Instead can we make both input and output not make copies? For instance, can we return ArrayRef&lt;Node*&gt; or ArrayRef&lt;const Node*&gt; for both input and output?</p>\n</blockquote>\n<p>I considered doing this; it certainly avoids the problem where <code>std::vector&lt;Node*&gt;</code> and <code>std::vector&lt;const Node*&gt;</code> are not interconvertible. The primary problem is that while you now get to see updates to the underlying vector, if it <em>resizes</em>, your array reference will continue to have a stale size. If we're OK with this, I can switch it over.</p>", "body_text": "Its not clear if we should be copying the inputs list every time just because of const correctness. Instead can we make both input and output not make copies? For instance, can we return ArrayRef<Node*> or ArrayRef<const Node*> for both input and output?\n\nI considered doing this; it certainly avoids the problem where std::vector<Node*> and std::vector<const Node*> are not interconvertible. The primary problem is that while you now get to see updates to the underlying vector, if it resizes, your array reference will continue to have a stale size. If we're OK with this, I can switch it over.", "body": "> Its not clear if we should be copying the inputs list every time just because of const correctness. Instead can we make both input and output not make copies? For instance, can we return ArrayRef<Node*> or ArrayRef<const Node*> for both input and output?\r\n\r\nI considered doing this; it certainly avoids the problem where `std::vector<Node*>` and `std::vector<const Node*>` are not interconvertible. The primary problem is that while you now get to see updates to the underlying vector, if it *resizes*, your array reference will continue to have a stale size. If we're OK with this, I can switch it over."}