{"url": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/103797687", "pull_request_review_id": 24598762, "id": 103797687, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEwMzc5NzY4Nw==", "diff_hunk": "@@ -3,13 +3,33 @@\n #include \"torch/csrc/autograd/engine.h\"\n #include \"torch/csrc/THP.h\"\n #include \"torch/csrc/DynamicTypes.h\"\n+#include \"torch/csrc/utils/auto_gil.h\"\n \n using namespace torch::autograd;\n \n struct THPEngine {\n     PyObject_HEAD\n };\n \n+struct PythonEngine : public Engine {\n+  virtual void thread_main(ReadyQueue& queue) override {\n+    AutoGIL gil;\n+    AutoNoGIL no_gil;", "path": "torch/csrc/autograd/python_engine.cpp", "position": null, "original_position": 15, "commit_id": "6336300880349038c5bf6f5dfe3b37864eb39acb", "original_commit_id": "a2e0187c8406e17538e725595606f510394b2303", "user": {"login": "albanD", "id": 6359743, "node_id": "MDQ6VXNlcjYzNTk3NDM=", "avatar_url": "https://avatars3.githubusercontent.com/u/6359743?v=4", "gravatar_id": "", "url": "https://api.github.com/users/albanD", "html_url": "https://github.com/albanD", "followers_url": "https://api.github.com/users/albanD/followers", "following_url": "https://api.github.com/users/albanD/following{/other_user}", "gists_url": "https://api.github.com/users/albanD/gists{/gist_id}", "starred_url": "https://api.github.com/users/albanD/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/albanD/subscriptions", "organizations_url": "https://api.github.com/users/albanD/orgs", "repos_url": "https://api.github.com/users/albanD/repos", "events_url": "https://api.github.com/users/albanD/events{/privacy}", "received_events_url": "https://api.github.com/users/albanD/received_events", "type": "User", "site_admin": false}, "body": "Is the point of these two lines that, this new threads needs to have a thread state associated because some Python function may be called inside (somewhere during the backward), but we actually don't want to hold the GIL right now and the GIL will be locked just before calling the python function later?", "created_at": "2017-03-01T21:48:13Z", "updated_at": "2018-11-23T15:32:38Z", "html_url": "https://github.com/pytorch/pytorch/pull/881#discussion_r103797687", "pull_request_url": "https://api.github.com/repos/pytorch/pytorch/pulls/881", "author_association": "COLLABORATOR", "_links": {"self": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/103797687"}, "html": {"href": "https://github.com/pytorch/pytorch/pull/881#discussion_r103797687"}, "pull_request": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/881"}}, "body_html": "<p>Is the point of these two lines that, this new threads needs to have a thread state associated because some Python function may be called inside (somewhere during the backward), but we actually don't want to hold the GIL right now and the GIL will be locked just before calling the python function later?</p>", "body_text": "Is the point of these two lines that, this new threads needs to have a thread state associated because some Python function may be called inside (somewhere during the backward), but we actually don't want to hold the GIL right now and the GIL will be locked just before calling the python function later?"}