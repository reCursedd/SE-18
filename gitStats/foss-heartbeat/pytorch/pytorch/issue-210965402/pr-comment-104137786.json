{"url": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/104137786", "pull_request_review_id": 24947698, "id": 104137786, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEwNDEzNzc4Ng==", "diff_hunk": "@@ -24,6 +22,45 @@ class python_error : public std::exception {};\n \n extern PyObject *THPException_FatalError;\n \n+// Throwing this exception means that the python error flags have been already\n+// set and control should be immediately returned to the interpreter.\n+struct python_error : public std::exception {\n+  python_error() : type(nullptr), value(nullptr), traceback(nullptr) {}\n+\n+  ~python_error() {\n+    if (type || value || traceback) {\n+      AutoGIL gil;\n+      Py_XDECREF(type);\n+      Py_XDECREF(value);\n+      Py_XDECREF(traceback);\n+    }\n+  }\n+\n+  /** Saves the exception so that it can be re-thrown on a different thread */\n+  inline void persist() {\n+    // PyErr_Fetch overwrites the pointers\n+    AutoGIL gil;\n+    Py_XDECREF(type);\n+    Py_XDECREF(value);\n+    Py_XDECREF(traceback);\n+    PyErr_Fetch(&type, &value, &traceback);\n+  }\n+\n+  /** Sets the current Python error from this exception */\n+  inline void restore() {\n+    // PyErr_Restore steals references\n+    AutoGIL gil;\n+    Py_XINCREF(type);\n+    Py_XINCREF(value);\n+    Py_XINCREF(traceback);\n+    PyErr_Restore(type, value, traceback);", "path": "torch/csrc/Exceptions.h", "position": 48, "original_position": 48, "commit_id": "6336300880349038c5bf6f5dfe3b37864eb39acb", "original_commit_id": "732f464faa2a72534be9a4bfcf848d06cde9e87c", "user": {"login": "apaszke", "id": 4583066, "node_id": "MDQ6VXNlcjQ1ODMwNjY=", "avatar_url": "https://avatars3.githubusercontent.com/u/4583066?v=4", "gravatar_id": "", "url": "https://api.github.com/users/apaszke", "html_url": "https://github.com/apaszke", "followers_url": "https://api.github.com/users/apaszke/followers", "following_url": "https://api.github.com/users/apaszke/following{/other_user}", "gists_url": "https://api.github.com/users/apaszke/gists{/gist_id}", "starred_url": "https://api.github.com/users/apaszke/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/apaszke/subscriptions", "organizations_url": "https://api.github.com/users/apaszke/orgs", "repos_url": "https://api.github.com/users/apaszke/repos", "events_url": "https://api.github.com/users/apaszke/events{/privacy}", "received_events_url": "https://api.github.com/users/apaszke/received_events", "type": "User", "site_admin": false}, "body": "might be simpler to do `type = value = traceback = nullptr` after restoring the error instead of all the increfs.", "created_at": "2017-03-03T11:42:20Z", "updated_at": "2018-11-23T15:32:43Z", "html_url": "https://github.com/pytorch/pytorch/pull/881#discussion_r104137786", "pull_request_url": "https://api.github.com/repos/pytorch/pytorch/pulls/881", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/104137786"}, "html": {"href": "https://github.com/pytorch/pytorch/pull/881#discussion_r104137786"}, "pull_request": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/881"}}, "body_html": "<p>might be simpler to do <code>type = value = traceback = nullptr</code> after restoring the error instead of all the increfs.</p>", "body_text": "might be simpler to do type = value = traceback = nullptr after restoring the error instead of all the increfs."}