{"url": "https://api.github.com/repos/pytorch/pytorch/issues/comments/341855024", "html_url": "https://github.com/pytorch/pytorch/pull/3165#issuecomment-341855024", "issue_url": "https://api.github.com/repos/pytorch/pytorch/issues/3165", "id": 341855024, "node_id": "MDEyOklzc3VlQ29tbWVudDM0MTg1NTAyNA==", "user": {"login": "hughperkins", "id": 123560, "node_id": "MDQ6VXNlcjEyMzU2MA==", "avatar_url": "https://avatars2.githubusercontent.com/u/123560?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hughperkins", "html_url": "https://github.com/hughperkins", "followers_url": "https://api.github.com/users/hughperkins/followers", "following_url": "https://api.github.com/users/hughperkins/following{/other_user}", "gists_url": "https://api.github.com/users/hughperkins/gists{/gist_id}", "starred_url": "https://api.github.com/users/hughperkins/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hughperkins/subscriptions", "organizations_url": "https://api.github.com/users/hughperkins/orgs", "repos_url": "https://api.github.com/users/hughperkins/repos", "events_url": "https://api.github.com/users/hughperkins/events{/privacy}", "received_events_url": "https://api.github.com/users/hughperkins/received_events", "type": "User", "site_admin": false}, "created_at": "2017-11-03T23:59:42Z", "updated_at": "2017-11-04T00:00:02Z", "author_association": "CONTRIBUTOR", "body_html": "<p>cool. actually, I'm thinking of restructuring it slightly:</p>\n<pre><code>m = torch.distributions.Multinomial(probs)\na = m.sample()\neligibility = m.log_prob(a)\na = a.data\n\n# (and then later)\n\nloss = - (eligibility * reward).sum()\nloss.backward()\n</code></pre>\n<p>Thoughts?</p>", "body_text": "cool. actually, I'm thinking of restructuring it slightly:\nm = torch.distributions.Multinomial(probs)\na = m.sample()\neligibility = m.log_prob(a)\na = a.data\n\n# (and then later)\n\nloss = - (eligibility * reward).sum()\nloss.backward()\n\nThoughts?", "body": "cool. actually, I'm thinking of restructuring it slightly:\r\n```\r\nm = torch.distributions.Multinomial(probs)\r\na = m.sample()\r\neligibility = m.log_prob(a)\r\na = a.data\r\n\r\n# (and then later)\r\n\r\nloss = - (eligibility * reward).sum()\r\nloss.backward()\r\n```\r\nThoughts?"}