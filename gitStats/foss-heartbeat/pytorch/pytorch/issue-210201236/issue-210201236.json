{"url": "https://api.github.com/repos/pytorch/pytorch/issues/845", "repository_url": "https://api.github.com/repos/pytorch/pytorch", "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/845/labels{/name}", "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/845/comments", "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/845/events", "html_url": "https://github.com/pytorch/pytorch/issues/845", "id": 210201236, "node_id": "MDU6SXNzdWUyMTAyMDEyMzY=", "number": 845, "title": "Docs should mention that integral tensor types don't accept float scalars in methods", "user": {"login": "ming-c", "id": 24259860, "node_id": "MDQ6VXNlcjI0MjU5ODYw", "avatar_url": "https://avatars2.githubusercontent.com/u/24259860?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ming-c", "html_url": "https://github.com/ming-c", "followers_url": "https://api.github.com/users/ming-c/followers", "following_url": "https://api.github.com/users/ming-c/following{/other_user}", "gists_url": "https://api.github.com/users/ming-c/gists{/gist_id}", "starred_url": "https://api.github.com/users/ming-c/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ming-c/subscriptions", "organizations_url": "https://api.github.com/users/ming-c/orgs", "repos_url": "https://api.github.com/users/ming-c/repos", "events_url": "https://api.github.com/users/ming-c/events{/privacy}", "received_events_url": "https://api.github.com/users/ming-c/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 424131849, "node_id": "MDU6TGFiZWw0MjQxMzE4NDk=", "url": "https://api.github.com/repos/pytorch/pytorch/labels/enhancement", "name": "enhancement", "color": "84b6eb", "default": true}, {"id": 443484050, "node_id": "MDU6TGFiZWw0NDM0ODQwNTA=", "url": "https://api.github.com/repos/pytorch/pytorch/labels/medium%20priority", "name": "medium priority", "color": "fbca04", "default": false}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-02-25T01:54:13Z", "updated_at": "2017-10-31T21:09:04Z", "closed_at": "2017-10-31T21:09:04Z", "author_association": "NONE", "body_html": "<p>Hi,<br>\nWhen I did something like this:</p>\n<h2>----------------code-----------------<br>\ntemp = torch.add(sub_x_tensor, -1.1)</h2>\n<p>(type of 'sub_x_tensor' : torch.cuda.LongTensor)</p>\n<p>And an error happened:<br>\n-------------screen's print---------------<br>\nTypeError: torch.add received an invalid combination of arguments - got (torch.cuda.LongTensor, float), but expected one of:</p>\n<ul>\n<li>(torch.cuda.LongTensor source, int value)<br>\ndidn't match because some of the arguments have invalid types: (torch.cuda.LongTensor, float)</li>\n<li>(torch.cuda.LongTensor mat1, torch.cuda.sparse.LongTensor mat2)<br>\ndidn't match because some of the arguments have invalid types: (torch.cuda.LongTensor, float)</li>\n<li>(torch.cuda.LongTensor source, torch.cuda.LongTensor other)<br>\ndidn't match because some of the arguments have invalid types: (torch.cuda.LongTensor, float)</li>\n<li>(torch.cuda.LongTensor mat1, int value, torch.cuda.sparse.LongTensor mat2)</li>\n<li>(torch.cuda.LongTensor source, int value, torch.cuda.LongTensor other)</li>\n</ul>\n<hr>\n<h2>But after I checked the doc of torch.add() from <a href=\"http://pytorch.org/docs/torch.html#pointwise-ops\" rel=\"nofollow\">http://pytorch.org/docs/torch.html#pointwise-ops</a>, it shows that the added value can be 'float'</h2>\n<p><strong>torch.add(input, value, out=None)</strong></p>\n<h2>Parameters:<br>\ninput (Tensor) \u2013 the input Tensor<br>\nvalue (float) \u2013 the number to be added to each element of input<br>\nout (Tensor, optional) \u2013 The result Tensor</h2>\n<p>I don't know what's wrong here, could someone kindly help me with this?<br>\npytorch version:<br>\ntorch==0.1.8.post1<br>\ntorchvision==0.1.7</p>\n<p>Ubuntu 14.04<br>\npython2.7</p>\n<p>Thanks</p>", "body_text": "Hi,\nWhen I did something like this:\n----------------code-----------------\ntemp = torch.add(sub_x_tensor, -1.1)\n(type of 'sub_x_tensor' : torch.cuda.LongTensor)\nAnd an error happened:\n-------------screen's print---------------\nTypeError: torch.add received an invalid combination of arguments - got (torch.cuda.LongTensor, float), but expected one of:\n\n(torch.cuda.LongTensor source, int value)\ndidn't match because some of the arguments have invalid types: (torch.cuda.LongTensor, float)\n(torch.cuda.LongTensor mat1, torch.cuda.sparse.LongTensor mat2)\ndidn't match because some of the arguments have invalid types: (torch.cuda.LongTensor, float)\n(torch.cuda.LongTensor source, torch.cuda.LongTensor other)\ndidn't match because some of the arguments have invalid types: (torch.cuda.LongTensor, float)\n(torch.cuda.LongTensor mat1, int value, torch.cuda.sparse.LongTensor mat2)\n(torch.cuda.LongTensor source, int value, torch.cuda.LongTensor other)\n\n\nBut after I checked the doc of torch.add() from http://pytorch.org/docs/torch.html#pointwise-ops, it shows that the added value can be 'float'\ntorch.add(input, value, out=None)\nParameters:\ninput (Tensor) \u2013 the input Tensor\nvalue (float) \u2013 the number to be added to each element of input\nout (Tensor, optional) \u2013 The result Tensor\nI don't know what's wrong here, could someone kindly help me with this?\npytorch version:\ntorch==0.1.8.post1\ntorchvision==0.1.7\nUbuntu 14.04\npython2.7\nThanks", "body": "Hi,\r\nWhen I did something like this:\r\n\r\n----------------code-----------------\r\ntemp = torch.add(sub_x_tensor, -1.1)\r\n--------------------------------------\r\n(type of 'sub_x_tensor' : torch.cuda.LongTensor)\r\n\r\nAnd an error happened:\r\n-------------screen's print---------------\r\nTypeError: torch.add received an invalid combination of arguments - got (torch.cuda.LongTensor, float), but expected one of:\r\n * (torch.cuda.LongTensor source, int value)\r\n      didn't match because some of the arguments have invalid types: (torch.cuda.LongTensor, float)\r\n * (torch.cuda.LongTensor mat1, torch.cuda.sparse.LongTensor mat2)\r\n      didn't match because some of the arguments have invalid types: (torch.cuda.LongTensor, float)\r\n * (torch.cuda.LongTensor source, torch.cuda.LongTensor other)\r\n      didn't match because some of the arguments have invalid types: (torch.cuda.LongTensor, float)\r\n * (torch.cuda.LongTensor mat1, int value, torch.cuda.sparse.LongTensor mat2)\r\n * (torch.cuda.LongTensor source, int value, torch.cuda.LongTensor other)\r\n------------------------------------------\r\n\r\nBut after I checked the doc of torch.add() from http://pytorch.org/docs/torch.html#pointwise-ops, it shows that the added value can be 'float'\r\n------------------------------------------\r\n**torch.add(input, value, out=None)**\r\n\r\nParameters:\t\r\ninput (Tensor) \u2013 the input Tensor\r\nvalue (float) \u2013 the number to be added to each element of input\r\nout (Tensor, optional) \u2013 The result Tensor\r\n-----------------------------------------\r\n\r\nI don't know what's wrong here, could someone kindly help me with this?\r\npytorch version: \r\ntorch==0.1.8.post1\r\ntorchvision==0.1.7\r\n\r\nUbuntu 14.04\r\npython2.7\r\n\r\nThanks"}