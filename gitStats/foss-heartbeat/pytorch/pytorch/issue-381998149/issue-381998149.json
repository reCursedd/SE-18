{"url": "https://api.github.com/repos/pytorch/pytorch/issues/14171", "repository_url": "https://api.github.com/repos/pytorch/pytorch", "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/14171/labels{/name}", "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/14171/comments", "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/14171/events", "html_url": "https://github.com/pytorch/pytorch/pull/14171", "id": 381998149, "node_id": "MDExOlB1bGxSZXF1ZXN0MjMxODEyNTUy", "number": 14171, "title": "Allow dataloader to accept a custom memory pinning function", "user": {"login": "mcarilli", "id": 7799218, "node_id": "MDQ6VXNlcjc3OTkyMTg=", "avatar_url": "https://avatars0.githubusercontent.com/u/7799218?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mcarilli", "html_url": "https://github.com/mcarilli", "followers_url": "https://api.github.com/users/mcarilli/followers", "following_url": "https://api.github.com/users/mcarilli/following{/other_user}", "gists_url": "https://api.github.com/users/mcarilli/gists{/gist_id}", "starred_url": "https://api.github.com/users/mcarilli/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mcarilli/subscriptions", "organizations_url": "https://api.github.com/users/mcarilli/orgs", "repos_url": "https://api.github.com/users/mcarilli/repos", "events_url": "https://api.github.com/users/mcarilli/events{/privacy}", "received_events_url": "https://api.github.com/users/mcarilli/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-11-18T20:42:37Z", "updated_at": "2018-11-23T16:14:12Z", "closed_at": "2018-11-23T16:14:12Z", "author_association": "CONTRIBUTOR", "pull_request": {"url": "https://api.github.com/repos/pytorch/pytorch/pulls/14171", "html_url": "https://github.com/pytorch/pytorch/pull/14171", "diff_url": "https://github.com/pytorch/pytorch/pull/14171.diff", "patch_url": "https://github.com/pytorch/pytorch/pull/14171.patch"}, "body_html": "<p>Currently, the <code>pin_memory_batch</code> function in the dataloader will return a batch comprised of any unrecognized type without pinning the data, because it doesn't know how.</p>\n<p>This behavior was preventing us from overlapping data prefetching in Mask-RCNN, whose custom <code>collate_fn</code> returns a custom batch type.</p>\n<p>The present PR adds the ability for the user to pass a <code>pin_fn</code> alongside any custom <code>collate_fn</code> to handle such custom types.</p>", "body_text": "Currently, the pin_memory_batch function in the dataloader will return a batch comprised of any unrecognized type without pinning the data, because it doesn't know how.\nThis behavior was preventing us from overlapping data prefetching in Mask-RCNN, whose custom collate_fn returns a custom batch type.\nThe present PR adds the ability for the user to pass a pin_fn alongside any custom collate_fn to handle such custom types.", "body": "Currently, the `pin_memory_batch` function in the dataloader will return a batch comprised of any unrecognized type without pinning the data, because it doesn't know how.\r\n\r\nThis behavior was preventing us from overlapping data prefetching in Mask-RCNN, whose custom `collate_fn` returns a custom batch type.  \r\n\r\nThe present PR adds the ability for the user to pass a `pin_fn` alongside any custom `collate_fn` to handle such custom types."}