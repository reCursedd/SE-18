{"url": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/158558917", "pull_request_review_id": 85396303, "id": 158558917, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE1ODU1ODkxNw==", "diff_hunk": "@@ -0,0 +1,22 @@\n+#pragma once", "path": "aten/src/ATen/native/cuda/AccumulateType.h", "position": null, "original_position": 1, "commit_id": "8dab6c62f8e579ea93f407aeeafc57bedfb0ca37", "original_commit_id": "ce025518fdbbabc7074e4038d7a6e3e75cd626d9", "user": {"login": "gchanan", "id": 3768583, "node_id": "MDQ6VXNlcjM3Njg1ODM=", "avatar_url": "https://avatars2.githubusercontent.com/u/3768583?v=4", "gravatar_id": "", "url": "https://api.github.com/users/gchanan", "html_url": "https://github.com/gchanan", "followers_url": "https://api.github.com/users/gchanan/followers", "following_url": "https://api.github.com/users/gchanan/following{/other_user}", "gists_url": "https://api.github.com/users/gchanan/gists{/gist_id}", "starred_url": "https://api.github.com/users/gchanan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/gchanan/subscriptions", "organizations_url": "https://api.github.com/users/gchanan/orgs", "repos_url": "https://api.github.com/users/gchanan/repos", "events_url": "https://api.github.com/users/gchanan/events{/privacy}", "received_events_url": "https://api.github.com/users/gchanan/received_events", "type": "User", "site_admin": false}, "body": "In https://github.com/pytorch/pytorch/pull/4304, I started putting utility-style cuda code in /cuda rather than /native/cuda.  I think this makes sense because technically everything that isn't a TH/THC wrapper is \"native\", so we need to have a more precise definition of native to limit what goes in /native; I'd argue functional extensions are a natural definition.  Since this seems generally useful and isn't just implementing a functional extension, I'd put it in /cuda.", "created_at": "2017-12-22T21:15:08Z", "updated_at": "2018-11-23T15:37:38Z", "html_url": "https://github.com/pytorch/pytorch/pull/4322#discussion_r158558917", "pull_request_url": "https://api.github.com/repos/pytorch/pytorch/pulls/4322", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/158558917"}, "html": {"href": "https://github.com/pytorch/pytorch/pull/4322#discussion_r158558917"}, "pull_request": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/4322"}}, "body_html": "<p>In <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load issue title\" data-id=\"283989613\" data-permission-text=\"Issue title is private\" data-url=\"https://github.com/pytorch/pytorch/issues/4304\" data-hovercard-type=\"pull_request\" data-hovercard-url=\"/pytorch/pytorch/pull/4304/hovercard\" href=\"https://github.com/pytorch/pytorch/pull/4304\">#4304</a>, I started putting utility-style cuda code in /cuda rather than /native/cuda.  I think this makes sense because technically everything that isn't a TH/THC wrapper is \"native\", so we need to have a more precise definition of native to limit what goes in /native; I'd argue functional extensions are a natural definition.  Since this seems generally useful and isn't just implementing a functional extension, I'd put it in /cuda.</p>", "body_text": "In #4304, I started putting utility-style cuda code in /cuda rather than /native/cuda.  I think this makes sense because technically everything that isn't a TH/THC wrapper is \"native\", so we need to have a more precise definition of native to limit what goes in /native; I'd argue functional extensions are a natural definition.  Since this seems generally useful and isn't just implementing a functional extension, I'd put it in /cuda."}