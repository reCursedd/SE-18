{"url": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/217229353", "pull_request_review_id": 154891969, "id": 217229353, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIxNzIyOTM1Mw==", "diff_hunk": "@@ -584,23 +585,68 @@ Tensor& _sum_out(Tensor &result, const Tensor &self, IntList dims, bool keepdim)\n   return reduce_multi_associative_out<_sum, _sum_out>(result, self, dims, keepdim);\n }\n \n-Tensor norm(const Tensor& self, Scalar p, int64_t dim, bool keepdim) {\n-  Tensor result = self.type().tensor();\n-  return at::native::norm_out(result, self, p, dim, keepdim);\n+Tensor& _norm_out_cpu(Tensor& result, const Tensor& self, Scalar p, int64_t dim_, bool keepdim) {\n+  int64_t dim = maybe_wrap_dim(dim_, self.dim());\n+  if (_dimreduce_return_trivial(result, self, 0, dim, keepdim))\n+    return result;\n+  if (self.is_contiguous() && result.is_contiguous()) {\n+    _dimreduce_setup(result, self, dim);\n+    norm_kernel(kCPU, result, self, p, dim);\n+    if (!keepdim) {\n+      result.squeeze_(dim);\n+    }\n+    return result;\n+  } else {\n+    return at::_th_norm_out(result, self, p, dim, keepdim);\n+  }\n }\n \n-Tensor &norm_out(Tensor &result, const Tensor &self, Scalar p, int64_t dim, bool keepdim) {\n+Tensor& norm_out(Tensor &result, const Tensor &self, Scalar p, int64_t dim, bool keepdim) {\n   AT_CHECK(self.type().backend() == Backend::CPU || self.type().backend() == Backend::CUDA,\n            \"norm only supports CPU AND CUDA backend, got: \", at::toString(self.type().backend()));\n   AT_CHECK(at::isFloatingType(self.type().scalarType()), \"norm only supports floating-point dtypes\");\n   dim = maybe_wrap_dim(dim, self.dim());\n   if (_dimreduce_return_trivial(result, self, 0, dim, keepdim)) {\n     return result;\n   } else {\n-    return at::_th_norm_out(result, self, p, dim, keepdim);\n+    if (self.is_cuda()) {\n+      return at::_th_norm_out(result, self, p, dim, keepdim);\n+    } else {\n+      return _norm_out_cpu(result, self, p, dim, keepdim);\n+    }\n+  }\n+}\n+\n+Tensor _norm(const Tensor &self, Scalar p) {\n+  if (self.type().is_sparse()) {\n+    return at::native_norm(self, p);\n+  } else {\n+    AT_CHECK(self.type().backend() == Backend::CPU || self.type().backend() == Backend::CUDA,", "path": "aten/src/ATen/native/ReduceOps.cpp", "position": 53, "original_position": 53, "commit_id": "0b2e72ded0c14a776de76c29be7f11ea49572075", "original_commit_id": "0b2e72ded0c14a776de76c29be7f11ea49572075", "user": {"login": "cpuhrsch", "id": 1716488, "node_id": "MDQ6VXNlcjE3MTY0ODg=", "avatar_url": "https://avatars1.githubusercontent.com/u/1716488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cpuhrsch", "html_url": "https://github.com/cpuhrsch", "followers_url": "https://api.github.com/users/cpuhrsch/followers", "following_url": "https://api.github.com/users/cpuhrsch/following{/other_user}", "gists_url": "https://api.github.com/users/cpuhrsch/gists{/gist_id}", "starred_url": "https://api.github.com/users/cpuhrsch/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cpuhrsch/subscriptions", "organizations_url": "https://api.github.com/users/cpuhrsch/orgs", "repos_url": "https://api.github.com/users/cpuhrsch/repos", "events_url": "https://api.github.com/users/cpuhrsch/events{/privacy}", "received_events_url": "https://api.github.com/users/cpuhrsch/received_events", "type": "User", "site_admin": false}, "body": "I don't know if this necessary - cc @ezyang ", "created_at": "2018-09-13T00:24:23Z", "updated_at": "2018-11-23T15:51:14Z", "html_url": "https://github.com/pytorch/pytorch/pull/11565#discussion_r217229353", "pull_request_url": "https://api.github.com/repos/pytorch/pytorch/pulls/11565", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/217229353"}, "html": {"href": "https://github.com/pytorch/pytorch/pull/11565#discussion_r217229353"}, "pull_request": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/11565"}}, "body_html": "<p>I don't know if this necessary - cc <a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=13564\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/ezyang\">@ezyang</a></p>", "body_text": "I don't know if this necessary - cc @ezyang"}