{"url": "https://api.github.com/repos/pytorch/pytorch/issues/comments/433959890", "html_url": "https://github.com/pytorch/pytorch/issues/10370#issuecomment-433959890", "issue_url": "https://api.github.com/repos/pytorch/pytorch/issues/10370", "id": 433959890, "node_id": "MDEyOklzc3VlQ29tbWVudDQzMzk1OTg5MA==", "user": {"login": "simonm3", "id": 1199593, "node_id": "MDQ6VXNlcjExOTk1OTM=", "avatar_url": "https://avatars2.githubusercontent.com/u/1199593?v=4", "gravatar_id": "", "url": "https://api.github.com/users/simonm3", "html_url": "https://github.com/simonm3", "followers_url": "https://api.github.com/users/simonm3/followers", "following_url": "https://api.github.com/users/simonm3/following{/other_user}", "gists_url": "https://api.github.com/users/simonm3/gists{/gist_id}", "starred_url": "https://api.github.com/users/simonm3/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/simonm3/subscriptions", "organizations_url": "https://api.github.com/users/simonm3/orgs", "repos_url": "https://api.github.com/users/simonm3/repos", "events_url": "https://api.github.com/users/simonm3/events{/privacy}", "received_events_url": "https://api.github.com/users/simonm3/received_events", "type": "User", "site_admin": false}, "created_at": "2018-10-29T15:40:38Z", "updated_at": "2018-10-29T15:40:38Z", "author_association": "NONE", "body_html": "<p>I note that on CPU pytorch argmax gets the last value found whereas numpy argmax gets the first value found. On GPU they seem to be the same. I would guess there is no big speed up either way in which case would be good to be consistent with numpy.</p>\n<p>e.g.</p>\n<blockquote>\n<p>a=[1,2, 99, 99]<br>\nnp.argmax(a), torch.argmax(torch.Tensor(a))</p>\n</blockquote>\n<p>(2, tensor(3))</p>\n<blockquote>\n<p>a=[1,2, 99, 99]<br>\nnp.argmax(a), torch.argmax(torch.Tensor(a).cuda())</p>\n</blockquote>\n<p>(2, tensor(2, device='cuda:0'))</p>", "body_text": "I note that on CPU pytorch argmax gets the last value found whereas numpy argmax gets the first value found. On GPU they seem to be the same. I would guess there is no big speed up either way in which case would be good to be consistent with numpy.\ne.g.\n\na=[1,2, 99, 99]\nnp.argmax(a), torch.argmax(torch.Tensor(a))\n\n(2, tensor(3))\n\na=[1,2, 99, 99]\nnp.argmax(a), torch.argmax(torch.Tensor(a).cuda())\n\n(2, tensor(2, device='cuda:0'))", "body": "I note that on CPU pytorch argmax gets the last value found whereas numpy argmax gets the first value found. On GPU they seem to be the same. I would guess there is no big speed up either way in which case would be good to be consistent with numpy.\r\n\r\ne.g.\r\n\r\n> a=[1,2, 99, 99]\r\n> np.argmax(a), torch.argmax(torch.Tensor(a))\r\n\r\n(2, tensor(3))\r\n\r\n> a=[1,2, 99, 99]\r\n> np.argmax(a), torch.argmax(torch.Tensor(a).cuda())\r\n\r\n(2, tensor(2, device='cuda:0'))"}