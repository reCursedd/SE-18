{"url": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/162299856", "pull_request_review_id": 89730911, "id": 162299856, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE2MjI5OTg1Ng==", "diff_hunk": "@@ -72,23 +73,42 @@ struct GraphTask {\n   // Notified when a task finishes executing.  Check outstanding_tasks to see\n   // if all tasks are done.\n   std::condition_variable not_done;\n-  const Engine::pre_callback_map& pre_callbacks;\n-  const Engine::post_callback_map& post_callbacks;\n   std::unordered_map<Function*, InputBuffer> not_ready;\n   std::unordered_map<Function*, int> dependencies;\n \n+  struct ExecInfo {\n+    struct Capture {\n+      Capture(int input_idx, int output_idx) : input_idx(input_idx), output_idx(output_idx) {}\n+      int input_idx; // within Function inputs\n+      int output_idx; // within the output vector of a GraphTask\n+    };\n+\n+    bool should_execute() const {\n+      return needed || captures;\n+    }\n+\n+    bool needed = false;\n+    std::unique_ptr<std::vector<Capture>> captures;\n+  };\n+  // Exec info has a bit complicated semantics. If it's empty, it means the task is\n+  // run in a \"default\" mode, which means that all next_functions we encounter should\n+  // get executed. If it's not empty, only functions that have an entry and this entry\n+  // has needed == True should be executed.\n+  std::unordered_map<Function*, ExecInfo> exec_info;", "path": "torch/csrc/autograd/engine.cpp", "position": 35, "original_position": 35, "commit_id": "f38d6a066f6f6ba1e21497df4f994b97bb052cb2", "original_commit_id": "f38d6a066f6f6ba1e21497df4f994b97bb052cb2", "user": {"login": "apaszke", "id": 4583066, "node_id": "MDQ6VXNlcjQ1ODMwNjY=", "avatar_url": "https://avatars3.githubusercontent.com/u/4583066?v=4", "gravatar_id": "", "url": "https://api.github.com/users/apaszke", "html_url": "https://github.com/apaszke", "followers_url": "https://api.github.com/users/apaszke/followers", "following_url": "https://api.github.com/users/apaszke/following{/other_user}", "gists_url": "https://api.github.com/users/apaszke/gists{/gist_id}", "starred_url": "https://api.github.com/users/apaszke/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/apaszke/subscriptions", "organizations_url": "https://api.github.com/users/apaszke/orgs", "repos_url": "https://api.github.com/users/apaszke/repos", "events_url": "https://api.github.com/users/apaszke/events{/privacy}", "received_events_url": "https://api.github.com/users/apaszke/received_events", "type": "User", "site_admin": false}, "body": "No if `exec_info.empty()`, yes otherwise", "created_at": "2018-01-18T10:19:14Z", "updated_at": "2018-11-23T15:38:17Z", "html_url": "https://github.com/pytorch/pytorch/pull/4690#discussion_r162299856", "pull_request_url": "https://api.github.com/repos/pytorch/pytorch/pulls/4690", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/162299856"}, "html": {"href": "https://github.com/pytorch/pytorch/pull/4690#discussion_r162299856"}, "pull_request": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/4690"}}, "body_html": "<p>No if <code>exec_info.empty()</code>, yes otherwise</p>", "body_text": "No if exec_info.empty(), yes otherwise", "in_reply_to_id": 162250767}