{"url": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/162119362", "pull_request_review_id": 89520942, "id": 162119362, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE2MjExOTM2Mg==", "diff_hunk": "@@ -72,23 +73,38 @@ struct GraphTask {\n   // Notified when a task finishes executing.  Check outstanding_tasks to see\n   // if all tasks are done.\n   std::condition_variable not_done;\n-  const Engine::pre_callback_map& pre_callbacks;\n-  const Engine::post_callback_map& post_callbacks;\n   std::unordered_map<Function*, InputBuffer> not_ready;\n   std::unordered_map<Function*, int> dependencies;\n \n+  struct ExecInfo {\n+    struct Capture {\n+      Capture(int input_idx, int output_idx) : input_idx(input_idx), output_idx(output_idx) {}\n+      int input_idx; // within Function inputs\n+      int output_idx; // within the output vector of a GraphTask\n+    };\n+\n+    bool needed;\n+    std::unique_ptr<std::vector<Capture>> captures;", "path": "torch/csrc/autograd/engine.cpp", "position": null, "original_position": 25, "commit_id": "f38d6a066f6f6ba1e21497df4f994b97bb052cb2", "original_commit_id": "5c81e3e03d169b1a45582e7fd035e40e18d08e1b", "user": {"login": "colesbury", "id": 655866, "node_id": "MDQ6VXNlcjY1NTg2Ng==", "avatar_url": "https://avatars1.githubusercontent.com/u/655866?v=4", "gravatar_id": "", "url": "https://api.github.com/users/colesbury", "html_url": "https://github.com/colesbury", "followers_url": "https://api.github.com/users/colesbury/followers", "following_url": "https://api.github.com/users/colesbury/following{/other_user}", "gists_url": "https://api.github.com/users/colesbury/gists{/gist_id}", "starred_url": "https://api.github.com/users/colesbury/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/colesbury/subscriptions", "organizations_url": "https://api.github.com/users/colesbury/orgs", "repos_url": "https://api.github.com/users/colesbury/repos", "events_url": "https://api.github.com/users/colesbury/events{/privacy}", "received_events_url": "https://api.github.com/users/colesbury/received_events", "type": "User", "site_admin": false}, "body": "Does this need to be a `unique_ptr` to a `vector`? Can it just be a `vector`? It's a little weird because it has two empty states: an empty (null) unique pointer and a valid pointer to an empty vector.", "created_at": "2018-01-17T17:18:07Z", "updated_at": "2018-11-23T15:38:15Z", "html_url": "https://github.com/pytorch/pytorch/pull/4690#discussion_r162119362", "pull_request_url": "https://api.github.com/repos/pytorch/pytorch/pulls/4690", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/162119362"}, "html": {"href": "https://github.com/pytorch/pytorch/pull/4690#discussion_r162119362"}, "pull_request": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/4690"}}, "body_html": "<p>Does this need to be a <code>unique_ptr</code> to a <code>vector</code>? Can it just be a <code>vector</code>? It's a little weird because it has two empty states: an empty (null) unique pointer and a valid pointer to an empty vector.</p>", "body_text": "Does this need to be a unique_ptr to a vector? Can it just be a vector? It's a little weird because it has two empty states: an empty (null) unique pointer and a valid pointer to an empty vector."}