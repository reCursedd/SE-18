{"url": "https://api.github.com/repos/pytorch/pytorch/issues/comments/358533261", "html_url": "https://github.com/pytorch/pytorch/issues/4710#issuecomment-358533261", "issue_url": "https://api.github.com/repos/pytorch/pytorch/issues/4710", "id": 358533261, "node_id": "MDEyOklzc3VlQ29tbWVudDM1ODUzMzI2MQ==", "user": {"login": "berzjackson", "id": 1171221, "node_id": "MDQ6VXNlcjExNzEyMjE=", "avatar_url": "https://avatars0.githubusercontent.com/u/1171221?v=4", "gravatar_id": "", "url": "https://api.github.com/users/berzjackson", "html_url": "https://github.com/berzjackson", "followers_url": "https://api.github.com/users/berzjackson/followers", "following_url": "https://api.github.com/users/berzjackson/following{/other_user}", "gists_url": "https://api.github.com/users/berzjackson/gists{/gist_id}", "starred_url": "https://api.github.com/users/berzjackson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/berzjackson/subscriptions", "organizations_url": "https://api.github.com/users/berzjackson/orgs", "repos_url": "https://api.github.com/users/berzjackson/repos", "events_url": "https://api.github.com/users/berzjackson/events{/privacy}", "received_events_url": "https://api.github.com/users/berzjackson/received_events", "type": "User", "site_admin": false}, "created_at": "2018-01-18T04:18:27Z", "updated_at": "2018-01-18T04:18:27Z", "author_association": "NONE", "body_html": "<p><a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=5674597\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/SsnL\">@SsnL</a><br>\nI also have requests for some methods that are not implemented yet for sparse tensors, such as <code>norm</code> and <code>max</code> and I've implemented them myself using similar workarounds. Are there any future plans for supporting these methods? I find it odd that the implementations of these standard routines are left to the users.</p>", "body_text": "@SsnL\nI also have requests for some methods that are not implemented yet for sparse tensors, such as norm and max and I've implemented them myself using similar workarounds. Are there any future plans for supporting these methods? I find it odd that the implementations of these standard routines are left to the users.", "body": "@SsnL \r\nI also have requests for some methods that are not implemented yet for sparse tensors, such as `norm` and `max` and I've implemented them myself using similar workarounds. Are there any future plans for supporting these methods? I find it odd that the implementations of these standard routines are left to the users. "}