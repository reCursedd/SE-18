{"url": "https://api.github.com/repos/pytorch/pytorch/issues/comments/358400276", "html_url": "https://github.com/pytorch/pytorch/issues/4710#issuecomment-358400276", "issue_url": "https://api.github.com/repos/pytorch/pytorch/issues/4710", "id": 358400276, "node_id": "MDEyOklzc3VlQ29tbWVudDM1ODQwMDI3Ng==", "user": {"login": "SsnL", "id": 5674597, "node_id": "MDQ6VXNlcjU2NzQ1OTc=", "avatar_url": "https://avatars2.githubusercontent.com/u/5674597?v=4", "gravatar_id": "", "url": "https://api.github.com/users/SsnL", "html_url": "https://github.com/SsnL", "followers_url": "https://api.github.com/users/SsnL/followers", "following_url": "https://api.github.com/users/SsnL/following{/other_user}", "gists_url": "https://api.github.com/users/SsnL/gists{/gist_id}", "starred_url": "https://api.github.com/users/SsnL/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/SsnL/subscriptions", "organizations_url": "https://api.github.com/users/SsnL/orgs", "repos_url": "https://api.github.com/users/SsnL/repos", "events_url": "https://api.github.com/users/SsnL/events{/privacy}", "received_events_url": "https://api.github.com/users/SsnL/received_events", "type": "User", "site_admin": false}, "created_at": "2018-01-17T18:37:15Z", "updated_at": "2018-01-17T19:28:38Z", "author_association": "CONTRIBUTOR", "body_html": "<p>Efficient workarounds:</p>\n<pre><code># returns nnz elements (containing dense dimensions)\ndef nnz(sparse_t):\n  return t._nnz() * t._values().size(1)\n\ndef sum(sparse_t):\n  return sparse_t._values().sum() \n  \ndef log1p(sparse_t):\n  t = sparse_t.coalesce()\n  t._values().log1p_()\n  return t\n</code></pre>", "body_text": "Efficient workarounds:\n# returns nnz elements (containing dense dimensions)\ndef nnz(sparse_t):\n  return t._nnz() * t._values().size(1)\n\ndef sum(sparse_t):\n  return sparse_t._values().sum() \n  \ndef log1p(sparse_t):\n  t = sparse_t.coalesce()\n  t._values().log1p_()\n  return t", "body": "Efficient workarounds:\r\n```\r\n# returns nnz elements (containing dense dimensions)\r\ndef nnz(sparse_t):\r\n  return t._nnz() * t._values().size(1)\r\n\r\ndef sum(sparse_t):\r\n  return sparse_t._values().sum() \r\n  \r\ndef log1p(sparse_t):\r\n  t = sparse_t.coalesce()\r\n  t._values().log1p_()\r\n  return t\r\n```"}