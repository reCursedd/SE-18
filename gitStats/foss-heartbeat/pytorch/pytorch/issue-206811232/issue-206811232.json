{"url": "https://api.github.com/repos/pytorch/pytorch/issues/715", "repository_url": "https://api.github.com/repos/pytorch/pytorch", "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/715/labels{/name}", "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/715/comments", "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/715/events", "html_url": "https://github.com/pytorch/pytorch/issues/715", "id": 206811232, "node_id": "MDU6SXNzdWUyMDY4MTEyMzI=", "number": 715, "title": "Module: parameters are not included if the module is initialized in a list", "user": {"login": "kyunghyuncho", "id": 4028979, "node_id": "MDQ6VXNlcjQwMjg5Nzk=", "avatar_url": "https://avatars0.githubusercontent.com/u/4028979?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kyunghyuncho", "html_url": "https://github.com/kyunghyuncho", "followers_url": "https://api.github.com/users/kyunghyuncho/followers", "following_url": "https://api.github.com/users/kyunghyuncho/following{/other_user}", "gists_url": "https://api.github.com/users/kyunghyuncho/gists{/gist_id}", "starred_url": "https://api.github.com/users/kyunghyuncho/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kyunghyuncho/subscriptions", "organizations_url": "https://api.github.com/users/kyunghyuncho/orgs", "repos_url": "https://api.github.com/users/kyunghyuncho/repos", "events_url": "https://api.github.com/users/kyunghyuncho/events{/privacy}", "received_events_url": "https://api.github.com/users/kyunghyuncho/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2017-02-10T14:35:43Z", "updated_at": "2017-02-10T14:44:52Z", "closed_at": "2017-02-10T14:44:52Z", "author_association": "NONE", "body_html": "<p>The code like below in <strong>init</strong> of a new <code>nn.module</code></p>\n<pre><code>       self.hids = []\n        for li in xrange(options['n_layers']):\n            self.hids.append([\n                nn.Linear(options['n_hid'], options['n_hid']),\n                eval('nn.{}'.format(options['act']))()\n                ])\n            indim = options['n_hid']\n\n        self.classifier = nn.Linear(options['n_hid'], 3)\n</code></pre>\n<p>The parameters of <code>nn.Linear</code> in the for-loop are not included in <code>parameters</code>, as can be seen below:</p>\n<pre><code>&lt;bound method SNLINet.parameters of SNLINet (\n  (classifier): Linear (256 -&gt; 3)\n  )\n)&gt;\n</code></pre>", "body_text": "The code like below in init of a new nn.module\n       self.hids = []\n        for li in xrange(options['n_layers']):\n            self.hids.append([\n                nn.Linear(options['n_hid'], options['n_hid']),\n                eval('nn.{}'.format(options['act']))()\n                ])\n            indim = options['n_hid']\n\n        self.classifier = nn.Linear(options['n_hid'], 3)\n\nThe parameters of nn.Linear in the for-loop are not included in parameters, as can be seen below:\n<bound method SNLINet.parameters of SNLINet (\n  (classifier): Linear (256 -> 3)\n  )\n)>", "body": "The code like below in __init__ of a new `nn.module`\r\n\r\n```\r\n       self.hids = []\r\n        for li in xrange(options['n_layers']):\r\n            self.hids.append([\r\n                nn.Linear(options['n_hid'], options['n_hid']),\r\n                eval('nn.{}'.format(options['act']))()\r\n                ])\r\n            indim = options['n_hid']\r\n\r\n        self.classifier = nn.Linear(options['n_hid'], 3)\r\n```\r\n\r\nThe parameters of `nn.Linear` in the for-loop are not included in `parameters`, as can be seen below:\r\n\r\n```\r\n<bound method SNLINet.parameters of SNLINet (\r\n  (classifier): Linear (256 -> 3)\r\n  )\r\n)>\r\n```\r\n\r\n\r\n"}