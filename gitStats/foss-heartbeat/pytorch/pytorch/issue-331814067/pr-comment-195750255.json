{"url": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/195750255", "pull_request_review_id": 129182278, "id": 195750255, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5NTc1MDI1NQ==", "diff_hunk": "@@ -0,0 +1,70 @@\n+#include <ATen/ATen.h>\n+#include <ATen/SparseTensorImpl.h>\n+\n+namespace at {\n+\n+// SparseTensorImpl defaults to a [0] size tensor with one sparse dimension and\n+// no dense dimensions.  This is kind of arbitrary but we want an empty tensor\n+// to have one dimension (zero dimensions means its scalar), and we have\n+// the invariant that dim == dimI + dimV, so *one* of the inner dimensions\n+// has to be one.\n+SparseTensorImpl::SparseTensorImpl(Type * type)\n+    : TensorImpl(type)\n+    , size_{0}\n+    , dimI_(1)\n+    , dimV_(0)\n+    , indices_(type->toDense().toScalarType(ScalarType::Long).tensor())\n+    , values_(type->toDense().tensor()) {\n+      AT_ASSERT(type->is_sparse());\n+    }\n+\n+const char * SparseTensorImpl::toString() const {\n+  // TODO: also give back type information\n+  return \"SparseTensor\";\n+}\n+IntList SparseTensorImpl::sizes() const {\n+  return size_;\n+}\n+IntList SparseTensorImpl::strides() const {\n+  AT_ERROR(\"sparse tensors do not have strides\");\n+}\n+int64_t SparseTensorImpl::dim() const {\n+  return dimI_ + dimV_;\n+}\n+Scalar SparseTensorImpl::localScalar() {\n+  AT_ERROR(\"sparse tensors cannot be scalars\");", "path": "aten/src/ATen/SparseTensorImpl.cpp", "position": null, "original_position": 35, "commit_id": "cdf42cdb1df7b90da99aa5914ec208ab1d396d2e", "original_commit_id": "557a724094be5fd8737c29bee24b7c8b9a4f2e82", "user": {"login": "ezyang", "id": 13564, "node_id": "MDQ6VXNlcjEzNTY0", "avatar_url": "https://avatars0.githubusercontent.com/u/13564?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ezyang", "html_url": "https://github.com/ezyang", "followers_url": "https://api.github.com/users/ezyang/followers", "following_url": "https://api.github.com/users/ezyang/following{/other_user}", "gists_url": "https://api.github.com/users/ezyang/gists{/gist_id}", "starred_url": "https://api.github.com/users/ezyang/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ezyang/subscriptions", "organizations_url": "https://api.github.com/users/ezyang/orgs", "repos_url": "https://api.github.com/users/ezyang/repos", "events_url": "https://api.github.com/users/ezyang/events{/privacy}", "received_events_url": "https://api.github.com/users/ezyang/received_events", "type": "User", "site_admin": false}, "body": "Fixed a lot of it; while working on it I realized that \"scalar\" sparse tensors actually make sense as a coherent concept, but I didn't go far enough to fix code to handle this correctly.", "created_at": "2018-06-15T14:19:18Z", "updated_at": "2018-11-23T15:45:38Z", "html_url": "https://github.com/pytorch/pytorch/pull/8409#discussion_r195750255", "pull_request_url": "https://api.github.com/repos/pytorch/pytorch/pulls/8409", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/195750255"}, "html": {"href": "https://github.com/pytorch/pytorch/pull/8409#discussion_r195750255"}, "pull_request": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/8409"}}, "body_html": "<p>Fixed a lot of it; while working on it I realized that \"scalar\" sparse tensors actually make sense as a coherent concept, but I didn't go far enough to fix code to handle this correctly.</p>", "body_text": "Fixed a lot of it; while working on it I realized that \"scalar\" sparse tensors actually make sense as a coherent concept, but I didn't go far enough to fix code to handle this correctly.", "in_reply_to_id": 195529017}