{"url": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/195775158", "pull_request_review_id": 129211272, "id": 195775158, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5NTc3NTE1OA==", "diff_hunk": "@@ -1399,15 +1399,23 @@\n   variants: function\n \n \n+# NB: The function overloads are removed to avoid a nasty bug where\n+# you say at::native_sparse_coo_tensor(indices, values), and then\n+# it does the dispatch based on indices (wrong wrong wrong!)  Without\n+# the variants, you must call this on type directly.\n+#\n+# Maybe this meant we were supposed to take a dtype as an argument here.\n+# Hmmmmm.", "path": "aten/src/ATen/native/native_functions.yaml", "position": 245, "original_position": 10, "commit_id": "cdf42cdb1df7b90da99aa5914ec208ab1d396d2e", "original_commit_id": "be2e57a348a039cd4330e3b3f193ffd9321aedc1", "user": {"login": "ezyang", "id": 13564, "node_id": "MDQ6VXNlcjEzNTY0", "avatar_url": "https://avatars0.githubusercontent.com/u/13564?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ezyang", "html_url": "https://github.com/ezyang", "followers_url": "https://api.github.com/users/ezyang/followers", "following_url": "https://api.github.com/users/ezyang/following{/other_user}", "gists_url": "https://api.github.com/users/ezyang/gists{/gist_id}", "starred_url": "https://api.github.com/users/ezyang/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ezyang/subscriptions", "organizations_url": "https://api.github.com/users/ezyang/orgs", "repos_url": "https://api.github.com/users/ezyang/repos", "events_url": "https://api.github.com/users/ezyang/events{/privacy}", "received_events_url": "https://api.github.com/users/ezyang/received_events", "type": "User", "site_admin": false}, "body": "I attempted this patch, but I triggered a codegen bug which I don't feel like fixing:\r\n\r\n```\r\nIn file included from torch/csrc/autograd/generated/python_torch_functions.cpp:23:0:\r\ntorch/csrc/autograd/generated/python_torch_functions_dispatch.h: In function \u2018at::Tensor torch::autograd::dispatch__native_sparse_co\r\no_tensor_unsafe(const at::Tensor&, const at::Tensor&, at::IntList)\u2019:\r\ntorch/csrc/autograd/generated/python_torch_functions_dispatch.h:584:25: error: \u2018dtype\u2019 was not declared in this scope\r\n   maybe_initialize_cuda(dtype);\r\n```", "created_at": "2018-06-15T15:21:33Z", "updated_at": "2018-11-23T15:45:40Z", "html_url": "https://github.com/pytorch/pytorch/pull/8409#discussion_r195775158", "pull_request_url": "https://api.github.com/repos/pytorch/pytorch/pulls/8409", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/195775158"}, "html": {"href": "https://github.com/pytorch/pytorch/pull/8409#discussion_r195775158"}, "pull_request": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/8409"}}, "body_html": "<p>I attempted this patch, but I triggered a codegen bug which I don't feel like fixing:</p>\n<pre><code>In file included from torch/csrc/autograd/generated/python_torch_functions.cpp:23:0:\ntorch/csrc/autograd/generated/python_torch_functions_dispatch.h: In function \u2018at::Tensor torch::autograd::dispatch__native_sparse_co\no_tensor_unsafe(const at::Tensor&amp;, const at::Tensor&amp;, at::IntList)\u2019:\ntorch/csrc/autograd/generated/python_torch_functions_dispatch.h:584:25: error: \u2018dtype\u2019 was not declared in this scope\n   maybe_initialize_cuda(dtype);\n</code></pre>", "body_text": "I attempted this patch, but I triggered a codegen bug which I don't feel like fixing:\nIn file included from torch/csrc/autograd/generated/python_torch_functions.cpp:23:0:\ntorch/csrc/autograd/generated/python_torch_functions_dispatch.h: In function \u2018at::Tensor torch::autograd::dispatch__native_sparse_co\no_tensor_unsafe(const at::Tensor&, const at::Tensor&, at::IntList)\u2019:\ntorch/csrc/autograd/generated/python_torch_functions_dispatch.h:584:25: error: \u2018dtype\u2019 was not declared in this scope\n   maybe_initialize_cuda(dtype);", "in_reply_to_id": 195223278}