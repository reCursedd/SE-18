{"url": "https://api.github.com/repos/pytorch/pytorch/issues/comments/396224359", "html_url": "https://github.com/pytorch/pytorch/pull/8278#issuecomment-396224359", "issue_url": "https://api.github.com/repos/pytorch/pytorch/issues/8278", "id": 396224359, "node_id": "MDEyOklzc3VlQ29tbWVudDM5NjIyNDM1OQ==", "user": {"login": "airofjune", "id": 20220281, "node_id": "MDQ6VXNlcjIwMjIwMjgx", "avatar_url": "https://avatars0.githubusercontent.com/u/20220281?v=4", "gravatar_id": "", "url": "https://api.github.com/users/airofjune", "html_url": "https://github.com/airofjune", "followers_url": "https://api.github.com/users/airofjune/followers", "following_url": "https://api.github.com/users/airofjune/following{/other_user}", "gists_url": "https://api.github.com/users/airofjune/gists{/gist_id}", "starred_url": "https://api.github.com/users/airofjune/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/airofjune/subscriptions", "organizations_url": "https://api.github.com/users/airofjune/orgs", "repos_url": "https://api.github.com/users/airofjune/repos", "events_url": "https://api.github.com/users/airofjune/events{/privacy}", "received_events_url": "https://api.github.com/users/airofjune/received_events", "type": "User", "site_admin": false}, "created_at": "2018-06-11T12:20:45Z", "updated_at": "2018-06-11T12:20:45Z", "author_association": "NONE", "body_html": "<p><a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=4583066\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/apaszke\">@apaszke</a> <a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=38511765\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/mruberry\">@mruberry</a><br>\nThanks for the reply.</p>\n<p>As for the cause, the reason I guess for OMP is that, test results show: a) single CPU thread, no performance drop; b) two CPU threads, but one thread do both forward and backward tasks while the other do nothing (NO OMP thread generated then), no performance drop; c) two CPU threads and both do tasks, performance drop takes place. Thus I guess OMP threads is the cause, make sense?</p>\n<p>As for the patch, it is just a backup for reasoning the issue and I do not expect it works for all cases, especially the complex ones. I believe this patch gives out an idea, that if we keep single CPU thread do both backward and forward tasks, and use some other CPU thread to take the control, then this issue can be solved.</p>", "body_text": "@apaszke @mruberry\nThanks for the reply.\nAs for the cause, the reason I guess for OMP is that, test results show: a) single CPU thread, no performance drop; b) two CPU threads, but one thread do both forward and backward tasks while the other do nothing (NO OMP thread generated then), no performance drop; c) two CPU threads and both do tasks, performance drop takes place. Thus I guess OMP threads is the cause, make sense?\nAs for the patch, it is just a backup for reasoning the issue and I do not expect it works for all cases, especially the complex ones. I believe this patch gives out an idea, that if we keep single CPU thread do both backward and forward tasks, and use some other CPU thread to take the control, then this issue can be solved.", "body": "@apaszke @mruberry \r\nThanks for the reply. \r\n\r\nAs for the cause, the reason I guess for OMP is that, test results show: a) single CPU thread, no performance drop; b) two CPU threads, but one thread do both forward and backward tasks while the other do nothing (NO OMP thread generated then), no performance drop; c) two CPU threads and both do tasks, performance drop takes place. Thus I guess OMP threads is the cause, make sense?\r\n\r\nAs for the patch, it is just a backup for reasoning the issue and I do not expect it works for all cases, especially the complex ones. I believe this patch gives out an idea, that if we keep single CPU thread do both backward and forward tasks, and use some other CPU thread to take the control, then this issue can be solved.       "}