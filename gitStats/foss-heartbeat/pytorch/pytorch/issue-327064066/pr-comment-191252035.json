{"url": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/191252035", "pull_request_review_id": 123787810, "id": 191252035, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5MTI1MjAzNQ==", "diff_hunk": "@@ -226,21 +238,22 @@ def build_While(ctx, stmt):\n             # annotations in this case\n             raise NotSupportedError(None, \"else branches of while loops aren't supported\")\n         r = ctx.make_range(stmt.lineno, stmt.col_offset, stmt.col_offset + len(\"while\"))\n-        return While(r, build_expr(ctx, stmt.test), [build_stmt(ctx, s) for s in stmt.body])\n+        return While(r, build_expr(ctx, stmt.test),\n+                     ignore_docstring([build_stmt(ctx, s) for s in stmt.body]))\n \n     @staticmethod\n     def build_For(ctx, stmt):\n         r = ctx.make_range(stmt.lineno, stmt.col_offset, stmt.col_offset + len(\"for\"))\n         return For(\n             r, [StmtBuilder.get_assign_lhs_expr(ctx, stmt.target)],\n-            [build_expr(ctx, stmt.iter)], [build_stmt(ctx, s) for s in stmt.body])\n+            [build_expr(ctx, stmt.iter)], ignore_docstring([build_stmt(ctx, s) for s in stmt.body]))\n \n     @staticmethod\n     def build_If(ctx, stmt):\n         r = ctx.make_range(stmt.lineno, stmt.col_offset, stmt.col_offset + len(\"if\"))\n         return If(r, build_expr(ctx, stmt.test),\n-                  [build_stmt(ctx, s) for s in stmt.body],\n-                  [build_stmt(ctx, s) for s in stmt.orelse])\n+                  ignore_docstring([build_stmt(ctx, s) for s in stmt.body]),\n+                  ignore_docstring([build_stmt(ctx, s) for s in stmt.orelse]))", "path": "torch/jit/frontend.py", "position": null, "original_position": 60, "commit_id": "ef548590ac61d6040b86f16399946d55edea0217", "original_commit_id": "19acba83641989083c3666a27abab3d167246a63", "user": {"login": "apaszke", "id": 4583066, "node_id": "MDQ6VXNlcjQ1ODMwNjY=", "avatar_url": "https://avatars3.githubusercontent.com/u/4583066?v=4", "gravatar_id": "", "url": "https://api.github.com/users/apaszke", "html_url": "https://github.com/apaszke", "followers_url": "https://api.github.com/users/apaszke/followers", "following_url": "https://api.github.com/users/apaszke/following{/other_user}", "gists_url": "https://api.github.com/users/apaszke/gists{/gist_id}", "starred_url": "https://api.github.com/users/apaszke/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/apaszke/subscriptions", "organizations_url": "https://api.github.com/users/apaszke/orgs", "repos_url": "https://api.github.com/users/apaszke/repos", "events_url": "https://api.github.com/users/apaszke/events{/privacy}", "received_events_url": "https://api.github.com/users/apaszke/received_events", "type": "User", "site_admin": false}, "body": "I don't really like the fact that we have to put `ignore_docstring` in so many places, and it's likely we'll need to insert more filters like this one in the future. Can you please add a `build_stmts(ctx, stmts)` function that will do the list comprehension and filter out everything that's unnecessary?\r\n\r\nAlso, I think the `DocString` class is a bit unnecessary. Let's just make it return `None` to mean the absence of a meaningful statement.", "created_at": "2018-05-28T17:46:58Z", "updated_at": "2018-11-23T15:44:40Z", "html_url": "https://github.com/pytorch/pytorch/pull/7898#discussion_r191252035", "pull_request_url": "https://api.github.com/repos/pytorch/pytorch/pulls/7898", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/191252035"}, "html": {"href": "https://github.com/pytorch/pytorch/pull/7898#discussion_r191252035"}, "pull_request": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/7898"}}, "body_html": "<p>I don't really like the fact that we have to put <code>ignore_docstring</code> in so many places, and it's likely we'll need to insert more filters like this one in the future. Can you please add a <code>build_stmts(ctx, stmts)</code> function that will do the list comprehension and filter out everything that's unnecessary?</p>\n<p>Also, I think the <code>DocString</code> class is a bit unnecessary. Let's just make it return <code>None</code> to mean the absence of a meaningful statement.</p>", "body_text": "I don't really like the fact that we have to put ignore_docstring in so many places, and it's likely we'll need to insert more filters like this one in the future. Can you please add a build_stmts(ctx, stmts) function that will do the list comprehension and filter out everything that's unnecessary?\nAlso, I think the DocString class is a bit unnecessary. Let's just make it return None to mean the absence of a meaningful statement."}