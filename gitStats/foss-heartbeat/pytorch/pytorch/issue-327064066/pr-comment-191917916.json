{"url": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/191917916", "pull_request_review_id": 124586952, "id": 191917916, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5MTkxNzkxNg==", "diff_hunk": "@@ -369,14 +369,18 @@ def _script_graph(fn, _frames_up=0):\n \n def script(fn, _frames_up=0):\n     graph = _script_graph(fn, _frames_up=_frames_up + 1)\n-    return torch._C.GraphExecutor(graph, True)\n+    fn_attributes = {i: getattr(fn, i) for i in functools.WRAPPER_ASSIGNMENTS}\n+    Wrapper = type('GraphExecutorWrapper', (torch._C.GraphExecutor, ), fn_attributes)\n+    return Wrapper(graph, True)\n \n \n ScriptMethodStub = namedtuple('ScriptMethodStub', ('resolution_callback', 'ast'))\n \n \n def script_method(fn):\n-    return ScriptMethodStub(createResolutionCallback(frames_up=1), get_jit_ast(fn))\n+    fn_attributes = {i: getattr(fn, i) for i in functools.WRAPPER_ASSIGNMENTS}\n+    Wrapper = type('ScriptMethodStubWrapper', (ScriptMethodStub, ), fn_attributes)\n+    return Wrapper(createResolutionCallback(frames_up=1), get_jit_ast(fn))", "path": "torch/jit/__init__.py", "position": null, "original_position": 26, "commit_id": "ef548590ac61d6040b86f16399946d55edea0217", "original_commit_id": "76a13904d21bd4efcf7f8efe1998efae49fb3079", "user": {"login": "zasdfgbnm", "id": 1032377, "node_id": "MDQ6VXNlcjEwMzIzNzc=", "avatar_url": "https://avatars2.githubusercontent.com/u/1032377?v=4", "gravatar_id": "", "url": "https://api.github.com/users/zasdfgbnm", "html_url": "https://github.com/zasdfgbnm", "followers_url": "https://api.github.com/users/zasdfgbnm/followers", "following_url": "https://api.github.com/users/zasdfgbnm/following{/other_user}", "gists_url": "https://api.github.com/users/zasdfgbnm/gists{/gist_id}", "starred_url": "https://api.github.com/users/zasdfgbnm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/zasdfgbnm/subscriptions", "organizations_url": "https://api.github.com/users/zasdfgbnm/orgs", "repos_url": "https://api.github.com/users/zasdfgbnm/repos", "events_url": "https://api.github.com/users/zasdfgbnm/events{/privacy}", "received_events_url": "https://api.github.com/users/zasdfgbnm/received_events", "type": "User", "site_admin": false}, "body": "@apaszke Actually in my first commit of this PR https://github.com/pytorch/pytorch/pull/7898/commits/313a65c8c54a74c23ef6faa8b6ce7bd5f5de7489, I was using `functools.wraps`, but all the python 2.7 build fails. You can check at, for example:\r\nhttps://ci.pytorch.org/jenkins/job/pytorch-builds/job/pytorch-linux-trusty-py2.7.9-build/7788/console\r\nThe error message was:\r\n```\r\n15:43:49 Traceback (most recent call last):\r\n15:43:49   File \"build.py\", line 2, in <module>\r\n15:43:49     import torch\r\n15:43:49   File \"/opt/python/2.7.9/lib/python2.7/site-packages/torch/__init__.py\", line 282, in <module>\r\n15:43:49     import torch.jit\r\n15:43:49   File \"/opt/python/2.7.9/lib/python2.7/site-packages/torch/jit/__init__.py\", line 721, in <module>\r\n15:43:49     class _ConstSequential(_ConstModuleList):\r\n15:43:49   File \"/opt/python/2.7.9/lib/python2.7/site-packages/torch/jit/__init__.py\", line 727, in _ConstSequential\r\n15:43:49     @script_method\r\n15:43:49   File \"/opt/python/2.7.9/lib/python2.7/site-packages/torch/jit/__init__.py\", line 384, in script_method\r\n15:43:49     class Wrapper(ScriptMethodStub):\r\n15:43:49   File \"/opt/python/2.7.9/lib/python2.7/functools.py\", line 33, in update_wrapper\r\n15:43:49     setattr(wrapper, attr, getattr(wrapped, attr))\r\n15:43:49 AttributeError: attribute '__doc__' of 'type' objects is not writable\r\n15:43:49 + cleanup\r\n```\r\n\r\nAlso, the following experiment would be helpful to demonstrate the problem:\r\n```python\r\nfrom __future__ import print_function\r\nimport functools\r\nimport platform\r\nfrom collections import *\r\n\r\nprint(platform.python_version())\r\nprint(platform.python_implementation())\r\nprint(platform.python_compiler())\r\n\r\nA = namedtuple('A', ('X', 'Y'))\r\n\r\ndef f():\r\n    \"\"\"a function\"\"\"\r\n    pass\r\n\r\ntry:\r\n    @functools.wraps(f, updated=())\r\n    class B(A):\r\n        pass\r\n\r\n    print(B.__doc__)\r\nexcept AttributeError as e:\r\n    print('Error @functools.wraps:', e)\r\n\r\ntry:\r\n    a = A(1,2)\r\n    a.__doc__ = 'test'\r\nexcept AttributeError as e:\r\n    print('Error @setattr', e)\r\n```\r\nOn my python2, I get:\r\n```\r\n2.7.10\r\nCPython\r\nGCC 4.2.1 Compatible Apple LLVM 9.0.0 (clang-900.0.31)\r\nError @functools.wraps: attribute '__doc__' of 'type' objects is not writable\r\nError @setattr 'A' object attribute '__doc__' is read-only\r\n```\r\nAnd on python3, I get:\r\n```\r\n3.6.5\r\nCPython\r\nGCC 4.2.1 Compatible Clang 4.0.1 (tags/RELEASE_401/final)\r\na function\r\nError @setattr 'A' object attribute '__doc__' is read-only\r\n```\r\nThe above example shows that we do need this dynamic subclass creation, or at least some other hacking like this. The reason for this error I think is because objects of namedtuple are immutable, like tuples.\r\n\r\nMaybe a better solution is to make ScriptMethodStub a class rather than a namedtuple?", "created_at": "2018-05-30T20:48:47Z", "updated_at": "2018-11-23T15:44:46Z", "html_url": "https://github.com/pytorch/pytorch/pull/7898#discussion_r191917916", "pull_request_url": "https://api.github.com/repos/pytorch/pytorch/pulls/7898", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/191917916"}, "html": {"href": "https://github.com/pytorch/pytorch/pull/7898#discussion_r191917916"}, "pull_request": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/7898"}}, "body_html": "<p><a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=4583066\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/apaszke\">@apaszke</a> Actually in my first commit of this PR <a class=\"commit-link\" data-hovercard-type=\"commit\" data-hovercard-url=\"https://github.com/pytorch/pytorch/commit/313a65c8c54a74c23ef6faa8b6ce7bd5f5de7489/hovercard\" href=\"https://github.com/pytorch/pytorch/commit/313a65c8c54a74c23ef6faa8b6ce7bd5f5de7489\"><tt>313a65c</tt></a>, I was using <code>functools.wraps</code>, but all the python 2.7 build fails. You can check at, for example:<br>\n<a href=\"https://ci.pytorch.org/jenkins/job/pytorch-builds/job/pytorch-linux-trusty-py2.7.9-build/7788/console\" rel=\"nofollow\">https://ci.pytorch.org/jenkins/job/pytorch-builds/job/pytorch-linux-trusty-py2.7.9-build/7788/console</a><br>\nThe error message was:</p>\n<pre><code>15:43:49 Traceback (most recent call last):\n15:43:49   File \"build.py\", line 2, in &lt;module&gt;\n15:43:49     import torch\n15:43:49   File \"/opt/python/2.7.9/lib/python2.7/site-packages/torch/__init__.py\", line 282, in &lt;module&gt;\n15:43:49     import torch.jit\n15:43:49   File \"/opt/python/2.7.9/lib/python2.7/site-packages/torch/jit/__init__.py\", line 721, in &lt;module&gt;\n15:43:49     class _ConstSequential(_ConstModuleList):\n15:43:49   File \"/opt/python/2.7.9/lib/python2.7/site-packages/torch/jit/__init__.py\", line 727, in _ConstSequential\n15:43:49     @script_method\n15:43:49   File \"/opt/python/2.7.9/lib/python2.7/site-packages/torch/jit/__init__.py\", line 384, in script_method\n15:43:49     class Wrapper(ScriptMethodStub):\n15:43:49   File \"/opt/python/2.7.9/lib/python2.7/functools.py\", line 33, in update_wrapper\n15:43:49     setattr(wrapper, attr, getattr(wrapped, attr))\n15:43:49 AttributeError: attribute '__doc__' of 'type' objects is not writable\n15:43:49 + cleanup\n</code></pre>\n<p>Also, the following experiment would be helpful to demonstrate the problem:</p>\n<div class=\"highlight highlight-source-python\"><pre><span class=\"pl-k\">from</span> <span class=\"pl-c1\">__future__</span> <span class=\"pl-k\">import</span> print_function\n<span class=\"pl-k\">import</span> functools\n<span class=\"pl-k\">import</span> platform\n<span class=\"pl-k\">from</span> collections <span class=\"pl-k\">import</span> <span class=\"pl-k\">*</span>\n\n<span class=\"pl-c1\">print</span>(platform.python_version())\n<span class=\"pl-c1\">print</span>(platform.python_implementation())\n<span class=\"pl-c1\">print</span>(platform.python_compiler())\n\nA <span class=\"pl-k\">=</span> namedtuple(<span class=\"pl-s\"><span class=\"pl-pds\">'</span>A<span class=\"pl-pds\">'</span></span>, (<span class=\"pl-s\"><span class=\"pl-pds\">'</span>X<span class=\"pl-pds\">'</span></span>, <span class=\"pl-s\"><span class=\"pl-pds\">'</span>Y<span class=\"pl-pds\">'</span></span>))\n\n<span class=\"pl-k\">def</span> <span class=\"pl-en\">f</span>():\n    <span class=\"pl-s\"><span class=\"pl-pds\">\"\"\"</span>a function<span class=\"pl-pds\">\"\"\"</span></span>\n    <span class=\"pl-k\">pass</span>\n\n<span class=\"pl-k\">try</span>:\n    <span class=\"pl-en\">@functools.wraps</span>(f, <span class=\"pl-v\">updated</span><span class=\"pl-k\">=</span>())\n    <span class=\"pl-k\">class</span> <span class=\"pl-en\">B</span>(<span class=\"pl-e\">A</span>):\n        <span class=\"pl-k\">pass</span>\n\n    <span class=\"pl-c1\">print</span>(B.<span class=\"pl-c1\">__doc__</span>)\n<span class=\"pl-k\">except</span> <span class=\"pl-c1\">AttributeError</span> <span class=\"pl-k\">as</span> e:\n    <span class=\"pl-c1\">print</span>(<span class=\"pl-s\"><span class=\"pl-pds\">'</span>Error @functools.wraps:<span class=\"pl-pds\">'</span></span>, e)\n\n<span class=\"pl-k\">try</span>:\n    a <span class=\"pl-k\">=</span> A(<span class=\"pl-c1\">1</span>,<span class=\"pl-c1\">2</span>)\n    a.<span class=\"pl-c1\">__doc__</span> <span class=\"pl-k\">=</span> <span class=\"pl-s\"><span class=\"pl-pds\">'</span>test<span class=\"pl-pds\">'</span></span>\n<span class=\"pl-k\">except</span> <span class=\"pl-c1\">AttributeError</span> <span class=\"pl-k\">as</span> e:\n    <span class=\"pl-c1\">print</span>(<span class=\"pl-s\"><span class=\"pl-pds\">'</span>Error @setattr<span class=\"pl-pds\">'</span></span>, e)</pre></div>\n<p>On my python2, I get:</p>\n<pre><code>2.7.10\nCPython\nGCC 4.2.1 Compatible Apple LLVM 9.0.0 (clang-900.0.31)\nError @functools.wraps: attribute '__doc__' of 'type' objects is not writable\nError @setattr 'A' object attribute '__doc__' is read-only\n</code></pre>\n<p>And on python3, I get:</p>\n<pre><code>3.6.5\nCPython\nGCC 4.2.1 Compatible Clang 4.0.1 (tags/RELEASE_401/final)\na function\nError @setattr 'A' object attribute '__doc__' is read-only\n</code></pre>\n<p>The above example shows that we do need this dynamic subclass creation, or at least some other hacking like this. The reason for this error I think is because objects of namedtuple are immutable, like tuples.</p>\n<p>Maybe a better solution is to make ScriptMethodStub a class rather than a namedtuple?</p>", "body_text": "@apaszke Actually in my first commit of this PR 313a65c, I was using functools.wraps, but all the python 2.7 build fails. You can check at, for example:\nhttps://ci.pytorch.org/jenkins/job/pytorch-builds/job/pytorch-linux-trusty-py2.7.9-build/7788/console\nThe error message was:\n15:43:49 Traceback (most recent call last):\n15:43:49   File \"build.py\", line 2, in <module>\n15:43:49     import torch\n15:43:49   File \"/opt/python/2.7.9/lib/python2.7/site-packages/torch/__init__.py\", line 282, in <module>\n15:43:49     import torch.jit\n15:43:49   File \"/opt/python/2.7.9/lib/python2.7/site-packages/torch/jit/__init__.py\", line 721, in <module>\n15:43:49     class _ConstSequential(_ConstModuleList):\n15:43:49   File \"/opt/python/2.7.9/lib/python2.7/site-packages/torch/jit/__init__.py\", line 727, in _ConstSequential\n15:43:49     @script_method\n15:43:49   File \"/opt/python/2.7.9/lib/python2.7/site-packages/torch/jit/__init__.py\", line 384, in script_method\n15:43:49     class Wrapper(ScriptMethodStub):\n15:43:49   File \"/opt/python/2.7.9/lib/python2.7/functools.py\", line 33, in update_wrapper\n15:43:49     setattr(wrapper, attr, getattr(wrapped, attr))\n15:43:49 AttributeError: attribute '__doc__' of 'type' objects is not writable\n15:43:49 + cleanup\n\nAlso, the following experiment would be helpful to demonstrate the problem:\nfrom __future__ import print_function\nimport functools\nimport platform\nfrom collections import *\n\nprint(platform.python_version())\nprint(platform.python_implementation())\nprint(platform.python_compiler())\n\nA = namedtuple('A', ('X', 'Y'))\n\ndef f():\n    \"\"\"a function\"\"\"\n    pass\n\ntry:\n    @functools.wraps(f, updated=())\n    class B(A):\n        pass\n\n    print(B.__doc__)\nexcept AttributeError as e:\n    print('Error @functools.wraps:', e)\n\ntry:\n    a = A(1,2)\n    a.__doc__ = 'test'\nexcept AttributeError as e:\n    print('Error @setattr', e)\nOn my python2, I get:\n2.7.10\nCPython\nGCC 4.2.1 Compatible Apple LLVM 9.0.0 (clang-900.0.31)\nError @functools.wraps: attribute '__doc__' of 'type' objects is not writable\nError @setattr 'A' object attribute '__doc__' is read-only\n\nAnd on python3, I get:\n3.6.5\nCPython\nGCC 4.2.1 Compatible Clang 4.0.1 (tags/RELEASE_401/final)\na function\nError @setattr 'A' object attribute '__doc__' is read-only\n\nThe above example shows that we do need this dynamic subclass creation, or at least some other hacking like this. The reason for this error I think is because objects of namedtuple are immutable, like tuples.\nMaybe a better solution is to make ScriptMethodStub a class rather than a namedtuple?", "in_reply_to_id": 191892397}