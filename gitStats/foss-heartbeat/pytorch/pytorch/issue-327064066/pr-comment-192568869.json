{"url": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/192568869", "pull_request_review_id": 125375296, "id": 192568869, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5MjU2ODg2OQ==", "diff_hunk": "@@ -559,6 +564,18 @@ def init_then_register(self, *args, **kwargs):\n         return super(ScriptMeta, cls).__init__(name, bases, attrs)\n \n \n+class ScriptMethodWrapper(object):\n+    def __init__(self, script_method):\n+        self.script_method = script_method\n+\n+    def __call__(self, *args, **kwargs):\n+        return self.script_method(*args, **kwargs)\n+\n+\n+def _build_wrap(wrap, script_method):\n+    return functools.wraps(wrap)(ScriptMethodWrapper(script_method))", "path": "torch/jit/__init__.py", "position": null, "original_position": 57, "commit_id": "ef548590ac61d6040b86f16399946d55edea0217", "original_commit_id": "d62427aed4c5862669a77e277f191220d70adac7", "user": {"login": "zasdfgbnm", "id": 1032377, "node_id": "MDQ6VXNlcjEwMzIzNzc=", "avatar_url": "https://avatars2.githubusercontent.com/u/1032377?v=4", "gravatar_id": "", "url": "https://api.github.com/users/zasdfgbnm", "html_url": "https://github.com/zasdfgbnm", "followers_url": "https://api.github.com/users/zasdfgbnm/followers", "following_url": "https://api.github.com/users/zasdfgbnm/following{/other_user}", "gists_url": "https://api.github.com/users/zasdfgbnm/gists{/gist_id}", "starred_url": "https://api.github.com/users/zasdfgbnm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/zasdfgbnm/subscriptions", "organizations_url": "https://api.github.com/users/zasdfgbnm/orgs", "repos_url": "https://api.github.com/users/zasdfgbnm/repos", "events_url": "https://api.github.com/users/zasdfgbnm/events{/privacy}", "received_events_url": "https://api.github.com/users/zasdfgbnm/received_events", "type": "User", "site_admin": false}, "body": "Yes, I think it is necessary, because `torch._C.ScriptMethod` has many read-only :\r\n```python\r\nimport torch\r\nimport functools\r\n\r\ndef f():\r\n    \"\"\"a function\"\"\"\r\n    pass\r\n\r\nclass M(torch.jit.ScriptModule):\r\n\r\n    @torch.jit.script_method\r\n    def unchanged(self, x):\r\n        return x\r\n\r\n    def forward(self, thing):\r\n        return self.unchanged(thing)\r\n\r\nm = M()\r\nfunctools.wraps(f)(m.unchanged)\r\n```\r\ngives\r\n```\r\nTraceback (most recent call last):\r\n  File \"test3.py\", line 18, in <module>\r\n    functools.wraps(f)(m.unchanged)\r\n  File \"/Users/gaoxiang/anaconda/lib/python3.6/functools.py\", line 65, in update_wrapper\r\n    setattr(wrapper, attr, value)\r\nAttributeError: 'torch._C.ScriptMethod' object attribute '__module__' is read-only\r\n```", "created_at": "2018-06-02T19:57:52Z", "updated_at": "2018-11-23T15:44:54Z", "html_url": "https://github.com/pytorch/pytorch/pull/7898#discussion_r192568869", "pull_request_url": "https://api.github.com/repos/pytorch/pytorch/pulls/7898", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/192568869"}, "html": {"href": "https://github.com/pytorch/pytorch/pull/7898#discussion_r192568869"}, "pull_request": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/7898"}}, "body_html": "<p>Yes, I think it is necessary, because <code>torch._C.ScriptMethod</code> has many read-only :</p>\n<div class=\"highlight highlight-source-python\"><pre><span class=\"pl-k\">import</span> torch\n<span class=\"pl-k\">import</span> functools\n\n<span class=\"pl-k\">def</span> <span class=\"pl-en\">f</span>():\n    <span class=\"pl-s\"><span class=\"pl-pds\">\"\"\"</span>a function<span class=\"pl-pds\">\"\"\"</span></span>\n    <span class=\"pl-k\">pass</span>\n\n<span class=\"pl-k\">class</span> <span class=\"pl-en\">M</span>(<span class=\"pl-e\">torch</span>.<span class=\"pl-e\">jit</span>.<span class=\"pl-e\">ScriptModule</span>):\n\n    <span class=\"pl-en\">@torch.jit.script_method</span>\n    <span class=\"pl-k\">def</span> <span class=\"pl-en\">unchanged</span>(<span class=\"pl-smi\"><span class=\"pl-smi\">self</span></span>, <span class=\"pl-smi\">x</span>):\n        <span class=\"pl-k\">return</span> x\n\n    <span class=\"pl-k\">def</span> <span class=\"pl-en\">forward</span>(<span class=\"pl-smi\"><span class=\"pl-smi\">self</span></span>, <span class=\"pl-smi\">thing</span>):\n        <span class=\"pl-k\">return</span> <span class=\"pl-c1\">self</span>.unchanged(thing)\n\nm <span class=\"pl-k\">=</span> M()\nfunctools.wraps(f)(m.unchanged)</pre></div>\n<p>gives</p>\n<pre><code>Traceback (most recent call last):\n  File \"test3.py\", line 18, in &lt;module&gt;\n    functools.wraps(f)(m.unchanged)\n  File \"/Users/gaoxiang/anaconda/lib/python3.6/functools.py\", line 65, in update_wrapper\n    setattr(wrapper, attr, value)\nAttributeError: 'torch._C.ScriptMethod' object attribute '__module__' is read-only\n</code></pre>", "body_text": "Yes, I think it is necessary, because torch._C.ScriptMethod has many read-only :\nimport torch\nimport functools\n\ndef f():\n    \"\"\"a function\"\"\"\n    pass\n\nclass M(torch.jit.ScriptModule):\n\n    @torch.jit.script_method\n    def unchanged(self, x):\n        return x\n\n    def forward(self, thing):\n        return self.unchanged(thing)\n\nm = M()\nfunctools.wraps(f)(m.unchanged)\ngives\nTraceback (most recent call last):\n  File \"test3.py\", line 18, in <module>\n    functools.wraps(f)(m.unchanged)\n  File \"/Users/gaoxiang/anaconda/lib/python3.6/functools.py\", line 65, in update_wrapper\n    setattr(wrapper, attr, value)\nAttributeError: 'torch._C.ScriptMethod' object attribute '__module__' is read-only", "in_reply_to_id": 192567642}