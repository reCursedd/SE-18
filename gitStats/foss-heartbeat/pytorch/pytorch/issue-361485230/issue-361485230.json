{"url": "https://api.github.com/repos/pytorch/pytorch/issues/11825", "repository_url": "https://api.github.com/repos/pytorch/pytorch", "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/11825/labels{/name}", "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/11825/comments", "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/11825/events", "html_url": "https://github.com/pytorch/pytorch/issues/11825", "id": 361485230, "node_id": "MDU6SXNzdWUzNjE0ODUyMzA=", "number": 11825, "title": "[Feature request] correct semantics on tensors with zero elements", "user": {"login": "nikhilmishra000", "id": 9015977, "node_id": "MDQ6VXNlcjkwMTU5Nzc=", "avatar_url": "https://avatars2.githubusercontent.com/u/9015977?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nikhilmishra000", "html_url": "https://github.com/nikhilmishra000", "followers_url": "https://api.github.com/users/nikhilmishra000/followers", "following_url": "https://api.github.com/users/nikhilmishra000/following{/other_user}", "gists_url": "https://api.github.com/users/nikhilmishra000/gists{/gist_id}", "starred_url": "https://api.github.com/users/nikhilmishra000/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nikhilmishra000/subscriptions", "organizations_url": "https://api.github.com/users/nikhilmishra000/orgs", "repos_url": "https://api.github.com/users/nikhilmishra000/repos", "events_url": "https://api.github.com/users/nikhilmishra000/events{/privacy}", "received_events_url": "https://api.github.com/users/nikhilmishra000/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-09-18T21:09:41Z", "updated_at": "2018-09-18T21:36:43Z", "closed_at": "2018-09-18T21:36:43Z", "author_association": "NONE", "body_html": "<p>In numpy, you can do something like <code>np.zeros((0, 5))</code> and get a 2d array with shape(0, 5), even though the number of elements is zero. These semantics are very convenient when concatenating/stacking/indexing with this array.</p>\n<p>However, any zero-element tensors in pytorch get automatically flattened to 1d with shape(0,). Can pytorch better mimic numpy behavior?</p>", "body_text": "In numpy, you can do something like np.zeros((0, 5)) and get a 2d array with shape(0, 5), even though the number of elements is zero. These semantics are very convenient when concatenating/stacking/indexing with this array.\nHowever, any zero-element tensors in pytorch get automatically flattened to 1d with shape(0,). Can pytorch better mimic numpy behavior?", "body": "In numpy, you can do something like `np.zeros((0, 5))` and get a 2d array with shape(0, 5), even though the number of elements is zero. These semantics are very convenient when concatenating/stacking/indexing with this array.\r\n\r\nHowever, any zero-element tensors in pytorch get automatically flattened to 1d with shape(0,). Can pytorch better mimic numpy behavior?"}