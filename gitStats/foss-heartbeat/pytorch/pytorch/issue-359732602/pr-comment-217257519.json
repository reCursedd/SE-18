{"url": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/217257519", "pull_request_review_id": 154925576, "id": 217257519, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIxNzI1NzUxOQ==", "diff_hunk": "@@ -2276,22 +2276,22 @@ def affine_grid(theta, size):\n def pad(input, pad, mode='constant', value=0):\n     r\"\"\"Pads tensor.\n \n-    `Nd` constant padding:  The number of dimensions to pad is\n-        :math:`\\left\\lfloor\\frac{len(padding)}{2}\\right\\rfloor` and the dimensions that get padded begins with the\n-        last dimension and moves forward. See below for examples.\n-\n-    `1D`, `2D` and `3D` \"reflect\" / \"replicate\" padding:\n-        for 1D:\n-                3D input tensor with padding of the form `(padLeft, padRight)`\n-        for 2D:\n-                4D input tensor with padding of the form `(padLeft, padRight, padTop, padBottom)`.\n-        for 3D:\n-                5D input tensor with padding of the form\n-                `(padLeft, padRight, padTop, padBottom, padFront, padBack)`. No \"reflect\" implementation.\n-\n-    See :class:`torch.nn.ConstantPad2d`, :class:`torch.nn.ReflectionPad2d`, and\n-    :class:`torch.nn.ReplicationPad2d` for concrete examples on how each of the\n-    padding modes works.\n+    Pading size:\n+        The number of dimensions to pad is :math:`\\left\\lfloor\\frac{len(pad)}{2}\\right\\rfloor`", "path": "torch/nn/functional.py", "position": null, "original_position": 21, "commit_id": "1491d898be9415905852cf8d69c7dc2c3117bca6", "original_commit_id": "ca87597ade35e5403b951a22d5cd09f3e891915e", "user": {"login": "SsnL", "id": 5674597, "node_id": "MDQ6VXNlcjU2NzQ1OTc=", "avatar_url": "https://avatars2.githubusercontent.com/u/5674597?v=4", "gravatar_id": "", "url": "https://api.github.com/users/SsnL", "html_url": "https://github.com/SsnL", "followers_url": "https://api.github.com/users/SsnL/followers", "following_url": "https://api.github.com/users/SsnL/following{/other_user}", "gists_url": "https://api.github.com/users/SsnL/gists{/gist_id}", "starred_url": "https://api.github.com/users/SsnL/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/SsnL/subscriptions", "organizations_url": "https://api.github.com/users/SsnL/orgs", "repos_url": "https://api.github.com/users/SsnL/repos", "events_url": "https://api.github.com/users/SsnL/events{/privacy}", "received_events_url": "https://api.github.com/users/SsnL/received_events", "type": "User", "site_admin": false}, "body": "While you are at this, could you change to numerator to `\\text{len(pad)}` please? Thanks!", "created_at": "2018-09-13T04:32:42Z", "updated_at": "2018-11-23T15:51:15Z", "html_url": "https://github.com/pytorch/pytorch/pull/11623#discussion_r217257519", "pull_request_url": "https://api.github.com/repos/pytorch/pytorch/pulls/11623", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/217257519"}, "html": {"href": "https://github.com/pytorch/pytorch/pull/11623#discussion_r217257519"}, "pull_request": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/11623"}}, "body_html": "<p>While you are at this, could you change to numerator to <code>\\text{len(pad)}</code> please? Thanks!</p>", "body_text": "While you are at this, could you change to numerator to \\text{len(pad)} please? Thanks!"}