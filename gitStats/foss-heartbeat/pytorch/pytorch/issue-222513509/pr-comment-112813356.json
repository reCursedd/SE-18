{"url": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/112813356", "pull_request_review_id": 34160998, "id": 112813356, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDExMjgxMzM1Ng==", "diff_hunk": "@@ -0,0 +1,169 @@\n+from .batchnorm import _BatchNorm\n+from .. import functional as F\n+\n+\n+class _InstanceNorm(_BatchNorm):\n+    def __init__(self, num_features, eps=1e-5, momentum=0.1, affine=False):\n+        super(_InstanceNorm, self).__init__(\n+            num_features, eps, momentum, affine)\n+\n+    def forward(self, input):\n+        self._check_input_dim(input)\n+\n+        b, c = input.size(0), input.size(1)\n+\n+        # Repeat stored stats and affine transform params\n+        running_mean = self.running_mean.repeat(b)\n+        running_var = self.running_var.repeat(b)\n+\n+        weight, bias = None, None\n+        if self.affine:\n+            weight = self.weight.repeat(b)\n+            bias = self.bias.repeat(b)\n+\n+        # Apply instance norm\n+        input_reshaped = input.view(1, b * c, *input.size()[2:])\n+\n+        out = F.batch_norm(\n+            input_reshaped, running_mean, running_var, weight, bias,\n+            self.training, self.momentum, self.eps)\n+\n+        # Reshape back\n+        self.running_mean.copy_(running_mean.view(b, c).mean(0))\n+        self.running_var.copy_(running_var.view(b, c).mean(0))\n+\n+        return out.view(b, c, *input.size()[2:])\n+\n+    def force_eval(self):", "path": "torch/nn/modules/instancenorm.py", "position": null, "original_position": 37, "commit_id": "85cd53bb544fcbdf88ec8cd41695778eac8c1464", "original_commit_id": "c28cf41e34bf6aecf6c8b03db2afb372331bb1a5", "user": {"login": "DmitryUlyanov", "id": 6727524, "node_id": "MDQ6VXNlcjY3Mjc1MjQ=", "avatar_url": "https://avatars2.githubusercontent.com/u/6727524?v=4", "gravatar_id": "", "url": "https://api.github.com/users/DmitryUlyanov", "html_url": "https://github.com/DmitryUlyanov", "followers_url": "https://api.github.com/users/DmitryUlyanov/followers", "following_url": "https://api.github.com/users/DmitryUlyanov/following{/other_user}", "gists_url": "https://api.github.com/users/DmitryUlyanov/gists{/gist_id}", "starred_url": "https://api.github.com/users/DmitryUlyanov/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/DmitryUlyanov/subscriptions", "organizations_url": "https://api.github.com/users/DmitryUlyanov/orgs", "repos_url": "https://api.github.com/users/DmitryUlyanov/repos", "events_url": "https://api.github.com/users/DmitryUlyanov/events{/privacy}", "received_events_url": "https://api.github.com/users/DmitryUlyanov/received_events", "type": "User", "site_admin": false}, "body": "Removed. Anyway there is a way to force it with `.train(False)`", "created_at": "2017-04-22T16:42:45Z", "updated_at": "2018-11-23T15:33:08Z", "html_url": "https://github.com/pytorch/pytorch/pull/1283#discussion_r112813356", "pull_request_url": "https://api.github.com/repos/pytorch/pytorch/pulls/1283", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/112813356"}, "html": {"href": "https://github.com/pytorch/pytorch/pull/1283#discussion_r112813356"}, "pull_request": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/1283"}}, "body_html": "<p>Removed. Anyway there is a way to force it with <code>.train(False)</code></p>", "body_text": "Removed. Anyway there is a way to force it with .train(False)", "in_reply_to_id": 112806178}