{"url": "https://api.github.com/repos/pytorch/pytorch/issues/comments/339045535", "html_url": "https://github.com/pytorch/pytorch/pull/3263#issuecomment-339045535", "issue_url": "https://api.github.com/repos/pytorch/pytorch/issues/3263", "id": 339045535, "node_id": "MDEyOklzc3VlQ29tbWVudDMzOTA0NTUzNQ==", "user": {"login": "colesbury", "id": 655866, "node_id": "MDQ6VXNlcjY1NTg2Ng==", "avatar_url": "https://avatars1.githubusercontent.com/u/655866?v=4", "gravatar_id": "", "url": "https://api.github.com/users/colesbury", "html_url": "https://github.com/colesbury", "followers_url": "https://api.github.com/users/colesbury/followers", "following_url": "https://api.github.com/users/colesbury/following{/other_user}", "gists_url": "https://api.github.com/users/colesbury/gists{/gist_id}", "starred_url": "https://api.github.com/users/colesbury/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/colesbury/subscriptions", "organizations_url": "https://api.github.com/users/colesbury/orgs", "repos_url": "https://api.github.com/users/colesbury/repos", "events_url": "https://api.github.com/users/colesbury/events{/privacy}", "received_events_url": "https://api.github.com/users/colesbury/received_events", "type": "User", "site_admin": false}, "created_at": "2017-10-24T16:13:57Z", "updated_at": "2017-10-24T16:13:57Z", "author_association": "MEMBER", "body_html": "<p>Two differences from the NumPy implementations:</p>\n<p><a href=\"https://docs.scipy.org/doc/numpy-1.13.0/reference/generated/numpy.take.html\" rel=\"nofollow\">https://docs.scipy.org/doc/numpy-1.13.0/reference/generated/numpy.take.html</a><br>\n<a href=\"https://docs.scipy.org/doc/numpy-1.13.0/reference/generated/numpy.put.html\" rel=\"nofollow\">https://docs.scipy.org/doc/numpy-1.13.0/reference/generated/numpy.put.html</a></p>\n<p><code>numpy.take</code> has an optional axis argument, which behaves like <code>index_select</code>. I didn't include this. We can add it later without breaking backwards compatibility.</p>\n<p><code>numpy.put</code> repeats the values if necessary to make them as long as indices. This is strange, since most other functions use broadcasting semantics. Currently, <code>Tensor.put_</code> requires values to have the same length as indices. We can change this without breaking backwards compatibility.</p>", "body_text": "Two differences from the NumPy implementations:\nhttps://docs.scipy.org/doc/numpy-1.13.0/reference/generated/numpy.take.html\nhttps://docs.scipy.org/doc/numpy-1.13.0/reference/generated/numpy.put.html\nnumpy.take has an optional axis argument, which behaves like index_select. I didn't include this. We can add it later without breaking backwards compatibility.\nnumpy.put repeats the values if necessary to make them as long as indices. This is strange, since most other functions use broadcasting semantics. Currently, Tensor.put_ requires values to have the same length as indices. We can change this without breaking backwards compatibility.", "body": "Two differences from the NumPy implementations:\r\n\r\nhttps://docs.scipy.org/doc/numpy-1.13.0/reference/generated/numpy.take.html\r\nhttps://docs.scipy.org/doc/numpy-1.13.0/reference/generated/numpy.put.html\r\n\r\n`numpy.take` has an optional axis argument, which behaves like `index_select`. I didn't include this. We can add it later without breaking backwards compatibility.\r\n\r\n`numpy.put` repeats the values if necessary to make them as long as indices. This is strange, since most other functions use broadcasting semantics. Currently, `Tensor.put_` requires values to have the same length as indices. We can change this without breaking backwards compatibility."}