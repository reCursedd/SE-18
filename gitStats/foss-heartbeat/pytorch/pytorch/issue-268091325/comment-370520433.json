{"url": "https://api.github.com/repos/pytorch/pytorch/issues/comments/370520433", "html_url": "https://github.com/pytorch/pytorch/pull/3263#issuecomment-370520433", "issue_url": "https://api.github.com/repos/pytorch/pytorch/issues/3263", "id": 370520433, "node_id": "MDEyOklzc3VlQ29tbWVudDM3MDUyMDQzMw==", "user": {"login": "alok", "id": 8325708, "node_id": "MDQ6VXNlcjgzMjU3MDg=", "avatar_url": "https://avatars0.githubusercontent.com/u/8325708?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alok", "html_url": "https://github.com/alok", "followers_url": "https://api.github.com/users/alok/followers", "following_url": "https://api.github.com/users/alok/following{/other_user}", "gists_url": "https://api.github.com/users/alok/gists{/gist_id}", "starred_url": "https://api.github.com/users/alok/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alok/subscriptions", "organizations_url": "https://api.github.com/users/alok/orgs", "repos_url": "https://api.github.com/users/alok/repos", "events_url": "https://api.github.com/users/alok/events{/privacy}", "received_events_url": "https://api.github.com/users/alok/received_events", "type": "User", "site_admin": false}, "created_at": "2018-03-05T18:43:21Z", "updated_at": "2018-03-05T18:43:21Z", "author_association": "NONE", "body_html": "<p>It'd be nice to have an <code>axis</code> argument added, since <code>sklearn.utils.safe_indexing</code> (used by <code>sklearn.utils.shuffle</code>, which is handy for sampling multiple tensors along the same indices)   uses <code>X.take(indices,axis=0)</code> and PyTorch fails.</p>", "body_text": "It'd be nice to have an axis argument added, since sklearn.utils.safe_indexing (used by sklearn.utils.shuffle, which is handy for sampling multiple tensors along the same indices)   uses X.take(indices,axis=0) and PyTorch fails.", "body": "It'd be nice to have an `axis` argument added, since `sklearn.utils.safe_indexing` (used by `sklearn.utils.shuffle`, which is handy for sampling multiple tensors along the same indices)   uses `X.take(indices,axis=0)` and PyTorch fails."}