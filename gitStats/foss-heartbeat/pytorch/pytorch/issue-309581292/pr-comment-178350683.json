{"url": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/178350683", "pull_request_review_id": 108403889, "id": 178350683, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE3ODM1MDY4Mw==", "diff_hunk": "@@ -83,6 +88,46 @@ struct VISIBILITY_HIDDEN PythonValue : public SugaredValue {\n   py::object self;\n };\n \n+// get the SugaredValue for something inside a torch.jit.Const\n+// this can either be a ConstantPythonValue or a ModuleValue\n+static std::shared_ptr<SugaredValue> createConstantSugaredValue(py::object obj);\n+\n+// by using torch.jit.Const, a user can mark a python value constant\n+// we then make that value immutable.\n+// once marked constant, we enable additional behavior such as\n+// 1. conversion via asValue to a constant Tensor\n+// 2. unrolling of for loops\n+struct VISIBILITY_HIDDEN ConstantPythonValue : public PythonValue {\n+  using PythonValue::PythonValue;\n+  virtual Value * asValue(SourceRange loc, Method & m) override {\n+    if(py::isinstance<py::int_>(self)) {\n+      return createConstant(loc, m, at::CPU(at::kInt).scalarTensor(py::cast<int32_t>(self)));\n+    } else if(py::isinstance<py::float_>(self)) {\n+      return createConstant(loc, m, at::CPU(at::kFloat).scalarTensor(py::cast<float>(self)));\n+    } else if(py::isinstance<py::bool_>(self)) {", "path": "torch/csrc/jit/script/init.cpp", "position": 58, "original_position": 62, "commit_id": "a6e35d2bc0342c6e7e33b75015b4751ec3eec98c", "original_commit_id": "c175ea4c8e416f3b803451ea4b4e32e12f6ceeb6", "user": {"login": "zdevito", "id": 370202, "node_id": "MDQ6VXNlcjM3MDIwMg==", "avatar_url": "https://avatars0.githubusercontent.com/u/370202?v=4", "gravatar_id": "", "url": "https://api.github.com/users/zdevito", "html_url": "https://github.com/zdevito", "followers_url": "https://api.github.com/users/zdevito/followers", "following_url": "https://api.github.com/users/zdevito/following{/other_user}", "gists_url": "https://api.github.com/users/zdevito/gists{/gist_id}", "starred_url": "https://api.github.com/users/zdevito/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/zdevito/subscriptions", "organizations_url": "https://api.github.com/users/zdevito/orgs", "repos_url": "https://api.github.com/users/zdevito/repos", "events_url": "https://api.github.com/users/zdevito/events{/privacy}", "received_events_url": "https://api.github.com/users/zdevito/received_events", "type": "User", "site_admin": false}, "body": "I guess because float and bool are keywords", "created_at": "2018-03-30T18:57:16Z", "updated_at": "2018-11-23T15:41:22Z", "html_url": "https://github.com/pytorch/pytorch/pull/6092#discussion_r178350683", "pull_request_url": "https://api.github.com/repos/pytorch/pytorch/pulls/6092", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/178350683"}, "html": {"href": "https://github.com/pytorch/pytorch/pull/6092#discussion_r178350683"}, "pull_request": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/6092"}}, "body_html": "<p>I guess because float and bool are keywords</p>", "body_text": "I guess because float and bool are keywords", "in_reply_to_id": 178195730}