{"url": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/179291931", "pull_request_review_id": 109509713, "id": 179291931, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE3OTI5MTkzMQ==", "diff_hunk": "@@ -157,10 +202,29 @@ struct ModuleValue : public SugaredValue {\n   virtual std::vector<Value*> call(SourceRange loc, Method & caller, at::ArrayRef<Value*> inputs, List<Attribute> attributes, size_t n_outputs) override {\n     return attr(loc, caller, \"forward\")->call(loc, caller, inputs, attributes, n_outputs);\n   }\n+\n+  virtual std::vector<std::shared_ptr<SugaredValue>> unrolledFor(SourceRange loc, Method& m) override {\n+    py::object py_module = py::cast(module);\n+    if(!py::isinstance(py_module, py::module::import(\"torch.jit\").attr(\"_ConstModuleList\")))\n+      return SugaredValue::unrolledFor(loc, m);\n+    std::vector<std::shared_ptr<SugaredValue>> result;\n+    for(py::handle module : py_module) {\n+      py::object obj = py::reinterpret_borrow<py::object>(module);\n+      if(py::isinstance<Module>(obj)) {\n+        auto r = py::cast<std::shared_ptr<Module>>(obj);\n+        result.push_back(std::make_shared<ModuleValue>(r));\n+      } else {\n+        result.push_back(std::make_shared<ConstantPythonValue>(obj));", "path": "torch/csrc/jit/script/init.cpp", "position": 112, "original_position": 112, "commit_id": "a6e35d2bc0342c6e7e33b75015b4751ec3eec98c", "original_commit_id": "a6e35d2bc0342c6e7e33b75015b4751ec3eec98c", "user": {"login": "apaszke", "id": 4583066, "node_id": "MDQ6VXNlcjQ1ODMwNjY=", "avatar_url": "https://avatars3.githubusercontent.com/u/4583066?v=4", "gravatar_id": "", "url": "https://api.github.com/users/apaszke", "html_url": "https://github.com/apaszke", "followers_url": "https://api.github.com/users/apaszke/followers", "following_url": "https://api.github.com/users/apaszke/following{/other_user}", "gists_url": "https://api.github.com/users/apaszke/gists{/gist_id}", "starred_url": "https://api.github.com/users/apaszke/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/apaszke/subscriptions", "organizations_url": "https://api.github.com/users/apaszke/orgs", "repos_url": "https://api.github.com/users/apaszke/repos", "events_url": "https://api.github.com/users/apaszke/events{/privacy}", "received_events_url": "https://api.github.com/users/apaszke/received_events", "type": "User", "site_admin": false}, "body": "How would it be possible to get a constant here? Isn't this supposed to be a Module-only iterator?", "created_at": "2018-04-04T21:41:35Z", "updated_at": "2018-11-23T15:41:45Z", "html_url": "https://github.com/pytorch/pytorch/pull/6092#discussion_r179291931", "pull_request_url": "https://api.github.com/repos/pytorch/pytorch/pulls/6092", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/179291931"}, "html": {"href": "https://github.com/pytorch/pytorch/pull/6092#discussion_r179291931"}, "pull_request": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/6092"}}, "body_html": "<p>How would it be possible to get a constant here? Isn't this supposed to be a Module-only iterator?</p>", "body_text": "How would it be possible to get a constant here? Isn't this supposed to be a Module-only iterator?"}