{"url": "https://api.github.com/repos/pytorch/pytorch/issues/comments/377603081", "html_url": "https://github.com/pytorch/pytorch/pull/6092#issuecomment-377603081", "issue_url": "https://api.github.com/repos/pytorch/pytorch/issues/6092", "id": 377603081, "node_id": "MDEyOklzc3VlQ29tbWVudDM3NzYwMzA4MQ==", "user": {"login": "ezyang", "id": 13564, "node_id": "MDQ6VXNlcjEzNTY0", "avatar_url": "https://avatars0.githubusercontent.com/u/13564?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ezyang", "html_url": "https://github.com/ezyang", "followers_url": "https://api.github.com/users/ezyang/followers", "following_url": "https://api.github.com/users/ezyang/following{/other_user}", "gists_url": "https://api.github.com/users/ezyang/gists{/gist_id}", "starred_url": "https://api.github.com/users/ezyang/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ezyang/subscriptions", "organizations_url": "https://api.github.com/users/ezyang/orgs", "repos_url": "https://api.github.com/users/ezyang/repos", "events_url": "https://api.github.com/users/ezyang/events{/privacy}", "received_events_url": "https://api.github.com/users/ezyang/received_events", "type": "User", "site_admin": false}, "created_at": "2018-03-30T19:28:48Z", "updated_at": "2018-03-30T19:28:48Z", "author_association": "CONTRIBUTOR", "body_html": "<p>One silly alternate interface which works around <a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=4583066\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/apaszke\">@apaszke</a>'s concerns is something like setconstattr(mod, 'foo', v). Easy to polyfill Python side and emphasizes the fact that you are const-ifying the attribute.</p>", "body_text": "One silly alternate interface which works around @apaszke's concerns is something like setconstattr(mod, 'foo', v). Easy to polyfill Python side and emphasizes the fact that you are const-ifying the attribute.", "body": "One silly alternate interface which works around @apaszke's concerns is something like setconstattr(mod, 'foo', v). Easy to polyfill Python side and emphasizes the fact that you are const-ifying the attribute."}