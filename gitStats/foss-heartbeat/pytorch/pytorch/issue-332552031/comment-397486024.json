{"url": "https://api.github.com/repos/pytorch/pytorch/issues/comments/397486024", "html_url": "https://github.com/pytorch/pytorch/issues/8508#issuecomment-397486024", "issue_url": "https://api.github.com/repos/pytorch/pytorch/issues/8508", "id": 397486024, "node_id": "MDEyOklzc3VlQ29tbWVudDM5NzQ4NjAyNA==", "user": {"login": "praveen-palanisamy", "id": 4770482, "node_id": "MDQ6VXNlcjQ3NzA0ODI=", "avatar_url": "https://avatars3.githubusercontent.com/u/4770482?v=4", "gravatar_id": "", "url": "https://api.github.com/users/praveen-palanisamy", "html_url": "https://github.com/praveen-palanisamy", "followers_url": "https://api.github.com/users/praveen-palanisamy/followers", "following_url": "https://api.github.com/users/praveen-palanisamy/following{/other_user}", "gists_url": "https://api.github.com/users/praveen-palanisamy/gists{/gist_id}", "starred_url": "https://api.github.com/users/praveen-palanisamy/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/praveen-palanisamy/subscriptions", "organizations_url": "https://api.github.com/users/praveen-palanisamy/orgs", "repos_url": "https://api.github.com/users/praveen-palanisamy/repos", "events_url": "https://api.github.com/users/praveen-palanisamy/events{/privacy}", "received_events_url": "https://api.github.com/users/praveen-palanisamy/received_events", "type": "User", "site_admin": false}, "created_at": "2018-06-15T01:24:51Z", "updated_at": "2018-06-15T01:25:43Z", "author_association": "CONTRIBUTOR", "body_html": "<p>Though one shouldn't try to use <code>MultivariateNormal</code> for a univariate, scalar <code>loc</code>, I would <g-emoji class=\"g-emoji\" alias=\"+1\" fallback-src=\"https://assets-cdn.github.com/images/icons/emoji/unicode/1f44d.png\">\ud83d\udc4d</g-emoji> +1  for the alternative way as it does not add any overhead while making it user-friendly. I think this will be better compared to raising an exception which will most likely trigger users to add a fake dimension to the scalar and try which anyway works with <code>MultivariateNormal</code> on <code>master</code>.<br>\nWhat do you think?</p>", "body_text": "Though one shouldn't try to use MultivariateNormal for a univariate, scalar loc, I would \ud83d\udc4d +1  for the alternative way as it does not add any overhead while making it user-friendly. I think this will be better compared to raising an exception which will most likely trigger users to add a fake dimension to the scalar and try which anyway works with MultivariateNormal on master.\nWhat do you think?", "body": "Though one shouldn't try to use `MultivariateNormal` for a univariate, scalar `loc`, I would :+1: +1  for the alternative way as it does not add any overhead while making it user-friendly. I think this will be better compared to raising an exception which will most likely trigger users to add a fake dimension to the scalar and try which anyway works with `MultivariateNormal` on `master`.\r\nWhat do you think?"}