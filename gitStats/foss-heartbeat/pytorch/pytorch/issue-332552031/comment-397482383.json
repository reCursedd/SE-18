{"url": "https://api.github.com/repos/pytorch/pytorch/issues/comments/397482383", "html_url": "https://github.com/pytorch/pytorch/issues/8508#issuecomment-397482383", "issue_url": "https://api.github.com/repos/pytorch/pytorch/issues/8508", "id": 397482383, "node_id": "MDEyOklzc3VlQ29tbWVudDM5NzQ4MjM4Mw==", "user": {"login": "fritzo", "id": 648532, "node_id": "MDQ6VXNlcjY0ODUzMg==", "avatar_url": "https://avatars0.githubusercontent.com/u/648532?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fritzo", "html_url": "https://github.com/fritzo", "followers_url": "https://api.github.com/users/fritzo/followers", "following_url": "https://api.github.com/users/fritzo/following{/other_user}", "gists_url": "https://api.github.com/users/fritzo/gists{/gist_id}", "starred_url": "https://api.github.com/users/fritzo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fritzo/subscriptions", "organizations_url": "https://api.github.com/users/fritzo/orgs", "repos_url": "https://api.github.com/users/fritzo/repos", "events_url": "https://api.github.com/users/fritzo/events{/privacy}", "received_events_url": "https://api.github.com/users/fritzo/received_events", "type": "User", "site_admin": false}, "created_at": "2018-06-15T00:58:58Z", "updated_at": "2018-06-15T00:59:59Z", "author_association": "CONTRIBUTOR", "body_html": "<p>I believe <code>loc</code> as scalar should not be allowed for <code>MultivariateNormal</code>; we should instead add a check</p>\n<div class=\"highlight highlight-source-python\"><pre><span class=\"pl-k\">def</span> <span class=\"pl-c1\">__init__</span>(...):\n    <span class=\"pl-k\">if</span> loc.dim() <span class=\"pl-k\">&lt;</span> <span class=\"pl-c1\">1</span>:\n        <span class=\"pl-k\">raise</span> <span class=\"pl-c1\">ValueError</span></pre></div>\n<p>Alternatively, we could broadcast scalar <code>loc</code> up to a 1-dimensional tensor in <code>__init__()</code>.</p>", "body_text": "I believe loc as scalar should not be allowed for MultivariateNormal; we should instead add a check\ndef __init__(...):\n    if loc.dim() < 1:\n        raise ValueError\nAlternatively, we could broadcast scalar loc up to a 1-dimensional tensor in __init__().", "body": "I believe `loc` as scalar should not be allowed for `MultivariateNormal`; we should instead add a check\r\n```py\r\ndef __init__(...):\r\n    if loc.dim() < 1:\r\n        raise ValueError\r\n```\r\nAlternatively, we could broadcast scalar `loc` up to a 1-dimensional tensor in `__init__()`."}