{"url": "https://api.github.com/repos/pytorch/pytorch/issues/comments/367350740", "html_url": "https://github.com/pytorch/pytorch/issues/5330#issuecomment-367350740", "issue_url": "https://api.github.com/repos/pytorch/pytorch/issues/5330", "id": 367350740, "node_id": "MDEyOklzc3VlQ29tbWVudDM2NzM1MDc0MA==", "user": {"login": "chughtapan", "id": 3305567, "node_id": "MDQ6VXNlcjMzMDU1Njc=", "avatar_url": "https://avatars3.githubusercontent.com/u/3305567?v=4", "gravatar_id": "", "url": "https://api.github.com/users/chughtapan", "html_url": "https://github.com/chughtapan", "followers_url": "https://api.github.com/users/chughtapan/followers", "following_url": "https://api.github.com/users/chughtapan/following{/other_user}", "gists_url": "https://api.github.com/users/chughtapan/gists{/gist_id}", "starred_url": "https://api.github.com/users/chughtapan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/chughtapan/subscriptions", "organizations_url": "https://api.github.com/users/chughtapan/orgs", "repos_url": "https://api.github.com/users/chughtapan/repos", "events_url": "https://api.github.com/users/chughtapan/events{/privacy}", "received_events_url": "https://api.github.com/users/chughtapan/received_events", "type": "User", "site_admin": false}, "created_at": "2018-02-21T14:51:43Z", "updated_at": "2018-02-21T14:53:07Z", "author_association": "NONE", "body_html": "<p>My apologies.<br>\nPyTorch version ( <a class=\"commit-link\" data-hovercard-type=\"commit\" data-hovercard-url=\"https://github.com/pytorch/pytorch/commit/06408168e6d2c071f8d3e14f143118267205f5d0/hovercard\" href=\"https://github.com/pytorch/pytorch/commit/06408168e6d2c071f8d3e14f143118267205f5d0\"><tt>0640816</tt></a> )</p>\n<p>Code to trace the model</p>\n<pre><code>input_size = 1024\nhidden_size = 1024\nbatch_size = 8\ninput = torch.autograd.Variable(torch.rand(batch_size, input_size), requires_grad=False).cuda()\nL = torch.autograd.Variable(torch.rand(batch_size, hidden_size), requires_grad=False).cuda()\ntest = TestSoftMax(input_size, hidden_size).cuda()\ntrace, out = torch.jit.trace(test, input, nderivs=1)\ntorch.autograd.backward([out], [L])\ntorch._C._jit_pass_lint(trace)\ntorch._C._jit_pass_cse(trace)\ntorch._C._jit_pass_peephole(trace)\ntorch._C._jit_pass_dce(trace)\ngraph = trace.graph()\nprint (graph)\n</code></pre>", "body_text": "My apologies.\nPyTorch version ( 0640816 )\nCode to trace the model\ninput_size = 1024\nhidden_size = 1024\nbatch_size = 8\ninput = torch.autograd.Variable(torch.rand(batch_size, input_size), requires_grad=False).cuda()\nL = torch.autograd.Variable(torch.rand(batch_size, hidden_size), requires_grad=False).cuda()\ntest = TestSoftMax(input_size, hidden_size).cuda()\ntrace, out = torch.jit.trace(test, input, nderivs=1)\ntorch.autograd.backward([out], [L])\ntorch._C._jit_pass_lint(trace)\ntorch._C._jit_pass_cse(trace)\ntorch._C._jit_pass_peephole(trace)\ntorch._C._jit_pass_dce(trace)\ngraph = trace.graph()\nprint (graph)", "body": "My apologies. \r\nPyTorch version ( https://github.com/pytorch/pytorch/commit/06408168e6d2c071f8d3e14f143118267205f5d0 )\r\n\r\nCode to trace the model\r\n```\r\ninput_size = 1024\r\nhidden_size = 1024\r\nbatch_size = 8\r\ninput = torch.autograd.Variable(torch.rand(batch_size, input_size), requires_grad=False).cuda()\r\nL = torch.autograd.Variable(torch.rand(batch_size, hidden_size), requires_grad=False).cuda()\r\ntest = TestSoftMax(input_size, hidden_size).cuda()\r\ntrace, out = torch.jit.trace(test, input, nderivs=1)\r\ntorch.autograd.backward([out], [L])\r\ntorch._C._jit_pass_lint(trace)\r\ntorch._C._jit_pass_cse(trace)\r\ntorch._C._jit_pass_peephole(trace)\r\ntorch._C._jit_pass_dce(trace)\r\ngraph = trace.graph()\r\nprint (graph)\r\n```"}