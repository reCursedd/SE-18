{"url": "https://api.github.com/repos/pytorch/pytorch/issues/comments/346231795", "html_url": "https://github.com/pytorch/pytorch/pull/3821#issuecomment-346231795", "issue_url": "https://api.github.com/repos/pytorch/pytorch/issues/3821", "id": 346231795, "node_id": "MDEyOklzc3VlQ29tbWVudDM0NjIzMTc5NQ==", "user": {"login": "colesbury", "id": 655866, "node_id": "MDQ6VXNlcjY1NTg2Ng==", "avatar_url": "https://avatars1.githubusercontent.com/u/655866?v=4", "gravatar_id": "", "url": "https://api.github.com/users/colesbury", "html_url": "https://github.com/colesbury", "followers_url": "https://api.github.com/users/colesbury/followers", "following_url": "https://api.github.com/users/colesbury/following{/other_user}", "gists_url": "https://api.github.com/users/colesbury/gists{/gist_id}", "starred_url": "https://api.github.com/users/colesbury/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/colesbury/subscriptions", "organizations_url": "https://api.github.com/users/colesbury/orgs", "repos_url": "https://api.github.com/users/colesbury/repos", "events_url": "https://api.github.com/users/colesbury/events{/privacy}", "received_events_url": "https://api.github.com/users/colesbury/received_events", "type": "User", "site_admin": false}, "created_at": "2017-11-22T03:20:50Z", "updated_at": "2017-11-22T03:20:50Z", "author_association": "MEMBER", "body_html": "<p>This includes the size of the Storage in the tensor, but the documentation for sizeof says:</p>\n<pre><code>Only the memory consumption directly attributed to the object is accounted for, not the memory consumption of objects it refers to.\n</code></pre>\n<p>That means that the recipe for computing memory referenced in the Python documentation will overstate the memory usage:</p>\n<p><a href=\"https://code.activestate.com/recipes/577504/\" rel=\"nofollow\">https://code.activestate.com/recipes/577504/</a></p>\n<p>I don't think this will change the code snippet from the original PyTorch discussion either:<br>\n<a href=\"https://discuss.pytorch.org/t/data-type-when-change-tensor-array-to-numpy-array/9786\" rel=\"nofollow\">https://discuss.pytorch.org/t/data-type-when-change-tensor-array-to-numpy-array/9786</a></p>\n<pre><code>test0 = torch.rand(100, 100)\ntest1 = test0.numpy()\nprint(sys.getsizeof(test1))\n</code></pre>\n<p><code>test1</code> is a NumPy array. It's size is reported as 112 because it's a view and <code>test1.base</code> is intentionally not included in <code>__sizeof__</code>.</p>", "body_text": "This includes the size of the Storage in the tensor, but the documentation for sizeof says:\nOnly the memory consumption directly attributed to the object is accounted for, not the memory consumption of objects it refers to.\n\nThat means that the recipe for computing memory referenced in the Python documentation will overstate the memory usage:\nhttps://code.activestate.com/recipes/577504/\nI don't think this will change the code snippet from the original PyTorch discussion either:\nhttps://discuss.pytorch.org/t/data-type-when-change-tensor-array-to-numpy-array/9786\ntest0 = torch.rand(100, 100)\ntest1 = test0.numpy()\nprint(sys.getsizeof(test1))\n\ntest1 is a NumPy array. It's size is reported as 112 because it's a view and test1.base is intentionally not included in __sizeof__.", "body": "This includes the size of the Storage in the tensor, but the documentation for sizeof says:\r\n\r\n```\r\nOnly the memory consumption directly attributed to the object is accounted for, not the memory consumption of objects it refers to.\r\n```\r\n\r\nThat means that the recipe for computing memory referenced in the Python documentation will overstate the memory usage:\r\n\r\nhttps://code.activestate.com/recipes/577504/\r\n\r\nI don't think this will change the code snippet from the original PyTorch discussion either:\r\nhttps://discuss.pytorch.org/t/data-type-when-change-tensor-array-to-numpy-array/9786\r\n```\r\ntest0 = torch.rand(100, 100)\r\ntest1 = test0.numpy()\r\nprint(sys.getsizeof(test1))\r\n```\r\n\r\n`test1` is a NumPy array. It's size is reported as 112 because it's a view and `test1.base` is intentionally not included in `__sizeof__`."}