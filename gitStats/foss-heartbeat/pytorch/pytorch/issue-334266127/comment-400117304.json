{"url": "https://api.github.com/repos/pytorch/pytorch/issues/comments/400117304", "html_url": "https://github.com/pytorch/pytorch/pull/8718#issuecomment-400117304", "issue_url": "https://api.github.com/repos/pytorch/pytorch/issues/8718", "id": 400117304, "node_id": "MDEyOklzc3VlQ29tbWVudDQwMDExNzMwNA==", "user": {"login": "ebetica", "id": 3605224, "node_id": "MDQ6VXNlcjM2MDUyMjQ=", "avatar_url": "https://avatars3.githubusercontent.com/u/3605224?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ebetica", "html_url": "https://github.com/ebetica", "followers_url": "https://api.github.com/users/ebetica/followers", "following_url": "https://api.github.com/users/ebetica/following{/other_user}", "gists_url": "https://api.github.com/users/ebetica/gists{/gist_id}", "starred_url": "https://api.github.com/users/ebetica/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ebetica/subscriptions", "organizations_url": "https://api.github.com/users/ebetica/orgs", "repos_url": "https://api.github.com/users/ebetica/repos", "events_url": "https://api.github.com/users/ebetica/events{/privacy}", "received_events_url": "https://api.github.com/users/ebetica/received_events", "type": "User", "site_admin": false}, "created_at": "2018-06-25T22:34:41Z", "updated_at": "2018-06-25T22:34:41Z", "author_association": "CONTRIBUTOR", "body_html": "<p>Leaving some in-person discussion here:</p>\n<p>My original design for the API only has things with parameters as Modules, and everything else as functions. I found this more intuitive than the PyTorch style where sometimes things would be Modules, but they're normally just implemented as functions first. To this end, Functional encourages people to wrap things when needed, since the module style is only really ever needed for Sequential.</p>\n<p>I think it's valuable to add these for parity with PyTorch, but I think another solution where it's easier to add functional interfaces to Sequential is a better API design...</p>", "body_text": "Leaving some in-person discussion here:\nMy original design for the API only has things with parameters as Modules, and everything else as functions. I found this more intuitive than the PyTorch style where sometimes things would be Modules, but they're normally just implemented as functions first. To this end, Functional encourages people to wrap things when needed, since the module style is only really ever needed for Sequential.\nI think it's valuable to add these for parity with PyTorch, but I think another solution where it's easier to add functional interfaces to Sequential is a better API design...", "body": "Leaving some in-person discussion here:\r\n\r\nMy original design for the API only has things with parameters as Modules, and everything else as functions. I found this more intuitive than the PyTorch style where sometimes things would be Modules, but they're normally just implemented as functions first. To this end, Functional encourages people to wrap things when needed, since the module style is only really ever needed for Sequential.\r\n\r\nI think it's valuable to add these for parity with PyTorch, but I think another solution where it's easier to add functional interfaces to Sequential is a better API design..."}