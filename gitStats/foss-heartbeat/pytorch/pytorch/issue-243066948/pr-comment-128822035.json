{"url": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/128822035", "pull_request_review_id": 51541737, "id": 128822035, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEyODgyMjAzNQ==", "diff_hunk": "@@ -571,6 +571,37 @@ def batch_norm(input, running_mean, running_var, weight=None, bias=None,\n     return f(input, weight, bias)\n \n \n+def relation(input, g, f=None, embedding=None, max_pairwise=None):\n+    # Batch size, number of objects, feature size\n+    b, o, c = input.size()\n+    # Construct pairwise indices\n+    i = Variable(torch.arange(0, o).type_as(input.data).long().repeat(o))\n+    j = Variable(torch.arange(0, o).type_as(input.data).long().repeat(o, 1).t().contiguous().view(-1))\n+    # Create pairwise matrix\n+    pairs = torch.cat((torch.index_select(input, 1, i), torch.index_select(input, 1, j)), 2)\n+    # Append embedding if provided\n+    if embedding is not None:\n+        pairs = torch.cat((pairs, embedding.unsqueeze(1).expand(b, o ** 2, embedding.size(1))), 2)\n+    # Calculate new feature size\n+    c = pairs.size(2)\n+    # Pack into batches\n+    pairs = pairs.view(b * o ** 2, c)\n+    # Pass through g\n+    if max_pairwise is None:\n+        output = g(pairs)\n+    else:\n+        outputs = []\n+        for batch in range(0, b * o ** 2, max_pairwise):\n+            outputs.append(g(pairs[batch:batch + max_pairwise]))", "path": "torch/nn/functional.py", "position": 27, "original_position": 25, "commit_id": "7cf22b41375b4718d992162a54994fe7484e6889", "original_commit_id": "ced6a643f605e48eed60996fbe8bdbf7abeda017", "user": {"login": "imisra", "id": 3059768, "node_id": "MDQ6VXNlcjMwNTk3Njg=", "avatar_url": "https://avatars0.githubusercontent.com/u/3059768?v=4", "gravatar_id": "", "url": "https://api.github.com/users/imisra", "html_url": "https://github.com/imisra", "followers_url": "https://api.github.com/users/imisra/followers", "following_url": "https://api.github.com/users/imisra/following{/other_user}", "gists_url": "https://api.github.com/users/imisra/gists{/gist_id}", "starred_url": "https://api.github.com/users/imisra/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/imisra/subscriptions", "organizations_url": "https://api.github.com/users/imisra/orgs", "repos_url": "https://api.github.com/users/imisra/repos", "events_url": "https://api.github.com/users/imisra/events{/privacy}", "received_events_url": "https://api.github.com/users/imisra/received_events", "type": "User", "site_admin": false}, "body": "The main reason for doing this is to have larger batch sizes during inference (volatile=True). For an initial version, I think this is enough :)", "created_at": "2017-07-21T17:52:58Z", "updated_at": "2018-11-23T15:34:12Z", "html_url": "https://github.com/pytorch/pytorch/pull/2105#discussion_r128822035", "pull_request_url": "https://api.github.com/repos/pytorch/pytorch/pulls/2105", "author_association": "NONE", "_links": {"self": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/128822035"}, "html": {"href": "https://github.com/pytorch/pytorch/pull/2105#discussion_r128822035"}, "pull_request": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/2105"}}, "body_html": "<p>The main reason for doing this is to have larger batch sizes during inference (volatile=True). For an initial version, I think this is enough :)</p>", "body_text": "The main reason for doing this is to have larger batch sizes during inference (volatile=True). For an initial version, I think this is enough :)", "in_reply_to_id": 128617433}