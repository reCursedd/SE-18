{"url": "https://api.github.com/repos/pytorch/pytorch/issues/comments/402818836", "html_url": "https://github.com/pytorch/pytorch/pull/9184#issuecomment-402818836", "issue_url": "https://api.github.com/repos/pytorch/pytorch/issues/9184", "id": 402818836, "node_id": "MDEyOklzc3VlQ29tbWVudDQwMjgxODgzNg==", "user": {"login": "mrocklin", "id": 306380, "node_id": "MDQ6VXNlcjMwNjM4MA==", "avatar_url": "https://avatars3.githubusercontent.com/u/306380?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mrocklin", "html_url": "https://github.com/mrocklin", "followers_url": "https://api.github.com/users/mrocklin/followers", "following_url": "https://api.github.com/users/mrocklin/following{/other_user}", "gists_url": "https://api.github.com/users/mrocklin/gists{/gist_id}", "starred_url": "https://api.github.com/users/mrocklin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mrocklin/subscriptions", "organizations_url": "https://api.github.com/users/mrocklin/orgs", "repos_url": "https://api.github.com/users/mrocklin/repos", "events_url": "https://api.github.com/users/mrocklin/events{/privacy}", "received_events_url": "https://api.github.com/users/mrocklin/received_events", "type": "User", "site_admin": false}, "created_at": "2018-07-05T18:51:18Z", "updated_at": "2018-07-05T18:51:18Z", "author_association": "CONTRIBUTOR", "body_html": "<p>The performance difference is nice.  This reduces the serialization time by a factor of 38 and the size by a factor of 2</p>\n<h3>This PR</h3>\n<div class=\"highlight highlight-source-python\"><pre>In [<span class=\"pl-c1\">1</span>]: <span class=\"pl-k\">from</span> torchvision.models.resnet <span class=\"pl-k\">import</span> resnet18\n   <span class=\"pl-c1\">...</span>: <span class=\"pl-k\">import</span> pickle\n   <span class=\"pl-c1\">...</span>: model <span class=\"pl-k\">=</span> resnet18(<span class=\"pl-v\">pretrained</span><span class=\"pl-k\">=</span><span class=\"pl-c1\">True</span>)\n   <span class=\"pl-c1\">...</span>: \n   <span class=\"pl-c1\">...</span>: \n\nIn [<span class=\"pl-c1\">2</span>]: <span class=\"pl-k\">%</span>time <span class=\"pl-c1\">len</span>(pickle.dumps(model))\n<span class=\"pl-c1\">CPU</span> times: user <span class=\"pl-c1\">35.7</span> ms, sys: <span class=\"pl-c1\">16.3</span> ms, total: <span class=\"pl-c1\">52</span> ms\nWall time: <span class=\"pl-c1\">51.1</span> ms\nOut[<span class=\"pl-c1\">2</span>]: <span class=\"pl-c1\">46838320</span>\n\nIn [<span class=\"pl-c1\">3</span>]: <span class=\"pl-c1\">46838320</span> <span class=\"pl-k\">/</span> <span class=\"pl-c1\">0.051</span> <span class=\"pl-k\">/</span> <span class=\"pl-c1\">1e6</span>  <span class=\"pl-c\"><span class=\"pl-c\">#</span> MB/s</span>\nOut[<span class=\"pl-c1\">3</span>]: <span class=\"pl-c1\">918.3984313725491</span></pre></div>\n<h3>0.4.0</h3>\n<div class=\"highlight highlight-source-python\"><pre>In [<span class=\"pl-c1\">1</span>]: <span class=\"pl-k\">from</span> torchvision.models.resnet <span class=\"pl-k\">import</span> resnet18\n   <span class=\"pl-c1\">...</span>: <span class=\"pl-k\">import</span> pickle\n   <span class=\"pl-c1\">...</span>: model <span class=\"pl-k\">=</span> resnet18(<span class=\"pl-v\">pretrained</span><span class=\"pl-k\">=</span><span class=\"pl-c1\">True</span>)\n   <span class=\"pl-c1\">...</span>: \n   <span class=\"pl-c1\">...</span>: \n\nIn [<span class=\"pl-c1\">2</span>]: <span class=\"pl-k\">%</span>time <span class=\"pl-c1\">len</span>(pickle.dumps(model))\n<span class=\"pl-c1\">CPU</span> times: user <span class=\"pl-c1\">1.74</span> s, sys: <span class=\"pl-c1\">180</span> ms, total: <span class=\"pl-c1\">1.92</span> s\nWall time: <span class=\"pl-c1\">1.92</span> s\nOut[<span class=\"pl-c1\">2</span>]: <span class=\"pl-c1\">105331304</span>\n\nIn [<span class=\"pl-c1\">3</span>]: <span class=\"pl-c1\">105331304</span> <span class=\"pl-k\">/</span> <span class=\"pl-c1\">46838320</span>\nOut[<span class=\"pl-c1\">3</span>]: <span class=\"pl-c1\">2.248827541209847</span>\n\nIn [<span class=\"pl-c1\">4</span>]: <span class=\"pl-c1\">1.92</span> <span class=\"pl-k\">/</span> <span class=\"pl-c1\">0.0511</span>\nOut[<span class=\"pl-c1\">4</span>]: <span class=\"pl-c1\">37.573385518590996</span></pre></div>", "body_text": "The performance difference is nice.  This reduces the serialization time by a factor of 38 and the size by a factor of 2\nThis PR\nIn [1]: from torchvision.models.resnet import resnet18\n   ...: import pickle\n   ...: model = resnet18(pretrained=True)\n   ...: \n   ...: \n\nIn [2]: %time len(pickle.dumps(model))\nCPU times: user 35.7 ms, sys: 16.3 ms, total: 52 ms\nWall time: 51.1 ms\nOut[2]: 46838320\n\nIn [3]: 46838320 / 0.051 / 1e6  # MB/s\nOut[3]: 918.3984313725491\n0.4.0\nIn [1]: from torchvision.models.resnet import resnet18\n   ...: import pickle\n   ...: model = resnet18(pretrained=True)\n   ...: \n   ...: \n\nIn [2]: %time len(pickle.dumps(model))\nCPU times: user 1.74 s, sys: 180 ms, total: 1.92 s\nWall time: 1.92 s\nOut[2]: 105331304\n\nIn [3]: 105331304 / 46838320\nOut[3]: 2.248827541209847\n\nIn [4]: 1.92 / 0.0511\nOut[4]: 37.573385518590996", "body": "The performance difference is nice.  This reduces the serialization time by a factor of 38 and the size by a factor of 2\r\n\r\n### This PR\r\n\r\n```python\r\nIn [1]: from torchvision.models.resnet import resnet18\r\n   ...: import pickle\r\n   ...: model = resnet18(pretrained=True)\r\n   ...: \r\n   ...: \r\n\r\nIn [2]: %time len(pickle.dumps(model))\r\nCPU times: user 35.7 ms, sys: 16.3 ms, total: 52 ms\r\nWall time: 51.1 ms\r\nOut[2]: 46838320\r\n\r\nIn [3]: 46838320 / 0.051 / 1e6  # MB/s\r\nOut[3]: 918.3984313725491\r\n```\r\n\r\n### 0.4.0\r\n\r\n```python\r\nIn [1]: from torchvision.models.resnet import resnet18\r\n   ...: import pickle\r\n   ...: model = resnet18(pretrained=True)\r\n   ...: \r\n   ...: \r\n\r\nIn [2]: %time len(pickle.dumps(model))\r\nCPU times: user 1.74 s, sys: 180 ms, total: 1.92 s\r\nWall time: 1.92 s\r\nOut[2]: 105331304\r\n\r\nIn [3]: 105331304 / 46838320\r\nOut[3]: 2.248827541209847\r\n\r\nIn [4]: 1.92 / 0.0511\r\nOut[4]: 37.573385518590996\r\n```"}