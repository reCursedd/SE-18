{"url": "https://api.github.com/repos/pytorch/pytorch/issues/9184", "repository_url": "https://api.github.com/repos/pytorch/pytorch", "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/9184/labels{/name}", "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/9184/comments", "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/9184/events", "html_url": "https://github.com/pytorch/pytorch/pull/9184", "id": 338568056, "node_id": "MDExOlB1bGxSZXF1ZXN0MTk5NDY1MTIz", "number": 9184, "title": "Use torch.save in _StorageBase.__reduce__", "user": {"login": "mrocklin", "id": 306380, "node_id": "MDQ6VXNlcjMwNjM4MA==", "avatar_url": "https://avatars3.githubusercontent.com/u/306380?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mrocklin", "html_url": "https://github.com/mrocklin", "followers_url": "https://api.github.com/users/mrocklin/followers", "following_url": "https://api.github.com/users/mrocklin/following{/other_user}", "gists_url": "https://api.github.com/users/mrocklin/gists{/gist_id}", "starred_url": "https://api.github.com/users/mrocklin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mrocklin/subscriptions", "organizations_url": "https://api.github.com/users/mrocklin/orgs", "repos_url": "https://api.github.com/users/mrocklin/repos", "events_url": "https://api.github.com/users/mrocklin/events{/privacy}", "received_events_url": "https://api.github.com/users/mrocklin/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 8, "created_at": "2018-07-05T13:10:14Z", "updated_at": "2018-07-25T15:19:29Z", "closed_at": "2018-07-06T14:26:09Z", "author_association": "CONTRIBUTOR", "pull_request": {"url": "https://api.github.com/repos/pytorch/pytorch/pulls/9184", "html_url": "https://github.com/pytorch/pytorch/pull/9184", "diff_url": "https://github.com/pytorch/pytorch/pull/9184.diff", "patch_url": "https://github.com/pytorch/pytorch/pull/9184.patch"}, "body_html": "<p>Previously this used the <code>.toliist</code> method, which converted the<br>\nstorage object into a list of Python objects, and then sent those to<br>\npickle.  For storage objects of non-trivial size, this was very slow.</p>\n<p>Now we reuse the logic of the <code>torch.save</code> function to efficiently<br>\nturn the Storage object into bytes, and send those instead.  This<br>\nreduces the semantic information (it's harder to interpret the bytes)<br>\nbut should be orders of magnitude more efficient when serializing data<br>\nwith the pickle protocol or with copy</p>\n<p>For future work it would be nice to develop a mechanism to get a buffer<br>\nof bytes out of a Storage object, and use that alongside the current<br>\n<code>from_buffer</code> method.</p>\n<p>See <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load issue title\" data-id=\"338318030\" data-permission-text=\"Issue title is private\" data-url=\"https://github.com/pytorch/pytorch/issues/9168\" data-hovercard-type=\"issue\" data-hovercard-url=\"/pytorch/pytorch/issues/9168/hovercard\" href=\"https://github.com/pytorch/pytorch/issues/9168\">#9168</a> for context</p>", "body_text": "Previously this used the .toliist method, which converted the\nstorage object into a list of Python objects, and then sent those to\npickle.  For storage objects of non-trivial size, this was very slow.\nNow we reuse the logic of the torch.save function to efficiently\nturn the Storage object into bytes, and send those instead.  This\nreduces the semantic information (it's harder to interpret the bytes)\nbut should be orders of magnitude more efficient when serializing data\nwith the pickle protocol or with copy\nFor future work it would be nice to develop a mechanism to get a buffer\nof bytes out of a Storage object, and use that alongside the current\nfrom_buffer method.\nSee #9168 for context", "body": "Previously this used the ``.toliist`` method, which converted the\r\nstorage object into a list of Python objects, and then sent those to\r\npickle.  For storage objects of non-trivial size, this was very slow.\r\n\r\nNow we reuse the logic of the ``torch.save`` function to efficiently\r\nturn the Storage object into bytes, and send those instead.  This\r\nreduces the semantic information (it's harder to interpret the bytes)\r\nbut should be orders of magnitude more efficient when serializing data\r\nwith the pickle protocol or with copy\r\n\r\nFor future work it would be nice to develop a mechanism to get a buffer\r\nof bytes out of a Storage object, and use that alongside the current\r\n``from_buffer`` method.\r\n\r\nSee #9168 for context\r\n\r\n"}