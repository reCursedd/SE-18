{"url": "https://api.github.com/repos/pytorch/pytorch/issues/comments/369153249", "html_url": "https://github.com/pytorch/pytorch/issues/5442#issuecomment-369153249", "issue_url": "https://api.github.com/repos/pytorch/pytorch/issues/5442", "id": 369153249, "node_id": "MDEyOklzc3VlQ29tbWVudDM2OTE1MzI0OQ==", "user": {"login": "robertnishihara", "id": 249517, "node_id": "MDQ6VXNlcjI0OTUxNw==", "avatar_url": "https://avatars3.githubusercontent.com/u/249517?v=4", "gravatar_id": "", "url": "https://api.github.com/users/robertnishihara", "html_url": "https://github.com/robertnishihara", "followers_url": "https://api.github.com/users/robertnishihara/followers", "following_url": "https://api.github.com/users/robertnishihara/following{/other_user}", "gists_url": "https://api.github.com/users/robertnishihara/gists{/gist_id}", "starred_url": "https://api.github.com/users/robertnishihara/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/robertnishihara/subscriptions", "organizations_url": "https://api.github.com/users/robertnishihara/orgs", "repos_url": "https://api.github.com/users/robertnishihara/repos", "events_url": "https://api.github.com/users/robertnishihara/events{/privacy}", "received_events_url": "https://api.github.com/users/robertnishihara/received_events", "type": "User", "site_admin": false}, "created_at": "2018-02-28T08:04:03Z", "updated_at": "2018-02-28T08:04:03Z", "author_association": "NONE", "body_html": "<p>It really seems to me like <code>torch.from_numpy(x)</code> does a copy when <code>x</code> is read only. I looked at the code that you linked to and I agree I don't see where the copy is happening.. but you can verify just by mutating the tensor and seeing that the underlying array doesn't change.</p>\n<div class=\"highlight highlight-source-python\"><pre><span class=\"pl-k\">import</span> numpy <span class=\"pl-k\">as</span> np\n<span class=\"pl-k\">import</span> torch\n\nx <span class=\"pl-k\">=</span> np.zeros(<span class=\"pl-c1\">10</span> <span class=\"pl-k\">**</span> <span class=\"pl-c1\">9</span>)\nx.flags.writeable <span class=\"pl-k\">=</span> <span class=\"pl-c1\">False</span>\n\nx[<span class=\"pl-c1\">0</span>] <span class=\"pl-k\">=</span> <span class=\"pl-c1\">1</span>  <span class=\"pl-c\"><span class=\"pl-c\">#</span> Fails with \"ValueError: assignment destination is read-only\"</span>\n\n<span class=\"pl-k\">%</span>time t <span class=\"pl-k\">=</span> torch.from_numpy(x)  <span class=\"pl-c\"><span class=\"pl-c\">#</span> This takes 9s.</span>\n\nt[<span class=\"pl-c1\">0</span>] <span class=\"pl-k\">=</span> <span class=\"pl-c1\">1</span>  <span class=\"pl-c\"><span class=\"pl-c\">#</span> This succeeds.</span>\n\n<span class=\"pl-c1\">print</span>(x[<span class=\"pl-c1\">0</span>])  <span class=\"pl-c\"><span class=\"pl-c\">#</span> prints \"0.0\", so x is unmodified</span>\n<span class=\"pl-c1\">print</span>(t[<span class=\"pl-c1\">0</span>])  <span class=\"pl-c\"><span class=\"pl-c\">#</span> prints \"1.0\", so t is modified</span></pre></div>", "body_text": "It really seems to me like torch.from_numpy(x) does a copy when x is read only. I looked at the code that you linked to and I agree I don't see where the copy is happening.. but you can verify just by mutating the tensor and seeing that the underlying array doesn't change.\nimport numpy as np\nimport torch\n\nx = np.zeros(10 ** 9)\nx.flags.writeable = False\n\nx[0] = 1  # Fails with \"ValueError: assignment destination is read-only\"\n\n%time t = torch.from_numpy(x)  # This takes 9s.\n\nt[0] = 1  # This succeeds.\n\nprint(x[0])  # prints \"0.0\", so x is unmodified\nprint(t[0])  # prints \"1.0\", so t is modified", "body": "It really seems to me like `torch.from_numpy(x)` does a copy when `x` is read only. I looked at the code that you linked to and I agree I don't see where the copy is happening.. but you can verify just by mutating the tensor and seeing that the underlying array doesn't change.\r\n\r\n```python\r\nimport numpy as np\r\nimport torch\r\n\r\nx = np.zeros(10 ** 9)\r\nx.flags.writeable = False\r\n\r\nx[0] = 1  # Fails with \"ValueError: assignment destination is read-only\"\r\n\r\n%time t = torch.from_numpy(x)  # This takes 9s.\r\n\r\nt[0] = 1  # This succeeds.\r\n\r\nprint(x[0])  # prints \"0.0\", so x is unmodified\r\nprint(t[0])  # prints \"1.0\", so t is modified\r\n```"}