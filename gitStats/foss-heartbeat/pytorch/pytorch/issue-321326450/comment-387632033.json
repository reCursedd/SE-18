{"url": "https://api.github.com/repos/pytorch/pytorch/issues/comments/387632033", "html_url": "https://github.com/pytorch/pytorch/pull/7388#issuecomment-387632033", "issue_url": "https://api.github.com/repos/pytorch/pytorch/issues/7388", "id": 387632033, "node_id": "MDEyOklzc3VlQ29tbWVudDM4NzYzMjAzMw==", "user": {"login": "vedaanta", "id": 15700745, "node_id": "MDQ6VXNlcjE1NzAwNzQ1", "avatar_url": "https://avatars0.githubusercontent.com/u/15700745?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vedaanta", "html_url": "https://github.com/vedaanta", "followers_url": "https://api.github.com/users/vedaanta/followers", "following_url": "https://api.github.com/users/vedaanta/following{/other_user}", "gists_url": "https://api.github.com/users/vedaanta/gists{/gist_id}", "starred_url": "https://api.github.com/users/vedaanta/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vedaanta/subscriptions", "organizations_url": "https://api.github.com/users/vedaanta/orgs", "repos_url": "https://api.github.com/users/vedaanta/repos", "events_url": "https://api.github.com/users/vedaanta/events{/privacy}", "received_events_url": "https://api.github.com/users/vedaanta/received_events", "type": "User", "site_admin": false}, "created_at": "2018-05-09T06:17:10Z", "updated_at": "2018-05-09T06:17:10Z", "author_association": "CONTRIBUTOR", "body_html": "<pre><code>import torch\nfrom torch.nn import functional as F\ninput = torch.tensor([[[1., 2, 3, 4, 5, 6, 7, 8]]])\noutput, indices = F.max_pool1d(input, 2, stride=2, return_indices=True)\nF.max_unpool1d(output, indices, 2, stride=2) # Output: tensor([[[ 0.,  2.,  0.,  4.,  0.,  6.,  0.,  8.]]])\nF.max_unpool1d(output, indices, 2) # Fails before this PR\n</code></pre>\n<p><code>stride = None</code> is passed to '_unpool_output_size' in '~/torch/nn/functional.py'</p>", "body_text": "import torch\nfrom torch.nn import functional as F\ninput = torch.tensor([[[1., 2, 3, 4, 5, 6, 7, 8]]])\noutput, indices = F.max_pool1d(input, 2, stride=2, return_indices=True)\nF.max_unpool1d(output, indices, 2, stride=2) # Output: tensor([[[ 0.,  2.,  0.,  4.,  0.,  6.,  0.,  8.]]])\nF.max_unpool1d(output, indices, 2) # Fails before this PR\n\nstride = None is passed to '_unpool_output_size' in '~/torch/nn/functional.py'", "body": "```\r\nimport torch\r\nfrom torch.nn import functional as F\r\ninput = torch.tensor([[[1., 2, 3, 4, 5, 6, 7, 8]]])\r\noutput, indices = F.max_pool1d(input, 2, stride=2, return_indices=True)\r\nF.max_unpool1d(output, indices, 2, stride=2) # Output: tensor([[[ 0.,  2.,  0.,  4.,  0.,  6.,  0.,  8.]]])\r\nF.max_unpool1d(output, indices, 2) # Fails before this PR\r\n```\r\n`stride = None` is passed to '_unpool_output_size' in '~/torch/nn/functional.py'"}