{"url": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/207775373", "pull_request_review_id": 143453975, "id": 207775373, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwNzc3NTM3Mw==", "diff_hunk": "@@ -394,13 +380,30 @@ static inline bool isIntUsedAsIntList(\n          *arg.type == *ListType::ofInts() && arg.N;\n }\n \n+template<class T>\n+static Value* materializeConstant(T val, Graph& graph,\n+    const SourceRange& r, std::unordered_map<T, Value*>& map) {\n+  auto existing_constant = map.find(val);\n+  if (existing_constant != map.end()) {\n+    return existing_constant->second;\n+  }\n+\n+  WithInsertPoint guard(graph.block()->nodes().front());\n+  auto new_constant = graph.insertConstant(val, r);\n+  map[val] = new_constant;\n+\n+  return new_constant;\n+}\n+\n at::optional<std::vector<Value*>> tryMatchSchema(\n   const FunctionSchema& schema,\n   const SourceRange& loc,\n   Graph& graph,\n   at::ArrayRef<NamedValue> inputs,\n   at::ArrayRef<NamedValue> attributes,\n-  std::ostream& failure_messages) {\n+  std::ostream& failure_messages,\n+  std::unordered_map<int64_t, Value*>* integral_constants,", "path": "torch/csrc/jit/script/compiler.cpp", "position": null, "original_position": 48, "commit_id": "d21055d16045971cf542ce77608bd8850ed3ec35", "original_commit_id": "ce822e5bc801ca411ff2d8b3e729e0f2fb63bbf0", "user": {"login": "resistor", "id": 9796, "node_id": "MDQ6VXNlcjk3OTY=", "avatar_url": "https://avatars0.githubusercontent.com/u/9796?v=4", "gravatar_id": "", "url": "https://api.github.com/users/resistor", "html_url": "https://github.com/resistor", "followers_url": "https://api.github.com/users/resistor/followers", "following_url": "https://api.github.com/users/resistor/following{/other_user}", "gists_url": "https://api.github.com/users/resistor/gists{/gist_id}", "starred_url": "https://api.github.com/users/resistor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/resistor/subscriptions", "organizations_url": "https://api.github.com/users/resistor/orgs", "repos_url": "https://api.github.com/users/resistor/repos", "events_url": "https://api.github.com/users/resistor/events{/privacy}", "received_events_url": "https://api.github.com/users/resistor/received_events", "type": "User", "site_admin": false}, "body": "It's an artifact from when I did tried to use materializeConstant around like 444, but it didn't work out and I forgot to undo it.", "created_at": "2018-08-06T05:13:36Z", "updated_at": "2018-11-23T15:48:48Z", "html_url": "https://github.com/pytorch/pytorch/pull/10231#discussion_r207775373", "pull_request_url": "https://api.github.com/repos/pytorch/pytorch/pulls/10231", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/207775373"}, "html": {"href": "https://github.com/pytorch/pytorch/pull/10231#discussion_r207775373"}, "pull_request": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/10231"}}, "body_html": "<p>It's an artifact from when I did tried to use materializeConstant around like 444, but it didn't work out and I forgot to undo it.</p>", "body_text": "It's an artifact from when I did tried to use materializeConstant around like 444, but it didn't work out and I forgot to undo it.", "in_reply_to_id": 207775041}