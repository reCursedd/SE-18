{"url": "https://api.github.com/repos/pytorch/pytorch/pulls/8666", "id": 195962277, "node_id": "MDExOlB1bGxSZXF1ZXN0MTk1OTYyMjc3", "html_url": "https://github.com/pytorch/pytorch/pull/8666", "diff_url": "https://github.com/pytorch/pytorch/pull/8666.diff", "patch_url": "https://github.com/pytorch/pytorch/pull/8666.patch", "issue_url": "https://api.github.com/repos/pytorch/pytorch/issues/8666", "number": 8666, "state": "closed", "locked": false, "title": "Some 0-sized dimension support, port catArray away from resizeLegacy.", "user": {"login": "gchanan", "id": 3768583, "node_id": "MDQ6VXNlcjM3Njg1ODM=", "avatar_url": "https://avatars2.githubusercontent.com/u/3768583?v=4", "gravatar_id": "", "url": "https://api.github.com/users/gchanan", "html_url": "https://github.com/gchanan", "followers_url": "https://api.github.com/users/gchanan/followers", "following_url": "https://api.github.com/users/gchanan/following{/other_user}", "gists_url": "https://api.github.com/users/gchanan/gists{/gist_id}", "starred_url": "https://api.github.com/users/gchanan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/gchanan/subscriptions", "organizations_url": "https://api.github.com/users/gchanan/orgs", "repos_url": "https://api.github.com/users/gchanan/repos", "events_url": "https://api.github.com/users/gchanan/events{/privacy}", "received_events_url": "https://api.github.com/users/gchanan/received_events", "type": "User", "site_admin": false}, "body": "The goal of this PR is to port catArray away from resizeLegacy (so we can delete the legacy resize calls), but since catArray has some weird behavior because we don't have arbitrary 0-sized dimension support, I made some effort to fix these both in one pass.\r\n\r\nThe major changes here are:\r\n1) catArray uses the new resize API, no longer the old resizeLegacy API.\r\n2) As 1) is the last usage of resizeLegacy, it is deleted.\r\n3) If compiled with USE_TH_SIZE_ZERO_DIM, catArray will work and properly check shapes for n-dimensional empty tensors.\r\n4) However, we retain the old behavior of \"ignoring\" size [0] tensors in catArray.  We previously allowed this because we didn't have n-dimensional empty tensors.\r\n5) To get the above to work, we also add support for n-dimensional empty tensors for narrow and slice (ifdef USE_TH_SIZE_ZERO_DIM).\r\n6) We change the stride formula for empty tensors to match NumPy; basically, we never multiply by 0 as the size, always at least 1, so the strides are monotonically increasing in the empty tensor case.\r\n7) We print the size of empty tensors if size != [0]; this matches NumPy behavior (even in cases where the size could be inferred from the brackets.  Example:\r\n```\r\n>>> torch.randn(2,0,3, dtype=torch.float64)\r\ntensor([], size=(2, 0, 3), dtype=torch.float64)\r\n```\r\n8) For test purposes, we add torch._C._use_zero_size_dim() to add tests for the above.\r\n\r\n", "created_at": "2018-06-19T21:23:55Z", "updated_at": "2018-11-23T15:45:52Z", "closed_at": "2018-06-20T17:26:09Z", "merged_at": "2018-06-20T17:26:09Z", "merge_commit_sha": "b6af5d40bf22c1fb7f19d5ad0fc76e4619af1bd8", "assignee": null, "assignees": [], "requested_reviewers": [{"login": "zdevito", "id": 370202, "node_id": "MDQ6VXNlcjM3MDIwMg==", "avatar_url": "https://avatars0.githubusercontent.com/u/370202?v=4", "gravatar_id": "", "url": "https://api.github.com/users/zdevito", "html_url": "https://github.com/zdevito", "followers_url": "https://api.github.com/users/zdevito/followers", "following_url": "https://api.github.com/users/zdevito/following{/other_user}", "gists_url": "https://api.github.com/users/zdevito/gists{/gist_id}", "starred_url": "https://api.github.com/users/zdevito/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/zdevito/subscriptions", "organizations_url": "https://api.github.com/users/zdevito/orgs", "repos_url": "https://api.github.com/users/zdevito/repos", "events_url": "https://api.github.com/users/zdevito/events{/privacy}", "received_events_url": "https://api.github.com/users/zdevito/received_events", "type": "User", "site_admin": false}, {"login": "colesbury", "id": 655866, "node_id": "MDQ6VXNlcjY1NTg2Ng==", "avatar_url": "https://avatars1.githubusercontent.com/u/655866?v=4", "gravatar_id": "", "url": "https://api.github.com/users/colesbury", "html_url": "https://github.com/colesbury", "followers_url": "https://api.github.com/users/colesbury/followers", "following_url": "https://api.github.com/users/colesbury/following{/other_user}", "gists_url": "https://api.github.com/users/colesbury/gists{/gist_id}", "starred_url": "https://api.github.com/users/colesbury/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/colesbury/subscriptions", "organizations_url": "https://api.github.com/users/colesbury/orgs", "repos_url": "https://api.github.com/users/colesbury/repos", "events_url": "https://api.github.com/users/colesbury/events{/privacy}", "received_events_url": "https://api.github.com/users/colesbury/received_events", "type": "User", "site_admin": false}, {"login": "soumith", "id": 1310570, "node_id": "MDQ6VXNlcjEzMTA1NzA=", "avatar_url": "https://avatars0.githubusercontent.com/u/1310570?v=4", "gravatar_id": "", "url": "https://api.github.com/users/soumith", "html_url": "https://github.com/soumith", "followers_url": "https://api.github.com/users/soumith/followers", "following_url": "https://api.github.com/users/soumith/following{/other_user}", "gists_url": "https://api.github.com/users/soumith/gists{/gist_id}", "starred_url": "https://api.github.com/users/soumith/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/soumith/subscriptions", "organizations_url": "https://api.github.com/users/soumith/orgs", "repos_url": "https://api.github.com/users/soumith/repos", "events_url": "https://api.github.com/users/soumith/events{/privacy}", "received_events_url": "https://api.github.com/users/soumith/received_events", "type": "User", "site_admin": false}, {"login": "apaszke", "id": 4583066, "node_id": "MDQ6VXNlcjQ1ODMwNjY=", "avatar_url": "https://avatars3.githubusercontent.com/u/4583066?v=4", "gravatar_id": "", "url": "https://api.github.com/users/apaszke", "html_url": "https://github.com/apaszke", "followers_url": "https://api.github.com/users/apaszke/followers", "following_url": "https://api.github.com/users/apaszke/following{/other_user}", "gists_url": "https://api.github.com/users/apaszke/gists{/gist_id}", "starred_url": "https://api.github.com/users/apaszke/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/apaszke/subscriptions", "organizations_url": "https://api.github.com/users/apaszke/orgs", "repos_url": "https://api.github.com/users/apaszke/repos", "events_url": "https://api.github.com/users/apaszke/events{/privacy}", "received_events_url": "https://api.github.com/users/apaszke/received_events", "type": "User", "site_admin": false}], "requested_teams": [], "labels": [], "milestone": null, "commits_url": "https://api.github.com/repos/pytorch/pytorch/pulls/8666/commits", "review_comments_url": "https://api.github.com/repos/pytorch/pytorch/pulls/8666/comments", "review_comment_url": "https://api.github.com/repos/pytorch/pytorch/pulls/comments{/number}", "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/8666/comments", "statuses_url": "https://api.github.com/repos/pytorch/pytorch/statuses/000f6154949c1936b1e5f47dde04d0647564b1dd", "head": {"label": "gchanan:catArray2", "ref": "catArray2", "sha": "000f6154949c1936b1e5f47dde04d0647564b1dd", "user": {"login": "gchanan", "id": 3768583, "node_id": "MDQ6VXNlcjM3Njg1ODM=", "avatar_url": "https://avatars2.githubusercontent.com/u/3768583?v=4", "gravatar_id": "", "url": "https://api.github.com/users/gchanan", "html_url": "https://github.com/gchanan", "followers_url": "https://api.github.com/users/gchanan/followers", "following_url": "https://api.github.com/users/gchanan/following{/other_user}", "gists_url": "https://api.github.com/users/gchanan/gists{/gist_id}", "starred_url": "https://api.github.com/users/gchanan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/gchanan/subscriptions", "organizations_url": "https://api.github.com/users/gchanan/orgs", "repos_url": "https://api.github.com/users/gchanan/repos", "events_url": "https://api.github.com/users/gchanan/events{/privacy}", "received_events_url": "https://api.github.com/users/gchanan/received_events", "type": "User", "site_admin": false}, "repo": {"id": 88906627, "node_id": "MDEwOlJlcG9zaXRvcnk4ODkwNjYyNw==", "name": "pytorch", "full_name": "gchanan/pytorch", "private": false, "owner": {"login": "gchanan", "id": 3768583, "node_id": "MDQ6VXNlcjM3Njg1ODM=", "avatar_url": "https://avatars2.githubusercontent.com/u/3768583?v=4", "gravatar_id": "", "url": "https://api.github.com/users/gchanan", "html_url": "https://github.com/gchanan", "followers_url": "https://api.github.com/users/gchanan/followers", "following_url": "https://api.github.com/users/gchanan/following{/other_user}", "gists_url": "https://api.github.com/users/gchanan/gists{/gist_id}", "starred_url": "https://api.github.com/users/gchanan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/gchanan/subscriptions", "organizations_url": "https://api.github.com/users/gchanan/orgs", "repos_url": "https://api.github.com/users/gchanan/repos", "events_url": "https://api.github.com/users/gchanan/events{/privacy}", "received_events_url": "https://api.github.com/users/gchanan/received_events", "type": "User", "site_admin": false}, "html_url": "https://github.com/gchanan/pytorch", "description": "Tensors and Dynamic neural networks in Python  with strong GPU acceleration", "fork": true, "url": "https://api.github.com/repos/gchanan/pytorch", "forks_url": "https://api.github.com/repos/gchanan/pytorch/forks", "keys_url": "https://api.github.com/repos/gchanan/pytorch/keys{/key_id}", "collaborators_url": "https://api.github.com/repos/gchanan/pytorch/collaborators{/collaborator}", "teams_url": "https://api.github.com/repos/gchanan/pytorch/teams", "hooks_url": "https://api.github.com/repos/gchanan/pytorch/hooks", "issue_events_url": "https://api.github.com/repos/gchanan/pytorch/issues/events{/number}", "events_url": "https://api.github.com/repos/gchanan/pytorch/events", "assignees_url": "https://api.github.com/repos/gchanan/pytorch/assignees{/user}", "branches_url": "https://api.github.com/repos/gchanan/pytorch/branches{/branch}", "tags_url": "https://api.github.com/repos/gchanan/pytorch/tags", "blobs_url": "https://api.github.com/repos/gchanan/pytorch/git/blobs{/sha}", "git_tags_url": "https://api.github.com/repos/gchanan/pytorch/git/tags{/sha}", "git_refs_url": "https://api.github.com/repos/gchanan/pytorch/git/refs{/sha}", "trees_url": "https://api.github.com/repos/gchanan/pytorch/git/trees{/sha}", "statuses_url": "https://api.github.com/repos/gchanan/pytorch/statuses/{sha}", "languages_url": "https://api.github.com/repos/gchanan/pytorch/languages", "stargazers_url": "https://api.github.com/repos/gchanan/pytorch/stargazers", "contributors_url": "https://api.github.com/repos/gchanan/pytorch/contributors", "subscribers_url": "https://api.github.com/repos/gchanan/pytorch/subscribers", "subscription_url": "https://api.github.com/repos/gchanan/pytorch/subscription", "commits_url": "https://api.github.com/repos/gchanan/pytorch/commits{/sha}", "git_commits_url": "https://api.github.com/repos/gchanan/pytorch/git/commits{/sha}", "comments_url": "https://api.github.com/repos/gchanan/pytorch/comments{/number}", "issue_comment_url": "https://api.github.com/repos/gchanan/pytorch/issues/comments{/number}", "contents_url": "https://api.github.com/repos/gchanan/pytorch/contents/{+path}", "compare_url": "https://api.github.com/repos/gchanan/pytorch/compare/{base}...{head}", "merges_url": "https://api.github.com/repos/gchanan/pytorch/merges", "archive_url": "https://api.github.com/repos/gchanan/pytorch/{archive_format}{/ref}", "downloads_url": "https://api.github.com/repos/gchanan/pytorch/downloads", "issues_url": "https://api.github.com/repos/gchanan/pytorch/issues{/number}", "pulls_url": "https://api.github.com/repos/gchanan/pytorch/pulls{/number}", "milestones_url": "https://api.github.com/repos/gchanan/pytorch/milestones{/number}", "notifications_url": "https://api.github.com/repos/gchanan/pytorch/notifications{?since,all,participating}", "labels_url": "https://api.github.com/repos/gchanan/pytorch/labels{/name}", "releases_url": "https://api.github.com/repos/gchanan/pytorch/releases{/id}", "deployments_url": "https://api.github.com/repos/gchanan/pytorch/deployments", "created_at": "2017-04-20T20:14:16Z", "updated_at": "2018-10-19T12:21:28Z", "pushed_at": "2018-11-21T22:07:06Z", "git_url": "git://github.com/gchanan/pytorch.git", "ssh_url": "git@github.com:gchanan/pytorch.git", "clone_url": "https://github.com/gchanan/pytorch.git", "svn_url": "https://github.com/gchanan/pytorch", "homepage": "http://pytorch.org", "size": 94092, "stargazers_count": 4, "watchers_count": 4, "language": "Python", "has_issues": true, "has_projects": true, "has_downloads": true, "has_wiki": true, "has_pages": false, "forks_count": 0, "mirror_url": null, "archived": false, "open_issues_count": 1, "license": {"key": "other", "name": "Other", "spdx_id": "NOASSERTION", "url": null, "node_id": "MDc6TGljZW5zZTA="}, "forks": 0, "open_issues": 1, "watchers": 4, "default_branch": "master"}}, "base": {"label": "pytorch:master", "ref": "master", "sha": "0e0031e20443a85945a8eba83365218343ef301d", "user": {"login": "pytorch", "id": 21003710, "node_id": "MDEyOk9yZ2FuaXphdGlvbjIxMDAzNzEw", "avatar_url": "https://avatars3.githubusercontent.com/u/21003710?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pytorch", "html_url": "https://github.com/pytorch", "followers_url": "https://api.github.com/users/pytorch/followers", "following_url": "https://api.github.com/users/pytorch/following{/other_user}", "gists_url": "https://api.github.com/users/pytorch/gists{/gist_id}", "starred_url": "https://api.github.com/users/pytorch/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pytorch/subscriptions", "organizations_url": "https://api.github.com/users/pytorch/orgs", "repos_url": "https://api.github.com/users/pytorch/repos", "events_url": "https://api.github.com/users/pytorch/events{/privacy}", "received_events_url": "https://api.github.com/users/pytorch/received_events", "type": "Organization", "site_admin": false}, "repo": {"id": 65600975, "node_id": "MDEwOlJlcG9zaXRvcnk2NTYwMDk3NQ==", "name": "pytorch", "full_name": "pytorch/pytorch", "private": false, "owner": {"login": "pytorch", "id": 21003710, "node_id": "MDEyOk9yZ2FuaXphdGlvbjIxMDAzNzEw", "avatar_url": "https://avatars3.githubusercontent.com/u/21003710?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pytorch", "html_url": "https://github.com/pytorch", "followers_url": "https://api.github.com/users/pytorch/followers", "following_url": "https://api.github.com/users/pytorch/following{/other_user}", "gists_url": "https://api.github.com/users/pytorch/gists{/gist_id}", "starred_url": "https://api.github.com/users/pytorch/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pytorch/subscriptions", "organizations_url": "https://api.github.com/users/pytorch/orgs", "repos_url": "https://api.github.com/users/pytorch/repos", "events_url": "https://api.github.com/users/pytorch/events{/privacy}", "received_events_url": "https://api.github.com/users/pytorch/received_events", "type": "Organization", "site_admin": false}, "html_url": "https://github.com/pytorch/pytorch", "description": "Tensors and Dynamic neural networks in Python  with strong GPU acceleration", "fork": false, "url": "https://api.github.com/repos/pytorch/pytorch", "forks_url": "https://api.github.com/repos/pytorch/pytorch/forks", "keys_url": "https://api.github.com/repos/pytorch/pytorch/keys{/key_id}", "collaborators_url": "https://api.github.com/repos/pytorch/pytorch/collaborators{/collaborator}", "teams_url": "https://api.github.com/repos/pytorch/pytorch/teams", "hooks_url": "https://api.github.com/repos/pytorch/pytorch/hooks", "issue_events_url": "https://api.github.com/repos/pytorch/pytorch/issues/events{/number}", "events_url": "https://api.github.com/repos/pytorch/pytorch/events", "assignees_url": "https://api.github.com/repos/pytorch/pytorch/assignees{/user}", "branches_url": "https://api.github.com/repos/pytorch/pytorch/branches{/branch}", "tags_url": "https://api.github.com/repos/pytorch/pytorch/tags", "blobs_url": "https://api.github.com/repos/pytorch/pytorch/git/blobs{/sha}", "git_tags_url": "https://api.github.com/repos/pytorch/pytorch/git/tags{/sha}", "git_refs_url": "https://api.github.com/repos/pytorch/pytorch/git/refs{/sha}", "trees_url": "https://api.github.com/repos/pytorch/pytorch/git/trees{/sha}", "statuses_url": "https://api.github.com/repos/pytorch/pytorch/statuses/{sha}", "languages_url": "https://api.github.com/repos/pytorch/pytorch/languages", "stargazers_url": "https://api.github.com/repos/pytorch/pytorch/stargazers", "contributors_url": "https://api.github.com/repos/pytorch/pytorch/contributors", "subscribers_url": "https://api.github.com/repos/pytorch/pytorch/subscribers", "subscription_url": "https://api.github.com/repos/pytorch/pytorch/subscription", "commits_url": "https://api.github.com/repos/pytorch/pytorch/commits{/sha}", "git_commits_url": "https://api.github.com/repos/pytorch/pytorch/git/commits{/sha}", "comments_url": "https://api.github.com/repos/pytorch/pytorch/comments{/number}", "issue_comment_url": "https://api.github.com/repos/pytorch/pytorch/issues/comments{/number}", "contents_url": "https://api.github.com/repos/pytorch/pytorch/contents/{+path}", "compare_url": "https://api.github.com/repos/pytorch/pytorch/compare/{base}...{head}", "merges_url": "https://api.github.com/repos/pytorch/pytorch/merges", "archive_url": "https://api.github.com/repos/pytorch/pytorch/{archive_format}{/ref}", "downloads_url": "https://api.github.com/repos/pytorch/pytorch/downloads", "issues_url": "https://api.github.com/repos/pytorch/pytorch/issues{/number}", "pulls_url": "https://api.github.com/repos/pytorch/pytorch/pulls{/number}", "milestones_url": "https://api.github.com/repos/pytorch/pytorch/milestones{/number}", "notifications_url": "https://api.github.com/repos/pytorch/pytorch/notifications{?since,all,participating}", "labels_url": "https://api.github.com/repos/pytorch/pytorch/labels{/name}", "releases_url": "https://api.github.com/repos/pytorch/pytorch/releases{/id}", "deployments_url": "https://api.github.com/repos/pytorch/pytorch/deployments", "created_at": "2016-08-13T05:26:41Z", "updated_at": "2018-11-24T05:35:41Z", "pushed_at": "2018-11-24T05:34:07Z", "git_url": "git://github.com/pytorch/pytorch.git", "ssh_url": "git@github.com:pytorch/pytorch.git", "clone_url": "https://github.com/pytorch/pytorch.git", "svn_url": "https://github.com/pytorch/pytorch", "homepage": "http://pytorch.org", "size": 89651, "stargazers_count": 21577, "watchers_count": 21577, "language": "C++", "has_issues": true, "has_projects": true, "has_downloads": true, "has_wiki": true, "has_pages": false, "forks_count": 5149, "mirror_url": null, "archived": false, "open_issues_count": 2193, "license": {"key": "other", "name": "Other", "spdx_id": "NOASSERTION", "url": null, "node_id": "MDc6TGljZW5zZTA="}, "forks": 5149, "open_issues": 2193, "watchers": 21577, "default_branch": "master"}}, "_links": {"self": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/8666"}, "html": {"href": "https://github.com/pytorch/pytorch/pull/8666"}, "issue": {"href": "https://api.github.com/repos/pytorch/pytorch/issues/8666"}, "comments": {"href": "https://api.github.com/repos/pytorch/pytorch/issues/8666/comments"}, "review_comments": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/8666/comments"}, "review_comment": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/comments{/number}"}, "commits": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/8666/commits"}, "statuses": {"href": "https://api.github.com/repos/pytorch/pytorch/statuses/000f6154949c1936b1e5f47dde04d0647564b1dd"}}, "author_association": "CONTRIBUTOR", "body_html": "<p>The goal of this PR is to port catArray away from resizeLegacy (so we can delete the legacy resize calls), but since catArray has some weird behavior because we don't have arbitrary 0-sized dimension support, I made some effort to fix these both in one pass.</p>\n<p>The major changes here are:</p>\n<ol>\n<li>catArray uses the new resize API, no longer the old resizeLegacy API.</li>\n<li>As 1) is the last usage of resizeLegacy, it is deleted.</li>\n<li>If compiled with USE_TH_SIZE_ZERO_DIM, catArray will work and properly check shapes for n-dimensional empty tensors.</li>\n<li>However, we retain the old behavior of \"ignoring\" size [0] tensors in catArray.  We previously allowed this because we didn't have n-dimensional empty tensors.</li>\n<li>To get the above to work, we also add support for n-dimensional empty tensors for narrow and slice (ifdef USE_TH_SIZE_ZERO_DIM).</li>\n<li>We change the stride formula for empty tensors to match NumPy; basically, we never multiply by 0 as the size, always at least 1, so the strides are monotonically increasing in the empty tensor case.</li>\n<li>We print the size of empty tensors if size != [0]; this matches NumPy behavior (even in cases where the size could be inferred from the brackets.  Example:</li>\n</ol>\n<pre><code>&gt;&gt;&gt; torch.randn(2,0,3, dtype=torch.float64)\ntensor([], size=(2, 0, 3), dtype=torch.float64)\n</code></pre>\n<ol start=\"8\">\n<li>For test purposes, we add torch._C._use_zero_size_dim() to add tests for the above.</li>\n</ol>", "body_text": "The goal of this PR is to port catArray away from resizeLegacy (so we can delete the legacy resize calls), but since catArray has some weird behavior because we don't have arbitrary 0-sized dimension support, I made some effort to fix these both in one pass.\nThe major changes here are:\n\ncatArray uses the new resize API, no longer the old resizeLegacy API.\nAs 1) is the last usage of resizeLegacy, it is deleted.\nIf compiled with USE_TH_SIZE_ZERO_DIM, catArray will work and properly check shapes for n-dimensional empty tensors.\nHowever, we retain the old behavior of \"ignoring\" size [0] tensors in catArray.  We previously allowed this because we didn't have n-dimensional empty tensors.\nTo get the above to work, we also add support for n-dimensional empty tensors for narrow and slice (ifdef USE_TH_SIZE_ZERO_DIM).\nWe change the stride formula for empty tensors to match NumPy; basically, we never multiply by 0 as the size, always at least 1, so the strides are monotonically increasing in the empty tensor case.\nWe print the size of empty tensors if size != [0]; this matches NumPy behavior (even in cases where the size could be inferred from the brackets.  Example:\n\n>>> torch.randn(2,0,3, dtype=torch.float64)\ntensor([], size=(2, 0, 3), dtype=torch.float64)\n\n\nFor test purposes, we add torch._C._use_zero_size_dim() to add tests for the above.", "merged": true, "mergeable": null, "rebaseable": null, "mergeable_state": "unknown", "merged_by": {"login": "gchanan", "id": 3768583, "node_id": "MDQ6VXNlcjM3Njg1ODM=", "avatar_url": "https://avatars2.githubusercontent.com/u/3768583?v=4", "gravatar_id": "", "url": "https://api.github.com/users/gchanan", "html_url": "https://github.com/gchanan", "followers_url": "https://api.github.com/users/gchanan/followers", "following_url": "https://api.github.com/users/gchanan/following{/other_user}", "gists_url": "https://api.github.com/users/gchanan/gists{/gist_id}", "starred_url": "https://api.github.com/users/gchanan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/gchanan/subscriptions", "organizations_url": "https://api.github.com/users/gchanan/orgs", "repos_url": "https://api.github.com/users/gchanan/repos", "events_url": "https://api.github.com/users/gchanan/events{/privacy}", "received_events_url": "https://api.github.com/users/gchanan/received_events", "type": "User", "site_admin": false}, "comments": 2, "review_comments": 10, "maintainer_can_modify": false, "commits": 4, "additions": 219, "deletions": 307, "changed_files": 16}