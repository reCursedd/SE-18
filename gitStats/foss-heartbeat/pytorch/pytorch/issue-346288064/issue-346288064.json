{"url": "https://api.github.com/repos/pytorch/pytorch/issues/10081", "repository_url": "https://api.github.com/repos/pytorch/pytorch", "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/10081/labels{/name}", "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/10081/comments", "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/10081/events", "html_url": "https://github.com/pytorch/pytorch/pull/10081", "id": 346288064, "node_id": "MDExOlB1bGxSZXF1ZXN0MjA1MTg4NTQx", "number": 10081, "title": "nomnigraph - new utility for graph transformation", "user": {"login": "duc0", "id": 10603132, "node_id": "MDQ6VXNlcjEwNjAzMTMy", "avatar_url": "https://avatars1.githubusercontent.com/u/10603132?v=4", "gravatar_id": "", "url": "https://api.github.com/users/duc0", "html_url": "https://github.com/duc0", "followers_url": "https://api.github.com/users/duc0/followers", "following_url": "https://api.github.com/users/duc0/following{/other_user}", "gists_url": "https://api.github.com/users/duc0/gists{/gist_id}", "starred_url": "https://api.github.com/users/duc0/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/duc0/subscriptions", "organizations_url": "https://api.github.com/users/duc0/orgs", "repos_url": "https://api.github.com/users/duc0/repos", "events_url": "https://api.github.com/users/duc0/events{/privacy}", "received_events_url": "https://api.github.com/users/duc0/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2018-07-31T17:35:05Z", "updated_at": "2018-08-02T06:10:45Z", "closed_at": "2018-08-02T06:10:45Z", "author_association": "CONTRIBUTOR", "pull_request": {"url": "https://api.github.com/repos/pytorch/pytorch/pulls/10081", "html_url": "https://github.com/pytorch/pytorch/pull/10081", "diff_url": "https://github.com/pytorch/pytorch/pull/10081.diff", "patch_url": "https://github.com/pytorch/pytorch/pull/10081.patch"}, "body_html": "<p>Summary:<br>\nAdd new utility that make it easier to write graph transformation. Callers now only need to take care of the actual transformation logic. The subgraph matching is simplified because callers only need to specify a simple construct for subtree matching criteria.</p>\n<p>The utlity is SubgraphMatcher::replaceSubtree</p>\n<p>Some notes:</p>\n<ul>\n<li>replaceSubtree takes a subtree matching criteria, and a lambda that takes a subtree root. It does't not handle any transformations itself. Callers should be responsible for the transformation part, including deleting all nodes in the matched subtree(s). We could enhance this to also handle the deletion part if it turns out to be useful.</li>\n<li>Only sub tree matching is supported for now but we can add general DAG sub-graph support later if needed.</li>\n</ul>\n<p>Differential Revision: D9073297</p>", "body_text": "Summary:\nAdd new utility that make it easier to write graph transformation. Callers now only need to take care of the actual transformation logic. The subgraph matching is simplified because callers only need to specify a simple construct for subtree matching criteria.\nThe utlity is SubgraphMatcher::replaceSubtree\nSome notes:\n\nreplaceSubtree takes a subtree matching criteria, and a lambda that takes a subtree root. It does't not handle any transformations itself. Callers should be responsible for the transformation part, including deleting all nodes in the matched subtree(s). We could enhance this to also handle the deletion part if it turns out to be useful.\nOnly sub tree matching is supported for now but we can add general DAG sub-graph support later if needed.\n\nDifferential Revision: D9073297", "body": "Summary:\nAdd new utility that make it easier to write graph transformation. Callers now only need to take care of the actual transformation logic. The subgraph matching is simplified because callers only need to specify a simple construct for subtree matching criteria.\n\nThe utlity is SubgraphMatcher::replaceSubtree\n\nSome notes:\n- replaceSubtree takes a subtree matching criteria, and a lambda that takes a subtree root. It does't not handle any transformations itself. Callers should be responsible for the transformation part, including deleting all nodes in the matched subtree(s). We could enhance this to also handle the deletion part if it turns out to be useful.\n- Only sub tree matching is supported for now but we can add general DAG sub-graph support later if needed.\n\nDifferential Revision: D9073297\n"}