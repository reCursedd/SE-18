{"url": "https://api.github.com/repos/pytorch/pytorch/issues/14219", "repository_url": "https://api.github.com/repos/pytorch/pytorch", "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/14219/labels{/name}", "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/14219/comments", "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/14219/events", "html_url": "https://github.com/pytorch/pytorch/issues/14219", "id": 382524687, "node_id": "MDU6SXNzdWUzODI1MjQ2ODc=", "number": 14219, "title": "C++ model load error", "user": {"login": "jinfagang", "id": 21303438, "node_id": "MDQ6VXNlcjIxMzAzNDM4", "avatar_url": "https://avatars3.githubusercontent.com/u/21303438?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jinfagang", "html_url": "https://github.com/jinfagang", "followers_url": "https://api.github.com/users/jinfagang/followers", "following_url": "https://api.github.com/users/jinfagang/following{/other_user}", "gists_url": "https://api.github.com/users/jinfagang/gists{/gist_id}", "starred_url": "https://api.github.com/users/jinfagang/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jinfagang/subscriptions", "organizations_url": "https://api.github.com/users/jinfagang/orgs", "repos_url": "https://api.github.com/users/jinfagang/repos", "events_url": "https://api.github.com/users/jinfagang/events{/privacy}", "received_events_url": "https://api.github.com/users/jinfagang/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 12, "created_at": "2018-11-20T06:53:28Z", "updated_at": "2018-11-21T14:34:57Z", "closed_at": null, "author_association": "NONE", "body_html": "<p>I got error when load model from a tracing typescripts model. The trace model is simple:</p>\n<div class=\"highlight highlight-source-python\"><pre><span class=\"pl-k\">import</span> torch\n<span class=\"pl-k\">import</span> torchvision\n<span class=\"pl-k\">from</span> torchvision <span class=\"pl-k\">import</span> transforms\n<span class=\"pl-k\">from</span> <span class=\"pl-c1\">PIL</span> <span class=\"pl-k\">import</span> Image\n<span class=\"pl-k\">from</span> time <span class=\"pl-k\">import</span> time\n<span class=\"pl-k\">import</span> numpy <span class=\"pl-k\">as</span> np\n\n<span class=\"pl-c\"><span class=\"pl-c\">#</span> An instance of your model.</span>\nmodel <span class=\"pl-k\">=</span> torchvision.models.resnet18(<span class=\"pl-v\">pretrained</span><span class=\"pl-k\">=</span><span class=\"pl-c1\">True</span>)\nmodel.eval()\n\n<span class=\"pl-c\"><span class=\"pl-c\">#</span> An example input you would normally provide to your model's forward() method.</span>\nexample <span class=\"pl-k\">=</span> torch.rand(<span class=\"pl-c1\">1</span>, <span class=\"pl-c1\">3</span>, <span class=\"pl-c1\">224</span>, <span class=\"pl-c1\">224</span>)\n\n<span class=\"pl-c\"><span class=\"pl-c\">#</span> Use torch.jit.trace to generate a torch.jit.ScriptModule via tracing.</span>\ntraced_script_module <span class=\"pl-k\">=</span> torch.jit.trace(model, example)\ntraced_script_module.save(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>resnet50_typescripts.pt<span class=\"pl-pds\">\"</span></span>)\n\n<span class=\"pl-c\"><span class=\"pl-c\">#</span> evalute time</span>\nbatch <span class=\"pl-k\">=</span> torch.rand(<span class=\"pl-c1\">64</span>, <span class=\"pl-c1\">3</span>, <span class=\"pl-c1\">224</span>, <span class=\"pl-c1\">224</span>)\nstart <span class=\"pl-k\">=</span> time()\noutput <span class=\"pl-k\">=</span> traced_script_module(batch)\nstop <span class=\"pl-k\">=</span> time()\n<span class=\"pl-c1\">print</span>(<span class=\"pl-c1\">str</span>(stop <span class=\"pl-k\">-</span> start) <span class=\"pl-k\">+</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>s<span class=\"pl-pds\">\"</span></span>)\n\n<span class=\"pl-c\"><span class=\"pl-c\">#</span> read image</span>\nimage <span class=\"pl-k\">=</span> Image.open(<span class=\"pl-s\"><span class=\"pl-pds\">'</span>dog.png<span class=\"pl-pds\">'</span></span>).convert(<span class=\"pl-s\"><span class=\"pl-pds\">'</span>RGB<span class=\"pl-pds\">'</span></span>)\ndefault_transform <span class=\"pl-k\">=</span> transforms.Compose([\n    transforms.Resize([<span class=\"pl-c1\">224</span>, <span class=\"pl-c1\">224</span>]),\n    transforms.ToTensor(),\n    transforms.Normalize(<span class=\"pl-v\">mean</span><span class=\"pl-k\">=</span>[<span class=\"pl-c1\">0.485</span>, <span class=\"pl-c1\">0.456</span>, <span class=\"pl-c1\">0.406</span>],\n                         <span class=\"pl-v\">std</span><span class=\"pl-k\">=</span>[<span class=\"pl-c1\">0.229</span>, <span class=\"pl-c1\">0.224</span>, <span class=\"pl-c1\">0.225</span>])\n])\nimage <span class=\"pl-k\">=</span> default_transform(image)\n\n<span class=\"pl-c\"><span class=\"pl-c\">#</span> forward</span>\noutput <span class=\"pl-k\">=</span> traced_script_module(image.unsqueeze(<span class=\"pl-c1\">0</span>))\n<span class=\"pl-c1\">print</span>(output[<span class=\"pl-c1\">0</span>, :<span class=\"pl-c1\">10</span>])\n\n<span class=\"pl-c\"><span class=\"pl-c\">#</span> print top-5 predicted labels</span>\nlabels <span class=\"pl-k\">=</span> np.loadtxt(<span class=\"pl-s\"><span class=\"pl-pds\">'</span>synset_words.txt<span class=\"pl-pds\">'</span></span>, <span class=\"pl-v\">dtype</span><span class=\"pl-k\">=</span><span class=\"pl-c1\">str</span>, <span class=\"pl-v\">delimiter</span><span class=\"pl-k\">=</span><span class=\"pl-s\"><span class=\"pl-pds\">'</span><span class=\"pl-cce\">\\n</span><span class=\"pl-pds\">'</span></span>)\n\ndata_out <span class=\"pl-k\">=</span> output[<span class=\"pl-c1\">0</span>].data.numpy()\nsorted_idxs <span class=\"pl-k\">=</span> np.argsort(<span class=\"pl-k\">-</span>data_out)\n\n<span class=\"pl-k\">for</span> i, idx <span class=\"pl-k\">in</span> <span class=\"pl-c1\">enumerate</span>(sorted_idxs[:<span class=\"pl-c1\">5</span>]):\n    <span class=\"pl-c1\">print</span>(<span class=\"pl-s\"><span class=\"pl-pds\">'</span>top-<span class=\"pl-c1\">%d</span> label: <span class=\"pl-c1\">%s</span>, score: <span class=\"pl-c1\">%f</span><span class=\"pl-pds\">'</span></span> <span class=\"pl-k\">%</span> (i, labels[idx], data_out[idx]))</pre></div>\n<p>C++ program is load that model, but even load can not pass. (Build is success)</p>\n<p>And error got:</p>\n<pre><code>terminate called after throwing an instance of 'c10::Error'\n  what():  file_format_version &lt;= kMaxSupportedFileFormatVersion ASSERT FAILED at /pytorch/caffe2/serialize/inline_container.h:213, please report a bug to PyTorch. Attempted to read a PyTorch file with version %llu, but the maximum supported version for reading is %llu. Your PyTorch installation may be too old.21 (readAndValidateFileHeader at /pytorch/caffe2/serialize/inline_container.h:213)\nframe #0: std::function&lt;std::string ()&gt;::operator()() const + 0x11 (0x7f7a85d6b0d1 in /pt_codes/pt_cpp/libtorch/lib/libc10.so)\nframe #1: c10::Error::Error(c10::SourceLocation, std::string const&amp;) + 0x2a (0x7f7a85d6a99a in /pt_codes/pt_cpp/libtorch/lib/libc10.so)\nframe #2: &lt;unknown function&gt; + 0x5cb0b0 (0x7f7ab9d900b0 in /pt_codes/pt_cpp/libtorch/lib/libtorch.so.1)\nframe #3: &lt;unknown function&gt; + 0x5cb681 (0x7f7ab9d90681 in /pt_codes/pt_cpp/libtorch/lib/libtorch.so.1)\nframe #4: &lt;unknown function&gt; + 0x5c8cb6 (0x7f7ab9d8dcb6 in /pt_codes/pt_cpp/libtorch/lib/libtorch.so.1)\nframe #5: torch::jit::load(std::istream&amp;) + 0xb4 (0x7f7ab9d8eb64 in /pt_codes/pt_cpp/libtorch/lib/libtorch.so.1)\nframe #6: torch::jit::load(std::string const&amp;) + 0x27 (0x7f7ab9d8ec37 in /pt_codes/pt_cpp/libtorch/lib/libtorch.so.1)\nframe #7: &lt;unknown function&gt; + 0x8e9b (0x559c7be0ce9b in ./build/ptcpp)\nframe #8: __libc_start_main + 0xe7 (0x7f7a853edb97 in /lib/x86_64-linux-gnu/libc.so.6)\nframe #9: &lt;unknown function&gt; + 0x801a (0x559c7be0c01a in ./build/ptcpp)\n\n</code></pre>\n<p>What is wrong with current c++ API? I think it is a bug or something? because the error message is not well printed though.</p>", "body_text": "I got error when load model from a tracing typescripts model. The trace model is simple:\nimport torch\nimport torchvision\nfrom torchvision import transforms\nfrom PIL import Image\nfrom time import time\nimport numpy as np\n\n# An instance of your model.\nmodel = torchvision.models.resnet18(pretrained=True)\nmodel.eval()\n\n# An example input you would normally provide to your model's forward() method.\nexample = torch.rand(1, 3, 224, 224)\n\n# Use torch.jit.trace to generate a torch.jit.ScriptModule via tracing.\ntraced_script_module = torch.jit.trace(model, example)\ntraced_script_module.save(\"resnet50_typescripts.pt\")\n\n# evalute time\nbatch = torch.rand(64, 3, 224, 224)\nstart = time()\noutput = traced_script_module(batch)\nstop = time()\nprint(str(stop - start) + \"s\")\n\n# read image\nimage = Image.open('dog.png').convert('RGB')\ndefault_transform = transforms.Compose([\n    transforms.Resize([224, 224]),\n    transforms.ToTensor(),\n    transforms.Normalize(mean=[0.485, 0.456, 0.406],\n                         std=[0.229, 0.224, 0.225])\n])\nimage = default_transform(image)\n\n# forward\noutput = traced_script_module(image.unsqueeze(0))\nprint(output[0, :10])\n\n# print top-5 predicted labels\nlabels = np.loadtxt('synset_words.txt', dtype=str, delimiter='\\n')\n\ndata_out = output[0].data.numpy()\nsorted_idxs = np.argsort(-data_out)\n\nfor i, idx in enumerate(sorted_idxs[:5]):\n    print('top-%d label: %s, score: %f' % (i, labels[idx], data_out[idx]))\nC++ program is load that model, but even load can not pass. (Build is success)\nAnd error got:\nterminate called after throwing an instance of 'c10::Error'\n  what():  file_format_version <= kMaxSupportedFileFormatVersion ASSERT FAILED at /pytorch/caffe2/serialize/inline_container.h:213, please report a bug to PyTorch. Attempted to read a PyTorch file with version %llu, but the maximum supported version for reading is %llu. Your PyTorch installation may be too old.21 (readAndValidateFileHeader at /pytorch/caffe2/serialize/inline_container.h:213)\nframe #0: std::function<std::string ()>::operator()() const + 0x11 (0x7f7a85d6b0d1 in /pt_codes/pt_cpp/libtorch/lib/libc10.so)\nframe #1: c10::Error::Error(c10::SourceLocation, std::string const&) + 0x2a (0x7f7a85d6a99a in /pt_codes/pt_cpp/libtorch/lib/libc10.so)\nframe #2: <unknown function> + 0x5cb0b0 (0x7f7ab9d900b0 in /pt_codes/pt_cpp/libtorch/lib/libtorch.so.1)\nframe #3: <unknown function> + 0x5cb681 (0x7f7ab9d90681 in /pt_codes/pt_cpp/libtorch/lib/libtorch.so.1)\nframe #4: <unknown function> + 0x5c8cb6 (0x7f7ab9d8dcb6 in /pt_codes/pt_cpp/libtorch/lib/libtorch.so.1)\nframe #5: torch::jit::load(std::istream&) + 0xb4 (0x7f7ab9d8eb64 in /pt_codes/pt_cpp/libtorch/lib/libtorch.so.1)\nframe #6: torch::jit::load(std::string const&) + 0x27 (0x7f7ab9d8ec37 in /pt_codes/pt_cpp/libtorch/lib/libtorch.so.1)\nframe #7: <unknown function> + 0x8e9b (0x559c7be0ce9b in ./build/ptcpp)\nframe #8: __libc_start_main + 0xe7 (0x7f7a853edb97 in /lib/x86_64-linux-gnu/libc.so.6)\nframe #9: <unknown function> + 0x801a (0x559c7be0c01a in ./build/ptcpp)\n\n\nWhat is wrong with current c++ API? I think it is a bug or something? because the error message is not well printed though.", "body": "I got error when load model from a tracing typescripts model. The trace model is simple:\r\n\r\n```python\r\nimport torch\r\nimport torchvision\r\nfrom torchvision import transforms\r\nfrom PIL import Image\r\nfrom time import time\r\nimport numpy as np\r\n\r\n# An instance of your model.\r\nmodel = torchvision.models.resnet18(pretrained=True)\r\nmodel.eval()\r\n\r\n# An example input you would normally provide to your model's forward() method.\r\nexample = torch.rand(1, 3, 224, 224)\r\n\r\n# Use torch.jit.trace to generate a torch.jit.ScriptModule via tracing.\r\ntraced_script_module = torch.jit.trace(model, example)\r\ntraced_script_module.save(\"resnet50_typescripts.pt\")\r\n\r\n# evalute time\r\nbatch = torch.rand(64, 3, 224, 224)\r\nstart = time()\r\noutput = traced_script_module(batch)\r\nstop = time()\r\nprint(str(stop - start) + \"s\")\r\n\r\n# read image\r\nimage = Image.open('dog.png').convert('RGB')\r\ndefault_transform = transforms.Compose([\r\n    transforms.Resize([224, 224]),\r\n    transforms.ToTensor(),\r\n    transforms.Normalize(mean=[0.485, 0.456, 0.406],\r\n                         std=[0.229, 0.224, 0.225])\r\n])\r\nimage = default_transform(image)\r\n\r\n# forward\r\noutput = traced_script_module(image.unsqueeze(0))\r\nprint(output[0, :10])\r\n\r\n# print top-5 predicted labels\r\nlabels = np.loadtxt('synset_words.txt', dtype=str, delimiter='\\n')\r\n\r\ndata_out = output[0].data.numpy()\r\nsorted_idxs = np.argsort(-data_out)\r\n\r\nfor i, idx in enumerate(sorted_idxs[:5]):\r\n    print('top-%d label: %s, score: %f' % (i, labels[idx], data_out[idx]))\r\n```\r\n\r\nC++ program is load that model, but even load can not pass. (Build is success)\r\n\r\nAnd error got:\r\n```\r\nterminate called after throwing an instance of 'c10::Error'\r\n  what():  file_format_version <= kMaxSupportedFileFormatVersion ASSERT FAILED at /pytorch/caffe2/serialize/inline_container.h:213, please report a bug to PyTorch. Attempted to read a PyTorch file with version %llu, but the maximum supported version for reading is %llu. Your PyTorch installation may be too old.21 (readAndValidateFileHeader at /pytorch/caffe2/serialize/inline_container.h:213)\r\nframe #0: std::function<std::string ()>::operator()() const + 0x11 (0x7f7a85d6b0d1 in /pt_codes/pt_cpp/libtorch/lib/libc10.so)\r\nframe #1: c10::Error::Error(c10::SourceLocation, std::string const&) + 0x2a (0x7f7a85d6a99a in /pt_codes/pt_cpp/libtorch/lib/libc10.so)\r\nframe #2: <unknown function> + 0x5cb0b0 (0x7f7ab9d900b0 in /pt_codes/pt_cpp/libtorch/lib/libtorch.so.1)\r\nframe #3: <unknown function> + 0x5cb681 (0x7f7ab9d90681 in /pt_codes/pt_cpp/libtorch/lib/libtorch.so.1)\r\nframe #4: <unknown function> + 0x5c8cb6 (0x7f7ab9d8dcb6 in /pt_codes/pt_cpp/libtorch/lib/libtorch.so.1)\r\nframe #5: torch::jit::load(std::istream&) + 0xb4 (0x7f7ab9d8eb64 in /pt_codes/pt_cpp/libtorch/lib/libtorch.so.1)\r\nframe #6: torch::jit::load(std::string const&) + 0x27 (0x7f7ab9d8ec37 in /pt_codes/pt_cpp/libtorch/lib/libtorch.so.1)\r\nframe #7: <unknown function> + 0x8e9b (0x559c7be0ce9b in ./build/ptcpp)\r\nframe #8: __libc_start_main + 0xe7 (0x7f7a853edb97 in /lib/x86_64-linux-gnu/libc.so.6)\r\nframe #9: <unknown function> + 0x801a (0x559c7be0c01a in ./build/ptcpp)\r\n\r\n```\r\n\r\nWhat is wrong with current c++ API? I think it is a bug or something? because the error message is not well printed though."}