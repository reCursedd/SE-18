{"url": "https://api.github.com/repos/pytorch/pytorch/issues/comments/346181262", "html_url": "https://github.com/pytorch/pytorch/issues/3669#issuecomment-346181262", "issue_url": "https://api.github.com/repos/pytorch/pytorch/issues/3669", "id": 346181262, "node_id": "MDEyOklzc3VlQ29tbWVudDM0NjE4MTI2Mg==", "user": {"login": "vadimkantorov", "id": 1041752, "node_id": "MDQ6VXNlcjEwNDE3NTI=", "avatar_url": "https://avatars0.githubusercontent.com/u/1041752?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vadimkantorov", "html_url": "https://github.com/vadimkantorov", "followers_url": "https://api.github.com/users/vadimkantorov/followers", "following_url": "https://api.github.com/users/vadimkantorov/following{/other_user}", "gists_url": "https://api.github.com/users/vadimkantorov/gists{/gist_id}", "starred_url": "https://api.github.com/users/vadimkantorov/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vadimkantorov/subscriptions", "organizations_url": "https://api.github.com/users/vadimkantorov/orgs", "repos_url": "https://api.github.com/users/vadimkantorov/repos", "events_url": "https://api.github.com/users/vadimkantorov/events{/privacy}", "received_events_url": "https://api.github.com/users/vadimkantorov/received_events", "type": "User", "site_admin": false}, "created_at": "2017-11-21T22:24:49Z", "updated_at": "2017-11-21T22:24:49Z", "author_association": "NONE", "body_html": "<p>Figured out the coalesce issue:</p>\n<p>In preprocessed output:</p>\n<div class=\"highlight highlight-source-c++\"><pre><span class=\"pl-k\">extern</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>C<span class=\"pl-pds\">\"</span></span> THCDescBuff <span class=\"pl-en\">THCudaByteTensor_sizeDesc</span>(THCState *state, <span class=\"pl-k\">const</span> THCudaByteTensor *tensor);\n# <span class=\"pl-c1\">2</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>generic/THCTensor.h<span class=\"pl-pds\">\"</span></span> <span class=\"pl-c1\">2</span>\n# <span class=\"pl-c1\">18</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>/home/mscho/vadim/.wigwam/prefix/include/THC/THCGenerateAllTypes.h<span class=\"pl-pds\">\"</span></span> <span class=\"pl-c1\">2</span>\n# <span class=\"pl-c1\">1</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>/home/mscho/vadim/.wigwam/prefix/include/THC/THCGenerateCharType.h<span class=\"pl-pds\">\"</span></span> <span class=\"pl-c1\">1</span>\n# <span class=\"pl-c1\">1</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>generic/THCTensor.h<span class=\"pl-pds\">\"</span></span>\n# <span class=\"pl-c1\">1</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>/home/mscho/vadim/.wigwam/prefix/include/THC/generic/THCTensor.h<span class=\"pl-pds\">\"</span></span> <span class=\"pl-c1\">1</span>\n\n<span class=\"pl-k\">typedef</span> <span class=\"pl-k\">struct</span> <span class=\"pl-en\">THCudaCharTensor</span>\n{\n    <span class=\"pl-k\">long</span> *size;\n    <span class=\"pl-k\">long</span> *stride;\n    <span class=\"pl-k\">int</span> nDimension;\n\n    THCudaCharStorage *storage;\n    <span class=\"pl-c1\">ptrdiff_t</span> storageOffset;\n    <span class=\"pl-k\">int</span> refcount;\n\n    <span class=\"pl-k\">char</span> flag;\n\n} THCudaCharTensor;\n\n\n\n<span class=\"pl-k\">extern</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>C<span class=\"pl-pds\">\"</span></span> THCudaCharStorage* <span class=\"pl-en\">THCudaCharTensor_storage</span>(THCState *state, <span class=\"pl-k\">const</span> THCudaCharTensor *self);\n<span class=\"pl-k\">extern</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>C<span class=\"pl-pds\">\"</span></span> <span class=\"pl-c1\">ptrdiff_t</span> <span class=\"pl-en\">THCudaCharTensor_storageOffset</span>(THCState *state, <span class=\"pl-k\">const</span> THCudaCharTensor *self);\n<span class=\"pl-k\">extern</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>C<span class=\"pl-pds\">\"</span></span> <span class=\"pl-k\">int</span> <span class=\"pl-en\">THCudaCharTensor_nDimension</span>(THCState *state, <span class=\"pl-k\">const</span> THCudaCharTensor *self);\n<span class=\"pl-k\">extern</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>C<span class=\"pl-pds\">\"</span></span> <span class=\"pl-k\">long</span> <span class=\"pl-en\">THCudaCharTensor_size</span>(THCState *state, <span class=\"pl-k\">const</span> THCudaCharTensor *self, <span class=\"pl-k\">int</span> dim);\n<span class=\"pl-k\">extern</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>C<span class=\"pl-pds\">\"</span></span> <span class=\"pl-k\">long</span> <span class=\"pl-en\">THCudaCharTensor_stride</span>(THCState *state, <span class=\"pl-k\">const</span> THCudaCharTensor *self, <span class=\"pl-k\">int</span> dim);\n<span class=\"pl-k\">extern</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>C<span class=\"pl-pds\">\"</span></span> THLongStorage *<span class=\"pl-en\">THCudaCharTensor_newSizeOf</span>(THCState *state, THCudaCharTensor *self);\n<span class=\"pl-k\">extern</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>C<span class=\"pl-pds\">\"</span></span> THLongStorage *<span class=\"pl-en\">THCudaCharTensor_newStrideOf</span>(THCState *state, THCudaCharTensor *self);\n<span class=\"pl-k\">extern</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>C<span class=\"pl-pds\">\"</span></span> <span class=\"pl-k\">char</span> *<span class=\"pl-en\">THCudaCharTensor_data</span>(THCState *state, <span class=\"pl-k\">const</span> THCudaCharTensor *self);</pre></div>\n<p>As you can see, it picked up my old headers. Root cause is that <code>src/pytorch/aten/src/THCS/THCSTensor.h</code> has</p>\n<div class=\"highlight highlight-source-c++\"><pre>#<span class=\"pl-k\">include</span> <span class=\"pl-s\"><span class=\"pl-pds\">&lt;</span>THC/THC.h<span class=\"pl-pds\">&gt;</span></span>\n#<span class=\"pl-k\">include</span> <span class=\"pl-s\"><span class=\"pl-pds\">&lt;</span>THS/THSTensor.h<span class=\"pl-pds\">&gt;</span></span></pre></div>\n<p>on top and that sometimes the build script on base platform prepends: <code>-I/usr/local/cuda/include -I/home/mscho/vadim/.wigwam/prefix/include -I.../src/pytorch/aten/src/TH</code> while the docker one has <code>-I/usr/local/cuda/include -I/opt/conda/include                       -I/pytorch/aten/src/TH</code></p>", "body_text": "Figured out the coalesce issue:\nIn preprocessed output:\nextern \"C\" THCDescBuff THCudaByteTensor_sizeDesc(THCState *state, const THCudaByteTensor *tensor);\n# 2 \"generic/THCTensor.h\" 2\n# 18 \"/home/mscho/vadim/.wigwam/prefix/include/THC/THCGenerateAllTypes.h\" 2\n# 1 \"/home/mscho/vadim/.wigwam/prefix/include/THC/THCGenerateCharType.h\" 1\n# 1 \"generic/THCTensor.h\"\n# 1 \"/home/mscho/vadim/.wigwam/prefix/include/THC/generic/THCTensor.h\" 1\n\ntypedef struct THCudaCharTensor\n{\n    long *size;\n    long *stride;\n    int nDimension;\n\n    THCudaCharStorage *storage;\n    ptrdiff_t storageOffset;\n    int refcount;\n\n    char flag;\n\n} THCudaCharTensor;\n\n\n\nextern \"C\" THCudaCharStorage* THCudaCharTensor_storage(THCState *state, const THCudaCharTensor *self);\nextern \"C\" ptrdiff_t THCudaCharTensor_storageOffset(THCState *state, const THCudaCharTensor *self);\nextern \"C\" int THCudaCharTensor_nDimension(THCState *state, const THCudaCharTensor *self);\nextern \"C\" long THCudaCharTensor_size(THCState *state, const THCudaCharTensor *self, int dim);\nextern \"C\" long THCudaCharTensor_stride(THCState *state, const THCudaCharTensor *self, int dim);\nextern \"C\" THLongStorage *THCudaCharTensor_newSizeOf(THCState *state, THCudaCharTensor *self);\nextern \"C\" THLongStorage *THCudaCharTensor_newStrideOf(THCState *state, THCudaCharTensor *self);\nextern \"C\" char *THCudaCharTensor_data(THCState *state, const THCudaCharTensor *self);\nAs you can see, it picked up my old headers. Root cause is that src/pytorch/aten/src/THCS/THCSTensor.h has\n#include <THC/THC.h>\n#include <THS/THSTensor.h>\non top and that sometimes the build script on base platform prepends: -I/usr/local/cuda/include -I/home/mscho/vadim/.wigwam/prefix/include -I.../src/pytorch/aten/src/TH while the docker one has -I/usr/local/cuda/include -I/opt/conda/include                       -I/pytorch/aten/src/TH", "body": "Figured out the coalesce issue:\r\n\r\nIn preprocessed output:\r\n```cpp\r\nextern \"C\" THCDescBuff THCudaByteTensor_sizeDesc(THCState *state, const THCudaByteTensor *tensor);\r\n# 2 \"generic/THCTensor.h\" 2\r\n# 18 \"/home/mscho/vadim/.wigwam/prefix/include/THC/THCGenerateAllTypes.h\" 2\r\n# 1 \"/home/mscho/vadim/.wigwam/prefix/include/THC/THCGenerateCharType.h\" 1\r\n# 1 \"generic/THCTensor.h\"\r\n# 1 \"/home/mscho/vadim/.wigwam/prefix/include/THC/generic/THCTensor.h\" 1\r\n\r\ntypedef struct THCudaCharTensor\r\n{\r\n    long *size;\r\n    long *stride;\r\n    int nDimension;\r\n\r\n    THCudaCharStorage *storage;\r\n    ptrdiff_t storageOffset;\r\n    int refcount;\r\n\r\n    char flag;\r\n\r\n} THCudaCharTensor;\r\n\r\n\r\n\r\nextern \"C\" THCudaCharStorage* THCudaCharTensor_storage(THCState *state, const THCudaCharTensor *self);\r\nextern \"C\" ptrdiff_t THCudaCharTensor_storageOffset(THCState *state, const THCudaCharTensor *self);\r\nextern \"C\" int THCudaCharTensor_nDimension(THCState *state, const THCudaCharTensor *self);\r\nextern \"C\" long THCudaCharTensor_size(THCState *state, const THCudaCharTensor *self, int dim);\r\nextern \"C\" long THCudaCharTensor_stride(THCState *state, const THCudaCharTensor *self, int dim);\r\nextern \"C\" THLongStorage *THCudaCharTensor_newSizeOf(THCState *state, THCudaCharTensor *self);\r\nextern \"C\" THLongStorage *THCudaCharTensor_newStrideOf(THCState *state, THCudaCharTensor *self);\r\nextern \"C\" char *THCudaCharTensor_data(THCState *state, const THCudaCharTensor *self);\r\n```\r\n\r\nAs you can see, it picked up my old headers. Root cause is that `src/pytorch/aten/src/THCS/THCSTensor.h` has \r\n\r\n```cpp\r\n#include <THC/THC.h>\r\n#include <THS/THSTensor.h>\r\n```\r\n\r\non top and that sometimes the build script on base platform prepends: `-I/usr/local/cuda/include -I/home/mscho/vadim/.wigwam/prefix/include -I.../src/pytorch/aten/src/TH` while the docker one has `-I/usr/local/cuda/include -I/opt/conda/include                       -I/pytorch/aten/src/TH`"}