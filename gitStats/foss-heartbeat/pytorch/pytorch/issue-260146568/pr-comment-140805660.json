{"url": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/140805660", "pull_request_review_id": 64929758, "id": 140805660, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE0MDgwNTY2MA==", "diff_hunk": "@@ -1,26 +1,375 @@\n import torch.autograd.function as function\n import torch._C\n from torch.autograd import Variable\n-from torch.nn import Module\n+from torch.nn import Module, ParameterList, Parameter\n from collections import defaultdict\n import itertools\n import types\n import contextlib\n import os\n+import functools\n import torch.contrib._graph_vis as graph_vis\n-# Example how to use:\n-#\n-# import torch.jit\n-# model = model.RNNModel(args.model, ...)\n-# model = torch.jit.traced(model)\n \n \n-def flatten(x):\n+HOLE = object()\n+VOLATILE = object()\n+\n+\n+# TODO: verify is not implemented yet\n+def compile(arg=None, nderivs=1, params=tuple(), verify=False, optimize=True, enabled=True):\n+    \"\"\"\n+    Mark a function or module as eligible for just-in-time compilation.  The\n+    next time the function/module is executed, it is traced, and the trace is\n+    compiled into an optimized representation which is run in lieu of the\n+    original Python code upon subsequent invocations of the function/module.\n+\n+    The result of this function is stateful, so make sure you invoke it\n+    only once per code you want to JIT compile.\n+\n+    .. note::\n+\n+        If your function/module takes non-Variable inputs, the JIT compiler\n+        will compile a trace separately for each distinct input configuration.\n+\n+    .. warning::\n+\n+        Just-in-time compilation currently only works for functions/modules\n+        which do not have dynamic control flow; if you compile a function/module\n+        which has dynamic control flow, you will silently get incorrect\n+        results on subsequent invocations of the model.  Use `verify=True` to\n+        check that the original Python code and optimized code are equivalent.\n+\n+    Arguments:\n+        arg (optional, torch.nn.Module or function): the function or module\n+            to be compiled.  If `None`, `compile` returns a decorator which can be\n+            applied to the function or module you want to compile.\n+        verify (bool, default False): if True, upon all invocations of the\n+            function/module, execute both the compiled and interpreted versions\n+            of the model, and verify that their results match.  This is an easy\n+            (albeit slow) way to check if your function/module can be validly\n+            JIT compiled.\n+        nderivs (int, default 1): the number of derivatives which this function/module\n+            will be used with.  You MUST accurately specify this number: set it too\n+            low and you will see an error when you attempt to run `backward`;\n+            set it too high, and the function/module will never be compiled\n+            (as we always wait to see all derivatives before compiling.)\n+        optimize (bool, default False): whether or not to apply optimizations.", "path": "torch/jit.py", "position": null, "original_position": 63, "commit_id": "32f59e2ce8acb246bd9091e44732a5f339e4cc4b", "original_commit_id": "53b0dea5c0344533ee76434dae2987e7e7a97f7c", "user": {"login": "apaszke", "id": 4583066, "node_id": "MDQ6VXNlcjQ1ODMwNjY=", "avatar_url": "https://avatars3.githubusercontent.com/u/4583066?v=4", "gravatar_id": "", "url": "https://api.github.com/users/apaszke", "html_url": "https://github.com/apaszke", "followers_url": "https://api.github.com/users/apaszke/followers", "following_url": "https://api.github.com/users/apaszke/following{/other_user}", "gists_url": "https://api.github.com/users/apaszke/gists{/gist_id}", "starred_url": "https://api.github.com/users/apaszke/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/apaszke/subscriptions", "organizations_url": "https://api.github.com/users/apaszke/orgs", "repos_url": "https://api.github.com/users/apaszke/repos", "events_url": "https://api.github.com/users/apaszke/events{/privacy}", "received_events_url": "https://api.github.com/users/apaszke/received_events", "type": "User", "site_admin": false}, "body": "Why is the default False?", "created_at": "2017-09-25T15:11:37Z", "updated_at": "2018-11-23T15:34:45Z", "html_url": "https://github.com/pytorch/pytorch/pull/2852#discussion_r140805660", "pull_request_url": "https://api.github.com/repos/pytorch/pytorch/pulls/2852", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/140805660"}, "html": {"href": "https://github.com/pytorch/pytorch/pull/2852#discussion_r140805660"}, "pull_request": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/2852"}}, "body_html": "<p>Why is the default False?</p>", "body_text": "Why is the default False?"}