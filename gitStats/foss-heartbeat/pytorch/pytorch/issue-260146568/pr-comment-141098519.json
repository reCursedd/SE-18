{"url": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/141098519", "pull_request_review_id": 65264050, "id": 141098519, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE0MTA5ODUxOQ==", "diff_hunk": "@@ -1,26 +1,375 @@\n import torch.autograd.function as function\n import torch._C\n from torch.autograd import Variable\n-from torch.nn import Module\n+from torch.nn import Module, ParameterList, Parameter\n from collections import defaultdict\n import itertools\n import types\n import contextlib\n import os\n+import functools\n import torch.contrib._graph_vis as graph_vis\n-# Example how to use:\n-#\n-# import torch.jit\n-# model = model.RNNModel(args.model, ...)\n-# model = torch.jit.traced(model)\n \n \n-def flatten(x):\n+HOLE = object()\n+VOLATILE = object()\n+\n+\n+# TODO: verify is not implemented yet\n+def compile(arg=None, nderivs=1, params=tuple(), verify=False, optimize=True, enabled=True):\n+    \"\"\"\n+    Mark a function or module as eligible for just-in-time compilation.  The\n+    next time the function/module is executed, it is traced, and the trace is\n+    compiled into an optimized representation which is run in lieu of the\n+    original Python code upon subsequent invocations of the function/module.\n+\n+    The result of this function is stateful, so make sure you invoke it\n+    only once per code you want to JIT compile.\n+\n+    .. note::\n+\n+        If your function/module takes non-Variable inputs, the JIT compiler\n+        will compile a trace separately for each distinct input configuration.\n+\n+    .. warning::\n+\n+        Just-in-time compilation currently only works for functions/modules\n+        which do not have dynamic control flow; if you compile a function/module\n+        which has dynamic control flow, you will silently get incorrect\n+        results on subsequent invocations of the model.  Use `verify=True` to\n+        check that the original Python code and optimized code are equivalent.", "path": "torch/jit.py", "position": null, "original_position": 47, "commit_id": "32f59e2ce8acb246bd9091e44732a5f339e4cc4b", "original_commit_id": "53b0dea5c0344533ee76434dae2987e7e7a97f7c", "user": {"login": "ezyang", "id": 13564, "node_id": "MDQ6VXNlcjEzNTY0", "avatar_url": "https://avatars0.githubusercontent.com/u/13564?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ezyang", "html_url": "https://github.com/ezyang", "followers_url": "https://api.github.com/users/ezyang/followers", "following_url": "https://api.github.com/users/ezyang/following{/other_user}", "gists_url": "https://api.github.com/users/ezyang/gists{/gist_id}", "starred_url": "https://api.github.com/users/ezyang/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ezyang/subscriptions", "organizations_url": "https://api.github.com/users/ezyang/orgs", "repos_url": "https://api.github.com/users/ezyang/repos", "events_url": "https://api.github.com/users/ezyang/events{/privacy}", "received_events_url": "https://api.github.com/users/ezyang/received_events", "type": "User", "site_admin": false}, "body": "New copy:\r\n\r\n```\r\n\r\n        Just-in-time compilation currently only works for functions/modules\r\n        which are not data dependent (e.g., have conditionals on data in\r\n        tensors) and do not have any untracked external dependencies (e.g.,\r\n        perform input/output or access global variables). If you trace such\r\n        models, you will silently get incorrect results on subsequent\r\n        invocations of the model.  You can use `verify=True` to check that the\r\n        original Python code and optimized code are equivalent.\r\n```", "created_at": "2017-09-26T15:46:06Z", "updated_at": "2018-11-23T15:34:49Z", "html_url": "https://github.com/pytorch/pytorch/pull/2852#discussion_r141098519", "pull_request_url": "https://api.github.com/repos/pytorch/pytorch/pulls/2852", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/141098519"}, "html": {"href": "https://github.com/pytorch/pytorch/pull/2852#discussion_r141098519"}, "pull_request": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/2852"}}, "body_html": "<p>New copy:</p>\n<pre><code>\n        Just-in-time compilation currently only works for functions/modules\n        which are not data dependent (e.g., have conditionals on data in\n        tensors) and do not have any untracked external dependencies (e.g.,\n        perform input/output or access global variables). If you trace such\n        models, you will silently get incorrect results on subsequent\n        invocations of the model.  You can use `verify=True` to check that the\n        original Python code and optimized code are equivalent.\n</code></pre>", "body_text": "New copy:\n\n        Just-in-time compilation currently only works for functions/modules\n        which are not data dependent (e.g., have conditionals on data in\n        tensors) and do not have any untracked external dependencies (e.g.,\n        perform input/output or access global variables). If you trace such\n        models, you will silently get incorrect results on subsequent\n        invocations of the model.  You can use `verify=True` to check that the\n        original Python code and optimized code are equivalent.", "in_reply_to_id": 140805068}