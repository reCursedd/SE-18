{"url": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/141524943", "pull_request_review_id": 65750367, "id": 141524943, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE0MTUyNDk0Mw==", "diff_hunk": "@@ -1,26 +1,496 @@\n import torch.autograd.function as function\n import torch._C\n from torch.autograd import Variable\n-from torch.nn import Module\n+from torch.nn import Module, ParameterList, Parameter\n+from torch._six import raise_from\n from collections import defaultdict\n import itertools\n import types\n import contextlib\n import os\n-import torch.contrib._graph_vis as graph_vis\n-# Example how to use:\n+import functools\n+import inspect\n+\n+\n+class Placeholder(object):\n+    def __init__(self, s):\n+        self.s = s\n+\n+    def __str__(self):\n+        return self.s\n+\n+    def __repr__(self):\n+        return self.s\n+\n+\n+HOLE = Placeholder(\"HOLE\")\n+VOLATILE = Placeholder(\"VOLATILE\")\n+\n+\n+# TODO: verify is not implemented yet\n+def compile(arg=None, verify=False, **kwargs):\n+    \"\"\"\n+    Decorator which marks a function or module class as eligible for\n+    just-in-time compilation.  The next time the function/module is executed, it\n+    is traced, and the trace is compiled into an optimized representation which\n+    is run in lieu of the original Python code upon subsequent invocations of\n+    the function/module.\n+\n+    .. note::\n+\n+        A JIT compiled function/module may be compiled multiple times, as\n+        different inputs can result in different traces.  Currently, the\n+        JIT compiler conservatively assumes the trace may change if the\n+        `size` or `requires_grad` of `Variable` inputs change, or if\n+        any of the non-Variable inputs change.  For example, if you JIT", "path": "torch/jit.py", "position": 48, "original_position": 48, "commit_id": "32f59e2ce8acb246bd9091e44732a5f339e4cc4b", "original_commit_id": "ae144714b9f502e917113076da4076a0ab1d383a", "user": {"login": "zdevito", "id": 370202, "node_id": "MDQ6VXNlcjM3MDIwMg==", "avatar_url": "https://avatars0.githubusercontent.com/u/370202?v=4", "gravatar_id": "", "url": "https://api.github.com/users/zdevito", "html_url": "https://github.com/zdevito", "followers_url": "https://api.github.com/users/zdevito/followers", "following_url": "https://api.github.com/users/zdevito/following{/other_user}", "gists_url": "https://api.github.com/users/zdevito/gists{/gist_id}", "starred_url": "https://api.github.com/users/zdevito/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/zdevito/subscriptions", "organizations_url": "https://api.github.com/users/zdevito/orgs", "repos_url": "https://api.github.com/users/zdevito/repos", "events_url": "https://api.github.com/users/zdevito/events{/privacy}", "received_events_url": "https://api.github.com/users/zdevito/received_events", "type": "User", "site_admin": false}, "body": "How do you know if an input has changed?", "created_at": "2017-09-28T04:38:30Z", "updated_at": "2018-11-23T15:34:50Z", "html_url": "https://github.com/pytorch/pytorch/pull/2852#discussion_r141524943", "pull_request_url": "https://api.github.com/repos/pytorch/pytorch/pulls/2852", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/141524943"}, "html": {"href": "https://github.com/pytorch/pytorch/pull/2852#discussion_r141524943"}, "pull_request": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/2852"}}, "body_html": "<p>How do you know if an input has changed?</p>", "body_text": "How do you know if an input has changed?"}