{"url": "https://api.github.com/repos/pytorch/pytorch/issues/comments/401370688", "html_url": "https://github.com/pytorch/pytorch/pull/8848#issuecomment-401370688", "issue_url": "https://api.github.com/repos/pytorch/pytorch/issues/8848", "id": 401370688, "node_id": "MDEyOklzc3VlQ29tbWVudDQwMTM3MDY4OA==", "user": {"login": "SsnL", "id": 5674597, "node_id": "MDQ6VXNlcjU2NzQ1OTc=", "avatar_url": "https://avatars2.githubusercontent.com/u/5674597?v=4", "gravatar_id": "", "url": "https://api.github.com/users/SsnL", "html_url": "https://github.com/SsnL", "followers_url": "https://api.github.com/users/SsnL/followers", "following_url": "https://api.github.com/users/SsnL/following{/other_user}", "gists_url": "https://api.github.com/users/SsnL/gists{/gist_id}", "starred_url": "https://api.github.com/users/SsnL/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/SsnL/subscriptions", "organizations_url": "https://api.github.com/users/SsnL/orgs", "repos_url": "https://api.github.com/users/SsnL/repos", "events_url": "https://api.github.com/users/SsnL/events{/privacy}", "received_events_url": "https://api.github.com/users/SsnL/received_events", "type": "User", "site_admin": false}, "created_at": "2018-06-29T14:26:38Z", "updated_at": "2018-06-29T16:51:17Z", "author_association": "CONTRIBUTOR", "body_html": "<p><a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=31841\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/goodlux\">@goodlux</a> I still don't understand the need for a new PR. And this PR definitely shouldn't remove those \\text wrappers.</p>\n<ol>\n<li>What's wrong with reverting \\text changes by pushing to this branch as a new commit? Isn't that as easy (or arguably easier) than submitting as part of a new PR?</li>\n<li>We can't merge a PR that has changes that we don't want, even if they will be fixed in a new PR. Each PR is supposed to maintain the repo in a good and consistent state. Until we decide that removing \\text is wanted, we shouldn't remove them.</li>\n<li>As you also agreed above, this PR should be only about changing mathjax to katex. So please just revert those changes on \\text.</li>\n<li>I reverted your branch to the first commit, which still hasn't addressed some comments I left, both the ones about \\text and the ones not.</li>\n<li>See <a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=5652049\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/zou3519\">@zou3519</a> 's comment on CI. We can't merge a PR that breaks CI (in this case, <code>continuous-integration/travis-ci/pr</code>, which does the lint check).</li>\n</ol>\n<p>So, please just<br>\na. push a commit that keeps \\text where they were<br>\nb. fix lint.<br>\nc. address comments, e.g. remove <code>this is not a test</code>.</p>\n<p>(b) &amp; (c) are absolutely merge-blocking. For (a), since you are fixing them anyways, I just don't see why it can't be done in this PR.</p>\n<p>Please feel free to correct me if I misunderstood your points.</p>", "body_text": "@goodlux I still don't understand the need for a new PR. And this PR definitely shouldn't remove those \\text wrappers.\n\nWhat's wrong with reverting \\text changes by pushing to this branch as a new commit? Isn't that as easy (or arguably easier) than submitting as part of a new PR?\nWe can't merge a PR that has changes that we don't want, even if they will be fixed in a new PR. Each PR is supposed to maintain the repo in a good and consistent state. Until we decide that removing \\text is wanted, we shouldn't remove them.\nAs you also agreed above, this PR should be only about changing mathjax to katex. So please just revert those changes on \\text.\nI reverted your branch to the first commit, which still hasn't addressed some comments I left, both the ones about \\text and the ones not.\nSee @zou3519 's comment on CI. We can't merge a PR that breaks CI (in this case, continuous-integration/travis-ci/pr, which does the lint check).\n\nSo, please just\na. push a commit that keeps \\text where they were\nb. fix lint.\nc. address comments, e.g. remove this is not a test.\n(b) & (c) are absolutely merge-blocking. For (a), since you are fixing them anyways, I just don't see why it can't be done in this PR.\nPlease feel free to correct me if I misunderstood your points.", "body": "@goodlux I still don't understand the need for a new PR. And this PR definitely shouldn't remove those \\text wrappers.\r\n1. What's wrong with reverting \\text changes by pushing to this branch as a new commit? Isn't that as easy (or arguably easier) than submitting as part of a new PR?\r\n2. We can't merge a PR that has changes that we don't want, even if they will be fixed in a new PR. Each PR is supposed to maintain the repo in a good and consistent state. Until we decide that removing \\text is wanted, we shouldn't remove them.\r\n3. As you also agreed above, this PR should be only about changing mathjax to katex. So please just revert those changes on \\text.\r\n4. I reverted your branch to the first commit, which still hasn't addressed some comments I left, both the ones about \\text and the ones not.\r\n5. See @zou3519 's comment on CI. We can't merge a PR that breaks CI (in this case, `continuous-integration/travis-ci/pr`, which does the lint check).\r\n\r\nSo, please just\r\na. push a commit that keeps \\text where they were\r\nb. fix lint.\r\nc. address comments, e.g. remove `this is not a test`.\r\n\r\n(b) & (c) are absolutely merge-blocking. For (a), since you are fixing them anyways, I just don't see why it can't be done in this PR. \r\n\r\nPlease feel free to correct me if I misunderstood your points."}