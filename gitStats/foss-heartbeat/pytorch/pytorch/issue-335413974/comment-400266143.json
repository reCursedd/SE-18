{"url": "https://api.github.com/repos/pytorch/pytorch/issues/comments/400266143", "html_url": "https://github.com/pytorch/pytorch/pull/8848#issuecomment-400266143", "issue_url": "https://api.github.com/repos/pytorch/pytorch/issues/8848", "id": 400266143, "node_id": "MDEyOklzc3VlQ29tbWVudDQwMDI2NjE0Mw==", "user": {"login": "goodlux", "id": 31841, "node_id": "MDQ6VXNlcjMxODQx", "avatar_url": "https://avatars0.githubusercontent.com/u/31841?v=4", "gravatar_id": "", "url": "https://api.github.com/users/goodlux", "html_url": "https://github.com/goodlux", "followers_url": "https://api.github.com/users/goodlux/followers", "following_url": "https://api.github.com/users/goodlux/following{/other_user}", "gists_url": "https://api.github.com/users/goodlux/gists{/gist_id}", "starred_url": "https://api.github.com/users/goodlux/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/goodlux/subscriptions", "organizations_url": "https://api.github.com/users/goodlux/orgs", "repos_url": "https://api.github.com/users/goodlux/repos", "events_url": "https://api.github.com/users/goodlux/events{/privacy}", "received_events_url": "https://api.github.com/users/goodlux/received_events", "type": "User", "site_admin": false}, "created_at": "2018-06-26T10:54:11Z", "updated_at": "2018-06-26T10:54:11Z", "author_association": "CONTRIBUTOR", "body_html": "<div class=\"email-fragment\">*<a class=\"user-mention\" href=\"https://github.com/fmassa\">@fmassa</a> <a class=\"user-mention\" href=\"https://github.com/SsnL\">@SsnL</a>*\n\nIs that an arbitrary rule of thumb though?\n\nI did some reading up on this, and the only thing I found that seemed\ndefinitive is that variable names should be italicized. Discrete\nquantities, constants, operators and function names are romanized. Visually\nthis differentiates, at a glance, the parts of an equation that are mutable\nfrom the parts that are fixed.\n\nFor instance, see <a href=\"https://iupac.org/cms/wp-content/uploads/2016/01/ICTNS-\">https://iupac.org/cms/wp-content/uploads/2016/01/ICTNS-</a>\nOn-the-use-of-italic-and-roman-fonts-for-symbols-in-scientific-text.pdf\n\n\"The overall rule is that symbols representing physical quantities (or\nvariables) are italic, but symbols representing units, or labels, are\nroman. Sometimes there may seem to be doubt as to whether a symbol\nrepresents a quantity or has some other meaning (such as a label): a good\ngeneral rule is that quantities, or variables, can be given a value, but\nlabels cannot. Vectors, tensors and matrices are usually denoted using a\nbold-face (heavy) font, but they should still be italic since they are\nstill quantities.\"\n\nSo the question comes in when you have variables that are more word-like. I\nthink this is more of a modern-day problem; theorems in the past would\nalways define short variable names, but with coding, it is much more common\nto have longer names for variables, such as *padding *and *dilation*.  In\ntext, this is usually handled with a coding font that distinguishes a code\nvariable from normal text, because these things are different than standard\nwords.\n\n In my opinion, people have begun to conflate the idea that supporting text\nin equations should be romanized (it most definitely should), with the idea\nthat word-like variables should be romanized.\n\nThe argument sometimes given is that the spacing for romanized words are\nhandled better than italics, and thus making it more readable. However, in\ncases where the layout would be affected by character spacing,  latex has a\nfunction called mathit{} for long variable names (that writes italics).\n\n*Arguments for italicizing all variable names*\n\n1. Cleaner code / less overhead to maintain and write\n2. Some find it more readable when rendered (I do and others do!)\n3. Consistent for all variables\n4. Simple, well-defined rule\n5. Reduces complexity around sub- and superscripted variables.\n6. Doesn't need to be double-escaped in some situations.\n7. ...?\n\n*Arguments for romanizing variables name that are longer than 2\ncharacters. *\n\n1. Some find it more readable when rendered (Simon, Francisco, and others\ndo!)\n2. That's the way someone else had written it before.\n3. ...?\n\nSo that's my take on this. To be blunt, I think Aldus Manutius would be\nturning in his grave if he saw the way we are romanizing variable names.\nBut I'm no mathematician, either.\n\nEither way, we should have a clearly defined and articulated standard for\nconsistency.\n\nIn the meantime, I've put /text{...} back in conv.py, and</div>\n<span class=\"email-hidden-toggle\"><a href=\"#\">\u2026</a></span><div class=\"email-hidden-reply\">\n<div class=\"email-quoted-reply\">On Mon, Jun 25, 2018 at 3:06 PM, Francisco Massa ***@***.***&gt; wrote:\n ***@***.**** commented on this pull request.\n ------------------------------\n\n In torch/nn/modules/conv.py\n &lt;<a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load issue title\" data-id=\"335413974\" data-permission-text=\"Issue title is private\" data-url=\"https://github.com/pytorch/pytorch/issues/8848\" href=\"https://github.com/pytorch/pytorch/pull/8848#discussion_r197957352\">#8848 (comment)</a>&gt;:\n\n &gt; @@ -119,7 +118,7 @@ class Conv1d(_ConvNd):\n           In other words, for an input of size :math:`(N, C_{in}, L_{in})`, if you want a\n           depthwise convolution with a depthwise multiplier `K`,\n           then you use the constructor arguments\n -         :math:`(\\text{in_channels}=C_{in}, \\text{out_channels}=C_{in} * K, ..., \\text{groups}=C_{in})`\n +         :math:`(in\\_channels=C_{in}, out\\_channels=C_{in} * K, ..., groups=C_{in})`\n\n I'd vote for keeping the \\text. My rule of thumb is that if the variable\n has more than one letter, then it should ideally not be on italic\n\n \u2014\n You are receiving this because you authored the thread.\n Reply to this email directly, view it on GitHub\n &lt;<a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load issue title\" data-id=\"335413974\" data-permission-text=\"Issue title is private\" data-url=\"https://github.com/pytorch/pytorch/issues/8848\" href=\"https://github.com/pytorch/pytorch/pull/8848#discussion_r197957352\">#8848 (comment)</a>&gt;, or mute\n the thread\n &lt;<a href=\"https://github.com/notifications/unsubscribe-auth/AAB8YUuelHXYIbhpEOoxfLEBq-1rhdCMks5uAV7-gaJpZM4U2Lhs\">https://github.com/notifications/unsubscribe-auth/AAB8YUuelHXYIbhpEOoxfLEBq-1rhdCMks5uAV7-gaJpZM4U2Lhs</a>&gt;\n .\n</div>\n<div class=\"email-fragment\"></div>\n</div>", "body_text": "*@fmassa @SsnL*\n\nIs that an arbitrary rule of thumb though?\n\nI did some reading up on this, and the only thing I found that seemed\ndefinitive is that variable names should be italicized. Discrete\nquantities, constants, operators and function names are romanized. Visually\nthis differentiates, at a glance, the parts of an equation that are mutable\nfrom the parts that are fixed.\n\nFor instance, see https://iupac.org/cms/wp-content/uploads/2016/01/ICTNS-\nOn-the-use-of-italic-and-roman-fonts-for-symbols-in-scientific-text.pdf\n\n\"The overall rule is that symbols representing physical quantities (or\nvariables) are italic, but symbols representing units, or labels, are\nroman. Sometimes there may seem to be doubt as to whether a symbol\nrepresents a quantity or has some other meaning (such as a label): a good\ngeneral rule is that quantities, or variables, can be given a value, but\nlabels cannot. Vectors, tensors and matrices are usually denoted using a\nbold-face (heavy) font, but they should still be italic since they are\nstill quantities.\"\n\nSo the question comes in when you have variables that are more word-like. I\nthink this is more of a modern-day problem; theorems in the past would\nalways define short variable names, but with coding, it is much more common\nto have longer names for variables, such as *padding *and *dilation*.  In\ntext, this is usually handled with a coding font that distinguishes a code\nvariable from normal text, because these things are different than standard\nwords.\n\n In my opinion, people have begun to conflate the idea that supporting text\nin equations should be romanized (it most definitely should), with the idea\nthat word-like variables should be romanized.\n\nThe argument sometimes given is that the spacing for romanized words are\nhandled better than italics, and thus making it more readable. However, in\ncases where the layout would be affected by character spacing,  latex has a\nfunction called mathit{} for long variable names (that writes italics).\n\n*Arguments for italicizing all variable names*\n\n1. Cleaner code / less overhead to maintain and write\n2. Some find it more readable when rendered (I do and others do!)\n3. Consistent for all variables\n4. Simple, well-defined rule\n5. Reduces complexity around sub- and superscripted variables.\n6. Doesn't need to be double-escaped in some situations.\n7. ...?\n\n*Arguments for romanizing variables name that are longer than 2\ncharacters. *\n\n1. Some find it more readable when rendered (Simon, Francisco, and others\ndo!)\n2. That's the way someone else had written it before.\n3. ...?\n\nSo that's my take on this. To be blunt, I think Aldus Manutius would be\nturning in his grave if he saw the way we are romanizing variable names.\nBut I'm no mathematician, either.\n\nEither way, we should have a clearly defined and articulated standard for\nconsistency.\n\nIn the meantime, I've put /text{...} back in conv.py, and\n\u2026\nOn Mon, Jun 25, 2018 at 3:06 PM, Francisco Massa ***@***.***> wrote:\n ***@***.**** commented on this pull request.\n ------------------------------\n\n In torch/nn/modules/conv.py\n <#8848 (comment)>:\n\n > @@ -119,7 +118,7 @@ class Conv1d(_ConvNd):\n           In other words, for an input of size :math:`(N, C_{in}, L_{in})`, if you want a\n           depthwise convolution with a depthwise multiplier `K`,\n           then you use the constructor arguments\n -         :math:`(\\text{in_channels}=C_{in}, \\text{out_channels}=C_{in} * K, ..., \\text{groups}=C_{in})`\n +         :math:`(in\\_channels=C_{in}, out\\_channels=C_{in} * K, ..., groups=C_{in})`\n\n I'd vote for keeping the \\text. My rule of thumb is that if the variable\n has more than one letter, then it should ideally not be on italic\n\n \u2014\n You are receiving this because you authored the thread.\n Reply to this email directly, view it on GitHub\n <#8848 (comment)>, or mute\n the thread\n <https://github.com/notifications/unsubscribe-auth/AAB8YUuelHXYIbhpEOoxfLEBq-1rhdCMks5uAV7-gaJpZM4U2Lhs>\n .", "body": "*@fmassa @SsnL*\n\nIs that an arbitrary rule of thumb though?\n\nI did some reading up on this, and the only thing I found that seemed\ndefinitive is that variable names should be italicized. Discrete\nquantities, constants, operators and function names are romanized. Visually\nthis differentiates, at a glance, the parts of an equation that are mutable\nfrom the parts that are fixed.\n\nFor instance, see https://iupac.org/cms/wp-content/uploads/2016/01/ICTNS-\nOn-the-use-of-italic-and-roman-fonts-for-symbols-in-scientific-text.pdf\n\n\"The overall rule is that symbols representing physical quantities (or\nvariables) are italic, but symbols representing units, or labels, are\nroman. Sometimes there may seem to be doubt as to whether a symbol\nrepresents a quantity or has some other meaning (such as a label): a good\ngeneral rule is that quantities, or variables, can be given a value, but\nlabels cannot. Vectors, tensors and matrices are usually denoted using a\nbold-face (heavy) font, but they should still be italic since they are\nstill quantities.\"\n\nSo the question comes in when you have variables that are more word-like. I\nthink this is more of a modern-day problem; theorems in the past would\nalways define short variable names, but with coding, it is much more common\nto have longer names for variables, such as *padding *and *dilation*.  In\ntext, this is usually handled with a coding font that distinguishes a code\nvariable from normal text, because these things are different than standard\nwords.\n\n In my opinion, people have begun to conflate the idea that supporting text\nin equations should be romanized (it most definitely should), with the idea\nthat word-like variables should be romanized.\n\nThe argument sometimes given is that the spacing for romanized words are\nhandled better than italics, and thus making it more readable. However, in\ncases where the layout would be affected by character spacing,  latex has a\nfunction called mathit{} for long variable names (that writes italics).\n\n*Arguments for italicizing all variable names*\n\n1. Cleaner code / less overhead to maintain and write\n2. Some find it more readable when rendered (I do and others do!)\n3. Consistent for all variables\n4. Simple, well-defined rule\n5. Reduces complexity around sub- and superscripted variables.\n6. Doesn't need to be double-escaped in some situations.\n7. ...?\n\n*Arguments for romanizing variables name that are longer than 2\ncharacters. *\n\n1. Some find it more readable when rendered (Simon, Francisco, and others\ndo!)\n2. That's the way someone else had written it before.\n3. ...?\n\nSo that's my take on this. To be blunt, I think Aldus Manutius would be\nturning in his grave if he saw the way we are romanizing variable names.\nBut I'm no mathematician, either.\n\nEither way, we should have a clearly defined and articulated standard for\nconsistency.\n\nIn the meantime, I've put /text{...} back in conv.py, and\n\n\n\n\nOn Mon, Jun 25, 2018 at 3:06 PM, Francisco Massa <notifications@github.com>\nwrote:\n\n> *@fmassa* commented on this pull request.\n> ------------------------------\n>\n> In torch/nn/modules/conv.py\n> <https://github.com/pytorch/pytorch/pull/8848#discussion_r197957352>:\n>\n> > @@ -119,7 +118,7 @@ class Conv1d(_ConvNd):\n>           In other words, for an input of size :math:`(N, C_{in}, L_{in})`, if you want a\n>           depthwise convolution with a depthwise multiplier `K`,\n>           then you use the constructor arguments\n> -         :math:`(\\text{in_channels}=C_{in}, \\text{out_channels}=C_{in} * K, ..., \\text{groups}=C_{in})`\n> +         :math:`(in\\_channels=C_{in}, out\\_channels=C_{in} * K, ..., groups=C_{in})`\n>\n> I'd vote for keeping the \\text. My rule of thumb is that if the variable\n> has more than one letter, then it should ideally not be on italic\n>\n> \u2014\n> You are receiving this because you authored the thread.\n> Reply to this email directly, view it on GitHub\n> <https://github.com/pytorch/pytorch/pull/8848#discussion_r197957352>, or mute\n> the thread\n> <https://github.com/notifications/unsubscribe-auth/AAB8YUuelHXYIbhpEOoxfLEBq-1rhdCMks5uAV7-gaJpZM4U2Lhs>\n> .\n>\n"}