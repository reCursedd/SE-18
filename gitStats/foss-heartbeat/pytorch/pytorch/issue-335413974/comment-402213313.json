{"url": "https://api.github.com/repos/pytorch/pytorch/issues/comments/402213313", "html_url": "https://github.com/pytorch/pytorch/pull/8848#issuecomment-402213313", "issue_url": "https://api.github.com/repos/pytorch/pytorch/issues/8848", "id": 402213313, "node_id": "MDEyOklzc3VlQ29tbWVudDQwMjIxMzMxMw==", "user": {"login": "SsnL", "id": 5674597, "node_id": "MDQ6VXNlcjU2NzQ1OTc=", "avatar_url": "https://avatars2.githubusercontent.com/u/5674597?v=4", "gravatar_id": "", "url": "https://api.github.com/users/SsnL", "html_url": "https://github.com/SsnL", "followers_url": "https://api.github.com/users/SsnL/followers", "following_url": "https://api.github.com/users/SsnL/following{/other_user}", "gists_url": "https://api.github.com/users/SsnL/gists{/gist_id}", "starred_url": "https://api.github.com/users/SsnL/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/SsnL/subscriptions", "organizations_url": "https://api.github.com/users/SsnL/orgs", "repos_url": "https://api.github.com/users/SsnL/repos", "events_url": "https://api.github.com/users/SsnL/events{/privacy}", "received_events_url": "https://api.github.com/users/SsnL/received_events", "type": "User", "site_admin": false}, "created_at": "2018-07-03T16:17:50Z", "updated_at": "2018-07-03T16:17:50Z", "author_association": "CONTRIBUTOR", "body_html": "<p><a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=1310570\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/soumith\">@soumith</a> <a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=5652049\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/zou3519\">@zou3519</a>  Thanks for commenting and fixing. :)</p>\n<p><a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=31841\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/goodlux\">@goodlux</a> Sorry if I sounded negative. I didn't mean to. <a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=5652049\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/zou3519\">@zou3519</a> 's tip on <code>git cherry-pick</code> is very useful. In addition, a few <code>git</code> commands that I often use in this nasty situation (local branch is messed up) is:</p>\n<ol>\n<li>Reset to remote (this loses local changes):</li>\n</ol>\n<pre><code>git fetch --all\ngit reset --hard origin/katex\n</code></pre>\n<ol start=\"2\">\n<li>Drop commits in local branch up to <code>N</code> commits before:</li>\n</ol>\n<pre><code>git rebase -i HEAD~{N}\n// in the new editor window, you can change the \"label\" of each commit: \n//  'd' means dropping a commit; \n//  'e' means editing a commit; \n//  's' means squashing a commit with a previous one.\n</code></pre>\n<ol start=\"3\">\n<li>Update local branch with upstream changes:</li>\n</ol>\n<pre><code>git pull --rebase upstream master\n// Then, if there are merge conflicts, be sure to fix them\n// After fixing, \n// git add -A\n// git rebase --continue\n</code></pre>\n<p>After doing (2) or (3), you probably need to <code>git push --force</code> on the next push, since remote and local branches have different history.</p>\n<p>Hope that this helps.</p>", "body_text": "@soumith @zou3519  Thanks for commenting and fixing. :)\n@goodlux Sorry if I sounded negative. I didn't mean to. @zou3519 's tip on git cherry-pick is very useful. In addition, a few git commands that I often use in this nasty situation (local branch is messed up) is:\n\nReset to remote (this loses local changes):\n\ngit fetch --all\ngit reset --hard origin/katex\n\n\nDrop commits in local branch up to N commits before:\n\ngit rebase -i HEAD~{N}\n// in the new editor window, you can change the \"label\" of each commit: \n//  'd' means dropping a commit; \n//  'e' means editing a commit; \n//  's' means squashing a commit with a previous one.\n\n\nUpdate local branch with upstream changes:\n\ngit pull --rebase upstream master\n// Then, if there are merge conflicts, be sure to fix them\n// After fixing, \n// git add -A\n// git rebase --continue\n\nAfter doing (2) or (3), you probably need to git push --force on the next push, since remote and local branches have different history.\nHope that this helps.", "body": "@soumith @zou3519  Thanks for commenting and fixing. :) \r\n\r\n@goodlux Sorry if I sounded negative. I didn't mean to. @zou3519 's tip on `git cherry-pick` is very useful. In addition, a few `git` commands that I often use in this nasty situation (local branch is messed up) is:\r\n1. Reset to remote (this loses local changes):\r\n  ```\r\n  git fetch --all\r\n  git reset --hard origin/katex\r\n  ```\r\n2. Drop commits in local branch up to `N` commits before:\r\n  ```\r\n  git rebase -i HEAD~{N}\r\n  // in the new editor window, you can change the \"label\" of each commit: \r\n  //  'd' means dropping a commit; \r\n  //  'e' means editing a commit; \r\n  //  's' means squashing a commit with a previous one.\r\n  ```\r\n3. Update local branch with upstream changes:\r\n  ```\r\n  git pull --rebase upstream master\r\n  // Then, if there are merge conflicts, be sure to fix them\r\n  // After fixing, \r\n  // git add -A\r\n  // git rebase --continue\r\n  ```\r\n \r\nAfter doing (2) or (3), you probably need to `git push --force` on the next push, since remote and local branches have different history.\r\n\r\nHope that this helps."}