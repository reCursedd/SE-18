{"url": "https://api.github.com/repos/pytorch/pytorch/issues/comments/419972044", "html_url": "https://github.com/pytorch/pytorch/issues/9406#issuecomment-419972044", "issue_url": "https://api.github.com/repos/pytorch/pytorch/issues/9406", "id": 419972044, "node_id": "MDEyOklzc3VlQ29tbWVudDQxOTk3MjA0NA==", "user": {"login": "erikbrinkman", "id": 858926, "node_id": "MDQ6VXNlcjg1ODkyNg==", "avatar_url": "https://avatars1.githubusercontent.com/u/858926?v=4", "gravatar_id": "", "url": "https://api.github.com/users/erikbrinkman", "html_url": "https://github.com/erikbrinkman", "followers_url": "https://api.github.com/users/erikbrinkman/followers", "following_url": "https://api.github.com/users/erikbrinkman/following{/other_user}", "gists_url": "https://api.github.com/users/erikbrinkman/gists{/gist_id}", "starred_url": "https://api.github.com/users/erikbrinkman/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/erikbrinkman/subscriptions", "organizations_url": "https://api.github.com/users/erikbrinkman/orgs", "repos_url": "https://api.github.com/users/erikbrinkman/repos", "events_url": "https://api.github.com/users/erikbrinkman/events{/privacy}", "received_events_url": "https://api.github.com/users/erikbrinkman/received_events", "type": "User", "site_admin": false}, "created_at": "2018-09-10T16:18:05Z", "updated_at": "2018-09-10T16:18:05Z", "author_association": "CONTRIBUTOR", "body_html": "<p><a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=9110200\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/fmassa\">@fmassa</a> Yeah, that's possible. I personally really dislike using ints as enums in c++. It seems really hacky / illegible to have at::norm(Tensor&amp; self, int64_t type), but I acknowledge that is an option.</p>", "body_text": "@fmassa Yeah, that's possible. I personally really dislike using ints as enums in c++. It seems really hacky / illegible to have at::norm(Tensor& self, int64_t type), but I acknowledge that is an option.", "body": "@fmassa Yeah, that's possible. I personally really dislike using ints as enums in c++. It seems really hacky / illegible to have at::norm(Tensor& self, int64_t type), but I acknowledge that is an option."}