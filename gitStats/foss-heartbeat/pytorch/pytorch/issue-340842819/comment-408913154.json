{"url": "https://api.github.com/repos/pytorch/pytorch/issues/comments/408913154", "html_url": "https://github.com/pytorch/pytorch/issues/9406#issuecomment-408913154", "issue_url": "https://api.github.com/repos/pytorch/pytorch/issues/9406", "id": 408913154, "node_id": "MDEyOklzc3VlQ29tbWVudDQwODkxMzE1NA==", "user": {"login": "hglaude", "id": 6369105, "node_id": "MDQ6VXNlcjYzNjkxMDU=", "avatar_url": "https://avatars2.githubusercontent.com/u/6369105?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hglaude", "html_url": "https://github.com/hglaude", "followers_url": "https://api.github.com/users/hglaude/followers", "following_url": "https://api.github.com/users/hglaude/following{/other_user}", "gists_url": "https://api.github.com/users/hglaude/gists{/gist_id}", "starred_url": "https://api.github.com/users/hglaude/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hglaude/subscriptions", "organizations_url": "https://api.github.com/users/hglaude/orgs", "repos_url": "https://api.github.com/users/hglaude/repos", "events_url": "https://api.github.com/users/hglaude/events{/privacy}", "received_events_url": "https://api.github.com/users/hglaude/received_events", "type": "User", "site_admin": false}, "created_at": "2018-07-30T15:52:26Z", "updated_at": "2018-07-30T15:52:26Z", "author_association": "NONE", "body_html": "<p>Hi,</p>\n<p>It would be great if this function \"new_distance_func\" could take a list of pairs of indices \"pairs\" such that</p>\n<div class=\"highlight highlight-source-python\"><pre>pairs <span class=\"pl-k\">=</span> stack((indices1, indices2), <span class=\"pl-v\">dim</span><span class=\"pl-k\">=</span><span class=\"pl-c1\">1</span>)\ndistances <span class=\"pl-k\">=</span> new_distance_func(matrix1, matrix2, pairs)</pre></div>\n<p>is equivalent to</p>\n<div class=\"highlight highlight-source-python\"><pre>expanded_matrix1 <span class=\"pl-k\">=</span> matrix1.index_select(<span class=\"pl-c1\">0</span>, indices1)\nexpanded_matrix2 <span class=\"pl-k\">=</span> matrix1.index_select(<span class=\"pl-c1\">0</span>, indices2)\ndistances <span class=\"pl-k\">=</span> old_pairwise_distance_func(expanded_matrix1, expanded_matrix2)</pre></div>\n<p>But much more memory efficient. That would also suit the use case above.</p>\n<p>Thank you</p>", "body_text": "Hi,\nIt would be great if this function \"new_distance_func\" could take a list of pairs of indices \"pairs\" such that\npairs = stack((indices1, indices2), dim=1)\ndistances = new_distance_func(matrix1, matrix2, pairs)\nis equivalent to\nexpanded_matrix1 = matrix1.index_select(0, indices1)\nexpanded_matrix2 = matrix1.index_select(0, indices2)\ndistances = old_pairwise_distance_func(expanded_matrix1, expanded_matrix2)\nBut much more memory efficient. That would also suit the use case above.\nThank you", "body": "Hi,\r\n\r\nIt would be great if this function \"new_distance_func\" could take a list of pairs of indices \"pairs\" such that\r\n```python\r\npairs = stack((indices1, indices2), dim=1)\r\ndistances = new_distance_func(matrix1, matrix2, pairs)\r\n```\r\nis equivalent to\r\n```python\r\nexpanded_matrix1 = matrix1.index_select(0, indices1)\r\nexpanded_matrix2 = matrix1.index_select(0, indices2)\r\ndistances = old_pairwise_distance_func(expanded_matrix1, expanded_matrix2)\r\n```\r\nBut much more memory efficient. That would also suit the use case above.\r\n\r\nThank you"}