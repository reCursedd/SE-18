{"url": "https://api.github.com/repos/pytorch/pytorch/issues/5266", "repository_url": "https://api.github.com/repos/pytorch/pytorch", "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/5266/labels{/name}", "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/5266/comments", "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/5266/events", "html_url": "https://github.com/pytorch/pytorch/issues/5266", "id": 297591855, "node_id": "MDU6SXNzdWUyOTc1OTE4NTU=", "number": 5266, "title": "[feature request] warnings for functions with unspecified dim arguments", "user": {"login": "christinaheinze", "id": 10484979, "node_id": "MDQ6VXNlcjEwNDg0OTc5", "avatar_url": "https://avatars1.githubusercontent.com/u/10484979?v=4", "gravatar_id": "", "url": "https://api.github.com/users/christinaheinze", "html_url": "https://github.com/christinaheinze", "followers_url": "https://api.github.com/users/christinaheinze/followers", "following_url": "https://api.github.com/users/christinaheinze/following{/other_user}", "gists_url": "https://api.github.com/users/christinaheinze/gists{/gist_id}", "starred_url": "https://api.github.com/users/christinaheinze/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/christinaheinze/subscriptions", "organizations_url": "https://api.github.com/users/christinaheinze/orgs", "repos_url": "https://api.github.com/users/christinaheinze/repos", "events_url": "https://api.github.com/users/christinaheinze/events{/privacy}", "received_events_url": "https://api.github.com/users/christinaheinze/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-02-15T20:50:22Z", "updated_at": "2018-02-15T21:12:05Z", "closed_at": null, "author_association": "NONE", "body_html": "<p>Hi,</p>\n<p>I noticed that when calling <code>torch.sort()</code> without specifying the <code>dim</code> argument results in undesired behavior when called on a tensor of dimension nx1. If <code>dim</code> is not given in <code>torch.sort()</code>, the last dimension of the input is chosen. This is documented but not desirable when the last dimension is 1. A short example for this is the following:</p>\n<pre><code>import torch\na = torch.randn(10, 1)\nprint(a)\na_s, _ = torch.sort(a)\nprint(a_s)\n</code></pre>\n<p>yields the same (unsorted) tensor for both <code>print(a)</code> and <code>print(a_s)</code></p>\n<pre><code> 1.2201\n 0.0733\n 1.6214\n 0.6704\n 0.8339\n-1.1773\n-0.4946\n 0.4496\n 0.7240\n 1.2748\n[torch.FloatTensor of size 10x1]\n\n\n 1.2201\n 0.0733\n 1.6214\n 0.6704\n 0.8339\n-1.1773\n-0.4946\n 0.4496\n 0.7240\n 1.2748\n[torch.FloatTensor of size 10x1]\n</code></pre>\n<p>We (that is me, <a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=991891\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/Kaixhin\">@Kaixhin</a> and <a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=154337\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/bastings\">@bastings</a>) would suggest to issue a warning in such a case to improve usability.</p>\n<p>Cheers,<br>\nChristina</p>", "body_text": "Hi,\nI noticed that when calling torch.sort() without specifying the dim argument results in undesired behavior when called on a tensor of dimension nx1. If dim is not given in torch.sort(), the last dimension of the input is chosen. This is documented but not desirable when the last dimension is 1. A short example for this is the following:\nimport torch\na = torch.randn(10, 1)\nprint(a)\na_s, _ = torch.sort(a)\nprint(a_s)\n\nyields the same (unsorted) tensor for both print(a) and print(a_s)\n 1.2201\n 0.0733\n 1.6214\n 0.6704\n 0.8339\n-1.1773\n-0.4946\n 0.4496\n 0.7240\n 1.2748\n[torch.FloatTensor of size 10x1]\n\n\n 1.2201\n 0.0733\n 1.6214\n 0.6704\n 0.8339\n-1.1773\n-0.4946\n 0.4496\n 0.7240\n 1.2748\n[torch.FloatTensor of size 10x1]\n\nWe (that is me, @Kaixhin and @bastings) would suggest to issue a warning in such a case to improve usability.\nCheers,\nChristina", "body": "Hi, \r\n\r\nI noticed that when calling `torch.sort()` without specifying the `dim` argument results in undesired behavior when called on a tensor of dimension nx1. If `dim` is not given in `torch.sort()`, the last dimension of the input is chosen. This is documented but not desirable when the last dimension is 1. A short example for this is the following: \r\n\r\n```\r\nimport torch\r\na = torch.randn(10, 1)\r\nprint(a)\r\na_s, _ = torch.sort(a)\r\nprint(a_s)\r\n```\r\nyields the same (unsorted) tensor for both `print(a)` and `print(a_s)`\r\n```\r\n 1.2201\r\n 0.0733\r\n 1.6214\r\n 0.6704\r\n 0.8339\r\n-1.1773\r\n-0.4946\r\n 0.4496\r\n 0.7240\r\n 1.2748\r\n[torch.FloatTensor of size 10x1]\r\n\r\n\r\n 1.2201\r\n 0.0733\r\n 1.6214\r\n 0.6704\r\n 0.8339\r\n-1.1773\r\n-0.4946\r\n 0.4496\r\n 0.7240\r\n 1.2748\r\n[torch.FloatTensor of size 10x1]\r\n```\r\n\r\nWe (that is me, @Kaixhin and @bastings) would suggest to issue a warning in such a case to improve usability. \r\n\r\nCheers, \r\nChristina\r\n\r\n"}