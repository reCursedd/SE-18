{"url": "https://api.github.com/repos/pytorch/pytorch/issues/comments/406038447", "html_url": "https://github.com/pytorch/pytorch/issues/9530#issuecomment-406038447", "issue_url": "https://api.github.com/repos/pytorch/pytorch/issues/9530", "id": 406038447, "node_id": "MDEyOklzc3VlQ29tbWVudDQwNjAzODQ0Nw==", "user": {"login": "soumith", "id": 1310570, "node_id": "MDQ6VXNlcjEzMTA1NzA=", "avatar_url": "https://avatars0.githubusercontent.com/u/1310570?v=4", "gravatar_id": "", "url": "https://api.github.com/users/soumith", "html_url": "https://github.com/soumith", "followers_url": "https://api.github.com/users/soumith/followers", "following_url": "https://api.github.com/users/soumith/following{/other_user}", "gists_url": "https://api.github.com/users/soumith/gists{/gist_id}", "starred_url": "https://api.github.com/users/soumith/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/soumith/subscriptions", "organizations_url": "https://api.github.com/users/soumith/orgs", "repos_url": "https://api.github.com/users/soumith/repos", "events_url": "https://api.github.com/users/soumith/events{/privacy}", "received_events_url": "https://api.github.com/users/soumith/received_events", "type": "User", "site_admin": false}, "created_at": "2018-07-18T18:57:38Z", "updated_at": "2018-07-18T18:57:38Z", "author_association": "MEMBER", "body_html": "<p>the use-case is to do <code>strict=False</code> and at the model level, handle the unmatched / unexpected keys with custom logic. For a large project like detectron that will last a few years, it makes sense for them to handle \"old\" state dicts or \"partial\" state dicts with their own logic.</p>", "body_text": "the use-case is to do strict=False and at the model level, handle the unmatched / unexpected keys with custom logic. For a large project like detectron that will last a few years, it makes sense for them to handle \"old\" state dicts or \"partial\" state dicts with their own logic.", "body": "the use-case is to do `strict=False` and at the model level, handle the unmatched / unexpected keys with custom logic. For a large project like detectron that will last a few years, it makes sense for them to handle \"old\" state dicts or \"partial\" state dicts with their own logic."}