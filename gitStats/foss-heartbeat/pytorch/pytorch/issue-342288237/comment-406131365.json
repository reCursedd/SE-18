{"url": "https://api.github.com/repos/pytorch/pytorch/issues/comments/406131365", "html_url": "https://github.com/pytorch/pytorch/issues/9530#issuecomment-406131365", "issue_url": "https://api.github.com/repos/pytorch/pytorch/issues/9530", "id": 406131365, "node_id": "MDEyOklzc3VlQ29tbWVudDQwNjEzMTM2NQ==", "user": {"login": "bhushan23", "id": 1794273, "node_id": "MDQ6VXNlcjE3OTQyNzM=", "avatar_url": "https://avatars2.githubusercontent.com/u/1794273?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bhushan23", "html_url": "https://github.com/bhushan23", "followers_url": "https://api.github.com/users/bhushan23/followers", "following_url": "https://api.github.com/users/bhushan23/following{/other_user}", "gists_url": "https://api.github.com/users/bhushan23/gists{/gist_id}", "starred_url": "https://api.github.com/users/bhushan23/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bhushan23/subscriptions", "organizations_url": "https://api.github.com/users/bhushan23/orgs", "repos_url": "https://api.github.com/users/bhushan23/repos", "events_url": "https://api.github.com/users/bhushan23/events{/privacy}", "received_events_url": "https://api.github.com/users/bhushan23/received_events", "type": "User", "site_admin": false}, "created_at": "2018-07-19T02:07:26Z", "updated_at": "2018-07-19T02:07:26Z", "author_association": "CONTRIBUTOR", "body_html": "<p>Regarding interface I see two options -</p>\n<ol>\n<li>Keep interface consistent - Return matched, unmatched, unexpected set always<br>\nPros- Consistent interface, Portability of new usage and switching between these modes<br>\nCons - Existing code needs changes</li>\n<li>Conditional return (Above proposal)<br>\nPros- Simplifies sources of user no needing this feature, as if this doesn't exists<br>\nCons- Inconsistent interface, Portability<br>\nI personally think consistently across the interface is always good.<br>\nDo we have any reason to go with conditional return?</li>\n</ol>", "body_text": "Regarding interface I see two options -\n\nKeep interface consistent - Return matched, unmatched, unexpected set always\nPros- Consistent interface, Portability of new usage and switching between these modes\nCons - Existing code needs changes\nConditional return (Above proposal)\nPros- Simplifies sources of user no needing this feature, as if this doesn't exists\nCons- Inconsistent interface, Portability\nI personally think consistently across the interface is always good.\nDo we have any reason to go with conditional return?", "body": "Regarding interface I see two options - \r\n1. Keep interface consistent - Return matched, unmatched, unexpected set always \r\n     Pros- Consistent interface, Portability of new usage and switching between these modes\r\n     Cons - Existing code needs changes\r\n2. Conditional return (Above proposal)\r\n     Pros- Simplifies sources of user no needing this feature, as if this doesn't exists\r\n     Cons- Inconsistent interface, Portability\r\nI personally think consistently across the interface is always good.\r\nDo we have any reason to go with conditional return?"}