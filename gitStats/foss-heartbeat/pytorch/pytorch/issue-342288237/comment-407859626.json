{"url": "https://api.github.com/repos/pytorch/pytorch/issues/comments/407859626", "html_url": "https://github.com/pytorch/pytorch/issues/9530#issuecomment-407859626", "issue_url": "https://api.github.com/repos/pytorch/pytorch/issues/9530", "id": 407859626, "node_id": "MDEyOklzc3VlQ29tbWVudDQwNzg1OTYyNg==", "user": {"login": "fmassa", "id": 9110200, "node_id": "MDQ6VXNlcjkxMTAyMDA=", "avatar_url": "https://avatars2.githubusercontent.com/u/9110200?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fmassa", "html_url": "https://github.com/fmassa", "followers_url": "https://api.github.com/users/fmassa/followers", "following_url": "https://api.github.com/users/fmassa/following{/other_user}", "gists_url": "https://api.github.com/users/fmassa/gists{/gist_id}", "starred_url": "https://api.github.com/users/fmassa/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fmassa/subscriptions", "organizations_url": "https://api.github.com/users/fmassa/orgs", "repos_url": "https://api.github.com/users/fmassa/repos", "events_url": "https://api.github.com/users/fmassa/events{/privacy}", "received_events_url": "https://api.github.com/users/fmassa/received_events", "type": "User", "site_admin": false}, "created_at": "2018-07-25T18:56:32Z", "updated_at": "2018-07-25T18:56:32Z", "author_association": "MEMBER", "body_html": "<p><a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=4583066\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/apaszke\">@apaszke</a> I'm not sure that this would solve the problem a 100%.</p>\n<p>It's currently very easy for an external user to obtain the <code>matched</code> / <code>unmatched</code> / <code>unexpected</code> tensors given the current behavior of <code>load_state_dict</code>.</p>\n<p>If we add this functionality in a separate function, say <code>diff_state_dict</code>, we should enforce that it is in sync with <code>load_state_dict</code>.<br>\nIf it's in the same function, it's easy to enforce. If it's in a different function, and in the future we change the behavior of <code>load_state_dict</code> but forget to update <code>diff_state_dict</code>, well, the advantage of having <code>diff_state_dict</code> is gone.</p>", "body_text": "@apaszke I'm not sure that this would solve the problem a 100%.\nIt's currently very easy for an external user to obtain the matched / unmatched / unexpected tensors given the current behavior of load_state_dict.\nIf we add this functionality in a separate function, say diff_state_dict, we should enforce that it is in sync with load_state_dict.\nIf it's in the same function, it's easy to enforce. If it's in a different function, and in the future we change the behavior of load_state_dict but forget to update diff_state_dict, well, the advantage of having diff_state_dict is gone.", "body": "@apaszke I'm not sure that this would solve the problem a 100%.\r\n\r\nIt's currently very easy for an external user to obtain the `matched` / `unmatched` / `unexpected` tensors given the current behavior of `load_state_dict`.\r\n\r\nIf we add this functionality in a separate function, say `diff_state_dict`, we should enforce that it is in sync with `load_state_dict`.\r\nIf it's in the same function, it's easy to enforce. If it's in a different function, and in the future we change the behavior of `load_state_dict` but forget to update `diff_state_dict`, well, the advantage of having `diff_state_dict` is gone."}