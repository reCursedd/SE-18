{"url": "https://api.github.com/repos/pytorch/pytorch/issues/1029", "repository_url": "https://api.github.com/repos/pytorch/pytorch", "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/1029/labels{/name}", "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/1029/comments", "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/1029/events", "html_url": "https://github.com/pytorch/pytorch/issues/1029", "id": 215119820, "node_id": "MDU6SXNzdWUyMTUxMTk4MjA=", "number": 1029, "title": "Not an issue", "user": {"login": "csarofeen", "id": 22205833, "node_id": "MDQ6VXNlcjIyMjA1ODMz", "avatar_url": "https://avatars2.githubusercontent.com/u/22205833?v=4", "gravatar_id": "", "url": "https://api.github.com/users/csarofeen", "html_url": "https://github.com/csarofeen", "followers_url": "https://api.github.com/users/csarofeen/followers", "following_url": "https://api.github.com/users/csarofeen/following{/other_user}", "gists_url": "https://api.github.com/users/csarofeen/gists{/gist_id}", "starred_url": "https://api.github.com/users/csarofeen/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/csarofeen/subscriptions", "organizations_url": "https://api.github.com/users/csarofeen/orgs", "repos_url": "https://api.github.com/users/csarofeen/repos", "events_url": "https://api.github.com/users/csarofeen/events{/privacy}", "received_events_url": "https://api.github.com/users/csarofeen/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-03-17T20:54:51Z", "updated_at": "2017-03-17T21:01:13Z", "closed_at": "2017-03-17T20:58:10Z", "author_association": "CONTRIBUTOR", "body_html": "<p>I'm getting different gradients for the following example.</p>\n<div class=\"highlight highlight-source-python\"><pre><span class=\"pl-k\">import</span> torch\n<span class=\"pl-k\">from</span> torch.autograd <span class=\"pl-k\">import</span> Variable\n<span class=\"pl-k\">from</span> torch.nn <span class=\"pl-k\">import</span> functional <span class=\"pl-k\">as</span> F\n\ninp <span class=\"pl-k\">=</span> torch.randn(<span class=\"pl-c1\">5</span>,<span class=\"pl-c1\">5</span>).cuda()\n\nvar <span class=\"pl-k\">=</span> Variable(inp.clone(), <span class=\"pl-v\">requires_grad</span><span class=\"pl-k\">=</span><span class=\"pl-c1\">True</span>)\nvar2 <span class=\"pl-k\">=</span> var.clone()\n\nF.relu(var2, <span class=\"pl-v\">inplace</span><span class=\"pl-k\">=</span><span class=\"pl-c1\">True</span>)\n\nloss <span class=\"pl-k\">=</span> var2.sum()\nloss.backward()\n\n<span class=\"pl-c1\">print</span>(var.grad)\n\nvar_copy <span class=\"pl-k\">=</span> Variable(inp.clone(), <span class=\"pl-v\">requires_grad</span><span class=\"pl-k\">=</span><span class=\"pl-c1\">True</span>)\n\nF.relu(var_copy, <span class=\"pl-v\">inplace</span><span class=\"pl-k\">=</span><span class=\"pl-c1\">False</span>)\n\nloss2 <span class=\"pl-k\">=</span> var_copy.sum()\nloss2.backward()\n\n<span class=\"pl-c1\">print</span>(var_copy.grad)</pre></div>", "body_text": "I'm getting different gradients for the following example.\nimport torch\nfrom torch.autograd import Variable\nfrom torch.nn import functional as F\n\ninp = torch.randn(5,5).cuda()\n\nvar = Variable(inp.clone(), requires_grad=True)\nvar2 = var.clone()\n\nF.relu(var2, inplace=True)\n\nloss = var2.sum()\nloss.backward()\n\nprint(var.grad)\n\nvar_copy = Variable(inp.clone(), requires_grad=True)\n\nF.relu(var_copy, inplace=False)\n\nloss2 = var_copy.sum()\nloss2.backward()\n\nprint(var_copy.grad)", "body": "I'm getting different gradients for the following example.\r\n\r\n```.py\r\nimport torch\r\nfrom torch.autograd import Variable\r\nfrom torch.nn import functional as F\r\n\r\ninp = torch.randn(5,5).cuda()\r\n\r\nvar = Variable(inp.clone(), requires_grad=True)\r\nvar2 = var.clone()\r\n\r\nF.relu(var2, inplace=True)\r\n\r\nloss = var2.sum()\r\nloss.backward()\r\n\r\nprint(var.grad)\r\n\r\nvar_copy = Variable(inp.clone(), requires_grad=True)\r\n\r\nF.relu(var_copy, inplace=False)\r\n\r\nloss2 = var_copy.sum()\r\nloss2.backward()\r\n\r\nprint(var_copy.grad)\r\n```\r\n"}