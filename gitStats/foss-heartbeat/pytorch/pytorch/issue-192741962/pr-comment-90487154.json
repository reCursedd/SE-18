{"url": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/90487154", "pull_request_review_id": 11006100, "id": 90487154, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDkwNDg3MTU0", "diff_hunk": "@@ -80,18 +80,25 @@ def __init__(self, enable_timing=False, blocking=False, interprocess=False):\n \n         ptr = ctypes.c_void_p()\n         self._cudart = cudart()\n-        check_error(self._cudart.cudaEventCreateWithFlags(ctypes.byref(ptr), flags))\n+        check_error(self._cudart.cudaEventCreateWithFlags(\n+            ctypes.byref(ptr), ctypes.c_uint(flags)))\n         self._as_parameter_ = ptr\n \n     def __del__(self):\n-        check_error(self._cudart.cudaEventDestroy(self._as_parameter_))\n-        del self._as_parameter_\n+        if hasattr(self, '_as_parameter_'):", "path": "torch/cuda/streams.py", "position": 12, "original_position": 12, "commit_id": "d9fec0cf561ded08169cb499a9cd34b121b1d9a6", "original_commit_id": "a49c859e732fb7cc9c366ccab58febf09f56c378", "user": {"login": "colesbury", "id": 655866, "node_id": "MDQ6VXNlcjY1NTg2Ng==", "avatar_url": "https://avatars1.githubusercontent.com/u/655866?v=4", "gravatar_id": "", "url": "https://api.github.com/users/colesbury", "html_url": "https://github.com/colesbury", "followers_url": "https://api.github.com/users/colesbury/followers", "following_url": "https://api.github.com/users/colesbury/following{/other_user}", "gists_url": "https://api.github.com/users/colesbury/gists{/gist_id}", "starred_url": "https://api.github.com/users/colesbury/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/colesbury/subscriptions", "organizations_url": "https://api.github.com/users/colesbury/orgs", "repos_url": "https://api.github.com/users/colesbury/repos", "events_url": "https://api.github.com/users/colesbury/events{/privacy}", "received_events_url": "https://api.github.com/users/colesbury/received_events", "type": "User", "site_admin": false}, "body": "No -- but it's a bit safer. For example, if the cudaEventCreateWithFlags() call fails then `_as_parameter` isn't set. The destructor is still called, so this avoids a second exception in the destructor. ", "created_at": "2016-12-01T16:45:33Z", "updated_at": "2018-11-23T15:31:58Z", "html_url": "https://github.com/pytorch/pytorch/pull/275#discussion_r90487154", "pull_request_url": "https://api.github.com/repos/pytorch/pytorch/pulls/275", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/90487154"}, "html": {"href": "https://github.com/pytorch/pytorch/pull/275#discussion_r90487154"}, "pull_request": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/275"}}, "body_html": "<p>No -- but it's a bit safer. For example, if the cudaEventCreateWithFlags() call fails then <code>_as_parameter</code> isn't set. The destructor is still called, so this avoids a second exception in the destructor.</p>", "body_text": "No -- but it's a bit safer. For example, if the cudaEventCreateWithFlags() call fails then _as_parameter isn't set. The destructor is still called, so this avoids a second exception in the destructor.", "in_reply_to_id": 90415708}