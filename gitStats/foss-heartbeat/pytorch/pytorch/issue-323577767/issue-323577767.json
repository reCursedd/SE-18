{"url": "https://api.github.com/repos/pytorch/pytorch/issues/7610", "repository_url": "https://api.github.com/repos/pytorch/pytorch", "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/7610/labels{/name}", "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/7610/comments", "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/7610/events", "html_url": "https://github.com/pytorch/pytorch/issues/7610", "id": 323577767, "node_id": "MDU6SXNzdWUzMjM1Nzc3Njc=", "number": 7610, "title": "Inconsistent interactions of PyTorch tensors and NumPy ops", "user": {"login": "apaszke", "id": 4583066, "node_id": "MDQ6VXNlcjQ1ODMwNjY=", "avatar_url": "https://avatars3.githubusercontent.com/u/4583066?v=4", "gravatar_id": "", "url": "https://api.github.com/users/apaszke", "html_url": "https://github.com/apaszke", "followers_url": "https://api.github.com/users/apaszke/followers", "following_url": "https://api.github.com/users/apaszke/following{/other_user}", "gists_url": "https://api.github.com/users/apaszke/gists{/gist_id}", "starred_url": "https://api.github.com/users/apaszke/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/apaszke/subscriptions", "organizations_url": "https://api.github.com/users/apaszke/orgs", "repos_url": "https://api.github.com/users/apaszke/repos", "events_url": "https://api.github.com/users/apaszke/events{/privacy}", "received_events_url": "https://api.github.com/users/apaszke/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 897288569, "node_id": "MDU6TGFiZWw4OTcyODg1Njk=", "url": "https://api.github.com/repos/pytorch/pytorch/labels/pytorch", "name": "pytorch", "color": "f05732", "default": false}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2018-05-16T11:21:27Z", "updated_at": "2018-05-22T15:13:45Z", "closed_at": null, "author_association": "MEMBER", "body_html": "<div class=\"highlight highlight-source-python\"><pre><span class=\"pl-k\">import</span> numpy\n<span class=\"pl-k\">import</span> torch\n<span class=\"pl-c1\">type</span>(numpy.sum([torch.tensor(<span class=\"pl-c1\">0</span>, <span class=\"pl-v\">requires_grad</span><span class=\"pl-k\">=</span><span class=\"pl-c1\">True</span>)]))  <span class=\"pl-c\"><span class=\"pl-c\">#</span> returns torch.Tensor</span>\n<span class=\"pl-c1\">type</span>(numpy.sum([torch.tensor(<span class=\"pl-c1\">0</span>)]))                      <span class=\"pl-c\"><span class=\"pl-c\">#</span> returns numpy.int64</span></pre></div>", "body_text": "import numpy\nimport torch\ntype(numpy.sum([torch.tensor(0, requires_grad=True)]))  # returns torch.Tensor\ntype(numpy.sum([torch.tensor(0)]))                      # returns numpy.int64", "body": "```python\r\nimport numpy\r\nimport torch\r\ntype(numpy.sum([torch.tensor(0, requires_grad=True)]))  # returns torch.Tensor\r\ntype(numpy.sum([torch.tensor(0)]))                      # returns numpy.int64\r\n```"}