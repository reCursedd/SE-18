{"url": "https://api.github.com/repos/pytorch/pytorch/issues/comments/441321507", "html_url": "https://github.com/pytorch/pytorch/pull/14136#issuecomment-441321507", "issue_url": "https://api.github.com/repos/pytorch/pytorch/issues/14136", "id": 441321507, "node_id": "MDEyOklzc3VlQ29tbWVudDQ0MTMyMTUwNw==", "user": {"login": "ezyang", "id": 13564, "node_id": "MDQ6VXNlcjEzNTY0", "avatar_url": "https://avatars0.githubusercontent.com/u/13564?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ezyang", "html_url": "https://github.com/ezyang", "followers_url": "https://api.github.com/users/ezyang/followers", "following_url": "https://api.github.com/users/ezyang/following{/other_user}", "gists_url": "https://api.github.com/users/ezyang/gists{/gist_id}", "starred_url": "https://api.github.com/users/ezyang/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ezyang/subscriptions", "organizations_url": "https://api.github.com/users/ezyang/orgs", "repos_url": "https://api.github.com/users/ezyang/repos", "events_url": "https://api.github.com/users/ezyang/events{/privacy}", "received_events_url": "https://api.github.com/users/ezyang/received_events", "type": "User", "site_admin": false}, "created_at": "2018-11-23T21:46:11Z", "updated_at": "2018-11-23T21:46:11Z", "author_association": "CONTRIBUTOR", "body_html": "<p><a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=2373925\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/smessmer\">@smessmer</a> The API change seems fine. But I'm still confused about the implementation change.</p>\n<blockquote>\n<p>Another thing is that this diff does is change the implementation. We want to be able to easily convert Blob into IValue and the other way round. While that is possible when Blob stores Tensor*, it's easier if they have the same way of storing Tensors. If there's a strong argument against changing the implementation, we don't have to, but I don't see why not.</p>\n</blockquote>\n<p>But even after this patch they don't have the same way of storing tensors. ivalue stores:</p>\n<pre><code>    c10::intrusive_ptr_target* as_intrusive_ptr;\n</code></pre>\n<p>That's not what this patch is changing the implementation to.</p>", "body_text": "@smessmer The API change seems fine. But I'm still confused about the implementation change.\n\nAnother thing is that this diff does is change the implementation. We want to be able to easily convert Blob into IValue and the other way round. While that is possible when Blob stores Tensor*, it's easier if they have the same way of storing Tensors. If there's a strong argument against changing the implementation, we don't have to, but I don't see why not.\n\nBut even after this patch they don't have the same way of storing tensors. ivalue stores:\n    c10::intrusive_ptr_target* as_intrusive_ptr;\n\nThat's not what this patch is changing the implementation to.", "body": "@smessmer The API change seems fine. But I'm still confused about the implementation change.\r\n\r\n> Another thing is that this diff does is change the implementation. We want to be able to easily convert Blob into IValue and the other way round. While that is possible when Blob stores Tensor*, it's easier if they have the same way of storing Tensors. If there's a strong argument against changing the implementation, we don't have to, but I don't see why not.\r\n\r\nBut even after this patch they don't have the same way of storing tensors. ivalue stores:\r\n\r\n```\r\n    c10::intrusive_ptr_target* as_intrusive_ptr;\r\n```\r\n\r\nThat's not what this patch is changing the implementation to."}