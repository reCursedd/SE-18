{"url": "https://api.github.com/repos/pytorch/pytorch/issues/3685", "repository_url": "https://api.github.com/repos/pytorch/pytorch", "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/3685/labels{/name}", "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/3685/comments", "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/3685/events", "html_url": "https://github.com/pytorch/pytorch/issues/3685", "id": 273648577, "node_id": "MDU6SXNzdWUyNzM2NDg1Nzc=", "number": 3685, "title": "Can't initialize nn.Embedding with specific values", "user": {"login": "joshim5", "id": 533735, "node_id": "MDQ6VXNlcjUzMzczNQ==", "avatar_url": "https://avatars1.githubusercontent.com/u/533735?v=4", "gravatar_id": "", "url": "https://api.github.com/users/joshim5", "html_url": "https://github.com/joshim5", "followers_url": "https://api.github.com/users/joshim5/followers", "following_url": "https://api.github.com/users/joshim5/following{/other_user}", "gists_url": "https://api.github.com/users/joshim5/gists{/gist_id}", "starred_url": "https://api.github.com/users/joshim5/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/joshim5/subscriptions", "organizations_url": "https://api.github.com/users/joshim5/orgs", "repos_url": "https://api.github.com/users/joshim5/repos", "events_url": "https://api.github.com/users/joshim5/events{/privacy}", "received_events_url": "https://api.github.com/users/joshim5/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2017-11-14T02:40:50Z", "updated_at": "2017-11-15T07:35:51Z", "closed_at": null, "author_association": "NONE", "body_html": "<p>Currently, in pyTorch, one would have to initialize an Embedding and then set the weight parameters manually. This requires memory to be written twice, which can be a significant slow-down for large matrices.</p>\n<p>Here is an example:</p>\n<pre><code>self.lambda = nn.Embedding(num_elms, K)\nself.lambda.weight.data = torch.ones(num_elms, K) * -10\n</code></pre>\n<p>pyTorch should allow for a default weight matrix to be set.</p>", "body_text": "Currently, in pyTorch, one would have to initialize an Embedding and then set the weight parameters manually. This requires memory to be written twice, which can be a significant slow-down for large matrices.\nHere is an example:\nself.lambda = nn.Embedding(num_elms, K)\nself.lambda.weight.data = torch.ones(num_elms, K) * -10\n\npyTorch should allow for a default weight matrix to be set.", "body": "Currently, in pyTorch, one would have to initialize an Embedding and then set the weight parameters manually. This requires memory to be written twice, which can be a significant slow-down for large matrices.\r\n\r\nHere is an example:\r\n```\r\nself.lambda = nn.Embedding(num_elms, K)\r\nself.lambda.weight.data = torch.ones(num_elms, K) * -10\r\n```\r\n\r\npyTorch should allow for a default weight matrix to be set. "}