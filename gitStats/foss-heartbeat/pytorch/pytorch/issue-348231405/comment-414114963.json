{"url": "https://api.github.com/repos/pytorch/pytorch/issues/comments/414114963", "html_url": "https://github.com/pytorch/pytorch/issues/10295#issuecomment-414114963", "issue_url": "https://api.github.com/repos/pytorch/pytorch/issues/10295", "id": 414114963, "node_id": "MDEyOklzc3VlQ29tbWVudDQxNDExNDk2Mw==", "user": {"login": "KaiyuYue", "id": 19852297, "node_id": "MDQ6VXNlcjE5ODUyMjk3", "avatar_url": "https://avatars1.githubusercontent.com/u/19852297?v=4", "gravatar_id": "", "url": "https://api.github.com/users/KaiyuYue", "html_url": "https://github.com/KaiyuYue", "followers_url": "https://api.github.com/users/KaiyuYue/followers", "following_url": "https://api.github.com/users/KaiyuYue/following{/other_user}", "gists_url": "https://api.github.com/users/KaiyuYue/gists{/gist_id}", "starred_url": "https://api.github.com/users/KaiyuYue/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/KaiyuYue/subscriptions", "organizations_url": "https://api.github.com/users/KaiyuYue/orgs", "repos_url": "https://api.github.com/users/KaiyuYue/repos", "events_url": "https://api.github.com/users/KaiyuYue/events{/privacy}", "received_events_url": "https://api.github.com/users/KaiyuYue/received_events", "type": "User", "site_admin": false}, "created_at": "2018-08-19T09:21:58Z", "updated_at": "2018-08-19T09:22:12Z", "author_association": "CONTRIBUTOR", "body_html": "<p><a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=18025765\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/zsk423200\">@zsk423200</a> Hi, there is a dirty way that may be fix the problem of initial deadlock for distributed training. You can modify the function of <code>torch.nn.parallel.DistributedDataParallel</code> into <code>torch.nn.DataParallel</code>. Hope it works.</p>", "body_text": "@zsk423200 Hi, there is a dirty way that may be fix the problem of initial deadlock for distributed training. You can modify the function of torch.nn.parallel.DistributedDataParallel into torch.nn.DataParallel. Hope it works.", "body": "@zsk423200 Hi, there is a dirty way that may be fix the problem of initial deadlock for distributed training. You can modify the function of `torch.nn.parallel.DistributedDataParallel` into `torch.nn.DataParallel`. Hope it works."}