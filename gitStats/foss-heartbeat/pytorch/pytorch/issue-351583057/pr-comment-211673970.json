{"url": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/211673970", "pull_request_review_id": 148146083, "id": 211673970, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIxMTY3Mzk3MA==", "diff_hunk": "@@ -320,13 +321,22 @@ def pad_sequence(sequences, batch_first=False, padding_value=0):\n         out_dims = (max_len, len(sequences)) + trailing_dims\n \n     out_tensor = sequences[0].data.new(*out_dims).fill_(padding_value)\n-    for i, tensor in enumerate(sequences):\n-        length = tensor.size(0)\n-        # use index notation to prevent duplicate references to the tensor\n-        if batch_first:\n-            out_tensor[i, :length, ...] = tensor\n-        else:\n-            out_tensor[:length, i, ...] = tensor\n+    if padding_type == 'post':\n+        for i, tensor in enumerate(sequences):\n+            length = tensor.size(0)\n+            if batch_first:\n+                out_tensor[i, :length, ...] = tensor\n+            else:\n+                out_tensor[:length, i, ...] = tensor\n+    elif padding_type == 'pre':\n+        for i, tensor in enumerate(sequences):\n+            length = tensor.size(0)\n+            if batch_first:\n+                out_tensor[i, -length:, ...] = tensor\n+            else:\n+                out_tensor[-length:, i, ...] = tensor\n+    else:\n+        raise ValueError(\"Padding_type must be 'post' or 'pre'\")", "path": "torch/nn/utils/rnn.py", "position": null, "original_position": 43, "commit_id": "8e21eb992a93f7fb8cca8377ad268b9b0d54ac86", "original_commit_id": "efbcc3e2358a004a0cb9b9e5bf0bf518a1777e84", "user": {"login": "zou3519", "id": 5652049, "node_id": "MDQ6VXNlcjU2NTIwNDk=", "avatar_url": "https://avatars3.githubusercontent.com/u/5652049?v=4", "gravatar_id": "", "url": "https://api.github.com/users/zou3519", "html_url": "https://github.com/zou3519", "followers_url": "https://api.github.com/users/zou3519/followers", "following_url": "https://api.github.com/users/zou3519/following{/other_user}", "gists_url": "https://api.github.com/users/zou3519/gists{/gist_id}", "starred_url": "https://api.github.com/users/zou3519/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/zou3519/subscriptions", "organizations_url": "https://api.github.com/users/zou3519/orgs", "repos_url": "https://api.github.com/users/zou3519/repos", "events_url": "https://api.github.com/users/zou3519/events{/privacy}", "received_events_url": "https://api.github.com/users/zou3519/received_events", "type": "User", "site_admin": false}, "body": "Nit: say what padding_type the user passed in:\r\n`(\"pad_sequence: padding_type must be  'post' or 'pre', got: {}\".format(padding_type)`", "created_at": "2018-08-21T16:32:35Z", "updated_at": "2018-11-23T15:49:40Z", "html_url": "https://github.com/pytorch/pytorch/pull/10616#discussion_r211673970", "pull_request_url": "https://api.github.com/repos/pytorch/pytorch/pulls/10616", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/211673970"}, "html": {"href": "https://github.com/pytorch/pytorch/pull/10616#discussion_r211673970"}, "pull_request": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/10616"}}, "body_html": "<p>Nit: say what padding_type the user passed in:<br>\n<code>(\"pad_sequence: padding_type must be  'post' or 'pre', got: {}\".format(padding_type)</code></p>", "body_text": "Nit: say what padding_type the user passed in:\n(\"pad_sequence: padding_type must be  'post' or 'pre', got: {}\".format(padding_type)"}