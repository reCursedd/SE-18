{"url": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/173202233", "pull_request_review_id": 102351363, "id": 173202233, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE3MzIwMjIzMw==", "diff_hunk": "@@ -538,6 +538,39 @@ def conv_tbc(g, input, weight, bias, pad):\n     return g.op(\"ATen\", input, weight, bias, operator_s=\"conv_tbc\", pad_i=pad)\n \n \n+# Cast operators\n+def cast_uint8_t(g, input, non_blocking):\n+    return g.op(\"Cast\", input, to_s=\"UINT8\")\n+\n+\n+def cast_int8_t(g, input, non_blocking):\n+    return g.op(\"Cast\", input, to_s=\"INT8\")\n+\n+\n+def cast_double(g, input, non_blocking):\n+    return g.op(\"Cast\", input, to_s=\"DOUBLE\")\n+\n+\n+def cast_float(g, input, non_blocking):\n+    return g.op(\"Cast\", input, to_s=\"FLOAT\")\n+\n+\n+def cast_Half(g, input, non_blocking):\n+    return g.op(\"Cast\", input, to_s=\"FLOAT16\")\n+\n+\n+def cast_int(g, input, non_blocking):\n+    return g.op(\"Cast\", input, to_s=\"INT32\")\n+\n+\n+def cast_int64_t(g, input, non_blocking):\n+    return g.op(\"Cast\", input, to_s=\"INT64\")\n+\n+\n+def cast_int16_t(g, input, non_blocking):\n+    return g.op(\"Cast\", input, to_s=\"INT16\")", "path": "torch/onnx/symbolic.py", "position": null, "original_position": 34, "commit_id": "175fc789fc18aab031473f9bcd93306d3753069e", "original_commit_id": "cdb8c976368cff92639273e34100c0a55443587f", "user": {"login": "apaszke", "id": 4583066, "node_id": "MDQ6VXNlcjQ1ODMwNjY=", "avatar_url": "https://avatars3.githubusercontent.com/u/4583066?v=4", "gravatar_id": "", "url": "https://api.github.com/users/apaszke", "html_url": "https://github.com/apaszke", "followers_url": "https://api.github.com/users/apaszke/followers", "following_url": "https://api.github.com/users/apaszke/following{/other_user}", "gists_url": "https://api.github.com/users/apaszke/gists{/gist_id}", "starred_url": "https://api.github.com/users/apaszke/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/apaszke/subscriptions", "organizations_url": "https://api.github.com/users/apaszke/orgs", "repos_url": "https://api.github.com/users/apaszke/repos", "events_url": "https://api.github.com/users/apaszke/events{/privacy}", "received_events_url": "https://api.github.com/users/apaszke/received_events", "type": "User", "site_admin": false}, "body": "Can we make a higher order function that will return those or use partials? Otherwise you'll need to modify 8 places if anything needs to be changed", "created_at": "2018-03-08T15:57:53Z", "updated_at": "2018-11-23T15:40:29Z", "html_url": "https://github.com/pytorch/pytorch/pull/5629#discussion_r173202233", "pull_request_url": "https://api.github.com/repos/pytorch/pytorch/pulls/5629", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/173202233"}, "html": {"href": "https://github.com/pytorch/pytorch/pull/5629#discussion_r173202233"}, "pull_request": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/5629"}}, "body_html": "<p>Can we make a higher order function that will return those or use partials? Otherwise you'll need to modify 8 places if anything needs to be changed</p>", "body_text": "Can we make a higher order function that will return those or use partials? Otherwise you'll need to modify 8 places if anything needs to be changed"}