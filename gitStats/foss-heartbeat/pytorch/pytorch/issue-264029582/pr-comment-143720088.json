{"url": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/143720088", "pull_request_review_id": 68270362, "id": 143720088, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE0MzcyMDA4OA==", "diff_hunk": "@@ -457,6 +465,79 @@ THC_API void THCTensor_(geometric)(THCState* state, THCTensor *self_, double p)\n \n   THCTensor_(freeCopyTo)(state, self, self_);\n };\n+\n+THC_API void THCTensor_(clampedRandom)(THCState* state, THCTensor *self_, int64_t min_val, int64_t max_val)\n+{\n+  THArgCheck(min_val < max_val, 2,\n+             \"max must be greater than min, but got: min = %d, max = %d\", min_val, max_val);\n+  THCAssertSameGPU(THCTensor_(checkGPU)(state, 1, self_));\n+  Generator* gen = THCRandom_getGenerator(state);\n+  THCTensor *self = THCTensor_(newContiguous)(state, self_);\n+  ptrdiff_t size = THCTensor_(nElement)(state, self);\n+  real *data = THCTensor_(data)(state, self);\n+\n+  generate_random<<<NUM_BLOCKS, BLOCK_SIZE, 0, THCState_getCurrentStream(state)>>>(\n+      gen->gen_states, size, data, min_val, max_val - min_val);\n+\n+  THCTensor_(freeCopyTo)(state, self, self_);\n+};\n+\n+THC_API void THCTensor_(cappedRandom)(THCState* state, THCTensor *self_, int64_t max_val)\n+{\n+  THArgCheck(0 < max_val, 2, \"max must be positive, but got: max = %d\", max_val);\n+  THCAssertSameGPU(THCTensor_(checkGPU)(state, 1, self_));\n+  Generator* gen = THCRandom_getGenerator(state);\n+  THCTensor *self = THCTensor_(newContiguous)(state, self_);\n+  ptrdiff_t size = THCTensor_(nElement)(state, self);\n+  real *data = THCTensor_(data)(state, self);\n+\n+  generate_random<<<NUM_BLOCKS, BLOCK_SIZE, 0, THCState_getCurrentStream(state)>>>(\n+      gen->gen_states, size, data, 0L, max_val);\n+\n+  THCTensor_(freeCopyTo)(state, self, self_);\n+};\n+\n+#define HALF_MANT_DIG 11\n+\n+THC_API void THCTensor_(random)(THCState* state, THCTensor *self_)\n+{\n+  THCAssertSameGPU(THCTensor_(checkGPU)(state, 1, self_));\n+  Generator* gen = THCRandom_getGenerator(state);\n+  THCTensor *self = THCTensor_(newContiguous)(state, self_);\n+  ptrdiff_t size = THCTensor_(nElement)(state, self);\n+  real *data = THCTensor_(data)(state, self);\n+\n+#if defined(THC_REAL_IS_BYTE)", "path": "torch/lib/THC/generic/THCTensorRandom.cu", "position": null, "original_position": 68, "commit_id": "349a543ae907892b9391e00424c10d74faeb67e5", "original_commit_id": "4c7c3175acfea9ce41730244fa8d1254f88fd562", "user": {"login": "apaszke", "id": 4583066, "node_id": "MDQ6VXNlcjQ1ODMwNjY=", "avatar_url": "https://avatars3.githubusercontent.com/u/4583066?v=4", "gravatar_id": "", "url": "https://api.github.com/users/apaszke", "html_url": "https://github.com/apaszke", "followers_url": "https://api.github.com/users/apaszke/followers", "following_url": "https://api.github.com/users/apaszke/following{/other_user}", "gists_url": "https://api.github.com/users/apaszke/gists{/gist_id}", "starred_url": "https://api.github.com/users/apaszke/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/apaszke/subscriptions", "organizations_url": "https://api.github.com/users/apaszke/orgs", "repos_url": "https://api.github.com/users/apaszke/repos", "events_url": "https://api.github.com/users/apaszke/events{/privacy}", "received_events_url": "https://api.github.com/users/apaszke/received_events", "type": "User", "site_admin": false}, "body": "I think all these ifs could be collapsed into a single statement like this:\r\n```cpp\r\ngenerate_random<<<...>>>(..., static_cast<uint64_t>(std::numeric_limits<real>::max) + 1).\r\n```", "created_at": "2017-10-10T13:04:44Z", "updated_at": "2018-11-23T15:35:12Z", "html_url": "https://github.com/pytorch/pytorch/pull/3042#discussion_r143720088", "pull_request_url": "https://api.github.com/repos/pytorch/pytorch/pulls/3042", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/143720088"}, "html": {"href": "https://github.com/pytorch/pytorch/pull/3042#discussion_r143720088"}, "pull_request": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/3042"}}, "body_html": "<p>I think all these ifs could be collapsed into a single statement like this:</p>\n<div class=\"highlight highlight-source-c++\"><pre>generate_random&lt;&lt;&lt;...&gt;&gt;&gt;(..., <span class=\"pl-k\">static_cast</span>&lt;<span class=\"pl-c1\">uint64_t</span>&gt;(std::numeric_limits&lt;real&gt;::max) + <span class=\"pl-c1\">1</span>).</pre></div>", "body_text": "I think all these ifs could be collapsed into a single statement like this:\ngenerate_random<<<...>>>(..., static_cast<uint64_t>(std::numeric_limits<real>::max) + 1)."}