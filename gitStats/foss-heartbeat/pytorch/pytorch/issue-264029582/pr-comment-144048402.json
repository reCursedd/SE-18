{"url": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/144048402", "pull_request_review_id": 68650365, "id": 144048402, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE0NDA0ODQwMg==", "diff_hunk": "@@ -13,19 +16,27 @@ void THTensor_(random)(THTensor *self, THGenerator *_generator)\n #elif defined(TH_REAL_IS_INT)\n   TH_TENSOR_APPLY(real, self, *self_data = (int32_t)(THRandom_random(_generator) % (INT32_MAX+1UL)););\n #elif defined(TH_REAL_IS_LONG)\n-  TH_TENSOR_APPLY(real, self, *self_data = (int64_t)(THRandom_random(_generator) % (LONG_MAX+1UL)););\n+  TH_TENSOR_APPLY(real, self, *self_data = (uint64_t)(RANDOM64(_generator) % (LONG_MAX + 1ULL)););\n #elif defined(TH_REAL_IS_FLOAT)\n-  TH_TENSOR_APPLY(real, self, *self_data = (float)(THRandom_random(_generator) % ((1UL << FLT_MANT_DIG)+1)););\n+  TH_TENSOR_APPLY(real, self, *self_data = (float)(THRandom_random(_generator) % ((1ULL << FLT_MANT_DIG) + 1)););\n #elif defined(TH_REAL_IS_DOUBLE)\n-  TH_TENSOR_APPLY(real, self, *self_data = (double)(THRandom_random(_generator) % ((1ULL << DBL_MANT_DIG)+1)););\n+  TH_TENSOR_APPLY(real, self, *self_data = (double)(RANDOM64(_generator) % ((1ULL << DBL_MANT_DIG) + 1)););\n #else\n #error \"Unknown type\"\n #endif\n+\n }\n \n void THTensor_(clampedRandom)(THTensor *self, THGenerator *_generator, int64_t min, int64_t max) {\n   THArgCheck(max > min, 2, \"max must be greater than min\");\n-  TH_TENSOR_APPLY(real, self, *self_data = (real)((THRandom_random(_generator) % (max - min)) + min);)\n+  uint64_t range = max - min;\n+#if defined(TH_REAL_IS_LONG) || defined(TH_REAL_IS_FLOAT) || defined(TH_REAL_IS_DOUBLE)\n+    if (range >= 1ULL << 32) {", "path": "torch/lib/TH/generic/THTensorRandom.c", "position": null, "original_position": 35, "commit_id": "349a543ae907892b9391e00424c10d74faeb67e5", "original_commit_id": "c7f4513c4e7ce2c69cb13bdaa473c2861c475dc9", "user": {"login": "apaszke", "id": 4583066, "node_id": "MDQ6VXNlcjQ1ODMwNjY=", "avatar_url": "https://avatars3.githubusercontent.com/u/4583066?v=4", "gravatar_id": "", "url": "https://api.github.com/users/apaszke", "html_url": "https://github.com/apaszke", "followers_url": "https://api.github.com/users/apaszke/followers", "following_url": "https://api.github.com/users/apaszke/following{/other_user}", "gists_url": "https://api.github.com/users/apaszke/gists{/gist_id}", "starred_url": "https://api.github.com/users/apaszke/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/apaszke/subscriptions", "organizations_url": "https://api.github.com/users/apaszke/orgs", "repos_url": "https://api.github.com/users/apaszke/repos", "events_url": "https://api.github.com/users/apaszke/events{/privacy}", "received_events_url": "https://api.github.com/users/apaszke/received_events", "type": "User", "site_admin": false}, "body": "nice optimization!", "created_at": "2017-10-11T15:28:14Z", "updated_at": "2018-11-23T15:35:14Z", "html_url": "https://github.com/pytorch/pytorch/pull/3042#discussion_r144048402", "pull_request_url": "https://api.github.com/repos/pytorch/pytorch/pulls/3042", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/144048402"}, "html": {"href": "https://github.com/pytorch/pytorch/pull/3042#discussion_r144048402"}, "pull_request": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/3042"}}, "body_html": "<p>nice optimization!</p>", "body_text": "nice optimization!"}