{"url": "https://api.github.com/repos/pytorch/pytorch/issues/comments/312219836", "html_url": "https://github.com/pytorch/pytorch/pull/1944#issuecomment-312219836", "issue_url": "https://api.github.com/repos/pytorch/pytorch/issues/1944", "id": 312219836, "node_id": "MDEyOklzc3VlQ29tbWVudDMxMjIxOTgzNg==", "user": {"login": "alykhantejani", "id": 687194, "node_id": "MDQ6VXNlcjY4NzE5NA==", "avatar_url": "https://avatars1.githubusercontent.com/u/687194?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alykhantejani", "html_url": "https://github.com/alykhantejani", "followers_url": "https://api.github.com/users/alykhantejani/followers", "following_url": "https://api.github.com/users/alykhantejani/following{/other_user}", "gists_url": "https://api.github.com/users/alykhantejani/gists{/gist_id}", "starred_url": "https://api.github.com/users/alykhantejani/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alykhantejani/subscriptions", "organizations_url": "https://api.github.com/users/alykhantejani/orgs", "repos_url": "https://api.github.com/users/alykhantejani/repos", "events_url": "https://api.github.com/users/alykhantejani/events{/privacy}", "received_events_url": "https://api.github.com/users/alykhantejani/received_events", "type": "User", "site_admin": false}, "created_at": "2017-06-30T09:22:24Z", "updated_at": "2017-06-30T09:22:24Z", "author_association": "CONTRIBUTOR", "body_html": "<p>Looking at the interface of <code>BCELoss</code> a bit more, it is also quite inconsistent i.e.</p>\n<pre><code>target = Variable(torch.rand(5))\noutput = Variable(torch.rand(5, 1) - 0.5)\nnn.BCELoss()(nn.Sigmoid()(output), target) # this works fine\nweight = torch.ones(1)\nnn.BCELoss(weight)(nn.Sigmoid()(output), target) #this fails as target.size() != input.size()\nnn.BCELoss(weight)(nn.Sigmoid()(output), target.unsqueeze(1)) #this works\n</code></pre>\n<p>I'm in favour of asserting <code>target.size() == input.size()</code> as it leads to simpler code, happy to ammend this PR if you agree <a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=4583066\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/apaszke\">@apaszke</a>  (but it will break backwards compatibility of <code>BCELoss</code> with single dim targets)</p>", "body_text": "Looking at the interface of BCELoss a bit more, it is also quite inconsistent i.e.\ntarget = Variable(torch.rand(5))\noutput = Variable(torch.rand(5, 1) - 0.5)\nnn.BCELoss()(nn.Sigmoid()(output), target) # this works fine\nweight = torch.ones(1)\nnn.BCELoss(weight)(nn.Sigmoid()(output), target) #this fails as target.size() != input.size()\nnn.BCELoss(weight)(nn.Sigmoid()(output), target.unsqueeze(1)) #this works\n\nI'm in favour of asserting target.size() == input.size() as it leads to simpler code, happy to ammend this PR if you agree @apaszke  (but it will break backwards compatibility of BCELoss with single dim targets)", "body": "Looking at the interface of `BCELoss` a bit more, it is also quite inconsistent i.e.\r\n```\r\ntarget = Variable(torch.rand(5))\r\noutput = Variable(torch.rand(5, 1) - 0.5)\r\nnn.BCELoss()(nn.Sigmoid()(output), target) # this works fine\r\nweight = torch.ones(1)\r\nnn.BCELoss(weight)(nn.Sigmoid()(output), target) #this fails as target.size() != input.size()\r\nnn.BCELoss(weight)(nn.Sigmoid()(output), target.unsqueeze(1)) #this works\r\n```\r\n\r\nI'm in favour of asserting `target.size() == input.size()` as it leads to simpler code, happy to ammend this PR if you agree @apaszke  (but it will break backwards compatibility of `BCELoss` with single dim targets)"}