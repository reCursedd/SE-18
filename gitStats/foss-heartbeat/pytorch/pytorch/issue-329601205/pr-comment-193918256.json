{"url": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/193918256", "pull_request_review_id": 126992135, "id": 193918256, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5MzkxODI1Ng==", "diff_hunk": "@@ -53,8 +53,14 @@ def apply(module, name, n_power_iterations, eps):\n \n         u = normalize(weight.new_empty(height).normal_(0, 1), dim=0, eps=fn.eps)\n         delattr(module, fn.name)\n-        module.register_parameter(fn.name + \"_org\", weight)\n-        module.register_buffer(fn.name, weight)\n+        module.register_parameter(fn.name + \"_orig\", weight)\n+        # We still need to assign weight back as fn.name because all sorts of\n+        # things may assume that it exists, e.g., when initializing weights.\n+        # However, we can't directly assign as it could be an nn.Parameter and\n+        # gets added as a parameter. Instead, we assign weight.data, which will\n+        # just be added as plain attribute, and also supports nn.init due to\n+        # shared storage.\n+        setattr(module, fn.name, weight.data)", "path": "torch/nn/utils/spectral_norm.py", "position": 35, "original_position": 35, "commit_id": "c759d8792a9ade1f0e2adcc6aa1830f94f67313b", "original_commit_id": "c759d8792a9ade1f0e2adcc6aa1830f94f67313b", "user": {"login": "SsnL", "id": 5674597, "node_id": "MDQ6VXNlcjU2NzQ1OTc=", "avatar_url": "https://avatars2.githubusercontent.com/u/5674597?v=4", "gravatar_id": "", "url": "https://api.github.com/users/SsnL", "html_url": "https://github.com/SsnL", "followers_url": "https://api.github.com/users/SsnL/followers", "following_url": "https://api.github.com/users/SsnL/following{/other_user}", "gists_url": "https://api.github.com/users/SsnL/gists{/gist_id}", "starred_url": "https://api.github.com/users/SsnL/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/SsnL/subscriptions", "organizations_url": "https://api.github.com/users/SsnL/orgs", "repos_url": "https://api.github.com/users/SsnL/repos", "events_url": "https://api.github.com/users/SsnL/events{/privacy}", "received_events_url": "https://api.github.com/users/SsnL/received_events", "type": "User", "site_admin": false}, "body": "Yeah, it won't work after the first forward. :( \r\nSeparation of weight and weight_orig is unfortunately necessary with the current interface. In the hook we will have to replace weight with the new normalized value, but we still need to keep the old weight around to optimize it (and we can't assign it as .weight).", "created_at": "2018-06-07T23:36:44Z", "updated_at": "2018-11-23T15:45:12Z", "html_url": "https://github.com/pytorch/pytorch/pull/8170#discussion_r193918256", "pull_request_url": "https://api.github.com/repos/pytorch/pytorch/pulls/8170", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/193918256"}, "html": {"href": "https://github.com/pytorch/pytorch/pull/8170#discussion_r193918256"}, "pull_request": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/8170"}}, "body_html": "<p>Yeah, it won't work after the first forward. :(<br>\nSeparation of weight and weight_orig is unfortunately necessary with the current interface. In the hook we will have to replace weight with the new normalized value, but we still need to keep the old weight around to optimize it (and we can't assign it as .weight).</p>", "body_text": "Yeah, it won't work after the first forward. :(\nSeparation of weight and weight_orig is unfortunately necessary with the current interface. In the hook we will have to replace weight with the new normalized value, but we still need to keep the old weight around to optimize it (and we can't assign it as .weight).", "in_reply_to_id": 193852335}