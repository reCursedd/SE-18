{"url": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/193852335", "pull_request_review_id": 126910825, "id": 193852335, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5Mzg1MjMzNQ==", "diff_hunk": "@@ -53,8 +53,14 @@ def apply(module, name, n_power_iterations, eps):\n \n         u = normalize(weight.new_empty(height).normal_(0, 1), dim=0, eps=fn.eps)\n         delattr(module, fn.name)\n-        module.register_parameter(fn.name + \"_org\", weight)\n-        module.register_buffer(fn.name, weight)\n+        module.register_parameter(fn.name + \"_orig\", weight)\n+        # We still need to assign weight back as fn.name because all sorts of\n+        # things may assume that it exists, e.g., when initializing weights.\n+        # However, we can't directly assign as it could be an nn.Parameter and\n+        # gets added as a parameter. Instead, we assign weight.data, which will\n+        # just be added as plain attribute, and also supports nn.init due to\n+        # shared storage.\n+        setattr(module, fn.name, weight.data)", "path": "torch/nn/utils/spectral_norm.py", "position": 35, "original_position": 35, "commit_id": "c759d8792a9ade1f0e2adcc6aa1830f94f67313b", "original_commit_id": "c759d8792a9ade1f0e2adcc6aa1830f94f67313b", "user": {"login": "t-vi", "id": 20787943, "node_id": "MDQ6VXNlcjIwNzg3OTQz", "avatar_url": "https://avatars2.githubusercontent.com/u/20787943?v=4", "gravatar_id": "", "url": "https://api.github.com/users/t-vi", "html_url": "https://github.com/t-vi", "followers_url": "https://api.github.com/users/t-vi/followers", "following_url": "https://api.github.com/users/t-vi/following{/other_user}", "gists_url": "https://api.github.com/users/t-vi/gists{/gist_id}", "starred_url": "https://api.github.com/users/t-vi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/t-vi/subscriptions", "organizations_url": "https://api.github.com/users/t-vi/orgs", "repos_url": "https://api.github.com/users/t-vi/repos", "events_url": "https://api.github.com/users/t-vi/events{/privacy}", "received_events_url": "https://api.github.com/users/t-vi/received_events", "type": "User", "site_admin": false}, "body": "I must admit admit that I'm not sure that calling init_ on a replaced parameter is something to support - for example it would work before the first forward but not afterwards...\r\nThat said, other options aren't necessarily better (of course, when it's late and I'm tired I wonder whether the separation of weight and weight_orig is really that important).\r\nSo if you think the current patch is a good way to handle this, I'll be happy with it, too.", "created_at": "2018-06-07T18:47:20Z", "updated_at": "2018-11-23T15:45:10Z", "html_url": "https://github.com/pytorch/pytorch/pull/8170#discussion_r193852335", "pull_request_url": "https://api.github.com/repos/pytorch/pytorch/pulls/8170", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/193852335"}, "html": {"href": "https://github.com/pytorch/pytorch/pull/8170#discussion_r193852335"}, "pull_request": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/8170"}}, "body_html": "<p>I must admit admit that I'm not sure that calling init_ on a replaced parameter is something to support - for example it would work before the first forward but not afterwards...<br>\nThat said, other options aren't necessarily better (of course, when it's late and I'm tired I wonder whether the separation of weight and weight_orig is really that important).<br>\nSo if you think the current patch is a good way to handle this, I'll be happy with it, too.</p>", "body_text": "I must admit admit that I'm not sure that calling init_ on a replaced parameter is something to support - for example it would work before the first forward but not afterwards...\nThat said, other options aren't necessarily better (of course, when it's late and I'm tired I wonder whether the separation of weight and weight_orig is really that important).\nSo if you think the current patch is a good way to handle this, I'll be happy with it, too."}