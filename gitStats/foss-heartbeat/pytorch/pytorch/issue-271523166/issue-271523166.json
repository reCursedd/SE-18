{"url": "https://api.github.com/repos/pytorch/pytorch/issues/3505", "repository_url": "https://api.github.com/repos/pytorch/pytorch", "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/3505/labels{/name}", "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/3505/comments", "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/3505/events", "html_url": "https://github.com/pytorch/pytorch/pull/3505", "id": 271523166, "node_id": "MDExOlB1bGxSZXF1ZXN0MTUwODg3NjIz", "number": 3505, "title": "improvements to ModuleList and ParameterList classes", "user": {"login": "dhpollack", "id": 368699, "node_id": "MDQ6VXNlcjM2ODY5OQ==", "avatar_url": "https://avatars0.githubusercontent.com/u/368699?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dhpollack", "html_url": "https://github.com/dhpollack", "followers_url": "https://api.github.com/users/dhpollack/followers", "following_url": "https://api.github.com/users/dhpollack/following{/other_user}", "gists_url": "https://api.github.com/users/dhpollack/gists{/gist_id}", "starred_url": "https://api.github.com/users/dhpollack/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dhpollack/subscriptions", "organizations_url": "https://api.github.com/users/dhpollack/orgs", "repos_url": "https://api.github.com/users/dhpollack/repos", "events_url": "https://api.github.com/users/dhpollack/events{/privacy}", "received_events_url": "https://api.github.com/users/dhpollack/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 12, "created_at": "2017-11-06T15:52:35Z", "updated_at": "2018-11-23T15:36:57Z", "closed_at": "2017-11-29T19:46:40Z", "author_association": "CONTRIBUTOR", "pull_request": {"url": "https://api.github.com/repos/pytorch/pytorch/pulls/3505", "html_url": "https://github.com/pytorch/pytorch/pull/3505", "diff_url": "https://github.com/pytorch/pytorch/pull/3505.diff", "patch_url": "https://github.com/pytorch/pytorch/pull/3505.patch"}, "body_html": "<p>Here are the changes to ModuleList and ParameterList that allow for generators from modules(), parameters(), named_modules(), named_parameters().</p>\n<p>If one were to add two named_modules/parameters, then most likely modules would be overwritten because this \"list\" is actually an OrderedDict made to emulate a list.  This I added an extra parameter to the extend and append functions to add a prefix to the dict key value.  Similarly one can continue to access the list using integer indices or one can directly access the key values.</p>\n<pre><code>    model = nn.Sequential(OrderedDict([\n                      (\"layer1\", nn.Conv2d(1, 10, 3)),\n                      (\"layer2\", nn.Linear(10, 3))\n                  ]))\n    module_list = nn.ModuleList()\n    module_list.extend(model.named_modules())\n    module_list[1] == module_list[\"layer2\"] # True\n</code></pre>\n<p>This address Issue <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load issue title\" data-id=\"271401704\" data-permission-text=\"Issue title is private\" data-url=\"https://github.com/pytorch/pytorch/issues/3499\" data-hovercard-type=\"issue\" data-hovercard-url=\"/pytorch/pytorch/issues/3499/hovercard\" href=\"https://github.com/pytorch/pytorch/issues/3499\">#3499</a></p>", "body_text": "Here are the changes to ModuleList and ParameterList that allow for generators from modules(), parameters(), named_modules(), named_parameters().\nIf one were to add two named_modules/parameters, then most likely modules would be overwritten because this \"list\" is actually an OrderedDict made to emulate a list.  This I added an extra parameter to the extend and append functions to add a prefix to the dict key value.  Similarly one can continue to access the list using integer indices or one can directly access the key values.\n    model = nn.Sequential(OrderedDict([\n                      (\"layer1\", nn.Conv2d(1, 10, 3)),\n                      (\"layer2\", nn.Linear(10, 3))\n                  ]))\n    module_list = nn.ModuleList()\n    module_list.extend(model.named_modules())\n    module_list[1] == module_list[\"layer2\"] # True\n\nThis address Issue #3499", "body": "Here are the changes to ModuleList and ParameterList that allow for generators from modules(), parameters(), named_modules(), named_parameters().\r\n\r\nIf one were to add two named_modules/parameters, then most likely modules would be overwritten because this \"list\" is actually an OrderedDict made to emulate a list.  This I added an extra parameter to the extend and append functions to add a prefix to the dict key value.  Similarly one can continue to access the list using integer indices or one can directly access the key values.\r\n\r\n        model = nn.Sequential(OrderedDict([\r\n                          (\"layer1\", nn.Conv2d(1, 10, 3)),\r\n                          (\"layer2\", nn.Linear(10, 3))\r\n                      ]))\r\n        module_list = nn.ModuleList()\r\n        module_list.extend(model.named_modules())\r\n        module_list[1] == module_list[\"layer2\"] # True\r\n\r\nThis address Issue #3499\r\n"}