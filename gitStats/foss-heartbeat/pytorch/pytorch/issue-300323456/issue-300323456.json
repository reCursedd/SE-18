{"url": "https://api.github.com/repos/pytorch/pytorch/issues/5412", "repository_url": "https://api.github.com/repos/pytorch/pytorch", "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/5412/labels{/name}", "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/5412/comments", "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/5412/events", "html_url": "https://github.com/pytorch/pytorch/issues/5412", "id": 300323456, "node_id": "MDU6SXNzdWUzMDAzMjM0NTY=", "number": 5412, "title": "PyTorch memory allocation could be better", "user": {"login": "yaroslavvb", "id": 23068, "node_id": "MDQ6VXNlcjIzMDY4", "avatar_url": "https://avatars3.githubusercontent.com/u/23068?v=4", "gravatar_id": "", "url": "https://api.github.com/users/yaroslavvb", "html_url": "https://github.com/yaroslavvb", "followers_url": "https://api.github.com/users/yaroslavvb/followers", "following_url": "https://api.github.com/users/yaroslavvb/following{/other_user}", "gists_url": "https://api.github.com/users/yaroslavvb/gists{/gist_id}", "starred_url": "https://api.github.com/users/yaroslavvb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/yaroslavvb/subscriptions", "organizations_url": "https://api.github.com/users/yaroslavvb/orgs", "repos_url": "https://api.github.com/users/yaroslavvb/repos", "events_url": "https://api.github.com/users/yaroslavvb/events{/privacy}", "received_events_url": "https://api.github.com/users/yaroslavvb/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 679952992, "node_id": "MDU6TGFiZWw2Nzk5NTI5OTI=", "url": "https://api.github.com/repos/pytorch/pytorch/labels/performance", "name": "performance", "color": "f9d0c4", "default": false}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2018-02-26T17:16:51Z", "updated_at": "2018-02-26T23:52:42Z", "closed_at": null, "author_association": "NONE", "body_html": "<p>I'm seeing 30-50% difference on adding two floating point arrays on XeonV4 (p3.16xlarge) depending on whether the memory was allocated by PyTorch or TensorFlow (TensorFlow allocated memory is faster)</p>\n<p><a href=\"https://github.com/diux-dev/cluster/blob/b4284685a6d23ba06fcb32daeeaa9195683eb014/yuxin_numpy/tf_numpy_benchmark.py\">https://github.com/diux-dev/cluster/blob/b4284685a6d23ba06fcb32daeeaa9195683eb014/yuxin_numpy/tf_numpy_benchmark.py</a></p>\n<pre><code>python tf_numpy_benchmark.py --benchmark=pytorch_add --allocator=pytorch --num-iters=11 --size-mb=1024\npytorch_add                   :  19.3 GB/sec, min: 53.00, median: 53.92, mean: 54.02\npytorch_add                   :  14.9 GB/sec, min: 68.91, median: 70.63, mean: 70.92\npytorch_add                   :  19.6 GB/sec, min: 52.34, median: 57.27, mean: 57.16\n\npython tf_numpy_benchmark.py --benchmark=pytorch_add --allocator=tf --num-iters=11 --size-mb=1024\npytorch_add                   :  27.7 GB/sec, min: 37.02, median: 37.51, mean: 38.24\npytorch_add                   :  28.2 GB/sec, min: 36.32, median: 38.03, mean: 38.43\npytorch_add                   :  25.6 GB/sec, min: 39.98, median: 41.20, mean: 40.97\n</code></pre>\n<p><a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=1310570\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/soumith\">@soumith</a> suggested to look in the flags used for posix_memalign</p>", "body_text": "I'm seeing 30-50% difference on adding two floating point arrays on XeonV4 (p3.16xlarge) depending on whether the memory was allocated by PyTorch or TensorFlow (TensorFlow allocated memory is faster)\nhttps://github.com/diux-dev/cluster/blob/b4284685a6d23ba06fcb32daeeaa9195683eb014/yuxin_numpy/tf_numpy_benchmark.py\npython tf_numpy_benchmark.py --benchmark=pytorch_add --allocator=pytorch --num-iters=11 --size-mb=1024\npytorch_add                   :  19.3 GB/sec, min: 53.00, median: 53.92, mean: 54.02\npytorch_add                   :  14.9 GB/sec, min: 68.91, median: 70.63, mean: 70.92\npytorch_add                   :  19.6 GB/sec, min: 52.34, median: 57.27, mean: 57.16\n\npython tf_numpy_benchmark.py --benchmark=pytorch_add --allocator=tf --num-iters=11 --size-mb=1024\npytorch_add                   :  27.7 GB/sec, min: 37.02, median: 37.51, mean: 38.24\npytorch_add                   :  28.2 GB/sec, min: 36.32, median: 38.03, mean: 38.43\npytorch_add                   :  25.6 GB/sec, min: 39.98, median: 41.20, mean: 40.97\n\n@soumith suggested to look in the flags used for posix_memalign", "body": "I'm seeing 30-50% difference on adding two floating point arrays on XeonV4 (p3.16xlarge) depending on whether the memory was allocated by PyTorch or TensorFlow (TensorFlow allocated memory is faster)\r\n\r\nhttps://github.com/diux-dev/cluster/blob/b4284685a6d23ba06fcb32daeeaa9195683eb014/yuxin_numpy/tf_numpy_benchmark.py\r\n\r\n```\r\npython tf_numpy_benchmark.py --benchmark=pytorch_add --allocator=pytorch --num-iters=11 --size-mb=1024\r\npytorch_add                   :  19.3 GB/sec, min: 53.00, median: 53.92, mean: 54.02\r\npytorch_add                   :  14.9 GB/sec, min: 68.91, median: 70.63, mean: 70.92\r\npytorch_add                   :  19.6 GB/sec, min: 52.34, median: 57.27, mean: 57.16\r\n\r\npython tf_numpy_benchmark.py --benchmark=pytorch_add --allocator=tf --num-iters=11 --size-mb=1024\r\npytorch_add                   :  27.7 GB/sec, min: 37.02, median: 37.51, mean: 38.24\r\npytorch_add                   :  28.2 GB/sec, min: 36.32, median: 38.03, mean: 38.43\r\npytorch_add                   :  25.6 GB/sec, min: 39.98, median: 41.20, mean: 40.97\r\n```\r\n\r\n@soumith suggested to look in the flags used for posix_memalign"}