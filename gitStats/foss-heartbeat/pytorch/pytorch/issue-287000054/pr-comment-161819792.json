{"url": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/161819792", "pull_request_review_id": 89169513, "id": 161819792, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE2MTgxOTc5Mg==", "diff_hunk": "@@ -0,0 +1,104 @@\n+#include \"ATen/NativeFunctions.h\"\n+#include \"ATen/Dispatch.h\"\n+#include \"ATen/cuda/CUDAApplyUtils.cuh\"\n+#include <curand.h>\n+#include <curand_kernel.h>\n+#include <curand_philox4x32_x.h>\n+#include <thrust/functional.h>\n+\n+#include <THC/THCGeneral.h>\n+#include <THC/THCHalf.h>\n+#include <THC/THCApply.cuh>\n+#include <THC/THCNumerics.cuh>\n+#include <THC/THCTensorRandom.h>\n+\n+THCGenerator* THCRandom_getGenerator(THCState* state);\n+\n+namespace at {\n+namespace native {\n+\n+namespace dist {\n+  thrust::pair<uint64_t, uint64_t> get_philox_seed(Generator *gen) {\n+    auto gen_ = THCRandom_getGenerator(at::globalContext().thc_state);\n+    return thrust::make_pair(gen_->initial_seed, gen_->philox_seed_offset++);", "path": "aten/src/ATen/native/cuda/Distributions.cu", "position": null, "original_position": 23, "commit_id": "db8fcff8305b83a485ce4ef561bc6afee5b64ac2", "original_commit_id": "5a7d114cda116292fc2a48f029a923428d95bbe4", "user": {"login": "rachtsingh", "id": 1606892, "node_id": "MDQ6VXNlcjE2MDY4OTI=", "avatar_url": "https://avatars0.githubusercontent.com/u/1606892?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rachtsingh", "html_url": "https://github.com/rachtsingh", "followers_url": "https://api.github.com/users/rachtsingh/followers", "following_url": "https://api.github.com/users/rachtsingh/following{/other_user}", "gists_url": "https://api.github.com/users/rachtsingh/gists{/gist_id}", "starred_url": "https://api.github.com/users/rachtsingh/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rachtsingh/subscriptions", "organizations_url": "https://api.github.com/users/rachtsingh/orgs", "repos_url": "https://api.github.com/users/rachtsingh/repos", "events_url": "https://api.github.com/users/rachtsingh/events{/privacy}", "received_events_url": "https://api.github.com/users/rachtsingh/received_events", "type": "User", "site_admin": false}, "body": "Ah, `thrust::pair` isn't thread-safe? I can definitely make it `std::pair`. I think we do have a per-GPU seed, based on https://github.com/pytorch/pytorch/blob/master/aten/src/THC/THCTensorRandom.h#L18, but since I don't know `thrust`'s thread-safety, I'll just make it `std::pair`.", "created_at": "2018-01-16T16:55:06Z", "updated_at": "2018-11-23T15:38:12Z", "html_url": "https://github.com/pytorch/pytorch/pull/4556#discussion_r161819792", "pull_request_url": "https://api.github.com/repos/pytorch/pytorch/pulls/4556", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/161819792"}, "html": {"href": "https://github.com/pytorch/pytorch/pull/4556#discussion_r161819792"}, "pull_request": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/4556"}}, "body_html": "<p>Ah, <code>thrust::pair</code> isn't thread-safe? I can definitely make it <code>std::pair</code>. I think we do have a per-GPU seed, based on <a href=\"https://github.com/pytorch/pytorch/blob/master/aten/src/THC/THCTensorRandom.h#L18\">https://github.com/pytorch/pytorch/blob/master/aten/src/THC/THCTensorRandom.h#L18</a>, but since I don't know <code>thrust</code>'s thread-safety, I'll just make it <code>std::pair</code>.</p>", "body_text": "Ah, thrust::pair isn't thread-safe? I can definitely make it std::pair. I think we do have a per-GPU seed, based on https://github.com/pytorch/pytorch/blob/master/aten/src/THC/THCTensorRandom.h#L18, but since I don't know thrust's thread-safety, I'll just make it std::pair.", "in_reply_to_id": 161809535}