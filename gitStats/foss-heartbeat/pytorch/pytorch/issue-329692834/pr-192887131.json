{"url": "https://api.github.com/repos/pytorch/pytorch/pulls/8182", "id": 192887131, "node_id": "MDExOlB1bGxSZXF1ZXN0MTkyODg3MTMx", "html_url": "https://github.com/pytorch/pytorch/pull/8182", "diff_url": "https://github.com/pytorch/pytorch/pull/8182.diff", "patch_url": "https://github.com/pytorch/pytorch/pull/8182.patch", "issue_url": "https://api.github.com/repos/pytorch/pytorch/issues/8182", "number": 8182, "state": "closed", "locked": false, "title": "[c10d] NCCL Process Group implementation", "user": {"login": "teng-li", "id": 8120856, "node_id": "MDQ6VXNlcjgxMjA4NTY=", "avatar_url": "https://avatars2.githubusercontent.com/u/8120856?v=4", "gravatar_id": "", "url": "https://api.github.com/users/teng-li", "html_url": "https://github.com/teng-li", "followers_url": "https://api.github.com/users/teng-li/followers", "following_url": "https://api.github.com/users/teng-li/following{/other_user}", "gists_url": "https://api.github.com/users/teng-li/gists{/gist_id}", "starred_url": "https://api.github.com/users/teng-li/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/teng-li/subscriptions", "organizations_url": "https://api.github.com/users/teng-li/orgs", "repos_url": "https://api.github.com/users/teng-li/repos", "events_url": "https://api.github.com/users/teng-li/events{/privacy}", "received_events_url": "https://api.github.com/users/teng-li/received_events", "type": "User", "site_admin": false}, "body": "This PR implements a bare-bone NCCL process group. \r\n\r\nBuild: will automatically detect NCCL and NCCL's version as well to decide if it should build with NCCL PG or without NCCL pg.\r\n```\r\n$ cmake ../ -DCMAKE_INSTALL_PREFIX=\"$PWD/../../tmp_install\"\r\n-- The C compiler identification is GNU 5.4.0\r\n-- The CXX compiler identification is GNU 5.4.0\r\n-- Check for working C compiler: /usr/bin/cc\r\n-- Check for working C compiler: /usr/bin/cc -- works\r\n-- Detecting C compiler ABI info\r\n-- Detecting C compiler ABI info - done\r\n-- Detecting C compile features\r\n-- Detecting C compile features - done\r\n-- Check for working CXX compiler: /usr/bin/c++\r\n-- Check for working CXX compiler: /usr/bin/c++ -- works\r\n-- Detecting CXX compiler ABI info\r\n-- Detecting CXX compiler ABI info - done\r\n-- Detecting CXX compile features\r\n-- Detecting CXX compile features - done\r\n-- ATEN_INCLUDE_DIR: /private/home/tengli/pieter_pytorch/pytorch/torch/lib/tmp_install/include\r\n-- ATEN_LIBRARIES: /private/home/tengli/pieter_pytorch/pytorch/torch/lib/tmp_install/lib/libATen_cpu.so;/private/home/tengli/pieter_pytorch/pytorch/torch/lib/tmp_install/lib/libATen_cuda.so\r\n-- Found MPI_C: /public/apps/openmpi/2.1.1/gcc.5.4.0/lib/libmpi.so\r\n-- Found MPI_CXX: /public/apps/openmpi/2.1.1/gcc.5.4.0/lib/libmpi.so\r\n-- MPI_INCLUDE_PATH: /public/apps/openmpi/2.1.1/gcc.5.4.0/include\r\n-- MPI_LIBRARIES: /public/apps/openmpi/2.1.1/gcc.5.4.0/lib/libmpi.so\r\n-- MPIEXEC: /public/apps/openmpi/2.1.1/gcc.5.4.0/bin/mpiexec\r\n-- Found NCCL: /public/apps/NCCL/2.2.12-1/include\r\n-- Determining NCCL version from the header file: /public/apps/NCCL/2.2.12-1/include/nccl.h\r\n-- NCCL_MAJOR_VERSION: 2\r\n-- Found NCCL (include: /public/apps/NCCL/2.2.12-1/include, library: /public/apps/NCCL/2.2.12-1/lib/libnccl.so)\r\n-- NCCL_LIBRARIES: /public/apps/NCCL/2.2.12-1/lib/libnccl.so\r\n-- NCCL_INCLUDE_DIR: /public/apps/NCCL/2.2.12-1/include\r\n-- NCCL Version 2 or higher found, will compile with NCCL distributed backend\r\n-- Looking for pthread.h\r\n-- Looking for pthread.h - found\r\n-- Looking for pthread_create\r\n-- Looking for pthread_create - not found\r\n-- Looking for pthread_create in pthreads\r\n-- Looking for pthread_create in pthreads - not found\r\n-- Looking for pthread_create in pthread\r\n-- Looking for pthread_create in pthread - found\r\n-- Found Threads: TRUE\r\n-- Found CUDA: /public/apps/cuda/9.0 (found version \"9.0\")\r\n-- Configuring done\r\n-- Generating done\r\n-- Build files have been written to: /private/home/tengli/pieter_pytorch/pytorch/torch/lib/c10d/build\r\n```\r\nTesting: ProcessGroupNCCLTest can be either used for single node or multi-node testing. By default, make test will run single node testing:\r\n\r\nTested on 2x DGX1s with 8x GPUs:\r\n**(1) Single Node:**\r\n```\r\n$./ProcessGroupNCCLTest\r\nAllreduce test successful\r\nBroadcast test successful\r\n```\r\n**(2) Multi-node:**\r\n**node0:**\r\n```\r\n$ TMPFILE=\"/private/home/tengli/temp/tengli-test\" RANK=0 WORLD_SIZE=2 ./ProcessGroupNCCLTest\r\nMulti-node world size: 2 rank: 0\r\nAllreduce test successful\r\nBroadcast test successful\r\n```\r\n**node1:**\r\n```\r\n$ TMPFILE=\"/private/home/tengli/temp/tengli-test\" RANK=1 WORLD_SIZE=2 ./ProcessGroupNCCLTest\r\nMulti-node world size: 2 rank: 1\r\nAllreduce test successful\r\nBroadcast test successful\r\n```", "created_at": "2018-06-06T02:57:38Z", "updated_at": "2018-11-23T15:45:10Z", "closed_at": "2018-06-08T17:33:28Z", "merged_at": "2018-06-08T17:33:28Z", "merge_commit_sha": "a994b432ee2c9ecf63af1aaefede2c332f49b3f8", "assignee": null, "assignees": [], "requested_reviewers": [{"login": "apaszke", "id": 4583066, "node_id": "MDQ6VXNlcjQ1ODMwNjY=", "avatar_url": "https://avatars3.githubusercontent.com/u/4583066?v=4", "gravatar_id": "", "url": "https://api.github.com/users/apaszke", "html_url": "https://github.com/apaszke", "followers_url": "https://api.github.com/users/apaszke/followers", "following_url": "https://api.github.com/users/apaszke/following{/other_user}", "gists_url": "https://api.github.com/users/apaszke/gists{/gist_id}", "starred_url": "https://api.github.com/users/apaszke/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/apaszke/subscriptions", "organizations_url": "https://api.github.com/users/apaszke/orgs", "repos_url": "https://api.github.com/users/apaszke/repos", "events_url": "https://api.github.com/users/apaszke/events{/privacy}", "received_events_url": "https://api.github.com/users/apaszke/received_events", "type": "User", "site_admin": false}], "requested_teams": [], "labels": [{"id": 679953883, "node_id": "MDU6TGFiZWw2Nzk5NTM4ODM=", "url": "https://api.github.com/repos/pytorch/pytorch/labels/distributed", "name": "distributed", "color": "c2e0c6", "default": false}], "milestone": null, "commits_url": "https://api.github.com/repos/pytorch/pytorch/pulls/8182/commits", "review_comments_url": "https://api.github.com/repos/pytorch/pytorch/pulls/8182/comments", "review_comment_url": "https://api.github.com/repos/pytorch/pytorch/pulls/comments{/number}", "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/8182/comments", "statuses_url": "https://api.github.com/repos/pytorch/pytorch/statuses/d50e66c0853fa5d79687e01eb1406ab5f2beb832", "head": {"label": "teng-li:nccl_pg", "ref": "nccl_pg", "sha": "d50e66c0853fa5d79687e01eb1406ab5f2beb832", "user": {"login": "teng-li", "id": 8120856, "node_id": "MDQ6VXNlcjgxMjA4NTY=", "avatar_url": "https://avatars2.githubusercontent.com/u/8120856?v=4", "gravatar_id": "", "url": "https://api.github.com/users/teng-li", "html_url": "https://github.com/teng-li", "followers_url": "https://api.github.com/users/teng-li/followers", "following_url": "https://api.github.com/users/teng-li/following{/other_user}", "gists_url": "https://api.github.com/users/teng-li/gists{/gist_id}", "starred_url": "https://api.github.com/users/teng-li/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/teng-li/subscriptions", "organizations_url": "https://api.github.com/users/teng-li/orgs", "repos_url": "https://api.github.com/users/teng-li/repos", "events_url": "https://api.github.com/users/teng-li/events{/privacy}", "received_events_url": "https://api.github.com/users/teng-li/received_events", "type": "User", "site_admin": false}, "repo": {"id": 104418157, "node_id": "MDEwOlJlcG9zaXRvcnkxMDQ0MTgxNTc=", "name": "pytorch", "full_name": "teng-li/pytorch", "private": false, "owner": {"login": "teng-li", "id": 8120856, "node_id": "MDQ6VXNlcjgxMjA4NTY=", "avatar_url": "https://avatars2.githubusercontent.com/u/8120856?v=4", "gravatar_id": "", "url": "https://api.github.com/users/teng-li", "html_url": "https://github.com/teng-li", "followers_url": "https://api.github.com/users/teng-li/followers", "following_url": "https://api.github.com/users/teng-li/following{/other_user}", "gists_url": "https://api.github.com/users/teng-li/gists{/gist_id}", "starred_url": "https://api.github.com/users/teng-li/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/teng-li/subscriptions", "organizations_url": "https://api.github.com/users/teng-li/orgs", "repos_url": "https://api.github.com/users/teng-li/repos", "events_url": "https://api.github.com/users/teng-li/events{/privacy}", "received_events_url": "https://api.github.com/users/teng-li/received_events", "type": "User", "site_admin": false}, "html_url": "https://github.com/teng-li/pytorch", "description": "Tensors and Dynamic neural networks in Python  with strong GPU acceleration", "fork": true, "url": "https://api.github.com/repos/teng-li/pytorch", "forks_url": "https://api.github.com/repos/teng-li/pytorch/forks", "keys_url": "https://api.github.com/repos/teng-li/pytorch/keys{/key_id}", "collaborators_url": "https://api.github.com/repos/teng-li/pytorch/collaborators{/collaborator}", "teams_url": "https://api.github.com/repos/teng-li/pytorch/teams", "hooks_url": "https://api.github.com/repos/teng-li/pytorch/hooks", "issue_events_url": "https://api.github.com/repos/teng-li/pytorch/issues/events{/number}", "events_url": "https://api.github.com/repos/teng-li/pytorch/events", "assignees_url": "https://api.github.com/repos/teng-li/pytorch/assignees{/user}", "branches_url": "https://api.github.com/repos/teng-li/pytorch/branches{/branch}", "tags_url": "https://api.github.com/repos/teng-li/pytorch/tags", "blobs_url": "https://api.github.com/repos/teng-li/pytorch/git/blobs{/sha}", "git_tags_url": "https://api.github.com/repos/teng-li/pytorch/git/tags{/sha}", "git_refs_url": "https://api.github.com/repos/teng-li/pytorch/git/refs{/sha}", "trees_url": "https://api.github.com/repos/teng-li/pytorch/git/trees{/sha}", "statuses_url": "https://api.github.com/repos/teng-li/pytorch/statuses/{sha}", "languages_url": "https://api.github.com/repos/teng-li/pytorch/languages", "stargazers_url": "https://api.github.com/repos/teng-li/pytorch/stargazers", "contributors_url": "https://api.github.com/repos/teng-li/pytorch/contributors", "subscribers_url": "https://api.github.com/repos/teng-li/pytorch/subscribers", "subscription_url": "https://api.github.com/repos/teng-li/pytorch/subscription", "commits_url": "https://api.github.com/repos/teng-li/pytorch/commits{/sha}", "git_commits_url": "https://api.github.com/repos/teng-li/pytorch/git/commits{/sha}", "comments_url": "https://api.github.com/repos/teng-li/pytorch/comments{/number}", "issue_comment_url": "https://api.github.com/repos/teng-li/pytorch/issues/comments{/number}", "contents_url": "https://api.github.com/repos/teng-li/pytorch/contents/{+path}", "compare_url": "https://api.github.com/repos/teng-li/pytorch/compare/{base}...{head}", "merges_url": "https://api.github.com/repos/teng-li/pytorch/merges", "archive_url": "https://api.github.com/repos/teng-li/pytorch/{archive_format}{/ref}", "downloads_url": "https://api.github.com/repos/teng-li/pytorch/downloads", "issues_url": "https://api.github.com/repos/teng-li/pytorch/issues{/number}", "pulls_url": "https://api.github.com/repos/teng-li/pytorch/pulls{/number}", "milestones_url": "https://api.github.com/repos/teng-li/pytorch/milestones{/number}", "notifications_url": "https://api.github.com/repos/teng-li/pytorch/notifications{?since,all,participating}", "labels_url": "https://api.github.com/repos/teng-li/pytorch/labels{/name}", "releases_url": "https://api.github.com/repos/teng-li/pytorch/releases{/id}", "deployments_url": "https://api.github.com/repos/teng-li/pytorch/deployments", "created_at": "2017-09-22T01:47:47Z", "updated_at": "2018-11-16T21:24:06Z", "pushed_at": "2018-11-21T23:54:22Z", "git_url": "git://github.com/teng-li/pytorch.git", "ssh_url": "git@github.com:teng-li/pytorch.git", "clone_url": "https://github.com/teng-li/pytorch.git", "svn_url": "https://github.com/teng-li/pytorch", "homepage": "http://pytorch.org", "size": 86347, "stargazers_count": 0, "watchers_count": 0, "language": "C++", "has_issues": false, "has_projects": true, "has_downloads": true, "has_wiki": true, "has_pages": false, "forks_count": 0, "mirror_url": null, "archived": false, "open_issues_count": 0, "license": {"key": "other", "name": "Other", "spdx_id": "NOASSERTION", "url": null, "node_id": "MDc6TGljZW5zZTA="}, "forks": 0, "open_issues": 0, "watchers": 0, "default_branch": "master"}}, "base": {"label": "pytorch:master", "ref": "master", "sha": "1172b152ab1c6150c7860e7213c87af1a104a755", "user": {"login": "pytorch", "id": 21003710, "node_id": "MDEyOk9yZ2FuaXphdGlvbjIxMDAzNzEw", "avatar_url": "https://avatars3.githubusercontent.com/u/21003710?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pytorch", "html_url": "https://github.com/pytorch", "followers_url": "https://api.github.com/users/pytorch/followers", "following_url": "https://api.github.com/users/pytorch/following{/other_user}", "gists_url": "https://api.github.com/users/pytorch/gists{/gist_id}", "starred_url": "https://api.github.com/users/pytorch/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pytorch/subscriptions", "organizations_url": "https://api.github.com/users/pytorch/orgs", "repos_url": "https://api.github.com/users/pytorch/repos", "events_url": "https://api.github.com/users/pytorch/events{/privacy}", "received_events_url": "https://api.github.com/users/pytorch/received_events", "type": "Organization", "site_admin": false}, "repo": {"id": 65600975, "node_id": "MDEwOlJlcG9zaXRvcnk2NTYwMDk3NQ==", "name": "pytorch", "full_name": "pytorch/pytorch", "private": false, "owner": {"login": "pytorch", "id": 21003710, "node_id": "MDEyOk9yZ2FuaXphdGlvbjIxMDAzNzEw", "avatar_url": "https://avatars3.githubusercontent.com/u/21003710?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pytorch", "html_url": "https://github.com/pytorch", "followers_url": "https://api.github.com/users/pytorch/followers", "following_url": "https://api.github.com/users/pytorch/following{/other_user}", "gists_url": "https://api.github.com/users/pytorch/gists{/gist_id}", "starred_url": "https://api.github.com/users/pytorch/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pytorch/subscriptions", "organizations_url": "https://api.github.com/users/pytorch/orgs", "repos_url": "https://api.github.com/users/pytorch/repos", "events_url": "https://api.github.com/users/pytorch/events{/privacy}", "received_events_url": "https://api.github.com/users/pytorch/received_events", "type": "Organization", "site_admin": false}, "html_url": "https://github.com/pytorch/pytorch", "description": "Tensors and Dynamic neural networks in Python  with strong GPU acceleration", "fork": false, "url": "https://api.github.com/repos/pytorch/pytorch", "forks_url": "https://api.github.com/repos/pytorch/pytorch/forks", "keys_url": "https://api.github.com/repos/pytorch/pytorch/keys{/key_id}", "collaborators_url": "https://api.github.com/repos/pytorch/pytorch/collaborators{/collaborator}", "teams_url": "https://api.github.com/repos/pytorch/pytorch/teams", "hooks_url": "https://api.github.com/repos/pytorch/pytorch/hooks", "issue_events_url": "https://api.github.com/repos/pytorch/pytorch/issues/events{/number}", "events_url": "https://api.github.com/repos/pytorch/pytorch/events", "assignees_url": "https://api.github.com/repos/pytorch/pytorch/assignees{/user}", "branches_url": "https://api.github.com/repos/pytorch/pytorch/branches{/branch}", "tags_url": "https://api.github.com/repos/pytorch/pytorch/tags", "blobs_url": "https://api.github.com/repos/pytorch/pytorch/git/blobs{/sha}", "git_tags_url": "https://api.github.com/repos/pytorch/pytorch/git/tags{/sha}", "git_refs_url": "https://api.github.com/repos/pytorch/pytorch/git/refs{/sha}", "trees_url": "https://api.github.com/repos/pytorch/pytorch/git/trees{/sha}", "statuses_url": "https://api.github.com/repos/pytorch/pytorch/statuses/{sha}", "languages_url": "https://api.github.com/repos/pytorch/pytorch/languages", "stargazers_url": "https://api.github.com/repos/pytorch/pytorch/stargazers", "contributors_url": "https://api.github.com/repos/pytorch/pytorch/contributors", "subscribers_url": "https://api.github.com/repos/pytorch/pytorch/subscribers", "subscription_url": "https://api.github.com/repos/pytorch/pytorch/subscription", "commits_url": "https://api.github.com/repos/pytorch/pytorch/commits{/sha}", "git_commits_url": "https://api.github.com/repos/pytorch/pytorch/git/commits{/sha}", "comments_url": "https://api.github.com/repos/pytorch/pytorch/comments{/number}", "issue_comment_url": "https://api.github.com/repos/pytorch/pytorch/issues/comments{/number}", "contents_url": "https://api.github.com/repos/pytorch/pytorch/contents/{+path}", "compare_url": "https://api.github.com/repos/pytorch/pytorch/compare/{base}...{head}", "merges_url": "https://api.github.com/repos/pytorch/pytorch/merges", "archive_url": "https://api.github.com/repos/pytorch/pytorch/{archive_format}{/ref}", "downloads_url": "https://api.github.com/repos/pytorch/pytorch/downloads", "issues_url": "https://api.github.com/repos/pytorch/pytorch/issues{/number}", "pulls_url": "https://api.github.com/repos/pytorch/pytorch/pulls{/number}", "milestones_url": "https://api.github.com/repos/pytorch/pytorch/milestones{/number}", "notifications_url": "https://api.github.com/repos/pytorch/pytorch/notifications{?since,all,participating}", "labels_url": "https://api.github.com/repos/pytorch/pytorch/labels{/name}", "releases_url": "https://api.github.com/repos/pytorch/pytorch/releases{/id}", "deployments_url": "https://api.github.com/repos/pytorch/pytorch/deployments", "created_at": "2016-08-13T05:26:41Z", "updated_at": "2018-11-24T05:35:41Z", "pushed_at": "2018-11-24T05:34:07Z", "git_url": "git://github.com/pytorch/pytorch.git", "ssh_url": "git@github.com:pytorch/pytorch.git", "clone_url": "https://github.com/pytorch/pytorch.git", "svn_url": "https://github.com/pytorch/pytorch", "homepage": "http://pytorch.org", "size": 89651, "stargazers_count": 21577, "watchers_count": 21577, "language": "C++", "has_issues": true, "has_projects": true, "has_downloads": true, "has_wiki": true, "has_pages": false, "forks_count": 5149, "mirror_url": null, "archived": false, "open_issues_count": 2193, "license": {"key": "other", "name": "Other", "spdx_id": "NOASSERTION", "url": null, "node_id": "MDc6TGljZW5zZTA="}, "forks": 5149, "open_issues": 2193, "watchers": 21577, "default_branch": "master"}}, "_links": {"self": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/8182"}, "html": {"href": "https://github.com/pytorch/pytorch/pull/8182"}, "issue": {"href": "https://api.github.com/repos/pytorch/pytorch/issues/8182"}, "comments": {"href": "https://api.github.com/repos/pytorch/pytorch/issues/8182/comments"}, "review_comments": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/8182/comments"}, "review_comment": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/comments{/number}"}, "commits": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/8182/commits"}, "statuses": {"href": "https://api.github.com/repos/pytorch/pytorch/statuses/d50e66c0853fa5d79687e01eb1406ab5f2beb832"}}, "author_association": "CONTRIBUTOR", "body_html": "<p>This PR implements a bare-bone NCCL process group.</p>\n<p>Build: will automatically detect NCCL and NCCL's version as well to decide if it should build with NCCL PG or without NCCL pg.</p>\n<pre><code>$ cmake ../ -DCMAKE_INSTALL_PREFIX=\"$PWD/../../tmp_install\"\n-- The C compiler identification is GNU 5.4.0\n-- The CXX compiler identification is GNU 5.4.0\n-- Check for working C compiler: /usr/bin/cc\n-- Check for working C compiler: /usr/bin/cc -- works\n-- Detecting C compiler ABI info\n-- Detecting C compiler ABI info - done\n-- Detecting C compile features\n-- Detecting C compile features - done\n-- Check for working CXX compiler: /usr/bin/c++\n-- Check for working CXX compiler: /usr/bin/c++ -- works\n-- Detecting CXX compiler ABI info\n-- Detecting CXX compiler ABI info - done\n-- Detecting CXX compile features\n-- Detecting CXX compile features - done\n-- ATEN_INCLUDE_DIR: /private/home/tengli/pieter_pytorch/pytorch/torch/lib/tmp_install/include\n-- ATEN_LIBRARIES: /private/home/tengli/pieter_pytorch/pytorch/torch/lib/tmp_install/lib/libATen_cpu.so;/private/home/tengli/pieter_pytorch/pytorch/torch/lib/tmp_install/lib/libATen_cuda.so\n-- Found MPI_C: /public/apps/openmpi/2.1.1/gcc.5.4.0/lib/libmpi.so\n-- Found MPI_CXX: /public/apps/openmpi/2.1.1/gcc.5.4.0/lib/libmpi.so\n-- MPI_INCLUDE_PATH: /public/apps/openmpi/2.1.1/gcc.5.4.0/include\n-- MPI_LIBRARIES: /public/apps/openmpi/2.1.1/gcc.5.4.0/lib/libmpi.so\n-- MPIEXEC: /public/apps/openmpi/2.1.1/gcc.5.4.0/bin/mpiexec\n-- Found NCCL: /public/apps/NCCL/2.2.12-1/include\n-- Determining NCCL version from the header file: /public/apps/NCCL/2.2.12-1/include/nccl.h\n-- NCCL_MAJOR_VERSION: 2\n-- Found NCCL (include: /public/apps/NCCL/2.2.12-1/include, library: /public/apps/NCCL/2.2.12-1/lib/libnccl.so)\n-- NCCL_LIBRARIES: /public/apps/NCCL/2.2.12-1/lib/libnccl.so\n-- NCCL_INCLUDE_DIR: /public/apps/NCCL/2.2.12-1/include\n-- NCCL Version 2 or higher found, will compile with NCCL distributed backend\n-- Looking for pthread.h\n-- Looking for pthread.h - found\n-- Looking for pthread_create\n-- Looking for pthread_create - not found\n-- Looking for pthread_create in pthreads\n-- Looking for pthread_create in pthreads - not found\n-- Looking for pthread_create in pthread\n-- Looking for pthread_create in pthread - found\n-- Found Threads: TRUE\n-- Found CUDA: /public/apps/cuda/9.0 (found version \"9.0\")\n-- Configuring done\n-- Generating done\n-- Build files have been written to: /private/home/tengli/pieter_pytorch/pytorch/torch/lib/c10d/build\n</code></pre>\n<p>Testing: ProcessGroupNCCLTest can be either used for single node or multi-node testing. By default, make test will run single node testing:</p>\n<p>Tested on 2x DGX1s with 8x GPUs:<br>\n<strong>(1) Single Node:</strong></p>\n<pre><code>$./ProcessGroupNCCLTest\nAllreduce test successful\nBroadcast test successful\n</code></pre>\n<p><strong>(2) Multi-node:</strong><br>\n<strong>node0:</strong></p>\n<pre><code>$ TMPFILE=\"/private/home/tengli/temp/tengli-test\" RANK=0 WORLD_SIZE=2 ./ProcessGroupNCCLTest\nMulti-node world size: 2 rank: 0\nAllreduce test successful\nBroadcast test successful\n</code></pre>\n<p><strong>node1:</strong></p>\n<pre><code>$ TMPFILE=\"/private/home/tengli/temp/tengli-test\" RANK=1 WORLD_SIZE=2 ./ProcessGroupNCCLTest\nMulti-node world size: 2 rank: 1\nAllreduce test successful\nBroadcast test successful\n</code></pre>", "body_text": "This PR implements a bare-bone NCCL process group.\nBuild: will automatically detect NCCL and NCCL's version as well to decide if it should build with NCCL PG or without NCCL pg.\n$ cmake ../ -DCMAKE_INSTALL_PREFIX=\"$PWD/../../tmp_install\"\n-- The C compiler identification is GNU 5.4.0\n-- The CXX compiler identification is GNU 5.4.0\n-- Check for working C compiler: /usr/bin/cc\n-- Check for working C compiler: /usr/bin/cc -- works\n-- Detecting C compiler ABI info\n-- Detecting C compiler ABI info - done\n-- Detecting C compile features\n-- Detecting C compile features - done\n-- Check for working CXX compiler: /usr/bin/c++\n-- Check for working CXX compiler: /usr/bin/c++ -- works\n-- Detecting CXX compiler ABI info\n-- Detecting CXX compiler ABI info - done\n-- Detecting CXX compile features\n-- Detecting CXX compile features - done\n-- ATEN_INCLUDE_DIR: /private/home/tengli/pieter_pytorch/pytorch/torch/lib/tmp_install/include\n-- ATEN_LIBRARIES: /private/home/tengli/pieter_pytorch/pytorch/torch/lib/tmp_install/lib/libATen_cpu.so;/private/home/tengli/pieter_pytorch/pytorch/torch/lib/tmp_install/lib/libATen_cuda.so\n-- Found MPI_C: /public/apps/openmpi/2.1.1/gcc.5.4.0/lib/libmpi.so\n-- Found MPI_CXX: /public/apps/openmpi/2.1.1/gcc.5.4.0/lib/libmpi.so\n-- MPI_INCLUDE_PATH: /public/apps/openmpi/2.1.1/gcc.5.4.0/include\n-- MPI_LIBRARIES: /public/apps/openmpi/2.1.1/gcc.5.4.0/lib/libmpi.so\n-- MPIEXEC: /public/apps/openmpi/2.1.1/gcc.5.4.0/bin/mpiexec\n-- Found NCCL: /public/apps/NCCL/2.2.12-1/include\n-- Determining NCCL version from the header file: /public/apps/NCCL/2.2.12-1/include/nccl.h\n-- NCCL_MAJOR_VERSION: 2\n-- Found NCCL (include: /public/apps/NCCL/2.2.12-1/include, library: /public/apps/NCCL/2.2.12-1/lib/libnccl.so)\n-- NCCL_LIBRARIES: /public/apps/NCCL/2.2.12-1/lib/libnccl.so\n-- NCCL_INCLUDE_DIR: /public/apps/NCCL/2.2.12-1/include\n-- NCCL Version 2 or higher found, will compile with NCCL distributed backend\n-- Looking for pthread.h\n-- Looking for pthread.h - found\n-- Looking for pthread_create\n-- Looking for pthread_create - not found\n-- Looking for pthread_create in pthreads\n-- Looking for pthread_create in pthreads - not found\n-- Looking for pthread_create in pthread\n-- Looking for pthread_create in pthread - found\n-- Found Threads: TRUE\n-- Found CUDA: /public/apps/cuda/9.0 (found version \"9.0\")\n-- Configuring done\n-- Generating done\n-- Build files have been written to: /private/home/tengli/pieter_pytorch/pytorch/torch/lib/c10d/build\n\nTesting: ProcessGroupNCCLTest can be either used for single node or multi-node testing. By default, make test will run single node testing:\nTested on 2x DGX1s with 8x GPUs:\n(1) Single Node:\n$./ProcessGroupNCCLTest\nAllreduce test successful\nBroadcast test successful\n\n(2) Multi-node:\nnode0:\n$ TMPFILE=\"/private/home/tengli/temp/tengli-test\" RANK=0 WORLD_SIZE=2 ./ProcessGroupNCCLTest\nMulti-node world size: 2 rank: 0\nAllreduce test successful\nBroadcast test successful\n\nnode1:\n$ TMPFILE=\"/private/home/tengli/temp/tengli-test\" RANK=1 WORLD_SIZE=2 ./ProcessGroupNCCLTest\nMulti-node world size: 2 rank: 1\nAllreduce test successful\nBroadcast test successful", "merged": true, "mergeable": null, "rebaseable": null, "mergeable_state": "unknown", "merged_by": {"login": "pietern", "id": 9845, "node_id": "MDQ6VXNlcjk4NDU=", "avatar_url": "https://avatars3.githubusercontent.com/u/9845?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pietern", "html_url": "https://github.com/pietern", "followers_url": "https://api.github.com/users/pietern/followers", "following_url": "https://api.github.com/users/pietern/following{/other_user}", "gists_url": "https://api.github.com/users/pietern/gists{/gist_id}", "starred_url": "https://api.github.com/users/pietern/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pietern/subscriptions", "organizations_url": "https://api.github.com/users/pietern/orgs", "repos_url": "https://api.github.com/users/pietern/repos", "events_url": "https://api.github.com/users/pietern/events{/privacy}", "received_events_url": "https://api.github.com/users/pietern/received_events", "type": "User", "site_admin": false}, "comments": 2, "review_comments": 29, "maintainer_can_modify": false, "commits": 6, "additions": 983, "deletions": 36, "changed_files": 15}