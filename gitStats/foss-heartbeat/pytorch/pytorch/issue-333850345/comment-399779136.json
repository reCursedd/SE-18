{"url": "https://api.github.com/repos/pytorch/pytorch/issues/comments/399779136", "html_url": "https://github.com/pytorch/pytorch/pull/8668#issuecomment-399779136", "issue_url": "https://api.github.com/repos/pytorch/pytorch/issues/8668", "id": 399779136, "node_id": "MDEyOklzc3VlQ29tbWVudDM5OTc3OTEzNg==", "user": {"login": "ezyang", "id": 13564, "node_id": "MDQ6VXNlcjEzNTY0", "avatar_url": "https://avatars0.githubusercontent.com/u/13564?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ezyang", "html_url": "https://github.com/ezyang", "followers_url": "https://api.github.com/users/ezyang/followers", "following_url": "https://api.github.com/users/ezyang/following{/other_user}", "gists_url": "https://api.github.com/users/ezyang/gists{/gist_id}", "starred_url": "https://api.github.com/users/ezyang/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ezyang/subscriptions", "organizations_url": "https://api.github.com/users/ezyang/orgs", "repos_url": "https://api.github.com/users/ezyang/repos", "events_url": "https://api.github.com/users/ezyang/events{/privacy}", "received_events_url": "https://api.github.com/users/ezyang/received_events", "type": "User", "site_admin": false}, "created_at": "2018-06-24T18:58:34Z", "updated_at": "2018-06-24T18:58:34Z", "author_association": "CONTRIBUTOR", "body_html": "<p><a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=4685384\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/jamesr66a\">@jamesr66a</a> A common way to do it is to write a normalizer: it takes some string and normalizes it into a new string which resembles the original, but is intended to be invariant across different environments. You could implement it as a regex, but instead of having a regex which <em>matches modulo system differences</em>, you have a regex which matches system differences and removes them.</p>\n<p>Another way to do it is refactor the error reporting so that the stack is separate from the message, so you can just expect test the message.</p>", "body_text": "@jamesr66a A common way to do it is to write a normalizer: it takes some string and normalizes it into a new string which resembles the original, but is intended to be invariant across different environments. You could implement it as a regex, but instead of having a regex which matches modulo system differences, you have a regex which matches system differences and removes them.\nAnother way to do it is refactor the error reporting so that the stack is separate from the message, so you can just expect test the message.", "body": "@jamesr66a A common way to do it is to write a normalizer: it takes some string and normalizes it into a new string which resembles the original, but is intended to be invariant across different environments. You could implement it as a regex, but instead of having a regex which *matches modulo system differences*, you have a regex which matches system differences and removes them.\r\n\r\nAnother way to do it is refactor the error reporting so that the stack is separate from the message, so you can just expect test the message."}