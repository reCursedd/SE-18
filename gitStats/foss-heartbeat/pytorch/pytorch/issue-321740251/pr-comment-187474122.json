{"url": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/187474122", "pull_request_review_id": 119264638, "id": 187474122, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4NzQ3NDEyMg==", "diff_hunk": "@@ -1973,6 +1973,11 @@ def test_tensor_factory(self):\n             a[0] = 7.\n             self.assertEqual(5., res1[0].item())\n \n+            # test ill-sized strides raise exception\n+            b = np.array([3., 5., 8.])\n+            b.strides = (3,)\n+            self.assertRaises(ValueError, lambda: torch.tensor(b))", "path": "test/test_torch.py", "position": null, "original_position": 7, "commit_id": "7cb1b66ffb126648c7ee70220d1e0e8c34f4e90f", "original_commit_id": "e471add9eef0ea8877790668df0d192c14faa988", "user": {"login": "apaszke", "id": 4583066, "node_id": "MDQ6VXNlcjQ1ODMwNjY=", "avatar_url": "https://avatars3.githubusercontent.com/u/4583066?v=4", "gravatar_id": "", "url": "https://api.github.com/users/apaszke", "html_url": "https://github.com/apaszke", "followers_url": "https://api.github.com/users/apaszke/followers", "following_url": "https://api.github.com/users/apaszke/following{/other_user}", "gists_url": "https://api.github.com/users/apaszke/gists{/gist_id}", "starred_url": "https://api.github.com/users/apaszke/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/apaszke/subscriptions", "organizations_url": "https://api.github.com/users/apaszke/orgs", "repos_url": "https://api.github.com/users/apaszke/repos", "events_url": "https://api.github.com/users/apaszke/events{/privacy}", "received_events_url": "https://api.github.com/users/apaszke/received_events", "type": "User", "site_admin": false}, "body": "Actually we should put the test right next to existing code that checks `torch.from_numpy`, not `torch.tensor`. The later one copies the code, so theoretically it should handle this case just fine. The first one can't possibly handle it, because it would violate the invariant that the returned tensor shares memory.", "created_at": "2018-05-10T22:08:40Z", "updated_at": "2018-11-23T15:43:55Z", "html_url": "https://github.com/pytorch/pytorch/pull/7440#discussion_r187474122", "pull_request_url": "https://api.github.com/repos/pytorch/pytorch/pulls/7440", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/187474122"}, "html": {"href": "https://github.com/pytorch/pytorch/pull/7440#discussion_r187474122"}, "pull_request": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/7440"}}, "body_html": "<p>Actually we should put the test right next to existing code that checks <code>torch.from_numpy</code>, not <code>torch.tensor</code>. The later one copies the code, so theoretically it should handle this case just fine. The first one can't possibly handle it, because it would violate the invariant that the returned tensor shares memory.</p>", "body_text": "Actually we should put the test right next to existing code that checks torch.from_numpy, not torch.tensor. The later one copies the code, so theoretically it should handle this case just fine. The first one can't possibly handle it, because it would violate the invariant that the returned tensor shares memory.", "in_reply_to_id": 187467147}