{"url": "https://api.github.com/repos/pytorch/pytorch/issues/comments/335618253", "html_url": "https://github.com/pytorch/pytorch/pull/3054#issuecomment-335618253", "issue_url": "https://api.github.com/repos/pytorch/pytorch/issues/3054", "id": 335618253, "node_id": "MDEyOklzc3VlQ29tbWVudDMzNTYxODI1Mw==", "user": {"login": "zou3519", "id": 5652049, "node_id": "MDQ6VXNlcjU2NTIwNDk=", "avatar_url": "https://avatars3.githubusercontent.com/u/5652049?v=4", "gravatar_id": "", "url": "https://api.github.com/users/zou3519", "html_url": "https://github.com/zou3519", "followers_url": "https://api.github.com/users/zou3519/followers", "following_url": "https://api.github.com/users/zou3519/following{/other_user}", "gists_url": "https://api.github.com/users/zou3519/gists{/gist_id}", "starred_url": "https://api.github.com/users/zou3519/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/zou3519/subscriptions", "organizations_url": "https://api.github.com/users/zou3519/orgs", "repos_url": "https://api.github.com/users/zou3519/repos", "events_url": "https://api.github.com/users/zou3519/events{/privacy}", "received_events_url": "https://api.github.com/users/zou3519/received_events", "type": "User", "site_admin": false}, "created_at": "2017-10-10T21:47:31Z", "updated_at": "2017-10-10T21:47:31Z", "author_association": "CONTRIBUTOR", "body_html": "<p>Thanks for the clarification, that makes sense. I'll move the applicable memcpy's to use the default stream.</p>\n<p>Should the memcpy's still be synchronous with respect to the host (ie, I would change each <code>cudaMemcpy</code> to a <code>cudaMemcpyAsync</code> + <code>cudaSynchronizeStream(stream)</code> call)? I'm thinking yes because it would be slightly awkward for someone to do the following:</p>\n<pre><code>x = x.cuda()  # some tensor\nsome_tensor_op(x)\nprint(x)  # copies device to host\n</code></pre>\n<p>and realize they need to synchronize the stream they're using manually before right before the print statement.</p>", "body_text": "Thanks for the clarification, that makes sense. I'll move the applicable memcpy's to use the default stream.\nShould the memcpy's still be synchronous with respect to the host (ie, I would change each cudaMemcpy to a cudaMemcpyAsync + cudaSynchronizeStream(stream) call)? I'm thinking yes because it would be slightly awkward for someone to do the following:\nx = x.cuda()  # some tensor\nsome_tensor_op(x)\nprint(x)  # copies device to host\n\nand realize they need to synchronize the stream they're using manually before right before the print statement.", "body": "Thanks for the clarification, that makes sense. I'll move the applicable memcpy's to use the default stream.\r\n\r\nShould the memcpy's still be synchronous with respect to the host (ie, I would change each `cudaMemcpy` to a `cudaMemcpyAsync` + `cudaSynchronizeStream(stream)` call)? I'm thinking yes because it would be slightly awkward for someone to do the following:\r\n```\r\nx = x.cuda()  # some tensor\r\nsome_tensor_op(x)\r\nprint(x)  # copies device to host\r\n```\r\nand realize they need to synchronize the stream they're using manually before right before the print statement."}