{"url": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/203167659", "pull_request_review_id": 138005412, "id": 203167659, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwMzE2NzY1OQ==", "diff_hunk": "@@ -339,6 +339,45 @@ def test_clone(self):\n         y = x.clone()\n         self.assertTrue(y.is_coalesced())\n \n+    def test_S_to_S_copy_(self):\n+        expected_output = torch.tensor([3., 4., 5.])\n+        copy_src = torch.sparse.FloatTensor(\n+            torch.LongTensor([[0], [1], [2]]).t(),\n+            torch.FloatTensor([3, 4, 5]),\n+            torch.Size([3]))\n+\n+        if self.is_cuda:\n+            input = torch.cuda.sparse.FloatTensor(\n+                torch.LongTensor([[0], [1], [2]]).transpose(1, 0).cuda(),\n+                torch.FloatTensor([1, 1, 1]).cuda(),\n+                torch.Size([3]))\n+        else:\n+            input = torch.sparse.FloatTensor(\n+                torch.LongTensor([[0], [1], [2]]).transpose(1, 0),\n+                torch.FloatTensor([1, 1, 1]),\n+                torch.Size([3]))\n+\n+        # test copy and non_blocking\n+        input.copy_(copy_src, non_blocking=True)\n+        self.assertEqual(expected_output, input.to_dense())\n+\n+        # test type conversion\n+        input_dtype = input.dtype\n+        copy_src = torch.sparse.DoubleTensor(\n+            torch.LongTensor([[0], [1], [2]]).t(),\n+            torch.DoubleTensor([3, 4, 5]),\n+            torch.Size([3]))\n+        input.copy_(copy_src, non_blocking=True)\n+        self.assertEqual(input_dtype, input.dtype)\n+        self.assertEqual(expected_output, input.to_dense())\n+\n+        # test no broadcast", "path": "test/test_sparse.py", "position": 24, "original_position": 36, "commit_id": "73754a9bebe746a9c9ae429841f3e2f6a5aee0c2", "original_commit_id": "90dea26d6903c401280b443be9f33a36da2d27c1", "user": {"login": "weiyangfb", "id": 38509346, "node_id": "MDQ6VXNlcjM4NTA5MzQ2", "avatar_url": "https://avatars1.githubusercontent.com/u/38509346?v=4", "gravatar_id": "", "url": "https://api.github.com/users/weiyangfb", "html_url": "https://github.com/weiyangfb", "followers_url": "https://api.github.com/users/weiyangfb/followers", "following_url": "https://api.github.com/users/weiyangfb/following{/other_user}", "gists_url": "https://api.github.com/users/weiyangfb/gists{/gist_id}", "starred_url": "https://api.github.com/users/weiyangfb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/weiyangfb/subscriptions", "organizations_url": "https://api.github.com/users/weiyangfb/orgs", "repos_url": "https://api.github.com/users/weiyangfb/repos", "events_url": "https://api.github.com/users/weiyangfb/events{/privacy}", "received_events_url": "https://api.github.com/users/weiyangfb/received_events", "type": "User", "site_admin": false}, "body": "I think I was assuring copy_() is not broadcast-able in sparse, as opposed to in dense.", "created_at": "2018-07-17T20:30:45Z", "updated_at": "2018-11-23T15:47:35Z", "html_url": "https://github.com/pytorch/pytorch/pull/9005#discussion_r203167659", "pull_request_url": "https://api.github.com/repos/pytorch/pytorch/pulls/9005", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/203167659"}, "html": {"href": "https://github.com/pytorch/pytorch/pull/9005#discussion_r203167659"}, "pull_request": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/9005"}}, "body_html": "<p>I think I was assuring copy_() is not broadcast-able in sparse, as opposed to in dense.</p>", "body_text": "I think I was assuring copy_() is not broadcast-able in sparse, as opposed to in dense.", "in_reply_to_id": 203136994}