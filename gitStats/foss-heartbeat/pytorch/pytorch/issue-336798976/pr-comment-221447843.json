{"url": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/221447843", "pull_request_review_id": 160102466, "id": 221447843, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIyMTQ0Nzg0Mw==", "diff_hunk": "@@ -28,19 +29,11 @@ Tensor TypeDefault::copy(const Tensor & src, bool non_blocking, optional<Device>\n     device_guard.set_index(to_device.value().index());\n   }\n   AT_CHECK(src.defined(), \"attempt to copy an undefined tensor\");\n-  if (is_sparse()) {\n-    auto indices = src._indices();\n-    auto values = src._values();\n-    auto & this_dense = toBackend(is_cuda() ? Backend::CUDA : Backend::CPU);\n-    auto & this_dense_idx = this_dense.toScalarType(ScalarType::Long);\n-    auto indices_copy = this_dense_idx.copy(indices, non_blocking);\n-    auto values_copy = this_dense.copy(values, non_blocking);\n-    return _sparse_coo_tensor_unsafe(indices_copy, values_copy, src.sizes());\n-  } else {\n-    Tensor r = this->tensor(src.sizes());\n-    r.copy_(src, non_blocking);\n-    return r;\n-  }\n+  Tensor r;\n+  if (is_sparse()) r = this->native_tensor();", "path": "aten/src/ATen/templates/TypeDefault.cpp", "position": 28, "original_position": 28, "commit_id": "73754a9bebe746a9c9ae429841f3e2f6a5aee0c2", "original_commit_id": "c9e4de22d67a7546714a1b68882e7dcf509271a3", "user": {"login": "weiyangfb", "id": 38509346, "node_id": "MDQ6VXNlcjM4NTA5MzQ2", "avatar_url": "https://avatars1.githubusercontent.com/u/38509346?v=4", "gravatar_id": "", "url": "https://api.github.com/users/weiyangfb", "html_url": "https://github.com/weiyangfb", "followers_url": "https://api.github.com/users/weiyangfb/followers", "following_url": "https://api.github.com/users/weiyangfb/following{/other_user}", "gists_url": "https://api.github.com/users/weiyangfb/gists{/gist_id}", "starred_url": "https://api.github.com/users/weiyangfb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/weiyangfb/subscriptions", "organizations_url": "https://api.github.com/users/weiyangfb/orgs", "repos_url": "https://api.github.com/users/weiyangfb/repos", "events_url": "https://api.github.com/users/weiyangfb/events{/privacy}", "received_events_url": "https://api.github.com/users/weiyangfb/received_events", "type": "User", "site_admin": false}, "body": "yes, that would be my closest guess, ref from here: https://github.com/pytorch/pytorch/blob/40aa212cd65c2852d35ce3e43c731d63599aefbb/aten/src/ATen/native/sparse/SparseTensor.cpp#L61-L72", "created_at": "2018-09-30T05:23:32Z", "updated_at": "2018-11-23T15:52:10Z", "html_url": "https://github.com/pytorch/pytorch/pull/9005#discussion_r221447843", "pull_request_url": "https://api.github.com/repos/pytorch/pytorch/pulls/9005", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/221447843"}, "html": {"href": "https://github.com/pytorch/pytorch/pull/9005#discussion_r221447843"}, "pull_request": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/9005"}}, "body_html": "<p>yes, that would be my closest guess, ref from here: <div class=\"border rounded-1 my-2\">\n  <div class=\"f6 px-3 py-2 lh-condensed border-bottom bg-gray-light\">\n    <p class=\"mb-0 text-bold\">\n      <a href=\"https://github.com/pytorch/pytorch/blob/40aa212cd65c2852d35ce3e43c731d63599aefbb/aten/src/ATen/native/sparse/SparseTensor.cpp#L61-L72\">pytorch/aten/src/ATen/native/sparse/SparseTensor.cpp</a>\n    </p>\n    <p class=\"mb-0 text-gray-light\">\n        Lines 61 to 72\n      in\n      <a data-pjax=\"true\" class=\"commit-tease-sha\" href=\"/pytorch/pytorch/commit/40aa212cd65c2852d35ce3e43c731d63599aefbb\">40aa212</a>\n    </p>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper blob-wrapper-embedded data\">\n    <table class=\"highlight tab-size mb-0 js-file-line-container\" data-tab-size=\"8\">\n\n        <tbody><tr class=\"border-0\">\n          <td id=\"L61\" class=\"blob-num border-0 px-3 py-0 bg-white js-line-number\" data-line-number=\"61\"></td>\n          <td id=\"LC61\" class=\"blob-code border-0 px-3 py-0 bg-white blob-code-inner js-file-line\"> SparseTensor <span class=\"pl-en\">new_sparse</span>(<span class=\"pl-k\">const</span> SparseType&amp; dtype) { </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L62\" class=\"blob-num border-0 px-3 py-0 bg-white js-line-number\" data-line-number=\"62\"></td>\n          <td id=\"LC62\" class=\"blob-code border-0 px-3 py-0 bg-white blob-code-inner js-file-line\">   <span class=\"pl-c1\">AT_ASSERT</span>(!dtype.<span class=\"pl-c1\">is_undefined</span>()); </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L63\" class=\"blob-num border-0 px-3 py-0 bg-white js-line-number\" data-line-number=\"63\"></td>\n          <td id=\"LC63\" class=\"blob-code border-0 px-3 py-0 bg-white blob-code-inner js-file-line\">   <span class=\"pl-c1\">AT_ASSERT</span>(!dtype.<span class=\"pl-c1\">is_variable</span>()); </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L64\" class=\"blob-num border-0 px-3 py-0 bg-white js-line-number\" data-line-number=\"64\"></td>\n          <td id=\"LC64\" class=\"blob-code border-0 px-3 py-0 bg-white blob-code-inner js-file-line\">   <span class=\"pl-c1\">AT_ASSERT</span>(dtype.<span class=\"pl-c1\">is_sparse</span>()); </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L65\" class=\"blob-num border-0 px-3 py-0 bg-white js-line-number\" data-line-number=\"65\"></td>\n          <td id=\"LC65\" class=\"blob-code border-0 px-3 py-0 bg-white blob-code-inner js-file-line\">   TensorTypeId type_id; </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L66\" class=\"blob-num border-0 px-3 py-0 bg-white js-line-number\" data-line-number=\"66\"></td>\n          <td id=\"LC66\" class=\"blob-code border-0 px-3 py-0 bg-white blob-code-inner js-file-line\">   <span class=\"pl-k\">if</span> (dtype.<span class=\"pl-c1\">is_cuda</span>()) { </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L67\" class=\"blob-num border-0 px-3 py-0 bg-white js-line-number\" data-line-number=\"67\"></td>\n          <td id=\"LC67\" class=\"blob-code border-0 px-3 py-0 bg-white blob-code-inner js-file-line\">     type_id = <span class=\"pl-c1\">SparseCUDATensorId</span>(); </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L68\" class=\"blob-num border-0 px-3 py-0 bg-white js-line-number\" data-line-number=\"68\"></td>\n          <td id=\"LC68\" class=\"blob-code border-0 px-3 py-0 bg-white blob-code-inner js-file-line\">   } <span class=\"pl-k\">else</span> { </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L69\" class=\"blob-num border-0 px-3 py-0 bg-white js-line-number\" data-line-number=\"69\"></td>\n          <td id=\"LC69\" class=\"blob-code border-0 px-3 py-0 bg-white blob-code-inner js-file-line\">     type_id = <span class=\"pl-c1\">SparseCPUTensorId</span>(); </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L70\" class=\"blob-num border-0 px-3 py-0 bg-white js-line-number\" data-line-number=\"70\"></td>\n          <td id=\"LC70\" class=\"blob-code border-0 px-3 py-0 bg-white blob-code-inner js-file-line\">   } </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L71\" class=\"blob-num border-0 px-3 py-0 bg-white js-line-number\" data-line-number=\"71\"></td>\n          <td id=\"LC71\" class=\"blob-code border-0 px-3 py-0 bg-white blob-code-inner js-file-line\">   <span class=\"pl-k\">return</span> <span class=\"pl-c1\">SparseTensor</span>(c10::make_intrusive&lt;SparseTensorImpl&gt;(type_id, <span class=\"pl-c1\">scalarTypeToTypeMeta</span>(dtype.<span class=\"pl-c1\">scalarType</span>()))); </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L72\" class=\"blob-num border-0 px-3 py-0 bg-white js-line-number\" data-line-number=\"72\"></td>\n          <td id=\"LC72\" class=\"blob-code border-0 px-3 py-0 bg-white blob-code-inner js-file-line\"> } </td>\n        </tr>\n    </tbody></table>\n  </div>\n</div>\n</p>", "body_text": "yes, that would be my closest guess, ref from here: \n  \n    \n      pytorch/aten/src/ATen/native/sparse/SparseTensor.cpp\n    \n    \n        Lines 61 to 72\n      in\n      40aa212\n    \n    \n    \n    \n\n        \n          \n           SparseTensor new_sparse(const SparseType& dtype) { \n        \n\n        \n          \n             AT_ASSERT(!dtype.is_undefined()); \n        \n\n        \n          \n             AT_ASSERT(!dtype.is_variable()); \n        \n\n        \n          \n             AT_ASSERT(dtype.is_sparse()); \n        \n\n        \n          \n             TensorTypeId type_id; \n        \n\n        \n          \n             if (dtype.is_cuda()) { \n        \n\n        \n          \n               type_id = SparseCUDATensorId(); \n        \n\n        \n          \n             } else { \n        \n\n        \n          \n               type_id = SparseCPUTensorId(); \n        \n\n        \n          \n             } \n        \n\n        \n          \n             return SparseTensor(c10::make_intrusive<SparseTensorImpl>(type_id, scalarTypeToTypeMeta(dtype.scalarType()))); \n        \n\n        \n          \n           }", "in_reply_to_id": 221143927}