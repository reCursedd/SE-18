{"url": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/199267040", "pull_request_review_id": 133361031, "id": 199267040, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5OTI2NzA0MA==", "diff_hunk": "@@ -1772,8 +1774,7 @@\n     SparseCPU: hspmm_sparse_cpu\n     SparseCUDA: hspmm_sparse_cuda\n \n-# This \"raw copy\" doesn't handle conversions NOR does it handle non-blocking.\n-- func: raw_copy_sparse_(Tensor self, Tensor src) -> Tensor\n+- func: raw_copy_sparse_(Tensor self, Tensor src, bool non_blocking=false) -> Tensor", "path": "aten/src/ATen/native/native_functions.yaml", "position": null, "original_position": 15, "commit_id": "73754a9bebe746a9c9ae429841f3e2f6a5aee0c2", "original_commit_id": "83e626d53e4340807e4649de2e3e06a0b0dfaf92", "user": {"login": "weiyangfb", "id": 38509346, "node_id": "MDQ6VXNlcjM4NTA5MzQ2", "avatar_url": "https://avatars1.githubusercontent.com/u/38509346?v=4", "gravatar_id": "", "url": "https://api.github.com/users/weiyangfb", "html_url": "https://github.com/weiyangfb", "followers_url": "https://api.github.com/users/weiyangfb/followers", "following_url": "https://api.github.com/users/weiyangfb/following{/other_user}", "gists_url": "https://api.github.com/users/weiyangfb/gists{/gist_id}", "starred_url": "https://api.github.com/users/weiyangfb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/weiyangfb/subscriptions", "organizations_url": "https://api.github.com/users/weiyangfb/orgs", "repos_url": "https://api.github.com/users/weiyangfb/repos", "events_url": "https://api.github.com/users/weiyangfb/events{/privacy}", "received_events_url": "https://api.github.com/users/weiyangfb/received_events", "type": "User", "site_admin": false}, "body": "So what is the expected output after type conversions here? For instance, in dense tensor, when copy a FloatTensor to DoubleTensor, all values in FloatTensor will cast Float to Double. \r\n```\r\nx = torch.tensor([1., 1.], dtype=torch.float32)\r\ny = torch.tensor([2., 2.], dtype=torch.float64)\r\ny.copy_(x)\r\nprint(y, y.dtype)\r\n---------------\r\n(tensor([1., 1.], dtype=torch.float64), torch.float64)\r\n```\r\nAnd this also holds for sparse tensor. `raw_copy_sparse_ ` should have already served this purpose I guess?", "created_at": "2018-06-29T20:03:18Z", "updated_at": "2018-11-23T15:46:35Z", "html_url": "https://github.com/pytorch/pytorch/pull/9005#discussion_r199267040", "pull_request_url": "https://api.github.com/repos/pytorch/pytorch/pulls/9005", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/199267040"}, "html": {"href": "https://github.com/pytorch/pytorch/pull/9005#discussion_r199267040"}, "pull_request": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/9005"}}, "body_html": "<p>So what is the expected output after type conversions here? For instance, in dense tensor, when copy a FloatTensor to DoubleTensor, all values in FloatTensor will cast Float to Double.</p>\n<pre><code>x = torch.tensor([1., 1.], dtype=torch.float32)\ny = torch.tensor([2., 2.], dtype=torch.float64)\ny.copy_(x)\nprint(y, y.dtype)\n---------------\n(tensor([1., 1.], dtype=torch.float64), torch.float64)\n</code></pre>\n<p>And this also holds for sparse tensor. <code>raw_copy_sparse_ </code> should have already served this purpose I guess?</p>", "body_text": "So what is the expected output after type conversions here? For instance, in dense tensor, when copy a FloatTensor to DoubleTensor, all values in FloatTensor will cast Float to Double.\nx = torch.tensor([1., 1.], dtype=torch.float32)\ny = torch.tensor([2., 2.], dtype=torch.float64)\ny.copy_(x)\nprint(y, y.dtype)\n---------------\n(tensor([1., 1.], dtype=torch.float64), torch.float64)\n\nAnd this also holds for sparse tensor. raw_copy_sparse_  should have already served this purpose I guess?", "in_reply_to_id": 199042424}