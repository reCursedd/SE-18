{"url": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/207683696", "pull_request_review_id": 143354377, "id": 207683696, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwNzY4MzY5Ng==", "diff_hunk": "@@ -244,11 +244,11 @@ Tensor sparse_to_dense(const SparseTensor& self) {\n   return dst.add_(self);\n }\n \n-SparseTensor& copy_sparse_(SparseTensor& self, const SparseTensor& src) {\n+SparseTensor& copy_sparse_(SparseTensor& self, const SparseTensor& src, bool non_blocking) {", "path": "aten/src/ATen/native/sparse/SparseTensor.cpp", "position": 14, "original_position": 14, "commit_id": "73754a9bebe746a9c9ae429841f3e2f6a5aee0c2", "original_commit_id": "8fb8fba69d154f36c7a2f73c8c41f313e2d0c8de", "user": {"login": "weiyangfb", "id": 38509346, "node_id": "MDQ6VXNlcjM4NTA5MzQ2", "avatar_url": "https://avatars1.githubusercontent.com/u/38509346?v=4", "gravatar_id": "", "url": "https://api.github.com/users/weiyangfb", "html_url": "https://github.com/weiyangfb", "followers_url": "https://api.github.com/users/weiyangfb/followers", "following_url": "https://api.github.com/users/weiyangfb/following{/other_user}", "gists_url": "https://api.github.com/users/weiyangfb/gists{/gist_id}", "starred_url": "https://api.github.com/users/weiyangfb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/weiyangfb/subscriptions", "organizations_url": "https://api.github.com/users/weiyangfb/orgs", "repos_url": "https://api.github.com/users/weiyangfb/repos", "events_url": "https://api.github.com/users/weiyangfb/events{/privacy}", "received_events_url": "https://api.github.com/users/weiyangfb/received_events", "type": "User", "site_admin": false}, "body": "Yes, this works:\r\n```\r\ni = torch.LongTensor([[0, 2], [1, 0], [1, 2]]).t()\r\nv = torch.FloatTensor([3, 4, 5])\r\nsize = torch.Size([2,3])\r\nx = torch.sparse_coo_tensor(i, torch.ones_like(v), size, device=torch.device('cuda:0'))\r\nx2 = torch.sparse_coo_tensor(i, v, size, requires_grad=True, device=torch.device('cuda:1'))\r\nx.copy_(x2)\r\n#####################\r\ntorch.cuda.sparse.FloatTensor of size (2,3) with indices:\r\ntensor([[0, 1, 1],\r\n        [2, 0, 2]], device='cuda:0', grad_fn=<Error>)\r\nand values:\r\ntensor([3., 4., 5.], device='cuda:0', grad_fn=<Error>)\r\n```", "created_at": "2018-08-03T22:43:53Z", "updated_at": "2018-11-23T15:48:44Z", "html_url": "https://github.com/pytorch/pytorch/pull/9005#discussion_r207683696", "pull_request_url": "https://api.github.com/repos/pytorch/pytorch/pulls/9005", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/207683696"}, "html": {"href": "https://github.com/pytorch/pytorch/pull/9005#discussion_r207683696"}, "pull_request": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/9005"}}, "body_html": "<p>Yes, this works:</p>\n<pre><code>i = torch.LongTensor([[0, 2], [1, 0], [1, 2]]).t()\nv = torch.FloatTensor([3, 4, 5])\nsize = torch.Size([2,3])\nx = torch.sparse_coo_tensor(i, torch.ones_like(v), size, device=torch.device('cuda:0'))\nx2 = torch.sparse_coo_tensor(i, v, size, requires_grad=True, device=torch.device('cuda:1'))\nx.copy_(x2)\n#####################\ntorch.cuda.sparse.FloatTensor of size (2,3) with indices:\ntensor([[0, 1, 1],\n        [2, 0, 2]], device='cuda:0', grad_fn=&lt;Error&gt;)\nand values:\ntensor([3., 4., 5.], device='cuda:0', grad_fn=&lt;Error&gt;)\n</code></pre>", "body_text": "Yes, this works:\ni = torch.LongTensor([[0, 2], [1, 0], [1, 2]]).t()\nv = torch.FloatTensor([3, 4, 5])\nsize = torch.Size([2,3])\nx = torch.sparse_coo_tensor(i, torch.ones_like(v), size, device=torch.device('cuda:0'))\nx2 = torch.sparse_coo_tensor(i, v, size, requires_grad=True, device=torch.device('cuda:1'))\nx.copy_(x2)\n#####################\ntorch.cuda.sparse.FloatTensor of size (2,3) with indices:\ntensor([[0, 1, 1],\n        [2, 0, 2]], device='cuda:0', grad_fn=<Error>)\nand values:\ntensor([3., 4., 5.], device='cuda:0', grad_fn=<Error>)", "in_reply_to_id": 207435425}