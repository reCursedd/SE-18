{"url": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/232503315", "pull_request_review_id": 173713416, "id": 232503315, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIzMjUwMzMxNQ==", "diff_hunk": "@@ -179,6 +180,24 @@ struct THCCachingAllocator\n       block = *it;\n       free_blocks.erase(it);\n     } else {\n+\n+      // Check that if device_guard is off, then we are on the correct device.\n+#ifdef DEBUG\n+      if (!device_guard) {\n+        int current_device;\n+        THCudaCheck(cudaGetDevice(&current_device));\n+        AT_ASSERTM(device == current_device,\n+            \"THCCachingAllocator::malloc: current device (\", current_device,\n+            \") does not match requested device (\", device, \") for allocations\");\n+      }\n+#endif\n+\n+      // NB: This is an optimization. If we know we are allocating on the current\n+      // device then there is no need to DeviceGuard.\n+      c10::optional<at::cuda::CUDAGuard> guard;", "path": "aten/src/THC/THCCachingAllocator.cpp", "position": null, "original_position": 52, "commit_id": "71b7bc61871238f63f2b8e5f4ac1a4a9ab71ad72", "original_commit_id": "5d07529210e9620682415433c99f0a1845e716f4", "user": {"login": "ezyang", "id": 13564, "node_id": "MDQ6VXNlcjEzNTY0", "avatar_url": "https://avatars0.githubusercontent.com/u/13564?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ezyang", "html_url": "https://github.com/ezyang", "followers_url": "https://api.github.com/users/ezyang/followers", "following_url": "https://api.github.com/users/ezyang/following{/other_user}", "gists_url": "https://api.github.com/users/ezyang/gists{/gist_id}", "starred_url": "https://api.github.com/users/ezyang/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ezyang/subscriptions", "organizations_url": "https://api.github.com/users/ezyang/orgs", "repos_url": "https://api.github.com/users/ezyang/repos", "events_url": "https://api.github.com/users/ezyang/events{/privacy}", "received_events_url": "https://api.github.com/users/ezyang/received_events", "type": "User", "site_admin": false}, "body": "Post my DeviceGuard patch, you should write `at::cuda::OptionalCUDAGuard` here now. (DeviceGuard no longer has a default constructor.)", "created_at": "2018-11-11T20:34:15Z", "updated_at": "2018-11-23T15:54:39Z", "html_url": "https://github.com/pytorch/pytorch/pull/13785#discussion_r232503315", "pull_request_url": "https://api.github.com/repos/pytorch/pytorch/pulls/13785", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/232503315"}, "html": {"href": "https://github.com/pytorch/pytorch/pull/13785#discussion_r232503315"}, "pull_request": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/13785"}}, "body_html": "<p>Post my DeviceGuard patch, you should write <code>at::cuda::OptionalCUDAGuard</code> here now. (DeviceGuard no longer has a default constructor.)</p>", "body_text": "Post my DeviceGuard patch, you should write at::cuda::OptionalCUDAGuard here now. (DeviceGuard no longer has a default constructor.)", "in_reply_to_id": 232411330}