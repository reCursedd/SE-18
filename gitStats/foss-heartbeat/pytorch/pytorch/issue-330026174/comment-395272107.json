{"url": "https://api.github.com/repos/pytorch/pytorch/issues/comments/395272107", "html_url": "https://github.com/pytorch/pytorch/issues/8212#issuecomment-395272107", "issue_url": "https://api.github.com/repos/pytorch/pytorch/issues/8212", "id": 395272107, "node_id": "MDEyOklzc3VlQ29tbWVudDM5NTI3MjEwNw==", "user": {"login": "ezyang", "id": 13564, "node_id": "MDQ6VXNlcjEzNTY0", "avatar_url": "https://avatars0.githubusercontent.com/u/13564?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ezyang", "html_url": "https://github.com/ezyang", "followers_url": "https://api.github.com/users/ezyang/followers", "following_url": "https://api.github.com/users/ezyang/following{/other_user}", "gists_url": "https://api.github.com/users/ezyang/gists{/gist_id}", "starred_url": "https://api.github.com/users/ezyang/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ezyang/subscriptions", "organizations_url": "https://api.github.com/users/ezyang/orgs", "repos_url": "https://api.github.com/users/ezyang/repos", "events_url": "https://api.github.com/users/ezyang/events{/privacy}", "received_events_url": "https://api.github.com/users/ezyang/received_events", "type": "User", "site_admin": false}, "created_at": "2018-06-07T02:24:32Z", "updated_at": "2018-06-07T02:24:32Z", "author_association": "CONTRIBUTOR", "body_html": "<p>There are two trickinesses here:</p>\n<ol>\n<li>\n<p>It's not too easy to tell if two tensors partially alias each other. We don't necessarily want to reject aliasing operations on any two tensors which are the same all together, because they may truly be disjoint and the operation safe. But if there are nontrivial strides  we will have a tough time telling if they overlap or not (solving diophantine equations). Fortunately, there is probably some simple conservative analysis that is easy to compute and will be true only if there is overlap.</p>\n</li>\n<li>\n<p>There are a lot of ops and the only way to really do this is add them to them one-by-one. But if (1) was written, I don't think there's any reason we wouldn't accept patches that tighten up the checks for some (but not necessarily) all ops. Gradual improvement, and all that.</p>\n</li>\n</ol>", "body_text": "There are two trickinesses here:\n\n\nIt's not too easy to tell if two tensors partially alias each other. We don't necessarily want to reject aliasing operations on any two tensors which are the same all together, because they may truly be disjoint and the operation safe. But if there are nontrivial strides  we will have a tough time telling if they overlap or not (solving diophantine equations). Fortunately, there is probably some simple conservative analysis that is easy to compute and will be true only if there is overlap.\n\n\nThere are a lot of ops and the only way to really do this is add them to them one-by-one. But if (1) was written, I don't think there's any reason we wouldn't accept patches that tighten up the checks for some (but not necessarily) all ops. Gradual improvement, and all that.", "body": "There are two trickinesses here:\r\n\r\n1. It's not too easy to tell if two tensors partially alias each other. We don't necessarily want to reject aliasing operations on any two tensors which are the same all together, because they may truly be disjoint and the operation safe. But if there are nontrivial strides  we will have a tough time telling if they overlap or not (solving diophantine equations). Fortunately, there is probably some simple conservative analysis that is easy to compute and will be true only if there is overlap.\r\n\r\n2. There are a lot of ops and the only way to really do this is add them to them one-by-one. But if (1) was written, I don't think there's any reason we wouldn't accept patches that tighten up the checks for some (but not necessarily) all ops. Gradual improvement, and all that."}