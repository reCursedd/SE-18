{"url": "https://api.github.com/repos/pytorch/pytorch/issues/4619", "repository_url": "https://api.github.com/repos/pytorch/pytorch", "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/4619/labels{/name}", "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/4619/comments", "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/4619/events", "html_url": "https://github.com/pytorch/pytorch/issues/4619", "id": 287961179, "node_id": "MDU6SXNzdWUyODc5NjExNzk=", "number": 4619, "title": "Autogradpp issue masterthread", "user": {"login": "ebetica", "id": 3605224, "node_id": "MDQ6VXNlcjM2MDUyMjQ=", "avatar_url": "https://avatars3.githubusercontent.com/u/3605224?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ebetica", "html_url": "https://github.com/ebetica", "followers_url": "https://api.github.com/users/ebetica/followers", "following_url": "https://api.github.com/users/ebetica/following{/other_user}", "gists_url": "https://api.github.com/users/ebetica/gists{/gist_id}", "starred_url": "https://api.github.com/users/ebetica/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ebetica/subscriptions", "organizations_url": "https://api.github.com/users/ebetica/orgs", "repos_url": "https://api.github.com/users/ebetica/repos", "events_url": "https://api.github.com/users/ebetica/events{/privacy}", "received_events_url": "https://api.github.com/users/ebetica/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 14, "created_at": "2018-01-11T23:34:07Z", "updated_at": "2018-04-30T23:11:24Z", "closed_at": "2018-04-30T23:11:24Z", "author_association": "CONTRIBUTOR", "body_html": "<ul class=\"contains-task-list\">\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\" checked=\"\"> <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load issue title\" data-id=\"278570356\" data-permission-text=\"Issue title is private\" data-url=\"https://github.com/pytorch/pytorch/issues/3971\" data-hovercard-type=\"issue\" data-hovercard-url=\"/pytorch/pytorch/issues/3971/hovercard\" href=\"https://github.com/pytorch/pytorch/issues/3971\">#3971</a> Index tensor by scalar</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\"> <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load issue title\" data-id=\"278523750\" data-permission-text=\"Issue title is private\" data-url=\"https://github.com/pytorch/pytorch/issues/3965\" data-hovercard-type=\"issue\" data-hovercard-url=\"/pytorch/pytorch/issues/3965/hovercard\" href=\"https://github.com/pytorch/pytorch/issues/3965\">#3965</a> at::cat to take in lists of variables</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\" checked=\"\"> <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load issue title\" data-id=\"276235907\" data-permission-text=\"Issue title is private\" data-url=\"https://github.com/pytorch/pytorch/issues/3847\" data-hovercard-type=\"issue\" data-hovercard-url=\"/pytorch/pytorch/issues/3847/hovercard\" href=\"https://github.com/pytorch/pytorch/issues/3847\">#3847</a> Implement .relu on variables</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\" checked=\"\"> Find a way to do all the max/min operations without returning a tuple. Instead of <code>std::get&lt;0&gt;(tensor.max())</code>, I want to be able to call <code>tensor.max()</code>, can be renamed to <code>maxv</code> or something...</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\" checked=\"\"> Variable.detach_() doesn't do what I think it does, after a var.detach_(), var.defined() won't be true, whereas I expect it to do the autograd detach.</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\"> Hide or rename TensorList and VariableList in ATen headers, it's too easy for people to use it without knowing that it doesn't have ownership semantics and create strange bugs in their code that are hard to debug.</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\"> engine.backwards should have an option to disable rethrowing exceptions so we can get a good stack trace on the C++ side. Most errors redirect to <a href=\"https://github.com/pytorch/pytorch/blob/b37aa2bf0e1d0fc62a7a924c0b50fe06870c1bce/torch/csrc/autograd/engine.cpp#L358\">this line</a>, which is not informative.</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\" checked=\"\"> <del>Cannot easily take the max of a Tensor and a float. I'm not sure the right way to do it, but I do it with <code>at::max(tensor, tensor.type().ones({1}) * scalar);</code></del> at::clamp_max(tensor, scalar) works</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\"> <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load issue title\" data-id=\"311417040\" data-permission-text=\"Issue title is private\" data-url=\"https://github.com/pytorch/pytorch/issues/6285\" data-hovercard-type=\"issue\" data-hovercard-url=\"/pytorch/pytorch/issues/6285/hovercard\" href=\"https://github.com/pytorch/pytorch/issues/6285\">#6285</a></li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\"> <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load issue title\" data-id=\"311417474\" data-permission-text=\"Issue title is private\" data-url=\"https://github.com/pytorch/pytorch/issues/6286\" data-hovercard-type=\"issue\" data-hovercard-url=\"/pytorch/pytorch/issues/6286/hovercard\" href=\"https://github.com/pytorch/pytorch/issues/6286\">#6286</a></li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\"> <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load issue title\" data-id=\"311419410\" data-permission-text=\"Issue title is private\" data-url=\"https://github.com/pytorch/pytorch/issues/6287\" data-hovercard-type=\"issue\" data-hovercard-url=\"/pytorch/pytorch/issues/6287/hovercard\" href=\"https://github.com/pytorch/pytorch/issues/6287\">#6287</a></li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\" checked=\"\"> <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load issue title\" data-id=\"311420689\" data-permission-text=\"Issue title is private\" data-url=\"https://github.com/pytorch/pytorch/issues/6288\" data-hovercard-type=\"issue\" data-hovercard-url=\"/pytorch/pytorch/issues/6288/hovercard\" href=\"https://github.com/pytorch/pytorch/issues/6288\">#6288</a></li>\n</ul>", "body_text": "#3971 Index tensor by scalar\n #3965 at::cat to take in lists of variables\n #3847 Implement .relu on variables\n Find a way to do all the max/min operations without returning a tuple. Instead of std::get<0>(tensor.max()), I want to be able to call tensor.max(), can be renamed to maxv or something...\n Variable.detach_() doesn't do what I think it does, after a var.detach_(), var.defined() won't be true, whereas I expect it to do the autograd detach.\n Hide or rename TensorList and VariableList in ATen headers, it's too easy for people to use it without knowing that it doesn't have ownership semantics and create strange bugs in their code that are hard to debug.\n engine.backwards should have an option to disable rethrowing exceptions so we can get a good stack trace on the C++ side. Most errors redirect to this line, which is not informative.\n Cannot easily take the max of a Tensor and a float. I'm not sure the right way to do it, but I do it with at::max(tensor, tensor.type().ones({1}) * scalar); at::clamp_max(tensor, scalar) works\n #6285\n #6286\n #6287\n #6288", "body": "- [x] #3971 Index tensor by scalar\r\n- [ ] #3965 at::cat to take in lists of variables\r\n- [x] #3847 Implement .relu on variables\r\n- [x] Find a way to do all the max/min operations without returning a tuple. Instead of `std::get<0>(tensor.max())`, I want to be able to call `tensor.max()`, can be renamed to `maxv` or something...\r\n- [x] Variable.detach_() doesn't do what I think it does, after a var.detach_(), var.defined() won't be true, whereas I expect it to do the autograd detach.\r\n- [ ] Hide or rename TensorList and VariableList in ATen headers, it's too easy for people to use it without knowing that it doesn't have ownership semantics and create strange bugs in their code that are hard to debug.\r\n- [ ] engine.backwards should have an option to disable rethrowing exceptions so we can get a good stack trace on the C++ side. Most errors redirect to [this line](https://github.com/pytorch/pytorch/blob/b37aa2bf0e1d0fc62a7a924c0b50fe06870c1bce/torch/csrc/autograd/engine.cpp#L358), which is not informative.\r\n- [x] ~~Cannot easily take the max of a Tensor and a float. I'm not sure the right way to do it, but I do it with `at::max(tensor, tensor.type().ones({1}) * scalar);`~~ at::clamp_max(tensor, scalar) works\r\n- [ ] #6285\r\n- [ ] #6286\r\n- [ ] #6287\r\n- [x] #6288"}