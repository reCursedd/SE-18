{"url": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/203018422", "pull_request_review_id": 137824443, "id": 203018422, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwMzAxODQyMg==", "diff_hunk": "@@ -0,0 +1,49 @@\n+from numbers import Number\n+import math\n+import torch\n+from torch.distributions import constraints\n+from torch.distributions.exponential import Exponential\n+from torch.distributions.transformed_distribution import TransformedDistribution\n+from torch.distributions.transforms import AffineTransform, PowerTransform\n+from torch.distributions.utils import _finfo, broadcast_all\n+from torch.distributions.gumbel import euler_constant\n+\n+\n+class Weibull(TransformedDistribution):\n+    r\"\"\"\n+    Samples from a two-parameter Weibull distribution.\n+\n+    Example:\n+\n+        >>> m = Weibull(torch.tensor([1.0]), torch.tensor([1.0]))\n+        >>> m.sample()  # sample from a Weibull distribution with scale=1, concentration=1\n+        tensor([ 0.4784])\n+\n+    Args:\n+        scale (float or Tensor): Scale parameter of distribution (lambda).\n+        concentration (float or Tensor): Concentration parameter of distribution (k/shape).\n+    \"\"\"\n+    arg_constraints = {'scale': constraints.positive, 'concentration': constraints.positive}\n+    support = constraints.positive\n+\n+    def __init__(self, scale, concentration, validate_args=None):\n+        self.scale, self.concentration = broadcast_all(scale, concentration)\n+        self.concentration_reciprocal = self.concentration.reciprocal()\n+        finfo = _finfo(self.scale)", "path": "torch/distributions/weibull.py", "position": null, "original_position": 32, "commit_id": "b85dd4803e7f166e1f2d368c18f5fb941c1e9694", "original_commit_id": "c993bc2d48d3efa7a765a60c23a7c927df6573b1", "user": {"login": "fritzo", "id": 648532, "node_id": "MDQ6VXNlcjY0ODUzMg==", "avatar_url": "https://avatars0.githubusercontent.com/u/648532?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fritzo", "html_url": "https://github.com/fritzo", "followers_url": "https://api.github.com/users/fritzo/followers", "following_url": "https://api.github.com/users/fritzo/following{/other_user}", "gists_url": "https://api.github.com/users/fritzo/gists{/gist_id}", "starred_url": "https://api.github.com/users/fritzo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fritzo/subscriptions", "organizations_url": "https://api.github.com/users/fritzo/orgs", "repos_url": "https://api.github.com/users/fritzo/repos", "events_url": "https://api.github.com/users/fritzo/events{/privacy}", "received_events_url": "https://api.github.com/users/fritzo/received_events", "type": "User", "site_admin": false}, "body": "delete this line", "created_at": "2018-07-17T13:23:44Z", "updated_at": "2018-11-23T15:47:34Z", "html_url": "https://github.com/pytorch/pytorch/pull/9454#discussion_r203018422", "pull_request_url": "https://api.github.com/repos/pytorch/pytorch/pulls/9454", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/203018422"}, "html": {"href": "https://github.com/pytorch/pytorch/pull/9454#discussion_r203018422"}, "pull_request": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/9454"}}, "body_html": "<p>delete this line</p>", "body_text": "delete this line"}