{"url": "https://api.github.com/repos/pytorch/pytorch/issues/comments/371642315", "html_url": "https://github.com/pytorch/pytorch/issues/5628#issuecomment-371642315", "issue_url": "https://api.github.com/repos/pytorch/pytorch/issues/5628", "id": 371642315, "node_id": "MDEyOklzc3VlQ29tbWVudDM3MTY0MjMxNQ==", "user": {"login": "ProGamerGov", "id": 10626398, "node_id": "MDQ6VXNlcjEwNjI2Mzk4", "avatar_url": "https://avatars1.githubusercontent.com/u/10626398?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ProGamerGov", "html_url": "https://github.com/ProGamerGov", "followers_url": "https://api.github.com/users/ProGamerGov/followers", "following_url": "https://api.github.com/users/ProGamerGov/following{/other_user}", "gists_url": "https://api.github.com/users/ProGamerGov/gists{/gist_id}", "starred_url": "https://api.github.com/users/ProGamerGov/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ProGamerGov/subscriptions", "organizations_url": "https://api.github.com/users/ProGamerGov/orgs", "repos_url": "https://api.github.com/users/ProGamerGov/repos", "events_url": "https://api.github.com/users/ProGamerGov/events{/privacy}", "received_events_url": "https://api.github.com/users/ProGamerGov/received_events", "type": "User", "site_admin": false}, "created_at": "2018-03-08T22:12:09Z", "updated_at": "2018-03-08T22:12:09Z", "author_association": "NONE", "body_html": "<p><a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=5674597\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/SsnL\">@SsnL</a></p>\n<p>Trying to replicate:</p>\n<p><code>  self.gradInput:resize(C, H * W):mm(gradOutput, x_flat)</code></p>\n<p>With:</p>\n<pre><code>self.gradInput.resize_(C, H * W).mm(gradOutput, x_flat)\n</code></pre>\n<p>Or:</p>\n<pre><code>self.gradInput.resize_(C, H * W)\n\nself.gradInput = mm(gradOutput, x_flat, out=self.gradInput)\n</code></pre>\n<p>Results in either:</p>\n<pre><code>    self.gradInput.resize_(C, H * W).mm(gradOutput, x_flat)\nTypeError: mm() takes 1 positional argument but 2 were given\n</code></pre>\n<p>Or:</p>\n<pre><code>    self.gradInput = torch.mm(gradOutput, x_flat) #, out=self.gradInput\nRuntimeError: matrices expected, got 3D, 2D tensors at /home/ubuntu/pytorch/aten/src/TH/generic/THTensorMath.c:1944\n</code></pre>\n<p>The latter of which I can't seem to figure out how to solve.</p>", "body_text": "@SsnL\nTrying to replicate:\n  self.gradInput:resize(C, H * W):mm(gradOutput, x_flat)\nWith:\nself.gradInput.resize_(C, H * W).mm(gradOutput, x_flat)\n\nOr:\nself.gradInput.resize_(C, H * W)\n\nself.gradInput = mm(gradOutput, x_flat, out=self.gradInput)\n\nResults in either:\n    self.gradInput.resize_(C, H * W).mm(gradOutput, x_flat)\nTypeError: mm() takes 1 positional argument but 2 were given\n\nOr:\n    self.gradInput = torch.mm(gradOutput, x_flat) #, out=self.gradInput\nRuntimeError: matrices expected, got 3D, 2D tensors at /home/ubuntu/pytorch/aten/src/TH/generic/THTensorMath.c:1944\n\nThe latter of which I can't seem to figure out how to solve.", "body": "@SsnL \r\n\r\nTrying to replicate: \r\n\r\n`  self.gradInput:resize(C, H * W):mm(gradOutput, x_flat)`\r\n\r\nWith: \r\n\r\n```\r\nself.gradInput.resize_(C, H * W).mm(gradOutput, x_flat)\r\n```\r\n\r\nOr:\r\n\r\n```\r\nself.gradInput.resize_(C, H * W)\r\n\r\nself.gradInput = mm(gradOutput, x_flat, out=self.gradInput)\r\n```\r\n\r\nResults in either:\r\n\r\n```\r\n    self.gradInput.resize_(C, H * W).mm(gradOutput, x_flat)\r\nTypeError: mm() takes 1 positional argument but 2 were given\r\n```\r\n\r\nOr: \r\n\r\n\r\n```\r\n    self.gradInput = torch.mm(gradOutput, x_flat) #, out=self.gradInput\r\nRuntimeError: matrices expected, got 3D, 2D tensors at /home/ubuntu/pytorch/aten/src/TH/generic/THTensorMath.c:1944\r\n```\r\n\r\nThe latter of which I can't seem to figure out how to solve. \r\n \r\n\r\n"}