{"url": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/204009606", "pull_request_review_id": 139014588, "id": 204009606, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwNDAwOTYwNg==", "diff_hunk": "@@ -403,3 +404,36 @@ def argmin(input, dim=None, keepdim=False):\n     if dim is None:\n         return torch._argmin(input.contiguous().view(-1), dim=0, keepdim=False)\n     return torch._argmin(input, dim, keepdim)\n+\n+\n+def argsort(input, dim=None, descending=False):\n+    \"\"\"Returns the indices that sort a tensor along a given dimension in ascending\n+    order by value.\n+\n+    This is the second value returned by :meth:`torch.sort`.  See its documentation\n+    for the exact semantics of this method.\n+\n+    Args:\n+        input (Tensor): the input tensor\n+        dim (int, optional): the dimension to sort along\n+        descending (bool, optional): controls the sorting order (ascending or descending)\n+\n+    Example::\n+\n+        >>> a = torch.randn(4, 4)\n+        >>> a\n+        tensor([[ 0.0785,  1.5267, -0.8521,  0.4065],\n+                [ 0.1598,  0.0788, -0.0745, -1.2700],\n+                [ 1.2208,  1.0722, -0.7064,  1.2564],\n+                [ 0.0669, -0.2318, -0.8229, -0.9280]])\n+\n+\n+        >>> torch.argsort(a, dim=1)\n+        tensor([[2, 0, 3, 1],\n+                [3, 2, 1, 0],\n+                [2, 1, 0, 3],\n+                [3, 2, 1, 0]])\n+    \"\"\"\n+    if dim is None:\n+        return torch.sort(input, input.dim() - 1, descending)[1]", "path": "torch/functional.py", "position": null, "original_position": 43, "commit_id": "ab7d389eebf6436a7930d18d8da02ab91dd008fe", "original_commit_id": "ddb510857ceb5226b2e5e68f3f17c9ecd2b7c5b6", "user": {"login": "vadimkantorov", "id": 1041752, "node_id": "MDQ6VXNlcjEwNDE3NTI=", "avatar_url": "https://avatars0.githubusercontent.com/u/1041752?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vadimkantorov", "html_url": "https://github.com/vadimkantorov", "followers_url": "https://api.github.com/users/vadimkantorov/followers", "following_url": "https://api.github.com/users/vadimkantorov/following{/other_user}", "gists_url": "https://api.github.com/users/vadimkantorov/gists{/gist_id}", "starred_url": "https://api.github.com/users/vadimkantorov/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vadimkantorov/subscriptions", "organizations_url": "https://api.github.com/users/vadimkantorov/orgs", "repos_url": "https://api.github.com/users/vadimkantorov/repos", "events_url": "https://api.github.com/users/vadimkantorov/events{/privacy}", "received_events_url": "https://api.github.com/users/vadimkantorov/received_events", "type": "User", "site_admin": false}, "body": "`input.dim() - 1` can be just `-1` (more idiomatic)?", "created_at": "2018-07-20T11:03:35Z", "updated_at": "2018-11-23T15:47:46Z", "html_url": "https://github.com/pytorch/pytorch/pull/9600#discussion_r204009606", "pull_request_url": "https://api.github.com/repos/pytorch/pytorch/pulls/9600", "author_association": "NONE", "_links": {"self": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/204009606"}, "html": {"href": "https://github.com/pytorch/pytorch/pull/9600#discussion_r204009606"}, "pull_request": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/9600"}}, "body_html": "<p><code>input.dim() - 1</code> can be just <code>-1</code> (more idiomatic)?</p>", "body_text": "input.dim() - 1 can be just -1 (more idiomatic)?"}