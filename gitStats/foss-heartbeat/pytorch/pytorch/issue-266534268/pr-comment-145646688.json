{"url": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/145646688", "pull_request_review_id": 70453435, "id": 145646688, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE0NTY0NjY4OA==", "diff_hunk": "@@ -233,4 +253,24 @@ inline bool VariableFlags::verify(const Variable& var) {\n   return !was_null && requires_grad == var.requires_grad() && is_volatile == var.is_volatile();\n }\n \n+Node* recordTraceWorker(std::string op, at::ArrayRef<Variable> inputs, at::ArrayRef<Variable> outputs);\n+\n+inline Node* recordTrace(std::string op, std::initializer_list<Variable> inputs, const Variable& output) {\n+  return recordTraceWorker(op, inputs, {output});\n+}\n+inline Node* recordTrace(std::string op, std::initializer_list<Variable> inputs, const std::tuple<Variable, Variable>& outputs) {\n+  return recordTraceWorker(op, inputs, {std::get<0>(outputs), std::get<1>(outputs)});\n+}\n+inline Node* recordTrace(std::string op, std::initializer_list<Variable> inputs, const std::tuple<Variable, Variable, Variable>& outputs) {\n+  return recordTraceWorker(op, inputs, {std::get<0>(outputs), std::get<1>(outputs), std::get<2>(outputs)});\n+}\n+inline Node* recordTrace(std::string op, std::initializer_list<Variable> inputs, at::TensorList& outputs) {\n+  // TODO: Eliminate the intermediate vector allocation\n+  return recordTraceWorker(op, inputs, std::vector<Variable>(outputs.begin(), outputs.end()));\n+}\n+inline Node* recordTrace(std::string op, at::TensorList inputs, const Variable& output) {\n+  // TODO: Eliminate the intermediate vector allocation\n+  return recordTraceWorker(op, std::vector<Variable>(inputs.begin(), inputs.end()), {output});", "path": "torch/csrc/jit/tracer.h", "position": 57, "original_position": 57, "commit_id": "86c9ea260bff743162df1c07d673bb6039fb424d", "original_commit_id": "2c8d829ca36179d8d2ab55d2c0fa5dafaf987946", "user": {"login": "apaszke", "id": 4583066, "node_id": "MDQ6VXNlcjQ1ODMwNjY=", "avatar_url": "https://avatars3.githubusercontent.com/u/4583066?v=4", "gravatar_id": "", "url": "https://api.github.com/users/apaszke", "html_url": "https://github.com/apaszke", "followers_url": "https://api.github.com/users/apaszke/followers", "following_url": "https://api.github.com/users/apaszke/following{/other_user}", "gists_url": "https://api.github.com/users/apaszke/gists{/gist_id}", "starred_url": "https://api.github.com/users/apaszke/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/apaszke/subscriptions", "organizations_url": "https://api.github.com/users/apaszke/orgs", "repos_url": "https://api.github.com/users/apaszke/repos", "events_url": "https://api.github.com/users/apaszke/events{/privacy}", "received_events_url": "https://api.github.com/users/apaszke/received_events", "type": "User", "site_admin": false}, "body": "nit: `std::vector<Variable>` is `variable_list`", "created_at": "2017-10-19T09:34:10Z", "updated_at": "2018-11-23T15:35:27Z", "html_url": "https://github.com/pytorch/pytorch/pull/3160#discussion_r145646688", "pull_request_url": "https://api.github.com/repos/pytorch/pytorch/pulls/3160", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/145646688"}, "html": {"href": "https://github.com/pytorch/pytorch/pull/3160#discussion_r145646688"}, "pull_request": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/3160"}}, "body_html": "<p>nit: <code>std::vector&lt;Variable&gt;</code> is <code>variable_list</code></p>", "body_text": "nit: std::vector<Variable> is variable_list"}