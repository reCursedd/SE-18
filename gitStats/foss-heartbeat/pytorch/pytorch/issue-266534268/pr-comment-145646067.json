{"url": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/145646067", "pull_request_review_id": 70453435, "id": 145646067, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE0NTY0NjA2Nw==", "diff_hunk": "@@ -69,6 +71,24 @@ inline bool isTracing(const variable_list& vars) {\n   return false;\n }\n \n+inline bool isTracing(const at::TensorList& vars) {\n+  for (Variable var : vars) {\n+    if (!var.defined() || !var.tracing_state()) continue;\n+    if (std::any_of(var.tracing_state()->begin(), var.tracing_state()->end(), detail::isElemActive))\n+      return true;\n+  }\n+  return false;\n+}\n+\n+inline bool isTracing(const at::ArrayRef<Variable>& vars) {\n+  for (const Variable& var : vars) {\n+    if (!var.defined() || !var.tracing_state()) continue;\n+    if (std::any_of(var.tracing_state()->begin(), var.tracing_state()->end(), detail::isElemActive))\n+      return true;\n+  }\n+  return false;\n+}", "path": "torch/csrc/jit/tracer.h", "position": 22, "original_position": 31, "commit_id": "86c9ea260bff743162df1c07d673bb6039fb424d", "original_commit_id": "2c8d829ca36179d8d2ab55d2c0fa5dafaf987946", "user": {"login": "apaszke", "id": 4583066, "node_id": "MDQ6VXNlcjQ1ODMwNjY=", "avatar_url": "https://avatars3.githubusercontent.com/u/4583066?v=4", "gravatar_id": "", "url": "https://api.github.com/users/apaszke", "html_url": "https://github.com/apaszke", "followers_url": "https://api.github.com/users/apaszke/followers", "following_url": "https://api.github.com/users/apaszke/following{/other_user}", "gists_url": "https://api.github.com/users/apaszke/gists{/gist_id}", "starred_url": "https://api.github.com/users/apaszke/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/apaszke/subscriptions", "organizations_url": "https://api.github.com/users/apaszke/orgs", "repos_url": "https://api.github.com/users/apaszke/repos", "events_url": "https://api.github.com/users/apaszke/events{/privacy}", "received_events_url": "https://api.github.com/users/apaszke/received_events", "type": "User", "site_admin": false}, "body": "I see two options to deduplicate them:\r\n1. template `isTracing` on argument type\r\n2. put the logic in an overload that gets begin and end iterators and call this from all overloads you implemented here", "created_at": "2017-10-19T09:31:35Z", "updated_at": "2018-11-23T15:35:26Z", "html_url": "https://github.com/pytorch/pytorch/pull/3160#discussion_r145646067", "pull_request_url": "https://api.github.com/repos/pytorch/pytorch/pulls/3160", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/145646067"}, "html": {"href": "https://github.com/pytorch/pytorch/pull/3160#discussion_r145646067"}, "pull_request": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/3160"}}, "body_html": "<p>I see two options to deduplicate them:</p>\n<ol>\n<li>template <code>isTracing</code> on argument type</li>\n<li>put the logic in an overload that gets begin and end iterators and call this from all overloads you implemented here</li>\n</ol>", "body_text": "I see two options to deduplicate them:\n\ntemplate isTracing on argument type\nput the logic in an overload that gets begin and end iterators and call this from all overloads you implemented here"}