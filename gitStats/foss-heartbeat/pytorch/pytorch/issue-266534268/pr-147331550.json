{"url": "https://api.github.com/repos/pytorch/pytorch/pulls/3160", "id": 147331550, "node_id": "MDExOlB1bGxSZXF1ZXN0MTQ3MzMxNTUw", "html_url": "https://github.com/pytorch/pytorch/pull/3160", "diff_url": "https://github.com/pytorch/pytorch/pull/3160.diff", "patch_url": "https://github.com/pytorch/pytorch/pull/3160.patch", "issue_url": "https://api.github.com/repos/pytorch/pytorch/issues/3160", "number": 3160, "state": "closed", "locked": false, "title": "[WIP] Tracing in ATen-style Variable class", "user": {"login": "ezyang", "id": 13564, "node_id": "MDQ6VXNlcjEzNTY0", "avatar_url": "https://avatars0.githubusercontent.com/u/13564?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ezyang", "html_url": "https://github.com/ezyang", "followers_url": "https://api.github.com/users/ezyang/followers", "following_url": "https://api.github.com/users/ezyang/following{/other_user}", "gists_url": "https://api.github.com/users/ezyang/gists{/gist_id}", "starred_url": "https://api.github.com/users/ezyang/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ezyang/subscriptions", "organizations_url": "https://api.github.com/users/ezyang/orgs", "repos_url": "https://api.github.com/users/ezyang/repos", "events_url": "https://api.github.com/users/ezyang/events{/privacy}", "received_events_url": "https://api.github.com/users/ezyang/received_events", "type": "User", "site_admin": false}, "body": "This is based off of #3136.\r\n\r\n```\r\ncommit 2c8d829ca36179d8d2ab55d2c0fa5dafaf987946\r\nAuthor: Edward Z. Yang <ezyang@fb.com>\r\nDate:   Tue Oct 17 09:49:00 2017 -0700\r\n\r\n    Add tracing to the new ATen style API.\r\n    \r\n    The generated tracing code looks like this:\r\n    \r\n        if (jit::tracer::isTracing({ self })) {\r\n          jit::Node *n = jit::tracer::recordTrace( \"mean\", { self }, ret );\r\n          n->rawSet(jit::stringToSymbol(\"dim\"), dim);\r\n          n->rawSet(jit::stringToSymbol(\"keepdim\"), keepdim);\r\n        }\r\n    \r\n    A few design decisions I made:\r\n    \r\n      - Instead of making the assignment of 'n' conditional on whether or not\r\n        attributes are present, I just add (void)n if it would not be used\r\n        otherwise.  This modestly simplifies code generation.\r\n    \r\n      - Tracing of operations that involve Generator or Storage are not supported.\r\n        This is fine because such ops don't take any Variable arguments anyway,\r\n        so they couldn't trigger tracing.\r\n    \r\n      - I added a new rawSet overloaded method to attributes.h, because it was more\r\n        convenient than writing different method names for each attribute.\r\n    \r\n      - Unfortunately, at::ArrayRef is not covariant, so there is some faffing about\r\n        to support conversions from at::ArrayRef<Tensor> (aka TensorList) to\r\n        at::ArrayRef<Variable>.  In the case of 'recordTrace' (slow path), I just\r\n        allocated an intermediate std::vector to get the types correct; in the case\r\n        of isTracing (fast path) I copy pasted the definition three times.  I'm not\r\n        terribly happy with this so I'd appreciate ways to improve it.\r\n    \r\n      - Tracing is all in one place, rather than spattered between the beginning\r\n        and end of an ATen function, as Sam suggested.\r\n    \r\n      - This commit doesn't actually enable ATen definitions.\r\n    \r\n    Signed-off-by: Edward Z. Yang <ezyang@fb.com>\r\n```\r\n\r\nIt's WIP because the ONNX path is not updated yet.", "created_at": "2017-10-18T15:21:19Z", "updated_at": "2018-11-23T15:35:32Z", "closed_at": "2017-10-19T21:42:25Z", "merged_at": null, "merge_commit_sha": "884d535bd53f9090a4e387726642de26f2f117a0", "assignee": null, "assignees": [], "requested_reviewers": [{"login": "colesbury", "id": 655866, "node_id": "MDQ6VXNlcjY1NTg2Ng==", "avatar_url": "https://avatars1.githubusercontent.com/u/655866?v=4", "gravatar_id": "", "url": "https://api.github.com/users/colesbury", "html_url": "https://github.com/colesbury", "followers_url": "https://api.github.com/users/colesbury/followers", "following_url": "https://api.github.com/users/colesbury/following{/other_user}", "gists_url": "https://api.github.com/users/colesbury/gists{/gist_id}", "starred_url": "https://api.github.com/users/colesbury/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/colesbury/subscriptions", "organizations_url": "https://api.github.com/users/colesbury/orgs", "repos_url": "https://api.github.com/users/colesbury/repos", "events_url": "https://api.github.com/users/colesbury/events{/privacy}", "received_events_url": "https://api.github.com/users/colesbury/received_events", "type": "User", "site_admin": false}, {"login": "gchanan", "id": 3768583, "node_id": "MDQ6VXNlcjM3Njg1ODM=", "avatar_url": "https://avatars2.githubusercontent.com/u/3768583?v=4", "gravatar_id": "", "url": "https://api.github.com/users/gchanan", "html_url": "https://github.com/gchanan", "followers_url": "https://api.github.com/users/gchanan/followers", "following_url": "https://api.github.com/users/gchanan/following{/other_user}", "gists_url": "https://api.github.com/users/gchanan/gists{/gist_id}", "starred_url": "https://api.github.com/users/gchanan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/gchanan/subscriptions", "organizations_url": "https://api.github.com/users/gchanan/orgs", "repos_url": "https://api.github.com/users/gchanan/repos", "events_url": "https://api.github.com/users/gchanan/events{/privacy}", "received_events_url": "https://api.github.com/users/gchanan/received_events", "type": "User", "site_admin": false}], "requested_teams": [], "labels": [], "milestone": null, "commits_url": "https://api.github.com/repos/pytorch/pytorch/pulls/3160/commits", "review_comments_url": "https://api.github.com/repos/pytorch/pytorch/pulls/3160/comments", "review_comment_url": "https://api.github.com/repos/pytorch/pytorch/pulls/comments{/number}", "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/3160/comments", "statuses_url": "https://api.github.com/repos/pytorch/pytorch/statuses/86c9ea260bff743162df1c07d673bb6039fb424d", "head": {"label": "ezyang:pr/aten-tracing", "ref": "pr/aten-tracing", "sha": "86c9ea260bff743162df1c07d673bb6039fb424d", "user": {"login": "ezyang", "id": 13564, "node_id": "MDQ6VXNlcjEzNTY0", "avatar_url": "https://avatars0.githubusercontent.com/u/13564?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ezyang", "html_url": "https://github.com/ezyang", "followers_url": "https://api.github.com/users/ezyang/followers", "following_url": "https://api.github.com/users/ezyang/following{/other_user}", "gists_url": "https://api.github.com/users/ezyang/gists{/gist_id}", "starred_url": "https://api.github.com/users/ezyang/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ezyang/subscriptions", "organizations_url": "https://api.github.com/users/ezyang/orgs", "repos_url": "https://api.github.com/users/ezyang/repos", "events_url": "https://api.github.com/users/ezyang/events{/privacy}", "received_events_url": "https://api.github.com/users/ezyang/received_events", "type": "User", "site_admin": false}, "repo": {"id": 101798885, "node_id": "MDEwOlJlcG9zaXRvcnkxMDE3OTg4ODU=", "name": "pytorch", "full_name": "ezyang/pytorch", "private": false, "owner": {"login": "ezyang", "id": 13564, "node_id": "MDQ6VXNlcjEzNTY0", "avatar_url": "https://avatars0.githubusercontent.com/u/13564?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ezyang", "html_url": "https://github.com/ezyang", "followers_url": "https://api.github.com/users/ezyang/followers", "following_url": "https://api.github.com/users/ezyang/following{/other_user}", "gists_url": "https://api.github.com/users/ezyang/gists{/gist_id}", "starred_url": "https://api.github.com/users/ezyang/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ezyang/subscriptions", "organizations_url": "https://api.github.com/users/ezyang/orgs", "repos_url": "https://api.github.com/users/ezyang/repos", "events_url": "https://api.github.com/users/ezyang/events{/privacy}", "received_events_url": "https://api.github.com/users/ezyang/received_events", "type": "User", "site_admin": false}, "html_url": "https://github.com/ezyang/pytorch", "description": "Tensors and Dynamic neural networks in Python  with strong GPU acceleration", "fork": true, "url": "https://api.github.com/repos/ezyang/pytorch", "forks_url": "https://api.github.com/repos/ezyang/pytorch/forks", "keys_url": "https://api.github.com/repos/ezyang/pytorch/keys{/key_id}", "collaborators_url": "https://api.github.com/repos/ezyang/pytorch/collaborators{/collaborator}", "teams_url": "https://api.github.com/repos/ezyang/pytorch/teams", "hooks_url": "https://api.github.com/repos/ezyang/pytorch/hooks", "issue_events_url": "https://api.github.com/repos/ezyang/pytorch/issues/events{/number}", "events_url": "https://api.github.com/repos/ezyang/pytorch/events", "assignees_url": "https://api.github.com/repos/ezyang/pytorch/assignees{/user}", "branches_url": "https://api.github.com/repos/ezyang/pytorch/branches{/branch}", "tags_url": "https://api.github.com/repos/ezyang/pytorch/tags", "blobs_url": "https://api.github.com/repos/ezyang/pytorch/git/blobs{/sha}", "git_tags_url": "https://api.github.com/repos/ezyang/pytorch/git/tags{/sha}", "git_refs_url": "https://api.github.com/repos/ezyang/pytorch/git/refs{/sha}", "trees_url": "https://api.github.com/repos/ezyang/pytorch/git/trees{/sha}", "statuses_url": "https://api.github.com/repos/ezyang/pytorch/statuses/{sha}", "languages_url": "https://api.github.com/repos/ezyang/pytorch/languages", "stargazers_url": "https://api.github.com/repos/ezyang/pytorch/stargazers", "contributors_url": "https://api.github.com/repos/ezyang/pytorch/contributors", "subscribers_url": "https://api.github.com/repos/ezyang/pytorch/subscribers", "subscription_url": "https://api.github.com/repos/ezyang/pytorch/subscription", "commits_url": "https://api.github.com/repos/ezyang/pytorch/commits{/sha}", "git_commits_url": "https://api.github.com/repos/ezyang/pytorch/git/commits{/sha}", "comments_url": "https://api.github.com/repos/ezyang/pytorch/comments{/number}", "issue_comment_url": "https://api.github.com/repos/ezyang/pytorch/issues/comments{/number}", "contents_url": "https://api.github.com/repos/ezyang/pytorch/contents/{+path}", "compare_url": "https://api.github.com/repos/ezyang/pytorch/compare/{base}...{head}", "merges_url": "https://api.github.com/repos/ezyang/pytorch/merges", "archive_url": "https://api.github.com/repos/ezyang/pytorch/{archive_format}{/ref}", "downloads_url": "https://api.github.com/repos/ezyang/pytorch/downloads", "issues_url": "https://api.github.com/repos/ezyang/pytorch/issues{/number}", "pulls_url": "https://api.github.com/repos/ezyang/pytorch/pulls{/number}", "milestones_url": "https://api.github.com/repos/ezyang/pytorch/milestones{/number}", "notifications_url": "https://api.github.com/repos/ezyang/pytorch/notifications{?since,all,participating}", "labels_url": "https://api.github.com/repos/ezyang/pytorch/labels{/name}", "releases_url": "https://api.github.com/repos/ezyang/pytorch/releases{/id}", "deployments_url": "https://api.github.com/repos/ezyang/pytorch/deployments", "created_at": "2017-08-29T19:28:39Z", "updated_at": "2018-10-29T15:06:40Z", "pushed_at": "2018-11-21T22:30:09Z", "git_url": "git://github.com/ezyang/pytorch.git", "ssh_url": "git@github.com:ezyang/pytorch.git", "clone_url": "https://github.com/ezyang/pytorch.git", "svn_url": "https://github.com/ezyang/pytorch", "homepage": "http://pytorch.org", "size": 88254, "stargazers_count": 1, "watchers_count": 1, "language": "C++", "has_issues": false, "has_projects": true, "has_downloads": true, "has_wiki": true, "has_pages": false, "forks_count": 0, "mirror_url": null, "archived": false, "open_issues_count": 2, "license": {"key": "other", "name": "Other", "spdx_id": "NOASSERTION", "url": null, "node_id": "MDc6TGljZW5zZTA="}, "forks": 0, "open_issues": 2, "watchers": 1, "default_branch": "master"}}, "base": {"label": "pytorch:master", "ref": "master", "sha": "7680601659711501be8d168ca3f76db3614fa041", "user": {"login": "pytorch", "id": 21003710, "node_id": "MDEyOk9yZ2FuaXphdGlvbjIxMDAzNzEw", "avatar_url": "https://avatars3.githubusercontent.com/u/21003710?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pytorch", "html_url": "https://github.com/pytorch", "followers_url": "https://api.github.com/users/pytorch/followers", "following_url": "https://api.github.com/users/pytorch/following{/other_user}", "gists_url": "https://api.github.com/users/pytorch/gists{/gist_id}", "starred_url": "https://api.github.com/users/pytorch/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pytorch/subscriptions", "organizations_url": "https://api.github.com/users/pytorch/orgs", "repos_url": "https://api.github.com/users/pytorch/repos", "events_url": "https://api.github.com/users/pytorch/events{/privacy}", "received_events_url": "https://api.github.com/users/pytorch/received_events", "type": "Organization", "site_admin": false}, "repo": {"id": 65600975, "node_id": "MDEwOlJlcG9zaXRvcnk2NTYwMDk3NQ==", "name": "pytorch", "full_name": "pytorch/pytorch", "private": false, "owner": {"login": "pytorch", "id": 21003710, "node_id": "MDEyOk9yZ2FuaXphdGlvbjIxMDAzNzEw", "avatar_url": "https://avatars3.githubusercontent.com/u/21003710?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pytorch", "html_url": "https://github.com/pytorch", "followers_url": "https://api.github.com/users/pytorch/followers", "following_url": "https://api.github.com/users/pytorch/following{/other_user}", "gists_url": "https://api.github.com/users/pytorch/gists{/gist_id}", "starred_url": "https://api.github.com/users/pytorch/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pytorch/subscriptions", "organizations_url": "https://api.github.com/users/pytorch/orgs", "repos_url": "https://api.github.com/users/pytorch/repos", "events_url": "https://api.github.com/users/pytorch/events{/privacy}", "received_events_url": "https://api.github.com/users/pytorch/received_events", "type": "Organization", "site_admin": false}, "html_url": "https://github.com/pytorch/pytorch", "description": "Tensors and Dynamic neural networks in Python  with strong GPU acceleration", "fork": false, "url": "https://api.github.com/repos/pytorch/pytorch", "forks_url": "https://api.github.com/repos/pytorch/pytorch/forks", "keys_url": "https://api.github.com/repos/pytorch/pytorch/keys{/key_id}", "collaborators_url": "https://api.github.com/repos/pytorch/pytorch/collaborators{/collaborator}", "teams_url": "https://api.github.com/repos/pytorch/pytorch/teams", "hooks_url": "https://api.github.com/repos/pytorch/pytorch/hooks", "issue_events_url": "https://api.github.com/repos/pytorch/pytorch/issues/events{/number}", "events_url": "https://api.github.com/repos/pytorch/pytorch/events", "assignees_url": "https://api.github.com/repos/pytorch/pytorch/assignees{/user}", "branches_url": "https://api.github.com/repos/pytorch/pytorch/branches{/branch}", "tags_url": "https://api.github.com/repos/pytorch/pytorch/tags", "blobs_url": "https://api.github.com/repos/pytorch/pytorch/git/blobs{/sha}", "git_tags_url": "https://api.github.com/repos/pytorch/pytorch/git/tags{/sha}", "git_refs_url": "https://api.github.com/repos/pytorch/pytorch/git/refs{/sha}", "trees_url": "https://api.github.com/repos/pytorch/pytorch/git/trees{/sha}", "statuses_url": "https://api.github.com/repos/pytorch/pytorch/statuses/{sha}", "languages_url": "https://api.github.com/repos/pytorch/pytorch/languages", "stargazers_url": "https://api.github.com/repos/pytorch/pytorch/stargazers", "contributors_url": "https://api.github.com/repos/pytorch/pytorch/contributors", "subscribers_url": "https://api.github.com/repos/pytorch/pytorch/subscribers", "subscription_url": "https://api.github.com/repos/pytorch/pytorch/subscription", "commits_url": "https://api.github.com/repos/pytorch/pytorch/commits{/sha}", "git_commits_url": "https://api.github.com/repos/pytorch/pytorch/git/commits{/sha}", "comments_url": "https://api.github.com/repos/pytorch/pytorch/comments{/number}", "issue_comment_url": "https://api.github.com/repos/pytorch/pytorch/issues/comments{/number}", "contents_url": "https://api.github.com/repos/pytorch/pytorch/contents/{+path}", "compare_url": "https://api.github.com/repos/pytorch/pytorch/compare/{base}...{head}", "merges_url": "https://api.github.com/repos/pytorch/pytorch/merges", "archive_url": "https://api.github.com/repos/pytorch/pytorch/{archive_format}{/ref}", "downloads_url": "https://api.github.com/repos/pytorch/pytorch/downloads", "issues_url": "https://api.github.com/repos/pytorch/pytorch/issues{/number}", "pulls_url": "https://api.github.com/repos/pytorch/pytorch/pulls{/number}", "milestones_url": "https://api.github.com/repos/pytorch/pytorch/milestones{/number}", "notifications_url": "https://api.github.com/repos/pytorch/pytorch/notifications{?since,all,participating}", "labels_url": "https://api.github.com/repos/pytorch/pytorch/labels{/name}", "releases_url": "https://api.github.com/repos/pytorch/pytorch/releases{/id}", "deployments_url": "https://api.github.com/repos/pytorch/pytorch/deployments", "created_at": "2016-08-13T05:26:41Z", "updated_at": "2018-11-24T15:34:47Z", "pushed_at": "2018-11-24T12:42:01Z", "git_url": "git://github.com/pytorch/pytorch.git", "ssh_url": "git@github.com:pytorch/pytorch.git", "clone_url": "https://github.com/pytorch/pytorch.git", "svn_url": "https://github.com/pytorch/pytorch", "homepage": "http://pytorch.org", "size": 89656, "stargazers_count": 21592, "watchers_count": 21592, "language": "C++", "has_issues": true, "has_projects": true, "has_downloads": true, "has_wiki": true, "has_pages": false, "forks_count": 5154, "mirror_url": null, "archived": false, "open_issues_count": 2196, "license": {"key": "other", "name": "Other", "spdx_id": "NOASSERTION", "url": null, "node_id": "MDc6TGljZW5zZTA="}, "forks": 5154, "open_issues": 2196, "watchers": 21592, "default_branch": "master"}}, "_links": {"self": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/3160"}, "html": {"href": "https://github.com/pytorch/pytorch/pull/3160"}, "issue": {"href": "https://api.github.com/repos/pytorch/pytorch/issues/3160"}, "comments": {"href": "https://api.github.com/repos/pytorch/pytorch/issues/3160/comments"}, "review_comments": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/3160/comments"}, "review_comment": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/comments{/number}"}, "commits": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/3160/commits"}, "statuses": {"href": "https://api.github.com/repos/pytorch/pytorch/statuses/86c9ea260bff743162df1c07d673bb6039fb424d"}}, "author_association": "CONTRIBUTOR", "body_html": "<p>This is based off of <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load issue title\" data-id=\"265877102\" data-permission-text=\"Issue title is private\" data-url=\"https://github.com/pytorch/pytorch/issues/3136\" data-hovercard-type=\"pull_request\" data-hovercard-url=\"/pytorch/pytorch/pull/3136/hovercard\" href=\"https://github.com/pytorch/pytorch/pull/3136\">#3136</a>.</p>\n<pre><code>commit 2c8d829ca36179d8d2ab55d2c0fa5dafaf987946\nAuthor: Edward Z. Yang &lt;ezyang@fb.com&gt;\nDate:   Tue Oct 17 09:49:00 2017 -0700\n\n    Add tracing to the new ATen style API.\n    \n    The generated tracing code looks like this:\n    \n        if (jit::tracer::isTracing({ self })) {\n          jit::Node *n = jit::tracer::recordTrace( \"mean\", { self }, ret );\n          n-&gt;rawSet(jit::stringToSymbol(\"dim\"), dim);\n          n-&gt;rawSet(jit::stringToSymbol(\"keepdim\"), keepdim);\n        }\n    \n    A few design decisions I made:\n    \n      - Instead of making the assignment of 'n' conditional on whether or not\n        attributes are present, I just add (void)n if it would not be used\n        otherwise.  This modestly simplifies code generation.\n    \n      - Tracing of operations that involve Generator or Storage are not supported.\n        This is fine because such ops don't take any Variable arguments anyway,\n        so they couldn't trigger tracing.\n    \n      - I added a new rawSet overloaded method to attributes.h, because it was more\n        convenient than writing different method names for each attribute.\n    \n      - Unfortunately, at::ArrayRef is not covariant, so there is some faffing about\n        to support conversions from at::ArrayRef&lt;Tensor&gt; (aka TensorList) to\n        at::ArrayRef&lt;Variable&gt;.  In the case of 'recordTrace' (slow path), I just\n        allocated an intermediate std::vector to get the types correct; in the case\n        of isTracing (fast path) I copy pasted the definition three times.  I'm not\n        terribly happy with this so I'd appreciate ways to improve it.\n    \n      - Tracing is all in one place, rather than spattered between the beginning\n        and end of an ATen function, as Sam suggested.\n    \n      - This commit doesn't actually enable ATen definitions.\n    \n    Signed-off-by: Edward Z. Yang &lt;ezyang@fb.com&gt;\n</code></pre>\n<p>It's WIP because the ONNX path is not updated yet.</p>", "body_text": "This is based off of #3136.\ncommit 2c8d829ca36179d8d2ab55d2c0fa5dafaf987946\nAuthor: Edward Z. Yang <ezyang@fb.com>\nDate:   Tue Oct 17 09:49:00 2017 -0700\n\n    Add tracing to the new ATen style API.\n    \n    The generated tracing code looks like this:\n    \n        if (jit::tracer::isTracing({ self })) {\n          jit::Node *n = jit::tracer::recordTrace( \"mean\", { self }, ret );\n          n->rawSet(jit::stringToSymbol(\"dim\"), dim);\n          n->rawSet(jit::stringToSymbol(\"keepdim\"), keepdim);\n        }\n    \n    A few design decisions I made:\n    \n      - Instead of making the assignment of 'n' conditional on whether or not\n        attributes are present, I just add (void)n if it would not be used\n        otherwise.  This modestly simplifies code generation.\n    \n      - Tracing of operations that involve Generator or Storage are not supported.\n        This is fine because such ops don't take any Variable arguments anyway,\n        so they couldn't trigger tracing.\n    \n      - I added a new rawSet overloaded method to attributes.h, because it was more\n        convenient than writing different method names for each attribute.\n    \n      - Unfortunately, at::ArrayRef is not covariant, so there is some faffing about\n        to support conversions from at::ArrayRef<Tensor> (aka TensorList) to\n        at::ArrayRef<Variable>.  In the case of 'recordTrace' (slow path), I just\n        allocated an intermediate std::vector to get the types correct; in the case\n        of isTracing (fast path) I copy pasted the definition three times.  I'm not\n        terribly happy with this so I'd appreciate ways to improve it.\n    \n      - Tracing is all in one place, rather than spattered between the beginning\n        and end of an ATen function, as Sam suggested.\n    \n      - This commit doesn't actually enable ATen definitions.\n    \n    Signed-off-by: Edward Z. Yang <ezyang@fb.com>\n\nIt's WIP because the ONNX path is not updated yet.", "merged": false, "mergeable": false, "rebaseable": false, "mergeable_state": "dirty", "merged_by": null, "comments": 1, "review_comments": 30, "maintainer_can_modify": false, "commits": 9, "additions": 1669, "deletions": 512, "changed_files": 27}