{"url": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/145758672", "pull_request_review_id": 70605458, "id": 145758672, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE0NTc1ODY3Mg==", "diff_hunk": "@@ -89,4 +89,36 @@ void nontraceableBackwardSubgraph(const variable_list& inputs, const variable_li\n   std::make_shared<autograd::Eval>()->replaceSubgraph(inputs, outputs);\n }\n \n+Node* recordTraceWorker(std::string op, // TODO: make this a Symbol\n+                        at::ArrayRef<Variable> inputs,\n+                        at::ArrayRef<Variable> outputs) {\n+  auto state = getTracingState(inputs);\n+  auto& graph = state->graph;\n+  // TODO: Technically, we could reduce the scope of the lock, but since we\n+  // haven't actually specified what the locking contract is, be conservative.\n+  auto state_lock = state->lock();\n+\n+  Node *n = graph->create(stringToSymbol(op));\n+  for (Variable input : inputs) {\n+    graph->addInput(getValueTrace(state, input));\n+  }\n+\n+  // NB: Order matters. This must append after inputs but before outputs.\n+  graph->appendNode(n);\n+\n+  int i = 0;\n+  for (Variable output : outputs) {\n+    Node* sel = graph->appendNode(graph->createSelect(n, i));", "path": "torch/csrc/jit/tracer.cpp", "position": 23, "original_position": 23, "commit_id": "86c9ea260bff743162df1c07d673bb6039fb424d", "original_commit_id": "2c8d829ca36179d8d2ab55d2c0fa5dafaf987946", "user": {"login": "zdevito", "id": 370202, "node_id": "MDQ6VXNlcjM3MDIwMg==", "avatar_url": "https://avatars0.githubusercontent.com/u/370202?v=4", "gravatar_id": "", "url": "https://api.github.com/users/zdevito", "html_url": "https://github.com/zdevito", "followers_url": "https://api.github.com/users/zdevito/followers", "following_url": "https://api.github.com/users/zdevito/following{/other_user}", "gists_url": "https://api.github.com/users/zdevito/gists{/gist_id}", "starred_url": "https://api.github.com/users/zdevito/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/zdevito/subscriptions", "organizations_url": "https://api.github.com/users/zdevito/orgs", "repos_url": "https://api.github.com/users/zdevito/repos", "events_url": "https://api.github.com/users/zdevito/events{/privacy}", "received_events_url": "https://api.github.com/users/zdevito/received_events", "type": "User", "site_admin": false}, "body": "@apaszke: did you mean \"now use -> not use\"? I think we should only use a select on a node with multiple outputs. ", "created_at": "2017-10-19T16:50:29Z", "updated_at": "2018-11-23T15:35:30Z", "html_url": "https://github.com/pytorch/pytorch/pull/3160#discussion_r145758672", "pull_request_url": "https://api.github.com/repos/pytorch/pytorch/pulls/3160", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/145758672"}, "html": {"href": "https://github.com/pytorch/pytorch/pull/3160#discussion_r145758672"}, "pull_request": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/3160"}}, "body_html": "<p><a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=4583066\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/apaszke\">@apaszke</a>: did you mean \"now use -&gt; not use\"? I think we should only use a select on a node with multiple outputs.</p>", "body_text": "@apaszke: did you mean \"now use -> not use\"? I think we should only use a select on a node with multiple outputs.", "in_reply_to_id": 145645550}