{"url": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/145794493", "pull_request_review_id": 70648180, "id": 145794493, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE0NTc5NDQ5Mw==", "diff_hunk": "@@ -89,4 +89,36 @@ void nontraceableBackwardSubgraph(const variable_list& inputs, const variable_li\n   std::make_shared<autograd::Eval>()->replaceSubgraph(inputs, outputs);\n }\n \n+Node* recordTraceWorker(std::string op, // TODO: make this a Symbol\n+                        at::ArrayRef<Variable> inputs,\n+                        at::ArrayRef<Variable> outputs) {\n+  auto state = getTracingState(inputs);\n+  auto& graph = state->graph;\n+  // TODO: Technically, we could reduce the scope of the lock, but since we\n+  // haven't actually specified what the locking contract is, be conservative.\n+  auto state_lock = state->lock();\n+\n+  Node *n = graph->create(stringToSymbol(op));\n+  for (Variable input : inputs) {\n+    graph->addInput(getValueTrace(state, input));\n+  }\n+\n+  // NB: Order matters. This must append after inputs but before outputs.\n+  graph->appendNode(n);\n+\n+  int i = 0;\n+  for (Variable output : outputs) {\n+    Node* sel = graph->appendNode(graph->createSelect(n, i));", "path": "torch/csrc/jit/tracer.cpp", "position": 23, "original_position": 23, "commit_id": "86c9ea260bff743162df1c07d673bb6039fb424d", "original_commit_id": "2c8d829ca36179d8d2ab55d2c0fa5dafaf987946", "user": {"login": "ezyang", "id": 13564, "node_id": "MDQ6VXNlcjEzNTY0", "avatar_url": "https://avatars0.githubusercontent.com/u/13564?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ezyang", "html_url": "https://github.com/ezyang", "followers_url": "https://api.github.com/users/ezyang/followers", "following_url": "https://api.github.com/users/ezyang/following{/other_user}", "gists_url": "https://api.github.com/users/ezyang/gists{/gist_id}", "starred_url": "https://api.github.com/users/ezyang/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ezyang/subscriptions", "organizations_url": "https://api.github.com/users/ezyang/orgs", "repos_url": "https://api.github.com/users/ezyang/repos", "events_url": "https://api.github.com/users/ezyang/events{/privacy}", "received_events_url": "https://api.github.com/users/ezyang/received_events", "type": "User", "site_admin": false}, "body": "OK", "created_at": "2017-10-19T19:03:52Z", "updated_at": "2018-11-23T15:35:31Z", "html_url": "https://github.com/pytorch/pytorch/pull/3160#discussion_r145794493", "pull_request_url": "https://api.github.com/repos/pytorch/pytorch/pulls/3160", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/145794493"}, "html": {"href": "https://github.com/pytorch/pytorch/pull/3160#discussion_r145794493"}, "pull_request": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/3160"}}, "body_html": "<p>OK</p>", "body_text": "OK", "in_reply_to_id": 145645550}