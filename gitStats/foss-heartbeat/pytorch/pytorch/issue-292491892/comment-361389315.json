{"url": "https://api.github.com/repos/pytorch/pytorch/issues/comments/361389315", "html_url": "https://github.com/pytorch/pytorch/issues/4908#issuecomment-361389315", "issue_url": "https://api.github.com/repos/pytorch/pytorch/issues/4908", "id": 361389315, "node_id": "MDEyOklzc3VlQ29tbWVudDM2MTM4OTMxNQ==", "user": {"login": "ngimel", "id": 15841449, "node_id": "MDQ6VXNlcjE1ODQxNDQ5", "avatar_url": "https://avatars3.githubusercontent.com/u/15841449?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ngimel", "html_url": "https://github.com/ngimel", "followers_url": "https://api.github.com/users/ngimel/followers", "following_url": "https://api.github.com/users/ngimel/following{/other_user}", "gists_url": "https://api.github.com/users/ngimel/gists{/gist_id}", "starred_url": "https://api.github.com/users/ngimel/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ngimel/subscriptions", "organizations_url": "https://api.github.com/users/ngimel/orgs", "repos_url": "https://api.github.com/users/ngimel/repos", "events_url": "https://api.github.com/users/ngimel/events{/privacy}", "received_events_url": "https://api.github.com/users/ngimel/received_events", "type": "User", "site_admin": false}, "created_at": "2018-01-29T21:17:09Z", "updated_at": "2018-01-29T21:17:09Z", "author_association": "CONTRIBUTOR", "body_html": "<p>Yep, because it's calling cudaGetDeviceProperties which is ludicrously expensive (don't ask) <div class=\"border rounded-1 my-2\">\n  <div class=\"f6 px-3 py-2 lh-condensed border-bottom bg-gray-light\">\n    <p class=\"mb-0 text-bold\">\n      <a href=\"https://github.com/pytorch/pytorch/blob/d1c4065f0dec90ad7f90c65e24155fab445990ec/torch/csrc/cuda/Module.cpp#L144\">pytorch/torch/csrc/cuda/Module.cpp</a>\n    </p>\n    <p class=\"mb-0 text-gray-light\">\n         Line 144\n      in\n      <a data-pjax=\"true\" class=\"commit-tease-sha\" href=\"/pytorch/pytorch/commit/d1c4065f0dec90ad7f90c65e24155fab445990ec\">d1c4065</a>\n    </p>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper blob-wrapper-embedded data\">\n    <table class=\"highlight tab-size mb-0 js-file-line-container\" data-tab-size=\"8\">\n\n        <tbody><tr class=\"border-0\">\n          <td id=\"L144\" class=\"blob-num border-0 px-3 py-0 bg-white js-line-number\" data-line-number=\"144\"></td>\n          <td id=\"LC144\" class=\"blob-code border-0 px-3 py-0 bg-white blob-code-inner js-file-line\"> <span class=\"pl-c1\">THCudaCheck</span>(<span class=\"pl-c1\">cudaGetDeviceProperties</span>(&amp;prop, device)); </td>\n        </tr>\n    </tbody></table>\n  </div>\n</div>\n. THCState actually caches device capability, so THCPModule_getDeviceCapabilityWrap  should be calling something or other from THC, I don't know what exactly, that should be better.</p>", "body_text": "Yep, because it's calling cudaGetDeviceProperties which is ludicrously expensive (don't ask) \n  \n    \n      pytorch/torch/csrc/cuda/Module.cpp\n    \n    \n         Line 144\n      in\n      d1c4065\n    \n    \n    \n    \n\n        \n          \n           THCudaCheck(cudaGetDeviceProperties(&prop, device)); \n        \n    \n  \n\n. THCState actually caches device capability, so THCPModule_getDeviceCapabilityWrap  should be calling something or other from THC, I don't know what exactly, that should be better.", "body": "Yep, because it's calling cudaGetDeviceProperties which is ludicrously expensive (don't ask) https://github.com/pytorch/pytorch/blob/d1c4065f0dec90ad7f90c65e24155fab445990ec/torch/csrc/cuda/Module.cpp#L144. THCState actually caches device capability, so THCPModule_getDeviceCapabilityWrap  should be calling something or other from THC, I don't know what exactly, that should be better. "}