{"url": "https://api.github.com/repos/pytorch/pytorch/issues/comments/275984990", "html_url": "https://github.com/pytorch/pytorch/issues/101#issuecomment-275984990", "issue_url": "https://api.github.com/repos/pytorch/pytorch/issues/101", "id": 275984990, "node_id": "MDEyOklzc3VlQ29tbWVudDI3NTk4NDk5MA==", "user": {"login": "jekbradbury", "id": 11729078, "node_id": "MDQ6VXNlcjExNzI5MDc4", "avatar_url": "https://avatars2.githubusercontent.com/u/11729078?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jekbradbury", "html_url": "https://github.com/jekbradbury", "followers_url": "https://api.github.com/users/jekbradbury/followers", "following_url": "https://api.github.com/users/jekbradbury/following{/other_user}", "gists_url": "https://api.github.com/users/jekbradbury/gists{/gist_id}", "starred_url": "https://api.github.com/users/jekbradbury/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jekbradbury/subscriptions", "organizations_url": "https://api.github.com/users/jekbradbury/orgs", "repos_url": "https://api.github.com/users/jekbradbury/repos", "events_url": "https://api.github.com/users/jekbradbury/events{/privacy}", "received_events_url": "https://api.github.com/users/jekbradbury/received_events", "type": "User", "site_admin": false}, "created_at": "2017-01-30T05:50:30Z", "updated_at": "2017-01-30T05:50:30Z", "author_association": "CONTRIBUTOR", "body_html": "<p>Chainer has a nice approach, where the initializer argument is a little polymorphic (can be a callable or a scalar/matrix value). Looks like this:</p>\n<div class=\"highlight highlight-source-python\"><pre><span class=\"pl-c1\">super</span>().<span class=\"pl-c1\">__init__</span>(\n    <span class=\"pl-v\">maxout</span><span class=\"pl-k\">=</span>Maxout(maxout_size, maxout_size, <span class=\"pl-c1\">2</span>, <span class=\"pl-v\">initialW</span><span class=\"pl-k\">=</span>initializers.GlorotUniform()),\n    <span class=\"pl-v\">softmax_linear</span><span class=\"pl-k\">=</span>Linear(maxout_size, task.num_classes, <span class=\"pl-v\">initialW</span><span class=\"pl-k\">=</span><span class=\"pl-c1\">0</span>))</pre></div>", "body_text": "Chainer has a nice approach, where the initializer argument is a little polymorphic (can be a callable or a scalar/matrix value). Looks like this:\nsuper().__init__(\n    maxout=Maxout(maxout_size, maxout_size, 2, initialW=initializers.GlorotUniform()),\n    softmax_linear=Linear(maxout_size, task.num_classes, initialW=0))", "body": "Chainer has a nice approach, where the initializer argument is a little polymorphic (can be a callable or a scalar/matrix value). Looks like this:\r\n```python\r\nsuper().__init__(\r\n    maxout=Maxout(maxout_size, maxout_size, 2, initialW=initializers.GlorotUniform()),\r\n    softmax_linear=Linear(maxout_size, task.num_classes, initialW=0))\r\n```"}