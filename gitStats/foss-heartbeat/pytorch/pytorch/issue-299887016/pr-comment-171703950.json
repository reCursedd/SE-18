{"url": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/171703950", "pull_request_review_id": 100605324, "id": 171703950, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE3MTcwMzk1MA==", "diff_hunk": "@@ -2532,13 +2566,34 @@ class dont_convert(tuple):\n     ('index_fill', (), (0, torch.tensor(0, dtype=torch.int64), 2), 'scalar_both_dim', [0]),\n     ('inverse', (S, S), NO_ARGS, '', NO_ARGS, [skipIfNoLapack]),\n     ('det', (S, S), NO_ARGS, '', NO_ARGS, [skipIfNoLapack]),\n-    ('det', lambda: random_symmetric_matrix(S), NO_ARGS, 'symmetric'),\n-    ('det', lambda: random_square_matrix_of_rank(S, S - 2), NO_ARGS, 'dim2_null'),\n-    ('det', lambda: random_square_matrix_of_rank(S, 1), NO_ARGS, 'rank1'),\n-    ('det', lambda: random_square_matrix_of_rank(S, 2), NO_ARGS, 'rank2'),\n+    ('det', lambda: random_symmetric_matrix(S), NO_ARGS, 'symmetric', NO_ARGS, [skipIfNoLapack]),\n+    ('det', lambda: random_symmetric_psd_matrix(S), NO_ARGS, 'symmetric_psd', NO_ARGS, [skipIfNoLapack]),\n+    ('det', lambda: random_symmetric_pd_matrix(S), NO_ARGS, 'symmetric_pd', NO_ARGS, [skipIfNoLapack]),\n+    ('det', lambda: random_square_matrix_of_rank(S, S - 2), NO_ARGS, 'dim2_null', NO_ARGS, [skipIfNoLapack]),\n+    ('det', lambda: random_square_matrix_of_rank(S, 1), NO_ARGS, 'rank1', NO_ARGS, [skipIfNoLapack]),\n+    ('det', lambda: random_square_matrix_of_rank(S, 2), NO_ARGS, 'rank2', NO_ARGS, [skipIfNoLapack]),\n     ('det', lambda: random_fullrank_matrix_distinct_singular_value(S), NO_ARGS,\n-     'distinct_postive_s', NO_ARGS, [skipIfNoLapack]),\n-    ('svd', lambda: random_fullrank_matrix_distinct_singular_value(S), NO_ARGS, ''),\n+     'distinct_singular_values', NO_ARGS, [skipIfNoLapack]),\n+    # For `logdet` and `slogdet`, the function at det=0 is not smooth.\n+    # We need to exclude tests with det=0 (e.g. dim2_null, rank1, rank2) and use\n+    # `make_nonzero_det` to make the random matrices have nonzero det. For\n+    # `logdet`, we also set `make_nonzero_det(matrix, sign=1)` to make the\n+    # matrix have positive det.\n+    ('logdet', lambda: make_nonzero_det(torch.randn(S, S), 1), NO_ARGS, '', NO_ARGS, [skipIfNoLapack]),\n+    ('logdet', lambda: make_nonzero_det(random_symmetric_matrix(S), 1), NO_ARGS,\n+     'symmetric', NO_ARGS, [skipIfNoLapack]),\n+    ('logdet', lambda: make_nonzero_det(random_symmetric_pd_matrix(S), 1), NO_ARGS,\n+     'symmetric_pd', NO_ARGS, [skipIfNoLapack]),\n+    ('logdet', lambda: make_nonzero_det(random_fullrank_matrix_distinct_singular_value(S), 1, 0), NO_ARGS,\n+     'distinct_singular_values', NO_ARGS, [skipIfNoLapack]),\n+    ('slogdet', lambda: make_nonzero_det(torch.randn(S, S), 1), NO_ARGS, 'pos_det', NO_ARGS, [skipIfNoLapack], [1]),", "path": "test/test_autograd.py", "position": null, "original_position": 112, "commit_id": "d35698f3d4e941ad6b43bad0669012489274a989", "original_commit_id": "338a869051f4eef3d0dc884746d9c02f8eda5bb2", "user": {"login": "SsnL", "id": 5674597, "node_id": "MDQ6VXNlcjU2NzQ1OTc=", "avatar_url": "https://avatars2.githubusercontent.com/u/5674597?v=4", "gravatar_id": "", "url": "https://api.github.com/users/SsnL", "html_url": "https://github.com/SsnL", "followers_url": "https://api.github.com/users/SsnL/followers", "following_url": "https://api.github.com/users/SsnL/following{/other_user}", "gists_url": "https://api.github.com/users/SsnL/gists{/gist_id}", "starred_url": "https://api.github.com/users/SsnL/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/SsnL/subscriptions", "organizations_url": "https://api.github.com/users/SsnL/orgs", "repos_url": "https://api.github.com/users/SsnL/repos", "events_url": "https://api.github.com/users/SsnL/events{/privacy}", "received_events_url": "https://api.github.com/users/SsnL/received_events", "type": "User", "site_admin": false}, "body": "the last element of [1] means that only the 2nd output of slogdet is differentiable, and should be gradcheck'ed", "created_at": "2018-03-01T21:46:43Z", "updated_at": "2018-11-23T15:40:14Z", "html_url": "https://github.com/pytorch/pytorch/pull/5393#discussion_r171703950", "pull_request_url": "https://api.github.com/repos/pytorch/pytorch/pulls/5393", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/171703950"}, "html": {"href": "https://github.com/pytorch/pytorch/pull/5393#discussion_r171703950"}, "pull_request": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/5393"}}, "body_html": "<p>the last element of [1] means that only the 2nd output of slogdet is differentiable, and should be gradcheck'ed</p>", "body_text": "the last element of [1] means that only the 2nd output of slogdet is differentiable, and should be gradcheck'ed"}