{"url": "https://api.github.com/repos/pytorch/pytorch/issues/5393", "repository_url": "https://api.github.com/repos/pytorch/pytorch", "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/5393/labels{/name}", "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/5393/comments", "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/5393/events", "html_url": "https://github.com/pytorch/pytorch/pull/5393", "id": 299887016, "node_id": "MDExOlB1bGxSZXF1ZXN0MTcxMTQ0MTky", "number": 5393, "title": "[ready] Add logdet and slogdet", "user": {"login": "SsnL", "id": 5674597, "node_id": "MDQ6VXNlcjU2NzQ1OTc=", "avatar_url": "https://avatars2.githubusercontent.com/u/5674597?v=4", "gravatar_id": "", "url": "https://api.github.com/users/SsnL", "html_url": "https://github.com/SsnL", "followers_url": "https://api.github.com/users/SsnL/followers", "following_url": "https://api.github.com/users/SsnL/following{/other_user}", "gists_url": "https://api.github.com/users/SsnL/gists{/gist_id}", "starred_url": "https://api.github.com/users/SsnL/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/SsnL/subscriptions", "organizations_url": "https://api.github.com/users/SsnL/orgs", "repos_url": "https://api.github.com/users/SsnL/repos", "events_url": "https://api.github.com/users/SsnL/events{/privacy}", "received_events_url": "https://api.github.com/users/SsnL/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 10, "created_at": "2018-02-23T23:58:34Z", "updated_at": "2018-11-23T15:40:46Z", "closed_at": "2018-03-16T13:23:00Z", "author_association": "CONTRIBUTOR", "pull_request": {"url": "https://api.github.com/repos/pytorch/pytorch/pulls/5393", "html_url": "https://github.com/pytorch/pytorch/pull/5393", "diff_url": "https://github.com/pytorch/pytorch/pull/5393.diff", "patch_url": "https://github.com/pytorch/pytorch/pull/5393.patch"}, "body_html": "<p>See commit messages for details of each commit. Notice that the last commit changes the QR based approach to LU based.</p>\n<p>Some comments about switching from QR to LU:</p>\n<ol>\n<li>QR (<code>geqrf</code>) is generally more stable than LU (<code>getrf</code>).</li>\n<li>But <code>getrf</code> gives specific information about matrix being singular or not. Furthermore, the backward (when det &gt; 0) uses matrix inverse (<code>getrf</code> + <code>getri</code>), so using <code>getrf</code> in forward makes sense.</li>\n<li>Finally, this is also more consistent with many other libraries (including NumPy and MATLAB) that use LU factorization (<code>getrf</code>) to compute determinant.</li>\n</ol>\n<p>Therefore, in this PR, det is computed using <code>btrtifact</code> (batched <code>getrf</code>). However, the backward still uses <code>inverse</code> (<code>getrf</code> + <code>getri</code>). So future work include:</p>\n<ol>\n<li>expose <code>getri</code> and cache <code>getrf</code> results to speed up backward.</li>\n<li>implement batched <code>getri</code> to support batched det methods.</li>\n</ol>", "body_text": "See commit messages for details of each commit. Notice that the last commit changes the QR based approach to LU based.\nSome comments about switching from QR to LU:\n\nQR (geqrf) is generally more stable than LU (getrf).\nBut getrf gives specific information about matrix being singular or not. Furthermore, the backward (when det > 0) uses matrix inverse (getrf + getri), so using getrf in forward makes sense.\nFinally, this is also more consistent with many other libraries (including NumPy and MATLAB) that use LU factorization (getrf) to compute determinant.\n\nTherefore, in this PR, det is computed using btrtifact (batched getrf). However, the backward still uses inverse (getrf + getri). So future work include:\n\nexpose getri and cache getrf results to speed up backward.\nimplement batched getri to support batched det methods.", "body": "See commit messages for details of each commit. Notice that the last commit changes the QR based approach to LU based.\r\n\r\nSome comments about switching from QR to LU:\r\n\r\n1. QR (`geqrf`) is generally more stable than LU (`getrf`).\r\n2. But `getrf` gives specific information about matrix being singular or not. Furthermore, the backward (when det > 0) uses matrix inverse (`getrf` + `getri`), so using `getrf` in forward makes sense.\r\n3. Finally, this is also more consistent with many other libraries (including NumPy and MATLAB) that use LU factorization (`getrf`) to compute determinant. \r\n\r\nTherefore, in this PR, det is computed using `btrtifact` (batched `getrf`). However, the backward still uses `inverse` (`getrf` + `getri`). So future work include:\r\n1. expose `getri` and cache `getrf` results to speed up backward.\r\n2. implement batched `getri` to support batched det methods."}