{"url": "https://api.github.com/repos/pytorch/pytorch/issues/comments/302967251", "html_url": "https://github.com/pytorch/pytorch/issues/1139#issuecomment-302967251", "issue_url": "https://api.github.com/repos/pytorch/pytorch/issues/1139", "id": 302967251, "node_id": "MDEyOklzc3VlQ29tbWVudDMwMjk2NzI1MQ==", "user": {"login": "kylemcdonald", "id": 157106, "node_id": "MDQ6VXNlcjE1NzEwNg==", "avatar_url": "https://avatars3.githubusercontent.com/u/157106?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kylemcdonald", "html_url": "https://github.com/kylemcdonald", "followers_url": "https://api.github.com/users/kylemcdonald/followers", "following_url": "https://api.github.com/users/kylemcdonald/following{/other_user}", "gists_url": "https://api.github.com/users/kylemcdonald/gists{/gist_id}", "starred_url": "https://api.github.com/users/kylemcdonald/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kylemcdonald/subscriptions", "organizations_url": "https://api.github.com/users/kylemcdonald/orgs", "repos_url": "https://api.github.com/users/kylemcdonald/repos", "events_url": "https://api.github.com/users/kylemcdonald/events{/privacy}", "received_events_url": "https://api.github.com/users/kylemcdonald/received_events", "type": "User", "site_admin": false}, "created_at": "2017-05-21T22:19:06Z", "updated_at": "2017-05-21T22:19:06Z", "author_association": "NONE", "body_html": "<p>hah, lovely :)</p>\n<p>it turns out the reason that yesterday's command line tools downgrade didn't work was that Xcode was overriding the command line tools install. after moving Xcode to the trash i found the directory of the command line tools install. here is before and after moving Xcode to the trash:</p>\n<pre><code>bash-3.2$ clang --version\nApple LLVM version 8.1.0 (clang-802.0.42)\nTarget: x86_64-apple-darwin16.5.0\nThread model: posix\nInstalledDir: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin\nbash-3.2$ clang --version\nApple LLVM version 8.0.0 (clang-800.0.38)\nTarget: x86_64-apple-darwin16.5.0\nThread model: posix\nInstalledDir: /Library/Developer/CommandLineTools/usr/bin\n</code></pre>\n<p>and now i can make sure it's used instead:</p>\n<pre><code>$ PATH=\"/Library/Developer/CommandLineTools/usr/bin:$PATH\"\n$ MACOSX_DEPLOYMENT_TARGET=10.9 python setup.py install\n</code></pre>\n<p>(note: if you get cocky and don't set MACOSX_DEPLOYMENT_TARGET=10.9 then you get hit with <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load issue title\" data-id=\"225704559\" data-permission-text=\"Issue title is private\" data-url=\"https://github.com/pytorch/pytorch/issues/1434\" data-hovercard-type=\"issue\" data-hovercard-url=\"/pytorch/pytorch/issues/1434/hovercard\" href=\"https://github.com/pytorch/pytorch/issues/1434\">#1434</a> )</p>\n<p>an aside: something that would be really helpful in this case is a <code>python setup.py clean</code> or similar that removes the CMake cache between builds. i noticed that when i was trying to switch the compiler around like this, CMake was still set to use the old compiler until i found and cleared the cache.</p>\n<p>at first it didn't work, because i had two conflicting versions of pip (anaconda and brew):</p>\n<pre><code>$ pip list | grep torch\ntorch (0.1.12+feaee29)\n$ /usr/local/bin/pip list | grep torch\ntorch (0.1.12.post2)\ntorchvision (0.1.8)\n</code></pre>\n<p>so i uninstalled the old one:</p>\n<pre><code>$ /usr/local/bin/pip uninstall torch\n</code></pre>\n<p>but then it couldn't find torch:</p>\n<pre><code>$ python -c \"import torch\"\nTraceback (most recent call last):\n  File \"&lt;string&gt;\", line 1, in &lt;module&gt;\n  File \"torch/__init__.py\", line 48, in &lt;module&gt;\n    import torch._dl as _dl_flags\nImportError: No module named _dl\n</code></pre>\n<p>easy solution, I was in the wrong directory: <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load issue title\" data-id=\"224388586\" data-permission-text=\"Issue title is private\" data-url=\"https://github.com/pytorch/pytorch/issues/1358\" data-hovercard-type=\"issue\" data-hovercard-url=\"/pytorch/pytorch/issues/1358/hovercard\" href=\"https://github.com/pytorch/pytorch/issues/1358\">#1358</a></p>\n<pre><code>$ python -c \"import torch; print(torch.cuda.is_available())\"\nTrue\n</code></pre>\n<p>almost there! in jupyter notebook i get the error <code>ImportError: No module named torch</code>. based on <a href=\"https://github.com/jupyter/notebook/issues/397#issuecomment-137990046\" data-hovercard-type=\"issue\" data-hovercard-url=\"/jupyter/notebook/issues/397/hovercard\">this comment</a> i guessed that i need to uninstall and reinstall the kernelspec for jupyter:</p>\n<pre><code>$ jupyter kernelspec list\nAvailable kernels:\n  python2    /Users/kyle/Library/Jupyter/kernels/python2\n$ jupyter kernelspec remove python2\nKernel specs to remove:\n  python2             \t/Users/kyle/Library/Jupyter/kernels/python2\nRemove 1 kernel specs [y/N]: y\n[RemoveKernelSpec] Removed /Users/kyle/Library/Jupyter/kernels/python2\n$ ipython kernel install\nInstalled kernelspec python2 in /usr/local/share/jupyter/kernels/python2\n</code></pre>\n<p>and now jupyter works! and i get 2x performance on my small model ;)</p>", "body_text": "hah, lovely :)\nit turns out the reason that yesterday's command line tools downgrade didn't work was that Xcode was overriding the command line tools install. after moving Xcode to the trash i found the directory of the command line tools install. here is before and after moving Xcode to the trash:\nbash-3.2$ clang --version\nApple LLVM version 8.1.0 (clang-802.0.42)\nTarget: x86_64-apple-darwin16.5.0\nThread model: posix\nInstalledDir: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin\nbash-3.2$ clang --version\nApple LLVM version 8.0.0 (clang-800.0.38)\nTarget: x86_64-apple-darwin16.5.0\nThread model: posix\nInstalledDir: /Library/Developer/CommandLineTools/usr/bin\n\nand now i can make sure it's used instead:\n$ PATH=\"/Library/Developer/CommandLineTools/usr/bin:$PATH\"\n$ MACOSX_DEPLOYMENT_TARGET=10.9 python setup.py install\n\n(note: if you get cocky and don't set MACOSX_DEPLOYMENT_TARGET=10.9 then you get hit with #1434 )\nan aside: something that would be really helpful in this case is a python setup.py clean or similar that removes the CMake cache between builds. i noticed that when i was trying to switch the compiler around like this, CMake was still set to use the old compiler until i found and cleared the cache.\nat first it didn't work, because i had two conflicting versions of pip (anaconda and brew):\n$ pip list | grep torch\ntorch (0.1.12+feaee29)\n$ /usr/local/bin/pip list | grep torch\ntorch (0.1.12.post2)\ntorchvision (0.1.8)\n\nso i uninstalled the old one:\n$ /usr/local/bin/pip uninstall torch\n\nbut then it couldn't find torch:\n$ python -c \"import torch\"\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"torch/__init__.py\", line 48, in <module>\n    import torch._dl as _dl_flags\nImportError: No module named _dl\n\neasy solution, I was in the wrong directory: #1358\n$ python -c \"import torch; print(torch.cuda.is_available())\"\nTrue\n\nalmost there! in jupyter notebook i get the error ImportError: No module named torch. based on this comment i guessed that i need to uninstall and reinstall the kernelspec for jupyter:\n$ jupyter kernelspec list\nAvailable kernels:\n  python2    /Users/kyle/Library/Jupyter/kernels/python2\n$ jupyter kernelspec remove python2\nKernel specs to remove:\n  python2             \t/Users/kyle/Library/Jupyter/kernels/python2\nRemove 1 kernel specs [y/N]: y\n[RemoveKernelSpec] Removed /Users/kyle/Library/Jupyter/kernels/python2\n$ ipython kernel install\nInstalled kernelspec python2 in /usr/local/share/jupyter/kernels/python2\n\nand now jupyter works! and i get 2x performance on my small model ;)", "body": "hah, lovely :)\r\n\r\nit turns out the reason that yesterday's command line tools downgrade didn't work was that Xcode was overriding the command line tools install. after moving Xcode to the trash i found the directory of the command line tools install. here is before and after moving Xcode to the trash:\r\n\r\n```\r\nbash-3.2$ clang --version\r\nApple LLVM version 8.1.0 (clang-802.0.42)\r\nTarget: x86_64-apple-darwin16.5.0\r\nThread model: posix\r\nInstalledDir: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin\r\nbash-3.2$ clang --version\r\nApple LLVM version 8.0.0 (clang-800.0.38)\r\nTarget: x86_64-apple-darwin16.5.0\r\nThread model: posix\r\nInstalledDir: /Library/Developer/CommandLineTools/usr/bin\r\n```\r\n\r\nand now i can make sure it's used instead:\r\n\r\n```\r\n$ PATH=\"/Library/Developer/CommandLineTools/usr/bin:$PATH\"\r\n$ MACOSX_DEPLOYMENT_TARGET=10.9 python setup.py install\r\n```\r\n\r\n(note: if you get cocky and don't set MACOSX_DEPLOYMENT_TARGET=10.9 then you get hit with https://github.com/pytorch/pytorch/issues/1434 )\r\n\r\nan aside: something that would be really helpful in this case is a `python setup.py clean` or similar that removes the CMake cache between builds. i noticed that when i was trying to switch the compiler around like this, CMake was still set to use the old compiler until i found and cleared the cache.\r\n\r\nat first it didn't work, because i had two conflicting versions of pip (anaconda and brew):\r\n\r\n```\r\n$ pip list | grep torch\r\ntorch (0.1.12+feaee29)\r\n$ /usr/local/bin/pip list | grep torch\r\ntorch (0.1.12.post2)\r\ntorchvision (0.1.8)\r\n```\r\n\r\nso i uninstalled the old one:\r\n\r\n```\r\n$ /usr/local/bin/pip uninstall torch\r\n```\r\n\r\nbut then it couldn't find torch:\r\n\r\n```\r\n$ python -c \"import torch\"\r\nTraceback (most recent call last):\r\n  File \"<string>\", line 1, in <module>\r\n  File \"torch/__init__.py\", line 48, in <module>\r\n    import torch._dl as _dl_flags\r\nImportError: No module named _dl\r\n```\r\n\r\neasy solution, I was in the wrong directory: https://github.com/pytorch/pytorch/issues/1358\r\n\r\n```\r\n$ python -c \"import torch; print(torch.cuda.is_available())\"\r\nTrue\r\n```\r\n\r\nalmost there! in jupyter notebook i get the error `ImportError: No module named torch`. based on [this comment](https://github.com/jupyter/notebook/issues/397#issuecomment-137990046) i guessed that i need to uninstall and reinstall the kernelspec for jupyter:\r\n\r\n```\r\n$ jupyter kernelspec list\r\nAvailable kernels:\r\n  python2    /Users/kyle/Library/Jupyter/kernels/python2\r\n$ jupyter kernelspec remove python2\r\nKernel specs to remove:\r\n  python2             \t/Users/kyle/Library/Jupyter/kernels/python2\r\nRemove 1 kernel specs [y/N]: y\r\n[RemoveKernelSpec] Removed /Users/kyle/Library/Jupyter/kernels/python2\r\n$ ipython kernel install\r\nInstalled kernelspec python2 in /usr/local/share/jupyter/kernels/python2\r\n```\r\n\r\nand now jupyter works! and i get 2x performance on my small model ;)"}