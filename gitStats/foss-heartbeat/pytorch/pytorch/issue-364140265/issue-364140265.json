{"url": "https://api.github.com/repos/pytorch/pytorch/issues/12103", "repository_url": "https://api.github.com/repos/pytorch/pytorch", "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/12103/labels{/name}", "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/12103/comments", "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/12103/events", "html_url": "https://github.com/pytorch/pytorch/pull/12103", "id": 364140265, "node_id": "MDExOlB1bGxSZXF1ZXN0MjE4NDAwNTQ1", "number": 12103, "title": "Make TensorOptions contain optional fields, optimize struct size", "user": {"login": "ezyang", "id": 13564, "node_id": "MDQ6VXNlcjEzNTY0", "avatar_url": "https://avatars0.githubusercontent.com/u/13564?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ezyang", "html_url": "https://github.com/ezyang", "followers_url": "https://api.github.com/users/ezyang/followers", "following_url": "https://api.github.com/users/ezyang/following{/other_user}", "gists_url": "https://api.github.com/users/ezyang/gists{/gist_id}", "starred_url": "https://api.github.com/users/ezyang/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ezyang/subscriptions", "organizations_url": "https://api.github.com/users/ezyang/orgs", "repos_url": "https://api.github.com/users/ezyang/repos", "events_url": "https://api.github.com/users/ezyang/events{/privacy}", "received_events_url": "https://api.github.com/users/ezyang/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-09-26T17:45:54Z", "updated_at": "2018-11-23T15:52:16Z", "closed_at": "2018-10-05T16:26:18Z", "author_association": "CONTRIBUTOR", "pull_request": {"url": "https://api.github.com/repos/pytorch/pytorch/pulls/12103", "html_url": "https://github.com/pytorch/pytorch/pull/12103", "diff_url": "https://github.com/pytorch/pytorch/pull/12103.diff", "patch_url": "https://github.com/pytorch/pytorch/pull/12103.patch"}, "body_html": "<p>Stack:<br>\n\u00a0\u00a0\u00a0\u00a0<g-emoji class=\"g-emoji\" alias=\"black_circle\" fallback-src=\"https://assets-cdn.github.com/images/icons/emoji/unicode/26ab.png\">\u26ab\ufe0f</g-emoji>\u00a0 <strong><a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load issue title\" data-id=\"364140265\" data-permission-text=\"Issue title is private\" data-url=\"https://github.com/pytorch/pytorch/issues/12103\" data-hovercard-type=\"pull_request\" data-hovercard-url=\"/pytorch/pytorch/pull/12103/hovercard\" href=\"https://github.com/pytorch/pytorch/pull/12103\">#12103</a> Make TensorOptions contain optional fields, optimize struct size</strong>\u00a0\u00a0<a href=\"https://our.internmc.facebook.com/intern/diff/D10052523/\" rel=\"nofollow\"><g-emoji class=\"g-emoji\" alias=\"yellow_heart\" fallback-src=\"https://assets-cdn.github.com/images/icons/emoji/unicode/1f49b.png\">\ud83d\udc9b</g-emoji></a></p>\n<p>This defers lookup of defaults to the site where we read<br>\nout of TensorOptions. THIS IS A BC-BREAKING BEHAVIOR CHANGE,<br>\nbut we expect the bulk of uses of OptionsGuard don't allocate TensorOptions<br>\ninside the OptionsGuard region, and then use it outside of the region<br>\n(the situation where behavior could change.)</p>\n<p>I also optimize the size of TensorOptions by rearranging fields, so that we<br>\nalways fit in two 64-bit words.</p>\n<p>Differential Revision: <a href=\"https://our.internmc.facebook.com/intern/diff/D10052523/\" rel=\"nofollow\">D10052523</a></p>", "body_text": "Stack:\n\u00a0\u00a0\u00a0\u00a0\u26ab\ufe0f\u00a0 #12103 Make TensorOptions contain optional fields, optimize struct size\u00a0\u00a0\ud83d\udc9b\nThis defers lookup of defaults to the site where we read\nout of TensorOptions. THIS IS A BC-BREAKING BEHAVIOR CHANGE,\nbut we expect the bulk of uses of OptionsGuard don't allocate TensorOptions\ninside the OptionsGuard region, and then use it outside of the region\n(the situation where behavior could change.)\nI also optimize the size of TensorOptions by rearranging fields, so that we\nalways fit in two 64-bit words.\nDifferential Revision: D10052523", "body": "Stack:\n&nbsp;&nbsp;&nbsp;&nbsp;:black_circle:&nbsp; **#12103 Make TensorOptions contain optional fields, optimize struct size**&nbsp;&nbsp;[:yellow_heart:](https://our.internmc.facebook.com/intern/diff/D10052523/)\n\nThis defers lookup of defaults to the site where we read\nout of TensorOptions. THIS IS A BC-BREAKING BEHAVIOR CHANGE,\nbut we expect the bulk of uses of OptionsGuard don't allocate TensorOptions\ninside the OptionsGuard region, and then use it outside of the region\n(the situation where behavior could change.)\n\nI also optimize the size of TensorOptions by rearranging fields, so that we\nalways fit in two 64-bit words.\n\nDifferential Revision: [D10052523](https://our.internmc.facebook.com/intern/diff/D10052523/)"}