{"url": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/221475466", "pull_request_review_id": 160130624, "id": 221475466, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIyMTQ3NTQ2Ng==", "diff_hunk": "@@ -1,25 +1,33 @@\n #include <ATen/core/OptionsGuard.h>\n #include <ATen/core/optional.h>\n+#include <ATen/core/Layout.h>\n \n namespace at {\n \n+// In the CAFFE2_FB_LIMITED_MOBILE_CAPABILITY build setting,\n+// thread_local is not supported.  In that case, we don't provide\n+// an OptionsGuard; and force you to pass around options manually.\n #if !AT_MOBILE && !defined(CAFFE2_FB_LIMITED_MOBILE_CAPABILITY)\n \n-thread_local at::optional<TensorOptions> DefaultTensorOptions::options_;\n+/// This is an optional because of compiler bugs that mis-initialize static\n+/// thread local variables. The workaround is lazy initialization, i.e.\n+/// `getDefaultTensorOptions()` will initialize the `options_` to a proper\n+/// value upon first invocation.\n+/// https://gcc.gnu.org/ml/gcc-bugs/2013-12/msg00026.html\n+static thread_local at::optional<DefaultTensorOptions> options_;\n \n-TensorOptions& DefaultTensorOptions::get() {\n+DefaultTensorOptions& getDefaultTensorOptions() {\n   if (!options_) {\n-    options_.emplace(\n-        /*use_thread_local_default_options=*/false);\n+    options_.emplace();\n   }\n   return *options_;\n }\n \n #else\n \n-TensorOptions DefaultTensorOptions::options_(/*use_thread_local_default_options=*/false);\n+static DefaultTensorOptions options_;", "path": "aten/src/ATen/core/OptionsGuard.cpp", "position": null, "original_position": 33, "commit_id": "21981725ed9e3cdaeb2381af8519c613e55f3641", "original_commit_id": "f9b439b6ecb9c8d1e4a1fa86ef700469b87356ec", "user": {"login": "goldsborough", "id": 6429851, "node_id": "MDQ6VXNlcjY0Mjk4NTE=", "avatar_url": "https://avatars3.githubusercontent.com/u/6429851?v=4", "gravatar_id": "", "url": "https://api.github.com/users/goldsborough", "html_url": "https://github.com/goldsborough", "followers_url": "https://api.github.com/users/goldsborough/followers", "following_url": "https://api.github.com/users/goldsborough/following{/other_user}", "gists_url": "https://api.github.com/users/goldsborough/gists{/gist_id}", "starred_url": "https://api.github.com/users/goldsborough/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/goldsborough/subscriptions", "organizations_url": "https://api.github.com/users/goldsborough/orgs", "repos_url": "https://api.github.com/users/goldsborough/repos", "events_url": "https://api.github.com/users/goldsborough/events{/privacy}", "received_events_url": "https://api.github.com/users/goldsborough/received_events", "type": "User", "site_admin": false}, "body": "I don't think this should have an underscore at the end, those are for private members of classes, not globals. When I first looked at this I was looking for the declaration in a class in some header. Alternatives:\r\n\r\n- `g_options` if you want to keep it a global\r\n- Make it a static function variable (move it into getDefaultTensorOptions()). I'd prefer that because it localized the usage. It makes it very clear that nothing outside of the function is accessing it.", "created_at": "2018-09-30T22:11:56Z", "updated_at": "2018-11-23T15:52:10Z", "html_url": "https://github.com/pytorch/pytorch/pull/12103#discussion_r221475466", "pull_request_url": "https://api.github.com/repos/pytorch/pytorch/pulls/12103", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/221475466"}, "html": {"href": "https://github.com/pytorch/pytorch/pull/12103#discussion_r221475466"}, "pull_request": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/12103"}}, "body_html": "<p>I don't think this should have an underscore at the end, those are for private members of classes, not globals. When I first looked at this I was looking for the declaration in a class in some header. Alternatives:</p>\n<ul>\n<li><code>g_options</code> if you want to keep it a global</li>\n<li>Make it a static function variable (move it into getDefaultTensorOptions()). I'd prefer that because it localized the usage. It makes it very clear that nothing outside of the function is accessing it.</li>\n</ul>", "body_text": "I don't think this should have an underscore at the end, those are for private members of classes, not globals. When I first looked at this I was looking for the declaration in a class in some header. Alternatives:\n\ng_options if you want to keep it a global\nMake it a static function variable (move it into getDefaultTensorOptions()). I'd prefer that because it localized the usage. It makes it very clear that nothing outside of the function is accessing it."}