{"url": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/221476117", "pull_request_review_id": 160131279, "id": 221476117, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIyMTQ3NjExNw==", "diff_hunk": "@@ -132,54 +130,54 @@ struct CAFFE2_API TensorOptions {\n   }\n \n   /// Returns the device of the `TensorOptions`.\n-  const Device& device() const noexcept {\n-    return device_;\n-  }\n+  Device device() const noexcept;\n+\n+  optional<Device> device_opt() const noexcept { return device_; }\n \n   /// Returns the device index of the `TensorOptions`.\n   int32_t device_index() const noexcept {\n-    return device_.index();\n+    return device().index();\n   }\n \n   /// Returns the dtype of the `TensorOptions`.\n-  ScalarType dtype() const noexcept {\n-    return dtype_;\n-  }\n+  ScalarType dtype() const noexcept;\n+\n+  optional<ScalarType> dtype_opt() const noexcept { return dtype_; }\n \n   /// Returns the layout of the `TensorOptions`.\n-  Layout layout() const noexcept {\n-    return layout_;\n-  }\n+  Layout layout() const noexcept;\n+\n+  optional<Layout> layout_opt() const noexcept { return layout_; }\n \n   /// Returns the `requires_grad` property of the `TensorOptions`.\n-  bool requires_grad() const noexcept {\n-    return requires_grad_;\n-  }\n+  bool requires_grad() const noexcept;\n+\n+  optional<bool> requires_grad_opt() const noexcept { return requires_grad_; }\n \n   /// Returns the `is_variable` property of the `TensorOptions`.\n-  bool is_variable() const noexcept {\n-    return is_variable_;\n-  }\n+  bool is_variable() const noexcept;\n+\n+  optional<bool> is_variable_opt() const noexcept { return is_variable_; }\n \n   // Resolves the ATen backend specified by the current construction axes.\n   Backend backend() const noexcept {\n     Backend backend;\n-    if (device_.type() == Device::Type::CPU) {\n-      backend = (layout_ == kStrided) ? Backend::CPU : Backend::SparseCPU;\n+    if (device().type() == Device::Type::CPU) {\n+      backend = (layout() == kStrided) ? Backend::CPU : Backend::SparseCPU;\n     } else {\n-      backend = (layout_ == kStrided) ? Backend::CUDA : Backend::SparseCUDA;\n+      backend = (layout() == kStrided) ? Backend::CUDA : Backend::SparseCUDA;\n     }\n     return backend;\n   }\n \n  private:\n   // WARNING: If you edit TensorOptions to add more options, you\n   // must adjust the implementation of Tensor::options\n-  ScalarType dtype_{kFloat};\n-  Device device_{Device::Type::CPU};\n-  Layout layout_{Layout::Strided};\n-  bool requires_grad_{false};\n-  bool is_variable_{false};\n+  optional<ScalarType> dtype_;", "path": "aten/src/ATen/core/TensorOptions.h", "position": null, "original_position": 105, "commit_id": "21981725ed9e3cdaeb2381af8519c613e55f3641", "original_commit_id": "f9b439b6ecb9c8d1e4a1fa86ef700469b87356ec", "user": {"login": "goldsborough", "id": 6429851, "node_id": "MDQ6VXNlcjY0Mjk4NTE=", "avatar_url": "https://avatars3.githubusercontent.com/u/6429851?v=4", "gravatar_id": "", "url": "https://api.github.com/users/goldsborough", "html_url": "https://github.com/goldsborough", "followers_url": "https://api.github.com/users/goldsborough/followers", "following_url": "https://api.github.com/users/goldsborough/following{/other_user}", "gists_url": "https://api.github.com/users/goldsborough/gists{/gist_id}", "starred_url": "https://api.github.com/users/goldsborough/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/goldsborough/subscriptions", "organizations_url": "https://api.github.com/users/goldsborough/orgs", "repos_url": "https://api.github.com/users/goldsborough/repos", "events_url": "https://api.github.com/users/goldsborough/events{/privacy}", "received_events_url": "https://api.github.com/users/goldsborough/received_events", "type": "User", "site_admin": false}, "body": "Please include `optional.h` (Include what you use)", "created_at": "2018-09-30T22:32:15Z", "updated_at": "2018-11-23T15:52:11Z", "html_url": "https://github.com/pytorch/pytorch/pull/12103#discussion_r221476117", "pull_request_url": "https://api.github.com/repos/pytorch/pytorch/pulls/12103", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/221476117"}, "html": {"href": "https://github.com/pytorch/pytorch/pull/12103#discussion_r221476117"}, "pull_request": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/12103"}}, "body_html": "<p>Please include <code>optional.h</code> (Include what you use)</p>", "body_text": "Please include optional.h (Include what you use)"}