{"url": "https://api.github.com/repos/pytorch/pytorch/issues/comments/402517083", "html_url": "https://github.com/pytorch/pytorch/issues/9168#issuecomment-402517083", "issue_url": "https://api.github.com/repos/pytorch/pytorch/issues/9168", "id": 402517083, "node_id": "MDEyOklzc3VlQ29tbWVudDQwMjUxNzA4Mw==", "user": {"login": "mrocklin", "id": 306380, "node_id": "MDQ6VXNlcjMwNjM4MA==", "avatar_url": "https://avatars3.githubusercontent.com/u/306380?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mrocklin", "html_url": "https://github.com/mrocklin", "followers_url": "https://api.github.com/users/mrocklin/followers", "following_url": "https://api.github.com/users/mrocklin/following{/other_user}", "gists_url": "https://api.github.com/users/mrocklin/gists{/gist_id}", "starred_url": "https://api.github.com/users/mrocklin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mrocklin/subscriptions", "organizations_url": "https://api.github.com/users/mrocklin/orgs", "repos_url": "https://api.github.com/users/mrocklin/repos", "events_url": "https://api.github.com/users/mrocklin/events{/privacy}", "received_events_url": "https://api.github.com/users/mrocklin/received_events", "type": "User", "site_admin": false}, "created_at": "2018-07-04T16:02:00Z", "updated_at": "2018-07-04T16:02:22Z", "author_association": "CONTRIBUTOR", "body_html": "<p>For context, I maintain a parallel computing library, Dask, and users are naively passing around PyTorch objects and getting poor performance.  I can special-case PyTorch models to use the trick above, but it might be a good idea to make PyTorch's general serialization solution decently fast for other libraries that run into the same problem.  I think that this is probably pretty easy to do.</p>\n<p><a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load issue title\" data-id=\"338186343\" data-permission-text=\"Issue title is private\" data-url=\"https://github.com/dask/dask-ml/issues/281\" data-hovercard-type=\"issue\" data-hovercard-url=\"/dask/dask-ml/issues/281/hovercard?comment_id=402497872&amp;comment_type=issue_comment\" href=\"https://github.com/dask/dask-ml/issues/281#issuecomment-402497872\">dask/dask-ml#281 (comment)</a></p>", "body_text": "For context, I maintain a parallel computing library, Dask, and users are naively passing around PyTorch objects and getting poor performance.  I can special-case PyTorch models to use the trick above, but it might be a good idea to make PyTorch's general serialization solution decently fast for other libraries that run into the same problem.  I think that this is probably pretty easy to do.\ndask/dask-ml#281 (comment)", "body": "For context, I maintain a parallel computing library, Dask, and users are naively passing around PyTorch objects and getting poor performance.  I can special-case PyTorch models to use the trick above, but it might be a good idea to make PyTorch's general serialization solution decently fast for other libraries that run into the same problem.  I think that this is probably pretty easy to do.\r\n\r\nhttps://github.com/dask/dask-ml/issues/281#issuecomment-402497872"}