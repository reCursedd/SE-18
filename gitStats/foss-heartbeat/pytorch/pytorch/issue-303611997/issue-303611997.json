{"url": "https://api.github.com/repos/pytorch/pytorch/issues/5644", "repository_url": "https://api.github.com/repos/pytorch/pytorch", "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/5644/labels{/name}", "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/5644/comments", "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/5644/events", "html_url": "https://github.com/pytorch/pytorch/pull/5644", "id": 303611997, "node_id": "MDExOlB1bGxSZXF1ZXN0MTczODM1NDA1", "number": 5644, "title": "Fix CUDA btrifact error message using wrong info type", "user": {"login": "SsnL", "id": 5674597, "node_id": "MDQ6VXNlcjU2NzQ1OTc=", "avatar_url": "https://avatars2.githubusercontent.com/u/5674597?v=4", "gravatar_id": "", "url": "https://api.github.com/users/SsnL", "html_url": "https://github.com/SsnL", "followers_url": "https://api.github.com/users/SsnL/followers", "following_url": "https://api.github.com/users/SsnL/following{/other_user}", "gists_url": "https://api.github.com/users/SsnL/gists{/gist_id}", "starred_url": "https://api.github.com/users/SsnL/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/SsnL/subscriptions", "organizations_url": "https://api.github.com/users/SsnL/orgs", "repos_url": "https://api.github.com/users/SsnL/repos", "events_url": "https://api.github.com/users/SsnL/events{/privacy}", "received_events_url": "https://api.github.com/users/SsnL/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2018-03-08T20:00:37Z", "updated_at": "2018-03-09T08:04:29Z", "closed_at": "2018-03-09T03:21:27Z", "author_association": "CONTRIBUTOR", "pull_request": {"url": "https://api.github.com/repos/pytorch/pytorch/pulls/5644", "html_url": "https://github.com/pytorch/pytorch/pull/5644", "diff_url": "https://github.com/pytorch/pytorch/pull/5644.diff", "patch_url": "https://github.com/pytorch/pytorch/pull/5644.patch"}, "body_html": "<p><code>btrifact</code>'s <code>info</code> is always an <code>IntTensor</code>. But when printing errors, we treat it as a <code>real</code> tensor, causing wrong error messages.</p>\n<p>Before:</p>\n<div class=\"highlight highlight-source-python\"><pre>(Pdb) torch.btrifact(torch.zeros(<span class=\"pl-c1\">1</span>,<span class=\"pl-c1\">3</span>,<span class=\"pl-c1\">3</span>).cuda())\n<span class=\"pl-k\">***</span> <span class=\"pl-c1\">RuntimeError</span>: failed to factorize some batch elements (<span class=\"pl-c1\">min</span> info <span class=\"pl-k\">==</span> <span class=\"pl-c1\">1435440384</span>, <span class=\"pl-c1\">max</span> info\n <span class=\"pl-k\">==</span> <span class=\"pl-c1\">19942608</span>) at <span class=\"pl-k\">/</span>home<span class=\"pl-k\">/</span>ssnl<span class=\"pl-k\">/</span>sftp<span class=\"pl-k\">/</span>pytorch<span class=\"pl-k\">/</span>aten<span class=\"pl-k\">/</span>src<span class=\"pl-k\">/</span><span class=\"pl-c1\">THC</span><span class=\"pl-k\">/</span>generic<span class=\"pl-k\">/</span>THCTensorMathBlas.cu:<span class=\"pl-c1\">811</span>\n(Pdb) torch.btrifact(torch.zeros(<span class=\"pl-c1\">1</span>,<span class=\"pl-c1\">3</span>,<span class=\"pl-c1\">3</span>))\n<span class=\"pl-k\">***</span> <span class=\"pl-c1\">RuntimeError</span>: failed to factorize batch element <span class=\"pl-c1\">0</span> (info <span class=\"pl-k\">==</span> <span class=\"pl-c1\">1</span>) at <span class=\"pl-k\">/</span>home<span class=\"pl-k\">/</span>ssnl<span class=\"pl-k\">/</span>sftp<span class=\"pl-k\">/</span>pytorc\nh<span class=\"pl-k\">/</span>aten<span class=\"pl-k\">/</span>src<span class=\"pl-k\">/</span><span class=\"pl-c1\">TH</span><span class=\"pl-k\">/</span>generic<span class=\"pl-k\">/</span>THTensorLapack.c:<span class=\"pl-c1\">1020</span></pre></div>\n<p>After:</p>\n<div class=\"highlight highlight-source-python\"><pre>(Pdb) torch.btrifact(torch.zeros(<span class=\"pl-c1\">1</span>,<span class=\"pl-c1\">3</span>,<span class=\"pl-c1\">3</span>).cuda())\n<span class=\"pl-k\">***</span> <span class=\"pl-c1\">RuntimeError</span>: failed to factorize some batch elements (<span class=\"pl-c1\">min</span> info <span class=\"pl-k\">==</span> <span class=\"pl-c1\">1</span>, <span class=\"pl-c1\">max</span> info <span class=\"pl-k\">==</span> <span class=\"pl-c1\">1</span>) at\n <span class=\"pl-k\">/</span>home<span class=\"pl-k\">/</span>ssnl<span class=\"pl-k\">/</span>sftp<span class=\"pl-k\">/</span>pytorch<span class=\"pl-k\">/</span>aten<span class=\"pl-k\">/</span>src<span class=\"pl-k\">/</span><span class=\"pl-c1\">THC</span><span class=\"pl-k\">/</span>generic<span class=\"pl-k\">/</span>THCTensorMathBlas.cu:<span class=\"pl-c1\">811</span>\n(Pdb) torch.btrifact(torch.zeros(<span class=\"pl-c1\">1</span>,<span class=\"pl-c1\">3</span>,<span class=\"pl-c1\">3</span>))\n<span class=\"pl-k\">***</span> <span class=\"pl-c1\">RuntimeError</span>: failed to factorize batch element <span class=\"pl-c1\">0</span> (info <span class=\"pl-k\">==</span> <span class=\"pl-c1\">1</span>) at <span class=\"pl-k\">/</span>home<span class=\"pl-k\">/</span>ssnl<span class=\"pl-k\">/</span>sftp<span class=\"pl-k\">/</span>pytorc\nh<span class=\"pl-k\">/</span>aten<span class=\"pl-k\">/</span>src<span class=\"pl-k\">/</span><span class=\"pl-c1\">TH</span><span class=\"pl-k\">/</span>generic<span class=\"pl-k\">/</span>THTensorLapack.c:<span class=\"pl-c1\">1020</span></pre></div>", "body_text": "btrifact's info is always an IntTensor. But when printing errors, we treat it as a real tensor, causing wrong error messages.\nBefore:\n(Pdb) torch.btrifact(torch.zeros(1,3,3).cuda())\n*** RuntimeError: failed to factorize some batch elements (min info == 1435440384, max info\n == 19942608) at /home/ssnl/sftp/pytorch/aten/src/THC/generic/THCTensorMathBlas.cu:811\n(Pdb) torch.btrifact(torch.zeros(1,3,3))\n*** RuntimeError: failed to factorize batch element 0 (info == 1) at /home/ssnl/sftp/pytorc\nh/aten/src/TH/generic/THTensorLapack.c:1020\nAfter:\n(Pdb) torch.btrifact(torch.zeros(1,3,3).cuda())\n*** RuntimeError: failed to factorize some batch elements (min info == 1, max info == 1) at\n /home/ssnl/sftp/pytorch/aten/src/THC/generic/THCTensorMathBlas.cu:811\n(Pdb) torch.btrifact(torch.zeros(1,3,3))\n*** RuntimeError: failed to factorize batch element 0 (info == 1) at /home/ssnl/sftp/pytorc\nh/aten/src/TH/generic/THTensorLapack.c:1020", "body": "`btrifact`'s `info` is always an `IntTensor`. But when printing errors, we treat it as a `real` tensor, causing wrong error messages.\r\n\r\nBefore:\r\n```python\r\n(Pdb) torch.btrifact(torch.zeros(1,3,3).cuda())\r\n*** RuntimeError: failed to factorize some batch elements (min info == 1435440384, max info\r\n == 19942608) at /home/ssnl/sftp/pytorch/aten/src/THC/generic/THCTensorMathBlas.cu:811\r\n(Pdb) torch.btrifact(torch.zeros(1,3,3))\r\n*** RuntimeError: failed to factorize batch element 0 (info == 1) at /home/ssnl/sftp/pytorc\r\nh/aten/src/TH/generic/THTensorLapack.c:1020\r\n```\r\nAfter:\r\n```python\r\n(Pdb) torch.btrifact(torch.zeros(1,3,3).cuda())\r\n*** RuntimeError: failed to factorize some batch elements (min info == 1, max info == 1) at\r\n /home/ssnl/sftp/pytorch/aten/src/THC/generic/THCTensorMathBlas.cu:811\r\n(Pdb) torch.btrifact(torch.zeros(1,3,3))\r\n*** RuntimeError: failed to factorize batch element 0 (info == 1) at /home/ssnl/sftp/pytorc\r\nh/aten/src/TH/generic/THTensorLapack.c:1020\r\n```"}