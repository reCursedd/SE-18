{"url": "https://api.github.com/repos/pytorch/pytorch/issues/670", "repository_url": "https://api.github.com/repos/pytorch/pytorch", "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/670/labels{/name}", "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/670/comments", "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/670/events", "html_url": "https://github.com/pytorch/pytorch/issues/670", "id": 204740693, "node_id": "MDU6SXNzdWUyMDQ3NDA2OTM=", "number": 670, "title": "Placeholder variable", "user": {"login": "lukeyeager", "id": 687269, "node_id": "MDQ6VXNlcjY4NzI2OQ==", "avatar_url": "https://avatars0.githubusercontent.com/u/687269?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lukeyeager", "html_url": "https://github.com/lukeyeager", "followers_url": "https://api.github.com/users/lukeyeager/followers", "following_url": "https://api.github.com/users/lukeyeager/following{/other_user}", "gists_url": "https://api.github.com/users/lukeyeager/gists{/gist_id}", "starred_url": "https://api.github.com/users/lukeyeager/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lukeyeager/subscriptions", "organizations_url": "https://api.github.com/users/lukeyeager/orgs", "repos_url": "https://api.github.com/users/lukeyeager/repos", "events_url": "https://api.github.com/users/lukeyeager/events{/privacy}", "received_events_url": "https://api.github.com/users/lukeyeager/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2017-02-01T23:45:40Z", "updated_at": "2017-02-02T00:58:00Z", "closed_at": "2017-02-01T23:57:31Z", "author_association": "CONTRIBUTOR", "body_html": "<p>Is there any way to declare a \"placeholder\" variable in PyTorch? I think I need to either create a Variable without a Tensor or create a Tensor without a fully-defined shape (i.e. <code>[None, 3, 10, 30]</code>).</p>\n<p>I'm investigating the concept of adding a PyTorch backend for Keras (not currently volunteering to do it) and ran into this issue immediately (see implementations for <a href=\"https://github.com/fchollet/keras/blob/1.2.1/keras/backend/theano_backend.py#L93-L113\">theano</a>, <a href=\"https://github.com/fchollet/keras/blob/1.2.1/keras/backend/tensorflow_backend.py#L275-L312\">tensorflow</a>). I see that you've already brought up the idea of implementing a Keras backend, so I thought you might have given this some thought.</p>\n<blockquote>\n<p>Keras Integration<br>\nHave a keras backend. Send in a Pull Request to fchollet/keras<br>\n<a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load issue title\" data-id=\"173498149\" data-permission-text=\"Issue title is private\" data-url=\"https://github.com/pytorch/pytorch/issues/5\" data-hovercard-type=\"issue\" data-hovercard-url=\"/pytorch/pytorch/issues/5/hovercard\" href=\"https://github.com/pytorch/pytorch/issues/5#issue-173498149\">#5 (comment)</a></p>\n</blockquote>\n<p>Thanks!</p>", "body_text": "Is there any way to declare a \"placeholder\" variable in PyTorch? I think I need to either create a Variable without a Tensor or create a Tensor without a fully-defined shape (i.e. [None, 3, 10, 30]).\nI'm investigating the concept of adding a PyTorch backend for Keras (not currently volunteering to do it) and ran into this issue immediately (see implementations for theano, tensorflow). I see that you've already brought up the idea of implementing a Keras backend, so I thought you might have given this some thought.\n\nKeras Integration\nHave a keras backend. Send in a Pull Request to fchollet/keras\n#5 (comment)\n\nThanks!", "body": "Is there any way to declare a \"placeholder\" variable in PyTorch? I think I need to either create a Variable without a Tensor or create a Tensor without a fully-defined shape (i.e. `[None, 3, 10, 30]`).\r\n\r\nI'm investigating the concept of adding a PyTorch backend for Keras (not currently volunteering to do it) and ran into this issue immediately (see implementations for [theano](https://github.com/fchollet/keras/blob/1.2.1/keras/backend/theano_backend.py#L93-L113), [tensorflow](https://github.com/fchollet/keras/blob/1.2.1/keras/backend/tensorflow_backend.py#L275-L312)). I see that you've already brought up the idea of implementing a Keras backend, so I thought you might have given this some thought.\r\n\r\n> Keras Integration\r\nHave a keras backend. Send in a Pull Request to fchollet/keras\r\nhttps://github.com/pytorch/pytorch/issues/5#issue-173498149\r\n\r\nThanks!"}