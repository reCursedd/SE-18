{"url": "https://api.github.com/repos/pytorch/pytorch/issues/comments/355092264", "html_url": "https://github.com/pytorch/pytorch/pull/4461#issuecomment-355092264", "issue_url": "https://api.github.com/repos/pytorch/pytorch/issues/4461", "id": 355092264, "node_id": "MDEyOklzc3VlQ29tbWVudDM1NTA5MjI2NA==", "user": {"login": "zdevito", "id": 370202, "node_id": "MDQ6VXNlcjM3MDIwMg==", "avatar_url": "https://avatars0.githubusercontent.com/u/370202?v=4", "gravatar_id": "", "url": "https://api.github.com/users/zdevito", "html_url": "https://github.com/zdevito", "followers_url": "https://api.github.com/users/zdevito/followers", "following_url": "https://api.github.com/users/zdevito/following{/other_user}", "gists_url": "https://api.github.com/users/zdevito/gists{/gist_id}", "starred_url": "https://api.github.com/users/zdevito/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/zdevito/subscriptions", "organizations_url": "https://api.github.com/users/zdevito/orgs", "repos_url": "https://api.github.com/users/zdevito/repos", "events_url": "https://api.github.com/users/zdevito/events{/privacy}", "received_events_url": "https://api.github.com/users/zdevito/received_events", "type": "User", "site_admin": false}, "created_at": "2018-01-03T18:43:54Z", "updated_at": "2018-01-03T18:43:54Z", "author_association": "CONTRIBUTOR", "body_html": "<p>It's unlikely that we can fix all problems with pybind and even if we made our own, refcounting is still somewhat tricky. What we can do, however, is make it easier for our test suite to catch leaks. For instance if we had a resource manager like:</p>\n<pre><code>with no_tensors_escape():\n   ....\n</code></pre>\n<p>I think a lot of the pytorch-wide leaks are because it is not easy to add a leak test when adding new functionality.</p>", "body_text": "It's unlikely that we can fix all problems with pybind and even if we made our own, refcounting is still somewhat tricky. What we can do, however, is make it easier for our test suite to catch leaks. For instance if we had a resource manager like:\nwith no_tensors_escape():\n   ....\n\nI think a lot of the pytorch-wide leaks are because it is not easy to add a leak test when adding new functionality.", "body": "It's unlikely that we can fix all problems with pybind and even if we made our own, refcounting is still somewhat tricky. What we can do, however, is make it easier for our test suite to catch leaks. For instance if we had a resource manager like:\r\n```\r\nwith no_tensors_escape():\r\n   ....\r\n```\r\nI think a lot of the pytorch-wide leaks are because it is not easy to add a leak test when adding new functionality.\r\n"}