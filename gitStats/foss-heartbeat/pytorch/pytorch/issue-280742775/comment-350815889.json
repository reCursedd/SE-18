{"url": "https://api.github.com/repos/pytorch/pytorch/issues/comments/350815889", "html_url": "https://github.com/pytorch/pytorch/pull/4100#issuecomment-350815889", "issue_url": "https://api.github.com/repos/pytorch/pytorch/issues/4100", "id": 350815889, "node_id": "MDEyOklzc3VlQ29tbWVudDM1MDgxNTg4OQ==", "user": {"login": "fritzo", "id": 648532, "node_id": "MDQ6VXNlcjY0ODUzMg==", "avatar_url": "https://avatars0.githubusercontent.com/u/648532?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fritzo", "html_url": "https://github.com/fritzo", "followers_url": "https://api.github.com/users/fritzo/followers", "following_url": "https://api.github.com/users/fritzo/following{/other_user}", "gists_url": "https://api.github.com/users/fritzo/gists{/gist_id}", "starred_url": "https://api.github.com/users/fritzo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fritzo/subscriptions", "organizations_url": "https://api.github.com/users/fritzo/orgs", "repos_url": "https://api.github.com/users/fritzo/repos", "events_url": "https://api.github.com/users/fritzo/events{/privacy}", "received_events_url": "https://api.github.com/users/fritzo/received_events", "type": "User", "site_admin": false}, "created_at": "2017-12-11T18:36:39Z", "updated_at": "2017-12-11T18:37:27Z", "author_association": "CONTRIBUTOR", "body_html": "<p>Ok, if we want to avoid introducing a temporary<code>.rsample_n()</code> method in <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load issue title\" data-id=\"276860315\" data-permission-text=\"Issue title is private\" data-url=\"https://github.com/pytorch/pytorch/issues/3886\" data-hovercard-type=\"pull_request\" data-hovercard-url=\"/pytorch/pytorch/pull/3886/hovercard\" href=\"https://github.com/pytorch/pytorch/pull/3886\">#3886</a> , I think the shortest path would be to change this PR to a limited version of the final form of <code>.sample()</code>:</p>\n<div class=\"highlight highlight-source-python\"><pre><span class=\"pl-k\">def</span> <span class=\"pl-en\">sample</span>(<span class=\"pl-smi\">sample_shape</span><span class=\"pl-k\">=</span>()):\n    <span class=\"pl-k\">if</span> <span class=\"pl-c1\">len</span>(sample_shape) <span class=\"pl-k\">==</span> <span class=\"pl-c1\">0</span>:\n        n <span class=\"pl-k\">=</span> <span class=\"pl-c1\">None</span> \n        <span class=\"pl-c\"><span class=\"pl-c\">#</span> use logic from .sample()</span>\n    <span class=\"pl-k\">elif</span> <span class=\"pl-c1\">len</span>(sample_shape) <span class=\"pl-k\">==</span> <span class=\"pl-c1\">1</span>:\n        n <span class=\"pl-k\">=</span> sample_shape[<span class=\"pl-c1\">0</span>] \n        <span class=\"pl-c\"><span class=\"pl-c\">#</span> use logic from .sample_n(n)</span>\n    <span class=\"pl-k\">else</span>:\n        <span class=\"pl-k\">raise</span> <span class=\"pl-c1\">NotImplementedError</span></pre></div>\n<p>What do you think?</p>", "body_text": "Ok, if we want to avoid introducing a temporary.rsample_n() method in #3886 , I think the shortest path would be to change this PR to a limited version of the final form of .sample():\ndef sample(sample_shape=()):\n    if len(sample_shape) == 0:\n        n = None \n        # use logic from .sample()\n    elif len(sample_shape) == 1:\n        n = sample_shape[0] \n        # use logic from .sample_n(n)\n    else:\n        raise NotImplementedError\nWhat do you think?", "body": "Ok, if we want to avoid introducing a temporary`.rsample_n()` method in #3886 , I think the shortest path would be to change this PR to a limited version of the final form of `.sample()`:\r\n```py\r\ndef sample(sample_shape=()):\r\n    if len(sample_shape) == 0:\r\n        n = None \r\n        # use logic from .sample()\r\n    elif len(sample_shape) == 1:\r\n        n = sample_shape[0] \r\n        # use logic from .sample_n(n)\r\n    else:\r\n        raise NotImplementedError\r\n```\r\nWhat do you think?"}