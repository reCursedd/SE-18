{"url": "https://api.github.com/repos/pytorch/pytorch/issues/comments/407437728", "html_url": "https://github.com/pytorch/pytorch/issues/9503#issuecomment-407437728", "issue_url": "https://api.github.com/repos/pytorch/pytorch/issues/9503", "id": 407437728, "node_id": "MDEyOklzc3VlQ29tbWVudDQwNzQzNzcyOA==", "user": {"login": "fmassa", "id": 9110200, "node_id": "MDQ6VXNlcjkxMTAyMDA=", "avatar_url": "https://avatars2.githubusercontent.com/u/9110200?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fmassa", "html_url": "https://github.com/fmassa", "followers_url": "https://api.github.com/users/fmassa/followers", "following_url": "https://api.github.com/users/fmassa/following{/other_user}", "gists_url": "https://api.github.com/users/fmassa/gists{/gist_id}", "starred_url": "https://api.github.com/users/fmassa/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fmassa/subscriptions", "organizations_url": "https://api.github.com/users/fmassa/orgs", "repos_url": "https://api.github.com/users/fmassa/repos", "events_url": "https://api.github.com/users/fmassa/events{/privacy}", "received_events_url": "https://api.github.com/users/fmassa/received_events", "type": "User", "site_admin": false}, "created_at": "2018-07-24T14:58:06Z", "updated_at": "2018-07-24T14:58:06Z", "author_association": "MEMBER", "body_html": "<p>I think we should still return a tuple of tensors, as they can directly be passed as inputs to a tensor for advanced indexing.</p>\n<p>As an example, it is annoying that <code>nonzero</code> returns a stacked tensor in PyTorch, it would have been better if it directly returned a tuple of tensors (as in numpy), for the same reasons as above (indexing).<br>\nThis is specially annoying while we don't have full support for tensors with arbitrary-zero I it's dimensions, but that is coming soon.</p>", "body_text": "I think we should still return a tuple of tensors, as they can directly be passed as inputs to a tensor for advanced indexing.\nAs an example, it is annoying that nonzero returns a stacked tensor in PyTorch, it would have been better if it directly returned a tuple of tensors (as in numpy), for the same reasons as above (indexing).\nThis is specially annoying while we don't have full support for tensors with arbitrary-zero I it's dimensions, but that is coming soon.", "body": "I think we should still return a tuple of tensors, as they can directly be passed as inputs to a tensor for advanced indexing.\r\n\r\nAs an example, it is annoying that `nonzero` returns a stacked tensor in PyTorch, it would have been better if it directly returned a tuple of tensors (as in numpy), for the same reasons as above (indexing).\r\nThis is specially annoying while we don't have full support for tensors with arbitrary-zero I it's dimensions, but that is coming soon."}