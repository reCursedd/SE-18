{"url": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/169492927", "pull_request_review_id": 98027864, "id": 169492927, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE2OTQ5MjkyNw==", "diff_hunk": "@@ -171,7 +171,7 @@ On Linux\n export CMAKE_PREFIX_PATH=\"$(dirname $(which conda))/../\" # [anaconda root directory]\n \n # Install basic dependencies\n-conda install numpy pyyaml mkl setuptools cmake cffi\n+conda install numpy pyyaml mkl setuptools cmake cffi typing", "path": "README.md", "position": 5, "original_position": 5, "commit_id": "212d4be93170a1bacf2ae091abc38404fa17c8b9", "original_commit_id": "6aeb6333c862438e4e5ac0b43823d7ee84d6fc4b", "user": {"login": "zou3519", "id": 5652049, "node_id": "MDQ6VXNlcjU2NTIwNDk=", "avatar_url": "https://avatars3.githubusercontent.com/u/5652049?v=4", "gravatar_id": "", "url": "https://api.github.com/users/zou3519", "html_url": "https://github.com/zou3519", "followers_url": "https://api.github.com/users/zou3519/followers", "following_url": "https://api.github.com/users/zou3519/following{/other_user}", "gists_url": "https://api.github.com/users/zou3519/gists{/gist_id}", "starred_url": "https://api.github.com/users/zou3519/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/zou3519/subscriptions", "organizations_url": "https://api.github.com/users/zou3519/orgs", "repos_url": "https://api.github.com/users/zou3519/repos", "events_url": "https://api.github.com/users/zou3519/events{/privacy}", "received_events_url": "https://api.github.com/users/zou3519/received_events", "type": "User", "site_admin": false}, "body": "typing is not a standard Python module in 2.7 :(\r\n\r\nWe can add the annotations without adding the typing module but there will be a fair bit of code duplication and/or complexity when we use named tuples because the typing library is designed under the assumption that it'll be imported in both python 2 and 3. One of the following will need to happen:\r\n- Every NamedTuple/namedtuple needs to be declared twice, once as a typing.NamedTuple and once as a namedtuple.\r\n- We make dummy typing.* functions that don't do anything in a typing.py file somewhere and import them when the typing module isn't found.\r\n- For each NamedTuple, create two separate lists: a list of fields, and a list of corresponding types. When declaring namedtuple() use the list of fields; when declaring NamedTuple() zip the two lists together.\r\n- Maybe I can think of something else that's nicer", "created_at": "2018-02-20T23:21:28Z", "updated_at": "2018-11-23T15:39:47Z", "html_url": "https://github.com/pytorch/pytorch/pull/5312#discussion_r169492927", "pull_request_url": "https://api.github.com/repos/pytorch/pytorch/pulls/5312", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/169492927"}, "html": {"href": "https://github.com/pytorch/pytorch/pull/5312#discussion_r169492927"}, "pull_request": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/5312"}}, "body_html": "<p>typing is not a standard Python module in 2.7 :(</p>\n<p>We can add the annotations without adding the typing module but there will be a fair bit of code duplication and/or complexity when we use named tuples because the typing library is designed under the assumption that it'll be imported in both python 2 and 3. One of the following will need to happen:</p>\n<ul>\n<li>Every NamedTuple/namedtuple needs to be declared twice, once as a typing.NamedTuple and once as a namedtuple.</li>\n<li>We make dummy typing.* functions that don't do anything in a typing.py file somewhere and import them when the typing module isn't found.</li>\n<li>For each NamedTuple, create two separate lists: a list of fields, and a list of corresponding types. When declaring namedtuple() use the list of fields; when declaring NamedTuple() zip the two lists together.</li>\n<li>Maybe I can think of something else that's nicer</li>\n</ul>", "body_text": "typing is not a standard Python module in 2.7 :(\nWe can add the annotations without adding the typing module but there will be a fair bit of code duplication and/or complexity when we use named tuples because the typing library is designed under the assumption that it'll be imported in both python 2 and 3. One of the following will need to happen:\n\nEvery NamedTuple/namedtuple needs to be declared twice, once as a typing.NamedTuple and once as a namedtuple.\nWe make dummy typing.* functions that don't do anything in a typing.py file somewhere and import them when the typing module isn't found.\nFor each NamedTuple, create two separate lists: a list of fields, and a list of corresponding types. When declaring namedtuple() use the list of fields; when declaring NamedTuple() zip the two lists together.\nMaybe I can think of something else that's nicer", "in_reply_to_id": 169489299}