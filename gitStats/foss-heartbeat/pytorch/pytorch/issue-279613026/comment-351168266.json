{"url": "https://api.github.com/repos/pytorch/pytorch/issues/comments/351168266", "html_url": "https://github.com/pytorch/pytorch/issues/4048#issuecomment-351168266", "issue_url": "https://api.github.com/repos/pytorch/pytorch/issues/4048", "id": 351168266, "node_id": "MDEyOklzc3VlQ29tbWVudDM1MTE2ODI2Ng==", "user": {"login": "apaszke", "id": 4583066, "node_id": "MDQ6VXNlcjQ1ODMwNjY=", "avatar_url": "https://avatars3.githubusercontent.com/u/4583066?v=4", "gravatar_id": "", "url": "https://api.github.com/users/apaszke", "html_url": "https://github.com/apaszke", "followers_url": "https://api.github.com/users/apaszke/followers", "following_url": "https://api.github.com/users/apaszke/following{/other_user}", "gists_url": "https://api.github.com/users/apaszke/gists{/gist_id}", "starred_url": "https://api.github.com/users/apaszke/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/apaszke/subscriptions", "organizations_url": "https://api.github.com/users/apaszke/orgs", "repos_url": "https://api.github.com/users/apaszke/repos", "events_url": "https://api.github.com/users/apaszke/events{/privacy}", "received_events_url": "https://api.github.com/users/apaszke/received_events", "type": "User", "site_admin": false}, "created_at": "2017-12-12T19:33:44Z", "updated_at": "2017-12-12T19:33:44Z", "author_association": "MEMBER", "body_html": "<p>Well that's because iterable is just something you can iterate over, but e.g. iterating over a dict only gives you keys by default (iterable doesn't imply that you need to recover the full container structure). In general, every available container is different in some way, and we would probably want to keep these differences when enabling their use as containers for modules (e.g. <code>insert(n, item)</code> is only valid for lists, <code>keys</code> is only valid for dicts). I don't think there's a good way to unify them.</p>", "body_text": "Well that's because iterable is just something you can iterate over, but e.g. iterating over a dict only gives you keys by default (iterable doesn't imply that you need to recover the full container structure). In general, every available container is different in some way, and we would probably want to keep these differences when enabling their use as containers for modules (e.g. insert(n, item) is only valid for lists, keys is only valid for dicts). I don't think there's a good way to unify them.", "body": "Well that's because iterable is just something you can iterate over, but e.g. iterating over a dict only gives you keys by default (iterable doesn't imply that you need to recover the full container structure). In general, every available container is different in some way, and we would probably want to keep these differences when enabling their use as containers for modules (e.g. `insert(n, item)` is only valid for lists, `keys` is only valid for dicts). I don't think there's a good way to unify them."}