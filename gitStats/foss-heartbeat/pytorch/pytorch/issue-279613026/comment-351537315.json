{"url": "https://api.github.com/repos/pytorch/pytorch/issues/comments/351537315", "html_url": "https://github.com/pytorch/pytorch/issues/4048#issuecomment-351537315", "issue_url": "https://api.github.com/repos/pytorch/pytorch/issues/4048", "id": 351537315, "node_id": "MDEyOklzc3VlQ29tbWVudDM1MTUzNzMxNQ==", "user": {"login": "ozancaglayan", "id": 330946, "node_id": "MDQ6VXNlcjMzMDk0Ng==", "avatar_url": "https://avatars0.githubusercontent.com/u/330946?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ozancaglayan", "html_url": "https://github.com/ozancaglayan", "followers_url": "https://api.github.com/users/ozancaglayan/followers", "following_url": "https://api.github.com/users/ozancaglayan/following{/other_user}", "gists_url": "https://api.github.com/users/ozancaglayan/gists{/gist_id}", "starred_url": "https://api.github.com/users/ozancaglayan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ozancaglayan/subscriptions", "organizations_url": "https://api.github.com/users/ozancaglayan/orgs", "repos_url": "https://api.github.com/users/ozancaglayan/repos", "events_url": "https://api.github.com/users/ozancaglayan/events{/privacy}", "received_events_url": "https://api.github.com/users/ozancaglayan/received_events", "type": "User", "site_admin": false}, "created_at": "2017-12-13T21:54:23Z", "updated_at": "2017-12-13T21:54:32Z", "author_association": "CONTRIBUTOR", "body_html": "<p>I have a use case very similar to what has been described by <a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=1389330\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/rkaplan\">@rkaplan</a> . I may have N encoders and M decoders depending on the configuration file which defines several datasets let's say. I would like to select a specific encoder and/or decoder based on a string that'll change during training.</p>\n<p>The easiest way I'd imagine for doing this is sth like below in the <code>init</code> of the custom <code>Module</code>:</p>\n<pre><code>self.encoders = {}\nfor enc in requested_encoders:\n  setattr(self, 'encoder_%s' % enc, RNN(..))\n  self.encoders[enc] = getattr(self, 'encoder_%s' % enc)\n\n# Or alternatively if the Module could (semi-)automatically detect dicts\nself.encoders = {enc:RNN(..) for enc in requested_encoders}\n</code></pre>", "body_text": "I have a use case very similar to what has been described by @rkaplan . I may have N encoders and M decoders depending on the configuration file which defines several datasets let's say. I would like to select a specific encoder and/or decoder based on a string that'll change during training.\nThe easiest way I'd imagine for doing this is sth like below in the init of the custom Module:\nself.encoders = {}\nfor enc in requested_encoders:\n  setattr(self, 'encoder_%s' % enc, RNN(..))\n  self.encoders[enc] = getattr(self, 'encoder_%s' % enc)\n\n# Or alternatively if the Module could (semi-)automatically detect dicts\nself.encoders = {enc:RNN(..) for enc in requested_encoders}", "body": "I have a use case very similar to what has been described by @rkaplan . I may have N encoders and M decoders depending on the configuration file which defines several datasets let's say. I would like to select a specific encoder and/or decoder based on a string that'll change during training.\r\n\r\nThe easiest way I'd imagine for doing this is sth like below in the `init` of the custom `Module`:\r\n```\r\nself.encoders = {}\r\nfor enc in requested_encoders:\r\n  setattr(self, 'encoder_%s' % enc, RNN(..))\r\n  self.encoders[enc] = getattr(self, 'encoder_%s' % enc)\r\n\r\n# Or alternatively if the Module could (semi-)automatically detect dicts\r\nself.encoders = {enc:RNN(..) for enc in requested_encoders}\r\n```"}