{"url": "https://api.github.com/repos/pytorch/pytorch/issues/comments/350745562", "html_url": "https://github.com/pytorch/pytorch/issues/4048#issuecomment-350745562", "issue_url": "https://api.github.com/repos/pytorch/pytorch/issues/4048", "id": 350745562, "node_id": "MDEyOklzc3VlQ29tbWVudDM1MDc0NTU2Mg==", "user": {"login": "fmassa", "id": 9110200, "node_id": "MDQ6VXNlcjkxMTAyMDA=", "avatar_url": "https://avatars2.githubusercontent.com/u/9110200?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fmassa", "html_url": "https://github.com/fmassa", "followers_url": "https://api.github.com/users/fmassa/followers", "following_url": "https://api.github.com/users/fmassa/following{/other_user}", "gists_url": "https://api.github.com/users/fmassa/gists{/gist_id}", "starred_url": "https://api.github.com/users/fmassa/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fmassa/subscriptions", "organizations_url": "https://api.github.com/users/fmassa/orgs", "repos_url": "https://api.github.com/users/fmassa/repos", "events_url": "https://api.github.com/users/fmassa/events{/privacy}", "received_events_url": "https://api.github.com/users/fmassa/received_events", "type": "User", "site_admin": false}, "created_at": "2017-12-11T14:49:28Z", "updated_at": "2017-12-11T14:49:28Z", "author_association": "MEMBER", "body_html": "<p>Here is another proposal:</p>\n<p>Why not create a <code>nn.ModuleIterable</code> (or something like that) that wraps an iterable into a <code>nn.Module</code>, like what is currently done in <code>nn.ModuleList</code>, and deprecate <code>nn.ModuleList</code>?</p>\n<p>I'm not sure if it would be best to add a number of <code>nn.Module</code>s for different container types.</p>\n<p>What do you think?</p>", "body_text": "Here is another proposal:\nWhy not create a nn.ModuleIterable (or something like that) that wraps an iterable into a nn.Module, like what is currently done in nn.ModuleList, and deprecate nn.ModuleList?\nI'm not sure if it would be best to add a number of nn.Modules for different container types.\nWhat do you think?", "body": "Here is another proposal:\r\n\r\nWhy not create a `nn.ModuleIterable` (or something like that) that wraps an iterable into a `nn.Module`, like what is currently done in `nn.ModuleList`, and deprecate `nn.ModuleList`?\r\n\r\nI'm not sure if it would be best to add a number of `nn.Module`s for different container types.\r\n\r\nWhat do you think?"}