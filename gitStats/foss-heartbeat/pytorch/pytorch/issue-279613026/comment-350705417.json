{"url": "https://api.github.com/repos/pytorch/pytorch/issues/comments/350705417", "html_url": "https://github.com/pytorch/pytorch/issues/4048#issuecomment-350705417", "issue_url": "https://api.github.com/repos/pytorch/pytorch/issues/4048", "id": 350705417, "node_id": "MDEyOklzc3VlQ29tbWVudDM1MDcwNTQxNw==", "user": {"login": "dhpollack", "id": 368699, "node_id": "MDQ6VXNlcjM2ODY5OQ==", "avatar_url": "https://avatars0.githubusercontent.com/u/368699?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dhpollack", "html_url": "https://github.com/dhpollack", "followers_url": "https://api.github.com/users/dhpollack/followers", "following_url": "https://api.github.com/users/dhpollack/following{/other_user}", "gists_url": "https://api.github.com/users/dhpollack/gists{/gist_id}", "starred_url": "https://api.github.com/users/dhpollack/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dhpollack/subscriptions", "organizations_url": "https://api.github.com/users/dhpollack/orgs", "repos_url": "https://api.github.com/users/dhpollack/repos", "events_url": "https://api.github.com/users/dhpollack/events{/privacy}", "received_events_url": "https://api.github.com/users/dhpollack/received_events", "type": "User", "site_admin": false}, "created_at": "2017-12-11T12:03:27Z", "updated_at": "2017-12-11T12:03:27Z", "author_association": "CONTRIBUTOR", "body_html": "<p><a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=4583066\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/apaszke\">@apaszke</a>, I think you are right to say that the normal nn.Module should be used for this, but based on the documentation it is not obvious that one can use the nn.Module for this purpose.  I think if there was an example in the nn.ModuleList and/or nn.Module documentation that showed how nn.Module could be used as a \"ModuleList dictionary\", then one wouldn't need or request a nn.ModuleDict.</p>", "body_text": "@apaszke, I think you are right to say that the normal nn.Module should be used for this, but based on the documentation it is not obvious that one can use the nn.Module for this purpose.  I think if there was an example in the nn.ModuleList and/or nn.Module documentation that showed how nn.Module could be used as a \"ModuleList dictionary\", then one wouldn't need or request a nn.ModuleDict.", "body": "@apaszke, I think you are right to say that the normal nn.Module should be used for this, but based on the documentation it is not obvious that one can use the nn.Module for this purpose.  I think if there was an example in the nn.ModuleList and/or nn.Module documentation that showed how nn.Module could be used as a \"ModuleList dictionary\", then one wouldn't need or request a nn.ModuleDict."}