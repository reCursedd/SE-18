{"url": "https://api.github.com/repos/pytorch/pytorch/issues/6187", "repository_url": "https://api.github.com/repos/pytorch/pytorch", "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/6187/labels{/name}", "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/6187/comments", "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/6187/events", "html_url": "https://github.com/pytorch/pytorch/issues/6187", "id": 310493097, "node_id": "MDU6SXNzdWUzMTA0OTMwOTc=", "number": 6187, "title": "Pseudoinverse", "user": {"login": "el3ment", "id": 2135235, "node_id": "MDQ6VXNlcjIxMzUyMzU=", "avatar_url": "https://avatars2.githubusercontent.com/u/2135235?v=4", "gravatar_id": "", "url": "https://api.github.com/users/el3ment", "html_url": "https://github.com/el3ment", "followers_url": "https://api.github.com/users/el3ment/followers", "following_url": "https://api.github.com/users/el3ment/following{/other_user}", "gists_url": "https://api.github.com/users/el3ment/gists{/gist_id}", "starred_url": "https://api.github.com/users/el3ment/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/el3ment/subscriptions", "organizations_url": "https://api.github.com/users/el3ment/orgs", "repos_url": "https://api.github.com/users/el3ment/repos", "events_url": "https://api.github.com/users/el3ment/events{/privacy}", "received_events_url": "https://api.github.com/users/el3ment/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 424131849, "node_id": "MDU6TGFiZWw0MjQxMzE4NDk=", "url": "https://api.github.com/repos/pytorch/pytorch/labels/enhancement", "name": "enhancement", "color": "84b6eb", "default": true}, {"id": 443483881, "node_id": "MDU6TGFiZWw0NDM0ODM4ODE=", "url": "https://api.github.com/repos/pytorch/pytorch/labels/todo", "name": "todo", "color": "c2e0c6", "default": false}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 7, "created_at": "2018-04-02T14:02:19Z", "updated_at": "2018-07-05T16:13:28Z", "closed_at": "2018-07-05T16:13:28Z", "author_association": "NONE", "body_html": "<p>PyTorch has <code>torch.inverse</code>, but given the nature of noisy data-driven problems it would be useful to have a <code>torch.pinverse</code> option which is calculated using the SVD.</p>\n<p>As a side note -- it would also be great if these two functions (<code>.inverse</code> and the proposed <code>.pinverse</code>) were more optimized for a batch operation. As in, passing a tensor of shape (32, 10, 10) would perform 32 instances of inverse on 10x10 matricies, or passing in a tensor of shape (32, 8, 4, 4) would perform 32 * 8 inverses.</p>", "body_text": "PyTorch has torch.inverse, but given the nature of noisy data-driven problems it would be useful to have a torch.pinverse option which is calculated using the SVD.\nAs a side note -- it would also be great if these two functions (.inverse and the proposed .pinverse) were more optimized for a batch operation. As in, passing a tensor of shape (32, 10, 10) would perform 32 instances of inverse on 10x10 matricies, or passing in a tensor of shape (32, 8, 4, 4) would perform 32 * 8 inverses.", "body": "PyTorch has `torch.inverse`, but given the nature of noisy data-driven problems it would be useful to have a `torch.pinverse` option which is calculated using the SVD.\r\n\r\nAs a side note -- it would also be great if these two functions (`.inverse` and the proposed `.pinverse`) were more optimized for a batch operation. As in, passing a tensor of shape (32, 10, 10) would perform 32 instances of inverse on 10x10 matricies, or passing in a tensor of shape (32, 8, 4, 4) would perform 32 * 8 inverses.\r\n"}