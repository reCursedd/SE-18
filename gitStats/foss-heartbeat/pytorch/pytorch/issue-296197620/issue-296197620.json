{"url": "https://api.github.com/repos/pytorch/pytorch/issues/5177", "repository_url": "https://api.github.com/repos/pytorch/pytorch", "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/5177/labels{/name}", "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/5177/comments", "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/5177/events", "html_url": "https://github.com/pytorch/pytorch/issues/5177", "id": 296197620, "node_id": "MDU6SXNzdWUyOTYxOTc2MjA=", "number": 5177, "title": "Bool Array to FloatTensor Inconsistent behaviour", "user": {"login": "zafarali", "id": 6295292, "node_id": "MDQ6VXNlcjYyOTUyOTI=", "avatar_url": "https://avatars3.githubusercontent.com/u/6295292?v=4", "gravatar_id": "", "url": "https://api.github.com/users/zafarali", "html_url": "https://github.com/zafarali", "followers_url": "https://api.github.com/users/zafarali/followers", "following_url": "https://api.github.com/users/zafarali/following{/other_user}", "gists_url": "https://api.github.com/users/zafarali/gists{/gist_id}", "starred_url": "https://api.github.com/users/zafarali/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/zafarali/subscriptions", "organizations_url": "https://api.github.com/users/zafarali/orgs", "repos_url": "https://api.github.com/users/zafarali/repos", "events_url": "https://api.github.com/users/zafarali/events{/privacy}", "received_events_url": "https://api.github.com/users/zafarali/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-02-11T15:20:07Z", "updated_at": "2018-07-06T21:31:16Z", "closed_at": "2018-07-06T21:31:16Z", "author_association": "NONE", "body_html": "<ul>\n<li>OS: MacOS 10.13.1</li>\n<li>PyTorch version: 0.3.0.post4</li>\n<li>How you installed PyTorch (conda, pip, source): pip</li>\n<li>Python version: 3.6.1 |Anaconda 4.4.0 (x86_64)| (default, May 11 2017, 13:04:09) \\n[GCC 4.2.1 Compatible Apple LLVM 6.0 (clang-600.0.57)]</li>\n<li>CUDA/cuDNN version: N/A</li>\n<li>GPU models and configuration: N/A</li>\n<li>GCC version (if compiling from source): N/A</li>\n</ul>\n<p>Hi,<br>\nI was wondering if this was inconsistent behavior and if an error should be thrown in one of the cases:</p>\n<ul>\n<li><em>as expected</em>: <code>torch.from_numpy(np.array([1, 0, 0]))</code> produces  <code>[torch.LongTensor of size 3]</code> with elements <code>1 0 0</code></li>\n<li><em>as expected</em>: <code>torch.from_numpy(np.array([True, False, False]))</code> throws an error <code>RuntimeError: can't convert a given np.ndarray to a tensor - it has an invalid type. The only supported types are: double, float, int64, int32, and uint8.</code></li>\n<li><em>as expected</em>: <code>torch.FloatTensor(np.array([1, 0, 0]))</code> produces <code>[torch.FloatTensor of size 3]</code> with elements <code>1 0 0</code></li>\n<li><em>unexpected</em>: <code>torch.FloatTensor(np.array([True, False, False]))</code> produces <code>[torch.FloatTensor of size 3]</code> with elements<code>0.0000 -2.0000 -0.0000</code></li>\n</ul>\n<p>I feel like the last instance should throw an error.</p>", "body_text": "OS: MacOS 10.13.1\nPyTorch version: 0.3.0.post4\nHow you installed PyTorch (conda, pip, source): pip\nPython version: 3.6.1 |Anaconda 4.4.0 (x86_64)| (default, May 11 2017, 13:04:09) \\n[GCC 4.2.1 Compatible Apple LLVM 6.0 (clang-600.0.57)]\nCUDA/cuDNN version: N/A\nGPU models and configuration: N/A\nGCC version (if compiling from source): N/A\n\nHi,\nI was wondering if this was inconsistent behavior and if an error should be thrown in one of the cases:\n\nas expected: torch.from_numpy(np.array([1, 0, 0])) produces  [torch.LongTensor of size 3] with elements 1 0 0\nas expected: torch.from_numpy(np.array([True, False, False])) throws an error RuntimeError: can't convert a given np.ndarray to a tensor - it has an invalid type. The only supported types are: double, float, int64, int32, and uint8.\nas expected: torch.FloatTensor(np.array([1, 0, 0])) produces [torch.FloatTensor of size 3] with elements 1 0 0\nunexpected: torch.FloatTensor(np.array([True, False, False])) produces [torch.FloatTensor of size 3] with elements0.0000 -2.0000 -0.0000\n\nI feel like the last instance should throw an error.", "body": "\r\n- OS: MacOS 10.13.1 \r\n- PyTorch version: 0.3.0.post4\r\n- How you installed PyTorch (conda, pip, source): pip\r\n- Python version: 3.6.1 |Anaconda 4.4.0 (x86_64)| (default, May 11 2017, 13:04:09) \\n[GCC 4.2.1 Compatible Apple LLVM 6.0 (clang-600.0.57)]\r\n- CUDA/cuDNN version: N/A\r\n- GPU models and configuration: N/A\r\n- GCC version (if compiling from source): N/A\r\n\r\n\r\nHi,\r\nI was wondering if this was inconsistent behavior and if an error should be thrown in one of the cases:\r\n\r\n- *as expected*: `torch.from_numpy(np.array([1, 0, 0]))` produces  `[torch.LongTensor of size 3]` with elements `1 0 0`\r\n- *as expected*: `torch.from_numpy(np.array([True, False, False]))` throws an error `RuntimeError: can't convert a given np.ndarray to a tensor - it has an invalid type. The only supported types are: double, float, int64, int32, and uint8.` \r\n- *as expected*: `torch.FloatTensor(np.array([1, 0, 0]))` produces `[torch.FloatTensor of size 3]` with elements `1 0 0`\r\n- *unexpected*: `torch.FloatTensor(np.array([True, False, False]))` produces `[torch.FloatTensor of size 3]` with elements`0.0000 -2.0000 -0.0000`\r\n\r\nI feel like the last instance should throw an error. \r\n\r\n\r\n"}