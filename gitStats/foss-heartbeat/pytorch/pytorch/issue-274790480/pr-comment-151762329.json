{"url": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/151762329", "pull_request_review_id": 77528339, "id": 151762329, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE1MTc2MjMyOQ==", "diff_hunk": "@@ -25,6 +25,23 @@ void enableProfiler(ProfilerState new_state) {\n   }\n   state = new_state;\n   mark(\"__start_profile\");\n+\n+#ifdef WITH_CUDA\n+  if(state == ProfilerState::CUDA) {\n+    // cuda events must be on the same device, so we need a start event recorded\n+    // for each gpu\n+    int old_device;\n+    // this is not exactly AutoGPU because we need to iterate through each GPU\n+    TORCH_CUDA_CHECK(cudaGetDevice(&old_device));", "path": "torch/csrc/autograd/profiler.cpp", "position": null, "original_position": 11, "commit_id": "84c2e653ce154ea5b01797bed9dc4612266a6672", "original_commit_id": "ebf3f9336465b145e167dbf8419e5abe00583e64", "user": {"login": "zdevito", "id": 370202, "node_id": "MDQ6VXNlcjM3MDIwMg==", "avatar_url": "https://avatars0.githubusercontent.com/u/370202?v=4", "gravatar_id": "", "url": "https://api.github.com/users/zdevito", "html_url": "https://github.com/zdevito", "followers_url": "https://api.github.com/users/zdevito/followers", "following_url": "https://api.github.com/users/zdevito/following{/other_user}", "gists_url": "https://api.github.com/users/zdevito/gists{/gist_id}", "starred_url": "https://api.github.com/users/zdevito/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/zdevito/subscriptions", "organizations_url": "https://api.github.com/users/zdevito/orgs", "repos_url": "https://api.github.com/users/zdevito/repos", "events_url": "https://api.github.com/users/zdevito/events{/privacy}", "received_events_url": "https://api.github.com/users/zdevito/received_events", "type": "User", "site_admin": false}, "body": "I don't think it works. If I don't specify a _new_ device when I want to save the old one, it will just no-op. If I use AutoGPU everywhere, then I make twice as many setDevice calls.\r\n\r\n```\r\n  inline void setDevice(int device) {\r\n#ifdef WITH_CUDA\r\n    if (device == -1) {\r\n      return;\r\n    }\r\n```", "created_at": "2017-11-17T18:53:52Z", "updated_at": "2018-11-23T15:36:39Z", "html_url": "https://github.com/pytorch/pytorch/pull/3754#discussion_r151762329", "pull_request_url": "https://api.github.com/repos/pytorch/pytorch/pulls/3754", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/151762329"}, "html": {"href": "https://github.com/pytorch/pytorch/pull/3754#discussion_r151762329"}, "pull_request": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/3754"}}, "body_html": "<p>I don't think it works. If I don't specify a <em>new</em> device when I want to save the old one, it will just no-op. If I use AutoGPU everywhere, then I make twice as many setDevice calls.</p>\n<pre><code>  inline void setDevice(int device) {\n#ifdef WITH_CUDA\n    if (device == -1) {\n      return;\n    }\n</code></pre>", "body_text": "I don't think it works. If I don't specify a new device when I want to save the old one, it will just no-op. If I use AutoGPU everywhere, then I make twice as many setDevice calls.\n  inline void setDevice(int device) {\n#ifdef WITH_CUDA\n    if (device == -1) {\n      return;\n    }", "in_reply_to_id": 151660340}