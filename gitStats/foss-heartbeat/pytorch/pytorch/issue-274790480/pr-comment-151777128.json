{"url": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/151777128", "pull_request_review_id": 77546241, "id": 151777128, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE1MTc3NzEyOA==", "diff_hunk": "@@ -397,16 +403,23 @@ def __missing__(self, key):\n def parse_cpu_trace(thread_records):\n     next_id = 0\n     start_record = None\n+    cuda_records = {}\n     functions = []\n     record_stack = []\n     string_table = StringTable()\n     # '__start_profile' is not guarenteed to be first, so we must find it here\n     for record in itertools.chain(*thread_records):\n         if record.name() == '__start_profile':\n             start_record = record\n-            break\n+        elif record.name() == '__cuda_start':\n+            cuda_records[record.device()] = record\n     assert start_record is not None\n \n+    # we don't know the correlation between CUDA/CPU time,\n+    # instead, we just make sure the corresponding cuda kernels are shifted\n+    # in time so they happen _after_ their CPU time, which is not\n+    # alway show they get recorded.\n+    max_shift = 0", "path": "torch/autograd/profiler.py", "position": null, "original_position": 97, "commit_id": "84c2e653ce154ea5b01797bed9dc4612266a6672", "original_commit_id": "ebf3f9336465b145e167dbf8419e5abe00583e64", "user": {"login": "apaszke", "id": 4583066, "node_id": "MDQ6VXNlcjQ1ODMwNjY=", "avatar_url": "https://avatars3.githubusercontent.com/u/4583066?v=4", "gravatar_id": "", "url": "https://api.github.com/users/apaszke", "html_url": "https://github.com/apaszke", "followers_url": "https://api.github.com/users/apaszke/followers", "following_url": "https://api.github.com/users/apaszke/following{/other_user}", "gists_url": "https://api.github.com/users/apaszke/gists{/gist_id}", "starred_url": "https://api.github.com/users/apaszke/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/apaszke/subscriptions", "organizations_url": "https://api.github.com/users/apaszke/orgs", "repos_url": "https://api.github.com/users/apaszke/repos", "events_url": "https://api.github.com/users/apaszke/events{/privacy}", "received_events_url": "https://api.github.com/users/apaszke/received_events", "type": "User", "site_admin": false}, "body": "It doesn\u2019t violate causality, but having aligned timelines is incredibly useful - seeing how far ahead the CPU is compared to the GPU is one of the most important metrics. There is a function to get the GPU time somewhere, I can dig it up", "created_at": "2017-11-17T20:01:01Z", "updated_at": "2018-11-23T15:36:39Z", "html_url": "https://github.com/pytorch/pytorch/pull/3754#discussion_r151777128", "pull_request_url": "https://api.github.com/repos/pytorch/pytorch/pulls/3754", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/151777128"}, "html": {"href": "https://github.com/pytorch/pytorch/pull/3754#discussion_r151777128"}, "pull_request": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/3754"}}, "body_html": "<p>It doesn\u2019t violate causality, but having aligned timelines is incredibly useful - seeing how far ahead the CPU is compared to the GPU is one of the most important metrics. There is a function to get the GPU time somewhere, I can dig it up</p>", "body_text": "It doesn\u2019t violate causality, but having aligned timelines is incredibly useful - seeing how far ahead the CPU is compared to the GPU is one of the most important metrics. There is a function to get the GPU time somewhere, I can dig it up", "in_reply_to_id": 151659740}