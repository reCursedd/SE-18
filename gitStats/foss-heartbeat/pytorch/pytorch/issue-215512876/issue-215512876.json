{"url": "https://api.github.com/repos/pytorch/pytorch/issues/1051", "repository_url": "https://api.github.com/repos/pytorch/pytorch", "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/1051/labels{/name}", "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/1051/comments", "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/1051/events", "html_url": "https://github.com/pytorch/pytorch/issues/1051", "id": 215512876, "node_id": "MDU6SXNzdWUyMTU1MTI4NzY=", "number": 1051, "title": "DataParallel does not correctly handle running variables in batch norm", "user": {"login": "ngimel", "id": 15841449, "node_id": "MDQ6VXNlcjE1ODQxNDQ5", "avatar_url": "https://avatars3.githubusercontent.com/u/15841449?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ngimel", "html_url": "https://github.com/ngimel", "followers_url": "https://api.github.com/users/ngimel/followers", "following_url": "https://api.github.com/users/ngimel/following{/other_user}", "gists_url": "https://api.github.com/users/ngimel/gists{/gist_id}", "starred_url": "https://api.github.com/users/ngimel/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ngimel/subscriptions", "organizations_url": "https://api.github.com/users/ngimel/orgs", "repos_url": "https://api.github.com/users/ngimel/repos", "events_url": "https://api.github.com/users/ngimel/events{/privacy}", "received_events_url": "https://api.github.com/users/ngimel/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 8, "created_at": "2017-03-20T18:25:02Z", "updated_at": "2017-07-14T04:44:40Z", "closed_at": null, "author_association": "CONTRIBUTOR", "body_html": "<p>Running variables accumulated on non-master GPUs are lost, and in the next step running variables accumulated on the master GPU are broadcast to non-master GPUs. Convergence-wise it does not make much difference;-), but it is still a bug.<br>\nAlso, device_ids in DataParallel should be checked to not contain the same values, otherwise stuff like this will break:<br>\n<a href=\"https://github.com/pytorch/pytorch/blob/master/torch/backends/cudnn/rnn.py#L38-L43\">https://github.com/pytorch/pytorch/blob/master/torch/backends/cudnn/rnn.py#L38-L43</a><br>\nIf creating replicas on the same GPU is actually intended to be supported, then the above referenced lines that create a dictionary indexed by current_device constitute a bug.<br>\nBoth this issues ultimately are caused but not well defined behaviour of DataParallel with respect to stateful modules, of which batchnorm and recurrent nets with cudnn backend are examples.</p>", "body_text": "Running variables accumulated on non-master GPUs are lost, and in the next step running variables accumulated on the master GPU are broadcast to non-master GPUs. Convergence-wise it does not make much difference;-), but it is still a bug.\nAlso, device_ids in DataParallel should be checked to not contain the same values, otherwise stuff like this will break:\nhttps://github.com/pytorch/pytorch/blob/master/torch/backends/cudnn/rnn.py#L38-L43\nIf creating replicas on the same GPU is actually intended to be supported, then the above referenced lines that create a dictionary indexed by current_device constitute a bug.\nBoth this issues ultimately are caused but not well defined behaviour of DataParallel with respect to stateful modules, of which batchnorm and recurrent nets with cudnn backend are examples.", "body": "Running variables accumulated on non-master GPUs are lost, and in the next step running variables accumulated on the master GPU are broadcast to non-master GPUs. Convergence-wise it does not make much difference;-), but it is still a bug. \r\nAlso, device_ids in DataParallel should be checked to not contain the same values, otherwise stuff like this will break: \r\nhttps://github.com/pytorch/pytorch/blob/master/torch/backends/cudnn/rnn.py#L38-L43\r\nIf creating replicas on the same GPU is actually intended to be supported, then the above referenced lines that create a dictionary indexed by current_device constitute a bug. \r\nBoth this issues ultimately are caused but not well defined behaviour of DataParallel with respect to stateful modules, of which batchnorm and recurrent nets with cudnn backend are examples. "}