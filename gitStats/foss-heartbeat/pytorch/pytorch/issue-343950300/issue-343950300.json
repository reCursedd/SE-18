{"url": "https://api.github.com/repos/pytorch/pytorch/issues/9753", "repository_url": "https://api.github.com/repos/pytorch/pytorch", "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/9753/labels{/name}", "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/9753/comments", "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/9753/events", "html_url": "https://github.com/pytorch/pytorch/issues/9753", "id": 343950300, "node_id": "MDU6SXNzdWUzNDM5NTAzMDA=", "number": 9753, "title": "dataloader stuck at sched_yield =0", "user": {"login": "xuchong", "id": 8072215, "node_id": "MDQ6VXNlcjgwNzIyMTU=", "avatar_url": "https://avatars2.githubusercontent.com/u/8072215?v=4", "gravatar_id": "", "url": "https://api.github.com/users/xuchong", "html_url": "https://github.com/xuchong", "followers_url": "https://api.github.com/users/xuchong/followers", "following_url": "https://api.github.com/users/xuchong/following{/other_user}", "gists_url": "https://api.github.com/users/xuchong/gists{/gist_id}", "starred_url": "https://api.github.com/users/xuchong/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/xuchong/subscriptions", "organizations_url": "https://api.github.com/users/xuchong/orgs", "repos_url": "https://api.github.com/users/xuchong/repos", "events_url": "https://api.github.com/users/xuchong/events{/privacy}", "received_events_url": "https://api.github.com/users/xuchong/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2018-07-24T09:11:48Z", "updated_at": "2018-07-24T09:11:48Z", "closed_at": null, "author_association": "NONE", "body_html": "<p><strong>My docker envs</strong>:<br>\nDescription:    Debian GNU/Linux 8.9 (jessie)<br>\nPytorch: 0.4.0<br>\ncuda: 8.0<br>\npython: 3.6.5</p>\n<p>After a few epochs of training and validation,  dataloader of  validation suddenly stuck at sched_yield =0. I set dataloader worker = 10. I can see one subprocess use CPU at 100% and other 9 processes just use CPU at 0%. RAM and GPU memory doesn't release. The whole program just hangs up.<br>\n<strong>More details</strong>:  My implementation of Dataset just reads image and meta information from multiple lmdb files. I open the lmdb env in Dataset <strong>init</strong> function,</p>\n<pre><code>self.env = lmdb.open(self.pic_set_path, max_readers=1,\n                                 readonly=True, lock=False,\n                                 readahead=False, meminit=False)\n</code></pre>\n<p>and in <strong>getitem</strong> function, i get information just like this:</p>\n<pre><code>with self.env.begin(write=False) as txn:\n            info = txn.get(image_name)\n</code></pre>", "body_text": "My docker envs:\nDescription:    Debian GNU/Linux 8.9 (jessie)\nPytorch: 0.4.0\ncuda: 8.0\npython: 3.6.5\nAfter a few epochs of training and validation,  dataloader of  validation suddenly stuck at sched_yield =0. I set dataloader worker = 10. I can see one subprocess use CPU at 100% and other 9 processes just use CPU at 0%. RAM and GPU memory doesn't release. The whole program just hangs up.\nMore details:  My implementation of Dataset just reads image and meta information from multiple lmdb files. I open the lmdb env in Dataset init function,\nself.env = lmdb.open(self.pic_set_path, max_readers=1,\n                                 readonly=True, lock=False,\n                                 readahead=False, meminit=False)\n\nand in getitem function, i get information just like this:\nwith self.env.begin(write=False) as txn:\n            info = txn.get(image_name)", "body": "**My docker envs**:\r\nDescription:    Debian GNU/Linux 8.9 (jessie)\r\nPytorch: 0.4.0\r\ncuda: 8.0\r\npython: 3.6.5\r\n\r\nAfter a few epochs of training and validation,  dataloader of  validation suddenly stuck at sched_yield =0. I set dataloader worker = 10. I can see one subprocess use CPU at 100% and other 9 processes just use CPU at 0%. RAM and GPU memory doesn't release. The whole program just hangs up.\r\n__More details__:  My implementation of Dataset just reads image and meta information from multiple lmdb files. I open the lmdb env in Dataset __init__ function, \r\n```\r\nself.env = lmdb.open(self.pic_set_path, max_readers=1,\r\n                                 readonly=True, lock=False,\r\n                                 readahead=False, meminit=False)\r\n```\r\nand in __getitem__ function, i get information just like this:\r\n```\r\nwith self.env.begin(write=False) as txn:\r\n            info = txn.get(image_name)\r\n```"}