{"url": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/192629152", "pull_request_review_id": 125438234, "id": 192629152, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5MjYyOTE1Mg==", "diff_hunk": "@@ -236,7 +240,7 @@ bool THC_pointwiseApply1(THCState* state,\n   kernelPointwiseApply1<Op,                                             \\\n                         typename TensorUtils<TensorTypeA>::DataType,    \\\n                         TYPE, A>                                        \\\n-    <<<grid, block, 0, THCState_getCurrentStream(state)>>>(             \\\n+    <<<grid, block, 0, THCState_getCurrentStreamOnDevice(state, curDevice)>>>(             \\", "path": "aten/src/THC/THCApply.cuh", "position": null, "original_position": 39, "commit_id": "b68a62c999efca9b92187647242c21cd9d06952f", "original_commit_id": "4fa4d3e8c372eeed9d597d05549d00844d1b7714", "user": {"login": "ngimel", "id": 15841449, "node_id": "MDQ6VXNlcjE1ODQxNDQ5", "avatar_url": "https://avatars3.githubusercontent.com/u/15841449?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ngimel", "html_url": "https://github.com/ngimel", "followers_url": "https://api.github.com/users/ngimel/followers", "following_url": "https://api.github.com/users/ngimel/following{/other_user}", "gists_url": "https://api.github.com/users/ngimel/gists{/gist_id}", "starred_url": "https://api.github.com/users/ngimel/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ngimel/subscriptions", "organizations_url": "https://api.github.com/users/ngimel/orgs", "repos_url": "https://api.github.com/users/ngimel/repos", "events_url": "https://api.github.com/users/ngimel/events{/privacy}", "received_events_url": "https://api.github.com/users/ngimel/received_events", "type": "User", "site_admin": false}, "body": "It may be weird, but it's been like this for a long time - getApplyGrid would return false which would either be caught right away by THArgCheck, or propagated further to be caught one stack layer up. Sure, I'll add AT_CHECK and fix all getApplyGrid calls so that curDevice argument is not optional. ", "created_at": "2018-06-04T05:23:16Z", "updated_at": "2018-11-23T15:44:54Z", "html_url": "https://github.com/pytorch/pytorch/pull/8089#discussion_r192629152", "pull_request_url": "https://api.github.com/repos/pytorch/pytorch/pulls/8089", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/192629152"}, "html": {"href": "https://github.com/pytorch/pytorch/pull/8089#discussion_r192629152"}, "pull_request": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/8089"}}, "body_html": "<p>It may be weird, but it's been like this for a long time - getApplyGrid would return false which would either be caught right away by THArgCheck, or propagated further to be caught one stack layer up. Sure, I'll add AT_CHECK and fix all getApplyGrid calls so that curDevice argument is not optional.</p>", "body_text": "It may be weird, but it's been like this for a long time - getApplyGrid would return false which would either be caught right away by THArgCheck, or propagated further to be caught one stack layer up. Sure, I'll add AT_CHECK and fix all getApplyGrid calls so that curDevice argument is not optional.", "in_reply_to_id": 192603702}