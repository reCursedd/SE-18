{"url": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/209077778", "pull_request_review_id": 145017219, "id": 209077778, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwOTA3Nzc3OA==", "diff_hunk": "@@ -0,0 +1,78 @@\n+#define CATCH_CONFIG_MAIN\n+#include \"catch.hpp\"\n+\n+#include \"ATen/ATen.h\"\n+#include \"ATen/cuda/CUDANumerics.cuh\"\n+#include \"cuda.h\"\n+#include \"cuda_fp16.h\"\n+#include \"cuda_runtime.h\"\n+\n+#include <assert.h>\n+\n+using namespace at;\n+\n+__host__ __device__ void test(){\n+  \n+  // test half construction and implicit conversions in device\n+  assert(Half(3) == Half(3.0f));\n+  assert(static_cast<Half>(3.0f) == Half(3.0f));\n+  // there is no float <=> __half implicit conversion\n+  assert(static_cast<Half>(3.0f) == 3.0f);\n+\n+  // asserting if the  functions used on \n+  // half types give almost equivalent results when using\n+  //  functions on double.\n+  // The purpose of these asserts are to test the device side\n+  // half API for the common mathematical functions.\n+  // Note: When calling std math functions from device, don't\n+  // use the std namespace, but just \"::\" so that the function\n+  // gets resolved from nvcc math_functions.hpp", "path": "aten/src/ATen/test/cuda_half_test.cu", "position": 34, "original_position": 29, "commit_id": "076eb84f56369b3c1e4b1ee96961e3327aaa445c", "original_commit_id": "d0bc610cc8dc12b386e3a3768e3af15b751cec90", "user": {"login": "colesbury", "id": 655866, "node_id": "MDQ6VXNlcjY1NTg2Ng==", "avatar_url": "https://avatars1.githubusercontent.com/u/655866?v=4", "gravatar_id": "", "url": "https://api.github.com/users/colesbury", "html_url": "https://github.com/colesbury", "followers_url": "https://api.github.com/users/colesbury/followers", "following_url": "https://api.github.com/users/colesbury/following{/other_user}", "gists_url": "https://api.github.com/users/colesbury/gists{/gist_id}", "starred_url": "https://api.github.com/users/colesbury/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/colesbury/subscriptions", "organizations_url": "https://api.github.com/users/colesbury/orgs", "repos_url": "https://api.github.com/users/colesbury/repos", "events_url": "https://api.github.com/users/colesbury/events{/privacy}", "received_events_url": "https://api.github.com/users/colesbury/received_events", "type": "User", "site_admin": false}, "body": "What happens if you use the std:: qualifier?", "created_at": "2018-08-09T21:01:56Z", "updated_at": "2018-11-23T15:49:04Z", "html_url": "https://github.com/pytorch/pytorch/pull/10301#discussion_r209077778", "pull_request_url": "https://api.github.com/repos/pytorch/pytorch/pulls/10301", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/209077778"}, "html": {"href": "https://github.com/pytorch/pytorch/pull/10301#discussion_r209077778"}, "pull_request": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/10301"}}, "body_html": "<p>What happens if you use the std:: qualifier?</p>", "body_text": "What happens if you use the std:: qualifier?"}