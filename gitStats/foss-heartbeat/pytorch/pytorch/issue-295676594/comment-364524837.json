{"url": "https://api.github.com/repos/pytorch/pytorch/issues/comments/364524837", "html_url": "https://github.com/pytorch/pytorch/pull/5144#issuecomment-364524837", "issue_url": "https://api.github.com/repos/pytorch/pytorch/issues/5144", "id": 364524837, "node_id": "MDEyOklzc3VlQ29tbWVudDM2NDUyNDgzNw==", "user": {"login": "gchanan", "id": 3768583, "node_id": "MDQ6VXNlcjM3Njg1ODM=", "avatar_url": "https://avatars2.githubusercontent.com/u/3768583?v=4", "gravatar_id": "", "url": "https://api.github.com/users/gchanan", "html_url": "https://github.com/gchanan", "followers_url": "https://api.github.com/users/gchanan/followers", "following_url": "https://api.github.com/users/gchanan/following{/other_user}", "gists_url": "https://api.github.com/users/gchanan/gists{/gist_id}", "starred_url": "https://api.github.com/users/gchanan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/gchanan/subscriptions", "organizations_url": "https://api.github.com/users/gchanan/orgs", "repos_url": "https://api.github.com/users/gchanan/repos", "events_url": "https://api.github.com/users/gchanan/events{/privacy}", "received_events_url": "https://api.github.com/users/gchanan/received_events", "type": "User", "site_admin": false}, "created_at": "2018-02-09T18:54:27Z", "updated_at": "2018-02-09T18:54:27Z", "author_association": "CONTRIBUTOR", "body_html": "<p>The current plan is to leave the old ones (i.e. the ones that take both data and sizes) around for backwards compatibility reasons.  This <code>new_tensor</code> function is supposed to match a new <code>torch.tensor</code> function, which is just <code>torch.autograd.variable</code> renamed once we merge variable and tensor.  Similarly, we'll introduce size based factories to variables/tensors such as <code>new_ones</code>, <code>new_empty</code>, that match <code>torch.ones</code>, <code>torch.empty</code>.</p>", "body_text": "The current plan is to leave the old ones (i.e. the ones that take both data and sizes) around for backwards compatibility reasons.  This new_tensor function is supposed to match a new torch.tensor function, which is just torch.autograd.variable renamed once we merge variable and tensor.  Similarly, we'll introduce size based factories to variables/tensors such as new_ones, new_empty, that match torch.ones, torch.empty.", "body": "The current plan is to leave the old ones (i.e. the ones that take both data and sizes) around for backwards compatibility reasons.  This `new_tensor` function is supposed to match a new `torch.tensor` function, which is just `torch.autograd.variable` renamed once we merge variable and tensor.  Similarly, we'll introduce size based factories to variables/tensors such as `new_ones`, `new_empty`, that match `torch.ones`, `torch.empty`."}