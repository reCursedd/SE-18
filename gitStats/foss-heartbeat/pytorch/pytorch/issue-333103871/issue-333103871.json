{"url": "https://api.github.com/repos/pytorch/pytorch/issues/8591", "repository_url": "https://api.github.com/repos/pytorch/pytorch", "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/8591/labels{/name}", "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/8591/comments", "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/8591/events", "html_url": "https://github.com/pytorch/pytorch/pull/8591", "id": 333103871, "node_id": "MDExOlB1bGxSZXF1ZXN0MTk1NDAyMDQ0", "number": 8591, "title": "Implement nn.functional.interpolate based on upsample.", "user": {"login": "ailzhang", "id": 5248122, "node_id": "MDQ6VXNlcjUyNDgxMjI=", "avatar_url": "https://avatars2.githubusercontent.com/u/5248122?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ailzhang", "html_url": "https://github.com/ailzhang", "followers_url": "https://api.github.com/users/ailzhang/followers", "following_url": "https://api.github.com/users/ailzhang/following{/other_user}", "gists_url": "https://api.github.com/users/ailzhang/gists{/gist_id}", "starred_url": "https://api.github.com/users/ailzhang/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ailzhang/subscriptions", "organizations_url": "https://api.github.com/users/ailzhang/orgs", "repos_url": "https://api.github.com/users/ailzhang/repos", "events_url": "https://api.github.com/users/ailzhang/events{/privacy}", "received_events_url": "https://api.github.com/users/ailzhang/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": {"login": "SsnL", "id": 5674597, "node_id": "MDQ6VXNlcjU2NzQ1OTc=", "avatar_url": "https://avatars2.githubusercontent.com/u/5674597?v=4", "gravatar_id": "", "url": "https://api.github.com/users/SsnL", "html_url": "https://github.com/SsnL", "followers_url": "https://api.github.com/users/SsnL/followers", "following_url": "https://api.github.com/users/SsnL/following{/other_user}", "gists_url": "https://api.github.com/users/SsnL/gists{/gist_id}", "starred_url": "https://api.github.com/users/SsnL/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/SsnL/subscriptions", "organizations_url": "https://api.github.com/users/SsnL/orgs", "repos_url": "https://api.github.com/users/SsnL/repos", "events_url": "https://api.github.com/users/SsnL/events{/privacy}", "received_events_url": "https://api.github.com/users/SsnL/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "SsnL", "id": 5674597, "node_id": "MDQ6VXNlcjU2NzQ1OTc=", "avatar_url": "https://avatars2.githubusercontent.com/u/5674597?v=4", "gravatar_id": "", "url": "https://api.github.com/users/SsnL", "html_url": "https://github.com/SsnL", "followers_url": "https://api.github.com/users/SsnL/followers", "following_url": "https://api.github.com/users/SsnL/following{/other_user}", "gists_url": "https://api.github.com/users/SsnL/gists{/gist_id}", "starred_url": "https://api.github.com/users/SsnL/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/SsnL/subscriptions", "organizations_url": "https://api.github.com/users/SsnL/orgs", "repos_url": "https://api.github.com/users/SsnL/repos", "events_url": "https://api.github.com/users/SsnL/events{/privacy}", "received_events_url": "https://api.github.com/users/SsnL/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 11, "created_at": "2018-06-18T00:06:54Z", "updated_at": "2018-11-23T15:46:38Z", "closed_at": "2018-07-09T17:45:05Z", "author_association": "CONTRIBUTOR", "pull_request": {"url": "https://api.github.com/repos/pytorch/pytorch/pulls/8591", "html_url": "https://github.com/pytorch/pytorch/pull/8591", "diff_url": "https://github.com/pytorch/pytorch/pull/8591.diff", "patch_url": "https://github.com/pytorch/pytorch/pull/8591.patch"}, "body_html": "<p>This PR addresses <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load issue title\" data-id=\"305741782\" data-permission-text=\"Issue title is private\" data-url=\"https://github.com/pytorch/pytorch/issues/5823\" data-hovercard-type=\"issue\" data-hovercard-url=\"/pytorch/pytorch/issues/5823/hovercard\" href=\"https://github.com/pytorch/pytorch/issues/5823\">#5823</a>.</p>\n<ul>\n<li>\n<p>fix docstring: upsample doesn't support LongTensor</p>\n</li>\n<li>\n<p>Enable float scale up &amp; down sampling for linear/bilinear/trilinear modes. (following <a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=5674597\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/SsnL\">@SsnL</a> 's commit)</p>\n</li>\n<li>\n<p>Enable float scale up &amp; down sampling for nearest mode. Note that our implementation is slightly different from TF that there's actually no \"align_corners\" concept in this mode.</p>\n</li>\n<li>\n<p>Add a new interpolate function API to replace upsample. Add deprecate warning for upsample.</p>\n</li>\n<li>\n<p>Add an area mode which is essentially Adaptive_average_pooling into resize_image.</p>\n</li>\n<li>\n<p>Add test cases for interpolate in test_nn.py</p>\n</li>\n<li>\n<p>Add a few comments to help understand *linear interpolation code.</p>\n</li>\n<li>\n<p>There is only \"*cubic\" mode missing in resize_images API which is pretty useful in practice. And it's labeled as hackamonth here <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load issue title\" data-id=\"228569550\" data-permission-text=\"Issue title is private\" data-url=\"https://github.com/pytorch/pytorch/issues/1552\" data-hovercard-type=\"issue\" data-hovercard-url=\"/pytorch/pytorch/issues/1552/hovercard\" href=\"https://github.com/pytorch/pytorch/issues/1552\">#1552</a>. I discussed with <a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=5674597\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/SsnL\">@SsnL</a> that we probably want to implement all new ops in ATen instead of THNN/THCUNN. Depending on the priority, I could either put it in my queue or leave it for a HAMer.</p>\n</li>\n<li>\n<p>After the change, the files named as <em>Upsampling</em>.c works for both up/down sampling. I could rename the files if needed.</p>\n</li>\n</ul>\n<p>cc: <a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=5674597\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/SsnL\">@SsnL</a> <a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=9110200\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/fmassa\">@fmassa</a></p>", "body_text": "This PR addresses #5823.\n\n\nfix docstring: upsample doesn't support LongTensor\n\n\nEnable float scale up & down sampling for linear/bilinear/trilinear modes. (following @SsnL 's commit)\n\n\nEnable float scale up & down sampling for nearest mode. Note that our implementation is slightly different from TF that there's actually no \"align_corners\" concept in this mode.\n\n\nAdd a new interpolate function API to replace upsample. Add deprecate warning for upsample.\n\n\nAdd an area mode which is essentially Adaptive_average_pooling into resize_image.\n\n\nAdd test cases for interpolate in test_nn.py\n\n\nAdd a few comments to help understand *linear interpolation code.\n\n\nThere is only \"*cubic\" mode missing in resize_images API which is pretty useful in practice. And it's labeled as hackamonth here #1552. I discussed with @SsnL that we probably want to implement all new ops in ATen instead of THNN/THCUNN. Depending on the priority, I could either put it in my queue or leave it for a HAMer.\n\n\nAfter the change, the files named as Upsampling.c works for both up/down sampling. I could rename the files if needed.\n\n\ncc: @SsnL @fmassa", "body": "This PR addresses #5823. \r\n\r\n* fix docstring: upsample doesn't support LongTensor\r\n\r\n* Enable float scale up & down sampling for linear/bilinear/trilinear modes. (following @SsnL 's commit)\r\n\r\n* Enable float scale up & down sampling for nearest mode. Note that our implementation is slightly different from TF that there's actually no \"align_corners\" concept in this mode.\r\n\r\n* Add a new interpolate function API to replace upsample. Add deprecate warning for upsample.\r\n\r\n* Add an area mode which is essentially Adaptive_average_pooling into resize_image.\r\n\r\n* Add test cases for interpolate in test_nn.py\r\n\r\n* Add a few comments to help understand *linear interpolation code.\r\n\r\n* There is only \"*cubic\" mode missing in resize_images API which is pretty useful in practice. And it's labeled as hackamonth here #1552. I discussed with @SsnL that we probably want to implement all new ops in ATen instead of THNN/THCUNN. Depending on the priority, I could either put it in my queue or leave it for a HAMer. \r\n\r\n* After the change, the files named as *Upsampling*.c works for both up/down sampling. I could rename the files if needed. \r\n\r\ncc: @SsnL @fmassa "}