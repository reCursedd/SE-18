{"url": "https://api.github.com/repos/pytorch/pytorch/issues/comments/429366326", "html_url": "https://github.com/pytorch/pytorch/issues/12607#issuecomment-429366326", "issue_url": "https://api.github.com/repos/pytorch/pytorch/issues/12607", "id": 429366326, "node_id": "MDEyOklzc3VlQ29tbWVudDQyOTM2NjMyNg==", "user": {"login": "mhubii", "id": 26366414, "node_id": "MDQ6VXNlcjI2MzY2NDE0", "avatar_url": "https://avatars0.githubusercontent.com/u/26366414?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mhubii", "html_url": "https://github.com/mhubii", "followers_url": "https://api.github.com/users/mhubii/followers", "following_url": "https://api.github.com/users/mhubii/following{/other_user}", "gists_url": "https://api.github.com/users/mhubii/gists{/gist_id}", "starred_url": "https://api.github.com/users/mhubii/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mhubii/subscriptions", "organizations_url": "https://api.github.com/users/mhubii/orgs", "repos_url": "https://api.github.com/users/mhubii/repos", "events_url": "https://api.github.com/users/mhubii/events{/privacy}", "received_events_url": "https://api.github.com/users/mhubii/received_events", "type": "User", "site_admin": false}, "created_at": "2018-10-12T15:32:09Z", "updated_at": "2018-10-13T09:18:09Z", "author_association": "NONE", "body_html": "<p>Linking against glog, and explicitly using BlobGetMutableTensor(Blob* blob, DeviceType device_type) did the job for me. But I think that it should also work as presented above. Changes to the CMakeLists.txt and the main.cpp are:</p>\n<p>cmake:</p>\n<pre><code>cmake_minimum_required(VERSION 3.11 FATAL_ERROR)\nset(CMAKE_CXX_STANDARD 11)\n\nfind_library(CAFFE2_LIB caffe2)\nfind_package(Protobuf 3 REQUIRED)\nfind_library(GLOG_LIB glog) # MODIFIED\n\nadd_executable(main main.cpp)\ntarget_link_libraries(main ${CAFFE2_LIB} ${PROTOBUF_LIBRARIES} ${GLOG_LIB}) # MODIFIED\n</code></pre>\n<p>main:</p>\n<pre><code>#include &lt;caffe2/core/init.h&gt;\n#include &lt;caffe2/core/tensor.h&gt;\n#include &lt;caffe2/core/workspace.h&gt;\n\nusing namespace std;\nusing namespace caffe2;\n\nint main(int argc, char** argv) {\n\n\tcaffe2::GlobalInit(&amp;argc, &amp;argv);\n\n\t// Tensor.\n\tvector&lt;int64_t&gt; dims({10});\n\tvector&lt;float&gt; values(10, 1);\n\n\tTensor tensor(dims, CPU);\n\ttensor.ShareExternalPointer(values.data());\n\n\t// Workspace.\n\tWorkspace workspace;\n\n\t//Tensor* data = workspace.CreateBlob(\"data\")-&gt;GetMutable&lt;TensorCPU&gt;(); // Doesn't work for me.\n\tTensor* data = BlobGetMutableTensor(workspace.CreateBlob(\"data\"), CPU); // MODIFIED\n\tdata-&gt;ResizeLike(tensor); // works\n\n\t\n\tgoogle::protobuf::ShutdownProtobufLibrary();\n\t\n\treturn 0;\n}\n</code></pre>\n<p>I don't know if it is intended to use the caffe2 cpp api like this for future releases, or whether it is simply a bug on my system.</p>", "body_text": "Linking against glog, and explicitly using BlobGetMutableTensor(Blob* blob, DeviceType device_type) did the job for me. But I think that it should also work as presented above. Changes to the CMakeLists.txt and the main.cpp are:\ncmake:\ncmake_minimum_required(VERSION 3.11 FATAL_ERROR)\nset(CMAKE_CXX_STANDARD 11)\n\nfind_library(CAFFE2_LIB caffe2)\nfind_package(Protobuf 3 REQUIRED)\nfind_library(GLOG_LIB glog) # MODIFIED\n\nadd_executable(main main.cpp)\ntarget_link_libraries(main ${CAFFE2_LIB} ${PROTOBUF_LIBRARIES} ${GLOG_LIB}) # MODIFIED\n\nmain:\n#include <caffe2/core/init.h>\n#include <caffe2/core/tensor.h>\n#include <caffe2/core/workspace.h>\n\nusing namespace std;\nusing namespace caffe2;\n\nint main(int argc, char** argv) {\n\n\tcaffe2::GlobalInit(&argc, &argv);\n\n\t// Tensor.\n\tvector<int64_t> dims({10});\n\tvector<float> values(10, 1);\n\n\tTensor tensor(dims, CPU);\n\ttensor.ShareExternalPointer(values.data());\n\n\t// Workspace.\n\tWorkspace workspace;\n\n\t//Tensor* data = workspace.CreateBlob(\"data\")->GetMutable<TensorCPU>(); // Doesn't work for me.\n\tTensor* data = BlobGetMutableTensor(workspace.CreateBlob(\"data\"), CPU); // MODIFIED\n\tdata->ResizeLike(tensor); // works\n\n\t\n\tgoogle::protobuf::ShutdownProtobufLibrary();\n\t\n\treturn 0;\n}\n\nI don't know if it is intended to use the caffe2 cpp api like this for future releases, or whether it is simply a bug on my system.", "body": "Linking against glog, and explicitly using BlobGetMutableTensor(Blob* blob, DeviceType device_type) did the job for me. But I think that it should also work as presented above. Changes to the CMakeLists.txt and the main.cpp are:\r\n\r\ncmake:\r\n\r\n```\r\ncmake_minimum_required(VERSION 3.11 FATAL_ERROR)\r\nset(CMAKE_CXX_STANDARD 11)\r\n\r\nfind_library(CAFFE2_LIB caffe2)\r\nfind_package(Protobuf 3 REQUIRED)\r\nfind_library(GLOG_LIB glog) # MODIFIED\r\n\r\nadd_executable(main main.cpp)\r\ntarget_link_libraries(main ${CAFFE2_LIB} ${PROTOBUF_LIBRARIES} ${GLOG_LIB}) # MODIFIED\r\n```\r\n\r\nmain:\r\n\r\n```\r\n#include <caffe2/core/init.h>\r\n#include <caffe2/core/tensor.h>\r\n#include <caffe2/core/workspace.h>\r\n\r\nusing namespace std;\r\nusing namespace caffe2;\r\n\r\nint main(int argc, char** argv) {\r\n\r\n\tcaffe2::GlobalInit(&argc, &argv);\r\n\r\n\t// Tensor.\r\n\tvector<int64_t> dims({10});\r\n\tvector<float> values(10, 1);\r\n\r\n\tTensor tensor(dims, CPU);\r\n\ttensor.ShareExternalPointer(values.data());\r\n\r\n\t// Workspace.\r\n\tWorkspace workspace;\r\n\r\n\t//Tensor* data = workspace.CreateBlob(\"data\")->GetMutable<TensorCPU>(); // Doesn't work for me.\r\n\tTensor* data = BlobGetMutableTensor(workspace.CreateBlob(\"data\"), CPU); // MODIFIED\r\n\tdata->ResizeLike(tensor); // works\r\n\r\n\t\r\n\tgoogle::protobuf::ShutdownProtobufLibrary();\r\n\t\r\n\treturn 0;\r\n}\r\n```\r\n\r\nI don't know if it is intended to use the caffe2 cpp api like this for future releases, or whether it is simply a bug on my system."}