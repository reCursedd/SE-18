{"url": "https://api.github.com/repos/pytorch/pytorch/issues/2974", "repository_url": "https://api.github.com/repos/pytorch/pytorch", "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/2974/labels{/name}", "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/2974/comments", "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/2974/events", "html_url": "https://github.com/pytorch/pytorch/pull/2974", "id": 262808557, "node_id": "MDExOlB1bGxSZXF1ZXN0MTQ0Njg1MTY1", "number": 2974, "title": "More user-friendly error messages for LongTensor indexing", "user": {"login": "killeent", "id": 4529377, "node_id": "MDQ6VXNlcjQ1MjkzNzc=", "avatar_url": "https://avatars1.githubusercontent.com/u/4529377?v=4", "gravatar_id": "", "url": "https://api.github.com/users/killeent", "html_url": "https://github.com/killeent", "followers_url": "https://api.github.com/users/killeent/followers", "following_url": "https://api.github.com/users/killeent/following{/other_user}", "gists_url": "https://api.github.com/users/killeent/gists{/gist_id}", "starred_url": "https://api.github.com/users/killeent/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/killeent/subscriptions", "organizations_url": "https://api.github.com/users/killeent/orgs", "repos_url": "https://api.github.com/users/killeent/repos", "events_url": "https://api.github.com/users/killeent/events{/privacy}", "received_events_url": "https://api.github.com/users/killeent/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2017-10-04T14:28:35Z", "updated_at": "2017-10-04T14:55:55Z", "closed_at": "2017-10-04T14:55:55Z", "author_association": "CONTRIBUTOR", "pull_request": {"url": "https://api.github.com/repos/pytorch/pytorch/pulls/2974", "html_url": "https://github.com/pytorch/pytorch/pull/2974", "diff_url": "https://github.com/pytorch/pytorch/pull/2974.diff", "patch_url": "https://github.com/pytorch/pytorch/pull/2974.patch"}, "body_html": "<p>Example message:</p>\n<pre><code>IndexError: Indexing a Tensor with a torch.LongTensor triggers index_select semantics, and thus we expect a vector, but the indexing Tensor passed has 2 dimensions\n</code></pre>\n<p>before we would have a <code>RuntimeError</code> with a TH error message that had an argument position that didn't make sense.</p>\n<p>Addresses error message discussed in <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load issue title\" data-id=\"261916617\" data-permission-text=\"Issue title is private\" data-url=\"https://github.com/pytorch/pytorch/issues/2925\" data-hovercard-type=\"issue\" data-hovercard-url=\"/pytorch/pytorch/issues/2925/hovercard\" href=\"https://github.com/pytorch/pytorch/issues/2925\">#2925</a>, though <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load issue title\" data-id=\"261916617\" data-permission-text=\"Issue title is private\" data-url=\"https://github.com/pytorch/pytorch/issues/2925\" data-hovercard-type=\"issue\" data-hovercard-url=\"/pytorch/pytorch/issues/2925/hovercard\" href=\"https://github.com/pytorch/pytorch/issues/2925\">#2925</a> did not actually represent a bug in PyTorch code.</p>", "body_text": "Example message:\nIndexError: Indexing a Tensor with a torch.LongTensor triggers index_select semantics, and thus we expect a vector, but the indexing Tensor passed has 2 dimensions\n\nbefore we would have a RuntimeError with a TH error message that had an argument position that didn't make sense.\nAddresses error message discussed in #2925, though #2925 did not actually represent a bug in PyTorch code.", "body": "Example message:\r\n\r\n```\r\nIndexError: Indexing a Tensor with a torch.LongTensor triggers index_select semantics, and thus we expect a vector, but the indexing Tensor passed has 2 dimensions\r\n```\r\n\r\nbefore we would have a `RuntimeError` with a TH error message that had an argument position that didn't make sense.\r\n\r\nAddresses error message discussed in #2925, though #2925 did not actually represent a bug in PyTorch code."}