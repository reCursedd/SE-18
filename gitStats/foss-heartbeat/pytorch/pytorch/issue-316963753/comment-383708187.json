{"url": "https://api.github.com/repos/pytorch/pytorch/issues/comments/383708187", "html_url": "https://github.com/pytorch/pytorch/pull/6876#issuecomment-383708187", "issue_url": "https://api.github.com/repos/pytorch/pytorch/issues/6876", "id": 383708187, "node_id": "MDEyOklzc3VlQ29tbWVudDM4MzcwODE4Nw==", "user": {"login": "gchanan", "id": 3768583, "node_id": "MDQ6VXNlcjM3Njg1ODM=", "avatar_url": "https://avatars2.githubusercontent.com/u/3768583?v=4", "gravatar_id": "", "url": "https://api.github.com/users/gchanan", "html_url": "https://github.com/gchanan", "followers_url": "https://api.github.com/users/gchanan/followers", "following_url": "https://api.github.com/users/gchanan/following{/other_user}", "gists_url": "https://api.github.com/users/gchanan/gists{/gist_id}", "starred_url": "https://api.github.com/users/gchanan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/gchanan/subscriptions", "organizations_url": "https://api.github.com/users/gchanan/orgs", "repos_url": "https://api.github.com/users/gchanan/repos", "events_url": "https://api.github.com/users/gchanan/events{/privacy}", "received_events_url": "https://api.github.com/users/gchanan/received_events", "type": "User", "site_admin": false}, "created_at": "2018-04-23T20:16:02Z", "updated_at": "2018-04-23T20:16:02Z", "author_association": "CONTRIBUTOR", "body_html": "<p>Old:</p>\n<pre><code>In [1]: import torch\n\nIn [2]: x=torch.randn(1000,1000,1000)\n\nIn [3]: timeit repr(x)\n1 loop, best of 3: 40.6 s per loop\n\nIn [4]: x=x.cuda()\n\nIn [5]: timeit repr(x)\n1 loop, best of 3: 42.5 s per loop\n</code></pre>\n<p>New:</p>\n<pre><code>In [2]: import torch\n\nIn [3]: x=torch.randn(1000,1000,1000)\n\nIn [4]: timeit repr(x)\n1.22 ms \u00b1 14.2 \u00b5s per loop (mean \u00b1 std. dev. of 7 runs, 1000 loops each)\n\nIn [5]: x=x.cuda()\n\nIn [6]: timeit repr(x)\n4.35 ms \u00b1 39.3 \u00b5s per loop (mean \u00b1 std. dev. of 7 runs, 100 loops each)\n</code></pre>", "body_text": "Old:\nIn [1]: import torch\n\nIn [2]: x=torch.randn(1000,1000,1000)\n\nIn [3]: timeit repr(x)\n1 loop, best of 3: 40.6 s per loop\n\nIn [4]: x=x.cuda()\n\nIn [5]: timeit repr(x)\n1 loop, best of 3: 42.5 s per loop\n\nNew:\nIn [2]: import torch\n\nIn [3]: x=torch.randn(1000,1000,1000)\n\nIn [4]: timeit repr(x)\n1.22 ms \u00b1 14.2 \u00b5s per loop (mean \u00b1 std. dev. of 7 runs, 1000 loops each)\n\nIn [5]: x=x.cuda()\n\nIn [6]: timeit repr(x)\n4.35 ms \u00b1 39.3 \u00b5s per loop (mean \u00b1 std. dev. of 7 runs, 100 loops each)", "body": "Old:\r\n```\r\nIn [1]: import torch\r\n\r\nIn [2]: x=torch.randn(1000,1000,1000)\r\n\r\nIn [3]: timeit repr(x)\r\n1 loop, best of 3: 40.6 s per loop\r\n\r\nIn [4]: x=x.cuda()\r\n\r\nIn [5]: timeit repr(x)\r\n1 loop, best of 3: 42.5 s per loop\r\n```\r\n\r\nNew:\r\n```\r\nIn [2]: import torch\r\n\r\nIn [3]: x=torch.randn(1000,1000,1000)\r\n\r\nIn [4]: timeit repr(x)\r\n1.22 ms \u00b1 14.2 \u00b5s per loop (mean \u00b1 std. dev. of 7 runs, 1000 loops each)\r\n\r\nIn [5]: x=x.cuda()\r\n\r\nIn [6]: timeit repr(x)\r\n4.35 ms \u00b1 39.3 \u00b5s per loop (mean \u00b1 std. dev. of 7 runs, 100 loops each)\r\n```"}