{"url": "https://api.github.com/repos/pytorch/pytorch/issues/9518", "repository_url": "https://api.github.com/repos/pytorch/pytorch", "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/9518/labels{/name}", "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/9518/comments", "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/9518/events", "html_url": "https://github.com/pytorch/pytorch/pull/9518", "id": 342148201, "node_id": "MDExOlB1bGxSZXF1ZXN0MjAyMTE4Nzk5", "number": 9518, "title": "Change THTensor::size into a std::vector<int64_t>", "user": {"login": "ezyang", "id": 13564, "node_id": "MDQ6VXNlcjEzNTY0", "avatar_url": "https://avatars0.githubusercontent.com/u/13564?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ezyang", "html_url": "https://github.com/ezyang", "followers_url": "https://api.github.com/users/ezyang/followers", "following_url": "https://api.github.com/users/ezyang/following{/other_user}", "gists_url": "https://api.github.com/users/ezyang/gists{/gist_id}", "starred_url": "https://api.github.com/users/ezyang/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ezyang/subscriptions", "organizations_url": "https://api.github.com/users/ezyang/orgs", "repos_url": "https://api.github.com/users/ezyang/repos", "events_url": "https://api.github.com/users/ezyang/events{/privacy}", "received_events_url": "https://api.github.com/users/ezyang/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-07-18T01:59:58Z", "updated_at": "2018-11-23T15:47:39Z", "closed_at": "2018-07-18T20:42:30Z", "author_association": "CONTRIBUTOR", "pull_request": {"url": "https://api.github.com/repos/pytorch/pytorch/pulls/9518", "html_url": "https://github.com/pytorch/pytorch/pull/9518", "diff_url": "https://github.com/pytorch/pytorch/pull/9518.diff", "patch_url": "https://github.com/pytorch/pytorch/pull/9518.patch"}, "body_html": "<p>This patch was very carefully constructed to avoid having to modify<br>\ntoo many files; there are some obvious follow ups which I will<br>\nbe hitting later.</p>\n<ul>\n<li>\n<p><del>I didn't do stride.  But the change for stride should look<br>\nvery similar.</del> I did stride.</p>\n</li>\n<li>\n<p>I did NOT rename the field in question, so that direct<br>\naccesses of the form foo-&gt;size[n] keep working.  I intend<br>\nto do a codemod to fix all of these shortly.</p>\n</li>\n<li>\n<p>Anywhere a \"public\" API function made use of a int64_t*<br>\nof sizes, I opted to just finagle it out of the tensor using<br>\nTHTensor_getSizePtr rather than try to rewrite all of these<br>\nsites to use ArrayRef.  They should use ArrayRef eventually,<br>\nbut not yet.</p>\n</li>\n<li>\n<p>_THSizeDesc got an overload that understands ArrayRef (which<br>\na vector size is convertible to).  Eventually we should get<br>\nrid of all of these functions (because ArrayRef is printable<br>\nvia the AT_ERROR macros), but not today.</p>\n</li>\n<li>\n<p>I ran into something very subtle in the implementation of sizes()<br>\nfor TensorDerived: I MUST use the dim as per Tensor::dim() (which<br>\ncorrectly is zero for scalars), otherwise I'll give a nonsense<br>\nsizes().  We can fix this eventually once Scalar is turned on<br>\ninternally.</p>\n</li>\n<li>\n<p>I added two new functions THTensor_resizeSize and THTensor_setSize.<br>\nMaybe these are eventually worth deifying as methods in the Tensor class, but<br>\nfor now I'm keeping them out-of-line just in case.</p>\n</li>\n</ul>\n<p>Signed-off-by: Edward Z. Yang <a href=\"mailto:ezyang@fb.com\">ezyang@fb.com</a></p>", "body_text": "This patch was very carefully constructed to avoid having to modify\ntoo many files; there are some obvious follow ups which I will\nbe hitting later.\n\n\nI didn't do stride.  But the change for stride should look\nvery similar. I did stride.\n\n\nI did NOT rename the field in question, so that direct\naccesses of the form foo->size[n] keep working.  I intend\nto do a codemod to fix all of these shortly.\n\n\nAnywhere a \"public\" API function made use of a int64_t*\nof sizes, I opted to just finagle it out of the tensor using\nTHTensor_getSizePtr rather than try to rewrite all of these\nsites to use ArrayRef.  They should use ArrayRef eventually,\nbut not yet.\n\n\n_THSizeDesc got an overload that understands ArrayRef (which\na vector size is convertible to).  Eventually we should get\nrid of all of these functions (because ArrayRef is printable\nvia the AT_ERROR macros), but not today.\n\n\nI ran into something very subtle in the implementation of sizes()\nfor TensorDerived: I MUST use the dim as per Tensor::dim() (which\ncorrectly is zero for scalars), otherwise I'll give a nonsense\nsizes().  We can fix this eventually once Scalar is turned on\ninternally.\n\n\nI added two new functions THTensor_resizeSize and THTensor_setSize.\nMaybe these are eventually worth deifying as methods in the Tensor class, but\nfor now I'm keeping them out-of-line just in case.\n\n\nSigned-off-by: Edward Z. Yang ezyang@fb.com", "body": "This patch was very carefully constructed to avoid having to modify\r\ntoo many files; there are some obvious follow ups which I will\r\nbe hitting later.\r\n\r\n- ~~I didn't do stride.  But the change for stride should look\r\n  very similar.~~ I did stride.\r\n\r\n- I did NOT rename the field in question, so that direct\r\n  accesses of the form foo->size[n] keep working.  I intend\r\n  to do a codemod to fix all of these shortly.\r\n\r\n- Anywhere a \"public\" API function made use of a int64_t*\r\n  of sizes, I opted to just finagle it out of the tensor using\r\n  THTensor_getSizePtr rather than try to rewrite all of these\r\n  sites to use ArrayRef.  They should use ArrayRef eventually,\r\n  but not yet.\r\n\r\n- _THSizeDesc got an overload that understands ArrayRef (which\r\n  a vector size is convertible to).  Eventually we should get\r\n  rid of all of these functions (because ArrayRef is printable\r\n  via the AT_ERROR macros), but not today.\r\n\r\n- I ran into something very subtle in the implementation of sizes()\r\n  for TensorDerived: I MUST use the dim as per Tensor::dim() (which\r\n  correctly is zero for scalars), otherwise I'll give a nonsense\r\n  sizes().  We can fix this eventually once Scalar is turned on\r\n  internally.\r\n\r\n- I added two new functions THTensor_resizeSize and THTensor_setSize.\r\n  Maybe these are eventually worth deifying as methods in the Tensor class, but\r\n  for now I'm keeping them out-of-line just in case.\r\n\r\nSigned-off-by: Edward Z. Yang <ezyang@fb.com>"}