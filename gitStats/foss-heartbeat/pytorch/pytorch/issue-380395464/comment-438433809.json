{"url": "https://api.github.com/repos/pytorch/pytorch/issues/comments/438433809", "html_url": "https://github.com/pytorch/pytorch/issues/13918#issuecomment-438433809", "issue_url": "https://api.github.com/repos/pytorch/pytorch/issues/13918", "id": 438433809, "node_id": "MDEyOklzc3VlQ29tbWVudDQzODQzMzgwOQ==", "user": {"login": "SsnL", "id": 5674597, "node_id": "MDQ6VXNlcjU2NzQ1OTc=", "avatar_url": "https://avatars2.githubusercontent.com/u/5674597?v=4", "gravatar_id": "", "url": "https://api.github.com/users/SsnL", "html_url": "https://github.com/SsnL", "followers_url": "https://api.github.com/users/SsnL/followers", "following_url": "https://api.github.com/users/SsnL/following{/other_user}", "gists_url": "https://api.github.com/users/SsnL/gists{/gist_id}", "starred_url": "https://api.github.com/users/SsnL/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/SsnL/subscriptions", "organizations_url": "https://api.github.com/users/SsnL/orgs", "repos_url": "https://api.github.com/users/SsnL/repos", "events_url": "https://api.github.com/users/SsnL/events{/privacy}", "received_events_url": "https://api.github.com/users/SsnL/received_events", "type": "User", "site_admin": false}, "created_at": "2018-11-13T20:57:37Z", "updated_at": "2018-11-13T20:57:37Z", "author_association": "CONTRIBUTOR", "body_html": "<div class=\"email-fragment\">You have an extra cast in the second case....</div>\n<span class=\"email-hidden-toggle\"><a href=\"#\">\u2026</a></span><div class=\"email-hidden-reply\">\n<div class=\"email-quoted-reply\">On Tue, Nov 13, 2018 at 14:52 Lucas Willems ***@***.***&gt; wrote:\n <g-emoji class=\"g-emoji\" alias=\"bug\" fallback-src=\"https://assets-cdn.github.com/images/icons/emoji/unicode/1f41b.png\">\ud83d\udc1b</g-emoji> Bug\n\n I compared the execution time of two codes.\n\n Code 1:\n\n import torch\n import numpy as np\n\n a = [np.random.randint(0, 10, size=(7, 7, 3)) for _ in range(100000)]\n b = torch.tensor(np.array(a))\n\n And code 2:\n\n import torch\n import numpy as np\n\n a = [np.random.randint(0, 10, size=(7, 7, 3)) for _ in range(100000)]\n b = torch.tensor(a, dtype=torch.float)\n\n The code 1 takes less than 1 second to execute (used time):\n\n real    0m0,915s\n user    0m0,808s\n sys     0m0,330s\n\n Whereas the code 2 takes 5 seconds:\n\n import torch\n import numpy as np\n\n a = [np.random.randint(0, 10, size=(7, 7, 3)) for _ in range(100000)]\n b = torch.tensor(np.array(a))\n\n Expected behavior\n\n I would expect code 2 to be as fast as code 1.\n Environment\n\n    - PyTorch 0.4.1\n    - Linux\n    - OS (e.g., Linux):\n    - Installed with conda\n    - Python version: 3.6\n\n \u2014\n You are receiving this because you are subscribed to this thread.\n Reply to this email directly, view it on GitHub\n &lt;<a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load issue title\" data-id=\"380395464\" data-permission-text=\"Issue title is private\" data-url=\"https://github.com/pytorch/pytorch/issues/13918\" href=\"https://github.com/pytorch/pytorch/issues/13918\">#13918</a>&gt;, or mute the thread\n &lt;<a href=\"https://github.com/notifications/unsubscribe-auth/AFaWZYGSUG2bh1I3w3Fllpr532fR-2TEks5uuyMRgaJpZM4YcZI2\">https://github.com/notifications/unsubscribe-auth/AFaWZYGSUG2bh1I3w3Fllpr532fR-2TEks5uuyMRgaJpZM4YcZI2</a>&gt;\n .\n</div>\n<div class=\"email-fragment\"></div>\n</div>", "body_text": "You have an extra cast in the second case....\n\u2026\nOn Tue, Nov 13, 2018 at 14:52 Lucas Willems ***@***.***> wrote:\n \ud83d\udc1b Bug\n\n I compared the execution time of two codes.\n\n Code 1:\n\n import torch\n import numpy as np\n\n a = [np.random.randint(0, 10, size=(7, 7, 3)) for _ in range(100000)]\n b = torch.tensor(np.array(a))\n\n And code 2:\n\n import torch\n import numpy as np\n\n a = [np.random.randint(0, 10, size=(7, 7, 3)) for _ in range(100000)]\n b = torch.tensor(a, dtype=torch.float)\n\n The code 1 takes less than 1 second to execute (used time):\n\n real    0m0,915s\n user    0m0,808s\n sys     0m0,330s\n\n Whereas the code 2 takes 5 seconds:\n\n import torch\n import numpy as np\n\n a = [np.random.randint(0, 10, size=(7, 7, 3)) for _ in range(100000)]\n b = torch.tensor(np.array(a))\n\n Expected behavior\n\n I would expect code 2 to be as fast as code 1.\n Environment\n\n    - PyTorch 0.4.1\n    - Linux\n    - OS (e.g., Linux):\n    - Installed with conda\n    - Python version: 3.6\n\n \u2014\n You are receiving this because you are subscribed to this thread.\n Reply to this email directly, view it on GitHub\n <#13918>, or mute the thread\n <https://github.com/notifications/unsubscribe-auth/AFaWZYGSUG2bh1I3w3Fllpr532fR-2TEks5uuyMRgaJpZM4YcZI2>\n .", "body": "You have an extra cast in the second case....\n\nOn Tue, Nov 13, 2018 at 14:52 Lucas Willems <notifications@github.com>\nwrote:\n\n> \ud83d\udc1b Bug\n>\n> I compared the execution time of two codes.\n>\n> Code 1:\n>\n> import torch\n> import numpy as np\n>\n> a = [np.random.randint(0, 10, size=(7, 7, 3)) for _ in range(100000)]\n> b = torch.tensor(np.array(a))\n>\n> And code 2:\n>\n> import torch\n> import numpy as np\n>\n> a = [np.random.randint(0, 10, size=(7, 7, 3)) for _ in range(100000)]\n> b = torch.tensor(a, dtype=torch.float)\n>\n> The code 1 takes less than 1 second to execute (used time):\n>\n> real    0m0,915s\n> user    0m0,808s\n> sys     0m0,330s\n>\n> Whereas the code 2 takes 5 seconds:\n>\n> import torch\n> import numpy as np\n>\n> a = [np.random.randint(0, 10, size=(7, 7, 3)) for _ in range(100000)]\n> b = torch.tensor(np.array(a))\n>\n> Expected behavior\n>\n> I would expect code 2 to be as fast as code 1.\n> Environment\n>\n>    - PyTorch 0.4.1\n>    - Linux\n>    - OS (e.g., Linux):\n>    - Installed with conda\n>    - Python version: 3.6\n>\n> \u2014\n> You are receiving this because you are subscribed to this thread.\n> Reply to this email directly, view it on GitHub\n> <https://github.com/pytorch/pytorch/issues/13918>, or mute the thread\n> <https://github.com/notifications/unsubscribe-auth/AFaWZYGSUG2bh1I3w3Fllpr532fR-2TEks5uuyMRgaJpZM4YcZI2>\n> .\n>\n"}