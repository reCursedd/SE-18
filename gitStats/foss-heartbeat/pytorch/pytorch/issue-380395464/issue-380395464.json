{"url": "https://api.github.com/repos/pytorch/pytorch/issues/13918", "repository_url": "https://api.github.com/repos/pytorch/pytorch", "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/13918/labels{/name}", "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/13918/comments", "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/13918/events", "html_url": "https://github.com/pytorch/pytorch/issues/13918", "id": 380395464, "node_id": "MDU6SXNzdWUzODAzOTU0NjQ=", "number": 13918, "title": "Pytorch very slow to convert list of numpy arrays into tensors", "user": {"login": "lcswillems", "id": 5437552, "node_id": "MDQ6VXNlcjU0Mzc1NTI=", "avatar_url": "https://avatars3.githubusercontent.com/u/5437552?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lcswillems", "html_url": "https://github.com/lcswillems", "followers_url": "https://api.github.com/users/lcswillems/followers", "following_url": "https://api.github.com/users/lcswillems/following{/other_user}", "gists_url": "https://api.github.com/users/lcswillems/gists{/gist_id}", "starred_url": "https://api.github.com/users/lcswillems/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lcswillems/subscriptions", "organizations_url": "https://api.github.com/users/lcswillems/orgs", "repos_url": "https://api.github.com/users/lcswillems/repos", "events_url": "https://api.github.com/users/lcswillems/events{/privacy}", "received_events_url": "https://api.github.com/users/lcswillems/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 545367190, "node_id": "MDU6TGFiZWw1NDUzNjcxOTA=", "url": "https://api.github.com/repos/pytorch/pytorch/labels/awaiting%20response", "name": "awaiting response", "color": "5319e7", "default": false}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2018-11-13T19:52:33Z", "updated_at": "2018-11-19T18:55:54Z", "closed_at": null, "author_association": "NONE", "body_html": "<h2><g-emoji class=\"g-emoji\" alias=\"bug\" fallback-src=\"https://assets-cdn.github.com/images/icons/emoji/unicode/1f41b.png\">\ud83d\udc1b</g-emoji> Bug</h2>\n<p>I compared the execution time of two codes.</p>\n<p>Code 1:</p>\n<pre><code>import torch\nimport numpy as np\n\na = [np.random.randint(0, 10, size=(7, 7, 3)) for _ in range(100000)]\nb = torch.tensor(np.array(a))\n</code></pre>\n<p>And code 2:</p>\n<pre><code>import torch\nimport numpy as np\n\na = [np.random.randint(0, 10, size=(7, 7, 3)) for _ in range(100000)]\nb = torch.tensor(a)\n</code></pre>\n<p>The code 1 takes less than 1 second to execute (used <code>time</code>):</p>\n<pre><code>real    0m0,915s\nuser    0m0,808s\nsys     0m0,330s\n</code></pre>\n<p>Whereas the code 2 takes 5 seconds:</p>\n<pre><code>real    0m6,057s\nuser    0m5,979s\nsys     0m0,308s\n</code></pre>\n<h2>Expected behavior</h2>\n<p>I would expect code 2 to be as fast as code 1.</p>\n<h2>Environment</h2>\n<ul>\n<li>PyTorch 0.4.1</li>\n<li>Linux</li>\n<li>OS (e.g., Linux):</li>\n<li>Installed with <code>conda</code></li>\n<li>Python version: 3.6</li>\n</ul>", "body_text": "\ud83d\udc1b Bug\nI compared the execution time of two codes.\nCode 1:\nimport torch\nimport numpy as np\n\na = [np.random.randint(0, 10, size=(7, 7, 3)) for _ in range(100000)]\nb = torch.tensor(np.array(a))\n\nAnd code 2:\nimport torch\nimport numpy as np\n\na = [np.random.randint(0, 10, size=(7, 7, 3)) for _ in range(100000)]\nb = torch.tensor(a)\n\nThe code 1 takes less than 1 second to execute (used time):\nreal    0m0,915s\nuser    0m0,808s\nsys     0m0,330s\n\nWhereas the code 2 takes 5 seconds:\nreal    0m6,057s\nuser    0m5,979s\nsys     0m0,308s\n\nExpected behavior\nI would expect code 2 to be as fast as code 1.\nEnvironment\n\nPyTorch 0.4.1\nLinux\nOS (e.g., Linux):\nInstalled with conda\nPython version: 3.6", "body": "## \ud83d\udc1b Bug\r\n\r\nI compared the execution time of two codes.\r\n\r\nCode 1:\r\n```\r\nimport torch\r\nimport numpy as np\r\n\r\na = [np.random.randint(0, 10, size=(7, 7, 3)) for _ in range(100000)]\r\nb = torch.tensor(np.array(a))\r\n```\r\nAnd code 2:\r\n```\r\nimport torch\r\nimport numpy as np\r\n\r\na = [np.random.randint(0, 10, size=(7, 7, 3)) for _ in range(100000)]\r\nb = torch.tensor(a)\r\n```\r\n\r\nThe code 1 takes less than 1 second to execute (used `time`):\r\n```\r\nreal    0m0,915s\r\nuser    0m0,808s\r\nsys     0m0,330s\r\n```\r\n\r\nWhereas the code 2 takes 5 seconds:\r\n```\r\nreal    0m6,057s\r\nuser    0m5,979s\r\nsys     0m0,308s\r\n```\r\n\r\n## Expected behavior\r\n\r\nI would expect code 2 to be as fast as code 1.\r\n\r\n## Environment\r\n\r\n - PyTorch 0.4.1\r\n - Linux\r\n - OS (e.g., Linux):\r\n - Installed with `conda`\r\n - Python version: 3.6\r\n"}