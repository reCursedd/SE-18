{"url": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/216822320", "pull_request_review_id": 154395617, "id": 216822320, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIxNjgyMjMyMA==", "diff_hunk": "@@ -531,13 +531,252 @@ Python-defined Constants\n Debugging\n ~~~~~~~~~\n \n-Print things\n+Interpreting Graphs\n+    TorchScript uses a static single assignment (SSA) intermediate representation\n+    (IR) to represent computation. The instructions in this format consist of\n+    ATen operators and other primitive operators, including control flow\n+    operators for loops and conditionals. As an example::\n \n-Use ``USE_PYTHON=0`` to debug in normal python mode\n+        @torch.jit.script\n+        def foo(len):\n+          # type: (int) -> torch.Tensor\n+          rv = torch.zeros(3, 4)\n+          for i in range(len):\n+            if i < 10:\n+                rv = rv - 1.0\n+            else:\n+                rv = rv + 1.0\n+          return rv", "path": "docs/source/jit.rst", "position": 56, "original_position": 21, "commit_id": "29e8cf0aa61dffa88f49bd06d662521eedb951f2", "original_commit_id": "46d9797b3dab7a644228c1715f01ff579799e1e9", "user": {"login": "apaszke", "id": 4583066, "node_id": "MDQ6VXNlcjQ1ODMwNjY=", "avatar_url": "https://avatars3.githubusercontent.com/u/4583066?v=4", "gravatar_id": "", "url": "https://api.github.com/users/apaszke", "html_url": "https://github.com/apaszke", "followers_url": "https://api.github.com/users/apaszke/followers", "following_url": "https://api.github.com/users/apaszke/following{/other_user}", "gists_url": "https://api.github.com/users/apaszke/gists{/gist_id}", "starred_url": "https://api.github.com/users/apaszke/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/apaszke/subscriptions", "organizations_url": "https://api.github.com/users/apaszke/orgs", "repos_url": "https://api.github.com/users/apaszke/repos", "events_url": "https://api.github.com/users/apaszke/events{/privacy}", "received_events_url": "https://api.github.com/users/apaszke/received_events", "type": "User", "site_admin": false}, "body": "Can we come up with a slightly smarter example? \ud83d\ude04This one trivially reduces to \r\n```python\r\nreturn rv + (min(0, len - 10) - max(len, 10))\r\n```\r\nIt also shadows the `len` builtin, which we definitely shouldn't encourage in the script.", "created_at": "2018-09-11T21:05:29Z", "updated_at": "2018-11-23T15:51:03Z", "html_url": "https://github.com/pytorch/pytorch/pull/11540#discussion_r216822320", "pull_request_url": "https://api.github.com/repos/pytorch/pytorch/pulls/11540", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/216822320"}, "html": {"href": "https://github.com/pytorch/pytorch/pull/11540#discussion_r216822320"}, "pull_request": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/11540"}}, "body_html": "<p>Can we come up with a slightly smarter example? <g-emoji class=\"g-emoji\" alias=\"smile\" fallback-src=\"https://assets-cdn.github.com/images/icons/emoji/unicode/1f604.png\">\ud83d\ude04</g-emoji>This one trivially reduces to</p>\n<div class=\"highlight highlight-source-python\"><pre><span class=\"pl-k\">return</span> rv <span class=\"pl-k\">+</span> (<span class=\"pl-c1\">min</span>(<span class=\"pl-c1\">0</span>, <span class=\"pl-c1\">len</span> <span class=\"pl-k\">-</span> <span class=\"pl-c1\">10</span>) <span class=\"pl-k\">-</span> <span class=\"pl-c1\">max</span>(<span class=\"pl-c1\">len</span>, <span class=\"pl-c1\">10</span>))</pre></div>\n<p>It also shadows the <code>len</code> builtin, which we definitely shouldn't encourage in the script.</p>", "body_text": "Can we come up with a slightly smarter example? \ud83d\ude04This one trivially reduces to\nreturn rv + (min(0, len - 10) - max(len, 10))\nIt also shadows the len builtin, which we definitely shouldn't encourage in the script."}