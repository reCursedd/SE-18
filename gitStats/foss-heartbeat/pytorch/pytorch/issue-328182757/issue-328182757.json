{"url": "https://api.github.com/repos/pytorch/pytorch/issues/7991", "repository_url": "https://api.github.com/repos/pytorch/pytorch", "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/7991/labels{/name}", "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/7991/comments", "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/7991/events", "html_url": "https://github.com/pytorch/pytorch/issues/7991", "id": 328182757, "node_id": "MDU6SXNzdWUzMjgxODI3NTc=", "number": 7991, "title": "[feature request] [pytorch] Convenience method for doing unsqueeze / squeeze several times", "user": {"login": "vadimkantorov", "id": 1041752, "node_id": "MDQ6VXNlcjEwNDE3NTI=", "avatar_url": "https://avatars0.githubusercontent.com/u/1041752?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vadimkantorov", "html_url": "https://github.com/vadimkantorov", "followers_url": "https://api.github.com/users/vadimkantorov/followers", "following_url": "https://api.github.com/users/vadimkantorov/following{/other_user}", "gists_url": "https://api.github.com/users/vadimkantorov/gists{/gist_id}", "starred_url": "https://api.github.com/users/vadimkantorov/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vadimkantorov/subscriptions", "organizations_url": "https://api.github.com/users/vadimkantorov/orgs", "repos_url": "https://api.github.com/users/vadimkantorov/repos", "events_url": "https://api.github.com/users/vadimkantorov/events{/privacy}", "received_events_url": "https://api.github.com/users/vadimkantorov/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 9, "created_at": "2018-05-31T15:18:25Z", "updated_at": "2018-06-05T03:59:20Z", "closed_at": "2018-06-04T17:51:02Z", "author_association": "NONE", "body_html": "<p>Currently after some reduction ops in order to recover spatial dimensions I do <code>x.unsqueeze(-1).unsqueeze(-1)</code>. Would be nice to make this frequent code more concise.</p>\n<p>Some possible variants:</p>\n<pre><code>x.unsqueeze(-1, -1)\nx.unsqueeze(multi_dims = [-1] * 2)\n</code></pre>\n<p>I realize it may be non-trivial to design the API so that the result is clear when it's not just trailing dimensions.</p>", "body_text": "Currently after some reduction ops in order to recover spatial dimensions I do x.unsqueeze(-1).unsqueeze(-1). Would be nice to make this frequent code more concise.\nSome possible variants:\nx.unsqueeze(-1, -1)\nx.unsqueeze(multi_dims = [-1] * 2)\n\nI realize it may be non-trivial to design the API so that the result is clear when it's not just trailing dimensions.", "body": "Currently after some reduction ops in order to recover spatial dimensions I do `x.unsqueeze(-1).unsqueeze(-1)`. Would be nice to make this frequent code more concise.\r\n\r\nSome possible variants:\r\n```\r\nx.unsqueeze(-1, -1)\r\nx.unsqueeze(multi_dims = [-1] * 2)\r\n```\r\n\r\nI realize it may be non-trivial to design the API so that the result is clear when it's not just trailing dimensions."}