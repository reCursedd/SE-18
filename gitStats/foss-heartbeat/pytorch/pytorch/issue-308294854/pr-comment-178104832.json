{"url": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/178104832", "pull_request_review_id": 108108830, "id": 178104832, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE3ODEwNDgzMg==", "diff_hunk": "@@ -70,6 +70,74 @@ Tensor batch_norm(\n             running_mean, running_var, training, momentum, eps);\n }\n \n+Tensor layer_norm(const Tensor& input, IntList normalized_shape,\n+    const Tensor& weight /* optional */, const Tensor& bias /* optional */,\n+    double eps) {\n+\n+    int64_t normalized_ndim = normalized_shape.size();\n+\n+    if (normalized_ndim < 1) {\n+      std::stringstream ss;\n+      ss << \"Expected normalized_shape to be at least 1-dimensional, i.e., \"\n+         << \"containing at least one element, but got normalized_shape=\"\n+         << normalized_shape;\n+      throw std::runtime_error(ss.str());\n+    }\n+\n+    if (weight.defined() && !weight.sizes().equals(normalized_shape)) {\n+      std::stringstream ss;\n+      ss << \"Expected weight to be of same shape as normalized_shape, but got \"\n+         << \"weight of shape \" << weight.sizes() << \" and normalized_shape=\"\n+         << normalized_shape;\n+      throw std::runtime_error(ss.str());\n+    }\n+\n+    if (bias.defined() && !bias.sizes().equals(normalized_shape)) {\n+      std::stringstream ss;\n+      ss << \"Expected bias to be of same shape as normalized_shape, but got \"\n+         << \"bias of shape \" << bias.sizes() << \" and normalized_shape=\"\n+         << normalized_shape;\n+      throw std::runtime_error(ss.str());\n+    }\n+\n+    auto input_shape = input.sizes();\n+    auto input_ndim = input.dim();\n+\n+    if (input_ndim < normalized_ndim ||\n+        !input_shape.slice(input_ndim - normalized_ndim).equals(normalized_shape)) {\n+      std::stringstream ss;\n+      ss << \"Given normalized_shape=\" << normalized_shape\n+         << \", expected input with shape [*\";\n+      for (auto size : normalized_shape) {\n+        ss << \", \" << size;\n+      }\n+      ss << \"], but got input of size \" << input_shape\n+         << \" and normalized_shape=\" << normalized_shape;", "path": "aten/src/ATen/native/Normalization.cpp", "position": null, "original_position": 46, "commit_id": "904e5e4fed3c406408e47a3ab462bdb272a31e50", "original_commit_id": "3d7ff08ebfcecce07634119698c58d82829750b9", "user": {"login": "zou3519", "id": 5652049, "node_id": "MDQ6VXNlcjU2NTIwNDk=", "avatar_url": "https://avatars3.githubusercontent.com/u/5652049?v=4", "gravatar_id": "", "url": "https://api.github.com/users/zou3519", "html_url": "https://github.com/zou3519", "followers_url": "https://api.github.com/users/zou3519/followers", "following_url": "https://api.github.com/users/zou3519/following{/other_user}", "gists_url": "https://api.github.com/users/zou3519/gists{/gist_id}", "starred_url": "https://api.github.com/users/zou3519/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/zou3519/subscriptions", "organizations_url": "https://api.github.com/users/zou3519/orgs", "repos_url": "https://api.github.com/users/zou3519/repos", "events_url": "https://api.github.com/users/zou3519/events{/privacy}", "received_events_url": "https://api.github.com/users/zou3519/received_events", "type": "User", "site_admin": false}, "body": "Nit: don't print out `normalized_shape` twice", "created_at": "2018-03-29T16:04:16Z", "updated_at": "2018-11-23T15:41:18Z", "html_url": "https://github.com/pytorch/pytorch/pull/5983#discussion_r178104832", "pull_request_url": "https://api.github.com/repos/pytorch/pytorch/pulls/5983", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/178104832"}, "html": {"href": "https://github.com/pytorch/pytorch/pull/5983#discussion_r178104832"}, "pull_request": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/5983"}}, "body_html": "<p>Nit: don't print out <code>normalized_shape</code> twice</p>", "body_text": "Nit: don't print out normalized_shape twice"}