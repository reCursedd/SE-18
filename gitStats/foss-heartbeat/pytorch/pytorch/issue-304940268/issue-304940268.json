{"url": "https://api.github.com/repos/pytorch/pytorch/issues/5752", "repository_url": "https://api.github.com/repos/pytorch/pytorch", "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/5752/labels{/name}", "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/5752/comments", "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/5752/events", "html_url": "https://github.com/pytorch/pytorch/issues/5752", "id": 304940268, "node_id": "MDU6SXNzdWUzMDQ5NDAyNjg=", "number": 5752, "title": "Dropout is changing the values it doesn't zero out", "user": {"login": "sserr23", "id": 9504023, "node_id": "MDQ6VXNlcjk1MDQwMjM=", "avatar_url": "https://avatars3.githubusercontent.com/u/9504023?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sserr23", "html_url": "https://github.com/sserr23", "followers_url": "https://api.github.com/users/sserr23/followers", "following_url": "https://api.github.com/users/sserr23/following{/other_user}", "gists_url": "https://api.github.com/users/sserr23/gists{/gist_id}", "starred_url": "https://api.github.com/users/sserr23/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sserr23/subscriptions", "organizations_url": "https://api.github.com/users/sserr23/orgs", "repos_url": "https://api.github.com/users/sserr23/repos", "events_url": "https://api.github.com/users/sserr23/events{/privacy}", "received_events_url": "https://api.github.com/users/sserr23/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-03-13T21:21:59Z", "updated_at": "2018-08-17T05:05:52Z", "closed_at": "2018-03-13T21:40:29Z", "author_association": "NONE", "body_html": "<p>PyTorch version: 0.2.0_4</p>\n<p>It appears that torch.nn.Dropout is multiplying the values it doesn't zero out by 1/(1 - p). (I'm assuming this isn't expected behavior?)</p>\n<pre><code>import torch\nb = torch.FloatTensor([i for i in range(30)]).view(3, 2, 5)\nb = torch.nn.autograd.Variable(b)\ndpoint3 = torch.nn.Dropout(p=.3)\ndpoint5 = torch.nn.Dropout(p=.5)\n</code></pre>\n<p>b is</p>\n<pre><code>Variable containing:\n(0 ,.,.) = \n   0   1   2   3   4\n   5   6   7   8   9\n\n(1 ,.,.) = \n  10  11  12  13  14\n  15  16  17  18  19\n\n(2 ,.,.) = \n  20  21  22  23  24\n  25  26  27  28  29\n[torch.FloatTensor of size 3x2x5]\n</code></pre>\n<p>If I do</p>\n<p><code>dpoint3(b)</code></p>\n<p>I get</p>\n<pre><code>Variable containing:\n(0 ,.,.) = \n   0.0000   1.4286   2.8571   4.2857   5.7143\n   0.0000   0.0000  10.0000  11.4286  12.8571\n\n(1 ,.,.) = \n  14.2857  15.7143  17.1429  18.5714  20.0000\n   0.0000  22.8571   0.0000   0.0000  27.1429\n\n(2 ,.,.) = \n  28.5714  30.0000   0.0000  32.8571  34.2857\n   0.0000  37.1429  38.5714  40.0000  41.4286\n[torch.FloatTensor of size 3x2x5]\n</code></pre>\n<p>If I do</p>\n<p><code>dpoint5(b)</code></p>\n<p>I get</p>\n<pre><code>Variable containing:\n(0 ,.,.) = \n   0   0   0   0   8\n  10  12  14   0   0\n\n(1 ,.,.) = \n   0  22  24   0   0\n  30   0   0  36   0\n\n(2 ,.,.) = \n  40   0  44   0   0\n  50  52   0  56  58\n[torch.FloatTensor of size 3x2x5]\n</code></pre>", "body_text": "PyTorch version: 0.2.0_4\nIt appears that torch.nn.Dropout is multiplying the values it doesn't zero out by 1/(1 - p). (I'm assuming this isn't expected behavior?)\nimport torch\nb = torch.FloatTensor([i for i in range(30)]).view(3, 2, 5)\nb = torch.nn.autograd.Variable(b)\ndpoint3 = torch.nn.Dropout(p=.3)\ndpoint5 = torch.nn.Dropout(p=.5)\n\nb is\nVariable containing:\n(0 ,.,.) = \n   0   1   2   3   4\n   5   6   7   8   9\n\n(1 ,.,.) = \n  10  11  12  13  14\n  15  16  17  18  19\n\n(2 ,.,.) = \n  20  21  22  23  24\n  25  26  27  28  29\n[torch.FloatTensor of size 3x2x5]\n\nIf I do\ndpoint3(b)\nI get\nVariable containing:\n(0 ,.,.) = \n   0.0000   1.4286   2.8571   4.2857   5.7143\n   0.0000   0.0000  10.0000  11.4286  12.8571\n\n(1 ,.,.) = \n  14.2857  15.7143  17.1429  18.5714  20.0000\n   0.0000  22.8571   0.0000   0.0000  27.1429\n\n(2 ,.,.) = \n  28.5714  30.0000   0.0000  32.8571  34.2857\n   0.0000  37.1429  38.5714  40.0000  41.4286\n[torch.FloatTensor of size 3x2x5]\n\nIf I do\ndpoint5(b)\nI get\nVariable containing:\n(0 ,.,.) = \n   0   0   0   0   8\n  10  12  14   0   0\n\n(1 ,.,.) = \n   0  22  24   0   0\n  30   0   0  36   0\n\n(2 ,.,.) = \n  40   0  44   0   0\n  50  52   0  56  58\n[torch.FloatTensor of size 3x2x5]", "body": "PyTorch version: 0.2.0_4\r\n\r\nIt appears that torch.nn.Dropout is multiplying the values it doesn't zero out by 1/(1 - p). (I'm assuming this isn't expected behavior?)\r\n\r\n```\r\nimport torch\r\nb = torch.FloatTensor([i for i in range(30)]).view(3, 2, 5)\r\nb = torch.nn.autograd.Variable(b)\r\ndpoint3 = torch.nn.Dropout(p=.3)\r\ndpoint5 = torch.nn.Dropout(p=.5)\r\n```\r\nb is\r\n\r\n```\r\nVariable containing:\r\n(0 ,.,.) = \r\n   0   1   2   3   4\r\n   5   6   7   8   9\r\n\r\n(1 ,.,.) = \r\n  10  11  12  13  14\r\n  15  16  17  18  19\r\n\r\n(2 ,.,.) = \r\n  20  21  22  23  24\r\n  25  26  27  28  29\r\n[torch.FloatTensor of size 3x2x5]\r\n```\r\n\r\nIf I do\r\n\r\n```dpoint3(b)```\r\n\r\nI get\r\n\r\n```\r\nVariable containing:\r\n(0 ,.,.) = \r\n   0.0000   1.4286   2.8571   4.2857   5.7143\r\n   0.0000   0.0000  10.0000  11.4286  12.8571\r\n\r\n(1 ,.,.) = \r\n  14.2857  15.7143  17.1429  18.5714  20.0000\r\n   0.0000  22.8571   0.0000   0.0000  27.1429\r\n\r\n(2 ,.,.) = \r\n  28.5714  30.0000   0.0000  32.8571  34.2857\r\n   0.0000  37.1429  38.5714  40.0000  41.4286\r\n[torch.FloatTensor of size 3x2x5]\r\n```\r\n\r\nIf I do \r\n\r\n```dpoint5(b)```\r\n\r\nI get\r\n\r\n```\r\nVariable containing:\r\n(0 ,.,.) = \r\n   0   0   0   0   8\r\n  10  12  14   0   0\r\n\r\n(1 ,.,.) = \r\n   0  22  24   0   0\r\n  30   0   0  36   0\r\n\r\n(2 ,.,.) = \r\n  40   0  44   0   0\r\n  50  52   0  56  58\r\n[torch.FloatTensor of size 3x2x5]\r\n```"}