{"url": "https://api.github.com/repos/pytorch/pytorch/pulls/2884", "id": 143659543, "node_id": "MDExOlB1bGxSZXF1ZXN0MTQzNjU5NTQz", "html_url": "https://github.com/pytorch/pytorch/pull/2884", "diff_url": "https://github.com/pytorch/pytorch/pull/2884.diff", "patch_url": "https://github.com/pytorch/pytorch/pull/2884.patch", "issue_url": "https://api.github.com/repos/pytorch/pytorch/issues/2884", "number": 2884, "state": "closed", "locked": false, "title": "Recursive load_state_dict()", "user": {"login": "mys007", "id": 5921083, "node_id": "MDQ6VXNlcjU5MjEwODM=", "avatar_url": "https://avatars2.githubusercontent.com/u/5921083?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mys007", "html_url": "https://github.com/mys007", "followers_url": "https://api.github.com/users/mys007/followers", "following_url": "https://api.github.com/users/mys007/following{/other_user}", "gists_url": "https://api.github.com/users/mys007/gists{/gist_id}", "starred_url": "https://api.github.com/users/mys007/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mys007/subscriptions", "organizations_url": "https://api.github.com/users/mys007/orgs", "repos_url": "https://api.github.com/users/mys007/repos", "events_url": "https://api.github.com/users/mys007/events{/privacy}", "received_events_url": "https://api.github.com/users/mys007/received_events", "type": "User", "site_admin": false}, "body": "I propose to make tensor assignments in `load_state_dict()` recursive over the tree of modules. The advantage of this somewhat more complicated code is that one is able to handle versioning of `state_dict` easily in an encapsulated way inside each specific `Module`. For example:\r\n\r\n```\r\ndef load_state_dict(self, state_dict, prefix, state_tree):\r\n    if 'member1' in state_tree: # renaming\r\n        state_tree['renamed_member'] = state_tree['member1']\r\n        del state_tree['member1']\r\n    if `member2` in state_tree: # removing\r\n        del state_tree['member2']\r\n    if `member3` not in state_tree: #adding\r\n        state_tree['member3'] = torch.zeros(5,5)\r\n    super(Foo, self).load_state_dict(state_dict, prefix, state_tree)            \r\n```", "created_at": "2017-09-28T14:12:58Z", "updated_at": "2017-10-03T14:08:52Z", "closed_at": "2017-10-03T13:00:28Z", "merged_at": null, "merge_commit_sha": "94abdd0c551c35946484b34d2c847350625f1615", "assignee": null, "assignees": [], "requested_reviewers": [], "requested_teams": [], "labels": [], "milestone": null, "commits_url": "https://api.github.com/repos/pytorch/pytorch/pulls/2884/commits", "review_comments_url": "https://api.github.com/repos/pytorch/pytorch/pulls/2884/comments", "review_comment_url": "https://api.github.com/repos/pytorch/pytorch/pulls/comments{/number}", "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/2884/comments", "statuses_url": "https://api.github.com/repos/pytorch/pytorch/statuses/983e8669b53092ceb1751cbcf6a0ae90bf1d2233", "head": {"label": "mys007:load_state_dict_recursive", "ref": "load_state_dict_recursive", "sha": "983e8669b53092ceb1751cbcf6a0ae90bf1d2233", "user": {"login": "mys007", "id": 5921083, "node_id": "MDQ6VXNlcjU5MjEwODM=", "avatar_url": "https://avatars2.githubusercontent.com/u/5921083?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mys007", "html_url": "https://github.com/mys007", "followers_url": "https://api.github.com/users/mys007/followers", "following_url": "https://api.github.com/users/mys007/following{/other_user}", "gists_url": "https://api.github.com/users/mys007/gists{/gist_id}", "starred_url": "https://api.github.com/users/mys007/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mys007/subscriptions", "organizations_url": "https://api.github.com/users/mys007/orgs", "repos_url": "https://api.github.com/users/mys007/repos", "events_url": "https://api.github.com/users/mys007/events{/privacy}", "received_events_url": "https://api.github.com/users/mys007/received_events", "type": "User", "site_admin": false}, "repo": {"id": 105153534, "node_id": "MDEwOlJlcG9zaXRvcnkxMDUxNTM1MzQ=", "name": "pytorch", "full_name": "mys007/pytorch", "private": false, "owner": {"login": "mys007", "id": 5921083, "node_id": "MDQ6VXNlcjU5MjEwODM=", "avatar_url": "https://avatars2.githubusercontent.com/u/5921083?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mys007", "html_url": "https://github.com/mys007", "followers_url": "https://api.github.com/users/mys007/followers", "following_url": "https://api.github.com/users/mys007/following{/other_user}", "gists_url": "https://api.github.com/users/mys007/gists{/gist_id}", "starred_url": "https://api.github.com/users/mys007/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mys007/subscriptions", "organizations_url": "https://api.github.com/users/mys007/orgs", "repos_url": "https://api.github.com/users/mys007/repos", "events_url": "https://api.github.com/users/mys007/events{/privacy}", "received_events_url": "https://api.github.com/users/mys007/received_events", "type": "User", "site_admin": false}, "html_url": "https://github.com/mys007/pytorch", "description": "Tensors and Dynamic neural networks in Python  with strong GPU acceleration", "fork": true, "url": "https://api.github.com/repos/mys007/pytorch", "forks_url": "https://api.github.com/repos/mys007/pytorch/forks", "keys_url": "https://api.github.com/repos/mys007/pytorch/keys{/key_id}", "collaborators_url": "https://api.github.com/repos/mys007/pytorch/collaborators{/collaborator}", "teams_url": "https://api.github.com/repos/mys007/pytorch/teams", "hooks_url": "https://api.github.com/repos/mys007/pytorch/hooks", "issue_events_url": "https://api.github.com/repos/mys007/pytorch/issues/events{/number}", "events_url": "https://api.github.com/repos/mys007/pytorch/events", "assignees_url": "https://api.github.com/repos/mys007/pytorch/assignees{/user}", "branches_url": "https://api.github.com/repos/mys007/pytorch/branches{/branch}", "tags_url": "https://api.github.com/repos/mys007/pytorch/tags", "blobs_url": "https://api.github.com/repos/mys007/pytorch/git/blobs{/sha}", "git_tags_url": "https://api.github.com/repos/mys007/pytorch/git/tags{/sha}", "git_refs_url": "https://api.github.com/repos/mys007/pytorch/git/refs{/sha}", "trees_url": "https://api.github.com/repos/mys007/pytorch/git/trees{/sha}", "statuses_url": "https://api.github.com/repos/mys007/pytorch/statuses/{sha}", "languages_url": "https://api.github.com/repos/mys007/pytorch/languages", "stargazers_url": "https://api.github.com/repos/mys007/pytorch/stargazers", "contributors_url": "https://api.github.com/repos/mys007/pytorch/contributors", "subscribers_url": "https://api.github.com/repos/mys007/pytorch/subscribers", "subscription_url": "https://api.github.com/repos/mys007/pytorch/subscription", "commits_url": "https://api.github.com/repos/mys007/pytorch/commits{/sha}", "git_commits_url": "https://api.github.com/repos/mys007/pytorch/git/commits{/sha}", "comments_url": "https://api.github.com/repos/mys007/pytorch/comments{/number}", "issue_comment_url": "https://api.github.com/repos/mys007/pytorch/issues/comments{/number}", "contents_url": "https://api.github.com/repos/mys007/pytorch/contents/{+path}", "compare_url": "https://api.github.com/repos/mys007/pytorch/compare/{base}...{head}", "merges_url": "https://api.github.com/repos/mys007/pytorch/merges", "archive_url": "https://api.github.com/repos/mys007/pytorch/{archive_format}{/ref}", "downloads_url": "https://api.github.com/repos/mys007/pytorch/downloads", "issues_url": "https://api.github.com/repos/mys007/pytorch/issues{/number}", "pulls_url": "https://api.github.com/repos/mys007/pytorch/pulls{/number}", "milestones_url": "https://api.github.com/repos/mys007/pytorch/milestones{/number}", "notifications_url": "https://api.github.com/repos/mys007/pytorch/notifications{?since,all,participating}", "labels_url": "https://api.github.com/repos/mys007/pytorch/labels{/name}", "releases_url": "https://api.github.com/repos/mys007/pytorch/releases{/id}", "deployments_url": "https://api.github.com/repos/mys007/pytorch/deployments", "created_at": "2017-09-28T13:42:41Z", "updated_at": "2017-09-28T13:42:47Z", "pushed_at": "2017-09-28T13:51:49Z", "git_url": "git://github.com/mys007/pytorch.git", "ssh_url": "git@github.com:mys007/pytorch.git", "clone_url": "https://github.com/mys007/pytorch.git", "svn_url": "https://github.com/mys007/pytorch", "homepage": "http://pytorch.org", "size": 15555, "stargazers_count": 0, "watchers_count": 0, "language": "Python", "has_issues": false, "has_projects": true, "has_downloads": true, "has_wiki": true, "has_pages": false, "forks_count": 0, "mirror_url": null, "archived": false, "open_issues_count": 0, "license": {"key": "other", "name": "Other", "spdx_id": "NOASSERTION", "url": null, "node_id": "MDc6TGljZW5zZTA="}, "forks": 0, "open_issues": 0, "watchers": 0, "default_branch": "master"}}, "base": {"label": "pytorch:master", "ref": "master", "sha": "c27aaf67cd133c501c34d91cf77855fdae4a58ae", "user": {"login": "pytorch", "id": 21003710, "node_id": "MDEyOk9yZ2FuaXphdGlvbjIxMDAzNzEw", "avatar_url": "https://avatars3.githubusercontent.com/u/21003710?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pytorch", "html_url": "https://github.com/pytorch", "followers_url": "https://api.github.com/users/pytorch/followers", "following_url": "https://api.github.com/users/pytorch/following{/other_user}", "gists_url": "https://api.github.com/users/pytorch/gists{/gist_id}", "starred_url": "https://api.github.com/users/pytorch/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pytorch/subscriptions", "organizations_url": "https://api.github.com/users/pytorch/orgs", "repos_url": "https://api.github.com/users/pytorch/repos", "events_url": "https://api.github.com/users/pytorch/events{/privacy}", "received_events_url": "https://api.github.com/users/pytorch/received_events", "type": "Organization", "site_admin": false}, "repo": {"id": 65600975, "node_id": "MDEwOlJlcG9zaXRvcnk2NTYwMDk3NQ==", "name": "pytorch", "full_name": "pytorch/pytorch", "private": false, "owner": {"login": "pytorch", "id": 21003710, "node_id": "MDEyOk9yZ2FuaXphdGlvbjIxMDAzNzEw", "avatar_url": "https://avatars3.githubusercontent.com/u/21003710?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pytorch", "html_url": "https://github.com/pytorch", "followers_url": "https://api.github.com/users/pytorch/followers", "following_url": "https://api.github.com/users/pytorch/following{/other_user}", "gists_url": "https://api.github.com/users/pytorch/gists{/gist_id}", "starred_url": "https://api.github.com/users/pytorch/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pytorch/subscriptions", "organizations_url": "https://api.github.com/users/pytorch/orgs", "repos_url": "https://api.github.com/users/pytorch/repos", "events_url": "https://api.github.com/users/pytorch/events{/privacy}", "received_events_url": "https://api.github.com/users/pytorch/received_events", "type": "Organization", "site_admin": false}, "html_url": "https://github.com/pytorch/pytorch", "description": "Tensors and Dynamic neural networks in Python  with strong GPU acceleration", "fork": false, "url": "https://api.github.com/repos/pytorch/pytorch", "forks_url": "https://api.github.com/repos/pytorch/pytorch/forks", "keys_url": "https://api.github.com/repos/pytorch/pytorch/keys{/key_id}", "collaborators_url": "https://api.github.com/repos/pytorch/pytorch/collaborators{/collaborator}", "teams_url": "https://api.github.com/repos/pytorch/pytorch/teams", "hooks_url": "https://api.github.com/repos/pytorch/pytorch/hooks", "issue_events_url": "https://api.github.com/repos/pytorch/pytorch/issues/events{/number}", "events_url": "https://api.github.com/repos/pytorch/pytorch/events", "assignees_url": "https://api.github.com/repos/pytorch/pytorch/assignees{/user}", "branches_url": "https://api.github.com/repos/pytorch/pytorch/branches{/branch}", "tags_url": "https://api.github.com/repos/pytorch/pytorch/tags", "blobs_url": "https://api.github.com/repos/pytorch/pytorch/git/blobs{/sha}", "git_tags_url": "https://api.github.com/repos/pytorch/pytorch/git/tags{/sha}", "git_refs_url": "https://api.github.com/repos/pytorch/pytorch/git/refs{/sha}", "trees_url": "https://api.github.com/repos/pytorch/pytorch/git/trees{/sha}", "statuses_url": "https://api.github.com/repos/pytorch/pytorch/statuses/{sha}", "languages_url": "https://api.github.com/repos/pytorch/pytorch/languages", "stargazers_url": "https://api.github.com/repos/pytorch/pytorch/stargazers", "contributors_url": "https://api.github.com/repos/pytorch/pytorch/contributors", "subscribers_url": "https://api.github.com/repos/pytorch/pytorch/subscribers", "subscription_url": "https://api.github.com/repos/pytorch/pytorch/subscription", "commits_url": "https://api.github.com/repos/pytorch/pytorch/commits{/sha}", "git_commits_url": "https://api.github.com/repos/pytorch/pytorch/git/commits{/sha}", "comments_url": "https://api.github.com/repos/pytorch/pytorch/comments{/number}", "issue_comment_url": "https://api.github.com/repos/pytorch/pytorch/issues/comments{/number}", "contents_url": "https://api.github.com/repos/pytorch/pytorch/contents/{+path}", "compare_url": "https://api.github.com/repos/pytorch/pytorch/compare/{base}...{head}", "merges_url": "https://api.github.com/repos/pytorch/pytorch/merges", "archive_url": "https://api.github.com/repos/pytorch/pytorch/{archive_format}{/ref}", "downloads_url": "https://api.github.com/repos/pytorch/pytorch/downloads", "issues_url": "https://api.github.com/repos/pytorch/pytorch/issues{/number}", "pulls_url": "https://api.github.com/repos/pytorch/pytorch/pulls{/number}", "milestones_url": "https://api.github.com/repos/pytorch/pytorch/milestones{/number}", "notifications_url": "https://api.github.com/repos/pytorch/pytorch/notifications{?since,all,participating}", "labels_url": "https://api.github.com/repos/pytorch/pytorch/labels{/name}", "releases_url": "https://api.github.com/repos/pytorch/pytorch/releases{/id}", "deployments_url": "https://api.github.com/repos/pytorch/pytorch/deployments", "created_at": "2016-08-13T05:26:41Z", "updated_at": "2018-11-24T05:35:41Z", "pushed_at": "2018-11-24T05:34:07Z", "git_url": "git://github.com/pytorch/pytorch.git", "ssh_url": "git@github.com:pytorch/pytorch.git", "clone_url": "https://github.com/pytorch/pytorch.git", "svn_url": "https://github.com/pytorch/pytorch", "homepage": "http://pytorch.org", "size": 89651, "stargazers_count": 21577, "watchers_count": 21577, "language": "C++", "has_issues": true, "has_projects": true, "has_downloads": true, "has_wiki": true, "has_pages": false, "forks_count": 5149, "mirror_url": null, "archived": false, "open_issues_count": 2193, "license": {"key": "other", "name": "Other", "spdx_id": "NOASSERTION", "url": null, "node_id": "MDc6TGljZW5zZTA="}, "forks": 5149, "open_issues": 2193, "watchers": 21577, "default_branch": "master"}}, "_links": {"self": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/2884"}, "html": {"href": "https://github.com/pytorch/pytorch/pull/2884"}, "issue": {"href": "https://api.github.com/repos/pytorch/pytorch/issues/2884"}, "comments": {"href": "https://api.github.com/repos/pytorch/pytorch/issues/2884/comments"}, "review_comments": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/2884/comments"}, "review_comment": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/comments{/number}"}, "commits": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/2884/commits"}, "statuses": {"href": "https://api.github.com/repos/pytorch/pytorch/statuses/983e8669b53092ceb1751cbcf6a0ae90bf1d2233"}}, "author_association": "CONTRIBUTOR", "body_html": "<p>I propose to make tensor assignments in <code>load_state_dict()</code> recursive over the tree of modules. The advantage of this somewhat more complicated code is that one is able to handle versioning of <code>state_dict</code> easily in an encapsulated way inside each specific <code>Module</code>. For example:</p>\n<pre><code>def load_state_dict(self, state_dict, prefix, state_tree):\n    if 'member1' in state_tree: # renaming\n        state_tree['renamed_member'] = state_tree['member1']\n        del state_tree['member1']\n    if `member2` in state_tree: # removing\n        del state_tree['member2']\n    if `member3` not in state_tree: #adding\n        state_tree['member3'] = torch.zeros(5,5)\n    super(Foo, self).load_state_dict(state_dict, prefix, state_tree)            \n</code></pre>", "body_text": "I propose to make tensor assignments in load_state_dict() recursive over the tree of modules. The advantage of this somewhat more complicated code is that one is able to handle versioning of state_dict easily in an encapsulated way inside each specific Module. For example:\ndef load_state_dict(self, state_dict, prefix, state_tree):\n    if 'member1' in state_tree: # renaming\n        state_tree['renamed_member'] = state_tree['member1']\n        del state_tree['member1']\n    if `member2` in state_tree: # removing\n        del state_tree['member2']\n    if `member3` not in state_tree: #adding\n        state_tree['member3'] = torch.zeros(5,5)\n    super(Foo, self).load_state_dict(state_dict, prefix, state_tree)", "merged": false, "mergeable": null, "rebaseable": null, "mergeable_state": "unknown", "merged_by": null, "comments": 5, "review_comments": 0, "maintainer_can_modify": false, "commits": 1, "additions": 35, "deletions": 14, "changed_files": 1}