{"url": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/85057666", "pull_request_review_id": 5794953, "id": 85057666, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDg1MDU3NjY2", "diff_hunk": "@@ -0,0 +1,250 @@\n+#ifndef THS_GENERIC_FILE\n+#define THS_GENERIC_FILE \"torch/csrc/sparse/generic/Tensor.cpp\"\n+#else\n+\n+PyObject *THSPTensorClass = NULL;\n+\n+PyObject * THSPTensor_(New)(THSTensor *ptr)\n+{\n+  THPObjectPtr args = PyTuple_New(0);\n+  THPObjectPtr kwargs;\n+  THPUtils_assert(args, \"Could not create a new sparse tensor object - \"\n+      \"failed to allocate argument tuple\");\n+  if (ptr) {\n+    kwargs = Py_BuildValue(\"{s:N}\", \"cdata\", PyLong_FromVoidPtr(ptr));\n+    THPUtils_assert(kwargs, \"Could not create a new sparse tensor object - \"\n+        \"failed to allocate keyword argument dictionary\");\n+  }\n+  PyObject *result = PyObject_Call(THSPTensorClass, args, kwargs);\n+  return result;\n+}\n+\n+#include \"TensorMethods.cpp\"\n+\n+#if 0\n+PyObject * THSPTensor_(newWeakObject)(THSTensor *storage) {\n+  if (storage->allocator == &THSTensorWeakRefAllocator) {\n+    auto allocator_obj = ((TensorWeakRefAllocator*)storage->allocatorContext);\n+    Py_INCREF(allocator_obj->object.get());\n+    return allocator_obj->object.get();\n+  }\n+  std::unique_ptr<TensorWeakRefAllocator> new_ctx(new TensorWeakRefAllocator(\n+        nullptr, storage->allocator, storage->allocatorContext));\n+  PyObject *weak_result = THSPTensor_(New)(storage);\n+  if (!weak_result)\n+    return NULL;\n+  Py_INCREF(weak_result); // THSPObjectPtr steals the reference\n+  new_ctx->object = weak_result;\n+  storage->allocatorContext = (void*)new_ctx.release();\n+  storage->allocator = &THSTensorWeakRefAllocator;\n+  return weak_result;\n+}\n+#endif\n+\n+static void THSPTensor_(dealloc)(THSPTensor* self)\n+{\n+  if (self->cdata)\n+    THSTensor_(free)(LIBRARY_STATE self->cdata);\n+  Py_TYPE(self)->tp_free((PyObject*)self);\n+}\n+\n+static PyObject * THSPTensor_(pynew)(PyTypeObject *type, PyObject *args, PyObject *kwargs)", "path": "torch/csrc/sparse/generic/Tensor.cpp", "position": 51, "original_position": 51, "commit_id": "05d8afd3c83435103c9fc38b3be0351dc7165175", "original_commit_id": "247bd001d5f4b25bd9ac607f4f15c762bc68b86a", "user": {"login": "ebetica", "id": 3605224, "node_id": "MDQ6VXNlcjM2MDUyMjQ=", "avatar_url": "https://avatars3.githubusercontent.com/u/3605224?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ebetica", "html_url": "https://github.com/ebetica", "followers_url": "https://api.github.com/users/ebetica/followers", "following_url": "https://api.github.com/users/ebetica/following{/other_user}", "gists_url": "https://api.github.com/users/ebetica/gists{/gist_id}", "starred_url": "https://api.github.com/users/ebetica/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ebetica/subscriptions", "organizations_url": "https://api.github.com/users/ebetica/orgs", "repos_url": "https://api.github.com/users/ebetica/repos", "events_url": "https://api.github.com/users/ebetica/events{/privacy}", "received_events_url": "https://api.github.com/users/ebetica/received_events", "type": "User", "site_admin": false}, "body": "I don't think it's worth it, it's not a complete copy, since the sparse tensor initialization lacks signatures and has different ones.\n", "created_at": "2016-10-26T06:42:22Z", "updated_at": "2018-11-23T15:31:47Z", "html_url": "https://github.com/pytorch/pytorch/pull/116#discussion_r85057666", "pull_request_url": "https://api.github.com/repos/pytorch/pytorch/pulls/116", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/85057666"}, "html": {"href": "https://github.com/pytorch/pytorch/pull/116#discussion_r85057666"}, "pull_request": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/116"}}, "body_html": "<p>I don't think it's worth it, it's not a complete copy, since the sparse tensor initialization lacks signatures and has different ones.</p>", "body_text": "I don't think it's worth it, it's not a complete copy, since the sparse tensor initialization lacks signatures and has different ones.", "in_reply_to_id": 82900862}