{"url": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/83660874", "pull_request_review_id": 4489412, "id": 83660874, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDgzNjYwODc0", "diff_hunk": "@@ -0,0 +1,173 @@\n+#ifndef THS_GENERIC_FILE\n+#define THS_GENERIC_FILE \"generic/THSTensorMath.c\"\n+#else\n+\n+#define ROW_PTR2(t, r) (THTensor_(data)(t) + (r) * (t)->stride[0])\n+#define COL_PTR2(t, c) (THTensor_(data)(t) + (c) * (t)->stride[1])\n+\n+THLongTensor *THSTensor_(toCSR)(long const *indices, long dim, long nnz) {\n+  long h, i, hp0, hp1;\n+  THLongTensor *csr = THLongTensor_newWithSize1d(dim + 1);\n+  THLongTensor_zero(csr);\n+\n+  // Convert the sparse matrix to CSR format\n+#pragma omp parallel for private(i, h, hp0, hp1) schedule(static) if (nnz > 10000)\n+  for (i=0; i<nnz; i++) {\n+    hp0 = indices[i];\n+    hp1 = (i+1 == nnz) ?  dim : indices[i+1];\n+    if (hp0 != hp1) for (h = hp0; h < hp1; h++) {\n+      THTensor_fastSet1d(csr, h+1, i+1);\n+    }\n+  }\n+  return csr;\n+}\n+\n+void THSTensor_(spmm)(THTensor *r_, THSTensor *sparse, THTensor *dense) {", "path": "torch/lib/THS/generic/THSTensorMath.c", "position": null, "original_position": 25, "commit_id": "05d8afd3c83435103c9fc38b3be0351dc7165175", "original_commit_id": "15a6b76bbb9c1331f3fc9e339474616e56b08544", "user": {"login": "ebetica", "id": 3605224, "node_id": "MDQ6VXNlcjM2MDUyMjQ=", "avatar_url": "https://avatars3.githubusercontent.com/u/3605224?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ebetica", "html_url": "https://github.com/ebetica", "followers_url": "https://api.github.com/users/ebetica/followers", "following_url": "https://api.github.com/users/ebetica/following{/other_user}", "gists_url": "https://api.github.com/users/ebetica/gists{/gist_id}", "starred_url": "https://api.github.com/users/ebetica/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ebetica/subscriptions", "organizations_url": "https://api.github.com/users/ebetica/orgs", "repos_url": "https://api.github.com/users/ebetica/repos", "events_url": "https://api.github.com/users/ebetica/events{/privacy}", "received_events_url": "https://api.github.com/users/ebetica/received_events", "type": "User", "site_admin": false}, "body": "As per the discussion [here](https://github.com/pytorch/pytorch/pull/116#discussion_r82911079) I made it match Intel MKL naming conventions. Making it match Intel's naming conventions will make it easier for those familiar with sparse operations to reason about, but less easy for those expecting torch ops. I'm not sure what the best idea here is...\n", "created_at": "2016-10-17T14:53:20Z", "updated_at": "2018-11-23T15:31:41Z", "html_url": "https://github.com/pytorch/pytorch/pull/116#discussion_r83660874", "pull_request_url": "https://api.github.com/repos/pytorch/pytorch/pulls/116", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/83660874"}, "html": {"href": "https://github.com/pytorch/pytorch/pull/116#discussion_r83660874"}, "pull_request": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/116"}}, "body_html": "<p>As per the discussion <a href=\"https://github.com/pytorch/pytorch/pull/116#discussion_r82911079\" data-hovercard-type=\"pull_request\" data-hovercard-url=\"/pytorch/pytorch/pull/116/hovercard\">here</a> I made it match Intel MKL naming conventions. Making it match Intel's naming conventions will make it easier for those familiar with sparse operations to reason about, but less easy for those expecting torch ops. I'm not sure what the best idea here is...</p>", "body_text": "As per the discussion here I made it match Intel MKL naming conventions. Making it match Intel's naming conventions will make it easier for those familiar with sparse operations to reason about, but less easy for those expecting torch ops. I'm not sure what the best idea here is...", "in_reply_to_id": 83623162}