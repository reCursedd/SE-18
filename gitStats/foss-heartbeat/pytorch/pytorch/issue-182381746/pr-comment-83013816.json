{"url": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/83013816", "pull_request_review_id": 3881452, "id": 83013816, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDgzMDEzODE2", "diff_hunk": "@@ -0,0 +1,102 @@\n+#ifndef THS_GENERIC_FILE\n+#define THS_GENERIC_FILE \"generic/THSTensorMath.c\"\n+#else\n+\n+/* Check header file for some documentation */\n+#define ROW_PTR2(t, r) (THTensor_(data)(t) + (r) * (t)->stride[0])\n+#define COL_PTR2(t, c) (THTensor_(data)(t) + (c) * (t)->stride[1])\n+\n+/*\n+static real THTensor_(get1d)(THTensor *t, long x0) {\n+  return THStorage_(get)(t->storage, t->storageOffset + x0*t->stride[0]);\n+}\n+\n+static void THTensor_(set1d)(THTensor *t, long x0, real value) {\n+  THStorage_(set)(t->storage, t->storageOffset + x0*t->stride[0], value);\n+}\n+\n+static real THTensor_(get2d)(const THTensor *t, long x0, long x1) {\n+  return THStorage_(get)(t->storage, t->storageOffset +\n+      x0*t->stride[0] + x1*t->stride[1]);\n+}\n+*/\n+\n+void THSTensor_(addSmm)(THTensor *r_,\n+    real beta, THTensor *t, real alpha, THSTensor *sparse, THTensor *dense) {\n+  long h, i, j, hp0, hp1;\n+  long dim_i, dim_j, dim_k; // ixj * jxk = ixk\n+  long nnz;\n+  THLongTensor *csr, *indicies;\n+  THTensor *values;\n+  // batch = i\n+  // outdim = k\n+  // indim = j\n+\n+  if( (sparse->nDimension != 2) || (dense->nDimension != 2))\n+    THError(\"matrices expected, got %dD, %dD tensors\",\n+        sparse->nDimension, dense->nDimension);\n+\n+  if (!sparse->contiguous) THSTensor_(contiguous)(sparse);\n+\n+  dim_i = THSTensor_(size)(sparse, 0);\n+  dim_j = THSTensor_(size)(sparse, 1);\n+  dim_k = THTensor_(size)(dense, 1);\n+\n+  nnz = THSTensor_(nnz)(sparse);\n+  indicies = THSTensor_(indicies)(sparse);\n+  values = THSTensor_(values)(sparse);\n+\n+  csr = THLongTensor_newWithSize1d(dim_i + 1);\n+  THLongTensor_zero(csr);\n+\n+  // Convert the sparse matrix to CSR format\n+#pragma omp parallel for private(i, h, hp0, hp1) schedule(static) if (nnz > 10000)\n+  for (i=0; i<nnz; i++) {\n+    hp0 = THLongTensor_get2d(indicies, 0, i);\n+    hp1 = (i+1 == nnz) ?  dim_i : THLongTensor_get2d(indicies, 0, i+1);\n+    if (hp0 != hp1) for (h = hp0; h < hp1; h++) {\n+      THLongTensor_set1d(csr, h+1, i+1);", "path": "torch/lib/THS/generic/THSTensorMath.c", "position": null, "original_position": 58, "commit_id": "05d8afd3c83435103c9fc38b3be0351dc7165175", "original_commit_id": "247bd001d5f4b25bd9ac607f4f15c762bc68b86a", "user": {"login": "fmassa", "id": 9110200, "node_id": "MDQ6VXNlcjkxMTAyMDA=", "avatar_url": "https://avatars2.githubusercontent.com/u/9110200?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fmassa", "html_url": "https://github.com/fmassa", "followers_url": "https://api.github.com/users/fmassa/followers", "following_url": "https://api.github.com/users/fmassa/following{/other_user}", "gists_url": "https://api.github.com/users/fmassa/gists{/gist_id}", "starred_url": "https://api.github.com/users/fmassa/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fmassa/subscriptions", "organizations_url": "https://api.github.com/users/fmassa/orgs", "repos_url": "https://api.github.com/users/fmassa/repos", "events_url": "https://api.github.com/users/fmassa/events{/privacy}", "received_events_url": "https://api.github.com/users/fmassa/received_events", "type": "User", "site_admin": false}, "body": "There is already a macro for fast access in TH, [called `fastGet1d`](https://github.com/torch/torch7/blob/master/lib/TH/THTensorMacros.h#L6-L7)\n", "created_at": "2016-10-12T14:13:35Z", "updated_at": "2018-11-23T15:31:38Z", "html_url": "https://github.com/pytorch/pytorch/pull/116#discussion_r83013816", "pull_request_url": "https://api.github.com/repos/pytorch/pytorch/pulls/116", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/83013816"}, "html": {"href": "https://github.com/pytorch/pytorch/pull/116#discussion_r83013816"}, "pull_request": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/116"}}, "body_html": "<p>There is already a macro for fast access in TH, <a href=\"https://github.com/torch/torch7/blob/master/lib/TH/THTensorMacros.h#L6-L7\">called <code>fastGet1d</code></a></p>", "body_text": "There is already a macro for fast access in TH, called fastGet1d", "in_reply_to_id": 82897081}