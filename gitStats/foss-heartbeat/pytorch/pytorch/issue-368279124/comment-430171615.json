{"url": "https://api.github.com/repos/pytorch/pytorch/issues/comments/430171615", "html_url": "https://github.com/pytorch/pytorch/issues/12484#issuecomment-430171615", "issue_url": "https://api.github.com/repos/pytorch/pytorch/issues/12484", "id": 430171615, "node_id": "MDEyOklzc3VlQ29tbWVudDQzMDE3MTYxNQ==", "user": {"login": "dhgrs", "id": 22191150, "node_id": "MDQ6VXNlcjIyMTkxMTUw", "avatar_url": "https://avatars2.githubusercontent.com/u/22191150?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dhgrs", "html_url": "https://github.com/dhgrs", "followers_url": "https://api.github.com/users/dhgrs/followers", "following_url": "https://api.github.com/users/dhgrs/following{/other_user}", "gists_url": "https://api.github.com/users/dhgrs/gists{/gist_id}", "starred_url": "https://api.github.com/users/dhgrs/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dhgrs/subscriptions", "organizations_url": "https://api.github.com/users/dhgrs/orgs", "repos_url": "https://api.github.com/users/dhgrs/repos", "events_url": "https://api.github.com/users/dhgrs/events{/privacy}", "received_events_url": "https://api.github.com/users/dhgrs/received_events", "type": "User", "site_admin": false}, "created_at": "2018-10-16T09:40:02Z", "updated_at": "2018-10-16T09:40:02Z", "author_association": "NONE", "body_html": "<p>Sorry, <code>x.to(torch.device('cuda' if args.use_cuda else 'cpu'))</code> in my script was wrong and yours is right.</p>\n<p>I used docker <code>floydhub/pytorch:0.4.1-gpu.cuda9cudnn7-py3.35</code> to reproduce it. You can find it <a href=\"https://hub.docker.com/r/floydhub/pytorch/\" rel=\"nofollow\">here</a>.<br>\nHere is the results in docker.</p>\n<pre><code>$python3 script.py\nweight has nan\noutput has nan\ntensor([[[nan, nan, nan,  ..., nan, nan, nan],\n         [nan, nan, nan,  ..., nan, nan, nan],\n         [nan, nan, nan,  ..., nan, nan, nan],\n         ...,\n         [nan, nan, nan,  ..., nan, nan, nan],\n         [nan, nan, nan,  ..., nan, nan, nan],\n         [nan, nan, nan,  ..., nan, nan, nan]]], grad_fn=&lt;SqueezeBackward1&gt;)\n</code></pre>\n<pre><code>$python3 script.py --use_cuda\nweight has nan\ntensor([[[-inf, -inf, -inf,  ..., -inf, -inf, -inf],\n         [-inf, -inf, -inf,  ..., -inf, -inf, -inf],\n         [-inf, -inf, -inf,  ..., -inf, -inf, -inf],\n         ...,\n         [-inf, -inf, -inf,  ..., -inf, -inf, -inf],\n         [-inf, -inf, -inf,  ..., -inf, -inf, -inf],\n         [-inf, -inf, -inf,  ..., -inf, -inf, -inf]]],\n       device='cuda:0', grad_fn=&lt;SqueezeBackward1&gt;)\n</code></pre>", "body_text": "Sorry, x.to(torch.device('cuda' if args.use_cuda else 'cpu')) in my script was wrong and yours is right.\nI used docker floydhub/pytorch:0.4.1-gpu.cuda9cudnn7-py3.35 to reproduce it. You can find it here.\nHere is the results in docker.\n$python3 script.py\nweight has nan\noutput has nan\ntensor([[[nan, nan, nan,  ..., nan, nan, nan],\n         [nan, nan, nan,  ..., nan, nan, nan],\n         [nan, nan, nan,  ..., nan, nan, nan],\n         ...,\n         [nan, nan, nan,  ..., nan, nan, nan],\n         [nan, nan, nan,  ..., nan, nan, nan],\n         [nan, nan, nan,  ..., nan, nan, nan]]], grad_fn=<SqueezeBackward1>)\n\n$python3 script.py --use_cuda\nweight has nan\ntensor([[[-inf, -inf, -inf,  ..., -inf, -inf, -inf],\n         [-inf, -inf, -inf,  ..., -inf, -inf, -inf],\n         [-inf, -inf, -inf,  ..., -inf, -inf, -inf],\n         ...,\n         [-inf, -inf, -inf,  ..., -inf, -inf, -inf],\n         [-inf, -inf, -inf,  ..., -inf, -inf, -inf],\n         [-inf, -inf, -inf,  ..., -inf, -inf, -inf]]],\n       device='cuda:0', grad_fn=<SqueezeBackward1>)", "body": "Sorry, `x.to(torch.device('cuda' if args.use_cuda else 'cpu'))` in my script was wrong and yours is right.\r\n\r\nI used docker `floydhub/pytorch:0.4.1-gpu.cuda9cudnn7-py3.35` to reproduce it. You can find it [here](https://hub.docker.com/r/floydhub/pytorch/).\r\nHere is the results in docker.\r\n```\r\n$python3 script.py\r\nweight has nan\r\noutput has nan\r\ntensor([[[nan, nan, nan,  ..., nan, nan, nan],\r\n         [nan, nan, nan,  ..., nan, nan, nan],\r\n         [nan, nan, nan,  ..., nan, nan, nan],\r\n         ...,\r\n         [nan, nan, nan,  ..., nan, nan, nan],\r\n         [nan, nan, nan,  ..., nan, nan, nan],\r\n         [nan, nan, nan,  ..., nan, nan, nan]]], grad_fn=<SqueezeBackward1>)\r\n```\r\n\r\n```\r\n$python3 script.py --use_cuda\r\nweight has nan\r\ntensor([[[-inf, -inf, -inf,  ..., -inf, -inf, -inf],\r\n         [-inf, -inf, -inf,  ..., -inf, -inf, -inf],\r\n         [-inf, -inf, -inf,  ..., -inf, -inf, -inf],\r\n         ...,\r\n         [-inf, -inf, -inf,  ..., -inf, -inf, -inf],\r\n         [-inf, -inf, -inf,  ..., -inf, -inf, -inf],\r\n         [-inf, -inf, -inf,  ..., -inf, -inf, -inf]]],\r\n       device='cuda:0', grad_fn=<SqueezeBackward1>)\r\n```\r\n"}