{"url": "https://api.github.com/repos/pytorch/pytorch/issues/comments/318615584", "html_url": "https://github.com/pytorch/pytorch/issues/2227#issuecomment-318615584", "issue_url": "https://api.github.com/repos/pytorch/pytorch/issues/2227", "id": 318615584, "node_id": "MDEyOklzc3VlQ29tbWVudDMxODYxNTU4NA==", "user": {"login": "bheinzerling", "id": 4348795, "node_id": "MDQ6VXNlcjQzNDg3OTU=", "avatar_url": "https://avatars1.githubusercontent.com/u/4348795?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bheinzerling", "html_url": "https://github.com/bheinzerling", "followers_url": "https://api.github.com/users/bheinzerling/followers", "following_url": "https://api.github.com/users/bheinzerling/following{/other_user}", "gists_url": "https://api.github.com/users/bheinzerling/gists{/gist_id}", "starred_url": "https://api.github.com/users/bheinzerling/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bheinzerling/subscriptions", "organizations_url": "https://api.github.com/users/bheinzerling/orgs", "repos_url": "https://api.github.com/users/bheinzerling/repos", "events_url": "https://api.github.com/users/bheinzerling/events{/privacy}", "received_events_url": "https://api.github.com/users/bheinzerling/received_events", "type": "User", "site_admin": false}, "created_at": "2017-07-28T10:12:48Z", "updated_at": "2017-07-28T10:14:31Z", "author_association": "CONTRIBUTOR", "body_html": "<p><code>torch.nn.NLLLoss</code> is here:</p>\n<p><a href=\"https://github.com/pytorch/pytorch/blob/master/torch/nn/modules/loss.py?hl=64#L64\">https://github.com/pytorch/pytorch/blob/master/torch/nn/modules/loss.py?hl=64#L64</a></p>\n<p>Like many modules, this module is just a thin wrapper around the corresponding function, in this case <code>nll_loss</code>:</p>\n<p>line 131: <code>return F.nll_loss(...)</code></p>\n<p>Tracing the F import, we find:</p>\n<p><a href=\"https://github.com/pytorch/pytorch/blob/master/torch/nn/functional.py#L644\">https://github.com/pytorch/pytorch/blob/master/torch/nn/functional.py#L644</a></p>\n<p>This function, in turn, calls:</p>\n<p><code>return _functions.thnn.NLLLoss(...)</code></p>\n<p><code>_functions</code> is here:<br>\n<a href=\"https://github.com/pytorch/pytorch/blob/master/torch/nn/_functions/thnn/loss.py\">https://github.com/pytorch/pytorch/blob/master/torch/nn/_functions/thnn/loss.py</a></p>\n<p>But this is kind of a dead end, as there is no Python code implementing <code>NLLLoss</code>.</p>\n<p>Like many low-level functions, <code>NLLLoss</code> is implemented in C. The PyTorch C code is here:</p>\n<p><a href=\"https://github.com/pytorch/pytorch/blob/master/torch/lib\">https://github.com/pytorch/pytorch/blob/master/torch/lib</a></p>\n<p><code>torch.nn</code> implementations are in THNN, which leads to the actual implementation:</p>\n<p><a href=\"https://github.com/pytorch/pytorch/blob/master/torch/lib/THNN/generic/ClassNLLCriterion.c#L5\">https://github.com/pytorch/pytorch/blob/master/torch/lib/THNN/generic/ClassNLLCriterion.c#L5</a></p>", "body_text": "torch.nn.NLLLoss is here:\nhttps://github.com/pytorch/pytorch/blob/master/torch/nn/modules/loss.py?hl=64#L64\nLike many modules, this module is just a thin wrapper around the corresponding function, in this case nll_loss:\nline 131: return F.nll_loss(...)\nTracing the F import, we find:\nhttps://github.com/pytorch/pytorch/blob/master/torch/nn/functional.py#L644\nThis function, in turn, calls:\nreturn _functions.thnn.NLLLoss(...)\n_functions is here:\nhttps://github.com/pytorch/pytorch/blob/master/torch/nn/_functions/thnn/loss.py\nBut this is kind of a dead end, as there is no Python code implementing NLLLoss.\nLike many low-level functions, NLLLoss is implemented in C. The PyTorch C code is here:\nhttps://github.com/pytorch/pytorch/blob/master/torch/lib\ntorch.nn implementations are in THNN, which leads to the actual implementation:\nhttps://github.com/pytorch/pytorch/blob/master/torch/lib/THNN/generic/ClassNLLCriterion.c#L5", "body": "`torch.nn.NLLLoss` is here:\r\n\r\nhttps://github.com/pytorch/pytorch/blob/master/torch/nn/modules/loss.py?hl=64#L64\r\n\r\nLike many modules, this module is just a thin wrapper around the corresponding function, in this case `nll_loss`:\r\n\r\nline 131: `return F.nll_loss(...)`\r\n\r\nTracing the F import, we find:\r\n\r\nhttps://github.com/pytorch/pytorch/blob/master/torch/nn/functional.py#L644\r\n\r\nThis function, in turn, calls:\r\n\r\n`return _functions.thnn.NLLLoss(...)`\r\n\r\n`_functions` is here:\r\nhttps://github.com/pytorch/pytorch/blob/master/torch/nn/_functions/thnn/loss.py\r\n\r\nBut this is kind of a dead end, as there is no Python code implementing `NLLLoss`.\r\n\r\nLike many low-level functions, `NLLLoss` is implemented in C. The PyTorch C code is here:\r\n\r\nhttps://github.com/pytorch/pytorch/blob/master/torch/lib\r\n\r\n`torch.nn` implementations are in THNN, which leads to the actual implementation:\r\n\r\nhttps://github.com/pytorch/pytorch/blob/master/torch/lib/THNN/generic/ClassNLLCriterion.c#L5"}