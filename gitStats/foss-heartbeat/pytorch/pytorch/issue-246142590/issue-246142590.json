{"url": "https://api.github.com/repos/pytorch/pytorch/issues/2225", "repository_url": "https://api.github.com/repos/pytorch/pytorch", "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/2225/labels{/name}", "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/2225/comments", "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/2225/events", "html_url": "https://github.com/pytorch/pytorch/issues/2225", "id": 246142590, "node_id": "MDU6SXNzdWUyNDYxNDI1OTA=", "number": 2225, "title": "CUDA OOM for tiny Variable broadcast-add ", "user": {"login": "adamlerer", "id": 5702157, "node_id": "MDQ6VXNlcjU3MDIxNTc=", "avatar_url": "https://avatars2.githubusercontent.com/u/5702157?v=4", "gravatar_id": "", "url": "https://api.github.com/users/adamlerer", "html_url": "https://github.com/adamlerer", "followers_url": "https://api.github.com/users/adamlerer/followers", "following_url": "https://api.github.com/users/adamlerer/following{/other_user}", "gists_url": "https://api.github.com/users/adamlerer/gists{/gist_id}", "starred_url": "https://api.github.com/users/adamlerer/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/adamlerer/subscriptions", "organizations_url": "https://api.github.com/users/adamlerer/orgs", "repos_url": "https://api.github.com/users/adamlerer/repos", "events_url": "https://api.github.com/users/adamlerer/events{/privacy}", "received_events_url": "https://api.github.com/users/adamlerer/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-07-27T19:20:36Z", "updated_at": "2017-07-27T19:31:01Z", "closed_at": "2017-07-27T19:30:45Z", "author_association": "CONTRIBUTOR", "body_html": "<p>Reproduced this on two new versions of pytorch, but it doesn't happen in &gt;1month old version. So probably some regression caused by broadcasting code.</p>\n<pre><code>import torch\nimport torch.nn as nn\nfrom torch.autograd import Variable\n\na = Variable(torch.cuda.FloatTensor(500000,1,1))\nb = Variable(torch.cuda.FloatTensor(500000,1))\na+b\n</code></pre>\n<p>leads to</p>\n<pre><code>THCudaCheck FAIL file=/home/gchanan/local/pytorch8d/torch/lib/THC/generic/THCStorage.cu line=66 error=2 : out of memory\nTraceback (most recent call last):\n  File \"script.py\", line 7, in &lt;module&gt;\n    a+b\n  File \"/data/users/gchanan/pytorch8d/torch/autograd/variable.py\", line 790, in __add__\n    return self.add(other)\n  File \"/data/users/gchanan/pytorch8d/torch/autograd/variable.py\", line 296, in add\n    return self._add(other, False)\n  File \"/data/users/gchanan/pytorch8d/torch/autograd/variable.py\", line 290, in _add\n    return Add.apply(self, other, inplace)\n  File \"/data/users/gchanan/pytorch8d/torch/autograd/_functions/basic_ops.py\", line 17, in forward\n    return a.add(b)\nRuntimeError: cuda runtime error (2) : out of memory at /home/gchanan/local/pytorch8d/torch/lib/THC/generic/THCStorage.cu:66\n</code></pre>", "body_text": "Reproduced this on two new versions of pytorch, but it doesn't happen in >1month old version. So probably some regression caused by broadcasting code.\nimport torch\nimport torch.nn as nn\nfrom torch.autograd import Variable\n\na = Variable(torch.cuda.FloatTensor(500000,1,1))\nb = Variable(torch.cuda.FloatTensor(500000,1))\na+b\n\nleads to\nTHCudaCheck FAIL file=/home/gchanan/local/pytorch8d/torch/lib/THC/generic/THCStorage.cu line=66 error=2 : out of memory\nTraceback (most recent call last):\n  File \"script.py\", line 7, in <module>\n    a+b\n  File \"/data/users/gchanan/pytorch8d/torch/autograd/variable.py\", line 790, in __add__\n    return self.add(other)\n  File \"/data/users/gchanan/pytorch8d/torch/autograd/variable.py\", line 296, in add\n    return self._add(other, False)\n  File \"/data/users/gchanan/pytorch8d/torch/autograd/variable.py\", line 290, in _add\n    return Add.apply(self, other, inplace)\n  File \"/data/users/gchanan/pytorch8d/torch/autograd/_functions/basic_ops.py\", line 17, in forward\n    return a.add(b)\nRuntimeError: cuda runtime error (2) : out of memory at /home/gchanan/local/pytorch8d/torch/lib/THC/generic/THCStorage.cu:66", "body": "Reproduced this on two new versions of pytorch, but it doesn't happen in >1month old version. So probably some regression caused by broadcasting code.\r\n\r\n```\r\nimport torch\r\nimport torch.nn as nn\r\nfrom torch.autograd import Variable\r\n\r\na = Variable(torch.cuda.FloatTensor(500000,1,1))\r\nb = Variable(torch.cuda.FloatTensor(500000,1))\r\na+b\r\n```\r\nleads to \r\n\r\n```\r\nTHCudaCheck FAIL file=/home/gchanan/local/pytorch8d/torch/lib/THC/generic/THCStorage.cu line=66 error=2 : out of memory\r\nTraceback (most recent call last):\r\n  File \"script.py\", line 7, in <module>\r\n    a+b\r\n  File \"/data/users/gchanan/pytorch8d/torch/autograd/variable.py\", line 790, in __add__\r\n    return self.add(other)\r\n  File \"/data/users/gchanan/pytorch8d/torch/autograd/variable.py\", line 296, in add\r\n    return self._add(other, False)\r\n  File \"/data/users/gchanan/pytorch8d/torch/autograd/variable.py\", line 290, in _add\r\n    return Add.apply(self, other, inplace)\r\n  File \"/data/users/gchanan/pytorch8d/torch/autograd/_functions/basic_ops.py\", line 17, in forward\r\n    return a.add(b)\r\nRuntimeError: cuda runtime error (2) : out of memory at /home/gchanan/local/pytorch8d/torch/lib/THC/generic/THCStorage.cu:66\r\n```"}