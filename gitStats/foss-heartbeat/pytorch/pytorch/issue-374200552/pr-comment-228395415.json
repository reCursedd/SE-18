{"url": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/228395415", "pull_request_review_id": 168655368, "id": 228395415, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIyODM5NTQxNQ==", "diff_hunk": "@@ -578,8 +578,9 @@ c10::optional<MatchedSchema> tryMatchSchema(\n \n   // if we finish the loop will we have consumed all arguments?\n   size_t used_args = 0;\n-  for (size_t schema_i = 0; schema_i < schema.arguments().size(); ++schema_i) {\n-    const auto& arg = schema.arguments()[schema_i];\n+\n+  auto processArgument = [&](const Argument& arg, size_t schema_i) -> Value* {", "path": "torch/csrc/jit/script/compiler.cpp", "position": null, "original_position": 7, "commit_id": "8251929ff925a38d61e3934a9bec51bf228d2dfb", "original_commit_id": "20f7574f39dd4691633e6af0e898769af0d970a6", "user": {"login": "suo", "id": 1617424, "node_id": "MDQ6VXNlcjE2MTc0MjQ=", "avatar_url": "https://avatars2.githubusercontent.com/u/1617424?v=4", "gravatar_id": "", "url": "https://api.github.com/users/suo", "html_url": "https://github.com/suo", "followers_url": "https://api.github.com/users/suo/followers", "following_url": "https://api.github.com/users/suo/following{/other_user}", "gists_url": "https://api.github.com/users/suo/gists{/gist_id}", "starred_url": "https://api.github.com/users/suo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/suo/subscriptions", "organizations_url": "https://api.github.com/users/suo/orgs", "repos_url": "https://api.github.com/users/suo/repos", "events_url": "https://api.github.com/users/suo/events{/privacy}", "received_events_url": "https://api.github.com/users/suo/received_events", "type": "User", "site_admin": false}, "body": "I don't think wrapping this logic in a lambda is an improvement. It makes the control flow wonky, mutably captures some references, and \"processArgument\" isn't a descriptive name. This (plus the long list of params to this function) seems like a sign that we should restructure schema matching.", "created_at": "2018-10-26T03:17:25Z", "updated_at": "2018-11-23T15:53:40Z", "html_url": "https://github.com/pytorch/pytorch/pull/13157#discussion_r228395415", "pull_request_url": "https://api.github.com/repos/pytorch/pytorch/pulls/13157", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/228395415"}, "html": {"href": "https://github.com/pytorch/pytorch/pull/13157#discussion_r228395415"}, "pull_request": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/13157"}}, "body_html": "<p>I don't think wrapping this logic in a lambda is an improvement. It makes the control flow wonky, mutably captures some references, and \"processArgument\" isn't a descriptive name. This (plus the long list of params to this function) seems like a sign that we should restructure schema matching.</p>", "body_text": "I don't think wrapping this logic in a lambda is an improvement. It makes the control flow wonky, mutably captures some references, and \"processArgument\" isn't a descriptive name. This (plus the long list of params to this function) seems like a sign that we should restructure schema matching."}