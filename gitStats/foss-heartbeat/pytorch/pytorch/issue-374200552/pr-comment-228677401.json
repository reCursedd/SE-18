{"url": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/228677401", "pull_request_review_id": 169014581, "id": 228677401, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIyODY3NzQwMQ==", "diff_hunk": "@@ -22,11 +22,22 @@ struct SchemaParser {\n     std::vector<Argument> returns;\n     std::vector<Symbol> writes;\n     bool kwarg_only = false;\n+    bool is_vararg = false;\n     size_t idx = 0;\n     parseList('(', ',', ')', [&] {\n-      if(L.nextIf('*')) {\n-        kwarg_only = true;\n+      if (L.nextIf('*')) {\n+        auto tok = L.cur();\n+        if (tok.kind == TK_IDENT) {\n+          is_vararg = true;\n+          arguments.push_back(parseArgument(\n+              idx++, /*is_return=*/false, /*kwarg_only=*/kwarg_only, writes));\n+        } else {\n+          kwarg_only = true;\n+        }\n       } else {\n+        if (is_vararg) {", "path": "torch/csrc/jit/operator.cpp", "position": 19, "original_position": 19, "commit_id": "8251929ff925a38d61e3934a9bec51bf228d2dfb", "original_commit_id": "ecdb4645df461b17eb1a99a03eea3cf2fabf782d", "user": {"login": "suo", "id": 1617424, "node_id": "MDQ6VXNlcjE2MTc0MjQ=", "avatar_url": "https://avatars2.githubusercontent.com/u/1617424?v=4", "gravatar_id": "", "url": "https://api.github.com/users/suo", "html_url": "https://github.com/suo", "followers_url": "https://api.github.com/users/suo/followers", "following_url": "https://api.github.com/users/suo/following{/other_user}", "gists_url": "https://api.github.com/users/suo/gists{/gist_id}", "starred_url": "https://api.github.com/users/suo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/suo/subscriptions", "organizations_url": "https://api.github.com/users/suo/orgs", "repos_url": "https://api.github.com/users/suo/repos", "events_url": "https://api.github.com/users/suo/events{/privacy}", "received_events_url": "https://api.github.com/users/suo/received_events", "type": "User", "site_admin": false}, "body": "if you do the above thing, this check would be handled by the `FunctionSchema` invariant.", "created_at": "2018-10-26T22:04:38Z", "updated_at": "2018-11-23T15:53:42Z", "html_url": "https://github.com/pytorch/pytorch/pull/13157#discussion_r228677401", "pull_request_url": "https://api.github.com/repos/pytorch/pytorch/pulls/13157", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/228677401"}, "html": {"href": "https://github.com/pytorch/pytorch/pull/13157#discussion_r228677401"}, "pull_request": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/13157"}}, "body_html": "<p>if you do the above thing, this check would be handled by the <code>FunctionSchema</code> invariant.</p>", "body_text": "if you do the above thing, this check would be handled by the FunctionSchema invariant."}