{"url": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/228677158", "pull_request_review_id": 169014581, "id": 228677158, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIyODY3NzE1OA==", "diff_hunk": "@@ -169,6 +169,9 @@ inline std::ostream& operator<<(std::ostream& out, const FunctionSchema& schema)\n       out << \"*, \";\n       seen_kwarg_only = true;\n     }\n+    if (schema.is_vararg() && i == schema.arguments().size() - 1) {", "path": "torch/csrc/jit/function_schema.h", "position": 4, "original_position": 4, "commit_id": "8251929ff925a38d61e3934a9bec51bf228d2dfb", "original_commit_id": "ecdb4645df461b17eb1a99a03eea3cf2fabf782d", "user": {"login": "suo", "id": 1617424, "node_id": "MDQ6VXNlcjE2MTc0MjQ=", "avatar_url": "https://avatars2.githubusercontent.com/u/1617424?v=4", "gravatar_id": "", "url": "https://api.github.com/users/suo", "html_url": "https://github.com/suo", "followers_url": "https://api.github.com/users/suo/followers", "following_url": "https://api.github.com/users/suo/following{/other_user}", "gists_url": "https://api.github.com/users/suo/gists{/gist_id}", "starred_url": "https://api.github.com/users/suo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/suo/subscriptions", "organizations_url": "https://api.github.com/users/suo/orgs", "repos_url": "https://api.github.com/users/suo/repos", "events_url": "https://api.github.com/users/suo/events{/privacy}", "received_events_url": "https://api.github.com/users/suo/received_events", "type": "User", "site_admin": false}, "body": "Hm. I think it would be cleaner overall if we gave `Argument` the information that it is vararg. That way we can just stream the argument and the right thing will happen, similar to how it works for default args. \r\n\r\nThen `validate()` can set up the invariant that if there's a vararg it's last in the schema, `schema.is_vararg` can just check whether the last argument is vararg.", "created_at": "2018-10-26T22:03:21Z", "updated_at": "2018-11-23T15:53:42Z", "html_url": "https://github.com/pytorch/pytorch/pull/13157#discussion_r228677158", "pull_request_url": "https://api.github.com/repos/pytorch/pytorch/pulls/13157", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/228677158"}, "html": {"href": "https://github.com/pytorch/pytorch/pull/13157#discussion_r228677158"}, "pull_request": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/13157"}}, "body_html": "<p>Hm. I think it would be cleaner overall if we gave <code>Argument</code> the information that it is vararg. That way we can just stream the argument and the right thing will happen, similar to how it works for default args.</p>\n<p>Then <code>validate()</code> can set up the invariant that if there's a vararg it's last in the schema, <code>schema.is_vararg</code> can just check whether the last argument is vararg.</p>", "body_text": "Hm. I think it would be cleaner overall if we gave Argument the information that it is vararg. That way we can just stream the argument and the right thing will happen, similar to how it works for default args.\nThen validate() can set up the invariant that if there's a vararg it's last in the schema, schema.is_vararg can just check whether the last argument is vararg."}