{"url": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/157591111", "pull_request_review_id": 84258369, "id": 157591111, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE1NzU5MTExMQ==", "diff_hunk": "@@ -595,5 +597,75 @@ Tensor RoiPooling2d_backward_cpu(\n   throw std::runtime_error(\"not implemented\");\n }\n \n+\n+\n+// TODO Replace this with more accurate digamma().\n+template <typename CScalar>\n+static inline CScalar digamma_one(CScalar x) {\n+  const CScalar eps = x * 1e-2;\n+  return (std::lgamma(x + eps) - std::lgamma(x - eps)) / (eps + eps);\n+}\n+\n+/** Computes the reparameterized gradient -(d/dalpha cdf(x;alpha)) / pdf(x;alpha)\n+    for random number x drawn from a standard Gamma distribution Gamma(alpha).\n+*/\n+template <typename CScalar>", "path": "aten/src/ATen/native/NativeFunctions.cpp", "position": 27, "original_position": 27, "commit_id": "196bdb8fd5e5819c66bbef8a9e5a57aedf5a7ec1", "original_commit_id": "196bdb8fd5e5819c66bbef8a9e5a57aedf5a7ec1", "user": {"login": "colesbury", "id": 655866, "node_id": "MDQ6VXNlcjY1NTg2Ng==", "avatar_url": "https://avatars1.githubusercontent.com/u/655866?v=4", "gravatar_id": "", "url": "https://api.github.com/users/colesbury", "html_url": "https://github.com/colesbury", "followers_url": "https://api.github.com/users/colesbury/followers", "following_url": "https://api.github.com/users/colesbury/following{/other_user}", "gists_url": "https://api.github.com/users/colesbury/gists{/gist_id}", "starred_url": "https://api.github.com/users/colesbury/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/colesbury/subscriptions", "organizations_url": "https://api.github.com/users/colesbury/orgs", "repos_url": "https://api.github.com/users/colesbury/repos", "events_url": "https://api.github.com/users/colesbury/events{/privacy}", "received_events_url": "https://api.github.com/users/colesbury/received_events", "type": "User", "site_admin": false}, "body": "I know this is bikeshedding, but the `CScalar` name makes me cringe. Even `scalar` or `number` or `real` would make me happier. (Lower-case makes me think it corresponds to a built-in type and not an aggregate/struct type)", "created_at": "2017-12-18T20:22:25Z", "updated_at": "2018-11-23T15:37:30Z", "html_url": "https://github.com/pytorch/pytorch/pull/4161#discussion_r157591111", "pull_request_url": "https://api.github.com/repos/pytorch/pytorch/pulls/4161", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/157591111"}, "html": {"href": "https://github.com/pytorch/pytorch/pull/4161#discussion_r157591111"}, "pull_request": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/4161"}}, "body_html": "<p>I know this is bikeshedding, but the <code>CScalar</code> name makes me cringe. Even <code>scalar</code> or <code>number</code> or <code>real</code> would make me happier. (Lower-case makes me think it corresponds to a built-in type and not an aggregate/struct type)</p>", "body_text": "I know this is bikeshedding, but the CScalar name makes me cringe. Even scalar or number or real would make me happier. (Lower-case makes me think it corresponds to a built-in type and not an aggregate/struct type)"}