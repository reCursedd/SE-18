{"url": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/156984942", "pull_request_review_id": 83552599, "id": 156984942, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE1Njk4NDk0Mg==", "diff_hunk": "@@ -3865,6 +3865,26 @@\n       kwarg_only: True\n     - THTensor* self\n ]]\n+[[\n+  name: _standard_gamma\n+  types:\n+    - floating_point\n+  backends:\n+    - CPU\n+  return: argument 0\n+  variants:\n+    - method\n+    - function\n+  options:\n+    - cname: standard_gamma\n+      arguments:\n+        - arg: THTensor* output\n+          output: True\n+        - arg: THGenerator* generator\n+          default: THPGenerator_TH_CData(THPDefaultGenerator)", "path": "aten/src/ATen/Declarations.cwrap", "position": 20, "original_position": 20, "commit_id": "196bdb8fd5e5819c66bbef8a9e5a57aedf5a7ec1", "original_commit_id": "2e51f1586f5ffe25b73cf5c52cd7104516341305", "user": {"login": "gchanan", "id": 3768583, "node_id": "MDQ6VXNlcjM3Njg1ODM=", "avatar_url": "https://avatars2.githubusercontent.com/u/3768583?v=4", "gravatar_id": "", "url": "https://api.github.com/users/gchanan", "html_url": "https://github.com/gchanan", "followers_url": "https://api.github.com/users/gchanan/followers", "following_url": "https://api.github.com/users/gchanan/following{/other_user}", "gists_url": "https://api.github.com/users/gchanan/gists{/gist_id}", "starred_url": "https://api.github.com/users/gchanan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/gchanan/subscriptions", "organizations_url": "https://api.github.com/users/gchanan/orgs", "repos_url": "https://api.github.com/users/gchanan/repos", "events_url": "https://api.github.com/users/gchanan/events{/privacy}", "received_events_url": "https://api.github.com/users/gchanan/received_events", "type": "User", "site_admin": false}, "body": "Yes, the other random functions that use a generator do this (and have for a long time).  We avoid an actual cyclic dependency because ATen just searches and replaces this string with its way of getting the default generator (at::globalContext()::defaultGenerator() or whatever it's called).  Once we no longer need these declarations for THP we should change this to be ATen based.", "created_at": "2017-12-14T16:02:03Z", "updated_at": "2018-11-23T15:37:23Z", "html_url": "https://github.com/pytorch/pytorch/pull/4161#discussion_r156984942", "pull_request_url": "https://api.github.com/repos/pytorch/pytorch/pulls/4161", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/156984942"}, "html": {"href": "https://github.com/pytorch/pytorch/pull/4161#discussion_r156984942"}, "pull_request": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/4161"}}, "body_html": "<p>Yes, the other random functions that use a generator do this (and have for a long time).  We avoid an actual cyclic dependency because ATen just searches and replaces this string with its way of getting the default generator (at::globalContext()::defaultGenerator() or whatever it's called).  Once we no longer need these declarations for THP we should change this to be ATen based.</p>", "body_text": "Yes, the other random functions that use a generator do this (and have for a long time).  We avoid an actual cyclic dependency because ATen just searches and replaces this string with its way of getting the default generator (at::globalContext()::defaultGenerator() or whatever it's called).  Once we no longer need these declarations for THP we should change this to be ATen based.", "in_reply_to_id": 156879198}