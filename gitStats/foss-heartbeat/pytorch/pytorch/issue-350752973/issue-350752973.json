{"url": "https://api.github.com/repos/pytorch/pytorch/issues/10536", "repository_url": "https://api.github.com/repos/pytorch/pytorch", "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/10536/labels{/name}", "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/10536/comments", "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/10536/events", "html_url": "https://github.com/pytorch/pytorch/issues/10536", "id": 350752973, "node_id": "MDU6SXNzdWUzNTA3NTI5NzM=", "number": 10536, "title": "[feature request] Adding Pre and Post padding functionalities to pad_sequence function", "user": {"login": "srirambandi", "id": 17962708, "node_id": "MDQ6VXNlcjE3OTYyNzA4", "avatar_url": "https://avatars2.githubusercontent.com/u/17962708?v=4", "gravatar_id": "", "url": "https://api.github.com/users/srirambandi", "html_url": "https://github.com/srirambandi", "followers_url": "https://api.github.com/users/srirambandi/followers", "following_url": "https://api.github.com/users/srirambandi/following{/other_user}", "gists_url": "https://api.github.com/users/srirambandi/gists{/gist_id}", "starred_url": "https://api.github.com/users/srirambandi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/srirambandi/subscriptions", "organizations_url": "https://api.github.com/users/srirambandi/orgs", "repos_url": "https://api.github.com/users/srirambandi/repos", "events_url": "https://api.github.com/users/srirambandi/events{/privacy}", "received_events_url": "https://api.github.com/users/srirambandi/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 443483881, "node_id": "MDU6TGFiZWw0NDM0ODM4ODE=", "url": "https://api.github.com/repos/pytorch/pytorch/labels/todo", "name": "todo", "color": "c2e0c6", "default": false}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2018-08-15T10:00:24Z", "updated_at": "2018-09-11T00:22:09Z", "closed_at": null, "author_association": "NONE", "body_html": "<p>I would like to add <strong>pre</strong> and <strong>post</strong> padding functionalities to <code>torch.nn.utils.rnn.pad_sequence</code> .<br>\nThese functionalities haven't been included in the <a href=\"https://pytorch.org/docs/stable/_modules/torch/nn/utils/rnn.html#pad_sequence\" rel=\"nofollow\">function</a></p>\n<p>It would be greatly beneficial for people using seq models like LSTM to have sequences created with both <strong>pre</strong> and <strong>post</strong> padding the sequences passed into the args. Other libraries like keras offer these functionalities in their APIs like: <code>data = pad_sequences(data, maxlen=50, dtype='float32', padding='pre')</code></p>\n<p>Besides this, we can add another functionality to allow an argument(with optional value) to know the length of the sequences to be padded to. This is currently done with length of <code>sequence[0]</code>(sequences passed in decreasing order of length).</p>\n<p>Thanks!</p>", "body_text": "I would like to add pre and post padding functionalities to torch.nn.utils.rnn.pad_sequence .\nThese functionalities haven't been included in the function\nIt would be greatly beneficial for people using seq models like LSTM to have sequences created with both pre and post padding the sequences passed into the args. Other libraries like keras offer these functionalities in their APIs like: data = pad_sequences(data, maxlen=50, dtype='float32', padding='pre')\nBesides this, we can add another functionality to allow an argument(with optional value) to know the length of the sequences to be padded to. This is currently done with length of sequence[0](sequences passed in decreasing order of length).\nThanks!", "body": "I would like to add **pre** and **post** padding functionalities to ````torch.nn.utils.rnn.pad_sequence```` .\r\nThese functionalities haven't been included in the [function](https://pytorch.org/docs/stable/_modules/torch/nn/utils/rnn.html#pad_sequence)\r\n\r\nIt would be greatly beneficial for people using seq models like LSTM to have sequences created with both **pre** and **post** padding the sequences passed into the args. Other libraries like keras offer these functionalities in their APIs like: ````data = pad_sequences(data, maxlen=50, dtype='float32', padding='pre')````\r\n\r\nBesides this, we can add another functionality to allow an argument(with optional value) to know the length of the sequences to be padded to. This is currently done with length of ````sequence[0]````(sequences passed in decreasing order of length).\r\n\r\nThanks!"}