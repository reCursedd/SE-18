{"url": "https://api.github.com/repos/pytorch/pytorch/issues/comments/395799259", "html_url": "https://github.com/pytorch/pytorch/issues/8267#issuecomment-395799259", "issue_url": "https://api.github.com/repos/pytorch/pytorch/issues/8267", "id": 395799259, "node_id": "MDEyOklzc3VlQ29tbWVudDM5NTc5OTI1OQ==", "user": {"login": "goldsborough", "id": 6429851, "node_id": "MDQ6VXNlcjY0Mjk4NTE=", "avatar_url": "https://avatars3.githubusercontent.com/u/6429851?v=4", "gravatar_id": "", "url": "https://api.github.com/users/goldsborough", "html_url": "https://github.com/goldsborough", "followers_url": "https://api.github.com/users/goldsborough/followers", "following_url": "https://api.github.com/users/goldsborough/following{/other_user}", "gists_url": "https://api.github.com/users/goldsborough/gists{/gist_id}", "starred_url": "https://api.github.com/users/goldsborough/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/goldsborough/subscriptions", "organizations_url": "https://api.github.com/users/goldsborough/orgs", "repos_url": "https://api.github.com/users/goldsborough/repos", "events_url": "https://api.github.com/users/goldsborough/events{/privacy}", "received_events_url": "https://api.github.com/users/goldsborough/received_events", "type": "User", "site_admin": false}, "created_at": "2018-06-08T15:35:00Z", "updated_at": "2018-06-08T15:39:02Z", "author_association": "CONTRIBUTOR", "body_html": "<p>FWIW <a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=9110200\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/fmassa\">@fmassa</a> has been using TH things in his C++ extensions, which we agreed upon since he is a longstanding TH expert and very comfortable with TH, under the condition that this is at his own risk given our ongoing revamp of our internals. I've been updated that <a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=7799218\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/mcarilli\">@mcarilli</a> and company are similarly TH veterans, so I would be fine im opening an unofficial niche for you to access TH in extensions.</p>\n<p>To clarify: Officially, the public extension API is exclusively what is included in torch/torch.h, which is primarily ATen, pybind11 and some autograd specific headers (such as pybind bindings for Variables). No other headers are documented as being part of the API and their existence in the installed package doesn't influence this. I think we copied them into the package at the time so that <a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=9110200\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/fmassa\">@fmassa</a> could use them unofficially. If there is a header missing we can install it for you, but again this would be an unofficial agreement between us. If we advertised TH as part of the extension API, folks like <a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=3768583\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/gchanan\">@gchanan</a> would lose their freedom to improve ATen, especially given our ongoing caffe2/c10 consolidation efforts.</p>\n<p>I think the best line of action is:</p>\n<ol>\n<li>Can you easily implement what you want only using ATen?</li>\n<li>If not, can we easily extend ATen for you to maybe add a particular function you need?</li>\n<li>If not, we can add missing TH headers and you are free to use TH in extensions since you are special contributors, but unofficially and at the risk that we will be forced to remove certain headers in the future.</li>\n</ol>\n<p>I'm fine with any of the above and I'll be happy to help with whatever unblocks you soonest.</p>\n<p>Does this sound reasonable? Cc <a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=1310570\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/soumith\">@soumith</a></p>", "body_text": "FWIW @fmassa has been using TH things in his C++ extensions, which we agreed upon since he is a longstanding TH expert and very comfortable with TH, under the condition that this is at his own risk given our ongoing revamp of our internals. I've been updated that @mcarilli and company are similarly TH veterans, so I would be fine im opening an unofficial niche for you to access TH in extensions.\nTo clarify: Officially, the public extension API is exclusively what is included in torch/torch.h, which is primarily ATen, pybind11 and some autograd specific headers (such as pybind bindings for Variables). No other headers are documented as being part of the API and their existence in the installed package doesn't influence this. I think we copied them into the package at the time so that @fmassa could use them unofficially. If there is a header missing we can install it for you, but again this would be an unofficial agreement between us. If we advertised TH as part of the extension API, folks like @gchanan would lose their freedom to improve ATen, especially given our ongoing caffe2/c10 consolidation efforts.\nI think the best line of action is:\n\nCan you easily implement what you want only using ATen?\nIf not, can we easily extend ATen for you to maybe add a particular function you need?\nIf not, we can add missing TH headers and you are free to use TH in extensions since you are special contributors, but unofficially and at the risk that we will be forced to remove certain headers in the future.\n\nI'm fine with any of the above and I'll be happy to help with whatever unblocks you soonest.\nDoes this sound reasonable? Cc @soumith", "body": "FWIW @fmassa has been using TH things in his C++ extensions, which we agreed upon since he is a longstanding TH expert and very comfortable with TH, under the condition that this is at his own risk given our ongoing revamp of our internals. I've been updated that @mcarilli and company are similarly TH veterans, so I would be fine im opening an unofficial niche for you to access TH in extensions. \r\n\r\nTo clarify: Officially, the public extension API is exclusively what is included in torch/torch.h, which is primarily ATen, pybind11 and some autograd specific headers (such as pybind bindings for Variables). No other headers are documented as being part of the API and their existence in the installed package doesn't influence this. I think we copied them into the package at the time so that @fmassa could use them unofficially. If there is a header missing we can install it for you, but again this would be an unofficial agreement between us. If we advertised TH as part of the extension API, folks like @gchanan would lose their freedom to improve ATen, especially given our ongoing caffe2/c10 consolidation efforts.\r\n\r\nI think the best line of action is:\r\n1. Can you easily implement what you want only using ATen?\r\n2. If not, can we easily extend ATen for you to maybe add a particular function you need?\r\n3. If not, we can add missing TH headers and you are free to use TH in extensions since you are special contributors, but unofficially and at the risk that we will be forced to remove certain headers in the future.\r\n\r\nI'm fine with any of the above and I'll be happy to help with whatever unblocks you soonest.\r\n\r\nDoes this sound reasonable? Cc @soumith"}