{"url": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/181960442", "pull_request_review_id": 112675640, "id": 181960442, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MTk2MDQ0Mg==", "diff_hunk": "@@ -32,8 +33,37 @@ class BatchPermutationOp final : public Operator<Context> {\n   USE_OPERATOR_CONTEXT_FUNCTIONS;\n \n   bool RunOnDevice() override {\n-    // No CPU implementation for now\n-    CAFFE_NOT_IMPLEMENTED;\n+    const auto& X = Input(0);\n+    auto& indices = Input(1);\n+    auto* Y = Output(0);\n+\n+    CAFFE_ENFORCE(indices.ndim() == 1, \"indices must be 1-d\");\n+    CAFFE_ENFORCE(\n+      X.dim32(0) == indices.dim32(0),\n+      \"X.dim32(0) must be equal to indices.dim32(0)\",\n+      \"(\",\n+      X.dim32(0),\n+      \" vs. \",\n+      indices.dim32(0),\n+      \")\");\n+\n+    Y->ResizeLike(X);\n+\n+    const int N = X.dim32(0);\n+    const int C = X.dim32(1);\n+    const int H = X.dim32(2);\n+    const int W = X.dim32(3);\n+\n+    const float *src = X.template data<float>();\n+    float *dst = Y->template mutable_data<float>();\n+\n+    for (int i = 0; i < N; i++) {\n+      int idx = indices.template data<int>()[i];\n+\n+      memcpy(dst + i * C * H * W, src + idx * C * H * W, sizeof(float) * C * H * W);", "path": "modules/detectron/batch_permutation_op.h", "position": null, "original_position": 41, "commit_id": "3b02ec37cc18972a7c6598c71a767ab414dde708", "original_commit_id": "3cc3bebaa51d946220d87757537165014df9a8d3", "user": {"login": "BIT-silence", "id": 3357667, "node_id": "MDQ6VXNlcjMzNTc2Njc=", "avatar_url": "https://avatars0.githubusercontent.com/u/3357667?v=4", "gravatar_id": "", "url": "https://api.github.com/users/BIT-silence", "html_url": "https://github.com/BIT-silence", "followers_url": "https://api.github.com/users/BIT-silence/followers", "following_url": "https://api.github.com/users/BIT-silence/following{/other_user}", "gists_url": "https://api.github.com/users/BIT-silence/gists{/gist_id}", "starred_url": "https://api.github.com/users/BIT-silence/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/BIT-silence/subscriptions", "organizations_url": "https://api.github.com/users/BIT-silence/orgs", "repos_url": "https://api.github.com/users/BIT-silence/repos", "events_url": "https://api.github.com/users/BIT-silence/events{/privacy}", "received_events_url": "https://api.github.com/users/BIT-silence/received_events", "type": "User", "site_admin": false}, "body": "Here maybe we can consider to make it in-place.", "created_at": "2018-04-17T06:07:53Z", "updated_at": "2018-11-23T15:42:34Z", "html_url": "https://github.com/pytorch/pytorch/pull/6645#discussion_r181960442", "pull_request_url": "https://api.github.com/repos/pytorch/pytorch/pulls/6645", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/181960442"}, "html": {"href": "https://github.com/pytorch/pytorch/pull/6645#discussion_r181960442"}, "pull_request": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/6645"}}, "body_html": "<p>Here maybe we can consider to make it in-place.</p>", "body_text": "Here maybe we can consider to make it in-place.", "in_reply_to_id": 181959327}