{"url": "https://api.github.com/repos/pytorch/pytorch/issues/comments/384082225", "html_url": "https://github.com/pytorch/pytorch/issues/6705#issuecomment-384082225", "issue_url": "https://api.github.com/repos/pytorch/pytorch/issues/6705", "id": 384082225, "node_id": "MDEyOklzc3VlQ29tbWVudDM4NDA4MjIyNQ==", "user": {"login": "colesbury", "id": 655866, "node_id": "MDQ6VXNlcjY1NTg2Ng==", "avatar_url": "https://avatars1.githubusercontent.com/u/655866?v=4", "gravatar_id": "", "url": "https://api.github.com/users/colesbury", "html_url": "https://github.com/colesbury", "followers_url": "https://api.github.com/users/colesbury/followers", "following_url": "https://api.github.com/users/colesbury/following{/other_user}", "gists_url": "https://api.github.com/users/colesbury/gists{/gist_id}", "starred_url": "https://api.github.com/users/colesbury/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/colesbury/subscriptions", "organizations_url": "https://api.github.com/users/colesbury/orgs", "repos_url": "https://api.github.com/users/colesbury/repos", "events_url": "https://api.github.com/users/colesbury/events{/privacy}", "received_events_url": "https://api.github.com/users/colesbury/received_events", "type": "User", "site_admin": false}, "created_at": "2018-04-24T21:14:24Z", "updated_at": "2018-04-24T21:14:24Z", "author_association": "MEMBER", "body_html": "<p>You can disable the AVX and AVX2 kernels by setting both environment variables <code>ATEN_DISABLE_AVX2=1</code> <code>ATEN_DISABLE_AVX=1</code>.</p>\n<p>But that's <strong>NOT</strong> the issue you're seeing. The issue is that GCC's libstdc++ uses RDRAND for <code>std::random_device</code> on Linux. I suspect that's in the library and doesn't depend on any compiler flag we provide. (We're not compiling the relevant code with <code>-march=...</code>)</p>\n<p><a href=\"http://www.pcg-random.org/posts/cpps-random_device.html\" rel=\"nofollow\">http://www.pcg-random.org/posts/cpps-random_device.html</a></p>\n<p>On Linux, we could switch to reading from <code>/dev/urandom</code> instead of <code>std::random_device</code>.</p>", "body_text": "You can disable the AVX and AVX2 kernels by setting both environment variables ATEN_DISABLE_AVX2=1 ATEN_DISABLE_AVX=1.\nBut that's NOT the issue you're seeing. The issue is that GCC's libstdc++ uses RDRAND for std::random_device on Linux. I suspect that's in the library and doesn't depend on any compiler flag we provide. (We're not compiling the relevant code with -march=...)\nhttp://www.pcg-random.org/posts/cpps-random_device.html\nOn Linux, we could switch to reading from /dev/urandom instead of std::random_device.", "body": "You can disable the AVX and AVX2 kernels by setting both environment variables `ATEN_DISABLE_AVX2=1` `ATEN_DISABLE_AVX=1`.\r\n\r\nBut that's **NOT** the issue you're seeing. The issue is that GCC's libstdc++ uses RDRAND for `std::random_device` on Linux. I suspect that's in the library and doesn't depend on any compiler flag we provide. (We're not compiling the relevant code with `-march=...`)\r\n\r\nhttp://www.pcg-random.org/posts/cpps-random_device.html\r\n\r\nOn Linux, we could switch to reading from `/dev/urandom` instead of `std::random_device`. "}