{"url": "https://api.github.com/repos/pytorch/pytorch/issues/comments/413429297", "html_url": "https://github.com/pytorch/pytorch/pull/10535#issuecomment-413429297", "issue_url": "https://api.github.com/repos/pytorch/pytorch/issues/10535", "id": 413429297, "node_id": "MDEyOklzc3VlQ29tbWVudDQxMzQyOTI5Nw==", "user": {"login": "xhzhao", "id": 17486215, "node_id": "MDQ6VXNlcjE3NDg2MjE1", "avatar_url": "https://avatars1.githubusercontent.com/u/17486215?v=4", "gravatar_id": "", "url": "https://api.github.com/users/xhzhao", "html_url": "https://github.com/xhzhao", "followers_url": "https://api.github.com/users/xhzhao/followers", "following_url": "https://api.github.com/users/xhzhao/following{/other_user}", "gists_url": "https://api.github.com/users/xhzhao/gists{/gist_id}", "starred_url": "https://api.github.com/users/xhzhao/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/xhzhao/subscriptions", "organizations_url": "https://api.github.com/users/xhzhao/orgs", "repos_url": "https://api.github.com/users/xhzhao/repos", "events_url": "https://api.github.com/users/xhzhao/events{/privacy}", "received_events_url": "https://api.github.com/users/xhzhao/received_events", "type": "User", "site_admin": false}, "created_at": "2018-08-16T05:22:54Z", "updated_at": "2018-08-16T05:22:54Z", "author_association": "CONTRIBUTOR", "body_html": "<p><a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=9110200\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/fmassa\">@fmassa</a> Thanks for your response. Basically, i follow the sum implementation <a href=\"https://github.com/pytorch/pytorch/blob/master/aten/src/ATen/native/cpu/ReduceOpsKernel.cpp#L174\">here</a>, and this method is very easy to implement. I also take a look at a <a href=\"https://github.com/pytorch/pytorch/blob/master/aten/src/ATen/native/cpu/BinaryOpsKernel.cpp#L16\">example </a>of the TensorIterator, but it seems that there are only 4 operations supported(add/sub/mul/div).</p>", "body_text": "@fmassa Thanks for your response. Basically, i follow the sum implementation here, and this method is very easy to implement. I also take a look at a example of the TensorIterator, but it seems that there are only 4 operations supported(add/sub/mul/div).", "body": "@fmassa Thanks for your response. Basically, i follow the sum implementation [here](https://github.com/pytorch/pytorch/blob/master/aten/src/ATen/native/cpu/ReduceOpsKernel.cpp#L174), and this method is very easy to implement. I also take a look at a [example ](https://github.com/pytorch/pytorch/blob/master/aten/src/ATen/native/cpu/BinaryOpsKernel.cpp#L16)of the TensorIterator, but it seems that there are only 4 operations supported(add/sub/mul/div)."}