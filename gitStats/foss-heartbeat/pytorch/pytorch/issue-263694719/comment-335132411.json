{"url": "https://api.github.com/repos/pytorch/pytorch/issues/comments/335132411", "html_url": "https://github.com/pytorch/pytorch/issues/3021#issuecomment-335132411", "issue_url": "https://api.github.com/repos/pytorch/pytorch/issues/3021", "id": 335132411, "node_id": "MDEyOklzc3VlQ29tbWVudDMzNTEzMjQxMQ==", "user": {"login": "loudinthecloud", "id": 3178431, "node_id": "MDQ6VXNlcjMxNzg0MzE=", "avatar_url": "https://avatars1.githubusercontent.com/u/3178431?v=4", "gravatar_id": "", "url": "https://api.github.com/users/loudinthecloud", "html_url": "https://github.com/loudinthecloud", "followers_url": "https://api.github.com/users/loudinthecloud/followers", "following_url": "https://api.github.com/users/loudinthecloud/following{/other_user}", "gists_url": "https://api.github.com/users/loudinthecloud/gists{/gist_id}", "starred_url": "https://api.github.com/users/loudinthecloud/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/loudinthecloud/subscriptions", "organizations_url": "https://api.github.com/users/loudinthecloud/orgs", "repos_url": "https://api.github.com/users/loudinthecloud/repos", "events_url": "https://api.github.com/users/loudinthecloud/events{/privacy}", "received_events_url": "https://api.github.com/users/loudinthecloud/received_events", "type": "User", "site_admin": false}, "created_at": "2017-10-09T11:36:21Z", "updated_at": "2017-10-09T11:36:39Z", "author_association": "NONE", "body_html": "<p>I executed 4 workloads on the first 4 cores and it worked fine (performance as in a single workload).</p>\n<pre><code>taskset -c 0-3 ./train.py --seed 5 --checkpoint-interval 0\ntaskset -c 0-3 ./train.py --seed 50 --checkpoint-interval 0\ntaskset -c 0-3 ./train.py --seed 500 --checkpoint-interval 0\ntaskset -c 0-3 ./train.py --seed 5000 --checkpoint-interval 0\n</code></pre>\n<p>The scaling issue happens when running the workloads on all 16 cores.<br>\nAttached are the histograms of \"perf top\" during both tests.</p>\n<p><a href=\"https://github.com/pytorch/pytorch/files/1368315/perf.hist.4cores.txt\">perf.hist.4cores.txt</a><br>\n<a href=\"https://github.com/pytorch/pytorch/files/1368317/perf.hist.16cores.txt\">perf.hist.16cores.txt</a></p>\n<p>That's the output for the 16 cores execution:</p>\n<pre><code>  18.56%  libgomp-ae56ecdc.so.1.0.0                   [.] 0x000000000000f062\n  18.04%  libgomp-ae56ecdc.so.1.0.0                   [.] 0x000000000000f05e\n  15.30%  libgomp-ae56ecdc.so.1.0.0                   [.] 0x000000000000f3a2\n  14.88%  libgomp-ae56ecdc.so.1.0.0                   [.] 0x000000000000f39e\n  12.09%  libgomp-ae56ecdc.so.1.0.0                   [.] 0x000000000000f05c\n  10.16%  libgomp-ae56ecdc.so.1.0.0                   [.] 0x000000000000f39c\n   3.64%  libgomp-ae56ecdc.so.1.0.0                   [.] 0x000000000000f058\n   2.94%  libgomp-ae56ecdc.so.1.0.0                   [.] 0x000000000000f398\n   0.23%  libpython3.6m.so.1.0                        [.] _PyEval_EvalFrameDefault\n   0.16%  libc-2.25.so                                [.] _int_malloc\n   0.13%  libc-2.25.so                                [.] _int_free\n   0.13%  [kernel]                                    [k] finish_task_switch\n   0.12%  libc-2.25.so                                [.] malloc\n   0.10%  libpython3.6m.so.1.0                        [.] _PyType_Lookup\n   0.10%  [kernel]                                    [k] _raw_spin_unlock_irqrestore\n   0.06%  libpython3.6m.so.1.0                        [.] _PyObject_GenericGetAttrWithDict\n   0.05%  libpython3.6m.so.1.0                        [.] PyObject_Malloc\n   0.05%  libc-2.25.so                                [.] malloc_consolidate.part.1\n   0.05%  libpython3.6m.so.1.0                        [.] PyTuple_New\n   0.05%  libpython3.6m.so.1.0                        [.] _init\n   0.04%  libc-2.25.so                                [.] free\n</code></pre>", "body_text": "I executed 4 workloads on the first 4 cores and it worked fine (performance as in a single workload).\ntaskset -c 0-3 ./train.py --seed 5 --checkpoint-interval 0\ntaskset -c 0-3 ./train.py --seed 50 --checkpoint-interval 0\ntaskset -c 0-3 ./train.py --seed 500 --checkpoint-interval 0\ntaskset -c 0-3 ./train.py --seed 5000 --checkpoint-interval 0\n\nThe scaling issue happens when running the workloads on all 16 cores.\nAttached are the histograms of \"perf top\" during both tests.\nperf.hist.4cores.txt\nperf.hist.16cores.txt\nThat's the output for the 16 cores execution:\n  18.56%  libgomp-ae56ecdc.so.1.0.0                   [.] 0x000000000000f062\n  18.04%  libgomp-ae56ecdc.so.1.0.0                   [.] 0x000000000000f05e\n  15.30%  libgomp-ae56ecdc.so.1.0.0                   [.] 0x000000000000f3a2\n  14.88%  libgomp-ae56ecdc.so.1.0.0                   [.] 0x000000000000f39e\n  12.09%  libgomp-ae56ecdc.so.1.0.0                   [.] 0x000000000000f05c\n  10.16%  libgomp-ae56ecdc.so.1.0.0                   [.] 0x000000000000f39c\n   3.64%  libgomp-ae56ecdc.so.1.0.0                   [.] 0x000000000000f058\n   2.94%  libgomp-ae56ecdc.so.1.0.0                   [.] 0x000000000000f398\n   0.23%  libpython3.6m.so.1.0                        [.] _PyEval_EvalFrameDefault\n   0.16%  libc-2.25.so                                [.] _int_malloc\n   0.13%  libc-2.25.so                                [.] _int_free\n   0.13%  [kernel]                                    [k] finish_task_switch\n   0.12%  libc-2.25.so                                [.] malloc\n   0.10%  libpython3.6m.so.1.0                        [.] _PyType_Lookup\n   0.10%  [kernel]                                    [k] _raw_spin_unlock_irqrestore\n   0.06%  libpython3.6m.so.1.0                        [.] _PyObject_GenericGetAttrWithDict\n   0.05%  libpython3.6m.so.1.0                        [.] PyObject_Malloc\n   0.05%  libc-2.25.so                                [.] malloc_consolidate.part.1\n   0.05%  libpython3.6m.so.1.0                        [.] PyTuple_New\n   0.05%  libpython3.6m.so.1.0                        [.] _init\n   0.04%  libc-2.25.so                                [.] free", "body": "I executed 4 workloads on the first 4 cores and it worked fine (performance as in a single workload).\r\n```\r\ntaskset -c 0-3 ./train.py --seed 5 --checkpoint-interval 0\r\ntaskset -c 0-3 ./train.py --seed 50 --checkpoint-interval 0\r\ntaskset -c 0-3 ./train.py --seed 500 --checkpoint-interval 0\r\ntaskset -c 0-3 ./train.py --seed 5000 --checkpoint-interval 0\r\n```\r\nThe scaling issue happens when running the workloads on all 16 cores.\r\nAttached are the histograms of \"perf top\" during both tests.\r\n\r\n[perf.hist.4cores.txt](https://github.com/pytorch/pytorch/files/1368315/perf.hist.4cores.txt)\r\n[perf.hist.16cores.txt](https://github.com/pytorch/pytorch/files/1368317/perf.hist.16cores.txt)\r\n\r\nThat's the output for the 16 cores execution:\r\n\r\n```\r\n  18.56%  libgomp-ae56ecdc.so.1.0.0                   [.] 0x000000000000f062\r\n  18.04%  libgomp-ae56ecdc.so.1.0.0                   [.] 0x000000000000f05e\r\n  15.30%  libgomp-ae56ecdc.so.1.0.0                   [.] 0x000000000000f3a2\r\n  14.88%  libgomp-ae56ecdc.so.1.0.0                   [.] 0x000000000000f39e\r\n  12.09%  libgomp-ae56ecdc.so.1.0.0                   [.] 0x000000000000f05c\r\n  10.16%  libgomp-ae56ecdc.so.1.0.0                   [.] 0x000000000000f39c\r\n   3.64%  libgomp-ae56ecdc.so.1.0.0                   [.] 0x000000000000f058\r\n   2.94%  libgomp-ae56ecdc.so.1.0.0                   [.] 0x000000000000f398\r\n   0.23%  libpython3.6m.so.1.0                        [.] _PyEval_EvalFrameDefault\r\n   0.16%  libc-2.25.so                                [.] _int_malloc\r\n   0.13%  libc-2.25.so                                [.] _int_free\r\n   0.13%  [kernel]                                    [k] finish_task_switch\r\n   0.12%  libc-2.25.so                                [.] malloc\r\n   0.10%  libpython3.6m.so.1.0                        [.] _PyType_Lookup\r\n   0.10%  [kernel]                                    [k] _raw_spin_unlock_irqrestore\r\n   0.06%  libpython3.6m.so.1.0                        [.] _PyObject_GenericGetAttrWithDict\r\n   0.05%  libpython3.6m.so.1.0                        [.] PyObject_Malloc\r\n   0.05%  libc-2.25.so                                [.] malloc_consolidate.part.1\r\n   0.05%  libpython3.6m.so.1.0                        [.] PyTuple_New\r\n   0.05%  libpython3.6m.so.1.0                        [.] _init\r\n   0.04%  libc-2.25.so                                [.] free\r\n```\r\n"}