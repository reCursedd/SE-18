{"url": "https://api.github.com/repos/pytorch/pytorch/issues/comments/326775742", "html_url": "https://github.com/pytorch/pytorch/issues/2599#issuecomment-326775742", "issue_url": "https://api.github.com/repos/pytorch/pytorch/issues/2599", "id": 326775742, "node_id": "MDEyOklzc3VlQ29tbWVudDMyNjc3NTc0Mg==", "user": {"login": "apaszke", "id": 4583066, "node_id": "MDQ6VXNlcjQ1ODMwNjY=", "avatar_url": "https://avatars3.githubusercontent.com/u/4583066?v=4", "gravatar_id": "", "url": "https://api.github.com/users/apaszke", "html_url": "https://github.com/apaszke", "followers_url": "https://api.github.com/users/apaszke/followers", "following_url": "https://api.github.com/users/apaszke/following{/other_user}", "gists_url": "https://api.github.com/users/apaszke/gists{/gist_id}", "starred_url": "https://api.github.com/users/apaszke/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/apaszke/subscriptions", "organizations_url": "https://api.github.com/users/apaszke/orgs", "repos_url": "https://api.github.com/users/apaszke/repos", "events_url": "https://api.github.com/users/apaszke/events{/privacy}", "received_events_url": "https://api.github.com/users/apaszke/received_events", "type": "User", "site_admin": false}, "created_at": "2017-09-02T23:59:18Z", "updated_at": "2017-09-02T23:59:18Z", "author_association": "MEMBER", "body_html": "<p>It is. Advanced indexing always returns tensors that don't share storage with the source. The only exception is assignment that involves advanced indexing. <code>x[[1,3]].fill_(1000)</code> is a chain of two independent operations, while <code>x[[1, 3]] = 1000</code> calls <code>x.__setitem__([1, 3], 1000)</code>, so it is performed \"atomically\"</p>", "body_text": "It is. Advanced indexing always returns tensors that don't share storage with the source. The only exception is assignment that involves advanced indexing. x[[1,3]].fill_(1000) is a chain of two independent operations, while x[[1, 3]] = 1000 calls x.__setitem__([1, 3], 1000), so it is performed \"atomically\"", "body": "It is. Advanced indexing always returns tensors that don't share storage with the source. The only exception is assignment that involves advanced indexing. `x[[1,3]].fill_(1000)` is a chain of two independent operations, while `x[[1, 3]] = 1000` calls `x.__setitem__([1, 3], 1000)`, so it is performed \"atomically\""}