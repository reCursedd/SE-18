{"url": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/152744101", "pull_request_review_id": 78649160, "id": 152744101, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE1Mjc0NDEwMQ==", "diff_hunk": "@@ -89,11 +108,37 @@ def ref_log_prob(idx, x, log_prob):\n \n         self._check_log_prob(Normal(mean, std), ref_log_prob)\n \n-    def test_gamma(self):\n+    def test_normal_sample(self):\n+        for mean in [-1.0, 0.0, 1.0]:\n+            for std in [0.1, 1.0, 10.0]:\n+                _test_univariate_sampler(Normal(mean, std), scipy.stats.norm(loc=mean, scale=std))\n+\n+    def test_gamma_shape(self):\n         alpha = Variable(torch.exp(torch.randn(2, 3)), requires_grad=True)\n         beta = Variable(torch.exp(torch.randn(2, 3)), requires_grad=True)\n+        alpha_1d = Variable(torch.exp(torch.randn(1)), requires_grad=True)\n+        beta_1d = Variable(torch.exp(torch.randn(1)), requires_grad=True)\n         self.assertEqual(Gamma(alpha, beta).sample().size(), (2, 3))\n         self.assertEqual(Gamma(alpha, beta).sample_n(5).size(), (5, 2, 3))\n+        self.assertEqual(Gamma(alpha_1d, beta_1d).sample_n(1).size(), (1, 1))\n+        self.assertEqual(Gamma(alpha_1d, beta_1d).sample().size(), (1,))\n+        self.assertEqual(Gamma(0.5, 0.5).sample().size(), (1,))\n+        self.assertEqual(Gamma(0.5, 0.5).sample_n(1).size(), (1, 1))\n+\n+        def ref_log_prob(idx, x, log_prob):\n+            a = alpha.data.view(-1)[idx]\n+            b = beta.data.view(-1)[idx]\n+            expected = scipy.stats.gamma.logpdf(x, a, scale=1 / b)\n+            self.assertAlmostEqual(log_prob, expected, places=3)\n+\n+        self._check_log_prob(Gamma(alpha, beta), ref_log_prob)\n+\n+    # FIXME this fails due to bad numerics", "path": "test/test_distributions.py", "position": null, "original_position": 60, "commit_id": "1872fa2d35560a324c1ad86f85a43bc5debf9672", "original_commit_id": "e16fc77a4a1a4887015d10d61af026d4022119f6", "user": {"login": "apaszke", "id": 4583066, "node_id": "MDQ6VXNlcjQ1ODMwNjY=", "avatar_url": "https://avatars3.githubusercontent.com/u/4583066?v=4", "gravatar_id": "", "url": "https://api.github.com/users/apaszke", "html_url": "https://github.com/apaszke", "followers_url": "https://api.github.com/users/apaszke/followers", "following_url": "https://api.github.com/users/apaszke/following{/other_user}", "gists_url": "https://api.github.com/users/apaszke/gists{/gist_id}", "starred_url": "https://api.github.com/users/apaszke/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/apaszke/subscriptions", "organizations_url": "https://api.github.com/users/apaszke/orgs", "repos_url": "https://api.github.com/users/apaszke/repos", "events_url": "https://api.github.com/users/apaszke/events{/privacy}", "received_events_url": "https://api.github.com/users/apaszke/received_events", "type": "User", "site_admin": false}, "body": "What exactly is the numerical problem here? Do you want to fix it before the merge?", "created_at": "2017-11-23T08:48:52Z", "updated_at": "2018-11-23T15:36:44Z", "html_url": "https://github.com/pytorch/pytorch/pull/3841#discussion_r152744101", "pull_request_url": "https://api.github.com/repos/pytorch/pytorch/pulls/3841", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/152744101"}, "html": {"href": "https://github.com/pytorch/pytorch/pull/3841#discussion_r152744101"}, "pull_request": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/3841"}}, "body_html": "<p>What exactly is the numerical problem here? Do you want to fix it before the merge?</p>", "body_text": "What exactly is the numerical problem here? Do you want to fix it before the merge?"}