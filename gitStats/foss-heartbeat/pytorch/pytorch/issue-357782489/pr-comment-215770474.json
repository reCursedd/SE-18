{"url": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/215770474", "pull_request_review_id": 153112037, "id": 215770474, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIxNTc3MDQ3NA==", "diff_hunk": "@@ -46,6 +46,19 @@ def __init__(self, probs=None, logits=None, validate_args=None):\n             batch_shape = self._param.size()\n         super(Bernoulli, self).__init__(batch_shape, validate_args=validate_args)\n \n+    def expand(self, batch_shape):\n+        batch_shape = torch.Size(batch_shape)\n+        new = self.__new__(Bernoulli)", "path": "torch/distributions/bernoulli.py", "position": null, "original_position": 6, "commit_id": "806e268e07ee225cafa459b3ca390b2c4f1a2bd6", "original_commit_id": "cb203efc9cbd7e32ca87f695f90b5defd9e83090", "user": {"login": "fritzo", "id": 648532, "node_id": "MDQ6VXNlcjY0ODUzMg==", "avatar_url": "https://avatars0.githubusercontent.com/u/648532?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fritzo", "html_url": "https://github.com/fritzo", "followers_url": "https://api.github.com/users/fritzo/followers", "following_url": "https://api.github.com/users/fritzo/following{/other_user}", "gists_url": "https://api.github.com/users/fritzo/gists{/gist_id}", "starred_url": "https://api.github.com/users/fritzo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fritzo/subscriptions", "organizations_url": "https://api.github.com/users/fritzo/orgs", "repos_url": "https://api.github.com/users/fritzo/repos", "events_url": "https://api.github.com/users/fritzo/events{/privacy}", "received_events_url": "https://api.github.com/users/fritzo/received_events", "type": "User", "site_admin": false}, "body": "I don't think we need to support generic `.expand()` via `super(X, self).expand()`. In cases where a user wants to subclass with an `__init__` and use `.expand()`, I guess we could require the user to hand-code an `.expand()` method? That's what we're doing with `TransformedDistribution`, right?", "created_at": "2018-09-06T20:41:57Z", "updated_at": "2018-11-23T15:50:42Z", "html_url": "https://github.com/pytorch/pytorch/pull/11341#discussion_r215770474", "pull_request_url": "https://api.github.com/repos/pytorch/pytorch/pulls/11341", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/215770474"}, "html": {"href": "https://github.com/pytorch/pytorch/pull/11341#discussion_r215770474"}, "pull_request": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/11341"}}, "body_html": "<p>I don't think we need to support generic <code>.expand()</code> via <code>super(X, self).expand()</code>. In cases where a user wants to subclass with an <code>__init__</code> and use <code>.expand()</code>, I guess we could require the user to hand-code an <code>.expand()</code> method? That's what we're doing with <code>TransformedDistribution</code>, right?</p>", "body_text": "I don't think we need to support generic .expand() via super(X, self).expand(). In cases where a user wants to subclass with an __init__ and use .expand(), I guess we could require the user to hand-code an .expand() method? That's what we're doing with TransformedDistribution, right?", "in_reply_to_id": 215747977}