{"url": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/150903629", "pull_request_review_id": 76524668, "id": 150903629, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE1MDkwMzYyOQ==", "diff_hunk": "@@ -225,10 +222,15 @@ inline const std::shared_ptr<Function>& Variable::grad_fn() const {\n   return get()->get_grad_fn();\n };\n inline void Variable::rebase_history(VarFlags flags, int output_nr, std::shared_ptr<Function> grad_fn) {\n-  get()->requires_grad = flags.requires_grad;\n-  get()->is_volatile = flags.is_volatile;\n-  get()->output_nr = output_nr;\n-  get()->rebase_grad_fn(std::move(grad_fn));\n+  if (is_view()) {\n+    auto& impl = static_cast<VariableViewImpl&>(*get());\n+    impl.rebase_history(flags, output_nr, std::move(grad_fn));", "path": "torch/csrc/autograd/variable.h", "position": 29, "original_position": 29, "commit_id": "d7b88f70f8551f95c78e21fe829ec1eaf9eee1fa", "original_commit_id": "e88ea013d720a5bd6e471185bbcac52a3852b31c", "user": {"login": "colesbury", "id": 655866, "node_id": "MDQ6VXNlcjY1NTg2Ng==", "avatar_url": "https://avatars1.githubusercontent.com/u/655866?v=4", "gravatar_id": "", "url": "https://api.github.com/users/colesbury", "html_url": "https://github.com/colesbury", "followers_url": "https://api.github.com/users/colesbury/followers", "following_url": "https://api.github.com/users/colesbury/following{/other_user}", "gists_url": "https://api.github.com/users/colesbury/gists{/gist_id}", "starred_url": "https://api.github.com/users/colesbury/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/colesbury/subscriptions", "organizations_url": "https://api.github.com/users/colesbury/orgs", "repos_url": "https://api.github.com/users/colesbury/repos", "events_url": "https://api.github.com/users/colesbury/events{/privacy}", "received_events_url": "https://api.github.com/users/colesbury/received_events", "type": "User", "site_admin": false}, "body": "The intention is to make the non-view case fast, by effectively inlining it below. That part can be inlined into the caller, including the `is_view()` check.  \r\n\r\nBy completely separating the view vs. non-view logic, we're able to check assertions and invariants in VariableViewImpl::rebase_history before we mess with the output_nr or flags.", "created_at": "2017-11-14T17:24:09Z", "updated_at": "2018-11-23T15:36:30Z", "html_url": "https://github.com/pytorch/pytorch/pull/3680#discussion_r150903629", "pull_request_url": "https://api.github.com/repos/pytorch/pytorch/pulls/3680", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/150903629"}, "html": {"href": "https://github.com/pytorch/pytorch/pull/3680#discussion_r150903629"}, "pull_request": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/3680"}}, "body_html": "<p>The intention is to make the non-view case fast, by effectively inlining it below. That part can be inlined into the caller, including the <code>is_view()</code> check.</p>\n<p>By completely separating the view vs. non-view logic, we're able to check assertions and invariants in VariableViewImpl::rebase_history before we mess with the output_nr or flags.</p>", "body_text": "The intention is to make the non-view case fast, by effectively inlining it below. That part can be inlined into the caller, including the is_view() check.\nBy completely separating the view vs. non-view logic, we're able to check assertions and invariants in VariableViewImpl::rebase_history before we mess with the output_nr or flags.", "in_reply_to_id": 150841590}