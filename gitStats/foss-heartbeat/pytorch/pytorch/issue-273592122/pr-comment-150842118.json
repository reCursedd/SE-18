{"url": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/150842118", "pull_request_review_id": 76449020, "id": 150842118, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE1MDg0MjExOA==", "diff_hunk": "@@ -127,22 +127,24 @@ std::shared_ptr<Function>& VariableViewImpl::get_grad_fn() {\n   return _grad_fn;\n }\n \n-void VariableViewImpl::rebase_grad_fn(std::shared_ptr<Function> grad_fn) {\n+void VariableViewImpl::rebase_history(VarFlags flags, int output_nr, std::shared_ptr<Function> grad_fn) {\n   TORCH_ASSERT(output_nr == 0);\n-  if (!grad_fn) {\n-    TORCH_ASSERTM(!requires_grad, \"Can't set null grad_fn on view with requires_grad=True\");\n+  TORCH_ASSERT(flags.requires_grad == bool(grad_fn));\n+  if (grad_fn) {\n+    TORCH_ASSERTM(grad_fn->num_inputs == 1, \"Functions which modify views in-place must return a single Variable\");", "path": "torch/csrc/autograd/variable.cpp", "position": 24, "original_position": 11, "commit_id": "d7b88f70f8551f95c78e21fe829ec1eaf9eee1fa", "original_commit_id": "e88ea013d720a5bd6e471185bbcac52a3852b31c", "user": {"login": "apaszke", "id": 4583066, "node_id": "MDQ6VXNlcjQ1ODMwNjY=", "avatar_url": "https://avatars3.githubusercontent.com/u/4583066?v=4", "gravatar_id": "", "url": "https://api.github.com/users/apaszke", "html_url": "https://github.com/apaszke", "followers_url": "https://api.github.com/users/apaszke/followers", "following_url": "https://api.github.com/users/apaszke/following{/other_user}", "gists_url": "https://api.github.com/users/apaszke/gists{/gist_id}", "starred_url": "https://api.github.com/users/apaszke/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/apaszke/subscriptions", "organizations_url": "https://api.github.com/users/apaszke/orgs", "repos_url": "https://api.github.com/users/apaszke/repos", "events_url": "https://api.github.com/users/apaszke/events{/privacy}", "received_events_url": "https://api.github.com/users/apaszke/received_events", "type": "User", "site_admin": false}, "body": "We should really have `TORCH_ASSERT` for invariants and `TORCH_EXPECT` for checks that might fail as a result of user interactions", "created_at": "2017-11-14T14:10:16Z", "updated_at": "2018-11-23T15:36:29Z", "html_url": "https://github.com/pytorch/pytorch/pull/3680#discussion_r150842118", "pull_request_url": "https://api.github.com/repos/pytorch/pytorch/pulls/3680", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/150842118"}, "html": {"href": "https://github.com/pytorch/pytorch/pull/3680#discussion_r150842118"}, "pull_request": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/3680"}}, "body_html": "<p>We should really have <code>TORCH_ASSERT</code> for invariants and <code>TORCH_EXPECT</code> for checks that might fail as a result of user interactions</p>", "body_text": "We should really have TORCH_ASSERT for invariants and TORCH_EXPECT for checks that might fail as a result of user interactions"}