{"url": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/150911963", "pull_request_review_id": 76534470, "id": 150911963, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE1MDkxMTk2Mw==", "diff_hunk": "@@ -1591,6 +1591,25 @@ def test_inplace_view_of_view(self):\n         x.sum().backward()\n         self.assertEqual(root.grad.data.tolist(), [[1, 2], [1, 1]])\n \n+    def test_inplace_view_volatile(self):\n+        # an in-place operation on a view that makes the view volatile should\n+        # make the base volatile too\n+        base = Variable(torch.randn(2, 2))\n+        view = base.narrow(0, 0, 1)\n+        view.add_(Variable(torch.randn(1, 2), volatile=True))\n+        self.assertTrue(view.volatile)\n+        self.assertTrue(base.volatile)\n+\n+    def test_inplace_base_volatile(self):\n+        # an in-place operation on a base that makes the base volatile should\n+        # trigger a consistency exception if the view is used in a differentiable\n+        # op\n+        x = Variable(torch.randn(2, 2), requires_grad=True)\n+        base = Variable(torch.randn(2, 2))\n+        view = base.narrow(0, 0, 1)\n+        base.add_(Variable(torch.randn(1, 2), volatile=True))\n+        self.assertRaisesRegex(RuntimeError, 'is_volatile', lambda: view + x)", "path": "test/test_autograd.py", "position": 21, "original_position": 21, "commit_id": "d7b88f70f8551f95c78e21fe829ec1eaf9eee1fa", "original_commit_id": "4c5d4a2d4a8e1313a36f6a0728acc41b91080647", "user": {"login": "apaszke", "id": 4583066, "node_id": "MDQ6VXNlcjQ1ODMwNjY=", "avatar_url": "https://avatars3.githubusercontent.com/u/4583066?v=4", "gravatar_id": "", "url": "https://api.github.com/users/apaszke", "html_url": "https://github.com/apaszke", "followers_url": "https://api.github.com/users/apaszke/followers", "following_url": "https://api.github.com/users/apaszke/following{/other_user}", "gists_url": "https://api.github.com/users/apaszke/gists{/gist_id}", "starred_url": "https://api.github.com/users/apaszke/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/apaszke/subscriptions", "organizations_url": "https://api.github.com/users/apaszke/orgs", "repos_url": "https://api.github.com/users/apaszke/repos", "events_url": "https://api.github.com/users/apaszke/events{/privacy}", "received_events_url": "https://api.github.com/users/apaszke/received_events", "type": "User", "site_admin": false}, "body": "Same thing should apply when you apply the volatile operation to the view - it should fail immediately. Can you first add a check before `base.add_` that this happens, and only then make sure that we have consistency checks for regular ops if base was modified.", "created_at": "2017-11-14T17:54:15Z", "updated_at": "2018-11-23T15:36:30Z", "html_url": "https://github.com/pytorch/pytorch/pull/3680#discussion_r150911963", "pull_request_url": "https://api.github.com/repos/pytorch/pytorch/pulls/3680", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/150911963"}, "html": {"href": "https://github.com/pytorch/pytorch/pull/3680#discussion_r150911963"}, "pull_request": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/3680"}}, "body_html": "<p>Same thing should apply when you apply the volatile operation to the view - it should fail immediately. Can you first add a check before <code>base.add_</code> that this happens, and only then make sure that we have consistency checks for regular ops if base was modified.</p>", "body_text": "Same thing should apply when you apply the volatile operation to the view - it should fail immediately. Can you first add a check before base.add_ that this happens, and only then make sure that we have consistency checks for regular ops if base was modified."}