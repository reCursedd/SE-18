{"url": "https://api.github.com/repos/pytorch/pytorch/issues/comments/377312709", "html_url": "https://github.com/pytorch/pytorch/issues/6103#issuecomment-377312709", "issue_url": "https://api.github.com/repos/pytorch/pytorch/issues/6103", "id": 377312709, "node_id": "MDEyOklzc3VlQ29tbWVudDM3NzMxMjcwOQ==", "user": {"login": "goldsborough", "id": 6429851, "node_id": "MDQ6VXNlcjY0Mjk4NTE=", "avatar_url": "https://avatars3.githubusercontent.com/u/6429851?v=4", "gravatar_id": "", "url": "https://api.github.com/users/goldsborough", "html_url": "https://github.com/goldsborough", "followers_url": "https://api.github.com/users/goldsborough/followers", "following_url": "https://api.github.com/users/goldsborough/following{/other_user}", "gists_url": "https://api.github.com/users/goldsborough/gists{/gist_id}", "starred_url": "https://api.github.com/users/goldsborough/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/goldsborough/subscriptions", "organizations_url": "https://api.github.com/users/goldsborough/orgs", "repos_url": "https://api.github.com/users/goldsborough/repos", "events_url": "https://api.github.com/users/goldsborough/events{/privacy}", "received_events_url": "https://api.github.com/users/goldsborough/received_events", "type": "User", "site_admin": false}, "created_at": "2018-03-29T17:32:59Z", "updated_at": "2018-03-29T17:34:26Z", "author_association": "CONTRIBUTOR", "body_html": "<p>There's an example of using <code>ones</code> right here <a href=\"https://github.com/pytorch/pytorch/blob/master/test/cpp_extensions/extension.cpp#L9\">https://github.com/pytorch/pytorch/blob/master/test/cpp_extensions/extension.cpp#L9</a></p>\n<p>You want <code>at::ones(torch::CPU(at::kFloat), {3, 4});</code></p>\n<p><code>torch::CPU</code> will return a <code>VariableType</code> which inherits from <code>Type</code> so all the usual factory methods should work</p>", "body_text": "There's an example of using ones right here https://github.com/pytorch/pytorch/blob/master/test/cpp_extensions/extension.cpp#L9\nYou want at::ones(torch::CPU(at::kFloat), {3, 4});\ntorch::CPU will return a VariableType which inherits from Type so all the usual factory methods should work", "body": "There's an example of using `ones` right here https://github.com/pytorch/pytorch/blob/master/test/cpp_extensions/extension.cpp#L9\r\n\r\nYou want `at::ones(torch::CPU(at::kFloat), {3, 4});`\r\n\r\n`torch::CPU` will return a `VariableType` which inherits from `Type` so all the usual factory methods should work"}