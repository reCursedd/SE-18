{"url": "https://api.github.com/repos/pytorch/pytorch/issues/comments/368971111", "html_url": "https://github.com/pytorch/pytorch/issues/5426#issuecomment-368971111", "issue_url": "https://api.github.com/repos/pytorch/pytorch/issues/5426", "id": 368971111, "node_id": "MDEyOklzc3VlQ29tbWVudDM2ODk3MTExMQ==", "user": {"login": "robertnishihara", "id": 249517, "node_id": "MDQ6VXNlcjI0OTUxNw==", "avatar_url": "https://avatars3.githubusercontent.com/u/249517?v=4", "gravatar_id": "", "url": "https://api.github.com/users/robertnishihara", "html_url": "https://github.com/robertnishihara", "followers_url": "https://api.github.com/users/robertnishihara/followers", "following_url": "https://api.github.com/users/robertnishihara/following{/other_user}", "gists_url": "https://api.github.com/users/robertnishihara/gists{/gist_id}", "starred_url": "https://api.github.com/users/robertnishihara/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/robertnishihara/subscriptions", "organizations_url": "https://api.github.com/users/robertnishihara/orgs", "repos_url": "https://api.github.com/users/robertnishihara/repos", "events_url": "https://api.github.com/users/robertnishihara/events{/privacy}", "received_events_url": "https://api.github.com/users/robertnishihara/received_events", "type": "User", "site_admin": false}, "created_at": "2018-02-27T18:06:29Z", "updated_at": "2018-02-27T18:06:29Z", "author_association": "NONE", "body_html": "<p><a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=23068\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/yaroslavvb\">@yaroslavvb</a>, Ray creates a read-only numpy array (since it is backed by shared memory), so</p>\n<div class=\"highlight highlight-source-python\"><pre><span class=\"pl-k\">import</span> numpy <span class=\"pl-k\">as</span> np\n<span class=\"pl-k\">import</span> ray\n<span class=\"pl-k\">import</span> torch\n\nray.init()\n\n<span class=\"pl-en\">@ray.remote</span>\n<span class=\"pl-k\">def</span> <span class=\"pl-en\">f</span>():\n    <span class=\"pl-k\">return</span> np.zeros(<span class=\"pl-c1\">25</span> <span class=\"pl-k\">*</span> <span class=\"pl-c1\">10</span> <span class=\"pl-k\">**</span> <span class=\"pl-c1\">6</span>, <span class=\"pl-v\">dtype</span><span class=\"pl-k\">=</span>np.float32)\n\nx <span class=\"pl-k\">=</span> ray.get(f.remote())  <span class=\"pl-c\"><span class=\"pl-c\">#</span> Now x is read only.</span>\nt <span class=\"pl-k\">=</span> torch.from_numpy(x)  <span class=\"pl-c\"><span class=\"pl-c\">#</span> This does a copy because x is read only.</span></pre></div>\n<p>We can try turning off the read-only flag and see if that fully gets rid of the issue or if there are any remaining slowdowns.</p>", "body_text": "@yaroslavvb, Ray creates a read-only numpy array (since it is backed by shared memory), so\nimport numpy as np\nimport ray\nimport torch\n\nray.init()\n\n@ray.remote\ndef f():\n    return np.zeros(25 * 10 ** 6, dtype=np.float32)\n\nx = ray.get(f.remote())  # Now x is read only.\nt = torch.from_numpy(x)  # This does a copy because x is read only.\nWe can try turning off the read-only flag and see if that fully gets rid of the issue or if there are any remaining slowdowns.", "body": "@yaroslavvb, Ray creates a read-only numpy array (since it is backed by shared memory), so\r\n\r\n```python\r\nimport numpy as np\r\nimport ray\r\nimport torch\r\n\r\nray.init()\r\n\r\n@ray.remote\r\ndef f():\r\n    return np.zeros(25 * 10 ** 6, dtype=np.float32)\r\n\r\nx = ray.get(f.remote())  # Now x is read only.\r\nt = torch.from_numpy(x)  # This does a copy because x is read only.\r\n```\r\n\r\nWe can try turning off the read-only flag and see if that fully gets rid of the issue or if there are any remaining slowdowns."}