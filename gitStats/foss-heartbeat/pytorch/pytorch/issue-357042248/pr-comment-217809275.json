{"url": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/217809275", "pull_request_review_id": 155616224, "id": 217809275, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIxNzgwOTI3NQ==", "diff_hunk": "@@ -599,3 +600,111 @@ def argsort(input, dim=None, descending=False):\n     if dim is None:\n         return torch.sort(input, -1, descending)[1]\n     return torch.sort(input, dim, descending)[1]\n+\n+\n+def norm(input, p=\"fro\", dim=None, keepdim=False, out=None):\n+    r\"\"\"Returns the matrix norm or vector norm of a given tensor.\n+\n+    Args:\n+        input (Tensor): the input tensor\n+        p ({int, float, inf, -inf, 'fro', 'nuc'}): the order of norm\n+            The following norms can be calculated:\n+            =====  ============================  ==========================\n+            ord    matrix norm                   vector norm\n+            =====  ============================  ==========================\n+            None   Frobenius norm                2-norm\n+            'fro'  Frobenius norm                --\n+            'nuc'  nuclear norm                  --\n+            other  as vec norm when dim is None  sum(abs(x)**ord)**(1./ord)\n+            =====  ============================  ==========================\n+        dim ({int, 2-tuple of ints, 2-list of ints}, optional): If it is a int,\n+        vector norm will be calculated, if it is 2-tuple of ints, matrix norm\n+        will be calculated. If the value is None, matrix norm will be calculated\n+        when the input tensor only has two dimensions, vector norm will be\n+        calculated when the input tensor only has one dimension. If the input\n+        tensor has more than two dimensions, the vector norm will be applied to\n+        last dimension.\n+        keepdim (bool): whether the output tensors have :attr:`dim`\n+            retained or not. Ignored if ``dim=None and out=None``.\n+        out (Tensor, optional) \u2013 the output tensor. Ignored if\n+        ``dim=None and out=None``.\n+\n+    Example::\n+        >>> import torch", "path": "torch/functional.py", "position": null, "original_position": 42, "commit_id": "757e6d8d507c44e454fe5f507ca2266b67acab2d", "original_commit_id": "7f77dd9902a023e17e97efc8ca1ed082fe577363", "user": {"login": "li-roy", "id": 8813817, "node_id": "MDQ6VXNlcjg4MTM4MTc=", "avatar_url": "https://avatars0.githubusercontent.com/u/8813817?v=4", "gravatar_id": "", "url": "https://api.github.com/users/li-roy", "html_url": "https://github.com/li-roy", "followers_url": "https://api.github.com/users/li-roy/followers", "following_url": "https://api.github.com/users/li-roy/following{/other_user}", "gists_url": "https://api.github.com/users/li-roy/gists{/gist_id}", "starred_url": "https://api.github.com/users/li-roy/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/li-roy/subscriptions", "organizations_url": "https://api.github.com/users/li-roy/orgs", "repos_url": "https://api.github.com/users/li-roy/repos", "events_url": "https://api.github.com/users/li-roy/events{/privacy}", "received_events_url": "https://api.github.com/users/li-roy/received_events", "type": "User", "site_admin": false}, "body": "Can we get rid of some of these examples? It will won't look good on the docs page. I feel like the examples should illustrate proper usage of the function, it doesn't need to cover every code path.", "created_at": "2018-09-14T18:49:13Z", "updated_at": "2018-11-23T15:51:25Z", "html_url": "https://github.com/pytorch/pytorch/pull/11261#discussion_r217809275", "pull_request_url": "https://api.github.com/repos/pytorch/pytorch/pulls/11261", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/217809275"}, "html": {"href": "https://github.com/pytorch/pytorch/pull/11261#discussion_r217809275"}, "pull_request": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/11261"}}, "body_html": "<p>Can we get rid of some of these examples? It will won't look good on the docs page. I feel like the examples should illustrate proper usage of the function, it doesn't need to cover every code path.</p>", "body_text": "Can we get rid of some of these examples? It will won't look good on the docs page. I feel like the examples should illustrate proper usage of the function, it doesn't need to cover every code path."}