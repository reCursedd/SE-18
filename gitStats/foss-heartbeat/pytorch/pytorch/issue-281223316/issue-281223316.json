{"url": "https://api.github.com/repos/pytorch/pytorch/issues/4125", "repository_url": "https://api.github.com/repos/pytorch/pytorch", "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/4125/labels{/name}", "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/4125/comments", "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/4125/events", "html_url": "https://github.com/pytorch/pytorch/issues/4125", "id": 281223316, "node_id": "MDU6SXNzdWUyODEyMjMzMTY=", "number": 4125, "title": "as_tensor_list naming is dodgy", "user": {"login": "ezyang", "id": 13564, "node_id": "MDQ6VXNlcjEzNTY0", "avatar_url": "https://avatars0.githubusercontent.com/u/13564?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ezyang", "html_url": "https://github.com/ezyang", "followers_url": "https://api.github.com/users/ezyang/followers", "following_url": "https://api.github.com/users/ezyang/following{/other_user}", "gists_url": "https://api.github.com/users/ezyang/gists{/gist_id}", "starred_url": "https://api.github.com/users/ezyang/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ezyang/subscriptions", "organizations_url": "https://api.github.com/users/ezyang/orgs", "repos_url": "https://api.github.com/users/ezyang/repos", "events_url": "https://api.github.com/users/ezyang/events{/privacy}", "received_events_url": "https://api.github.com/users/ezyang/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-12-12T01:13:41Z", "updated_at": "2017-12-12T10:37:37Z", "closed_at": null, "author_association": "CONTRIBUTOR", "body_html": "<p>We have both <code>as_tensor_list</code> and <code>as_variable</code> in VariableType.cpp. What do you think they do? It's asymmetric:</p>\n<ul>\n<li><code>as_tensor_list</code> just does the downcast from <code>Variable</code> to <code>Tensor</code></li>\n<li><code>as_variable</code> <em>creates</em> a variable</li>\n</ul>\n<p>So they aren't inverses of each other, which is pretty confusing. There is a legitimately useful operation which upcasts from <code>Tensor</code> to <code>Variable</code> (when you know that the Tensor in question is really just a downcasted Variable)...</p>", "body_text": "We have both as_tensor_list and as_variable in VariableType.cpp. What do you think they do? It's asymmetric:\n\nas_tensor_list just does the downcast from Variable to Tensor\nas_variable creates a variable\n\nSo they aren't inverses of each other, which is pretty confusing. There is a legitimately useful operation which upcasts from Tensor to Variable (when you know that the Tensor in question is really just a downcasted Variable)...", "body": "We have both `as_tensor_list` and `as_variable` in VariableType.cpp. What do you think they do? It's asymmetric:\r\n\r\n- `as_tensor_list` just does the downcast from `Variable` to `Tensor`\r\n- `as_variable` *creates* a variable\r\n\r\nSo they aren't inverses of each other, which is pretty confusing. There is a legitimately useful operation which upcasts from `Tensor` to `Variable` (when you know that the Tensor in question is really just a downcasted Variable)..."}