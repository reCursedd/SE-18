{"url": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/170765996", "pull_request_review_id": 99502798, "id": 170765996, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE3MDc2NTk5Ng==", "diff_hunk": "@@ -636,6 +636,102 @@ def forward(self, input, output_size=None):\n             output_padding, self.groups, self.dilation)\n \n \n+class Conv2dBackward(_ConvTransposeMixin, _ConvNd):", "path": "torch/nn/modules/conv.py", "position": null, "original_position": 4, "commit_id": "e19881ef0ac35bb42a3da4205702f45296eee9f3", "original_commit_id": "c909be9e2bfc44f4d8dd924c2c1e3ee263ad9024", "user": {"login": "vedanuj", "id": 13946458, "node_id": "MDQ6VXNlcjEzOTQ2NDU4", "avatar_url": "https://avatars2.githubusercontent.com/u/13946458?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vedanuj", "html_url": "https://github.com/vedanuj", "followers_url": "https://api.github.com/users/vedanuj/followers", "following_url": "https://api.github.com/users/vedanuj/following{/other_user}", "gists_url": "https://api.github.com/users/vedanuj/gists{/gist_id}", "starred_url": "https://api.github.com/users/vedanuj/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vedanuj/subscriptions", "organizations_url": "https://api.github.com/users/vedanuj/orgs", "repos_url": "https://api.github.com/users/vedanuj/repos", "events_url": "https://api.github.com/users/vedanuj/events{/privacy}", "received_events_url": "https://api.github.com/users/vedanuj/received_events", "type": "User", "site_admin": false}, "body": "@apaszke The issue #5024 discusses some use cases where they require alternate forms of backprop through convolution. This API is functionally similar to what TensorFlow's https://www.tensorflow.org/api_docs/python/tf/nn/conv2d_backprop_input provides. Tensorflow also uses the same underlying API for both conv2d_backprop_input and [conv2d_transpose](https://github.com/tensorflow/tensorflow/blob/54ab9d690a63ee11813f091d9dd9c2cd3c4cce1d/tensorflow/python/ops/nn_ops.py#L1183). \r\n\r\nDo you suggest we should make a generic interface that can call into the backward pass for any operator function?", "created_at": "2018-02-26T23:04:36Z", "updated_at": "2018-11-23T15:40:02Z", "html_url": "https://github.com/pytorch/pytorch/pull/5408#discussion_r170765996", "pull_request_url": "https://api.github.com/repos/pytorch/pytorch/pulls/5408", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/170765996"}, "html": {"href": "https://github.com/pytorch/pytorch/pull/5408#discussion_r170765996"}, "pull_request": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/5408"}}, "body_html": "<p><a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=4583066\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/apaszke\">@apaszke</a> The issue <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load issue title\" data-id=\"294056804\" data-permission-text=\"Issue title is private\" data-url=\"https://github.com/pytorch/pytorch/issues/5024\" data-hovercard-type=\"issue\" data-hovercard-url=\"/pytorch/pytorch/issues/5024/hovercard\" href=\"https://github.com/pytorch/pytorch/issues/5024\">#5024</a> discusses some use cases where they require alternate forms of backprop through convolution. This API is functionally similar to what TensorFlow's <a href=\"https://www.tensorflow.org/api_docs/python/tf/nn/conv2d_backprop_input\" rel=\"nofollow\">https://www.tensorflow.org/api_docs/python/tf/nn/conv2d_backprop_input</a> provides. Tensorflow also uses the same underlying API for both conv2d_backprop_input and <a href=\"https://github.com/tensorflow/tensorflow/blob/54ab9d690a63ee11813f091d9dd9c2cd3c4cce1d/tensorflow/python/ops/nn_ops.py#L1183\">conv2d_transpose</a>.</p>\n<p>Do you suggest we should make a generic interface that can call into the backward pass for any operator function?</p>", "body_text": "@apaszke The issue #5024 discusses some use cases where they require alternate forms of backprop through convolution. This API is functionally similar to what TensorFlow's https://www.tensorflow.org/api_docs/python/tf/nn/conv2d_backprop_input provides. Tensorflow also uses the same underlying API for both conv2d_backprop_input and conv2d_transpose.\nDo you suggest we should make a generic interface that can call into the backward pass for any operator function?", "in_reply_to_id": 170552145}