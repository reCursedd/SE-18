{"url": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/154518069", "pull_request_review_id": 80695583, "id": 154518069, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE1NDUxODA2OQ==", "diff_hunk": "@@ -93,7 +93,7 @@ struct Scope {\n   }\n   Scope* push(Symbol name) {\n     Scope* newScope = new Scope(this, name);\n-    children_.insert(std::unique_ptr<Scope>(newScope));\n+    children_.push_back(std::unique_ptr<Scope>(newScope));", "path": "torch/csrc/jit/ir.h", "position": null, "original_position": 14, "commit_id": "1ef21e12c8ecdbfde2a5ac10e2ab8f5b4c5cc7f7", "original_commit_id": "0dc99e26b51679177a336a4932a03f79f7190ce1", "user": {"login": "apaszke", "id": 4583066, "node_id": "MDQ6VXNlcjQ1ODMwNjY=", "avatar_url": "https://avatars3.githubusercontent.com/u/4583066?v=4", "gravatar_id": "", "url": "https://api.github.com/users/apaszke", "html_url": "https://github.com/apaszke", "followers_url": "https://api.github.com/users/apaszke/followers", "following_url": "https://api.github.com/users/apaszke/following{/other_user}", "gists_url": "https://api.github.com/users/apaszke/gists{/gist_id}", "starred_url": "https://api.github.com/users/apaszke/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/apaszke/subscriptions", "organizations_url": "https://api.github.com/users/apaszke/orgs", "repos_url": "https://api.github.com/users/apaszke/repos", "events_url": "https://api.github.com/users/apaszke/events{/privacy}", "received_events_url": "https://api.github.com/users/apaszke/received_events", "type": "User", "site_admin": false}, "body": "In general the problem with this line is that it can leak memory if `push_back` fails (e.g. because an allocation fails). It would be better to do this:\r\n```cpp\r\nchildren_.push_back(std::unique_ptr<Scope>(new Scope(this, name)));\r\nreturn children_.back().get();\r\n```", "created_at": "2017-12-03T09:00:22Z", "updated_at": "2018-11-23T15:37:02Z", "html_url": "https://github.com/pytorch/pytorch/pull/3016#discussion_r154518069", "pull_request_url": "https://api.github.com/repos/pytorch/pytorch/pulls/3016", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/154518069"}, "html": {"href": "https://github.com/pytorch/pytorch/pull/3016#discussion_r154518069"}, "pull_request": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/3016"}}, "body_html": "<p>In general the problem with this line is that it can leak memory if <code>push_back</code> fails (e.g. because an allocation fails). It would be better to do this:</p>\n<div class=\"highlight highlight-source-c++\"><pre>children_.push_back(std::unique_ptr&lt;Scope&gt;(<span class=\"pl-k\">new</span> Scope(<span class=\"pl-c1\">this</span>, name)));\n<span class=\"pl-k\">return</span> children_.back().get();</pre></div>", "body_text": "In general the problem with this line is that it can leak memory if push_back fails (e.g. because an allocation fails). It would be better to do this:\nchildren_.push_back(std::unique_ptr<Scope>(new Scope(this, name)));\nreturn children_.back().get();"}