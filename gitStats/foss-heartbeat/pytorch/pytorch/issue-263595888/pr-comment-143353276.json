{"url": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/143353276", "pull_request_review_id": 67855972, "id": 143353276, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE0MzM1MzI3Ng==", "diff_hunk": "@@ -56,6 +70,7 @@ def __init__(self):\n         self._forward_pre_hooks = OrderedDict()\n         self._modules = OrderedDict()\n         self.training = True\n+        self._name = ''", "path": "torch/nn/modules/module.py", "position": null, "original_position": 31, "commit_id": "1ef21e12c8ecdbfde2a5ac10e2ab8f5b4c5cc7f7", "original_commit_id": "e8659b382168b7eca25233e9cbf5f3ba608ed2e3", "user": {"login": "lantiga", "id": 191033, "node_id": "MDQ6VXNlcjE5MTAzMw==", "avatar_url": "https://avatars2.githubusercontent.com/u/191033?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lantiga", "html_url": "https://github.com/lantiga", "followers_url": "https://api.github.com/users/lantiga/followers", "following_url": "https://api.github.com/users/lantiga/following{/other_user}", "gists_url": "https://api.github.com/users/lantiga/gists{/gist_id}", "starred_url": "https://api.github.com/users/lantiga/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lantiga/subscriptions", "organizations_url": "https://api.github.com/users/lantiga/orgs", "repos_url": "https://api.github.com/users/lantiga/repos", "events_url": "https://api.github.com/users/lantiga/events{/privacy}", "received_events_url": "https://api.github.com/users/lantiga/received_events", "type": "User", "site_admin": false}, "body": "Thanks @fmassa , I have modified `__setstate__` in the last commit.\r\nI was especially referring to unpickling of old pickles in `__setstate__`. Right now it will just make sure that `_name` exists, but it will set it to the empty string. This will lead to incorrect grouping of nodes for older models, if one were to, say, display a pre-trained network.\r\n\r\nUsing `id(self)` in these cases might be ok, although it's not stable in subsequent unpicklings.\r\nAlternatively we have to assign a progressive number to each unpicked object of a given class, although this is a bit more involved.\r\n\r\nWhat do you think?", "created_at": "2017-10-08T12:22:01Z", "updated_at": "2018-11-23T15:35:07Z", "html_url": "https://github.com/pytorch/pytorch/pull/3016#discussion_r143353276", "pull_request_url": "https://api.github.com/repos/pytorch/pytorch/pulls/3016", "author_association": "COLLABORATOR", "_links": {"self": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/143353276"}, "html": {"href": "https://github.com/pytorch/pytorch/pull/3016#discussion_r143353276"}, "pull_request": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/3016"}}, "body_html": "<p>Thanks <a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=9110200\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/fmassa\">@fmassa</a> , I have modified <code>__setstate__</code> in the last commit.<br>\nI was especially referring to unpickling of old pickles in <code>__setstate__</code>. Right now it will just make sure that <code>_name</code> exists, but it will set it to the empty string. This will lead to incorrect grouping of nodes for older models, if one were to, say, display a pre-trained network.</p>\n<p>Using <code>id(self)</code> in these cases might be ok, although it's not stable in subsequent unpicklings.<br>\nAlternatively we have to assign a progressive number to each unpicked object of a given class, although this is a bit more involved.</p>\n<p>What do you think?</p>", "body_text": "Thanks @fmassa , I have modified __setstate__ in the last commit.\nI was especially referring to unpickling of old pickles in __setstate__. Right now it will just make sure that _name exists, but it will set it to the empty string. This will lead to incorrect grouping of nodes for older models, if one were to, say, display a pre-trained network.\nUsing id(self) in these cases might be ok, although it's not stable in subsequent unpicklings.\nAlternatively we have to assign a progressive number to each unpicked object of a given class, although this is a bit more involved.\nWhat do you think?", "in_reply_to_id": 143340726}