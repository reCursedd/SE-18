{"url": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/143340117", "pull_request_review_id": 67842467, "id": 143340117, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE0MzM0MDExNw==", "diff_hunk": "@@ -28,6 +28,25 @@ def __repr__(self):\n VOLATILE = Placeholder(\"VOLATILE\")\n \n \n+def get_tracing_state(*args):\n+    if not torch._C.is_tracing(args):\n+        return None\n+    return torch._C.get_tracing_state(args)\n+\n+\n+@contextlib.contextmanager\n+def scope(scope_name, vars):\n+    if not torch._C.is_tracing(vars):\n+        tracing_state = None\n+    else:\n+        tracing_state = torch._C.get_tracing_state(vars)\n+    if tracing_state:\n+        tracing_state.push_scope(scope_name)\n+    yield", "path": "torch/jit/__init__.py", "position": null, "original_position": 18, "commit_id": "1ef21e12c8ecdbfde2a5ac10e2ab8f5b4c5cc7f7", "original_commit_id": "560b3d427dc0313694407255db01647ed91670c4", "user": {"login": "fmassa", "id": 9110200, "node_id": "MDQ6VXNlcjkxMTAyMDA=", "avatar_url": "https://avatars2.githubusercontent.com/u/9110200?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fmassa", "html_url": "https://github.com/fmassa", "followers_url": "https://api.github.com/users/fmassa/followers", "following_url": "https://api.github.com/users/fmassa/following{/other_user}", "gists_url": "https://api.github.com/users/fmassa/gists{/gist_id}", "starred_url": "https://api.github.com/users/fmassa/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fmassa/subscriptions", "organizations_url": "https://api.github.com/users/fmassa/orgs", "repos_url": "https://api.github.com/users/fmassa/repos", "events_url": "https://api.github.com/users/fmassa/events{/privacy}", "received_events_url": "https://api.github.com/users/fmassa/received_events", "type": "User", "site_admin": false}, "body": "I think it might be good to wrap this in a `try`/`finally`, so that if errors occur we still properly clean up the `tracing_state`.\r\nMaybe something like\r\n```python\r\ntry:\r\n    yield\r\nfinally:\r\n    if tracing_state:\r\n        tracing_state.pop_scope()\r\n```", "created_at": "2017-10-07T20:40:48Z", "updated_at": "2018-11-23T15:35:07Z", "html_url": "https://github.com/pytorch/pytorch/pull/3016#discussion_r143340117", "pull_request_url": "https://api.github.com/repos/pytorch/pytorch/pulls/3016", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/143340117"}, "html": {"href": "https://github.com/pytorch/pytorch/pull/3016#discussion_r143340117"}, "pull_request": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/3016"}}, "body_html": "<p>I think it might be good to wrap this in a <code>try</code>/<code>finally</code>, so that if errors occur we still properly clean up the <code>tracing_state</code>.<br>\nMaybe something like</p>\n<div class=\"highlight highlight-source-python\"><pre><span class=\"pl-k\">try</span>:\n    <span class=\"pl-k\">yield</span>\n<span class=\"pl-k\">finally</span>:\n    <span class=\"pl-k\">if</span> tracing_state:\n        tracing_state.pop_scope()</pre></div>", "body_text": "I think it might be good to wrap this in a try/finally, so that if errors occur we still properly clean up the tracing_state.\nMaybe something like\ntry:\n    yield\nfinally:\n    if tracing_state:\n        tracing_state.pop_scope()"}