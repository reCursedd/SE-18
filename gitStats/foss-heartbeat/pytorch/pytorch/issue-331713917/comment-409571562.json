{"url": "https://api.github.com/repos/pytorch/pytorch/issues/comments/409571562", "html_url": "https://github.com/pytorch/pytorch/issues/8392#issuecomment-409571562", "issue_url": "https://api.github.com/repos/pytorch/pytorch/issues/8392", "id": 409571562, "node_id": "MDEyOklzc3VlQ29tbWVudDQwOTU3MTU2Mg==", "user": {"login": "daniel-j-h", "id": 527241, "node_id": "MDQ6VXNlcjUyNzI0MQ==", "avatar_url": "https://avatars3.githubusercontent.com/u/527241?v=4", "gravatar_id": "", "url": "https://api.github.com/users/daniel-j-h", "html_url": "https://github.com/daniel-j-h", "followers_url": "https://api.github.com/users/daniel-j-h/followers", "following_url": "https://api.github.com/users/daniel-j-h/following{/other_user}", "gists_url": "https://api.github.com/users/daniel-j-h/gists{/gist_id}", "starred_url": "https://api.github.com/users/daniel-j-h/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/daniel-j-h/subscriptions", "organizations_url": "https://api.github.com/users/daniel-j-h/orgs", "repos_url": "https://api.github.com/users/daniel-j-h/repos", "events_url": "https://api.github.com/users/daniel-j-h/events{/privacy}", "received_events_url": "https://api.github.com/users/daniel-j-h/received_events", "type": "User", "site_admin": false}, "created_at": "2018-08-01T13:19:00Z", "updated_at": "2018-08-01T13:19:00Z", "author_association": "NONE", "body_html": "<p>I just talked to <a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=2399017\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/selimsef\">@selimsef</a> who ran into this, too, and he has an understanding of what is going on here.</p>\n<div class=\"highlight highlight-source-python\"><pre><span class=\"pl-c1\">self</span>.modlist <span class=\"pl-k\">=</span> torch.nn.ModuleList([SomeModule()] <span class=\"pl-k\">*</span> <span class=\"pl-c1\">self</span>.num_mods)</pre></div>\n<p>creates shallow object copies that link to the same object.</p>\n<p>The same will be a problem in models building e.g. on top of resnet as in</p>\n<div class=\"highlight highlight-source-python\"><pre><span class=\"pl-c1\">self</span>.enc0 <span class=\"pl-k\">=</span> nn.Sequential(<span class=\"pl-c1\">self</span>.resnet.conv1, <span class=\"pl-c1\">self</span>.resnet.bn1, <span class=\"pl-c1\">self</span>.resnet.relu, <span class=\"pl-c1\">self</span>.resnet.maxpool)\n<span class=\"pl-c1\">self</span>.enc1 <span class=\"pl-k\">=</span> <span class=\"pl-c1\">self</span>.resnet.layer1\n<span class=\"pl-c1\">self</span>.enc2 <span class=\"pl-k\">=</span> <span class=\"pl-c1\">self</span>.resnet.layer2\n<span class=\"pl-c1\">self</span>.enc3 <span class=\"pl-k\">=</span> <span class=\"pl-c1\">self</span>.resnet.layer3\n<span class=\"pl-c1\">self</span>.enc4 <span class=\"pl-k\">=</span> <span class=\"pl-c1\">self</span>.resnet.layer4</pre></div>\n<p>and then in the forward pass use these <code>self.enc*</code> variables. The workaround is to directly use the resnet variables in the forward pass and not to store references to them in the model class.</p>\n<p>Hope this will help folks in the future who are running into this issue.</p>", "body_text": "I just talked to @selimsef who ran into this, too, and he has an understanding of what is going on here.\nself.modlist = torch.nn.ModuleList([SomeModule()] * self.num_mods)\ncreates shallow object copies that link to the same object.\nThe same will be a problem in models building e.g. on top of resnet as in\nself.enc0 = nn.Sequential(self.resnet.conv1, self.resnet.bn1, self.resnet.relu, self.resnet.maxpool)\nself.enc1 = self.resnet.layer1\nself.enc2 = self.resnet.layer2\nself.enc3 = self.resnet.layer3\nself.enc4 = self.resnet.layer4\nand then in the forward pass use these self.enc* variables. The workaround is to directly use the resnet variables in the forward pass and not to store references to them in the model class.\nHope this will help folks in the future who are running into this issue.", "body": "I just talked to @selimsef who ran into this, too, and he has an understanding of what is going on here.\r\n\r\n```python\r\nself.modlist = torch.nn.ModuleList([SomeModule()] * self.num_mods)\r\n```\r\n\r\ncreates shallow object copies that link to the same object.\r\n\r\nThe same will be a problem in models building e.g. on top of resnet as in\r\n\r\n```python\r\nself.enc0 = nn.Sequential(self.resnet.conv1, self.resnet.bn1, self.resnet.relu, self.resnet.maxpool)\r\nself.enc1 = self.resnet.layer1\r\nself.enc2 = self.resnet.layer2\r\nself.enc3 = self.resnet.layer3\r\nself.enc4 = self.resnet.layer4\r\n```\r\n\r\nand then in the forward pass use these `self.enc*` variables. The workaround is to directly use the resnet variables in the forward pass and not to store references to them in the model class.\r\n\r\nHope this will help folks in the future who are running into this issue."}