{"url": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/156527417", "pull_request_review_id": 83019871, "id": 156527417, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE1NjUyNzQxNw==", "diff_hunk": "@@ -780,3 +781,72 @@ FusionCompiler & sharedFusionCompiler() {\n }\n \n }}\n+\n+# else\n+// dummy implementations for windows\n+\n+#include \"torch/csrc/jit/fusion_compiler.h\"\n+#include \"torch/csrc/jit/ir.h\"\n+#include \"torch/csrc/jit/code_template.h\"\n+#include \"torch/csrc/jit/resource_guard.h\"\n+#include \"torch/csrc/utils/disallow_copy.h\"\n+#include \"ATen/ATen.h\"\n+#ifdef WITH_CUDA\n+#include \"torch/csrc/cuda/cuda_check.h\"\n+#include <nvrtc.h>\n+#include <cuda.h>\n+#include <cuda_runtime.h>\n+#endif\n+#include <string>\n+#include <algorithm>\n+#include <unordered_map>\n+#include <vector>\n+#include <sstream>\n+#include <iostream>\n+\n+namespace torch { namespace jit {\n+\n+// Host-side view of TensorInfo (that visivle for the kernel is defined above).\n+// Note dims[0] - we need to dynamically allocate the dims.\n+struct TensorInfo {\n+  void * data;\n+  uint32_t sizes_strides[0];\n+\n+  uint32_t* sizes(size_t nDim) { return &sizes_strides[0]; }\n+  uint32_t* strides(size_t nDim) { return &sizes_strides[nDim]; }\n+};\n+\n+CompiledFusionFunction::CompiledFusionFunction(const std::string & name, AnnotatedGraph & agraph) {}\n+\n+void CompiledFusionFunction::launch_with_tensors(at::ArrayRef<at::Tensor> inputs, at::ArrayRef<at::Tensor> outputs) {}\n+\n+void CompiledFusionFunction::launch(at::ArrayRef<at::Tensor> inputs, std::vector<at::Tensor> & outputs) {}\n+\n+std::shared_ptr<CompiledFusionFunction> FusionCompiler::getOrCompile(AnnotatedGraph & agraph) {\n+  return nullptr;\n+}\n+\n+std::shared_ptr<CompiledFusionFunction> FusionCompiler::getOrCompile(Node* fusion_group) {\n+  return nullptr;\n+}\n+\n+\n+std::shared_ptr<CompiledFusionFunction> FusionCompiler::getOrCompile(Graph & graph,\n+                                                     bool is_cuda,\n+                                                     at::ArrayRef<at::Tensor> inputs,\n+                                                     at::ArrayRef<at::Tensor> outputs) {\n+  return nullptr;\n+}\n+\n+void FusionCompiler::debugLaunchGraph(Graph & graph, bool is_cuda, at::ArrayRef<at::Tensor> inputs, at::ArrayRef<at::Tensor> outputs) {}\n+\n+FusionCompiler::FusionCompiler() {}\n+\n+FusionCompiler & sharedFusionCompiler() {", "path": "torch/csrc/jit/fusion_compiler.cpp", "position": 60, "original_position": 70, "commit_id": "26b40f576dab9e70dfde71f0345c90a9d03f7d31", "original_commit_id": "24ad3d229b0d1bcca176904e3ecb1e2fa71cb32a", "user": {"login": "apaszke", "id": 4583066, "node_id": "MDQ6VXNlcjQ1ODMwNjY=", "avatar_url": "https://avatars3.githubusercontent.com/u/4583066?v=4", "gravatar_id": "", "url": "https://api.github.com/users/apaszke", "html_url": "https://github.com/apaszke", "followers_url": "https://api.github.com/users/apaszke/followers", "following_url": "https://api.github.com/users/apaszke/following{/other_user}", "gists_url": "https://api.github.com/users/apaszke/gists{/gist_id}", "starred_url": "https://api.github.com/users/apaszke/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/apaszke/subscriptions", "organizations_url": "https://api.github.com/users/apaszke/orgs", "repos_url": "https://api.github.com/users/apaszke/repos", "events_url": "https://api.github.com/users/apaszke/events{/privacy}", "received_events_url": "https://api.github.com/users/apaszke/received_events", "type": "User", "site_admin": false}, "body": "This is not supported, so this function should throw.", "created_at": "2017-12-12T23:35:18Z", "updated_at": "2018-11-23T15:37:17Z", "html_url": "https://github.com/pytorch/pytorch/pull/4065#discussion_r156527417", "pull_request_url": "https://api.github.com/repos/pytorch/pytorch/pulls/4065", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/156527417"}, "html": {"href": "https://github.com/pytorch/pytorch/pull/4065#discussion_r156527417"}, "pull_request": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/4065"}}, "body_html": "<p>This is not supported, so this function should throw.</p>", "body_text": "This is not supported, so this function should throw."}