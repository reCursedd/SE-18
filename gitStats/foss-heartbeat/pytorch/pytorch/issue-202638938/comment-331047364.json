{"url": "https://api.github.com/repos/pytorch/pytorch/issues/comments/331047364", "html_url": "https://github.com/pytorch/pytorch/issues/563#issuecomment-331047364", "issue_url": "https://api.github.com/repos/pytorch/pytorch/issues/563", "id": 331047364, "node_id": "MDEyOklzc3VlQ29tbWVudDMzMTA0NzM2NA==", "user": {"login": "soumith", "id": 1310570, "node_id": "MDQ6VXNlcjEzMTA1NzA=", "avatar_url": "https://avatars0.githubusercontent.com/u/1310570?v=4", "gravatar_id": "", "url": "https://api.github.com/users/soumith", "html_url": "https://github.com/soumith", "followers_url": "https://api.github.com/users/soumith/followers", "following_url": "https://api.github.com/users/soumith/following{/other_user}", "gists_url": "https://api.github.com/users/soumith/gists{/gist_id}", "starred_url": "https://api.github.com/users/soumith/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/soumith/subscriptions", "organizations_url": "https://api.github.com/users/soumith/orgs", "repos_url": "https://api.github.com/users/soumith/repos", "events_url": "https://api.github.com/users/soumith/events{/privacy}", "received_events_url": "https://api.github.com/users/soumith/received_events", "type": "User", "site_admin": false}, "created_at": "2017-09-21T04:23:12Z", "updated_at": "2017-09-21T04:25:49Z", "author_association": "MEMBER", "body_html": "<p>I thought this through, and we will be introducing a:</p>\n<div class=\"highlight highlight-source-python\"><pre>MyFavoriteLoss(<span class=\"pl-c1\">...</span>, <span class=\"pl-v\">size_average</span><span class=\"pl-k\">=</span><span class=\"pl-c1\">...</span>, <span class=\"pl-v\">sum</span><span class=\"pl-k\">=</span><span class=\"pl-c1\">False</span>)</pre></div>\n<p>The key being <code>sum=True</code> is the default summed loss (current behavior), and <code>sum=False</code> being unreduced / unsummed per-sample loss.</p>\n<p><a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=5652049\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/zou3519\">@zou3519</a> will be implementing this initially for a couple of losses (<code>NLLLoss</code> and <code>MSELoss</code>, and of course <code>CrossEntropyLoss because</code> it's <code>LogSoftMax</code> + <code>NLLLoss</code>), and it will be tracked in <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load issue title\" data-id=\"192143117\" data-permission-text=\"Issue title is private\" data-url=\"https://github.com/pytorch/pytorch/issues/264\" data-hovercard-type=\"issue\" data-hovercard-url=\"/pytorch/pytorch/issues/264/hovercard\" href=\"https://github.com/pytorch/pytorch/issues/264\">#264</a></p>\n<p>Why not bootstrap <code>sizeAverage</code> here? because some losses have sizeAverage be per-sample normalization (based on total number of elements in the sample). An obvious example is MSELoss.</p>", "body_text": "I thought this through, and we will be introducing a:\nMyFavoriteLoss(..., size_average=..., sum=False)\nThe key being sum=True is the default summed loss (current behavior), and sum=False being unreduced / unsummed per-sample loss.\n@zou3519 will be implementing this initially for a couple of losses (NLLLoss and MSELoss, and of course CrossEntropyLoss because it's LogSoftMax + NLLLoss), and it will be tracked in #264\nWhy not bootstrap sizeAverage here? because some losses have sizeAverage be per-sample normalization (based on total number of elements in the sample). An obvious example is MSELoss.", "body": "I thought this through, and we will be introducing a:\r\n\r\n```python\r\nMyFavoriteLoss(..., size_average=..., sum=False)\r\n```\r\n\r\nThe key being `sum=True` is the default summed loss (current behavior), and `sum=False` being unreduced / unsummed per-sample loss.\r\n\r\n@zou3519 will be implementing this initially for a couple of losses (`NLLLoss` and `MSELoss`, and of course `CrossEntropyLoss because` it's `LogSoftMax` + `NLLLoss`), and it will be tracked in https://github.com/pytorch/pytorch/issues/264\r\n\r\nWhy not bootstrap `sizeAverage` here? because some losses have sizeAverage be per-sample normalization (based on total number of elements in the sample). An obvious example is MSELoss."}