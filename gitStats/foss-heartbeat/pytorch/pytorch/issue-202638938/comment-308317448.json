{"url": "https://api.github.com/repos/pytorch/pytorch/issues/comments/308317448", "html_url": "https://github.com/pytorch/pytorch/issues/563#issuecomment-308317448", "issue_url": "https://api.github.com/repos/pytorch/pytorch/issues/563", "id": 308317448, "node_id": "MDEyOklzc3VlQ29tbWVudDMwODMxNzQ0OA==", "user": {"login": "kvrd18", "id": 10166968, "node_id": "MDQ6VXNlcjEwMTY2OTY4", "avatar_url": "https://avatars3.githubusercontent.com/u/10166968?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kvrd18", "html_url": "https://github.com/kvrd18", "followers_url": "https://api.github.com/users/kvrd18/followers", "following_url": "https://api.github.com/users/kvrd18/following{/other_user}", "gists_url": "https://api.github.com/users/kvrd18/gists{/gist_id}", "starred_url": "https://api.github.com/users/kvrd18/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kvrd18/subscriptions", "organizations_url": "https://api.github.com/users/kvrd18/orgs", "repos_url": "https://api.github.com/users/kvrd18/repos", "events_url": "https://api.github.com/users/kvrd18/events{/privacy}", "received_events_url": "https://api.github.com/users/kvrd18/received_events", "type": "User", "site_admin": false}, "created_at": "2017-06-14T04:36:47Z", "updated_at": "2017-06-14T04:36:47Z", "author_association": "NONE", "body_html": "<p>The ideal scenario would be to avoid summation and provide a tensor of losses like how tensorflow does. I think this would require some major rewrites in the way losses are brought back to the front.</p>", "body_text": "The ideal scenario would be to avoid summation and provide a tensor of losses like how tensorflow does. I think this would require some major rewrites in the way losses are brought back to the front.", "body": "The ideal scenario would be to avoid summation and provide a tensor of losses like how tensorflow does. I think this would require some major rewrites in the way losses are brought back to the front."}