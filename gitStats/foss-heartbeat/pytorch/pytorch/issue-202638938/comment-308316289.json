{"url": "https://api.github.com/repos/pytorch/pytorch/issues/comments/308316289", "html_url": "https://github.com/pytorch/pytorch/issues/563#issuecomment-308316289", "issue_url": "https://api.github.com/repos/pytorch/pytorch/issues/563", "id": 308316289, "node_id": "MDEyOklzc3VlQ29tbWVudDMwODMxNjI4OQ==", "user": {"login": "kvrd18", "id": 10166968, "node_id": "MDQ6VXNlcjEwMTY2OTY4", "avatar_url": "https://avatars3.githubusercontent.com/u/10166968?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kvrd18", "html_url": "https://github.com/kvrd18", "followers_url": "https://api.github.com/users/kvrd18/followers", "following_url": "https://api.github.com/users/kvrd18/following{/other_user}", "gists_url": "https://api.github.com/users/kvrd18/gists{/gist_id}", "starred_url": "https://api.github.com/users/kvrd18/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kvrd18/subscriptions", "organizations_url": "https://api.github.com/users/kvrd18/orgs", "repos_url": "https://api.github.com/users/kvrd18/repos", "events_url": "https://api.github.com/users/kvrd18/events{/privacy}", "received_events_url": "https://api.github.com/users/kvrd18/received_events", "type": "User", "site_admin": false}, "created_at": "2017-06-14T04:26:35Z", "updated_at": "2017-06-14T04:26:35Z", "author_association": "NONE", "body_html": "<p>I've written C and CUDA functions for a generic <code>WeightedClassNLLCriterion</code>, which is an extension of <code>ClassNLLCriterion</code>. <a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=14026308\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/vinayakvivek\">@vinayakvivek</a> had to write new classes for calling this function from <code>auto.py</code> since it had to take an extra argument, <code>weight_maps</code>, when calling <code>forward</code> and <code>backward</code>. I'll issue a PR.</p>\n<p>Regarding BCE, I think I'll have to write a new <code>InstanceWeightedLoss</code> class and get every criterion to inherit this class to pass 3 arguments for <code>forward</code> and <code>backward</code>. I believe this is going to be a needed feature if instance-wise weighted loss is going to be crucial.</p>\n<p><a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=9110200\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/fmassa\">@fmassa</a> do you have any pointers for me regarding how to add this new common functionality for criteria?</p>", "body_text": "I've written C and CUDA functions for a generic WeightedClassNLLCriterion, which is an extension of ClassNLLCriterion. @vinayakvivek had to write new classes for calling this function from auto.py since it had to take an extra argument, weight_maps, when calling forward and backward. I'll issue a PR.\nRegarding BCE, I think I'll have to write a new InstanceWeightedLoss class and get every criterion to inherit this class to pass 3 arguments for forward and backward. I believe this is going to be a needed feature if instance-wise weighted loss is going to be crucial.\n@fmassa do you have any pointers for me regarding how to add this new common functionality for criteria?", "body": "I've written C and CUDA functions for a generic `WeightedClassNLLCriterion`, which is an extension of `ClassNLLCriterion`. @vinayakvivek had to write new classes for calling this function from `auto.py` since it had to take an extra argument, `weight_maps`, when calling `forward` and `backward`. I'll issue a PR.\r\n\r\nRegarding BCE, I think I'll have to write a new `InstanceWeightedLoss` class and get every criterion to inherit this class to pass 3 arguments for `forward` and `backward`. I believe this is going to be a needed feature if instance-wise weighted loss is going to be crucial.\r\n\r\n@fmassa do you have any pointers for me regarding how to add this new common functionality for criteria?"}