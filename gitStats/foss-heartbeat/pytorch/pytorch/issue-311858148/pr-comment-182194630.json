{"url": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/182194630", "pull_request_review_id": 112953448, "id": 182194630, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MjE5NDYzMA==", "diff_hunk": "@@ -1655,25 +1656,40 @@ def pixel_shuffle(input, upscale_factor):\n         upscale_factor (int): factor to increase spatial resolution by\n \n     Examples::\n+        # 1D example\n+        >>> input = torch.Tensor(1, 4, 8)\n+        >>> output = F.pixel_shuffle(input, 2)\n+        >>> print(output.size())\n+        torch.Size([1, 2, 16])\n+\n+        # 2D example\n+        >>> input = torch.Tensor(1, 9, 8, 8)\n+        >>> output = F.pixel_shuffle(input, 3)\n+        >>> print(output.size())\n+        torch.Size([1, 1, 24, 24])\n \n-        >>> ps = nn.PixelShuffle(3)\n-        >>> input = torch.Tensor(1, 9, 4, 4)\n-        >>> output = ps(input)\n+        # 3D example\n+        >>> input = torch.Tensor(1, 8, 16, 16, 16)\n+        >>> output = F.pixel_shuffle(input, 2)\n         >>> print(output.size())\n-        torch.Size([1, 1, 12, 12])\n+        torch.Size([1, 1, 32, 32, 32])\n     \"\"\"\n-    batch_size, channels, in_height, in_width = input.size()\n-    channels //= upscale_factor ** 2\n+    input_size = list(input.size())\n+    dimensionality = len(input_size) - 2\n \n-    out_height = in_height * upscale_factor\n-    out_width = in_width * upscale_factor\n+    input_size[1] //= (upscale_factor ** dimensionality)\n+    output_size = [dim * upscale_factor for dim in input_size[2:]]\n \n     input_view = input.contiguous().view(\n-        batch_size, channels, upscale_factor, upscale_factor,\n-        in_height, in_width)\n+        input_size[0], input_size[1],\n+        *(([upscale_factor] * dimensionality) + input_size[2:])\n+    )\n+\n+    indicies = list(range(2, 2 + 2 * dimensionality))", "path": "torch/nn/functional.py", "position": 55, "original_position": 55, "commit_id": "527874ceea10b335ca3db2e986c440238fab8d9a", "original_commit_id": "527874ceea10b335ca3db2e986c440238fab8d9a", "user": {"login": "ezyang", "id": 13564, "node_id": "MDQ6VXNlcjEzNTY0", "avatar_url": "https://avatars0.githubusercontent.com/u/13564?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ezyang", "html_url": "https://github.com/ezyang", "followers_url": "https://api.github.com/users/ezyang/followers", "following_url": "https://api.github.com/users/ezyang/following{/other_user}", "gists_url": "https://api.github.com/users/ezyang/gists{/gist_id}", "starred_url": "https://api.github.com/users/ezyang/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ezyang/subscriptions", "organizations_url": "https://api.github.com/users/ezyang/orgs", "repos_url": "https://api.github.com/users/ezyang/repos", "events_url": "https://api.github.com/users/ezyang/events{/privacy}", "received_events_url": "https://api.github.com/users/ezyang/received_events", "type": "User", "site_admin": false}, "body": "indices", "created_at": "2018-04-17T19:12:02Z", "updated_at": "2018-11-23T15:42:38Z", "html_url": "https://github.com/pytorch/pytorch/pull/6340#discussion_r182194630", "pull_request_url": "https://api.github.com/repos/pytorch/pytorch/pulls/6340", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/182194630"}, "html": {"href": "https://github.com/pytorch/pytorch/pull/6340#discussion_r182194630"}, "pull_request": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/6340"}}, "body_html": "<p>indices</p>", "body_text": "indices"}