{"url": "https://api.github.com/repos/pytorch/pytorch/issues/7737", "repository_url": "https://api.github.com/repos/pytorch/pytorch", "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/7737/labels{/name}", "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/7737/comments", "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/7737/events", "html_url": "https://github.com/pytorch/pytorch/pull/7737", "id": 325015541, "node_id": "MDExOlB1bGxSZXF1ZXN0MTg5NDU0NTk4", "number": 7737, "title": "Call grad_mode.py context managers as decorators", "user": {"login": "jvmancuso", "id": 7891333, "node_id": "MDQ6VXNlcjc4OTEzMzM=", "avatar_url": "https://avatars2.githubusercontent.com/u/7891333?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jvmancuso", "html_url": "https://github.com/jvmancuso", "followers_url": "https://api.github.com/users/jvmancuso/followers", "following_url": "https://api.github.com/users/jvmancuso/following{/other_user}", "gists_url": "https://api.github.com/users/jvmancuso/gists{/gist_id}", "starred_url": "https://api.github.com/users/jvmancuso/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jvmancuso/subscriptions", "organizations_url": "https://api.github.com/users/jvmancuso/orgs", "repos_url": "https://api.github.com/users/jvmancuso/repos", "events_url": "https://api.github.com/users/jvmancuso/events{/privacy}", "received_events_url": "https://api.github.com/users/jvmancuso/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 8, "created_at": "2018-05-21T18:33:31Z", "updated_at": "2018-11-23T15:44:31Z", "closed_at": "2018-05-23T21:39:14Z", "author_association": "CONTRIBUTOR", "pull_request": {"url": "https://api.github.com/repos/pytorch/pytorch/pulls/7737", "html_url": "https://github.com/pytorch/pytorch/pull/7737", "diff_url": "https://github.com/pytorch/pytorch/pull/7737.diff", "patch_url": "https://github.com/pytorch/pytorch/pull/7737.patch"}, "body_html": "<p>Extends the context manager classes <code>torch.no_grad</code>, <code>torch.enable_grad</code>, and <code>torch.set_grad_mode</code> to function as decorators, so that users can wrap functions that will never require a call to <code>.backward()</code> downstream.  I've modified the docs to reflect this change, and I've also added tests for the new functionality in each mode's respective test in <code>test_autograd.py</code>.</p>\n<p>I also didn't find a unit test specifically for <code>torch.enable_grad</code>.  Assuming that's intended, unless my ctrl+f missed it.</p>", "body_text": "Extends the context manager classes torch.no_grad, torch.enable_grad, and torch.set_grad_mode to function as decorators, so that users can wrap functions that will never require a call to .backward() downstream.  I've modified the docs to reflect this change, and I've also added tests for the new functionality in each mode's respective test in test_autograd.py.\nI also didn't find a unit test specifically for torch.enable_grad.  Assuming that's intended, unless my ctrl+f missed it.", "body": "Extends the context manager classes `torch.no_grad`, `torch.enable_grad`, and `torch.set_grad_mode` to function as decorators, so that users can wrap functions that will never require a call to `.backward()` downstream.  I've modified the docs to reflect this change, and I've also added tests for the new functionality in each mode's respective test in `test_autograd.py`.\r\n\r\nI also didn't find a unit test specifically for `torch.enable_grad`.  Assuming that's intended, unless my ctrl+f missed it."}