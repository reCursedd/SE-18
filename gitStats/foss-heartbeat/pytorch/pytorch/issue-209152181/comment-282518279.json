{"url": "https://api.github.com/repos/pytorch/pytorch/issues/comments/282518279", "html_url": "https://github.com/pytorch/pytorch/pull/810#issuecomment-282518279", "issue_url": "https://api.github.com/repos/pytorch/pytorch/issues/810", "id": 282518279, "node_id": "MDEyOklzc3VlQ29tbWVudDI4MjUxODI3OQ==", "user": {"login": "apaszke", "id": 4583066, "node_id": "MDQ6VXNlcjQ1ODMwNjY=", "avatar_url": "https://avatars3.githubusercontent.com/u/4583066?v=4", "gravatar_id": "", "url": "https://api.github.com/users/apaszke", "html_url": "https://github.com/apaszke", "followers_url": "https://api.github.com/users/apaszke/followers", "following_url": "https://api.github.com/users/apaszke/following{/other_user}", "gists_url": "https://api.github.com/users/apaszke/gists{/gist_id}", "starred_url": "https://api.github.com/users/apaszke/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/apaszke/subscriptions", "organizations_url": "https://api.github.com/users/apaszke/orgs", "repos_url": "https://api.github.com/users/apaszke/repos", "events_url": "https://api.github.com/users/apaszke/events{/privacy}", "received_events_url": "https://api.github.com/users/apaszke/received_events", "type": "User", "site_admin": false}, "created_at": "2017-02-25T22:48:09Z", "updated_at": "2017-02-25T22:48:09Z", "author_association": "MEMBER", "body_html": "<p>Ok, so I thought this through and I think the best way would be to implement <code>__setstate__</code> such that it calls to super and then patches the param groups like that:</p>\n<div class=\"highlight highlight-source-python\"><pre><span class=\"pl-k\">def</span> <span class=\"pl-c1\">__setstate__</span>(<span class=\"pl-smi\"><span class=\"pl-smi\">self</span></span>, <span class=\"pl-smi\">state</span>):\n    <span class=\"pl-c1\">super</span>(RMSprop, <span class=\"pl-c1\">self</span>).<span class=\"pl-c1\">__setstate__</span>(state)\n    <span class=\"pl-k\">for</span> group <span class=\"pl-k\">in</span> <span class=\"pl-c1\">self</span>.parameter_groups:\n        group.set_default(<span class=\"pl-s\"><span class=\"pl-pds\">'</span>momentum<span class=\"pl-pds\">'</span></span>, <span class=\"pl-c1\">0</span>)\n        group.set_default(<span class=\"pl-s\"><span class=\"pl-pds\">'</span>centered<span class=\"pl-pds\">'</span></span>, <span class=\"pl-c1\">False</span>)</pre></div>", "body_text": "Ok, so I thought this through and I think the best way would be to implement __setstate__ such that it calls to super and then patches the param groups like that:\ndef __setstate__(self, state):\n    super(RMSprop, self).__setstate__(state)\n    for group in self.parameter_groups:\n        group.set_default('momentum', 0)\n        group.set_default('centered', False)", "body": "Ok, so I thought this through and I think the best way would be to implement `__setstate__` such that it calls to super and then patches the param groups like that:\r\n```python\r\ndef __setstate__(self, state):\r\n    super(RMSprop, self).__setstate__(state)\r\n    for group in self.parameter_groups:\r\n        group.set_default('momentum', 0)\r\n        group.set_default('centered', False)\r\n```"}