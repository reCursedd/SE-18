{"url": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/103531262", "pull_request_review_id": 24321146, "id": 103531262, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEwMzUzMTI2Mg==", "diff_hunk": "@@ -49,7 +67,20 @@ def step(self, closure=None):\n                     grad = grad.add(group['weight_decay'], p.data)\n \n                 square_avg.mul_(alpha).addcmul_(1 - alpha, grad, grad)\n-                avg = square_avg.sqrt().add_(group['eps'])\n-                p.data.addcdiv_(-group['lr'], grad, avg)\n+\n+                avg = None\n+                if group['centered']:\n+                    grad_avg = state['grad_avg']\n+                    grad_avg.mul_(alpha).add_(1 - alpha, grad)\n+                    avg = square_avg.addcmul(-1, grad_avg, grad_avg).sqrt().add_(group['eps'])\n+                else:\n+                    avg = square_avg.sqrt().add_(group['eps'])\n+\n+                if group['momentum'] > 0:\n+                    mom = state['momentum']\n+                    mom.mul_(group['momentum']).addcdiv_(group['lr'], grad, avg)", "path": "torch/optim/rmsprop.py", "position": null, "original_position": 66, "commit_id": "42cf15229ebbbb2bce7104c6c280b4d83c852a4b", "original_commit_id": "88305e8ff41f3d5af665bfe35c8baf7bddbffbec", "user": {"login": "ajbrock", "id": 7751273, "node_id": "MDQ6VXNlcjc3NTEyNzM=", "avatar_url": "https://avatars1.githubusercontent.com/u/7751273?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ajbrock", "html_url": "https://github.com/ajbrock", "followers_url": "https://api.github.com/users/ajbrock/followers", "following_url": "https://api.github.com/users/ajbrock/following{/other_user}", "gists_url": "https://api.github.com/users/ajbrock/gists{/gist_id}", "starred_url": "https://api.github.com/users/ajbrock/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ajbrock/subscriptions", "organizations_url": "https://api.github.com/users/ajbrock/orgs", "repos_url": "https://api.github.com/users/ajbrock/repos", "events_url": "https://api.github.com/users/ajbrock/events{/privacy}", "received_events_url": "https://api.github.com/users/ajbrock/received_events", "type": "User", "site_admin": false}, "body": "Applying the LR to the momentum as is done here is equivalent to moving the multiply outside those terms (and holds for Nesterov momentum as well), though I'm not sure if floating-point precision becomes an issue for small learning rates.", "created_at": "2017-02-28T19:19:22Z", "updated_at": "2018-11-23T15:32:36Z", "html_url": "https://github.com/pytorch/pytorch/pull/810#discussion_r103531262", "pull_request_url": "https://api.github.com/repos/pytorch/pytorch/pulls/810", "author_association": "NONE", "_links": {"self": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/103531262"}, "html": {"href": "https://github.com/pytorch/pytorch/pull/810#discussion_r103531262"}, "pull_request": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/810"}}, "body_html": "<p>Applying the LR to the momentum as is done here is equivalent to moving the multiply outside those terms (and holds for Nesterov momentum as well), though I'm not sure if floating-point precision becomes an issue for small learning rates.</p>", "body_text": "Applying the LR to the momentum as is done here is equivalent to moving the multiply outside those terms (and holds for Nesterov momentum as well), though I'm not sure if floating-point precision becomes an issue for small learning rates.", "in_reply_to_id": 103171697}