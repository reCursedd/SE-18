{"url": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/210376926", "pull_request_review_id": 146579402, "id": 210376926, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIxMDM3NjkyNg==", "diff_hunk": "@@ -434,6 +434,38 @@ def _test_batch_sampler(self, **kwargs):\n                 self.assertEqual(len(input), 3)\n                 self.assertEqual(input, self.data[offset:offset + 3])\n \n+    def test_RandomSampler(self):\n+\n+        def sample_stat(sampler, num_samples):\n+            bin = {}\n+            minval, maxval = num_samples, 0\n+            for s in sampler:\n+                bin[s] = bin.get(s, 0) + 1\n+                minval = min(minval, s)\n+                maxval = max(maxval, s)\n+\n+            count_repeated = 0\n+            for val in bin.values():\n+                if val > 1:\n+                    count_repeated += 1\n+            return (count_repeated, minval, maxval)\n+\n+        from torch.utils.data import RandomSampler\n+        n = len(self.dataset)\n+        sampler_with_replacement = RandomSampler(self.dataset, n, True)\n+        count_repeated, minval, maxval = sample_stat(sampler_with_replacement, n)\n+        self.assertTrue(count_repeated > 0)\n+        self.assertTrue(minval >= 0)\n+        self.assertTrue(maxval < n)\n+\n+        sampler_without_replacement = RandomSampler(self.dataset)\n+        count_repeated, minval, maxval = sample_stat(sampler_without_replacement, n)", "path": "test/test_dataloader.py", "position": null, "original_position": 29, "commit_id": "d3f4e91e4e368be89c3e4d62133f220e6db51902", "original_commit_id": "1f873a56886c72856db01a50076be3e6ed34ccc9", "user": {"login": "apaszke", "id": 4583066, "node_id": "MDQ6VXNlcjQ1ODMwNjY=", "avatar_url": "https://avatars3.githubusercontent.com/u/4583066?v=4", "gravatar_id": "", "url": "https://api.github.com/users/apaszke", "html_url": "https://github.com/apaszke", "followers_url": "https://api.github.com/users/apaszke/followers", "following_url": "https://api.github.com/users/apaszke/following{/other_user}", "gists_url": "https://api.github.com/users/apaszke/gists{/gist_id}", "starred_url": "https://api.github.com/users/apaszke/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/apaszke/subscriptions", "organizations_url": "https://api.github.com/users/apaszke/orgs", "repos_url": "https://api.github.com/users/apaszke/repos", "events_url": "https://api.github.com/users/apaszke/events{/privacy}", "received_events_url": "https://api.github.com/users/apaszke/received_events", "type": "User", "site_admin": false}, "body": "You're never really testing the `num_samples` argument, since it's always set to `len(self.dataset)`", "created_at": "2018-08-15T19:12:46Z", "updated_at": "2018-11-23T15:49:26Z", "html_url": "https://github.com/pytorch/pytorch/pull/9911#discussion_r210376926", "pull_request_url": "https://api.github.com/repos/pytorch/pytorch/pulls/9911", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/210376926"}, "html": {"href": "https://github.com/pytorch/pytorch/pull/9911#discussion_r210376926"}, "pull_request": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/9911"}}, "body_html": "<p>You're never really testing the <code>num_samples</code> argument, since it's always set to <code>len(self.dataset)</code></p>", "body_text": "You're never really testing the num_samples argument, since it's always set to len(self.dataset)"}