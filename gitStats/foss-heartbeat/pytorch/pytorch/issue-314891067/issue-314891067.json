{"url": "https://api.github.com/repos/pytorch/pytorch/issues/6648", "repository_url": "https://api.github.com/repos/pytorch/pytorch", "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/6648/labels{/name}", "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/6648/comments", "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/6648/events", "html_url": "https://github.com/pytorch/pytorch/pull/6648", "id": 314891067, "node_id": "MDExOlB1bGxSZXF1ZXN0MTgyMDQxNTUx", "number": 6648, "title": "Support gpu triangle solve", "user": {"login": "fehiepsi", "id": 4736342, "node_id": "MDQ6VXNlcjQ3MzYzNDI=", "avatar_url": "https://avatars1.githubusercontent.com/u/4736342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fehiepsi", "html_url": "https://github.com/fehiepsi", "followers_url": "https://api.github.com/users/fehiepsi/followers", "following_url": "https://api.github.com/users/fehiepsi/following{/other_user}", "gists_url": "https://api.github.com/users/fehiepsi/gists{/gist_id}", "starred_url": "https://api.github.com/users/fehiepsi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fehiepsi/subscriptions", "organizations_url": "https://api.github.com/users/fehiepsi/orgs", "repos_url": "https://api.github.com/users/fehiepsi/repos", "events_url": "https://api.github.com/users/fehiepsi/events{/privacy}", "received_events_url": "https://api.github.com/users/fehiepsi/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2018-04-17T03:22:01Z", "updated_at": "2018-04-17T12:33:51Z", "closed_at": "2018-04-17T12:33:40Z", "author_association": "CONTRIBUTOR", "pull_request": {"url": "https://api.github.com/repos/pytorch/pytorch/pulls/6648", "html_url": "https://github.com/pytorch/pytorch/pull/6648", "diff_url": "https://github.com/pytorch/pytorch/pull/6648.diff", "patch_url": "https://github.com/pytorch/pytorch/pull/6648.patch"}, "body_html": "<p>While implementing Gaussian Process module in Pyro, I have to use triangular solver a lot. Currently, <code>trtrs</code> is only available on cpu (issue <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load issue title\" data-id=\"264661330\" data-permission-text=\"Issue title is private\" data-url=\"https://github.com/pytorch/pytorch/issues/3073\" data-hovercard-type=\"issue\" data-hovercard-url=\"/pytorch/pytorch/issues/3073/hovercard\" href=\"https://github.com/pytorch/pytorch/issues/3073\">#3073</a>) and for triangular solver on gpu, we have to use <code>torch.inverse()</code>. So I made a step to implement it.</p>\n<p>I don't have much knowledge to write c/cuda code so there might be some mistakes which I didn't notice. It is helpful to me to diagnostic errors if someone can point out where is cuda test for pytorch functions (especially for <code>gesv</code>). This has just been tested for some examples by installing pytorch and comparing results of cpu and gpu versions.</p>\n<p>Here is some information which I observed during the implementation:</p>\n<ul>\n<li>There is no <code>trtrs</code> function in MAGMA, so I have to use <a href=\"http://icl.cs.utk.edu/projectsfiles/magma/doxygen/group__magma__trsm.html\" rel=\"nofollow\">trsm</a> instead. Indeed, LAPACK <code>trtrs</code> is just a wrapper of BLAS <code>trsm</code> with additional checks for singularities.</li>\n<li>In the docs of <a href=\"http://icl.cs.utk.edu/projectsfiles/magma/doxygen/group__magma__trsm.html#ga36b2b66d52f384db19cf256cc5e8a4c2\" rel=\"nofollow\">magma_dtrsm</a>, there is an argument <code>queue</code> which belongs to <code>magma_queue_t</code> type. When I created a queue and installed, I kept getting the error \"too many arguments\" at <code>maga_dtrsm</code> calls. When removed it, the installation run well. So I guess there are some changes with different versions of MAGMA.</li>\n</ul>\n<p>cc <a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=5674597\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/SsnL\">@SsnL</a> <a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=648532\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/fritzo\">@fritzo</a></p>", "body_text": "While implementing Gaussian Process module in Pyro, I have to use triangular solver a lot. Currently, trtrs is only available on cpu (issue #3073) and for triangular solver on gpu, we have to use torch.inverse(). So I made a step to implement it.\nI don't have much knowledge to write c/cuda code so there might be some mistakes which I didn't notice. It is helpful to me to diagnostic errors if someone can point out where is cuda test for pytorch functions (especially for gesv). This has just been tested for some examples by installing pytorch and comparing results of cpu and gpu versions.\nHere is some information which I observed during the implementation:\n\nThere is no trtrs function in MAGMA, so I have to use trsm instead. Indeed, LAPACK trtrs is just a wrapper of BLAS trsm with additional checks for singularities.\nIn the docs of magma_dtrsm, there is an argument queue which belongs to magma_queue_t type. When I created a queue and installed, I kept getting the error \"too many arguments\" at maga_dtrsm calls. When removed it, the installation run well. So I guess there are some changes with different versions of MAGMA.\n\ncc @SsnL @fritzo", "body": "While implementing Gaussian Process module in Pyro, I have to use triangular solver a lot. Currently, `trtrs` is only available on cpu (issue #3073) and for triangular solver on gpu, we have to use `torch.inverse()`. So I made a step to implement it.\r\n\r\nI don't have much knowledge to write c/cuda code so there might be some mistakes which I didn't notice. It is helpful to me to diagnostic errors if someone can point out where is cuda test for pytorch functions (especially for `gesv`). This has just been tested for some examples by installing pytorch and comparing results of cpu and gpu versions.\r\n\r\nHere is some information which I observed during the implementation:\r\n+ There is no `trtrs` function in MAGMA, so I have to use [trsm](http://icl.cs.utk.edu/projectsfiles/magma/doxygen/group__magma__trsm.html) instead. Indeed, LAPACK `trtrs` is just a wrapper of BLAS `trsm` with additional checks for singularities.\r\n+ In the docs of [magma_dtrsm](http://icl.cs.utk.edu/projectsfiles/magma/doxygen/group__magma__trsm.html#ga36b2b66d52f384db19cf256cc5e8a4c2), there is an argument `queue` which belongs to `magma_queue_t` type. When I created a queue and installed, I kept getting the error \"too many arguments\" at `maga_dtrsm` calls. When removed it, the installation run well. So I guess there are some changes with different versions of MAGMA.\r\n\r\ncc @SsnL @fritzo \r\n\r\n\r\n\r\n"}