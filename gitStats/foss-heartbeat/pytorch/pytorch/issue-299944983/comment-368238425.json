{"url": "https://api.github.com/repos/pytorch/pytorch/issues/comments/368238425", "html_url": "https://github.com/pytorch/pytorch/issues/5398#issuecomment-368238425", "issue_url": "https://api.github.com/repos/pytorch/pytorch/issues/5398", "id": 368238425, "node_id": "MDEyOklzc3VlQ29tbWVudDM2ODIzODQyNQ==", "user": {"login": "abhaikollara", "id": 21106717, "node_id": "MDQ6VXNlcjIxMTA2NzE3", "avatar_url": "https://avatars1.githubusercontent.com/u/21106717?v=4", "gravatar_id": "", "url": "https://api.github.com/users/abhaikollara", "html_url": "https://github.com/abhaikollara", "followers_url": "https://api.github.com/users/abhaikollara/followers", "following_url": "https://api.github.com/users/abhaikollara/following{/other_user}", "gists_url": "https://api.github.com/users/abhaikollara/gists{/gist_id}", "starred_url": "https://api.github.com/users/abhaikollara/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/abhaikollara/subscriptions", "organizations_url": "https://api.github.com/users/abhaikollara/orgs", "repos_url": "https://api.github.com/users/abhaikollara/repos", "events_url": "https://api.github.com/users/abhaikollara/events{/privacy}", "received_events_url": "https://api.github.com/users/abhaikollara/received_events", "type": "User", "site_admin": false}, "created_at": "2018-02-24T16:04:59Z", "updated_at": "2018-02-24T16:15:04Z", "author_association": "NONE", "body_html": "<p><a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=1437573\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/sampathweb\">@sampathweb</a> Yeah, the issue is that the default collate function gets individual scalar values as its argument as seen <a href=\"https://github.com/pytorch/pytorch/blob/master/torch/utils/data/dataloader.py#L55\">here</a>. If that line is replaced by <code>samples = collate_fn(dataset[batch_indices])</code> it should work fine (atleast for tensor data)</p>\n<p>And as far as the wrapping it in cuda during training loop, I'm not sure how efficient that is compared to a single move of the entire data to GPU</p>", "body_text": "@sampathweb Yeah, the issue is that the default collate function gets individual scalar values as its argument as seen here. If that line is replaced by samples = collate_fn(dataset[batch_indices]) it should work fine (atleast for tensor data)\nAnd as far as the wrapping it in cuda during training loop, I'm not sure how efficient that is compared to a single move of the entire data to GPU", "body": "@sampathweb Yeah, the issue is that the default collate function gets individual scalar values as its argument as seen [here](https://github.com/pytorch/pytorch/blob/master/torch/utils/data/dataloader.py#L55). If that line is replaced by `samples = collate_fn(dataset[batch_indices])` it should work fine (atleast for tensor data)\r\n\r\nAnd as far as the wrapping it in cuda during training loop, I'm not sure how efficient that is compared to a single move of the entire data to GPU"}