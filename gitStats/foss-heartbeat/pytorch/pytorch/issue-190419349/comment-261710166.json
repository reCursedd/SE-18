{"url": "https://api.github.com/repos/pytorch/pytorch/issues/comments/261710166", "html_url": "https://github.com/pytorch/pytorch/issues/238#issuecomment-261710166", "issue_url": "https://api.github.com/repos/pytorch/pytorch/issues/238", "id": 261710166, "node_id": "MDEyOklzc3VlQ29tbWVudDI2MTcxMDE2Ng==", "user": {"login": "apaszke", "id": 4583066, "node_id": "MDQ6VXNlcjQ1ODMwNjY=", "avatar_url": "https://avatars3.githubusercontent.com/u/4583066?v=4", "gravatar_id": "", "url": "https://api.github.com/users/apaszke", "html_url": "https://github.com/apaszke", "followers_url": "https://api.github.com/users/apaszke/followers", "following_url": "https://api.github.com/users/apaszke/following{/other_user}", "gists_url": "https://api.github.com/users/apaszke/gists{/gist_id}", "starred_url": "https://api.github.com/users/apaszke/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/apaszke/subscriptions", "organizations_url": "https://api.github.com/users/apaszke/orgs", "repos_url": "https://api.github.com/users/apaszke/repos", "events_url": "https://api.github.com/users/apaszke/events{/privacy}", "received_events_url": "https://api.github.com/users/apaszke/received_events", "type": "User", "site_admin": false}, "created_at": "2016-11-19T12:05:55Z", "updated_at": "2016-11-19T12:05:55Z", "author_association": "MEMBER", "body_html": "<p>I've checked the CrossEntropyLoss and it indeed seems to be leaking very slowly on my mac. However, on closer look these are just reference cycles created by the <code>LogSoftmax</code> (that will be solved as part of <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load issue title\" data-id=\"190410773\" data-permission-text=\"Issue title is private\" data-url=\"https://github.com/pytorch/pytorch/issues/235\" data-hovercard-type=\"issue\" data-hovercard-url=\"/pytorch/pytorch/issues/235/hovercard\" href=\"https://github.com/pytorch/pytorch/issues/235\">#235</a>). Adding <code>gc.collect()</code> to the loop makes the resident size constant.</p>\n<p>The problem must lie somewhere else...</p>", "body_text": "I've checked the CrossEntropyLoss and it indeed seems to be leaking very slowly on my mac. However, on closer look these are just reference cycles created by the LogSoftmax (that will be solved as part of #235). Adding gc.collect() to the loop makes the resident size constant.\nThe problem must lie somewhere else...", "body": "I've checked the CrossEntropyLoss and it indeed seems to be leaking very slowly on my mac. However, on closer look these are just reference cycles created by the `LogSoftmax` (that will be solved as part of #235). Adding `gc.collect()` to the loop makes the resident size constant.\n\nThe problem must lie somewhere else...\n"}