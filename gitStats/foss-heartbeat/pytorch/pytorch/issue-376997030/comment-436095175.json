{"url": "https://api.github.com/repos/pytorch/pytorch/issues/comments/436095175", "html_url": "https://github.com/pytorch/pytorch/pull/13529#issuecomment-436095175", "issue_url": "https://api.github.com/repos/pytorch/pytorch/issues/13529", "id": 436095175, "node_id": "MDEyOklzc3VlQ29tbWVudDQzNjA5NTE3NQ==", "user": {"login": "smessmer", "id": 2373925, "node_id": "MDQ6VXNlcjIzNzM5MjU=", "avatar_url": "https://avatars3.githubusercontent.com/u/2373925?v=4", "gravatar_id": "", "url": "https://api.github.com/users/smessmer", "html_url": "https://github.com/smessmer", "followers_url": "https://api.github.com/users/smessmer/followers", "following_url": "https://api.github.com/users/smessmer/following{/other_user}", "gists_url": "https://api.github.com/users/smessmer/gists{/gist_id}", "starred_url": "https://api.github.com/users/smessmer/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/smessmer/subscriptions", "organizations_url": "https://api.github.com/users/smessmer/orgs", "repos_url": "https://api.github.com/users/smessmer/repos", "events_url": "https://api.github.com/users/smessmer/events{/privacy}", "received_events_url": "https://api.github.com/users/smessmer/received_events", "type": "User", "site_admin": false}, "created_at": "2018-11-06T01:11:41Z", "updated_at": "2018-11-06T01:11:41Z", "author_association": "CONTRIBUTOR", "body_html": "<p>Even with Half.h now in c10, I feel like the dependency goes into the wrong direction and we should fix that.</p>\n<p>The typeid-&gt;half.h dependency is only there because we preallocate type ids for optimization, it is not a semantic dependency. The \"correct\" dependency (i.e. without preallocated type ids) would be the other way round, for typeid.h to know nothing about half.h and for half.cpp to use CAFFE_KNOWN_TYPE, i.e. dependency goes from half.h to typeid.h.</p>\n<p>In this particular example, this also causes issues even with Half.h now being in c10, because Half.h should be in c10/core, i.e. is framework specific, while typeid.h is general and not framework specific, so should be in c10/util. Dependencies should go from core to util, not the other way round.</p>", "body_text": "Even with Half.h now in c10, I feel like the dependency goes into the wrong direction and we should fix that.\nThe typeid->half.h dependency is only there because we preallocate type ids for optimization, it is not a semantic dependency. The \"correct\" dependency (i.e. without preallocated type ids) would be the other way round, for typeid.h to know nothing about half.h and for half.cpp to use CAFFE_KNOWN_TYPE, i.e. dependency goes from half.h to typeid.h.\nIn this particular example, this also causes issues even with Half.h now being in c10, because Half.h should be in c10/core, i.e. is framework specific, while typeid.h is general and not framework specific, so should be in c10/util. Dependencies should go from core to util, not the other way round.", "body": "Even with Half.h now in c10, I feel like the dependency goes into the wrong direction and we should fix that.\r\n\r\nThe typeid->half.h dependency is only there because we preallocate type ids for optimization, it is not a semantic dependency. The \"correct\" dependency (i.e. without preallocated type ids) would be the other way round, for typeid.h to know nothing about half.h and for half.cpp to use CAFFE_KNOWN_TYPE, i.e. dependency goes from half.h to typeid.h.\r\n\r\nIn this particular example, this also causes issues even with Half.h now being in c10, because Half.h should be in c10/core, i.e. is framework specific, while typeid.h is general and not framework specific, so should be in c10/util. Dependencies should go from core to util, not the other way round."}