{"url": "https://api.github.com/repos/pytorch/pytorch/issues/13452", "repository_url": "https://api.github.com/repos/pytorch/pytorch", "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/13452/labels{/name}", "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/13452/comments", "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/13452/events", "html_url": "https://github.com/pytorch/pytorch/pull/13452", "id": 376467684, "node_id": "MDExOlB1bGxSZXF1ZXN0MjI3Njc4Mzk1", "number": 13452, "title": " Fix python function output wrapping", "user": {"login": "albanD", "id": 6359743, "node_id": "MDQ6VXNlcjYzNTk3NDM=", "avatar_url": "https://avatars3.githubusercontent.com/u/6359743?v=4", "gravatar_id": "", "url": "https://api.github.com/users/albanD", "html_url": "https://github.com/albanD", "followers_url": "https://api.github.com/users/albanD/followers", "following_url": "https://api.github.com/users/albanD/following{/other_user}", "gists_url": "https://api.github.com/users/albanD/gists{/gist_id}", "starred_url": "https://api.github.com/users/albanD/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/albanD/subscriptions", "organizations_url": "https://api.github.com/users/albanD/orgs", "repos_url": "https://api.github.com/users/albanD/repos", "events_url": "https://api.github.com/users/albanD/events{/privacy}", "received_events_url": "https://api.github.com/users/albanD/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 7, "created_at": "2018-11-01T16:27:51Z", "updated_at": "2018-11-15T23:49:37Z", "closed_at": null, "author_association": "COLLABORATOR", "pull_request": {"url": "https://api.github.com/repos/pytorch/pytorch/pulls/13452", "html_url": "https://github.com/pytorch/pytorch/pull/13452", "diff_url": "https://github.com/pytorch/pytorch/pull/13452.diff", "patch_url": "https://github.com/pytorch/pytorch/pull/13452.patch"}, "body_html": "<p>If <code>rebase_history</code> is called in <code>set_history</code>, then the cdata is assumed to be filled.</p>", "body_text": "If rebase_history is called in set_history, then the cdata is assumed to be filled.", "body": "If `rebase_history` is called in `set_history`, then the cdata is assumed to be filled."}