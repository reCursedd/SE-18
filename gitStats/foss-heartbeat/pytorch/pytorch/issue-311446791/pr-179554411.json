{"url": "https://api.github.com/repos/pytorch/pytorch/pulls/6298", "id": 179554411, "node_id": "MDExOlB1bGxSZXF1ZXN0MTc5NTU0NDEx", "html_url": "https://github.com/pytorch/pytorch/pull/6298", "diff_url": "https://github.com/pytorch/pytorch/pull/6298.diff", "patch_url": "https://github.com/pytorch/pytorch/pull/6298.patch", "issue_url": "https://api.github.com/repos/pytorch/pytorch/issues/6298", "number": 6298, "state": "closed", "locked": false, "title": "[caffe2] Refactor Predictor to support CUDA", "user": {"login": "harrysummer", "id": 1215413, "node_id": "MDQ6VXNlcjEyMTU0MTM=", "avatar_url": "https://avatars3.githubusercontent.com/u/1215413?v=4", "gravatar_id": "", "url": "https://api.github.com/users/harrysummer", "html_url": "https://github.com/harrysummer", "followers_url": "https://api.github.com/users/harrysummer/followers", "following_url": "https://api.github.com/users/harrysummer/following{/other_user}", "gists_url": "https://api.github.com/users/harrysummer/gists{/gist_id}", "starred_url": "https://api.github.com/users/harrysummer/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/harrysummer/subscriptions", "organizations_url": "https://api.github.com/users/harrysummer/orgs", "repos_url": "https://api.github.com/users/harrysummer/repos", "events_url": "https://api.github.com/users/harrysummer/events{/privacy}", "received_events_url": "https://api.github.com/users/harrysummer/received_events", "type": "User", "site_admin": false}, "body": "Update 2:\r\nThe pull request now removes the thread-safe implementation. Only predictor CUDA support is included. See [comment](https://github.com/pytorch/pytorch/pull/6298#issuecomment-380674538) below.\r\n\r\n---\r\n\r\nUpdate:\r\nThe commit now put the threadsafe implementation into `Predictor`, and also includes Predictor CUDA support.\r\n\r\n---\r\nOriginal:\r\n\r\nThe ONNX interface is not thread safe. All threading using the same ONNX backend would share the same Caffe2 workspace. When multiple evaluation are doing concurrently, they would write to the same blobs.\r\n\r\nThis pull request deals with the problem by adding an interface method `run_in_new_workspace` to Caffe2 ONNX backend. When evaluating an image, we create a new workspace to store the intermediate and final results, while sharing the network weights by inheriting those blobs in init_net from the default workspace.\r\n\r\nNote that this might not work for RNN case. An ultimate solution might be some sort of copy-on-write mechanism.", "created_at": "2018-04-05T01:49:20Z", "updated_at": "2018-11-23T15:41:59Z", "closed_at": "2018-06-01T18:40:39Z", "merged_at": null, "merge_commit_sha": "f0c3c1093c9cf713570ba576ea2a0cfd1b0bf55c", "assignee": null, "assignees": [], "requested_reviewers": [], "requested_teams": [], "labels": [{"id": 890282107, "node_id": "MDU6TGFiZWw4OTAyODIxMDc=", "url": "https://api.github.com/repos/pytorch/pytorch/labels/caffe2", "name": "caffe2", "color": "210aa8", "default": false}], "milestone": null, "commits_url": "https://api.github.com/repos/pytorch/pytorch/pulls/6298/commits", "review_comments_url": "https://api.github.com/repos/pytorch/pytorch/pulls/6298/comments", "review_comment_url": "https://api.github.com/repos/pytorch/pytorch/pulls/comments{/number}", "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/6298/comments", "statuses_url": "https://api.github.com/repos/pytorch/pytorch/statuses/9a6956bcec7153827087c118a920ed1d37d464e9", "head": {"label": "harrysummer:python_multithread", "ref": "python_multithread", "sha": "9a6956bcec7153827087c118a920ed1d37d464e9", "user": {"login": "harrysummer", "id": 1215413, "node_id": "MDQ6VXNlcjEyMTU0MTM=", "avatar_url": "https://avatars3.githubusercontent.com/u/1215413?v=4", "gravatar_id": "", "url": "https://api.github.com/users/harrysummer", "html_url": "https://github.com/harrysummer", "followers_url": "https://api.github.com/users/harrysummer/followers", "following_url": "https://api.github.com/users/harrysummer/following{/other_user}", "gists_url": "https://api.github.com/users/harrysummer/gists{/gist_id}", "starred_url": "https://api.github.com/users/harrysummer/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/harrysummer/subscriptions", "organizations_url": "https://api.github.com/users/harrysummer/orgs", "repos_url": "https://api.github.com/users/harrysummer/repos", "events_url": "https://api.github.com/users/harrysummer/events{/privacy}", "received_events_url": "https://api.github.com/users/harrysummer/received_events", "type": "User", "site_admin": false}, "repo": {"id": 128142139, "node_id": "MDEwOlJlcG9zaXRvcnkxMjgxNDIxMzk=", "name": "pytorch", "full_name": "harrysummer/pytorch", "private": false, "owner": {"login": "harrysummer", "id": 1215413, "node_id": "MDQ6VXNlcjEyMTU0MTM=", "avatar_url": "https://avatars3.githubusercontent.com/u/1215413?v=4", "gravatar_id": "", "url": "https://api.github.com/users/harrysummer", "html_url": "https://github.com/harrysummer", "followers_url": "https://api.github.com/users/harrysummer/followers", "following_url": "https://api.github.com/users/harrysummer/following{/other_user}", "gists_url": "https://api.github.com/users/harrysummer/gists{/gist_id}", "starred_url": "https://api.github.com/users/harrysummer/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/harrysummer/subscriptions", "organizations_url": "https://api.github.com/users/harrysummer/orgs", "repos_url": "https://api.github.com/users/harrysummer/repos", "events_url": "https://api.github.com/users/harrysummer/events{/privacy}", "received_events_url": "https://api.github.com/users/harrysummer/received_events", "type": "User", "site_admin": false}, "html_url": "https://github.com/harrysummer/pytorch", "description": "Tensors and Dynamic neural networks in Python  with strong GPU acceleration", "fork": true, "url": "https://api.github.com/repos/harrysummer/pytorch", "forks_url": "https://api.github.com/repos/harrysummer/pytorch/forks", "keys_url": "https://api.github.com/repos/harrysummer/pytorch/keys{/key_id}", "collaborators_url": "https://api.github.com/repos/harrysummer/pytorch/collaborators{/collaborator}", "teams_url": "https://api.github.com/repos/harrysummer/pytorch/teams", "hooks_url": "https://api.github.com/repos/harrysummer/pytorch/hooks", "issue_events_url": "https://api.github.com/repos/harrysummer/pytorch/issues/events{/number}", "events_url": "https://api.github.com/repos/harrysummer/pytorch/events", "assignees_url": "https://api.github.com/repos/harrysummer/pytorch/assignees{/user}", "branches_url": "https://api.github.com/repos/harrysummer/pytorch/branches{/branch}", "tags_url": "https://api.github.com/repos/harrysummer/pytorch/tags", "blobs_url": "https://api.github.com/repos/harrysummer/pytorch/git/blobs{/sha}", "git_tags_url": "https://api.github.com/repos/harrysummer/pytorch/git/tags{/sha}", "git_refs_url": "https://api.github.com/repos/harrysummer/pytorch/git/refs{/sha}", "trees_url": "https://api.github.com/repos/harrysummer/pytorch/git/trees{/sha}", "statuses_url": "https://api.github.com/repos/harrysummer/pytorch/statuses/{sha}", "languages_url": "https://api.github.com/repos/harrysummer/pytorch/languages", "stargazers_url": "https://api.github.com/repos/harrysummer/pytorch/stargazers", "contributors_url": "https://api.github.com/repos/harrysummer/pytorch/contributors", "subscribers_url": "https://api.github.com/repos/harrysummer/pytorch/subscribers", "subscription_url": "https://api.github.com/repos/harrysummer/pytorch/subscription", "commits_url": "https://api.github.com/repos/harrysummer/pytorch/commits{/sha}", "git_commits_url": "https://api.github.com/repos/harrysummer/pytorch/git/commits{/sha}", "comments_url": "https://api.github.com/repos/harrysummer/pytorch/comments{/number}", "issue_comment_url": "https://api.github.com/repos/harrysummer/pytorch/issues/comments{/number}", "contents_url": "https://api.github.com/repos/harrysummer/pytorch/contents/{+path}", "compare_url": "https://api.github.com/repos/harrysummer/pytorch/compare/{base}...{head}", "merges_url": "https://api.github.com/repos/harrysummer/pytorch/merges", "archive_url": "https://api.github.com/repos/harrysummer/pytorch/{archive_format}{/ref}", "downloads_url": "https://api.github.com/repos/harrysummer/pytorch/downloads", "issues_url": "https://api.github.com/repos/harrysummer/pytorch/issues{/number}", "pulls_url": "https://api.github.com/repos/harrysummer/pytorch/pulls{/number}", "milestones_url": "https://api.github.com/repos/harrysummer/pytorch/milestones{/number}", "notifications_url": "https://api.github.com/repos/harrysummer/pytorch/notifications{?since,all,participating}", "labels_url": "https://api.github.com/repos/harrysummer/pytorch/labels{/name}", "releases_url": "https://api.github.com/repos/harrysummer/pytorch/releases{/id}", "deployments_url": "https://api.github.com/repos/harrysummer/pytorch/deployments", "created_at": "2018-04-05T00:52:43Z", "updated_at": "2018-04-05T00:52:53Z", "pushed_at": "2018-10-11T19:44:17Z", "git_url": "git://github.com/harrysummer/pytorch.git", "ssh_url": "git@github.com:harrysummer/pytorch.git", "clone_url": "https://github.com/harrysummer/pytorch.git", "svn_url": "https://github.com/harrysummer/pytorch", "homepage": "http://pytorch.org", "size": 67396, "stargazers_count": 0, "watchers_count": 0, "language": "C++", "has_issues": false, "has_projects": true, "has_downloads": true, "has_wiki": true, "has_pages": false, "forks_count": 0, "mirror_url": null, "archived": false, "open_issues_count": 0, "license": {"key": "other", "name": "Other", "spdx_id": "NOASSERTION", "url": null, "node_id": "MDc6TGljZW5zZTA="}, "forks": 0, "open_issues": 0, "watchers": 0, "default_branch": "master"}}, "base": {"label": "pytorch:master", "ref": "master", "sha": "afdaf52c3494860c6da96191c191579efdbf1c02", "user": {"login": "pytorch", "id": 21003710, "node_id": "MDEyOk9yZ2FuaXphdGlvbjIxMDAzNzEw", "avatar_url": "https://avatars3.githubusercontent.com/u/21003710?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pytorch", "html_url": "https://github.com/pytorch", "followers_url": "https://api.github.com/users/pytorch/followers", "following_url": "https://api.github.com/users/pytorch/following{/other_user}", "gists_url": "https://api.github.com/users/pytorch/gists{/gist_id}", "starred_url": "https://api.github.com/users/pytorch/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pytorch/subscriptions", "organizations_url": "https://api.github.com/users/pytorch/orgs", "repos_url": "https://api.github.com/users/pytorch/repos", "events_url": "https://api.github.com/users/pytorch/events{/privacy}", "received_events_url": "https://api.github.com/users/pytorch/received_events", "type": "Organization", "site_admin": false}, "repo": {"id": 65600975, "node_id": "MDEwOlJlcG9zaXRvcnk2NTYwMDk3NQ==", "name": "pytorch", "full_name": "pytorch/pytorch", "private": false, "owner": {"login": "pytorch", "id": 21003710, "node_id": "MDEyOk9yZ2FuaXphdGlvbjIxMDAzNzEw", "avatar_url": "https://avatars3.githubusercontent.com/u/21003710?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pytorch", "html_url": "https://github.com/pytorch", "followers_url": "https://api.github.com/users/pytorch/followers", "following_url": "https://api.github.com/users/pytorch/following{/other_user}", "gists_url": "https://api.github.com/users/pytorch/gists{/gist_id}", "starred_url": "https://api.github.com/users/pytorch/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pytorch/subscriptions", "organizations_url": "https://api.github.com/users/pytorch/orgs", "repos_url": "https://api.github.com/users/pytorch/repos", "events_url": "https://api.github.com/users/pytorch/events{/privacy}", "received_events_url": "https://api.github.com/users/pytorch/received_events", "type": "Organization", "site_admin": false}, "html_url": "https://github.com/pytorch/pytorch", "description": "Tensors and Dynamic neural networks in Python  with strong GPU acceleration", "fork": false, "url": "https://api.github.com/repos/pytorch/pytorch", "forks_url": "https://api.github.com/repos/pytorch/pytorch/forks", "keys_url": "https://api.github.com/repos/pytorch/pytorch/keys{/key_id}", "collaborators_url": "https://api.github.com/repos/pytorch/pytorch/collaborators{/collaborator}", "teams_url": "https://api.github.com/repos/pytorch/pytorch/teams", "hooks_url": "https://api.github.com/repos/pytorch/pytorch/hooks", "issue_events_url": "https://api.github.com/repos/pytorch/pytorch/issues/events{/number}", "events_url": "https://api.github.com/repos/pytorch/pytorch/events", "assignees_url": "https://api.github.com/repos/pytorch/pytorch/assignees{/user}", "branches_url": "https://api.github.com/repos/pytorch/pytorch/branches{/branch}", "tags_url": "https://api.github.com/repos/pytorch/pytorch/tags", "blobs_url": "https://api.github.com/repos/pytorch/pytorch/git/blobs{/sha}", "git_tags_url": "https://api.github.com/repos/pytorch/pytorch/git/tags{/sha}", "git_refs_url": "https://api.github.com/repos/pytorch/pytorch/git/refs{/sha}", "trees_url": "https://api.github.com/repos/pytorch/pytorch/git/trees{/sha}", "statuses_url": "https://api.github.com/repos/pytorch/pytorch/statuses/{sha}", "languages_url": "https://api.github.com/repos/pytorch/pytorch/languages", "stargazers_url": "https://api.github.com/repos/pytorch/pytorch/stargazers", "contributors_url": "https://api.github.com/repos/pytorch/pytorch/contributors", "subscribers_url": "https://api.github.com/repos/pytorch/pytorch/subscribers", "subscription_url": "https://api.github.com/repos/pytorch/pytorch/subscription", "commits_url": "https://api.github.com/repos/pytorch/pytorch/commits{/sha}", "git_commits_url": "https://api.github.com/repos/pytorch/pytorch/git/commits{/sha}", "comments_url": "https://api.github.com/repos/pytorch/pytorch/comments{/number}", "issue_comment_url": "https://api.github.com/repos/pytorch/pytorch/issues/comments{/number}", "contents_url": "https://api.github.com/repos/pytorch/pytorch/contents/{+path}", "compare_url": "https://api.github.com/repos/pytorch/pytorch/compare/{base}...{head}", "merges_url": "https://api.github.com/repos/pytorch/pytorch/merges", "archive_url": "https://api.github.com/repos/pytorch/pytorch/{archive_format}{/ref}", "downloads_url": "https://api.github.com/repos/pytorch/pytorch/downloads", "issues_url": "https://api.github.com/repos/pytorch/pytorch/issues{/number}", "pulls_url": "https://api.github.com/repos/pytorch/pytorch/pulls{/number}", "milestones_url": "https://api.github.com/repos/pytorch/pytorch/milestones{/number}", "notifications_url": "https://api.github.com/repos/pytorch/pytorch/notifications{?since,all,participating}", "labels_url": "https://api.github.com/repos/pytorch/pytorch/labels{/name}", "releases_url": "https://api.github.com/repos/pytorch/pytorch/releases{/id}", "deployments_url": "https://api.github.com/repos/pytorch/pytorch/deployments", "created_at": "2016-08-13T05:26:41Z", "updated_at": "2018-11-24T12:35:43Z", "pushed_at": "2018-11-24T12:42:01Z", "git_url": "git://github.com/pytorch/pytorch.git", "ssh_url": "git@github.com:pytorch/pytorch.git", "clone_url": "https://github.com/pytorch/pytorch.git", "svn_url": "https://github.com/pytorch/pytorch", "homepage": "http://pytorch.org", "size": 89656, "stargazers_count": 21589, "watchers_count": 21589, "language": "C++", "has_issues": true, "has_projects": true, "has_downloads": true, "has_wiki": true, "has_pages": false, "forks_count": 5153, "mirror_url": null, "archived": false, "open_issues_count": 2196, "license": {"key": "other", "name": "Other", "spdx_id": "NOASSERTION", "url": null, "node_id": "MDc6TGljZW5zZTA="}, "forks": 5153, "open_issues": 2196, "watchers": 21589, "default_branch": "master"}}, "_links": {"self": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/6298"}, "html": {"href": "https://github.com/pytorch/pytorch/pull/6298"}, "issue": {"href": "https://api.github.com/repos/pytorch/pytorch/issues/6298"}, "comments": {"href": "https://api.github.com/repos/pytorch/pytorch/issues/6298/comments"}, "review_comments": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/6298/comments"}, "review_comment": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/comments{/number}"}, "commits": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/6298/commits"}, "statuses": {"href": "https://api.github.com/repos/pytorch/pytorch/statuses/9a6956bcec7153827087c118a920ed1d37d464e9"}}, "author_association": "CONTRIBUTOR", "body_html": "<p>Update 2:<br>\nThe pull request now removes the thread-safe implementation. Only predictor CUDA support is included. See <a href=\"https://github.com/pytorch/pytorch/pull/6298#issuecomment-380674538\" data-hovercard-type=\"pull_request\" data-hovercard-url=\"/pytorch/pytorch/pull/6298/hovercard\">comment</a> below.</p>\n<hr>\n<p>Update:<br>\nThe commit now put the threadsafe implementation into <code>Predictor</code>, and also includes Predictor CUDA support.</p>\n<hr>\n<p>Original:</p>\n<p>The ONNX interface is not thread safe. All threading using the same ONNX backend would share the same Caffe2 workspace. When multiple evaluation are doing concurrently, they would write to the same blobs.</p>\n<p>This pull request deals with the problem by adding an interface method <code>run_in_new_workspace</code> to Caffe2 ONNX backend. When evaluating an image, we create a new workspace to store the intermediate and final results, while sharing the network weights by inheriting those blobs in init_net from the default workspace.</p>\n<p>Note that this might not work for RNN case. An ultimate solution might be some sort of copy-on-write mechanism.</p>", "body_text": "Update 2:\nThe pull request now removes the thread-safe implementation. Only predictor CUDA support is included. See comment below.\n\nUpdate:\nThe commit now put the threadsafe implementation into Predictor, and also includes Predictor CUDA support.\n\nOriginal:\nThe ONNX interface is not thread safe. All threading using the same ONNX backend would share the same Caffe2 workspace. When multiple evaluation are doing concurrently, they would write to the same blobs.\nThis pull request deals with the problem by adding an interface method run_in_new_workspace to Caffe2 ONNX backend. When evaluating an image, we create a new workspace to store the intermediate and final results, while sharing the network weights by inheriting those blobs in init_net from the default workspace.\nNote that this might not work for RNN case. An ultimate solution might be some sort of copy-on-write mechanism.", "merged": false, "mergeable": false, "rebaseable": false, "mergeable_state": "dirty", "merged_by": null, "comments": 12, "review_comments": 10, "maintainer_can_modify": false, "commits": 17, "additions": 310, "deletions": 139, "changed_files": 15}