{"url": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/179920956", "pull_request_review_id": 110259831, "id": 179920956, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE3OTkyMDk1Ng==", "diff_hunk": "@@ -51,80 +33,121 @@ const ::google::protobuf::RepeatedPtrField<::std::string>& getBlobs(\n   }\n   CAFFE_THROW(\"Blob not found: \", name);\n }\n-} // namespace\n \n-Predictor::Predictor(const MetaNetDef& def, Workspace* parent)\n-    : Predictor(\n-          getNet(\n+void shareInputTensor(\n+    Workspace* ws,\n+    const std::string& name,\n+    TensorCPU* input) {\n+  enforceIsTensor<TensorCPU>(ws, name);\n+  auto* blob = ws->GetBlob(name);\n+  CAFFE_ENFORCE(blob, \"Blob: \", name, \" does not exist\");\n+  auto* tensor = blob->template GetMutable<TensorCPU>();\n+  tensor->ResizeLike(*input);\n+  tensor->ShareData(*input);\n+}\n+\n+std::shared_ptr<TensorCPU> extractOutputTensor(Workspace* ws, const std::string& name) {\n+  enforceIsTensor<TensorCPU>(ws, name);\n+  auto* blob = ws->GetBlob(name);\n+  CAFFE_ENFORCE(blob, \"Blob: \", name, \" does not exist\");\n+\n+  // Since the tensor is a member of blob, we should not delete the pointer.\n+  // By given a customized deleter, the pointer won't be deleted on shared_ptr deconstruction.\n+  return std::shared_ptr<TensorCPU>(blob->template GetMutable<TensorCPU>(), [](TensorCPU *){});", "path": "caffe2/core/predictor.cc", "position": 85, "original_position": 73, "commit_id": "9a6956bcec7153827087c118a920ed1d37d464e9", "original_commit_id": "fcb324b01291950c3dfb52980c9ccee757e980c7", "user": {"login": "yinghai", "id": 1100089, "node_id": "MDQ6VXNlcjExMDAwODk=", "avatar_url": "https://avatars1.githubusercontent.com/u/1100089?v=4", "gravatar_id": "", "url": "https://api.github.com/users/yinghai", "html_url": "https://github.com/yinghai", "followers_url": "https://api.github.com/users/yinghai/followers", "following_url": "https://api.github.com/users/yinghai/following{/other_user}", "gists_url": "https://api.github.com/users/yinghai/gists{/gist_id}", "starred_url": "https://api.github.com/users/yinghai/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/yinghai/subscriptions", "organizations_url": "https://api.github.com/users/yinghai/orgs", "repos_url": "https://api.github.com/users/yinghai/repos", "events_url": "https://api.github.com/users/yinghai/events{/privacy}", "received_events_url": "https://api.github.com/users/yinghai/received_events", "type": "User", "site_admin": false}, "body": "Yes, I later figure that since we have two cases: tensors from workspace and tensors we created. OK. That makes sense. ", "created_at": "2018-04-07T16:22:48Z", "updated_at": "2018-11-23T15:41:59Z", "html_url": "https://github.com/pytorch/pytorch/pull/6298#discussion_r179920956", "pull_request_url": "https://api.github.com/repos/pytorch/pytorch/pulls/6298", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/179920956"}, "html": {"href": "https://github.com/pytorch/pytorch/pull/6298#discussion_r179920956"}, "pull_request": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/6298"}}, "body_html": "<p>Yes, I later figure that since we have two cases: tensors from workspace and tensors we created. OK. That makes sense.</p>", "body_text": "Yes, I later figure that since we have two cases: tensors from workspace and tensors we created. OK. That makes sense.", "in_reply_to_id": 179907466}