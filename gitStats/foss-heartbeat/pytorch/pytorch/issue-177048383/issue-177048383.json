{"url": "https://api.github.com/repos/pytorch/pytorch/issues/27", "repository_url": "https://api.github.com/repos/pytorch/pytorch", "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/27/labels{/name}", "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/27/comments", "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/27/events", "html_url": "https://github.com/pytorch/pytorch/issues/27", "id": 177048383, "node_id": "MDU6SXNzdWUxNzcwNDgzODM=", "number": 27, "title": "Can't print tensors with inf or nan", "user": {"login": "adamlerer", "id": 5702157, "node_id": "MDQ6VXNlcjU3MDIxNTc=", "avatar_url": "https://avatars2.githubusercontent.com/u/5702157?v=4", "gravatar_id": "", "url": "https://api.github.com/users/adamlerer", "html_url": "https://github.com/adamlerer", "followers_url": "https://api.github.com/users/adamlerer/followers", "following_url": "https://api.github.com/users/adamlerer/following{/other_user}", "gists_url": "https://api.github.com/users/adamlerer/gists{/gist_id}", "starred_url": "https://api.github.com/users/adamlerer/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/adamlerer/subscriptions", "organizations_url": "https://api.github.com/users/adamlerer/orgs", "repos_url": "https://api.github.com/users/adamlerer/repos", "events_url": "https://api.github.com/users/adamlerer/events{/privacy}", "received_events_url": "https://api.github.com/users/adamlerer/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2016-09-14T23:23:48Z", "updated_at": "2016-09-16T04:16:05Z", "closed_at": "2016-09-16T04:16:05Z", "author_association": "CONTRIBUTOR", "body_html": "<pre><code>In [27]: print(torch.FloatTensor(1).fill_(1).div(0))\n---------------------------------------------------------------------------\nOverflowError                             Traceback (most recent call last)\n&lt;ipython-input-27-811177cb15a4&gt; in &lt;module&gt;()\n----&gt; 1 print(torch.FloatTensor(1).fill_(1).div(0))\n\n/home/alerer/anaconda/lib/python2.7/site-packages/torch/Tensor.pyc in __str__(self)\n     85\n     86     def __str__(self):\n---&gt; 87         return TensorPrinting.printTensor(self)\n     88\n     89     def __iter__(self):\n\n/home/alerer/anaconda/lib/python2.7/site-packages/torch/TensorPrinting.pyc in printTensor(self)\n    106         return '[{} with no dimension]\\n'.format(torch.typename(self))\n    107     elif self.nDimension() == 1:\n--&gt; 108         strt = _printVector(self)\n    109     elif self.nDimension() == 2:\n    110         strt = _printMatrix(self)\n\n/home/alerer/anaconda/lib/python2.7/site-packages/torch/TensorPrinting.pyc in _printVector(tensor)\n     96\n     97 def _printVector(tensor):\n---&gt; 98     fmt, scale, _ = _printformat(tensor.storage())\n     99     strt = ''\n    100     if scale != 1:\n\n/home/alerer/anaconda/lib/python2.7/site-packages/torch/TensorPrinting.pyc in _printformat(storage)\n     25\n     26     scale = 1\n---&gt; 27     exp_max = int(exp_max)\n     28     if int_mode:\n     29         if exp_max &gt; 9:\n\nOverflowError: cannot convert float infinity to integer\n</code></pre>", "body_text": "In [27]: print(torch.FloatTensor(1).fill_(1).div(0))\n---------------------------------------------------------------------------\nOverflowError                             Traceback (most recent call last)\n<ipython-input-27-811177cb15a4> in <module>()\n----> 1 print(torch.FloatTensor(1).fill_(1).div(0))\n\n/home/alerer/anaconda/lib/python2.7/site-packages/torch/Tensor.pyc in __str__(self)\n     85\n     86     def __str__(self):\n---> 87         return TensorPrinting.printTensor(self)\n     88\n     89     def __iter__(self):\n\n/home/alerer/anaconda/lib/python2.7/site-packages/torch/TensorPrinting.pyc in printTensor(self)\n    106         return '[{} with no dimension]\\n'.format(torch.typename(self))\n    107     elif self.nDimension() == 1:\n--> 108         strt = _printVector(self)\n    109     elif self.nDimension() == 2:\n    110         strt = _printMatrix(self)\n\n/home/alerer/anaconda/lib/python2.7/site-packages/torch/TensorPrinting.pyc in _printVector(tensor)\n     96\n     97 def _printVector(tensor):\n---> 98     fmt, scale, _ = _printformat(tensor.storage())\n     99     strt = ''\n    100     if scale != 1:\n\n/home/alerer/anaconda/lib/python2.7/site-packages/torch/TensorPrinting.pyc in _printformat(storage)\n     25\n     26     scale = 1\n---> 27     exp_max = int(exp_max)\n     28     if int_mode:\n     29         if exp_max > 9:\n\nOverflowError: cannot convert float infinity to integer", "body": "```\nIn [27]: print(torch.FloatTensor(1).fill_(1).div(0))\n---------------------------------------------------------------------------\nOverflowError                             Traceback (most recent call last)\n<ipython-input-27-811177cb15a4> in <module>()\n----> 1 print(torch.FloatTensor(1).fill_(1).div(0))\n\n/home/alerer/anaconda/lib/python2.7/site-packages/torch/Tensor.pyc in __str__(self)\n     85\n     86     def __str__(self):\n---> 87         return TensorPrinting.printTensor(self)\n     88\n     89     def __iter__(self):\n\n/home/alerer/anaconda/lib/python2.7/site-packages/torch/TensorPrinting.pyc in printTensor(self)\n    106         return '[{} with no dimension]\\n'.format(torch.typename(self))\n    107     elif self.nDimension() == 1:\n--> 108         strt = _printVector(self)\n    109     elif self.nDimension() == 2:\n    110         strt = _printMatrix(self)\n\n/home/alerer/anaconda/lib/python2.7/site-packages/torch/TensorPrinting.pyc in _printVector(tensor)\n     96\n     97 def _printVector(tensor):\n---> 98     fmt, scale, _ = _printformat(tensor.storage())\n     99     strt = ''\n    100     if scale != 1:\n\n/home/alerer/anaconda/lib/python2.7/site-packages/torch/TensorPrinting.pyc in _printformat(storage)\n     25\n     26     scale = 1\n---> 27     exp_max = int(exp_max)\n     28     if int_mode:\n     29         if exp_max > 9:\n\nOverflowError: cannot convert float infinity to integer\n```\n"}