{"url": "https://api.github.com/repos/pytorch/pytorch/issues/comments/439739226", "html_url": "https://github.com/pytorch/pytorch/issues/13663#issuecomment-439739226", "issue_url": "https://api.github.com/repos/pytorch/pytorch/issues/13663", "id": 439739226, "node_id": "MDEyOklzc3VlQ29tbWVudDQzOTczOTIyNg==", "user": {"login": "grayish", "id": 10613466, "node_id": "MDQ6VXNlcjEwNjEzNDY2", "avatar_url": "https://avatars2.githubusercontent.com/u/10613466?v=4", "gravatar_id": "", "url": "https://api.github.com/users/grayish", "html_url": "https://github.com/grayish", "followers_url": "https://api.github.com/users/grayish/followers", "following_url": "https://api.github.com/users/grayish/following{/other_user}", "gists_url": "https://api.github.com/users/grayish/gists{/gist_id}", "starred_url": "https://api.github.com/users/grayish/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/grayish/subscriptions", "organizations_url": "https://api.github.com/users/grayish/orgs", "repos_url": "https://api.github.com/users/grayish/repos", "events_url": "https://api.github.com/users/grayish/events{/privacy}", "received_events_url": "https://api.github.com/users/grayish/received_events", "type": "User", "site_admin": false}, "created_at": "2018-11-19T00:15:04Z", "updated_at": "2018-11-19T00:15:04Z", "author_association": "NONE", "body_html": "<p>Thanks for the advise.<br>\nI tried to train the model without cudnn by \"torch.backends.cudnn.enabled = False\".<br>\nIt was about two times slower, but I succeeded in training. So I also updated the Nvidia graphic driver to 415.13 and CUDNN version to 7.4.1. After rebuilding the PyTorch, this also succeeded in training.</p>\n<p>I guess there are problems in CUDNN with Turing architecture because Nvidia said \"While running cuDNN 7.3.0 on Turing with CUDA 10.0, r400 driver, the functions cudnnRNNForwardTraining(Ex) and cudnnRNNForwardInference(Ex) errored out returning CUDNN_STATUS_NOT_SUPPORTED.\" in their release note. (they said it was fixed. [https://docs.nvidia.com/deeplearning/sdk/cudnn-release-notes/rel_731.html#rel_731])<br>\nBut I do not know why it succeeded in Tensorflow environment with CUIDA 9.0 and CUDNN 7.1.4.</p>", "body_text": "Thanks for the advise.\nI tried to train the model without cudnn by \"torch.backends.cudnn.enabled = False\".\nIt was about two times slower, but I succeeded in training. So I also updated the Nvidia graphic driver to 415.13 and CUDNN version to 7.4.1. After rebuilding the PyTorch, this also succeeded in training.\nI guess there are problems in CUDNN with Turing architecture because Nvidia said \"While running cuDNN 7.3.0 on Turing with CUDA 10.0, r400 driver, the functions cudnnRNNForwardTraining(Ex) and cudnnRNNForwardInference(Ex) errored out returning CUDNN_STATUS_NOT_SUPPORTED.\" in their release note. (they said it was fixed. [https://docs.nvidia.com/deeplearning/sdk/cudnn-release-notes/rel_731.html#rel_731])\nBut I do not know why it succeeded in Tensorflow environment with CUIDA 9.0 and CUDNN 7.1.4.", "body": "Thanks for the advise. \r\nI tried to train the model without cudnn by \"torch.backends.cudnn.enabled = False\".\r\nIt was about two times slower, but I succeeded in training. So I also updated the Nvidia graphic driver to 415.13 and CUDNN version to 7.4.1. After rebuilding the PyTorch, this also succeeded in training.\r\n\r\nI guess there are problems in CUDNN with Turing architecture because Nvidia said \"While running cuDNN 7.3.0 on Turing with CUDA 10.0, r400 driver, the functions cudnnRNNForwardTraining(Ex) and cudnnRNNForwardInference(Ex) errored out returning CUDNN_STATUS_NOT_SUPPORTED.\" in their release note. (they said it was fixed. [https://docs.nvidia.com/deeplearning/sdk/cudnn-release-notes/rel_731.html#rel_731])\r\nBut I do not know why it succeeded in Tensorflow environment with CUIDA 9.0 and CUDNN 7.1.4."}