{"url": "https://api.github.com/repos/pytorch/pytorch/issues/1689", "repository_url": "https://api.github.com/repos/pytorch/pytorch", "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/1689/labels{/name}", "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/1689/comments", "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/1689/events", "html_url": "https://github.com/pytorch/pytorch/pull/1689", "id": 232613379, "node_id": "MDExOlB1bGxSZXF1ZXN0MTIzMzA4MTUz", "number": 1689, "title": "add checks for input, weight and bias types when using cudnn conv2d", "user": {"login": "alykhantejani", "id": 687194, "node_id": "MDQ6VXNlcjY4NzE5NA==", "avatar_url": "https://avatars1.githubusercontent.com/u/687194?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alykhantejani", "html_url": "https://github.com/alykhantejani", "followers_url": "https://api.github.com/users/alykhantejani/followers", "following_url": "https://api.github.com/users/alykhantejani/following{/other_user}", "gists_url": "https://api.github.com/users/alykhantejani/gists{/gist_id}", "starred_url": "https://api.github.com/users/alykhantejani/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alykhantejani/subscriptions", "organizations_url": "https://api.github.com/users/alykhantejani/orgs", "repos_url": "https://api.github.com/users/alykhantejani/repos", "events_url": "https://api.github.com/users/alykhantejani/events{/privacy}", "received_events_url": "https://api.github.com/users/alykhantejani/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2017-05-31T15:55:45Z", "updated_at": "2017-06-01T14:06:31Z", "closed_at": "2017-06-01T14:06:31Z", "author_association": "CONTRIBUTOR", "pull_request": {"url": "https://api.github.com/repos/pytorch/pytorch/pulls/1689", "html_url": "https://github.com/pytorch/pytorch/pull/1689", "diff_url": "https://github.com/pytorch/pytorch/pull/1689.diff", "patch_url": "https://github.com/pytorch/pytorch/pull/1689.patch"}, "body_html": "<p>Fix for issue <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load issue title\" data-id=\"232352715\" data-permission-text=\"Issue title is private\" data-url=\"https://github.com/pytorch/pytorch/issues/1685\" data-hovercard-type=\"issue\" data-hovercard-url=\"/pytorch/pytorch/issues/1685/hovercard\" href=\"https://github.com/pytorch/pytorch/issues/1685\">#1685</a>. Currently,</p>\n<p>This gives an error as expected:</p>\n<pre><code>import torch\nimport torch.nn.functional as F\nfrom torch.autograd import Variable\n\na = torch.ones(1, 1, 10, 10)\nb = torch.ones(1, 1, 3, 3) / 9\n\no = F.conv2d(Variable(a.double()), Variable(b))\n</code></pre>\n<p>So does this:</p>\n<pre><code>import torch\nimport torch.nn.functional as F\nfrom torch.autograd import Variable\n\na = torch.ones(1, 1, 10, 10)\nb = torch.ones(1, 1, 3, 3) / 9\ntorch.backends.cudnn.enabled = False\na = a.cuda()\nb = b.cuda()\no = F.conv2d(Variable(a.double()), Variable(b))\n</code></pre>\n<p>But with cudnn enabled, no error is thrown and the output is wrong</p>\n<pre><code>import torch\nimport torch.nn.functional as F\nfrom torch.autograd import Variable\n\na = torch.ones(1, 1, 10, 10)\nb = torch.ones(1, 1, 3, 3) / 9\ntorch.backends.cudnn.enabled = True\na = a.cuda()\nb = b.cuda()\no = F.conv2d(Variable(a.double()), Variable(b))\n</code></pre>", "body_text": "Fix for issue #1685. Currently,\nThis gives an error as expected:\nimport torch\nimport torch.nn.functional as F\nfrom torch.autograd import Variable\n\na = torch.ones(1, 1, 10, 10)\nb = torch.ones(1, 1, 3, 3) / 9\n\no = F.conv2d(Variable(a.double()), Variable(b))\n\nSo does this:\nimport torch\nimport torch.nn.functional as F\nfrom torch.autograd import Variable\n\na = torch.ones(1, 1, 10, 10)\nb = torch.ones(1, 1, 3, 3) / 9\ntorch.backends.cudnn.enabled = False\na = a.cuda()\nb = b.cuda()\no = F.conv2d(Variable(a.double()), Variable(b))\n\nBut with cudnn enabled, no error is thrown and the output is wrong\nimport torch\nimport torch.nn.functional as F\nfrom torch.autograd import Variable\n\na = torch.ones(1, 1, 10, 10)\nb = torch.ones(1, 1, 3, 3) / 9\ntorch.backends.cudnn.enabled = True\na = a.cuda()\nb = b.cuda()\no = F.conv2d(Variable(a.double()), Variable(b))", "body": "Fix for issue #1685. Currently, \r\n\r\nThis gives an error as expected:\r\n```\r\nimport torch\r\nimport torch.nn.functional as F\r\nfrom torch.autograd import Variable\r\n\r\na = torch.ones(1, 1, 10, 10)\r\nb = torch.ones(1, 1, 3, 3) / 9\r\n\r\no = F.conv2d(Variable(a.double()), Variable(b))\r\n```\r\n\r\n\r\nSo does this:\r\n```\r\nimport torch\r\nimport torch.nn.functional as F\r\nfrom torch.autograd import Variable\r\n\r\na = torch.ones(1, 1, 10, 10)\r\nb = torch.ones(1, 1, 3, 3) / 9\r\ntorch.backends.cudnn.enabled = False\r\na = a.cuda()\r\nb = b.cuda()\r\no = F.conv2d(Variable(a.double()), Variable(b))\r\n```\r\nBut with cudnn enabled, no error is thrown and the output is wrong\r\n```\r\nimport torch\r\nimport torch.nn.functional as F\r\nfrom torch.autograd import Variable\r\n\r\na = torch.ones(1, 1, 10, 10)\r\nb = torch.ones(1, 1, 3, 3) / 9\r\ntorch.backends.cudnn.enabled = True\r\na = a.cuda()\r\nb = b.cuda()\r\no = F.conv2d(Variable(a.double()), Variable(b))\r\n```"}