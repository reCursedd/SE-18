{"url": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/213122909", "pull_request_review_id": 149893404, "id": 213122909, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIxMzEyMjkwOQ==", "diff_hunk": "@@ -0,0 +1,31 @@\n+#include \"torch/csrc/jit/passes/decay_types.h\"\n+\n+namespace torch { namespace jit {\n+\n+void DecayTypes(Block * b) {\n+  for (auto it = b->nodes().begin(); it != b->nodes().end(); ++it) {\n+    Node * n = *it;\n+\n+    for (Block * b : n->blocks()) {\n+      DecayTypes(b);\n+    }\n+\n+    for (Value *out : n->outputs()) {\n+      if (out->type()->cast<TensorType>()) {\n+        out->setType(DynamicType::get());\n+      }\n+    }\n+  }\n+}\n+\n+void DecayTypes(const std::shared_ptr<Graph>& graph) {\n+  for (Value * input : graph->inputs()) {\n+    if (input->type()->cast<TensorType>()) {\n+      input->setType(DynamicType::get());", "path": "torch/csrc/jit/passes/decay_types.cpp", "position": null, "original_position": 24, "commit_id": "dc008cc6bf20f723ea9b9f4e419e039aec3224d7", "original_commit_id": "dd7bd71c4f7272b568d007a717477da7c86f5b0a", "user": {"login": "zdevito", "id": 370202, "node_id": "MDQ6VXNlcjM3MDIwMg==", "avatar_url": "https://avatars0.githubusercontent.com/u/370202?v=4", "gravatar_id": "", "url": "https://api.github.com/users/zdevito", "html_url": "https://github.com/zdevito", "followers_url": "https://api.github.com/users/zdevito/followers", "following_url": "https://api.github.com/users/zdevito/following{/other_user}", "gists_url": "https://api.github.com/users/zdevito/gists{/gist_id}", "starred_url": "https://api.github.com/users/zdevito/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/zdevito/subscriptions", "organizations_url": "https://api.github.com/users/zdevito/orgs", "repos_url": "https://api.github.com/users/zdevito/repos", "events_url": "https://api.github.com/users/zdevito/events{/privacy}", "received_events_url": "https://api.github.com/users/zdevito/received_events", "type": "User", "site_admin": false}, "body": "This is also missing tuples or lists that contain TensorTypes. The `EraseShapeInformation` pass handles these cases.", "created_at": "2018-08-27T21:32:50Z", "updated_at": "2018-11-23T15:50:06Z", "html_url": "https://github.com/pytorch/pytorch/pull/10841#discussion_r213122909", "pull_request_url": "https://api.github.com/repos/pytorch/pytorch/pulls/10841", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/213122909"}, "html": {"href": "https://github.com/pytorch/pytorch/pull/10841#discussion_r213122909"}, "pull_request": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/10841"}}, "body_html": "<p>This is also missing tuples or lists that contain TensorTypes. The <code>EraseShapeInformation</code> pass handles these cases.</p>", "body_text": "This is also missing tuples or lists that contain TensorTypes. The EraseShapeInformation pass handles these cases."}