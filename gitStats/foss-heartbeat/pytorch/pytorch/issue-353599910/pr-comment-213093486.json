{"url": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/213093486", "pull_request_review_id": 149854056, "id": 213093486, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIxMzA5MzQ4Ng==", "diff_hunk": "@@ -252,6 +254,139 @@ def _verify_equal(xs, ys):\n             raise RuntimeError(\"JIT and real computation mismatch\")\n \n \n+def indent(s):\n+    return '\\n'.join(['\\t' + line for line in s.splitlines()])\n+\n+\n+class TracingCheckError(Exception):\n+    def __init__(self, graph_diff_error, tensor_compare_error, nondeterm_warning, extra_msg=None):\n+        self.message = 'Tracing failed sanity checks!\\n'\n+        if extra_msg is not None:\n+            self.message += extra_msg + '\\n'\n+        if graph_diff_error is not None:\n+            self.message += 'ERROR: Graphs differed across invocations!\\n'\n+            self.message += indent(graph_diff_error) + '\\n'\n+        if nondeterm_warning is not None:\n+            self.message += 'WARNING: '\n+            self.message += nondeterm_warning + '\\n'\n+        if tensor_compare_error is not None:\n+            self.message += 'ERROR: Tensor-valued Constant nodes differed in value ' \\\n+                            'across invocations. This often indicates that the tracer has' \\\n+                            ' encountered untraceable code.\\n'\n+            self.message += indent(tensor_compare_error) + '\\n'\n+        super(TracingCheckError, self).__init__(self.message)\n+\n+\n+# Check the traced module against a set of user-provided validation inputs\n+def check_trace(check_inputs, func, executor_options, module, check_tolerance):\n+    for inputs in check_inputs:\n+        check_mod = TopLevelTracedModule(func, **executor_options)\n+        check_mod._create_method_from_trace('forward', func, _clone_inputs(inputs))\n+\n+        def graph_diagnostic_info():\n+            mod_canonicalized = torch._C._jit_pass_canonicalize(module.graph)\n+            torch._C._jit_pass_decay_types(mod_canonicalized)\n+            check_canonicalized = torch._C._jit_pass_canonicalize(check_mod.graph)\n+            torch._C._jit_pass_decay_types(check_canonicalized)\n+\n+            graph_diff_errors = None\n+            if (str(mod_canonicalized) != str(check_canonicalized)):\n+                import difflib\n+                graph_diff = difflib.ndiff(str(mod_canonicalized).splitlines(1),\n+                                           str(check_canonicalized).splitlines(1))", "path": "torch/jit/__init__.py", "position": null, "original_position": 52, "commit_id": "dc008cc6bf20f723ea9b9f4e419e039aec3224d7", "original_commit_id": "dd7bd71c4f7272b568d007a717477da7c86f5b0a", "user": {"login": "apaszke", "id": 4583066, "node_id": "MDQ6VXNlcjQ1ODMwNjY=", "avatar_url": "https://avatars3.githubusercontent.com/u/4583066?v=4", "gravatar_id": "", "url": "https://api.github.com/users/apaszke", "html_url": "https://github.com/apaszke", "followers_url": "https://api.github.com/users/apaszke/followers", "following_url": "https://api.github.com/users/apaszke/following{/other_user}", "gists_url": "https://api.github.com/users/apaszke/gists{/gist_id}", "starred_url": "https://api.github.com/users/apaszke/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/apaszke/subscriptions", "organizations_url": "https://api.github.com/users/apaszke/orgs", "repos_url": "https://api.github.com/users/apaszke/repos", "events_url": "https://api.github.com/users/apaszke/events{/privacy}", "received_events_url": "https://api.github.com/users/apaszke/received_events", "type": "User", "site_admin": false}, "body": "Did you really mean to pass this `1` as a value for a boolean argument? Please don't do that, and say `keepends=True` explicitly", "created_at": "2018-08-27T19:51:08Z", "updated_at": "2018-11-23T15:50:05Z", "html_url": "https://github.com/pytorch/pytorch/pull/10841#discussion_r213093486", "pull_request_url": "https://api.github.com/repos/pytorch/pytorch/pulls/10841", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/213093486"}, "html": {"href": "https://github.com/pytorch/pytorch/pull/10841#discussion_r213093486"}, "pull_request": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/10841"}}, "body_html": "<p>Did you really mean to pass this <code>1</code> as a value for a boolean argument? Please don't do that, and say <code>keepends=True</code> explicitly</p>", "body_text": "Did you really mean to pass this 1 as a value for a boolean argument? Please don't do that, and say keepends=True explicitly"}