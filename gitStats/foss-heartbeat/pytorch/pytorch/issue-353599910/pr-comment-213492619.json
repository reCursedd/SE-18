{"url": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/213492619", "pull_request_review_id": 150341433, "id": 213492619, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIxMzQ5MjYxOQ==", "diff_hunk": "@@ -622,35 +622,34 @@ void Node::findSchema() const {\n \n namespace {\n \n-const std::unordered_set<Symbol>& nondeterminstic_aten_ops() {\n-  static std::unordered_set<Symbol> nondeterministic_ops = {\n-    aten::dropout,\n-    aten::batch_norm,\n-    aten::_fused_dropout,\n-    aten::_standard_gamma,\n-    aten::_th_bernoulli,\n-    aten::bernoulli,\n-    aten::multinomial,\n-    aten::normal,\n-    aten::poisson,\n-    aten::rrelu,\n-    aten::rrelu_with_noise\n+const OperatorSet& nondeterminstic_aten_ops() {\n+  static OperatorSet nondeterministic_ops = {\n+    \"aten::dropout(Tensor input, float p, int train) -> Tensor\",\n+    \"aten::_fused_dropout(Tensor self, float p, Tensor generator) -> (Tensor, Tensor)\",\n+    \"aten::_standard_gamma(Tensor self, Tensor generator) -> Tensor\",\n+    \"aten::_th_bernoulli(Tensor self, *, Tensor generator) -> Tensor\",\n+    \"aten::bernoulli(Tensor self) -> Tensor\",\n+    \"aten::bernoulli(Tensor self, Tensor p, Tensor generator) -> Tensor\",\n+    \"aten::bernoulli(Tensor self, float p, Tensor generator) -> Tensor\",\n+    \"aten::multinomial(Tensor self, int num_samples, int replacement, *, Tensor generator) -> Tensor\",\n+    \"aten::normal(Tensor mean, Tensor std, *, Tensor generator) -> Tensor\",\n+    \"aten::normal(float mean, Tensor std, *, Tensor generator) -> Tensor\",\n+    \"aten::normal(Tensor mean, float std, *, Tensor generator) -> Tensor\",\n+    \"aten::poisson(Tensor self, Tensor generator) -> Tensor\",\n+    \"aten::rrelu(Tensor self, Scalar lower, Scalar upper, int training, Tensor generator) -> Tensor\",\n+    \"aten::rrelu_with_noise(Tensor self, Tensor noise, Scalar lower, Scalar upper, int training, Tensor generator) -> Tensor\"", "path": "torch/csrc/jit/ir.cpp", "position": null, "original_position": 41, "commit_id": "dc008cc6bf20f723ea9b9f4e419e039aec3224d7", "original_commit_id": "9fb01a7baac90ffdb104e65f8f455faf8841bc9d", "user": {"login": "zdevito", "id": 370202, "node_id": "MDQ6VXNlcjM3MDIwMg==", "avatar_url": "https://avatars0.githubusercontent.com/u/370202?v=4", "gravatar_id": "", "url": "https://api.github.com/users/zdevito", "html_url": "https://github.com/zdevito", "followers_url": "https://api.github.com/users/zdevito/followers", "following_url": "https://api.github.com/users/zdevito/following{/other_user}", "gists_url": "https://api.github.com/users/zdevito/gists{/gist_id}", "starred_url": "https://api.github.com/users/zdevito/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/zdevito/subscriptions", "organizations_url": "https://api.github.com/users/zdevito/orgs", "repos_url": "https://api.github.com/users/zdevito/repos", "events_url": "https://api.github.com/users/zdevito/events{/privacy}", "received_events_url": "https://api.github.com/users/zdevito/received_events", "type": "User", "site_admin": false}, "body": "Don't we also need rand? and randn?", "created_at": "2018-08-28T22:27:14Z", "updated_at": "2018-11-23T15:50:12Z", "html_url": "https://github.com/pytorch/pytorch/pull/10841#discussion_r213492619", "pull_request_url": "https://api.github.com/repos/pytorch/pytorch/pulls/10841", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/213492619"}, "html": {"href": "https://github.com/pytorch/pytorch/pull/10841#discussion_r213492619"}, "pull_request": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/10841"}}, "body_html": "<p>Don't we also need rand? and randn?</p>", "body_text": "Don't we also need rand? and randn?"}