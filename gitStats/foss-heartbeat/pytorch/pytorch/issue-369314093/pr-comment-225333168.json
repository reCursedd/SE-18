{"url": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/225333168", "pull_request_review_id": 164915550, "id": 225333168, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIyNTMzMzE2OA==", "diff_hunk": "@@ -145,6 +146,63 @@ inline bool operator!=(const Type & lhs, const Type & rhs) {\n   return !(lhs == rhs);\n }\n \n+struct OptionalType;\n+using OptionalTypePtr = std::shared_ptr<OptionalType>;\n+\n+struct OptionalType: public Type {\n+  // It's not exactly a singleton, but there should be exactly once instance of\n+  // Optional[T] for every T\n+  static constexpr bool is_singleton = true;\n+  friend struct Type;\n+  template<typename ... T>\n+  static OptionalTypePtr create( T&& ... all ) {\n+    return OptionalTypePtr(new OptionalType( std::forward<T>(all)... )); // NOLINT(modernize-make-shared)", "path": "torch/csrc/jit/type.h", "position": null, "original_position": 22, "commit_id": "621442f7e5cfb1cae903d3b4e44ba2ded94038fd", "original_commit_id": "6b10158b02c3909ac87724ef9cc1fbcb34a14403", "user": {"login": "zdevito", "id": 370202, "node_id": "MDQ6VXNlcjM3MDIwMg==", "avatar_url": "https://avatars0.githubusercontent.com/u/370202?v=4", "gravatar_id": "", "url": "https://api.github.com/users/zdevito", "html_url": "https://github.com/zdevito", "followers_url": "https://api.github.com/users/zdevito/followers", "following_url": "https://api.github.com/users/zdevito/following{/other_user}", "gists_url": "https://api.github.com/users/zdevito/gists{/gist_id}", "starred_url": "https://api.github.com/users/zdevito/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/zdevito/subscriptions", "organizations_url": "https://api.github.com/users/zdevito/orgs", "repos_url": "https://api.github.com/users/zdevito/repos", "events_url": "https://api.github.com/users/zdevito/events{/privacy}", "received_events_url": "https://api.github.com/users/zdevito/received_events", "type": "User", "site_admin": false}, "body": "nit: This stuff is hard to read and doesn't buy us much compared to:\r\n\r\n```\r\nstatic OptionalTypePtr create(TypePtr element) {\r\n    return OptionalTypePtr(new OptionalType( std::move(element) ));\r\n```", "created_at": "2018-10-15T22:08:33Z", "updated_at": "2018-11-23T15:53:02Z", "html_url": "https://github.com/pytorch/pytorch/pull/12582#discussion_r225333168", "pull_request_url": "https://api.github.com/repos/pytorch/pytorch/pulls/12582", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/225333168"}, "html": {"href": "https://github.com/pytorch/pytorch/pull/12582#discussion_r225333168"}, "pull_request": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/12582"}}, "body_html": "<p>nit: This stuff is hard to read and doesn't buy us much compared to:</p>\n<pre><code>static OptionalTypePtr create(TypePtr element) {\n    return OptionalTypePtr(new OptionalType( std::move(element) ));\n</code></pre>", "body_text": "nit: This stuff is hard to read and doesn't buy us much compared to:\nstatic OptionalTypePtr create(TypePtr element) {\n    return OptionalTypePtr(new OptionalType( std::move(element) ));"}