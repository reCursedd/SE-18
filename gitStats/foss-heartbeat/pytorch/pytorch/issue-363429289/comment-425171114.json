{"url": "https://api.github.com/repos/pytorch/pytorch/issues/comments/425171114", "html_url": "https://github.com/pytorch/pytorch/issues/12042#issuecomment-425171114", "issue_url": "https://api.github.com/repos/pytorch/pytorch/issues/12042", "id": 425171114, "node_id": "MDEyOklzc3VlQ29tbWVudDQyNTE3MTExNA==", "user": {"login": "deepakn94", "id": 2724038, "node_id": "MDQ6VXNlcjI3MjQwMzg=", "avatar_url": "https://avatars0.githubusercontent.com/u/2724038?v=4", "gravatar_id": "", "url": "https://api.github.com/users/deepakn94", "html_url": "https://github.com/deepakn94", "followers_url": "https://api.github.com/users/deepakn94/followers", "following_url": "https://api.github.com/users/deepakn94/following{/other_user}", "gists_url": "https://api.github.com/users/deepakn94/gists{/gist_id}", "starred_url": "https://api.github.com/users/deepakn94/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/deepakn94/subscriptions", "organizations_url": "https://api.github.com/users/deepakn94/orgs", "repos_url": "https://api.github.com/users/deepakn94/repos", "events_url": "https://api.github.com/users/deepakn94/events{/privacy}", "received_events_url": "https://api.github.com/users/deepakn94/received_events", "type": "User", "site_admin": false}, "created_at": "2018-09-27T17:11:42Z", "updated_at": "2018-09-27T17:11:42Z", "author_association": "NONE", "body_html": "<p>That unfortunately didn't work. I applied the patch to the old commit (<code>6993e4a</code>).</p>\n<pre><code>&gt;&gt;&gt; torch.load('model_best.pth.tar')\nTraceback (most recent call last):\n  File \"&lt;stdin&gt;\", line 1, in &lt;module&gt;\n  File \"/home/ubuntu/anaconda3/lib/python3.6/site-packages/torch/serialization.py\", line 303, in load\n    return _load(f, map_location, pickle_module)\n  File \"/home/ubuntu/anaconda3/lib/python3.6/site-packages/torch/serialization.py\", line 476, in _load\n    deserialized_objects[key]._set_from_file(f, offset, f_is_real_file)\nRuntimeError: storage has wrong size: expected 2930331299881099915 got 128\n</code></pre>\n<pre><code>ubuntu@ip-172-31-93-108:~/pytorch$ git diff\ndiff --git a/torch/csrc/generic/serialization.cpp b/torch/csrc/generic/serialization.cpp\nindex 42dff61..0496311 100644\n--- a/torch/csrc/generic/serialization.cpp\n+++ b/torch/csrc/generic/serialization.cpp\n@@ -35,7 +35,7 @@ void THPStorage_(writeFileRaw)(THWStorage *self, io fd)\n       throw std::system_error(result, std::system_category());\n   } else {\n     int64_t buffer_size = std::min(size, (int64_t)5000);\n-    std::unique_ptr&lt;uint8_t[]&gt; le_buffer(new uint8_t[buffer_size * sizeof(real)]);\n+    std::unique_ptr&lt;char[]&gt; le_buffer(new char[buffer_size * sizeof(real)]);\n     for (int64_t i = 0; i &lt; size; i += buffer_size) {\n       size_t to_convert = std::min(size - i, buffer_size);\n       if (sizeof(real) == 2) {\n@@ -54,7 +54,19 @@ void THPStorage_(writeFileRaw)(THWStorage *self, io fd)\n             THPByteOrder::THP_LITTLE_ENDIAN,\n             to_convert);\n       }\n-      SYSCHECK(doWrite(fd, le_buffer.get(), to_convert * sizeof(real)));\n+      int64_t remaining = buffer_size * sizeof(real);\n+      char *bytes = le_buffer.get();\n+      while (remaining &gt; 0) {\n+        ssize_t result = doWrite(fd, bytes, to_convert * sizeof(real));\n+        if (result &lt; 0) {\n+          throw std::system_error(result, std::system_category());\n+        }\n+        bytes += result;\n+        remaining -= result;\n+      }\n+      if (remaining != 0) {\n+        throw std::system_error(result, std::system_category());\n+      }\n     }\n   }\n }\n</code></pre>\n<p>Uploaded checkpoint here: <a href=\"https://s3.amazonaws.com/distributed-pytorch-imagenet-runs/imagenet-16-new/run1/model_best.pth.tar\" rel=\"nofollow\">https://s3.amazonaws.com/distributed-pytorch-imagenet-runs/imagenet-16-new/run1/model_best.pth.tar</a></p>", "body_text": "That unfortunately didn't work. I applied the patch to the old commit (6993e4a).\n>>> torch.load('model_best.pth.tar')\nTraceback (most recent call last):\n  File \"<stdin>\", line 1, in <module>\n  File \"/home/ubuntu/anaconda3/lib/python3.6/site-packages/torch/serialization.py\", line 303, in load\n    return _load(f, map_location, pickle_module)\n  File \"/home/ubuntu/anaconda3/lib/python3.6/site-packages/torch/serialization.py\", line 476, in _load\n    deserialized_objects[key]._set_from_file(f, offset, f_is_real_file)\nRuntimeError: storage has wrong size: expected 2930331299881099915 got 128\n\nubuntu@ip-172-31-93-108:~/pytorch$ git diff\ndiff --git a/torch/csrc/generic/serialization.cpp b/torch/csrc/generic/serialization.cpp\nindex 42dff61..0496311 100644\n--- a/torch/csrc/generic/serialization.cpp\n+++ b/torch/csrc/generic/serialization.cpp\n@@ -35,7 +35,7 @@ void THPStorage_(writeFileRaw)(THWStorage *self, io fd)\n       throw std::system_error(result, std::system_category());\n   } else {\n     int64_t buffer_size = std::min(size, (int64_t)5000);\n-    std::unique_ptr<uint8_t[]> le_buffer(new uint8_t[buffer_size * sizeof(real)]);\n+    std::unique_ptr<char[]> le_buffer(new char[buffer_size * sizeof(real)]);\n     for (int64_t i = 0; i < size; i += buffer_size) {\n       size_t to_convert = std::min(size - i, buffer_size);\n       if (sizeof(real) == 2) {\n@@ -54,7 +54,19 @@ void THPStorage_(writeFileRaw)(THWStorage *self, io fd)\n             THPByteOrder::THP_LITTLE_ENDIAN,\n             to_convert);\n       }\n-      SYSCHECK(doWrite(fd, le_buffer.get(), to_convert * sizeof(real)));\n+      int64_t remaining = buffer_size * sizeof(real);\n+      char *bytes = le_buffer.get();\n+      while (remaining > 0) {\n+        ssize_t result = doWrite(fd, bytes, to_convert * sizeof(real));\n+        if (result < 0) {\n+          throw std::system_error(result, std::system_category());\n+        }\n+        bytes += result;\n+        remaining -= result;\n+      }\n+      if (remaining != 0) {\n+        throw std::system_error(result, std::system_category());\n+      }\n     }\n   }\n }\n\nUploaded checkpoint here: https://s3.amazonaws.com/distributed-pytorch-imagenet-runs/imagenet-16-new/run1/model_best.pth.tar", "body": "That unfortunately didn't work. I applied the patch to the old commit (`6993e4a`).\r\n\r\n```\r\n>>> torch.load('model_best.pth.tar')\r\nTraceback (most recent call last):\r\n  File \"<stdin>\", line 1, in <module>\r\n  File \"/home/ubuntu/anaconda3/lib/python3.6/site-packages/torch/serialization.py\", line 303, in load\r\n    return _load(f, map_location, pickle_module)\r\n  File \"/home/ubuntu/anaconda3/lib/python3.6/site-packages/torch/serialization.py\", line 476, in _load\r\n    deserialized_objects[key]._set_from_file(f, offset, f_is_real_file)\r\nRuntimeError: storage has wrong size: expected 2930331299881099915 got 128\r\n```\r\n\r\n```\r\nubuntu@ip-172-31-93-108:~/pytorch$ git diff\r\ndiff --git a/torch/csrc/generic/serialization.cpp b/torch/csrc/generic/serialization.cpp\r\nindex 42dff61..0496311 100644\r\n--- a/torch/csrc/generic/serialization.cpp\r\n+++ b/torch/csrc/generic/serialization.cpp\r\n@@ -35,7 +35,7 @@ void THPStorage_(writeFileRaw)(THWStorage *self, io fd)\r\n       throw std::system_error(result, std::system_category());\r\n   } else {\r\n     int64_t buffer_size = std::min(size, (int64_t)5000);\r\n-    std::unique_ptr<uint8_t[]> le_buffer(new uint8_t[buffer_size * sizeof(real)]);\r\n+    std::unique_ptr<char[]> le_buffer(new char[buffer_size * sizeof(real)]);\r\n     for (int64_t i = 0; i < size; i += buffer_size) {\r\n       size_t to_convert = std::min(size - i, buffer_size);\r\n       if (sizeof(real) == 2) {\r\n@@ -54,7 +54,19 @@ void THPStorage_(writeFileRaw)(THWStorage *self, io fd)\r\n             THPByteOrder::THP_LITTLE_ENDIAN,\r\n             to_convert);\r\n       }\r\n-      SYSCHECK(doWrite(fd, le_buffer.get(), to_convert * sizeof(real)));\r\n+      int64_t remaining = buffer_size * sizeof(real);\r\n+      char *bytes = le_buffer.get();\r\n+      while (remaining > 0) {\r\n+        ssize_t result = doWrite(fd, bytes, to_convert * sizeof(real));\r\n+        if (result < 0) {\r\n+          throw std::system_error(result, std::system_category());\r\n+        }\r\n+        bytes += result;\r\n+        remaining -= result;\r\n+      }\r\n+      if (remaining != 0) {\r\n+        throw std::system_error(result, std::system_category());\r\n+      }\r\n     }\r\n   }\r\n }\r\n```\r\n\r\nUploaded checkpoint here: https://s3.amazonaws.com/distributed-pytorch-imagenet-runs/imagenet-16-new/run1/model_best.pth.tar"}