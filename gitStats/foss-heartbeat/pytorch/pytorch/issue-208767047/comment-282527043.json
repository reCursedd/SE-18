{"url": "https://api.github.com/repos/pytorch/pytorch/issues/comments/282527043", "html_url": "https://github.com/pytorch/pytorch/pull/792#issuecomment-282527043", "issue_url": "https://api.github.com/repos/pytorch/pytorch/issues/792", "id": 282527043, "node_id": "MDEyOklzc3VlQ29tbWVudDI4MjUyNzA0Mw==", "user": {"login": "goelhardik", "id": 15823341, "node_id": "MDQ6VXNlcjE1ODIzMzQx", "avatar_url": "https://avatars3.githubusercontent.com/u/15823341?v=4", "gravatar_id": "", "url": "https://api.github.com/users/goelhardik", "html_url": "https://github.com/goelhardik", "followers_url": "https://api.github.com/users/goelhardik/followers", "following_url": "https://api.github.com/users/goelhardik/following{/other_user}", "gists_url": "https://api.github.com/users/goelhardik/gists{/gist_id}", "starred_url": "https://api.github.com/users/goelhardik/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/goelhardik/subscriptions", "organizations_url": "https://api.github.com/users/goelhardik/orgs", "repos_url": "https://api.github.com/users/goelhardik/repos", "events_url": "https://api.github.com/users/goelhardik/events{/privacy}", "received_events_url": "https://api.github.com/users/goelhardik/received_events", "type": "User", "site_admin": false}, "created_at": "2017-02-26T02:10:27Z", "updated_at": "2017-02-26T02:10:27Z", "author_association": "CONTRIBUTOR", "body_html": "<p>Adding <code>LIBRARY_STATE</code> is not fixing this. For CUDA, it is trying to pass the <code>LIBRARY_STATE</code> as the first argument to my function <code>THTensor_(transpose_neg)</code>, which does not accept that.</p>\n<p>I think either this needs to go to the backend libs as a wrapper like <code>newTranspose</code> or maybe a new implementation of the fix using <code>before_call</code> etc.</p>", "body_text": "Adding LIBRARY_STATE is not fixing this. For CUDA, it is trying to pass the LIBRARY_STATE as the first argument to my function THTensor_(transpose_neg), which does not accept that.\nI think either this needs to go to the backend libs as a wrapper like newTranspose or maybe a new implementation of the fix using before_call etc.", "body": "Adding `LIBRARY_STATE` is not fixing this. For CUDA, it is trying to pass the `LIBRARY_STATE` as the first argument to my function `THTensor_(transpose_neg)`, which does not accept that.\r\n\r\nI think either this needs to go to the backend libs as a wrapper like `newTranspose` or maybe a new implementation of the fix using `before_call` etc."}