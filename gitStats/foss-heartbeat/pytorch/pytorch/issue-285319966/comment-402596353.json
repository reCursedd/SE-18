{"url": "https://api.github.com/repos/pytorch/pytorch/issues/comments/402596353", "html_url": "https://github.com/pytorch/pytorch/pull/4429#issuecomment-402596353", "issue_url": "https://api.github.com/repos/pytorch/pytorch/issues/4429", "id": 402596353, "node_id": "MDEyOklzc3VlQ29tbWVudDQwMjU5NjM1Mw==", "user": {"login": "silver-rush", "id": 7107196, "node_id": "MDQ6VXNlcjcxMDcxOTY=", "avatar_url": "https://avatars3.githubusercontent.com/u/7107196?v=4", "gravatar_id": "", "url": "https://api.github.com/users/silver-rush", "html_url": "https://github.com/silver-rush", "followers_url": "https://api.github.com/users/silver-rush/followers", "following_url": "https://api.github.com/users/silver-rush/following{/other_user}", "gists_url": "https://api.github.com/users/silver-rush/gists{/gist_id}", "starred_url": "https://api.github.com/users/silver-rush/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/silver-rush/subscriptions", "organizations_url": "https://api.github.com/users/silver-rush/orgs", "repos_url": "https://api.github.com/users/silver-rush/repos", "events_url": "https://api.github.com/users/silver-rush/events{/privacy}", "received_events_url": "https://api.github.com/users/silver-rush/received_events", "type": "User", "site_admin": false}, "created_at": "2018-07-05T03:23:48Z", "updated_at": "2018-07-05T03:23:48Z", "author_association": "NONE", "body_html": "<p><a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=3158606\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/jpeg729\">@jpeg729</a> As a workaround using the current code here, will it correctly apply scheduling on the weight decay if I set</p>\n<p><code>weight_decay = actual_weight_decay / initial_lr</code><br>\nand correspondingly, in the optimizer,<br>\n<code>p.data.add_(-group['weight_decay'] * group['lr'], p.data)</code></p>\n<p>Such that the initial learning rate get cancelled out and is left with <code>eta</code>?</p>", "body_text": "@jpeg729 As a workaround using the current code here, will it correctly apply scheduling on the weight decay if I set\nweight_decay = actual_weight_decay / initial_lr\nand correspondingly, in the optimizer,\np.data.add_(-group['weight_decay'] * group['lr'], p.data)\nSuch that the initial learning rate get cancelled out and is left with eta?", "body": "@jpeg729 As a workaround using the current code here, will it correctly apply scheduling on the weight decay if I set\r\n\r\n`weight_decay = actual_weight_decay / initial_lr`\r\nand correspondingly, in the optimizer, \r\n`p.data.add_(-group['weight_decay'] * group['lr'], p.data)`\r\n\r\nSuch that the initial learning rate get cancelled out and is left with `eta`?"}