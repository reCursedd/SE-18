{"url": "https://api.github.com/repos/pytorch/pytorch/issues/3402", "repository_url": "https://api.github.com/repos/pytorch/pytorch", "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/3402/labels{/name}", "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/3402/comments", "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/3402/events", "html_url": "https://github.com/pytorch/pytorch/issues/3402", "id": 270094592, "node_id": "MDU6SXNzdWUyNzAwOTQ1OTI=", "number": 3402, "title": "Numerical instability of core algorithms", "user": {"login": "Atcold", "id": 2119355, "node_id": "MDQ6VXNlcjIxMTkzNTU=", "avatar_url": "https://avatars2.githubusercontent.com/u/2119355?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Atcold", "html_url": "https://github.com/Atcold", "followers_url": "https://api.github.com/users/Atcold/followers", "following_url": "https://api.github.com/users/Atcold/following{/other_user}", "gists_url": "https://api.github.com/users/Atcold/gists{/gist_id}", "starred_url": "https://api.github.com/users/Atcold/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Atcold/subscriptions", "organizations_url": "https://api.github.com/users/Atcold/orgs", "repos_url": "https://api.github.com/users/Atcold/repos", "events_url": "https://api.github.com/users/Atcold/events{/privacy}", "received_events_url": "https://api.github.com/users/Atcold/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2017-10-31T19:43:32Z", "updated_at": "2017-11-06T21:00:37Z", "closed_at": "2017-11-06T21:00:37Z", "author_association": "CONTRIBUTOR", "body_html": "<p>There are (at least) a couple examples of classical <a href=\"https://en.wikipedia.org/wiki/Numerical_stability\" rel=\"nofollow\">numerical instability</a> to be found in <code>THTensorMath.c</code> algorithm implementations.</p>\n<p>More precisely, what it has been done <a href=\"https://github.com/pytorch/pytorch/blob/master/torch/lib/TH/generic/THTensorMath.c#L3090-L3116\">here</a> is simply criminal, from a stability point of view.<br>\nSame thing applies <a href=\"https://github.com/pytorch/pytorch/blob/master/torch/lib/TH/generic/THTensorMath.c#L3045-L3071\">here</a>, for example.<br>\nSee <a href=\"https://en.wikipedia.org/wiki/Algorithms_for_calculating_variance\" rel=\"nofollow\">here</a> for better implementations.</p>\n<p>I fixed a similar issue, a while ago, in the main <em>Torch</em> core library.<br>\nIt is my belief that more examples of such bad behaviour are available, if one would sift through the code.</p>", "body_text": "There are (at least) a couple examples of classical numerical instability to be found in THTensorMath.c algorithm implementations.\nMore precisely, what it has been done here is simply criminal, from a stability point of view.\nSame thing applies here, for example.\nSee here for better implementations.\nI fixed a similar issue, a while ago, in the main Torch core library.\nIt is my belief that more examples of such bad behaviour are available, if one would sift through the code.", "body": "There are (at least) a couple examples of classical [numerical instability](https://en.wikipedia.org/wiki/Numerical_stability) to be found in `THTensorMath.c` algorithm implementations.\r\n\r\nMore precisely, what it has been done [here](https://github.com/pytorch/pytorch/blob/master/torch/lib/TH/generic/THTensorMath.c#L3090-L3116) is simply criminal, from a stability point of view.\r\nSame thing applies [here](https://github.com/pytorch/pytorch/blob/master/torch/lib/TH/generic/THTensorMath.c#L3045-L3071), for example.\r\nSee [here](https://en.wikipedia.org/wiki/Algorithms_for_calculating_variance) for better implementations.\r\n\r\nI fixed a similar issue, a while ago, in the main *Torch* core library.\r\nIt is my belief that more examples of such bad behaviour are available, if one would sift through the code."}