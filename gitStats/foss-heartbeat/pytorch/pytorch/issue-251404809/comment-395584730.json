{"url": "https://api.github.com/repos/pytorch/pytorch/issues/comments/395584730", "html_url": "https://github.com/pytorch/pytorch/issues/2486#issuecomment-395584730", "issue_url": "https://api.github.com/repos/pytorch/pytorch/issues/2486", "id": 395584730, "node_id": "MDEyOklzc3VlQ29tbWVudDM5NTU4NDczMA==", "user": {"login": "ibmua", "id": 2233511, "node_id": "MDQ6VXNlcjIyMzM1MTE=", "avatar_url": "https://avatars3.githubusercontent.com/u/2233511?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ibmua", "html_url": "https://github.com/ibmua", "followers_url": "https://api.github.com/users/ibmua/followers", "following_url": "https://api.github.com/users/ibmua/following{/other_user}", "gists_url": "https://api.github.com/users/ibmua/gists{/gist_id}", "starred_url": "https://api.github.com/users/ibmua/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ibmua/subscriptions", "organizations_url": "https://api.github.com/users/ibmua/orgs", "repos_url": "https://api.github.com/users/ibmua/repos", "events_url": "https://api.github.com/users/ibmua/events{/privacy}", "received_events_url": "https://api.github.com/users/ibmua/received_events", "type": "User", "site_admin": false}, "created_at": "2018-06-07T22:23:52Z", "updated_at": "2018-06-07T22:23:52Z", "author_association": "NONE", "body_html": "<p>Fixing <a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=1353511\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/vabh\">@vabh</a>'s solution to actually work with batches</p>\n<pre><code>class Lin_View(nn.Module):\n\tdef __init__(self):\n\t\tsuper(Lin_View, self).__init__()\n\tdef forward(self, x):\n\t\treturn x.view(x.size()[0], -1)\n</code></pre>", "body_text": "Fixing @vabh's solution to actually work with batches\nclass Lin_View(nn.Module):\n\tdef __init__(self):\n\t\tsuper(Lin_View, self).__init__()\n\tdef forward(self, x):\n\t\treturn x.view(x.size()[0], -1)", "body": "Fixing @vabh's solution to actually work with batches\r\n```\r\nclass Lin_View(nn.Module):\r\n\tdef __init__(self):\r\n\t\tsuper(Lin_View, self).__init__()\r\n\tdef forward(self, x):\r\n\t\treturn x.view(x.size()[0], -1)\r\n```"}