{"url": "https://api.github.com/repos/pytorch/pytorch/issues/comments/276629160", "html_url": "https://github.com/pytorch/pytorch/issues/665#issuecomment-276629160", "issue_url": "https://api.github.com/repos/pytorch/pytorch/issues/665", "id": 276629160, "node_id": "MDEyOklzc3VlQ29tbWVudDI3NjYyOTE2MA==", "user": {"login": "SudarAbisheck", "id": 6151411, "node_id": "MDQ6VXNlcjYxNTE0MTE=", "avatar_url": "https://avatars1.githubusercontent.com/u/6151411?v=4", "gravatar_id": "", "url": "https://api.github.com/users/SudarAbisheck", "html_url": "https://github.com/SudarAbisheck", "followers_url": "https://api.github.com/users/SudarAbisheck/followers", "following_url": "https://api.github.com/users/SudarAbisheck/following{/other_user}", "gists_url": "https://api.github.com/users/SudarAbisheck/gists{/gist_id}", "starred_url": "https://api.github.com/users/SudarAbisheck/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/SudarAbisheck/subscriptions", "organizations_url": "https://api.github.com/users/SudarAbisheck/orgs", "repos_url": "https://api.github.com/users/SudarAbisheck/repos", "events_url": "https://api.github.com/users/SudarAbisheck/events{/privacy}", "received_events_url": "https://api.github.com/users/SudarAbisheck/received_events", "type": "User", "site_admin": false}, "created_at": "2017-02-01T10:57:37Z", "updated_at": "2017-02-01T10:57:37Z", "author_association": "NONE", "body_html": "<p>I found a workaround from the cuTorch project <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load issue title\" data-id=\"166779430\" data-permission-text=\"Issue title is private\" data-url=\"https://github.com/torch/cutorch/issues/450\" data-hovercard-type=\"issue\" data-hovercard-url=\"/torch/cutorch/issues/450/hovercard?comment_id=236061515&amp;comment_type=issue_comment\" href=\"https://github.com/torch/cutorch/issues/450#issuecomment-236061515\">torch/cutorch#450 (comment)</a></p>\n<p>and added the following if condition <code>cmake/FindCUDA/FindCUDA/select_compute_arch.cmake</code></p>\n<pre><code>## previous if conditions\n. . .\nelseif(${arch_name} STREQUAL \"2.1(2.0)\")\n        set(arch_bin 2.0 \"2.1(2.0)\")\nelse()\n        message(SEND_ERROR \"Unknown CUDA Architecture Name ${arch_name} in CUDA_SELECT_NVCC_ARCH_FLAGS\")\n endif()\n</code></pre>\n<p>and it compiled smoothly</p>\n<pre><code>Autodetected CUDA architecture(s): 2.1(2.0)\n-- got cuda version 8.0\n-- Found CUDA with FP16 support, compiling with torch.CudaHalfTensor\n-- CUDA_NVCC_FLAGS:  -DTH_INDEX_BASE=0 -I/home/sudar/pytorch/torch/lib/tmp_install/include -I/home/sudar/pytorch/torch/lib/tmp_install/include/TH -I/home/sudar/pytorch/torch/lib/tmp_install/include/THC;-gencode;arch=compute_20,code=sm_20;-gencode;arch=compute_20,code=sm_21;-DCUDA_HAS_FP16=1\n-- THC_SO_VERSION: 1\n-- Configuring done\n-- Generating done\n-- Build files have been written to: /home/sudar/pytorch/torch/lib/build/THC\n[  1%] Building NVCC (Device) object CMakeFiles/THC.dir/THC_generated_THCReduceApplyUtils.cu.o\n[  2%] Building NVCC (Device) object CMakeFiles/THC.dir/THC_generated_THCHalf.cu.o\n[  3%] Building NVCC (Device) object CMakeFiles/THC.dir/THC_generated_THCBlas.cu.o\n[  5%] Building NVCC (Device) object CMakeFiles/THC.dir/THC_generated_THCSleep.cu.o\n</code></pre>", "body_text": "I found a workaround from the cuTorch project torch/cutorch#450 (comment)\nand added the following if condition cmake/FindCUDA/FindCUDA/select_compute_arch.cmake\n## previous if conditions\n. . .\nelseif(${arch_name} STREQUAL \"2.1(2.0)\")\n        set(arch_bin 2.0 \"2.1(2.0)\")\nelse()\n        message(SEND_ERROR \"Unknown CUDA Architecture Name ${arch_name} in CUDA_SELECT_NVCC_ARCH_FLAGS\")\n endif()\n\nand it compiled smoothly\nAutodetected CUDA architecture(s): 2.1(2.0)\n-- got cuda version 8.0\n-- Found CUDA with FP16 support, compiling with torch.CudaHalfTensor\n-- CUDA_NVCC_FLAGS:  -DTH_INDEX_BASE=0 -I/home/sudar/pytorch/torch/lib/tmp_install/include -I/home/sudar/pytorch/torch/lib/tmp_install/include/TH -I/home/sudar/pytorch/torch/lib/tmp_install/include/THC;-gencode;arch=compute_20,code=sm_20;-gencode;arch=compute_20,code=sm_21;-DCUDA_HAS_FP16=1\n-- THC_SO_VERSION: 1\n-- Configuring done\n-- Generating done\n-- Build files have been written to: /home/sudar/pytorch/torch/lib/build/THC\n[  1%] Building NVCC (Device) object CMakeFiles/THC.dir/THC_generated_THCReduceApplyUtils.cu.o\n[  2%] Building NVCC (Device) object CMakeFiles/THC.dir/THC_generated_THCHalf.cu.o\n[  3%] Building NVCC (Device) object CMakeFiles/THC.dir/THC_generated_THCBlas.cu.o\n[  5%] Building NVCC (Device) object CMakeFiles/THC.dir/THC_generated_THCSleep.cu.o", "body": "I found a workaround from the cuTorch project https://github.com/torch/cutorch/issues/450#issuecomment-236061515\r\n\r\nand added the following if condition `cmake/FindCUDA/FindCUDA/select_compute_arch.cmake`\r\n```\r\n## previous if conditions\r\n. . .\r\nelseif(${arch_name} STREQUAL \"2.1(2.0)\")\r\n        set(arch_bin 2.0 \"2.1(2.0)\")\r\nelse()\r\n        message(SEND_ERROR \"Unknown CUDA Architecture Name ${arch_name} in CUDA_SELECT_NVCC_ARCH_FLAGS\")\r\n endif()\r\n```\r\nand it compiled smoothly\r\n```\r\nAutodetected CUDA architecture(s): 2.1(2.0)\r\n-- got cuda version 8.0\r\n-- Found CUDA with FP16 support, compiling with torch.CudaHalfTensor\r\n-- CUDA_NVCC_FLAGS:  -DTH_INDEX_BASE=0 -I/home/sudar/pytorch/torch/lib/tmp_install/include -I/home/sudar/pytorch/torch/lib/tmp_install/include/TH -I/home/sudar/pytorch/torch/lib/tmp_install/include/THC;-gencode;arch=compute_20,code=sm_20;-gencode;arch=compute_20,code=sm_21;-DCUDA_HAS_FP16=1\r\n-- THC_SO_VERSION: 1\r\n-- Configuring done\r\n-- Generating done\r\n-- Build files have been written to: /home/sudar/pytorch/torch/lib/build/THC\r\n[  1%] Building NVCC (Device) object CMakeFiles/THC.dir/THC_generated_THCReduceApplyUtils.cu.o\r\n[  2%] Building NVCC (Device) object CMakeFiles/THC.dir/THC_generated_THCHalf.cu.o\r\n[  3%] Building NVCC (Device) object CMakeFiles/THC.dir/THC_generated_THCBlas.cu.o\r\n[  5%] Building NVCC (Device) object CMakeFiles/THC.dir/THC_generated_THCSleep.cu.o\r\n```"}