{"url": "https://api.github.com/repos/pytorch/pytorch/issues/comments/428126634", "html_url": "https://github.com/pytorch/pytorch/issues/4375#issuecomment-428126634", "issue_url": "https://api.github.com/repos/pytorch/pytorch/issues/4375", "id": 428126634, "node_id": "MDEyOklzc3VlQ29tbWVudDQyODEyNjYzNA==", "user": {"login": "mlinxiang", "id": 6283983, "node_id": "MDQ6VXNlcjYyODM5ODM=", "avatar_url": "https://avatars0.githubusercontent.com/u/6283983?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mlinxiang", "html_url": "https://github.com/mlinxiang", "followers_url": "https://api.github.com/users/mlinxiang/followers", "following_url": "https://api.github.com/users/mlinxiang/following{/other_user}", "gists_url": "https://api.github.com/users/mlinxiang/gists{/gist_id}", "starred_url": "https://api.github.com/users/mlinxiang/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mlinxiang/subscriptions", "organizations_url": "https://api.github.com/users/mlinxiang/orgs", "repos_url": "https://api.github.com/users/mlinxiang/repos", "events_url": "https://api.github.com/users/mlinxiang/events{/privacy}", "received_events_url": "https://api.github.com/users/mlinxiang/received_events", "type": "User", "site_admin": false}, "created_at": "2018-10-09T09:35:39Z", "updated_at": "2018-10-09T09:35:39Z", "author_association": "NONE", "body_html": "<p><a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=25361013\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/uhvardhan\">@uhvardhan</a><br>\nfirst not use DataParallel to load the model</p>\n<p>example:<br>\n#model= torch.nn.parallel.DataParallel(model, device_ids = [0])<br>\n#model_parameters = self.load_network(model, 'G', 'best_vanila')<br>\nmodel_parameters = self.load_network(model, 'G', 'best_generalization')</p>", "body_text": "@uhvardhan\nfirst not use DataParallel to load the model\nexample:\n#model= torch.nn.parallel.DataParallel(model, device_ids = [0])\n#model_parameters = self.load_network(model, 'G', 'best_vanila')\nmodel_parameters = self.load_network(model, 'G', 'best_generalization')", "body": "@uhvardhan \r\nfirst not use DataParallel to load the model\r\n\r\nexample:\r\n #model= torch.nn.parallel.DataParallel(model, device_ids = [0])\r\n        #model_parameters = self.load_network(model, 'G', 'best_vanila')\r\n        model_parameters = self.load_network(model, 'G', 'best_generalization')"}