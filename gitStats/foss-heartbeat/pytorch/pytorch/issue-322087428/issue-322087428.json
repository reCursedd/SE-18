{"url": "https://api.github.com/repos/pytorch/pytorch/issues/7484", "repository_url": "https://api.github.com/repos/pytorch/pytorch", "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/7484/labels{/name}", "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/7484/comments", "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/7484/events", "html_url": "https://github.com/pytorch/pytorch/issues/7484", "id": 322087428, "node_id": "MDU6SXNzdWUzMjIwODc0Mjg=", "number": 7484, "title": "confusing result between a tensor and singular tensor operation", "user": {"login": "wenyun", "id": 1531446, "node_id": "MDQ6VXNlcjE1MzE0NDY=", "avatar_url": "https://avatars1.githubusercontent.com/u/1531446?v=4", "gravatar_id": "", "url": "https://api.github.com/users/wenyun", "html_url": "https://github.com/wenyun", "followers_url": "https://api.github.com/users/wenyun/followers", "following_url": "https://api.github.com/users/wenyun/following{/other_user}", "gists_url": "https://api.github.com/users/wenyun/gists{/gist_id}", "starred_url": "https://api.github.com/users/wenyun/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/wenyun/subscriptions", "organizations_url": "https://api.github.com/users/wenyun/orgs", "repos_url": "https://api.github.com/users/wenyun/repos", "events_url": "https://api.github.com/users/wenyun/events{/privacy}", "received_events_url": "https://api.github.com/users/wenyun/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-05-10T21:14:23Z", "updated_at": "2018-05-10T21:33:34Z", "closed_at": null, "author_association": "NONE", "body_html": "<h2>Issue description</h2>\n<pre><code>&gt;&gt;&gt; a = torch.Tensor([1,2,3,4,5])\n&gt;&gt;&gt; a -= a[0]\n&gt;&gt;&gt; a\ntensor([ 0.,  2.,  3.,  4.,  5.])\n</code></pre>\n<p>This seems to be a very confusing result. Even though the below works. I think the above should at least do broadcasting or throw an exception? Now it is doing a confusing operation but silent.</p>\n<pre><code>&gt;&gt;&gt; a = torch.Tensor([1,2,3,4,5])\n&gt;&gt;&gt; a -= a[0].item()\n&gt;&gt;&gt; a\ntensor([ 0.,  1.,  2.,  3.,  4.])\n</code></pre>", "body_text": "Issue description\n>>> a = torch.Tensor([1,2,3,4,5])\n>>> a -= a[0]\n>>> a\ntensor([ 0.,  2.,  3.,  4.,  5.])\n\nThis seems to be a very confusing result. Even though the below works. I think the above should at least do broadcasting or throw an exception? Now it is doing a confusing operation but silent.\n>>> a = torch.Tensor([1,2,3,4,5])\n>>> a -= a[0].item()\n>>> a\ntensor([ 0.,  1.,  2.,  3.,  4.])", "body": "## Issue description\r\n\r\n\r\n    >>> a = torch.Tensor([1,2,3,4,5])\r\n    >>> a -= a[0]\r\n    >>> a\r\n    tensor([ 0.,  2.,  3.,  4.,  5.])\r\n\r\nThis seems to be a very confusing result. Even though the below works. I think the above should at least do broadcasting or throw an exception? Now it is doing a confusing operation but silent.\r\n\r\n    >>> a = torch.Tensor([1,2,3,4,5])\r\n    >>> a -= a[0].item()\r\n    >>> a\r\n    tensor([ 0.,  1.,  2.,  3.,  4.])\r\n\r\n"}