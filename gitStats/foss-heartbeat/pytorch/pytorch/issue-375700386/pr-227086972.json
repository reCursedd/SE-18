{"url": "https://api.github.com/repos/pytorch/pytorch/pulls/13337", "id": 227086972, "node_id": "MDExOlB1bGxSZXF1ZXN0MjI3MDg2OTcy", "html_url": "https://github.com/pytorch/pytorch/pull/13337", "diff_url": "https://github.com/pytorch/pytorch/pull/13337.diff", "patch_url": "https://github.com/pytorch/pytorch/pull/13337.patch", "issue_url": "https://api.github.com/repos/pytorch/pytorch/issues/13337", "number": 13337, "state": "open", "locked": false, "title": "[WIP] Strawman/Tracker for fixing grad copy elision + post hooks (e.g. DDP) interaction", "user": {"login": "mcarilli", "id": 7799218, "node_id": "MDQ6VXNlcjc3OTkyMTg=", "avatar_url": "https://avatars0.githubusercontent.com/u/7799218?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mcarilli", "html_url": "https://github.com/mcarilli", "followers_url": "https://api.github.com/users/mcarilli/followers", "following_url": "https://api.github.com/users/mcarilli/following{/other_user}", "gists_url": "https://api.github.com/users/mcarilli/gists{/gist_id}", "starred_url": "https://api.github.com/users/mcarilli/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mcarilli/subscriptions", "organizations_url": "https://api.github.com/users/mcarilli/orgs", "repos_url": "https://api.github.com/users/mcarilli/repos", "events_url": "https://api.github.com/users/mcarilli/events{/privacy}", "received_events_url": "https://api.github.com/users/mcarilli/received_events", "type": "User", "site_admin": false}, "body": "@FDecaYed wrote some nice logic into [accumulate_grad.cpp](https://github.com/pytorch/pytorch/blob/master/torch/csrc/autograd/functions/accumulate_grad.cpp#L44-L47) to elide unnecessary cloning or accumulation of incoming gradients.  Under certain conditions, the incoming gradient can be stolen and used directly.\r\n\r\nOne of these conditions is that the incoming gradient's [refcount must be 1](https://github.com/pytorch/pytorch/blob/master/torch/csrc/autograd/functions/accumulate_grad.cpp#L47).  Nothing else can be referencing the data (which might happen, for instance, for c = b + a:  the + operator's backward can simply pass c's incoming gradient tensor directly to both a and b's `AccumulateGrad` functions).\r\n\r\nHowever, if a given param's `AccumulateGrad` function has post hooks (like, for example, the allreduce hooks employed by both apex and c10d DDP), the autograd engine [stashes a copy](https://github.com/pytorch/pytorch/blob/master/torch/csrc/autograd/engine.cpp#L361) of the incoming gradients, which increments the refcount, causing `AccumulateGrad`'s hard check that the refcount is 1 to fail, and triggering an (in this case) unnecessary deep copy.  \r\n\r\nThis PR updates the logic to account for the possible presence of post hooks on the `AccumulateGrad` function.  I discussed it with @apaszke and we both agree it introduces a worrisome silent dependency between `engine.cpp` and `accumulate_grad.cpp`.  I've commented the relevant pieces, but I'm open to suggestions as to how this check could be made more agnostic to the implementation of `engine.cpp`.\r\n", "created_at": "2018-10-30T21:25:10Z", "updated_at": "2018-11-12T18:24:15Z", "closed_at": null, "merged_at": null, "merge_commit_sha": "ec52750632834638a731d55a634336ec7687022c", "assignee": null, "assignees": [], "requested_reviewers": [], "requested_teams": [], "labels": [], "milestone": null, "commits_url": "https://api.github.com/repos/pytorch/pytorch/pulls/13337/commits", "review_comments_url": "https://api.github.com/repos/pytorch/pytorch/pulls/13337/comments", "review_comment_url": "https://api.github.com/repos/pytorch/pytorch/pulls/comments{/number}", "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/13337/comments", "statuses_url": "https://api.github.com/repos/pytorch/pytorch/statuses/de7d182fee2cd1acca7ea73f42174adecdc7f4cd", "head": {"label": "mcarilli:WIP_accumulate_grad_fix", "ref": "WIP_accumulate_grad_fix", "sha": "de7d182fee2cd1acca7ea73f42174adecdc7f4cd", "user": {"login": "mcarilli", "id": 7799218, "node_id": "MDQ6VXNlcjc3OTkyMTg=", "avatar_url": "https://avatars0.githubusercontent.com/u/7799218?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mcarilli", "html_url": "https://github.com/mcarilli", "followers_url": "https://api.github.com/users/mcarilli/followers", "following_url": "https://api.github.com/users/mcarilli/following{/other_user}", "gists_url": "https://api.github.com/users/mcarilli/gists{/gist_id}", "starred_url": "https://api.github.com/users/mcarilli/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mcarilli/subscriptions", "organizations_url": "https://api.github.com/users/mcarilli/orgs", "repos_url": "https://api.github.com/users/mcarilli/repos", "events_url": "https://api.github.com/users/mcarilli/events{/privacy}", "received_events_url": "https://api.github.com/users/mcarilli/received_events", "type": "User", "site_admin": false}, "repo": {"id": 154756068, "node_id": "MDEwOlJlcG9zaXRvcnkxNTQ3NTYwNjg=", "name": "pytorch", "full_name": "mcarilli/pytorch", "private": false, "owner": {"login": "mcarilli", "id": 7799218, "node_id": "MDQ6VXNlcjc3OTkyMTg=", "avatar_url": "https://avatars0.githubusercontent.com/u/7799218?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mcarilli", "html_url": "https://github.com/mcarilli", "followers_url": "https://api.github.com/users/mcarilli/followers", "following_url": "https://api.github.com/users/mcarilli/following{/other_user}", "gists_url": "https://api.github.com/users/mcarilli/gists{/gist_id}", "starred_url": "https://api.github.com/users/mcarilli/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mcarilli/subscriptions", "organizations_url": "https://api.github.com/users/mcarilli/orgs", "repos_url": "https://api.github.com/users/mcarilli/repos", "events_url": "https://api.github.com/users/mcarilli/events{/privacy}", "received_events_url": "https://api.github.com/users/mcarilli/received_events", "type": "User", "site_admin": false}, "html_url": "https://github.com/mcarilli/pytorch", "description": "Tensors and Dynamic neural networks in Python  with strong GPU acceleration", "fork": true, "url": "https://api.github.com/repos/mcarilli/pytorch", "forks_url": "https://api.github.com/repos/mcarilli/pytorch/forks", "keys_url": "https://api.github.com/repos/mcarilli/pytorch/keys{/key_id}", "collaborators_url": "https://api.github.com/repos/mcarilli/pytorch/collaborators{/collaborator}", "teams_url": "https://api.github.com/repos/mcarilli/pytorch/teams", "hooks_url": "https://api.github.com/repos/mcarilli/pytorch/hooks", "issue_events_url": "https://api.github.com/repos/mcarilli/pytorch/issues/events{/number}", "events_url": "https://api.github.com/repos/mcarilli/pytorch/events", "assignees_url": "https://api.github.com/repos/mcarilli/pytorch/assignees{/user}", "branches_url": "https://api.github.com/repos/mcarilli/pytorch/branches{/branch}", "tags_url": "https://api.github.com/repos/mcarilli/pytorch/tags", "blobs_url": "https://api.github.com/repos/mcarilli/pytorch/git/blobs{/sha}", "git_tags_url": "https://api.github.com/repos/mcarilli/pytorch/git/tags{/sha}", "git_refs_url": "https://api.github.com/repos/mcarilli/pytorch/git/refs{/sha}", "trees_url": "https://api.github.com/repos/mcarilli/pytorch/git/trees{/sha}", "statuses_url": "https://api.github.com/repos/mcarilli/pytorch/statuses/{sha}", "languages_url": "https://api.github.com/repos/mcarilli/pytorch/languages", "stargazers_url": "https://api.github.com/repos/mcarilli/pytorch/stargazers", "contributors_url": "https://api.github.com/repos/mcarilli/pytorch/contributors", "subscribers_url": "https://api.github.com/repos/mcarilli/pytorch/subscribers", "subscription_url": "https://api.github.com/repos/mcarilli/pytorch/subscription", "commits_url": "https://api.github.com/repos/mcarilli/pytorch/commits{/sha}", "git_commits_url": "https://api.github.com/repos/mcarilli/pytorch/git/commits{/sha}", "comments_url": "https://api.github.com/repos/mcarilli/pytorch/comments{/number}", "issue_comment_url": "https://api.github.com/repos/mcarilli/pytorch/issues/comments{/number}", "contents_url": "https://api.github.com/repos/mcarilli/pytorch/contents/{+path}", "compare_url": "https://api.github.com/repos/mcarilli/pytorch/compare/{base}...{head}", "merges_url": "https://api.github.com/repos/mcarilli/pytorch/merges", "archive_url": "https://api.github.com/repos/mcarilli/pytorch/{archive_format}{/ref}", "downloads_url": "https://api.github.com/repos/mcarilli/pytorch/downloads", "issues_url": "https://api.github.com/repos/mcarilli/pytorch/issues{/number}", "pulls_url": "https://api.github.com/repos/mcarilli/pytorch/pulls{/number}", "milestones_url": "https://api.github.com/repos/mcarilli/pytorch/milestones{/number}", "notifications_url": "https://api.github.com/repos/mcarilli/pytorch/notifications{?since,all,participating}", "labels_url": "https://api.github.com/repos/mcarilli/pytorch/labels{/name}", "releases_url": "https://api.github.com/repos/mcarilli/pytorch/releases{/id}", "deployments_url": "https://api.github.com/repos/mcarilli/pytorch/deployments", "created_at": "2018-10-26T00:47:39Z", "updated_at": "2018-10-26T00:47:53Z", "pushed_at": "2018-11-21T22:22:36Z", "git_url": "git://github.com/mcarilli/pytorch.git", "ssh_url": "git@github.com:mcarilli/pytorch.git", "clone_url": "https://github.com/mcarilli/pytorch.git", "svn_url": "https://github.com/mcarilli/pytorch", "homepage": "http://pytorch.org", "size": 88212, "stargazers_count": 0, "watchers_count": 0, "language": "C++", "has_issues": false, "has_projects": true, "has_downloads": true, "has_wiki": true, "has_pages": false, "forks_count": 0, "mirror_url": null, "archived": false, "open_issues_count": 0, "license": {"key": "other", "name": "Other", "spdx_id": "NOASSERTION", "url": null, "node_id": "MDc6TGljZW5zZTA="}, "forks": 0, "open_issues": 0, "watchers": 0, "default_branch": "master"}}, "base": {"label": "pytorch:master", "ref": "master", "sha": "9af18d847ac04173c889ba228c7c64ce9a0fc293", "user": {"login": "pytorch", "id": 21003710, "node_id": "MDEyOk9yZ2FuaXphdGlvbjIxMDAzNzEw", "avatar_url": "https://avatars3.githubusercontent.com/u/21003710?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pytorch", "html_url": "https://github.com/pytorch", "followers_url": "https://api.github.com/users/pytorch/followers", "following_url": "https://api.github.com/users/pytorch/following{/other_user}", "gists_url": "https://api.github.com/users/pytorch/gists{/gist_id}", "starred_url": "https://api.github.com/users/pytorch/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pytorch/subscriptions", "organizations_url": "https://api.github.com/users/pytorch/orgs", "repos_url": "https://api.github.com/users/pytorch/repos", "events_url": "https://api.github.com/users/pytorch/events{/privacy}", "received_events_url": "https://api.github.com/users/pytorch/received_events", "type": "Organization", "site_admin": false}, "repo": {"id": 65600975, "node_id": "MDEwOlJlcG9zaXRvcnk2NTYwMDk3NQ==", "name": "pytorch", "full_name": "pytorch/pytorch", "private": false, "owner": {"login": "pytorch", "id": 21003710, "node_id": "MDEyOk9yZ2FuaXphdGlvbjIxMDAzNzEw", "avatar_url": "https://avatars3.githubusercontent.com/u/21003710?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pytorch", "html_url": "https://github.com/pytorch", "followers_url": "https://api.github.com/users/pytorch/followers", "following_url": "https://api.github.com/users/pytorch/following{/other_user}", "gists_url": "https://api.github.com/users/pytorch/gists{/gist_id}", "starred_url": "https://api.github.com/users/pytorch/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pytorch/subscriptions", "organizations_url": "https://api.github.com/users/pytorch/orgs", "repos_url": "https://api.github.com/users/pytorch/repos", "events_url": "https://api.github.com/users/pytorch/events{/privacy}", "received_events_url": "https://api.github.com/users/pytorch/received_events", "type": "Organization", "site_admin": false}, "html_url": "https://github.com/pytorch/pytorch", "description": "Tensors and Dynamic neural networks in Python  with strong GPU acceleration", "fork": false, "url": "https://api.github.com/repos/pytorch/pytorch", "forks_url": "https://api.github.com/repos/pytorch/pytorch/forks", "keys_url": "https://api.github.com/repos/pytorch/pytorch/keys{/key_id}", "collaborators_url": "https://api.github.com/repos/pytorch/pytorch/collaborators{/collaborator}", "teams_url": "https://api.github.com/repos/pytorch/pytorch/teams", "hooks_url": "https://api.github.com/repos/pytorch/pytorch/hooks", "issue_events_url": "https://api.github.com/repos/pytorch/pytorch/issues/events{/number}", "events_url": "https://api.github.com/repos/pytorch/pytorch/events", "assignees_url": "https://api.github.com/repos/pytorch/pytorch/assignees{/user}", "branches_url": "https://api.github.com/repos/pytorch/pytorch/branches{/branch}", "tags_url": "https://api.github.com/repos/pytorch/pytorch/tags", "blobs_url": "https://api.github.com/repos/pytorch/pytorch/git/blobs{/sha}", "git_tags_url": "https://api.github.com/repos/pytorch/pytorch/git/tags{/sha}", "git_refs_url": "https://api.github.com/repos/pytorch/pytorch/git/refs{/sha}", "trees_url": "https://api.github.com/repos/pytorch/pytorch/git/trees{/sha}", "statuses_url": "https://api.github.com/repos/pytorch/pytorch/statuses/{sha}", "languages_url": "https://api.github.com/repos/pytorch/pytorch/languages", "stargazers_url": "https://api.github.com/repos/pytorch/pytorch/stargazers", "contributors_url": "https://api.github.com/repos/pytorch/pytorch/contributors", "subscribers_url": "https://api.github.com/repos/pytorch/pytorch/subscribers", "subscription_url": "https://api.github.com/repos/pytorch/pytorch/subscription", "commits_url": "https://api.github.com/repos/pytorch/pytorch/commits{/sha}", "git_commits_url": "https://api.github.com/repos/pytorch/pytorch/git/commits{/sha}", "comments_url": "https://api.github.com/repos/pytorch/pytorch/comments{/number}", "issue_comment_url": "https://api.github.com/repos/pytorch/pytorch/issues/comments{/number}", "contents_url": "https://api.github.com/repos/pytorch/pytorch/contents/{+path}", "compare_url": "https://api.github.com/repos/pytorch/pytorch/compare/{base}...{head}", "merges_url": "https://api.github.com/repos/pytorch/pytorch/merges", "archive_url": "https://api.github.com/repos/pytorch/pytorch/{archive_format}{/ref}", "downloads_url": "https://api.github.com/repos/pytorch/pytorch/downloads", "issues_url": "https://api.github.com/repos/pytorch/pytorch/issues{/number}", "pulls_url": "https://api.github.com/repos/pytorch/pytorch/pulls{/number}", "milestones_url": "https://api.github.com/repos/pytorch/pytorch/milestones{/number}", "notifications_url": "https://api.github.com/repos/pytorch/pytorch/notifications{?since,all,participating}", "labels_url": "https://api.github.com/repos/pytorch/pytorch/labels{/name}", "releases_url": "https://api.github.com/repos/pytorch/pytorch/releases{/id}", "deployments_url": "https://api.github.com/repos/pytorch/pytorch/deployments", "created_at": "2016-08-13T05:26:41Z", "updated_at": "2018-11-24T12:35:43Z", "pushed_at": "2018-11-24T12:42:01Z", "git_url": "git://github.com/pytorch/pytorch.git", "ssh_url": "git@github.com:pytorch/pytorch.git", "clone_url": "https://github.com/pytorch/pytorch.git", "svn_url": "https://github.com/pytorch/pytorch", "homepage": "http://pytorch.org", "size": 89656, "stargazers_count": 21589, "watchers_count": 21589, "language": "C++", "has_issues": true, "has_projects": true, "has_downloads": true, "has_wiki": true, "has_pages": false, "forks_count": 5153, "mirror_url": null, "archived": false, "open_issues_count": 2196, "license": {"key": "other", "name": "Other", "spdx_id": "NOASSERTION", "url": null, "node_id": "MDc6TGljZW5zZTA="}, "forks": 5153, "open_issues": 2196, "watchers": 21589, "default_branch": "master"}}, "_links": {"self": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/13337"}, "html": {"href": "https://github.com/pytorch/pytorch/pull/13337"}, "issue": {"href": "https://api.github.com/repos/pytorch/pytorch/issues/13337"}, "comments": {"href": "https://api.github.com/repos/pytorch/pytorch/issues/13337/comments"}, "review_comments": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/13337/comments"}, "review_comment": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/comments{/number}"}, "commits": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/13337/commits"}, "statuses": {"href": "https://api.github.com/repos/pytorch/pytorch/statuses/de7d182fee2cd1acca7ea73f42174adecdc7f4cd"}}, "author_association": "CONTRIBUTOR", "body_html": "<p><a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=17164548\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/FDecaYed\">@FDecaYed</a> wrote some nice logic into <a href=\"https://github.com/pytorch/pytorch/blob/master/torch/csrc/autograd/functions/accumulate_grad.cpp#L44-L47\">accumulate_grad.cpp</a> to elide unnecessary cloning or accumulation of incoming gradients.  Under certain conditions, the incoming gradient can be stolen and used directly.</p>\n<p>One of these conditions is that the incoming gradient's <a href=\"https://github.com/pytorch/pytorch/blob/master/torch/csrc/autograd/functions/accumulate_grad.cpp#L47\">refcount must be 1</a>.  Nothing else can be referencing the data (which might happen, for instance, for c = b + a:  the + operator's backward can simply pass c's incoming gradient tensor directly to both a and b's <code>AccumulateGrad</code> functions).</p>\n<p>However, if a given param's <code>AccumulateGrad</code> function has post hooks (like, for example, the allreduce hooks employed by both apex and c10d DDP), the autograd engine <a href=\"https://github.com/pytorch/pytorch/blob/master/torch/csrc/autograd/engine.cpp#L361\">stashes a copy</a> of the incoming gradients, which increments the refcount, causing <code>AccumulateGrad</code>'s hard check that the refcount is 1 to fail, and triggering an (in this case) unnecessary deep copy.</p>\n<p>This PR updates the logic to account for the possible presence of post hooks on the <code>AccumulateGrad</code> function.  I discussed it with <a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=4583066\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/apaszke\">@apaszke</a> and we both agree it introduces a worrisome silent dependency between <code>engine.cpp</code> and <code>accumulate_grad.cpp</code>.  I've commented the relevant pieces, but I'm open to suggestions as to how this check could be made more agnostic to the implementation of <code>engine.cpp</code>.</p>", "body_text": "@FDecaYed wrote some nice logic into accumulate_grad.cpp to elide unnecessary cloning or accumulation of incoming gradients.  Under certain conditions, the incoming gradient can be stolen and used directly.\nOne of these conditions is that the incoming gradient's refcount must be 1.  Nothing else can be referencing the data (which might happen, for instance, for c = b + a:  the + operator's backward can simply pass c's incoming gradient tensor directly to both a and b's AccumulateGrad functions).\nHowever, if a given param's AccumulateGrad function has post hooks (like, for example, the allreduce hooks employed by both apex and c10d DDP), the autograd engine stashes a copy of the incoming gradients, which increments the refcount, causing AccumulateGrad's hard check that the refcount is 1 to fail, and triggering an (in this case) unnecessary deep copy.\nThis PR updates the logic to account for the possible presence of post hooks on the AccumulateGrad function.  I discussed it with @apaszke and we both agree it introduces a worrisome silent dependency between engine.cpp and accumulate_grad.cpp.  I've commented the relevant pieces, but I'm open to suggestions as to how this check could be made more agnostic to the implementation of engine.cpp.", "merged": false, "mergeable": null, "rebaseable": null, "mergeable_state": "unknown", "merged_by": null, "comments": 2, "review_comments": 0, "maintainer_can_modify": true, "commits": 1, "additions": 17, "deletions": 2, "changed_files": 2}