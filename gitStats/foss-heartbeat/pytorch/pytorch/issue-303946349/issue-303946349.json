{"url": "https://api.github.com/repos/pytorch/pytorch/issues/5671", "repository_url": "https://api.github.com/repos/pytorch/pytorch", "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/5671/labels{/name}", "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/5671/comments", "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/5671/events", "html_url": "https://github.com/pytorch/pytorch/issues/5671", "id": 303946349, "node_id": "MDU6SXNzdWUzMDM5NDYzNDk=", "number": 5671, "title": "torch.norm(x-y, 2, 1) is significantly slower than torch.sqrt((x - y).pow(2).sum(1))", "user": {"login": "zou3519", "id": 5652049, "node_id": "MDQ6VXNlcjU2NTIwNDk=", "avatar_url": "https://avatars3.githubusercontent.com/u/5652049?v=4", "gravatar_id": "", "url": "https://api.github.com/users/zou3519", "html_url": "https://github.com/zou3519", "followers_url": "https://api.github.com/users/zou3519/followers", "following_url": "https://api.github.com/users/zou3519/following{/other_user}", "gists_url": "https://api.github.com/users/zou3519/gists{/gist_id}", "starred_url": "https://api.github.com/users/zou3519/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/zou3519/subscriptions", "organizations_url": "https://api.github.com/users/zou3519/orgs", "repos_url": "https://api.github.com/users/zou3519/repos", "events_url": "https://api.github.com/users/zou3519/events{/privacy}", "received_events_url": "https://api.github.com/users/zou3519/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 443484050, "node_id": "MDU6TGFiZWw0NDM0ODQwNTA=", "url": "https://api.github.com/repos/pytorch/pytorch/labels/medium%20priority", "name": "medium priority", "color": "fbca04", "default": false}, {"id": 679952992, "node_id": "MDU6TGFiZWw2Nzk5NTI5OTI=", "url": "https://api.github.com/repos/pytorch/pytorch/labels/performance", "name": "performance", "color": "f9d0c4", "default": false}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2018-03-09T19:02:31Z", "updated_at": "2018-03-12T23:54:50Z", "closed_at": "2018-03-12T23:54:50Z", "author_association": "CONTRIBUTOR", "body_html": "<p>I've tested a few other norms as well:</p>\n<pre><code>x = torch.randn(1024, 256)\ny = torch.randn(1024, 256)\n\n\nIn [12]: %timeit torch.norm(x-y, 1, 1)\n2.55 ms \u00b1 253 \u00b5s per loop (mean \u00b1 std. dev. of 7 runs, 100 loops each)\n\nIn [13]: %timeit (x-y).sum(1)\n339 \u00b5s \u00b1 699 ns per loop (mean \u00b1 std. dev. of 7 runs, 1000 loops each)\n\nIn [14]: %timeit torch.norm(x-y, 2, 1)\n2.42 ms \u00b1 33.7 \u00b5s per loop (mean \u00b1 std. dev. of 7 runs, 100 loops each)\n\nIn [15]: %timeit torch.sqrt((x-y).pow(2).sum(1))\n736 \u00b5s \u00b1 2.3 \u00b5s per loop (mean \u00b1 std. dev. of 7 runs, 1000 loops each)\n\nIn [16]: %timeit torch.pow((x - y).pow(3).sum(1), 1/3)\n700 \u00b5s \u00b1 571 ns per loop (mean \u00b1 std. dev. of 7 runs, 1000 loops each)\n\nIn [17]: %timeit torch.norm(x-y, 3, 1)\n16.1 ms \u00b1 31.5 \u00b5s per loop (mean \u00b1 std. dev. of 7 runs, 100 loops each)\n\n</code></pre>\n<p>Reported <a href=\"https://discuss.pytorch.org/t/torch-norm-3-6x-slower-than-manually-calculating-sum-of-squares/14684\" rel=\"nofollow\">here on the forums</a></p>", "body_text": "I've tested a few other norms as well:\nx = torch.randn(1024, 256)\ny = torch.randn(1024, 256)\n\n\nIn [12]: %timeit torch.norm(x-y, 1, 1)\n2.55 ms \u00b1 253 \u00b5s per loop (mean \u00b1 std. dev. of 7 runs, 100 loops each)\n\nIn [13]: %timeit (x-y).sum(1)\n339 \u00b5s \u00b1 699 ns per loop (mean \u00b1 std. dev. of 7 runs, 1000 loops each)\n\nIn [14]: %timeit torch.norm(x-y, 2, 1)\n2.42 ms \u00b1 33.7 \u00b5s per loop (mean \u00b1 std. dev. of 7 runs, 100 loops each)\n\nIn [15]: %timeit torch.sqrt((x-y).pow(2).sum(1))\n736 \u00b5s \u00b1 2.3 \u00b5s per loop (mean \u00b1 std. dev. of 7 runs, 1000 loops each)\n\nIn [16]: %timeit torch.pow((x - y).pow(3).sum(1), 1/3)\n700 \u00b5s \u00b1 571 ns per loop (mean \u00b1 std. dev. of 7 runs, 1000 loops each)\n\nIn [17]: %timeit torch.norm(x-y, 3, 1)\n16.1 ms \u00b1 31.5 \u00b5s per loop (mean \u00b1 std. dev. of 7 runs, 100 loops each)\n\n\nReported here on the forums", "body": "I've tested a few other norms as well:\r\n```\r\nx = torch.randn(1024, 256)\r\ny = torch.randn(1024, 256)\r\n\r\n\r\nIn [12]: %timeit torch.norm(x-y, 1, 1)\r\n2.55 ms \u00b1 253 \u00b5s per loop (mean \u00b1 std. dev. of 7 runs, 100 loops each)\r\n\r\nIn [13]: %timeit (x-y).sum(1)\r\n339 \u00b5s \u00b1 699 ns per loop (mean \u00b1 std. dev. of 7 runs, 1000 loops each)\r\n\r\nIn [14]: %timeit torch.norm(x-y, 2, 1)\r\n2.42 ms \u00b1 33.7 \u00b5s per loop (mean \u00b1 std. dev. of 7 runs, 100 loops each)\r\n\r\nIn [15]: %timeit torch.sqrt((x-y).pow(2).sum(1))\r\n736 \u00b5s \u00b1 2.3 \u00b5s per loop (mean \u00b1 std. dev. of 7 runs, 1000 loops each)\r\n\r\nIn [16]: %timeit torch.pow((x - y).pow(3).sum(1), 1/3)\r\n700 \u00b5s \u00b1 571 ns per loop (mean \u00b1 std. dev. of 7 runs, 1000 loops each)\r\n\r\nIn [17]: %timeit torch.norm(x-y, 3, 1)\r\n16.1 ms \u00b1 31.5 \u00b5s per loop (mean \u00b1 std. dev. of 7 runs, 100 loops each)\r\n\r\n```\r\nReported [here on the forums](https://discuss.pytorch.org/t/torch-norm-3-6x-slower-than-manually-calculating-sum-of-squares/14684)"}