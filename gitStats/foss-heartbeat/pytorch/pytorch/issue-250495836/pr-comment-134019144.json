{"url": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/134019144", "pull_request_review_id": 57270743, "id": 134019144, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEzNDAxOTE0NA==", "diff_hunk": "@@ -115,9 +115,9 @@ inline bool getApplyGrid(THCState* state, ptrdiff_t totalElements, dim3& grid) {\n \n   // 16 warps per block * 4 per SM gives 64 warps per SM at maximum,\n   // which seems to be a good sweetspot for latency hiding\n-  grid = dim3(min((long long) THCCeilDiv(totalElements,\n+  grid = dim3(min((int64_t) THCCeilDiv(totalElements,\n                                          (ptrdiff_t) THC_APPLY_THREADS_PER_BLOCK),\n-                  4LL * numSM));\n+                  (int64_t)(4 * numSM)));", "path": "torch/lib/THC/THCApply.cuh", "position": null, "original_position": 8, "commit_id": "097e311833283192a672dabcfc46cf3e6649e2e7", "original_commit_id": "042c66d2e8a3cdb2cfdfd2567154cb8da3369caa", "user": {"login": "fmassa", "id": 9110200, "node_id": "MDQ6VXNlcjkxMTAyMDA=", "avatar_url": "https://avatars2.githubusercontent.com/u/9110200?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fmassa", "html_url": "https://github.com/fmassa", "followers_url": "https://api.github.com/users/fmassa/followers", "following_url": "https://api.github.com/users/fmassa/following{/other_user}", "gists_url": "https://api.github.com/users/fmassa/gists{/gist_id}", "starred_url": "https://api.github.com/users/fmassa/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fmassa/subscriptions", "organizations_url": "https://api.github.com/users/fmassa/orgs", "repos_url": "https://api.github.com/users/fmassa/repos", "events_url": "https://api.github.com/users/fmassa/events{/privacy}", "received_events_url": "https://api.github.com/users/fmassa/received_events", "type": "User", "site_admin": false}, "body": "I suppose `numSM` is usually small enough so that you don't need to worry about `4 * numSM` overflowing `int` before the cast?", "created_at": "2017-08-18T17:59:14Z", "updated_at": "2018-11-23T15:34:24Z", "html_url": "https://github.com/pytorch/pytorch/pull/2440#discussion_r134019144", "pull_request_url": "https://api.github.com/repos/pytorch/pytorch/pulls/2440", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/134019144"}, "html": {"href": "https://github.com/pytorch/pytorch/pull/2440#discussion_r134019144"}, "pull_request": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/2440"}}, "body_html": "<p>I suppose <code>numSM</code> is usually small enough so that you don't need to worry about <code>4 * numSM</code> overflowing <code>int</code> before the cast?</p>", "body_text": "I suppose numSM is usually small enough so that you don't need to worry about 4 * numSM overflowing int before the cast?"}