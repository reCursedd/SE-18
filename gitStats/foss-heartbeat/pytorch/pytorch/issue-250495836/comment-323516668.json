{"url": "https://api.github.com/repos/pytorch/pytorch/issues/comments/323516668", "html_url": "https://github.com/pytorch/pytorch/pull/2440#issuecomment-323516668", "issue_url": "https://api.github.com/repos/pytorch/pytorch/issues/2440", "id": 323516668, "node_id": "MDEyOklzc3VlQ29tbWVudDMyMzUxNjY2OA==", "user": {"login": "alykhantejani", "id": 687194, "node_id": "MDQ6VXNlcjY4NzE5NA==", "avatar_url": "https://avatars1.githubusercontent.com/u/687194?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alykhantejani", "html_url": "https://github.com/alykhantejani", "followers_url": "https://api.github.com/users/alykhantejani/followers", "following_url": "https://api.github.com/users/alykhantejani/following{/other_user}", "gists_url": "https://api.github.com/users/alykhantejani/gists{/gist_id}", "starred_url": "https://api.github.com/users/alykhantejani/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alykhantejani/subscriptions", "organizations_url": "https://api.github.com/users/alykhantejani/orgs", "repos_url": "https://api.github.com/users/alykhantejani/repos", "events_url": "https://api.github.com/users/alykhantejani/events{/privacy}", "received_events_url": "https://api.github.com/users/alykhantejani/received_events", "type": "User", "site_admin": false}, "created_at": "2017-08-19T11:07:23Z", "updated_at": "2017-08-19T11:07:23Z", "author_association": "CONTRIBUTOR", "body_html": "<p><a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=9110200\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/fmassa\">@fmassa</a> I think <code>int64_t</code> and <code>uint64_t</code> have the same behaviour as <code>long long</code> and <code>unsigned long long</code> on 64-bit machines, but <code>long long</code> means at least 64 bits. I'm not why these types were defined <code>long long</code> instead of just <code>long</code> in the first version, but if we want to preserve that behaviour I think <code>int_least_64t</code> is the correct way (however I could be wrong here)?</p>", "body_text": "@fmassa I think int64_t and uint64_t have the same behaviour as long long and unsigned long long on 64-bit machines, but long long means at least 64 bits. I'm not why these types were defined long long instead of just long in the first version, but if we want to preserve that behaviour I think int_least_64t is the correct way (however I could be wrong here)?", "body": "@fmassa I think `int64_t` and `uint64_t` have the same behaviour as `long long` and `unsigned long long` on 64-bit machines, but `long long` means at least 64 bits. I'm not why these types were defined `long long` instead of just `long` in the first version, but if we want to preserve that behaviour I think `int_least_64t` is the correct way (however I could be wrong here)?"}