{"url": "https://api.github.com/repos/pytorch/pytorch/issues/6232", "repository_url": "https://api.github.com/repos/pytorch/pytorch", "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/6232/labels{/name}", "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/6232/comments", "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/6232/events", "html_url": "https://github.com/pytorch/pytorch/pull/6232", "id": 310909415, "node_id": "MDExOlB1bGxSZXF1ZXN0MTc5MTUzNTg0", "number": 6232, "title": "Detect re-initialization of _C shared library", "user": {"login": "colesbury", "id": 655866, "node_id": "MDQ6VXNlcjY1NTg2Ng==", "avatar_url": "https://avatars1.githubusercontent.com/u/655866?v=4", "gravatar_id": "", "url": "https://api.github.com/users/colesbury", "html_url": "https://github.com/colesbury", "followers_url": "https://api.github.com/users/colesbury/followers", "following_url": "https://api.github.com/users/colesbury/following{/other_user}", "gists_url": "https://api.github.com/users/colesbury/gists{/gist_id}", "starred_url": "https://api.github.com/users/colesbury/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/colesbury/subscriptions", "organizations_url": "https://api.github.com/users/colesbury/orgs", "repos_url": "https://api.github.com/users/colesbury/repos", "events_url": "https://api.github.com/users/colesbury/events{/privacy}", "received_events_url": "https://api.github.com/users/colesbury/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2018-04-03T16:32:15Z", "updated_at": "2018-04-03T21:30:05Z", "closed_at": "2018-04-03T19:28:38Z", "author_association": "MEMBER", "pull_request": {"url": "https://api.github.com/repos/pytorch/pytorch/pulls/6232", "html_url": "https://github.com/pytorch/pytorch/pull/6232", "diff_url": "https://github.com/pytorch/pytorch/pull/6232.diff", "patch_url": "https://github.com/pytorch/pytorch/pull/6232.patch"}, "body_html": "<pre><code>We had a bug in the Buck build of PyTorch due to symbols from _C\nbeing present in two shared libraries that were both loaded at\nruntime. This caused global variables to be initialized twice and\ndestructed twice on exit. The second destruction often caused\nsegfaults on exit.\n\nThis attempts to detect that sort of situation early on. If\nModule.cpp is compiled twice, the symbol\npytorch_duplicate_guard()::initialized will be shared. The second\ninitialization will print an error message and abort.\n</code></pre>", "body_text": "We had a bug in the Buck build of PyTorch due to symbols from _C\nbeing present in two shared libraries that were both loaded at\nruntime. This caused global variables to be initialized twice and\ndestructed twice on exit. The second destruction often caused\nsegfaults on exit.\n\nThis attempts to detect that sort of situation early on. If\nModule.cpp is compiled twice, the symbol\npytorch_duplicate_guard()::initialized will be shared. The second\ninitialization will print an error message and abort.", "body": "```\r\nWe had a bug in the Buck build of PyTorch due to symbols from _C\r\nbeing present in two shared libraries that were both loaded at\r\nruntime. This caused global variables to be initialized twice and\r\ndestructed twice on exit. The second destruction often caused\r\nsegfaults on exit.\r\n\r\nThis attempts to detect that sort of situation early on. If\r\nModule.cpp is compiled twice, the symbol\r\npytorch_duplicate_guard()::initialized will be shared. The second\r\ninitialization will print an error message and abort.\r\n```"}