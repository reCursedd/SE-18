{"url": "https://api.github.com/repos/pytorch/pytorch/issues/comments/387170742", "html_url": "https://github.com/pytorch/pytorch/issues/7343#issuecomment-387170742", "issue_url": "https://api.github.com/repos/pytorch/pytorch/issues/7343", "id": 387170742, "node_id": "MDEyOklzc3VlQ29tbWVudDM4NzE3MDc0Mg==", "user": {"login": "apaszke", "id": 4583066, "node_id": "MDQ6VXNlcjQ1ODMwNjY=", "avatar_url": "https://avatars3.githubusercontent.com/u/4583066?v=4", "gravatar_id": "", "url": "https://api.github.com/users/apaszke", "html_url": "https://github.com/apaszke", "followers_url": "https://api.github.com/users/apaszke/followers", "following_url": "https://api.github.com/users/apaszke/following{/other_user}", "gists_url": "https://api.github.com/users/apaszke/gists{/gist_id}", "starred_url": "https://api.github.com/users/apaszke/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/apaszke/subscriptions", "organizations_url": "https://api.github.com/users/apaszke/orgs", "repos_url": "https://api.github.com/users/apaszke/repos", "events_url": "https://api.github.com/users/apaszke/events{/privacy}", "received_events_url": "https://api.github.com/users/apaszke/received_events", "type": "User", "site_admin": false}, "created_at": "2018-05-07T19:08:58Z", "updated_at": "2018-05-07T19:08:58Z", "author_association": "MEMBER", "body_html": "<p>That's a known issue, that's hard to solve in general. The problem is that we get a reference cycle in C++, which used to be broken by having a <code>weak_ptr</code> in the <code>AccumulateGrad</code>, which is now a strong reference. One way to get around it would be to disallow <code>create_graph</code> with <code>.backward</code> (and only use it with <code>.grad</code>).</p>\n<p>IIRC the reference cycle is <code>x -&gt; x.grad -&gt; x.grad.grad_fn = TanhBackwardBackward -&gt; x</code></p>", "body_text": "That's a known issue, that's hard to solve in general. The problem is that we get a reference cycle in C++, which used to be broken by having a weak_ptr in the AccumulateGrad, which is now a strong reference. One way to get around it would be to disallow create_graph with .backward (and only use it with .grad).\nIIRC the reference cycle is x -> x.grad -> x.grad.grad_fn = TanhBackwardBackward -> x", "body": "That's a known issue, that's hard to solve in general. The problem is that we get a reference cycle in C++, which used to be broken by having a `weak_ptr` in the `AccumulateGrad`, which is now a strong reference. One way to get around it would be to disallow `create_graph` with `.backward` (and only use it with `.grad`).\r\n\r\nIIRC the reference cycle is `x -> x.grad -> x.grad.grad_fn = TanhBackwardBackward -> x`"}