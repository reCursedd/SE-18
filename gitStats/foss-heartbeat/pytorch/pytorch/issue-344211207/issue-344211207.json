{"url": "https://api.github.com/repos/pytorch/pytorch/issues/9787", "repository_url": "https://api.github.com/repos/pytorch/pytorch", "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/9787/labels{/name}", "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/9787/comments", "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/9787/events", "html_url": "https://github.com/pytorch/pytorch/pull/9787", "id": 344211207, "node_id": "MDExOlB1bGxSZXF1ZXN0MjAzNjYwODM2", "number": 9787, "title": "[TENSOR MERGE] Delete type_ field from TensorImpl, replaced with backend_/scalar_typ\u2026", "user": {"login": "ezyang", "id": 13564, "node_id": "MDQ6VXNlcjEzNTY0", "avatar_url": "https://avatars0.githubusercontent.com/u/13564?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ezyang", "html_url": "https://github.com/ezyang", "followers_url": "https://api.github.com/users/ezyang/followers", "following_url": "https://api.github.com/users/ezyang/following{/other_user}", "gists_url": "https://api.github.com/users/ezyang/gists{/gist_id}", "starred_url": "https://api.github.com/users/ezyang/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ezyang/subscriptions", "organizations_url": "https://api.github.com/users/ezyang/orgs", "repos_url": "https://api.github.com/users/ezyang/repos", "events_url": "https://api.github.com/users/ezyang/events{/privacy}", "received_events_url": "https://api.github.com/users/ezyang/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-07-24T21:31:22Z", "updated_at": "2018-11-23T15:48:15Z", "closed_at": "2018-08-01T22:36:08Z", "author_association": "CONTRIBUTOR", "pull_request": {"url": "https://api.github.com/repos/pytorch/pytorch/pulls/9787", "html_url": "https://github.com/pytorch/pytorch/pull/9787", "diff_url": "https://github.com/pytorch/pytorch/pull/9787.diff", "patch_url": "https://github.com/pytorch/pytorch/pull/9787.patch"}, "body_html": "<p>\u2026e_/is_variable_</p>\n<p>The basic game plan is to stop accessing the type_ field directly,<br>\nand instead using the stored backend_, scalar_type_ and<br>\nis_variable_ to look up the appropriate Type from Context.<br>\nStorage of backend_ and scalar_type_ are new.</p>\n<p>At some future point in time, I'd like to look at this code<br>\ncarefully to see if I can get everything in this codepath inlining.<br>\nI didn't do it in this patch because there are circular include<br>\nproblems making things difficult.</p>\n<p>Some other details:</p>\n<ul>\n<li>\n<p>Added Device::backend() which does what it says on the tin</p>\n</li>\n<li>\n<p>SparseTensorImpl is temporarily hard-coded to root in at::Context<br>\nfor the appropriate context.  If/when we put this in shared code,<br>\nwe'll have to break this dep too, but for now it should be OK.</p>\n</li>\n<li>\n<p>There's a stupid problem with globalContext() deadlocking if<br>\nyou didn't actually initialize it before loading libtorch.so<br>\n(which is bringing along the variable hooks).  I didn't fix<br>\nit in this PR; it's tracked in <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load issue title\" data-id=\"344187342\" data-permission-text=\"Issue title is private\" data-url=\"https://github.com/pytorch/pytorch/issues/9784\" data-hovercard-type=\"issue\" data-hovercard-url=\"/pytorch/pytorch/issues/9784/hovercard\" href=\"https://github.com/pytorch/pytorch/issues/9784\">#9784</a></p>\n</li>\n</ul>\n<p>Signed-off-by: Edward Z. Yang <a href=\"mailto:ezyang@fb.com\">ezyang@fb.com</a></p>", "body_text": "\u2026e_/is_variable_\nThe basic game plan is to stop accessing the type_ field directly,\nand instead using the stored backend_, scalar_type_ and\nis_variable_ to look up the appropriate Type from Context.\nStorage of backend_ and scalar_type_ are new.\nAt some future point in time, I'd like to look at this code\ncarefully to see if I can get everything in this codepath inlining.\nI didn't do it in this patch because there are circular include\nproblems making things difficult.\nSome other details:\n\n\nAdded Device::backend() which does what it says on the tin\n\n\nSparseTensorImpl is temporarily hard-coded to root in at::Context\nfor the appropriate context.  If/when we put this in shared code,\nwe'll have to break this dep too, but for now it should be OK.\n\n\nThere's a stupid problem with globalContext() deadlocking if\nyou didn't actually initialize it before loading libtorch.so\n(which is bringing along the variable hooks).  I didn't fix\nit in this PR; it's tracked in #9784\n\n\nSigned-off-by: Edward Z. Yang ezyang@fb.com", "body": "\u2026e_/is_variable_\r\n\r\nThe basic game plan is to stop accessing the type_ field directly,\r\nand instead using the stored backend_, scalar_type_ and\r\nis_variable_ to look up the appropriate Type from Context.\r\nStorage of backend_ and scalar_type_ are new.\r\n\r\nAt some future point in time, I'd like to look at this code\r\ncarefully to see if I can get everything in this codepath inlining.\r\nI didn't do it in this patch because there are circular include\r\nproblems making things difficult.\r\n\r\nSome other details:\r\n\r\n- Added Device::backend() which does what it says on the tin\r\n\r\n- SparseTensorImpl is temporarily hard-coded to root in at::Context\r\n  for the appropriate context.  If/when we put this in shared code,\r\n  we'll have to break this dep too, but for now it should be OK.\r\n\r\n- There's a stupid problem with globalContext() deadlocking if\r\n  you didn't actually initialize it before loading libtorch.so\r\n  (which is bringing along the variable hooks).  I didn't fix\r\n  it in this PR; it's tracked in #9784\r\n\r\nSigned-off-by: Edward Z. Yang <ezyang@fb.com>\r\n\r\n"}