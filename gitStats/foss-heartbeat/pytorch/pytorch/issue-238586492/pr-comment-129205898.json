{"url": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/129205898", "pull_request_review_id": 51953160, "id": 129205898, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEyOTIwNTg5OA==", "diff_hunk": "@@ -78,7 +78,10 @@ int THPCppFunction_traverse(PyObject* self, visitproc visit, void *arg)\n \n int THPCppFunction_clear(PyObject* self)\n {\n-  ((THPCppFunction*)self)->cdata.reset();\n+  auto f = (THPCppFunction*)self;\n+  // Remove the weak ref of the c++ object if it exist\n+  f->cdata->pyobj = nullptr;", "path": "torch/csrc/autograd/python_cpp_function.cpp", "position": null, "original_position": 7, "commit_id": "4ce8a2771fb073efd6232f6696c98158ffef8c9b", "original_commit_id": "35a6da6f629e5c1fec929be667f10ab68dd822d2", "user": {"login": "colesbury", "id": 655866, "node_id": "MDQ6VXNlcjY1NTg2Ng==", "avatar_url": "https://avatars1.githubusercontent.com/u/655866?v=4", "gravatar_id": "", "url": "https://api.github.com/users/colesbury", "html_url": "https://github.com/colesbury", "followers_url": "https://api.github.com/users/colesbury/followers", "following_url": "https://api.github.com/users/colesbury/following{/other_user}", "gists_url": "https://api.github.com/users/colesbury/gists{/gist_id}", "starred_url": "https://api.github.com/users/colesbury/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/colesbury/subscriptions", "organizations_url": "https://api.github.com/users/colesbury/orgs", "repos_url": "https://api.github.com/users/colesbury/repos", "events_url": "https://api.github.com/users/colesbury/events{/privacy}", "received_events_url": "https://api.github.com/users/colesbury/received_events", "type": "User", "site_admin": false}, "body": "You need to do the same thing (clear the `pyobj`) in `THPCppFunction_dealloc` (or have `_dealloc` call `_clear`). `tp_clear` is only called when there GC is trying to break circular references. In the common case, when there are no circular references, only `tp_dealloc` is called", "created_at": "2017-07-25T03:41:03Z", "updated_at": "2018-11-23T15:34:14Z", "html_url": "https://github.com/pytorch/pytorch/pull/1912#discussion_r129205898", "pull_request_url": "https://api.github.com/repos/pytorch/pytorch/pulls/1912", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/129205898"}, "html": {"href": "https://github.com/pytorch/pytorch/pull/1912#discussion_r129205898"}, "pull_request": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/1912"}}, "body_html": "<p>You need to do the same thing (clear the <code>pyobj</code>) in <code>THPCppFunction_dealloc</code> (or have <code>_dealloc</code> call <code>_clear</code>). <code>tp_clear</code> is only called when there GC is trying to break circular references. In the common case, when there are no circular references, only <code>tp_dealloc</code> is called</p>", "body_text": "You need to do the same thing (clear the pyobj) in THPCppFunction_dealloc (or have _dealloc call _clear). tp_clear is only called when there GC is trying to break circular references. In the common case, when there are no circular references, only tp_dealloc is called"}