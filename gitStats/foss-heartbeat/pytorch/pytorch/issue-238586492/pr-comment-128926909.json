{"url": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/128926909", "pull_request_review_id": 51650425, "id": 128926909, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEyODkyNjkwOQ==", "diff_hunk": "@@ -173,22 +173,27 @@ PyObject* functionToPyObject(std::shared_ptr<Function> cdata)\n     return obj;\n   }\n \n-  auto& fn = *cdata;\n-  auto it = cpp_function_types.find(std::type_index(typeid(fn)));\n-  if (it == cpp_function_types.end()) {\n-    return PyErr_Format(PyExc_TypeError,\n-        \"Don't know how to create Python object for %s\", typeid(fn).name());\n-  }\n+  if (cdata->pyobj) {\n+    Py_INCREF(cdata->pyobj);\n+  } else {\n+    auto& fn = *cdata;\n+    auto it = cpp_function_types.find(std::type_index(typeid(fn)));\n+    if (it == cpp_function_types.end()) {\n+      return PyErr_Format(PyExc_TypeError,\n+          \"Don't know how to create Python object for %s\", typeid(fn).name());\n+    }\n \n-  PyTypeObject* type = (PyTypeObject*)it->second.get();\n-  THPObjectPtr obj(type->tp_alloc(type, 0));\n-  if (!obj) return NULL;\n-  THPCppFunction* f = (THPCppFunction*)obj.get();\n-  new (&f->cdata) std::shared_ptr<Function>(cdata);\n-  if (!f->cdata) {\n-    return NULL;\n+    PyTypeObject* type = (PyTypeObject*)it->second.get();\n+    THPObjectPtr obj(type->tp_alloc(type, 0));\n+    if (!obj) return NULL;\n+    THPCppFunction* f = (THPCppFunction*)obj.get();\n+    new (&f->cdata) std::shared_ptr<Function>(cdata);\n+\n+    cdata->pyobj = obj.release();\n+    Py_INCREF(cdata->pyobj);", "path": "torch/csrc/autograd/python_cpp_function.cpp", "position": null, "original_position": 34, "commit_id": "4ce8a2771fb073efd6232f6696c98158ffef8c9b", "original_commit_id": "14574cac4fd39c91445adde50d153dd2260a983b", "user": {"login": "albanD", "id": 6359743, "node_id": "MDQ6VXNlcjYzNTk3NDM=", "avatar_url": "https://avatars3.githubusercontent.com/u/6359743?v=4", "gravatar_id": "", "url": "https://api.github.com/users/albanD", "html_url": "https://github.com/albanD", "followers_url": "https://api.github.com/users/albanD/followers", "following_url": "https://api.github.com/users/albanD/following{/other_user}", "gists_url": "https://api.github.com/users/albanD/gists{/gist_id}", "starred_url": "https://api.github.com/users/albanD/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/albanD/subscriptions", "organizations_url": "https://api.github.com/users/albanD/orgs", "repos_url": "https://api.github.com/users/albanD/repos", "events_url": "https://api.github.com/users/albanD/events{/privacy}", "received_events_url": "https://api.github.com/users/albanD/received_events", "type": "User", "site_admin": false}, "body": "Yes, the current implementation has a strong reference because I wasn't sure how the weak ref was done (see [this](https://github.com/pytorch/pytorch/pull/1912#discussion_r128907397) comment).\r\nI did not though that the pyobj are actually our custom object so we can properly remove it on destruction. Thanks for the pointer!", "created_at": "2017-07-23T19:04:44Z", "updated_at": "2018-11-23T15:34:14Z", "html_url": "https://github.com/pytorch/pytorch/pull/1912#discussion_r128926909", "pull_request_url": "https://api.github.com/repos/pytorch/pytorch/pulls/1912", "author_association": "COLLABORATOR", "_links": {"self": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/128926909"}, "html": {"href": "https://github.com/pytorch/pytorch/pull/1912#discussion_r128926909"}, "pull_request": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/1912"}}, "body_html": "<p>Yes, the current implementation has a strong reference because I wasn't sure how the weak ref was done (see <a href=\"https://github.com/pytorch/pytorch/pull/1912#discussion_r128907397\" data-hovercard-type=\"pull_request\" data-hovercard-url=\"/pytorch/pytorch/pull/1912/hovercard\">this</a> comment).<br>\nI did not though that the pyobj are actually our custom object so we can properly remove it on destruction. Thanks for the pointer!</p>", "body_text": "Yes, the current implementation has a strong reference because I wasn't sure how the weak ref was done (see this comment).\nI did not though that the pyobj are actually our custom object so we can properly remove it on destruction. Thanks for the pointer!", "in_reply_to_id": 128910694}