{"url": "https://api.github.com/repos/pytorch/pytorch/issues/comments/430956867", "html_url": "https://github.com/pytorch/pytorch/issues/12737#issuecomment-430956867", "issue_url": "https://api.github.com/repos/pytorch/pytorch/issues/12737", "id": 430956867, "node_id": "MDEyOklzc3VlQ29tbWVudDQzMDk1Njg2Nw==", "user": {"login": "vadimkantorov", "id": 1041752, "node_id": "MDQ6VXNlcjEwNDE3NTI=", "avatar_url": "https://avatars0.githubusercontent.com/u/1041752?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vadimkantorov", "html_url": "https://github.com/vadimkantorov", "followers_url": "https://api.github.com/users/vadimkantorov/followers", "following_url": "https://api.github.com/users/vadimkantorov/following{/other_user}", "gists_url": "https://api.github.com/users/vadimkantorov/gists{/gist_id}", "starred_url": "https://api.github.com/users/vadimkantorov/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vadimkantorov/subscriptions", "organizations_url": "https://api.github.com/users/vadimkantorov/orgs", "repos_url": "https://api.github.com/users/vadimkantorov/repos", "events_url": "https://api.github.com/users/vadimkantorov/events{/privacy}", "received_events_url": "https://api.github.com/users/vadimkantorov/received_events", "type": "User", "site_admin": false}, "created_at": "2018-10-18T10:23:46Z", "updated_at": "2018-10-18T10:23:46Z", "author_association": "NONE", "body_html": "<p><a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=16191443\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/crcrpar\">@crcrpar</a> Ideally I'd like to get sth like <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load issue title\" data-id=\"320453909\" data-permission-text=\"Issue title is private\" data-url=\"https://github.com/pytorch/pytorch/issues/7313\" data-hovercard-type=\"issue\" data-hovercard-url=\"/pytorch/pytorch/issues/7313/hovercard?comment_id=393698521&amp;comment_type=issue_comment\" href=\"https://github.com/pytorch/pytorch/issues/7313#issuecomment-393698521\">#7313 (comment)</a> (practically the spectral norm becomes a module with some buffers of itself and multiple return values)</p>\n<p>With a regular function that returns weight and bias vector, with backprop through it is controlled by calling detach in appropriate places if needed. Then there is a question of sharing buffers through multiple devices.</p>\n<p>But at least it's clear what's going on, and there is no fragile module object patching, calls of setattr and inplace updates.</p>", "body_text": "@crcrpar Ideally I'd like to get sth like #7313 (comment) (practically the spectral norm becomes a module with some buffers of itself and multiple return values)\nWith a regular function that returns weight and bias vector, with backprop through it is controlled by calling detach in appropriate places if needed. Then there is a question of sharing buffers through multiple devices.\nBut at least it's clear what's going on, and there is no fragile module object patching, calls of setattr and inplace updates.", "body": "@crcrpar Ideally I'd like to get sth like https://github.com/pytorch/pytorch/issues/7313#issuecomment-393698521 (practically the spectral norm becomes a module with some buffers of itself and multiple return values)\r\n\r\nWith a regular function that returns weight and bias vector, with backprop through it is controlled by calling detach in appropriate places if needed. Then there is a question of sharing buffers through multiple devices.\r\n\r\nBut at least it's clear what's going on, and there is no fragile module object patching, calls of setattr and inplace updates."}