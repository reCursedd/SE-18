{"url": "https://api.github.com/repos/pytorch/pytorch/issues/1198", "repository_url": "https://api.github.com/repos/pytorch/pytorch", "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/1198/labels{/name}", "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/1198/comments", "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/1198/events", "html_url": "https://github.com/pytorch/pytorch/issues/1198", "id": 219710834, "node_id": "MDU6SXNzdWUyMTk3MTA4MzQ=", "number": 1198, "title": "Check the type of grad given to backward and assigned to .grad", "user": {"login": "woofie56", "id": 6050969, "node_id": "MDQ6VXNlcjYwNTA5Njk=", "avatar_url": "https://avatars0.githubusercontent.com/u/6050969?v=4", "gravatar_id": "", "url": "https://api.github.com/users/woofie56", "html_url": "https://github.com/woofie56", "followers_url": "https://api.github.com/users/woofie56/followers", "following_url": "https://api.github.com/users/woofie56/following{/other_user}", "gists_url": "https://api.github.com/users/woofie56/gists{/gist_id}", "starred_url": "https://api.github.com/users/woofie56/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/woofie56/subscriptions", "organizations_url": "https://api.github.com/users/woofie56/orgs", "repos_url": "https://api.github.com/users/woofie56/repos", "events_url": "https://api.github.com/users/woofie56/events{/privacy}", "received_events_url": "https://api.github.com/users/woofie56/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 424131849, "node_id": "MDU6TGFiZWw0MjQxMzE4NDk=", "url": "https://api.github.com/repos/pytorch/pytorch/labels/enhancement", "name": "enhancement", "color": "84b6eb", "default": true}, {"id": 443484050, "node_id": "MDU6TGFiZWw0NDM0ODQwNTA=", "url": "https://api.github.com/repos/pytorch/pytorch/labels/medium%20priority", "name": "medium priority", "color": "fbca04", "default": false}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-04-05T20:50:41Z", "updated_at": "2017-06-03T21:28:11Z", "closed_at": null, "author_association": "NONE", "body_html": "<p>The following works :</p>\n<pre><code>import numpy as np\nimport torch\nfrom torch.autograd import Variable\n\nx = torch.from_numpy(np.array([1.,2.,3.]))\nx = Variable(x, requires_grad=True)\ny = x * 2\ngradients = torch.FloatTensor([1, 1, 1])\ny.backward(gradients)\n</code></pre>\n<p>However the following yields an error (notice I have <code>y = x * x</code> instead of <code>y = x * 2</code>) :</p>\n<pre><code>import numpy as np\nimport torch\nfrom torch.autograd import Variable\n\nx = torch.from_numpy(np.array([1.,2.,3.]))\nx = Variable(x, requires_grad=True)\ny = x * x\ngradients = torch.FloatTensor([1, 1, 1])\ny.backward(gradients)\n</code></pre>\n<p>saying :</p>\n<pre><code>TypeError: mul received an invalid combination of arguments - got (torch.DoubleTensor), but expected one of:\n * (float value)\n * (torch.FloatTensor other)\n\n</code></pre>\n<p>This can be fixed by using <code>x = torch.from_numpy(np.array([1.,2.,3.],dtype=np.float32))</code> instead of <code>x = torch.from_numpy(np.array([1.,2.,3.]))</code>. But why does the first example not require this change, whereas the second example requires it?</p>", "body_text": "The following works :\nimport numpy as np\nimport torch\nfrom torch.autograd import Variable\n\nx = torch.from_numpy(np.array([1.,2.,3.]))\nx = Variable(x, requires_grad=True)\ny = x * 2\ngradients = torch.FloatTensor([1, 1, 1])\ny.backward(gradients)\n\nHowever the following yields an error (notice I have y = x * x instead of y = x * 2) :\nimport numpy as np\nimport torch\nfrom torch.autograd import Variable\n\nx = torch.from_numpy(np.array([1.,2.,3.]))\nx = Variable(x, requires_grad=True)\ny = x * x\ngradients = torch.FloatTensor([1, 1, 1])\ny.backward(gradients)\n\nsaying :\nTypeError: mul received an invalid combination of arguments - got (torch.DoubleTensor), but expected one of:\n * (float value)\n * (torch.FloatTensor other)\n\n\nThis can be fixed by using x = torch.from_numpy(np.array([1.,2.,3.],dtype=np.float32)) instead of x = torch.from_numpy(np.array([1.,2.,3.])). But why does the first example not require this change, whereas the second example requires it?", "body": "The following works : \r\n\r\n```\r\nimport numpy as np\r\nimport torch\r\nfrom torch.autograd import Variable\r\n\r\nx = torch.from_numpy(np.array([1.,2.,3.]))\r\nx = Variable(x, requires_grad=True)\r\ny = x * 2\r\ngradients = torch.FloatTensor([1, 1, 1])\r\ny.backward(gradients)\r\n```\r\nHowever the following yields an error (notice I have `y = x * x` instead of `y = x * 2`) : \r\n\r\n```\r\nimport numpy as np\r\nimport torch\r\nfrom torch.autograd import Variable\r\n\r\nx = torch.from_numpy(np.array([1.,2.,3.]))\r\nx = Variable(x, requires_grad=True)\r\ny = x * x\r\ngradients = torch.FloatTensor([1, 1, 1])\r\ny.backward(gradients)\r\n```\r\nsaying : \r\n\r\n```\r\nTypeError: mul received an invalid combination of arguments - got (torch.DoubleTensor), but expected one of:\r\n * (float value)\r\n * (torch.FloatTensor other)\r\n\r\n```\r\nThis can be fixed by using `x = torch.from_numpy(np.array([1.,2.,3.],dtype=np.float32))` instead of `x = torch.from_numpy(np.array([1.,2.,3.]))`. But why does the first example not require this change, whereas the second example requires it?"}