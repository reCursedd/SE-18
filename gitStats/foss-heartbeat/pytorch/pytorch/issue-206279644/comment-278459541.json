{"url": "https://api.github.com/repos/pytorch/pytorch/issues/comments/278459541", "html_url": "https://github.com/pytorch/pytorch/issues/703#issuecomment-278459541", "issue_url": "https://api.github.com/repos/pytorch/pytorch/issues/703", "id": 278459541, "node_id": "MDEyOklzc3VlQ29tbWVudDI3ODQ1OTU0MQ==", "user": {"login": "apaszke", "id": 4583066, "node_id": "MDQ6VXNlcjQ1ODMwNjY=", "avatar_url": "https://avatars3.githubusercontent.com/u/4583066?v=4", "gravatar_id": "", "url": "https://api.github.com/users/apaszke", "html_url": "https://github.com/apaszke", "followers_url": "https://api.github.com/users/apaszke/followers", "following_url": "https://api.github.com/users/apaszke/following{/other_user}", "gists_url": "https://api.github.com/users/apaszke/gists{/gist_id}", "starred_url": "https://api.github.com/users/apaszke/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/apaszke/subscriptions", "organizations_url": "https://api.github.com/users/apaszke/orgs", "repos_url": "https://api.github.com/users/apaszke/repos", "events_url": "https://api.github.com/users/apaszke/events{/privacy}", "received_events_url": "https://api.github.com/users/apaszke/received_events", "type": "User", "site_admin": false}, "created_at": "2017-02-08T20:58:47Z", "updated_at": "2017-02-08T20:58:47Z", "author_association": "MEMBER", "body_html": "<p>Can we rely on that? Or might it change in the future versions? The cuDNN user guide says:</p>\n<blockquote>\n<p>The data in reserveSpace must have previously been generated by cudnnRNNForwardTraining. The same reserveSpace data must be used for future calls to cudnnRNNBackwardWeights if they execute on the same input data.</p>\n</blockquote>\n<p>Also (description of <code>cuDNNBackwardWeights</code>):</p>\n<blockquote>\n<p>The data in reserveSpace must have previously been generated by cudnnRNNBackwardData.</p>\n</blockquote>\n<p>That sounds to me as if you always have to call <code>cudnnRNNBackwardData</code> before <code>cudnnRNNBackwardWeights</code>, because it modifies something. If that's not true, can we skip <code>cudnnRNNBackwardData</code> altogether if the input doesn't require grad?</p>", "body_text": "Can we rely on that? Or might it change in the future versions? The cuDNN user guide says:\n\nThe data in reserveSpace must have previously been generated by cudnnRNNForwardTraining. The same reserveSpace data must be used for future calls to cudnnRNNBackwardWeights if they execute on the same input data.\n\nAlso (description of cuDNNBackwardWeights):\n\nThe data in reserveSpace must have previously been generated by cudnnRNNBackwardData.\n\nThat sounds to me as if you always have to call cudnnRNNBackwardData before cudnnRNNBackwardWeights, because it modifies something. If that's not true, can we skip cudnnRNNBackwardData altogether if the input doesn't require grad?", "body": "Can we rely on that? Or might it change in the future versions? The cuDNN user guide says:\r\n\r\n> The data in reserveSpace must have previously been generated by cudnnRNNForwardTraining. The same reserveSpace data must be used for future calls to cudnnRNNBackwardWeights if they execute on the same input data.\r\n\r\nAlso (description of `cuDNNBackwardWeights`):\r\n\r\n> The data in reserveSpace must have previously been generated by cudnnRNNBackwardData.\r\n\r\nThat sounds to me as if you always have to call `cudnnRNNBackwardData` before `cudnnRNNBackwardWeights`, because it modifies something. If that's not true, can we skip `cudnnRNNBackwardData` altogether if the input doesn't require grad?"}