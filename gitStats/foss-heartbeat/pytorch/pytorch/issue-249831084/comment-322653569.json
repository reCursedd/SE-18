{"url": "https://api.github.com/repos/pytorch/pytorch/issues/comments/322653569", "html_url": "https://github.com/pytorch/pytorch/issues/2398#issuecomment-322653569", "issue_url": "https://api.github.com/repos/pytorch/pytorch/issues/2398", "id": 322653569, "node_id": "MDEyOklzc3VlQ29tbWVudDMyMjY1MzU2OQ==", "user": {"login": "apaszke", "id": 4583066, "node_id": "MDQ6VXNlcjQ1ODMwNjY=", "avatar_url": "https://avatars3.githubusercontent.com/u/4583066?v=4", "gravatar_id": "", "url": "https://api.github.com/users/apaszke", "html_url": "https://github.com/apaszke", "followers_url": "https://api.github.com/users/apaszke/followers", "following_url": "https://api.github.com/users/apaszke/following{/other_user}", "gists_url": "https://api.github.com/users/apaszke/gists{/gist_id}", "starred_url": "https://api.github.com/users/apaszke/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/apaszke/subscriptions", "organizations_url": "https://api.github.com/users/apaszke/orgs", "repos_url": "https://api.github.com/users/apaszke/repos", "events_url": "https://api.github.com/users/apaszke/events{/privacy}", "received_events_url": "https://api.github.com/users/apaszke/received_events", "type": "User", "site_admin": false}, "created_at": "2017-08-16T03:04:37Z", "updated_at": "2017-08-16T03:04:55Z", "author_association": "MEMBER", "body_html": "<p>Can you please post a complete snippet that reproduces the error (including initialization of all variables you use)? The sizes might be relevant. All operations are queued in default stream by default and any attempt to read the data of CUDA tensor will make CPU wait for completion of all queued kernels, so you shouldn't see any trash values. In your second example you only created the stream, but didn't enable it (you need to do <code>with stream:</code>)</p>", "body_text": "Can you please post a complete snippet that reproduces the error (including initialization of all variables you use)? The sizes might be relevant. All operations are queued in default stream by default and any attempt to read the data of CUDA tensor will make CPU wait for completion of all queued kernels, so you shouldn't see any trash values. In your second example you only created the stream, but didn't enable it (you need to do with stream:)", "body": "Can you please post a complete snippet that reproduces the error (including initialization of all variables you use)? The sizes might be relevant. All operations are queued in default stream by default and any attempt to read the data of CUDA tensor will make CPU wait for completion of all queued kernels, so you shouldn't see any trash values. In your second example you only created the stream, but didn't enable it (you need to do `with stream:`)"}