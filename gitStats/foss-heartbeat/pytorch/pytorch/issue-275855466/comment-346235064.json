{"url": "https://api.github.com/repos/pytorch/pytorch/issues/comments/346235064", "html_url": "https://github.com/pytorch/pytorch/issues/3818#issuecomment-346235064", "issue_url": "https://api.github.com/repos/pytorch/pytorch/issues/3818", "id": 346235064, "node_id": "MDEyOklzc3VlQ29tbWVudDM0NjIzNTA2NA==", "user": {"login": "colesbury", "id": 655866, "node_id": "MDQ6VXNlcjY1NTg2Ng==", "avatar_url": "https://avatars1.githubusercontent.com/u/655866?v=4", "gravatar_id": "", "url": "https://api.github.com/users/colesbury", "html_url": "https://github.com/colesbury", "followers_url": "https://api.github.com/users/colesbury/followers", "following_url": "https://api.github.com/users/colesbury/following{/other_user}", "gists_url": "https://api.github.com/users/colesbury/gists{/gist_id}", "starred_url": "https://api.github.com/users/colesbury/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/colesbury/subscriptions", "organizations_url": "https://api.github.com/users/colesbury/orgs", "repos_url": "https://api.github.com/users/colesbury/repos", "events_url": "https://api.github.com/users/colesbury/events{/privacy}", "received_events_url": "https://api.github.com/users/colesbury/received_events", "type": "User", "site_admin": false}, "created_at": "2017-11-22T03:46:21Z", "updated_at": "2017-11-22T04:03:36Z", "author_association": "MEMBER", "body_html": "<p>Here's similar Python code (which also leaks):</p>\n<div class=\"highlight highlight-source-python\"><pre><span class=\"pl-k\">import</span> gc\n<span class=\"pl-k\">import</span> resource\n<span class=\"pl-k\">import</span> torch\n<span class=\"pl-k\">from</span> torch.autograd <span class=\"pl-k\">import</span> Variable\n\ni <span class=\"pl-k\">=</span> <span class=\"pl-c1\">0</span>\n<span class=\"pl-k\">while</span> <span class=\"pl-c1\">True</span>:\n    W <span class=\"pl-k\">=</span> Variable(torch.randn(<span class=\"pl-c1\">10</span>), <span class=\"pl-v\">requires_grad</span><span class=\"pl-k\">=</span><span class=\"pl-c1\">True</span>)\n    x <span class=\"pl-k\">=</span> Variable(torch.randn(<span class=\"pl-c1\">10</span>), <span class=\"pl-v\">requires_grad</span><span class=\"pl-k\">=</span><span class=\"pl-c1\">True</span>)\n    z <span class=\"pl-k\">=</span> W <span class=\"pl-k\">*</span> x\n    z.backward(torch.ones(z.size()), <span class=\"pl-v\">create_graph</span><span class=\"pl-k\">=</span><span class=\"pl-c1\">True</span>)\n    i <span class=\"pl-k\">+=</span> <span class=\"pl-c1\">1</span>\n\n    <span class=\"pl-k\">if</span> i <span class=\"pl-k\">%</span> <span class=\"pl-c1\">1000</span> <span class=\"pl-k\">==</span> <span class=\"pl-c1\">0</span>:\n        gc.collect()\n        max_mem_used <span class=\"pl-k\">=</span> resource.getrusage(resource.<span class=\"pl-c1\">RUSAGE_SELF</span>).ru_maxrss\n        <span class=\"pl-c1\">print</span>(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span><span class=\"pl-c1\">{<span class=\"pl-k\">:.2f</span>}</span> MB<span class=\"pl-pds\">\"</span></span>.format(max_mem_used <span class=\"pl-k\">/</span> <span class=\"pl-c1\">1024</span>))</pre></div>", "body_text": "Here's similar Python code (which also leaks):\nimport gc\nimport resource\nimport torch\nfrom torch.autograd import Variable\n\ni = 0\nwhile True:\n    W = Variable(torch.randn(10), requires_grad=True)\n    x = Variable(torch.randn(10), requires_grad=True)\n    z = W * x\n    z.backward(torch.ones(z.size()), create_graph=True)\n    i += 1\n\n    if i % 1000 == 0:\n        gc.collect()\n        max_mem_used = resource.getrusage(resource.RUSAGE_SELF).ru_maxrss\n        print(\"{:.2f} MB\".format(max_mem_used / 1024))", "body": "Here's similar Python code (which also leaks):\r\n\r\n```python\r\nimport gc\r\nimport resource\r\nimport torch\r\nfrom torch.autograd import Variable\r\n\r\ni = 0\r\nwhile True:\r\n    W = Variable(torch.randn(10), requires_grad=True)\r\n    x = Variable(torch.randn(10), requires_grad=True)\r\n    z = W * x\r\n    z.backward(torch.ones(z.size()), create_graph=True)\r\n    i += 1\r\n\r\n    if i % 1000 == 0:\r\n        gc.collect()\r\n        max_mem_used = resource.getrusage(resource.RUSAGE_SELF).ru_maxrss\r\n        print(\"{:.2f} MB\".format(max_mem_used / 1024))\r\n```"}