{"url": "https://api.github.com/repos/pytorch/pytorch/issues/comments/346466824", "html_url": "https://github.com/pytorch/pytorch/issues/3818#issuecomment-346466824", "issue_url": "https://api.github.com/repos/pytorch/pytorch/issues/3818", "id": 346466824, "node_id": "MDEyOklzc3VlQ29tbWVudDM0NjQ2NjgyNA==", "user": {"login": "dmarnerides", "id": 7605917, "node_id": "MDQ6VXNlcjc2MDU5MTc=", "avatar_url": "https://avatars1.githubusercontent.com/u/7605917?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dmarnerides", "html_url": "https://github.com/dmarnerides", "followers_url": "https://api.github.com/users/dmarnerides/followers", "following_url": "https://api.github.com/users/dmarnerides/following{/other_user}", "gists_url": "https://api.github.com/users/dmarnerides/gists{/gist_id}", "starred_url": "https://api.github.com/users/dmarnerides/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dmarnerides/subscriptions", "organizations_url": "https://api.github.com/users/dmarnerides/orgs", "repos_url": "https://api.github.com/users/dmarnerides/repos", "events_url": "https://api.github.com/users/dmarnerides/events{/privacy}", "received_events_url": "https://api.github.com/users/dmarnerides/received_events", "type": "User", "site_admin": false}, "created_at": "2017-11-22T20:38:07Z", "updated_at": "2017-11-22T20:38:07Z", "author_association": "NONE", "body_html": "<p>So just to make sure i get this correctly, you mean not use <code>.backward()</code> on the final loss (which might also contain terms evaluated with <code>torch.autograd.grad</code>) but instead compute that with <code>torch.autograd.grad</code> as well?</p>", "body_text": "So just to make sure i get this correctly, you mean not use .backward() on the final loss (which might also contain terms evaluated with torch.autograd.grad) but instead compute that with torch.autograd.grad as well?", "body": "So just to make sure i get this correctly, you mean not use `.backward()` on the final loss (which might also contain terms evaluated with `torch.autograd.grad`) but instead compute that with `torch.autograd.grad` as well?"}