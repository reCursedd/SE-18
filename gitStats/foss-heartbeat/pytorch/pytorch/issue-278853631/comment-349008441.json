{"url": "https://api.github.com/repos/pytorch/pytorch/issues/comments/349008441", "html_url": "https://github.com/pytorch/pytorch/issues/3991#issuecomment-349008441", "issue_url": "https://api.github.com/repos/pytorch/pytorch/issues/3991", "id": 349008441, "node_id": "MDEyOklzc3VlQ29tbWVudDM0OTAwODQ0MQ==", "user": {"login": "zou3519", "id": 5652049, "node_id": "MDQ6VXNlcjU2NTIwNDk=", "avatar_url": "https://avatars3.githubusercontent.com/u/5652049?v=4", "gravatar_id": "", "url": "https://api.github.com/users/zou3519", "html_url": "https://github.com/zou3519", "followers_url": "https://api.github.com/users/zou3519/followers", "following_url": "https://api.github.com/users/zou3519/following{/other_user}", "gists_url": "https://api.github.com/users/zou3519/gists{/gist_id}", "starred_url": "https://api.github.com/users/zou3519/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/zou3519/subscriptions", "organizations_url": "https://api.github.com/users/zou3519/orgs", "repos_url": "https://api.github.com/users/zou3519/repos", "events_url": "https://api.github.com/users/zou3519/events{/privacy}", "received_events_url": "https://api.github.com/users/zou3519/received_events", "type": "User", "site_admin": false}, "created_at": "2017-12-04T16:05:18Z", "updated_at": "2017-12-04T16:05:18Z", "author_association": "CONTRIBUTOR", "body_html": "<p>We're working on it! This issue is being tracked here: <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load issue title\" data-id=\"252983289\" data-permission-text=\"Issue title is private\" data-url=\"https://github.com/pytorch/pytorch/issues/2539\" data-hovercard-type=\"issue\" data-hovercard-url=\"/pytorch/pytorch/issues/2539/hovercard\" href=\"https://github.com/pytorch/pytorch/issues/2539\">#2539</a></p>\n<p>For now, a workaround is to make sure the sizes of your targets aren't <code>(n,)</code>. This can be done by unsqueezing the last dimension:</p>\n<p>import torch<br>\nfrom torch.utils.data import DataLoader, TensorDataset</p>\n<pre><code>x = torch.randn(100, 10)\ny = torch.randn(100)\ny = y.unsqueeze(1)\n\nassert y.type() == \"torch.FloatTensor\"\ndataset = TensorDataset(x, y)\ndataloader = DataLoader(dataset)\nx, y = list(dataloader)[0]\nprint(y.type())\n</code></pre>", "body_text": "We're working on it! This issue is being tracked here: #2539\nFor now, a workaround is to make sure the sizes of your targets aren't (n,). This can be done by unsqueezing the last dimension:\nimport torch\nfrom torch.utils.data import DataLoader, TensorDataset\nx = torch.randn(100, 10)\ny = torch.randn(100)\ny = y.unsqueeze(1)\n\nassert y.type() == \"torch.FloatTensor\"\ndataset = TensorDataset(x, y)\ndataloader = DataLoader(dataset)\nx, y = list(dataloader)[0]\nprint(y.type())", "body": "We're working on it! This issue is being tracked here: https://github.com/pytorch/pytorch/issues/2539\r\n\r\nFor now, a workaround is to make sure the sizes of your targets aren't `(n,)`. This can be done by unsqueezing the last dimension:\r\n\r\nimport torch\r\nfrom torch.utils.data import DataLoader, TensorDataset\r\n\r\n```\r\nx = torch.randn(100, 10)\r\ny = torch.randn(100)\r\ny = y.unsqueeze(1)\r\n\r\nassert y.type() == \"torch.FloatTensor\"\r\ndataset = TensorDataset(x, y)\r\ndataloader = DataLoader(dataset)\r\nx, y = list(dataloader)[0]\r\nprint(y.type())\r\n```"}