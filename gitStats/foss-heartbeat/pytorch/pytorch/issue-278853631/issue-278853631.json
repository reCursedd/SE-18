{"url": "https://api.github.com/repos/pytorch/pytorch/issues/3991", "repository_url": "https://api.github.com/repos/pytorch/pytorch", "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/3991/labels{/name}", "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/3991/comments", "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/3991/events", "html_url": "https://github.com/pytorch/pytorch/issues/3991", "id": 278853631, "node_id": "MDU6SXNzdWUyNzg4NTM2MzE=", "number": 3991, "title": "DataLoader converts FloatTensor to DoubleTensor", "user": {"login": "SnowWalkerJ", "id": 13903887, "node_id": "MDQ6VXNlcjEzOTAzODg3", "avatar_url": "https://avatars1.githubusercontent.com/u/13903887?v=4", "gravatar_id": "", "url": "https://api.github.com/users/SnowWalkerJ", "html_url": "https://github.com/SnowWalkerJ", "followers_url": "https://api.github.com/users/SnowWalkerJ/followers", "following_url": "https://api.github.com/users/SnowWalkerJ/following{/other_user}", "gists_url": "https://api.github.com/users/SnowWalkerJ/gists{/gist_id}", "starred_url": "https://api.github.com/users/SnowWalkerJ/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/SnowWalkerJ/subscriptions", "organizations_url": "https://api.github.com/users/SnowWalkerJ/orgs", "repos_url": "https://api.github.com/users/SnowWalkerJ/repos", "events_url": "https://api.github.com/users/SnowWalkerJ/events{/privacy}", "received_events_url": "https://api.github.com/users/SnowWalkerJ/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-12-04T02:42:09Z", "updated_at": "2017-12-04T16:53:10Z", "closed_at": "2017-12-04T16:53:10Z", "author_association": "NONE", "body_html": "<p>Mostly in Pytorch calculations are done with FloatTensor. But with Dataloader it seems to automatically convert the target(label) tensor to DoubleTensor, which is very inconvenient since I have to manually convert it back.</p>\n<div class=\"highlight highlight-source-python\"><pre><span class=\"pl-k\">import</span> torch\n<span class=\"pl-k\">from</span> torch.utils.data <span class=\"pl-k\">import</span> DataLoader, TensorDataset\n\nx <span class=\"pl-k\">=</span> torch.randn(<span class=\"pl-c1\">100</span>, <span class=\"pl-c1\">10</span>)\ny <span class=\"pl-k\">=</span> torch.randn(<span class=\"pl-c1\">100</span>)\n\n<span class=\"pl-k\">assert</span> y.type() <span class=\"pl-k\">==</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>torch.FloatTensor<span class=\"pl-pds\">\"</span></span>\ndataset <span class=\"pl-k\">=</span> TensorDataset(x, y)\ndataloader <span class=\"pl-k\">=</span> DataLoader(dataset)\nx, y <span class=\"pl-k\">=</span> <span class=\"pl-c1\">list</span>(dataloader)[<span class=\"pl-c1\">0</span>]\n<span class=\"pl-c1\">print</span>(y.type())\n<span class=\"pl-c\"><span class=\"pl-c\">#</span> torch.DoubleTensor</span></pre></div>\n<p>Pytorch version: '0.2.0_4'</p>", "body_text": "Mostly in Pytorch calculations are done with FloatTensor. But with Dataloader it seems to automatically convert the target(label) tensor to DoubleTensor, which is very inconvenient since I have to manually convert it back.\nimport torch\nfrom torch.utils.data import DataLoader, TensorDataset\n\nx = torch.randn(100, 10)\ny = torch.randn(100)\n\nassert y.type() == \"torch.FloatTensor\"\ndataset = TensorDataset(x, y)\ndataloader = DataLoader(dataset)\nx, y = list(dataloader)[0]\nprint(y.type())\n# torch.DoubleTensor\nPytorch version: '0.2.0_4'", "body": "Mostly in Pytorch calculations are done with FloatTensor. But with Dataloader it seems to automatically convert the target(label) tensor to DoubleTensor, which is very inconvenient since I have to manually convert it back.\r\n\r\n```python\r\nimport torch\r\nfrom torch.utils.data import DataLoader, TensorDataset\r\n\r\nx = torch.randn(100, 10)\r\ny = torch.randn(100)\r\n\r\nassert y.type() == \"torch.FloatTensor\"\r\ndataset = TensorDataset(x, y)\r\ndataloader = DataLoader(dataset)\r\nx, y = list(dataloader)[0]\r\nprint(y.type())\r\n# torch.DoubleTensor\r\n```\r\n\r\nPytorch version: '0.2.0_4'"}