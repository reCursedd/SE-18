{"url": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/166093241", "pull_request_review_id": 94119732, "id": 166093241, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE2NjA5MzI0MQ==", "diff_hunk": "@@ -0,0 +1,243 @@\n+#include \"ATen/ATen.h\"\n+#include \"ATen/Check.h\"\n+#include \"ATen/NativeFunctions.h\"\n+\n+#include <cstring>\n+#include <iostream>\n+#include <memory>\n+#include <sstream>\n+#include <vector>\n+\n+#include <TH/THBlas.h>\n+\n+#ifdef _OPENMP\n+#include <omp.h>\n+#endif\n+\n+namespace at {\n+namespace native {\n+\n+static void make_offset2bag(const Tensor &offsets, const Tensor &indices,\n+                            Tensor &offset2bag) {\n+  offset2bag.index_fill_(0, offsets, 1);    // offset2bag = [1 0 1 0 1]\n+  offset2bag[0] = 0;                        // offset2bag = [0 0 1 0 1]\n+  offset2bag = offset2bag.cumsum(0);        //  # offset2bag = [0 0 1 1 2]\n+}\n+\n+static void make_bag_size(const Tensor &offsets, const Tensor &indices,\n+                          const int64_t mode, Tensor &bag_size) {\n+  if (mode == 1) { // MODE_MEAN\n+    if (offsets.sizes()[0] != 1) {\n+      bag_size.slice(0, 0, bag_size.sizes()[0] - 1, 1) =\n+          offsets.slice(0, 1, offsets.sizes()[0], 1) -\n+          offsets.slice(0, 0, offsets.sizes()[0] - 1, 1);\n+      bag_size[-1] = indices.sizes()[0] - offsets[-1];\n+    }\n+  }\n+}\n+\n+static Tensor apply_bag_size(const Tensor &offsets, const Tensor &indices,\n+                             const int64_t mode, Tensor &output,\n+                             const Tensor &bag_size) {\n+  if (mode == 1) { // MODE_MEAN\n+    if (offsets.sizes()[0] == 1) {\n+      auto bag_size_ = indices.sizes()[0];\n+      output /= bag_size_;\n+    } else {\n+      auto bag_size_ =\n+          bag_size.toType(output.type()).unsqueeze(1).expand_as(output);\n+      output /= bag_size_;\n+    }\n+  }\n+  return output;\n+}\n+\n+static Tensor apply_bag_size_backward(const Tensor &offsets,\n+                                      const Tensor &indices, const int64_t mode,\n+                                      Tensor &output, const Tensor &offset2bag,\n+                                      const Tensor &bag_size) {\n+  if (mode == 1) { // MODE_MEAN\n+    if (offsets.sizes()[0] == 1) {\n+      auto bag_size = indices.sizes()[0];\n+      output /= bag_size;\n+    } else {\n+      auto bag_size_ = bag_size.toType(output.type())\n+                           .unsqueeze(1)\n+                           .index_select(0, offset2bag);\n+      output /= bag_size_;\n+    }\n+  }\n+  return output;\n+}\n+\n+std::tuple<Tensor, Tensor, Tensor>\n+embedding_bag_cpu(const Tensor &weight, const Tensor &indices__,\n+                  const Tensor &offsets__, const Tensor &offset2bag__,\n+                  const Tensor &bag_size_, const bool scale_grad_by_freq,", "path": "aten/src/ATen/native/EmbeddingBag.cpp", "position": null, "original_position": 76, "commit_id": "0580481472d87117344fd61a60b0ee487a31ef56", "original_commit_id": "478ec5876cde3ee354cadd089d78aec929573265", "user": {"login": "colesbury", "id": 655866, "node_id": "MDQ6VXNlcjY1NTg2Ng==", "avatar_url": "https://avatars1.githubusercontent.com/u/655866?v=4", "gravatar_id": "", "url": "https://api.github.com/users/colesbury", "html_url": "https://github.com/colesbury", "followers_url": "https://api.github.com/users/colesbury/followers", "following_url": "https://api.github.com/users/colesbury/following{/other_user}", "gists_url": "https://api.github.com/users/colesbury/gists{/gist_id}", "starred_url": "https://api.github.com/users/colesbury/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/colesbury/subscriptions", "organizations_url": "https://api.github.com/users/colesbury/orgs", "repos_url": "https://api.github.com/users/colesbury/repos", "events_url": "https://api.github.com/users/colesbury/events{/privacy}", "received_events_url": "https://api.github.com/users/colesbury/received_events", "type": "User", "site_admin": false}, "body": "Why is `bag_size` an input? It looks like it's an output computed by `embedding_bag_cpu`.", "created_at": "2018-02-05T19:52:53Z", "updated_at": "2018-11-23T15:39:06Z", "html_url": "https://github.com/pytorch/pytorch/pull/4856#discussion_r166093241", "pull_request_url": "https://api.github.com/repos/pytorch/pytorch/pulls/4856", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/166093241"}, "html": {"href": "https://github.com/pytorch/pytorch/pull/4856#discussion_r166093241"}, "pull_request": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/4856"}}, "body_html": "<p>Why is <code>bag_size</code> an input? It looks like it's an output computed by <code>embedding_bag_cpu</code>.</p>", "body_text": "Why is bag_size an input? It looks like it's an output computed by embedding_bag_cpu."}