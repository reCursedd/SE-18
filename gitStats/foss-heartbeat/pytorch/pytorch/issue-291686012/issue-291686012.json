{"url": "https://api.github.com/repos/pytorch/pytorch/issues/4856", "repository_url": "https://api.github.com/repos/pytorch/pytorch", "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/4856/labels{/name}", "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/4856/comments", "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/4856/events", "html_url": "https://github.com/pytorch/pytorch/pull/4856", "id": 291686012, "node_id": "MDExOlB1bGxSZXF1ZXN0MTY1MjA2MDQ3", "number": 4856, "title": "Move EmbeddingBag into ATen", "user": {"login": "cpuhrsch", "id": 1716488, "node_id": "MDQ6VXNlcjE3MTY0ODg=", "avatar_url": "https://avatars1.githubusercontent.com/u/1716488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cpuhrsch", "html_url": "https://github.com/cpuhrsch", "followers_url": "https://api.github.com/users/cpuhrsch/followers", "following_url": "https://api.github.com/users/cpuhrsch/following{/other_user}", "gists_url": "https://api.github.com/users/cpuhrsch/gists{/gist_id}", "starred_url": "https://api.github.com/users/cpuhrsch/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cpuhrsch/subscriptions", "organizations_url": "https://api.github.com/users/cpuhrsch/orgs", "repos_url": "https://api.github.com/users/cpuhrsch/repos", "events_url": "https://api.github.com/users/cpuhrsch/events{/privacy}", "received_events_url": "https://api.github.com/users/cpuhrsch/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2018-01-25T19:23:49Z", "updated_at": "2018-11-23T15:39:26Z", "closed_at": "2018-02-12T19:20:33Z", "author_association": "CONTRIBUTOR", "pull_request": {"url": "https://api.github.com/repos/pytorch/pytorch/pulls/4856", "html_url": "https://github.com/pytorch/pytorch/pull/4856", "diff_url": "https://github.com/pytorch/pytorch/pull/4856.diff", "patch_url": "https://github.com/pytorch/pytorch/pull/4856.patch"}, "body_html": "<p>This diff creates code related to EmbeddingBag in ATen. It also allows sparse gradients.</p>\n<p>This is the command I used to create the timings for both</p>\n<pre><code>NUMEXPR_NUM_THREADS=8 MKL_NUM_THREADS=8 OMP_NUM_THREADS=8 taskset -c 0-7 python benchmarks/embeddingbag.py\n</code></pre>\n<p>Master</p>\n<pre><code>\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\nruns: 10000     number of indices: 2000 maximum number of bags: 200     maximum bag size: 30\n\n====================================================================================================\ndimension:      10000   x       100\n----------------------------------------------------------------------------------------------------\ncpu dense       cpu sparse      cuda dense      cuda sparse\n  13.175s          0.000s          7.638s          0.000s\n\n====================================================================================================\ndimension:      10000   x       1000\n----------------------------------------------------------------------------------------------------\ncpu dense       cpu sparse      cuda dense      cuda sparse\n  66.805s          0.000s          7.442s          0.000s\n\n====================================================================================================\ndimension:      100000  x       100\n----------------------------------------------------------------------------------------------------\ncpu dense       cpu sparse      cuda dense      cuda sparse\n  59.101s          0.000s          9.520s          0.000s\n\n====================================================================================================\ndimension:      100000  x       1000\n----------------------------------------------------------------------------------------------------\ncpu dense       cpu sparse      cuda dense      cuda sparse\n 495.547s          0.000s         30.891s          0.000s\n</code></pre>\n<p>emb_tmp</p>\n<pre><code>\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\nruns: 10000     number of indices: 2000 maximum number of bags: 200     maximum bag size: 30\n\n====================================================================================================\ndimension:      10000   x       100\n----------------------------------------------------------------------------------------------------\ncpu dense       cpu sparse      cuda dense      cuda sparse\n  15.195s         17.045s          6.571s          6.513s\n\n====================================================================================================\ndimension:      10000   x       1000\n----------------------------------------------------------------------------------------------------\ncpu dense       cpu sparse      cuda dense      cuda sparse\n  64.924s         21.673s          8.399s          6.361s\n\n====================================================================================================\ndimension:      100000  x       100\n----------------------------------------------------------------------------------------------------\ncpu dense       cpu sparse      cuda dense      cuda sparse\n  57.969s         14.924s          8.211s          6.711s\n\n====================================================================================================\ndimension:      100000  x       1000\n----------------------------------------------------------------------------------------------------\ncpu dense       cpu sparse      cuda dense      cuda sparse\n 496.196s         22.128s         30.167s          6.683s\n</code></pre>\n<p><a href=\"https://pastebin.com/0K6aNjqS\" rel=\"nofollow\">This</a> is the script I used to benchmark.<br>\nEDIT: Added CUDA synchronize</p>\n<p>The performance between both branches matches, but this new code has sparse gradients and lives within ATen.</p>\n<p>The code was built with</p>\n<pre><code>python setup.py build_deps develop\n</code></pre>\n<p>The timings of the first 1000 runs are discarded and the benchmark is executed 10000 times.</p>", "body_text": "This diff creates code related to EmbeddingBag in ATen. It also allows sparse gradients.\nThis is the command I used to create the timings for both\nNUMEXPR_NUM_THREADS=8 MKL_NUM_THREADS=8 OMP_NUM_THREADS=8 taskset -c 0-7 python benchmarks/embeddingbag.py\n\nMaster\n\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\nruns: 10000     number of indices: 2000 maximum number of bags: 200     maximum bag size: 30\n\n====================================================================================================\ndimension:      10000   x       100\n----------------------------------------------------------------------------------------------------\ncpu dense       cpu sparse      cuda dense      cuda sparse\n  13.175s          0.000s          7.638s          0.000s\n\n====================================================================================================\ndimension:      10000   x       1000\n----------------------------------------------------------------------------------------------------\ncpu dense       cpu sparse      cuda dense      cuda sparse\n  66.805s          0.000s          7.442s          0.000s\n\n====================================================================================================\ndimension:      100000  x       100\n----------------------------------------------------------------------------------------------------\ncpu dense       cpu sparse      cuda dense      cuda sparse\n  59.101s          0.000s          9.520s          0.000s\n\n====================================================================================================\ndimension:      100000  x       1000\n----------------------------------------------------------------------------------------------------\ncpu dense       cpu sparse      cuda dense      cuda sparse\n 495.547s          0.000s         30.891s          0.000s\n\nemb_tmp\n\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\nruns: 10000     number of indices: 2000 maximum number of bags: 200     maximum bag size: 30\n\n====================================================================================================\ndimension:      10000   x       100\n----------------------------------------------------------------------------------------------------\ncpu dense       cpu sparse      cuda dense      cuda sparse\n  15.195s         17.045s          6.571s          6.513s\n\n====================================================================================================\ndimension:      10000   x       1000\n----------------------------------------------------------------------------------------------------\ncpu dense       cpu sparse      cuda dense      cuda sparse\n  64.924s         21.673s          8.399s          6.361s\n\n====================================================================================================\ndimension:      100000  x       100\n----------------------------------------------------------------------------------------------------\ncpu dense       cpu sparse      cuda dense      cuda sparse\n  57.969s         14.924s          8.211s          6.711s\n\n====================================================================================================\ndimension:      100000  x       1000\n----------------------------------------------------------------------------------------------------\ncpu dense       cpu sparse      cuda dense      cuda sparse\n 496.196s         22.128s         30.167s          6.683s\n\nThis is the script I used to benchmark.\nEDIT: Added CUDA synchronize\nThe performance between both branches matches, but this new code has sparse gradients and lives within ATen.\nThe code was built with\npython setup.py build_deps develop\n\nThe timings of the first 1000 runs are discarded and the benchmark is executed 10000 times.", "body": "This diff creates code related to EmbeddingBag in ATen. It also allows sparse gradients.\r\n\r\nThis is the command I used to create the timings for both \r\n```\r\nNUMEXPR_NUM_THREADS=8 MKL_NUM_THREADS=8 OMP_NUM_THREADS=8 taskset -c 0-7 python benchmarks/embeddingbag.py\r\n```\r\n\r\nMaster\r\n```\r\n\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\r\nruns: 10000     number of indices: 2000 maximum number of bags: 200     maximum bag size: 30\r\n\r\n====================================================================================================\r\ndimension:      10000   x       100\r\n----------------------------------------------------------------------------------------------------\r\ncpu dense       cpu sparse      cuda dense      cuda sparse\r\n  13.175s          0.000s          7.638s          0.000s\r\n\r\n====================================================================================================\r\ndimension:      10000   x       1000\r\n----------------------------------------------------------------------------------------------------\r\ncpu dense       cpu sparse      cuda dense      cuda sparse\r\n  66.805s          0.000s          7.442s          0.000s\r\n\r\n====================================================================================================\r\ndimension:      100000  x       100\r\n----------------------------------------------------------------------------------------------------\r\ncpu dense       cpu sparse      cuda dense      cuda sparse\r\n  59.101s          0.000s          9.520s          0.000s\r\n\r\n====================================================================================================\r\ndimension:      100000  x       1000\r\n----------------------------------------------------------------------------------------------------\r\ncpu dense       cpu sparse      cuda dense      cuda sparse\r\n 495.547s          0.000s         30.891s          0.000s\r\n```\r\n\r\nemb_tmp\r\n```\r\n\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\r\nruns: 10000     number of indices: 2000 maximum number of bags: 200     maximum bag size: 30\r\n\r\n====================================================================================================\r\ndimension:      10000   x       100\r\n----------------------------------------------------------------------------------------------------\r\ncpu dense       cpu sparse      cuda dense      cuda sparse\r\n  15.195s         17.045s          6.571s          6.513s\r\n\r\n====================================================================================================\r\ndimension:      10000   x       1000\r\n----------------------------------------------------------------------------------------------------\r\ncpu dense       cpu sparse      cuda dense      cuda sparse\r\n  64.924s         21.673s          8.399s          6.361s\r\n\r\n====================================================================================================\r\ndimension:      100000  x       100\r\n----------------------------------------------------------------------------------------------------\r\ncpu dense       cpu sparse      cuda dense      cuda sparse\r\n  57.969s         14.924s          8.211s          6.711s\r\n\r\n====================================================================================================\r\ndimension:      100000  x       1000\r\n----------------------------------------------------------------------------------------------------\r\ncpu dense       cpu sparse      cuda dense      cuda sparse\r\n 496.196s         22.128s         30.167s          6.683s\r\n```\r\n\r\n[This](https://pastebin.com/0K6aNjqS) is the script I used to benchmark.\r\nEDIT: Added CUDA synchronize\r\n\r\nThe performance between both branches matches, but this new code has sparse gradients and lives within ATen.\r\n\r\nThe code was built with\r\n```\r\npython setup.py build_deps develop\r\n```\r\n\r\nThe timings of the first 1000 runs are discarded and the benchmark is executed 10000 times."}