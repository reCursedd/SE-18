{"url": "https://api.github.com/repos/pytorch/pytorch/issues/12606", "repository_url": "https://api.github.com/repos/pytorch/pytorch", "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/12606/labels{/name}", "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/12606/comments", "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/12606/events", "html_url": "https://github.com/pytorch/pytorch/issues/12606", "id": 369534246, "node_id": "MDU6SXNzdWUzNjk1MzQyNDY=", "number": 12606, "title": "Error when using torch.zeros", "user": {"login": "DongShuaike", "id": 8875073, "node_id": "MDQ6VXNlcjg4NzUwNzM=", "avatar_url": "https://avatars3.githubusercontent.com/u/8875073?v=4", "gravatar_id": "", "url": "https://api.github.com/users/DongShuaike", "html_url": "https://github.com/DongShuaike", "followers_url": "https://api.github.com/users/DongShuaike/followers", "following_url": "https://api.github.com/users/DongShuaike/following{/other_user}", "gists_url": "https://api.github.com/users/DongShuaike/gists{/gist_id}", "starred_url": "https://api.github.com/users/DongShuaike/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/DongShuaike/subscriptions", "organizations_url": "https://api.github.com/users/DongShuaike/orgs", "repos_url": "https://api.github.com/users/DongShuaike/repos", "events_url": "https://api.github.com/users/DongShuaike/events{/privacy}", "received_events_url": "https://api.github.com/users/DongShuaike/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 553773019, "node_id": "MDU6TGFiZWw1NTM3NzMwMTk=", "url": "https://api.github.com/repos/pytorch/pytorch/labels/needs-reproduction", "name": "needs-reproduction", "color": "e99695", "default": false}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2018-10-12T12:40:21Z", "updated_at": "2018-10-17T19:43:59Z", "closed_at": "2018-10-17T12:18:34Z", "author_association": "NONE", "body_html": "<h2><g-emoji class=\"g-emoji\" alias=\"bug\" fallback-src=\"https://assets-cdn.github.com/images/icons/emoji/unicode/1f41b.png\">\ud83d\udc1b</g-emoji> Bug</h2>\n\n<p>Program gets a <code>Segmentation fault</code> when the parameter setting of <code>torch.zeros</code> function is very large and the second parameter being a <code>tensor</code> instead of an <code>integer</code>.</p>\n<h2>To Reproduce</h2>\n<p>Steps to reproduce the behavior:</p>\n<ol>\n<li><code>seq_length = torch.LongTensor(range(895))</code></li>\n<li><code>torch.zeros((69137, seq_length.max(), 13))</code></li>\n<li><code>Segmentation Fault</code></li>\n</ol>\n\n<h2>Expected behavior</h2>\n<p>If I do the following</p>\n<pre><code>import torch\ntorch.zeros((69137, torch.LongTensor([895]).max(), 13))\n</code></pre>\n<p>An error of <code> TypeError: an integer is required</code> will be shown, indicating we should change <code>torch.LongTensor([895])</code> to <code>torch.LongTensor([895]).numpy()</code>.<br>\nIf I do the following</p>\n<pre><code>torch.zeros((69137, torch.LongTensor([1]).max(), 13))\n</code></pre>\n<p>No error will be produced.</p>\n\n<h2>Environment</h2>\n<p>Please copy and paste the output from our<br>\n<a href=\"https://raw.githubusercontent.com/pytorch/pytorch/master/torch/utils/collect_env.py\" rel=\"nofollow\">environment collection script</a><br>\n(or fill out the checklist below manually).</p>\n<p>You can get the script and run it with:</p>\n<pre><code>wget https://raw.githubusercontent.com/pytorch/pytorch/master/torch/utils/collect_env.py\n# For security purposes, please check the contents of collect_env.py before running it.\npython collect_env.py\n</code></pre>\n<p>Collecting environment information...</p>\n<ul>\n<li>\n<p>PyTorch version: 0.4.1.post2</p>\n</li>\n<li>\n<p>Is debug build: No</p>\n</li>\n<li>\n<p>CUDA used to build PyTorch: 9.0.176</p>\n</li>\n<li>\n<p>OS: Debian GNU/Linux 9.4 (stretch)</p>\n</li>\n<li>\n<p>GCC version: (Debian 4.9.2-10+deb8u1) 4.9.2</p>\n</li>\n<li>\n<p>CMake version: version 3.9.4</p>\n</li>\n</ul>\n<p>Python version: 2.7</p>\n<ul>\n<li>\n<p>Is CUDA available: Yes</p>\n</li>\n<li>\n<p>CUDA runtime version: Could not collect</p>\n</li>\n<li>\n<p>GPU models and configuration:</p>\n</li>\n<li>\n<p>GPU 0: GeForce GTX 1080 Ti</p>\n</li>\n<li>\n<p>GPU 1: GeForce GTX 1080 Ti</p>\n</li>\n<li>\n<p>Nvidia driver version: 387.26</p>\n</li>\n<li>\n<p>cuDNN version: Probably one of the following:</p>\n</li>\n<li>\n<p>/usr/local/cuda-8.0/lib64/libcudnn.so.6</p>\n</li>\n<li>\n<p>/usr/local/cuda-9.0/lib64/libcudnn.so</p>\n</li>\n<li>\n<p>/usr/local/cuda-9.0/lib64/libcudnn.so.7</p>\n</li>\n<li>\n<p>/usr/local/cuda-9.0/lib64/libcudnn.so.7.0.5</p>\n</li>\n<li>\n<p>/usr/local/cuda-9.0/lib64/libcudnn.so.7.1.2</p>\n</li>\n<li>\n<p>/usr/local/cuda-9.0/lib64/libcudnn_static.a</p>\n</li>\n<li>\n<p>/usr/local/cuda-9.1/lib64/libcudnn.so</p>\n</li>\n<li>\n<p>/usr/local/cuda-9.1/lib64/libcudnn.so.7</p>\n</li>\n<li>\n<p>/usr/local/cuda-9.1/lib64/libcudnn.so.7.1.2</p>\n</li>\n<li>\n<p>/usr/local/cuda-9.1/lib64/libcudnn_static.a</p>\n</li>\n</ul>\n<p>Versions of relevant libraries:</p>\n<ul>\n<li>[pip] Could not collect</li>\n<li>[conda] magma-cuda90              2.3.0                         1    pytorch</li>\n<li>[conda] pytorch                   0.4.1           py27__9.0.176_7.1.2_2    pytorch</li>\n<li>[conda] torch                     0.4.0a0+964707e           </li>\n<li>[conda] torch                     0.4.0a0+92a0f78           </li>\n<li>[conda] torchfile                 0.1.0                     </li>\n<li>[conda] torchnet                  0.0.2                     </li>\n<li>[conda] torchvision               0.2.0                     </li>\n<li>[conda] torchvision               0.2.1                    py27_1    pytorch</li>\n</ul>\n<h2>Additional context</h2>\n", "body_text": "\ud83d\udc1b Bug\n\nProgram gets a Segmentation fault when the parameter setting of torch.zeros function is very large and the second parameter being a tensor instead of an integer.\nTo Reproduce\nSteps to reproduce the behavior:\n\nseq_length = torch.LongTensor(range(895))\ntorch.zeros((69137, seq_length.max(), 13))\nSegmentation Fault\n\n\nExpected behavior\nIf I do the following\nimport torch\ntorch.zeros((69137, torch.LongTensor([895]).max(), 13))\n\nAn error of  TypeError: an integer is required will be shown, indicating we should change torch.LongTensor([895]) to torch.LongTensor([895]).numpy().\nIf I do the following\ntorch.zeros((69137, torch.LongTensor([1]).max(), 13))\n\nNo error will be produced.\n\nEnvironment\nPlease copy and paste the output from our\nenvironment collection script\n(or fill out the checklist below manually).\nYou can get the script and run it with:\nwget https://raw.githubusercontent.com/pytorch/pytorch/master/torch/utils/collect_env.py\n# For security purposes, please check the contents of collect_env.py before running it.\npython collect_env.py\n\nCollecting environment information...\n\n\nPyTorch version: 0.4.1.post2\n\n\nIs debug build: No\n\n\nCUDA used to build PyTorch: 9.0.176\n\n\nOS: Debian GNU/Linux 9.4 (stretch)\n\n\nGCC version: (Debian 4.9.2-10+deb8u1) 4.9.2\n\n\nCMake version: version 3.9.4\n\n\nPython version: 2.7\n\n\nIs CUDA available: Yes\n\n\nCUDA runtime version: Could not collect\n\n\nGPU models and configuration:\n\n\nGPU 0: GeForce GTX 1080 Ti\n\n\nGPU 1: GeForce GTX 1080 Ti\n\n\nNvidia driver version: 387.26\n\n\ncuDNN version: Probably one of the following:\n\n\n/usr/local/cuda-8.0/lib64/libcudnn.so.6\n\n\n/usr/local/cuda-9.0/lib64/libcudnn.so\n\n\n/usr/local/cuda-9.0/lib64/libcudnn.so.7\n\n\n/usr/local/cuda-9.0/lib64/libcudnn.so.7.0.5\n\n\n/usr/local/cuda-9.0/lib64/libcudnn.so.7.1.2\n\n\n/usr/local/cuda-9.0/lib64/libcudnn_static.a\n\n\n/usr/local/cuda-9.1/lib64/libcudnn.so\n\n\n/usr/local/cuda-9.1/lib64/libcudnn.so.7\n\n\n/usr/local/cuda-9.1/lib64/libcudnn.so.7.1.2\n\n\n/usr/local/cuda-9.1/lib64/libcudnn_static.a\n\n\nVersions of relevant libraries:\n\n[pip] Could not collect\n[conda] magma-cuda90              2.3.0                         1    pytorch\n[conda] pytorch                   0.4.1           py27__9.0.176_7.1.2_2    pytorch\n[conda] torch                     0.4.0a0+964707e           \n[conda] torch                     0.4.0a0+92a0f78           \n[conda] torchfile                 0.1.0                     \n[conda] torchnet                  0.0.2                     \n[conda] torchvision               0.2.0                     \n[conda] torchvision               0.2.1                    py27_1    pytorch\n\nAdditional context", "body": "## \ud83d\udc1b Bug\r\n\r\n<!-- A clear and concise description of what the bug is. -->\r\nProgram gets a `Segmentation fault` when the parameter setting of `torch.zeros` function is very large and the second parameter being a `tensor` instead of an `integer`.\r\n## To Reproduce\r\n\r\nSteps to reproduce the behavior:\r\n\r\n1. `seq_length = torch.LongTensor(range(895))`\r\n1. `torch.zeros((69137, seq_length.max(), 13))`\r\n1. `Segmentation Fault`\r\n\r\n<!-- If you have a code sample, error messages, stack traces, please provide it here as well -->\r\n\r\n## Expected behavior\r\nIf I do the following \r\n```\r\nimport torch\r\ntorch.zeros((69137, torch.LongTensor([895]).max(), 13))\r\n```\r\nAn error of ` TypeError: an integer is required` will be shown, indicating we should change `torch.LongTensor([895])` to `torch.LongTensor([895]).numpy()`.\r\nIf I do the following\r\n```\r\ntorch.zeros((69137, torch.LongTensor([1]).max(), 13))\r\n```\r\nNo error will be produced.\r\n<!-- A clear and concise description of what you expected to happen. -->\r\n\r\n## Environment\r\n\r\nPlease copy and paste the output from our\r\n[environment collection script](https://raw.githubusercontent.com/pytorch/pytorch/master/torch/utils/collect_env.py)\r\n(or fill out the checklist below manually).\r\n\r\nYou can get the script and run it with:\r\n```\r\nwget https://raw.githubusercontent.com/pytorch/pytorch/master/torch/utils/collect_env.py\r\n# For security purposes, please check the contents of collect_env.py before running it.\r\npython collect_env.py\r\n```\r\n\r\nCollecting environment information...\r\n- PyTorch version: 0.4.1.post2\r\n- Is debug build: No\r\n- CUDA used to build PyTorch: 9.0.176\r\n\r\n- OS: Debian GNU/Linux 9.4 (stretch)\r\n- GCC version: (Debian 4.9.2-10+deb8u1) 4.9.2\r\n- CMake version: version 3.9.4\r\n\r\nPython version: 2.7\r\n- Is CUDA available: Yes\r\n- CUDA runtime version: Could not collect\r\n- GPU models and configuration: \r\n- GPU 0: GeForce GTX 1080 Ti\r\n- GPU 1: GeForce GTX 1080 Ti\r\n\r\n- Nvidia driver version: 387.26\r\n- cuDNN version: Probably one of the following:\r\n- /usr/local/cuda-8.0/lib64/libcudnn.so.6\r\n- /usr/local/cuda-9.0/lib64/libcudnn.so\r\n- /usr/local/cuda-9.0/lib64/libcudnn.so.7\r\n- /usr/local/cuda-9.0/lib64/libcudnn.so.7.0.5\r\n- /usr/local/cuda-9.0/lib64/libcudnn.so.7.1.2\r\n- /usr/local/cuda-9.0/lib64/libcudnn_static.a\r\n- /usr/local/cuda-9.1/lib64/libcudnn.so\r\n- /usr/local/cuda-9.1/lib64/libcudnn.so.7\r\n- /usr/local/cuda-9.1/lib64/libcudnn.so.7.1.2\r\n- /usr/local/cuda-9.1/lib64/libcudnn_static.a\r\n\r\nVersions of relevant libraries:\r\n- [pip] Could not collect\r\n- [conda] magma-cuda90              2.3.0                         1    pytorch\r\n- [conda] pytorch                   0.4.1           py27__9.0.176_7.1.2_2    pytorch\r\n- [conda] torch                     0.4.0a0+964707e           <pip>\r\n- [conda] torch                     0.4.0a0+92a0f78           <pip>\r\n- [conda] torchfile                 0.1.0                     <pip>\r\n- [conda] torchnet                  0.0.2                     <pip>\r\n- [conda] torchvision               0.2.0                     <pip>\r\n- [conda] torchvision               0.2.1                    py27_1    pytorch\r\n\r\n## Additional context\r\n\r\n<!-- Add any other context about the problem here. -->\r\n"}