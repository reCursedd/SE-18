{"url": "https://api.github.com/repos/pytorch/pytorch/issues/comments/384013189", "html_url": "https://github.com/pytorch/pytorch/issues/1708#issuecomment-384013189", "issue_url": "https://api.github.com/repos/pytorch/pytorch/issues/1708", "id": 384013189, "node_id": "MDEyOklzc3VlQ29tbWVudDM4NDAxMzE4OQ==", "user": {"login": "colinfang", "id": 1499555, "node_id": "MDQ6VXNlcjE0OTk1NTU=", "avatar_url": "https://avatars1.githubusercontent.com/u/1499555?v=4", "gravatar_id": "", "url": "https://api.github.com/users/colinfang", "html_url": "https://github.com/colinfang", "followers_url": "https://api.github.com/users/colinfang/followers", "following_url": "https://api.github.com/users/colinfang/following{/other_user}", "gists_url": "https://api.github.com/users/colinfang/gists{/gist_id}", "starred_url": "https://api.github.com/users/colinfang/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/colinfang/subscriptions", "organizations_url": "https://api.github.com/users/colinfang/orgs", "repos_url": "https://api.github.com/users/colinfang/repos", "events_url": "https://api.github.com/users/colinfang/events{/privacy}", "received_events_url": "https://api.github.com/users/colinfang/received_events", "type": "User", "site_admin": false}, "created_at": "2018-04-24T17:22:48Z", "updated_at": "2018-04-24T17:23:29Z", "author_association": "NONE", "body_html": "<p>To benefit from cudnn 7.1, is it as simple as removing <code>if (params.is_depthwise(input, weight))</code> branch in <a href=\"https://github.com/pytorch/pytorch/blob/master/aten/src/ATen/native/Convolution.cpp#L337\">https://github.com/pytorch/pytorch/blob/master/aten/src/ATen/native/Convolution.cpp#L337</a>, so that it falls back to cudnn's native implementations? And turn on <code>cudnn.benchmark = True</code> for the <code>WINOGRAD</code> has a chance to kick in. Sadly in my case it is sill at least 2x slower than Tensorflow's own tailored cuda version.</p>", "body_text": "To benefit from cudnn 7.1, is it as simple as removing if (params.is_depthwise(input, weight)) branch in https://github.com/pytorch/pytorch/blob/master/aten/src/ATen/native/Convolution.cpp#L337, so that it falls back to cudnn's native implementations? And turn on cudnn.benchmark = True for the WINOGRAD has a chance to kick in. Sadly in my case it is sill at least 2x slower than Tensorflow's own tailored cuda version.", "body": "To benefit from cudnn 7.1, is it as simple as removing ` if (params.is_depthwise(input, weight)) ` branch in https://github.com/pytorch/pytorch/blob/master/aten/src/ATen/native/Convolution.cpp#L337, so that it falls back to cudnn's native implementations? And turn on `cudnn.benchmark = True` for the `WINOGRAD` has a chance to kick in. Sadly in my case it is sill at least 2x slower than Tensorflow's own tailored cuda version."}