{"url": "https://api.github.com/repos/pytorch/pytorch/issues/comments/384015193", "html_url": "https://github.com/pytorch/pytorch/issues/1708#issuecomment-384015193", "issue_url": "https://api.github.com/repos/pytorch/pytorch/issues/1708", "id": 384015193, "node_id": "MDEyOklzc3VlQ29tbWVudDM4NDAxNTE5Mw==", "user": {"login": "colinfang", "id": 1499555, "node_id": "MDQ6VXNlcjE0OTk1NTU=", "avatar_url": "https://avatars1.githubusercontent.com/u/1499555?v=4", "gravatar_id": "", "url": "https://api.github.com/users/colinfang", "html_url": "https://github.com/colinfang", "followers_url": "https://api.github.com/users/colinfang/followers", "following_url": "https://api.github.com/users/colinfang/following{/other_user}", "gists_url": "https://api.github.com/users/colinfang/gists{/gist_id}", "starred_url": "https://api.github.com/users/colinfang/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/colinfang/subscriptions", "organizations_url": "https://api.github.com/users/colinfang/orgs", "repos_url": "https://api.github.com/users/colinfang/repos", "events_url": "https://api.github.com/users/colinfang/events{/privacy}", "received_events_url": "https://api.github.com/users/colinfang/received_events", "type": "User", "site_admin": false}, "created_at": "2018-04-24T17:29:02Z", "updated_at": "2018-04-24T17:35:49Z", "author_association": "NONE", "body_html": "<p>In my case the input is 9x9, kernel is 5x5, padding=4 and the input channel == output channel == 50000 == groups, batchsize = 1. I tried both cudnn's native <code>conv2d</code> &amp; <code>conv_transpose_2d</code>. The transpose version is slower in forward, but faster in backward. Overall they have similar performance. And <code>thnn_conv_depthwise2d</code> is similar to the fastest cudnn 7.1 's <code>convolution</code> version. Perhaps I didn't config correctly.</p>", "body_text": "In my case the input is 9x9, kernel is 5x5, padding=4 and the input channel == output channel == 50000 == groups, batchsize = 1. I tried both cudnn's native conv2d & conv_transpose_2d. The transpose version is slower in forward, but faster in backward. Overall they have similar performance. And thnn_conv_depthwise2d is similar to the fastest cudnn 7.1 's convolution version. Perhaps I didn't config correctly.", "body": "In my case the input is 9x9, kernel is 5x5, padding=4 and the input channel == output channel == 50000 == groups, batchsize = 1. I tried both cudnn's native `conv2d` & `conv_transpose_2d`. The transpose version is slower in forward, but faster in backward. Overall they have similar performance. And `thnn_conv_depthwise2d` is similar to the fastest cudnn 7.1 's `convolution` version. Perhaps I didn't config correctly."}