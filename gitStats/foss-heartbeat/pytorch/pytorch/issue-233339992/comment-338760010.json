{"url": "https://api.github.com/repos/pytorch/pytorch/issues/comments/338760010", "html_url": "https://github.com/pytorch/pytorch/issues/1708#issuecomment-338760010", "issue_url": "https://api.github.com/repos/pytorch/pytorch/issues/1708", "id": 338760010, "node_id": "MDEyOklzc3VlQ29tbWVudDMzODc2MDAxMA==", "user": {"login": "killeent", "id": 4529377, "node_id": "MDQ6VXNlcjQ1MjkzNzc=", "avatar_url": "https://avatars1.githubusercontent.com/u/4529377?v=4", "gravatar_id": "", "url": "https://api.github.com/users/killeent", "html_url": "https://github.com/killeent", "followers_url": "https://api.github.com/users/killeent/followers", "following_url": "https://api.github.com/users/killeent/following{/other_user}", "gists_url": "https://api.github.com/users/killeent/gists{/gist_id}", "starred_url": "https://api.github.com/users/killeent/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/killeent/subscriptions", "organizations_url": "https://api.github.com/users/killeent/orgs", "repos_url": "https://api.github.com/users/killeent/repos", "events_url": "https://api.github.com/users/killeent/events{/privacy}", "received_events_url": "https://api.github.com/users/killeent/received_events", "type": "User", "site_admin": false}, "created_at": "2017-10-23T18:51:38Z", "updated_at": "2017-10-23T18:51:38Z", "author_association": "CONTRIBUTOR", "body_html": "<p><a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=15318002\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/qianguih\">@qianguih</a> note that we do support having a depthwise multiplier, so <code>groups=in_channels</code> must be true, but <code>out_channels</code> can be any multiple of <code>in_channels</code>, e.g.:</p>\n<pre><code>m = nn.Conv2d(128, 256, kernel_size=3, groups=128).cuda()\n</code></pre>\n<p>is also valid.</p>", "body_text": "@qianguih note that we do support having a depthwise multiplier, so groups=in_channels must be true, but out_channels can be any multiple of in_channels, e.g.:\nm = nn.Conv2d(128, 256, kernel_size=3, groups=128).cuda()\n\nis also valid.", "body": "@qianguih note that we do support having a depthwise multiplier, so `groups=in_channels` must be true, but `out_channels` can be any multiple of `in_channels`, e.g.:\r\n\r\n```\r\nm = nn.Conv2d(128, 256, kernel_size=3, groups=128).cuda()\r\n```\r\n\r\nis also valid."}