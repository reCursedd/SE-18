{"url": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/119991493", "pull_request_review_id": 41924852, "id": 119991493, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDExOTk5MTQ5Mw==", "diff_hunk": "@@ -10,26 +10,29 @@\n \n \n def RNNReLUCell(input, hidden, w_ih, w_hh, b_ih=None, b_hh=None):\n-    hy = F.relu(F.linear(input, w_ih, b_ih) + F.linear(hidden, w_hh, b_hh))\n+    x_h = input if w_ih is None else F.linear(input, w_ih, b_ih)\n+    hy = F.relu(x_h + F.linear(hidden, w_hh, b_hh))\n     return hy\n \n \n def RNNTanhCell(input, hidden, w_ih, w_hh, b_ih=None, b_hh=None):\n-    hy = F.tanh(F.linear(input, w_ih, b_ih) + F.linear(hidden, w_hh, b_hh))\n+    x_h = input if w_ih is None else F.linear(input, w_ih, b_ih)\n+    hy = F.tanh(x_h + F.linear(hidden, w_hh, b_hh))\n     return hy\n \n \n def LSTMCell(input, hidden, w_ih, w_hh, b_ih=None, b_hh=None):\n     if input.is_cuda:\n-        igates = F.linear(input, w_ih)\n+        igates = input.expand(4, input.size(0), input.size(1)).transpose(0, 1) if w_ih is None else F.linear(input,", "path": "torch/nn/_functions/rnn.py", "position": 20, "original_position": 20, "commit_id": "3cffe76bd63300da5ed3489df7135fad390d36ff", "original_commit_id": "01f0df327118e14fb5b878fb7f7ea067578add62", "user": {"login": "SeanNaren", "id": 6707363, "node_id": "MDQ6VXNlcjY3MDczNjM=", "avatar_url": "https://avatars0.githubusercontent.com/u/6707363?v=4", "gravatar_id": "", "url": "https://api.github.com/users/SeanNaren", "html_url": "https://github.com/SeanNaren", "followers_url": "https://api.github.com/users/SeanNaren/followers", "following_url": "https://api.github.com/users/SeanNaren/following{/other_user}", "gists_url": "https://api.github.com/users/SeanNaren/gists{/gist_id}", "starred_url": "https://api.github.com/users/SeanNaren/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/SeanNaren/subscriptions", "organizations_url": "https://api.github.com/users/SeanNaren/orgs", "repos_url": "https://api.github.com/users/SeanNaren/repos", "events_url": "https://api.github.com/users/SeanNaren/events{/privacy}", "received_events_url": "https://api.github.com/users/SeanNaren/received_events", "type": "User", "site_admin": false}, "body": "Just to make clear, the 'bug' is that the input to all 4 gate-wise calculations will have the same weight input matrix (Wi,Wf,Wo,Wc) are all the same? And what you think should happen is the input should be an input of dimension hidden * 4 (separate for each gate?)\r\n\r\nIf this is the case I'm not seeing what is being broken by this implementation other than it reflecting the cuDNN behaviour (which can be argued wrong).", "created_at": "2017-06-03T18:07:46Z", "updated_at": "2018-11-23T15:33:39Z", "html_url": "https://github.com/pytorch/pytorch/pull/894#discussion_r119991493", "pull_request_url": "https://api.github.com/repos/pytorch/pytorch/pulls/894", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/119991493"}, "html": {"href": "https://github.com/pytorch/pytorch/pull/894#discussion_r119991493"}, "pull_request": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/894"}}, "body_html": "<p>Just to make clear, the 'bug' is that the input to all 4 gate-wise calculations will have the same weight input matrix (Wi,Wf,Wo,Wc) are all the same? And what you think should happen is the input should be an input of dimension hidden * 4 (separate for each gate?)</p>\n<p>If this is the case I'm not seeing what is being broken by this implementation other than it reflecting the cuDNN behaviour (which can be argued wrong).</p>", "body_text": "Just to make clear, the 'bug' is that the input to all 4 gate-wise calculations will have the same weight input matrix (Wi,Wf,Wo,Wc) are all the same? And what you think should happen is the input should be an input of dimension hidden * 4 (separate for each gate?)\nIf this is the case I'm not seeing what is being broken by this implementation other than it reflecting the cuDNN behaviour (which can be argued wrong).", "in_reply_to_id": 116390226}