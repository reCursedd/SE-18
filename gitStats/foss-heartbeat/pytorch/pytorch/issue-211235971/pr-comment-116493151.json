{"url": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/116493151", "pull_request_review_id": 38118351, "id": 116493151, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDExNjQ5MzE1MQ==", "diff_hunk": "@@ -43,17 +46,18 @@ def LSTMCell(input, hidden, w_ih, w_hh, b_ih=None, b_hh=None):\n \n \n def GRUCell(input, hidden, w_ih, w_hh, b_ih=None, b_hh=None):\n-\n     if input.is_cuda:\n-        gi = F.linear(input, w_ih)\n+        gi = input.expand(3, input.size(0), input.size(1)).transpose(0, 1).contiguous() if w_ih is None else \\\n+            F.linear(input, w_ih)\n         gh = F.linear(hidden, w_hh)\n         state = fusedBackend.GRUFused()\n         return state(gi, gh, hidden) if b_ih is None else state(gi, gh, hidden, b_ih, b_hh)\n \n-    gi = F.linear(input, w_ih, b_ih)\n+    gi = input.expand(3, input.size(0), input.size(1)).transpose(0, 1).contiguous() if w_ih is None else \\\n+        F.linear(input, w_ih, b_ih)\n     gh = F.linear(hidden, w_hh, b_hh)\n-    i_r, i_i, i_n = gi.chunk(3, 1)\n-    h_r, h_i, h_n = gh.chunk(3, 1)\n+    i_r, i_i, i_n = torch.unbind(gi.view(input.size(0), 3, -1), 1)\n+    h_r, h_i, h_n = torch.unbind(gh.view(input.size(0), 3, -1), 1)", "path": "torch/nn/_functions/rnn.py", "position": null, "original_position": 56, "commit_id": "3cffe76bd63300da5ed3489df7135fad390d36ff", "original_commit_id": "01f0df327118e14fb5b878fb7f7ea067578add62", "user": {"login": "apaszke", "id": 4583066, "node_id": "MDQ6VXNlcjQ1ODMwNjY=", "avatar_url": "https://avatars3.githubusercontent.com/u/4583066?v=4", "gravatar_id": "", "url": "https://api.github.com/users/apaszke", "html_url": "https://github.com/apaszke", "followers_url": "https://api.github.com/users/apaszke/followers", "following_url": "https://api.github.com/users/apaszke/following{/other_user}", "gists_url": "https://api.github.com/users/apaszke/gists{/gist_id}", "starred_url": "https://api.github.com/users/apaszke/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/apaszke/subscriptions", "organizations_url": "https://api.github.com/users/apaszke/orgs", "repos_url": "https://api.github.com/users/apaszke/repos", "events_url": "https://api.github.com/users/apaszke/events{/privacy}", "received_events_url": "https://api.github.com/users/apaszke/received_events", "type": "User", "site_admin": false}, "body": "Nothing's wrong with `unbind`. I'm only wondering why did we use `chunk` before if the dims are different. Doesn't that change the size of output?", "created_at": "2017-05-15T13:42:45Z", "updated_at": "2018-11-23T15:33:27Z", "html_url": "https://github.com/pytorch/pytorch/pull/894#discussion_r116493151", "pull_request_url": "https://api.github.com/repos/pytorch/pytorch/pulls/894", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/116493151"}, "html": {"href": "https://github.com/pytorch/pytorch/pull/894#discussion_r116493151"}, "pull_request": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/894"}}, "body_html": "<p>Nothing's wrong with <code>unbind</code>. I'm only wondering why did we use <code>chunk</code> before if the dims are different. Doesn't that change the size of output?</p>", "body_text": "Nothing's wrong with unbind. I'm only wondering why did we use chunk before if the dims are different. Doesn't that change the size of output?", "in_reply_to_id": 116390246}