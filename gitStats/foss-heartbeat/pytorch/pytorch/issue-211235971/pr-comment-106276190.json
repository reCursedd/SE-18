{"url": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/106276190", "pull_request_review_id": 27191336, "id": 106276190, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEwNjI3NjE5MA==", "diff_hunk": "@@ -8,19 +8,22 @@\n \n \n def RNNReLUCell(input, hidden, w_ih, w_hh, b_ih=None, b_hh=None):\n-    hy = F.relu(F.linear(input, w_ih, b_ih) + F.linear(hidden, w_hh, b_hh))\n+    x_h = input if w_ih is None else F.linear(input, w_ih, b_ih)\n+    hy = F.relu(x_h + F.linear(hidden, w_hh, b_hh))\n     return hy\n \n \n def RNNTanhCell(input, hidden, w_ih, w_hh, b_ih=None, b_hh=None):\n-    hy = F.tanh(F.linear(input, w_ih, b_ih) + F.linear(hidden, w_hh, b_hh))\n+    x_h = input if w_ih is None else F.linear(input, w_ih, b_ih)\n+    hy = F.tanh(x_h + F.linear(hidden, w_hh, b_hh))\n     return hy\n \n \n def LSTMCell(input, hidden, w_ih, w_hh, b_ih=None, b_hh=None):\n     hx, cx = hidden\n-    gates = F.linear(input, w_ih, b_ih) + F.linear(hx, w_hh, b_hh)\n-    ingate, forgetgate, cellgate, outgate = gates.chunk(4, 1)\n+    x_h = input.unsqueeze(1).expand(input.size(0), 4, input.size(1)) if w_ih is None else F.linear(input, w_ih, b_ih)\n+    gates = x_h + F.linear(hx, w_hh, b_hh)\n+    ingate, forgetgate, cellgate, outgate = [x.squeeze(1) for x in gates.chunk(4, 1)]", "path": "torch/nn/_functions/rnn.py", "position": null, "original_position": 23, "commit_id": "3cffe76bd63300da5ed3489df7135fad390d36ff", "original_commit_id": "cccdab6e069c194d3c69e239862a4e6445e49383", "user": {"login": "justinchiu", "id": 2389353, "node_id": "MDQ6VXNlcjIzODkzNTM=", "avatar_url": "https://avatars0.githubusercontent.com/u/2389353?v=4", "gravatar_id": "", "url": "https://api.github.com/users/justinchiu", "html_url": "https://github.com/justinchiu", "followers_url": "https://api.github.com/users/justinchiu/followers", "following_url": "https://api.github.com/users/justinchiu/following{/other_user}", "gists_url": "https://api.github.com/users/justinchiu/gists{/gist_id}", "starred_url": "https://api.github.com/users/justinchiu/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/justinchiu/subscriptions", "organizations_url": "https://api.github.com/users/justinchiu/orgs", "repos_url": "https://api.github.com/users/justinchiu/repos", "events_url": "https://api.github.com/users/justinchiu/events{/privacy}", "received_events_url": "https://api.github.com/users/justinchiu/received_events", "type": "User", "site_admin": false}, "body": "i think that 1. this breaks batching the gemm across time if you're stacking lstm cells 2. this is incorrect semantically as well as from a library standpoint since in general you're learning an inverse control policy from word to gate and you want to be able to take different actions depending on the gate, and if you want your linear projection to essentially be [I, I, I, I] the user should do that with the intention of having this form of parameter sharing, the library shouldn't force that bias", "created_at": "2017-03-15T20:36:41Z", "updated_at": "2018-11-23T15:32:48Z", "html_url": "https://github.com/pytorch/pytorch/pull/894#discussion_r106276190", "pull_request_url": "https://api.github.com/repos/pytorch/pytorch/pulls/894", "author_association": "NONE", "_links": {"self": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/106276190"}, "html": {"href": "https://github.com/pytorch/pytorch/pull/894#discussion_r106276190"}, "pull_request": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/894"}}, "body_html": "<p>i think that 1. this breaks batching the gemm across time if you're stacking lstm cells 2. this is incorrect semantically as well as from a library standpoint since in general you're learning an inverse control policy from word to gate and you want to be able to take different actions depending on the gate, and if you want your linear projection to essentially be [I, I, I, I] the user should do that with the intention of having this form of parameter sharing, the library shouldn't force that bias</p>", "body_text": "i think that 1. this breaks batching the gemm across time if you're stacking lstm cells 2. this is incorrect semantically as well as from a library standpoint since in general you're learning an inverse control policy from word to gate and you want to be able to take different actions depending on the gate, and if you want your linear projection to essentially be [I, I, I, I] the user should do that with the intention of having this form of parameter sharing, the library shouldn't force that bias", "in_reply_to_id": 106246663}