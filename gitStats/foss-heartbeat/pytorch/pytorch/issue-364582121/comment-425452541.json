{"url": "https://api.github.com/repos/pytorch/pytorch/issues/comments/425452541", "html_url": "https://github.com/pytorch/pytorch/issues/12140#issuecomment-425452541", "issue_url": "https://api.github.com/repos/pytorch/pytorch/issues/12140", "id": 425452541, "node_id": "MDEyOklzc3VlQ29tbWVudDQyNTQ1MjU0MQ==", "user": {"login": "apaszke", "id": 4583066, "node_id": "MDQ6VXNlcjQ1ODMwNjY=", "avatar_url": "https://avatars3.githubusercontent.com/u/4583066?v=4", "gravatar_id": "", "url": "https://api.github.com/users/apaszke", "html_url": "https://github.com/apaszke", "followers_url": "https://api.github.com/users/apaszke/followers", "following_url": "https://api.github.com/users/apaszke/following{/other_user}", "gists_url": "https://api.github.com/users/apaszke/gists{/gist_id}", "starred_url": "https://api.github.com/users/apaszke/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/apaszke/subscriptions", "organizations_url": "https://api.github.com/users/apaszke/orgs", "repos_url": "https://api.github.com/users/apaszke/repos", "events_url": "https://api.github.com/users/apaszke/events{/privacy}", "received_events_url": "https://api.github.com/users/apaszke/received_events", "type": "User", "site_admin": false}, "created_at": "2018-09-28T14:25:09Z", "updated_at": "2018-09-28T14:25:09Z", "author_association": "MEMBER", "body_html": "<p>Ok, I think all of that makes sense. It's all caused by <code>check_trace=True</code>. Both first and second snippet will first trace the code, and then re-trace it, to ensure that the graph this function produces hasn't changed. Then, we will run both traces (causing their specialization), and compare the outputs. One way to avoid the second call to those functions would be to say <code>optimize=False</code> on the second trace.</p>\n<p>The reason why the third snippet calls it 3 times is because 2 calls come from <code>torch.jit.trace</code> as I mentioned, and then there's another call to <code>traced_foo</code>, with arguments on a different device, which causes it to respecialize (it's a different <code>ArgumentSpec</code>).</p>", "body_text": "Ok, I think all of that makes sense. It's all caused by check_trace=True. Both first and second snippet will first trace the code, and then re-trace it, to ensure that the graph this function produces hasn't changed. Then, we will run both traces (causing their specialization), and compare the outputs. One way to avoid the second call to those functions would be to say optimize=False on the second trace.\nThe reason why the third snippet calls it 3 times is because 2 calls come from torch.jit.trace as I mentioned, and then there's another call to traced_foo, with arguments on a different device, which causes it to respecialize (it's a different ArgumentSpec).", "body": "Ok, I think all of that makes sense. It's all caused by `check_trace=True`. Both first and second snippet will first trace the code, and then re-trace it, to ensure that the graph this function produces hasn't changed. Then, we will run both traces (causing their specialization), and compare the outputs. One way to avoid the second call to those functions would be to say `optimize=False` on the second trace.\r\n\r\nThe reason why the third snippet calls it 3 times is because 2 calls come from `torch.jit.trace` as I mentioned, and then there's another call to `traced_foo`, with arguments on a different device, which causes it to respecialize (it's a different `ArgumentSpec`)."}