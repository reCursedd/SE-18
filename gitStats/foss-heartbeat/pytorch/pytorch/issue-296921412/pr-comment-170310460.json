{"url": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/170310460", "pull_request_review_id": 98984167, "id": 170310460, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE3MDMxMDQ2MA==", "diff_hunk": "@@ -101,7 +101,7 @@ def step(self, closure):\n \n         # evaluate initial f(x) and df/dx\n         orig_loss = closure()\n-        loss = orig_loss.data[0]\n+        loss = float(orig_loss)", "path": "torch/optim/lbfgs.py", "position": 5, "original_position": 5, "commit_id": "e22441c7d8edd20473033ec8d50e657604b33d02", "original_commit_id": "5670cadc6d42a86a8a9267253ddd2c6f400cfa9e", "user": {"login": "colesbury", "id": 655866, "node_id": "MDQ6VXNlcjY1NTg2Ng==", "avatar_url": "https://avatars1.githubusercontent.com/u/655866?v=4", "gravatar_id": "", "url": "https://api.github.com/users/colesbury", "html_url": "https://github.com/colesbury", "followers_url": "https://api.github.com/users/colesbury/followers", "following_url": "https://api.github.com/users/colesbury/following{/other_user}", "gists_url": "https://api.github.com/users/colesbury/gists{/gist_id}", "starred_url": "https://api.github.com/users/colesbury/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/colesbury/subscriptions", "organizations_url": "https://api.github.com/users/colesbury/orgs", "repos_url": "https://api.github.com/users/colesbury/repos", "events_url": "https://api.github.com/users/colesbury/events{/privacy}", "received_events_url": "https://api.github.com/users/colesbury/received_events", "type": "User", "site_admin": false}, "body": "Same speed. I've had a small preference for float()/int() since they work in 0.3 (not particularly important here, but matters for changes to benchmarks/examples).\r\n", "created_at": "2018-02-23T17:12:10Z", "updated_at": "2018-11-23T15:39:56Z", "html_url": "https://github.com/pytorch/pytorch/pull/5225#discussion_r170310460", "pull_request_url": "https://api.github.com/repos/pytorch/pytorch/pulls/5225", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/170310460"}, "html": {"href": "https://github.com/pytorch/pytorch/pull/5225#discussion_r170310460"}, "pull_request": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/5225"}}, "body_html": "<p>Same speed. I've had a small preference for float()/int() since they work in 0.3 (not particularly important here, but matters for changes to benchmarks/examples).</p>", "body_text": "Same speed. I've had a small preference for float()/int() since they work in 0.3 (not particularly important here, but matters for changes to benchmarks/examples).", "in_reply_to_id": 170110522}