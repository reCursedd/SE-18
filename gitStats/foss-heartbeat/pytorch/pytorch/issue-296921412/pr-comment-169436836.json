{"url": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/169436836", "pull_request_review_id": 97962760, "id": 169436836, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE2OTQzNjgzNg==", "diff_hunk": "@@ -74,28 +74,30 @@ def wrapper(*args, **kwargs):\n     return wrapper\n \n \n-def get_cpu_type(t):\n-    assert t.__module__ == 'torch.cuda'\n-    return getattr(torch, t.__class__.__name__)\n+def get_cpu_type(type_name):\n+    module, name = type_name.rsplit('.', 1)\n+    assert module == 'torch.cuda'\n+    return getattr(torch, name)\n \n \n-def get_gpu_type(t):\n-    assert t.__module__ == 'torch'\n-    return getattr(torch.cuda, t.__name__)\n+def get_gpu_type(type_name):\n+    if isinstance(type_name, type):\n+        type_name = '{}.{}'.format(type_name.__module__, type_name.__name__)\n+    module, name = type_name.rsplit('.', 1)\n+    assert module == 'torch'\n+    return getattr(torch.cuda, name)\n \n \n def to_gpu(obj, type_map={}):\n-    if torch.is_tensor(obj):\n-        t = type_map.get(type(obj), get_gpu_type(type(obj)))\n-        return obj.clone().type(t)\n+    if isinstance(obj, torch.Tensor):\n+        assert obj.is_leaf\n+        t = type_map.get(obj.type(), get_gpu_type(obj.type()))\n+        with torch.no_grad():\n+            res = obj.clone().type(t)", "path": "test/common.py", "position": 35, "original_position": 32, "commit_id": "e22441c7d8edd20473033ec8d50e657604b33d02", "original_commit_id": "f5497fa01ab1319e9fc5523e18957a3b97baf27a", "user": {"login": "colesbury", "id": 655866, "node_id": "MDQ6VXNlcjY1NTg2Ng==", "avatar_url": "https://avatars1.githubusercontent.com/u/655866?v=4", "gravatar_id": "", "url": "https://api.github.com/users/colesbury", "html_url": "https://github.com/colesbury", "followers_url": "https://api.github.com/users/colesbury/followers", "following_url": "https://api.github.com/users/colesbury/following{/other_user}", "gists_url": "https://api.github.com/users/colesbury/gists{/gist_id}", "starred_url": "https://api.github.com/users/colesbury/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/colesbury/subscriptions", "organizations_url": "https://api.github.com/users/colesbury/orgs", "repos_url": "https://api.github.com/users/colesbury/repos", "events_url": "https://api.github.com/users/colesbury/events{/privacy}", "received_events_url": "https://api.github.com/users/colesbury/received_events", "type": "User", "site_admin": false}, "body": "The previous code called `clone()`. The call to `type(t)` might not make a copy if it's already on the GPU. ", "created_at": "2018-02-20T19:43:37Z", "updated_at": "2018-11-23T15:39:46Z", "html_url": "https://github.com/pytorch/pytorch/pull/5225#discussion_r169436836", "pull_request_url": "https://api.github.com/repos/pytorch/pytorch/pulls/5225", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/169436836"}, "html": {"href": "https://github.com/pytorch/pytorch/pull/5225#discussion_r169436836"}, "pull_request": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/5225"}}, "body_html": "<p>The previous code called <code>clone()</code>. The call to <code>type(t)</code> might not make a copy if it's already on the GPU.</p>", "body_text": "The previous code called clone(). The call to type(t) might not make a copy if it's already on the GPU.", "in_reply_to_id": 169371840}