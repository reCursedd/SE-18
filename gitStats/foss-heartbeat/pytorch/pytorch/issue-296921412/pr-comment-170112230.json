{"url": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/170112230", "pull_request_review_id": 98750604, "id": 170112230, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE3MDExMjIzMA==", "diff_hunk": "@@ -160,7 +160,7 @@ def btriunpack(LU_data, LU_pivots, unpack_data=True, unpack_pivots=True):\n         P = torch.eye(sz).type_as(LU_data).unsqueeze(0).repeat(nBatch, 1, 1)\n         for i in range(nBatch):\n             for j in range(sz):\n-                k = LU_pivots[i, j] - 1\n+                k = int(LU_pivots[i, j] - 1)", "path": "torch/functional.py", "position": 5, "original_position": 5, "commit_id": "e22441c7d8edd20473033ec8d50e657604b33d02", "original_commit_id": "5670cadc6d42a86a8a9267253ddd2c6f400cfa9e", "user": {"login": "colesbury", "id": 655866, "node_id": "MDQ6VXNlcjY1NTg2Ng==", "avatar_url": "https://avatars1.githubusercontent.com/u/655866?v=4", "gravatar_id": "", "url": "https://api.github.com/users/colesbury", "html_url": "https://github.com/colesbury", "followers_url": "https://api.github.com/users/colesbury/followers", "following_url": "https://api.github.com/users/colesbury/following{/other_user}", "gists_url": "https://api.github.com/users/colesbury/gists{/gist_id}", "starred_url": "https://api.github.com/users/colesbury/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/colesbury/subscriptions", "organizations_url": "https://api.github.com/users/colesbury/orgs", "repos_url": "https://api.github.com/users/colesbury/repos", "events_url": "https://api.github.com/users/colesbury/events{/privacy}", "received_events_url": "https://api.github.com/users/colesbury/received_events", "type": "User", "site_admin": false}, "body": "`LU_pivots[i, j]` is always an integer so `LU_pivots[i, j].item()` and `int(LU_pivots[i, j])` are identical. I've been writing `int(...)` or `float(...)` out of habit because it's backwards compatible with 0.3. This doesn't matter much here, but it's important for the changes to examples.", "created_at": "2018-02-22T22:21:54Z", "updated_at": "2018-11-23T15:39:53Z", "html_url": "https://github.com/pytorch/pytorch/pull/5225#discussion_r170112230", "pull_request_url": "https://api.github.com/repos/pytorch/pytorch/pulls/5225", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/170112230"}, "html": {"href": "https://github.com/pytorch/pytorch/pull/5225#discussion_r170112230"}, "pull_request": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/5225"}}, "body_html": "<p><code>LU_pivots[i, j]</code> is always an integer so <code>LU_pivots[i, j].item()</code> and <code>int(LU_pivots[i, j])</code> are identical. I've been writing <code>int(...)</code> or <code>float(...)</code> out of habit because it's backwards compatible with 0.3. This doesn't matter much here, but it's important for the changes to examples.</p>", "body_text": "LU_pivots[i, j] is always an integer so LU_pivots[i, j].item() and int(LU_pivots[i, j]) are identical. I've been writing int(...) or float(...) out of habit because it's backwards compatible with 0.3. This doesn't matter much here, but it's important for the changes to examples.", "in_reply_to_id": 170107828}