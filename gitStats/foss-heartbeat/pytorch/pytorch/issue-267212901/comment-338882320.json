{"url": "https://api.github.com/repos/pytorch/pytorch/issues/comments/338882320", "html_url": "https://github.com/pytorch/pytorch/issues/3202#issuecomment-338882320", "issue_url": "https://api.github.com/repos/pytorch/pytorch/issues/3202", "id": 338882320, "node_id": "MDEyOklzc3VlQ29tbWVudDMzODg4MjMyMA==", "user": {"login": "t-vi", "id": 20787943, "node_id": "MDQ6VXNlcjIwNzg3OTQz", "avatar_url": "https://avatars2.githubusercontent.com/u/20787943?v=4", "gravatar_id": "", "url": "https://api.github.com/users/t-vi", "html_url": "https://github.com/t-vi", "followers_url": "https://api.github.com/users/t-vi/followers", "following_url": "https://api.github.com/users/t-vi/following{/other_user}", "gists_url": "https://api.github.com/users/t-vi/gists{/gist_id}", "starred_url": "https://api.github.com/users/t-vi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/t-vi/subscriptions", "organizations_url": "https://api.github.com/users/t-vi/orgs", "repos_url": "https://api.github.com/users/t-vi/repos", "events_url": "https://api.github.com/users/t-vi/events{/privacy}", "received_events_url": "https://api.github.com/users/t-vi/received_events", "type": "User", "site_admin": false}, "created_at": "2017-10-24T05:56:45Z", "updated_at": "2017-10-24T05:56:45Z", "author_association": "CONTRIBUTOR", "body_html": "<p>Oh yes, something like <code>.new_long(x,y)</code> would be cool (or <code>.new(x,y,dtype=long)</code>).</p>\n<p>For the \"canonical tensor\", I imagine that, for basic applications, having something that \"does the right thing\" whether called before or after <code>module.cuda(device=d)</code> would be great.<br>\nFor more advanced applications, the user could create their own set of prototype tensors and just do <code>proto_gpu1.new(x,y)</code>, <code>proto_gpu2.new_long(z)</code> or so. But that is just pure imagination, as I don't have multiple GPUs. <g-emoji class=\"g-emoji\" alias=\"slightly_smiling_face\" fallback-src=\"https://assets-cdn.github.com/images/icons/emoji/unicode/1f642.png\">\ud83d\ude42</g-emoji></p>", "body_text": "Oh yes, something like .new_long(x,y) would be cool (or .new(x,y,dtype=long)).\nFor the \"canonical tensor\", I imagine that, for basic applications, having something that \"does the right thing\" whether called before or after module.cuda(device=d) would be great.\nFor more advanced applications, the user could create their own set of prototype tensors and just do proto_gpu1.new(x,y), proto_gpu2.new_long(z) or so. But that is just pure imagination, as I don't have multiple GPUs. \ud83d\ude42", "body": "Oh yes, something like `.new_long(x,y)` would be cool (or `.new(x,y,dtype=long)`).\r\n\r\nFor the \"canonical tensor\", I imagine that, for basic applications, having something that \"does the right thing\" whether called before or after `module.cuda(device=d)` would be great. \r\nFor more advanced applications, the user could create their own set of prototype tensors and just do `proto_gpu1.new(x,y)`, `proto_gpu2.new_long(z)` or so. But that is just pure imagination, as I don't have multiple GPUs. :slightly_smiling_face: \r\n"}