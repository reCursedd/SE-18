{"url": "https://api.github.com/repos/pytorch/pytorch/issues/3202", "repository_url": "https://api.github.com/repos/pytorch/pytorch", "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/3202/labels{/name}", "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/3202/comments", "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/3202/events", "html_url": "https://github.com/pytorch/pytorch/issues/3202", "id": 267212901, "node_id": "MDU6SXNzdWUyNjcyMTI5MDE=", "number": 3202, "title": "Device-agnostic code", "user": {"login": "Kaixhin", "id": 991891, "node_id": "MDQ6VXNlcjk5MTg5MQ==", "avatar_url": "https://avatars3.githubusercontent.com/u/991891?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Kaixhin", "html_url": "https://github.com/Kaixhin", "followers_url": "https://api.github.com/users/Kaixhin/followers", "following_url": "https://api.github.com/users/Kaixhin/following{/other_user}", "gists_url": "https://api.github.com/users/Kaixhin/gists{/gist_id}", "starred_url": "https://api.github.com/users/Kaixhin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Kaixhin/subscriptions", "organizations_url": "https://api.github.com/users/Kaixhin/orgs", "repos_url": "https://api.github.com/users/Kaixhin/repos", "events_url": "https://api.github.com/users/Kaixhin/events{/privacy}", "received_events_url": "https://api.github.com/users/Kaixhin/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 14, "created_at": "2017-10-20T15:26:24Z", "updated_at": "2018-05-03T14:21:56Z", "closed_at": "2018-05-03T14:21:56Z", "author_association": "CONTRIBUTOR", "body_html": "<p>A common issue - for both new and more seasoned users, including myself - is how to write nice device-agnostic code. There seems to be several potential solutions (using a global CUDA flag, always calling <code>torch.cuda.is_available()</code>, using <code>tensor.new()</code> etc.), used by various people in various bits of code. Ideally, we should have \"best practices\" documented somewhere, like <a href=\"https://github.com/pytorch/pytorch/blob/master/docs/source/notes/cuda.rst\">here</a>; or at least some place where we can link to.</p>", "body_text": "A common issue - for both new and more seasoned users, including myself - is how to write nice device-agnostic code. There seems to be several potential solutions (using a global CUDA flag, always calling torch.cuda.is_available(), using tensor.new() etc.), used by various people in various bits of code. Ideally, we should have \"best practices\" documented somewhere, like here; or at least some place where we can link to.", "body": "A common issue - for both new and more seasoned users, including myself - is how to write nice device-agnostic code. There seems to be several potential solutions (using a global CUDA flag, always calling `torch.cuda.is_available()`, using `tensor.new()` etc.), used by various people in various bits of code. Ideally, we should have \"best practices\" documented somewhere, like [here](https://github.com/pytorch/pytorch/blob/master/docs/source/notes/cuda.rst); or at least some place where we can link to."}