{"url": "https://api.github.com/repos/pytorch/pytorch/issues/comments/338915723", "html_url": "https://github.com/pytorch/pytorch/issues/3202#issuecomment-338915723", "issue_url": "https://api.github.com/repos/pytorch/pytorch/issues/3202", "id": 338915723, "node_id": "MDEyOklzc3VlQ29tbWVudDMzODkxNTcyMw==", "user": {"login": "Kaixhin", "id": 991891, "node_id": "MDQ6VXNlcjk5MTg5MQ==", "avatar_url": "https://avatars3.githubusercontent.com/u/991891?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Kaixhin", "html_url": "https://github.com/Kaixhin", "followers_url": "https://api.github.com/users/Kaixhin/followers", "following_url": "https://api.github.com/users/Kaixhin/following{/other_user}", "gists_url": "https://api.github.com/users/Kaixhin/gists{/gist_id}", "starred_url": "https://api.github.com/users/Kaixhin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Kaixhin/subscriptions", "organizations_url": "https://api.github.com/users/Kaixhin/orgs", "repos_url": "https://api.github.com/users/Kaixhin/repos", "events_url": "https://api.github.com/users/Kaixhin/events{/privacy}", "received_events_url": "https://api.github.com/users/Kaixhin/received_events", "type": "User", "site_admin": false}, "created_at": "2017-10-24T08:33:33Z", "updated_at": "2017-10-24T08:33:33Z", "author_association": "CONTRIBUTOR", "body_html": "<p><a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=3768583\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/gchanan\">@gchanan</a> there are several potential goals here, and they are somewhat conflicting. One is to make CPU/GPU code seamless for end users, with just one flag somewhere. On the other hand, that's likely to results in less-performant code and harder debugging.</p>\n<p>It seems like the conversation is going towards device-aware code, but making it a little less clunky in places. Sounds like <code>dtype</code> is a good step forward, and was probably in the pipeline anyway?</p>", "body_text": "@gchanan there are several potential goals here, and they are somewhat conflicting. One is to make CPU/GPU code seamless for end users, with just one flag somewhere. On the other hand, that's likely to results in less-performant code and harder debugging.\nIt seems like the conversation is going towards device-aware code, but making it a little less clunky in places. Sounds like dtype is a good step forward, and was probably in the pipeline anyway?", "body": "@gchanan there are several potential goals here, and they are somewhat conflicting. One is to make CPU/GPU code seamless for end users, with just one flag somewhere. On the other hand, that's likely to results in less-performant code and harder debugging.\r\n\r\nIt seems like the conversation is going towards device-aware code, but making it a little less clunky in places. Sounds like `dtype` is a good step forward, and was probably in the pipeline anyway?"}