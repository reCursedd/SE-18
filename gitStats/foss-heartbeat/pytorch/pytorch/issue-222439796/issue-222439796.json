{"url": "https://api.github.com/repos/pytorch/pytorch/issues/1278", "repository_url": "https://api.github.com/repos/pytorch/pytorch", "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/1278/labels{/name}", "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/1278/comments", "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/1278/events", "html_url": "https://github.com/pytorch/pytorch/issues/1278", "id": 222439796, "node_id": "MDU6SXNzdWUyMjI0Mzk3OTY=", "number": 1278, "title": "Embedding max_norm option slow with CUDA", "user": {"login": "TimDettmers", "id": 5260050, "node_id": "MDQ6VXNlcjUyNjAwNTA=", "avatar_url": "https://avatars1.githubusercontent.com/u/5260050?v=4", "gravatar_id": "", "url": "https://api.github.com/users/TimDettmers", "html_url": "https://github.com/TimDettmers", "followers_url": "https://api.github.com/users/TimDettmers/followers", "following_url": "https://api.github.com/users/TimDettmers/following{/other_user}", "gists_url": "https://api.github.com/users/TimDettmers/gists{/gist_id}", "starred_url": "https://api.github.com/users/TimDettmers/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/TimDettmers/subscriptions", "organizations_url": "https://api.github.com/users/TimDettmers/orgs", "repos_url": "https://api.github.com/users/TimDettmers/repos", "events_url": "https://api.github.com/users/TimDettmers/events{/privacy}", "received_events_url": "https://api.github.com/users/TimDettmers/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 424131849, "node_id": "MDU6TGFiZWw0MjQxMzE4NDk=", "url": "https://api.github.com/repos/pytorch/pytorch/labels/enhancement", "name": "enhancement", "color": "84b6eb", "default": true}, {"id": 679952992, "node_id": "MDU6TGFiZWw2Nzk5NTI5OTI=", "url": "https://api.github.com/repos/pytorch/pytorch/labels/performance", "name": "performance", "color": "f9d0c4", "default": false}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 7, "created_at": "2017-04-18T14:41:20Z", "updated_at": "2017-09-25T18:04:54Z", "closed_at": "2017-09-25T18:04:54Z", "author_association": "NONE", "body_html": "<p>If I use <code>torch.nn.Embedding</code> with <code>max_norm=1</code> and <code>norm_type=2</code> then embedding word indices is slow, consuming 95% of computation in my example (FB15k). If I renormalize embedding matrices manually after each mini-batch update via <code>self.emb_e.weight.data.renorm_(2, 0, 1)</code> then the renormalization is 20 times faster.</p>\n<p>I am using pytorch 0.1.10. I understand that changes have been made in 0.1.11 but from the change log I only see changes that affected the correctness of computation and not computation speed.</p>", "body_text": "If I use torch.nn.Embedding with max_norm=1 and norm_type=2 then embedding word indices is slow, consuming 95% of computation in my example (FB15k). If I renormalize embedding matrices manually after each mini-batch update via self.emb_e.weight.data.renorm_(2, 0, 1) then the renormalization is 20 times faster.\nI am using pytorch 0.1.10. I understand that changes have been made in 0.1.11 but from the change log I only see changes that affected the correctness of computation and not computation speed.", "body": "If I use `torch.nn.Embedding` with `max_norm=1` and `norm_type=2` then embedding word indices is slow, consuming 95% of computation in my example (FB15k). If I renormalize embedding matrices manually after each mini-batch update via `self.emb_e.weight.data.renorm_(2, 0, 1)` then the renormalization is 20 times faster.\r\n\r\nI am using pytorch 0.1.10. I understand that changes have been made in 0.1.11 but from the change log I only see changes that affected the correctness of computation and not computation speed. "}