{"url": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/165678534", "pull_request_review_id": 93474346, "id": 165678534, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE2NTY3ODUzNA==", "diff_hunk": "@@ -202,6 +229,45 @@ static std::shared_ptr<Graph> splitOffStage(\n   return graph_clone;\n }\n \n+bool isZero(Value * v) {\n+  auto n = v->node();\n+  return n->kind() == kConstant &&\n+    n->hasAttribute(kis_zero) &&\n+    n->i(kis_zero);\n+}\n+\n+// In the case where an input is routed to an output\n+// return the (possibly undefined) input rather than\n+// the value guarded by replaceIfUndef\n+// this ensures that we do not produce a 0 tensor\n+// when the autograd would produce None\n+// graph(a) {\n+//   b = replaceIfUndef(a,0);\n+//   c = b + b\n+//   return c, b; // will replace 'b' with 'a'\n+// }\n+// Also replace any known-to-be-zero outputs with Undef\n+// for the same reason", "path": "torch/csrc/jit/autodiff.cpp", "position": 125, "original_position": 125, "commit_id": "50f1371ab9d4af3f9ffba960951d8178b326d11c", "original_commit_id": "493e3432b758ea442a0042828da4d25e02fd8c1c", "user": {"login": "ezyang", "id": 13564, "node_id": "MDQ6VXNlcjEzNTY0", "avatar_url": "https://avatars0.githubusercontent.com/u/13564?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ezyang", "html_url": "https://github.com/ezyang", "followers_url": "https://api.github.com/users/ezyang/followers", "following_url": "https://api.github.com/users/ezyang/following{/other_user}", "gists_url": "https://api.github.com/users/ezyang/gists{/gist_id}", "starred_url": "https://api.github.com/users/ezyang/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ezyang/subscriptions", "organizations_url": "https://api.github.com/users/ezyang/orgs", "repos_url": "https://api.github.com/users/ezyang/repos", "events_url": "https://api.github.com/users/ezyang/events{/privacy}", "received_events_url": "https://api.github.com/users/ezyang/received_events", "type": "User", "site_admin": false}, "body": "I don't think this is sound. My understanding of the \"undefined invariant\" (which I recently documented in https://github.com/pytorch/pytorch/tree/master/aten/src/ATen/native#undefined-tensor-conventions ) is that the ONLY time it is permissible to return undefined is if it is the gradient for an input that does not require gradient. In all other cases, including even when we know it is zeroed, you're not allowed; you have to inflate and return the zeros.", "created_at": "2018-02-02T15:42:03Z", "updated_at": "2018-11-23T15:38:59Z", "html_url": "https://github.com/pytorch/pytorch/pull/4982#discussion_r165678534", "pull_request_url": "https://api.github.com/repos/pytorch/pytorch/pulls/4982", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/165678534"}, "html": {"href": "https://github.com/pytorch/pytorch/pull/4982#discussion_r165678534"}, "pull_request": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/4982"}}, "body_html": "<p>I don't think this is sound. My understanding of the \"undefined invariant\" (which I recently documented in <a href=\"https://github.com/pytorch/pytorch/tree/master/aten/src/ATen/native#undefined-tensor-conventions\">https://github.com/pytorch/pytorch/tree/master/aten/src/ATen/native#undefined-tensor-conventions</a> ) is that the ONLY time it is permissible to return undefined is if it is the gradient for an input that does not require gradient. In all other cases, including even when we know it is zeroed, you're not allowed; you have to inflate and return the zeros.</p>", "body_text": "I don't think this is sound. My understanding of the \"undefined invariant\" (which I recently documented in https://github.com/pytorch/pytorch/tree/master/aten/src/ATen/native#undefined-tensor-conventions ) is that the ONLY time it is permissible to return undefined is if it is the gradient for an input that does not require gradient. In all other cases, including even when we know it is zeroed, you're not allowed; you have to inflate and return the zeros."}