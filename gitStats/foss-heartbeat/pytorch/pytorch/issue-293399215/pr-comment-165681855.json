{"url": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/165681855", "pull_request_review_id": 93474346, "id": 165681855, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE2NTY4MTg1NQ==", "diff_hunk": "@@ -0,0 +1,392 @@\n+#include \"Python.h\"\n+#include \"torch/csrc/jit/graph_executor.h\"\n+#include \"torch/csrc/jit/ir.h\"\n+#include \"torch/csrc/jit/argument_spec.h\"\n+#include \"torch/csrc/jit/autodiff.h\"\n+#include \"torch/csrc/jit/interpreter.h\"\n+#include \"torch/csrc/autograd/grad_mode.h\"\n+#include \"torch/csrc/jit/passes/create_autodiff_subgraphs.h\"\n+#include \"torch/csrc/jit/passes/shape_analysis.h\"\n+#include \"torch/csrc/jit/passes/dead_code_elimination.h\"\n+#include \"torch/csrc/jit/passes/common_subexpression_elimination.h\"\n+#include \"torch/csrc/jit/passes/peephole.h\"\n+#include \"torch/csrc/jit/passes/graph_fuser.h\"\n+#include \"torch/csrc/jit/passes/inplace_check.h\"\n+#include \"torch/csrc/jit/passes/batch_mm.h\"\n+\n+#include \"torch/csrc/autograd/function.h\"\n+\n+#include <unordered_map>\n+\n+namespace torch { namespace jit {\n+\n+namespace {\n+\n+using tensor_list = std::vector<at::Tensor>;\n+using Variable = autograd::Variable;\n+using autograd::variable_list;\n+\n+struct ExecutionPlanAutogradFunction : public autograd::Function {\n+  ExecutionPlanAutogradFunction(GraphExecutor graph, size_t capture_size)\n+  : graph(std::move(graph)), captures(capture_size) {}\n+  virtual variable_list apply(const variable_list& inputs) override {\n+    // TODO: expensive copies here to convert to/from tensor_list\n+    // TODO: becuse inputs is passed by const reference there is no", "path": "torch/csrc/jit/graph_executor.cpp", "position": null, "original_position": 34, "commit_id": "50f1371ab9d4af3f9ffba960951d8178b326d11c", "original_commit_id": "493e3432b758ea442a0042828da4d25e02fd8c1c", "user": {"login": "ezyang", "id": 13564, "node_id": "MDQ6VXNlcjEzNTY0", "avatar_url": "https://avatars0.githubusercontent.com/u/13564?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ezyang", "html_url": "https://github.com/ezyang", "followers_url": "https://api.github.com/users/ezyang/followers", "following_url": "https://api.github.com/users/ezyang/following{/other_user}", "gists_url": "https://api.github.com/users/ezyang/gists{/gist_id}", "starred_url": "https://api.github.com/users/ezyang/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ezyang/subscriptions", "organizations_url": "https://api.github.com/users/ezyang/orgs", "repos_url": "https://api.github.com/users/ezyang/repos", "events_url": "https://api.github.com/users/ezyang/events{/privacy}", "received_events_url": "https://api.github.com/users/ezyang/received_events", "type": "User", "site_admin": false}, "body": "because", "created_at": "2018-02-02T15:53:20Z", "updated_at": "2018-11-23T15:39:00Z", "html_url": "https://github.com/pytorch/pytorch/pull/4982#discussion_r165681855", "pull_request_url": "https://api.github.com/repos/pytorch/pytorch/pulls/4982", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/165681855"}, "html": {"href": "https://github.com/pytorch/pytorch/pull/4982#discussion_r165681855"}, "pull_request": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/4982"}}, "body_html": "<p>because</p>", "body_text": "because"}