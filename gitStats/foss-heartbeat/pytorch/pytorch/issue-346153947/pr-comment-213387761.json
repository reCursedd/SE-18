{"url": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/213387761", "pull_request_review_id": 150213884, "id": 213387761, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIxMzM4Nzc2MQ==", "diff_hunk": "@@ -4459,6 +4459,49 @@ def run_test(M):\n     def test_pinverse(self):\n         self._test_pinverse(self, conv_fn=lambda x: x)\n \n+    @staticmethod\n+    def _test_matrix_power(self, conv_fn):\n+        def run_test(M, sign=1):\n+            if sign == -1:\n+                M = M.inverse()\n+            MP2 = torch.matrix_power(M, 2)\n+            self.assertEqual(MP2, torch.matmul(M, M))\n+\n+            MP3 = torch.matrix_power(M, 3)\n+            self.assertEqual(MP3, torch.matmul(MP2, M))\n+\n+            MP4 = torch.matrix_power(M, 4)\n+            self.assertEqual(MP4, torch.matmul(MP2, MP2))\n+\n+            MP6 = torch.matrix_power(M, 6)\n+            self.assertEqual(MP6, torch.matmul(MP3, MP3))\n+\n+            MP0 = torch.matrix_power(M, 0)\n+            self.assertEqual(MP0, torch.eye(M.size(-2)).expand_as(M))\n+\n+        # Single matrix\n+        M = conv_fn(torch.randn(5, 5))\n+        run_test(M)\n+\n+        # Batch matrices\n+        M = conv_fn(torch.randn(3, 3, 3))\n+        run_test(M)\n+\n+        # Many batch matrices\n+        M = conv_fn(torch.randn(2, 3, 3, 3))\n+        run_test(M)\n+\n+        # Single matrix, but full rank\n+        # This is for negative powers\n+        from test_autograd import random_fullrank_matrix_distinct_singular_value", "path": "test/test_torch.py", "position": 38, "original_position": 38, "commit_id": "b1af53363dd10d87f38ad74f6137563cb35f13fe", "original_commit_id": "8bd6456f62b1d45ae1fae745c00a2d0017b3be50", "user": {"login": "vishwakftw", "id": 23639302, "node_id": "MDQ6VXNlcjIzNjM5MzAy", "avatar_url": "https://avatars2.githubusercontent.com/u/23639302?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vishwakftw", "html_url": "https://github.com/vishwakftw", "followers_url": "https://api.github.com/users/vishwakftw/followers", "following_url": "https://api.github.com/users/vishwakftw/following{/other_user}", "gists_url": "https://api.github.com/users/vishwakftw/gists{/gist_id}", "starred_url": "https://api.github.com/users/vishwakftw/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vishwakftw/subscriptions", "organizations_url": "https://api.github.com/users/vishwakftw/orgs", "repos_url": "https://api.github.com/users/vishwakftw/repos", "events_url": "https://api.github.com/users/vishwakftw/events{/privacy}", "received_events_url": "https://api.github.com/users/vishwakftw/received_events", "type": "User", "site_admin": false}, "body": "Sure, will do.", "created_at": "2018-08-28T16:40:54Z", "updated_at": "2018-11-23T15:50:10Z", "html_url": "https://github.com/pytorch/pytorch/pull/10068#discussion_r213387761", "pull_request_url": "https://api.github.com/repos/pytorch/pytorch/pulls/10068", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/213387761"}, "html": {"href": "https://github.com/pytorch/pytorch/pull/10068#discussion_r213387761"}, "pull_request": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/10068"}}, "body_html": "<p>Sure, will do.</p>", "body_text": "Sure, will do.", "in_reply_to_id": 213386768}