{"url": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/206913972", "pull_request_review_id": 142419587, "id": 206913972, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwNjkxMzk3Mg==", "diff_hunk": "@@ -315,5 +315,50 @@ Tensor& matmul_out(Tensor &result, const Tensor & tensor1, const Tensor & tensor\n   return result;\n }\n \n+Tensor matrix_power(const Tensor& a, int64_t n) {\n+  AT_CHECK(a.dim() >= 2 && at::isFloatingType(a.type().scalarType()),\n+           \"matrix_power(\", a.type(), \"{\", a.sizes(), \"}): expected a tensor \"\n+           \"of floating types with dim at least 2\");\n+  if (n == 0) {\n+    Tensor identities = at::eye(a.size(-2), a.options());\n+    std::vector<int64_t> output_size (2, 1);\n+    if (a.dim() > 2) {\n+      output_size.insert(output_size.begin(), a.sizes().begin(), a.sizes().end() - 2);\n+      identities = identities.repeat(output_size);\n+    }\n+    return identities;\n+  } else if (n < 0) {\n+    AT_CHECK(a.dim() == 2, \"Negative powers for batch matrices are currently not supported\")\n+    Tensor a_ = at::native::inverse(a);", "path": "aten/src/ATen/native/LinearAlgebra.cpp", "position": null, "original_position": 18, "commit_id": "b1af53363dd10d87f38ad74f6137563cb35f13fe", "original_commit_id": "9c6bbcc8f0a76e02b7b46e42684f88abf6652e74", "user": {"login": "ezyang", "id": 13564, "node_id": "MDQ6VXNlcjEzNTY0", "avatar_url": "https://avatars0.githubusercontent.com/u/13564?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ezyang", "html_url": "https://github.com/ezyang", "followers_url": "https://api.github.com/users/ezyang/followers", "following_url": "https://api.github.com/users/ezyang/following{/other_user}", "gists_url": "https://api.github.com/users/ezyang/gists{/gist_id}", "starred_url": "https://api.github.com/users/ezyang/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ezyang/subscriptions", "organizations_url": "https://api.github.com/users/ezyang/orgs", "repos_url": "https://api.github.com/users/ezyang/repos", "events_url": "https://api.github.com/users/ezyang/events{/privacy}", "received_events_url": "https://api.github.com/users/ezyang/received_events", "type": "User", "site_admin": false}, "body": "The problem is you're calling `at::native::inverse`, when you should call `at::inverse`. There is a long and sordid story about this; see https://github.com/pytorch/pytorch/tree/master/aten/src/ATen/native#can-it-handle-being-passed-variables", "created_at": "2018-08-01T14:58:03Z", "updated_at": "2018-11-23T15:48:32Z", "html_url": "https://github.com/pytorch/pytorch/pull/10068#discussion_r206913972", "pull_request_url": "https://api.github.com/repos/pytorch/pytorch/pulls/10068", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/206913972"}, "html": {"href": "https://github.com/pytorch/pytorch/pull/10068#discussion_r206913972"}, "pull_request": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/10068"}}, "body_html": "<p>The problem is you're calling <code>at::native::inverse</code>, when you should call <code>at::inverse</code>. There is a long and sordid story about this; see <a href=\"https://github.com/pytorch/pytorch/tree/master/aten/src/ATen/native#can-it-handle-being-passed-variables\">https://github.com/pytorch/pytorch/tree/master/aten/src/ATen/native#can-it-handle-being-passed-variables</a></p>", "body_text": "The problem is you're calling at::native::inverse, when you should call at::inverse. There is a long and sordid story about this; see https://github.com/pytorch/pytorch/tree/master/aten/src/ATen/native#can-it-handle-being-passed-variables", "in_reply_to_id": 206526134}