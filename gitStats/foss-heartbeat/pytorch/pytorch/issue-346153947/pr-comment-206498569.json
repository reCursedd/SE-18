{"url": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/206498569", "pull_request_review_id": 141919991, "id": 206498569, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwNjQ5ODU2OQ==", "diff_hunk": "@@ -315,5 +315,43 @@ Tensor& matmul_out(Tensor &result, const Tensor & tensor1, const Tensor & tensor\n   return result;\n }\n \n+Tensor matrix_power(const Tensor& a, int64_t n) {\n+  AT_CHECK(a.dim() >= 2 && at::isFloatingType(a.type().scalarType()),\n+           \"pinverse(\", a.type(), \"{\", a.sizes(), \"}): expected a tensor \"\n+           \"of floating types with dim atleast 2\");\n+  if (n == 0) {\n+    Tensor identities = at::eye(a.size(-2), a.options());\n+    std::vector<int64_t> output_size (2, 1);\n+    if (a.dim() > 2) {\n+      output_size.insert(output_size.begin(), a.sizes().begin(), a.sizes().end() - 2);\n+      identities = identities.repeat(output_size);\n+    }\n+    return identities;\n+  } else if (n < 0) {\n+    AT_CHECK(a.dim() == 2, \"Negative powers for batch matrices are currently not supported\")\n+    Tensor a_ = at::native::inverse(a);\n+    n *= -1;\n+    return at::native::matrix_power(a_, n);\n+  } else if (n == 1) {\n+    return a.clone();\n+  } else if (n == 2) {\n+    return at::native::matmul(a, a);\n+  } else if (n == 3) {\n+    return at::native::matmul(at::native::matmul(a, a), a);\n+  }\n+\n+  Tensor result, z;\n+  int64_t r;\n+  while (n > 0) {", "path": "aten/src/ATen/native/LinearAlgebra.cpp", "position": null, "original_position": 31, "commit_id": "b1af53363dd10d87f38ad74f6137563cb35f13fe", "original_commit_id": "df8a474c95f338603998cbf790463d43b829a9cd", "user": {"login": "fmassa", "id": 9110200, "node_id": "MDQ6VXNlcjkxMTAyMDA=", "avatar_url": "https://avatars2.githubusercontent.com/u/9110200?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fmassa", "html_url": "https://github.com/fmassa", "followers_url": "https://api.github.com/users/fmassa/followers", "following_url": "https://api.github.com/users/fmassa/following{/other_user}", "gists_url": "https://api.github.com/users/fmassa/gists{/gist_id}", "starred_url": "https://api.github.com/users/fmassa/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fmassa/subscriptions", "organizations_url": "https://api.github.com/users/fmassa/orgs", "repos_url": "https://api.github.com/users/fmassa/repos", "events_url": "https://api.github.com/users/fmassa/events{/privacy}", "received_events_url": "https://api.github.com/users/fmassa/received_events", "type": "User", "site_admin": false}, "body": "could you add some comments explaining the reasoning, similar to what is done in the numpy version?", "created_at": "2018-07-31T12:02:45Z", "updated_at": "2018-11-23T15:48:25Z", "html_url": "https://github.com/pytorch/pytorch/pull/10068#discussion_r206498569", "pull_request_url": "https://api.github.com/repos/pytorch/pytorch/pulls/10068", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/206498569"}, "html": {"href": "https://github.com/pytorch/pytorch/pull/10068#discussion_r206498569"}, "pull_request": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/10068"}}, "body_html": "<p>could you add some comments explaining the reasoning, similar to what is done in the numpy version?</p>", "body_text": "could you add some comments explaining the reasoning, similar to what is done in the numpy version?"}