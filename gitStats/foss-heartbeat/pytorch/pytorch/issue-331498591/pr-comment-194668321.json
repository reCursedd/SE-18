{"url": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/194668321", "pull_request_review_id": 127880943, "id": 194668321, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5NDY2ODMyMQ==", "diff_hunk": "@@ -47,7 +48,8 @@ def step(self, epoch=None):\n             epoch = self.last_epoch + 1\n         self.last_epoch = epoch\n         for param_group, lr in zip(self.optimizer.param_groups, self.get_lr()):\n-            param_group['lr'] = lr\n+            if self.min_lr is None or lr > self.min_lr:\n+                param_group['lr'] = lr", "path": "torch/optim/lr_scheduler.py", "position": null, "original_position": 23, "commit_id": "d63d31e25d59cc47e02a113f815c398f2f89e897", "original_commit_id": "4bed018c5c030d6852a4ffb078fa267f839e5534", "user": {"login": "ClementPinard", "id": 4380424, "node_id": "MDQ6VXNlcjQzODA0MjQ=", "avatar_url": "https://avatars2.githubusercontent.com/u/4380424?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ClementPinard", "html_url": "https://github.com/ClementPinard", "followers_url": "https://api.github.com/users/ClementPinard/followers", "following_url": "https://api.github.com/users/ClementPinard/following{/other_user}", "gists_url": "https://api.github.com/users/ClementPinard/gists{/gist_id}", "starred_url": "https://api.github.com/users/ClementPinard/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ClementPinard/subscriptions", "organizations_url": "https://api.github.com/users/ClementPinard/orgs", "repos_url": "https://api.github.com/users/ClementPinard/repos", "events_url": "https://api.github.com/users/ClementPinard/events{/privacy}", "received_events_url": "https://api.github.com/users/ClementPinard/received_events", "type": "User", "site_admin": false}, "body": "does that mean that `param_group['lr']` should not be updated when the update value is below `min_lr`, even though `param_group['lr']` is greater (possibly by far) than `min_lr` ? Say you start at `lr=1` with a minimum `min_lr=0.1` and try to update it with `lr=0.01` should it stay `1`or shoukd it become `0.1` ?\r\n\r\nIsn't it better to saturate `lr` `min_lr` so that it will be the truly minimum value reached ?\r\n\r\n```python\r\nfi self.min_lr is None:\r\n    param_group['lr'] = lr\r\nelse:\r\n    param_group['lr'] = max(lr, self.min_lr)\r\n\r\n```", "created_at": "2018-06-12T09:16:14Z", "updated_at": "2018-11-23T15:45:22Z", "html_url": "https://github.com/pytorch/pytorch/pull/8367#discussion_r194668321", "pull_request_url": "https://api.github.com/repos/pytorch/pytorch/pulls/8367", "author_association": "NONE", "_links": {"self": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/194668321"}, "html": {"href": "https://github.com/pytorch/pytorch/pull/8367#discussion_r194668321"}, "pull_request": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/8367"}}, "body_html": "<p>does that mean that <code>param_group['lr']</code> should not be updated when the update value is below <code>min_lr</code>, even though <code>param_group['lr']</code> is greater (possibly by far) than <code>min_lr</code> ? Say you start at <code>lr=1</code> with a minimum <code>min_lr=0.1</code> and try to update it with <code>lr=0.01</code> should it stay <code>1</code>or shoukd it become <code>0.1</code> ?</p>\n<p>Isn't it better to saturate <code>lr</code> <code>min_lr</code> so that it will be the truly minimum value reached ?</p>\n<div class=\"highlight highlight-source-python\"><pre>fi <span class=\"pl-c1\">self</span>.min_lr <span class=\"pl-k\">is</span> <span class=\"pl-c1\">None</span>:\n    param_group[<span class=\"pl-s\"><span class=\"pl-pds\">'</span>lr<span class=\"pl-pds\">'</span></span>] <span class=\"pl-k\">=</span> lr\n<span class=\"pl-k\">else</span>:\n    param_group[<span class=\"pl-s\"><span class=\"pl-pds\">'</span>lr<span class=\"pl-pds\">'</span></span>] <span class=\"pl-k\">=</span> <span class=\"pl-c1\">max</span>(lr, <span class=\"pl-c1\">self</span>.min_lr)\n</pre></div>", "body_text": "does that mean that param_group['lr'] should not be updated when the update value is below min_lr, even though param_group['lr'] is greater (possibly by far) than min_lr ? Say you start at lr=1 with a minimum min_lr=0.1 and try to update it with lr=0.01 should it stay 1or shoukd it become 0.1 ?\nIsn't it better to saturate lr min_lr so that it will be the truly minimum value reached ?\nfi self.min_lr is None:\n    param_group['lr'] = lr\nelse:\n    param_group['lr'] = max(lr, self.min_lr)"}