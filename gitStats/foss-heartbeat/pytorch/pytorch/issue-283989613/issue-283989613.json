{"url": "https://api.github.com/repos/pytorch/pytorch/issues/4304", "repository_url": "https://api.github.com/repos/pytorch/pytorch", "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/4304/labels{/name}", "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/4304/comments", "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/4304/events", "html_url": "https://github.com/pytorch/pytorch/pull/4304", "id": 283989613, "node_id": "MDExOlB1bGxSZXF1ZXN0MTU5NzM5MTgw", "number": 4304, "title": "Support ATen GPU pointwise apply and torch.where.", "user": {"login": "gchanan", "id": 3768583, "node_id": "MDQ6VXNlcjM3Njg1ODM=", "avatar_url": "https://avatars2.githubusercontent.com/u/3768583?v=4", "gravatar_id": "", "url": "https://api.github.com/users/gchanan", "html_url": "https://github.com/gchanan", "followers_url": "https://api.github.com/users/gchanan/followers", "following_url": "https://api.github.com/users/gchanan/following{/other_user}", "gists_url": "https://api.github.com/users/gchanan/gists{/gist_id}", "starred_url": "https://api.github.com/users/gchanan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/gchanan/subscriptions", "organizations_url": "https://api.github.com/users/gchanan/orgs", "repos_url": "https://api.github.com/users/gchanan/repos", "events_url": "https://api.github.com/users/gchanan/events{/privacy}", "received_events_url": "https://api.github.com/users/gchanan/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2017-12-21T20:03:56Z", "updated_at": "2018-11-23T15:37:40Z", "closed_at": "2017-12-27T21:36:50Z", "author_association": "CONTRIBUTOR", "pull_request": {"url": "https://api.github.com/repos/pytorch/pytorch/pulls/4304", "html_url": "https://github.com/pytorch/pytorch/pull/4304", "diff_url": "https://github.com/pytorch/pytorch/pull/4304.diff", "patch_url": "https://github.com/pytorch/pytorch/pull/4304.patch"}, "body_html": "<p>Like the CPU version, this implements an apply template that is almost identical to the<br>\napply template already in THC, but using the ATen API.  Much of this involves stripping out<br>\nthe TensorUtils code (which is basically templated ATen-style), although a couple of functions<br>\nremain that are apply specific (and thus don't seem worth porting to ATen), namely<br>\noverlappingIndices, canUse32BitIndexMath, and getTensorInfo.  We can make those generally<br>\navailable via native functions if there's a need.</p>", "body_text": "Like the CPU version, this implements an apply template that is almost identical to the\napply template already in THC, but using the ATen API.  Much of this involves stripping out\nthe TensorUtils code (which is basically templated ATen-style), although a couple of functions\nremain that are apply specific (and thus don't seem worth porting to ATen), namely\noverlappingIndices, canUse32BitIndexMath, and getTensorInfo.  We can make those generally\navailable via native functions if there's a need.", "body": "Like the CPU version, this implements an apply template that is almost identical to the\r\napply template already in THC, but using the ATen API.  Much of this involves stripping out\r\nthe TensorUtils code (which is basically templated ATen-style), although a couple of functions\r\nremain that are apply specific (and thus don't seem worth porting to ATen), namely\r\noverlappingIndices, canUse32BitIndexMath, and getTensorInfo.  We can make those generally\r\navailable via native functions if there's a need."}