{"url": "https://api.github.com/repos/pytorch/pytorch/issues/5036", "repository_url": "https://api.github.com/repos/pytorch/pytorch", "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/5036/labels{/name}", "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/5036/comments", "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/5036/events", "html_url": "https://github.com/pytorch/pytorch/pull/5036", "id": 294180010, "node_id": "MDExOlB1bGxSZXF1ZXN0MTY3MDAwMjk1", "number": 5036, "title": "Use blocks machinery to simplify bookkeeping in autodiff", "user": {"login": "zdevito", "id": 370202, "node_id": "MDQ6VXNlcjM3MDIwMg==", "avatar_url": "https://avatars0.githubusercontent.com/u/370202?v=4", "gravatar_id": "", "url": "https://api.github.com/users/zdevito", "html_url": "https://github.com/zdevito", "followers_url": "https://api.github.com/users/zdevito/followers", "following_url": "https://api.github.com/users/zdevito/following{/other_user}", "gists_url": "https://api.github.com/users/zdevito/gists{/gist_id}", "starred_url": "https://api.github.com/users/zdevito/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/zdevito/subscriptions", "organizations_url": "https://api.github.com/users/zdevito/orgs", "repos_url": "https://api.github.com/users/zdevito/repos", "events_url": "https://api.github.com/users/zdevito/events{/privacy}", "received_events_url": "https://api.github.com/users/zdevito/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-02-04T08:24:54Z", "updated_at": "2018-11-23T15:39:07Z", "closed_at": "2018-02-05T15:43:50Z", "author_association": "CONTRIBUTOR", "pull_request": {"url": "https://api.github.com/repos/pytorch/pytorch/pulls/5036", "html_url": "https://github.com/pytorch/pytorch/pull/5036", "diff_url": "https://github.com/pytorch/pytorch/pull/5036.diff", "patch_url": "https://github.com/pytorch/pytorch/pull/5036.patch"}, "body_html": "<p>Using <a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=13564\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/ezyang\">@ezyang</a>'s suggestion, this change uses a block rather than<br>\nstaging annotations to represent the reverse pass. This allows us to reuse the machinery to copy graphs/blocks to extract the reverse pass concisely, eliminating ~50 lines of code.</p>\n<p>This also changes the input order of Gradients df to:<br>\n[output vjps][temporary vjps][captures]</p>\n<p>In addition to being simpler to generate in this order, it also<br>\nwill allow ExecutionPlan to append the captures onto the already-<br>\nexisting input list of vjps that are given by the autograd,<br>\nrather than have to prepend them, which should be slightly cheaper.</p>\n<p>This also changes the Gradient struct to enforce that input<br>\ncaptures appear before output captures in the capture list,<br>\nwhich makes it easier to use in ExecutionPlan.</p>", "body_text": "Using @ezyang's suggestion, this change uses a block rather than\nstaging annotations to represent the reverse pass. This allows us to reuse the machinery to copy graphs/blocks to extract the reverse pass concisely, eliminating ~50 lines of code.\nThis also changes the input order of Gradients df to:\n[output vjps][temporary vjps][captures]\nIn addition to being simpler to generate in this order, it also\nwill allow ExecutionPlan to append the captures onto the already-\nexisting input list of vjps that are given by the autograd,\nrather than have to prepend them, which should be slightly cheaper.\nThis also changes the Gradient struct to enforce that input\ncaptures appear before output captures in the capture list,\nwhich makes it easier to use in ExecutionPlan.", "body": "Using @ezyang's suggestion, this change uses a block rather than\r\nstaging annotations to represent the reverse pass. This allows us to reuse the machinery to copy graphs/blocks to extract the reverse pass concisely, eliminating ~50 lines of code.\r\n\r\nThis also changes the input order of Gradients df to:\r\n   [output vjps][temporary vjps][captures]\r\n\r\nIn addition to being simpler to generate in this order, it also\r\nwill allow ExecutionPlan to append the captures onto the already-\r\nexisting input list of vjps that are given by the autograd,\r\nrather than have to prepend them, which should be slightly cheaper.\r\n\r\nThis also changes the Gradient struct to enforce that input\r\ncaptures appear before output captures in the capture list,\r\nwhich makes it easier to use in ExecutionPlan."}