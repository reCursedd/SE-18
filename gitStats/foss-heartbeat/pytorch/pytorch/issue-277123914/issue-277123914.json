{"url": "https://api.github.com/repos/pytorch/pytorch/issues/3905", "repository_url": "https://api.github.com/repos/pytorch/pytorch", "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/3905/labels{/name}", "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/3905/comments", "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/3905/events", "html_url": "https://github.com/pytorch/pytorch/issues/3905", "id": 277123914, "node_id": "MDU6SXNzdWUyNzcxMjM5MTQ=", "number": 3905, "title": "tensor.norm(dim = 0) doesn't work without explicit p argument", "user": {"login": "vadimkantorov", "id": 1041752, "node_id": "MDQ6VXNlcjEwNDE3NTI=", "avatar_url": "https://avatars0.githubusercontent.com/u/1041752?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vadimkantorov", "html_url": "https://github.com/vadimkantorov", "followers_url": "https://api.github.com/users/vadimkantorov/followers", "following_url": "https://api.github.com/users/vadimkantorov/following{/other_user}", "gists_url": "https://api.github.com/users/vadimkantorov/gists{/gist_id}", "starred_url": "https://api.github.com/users/vadimkantorov/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vadimkantorov/subscriptions", "organizations_url": "https://api.github.com/users/vadimkantorov/orgs", "repos_url": "https://api.github.com/users/vadimkantorov/repos", "events_url": "https://api.github.com/users/vadimkantorov/events{/privacy}", "received_events_url": "https://api.github.com/users/vadimkantorov/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-11-27T18:39:40Z", "updated_at": "2017-11-27T20:34:00Z", "closed_at": "2017-11-27T20:34:00Z", "author_association": "NONE", "body_html": "<div class=\"highlight highlight-source-python\"><pre>a <span class=\"pl-k\">=</span> torch.rand(<span class=\"pl-c1\">3</span>, <span class=\"pl-c1\">3</span>)\n\na.norm(<span class=\"pl-v\">dim</span> <span class=\"pl-k\">=</span> <span class=\"pl-c1\">1</span>)\n<span class=\"pl-c\"><span class=\"pl-c\">#</span>TypeError: norm received an invalid combination of arguments - got (dim=int, ), but expected one of:</span>\n<span class=\"pl-c\"><span class=\"pl-c\">#</span> * no arguments</span>\n<span class=\"pl-c\"><span class=\"pl-c\">#</span> * (float p)</span>\n<span class=\"pl-c\"><span class=\"pl-c\">#</span>      didn't match because some of the keywords were incorrect: dim</span>\n<span class=\"pl-c\"><span class=\"pl-c\">#</span> * (float p, int dim)</span>\n<span class=\"pl-c\"><span class=\"pl-c\">#</span> * (float p, int dim, bool keepdim)</span>\n\n\ntorch.norm(a, <span class=\"pl-v\">dim</span> <span class=\"pl-k\">=</span> <span class=\"pl-c1\">1</span>)\n<span class=\"pl-c\"><span class=\"pl-c\">#</span>TypeError: torch.norm received an invalid combination of arguments - got (torch.FloatTensor, dim=int), but expected one of:</span>\n<span class=\"pl-c\"><span class=\"pl-c\">#</span> * (torch.FloatTensor source)</span>\n<span class=\"pl-c\"><span class=\"pl-c\">#</span> * (torch.FloatTensor source, float p)</span>\n<span class=\"pl-c\"><span class=\"pl-c\">#</span>      didn't match because some of the keywords were incorrect: dim</span>\n<span class=\"pl-c\"><span class=\"pl-c\">#</span> * (torch.FloatTensor source, float p, int dim)</span>\n<span class=\"pl-c\"><span class=\"pl-c\">#</span> * (torch.FloatTensor source, float p, int dim, bool keepdim)</span>\n\ntorch.norm(a, <span class=\"pl-v\">p</span> <span class=\"pl-k\">=</span> <span class=\"pl-c1\">2</span>, <span class=\"pl-v\">dim</span> <span class=\"pl-k\">=</span> <span class=\"pl-c1\">1</span>) <span class=\"pl-c\"><span class=\"pl-c\">#</span> works</span>\na.norm(<span class=\"pl-v\">p</span> <span class=\"pl-k\">=</span> <span class=\"pl-c1\">2</span>, <span class=\"pl-v\">dim</span> <span class=\"pl-k\">=</span> <span class=\"pl-c1\">1</span>) <span class=\"pl-c\"><span class=\"pl-c\">#</span> works</span>\na.norm() <span class=\"pl-c\"><span class=\"pl-c\">#</span> works</span></pre></div>", "body_text": "a = torch.rand(3, 3)\n\na.norm(dim = 1)\n#TypeError: norm received an invalid combination of arguments - got (dim=int, ), but expected one of:\n# * no arguments\n# * (float p)\n#      didn't match because some of the keywords were incorrect: dim\n# * (float p, int dim)\n# * (float p, int dim, bool keepdim)\n\n\ntorch.norm(a, dim = 1)\n#TypeError: torch.norm received an invalid combination of arguments - got (torch.FloatTensor, dim=int), but expected one of:\n# * (torch.FloatTensor source)\n# * (torch.FloatTensor source, float p)\n#      didn't match because some of the keywords were incorrect: dim\n# * (torch.FloatTensor source, float p, int dim)\n# * (torch.FloatTensor source, float p, int dim, bool keepdim)\n\ntorch.norm(a, p = 2, dim = 1) # works\na.norm(p = 2, dim = 1) # works\na.norm() # works", "body": "```python\r\na = torch.rand(3, 3)\r\n\r\na.norm(dim = 1)\r\n#TypeError: norm received an invalid combination of arguments - got (dim=int, ), but expected one of:\r\n# * no arguments\r\n# * (float p)\r\n#      didn't match because some of the keywords were incorrect: dim\r\n# * (float p, int dim)\r\n# * (float p, int dim, bool keepdim)\r\n\r\n\r\ntorch.norm(a, dim = 1)\r\n#TypeError: torch.norm received an invalid combination of arguments - got (torch.FloatTensor, dim=int), but expected one of:\r\n# * (torch.FloatTensor source)\r\n# * (torch.FloatTensor source, float p)\r\n#      didn't match because some of the keywords were incorrect: dim\r\n# * (torch.FloatTensor source, float p, int dim)\r\n# * (torch.FloatTensor source, float p, int dim, bool keepdim)\r\n\r\ntorch.norm(a, p = 2, dim = 1) # works\r\na.norm(p = 2, dim = 1) # works\r\na.norm() # works\r\n```"}