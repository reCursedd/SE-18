{"url": "https://api.github.com/repos/pytorch/pytorch/issues/comments/340042725", "html_url": "https://github.com/pytorch/pytorch/issues/1529#issuecomment-340042725", "issue_url": "https://api.github.com/repos/pytorch/pytorch/issues/1529", "id": 340042725, "node_id": "MDEyOklzc3VlQ29tbWVudDM0MDA0MjcyNQ==", "user": {"login": "SsnL", "id": 5674597, "node_id": "MDQ6VXNlcjU2NzQ1OTc=", "avatar_url": "https://avatars2.githubusercontent.com/u/5674597?v=4", "gravatar_id": "", "url": "https://api.github.com/users/SsnL", "html_url": "https://github.com/SsnL", "followers_url": "https://api.github.com/users/SsnL/followers", "following_url": "https://api.github.com/users/SsnL/following{/other_user}", "gists_url": "https://api.github.com/users/SsnL/gists{/gist_id}", "starred_url": "https://api.github.com/users/SsnL/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/SsnL/subscriptions", "organizations_url": "https://api.github.com/users/SsnL/orgs", "repos_url": "https://api.github.com/users/SsnL/repos", "events_url": "https://api.github.com/users/SsnL/events{/privacy}", "received_events_url": "https://api.github.com/users/SsnL/received_events", "type": "User", "site_admin": false}, "created_at": "2017-10-27T18:01:35Z", "updated_at": "2017-10-27T18:01:35Z", "author_association": "CONTRIBUTOR", "body_html": "<p><a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=5450869\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/tibuch\">@tibuch</a> I am observing the same thing. I've been trying different approaches but none of them seem to work. I'm wondering if that is the correct method to call because apparently our conv code calls it to find correct cudnn algo. <div class=\"border rounded-1 my-2\">\n  <div class=\"f6 px-3 py-2 lh-condensed border-bottom bg-gray-light\">\n    <p class=\"mb-0 text-bold\">\n      <a href=\"https://github.com/pytorch/pytorch/blob/0f4ae13f0541981c58541cb20f38b780e6fcd38d/torch/csrc/cudnn/Conv.cpp#L455-L456\">pytorch/torch/csrc/cudnn/Conv.cpp</a>\n    </p>\n    <p class=\"mb-0 text-gray-light\">\n        Lines 455 to 456\n      in\n      <a data-pjax=\"true\" class=\"commit-tease-sha\" href=\"/pytorch/pytorch/commit/0f4ae13f0541981c58541cb20f38b780e6fcd38d\">0f4ae13</a>\n    </p>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper blob-wrapper-embedded data\">\n    <table class=\"highlight tab-size mb-0 js-file-line-container\" data-tab-size=\"8\">\n\n        <tbody><tr class=\"border-0\">\n          <td id=\"L455\" class=\"blob-num border-0 px-3 py-0 bg-white js-line-number\" data-line-number=\"455\"></td>\n          <td id=\"LC455\" class=\"blob-code border-0 px-3 py-0 bg-white blob-code-inner js-file-line\"> THCDeviceAllocator* allocator = <span class=\"pl-c1\">THCCachingAllocator_get</span>(); </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L456\" class=\"blob-num border-0 px-3 py-0 bg-white js-line-number\" data-line-number=\"456\"></td>\n          <td id=\"LC456\" class=\"blob-code border-0 px-3 py-0 bg-white blob-code-inner js-file-line\"> <span class=\"pl-c1\">CUDA_CHECK</span>(allocator-&gt;<span class=\"pl-c1\">emptyCache</span>(allocator-&gt;<span class=\"pl-smi\">state</span>)); </td>\n        </tr>\n    </tbody></table>\n  </div>\n</div>\n</p>\n<p><a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=1310570\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/soumith\">@soumith</a> Could you point us to the right track?</p>", "body_text": "@tibuch I am observing the same thing. I've been trying different approaches but none of them seem to work. I'm wondering if that is the correct method to call because apparently our conv code calls it to find correct cudnn algo. \n  \n    \n      pytorch/torch/csrc/cudnn/Conv.cpp\n    \n    \n        Lines 455 to 456\n      in\n      0f4ae13\n    \n    \n    \n    \n\n        \n          \n           THCDeviceAllocator* allocator = THCCachingAllocator_get(); \n        \n\n        \n          \n           CUDA_CHECK(allocator->emptyCache(allocator->state)); \n        \n    \n  \n\n\n@soumith Could you point us to the right track?", "body": "@tibuch I am observing the same thing. I've been trying different approaches but none of them seem to work. I'm wondering if that is the correct method to call because apparently our conv code calls it to find correct cudnn algo. https://github.com/pytorch/pytorch/blob/0f4ae13f0541981c58541cb20f38b780e6fcd38d/torch/csrc/cudnn/Conv.cpp#L455-L456\r\n\r\n@soumith Could you point us to the right track?"}