{"url": "https://api.github.com/repos/pytorch/pytorch/issues/comments/341493544", "html_url": "https://github.com/pytorch/pytorch/issues/1529#issuecomment-341493544", "issue_url": "https://api.github.com/repos/pytorch/pytorch/issues/1529", "id": 341493544, "node_id": "MDEyOklzc3VlQ29tbWVudDM0MTQ5MzU0NA==", "user": {"login": "SsnL", "id": 5674597, "node_id": "MDQ6VXNlcjU2NzQ1OTc=", "avatar_url": "https://avatars2.githubusercontent.com/u/5674597?v=4", "gravatar_id": "", "url": "https://api.github.com/users/SsnL", "html_url": "https://github.com/SsnL", "followers_url": "https://api.github.com/users/SsnL/followers", "following_url": "https://api.github.com/users/SsnL/following{/other_user}", "gists_url": "https://api.github.com/users/SsnL/gists{/gist_id}", "starred_url": "https://api.github.com/users/SsnL/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/SsnL/subscriptions", "organizations_url": "https://api.github.com/users/SsnL/orgs", "repos_url": "https://api.github.com/users/SsnL/repos", "events_url": "https://api.github.com/users/SsnL/events{/privacy}", "received_events_url": "https://api.github.com/users/SsnL/received_events", "type": "User", "site_admin": false}, "created_at": "2017-11-02T17:14:19Z", "updated_at": "2017-11-02T17:14:19Z", "author_association": "CONTRIBUTOR", "body_html": "<p><a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=5450869\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/tibuch\">@tibuch</a> I did some investigation. So here is the deal. Calling this function will only allow you to free unreferenced memory in cache. I tried the following script and it worked:</p>\n<pre><code>import torch\n\nx = torch.cuda.DoubleTensor(10000, 10000).normal_()\ndel x\ntorch._C._cuda_emptyCache()\n</code></pre>\n<p>Exposing a method to free all memory can be dangerous. Do you think dereferencing all GPU tensors and calling this function will be a suitable solution to your use case?</p>", "body_text": "@tibuch I did some investigation. So here is the deal. Calling this function will only allow you to free unreferenced memory in cache. I tried the following script and it worked:\nimport torch\n\nx = torch.cuda.DoubleTensor(10000, 10000).normal_()\ndel x\ntorch._C._cuda_emptyCache()\n\nExposing a method to free all memory can be dangerous. Do you think dereferencing all GPU tensors and calling this function will be a suitable solution to your use case?", "body": "@tibuch I did some investigation. So here is the deal. Calling this function will only allow you to free unreferenced memory in cache. I tried the following script and it worked:\r\n```\r\nimport torch\r\n\r\nx = torch.cuda.DoubleTensor(10000, 10000).normal_()\r\ndel x\r\ntorch._C._cuda_emptyCache()\r\n```\r\nExposing a method to free all memory can be dangerous. Do you think dereferencing all GPU tensors and calling this function will be a suitable solution to your use case?"}