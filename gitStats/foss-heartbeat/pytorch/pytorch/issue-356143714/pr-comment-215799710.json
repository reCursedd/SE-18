{"url": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/215799710", "pull_request_review_id": 153148464, "id": 215799710, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIxNTc5OTcxMA==", "diff_hunk": "@@ -2473,6 +2473,38 @@ def test_symeig_no_eigenvectors(self):\n         with self.assertRaisesRegex(RuntimeError, 'backward without computing eigenvectors'):\n             torch.autograd.backward([w, v], [torch.ones_like(w), torch.ones_like(v)])\n \n+    def test_no_grad_copy(self):\n+        # create autograd function that saves grad pointer as class static\n+        class MyFunc(Function):\n+            static_grad_ptr = None\n+\n+            @staticmethod\n+            def forward(ctx, inp1, inp2):\n+                return inp1 + inp2\n+\n+            @staticmethod\n+            def backward(ctx, grad):\n+                MyFunc.static_grad_ptr = grad.data_ptr()\n+                return grad, grad\n+\n+        a = torch.randn(5, 6, requires_grad=True)\n+        b = torch.randn(5, 6, requires_grad=True)\n+        # sum should not trigger no copy since it produce non-contiguous grad\n+        MyFunc.apply(a, b).sum().backward()", "path": "test/test_autograd.py", "position": null, "original_position": 21, "commit_id": "3d6f62fb1baf6e7d4d1a527b17c295236528a167", "original_commit_id": "779d4122aea5304e82c801b287ed7e02abc777bd", "user": {"login": "FDecaYed", "id": 17164548, "node_id": "MDQ6VXNlcjE3MTY0NTQ4", "avatar_url": "https://avatars2.githubusercontent.com/u/17164548?v=4", "gravatar_id": "", "url": "https://api.github.com/users/FDecaYed", "html_url": "https://github.com/FDecaYed", "followers_url": "https://api.github.com/users/FDecaYed/followers", "following_url": "https://api.github.com/users/FDecaYed/following{/other_user}", "gists_url": "https://api.github.com/users/FDecaYed/gists{/gist_id}", "starred_url": "https://api.github.com/users/FDecaYed/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/FDecaYed/subscriptions", "organizations_url": "https://api.github.com/users/FDecaYed/orgs", "repos_url": "https://api.github.com/users/FDecaYed/repos", "events_url": "https://api.github.com/users/FDecaYed/events{/privacy}", "received_events_url": "https://api.github.com/users/FDecaYed/received_events", "type": "User", "site_admin": false}, "body": "@SsnL I found passing in grad to backward manually will change its use_count when we decide whether to clone it, so we are not testing contiguous. I will go with first approach now.", "created_at": "2018-09-06T22:39:25Z", "updated_at": "2018-11-23T15:50:43Z", "html_url": "https://github.com/pytorch/pytorch/pull/11165#discussion_r215799710", "pull_request_url": "https://api.github.com/repos/pytorch/pytorch/pulls/11165", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/215799710"}, "html": {"href": "https://github.com/pytorch/pytorch/pull/11165#discussion_r215799710"}, "pull_request": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/11165"}}, "body_html": "<p><a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=5674597\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/SsnL\">@SsnL</a> I found passing in grad to backward manually will change its use_count when we decide whether to clone it, so we are not testing contiguous. I will go with first approach now.</p>", "body_text": "@SsnL I found passing in grad to backward manually will change its use_count when we decide whether to clone it, so we are not testing contiguous. I will go with first approach now.", "in_reply_to_id": 215718363}