{"url": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/215717632", "pull_request_review_id": 153046178, "id": 215717632, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIxNTcxNzYzMg==", "diff_hunk": "@@ -40,7 +40,20 @@ auto AccumulateGrad::apply(variable_list&& grads) -> variable_list {\n \n   at::Tensor& grad = variable.grad();\n   if (!grad.defined()) {\n-    variable.grad() = new_grad.clone();\n+    // under following condition, we can avoid clone()\n+    if (!GradMode::is_enabled()\n+        && !new_grad.type().is_sparse()\n+        && new_grad.is_contiguous()\n+        && new_grad.use_count() == 2) {\n+      // first check it is in first-order grad only mode\n+      // then check not sparse before is_contiguous\n+      // then check contiguous, otherwise later in place accumulation may fail\n+      // and lastly, check it is the last reference before we grab it\n+      // we created new_grad above so ref count should be 2", "path": "torch/csrc/autograd/functions/accumulate_grad.cpp", "position": null, "original_position": 14, "commit_id": "3d6f62fb1baf6e7d4d1a527b17c295236528a167", "original_commit_id": "779d4122aea5304e82c801b287ed7e02abc777bd", "user": {"login": "apaszke", "id": 4583066, "node_id": "MDQ6VXNlcjQ1ODMwNjY=", "avatar_url": "https://avatars3.githubusercontent.com/u/4583066?v=4", "gravatar_id": "", "url": "https://api.github.com/users/apaszke", "html_url": "https://github.com/apaszke", "followers_url": "https://api.github.com/users/apaszke/followers", "following_url": "https://api.github.com/users/apaszke/following{/other_user}", "gists_url": "https://api.github.com/users/apaszke/gists{/gist_id}", "starred_url": "https://api.github.com/users/apaszke/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/apaszke/subscriptions", "organizations_url": "https://api.github.com/users/apaszke/orgs", "repos_url": "https://api.github.com/users/apaszke/repos", "events_url": "https://api.github.com/users/apaszke/events{/privacy}", "received_events_url": "https://api.github.com/users/apaszke/received_events", "type": "User", "site_admin": false}, "body": "Can we move the variable into `new_grad`, or make it reference, such that we can assert that the use count is exactly 1?", "created_at": "2018-09-06T17:46:46Z", "updated_at": "2018-11-23T15:50:41Z", "html_url": "https://github.com/pytorch/pytorch/pull/11165#discussion_r215717632", "pull_request_url": "https://api.github.com/repos/pytorch/pytorch/pulls/11165", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/215717632"}, "html": {"href": "https://github.com/pytorch/pytorch/pull/11165#discussion_r215717632"}, "pull_request": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/11165"}}, "body_html": "<p>Can we move the variable into <code>new_grad</code>, or make it reference, such that we can assert that the use count is exactly 1?</p>", "body_text": "Can we move the variable into new_grad, or make it reference, such that we can assert that the use count is exactly 1?"}