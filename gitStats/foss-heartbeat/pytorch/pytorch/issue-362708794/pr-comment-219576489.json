{"url": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/219576489", "pull_request_review_id": 157793403, "id": 219576489, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIxOTU3NjQ4OQ==", "diff_hunk": "@@ -3,41 +3,7 @@\n #include <sstream>\n #include <string>\n \n-// You can use the definition AT_CORE_STATIC_WINDOWS to control whether\n-// or not we apply __declspec.  You will want to set this as\n-// -DAT_CORE_STATIC_WINDOWS=1 when compiling code which links\n-// against ATen/core on Windows, when ATen/core is built as a\n-// static library (in which case, saying the symbol is coming\n-// from a DLL would be incorrect).\n-\n-#ifdef _WIN32\n-#if !defined(AT_CORE_STATIC_WINDOWS)\n-#define AT_CORE_EXPORT __declspec(dllexport)\n-#define AT_CORE_IMPORT __declspec(dllimport)\n-#else // !defined(AT_CORE_STATIC_WINDOWS)\n-#define AT_CORE_EXPORT\n-#define AT_CORE_IMPORT\n-#endif // !defined(AT_CORE_STATIC_WINDOWS)\n-#else  // _WIN32\n-#if defined(__GNUC__)\n-#define AT_CORE_EXPORT __attribute__((__visibility__(\"default\")))\n-#else // defined(__GNUC__)\n-#define AT_CORE_EXPORT\n-#endif // defined(__GNUC__)\n-#define AT_CORE_IMPORT AT_CORE_EXPORT\n-#endif  // _WIN32\n-\n-// AT_CORE_API is a macro that, depends on whether you are building the\n-// main library or not, resolves to either AT_CORE_EXPORT or\n-// AT_CORE_IMPORT.\n-//\n-\n-// TODO: unify the controlling macros.\n-#if defined(CAFFE2_BUILD_MAIN_LIBS) || defined(ATen_cpu_EXPORTS) || defined(caffe2_EXPORTS)\n-#define AT_CORE_API AT_CORE_EXPORT\n-#else // defined(CAFFE2_BUILD_MAIN_LIBS) || defined(ATen_cpu_EXPORTS) || defined(caffe2_EXPORTS)\n-#define AT_CORE_API AT_CORE_IMPORT\n-#endif // defined(CAFFE2_BUILD_MAIN_LIBS) || defined(ATen_cpu_EXPORTS) || defined(caffe2_EXPORTS)\n+#include \"c10/macros/Macros.h\"", "path": "aten/src/ATen/core/Macros.h", "position": 39, "original_position": 39, "commit_id": "8baad161c2e4980ff88140980d91c8c86007234b", "original_commit_id": "6b4575660c6434d86974ef2cce59f1ada532feb9", "user": {"login": "ezyang", "id": 13564, "node_id": "MDQ6VXNlcjEzNTY0", "avatar_url": "https://avatars0.githubusercontent.com/u/13564?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ezyang", "html_url": "https://github.com/ezyang", "followers_url": "https://api.github.com/users/ezyang/followers", "following_url": "https://api.github.com/users/ezyang/following{/other_user}", "gists_url": "https://api.github.com/users/ezyang/gists{/gist_id}", "starred_url": "https://api.github.com/users/ezyang/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ezyang/subscriptions", "organizations_url": "https://api.github.com/users/ezyang/orgs", "repos_url": "https://api.github.com/users/ezyang/repos", "events_url": "https://api.github.com/users/ezyang/events{/privacy}", "received_events_url": "https://api.github.com/users/ezyang/received_events", "type": "User", "site_admin": false}, "body": "What's the rule for subfolders under c10? My preference (evidenced by `ATen/core/` structure) is that most headers live in the top level.", "created_at": "2018-09-21T17:45:41Z", "updated_at": "2018-11-23T15:51:47Z", "html_url": "https://github.com/pytorch/pytorch/pull/11939#discussion_r219576489", "pull_request_url": "https://api.github.com/repos/pytorch/pytorch/pulls/11939", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/219576489"}, "html": {"href": "https://github.com/pytorch/pytorch/pull/11939#discussion_r219576489"}, "pull_request": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/11939"}}, "body_html": "<p>What's the rule for subfolders under c10? My preference (evidenced by <code>ATen/core/</code> structure) is that most headers live in the top level.</p>", "body_text": "What's the rule for subfolders under c10? My preference (evidenced by ATen/core/ structure) is that most headers live in the top level."}