{"url": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/229463423", "pull_request_review_id": 169969747, "id": 229463423, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIyOTQ2MzQyMw==", "diff_hunk": "@@ -88,6 +85,9 @@ class Dataset : public BatchDataset<Self, std::vector<SingleExample>> {\n     return batch;\n   }\n };\n+\n+template <typename Self, typename Batch = std::vector<Example<>>>\n+using StreamDataset = BatchDataset<Self, Batch, size_t>;", "path": "torch/csrc/api/include/torch/data/datasets/base.h", "position": null, "original_position": 52, "commit_id": "ca8bf7cb1600b77f543744f5c0e5a5fd750be324", "original_commit_id": "bcf8a94cef28493b64a8ce603dcb30feb976a891", "user": {"login": "apaszke", "id": 4583066, "node_id": "MDQ6VXNlcjQ1ODMwNjY=", "avatar_url": "https://avatars3.githubusercontent.com/u/4583066?v=4", "gravatar_id": "", "url": "https://api.github.com/users/apaszke", "html_url": "https://github.com/apaszke", "followers_url": "https://api.github.com/users/apaszke/followers", "following_url": "https://api.github.com/users/apaszke/following{/other_user}", "gists_url": "https://api.github.com/users/apaszke/gists{/gist_id}", "starred_url": "https://api.github.com/users/apaszke/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/apaszke/subscriptions", "organizations_url": "https://api.github.com/users/apaszke/orgs", "repos_url": "https://api.github.com/users/apaszke/repos", "events_url": "https://api.github.com/users/apaszke/events{/privacy}", "received_events_url": "https://api.github.com/users/apaszke/received_events", "type": "User", "site_admin": false}, "body": "What's so specific to streams to this particular class? It's confusing, because I'd often think of a stream as an unbounded entity (or at least one that enforces sequential access), but this thing simply specializes on using a different index type.", "created_at": "2018-10-30T19:59:11Z", "updated_at": "2018-11-23T15:53:52Z", "html_url": "https://github.com/pytorch/pytorch/pull/12960#discussion_r229463423", "pull_request_url": "https://api.github.com/repos/pytorch/pytorch/pulls/12960", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/229463423"}, "html": {"href": "https://github.com/pytorch/pytorch/pull/12960#discussion_r229463423"}, "pull_request": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/12960"}}, "body_html": "<p>What's so specific to streams to this particular class? It's confusing, because I'd often think of a stream as an unbounded entity (or at least one that enforces sequential access), but this thing simply specializes on using a different index type.</p>", "body_text": "What's so specific to streams to this particular class? It's confusing, because I'd often think of a stream as an unbounded entity (or at least one that enforces sequential access), but this thing simply specializes on using a different index type."}