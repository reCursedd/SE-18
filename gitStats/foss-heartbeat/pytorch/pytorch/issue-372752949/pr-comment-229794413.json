{"url": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/229794413", "pull_request_review_id": 170380054, "id": 229794413, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIyOTc5NDQxMw==", "diff_hunk": "@@ -0,0 +1,62 @@\n+#pragma once\n+\n+#include <torch/data/samplers/base.h>\n+#include <torch/data/samplers/custom_index.h>\n+#include <torch/tensor.h>\n+\n+#include <cstddef>\n+\n+namespace torch {\n+namespace serialize {\n+class InputArchive;\n+class OutputArchive;\n+} // namespace serialize\n+} // namespace torch\n+\n+namespace torch {\n+namespace data {\n+namespace samplers {\n+\n+/// A wrapper around a batch size value, which implements the `CustomIndex`\n+/// interface.\n+struct BatchSize : public CustomIndex {\n+  explicit BatchSize(size_t size);\n+  size_t size() const noexcept override;\n+  operator size_t() const noexcept;\n+  size_t size_;\n+};", "path": "torch/csrc/api/include/torch/data/samplers/stream.h", "position": 27, "original_position": 27, "commit_id": "ca8bf7cb1600b77f543744f5c0e5a5fd750be324", "original_commit_id": "bcf8a94cef28493b64a8ce603dcb30feb976a891", "user": {"login": "goldsborough", "id": 6429851, "node_id": "MDQ6VXNlcjY0Mjk4NTE=", "avatar_url": "https://avatars3.githubusercontent.com/u/6429851?v=4", "gravatar_id": "", "url": "https://api.github.com/users/goldsborough", "html_url": "https://github.com/goldsborough", "followers_url": "https://api.github.com/users/goldsborough/followers", "following_url": "https://api.github.com/users/goldsborough/following{/other_user}", "gists_url": "https://api.github.com/users/goldsborough/gists{/gist_id}", "starred_url": "https://api.github.com/users/goldsborough/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/goldsborough/subscriptions", "organizations_url": "https://api.github.com/users/goldsborough/orgs", "repos_url": "https://api.github.com/users/goldsborough/repos", "events_url": "https://api.github.com/users/goldsborough/events{/privacy}", "received_events_url": "https://api.github.com/users/goldsborough/received_events", "type": "User", "site_admin": false}, "body": "> deterministic process\r\n\r\nis a pretty hard constraint here, no? This `StreamDataset` should work with something like `/dev/urandom` -- no determinism at all, infinite, and all we do is ask for `batch_size` elements. The `index` kept in the `StreamDataset` is purely to keep track of progress to know how many elements were sampled. I will rename it to `progress` in fact. Do you see what I mean? What do you think?", "created_at": "2018-10-31T17:29:24Z", "updated_at": "2018-11-23T15:53:54Z", "html_url": "https://github.com/pytorch/pytorch/pull/12960#discussion_r229794413", "pull_request_url": "https://api.github.com/repos/pytorch/pytorch/pulls/12960", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/229794413"}, "html": {"href": "https://github.com/pytorch/pytorch/pull/12960#discussion_r229794413"}, "pull_request": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/12960"}}, "body_html": "<blockquote>\n<p>deterministic process</p>\n</blockquote>\n<p>is a pretty hard constraint here, no? This <code>StreamDataset</code> should work with something like <code>/dev/urandom</code> -- no determinism at all, infinite, and all we do is ask for <code>batch_size</code> elements. The <code>index</code> kept in the <code>StreamDataset</code> is purely to keep track of progress to know how many elements were sampled. I will rename it to <code>progress</code> in fact. Do you see what I mean? What do you think?</p>", "body_text": "deterministic process\n\nis a pretty hard constraint here, no? This StreamDataset should work with something like /dev/urandom -- no determinism at all, infinite, and all we do is ask for batch_size elements. The index kept in the StreamDataset is purely to keep track of progress to know how many elements were sampled. I will rename it to progress in fact. Do you see what I mean? What do you think?", "in_reply_to_id": 229466068}