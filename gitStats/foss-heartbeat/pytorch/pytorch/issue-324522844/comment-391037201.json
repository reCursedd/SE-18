{"url": "https://api.github.com/repos/pytorch/pytorch/issues/comments/391037201", "html_url": "https://github.com/pytorch/pytorch/issues/7686#issuecomment-391037201", "issue_url": "https://api.github.com/repos/pytorch/pytorch/issues/7686", "id": 391037201, "node_id": "MDEyOklzc3VlQ29tbWVudDM5MTAzNzIwMQ==", "user": {"login": "cpuhrsch", "id": 1716488, "node_id": "MDQ6VXNlcjE3MTY0ODg=", "avatar_url": "https://avatars1.githubusercontent.com/u/1716488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cpuhrsch", "html_url": "https://github.com/cpuhrsch", "followers_url": "https://api.github.com/users/cpuhrsch/followers", "following_url": "https://api.github.com/users/cpuhrsch/following{/other_user}", "gists_url": "https://api.github.com/users/cpuhrsch/gists{/gist_id}", "starred_url": "https://api.github.com/users/cpuhrsch/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cpuhrsch/subscriptions", "organizations_url": "https://api.github.com/users/cpuhrsch/orgs", "repos_url": "https://api.github.com/users/cpuhrsch/repos", "events_url": "https://api.github.com/users/cpuhrsch/events{/privacy}", "received_events_url": "https://api.github.com/users/cpuhrsch/received_events", "type": "User", "site_admin": false}, "created_at": "2018-05-22T15:36:10Z", "updated_at": "2018-05-22T15:36:10Z", "author_association": "CONTRIBUTOR", "body_html": "<p><a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=402652\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/danieleds\">@danieleds</a> You can set the number of threads using OMP_NUM_THREADS as well. You should set that to a value that isn't higher than the number of available threads. You can play around with it to see what works. You can use <a href=\"https://perf.wiki.kernel.org/index.php/Main_Page\" rel=\"nofollow\">perf</a> to get an idea of the utilization, e.g. perf stat. <a href=\"https://linux.die.net/man/1/taskset\" rel=\"nofollow\">taskset</a> also allows you to set a the number of threads at an OS level.</p>\n<p>For example</p>\n<pre><code>$ numactl --membind=0 taskset -c 0-9 perf stat python /tmp/asd\nnum_threads: 10\n0\n1\n2\n3\n4\n5\n6\n7\n8\n9\n\n Performance counter stats for 'python /tmp/asd':\n\n     102703.859727      task-clock (msec)         #    6.493 CPUs utilized\n         6,648,917      context-switches          #    0.065 M/sec\n            25,449      cpu-migrations            #    0.248 K/sec\n            23,129      page-faults               #    0.225 K/sec\n   225,915,753,932      cycles                    #    2.200 GHz\n   &lt;not supported&gt;      stalled-cycles-frontend\n   &lt;not supported&gt;      stalled-cycles-backend\n   217,365,021,721      instructions              #    0.96  insns per cycle\n    52,707,870,505      branches                  #  513.202 M/sec\n        33,402,160      branch-misses             #    0.06% of all branches\n\n      15.818744212 seconds time elapsed\n</code></pre>", "body_text": "@danieleds You can set the number of threads using OMP_NUM_THREADS as well. You should set that to a value that isn't higher than the number of available threads. You can play around with it to see what works. You can use perf to get an idea of the utilization, e.g. perf stat. taskset also allows you to set a the number of threads at an OS level.\nFor example\n$ numactl --membind=0 taskset -c 0-9 perf stat python /tmp/asd\nnum_threads: 10\n0\n1\n2\n3\n4\n5\n6\n7\n8\n9\n\n Performance counter stats for 'python /tmp/asd':\n\n     102703.859727      task-clock (msec)         #    6.493 CPUs utilized\n         6,648,917      context-switches          #    0.065 M/sec\n            25,449      cpu-migrations            #    0.248 K/sec\n            23,129      page-faults               #    0.225 K/sec\n   225,915,753,932      cycles                    #    2.200 GHz\n   <not supported>      stalled-cycles-frontend\n   <not supported>      stalled-cycles-backend\n   217,365,021,721      instructions              #    0.96  insns per cycle\n    52,707,870,505      branches                  #  513.202 M/sec\n        33,402,160      branch-misses             #    0.06% of all branches\n\n      15.818744212 seconds time elapsed", "body": "@danieleds You can set the number of threads using OMP_NUM_THREADS as well. You should set that to a value that isn't higher than the number of available threads. You can play around with it to see what works. You can use [perf](https://perf.wiki.kernel.org/index.php/Main_Page) to get an idea of the utilization, e.g. perf stat. [taskset](https://linux.die.net/man/1/taskset) also allows you to set a the number of threads at an OS level.\r\n\r\nFor example\r\n\r\n```\r\n$ numactl --membind=0 taskset -c 0-9 perf stat python /tmp/asd\r\nnum_threads: 10\r\n0\r\n1\r\n2\r\n3\r\n4\r\n5\r\n6\r\n7\r\n8\r\n9\r\n\r\n Performance counter stats for 'python /tmp/asd':\r\n\r\n     102703.859727      task-clock (msec)         #    6.493 CPUs utilized\r\n         6,648,917      context-switches          #    0.065 M/sec\r\n            25,449      cpu-migrations            #    0.248 K/sec\r\n            23,129      page-faults               #    0.225 K/sec\r\n   225,915,753,932      cycles                    #    2.200 GHz\r\n   <not supported>      stalled-cycles-frontend\r\n   <not supported>      stalled-cycles-backend\r\n   217,365,021,721      instructions              #    0.96  insns per cycle\r\n    52,707,870,505      branches                  #  513.202 M/sec\r\n        33,402,160      branch-misses             #    0.06% of all branches\r\n\r\n      15.818744212 seconds time elapsed\r\n```"}