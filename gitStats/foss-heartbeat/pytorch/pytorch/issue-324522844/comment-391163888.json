{"url": "https://api.github.com/repos/pytorch/pytorch/issues/comments/391163888", "html_url": "https://github.com/pytorch/pytorch/issues/7686#issuecomment-391163888", "issue_url": "https://api.github.com/repos/pytorch/pytorch/issues/7686", "id": 391163888, "node_id": "MDEyOklzc3VlQ29tbWVudDM5MTE2Mzg4OA==", "user": {"login": "danieleds", "id": 402652, "node_id": "MDQ6VXNlcjQwMjY1Mg==", "avatar_url": "https://avatars1.githubusercontent.com/u/402652?v=4", "gravatar_id": "", "url": "https://api.github.com/users/danieleds", "html_url": "https://github.com/danieleds", "followers_url": "https://api.github.com/users/danieleds/followers", "following_url": "https://api.github.com/users/danieleds/following{/other_user}", "gists_url": "https://api.github.com/users/danieleds/gists{/gist_id}", "starred_url": "https://api.github.com/users/danieleds/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/danieleds/subscriptions", "organizations_url": "https://api.github.com/users/danieleds/orgs", "repos_url": "https://api.github.com/users/danieleds/repos", "events_url": "https://api.github.com/users/danieleds/events{/privacy}", "received_events_url": "https://api.github.com/users/danieleds/received_events", "type": "User", "site_admin": false}, "created_at": "2018-05-22T22:43:06Z", "updated_at": "2018-05-22T22:43:06Z", "author_association": "NONE", "body_html": "<p>Thanks. OMP_NUM_THREADS seems to do the trick (even though get_num_threads is still 1).</p>\n<p>Performance actually gets worse (even with OMP_NUM_THREADS=2... and I clearly have 2 free processing units), but at least the CPU usage now rises above 100%. I assume that's because my matrices are too small.</p>", "body_text": "Thanks. OMP_NUM_THREADS seems to do the trick (even though get_num_threads is still 1).\nPerformance actually gets worse (even with OMP_NUM_THREADS=2... and I clearly have 2 free processing units), but at least the CPU usage now rises above 100%. I assume that's because my matrices are too small.", "body": "Thanks. OMP_NUM_THREADS seems to do the trick (even though get_num_threads is still 1).\r\n\r\nPerformance actually gets worse (even with OMP_NUM_THREADS=2... and I clearly have 2 free processing units), but at least the CPU usage now rises above 100%. I assume that's because my matrices are too small."}