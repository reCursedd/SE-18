{"url": "https://api.github.com/repos/pytorch/pytorch/issues/9146", "repository_url": "https://api.github.com/repos/pytorch/pytorch", "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/9146/labels{/name}", "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/9146/comments", "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/9146/events", "html_url": "https://github.com/pytorch/pytorch/issues/9146", "id": 338038351, "node_id": "MDU6SXNzdWUzMzgwMzgzNTE=", "number": 9146, "title": "LinearLayer precision problem", "user": {"login": "jfolt", "id": 13595236, "node_id": "MDQ6VXNlcjEzNTk1MjM2", "avatar_url": "https://avatars2.githubusercontent.com/u/13595236?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jfolt", "html_url": "https://github.com/jfolt", "followers_url": "https://api.github.com/users/jfolt/followers", "following_url": "https://api.github.com/users/jfolt/following{/other_user}", "gists_url": "https://api.github.com/users/jfolt/gists{/gist_id}", "starred_url": "https://api.github.com/users/jfolt/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jfolt/subscriptions", "organizations_url": "https://api.github.com/users/jfolt/orgs", "repos_url": "https://api.github.com/users/jfolt/repos", "events_url": "https://api.github.com/users/jfolt/events{/privacy}", "received_events_url": "https://api.github.com/users/jfolt/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 443483881, "node_id": "MDU6TGFiZWw0NDM0ODM4ODE=", "url": "https://api.github.com/repos/pytorch/pytorch/labels/todo", "name": "todo", "color": "c2e0c6", "default": false}], "state": "closed", "locked": false, "assignee": {"login": "weiyangfb", "id": 38509346, "node_id": "MDQ6VXNlcjM4NTA5MzQ2", "avatar_url": "https://avatars1.githubusercontent.com/u/38509346?v=4", "gravatar_id": "", "url": "https://api.github.com/users/weiyangfb", "html_url": "https://github.com/weiyangfb", "followers_url": "https://api.github.com/users/weiyangfb/followers", "following_url": "https://api.github.com/users/weiyangfb/following{/other_user}", "gists_url": "https://api.github.com/users/weiyangfb/gists{/gist_id}", "starred_url": "https://api.github.com/users/weiyangfb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/weiyangfb/subscriptions", "organizations_url": "https://api.github.com/users/weiyangfb/orgs", "repos_url": "https://api.github.com/users/weiyangfb/repos", "events_url": "https://api.github.com/users/weiyangfb/events{/privacy}", "received_events_url": "https://api.github.com/users/weiyangfb/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "weiyangfb", "id": 38509346, "node_id": "MDQ6VXNlcjM4NTA5MzQ2", "avatar_url": "https://avatars1.githubusercontent.com/u/38509346?v=4", "gravatar_id": "", "url": "https://api.github.com/users/weiyangfb", "html_url": "https://github.com/weiyangfb", "followers_url": "https://api.github.com/users/weiyangfb/followers", "following_url": "https://api.github.com/users/weiyangfb/following{/other_user}", "gists_url": "https://api.github.com/users/weiyangfb/gists{/gist_id}", "starred_url": "https://api.github.com/users/weiyangfb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/weiyangfb/subscriptions", "organizations_url": "https://api.github.com/users/weiyangfb/orgs", "repos_url": "https://api.github.com/users/weiyangfb/repos", "events_url": "https://api.github.com/users/weiyangfb/events{/privacy}", "received_events_url": "https://api.github.com/users/weiyangfb/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 5, "created_at": "2018-07-03T20:09:55Z", "updated_at": "2018-07-31T19:46:28Z", "closed_at": "2018-07-31T19:01:33Z", "author_association": "NONE", "body_html": "<p>I have a problem with LinearLayer (code snippet attached below). I expected to see the difference between the two output tensors to be exactly 0, but that is not the case. The problem occurs on Ubuntu and Windows, on CPU and GPU, Pytorch 0.4. Seems like a precision issue in the matrix multiplication/addition?</p>\n<pre><code>import torch\n\ninputSize = 70\noutputSize = 50\nbatchSize = 20\n\nlinear = torch.nn.Linear(inputSize, outputSize)\n\ninp = torch.Tensor(range(batchSize*inputSize)).reshape(batchSize, inputSize)\n\nout1 = linear(inp)\n\nlst = []\nfor i in range(batchSize):\n    o = linear(inp[i:i+1])\n    lst.append(o)\nout2 = torch.cat(lst, 0)\n\nprint(\"diff=\", (out1-out2).abs().sum().item())\n\n</code></pre>", "body_text": "I have a problem with LinearLayer (code snippet attached below). I expected to see the difference between the two output tensors to be exactly 0, but that is not the case. The problem occurs on Ubuntu and Windows, on CPU and GPU, Pytorch 0.4. Seems like a precision issue in the matrix multiplication/addition?\nimport torch\n\ninputSize = 70\noutputSize = 50\nbatchSize = 20\n\nlinear = torch.nn.Linear(inputSize, outputSize)\n\ninp = torch.Tensor(range(batchSize*inputSize)).reshape(batchSize, inputSize)\n\nout1 = linear(inp)\n\nlst = []\nfor i in range(batchSize):\n    o = linear(inp[i:i+1])\n    lst.append(o)\nout2 = torch.cat(lst, 0)\n\nprint(\"diff=\", (out1-out2).abs().sum().item())", "body": "I have a problem with LinearLayer (code snippet attached below). I expected to see the difference between the two output tensors to be exactly 0, but that is not the case. The problem occurs on Ubuntu and Windows, on CPU and GPU, Pytorch 0.4. Seems like a precision issue in the matrix multiplication/addition?\r\n```\r\nimport torch\r\n\r\ninputSize = 70\r\noutputSize = 50\r\nbatchSize = 20\r\n\r\nlinear = torch.nn.Linear(inputSize, outputSize)\r\n\r\ninp = torch.Tensor(range(batchSize*inputSize)).reshape(batchSize, inputSize)\r\n\r\nout1 = linear(inp)\r\n\r\nlst = []\r\nfor i in range(batchSize):\r\n    o = linear(inp[i:i+1])\r\n    lst.append(o)\r\nout2 = torch.cat(lst, 0)\r\n\r\nprint(\"diff=\", (out1-out2).abs().sum().item())\r\n\r\n```"}