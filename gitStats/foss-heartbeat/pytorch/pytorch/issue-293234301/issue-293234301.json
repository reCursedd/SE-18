{"url": "https://api.github.com/repos/pytorch/pytorch/issues/4962", "repository_url": "https://api.github.com/repos/pytorch/pytorch", "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/4962/labels{/name}", "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/4962/comments", "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/4962/events", "html_url": "https://github.com/pytorch/pytorch/pull/4962", "id": 293234301, "node_id": "MDExOlB1bGxSZXF1ZXN0MTY2MzE3NTgy", "number": 4962, "title": "Fix triu and tril for zero-strided inputs on gpu", "user": {"login": "albanD", "id": 6359743, "node_id": "MDQ6VXNlcjYzNTk3NDM=", "avatar_url": "https://avatars3.githubusercontent.com/u/6359743?v=4", "gravatar_id": "", "url": "https://api.github.com/users/albanD", "html_url": "https://github.com/albanD", "followers_url": "https://api.github.com/users/albanD/followers", "following_url": "https://api.github.com/users/albanD/following{/other_user}", "gists_url": "https://api.github.com/users/albanD/gists{/gist_id}", "starred_url": "https://api.github.com/users/albanD/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/albanD/subscriptions", "organizations_url": "https://api.github.com/users/albanD/orgs", "repos_url": "https://api.github.com/users/albanD/repos", "events_url": "https://api.github.com/users/albanD/events{/privacy}", "received_events_url": "https://api.github.com/users/albanD/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 825466279, "node_id": "MDU6TGFiZWw4MjU0NjYyNzk=", "url": "https://api.github.com/repos/pytorch/pytorch/labels/0.3.1", "name": "0.3.1", "color": "aefcae", "default": false}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2018-01-31T16:56:17Z", "updated_at": "2018-11-23T15:38:50Z", "closed_at": "2018-01-31T19:38:50Z", "author_association": "COLLABORATOR", "pull_request": {"url": "https://api.github.com/repos/pytorch/pytorch/pulls/4962", "html_url": "https://github.com/pytorch/pytorch/pull/4962", "diff_url": "https://github.com/pytorch/pytorch/pull/4962.diff", "patch_url": "https://github.com/pytorch/pytorch/pull/4962.patch"}, "body_html": "<p><span class=\"issue-keyword tooltipped tooltipped-se\" aria-label=\"This pull request closes issue #4840.\">Fix</span> <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load issue title\" data-id=\"291449864\" data-permission-text=\"Issue title is private\" data-url=\"https://github.com/pytorch/pytorch/issues/4840\" data-hovercard-type=\"issue\" data-hovercard-url=\"/pytorch/pytorch/issues/4840/hovercard\" href=\"https://github.com/pytorch/pytorch/issues/4840\">#4840</a></p>\n<p>This assumes that the output tensor for the operation (if you do inplace operation or if you used the <code>out=</code> flag) does not have a zero-strided dimension.<br>\n<a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=4583066\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/apaszke\">@apaszke</a> iirc this is an assumption that we make all the time right? If so, do we want to explicitly enforce it  at the python api level (one linear check of the stride compared to the python wrapping should be small)? Or do we want to say it explicitly in the documentation somewhere?</p>", "body_text": "Fix #4840\nThis assumes that the output tensor for the operation (if you do inplace operation or if you used the out= flag) does not have a zero-strided dimension.\n@apaszke iirc this is an assumption that we make all the time right? If so, do we want to explicitly enforce it  at the python api level (one linear check of the stride compared to the python wrapping should be small)? Or do we want to say it explicitly in the documentation somewhere?", "body": "Fix #4840 \r\n\r\nThis assumes that the output tensor for the operation (if you do inplace operation or if you used the `out=` flag) does not have a zero-strided dimension.\r\n@apaszke iirc this is an assumption that we make all the time right? If so, do we want to explicitly enforce it  at the python api level (one linear check of the stride compared to the python wrapping should be small)? Or do we want to say it explicitly in the documentation somewhere?"}