{"url": "https://api.github.com/repos/pytorch/pytorch/issues/1425", "repository_url": "https://api.github.com/repos/pytorch/pytorch", "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/1425/labels{/name}", "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/1425/comments", "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/1425/events", "html_url": "https://github.com/pytorch/pytorch/issues/1425", "id": 225539869, "node_id": "MDU6SXNzdWUyMjU1Mzk4Njk=", "number": 1425, "title": "Remove bitwise functions from floating point Tensors", "user": {"login": "soumith", "id": 1310570, "node_id": "MDQ6VXNlcjEzMTA1NzA=", "avatar_url": "https://avatars0.githubusercontent.com/u/1310570?v=4", "gravatar_id": "", "url": "https://api.github.com/users/soumith", "html_url": "https://github.com/soumith", "followers_url": "https://api.github.com/users/soumith/followers", "following_url": "https://api.github.com/users/soumith/following{/other_user}", "gists_url": "https://api.github.com/users/soumith/gists{/gist_id}", "starred_url": "https://api.github.com/users/soumith/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/soumith/subscriptions", "organizations_url": "https://api.github.com/users/soumith/orgs", "repos_url": "https://api.github.com/users/soumith/repos", "events_url": "https://api.github.com/users/soumith/events{/privacy}", "received_events_url": "https://api.github.com/users/soumith/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 586698641, "node_id": "MDU6TGFiZWw1ODY2OTg2NDE=", "url": "https://api.github.com/repos/pytorch/pytorch/labels/5hr", "name": "5hr", "color": "d4c5e9", "default": false}, {"id": 424131847, "node_id": "MDU6TGFiZWw0MjQxMzE4NDc=", "url": "https://api.github.com/repos/pytorch/pytorch/labels/bug", "name": "bug", "color": "b60205", "default": true}, {"id": 443484135, "node_id": "MDU6TGFiZWw0NDM0ODQxMzU=", "url": "https://api.github.com/repos/pytorch/pytorch/labels/high%20priority", "name": "high priority", "color": "F22613", "default": false}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": {"url": "https://api.github.com/repos/pytorch/pytorch/milestones/2", "html_url": "https://github.com/pytorch/pytorch/milestone/2", "labels_url": "https://api.github.com/repos/pytorch/pytorch/milestones/2/labels", "id": 2536200, "node_id": "MDk6TWlsZXN0b25lMjUzNjIwMA==", "number": 2, "title": "v0.2", "description": "", "creator": {"login": "apaszke", "id": 4583066, "node_id": "MDQ6VXNlcjQ1ODMwNjY=", "avatar_url": "https://avatars3.githubusercontent.com/u/4583066?v=4", "gravatar_id": "", "url": "https://api.github.com/users/apaszke", "html_url": "https://github.com/apaszke", "followers_url": "https://api.github.com/users/apaszke/followers", "following_url": "https://api.github.com/users/apaszke/following{/other_user}", "gists_url": "https://api.github.com/users/apaszke/gists{/gist_id}", "starred_url": "https://api.github.com/users/apaszke/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/apaszke/subscriptions", "organizations_url": "https://api.github.com/users/apaszke/orgs", "repos_url": "https://api.github.com/users/apaszke/repos", "events_url": "https://api.github.com/users/apaszke/events{/privacy}", "received_events_url": "https://api.github.com/users/apaszke/received_events", "type": "User", "site_admin": false}, "open_issues": 2, "closed_issues": 34, "state": "closed", "created_at": "2017-05-22T18:19:28Z", "updated_at": "2018-08-06T21:16:06Z", "due_on": "2017-06-04T07:00:00Z", "closed_at": "2018-08-06T21:16:06Z"}, "comments": 2, "created_at": "2017-05-01T22:06:20Z", "updated_at": "2017-06-04T11:32:43Z", "closed_at": "2017-06-04T11:32:43Z", "author_association": "MEMBER", "body_html": "<p>Right now, all the bitwise operators are not really bitwise. They just assume that the ByteTensor contains 0 or 1.</p>\n<p><a href=\"https://github.com/pytorch/pytorch/blob/master/torch/tensor.py#L347-L387\">https://github.com/pytorch/pytorch/blob/master/torch/tensor.py#L347-L387</a></p>\n<p>Fix this by exposing the true bitwise functions already existing in TH/THC:<br>\n<div class=\"border rounded-1 my-2\">\n  <div class=\"f6 px-3 py-2 lh-condensed border-bottom bg-gray-light\">\n    <p class=\"mb-0 text-bold\">\n      <a href=\"https://github.com/pytorch/pytorch/blob/701e63107fb3c177e83850a0389f0d6580d8fe45/torch/lib/TH/generic/THTensorMath.h#L42-L57\">pytorch/torch/lib/TH/generic/THTensorMath.h</a>\n    </p>\n    <p class=\"mb-0 text-gray-light\">\n        Lines 42 to 57\n      in\n      <a data-pjax=\"true\" class=\"commit-tease-sha\" href=\"/pytorch/pytorch/commit/701e63107fb3c177e83850a0389f0d6580d8fe45\">701e631</a>\n    </p>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper blob-wrapper-embedded data\">\n    <table class=\"highlight tab-size mb-0 js-file-line-container\" data-tab-size=\"8\">\n\n        <tbody><tr class=\"border-0\">\n          <td id=\"L42\" class=\"blob-num border-0 px-3 py-0 bg-white js-line-number\" data-line-number=\"42\"></td>\n          <td id=\"LC42\" class=\"blob-code border-0 px-3 py-0 bg-white blob-code-inner js-file-line\"> TH_API <span class=\"pl-k\">void</span> <span class=\"pl-en\">THTensor_</span>(bitand)(THTensor *r_, THTensor *t, real value); </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L43\" class=\"blob-num border-0 px-3 py-0 bg-white js-line-number\" data-line-number=\"43\"></td>\n          <td id=\"LC43\" class=\"blob-code border-0 px-3 py-0 bg-white blob-code-inner js-file-line\"> TH_API <span class=\"pl-k\">void</span> <span class=\"pl-en\">THTensor_</span>(bitor)(THTensor *r_, THTensor *t, real value); </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L44\" class=\"blob-num border-0 px-3 py-0 bg-white js-line-number\" data-line-number=\"44\"></td>\n          <td id=\"LC44\" class=\"blob-code border-0 px-3 py-0 bg-white blob-code-inner js-file-line\"> TH_API <span class=\"pl-k\">void</span> <span class=\"pl-en\">THTensor_</span>(bitxor)(THTensor *r_, THTensor *t, real value); </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L45\" class=\"blob-num border-0 px-3 py-0 bg-white js-line-number\" data-line-number=\"45\"></td>\n          <td id=\"LC45\" class=\"blob-code border-0 px-3 py-0 bg-white blob-code-inner js-file-line\">  </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L46\" class=\"blob-num border-0 px-3 py-0 bg-white js-line-number\" data-line-number=\"46\"></td>\n          <td id=\"LC46\" class=\"blob-code border-0 px-3 py-0 bg-white blob-code-inner js-file-line\"> TH_API <span class=\"pl-k\">void</span> <span class=\"pl-en\">THTensor_</span>(cadd)(THTensor *r_, THTensor *t, real value, THTensor *src); </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L47\" class=\"blob-num border-0 px-3 py-0 bg-white js-line-number\" data-line-number=\"47\"></td>\n          <td id=\"LC47\" class=\"blob-code border-0 px-3 py-0 bg-white blob-code-inner js-file-line\"> TH_API <span class=\"pl-k\">void</span> <span class=\"pl-en\">THTensor_</span>(csub)(THTensor *self, THTensor *src1, real value, THTensor *src2); </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L48\" class=\"blob-num border-0 px-3 py-0 bg-white js-line-number\" data-line-number=\"48\"></td>\n          <td id=\"LC48\" class=\"blob-code border-0 px-3 py-0 bg-white blob-code-inner js-file-line\"> TH_API <span class=\"pl-k\">void</span> <span class=\"pl-en\">THTensor_</span>(cmul)(THTensor *r_, THTensor *t, THTensor *src); </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L49\" class=\"blob-num border-0 px-3 py-0 bg-white js-line-number\" data-line-number=\"49\"></td>\n          <td id=\"LC49\" class=\"blob-code border-0 px-3 py-0 bg-white blob-code-inner js-file-line\"> TH_API <span class=\"pl-k\">void</span> <span class=\"pl-en\">THTensor_</span>(cpow)(THTensor *r_, THTensor *t, THTensor *src); </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L50\" class=\"blob-num border-0 px-3 py-0 bg-white js-line-number\" data-line-number=\"50\"></td>\n          <td id=\"LC50\" class=\"blob-code border-0 px-3 py-0 bg-white blob-code-inner js-file-line\"> TH_API <span class=\"pl-k\">void</span> <span class=\"pl-en\">THTensor_</span>(cdiv)(THTensor *r_, THTensor *t, THTensor *src); </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L51\" class=\"blob-num border-0 px-3 py-0 bg-white js-line-number\" data-line-number=\"51\"></td>\n          <td id=\"LC51\" class=\"blob-code border-0 px-3 py-0 bg-white blob-code-inner js-file-line\"> TH_API <span class=\"pl-k\">void</span> <span class=\"pl-en\">THTensor_</span>(clshift)(THTensor *r_, THTensor *t, THTensor *src); </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L52\" class=\"blob-num border-0 px-3 py-0 bg-white js-line-number\" data-line-number=\"52\"></td>\n          <td id=\"LC52\" class=\"blob-code border-0 px-3 py-0 bg-white blob-code-inner js-file-line\"> TH_API <span class=\"pl-k\">void</span> <span class=\"pl-en\">THTensor_</span>(crshift)(THTensor *r_, THTensor *t, THTensor *src); </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L53\" class=\"blob-num border-0 px-3 py-0 bg-white js-line-number\" data-line-number=\"53\"></td>\n          <td id=\"LC53\" class=\"blob-code border-0 px-3 py-0 bg-white blob-code-inner js-file-line\"> TH_API <span class=\"pl-k\">void</span> <span class=\"pl-en\">THTensor_</span>(cfmod)(THTensor *r_, THTensor *t, THTensor *src); </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L54\" class=\"blob-num border-0 px-3 py-0 bg-white js-line-number\" data-line-number=\"54\"></td>\n          <td id=\"LC54\" class=\"blob-code border-0 px-3 py-0 bg-white blob-code-inner js-file-line\"> TH_API <span class=\"pl-k\">void</span> <span class=\"pl-en\">THTensor_</span>(cremainder)(THTensor *r_, THTensor *t, THTensor *src); </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L55\" class=\"blob-num border-0 px-3 py-0 bg-white js-line-number\" data-line-number=\"55\"></td>\n          <td id=\"LC55\" class=\"blob-code border-0 px-3 py-0 bg-white blob-code-inner js-file-line\"> TH_API <span class=\"pl-k\">void</span> <span class=\"pl-en\">THTensor_</span>(cbitand)(THTensor *r_, THTensor *t, THTensor *src); </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L56\" class=\"blob-num border-0 px-3 py-0 bg-white js-line-number\" data-line-number=\"56\"></td>\n          <td id=\"LC56\" class=\"blob-code border-0 px-3 py-0 bg-white blob-code-inner js-file-line\"> TH_API <span class=\"pl-k\">void</span> <span class=\"pl-en\">THTensor_</span>(cbitor)(THTensor *r_, THTensor *t, THTensor *src); </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L57\" class=\"blob-num border-0 px-3 py-0 bg-white js-line-number\" data-line-number=\"57\"></td>\n          <td id=\"LC57\" class=\"blob-code border-0 px-3 py-0 bg-white blob-code-inner js-file-line\"> TH_API <span class=\"pl-k\">void</span> <span class=\"pl-en\">THTensor_</span>(cbitxor)(THTensor *r_, THTensor *t, THTensor *src); </td>\n        </tr>\n    </tbody></table>\n  </div>\n</div>\n<br>\n<div class=\"border rounded-1 my-2\">\n  <div class=\"f6 px-3 py-2 lh-condensed border-bottom bg-gray-light\">\n    <p class=\"mb-0 text-bold\">\n      <a href=\"https://github.com/pytorch/pytorch/blob/b46d5e0b04e21f5bf9f3b24b43a7b3866be5ad90/torch/lib/THC/generic/THCTensorMathPairwise.h#L13-L15\">pytorch/torch/lib/THC/generic/THCTensorMathPairwise.h</a>\n    </p>\n    <p class=\"mb-0 text-gray-light\">\n        Lines 13 to 15\n      in\n      <a data-pjax=\"true\" class=\"commit-tease-sha\" href=\"/pytorch/pytorch/commit/b46d5e0b04e21f5bf9f3b24b43a7b3866be5ad90\">b46d5e0</a>\n    </p>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper blob-wrapper-embedded data\">\n    <table class=\"highlight tab-size mb-0 js-file-line-container\" data-tab-size=\"8\">\n\n        <tbody><tr class=\"border-0\">\n          <td id=\"L13\" class=\"blob-num border-0 px-3 py-0 bg-white js-line-number\" data-line-number=\"13\"></td>\n          <td id=\"LC13\" class=\"blob-code border-0 px-3 py-0 bg-white blob-code-inner js-file-line\"> THC_API <span class=\"pl-k\">void</span> <span class=\"pl-en\">THCTensor_</span>(bitand)(THCState *state, THCTensor *self, THCTensor *src, real value); </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L14\" class=\"blob-num border-0 px-3 py-0 bg-white js-line-number\" data-line-number=\"14\"></td>\n          <td id=\"LC14\" class=\"blob-code border-0 px-3 py-0 bg-white blob-code-inner js-file-line\"> THC_API <span class=\"pl-k\">void</span> <span class=\"pl-en\">THCTensor_</span>(bitor)(THCState *state, THCTensor *self, THCTensor *src, real value); </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L15\" class=\"blob-num border-0 px-3 py-0 bg-white js-line-number\" data-line-number=\"15\"></td>\n          <td id=\"LC15\" class=\"blob-code border-0 px-3 py-0 bg-white blob-code-inner js-file-line\"> THC_API <span class=\"pl-k\">void</span> <span class=\"pl-en\">THCTensor_</span>(bitxor)(THCState *state, THCTensor *self, THCTensor *src, real value); </td>\n        </tr>\n    </tbody></table>\n  </div>\n</div>\n</p>", "body_text": "Right now, all the bitwise operators are not really bitwise. They just assume that the ByteTensor contains 0 or 1.\nhttps://github.com/pytorch/pytorch/blob/master/torch/tensor.py#L347-L387\nFix this by exposing the true bitwise functions already existing in TH/THC:\n\n  \n    \n      pytorch/torch/lib/TH/generic/THTensorMath.h\n    \n    \n        Lines 42 to 57\n      in\n      701e631\n    \n    \n    \n    \n\n        \n          \n           TH_API void THTensor_(bitand)(THTensor *r_, THTensor *t, real value); \n        \n\n        \n          \n           TH_API void THTensor_(bitor)(THTensor *r_, THTensor *t, real value); \n        \n\n        \n          \n           TH_API void THTensor_(bitxor)(THTensor *r_, THTensor *t, real value); \n        \n\n        \n          \n            \n        \n\n        \n          \n           TH_API void THTensor_(cadd)(THTensor *r_, THTensor *t, real value, THTensor *src); \n        \n\n        \n          \n           TH_API void THTensor_(csub)(THTensor *self, THTensor *src1, real value, THTensor *src2); \n        \n\n        \n          \n           TH_API void THTensor_(cmul)(THTensor *r_, THTensor *t, THTensor *src); \n        \n\n        \n          \n           TH_API void THTensor_(cpow)(THTensor *r_, THTensor *t, THTensor *src); \n        \n\n        \n          \n           TH_API void THTensor_(cdiv)(THTensor *r_, THTensor *t, THTensor *src); \n        \n\n        \n          \n           TH_API void THTensor_(clshift)(THTensor *r_, THTensor *t, THTensor *src); \n        \n\n        \n          \n           TH_API void THTensor_(crshift)(THTensor *r_, THTensor *t, THTensor *src); \n        \n\n        \n          \n           TH_API void THTensor_(cfmod)(THTensor *r_, THTensor *t, THTensor *src); \n        \n\n        \n          \n           TH_API void THTensor_(cremainder)(THTensor *r_, THTensor *t, THTensor *src); \n        \n\n        \n          \n           TH_API void THTensor_(cbitand)(THTensor *r_, THTensor *t, THTensor *src); \n        \n\n        \n          \n           TH_API void THTensor_(cbitor)(THTensor *r_, THTensor *t, THTensor *src); \n        \n\n        \n          \n           TH_API void THTensor_(cbitxor)(THTensor *r_, THTensor *t, THTensor *src); \n        \n    \n  \n\n\n\n  \n    \n      pytorch/torch/lib/THC/generic/THCTensorMathPairwise.h\n    \n    \n        Lines 13 to 15\n      in\n      b46d5e0\n    \n    \n    \n    \n\n        \n          \n           THC_API void THCTensor_(bitand)(THCState *state, THCTensor *self, THCTensor *src, real value); \n        \n\n        \n          \n           THC_API void THCTensor_(bitor)(THCState *state, THCTensor *self, THCTensor *src, real value); \n        \n\n        \n          \n           THC_API void THCTensor_(bitxor)(THCState *state, THCTensor *self, THCTensor *src, real value);", "body": "Right now, all the bitwise operators are not really bitwise. They just assume that the ByteTensor contains 0 or 1.\r\n\r\nhttps://github.com/pytorch/pytorch/blob/master/torch/tensor.py#L347-L387\r\n\r\nFix this by exposing the true bitwise functions already existing in TH/THC:\r\nhttps://github.com/pytorch/pytorch/blob/701e63107fb3c177e83850a0389f0d6580d8fe45/torch/lib/TH/generic/THTensorMath.h#L42-L57\r\nhttps://github.com/pytorch/pytorch/blob/b46d5e0b04e21f5bf9f3b24b43a7b3866be5ad90/torch/lib/THC/generic/THCTensorMathPairwise.h#L13-L15"}