{"url": "https://api.github.com/repos/pytorch/pytorch/issues/13004", "repository_url": "https://api.github.com/repos/pytorch/pytorch", "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/13004/labels{/name}", "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/13004/comments", "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/13004/events", "html_url": "https://github.com/pytorch/pytorch/pull/13004", "id": 373186926, "node_id": "MDExOlB1bGxSZXF1ZXN0MjI1MTc2MDMz", "number": 13004, "title": "Implement bucket-based attention pooling for IdScoreList features", "user": {"login": "ffjiang", "id": 5994647, "node_id": "MDQ6VXNlcjU5OTQ2NDc=", "avatar_url": "https://avatars2.githubusercontent.com/u/5994647?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ffjiang", "html_url": "https://github.com/ffjiang", "followers_url": "https://api.github.com/users/ffjiang/followers", "following_url": "https://api.github.com/users/ffjiang/following{/other_user}", "gists_url": "https://api.github.com/users/ffjiang/gists{/gist_id}", "starred_url": "https://api.github.com/users/ffjiang/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ffjiang/subscriptions", "organizations_url": "https://api.github.com/users/ffjiang/orgs", "repos_url": "https://api.github.com/users/ffjiang/repos", "events_url": "https://api.github.com/users/ffjiang/events{/privacy}", "received_events_url": "https://api.github.com/users/ffjiang/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2018-10-23T20:28:04Z", "updated_at": "2018-10-26T01:05:22Z", "closed_at": "2018-10-26T01:05:22Z", "author_association": "CONTRIBUTOR", "pull_request": {"url": "https://api.github.com/repos/pytorch/pytorch/pulls/13004", "html_url": "https://github.com/pytorch/pytorch/pull/13004", "diff_url": "https://github.com/pytorch/pytorch/pull/13004.diff", "patch_url": "https://github.com/pytorch/pytorch/pull/13004.patch"}, "body_html": "<p>Summary:<br>\nImplement BucketWeighted model layer, which learns a weight for each possible score in an IdScoreList. Here, we assume that the scores in the IdScoreList have already been converted into the appropriate 'buckets'. If this is not done, then essentially each score represents its own bucket.</p>\n<p>We assume that the scores/buckets are integers, and if max_score is not set, we assume that the maximum cardinality of the score is less than or equal to the cardinality of the ids.</p>\n<p>Differential Revision: D10413186</p>", "body_text": "Summary:\nImplement BucketWeighted model layer, which learns a weight for each possible score in an IdScoreList. Here, we assume that the scores in the IdScoreList have already been converted into the appropriate 'buckets'. If this is not done, then essentially each score represents its own bucket.\nWe assume that the scores/buckets are integers, and if max_score is not set, we assume that the maximum cardinality of the score is less than or equal to the cardinality of the ids.\nDifferential Revision: D10413186", "body": "Summary:\nImplement BucketWeighted model layer, which learns a weight for each possible score in an IdScoreList. Here, we assume that the scores in the IdScoreList have already been converted into the appropriate 'buckets'. If this is not done, then essentially each score represents its own bucket.\n\nWe assume that the scores/buckets are integers, and if max_score is not set, we assume that the maximum cardinality of the score is less than or equal to the cardinality of the ids.\n\nDifferential Revision: D10413186\n"}