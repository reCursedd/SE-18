{"url": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/122545020", "pull_request_review_id": 44676490, "id": 122545020, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEyMjU0NTAyMA==", "diff_hunk": "@@ -1320,25 +1348,46 @@ class dont_convert(tuple):\n     (Atan, (), ((S, S, S),)),\n     (Reciprocal, (), (torch.rand(S, S, S) + 0.1,)),\n     (Cmax, (), ((S, S, S), (S, S, S))),\n+    (Cmax, (), ((S, S, S), (S,)), 'broadcast_rhs'),\n+    (Cmax, (), ((S,), (S, S, S)), 'broadcast_lhs'),\n+    (Cmax, (), ((S, 1, S), (S, S)), 'broadcast_all'),\n     (Cmin, (), ((S, S, S), (S, S, S))),\n+    (Cmin, (), ((S, S, S), (S,)), 'broadcast_rhs'),\n+    (Cmin, (), ((S,), (S, S, S)), 'broadcast_lhs'),\n+    (Cmin, (), ((S, 1, S), (S, S)), 'broadcast_all'),\n     (Round, (), ((S, S, S),)),\n     (Sign, (), ((S, S, S),)),\n     (Trunc, (), ((S, S, S),)),\n     (Floor, (), ((S, S, S),)),\n     (Ceil, (), ((S, S, S),)),\n     (Frac, (), ((S, S, S),)),\n     (Fmod, (), ((S, S, S), 1.5)),\n+    (Fmod, (), ((S, S, S), Variable(torch.randn(S, S, S) + 2.5, requires_grad=False)), 'tensor'),\n+    (Fmod, (), ((S, S, S), Variable(torch.randn(S) + 2.5, requires_grad=False)), 'tensor_broadcast_rhs'),\n+    (Fmod, (), ((S,), Variable(torch.randn(S, S, S) + 2.5, requires_grad=False)), 'tensor_broadcast_lhs'),\n+    (Fmod, (), ((S, 1, S), Variable(torch.randn(S, S) + 2.5, requires_grad=False)), 'tensor_broadcast_all'),\n     (Lerp, (), ((S, S, S), (S, S, S), 0.2)),\n+    (Lerp, (), ((S, S, S), (S,), 0.2), 'broadcast_rhs'),\n+    (Lerp, (), ((S,), (S, S, S), 0.2), 'broadcast_lhs'),\n+    (Lerp, (), ((S, 1, S), (S, S), 0.2), 'broadcast_all'),\n     (Rsqrt, (), (torch.rand(S, S, S) + 1e-2,)),\n     (Remainder, (), ((S, S, S), 1.5)),\n+    (Remainder, (), ((S, S, S), Variable(torch.randn(S, S, S) + 2.5, requires_grad=False)), 'tensor'),\n+    (Remainder, (), ((S, S, S), Variable(torch.randn(S) + 2.5, requires_grad=False)), 'tensor_broadcast_rhs'),\n+    (Remainder, (), ((S,), Variable(torch.randn(S, S, S) + 2.5, requires_grad=False)), 'tensor_broadcast_lhs'),\n+    (Remainder, (), ((S, 1, S), Variable(torch.randn(S, S) + 2.5, requires_grad=False)), 'tensor_broadcast_all'),", "path": "test/test_autograd.py", "position": null, "original_position": 95, "commit_id": "71104fbd2447094929f9865e1622ad11ff17bdfa", "original_commit_id": "a4acf23605e83dd14d89e0b5615c58c80d62dcf4", "user": {"login": "apaszke", "id": 4583066, "node_id": "MDQ6VXNlcjQ1ODMwNjY=", "avatar_url": "https://avatars3.githubusercontent.com/u/4583066?v=4", "gravatar_id": "", "url": "https://api.github.com/users/apaszke", "html_url": "https://github.com/apaszke", "followers_url": "https://api.github.com/users/apaszke/followers", "following_url": "https://api.github.com/users/apaszke/following{/other_user}", "gists_url": "https://api.github.com/users/apaszke/gists{/gist_id}", "starred_url": "https://api.github.com/users/apaszke/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/apaszke/subscriptions", "organizations_url": "https://api.github.com/users/apaszke/orgs", "repos_url": "https://api.github.com/users/apaszke/repos", "events_url": "https://api.github.com/users/apaszke/events{/privacy}", "received_events_url": "https://api.github.com/users/apaszke/received_events", "type": "User", "site_admin": false}, "body": "It's better to use `rand` plus an eps to avoid division by zero. You can still easily get -2.5 from `randn`", "created_at": "2017-06-16T22:27:21Z", "updated_at": "2018-11-23T15:33:55Z", "html_url": "https://github.com/pytorch/pytorch/pull/1826#discussion_r122545020", "pull_request_url": "https://api.github.com/repos/pytorch/pytorch/pulls/1826", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/122545020"}, "html": {"href": "https://github.com/pytorch/pytorch/pull/1826#discussion_r122545020"}, "pull_request": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/1826"}}, "body_html": "<p>It's better to use <code>rand</code> plus an eps to avoid division by zero. You can still easily get -2.5 from <code>randn</code></p>", "body_text": "It's better to use rand plus an eps to avoid division by zero. You can still easily get -2.5 from randn"}