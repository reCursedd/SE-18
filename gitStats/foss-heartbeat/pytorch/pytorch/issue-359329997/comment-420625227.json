{"url": "https://api.github.com/repos/pytorch/pytorch/issues/comments/420625227", "html_url": "https://github.com/pytorch/pytorch/pull/11568#issuecomment-420625227", "issue_url": "https://api.github.com/repos/pytorch/pytorch/issues/11568", "id": 420625227, "node_id": "MDEyOklzc3VlQ29tbWVudDQyMDYyNTIyNw==", "user": {"login": "vadimkantorov", "id": 1041752, "node_id": "MDQ6VXNlcjEwNDE3NTI=", "avatar_url": "https://avatars0.githubusercontent.com/u/1041752?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vadimkantorov", "html_url": "https://github.com/vadimkantorov", "followers_url": "https://api.github.com/users/vadimkantorov/followers", "following_url": "https://api.github.com/users/vadimkantorov/following{/other_user}", "gists_url": "https://api.github.com/users/vadimkantorov/gists{/gist_id}", "starred_url": "https://api.github.com/users/vadimkantorov/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vadimkantorov/subscriptions", "organizations_url": "https://api.github.com/users/vadimkantorov/orgs", "repos_url": "https://api.github.com/users/vadimkantorov/repos", "events_url": "https://api.github.com/users/vadimkantorov/events{/privacy}", "received_events_url": "https://api.github.com/users/vadimkantorov/received_events", "type": "User", "site_admin": false}, "created_at": "2018-09-12T12:11:23Z", "updated_at": "2018-09-12T12:12:02Z", "author_association": "NONE", "body_html": "<p><a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=5674597\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/SsnL\">@SsnL</a> A crazy idea: how about a generic <code>nn.Wrap(F.interpolate, scale_factor = 2)</code> - can make sense for stateless functions, will unblock people on absence of some modules, and even crazier <code>nn.Sequential().add(F.interpolate, **kwargs)</code> can exist.</p>", "body_text": "@SsnL A crazy idea: how about a generic nn.Wrap(F.interpolate, scale_factor = 2) - can make sense for stateless functions, will unblock people on absence of some modules, and even crazier nn.Sequential().add(F.interpolate, **kwargs) can exist.", "body": "@SsnL A crazy idea: how about a generic `nn.Wrap(F.interpolate, scale_factor = 2)` - can make sense for stateless functions, will unblock people on absence of some modules, and even crazier `nn.Sequential().add(F.interpolate, **kwargs)` can exist."}