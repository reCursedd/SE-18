{"url": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/127297325", "pull_request_review_id": 49868382, "id": 127297325, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEyNzI5NzMyNQ==", "diff_hunk": "@@ -102,3 +102,42 @@ def backward(ctx, grad_output, grad_LU=None):\n         grad_b, _ = torch.gesv(grad_output, a.t())\n         grad_a = -torch.mm(grad_b, X.t())\n         return grad_b, grad_a\n+\n+class Symeig(Function):\n+\n+    @staticmethod\n+    def forward(ctx, input, eigenvectors=False, upper=True):\n+        ctx.eigenvectors = eigenvectors", "path": "torch/autograd/_functions/linalg.py", "position": 10, "original_position": 9, "commit_id": "8f44e075bef0d627c0991c784b0763e5ddd78980", "original_commit_id": "41962c86c331674e0059974fb6d0ea97a266eff3", "user": {"login": "ncullen93", "id": 13004360, "node_id": "MDQ6VXNlcjEzMDA0MzYw", "avatar_url": "https://avatars0.githubusercontent.com/u/13004360?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ncullen93", "html_url": "https://github.com/ncullen93", "followers_url": "https://api.github.com/users/ncullen93/followers", "following_url": "https://api.github.com/users/ncullen93/following{/other_user}", "gists_url": "https://api.github.com/users/ncullen93/gists{/gist_id}", "starred_url": "https://api.github.com/users/ncullen93/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ncullen93/subscriptions", "organizations_url": "https://api.github.com/users/ncullen93/orgs", "repos_url": "https://api.github.com/users/ncullen93/repos", "events_url": "https://api.github.com/users/ncullen93/events{/privacy}", "received_events_url": "https://api.github.com/users/ncullen93/received_events", "type": "User", "site_admin": false}, "body": "no, i dont use it elsewhere atm - it's there for your second point on what to do if `eigenvectors=False`. Seems like you shouldn't be able to calculate the backward if so. Should I raise an exception in `backward` if it's called with `eigenvectors=False` ?", "created_at": "2017-07-13T18:37:38Z", "updated_at": "2018-11-23T15:34:05Z", "html_url": "https://github.com/pytorch/pytorch/pull/2026#discussion_r127297325", "pull_request_url": "https://api.github.com/repos/pytorch/pytorch/pulls/2026", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/127297325"}, "html": {"href": "https://github.com/pytorch/pytorch/pull/2026#discussion_r127297325"}, "pull_request": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/2026"}}, "body_html": "<p>no, i dont use it elsewhere atm - it's there for your second point on what to do if <code>eigenvectors=False</code>. Seems like you shouldn't be able to calculate the backward if so. Should I raise an exception in <code>backward</code> if it's called with <code>eigenvectors=False</code> ?</p>", "body_text": "no, i dont use it elsewhere atm - it's there for your second point on what to do if eigenvectors=False. Seems like you shouldn't be able to calculate the backward if so. Should I raise an exception in backward if it's called with eigenvectors=False ?", "in_reply_to_id": 126568189}