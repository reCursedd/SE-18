{"url": "https://api.github.com/repos/pytorch/pytorch/issues/comments/428418651", "html_url": "https://github.com/pytorch/pytorch/pull/12413#issuecomment-428418651", "issue_url": "https://api.github.com/repos/pytorch/pytorch/issues/12413", "id": 428418651, "node_id": "MDEyOklzc3VlQ29tbWVudDQyODQxODY1MQ==", "user": {"login": "zasdfgbnm", "id": 1032377, "node_id": "MDQ6VXNlcjEwMzIzNzc=", "avatar_url": "https://avatars2.githubusercontent.com/u/1032377?v=4", "gravatar_id": "", "url": "https://api.github.com/users/zasdfgbnm", "html_url": "https://github.com/zasdfgbnm", "followers_url": "https://api.github.com/users/zasdfgbnm/followers", "following_url": "https://api.github.com/users/zasdfgbnm/following{/other_user}", "gists_url": "https://api.github.com/users/zasdfgbnm/gists{/gist_id}", "starred_url": "https://api.github.com/users/zasdfgbnm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/zasdfgbnm/subscriptions", "organizations_url": "https://api.github.com/users/zasdfgbnm/orgs", "repos_url": "https://api.github.com/users/zasdfgbnm/repos", "events_url": "https://api.github.com/users/zasdfgbnm/events{/privacy}", "received_events_url": "https://api.github.com/users/zasdfgbnm/received_events", "type": "User", "site_admin": false}, "created_at": "2018-10-10T02:41:12Z", "updated_at": "2018-10-10T02:41:12Z", "author_association": "CONTRIBUTOR", "body_html": "<p><a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=13564\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/ezyang\">@ezyang</a> Do you mean the autograd test for <code>masked_fill</code> and <code>masked_scatter</code>? Because the previous of outplace version of these operators was just clone and call the inplace version, which does not support broadcasting on <code>self</code>. I now add broadcast to <code>self</code>, the implementation is less trivial than a single clone, so I am just trying to test both the inplace and outpulace version separately to make sure the change does not break anything.</p>", "body_text": "@ezyang Do you mean the autograd test for masked_fill and masked_scatter? Because the previous of outplace version of these operators was just clone and call the inplace version, which does not support broadcasting on self. I now add broadcast to self, the implementation is less trivial than a single clone, so I am just trying to test both the inplace and outpulace version separately to make sure the change does not break anything.", "body": "@ezyang Do you mean the autograd test for `masked_fill` and `masked_scatter`? Because the previous of outplace version of these operators was just clone and call the inplace version, which does not support broadcasting on `self`. I now add broadcast to `self`, the implementation is less trivial than a single clone, so I am just trying to test both the inplace and outpulace version separately to make sure the change does not break anything."}