{"url": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/224071173", "pull_request_review_id": 163349027, "id": 224071173, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIyNDA3MTE3Mw==", "diff_hunk": "@@ -3274,21 +3274,34 @@ class dont_convert(tuple):\n     ('masked_select', (), (torch.tensor(1, dtype=torch.uint8),), 'scalar'),\n     ('masked_select', (M, M), (torch.tensor(1, dtype=torch.uint8),), 'scalar_broadcast_rhs'),\n     ('masked_select', (), (mask_not_all_zeros((M, M)),), 'scalar_broadcast_lhs'),\n+    ('masked_fill_', (M, M), (torch.ByteTensor(M, M).bernoulli_(), 10)),\n     ('masked_fill', (M, M), (torch.ByteTensor(M, M).bernoulli_(), 10)),\n+    ('masked_fill_', (M, M), (torch.ByteTensor(M, M).bernoulli_(), torch.tensor(10)), 'tensor'),\n     ('masked_fill', (M, M), (torch.ByteTensor(M, M).bernoulli_(), torch.tensor(10)), 'tensor'),\n-    # no lhs or all broadcast on masked_fill or masked_scatter because it's always inplace\n+    # The outplace version broadcast to lhs, the inplace version only broadcast to rhs\n+    ('masked_fill', (M,), (torch.ByteTensor(M, M).bernoulli_(), 10), 'broadcast_lhs'),\n+    ('masked_fill_', (M, M), (torch.ByteTensor(M,).bernoulli_(), 10), 'broadcast_rhs'),", "path": "test/test_autograd.py", "position": null, "original_position": 11, "commit_id": "e93aba5f1f4f8c8bb389fb69eba7508b306e5676", "original_commit_id": "a193822f829eaa8831628735a9e6e0df2a51d8f9", "user": {"login": "apaszke", "id": 4583066, "node_id": "MDQ6VXNlcjQ1ODMwNjY=", "avatar_url": "https://avatars3.githubusercontent.com/u/4583066?v=4", "gravatar_id": "", "url": "https://api.github.com/users/apaszke", "html_url": "https://github.com/apaszke", "followers_url": "https://api.github.com/users/apaszke/followers", "following_url": "https://api.github.com/users/apaszke/following{/other_user}", "gists_url": "https://api.github.com/users/apaszke/gists{/gist_id}", "starred_url": "https://api.github.com/users/apaszke/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/apaszke/subscriptions", "organizations_url": "https://api.github.com/users/apaszke/orgs", "repos_url": "https://api.github.com/users/apaszke/repos", "events_url": "https://api.github.com/users/apaszke/events{/privacy}", "received_events_url": "https://api.github.com/users/apaszke/received_events", "type": "User", "site_admin": false}, "body": "Isn't this already tested in the case immediately below?", "created_at": "2018-10-10T13:19:06Z", "updated_at": "2018-11-23T15:52:48Z", "html_url": "https://github.com/pytorch/pytorch/pull/12413#discussion_r224071173", "pull_request_url": "https://api.github.com/repos/pytorch/pytorch/pulls/12413", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/224071173"}, "html": {"href": "https://github.com/pytorch/pytorch/pull/12413#discussion_r224071173"}, "pull_request": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/12413"}}, "body_html": "<p>Isn't this already tested in the case immediately below?</p>", "body_text": "Isn't this already tested in the case immediately below?"}