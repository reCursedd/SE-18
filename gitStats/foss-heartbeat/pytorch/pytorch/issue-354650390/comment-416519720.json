{"url": "https://api.github.com/repos/pytorch/pytorch/issues/comments/416519720", "html_url": "https://github.com/pytorch/pytorch/issues/10939#issuecomment-416519720", "issue_url": "https://api.github.com/repos/pytorch/pytorch/issues/10939", "id": 416519720, "node_id": "MDEyOklzc3VlQ29tbWVudDQxNjUxOTcyMA==", "user": {"login": "sanayam", "id": 42597743, "node_id": "MDQ6VXNlcjQyNTk3NzQz", "avatar_url": "https://avatars0.githubusercontent.com/u/42597743?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sanayam", "html_url": "https://github.com/sanayam", "followers_url": "https://api.github.com/users/sanayam/followers", "following_url": "https://api.github.com/users/sanayam/following{/other_user}", "gists_url": "https://api.github.com/users/sanayam/gists{/gist_id}", "starred_url": "https://api.github.com/users/sanayam/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sanayam/subscriptions", "organizations_url": "https://api.github.com/users/sanayam/orgs", "repos_url": "https://api.github.com/users/sanayam/repos", "events_url": "https://api.github.com/users/sanayam/events{/privacy}", "received_events_url": "https://api.github.com/users/sanayam/received_events", "type": "User", "site_admin": false}, "created_at": "2018-08-28T09:43:48Z", "updated_at": "2018-08-28T09:43:48Z", "author_association": "NONE", "body_html": "<p>I am trying to run the Deep Image Prior's \"Super-Resolution\" and I am getting this error. Can anyone tell me where I am going wrong? The versions I am using are Cuda-9.2, Pytorch=0.4, 12GB GPU. The following is the error I am getting.<br>\nStarting optimization with ADAM</p>\n<hr>\n<p>RuntimeError                              Traceback (most recent call last)<br>\n in ()<br>\n5 i = 0<br>\n6 p = get_params(OPT_OVER, net, net_input)<br>\n----&gt; 7 optimize(OPTIMIZER, p, closure, LR, num_iter)</p>\n<p>~/deep-image-prior/utils/common_utils.py in optimize(optimizer_type, parameters, closure, LR, num_iter)<br>\n227         for j in range(num_iter):<br>\n228             optimizer.zero_grad()<br>\n--&gt; 229             closure()<br>\n230             optimizer.step()<br>\n231     else:</p>\n<p> in closure()<br>\n6<br>\n7<br>\n----&gt; 8     out_HR = net(net_input)<br>\n9     out_LR = downsampler(out_HR)<br>\n10</p>\n<p>~/anaconda3/lib/python3.6/site-packages/torch/nn/modules/module.py in <strong>call</strong>(self, *input, **kwargs)<br>\n475             result = self._slow_forward(*input, **kwargs)<br>\n476         else:<br>\n--&gt; 477             result = self.forward(*input, **kwargs)<br>\n478         for hook in self._forward_hooks.values():<br>\n479             hook_result = hook(self, input, result)</p>\n<p>~/anaconda3/lib/python3.6/site-packages/torch/nn/modules/container.py in forward(self, input)<br>\n89     def forward(self, input):<br>\n90         for module in self._modules.values():<br>\n---&gt; 91             input = module(input)<br>\n92         return input<br>\n93</p>\n<p>~/anaconda3/lib/python3.6/site-packages/torch/nn/modules/module.py in <strong>call</strong>(self, *input, **kwargs)<br>\n475             result = self._slow_forward(*input, **kwargs)<br>\n476         else:<br>\n--&gt; 477             result = self.forward(*input, **kwargs)<br>\n478         for hook in self._forward_hooks.values():<br>\n479             hook_result = hook(self, input, result)</p>\n<p>~/anaconda3/lib/python3.6/site-packages/torch/nn/modules/batchnorm.py in forward(self, input)<br>\n64             input, self.running_mean, self.running_var, self.weight, self.bias,<br>\n65             self.training or not self.track_running_stats,<br>\n---&gt; 66             exponential_average_factor, self.eps)<br>\n67<br>\n68     def extra_repr(self):</p>\n<p>~/anaconda3/lib/python3.6/site-packages/torch/nn/functional.py in batch_norm(input, running_mean, running_var, weight, bias, training, momentum, eps)<br>\n1252     return torch.batch_norm(<br>\n1253         input, weight, bias, running_mean, running_var,<br>\n-&gt; 1254         training, momentum, eps, torch.backends.cudnn.enabled<br>\n1255     )<br>\n1256</p>\n<p>RuntimeError: CUDA error: out of memory</p>", "body_text": "I am trying to run the Deep Image Prior's \"Super-Resolution\" and I am getting this error. Can anyone tell me where I am going wrong? The versions I am using are Cuda-9.2, Pytorch=0.4, 12GB GPU. The following is the error I am getting.\nStarting optimization with ADAM\n\nRuntimeError                              Traceback (most recent call last)\n in ()\n5 i = 0\n6 p = get_params(OPT_OVER, net, net_input)\n----> 7 optimize(OPTIMIZER, p, closure, LR, num_iter)\n~/deep-image-prior/utils/common_utils.py in optimize(optimizer_type, parameters, closure, LR, num_iter)\n227         for j in range(num_iter):\n228             optimizer.zero_grad()\n--> 229             closure()\n230             optimizer.step()\n231     else:\n in closure()\n6\n7\n----> 8     out_HR = net(net_input)\n9     out_LR = downsampler(out_HR)\n10\n~/anaconda3/lib/python3.6/site-packages/torch/nn/modules/module.py in call(self, *input, **kwargs)\n475             result = self._slow_forward(*input, **kwargs)\n476         else:\n--> 477             result = self.forward(*input, **kwargs)\n478         for hook in self._forward_hooks.values():\n479             hook_result = hook(self, input, result)\n~/anaconda3/lib/python3.6/site-packages/torch/nn/modules/container.py in forward(self, input)\n89     def forward(self, input):\n90         for module in self._modules.values():\n---> 91             input = module(input)\n92         return input\n93\n~/anaconda3/lib/python3.6/site-packages/torch/nn/modules/module.py in call(self, *input, **kwargs)\n475             result = self._slow_forward(*input, **kwargs)\n476         else:\n--> 477             result = self.forward(*input, **kwargs)\n478         for hook in self._forward_hooks.values():\n479             hook_result = hook(self, input, result)\n~/anaconda3/lib/python3.6/site-packages/torch/nn/modules/batchnorm.py in forward(self, input)\n64             input, self.running_mean, self.running_var, self.weight, self.bias,\n65             self.training or not self.track_running_stats,\n---> 66             exponential_average_factor, self.eps)\n67\n68     def extra_repr(self):\n~/anaconda3/lib/python3.6/site-packages/torch/nn/functional.py in batch_norm(input, running_mean, running_var, weight, bias, training, momentum, eps)\n1252     return torch.batch_norm(\n1253         input, weight, bias, running_mean, running_var,\n-> 1254         training, momentum, eps, torch.backends.cudnn.enabled\n1255     )\n1256\nRuntimeError: CUDA error: out of memory", "body": "I am trying to run the Deep Image Prior's \"Super-Resolution\" and I am getting this error. Can anyone tell me where I am going wrong? The versions I am using are Cuda-9.2, Pytorch=0.4, 12GB GPU. The following is the error I am getting.\r\nStarting optimization with ADAM\r\n\r\n---------------------------------------------------------------------------\r\nRuntimeError                              Traceback (most recent call last)\r\n<ipython-input-6-22f74d730ee2> in <module>()\r\n      5 i = 0\r\n      6 p = get_params(OPT_OVER, net, net_input)\r\n----> 7 optimize(OPTIMIZER, p, closure, LR, num_iter)\r\n\r\n~/deep-image-prior/utils/common_utils.py in optimize(optimizer_type, parameters, closure, LR, num_iter)\r\n    227         for j in range(num_iter):\r\n    228             optimizer.zero_grad()\r\n--> 229             closure()\r\n    230             optimizer.step()\r\n    231     else:\r\n\r\n<ipython-input-5-b089d5e0241c> in closure()\r\n      6 \r\n      7 \r\n----> 8     out_HR = net(net_input)\r\n      9     out_LR = downsampler(out_HR)\r\n     10 \r\n\r\n~/anaconda3/lib/python3.6/site-packages/torch/nn/modules/module.py in __call__(self, *input, **kwargs)\r\n    475             result = self._slow_forward(*input, **kwargs)\r\n    476         else:\r\n--> 477             result = self.forward(*input, **kwargs)\r\n    478         for hook in self._forward_hooks.values():\r\n    479             hook_result = hook(self, input, result)\r\n\r\n~/anaconda3/lib/python3.6/site-packages/torch/nn/modules/container.py in forward(self, input)\r\n     89     def forward(self, input):\r\n     90         for module in self._modules.values():\r\n---> 91             input = module(input)\r\n     92         return input\r\n     93 \r\n\r\n~/anaconda3/lib/python3.6/site-packages/torch/nn/modules/module.py in __call__(self, *input, **kwargs)\r\n    475             result = self._slow_forward(*input, **kwargs)\r\n    476         else:\r\n--> 477             result = self.forward(*input, **kwargs)\r\n    478         for hook in self._forward_hooks.values():\r\n    479             hook_result = hook(self, input, result)\r\n\r\n~/anaconda3/lib/python3.6/site-packages/torch/nn/modules/batchnorm.py in forward(self, input)\r\n     64             input, self.running_mean, self.running_var, self.weight, self.bias,\r\n     65             self.training or not self.track_running_stats,\r\n---> 66             exponential_average_factor, self.eps)\r\n     67 \r\n     68     def extra_repr(self):\r\n\r\n~/anaconda3/lib/python3.6/site-packages/torch/nn/functional.py in batch_norm(input, running_mean, running_var, weight, bias, training, momentum, eps)\r\n   1252     return torch.batch_norm(\r\n   1253         input, weight, bias, running_mean, running_var,\r\n-> 1254         training, momentum, eps, torch.backends.cudnn.enabled\r\n   1255     )\r\n   1256 \r\n\r\nRuntimeError: CUDA error: out of memory\r\n\r\n"}