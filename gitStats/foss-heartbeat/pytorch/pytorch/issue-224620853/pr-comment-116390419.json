{"url": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/116390419", "pull_request_review_id": 38008257, "id": 116390419, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDExNjM5MDQxOQ==", "diff_hunk": "@@ -0,0 +1,279 @@\n+from bisect import bisect_right\n+from .optimizer import Optimizer\n+\n+\n+class _LRScheduler(object):\n+    def __init__(self, optimizer, last_epoch=-1):\n+        if not isinstance(optimizer, Optimizer):\n+            raise TypeError('{} is not an Optimizer'.format(\n+                type(optimizer).__name__))\n+        self.optimizer = optimizer\n+        if last_epoch == -1:\n+            for group in optimizer.param_groups:\n+                group.setdefault('initial_lr', group['lr'])\n+        else:\n+            for i, group in enumerate(optimizer.param_groups):\n+                if 'initial_lr' not in group:\n+                    raise KeyError(\"param 'initial_lr' is not specified \"\n+                                   \"in param_groups[{}] when resuming an optimizer\".format(i))\n+        self.base_lrs = list(map(lambda group: group['initial_lr'], optimizer.param_groups))\n+        self.step(last_epoch + 1)\n+        self.last_epoch = last_epoch\n+\n+    def get_lr(self):\n+        raise NotImplementedError\n+\n+    def step(self, epoch=None):\n+        if epoch is None:\n+            epoch = self.last_epoch + 1\n+        self.last_epoch = epoch\n+        for param_group, lr in zip(self.optimizer.param_groups, self.get_lr()):\n+            param_group['lr'] = lr\n+\n+\n+class LambdaLR(_LRScheduler):", "path": "torch/optim/lr_scheduler.py", "position": 34, "original_position": 34, "commit_id": "db59187201d18c203f084c8b288e07f7bd2a43aa", "original_commit_id": "7ab4a645e6454dd61e80ff8f280682d3eadbed38", "user": {"login": "apaszke", "id": 4583066, "node_id": "MDQ6VXNlcjQ1ODMwNjY=", "avatar_url": "https://avatars3.githubusercontent.com/u/4583066?v=4", "gravatar_id": "", "url": "https://api.github.com/users/apaszke", "html_url": "https://github.com/apaszke", "followers_url": "https://api.github.com/users/apaszke/followers", "following_url": "https://api.github.com/users/apaszke/following{/other_user}", "gists_url": "https://api.github.com/users/apaszke/gists{/gist_id}", "starred_url": "https://api.github.com/users/apaszke/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/apaszke/subscriptions", "organizations_url": "https://api.github.com/users/apaszke/orgs", "repos_url": "https://api.github.com/users/apaszke/repos", "events_url": "https://api.github.com/users/apaszke/events{/privacy}", "received_events_url": "https://api.github.com/users/apaszke/received_events", "type": "User", "site_admin": false}, "body": "This should be either documented or removed (as Sam said)", "created_at": "2017-05-14T20:55:12Z", "updated_at": "2018-11-23T15:33:26Z", "html_url": "https://github.com/pytorch/pytorch/pull/1370#discussion_r116390419", "pull_request_url": "https://api.github.com/repos/pytorch/pytorch/pulls/1370", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/116390419"}, "html": {"href": "https://github.com/pytorch/pytorch/pull/1370#discussion_r116390419"}, "pull_request": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/1370"}}, "body_html": "<p>This should be either documented or removed (as Sam said)</p>", "body_text": "This should be either documented or removed (as Sam said)"}