{"url": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/114003992", "pull_request_review_id": 35443808, "id": 114003992, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDExNDAwMzk5Mg==", "diff_hunk": "@@ -0,0 +1,206 @@\n+import numpy as np\n+from bisect import bisect_right\n+from torch.optim.optimizer import Optimizer\n+\n+\n+class LambdaLR(object):\n+    def __init__(self, optimizer, base_lr, lr_lambda):\n+        self.optimizer = optimizer\n+        self.base_lr = base_lr\n+        self.lr_lambda = lr_lambda\n+\n+    def step(self, epoch):\n+        for param_group in self.optimizer.param_groups:\n+            param_group['lr'] = self.base_lr * self.lr_lambda(epoch)\n+\n+\n+class GroupLambdaLR(object):", "path": "torch/optim/lr_scheduler.py", "position": null, "original_position": 17, "commit_id": "db59187201d18c203f084c8b288e07f7bd2a43aa", "original_commit_id": "eca2266556481e3c02427a27c3758b5af079786a", "user": {"login": "apaszke", "id": 4583066, "node_id": "MDQ6VXNlcjQ1ODMwNjY=", "avatar_url": "https://avatars3.githubusercontent.com/u/4583066?v=4", "gravatar_id": "", "url": "https://api.github.com/users/apaszke", "html_url": "https://github.com/apaszke", "followers_url": "https://api.github.com/users/apaszke/followers", "following_url": "https://api.github.com/users/apaszke/following{/other_user}", "gists_url": "https://api.github.com/users/apaszke/gists{/gist_id}", "starred_url": "https://api.github.com/users/apaszke/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/apaszke/subscriptions", "organizations_url": "https://api.github.com/users/apaszke/orgs", "repos_url": "https://api.github.com/users/apaszke/repos", "events_url": "https://api.github.com/users/apaszke/events{/privacy}", "received_events_url": "https://api.github.com/users/apaszke/received_events", "type": "User", "site_admin": false}, "body": "Is this even used anywhere? Also, I think it'd be simpler to have a `LambdaLR` that accepts both scalars and lists of scalars for `base_lr` (also, maybe `lr_base` would be a slightly better name).", "created_at": "2017-04-28T19:31:44Z", "updated_at": "2018-11-23T15:33:14Z", "html_url": "https://github.com/pytorch/pytorch/pull/1370#discussion_r114003992", "pull_request_url": "https://api.github.com/repos/pytorch/pytorch/pulls/1370", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/114003992"}, "html": {"href": "https://github.com/pytorch/pytorch/pull/1370#discussion_r114003992"}, "pull_request": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/1370"}}, "body_html": "<p>Is this even used anywhere? Also, I think it'd be simpler to have a <code>LambdaLR</code> that accepts both scalars and lists of scalars for <code>base_lr</code> (also, maybe <code>lr_base</code> would be a slightly better name).</p>", "body_text": "Is this even used anywhere? Also, I think it'd be simpler to have a LambdaLR that accepts both scalars and lists of scalars for base_lr (also, maybe lr_base would be a slightly better name)."}