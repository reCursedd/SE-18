{"url": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/113587149", "pull_request_review_id": 34988842, "id": 113587149, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDExMzU4NzE0OQ==", "diff_hunk": "@@ -0,0 +1,181 @@\n+import numpy as np\n+import warnings\n+from bisect import bisect_right\n+from torch.optim.optimizer import Optimizer\n+\n+\n+class LambdaLR(object):\n+    def __init__(self, optimizer, base_lr, lr_lambda):\n+        self.optimizer = optimizer\n+        self.lr_lambda = lr_lambda\n+        self.base_lr = base_lr\n+\n+    def step(self, epoch):\n+        for param_group in self.optimizer.param_groups:\n+            param_group['lr'] = self.base_lr * self.lr_lambda(epoch)\n+\n+\n+class GroupLambdaLR(object):\n+    def __init__(self, optimizer, base_lrs, lr_lambdas):\n+        self.zip = zip(optimizer.param_groups, base_lrs, lr_lambdas)\n+\n+    def step(self, epoch):\n+        for param_group, base_lr, lr_lambda in self.zip:", "path": "torch/optim/lr_scheduler.py", "position": null, "original_position": 23, "commit_id": "db59187201d18c203f084c8b288e07f7bd2a43aa", "original_commit_id": "a74ec0d5aa8a3b5c4b5e78a411b67c9706befdbc", "user": {"login": "colesbury", "id": 655866, "node_id": "MDQ6VXNlcjY1NTg2Ng==", "avatar_url": "https://avatars1.githubusercontent.com/u/655866?v=4", "gravatar_id": "", "url": "https://api.github.com/users/colesbury", "html_url": "https://github.com/colesbury", "followers_url": "https://api.github.com/users/colesbury/followers", "following_url": "https://api.github.com/users/colesbury/following{/other_user}", "gists_url": "https://api.github.com/users/colesbury/gists{/gist_id}", "starred_url": "https://api.github.com/users/colesbury/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/colesbury/subscriptions", "organizations_url": "https://api.github.com/users/colesbury/orgs", "repos_url": "https://api.github.com/users/colesbury/repos", "events_url": "https://api.github.com/users/colesbury/events{/privacy}", "received_events_url": "https://api.github.com/users/colesbury/received_events", "type": "User", "site_admin": false}, "body": "I don't think this will on the the second and subsequent calls to `step()`. The `zip` object only supports iteration once. (Instead save `optimizer`, `base_lrs`, `lr_lambdas` in self and construct the zip here)", "created_at": "2017-04-26T23:36:54Z", "updated_at": "2018-11-23T15:33:11Z", "html_url": "https://github.com/pytorch/pytorch/pull/1370#discussion_r113587149", "pull_request_url": "https://api.github.com/repos/pytorch/pytorch/pulls/1370", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/113587149"}, "html": {"href": "https://github.com/pytorch/pytorch/pull/1370#discussion_r113587149"}, "pull_request": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/1370"}}, "body_html": "<p>I don't think this will on the the second and subsequent calls to <code>step()</code>. The <code>zip</code> object only supports iteration once. (Instead save <code>optimizer</code>, <code>base_lrs</code>, <code>lr_lambdas</code> in self and construct the zip here)</p>", "body_text": "I don't think this will on the the second and subsequent calls to step(). The zip object only supports iteration once. (Instead save optimizer, base_lrs, lr_lambdas in self and construct the zip here)"}