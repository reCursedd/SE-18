{"url": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/205256499", "pull_request_review_id": 140492788, "id": 205256499, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwNTI1NjQ5OQ==", "diff_hunk": "@@ -36,28 +57,23 @@ static int getPointerDevice(void* ptr) {\n #endif\n \n ${Storage}::${Storage}(\n-  void * data, size_t size, const std::function<void(void*)> & deleter)\n-  : Storage(${THStorage}_newWithDataAndAllocator(${state,}\n+  void * data, \n+  size_t size, \n+  const std::function<void(void*)> & deleter) {\n+  storage_impl_ = new StorageImpl(\n+      ScalarType::${ScalarName},\n+      size,\n       InefficientStdFunctionContext::makeDataPtr(data, deleter,\n #if ${isCUDA}\n       Device(kCUDA, getPointerDevice(data))\n #else\n       kCPU\n #endif\n-       ), size,\n-     /* allocator */ nullptr\n-    )) {\n-    ${THStorage}_clearFlag(${state,} storage, TH_STORAGE_RESIZABLE);\n-}\n-\n-${Storage}::~${Storage}() { }\n-\n-size_t ${Storage}::elementSize() const {\n-  return sizeof(${ScalarType});\n-}\n-\n-Type& ${Storage}::type() const {\n-  return globalContext().getType(Backend::${Backend},ScalarType::${ScalarName});\n+       ),\n+     /* allocator */ nullptr,\n+     StorageImpl::RESIZABLE\n+    );\n+  storage_impl_->clear_flag(StorageImpl::RESIZABLE);", "path": "aten/src/ATen/templates/StorageDerived.cpp", "position": null, "original_position": 94, "commit_id": "49a54a1620c5046ea3c1b3025214ca9c21385a37", "original_commit_id": "aa42020b145ba81eedf5e82a75ead6c838ef5070", "user": {"login": "ezyang", "id": 13564, "node_id": "MDQ6VXNlcjEzNTY0", "avatar_url": "https://avatars0.githubusercontent.com/u/13564?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ezyang", "html_url": "https://github.com/ezyang", "followers_url": "https://api.github.com/users/ezyang/followers", "following_url": "https://api.github.com/users/ezyang/following{/other_user}", "gists_url": "https://api.github.com/users/ezyang/gists{/gist_id}", "starred_url": "https://api.github.com/users/ezyang/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ezyang/subscriptions", "organizations_url": "https://api.github.com/users/ezyang/orgs", "repos_url": "https://api.github.com/users/ezyang/repos", "events_url": "https://api.github.com/users/ezyang/events{/privacy}", "received_events_url": "https://api.github.com/users/ezyang/received_events", "type": "User", "site_admin": false}, "body": "Here, clearing the resizable flag is correct, but then it is perplexing why you didn't just pass in 0 for the flag in the first case. Better yet, if you make resizable a boolean you can just say `/* resizable */ false`.", "created_at": "2018-07-25T20:45:51Z", "updated_at": "2018-11-23T15:48:07Z", "html_url": "https://github.com/pytorch/pytorch/pull/9772#discussion_r205256499", "pull_request_url": "https://api.github.com/repos/pytorch/pytorch/pulls/9772", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/205256499"}, "html": {"href": "https://github.com/pytorch/pytorch/pull/9772#discussion_r205256499"}, "pull_request": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/9772"}}, "body_html": "<p>Here, clearing the resizable flag is correct, but then it is perplexing why you didn't just pass in 0 for the flag in the first case. Better yet, if you make resizable a boolean you can just say <code>/* resizable */ false</code>.</p>", "body_text": "Here, clearing the resizable flag is correct, but then it is perplexing why you didn't just pass in 0 for the flag in the first case. Better yet, if you make resizable a boolean you can just say /* resizable */ false."}