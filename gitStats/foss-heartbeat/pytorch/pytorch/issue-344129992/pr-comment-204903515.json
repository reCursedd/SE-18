{"url": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/204903515", "pull_request_review_id": 140070476, "id": 204903515, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwNDkwMzUxNQ==", "diff_hunk": "@@ -1,53 +1,122 @@\n #pragma once\n \n-#include \"ATen/Scalar.h\"\n-#include <TH/THStorageFunctions.hpp>\n+#include <ATen/Scalar.h>\n+\n+#include <ATen/Allocator.h>\n+#include <ATen/ScalarType.h>\n+#include <ATen/ScalarTypeUtils.h>\n+#include <TH/THTypeConversion.hpp>\n+#include <atomic>\n+\n+// Note [Weak references for intrusive refcounting]\n+// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n+// Here's the scheme:\n+//\n+//  - refcount == number of strong references to the object\n+//    weakcount == number of weak references to the object,\n+//      plus one more if refcount > 0\n+//\n+//  - THStorage stays live as long as there are any strong\n+//    or weak pointers to it (weakcount > 0, since strong\n+//    references count as a +1 to weakcount)\n+//\n+//  - finalizers are called and data_ptr is deallocated when refcount == 0\n+//\n+//  - Once refcount == 0, it can never again be > 0 (the transition\n+//    from > 0 to == 0 is monotonic)\n+//\n+//  - When you access THStorage via a weak pointer, you must\n+//    atomically increment the use count, if it is greater than 0.\n+//    If it is not, you must report that the storage is dead.\n+//\n+\n+struct THFinalizer {", "path": "aten/src/ATen/Storage.h", "position": null, "original_position": 35, "commit_id": "49a54a1620c5046ea3c1b3025214ca9c21385a37", "original_commit_id": "66eda7022699d32ab66d237561bbe131139cc0b7", "user": {"login": "ezyang", "id": 13564, "node_id": "MDQ6VXNlcjEzNTY0", "avatar_url": "https://avatars0.githubusercontent.com/u/13564?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ezyang", "html_url": "https://github.com/ezyang", "followers_url": "https://api.github.com/users/ezyang/followers", "following_url": "https://api.github.com/users/ezyang/following{/other_user}", "gists_url": "https://api.github.com/users/ezyang/gists{/gist_id}", "starred_url": "https://api.github.com/users/ezyang/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ezyang/subscriptions", "organizations_url": "https://api.github.com/users/ezyang/orgs", "repos_url": "https://api.github.com/users/ezyang/repos", "events_url": "https://api.github.com/users/ezyang/events{/privacy}", "received_events_url": "https://api.github.com/users/ezyang/received_events", "type": "User", "site_admin": false}, "body": "Now that it's not in TH anymore, give it a rename?", "created_at": "2018-07-24T20:41:01Z", "updated_at": "2018-11-23T15:47:59Z", "html_url": "https://github.com/pytorch/pytorch/pull/9772#discussion_r204903515", "pull_request_url": "https://api.github.com/repos/pytorch/pytorch/pulls/9772", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/204903515"}, "html": {"href": "https://github.com/pytorch/pytorch/pull/9772#discussion_r204903515"}, "pull_request": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/9772"}}, "body_html": "<p>Now that it's not in TH anymore, give it a rename?</p>", "body_text": "Now that it's not in TH anymore, give it a rename?"}