{"url": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/127354637", "pull_request_review_id": 49931887, "id": 127354637, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEyNzM1NDYzNw==", "diff_hunk": "@@ -126,10 +126,13 @@ class Hardtanh(Module):\n         >>> print(m(input))\n     \"\"\"\n \n-    def __init__(self, min_value=-1, max_value=1, inplace=False):\n+    def __init__(self, min_val=-1, max_val=1, inplace=False, min_value=None, max_value=None):\n         super(Hardtanh, self).__init__()\n-        self.min_val = min_value\n-        self.max_val = max_value\n+        self.min_val = min_val\n+        self.max_val = max_val\n+        assert min_value is None, \"keyword argument min_value has been renamed to min_val\"", "path": "torch/nn/modules/activation.py", "position": null, "original_position": 22, "commit_id": "49ff3184f7de9fd4ca2617569004be9c3efddae3", "original_commit_id": "71d99c8271e4d1be72cf79a0c38010ecb802be82", "user": {"login": "alykhantejani", "id": 687194, "node_id": "MDQ6VXNlcjY4NzE5NA==", "avatar_url": "https://avatars1.githubusercontent.com/u/687194?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alykhantejani", "html_url": "https://github.com/alykhantejani", "followers_url": "https://api.github.com/users/alykhantejani/followers", "following_url": "https://api.github.com/users/alykhantejani/following{/other_user}", "gists_url": "https://api.github.com/users/alykhantejani/gists{/gist_id}", "starred_url": "https://api.github.com/users/alykhantejani/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alykhantejani/subscriptions", "organizations_url": "https://api.github.com/users/alykhantejani/orgs", "repos_url": "https://api.github.com/users/alykhantejani/repos", "events_url": "https://api.github.com/users/alykhantejani/events{/privacy}", "received_events_url": "https://api.github.com/users/alykhantejani/received_events", "type": "User", "site_admin": false}, "body": "Do we rather want to add a deprecation warning and just do \r\n```\r\nif min_value is not None:\r\n    self.min_val = min_value\r\n```\r\nand then fully remove `min_value` and `max_value` in v0.2.x? This way it wouldn't break any existing code unexpectedly?\r\n", "created_at": "2017-07-13T23:17:01Z", "updated_at": "2018-11-23T15:34:06Z", "html_url": "https://github.com/pytorch/pytorch/pull/2079#discussion_r127354637", "pull_request_url": "https://api.github.com/repos/pytorch/pytorch/pulls/2079", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/127354637"}, "html": {"href": "https://github.com/pytorch/pytorch/pull/2079#discussion_r127354637"}, "pull_request": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/2079"}}, "body_html": "<p>Do we rather want to add a deprecation warning and just do</p>\n<pre><code>if min_value is not None:\n    self.min_val = min_value\n</code></pre>\n<p>and then fully remove <code>min_value</code> and <code>max_value</code> in v0.2.x? This way it wouldn't break any existing code unexpectedly?</p>", "body_text": "Do we rather want to add a deprecation warning and just do\nif min_value is not None:\n    self.min_val = min_value\n\nand then fully remove min_value and max_value in v0.2.x? This way it wouldn't break any existing code unexpectedly?"}