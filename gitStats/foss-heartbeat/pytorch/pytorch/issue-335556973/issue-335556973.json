{"url": "https://api.github.com/repos/pytorch/pytorch/issues/8868", "repository_url": "https://api.github.com/repos/pytorch/pytorch", "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/8868/labels{/name}", "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/8868/comments", "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/8868/events", "html_url": "https://github.com/pytorch/pytorch/issues/8868", "id": 335556973, "node_id": "MDU6SXNzdWUzMzU1NTY5NzM=", "number": 8868, "title": "nn.init.orthogonal segfaults", "user": {"login": "marikgoldstein", "id": 15962985, "node_id": "MDQ6VXNlcjE1OTYyOTg1", "avatar_url": "https://avatars2.githubusercontent.com/u/15962985?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marikgoldstein", "html_url": "https://github.com/marikgoldstein", "followers_url": "https://api.github.com/users/marikgoldstein/followers", "following_url": "https://api.github.com/users/marikgoldstein/following{/other_user}", "gists_url": "https://api.github.com/users/marikgoldstein/gists{/gist_id}", "starred_url": "https://api.github.com/users/marikgoldstein/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marikgoldstein/subscriptions", "organizations_url": "https://api.github.com/users/marikgoldstein/orgs", "repos_url": "https://api.github.com/users/marikgoldstein/repos", "events_url": "https://api.github.com/users/marikgoldstein/events{/privacy}", "received_events_url": "https://api.github.com/users/marikgoldstein/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2018-06-25T20:32:16Z", "updated_at": "2018-06-26T16:04:37Z", "closed_at": "2018-06-26T16:04:37Z", "author_association": "NONE", "body_html": "<h2>Issue description</h2>\n<p>Call to nn.init.orthogonal_ causes SEGFAULT on ubuntu and not on mac</p>\n<h2>Code example</h2>\n<p>In the following code, the call that assigns <code>conv1</code> works fine but the one that assigns <code>conv2</code> causes a SEGFAULT and dumps core when it reaches <code>nn.init.orthogonal_(layer.weight.data)</code>.</p>\n<p>This code works totally fine on a mac installation with the same pytorch library version (the newest). But this crashes on my Ubuntu (system info below). Any thoughts? Thanks!</p>\n<pre><code>def layer_init(layer, w_scale=1.0):\n    nn.init.orthogonal_(layer.weight.data)\n    layer.weight.data.mul_(w_scale)\n    nn.init.constant_(layer.bias.data, 0)\n    return layer\n\nconv1 = layer_init(nn.Conv2d(4, 32, kernel_size=8, stride=4))\nconv2 = layer_init(nn.Conv2d(32, 64, kernel_size=4, stride=2))\n</code></pre>\n<p>By the way, I came across this issue while I happened to be using this great pytorch DeepRL repo for recreating results from a lot of recent RL papers <a href=\"https://github.com/ShangtongZhang/DeepRL\">https://github.com/ShangtongZhang/DeepRL</a> (code works well on my mac)</p>\n<h2>System Info</h2>\n<p>PyTorch version: 0.4.0<br>\nIs debug build: No<br>\nCUDA used to build PyTorch: 8.0.61</p>\n<p>OS: Ubuntu 16.04.4 LTS<br>\nGCC version: (Ubuntu 5.4.0-6ubuntu1~16.04.9) 5.4.0 20160609<br>\nCMake version: version 3.5.1</p>\n<p>Python version: 3.6<br>\nIs CUDA available: Yes<br>\nCUDA runtime version: 7.5.17<br>\nGPU models and configuration: GPU 0: GeForce GTX 1080 Ti<br>\nNvidia driver version: 375.66<br>\ncuDNN version: Probably one of the following:<br>\n/usr/local/lib/python2.7/dist-packages/torch/lib/libcudnn-3f9a723f.so.6.0.21</p>\n<p>Versions of relevant libraries:<br>\n[pip3] numpy (1.13.1)<br>\n[pip3] torch (0.4.0)<br>\n[pip3] torchvision (0.1.8)<br>\n[conda] pytorch                   0.1.12          py36cuda8.0cudnn6.0_1<br>\n[conda] torch                     0.4.0                     <br>\n[conda] torchvision               0.1.8                    py36_0</p>", "body_text": "Issue description\nCall to nn.init.orthogonal_ causes SEGFAULT on ubuntu and not on mac\nCode example\nIn the following code, the call that assigns conv1 works fine but the one that assigns conv2 causes a SEGFAULT and dumps core when it reaches nn.init.orthogonal_(layer.weight.data).\nThis code works totally fine on a mac installation with the same pytorch library version (the newest). But this crashes on my Ubuntu (system info below). Any thoughts? Thanks!\ndef layer_init(layer, w_scale=1.0):\n    nn.init.orthogonal_(layer.weight.data)\n    layer.weight.data.mul_(w_scale)\n    nn.init.constant_(layer.bias.data, 0)\n    return layer\n\nconv1 = layer_init(nn.Conv2d(4, 32, kernel_size=8, stride=4))\nconv2 = layer_init(nn.Conv2d(32, 64, kernel_size=4, stride=2))\n\nBy the way, I came across this issue while I happened to be using this great pytorch DeepRL repo for recreating results from a lot of recent RL papers https://github.com/ShangtongZhang/DeepRL (code works well on my mac)\nSystem Info\nPyTorch version: 0.4.0\nIs debug build: No\nCUDA used to build PyTorch: 8.0.61\nOS: Ubuntu 16.04.4 LTS\nGCC version: (Ubuntu 5.4.0-6ubuntu1~16.04.9) 5.4.0 20160609\nCMake version: version 3.5.1\nPython version: 3.6\nIs CUDA available: Yes\nCUDA runtime version: 7.5.17\nGPU models and configuration: GPU 0: GeForce GTX 1080 Ti\nNvidia driver version: 375.66\ncuDNN version: Probably one of the following:\n/usr/local/lib/python2.7/dist-packages/torch/lib/libcudnn-3f9a723f.so.6.0.21\nVersions of relevant libraries:\n[pip3] numpy (1.13.1)\n[pip3] torch (0.4.0)\n[pip3] torchvision (0.1.8)\n[conda] pytorch                   0.1.12          py36cuda8.0cudnn6.0_1\n[conda] torch                     0.4.0                     \n[conda] torchvision               0.1.8                    py36_0", "body": "## Issue description\r\n\r\nCall to nn.init.orthogonal_ causes SEGFAULT on ubuntu and not on mac\r\n\r\n## Code example\r\n\r\nIn the following code, the call that assigns `conv1` works fine but the one that assigns `conv2` causes a SEGFAULT and dumps core when it reaches `nn.init.orthogonal_(layer.weight.data)`.\r\n\r\nThis code works totally fine on a mac installation with the same pytorch library version (the newest). But this crashes on my Ubuntu (system info below). Any thoughts? Thanks!\r\n\r\n```\r\ndef layer_init(layer, w_scale=1.0):\r\n    nn.init.orthogonal_(layer.weight.data)\r\n    layer.weight.data.mul_(w_scale)\r\n    nn.init.constant_(layer.bias.data, 0)\r\n    return layer\r\n\r\nconv1 = layer_init(nn.Conv2d(4, 32, kernel_size=8, stride=4))\r\nconv2 = layer_init(nn.Conv2d(32, 64, kernel_size=4, stride=2))\r\n```\r\nBy the way, I came across this issue while I happened to be using this great pytorch DeepRL repo for recreating results from a lot of recent RL papers https://github.com/ShangtongZhang/DeepRL (code works well on my mac)\r\n\r\n## System Info\r\n\r\nPyTorch version: 0.4.0\r\nIs debug build: No\r\nCUDA used to build PyTorch: 8.0.61\r\n\r\nOS: Ubuntu 16.04.4 LTS\r\nGCC version: (Ubuntu 5.4.0-6ubuntu1~16.04.9) 5.4.0 20160609\r\nCMake version: version 3.5.1\r\n\r\nPython version: 3.6\r\nIs CUDA available: Yes\r\nCUDA runtime version: 7.5.17\r\nGPU models and configuration: GPU 0: GeForce GTX 1080 Ti\r\nNvidia driver version: 375.66\r\ncuDNN version: Probably one of the following:\r\n/usr/local/lib/python2.7/dist-packages/torch/lib/libcudnn-3f9a723f.so.6.0.21\r\n\r\nVersions of relevant libraries:\r\n[pip3] numpy (1.13.1)\r\n[pip3] torch (0.4.0)\r\n[pip3] torchvision (0.1.8)\r\n[conda] pytorch                   0.1.12          py36cuda8.0cudnn6.0_1  \r\n[conda] torch                     0.4.0                     <pip>\r\n[conda] torchvision               0.1.8                    py36_0\r\n"}