{"url": "https://api.github.com/repos/pytorch/pytorch/issues/973", "repository_url": "https://api.github.com/repos/pytorch/pytorch", "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/973/labels{/name}", "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/973/comments", "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/973/events", "html_url": "https://github.com/pytorch/pytorch/issues/973", "id": 213381000, "node_id": "MDU6SXNzdWUyMTMzODEwMDA=", "number": 973, "title": "DataLoader causing `RuntimeError: received 0 items of ancdata`", "user": {"login": "jfsantos", "id": 5733, "node_id": "MDQ6VXNlcjU3MzM=", "avatar_url": "https://avatars1.githubusercontent.com/u/5733?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jfsantos", "html_url": "https://github.com/jfsantos", "followers_url": "https://api.github.com/users/jfsantos/followers", "following_url": "https://api.github.com/users/jfsantos/following{/other_user}", "gists_url": "https://api.github.com/users/jfsantos/gists{/gist_id}", "starred_url": "https://api.github.com/users/jfsantos/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jfsantos/subscriptions", "organizations_url": "https://api.github.com/users/jfsantos/orgs", "repos_url": "https://api.github.com/users/jfsantos/repos", "events_url": "https://api.github.com/users/jfsantos/events{/privacy}", "received_events_url": "https://api.github.com/users/jfsantos/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 424131847, "node_id": "MDU6TGFiZWw0MjQxMzE4NDc=", "url": "https://api.github.com/repos/pytorch/pytorch/labels/bug", "name": "bug", "color": "b60205", "default": true}, {"id": 553773019, "node_id": "MDU6TGFiZWw1NTM3NzMwMTk=", "url": "https://api.github.com/repos/pytorch/pytorch/labels/needs-reproduction", "name": "needs-reproduction", "color": "e99695", "default": false}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 28, "created_at": "2017-03-10T16:05:34Z", "updated_at": "2018-10-03T08:49:46Z", "closed_at": null, "author_association": "CONTRIBUTOR", "body_html": "<p>I am using a <code>DataLoader</code> in my code with a custom <code>Dataset</code> class, and it worked fine during training for several epochs. However, when testing my model, after a bit less than 1k iterations, I'm getting the following error:</p>\n<pre><code>RuntimeError                              Traceback (most recent call last)\n/home/jfsantos/src/pytorch_models/test_model.py in &lt;module&gt;()\n     82\n     83 print('Generating samples...')\n---&gt; 84 for k, batch in tqdm(enumerate(test_loader)):\n     85     f = G_test.audio_paths[k]\n     86     spec, phase = spectrogram_from_file(f, window=window, step=step)\n\n/home/jfsantos/anaconda3/envs/pytorch/lib/python3.5/site-packages/tqdm/_tqdm.py in __iter__(self)\n    831 \"\"\", fp_write=getattr(self.fp, 'write', sys.stderr.write))\n    832\n--&gt; 833             for obj in iterable:\n    834                 yield obj\n    835                 # Update and print the progressbar.\n\n/home/jfsantos/anaconda3/envs/pytorch/lib/python3.5/site-packages/torch/utils/data/dataloader.py in __next__(self)\n    166         while True:\n    167             assert (not self.shutdown and self.batches_outstanding &gt; 0)\n--&gt; 168             idx, batch = self.data_queue.get()\n    169             self.batches_outstanding -= 1\n    170             if idx != self.rcvd_idx:\n\n/home/jfsantos/anaconda3/envs/pytorch/lib/python3.5/multiprocessing/queues.py in get(self)\n    343             res = self._reader.recv_bytes()\n    344         # unserialize the data after having released the lock\n--&gt; 345         return ForkingPickler.loads(res)\n    346\n    347     def put(self, obj):\n\n/home/jfsantos/anaconda3/envs/pytorch/lib/python3.5/site-packages/torch/multiprocessing/reductions.py in rebuild_storage_fd(cls, df, size)\n     68         fd = multiprocessing.reduction.rebuild_handle(df)\n     69     else:\n---&gt; 70         fd = df.detach()\n     71     try:\n     72         storage = storage_from_cache(cls, fd_id(fd))\n\n/home/jfsantos/anaconda3/envs/pytorch/lib/python3.5/multiprocessing/resource_sharer.py in detach(self)\n     56             '''Get the fd.  This should only be called once.'''\n     57             with _resource_sharer.get_connection(self._id) as conn:\n---&gt; 58                 return reduction.recv_handle(conn)\n     59\n     60\n\n/home/jfsantos/anaconda3/envs/pytorch/lib/python3.5/multiprocessing/reduction.py in recv_handle(conn)\n    179         '''Receive a handle over a local connection.'''\n    180         with socket.fromfd(conn.fileno(), socket.AF_UNIX, socket.SOCK_STREAM) as s:\n--&gt; 181             return recvfds(s, 1)[0]\n    182\n    183     def DupFd(fd):\n\n/home/jfsantos/anaconda3/envs/pytorch/lib/python3.5/multiprocessing/reduction.py in recvfds(sock, size)\n    158             if len(ancdata) != 1:\n    159                 raise RuntimeError('received %d items of ancdata' %\n--&gt; 160                                    len(ancdata))\n    161             cmsg_level, cmsg_type, cmsg_data = ancdata[0]\n    162             if (cmsg_level == socket.SOL_SOCKET and\n\nRuntimeError: received 0 items of ancdata\n</code></pre>\n<p>However, if I just do <code>idxs = [k for k, batch in tqdm(enumerate(test_loader))]</code> I do <strong>not</strong> have this issue.</p>\n<p>I do not have any idea on how to test it as my knowledge of how PyTorch does this is currently very limited, but I could help debug this given some instructions. Does anyone have any idea on where I could start?</p>", "body_text": "I am using a DataLoader in my code with a custom Dataset class, and it worked fine during training for several epochs. However, when testing my model, after a bit less than 1k iterations, I'm getting the following error:\nRuntimeError                              Traceback (most recent call last)\n/home/jfsantos/src/pytorch_models/test_model.py in <module>()\n     82\n     83 print('Generating samples...')\n---> 84 for k, batch in tqdm(enumerate(test_loader)):\n     85     f = G_test.audio_paths[k]\n     86     spec, phase = spectrogram_from_file(f, window=window, step=step)\n\n/home/jfsantos/anaconda3/envs/pytorch/lib/python3.5/site-packages/tqdm/_tqdm.py in __iter__(self)\n    831 \"\"\", fp_write=getattr(self.fp, 'write', sys.stderr.write))\n    832\n--> 833             for obj in iterable:\n    834                 yield obj\n    835                 # Update and print the progressbar.\n\n/home/jfsantos/anaconda3/envs/pytorch/lib/python3.5/site-packages/torch/utils/data/dataloader.py in __next__(self)\n    166         while True:\n    167             assert (not self.shutdown and self.batches_outstanding > 0)\n--> 168             idx, batch = self.data_queue.get()\n    169             self.batches_outstanding -= 1\n    170             if idx != self.rcvd_idx:\n\n/home/jfsantos/anaconda3/envs/pytorch/lib/python3.5/multiprocessing/queues.py in get(self)\n    343             res = self._reader.recv_bytes()\n    344         # unserialize the data after having released the lock\n--> 345         return ForkingPickler.loads(res)\n    346\n    347     def put(self, obj):\n\n/home/jfsantos/anaconda3/envs/pytorch/lib/python3.5/site-packages/torch/multiprocessing/reductions.py in rebuild_storage_fd(cls, df, size)\n     68         fd = multiprocessing.reduction.rebuild_handle(df)\n     69     else:\n---> 70         fd = df.detach()\n     71     try:\n     72         storage = storage_from_cache(cls, fd_id(fd))\n\n/home/jfsantos/anaconda3/envs/pytorch/lib/python3.5/multiprocessing/resource_sharer.py in detach(self)\n     56             '''Get the fd.  This should only be called once.'''\n     57             with _resource_sharer.get_connection(self._id) as conn:\n---> 58                 return reduction.recv_handle(conn)\n     59\n     60\n\n/home/jfsantos/anaconda3/envs/pytorch/lib/python3.5/multiprocessing/reduction.py in recv_handle(conn)\n    179         '''Receive a handle over a local connection.'''\n    180         with socket.fromfd(conn.fileno(), socket.AF_UNIX, socket.SOCK_STREAM) as s:\n--> 181             return recvfds(s, 1)[0]\n    182\n    183     def DupFd(fd):\n\n/home/jfsantos/anaconda3/envs/pytorch/lib/python3.5/multiprocessing/reduction.py in recvfds(sock, size)\n    158             if len(ancdata) != 1:\n    159                 raise RuntimeError('received %d items of ancdata' %\n--> 160                                    len(ancdata))\n    161             cmsg_level, cmsg_type, cmsg_data = ancdata[0]\n    162             if (cmsg_level == socket.SOL_SOCKET and\n\nRuntimeError: received 0 items of ancdata\n\nHowever, if I just do idxs = [k for k, batch in tqdm(enumerate(test_loader))] I do not have this issue.\nI do not have any idea on how to test it as my knowledge of how PyTorch does this is currently very limited, but I could help debug this given some instructions. Does anyone have any idea on where I could start?", "body": "I am using a `DataLoader` in my code with a custom `Dataset` class, and it worked fine during training for several epochs. However, when testing my model, after a bit less than 1k iterations, I'm getting the following error:\r\n\r\n```\r\nRuntimeError                              Traceback (most recent call last)\r\n/home/jfsantos/src/pytorch_models/test_model.py in <module>()\r\n     82\r\n     83 print('Generating samples...')\r\n---> 84 for k, batch in tqdm(enumerate(test_loader)):\r\n     85     f = G_test.audio_paths[k]\r\n     86     spec, phase = spectrogram_from_file(f, window=window, step=step)\r\n\r\n/home/jfsantos/anaconda3/envs/pytorch/lib/python3.5/site-packages/tqdm/_tqdm.py in __iter__(self)\r\n    831 \"\"\", fp_write=getattr(self.fp, 'write', sys.stderr.write))\r\n    832\r\n--> 833             for obj in iterable:\r\n    834                 yield obj\r\n    835                 # Update and print the progressbar.\r\n\r\n/home/jfsantos/anaconda3/envs/pytorch/lib/python3.5/site-packages/torch/utils/data/dataloader.py in __next__(self)\r\n    166         while True:\r\n    167             assert (not self.shutdown and self.batches_outstanding > 0)\r\n--> 168             idx, batch = self.data_queue.get()\r\n    169             self.batches_outstanding -= 1\r\n    170             if idx != self.rcvd_idx:\r\n\r\n/home/jfsantos/anaconda3/envs/pytorch/lib/python3.5/multiprocessing/queues.py in get(self)\r\n    343             res = self._reader.recv_bytes()\r\n    344         # unserialize the data after having released the lock\r\n--> 345         return ForkingPickler.loads(res)\r\n    346\r\n    347     def put(self, obj):\r\n\r\n/home/jfsantos/anaconda3/envs/pytorch/lib/python3.5/site-packages/torch/multiprocessing/reductions.py in rebuild_storage_fd(cls, df, size)\r\n     68         fd = multiprocessing.reduction.rebuild_handle(df)\r\n     69     else:\r\n---> 70         fd = df.detach()\r\n     71     try:\r\n     72         storage = storage_from_cache(cls, fd_id(fd))\r\n\r\n/home/jfsantos/anaconda3/envs/pytorch/lib/python3.5/multiprocessing/resource_sharer.py in detach(self)\r\n     56             '''Get the fd.  This should only be called once.'''\r\n     57             with _resource_sharer.get_connection(self._id) as conn:\r\n---> 58                 return reduction.recv_handle(conn)\r\n     59\r\n     60\r\n\r\n/home/jfsantos/anaconda3/envs/pytorch/lib/python3.5/multiprocessing/reduction.py in recv_handle(conn)\r\n    179         '''Receive a handle over a local connection.'''\r\n    180         with socket.fromfd(conn.fileno(), socket.AF_UNIX, socket.SOCK_STREAM) as s:\r\n--> 181             return recvfds(s, 1)[0]\r\n    182\r\n    183     def DupFd(fd):\r\n\r\n/home/jfsantos/anaconda3/envs/pytorch/lib/python3.5/multiprocessing/reduction.py in recvfds(sock, size)\r\n    158             if len(ancdata) != 1:\r\n    159                 raise RuntimeError('received %d items of ancdata' %\r\n--> 160                                    len(ancdata))\r\n    161             cmsg_level, cmsg_type, cmsg_data = ancdata[0]\r\n    162             if (cmsg_level == socket.SOL_SOCKET and\r\n\r\nRuntimeError: received 0 items of ancdata\r\n```\r\n\r\nHowever, if I just do `idxs = [k for k, batch in tqdm(enumerate(test_loader))]` I do **not** have this issue.\r\n\r\nI do not have any idea on how to test it as my knowledge of how PyTorch does this is currently very limited, but I could help debug this given some instructions. Does anyone have any idea on where I could start?"}