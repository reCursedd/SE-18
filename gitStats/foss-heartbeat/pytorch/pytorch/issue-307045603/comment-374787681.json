{"url": "https://api.github.com/repos/pytorch/pytorch/issues/comments/374787681", "html_url": "https://github.com/pytorch/pytorch/pull/5913#issuecomment-374787681", "issue_url": "https://api.github.com/repos/pytorch/pytorch/issues/5913", "id": 374787681, "node_id": "MDEyOklzc3VlQ29tbWVudDM3NDc4NzY4MQ==", "user": {"login": "theweiho", "id": 6696956, "node_id": "MDQ6VXNlcjY2OTY5NTY=", "avatar_url": "https://avatars3.githubusercontent.com/u/6696956?v=4", "gravatar_id": "", "url": "https://api.github.com/users/theweiho", "html_url": "https://github.com/theweiho", "followers_url": "https://api.github.com/users/theweiho/followers", "following_url": "https://api.github.com/users/theweiho/following{/other_user}", "gists_url": "https://api.github.com/users/theweiho/gists{/gist_id}", "starred_url": "https://api.github.com/users/theweiho/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/theweiho/subscriptions", "organizations_url": "https://api.github.com/users/theweiho/orgs", "repos_url": "https://api.github.com/users/theweiho/repos", "events_url": "https://api.github.com/users/theweiho/events{/privacy}", "received_events_url": "https://api.github.com/users/theweiho/received_events", "type": "User", "site_admin": false}, "created_at": "2018-03-20T23:07:47Z", "updated_at": "2018-03-20T23:07:47Z", "author_association": "CONTRIBUTOR", "body_html": "<p>See the link in group thread for more details, but below are the relevant excerpts from line_profiler:</p>\n<pre><code>Line #      Hits         Time  Per Hit   % Time  Line Contents\n==============================================================\n...\n    67      1000      4227050   4227.1     11.3          unique_numpy = np.unique(x_numpy)\n...\n    71                                                   # std::set\n    72      1000      9937905   9937.9     26.5          unique_cpu = torch.unique(x_cpu, use_stdset=True)\n    73\n    74                                                   # std::vector + sort\n    75      1000      4303123   4303.1     11.5          unique_cpu = torch.unique(x_cpu, use_vector=True)\n...\n    87                                                   # std::unordered_set\n    88      1000      1543563   1543.6      4.1          unique_cpu = torch.unique(x_cpu, sorted=False)\n...\n    97                                                   # std::unordered_set + vector sorting\n    98      1000      2030760   2030.8      5.4          unique_cpu = torch.unique(x_cpu, sorted=True)\n</code></pre>", "body_text": "See the link in group thread for more details, but below are the relevant excerpts from line_profiler:\nLine #      Hits         Time  Per Hit   % Time  Line Contents\n==============================================================\n...\n    67      1000      4227050   4227.1     11.3          unique_numpy = np.unique(x_numpy)\n...\n    71                                                   # std::set\n    72      1000      9937905   9937.9     26.5          unique_cpu = torch.unique(x_cpu, use_stdset=True)\n    73\n    74                                                   # std::vector + sort\n    75      1000      4303123   4303.1     11.5          unique_cpu = torch.unique(x_cpu, use_vector=True)\n...\n    87                                                   # std::unordered_set\n    88      1000      1543563   1543.6      4.1          unique_cpu = torch.unique(x_cpu, sorted=False)\n...\n    97                                                   # std::unordered_set + vector sorting\n    98      1000      2030760   2030.8      5.4          unique_cpu = torch.unique(x_cpu, sorted=True)", "body": "See the link in group thread for more details, but below are the relevant excerpts from line_profiler:\r\n\r\n```\r\nLine #      Hits         Time  Per Hit   % Time  Line Contents\r\n==============================================================\r\n...\r\n    67      1000      4227050   4227.1     11.3          unique_numpy = np.unique(x_numpy)\r\n...\r\n    71                                                   # std::set\r\n    72      1000      9937905   9937.9     26.5          unique_cpu = torch.unique(x_cpu, use_stdset=True)\r\n    73\r\n    74                                                   # std::vector + sort\r\n    75      1000      4303123   4303.1     11.5          unique_cpu = torch.unique(x_cpu, use_vector=True)\r\n...\r\n    87                                                   # std::unordered_set\r\n    88      1000      1543563   1543.6      4.1          unique_cpu = torch.unique(x_cpu, sorted=False)\r\n...\r\n    97                                                   # std::unordered_set + vector sorting\r\n    98      1000      2030760   2030.8      5.4          unique_cpu = torch.unique(x_cpu, sorted=True)\r\n```"}