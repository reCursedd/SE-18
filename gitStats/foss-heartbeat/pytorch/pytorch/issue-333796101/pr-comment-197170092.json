{"url": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/197170092", "pull_request_review_id": 130855346, "id": 197170092, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5NzE3MDA5Mg==", "diff_hunk": "@@ -1,5 +1,12 @@\n #pragma once\n \n+/// Defines the Half type (half-precision floating-point) including conversions\n+/// to standard C types and basic arithmetic operations. Note that arithmetic\n+/// operations are implemented by converting to floating point and\n+/// performing the operation in float32, instead of using CUDA half intrinisics.\n+/// Most uses of this type within ATen are memory bound, including the\n+/// element-wise kernels, and the half intrinisics aren't efficient on all GPUs.", "path": "aten/src/ATen/Half.h", "position": 8, "original_position": 8, "commit_id": "45dfe1b9c777199f451d784613dbd6bd0c0a4d46", "original_commit_id": "16ddb32b25303586f1eab58c0757813d522cf957", "user": {"login": "gchanan", "id": 3768583, "node_id": "MDQ6VXNlcjM3Njg1ODM=", "avatar_url": "https://avatars2.githubusercontent.com/u/3768583?v=4", "gravatar_id": "", "url": "https://api.github.com/users/gchanan", "html_url": "https://github.com/gchanan", "followers_url": "https://api.github.com/users/gchanan/followers", "following_url": "https://api.github.com/users/gchanan/following{/other_user}", "gists_url": "https://api.github.com/users/gchanan/gists{/gist_id}", "starred_url": "https://api.github.com/users/gchanan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/gchanan/subscriptions", "organizations_url": "https://api.github.com/users/gchanan/orgs", "repos_url": "https://api.github.com/users/gchanan/repos", "events_url": "https://api.github.com/users/gchanan/events{/privacy}", "received_events_url": "https://api.github.com/users/gchanan/received_events", "type": "User", "site_admin": false}, "body": "did you do any measurements here?  Should we have a pointer on what to do if you are not in a memory bound case?", "created_at": "2018-06-21T15:08:52Z", "updated_at": "2018-11-23T15:45:59Z", "html_url": "https://github.com/pytorch/pytorch/pull/8660#discussion_r197170092", "pull_request_url": "https://api.github.com/repos/pytorch/pytorch/pulls/8660", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/197170092"}, "html": {"href": "https://github.com/pytorch/pytorch/pull/8660#discussion_r197170092"}, "pull_request": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/8660"}}, "body_html": "<p>did you do any measurements here?  Should we have a pointer on what to do if you are not in a memory bound case?</p>", "body_text": "did you do any measurements here?  Should we have a pointer on what to do if you are not in a memory bound case?"}