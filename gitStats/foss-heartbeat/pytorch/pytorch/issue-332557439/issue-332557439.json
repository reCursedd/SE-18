{"url": "https://api.github.com/repos/pytorch/pytorch/issues/8516", "repository_url": "https://api.github.com/repos/pytorch/pytorch", "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/8516/labels{/name}", "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/8516/comments", "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/8516/events", "html_url": "https://github.com/pytorch/pytorch/issues/8516", "id": 332557439, "node_id": "MDU6SXNzdWUzMzI1NTc0Mzk=", "number": 8516, "title": "[JIT] Better handle IntList arguments for ops like permute", "user": {"login": "jamesr66a", "id": 4685384, "node_id": "MDQ6VXNlcjQ2ODUzODQ=", "avatar_url": "https://avatars2.githubusercontent.com/u/4685384?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jamesr66a", "html_url": "https://github.com/jamesr66a", "followers_url": "https://api.github.com/users/jamesr66a/followers", "following_url": "https://api.github.com/users/jamesr66a/following{/other_user}", "gists_url": "https://api.github.com/users/jamesr66a/gists{/gist_id}", "starred_url": "https://api.github.com/users/jamesr66a/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jamesr66a/subscriptions", "organizations_url": "https://api.github.com/users/jamesr66a/orgs", "repos_url": "https://api.github.com/users/jamesr66a/repos", "events_url": "https://api.github.com/users/jamesr66a/events{/privacy}", "received_events_url": "https://api.github.com/users/jamesr66a/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 679953983, "node_id": "MDU6TGFiZWw2Nzk5NTM5ODM=", "url": "https://api.github.com/repos/pytorch/pytorch/labels/jit", "name": "jit", "color": "c5def5", "default": false}], "state": "closed", "locked": false, "assignee": {"login": "wanchaol", "id": 9443650, "node_id": "MDQ6VXNlcjk0NDM2NTA=", "avatar_url": "https://avatars2.githubusercontent.com/u/9443650?v=4", "gravatar_id": "", "url": "https://api.github.com/users/wanchaol", "html_url": "https://github.com/wanchaol", "followers_url": "https://api.github.com/users/wanchaol/followers", "following_url": "https://api.github.com/users/wanchaol/following{/other_user}", "gists_url": "https://api.github.com/users/wanchaol/gists{/gist_id}", "starred_url": "https://api.github.com/users/wanchaol/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/wanchaol/subscriptions", "organizations_url": "https://api.github.com/users/wanchaol/orgs", "repos_url": "https://api.github.com/users/wanchaol/repos", "events_url": "https://api.github.com/users/wanchaol/events{/privacy}", "received_events_url": "https://api.github.com/users/wanchaol/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "wanchaol", "id": 9443650, "node_id": "MDQ6VXNlcjk0NDM2NTA=", "avatar_url": "https://avatars2.githubusercontent.com/u/9443650?v=4", "gravatar_id": "", "url": "https://api.github.com/users/wanchaol", "html_url": "https://github.com/wanchaol", "followers_url": "https://api.github.com/users/wanchaol/followers", "following_url": "https://api.github.com/users/wanchaol/following{/other_user}", "gists_url": "https://api.github.com/users/wanchaol/gists{/gist_id}", "starred_url": "https://api.github.com/users/wanchaol/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/wanchaol/subscriptions", "organizations_url": "https://api.github.com/users/wanchaol/orgs", "repos_url": "https://api.github.com/users/wanchaol/repos", "events_url": "https://api.github.com/users/wanchaol/events{/privacy}", "received_events_url": "https://api.github.com/users/wanchaol/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 2, "created_at": "2018-06-14T20:44:12Z", "updated_at": "2018-08-23T22:11:42Z", "closed_at": "2018-08-23T22:11:42Z", "author_association": "CONTRIBUTOR", "body_html": "<p>The following tests show invocations of <code>permute</code> that are valid in Python but not script. We should make it so that the behavior of script matches the python arg parser, e.g. <a href=\"https://github.com/pytorch/pytorch/blob/0829d4502de40c77f191e85983edf7f67a843c70/torch/csrc/utils/python_arg_parser.cpp\">https://github.com/pytorch/pytorch/blob/0829d4502de40c77f191e85983edf7f67a843c70/torch/csrc/utils/python_arg_parser.cpp</a>:</p>\n<pre><code>\n======================================================================\nERROR: test_permute (__main__.TestAutogradGenerated)\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"test/test_autograd.py\", line 3665, in do_test\n    check(name)\n  File \"test/test_autograd.py\", line 3592, in check\n    fn, (self_variable,) + args_variable)\n  File \"test/test_autograd.py\", line 3498, in check_against_reference\n    outputs_test = func(*nograd_inputs)\n  File \"test/test_autograd.py\", line 3473, in script_fn\n    CU = torch.jit.CompilationUnit(script)\n  File \"/data/users/zdevito/pytorch/torch/jit/__init__.py\", line 352, in __init__\n    self.define(lang, _frames_up=_frames_up + 1)\n  File \"/data/users/zdevito/pytorch/torch/jit/__init__.py\", line 358, in define\n    self.module._define(lang, rcb, False)\nRuntimeError: \narguments for call are not valid:\n  \n  for operator permute(Tensor self, IntList dims):\n  expected at most 2 arguments  but found 5\n  \n  def the_method(i0):\n      return i0.permute(0, 2, 3, 1)\n             ~~~~~~~~~~ &lt;--- HERE\n  \nfor call at:\n\ndef the_method(i0):\n    return i0.permute(0, 2, 3, 1)\n           ~~~~~~~~~~ &lt;--- HERE\n\n\n======================================================================\nERROR: test_permute_neg_dim (__main__.TestAutogradGenerated)\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"test/test_autograd.py\", line 3665, in do_test\n    check(name)\n  File \"test/test_autograd.py\", line 3592, in check\n    fn, (self_variable,) + args_variable)\n  File \"test/test_autograd.py\", line 3498, in check_against_reference\n    outputs_test = func(*nograd_inputs)\n  File \"test/test_autograd.py\", line 3473, in script_fn\n    CU = torch.jit.CompilationUnit(script)\n  File \"/data/users/zdevito/pytorch/torch/jit/__init__.py\", line 352, in __init__\n    self.define(lang, _frames_up=_frames_up + 1)\n  File \"/data/users/zdevito/pytorch/torch/jit/__init__.py\", line 358, in define\n    self.module._define(lang, rcb, False)\nRuntimeError: \narguments for call are not valid:\n  \n  for operator permute(Tensor self, IntList dims):\n  expected at most 2 arguments  but found 5\n  \n  def the_method(i0):\n      return i0.permute(0, -2, -1, 1)\n             ~~~~~~~~~~ &lt;--- HERE\n  \nfor call at:\n\ndef the_method(i0):\n    return i0.permute(0, -2, -1, 1)\n           ~~~~~~~~~~ &lt;--- HERE\n</code></pre>\n<p>We should probably improve this.</p>\n<p>Affected tests:</p>\n<ul>\n<li><code>test_permute</code></li>\n<li><code>test_permute_neg_dim</code></li>\n<li><code>test_repeat</code></li>\n<li><code>test_repeat_scalar</code></li>\n<li><code>test_repeat_unsqueeze</code></li>\n<li><code>test_reshape</code></li>\n<li><code>test_view</code></li>\n<li><code>test_expand</code></li>\n<li><code>test_expand_1_element</code></li>\n<li><code>test_expand_new_dim</code></li>\n<li><code>test_expand_new_dim_front_old_front_1</code></li>\n<li><code>test_expand_scalar_to_dims</code></li>\n<li><code>test_expand_size</code></li>\n<li><code>test_repeat_single_number</code></li>\n<li><code>test_reshape_1d</code></li>\n<li><code>test_reshape_scalar_to_1d</code></li>\n<li><code>test_view_1d</code></li>\n<li><code>test_view_scalar_to_1d</code></li>\n</ul>", "body_text": "The following tests show invocations of permute that are valid in Python but not script. We should make it so that the behavior of script matches the python arg parser, e.g. https://github.com/pytorch/pytorch/blob/0829d4502de40c77f191e85983edf7f67a843c70/torch/csrc/utils/python_arg_parser.cpp:\n\n======================================================================\nERROR: test_permute (__main__.TestAutogradGenerated)\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"test/test_autograd.py\", line 3665, in do_test\n    check(name)\n  File \"test/test_autograd.py\", line 3592, in check\n    fn, (self_variable,) + args_variable)\n  File \"test/test_autograd.py\", line 3498, in check_against_reference\n    outputs_test = func(*nograd_inputs)\n  File \"test/test_autograd.py\", line 3473, in script_fn\n    CU = torch.jit.CompilationUnit(script)\n  File \"/data/users/zdevito/pytorch/torch/jit/__init__.py\", line 352, in __init__\n    self.define(lang, _frames_up=_frames_up + 1)\n  File \"/data/users/zdevito/pytorch/torch/jit/__init__.py\", line 358, in define\n    self.module._define(lang, rcb, False)\nRuntimeError: \narguments for call are not valid:\n  \n  for operator permute(Tensor self, IntList dims):\n  expected at most 2 arguments  but found 5\n  \n  def the_method(i0):\n      return i0.permute(0, 2, 3, 1)\n             ~~~~~~~~~~ <--- HERE\n  \nfor call at:\n\ndef the_method(i0):\n    return i0.permute(0, 2, 3, 1)\n           ~~~~~~~~~~ <--- HERE\n\n\n======================================================================\nERROR: test_permute_neg_dim (__main__.TestAutogradGenerated)\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"test/test_autograd.py\", line 3665, in do_test\n    check(name)\n  File \"test/test_autograd.py\", line 3592, in check\n    fn, (self_variable,) + args_variable)\n  File \"test/test_autograd.py\", line 3498, in check_against_reference\n    outputs_test = func(*nograd_inputs)\n  File \"test/test_autograd.py\", line 3473, in script_fn\n    CU = torch.jit.CompilationUnit(script)\n  File \"/data/users/zdevito/pytorch/torch/jit/__init__.py\", line 352, in __init__\n    self.define(lang, _frames_up=_frames_up + 1)\n  File \"/data/users/zdevito/pytorch/torch/jit/__init__.py\", line 358, in define\n    self.module._define(lang, rcb, False)\nRuntimeError: \narguments for call are not valid:\n  \n  for operator permute(Tensor self, IntList dims):\n  expected at most 2 arguments  but found 5\n  \n  def the_method(i0):\n      return i0.permute(0, -2, -1, 1)\n             ~~~~~~~~~~ <--- HERE\n  \nfor call at:\n\ndef the_method(i0):\n    return i0.permute(0, -2, -1, 1)\n           ~~~~~~~~~~ <--- HERE\n\nWe should probably improve this.\nAffected tests:\n\ntest_permute\ntest_permute_neg_dim\ntest_repeat\ntest_repeat_scalar\ntest_repeat_unsqueeze\ntest_reshape\ntest_view\ntest_expand\ntest_expand_1_element\ntest_expand_new_dim\ntest_expand_new_dim_front_old_front_1\ntest_expand_scalar_to_dims\ntest_expand_size\ntest_repeat_single_number\ntest_reshape_1d\ntest_reshape_scalar_to_1d\ntest_view_1d\ntest_view_scalar_to_1d", "body": "The following tests show invocations of `permute` that are valid in Python but not script. We should make it so that the behavior of script matches the python arg parser, e.g. https://github.com/pytorch/pytorch/blob/0829d4502de40c77f191e85983edf7f67a843c70/torch/csrc/utils/python_arg_parser.cpp:\r\n\r\n```\r\n\r\n======================================================================\r\nERROR: test_permute (__main__.TestAutogradGenerated)\r\n----------------------------------------------------------------------\r\nTraceback (most recent call last):\r\n  File \"test/test_autograd.py\", line 3665, in do_test\r\n    check(name)\r\n  File \"test/test_autograd.py\", line 3592, in check\r\n    fn, (self_variable,) + args_variable)\r\n  File \"test/test_autograd.py\", line 3498, in check_against_reference\r\n    outputs_test = func(*nograd_inputs)\r\n  File \"test/test_autograd.py\", line 3473, in script_fn\r\n    CU = torch.jit.CompilationUnit(script)\r\n  File \"/data/users/zdevito/pytorch/torch/jit/__init__.py\", line 352, in __init__\r\n    self.define(lang, _frames_up=_frames_up + 1)\r\n  File \"/data/users/zdevito/pytorch/torch/jit/__init__.py\", line 358, in define\r\n    self.module._define(lang, rcb, False)\r\nRuntimeError: \r\narguments for call are not valid:\r\n  \r\n  for operator permute(Tensor self, IntList dims):\r\n  expected at most 2 arguments  but found 5\r\n  \r\n  def the_method(i0):\r\n      return i0.permute(0, 2, 3, 1)\r\n             ~~~~~~~~~~ <--- HERE\r\n  \r\nfor call at:\r\n\r\ndef the_method(i0):\r\n    return i0.permute(0, 2, 3, 1)\r\n           ~~~~~~~~~~ <--- HERE\r\n\r\n\r\n======================================================================\r\nERROR: test_permute_neg_dim (__main__.TestAutogradGenerated)\r\n----------------------------------------------------------------------\r\nTraceback (most recent call last):\r\n  File \"test/test_autograd.py\", line 3665, in do_test\r\n    check(name)\r\n  File \"test/test_autograd.py\", line 3592, in check\r\n    fn, (self_variable,) + args_variable)\r\n  File \"test/test_autograd.py\", line 3498, in check_against_reference\r\n    outputs_test = func(*nograd_inputs)\r\n  File \"test/test_autograd.py\", line 3473, in script_fn\r\n    CU = torch.jit.CompilationUnit(script)\r\n  File \"/data/users/zdevito/pytorch/torch/jit/__init__.py\", line 352, in __init__\r\n    self.define(lang, _frames_up=_frames_up + 1)\r\n  File \"/data/users/zdevito/pytorch/torch/jit/__init__.py\", line 358, in define\r\n    self.module._define(lang, rcb, False)\r\nRuntimeError: \r\narguments for call are not valid:\r\n  \r\n  for operator permute(Tensor self, IntList dims):\r\n  expected at most 2 arguments  but found 5\r\n  \r\n  def the_method(i0):\r\n      return i0.permute(0, -2, -1, 1)\r\n             ~~~~~~~~~~ <--- HERE\r\n  \r\nfor call at:\r\n\r\ndef the_method(i0):\r\n    return i0.permute(0, -2, -1, 1)\r\n           ~~~~~~~~~~ <--- HERE\r\n```\r\n\r\nWe should probably improve this.\r\n\r\nAffected tests:\r\n- `test_permute`\r\n- `test_permute_neg_dim`\r\n- `test_repeat`\r\n- `test_repeat_scalar`\r\n- `test_repeat_unsqueeze`\r\n- `test_reshape`\r\n- `test_view`\r\n- `test_expand`\r\n- `test_expand_1_element`\r\n- `test_expand_new_dim`\r\n- `test_expand_new_dim_front_old_front_1`\r\n- `test_expand_scalar_to_dims`\r\n- `test_expand_size`\r\n- `test_repeat_single_number`\r\n- `test_reshape_1d`\r\n- `test_reshape_scalar_to_1d`\r\n- `test_view_1d`\r\n- `test_view_scalar_to_1d`"}