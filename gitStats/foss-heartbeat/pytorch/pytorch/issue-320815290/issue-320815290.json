{"url": "https://api.github.com/repos/pytorch/pytorch/issues/7338", "repository_url": "https://api.github.com/repos/pytorch/pytorch", "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/7338/labels{/name}", "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/7338/comments", "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/7338/events", "html_url": "https://github.com/pytorch/pytorch/issues/7338", "id": 320815290, "node_id": "MDU6SXNzdWUzMjA4MTUyOTA=", "number": 7338, "title": "[feature request] Possibility of returning only require_grad parameters in Module.parameters()", "user": {"login": "domaala", "id": 2824507, "node_id": "MDQ6VXNlcjI4MjQ1MDc=", "avatar_url": "https://avatars1.githubusercontent.com/u/2824507?v=4", "gravatar_id": "", "url": "https://api.github.com/users/domaala", "html_url": "https://github.com/domaala", "followers_url": "https://api.github.com/users/domaala/followers", "following_url": "https://api.github.com/users/domaala/following{/other_user}", "gists_url": "https://api.github.com/users/domaala/gists{/gist_id}", "starred_url": "https://api.github.com/users/domaala/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/domaala/subscriptions", "organizations_url": "https://api.github.com/users/domaala/orgs", "repos_url": "https://api.github.com/users/domaala/repos", "events_url": "https://api.github.com/users/domaala/events{/privacy}", "received_events_url": "https://api.github.com/users/domaala/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 8, "created_at": "2018-05-07T13:58:11Z", "updated_at": "2018-06-14T15:05:17Z", "closed_at": "2018-05-09T15:35:12Z", "author_association": "CONTRIBUTOR", "body_html": "<p>Quite a few times I've encountered the situation where, instead of</p>\n<pre><code>Adam(model.parameters()), lr=1e-3)\n</code></pre>\n<p>I need to use</p>\n<pre><code>Adam(filter(lambda p: p.requires_grad, model.parameters()), lr=1e-3)\n</code></pre>\n<p>to avoid the exception of trying to optimize the parameters that do not require it. Honestly, this looks a bit ugly. I propose either including the <code>only_grad</code> flag in the <code>parameters()</code> method, or include a method <code>grad_parameters()</code>, both of which would result in a method returning only the parameters that have <code>requires_grad </code>set to <code>True</code>.</p>\n<p>If this has been tackled before, sorry about that; I've tried searching through both closed and open issues, but I wasn't able to find what I was looking for. In case the feature idea sounds plausible, I could make a PR for it.</p>", "body_text": "Quite a few times I've encountered the situation where, instead of\nAdam(model.parameters()), lr=1e-3)\n\nI need to use\nAdam(filter(lambda p: p.requires_grad, model.parameters()), lr=1e-3)\n\nto avoid the exception of trying to optimize the parameters that do not require it. Honestly, this looks a bit ugly. I propose either including the only_grad flag in the parameters() method, or include a method grad_parameters(), both of which would result in a method returning only the parameters that have requires_grad set to True.\nIf this has been tackled before, sorry about that; I've tried searching through both closed and open issues, but I wasn't able to find what I was looking for. In case the feature idea sounds plausible, I could make a PR for it.", "body": "Quite a few times I've encountered the situation where, instead of\r\n\r\n```\r\nAdam(model.parameters()), lr=1e-3)\r\n```\r\nI need to use\r\n```\r\nAdam(filter(lambda p: p.requires_grad, model.parameters()), lr=1e-3)\r\n```\r\nto avoid the exception of trying to optimize the parameters that do not require it. Honestly, this looks a bit ugly. I propose either including the `only_grad` flag in the `parameters()` method, or include a method `grad_parameters()`, both of which would result in a method returning only the parameters that have `requires_grad `set to `True`.\r\n\r\nIf this has been tackled before, sorry about that; I've tried searching through both closed and open issues, but I wasn't able to find what I was looking for. In case the feature idea sounds plausible, I could make a PR for it.\r\n"}