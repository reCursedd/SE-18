{"url": "https://api.github.com/repos/pytorch/pytorch/issues/comments/364510835", "html_url": "https://github.com/pytorch/pytorch/pull/4950#issuecomment-364510835", "issue_url": "https://api.github.com/repos/pytorch/pytorch/issues/4950", "id": 364510835, "node_id": "MDEyOklzc3VlQ29tbWVudDM2NDUxMDgzNQ==", "user": {"login": "fritzo", "id": 648532, "node_id": "MDQ6VXNlcjY0ODUzMg==", "avatar_url": "https://avatars0.githubusercontent.com/u/648532?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fritzo", "html_url": "https://github.com/fritzo", "followers_url": "https://api.github.com/users/fritzo/followers", "following_url": "https://api.github.com/users/fritzo/following{/other_user}", "gists_url": "https://api.github.com/users/fritzo/gists{/gist_id}", "starred_url": "https://api.github.com/users/fritzo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fritzo/subscriptions", "organizations_url": "https://api.github.com/users/fritzo/orgs", "repos_url": "https://api.github.com/users/fritzo/repos", "events_url": "https://api.github.com/users/fritzo/events{/privacy}", "received_events_url": "https://api.github.com/users/fritzo/received_events", "type": "User", "site_admin": false}, "created_at": "2018-02-09T18:03:12Z", "updated_at": "2018-02-09T18:08:06Z", "author_association": "CONTRIBUTOR", "body_html": "<p>Ok I just pushed a one-line workaround to the failed test. The reason if failed in this PR is that <a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=1396856\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/tbrx\">@tbrx</a> inserted a <code>MultivariateNormal</code> in <code>EXAMPLES</code> above <code>TransformedDistribution</code>, thereby changing the randomness in a <code>TransformedDistribution</code> example.</p>\n<p>There is a real issue in <code>TransformedDistribution.cdf()</code> and <code>.icdf()</code> where an assumption is made that the transform is monotone increasing rather than monotone decreasing. This came up in this PR because an <code>AffineTransform</code> set <code>scale &lt; 0</code>. I'm not sure what is the right thing to do here, i.e. whether there is a generic method to determine whether a transform is monotone increasing or decreasing. I've filed a bug at <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load issue title\" data-id=\"295958342\" data-permission-text=\"Issue title is private\" data-url=\"https://github.com/probtorch/pytorch/issues/127\" data-hovercard-type=\"issue\" data-hovercard-url=\"/probtorch/pytorch/issues/127/hovercard\" href=\"https://github.com/probtorch/pytorch/issues/127\">probtorch#127</a></p>", "body_text": "Ok I just pushed a one-line workaround to the failed test. The reason if failed in this PR is that @tbrx inserted a MultivariateNormal in EXAMPLES above TransformedDistribution, thereby changing the randomness in a TransformedDistribution example.\nThere is a real issue in TransformedDistribution.cdf() and .icdf() where an assumption is made that the transform is monotone increasing rather than monotone decreasing. This came up in this PR because an AffineTransform set scale < 0. I'm not sure what is the right thing to do here, i.e. whether there is a generic method to determine whether a transform is monotone increasing or decreasing. I've filed a bug at probtorch#127", "body": "Ok I just pushed a one-line workaround to the failed test. The reason if failed in this PR is that @tbrx inserted a `MultivariateNormal` in `EXAMPLES` above `TransformedDistribution`, thereby changing the randomness in a `TransformedDistribution` example.\r\n\r\nThere is a real issue in `TransformedDistribution.cdf()` and `.icdf()` where an assumption is made that the transform is monotone increasing rather than monotone decreasing. This came up in this PR because an `AffineTransform` set `scale < 0`. I'm not sure what is the right thing to do here, i.e. whether there is a generic method to determine whether a transform is monotone increasing or decreasing. I've filed a bug at https://github.com/probtorch/pytorch/issues/127"}