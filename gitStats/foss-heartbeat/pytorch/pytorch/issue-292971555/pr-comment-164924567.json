{"url": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/164924567", "pull_request_review_id": 92774434, "id": 164924567, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE2NDkyNDU2Nw==", "diff_hunk": "@@ -0,0 +1,154 @@\n+import math\n+from numbers import Number\n+\n+import torch\n+from torch.autograd import Variable\n+from torch.distributions import constraints\n+from torch.distributions.distribution import Distribution\n+from torch.distributions.utils import broadcast_all, lazy_property\n+\n+\n+def _get_batch_shape(bmat, bvec):\n+    \"\"\"\n+    Given a batch of matrices and a batch of vectors, compute the combined `batch_shape`.\n+    \"\"\"\n+    try:\n+        vec_shape = torch._C._infer_size(bvec.shape, bmat.shape[:-1])\n+    except RuntimeError:\n+        raise ValueError(\"Incompatible batch shapes: vector {}, matrix {}\".format(bvec.shape, bmat.shape))\n+    return torch.Size(vec_shape[:-1])\n+\n+\n+def _batch_mv(bmat, bvec):\n+    \"\"\"\n+    Performs a batched matrix-vector product, with an arbitrary batch shape.\n+    \"\"\"\n+    batch_shape = bvec.shape[:-1]\n+    event_dim = bvec.shape[-1]\n+    bmat = bmat.expand(batch_shape + (event_dim, event_dim))\n+    if batch_shape != bmat.shape[:-2]:\n+        raise ValueError(\"Batch shapes do not match: matrix {}, vector {}\".format(bmat.shape, bvec.shape))\n+    bvec = bvec.unsqueeze(-1)\n+    \n+    # conform with `torch.bmm` interface, for matrices with `.dim() == 3`\n+    if bvec.dim() == 2:\n+        bvec.unsqueeze(0) #_\n+     # flatten batch dimensions\n+    bvec = bvec.contiguous().view((-1, event_dim, 1))\n+    bmat = bmat.contiguous().view((-1, event_dim, event_dim)).expand((bvec.shape[0], -1, -1))\n+    return torch.bmm(bmat, bvec).squeeze(-1).view(batch_shape+(event_dim,)) \n+\n+\n+def _batch_potrf_lower(bmat):\n+    \"\"\"\n+    Applies a Cholesky decomposition to all matrices in a batch of arbitrary shape.\n+    \"\"\"\n+    n = bmat.size(-1)\n+    cholesky = torch.stack([C.potrf(upper=False) for C in bmat.unsqueeze(0).contiguous().view((-1,n,n))])\n+    return cholesky.view(bmat.shape)\n+\n+\n+def _batch_diag(bmat):\n+    \"\"\"\n+    Returns the diagonals of a batch of square matrices.\n+    \"\"\"\n+    n = bmat.size(-1)\n+    dims = torch.arange(n, out=bmat.new(n)).long()\n+    if isinstance(dims, Variable):\n+        dims = dims.data # TODO: why can't I index with a Variable?\n+    return bmat[...,dims,dims]", "path": "torch/distributions/multivariate_normal.py", "position": null, "original_position": 59, "commit_id": "34e77b6002e95a3ff46320473772fb7c99479980", "original_commit_id": "4ea67b2456f617fa119fe3eb6aa109e8a278571a", "user": {"login": "tbrx", "id": 1396856, "node_id": "MDQ6VXNlcjEzOTY4NTY=", "avatar_url": "https://avatars0.githubusercontent.com/u/1396856?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tbrx", "html_url": "https://github.com/tbrx", "followers_url": "https://api.github.com/users/tbrx/followers", "following_url": "https://api.github.com/users/tbrx/following{/other_user}", "gists_url": "https://api.github.com/users/tbrx/gists{/gist_id}", "starred_url": "https://api.github.com/users/tbrx/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tbrx/subscriptions", "organizations_url": "https://api.github.com/users/tbrx/orgs", "repos_url": "https://api.github.com/users/tbrx/repos", "events_url": "https://api.github.com/users/tbrx/events{/privacy}", "received_events_url": "https://api.github.com/users/tbrx/received_events", "type": "User", "site_admin": false}, "body": "That's totally awesome. Updated.", "created_at": "2018-01-31T00:42:40Z", "updated_at": "2018-11-23T15:38:48Z", "html_url": "https://github.com/pytorch/pytorch/pull/4950#discussion_r164924567", "pull_request_url": "https://api.github.com/repos/pytorch/pytorch/pulls/4950", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/164924567"}, "html": {"href": "https://github.com/pytorch/pytorch/pull/4950#discussion_r164924567"}, "pull_request": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/4950"}}, "body_html": "<p>That's totally awesome. Updated.</p>", "body_text": "That's totally awesome. Updated.", "in_reply_to_id": 164910696}