{"url": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/157229706", "pull_request_review_id": 83843032, "id": 157229706, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE1NzIyOTcwNg==", "diff_hunk": "@@ -19,15 +27,31 @@ autograd::variable_list InterpreterAutogradFunction::apply(\n   const auto & details = stage_details_[stage_];\n \n   // Validate inputs\n-  for (std::size_t i = 0; i < (std::size_t)num_inputs; ++i) {\n-    if (!details.input_flags[i].verify(inputs[i])) {\n-      throw std::runtime_error(\"JIT interpreter received inputs with different \"\n-          \"flags than it was compiled for.\");\n+  std::vector<at::Tensor> tinputs;\n+  tinputs.reserve(inputs.size());\n+  TORCH_ASSERT(inputs.size() == num_inputs);\n+  TORCH_ASSERT(inputs.size() == details.input_flags.size());\n+  for (std::size_t i = 0; i < (std::size_t)inputs.size(); ++i) {\n+    if(stage_ > 0 && !inputs[i].defined() && !details.input_flags[i].was_null) {\n+      // [Temporary workaround for variants] until tracer produces all variants:\n+      // if you have a function x, y = fn(z) and only use x then gradient for y\n+      // will be undefined. If you reuse the same trace with and _sometimes_ use y\n+      // then in the cases where you don't use it, the grad_y input in stage 1\n+      // will be undefined. To ensure we can continue, we create a 0 gradient,\n+      // using trace information to figure out what shape it should be\n+      tinputs.push_back(zeroTensorWithType(interp_.tensorTypeForInput(i)));", "path": "torch/csrc/jit/interpreter_autograd_function.cpp", "position": 35, "original_position": 35, "commit_id": "a78a53612284de63e2dc433ada032058c862008d", "original_commit_id": "a78a53612284de63e2dc433ada032058c862008d", "user": {"login": "ezyang", "id": 13564, "node_id": "MDQ6VXNlcjEzNTY0", "avatar_url": "https://avatars0.githubusercontent.com/u/13564?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ezyang", "html_url": "https://github.com/ezyang", "followers_url": "https://api.github.com/users/ezyang/followers", "following_url": "https://api.github.com/users/ezyang/following{/other_user}", "gists_url": "https://api.github.com/users/ezyang/gists{/gist_id}", "starred_url": "https://api.github.com/users/ezyang/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ezyang/subscriptions", "organizations_url": "https://api.github.com/users/ezyang/orgs", "repos_url": "https://api.github.com/users/ezyang/repos", "events_url": "https://api.github.com/users/ezyang/events{/privacy}", "received_events_url": "https://api.github.com/users/ezyang/received_events", "type": "User", "site_admin": false}, "body": "Bye bye type erasure :o)", "created_at": "2017-12-15T15:38:47Z", "updated_at": "2018-11-23T15:37:25Z", "html_url": "https://github.com/pytorch/pytorch/pull/4191#discussion_r157229706", "pull_request_url": "https://api.github.com/repos/pytorch/pytorch/pulls/4191", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/157229706"}, "html": {"href": "https://github.com/pytorch/pytorch/pull/4191#discussion_r157229706"}, "pull_request": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/4191"}}, "body_html": "<p>Bye bye type erasure :o)</p>", "body_text": "Bye bye type erasure :o)"}