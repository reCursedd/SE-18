{"url": "https://api.github.com/repos/pytorch/pytorch/issues/comments/343065332", "html_url": "https://github.com/pytorch/pytorch/issues/3525#issuecomment-343065332", "issue_url": "https://api.github.com/repos/pytorch/pytorch/issues/3525", "id": 343065332, "node_id": "MDEyOklzc3VlQ29tbWVudDM0MzA2NTMzMg==", "user": {"login": "juliusshufan", "id": 33112206, "node_id": "MDQ6VXNlcjMzMTEyMjA2", "avatar_url": "https://avatars0.githubusercontent.com/u/33112206?v=4", "gravatar_id": "", "url": "https://api.github.com/users/juliusshufan", "html_url": "https://github.com/juliusshufan", "followers_url": "https://api.github.com/users/juliusshufan/followers", "following_url": "https://api.github.com/users/juliusshufan/following{/other_user}", "gists_url": "https://api.github.com/users/juliusshufan/gists{/gist_id}", "starred_url": "https://api.github.com/users/juliusshufan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/juliusshufan/subscriptions", "organizations_url": "https://api.github.com/users/juliusshufan/orgs", "repos_url": "https://api.github.com/users/juliusshufan/repos", "events_url": "https://api.github.com/users/juliusshufan/events{/privacy}", "received_events_url": "https://api.github.com/users/juliusshufan/received_events", "type": "User", "site_admin": false}, "created_at": "2017-11-09T07:03:32Z", "updated_at": "2017-11-09T07:03:32Z", "author_association": "NONE", "body_html": "<p><a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=5674597\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/SsnL\">@SsnL</a>, the benchmark entry is run.sh, it mainly set the OMP_NUM_THREADS per the CPU model, another two parameters select the parameters for LSTM (hidden layers, sentence length, etc.) and if backward computation time cost will be taken account of,<br>\ni.e. : with command \"<strong>./run.sh bdw train daily</strong>\" , CPU model is Broadwell.<br>\nYou will get the backward+forward benchmarks for the the two popular LSTM parameter combinations.<br>\nIf you use  \"<strong>./run.sh bdw daily</strong>\", you will get the forward-only benchmarks for the the two popular LSTM parameter combinations.</p>\n<p>You can extend the run.sh to support the CPU model you have, as long as the OMP_NUM_THREADS matching the CPU spec.</p>\n<p>Thanks.</p>", "body_text": "@SsnL, the benchmark entry is run.sh, it mainly set the OMP_NUM_THREADS per the CPU model, another two parameters select the parameters for LSTM (hidden layers, sentence length, etc.) and if backward computation time cost will be taken account of,\ni.e. : with command \"./run.sh bdw train daily\" , CPU model is Broadwell.\nYou will get the backward+forward benchmarks for the the two popular LSTM parameter combinations.\nIf you use  \"./run.sh bdw daily\", you will get the forward-only benchmarks for the the two popular LSTM parameter combinations.\nYou can extend the run.sh to support the CPU model you have, as long as the OMP_NUM_THREADS matching the CPU spec.\nThanks.", "body": "@SsnL, the benchmark entry is run.sh, it mainly set the OMP_NUM_THREADS per the CPU model, another two parameters select the parameters for LSTM (hidden layers, sentence length, etc.) and if backward computation time cost will be taken account of,\r\ni.e. : with command \"**./run.sh bdw train daily**\" , CPU model is Broadwell.\r\nYou will get the backward+forward benchmarks for the the two popular LSTM parameter combinations.\r\nIf you use  \"**./run.sh bdw daily**\", you will get the forward-only benchmarks for the the two popular LSTM parameter combinations.\r\n\r\nYou can extend the run.sh to support the CPU model you have, as long as the OMP_NUM_THREADS matching the CPU spec.\r\n\r\nThanks. "}