{"url": "https://api.github.com/repos/pytorch/pytorch/issues/comments/424473830", "html_url": "https://github.com/pytorch/pytorch/issues/12045#issuecomment-424473830", "issue_url": "https://api.github.com/repos/pytorch/pytorch/issues/12045", "id": 424473830, "node_id": "MDEyOklzc3VlQ29tbWVudDQyNDQ3MzgzMA==", "user": {"login": "steplee", "id": 5303539, "node_id": "MDQ6VXNlcjUzMDM1Mzk=", "avatar_url": "https://avatars1.githubusercontent.com/u/5303539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/steplee", "html_url": "https://github.com/steplee", "followers_url": "https://api.github.com/users/steplee/followers", "following_url": "https://api.github.com/users/steplee/following{/other_user}", "gists_url": "https://api.github.com/users/steplee/gists{/gist_id}", "starred_url": "https://api.github.com/users/steplee/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/steplee/subscriptions", "organizations_url": "https://api.github.com/users/steplee/orgs", "repos_url": "https://api.github.com/users/steplee/repos", "events_url": "https://api.github.com/users/steplee/events{/privacy}", "received_events_url": "https://api.github.com/users/steplee/received_events", "type": "User", "site_admin": false}, "created_at": "2018-09-25T19:37:49Z", "updated_at": "2018-09-25T19:46:15Z", "author_association": "NONE", "body_html": "<p>The idiomatic way to do it would be to write an Operator wrapping it, you can put it in the source tree in <code>caffe2/operators</code>, or build a shared object/archive to link against.</p>\n<p>It gets wrapped in python automatically. If you go the shared object route and want python access, you need to call <code>caffe2.python.dyndep.InitOpsLibrary('path/to/library')</code>.</p>", "body_text": "The idiomatic way to do it would be to write an Operator wrapping it, you can put it in the source tree in caffe2/operators, or build a shared object/archive to link against.\nIt gets wrapped in python automatically. If you go the shared object route and want python access, you need to call caffe2.python.dyndep.InitOpsLibrary('path/to/library').", "body": "The idiomatic way to do it would be to write an Operator wrapping it, you can put it in the source tree in `caffe2/operators`, or build a shared object/archive to link against.\r\n\r\nIt gets wrapped in python automatically. If you go the shared object route and want python access, you need to call `caffe2.python.dyndep.InitOpsLibrary('path/to/library')`."}