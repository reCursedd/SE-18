{"url": "https://api.github.com/repos/pytorch/pytorch/issues/comments/334190125", "html_url": "https://github.com/pytorch/pytorch/issues/2973#issuecomment-334190125", "issue_url": "https://api.github.com/repos/pytorch/pytorch/issues/2973", "id": 334190125, "node_id": "MDEyOklzc3VlQ29tbWVudDMzNDE5MDEyNQ==", "user": {"login": "kyunghyuncho", "id": 4028979, "node_id": "MDQ6VXNlcjQwMjg5Nzk=", "avatar_url": "https://avatars0.githubusercontent.com/u/4028979?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kyunghyuncho", "html_url": "https://github.com/kyunghyuncho", "followers_url": "https://api.github.com/users/kyunghyuncho/followers", "following_url": "https://api.github.com/users/kyunghyuncho/following{/other_user}", "gists_url": "https://api.github.com/users/kyunghyuncho/gists{/gist_id}", "starred_url": "https://api.github.com/users/kyunghyuncho/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kyunghyuncho/subscriptions", "organizations_url": "https://api.github.com/users/kyunghyuncho/orgs", "repos_url": "https://api.github.com/users/kyunghyuncho/repos", "events_url": "https://api.github.com/users/kyunghyuncho/events{/privacy}", "received_events_url": "https://api.github.com/users/kyunghyuncho/received_events", "type": "User", "site_admin": false}, "created_at": "2017-10-04T15:16:32Z", "updated_at": "2017-10-04T15:16:32Z", "author_association": "NONE", "body_html": "<p>yes, i can. though, many people (including many students in my lab) heavily rely on the loss functions available from pytorch, and having such an assertion expression in pytorch by default would be tremendously helpful.</p>", "body_text": "yes, i can. though, many people (including many students in my lab) heavily rely on the loss functions available from pytorch, and having such an assertion expression in pytorch by default would be tremendously helpful.", "body": "yes, i can. though, many people (including many students in my lab) heavily rely on the loss functions available from pytorch, and having such an assertion expression in pytorch by default would be tremendously helpful."}