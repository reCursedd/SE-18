{"url": "https://api.github.com/repos/pytorch/pytorch/issues/comments/336245576", "html_url": "https://github.com/pytorch/pytorch/issues/1442#issuecomment-336245576", "issue_url": "https://api.github.com/repos/pytorch/pytorch/issues/1442", "id": 336245576, "node_id": "MDEyOklzc3VlQ29tbWVudDMzNjI0NTU3Ng==", "user": {"login": "andreh7", "id": 2156379, "node_id": "MDQ6VXNlcjIxNTYzNzk=", "avatar_url": "https://avatars0.githubusercontent.com/u/2156379?v=4", "gravatar_id": "", "url": "https://api.github.com/users/andreh7", "html_url": "https://github.com/andreh7", "followers_url": "https://api.github.com/users/andreh7/followers", "following_url": "https://api.github.com/users/andreh7/following{/other_user}", "gists_url": "https://api.github.com/users/andreh7/gists{/gist_id}", "starred_url": "https://api.github.com/users/andreh7/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/andreh7/subscriptions", "organizations_url": "https://api.github.com/users/andreh7/orgs", "repos_url": "https://api.github.com/users/andreh7/repos", "events_url": "https://api.github.com/users/andreh7/events{/privacy}", "received_events_url": "https://api.github.com/users/andreh7/received_events", "type": "User", "site_admin": false}, "created_at": "2017-10-12T19:46:12Z", "updated_at": "2017-10-12T19:46:12Z", "author_association": "CONTRIBUTOR", "body_html": "<p>I'm facing the same problem as <a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=17319655\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/gregjohnso\">@gregjohnso</a> (resuming from a checkpointed optimizer state). I think <code>opt.set_gpu(model)</code> isn't well defined for all models, there examples of models running on more than one GPU (see <a href=\"http://pytorch.org/tutorials/beginner/former_torchies/parallelism_tutorial.html#dataparallel\" rel=\"nofollow\">http://pytorch.org/tutorials/beginner/former_torchies/parallelism_tutorial.html#dataparallel</a> ) or even on a combination of GPU and CPU (see <a href=\"http://pytorch.org/tutorials/beginner/former_torchies/parallelism_tutorial.html#part-of-the-model-on-cpu-and-part-on-the-gpu\" rel=\"nofollow\">http://pytorch.org/tutorials/beginner/former_torchies/parallelism_tutorial.html#part-of-the-model-on-cpu-and-part-on-the-gpu</a>).</p>\n<p>But I would definitively find methods <code>Optimizer.cuda(device_id)</code> and <code>Optimizer.cpu()</code> useful for continuing from persisted optimizers.</p>", "body_text": "I'm facing the same problem as @gregjohnso (resuming from a checkpointed optimizer state). I think opt.set_gpu(model) isn't well defined for all models, there examples of models running on more than one GPU (see http://pytorch.org/tutorials/beginner/former_torchies/parallelism_tutorial.html#dataparallel ) or even on a combination of GPU and CPU (see http://pytorch.org/tutorials/beginner/former_torchies/parallelism_tutorial.html#part-of-the-model-on-cpu-and-part-on-the-gpu).\nBut I would definitively find methods Optimizer.cuda(device_id) and Optimizer.cpu() useful for continuing from persisted optimizers.", "body": "I'm facing the same problem as @gregjohnso (resuming from a checkpointed optimizer state). I think `opt.set_gpu(model)` isn't well defined for all models, there examples of models running on more than one GPU (see http://pytorch.org/tutorials/beginner/former_torchies/parallelism_tutorial.html#dataparallel ) or even on a combination of GPU and CPU (see http://pytorch.org/tutorials/beginner/former_torchies/parallelism_tutorial.html#part-of-the-model-on-cpu-and-part-on-the-gpu).\r\n\r\nBut I would definitively find methods `Optimizer.cuda(device_id)` and `Optimizer.cpu()` useful for continuing from persisted optimizers."}