{"url": "https://api.github.com/repos/pytorch/pytorch/issues/7713", "repository_url": "https://api.github.com/repos/pytorch/pytorch", "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/7713/labels{/name}", "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/7713/comments", "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/7713/events", "html_url": "https://github.com/pytorch/pytorch/pull/7713", "id": 324690208, "node_id": "MDExOlB1bGxSZXF1ZXN0MTg5MjIzMDIy", "number": 7713, "title": "serialization for torch.device", "user": {"login": "ailzhang", "id": 5248122, "node_id": "MDQ6VXNlcjUyNDgxMjI=", "avatar_url": "https://avatars2.githubusercontent.com/u/5248122?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ailzhang", "html_url": "https://github.com/ailzhang", "followers_url": "https://api.github.com/users/ailzhang/followers", "following_url": "https://api.github.com/users/ailzhang/following{/other_user}", "gists_url": "https://api.github.com/users/ailzhang/gists{/gist_id}", "starred_url": "https://api.github.com/users/ailzhang/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ailzhang/subscriptions", "organizations_url": "https://api.github.com/users/ailzhang/orgs", "repos_url": "https://api.github.com/users/ailzhang/repos", "events_url": "https://api.github.com/users/ailzhang/events{/privacy}", "received_events_url": "https://api.github.com/users/ailzhang/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2018-05-20T07:35:50Z", "updated_at": "2018-11-23T15:44:22Z", "closed_at": "2018-05-21T09:34:27Z", "author_association": "CONTRIBUTOR", "pull_request": {"url": "https://api.github.com/repos/pytorch/pytorch/pulls/7713", "html_url": "https://github.com/pytorch/pytorch/pull/7713", "diff_url": "https://github.com/pytorch/pytorch/pull/7713.diff", "patch_url": "https://github.com/pytorch/pytorch/pull/7713.patch"}, "body_html": "<p>This PR addresses <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load issue title\" data-id=\"322667115\" data-permission-text=\"Issue title is private\" data-url=\"https://github.com/pytorch/pytorch/issues/7545\" data-hovercard-type=\"issue\" data-hovercard-url=\"/pytorch/pytorch/issues/7545/hovercard\" href=\"https://github.com/pytorch/pytorch/issues/7545\">#7545</a> .<br>\nImplement <strong>reduce</strong> for <code>torch.device</code> to return a new <code>torch.device</code> object with the same device type &amp; index.<br>\nNote this <code>torch.device</code> is slightly different in the sense that <code>copy.deepcopy()</code> returns a new object instead of the same one in <code>torch.dtype</code>.<br>\nAlso added a test in test_torch to show how module object can be serialized. Nit: it doesn't work if NetwithDevice class is put inside test_save_net_with_device() function. This is due to <code>net</code> being an instance of <code>&lt;class '__main__.TestTorch.test_save_net_with_device.&lt;locals&gt;.NetwithDevice'&gt;</code> and <code>TestTorch</code> is not serializable(no <strong>getstate</strong> implemented). I can't think of a better way to change the class scope than putting it outside. Let me know if you have a better idea.</p>", "body_text": "This PR addresses #7545 .\nImplement reduce for torch.device to return a new torch.device object with the same device type & index.\nNote this torch.device is slightly different in the sense that copy.deepcopy() returns a new object instead of the same one in torch.dtype.\nAlso added a test in test_torch to show how module object can be serialized. Nit: it doesn't work if NetwithDevice class is put inside test_save_net_with_device() function. This is due to net being an instance of <class '__main__.TestTorch.test_save_net_with_device.<locals>.NetwithDevice'> and TestTorch is not serializable(no getstate implemented). I can't think of a better way to change the class scope than putting it outside. Let me know if you have a better idea.", "body": "This PR addresses #7545 .\r\nImplement __reduce__ for `torch.device` to return a new `torch.device` object with the same device type & index. \r\nNote this `torch.device` is slightly different in the sense that `copy.deepcopy()` returns a new object instead of the same one in `torch.dtype`. \r\nAlso added a test in test_torch to show how module object can be serialized. Nit: it doesn't work if NetwithDevice class is put inside test_save_net_with_device() function. This is due to `net` being an instance of `<class '__main__.TestTorch.test_save_net_with_device.<locals>.NetwithDevice'>` and `TestTorch` is not serializable(no __getstate__ implemented). I can't think of a better way to change the class scope than putting it outside. Let me know if you have a better idea."}