{"url": "https://api.github.com/repos/pytorch/pytorch/issues/6512", "repository_url": "https://api.github.com/repos/pytorch/pytorch", "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/6512/labels{/name}", "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/6512/comments", "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/6512/events", "html_url": "https://github.com/pytorch/pytorch/issues/6512", "id": 313433581, "node_id": "MDU6SXNzdWUzMTM0MzM1ODE=", "number": 6512, "title": "Scalar operations are traced incorrectly", "user": {"login": "apaszke", "id": 4583066, "node_id": "MDQ6VXNlcjQ1ODMwNjY=", "avatar_url": "https://avatars3.githubusercontent.com/u/4583066?v=4", "gravatar_id": "", "url": "https://api.github.com/users/apaszke", "html_url": "https://github.com/apaszke", "followers_url": "https://api.github.com/users/apaszke/followers", "following_url": "https://api.github.com/users/apaszke/following{/other_user}", "gists_url": "https://api.github.com/users/apaszke/gists{/gist_id}", "starred_url": "https://api.github.com/users/apaszke/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/apaszke/subscriptions", "organizations_url": "https://api.github.com/users/apaszke/orgs", "repos_url": "https://api.github.com/users/apaszke/repos", "events_url": "https://api.github.com/users/apaszke/events{/privacy}", "received_events_url": "https://api.github.com/users/apaszke/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 424131847, "node_id": "MDU6TGFiZWw0MjQxMzE4NDc=", "url": "https://api.github.com/repos/pytorch/pytorch/labels/bug", "name": "bug", "color": "b60205", "default": true}, {"id": 679953983, "node_id": "MDU6TGFiZWw2Nzk5NTM5ODM=", "url": "https://api.github.com/repos/pytorch/pytorch/labels/jit", "name": "jit", "color": "c5def5", "default": false}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-04-11T18:15:54Z", "updated_at": "2018-06-12T19:13:50Z", "closed_at": "2018-06-12T19:13:50Z", "author_association": "MEMBER", "body_html": "<p>This code:</p>\n<div class=\"highlight highlight-source-python\"><pre><span class=\"pl-k\">import</span> torch                                    \n                                                \nx <span class=\"pl-k\">=</span> torch.randn(<span class=\"pl-c1\">5</span>, <span class=\"pl-c1\">2</span>)                           \ny <span class=\"pl-k\">=</span> torch.tensor(<span class=\"pl-c1\">2</span>.)                                                          \n<span class=\"pl-k\">def</span> <span class=\"pl-en\">fn</span>(<span class=\"pl-smi\">x</span>, <span class=\"pl-smi\">y</span>):                                   \n    <span class=\"pl-k\">return</span> x <span class=\"pl-k\">+</span> y                                \ntrace, _ <span class=\"pl-k\">=</span> torch.jit.get_trace_graph(fn, (x, y))\n<span class=\"pl-c1\">print</span>(trace.graph())                            </pre></div>\n<p>prints</p>\n<pre><code>graph(%0 : Float(5, 2)\n      %1 : Float()) {\n  %2 : Float(5, 2) = aten::add[other={2}, alpha={1}](%0)\n  return (%2);\n}\n</code></pre>\n<p>because it's not using the tensor overload. We should change the dispatch code to never use the scalar overloads when they really are tensors.</p>", "body_text": "This code:\nimport torch                                    \n                                                \nx = torch.randn(5, 2)                           \ny = torch.tensor(2.)                                                          \ndef fn(x, y):                                   \n    return x + y                                \ntrace, _ = torch.jit.get_trace_graph(fn, (x, y))\nprint(trace.graph())                            \nprints\ngraph(%0 : Float(5, 2)\n      %1 : Float()) {\n  %2 : Float(5, 2) = aten::add[other={2}, alpha={1}](%0)\n  return (%2);\n}\n\nbecause it's not using the tensor overload. We should change the dispatch code to never use the scalar overloads when they really are tensors.", "body": "This code:\r\n```python\r\nimport torch                                    \r\n                                                \r\nx = torch.randn(5, 2)                           \r\ny = torch.tensor(2.)                                                          \r\ndef fn(x, y):                                   \r\n    return x + y                                \r\ntrace, _ = torch.jit.get_trace_graph(fn, (x, y))\r\nprint(trace.graph())                            \r\n```\r\nprints\r\n```\r\ngraph(%0 : Float(5, 2)\r\n      %1 : Float()) {\r\n  %2 : Float(5, 2) = aten::add[other={2}, alpha={1}](%0)\r\n  return (%2);\r\n}\r\n```\r\nbecause it's not using the tensor overload. We should change the dispatch code to never use the scalar overloads when they really are tensors."}