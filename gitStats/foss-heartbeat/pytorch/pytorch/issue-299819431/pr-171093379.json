{"url": "https://api.github.com/repos/pytorch/pytorch/pulls/5382", "id": 171093379, "node_id": "MDExOlB1bGxSZXF1ZXN0MTcxMDkzMzc5", "html_url": "https://github.com/pytorch/pytorch/pull/5382", "diff_url": "https://github.com/pytorch/pytorch/pull/5382.diff", "patch_url": "https://github.com/pytorch/pytorch/pull/5382.patch", "issue_url": "https://api.github.com/repos/pytorch/pytorch/issues/5382", "number": 5382, "state": "open", "locked": false, "title": "Weight & Bias initializers for Linear, Conv, RNN", "user": {"login": "kevinzakka", "id": 10518920, "node_id": "MDQ6VXNlcjEwNTE4OTIw", "avatar_url": "https://avatars1.githubusercontent.com/u/10518920?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kevinzakka", "html_url": "https://github.com/kevinzakka", "followers_url": "https://api.github.com/users/kevinzakka/followers", "following_url": "https://api.github.com/users/kevinzakka/following{/other_user}", "gists_url": "https://api.github.com/users/kevinzakka/gists{/gist_id}", "starred_url": "https://api.github.com/users/kevinzakka/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kevinzakka/subscriptions", "organizations_url": "https://api.github.com/users/kevinzakka/orgs", "repos_url": "https://api.github.com/users/kevinzakka/repos", "events_url": "https://api.github.com/users/kevinzakka/events{/privacy}", "received_events_url": "https://api.github.com/users/kevinzakka/received_events", "type": "User", "site_admin": false}, "body": "As mentioned in #5370, here's what adding weight and bias string args to some of the layers could look like.\r\n```python\r\n# use a string\r\nx = nn.Linear(784, 512, weight_init='xavier_uniform', bias_init='zeros')\r\n\r\n# use a function\r\nx = nn.Linear(784, 512, weight_init=init.uniform(-5, 5))\r\nx = nn.Linear(784, 512, weight_init=init.xavier_uniform(gain=init.calculate_gain('tanh')))\r\n```\r\n\r\nExample of backwards-compatibility:\r\n```python\r\nw = torch.randn(2, 2)\r\nnn.init.constant(w, 1) # prints [[1, 1], [1, 1]]\r\nnn.init.Constant(0)(w) # prints [[0, 0], [0, 0]]\r\n```\r\n\r\nFinally, test to show that new implementation of `kaiming` and `xavier` work:\r\n```python\r\n# same size input and output -> in = out = average -> approx same std\r\nW = torch.randn(700, 700)\r\nxavier = nn.init.xavier_uniform(W.clone(), gain=nn.init.calculate_gain('relu'))\r\nkaiming = nn.init.kaiming_uniform(W.clone())\r\nprint(torch.std(xavier)) # prints 0.053412361240471495\r\nprint(torch.std(kaiming)) # prints 0.05350749617735303\r\n\r\n# diff size input and output -> but fan set to avg -> approx same std\r\nW = torch.randn(700, 500)\r\nxavier = nn.init.xavier_uniform(W.clone(), gain=nn.init.calculate_gain('relu'))\r\nkaiming = nn.init.kaiming_uniform(W.clone(), mode=\"fan_avg\")\r\nprint(torch.std(xavier)) # prints 0.057737772865026314\r\nprint(torch.std(kaiming)) # prints 0.057677882183886975\r\n```\r\n\r\nAlso added `selu` support to `calculate_gain`.", "created_at": "2018-02-23T19:12:49Z", "updated_at": "2018-11-23T15:43:36Z", "closed_at": null, "merged_at": null, "merge_commit_sha": "075501487e5110b8ecb2f03654b0d31ea3f38666", "assignee": null, "assignees": [], "requested_reviewers": [{"login": "ezyang", "id": 13564, "node_id": "MDQ6VXNlcjEzNTY0", "avatar_url": "https://avatars0.githubusercontent.com/u/13564?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ezyang", "html_url": "https://github.com/ezyang", "followers_url": "https://api.github.com/users/ezyang/followers", "following_url": "https://api.github.com/users/ezyang/following{/other_user}", "gists_url": "https://api.github.com/users/ezyang/gists{/gist_id}", "starred_url": "https://api.github.com/users/ezyang/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ezyang/subscriptions", "organizations_url": "https://api.github.com/users/ezyang/orgs", "repos_url": "https://api.github.com/users/ezyang/repos", "events_url": "https://api.github.com/users/ezyang/events{/privacy}", "received_events_url": "https://api.github.com/users/ezyang/received_events", "type": "User", "site_admin": false}, {"login": "zdevito", "id": 370202, "node_id": "MDQ6VXNlcjM3MDIwMg==", "avatar_url": "https://avatars0.githubusercontent.com/u/370202?v=4", "gravatar_id": "", "url": "https://api.github.com/users/zdevito", "html_url": "https://github.com/zdevito", "followers_url": "https://api.github.com/users/zdevito/followers", "following_url": "https://api.github.com/users/zdevito/following{/other_user}", "gists_url": "https://api.github.com/users/zdevito/gists{/gist_id}", "starred_url": "https://api.github.com/users/zdevito/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/zdevito/subscriptions", "organizations_url": "https://api.github.com/users/zdevito/orgs", "repos_url": "https://api.github.com/users/zdevito/repos", "events_url": "https://api.github.com/users/zdevito/events{/privacy}", "received_events_url": "https://api.github.com/users/zdevito/received_events", "type": "User", "site_admin": false}, {"login": "colesbury", "id": 655866, "node_id": "MDQ6VXNlcjY1NTg2Ng==", "avatar_url": "https://avatars1.githubusercontent.com/u/655866?v=4", "gravatar_id": "", "url": "https://api.github.com/users/colesbury", "html_url": "https://github.com/colesbury", "followers_url": "https://api.github.com/users/colesbury/followers", "following_url": "https://api.github.com/users/colesbury/following{/other_user}", "gists_url": "https://api.github.com/users/colesbury/gists{/gist_id}", "starred_url": "https://api.github.com/users/colesbury/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/colesbury/subscriptions", "organizations_url": "https://api.github.com/users/colesbury/orgs", "repos_url": "https://api.github.com/users/colesbury/repos", "events_url": "https://api.github.com/users/colesbury/events{/privacy}", "received_events_url": "https://api.github.com/users/colesbury/received_events", "type": "User", "site_admin": false}, {"login": "soumith", "id": 1310570, "node_id": "MDQ6VXNlcjEzMTA1NzA=", "avatar_url": "https://avatars0.githubusercontent.com/u/1310570?v=4", "gravatar_id": "", "url": "https://api.github.com/users/soumith", "html_url": "https://github.com/soumith", "followers_url": "https://api.github.com/users/soumith/followers", "following_url": "https://api.github.com/users/soumith/following{/other_user}", "gists_url": "https://api.github.com/users/soumith/gists{/gist_id}", "starred_url": "https://api.github.com/users/soumith/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/soumith/subscriptions", "organizations_url": "https://api.github.com/users/soumith/orgs", "repos_url": "https://api.github.com/users/soumith/repos", "events_url": "https://api.github.com/users/soumith/events{/privacy}", "received_events_url": "https://api.github.com/users/soumith/received_events", "type": "User", "site_admin": false}, {"login": "gchanan", "id": 3768583, "node_id": "MDQ6VXNlcjM3Njg1ODM=", "avatar_url": "https://avatars2.githubusercontent.com/u/3768583?v=4", "gravatar_id": "", "url": "https://api.github.com/users/gchanan", "html_url": "https://github.com/gchanan", "followers_url": "https://api.github.com/users/gchanan/followers", "following_url": "https://api.github.com/users/gchanan/following{/other_user}", "gists_url": "https://api.github.com/users/gchanan/gists{/gist_id}", "starred_url": "https://api.github.com/users/gchanan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/gchanan/subscriptions", "organizations_url": "https://api.github.com/users/gchanan/orgs", "repos_url": "https://api.github.com/users/gchanan/repos", "events_url": "https://api.github.com/users/gchanan/events{/privacy}", "received_events_url": "https://api.github.com/users/gchanan/received_events", "type": "User", "site_admin": false}], "requested_teams": [], "labels": [{"id": 545367190, "node_id": "MDU6TGFiZWw1NDUzNjcxOTA=", "url": "https://api.github.com/repos/pytorch/pytorch/labels/awaiting%20response", "name": "awaiting response", "color": "5319e7", "default": false}], "milestone": null, "commits_url": "https://api.github.com/repos/pytorch/pytorch/pulls/5382/commits", "review_comments_url": "https://api.github.com/repos/pytorch/pytorch/pulls/5382/comments", "review_comment_url": "https://api.github.com/repos/pytorch/pytorch/pulls/comments{/number}", "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/5382/comments", "statuses_url": "https://api.github.com/repos/pytorch/pytorch/statuses/1b8eecd6b4922b1b50e970563bc446ac4b997e9f", "head": {"label": "kevinzakka:weight-init-constructor", "ref": "weight-init-constructor", "sha": "1b8eecd6b4922b1b50e970563bc446ac4b997e9f", "user": {"login": "kevinzakka", "id": 10518920, "node_id": "MDQ6VXNlcjEwNTE4OTIw", "avatar_url": "https://avatars1.githubusercontent.com/u/10518920?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kevinzakka", "html_url": "https://github.com/kevinzakka", "followers_url": "https://api.github.com/users/kevinzakka/followers", "following_url": "https://api.github.com/users/kevinzakka/following{/other_user}", "gists_url": "https://api.github.com/users/kevinzakka/gists{/gist_id}", "starred_url": "https://api.github.com/users/kevinzakka/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kevinzakka/subscriptions", "organizations_url": "https://api.github.com/users/kevinzakka/orgs", "repos_url": "https://api.github.com/users/kevinzakka/repos", "events_url": "https://api.github.com/users/kevinzakka/events{/privacy}", "received_events_url": "https://api.github.com/users/kevinzakka/received_events", "type": "User", "site_admin": false}, "repo": {"id": 121181811, "node_id": "MDEwOlJlcG9zaXRvcnkxMjExODE4MTE=", "name": "pytorch", "full_name": "kevinzakka/pytorch", "private": false, "owner": {"login": "kevinzakka", "id": 10518920, "node_id": "MDQ6VXNlcjEwNTE4OTIw", "avatar_url": "https://avatars1.githubusercontent.com/u/10518920?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kevinzakka", "html_url": "https://github.com/kevinzakka", "followers_url": "https://api.github.com/users/kevinzakka/followers", "following_url": "https://api.github.com/users/kevinzakka/following{/other_user}", "gists_url": "https://api.github.com/users/kevinzakka/gists{/gist_id}", "starred_url": "https://api.github.com/users/kevinzakka/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kevinzakka/subscriptions", "organizations_url": "https://api.github.com/users/kevinzakka/orgs", "repos_url": "https://api.github.com/users/kevinzakka/repos", "events_url": "https://api.github.com/users/kevinzakka/events{/privacy}", "received_events_url": "https://api.github.com/users/kevinzakka/received_events", "type": "User", "site_admin": false}, "html_url": "https://github.com/kevinzakka/pytorch", "description": "Tensors and Dynamic neural networks in Python  with strong GPU acceleration", "fork": true, "url": "https://api.github.com/repos/kevinzakka/pytorch", "forks_url": "https://api.github.com/repos/kevinzakka/pytorch/forks", "keys_url": "https://api.github.com/repos/kevinzakka/pytorch/keys{/key_id}", "collaborators_url": "https://api.github.com/repos/kevinzakka/pytorch/collaborators{/collaborator}", "teams_url": "https://api.github.com/repos/kevinzakka/pytorch/teams", "hooks_url": "https://api.github.com/repos/kevinzakka/pytorch/hooks", "issue_events_url": "https://api.github.com/repos/kevinzakka/pytorch/issues/events{/number}", "events_url": "https://api.github.com/repos/kevinzakka/pytorch/events", "assignees_url": "https://api.github.com/repos/kevinzakka/pytorch/assignees{/user}", "branches_url": "https://api.github.com/repos/kevinzakka/pytorch/branches{/branch}", "tags_url": "https://api.github.com/repos/kevinzakka/pytorch/tags", "blobs_url": "https://api.github.com/repos/kevinzakka/pytorch/git/blobs{/sha}", "git_tags_url": "https://api.github.com/repos/kevinzakka/pytorch/git/tags{/sha}", "git_refs_url": "https://api.github.com/repos/kevinzakka/pytorch/git/refs{/sha}", "trees_url": "https://api.github.com/repos/kevinzakka/pytorch/git/trees{/sha}", "statuses_url": "https://api.github.com/repos/kevinzakka/pytorch/statuses/{sha}", "languages_url": "https://api.github.com/repos/kevinzakka/pytorch/languages", "stargazers_url": "https://api.github.com/repos/kevinzakka/pytorch/stargazers", "contributors_url": "https://api.github.com/repos/kevinzakka/pytorch/contributors", "subscribers_url": "https://api.github.com/repos/kevinzakka/pytorch/subscribers", "subscription_url": "https://api.github.com/repos/kevinzakka/pytorch/subscription", "commits_url": "https://api.github.com/repos/kevinzakka/pytorch/commits{/sha}", "git_commits_url": "https://api.github.com/repos/kevinzakka/pytorch/git/commits{/sha}", "comments_url": "https://api.github.com/repos/kevinzakka/pytorch/comments{/number}", "issue_comment_url": "https://api.github.com/repos/kevinzakka/pytorch/issues/comments{/number}", "contents_url": "https://api.github.com/repos/kevinzakka/pytorch/contents/{+path}", "compare_url": "https://api.github.com/repos/kevinzakka/pytorch/compare/{base}...{head}", "merges_url": "https://api.github.com/repos/kevinzakka/pytorch/merges", "archive_url": "https://api.github.com/repos/kevinzakka/pytorch/{archive_format}{/ref}", "downloads_url": "https://api.github.com/repos/kevinzakka/pytorch/downloads", "issues_url": "https://api.github.com/repos/kevinzakka/pytorch/issues{/number}", "pulls_url": "https://api.github.com/repos/kevinzakka/pytorch/pulls{/number}", "milestones_url": "https://api.github.com/repos/kevinzakka/pytorch/milestones{/number}", "notifications_url": "https://api.github.com/repos/kevinzakka/pytorch/notifications{?since,all,participating}", "labels_url": "https://api.github.com/repos/kevinzakka/pytorch/labels{/name}", "releases_url": "https://api.github.com/repos/kevinzakka/pytorch/releases{/id}", "deployments_url": "https://api.github.com/repos/kevinzakka/pytorch/deployments", "created_at": "2018-02-12T00:28:29Z", "updated_at": "2018-05-05T10:17:38Z", "pushed_at": "2018-05-05T10:17:27Z", "git_url": "git://github.com/kevinzakka/pytorch.git", "ssh_url": "git@github.com:kevinzakka/pytorch.git", "clone_url": "https://github.com/kevinzakka/pytorch.git", "svn_url": "https://github.com/kevinzakka/pytorch", "homepage": "http://pytorch.org", "size": 52757, "stargazers_count": 0, "watchers_count": 0, "language": "C++", "has_issues": false, "has_projects": true, "has_downloads": true, "has_wiki": true, "has_pages": false, "forks_count": 0, "mirror_url": null, "archived": false, "open_issues_count": 0, "license": {"key": "other", "name": "Other", "spdx_id": "NOASSERTION", "url": null, "node_id": "MDc6TGljZW5zZTA="}, "forks": 0, "open_issues": 0, "watchers": 0, "default_branch": "master"}}, "base": {"label": "pytorch:master", "ref": "master", "sha": "dcbbf346c29a296160982a6f48c7cb925b03a57f", "user": {"login": "pytorch", "id": 21003710, "node_id": "MDEyOk9yZ2FuaXphdGlvbjIxMDAzNzEw", "avatar_url": "https://avatars3.githubusercontent.com/u/21003710?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pytorch", "html_url": "https://github.com/pytorch", "followers_url": "https://api.github.com/users/pytorch/followers", "following_url": "https://api.github.com/users/pytorch/following{/other_user}", "gists_url": "https://api.github.com/users/pytorch/gists{/gist_id}", "starred_url": "https://api.github.com/users/pytorch/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pytorch/subscriptions", "organizations_url": "https://api.github.com/users/pytorch/orgs", "repos_url": "https://api.github.com/users/pytorch/repos", "events_url": "https://api.github.com/users/pytorch/events{/privacy}", "received_events_url": "https://api.github.com/users/pytorch/received_events", "type": "Organization", "site_admin": false}, "repo": {"id": 65600975, "node_id": "MDEwOlJlcG9zaXRvcnk2NTYwMDk3NQ==", "name": "pytorch", "full_name": "pytorch/pytorch", "private": false, "owner": {"login": "pytorch", "id": 21003710, "node_id": "MDEyOk9yZ2FuaXphdGlvbjIxMDAzNzEw", "avatar_url": "https://avatars3.githubusercontent.com/u/21003710?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pytorch", "html_url": "https://github.com/pytorch", "followers_url": "https://api.github.com/users/pytorch/followers", "following_url": "https://api.github.com/users/pytorch/following{/other_user}", "gists_url": "https://api.github.com/users/pytorch/gists{/gist_id}", "starred_url": "https://api.github.com/users/pytorch/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pytorch/subscriptions", "organizations_url": "https://api.github.com/users/pytorch/orgs", "repos_url": "https://api.github.com/users/pytorch/repos", "events_url": "https://api.github.com/users/pytorch/events{/privacy}", "received_events_url": "https://api.github.com/users/pytorch/received_events", "type": "Organization", "site_admin": false}, "html_url": "https://github.com/pytorch/pytorch", "description": "Tensors and Dynamic neural networks in Python  with strong GPU acceleration", "fork": false, "url": "https://api.github.com/repos/pytorch/pytorch", "forks_url": "https://api.github.com/repos/pytorch/pytorch/forks", "keys_url": "https://api.github.com/repos/pytorch/pytorch/keys{/key_id}", "collaborators_url": "https://api.github.com/repos/pytorch/pytorch/collaborators{/collaborator}", "teams_url": "https://api.github.com/repos/pytorch/pytorch/teams", "hooks_url": "https://api.github.com/repos/pytorch/pytorch/hooks", "issue_events_url": "https://api.github.com/repos/pytorch/pytorch/issues/events{/number}", "events_url": "https://api.github.com/repos/pytorch/pytorch/events", "assignees_url": "https://api.github.com/repos/pytorch/pytorch/assignees{/user}", "branches_url": "https://api.github.com/repos/pytorch/pytorch/branches{/branch}", "tags_url": "https://api.github.com/repos/pytorch/pytorch/tags", "blobs_url": "https://api.github.com/repos/pytorch/pytorch/git/blobs{/sha}", "git_tags_url": "https://api.github.com/repos/pytorch/pytorch/git/tags{/sha}", "git_refs_url": "https://api.github.com/repos/pytorch/pytorch/git/refs{/sha}", "trees_url": "https://api.github.com/repos/pytorch/pytorch/git/trees{/sha}", "statuses_url": "https://api.github.com/repos/pytorch/pytorch/statuses/{sha}", "languages_url": "https://api.github.com/repos/pytorch/pytorch/languages", "stargazers_url": "https://api.github.com/repos/pytorch/pytorch/stargazers", "contributors_url": "https://api.github.com/repos/pytorch/pytorch/contributors", "subscribers_url": "https://api.github.com/repos/pytorch/pytorch/subscribers", "subscription_url": "https://api.github.com/repos/pytorch/pytorch/subscription", "commits_url": "https://api.github.com/repos/pytorch/pytorch/commits{/sha}", "git_commits_url": "https://api.github.com/repos/pytorch/pytorch/git/commits{/sha}", "comments_url": "https://api.github.com/repos/pytorch/pytorch/comments{/number}", "issue_comment_url": "https://api.github.com/repos/pytorch/pytorch/issues/comments{/number}", "contents_url": "https://api.github.com/repos/pytorch/pytorch/contents/{+path}", "compare_url": "https://api.github.com/repos/pytorch/pytorch/compare/{base}...{head}", "merges_url": "https://api.github.com/repos/pytorch/pytorch/merges", "archive_url": "https://api.github.com/repos/pytorch/pytorch/{archive_format}{/ref}", "downloads_url": "https://api.github.com/repos/pytorch/pytorch/downloads", "issues_url": "https://api.github.com/repos/pytorch/pytorch/issues{/number}", "pulls_url": "https://api.github.com/repos/pytorch/pytorch/pulls{/number}", "milestones_url": "https://api.github.com/repos/pytorch/pytorch/milestones{/number}", "notifications_url": "https://api.github.com/repos/pytorch/pytorch/notifications{?since,all,participating}", "labels_url": "https://api.github.com/repos/pytorch/pytorch/labels{/name}", "releases_url": "https://api.github.com/repos/pytorch/pytorch/releases{/id}", "deployments_url": "https://api.github.com/repos/pytorch/pytorch/deployments", "created_at": "2016-08-13T05:26:41Z", "updated_at": "2018-11-24T14:27:35Z", "pushed_at": "2018-11-24T12:42:01Z", "git_url": "git://github.com/pytorch/pytorch.git", "ssh_url": "git@github.com:pytorch/pytorch.git", "clone_url": "https://github.com/pytorch/pytorch.git", "svn_url": "https://github.com/pytorch/pytorch", "homepage": "http://pytorch.org", "size": 89656, "stargazers_count": 21591, "watchers_count": 21591, "language": "C++", "has_issues": true, "has_projects": true, "has_downloads": true, "has_wiki": true, "has_pages": false, "forks_count": 5154, "mirror_url": null, "archived": false, "open_issues_count": 2196, "license": {"key": "other", "name": "Other", "spdx_id": "NOASSERTION", "url": null, "node_id": "MDc6TGljZW5zZTA="}, "forks": 5154, "open_issues": 2196, "watchers": 21591, "default_branch": "master"}}, "_links": {"self": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/5382"}, "html": {"href": "https://github.com/pytorch/pytorch/pull/5382"}, "issue": {"href": "https://api.github.com/repos/pytorch/pytorch/issues/5382"}, "comments": {"href": "https://api.github.com/repos/pytorch/pytorch/issues/5382/comments"}, "review_comments": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/5382/comments"}, "review_comment": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/comments{/number}"}, "commits": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/5382/commits"}, "statuses": {"href": "https://api.github.com/repos/pytorch/pytorch/statuses/1b8eecd6b4922b1b50e970563bc446ac4b997e9f"}}, "author_association": "CONTRIBUTOR", "body_html": "<p>As mentioned in <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load issue title\" data-id=\"299693776\" data-permission-text=\"Issue title is private\" data-url=\"https://github.com/pytorch/pytorch/issues/5370\" data-hovercard-type=\"pull_request\" data-hovercard-url=\"/pytorch/pytorch/pull/5370/hovercard\" href=\"https://github.com/pytorch/pytorch/pull/5370\">#5370</a>, here's what adding weight and bias string args to some of the layers could look like.</p>\n<div class=\"highlight highlight-source-python\"><pre><span class=\"pl-c\"><span class=\"pl-c\">#</span> use a string</span>\nx <span class=\"pl-k\">=</span> nn.Linear(<span class=\"pl-c1\">784</span>, <span class=\"pl-c1\">512</span>, <span class=\"pl-v\">weight_init</span><span class=\"pl-k\">=</span><span class=\"pl-s\"><span class=\"pl-pds\">'</span>xavier_uniform<span class=\"pl-pds\">'</span></span>, <span class=\"pl-v\">bias_init</span><span class=\"pl-k\">=</span><span class=\"pl-s\"><span class=\"pl-pds\">'</span>zeros<span class=\"pl-pds\">'</span></span>)\n\n<span class=\"pl-c\"><span class=\"pl-c\">#</span> use a function</span>\nx <span class=\"pl-k\">=</span> nn.Linear(<span class=\"pl-c1\">784</span>, <span class=\"pl-c1\">512</span>, <span class=\"pl-v\">weight_init</span><span class=\"pl-k\">=</span>init.uniform(<span class=\"pl-k\">-</span><span class=\"pl-c1\">5</span>, <span class=\"pl-c1\">5</span>))\nx <span class=\"pl-k\">=</span> nn.Linear(<span class=\"pl-c1\">784</span>, <span class=\"pl-c1\">512</span>, <span class=\"pl-v\">weight_init</span><span class=\"pl-k\">=</span>init.xavier_uniform(<span class=\"pl-v\">gain</span><span class=\"pl-k\">=</span>init.calculate_gain(<span class=\"pl-s\"><span class=\"pl-pds\">'</span>tanh<span class=\"pl-pds\">'</span></span>)))</pre></div>\n<p>Example of backwards-compatibility:</p>\n<div class=\"highlight highlight-source-python\"><pre>w <span class=\"pl-k\">=</span> torch.randn(<span class=\"pl-c1\">2</span>, <span class=\"pl-c1\">2</span>)\nnn.init.constant(w, <span class=\"pl-c1\">1</span>) <span class=\"pl-c\"><span class=\"pl-c\">#</span> prints [[1, 1], [1, 1]]</span>\nnn.init.Constant(<span class=\"pl-c1\">0</span>)(w) <span class=\"pl-c\"><span class=\"pl-c\">#</span> prints [[0, 0], [0, 0]]</span></pre></div>\n<p>Finally, test to show that new implementation of <code>kaiming</code> and <code>xavier</code> work:</p>\n<div class=\"highlight highlight-source-python\"><pre><span class=\"pl-c\"><span class=\"pl-c\">#</span> same size input and output -&gt; in = out = average -&gt; approx same std</span>\nW <span class=\"pl-k\">=</span> torch.randn(<span class=\"pl-c1\">700</span>, <span class=\"pl-c1\">700</span>)\nxavier <span class=\"pl-k\">=</span> nn.init.xavier_uniform(W.clone(), <span class=\"pl-v\">gain</span><span class=\"pl-k\">=</span>nn.init.calculate_gain(<span class=\"pl-s\"><span class=\"pl-pds\">'</span>relu<span class=\"pl-pds\">'</span></span>))\nkaiming <span class=\"pl-k\">=</span> nn.init.kaiming_uniform(W.clone())\n<span class=\"pl-c1\">print</span>(torch.std(xavier)) <span class=\"pl-c\"><span class=\"pl-c\">#</span> prints 0.053412361240471495</span>\n<span class=\"pl-c1\">print</span>(torch.std(kaiming)) <span class=\"pl-c\"><span class=\"pl-c\">#</span> prints 0.05350749617735303</span>\n\n<span class=\"pl-c\"><span class=\"pl-c\">#</span> diff size input and output -&gt; but fan set to avg -&gt; approx same std</span>\nW <span class=\"pl-k\">=</span> torch.randn(<span class=\"pl-c1\">700</span>, <span class=\"pl-c1\">500</span>)\nxavier <span class=\"pl-k\">=</span> nn.init.xavier_uniform(W.clone(), <span class=\"pl-v\">gain</span><span class=\"pl-k\">=</span>nn.init.calculate_gain(<span class=\"pl-s\"><span class=\"pl-pds\">'</span>relu<span class=\"pl-pds\">'</span></span>))\nkaiming <span class=\"pl-k\">=</span> nn.init.kaiming_uniform(W.clone(), <span class=\"pl-v\">mode</span><span class=\"pl-k\">=</span><span class=\"pl-s\"><span class=\"pl-pds\">\"</span>fan_avg<span class=\"pl-pds\">\"</span></span>)\n<span class=\"pl-c1\">print</span>(torch.std(xavier)) <span class=\"pl-c\"><span class=\"pl-c\">#</span> prints 0.057737772865026314</span>\n<span class=\"pl-c1\">print</span>(torch.std(kaiming)) <span class=\"pl-c\"><span class=\"pl-c\">#</span> prints 0.057677882183886975</span></pre></div>\n<p>Also added <code>selu</code> support to <code>calculate_gain</code>.</p>", "body_text": "As mentioned in #5370, here's what adding weight and bias string args to some of the layers could look like.\n# use a string\nx = nn.Linear(784, 512, weight_init='xavier_uniform', bias_init='zeros')\n\n# use a function\nx = nn.Linear(784, 512, weight_init=init.uniform(-5, 5))\nx = nn.Linear(784, 512, weight_init=init.xavier_uniform(gain=init.calculate_gain('tanh')))\nExample of backwards-compatibility:\nw = torch.randn(2, 2)\nnn.init.constant(w, 1) # prints [[1, 1], [1, 1]]\nnn.init.Constant(0)(w) # prints [[0, 0], [0, 0]]\nFinally, test to show that new implementation of kaiming and xavier work:\n# same size input and output -> in = out = average -> approx same std\nW = torch.randn(700, 700)\nxavier = nn.init.xavier_uniform(W.clone(), gain=nn.init.calculate_gain('relu'))\nkaiming = nn.init.kaiming_uniform(W.clone())\nprint(torch.std(xavier)) # prints 0.053412361240471495\nprint(torch.std(kaiming)) # prints 0.05350749617735303\n\n# diff size input and output -> but fan set to avg -> approx same std\nW = torch.randn(700, 500)\nxavier = nn.init.xavier_uniform(W.clone(), gain=nn.init.calculate_gain('relu'))\nkaiming = nn.init.kaiming_uniform(W.clone(), mode=\"fan_avg\")\nprint(torch.std(xavier)) # prints 0.057737772865026314\nprint(torch.std(kaiming)) # prints 0.057677882183886975\nAlso added selu support to calculate_gain.", "merged": false, "mergeable": null, "rebaseable": null, "mergeable_state": "unknown", "merged_by": null, "comments": 9, "review_comments": 10, "maintainer_can_modify": true, "commits": 13, "additions": 2158, "deletions": 301, "changed_files": 8}