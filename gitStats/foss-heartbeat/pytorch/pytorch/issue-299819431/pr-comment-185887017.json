{"url": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/185887017", "pull_request_review_id": 117365791, "id": 185887017, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4NTg4NzAxNw==", "diff_hunk": "@@ -273,85 +435,140 @@ def kaiming_normal(tensor, a=0, mode='fan_in'):\n \n     Examples:\n         >>> w = torch.Tensor(3, 5)\n-        >>> nn.init.kaiming_normal(w, mode='fan_out')\n+        >>> nn.init.kaiming_normal_(w, mode='fan_out')\n+        >>> he_init = nn.init.kaiming_normal_(mode='fan_out')\n+        >>> he_init(w)\n     \"\"\"\n-    fan = _calculate_correct_fan(tensor, mode)\n-    gain = calculate_gain('leaky_relu', a)\n-    std = gain / math.sqrt(fan)\n-    with torch.no_grad():\n-        return tensor.normal_(0, std)\n+    def __init__(self, a=0, mode=\"fan_in\"):\n+        gain = calculate_gain('leaky_relu', a) ** 2\n+        self.vs = VarianceScaling(", "path": "torch/nn/init.py", "position": 602, "original_position": 602, "commit_id": "1b8eecd6b4922b1b50e970563bc446ac4b997e9f", "original_commit_id": "1b8eecd6b4922b1b50e970563bc446ac4b997e9f", "user": {"login": "apaszke", "id": 4583066, "node_id": "MDQ6VXNlcjQ1ODMwNjY=", "avatar_url": "https://avatars3.githubusercontent.com/u/4583066?v=4", "gravatar_id": "", "url": "https://api.github.com/users/apaszke", "html_url": "https://github.com/apaszke", "followers_url": "https://api.github.com/users/apaszke/followers", "following_url": "https://api.github.com/users/apaszke/following{/other_user}", "gists_url": "https://api.github.com/users/apaszke/gists{/gist_id}", "starred_url": "https://api.github.com/users/apaszke/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/apaszke/subscriptions", "organizations_url": "https://api.github.com/users/apaszke/orgs", "repos_url": "https://api.github.com/users/apaszke/repos", "events_url": "https://api.github.com/users/apaszke/events{/privacy}", "received_events_url": "https://api.github.com/users/apaszke/received_events", "type": "User", "site_admin": false}, "body": "It seems that you could make `VarianceScaling` an `Initializer` subclass, and then subclass from it in here. Then, in `__init__` you'd take those arguments, modify them, and pass them to `super`. Then, you don't even need to implement `__call__`", "created_at": "2018-05-03T17:56:19Z", "updated_at": "2018-11-23T15:43:35Z", "html_url": "https://github.com/pytorch/pytorch/pull/5382#discussion_r185887017", "pull_request_url": "https://api.github.com/repos/pytorch/pytorch/pulls/5382", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/185887017"}, "html": {"href": "https://github.com/pytorch/pytorch/pull/5382#discussion_r185887017"}, "pull_request": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/5382"}}, "body_html": "<p>It seems that you could make <code>VarianceScaling</code> an <code>Initializer</code> subclass, and then subclass from it in here. Then, in <code>__init__</code> you'd take those arguments, modify them, and pass them to <code>super</code>. Then, you don't even need to implement <code>__call__</code></p>", "body_text": "It seems that you could make VarianceScaling an Initializer subclass, and then subclass from it in here. Then, in __init__ you'd take those arguments, modify them, and pass them to super. Then, you don't even need to implement __call__"}