{"url": "https://api.github.com/repos/pytorch/pytorch/issues/comments/345484928", "html_url": "https://github.com/pytorch/pytorch/pull/3776#issuecomment-345484928", "issue_url": "https://api.github.com/repos/pytorch/pytorch/issues/3776", "id": 345484928, "node_id": "MDEyOklzc3VlQ29tbWVudDM0NTQ4NDkyOA==", "user": {"login": "stefan-it", "id": 20651387, "node_id": "MDQ6VXNlcjIwNjUxMzg3", "avatar_url": "https://avatars1.githubusercontent.com/u/20651387?v=4", "gravatar_id": "", "url": "https://api.github.com/users/stefan-it", "html_url": "https://github.com/stefan-it", "followers_url": "https://api.github.com/users/stefan-it/followers", "following_url": "https://api.github.com/users/stefan-it/following{/other_user}", "gists_url": "https://api.github.com/users/stefan-it/gists{/gist_id}", "starred_url": "https://api.github.com/users/stefan-it/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/stefan-it/subscriptions", "organizations_url": "https://api.github.com/users/stefan-it/orgs", "repos_url": "https://api.github.com/users/stefan-it/repos", "events_url": "https://api.github.com/users/stefan-it/events{/privacy}", "received_events_url": "https://api.github.com/users/stefan-it/received_events", "type": "User", "site_admin": false}, "created_at": "2017-11-19T01:38:34Z", "updated_at": "2017-11-19T01:38:34Z", "author_association": "CONTRIBUTOR", "body_html": "<p>I see, <a href=\"http://www.open-std.org/jtc1/sc22/wg21/docs/lwg-defects.html#2148\" rel=\"nofollow\">LWG 2148</a> is pretty hard.</p>\n<p>Maybe a solution could be as shown in this two files:</p>\n<ul>\n<li>\n<p>Usage of a struct called <code>EnumClassHash</code>, see it <a href=\"https://github.com/bandamf/ReflectionEngine/blob/35d94cc4b424b766cd5557a56c465b1511d1e267/Source/ReflectionUtility/Include/ReflectionEnumClassHash.h\">here</a></p>\n</li>\n<li>\n<p><code>hash_combine</code> will get a <code>std::conditional</code> for <code>enum</code>, see it <a href=\"https://github.com/bandamf/ReflectionEngine/blob/35d94cc4b424b766cd5557a56c465b1511d1e267/Source/ReflectionUtility/Include/ReflectionUtil.h\">here</a></p>\n</li>\n</ul>\n<p>Chromium is <a href=\"https://chromium.googlesource.com/chromium/src.git/+/62.0.3178.1/chrome/browser/lifetime/keep_alive_registry.h#52\" rel=\"nofollow\">also struggeling</a> with this bug :/</p>", "body_text": "I see, LWG 2148 is pretty hard.\nMaybe a solution could be as shown in this two files:\n\n\nUsage of a struct called EnumClassHash, see it here\n\n\nhash_combine will get a std::conditional for enum, see it here\n\n\nChromium is also struggeling with this bug :/", "body": "I see, [LWG 2148](http://www.open-std.org/jtc1/sc22/wg21/docs/lwg-defects.html#2148) is pretty hard.\r\n\r\nMaybe a solution could be as shown in this two files:\r\n\r\n* Usage of a struct called `EnumClassHash`, see it [here](https://github.com/bandamf/ReflectionEngine/blob/35d94cc4b424b766cd5557a56c465b1511d1e267/Source/ReflectionUtility/Include/ReflectionEnumClassHash.h)\r\n\r\n* `hash_combine` will get a `std::conditional` for `enum`, see it [here](https://github.com/bandamf/ReflectionEngine/blob/35d94cc4b424b766cd5557a56c465b1511d1e267/Source/ReflectionUtility/Include/ReflectionUtil.h)\r\n\r\nChromium is [also struggeling](https://chromium.googlesource.com/chromium/src.git/+/62.0.3178.1/chrome/browser/lifetime/keep_alive_registry.h#52) with this bug :/"}