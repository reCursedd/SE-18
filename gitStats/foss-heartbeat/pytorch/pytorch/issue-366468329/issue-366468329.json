{"url": "https://api.github.com/repos/pytorch/pytorch/issues/12291", "repository_url": "https://api.github.com/repos/pytorch/pytorch", "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/12291/labels{/name}", "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/12291/comments", "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/12291/events", "html_url": "https://github.com/pytorch/pytorch/issues/12291", "id": 366468329, "node_id": "MDU6SXNzdWUzNjY0NjgzMjk=", "number": 12291, "title": "[jit] Smarter graph fuser ", "user": {"login": "zou3519", "id": 5652049, "node_id": "MDQ6VXNlcjU2NTIwNDk=", "avatar_url": "https://avatars3.githubusercontent.com/u/5652049?v=4", "gravatar_id": "", "url": "https://api.github.com/users/zou3519", "html_url": "https://github.com/zou3519", "followers_url": "https://api.github.com/users/zou3519/followers", "following_url": "https://api.github.com/users/zou3519/following{/other_user}", "gists_url": "https://api.github.com/users/zou3519/gists{/gist_id}", "starred_url": "https://api.github.com/users/zou3519/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/zou3519/subscriptions", "organizations_url": "https://api.github.com/users/zou3519/orgs", "repos_url": "https://api.github.com/users/zou3519/repos", "events_url": "https://api.github.com/users/zou3519/events{/privacy}", "received_events_url": "https://api.github.com/users/zou3519/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 679953983, "node_id": "MDU6TGFiZWw2Nzk5NTM5ODM=", "url": "https://api.github.com/repos/pytorch/pytorch/labels/jit", "name": "jit", "color": "c5def5", "default": false}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2018-10-03T18:26:57Z", "updated_at": "2018-10-03T18:39:01Z", "closed_at": null, "author_association": "CONTRIBUTOR", "body_html": "<h2><g-emoji class=\"g-emoji\" alias=\"rocket\" fallback-src=\"https://assets-cdn.github.com/images/icons/emoji/unicode/1f680.png\">\ud83d\ude80</g-emoji> Feature</h2>\n<p>The graph fuser should be able to maximize the size of fusion groups.\\</p>\n<h2>Motivation</h2>\n<pre><code>import torch\n\ndef pyfn(z):\n    return z\n\n@torch.jit.script\ndef fn(x, y, z):\n    a = x * y\n    d = pyfn(z)\n    b = a * d\n    return b\n\nx = torch.tensor([1., 1.], device='cuda')\ny = torch.tensor([1., 1.], device='cuda')\nz = torch.tensor([1., 1.], device='cuda')\nfn(x, y, z)\nfn.graph_for(x, y, z)\n\ngraph(%x : Float(*)\n      %y : Float(*)\n      %z : Float(*)) {\n  %a : Float(*) = aten::mul(%x, %y)\n  %d : Dynamic = ^pyfn()(%z)\n  %b : Dynamic = aten::mul(%a, %d)\n  return (%b);\n}\n</code></pre>\n<p>Those two aten::mul ops should, in theory, be fusible but the graph fuser isn't able to fuse them.</p>\n<p>cc <a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=4583066\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/apaszke\">@apaszke</a> <a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=38511765\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/mruberry\">@mruberry</a></p>", "body_text": "\ud83d\ude80 Feature\nThe graph fuser should be able to maximize the size of fusion groups.\\\nMotivation\nimport torch\n\ndef pyfn(z):\n    return z\n\n@torch.jit.script\ndef fn(x, y, z):\n    a = x * y\n    d = pyfn(z)\n    b = a * d\n    return b\n\nx = torch.tensor([1., 1.], device='cuda')\ny = torch.tensor([1., 1.], device='cuda')\nz = torch.tensor([1., 1.], device='cuda')\nfn(x, y, z)\nfn.graph_for(x, y, z)\n\ngraph(%x : Float(*)\n      %y : Float(*)\n      %z : Float(*)) {\n  %a : Float(*) = aten::mul(%x, %y)\n  %d : Dynamic = ^pyfn()(%z)\n  %b : Dynamic = aten::mul(%a, %d)\n  return (%b);\n}\n\nThose two aten::mul ops should, in theory, be fusible but the graph fuser isn't able to fuse them.\ncc @apaszke @mruberry", "body": "## \ud83d\ude80 Feature\r\n\r\nThe graph fuser should be able to maximize the size of fusion groups.\\\r\n\r\n## Motivation\r\n\r\n```\r\nimport torch\r\n\r\ndef pyfn(z):\r\n    return z\r\n\r\n@torch.jit.script\r\ndef fn(x, y, z):\r\n    a = x * y\r\n    d = pyfn(z)\r\n    b = a * d\r\n    return b\r\n\r\nx = torch.tensor([1., 1.], device='cuda')\r\ny = torch.tensor([1., 1.], device='cuda')\r\nz = torch.tensor([1., 1.], device='cuda')\r\nfn(x, y, z)\r\nfn.graph_for(x, y, z)\r\n\r\ngraph(%x : Float(*)\r\n      %y : Float(*)\r\n      %z : Float(*)) {\r\n  %a : Float(*) = aten::mul(%x, %y)\r\n  %d : Dynamic = ^pyfn()(%z)\r\n  %b : Dynamic = aten::mul(%a, %d)\r\n  return (%b);\r\n}\r\n```\r\n\r\nThose two aten::mul ops should, in theory, be fusible but the graph fuser isn't able to fuse them.\r\n\r\ncc @apaszke @mruberry \r\n\r\n"}