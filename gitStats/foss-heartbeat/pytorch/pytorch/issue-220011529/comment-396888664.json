{"url": "https://api.github.com/repos/pytorch/pytorch/issues/comments/396888664", "html_url": "https://github.com/pytorch/pytorch/issues/1204#issuecomment-396888664", "issue_url": "https://api.github.com/repos/pytorch/pytorch/issues/1204", "id": 396888664, "node_id": "MDEyOklzc3VlQ29tbWVudDM5Njg4ODY2NA==", "user": {"login": "jeya-maria-jose", "id": 28985378, "node_id": "MDQ6VXNlcjI4OTg1Mzc4", "avatar_url": "https://avatars0.githubusercontent.com/u/28985378?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jeya-maria-jose", "html_url": "https://github.com/jeya-maria-jose", "followers_url": "https://api.github.com/users/jeya-maria-jose/followers", "following_url": "https://api.github.com/users/jeya-maria-jose/following{/other_user}", "gists_url": "https://api.github.com/users/jeya-maria-jose/gists{/gist_id}", "starred_url": "https://api.github.com/users/jeya-maria-jose/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jeya-maria-jose/subscriptions", "organizations_url": "https://api.github.com/users/jeya-maria-jose/orgs", "repos_url": "https://api.github.com/users/jeya-maria-jose/repos", "events_url": "https://api.github.com/users/jeya-maria-jose/events{/privacy}", "received_events_url": "https://api.github.com/users/jeya-maria-jose/received_events", "type": "User", "site_admin": false}, "created_at": "2018-06-13T10:18:30Z", "updated_at": "2018-06-13T10:20:09Z", "author_association": "NONE", "body_html": "<p>I have checked label and also have made the target mask as .long() , but still I am getting the same error .<br>\nPlease help .</p>\n<pre><code> `CUDA_LAUNCH_BLOCKING=1` python jtrain.py \n/home/mmlab/.local/lib/python2.7/site-packages/torch/nn/parallel/data_parallel.py:24: UserWarning: \n    There is an imbalance between your GPUs. You may want to exclude GPU 0 which\n    has less than 75% of the memory or cores of GPU 1. You can do so by setting\n    the device_ids argument to DataParallel, or by setting the CUDA_VISIBLE_DEVICES\n    environment variable.\n  warnings.warn(imbalance_warn.format(device_ids[min_pos], device_ids[max_pos]))\njtrain.py:194: UserWarning: volatile was removed and now has no effect. Use `with torch.no_grad():` instead.\n  cpmap = generator(Variable(img.data,volatile=True))\n/home/mmlab/.local/lib/python2.7/site-packages/torch/nn/functional.py:1820: UserWarning: nn.functional.upsample_bilinear is deprecated. Use nn.functional.upsample instead.\n  warnings.warn(\"nn.functional.upsample_bilinear is deprecated. Use nn.functional.upsample instead.\")\njtrain.py:214: UserWarning: Implicit dimension choice for log_softmax has been deprecated. Change the call to include dim=X as an argument.\n  confr = nn.LogSoftmax()(discriminator(ohmask.float()).cuda())\njtrain.py:223: UserWarning: Implicit dimension choice for log_softmax has been deprecated. Change the call to include dim=X as an argument.\n  conff = nn.LogSoftmax()(discriminator(Variable(cpmap.data)))\njtrain.py:236: UserWarning: Implicit dimension choice for softmax has been deprecated. Change the call to include dim=X as an argument.\n  cpmapsmax = nn.Softmax()(cmap)\njtrain.py:237: UserWarning: Implicit dimension choice for log_softmax has been deprecated. Change the call to include dim=X as an argument.\n  cpmaplsmax = nn.LogSoftmax()(cmap)\njtrain.py:238: UserWarning: Implicit dimension choice for log_softmax has been deprecated. Change the call to include dim=X as an argument.\n  conff = nn.LogSoftmax()(discriminator(cpmapsmax))\n/pytorch/aten/src/THCUNN/SpatialClassNLLCriterion.cu:99: void cunn_SpatialClassNLLCriterion_updateOutput_kernel(T *, T *, T *, long *, T *, int, int, int, int, int, long) [with T = float, AccumT = float]: block: [0,0,0], thread: [53,0,0] Assertion `t &gt;= 0 &amp;&amp; t &lt; n_classes` failed.\n/pytorch/aten/src/THCUNN/SpatialClassNLLCriterion.cu:99: void cunn_SpatialClassNLLCriterion_updateOutput_kernel(T *, T *, T *, long *, T *, int, int, int, int, int, long) [with T = float, AccumT = float]: block: [0,0,0], thread: [54,0,0] Assertion `t &gt;= 0 &amp;&amp; t &lt; n_classes` failed.\n/pytorch/aten/src/THCUNN/SpatialClassNLLCriterion.cu:99: void cunn_SpatialClassNLLCriterion_updateOutput_kernel(T *, T *, T *, long *, T *, int, int, int, int, int, long) [with T = float, AccumT = float]: block: [0,0,0], thread: [1013,0,0] Assertion `t &gt;= 0 &amp;&amp; t &lt; n_classes` failed.\n/pytorch/aten/src/THCUNN/SpatialClassNLLCriterion.cu:99: void cunn_SpatialClassNLLCriterion_updateOutput_kernel(T *, T *, T *, long *, T *, int, int, int, int, int, long) [with T = float, AccumT = float]: block: [0,0,0], thread: [492,0,0] Assertion `t &gt;= 0 &amp;&amp; t &lt; n_classes` failed.\nTHCudaCheck FAIL file=/pytorch/aten/src/THCUNN/generic/SpatialClassNLLCriterion.cu line=131 error=59 : device-side assert triggered\nException NameError: \"global name 'FileNotFoundError' is not defined\" in &lt;bound method _DataLoaderIter.__del__ of &lt;torch.utils.data.dataloader._DataLoaderIter object at 0x7f10d37cb850&gt;&gt; ignored\nTraceback (most recent call last):\n  File \"jtrain.py\", line 552, in &lt;module&gt;\n    main()\n  File \"jtrain.py\", line 545, in main\n    train_adv(generator,discriminator,optimG,optimD,trainloader_l,valoader,args)\n  File \"jtrain.py\", line 243, in train_adv\n    LGce = nn.NLLLoss()(cpmaplsmax,mask)\n  File \"/home/mmlab/.local/lib/python2.7/site-packages/torch/nn/modules/module.py\", line 491, in __call__\n    result = self.forward(*input, **kwargs)\n  File \"/home/mmlab/.local/lib/python2.7/site-packages/torch/nn/modules/loss.py\", line 193, in forward\n    self.ignore_index, self.reduce)\n  File \"/home/mmlab/.local/lib/python2.7/site-packages/torch/nn/functional.py\", line 1334, in nll_loss\n    return torch._C._nn.nll_loss2d(input, target, weight, size_average, ignore_index, reduce)\nRuntimeError: cuda runtime error (59) : device-side assert triggered at `/pytorch/aten/src/THCUNN/generic/SpatialClassNLLCriterion.cu:131\n</code></pre>", "body_text": "I have checked label and also have made the target mask as .long() , but still I am getting the same error .\nPlease help .\n `CUDA_LAUNCH_BLOCKING=1` python jtrain.py \n/home/mmlab/.local/lib/python2.7/site-packages/torch/nn/parallel/data_parallel.py:24: UserWarning: \n    There is an imbalance between your GPUs. You may want to exclude GPU 0 which\n    has less than 75% of the memory or cores of GPU 1. You can do so by setting\n    the device_ids argument to DataParallel, or by setting the CUDA_VISIBLE_DEVICES\n    environment variable.\n  warnings.warn(imbalance_warn.format(device_ids[min_pos], device_ids[max_pos]))\njtrain.py:194: UserWarning: volatile was removed and now has no effect. Use `with torch.no_grad():` instead.\n  cpmap = generator(Variable(img.data,volatile=True))\n/home/mmlab/.local/lib/python2.7/site-packages/torch/nn/functional.py:1820: UserWarning: nn.functional.upsample_bilinear is deprecated. Use nn.functional.upsample instead.\n  warnings.warn(\"nn.functional.upsample_bilinear is deprecated. Use nn.functional.upsample instead.\")\njtrain.py:214: UserWarning: Implicit dimension choice for log_softmax has been deprecated. Change the call to include dim=X as an argument.\n  confr = nn.LogSoftmax()(discriminator(ohmask.float()).cuda())\njtrain.py:223: UserWarning: Implicit dimension choice for log_softmax has been deprecated. Change the call to include dim=X as an argument.\n  conff = nn.LogSoftmax()(discriminator(Variable(cpmap.data)))\njtrain.py:236: UserWarning: Implicit dimension choice for softmax has been deprecated. Change the call to include dim=X as an argument.\n  cpmapsmax = nn.Softmax()(cmap)\njtrain.py:237: UserWarning: Implicit dimension choice for log_softmax has been deprecated. Change the call to include dim=X as an argument.\n  cpmaplsmax = nn.LogSoftmax()(cmap)\njtrain.py:238: UserWarning: Implicit dimension choice for log_softmax has been deprecated. Change the call to include dim=X as an argument.\n  conff = nn.LogSoftmax()(discriminator(cpmapsmax))\n/pytorch/aten/src/THCUNN/SpatialClassNLLCriterion.cu:99: void cunn_SpatialClassNLLCriterion_updateOutput_kernel(T *, T *, T *, long *, T *, int, int, int, int, int, long) [with T = float, AccumT = float]: block: [0,0,0], thread: [53,0,0] Assertion `t >= 0 && t < n_classes` failed.\n/pytorch/aten/src/THCUNN/SpatialClassNLLCriterion.cu:99: void cunn_SpatialClassNLLCriterion_updateOutput_kernel(T *, T *, T *, long *, T *, int, int, int, int, int, long) [with T = float, AccumT = float]: block: [0,0,0], thread: [54,0,0] Assertion `t >= 0 && t < n_classes` failed.\n/pytorch/aten/src/THCUNN/SpatialClassNLLCriterion.cu:99: void cunn_SpatialClassNLLCriterion_updateOutput_kernel(T *, T *, T *, long *, T *, int, int, int, int, int, long) [with T = float, AccumT = float]: block: [0,0,0], thread: [1013,0,0] Assertion `t >= 0 && t < n_classes` failed.\n/pytorch/aten/src/THCUNN/SpatialClassNLLCriterion.cu:99: void cunn_SpatialClassNLLCriterion_updateOutput_kernel(T *, T *, T *, long *, T *, int, int, int, int, int, long) [with T = float, AccumT = float]: block: [0,0,0], thread: [492,0,0] Assertion `t >= 0 && t < n_classes` failed.\nTHCudaCheck FAIL file=/pytorch/aten/src/THCUNN/generic/SpatialClassNLLCriterion.cu line=131 error=59 : device-side assert triggered\nException NameError: \"global name 'FileNotFoundError' is not defined\" in <bound method _DataLoaderIter.__del__ of <torch.utils.data.dataloader._DataLoaderIter object at 0x7f10d37cb850>> ignored\nTraceback (most recent call last):\n  File \"jtrain.py\", line 552, in <module>\n    main()\n  File \"jtrain.py\", line 545, in main\n    train_adv(generator,discriminator,optimG,optimD,trainloader_l,valoader,args)\n  File \"jtrain.py\", line 243, in train_adv\n    LGce = nn.NLLLoss()(cpmaplsmax,mask)\n  File \"/home/mmlab/.local/lib/python2.7/site-packages/torch/nn/modules/module.py\", line 491, in __call__\n    result = self.forward(*input, **kwargs)\n  File \"/home/mmlab/.local/lib/python2.7/site-packages/torch/nn/modules/loss.py\", line 193, in forward\n    self.ignore_index, self.reduce)\n  File \"/home/mmlab/.local/lib/python2.7/site-packages/torch/nn/functional.py\", line 1334, in nll_loss\n    return torch._C._nn.nll_loss2d(input, target, weight, size_average, ignore_index, reduce)\nRuntimeError: cuda runtime error (59) : device-side assert triggered at `/pytorch/aten/src/THCUNN/generic/SpatialClassNLLCriterion.cu:131", "body": "I have checked label and also have made the target mask as .long() , but still I am getting the same error .\r\nPlease help .\r\n```\r\n `CUDA_LAUNCH_BLOCKING=1` python jtrain.py \r\n/home/mmlab/.local/lib/python2.7/site-packages/torch/nn/parallel/data_parallel.py:24: UserWarning: \r\n    There is an imbalance between your GPUs. You may want to exclude GPU 0 which\r\n    has less than 75% of the memory or cores of GPU 1. You can do so by setting\r\n    the device_ids argument to DataParallel, or by setting the CUDA_VISIBLE_DEVICES\r\n    environment variable.\r\n  warnings.warn(imbalance_warn.format(device_ids[min_pos], device_ids[max_pos]))\r\njtrain.py:194: UserWarning: volatile was removed and now has no effect. Use `with torch.no_grad():` instead.\r\n  cpmap = generator(Variable(img.data,volatile=True))\r\n/home/mmlab/.local/lib/python2.7/site-packages/torch/nn/functional.py:1820: UserWarning: nn.functional.upsample_bilinear is deprecated. Use nn.functional.upsample instead.\r\n  warnings.warn(\"nn.functional.upsample_bilinear is deprecated. Use nn.functional.upsample instead.\")\r\njtrain.py:214: UserWarning: Implicit dimension choice for log_softmax has been deprecated. Change the call to include dim=X as an argument.\r\n  confr = nn.LogSoftmax()(discriminator(ohmask.float()).cuda())\r\njtrain.py:223: UserWarning: Implicit dimension choice for log_softmax has been deprecated. Change the call to include dim=X as an argument.\r\n  conff = nn.LogSoftmax()(discriminator(Variable(cpmap.data)))\r\njtrain.py:236: UserWarning: Implicit dimension choice for softmax has been deprecated. Change the call to include dim=X as an argument.\r\n  cpmapsmax = nn.Softmax()(cmap)\r\njtrain.py:237: UserWarning: Implicit dimension choice for log_softmax has been deprecated. Change the call to include dim=X as an argument.\r\n  cpmaplsmax = nn.LogSoftmax()(cmap)\r\njtrain.py:238: UserWarning: Implicit dimension choice for log_softmax has been deprecated. Change the call to include dim=X as an argument.\r\n  conff = nn.LogSoftmax()(discriminator(cpmapsmax))\r\n/pytorch/aten/src/THCUNN/SpatialClassNLLCriterion.cu:99: void cunn_SpatialClassNLLCriterion_updateOutput_kernel(T *, T *, T *, long *, T *, int, int, int, int, int, long) [with T = float, AccumT = float]: block: [0,0,0], thread: [53,0,0] Assertion `t >= 0 && t < n_classes` failed.\r\n/pytorch/aten/src/THCUNN/SpatialClassNLLCriterion.cu:99: void cunn_SpatialClassNLLCriterion_updateOutput_kernel(T *, T *, T *, long *, T *, int, int, int, int, int, long) [with T = float, AccumT = float]: block: [0,0,0], thread: [54,0,0] Assertion `t >= 0 && t < n_classes` failed.\r\n/pytorch/aten/src/THCUNN/SpatialClassNLLCriterion.cu:99: void cunn_SpatialClassNLLCriterion_updateOutput_kernel(T *, T *, T *, long *, T *, int, int, int, int, int, long) [with T = float, AccumT = float]: block: [0,0,0], thread: [1013,0,0] Assertion `t >= 0 && t < n_classes` failed.\r\n/pytorch/aten/src/THCUNN/SpatialClassNLLCriterion.cu:99: void cunn_SpatialClassNLLCriterion_updateOutput_kernel(T *, T *, T *, long *, T *, int, int, int, int, int, long) [with T = float, AccumT = float]: block: [0,0,0], thread: [492,0,0] Assertion `t >= 0 && t < n_classes` failed.\r\nTHCudaCheck FAIL file=/pytorch/aten/src/THCUNN/generic/SpatialClassNLLCriterion.cu line=131 error=59 : device-side assert triggered\r\nException NameError: \"global name 'FileNotFoundError' is not defined\" in <bound method _DataLoaderIter.__del__ of <torch.utils.data.dataloader._DataLoaderIter object at 0x7f10d37cb850>> ignored\r\nTraceback (most recent call last):\r\n  File \"jtrain.py\", line 552, in <module>\r\n    main()\r\n  File \"jtrain.py\", line 545, in main\r\n    train_adv(generator,discriminator,optimG,optimD,trainloader_l,valoader,args)\r\n  File \"jtrain.py\", line 243, in train_adv\r\n    LGce = nn.NLLLoss()(cpmaplsmax,mask)\r\n  File \"/home/mmlab/.local/lib/python2.7/site-packages/torch/nn/modules/module.py\", line 491, in __call__\r\n    result = self.forward(*input, **kwargs)\r\n  File \"/home/mmlab/.local/lib/python2.7/site-packages/torch/nn/modules/loss.py\", line 193, in forward\r\n    self.ignore_index, self.reduce)\r\n  File \"/home/mmlab/.local/lib/python2.7/site-packages/torch/nn/functional.py\", line 1334, in nll_loss\r\n    return torch._C._nn.nll_loss2d(input, target, weight, size_average, ignore_index, reduce)\r\nRuntimeError: cuda runtime error (59) : device-side assert triggered at `/pytorch/aten/src/THCUNN/generic/SpatialClassNLLCriterion.cu:131\r\n```\r\n\r\n"}