{"url": "https://api.github.com/repos/pytorch/pytorch/issues/comments/388510813", "html_url": "https://github.com/pytorch/pytorch/pull/7495#issuecomment-388510813", "issue_url": "https://api.github.com/repos/pytorch/pytorch/issues/7495", "id": 388510813, "node_id": "MDEyOklzc3VlQ29tbWVudDM4ODUxMDgxMw==", "user": {"login": "vedanuj", "id": 13946458, "node_id": "MDQ6VXNlcjEzOTQ2NDU4", "avatar_url": "https://avatars2.githubusercontent.com/u/13946458?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vedanuj", "html_url": "https://github.com/vedanuj", "followers_url": "https://api.github.com/users/vedanuj/followers", "following_url": "https://api.github.com/users/vedanuj/following{/other_user}", "gists_url": "https://api.github.com/users/vedanuj/gists{/gist_id}", "starred_url": "https://api.github.com/users/vedanuj/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vedanuj/subscriptions", "organizations_url": "https://api.github.com/users/vedanuj/orgs", "repos_url": "https://api.github.com/users/vedanuj/repos", "events_url": "https://api.github.com/users/vedanuj/events{/privacy}", "received_events_url": "https://api.github.com/users/vedanuj/received_events", "type": "User", "site_admin": false}, "created_at": "2018-05-11T23:35:25Z", "updated_at": "2018-05-11T23:35:25Z", "author_association": "CONTRIBUTOR", "body_html": "<p><a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=4583066\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/apaszke\">@apaszke</a>  I benchmarked with <code>Sleef_tanhf8_u10</code> and it's somewhat slower than this implementation. Sleef also has <code>avx</code>/<code>avx2</code> versions of these functions which are also slower.</p>\n<p>However if you suggest we use the Sleef version to keep it more consistent thorughout the codebase I can update this PR to use <code>Sleef_tanhf8_u10</code>.</p>\n<p>With <code>Sleef_tanhf8_u10</code></p>\n<pre><code>['tanh']\ntanh:           size: 10^2      count: 10000    elapsed: 2.47904634475708       type: torch.FloatTensor\ntanh:           size: 10^3      count: 1000     elapsed: 0.5574073791503906     type: torch.FloatTensor\ntanh:           size: 10^4      count: 100      elapsed: 0.6806240081787109     type: torch.FloatTensor\ntanh:           size: 10^5      count: 10       elapsed: 0.5766274929046631     type: torch.FloatTensor\n</code></pre>\n<p>With <code>Sleef_tanhf8_u10avx</code></p>\n<pre><code>['tanh']\ntanh:           size: 10^2      count: 10000    elapsed: 3.0415682792663574     type: torch.FloatTensor\ntanh:           size: 10^3      count: 1000     elapsed: 0.740088939666748      type: torch.FloatTensor\ntanh:           size: 10^4      count: 100      elapsed: 0.7270100116729736     type: torch.FloatTensor\ntanh:           size: 10^5      count: 10       elapsed: 0.5357003211975098     type: torch.FloatTensor\n\n</code></pre>\n<p>With <code>Sleef_tanhf8_u10avx2</code></p>\n<pre><code>['tanh']\ntanh:           size: 10^2      count: 10000    elapsed: 2.3759076595306396     type: torch.FloatTensor\ntanh:           size: 10^3      count: 1000     elapsed: 0.6075067520141602     type: torch.FloatTensor\ntanh:           size: 10^4      count: 100      elapsed: 0.6829066276550293     type: torch.FloatTensor\ntanh:           size: 10^5      count: 10       elapsed: 0.5176279544830322     type: torch.FloatTensor\n</code></pre>", "body_text": "@apaszke  I benchmarked with Sleef_tanhf8_u10 and it's somewhat slower than this implementation. Sleef also has avx/avx2 versions of these functions which are also slower.\nHowever if you suggest we use the Sleef version to keep it more consistent thorughout the codebase I can update this PR to use Sleef_tanhf8_u10.\nWith Sleef_tanhf8_u10\n['tanh']\ntanh:           size: 10^2      count: 10000    elapsed: 2.47904634475708       type: torch.FloatTensor\ntanh:           size: 10^3      count: 1000     elapsed: 0.5574073791503906     type: torch.FloatTensor\ntanh:           size: 10^4      count: 100      elapsed: 0.6806240081787109     type: torch.FloatTensor\ntanh:           size: 10^5      count: 10       elapsed: 0.5766274929046631     type: torch.FloatTensor\n\nWith Sleef_tanhf8_u10avx\n['tanh']\ntanh:           size: 10^2      count: 10000    elapsed: 3.0415682792663574     type: torch.FloatTensor\ntanh:           size: 10^3      count: 1000     elapsed: 0.740088939666748      type: torch.FloatTensor\ntanh:           size: 10^4      count: 100      elapsed: 0.7270100116729736     type: torch.FloatTensor\ntanh:           size: 10^5      count: 10       elapsed: 0.5357003211975098     type: torch.FloatTensor\n\n\nWith Sleef_tanhf8_u10avx2\n['tanh']\ntanh:           size: 10^2      count: 10000    elapsed: 2.3759076595306396     type: torch.FloatTensor\ntanh:           size: 10^3      count: 1000     elapsed: 0.6075067520141602     type: torch.FloatTensor\ntanh:           size: 10^4      count: 100      elapsed: 0.6829066276550293     type: torch.FloatTensor\ntanh:           size: 10^5      count: 10       elapsed: 0.5176279544830322     type: torch.FloatTensor", "body": "@apaszke  I benchmarked with `Sleef_tanhf8_u10` and it's somewhat slower than this implementation. Sleef also has `avx`/`avx2` versions of these functions which are also slower. \r\n\r\nHowever if you suggest we use the Sleef version to keep it more consistent thorughout the codebase I can update this PR to use `Sleef_tanhf8_u10`. \r\n\r\nWith `Sleef_tanhf8_u10`\r\n\r\n```\r\n['tanh']\r\ntanh:           size: 10^2      count: 10000    elapsed: 2.47904634475708       type: torch.FloatTensor\r\ntanh:           size: 10^3      count: 1000     elapsed: 0.5574073791503906     type: torch.FloatTensor\r\ntanh:           size: 10^4      count: 100      elapsed: 0.6806240081787109     type: torch.FloatTensor\r\ntanh:           size: 10^5      count: 10       elapsed: 0.5766274929046631     type: torch.FloatTensor\r\n```\r\n\r\nWith `Sleef_tanhf8_u10avx`\r\n\r\n```\r\n['tanh']\r\ntanh:           size: 10^2      count: 10000    elapsed: 3.0415682792663574     type: torch.FloatTensor\r\ntanh:           size: 10^3      count: 1000     elapsed: 0.740088939666748      type: torch.FloatTensor\r\ntanh:           size: 10^4      count: 100      elapsed: 0.7270100116729736     type: torch.FloatTensor\r\ntanh:           size: 10^5      count: 10       elapsed: 0.5357003211975098     type: torch.FloatTensor\r\n\r\n```\r\n\r\nWith `Sleef_tanhf8_u10avx2`\r\n\r\n```\r\n['tanh']\r\ntanh:           size: 10^2      count: 10000    elapsed: 2.3759076595306396     type: torch.FloatTensor\r\ntanh:           size: 10^3      count: 1000     elapsed: 0.6075067520141602     type: torch.FloatTensor\r\ntanh:           size: 10^4      count: 100      elapsed: 0.6829066276550293     type: torch.FloatTensor\r\ntanh:           size: 10^5      count: 10       elapsed: 0.5176279544830322     type: torch.FloatTensor\r\n```\r\n"}