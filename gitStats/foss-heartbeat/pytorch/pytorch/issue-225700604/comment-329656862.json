{"url": "https://api.github.com/repos/pytorch/pytorch/issues/comments/329656862", "html_url": "https://github.com/pytorch/pytorch/issues/1433#issuecomment-329656862", "issue_url": "https://api.github.com/repos/pytorch/pytorch/issues/1433", "id": 329656862, "node_id": "MDEyOklzc3VlQ29tbWVudDMyOTY1Njg2Mg==", "user": {"login": "gchanan", "id": 3768583, "node_id": "MDQ6VXNlcjM3Njg1ODM=", "avatar_url": "https://avatars2.githubusercontent.com/u/3768583?v=4", "gravatar_id": "", "url": "https://api.github.com/users/gchanan", "html_url": "https://github.com/gchanan", "followers_url": "https://api.github.com/users/gchanan/followers", "following_url": "https://api.github.com/users/gchanan/following{/other_user}", "gists_url": "https://api.github.com/users/gchanan/gists{/gist_id}", "starred_url": "https://api.github.com/users/gchanan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/gchanan/subscriptions", "organizations_url": "https://api.github.com/users/gchanan/orgs", "repos_url": "https://api.github.com/users/gchanan/repos", "events_url": "https://api.github.com/users/gchanan/events{/privacy}", "received_events_url": "https://api.github.com/users/gchanan/received_events", "type": "User", "site_admin": false}, "created_at": "2017-09-15T02:01:00Z", "updated_at": "2017-09-15T02:01:00Z", "author_association": "CONTRIBUTOR", "body_html": "<p>I don't think a Scalar type is really the correct solution to the overflow problem (<a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load issue title\" data-id=\"224972443\" data-permission-text=\"Issue title is private\" data-url=\"https://github.com/pytorch/pytorch/issues/1389\" data-hovercard-type=\"issue\" data-hovercard-url=\"/pytorch/pytorch/issues/1389/hovercard\" href=\"https://github.com/pytorch/pytorch/issues/1389\">#1389</a>); that would fix the all dimension case, but not the case where a single dimension is specified.  The right solution, I think, is to have a dtype parameter that specifies the output type (and maybe accumulation type as well, although we are limited by TH/THC here).</p>", "body_text": "I don't think a Scalar type is really the correct solution to the overflow problem (#1389); that would fix the all dimension case, but not the case where a single dimension is specified.  The right solution, I think, is to have a dtype parameter that specifies the output type (and maybe accumulation type as well, although we are limited by TH/THC here).", "body": "I don't think a Scalar type is really the correct solution to the overflow problem (https://github.com/pytorch/pytorch/issues/1389); that would fix the all dimension case, but not the case where a single dimension is specified.  The right solution, I think, is to have a dtype parameter that specifies the output type (and maybe accumulation type as well, although we are limited by TH/THC here)."}