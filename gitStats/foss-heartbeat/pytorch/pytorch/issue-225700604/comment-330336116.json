{"url": "https://api.github.com/repos/pytorch/pytorch/issues/comments/330336116", "html_url": "https://github.com/pytorch/pytorch/issues/1433#issuecomment-330336116", "issue_url": "https://api.github.com/repos/pytorch/pytorch/issues/1433", "id": 330336116, "node_id": "MDEyOklzc3VlQ29tbWVudDMzMDMzNjExNg==", "user": {"login": "gchanan", "id": 3768583, "node_id": "MDQ6VXNlcjM3Njg1ODM=", "avatar_url": "https://avatars2.githubusercontent.com/u/3768583?v=4", "gravatar_id": "", "url": "https://api.github.com/users/gchanan", "html_url": "https://github.com/gchanan", "followers_url": "https://api.github.com/users/gchanan/followers", "following_url": "https://api.github.com/users/gchanan/following{/other_user}", "gists_url": "https://api.github.com/users/gchanan/gists{/gist_id}", "starred_url": "https://api.github.com/users/gchanan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/gchanan/subscriptions", "organizations_url": "https://api.github.com/users/gchanan/orgs", "repos_url": "https://api.github.com/users/gchanan/repos", "events_url": "https://api.github.com/users/gchanan/events{/privacy}", "received_events_url": "https://api.github.com/users/gchanan/received_events", "type": "User", "site_admin": false}, "created_at": "2017-09-18T19:49:44Z", "updated_at": "2017-09-18T19:49:44Z", "author_association": "CONTRIBUTOR", "body_html": "<p>Glad to see we are thinking along the same general lines <a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=9110200\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/fmassa\">@fmassa</a>.  On the amount of work question, I'm really only proposing that we define a <code>dtype</code> that can be passed to non-typed torch constructors/factory, e.g. <code>randn</code>, <code>ones</code>, <code>zeros</code>, and the new <code>tensor</code> (?), and maybe changing the string representation to print a <code>dtype</code> so that (at least small) tensors can be constructed directly from that representation.</p>\n<p>I'm not really sure I want to weigh in on the <code>array</code> vs <code>tensor</code> naming, it's a good question, but as you noted, would be a lot of work to change.</p>", "body_text": "Glad to see we are thinking along the same general lines @fmassa.  On the amount of work question, I'm really only proposing that we define a dtype that can be passed to non-typed torch constructors/factory, e.g. randn, ones, zeros, and the new tensor (?), and maybe changing the string representation to print a dtype so that (at least small) tensors can be constructed directly from that representation.\nI'm not really sure I want to weigh in on the array vs tensor naming, it's a good question, but as you noted, would be a lot of work to change.", "body": "Glad to see we are thinking along the same general lines @fmassa.  On the amount of work question, I'm really only proposing that we define a `dtype` that can be passed to non-typed torch constructors/factory, e.g. `randn`, `ones`, `zeros`, and the new `tensor` (?), and maybe changing the string representation to print a `dtype` so that (at least small) tensors can be constructed directly from that representation.\r\n\r\nI'm not really sure I want to weigh in on the `array` vs `tensor` naming, it's a good question, but as you noted, would be a lot of work to change."}