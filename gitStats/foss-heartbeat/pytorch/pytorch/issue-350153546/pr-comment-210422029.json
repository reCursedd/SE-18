{"url": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/210422029", "pull_request_review_id": 146635262, "id": 210422029, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIxMDQyMjAyOQ==", "diff_hunk": "@@ -59,58 +59,76 @@ void Tensor::backward(\n   pImpl->backward(std::move(gradient), keep_graph, create_graph);\n }\n \n-TensorImpl::TensorImpl(TensorTypeId type_id, ScalarType scalar_type)\n-    : type_id_(type_id), scalar_type_(scalar_type) {\n-  auto type = &globalContext().getType(tensorTypeIdToBackend(type_id), scalar_type);\n-  Storage* storage = type->storage(true).release();\n-  StorageImpl* storage_impl = storage->pImpl();\n-  tensor = new THTensor(storage_impl);\n+TensorImpl::TensorImpl(TensorTypeId type_id, ScalarType scalar_type, bool is_variable)\n+    : TensorImpl(nullptr, type_id, scalar_type, is_variable) {\n+  // UndefinedTensors and SparseTensors don't have storages.\n+  if (type_id != UndefinedTensorId() && scalar_type != ScalarType::Undefined\n+      && type_id != SparseCPUTensorId() && type_id != SparseCUDATensorId()) {\n+    auto type = &globalContext().getType(tensorTypeIdToBackend(type_id), scalar_type);\n+    auto storage = type->storage(true);\n+    storage_ = storage->pImpl();\n+    storage_->retain();\n+  }\n }\n \n+TensorImpl::TensorImpl(StorageImpl* storage, TensorTypeId type_id, bool is_variable)\n+    : TensorImpl(storage, type_id, storage->scalar_type(), is_variable) {}\n+\n+TensorImpl::TensorImpl(StorageImpl* storage, TensorTypeId type_id, ScalarType scalar_type, bool is_variable)\n+    : storage_(storage),\n+      storage_offset_(0),\n+      sizes_{0},\n+      strides_{1},\n+      type_id_(type_id),\n+      scalar_type_(scalar_type),\n+      is_variable_(is_variable) {}\n+\n TensorImpl::~TensorImpl() {\n-  if (tensor) tensor->release();\n+  if (storage_) {\n+    storage_->release();\n+    storage_ = nullptr;\n+  }", "path": "aten/src/ATen/TensorImpl.cpp", "position": 40, "original_position": 39, "commit_id": "26e44a20d0db758b928f8751881fc2e033ace926", "original_commit_id": "2677739bea2ed0e492f8c47eb29485d252ec1bd4", "user": {"login": "ezyang", "id": 13564, "node_id": "MDQ6VXNlcjEzNTY0", "avatar_url": "https://avatars0.githubusercontent.com/u/13564?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ezyang", "html_url": "https://github.com/ezyang", "followers_url": "https://api.github.com/users/ezyang/followers", "following_url": "https://api.github.com/users/ezyang/following{/other_user}", "gists_url": "https://api.github.com/users/ezyang/gists{/gist_id}", "starred_url": "https://api.github.com/users/ezyang/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ezyang/subscriptions", "organizations_url": "https://api.github.com/users/ezyang/orgs", "repos_url": "https://api.github.com/users/ezyang/repos", "events_url": "https://api.github.com/users/ezyang/events{/privacy}", "received_events_url": "https://api.github.com/users/ezyang/received_events", "type": "User", "site_admin": false}, "body": "Soon to be deleted, in the intrusive ptr patch :)", "created_at": "2018-08-15T21:54:32Z", "updated_at": "2018-11-23T15:49:27Z", "html_url": "https://github.com/pytorch/pytorch/pull/10479#discussion_r210422029", "pull_request_url": "https://api.github.com/repos/pytorch/pytorch/pulls/10479", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/210422029"}, "html": {"href": "https://github.com/pytorch/pytorch/pull/10479#discussion_r210422029"}, "pull_request": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/10479"}}, "body_html": "<p>Soon to be deleted, in the intrusive ptr patch :)</p>", "body_text": "Soon to be deleted, in the intrusive ptr patch :)"}