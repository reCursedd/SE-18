{"url": "https://api.github.com/repos/pytorch/pytorch/issues/comments/406030626", "html_url": "https://github.com/pytorch/pytorch/issues/9413#issuecomment-406030626", "issue_url": "https://api.github.com/repos/pytorch/pytorch/issues/9413", "id": 406030626, "node_id": "MDEyOklzc3VlQ29tbWVudDQwNjAzMDYyNg==", "user": {"login": "fmassa", "id": 9110200, "node_id": "MDQ6VXNlcjkxMTAyMDA=", "avatar_url": "https://avatars2.githubusercontent.com/u/9110200?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fmassa", "html_url": "https://github.com/fmassa", "followers_url": "https://api.github.com/users/fmassa/followers", "following_url": "https://api.github.com/users/fmassa/following{/other_user}", "gists_url": "https://api.github.com/users/fmassa/gists{/gist_id}", "starred_url": "https://api.github.com/users/fmassa/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fmassa/subscriptions", "organizations_url": "https://api.github.com/users/fmassa/orgs", "repos_url": "https://api.github.com/users/fmassa/repos", "events_url": "https://api.github.com/users/fmassa/events{/privacy}", "received_events_url": "https://api.github.com/users/fmassa/received_events", "type": "User", "site_admin": false}, "created_at": "2018-07-18T18:31:42Z", "updated_at": "2018-07-18T18:31:42Z", "author_association": "MEMBER", "body_html": "<p>A not very optimized version of this function can be obtained with a one-liner I believe (for 1d <code>values</code>)</p>\n<div class=\"highlight highlight-source-python\"><pre><span class=\"pl-k\">def</span> <span class=\"pl-en\">find</span>(<span class=\"pl-smi\">tensor</span>, <span class=\"pl-smi\">values</span>):\n    <span class=\"pl-k\">return</span> torch.nonzero(tensor[<span class=\"pl-c1\">...</span>, <span class=\"pl-c1\">None</span>] <span class=\"pl-k\">==</span> values)</pre></div>", "body_text": "A not very optimized version of this function can be obtained with a one-liner I believe (for 1d values)\ndef find(tensor, values):\n    return torch.nonzero(tensor[..., None] == values)", "body": "A not very optimized version of this function can be obtained with a one-liner I believe (for 1d `values`)\r\n```python\r\ndef find(tensor, values):\r\n    return torch.nonzero(tensor[..., None] == values)\r\n```"}