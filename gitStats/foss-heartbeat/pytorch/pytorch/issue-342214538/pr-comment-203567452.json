{"url": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/203567452", "pull_request_review_id": 138483464, "id": 203567452, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwMzU2NzQ1Mg==", "diff_hunk": "@@ -2568,24 +2620,53 @@ void TransposeCPUImpl(\n   }\n }\n \n-} // namespace\n+template <typename T>\n+void TransposeCPUImpl(\n+    const int ndim,\n+    const int* dims,\n+    const int* axes,\n+    const T* X,\n+    T* Y) {\n+  if (utils::IsIdentityPermutation(ndim, axes)) {\n+    const int size =\n+        std::accumulate(dims, dims + ndim, 1, std::multiplies<int>());\n+    std::memcpy(Y, X, size * sizeof(T));\n+    return;\n+  }\n+  if (ndim == 2) {\n+    Tranpose2D<T>(dims[0], dims[1], X, Y);\n+  } else {\n+    TransposeND<T>(ndim, dims, axes, X, Y);\n+  }\n+}\n \n template <>\n-void Transpose<float, CPUContext>(\n+void TransposeCPUImpl(\n     const int ndim,\n     const int* dims,\n     const int* axes,\n     const float* X,\n-    float* Y,\n-    CPUContext* /* context */) {\n-#ifdef CAFFE2_USE_HPTT\n-  if (TryTransposeWithHPTT(ndim, dims, axes, X, Y)) {\n+    float* Y) {\n+  if (utils::IsIdentityPermutation(ndim, axes)) {", "path": "caffe2/utils/math_cpu.cc", "position": 145, "original_position": 145, "commit_id": "ea995d973413f4ef0ee9226c998d2e9dc0728eb4", "original_commit_id": "b27c8dfeeb86264b3d9253cb3071e9d94f191253", "user": {"login": "houseroad", "id": 30275821, "node_id": "MDQ6VXNlcjMwMjc1ODIx", "avatar_url": "https://avatars0.githubusercontent.com/u/30275821?v=4", "gravatar_id": "", "url": "https://api.github.com/users/houseroad", "html_url": "https://github.com/houseroad", "followers_url": "https://api.github.com/users/houseroad/followers", "following_url": "https://api.github.com/users/houseroad/following{/other_user}", "gists_url": "https://api.github.com/users/houseroad/gists{/gist_id}", "starred_url": "https://api.github.com/users/houseroad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/houseroad/subscriptions", "organizations_url": "https://api.github.com/users/houseroad/orgs", "repos_url": "https://api.github.com/users/houseroad/repos", "events_url": "https://api.github.com/users/houseroad/events{/privacy}", "received_events_url": "https://api.github.com/users/houseroad/received_events", "type": "User", "site_admin": false}, "body": "Add another check, if X == Y, just return?", "created_at": "2018-07-19T00:00:14Z", "updated_at": "2018-11-23T15:47:40Z", "html_url": "https://github.com/pytorch/pytorch/pull/9525#discussion_r203567452", "pull_request_url": "https://api.github.com/repos/pytorch/pytorch/pulls/9525", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/203567452"}, "html": {"href": "https://github.com/pytorch/pytorch/pull/9525#discussion_r203567452"}, "pull_request": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/9525"}}, "body_html": "<p>Add another check, if X == Y, just return?</p>", "body_text": "Add another check, if X == Y, just return?"}