{"url": "https://api.github.com/repos/pytorch/pytorch/issues/comments/332316360", "html_url": "https://github.com/pytorch/pytorch/issues/2848#issuecomment-332316360", "issue_url": "https://api.github.com/repos/pytorch/pytorch/issues/2848", "id": 332316360, "node_id": "MDEyOklzc3VlQ29tbWVudDMzMjMxNjM2MA==", "user": {"login": "alykhantejani", "id": 687194, "node_id": "MDQ6VXNlcjY4NzE5NA==", "avatar_url": "https://avatars1.githubusercontent.com/u/687194?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alykhantejani", "html_url": "https://github.com/alykhantejani", "followers_url": "https://api.github.com/users/alykhantejani/followers", "following_url": "https://api.github.com/users/alykhantejani/following{/other_user}", "gists_url": "https://api.github.com/users/alykhantejani/gists{/gist_id}", "starred_url": "https://api.github.com/users/alykhantejani/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alykhantejani/subscriptions", "organizations_url": "https://api.github.com/users/alykhantejani/orgs", "repos_url": "https://api.github.com/users/alykhantejani/repos", "events_url": "https://api.github.com/users/alykhantejani/events{/privacy}", "received_events_url": "https://api.github.com/users/alykhantejani/received_events", "type": "User", "site_admin": false}, "created_at": "2017-09-26T19:55:32Z", "updated_at": "2017-09-26T19:56:14Z", "author_association": "CONTRIBUTOR", "body_html": "<p>I don't think this is a bug, <code>__getattr__</code> is called when an attribute lookup has not found the attribute in the usual places (i.e. it is not an instance attribute nor is it found in the class tree for self). For example, this works fine:</p>\n<pre><code>import torch\nfrom torch import nn\nmod = nn.Module()\nmod.val = 5\nprint(mod.val)\n&gt;&gt;&gt;5\ngetattr(mod, 'val')\n&gt;&gt;&gt;5\n</code></pre>\n<p>But this <code>getattr(mod, 'val2')</code> throws the error you reference</p>", "body_text": "I don't think this is a bug, __getattr__ is called when an attribute lookup has not found the attribute in the usual places (i.e. it is not an instance attribute nor is it found in the class tree for self). For example, this works fine:\nimport torch\nfrom torch import nn\nmod = nn.Module()\nmod.val = 5\nprint(mod.val)\n>>>5\ngetattr(mod, 'val')\n>>>5\n\nBut this getattr(mod, 'val2') throws the error you reference", "body": "I don't think this is a bug, `__getattr__` is called when an attribute lookup has not found the attribute in the usual places (i.e. it is not an instance attribute nor is it found in the class tree for self). For example, this works fine:\r\n\r\n```\r\nimport torch\r\nfrom torch import nn\r\nmod = nn.Module()\r\nmod.val = 5\r\nprint(mod.val)\r\n>>>5\r\ngetattr(mod, 'val')\r\n>>>5\r\n```\r\n\r\nBut this `getattr(mod, 'val2')` throws the error you reference"}