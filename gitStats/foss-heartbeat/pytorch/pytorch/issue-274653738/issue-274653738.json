{"url": "https://api.github.com/repos/pytorch/pytorch/issues/3743", "repository_url": "https://api.github.com/repos/pytorch/pytorch", "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/3743/labels{/name}", "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/3743/comments", "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/3743/events", "html_url": "https://github.com/pytorch/pytorch/issues/3743", "id": 274653738, "node_id": "MDU6SXNzdWUyNzQ2NTM3Mzg=", "number": 3743, "title": "Runtime error(s) for Conv2d second gradient", "user": {"login": "dmarnerides", "id": 7605917, "node_id": "MDQ6VXNlcjc2MDU5MTc=", "avatar_url": "https://avatars1.githubusercontent.com/u/7605917?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dmarnerides", "html_url": "https://github.com/dmarnerides", "followers_url": "https://api.github.com/users/dmarnerides/followers", "following_url": "https://api.github.com/users/dmarnerides/following{/other_user}", "gists_url": "https://api.github.com/users/dmarnerides/gists{/gist_id}", "starred_url": "https://api.github.com/users/dmarnerides/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dmarnerides/subscriptions", "organizations_url": "https://api.github.com/users/dmarnerides/orgs", "repos_url": "https://api.github.com/users/dmarnerides/repos", "events_url": "https://api.github.com/users/dmarnerides/events{/privacy}", "received_events_url": "https://api.github.com/users/dmarnerides/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 424131847, "node_id": "MDU6TGFiZWw0MjQxMzE4NDc=", "url": "https://api.github.com/repos/pytorch/pytorch/labels/bug", "name": "bug", "color": "b60205", "default": true}, {"id": 443484135, "node_id": "MDU6TGFiZWw0NDM0ODQxMzU=", "url": "https://api.github.com/repos/pytorch/pytorch/labels/high%20priority", "name": "high priority", "color": "F22613", "default": false}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 10, "created_at": "2017-11-16T20:30:34Z", "updated_at": "2017-11-22T13:58:18Z", "closed_at": "2017-11-21T00:05:26Z", "author_association": "NONE", "body_html": "<p>The following code:</p>\n<pre><code>class Network(nn.Module):\n    def __init__(self):\n        super(Network, self).__init__()\n        self.main = nn.Sequential(\n            nn.Conv2d(1, 1, 1, 1),\n            nn.ReLU(),\n            nn.Conv2d(1, 1, 1, 1),\n        )\n    def forward(self, v_x):\n        return self.main(v_x).view(v_x.size(0), 1)\n\nnet = Network()\nnet.cuda()\nv_in = Variable(torch.Tensor(2,1,1,1).cuda(), requires_grad=True)\ngrad_out = Variable(torch.ones(2,1,1,1).cuda())\n\ngradient = autograd.grad(outputs=net(v_in), inputs=v_in,\n                         grad_outputs=grad_out,\n                         create_graph=True, retain_graph=True, \n                         only_inputs=True)[0]\ngradient.mean().backward()\n</code></pre>\n<p>produces this error</p>\n<blockquote>\n<p>RuntimeError: Expected a Tensor of type Variable[torch.cuda.FloatTensor] but found an undefined Tensor for argument #0 'grad_output'</p>\n</blockquote>\n<p>Also, removing the ReLU from the network:</p>\n<pre><code>class Network(nn.Module):\n    def __init__(self):\n        super(Network, self).__init__()\n        self.main = nn.Sequential(\n            nn.Conv2d(1, 1, 1, 1),\n            nn.Conv2d(1, 1, 1, 1),\n        )\n    def forward(self, v_x):\n        return self.main(v_x).view(v_x.size(0), 1)\n</code></pre>\n<p>causes the error to change to:</p>\n<blockquote>\n<p>RuntimeError: ConvNdBackward: expected Variable at argument 0 (got None)</p>\n</blockquote>\n<p>However, when the second convolution is removed as well:</p>\n<pre><code>class Network(nn.Module):\n    def __init__(self):\n        super(Network, self).__init__()\n        self.main = nn.Sequential(\n            nn.Conv2d(1, 1, 1, 1),\n        )\n    def forward(self, v_x):\n        return self.main(v_x).view(v_x.size(0), 1)\n</code></pre>\n<p>then the code runs error free</p>\n<p>I'm on a ppc64le architecture with a P100 GPU, CUDA 8.0 and PyTorch version '0.4.0a0+6eca9e0'</p>", "body_text": "The following code:\nclass Network(nn.Module):\n    def __init__(self):\n        super(Network, self).__init__()\n        self.main = nn.Sequential(\n            nn.Conv2d(1, 1, 1, 1),\n            nn.ReLU(),\n            nn.Conv2d(1, 1, 1, 1),\n        )\n    def forward(self, v_x):\n        return self.main(v_x).view(v_x.size(0), 1)\n\nnet = Network()\nnet.cuda()\nv_in = Variable(torch.Tensor(2,1,1,1).cuda(), requires_grad=True)\ngrad_out = Variable(torch.ones(2,1,1,1).cuda())\n\ngradient = autograd.grad(outputs=net(v_in), inputs=v_in,\n                         grad_outputs=grad_out,\n                         create_graph=True, retain_graph=True, \n                         only_inputs=True)[0]\ngradient.mean().backward()\n\nproduces this error\n\nRuntimeError: Expected a Tensor of type Variable[torch.cuda.FloatTensor] but found an undefined Tensor for argument #0 'grad_output'\n\nAlso, removing the ReLU from the network:\nclass Network(nn.Module):\n    def __init__(self):\n        super(Network, self).__init__()\n        self.main = nn.Sequential(\n            nn.Conv2d(1, 1, 1, 1),\n            nn.Conv2d(1, 1, 1, 1),\n        )\n    def forward(self, v_x):\n        return self.main(v_x).view(v_x.size(0), 1)\n\ncauses the error to change to:\n\nRuntimeError: ConvNdBackward: expected Variable at argument 0 (got None)\n\nHowever, when the second convolution is removed as well:\nclass Network(nn.Module):\n    def __init__(self):\n        super(Network, self).__init__()\n        self.main = nn.Sequential(\n            nn.Conv2d(1, 1, 1, 1),\n        )\n    def forward(self, v_x):\n        return self.main(v_x).view(v_x.size(0), 1)\n\nthen the code runs error free\nI'm on a ppc64le architecture with a P100 GPU, CUDA 8.0 and PyTorch version '0.4.0a0+6eca9e0'", "body": "The following code:\r\n```\r\nclass Network(nn.Module):\r\n    def __init__(self):\r\n        super(Network, self).__init__()\r\n        self.main = nn.Sequential(\r\n            nn.Conv2d(1, 1, 1, 1),\r\n            nn.ReLU(),\r\n            nn.Conv2d(1, 1, 1, 1),\r\n        )\r\n    def forward(self, v_x):\r\n        return self.main(v_x).view(v_x.size(0), 1)\r\n\r\nnet = Network()\r\nnet.cuda()\r\nv_in = Variable(torch.Tensor(2,1,1,1).cuda(), requires_grad=True)\r\ngrad_out = Variable(torch.ones(2,1,1,1).cuda())\r\n\r\ngradient = autograd.grad(outputs=net(v_in), inputs=v_in,\r\n                         grad_outputs=grad_out,\r\n                         create_graph=True, retain_graph=True, \r\n                         only_inputs=True)[0]\r\ngradient.mean().backward()\r\n```\r\nproduces this error\r\n> RuntimeError: Expected a Tensor of type Variable[torch.cuda.FloatTensor] but found an undefined Tensor for argument #0 'grad_output'\r\n\r\nAlso, removing the ReLU from the network:\r\n```\r\nclass Network(nn.Module):\r\n    def __init__(self):\r\n        super(Network, self).__init__()\r\n        self.main = nn.Sequential(\r\n            nn.Conv2d(1, 1, 1, 1),\r\n            nn.Conv2d(1, 1, 1, 1),\r\n        )\r\n    def forward(self, v_x):\r\n        return self.main(v_x).view(v_x.size(0), 1)\r\n```\r\ncauses the error to change to:\r\n> RuntimeError: ConvNdBackward: expected Variable at argument 0 (got None)\r\n\r\nHowever, when the second convolution is removed as well:\r\n```\r\nclass Network(nn.Module):\r\n    def __init__(self):\r\n        super(Network, self).__init__()\r\n        self.main = nn.Sequential(\r\n            nn.Conv2d(1, 1, 1, 1),\r\n        )\r\n    def forward(self, v_x):\r\n        return self.main(v_x).view(v_x.size(0), 1)\r\n```\r\nthen the code runs error free\r\n\r\nI'm on a ppc64le architecture with a P100 GPU, CUDA 8.0 and PyTorch version '0.4.0a0+6eca9e0'"}