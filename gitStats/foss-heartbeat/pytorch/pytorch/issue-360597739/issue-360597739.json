{"url": "https://api.github.com/repos/pytorch/pytorch/issues/11736", "repository_url": "https://api.github.com/repos/pytorch/pytorch", "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/11736/labels{/name}", "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/11736/comments", "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/11736/events", "html_url": "https://github.com/pytorch/pytorch/issues/11736", "id": 360597739, "node_id": "MDU6SXNzdWUzNjA1OTc3Mzk=", "number": 11736, "title": "[jit] jit backward does not work if a tensor that required grad was broadcast in forward", "user": {"login": "ngimel", "id": 15841449, "node_id": "MDQ6VXNlcjE1ODQxNDQ5", "avatar_url": "https://avatars3.githubusercontent.com/u/15841449?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ngimel", "html_url": "https://github.com/ngimel", "followers_url": "https://api.github.com/users/ngimel/followers", "following_url": "https://api.github.com/users/ngimel/following{/other_user}", "gists_url": "https://api.github.com/users/ngimel/gists{/gist_id}", "starred_url": "https://api.github.com/users/ngimel/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ngimel/subscriptions", "organizations_url": "https://api.github.com/users/ngimel/orgs", "repos_url": "https://api.github.com/users/ngimel/repos", "events_url": "https://api.github.com/users/ngimel/events{/privacy}", "received_events_url": "https://api.github.com/users/ngimel/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 679953983, "node_id": "MDU6TGFiZWw2Nzk5NTM5ODM=", "url": "https://api.github.com/repos/pytorch/pytorch/labels/jit", "name": "jit", "color": "c5def5", "default": false}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2018-09-16T03:29:36Z", "updated_at": "2018-09-16T03:29:37Z", "closed_at": null, "author_association": "CONTRIBUTOR", "body_html": "<pre><code>import torch\n\ndef fnsum(a, b):\n    a = a.unsqueeze(2)\n    b = b.unsqueeze(1)\n    sum = a + b\n    out = torch.tanh(sum)\n    return out\n\nif __name__ == '__main__':\n    b, t_q, t_k, n = 2, 3, 4, 5\n    a1 = torch.Tensor(b, t_q,  n).cuda().uniform_().half()\n    a2 = torch.Tensor(b, t_k, n).cuda().uniform_().half()\n    a1.requires_grad = True\n    a2.requires_grad = True\n    fn = torch.jit.script(fnsum)\n    out = fn(a1,a2)\n    out.backward(torch.ones_like(out))\n    print(fn.graph_for(a1,a2a))\n</code></pre>\n<p>produces</p>\n<pre><code>Traceback (most recent call last):\n  File \"add_broadcast.py\", line 23, in &lt;module&gt;\n    out.backward(torch.ones_like(out))\n  File \"/workspace/ngimel/pytorch_upstream/torch/tensor.py\", line 96, in backward\n    torch.autograd.backward(self, gradient, retain_graph, create_graph)\n  File \"/workspace/ngimel/pytorch_upstream/torch/autograd/__init__.py\", line 90, in backward\n    allow_unreachable=True)  # allow_unreachable flag\nRuntimeError: Function torch::jit::(anonymous namespace)::DifferentiableGraphBackward returned an invalid gradient at index 0 - got [2, 3, 4, 5] but expected shape compatible with [2, 3, 5]\n</code></pre>\n<p>Same error with <code>jit.trace</code>.</p>", "body_text": "import torch\n\ndef fnsum(a, b):\n    a = a.unsqueeze(2)\n    b = b.unsqueeze(1)\n    sum = a + b\n    out = torch.tanh(sum)\n    return out\n\nif __name__ == '__main__':\n    b, t_q, t_k, n = 2, 3, 4, 5\n    a1 = torch.Tensor(b, t_q,  n).cuda().uniform_().half()\n    a2 = torch.Tensor(b, t_k, n).cuda().uniform_().half()\n    a1.requires_grad = True\n    a2.requires_grad = True\n    fn = torch.jit.script(fnsum)\n    out = fn(a1,a2)\n    out.backward(torch.ones_like(out))\n    print(fn.graph_for(a1,a2a))\n\nproduces\nTraceback (most recent call last):\n  File \"add_broadcast.py\", line 23, in <module>\n    out.backward(torch.ones_like(out))\n  File \"/workspace/ngimel/pytorch_upstream/torch/tensor.py\", line 96, in backward\n    torch.autograd.backward(self, gradient, retain_graph, create_graph)\n  File \"/workspace/ngimel/pytorch_upstream/torch/autograd/__init__.py\", line 90, in backward\n    allow_unreachable=True)  # allow_unreachable flag\nRuntimeError: Function torch::jit::(anonymous namespace)::DifferentiableGraphBackward returned an invalid gradient at index 0 - got [2, 3, 4, 5] but expected shape compatible with [2, 3, 5]\n\nSame error with jit.trace.", "body": "```\r\nimport torch\r\n\r\ndef fnsum(a, b):\r\n    a = a.unsqueeze(2)\r\n    b = b.unsqueeze(1)\r\n    sum = a + b\r\n    out = torch.tanh(sum)\r\n    return out\r\n\r\nif __name__ == '__main__':\r\n    b, t_q, t_k, n = 2, 3, 4, 5\r\n    a1 = torch.Tensor(b, t_q,  n).cuda().uniform_().half()\r\n    a2 = torch.Tensor(b, t_k, n).cuda().uniform_().half()\r\n    a1.requires_grad = True\r\n    a2.requires_grad = True\r\n    fn = torch.jit.script(fnsum)\r\n    out = fn(a1,a2)\r\n    out.backward(torch.ones_like(out))\r\n    print(fn.graph_for(a1,a2a))\r\n```\r\nproduces\r\n```\r\nTraceback (most recent call last):\r\n  File \"add_broadcast.py\", line 23, in <module>\r\n    out.backward(torch.ones_like(out))\r\n  File \"/workspace/ngimel/pytorch_upstream/torch/tensor.py\", line 96, in backward\r\n    torch.autograd.backward(self, gradient, retain_graph, create_graph)\r\n  File \"/workspace/ngimel/pytorch_upstream/torch/autograd/__init__.py\", line 90, in backward\r\n    allow_unreachable=True)  # allow_unreachable flag\r\nRuntimeError: Function torch::jit::(anonymous namespace)::DifferentiableGraphBackward returned an invalid gradient at index 0 - got [2, 3, 4, 5] but expected shape compatible with [2, 3, 5]\r\n```\r\nSame error with `jit.trace`."}