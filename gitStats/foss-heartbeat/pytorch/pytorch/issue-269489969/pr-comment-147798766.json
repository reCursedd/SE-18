{"url": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/147798766", "pull_request_review_id": 72945619, "id": 147798766, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE0Nzc5ODc2Ng==", "diff_hunk": "@@ -131,13 +131,17 @@ std::string nodeName(Node * n) {\n \n // TODO: we need to support double-precision\n std::unordered_map<NodeKind,std::function<std::string(Node*)>> simple_map_ops = {\n-  {kSigmoid,         [](Node*) { return \"1.f / (1.f + expf(-${0}))\"; }},\n-  {kTanh,            [](Node*) { return \"tanhf(${0})\"; }},\n-  {kMul,             [](Node*) { return \"${0} * ${1}\"; }},\n-  {kAdd,             [](Node*) { return \"${0} + ${1}\"; }},\n-  {kNeg,             [](Node*) { return \"(-${0})\"; }},\n-  // TODO: support both float and int constants\n-  {kAddConstant,     [](Node* n) { return std::to_string(n->f(kvalue)) + \" + ${0}\"; }},\n+  {ksigmoid,         [](Node*) { return \"1.f / (1.f + expf(-${0}))\"; }},\n+  {ktanh,            [](Node*) { return \"tanhf(${0})\"; }},\n+  {kmul,             [](Node*) { return \"${0} * ${1}\"; }},\n+  {kadd,             [](Node*n) -> std::string {\n+    if(n->inputs().size() == 2)\n+      return \"${0} + ${1}\";\n+    else // TODO: support both float and int constants\n+      return \"${0} + \" + std::to_string(n->f(kvalue));", "path": "torch/csrc/jit/fusion_compiler.cpp", "position": null, "original_position": 18, "commit_id": "fee554fed041484a71dc339311ac15275567d88f", "original_commit_id": "04d11613de0b3cbaeb5462dc14c58376db6c3290", "user": {"login": "ezyang", "id": 13564, "node_id": "MDQ6VXNlcjEzNTY0", "avatar_url": "https://avatars0.githubusercontent.com/u/13564?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ezyang", "html_url": "https://github.com/ezyang", "followers_url": "https://api.github.com/users/ezyang/followers", "following_url": "https://api.github.com/users/ezyang/following{/other_user}", "gists_url": "https://api.github.com/users/ezyang/gists{/gist_id}", "starred_url": "https://api.github.com/users/ezyang/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ezyang/subscriptions", "organizations_url": "https://api.github.com/users/ezyang/orgs", "repos_url": "https://api.github.com/users/ezyang/repos", "events_url": "https://api.github.com/users/ezyang/events{/privacy}", "received_events_url": "https://api.github.com/users/ezyang/received_events", "type": "User", "site_admin": false}, "body": "Are you sure this works? IIRC, `value` is recorded as a scalar `z` not a float `f`.", "created_at": "2017-10-30T18:46:30Z", "updated_at": "2018-11-23T15:35:47Z", "html_url": "https://github.com/pytorch/pytorch/pull/3362#discussion_r147798766", "pull_request_url": "https://api.github.com/repos/pytorch/pytorch/pulls/3362", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/147798766"}, "html": {"href": "https://github.com/pytorch/pytorch/pull/3362#discussion_r147798766"}, "pull_request": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/3362"}}, "body_html": "<p>Are you sure this works? IIRC, <code>value</code> is recorded as a scalar <code>z</code> not a float <code>f</code>.</p>", "body_text": "Are you sure this works? IIRC, value is recorded as a scalar z not a float f."}