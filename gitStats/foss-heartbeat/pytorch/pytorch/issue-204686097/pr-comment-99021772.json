{"url": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/99021772", "pull_request_review_id": 19683518, "id": 99021772, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDk5MDIxNzcy", "diff_hunk": "@@ -0,0 +1,454 @@\n+#ifndef THS_GENERIC_FILE\n+#define THS_GENERIC_FILE \"tensors/generic/THSTensor.cpp\"\n+#else\n+\n+template<>\n+THSTensor<real>::THSTensor():\n+  tensor(THSTensor_(new)())\n+  {};\n+\n+template<>\n+THSTensor<real>::THSTensor(THSRealTensor *wrapped):\n+  tensor(wrapped)\n+  {};\n+\n+template<>\n+THSTensor<real>::~THSTensor() {\n+  if (tensor)\n+    THSTensor_(free)(tensor);\n+}\n+\n+template<>\n+auto THSTensor<real>::clone() const -> THSTensor* {\n+  return new THSTensor(THSTensor_(newClone)(tensor));\n+}\n+\n+template<>\n+auto THSTensor<real>::clone_shallow() -> THSTensor* {\n+  THSTensor_(retain)(tensor);\n+  return new THSTensor(tensor);\n+}\n+\n+template<>\n+int THSTensor<real>::nDim() const {\n+  return tensor->nDimension;\n+}\n+\n+template<>\n+auto THSTensor<real>::sizes() const -> long_range {\n+  return std::vector<long>(tensor->size, tensor->size + tensor->nDimension);\n+}\n+\n+template<>\n+const long* THSTensor<real>::rawSizes() const {\n+  return tensor->size;\n+}\n+\n+template<>\n+auto THSTensor<real>::strides() const -> long_range {\n+  throw std::runtime_error(\"THSTensor::strides() not supported\");\n+}\n+\n+template<>\n+const long* THSTensor<real>::rawStrides() const {\n+  throw std::runtime_error(\"THSTensor::rawStrides() not supported\");\n+}\n+\n+template<>\n+std::size_t THSTensor<real>::storageOffset() const {\n+  throw std::runtime_error(\"THSTensor::storageOffset() not supported\");\n+}\n+\n+template<>\n+std::size_t THSTensor<real>::elementSize() const {\n+  return sizeof(real);\n+}\n+\n+template<>\n+long long THSTensor<real>::numel() const {\n+  throw std::runtime_error(\"THSTensor::>::() not supported\");", "path": "torch/lib/THPP/tensors/generic/THSTensor.cpp", "position": 69, "original_position": 69, "commit_id": "cba2a7b7405ebb8b1b721e148f9deb6e02b1a858", "original_commit_id": "cba2a7b7405ebb8b1b721e148f9deb6e02b1a858", "user": {"login": "colesbury", "id": 655866, "node_id": "MDQ6VXNlcjY1NTg2Ng==", "avatar_url": "https://avatars1.githubusercontent.com/u/655866?v=4", "gravatar_id": "", "url": "https://api.github.com/users/colesbury", "html_url": "https://github.com/colesbury", "followers_url": "https://api.github.com/users/colesbury/followers", "following_url": "https://api.github.com/users/colesbury/following{/other_user}", "gists_url": "https://api.github.com/users/colesbury/gists{/gist_id}", "starred_url": "https://api.github.com/users/colesbury/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/colesbury/subscriptions", "organizations_url": "https://api.github.com/users/colesbury/orgs", "repos_url": "https://api.github.com/users/colesbury/repos", "events_url": "https://api.github.com/users/colesbury/events{/privacy}", "received_events_url": "https://api.github.com/users/colesbury/received_events", "type": "User", "site_admin": false}, "body": "My editor magic failed me :(", "created_at": "2017-02-01T23:22:15Z", "updated_at": "2018-11-23T15:32:22Z", "html_url": "https://github.com/pytorch/pytorch/pull/667#discussion_r99021772", "pull_request_url": "https://api.github.com/repos/pytorch/pytorch/pulls/667", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/99021772"}, "html": {"href": "https://github.com/pytorch/pytorch/pull/667#discussion_r99021772"}, "pull_request": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/667"}}, "body_html": "<p>My editor magic failed me :(</p>", "body_text": "My editor magic failed me :(", "in_reply_to_id": 99017137}