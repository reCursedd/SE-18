{"url": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/168635667", "pull_request_review_id": 97038714, "id": 168635667, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE2ODYzNTY2Nw==", "diff_hunk": "@@ -219,20 +254,31 @@ def _dist_broadcast_coalesced(self, tensors, buffer_size):\n     def _sync_params(self):\n         if len(self.device_ids) > 1:\n             # intra-node parameter sync\n-            params = [p.data for p in self.module.parameters()]\n-            result = broadcast_coalesced(params, self.device_ids, self.broadcast_bucket_size)\n-            for tensors, module in zip(result[1:], self._module_copies[1:]):\n-                for tensor, param in zip(tensors, module.parameters()):\n-                    param.data.set_(tensor)\n-\n+            for tp in self.param_type_buckets:\n+                params = [p.data for p in self.param_type_buckets[tp][0]]\n+                result = broadcast_coalesced(params,\n+                                             self.device_ids,\n+                                             self.broadcast_bucket_size)\n+                for idx, tensors in enumerate(result[1:]):\n+                    # Just to make it clear\n+                    dev_idx = idx + 1\n+                    for tensor, param in \\\n+                            zip(tensors,\n+                                self.param_type_buckets[tp][dev_idx]):\n+                        param.data.set_(tensor)", "path": "torch/nn/parallel/distributed.py", "position": null, "original_position": 132, "commit_id": "0a6d068ab9c8084ebc38a0f08e84929c68374cd5", "original_commit_id": "e83e35c2bf2acd0e35cb9e2a6b3a4b56152375bc", "user": {"login": "apaszke", "id": 4583066, "node_id": "MDQ6VXNlcjQ1ODMwNjY=", "avatar_url": "https://avatars3.githubusercontent.com/u/4583066?v=4", "gravatar_id": "", "url": "https://api.github.com/users/apaszke", "html_url": "https://github.com/apaszke", "followers_url": "https://api.github.com/users/apaszke/followers", "following_url": "https://api.github.com/users/apaszke/following{/other_user}", "gists_url": "https://api.github.com/users/apaszke/gists{/gist_id}", "starred_url": "https://api.github.com/users/apaszke/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/apaszke/subscriptions", "organizations_url": "https://api.github.com/users/apaszke/orgs", "repos_url": "https://api.github.com/users/apaszke/repos", "events_url": "https://api.github.com/users/apaszke/events{/privacy}", "received_events_url": "https://api.github.com/users/apaszke/received_events", "type": "User", "site_admin": false}, "body": "I don't think this change is necessary. `broadcast_coalesced` will handle tensors of different types correctly by itself (the code that we used previously is still ok)", "created_at": "2018-02-15T23:04:26Z", "updated_at": "2018-11-23T15:39:40Z", "html_url": "https://github.com/pytorch/pytorch/pull/4891#discussion_r168635667", "pull_request_url": "https://api.github.com/repos/pytorch/pytorch/pulls/4891", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/168635667"}, "html": {"href": "https://github.com/pytorch/pytorch/pull/4891#discussion_r168635667"}, "pull_request": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/4891"}}, "body_html": "<p>I don't think this change is necessary. <code>broadcast_coalesced</code> will handle tensors of different types correctly by itself (the code that we used previously is still ok)</p>", "body_text": "I don't think this change is necessary. broadcast_coalesced will handle tensors of different types correctly by itself (the code that we used previously is still ok)"}