{"url": "https://api.github.com/repos/pytorch/pytorch/issues/comments/422448845", "html_url": "https://github.com/pytorch/pytorch/issues/3625#issuecomment-422448845", "issue_url": "https://api.github.com/repos/pytorch/pytorch/issues/3625", "id": 422448845, "node_id": "MDEyOklzc3VlQ29tbWVudDQyMjQ0ODg0NQ==", "user": {"login": "gchanan", "id": 3768583, "node_id": "MDQ6VXNlcjM3Njg1ODM=", "avatar_url": "https://avatars2.githubusercontent.com/u/3768583?v=4", "gravatar_id": "", "url": "https://api.github.com/users/gchanan", "html_url": "https://github.com/gchanan", "followers_url": "https://api.github.com/users/gchanan/followers", "following_url": "https://api.github.com/users/gchanan/following{/other_user}", "gists_url": "https://api.github.com/users/gchanan/gists{/gist_id}", "starred_url": "https://api.github.com/users/gchanan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/gchanan/subscriptions", "organizations_url": "https://api.github.com/users/gchanan/orgs", "repos_url": "https://api.github.com/users/gchanan/repos", "events_url": "https://api.github.com/users/gchanan/events{/privacy}", "received_events_url": "https://api.github.com/users/gchanan/received_events", "type": "User", "site_admin": false}, "created_at": "2018-09-18T15:53:16Z", "updated_at": "2018-09-18T15:53:16Z", "author_association": "CONTRIBUTOR", "body_html": "<pre><code># --- example 1:\n# If `input.requires_grad = False`, `output.requires_grad_(True)` causes retaining `output.grad`. - Is this expected or not?\n# If `input.requires_grad = True`, `output.requires_grad_(True)` does NOT cause retaining `output.grad`. - Is this expected or not?\n# At least the two different effects of `output.requires_grad_(True)` based on `input.requires_grad` is confusing and misleading.\n</code></pre>\n<p>Yes, these are all expected.  The way to think about the current behavior is <code>requires_grad</code> controls whether a gradient is calculated and a grad is only \"retained\" if retain is set or the variable is a leaf (doesn't have a grad_fn).  The above examples follow from this.</p>", "body_text": "# --- example 1:\n# If `input.requires_grad = False`, `output.requires_grad_(True)` causes retaining `output.grad`. - Is this expected or not?\n# If `input.requires_grad = True`, `output.requires_grad_(True)` does NOT cause retaining `output.grad`. - Is this expected or not?\n# At least the two different effects of `output.requires_grad_(True)` based on `input.requires_grad` is confusing and misleading.\n\nYes, these are all expected.  The way to think about the current behavior is requires_grad controls whether a gradient is calculated and a grad is only \"retained\" if retain is set or the variable is a leaf (doesn't have a grad_fn).  The above examples follow from this.", "body": "```\r\n# --- example 1:\r\n# If `input.requires_grad = False`, `output.requires_grad_(True)` causes retaining `output.grad`. - Is this expected or not?\r\n# If `input.requires_grad = True`, `output.requires_grad_(True)` does NOT cause retaining `output.grad`. - Is this expected or not?\r\n# At least the two different effects of `output.requires_grad_(True)` based on `input.requires_grad` is confusing and misleading.\r\n```\r\n\r\nYes, these are all expected.  The way to think about the current behavior is `requires_grad` controls whether a gradient is calculated and a grad is only \"retained\" if retain is set or the variable is a leaf (doesn't have a grad_fn).  The above examples follow from this."}