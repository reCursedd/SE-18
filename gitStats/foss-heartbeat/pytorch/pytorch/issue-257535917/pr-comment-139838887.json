{"url": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/139838887", "pull_request_review_id": 63823663, "id": 139838887, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEzOTgzODg4Nw==", "diff_hunk": "@@ -0,0 +1,304 @@\n+#ifndef TH_GENERIC_FILE\n+#define TH_GENERIC_FILE \"generic/VolumetricAdaptiveAveragePooling.c\"\n+#else\n+\n+#define START_IND(a,b,c) (int)floor((float)(a * c) / b)\n+#define END_IND(a,b,c) (int)ceil((float)((a + 1) * c) / b)\n+// #define START_IND(a,b,c) a * c / b\n+// #define END_IND(a,b,c)  (a + 1) * c / b + ((a + 1) * c % b > 0)?1:0\n+\n+// 5d tensor B x D x T x H x W\n+\n+static void THNN_(VolumetricAdaptiveAveragePooling_updateOutput_frame)(\n+          real *input_p,\n+          real *output_p,\n+          int64_t sizeD,\n+          int64_t isizeT,\n+          int64_t isizeH,\n+          int64_t isizeW,\n+          int64_t osizeT,\n+          int64_t osizeH,\n+          int64_t osizeW,\n+          int64_t istrideD,\n+          int64_t istrideT,\n+          int64_t istrideH,\n+          int64_t istrideW)\n+{\n+  int64_t d;\n+#pragma omp parallel for private(d)\n+  for (d = 0; d < sizeD; d++)\n+  {\n+    /* loop over output */\n+    int64_t ot, oh, ow;\n+    for(ot = 0; ot < osizeT; ot++)\n+    {\n+      int64_t z_start = START_IND(ot, osizeT, isizeT);", "path": "torch/lib/THNN/generic/VolumetricAdaptiveAveragePooling.c", "position": null, "original_position": 35, "commit_id": "24d5909882d7e19e01a6e002cff2a43e92b53724", "original_commit_id": "7afb92ee496955077627ae3f62c36be9e9bfea1a", "user": {"login": "gchanan", "id": 3768583, "node_id": "MDQ6VXNlcjM3Njg1ODM=", "avatar_url": "https://avatars2.githubusercontent.com/u/3768583?v=4", "gravatar_id": "", "url": "https://api.github.com/users/gchanan", "html_url": "https://github.com/gchanan", "followers_url": "https://api.github.com/users/gchanan/followers", "following_url": "https://api.github.com/users/gchanan/following{/other_user}", "gists_url": "https://api.github.com/users/gchanan/gists{/gist_id}", "starred_url": "https://api.github.com/users/gchanan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/gchanan/subscriptions", "organizations_url": "https://api.github.com/users/gchanan/orgs", "repos_url": "https://api.github.com/users/gchanan/repos", "events_url": "https://api.github.com/users/gchanan/events{/privacy}", "received_events_url": "https://api.github.com/users/gchanan/received_events", "type": "User", "site_admin": false}, "body": "these are ints in the Spatial case, but int64_ts here, why", "created_at": "2017-09-19T22:56:17Z", "updated_at": "2018-11-23T15:34:39Z", "html_url": "https://github.com/pytorch/pytorch/pull/2728#discussion_r139838887", "pull_request_url": "https://api.github.com/repos/pytorch/pytorch/pulls/2728", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/139838887"}, "html": {"href": "https://github.com/pytorch/pytorch/pull/2728#discussion_r139838887"}, "pull_request": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/2728"}}, "body_html": "<p>these are ints in the Spatial case, but int64_ts here, why</p>", "body_text": "these are ints in the Spatial case, but int64_ts here, why"}