{"url": "https://api.github.com/repos/pytorch/pytorch/issues/comments/330121127", "html_url": "https://github.com/pytorch/pytorch/pull/2728#issuecomment-330121127", "issue_url": "https://api.github.com/repos/pytorch/pytorch/issues/2728", "id": 330121127, "node_id": "MDEyOklzc3VlQ29tbWVudDMzMDEyMTEyNw==", "user": {"login": "SsnL", "id": 5674597, "node_id": "MDQ6VXNlcjU2NzQ1OTc=", "avatar_url": "https://avatars2.githubusercontent.com/u/5674597?v=4", "gravatar_id": "", "url": "https://api.github.com/users/SsnL", "html_url": "https://github.com/SsnL", "followers_url": "https://api.github.com/users/SsnL/followers", "following_url": "https://api.github.com/users/SsnL/following{/other_user}", "gists_url": "https://api.github.com/users/SsnL/gists{/gist_id}", "starred_url": "https://api.github.com/users/SsnL/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/SsnL/subscriptions", "organizations_url": "https://api.github.com/users/SsnL/orgs", "repos_url": "https://api.github.com/users/SsnL/repos", "events_url": "https://api.github.com/users/SsnL/events{/privacy}", "received_events_url": "https://api.github.com/users/SsnL/received_events", "type": "User", "site_admin": false}, "created_at": "2017-09-18T03:15:59Z", "updated_at": "2017-09-18T03:15:59Z", "author_association": "CONTRIBUTOR", "body_html": "<p>Thanks for your input <a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=3768583\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/gchanan\">@gchanan</a> .</p>\n<p>1 &amp; 2. I preferred int because (a) in CUDA version, the kernel using them has int input parameters and (b) in CPU &amp; CUDA version, the input indices computed from START_IND and END_IND are set to type int. So using long didn't seem necessary to me. Should I stick to using long (now int64_t in the master)?<br>\nThe int64_t's are causing conflicts.  I will rebase &amp; merge once this is settled.<br>\n3. Thanks for the tip! I will keep this in mind.</p>", "body_text": "Thanks for your input @gchanan .\n1 & 2. I preferred int because (a) in CUDA version, the kernel using them has int input parameters and (b) in CPU & CUDA version, the input indices computed from START_IND and END_IND are set to type int. So using long didn't seem necessary to me. Should I stick to using long (now int64_t in the master)?\nThe int64_t's are causing conflicts.  I will rebase & merge once this is settled.\n3. Thanks for the tip! I will keep this in mind.", "body": "Thanks for your input @gchanan .\r\n\r\n1 & 2. I preferred int because (a) in CUDA version, the kernel using them has int input parameters and (b) in CPU & CUDA version, the input indices computed from START_IND and END_IND are set to type int. So using long didn't seem necessary to me. Should I stick to using long (now int64_t in the master)?\r\nThe int64_t's are causing conflicts.  I will rebase & merge once this is settled.\r\n3. Thanks for the tip! I will keep this in mind."}