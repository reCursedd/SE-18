{"url": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/138765352", "pull_request_review_id": 62605650, "id": 138765352, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEzODc2NTM1Mg==", "diff_hunk": "@@ -0,0 +1,302 @@\n+#ifndef TH_GENERIC_FILE\n+#define TH_GENERIC_FILE \"generic/VolumetricAdaptiveAveragePooling.c\"\n+#else\n+\n+#define START_IND(a,b,c) (int)floor((float)(a * c) / b)\n+#define END_IND(a,b,c) (int)ceil((float)((a + 1) * c) / b)\n+// #define START_IND(a,b,c) a * c / b\n+// #define END_IND(a,b,c)  (a + 1) * c / b + ((a + 1) * c % b > 0)?1:0\n+\n+static void THNN_(VolumetricAdaptiveAveragePooling_updateOutput_frame)(\n+          real *input_p,\n+          real *output_p,\n+          long nslices,\n+          long isizeT,", "path": "torch/lib/THNN/generic/VolumetricAdaptiveAveragePooling.c", "position": null, "original_position": 14, "commit_id": "24d5909882d7e19e01a6e002cff2a43e92b53724", "original_commit_id": "c032bd0e6c6a1ac592cd6039452f25ad1bd88724", "user": {"login": "SsnL", "id": 5674597, "node_id": "MDQ6VXNlcjU2NzQ1OTc=", "avatar_url": "https://avatars2.githubusercontent.com/u/5674597?v=4", "gravatar_id": "", "url": "https://api.github.com/users/SsnL", "html_url": "https://github.com/SsnL", "followers_url": "https://api.github.com/users/SsnL/followers", "following_url": "https://api.github.com/users/SsnL/following{/other_user}", "gists_url": "https://api.github.com/users/SsnL/gists{/gist_id}", "starred_url": "https://api.github.com/users/SsnL/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/SsnL/subscriptions", "organizations_url": "https://api.github.com/users/SsnL/orgs", "repos_url": "https://api.github.com/users/SsnL/repos", "events_url": "https://api.github.com/users/SsnL/events{/privacy}", "received_events_url": "https://api.github.com/users/SsnL/received_events", "type": "User", "site_admin": false}, "body": "I debated against myself on that for some time too. But I wanted to be consistent between the cpu and the cuda var names. I really didn't want to follow the spatial [cuda var names](https://github.com/pytorch/pytorch/blob/master/torch/lib/THCUNN/SpatialAdaptiveAveragePooling.cu#L21) which leads to `input_t` being a var rather than a type. What's your thought on this?", "created_at": "2017-09-13T23:29:08Z", "updated_at": "2018-11-23T15:34:36Z", "html_url": "https://github.com/pytorch/pytorch/pull/2728#discussion_r138765352", "pull_request_url": "https://api.github.com/repos/pytorch/pytorch/pulls/2728", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/138765352"}, "html": {"href": "https://github.com/pytorch/pytorch/pull/2728#discussion_r138765352"}, "pull_request": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/2728"}}, "body_html": "<p>I debated against myself on that for some time too. But I wanted to be consistent between the cpu and the cuda var names. I really didn't want to follow the spatial <a href=\"https://github.com/pytorch/pytorch/blob/master/torch/lib/THCUNN/SpatialAdaptiveAveragePooling.cu#L21\">cuda var names</a> which leads to <code>input_t</code> being a var rather than a type. What's your thought on this?</p>", "body_text": "I debated against myself on that for some time too. But I wanted to be consistent between the cpu and the cuda var names. I really didn't want to follow the spatial cuda var names which leads to input_t being a var rather than a type. What's your thought on this?", "in_reply_to_id": 138760110}