{"url": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/139839258", "pull_request_review_id": 63823663, "id": 139839258, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEzOTgzOTI1OA==", "diff_hunk": "@@ -89,96 +92,99 @@ void THNN_(SpatialAdaptiveAveragePooling_updateOutput)(\n \n   if (input->nDimension == 4)\n   {\n-    istride_b = input->stride[0];\n-    nbatch = input->size[0];\n-    dimw++;\n-    dimh++;\n+    istrideB = input->stride[0];\n+    sizeB = input->size[0];\n+    dimD++;\n+    dimH++;\n+    dimW++;\n   }\n \n   /* sizes */\n-  nslices = input->size[dimh-1];\n-  iheight = input->size[dimh];\n-  iwidth = input->size[dimw];\n+  sizeD  = input->size[dimD];\n+  isizeH = input->size[dimH];\n+  isizeW = input->size[dimW];\n   /* strides */\n-  istride_d = input->stride[dimh-1];\n-  istride_h = input->stride[dimh];\n-  istride_w = input->stride[dimw];\n+  istrideD = input->stride[dimD];\n+  istrideH = input->stride[dimH];\n+  istrideW = input->stride[dimW];\n \n   /* resize output */\n   if (input->nDimension == 3)\n   {\n-    THTensor_(resize3d)(output, nslices, oheight, owidth);\n+    THTensor_(resize3d)(output, sizeD, osizeH, osizeW);\n \n     input_data = THTensor_(data)(input);\n     output_data = THTensor_(data)(output);\n \n     THNN_(SpatialAdaptiveAveragePooling_updateOutput_frame)(input_data, output_data,\n-                                                      nslices,\n-                                                      iwidth, iheight,\n-                                                      owidth, oheight,\n-                                                      istride_w,istride_h,\n-                                                      istride_d);\n+                                                      sizeD,\n+                                                      isizeW, isizeH,\n+                                                      osizeW, osizeH,\n+                                                      istrideW,istrideH,\n+                                                      istrideD);\n   }\n   else\n   {\n-    int64_t p;\n+    int64_t b;\n \n-    THTensor_(resize4d)(output, nbatch, nslices, oheight, owidth);\n+    THTensor_(resize4d)(output, sizeB, sizeD, osizeH, osizeW);\n \n     input_data = THTensor_(data)(input);\n     output_data = THTensor_(data)(output);\n \n-#pragma omp parallel for private(p)\n-    for (p = 0; p < nbatch; p++)\n+#pragma omp parallel for private(b)\n+    for (b = 0; b < sizeB; b++)\n     {\n-      THNN_(SpatialAdaptiveAveragePooling_updateOutput_frame)(input_data+p*istride_b, output_data+p*nslices*owidth*oheight,\n-                                                        nslices,\n-                                                        iwidth, iheight,\n-                                                        owidth, oheight,\n-                                                        istride_w,istride_h,\n-                                                        istride_d);\n+      THNN_(SpatialAdaptiveAveragePooling_updateOutput_frame)(input_data+b*istrideB, output_data+b*sizeD*osizeH*osizeW,\n+                                                        sizeD,\n+                                                        isizeH, isizeW,", "path": "torch/lib/THNN/generic/SpatialAdaptiveAveragePooling.c", "position": null, "original_position": 188, "commit_id": "24d5909882d7e19e01a6e002cff2a43e92b53724", "original_commit_id": "7afb92ee496955077627ae3f62c36be9e9bfea1a", "user": {"login": "gchanan", "id": 3768583, "node_id": "MDQ6VXNlcjM3Njg1ODM=", "avatar_url": "https://avatars2.githubusercontent.com/u/3768583?v=4", "gravatar_id": "", "url": "https://api.github.com/users/gchanan", "html_url": "https://github.com/gchanan", "followers_url": "https://api.github.com/users/gchanan/followers", "following_url": "https://api.github.com/users/gchanan/following{/other_user}", "gists_url": "https://api.github.com/users/gchanan/gists{/gist_id}", "starred_url": "https://api.github.com/users/gchanan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/gchanan/subscriptions", "organizations_url": "https://api.github.com/users/gchanan/orgs", "repos_url": "https://api.github.com/users/gchanan/repos", "events_url": "https://api.github.com/users/gchanan/events{/privacy}", "received_events_url": "https://api.github.com/users/gchanan/received_events", "type": "User", "site_admin": false}, "body": "is this right? it doesn't match the order of the same call above?", "created_at": "2017-09-19T22:58:39Z", "updated_at": "2018-11-23T15:34:39Z", "html_url": "https://github.com/pytorch/pytorch/pull/2728#discussion_r139839258", "pull_request_url": "https://api.github.com/repos/pytorch/pytorch/pulls/2728", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/139839258"}, "html": {"href": "https://github.com/pytorch/pytorch/pull/2728#discussion_r139839258"}, "pull_request": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/2728"}}, "body_html": "<p>is this right? it doesn't match the order of the same call above?</p>", "body_text": "is this right? it doesn't match the order of the same call above?"}