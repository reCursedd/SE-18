{"url": "https://api.github.com/repos/pytorch/pytorch/pulls/4427", "id": 160648253, "node_id": "MDExOlB1bGxSZXF1ZXN0MTYwNjQ4MjUz", "html_url": "https://github.com/pytorch/pytorch/pull/4427", "diff_url": "https://github.com/pytorch/pytorch/pull/4427.diff", "patch_url": "https://github.com/pytorch/pytorch/pull/4427.patch", "issue_url": "https://api.github.com/repos/pytorch/pytorch/issues/4427", "number": 4427, "state": "closed", "locked": false, "title": "Add a lookup method with auto padding for nn.Embedding", "user": {"login": "Gosicfly", "id": 11231087, "node_id": "MDQ6VXNlcjExMjMxMDg3", "avatar_url": "https://avatars0.githubusercontent.com/u/11231087?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Gosicfly", "html_url": "https://github.com/Gosicfly", "followers_url": "https://api.github.com/users/Gosicfly/followers", "following_url": "https://api.github.com/users/Gosicfly/following{/other_user}", "gists_url": "https://api.github.com/users/Gosicfly/gists{/gist_id}", "starred_url": "https://api.github.com/users/Gosicfly/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Gosicfly/subscriptions", "organizations_url": "https://api.github.com/users/Gosicfly/orgs", "repos_url": "https://api.github.com/users/Gosicfly/repos", "events_url": "https://api.github.com/users/Gosicfly/events{/privacy}", "received_events_url": "https://api.github.com/users/Gosicfly/received_events", "type": "User", "site_admin": false}, "body": "When we use RNN for sequence models, we usually need to pad the item in the batch to a same length. In this PR, I add a method for nn.Embedding, which can make a lookup operation with auto padding. It looks like this:\r\n\r\n```\r\nembed = nn.Embedding(11, 4, padding_idx=10)\r\nids = [[2, 3, 4], [2, 3]]\r\nembeddings, sorted_embeddings, sorted_len = embed.lookup_with_autopadding(ids)\r\n\r\nprint(embeddings)\r\n# Variable containing:\r\n# (0 ,.,.) = \r\n#  -1.0276 -0.5631 -0.8923 -0.0583\r\n#  -0.1955 -0.9656  0.4224  0.2673\r\n#  -0.4212 -0.5107 -1.5727 -0.1232\r\n# \r\n# (1 ,.,.) = \r\n#  -1.0276 -0.5631 -0.8923 -0.0583\r\n#  -0.1955 -0.9656  0.4224  0.2673\r\n#   0.0000  0.0000  0.0000  0.0000\r\n# [torch.FloatTensor of size 2x3x4]\r\n\r\nprint(sorted_embeddings)\r\n# Variable containing:\r\n# (0 ,.,.) = \r\n#  -1.0276 -0.5631 -0.8923 -0.0583\r\n#  -0.1955 -0.9656  0.4224  0.2673\r\n#  -0.4212 -0.5107 -1.5727 -0.1232\r\n# \r\n# (1 ,.,.) = \r\n#  -1.0276 -0.5631 -0.8923 -0.0583\r\n#  -0.1955 -0.9656  0.4224  0.2673\r\n#   0.0000  0.0000  0.0000  0.0000\r\n# [torch.FloatTensor of size 2x3x4]\r\n\r\nprint(sorted_len)\r\n# Variable containing:\r\n#  3\r\n#  2\r\n# [torch.LongTensor of size 2]\r\n```", "created_at": "2018-01-01T13:27:48Z", "updated_at": "2018-01-02T13:43:05Z", "closed_at": "2018-01-02T12:51:34Z", "merged_at": null, "merge_commit_sha": "bfcb1d9330e77b6d631e74ec85814c47ae328f3c", "assignee": null, "assignees": [], "requested_reviewers": [], "requested_teams": [], "labels": [], "milestone": null, "commits_url": "https://api.github.com/repos/pytorch/pytorch/pulls/4427/commits", "review_comments_url": "https://api.github.com/repos/pytorch/pytorch/pulls/4427/comments", "review_comment_url": "https://api.github.com/repos/pytorch/pytorch/pulls/comments{/number}", "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/4427/comments", "statuses_url": "https://api.github.com/repos/pytorch/pytorch/statuses/e33c2bc055570cb3d847fdb88d84069a55c8d5d6", "head": {"label": "Gosicfly:master", "ref": "master", "sha": "e33c2bc055570cb3d847fdb88d84069a55c8d5d6", "user": {"login": "Gosicfly", "id": 11231087, "node_id": "MDQ6VXNlcjExMjMxMDg3", "avatar_url": "https://avatars0.githubusercontent.com/u/11231087?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Gosicfly", "html_url": "https://github.com/Gosicfly", "followers_url": "https://api.github.com/users/Gosicfly/followers", "following_url": "https://api.github.com/users/Gosicfly/following{/other_user}", "gists_url": "https://api.github.com/users/Gosicfly/gists{/gist_id}", "starred_url": "https://api.github.com/users/Gosicfly/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Gosicfly/subscriptions", "organizations_url": "https://api.github.com/users/Gosicfly/orgs", "repos_url": "https://api.github.com/users/Gosicfly/repos", "events_url": "https://api.github.com/users/Gosicfly/events{/privacy}", "received_events_url": "https://api.github.com/users/Gosicfly/received_events", "type": "User", "site_admin": false}, "repo": null}, "base": {"label": "pytorch:master", "ref": "master", "sha": "0b328874c62fe38ffd1b8bc0b333e5d2f6d4d2c1", "user": {"login": "pytorch", "id": 21003710, "node_id": "MDEyOk9yZ2FuaXphdGlvbjIxMDAzNzEw", "avatar_url": "https://avatars3.githubusercontent.com/u/21003710?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pytorch", "html_url": "https://github.com/pytorch", "followers_url": "https://api.github.com/users/pytorch/followers", "following_url": "https://api.github.com/users/pytorch/following{/other_user}", "gists_url": "https://api.github.com/users/pytorch/gists{/gist_id}", "starred_url": "https://api.github.com/users/pytorch/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pytorch/subscriptions", "organizations_url": "https://api.github.com/users/pytorch/orgs", "repos_url": "https://api.github.com/users/pytorch/repos", "events_url": "https://api.github.com/users/pytorch/events{/privacy}", "received_events_url": "https://api.github.com/users/pytorch/received_events", "type": "Organization", "site_admin": false}, "repo": {"id": 65600975, "node_id": "MDEwOlJlcG9zaXRvcnk2NTYwMDk3NQ==", "name": "pytorch", "full_name": "pytorch/pytorch", "private": false, "owner": {"login": "pytorch", "id": 21003710, "node_id": "MDEyOk9yZ2FuaXphdGlvbjIxMDAzNzEw", "avatar_url": "https://avatars3.githubusercontent.com/u/21003710?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pytorch", "html_url": "https://github.com/pytorch", "followers_url": "https://api.github.com/users/pytorch/followers", "following_url": "https://api.github.com/users/pytorch/following{/other_user}", "gists_url": "https://api.github.com/users/pytorch/gists{/gist_id}", "starred_url": "https://api.github.com/users/pytorch/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pytorch/subscriptions", "organizations_url": "https://api.github.com/users/pytorch/orgs", "repos_url": "https://api.github.com/users/pytorch/repos", "events_url": "https://api.github.com/users/pytorch/events{/privacy}", "received_events_url": "https://api.github.com/users/pytorch/received_events", "type": "Organization", "site_admin": false}, "html_url": "https://github.com/pytorch/pytorch", "description": "Tensors and Dynamic neural networks in Python  with strong GPU acceleration", "fork": false, "url": "https://api.github.com/repos/pytorch/pytorch", "forks_url": "https://api.github.com/repos/pytorch/pytorch/forks", "keys_url": "https://api.github.com/repos/pytorch/pytorch/keys{/key_id}", "collaborators_url": "https://api.github.com/repos/pytorch/pytorch/collaborators{/collaborator}", "teams_url": "https://api.github.com/repos/pytorch/pytorch/teams", "hooks_url": "https://api.github.com/repos/pytorch/pytorch/hooks", "issue_events_url": "https://api.github.com/repos/pytorch/pytorch/issues/events{/number}", "events_url": "https://api.github.com/repos/pytorch/pytorch/events", "assignees_url": "https://api.github.com/repos/pytorch/pytorch/assignees{/user}", "branches_url": "https://api.github.com/repos/pytorch/pytorch/branches{/branch}", "tags_url": "https://api.github.com/repos/pytorch/pytorch/tags", "blobs_url": "https://api.github.com/repos/pytorch/pytorch/git/blobs{/sha}", "git_tags_url": "https://api.github.com/repos/pytorch/pytorch/git/tags{/sha}", "git_refs_url": "https://api.github.com/repos/pytorch/pytorch/git/refs{/sha}", "trees_url": "https://api.github.com/repos/pytorch/pytorch/git/trees{/sha}", "statuses_url": "https://api.github.com/repos/pytorch/pytorch/statuses/{sha}", "languages_url": "https://api.github.com/repos/pytorch/pytorch/languages", "stargazers_url": "https://api.github.com/repos/pytorch/pytorch/stargazers", "contributors_url": "https://api.github.com/repos/pytorch/pytorch/contributors", "subscribers_url": "https://api.github.com/repos/pytorch/pytorch/subscribers", "subscription_url": "https://api.github.com/repos/pytorch/pytorch/subscription", "commits_url": "https://api.github.com/repos/pytorch/pytorch/commits{/sha}", "git_commits_url": "https://api.github.com/repos/pytorch/pytorch/git/commits{/sha}", "comments_url": "https://api.github.com/repos/pytorch/pytorch/comments{/number}", "issue_comment_url": "https://api.github.com/repos/pytorch/pytorch/issues/comments{/number}", "contents_url": "https://api.github.com/repos/pytorch/pytorch/contents/{+path}", "compare_url": "https://api.github.com/repos/pytorch/pytorch/compare/{base}...{head}", "merges_url": "https://api.github.com/repos/pytorch/pytorch/merges", "archive_url": "https://api.github.com/repos/pytorch/pytorch/{archive_format}{/ref}", "downloads_url": "https://api.github.com/repos/pytorch/pytorch/downloads", "issues_url": "https://api.github.com/repos/pytorch/pytorch/issues{/number}", "pulls_url": "https://api.github.com/repos/pytorch/pytorch/pulls{/number}", "milestones_url": "https://api.github.com/repos/pytorch/pytorch/milestones{/number}", "notifications_url": "https://api.github.com/repos/pytorch/pytorch/notifications{?since,all,participating}", "labels_url": "https://api.github.com/repos/pytorch/pytorch/labels{/name}", "releases_url": "https://api.github.com/repos/pytorch/pytorch/releases{/id}", "deployments_url": "https://api.github.com/repos/pytorch/pytorch/deployments", "created_at": "2016-08-13T05:26:41Z", "updated_at": "2018-11-24T05:35:41Z", "pushed_at": "2018-11-24T05:34:07Z", "git_url": "git://github.com/pytorch/pytorch.git", "ssh_url": "git@github.com:pytorch/pytorch.git", "clone_url": "https://github.com/pytorch/pytorch.git", "svn_url": "https://github.com/pytorch/pytorch", "homepage": "http://pytorch.org", "size": 89651, "stargazers_count": 21577, "watchers_count": 21577, "language": "C++", "has_issues": true, "has_projects": true, "has_downloads": true, "has_wiki": true, "has_pages": false, "forks_count": 5149, "mirror_url": null, "archived": false, "open_issues_count": 2193, "license": {"key": "other", "name": "Other", "spdx_id": "NOASSERTION", "url": null, "node_id": "MDc6TGljZW5zZTA="}, "forks": 5149, "open_issues": 2193, "watchers": 21577, "default_branch": "master"}}, "_links": {"self": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/4427"}, "html": {"href": "https://github.com/pytorch/pytorch/pull/4427"}, "issue": {"href": "https://api.github.com/repos/pytorch/pytorch/issues/4427"}, "comments": {"href": "https://api.github.com/repos/pytorch/pytorch/issues/4427/comments"}, "review_comments": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/4427/comments"}, "review_comment": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/comments{/number}"}, "commits": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/4427/commits"}, "statuses": {"href": "https://api.github.com/repos/pytorch/pytorch/statuses/e33c2bc055570cb3d847fdb88d84069a55c8d5d6"}}, "author_association": "NONE", "body_html": "<p>When we use RNN for sequence models, we usually need to pad the item in the batch to a same length. In this PR, I add a method for nn.Embedding, which can make a lookup operation with auto padding. It looks like this:</p>\n<pre><code>embed = nn.Embedding(11, 4, padding_idx=10)\nids = [[2, 3, 4], [2, 3]]\nembeddings, sorted_embeddings, sorted_len = embed.lookup_with_autopadding(ids)\n\nprint(embeddings)\n# Variable containing:\n# (0 ,.,.) = \n#  -1.0276 -0.5631 -0.8923 -0.0583\n#  -0.1955 -0.9656  0.4224  0.2673\n#  -0.4212 -0.5107 -1.5727 -0.1232\n# \n# (1 ,.,.) = \n#  -1.0276 -0.5631 -0.8923 -0.0583\n#  -0.1955 -0.9656  0.4224  0.2673\n#   0.0000  0.0000  0.0000  0.0000\n# [torch.FloatTensor of size 2x3x4]\n\nprint(sorted_embeddings)\n# Variable containing:\n# (0 ,.,.) = \n#  -1.0276 -0.5631 -0.8923 -0.0583\n#  -0.1955 -0.9656  0.4224  0.2673\n#  -0.4212 -0.5107 -1.5727 -0.1232\n# \n# (1 ,.,.) = \n#  -1.0276 -0.5631 -0.8923 -0.0583\n#  -0.1955 -0.9656  0.4224  0.2673\n#   0.0000  0.0000  0.0000  0.0000\n# [torch.FloatTensor of size 2x3x4]\n\nprint(sorted_len)\n# Variable containing:\n#  3\n#  2\n# [torch.LongTensor of size 2]\n</code></pre>", "body_text": "When we use RNN for sequence models, we usually need to pad the item in the batch to a same length. In this PR, I add a method for nn.Embedding, which can make a lookup operation with auto padding. It looks like this:\nembed = nn.Embedding(11, 4, padding_idx=10)\nids = [[2, 3, 4], [2, 3]]\nembeddings, sorted_embeddings, sorted_len = embed.lookup_with_autopadding(ids)\n\nprint(embeddings)\n# Variable containing:\n# (0 ,.,.) = \n#  -1.0276 -0.5631 -0.8923 -0.0583\n#  -0.1955 -0.9656  0.4224  0.2673\n#  -0.4212 -0.5107 -1.5727 -0.1232\n# \n# (1 ,.,.) = \n#  -1.0276 -0.5631 -0.8923 -0.0583\n#  -0.1955 -0.9656  0.4224  0.2673\n#   0.0000  0.0000  0.0000  0.0000\n# [torch.FloatTensor of size 2x3x4]\n\nprint(sorted_embeddings)\n# Variable containing:\n# (0 ,.,.) = \n#  -1.0276 -0.5631 -0.8923 -0.0583\n#  -0.1955 -0.9656  0.4224  0.2673\n#  -0.4212 -0.5107 -1.5727 -0.1232\n# \n# (1 ,.,.) = \n#  -1.0276 -0.5631 -0.8923 -0.0583\n#  -0.1955 -0.9656  0.4224  0.2673\n#   0.0000  0.0000  0.0000  0.0000\n# [torch.FloatTensor of size 2x3x4]\n\nprint(sorted_len)\n# Variable containing:\n#  3\n#  2\n# [torch.LongTensor of size 2]", "merged": false, "mergeable": null, "rebaseable": null, "mergeable_state": "unknown", "merged_by": null, "comments": 5, "review_comments": 0, "maintainer_can_modify": false, "commits": 0, "additions": 0, "deletions": 0, "changed_files": 0}