{"url": "https://api.github.com/repos/pytorch/pytorch/issues/comments/379577120", "html_url": "https://github.com/pytorch/pytorch/issues/6351#issuecomment-379577120", "issue_url": "https://api.github.com/repos/pytorch/pytorch/issues/6351", "id": 379577120, "node_id": "MDEyOklzc3VlQ29tbWVudDM3OTU3NzEyMA==", "user": {"login": "ngimel", "id": 15841449, "node_id": "MDQ6VXNlcjE1ODQxNDQ5", "avatar_url": "https://avatars3.githubusercontent.com/u/15841449?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ngimel", "html_url": "https://github.com/ngimel", "followers_url": "https://api.github.com/users/ngimel/followers", "following_url": "https://api.github.com/users/ngimel/following{/other_user}", "gists_url": "https://api.github.com/users/ngimel/gists{/gist_id}", "starred_url": "https://api.github.com/users/ngimel/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ngimel/subscriptions", "organizations_url": "https://api.github.com/users/ngimel/orgs", "repos_url": "https://api.github.com/users/ngimel/repos", "events_url": "https://api.github.com/users/ngimel/events{/privacy}", "received_events_url": "https://api.github.com/users/ngimel/received_events", "type": "User", "site_admin": false}, "created_at": "2018-04-08T19:47:41Z", "updated_at": "2018-04-08T19:47:41Z", "author_association": "CONTRIBUTOR", "body_html": "<p>There is logic to filter deterministic algorithms from cudnnFind return results <a href=\"https://github.com/pytorch/pytorch/blob/master/aten/src/ATen/native/cudnn/Conv.cpp#L460-L475\">https://github.com/pytorch/pytorch/blob/master/aten/src/ATen/native/cudnn/Conv.cpp#L460-L475</a> (if benchmark is true). If this is not working, probably cudnn is not returning determinism flag correctly. <a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=1168046\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/lvdmaaten\">@lvdmaaten</a>, a small repro would help to isolate if it is cudnn bug or if something is not working correctly in the pytorch bindings.<br>\nWhen benchmark is false, algos are explicitly set to something known to be deterministic (DEFAULT_ALGO), so without benchmark determinism is working.</p>", "body_text": "There is logic to filter deterministic algorithms from cudnnFind return results https://github.com/pytorch/pytorch/blob/master/aten/src/ATen/native/cudnn/Conv.cpp#L460-L475 (if benchmark is true). If this is not working, probably cudnn is not returning determinism flag correctly. @lvdmaaten, a small repro would help to isolate if it is cudnn bug or if something is not working correctly in the pytorch bindings.\nWhen benchmark is false, algos are explicitly set to something known to be deterministic (DEFAULT_ALGO), so without benchmark determinism is working.", "body": "There is logic to filter deterministic algorithms from cudnnFind return results https://github.com/pytorch/pytorch/blob/master/aten/src/ATen/native/cudnn/Conv.cpp#L460-L475 (if benchmark is true). If this is not working, probably cudnn is not returning determinism flag correctly. @lvdmaaten, a small repro would help to isolate if it is cudnn bug or if something is not working correctly in the pytorch bindings.\r\nWhen benchmark is false, algos are explicitly set to something known to be deterministic (DEFAULT_ALGO), so without benchmark determinism is working. "}