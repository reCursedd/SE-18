{"url": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/163633992", "pull_request_review_id": 91278850, "id": 163633992, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE2MzYzMzk5Mg==", "diff_hunk": "@@ -130,10 +150,12 @@ def pad_packed_sequence(sequence, batch_first=False, padding_value=0):\n         padding_value (float, optional): values for padded elements.\n \n     Returns:\n-        Tuple of Variable containing the padded sequence, and a list of lengths\n-        of each sequence in the batch.\n+        Tuple of Variable containing the padded sequence, and Variable\n+        containing the list of lengths of each sequence in the batch.", "path": "torch/nn/utils/rnn.py", "position": null, "original_position": 134, "commit_id": "c9c0a5924fdbb682f43d1e499db132b5babdba72", "original_commit_id": "fd3989d312a9e74288c167f3d49cde780bb0aebd", "user": {"login": "anderspapitto", "id": 1388690, "node_id": "MDQ6VXNlcjEzODg2OTA=", "avatar_url": "https://avatars3.githubusercontent.com/u/1388690?v=4", "gravatar_id": "", "url": "https://api.github.com/users/anderspapitto", "html_url": "https://github.com/anderspapitto", "followers_url": "https://api.github.com/users/anderspapitto/followers", "following_url": "https://api.github.com/users/anderspapitto/following{/other_user}", "gists_url": "https://api.github.com/users/anderspapitto/gists{/gist_id}", "starred_url": "https://api.github.com/users/anderspapitto/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/anderspapitto/subscriptions", "organizations_url": "https://api.github.com/users/anderspapitto/orgs", "repos_url": "https://api.github.com/users/anderspapitto/repos", "events_url": "https://api.github.com/users/anderspapitto/events{/privacy}", "received_events_url": "https://api.github.com/users/anderspapitto/received_events", "type": "User", "site_admin": false}, "body": "ONNX does support variable length sequences (though it's done differently, with a separate, optional `sequence_lens` input).\r\n\r\nI believe it is 100% necessary if we want to support variable-length sequences. pytorch itself has some invariants that model inputs/outputs must be (lists of, tuples of) Variables, and PackedSequence violates that. None of the jit/tracing/symbolic machinery works with the current representation.\r\n\r\nI am open to investigating alternatives, if anyone has suggestions/ideas of how else this could be made to work.", "created_at": "2018-01-24T18:22:37Z", "updated_at": "2018-11-23T15:38:32Z", "html_url": "https://github.com/pytorch/pytorch/pull/4695#discussion_r163633992", "pull_request_url": "https://api.github.com/repos/pytorch/pytorch/pulls/4695", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/163633992"}, "html": {"href": "https://github.com/pytorch/pytorch/pull/4695#discussion_r163633992"}, "pull_request": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/4695"}}, "body_html": "<p>ONNX does support variable length sequences (though it's done differently, with a separate, optional <code>sequence_lens</code> input).</p>\n<p>I believe it is 100% necessary if we want to support variable-length sequences. pytorch itself has some invariants that model inputs/outputs must be (lists of, tuples of) Variables, and PackedSequence violates that. None of the jit/tracing/symbolic machinery works with the current representation.</p>\n<p>I am open to investigating alternatives, if anyone has suggestions/ideas of how else this could be made to work.</p>", "body_text": "ONNX does support variable length sequences (though it's done differently, with a separate, optional sequence_lens input).\nI believe it is 100% necessary if we want to support variable-length sequences. pytorch itself has some invariants that model inputs/outputs must be (lists of, tuples of) Variables, and PackedSequence violates that. None of the jit/tracing/symbolic machinery works with the current representation.\nI am open to investigating alternatives, if anyone has suggestions/ideas of how else this could be made to work.", "in_reply_to_id": 163435561}