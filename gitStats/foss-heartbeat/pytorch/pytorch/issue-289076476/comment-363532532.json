{"url": "https://api.github.com/repos/pytorch/pytorch/issues/comments/363532532", "html_url": "https://github.com/pytorch/pytorch/pull/4695#issuecomment-363532532", "issue_url": "https://api.github.com/repos/pytorch/pytorch/issues/4695", "id": 363532532, "node_id": "MDEyOklzc3VlQ29tbWVudDM2MzUzMjUzMg==", "user": {"login": "anderspapitto", "id": 1388690, "node_id": "MDQ6VXNlcjEzODg2OTA=", "avatar_url": "https://avatars3.githubusercontent.com/u/1388690?v=4", "gravatar_id": "", "url": "https://api.github.com/users/anderspapitto", "html_url": "https://github.com/anderspapitto", "followers_url": "https://api.github.com/users/anderspapitto/followers", "following_url": "https://api.github.com/users/anderspapitto/following{/other_user}", "gists_url": "https://api.github.com/users/anderspapitto/gists{/gist_id}", "starred_url": "https://api.github.com/users/anderspapitto/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/anderspapitto/subscriptions", "organizations_url": "https://api.github.com/users/anderspapitto/orgs", "repos_url": "https://api.github.com/users/anderspapitto/repos", "events_url": "https://api.github.com/users/anderspapitto/events{/privacy}", "received_events_url": "https://api.github.com/users/anderspapitto/received_events", "type": "User", "site_admin": false}, "created_at": "2018-02-06T19:13:43Z", "updated_at": "2018-02-06T19:13:43Z", "author_association": "MEMBER", "body_html": "<p><a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=4583066\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/apaszke\">@apaszke</a> I actually don't have many examples, but it is true in the one (unfortunately internal, so I can't link it) case that I have looked at.</p>\n<p>Anyway I think I didn't say that in the clearest way, so let me give it another go:</p>\n<p>Whenever a user calls <code>PackPadded(input, lengths)</code>, I would assume that <code>input</code> and <code>lengths</code> almost always came from the same source. Therefore it should probably be very natural to turn <code>lengths</code> into a Variable at the same time that <code>input</code> is turned into a Variable (which already happens).</p>", "body_text": "@apaszke I actually don't have many examples, but it is true in the one (unfortunately internal, so I can't link it) case that I have looked at.\nAnyway I think I didn't say that in the clearest way, so let me give it another go:\nWhenever a user calls PackPadded(input, lengths), I would assume that input and lengths almost always came from the same source. Therefore it should probably be very natural to turn lengths into a Variable at the same time that input is turned into a Variable (which already happens).", "body": "@apaszke I actually don't have many examples, but it is true in the one (unfortunately internal, so I can't link it) case that I have looked at.\r\n\r\nAnyway I think I didn't say that in the clearest way, so let me give it another go:\r\n\r\nWhenever a user calls `PackPadded(input, lengths)`, I would assume that `input` and `lengths` almost always came from the same source. Therefore it should probably be very natural to turn `lengths` into a Variable at the same time that `input` is turned into a Variable (which already happens)."}