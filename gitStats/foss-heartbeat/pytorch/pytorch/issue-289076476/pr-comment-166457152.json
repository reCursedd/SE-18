{"url": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/166457152", "pull_request_review_id": 94521972, "id": 166457152, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE2NjQ1NzE1Mg==", "diff_hunk": "@@ -109,10 +110,26 @@ def pack_padded_sequence(input, lengths, batch_first=False):\n     \"\"\"\n     data, batch_sizes = PackPadded.apply(input, lengths, batch_first)\n \n-    return PackedSequence(data, list(batch_sizes.data))\n+    return PackedSequence(data, batch_sizes)\n+\n+\n+def _symbolic_pack_padded_sequence(g, input, lengths, batch_first=False):\n+    # There currently is no PackPadded operator in ONNX. We rely on an\n+    # optimization pass to remove this later. It is an error if all\n+    # PackPadded operators cannot be optimized out.\n+    return g.op(\"PackPadded\", input, lengths, outputs=2)\n+\n+\n+def pack_padded_sequence(input, *args, **kwargs):", "path": "torch/nn/utils/rnn.py", "position": 40, "original_position": 45, "commit_id": "c9c0a5924fdbb682f43d1e499db132b5babdba72", "original_commit_id": "13a2906bf6ad6779c7320baa62380d1c57d9ff8c", "user": {"login": "dzhulgakov", "id": 17890620, "node_id": "MDQ6VXNlcjE3ODkwNjIw", "avatar_url": "https://avatars2.githubusercontent.com/u/17890620?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dzhulgakov", "html_url": "https://github.com/dzhulgakov", "followers_url": "https://api.github.com/users/dzhulgakov/followers", "following_url": "https://api.github.com/users/dzhulgakov/following{/other_user}", "gists_url": "https://api.github.com/users/dzhulgakov/gists{/gist_id}", "starred_url": "https://api.github.com/users/dzhulgakov/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dzhulgakov/subscriptions", "organizations_url": "https://api.github.com/users/dzhulgakov/orgs", "repos_url": "https://api.github.com/users/dzhulgakov/repos", "events_url": "https://api.github.com/users/dzhulgakov/events{/privacy}", "received_events_url": "https://api.github.com/users/dzhulgakov/received_events", "type": "User", "site_admin": false}, "body": "argh, circular dependency is BS. We can extract those decorators from the onnx submodule and put them somewhere else. It's really ugly to proliferate these kind of hacks around. @ezyang - what's the regular practice for circular deps in pytorch? Was there some design of which submodules can depend on others?", "created_at": "2018-02-06T22:03:32Z", "updated_at": "2018-11-23T15:39:15Z", "html_url": "https://github.com/pytorch/pytorch/pull/4695#discussion_r166457152", "pull_request_url": "https://api.github.com/repos/pytorch/pytorch/pulls/4695", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/166457152"}, "html": {"href": "https://github.com/pytorch/pytorch/pull/4695#discussion_r166457152"}, "pull_request": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/4695"}}, "body_html": "<p>argh, circular dependency is BS. We can extract those decorators from the onnx submodule and put them somewhere else. It's really ugly to proliferate these kind of hacks around. <a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=13564\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/ezyang\">@ezyang</a> - what's the regular practice for circular deps in pytorch? Was there some design of which submodules can depend on others?</p>", "body_text": "argh, circular dependency is BS. We can extract those decorators from the onnx submodule and put them somewhere else. It's really ugly to proliferate these kind of hacks around. @ezyang - what's the regular practice for circular deps in pytorch? Was there some design of which submodules can depend on others?", "in_reply_to_id": 166189381}