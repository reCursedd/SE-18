{"url": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/166440279", "pull_request_review_id": 94502417, "id": 166440279, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE2NjQ0MDI3OQ==", "diff_hunk": "@@ -2958,9 +2958,11 @@ def compare_cpu_gpu(outputs_cpu, outputs_gpu):\n                 grad_hy = torch.randn(num_layers * num_directions, batch, hidden_size)\n \n                 if variable_len:\n-                    batch_sizes = [7, 5, 5, 2, 1, 1]\n-                    input_val = rnn_utils.pack_padded_sequence(input_val, batch_sizes, batch_first=batch_first)\n-                    grad_output = rnn_utils.pack_padded_sequence(grad_output, batch_sizes, batch_first=batch_first).data\n+                    lengths = torch.IntTensor([7, 5, 5, 2, 1, 1])", "path": "test/test_nn.py", "position": null, "original_position": 7, "commit_id": "c9c0a5924fdbb682f43d1e499db132b5babdba72", "original_commit_id": "789dac8436892d861f60247d245bb8181eaef765", "user": {"login": "ezyang", "id": 13564, "node_id": "MDQ6VXNlcjEzNTY0", "avatar_url": "https://avatars0.githubusercontent.com/u/13564?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ezyang", "html_url": "https://github.com/ezyang", "followers_url": "https://api.github.com/users/ezyang/followers", "following_url": "https://api.github.com/users/ezyang/following{/other_user}", "gists_url": "https://api.github.com/users/ezyang/gists{/gist_id}", "starred_url": "https://api.github.com/users/ezyang/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ezyang/subscriptions", "organizations_url": "https://api.github.com/users/ezyang/orgs", "repos_url": "https://api.github.com/users/ezyang/repos", "events_url": "https://api.github.com/users/ezyang/events{/privacy}", "received_events_url": "https://api.github.com/users/ezyang/received_events", "type": "User", "site_admin": false}, "body": "Concretely:\r\n\r\n1. If some code exercises the externally facing API, as this code does, you should keep the test for the legacy API because someone might be using it, and we need to continue testing that it works.\r\n2. You should add a warning to `pack_padded_sequence` that detects if you get a Python list and throws a deprecation notice.", "created_at": "2018-02-06T21:01:28Z", "updated_at": "2018-11-23T15:39:13Z", "html_url": "https://github.com/pytorch/pytorch/pull/4695#discussion_r166440279", "pull_request_url": "https://api.github.com/repos/pytorch/pytorch/pulls/4695", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/166440279"}, "html": {"href": "https://github.com/pytorch/pytorch/pull/4695#discussion_r166440279"}, "pull_request": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/4695"}}, "body_html": "<p>Concretely:</p>\n<ol>\n<li>If some code exercises the externally facing API, as this code does, you should keep the test for the legacy API because someone might be using it, and we need to continue testing that it works.</li>\n<li>You should add a warning to <code>pack_padded_sequence</code> that detects if you get a Python list and throws a deprecation notice.</li>\n</ol>", "body_text": "Concretely:\n\nIf some code exercises the externally facing API, as this code does, you should keep the test for the legacy API because someone might be using it, and we need to continue testing that it works.\nYou should add a warning to pack_padded_sequence that detects if you get a Python list and throws a deprecation notice.", "in_reply_to_id": 166439440}