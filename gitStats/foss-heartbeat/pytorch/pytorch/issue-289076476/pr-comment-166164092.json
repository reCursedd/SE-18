{"url": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/166164092", "pull_request_review_id": 94200889, "id": 166164092, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE2NjE2NDA5Mg==", "diff_hunk": "@@ -167,6 +172,66 @@ void fuseTransposeIntoGemm(std::shared_ptr<Graph>& graph) {\n   }\n }\n \n+void pushPackingPastRnn(std::shared_ptr<Graph>& graph) {\n+  for (auto it = graph->nodes().begin(); it != graph->nodes().end(); ++it) {\n+    auto* n = *it;\n+\n+    if (n->kind() != kPackPadded) {\n+      continue;\n+    }\n+    if (n->outputs()[0]->uses().size() != 1) {\n+      // For now, only handle the case where there is one consumer.\n+      continue;\n+    }\n+    Node * rnn = n->outputs()[0]->uses()[0].user;\n+    if (!isRNN(rnn)) {\n+      continue;\n+    }\n+\n+    // remove PackPadded from in front of the RNN\n+    n->outputs()[0]->replaceFirstUseWith(n->inputs()[0]);\n+    n->outputs()[1]->replaceFirstUseWith(n->inputs()[1]);\n+\n+    // and insert new PackPadded after the RNN\n+    Node * newPackPadded = graph->create(kPackPadded, 2);\n+    newPackPadded->insertAfter(rnn);\n+\n+    // make things consume from the new PackPadded\n+    rnn->outputs()[0]->replaceAllUsesWith(newPackPadded->outputs()[0]);\n+    n->outputs()[1]->replaceAllUsesWith(newPackPadded->outputs()[1]);\n+\n+    // setup the new PackPadded's inputs\n+    newPackPadded->addInput(rnn->outputs()[0]);\n+    newPackPadded->addInput(n->inputs()[1]);\n+\n+    it.destroyCurrent();\n+  }\n+}\n+\n+void removeNopPacking(std::shared_ptr<Graph>& graph) {\n+  for (auto it = graph->nodes().begin(); it != graph->nodes().end(); ++it) {\n+    auto* n = *it;\n+\n+    if (n->kind() != kPadPacked) {\n+      continue;\n+    }\n+    Node* input = n->inputs()[0]->node();\n+    if (input->kind() != kPackPadded) {\n+      continue;\n+    }\n+    if (input != n->inputs()[1]->node()) {", "path": "torch/csrc/jit/passes/onnx/peephole.cpp", "position": null, "original_position": 63, "commit_id": "c9c0a5924fdbb682f43d1e499db132b5babdba72", "original_commit_id": "a617fe07a346a29e64ce35e7e75f1ffc4acf47f7", "user": {"login": "anderspapitto", "id": 1388690, "node_id": "MDQ6VXNlcjEzODg2OTA=", "avatar_url": "https://avatars3.githubusercontent.com/u/1388690?v=4", "gravatar_id": "", "url": "https://api.github.com/users/anderspapitto", "html_url": "https://github.com/anderspapitto", "followers_url": "https://api.github.com/users/anderspapitto/followers", "following_url": "https://api.github.com/users/anderspapitto/following{/other_user}", "gists_url": "https://api.github.com/users/anderspapitto/gists{/gist_id}", "starred_url": "https://api.github.com/users/anderspapitto/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/anderspapitto/subscriptions", "organizations_url": "https://api.github.com/users/anderspapitto/orgs", "repos_url": "https://api.github.com/users/anderspapitto/repos", "events_url": "https://api.github.com/users/anderspapitto/events{/privacy}", "received_events_url": "https://api.github.com/users/anderspapitto/received_events", "type": "User", "site_admin": false}, "body": "ok, i'll take another look", "created_at": "2018-02-06T01:24:25Z", "updated_at": "2018-11-23T15:39:08Z", "html_url": "https://github.com/pytorch/pytorch/pull/4695#discussion_r166164092", "pull_request_url": "https://api.github.com/repos/pytorch/pytorch/pulls/4695", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/166164092"}, "html": {"href": "https://github.com/pytorch/pytorch/pull/4695#discussion_r166164092"}, "pull_request": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/4695"}}, "body_html": "<p>ok, i'll take another look</p>", "body_text": "ok, i'll take another look", "in_reply_to_id": 166161818}