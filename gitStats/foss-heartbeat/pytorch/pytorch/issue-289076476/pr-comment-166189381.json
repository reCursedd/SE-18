{"url": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/166189381", "pull_request_review_id": 94226962, "id": 166189381, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE2NjE4OTM4MQ==", "diff_hunk": "@@ -109,10 +110,26 @@ def pack_padded_sequence(input, lengths, batch_first=False):\n     \"\"\"\n     data, batch_sizes = PackPadded.apply(input, lengths, batch_first)\n \n-    return PackedSequence(data, list(batch_sizes.data))\n+    return PackedSequence(data, batch_sizes)\n+\n+\n+def _symbolic_pack_padded_sequence(g, input, lengths, batch_first=False):\n+    # There currently is no PackPadded operator in ONNX. We rely on an\n+    # optimization pass to remove this later. It is an error if all\n+    # PackPadded operators cannot be optimized out.\n+    return g.op(\"PackPadded\", input, lengths, outputs=2)\n+\n+\n+def pack_padded_sequence(input, *args, **kwargs):", "path": "torch/nn/utils/rnn.py", "position": 40, "original_position": 45, "commit_id": "c9c0a5924fdbb682f43d1e499db132b5babdba72", "original_commit_id": "13a2906bf6ad6779c7320baa62380d1c57d9ff8c", "user": {"login": "dzhulgakov", "id": 17890620, "node_id": "MDQ6VXNlcjE3ODkwNjIw", "avatar_url": "https://avatars2.githubusercontent.com/u/17890620?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dzhulgakov", "html_url": "https://github.com/dzhulgakov", "followers_url": "https://api.github.com/users/dzhulgakov/followers", "following_url": "https://api.github.com/users/dzhulgakov/following{/other_user}", "gists_url": "https://api.github.com/users/dzhulgakov/gists{/gist_id}", "starred_url": "https://api.github.com/users/dzhulgakov/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dzhulgakov/subscriptions", "organizations_url": "https://api.github.com/users/dzhulgakov/orgs", "repos_url": "https://api.github.com/users/dzhulgakov/repos", "events_url": "https://api.github.com/users/dzhulgakov/events{/privacy}", "received_events_url": "https://api.github.com/users/dzhulgakov/received_events", "type": "User", "site_admin": false}, "body": "I don't think you need to do this additional invocation - just apply `@symbolic_override_first_arg_based(_ _symbolic_pack_padded_sequence)` to the function below (see https://github.com/pytorch/pytorch/blob/5b43c22f73279c67084a2357a489420c705cb84f/torch/onnx/__init__.py#L381)\r\n\r\nThe reason why we were arguing about perf for the main RNN function was that the internal function `forward` was declared (and decorated) on each RNN() function invocation. In this case the decorator would run only once on module loading so the resulting code from decorator would be equivalent to what you wrote here.", "created_at": "2018-02-06T05:17:22Z", "updated_at": "2018-11-23T15:39:08Z", "html_url": "https://github.com/pytorch/pytorch/pull/4695#discussion_r166189381", "pull_request_url": "https://api.github.com/repos/pytorch/pytorch/pulls/4695", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/166189381"}, "html": {"href": "https://github.com/pytorch/pytorch/pull/4695#discussion_r166189381"}, "pull_request": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/4695"}}, "body_html": "<p>I don't think you need to do this additional invocation - just apply <code>@symbolic_override_first_arg_based(_ _symbolic_pack_padded_sequence)</code> to the function below (see <div class=\"border rounded-1 my-2\">\n  <div class=\"f6 px-3 py-2 lh-condensed border-bottom bg-gray-light\">\n    <p class=\"mb-0 text-bold\">\n      <a href=\"https://github.com/pytorch/pytorch/blob/5b43c22f73279c67084a2357a489420c705cb84f/torch/onnx/__init__.py#L381\">pytorch/torch/onnx/__init__.py</a>\n    </p>\n    <p class=\"mb-0 text-gray-light\">\n         Line 381\n      in\n      <a data-pjax=\"true\" class=\"commit-tease-sha\" href=\"/pytorch/pytorch/commit/5b43c22f73279c67084a2357a489420c705cb84f\">5b43c22</a>\n    </p>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper blob-wrapper-embedded data\">\n    <table class=\"highlight tab-size mb-0 js-file-line-container\" data-tab-size=\"8\">\n\n        <tbody><tr class=\"border-0\">\n          <td id=\"L381\" class=\"blob-num border-0 px-3 py-0 bg-white js-line-number\" data-line-number=\"381\"></td>\n          <td id=\"LC381\" class=\"blob-code border-0 px-3 py-0 bg-white blob-code-inner js-file-line\"> <span class=\"pl-c\"><span class=\"pl-c\">#</span> fast pass</span> </td>\n        </tr>\n    </tbody></table>\n  </div>\n</div>\n)</p>\n<p>The reason why we were arguing about perf for the main RNN function was that the internal function <code>forward</code> was declared (and decorated) on each RNN() function invocation. In this case the decorator would run only once on module loading so the resulting code from decorator would be equivalent to what you wrote here.</p>", "body_text": "I don't think you need to do this additional invocation - just apply @symbolic_override_first_arg_based(_ _symbolic_pack_padded_sequence) to the function below (see \n  \n    \n      pytorch/torch/onnx/__init__.py\n    \n    \n         Line 381\n      in\n      5b43c22\n    \n    \n    \n    \n\n        \n          \n           # fast pass \n        \n    \n  \n\n)\nThe reason why we were arguing about perf for the main RNN function was that the internal function forward was declared (and decorated) on each RNN() function invocation. In this case the decorator would run only once on module loading so the resulting code from decorator would be equivalent to what you wrote here."}