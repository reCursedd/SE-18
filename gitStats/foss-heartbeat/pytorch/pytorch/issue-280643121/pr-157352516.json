{"url": "https://api.github.com/repos/pytorch/pytorch/pulls/4095", "id": 157352516, "node_id": "MDExOlB1bGxSZXF1ZXN0MTU3MzUyNTE2", "html_url": "https://github.com/pytorch/pytorch/pull/4095", "diff_url": "https://github.com/pytorch/pytorch/pull/4095.diff", "patch_url": "https://github.com/pytorch/pytorch/pull/4095.patch", "issue_url": "https://api.github.com/repos/pytorch/pytorch/issues/4095", "number": 4095, "state": "closed", "locked": false, "title": "Add python only default init expression; Implement stft, hann/hamming/bartlett window.", "user": {"login": "SsnL", "id": 5674597, "node_id": "MDQ6VXNlcjU2NzQ1OTc=", "avatar_url": "https://avatars2.githubusercontent.com/u/5674597?v=4", "gravatar_id": "", "url": "https://api.github.com/users/SsnL", "html_url": "https://github.com/SsnL", "followers_url": "https://api.github.com/users/SsnL/followers", "following_url": "https://api.github.com/users/SsnL/following{/other_user}", "gists_url": "https://api.github.com/users/SsnL/gists{/gist_id}", "starred_url": "https://api.github.com/users/SsnL/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/SsnL/subscriptions", "organizations_url": "https://api.github.com/users/SsnL/orgs", "repos_url": "https://api.github.com/users/SsnL/repos", "events_url": "https://api.github.com/users/SsnL/events{/privacy}", "received_events_url": "https://api.github.com/users/SsnL/received_events", "type": "User", "site_admin": false}, "body": "This PR\r\n\r\n1. Implements short-time fourier transform #3775 with tests against Scipy.\r\n2. Adds `atan2` for cuda double & half tensors. Refactored `atan2` to `THCNumerics`, Op to `THCTensorMathPointwise.cuh`.\r\n3. Adds support for python only default init in the parsers. This allows us to write argument with a default value that can either cause ambiguity in c++ (e.g., `Scalar p` in `norm`) or have a type that doesn't allow default value `None/NULL/nullptr` (e.g., `int64_t fft_size` in `stft`).\r\n  a. Changes `norm` to also use this in both `Declarations.cwrap` for #1419 . When `Tensor` and `Variable` merge, it should fix the issues in #1419 .\r\n4. Implements three commonly used window functions (Hann, Hamming, Bartlett) with tests against Scipy\r\n\r\nOn 3: Now in `python_variable_methods.cpp`, if an argument has python only default value, it will be generated like the following. I added the comment for clarification purpose. It won't be in actual code. \r\n```\r\nstatic PyObject * THPVariable_stft(PyObject* self, PyObject* args, PyObject* kwargs)\r\n{\r\n  HANDLE_TH_ERRORS\r\n  static PythonArgParser parser({\r\n    \"stft(int64_t frame_length, int64_t hop, int64_t fft_size=None, Tensor window=None, int64_t pad_end=0)\",\r\n  });\r\n  auto& self_ = reinterpret_cast<THPVariable*>(self)->cdata;\r\n  PyObject* parsed_args[6];\r\n  auto r = parser.parse(args, kwargs, parsed_args);\r\n  if (r.idx == 0) {\r\n    Tensor & self = self_;\r\n    int64_t frame_length = r.toInt64(0);\r\n    int64_t hop = r.toInt64(1);\r\n    const Tensor & window = r.tensor(3);\r\n    int64_t pad_end = r.toInt64(4);\r\n    // fft_size has python only default, so it will be generated last\r\n    int64_t fft_size = r.toInt64WithDefault(2, frame_length);  \r\n    return wrap(dispatch_stft(self, frame_length, hop, fft_size, window, pad_end));\r\n  }\r\n  Py_RETURN_NONE;\r\n  END_HANDLE_TH_ERRORS\r\n}\r\n```\r\n", "created_at": "2017-12-08T23:04:15Z", "updated_at": "2018-11-23T15:37:18Z", "closed_at": "2017-12-18T17:28:24Z", "merged_at": "2017-12-18T17:28:24Z", "merge_commit_sha": "d8b2e5d0916a85e603c9bda6def5cd20cbe94fa6", "assignee": null, "assignees": [], "requested_reviewers": [], "requested_teams": [], "labels": [], "milestone": null, "commits_url": "https://api.github.com/repos/pytorch/pytorch/pulls/4095/commits", "review_comments_url": "https://api.github.com/repos/pytorch/pytorch/pulls/4095/comments", "review_comment_url": "https://api.github.com/repos/pytorch/pytorch/pulls/comments{/number}", "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/4095/comments", "statuses_url": "https://api.github.com/repos/pytorch/pytorch/statuses/87bdc6fb3644200d8c662f3dbc3b22e50ae6e4ca", "head": {"label": "SsnL:stft", "ref": "stft", "sha": "87bdc6fb3644200d8c662f3dbc3b22e50ae6e4ca", "user": {"login": "SsnL", "id": 5674597, "node_id": "MDQ6VXNlcjU2NzQ1OTc=", "avatar_url": "https://avatars2.githubusercontent.com/u/5674597?v=4", "gravatar_id": "", "url": "https://api.github.com/users/SsnL", "html_url": "https://github.com/SsnL", "followers_url": "https://api.github.com/users/SsnL/followers", "following_url": "https://api.github.com/users/SsnL/following{/other_user}", "gists_url": "https://api.github.com/users/SsnL/gists{/gist_id}", "starred_url": "https://api.github.com/users/SsnL/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/SsnL/subscriptions", "organizations_url": "https://api.github.com/users/SsnL/orgs", "repos_url": "https://api.github.com/users/SsnL/repos", "events_url": "https://api.github.com/users/SsnL/events{/privacy}", "received_events_url": "https://api.github.com/users/SsnL/received_events", "type": "User", "site_admin": false}, "repo": {"id": 103305558, "node_id": "MDEwOlJlcG9zaXRvcnkxMDMzMDU1NTg=", "name": "pytorch", "full_name": "SsnL/pytorch", "private": false, "owner": {"login": "SsnL", "id": 5674597, "node_id": "MDQ6VXNlcjU2NzQ1OTc=", "avatar_url": "https://avatars2.githubusercontent.com/u/5674597?v=4", "gravatar_id": "", "url": "https://api.github.com/users/SsnL", "html_url": "https://github.com/SsnL", "followers_url": "https://api.github.com/users/SsnL/followers", "following_url": "https://api.github.com/users/SsnL/following{/other_user}", "gists_url": "https://api.github.com/users/SsnL/gists{/gist_id}", "starred_url": "https://api.github.com/users/SsnL/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/SsnL/subscriptions", "organizations_url": "https://api.github.com/users/SsnL/orgs", "repos_url": "https://api.github.com/users/SsnL/repos", "events_url": "https://api.github.com/users/SsnL/events{/privacy}", "received_events_url": "https://api.github.com/users/SsnL/received_events", "type": "User", "site_admin": false}, "html_url": "https://github.com/SsnL/pytorch", "description": "Tensors and Dynamic neural networks in Python  with strong GPU acceleration", "fork": true, "url": "https://api.github.com/repos/SsnL/pytorch", "forks_url": "https://api.github.com/repos/SsnL/pytorch/forks", "keys_url": "https://api.github.com/repos/SsnL/pytorch/keys{/key_id}", "collaborators_url": "https://api.github.com/repos/SsnL/pytorch/collaborators{/collaborator}", "teams_url": "https://api.github.com/repos/SsnL/pytorch/teams", "hooks_url": "https://api.github.com/repos/SsnL/pytorch/hooks", "issue_events_url": "https://api.github.com/repos/SsnL/pytorch/issues/events{/number}", "events_url": "https://api.github.com/repos/SsnL/pytorch/events", "assignees_url": "https://api.github.com/repos/SsnL/pytorch/assignees{/user}", "branches_url": "https://api.github.com/repos/SsnL/pytorch/branches{/branch}", "tags_url": "https://api.github.com/repos/SsnL/pytorch/tags", "blobs_url": "https://api.github.com/repos/SsnL/pytorch/git/blobs{/sha}", "git_tags_url": "https://api.github.com/repos/SsnL/pytorch/git/tags{/sha}", "git_refs_url": "https://api.github.com/repos/SsnL/pytorch/git/refs{/sha}", "trees_url": "https://api.github.com/repos/SsnL/pytorch/git/trees{/sha}", "statuses_url": "https://api.github.com/repos/SsnL/pytorch/statuses/{sha}", "languages_url": "https://api.github.com/repos/SsnL/pytorch/languages", "stargazers_url": "https://api.github.com/repos/SsnL/pytorch/stargazers", "contributors_url": "https://api.github.com/repos/SsnL/pytorch/contributors", "subscribers_url": "https://api.github.com/repos/SsnL/pytorch/subscribers", "subscription_url": "https://api.github.com/repos/SsnL/pytorch/subscription", "commits_url": "https://api.github.com/repos/SsnL/pytorch/commits{/sha}", "git_commits_url": "https://api.github.com/repos/SsnL/pytorch/git/commits{/sha}", "comments_url": "https://api.github.com/repos/SsnL/pytorch/comments{/number}", "issue_comment_url": "https://api.github.com/repos/SsnL/pytorch/issues/comments{/number}", "contents_url": "https://api.github.com/repos/SsnL/pytorch/contents/{+path}", "compare_url": "https://api.github.com/repos/SsnL/pytorch/compare/{base}...{head}", "merges_url": "https://api.github.com/repos/SsnL/pytorch/merges", "archive_url": "https://api.github.com/repos/SsnL/pytorch/{archive_format}{/ref}", "downloads_url": "https://api.github.com/repos/SsnL/pytorch/downloads", "issues_url": "https://api.github.com/repos/SsnL/pytorch/issues{/number}", "pulls_url": "https://api.github.com/repos/SsnL/pytorch/pulls{/number}", "milestones_url": "https://api.github.com/repos/SsnL/pytorch/milestones{/number}", "notifications_url": "https://api.github.com/repos/SsnL/pytorch/notifications{?since,all,participating}", "labels_url": "https://api.github.com/repos/SsnL/pytorch/labels{/name}", "releases_url": "https://api.github.com/repos/SsnL/pytorch/releases{/id}", "deployments_url": "https://api.github.com/repos/SsnL/pytorch/deployments", "created_at": "2017-09-12T18:13:43Z", "updated_at": "2018-11-04T15:36:18Z", "pushed_at": "2018-11-09T18:32:11Z", "git_url": "git://github.com/SsnL/pytorch.git", "ssh_url": "git@github.com:SsnL/pytorch.git", "clone_url": "https://github.com/SsnL/pytorch.git", "svn_url": "https://github.com/SsnL/pytorch", "homepage": "http://pytorch.org", "size": 83933, "stargazers_count": 0, "watchers_count": 0, "language": "C++", "has_issues": true, "has_projects": true, "has_downloads": true, "has_wiki": true, "has_pages": false, "forks_count": 0, "mirror_url": null, "archived": false, "open_issues_count": 1, "license": {"key": "other", "name": "Other", "spdx_id": "NOASSERTION", "url": null, "node_id": "MDc6TGljZW5zZTA="}, "forks": 0, "open_issues": 1, "watchers": 0, "default_branch": "master"}}, "base": {"label": "pytorch:master", "ref": "master", "sha": "3b641dc80521bf78da9cbd2a0334cd321d336b08", "user": {"login": "pytorch", "id": 21003710, "node_id": "MDEyOk9yZ2FuaXphdGlvbjIxMDAzNzEw", "avatar_url": "https://avatars3.githubusercontent.com/u/21003710?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pytorch", "html_url": "https://github.com/pytorch", "followers_url": "https://api.github.com/users/pytorch/followers", "following_url": "https://api.github.com/users/pytorch/following{/other_user}", "gists_url": "https://api.github.com/users/pytorch/gists{/gist_id}", "starred_url": "https://api.github.com/users/pytorch/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pytorch/subscriptions", "organizations_url": "https://api.github.com/users/pytorch/orgs", "repos_url": "https://api.github.com/users/pytorch/repos", "events_url": "https://api.github.com/users/pytorch/events{/privacy}", "received_events_url": "https://api.github.com/users/pytorch/received_events", "type": "Organization", "site_admin": false}, "repo": {"id": 65600975, "node_id": "MDEwOlJlcG9zaXRvcnk2NTYwMDk3NQ==", "name": "pytorch", "full_name": "pytorch/pytorch", "private": false, "owner": {"login": "pytorch", "id": 21003710, "node_id": "MDEyOk9yZ2FuaXphdGlvbjIxMDAzNzEw", "avatar_url": "https://avatars3.githubusercontent.com/u/21003710?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pytorch", "html_url": "https://github.com/pytorch", "followers_url": "https://api.github.com/users/pytorch/followers", "following_url": "https://api.github.com/users/pytorch/following{/other_user}", "gists_url": "https://api.github.com/users/pytorch/gists{/gist_id}", "starred_url": "https://api.github.com/users/pytorch/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pytorch/subscriptions", "organizations_url": "https://api.github.com/users/pytorch/orgs", "repos_url": "https://api.github.com/users/pytorch/repos", "events_url": "https://api.github.com/users/pytorch/events{/privacy}", "received_events_url": "https://api.github.com/users/pytorch/received_events", "type": "Organization", "site_admin": false}, "html_url": "https://github.com/pytorch/pytorch", "description": "Tensors and Dynamic neural networks in Python  with strong GPU acceleration", "fork": false, "url": "https://api.github.com/repos/pytorch/pytorch", "forks_url": "https://api.github.com/repos/pytorch/pytorch/forks", "keys_url": "https://api.github.com/repos/pytorch/pytorch/keys{/key_id}", "collaborators_url": "https://api.github.com/repos/pytorch/pytorch/collaborators{/collaborator}", "teams_url": "https://api.github.com/repos/pytorch/pytorch/teams", "hooks_url": "https://api.github.com/repos/pytorch/pytorch/hooks", "issue_events_url": "https://api.github.com/repos/pytorch/pytorch/issues/events{/number}", "events_url": "https://api.github.com/repos/pytorch/pytorch/events", "assignees_url": "https://api.github.com/repos/pytorch/pytorch/assignees{/user}", "branches_url": "https://api.github.com/repos/pytorch/pytorch/branches{/branch}", "tags_url": "https://api.github.com/repos/pytorch/pytorch/tags", "blobs_url": "https://api.github.com/repos/pytorch/pytorch/git/blobs{/sha}", "git_tags_url": "https://api.github.com/repos/pytorch/pytorch/git/tags{/sha}", "git_refs_url": "https://api.github.com/repos/pytorch/pytorch/git/refs{/sha}", "trees_url": "https://api.github.com/repos/pytorch/pytorch/git/trees{/sha}", "statuses_url": "https://api.github.com/repos/pytorch/pytorch/statuses/{sha}", "languages_url": "https://api.github.com/repos/pytorch/pytorch/languages", "stargazers_url": "https://api.github.com/repos/pytorch/pytorch/stargazers", "contributors_url": "https://api.github.com/repos/pytorch/pytorch/contributors", "subscribers_url": "https://api.github.com/repos/pytorch/pytorch/subscribers", "subscription_url": "https://api.github.com/repos/pytorch/pytorch/subscription", "commits_url": "https://api.github.com/repos/pytorch/pytorch/commits{/sha}", "git_commits_url": "https://api.github.com/repos/pytorch/pytorch/git/commits{/sha}", "comments_url": "https://api.github.com/repos/pytorch/pytorch/comments{/number}", "issue_comment_url": "https://api.github.com/repos/pytorch/pytorch/issues/comments{/number}", "contents_url": "https://api.github.com/repos/pytorch/pytorch/contents/{+path}", "compare_url": "https://api.github.com/repos/pytorch/pytorch/compare/{base}...{head}", "merges_url": "https://api.github.com/repos/pytorch/pytorch/merges", "archive_url": "https://api.github.com/repos/pytorch/pytorch/{archive_format}{/ref}", "downloads_url": "https://api.github.com/repos/pytorch/pytorch/downloads", "issues_url": "https://api.github.com/repos/pytorch/pytorch/issues{/number}", "pulls_url": "https://api.github.com/repos/pytorch/pytorch/pulls{/number}", "milestones_url": "https://api.github.com/repos/pytorch/pytorch/milestones{/number}", "notifications_url": "https://api.github.com/repos/pytorch/pytorch/notifications{?since,all,participating}", "labels_url": "https://api.github.com/repos/pytorch/pytorch/labels{/name}", "releases_url": "https://api.github.com/repos/pytorch/pytorch/releases{/id}", "deployments_url": "https://api.github.com/repos/pytorch/pytorch/deployments", "created_at": "2016-08-13T05:26:41Z", "updated_at": "2018-11-24T05:35:41Z", "pushed_at": "2018-11-24T05:34:07Z", "git_url": "git://github.com/pytorch/pytorch.git", "ssh_url": "git@github.com:pytorch/pytorch.git", "clone_url": "https://github.com/pytorch/pytorch.git", "svn_url": "https://github.com/pytorch/pytorch", "homepage": "http://pytorch.org", "size": 89651, "stargazers_count": 21577, "watchers_count": 21577, "language": "C++", "has_issues": true, "has_projects": true, "has_downloads": true, "has_wiki": true, "has_pages": false, "forks_count": 5149, "mirror_url": null, "archived": false, "open_issues_count": 2193, "license": {"key": "other", "name": "Other", "spdx_id": "NOASSERTION", "url": null, "node_id": "MDc6TGljZW5zZTA="}, "forks": 5149, "open_issues": 2193, "watchers": 21577, "default_branch": "master"}}, "_links": {"self": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/4095"}, "html": {"href": "https://github.com/pytorch/pytorch/pull/4095"}, "issue": {"href": "https://api.github.com/repos/pytorch/pytorch/issues/4095"}, "comments": {"href": "https://api.github.com/repos/pytorch/pytorch/issues/4095/comments"}, "review_comments": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/4095/comments"}, "review_comment": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/comments{/number}"}, "commits": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/4095/commits"}, "statuses": {"href": "https://api.github.com/repos/pytorch/pytorch/statuses/87bdc6fb3644200d8c662f3dbc3b22e50ae6e4ca"}}, "author_association": "CONTRIBUTOR", "body_html": "<p>This PR</p>\n<ol>\n<li>Implements short-time fourier transform <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load issue title\" data-id=\"275111739\" data-permission-text=\"Issue title is private\" data-url=\"https://github.com/pytorch/pytorch/issues/3775\" data-hovercard-type=\"issue\" data-hovercard-url=\"/pytorch/pytorch/issues/3775/hovercard\" href=\"https://github.com/pytorch/pytorch/issues/3775\">#3775</a> with tests against Scipy.</li>\n<li>Adds <code>atan2</code> for cuda double &amp; half tensors. Refactored <code>atan2</code> to <code>THCNumerics</code>, Op to <code>THCTensorMathPointwise.cuh</code>.</li>\n<li>Adds support for python only default init in the parsers. This allows us to write argument with a default value that can either cause ambiguity in c++ (e.g., <code>Scalar p</code> in <code>norm</code>) or have a type that doesn't allow default value <code>None/NULL/nullptr</code> (e.g., <code>int64_t fft_size</code> in <code>stft</code>).<br>\na. Changes <code>norm</code> to also use this in both <code>Declarations.cwrap</code> for <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load issue title\" data-id=\"225447803\" data-permission-text=\"Issue title is private\" data-url=\"https://github.com/pytorch/pytorch/issues/1419\" data-hovercard-type=\"issue\" data-hovercard-url=\"/pytorch/pytorch/issues/1419/hovercard\" href=\"https://github.com/pytorch/pytorch/issues/1419\">#1419</a> . When <code>Tensor</code> and <code>Variable</code> merge, it should fix the issues in <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load issue title\" data-id=\"225447803\" data-permission-text=\"Issue title is private\" data-url=\"https://github.com/pytorch/pytorch/issues/1419\" data-hovercard-type=\"issue\" data-hovercard-url=\"/pytorch/pytorch/issues/1419/hovercard\" href=\"https://github.com/pytorch/pytorch/issues/1419\">#1419</a> .</li>\n<li>Implements three commonly used window functions (Hann, Hamming, Bartlett) with tests against Scipy</li>\n</ol>\n<p>On 3: Now in <code>python_variable_methods.cpp</code>, if an argument has python only default value, it will be generated like the following. I added the comment for clarification purpose. It won't be in actual code.</p>\n<pre><code>static PyObject * THPVariable_stft(PyObject* self, PyObject* args, PyObject* kwargs)\n{\n  HANDLE_TH_ERRORS\n  static PythonArgParser parser({\n    \"stft(int64_t frame_length, int64_t hop, int64_t fft_size=None, Tensor window=None, int64_t pad_end=0)\",\n  });\n  auto&amp; self_ = reinterpret_cast&lt;THPVariable*&gt;(self)-&gt;cdata;\n  PyObject* parsed_args[6];\n  auto r = parser.parse(args, kwargs, parsed_args);\n  if (r.idx == 0) {\n    Tensor &amp; self = self_;\n    int64_t frame_length = r.toInt64(0);\n    int64_t hop = r.toInt64(1);\n    const Tensor &amp; window = r.tensor(3);\n    int64_t pad_end = r.toInt64(4);\n    // fft_size has python only default, so it will be generated last\n    int64_t fft_size = r.toInt64WithDefault(2, frame_length);  \n    return wrap(dispatch_stft(self, frame_length, hop, fft_size, window, pad_end));\n  }\n  Py_RETURN_NONE;\n  END_HANDLE_TH_ERRORS\n}\n</code></pre>", "body_text": "This PR\n\nImplements short-time fourier transform #3775 with tests against Scipy.\nAdds atan2 for cuda double & half tensors. Refactored atan2 to THCNumerics, Op to THCTensorMathPointwise.cuh.\nAdds support for python only default init in the parsers. This allows us to write argument with a default value that can either cause ambiguity in c++ (e.g., Scalar p in norm) or have a type that doesn't allow default value None/NULL/nullptr (e.g., int64_t fft_size in stft).\na. Changes norm to also use this in both Declarations.cwrap for #1419 . When Tensor and Variable merge, it should fix the issues in #1419 .\nImplements three commonly used window functions (Hann, Hamming, Bartlett) with tests against Scipy\n\nOn 3: Now in python_variable_methods.cpp, if an argument has python only default value, it will be generated like the following. I added the comment for clarification purpose. It won't be in actual code.\nstatic PyObject * THPVariable_stft(PyObject* self, PyObject* args, PyObject* kwargs)\n{\n  HANDLE_TH_ERRORS\n  static PythonArgParser parser({\n    \"stft(int64_t frame_length, int64_t hop, int64_t fft_size=None, Tensor window=None, int64_t pad_end=0)\",\n  });\n  auto& self_ = reinterpret_cast<THPVariable*>(self)->cdata;\n  PyObject* parsed_args[6];\n  auto r = parser.parse(args, kwargs, parsed_args);\n  if (r.idx == 0) {\n    Tensor & self = self_;\n    int64_t frame_length = r.toInt64(0);\n    int64_t hop = r.toInt64(1);\n    const Tensor & window = r.tensor(3);\n    int64_t pad_end = r.toInt64(4);\n    // fft_size has python only default, so it will be generated last\n    int64_t fft_size = r.toInt64WithDefault(2, frame_length);  \n    return wrap(dispatch_stft(self, frame_length, hop, fft_size, window, pad_end));\n  }\n  Py_RETURN_NONE;\n  END_HANDLE_TH_ERRORS\n}", "merged": true, "mergeable": null, "rebaseable": null, "mergeable_state": "unknown", "merged_by": {"login": "soumith", "id": 1310570, "node_id": "MDQ6VXNlcjEzMTA1NzA=", "avatar_url": "https://avatars0.githubusercontent.com/u/1310570?v=4", "gravatar_id": "", "url": "https://api.github.com/users/soumith", "html_url": "https://github.com/soumith", "followers_url": "https://api.github.com/users/soumith/followers", "following_url": "https://api.github.com/users/soumith/following{/other_user}", "gists_url": "https://api.github.com/users/soumith/gists{/gist_id}", "starred_url": "https://api.github.com/users/soumith/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/soumith/subscriptions", "organizations_url": "https://api.github.com/users/soumith/orgs", "repos_url": "https://api.github.com/users/soumith/repos", "events_url": "https://api.github.com/users/soumith/events{/privacy}", "received_events_url": "https://api.github.com/users/soumith/received_events", "type": "User", "site_admin": false}, "comments": 10, "review_comments": 10, "maintainer_can_modify": false, "commits": 2, "additions": 599, "deletions": 78, "changed_files": 22}