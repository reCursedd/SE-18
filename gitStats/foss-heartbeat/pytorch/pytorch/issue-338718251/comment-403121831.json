{"url": "https://api.github.com/repos/pytorch/pytorch/issues/comments/403121831", "html_url": "https://github.com/pytorch/pytorch/pull/9192#issuecomment-403121831", "issue_url": "https://api.github.com/repos/pytorch/pytorch/issues/9192", "id": 403121831, "node_id": "MDEyOklzc3VlQ29tbWVudDQwMzEyMTgzMQ==", "user": {"login": "t-vi", "id": 20787943, "node_id": "MDQ6VXNlcjIwNzg3OTQz", "avatar_url": "https://avatars2.githubusercontent.com/u/20787943?v=4", "gravatar_id": "", "url": "https://api.github.com/users/t-vi", "html_url": "https://github.com/t-vi", "followers_url": "https://api.github.com/users/t-vi/followers", "following_url": "https://api.github.com/users/t-vi/following{/other_user}", "gists_url": "https://api.github.com/users/t-vi/gists{/gist_id}", "starred_url": "https://api.github.com/users/t-vi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/t-vi/subscriptions", "organizations_url": "https://api.github.com/users/t-vi/orgs", "repos_url": "https://api.github.com/users/t-vi/repos", "events_url": "https://api.github.com/users/t-vi/events{/privacy}", "received_events_url": "https://api.github.com/users/t-vi/received_events", "type": "User", "site_admin": false}, "created_at": "2018-07-06T19:08:24Z", "updated_at": "2018-07-06T19:08:24Z", "author_association": "CONTRIBUTOR", "body_html": "<p>The following get's me true 3x while without the double I get false 3x:</p>\n<pre><code>x = torch.randn(5)\ny = torch.randn(7)\nA = torch.randn(3, 5)\n#             if test[0] not in {\"i,i-&gt;\", \"i,i-&gt;i\", \"ij,ij-&gt;ij\"}:\nfor test in [\n    (\"i,i-&gt;\", x, x),            # dot\n    (\"i,i-&gt;i\", x, x),           # vector element-wise mul\n    (\"ij,ij-&gt;ij\", A, A), # matrix element-wise mul\n    ]:\n    def do_einsum(*args):\n         return torch.einsum(test[0], args)\n    gradcheck_inps = tuple(t.detach().double().requires_grad_() for t in test[1:])\n    print (test[0], torch.autograd.gradcheck(do_einsum, gradcheck_inps, raise_exception=False))\n</code></pre>", "body_text": "The following get's me true 3x while without the double I get false 3x:\nx = torch.randn(5)\ny = torch.randn(7)\nA = torch.randn(3, 5)\n#             if test[0] not in {\"i,i->\", \"i,i->i\", \"ij,ij->ij\"}:\nfor test in [\n    (\"i,i->\", x, x),            # dot\n    (\"i,i->i\", x, x),           # vector element-wise mul\n    (\"ij,ij->ij\", A, A), # matrix element-wise mul\n    ]:\n    def do_einsum(*args):\n         return torch.einsum(test[0], args)\n    gradcheck_inps = tuple(t.detach().double().requires_grad_() for t in test[1:])\n    print (test[0], torch.autograd.gradcheck(do_einsum, gradcheck_inps, raise_exception=False))", "body": "The following get's me true 3x while without the double I get false 3x:\r\n```\r\nx = torch.randn(5)\r\ny = torch.randn(7)\r\nA = torch.randn(3, 5)\r\n#             if test[0] not in {\"i,i->\", \"i,i->i\", \"ij,ij->ij\"}:\r\nfor test in [\r\n    (\"i,i->\", x, x),            # dot\r\n    (\"i,i->i\", x, x),           # vector element-wise mul\r\n    (\"ij,ij->ij\", A, A), # matrix element-wise mul\r\n    ]:\r\n    def do_einsum(*args):\r\n         return torch.einsum(test[0], args)\r\n    gradcheck_inps = tuple(t.detach().double().requires_grad_() for t in test[1:])\r\n    print (test[0], torch.autograd.gradcheck(do_einsum, gradcheck_inps, raise_exception=False))\r\n```"}