{"url": "https://api.github.com/repos/pytorch/pytorch/issues/comments/402940889", "html_url": "https://github.com/pytorch/pytorch/pull/9192#issuecomment-402940889", "issue_url": "https://api.github.com/repos/pytorch/pytorch/issues/9192", "id": 402940889, "node_id": "MDEyOklzc3VlQ29tbWVudDQwMjk0MDg4OQ==", "user": {"login": "t-vi", "id": 20787943, "node_id": "MDQ6VXNlcjIwNzg3OTQz", "avatar_url": "https://avatars2.githubusercontent.com/u/20787943?v=4", "gravatar_id": "", "url": "https://api.github.com/users/t-vi", "html_url": "https://github.com/t-vi", "followers_url": "https://api.github.com/users/t-vi/followers", "following_url": "https://api.github.com/users/t-vi/following{/other_user}", "gists_url": "https://api.github.com/users/t-vi/gists{/gist_id}", "starred_url": "https://api.github.com/users/t-vi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/t-vi/subscriptions", "organizations_url": "https://api.github.com/users/t-vi/orgs", "repos_url": "https://api.github.com/users/t-vi/repos", "events_url": "https://api.github.com/users/t-vi/events{/privacy}", "received_events_url": "https://api.github.com/users/t-vi/received_events", "type": "User", "site_admin": false}, "created_at": "2018-07-06T06:36:35Z", "updated_at": "2018-07-06T06:36:35Z", "author_association": "CONTRIBUTOR", "body_html": "<p><a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=5674597\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/SsnL\">@SsnL</a> Ha, thanks for catching this! I think this is as simple as having double:<br>\nWith</p>\n<pre><code>                gradcheck_inps = tuple(t.detach().requires_grad_() for t in test[1:])\n</code></pre>\n<p>passses all three cases that were failing before.<br>\nAn alternative is, of course, to use just add dtype=torch.double for the generated args.<br>\nDo you want me to send a diff or include it in yours?</p>", "body_text": "@SsnL Ha, thanks for catching this! I think this is as simple as having double:\nWith\n                gradcheck_inps = tuple(t.detach().requires_grad_() for t in test[1:])\n\npassses all three cases that were failing before.\nAn alternative is, of course, to use just add dtype=torch.double for the generated args.\nDo you want me to send a diff or include it in yours?", "body": "@SsnL Ha, thanks for catching this! I think this is as simple as having double:\r\nWith\r\n```\r\n                gradcheck_inps = tuple(t.detach().requires_grad_() for t in test[1:])\r\n```\r\npassses all three cases that were failing before.\r\nAn alternative is, of course, to use just add dtype=torch.double for the generated args.\r\nDo you want me to send a diff or include it in yours?"}