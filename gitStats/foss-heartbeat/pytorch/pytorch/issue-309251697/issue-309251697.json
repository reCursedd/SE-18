{"url": "https://api.github.com/repos/pytorch/pytorch/issues/6065", "repository_url": "https://api.github.com/repos/pytorch/pytorch", "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/6065/labels{/name}", "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/6065/comments", "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/6065/events", "html_url": "https://github.com/pytorch/pytorch/issues/6065", "id": 309251697, "node_id": "MDU6SXNzdWUzMDkyNTE2OTc=", "number": 6065, "title": "Inconsistency Between the Return Value of torch.nonzero() and the Indexing Standard for 1D tensors", "user": {"login": "roeemz", "id": 11503315, "node_id": "MDQ6VXNlcjExNTAzMzE1", "avatar_url": "https://avatars0.githubusercontent.com/u/11503315?v=4", "gravatar_id": "", "url": "https://api.github.com/users/roeemz", "html_url": "https://github.com/roeemz", "followers_url": "https://api.github.com/users/roeemz/followers", "following_url": "https://api.github.com/users/roeemz/following{/other_user}", "gists_url": "https://api.github.com/users/roeemz/gists{/gist_id}", "starred_url": "https://api.github.com/users/roeemz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/roeemz/subscriptions", "organizations_url": "https://api.github.com/users/roeemz/orgs", "repos_url": "https://api.github.com/users/roeemz/repos", "events_url": "https://api.github.com/users/roeemz/events{/privacy}", "received_events_url": "https://api.github.com/users/roeemz/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-03-28T07:32:39Z", "updated_at": "2018-03-28T09:03:39Z", "closed_at": "2018-03-28T09:03:39Z", "author_association": "NONE", "body_html": "<ul>\n<li>OS: Ubuntu 16.04.3 LTS (GNU/Linux 4.4.0-87-generic x86_64)</li>\n<li>PyTorch version: 0.3.1.post2</li>\n<li>How you installed PyTorch (conda, pip, source): conda</li>\n<li>Python version: Python 3.6.4</li>\n<li>CUDA/cuDNN version: Cuda compilation tools, release 8.0, V8.0.61</li>\n<li>GPU models and configuration: 2 1080 Ti</li>\n<li>GCC version (if compiling from source): n/a</li>\n</ul>\n<p>In addition, including the following information will also be very helpful for us to diagnose the problem:</p>\n<ul>\n<li>A script to reproduce the bug. Please try to provide as minimal of a test case as possible:</li>\n</ul>\n<p>import torch</p>\n<p>inp = torch.rand(5)<br>\nidx = inp.nonzero()</p>\n<p>#only works like this:<br>\nprint(inp[idx.view(-1)])<br>\n#doesn't work like this:<br>\nprint(inp[idx])</p>\n<ul>\n<li>Error messages and/or stack traces of the bug</li>\n</ul>\n<p>Traceback (most recent call last):<br>\nFile \"\", line 1, in <br>\nIndexError: Indexing a Tensor with a torch.LongTensor triggers index_select semantics, and thus we expect a vector, but the indexing Tensor passed has 2 dimensions</p>\n<ul>\n<li>Context around what you are trying to do</li>\n</ul>\n<p>trying to access indices returned by \"torch.nonzero()\"</p>\n<p><a href=\"https://github.com/pytorch/pytorch/files/1854947/index_bug_pytorch.zip\">index_bug_pytorch.zip</a></p>", "body_text": "OS: Ubuntu 16.04.3 LTS (GNU/Linux 4.4.0-87-generic x86_64)\nPyTorch version: 0.3.1.post2\nHow you installed PyTorch (conda, pip, source): conda\nPython version: Python 3.6.4\nCUDA/cuDNN version: Cuda compilation tools, release 8.0, V8.0.61\nGPU models and configuration: 2 1080 Ti\nGCC version (if compiling from source): n/a\n\nIn addition, including the following information will also be very helpful for us to diagnose the problem:\n\nA script to reproduce the bug. Please try to provide as minimal of a test case as possible:\n\nimport torch\ninp = torch.rand(5)\nidx = inp.nonzero()\n#only works like this:\nprint(inp[idx.view(-1)])\n#doesn't work like this:\nprint(inp[idx])\n\nError messages and/or stack traces of the bug\n\nTraceback (most recent call last):\nFile \"\", line 1, in \nIndexError: Indexing a Tensor with a torch.LongTensor triggers index_select semantics, and thus we expect a vector, but the indexing Tensor passed has 2 dimensions\n\nContext around what you are trying to do\n\ntrying to access indices returned by \"torch.nonzero()\"\nindex_bug_pytorch.zip", "body": "\r\n- OS: Ubuntu 16.04.3 LTS (GNU/Linux 4.4.0-87-generic x86_64)\r\n- PyTorch version: 0.3.1.post2\r\n- How you installed PyTorch (conda, pip, source): conda\r\n- Python version: Python 3.6.4\r\n- CUDA/cuDNN version: Cuda compilation tools, release 8.0, V8.0.61\r\n- GPU models and configuration: 2 1080 Ti\r\n- GCC version (if compiling from source): n/a\r\n\r\nIn addition, including the following information will also be very helpful for us to diagnose the problem:\r\n- A script to reproduce the bug. Please try to provide as minimal of a test case as possible:\r\n\r\nimport torch\r\n\r\ninp = torch.rand(5)\r\nidx = inp.nonzero()\r\n\r\n#only works like this:\r\nprint(inp[idx.view(-1)])\r\n#doesn't work like this:\r\nprint(inp[idx])\r\n\r\n- Error messages and/or stack traces of the bug\r\n\r\nTraceback (most recent call last):\r\n  File \"<stdin>\", line 1, in <module>\r\nIndexError: Indexing a Tensor with a torch.LongTensor triggers index_select semantics, and thus we expect a vector, but the indexing Tensor passed has 2 dimensions\r\n\r\n\r\n- Context around what you are trying to do\r\n\r\ntrying to access indices returned by \"torch.nonzero()\"\r\n\r\n[index_bug_pytorch.zip](https://github.com/pytorch/pytorch/files/1854947/index_bug_pytorch.zip)\r\n"}