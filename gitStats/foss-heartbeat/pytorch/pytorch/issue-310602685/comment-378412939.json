{"url": "https://api.github.com/repos/pytorch/pytorch/issues/comments/378412939", "html_url": "https://github.com/pytorch/pytorch/pull/6201#issuecomment-378412939", "issue_url": "https://api.github.com/repos/pytorch/pytorch/issues/6201", "id": 378412939, "node_id": "MDEyOklzc3VlQ29tbWVudDM3ODQxMjkzOQ==", "user": {"login": "goldsborough", "id": 6429851, "node_id": "MDQ6VXNlcjY0Mjk4NTE=", "avatar_url": "https://avatars3.githubusercontent.com/u/6429851?v=4", "gravatar_id": "", "url": "https://api.github.com/users/goldsborough", "html_url": "https://github.com/goldsborough", "followers_url": "https://api.github.com/users/goldsborough/followers", "following_url": "https://api.github.com/users/goldsborough/following{/other_user}", "gists_url": "https://api.github.com/users/goldsborough/gists{/gist_id}", "starred_url": "https://api.github.com/users/goldsborough/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/goldsborough/subscriptions", "organizations_url": "https://api.github.com/users/goldsborough/orgs", "repos_url": "https://api.github.com/users/goldsborough/repos", "events_url": "https://api.github.com/users/goldsborough/events{/privacy}", "received_events_url": "https://api.github.com/users/goldsborough/received_events", "type": "User", "site_admin": false}, "created_at": "2018-04-03T21:58:46Z", "updated_at": "2018-04-03T21:58:46Z", "author_association": "CONTRIBUTOR", "body_html": "<p>Ok so I've implementd <code>torch.argmin()</code> and <code>torch.argmax()</code> such that <code>torch.argmax(x, dim=None)</code> is equivalent to <code>torch.argmax(x.view(-1), dim=0, keepdim=False)</code>. For this I had to name the native function exposed from C++ <code>_argmax</code> (with underscore) and not expose <code>argmax</code>.</p>\n<p>I also added an overload in ATen/C++ that mimics the behavior of <code>dim=None</code>.</p>", "body_text": "Ok so I've implementd torch.argmin() and torch.argmax() such that torch.argmax(x, dim=None) is equivalent to torch.argmax(x.view(-1), dim=0, keepdim=False). For this I had to name the native function exposed from C++ _argmax (with underscore) and not expose argmax.\nI also added an overload in ATen/C++ that mimics the behavior of dim=None.", "body": "Ok so I've implementd `torch.argmin()` and `torch.argmax()` such that `torch.argmax(x, dim=None)` is equivalent to `torch.argmax(x.view(-1), dim=0, keepdim=False)`. For this I had to name the native function exposed from C++ `_argmax` (with underscore) and not expose `argmax`.\r\n\r\nI also added an overload in ATen/C++ that mimics the behavior of `dim=None`."}