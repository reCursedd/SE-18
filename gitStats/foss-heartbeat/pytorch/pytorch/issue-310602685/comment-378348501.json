{"url": "https://api.github.com/repos/pytorch/pytorch/issues/comments/378348501", "html_url": "https://github.com/pytorch/pytorch/pull/6201#issuecomment-378348501", "issue_url": "https://api.github.com/repos/pytorch/pytorch/issues/6201", "id": 378348501, "node_id": "MDEyOklzc3VlQ29tbWVudDM3ODM0ODUwMQ==", "user": {"login": "goldsborough", "id": 6429851, "node_id": "MDQ6VXNlcjY0Mjk4NTE=", "avatar_url": "https://avatars3.githubusercontent.com/u/6429851?v=4", "gravatar_id": "", "url": "https://api.github.com/users/goldsborough", "html_url": "https://github.com/goldsborough", "followers_url": "https://api.github.com/users/goldsborough/followers", "following_url": "https://api.github.com/users/goldsborough/following{/other_user}", "gists_url": "https://api.github.com/users/goldsborough/gists{/gist_id}", "starred_url": "https://api.github.com/users/goldsborough/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/goldsborough/subscriptions", "organizations_url": "https://api.github.com/users/goldsborough/orgs", "repos_url": "https://api.github.com/users/goldsborough/repos", "events_url": "https://api.github.com/users/goldsborough/events{/privacy}", "received_events_url": "https://api.github.com/users/goldsborough/received_events", "type": "User", "site_admin": false}, "created_at": "2018-04-03T18:23:03Z", "updated_at": "2018-04-03T18:23:03Z", "author_association": "CONTRIBUTOR", "body_html": "<p>There is one discussion point about the <code>dim</code> parameter. In Numpy, it defaults to <code>None</code> and when not passed, numpy flattens the input and returns the argmax of the flattened array. This means that when you have e.g. a 3-dimensional tensor, you'll get back an index into the flattened tensor. This is very unintuitive and not really helpful IMO. TensorFlow currently defaults <code>dim</code> to zero, although that might surprise numpy users, and also doesn't sound like a good default behavior to be.</p>\n<p>I think the clearest solution is to not default the <code>dim</code> parameter. Numpy's behavior can then be achieved with <code>x.view(-1).argmax(0)</code>, which I believe to be fine.</p>\n<p><a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=655866\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/colesbury\">@colesbury</a> what do you think?</p>", "body_text": "There is one discussion point about the dim parameter. In Numpy, it defaults to None and when not passed, numpy flattens the input and returns the argmax of the flattened array. This means that when you have e.g. a 3-dimensional tensor, you'll get back an index into the flattened tensor. This is very unintuitive and not really helpful IMO. TensorFlow currently defaults dim to zero, although that might surprise numpy users, and also doesn't sound like a good default behavior to be.\nI think the clearest solution is to not default the dim parameter. Numpy's behavior can then be achieved with x.view(-1).argmax(0), which I believe to be fine.\n@colesbury what do you think?", "body": "There is one discussion point about the `dim` parameter. In Numpy, it defaults to `None` and when not passed, numpy flattens the input and returns the argmax of the flattened array. This means that when you have e.g. a 3-dimensional tensor, you'll get back an index into the flattened tensor. This is very unintuitive and not really helpful IMO. TensorFlow currently defaults `dim` to zero, although that might surprise numpy users, and also doesn't sound like a good default behavior to be.\r\n\r\nI think the clearest solution is to not default the `dim` parameter. Numpy's behavior can then be achieved with `x.view(-1).argmax(0)`, which I believe to be fine.\r\n\r\n@colesbury what do you think?"}