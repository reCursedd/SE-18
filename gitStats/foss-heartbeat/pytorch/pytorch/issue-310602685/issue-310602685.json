{"url": "https://api.github.com/repos/pytorch/pytorch/issues/6201", "repository_url": "https://api.github.com/repos/pytorch/pytorch", "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/6201/labels{/name}", "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/6201/comments", "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/6201/events", "html_url": "https://github.com/pytorch/pytorch/pull/6201", "id": 310602685, "node_id": "MDExOlB1bGxSZXF1ZXN0MTc4OTI2Njk1", "number": 6201, "title": "Add max_values and argmax convenience functions to ATen", "user": {"login": "goldsborough", "id": 6429851, "node_id": "MDQ6VXNlcjY0Mjk4NTE=", "avatar_url": "https://avatars3.githubusercontent.com/u/6429851?v=4", "gravatar_id": "", "url": "https://api.github.com/users/goldsborough", "html_url": "https://github.com/goldsborough", "followers_url": "https://api.github.com/users/goldsborough/followers", "following_url": "https://api.github.com/users/goldsborough/following{/other_user}", "gists_url": "https://api.github.com/users/goldsborough/gists{/gist_id}", "starred_url": "https://api.github.com/users/goldsborough/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/goldsborough/subscriptions", "organizations_url": "https://api.github.com/users/goldsborough/orgs", "repos_url": "https://api.github.com/users/goldsborough/repos", "events_url": "https://api.github.com/users/goldsborough/events{/privacy}", "received_events_url": "https://api.github.com/users/goldsborough/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 17, "created_at": "2018-04-02T20:37:28Z", "updated_at": "2018-11-23T15:41:36Z", "closed_at": "2018-04-04T19:53:27Z", "author_association": "CONTRIBUTOR", "pull_request": {"url": "https://api.github.com/repos/pytorch/pytorch/pulls/6201", "html_url": "https://github.com/pytorch/pytorch/pull/6201", "diff_url": "https://github.com/pytorch/pytorch/pull/6201.diff", "patch_url": "https://github.com/pytorch/pytorch/pull/6201.patch"}, "body_html": "<p>This PR adds convenience functions to only get the min/max values, or only the min/max indices, of a tensor. This avoids having to write <code>std::get&lt;0&gt;(tensor.max(dim))</code>.</p>\n<p>Part of <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load issue title\" data-id=\"287961179\" data-permission-text=\"Issue title is private\" data-url=\"https://github.com/pytorch/pytorch/issues/4619\" data-hovercard-type=\"issue\" data-hovercard-url=\"/pytorch/pytorch/issues/4619/hovercard\" href=\"https://github.com/pytorch/pytorch/issues/4619\">#4619</a> (CC <a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=3605224\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/ebetica\">@ebetica</a>)</p>\n<p>Not sure if we want to expose these in Python as well? <code>max(dim)[0]</code> is more convenient in python. Although <code>torch.argmax()</code> is also nice to have, since numpy has it too. I can add documentation to the functions if we want to make them part of the Python API.</p>\n<p><span class=\"issue-keyword tooltipped tooltipped-se\" aria-label=\"This pull request closes issue #5616.\">closes</span> <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load issue title\" data-id=\"303270775\" data-permission-text=\"Issue title is private\" data-url=\"https://github.com/pytorch/pytorch/issues/5616\" data-hovercard-type=\"issue\" data-hovercard-url=\"/pytorch/pytorch/issues/5616/hovercard\" href=\"https://github.com/pytorch/pytorch/issues/5616\">#5616</a></p>\n<p><a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=4583066\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/apaszke\">@apaszke</a> <a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=655866\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/colesbury\">@colesbury</a> <a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=13564\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/ezyang\">@ezyang</a></p>", "body_text": "This PR adds convenience functions to only get the min/max values, or only the min/max indices, of a tensor. This avoids having to write std::get<0>(tensor.max(dim)).\nPart of #4619 (CC @ebetica)\nNot sure if we want to expose these in Python as well? max(dim)[0] is more convenient in python. Although torch.argmax() is also nice to have, since numpy has it too. I can add documentation to the functions if we want to make them part of the Python API.\ncloses #5616\n@apaszke @colesbury @ezyang", "body": "This PR adds convenience functions to only get the min/max values, or only the min/max indices, of a tensor. This avoids having to write `std::get<0>(tensor.max(dim))`.\r\n\r\nPart of #4619 (CC @ebetica)\r\n\r\nNot sure if we want to expose these in Python as well? `max(dim)[0]` is more convenient in python. Although `torch.argmax()` is also nice to have, since numpy has it too. I can add documentation to the functions if we want to make them part of the Python API.\r\n\r\ncloses #5616 \r\n\r\n@apaszke @colesbury @ezyang "}