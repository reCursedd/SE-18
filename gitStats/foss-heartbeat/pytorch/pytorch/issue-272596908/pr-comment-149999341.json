{"url": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/149999341", "pull_request_review_id": 75482692, "id": 149999341, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE0OTk5OTM0MQ==", "diff_hunk": "@@ -56,59 +64,72 @@ TH_API void THNN_(SpatialGridSamplerBilinear_updateOutput)(\n   for (n = 0; n < N; ++n) {\n     for (h = 0; h < H; ++h) {\n       for (w = 0; w < W; ++w) {\n-\t// get the corresponding input x, y co-ordinates from grid\n-\treal ix = THTensor_fastGet4d(grid, n, h, w, 0);\n-\treal iy = THTensor_fastGet4d(grid, n, h, w, 1);\n-\n-\t// normalize ix, iy from [-1, 1] to [0, IH-1] & [0, IW-1]\n-\tix = ((ix + 1) / 2) * (IW-1);\n-\tiy = ((iy + 1) / 2) * (IH-1);\n-\n-\t// get NE, NW, SE, SW pixel values from (x, y)\n-\tint ix_nw = floor(ix);\n-\tint iy_nw = floor(iy);\n-\tint ix_ne = ix_nw + 1;\n-\tint iy_ne = iy_nw;\n-\tint ix_sw = ix_nw;\n-\tint iy_sw = iy_nw + 1;\n-\tint ix_se = ix_nw + 1;\n-\tint iy_se = iy_nw + 1;\n-\n-\t// get surfaces to each neighbor:\n-\treal nw = (ix_se - ix)    * (iy_se - iy);\n-\treal ne = (ix    - ix_sw) * (iy_sw - iy);\n-\treal sw = (ix_ne - ix)    * (iy    - iy_ne);\n-\treal se = (ix    - ix_nw) * (iy    - iy_nw);\n-\t  \n-\t// calculate bilinear weighted pixel value and set output pixel\n-\tfor (c = 0; c < C; ++c) {\n-\t  //   (c, iy_nw, ix_nw) * nw + (c, iy_ne, ix_ne) * ne\n-\t  // + (c, iy_sw, ix_sw) * sw + (c, iy_se, ix_se) * se\n-\t  real nw_val = SAFE_GET(input, ix_nw, iy_nw, n, c, IH, IW);\n-\t  real ne_val = SAFE_GET(input, ix_ne, iy_ne, n, c, IH, IW);\n-\t  real sw_val = SAFE_GET(input, ix_sw, iy_sw, n, c, IH, IW);\n-\t  real se_val = SAFE_GET(input, ix_se, iy_se, n, c, IH, IW);\n-\t  real out_val = nw_val * nw + ne_val * ne + sw_val * sw + se_val * se;\n-\t  THTensor_fastSet4d(output, n, c, h, w, out_val);\n-\t}\n+        // get the corresponding input x, y co-ordinates from grid\n+        real ix = THTensor_fastGet4d(grid, n, h, w, 0);\n+        real iy = THTensor_fastGet4d(grid, n, h, w, 1);\n+\n+        // normalize ix, iy from [-1, 1] to [0, IH-1] & [0, IW-1]\n+        ix = ((ix + 1) / 2) * (IW-1);\n+        iy = ((iy + 1) / 2) * (IH-1);\n+\n+        // get NE, NW, SE, SW pixel values from (x, y)\n+        int ix_nw = floor(ix);\n+        int iy_nw = floor(iy);\n+        int ix_ne = ix_nw + 1;\n+        int iy_ne = iy_nw;\n+        int ix_sw = ix_nw;\n+        int iy_sw = iy_nw + 1;\n+        int ix_se = ix_nw + 1;\n+        int iy_se = iy_nw + 1;\n+\n+        // get surfaces to each neighbor:\n+        real nw = (ix_se - ix)    * (iy_se - iy);\n+        real ne = (ix    - ix_sw) * (iy_sw - iy);\n+        real sw = (ix_ne - ix)    * (iy    - iy_ne);\n+        real se = (ix    - ix_nw) * (iy    - iy_nw);\n+\n+        if (padding_mode==MODE_BORDER){\n+          // clip coordinates to image borders\n+          CLIP_COORDINATES(ix_nw, ix_nw, IW);\n+          CLIP_COORDINATES(iy_nw, iy_nw, IH);\n+          CLIP_COORDINATES(ix_ne, ix_ne, IW);\n+          CLIP_COORDINATES(iy_ne, iy_ne, IH);\n+          CLIP_COORDINATES(ix_sw, ix_sw, IW);\n+          CLIP_COORDINATES(iy_sw, iy_sw, IH);\n+          CLIP_COORDINATES(ix_se, ix_se, IW);\n+          CLIP_COORDINATES(iy_se, iy_se, IH);\n+        }\n+\n+        // calculate bilinear weighted pixel value and set output pixel\n+        for (c = 0; c < C; ++c) {\n+          //   (c, iy_nw, ix_nw) * nw + (c, iy_ne, ix_ne) * ne", "path": "aten/src/THNN/generic/SpatialGridSamplerBilinear.c", "position": 126, "original_position": 126, "commit_id": "3cac879c7dab4925dc9d8bf4419ea2616cd60d3f", "original_commit_id": "3cac879c7dab4925dc9d8bf4419ea2616cd60d3f", "user": {"login": "josecabjim", "id": 28218638, "node_id": "MDQ6VXNlcjI4MjE4NjM4", "avatar_url": "https://avatars0.githubusercontent.com/u/28218638?v=4", "gravatar_id": "", "url": "https://api.github.com/users/josecabjim", "html_url": "https://github.com/josecabjim", "followers_url": "https://api.github.com/users/josecabjim/followers", "following_url": "https://api.github.com/users/josecabjim/following{/other_user}", "gists_url": "https://api.github.com/users/josecabjim/gists{/gist_id}", "starred_url": "https://api.github.com/users/josecabjim/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/josecabjim/subscriptions", "organizations_url": "https://api.github.com/users/josecabjim/orgs", "repos_url": "https://api.github.com/users/josecabjim/repos", "events_url": "https://api.github.com/users/josecabjim/events{/privacy}", "received_events_url": "https://api.github.com/users/josecabjim/received_events", "type": "User", "site_admin": false}, "body": "Apologies for this. I will take it into account for the future.\r\n\r\nTabs/spaces changes are limited to the files:\r\n`aten/src/THNN/generic/SpatialGridSamplerBilinear.c`\r\n`aten/src/THNN/generic/THNN.h`", "created_at": "2017-11-09T15:45:20Z", "updated_at": "2018-11-23T15:36:16Z", "html_url": "https://github.com/pytorch/pytorch/pull/3599#discussion_r149999341", "pull_request_url": "https://api.github.com/repos/pytorch/pytorch/pulls/3599", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/149999341"}, "html": {"href": "https://github.com/pytorch/pytorch/pull/3599#discussion_r149999341"}, "pull_request": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/3599"}}, "body_html": "<p>Apologies for this. I will take it into account for the future.</p>\n<p>Tabs/spaces changes are limited to the files:<br>\n<code>aten/src/THNN/generic/SpatialGridSamplerBilinear.c</code><br>\n<code>aten/src/THNN/generic/THNN.h</code></p>", "body_text": "Apologies for this. I will take it into account for the future.\nTabs/spaces changes are limited to the files:\naten/src/THNN/generic/SpatialGridSamplerBilinear.c\naten/src/THNN/generic/THNN.h", "in_reply_to_id": 149988334}