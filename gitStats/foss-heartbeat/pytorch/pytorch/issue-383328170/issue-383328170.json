{"url": "https://api.github.com/repos/pytorch/pytorch/issues/14300", "repository_url": "https://api.github.com/repos/pytorch/pytorch", "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/14300/labels{/name}", "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/14300/comments", "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/14300/events", "html_url": "https://github.com/pytorch/pytorch/pull/14300", "id": 383328170, "node_id": "MDExOlB1bGxSZXF1ZXN0MjMyODIzNTAw", "number": 14300, "title": "Remove default constructor lines that do nothing, and fix warnings with clang trunk", "user": {"login": "umanwizard", "id": 1893159, "node_id": "MDQ6VXNlcjE4OTMxNTk=", "avatar_url": "https://avatars1.githubusercontent.com/u/1893159?v=4", "gravatar_id": "", "url": "https://api.github.com/users/umanwizard", "html_url": "https://github.com/umanwizard", "followers_url": "https://api.github.com/users/umanwizard/followers", "following_url": "https://api.github.com/users/umanwizard/following{/other_user}", "gists_url": "https://api.github.com/users/umanwizard/gists{/gist_id}", "starred_url": "https://api.github.com/users/umanwizard/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/umanwizard/subscriptions", "organizations_url": "https://api.github.com/users/umanwizard/orgs", "repos_url": "https://api.github.com/users/umanwizard/repos", "events_url": "https://api.github.com/users/umanwizard/events{/privacy}", "received_events_url": "https://api.github.com/users/umanwizard/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-11-21T23:35:25Z", "updated_at": "2018-11-23T21:38:18Z", "closed_at": null, "author_association": "CONTRIBUTOR", "pull_request": {"url": "https://api.github.com/repos/pytorch/pytorch/pulls/14300", "html_url": "https://github.com/pytorch/pytorch/pull/14300", "diff_url": "https://github.com/pytorch/pytorch/pull/14300.diff", "patch_url": "https://github.com/pytorch/pytorch/pull/14300.patch"}, "body_html": "<p>Every line removed in this diff was a no-op, but confusing:</p>\n<ul>\n<li>\n<p><code>c10::intrusive_ptr_target</code> (the base class of <code>TensorImpl</code>) has a user-declared move constructor, therefore its copy constructor and copy assignment operator <a href=\"https://stackoverflow.com/questions/11255027/why-user-defined-move-constructor-disables-the-implicit-copy-constructor\" rel=\"nofollow\">are implicitly deleted</a>, therefore <code>TensorImpl</code>'s copy constructor and copy assignment operator are implicitly deleted. Therefore, these <code>(...foo...) = default</code> lines do nothing (i.e., the constructor/operator are still deleted. You can verify this by attempting to copy-construct a <code>TensorImpl</code> anywhere in the codebase. It will fail to compile.)</p>\n</li>\n<li>\n<p>Similarly, the default constructors in <code>store_handler.h</code> are implicitly deleted, since <code>std::runtime_error</code> has no default constructor.</p>\n</li>\n</ul>\n<p>Clang added a warning for this behavior <a href=\"https://reviews.llvm.org/rL343285\" rel=\"nofollow\">in September 2018</a> (note that the warning is not just for cxx2a, despite the slightly confusing commit message), so building pytorch with a recent build of clang trunk causes spew of this warning, which is fixed by the present PR.</p>", "body_text": "Every line removed in this diff was a no-op, but confusing:\n\n\nc10::intrusive_ptr_target (the base class of TensorImpl) has a user-declared move constructor, therefore its copy constructor and copy assignment operator are implicitly deleted, therefore TensorImpl's copy constructor and copy assignment operator are implicitly deleted. Therefore, these (...foo...) = default lines do nothing (i.e., the constructor/operator are still deleted. You can verify this by attempting to copy-construct a TensorImpl anywhere in the codebase. It will fail to compile.)\n\n\nSimilarly, the default constructors in store_handler.h are implicitly deleted, since std::runtime_error has no default constructor.\n\n\nClang added a warning for this behavior in September 2018 (note that the warning is not just for cxx2a, despite the slightly confusing commit message), so building pytorch with a recent build of clang trunk causes spew of this warning, which is fixed by the present PR.", "body": "Every line removed in this diff was a no-op, but confusing:\r\n\r\n* `c10::intrusive_ptr_target` (the base class of `TensorImpl`) has a user-declared move constructor, therefore its copy constructor and copy assignment operator [are implicitly deleted](https://stackoverflow.com/questions/11255027/why-user-defined-move-constructor-disables-the-implicit-copy-constructor), therefore `TensorImpl`'s copy constructor and copy assignment operator are implicitly deleted. Therefore, these `(...foo...) = default` lines do nothing (i.e., the constructor/operator are still deleted. You can verify this by attempting to copy-construct a `TensorImpl` anywhere in the codebase. It will fail to compile.)\r\n\r\n* Similarly, the default constructors in `store_handler.h` are implicitly deleted, since `std::runtime_error` has no default constructor.\r\n\r\nClang added a warning for this behavior [in September 2018](https://reviews.llvm.org/rL343285) (note that the warning is not just for cxx2a, despite the slightly confusing commit message), so building pytorch with a recent build of clang trunk causes spew of this warning, which is fixed by the present PR."}