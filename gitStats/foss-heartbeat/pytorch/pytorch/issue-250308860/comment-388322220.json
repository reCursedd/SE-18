{"url": "https://api.github.com/repos/pytorch/pytorch/issues/comments/388322220", "html_url": "https://github.com/pytorch/pytorch/issues/2421#issuecomment-388322220", "issue_url": "https://api.github.com/repos/pytorch/pytorch/issues/2421", "id": 388322220, "node_id": "MDEyOklzc3VlQ29tbWVudDM4ODMyMjIyMA==", "user": {"login": "albanD", "id": 6359743, "node_id": "MDQ6VXNlcjYzNTk3NDM=", "avatar_url": "https://avatars3.githubusercontent.com/u/6359743?v=4", "gravatar_id": "", "url": "https://api.github.com/users/albanD", "html_url": "https://github.com/albanD", "followers_url": "https://api.github.com/users/albanD/followers", "following_url": "https://api.github.com/users/albanD/following{/other_user}", "gists_url": "https://api.github.com/users/albanD/gists{/gist_id}", "starred_url": "https://api.github.com/users/albanD/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/albanD/subscriptions", "organizations_url": "https://api.github.com/users/albanD/orgs", "repos_url": "https://api.github.com/users/albanD/repos", "events_url": "https://api.github.com/users/albanD/events{/privacy}", "received_events_url": "https://api.github.com/users/albanD/received_events", "type": "User", "site_admin": false}, "created_at": "2018-05-11T10:11:36Z", "updated_at": "2018-05-11T10:11:36Z", "author_association": "COLLABORATOR", "body_html": "<p>Well any value between [-1, 1] is a valid subgradient for the 2-norm.<br>\nMore genereally, any vector in the 1 ball for the dual norm is a valid subgradient.<br>\nThis means that 0 is always going to be a subgradient, while 1 will not be for all p.</p>\n<p>Anyway, the theory says that any of them could be taken and subgradient descent will work. I'm sure that depending on the application, one will be better than the other.<br>\nFor example, the relu function will also give a 0 subgradient at 0, you could have given 1.<br>\nThe main point here was to remove nans that make your network give nan for everything which is not convenient.</p>", "body_text": "Well any value between [-1, 1] is a valid subgradient for the 2-norm.\nMore genereally, any vector in the 1 ball for the dual norm is a valid subgradient.\nThis means that 0 is always going to be a subgradient, while 1 will not be for all p.\nAnyway, the theory says that any of them could be taken and subgradient descent will work. I'm sure that depending on the application, one will be better than the other.\nFor example, the relu function will also give a 0 subgradient at 0, you could have given 1.\nThe main point here was to remove nans that make your network give nan for everything which is not convenient.", "body": "Well any value between [-1, 1] is a valid subgradient for the 2-norm.\r\nMore genereally, any vector in the 1 ball for the dual norm is a valid subgradient.\r\nThis means that 0 is always going to be a subgradient, while 1 will not be for all p.\r\n\r\nAnyway, the theory says that any of them could be taken and subgradient descent will work. I'm sure that depending on the application, one will be better than the other.\r\nFor example, the relu function will also give a 0 subgradient at 0, you could have given 1.\r\nThe main point here was to remove nans that make your network give nan for everything which is not convenient."}