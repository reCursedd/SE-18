{"url": "https://api.github.com/repos/pytorch/pytorch/issues/13963", "repository_url": "https://api.github.com/repos/pytorch/pytorch", "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/13963/labels{/name}", "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/13963/comments", "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/13963/events", "html_url": "https://github.com/pytorch/pytorch/issues/13963", "id": 380659597, "node_id": "MDU6SXNzdWUzODA2NTk1OTc=", "number": 13963, "title": "[JIT] Behavior of .view operation in the JIT", "user": {"login": "nerox8664", "id": 3521007, "node_id": "MDQ6VXNlcjM1MjEwMDc=", "avatar_url": "https://avatars2.githubusercontent.com/u/3521007?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nerox8664", "html_url": "https://github.com/nerox8664", "followers_url": "https://api.github.com/users/nerox8664/followers", "following_url": "https://api.github.com/users/nerox8664/following{/other_user}", "gists_url": "https://api.github.com/users/nerox8664/gists{/gist_id}", "starred_url": "https://api.github.com/users/nerox8664/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nerox8664/subscriptions", "organizations_url": "https://api.github.com/users/nerox8664/orgs", "repos_url": "https://api.github.com/users/nerox8664/repos", "events_url": "https://api.github.com/users/nerox8664/events{/privacy}", "received_events_url": "https://api.github.com/users/nerox8664/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 679953983, "node_id": "MDU6TGFiZWw2Nzk5NTM5ODM=", "url": "https://api.github.com/repos/pytorch/pytorch/labels/jit", "name": "jit", "color": "c5def5", "default": false}, {"id": 693805995, "node_id": "MDU6TGFiZWw2OTM4MDU5OTU=", "url": "https://api.github.com/repos/pytorch/pytorch/labels/onnx", "name": "onnx", "color": "e99695", "default": false}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2018-11-14T11:40:12Z", "updated_at": "2018-11-19T18:53:29Z", "closed_at": null, "author_association": "NONE", "body_html": "<p>A type of <code>Tensor.size()</code> is different in the runtime and in the jit:<br>\n<code>&lt;class 'int'&gt;</code> - in runtime<br>\n<code>&lt;class 'torch.Tensor'&gt;</code> - with jit.trace</p>\n<h2>To Reproduce</h2>\n<p>Steps to reproduce the behavior:</p>\n<ol>\n<li>Run the code below in runtime</li>\n<li>Run the code below with jit.trace</li>\n</ol>\n<pre><code>class TestView(nn.Module):\n    def __init__(self):\n        super(TestView, self).__init__()\n        self.conv2d = nn.Conv2d(22, 32, kernel_size=1, bias=True)\n        self.fc = nn.Linear(15488, 3)\n\n    def forward(self, x):\n        x = self.conv2d(x)\n        \n        print(type(x.size()[0]))\n\n        x = x.view([x.size(0), -1])\n        x = self.fc(x)\n        return x\n</code></pre>\n<h2>Environment</h2>\n<p>pytorch nightly</p>", "body_text": "A type of Tensor.size() is different in the runtime and in the jit:\n<class 'int'> - in runtime\n<class 'torch.Tensor'> - with jit.trace\nTo Reproduce\nSteps to reproduce the behavior:\n\nRun the code below in runtime\nRun the code below with jit.trace\n\nclass TestView(nn.Module):\n    def __init__(self):\n        super(TestView, self).__init__()\n        self.conv2d = nn.Conv2d(22, 32, kernel_size=1, bias=True)\n        self.fc = nn.Linear(15488, 3)\n\n    def forward(self, x):\n        x = self.conv2d(x)\n        \n        print(type(x.size()[0]))\n\n        x = x.view([x.size(0), -1])\n        x = self.fc(x)\n        return x\n\nEnvironment\npytorch nightly", "body": "A type of `Tensor.size()` is different in the runtime and in the jit:\r\n`<class 'int'>` - in runtime\r\n`<class 'torch.Tensor'>` - with jit.trace\r\n\r\n## To Reproduce\r\n\r\nSteps to reproduce the behavior:\r\n\r\n1. Run the code below in runtime\r\n2. Run the code below with jit.trace\r\n\r\n```\r\nclass TestView(nn.Module):\r\n    def __init__(self):\r\n        super(TestView, self).__init__()\r\n        self.conv2d = nn.Conv2d(22, 32, kernel_size=1, bias=True)\r\n        self.fc = nn.Linear(15488, 3)\r\n\r\n    def forward(self, x):\r\n        x = self.conv2d(x)\r\n        \r\n        print(type(x.size()[0]))\r\n\r\n        x = x.view([x.size(0), -1])\r\n        x = self.fc(x)\r\n        return x\r\n```\r\n\r\n## Environment\r\n\r\npytorch nightly"}