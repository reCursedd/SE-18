{"url": "https://api.github.com/repos/pytorch/pytorch/issues/comments/386056013", "html_url": "https://github.com/pytorch/pytorch/pull/7177#issuecomment-386056013", "issue_url": "https://api.github.com/repos/pytorch/pytorch/issues/7177", "id": 386056013, "node_id": "MDEyOklzc3VlQ29tbWVudDM4NjA1NjAxMw==", "user": {"login": "fritzo", "id": 648532, "node_id": "MDQ6VXNlcjY0ODUzMg==", "avatar_url": "https://avatars0.githubusercontent.com/u/648532?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fritzo", "html_url": "https://github.com/fritzo", "followers_url": "https://api.github.com/users/fritzo/followers", "following_url": "https://api.github.com/users/fritzo/following{/other_user}", "gists_url": "https://api.github.com/users/fritzo/gists{/gist_id}", "starred_url": "https://api.github.com/users/fritzo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fritzo/subscriptions", "organizations_url": "https://api.github.com/users/fritzo/orgs", "repos_url": "https://api.github.com/users/fritzo/repos", "events_url": "https://api.github.com/users/fritzo/events{/privacy}", "received_events_url": "https://api.github.com/users/fritzo/received_events", "type": "User", "site_admin": false}, "created_at": "2018-05-02T17:26:29Z", "updated_at": "2018-05-02T17:26:29Z", "author_association": "CONTRIBUTOR", "body_html": "<p><a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=18168681\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/zuoxingdong\">@zuoxingdong</a> can you add some override implementations in this PR to provide motivation? Without numerical motivation this seems like interface creep.</p>\n<p><a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=4583066\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/apaszke\">@apaszke</a> I agree it's usually a bad idea to use raw probabilities in ML due to overflow issues. I like that we currently provide <code>.log_prob()</code> and not <code>.prob()</code> as a slight nudge to beginning ML practitioners to suggest they keep probabilites in log units rather than raw units.</p>", "body_text": "@zuoxingdong can you add some override implementations in this PR to provide motivation? Without numerical motivation this seems like interface creep.\n@apaszke I agree it's usually a bad idea to use raw probabilities in ML due to overflow issues. I like that we currently provide .log_prob() and not .prob() as a slight nudge to beginning ML practitioners to suggest they keep probabilites in log units rather than raw units.", "body": "@zuoxingdong can you add some override implementations in this PR to provide motivation? Without numerical motivation this seems like interface creep.\r\n\r\n@apaszke I agree it's usually a bad idea to use raw probabilities in ML due to overflow issues. I like that we currently provide `.log_prob()` and not `.prob()` as a slight nudge to beginning ML practitioners to suggest they keep probabilites in log units rather than raw units."}