{"url": "https://api.github.com/repos/pytorch/pytorch/issues/comments/386111606", "html_url": "https://github.com/pytorch/pytorch/pull/7177#issuecomment-386111606", "issue_url": "https://api.github.com/repos/pytorch/pytorch/issues/7177", "id": 386111606, "node_id": "MDEyOklzc3VlQ29tbWVudDM4NjExMTYwNg==", "user": {"login": "eb8680", "id": 2032320, "node_id": "MDQ6VXNlcjIwMzIzMjA=", "avatar_url": "https://avatars0.githubusercontent.com/u/2032320?v=4", "gravatar_id": "", "url": "https://api.github.com/users/eb8680", "html_url": "https://github.com/eb8680", "followers_url": "https://api.github.com/users/eb8680/followers", "following_url": "https://api.github.com/users/eb8680/following{/other_user}", "gists_url": "https://api.github.com/users/eb8680/gists{/gist_id}", "starred_url": "https://api.github.com/users/eb8680/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/eb8680/subscriptions", "organizations_url": "https://api.github.com/users/eb8680/orgs", "repos_url": "https://api.github.com/users/eb8680/repos", "events_url": "https://api.github.com/users/eb8680/events{/privacy}", "received_events_url": "https://api.github.com/users/eb8680/received_events", "type": "User", "site_admin": false}, "created_at": "2018-05-02T20:33:17Z", "updated_at": "2018-05-02T20:34:36Z", "author_association": "NONE", "body_html": "<p><a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=18168681\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/zuoxingdong\">@zuoxingdong</a> it's not specific to exponential families; see e.g. <a href=\"https://hips.seas.harvard.edu/blog/2013/01/09/computing-log-sum-exp/\" rel=\"nofollow\">this blog post</a>.  Your example would become:</p>\n<div class=\"highlight highlight-source-python\"><pre><span class=\"pl-k\">def</span> <span class=\"pl-en\">mdn_loss</span>(<span class=\"pl-smi\">log_pi</span>, <span class=\"pl-smi\">mu</span>, <span class=\"pl-smi\">sigma</span>, <span class=\"pl-smi\">target</span>):\n   log_prob <span class=\"pl-k\">=</span> log_pi <span class=\"pl-k\">+</span> Normal(mu, sigma).log_prob(target)\n   nll_loss <span class=\"pl-k\">=</span> <span class=\"pl-k\">-</span>log_sum_exp(log_prob, <span class=\"pl-v\">dim</span><span class=\"pl-k\">=</span><span class=\"pl-c1\">1</span>)\n   \n   <span class=\"pl-k\">return</span> nll_loss.mean()</pre></div>", "body_text": "@zuoxingdong it's not specific to exponential families; see e.g. this blog post.  Your example would become:\ndef mdn_loss(log_pi, mu, sigma, target):\n   log_prob = log_pi + Normal(mu, sigma).log_prob(target)\n   nll_loss = -log_sum_exp(log_prob, dim=1)\n   \n   return nll_loss.mean()", "body": "@zuoxingdong it's not specific to exponential families; see e.g. [this blog post](https://hips.seas.harvard.edu/blog/2013/01/09/computing-log-sum-exp/).  Your example would become:\r\n```python\r\ndef mdn_loss(log_pi, mu, sigma, target):\r\n   log_prob = log_pi + Normal(mu, sigma).log_prob(target)\r\n   nll_loss = -log_sum_exp(log_prob, dim=1)\r\n   \r\n   return nll_loss.mean()\r\n```"}