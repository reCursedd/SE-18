{"url": "https://api.github.com/repos/pytorch/pytorch/issues/comments/258611932", "html_url": "https://github.com/pytorch/pytorch/pull/202#issuecomment-258611932", "issue_url": "https://api.github.com/repos/pytorch/pytorch/issues/202", "id": 258611932, "node_id": "MDEyOklzc3VlQ29tbWVudDI1ODYxMTkzMg==", "user": {"login": "apaszke", "id": 4583066, "node_id": "MDQ6VXNlcjQ1ODMwNjY=", "avatar_url": "https://avatars3.githubusercontent.com/u/4583066?v=4", "gravatar_id": "", "url": "https://api.github.com/users/apaszke", "html_url": "https://github.com/apaszke", "followers_url": "https://api.github.com/users/apaszke/followers", "following_url": "https://api.github.com/users/apaszke/following{/other_user}", "gists_url": "https://api.github.com/users/apaszke/gists{/gist_id}", "starred_url": "https://api.github.com/users/apaszke/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/apaszke/subscriptions", "organizations_url": "https://api.github.com/users/apaszke/orgs", "repos_url": "https://api.github.com/users/apaszke/repos", "events_url": "https://api.github.com/users/apaszke/events{/privacy}", "received_events_url": "https://api.github.com/users/apaszke/received_events", "type": "User", "site_admin": false}, "created_at": "2016-11-05T13:35:37Z", "updated_at": "2016-11-05T13:35:37Z", "author_association": "MEMBER", "body_html": "<p>In general the printed tensors look nice, but I have a couple of suggestions:</p>\n<ol>\n<li>I'd try to use ellipsis rather than a single dot more often (it doesn't leave so much empty space)</li>\n<li>In 4D case use <code>:</code> instead of <code>.</code> for the last two dimensions. It's more similar to the slice syntax.</li>\n<li>Why are we iterating over the outmost dimension in the 4D case? Since we tend to think of our data in row-major order we should first show a sequence like this (I'm omitting the trailing two dimensions):</li>\n</ol>\n<p>(x, 0)<br>\n(x, 1)<br>\n(x, 2)<br>\n(x, 47)<br>\n(x, 48)<br>\n(x, 49)</p>\n<p>with <code>x</code> in order <code>[0, 1, 2, 47, 48, 49]</code>.</p>", "body_text": "In general the printed tensors look nice, but I have a couple of suggestions:\n\nI'd try to use ellipsis rather than a single dot more often (it doesn't leave so much empty space)\nIn 4D case use : instead of . for the last two dimensions. It's more similar to the slice syntax.\nWhy are we iterating over the outmost dimension in the 4D case? Since we tend to think of our data in row-major order we should first show a sequence like this (I'm omitting the trailing two dimensions):\n\n(x, 0)\n(x, 1)\n(x, 2)\n(x, 47)\n(x, 48)\n(x, 49)\nwith x in order [0, 1, 2, 47, 48, 49].", "body": "In general the printed tensors look nice, but I have a couple of suggestions:\n1. I'd try to use ellipsis rather than a single dot more often (it doesn't leave so much empty space)\n2. In 4D case use `:` instead of `.` for the last two dimensions. It's more similar to the slice syntax.\n3. Why are we iterating over the outmost dimension in the 4D case? Since we tend to think of our data in row-major order we should first show a sequence like this (I'm omitting the trailing two dimensions):\n\n(x, 0)\n(x, 1)\n(x, 2)\n(x, 47)\n(x, 48)\n(x, 49)\n\nwith `x` in order `[0, 1, 2, 47, 48, 49]`.\n"}