{"url": "https://api.github.com/repos/pytorch/pytorch/issues/comments/387089614", "html_url": "https://github.com/pytorch/pytorch/pull/5676#issuecomment-387089614", "issue_url": "https://api.github.com/repos/pytorch/pytorch/issues/5676", "id": 387089614, "node_id": "MDEyOklzc3VlQ29tbWVudDM4NzA4OTYxNA==", "user": {"login": "zou3519", "id": 5652049, "node_id": "MDQ6VXNlcjU2NTIwNDk=", "avatar_url": "https://avatars3.githubusercontent.com/u/5652049?v=4", "gravatar_id": "", "url": "https://api.github.com/users/zou3519", "html_url": "https://github.com/zou3519", "followers_url": "https://api.github.com/users/zou3519/followers", "following_url": "https://api.github.com/users/zou3519/following{/other_user}", "gists_url": "https://api.github.com/users/zou3519/gists{/gist_id}", "starred_url": "https://api.github.com/users/zou3519/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/zou3519/subscriptions", "organizations_url": "https://api.github.com/users/zou3519/orgs", "repos_url": "https://api.github.com/users/zou3519/repos", "events_url": "https://api.github.com/users/zou3519/events{/privacy}", "received_events_url": "https://api.github.com/users/zou3519/received_events", "type": "User", "site_admin": false}, "created_at": "2018-05-07T14:49:51Z", "updated_at": "2018-05-07T14:49:51Z", "author_association": "CONTRIBUTOR", "body_html": "<p><a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=3768583\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/gchanan\">@gchanan</a> I've rebased the code. <code>checkIndex</code> / <code>unpackIndex</code> don't work for the code right now because it doesn't unpack an int64_t from a scalar tensor. Given the following constructor:</p>\n<pre><code>torch.Size([2, torch.tensor(1)])\n</code></pre>\n<p>this PR takes the argument passed to <code>torch.Size</code> and replaces all scalar tensors with python ints. Let me know if you think another approach would be better.</p>", "body_text": "@gchanan I've rebased the code. checkIndex / unpackIndex don't work for the code right now because it doesn't unpack an int64_t from a scalar tensor. Given the following constructor:\ntorch.Size([2, torch.tensor(1)])\n\nthis PR takes the argument passed to torch.Size and replaces all scalar tensors with python ints. Let me know if you think another approach would be better.", "body": "@gchanan I've rebased the code. `checkIndex` / `unpackIndex` don't work for the code right now because it doesn't unpack an int64_t from a scalar tensor. Given the following constructor:\r\n```\r\ntorch.Size([2, torch.tensor(1)])\r\n```\r\nthis PR takes the argument passed to `torch.Size` and replaces all scalar tensors with python ints. Let me know if you think another approach would be better."}