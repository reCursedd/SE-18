{"url": "https://api.github.com/repos/pytorch/pytorch/issues/comments/371974425", "html_url": "https://github.com/pytorch/pytorch/pull/5676#issuecomment-371974425", "issue_url": "https://api.github.com/repos/pytorch/pytorch/issues/5676", "id": 371974425, "node_id": "MDEyOklzc3VlQ29tbWVudDM3MTk3NDQyNQ==", "user": {"login": "gchanan", "id": 3768583, "node_id": "MDQ6VXNlcjM3Njg1ODM=", "avatar_url": "https://avatars2.githubusercontent.com/u/3768583?v=4", "gravatar_id": "", "url": "https://api.github.com/users/gchanan", "html_url": "https://github.com/gchanan", "followers_url": "https://api.github.com/users/gchanan/followers", "following_url": "https://api.github.com/users/gchanan/following{/other_user}", "gists_url": "https://api.github.com/users/gchanan/gists{/gist_id}", "starred_url": "https://api.github.com/users/gchanan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/gchanan/subscriptions", "organizations_url": "https://api.github.com/users/gchanan/orgs", "repos_url": "https://api.github.com/users/gchanan/repos", "events_url": "https://api.github.com/users/gchanan/events{/privacy}", "received_events_url": "https://api.github.com/users/gchanan/received_events", "type": "User", "site_admin": false}, "created_at": "2018-03-09T23:27:52Z", "updated_at": "2018-03-09T23:27:52Z", "author_association": "CONTRIBUTOR", "body_html": "<p>I don't think we should special case this if it's possible to avoid it; does it work if we bind int64_t / IntList like we did Scalar in the python arg parser (<div class=\"border rounded-1 my-2\">\n  <div class=\"f6 px-3 py-2 lh-condensed border-bottom bg-gray-light\">\n    <p class=\"mb-0 text-bold\">\n      <a href=\"https://github.com/pytorch/pytorch/blob/582d0450922c6178920d2401751adce02cd34fbb/torch/csrc/utils/python_arg_parser.cpp#L91-L94\">pytorch/torch/csrc/utils/python_arg_parser.cpp</a>\n    </p>\n    <p class=\"mb-0 text-gray-light\">\n        Lines 91 to 94\n      in\n      <a data-pjax=\"true\" class=\"commit-tease-sha\" href=\"/pytorch/pytorch/commit/582d0450922c6178920d2401751adce02cd34fbb\">582d045</a>\n    </p>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper blob-wrapper-embedded data\">\n    <table class=\"highlight tab-size mb-0 js-file-line-container\" data-tab-size=\"8\">\n\n        <tbody><tr class=\"border-0\">\n          <td id=\"L91\" class=\"blob-num border-0 px-3 py-0 bg-white js-line-number\" data-line-number=\"91\"></td>\n          <td id=\"LC91\" class=\"blob-code border-0 px-3 py-0 bg-white blob-code-inner js-file-line\"> <span class=\"pl-k\">if</span> (<span class=\"pl-c1\">THPVariable_Check</span>(obj)) { </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L92\" class=\"blob-num border-0 px-3 py-0 bg-white js-line-number\" data-line-number=\"92\"></td>\n          <td id=\"LC92\" class=\"blob-code border-0 px-3 py-0 bg-white blob-code-inner js-file-line\">   <span class=\"pl-k\">auto</span>&amp; var = ((THPVariable*)obj)-&gt;<span class=\"pl-smi\">cdata</span>; </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L93\" class=\"blob-num border-0 px-3 py-0 bg-white js-line-number\" data-line-number=\"93\"></td>\n          <td id=\"LC93\" class=\"blob-code border-0 px-3 py-0 bg-white blob-code-inner js-file-line\">   <span class=\"pl-k\">return</span> !var.<span class=\"pl-c1\">requires_grad</span>() &amp;&amp; var.<span class=\"pl-c1\">dim</span>() == <span class=\"pl-c1\">0</span>; </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L94\" class=\"blob-num border-0 px-3 py-0 bg-white js-line-number\" data-line-number=\"94\"></td>\n          <td id=\"LC94\" class=\"blob-code border-0 px-3 py-0 bg-white blob-code-inner js-file-line\"> } </td>\n        </tr>\n    </tbody></table>\n  </div>\n</div>\n)?  i.e. if it's an integral type and doesn't require grad (although those shouldn't require grad anyway).</p>", "body_text": "I don't think we should special case this if it's possible to avoid it; does it work if we bind int64_t / IntList like we did Scalar in the python arg parser (\n  \n    \n      pytorch/torch/csrc/utils/python_arg_parser.cpp\n    \n    \n        Lines 91 to 94\n      in\n      582d045\n    \n    \n    \n    \n\n        \n          \n           if (THPVariable_Check(obj)) { \n        \n\n        \n          \n             auto& var = ((THPVariable*)obj)->cdata; \n        \n\n        \n          \n             return !var.requires_grad() && var.dim() == 0; \n        \n\n        \n          \n           } \n        \n    \n  \n\n)?  i.e. if it's an integral type and doesn't require grad (although those shouldn't require grad anyway).", "body": "I don't think we should special case this if it's possible to avoid it; does it work if we bind int64_t / IntList like we did Scalar in the python arg parser (https://github.com/pytorch/pytorch/blob/582d0450922c6178920d2401751adce02cd34fbb/torch/csrc/utils/python_arg_parser.cpp#L91-L94)?  i.e. if it's an integral type and doesn't require grad (although those shouldn't require grad anyway)."}