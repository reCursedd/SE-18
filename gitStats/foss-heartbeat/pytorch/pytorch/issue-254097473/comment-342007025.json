{"url": "https://api.github.com/repos/pytorch/pytorch/issues/comments/342007025", "html_url": "https://github.com/pytorch/pytorch/pull/2580#issuecomment-342007025", "issue_url": "https://api.github.com/repos/pytorch/pytorch/issues/2580", "id": 342007025, "node_id": "MDEyOklzc3VlQ29tbWVudDM0MjAwNzAyNQ==", "user": {"login": "jon-e-barker", "id": 19699370, "node_id": "MDQ6VXNlcjE5Njk5Mzcw", "avatar_url": "https://avatars0.githubusercontent.com/u/19699370?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jon-e-barker", "html_url": "https://github.com/jon-e-barker", "followers_url": "https://api.github.com/users/jon-e-barker/followers", "following_url": "https://api.github.com/users/jon-e-barker/following{/other_user}", "gists_url": "https://api.github.com/users/jon-e-barker/gists{/gist_id}", "starred_url": "https://api.github.com/users/jon-e-barker/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jon-e-barker/subscriptions", "organizations_url": "https://api.github.com/users/jon-e-barker/orgs", "repos_url": "https://api.github.com/users/jon-e-barker/repos", "events_url": "https://api.github.com/users/jon-e-barker/events{/privacy}", "received_events_url": "https://api.github.com/users/jon-e-barker/received_events", "type": "User", "site_admin": false}, "created_at": "2017-11-05T21:25:27Z", "updated_at": "2017-11-06T14:06:23Z", "author_association": "NONE", "body_html": "<p>With <code>_all_functions</code> in there I get the following error <code>RuntimeError: Trying to register second function under name Col2Im in THNNFunctionBackend</code></p>\n<p>I will certainly squash the commits before it's ready for merge - not sure who does the merging.</p>\n<p>Bad news though: I've found some failing test cases for <code>col2im</code> - if the <code>kernel_size</code> is smaller than the input spatial dimensions then the <code>im2col</code> results are correct but the reversal via <code>col2im</code> is incorrect.  The shape of the reversal output is correct, but not all the values are.  I'm trying to track down the problem now.</p>\n<p><strong>Update</strong>: There were no failing tests, it was a misunderstanding on my part of the correct behavior.  In cases where the <code>im2col</code> output is produced via a sliding window with overlap then <code>col2im</code> is not expected to be it's inverse.  So all is well and I believe this is ready to merge.</p>", "body_text": "With _all_functions in there I get the following error RuntimeError: Trying to register second function under name Col2Im in THNNFunctionBackend\nI will certainly squash the commits before it's ready for merge - not sure who does the merging.\nBad news though: I've found some failing test cases for col2im - if the kernel_size is smaller than the input spatial dimensions then the im2col results are correct but the reversal via col2im is incorrect.  The shape of the reversal output is correct, but not all the values are.  I'm trying to track down the problem now.\nUpdate: There were no failing tests, it was a misunderstanding on my part of the correct behavior.  In cases where the im2col output is produced via a sliding window with overlap then col2im is not expected to be it's inverse.  So all is well and I believe this is ready to merge.", "body": "With `_all_functions` in there I get the following error `RuntimeError: Trying to register second function under name Col2Im in THNNFunctionBackend`\r\n\r\nI will certainly squash the commits before it's ready for merge - not sure who does the merging.\r\n\r\nBad news though: I've found some failing test cases for `col2im` - if the `kernel_size` is smaller than the input spatial dimensions then the `im2col` results are correct but the reversal via `col2im` is incorrect.  The shape of the reversal output is correct, but not all the values are.  I'm trying to track down the problem now.\r\n\r\n**Update**: There were no failing tests, it was a misunderstanding on my part of the correct behavior.  In cases where the `im2col` output is produced via a sliding window with overlap then `col2im` is not expected to be it's inverse.  So all is well and I believe this is ready to merge. "}