{"url": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/136166536", "pull_request_review_id": 59667912, "id": 136166536, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEzNjE2NjUzNg==", "diff_hunk": "@@ -1192,3 +1191,6 @@ def normalize(input, p=2, dim=1, eps=1e-12):\n         eps (float): small value to avoid division by zero. Default: 1e-12\n     \"\"\"\n     return input / input.norm(p, dim, True).clamp(min=eps).expand_as(input)\n+\n+def im2col(input, kH, kW, dH, dW, padH, padW, sH, sW):", "path": "torch/nn/functional.py", "position": null, "original_position": 13, "commit_id": "529d931a13ffc07d57b0da544adf5eef96a501d8", "original_commit_id": "ed245b02214199ae58ccfdcae2566d9ee2c6e213", "user": {"login": "apaszke", "id": 4583066, "node_id": "MDQ6VXNlcjQ1ODMwNjY=", "avatar_url": "https://avatars3.githubusercontent.com/u/4583066?v=4", "gravatar_id": "", "url": "https://api.github.com/users/apaszke", "html_url": "https://github.com/apaszke", "followers_url": "https://api.github.com/users/apaszke/followers", "following_url": "https://api.github.com/users/apaszke/following{/other_user}", "gists_url": "https://api.github.com/users/apaszke/gists{/gist_id}", "starred_url": "https://api.github.com/users/apaszke/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/apaszke/subscriptions", "organizations_url": "https://api.github.com/users/apaszke/orgs", "repos_url": "https://api.github.com/users/apaszke/repos", "events_url": "https://api.github.com/users/apaszke/events{/privacy}", "received_events_url": "https://api.github.com/users/apaszke/received_events", "type": "User", "site_admin": false}, "body": "It would be nicer to use the same param names we use for all Conv functions + accept scalars or tuples for `kernel_size`, `stride`, etc. I'd also change this function to `unfold` and make it work for arbitrary number of dims (expect `len(kernel_size) + 2` dims). it can raise an error for `len(kernel_size) != 2` for now", "created_at": "2017-08-30T19:27:30Z", "updated_at": "2018-11-23T15:34:31Z", "html_url": "https://github.com/pytorch/pytorch/pull/2580#discussion_r136166536", "pull_request_url": "https://api.github.com/repos/pytorch/pytorch/pulls/2580", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/136166536"}, "html": {"href": "https://github.com/pytorch/pytorch/pull/2580#discussion_r136166536"}, "pull_request": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/2580"}}, "body_html": "<p>It would be nicer to use the same param names we use for all Conv functions + accept scalars or tuples for <code>kernel_size</code>, <code>stride</code>, etc. I'd also change this function to <code>unfold</code> and make it work for arbitrary number of dims (expect <code>len(kernel_size) + 2</code> dims). it can raise an error for <code>len(kernel_size) != 2</code> for now</p>", "body_text": "It would be nicer to use the same param names we use for all Conv functions + accept scalars or tuples for kernel_size, stride, etc. I'd also change this function to unfold and make it work for arbitrary number of dims (expect len(kernel_size) + 2 dims). it can raise an error for len(kernel_size) != 2 for now"}