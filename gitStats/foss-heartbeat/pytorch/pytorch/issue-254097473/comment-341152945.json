{"url": "https://api.github.com/repos/pytorch/pytorch/issues/comments/341152945", "html_url": "https://github.com/pytorch/pytorch/pull/2580#issuecomment-341152945", "issue_url": "https://api.github.com/repos/pytorch/pytorch/issues/2580", "id": 341152945, "node_id": "MDEyOklzc3VlQ29tbWVudDM0MTE1Mjk0NQ==", "user": {"login": "lantiga", "id": 191033, "node_id": "MDQ6VXNlcjE5MTAzMw==", "avatar_url": "https://avatars2.githubusercontent.com/u/191033?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lantiga", "html_url": "https://github.com/lantiga", "followers_url": "https://api.github.com/users/lantiga/followers", "following_url": "https://api.github.com/users/lantiga/following{/other_user}", "gists_url": "https://api.github.com/users/lantiga/gists{/gist_id}", "starred_url": "https://api.github.com/users/lantiga/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lantiga/subscriptions", "organizations_url": "https://api.github.com/users/lantiga/orgs", "repos_url": "https://api.github.com/users/lantiga/repos", "events_url": "https://api.github.com/users/lantiga/events{/privacy}", "received_events_url": "https://api.github.com/users/lantiga/received_events", "type": "User", "site_admin": false}, "created_at": "2017-11-01T16:07:28Z", "updated_at": "2017-11-01T16:07:28Z", "author_association": "COLLABORATOR", "body_html": "<p>@jbarker-nvidia I just pushed the CPU im2col and col2im to a branch: <a href=\"https://github.com/lantiga/pytorch/tree/im2col_cpu\">https://github.com/lantiga/pytorch/tree/im2col_cpu</a><br>\nFeel free to pull from there.</p>\n<p>Quick test:</p>\n<div class=\"highlight highlight-source-python\"><pre><span class=\"pl-k\">import</span> torch\n\n<span class=\"pl-k\">from</span> torch.nn.functional <span class=\"pl-k\">import</span> im2col, col2im\n<span class=\"pl-k\">from</span> torch.autograd <span class=\"pl-k\">import</span> Variable\n\nkernel_size <span class=\"pl-k\">=</span> <span class=\"pl-c1\">3</span>\npadding <span class=\"pl-k\">=</span> <span class=\"pl-c1\">1</span>\n\nsrc <span class=\"pl-k\">=</span> Variable(torch.randn(<span class=\"pl-c1\">1</span>,<span class=\"pl-c1\">3</span>,<span class=\"pl-c1\">3</span>))\n\ndst <span class=\"pl-k\">=</span> im2col(src, kernel_size, <span class=\"pl-v\">padding</span><span class=\"pl-k\">=</span><span class=\"pl-c1\">1</span>)\n\n<span class=\"pl-c1\">print</span>(src)\n<span class=\"pl-c1\">print</span>(dst)\n\ndst[:<span class=\"pl-c1\">4</span>] <span class=\"pl-k\">=</span> <span class=\"pl-c1\">0</span>\ndst[<span class=\"pl-c1\">5</span>:] <span class=\"pl-k\">=</span> <span class=\"pl-c1\">0</span>\n\nback <span class=\"pl-k\">=</span> col2im(dst, (<span class=\"pl-c1\">3</span>, <span class=\"pl-c1\">3</span>), kernel_size, <span class=\"pl-v\">padding</span><span class=\"pl-k\">=</span><span class=\"pl-c1\">1</span>)\n\n<span class=\"pl-c1\">print</span>(back)\n<span class=\"pl-c1\">print</span>(src <span class=\"pl-k\">-</span> back)</pre></div>\n<p>gives</p>\n<pre><code>Variable containing:\n(0 ,0 ,.,.) = \n  0.4297  1.3279 -0.6300\n -0.7715 -1.5452  0.9048\n  0.2682  0.5369 -1.4909\n[torch.FloatTensor of size 1x1x3x3]\n\nVariable containing:\n 0.0000  0.0000  0.0000  0.0000  0.4297  1.3279  0.0000 -0.7715 -1.5452\n 0.0000  0.0000  0.0000  0.4297  1.3279 -0.6300 -0.7715 -1.5452  0.9048\n 0.0000  0.0000  0.0000  1.3279 -0.6300  0.0000 -1.5452  0.9048  0.0000\n 0.0000  0.4297  1.3279  0.0000 -0.7715 -1.5452  0.0000  0.2682  0.5369\n 0.4297  1.3279 -0.6300 -0.7715 -1.5452  0.9048  0.2682  0.5369 -1.4909\n 1.3279 -0.6300  0.0000 -1.5452  0.9048  0.0000  0.5369 -1.4909  0.0000\n 0.0000 -0.7715 -1.5452  0.0000  0.2682  0.5369  0.0000  0.0000  0.0000\n-0.7715 -1.5452  0.9048  0.2682  0.5369 -1.4909  0.0000  0.0000  0.0000\n-1.5452  0.9048  0.0000  0.5369 -1.4909  0.0000  0.0000  0.0000  0.0000\n[torch.FloatTensor of size 9x9]\n\nVariable containing:\n(0 ,.,.) = \n  0.4297  1.3279 -0.6300\n -0.7715 -1.5452  0.9048\n  0.2682  0.5369 -1.4909\n[torch.FloatTensor of size 1x3x3]\n\nVariable containing:\n(0 ,0 ,.,.) = \n  0  0  0\n  0  0  0\n  0  0  0\n[torch.FloatTensor of size 1x1x3x3]\n</code></pre>\n<p>I have a few changes I'd like to suggest on the <code>nn</code> side, but I see you're still working on it. For now I just changed <code>im2col</code> and <code>col2im</code> in <code>functional.py</code>.</p>\n<p>Please let me know when you're done and I'll be happy to review.</p>\n<p>Thanks!</p>", "body_text": "@jbarker-nvidia I just pushed the CPU im2col and col2im to a branch: https://github.com/lantiga/pytorch/tree/im2col_cpu\nFeel free to pull from there.\nQuick test:\nimport torch\n\nfrom torch.nn.functional import im2col, col2im\nfrom torch.autograd import Variable\n\nkernel_size = 3\npadding = 1\n\nsrc = Variable(torch.randn(1,3,3))\n\ndst = im2col(src, kernel_size, padding=1)\n\nprint(src)\nprint(dst)\n\ndst[:4] = 0\ndst[5:] = 0\n\nback = col2im(dst, (3, 3), kernel_size, padding=1)\n\nprint(back)\nprint(src - back)\ngives\nVariable containing:\n(0 ,0 ,.,.) = \n  0.4297  1.3279 -0.6300\n -0.7715 -1.5452  0.9048\n  0.2682  0.5369 -1.4909\n[torch.FloatTensor of size 1x1x3x3]\n\nVariable containing:\n 0.0000  0.0000  0.0000  0.0000  0.4297  1.3279  0.0000 -0.7715 -1.5452\n 0.0000  0.0000  0.0000  0.4297  1.3279 -0.6300 -0.7715 -1.5452  0.9048\n 0.0000  0.0000  0.0000  1.3279 -0.6300  0.0000 -1.5452  0.9048  0.0000\n 0.0000  0.4297  1.3279  0.0000 -0.7715 -1.5452  0.0000  0.2682  0.5369\n 0.4297  1.3279 -0.6300 -0.7715 -1.5452  0.9048  0.2682  0.5369 -1.4909\n 1.3279 -0.6300  0.0000 -1.5452  0.9048  0.0000  0.5369 -1.4909  0.0000\n 0.0000 -0.7715 -1.5452  0.0000  0.2682  0.5369  0.0000  0.0000  0.0000\n-0.7715 -1.5452  0.9048  0.2682  0.5369 -1.4909  0.0000  0.0000  0.0000\n-1.5452  0.9048  0.0000  0.5369 -1.4909  0.0000  0.0000  0.0000  0.0000\n[torch.FloatTensor of size 9x9]\n\nVariable containing:\n(0 ,.,.) = \n  0.4297  1.3279 -0.6300\n -0.7715 -1.5452  0.9048\n  0.2682  0.5369 -1.4909\n[torch.FloatTensor of size 1x3x3]\n\nVariable containing:\n(0 ,0 ,.,.) = \n  0  0  0\n  0  0  0\n  0  0  0\n[torch.FloatTensor of size 1x1x3x3]\n\nI have a few changes I'd like to suggest on the nn side, but I see you're still working on it. For now I just changed im2col and col2im in functional.py.\nPlease let me know when you're done and I'll be happy to review.\nThanks!", "body": "@jbarker-nvidia I just pushed the CPU im2col and col2im to a branch: https://github.com/lantiga/pytorch/tree/im2col_cpu\r\nFeel free to pull from there.\r\n\r\nQuick test:\r\n\r\n```python\r\nimport torch\r\n\r\nfrom torch.nn.functional import im2col, col2im\r\nfrom torch.autograd import Variable\r\n\r\nkernel_size = 3\r\npadding = 1\r\n\r\nsrc = Variable(torch.randn(1,3,3))\r\n\r\ndst = im2col(src, kernel_size, padding=1)\r\n\r\nprint(src)\r\nprint(dst)\r\n\r\ndst[:4] = 0\r\ndst[5:] = 0\r\n\r\nback = col2im(dst, (3, 3), kernel_size, padding=1)\r\n\r\nprint(back)\r\nprint(src - back)\r\n```\r\n\r\ngives\r\n\r\n```\r\nVariable containing:\r\n(0 ,0 ,.,.) = \r\n  0.4297  1.3279 -0.6300\r\n -0.7715 -1.5452  0.9048\r\n  0.2682  0.5369 -1.4909\r\n[torch.FloatTensor of size 1x1x3x3]\r\n\r\nVariable containing:\r\n 0.0000  0.0000  0.0000  0.0000  0.4297  1.3279  0.0000 -0.7715 -1.5452\r\n 0.0000  0.0000  0.0000  0.4297  1.3279 -0.6300 -0.7715 -1.5452  0.9048\r\n 0.0000  0.0000  0.0000  1.3279 -0.6300  0.0000 -1.5452  0.9048  0.0000\r\n 0.0000  0.4297  1.3279  0.0000 -0.7715 -1.5452  0.0000  0.2682  0.5369\r\n 0.4297  1.3279 -0.6300 -0.7715 -1.5452  0.9048  0.2682  0.5369 -1.4909\r\n 1.3279 -0.6300  0.0000 -1.5452  0.9048  0.0000  0.5369 -1.4909  0.0000\r\n 0.0000 -0.7715 -1.5452  0.0000  0.2682  0.5369  0.0000  0.0000  0.0000\r\n-0.7715 -1.5452  0.9048  0.2682  0.5369 -1.4909  0.0000  0.0000  0.0000\r\n-1.5452  0.9048  0.0000  0.5369 -1.4909  0.0000  0.0000  0.0000  0.0000\r\n[torch.FloatTensor of size 9x9]\r\n\r\nVariable containing:\r\n(0 ,.,.) = \r\n  0.4297  1.3279 -0.6300\r\n -0.7715 -1.5452  0.9048\r\n  0.2682  0.5369 -1.4909\r\n[torch.FloatTensor of size 1x3x3]\r\n\r\nVariable containing:\r\n(0 ,0 ,.,.) = \r\n  0  0  0\r\n  0  0  0\r\n  0  0  0\r\n[torch.FloatTensor of size 1x1x3x3]\r\n```\r\n\r\nI have a few changes I'd like to suggest on the `nn` side, but I see you're still working on it. For now I just changed `im2col` and `col2im` in `functional.py`.\r\n\r\nPlease let me know when you're done and I'll be happy to review.\r\n\r\nThanks!"}