{"url": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/162451992", "pull_request_review_id": 89911852, "id": 162451992, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE2MjQ1MTk5Mg==", "diff_hunk": "@@ -0,0 +1,116 @@\n+#ifndef THC_GENERIC_FILE\n+#define THC_GENERIC_FILE \"generic/Im2Col.cu\"\n+#else\n+\n+static inline void THNN_(Im2Col_shapeCheck)(\n+                         THCState *state,\n+                         THCTensor *input,\n+                         THCTensor *gradOutput,\n+                         int kH, int kW, int dH, int dW,\n+                         int padH, int padW, int sH, int sW) {\n+\n+  THArgCheck(kW > 0 && kH > 0, 4,\n+             \"kernel size should be greater than zero, but got kH: %d kW: %d\", kH, kW);\n+  THArgCheck(dW > 0 && dH > 0, 6,\n+             \"dilation should be greater than zero, but got dH: %d dW: %d\", dH, dW);\n+  THArgCheck(padW >= 0 && padH >= 0, 8,\n+             \"padding should be non-negative, but got padH: %d padW: %d\", padH, padW);\n+  THArgCheck(sW > 0 && sH > 0, 10,\n+             \"stride should be greater than zero, but got sH: %d sW: %d\", sH, sW);\n+\n+  int ndim = THCTensor_(nDimension)(state, input);\n+  THCUNN_argCheck(state, ndim == 3 || ndim == 4, 2, input,\n+                  \"3D or 4D input tensor expected but got: %s\");\n+\n+  int dim_batch = 0;\n+  if (ndim == 3) {\n+    dim_batch = -1;\n+  }\n+  int nInputPlane  = THCTensor_(size)(state, input, dim_batch + 1);\n+  int inputHeight  = THCTensor_(size)(state, input, dim_batch + 2);\n+  int inputWidth   = THCTensor_(size)(state, input, dim_batch + 3);\n+  int outputHeight = (inputHeight + 2 * padH - (dH * (kH - 1) + 1)) / sH + 1;\n+  int outputWidth  = (inputWidth + 2 * padW - (dW * (kW - 1) + 1)) / sW + 1;\n+  int nOutputPlane = nInputPlane * kW * kH;\n+  int outputLength = outputHeight * outputWidth;\n+\n+  if (outputWidth < 1 || outputHeight < 1) {\n+    THError(\"Given input size: (%d x %d x %d). \"\n+            \"Calculated output size: (%d x %d). Output size is too small\",\n+            nInputPlane, inputHeight, inputWidth, nOutputPlane, outputLength);", "path": "aten/src/THCUNN/generic/Im2Col.cu", "position": 40, "original_position": 40, "commit_id": "529d931a13ffc07d57b0da544adf5eef96a501d8", "original_commit_id": "529d931a13ffc07d57b0da544adf5eef96a501d8", "user": {"login": "zou3519", "id": 5652049, "node_id": "MDQ6VXNlcjU2NTIwNDk=", "avatar_url": "https://avatars3.githubusercontent.com/u/5652049?v=4", "gravatar_id": "", "url": "https://api.github.com/users/zou3519", "html_url": "https://github.com/zou3519", "followers_url": "https://api.github.com/users/zou3519/followers", "following_url": "https://api.github.com/users/zou3519/following{/other_user}", "gists_url": "https://api.github.com/users/zou3519/gists{/gist_id}", "starred_url": "https://api.github.com/users/zou3519/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/zou3519/subscriptions", "organizations_url": "https://api.github.com/users/zou3519/orgs", "repos_url": "https://api.github.com/users/zou3519/repos", "events_url": "https://api.github.com/users/zou3519/events{/privacy}", "received_events_url": "https://api.github.com/users/zou3519/received_events", "type": "User", "site_admin": false}, "body": "Same as above, `%d` doesn't fit some of these.", "created_at": "2018-01-18T19:55:35Z", "updated_at": "2018-11-23T15:38:18Z", "html_url": "https://github.com/pytorch/pytorch/pull/2580#discussion_r162451992", "pull_request_url": "https://api.github.com/repos/pytorch/pytorch/pulls/2580", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/162451992"}, "html": {"href": "https://github.com/pytorch/pytorch/pull/2580#discussion_r162451992"}, "pull_request": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/2580"}}, "body_html": "<p>Same as above, <code>%d</code> doesn't fit some of these.</p>", "body_text": "Same as above, %d doesn't fit some of these."}