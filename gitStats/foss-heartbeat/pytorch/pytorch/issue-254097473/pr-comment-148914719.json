{"url": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/148914719", "pull_request_review_id": 74236661, "id": 148914719, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE0ODkxNDcxOQ==", "diff_hunk": "@@ -0,0 +1,45 @@\n+from torch.autograd.function import Function, once_differentiable\n+from torch._thnn import type2backend\n+\n+from . import _all_functions\n+\n+class Im2Col(Function):\n+\n+    @staticmethod\n+    def forward(ctx, input, kernel_size, dilation, padding, stride):\n+\n+        ctx.kernel_size = kernel_size\n+        ctx.dilation = dilation\n+        ctx.padding = padding\n+        ctx.stride = stride\n+\n+        ctx.save_for_backward(input)\n+\n+        ctx._backend = type2backend[type(input)]\n+\n+        output = input.new()\n+\n+        ctx._backend.Im2Col_updateOutput(ctx._backend.library_state,\n+                                         input, output,\n+                                         kernel_size[0], kernel_size[1],\n+                                         dilation[0], dilation[1],\n+                                         padding[0], padding[1],\n+                                         stride[0], stride[1])\n+        return output\n+\n+    @staticmethod\n+    @once_differentiable\n+    def backward(ctx, grad_output):\n+\n+        input, = ctx.saved_tensors\n+\n+        grad_input = grad_output.new()\n+\n+        ctx._backend.Im2Col_updateGradInput(ctx._backend.library_state,\n+                                            input, grad_output,\n+                                            grad_input,\n+                                            ctx.kernel_size[0], ctx.kernel_size[1],\n+                                            ctx.dilation[0], ctx.dilation[1],\n+                                            ctx.padding[0], ctx.padding[1],\n+                                            ctx.stride[0], ctx.stride[1])\n+        return grad_input, None, None, None, None", "path": "torch/nn/_functions/thnn/unfold.py", "position": null, "original_position": 45, "commit_id": "529d931a13ffc07d57b0da544adf5eef96a501d8", "original_commit_id": "217e47622aae90e32e000470926271b5243666c1", "user": {"login": "lantiga", "id": 191033, "node_id": "MDQ6VXNlcjE5MTAzMw==", "avatar_url": "https://avatars2.githubusercontent.com/u/191033?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lantiga", "html_url": "https://github.com/lantiga", "followers_url": "https://api.github.com/users/lantiga/followers", "following_url": "https://api.github.com/users/lantiga/following{/other_user}", "gists_url": "https://api.github.com/users/lantiga/gists{/gist_id}", "starred_url": "https://api.github.com/users/lantiga/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lantiga/subscriptions", "organizations_url": "https://api.github.com/users/lantiga/orgs", "repos_url": "https://api.github.com/users/lantiga/repos", "events_url": "https://api.github.com/users/lantiga/events{/privacy}", "received_events_url": "https://api.github.com/users/lantiga/received_events", "type": "User", "site_admin": false}, "body": "Should add:\r\n```\r\n__all_functions.append(Im2Col)\r\n```", "created_at": "2017-11-03T23:54:31Z", "updated_at": "2018-11-23T15:35:59Z", "html_url": "https://github.com/pytorch/pytorch/pull/2580#discussion_r148914719", "pull_request_url": "https://api.github.com/repos/pytorch/pytorch/pulls/2580", "author_association": "COLLABORATOR", "_links": {"self": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/148914719"}, "html": {"href": "https://github.com/pytorch/pytorch/pull/2580#discussion_r148914719"}, "pull_request": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/2580"}}, "body_html": "<p>Should add:</p>\n<pre><code>__all_functions.append(Im2Col)\n</code></pre>", "body_text": "Should add:\n__all_functions.append(Im2Col)"}