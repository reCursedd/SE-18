{"url": "https://api.github.com/repos/pytorch/pytorch/issues/8378", "repository_url": "https://api.github.com/repos/pytorch/pytorch", "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/8378/labels{/name}", "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/8378/comments", "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/8378/events", "html_url": "https://github.com/pytorch/pytorch/issues/8378", "id": 331646148, "node_id": "MDU6SXNzdWUzMzE2NDYxNDg=", "number": 8378, "title": "torch.where produces confusing error messages on cpu/cuda mismatches", "user": {"login": "cle-ros", "id": 6156107, "node_id": "MDQ6VXNlcjYxNTYxMDc=", "avatar_url": "https://avatars2.githubusercontent.com/u/6156107?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cle-ros", "html_url": "https://github.com/cle-ros", "followers_url": "https://api.github.com/users/cle-ros/followers", "following_url": "https://api.github.com/users/cle-ros/following{/other_user}", "gists_url": "https://api.github.com/users/cle-ros/gists{/gist_id}", "starred_url": "https://api.github.com/users/cle-ros/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cle-ros/subscriptions", "organizations_url": "https://api.github.com/users/cle-ros/orgs", "repos_url": "https://api.github.com/users/cle-ros/repos", "events_url": "https://api.github.com/users/cle-ros/events{/privacy}", "received_events_url": "https://api.github.com/users/cle-ros/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2018-06-12T15:43:59Z", "updated_at": "2018-06-12T18:05:18Z", "closed_at": "2018-06-12T18:05:18Z", "author_association": "NONE", "body_html": "<h2>Issue description</h2>\n<p>The error messages for <code>torch.where</code> are mildly confusing when there are cuda/cpu mismatches, as many state \"expect CPU but got CPU\" or \"expected CUDA but got CUDA\".</p>\n<h2>Code example</h2>\n<div class=\"highlight highlight-source-python\"><pre><span class=\"pl-k\">import</span> torch\ndecider <span class=\"pl-k\">=</span> torch.randint(<span class=\"pl-c1\">0</span>, <span class=\"pl-c1\">2</span>, <span class=\"pl-v\">size</span><span class=\"pl-k\">=</span>(<span class=\"pl-c1\">20</span>, <span class=\"pl-c1\">2</span>)).byte()\nfirst_opt <span class=\"pl-k\">=</span> torch.randn(<span class=\"pl-v\">size</span><span class=\"pl-k\">=</span>(<span class=\"pl-c1\">20</span>, <span class=\"pl-c1\">2</span>))\nsecond_opt <span class=\"pl-k\">=</span> torch.randn(<span class=\"pl-v\">size</span><span class=\"pl-k\">=</span>(<span class=\"pl-c1\">20</span>, <span class=\"pl-c1\">2</span>))\nresult <span class=\"pl-k\">=</span> torch.where(decider, first_opt, second_opt)  <span class=\"pl-c\"><span class=\"pl-c\">#</span> works, of course</span>\n\nresult <span class=\"pl-k\">=</span> torch.where(decider.cuda(), first_opt, second_opt)  \n<span class=\"pl-c\"><span class=\"pl-c\">#</span> RuntimeError: Expected tensor to have CUDA Backend, but got tensor with CUDA Backend (while checking arguments for CPU_tensor_apply4)</span>\nresult <span class=\"pl-k\">=</span> torch.where(decider, first_opt.cuda(), second_opt)  \n<span class=\"pl-c\"><span class=\"pl-c\">#</span> RuntimeError: Expected tensor to have CPU Backend, but got tensor with CPU Backend (while checking arguments for CUDA_tensor_apply4)</span>\nresult <span class=\"pl-k\">=</span> torch.where(decider, first_opt, second_opt.cuda())  \n<span class=\"pl-c\"><span class=\"pl-c\">#</span> RuntimeError: Expected tensor to have CUDA Backend, but got tensor with CUDA Backend (while checking arguments for CPU_tensor_apply4)</span></pre></div>\n<h2>System Info</h2>\n<p>Pytorch installed vida conda:<br>\n<code>pytorch                   0.4.0           py36_cuda9.1.85_cudnn7.1.2_1  [cuda91]  pytorch</code></p>", "body_text": "Issue description\nThe error messages for torch.where are mildly confusing when there are cuda/cpu mismatches, as many state \"expect CPU but got CPU\" or \"expected CUDA but got CUDA\".\nCode example\nimport torch\ndecider = torch.randint(0, 2, size=(20, 2)).byte()\nfirst_opt = torch.randn(size=(20, 2))\nsecond_opt = torch.randn(size=(20, 2))\nresult = torch.where(decider, first_opt, second_opt)  # works, of course\n\nresult = torch.where(decider.cuda(), first_opt, second_opt)  \n# RuntimeError: Expected tensor to have CUDA Backend, but got tensor with CUDA Backend (while checking arguments for CPU_tensor_apply4)\nresult = torch.where(decider, first_opt.cuda(), second_opt)  \n# RuntimeError: Expected tensor to have CPU Backend, but got tensor with CPU Backend (while checking arguments for CUDA_tensor_apply4)\nresult = torch.where(decider, first_opt, second_opt.cuda())  \n# RuntimeError: Expected tensor to have CUDA Backend, but got tensor with CUDA Backend (while checking arguments for CPU_tensor_apply4)\nSystem Info\nPytorch installed vida conda:\npytorch                   0.4.0           py36_cuda9.1.85_cudnn7.1.2_1  [cuda91]  pytorch", "body": "## Issue description\r\n\r\nThe error messages for `torch.where` are mildly confusing when there are cuda/cpu mismatches, as many state \"expect CPU but got CPU\" or \"expected CUDA but got CUDA\".\r\n\r\n## Code example\r\n\r\n```python\r\nimport torch\r\ndecider = torch.randint(0, 2, size=(20, 2)).byte()\r\nfirst_opt = torch.randn(size=(20, 2))\r\nsecond_opt = torch.randn(size=(20, 2))\r\nresult = torch.where(decider, first_opt, second_opt)  # works, of course\r\n\r\nresult = torch.where(decider.cuda(), first_opt, second_opt)  \r\n# RuntimeError: Expected tensor to have CUDA Backend, but got tensor with CUDA Backend (while checking arguments for CPU_tensor_apply4)\r\nresult = torch.where(decider, first_opt.cuda(), second_opt)  \r\n# RuntimeError: Expected tensor to have CPU Backend, but got tensor with CPU Backend (while checking arguments for CUDA_tensor_apply4)\r\nresult = torch.where(decider, first_opt, second_opt.cuda())  \r\n# RuntimeError: Expected tensor to have CUDA Backend, but got tensor with CUDA Backend (while checking arguments for CPU_tensor_apply4)\r\n```\r\n## System Info\r\nPytorch installed vida conda:\r\n`pytorch                   0.4.0           py36_cuda9.1.85_cudnn7.1.2_1  [cuda91]  pytorch`\r\n"}