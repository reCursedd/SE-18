{"url": "https://api.github.com/repos/pytorch/pytorch/issues/4793", "repository_url": "https://api.github.com/repos/pytorch/pytorch", "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/4793/labels{/name}", "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/4793/comments", "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/4793/events", "html_url": "https://github.com/pytorch/pytorch/issues/4793", "id": 290676141, "node_id": "MDU6SXNzdWUyOTA2NzYxNDE=", "number": 4793, "title": "Support Pip / Pipenv Without Conda", "user": {"login": "orokusaki", "id": 97720, "node_id": "MDQ6VXNlcjk3NzIw", "avatar_url": "https://avatars1.githubusercontent.com/u/97720?v=4", "gravatar_id": "", "url": "https://api.github.com/users/orokusaki", "html_url": "https://github.com/orokusaki", "followers_url": "https://api.github.com/users/orokusaki/followers", "following_url": "https://api.github.com/users/orokusaki/following{/other_user}", "gists_url": "https://api.github.com/users/orokusaki/gists{/gist_id}", "starred_url": "https://api.github.com/users/orokusaki/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/orokusaki/subscriptions", "organizations_url": "https://api.github.com/users/orokusaki/orgs", "repos_url": "https://api.github.com/users/orokusaki/repos", "events_url": "https://api.github.com/users/orokusaki/events{/privacy}", "received_events_url": "https://api.github.com/users/orokusaki/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 8, "created_at": "2018-01-23T01:23:59Z", "updated_at": "2018-02-28T18:43:45Z", "closed_at": null, "author_association": "NONE", "body_html": "<p>The tagline of PyTorch is:</p>\n<blockquote>\n<p>PyTorch is a deep learning framework that puts Python first.</p>\n</blockquote>\n<p>Pip and Pipenv are the quintessential Python package manager tools for Python...</p>\n<p>However, upon following the Pip (Python 3.6, OS X) instructions on <a href=\"http://pytorch.org/\" rel=\"nofollow\">http://pytorch.org/</a>, I was met with an error informing me I needed Conda. If I don't intend on using R, Fortran, etc. directly in my app, is Conda still an intrinsic requirement of projects like PyTorch that e.g., use Fortran, or could PyTorch be made to install via Pip alone?</p>\n<p>If there are low-level system requirements, I (and I think I speak for more than myself) don't mind e.g., brew installing CUDA. IOW, I'd like to be told \"look, you need to install Go and CUDA to use this library\", and then be given the choice of how I want to install those low-level system requirements and / or tools. Anything else could then be easily installed via e.g., Pipenv, rather than having to install some monolithic system like Conda, which is the antithesis of <code>Python first</code>.</p>\n<pre><code>import this\n</code></pre>\n<blockquote>\n<p>...<br>\nThere should be one-- and preferably only one --obvious way to do it.<br>\n...<br>\nIf the implementation is hard to explain, it's a bad idea.<br>\n...</p>\n</blockquote>", "body_text": "The tagline of PyTorch is:\n\nPyTorch is a deep learning framework that puts Python first.\n\nPip and Pipenv are the quintessential Python package manager tools for Python...\nHowever, upon following the Pip (Python 3.6, OS X) instructions on http://pytorch.org/, I was met with an error informing me I needed Conda. If I don't intend on using R, Fortran, etc. directly in my app, is Conda still an intrinsic requirement of projects like PyTorch that e.g., use Fortran, or could PyTorch be made to install via Pip alone?\nIf there are low-level system requirements, I (and I think I speak for more than myself) don't mind e.g., brew installing CUDA. IOW, I'd like to be told \"look, you need to install Go and CUDA to use this library\", and then be given the choice of how I want to install those low-level system requirements and / or tools. Anything else could then be easily installed via e.g., Pipenv, rather than having to install some monolithic system like Conda, which is the antithesis of Python first.\nimport this\n\n\n...\nThere should be one-- and preferably only one --obvious way to do it.\n...\nIf the implementation is hard to explain, it's a bad idea.\n...", "body": "The tagline of PyTorch is:\r\n\r\n> PyTorch is a deep learning framework that puts Python first.\r\n\r\nPip and Pipenv are the quintessential Python package manager tools for Python...\r\n\r\nHowever, upon following the Pip (Python 3.6, OS X) instructions on http://pytorch.org/, I was met with an error informing me I needed Conda. If I don't intend on using R, Fortran, etc. directly in my app, is Conda still an intrinsic requirement of projects like PyTorch that e.g., use Fortran, or could PyTorch be made to install via Pip alone?\r\n\r\nIf there are low-level system requirements, I (and I think I speak for more than myself) don't mind e.g., brew installing CUDA. IOW, I'd like to be told \"look, you need to install Go and CUDA to use this library\", and then be given the choice of how I want to install those low-level system requirements and / or tools. Anything else could then be easily installed via e.g., Pipenv, rather than having to install some monolithic system like Conda, which is the antithesis of `Python first`.\r\n\r\n    import this\r\n\r\n> ...\r\n> There should be one-- and preferably only one --obvious way to do it.\r\n> ...\r\n> If the implementation is hard to explain, it's a bad idea.\r\n> ..."}