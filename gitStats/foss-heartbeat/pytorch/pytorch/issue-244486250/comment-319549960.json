{"url": "https://api.github.com/repos/pytorch/pytorch/issues/comments/319549960", "html_url": "https://github.com/pytorch/pytorch/issues/2169#issuecomment-319549960", "issue_url": "https://api.github.com/repos/pytorch/pytorch/issues/2169", "id": 319549960, "node_id": "MDEyOklzc3VlQ29tbWVudDMxOTU0OTk2MA==", "user": {"login": "soumith", "id": 1310570, "node_id": "MDQ6VXNlcjEzMTA1NzA=", "avatar_url": "https://avatars0.githubusercontent.com/u/1310570?v=4", "gravatar_id": "", "url": "https://api.github.com/users/soumith", "html_url": "https://github.com/soumith", "followers_url": "https://api.github.com/users/soumith/followers", "following_url": "https://api.github.com/users/soumith/following{/other_user}", "gists_url": "https://api.github.com/users/soumith/gists{/gist_id}", "starred_url": "https://api.github.com/users/soumith/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/soumith/subscriptions", "organizations_url": "https://api.github.com/users/soumith/orgs", "repos_url": "https://api.github.com/users/soumith/repos", "events_url": "https://api.github.com/users/soumith/events{/privacy}", "received_events_url": "https://api.github.com/users/soumith/received_events", "type": "User", "site_admin": false}, "created_at": "2017-08-02T02:25:14Z", "updated_at": "2017-08-02T02:25:14Z", "author_association": "MEMBER", "body_html": "<p>EmbeddingBag should support 2D Tensors as <code>inputs</code> as docs mention.<br>\nWhen <code>inputs</code> is 2D, <code>offsets</code> is not given by the user.<br>\nThen the code here: <div class=\"border rounded-1 my-2\">\n  <div class=\"f6 px-3 py-2 lh-condensed border-bottom bg-gray-light\">\n    <p class=\"mb-0 text-bold\">\n      <a href=\"https://github.com/pytorch/pytorch/blob/f3f478960e35920affebe7c2ddc00f6edd768d2b/torch/nn/modules/sparse.py#L194-L201\">pytorch/torch/nn/modules/sparse.py</a>\n    </p>\n    <p class=\"mb-0 text-gray-light\">\n        Lines 194 to 201\n      in\n      <a data-pjax=\"true\" class=\"commit-tease-sha\" href=\"/pytorch/pytorch/commit/f3f478960e35920affebe7c2ddc00f6edd768d2b\">f3f4789</a>\n    </p>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper blob-wrapper-embedded data\">\n    <table class=\"highlight tab-size mb-0 js-file-line-container\" data-tab-size=\"8\">\n\n        <tbody><tr class=\"border-0\">\n          <td id=\"L194\" class=\"blob-num border-0 px-3 py-0 bg-white js-line-number\" data-line-number=\"194\"></td>\n          <td id=\"LC194\" class=\"blob-code border-0 px-3 py-0 bg-white blob-code-inner js-file-line\"> <span class=\"pl-k\">if</span> <span class=\"pl-c1\">input</span>.dim() <span class=\"pl-k\">==</span> <span class=\"pl-c1\">2</span>: </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L195\" class=\"blob-num border-0 px-3 py-0 bg-white js-line-number\" data-line-number=\"195\"></td>\n          <td id=\"LC195\" class=\"blob-code border-0 px-3 py-0 bg-white blob-code-inner js-file-line\">     <span class=\"pl-k\">if</span> offsets <span class=\"pl-k\">is</span> <span class=\"pl-k\">not</span> <span class=\"pl-c1\">None</span>: </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L196\" class=\"blob-num border-0 px-3 py-0 bg-white js-line-number\" data-line-number=\"196\"></td>\n          <td id=\"LC196\" class=\"blob-code border-0 px-3 py-0 bg-white blob-code-inner js-file-line\">         <span class=\"pl-k\">raise</span> <span class=\"pl-c1\">ValueError</span>(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>if input is 2D, then offsets has to be None<span class=\"pl-pds\">\"</span></span> </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L197\" class=\"blob-num border-0 px-3 py-0 bg-white js-line-number\" data-line-number=\"197\"></td>\n          <td id=\"LC197\" class=\"blob-code border-0 px-3 py-0 bg-white blob-code-inner js-file-line\">                          <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>, as input is treated is a mini-batch of<span class=\"pl-pds\">\"</span></span> </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L198\" class=\"blob-num border-0 px-3 py-0 bg-white js-line-number\" data-line-number=\"198\"></td>\n          <td id=\"LC198\" class=\"blob-code border-0 px-3 py-0 bg-white blob-code-inner js-file-line\">                          <span class=\"pl-s\"><span class=\"pl-pds\">\"</span> fixed length sequences. However, found <span class=\"pl-pds\">\"</span></span> </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L199\" class=\"blob-num border-0 px-3 py-0 bg-white js-line-number\" data-line-number=\"199\"></td>\n          <td id=\"LC199\" class=\"blob-code border-0 px-3 py-0 bg-white blob-code-inner js-file-line\">                          <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>offsets of type <span class=\"pl-c1\">{}</span><span class=\"pl-pds\">\"</span></span>.format(<span class=\"pl-c1\">type</span>(offsets))) </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L200\" class=\"blob-num border-0 px-3 py-0 bg-white js-line-number\" data-line-number=\"200\"></td>\n          <td id=\"LC200\" class=\"blob-code border-0 px-3 py-0 bg-white blob-code-inner js-file-line\">     <span class=\"pl-k\">else</span>: </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L201\" class=\"blob-num border-0 px-3 py-0 bg-white js-line-number\" data-line-number=\"201\"></td>\n          <td id=\"LC201\" class=\"blob-code border-0 px-3 py-0 bg-white blob-code-inner js-file-line\">         offsets <span class=\"pl-k\">=</span> <span class=\"pl-c1\">input</span>.data.new(<span class=\"pl-c1\">input</span>.size(<span class=\"pl-c1\">0</span>)).fill_(<span class=\"pl-c1\">input</span>.size(<span class=\"pl-c1\">1</span>)) </td>\n        </tr>\n    </tbody></table>\n  </div>\n</div>\n<br>\nis supposed to create an offsets Tensor for you correctly.<br>\nIndeed, as <a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=1218410\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/amrsharaf\">@amrsharaf</a> mentions, this possibly needs to wrapped in a Variable: <div class=\"border rounded-1 my-2\">\n  <div class=\"f6 px-3 py-2 lh-condensed border-bottom bg-gray-light\">\n    <p class=\"mb-0 text-bold\">\n      <a href=\"https://github.com/pytorch/pytorch/blob/f3f478960e35920affebe7c2ddc00f6edd768d2b/torch/nn/modules/sparse.py#L201\">pytorch/torch/nn/modules/sparse.py</a>\n    </p>\n    <p class=\"mb-0 text-gray-light\">\n         Line 201\n      in\n      <a data-pjax=\"true\" class=\"commit-tease-sha\" href=\"/pytorch/pytorch/commit/f3f478960e35920affebe7c2ddc00f6edd768d2b\">f3f4789</a>\n    </p>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper blob-wrapper-embedded data\">\n    <table class=\"highlight tab-size mb-0 js-file-line-container\" data-tab-size=\"8\">\n\n        <tbody><tr class=\"border-0\">\n          <td id=\"L201\" class=\"blob-num border-0 px-3 py-0 bg-white js-line-number\" data-line-number=\"201\"></td>\n          <td id=\"LC201\" class=\"blob-code border-0 px-3 py-0 bg-white blob-code-inner js-file-line\"> offsets <span class=\"pl-k\">=</span> <span class=\"pl-c1\">input</span>.data.new(<span class=\"pl-c1\">input</span>.size(<span class=\"pl-c1\">0</span>)).fill_(<span class=\"pl-c1\">input</span>.size(<span class=\"pl-c1\">1</span>)) </td>\n        </tr>\n    </tbody></table>\n  </div>\n</div>\n and the 1D input Tensor possibly needs to be re-viewed as 1D.</p>", "body_text": "EmbeddingBag should support 2D Tensors as inputs as docs mention.\nWhen inputs is 2D, offsets is not given by the user.\nThen the code here: \n  \n    \n      pytorch/torch/nn/modules/sparse.py\n    \n    \n        Lines 194 to 201\n      in\n      f3f4789\n    \n    \n    \n    \n\n        \n          \n           if input.dim() == 2: \n        \n\n        \n          \n               if offsets is not None: \n        \n\n        \n          \n                   raise ValueError(\"if input is 2D, then offsets has to be None\" \n        \n\n        \n          \n                                    \", as input is treated is a mini-batch of\" \n        \n\n        \n          \n                                    \" fixed length sequences. However, found \" \n        \n\n        \n          \n                                    \"offsets of type {}\".format(type(offsets))) \n        \n\n        \n          \n               else: \n        \n\n        \n          \n                   offsets = input.data.new(input.size(0)).fill_(input.size(1)) \n        \n    \n  \n\n\nis supposed to create an offsets Tensor for you correctly.\nIndeed, as @amrsharaf mentions, this possibly needs to wrapped in a Variable: \n  \n    \n      pytorch/torch/nn/modules/sparse.py\n    \n    \n         Line 201\n      in\n      f3f4789\n    \n    \n    \n    \n\n        \n          \n           offsets = input.data.new(input.size(0)).fill_(input.size(1)) \n        \n    \n  \n\n and the 1D input Tensor possibly needs to be re-viewed as 1D.", "body": "EmbeddingBag should support 2D Tensors as `inputs` as docs mention.\r\nWhen `inputs` is 2D, `offsets` is not given by the user.\r\nThen the code here: https://github.com/pytorch/pytorch/blob/f3f478960e35920affebe7c2ddc00f6edd768d2b/torch/nn/modules/sparse.py#L194-L201\r\nis supposed to create an offsets Tensor for you correctly.\r\nIndeed, as @amrsharaf mentions, this possibly needs to wrapped in a Variable: https://github.com/pytorch/pytorch/blob/f3f478960e35920affebe7c2ddc00f6edd768d2b/torch/nn/modules/sparse.py#L201 and the 1D input Tensor possibly needs to be re-viewed as 1D."}