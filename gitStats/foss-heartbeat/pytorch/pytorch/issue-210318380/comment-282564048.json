{"url": "https://api.github.com/repos/pytorch/pytorch/issues/comments/282564048", "html_url": "https://github.com/pytorch/pytorch/pull/857#issuecomment-282564048", "issue_url": "https://api.github.com/repos/pytorch/pytorch/issues/857", "id": 282564048, "node_id": "MDEyOklzc3VlQ29tbWVudDI4MjU2NDA0OA==", "user": {"login": "fmassa", "id": 9110200, "node_id": "MDQ6VXNlcjkxMTAyMDA=", "avatar_url": "https://avatars2.githubusercontent.com/u/9110200?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fmassa", "html_url": "https://github.com/fmassa", "followers_url": "https://api.github.com/users/fmassa/followers", "following_url": "https://api.github.com/users/fmassa/following{/other_user}", "gists_url": "https://api.github.com/users/fmassa/gists{/gist_id}", "starred_url": "https://api.github.com/users/fmassa/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fmassa/subscriptions", "organizations_url": "https://api.github.com/users/fmassa/orgs", "repos_url": "https://api.github.com/users/fmassa/repos", "events_url": "https://api.github.com/users/fmassa/events{/privacy}", "received_events_url": "https://api.github.com/users/fmassa/received_events", "type": "User", "site_admin": false}, "created_at": "2017-02-26T15:34:54Z", "updated_at": "2017-02-26T15:34:54Z", "author_association": "MEMBER", "body_html": "<p><a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=4953728\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/szagoruyko\">@szagoruyko</a> a <strong>very dirty</strong> hack for this specific case would be to add the code in this PR in <a href=\"https://github.com/pytorch/pytorch/blob/master/torch/lib/THC/generic/THCTensorMathPairwise.cu#L15\">here</a>, by asserting the dimensions of both tensors and that the stride of the 2nd tensor is 0, and calling the underlying cuBLAS routine.<br>\nBut I wonder if we can do something in the pointwise kernels themselves...</p>", "body_text": "@szagoruyko a very dirty hack for this specific case would be to add the code in this PR in here, by asserting the dimensions of both tensors and that the stride of the 2nd tensor is 0, and calling the underlying cuBLAS routine.\nBut I wonder if we can do something in the pointwise kernels themselves...", "body": "@szagoruyko a **very dirty** hack for this specific case would be to add the code in this PR in [here](https://github.com/pytorch/pytorch/blob/master/torch/lib/THC/generic/THCTensorMathPairwise.cu#L15), by asserting the dimensions of both tensors and that the stride of the 2nd tensor is 0, and calling the underlying cuBLAS routine.\r\nBut I wonder if we can do something in the pointwise kernels themselves..."}