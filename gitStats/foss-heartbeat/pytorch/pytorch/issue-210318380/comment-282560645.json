{"url": "https://api.github.com/repos/pytorch/pytorch/issues/comments/282560645", "html_url": "https://github.com/pytorch/pytorch/pull/857#issuecomment-282560645", "issue_url": "https://api.github.com/repos/pytorch/pytorch/issues/857", "id": 282560645, "node_id": "MDEyOklzc3VlQ29tbWVudDI4MjU2MDY0NQ==", "user": {"login": "fmassa", "id": 9110200, "node_id": "MDQ6VXNlcjkxMTAyMDA=", "avatar_url": "https://avatars2.githubusercontent.com/u/9110200?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fmassa", "html_url": "https://github.com/fmassa", "followers_url": "https://api.github.com/users/fmassa/followers", "following_url": "https://api.github.com/users/fmassa/following{/other_user}", "gists_url": "https://api.github.com/users/fmassa/gists{/gist_id}", "starred_url": "https://api.github.com/users/fmassa/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fmassa/subscriptions", "organizations_url": "https://api.github.com/users/fmassa/orgs", "repos_url": "https://api.github.com/users/fmassa/repos", "events_url": "https://api.github.com/users/fmassa/events{/privacy}", "received_events_url": "https://api.github.com/users/fmassa/received_events", "type": "User", "site_admin": false}, "created_at": "2017-02-26T14:44:03Z", "updated_at": "2017-02-26T14:44:03Z", "author_association": "MEMBER", "body_html": "<p>While I see that this is more efficient and expand + add, I think that we will (soon?) be adding automatic broadcast to torch tensors, so this might look weird. I wonder if there is a way to optimize the pointwise operations in THC for the stride 0 case... that might be the cleanest solution.</p>", "body_text": "While I see that this is more efficient and expand + add, I think that we will (soon?) be adding automatic broadcast to torch tensors, so this might look weird. I wonder if there is a way to optimize the pointwise operations in THC for the stride 0 case... that might be the cleanest solution.", "body": "While I see that this is more efficient and expand + add, I think that we will (soon?) be adding automatic broadcast to torch tensors, so this might look weird. I wonder if there is a way to optimize the pointwise operations in THC for the stride 0 case... that might be the cleanest solution."}