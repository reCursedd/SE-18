{"url": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/212411822", "pull_request_review_id": 149040103, "id": 212411822, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIxMjQxMTgyMg==", "diff_hunk": "@@ -4,20 +4,21 @@\n from __future__ import unicode_literals\n \n from caffe2.python import core\n-from hypothesis import given\n import caffe2.python.hypothesis_test_util as hu\n import hypothesis.strategies as st\n import numpy as np\n+import caffe2.python.serialized_test.serialized_test_util as serial\n \n \n-class TestWeightedSumOp(hu.HypothesisTestCase):\n+class TestWeightedSumOp(serial.SerializedTestCase):\n \n-    @given(n=st.integers(5, 8), m=st.integers(1, 1),\n-           d=st.integers(2, 4), grad_on_w=st.booleans(),\n-           **hu.gcs_cpu_only)\n+    @serial.given_and_seeded(", "path": "caffe2/python/operator_test/weighted_sum_test.py", "position": null, "original_position": 17, "commit_id": "833469bfa0676a3bdd55b4d818f29b099280cf0a", "original_commit_id": "083cc69664087b517ec877e2d3e1a3e8acceb093", "user": {"login": "ajyu", "id": 1071670, "node_id": "MDQ6VXNlcjEwNzE2NzA=", "avatar_url": "https://avatars2.githubusercontent.com/u/1071670?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ajyu", "html_url": "https://github.com/ajyu", "followers_url": "https://api.github.com/users/ajyu/followers", "following_url": "https://api.github.com/users/ajyu/following{/other_user}", "gists_url": "https://api.github.com/users/ajyu/gists{/gist_id}", "starred_url": "https://api.github.com/users/ajyu/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ajyu/subscriptions", "organizations_url": "https://api.github.com/users/ajyu/orgs", "repos_url": "https://api.github.com/users/ajyu/repos", "events_url": "https://api.github.com/users/ajyu/events{/privacy}", "received_events_url": "https://api.github.com/users/ajyu/received_events", "type": "User", "site_admin": false}, "body": "We had previously tried to do this, but it proved to be tricky because of the following\r\n1. hypothesis.given annotates a test with a bunch of variables\r\nhttps://hypothesis.readthedocs.io/en/latest/_modules/hypothesis/core.html\r\n2. when we define a decorator outside of hypothesis, we don't have access to those variables for modification, because we don't assume we know anything about the wrapped function", "created_at": "2018-08-23T18:27:14Z", "updated_at": "2018-11-23T15:49:50Z", "html_url": "https://github.com/pytorch/pytorch/pull/10594#discussion_r212411822", "pull_request_url": "https://api.github.com/repos/pytorch/pytorch/pulls/10594", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/212411822"}, "html": {"href": "https://github.com/pytorch/pytorch/pull/10594#discussion_r212411822"}, "pull_request": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/10594"}}, "body_html": "<p>We had previously tried to do this, but it proved to be tricky because of the following</p>\n<ol>\n<li>hypothesis.given annotates a test with a bunch of variables<br>\n<a href=\"https://hypothesis.readthedocs.io/en/latest/_modules/hypothesis/core.html\" rel=\"nofollow\">https://hypothesis.readthedocs.io/en/latest/_modules/hypothesis/core.html</a></li>\n<li>when we define a decorator outside of hypothesis, we don't have access to those variables for modification, because we don't assume we know anything about the wrapped function</li>\n</ol>", "body_text": "We had previously tried to do this, but it proved to be tricky because of the following\n\nhypothesis.given annotates a test with a bunch of variables\nhttps://hypothesis.readthedocs.io/en/latest/_modules/hypothesis/core.html\nwhen we define a decorator outside of hypothesis, we don't have access to those variables for modification, because we don't assume we know anything about the wrapped function", "in_reply_to_id": 212401185}