{"url": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/211045292", "pull_request_review_id": 147397046, "id": 211045292, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIxMTA0NTI5Mg==", "diff_hunk": "@@ -0,0 +1,51 @@\n+from __future__ import absolute_import\n+from __future__ import division\n+from __future__ import print_function\n+from __future__ import unicode_literals\n+\n+import argparse\n+import os\n+import shutil\n+\n+import caffe2.python.serialized_test.collect_tests as collect\n+from typing import Text\n+import pickle\n+\n+\n+TOP_DIR = os.path.realpath('caffe2/python/serialized_test')\n+DATA_DIR = os.path.join(TOP_DIR, 'data')\n+\n+\n+def serialize_tests(args):  # type: (argparse.Namespace) -> None\n+    def prepare_dir(path):  # type: (Text) -> None\n+        if os.path.exists(path):\n+            shutil.rmtree(path)\n+        os.makedirs(path)\n+    cases = collect.collect_test_data()\n+    for case in cases:\n+        output_dir = os.path.join(\n+            args.output, case.test_type, case.name)\n+        prepare_dir(output_dir)\n+        pickle.dump(case.gradient_op,\n+                open(os.path.join(output_dir, 'gradient_op'), 'wb'))\n+        pickle.dump(case.inputs, open(os.path.join(output_dir, 'inputs'), 'wb'))\n+        pickle.dump(\n+                case.outputs, open(os.path.join(output_dir, 'ouputs'), 'wb'))\n+\n+def parse_args():  # type: () -> argparse.Namespace\n+    parser = argparse.ArgumentParser('caffe-serialized-test')\n+    subparsers = parser.add_subparsers()\n+\n+    subparser = subparsers.add_parser('generate-serialized-tests', help='convert testcases to test data')\n+    subparser.add_argument('-o', '--output', default=DATA_DIR,\n+                           help='output directory (default: %(default)s)')\n+    subparser.set_defaults(func=serialize_tests)\n+\n+    return parser.parse_args()\n+\n+def main():  # type: () -> None", "path": "caffe2/python/serialized_test/generate_serialized_tests.py", "position": null, "original_position": 46, "commit_id": "833469bfa0676a3bdd55b4d818f29b099280cf0a", "original_commit_id": "60690e020b8159b43bab60643c1f9df73c06cc34", "user": {"login": "houseroad", "id": 30275821, "node_id": "MDQ6VXNlcjMwMjc1ODIx", "avatar_url": "https://avatars0.githubusercontent.com/u/30275821?v=4", "gravatar_id": "", "url": "https://api.github.com/users/houseroad", "html_url": "https://github.com/houseroad", "followers_url": "https://api.github.com/users/houseroad/followers", "following_url": "https://api.github.com/users/houseroad/following{/other_user}", "gists_url": "https://api.github.com/users/houseroad/gists{/gist_id}", "starred_url": "https://api.github.com/users/houseroad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/houseroad/subscriptions", "organizations_url": "https://api.github.com/users/houseroad/orgs", "repos_url": "https://api.github.com/users/houseroad/repos", "events_url": "https://api.github.com/users/houseroad/events{/privacy}", "received_events_url": "https://api.github.com/users/houseroad/received_events", "type": "User", "site_admin": false}, "body": "Can we record the usage of this script in the comment?", "created_at": "2018-08-17T22:21:28Z", "updated_at": "2018-11-23T15:49:37Z", "html_url": "https://github.com/pytorch/pytorch/pull/10594#discussion_r211045292", "pull_request_url": "https://api.github.com/repos/pytorch/pytorch/pulls/10594", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/211045292"}, "html": {"href": "https://github.com/pytorch/pytorch/pull/10594#discussion_r211045292"}, "pull_request": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/10594"}}, "body_html": "<p>Can we record the usage of this script in the comment?</p>", "body_text": "Can we record the usage of this script in the comment?"}