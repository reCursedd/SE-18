{"url": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/222339168", "pull_request_review_id": 161200739, "id": 222339168, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIyMjMzOTE2OA==", "diff_hunk": "@@ -8,28 +8,35 @@\n import sys\n \n \n-DEFAULT_FILE_PATTERN = r\".*\\.[ch](pp)?\"\n+DEFAULT_FILE_PATTERN = r\".*\\.c(c|pp)?\"\n \n # @@ -start,count +start,count @@\n CHUNK_PATTERN = r\"^@@\\s+-\\d+,\\d+\\s+\\+(\\d+)(?:,(\\d+))?\\s+@@\"\n \n \n-def run_shell_command(arguments, process_name=None):\n+def run_shell_command(arguments, process_name=None, verbose=False):\n     \"\"\"Executes a shell command.\"\"\"\n     assert len(arguments) > 0\n     try:\n-        output = subprocess.check_output(arguments, stderr=subprocess.STDOUT)\n-    except OSError:\n-        _, e, _ = sys.exc_info()\n+        if verbose:", "path": "tools/clang_tidy.py", "position": null, "original_position": 19, "commit_id": "e38318e62aa1660faf1382016d4ed649c73c6e21", "original_commit_id": "56e25cc8b696b3a13333c71c5d949466130c072e", "user": {"login": "ezyang", "id": 13564, "node_id": "MDQ6VXNlcjEzNTY0", "avatar_url": "https://avatars0.githubusercontent.com/u/13564?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ezyang", "html_url": "https://github.com/ezyang", "followers_url": "https://api.github.com/users/ezyang/followers", "following_url": "https://api.github.com/users/ezyang/following{/other_user}", "gists_url": "https://api.github.com/users/ezyang/gists{/gist_id}", "starred_url": "https://api.github.com/users/ezyang/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ezyang/subscriptions", "organizations_url": "https://api.github.com/users/ezyang/orgs", "repos_url": "https://api.github.com/users/ezyang/repos", "events_url": "https://api.github.com/users/ezyang/events{/privacy}", "received_events_url": "https://api.github.com/users/ezyang/received_events", "type": "User", "site_admin": false}, "body": "OK, so I played around with clang-tidy a bit, and I guess what your problem is, is that clang-tidy will report if it fails to compile a file, but that doesn't count as an actual error, it will still return exit code 0 if that's the only problem. But in that case, isn't it better to error in this case? Otherwise, someone can make a build system change which breaks clang-tidy, and you'll lose all of your tidying *silently*, just because clang-tidy no longer understands how to process the file anymore. That sounds bad!", "created_at": "2018-10-03T14:43:53Z", "updated_at": "2018-11-23T15:52:15Z", "html_url": "https://github.com/pytorch/pytorch/pull/12213#discussion_r222339168", "pull_request_url": "https://api.github.com/repos/pytorch/pytorch/pulls/12213", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/222339168"}, "html": {"href": "https://github.com/pytorch/pytorch/pull/12213#discussion_r222339168"}, "pull_request": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/12213"}}, "body_html": "<p>OK, so I played around with clang-tidy a bit, and I guess what your problem is, is that clang-tidy will report if it fails to compile a file, but that doesn't count as an actual error, it will still return exit code 0 if that's the only problem. But in that case, isn't it better to error in this case? Otherwise, someone can make a build system change which breaks clang-tidy, and you'll lose all of your tidying <em>silently</em>, just because clang-tidy no longer understands how to process the file anymore. That sounds bad!</p>", "body_text": "OK, so I played around with clang-tidy a bit, and I guess what your problem is, is that clang-tidy will report if it fails to compile a file, but that doesn't count as an actual error, it will still return exit code 0 if that's the only problem. But in that case, isn't it better to error in this case? Otherwise, someone can make a build system change which breaks clang-tidy, and you'll lose all of your tidying silently, just because clang-tidy no longer understands how to process the file anymore. That sounds bad!", "in_reply_to_id": 221663532}