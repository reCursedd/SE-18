{"url": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/221663915", "pull_request_review_id": 160367463, "id": 221663915, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIyMTY2MzkxNQ==", "diff_hunk": "@@ -8,28 +8,35 @@\n import sys\n \n \n-DEFAULT_FILE_PATTERN = r\".*\\.[ch](pp)?\"\n+DEFAULT_FILE_PATTERN = r\".*\\.c(c|pp)?\"\n \n # @@ -start,count +start,count @@\n CHUNK_PATTERN = r\"^@@\\s+-\\d+,\\d+\\s+\\+(\\d+)(?:,(\\d+))?\\s+@@\"\n \n \n-def run_shell_command(arguments, process_name=None):\n+def run_shell_command(arguments, process_name=None, verbose=False):\n     \"\"\"Executes a shell command.\"\"\"\n     assert len(arguments) > 0\n     try:\n-        output = subprocess.check_output(arguments, stderr=subprocess.STDOUT)\n-    except OSError:\n-        _, e, _ = sys.exc_info()\n+        if verbose:\n+            output = subprocess.check_output(arguments, stderr=subprocess.STDOUT)\n+        else:\n+            with open(os.devnull, 'wb') as devnull:\n+                output = subprocess.check_output(arguments, stderr=devnull)\n+    except:  # noqa E722\n         process_name = process_name or arguments[0]\n-        raise RuntimeError(\"Error executing {}: {}\".format(process_name, e))\n+        _, error, _ = sys.exc_info()\n+        message = \"Error executing '{}'\".format(process_name)", "path": "tools/clang_tidy.py", "position": null, "original_position": 28, "commit_id": "e38318e62aa1660faf1382016d4ed649c73c6e21", "original_commit_id": "56e25cc8b696b3a13333c71c5d949466130c072e", "user": {"login": "ezyang", "id": 13564, "node_id": "MDQ6VXNlcjEzNTY0", "avatar_url": "https://avatars0.githubusercontent.com/u/13564?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ezyang", "html_url": "https://github.com/ezyang", "followers_url": "https://api.github.com/users/ezyang/followers", "following_url": "https://api.github.com/users/ezyang/following{/other_user}", "gists_url": "https://api.github.com/users/ezyang/gists{/gist_id}", "starred_url": "https://api.github.com/users/ezyang/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ezyang/subscriptions", "organizations_url": "https://api.github.com/users/ezyang/orgs", "repos_url": "https://api.github.com/users/ezyang/repos", "events_url": "https://api.github.com/users/ezyang/events{/privacy}", "received_events_url": "https://api.github.com/users/ezyang/received_events", "type": "User", "site_admin": false}, "body": "It seems way more elegant to just print the command you're executing, before you execute it. Then you don't need to catch all.", "created_at": "2018-10-01T15:59:09Z", "updated_at": "2018-11-23T15:52:13Z", "html_url": "https://github.com/pytorch/pytorch/pull/12213#discussion_r221663915", "pull_request_url": "https://api.github.com/repos/pytorch/pytorch/pulls/12213", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/221663915"}, "html": {"href": "https://github.com/pytorch/pytorch/pull/12213#discussion_r221663915"}, "pull_request": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/12213"}}, "body_html": "<p>It seems way more elegant to just print the command you're executing, before you execute it. Then you don't need to catch all.</p>", "body_text": "It seems way more elegant to just print the command you're executing, before you execute it. Then you don't need to catch all."}