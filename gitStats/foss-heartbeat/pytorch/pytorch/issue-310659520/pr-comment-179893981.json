{"url": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/179893981", "pull_request_review_id": 110229873, "id": 179893981, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE3OTg5Mzk4MQ==", "diff_hunk": "@@ -559,25 +587,90 @@ struct to_ir {\n     emitLoopCommon(stmt.range(), {}, {cond}, stmt.body(), {});\n   }\n \n+  // Validate that the `lhs` Expr's in an assignment statement are valid. That\n+  // is:\n+  //\n+  // 1) All lhs Expr's are either Var or Starred nodes\n+  // 2) There is at most one Starred node in the lhs Expr\n+  // 3) A Starred node can only appear when there is another non-Starred lhs Expr\n+  //    Concretely this means that `*abc = func()` is illegal. Unpacking all\n+  //    outputs into a tuple is covered by `abc = func()`.\n+  size_t calcNumStarredUnpack(const List<Expr>& lhs, const Assign& stmt) {\n+    size_t num_normal_assign = 0;\n+    size_t num_starred = 0;\n+    for (const auto& assignee : lhs) {\n+      if (assignee.kind() == TK_VAR) {\n+        num_normal_assign++;\n+      } else if (assignee.kind() == TK_STARRED) {\n+        num_starred++;\n+      } else {\n+        throw ErrorReport(assignee)\n+            << \"lhs of assignment must be a variable or starred expression.\";\n+      }\n+    }\n+\n+    if (num_starred > 1) {\n+      throw ErrorReport(stmt)\n+          << \"Only one starred expression is allowed on the lhs.\";\n+    }\n+\n+    if (num_starred > 0 && num_normal_assign == 0) {\n+      throw ErrorReport(stmt) << \"A Starred expression may only appear on the \"\n+                              << \"lhs within the presence of another non-starred\"\n+                              << \" expression.\";\n+    }\n+\n+    return num_starred;\n+  }\n+\n   std::vector<Value*> emitAssignment(const Assign& stmt) {\n     std::vector<Value*> outputs{stmt.lhs().size()};\n+    size_t num_starred_unpack = calcNumStarredUnpack(stmt.lhs(), stmt);\n     if (stmt.reduction() != '=') {\n       if (stmt.lhs().size() != 1) {\n         throw ErrorReport(stmt)\n-            << \"reductions are only allow when there is a single variable \"\n+            << \"reductions are only allowed when there is a single variable \"\n             << \"on the left-hand side.\";\n       }\n-      Ident lhs = stmt.lhs()[0];\n+      if (stmt.lhs()[0].kind() != TK_VAR) {\n+        throw ErrorReport(stmt) << \"Starred expressions are not allowed on the\"\n+                                << \" lhs of a reduction.\";\n+      }\n+      Ident lhs = Var(stmt.lhs()[0]).name();\n       Expr expr = BinOp::create(stmt.range(), stmt.reduction(),\n                                 Var::create(lhs.range(), lhs), stmt.rhs());\n       outputs = emitExpr(expr, 1);\n     } else {\n-      outputs = emitExpr(stmt.rhs(), stmt.lhs().size());\n+      outputs =\n+          emitExpr(stmt.rhs(), num_starred_unpack ? VARARG_OUTPUTS : stmt.lhs().size());", "path": "torch/csrc/jit/script/compiler.cpp", "position": null, "original_position": 142, "commit_id": "aa73450641068979f92bf5732e545b31f6932fbd", "original_commit_id": "0107dd111fc9d749711ff5e75492b10ce1fe1c0e", "user": {"login": "zdevito", "id": 370202, "node_id": "MDQ6VXNlcjM3MDIwMg==", "avatar_url": "https://avatars0.githubusercontent.com/u/370202?v=4", "gravatar_id": "", "url": "https://api.github.com/users/zdevito", "html_url": "https://github.com/zdevito", "followers_url": "https://api.github.com/users/zdevito/followers", "following_url": "https://api.github.com/users/zdevito/following{/other_user}", "gists_url": "https://api.github.com/users/zdevito/gists{/gist_id}", "starred_url": "https://api.github.com/users/zdevito/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/zdevito/subscriptions", "organizations_url": "https://api.github.com/users/zdevito/orgs", "repos_url": "https://api.github.com/users/zdevito/repos", "events_url": "https://api.github.com/users/zdevito/events{/privacy}", "received_events_url": "https://api.github.com/users/zdevito/received_events", "type": "User", "site_admin": false}, "body": "What about the case where there is a single lhs? VARARG_OUTPUTS is not going to be set?", "created_at": "2018-04-06T22:59:11Z", "updated_at": "2018-11-23T15:41:57Z", "html_url": "https://github.com/pytorch/pytorch/pull/6214#discussion_r179893981", "pull_request_url": "https://api.github.com/repos/pytorch/pytorch/pulls/6214", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/179893981"}, "html": {"href": "https://github.com/pytorch/pytorch/pull/6214#discussion_r179893981"}, "pull_request": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/6214"}}, "body_html": "<p>What about the case where there is a single lhs? VARARG_OUTPUTS is not going to be set?</p>", "body_text": "What about the case where there is a single lhs? VARARG_OUTPUTS is not going to be set?"}