{"url": "https://api.github.com/repos/pytorch/pytorch/issues/3839", "repository_url": "https://api.github.com/repos/pytorch/pytorch", "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/3839/labels{/name}", "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/3839/comments", "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/3839/events", "html_url": "https://github.com/pytorch/pytorch/issues/3839", "id": 276141301, "node_id": "MDU6SXNzdWUyNzYxNDEzMDE=", "number": 3839, "title": "Implement toCFloat() for Variables and numel() = 1 Tensors", "user": {"login": "ebetica", "id": 3605224, "node_id": "MDQ6VXNlcjM2MDUyMjQ=", "avatar_url": "https://avatars3.githubusercontent.com/u/3605224?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ebetica", "html_url": "https://github.com/ebetica", "followers_url": "https://api.github.com/users/ebetica/followers", "following_url": "https://api.github.com/users/ebetica/following{/other_user}", "gists_url": "https://api.github.com/users/ebetica/gists{/gist_id}", "starred_url": "https://api.github.com/users/ebetica/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ebetica/subscriptions", "organizations_url": "https://api.github.com/users/ebetica/orgs", "repos_url": "https://api.github.com/users/ebetica/repos", "events_url": "https://api.github.com/users/ebetica/events{/privacy}", "received_events_url": "https://api.github.com/users/ebetica/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": {"login": "gchanan", "id": 3768583, "node_id": "MDQ6VXNlcjM3Njg1ODM=", "avatar_url": "https://avatars2.githubusercontent.com/u/3768583?v=4", "gravatar_id": "", "url": "https://api.github.com/users/gchanan", "html_url": "https://github.com/gchanan", "followers_url": "https://api.github.com/users/gchanan/followers", "following_url": "https://api.github.com/users/gchanan/following{/other_user}", "gists_url": "https://api.github.com/users/gchanan/gists{/gist_id}", "starred_url": "https://api.github.com/users/gchanan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/gchanan/subscriptions", "organizations_url": "https://api.github.com/users/gchanan/orgs", "repos_url": "https://api.github.com/users/gchanan/repos", "events_url": "https://api.github.com/users/gchanan/events{/privacy}", "received_events_url": "https://api.github.com/users/gchanan/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "gchanan", "id": 3768583, "node_id": "MDQ6VXNlcjM3Njg1ODM=", "avatar_url": "https://avatars2.githubusercontent.com/u/3768583?v=4", "gravatar_id": "", "url": "https://api.github.com/users/gchanan", "html_url": "https://github.com/gchanan", "followers_url": "https://api.github.com/users/gchanan/followers", "following_url": "https://api.github.com/users/gchanan/following{/other_user}", "gists_url": "https://api.github.com/users/gchanan/gists{/gist_id}", "starred_url": "https://api.github.com/users/gchanan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/gchanan/subscriptions", "organizations_url": "https://api.github.com/users/gchanan/orgs", "repos_url": "https://api.github.com/users/gchanan/repos", "events_url": "https://api.github.com/users/gchanan/events{/privacy}", "received_events_url": "https://api.github.com/users/gchanan/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 2, "created_at": "2017-11-22T17:00:51Z", "updated_at": "2017-11-28T18:20:43Z", "closed_at": "2017-11-28T18:20:43Z", "author_association": "CONTRIBUTOR", "body_html": "<p>For convenience, is it possible to do this? Currently, I have to do something like <code>Variable.data().sum().toCFloat()</code>, when I prefer to do <code>Variable.toCFloat()</code> if I know it's suppose to represent a single number. One reason both <code>.data().sum()</code> is needed I think is because Variable.sum() will return a 1-dim tensor, which is not the behavior of Tensor.sum().</p>", "body_text": "For convenience, is it possible to do this? Currently, I have to do something like Variable.data().sum().toCFloat(), when I prefer to do Variable.toCFloat() if I know it's suppose to represent a single number. One reason both .data().sum() is needed I think is because Variable.sum() will return a 1-dim tensor, which is not the behavior of Tensor.sum().", "body": "For convenience, is it possible to do this? Currently, I have to do something like `Variable.data().sum().toCFloat()`, when I prefer to do `Variable.toCFloat()` if I know it's suppose to represent a single number. One reason both `.data().sum()` is needed I think is because Variable.sum() will return a 1-dim tensor, which is not the behavior of Tensor.sum()."}