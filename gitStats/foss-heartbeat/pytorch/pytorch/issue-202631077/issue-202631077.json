{"url": "https://api.github.com/repos/pytorch/pytorch/issues/560", "repository_url": "https://api.github.com/repos/pytorch/pytorch", "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/560/labels{/name}", "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/560/comments", "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/560/events", "html_url": "https://github.com/pytorch/pytorch/issues/560", "id": 202631077, "node_id": "MDU6SXNzdWUyMDI2MzEwNzc=", "number": 560, "title": "Gradients are zero when run on GPU (x.cuda())", "user": {"login": "keunhong", "id": 297680, "node_id": "MDQ6VXNlcjI5NzY4MA==", "avatar_url": "https://avatars3.githubusercontent.com/u/297680?v=4", "gravatar_id": "", "url": "https://api.github.com/users/keunhong", "html_url": "https://github.com/keunhong", "followers_url": "https://api.github.com/users/keunhong/followers", "following_url": "https://api.github.com/users/keunhong/following{/other_user}", "gists_url": "https://api.github.com/users/keunhong/gists{/gist_id}", "starred_url": "https://api.github.com/users/keunhong/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/keunhong/subscriptions", "organizations_url": "https://api.github.com/users/keunhong/orgs", "repos_url": "https://api.github.com/users/keunhong/repos", "events_url": "https://api.github.com/users/keunhong/events{/privacy}", "received_events_url": "https://api.github.com/users/keunhong/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2017-01-23T19:43:23Z", "updated_at": "2017-01-23T19:53:40Z", "closed_at": "2017-01-23T19:50:07Z", "author_association": "NONE", "body_html": "<p>For example:</p>\n<pre><code>xx = Variable(torch.randn(1,1), requires_grad=True)\nyy = 3*xx\nzz = yy**2\nzz.backward()\nprint(xx.grad)\n</code></pre>\n<p>yields</p>\n<pre><code>Variable containing:\n-19.2122\n[torch.FloatTensor of size 1x1]\n</code></pre>\n<p>but</p>\n<pre><code>xx = Variable(torch.randn(1,1), requires_grad = True).cuda()\nyy = 3*xx\nzz = yy**2\nzz.backward()\nprint(xx.grad)\n</code></pre>\n<p>yields</p>\n<pre><code>Variable containing:\n 0\n[torch.cuda.FloatTensor of size 1x1 (GPU 0)]\n</code></pre>\n<p>NVIDIA Driver 375.26<br>\nCUDA 8.0.44<br>\ncuDNN 5.1.3<br>\nGTX 1080<br>\nPython 3.5.2</p>", "body_text": "For example:\nxx = Variable(torch.randn(1,1), requires_grad=True)\nyy = 3*xx\nzz = yy**2\nzz.backward()\nprint(xx.grad)\n\nyields\nVariable containing:\n-19.2122\n[torch.FloatTensor of size 1x1]\n\nbut\nxx = Variable(torch.randn(1,1), requires_grad = True).cuda()\nyy = 3*xx\nzz = yy**2\nzz.backward()\nprint(xx.grad)\n\nyields\nVariable containing:\n 0\n[torch.cuda.FloatTensor of size 1x1 (GPU 0)]\n\nNVIDIA Driver 375.26\nCUDA 8.0.44\ncuDNN 5.1.3\nGTX 1080\nPython 3.5.2", "body": "For example:\r\n```\r\nxx = Variable(torch.randn(1,1), requires_grad=True)\r\nyy = 3*xx\r\nzz = yy**2\r\nzz.backward()\r\nprint(xx.grad)\r\n```\r\nyields\r\n```\r\nVariable containing:\r\n-19.2122\r\n[torch.FloatTensor of size 1x1]\r\n```\r\n\r\nbut\r\n\r\n```\r\nxx = Variable(torch.randn(1,1), requires_grad = True).cuda()\r\nyy = 3*xx\r\nzz = yy**2\r\nzz.backward()\r\nprint(xx.grad)\r\n```\r\nyields\r\n```\r\nVariable containing:\r\n 0\r\n[torch.cuda.FloatTensor of size 1x1 (GPU 0)]\r\n```\r\n\r\nNVIDIA Driver 375.26\r\nCUDA 8.0.44\r\ncuDNN 5.1.3\r\nGTX 1080\r\nPython 3.5.2"}