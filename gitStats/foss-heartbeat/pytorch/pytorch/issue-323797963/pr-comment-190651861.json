{"url": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/190651861", "pull_request_review_id": 123074688, "id": 190651861, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5MDY1MTg2MQ==", "diff_hunk": "@@ -362,14 +353,14 @@ std::shared_ptr<ProcessGroup::Work> ProcessGroupGloo::broadcast(\n   }\n \n   // Define how to run the algorithm and copy back results\n-  entry->run = [tensors](EntryType& entry) mutable {\n+  entry->run = [=]() mutable {", "path": "torch/lib/c10d/ProcessGroupGloo.cpp", "position": null, "original_position": 189, "commit_id": "f81bd359f6b3550c6c311ff39b58bf62535e43cc", "original_commit_id": "9a6399fbaffd9d8bb24bdbd87d41069b950be75e", "user": {"login": "pietern", "id": 9845, "node_id": "MDQ6VXNlcjk4NDU=", "avatar_url": "https://avatars3.githubusercontent.com/u/9845?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pietern", "html_url": "https://github.com/pietern", "followers_url": "https://api.github.com/users/pietern/followers", "following_url": "https://api.github.com/users/pietern/following{/other_user}", "gists_url": "https://api.github.com/users/pietern/gists{/gist_id}", "starred_url": "https://api.github.com/users/pietern/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pietern/subscriptions", "organizations_url": "https://api.github.com/users/pietern/orgs", "repos_url": "https://api.github.com/users/pietern/repos", "events_url": "https://api.github.com/users/pietern/events{/privacy}", "received_events_url": "https://api.github.com/users/pietern/received_events", "type": "User", "site_admin": false}, "body": "It is a heap pointer. The checkout function returns the pointer stored in the unique_ptr in the cache. Since we control when the cache will be emptied (for now only on destruction of the process group) we know it will remain valid at least until the worker thread has executed the related work. Passing a raw heap pointer around is cheaper than moving a unique_ptr around like I did in the first rev of this PR.", "created_at": "2018-05-24T16:30:41Z", "updated_at": "2018-11-23T15:44:36Z", "html_url": "https://github.com/pytorch/pytorch/pull/7628#discussion_r190651861", "pull_request_url": "https://api.github.com/repos/pytorch/pytorch/pulls/7628", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/190651861"}, "html": {"href": "https://github.com/pytorch/pytorch/pull/7628#discussion_r190651861"}, "pull_request": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/7628"}}, "body_html": "<p>It is a heap pointer. The checkout function returns the pointer stored in the unique_ptr in the cache. Since we control when the cache will be emptied (for now only on destruction of the process group) we know it will remain valid at least until the worker thread has executed the related work. Passing a raw heap pointer around is cheaper than moving a unique_ptr around like I did in the first rev of this PR.</p>", "body_text": "It is a heap pointer. The checkout function returns the pointer stored in the unique_ptr in the cache. Since we control when the cache will be emptied (for now only on destruction of the process group) we know it will remain valid at least until the worker thread has executed the related work. Passing a raw heap pointer around is cheaper than moving a unique_ptr around like I did in the first rev of this PR.", "in_reply_to_id": 190195142}