{"url": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/190301521", "pull_request_review_id": 122650533, "id": 190301521, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5MDMwMTUyMQ==", "diff_hunk": "@@ -0,0 +1,78 @@\n+#pragma once\n+\n+#include <memory>\n+#include <stdexcept>\n+#include <vector>\n+\n+#include <ATen/ATen.h>\n+\n+#include \"Types.hpp\"\n+\n+namespace c10d {\n+\n+// ProcessGroup is a base class that captures collective and point to\n+// point communication in a fixed set of processes.\n+//\n+// The functions specified in the class below describe the API alone;\n+// implementations are provided in subclasses.\n+//\n+// Every function that performs I/O is executed asynchronously by a\n+// thread pool owned by the ProcessGroup (by default). They return an\n+// object that can be used to wait for completion or error.\n+//\n+// The ProcessGroup can instantiate subgroups with fewer or an equal\n+// number of members. Implementations must take care that multiple\n+// process groups can be used in parallel and synchronize accordingly.\n+//\n+// The ProcessGroup assumes a fixed set of processes. If the set\n+// changes, existing instances must be destructed and instantiation\n+// and initialization must start from scratch. For members of the\n+// process group to find each other (referred to as rendezvous from\n+// hereon)\n+//\n+class ProcessGroup {\n+ public:\n+  class Work {\n+   public:\n+    virtual ~Work();\n+\n+    // Checks if request has completed. Non-blocking operation.\n+    virtual bool isCompleted() const = 0;\n+\n+    // Returns if the work completed successfully.\n+    // If false, the exception function can be called to get details.\n+    virtual bool isSuccess() const = 0;\n+\n+    // Waits until request completes. Blocking operation.\n+    // Returns false if the work completed with an exception.\n+    virtual bool wait() = 0;\n+\n+    // Returns exception if wait() returned false.\n+    virtual const std::exception& exception() const = 0;\n+  };\n+\n+  explicit ProcessGroup(int rank, int size);\n+  virtual ~ProcessGroup();\n+\n+  int getRank() const {\n+    return rank_;\n+  }\n+\n+  int getSize() const {\n+    return size_;\n+  }\n+\n+  virtual std::shared_ptr<Work> broadcast(\n+      std::vector<at::Tensor>& data,\n+      const BroadcastOptions& opts = BroadcastOptions()) = 0;\n+\n+  virtual std::shared_ptr<Work> allreduce(\n+      std::vector<at::Tensor>& data,\n+      const AllreduceOptions& opts = AllreduceOptions()) = 0;\n+\n+ protected:\n+  const int rank_;", "path": "torch/lib/c10d/ProcessGroup.hpp", "position": 74, "original_position": 74, "commit_id": "f81bd359f6b3550c6c311ff39b58bf62535e43cc", "original_commit_id": "f81bd359f6b3550c6c311ff39b58bf62535e43cc", "user": {"login": "pietern", "id": 9845, "node_id": "MDQ6VXNlcjk4NDU=", "avatar_url": "https://avatars3.githubusercontent.com/u/9845?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pietern", "html_url": "https://github.com/pietern", "followers_url": "https://api.github.com/users/pietern/followers", "following_url": "https://api.github.com/users/pietern/following{/other_user}", "gists_url": "https://api.github.com/users/pietern/gists{/gist_id}", "starred_url": "https://api.github.com/users/pietern/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pietern/subscriptions", "organizations_url": "https://api.github.com/users/pietern/orgs", "repos_url": "https://api.github.com/users/pietern/repos", "events_url": "https://api.github.com/users/pietern/events{/privacy}", "received_events_url": "https://api.github.com/users/pietern/received_events", "type": "User", "site_admin": false}, "body": "Can't they be set from the constructor? `rank_(MPI_Comm_Rank(...))` or something?\r\n\r\nI like them being const because it tells you the process group is a fixed configuration.", "created_at": "2018-05-23T15:48:49Z", "updated_at": "2018-11-23T15:44:35Z", "html_url": "https://github.com/pytorch/pytorch/pull/7628#discussion_r190301521", "pull_request_url": "https://api.github.com/repos/pytorch/pytorch/pulls/7628", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/190301521"}, "html": {"href": "https://github.com/pytorch/pytorch/pull/7628#discussion_r190301521"}, "pull_request": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/7628"}}, "body_html": "<p>Can't they be set from the constructor? <code>rank_(MPI_Comm_Rank(...))</code> or something?</p>\n<p>I like them being const because it tells you the process group is a fixed configuration.</p>", "body_text": "Can't they be set from the constructor? rank_(MPI_Comm_Rank(...)) or something?\nI like them being const because it tells you the process group is a fixed configuration.", "in_reply_to_id": 190116564}