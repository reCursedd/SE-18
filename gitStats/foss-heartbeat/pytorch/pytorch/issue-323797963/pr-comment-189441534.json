{"url": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/189441534", "pull_request_review_id": 121625607, "id": 189441534, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4OTQ0MTUzNA==", "diff_hunk": "@@ -0,0 +1,406 @@\n+#include \"ProcessGroupGloo.hpp\"\n+\n+#include <gloo/allreduce_halving_doubling.h>\n+#include <gloo/broadcast_one_to_all.h>\n+#include <gloo/rendezvous/context.h>\n+#include <gloo/transport/tcp/device.h>\n+\n+#define GENERATE_ALL_TYPES(type, func, args...)        \\\n+  switch (type) {                                      \\\n+    case ::at::ScalarType::Float:                      \\\n+      func<float>(args);                               \\\n+      break;                                           \\\n+    case ::at::ScalarType::Double:                     \\\n+      func<double>(args);                              \\\n+      break;                                           \\\n+    case ::at::ScalarType::Half:                       \\\n+      func<gloo::float16>(args);                       \\\n+      break;                                           \\\n+    case ::at::ScalarType::Char:                       \\\n+      func<int8_t>(args);                              \\\n+      break;                                           \\\n+    case ::at::ScalarType::Byte:                       \\\n+      func<uint8_t>(args);                             \\\n+      break;                                           \\\n+    case ::at::ScalarType::Int:                        \\\n+      func<int32_t>(args);                             \\\n+      break;                                           \\\n+    case ::at::ScalarType::Long:                       \\\n+      func<int64_t>(args);                             \\\n+      break;                                           \\\n+    default:                                           \\\n+      throw std::runtime_error(\"Invalid scalar type\"); \\\n+  }\n+\n+namespace c10d {\n+\n+using KeyType = AlgorithmKey;\n+using EntryType = std::unique_ptr<AlgorithmEntry>;\n+\n+namespace {\n+\n+// Wrap c10d store as Gloo store\n+class GlooStore : public ::gloo::rendezvous::Store {\n+ public:\n+  GlooStore(const std::shared_ptr<::c10d::Store>& store) : store_(store) {}\n+\n+  void set(const std::string& key, const std::vector<char>& value) override {\n+    std::vector<unsigned char> tmp(value.begin(), value.end());", "path": "torch/lib/c10d/ProcessGroupGloo.cpp", "position": null, "original_position": 48, "commit_id": "f81bd359f6b3550c6c311ff39b58bf62535e43cc", "original_commit_id": "9eae42435952a9e0c723aff63234ca783460d467", "user": {"login": "apaszke", "id": 4583066, "node_id": "MDQ6VXNlcjQ1ODMwNjY=", "avatar_url": "https://avatars3.githubusercontent.com/u/4583066?v=4", "gravatar_id": "", "url": "https://api.github.com/users/apaszke", "html_url": "https://github.com/apaszke", "followers_url": "https://api.github.com/users/apaszke/followers", "following_url": "https://api.github.com/users/apaszke/following{/other_user}", "gists_url": "https://api.github.com/users/apaszke/gists{/gist_id}", "starred_url": "https://api.github.com/users/apaszke/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/apaszke/subscriptions", "organizations_url": "https://api.github.com/users/apaszke/orgs", "repos_url": "https://api.github.com/users/apaszke/repos", "events_url": "https://api.github.com/users/apaszke/events{/privacy}", "received_events_url": "https://api.github.com/users/apaszke/received_events", "type": "User", "site_admin": false}, "body": "`unsigned char` doesn't need to be the same type as `uint8_t` in the compiler, and it will cause a compile error if this happens.", "created_at": "2018-05-19T18:30:04Z", "updated_at": "2018-11-23T15:44:20Z", "html_url": "https://github.com/pytorch/pytorch/pull/7628#discussion_r189441534", "pull_request_url": "https://api.github.com/repos/pytorch/pytorch/pulls/7628", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/189441534"}, "html": {"href": "https://github.com/pytorch/pytorch/pull/7628#discussion_r189441534"}, "pull_request": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/7628"}}, "body_html": "<p><code>unsigned char</code> doesn't need to be the same type as <code>uint8_t</code> in the compiler, and it will cause a compile error if this happens.</p>", "body_text": "unsigned char doesn't need to be the same type as uint8_t in the compiler, and it will cause a compile error if this happens."}