{"url": "https://api.github.com/repos/pytorch/pytorch/issues/comments/391124464", "html_url": "https://github.com/pytorch/pytorch/pull/7628#issuecomment-391124464", "issue_url": "https://api.github.com/repos/pytorch/pytorch/issues/7628", "id": 391124464, "node_id": "MDEyOklzc3VlQ29tbWVudDM5MTEyNDQ2NA==", "user": {"login": "pietern", "id": 9845, "node_id": "MDQ6VXNlcjk4NDU=", "avatar_url": "https://avatars3.githubusercontent.com/u/9845?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pietern", "html_url": "https://github.com/pietern", "followers_url": "https://api.github.com/users/pietern/followers", "following_url": "https://api.github.com/users/pietern/following{/other_user}", "gists_url": "https://api.github.com/users/pietern/gists{/gist_id}", "starred_url": "https://api.github.com/users/pietern/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pietern/subscriptions", "organizations_url": "https://api.github.com/users/pietern/orgs", "repos_url": "https://api.github.com/users/pietern/repos", "events_url": "https://api.github.com/users/pietern/events{/privacy}", "received_events_url": "https://api.github.com/users/pietern/received_events", "type": "User", "site_admin": false}, "created_at": "2018-05-22T20:11:27Z", "updated_at": "2018-05-22T20:11:27Z", "author_association": "CONTRIBUTOR", "body_html": "<p>Thanks for the comprehensive review <a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=4583066\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/apaszke\">@apaszke</a>. I change the cache behavior to no longer std::move a unique_ptr around but keep it in the cache and use a raw pointer to refer to it. This way the workers only need to acquire a mutex on the queue. When they're done they mark the entry as done and notify the CV associated with the entry. If in the mean time a new caller comes in and needs to use it, it will block on this done flag being set. This is close to as minimal as it gets.</p>", "body_text": "Thanks for the comprehensive review @apaszke. I change the cache behavior to no longer std::move a unique_ptr around but keep it in the cache and use a raw pointer to refer to it. This way the workers only need to acquire a mutex on the queue. When they're done they mark the entry as done and notify the CV associated with the entry. If in the mean time a new caller comes in and needs to use it, it will block on this done flag being set. This is close to as minimal as it gets.", "body": "Thanks for the comprehensive review @apaszke. I change the cache behavior to no longer std::move a unique_ptr around but keep it in the cache and use a raw pointer to refer to it. This way the workers only need to acquire a mutex on the queue. When they're done they mark the entry as done and notify the CV associated with the entry. If in the mean time a new caller comes in and needs to use it, it will block on this done flag being set. This is close to as minimal as it gets."}