{"url": "https://api.github.com/repos/pytorch/pytorch/issues/11290", "repository_url": "https://api.github.com/repos/pytorch/pytorch", "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/11290/labels{/name}", "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/11290/comments", "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/11290/events", "html_url": "https://github.com/pytorch/pytorch/pull/11290", "id": 357362720, "node_id": "MDExOlB1bGxSZXF1ZXN0MjEzMzk2NTUw", "number": 11290, "title": "[wip] Implement convtbc depthwise", "user": {"login": "zou3519", "id": 5652049, "node_id": "MDQ6VXNlcjU2NTIwNDk=", "avatar_url": "https://avatars3.githubusercontent.com/u/5652049?v=4", "gravatar_id": "", "url": "https://api.github.com/users/zou3519", "html_url": "https://github.com/zou3519", "followers_url": "https://api.github.com/users/zou3519/followers", "following_url": "https://api.github.com/users/zou3519/following{/other_user}", "gists_url": "https://api.github.com/users/zou3519/gists{/gist_id}", "starred_url": "https://api.github.com/users/zou3519/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/zou3519/subscriptions", "organizations_url": "https://api.github.com/users/zou3519/orgs", "repos_url": "https://api.github.com/users/zou3519/repos", "events_url": "https://api.github.com/users/zou3519/events{/privacy}", "received_events_url": "https://api.github.com/users/zou3519/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2018-09-05T19:04:15Z", "updated_at": "2018-09-18T16:44:17Z", "closed_at": null, "author_association": "CONTRIBUTOR", "pull_request": {"url": "https://api.github.com/repos/pytorch/pytorch/pulls/11290", "html_url": "https://github.com/pytorch/pytorch/pull/11290", "diff_url": "https://github.com/pytorch/pytorch/pull/11290.diff", "patch_url": "https://github.com/pytorch/pytorch/pull/11290.patch"}, "body_html": "<p>Added <code>torch.conv_tbc_groups</code>. It works with the following restrictions:</p>\n<ul>\n<li>CUDA only</li>\n<li>groups == in_channels == out_channels must be true.</li>\n</ul>\n<p>The input/weight/output formats are as follows:</p>\n<ul>\n<li>input: (iL, B, iC).</li>\n<li>weight: (oL, iC / G, oC).</li>\n<li>output: (oL, B, oC).</li>\n<li>bias: (oC,)</li>\n</ul>\n<p>NB: This is not faster than a (transpose, conv1d+groups, transpose) for some<br>\ncases. Depthwise conv1d has a nice strided access pattern that the kernels in<br>\nthis PR cannot exploit.</p>", "body_text": "Added torch.conv_tbc_groups. It works with the following restrictions:\n\nCUDA only\ngroups == in_channels == out_channels must be true.\n\nThe input/weight/output formats are as follows:\n\ninput: (iL, B, iC).\nweight: (oL, iC / G, oC).\noutput: (oL, B, oC).\nbias: (oC,)\n\nNB: This is not faster than a (transpose, conv1d+groups, transpose) for some\ncases. Depthwise conv1d has a nice strided access pattern that the kernels in\nthis PR cannot exploit.", "body": "Added `torch.conv_tbc_groups`. It works with the following restrictions:\r\n- CUDA only\r\n- groups == in_channels == out_channels must be true.\r\n\r\nThe input/weight/output formats are as follows:\r\n- input: (iL, B, iC).\r\n- weight: (oL, iC / G, oC).\r\n- output: (oL, B, oC).\r\n- bias: (oC,)\r\n\r\nNB: This is not faster than a (transpose, conv1d+groups, transpose) for some\r\ncases. Depthwise conv1d has a nice strided access pattern that the kernels in\r\nthis PR cannot exploit.\r\n\r\n"}