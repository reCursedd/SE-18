{"url": "https://api.github.com/repos/pytorch/pytorch/issues/comments/377154957", "html_url": "https://github.com/pytorch/pytorch/issues/6098#issuecomment-377154957", "issue_url": "https://api.github.com/repos/pytorch/pytorch/issues/6098", "id": 377154957, "node_id": "MDEyOklzc3VlQ29tbWVudDM3NzE1NDk1Nw==", "user": {"login": "tobyclh", "id": 12501995, "node_id": "MDQ6VXNlcjEyNTAxOTk1", "avatar_url": "https://avatars3.githubusercontent.com/u/12501995?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tobyclh", "html_url": "https://github.com/tobyclh", "followers_url": "https://api.github.com/users/tobyclh/followers", "following_url": "https://api.github.com/users/tobyclh/following{/other_user}", "gists_url": "https://api.github.com/users/tobyclh/gists{/gist_id}", "starred_url": "https://api.github.com/users/tobyclh/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tobyclh/subscriptions", "organizations_url": "https://api.github.com/users/tobyclh/orgs", "repos_url": "https://api.github.com/users/tobyclh/repos", "events_url": "https://api.github.com/users/tobyclh/events{/privacy}", "received_events_url": "https://api.github.com/users/tobyclh/received_events", "type": "User", "site_admin": false}, "created_at": "2018-03-29T07:58:36Z", "updated_at": "2018-03-29T07:58:36Z", "author_association": "NONE", "body_html": "<p>I am also having the same issue, on ubuntu (fresh install) compiling from source, master branch with cuda 9.1 and newest cudnn.<br>\nDuring installation both CUDA and CuDNN are detected by CMAKE.<br>\nAnd FYR</p>\n<pre><code>\ndef _libcudnn():\n    global lib, __cudnn_version\n    if lib is None:\n        if sys.platform == \"win32\":\n            lib = find_cudnn_windows_lib()\n        else:\n            lib = ctypes.cdll.LoadLibrary(None)\n        if hasattr(lib, 'cudnnGetErrorString'):\n            lib.cudnnGetErrorString.restype = ctypes.c_char_p\n            __cudnn_version = lib.cudnnGetVersion()\n            compile_version = torch._C._cudnn_version()\n            # Check that cuDNN major and minor versions match\n            if (__cudnn_version // 100) != (compile_version // 100):\n                raise RuntimeError(\n                    'cuDNN version mismatch: PyTorch was compiled against {} '\n                    'but linked against {}'.format(compile_version, __cudnn_version))\n        else:\n            lib = None\n    return lib\n\n</code></pre>", "body_text": "I am also having the same issue, on ubuntu (fresh install) compiling from source, master branch with cuda 9.1 and newest cudnn.\nDuring installation both CUDA and CuDNN are detected by CMAKE.\nAnd FYR\n\ndef _libcudnn():\n    global lib, __cudnn_version\n    if lib is None:\n        if sys.platform == \"win32\":\n            lib = find_cudnn_windows_lib()\n        else:\n            lib = ctypes.cdll.LoadLibrary(None)\n        if hasattr(lib, 'cudnnGetErrorString'):\n            lib.cudnnGetErrorString.restype = ctypes.c_char_p\n            __cudnn_version = lib.cudnnGetVersion()\n            compile_version = torch._C._cudnn_version()\n            # Check that cuDNN major and minor versions match\n            if (__cudnn_version // 100) != (compile_version // 100):\n                raise RuntimeError(\n                    'cuDNN version mismatch: PyTorch was compiled against {} '\n                    'but linked against {}'.format(compile_version, __cudnn_version))\n        else:\n            lib = None\n    return lib", "body": "I am also having the same issue, on ubuntu (fresh install) compiling from source, master branch with cuda 9.1 and newest cudnn.\r\nDuring installation both CUDA and CuDNN are detected by CMAKE.\r\nAnd FYR\r\n```\r\n\r\ndef _libcudnn():\r\n    global lib, __cudnn_version\r\n    if lib is None:\r\n        if sys.platform == \"win32\":\r\n            lib = find_cudnn_windows_lib()\r\n        else:\r\n            lib = ctypes.cdll.LoadLibrary(None)\r\n        if hasattr(lib, 'cudnnGetErrorString'):\r\n            lib.cudnnGetErrorString.restype = ctypes.c_char_p\r\n            __cudnn_version = lib.cudnnGetVersion()\r\n            compile_version = torch._C._cudnn_version()\r\n            # Check that cuDNN major and minor versions match\r\n            if (__cudnn_version // 100) != (compile_version // 100):\r\n                raise RuntimeError(\r\n                    'cuDNN version mismatch: PyTorch was compiled against {} '\r\n                    'but linked against {}'.format(compile_version, __cudnn_version))\r\n        else:\r\n            lib = None\r\n    return lib\r\n\r\n```"}