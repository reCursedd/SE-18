{"url": "https://api.github.com/repos/pytorch/pytorch/issues/13865", "repository_url": "https://api.github.com/repos/pytorch/pytorch", "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/13865/labels{/name}", "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/13865/comments", "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/13865/events", "html_url": "https://github.com/pytorch/pytorch/issues/13865", "id": 379974911, "node_id": "MDU6SXNzdWUzNzk5NzQ5MTE=", "number": 13865, "title": "[c10d] Coordinated file truncation for FileStore", "user": {"login": "pietern", "id": 9845, "node_id": "MDQ6VXNlcjk4NDU=", "avatar_url": "https://avatars3.githubusercontent.com/u/9845?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pietern", "html_url": "https://github.com/pietern", "followers_url": "https://api.github.com/users/pietern/followers", "following_url": "https://api.github.com/users/pietern/following{/other_user}", "gists_url": "https://api.github.com/users/pietern/gists{/gist_id}", "starred_url": "https://api.github.com/users/pietern/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pietern/subscriptions", "organizations_url": "https://api.github.com/users/pietern/orgs", "repos_url": "https://api.github.com/users/pietern/repos", "events_url": "https://api.github.com/users/pietern/events{/privacy}", "received_events_url": "https://api.github.com/users/pietern/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1002728630, "node_id": "MDU6TGFiZWwxMDAyNzI4NjMw", "url": "https://api.github.com/repos/pytorch/pytorch/labels/1.0", "name": "1.0", "color": "f9db31", "default": false}, {"id": 679953883, "node_id": "MDU6TGFiZWw2Nzk5NTM4ODM=", "url": "https://api.github.com/repos/pytorch/pytorch/labels/distributed", "name": "distributed", "color": "c2e0c6", "default": false}, {"id": 1076922351, "node_id": "MDU6TGFiZWwxMDc2OTIyMzUx", "url": "https://api.github.com/repos/pytorch/pytorch/labels/feature%20request", "name": "feature request", "color": "ffceba", "default": false}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-11-12T22:18:53Z", "updated_at": "2018-11-16T23:14:07Z", "closed_at": null, "author_association": "CONTRIBUTOR", "body_html": "<p>Comment by <a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=5674597\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/SsnL\">@SsnL</a> in <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load issue title\" data-id=\"378939645\" data-permission-text=\"Issue title is private\" data-url=\"https://github.com/pytorch/pytorch/issues/13750\" data-hovercard-type=\"issue\" data-hovercard-url=\"/pytorch/pytorch/issues/13750/hovercard?comment_id=437242684&amp;comment_type=issue_comment\" href=\"https://github.com/pytorch/pytorch/issues/13750#issuecomment-437242684\">#13750 (comment)</a>, and discussion following that comment.</p>\n<p>The FileStore will delete the underlying file if all participating processes terminate gracefully. If they don't there will be a file hanging around. If you try to reuse that file, the process group that uses it will get to see old values, and likely hang or crash. The technique showed by <a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=5674597\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/SsnL\">@SsnL</a> fixes this by ensuring that a file gets truncated when it is first opened.</p>", "body_text": "Comment by @SsnL in #13750 (comment), and discussion following that comment.\nThe FileStore will delete the underlying file if all participating processes terminate gracefully. If they don't there will be a file hanging around. If you try to reuse that file, the process group that uses it will get to see old values, and likely hang or crash. The technique showed by @SsnL fixes this by ensuring that a file gets truncated when it is first opened.", "body": "Comment by @SsnL in https://github.com/pytorch/pytorch/issues/13750#issuecomment-437242684, and discussion following that comment.\r\n\r\nThe FileStore will delete the underlying file if all participating processes terminate gracefully. If they don't there will be a file hanging around. If you try to reuse that file, the process group that uses it will get to see old values, and likely hang or crash. The technique showed by @SsnL fixes this by ensuring that a file gets truncated when it is first opened."}