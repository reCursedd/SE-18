{"url": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/234755927", "pull_request_review_id": 176465033, "id": 234755927, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIzNDc1NTkyNw==", "diff_hunk": "@@ -11,17 +15,81 @@ namespace ivalue {\n struct Future;\n } // namespace ivalue\n \n-struct C10_API ThreadPool final {\n-  ThreadPool();\n+class C10_API TaskThreadPoolBase {\n+ public:\n+  virtual void run(const std::function<void()>& func) = 0;\n \n-  ~ThreadPool();\n+  virtual size_t size() const = 0;\n \n-  void schedule(std::function<void(void)> task);\n+  /**\n+   * The number of available (i.e. idle) threads in this thread pool.\n+   */\n+  virtual size_t numAvailable() const = 0;\n \n-  void workOnTasksUntilCompleted(c10::intrusive_ptr<ivalue::Future> future);\n+  virtual ~TaskThreadPoolBase();\n+};\n+\n+class C10_API ThreadPool : public c10::TaskThreadPoolBase {\n+ protected:\n+  struct task_element_t {\n+    bool run_with_id;\n+    const std::function<void()> no_id;\n+    const std::function<void(std::size_t)> with_id;\n+\n+    explicit task_element_t(const std::function<void()>& f)\n+        : run_with_id(false), no_id(f), with_id(nullptr) {}\n+    explicit task_element_t(const std::function<void(std::size_t)>& f)\n+        : run_with_id(true), no_id(nullptr), with_id(f) {}\n+  };\n+\n+  std::queue<task_element_t> tasks_;\n+  std::vector<std::thread> threads_;\n+  std::mutex mutex_;\n+  std::condition_variable condition_;\n+  std::condition_variable completed_;\n+  bool running_;\n+  bool complete_;\n+  std::size_t available_;\n+  std::size_t total_;\n+  int numa_node_id_;\n+\n+ public:\n+  ThreadPool() = delete;\n+\n+  explicit ThreadPool(std::size_t pool_size, int numa_node_id = -1);\n+\n+  ~ThreadPool() override;\n+\n+  size_t size() const override;\n+\n+  size_t numAvailable() const override;\n+\n+  /// @brief Add task to the thread pool if a thread is currently available.\n+  template <typename Task>", "path": "aten/src/ATen/core/thread_pool.h", "position": null, "original_position": 71, "commit_id": "d2668b7fb104dd83ba5bd248841ececa24bac6e7", "original_commit_id": "ba000cbb93152f16f9984778d19376f3dde95bfd", "user": {"login": "zdevito", "id": 370202, "node_id": "MDQ6VXNlcjM3MDIwMg==", "avatar_url": "https://avatars0.githubusercontent.com/u/370202?v=4", "gravatar_id": "", "url": "https://api.github.com/users/zdevito", "html_url": "https://github.com/zdevito", "followers_url": "https://api.github.com/users/zdevito/followers", "following_url": "https://api.github.com/users/zdevito/following{/other_user}", "gists_url": "https://api.github.com/users/zdevito/gists{/gist_id}", "starred_url": "https://api.github.com/users/zdevito/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/zdevito/subscriptions", "organizations_url": "https://api.github.com/users/zdevito/orgs", "repos_url": "https://api.github.com/users/zdevito/repos", "events_url": "https://api.github.com/users/zdevito/events{/privacy}", "received_events_url": "https://api.github.com/users/zdevito/received_events", "type": "User", "site_admin": false}, "body": "What is this templated? It immediately casts the task to `std::function<void()>`? @ilia-cher do you remember?", "created_at": "2018-11-19T19:42:16Z", "updated_at": "2018-11-23T15:55:09Z", "html_url": "https://github.com/pytorch/pytorch/pull/14114#discussion_r234755927", "pull_request_url": "https://api.github.com/repos/pytorch/pytorch/pulls/14114", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/234755927"}, "html": {"href": "https://github.com/pytorch/pytorch/pull/14114#discussion_r234755927"}, "pull_request": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/14114"}}, "body_html": "<p>What is this templated? It immediately casts the task to <code>std::function&lt;void()&gt;</code>? <a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=30845429\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/ilia-cher\">@ilia-cher</a> do you remember?</p>", "body_text": "What is this templated? It immediately casts the task to std::function<void()>? @ilia-cher do you remember?"}