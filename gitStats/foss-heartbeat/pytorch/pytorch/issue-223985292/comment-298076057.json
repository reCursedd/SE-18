{"url": "https://api.github.com/repos/pytorch/pytorch/issues/comments/298076057", "html_url": "https://github.com/pytorch/pytorch/pull/1348#issuecomment-298076057", "issue_url": "https://api.github.com/repos/pytorch/pytorch/issues/1348", "id": 298076057, "node_id": "MDEyOklzc3VlQ29tbWVudDI5ODA3NjA1Nw==", "user": {"login": "fmassa", "id": 9110200, "node_id": "MDQ6VXNlcjkxMTAyMDA=", "avatar_url": "https://avatars2.githubusercontent.com/u/9110200?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fmassa", "html_url": "https://github.com/fmassa", "followers_url": "https://api.github.com/users/fmassa/followers", "following_url": "https://api.github.com/users/fmassa/following{/other_user}", "gists_url": "https://api.github.com/users/fmassa/gists{/gist_id}", "starred_url": "https://api.github.com/users/fmassa/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fmassa/subscriptions", "organizations_url": "https://api.github.com/users/fmassa/orgs", "repos_url": "https://api.github.com/users/fmassa/repos", "events_url": "https://api.github.com/users/fmassa/events{/privacy}", "received_events_url": "https://api.github.com/users/fmassa/received_events", "type": "User", "site_admin": false}, "created_at": "2017-04-28T18:42:14Z", "updated_at": "2017-04-28T18:42:14Z", "author_association": "MEMBER", "body_html": "<p>Hey, this is a big PR! :)<br>\nI quickly skimmed through it, and correct me if I'm wrong but <code>SpatialSubSampling</code> is actually equivalent to <code>Conv2d</code> with <code>groups == nInputChannels == nOutputChannels</code>, but maybe more efficient?</p>", "body_text": "Hey, this is a big PR! :)\nI quickly skimmed through it, and correct me if I'm wrong but SpatialSubSampling is actually equivalent to Conv2d with groups == nInputChannels == nOutputChannels, but maybe more efficient?", "body": "Hey, this is a big PR! :)\r\nI quickly skimmed through it, and correct me if I'm wrong but `SpatialSubSampling` is actually equivalent to `Conv2d` with `groups == nInputChannels == nOutputChannels`, but maybe more efficient?"}