{"url": "https://api.github.com/repos/pytorch/pytorch/issues/comments/298107543", "html_url": "https://github.com/pytorch/pytorch/pull/1348#issuecomment-298107543", "issue_url": "https://api.github.com/repos/pytorch/pytorch/issues/1348", "id": 298107543, "node_id": "MDEyOklzc3VlQ29tbWVudDI5ODEwNzU0Mw==", "user": {"login": "lantiga", "id": 191033, "node_id": "MDQ6VXNlcjE5MTAzMw==", "avatar_url": "https://avatars2.githubusercontent.com/u/191033?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lantiga", "html_url": "https://github.com/lantiga", "followers_url": "https://api.github.com/users/lantiga/followers", "following_url": "https://api.github.com/users/lantiga/following{/other_user}", "gists_url": "https://api.github.com/users/lantiga/gists{/gist_id}", "starred_url": "https://api.github.com/users/lantiga/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lantiga/subscriptions", "organizations_url": "https://api.github.com/users/lantiga/orgs", "repos_url": "https://api.github.com/users/lantiga/repos", "events_url": "https://api.github.com/users/lantiga/events{/privacy}", "received_events_url": "https://api.github.com/users/lantiga/received_events", "type": "User", "site_admin": false}, "created_at": "2017-04-28T21:10:22Z", "updated_at": "2017-04-28T21:10:22Z", "author_association": "COLLABORATOR", "body_html": "<p><a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=1160997\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/andrewgiessel\">@andrewgiessel</a> I have a question on the changes: with your strategy, if you call the module directly from functional - e.g. <code>F.upsample_nearest(input,10)</code> - will fail because the casting only happens at the nn/module level.<br>\nI bring this up because tests are failing for this reason after the changes.</p>", "body_text": "@andrewgiessel I have a question on the changes: with your strategy, if you call the module directly from functional - e.g. F.upsample_nearest(input,10) - will fail because the casting only happens at the nn/module level.\nI bring this up because tests are failing for this reason after the changes.", "body": "@andrewgiessel I have a question on the changes: with your strategy, if you call the module directly from functional - e.g. `F.upsample_nearest(input,10)` - will fail because the casting only happens at the nn/module level.\r\nI bring this up because tests are failing for this reason after the changes."}