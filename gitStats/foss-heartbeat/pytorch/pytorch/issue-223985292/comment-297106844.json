{"url": "https://api.github.com/repos/pytorch/pytorch/issues/comments/297106844", "html_url": "https://github.com/pytorch/pytorch/pull/1348#issuecomment-297106844", "issue_url": "https://api.github.com/repos/pytorch/pytorch/issues/1348", "id": 297106844, "node_id": "MDEyOklzc3VlQ29tbWVudDI5NzEwNjg0NA==", "user": {"login": "andrewgiessel", "id": 1160997, "node_id": "MDQ6VXNlcjExNjA5OTc=", "avatar_url": "https://avatars0.githubusercontent.com/u/1160997?v=4", "gravatar_id": "", "url": "https://api.github.com/users/andrewgiessel", "html_url": "https://github.com/andrewgiessel", "followers_url": "https://api.github.com/users/andrewgiessel/followers", "following_url": "https://api.github.com/users/andrewgiessel/following{/other_user}", "gists_url": "https://api.github.com/users/andrewgiessel/gists{/gist_id}", "starred_url": "https://api.github.com/users/andrewgiessel/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/andrewgiessel/subscriptions", "organizations_url": "https://api.github.com/users/andrewgiessel/orgs", "repos_url": "https://api.github.com/users/andrewgiessel/repos", "events_url": "https://api.github.com/users/andrewgiessel/events{/privacy}", "received_events_url": "https://api.github.com/users/andrewgiessel/received_events", "type": "User", "site_admin": false}, "created_at": "2017-04-25T17:33:46Z", "updated_at": "2017-04-25T17:33:46Z", "author_association": "CONTRIBUTOR", "body_html": "<p><a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=191033\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/lantiga\">@lantiga</a> - Heya Luca.  I looked at our branches.</p>\n<p>I think the most narrow, technical difference between our branches is primarily the constructors of <code>_UpsamplingBase(Function)</code> and <code>_UpsamplingBase(Module)</code>.  Therein, I set <code>self.size</code> to a tuple using <code>_pair()</code> if it isn't None.  You seem to have done something similar, but at different points.</p>\n<p>More generally, my PR assumes 2d upsampling:  <code>size</code> and <code>scale_factor</code> can be single ints or pairs (a tuple).  I think it makes sense to generalize.</p>", "body_text": "@lantiga - Heya Luca.  I looked at our branches.\nI think the most narrow, technical difference between our branches is primarily the constructors of _UpsamplingBase(Function) and _UpsamplingBase(Module).  Therein, I set self.size to a tuple using _pair() if it isn't None.  You seem to have done something similar, but at different points.\nMore generally, my PR assumes 2d upsampling:  size and scale_factor can be single ints or pairs (a tuple).  I think it makes sense to generalize.", "body": "@lantiga - Heya Luca.  I looked at our branches.\r\n\r\nI think the most narrow, technical difference between our branches is primarily the constructors of `_UpsamplingBase(Function)` and `_UpsamplingBase(Module)`.  Therein, I set `self.size` to a tuple using `_pair()` if it isn't None.  You seem to have done something similar, but at different points.\r\n\r\nMore generally, my PR assumes 2d upsampling:  `size` and `scale_factor` can be single ints or pairs (a tuple).  I think it makes sense to generalize."}