{"url": "https://api.github.com/repos/pytorch/pytorch/issues/comments/298098951", "html_url": "https://github.com/pytorch/pytorch/pull/1348#issuecomment-298098951", "issue_url": "https://api.github.com/repos/pytorch/pytorch/issues/1348", "id": 298098951, "node_id": "MDEyOklzc3VlQ29tbWVudDI5ODA5ODk1MQ==", "user": {"login": "lantiga", "id": 191033, "node_id": "MDQ6VXNlcjE5MTAzMw==", "avatar_url": "https://avatars2.githubusercontent.com/u/191033?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lantiga", "html_url": "https://github.com/lantiga", "followers_url": "https://api.github.com/users/lantiga/followers", "following_url": "https://api.github.com/users/lantiga/following{/other_user}", "gists_url": "https://api.github.com/users/lantiga/gists{/gist_id}", "starred_url": "https://api.github.com/users/lantiga/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lantiga/subscriptions", "organizations_url": "https://api.github.com/users/lantiga/orgs", "repos_url": "https://api.github.com/users/lantiga/repos", "events_url": "https://api.github.com/users/lantiga/events{/privacy}", "received_events_url": "https://api.github.com/users/lantiga/received_events", "type": "User", "site_admin": false}, "created_at": "2017-04-28T20:29:08Z", "updated_at": "2017-04-28T20:29:08Z", "author_association": "COLLABORATOR", "body_html": "<p><a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=15841449\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/ngimel\">@ngimel</a> Aha, I see.<br>\nI don't think we can directly use the average pooling kernels without refactoring average pooling modules to expose their kernels for use in forward and backward, am I right?<br>\nMaybe we could reuse average pooling only when using CUDNN?</p>", "body_text": "@ngimel Aha, I see.\nI don't think we can directly use the average pooling kernels without refactoring average pooling modules to expose their kernels for use in forward and backward, am I right?\nMaybe we could reuse average pooling only when using CUDNN?", "body": "@ngimel Aha, I see.\r\nI don't think we can directly use the average pooling kernels without refactoring average pooling modules to expose their kernels for use in forward and backward, am I right? \r\nMaybe we could reuse average pooling only when using CUDNN?"}