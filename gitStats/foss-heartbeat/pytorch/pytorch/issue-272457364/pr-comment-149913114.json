{"url": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/149913114", "pull_request_review_id": 75380487, "id": 149913114, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE0OTkxMzExNA==", "diff_hunk": "@@ -8,40 +8,37 @@ namespace torch { namespace cudnn {\n \n namespace {\n \n-void setInputDescriptor(TensorDescriptor& desc, cudnnDataType_t dataType, THVoidTensor* tensor)\n+void setInputDescriptor(TensorDescriptor& desc, cudnnDataType_t dataType, const at::Tensor& tensor)\n {\n-  CHECK_ARG(tensor->nDimension >= 2 && tensor->nDimension <= 5);\n+  CHECK_ARG(tensor.dim() >= 2 && tensor.dim() <= 5);\n   int inputSize[5] = {0};\n   int inputStride[5] = {0};\n-  int nDimension = (tensor->nDimension <= 4) ? 4 : tensor->nDimension;\n-  for (int i = 0; i < tensor->nDimension; ++i) {\n-    inputSize[i] = (int) tensor->size[i];\n-    inputStride[i] = (int) tensor->stride[i];\n+  int nDimension = (tensor.dim() <= 4) ? 4 : tensor.dim();\n+  for (int i = 0; i < tensor.dim(); ++i) {\n+    inputSize[i] = (int) tensor.size(i);\n+    inputStride[i] = (int) tensor.stride(i);\n   }\n-  for (int i = tensor->nDimension; i < nDimension; ++i) {\n+  for (int i = tensor.dim(); i < nDimension; ++i) {\n     inputSize[i] = 1;\n     inputStride[i] = 1;\n   }\n   desc.set(dataType, nDimension, inputSize, inputStride);\n }\n \n-void setScaleDescriptor(TensorDescriptor& desc, cudnnDataType_t dataType, THVoidTensor* tensor, int nDim)\n+void setScaleDescriptor(TensorDescriptor& desc, cudnnDataType_t dataType, const at::Tensor& tensor, int nDim)\n {\n-  CHECK_ARG(tensor->nDimension == 1);\n-  CHECK_ARG(tensor->stride[0] == 1);  // scale must be contiguous\n-  int size = (int) tensor->size[0];\n-  int stride = (int) tensor->stride[0];\n+  CHECK_ARG(tensor.dim() == 1);\n+  CHECK_ARG(tensor.stride(0) == 1);  // scale must be contiguous\n+  int size = (int) tensor.size(0);\n+  int stride = (int) tensor.stride(0);\n   int inputSize[5] = { 1, size, 1, 1, 1 };\n   int inputStride[5] = { size * stride, stride, 1, 1, 1 };\n   desc.set(dataType, (nDim <= 4) ? 4 : 5, inputSize, inputStride);\n }\n \n-void* tensorPointer(cudnnDataType_t dataType, THVoidTensor* tensor)\n+void* tensorPointer(cudnnDataType_t dataType, const at::Tensor& tensor)\n {\n-  int elementSize = dataSize(dataType);\n-  char* ptr = (char*) tensor->storage->data;\n-  ptr += elementSize * tensor->storageOffset;\n-  return ptr;\n+  return tensor.data_ptr();", "path": "torch/csrc/cudnn/BatchNorm.cpp", "position": 51, "original_position": 51, "commit_id": "8890bb7768cf8889fc30a1fb5fe6b4a6af4256ae", "original_commit_id": "8890bb7768cf8889fc30a1fb5fe6b4a6af4256ae", "user": {"login": "apaszke", "id": 4583066, "node_id": "MDQ6VXNlcjQ1ODMwNjY=", "avatar_url": "https://avatars3.githubusercontent.com/u/4583066?v=4", "gravatar_id": "", "url": "https://api.github.com/users/apaszke", "html_url": "https://github.com/apaszke", "followers_url": "https://api.github.com/users/apaszke/followers", "following_url": "https://api.github.com/users/apaszke/following{/other_user}", "gists_url": "https://api.github.com/users/apaszke/gists{/gist_id}", "starred_url": "https://api.github.com/users/apaszke/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/apaszke/subscriptions", "organizations_url": "https://api.github.com/users/apaszke/orgs", "repos_url": "https://api.github.com/users/apaszke/repos", "events_url": "https://api.github.com/users/apaszke/events{/privacy}", "received_events_url": "https://api.github.com/users/apaszke/received_events", "type": "User", "site_admin": false}, "body": "Can't we just replace all calls with `.data_ptr()`?", "created_at": "2017-11-09T10:04:55Z", "updated_at": "2018-11-23T15:36:14Z", "html_url": "https://github.com/pytorch/pytorch/pull/3586#discussion_r149913114", "pull_request_url": "https://api.github.com/repos/pytorch/pytorch/pulls/3586", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/149913114"}, "html": {"href": "https://github.com/pytorch/pytorch/pull/3586#discussion_r149913114"}, "pull_request": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/3586"}}, "body_html": "<p>Can't we just replace all calls with <code>.data_ptr()</code>?</p>", "body_text": "Can't we just replace all calls with .data_ptr()?"}