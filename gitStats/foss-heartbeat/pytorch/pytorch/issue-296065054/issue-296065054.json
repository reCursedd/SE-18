{"url": "https://api.github.com/repos/pytorch/pytorch/issues/5168", "repository_url": "https://api.github.com/repos/pytorch/pytorch", "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/5168/labels{/name}", "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/5168/comments", "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/5168/events", "html_url": "https://github.com/pytorch/pytorch/issues/5168", "id": 296065054, "node_id": "MDU6SXNzdWUyOTYwNjUwNTQ=", "number": 5168, "title": "The variance of initialization weights are NOT 1", "user": {"login": "airsplay", "id": 2796554, "node_id": "MDQ6VXNlcjI3OTY1NTQ=", "avatar_url": "https://avatars3.githubusercontent.com/u/2796554?v=4", "gravatar_id": "", "url": "https://api.github.com/users/airsplay", "html_url": "https://github.com/airsplay", "followers_url": "https://api.github.com/users/airsplay/followers", "following_url": "https://api.github.com/users/airsplay/following{/other_user}", "gists_url": "https://api.github.com/users/airsplay/gists{/gist_id}", "starred_url": "https://api.github.com/users/airsplay/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/airsplay/subscriptions", "organizations_url": "https://api.github.com/users/airsplay/orgs", "repos_url": "https://api.github.com/users/airsplay/repos", "events_url": "https://api.github.com/users/airsplay/events{/privacy}", "received_events_url": "https://api.github.com/users/airsplay/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-02-10T02:21:21Z", "updated_at": "2018-02-10T23:19:12Z", "closed_at": "2018-02-10T23:19:12Z", "author_association": "NONE", "body_html": "<p><div class=\"border rounded-1 my-2\">\n  <div class=\"f6 px-3 py-2 lh-condensed border-bottom bg-gray-light\">\n    <p class=\"mb-0 text-bold\">\n      <a href=\"https://github.com/pytorch/pytorch/blob/9f980b179506489d226051259eacec8639c00c5f/torch/nn/modules/linear.py#L48\">pytorch/torch/nn/modules/linear.py</a>\n    </p>\n    <p class=\"mb-0 text-gray-light\">\n         Line 48\n      in\n      <a data-pjax=\"true\" class=\"commit-tease-sha\" href=\"/pytorch/pytorch/commit/9f980b179506489d226051259eacec8639c00c5f\">9f980b1</a>\n    </p>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper blob-wrapper-embedded data\">\n    <table class=\"highlight tab-size mb-0 js-file-line-container\" data-tab-size=\"8\">\n\n        <tbody><tr class=\"border-0\">\n          <td id=\"L48\" class=\"blob-num border-0 px-3 py-0 bg-white js-line-number\" data-line-number=\"48\"></td>\n          <td id=\"LC48\" class=\"blob-code border-0 px-3 py-0 bg-white blob-code-inner js-file-line\"> <span class=\"pl-k\">def</span> <span class=\"pl-en\">reset_parameters</span>(<span class=\"pl-smi\"><span class=\"pl-smi\">self</span></span>): </td>\n        </tr>\n    </tbody></table>\n  </div>\n</div>\n<br>\n<code> stdv = 1. / math.sqrt(self.weight.size(1))</code><br>\n<code>self.weight.data.uniform_(-stdv, stdv) </code><br>\nBy a simple calculation, the variance of the output feature would be 1/3 instead of 1. It means that the feature will lose 2/3 energy after a linear module. Here is how to fix it:<br>\n<code>stdv = math.sqrt(3. / self.weight.size(1))</code></p>\n<p>BTW, most of us set the bias to zero instead of some random uniform... I don't think that it's a good practice.<br>\nBTW2, the initialization of LSTM is wrong as well.</p>\n<p>Here are the references:<br>\n<a href=\"https://en.wikipedia.org/wiki/Uniform_distribution_(continuous)\" rel=\"nofollow\">wiki</a><br>\n<a href=\"http://proceedings.mlr.press/v9/glorot10a/glorot10a.pdf\" rel=\"nofollow\">Origin paper</a></p>", "body_text": "pytorch/torch/nn/modules/linear.py\n    \n    \n         Line 48\n      in\n      9f980b1\n    \n    \n    \n    \n\n        \n          \n           def reset_parameters(self): \n        \n    \n  \n\n\n stdv = 1. / math.sqrt(self.weight.size(1))\nself.weight.data.uniform_(-stdv, stdv) \nBy a simple calculation, the variance of the output feature would be 1/3 instead of 1. It means that the feature will lose 2/3 energy after a linear module. Here is how to fix it:\nstdv = math.sqrt(3. / self.weight.size(1))\nBTW, most of us set the bias to zero instead of some random uniform... I don't think that it's a good practice.\nBTW2, the initialization of LSTM is wrong as well.\nHere are the references:\nwiki\nOrigin paper", "body": "https://github.com/pytorch/pytorch/blob/9f980b179506489d226051259eacec8639c00c5f/torch/nn/modules/linear.py#L48\r\n`\r\nstdv = 1. / math.sqrt(self.weight.size(1))`\r\n`self.weight.data.uniform_(-stdv, stdv)\r\n`\r\nBy a simple calculation, the variance of the output feature would be 1/3 instead of 1. It means that the feature will lose 2/3 energy after a linear module. Here is how to fix it:\r\n`stdv = math.sqrt(3. / self.weight.size(1))`\r\n\r\nBTW, most of us set the bias to zero instead of some random uniform... I don't think that it's a good practice.\r\nBTW2, the initialization of LSTM is wrong as well. \r\n\r\nHere are the references:\r\n[wiki](https://en.wikipedia.org/wiki/Uniform_distribution_(continuous))\r\n[Origin paper](http://proceedings.mlr.press/v9/glorot10a/glorot10a.pdf)\r\n\r\n"}