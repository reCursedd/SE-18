{"url": "https://api.github.com/repos/pytorch/pytorch/issues/comments/426155389", "html_url": "https://github.com/pytorch/pytorch/issues/12230#issuecomment-426155389", "issue_url": "https://api.github.com/repos/pytorch/pytorch/issues/12230", "id": 426155389, "node_id": "MDEyOklzc3VlQ29tbWVudDQyNjE1NTM4OQ==", "user": {"login": "fmassa", "id": 9110200, "node_id": "MDQ6VXNlcjkxMTAyMDA=", "avatar_url": "https://avatars2.githubusercontent.com/u/9110200?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fmassa", "html_url": "https://github.com/fmassa", "followers_url": "https://api.github.com/users/fmassa/followers", "following_url": "https://api.github.com/users/fmassa/following{/other_user}", "gists_url": "https://api.github.com/users/fmassa/gists{/gist_id}", "starred_url": "https://api.github.com/users/fmassa/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fmassa/subscriptions", "organizations_url": "https://api.github.com/users/fmassa/orgs", "repos_url": "https://api.github.com/users/fmassa/repos", "events_url": "https://api.github.com/users/fmassa/events{/privacy}", "received_events_url": "https://api.github.com/users/fmassa/received_events", "type": "User", "site_admin": false}, "created_at": "2018-10-02T05:41:40Z", "updated_at": "2018-10-02T05:41:40Z", "author_association": "MEMBER", "body_html": "<p>I'm not saying this is the desired behaviour, but it also boils down to performing in place operations on expanded tensors. I believe the same happens with something like</p>\n<div class=\"highlight highlight-source-python\"><pre>a <span class=\"pl-k\">=</span> torch.ones(<span class=\"pl-c1\">1</span>).expand(<span class=\"pl-c1\">3</span>)\na <span class=\"pl-k\">+=</span><span class=\"pl-c1\">1</span></pre></div>", "body_text": "I'm not saying this is the desired behaviour, but it also boils down to performing in place operations on expanded tensors. I believe the same happens with something like\na = torch.ones(1).expand(3)\na +=1", "body": "I'm not saying this is the desired behaviour, but it also boils down to performing in place operations on expanded tensors. I believe the same happens with something like\r\n```python\r\na = torch.ones(1).expand(3)\r\na +=1\r\n```"}