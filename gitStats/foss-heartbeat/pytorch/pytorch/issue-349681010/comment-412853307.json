{"url": "https://api.github.com/repos/pytorch/pytorch/issues/comments/412853307", "html_url": "https://github.com/pytorch/pytorch/issues/10424#issuecomment-412853307", "issue_url": "https://api.github.com/repos/pytorch/pytorch/issues/10424", "id": 412853307, "node_id": "MDEyOklzc3VlQ29tbWVudDQxMjg1MzMwNw==", "user": {"login": "george-studenko", "id": 17111931, "node_id": "MDQ6VXNlcjE3MTExOTMx", "avatar_url": "https://avatars2.githubusercontent.com/u/17111931?v=4", "gravatar_id": "", "url": "https://api.github.com/users/george-studenko", "html_url": "https://github.com/george-studenko", "followers_url": "https://api.github.com/users/george-studenko/followers", "following_url": "https://api.github.com/users/george-studenko/following{/other_user}", "gists_url": "https://api.github.com/users/george-studenko/gists{/gist_id}", "starred_url": "https://api.github.com/users/george-studenko/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/george-studenko/subscriptions", "organizations_url": "https://api.github.com/users/george-studenko/orgs", "repos_url": "https://api.github.com/users/george-studenko/repos", "events_url": "https://api.github.com/users/george-studenko/events{/privacy}", "received_events_url": "https://api.github.com/users/george-studenko/received_events", "type": "User", "site_admin": false}, "created_at": "2018-08-14T12:22:38Z", "updated_at": "2018-08-14T12:22:38Z", "author_association": "NONE", "body_html": "<p>I'm also having this problem when I try to use inception_v3 as my pre-trained model, even without switching the classifier,</p>\n<p>Here is the call stack:</p>\n<p> in train_network(model, epochs)<br>\n19             inputs, y = inputs.to(device), y.to(device)<br>\n20<br>\n---&gt; 21             y_hat = model.forward(inputs)<br>\n22<br>\n23             loss = criterion(y_hat,y)</p>\n<p>~/anaconda3/envs/fastai/lib/python3.6/site-packages/torchvision/models/inception.py in forward(self, x)<br>\n107         # 17 x 17 x 768<br>\n108         if self.training and self.aux_logits:<br>\n--&gt; 109             aux = self.AuxLogits(x)<br>\n110         # 17 x 17 x 768<br>\n111         x = self.Mixed_7a(x)</p>\n<p>~/anaconda3/envs/fastai/lib/python3.6/site-packages/torch/nn/modules/module.py in <strong>call</strong>(self, *input, **kwargs)<br>\n475             result = self._slow_forward(*input, **kwargs)<br>\n476         else:<br>\n--&gt; 477             result = self.forward(*input, **kwargs)<br>\n478         for hook in self._forward_hooks.values():<br>\n479             hook_result = hook(self, input, result)</p>\n<p>~/anaconda3/envs/fastai/lib/python3.6/site-packages/torchvision/models/inception.py in forward(self, x)<br>\n306         x = self.conv0(x)<br>\n307         # 5 x 5 x 128<br>\n--&gt; 308         x = self.conv1(x)<br>\n309         # 1 x 1 x 768<br>\n310         x = x.view(x.size(0), -1)</p>\n<p>~/anaconda3/envs/fastai/lib/python3.6/site-packages/torch/nn/modules/module.py in <strong>call</strong>(self, *input, **kwargs)<br>\n475             result = self._slow_forward(*input, **kwargs)<br>\n476         else:<br>\n--&gt; 477             result = self.forward(*input, **kwargs)<br>\n478         for hook in self._forward_hooks.values():<br>\n479             hook_result = hook(self, input, result)</p>\n<p>~/anaconda3/envs/fastai/lib/python3.6/site-packages/torchvision/models/inception.py in forward(self, x)<br>\n323<br>\n324     def forward(self, x):<br>\n--&gt; 325         x = self.conv(x)<br>\n326         x = self.bn(x)<br>\n327         return F.relu(x, inplace=True)</p>\n<p>~/anaconda3/envs/fastai/lib/python3.6/site-packages/torch/nn/modules/module.py in <strong>call</strong>(self, *input, **kwargs)<br>\n475             result = self._slow_forward(*input, **kwargs)<br>\n476         else:<br>\n--&gt; 477             result = self.forward(*input, **kwargs)<br>\n478         for hook in self._forward_hooks.values():<br>\n479             hook_result = hook(self, input, result)</p>\n<p>~/anaconda3/envs/fastai/lib/python3.6/site-packages/torch/nn/modules/conv.py in forward(self, input)<br>\n299     def forward(self, input):<br>\n300         return F.conv2d(input, self.weight, self.bias, self.stride,<br>\n--&gt; 301                         self.padding, self.dilation, self.groups)<br>\n302<br>\n303</p>\n<p><strong>RuntimeError: sizes must be non-negative</strong></p>\n<p>I need to use Inception_V3, is it possible to go around it?</p>", "body_text": "I'm also having this problem when I try to use inception_v3 as my pre-trained model, even without switching the classifier,\nHere is the call stack:\n in train_network(model, epochs)\n19             inputs, y = inputs.to(device), y.to(device)\n20\n---> 21             y_hat = model.forward(inputs)\n22\n23             loss = criterion(y_hat,y)\n~/anaconda3/envs/fastai/lib/python3.6/site-packages/torchvision/models/inception.py in forward(self, x)\n107         # 17 x 17 x 768\n108         if self.training and self.aux_logits:\n--> 109             aux = self.AuxLogits(x)\n110         # 17 x 17 x 768\n111         x = self.Mixed_7a(x)\n~/anaconda3/envs/fastai/lib/python3.6/site-packages/torch/nn/modules/module.py in call(self, *input, **kwargs)\n475             result = self._slow_forward(*input, **kwargs)\n476         else:\n--> 477             result = self.forward(*input, **kwargs)\n478         for hook in self._forward_hooks.values():\n479             hook_result = hook(self, input, result)\n~/anaconda3/envs/fastai/lib/python3.6/site-packages/torchvision/models/inception.py in forward(self, x)\n306         x = self.conv0(x)\n307         # 5 x 5 x 128\n--> 308         x = self.conv1(x)\n309         # 1 x 1 x 768\n310         x = x.view(x.size(0), -1)\n~/anaconda3/envs/fastai/lib/python3.6/site-packages/torch/nn/modules/module.py in call(self, *input, **kwargs)\n475             result = self._slow_forward(*input, **kwargs)\n476         else:\n--> 477             result = self.forward(*input, **kwargs)\n478         for hook in self._forward_hooks.values():\n479             hook_result = hook(self, input, result)\n~/anaconda3/envs/fastai/lib/python3.6/site-packages/torchvision/models/inception.py in forward(self, x)\n323\n324     def forward(self, x):\n--> 325         x = self.conv(x)\n326         x = self.bn(x)\n327         return F.relu(x, inplace=True)\n~/anaconda3/envs/fastai/lib/python3.6/site-packages/torch/nn/modules/module.py in call(self, *input, **kwargs)\n475             result = self._slow_forward(*input, **kwargs)\n476         else:\n--> 477             result = self.forward(*input, **kwargs)\n478         for hook in self._forward_hooks.values():\n479             hook_result = hook(self, input, result)\n~/anaconda3/envs/fastai/lib/python3.6/site-packages/torch/nn/modules/conv.py in forward(self, input)\n299     def forward(self, input):\n300         return F.conv2d(input, self.weight, self.bias, self.stride,\n--> 301                         self.padding, self.dilation, self.groups)\n302\n303\nRuntimeError: sizes must be non-negative\nI need to use Inception_V3, is it possible to go around it?", "body": "I'm also having this problem when I try to use inception_v3 as my pre-trained model, even without switching the classifier,\r\n\r\nHere is the call stack:\r\n\r\n<ipython-input-18-a16fbc8f075e> in train_network(model, epochs)\r\n     19             inputs, y = inputs.to(device), y.to(device)\r\n     20 \r\n---> 21             y_hat = model.forward(inputs)\r\n     22 \r\n     23             loss = criterion(y_hat,y)\r\n\r\n~/anaconda3/envs/fastai/lib/python3.6/site-packages/torchvision/models/inception.py in forward(self, x)\r\n    107         # 17 x 17 x 768\r\n    108         if self.training and self.aux_logits:\r\n--> 109             aux = self.AuxLogits(x)\r\n    110         # 17 x 17 x 768\r\n    111         x = self.Mixed_7a(x)\r\n\r\n~/anaconda3/envs/fastai/lib/python3.6/site-packages/torch/nn/modules/module.py in __call__(self, *input, **kwargs)\r\n    475             result = self._slow_forward(*input, **kwargs)\r\n    476         else:\r\n--> 477             result = self.forward(*input, **kwargs)\r\n    478         for hook in self._forward_hooks.values():\r\n    479             hook_result = hook(self, input, result)\r\n\r\n~/anaconda3/envs/fastai/lib/python3.6/site-packages/torchvision/models/inception.py in forward(self, x)\r\n    306         x = self.conv0(x)\r\n    307         # 5 x 5 x 128\r\n--> 308         x = self.conv1(x)\r\n    309         # 1 x 1 x 768\r\n    310         x = x.view(x.size(0), -1)\r\n\r\n~/anaconda3/envs/fastai/lib/python3.6/site-packages/torch/nn/modules/module.py in __call__(self, *input, **kwargs)\r\n    475             result = self._slow_forward(*input, **kwargs)\r\n    476         else:\r\n--> 477             result = self.forward(*input, **kwargs)\r\n    478         for hook in self._forward_hooks.values():\r\n    479             hook_result = hook(self, input, result)\r\n\r\n~/anaconda3/envs/fastai/lib/python3.6/site-packages/torchvision/models/inception.py in forward(self, x)\r\n    323 \r\n    324     def forward(self, x):\r\n--> 325         x = self.conv(x)\r\n    326         x = self.bn(x)\r\n    327         return F.relu(x, inplace=True)\r\n\r\n~/anaconda3/envs/fastai/lib/python3.6/site-packages/torch/nn/modules/module.py in __call__(self, *input, **kwargs)\r\n    475             result = self._slow_forward(*input, **kwargs)\r\n    476         else:\r\n--> 477             result = self.forward(*input, **kwargs)\r\n    478         for hook in self._forward_hooks.values():\r\n    479             hook_result = hook(self, input, result)\r\n\r\n~/anaconda3/envs/fastai/lib/python3.6/site-packages/torch/nn/modules/conv.py in forward(self, input)\r\n    299     def forward(self, input):\r\n    300         return F.conv2d(input, self.weight, self.bias, self.stride,\r\n--> 301                         self.padding, self.dilation, self.groups)\r\n    302 \r\n    303 \r\n\r\n**RuntimeError: sizes must be non-negative**\r\n\r\nI need to use Inception_V3, is it possible to go around it?"}