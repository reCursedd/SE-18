{"url": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/142970346", "pull_request_review_id": 67412796, "id": 142970346, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE0Mjk3MDM0Ng==", "diff_hunk": "@@ -81,6 +83,29 @@ def is_acceptable(tensor):\n CUDNN_RNN_ALGO_PERSIST_DYNAMIC = 2\n \n \n+@contextmanager\n+def flags(enabled=False, benchmark=False, deterministic=False, verbose=False):\n+    # capture the original values\n+    orig_enable = enabled\n+    orig_benchmark = benchmark\n+    orig_deterministic = deterministic\n+    orig_verbose = verbose\n+\n+    # set the new values\n+    enabled = enabled\n+    benchmark = benchmark\n+    deterministic = deterministic\n+    verbose = verbose", "path": "torch/backends/cudnn/__init__.py", "position": null, "original_position": 32, "commit_id": "a11d067ab623b2f98b836ad37c2b9c838436aa60", "original_commit_id": "2829c4579ffae07d61ce1936b4cf207b74211f83", "user": {"login": "apaszke", "id": 4583066, "node_id": "MDQ6VXNlcjQ1ODMwNjY=", "avatar_url": "https://avatars3.githubusercontent.com/u/4583066?v=4", "gravatar_id": "", "url": "https://api.github.com/users/apaszke", "html_url": "https://github.com/apaszke", "followers_url": "https://api.github.com/users/apaszke/followers", "following_url": "https://api.github.com/users/apaszke/following{/other_user}", "gists_url": "https://api.github.com/users/apaszke/gists{/gist_id}", "starred_url": "https://api.github.com/users/apaszke/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/apaszke/subscriptions", "organizations_url": "https://api.github.com/users/apaszke/orgs", "repos_url": "https://api.github.com/users/apaszke/repos", "events_url": "https://api.github.com/users/apaszke/events{/privacy}", "received_events_url": "https://api.github.com/users/apaszke/received_events", "type": "User", "site_admin": false}, "body": "um this doesn't work. The whole context manager is a no-op right now. You're just assigning local variable to the same variable, as the global flags got shadowed. You might need to fiddle with `globals()`, or use a helper function that will take arguments with different names (i.e. make `flags` call `_flags(_enabled=enabled, _benchmark=benchmark, ...)`", "created_at": "2017-10-05T15:20:13Z", "updated_at": "2018-11-23T15:35:02Z", "html_url": "https://github.com/pytorch/pytorch/pull/2893#discussion_r142970346", "pull_request_url": "https://api.github.com/repos/pytorch/pytorch/pulls/2893", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/142970346"}, "html": {"href": "https://github.com/pytorch/pytorch/pull/2893#discussion_r142970346"}, "pull_request": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/2893"}}, "body_html": "<p>um this doesn't work. The whole context manager is a no-op right now. You're just assigning local variable to the same variable, as the global flags got shadowed. You might need to fiddle with <code>globals()</code>, or use a helper function that will take arguments with different names (i.e. make <code>flags</code> call <code>_flags(_enabled=enabled, _benchmark=benchmark, ...)</code></p>", "body_text": "um this doesn't work. The whole context manager is a no-op right now. You're just assigning local variable to the same variable, as the global flags got shadowed. You might need to fiddle with globals(), or use a helper function that will take arguments with different names (i.e. make flags call _flags(_enabled=enabled, _benchmark=benchmark, ...)"}