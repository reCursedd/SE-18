{"url": "https://api.github.com/repos/pytorch/pytorch/issues/comments/321645098", "html_url": "https://github.com/pytorch/pytorch/issues/2246#issuecomment-321645098", "issue_url": "https://api.github.com/repos/pytorch/pytorch/issues/2246", "id": 321645098, "node_id": "MDEyOklzc3VlQ29tbWVudDMyMTY0NTA5OA==", "user": {"login": "lantiga", "id": 191033, "node_id": "MDQ6VXNlcjE5MTAzMw==", "avatar_url": "https://avatars2.githubusercontent.com/u/191033?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lantiga", "html_url": "https://github.com/lantiga", "followers_url": "https://api.github.com/users/lantiga/followers", "following_url": "https://api.github.com/users/lantiga/following{/other_user}", "gists_url": "https://api.github.com/users/lantiga/gists{/gist_id}", "starred_url": "https://api.github.com/users/lantiga/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lantiga/subscriptions", "organizations_url": "https://api.github.com/users/lantiga/orgs", "repos_url": "https://api.github.com/users/lantiga/repos", "events_url": "https://api.github.com/users/lantiga/events{/privacy}", "received_events_url": "https://api.github.com/users/lantiga/received_events", "type": "User", "site_admin": false}, "created_at": "2017-08-10T19:08:08Z", "updated_at": "2017-08-10T19:08:08Z", "author_association": "COLLABORATOR", "body_html": "<p>Although, I still have a doubt: if we go this route, the semantics will change depending on types: if types match, changing the tensor will also change the numpy array, but this won't happen if types don't match. Isn't this a bit too subtle?</p>\n<p>It's almost like we should always copy in the constructor and only share memory with from_numpy.</p>\n<p>I'm fine either way, just want to be sure.</p>", "body_text": "Although, I still have a doubt: if we go this route, the semantics will change depending on types: if types match, changing the tensor will also change the numpy array, but this won't happen if types don't match. Isn't this a bit too subtle?\nIt's almost like we should always copy in the constructor and only share memory with from_numpy.\nI'm fine either way, just want to be sure.", "body": "Although, I still have a doubt: if we go this route, the semantics will change depending on types: if types match, changing the tensor will also change the numpy array, but this won't happen if types don't match. Isn't this a bit too subtle? \r\n\r\nIt's almost like we should always copy in the constructor and only share memory with from_numpy.\r\n\r\nI'm fine either way, just want to be sure."}