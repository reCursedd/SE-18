{"url": "https://api.github.com/repos/pytorch/pytorch/issues/9796", "repository_url": "https://api.github.com/repos/pytorch/pytorch", "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/9796/labels{/name}", "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/9796/comments", "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/9796/events", "html_url": "https://github.com/pytorch/pytorch/pull/9796", "id": 344243763, "node_id": "MDExOlB1bGxSZXF1ZXN0MjAzNjg2MDUy", "number": 9796, "title": "Extends type and shape tracing with device", "user": {"login": "mruberry", "id": 38511765, "node_id": "MDQ6VXNlcjM4NTExNzY1", "avatar_url": "https://avatars3.githubusercontent.com/u/38511765?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mruberry", "html_url": "https://github.com/mruberry", "followers_url": "https://api.github.com/users/mruberry/followers", "following_url": "https://api.github.com/users/mruberry/following{/other_user}", "gists_url": "https://api.github.com/users/mruberry/gists{/gist_id}", "starred_url": "https://api.github.com/users/mruberry/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mruberry/subscriptions", "organizations_url": "https://api.github.com/users/mruberry/orgs", "repos_url": "https://api.github.com/users/mruberry/repos", "events_url": "https://api.github.com/users/mruberry/events{/privacy}", "received_events_url": "https://api.github.com/users/mruberry/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 12, "created_at": "2018-07-24T23:55:45Z", "updated_at": "2018-09-25T16:40:12Z", "closed_at": "2018-08-07T19:26:33Z", "author_association": "CONTRIBUTOR", "pull_request": {"url": "https://api.github.com/repos/pytorch/pytorch/pulls/9796", "html_url": "https://github.com/pytorch/pytorch/pull/9796", "diff_url": "https://github.com/pytorch/pytorch/pull/9796.diff", "patch_url": "https://github.com/pytorch/pytorch/pull/9796.patch"}, "body_html": "<p>This PR extends the existing type and shape metadata tracing and verification done in autograd with device information. This expansion of tracing is required for <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load issue title\" data-id=\"331398278\" data-permission-text=\"Issue title is private\" data-url=\"https://github.com/pytorch/pytorch/issues/8354\" data-hovercard-type=\"pull_request\" data-hovercard-url=\"/pytorch/pytorch/pull/8354/hovercard\" href=\"https://github.com/pytorch/pytorch/pull/8354\">#8354</a>, is likely useful in other scenarios, and is a healthy sanity check, just like type and shape tracing.</p>\n<p>The precise changes are:</p>\n<ul>\n<li>TypeAndShape -&gt; InputMetadata, now includes device()</li>\n<li>Creating InputMetadata is simplified to just require a tensor, and callers were updated to use this simpler invocation wherever possible</li>\n<li>The gradient accumulator of a variable is now reset when set_data() is called if either the type or device changes, and this reset now locks to avoid contention with acquiring the gradient accumulator</li>\n<li>Mismatched devices during backward() will throw a runtime error, just like mismatched type and shape</li>\n<li>(Bonus!) Two uninitialized pointers in THCReduce are now initialized (to nullptr) to prevent build warnings</li>\n</ul>\n<p>fyi <a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=655866\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/colesbury\">@colesbury</a></p>", "body_text": "This PR extends the existing type and shape metadata tracing and verification done in autograd with device information. This expansion of tracing is required for #8354, is likely useful in other scenarios, and is a healthy sanity check, just like type and shape tracing.\nThe precise changes are:\n\nTypeAndShape -> InputMetadata, now includes device()\nCreating InputMetadata is simplified to just require a tensor, and callers were updated to use this simpler invocation wherever possible\nThe gradient accumulator of a variable is now reset when set_data() is called if either the type or device changes, and this reset now locks to avoid contention with acquiring the gradient accumulator\nMismatched devices during backward() will throw a runtime error, just like mismatched type and shape\n(Bonus!) Two uninitialized pointers in THCReduce are now initialized (to nullptr) to prevent build warnings\n\nfyi @colesbury", "body": "This PR extends the existing type and shape metadata tracing and verification done in autograd with device information. This expansion of tracing is required for #8354, is likely useful in other scenarios, and is a healthy sanity check, just like type and shape tracing.\r\n\r\nThe precise changes are:\r\n\r\n- TypeAndShape -> InputMetadata, now includes device()\r\n- Creating InputMetadata is simplified to just require a tensor, and callers were updated to use this simpler invocation wherever possible\r\n- The gradient accumulator of a variable is now reset when set_data() is called if either the type or device changes, and this reset now locks to avoid contention with acquiring the gradient accumulator\r\n- Mismatched devices during backward() will throw a runtime error, just like mismatched type and shape\r\n- (Bonus!) Two uninitialized pointers in THCReduce are now initialized (to nullptr) to prevent build warnings\r\n\r\nfyi @colesbury "}