{"url": "https://api.github.com/repos/pytorch/pytorch/issues/comments/292120605", "html_url": "https://github.com/pytorch/pytorch/issues/1193#issuecomment-292120605", "issue_url": "https://api.github.com/repos/pytorch/pytorch/issues/1193", "id": 292120605, "node_id": "MDEyOklzc3VlQ29tbWVudDI5MjEyMDYwNQ==", "user": {"login": "tudor-berariu", "id": 1908458, "node_id": "MDQ6VXNlcjE5MDg0NTg=", "avatar_url": "https://avatars1.githubusercontent.com/u/1908458?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tudor-berariu", "html_url": "https://github.com/tudor-berariu", "followers_url": "https://api.github.com/users/tudor-berariu/followers", "following_url": "https://api.github.com/users/tudor-berariu/following{/other_user}", "gists_url": "https://api.github.com/users/tudor-berariu/gists{/gist_id}", "starred_url": "https://api.github.com/users/tudor-berariu/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tudor-berariu/subscriptions", "organizations_url": "https://api.github.com/users/tudor-berariu/orgs", "repos_url": "https://api.github.com/users/tudor-berariu/repos", "events_url": "https://api.github.com/users/tudor-berariu/events{/privacy}", "received_events_url": "https://api.github.com/users/tudor-berariu/received_events", "type": "User", "site_admin": false}, "created_at": "2017-04-06T09:34:12Z", "updated_at": "2017-04-06T09:34:12Z", "author_association": "CONTRIBUTOR", "body_html": "<p>Since the issue mentions just <code>torch.gather</code> and <code>torch.scatter</code> I'll add here the observation that <code>torch.index_select</code> has the same problem.</p>\n<p>Code to demonstrate the error:</p>\n<pre><code>import torch\nsource = torch.randn(1, 3, 4)\ndim = 2\nindices = torch.LongTensor([1, 3])\n\n# Selected values are not placed correctly in out location when\n# selecting from a 3D tensor\nz = torch.zeros(1, 5, 4)\ntorch.index_select(source, dim, indices, out=z[0, 1:4, 1:3])\nprint(z)\n\n# But it works fine when selecting from a 2D Tensor\nz = torch.zeros(1, 5, 4)\ntorch.index_select(source[0], dim-1, indices, out=z[0, 1:4, 1:3])\nprint(z)\n</code></pre>\n<p>produces</p>\n<pre><code>(0 ,.,.) = \n  0.0000  0.0000  0.0000  0.0000\n  0.0000 -0.1609 -0.8457  1.1015\n -0.2982 -0.4014 -0.8759  0.0000\n  0.0000  0.0000  0.0000  0.0000\n  0.0000  0.0000  0.0000  0.0000\n[torch.FloatTensor of size 1x5x4]\n\n(0 ,.,.) = \n  0.0000  0.0000  0.0000  0.0000\n  0.0000 -0.1609 -0.8457  0.0000\n  0.0000  1.1015 -0.2982  0.0000\n  0.0000 -0.4014 -0.8759  0.0000\n  0.0000  0.0000  0.0000  0.0000\n[torch.FloatTensor of size 1x5x4]\n</code></pre>", "body_text": "Since the issue mentions just torch.gather and torch.scatter I'll add here the observation that torch.index_select has the same problem.\nCode to demonstrate the error:\nimport torch\nsource = torch.randn(1, 3, 4)\ndim = 2\nindices = torch.LongTensor([1, 3])\n\n# Selected values are not placed correctly in out location when\n# selecting from a 3D tensor\nz = torch.zeros(1, 5, 4)\ntorch.index_select(source, dim, indices, out=z[0, 1:4, 1:3])\nprint(z)\n\n# But it works fine when selecting from a 2D Tensor\nz = torch.zeros(1, 5, 4)\ntorch.index_select(source[0], dim-1, indices, out=z[0, 1:4, 1:3])\nprint(z)\n\nproduces\n(0 ,.,.) = \n  0.0000  0.0000  0.0000  0.0000\n  0.0000 -0.1609 -0.8457  1.1015\n -0.2982 -0.4014 -0.8759  0.0000\n  0.0000  0.0000  0.0000  0.0000\n  0.0000  0.0000  0.0000  0.0000\n[torch.FloatTensor of size 1x5x4]\n\n(0 ,.,.) = \n  0.0000  0.0000  0.0000  0.0000\n  0.0000 -0.1609 -0.8457  0.0000\n  0.0000  1.1015 -0.2982  0.0000\n  0.0000 -0.4014 -0.8759  0.0000\n  0.0000  0.0000  0.0000  0.0000\n[torch.FloatTensor of size 1x5x4]", "body": "Since the issue mentions just `torch.gather` and `torch.scatter` I'll add here the observation that `torch.index_select` has the same problem.\r\n\r\nCode to demonstrate the error:\r\n\r\n```\r\nimport torch\r\nsource = torch.randn(1, 3, 4)\r\ndim = 2\r\nindices = torch.LongTensor([1, 3])\r\n\r\n# Selected values are not placed correctly in out location when\r\n# selecting from a 3D tensor\r\nz = torch.zeros(1, 5, 4)\r\ntorch.index_select(source, dim, indices, out=z[0, 1:4, 1:3])\r\nprint(z)\r\n\r\n# But it works fine when selecting from a 2D Tensor\r\nz = torch.zeros(1, 5, 4)\r\ntorch.index_select(source[0], dim-1, indices, out=z[0, 1:4, 1:3])\r\nprint(z)\r\n```\r\n\r\nproduces\r\n```\r\n(0 ,.,.) = \r\n  0.0000  0.0000  0.0000  0.0000\r\n  0.0000 -0.1609 -0.8457  1.1015\r\n -0.2982 -0.4014 -0.8759  0.0000\r\n  0.0000  0.0000  0.0000  0.0000\r\n  0.0000  0.0000  0.0000  0.0000\r\n[torch.FloatTensor of size 1x5x4]\r\n\r\n(0 ,.,.) = \r\n  0.0000  0.0000  0.0000  0.0000\r\n  0.0000 -0.1609 -0.8457  0.0000\r\n  0.0000  1.1015 -0.2982  0.0000\r\n  0.0000 -0.4014 -0.8759  0.0000\r\n  0.0000  0.0000  0.0000  0.0000\r\n[torch.FloatTensor of size 1x5x4]\r\n```"}