{"url": "https://api.github.com/repos/pytorch/pytorch/issues/comments/430250866", "html_url": "https://github.com/pytorch/pytorch/issues/12702#issuecomment-430250866", "issue_url": "https://api.github.com/repos/pytorch/pytorch/issues/12702", "id": 430250866, "node_id": "MDEyOklzc3VlQ29tbWVudDQzMDI1MDg2Ng==", "user": {"login": "mhubii", "id": 26366414, "node_id": "MDQ6VXNlcjI2MzY2NDE0", "avatar_url": "https://avatars0.githubusercontent.com/u/26366414?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mhubii", "html_url": "https://github.com/mhubii", "followers_url": "https://api.github.com/users/mhubii/followers", "following_url": "https://api.github.com/users/mhubii/following{/other_user}", "gists_url": "https://api.github.com/users/mhubii/gists{/gist_id}", "starred_url": "https://api.github.com/users/mhubii/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mhubii/subscriptions", "organizations_url": "https://api.github.com/users/mhubii/orgs", "repos_url": "https://api.github.com/users/mhubii/repos", "events_url": "https://api.github.com/users/mhubii/events{/privacy}", "received_events_url": "https://api.github.com/users/mhubii/received_events", "type": "User", "site_admin": false}, "created_at": "2018-10-16T14:06:05Z", "updated_at": "2018-10-16T14:06:28Z", "author_association": "NONE", "body_html": "<p>Could you try this?</p>\n<div class=\"highlight highlight-source-python\"><pre><span class=\"pl-k\">with</span> <span class=\"pl-c1\">open</span>(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>init_net.pb<span class=\"pl-pds\">\"</span></span>,<span class=\"pl-s\"><span class=\"pl-pds\">'</span>rb<span class=\"pl-pds\">'</span></span>) <span class=\"pl-k\">as</span> f:\n    init_net <span class=\"pl-k\">=</span> f.read()\n<span class=\"pl-k\">with</span> <span class=\"pl-c1\">open</span>(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>predict_net.pb<span class=\"pl-pds\">\"</span></span>,<span class=\"pl-s\"><span class=\"pl-pds\">'</span>rb<span class=\"pl-pds\">'</span></span>) <span class=\"pl-k\">as</span> f:\n    predict_net <span class=\"pl-k\">=</span> f.read()\n\ninit_net.RunAllOnGPU() <span class=\"pl-c\"><span class=\"pl-c\">#</span> Added this line.</span>\npredict_net.RunAllOnGPU() <span class=\"pl-c\"><span class=\"pl-c\">#</span> Added this line.</span>\n\np <span class=\"pl-k\">=</span> workspace.Predictor(init_net, predict_net)\nimg <span class=\"pl-k\">=</span> np.random.randn(<span class=\"pl-c1\">1</span>, <span class=\"pl-c1\">3</span>, <span class=\"pl-c1\">128</span>, <span class=\"pl-c1\">128</span>).astype(np.float32)\nout <span class=\"pl-k\">=</span> p.run([img])</pre></div>", "body_text": "Could you try this?\nwith open(\"init_net.pb\",'rb') as f:\n    init_net = f.read()\nwith open(\"predict_net.pb\",'rb') as f:\n    predict_net = f.read()\n\ninit_net.RunAllOnGPU() # Added this line.\npredict_net.RunAllOnGPU() # Added this line.\n\np = workspace.Predictor(init_net, predict_net)\nimg = np.random.randn(1, 3, 128, 128).astype(np.float32)\nout = p.run([img])", "body": "Could you try this?\r\n\r\n```python\r\nwith open(\"init_net.pb\",'rb') as f:\r\n    init_net = f.read()\r\nwith open(\"predict_net.pb\",'rb') as f:\r\n    predict_net = f.read()\r\n\r\ninit_net.RunAllOnGPU() # Added this line.\r\npredict_net.RunAllOnGPU() # Added this line.\r\n\r\np = workspace.Predictor(init_net, predict_net)\r\nimg = np.random.randn(1, 3, 128, 128).astype(np.float32)\r\nout = p.run([img])\r\n```"}