{"url": "https://api.github.com/repos/pytorch/pytorch/issues/comments/408093023", "html_url": "https://github.com/pytorch/pytorch/pull/9628#issuecomment-408093023", "issue_url": "https://api.github.com/repos/pytorch/pytorch/issues/9628", "id": 408093023, "node_id": "MDEyOklzc3VlQ29tbWVudDQwODA5MzAyMw==", "user": {"login": "t-vi", "id": 20787943, "node_id": "MDQ6VXNlcjIwNzg3OTQz", "avatar_url": "https://avatars2.githubusercontent.com/u/20787943?v=4", "gravatar_id": "", "url": "https://api.github.com/users/t-vi", "html_url": "https://github.com/t-vi", "followers_url": "https://api.github.com/users/t-vi/followers", "following_url": "https://api.github.com/users/t-vi/following{/other_user}", "gists_url": "https://api.github.com/users/t-vi/gists{/gist_id}", "starred_url": "https://api.github.com/users/t-vi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/t-vi/subscriptions", "organizations_url": "https://api.github.com/users/t-vi/orgs", "repos_url": "https://api.github.com/users/t-vi/repos", "events_url": "https://api.github.com/users/t-vi/events{/privacy}", "received_events_url": "https://api.github.com/users/t-vi/received_events", "type": "User", "site_admin": false}, "created_at": "2018-07-26T13:14:25Z", "updated_at": "2018-07-26T13:14:25Z", "author_association": "CONTRIBUTOR", "body_html": "<p>So, it seems that things are converging: Some questions</p>\n<ul>\n<li>Is the use of atomicAdd OK (regarding nondeterminism)?</li>\n<li>Is it true that the targets for cudnn are on the CPU? <a href=\"https://docs.nvidia.com/deeplearning/sdk/cudnn-developer-guide/index.html#cudnnCTCLoss\" rel=\"nofollow\">The documentation</a> doesn't explicitly say, but I took that I need to pass a typed pointer and no descriptor as a sign.</li>\n<li>Currently we silently move to cuda whenever we detect something unfit for cudnn. Is that OK or will it confuse users?</li>\n<li>For the test reference implementation: I skipped the \"move to logspace\". Is that OK? So far the tests seem to pass.</li>\n</ul>\n<p>While one can always add more optimizations (and it's kind of fun, too), I think the above are the top questions I could use your input on.</p>", "body_text": "So, it seems that things are converging: Some questions\n\nIs the use of atomicAdd OK (regarding nondeterminism)?\nIs it true that the targets for cudnn are on the CPU? The documentation doesn't explicitly say, but I took that I need to pass a typed pointer and no descriptor as a sign.\nCurrently we silently move to cuda whenever we detect something unfit for cudnn. Is that OK or will it confuse users?\nFor the test reference implementation: I skipped the \"move to logspace\". Is that OK? So far the tests seem to pass.\n\nWhile one can always add more optimizations (and it's kind of fun, too), I think the above are the top questions I could use your input on.", "body": "So, it seems that things are converging: Some questions\r\n- Is the use of atomicAdd OK (regarding nondeterminism)?\r\n- Is it true that the targets for cudnn are on the CPU? [The documentation](https://docs.nvidia.com/deeplearning/sdk/cudnn-developer-guide/index.html#cudnnCTCLoss) doesn't explicitly say, but I took that I need to pass a typed pointer and no descriptor as a sign.\r\n- Currently we silently move to cuda whenever we detect something unfit for cudnn. Is that OK or will it confuse users?\r\n- For the test reference implementation: I skipped the \"move to logspace\". Is that OK? So far the tests seem to pass.\r\n\r\nWhile one can always add more optimizations (and it's kind of fun, too), I think the above are the top questions I could use your input on."}