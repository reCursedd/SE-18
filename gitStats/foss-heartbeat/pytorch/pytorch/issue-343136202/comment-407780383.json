{"url": "https://api.github.com/repos/pytorch/pytorch/issues/comments/407780383", "html_url": "https://github.com/pytorch/pytorch/pull/9628#issuecomment-407780383", "issue_url": "https://api.github.com/repos/pytorch/pytorch/issues/9628", "id": 407780383, "node_id": "MDEyOklzc3VlQ29tbWVudDQwNzc4MDM4Mw==", "user": {"login": "t-vi", "id": 20787943, "node_id": "MDQ6VXNlcjIwNzg3OTQz", "avatar_url": "https://avatars2.githubusercontent.com/u/20787943?v=4", "gravatar_id": "", "url": "https://api.github.com/users/t-vi", "html_url": "https://github.com/t-vi", "followers_url": "https://api.github.com/users/t-vi/followers", "following_url": "https://api.github.com/users/t-vi/following{/other_user}", "gists_url": "https://api.github.com/users/t-vi/gists{/gist_id}", "starred_url": "https://api.github.com/users/t-vi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/t-vi/subscriptions", "organizations_url": "https://api.github.com/users/t-vi/orgs", "repos_url": "https://api.github.com/users/t-vi/repos", "events_url": "https://api.github.com/users/t-vi/events{/privacy}", "received_events_url": "https://api.github.com/users/t-vi/received_events", "type": "User", "site_admin": false}, "created_at": "2018-07-25T14:45:44Z", "updated_at": "2018-07-25T14:45:44Z", "author_association": "CONTRIBUTOR", "body_html": "<p>I'm still working on incorporating Simon's feedback and the tests, but I wanted to push the cuda updates.</p>\n<p>So for small to medium batch sizes we still are slower than CuDNN, but I don't think it's unreasonably slow. For large batch sizes, we are actually pretty fast. The deviation between cuda and cudnn is of order 1e-4 in the gradients. I haven't checked who is closer to the true value (by comparing to the full-log-space-results with double).</p>\n<p>I still need to do the tests. I might yet merge the beta calculation into that of alpha for cuda, as I think that would give some speedup. Also writing a kernel for the larger bits of the gradient calculations currently done in ATen is on my list of potential speedups.</p>", "body_text": "I'm still working on incorporating Simon's feedback and the tests, but I wanted to push the cuda updates.\nSo for small to medium batch sizes we still are slower than CuDNN, but I don't think it's unreasonably slow. For large batch sizes, we are actually pretty fast. The deviation between cuda and cudnn is of order 1e-4 in the gradients. I haven't checked who is closer to the true value (by comparing to the full-log-space-results with double).\nI still need to do the tests. I might yet merge the beta calculation into that of alpha for cuda, as I think that would give some speedup. Also writing a kernel for the larger bits of the gradient calculations currently done in ATen is on my list of potential speedups.", "body": "I'm still working on incorporating Simon's feedback and the tests, but I wanted to push the cuda updates.\r\n\r\nSo for small to medium batch sizes we still are slower than CuDNN, but I don't think it's unreasonably slow. For large batch sizes, we are actually pretty fast. The deviation between cuda and cudnn is of order 1e-4 in the gradients. I haven't checked who is closer to the true value (by comparing to the full-log-space-results with double).\r\n\r\nI still need to do the tests. I might yet merge the beta calculation into that of alpha for cuda, as I think that would give some speedup. Also writing a kernel for the larger bits of the gradient calculations currently done in ATen is on my list of potential speedups.\r\n"}