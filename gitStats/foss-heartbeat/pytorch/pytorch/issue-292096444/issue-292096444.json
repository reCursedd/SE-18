{"url": "https://api.github.com/repos/pytorch/pytorch/issues/4892", "repository_url": "https://api.github.com/repos/pytorch/pytorch", "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/4892/labels{/name}", "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/4892/comments", "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/4892/events", "html_url": "https://github.com/pytorch/pytorch/pull/4892", "id": 292096444, "node_id": "MDExOlB1bGxSZXF1ZXN0MTY1NTA1OTIz", "number": 4892, "title": "Fix visibility of AT_CUDA_ENABLED", "user": {"login": "goldsborough", "id": 6429851, "node_id": "MDQ6VXNlcjY0Mjk4NTE=", "avatar_url": "https://avatars3.githubusercontent.com/u/6429851?v=4", "gravatar_id": "", "url": "https://api.github.com/users/goldsborough", "html_url": "https://github.com/goldsborough", "followers_url": "https://api.github.com/users/goldsborough/followers", "following_url": "https://api.github.com/users/goldsborough/following{/other_user}", "gists_url": "https://api.github.com/users/goldsborough/gists{/gist_id}", "starred_url": "https://api.github.com/users/goldsborough/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/goldsborough/subscriptions", "organizations_url": "https://api.github.com/users/goldsborough/orgs", "repos_url": "https://api.github.com/users/goldsborough/repos", "events_url": "https://api.github.com/users/goldsborough/events{/privacy}", "received_events_url": "https://api.github.com/users/goldsborough/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2018-01-27T06:35:06Z", "updated_at": "2018-11-23T15:38:39Z", "closed_at": "2018-01-28T01:59:31Z", "author_association": "CONTRIBUTOR", "pull_request": {"url": "https://api.github.com/repos/pytorch/pytorch/pulls/4892", "html_url": "https://github.com/pytorch/pytorch/pull/4892", "diff_url": "https://github.com/pytorch/pytorch/pull/4892.diff", "patch_url": "https://github.com/pytorch/pytorch/pull/4892.patch"}, "body_html": "<p>While working on <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load issue title\" data-id=\"291005051\" data-permission-text=\"Issue title is private\" data-url=\"https://github.com/pytorch/pytorch/issues/4818\" data-hovercard-type=\"pull_request\" data-hovercard-url=\"/pytorch/pytorch/pull/4818/hovercard\" href=\"https://github.com/pytorch/pytorch/pull/4818\">#4818</a>, we noticed that ATen can not be compiled on a CUDA platform without including CUDA headers, because various header files included <code>ATen/Config.h</code> and used <code>AT_CUDA_ENABLED</code>. <a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=370202\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/zdevito\">@zdevito</a> mentioned that this is actually a problem, since ATen's public API should be compileable without CUDA.</p>\n<p>To fix this, I had to move the inclusion of <code>ATen/Config.h</code> and CUDA-specific code from header files into implementation files. The main problem with this was that we were previously defining implicit conversions from <code>at::Half</code> to CUDA's <code>half</code> via <code>Half::operator half()</code>. Since our aim is to not use <code>AT_CUDA_ENABLED</code> in header files, we can't define this implicit conversion inside <code>at::Half</code> anymore. This, in turn, means that certain function calls in generated code would no longer compile, since it relied on <code>half</code> converting to <code>at::Half</code> and vice-versa, implicitly. To solve this, I had to modify the codegen to insert explicit conversions via <code>at::convert</code>.</p>\n<p>Further, to verify that future modifications don't regress on this guarantee that ATen's public API can be compiled without including CUDA, I've added a test <code>verify_api_visibility.cpp</code> which only includes <code>ATen/ATen.h</code> and will error if <code>AT_CUDA_ENABLED</code> is defined.</p>\n<p>This is blocking <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load issue title\" data-id=\"291005051\" data-permission-text=\"Issue title is private\" data-url=\"https://github.com/pytorch/pytorch/issues/4818\" data-hovercard-type=\"pull_request\" data-hovercard-url=\"/pytorch/pytorch/pull/4818/hovercard\" href=\"https://github.com/pytorch/pytorch/pull/4818\">#4818</a> and <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load issue title\" data-id=\"291470701\" data-permission-text=\"Issue title is private\" data-url=\"https://github.com/pytorch/pytorch/issues/4842\" data-hovercard-type=\"pull_request\" data-hovercard-url=\"/pytorch/pytorch/pull/4842/hovercard\" href=\"https://github.com/pytorch/pytorch/pull/4842\">#4842</a>.</p>\n<p><a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=370202\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/zdevito\">@zdevito</a> <a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=4583066\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/apaszke\">@apaszke</a> <a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=1310570\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/soumith\">@soumith</a> <a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=655866\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/colesbury\">@colesbury</a></p>", "body_text": "While working on #4818, we noticed that ATen can not be compiled on a CUDA platform without including CUDA headers, because various header files included ATen/Config.h and used AT_CUDA_ENABLED. @zdevito mentioned that this is actually a problem, since ATen's public API should be compileable without CUDA.\nTo fix this, I had to move the inclusion of ATen/Config.h and CUDA-specific code from header files into implementation files. The main problem with this was that we were previously defining implicit conversions from at::Half to CUDA's half via Half::operator half(). Since our aim is to not use AT_CUDA_ENABLED in header files, we can't define this implicit conversion inside at::Half anymore. This, in turn, means that certain function calls in generated code would no longer compile, since it relied on half converting to at::Half and vice-versa, implicitly. To solve this, I had to modify the codegen to insert explicit conversions via at::convert.\nFurther, to verify that future modifications don't regress on this guarantee that ATen's public API can be compiled without including CUDA, I've added a test verify_api_visibility.cpp which only includes ATen/ATen.h and will error if AT_CUDA_ENABLED is defined.\nThis is blocking #4818 and #4842.\n@zdevito @apaszke @soumith @colesbury", "body": "While working on https://github.com/pytorch/pytorch/pull/4818, we noticed that ATen can not be compiled on a CUDA platform without including CUDA headers, because various header files included `ATen/Config.h` and used `AT_CUDA_ENABLED`. @zdevito mentioned that this is actually a problem, since ATen's public API should be compileable without CUDA.\r\n\r\nTo fix this, I had to move the inclusion of `ATen/Config.h` and CUDA-specific code from header files into implementation files. The main problem with this was that we were previously defining implicit conversions from `at::Half` to CUDA's `half` via `Half::operator half()`. Since our aim is to not use `AT_CUDA_ENABLED` in header files, we can't define this implicit conversion inside `at::Half` anymore. This, in turn, means that certain function calls in generated code would no longer compile, since it relied on `half` converting to `at::Half` and vice-versa, implicitly. To solve this, I had to modify the codegen to insert explicit conversions via `at::convert`.\r\n\r\nFurther, to verify that future modifications don't regress on this guarantee that ATen's public API can be compiled without including CUDA, I've added a test `verify_api_visibility.cpp` which only includes `ATen/ATen.h` and will error if `AT_CUDA_ENABLED` is defined.\r\n\r\nThis is blocking https://github.com/pytorch/pytorch/pull/4818 and https://github.com/pytorch/pytorch/pull/4842.\r\n\r\n@zdevito @apaszke @soumith @colesbury "}