{"url": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/162847816", "pull_request_review_id": 90368820, "id": 162847816, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE2Mjg0NzgxNg==", "diff_hunk": "@@ -12,4 +12,21 @@ namespace torch { namespace jit {\n // (aka backward) of inputs to the first stage w.r.t. the outputs of the first stage.\n void differentiate(std::shared_ptr<Graph>& graph);\n \n+using value_list = std::vector<Value*>;\n+struct LiftedReverse {\n+  std::shared_ptr<Graph> f;\n+  std::shared_ptr<Graph> df;\n+\n+  // See liftLambdaReverse for a detailed overview of the structure of\n+  // f's outputs and df's inputs. The gist of it is that:\n+  // - f_output_intermediates describes how many temporaries were appended to outputs of f\n+  //   (because they are needed by df; they should be discarded before returning f's outputs)\n+  // - df_input_captures describes which outputs of f to capture and later provide\n+  //   as first df_input_captures.size() inputs to df (with trailing inputs being\n+  //   vjps aka grad outputs).\n+  std::size_t f_output_intermediates;\n+  std::vector<std::size_t> df_input_captures;", "path": "torch/csrc/jit/autodiff.h", "position": null, "original_position": 17, "commit_id": "a41b11143e2fad09918cf66d0a60216e9ab83f5a", "original_commit_id": "5914745b88ea6b541561f1889baf268a67443a17", "user": {"login": "ezyang", "id": 13564, "node_id": "MDQ6VXNlcjEzNTY0", "avatar_url": "https://avatars0.githubusercontent.com/u/13564?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ezyang", "html_url": "https://github.com/ezyang", "followers_url": "https://api.github.com/users/ezyang/followers", "following_url": "https://api.github.com/users/ezyang/following{/other_user}", "gists_url": "https://api.github.com/users/ezyang/gists{/gist_id}", "starred_url": "https://api.github.com/users/ezyang/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ezyang/subscriptions", "organizations_url": "https://api.github.com/users/ezyang/orgs", "repos_url": "https://api.github.com/users/ezyang/repos", "events_url": "https://api.github.com/users/ezyang/events{/privacy}", "received_events_url": "https://api.github.com/users/ezyang/received_events", "type": "User", "site_admin": false}, "body": "aka `captured_inputs`, in the pseudocode. But I am a bit confused; don't you also need input captures? Unless you are making `f` forward those through but then that needs to be remarked upon here.", "created_at": "2018-01-22T04:36:25Z", "updated_at": "2018-11-23T15:38:23Z", "html_url": "https://github.com/pytorch/pytorch/pull/4759#discussion_r162847816", "pull_request_url": "https://api.github.com/repos/pytorch/pytorch/pulls/4759", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/162847816"}, "html": {"href": "https://github.com/pytorch/pytorch/pull/4759#discussion_r162847816"}, "pull_request": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/4759"}}, "body_html": "<p>aka <code>captured_inputs</code>, in the pseudocode. But I am a bit confused; don't you also need input captures? Unless you are making <code>f</code> forward those through but then that needs to be remarked upon here.</p>", "body_text": "aka captured_inputs, in the pseudocode. But I am a bit confused; don't you also need input captures? Unless you are making f forward those through but then that needs to be remarked upon here."}