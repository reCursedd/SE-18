{"url": "https://api.github.com/repos/pytorch/pytorch/issues/comments/359242838", "html_url": "https://github.com/pytorch/pytorch/pull/4759#issuecomment-359242838", "issue_url": "https://api.github.com/repos/pytorch/pytorch/issues/4759", "id": 359242838, "node_id": "MDEyOklzc3VlQ29tbWVudDM1OTI0MjgzOA==", "user": {"login": "apaszke", "id": 4583066, "node_id": "MDQ6VXNlcjQ1ODMwNjY=", "avatar_url": "https://avatars3.githubusercontent.com/u/4583066?v=4", "gravatar_id": "", "url": "https://api.github.com/users/apaszke", "html_url": "https://github.com/apaszke", "followers_url": "https://api.github.com/users/apaszke/followers", "following_url": "https://api.github.com/users/apaszke/following{/other_user}", "gists_url": "https://api.github.com/users/apaszke/gists{/gist_id}", "starred_url": "https://api.github.com/users/apaszke/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/apaszke/subscriptions", "organizations_url": "https://api.github.com/users/apaszke/orgs", "repos_url": "https://api.github.com/users/apaszke/repos", "events_url": "https://api.github.com/users/apaszke/events{/privacy}", "received_events_url": "https://api.github.com/users/apaszke/received_events", "type": "User", "site_admin": false}, "created_at": "2018-01-21T11:55:10Z", "updated_at": "2018-01-21T11:57:27Z", "author_association": "MEMBER", "body_html": "<p>One of the reasons why I wrote it this way, is exactly because the pseudo code is quite large by itself, and I didn't see a reason to shoehorn all of that AD stuff in the middle of it. Also, I think it's nice to keep the separation between <code>differentiate</code> and <code>lambdaLiftReverse</code> - I think this is our 3rd iteration of the JIT, so I wouldn't like to overspecialize to it right from the start. This way of writing the code makes it easier to plug in to other components, which might be needed in the future.</p>\n<p>I'd imagine that we will take these functions and later write a small helper that calls them and packs the data into the <code>Gradient</code> struct that can be understood by the other components.</p>", "body_text": "One of the reasons why I wrote it this way, is exactly because the pseudo code is quite large by itself, and I didn't see a reason to shoehorn all of that AD stuff in the middle of it. Also, I think it's nice to keep the separation between differentiate and lambdaLiftReverse - I think this is our 3rd iteration of the JIT, so I wouldn't like to overspecialize to it right from the start. This way of writing the code makes it easier to plug in to other components, which might be needed in the future.\nI'd imagine that we will take these functions and later write a small helper that calls them and packs the data into the Gradient struct that can be understood by the other components.", "body": "One of the reasons why I wrote it this way, is exactly because the pseudo code is quite large by itself, and I didn't see a reason to shoehorn all of that AD stuff in the middle of it. Also, I think it's nice to keep the separation between `differentiate` and `lambdaLiftReverse` - I think this is our 3rd iteration of the JIT, so I wouldn't like to overspecialize to it right from the start. This way of writing the code makes it easier to plug in to other components, which might be needed in the future.\r\n\r\nI'd imagine that we will take these functions and later write a small helper that calls them and packs the data into the `Gradient` struct that can be understood by the other components."}