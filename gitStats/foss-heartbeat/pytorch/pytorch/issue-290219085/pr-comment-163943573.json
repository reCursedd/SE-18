{"url": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/163943573", "pull_request_review_id": 91641044, "id": 163943573, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE2Mzk0MzU3Mw==", "diff_hunk": "@@ -34,38 +45,227 @@ static std::vector<Value*> gradientForNode(Node* node, ArrayRef<Value*> grad_val\n   return fmap(sym_grads, [](const SymbolicVariable &v) { return v.value(); });\n }\n \n-void differentiate(std::shared_ptr<Graph>& graph) {\n-  JIT_ASSERT(graph->stage() == 0);\n-  graph->advanceStage();\n+static value_map addReverseInline(Graph& graph, Gradient& grad_desc) {\n+  JIT_ASSERT(graph.stage() == 0);\n+  graph.advanceStage();\n+\n+  value_map grad_map; // x -> dx mapping\n+  const auto get_grad = [&](Value* v) { return grad_map.at(v); };\n \n-  std::unordered_map<Value*, Value*> grad_map; // x -> dx mapping\n-  const auto get_grad = [&](Value* v) { return grad_map[v]; };\n-  for (auto output : graph->outputs())\n-    grad_map[output] = graph->addInput()->setType(output->typeOption());\n+  auto outputs = graph.outputs();\n+  for (std::size_t i = 0, num_outputs = outputs.size(); i < num_outputs; ++i) {\n+    Value * output = outputs[i];\n+    Value * output_grad = graph.addInput()->setType(output->typeOption());\n+    if (grad_map.count(output) > 0) {", "path": "torch/csrc/jit/autodiff.cpp", "position": null, "original_position": 42, "commit_id": "a41b11143e2fad09918cf66d0a60216e9ab83f5a", "original_commit_id": "92ae73f02b10180b6d52538f1409be67cb6cb0a4", "user": {"login": "zdevito", "id": 370202, "node_id": "MDQ6VXNlcjM3MDIwMg==", "avatar_url": "https://avatars0.githubusercontent.com/u/370202?v=4", "gravatar_id": "", "url": "https://api.github.com/users/zdevito", "html_url": "https://github.com/zdevito", "followers_url": "https://api.github.com/users/zdevito/followers", "following_url": "https://api.github.com/users/zdevito/following{/other_user}", "gists_url": "https://api.github.com/users/zdevito/gists{/gist_id}", "starred_url": "https://api.github.com/users/zdevito/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/zdevito/subscriptions", "organizations_url": "https://api.github.com/users/zdevito/orgs", "repos_url": "https://api.github.com/users/zdevito/repos", "events_url": "https://api.github.com/users/zdevito/events{/privacy}", "received_events_url": "https://api.github.com/users/zdevito/received_events", "type": "User", "site_admin": false}, "body": "This logic seems duplicated below ([duplicated note]). Can we refactor this into a simple function?", "created_at": "2018-01-25T19:26:22Z", "updated_at": "2018-11-23T15:38:35Z", "html_url": "https://github.com/pytorch/pytorch/pull/4759#discussion_r163943573", "pull_request_url": "https://api.github.com/repos/pytorch/pytorch/pulls/4759", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/163943573"}, "html": {"href": "https://github.com/pytorch/pytorch/pull/4759#discussion_r163943573"}, "pull_request": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/4759"}}, "body_html": "<p>This logic seems duplicated below ([duplicated note]). Can we refactor this into a simple function?</p>", "body_text": "This logic seems duplicated below ([duplicated note]). Can we refactor this into a simple function?"}