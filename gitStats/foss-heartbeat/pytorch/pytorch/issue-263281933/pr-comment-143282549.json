{"url": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/143282549", "pull_request_review_id": 67778283, "id": 143282549, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE0MzI4MjU0OQ==", "diff_hunk": "@@ -543,6 +517,19 @@ def _flatten(obj, params=tuple()):\n     return obj_vars, obj_struct\n \n \n+def _clone_inputs(args):\n+    def clone_input(a):\n+        if isinstance(a, Variable):\n+            v = Variable(a.data.clone(), requires_grad=a.requires_grad, volatile=a.volatile)\n+            if a.grad is not None:\n+                v.grad = a.grad.clone()", "path": "torch/jit/__init__.py", "position": null, "original_position": 135, "commit_id": "672a20149aada1a999056fd6074d3726fe8b1d8d", "original_commit_id": "7735ba1f8eabf3506cfc416fc04621266be7fbec", "user": {"login": "ezyang", "id": 13564, "node_id": "MDQ6VXNlcjEzNTY0", "avatar_url": "https://avatars0.githubusercontent.com/u/13564?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ezyang", "html_url": "https://github.com/ezyang", "followers_url": "https://api.github.com/users/ezyang/followers", "following_url": "https://api.github.com/users/ezyang/following{/other_user}", "gists_url": "https://api.github.com/users/ezyang/gists{/gist_id}", "starred_url": "https://api.github.com/users/ezyang/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ezyang/subscriptions", "organizations_url": "https://api.github.com/users/ezyang/orgs", "repos_url": "https://api.github.com/users/ezyang/repos", "events_url": "https://api.github.com/users/ezyang/events{/privacy}", "received_events_url": "https://api.github.com/users/ezyang/received_events", "type": "User", "site_admin": false}, "body": "The assignment is fine:\r\n\r\n```\r\n  {\"_grad\", (getter)THPVariable_get_grad, (setter)THPVariable_set_grad, NULL, NULL}, // only for legacy reasons \r\n  {\"grad\", (getter)THPVariable_get_grad, (setter)THPVariable_set_grad, NULL, NULL},\r\n```\r\n\r\nBut I'll recursively call `clone_input` to handle `v.grad`.", "created_at": "2017-10-06T20:00:00Z", "updated_at": "2018-11-23T15:35:05Z", "html_url": "https://github.com/pytorch/pytorch/pull/2995#discussion_r143282549", "pull_request_url": "https://api.github.com/repos/pytorch/pytorch/pulls/2995", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/143282549"}, "html": {"href": "https://github.com/pytorch/pytorch/pull/2995#discussion_r143282549"}, "pull_request": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/2995"}}, "body_html": "<p>The assignment is fine:</p>\n<pre><code>  {\"_grad\", (getter)THPVariable_get_grad, (setter)THPVariable_set_grad, NULL, NULL}, // only for legacy reasons \n  {\"grad\", (getter)THPVariable_get_grad, (setter)THPVariable_set_grad, NULL, NULL},\n</code></pre>\n<p>But I'll recursively call <code>clone_input</code> to handle <code>v.grad</code>.</p>", "body_text": "The assignment is fine:\n  {\"_grad\", (getter)THPVariable_get_grad, (setter)THPVariable_set_grad, NULL, NULL}, // only for legacy reasons \n  {\"grad\", (getter)THPVariable_get_grad, (setter)THPVariable_set_grad, NULL, NULL},\n\nBut I'll recursively call clone_input to handle v.grad.", "in_reply_to_id": 143153838}