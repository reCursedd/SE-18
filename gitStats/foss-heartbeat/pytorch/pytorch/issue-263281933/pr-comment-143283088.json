{"url": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/143283088", "pull_request_review_id": 67778895, "id": 143283088, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE0MzI4MzA4OA==", "diff_hunk": "@@ -580,5 +567,85 @@ def _time(trace_name, name, time=True):\n         print(\"{} {} time: {} ms\".format(trace_name, name, start.elapsed_time(end)))\n \n \n+def verify(model, args, loss_fn=torch.sum, devices=None):\n+    \"\"\"\n+    Verify that a JIT compiled model has the same behavior as its uncompiled\n+    version along with its backwards pass.\n+\n+    This function has side-effects (e.g., it executes your model / saves and loads\n+    parameters), so don't expect the model to come out exactly the same as what\n+    you passed in.", "path": "torch/jit/__init__.py", "position": null, "original_position": 157, "commit_id": "672a20149aada1a999056fd6074d3726fe8b1d8d", "original_commit_id": "7735ba1f8eabf3506cfc416fc04621266be7fbec", "user": {"login": "ezyang", "id": 13564, "node_id": "MDQ6VXNlcjEzNTY0", "avatar_url": "https://avatars0.githubusercontent.com/u/13564?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ezyang", "html_url": "https://github.com/ezyang", "followers_url": "https://api.github.com/users/ezyang/followers", "following_url": "https://api.github.com/users/ezyang/following{/other_user}", "gists_url": "https://api.github.com/users/ezyang/gists{/gist_id}", "starred_url": "https://api.github.com/users/ezyang/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ezyang/subscriptions", "organizations_url": "https://api.github.com/users/ezyang/orgs", "repos_url": "https://api.github.com/users/ezyang/repos", "events_url": "https://api.github.com/users/ezyang/events{/privacy}", "received_events_url": "https://api.github.com/users/ezyang/received_events", "type": "User", "site_admin": false}, "body": "So, the saving/loading parameters is done *solely* so that we can rerun the model with the compiled trace, but otherwise same initial conditions; we're not actually resetting the model to the very original parameter setting. We could do this (so that it has \"no side effects\") but there is more work to do; for example, you would have to save and restore the state of all the grads, and it just seems like complication for no good reason.\r\n\r\nOne thing to note is switching model to `eval` does NOT make sense, because a user may very well be interested in knowing that the model runs in training mode the same as compiled and as not.", "created_at": "2017-10-06T20:02:50Z", "updated_at": "2018-11-23T15:35:05Z", "html_url": "https://github.com/pytorch/pytorch/pull/2995#discussion_r143283088", "pull_request_url": "https://api.github.com/repos/pytorch/pytorch/pulls/2995", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/143283088"}, "html": {"href": "https://github.com/pytorch/pytorch/pull/2995#discussion_r143283088"}, "pull_request": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/2995"}}, "body_html": "<p>So, the saving/loading parameters is done <em>solely</em> so that we can rerun the model with the compiled trace, but otherwise same initial conditions; we're not actually resetting the model to the very original parameter setting. We could do this (so that it has \"no side effects\") but there is more work to do; for example, you would have to save and restore the state of all the grads, and it just seems like complication for no good reason.</p>\n<p>One thing to note is switching model to <code>eval</code> does NOT make sense, because a user may very well be interested in knowing that the model runs in training mode the same as compiled and as not.</p>", "body_text": "So, the saving/loading parameters is done solely so that we can rerun the model with the compiled trace, but otherwise same initial conditions; we're not actually resetting the model to the very original parameter setting. We could do this (so that it has \"no side effects\") but there is more work to do; for example, you would have to save and restore the state of all the grads, and it just seems like complication for no good reason.\nOne thing to note is switching model to eval does NOT make sense, because a user may very well be interested in knowing that the model runs in training mode the same as compiled and as not.", "in_reply_to_id": 143154152}