{"url": "https://api.github.com/repos/pytorch/pytorch/issues/comments/385364865", "html_url": "https://github.com/pytorch/pytorch/issues/7079#issuecomment-385364865", "issue_url": "https://api.github.com/repos/pytorch/pytorch/issues/7079", "id": 385364865, "node_id": "MDEyOklzc3VlQ29tbWVudDM4NTM2NDg2NQ==", "user": {"login": "JimLee1996", "id": 15334330, "node_id": "MDQ6VXNlcjE1MzM0MzMw", "avatar_url": "https://avatars2.githubusercontent.com/u/15334330?v=4", "gravatar_id": "", "url": "https://api.github.com/users/JimLee1996", "html_url": "https://github.com/JimLee1996", "followers_url": "https://api.github.com/users/JimLee1996/followers", "following_url": "https://api.github.com/users/JimLee1996/following{/other_user}", "gists_url": "https://api.github.com/users/JimLee1996/gists{/gist_id}", "starred_url": "https://api.github.com/users/JimLee1996/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/JimLee1996/subscriptions", "organizations_url": "https://api.github.com/users/JimLee1996/orgs", "repos_url": "https://api.github.com/users/JimLee1996/repos", "events_url": "https://api.github.com/users/JimLee1996/events{/privacy}", "received_events_url": "https://api.github.com/users/JimLee1996/received_events", "type": "User", "site_admin": false}, "created_at": "2018-04-30T10:47:29Z", "updated_at": "2018-04-30T10:47:29Z", "author_association": "NONE", "body_html": "<h2>update</h2>\n<p>It's fine to assign,</p>\n<div class=\"highlight highlight-source-python\"><pre><span class=\"pl-k\">import</span> numpy <span class=\"pl-k\">as</span> np\n<span class=\"pl-k\">import</span> torch\n\na <span class=\"pl-k\">=</span> np.random.randn(<span class=\"pl-c1\">41</span>, <span class=\"pl-c1\">288</span>, <span class=\"pl-c1\">360</span>, <span class=\"pl-c1\">3</span>)\naa <span class=\"pl-k\">=</span> torch.from_numpy(a)\n\nb <span class=\"pl-k\">=</span> np.random.randint(<span class=\"pl-c1\">10</span>, <span class=\"pl-v\">size</span><span class=\"pl-k\">=</span>(<span class=\"pl-c1\">41</span>, <span class=\"pl-c1\">288</span>, <span class=\"pl-c1\">360</span>, <span class=\"pl-c1\">3</span>))\nbb<span class=\"pl-k\">=</span> torch.from_numpy(b)</pre></div>\n<p>However, when printing</p>\n<div class=\"highlight highlight-source-python\"><pre><span class=\"pl-c\"><span class=\"pl-c\">#</span> normal</span>\n<span class=\"pl-c1\">print</span>(aa)\n\n<span class=\"pl-c\"><span class=\"pl-c\">#</span> ......</span>\n<span class=\"pl-c1\">print</span>(bb)</pre></div>\n<p>Maybe it will have no effect on program performance.</p>", "body_text": "update\nIt's fine to assign,\nimport numpy as np\nimport torch\n\na = np.random.randn(41, 288, 360, 3)\naa = torch.from_numpy(a)\n\nb = np.random.randint(10, size=(41, 288, 360, 3))\nbb= torch.from_numpy(b)\nHowever, when printing\n# normal\nprint(aa)\n\n# ......\nprint(bb)\nMaybe it will have no effect on program performance.", "body": "## update\r\n\r\nIt's fine to assign,\r\n\r\n```python\r\nimport numpy as np\r\nimport torch\r\n\r\na = np.random.randn(41, 288, 360, 3)\r\naa = torch.from_numpy(a)\r\n\r\nb = np.random.randint(10, size=(41, 288, 360, 3))\r\nbb= torch.from_numpy(b)\r\n```\r\n\r\nHowever, when printing\r\n\r\n```python\r\n# normal\r\nprint(aa)\r\n\r\n# ......\r\nprint(bb)\r\n```\r\n\r\nMaybe it will have no effect on program performance."}