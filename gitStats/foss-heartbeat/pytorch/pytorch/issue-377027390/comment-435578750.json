{"url": "https://api.github.com/repos/pytorch/pytorch/issues/comments/435578750", "html_url": "https://github.com/pytorch/pytorch/issues/13540#issuecomment-435578750", "issue_url": "https://api.github.com/repos/pytorch/pytorch/issues/13540", "id": 435578750, "node_id": "MDEyOklzc3VlQ29tbWVudDQzNTU3ODc1MA==", "user": {"login": "albanD", "id": 6359743, "node_id": "MDQ6VXNlcjYzNTk3NDM=", "avatar_url": "https://avatars3.githubusercontent.com/u/6359743?v=4", "gravatar_id": "", "url": "https://api.github.com/users/albanD", "html_url": "https://github.com/albanD", "followers_url": "https://api.github.com/users/albanD/followers", "following_url": "https://api.github.com/users/albanD/following{/other_user}", "gists_url": "https://api.github.com/users/albanD/gists{/gist_id}", "starred_url": "https://api.github.com/users/albanD/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/albanD/subscriptions", "organizations_url": "https://api.github.com/users/albanD/orgs", "repos_url": "https://api.github.com/users/albanD/repos", "events_url": "https://api.github.com/users/albanD/events{/privacy}", "received_events_url": "https://api.github.com/users/albanD/received_events", "type": "User", "site_admin": false}, "created_at": "2018-11-03T10:57:47Z", "updated_at": "2018-11-03T10:57:47Z", "author_association": "COLLABORATOR", "body_html": "<p>Hi,</p>\n<ol start=\"2\">\n<li>\n<p><code>ctx.saved_tensor</code> always returns a tuple as you can see in the example <a href=\"https://pytorch.org/docs/stable/autograd.html#torch.autograd.Function\" rel=\"nofollow\">here</a>.</p>\n</li>\n<li>\n<p>From the doc <a href=\"https://pytorch.org/docs/stable/autograd.html#torch.autograd.gradcheck\" rel=\"nofollow\">here</a>, <code>torch.gradcheck</code> expects a tuple of inputs, so that is expected. To create a tuple, you need to do <code>(a,)</code> as <code>(a)</code> will just give a, not a tuple containing a. Maybe we should add an explicit check that the inputs is a tuple object.</p>\n</li>\n</ol>", "body_text": "Hi,\n\n\nctx.saved_tensor always returns a tuple as you can see in the example here.\n\n\nFrom the doc here, torch.gradcheck expects a tuple of inputs, so that is expected. To create a tuple, you need to do (a,) as (a) will just give a, not a tuple containing a. Maybe we should add an explicit check that the inputs is a tuple object.", "body": "Hi,\r\n\r\n2. `ctx.saved_tensor` always returns a tuple as you can see in the example [here](https://pytorch.org/docs/stable/autograd.html#torch.autograd.Function).\r\n\r\n3. From the doc [here](https://pytorch.org/docs/stable/autograd.html#torch.autograd.gradcheck), `torch.gradcheck` expects a tuple of inputs, so that is expected. To create a tuple, you need to do `(a,)` as `(a)` will just give a, not a tuple containing a. Maybe we should add an explicit check that the inputs is a tuple object."}