{"url": "https://api.github.com/repos/pytorch/pytorch/issues/comments/430451331", "html_url": "https://github.com/pytorch/pytorch/issues/12562#issuecomment-430451331", "issue_url": "https://api.github.com/repos/pytorch/pytorch/issues/12562", "id": 430451331, "node_id": "MDEyOklzc3VlQ29tbWVudDQzMDQ1MTMzMQ==", "user": {"login": "ezyang", "id": 13564, "node_id": "MDQ6VXNlcjEzNTY0", "avatar_url": "https://avatars0.githubusercontent.com/u/13564?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ezyang", "html_url": "https://github.com/ezyang", "followers_url": "https://api.github.com/users/ezyang/followers", "following_url": "https://api.github.com/users/ezyang/following{/other_user}", "gists_url": "https://api.github.com/users/ezyang/gists{/gist_id}", "starred_url": "https://api.github.com/users/ezyang/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ezyang/subscriptions", "organizations_url": "https://api.github.com/users/ezyang/orgs", "repos_url": "https://api.github.com/users/ezyang/repos", "events_url": "https://api.github.com/users/ezyang/events{/privacy}", "received_events_url": "https://api.github.com/users/ezyang/received_events", "type": "User", "site_admin": false}, "created_at": "2018-10-17T00:53:39Z", "updated_at": "2018-10-17T00:53:39Z", "author_association": "CONTRIBUTOR", "body_html": "<p>Yeah. Actually, a good first step is to just codegen out all of the wrapping code from native to THNN, but still use the native mechanism to generate the operators.</p>\n<p>Re <code>__mul__</code>, I don't actually know exactly how this works. But I guess if it's not in Declarations.yaml, we must be binding it by hand Python-side. I don't think we have plans to change this, but maybe we should?</p>", "body_text": "Yeah. Actually, a good first step is to just codegen out all of the wrapping code from native to THNN, but still use the native mechanism to generate the operators.\nRe __mul__, I don't actually know exactly how this works. But I guess if it's not in Declarations.yaml, we must be binding it by hand Python-side. I don't think we have plans to change this, but maybe we should?", "body": "Yeah. Actually, a good first step is to just codegen out all of the wrapping code from native to THNN, but still use the native mechanism to generate the operators.\r\n\r\nRe `__mul__`, I don't actually know exactly how this works. But I guess if it's not in Declarations.yaml, we must be binding it by hand Python-side. I don't think we have plans to change this, but maybe we should?"}