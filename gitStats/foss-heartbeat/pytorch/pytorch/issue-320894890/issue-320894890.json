{"url": "https://api.github.com/repos/pytorch/pytorch/issues/7342", "repository_url": "https://api.github.com/repos/pytorch/pytorch", "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/7342/labels{/name}", "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/7342/comments", "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/7342/events", "html_url": "https://github.com/pytorch/pytorch/issues/7342", "id": 320894890, "node_id": "MDU6SXNzdWUzMjA4OTQ4OTA=", "number": 7342, "title": "[feature request] [PyTorch] More flexible optimizer API", "user": {"login": "SsnL", "id": 5674597, "node_id": "MDQ6VXNlcjU2NzQ1OTc=", "avatar_url": "https://avatars2.githubusercontent.com/u/5674597?v=4", "gravatar_id": "", "url": "https://api.github.com/users/SsnL", "html_url": "https://github.com/SsnL", "followers_url": "https://api.github.com/users/SsnL/followers", "following_url": "https://api.github.com/users/SsnL/following{/other_user}", "gists_url": "https://api.github.com/users/SsnL/gists{/gist_id}", "starred_url": "https://api.github.com/users/SsnL/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/SsnL/subscriptions", "organizations_url": "https://api.github.com/users/SsnL/orgs", "repos_url": "https://api.github.com/users/SsnL/repos", "events_url": "https://api.github.com/users/SsnL/events{/privacy}", "received_events_url": "https://api.github.com/users/SsnL/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2018-05-07T17:52:11Z", "updated_at": "2018-05-09T16:07:53Z", "closed_at": null, "author_association": "CONTRIBUTOR", "body_html": "<p>Currently, there is no easy way to change the decay / momentum / lr for a parameter after constructing the optimizer. For example, it is hard to stop a parameter from being decayed in an iteration.</p>\n<p>Maybe we should support a getter/setter API like <code>optim.set(my_parameter, 'decay', 0)</code>.</p>", "body_text": "Currently, there is no easy way to change the decay / momentum / lr for a parameter after constructing the optimizer. For example, it is hard to stop a parameter from being decayed in an iteration.\nMaybe we should support a getter/setter API like optim.set(my_parameter, 'decay', 0).", "body": "Currently, there is no easy way to change the decay / momentum / lr for a parameter after constructing the optimizer. For example, it is hard to stop a parameter from being decayed in an iteration.\r\n\r\nMaybe we should support a getter/setter API like `optim.set(my_parameter, 'decay', 0)`."}