{"url": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/154826185", "pull_request_review_id": 81047503, "id": 154826185, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE1NDgyNjE4NQ==", "diff_hunk": "@@ -0,0 +1,107 @@\n+#include \"python_variable_numpy.h\"\n+\n+#ifndef WITH_NUMPY\n+namespace torch { namespace autograd {\n+PyObject * THPVariable_numpy(PyObject* pyself, PyObject* arg) {\n+  return PyErr_Format(PyExc_RuntimeError, \"PyTorch was compiled without NumPy support\");\n+}\n+}}\n+#else\n+\n+#include \"torch/csrc/Exceptions.h\"\n+#include \"torch/csrc/autograd/python_variable.h\"\n+\n+#include <ATen/ATen.h>\n+#include <memory>\n+#include <sstream>\n+#include <stdexcept>\n+\n+#define NO_IMPORT_ARRAY\n+#define PY_ARRAY_UNIQUE_SYMBOL __numpy_array_api\n+#define NPY_NO_DEPRECATED_API NPY_1_7_API_VERSION\n+#include <numpy/arrayobject.h>\n+\n+using namespace at;\n+\n+namespace torch { namespace autograd {\n+\n+static std::vector<npy_intp> cast_numpy(IntList x) {\n+  auto nelem = x.size();\n+  auto result = std::vector<npy_intp>(nelem);\n+  for (size_t i = 0; i < nelem; i++) {\n+    result[i] = static_cast<npy_intp>(x[i]);\n+  }\n+  return result;\n+}\n+\n+static int numpy_dtype(const at::Type& type);\n+\n+PyObject * THPVariable_numpy(PyObject* pyself, PyObject* arg) {\n+  HANDLE_TH_ERRORS\n+  auto& self = reinterpret_cast<THPVariable*>(pyself)->cdata;\n+  auto dtype = numpy_dtype(self.type());\n+  auto sizes = cast_numpy(self.sizes());\n+  auto strides = cast_numpy(self.strides());\n+  // NumPy strides use bytes. Torch strides use element counts.\n+  auto element_size_in_bytes = self.type().elementSizeInBytes();\n+  for (auto& stride : strides) {\n+    stride *= element_size_in_bytes;\n+  }\n+\n+  auto array = THPObjectPtr(PyArray_New(\n+      &PyArray_Type,\n+      self.dim(),\n+      sizes.data(),\n+      dtype,\n+      strides.data(),\n+      self.data_ptr(),\n+      0,\n+      NPY_ARRAY_ALIGNED | NPY_ARRAY_WRITEABLE | NPY_ARRAY_C_CONTIGUOUS,", "path": "torch/csrc/autograd/python_variable_numpy.cpp", "position": null, "original_position": 59, "commit_id": "33317ee5aa76c911730613a94d2765ce3ff717a4", "original_commit_id": "3ccc360a4d800674f9d65bcd076e8bf92b69469f", "user": {"login": "apaszke", "id": 4583066, "node_id": "MDQ6VXNlcjQ1ODMwNjY=", "avatar_url": "https://avatars3.githubusercontent.com/u/4583066?v=4", "gravatar_id": "", "url": "https://api.github.com/users/apaszke", "html_url": "https://github.com/apaszke", "followers_url": "https://api.github.com/users/apaszke/followers", "following_url": "https://api.github.com/users/apaszke/following{/other_user}", "gists_url": "https://api.github.com/users/apaszke/gists{/gist_id}", "starred_url": "https://api.github.com/users/apaszke/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/apaszke/subscriptions", "organizations_url": "https://api.github.com/users/apaszke/orgs", "repos_url": "https://api.github.com/users/apaszke/repos", "events_url": "https://api.github.com/users/apaszke/events{/privacy}", "received_events_url": "https://api.github.com/users/apaszke/received_events", "type": "User", "site_admin": false}, "body": "Why `C_CONTIGUOUS`? You're not guaranteed that in here", "created_at": "2017-12-05T01:37:34Z", "updated_at": "2018-11-23T15:37:05Z", "html_url": "https://github.com/pytorch/pytorch/pull/4006#discussion_r154826185", "pull_request_url": "https://api.github.com/repos/pytorch/pytorch/pulls/4006", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/154826185"}, "html": {"href": "https://github.com/pytorch/pytorch/pull/4006#discussion_r154826185"}, "pull_request": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/4006"}}, "body_html": "<p>Why <code>C_CONTIGUOUS</code>? You're not guaranteed that in here</p>", "body_text": "Why C_CONTIGUOUS? You're not guaranteed that in here"}