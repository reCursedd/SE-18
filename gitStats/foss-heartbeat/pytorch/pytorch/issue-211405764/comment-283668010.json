{"url": "https://api.github.com/repos/pytorch/pytorch/issues/comments/283668010", "html_url": "https://github.com/pytorch/pytorch/pull/903#issuecomment-283668010", "issue_url": "https://api.github.com/repos/pytorch/pytorch/issues/903", "id": 283668010, "node_id": "MDEyOklzc3VlQ29tbWVudDI4MzY2ODAxMA==", "user": {"login": "soumith", "id": 1310570, "node_id": "MDQ6VXNlcjEzMTA1NzA=", "avatar_url": "https://avatars0.githubusercontent.com/u/1310570?v=4", "gravatar_id": "", "url": "https://api.github.com/users/soumith", "html_url": "https://github.com/soumith", "followers_url": "https://api.github.com/users/soumith/followers", "following_url": "https://api.github.com/users/soumith/following{/other_user}", "gists_url": "https://api.github.com/users/soumith/gists{/gist_id}", "starred_url": "https://api.github.com/users/soumith/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/soumith/subscriptions", "organizations_url": "https://api.github.com/users/soumith/orgs", "repos_url": "https://api.github.com/users/soumith/repos", "events_url": "https://api.github.com/users/soumith/events{/privacy}", "received_events_url": "https://api.github.com/users/soumith/received_events", "type": "User", "site_admin": false}, "created_at": "2017-03-02T14:30:07Z", "updated_at": "2017-03-02T14:30:07Z", "author_association": "MEMBER", "body_html": "<blockquote>\n<p>Add a CPU version (is there a way I can do this in Python?)</p>\n</blockquote>\n<p>Can you add CPU versions into TH. standard blas doesn't have *Batched functions, but you can simply do a for-loop. That's what we do for the batched GEMM functions.</p>\n<blockquote>\n<p>Do you prefer btrf and btrs as names or something more memorable?</p>\n</blockquote>\n<p>I would think something like <code>btrifact</code>, <code>btrisolve</code> would be better, but I dont have a strong opinion. People probably find these via docs and are happy with the blas naming convention anyways.</p>", "body_text": "Add a CPU version (is there a way I can do this in Python?)\n\nCan you add CPU versions into TH. standard blas doesn't have *Batched functions, but you can simply do a for-loop. That's what we do for the batched GEMM functions.\n\nDo you prefer btrf and btrs as names or something more memorable?\n\nI would think something like btrifact, btrisolve would be better, but I dont have a strong opinion. People probably find these via docs and are happy with the blas naming convention anyways.", "body": "> Add a CPU version (is there a way I can do this in Python?)\r\n\r\nCan you add CPU versions into TH. standard blas doesn't have *Batched functions, but you can simply do a for-loop. That's what we do for the batched GEMM functions.\r\n\r\n> Do you prefer btrf and btrs as names or something more memorable?\r\n\r\nI would think something like `btrifact`, `btrisolve` would be better, but I dont have a strong opinion. People probably find these via docs and are happy with the blas naming convention anyways. "}