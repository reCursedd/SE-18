{"url": "https://api.github.com/repos/pytorch/pytorch/issues/comments/331712930", "html_url": "https://github.com/pytorch/pytorch/issues/2843#issuecomment-331712930", "issue_url": "https://api.github.com/repos/pytorch/pytorch/issues/2843", "id": 331712930, "node_id": "MDEyOklzc3VlQ29tbWVudDMzMTcxMjkzMA==", "user": {"login": "tailintalent", "id": 11731145, "node_id": "MDQ6VXNlcjExNzMxMTQ1", "avatar_url": "https://avatars3.githubusercontent.com/u/11731145?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tailintalent", "html_url": "https://github.com/tailintalent", "followers_url": "https://api.github.com/users/tailintalent/followers", "following_url": "https://api.github.com/users/tailintalent/following{/other_user}", "gists_url": "https://api.github.com/users/tailintalent/gists{/gist_id}", "starred_url": "https://api.github.com/users/tailintalent/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tailintalent/subscriptions", "organizations_url": "https://api.github.com/users/tailintalent/orgs", "repos_url": "https://api.github.com/users/tailintalent/repos", "events_url": "https://api.github.com/users/tailintalent/events{/privacy}", "received_events_url": "https://api.github.com/users/tailintalent/received_events", "type": "User", "site_admin": false}, "created_at": "2017-09-24T14:16:05Z", "updated_at": "2017-09-24T14:16:05Z", "author_association": "NONE", "body_html": "<p>The a.grad is correct. My issue is, I expect that if I change the gradient, the variable \"a\" after the optimizer.step() should also change. However, using the above code, after one backward step, a decreases from 2 to 1.9900. If I change this line:<br>\n<code>h = a.register_hook(lambda grad: grad * 10)</code><br>\nto<br>\n<code>h = a.register_hook(lambda grad: grad * 10000)</code></p>\n<p>After backward step the variable \"a\" still decrease from 2 to 1.9900. Therefore, it shows that my manipulation of the gradient has no effect on the optimizer. Is that the supposed behavior? On the other hand, I want the optimizer to take in my manipulated gradient, not the original gradient. How should I do that?</p>", "body_text": "The a.grad is correct. My issue is, I expect that if I change the gradient, the variable \"a\" after the optimizer.step() should also change. However, using the above code, after one backward step, a decreases from 2 to 1.9900. If I change this line:\nh = a.register_hook(lambda grad: grad * 10)\nto\nh = a.register_hook(lambda grad: grad * 10000)\nAfter backward step the variable \"a\" still decrease from 2 to 1.9900. Therefore, it shows that my manipulation of the gradient has no effect on the optimizer. Is that the supposed behavior? On the other hand, I want the optimizer to take in my manipulated gradient, not the original gradient. How should I do that?", "body": "The a.grad is correct. My issue is, I expect that if I change the gradient, the variable \"a\" after the optimizer.step() should also change. However, using the above code, after one backward step, a decreases from 2 to 1.9900. If I change this line:\r\n`h = a.register_hook(lambda grad: grad * 10)`\r\nto\r\n`h = a.register_hook(lambda grad: grad * 10000)`\r\n\r\nAfter backward step the variable \"a\" still decrease from 2 to 1.9900. Therefore, it shows that my manipulation of the gradient has no effect on the optimizer. Is that the supposed behavior? On the other hand, I want the optimizer to take in my manipulated gradient, not the original gradient. How should I do that?"}