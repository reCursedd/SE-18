{"url": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/224966574", "pull_request_review_id": 164470583, "id": 224966574, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIyNDk2NjU3NA==", "diff_hunk": "@@ -3855,6 +3855,11 @@ def _compatibility_test(sequences, lengths, batch_first):\n         self.assertEqual(packed.batch_sizes, [3, 2, 1])\n         self.assertEqual(packed.data.data, expected)\n \n+        packed = rnn_utils.pack_sequence([a, b, c], batch_first=True)\n+        expected = torch.tensor([1, 4, 6, 2, 5, 3])", "path": "test/test_nn.py", "position": 5, "original_position": 5, "commit_id": "199f09cf8347f85c672f33375232b3e87941fc5b", "original_commit_id": "199f09cf8347f85c672f33375232b3e87941fc5b", "user": {"login": "nehz", "id": 151358, "node_id": "MDQ6VXNlcjE1MTM1OA==", "avatar_url": "https://avatars3.githubusercontent.com/u/151358?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nehz", "html_url": "https://github.com/nehz", "followers_url": "https://api.github.com/users/nehz/followers", "following_url": "https://api.github.com/users/nehz/following{/other_user}", "gists_url": "https://api.github.com/users/nehz/gists{/gist_id}", "starred_url": "https://api.github.com/users/nehz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nehz/subscriptions", "organizations_url": "https://api.github.com/users/nehz/orgs", "repos_url": "https://api.github.com/users/nehz/repos", "events_url": "https://api.github.com/users/nehz/events{/privacy}", "received_events_url": "https://api.github.com/users/nehz/received_events", "type": "User", "site_admin": false}, "body": "This might be hard to test I think (?) as \r\n`padded = pad_sequence(sequences, batch_first=batch_first)` will put it in the output format, but then `pack_padded_sequence(padded, [v.size(0) for v in sequences], batch_first=batch_first)` will consume it in the correct format? I am not too sure how the internal format of PackSequence works\r\n\r\nWill `batch_first=True` and `batch_first=False` produce the same PackedSequence? and in this case this patch is not required ?", "created_at": "2018-10-13T17:36:59Z", "updated_at": "2018-11-23T15:52:58Z", "html_url": "https://github.com/pytorch/pytorch/pull/12137#discussion_r224966574", "pull_request_url": "https://api.github.com/repos/pytorch/pytorch/pulls/12137", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/224966574"}, "html": {"href": "https://github.com/pytorch/pytorch/pull/12137#discussion_r224966574"}, "pull_request": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/12137"}}, "body_html": "<p>This might be hard to test I think (?) as<br>\n<code>padded = pad_sequence(sequences, batch_first=batch_first)</code> will put it in the output format, but then <code>pack_padded_sequence(padded, [v.size(0) for v in sequences], batch_first=batch_first)</code> will consume it in the correct format? I am not too sure how the internal format of PackSequence works</p>\n<p>Will <code>batch_first=True</code> and <code>batch_first=False</code> produce the same PackedSequence? and in this case this patch is not required ?</p>", "body_text": "This might be hard to test I think (?) as\npadded = pad_sequence(sequences, batch_first=batch_first) will put it in the output format, but then pack_padded_sequence(padded, [v.size(0) for v in sequences], batch_first=batch_first) will consume it in the correct format? I am not too sure how the internal format of PackSequence works\nWill batch_first=True and batch_first=False produce the same PackedSequence? and in this case this patch is not required ?", "in_reply_to_id": 224868584}