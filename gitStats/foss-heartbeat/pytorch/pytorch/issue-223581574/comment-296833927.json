{"url": "https://api.github.com/repos/pytorch/pytorch/issues/comments/296833927", "html_url": "https://github.com/pytorch/pytorch/issues/1333#issuecomment-296833927", "issue_url": "https://api.github.com/repos/pytorch/pytorch/issues/1333", "id": 296833927, "node_id": "MDEyOklzc3VlQ29tbWVudDI5NjgzMzkyNw==", "user": {"login": "calclavia", "id": 1828968, "node_id": "MDQ6VXNlcjE4Mjg5Njg=", "avatar_url": "https://avatars3.githubusercontent.com/u/1828968?v=4", "gravatar_id": "", "url": "https://api.github.com/users/calclavia", "html_url": "https://github.com/calclavia", "followers_url": "https://api.github.com/users/calclavia/followers", "following_url": "https://api.github.com/users/calclavia/following{/other_user}", "gists_url": "https://api.github.com/users/calclavia/gists{/gist_id}", "starred_url": "https://api.github.com/users/calclavia/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/calclavia/subscriptions", "organizations_url": "https://api.github.com/users/calclavia/orgs", "repos_url": "https://api.github.com/users/calclavia/repos", "events_url": "https://api.github.com/users/calclavia/events{/privacy}", "received_events_url": "https://api.github.com/users/calclavia/received_events", "type": "User", "site_admin": false}, "created_at": "2017-04-24T21:58:00Z", "updated_at": "2017-04-24T21:58:26Z", "author_association": "NONE", "body_html": "<p>Alright, I think I found a better way:</p>\n<p>Use conv padding and ignore the last feature in all channels.</p>\n<pre><code>x = torch.autograd.Variable(torch.FloatTensor([[[1, 2, 3, 4]]]))\nc = nn.Conv1d(1, 1, 2, padding=1)\nout = c(x)[:, :, :-1]\n</code></pre>", "body_text": "Alright, I think I found a better way:\nUse conv padding and ignore the last feature in all channels.\nx = torch.autograd.Variable(torch.FloatTensor([[[1, 2, 3, 4]]]))\nc = nn.Conv1d(1, 1, 2, padding=1)\nout = c(x)[:, :, :-1]", "body": "Alright, I think I found a better way:\r\n\r\nUse conv padding and ignore the last feature in all channels.\r\n```\r\nx = torch.autograd.Variable(torch.FloatTensor([[[1, 2, 3, 4]]]))\r\nc = nn.Conv1d(1, 1, 2, padding=1)\r\nout = c(x)[:, :, :-1]\r\n```"}