{"url": "https://api.github.com/repos/pytorch/pytorch/issues/comments/296830861", "html_url": "https://github.com/pytorch/pytorch/issues/1333#issuecomment-296830861", "issue_url": "https://api.github.com/repos/pytorch/pytorch/issues/1333", "id": 296830861, "node_id": "MDEyOklzc3VlQ29tbWVudDI5NjgzMDg2MQ==", "user": {"login": "calclavia", "id": 1828968, "node_id": "MDQ6VXNlcjE4Mjg5Njg=", "avatar_url": "https://avatars3.githubusercontent.com/u/1828968?v=4", "gravatar_id": "", "url": "https://api.github.com/users/calclavia", "html_url": "https://github.com/calclavia", "followers_url": "https://api.github.com/users/calclavia/followers", "following_url": "https://api.github.com/users/calclavia/following{/other_user}", "gists_url": "https://api.github.com/users/calclavia/gists{/gist_id}", "starred_url": "https://api.github.com/users/calclavia/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/calclavia/subscriptions", "organizations_url": "https://api.github.com/users/calclavia/orgs", "repos_url": "https://api.github.com/users/calclavia/repos", "events_url": "https://api.github.com/users/calclavia/events{/privacy}", "received_events_url": "https://api.github.com/users/calclavia/received_events", "type": "User", "site_admin": false}, "created_at": "2017-04-24T21:43:20Z", "updated_at": "2017-04-24T21:45:24Z", "author_association": "NONE", "body_html": "<p><a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=4583066\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/apaszke\">@apaszke</a><br>\nHmm, I think you're right. A kernel=2 conv with padding should achieve the same effect. Problem is, I can't use <code>F.pad</code> with 1D time series data.</p>\n<p>I think this code should be a workaround using contat as to pad zeros on ONLY the left side:</p>\n<p>dilation = 1:</p>\n<pre><code>x = torch.autograd.Variable(torch.FloatTensor([[[1, 2, 3, 4]]]))\nx = torch.cat((torch.autograd.Variable(torch.zeros(1, 1, 1)), x), 2)\nc = nn.Conv1d(1, 1, 2)\nc(x)\n</code></pre>\n<p>Is there a more elegant way to do it?</p>", "body_text": "@apaszke\nHmm, I think you're right. A kernel=2 conv with padding should achieve the same effect. Problem is, I can't use F.pad with 1D time series data.\nI think this code should be a workaround using contat as to pad zeros on ONLY the left side:\ndilation = 1:\nx = torch.autograd.Variable(torch.FloatTensor([[[1, 2, 3, 4]]]))\nx = torch.cat((torch.autograd.Variable(torch.zeros(1, 1, 1)), x), 2)\nc = nn.Conv1d(1, 1, 2)\nc(x)\n\nIs there a more elegant way to do it?", "body": "@apaszke \r\nHmm, I think you're right. A kernel=2 conv with padding should achieve the same effect. Problem is, I can't use `F.pad` with 1D time series data.\r\n\r\nI think this code should be a workaround using contat as to pad zeros on ONLY the left side:\r\n\r\ndilation = 1:\r\n```\r\nx = torch.autograd.Variable(torch.FloatTensor([[[1, 2, 3, 4]]]))\r\nx = torch.cat((torch.autograd.Variable(torch.zeros(1, 1, 1)), x), 2)\r\nc = nn.Conv1d(1, 1, 2)\r\nc(x)\r\n```\r\n\r\nIs there a more elegant way to do it?"}