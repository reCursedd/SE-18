{"url": "https://api.github.com/repos/pytorch/pytorch/issues/14244", "repository_url": "https://api.github.com/repos/pytorch/pytorch", "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/14244/labels{/name}", "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/14244/comments", "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/14244/events", "html_url": "https://github.com/pytorch/pytorch/pull/14244", "id": 382842701, "node_id": "MDExOlB1bGxSZXF1ZXN0MjMyNDU0ODI4", "number": 14244, "title": "[c10d] Remove header generated at configuration time", "user": {"login": "pietern", "id": 9845, "node_id": "MDQ6VXNlcjk4NDU=", "avatar_url": "https://avatars3.githubusercontent.com/u/9845?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pietern", "html_url": "https://github.com/pietern", "followers_url": "https://api.github.com/users/pietern/followers", "following_url": "https://api.github.com/users/pietern/following{/other_user}", "gists_url": "https://api.github.com/users/pietern/gists{/gist_id}", "starred_url": "https://api.github.com/users/pietern/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pietern/subscriptions", "organizations_url": "https://api.github.com/users/pietern/orgs", "repos_url": "https://api.github.com/users/pietern/repos", "events_url": "https://api.github.com/users/pietern/events{/privacy}", "received_events_url": "https://api.github.com/users/pietern/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 778855555, "node_id": "MDU6TGFiZWw3Nzg4NTU1NTU=", "url": "https://api.github.com/repos/pytorch/pytorch/labels/build", "name": "build", "color": "bfdadc", "default": false}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-11-20T20:49:29Z", "updated_at": "2018-11-21T16:46:50Z", "closed_at": "2018-11-21T16:46:50Z", "author_association": "CONTRIBUTOR", "pull_request": {"url": "https://api.github.com/repos/pytorch/pytorch/pulls/14244", "html_url": "https://github.com/pytorch/pytorch/pull/14244", "diff_url": "https://github.com/pytorch/pytorch/pull/14244.diff", "patch_url": "https://github.com/pytorch/pytorch/pull/14244.patch"}, "body_html": "<p>The build was picking up the empty stub header instead of the generated<br>\none. Because of the large number of include paths we end up passing to<br>\nthe compiler it is brittle to have both an empty stub file and a<br>\ngenerated file and expect the compiler to pick up the right one.</p>\n<p>With the recent change to compile everything from a single CMake run we<br>\ncan now use native CMake facilities to propagate macros that indicate<br>\nbackend support. The stanzas target_compile_definitions with the<br>\nINTERFACE flag ensure that these macros are set only for downstream<br>\nconsumers of the c10d target.</p>", "body_text": "The build was picking up the empty stub header instead of the generated\none. Because of the large number of include paths we end up passing to\nthe compiler it is brittle to have both an empty stub file and a\ngenerated file and expect the compiler to pick up the right one.\nWith the recent change to compile everything from a single CMake run we\ncan now use native CMake facilities to propagate macros that indicate\nbackend support. The stanzas target_compile_definitions with the\nINTERFACE flag ensure that these macros are set only for downstream\nconsumers of the c10d target.", "body": "The build was picking up the empty stub header instead of the generated\r\none. Because of the large number of include paths we end up passing to\r\nthe compiler it is brittle to have both an empty stub file and a\r\ngenerated file and expect the compiler to pick up the right one.\r\n\r\nWith the recent change to compile everything from a single CMake run we\r\ncan now use native CMake facilities to propagate macros that indicate\r\nbackend support. The stanzas target_compile_definitions with the\r\nINTERFACE flag ensure that these macros are set only for downstream\r\nconsumers of the c10d target.\r\n"}