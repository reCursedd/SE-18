{"url": "https://api.github.com/repos/pytorch/pytorch/issues/comments/411798796", "html_url": "https://github.com/pytorch/pytorch/issues/9332#issuecomment-411798796", "issue_url": "https://api.github.com/repos/pytorch/pytorch/issues/9332", "id": 411798796, "node_id": "MDEyOklzc3VlQ29tbWVudDQxMTc5ODc5Ng==", "user": {"login": "Balandat", "id": 1605878, "node_id": "MDQ6VXNlcjE2MDU4Nzg=", "avatar_url": "https://avatars2.githubusercontent.com/u/1605878?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Balandat", "html_url": "https://github.com/Balandat", "followers_url": "https://api.github.com/users/Balandat/followers", "following_url": "https://api.github.com/users/Balandat/following{/other_user}", "gists_url": "https://api.github.com/users/Balandat/gists{/gist_id}", "starred_url": "https://api.github.com/users/Balandat/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Balandat/subscriptions", "organizations_url": "https://api.github.com/users/Balandat/orgs", "repos_url": "https://api.github.com/users/Balandat/repos", "events_url": "https://api.github.com/users/Balandat/events{/privacy}", "received_events_url": "https://api.github.com/users/Balandat/received_events", "type": "User", "site_admin": false}, "created_at": "2018-08-09T15:30:08Z", "updated_at": "2018-08-09T15:30:08Z", "author_association": "NONE", "body_html": "<p>Maybe this provides some useful side context: One of the main use cases will be qMC integration. E.g. if <code>f : [0, 1]^d -&gt; (-inf, inf)</code> then we'll often want to do something like</p>\n<pre><code>sobol = torch.&lt;SOMEWHERE&gt;.Sobol(dim=d, scramble=True)\nxqmc = sobol.draw(10000)\nfqmc = f(xqmc).mean()\n</code></pre>\n<p>Or one could have a top-level function of the form <code>xqmc = torch.sobol(10000, dim=d)</code> to reduce boilerplate code.</p>", "body_text": "Maybe this provides some useful side context: One of the main use cases will be qMC integration. E.g. if f : [0, 1]^d -> (-inf, inf) then we'll often want to do something like\nsobol = torch.<SOMEWHERE>.Sobol(dim=d, scramble=True)\nxqmc = sobol.draw(10000)\nfqmc = f(xqmc).mean()\n\nOr one could have a top-level function of the form xqmc = torch.sobol(10000, dim=d) to reduce boilerplate code.", "body": "Maybe this provides some useful side context: One of the main use cases will be qMC integration. E.g. if `f : [0, 1]^d -> (-inf, inf)` then we'll often want to do something like\r\n\r\n```\r\nsobol = torch.<SOMEWHERE>.Sobol(dim=d, scramble=True)\r\nxqmc = sobol.draw(10000)\r\nfqmc = f(xqmc).mean()\r\n```\r\n\r\nOr one could have a top-level function of the form `xqmc = torch.sobol(10000, dim=d)` to reduce boilerplate code. "}