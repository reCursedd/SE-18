{"url": "https://api.github.com/repos/pytorch/pytorch/issues/comments/404882333", "html_url": "https://github.com/pytorch/pytorch/issues/9332#issuecomment-404882333", "issue_url": "https://api.github.com/repos/pytorch/pytorch/issues/9332", "id": 404882333, "node_id": "MDEyOklzc3VlQ29tbWVudDQwNDg4MjMzMw==", "user": {"login": "Balandat", "id": 1605878, "node_id": "MDQ6VXNlcjE2MDU4Nzg=", "avatar_url": "https://avatars2.githubusercontent.com/u/1605878?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Balandat", "html_url": "https://github.com/Balandat", "followers_url": "https://api.github.com/users/Balandat/followers", "following_url": "https://api.github.com/users/Balandat/following{/other_user}", "gists_url": "https://api.github.com/users/Balandat/gists{/gist_id}", "starred_url": "https://api.github.com/users/Balandat/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Balandat/subscriptions", "organizations_url": "https://api.github.com/users/Balandat/orgs", "repos_url": "https://api.github.com/users/Balandat/repos", "events_url": "https://api.github.com/users/Balandat/events{/privacy}", "received_events_url": "https://api.github.com/users/Balandat/received_events", "type": "User", "site_admin": false}, "created_at": "2018-07-13T16:21:13Z", "updated_at": "2018-07-13T16:21:13Z", "author_association": "NONE", "body_html": "<p><a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=23639302\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/vishwakftw\">@vishwakftw</a>, please see the attached files (should be <code>sobol.pyx</code> and <code>test_sobol.py</code>). At the core are the array literals defined up top, the actual logic is written in low-level C functions.</p>\n<p>Calling <code>draw</code> on an instance of <code>SobolEngine</code> will generate points of a space-filling sequence. The important thing to note is that in order to continue filling the <code>[0, 1]^dimen</code> space \"in between\" the already drawn points, draws need to continue in sequence (i.e. the <code>num_generated</code> variable should not be reset). A barebones implementation would just not deal with that complexity, but instead just so a single draw of N points in <code>[0, 1]^dimen</code>.</p>\n<p>See the test cases for some more context on how to use this.</p>\n<p>Let me know if you have any questions.</p>\n<p><a href=\"https://github.com/pytorch/pytorch/files/2193404/sobol.txt\">sobol.txt</a><br>\n<a href=\"https://github.com/pytorch/pytorch/files/2193441/test_sobol.txt\">test_sobol.txt</a></p>", "body_text": "@vishwakftw, please see the attached files (should be sobol.pyx and test_sobol.py). At the core are the array literals defined up top, the actual logic is written in low-level C functions.\nCalling draw on an instance of SobolEngine will generate points of a space-filling sequence. The important thing to note is that in order to continue filling the [0, 1]^dimen space \"in between\" the already drawn points, draws need to continue in sequence (i.e. the num_generated variable should not be reset). A barebones implementation would just not deal with that complexity, but instead just so a single draw of N points in [0, 1]^dimen.\nSee the test cases for some more context on how to use this.\nLet me know if you have any questions.\nsobol.txt\ntest_sobol.txt", "body": "@vishwakftw, please see the attached files (should be `sobol.pyx` and `test_sobol.py`). At the core are the array literals defined up top, the actual logic is written in low-level C functions. \r\n\r\nCalling `draw` on an instance of `SobolEngine` will generate points of a space-filling sequence. The important thing to note is that in order to continue filling the `[0, 1]^dimen` space \"in between\" the already drawn points, draws need to continue in sequence (i.e. the `num_generated` variable should not be reset). A barebones implementation would just not deal with that complexity, but instead just so a single draw of N points in `[0, 1]^dimen`. \r\n\r\nSee the test cases for some more context on how to use this.\r\n\r\nLet me know if you have any questions.\r\n\r\n[sobol.txt](https://github.com/pytorch/pytorch/files/2193404/sobol.txt)\r\n[test_sobol.txt](https://github.com/pytorch/pytorch/files/2193441/test_sobol.txt)\r\n\r\n\r\n"}