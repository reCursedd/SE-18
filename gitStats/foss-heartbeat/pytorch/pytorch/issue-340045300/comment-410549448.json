{"url": "https://api.github.com/repos/pytorch/pytorch/issues/comments/410549448", "html_url": "https://github.com/pytorch/pytorch/issues/9332#issuecomment-410549448", "issue_url": "https://api.github.com/repos/pytorch/pytorch/issues/9332", "id": 410549448, "node_id": "MDEyOklzc3VlQ29tbWVudDQxMDU0OTQ0OA==", "user": {"login": "vishwakftw", "id": 23639302, "node_id": "MDQ6VXNlcjIzNjM5MzAy", "avatar_url": "https://avatars2.githubusercontent.com/u/23639302?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vishwakftw", "html_url": "https://github.com/vishwakftw", "followers_url": "https://api.github.com/users/vishwakftw/followers", "following_url": "https://api.github.com/users/vishwakftw/following{/other_user}", "gists_url": "https://api.github.com/users/vishwakftw/gists{/gist_id}", "starred_url": "https://api.github.com/users/vishwakftw/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vishwakftw/subscriptions", "organizations_url": "https://api.github.com/users/vishwakftw/orgs", "repos_url": "https://api.github.com/users/vishwakftw/repos", "events_url": "https://api.github.com/users/vishwakftw/events{/privacy}", "received_events_url": "https://api.github.com/users/vishwakftw/received_events", "type": "User", "site_admin": false}, "created_at": "2018-08-05T21:29:38Z", "updated_at": "2018-08-05T21:29:38Z", "author_association": "CONTRIBUTOR", "body_html": "<p>Thank you, <a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=1605878\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/Balandat\">@Balandat</a>. Actually, I think I should be able to circumvent the problem with <code>at::Generator</code> and porting to C++ won\u2019t be an issue. The reason I thought it was required is because of the <code>randint</code> in the CPython implementation.</p>\n<p>I just wanted to confirm how you would have liked the implementation to be, hence the question.</p>", "body_text": "Thank you, @Balandat. Actually, I think I should be able to circumvent the problem with at::Generator and porting to C++ won\u2019t be an issue. The reason I thought it was required is because of the randint in the CPython implementation.\nI just wanted to confirm how you would have liked the implementation to be, hence the question.", "body": "Thank you, @Balandat. Actually, I think I should be able to circumvent the problem with `at::Generator` and porting to C++ won\u2019t be an issue. The reason I thought it was required is because of the `randint` in the CPython implementation.\r\n\r\nI just wanted to confirm how you would have liked the implementation to be, hence the question."}