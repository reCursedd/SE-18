{"url": "https://api.github.com/repos/pytorch/pytorch/issues/comments/294252484", "html_url": "https://github.com/pytorch/pytorch/pull/1172#issuecomment-294252484", "issue_url": "https://api.github.com/repos/pytorch/pytorch/issues/1172", "id": 294252484, "node_id": "MDEyOklzc3VlQ29tbWVudDI5NDI1MjQ4NA==", "user": {"login": "Maratyszcza", "id": 1093985, "node_id": "MDQ6VXNlcjEwOTM5ODU=", "avatar_url": "https://avatars1.githubusercontent.com/u/1093985?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Maratyszcza", "html_url": "https://github.com/Maratyszcza", "followers_url": "https://api.github.com/users/Maratyszcza/followers", "following_url": "https://api.github.com/users/Maratyszcza/following{/other_user}", "gists_url": "https://api.github.com/users/Maratyszcza/gists{/gist_id}", "starred_url": "https://api.github.com/users/Maratyszcza/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Maratyszcza/subscriptions", "organizations_url": "https://api.github.com/users/Maratyszcza/orgs", "repos_url": "https://api.github.com/users/Maratyszcza/repos", "events_url": "https://api.github.com/users/Maratyszcza/events{/privacy}", "received_events_url": "https://api.github.com/users/Maratyszcza/received_events", "type": "User", "site_admin": false}, "created_at": "2017-04-14T23:01:20Z", "updated_at": "2017-04-14T23:01:20Z", "author_association": "CONTRIBUTOR", "body_html": "<p>Thank you for this important work, Kai! Some extra suggestions:</p>\n<p>There is some discrepancy in parameters which is worth unifying:</p>\n<ul>\n<li><code>kaiming_uniform</code>/<code>kaiming_normal</code> accept parameter <code>a</code> (negative slope of ReLU)</li>\n<li>Other activation-dependent init functions accept parameter <code>gain</code>.</li>\n</ul>\n<p>I'd prefer to have <code>gain</code> parameter for Kaiming inits as well, because with current <code>kaiming_*</code> interface is not compatible with non-ReLU gains (e.g. for linear activation).</p>\n<p>Another idea: <a href=\"https://github.com/Lasagne/Lasagne/blob/master/lasagne/init.py#L210\">Lasagne accepts</a> <code>gain=\"relu\"</code> as a shortcut for <code>math.sqrt(2)</code> gain, which is nice to avoid importing <code>math</code> module.</p>", "body_text": "Thank you for this important work, Kai! Some extra suggestions:\nThere is some discrepancy in parameters which is worth unifying:\n\nkaiming_uniform/kaiming_normal accept parameter a (negative slope of ReLU)\nOther activation-dependent init functions accept parameter gain.\n\nI'd prefer to have gain parameter for Kaiming inits as well, because with current kaiming_* interface is not compatible with non-ReLU gains (e.g. for linear activation).\nAnother idea: Lasagne accepts gain=\"relu\" as a shortcut for math.sqrt(2) gain, which is nice to avoid importing math module.", "body": "Thank you for this important work, Kai! Some extra suggestions:\r\n\r\nThere is some discrepancy in parameters which is worth unifying:\r\n- `kaiming_uniform`/`kaiming_normal` accept parameter `a` (negative slope of ReLU)\r\n- Other activation-dependent init functions accept parameter `gain`.\r\n\r\nI'd prefer to have `gain` parameter for Kaiming inits as well, because with current `kaiming_*` interface is not compatible with non-ReLU gains (e.g. for linear activation).\r\n\r\nAnother idea: [Lasagne accepts](https://github.com/Lasagne/Lasagne/blob/master/lasagne/init.py#L210) `gain=\"relu\"` as a shortcut for `math.sqrt(2)` gain, which is nice to avoid importing `math` module."}