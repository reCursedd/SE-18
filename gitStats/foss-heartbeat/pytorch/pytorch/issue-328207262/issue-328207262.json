{"url": "https://api.github.com/repos/pytorch/pytorch/issues/7995", "repository_url": "https://api.github.com/repos/pytorch/pytorch", "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/7995/labels{/name}", "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/7995/comments", "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/7995/events", "html_url": "https://github.com/pytorch/pytorch/issues/7995", "id": 328207262, "node_id": "MDU6SXNzdWUzMjgyMDcyNjI=", "number": 7995, "title": "documentation for sparse tensor creation after 0.4.0 update", "user": {"login": "juniorrojas", "id": 2767767, "node_id": "MDQ6VXNlcjI3Njc3Njc=", "avatar_url": "https://avatars3.githubusercontent.com/u/2767767?v=4", "gravatar_id": "", "url": "https://api.github.com/users/juniorrojas", "html_url": "https://github.com/juniorrojas", "followers_url": "https://api.github.com/users/juniorrojas/followers", "following_url": "https://api.github.com/users/juniorrojas/following{/other_user}", "gists_url": "https://api.github.com/users/juniorrojas/gists{/gist_id}", "starred_url": "https://api.github.com/users/juniorrojas/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/juniorrojas/subscriptions", "organizations_url": "https://api.github.com/users/juniorrojas/orgs", "repos_url": "https://api.github.com/users/juniorrojas/repos", "events_url": "https://api.github.com/users/juniorrojas/events{/privacy}", "received_events_url": "https://api.github.com/users/juniorrojas/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 443484135, "node_id": "MDU6TGFiZWw0NDM0ODQxMzU=", "url": "https://api.github.com/repos/pytorch/pytorch/labels/high%20priority", "name": "high priority", "color": "F22613", "default": false}, {"id": 443483881, "node_id": "MDU6TGFiZWw0NDM0ODM4ODE=", "url": "https://api.github.com/repos/pytorch/pytorch/labels/todo", "name": "todo", "color": "c2e0c6", "default": false}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2018-05-31T16:19:38Z", "updated_at": "2018-06-11T04:03:52Z", "closed_at": "2018-06-11T04:03:52Z", "author_association": "CONTRIBUTOR", "body_html": "<p>From the 0.4.0 migration guide <a href=\"https://pytorch.org/2018/04/22/0_4_0-migration-guide.html\" rel=\"nofollow\">https://pytorch.org/2018/04/22/0_4_0-migration-guide.html</a></p>\n<blockquote>\n<h2>dtypes, devices and NumPy-style creation functions</h2>\n<p>In previous versions of PyTorch, we used to specify data type (e.g. float vs double), device type (cpu vs cuda) and layout (dense vs sparse) together as a \u201ctensor type\u201d. For example, torch.cuda.sparse.DoubleTensor was the Tensor type respresenting the double data type, living on CUDA devices, and with COO sparse tensor layout.</p>\n<p>In this release, we introduce torch.dtype, torch.device and torch.layout classes to allow better management of these properties via NumPy-style creation functions.</p>\n</blockquote>\n<p>Although this introduction to the <code>dtype</code>, <code>device</code> and <code>layout</code> features mentions sparse tensors, there are no examples for sparse tensor creation using the 0.4.0 style. All references I could find online still use things like <code>torch.sparse.FloatTensor</code> rather than <code>torch.tensor</code>, even in the official <code>torch.sparse</code> documentation <a href=\"https://pytorch.org/docs/master/sparse.html\" rel=\"nofollow\">https://pytorch.org/docs/master/sparse.html</a> . Is there a way to create a sparse tensor using <code>torch.tensor</code>? For example, the migration guide mentions examples like <code>torch.tensor([[1], [2], [3]], dtype=torch.half, device=cuda)</code> for dense tensors, but for sparse tensors it's not obvious how to use it, since it needs indices, values and size rather than just an array of numbers.</p>", "body_text": "From the 0.4.0 migration guide https://pytorch.org/2018/04/22/0_4_0-migration-guide.html\n\ndtypes, devices and NumPy-style creation functions\nIn previous versions of PyTorch, we used to specify data type (e.g. float vs double), device type (cpu vs cuda) and layout (dense vs sparse) together as a \u201ctensor type\u201d. For example, torch.cuda.sparse.DoubleTensor was the Tensor type respresenting the double data type, living on CUDA devices, and with COO sparse tensor layout.\nIn this release, we introduce torch.dtype, torch.device and torch.layout classes to allow better management of these properties via NumPy-style creation functions.\n\nAlthough this introduction to the dtype, device and layout features mentions sparse tensors, there are no examples for sparse tensor creation using the 0.4.0 style. All references I could find online still use things like torch.sparse.FloatTensor rather than torch.tensor, even in the official torch.sparse documentation https://pytorch.org/docs/master/sparse.html . Is there a way to create a sparse tensor using torch.tensor? For example, the migration guide mentions examples like torch.tensor([[1], [2], [3]], dtype=torch.half, device=cuda) for dense tensors, but for sparse tensors it's not obvious how to use it, since it needs indices, values and size rather than just an array of numbers.", "body": "From the 0.4.0 migration guide https://pytorch.org/2018/04/22/0_4_0-migration-guide.html\r\n\r\n> ## dtypes, devices and NumPy-style creation functions\r\n> In previous versions of PyTorch, we used to specify data type (e.g. float vs double), device type (cpu vs cuda) and layout (dense vs sparse) together as a \u201ctensor type\u201d. For example, torch.cuda.sparse.DoubleTensor was the Tensor type respresenting the double data type, living on CUDA devices, and with COO sparse tensor layout.\r\n> \r\n> In this release, we introduce torch.dtype, torch.device and torch.layout classes to allow better management of these properties via NumPy-style creation functions.\r\n\r\nAlthough this introduction to the `dtype`, `device` and `layout` features mentions sparse tensors, there are no examples for sparse tensor creation using the 0.4.0 style. All references I could find online still use things like `torch.sparse.FloatTensor` rather than `torch.tensor`, even in the official `torch.sparse` documentation https://pytorch.org/docs/master/sparse.html . Is there a way to create a sparse tensor using `torch.tensor`? For example, the migration guide mentions examples like `torch.tensor([[1], [2], [3]], dtype=torch.half, device=cuda)` for dense tensors, but for sparse tensors it's not obvious how to use it, since it needs indices, values and size rather than just an array of numbers."}