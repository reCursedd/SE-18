{"url": "https://api.github.com/repos/pytorch/pytorch/issues/comments/356205052", "html_url": "https://github.com/pytorch/pytorch/issues/4509#issuecomment-356205052", "issue_url": "https://api.github.com/repos/pytorch/pytorch/issues/4509", "id": 356205052, "node_id": "MDEyOklzc3VlQ29tbWVudDM1NjIwNTA1Mg==", "user": {"login": "Kaixhin", "id": 991891, "node_id": "MDQ6VXNlcjk5MTg5MQ==", "avatar_url": "https://avatars3.githubusercontent.com/u/991891?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Kaixhin", "html_url": "https://github.com/Kaixhin", "followers_url": "https://api.github.com/users/Kaixhin/followers", "following_url": "https://api.github.com/users/Kaixhin/following{/other_user}", "gists_url": "https://api.github.com/users/Kaixhin/gists{/gist_id}", "starred_url": "https://api.github.com/users/Kaixhin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Kaixhin/subscriptions", "organizations_url": "https://api.github.com/users/Kaixhin/orgs", "repos_url": "https://api.github.com/users/Kaixhin/repos", "events_url": "https://api.github.com/users/Kaixhin/events{/privacy}", "received_events_url": "https://api.github.com/users/Kaixhin/received_events", "type": "User", "site_admin": false}, "created_at": "2018-01-09T07:45:07Z", "updated_at": "2018-01-09T07:45:07Z", "author_association": "CONTRIBUTOR", "body_html": "<p>For context there are two PRs on LayerNorm (<a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load issue title\" data-id=\"241444138\" data-permission-text=\"Issue title is private\" data-url=\"https://github.com/pytorch/pytorch/issues/2019\" data-hovercard-type=\"pull_request\" data-hovercard-url=\"/pytorch/pytorch/pull/2019/hovercard\" href=\"https://github.com/pytorch/pytorch/pull/2019\">#2019</a> and <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load issue title\" data-id=\"243172039\" data-permission-text=\"Issue title is private\" data-url=\"https://github.com/pytorch/pytorch/issues/2112\" data-hovercard-type=\"pull_request\" data-hovercard-url=\"/pytorch/pytorch/pull/2112/hovercard\" href=\"https://github.com/pytorch/pytorch/pull/2112\">#2112</a>) with some discussion on this (one interpretation of InstanceNorm is that it is LayerNorm generalised to &gt; 1D).</p>\n<p><a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=15841449\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/ngimel\">@ngimel</a> Both LayerNorm and InstanceNorm are normalisation functions that do not need context -<br>\nBatchNorm does need to keep running stats because of the way it works though. Hence one could make a purely functional form of the former without the need to specify the size of the inputs in advance. In practice, most people will use fixed-size inputs and using optimised BatchNorm code is probably faster. Any further thoughts?</p>", "body_text": "For context there are two PRs on LayerNorm (#2019 and #2112) with some discussion on this (one interpretation of InstanceNorm is that it is LayerNorm generalised to > 1D).\n@ngimel Both LayerNorm and InstanceNorm are normalisation functions that do not need context -\nBatchNorm does need to keep running stats because of the way it works though. Hence one could make a purely functional form of the former without the need to specify the size of the inputs in advance. In practice, most people will use fixed-size inputs and using optimised BatchNorm code is probably faster. Any further thoughts?", "body": "For context there are two PRs on LayerNorm (https://github.com/pytorch/pytorch/pull/2019 and https://github.com/pytorch/pytorch/pull/2112) with some discussion on this (one interpretation of InstanceNorm is that it is LayerNorm generalised to > 1D).\r\n\r\n@ngimel Both LayerNorm and InstanceNorm are normalisation functions that do not need context -\r\n BatchNorm does need to keep running stats because of the way it works though. Hence one could make a purely functional form of the former without the need to specify the size of the inputs in advance. In practice, most people will use fixed-size inputs and using optimised BatchNorm code is probably faster. Any further thoughts?"}