{"url": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/182710933", "pull_request_review_id": 113561010, "id": 182710933, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MjcxMDkzMw==", "diff_hunk": "@@ -484,6 +498,66 @@ def test_partial_workers(self):\n         worker_manager_thread.join(JOIN_TIMEOUT)\n         self.assertFalse(worker_manager_thread.is_alive())\n \n+    @staticmethod\n+    def _manager_process(dataset, worker_pids):\n+        loader = iter(DataLoader(dataset, batch_size=2, num_workers=4, pin_memory=True))\n+        workers = loader.workers\n+        for i in range(len(workers)):\n+            worker_pids[i] = int(workers[i].pid)\n+        for i, sample in enumerate(loader):\n+            if i == 3:\n+                break\n+        # Simulate a dirty exit of the manager process\n+        if IS_WINDOWS:\n+            os.system('taskkill /PID ' + str(os.getpid()) + ' /F')\n+        else:\n+            os.kill(os.getpid(), signal.SIGKILL)\n+\n+    @staticmethod\n+    def _is_process_alive(pid, pname):\n+        # There is a chance of a terminated child process's pid being reused by a new unrelated process,\n+        # but since we are looping this check very frequently, we will know that the child process dies\n+        # before the new unrelated process starts.\n+        if IS_WINDOWS:\n+            command = 'tasklist | find \"{}\" /i'.format(pid)\n+        else:\n+            command = 'ps -p {} -o comm='.format(pid)\n+        p = subprocess.Popen(command, stdout=subprocess.PIPE, shell=True)\n+        (output, err) = p.communicate()\n+        p_status = p.wait()\n+        output = output.decode('utf-8')\n+        return pname in output\n+\n+    @unittest.skipIf(sys.version_info[0] == 2,\n+                     \"spawn start method is not supported in Python 2, \\\n+                     but we need it for creating another process with CUDA\")\n+    @unittest.skipIf(not TEST_CUDA, \"CUDA unavailable\")\n+    def test_manager_unclean_exit(self):\n+        '''there might be ConnectionResetError or leaked semaphore warning (due to dirty process exit), \\\n+but they are all safe to ignore'''\n+        worker_pids = multiprocessing.Array('i', [0] * 4)\n+\n+        mp = multiprocessing.Process(target=TestDataLoader._manager_process, args=(self.dataset, worker_pids, ))\n+        mp.start()\n+\n+        time.sleep(10)", "path": "test/test_dataloader.py", "position": 79, "original_position": 79, "commit_id": "865e50ad4def6190266c40c17b00a01b4476ded1", "original_commit_id": "865e50ad4def6190266c40c17b00a01b4476ded1", "user": {"login": "apaszke", "id": 4583066, "node_id": "MDQ6VXNlcjQ1ODMwNjY=", "avatar_url": "https://avatars3.githubusercontent.com/u/4583066?v=4", "gravatar_id": "", "url": "https://api.github.com/users/apaszke", "html_url": "https://github.com/apaszke", "followers_url": "https://api.github.com/users/apaszke/followers", "following_url": "https://api.github.com/users/apaszke/following{/other_user}", "gists_url": "https://api.github.com/users/apaszke/gists{/gist_id}", "starred_url": "https://api.github.com/users/apaszke/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/apaszke/subscriptions", "organizations_url": "https://api.github.com/users/apaszke/orgs", "repos_url": "https://api.github.com/users/apaszke/repos", "events_url": "https://api.github.com/users/apaszke/events{/privacy}", "received_events_url": "https://api.github.com/users/apaszke/received_events", "type": "User", "site_admin": false}, "body": "This looks really unreliable... Couldn't we use an `Event` or a `Semaphore`?", "created_at": "2018-04-19T11:09:36Z", "updated_at": "2018-11-23T15:42:51Z", "html_url": "https://github.com/pytorch/pytorch/pull/6606#discussion_r182710933", "pull_request_url": "https://api.github.com/repos/pytorch/pytorch/pulls/6606", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/182710933"}, "html": {"href": "https://github.com/pytorch/pytorch/pull/6606#discussion_r182710933"}, "pull_request": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/6606"}}, "body_html": "<p>This looks really unreliable... Couldn't we use an <code>Event</code> or a <code>Semaphore</code>?</p>", "body_text": "This looks really unreliable... Couldn't we use an Event or a Semaphore?"}