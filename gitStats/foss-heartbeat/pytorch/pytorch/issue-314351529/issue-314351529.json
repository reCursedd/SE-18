{"url": "https://api.github.com/repos/pytorch/pytorch/issues/6606", "repository_url": "https://api.github.com/repos/pytorch/pytorch", "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/6606/labels{/name}", "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/6606/comments", "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/6606/events", "html_url": "https://github.com/pytorch/pytorch/pull/6606", "id": 314351529, "node_id": "MDExOlB1bGxSZXF1ZXN0MTgxNjYxMDcw", "number": 6606, "title": "Terminate dataloader workers properly when parent process is SIGKILL'ed", "user": {"login": "yf225", "id": 4063635, "node_id": "MDQ6VXNlcjQwNjM2MzU=", "avatar_url": "https://avatars0.githubusercontent.com/u/4063635?v=4", "gravatar_id": "", "url": "https://api.github.com/users/yf225", "html_url": "https://github.com/yf225", "followers_url": "https://api.github.com/users/yf225/followers", "following_url": "https://api.github.com/users/yf225/following{/other_user}", "gists_url": "https://api.github.com/users/yf225/gists{/gist_id}", "starred_url": "https://api.github.com/users/yf225/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/yf225/subscriptions", "organizations_url": "https://api.github.com/users/yf225/orgs", "repos_url": "https://api.github.com/users/yf225/repos", "events_url": "https://api.github.com/users/yf225/events{/privacy}", "received_events_url": "https://api.github.com/users/yf225/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2018-04-14T18:35:30Z", "updated_at": "2018-11-23T15:42:51Z", "closed_at": "2018-04-19T00:41:34Z", "author_association": "CONTRIBUTOR", "pull_request": {"url": "https://api.github.com/repos/pytorch/pytorch/pulls/6606", "html_url": "https://github.com/pytorch/pytorch/pull/6606", "diff_url": "https://github.com/pytorch/pytorch/pull/6606.diff", "patch_url": "https://github.com/pytorch/pytorch/pull/6606.patch"}, "body_html": "<p>When the parent process is SIGKILL'ed or otherwise encounters a dirty exit, the worker processes might not know about this event and keep on running, which leads to CUDA memory leaks. The most reliable way to detect the parent process exit is to let the worker processes periodically check the status of the parent process. In particular:</p>\n<ul>\n<li>On Linux: the worker process can check whether <code>os.getppid()</code> becomes 1, which signals that it has become an orphaned process</li>\n<li>On Windows: the worker process's <code>os.getppid()</code> won't change to 1 when the parent process exits. We have to do some sort of heartbeat from parent process to a shared variable, and the worker process will periodically check this variable</li>\n</ul>\n<p>This aims to <span class=\"issue-keyword tooltipped tooltipped-se\" aria-label=\"This pull request closes issue #5736.\">fix</span> <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load issue title\" data-id=\"304696608\" data-permission-text=\"Issue title is private\" data-url=\"https://github.com/pytorch/pytorch/issues/5736\" data-hovercard-type=\"issue\" data-hovercard-url=\"/pytorch/pytorch/issues/5736/hovercard\" href=\"https://github.com/pytorch/pytorch/issues/5736\">#5736</a> and the lingering Windows CUDA OOM issues in <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load issue title\" data-id=\"309590625\" data-permission-text=\"Issue title is private\" data-url=\"https://github.com/pytorch/pytorch/issues/6096\" data-hovercard-type=\"pull_request\" data-hovercard-url=\"/pytorch/pytorch/pull/6096/hovercard\" href=\"https://github.com/pytorch/pytorch/pull/6096\">#6096</a>.</p>", "body_text": "When the parent process is SIGKILL'ed or otherwise encounters a dirty exit, the worker processes might not know about this event and keep on running, which leads to CUDA memory leaks. The most reliable way to detect the parent process exit is to let the worker processes periodically check the status of the parent process. In particular:\n\nOn Linux: the worker process can check whether os.getppid() becomes 1, which signals that it has become an orphaned process\nOn Windows: the worker process's os.getppid() won't change to 1 when the parent process exits. We have to do some sort of heartbeat from parent process to a shared variable, and the worker process will periodically check this variable\n\nThis aims to fix #5736 and the lingering Windows CUDA OOM issues in #6096.", "body": "When the parent process is SIGKILL'ed or otherwise encounters a dirty exit, the worker processes might not know about this event and keep on running, which leads to CUDA memory leaks. The most reliable way to detect the parent process exit is to let the worker processes periodically check the status of the parent process. In particular:\r\n\r\n- On Linux: the worker process can check whether `os.getppid()` becomes 1, which signals that it has become an orphaned process\r\n- On Windows: the worker process's `os.getppid()` won't change to 1 when the parent process exits. We have to do some sort of heartbeat from parent process to a shared variable, and the worker process will periodically check this variable\r\n\r\nThis aims to fix https://github.com/pytorch/pytorch/issues/5736 and the lingering Windows CUDA OOM issues in https://github.com/pytorch/pytorch/pull/6096. "}