{"url": "https://api.github.com/repos/pytorch/pytorch/issues/comments/431189920", "html_url": "https://github.com/pytorch/pytorch/issues/12801#issuecomment-431189920", "issue_url": "https://api.github.com/repos/pytorch/pytorch/issues/12801", "id": 431189920, "node_id": "MDEyOklzc3VlQ29tbWVudDQzMTE4OTkyMA==", "user": {"login": "thunn", "id": 19165683, "node_id": "MDQ6VXNlcjE5MTY1Njgz", "avatar_url": "https://avatars1.githubusercontent.com/u/19165683?v=4", "gravatar_id": "", "url": "https://api.github.com/users/thunn", "html_url": "https://github.com/thunn", "followers_url": "https://api.github.com/users/thunn/followers", "following_url": "https://api.github.com/users/thunn/following{/other_user}", "gists_url": "https://api.github.com/users/thunn/gists{/gist_id}", "starred_url": "https://api.github.com/users/thunn/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/thunn/subscriptions", "organizations_url": "https://api.github.com/users/thunn/orgs", "repos_url": "https://api.github.com/users/thunn/repos", "events_url": "https://api.github.com/users/thunn/events{/privacy}", "received_events_url": "https://api.github.com/users/thunn/received_events", "type": "User", "site_admin": false}, "created_at": "2018-10-18T22:50:27Z", "updated_at": "2018-10-18T22:50:27Z", "author_association": "NONE", "body_html": "<p>Thank you <a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=4583066\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/apaszke\">@apaszke</a>, that solved my problem.</p>\n<p>For future readers, at time of writing my problem was solved as:</p>\n<pre><code>import torch \nimport torch.nn as nn\nprint(torch.__version__)\n\nclass test(torch.jit.ScriptModule):\n    \n    def __init__(self, rnn_dims=512):\n        super().__init__()\n        self.rnn = nn.GRU(input_size=rnn_dims, hidden_size=rnn_dims, batch_first=True)\n    \n    @torch.jit.script_method   \n    def forward(self, x):\n        \n        h1 = (torch.zeros(1, 1, 512), torch.zeros(1, 1, 512))\n        _, h11 = h1\n        out, h1 = self.rnn(x, h11)\n        \n        return h1\n        \n        \nnet = test()\n\noutput = net(torch.randn(1,1,512))\n\nprint(output.shape)\n</code></pre>", "body_text": "Thank you @apaszke, that solved my problem.\nFor future readers, at time of writing my problem was solved as:\nimport torch \nimport torch.nn as nn\nprint(torch.__version__)\n\nclass test(torch.jit.ScriptModule):\n    \n    def __init__(self, rnn_dims=512):\n        super().__init__()\n        self.rnn = nn.GRU(input_size=rnn_dims, hidden_size=rnn_dims, batch_first=True)\n    \n    @torch.jit.script_method   \n    def forward(self, x):\n        \n        h1 = (torch.zeros(1, 1, 512), torch.zeros(1, 1, 512))\n        _, h11 = h1\n        out, h1 = self.rnn(x, h11)\n        \n        return h1\n        \n        \nnet = test()\n\noutput = net(torch.randn(1,1,512))\n\nprint(output.shape)", "body": "Thank you @apaszke, that solved my problem.\r\n\r\nFor future readers, at time of writing my problem was solved as:\r\n\r\n```\r\nimport torch \r\nimport torch.nn as nn\r\nprint(torch.__version__)\r\n\r\nclass test(torch.jit.ScriptModule):\r\n    \r\n    def __init__(self, rnn_dims=512):\r\n        super().__init__()\r\n        self.rnn = nn.GRU(input_size=rnn_dims, hidden_size=rnn_dims, batch_first=True)\r\n    \r\n    @torch.jit.script_method   \r\n    def forward(self, x):\r\n        \r\n        h1 = (torch.zeros(1, 1, 512), torch.zeros(1, 1, 512))\r\n        _, h11 = h1\r\n        out, h1 = self.rnn(x, h11)\r\n        \r\n        return h1\r\n        \r\n        \r\nnet = test()\r\n\r\noutput = net(torch.randn(1,1,512))\r\n\r\nprint(output.shape)\r\n```"}