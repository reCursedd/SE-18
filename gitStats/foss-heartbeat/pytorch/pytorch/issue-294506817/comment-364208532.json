{"url": "https://api.github.com/repos/pytorch/pytorch/issues/comments/364208532", "html_url": "https://github.com/pytorch/pytorch/issues/5057#issuecomment-364208532", "issue_url": "https://api.github.com/repos/pytorch/pytorch/issues/5057", "id": 364208532, "node_id": "MDEyOklzc3VlQ29tbWVudDM2NDIwODUzMg==", "user": {"login": "SsnL", "id": 5674597, "node_id": "MDQ6VXNlcjU2NzQ1OTc=", "avatar_url": "https://avatars2.githubusercontent.com/u/5674597?v=4", "gravatar_id": "", "url": "https://api.github.com/users/SsnL", "html_url": "https://github.com/SsnL", "followers_url": "https://api.github.com/users/SsnL/followers", "following_url": "https://api.github.com/users/SsnL/following{/other_user}", "gists_url": "https://api.github.com/users/SsnL/gists{/gist_id}", "starred_url": "https://api.github.com/users/SsnL/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/SsnL/subscriptions", "organizations_url": "https://api.github.com/users/SsnL/orgs", "repos_url": "https://api.github.com/users/SsnL/repos", "events_url": "https://api.github.com/users/SsnL/events{/privacy}", "received_events_url": "https://api.github.com/users/SsnL/received_events", "type": "User", "site_admin": false}, "created_at": "2018-02-08T18:41:46Z", "updated_at": "2018-02-08T18:41:46Z", "author_association": "CONTRIBUTOR", "body_html": "<p>In fact the output and input shapes of convs are many-to-one, given the input parameters. For example, in <code>test_convolution_adjointness((32, 32), (3, 3), 2)</code>, both <code>(32, 32)</code> and <code>(31, 31)</code> map to <code>(15, 15)</code>. That's why we have the <code>output_padding</code> option for conv transpose. I tried adding <code>output_padding=1</code> for this case and the test passes. :)</p>", "body_text": "In fact the output and input shapes of convs are many-to-one, given the input parameters. For example, in test_convolution_adjointness((32, 32), (3, 3), 2), both (32, 32) and (31, 31) map to (15, 15). That's why we have the output_padding option for conv transpose. I tried adding output_padding=1 for this case and the test passes. :)", "body": "In fact the output and input shapes of convs are many-to-one, given the input parameters. For example, in `test_convolution_adjointness((32, 32), (3, 3), 2)`, both `(32, 32)` and `(31, 31)` map to `(15, 15)`. That's why we have the `output_padding` option for conv transpose. I tried adding `output_padding=1` for this case and the test passes. :)"}