{"url": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/83694005", "pull_request_review_id": 4520941, "id": 83694005, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDgzNjk0MDA1", "diff_hunk": "@@ -28,16 +28,19 @@ def backward(self, grad_output):\n         return grad_input\n \n \n-class SetValue(InplaceFunction):\n+class SetItem(InplaceFunction):\n \n-    def __init__(self, index, value):\n-        super(SetValue, self).__init__(True)\n+    def __init__(self, index, value=None):\n+        super(SetItem, self).__init__(True)\n         self.index = index\n         self.value = value\n \n-    def forward(self, i):\n+    def forward(self, i, value=None):\n         self.mark_dirty(i)\n-        i[self.index].fill_(self.value)\n+        if self.value is None:\n+            i[self.index].copy_(value)\n+        else:\n+            i[self.index].fill_(self.value)\n         return i\n \n     def backward(self, grad_output):", "path": "torch/autograd/functions/tensor.py", "position": 24, "original_position": 24, "commit_id": "b5d13296c65e4b3cd5aa9715cf58df0fc043454e", "original_commit_id": "ccb1f401ff482f1fb25251272656149899758d4a", "user": {"login": "adamlerer", "id": 5702157, "node_id": "MDQ6VXNlcjU3MDIxNTc=", "avatar_url": "https://avatars2.githubusercontent.com/u/5702157?v=4", "gravatar_id": "", "url": "https://api.github.com/users/adamlerer", "html_url": "https://github.com/adamlerer", "followers_url": "https://api.github.com/users/adamlerer/followers", "following_url": "https://api.github.com/users/adamlerer/following{/other_user}", "gists_url": "https://api.github.com/users/adamlerer/gists{/gist_id}", "starred_url": "https://api.github.com/users/adamlerer/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/adamlerer/subscriptions", "organizations_url": "https://api.github.com/users/adamlerer/orgs", "repos_url": "https://api.github.com/users/adamlerer/repos", "events_url": "https://api.github.com/users/adamlerer/events{/privacy}", "received_events_url": "https://api.github.com/users/adamlerer/received_events", "type": "User", "site_admin": false}, "body": "Will fix.\n\nIt would be nice to add some type checking to `__setitem__` because there are lots of ways that you can provide bad input that will not get caught or will get caught with weird errors that don't really explain what's going on. there are lots of ways you can provide bad input to `__setitem__` that won't get caught or will get caught in weird ways, e.g.\n\n```\n>>> v = Variable(torch.Tensor(5,5).fill_(1))\n>>> mask = torch.ByteTensor(5,5).fill_(0)\n>>> mask[1] = 1\n>>> v[mask] = 2  # oops, should be Variable(mask)\n>>> v\nVariable containing:\n 1  1  1  1  1\n 1  1  1  1  1\n 1  1  1  1  1\n 1  1  1  1  1\n 1  1  1  1  1\n[torch.FloatTensor of size 5x5]\n```\n", "created_at": "2016-10-17T17:33:52Z", "updated_at": "2018-11-23T15:31:42Z", "html_url": "https://github.com/pytorch/pytorch/pull/129#discussion_r83694005", "pull_request_url": "https://api.github.com/repos/pytorch/pytorch/pulls/129", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/83694005"}, "html": {"href": "https://github.com/pytorch/pytorch/pull/129#discussion_r83694005"}, "pull_request": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/129"}}, "body_html": "<p>Will fix.</p>\n<p>It would be nice to add some type checking to <code>__setitem__</code> because there are lots of ways that you can provide bad input that will not get caught or will get caught with weird errors that don't really explain what's going on. there are lots of ways you can provide bad input to <code>__setitem__</code> that won't get caught or will get caught in weird ways, e.g.</p>\n<pre><code>&gt;&gt;&gt; v = Variable(torch.Tensor(5,5).fill_(1))\n&gt;&gt;&gt; mask = torch.ByteTensor(5,5).fill_(0)\n&gt;&gt;&gt; mask[1] = 1\n&gt;&gt;&gt; v[mask] = 2  # oops, should be Variable(mask)\n&gt;&gt;&gt; v\nVariable containing:\n 1  1  1  1  1\n 1  1  1  1  1\n 1  1  1  1  1\n 1  1  1  1  1\n 1  1  1  1  1\n[torch.FloatTensor of size 5x5]\n</code></pre>", "body_text": "Will fix.\nIt would be nice to add some type checking to __setitem__ because there are lots of ways that you can provide bad input that will not get caught or will get caught with weird errors that don't really explain what's going on. there are lots of ways you can provide bad input to __setitem__ that won't get caught or will get caught in weird ways, e.g.\n>>> v = Variable(torch.Tensor(5,5).fill_(1))\n>>> mask = torch.ByteTensor(5,5).fill_(0)\n>>> mask[1] = 1\n>>> v[mask] = 2  # oops, should be Variable(mask)\n>>> v\nVariable containing:\n 1  1  1  1  1\n 1  1  1  1  1\n 1  1  1  1  1\n 1  1  1  1  1\n 1  1  1  1  1\n[torch.FloatTensor of size 5x5]", "in_reply_to_id": 83596996}