{"url": "https://api.github.com/repos/pytorch/pytorch/issues/comments/408397471", "html_url": "https://github.com/pytorch/pytorch/issues/8366#issuecomment-408397471", "issue_url": "https://api.github.com/repos/pytorch/pytorch/issues/8366", "id": 408397471, "node_id": "MDEyOklzc3VlQ29tbWVudDQwODM5NzQ3MQ==", "user": {"login": "ClementPinard", "id": 4380424, "node_id": "MDQ6VXNlcjQzODA0MjQ=", "avatar_url": "https://avatars2.githubusercontent.com/u/4380424?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ClementPinard", "html_url": "https://github.com/ClementPinard", "followers_url": "https://api.github.com/users/ClementPinard/followers", "following_url": "https://api.github.com/users/ClementPinard/following{/other_user}", "gists_url": "https://api.github.com/users/ClementPinard/gists{/gist_id}", "starred_url": "https://api.github.com/users/ClementPinard/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ClementPinard/subscriptions", "organizations_url": "https://api.github.com/users/ClementPinard/orgs", "repos_url": "https://api.github.com/users/ClementPinard/repos", "events_url": "https://api.github.com/users/ClementPinard/events{/privacy}", "received_events_url": "https://api.github.com/users/ClementPinard/received_events", "type": "User", "site_admin": false}, "created_at": "2018-07-27T11:56:39Z", "updated_at": "2018-07-27T11:56:39Z", "author_association": "NONE", "body_html": "<p>It seems to serve also for custom CPU kernels, since when implementing a looped operation, e.g. for something not available with a classic vectorwise Aten function, you access the tensor many times by <code>Tensor[h][w]</code> (just an example).</p>\n<p>What about a <code>kernel_accessor</code> then ? only for global Cuda kernel operators.</p>", "body_text": "It seems to serve also for custom CPU kernels, since when implementing a looped operation, e.g. for something not available with a classic vectorwise Aten function, you access the tensor many times by Tensor[h][w] (just an example).\nWhat about a kernel_accessor then ? only for global Cuda kernel operators.", "body": "It seems to serve also for custom CPU kernels, since when implementing a looped operation, e.g. for something not available with a classic vectorwise Aten function, you access the tensor many times by `Tensor[h][w]` (just an example).\r\n\r\nWhat about a `kernel_accessor` then ? only for global Cuda kernel operators."}