{"url": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/159332604", "pull_request_review_id": 86264250, "id": 159332604, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE1OTMzMjYwNA==", "diff_hunk": "@@ -37,20 +45,17 @@ def sample(self, sample_shape=torch.Size()):\n         shape = self._extended_shape(sample_shape)\n         return torch.bernoulli(self.probs.expand(shape))\n \n+    def _binary_cross_entropy(self, value):\n+        max_val = (-self.logits).clamp(min=0)\n+        return self.logits - self.logits * value + max_val + \\\n+            ((-max_val).exp() + (-self.logits - max_val).exp()).log()\n+\n     def log_prob(self, value):\n         self._validate_log_prob_arg(value)\n-        param_shape = value.size()\n-        probs = self.probs.expand(param_shape)\n-        # compute the log probabilities for 0 and 1\n-        log_pmf = (torch.stack([1 - probs, probs], dim=-1)).log()\n-        # evaluate using the values\n-        return log_pmf.gather(-1, value.unsqueeze(-1).long()).squeeze(-1)\n+        return -self._binary_cross_entropy(value)", "path": "torch/distributions/bernoulli.py", "position": null, "original_position": 45, "commit_id": "c0cca3bfb188f1588c6276e9235b56447b5cc530", "original_commit_id": "5d36d06a9ccff66fbe9eb669760a4553b13fe606", "user": {"login": "neerajprad", "id": 1762463, "node_id": "MDQ6VXNlcjE3NjI0NjM=", "avatar_url": "https://avatars3.githubusercontent.com/u/1762463?v=4", "gravatar_id": "", "url": "https://api.github.com/users/neerajprad", "html_url": "https://github.com/neerajprad", "followers_url": "https://api.github.com/users/neerajprad/followers", "following_url": "https://api.github.com/users/neerajprad/following{/other_user}", "gists_url": "https://api.github.com/users/neerajprad/gists{/gist_id}", "starred_url": "https://api.github.com/users/neerajprad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/neerajprad/subscriptions", "organizations_url": "https://api.github.com/users/neerajprad/orgs", "repos_url": "https://api.github.com/users/neerajprad/repos", "events_url": "https://api.github.com/users/neerajprad/events{/privacy}", "received_events_url": "https://api.github.com/users/neerajprad/received_events", "type": "User", "site_admin": false}, "body": "I wanted to use `cross_entropy_with_logits` but you are right that `reduce` arg is not available with that. \r\n\r\nIf we are operating with logits, this will be more stable. See:\r\n\r\n```\r\n>>> b = Bernoulli(logits=torch.FloatTensor([-32, -8]))\r\n>>> b.log_prob(torch.FloatTensor([0, 1]))\r\n\r\n-0.0000\r\n-8.0003\r\n[torch.FloatTensor of size 2]\r\n\r\n>>> torch._C._nn.binary_cross_entropy(Variable(b.probs), Variable(torch.FloatTensor([0, 1])), reduce=False)\r\nVariable containing:\r\n-9.8743e-13\r\n 8.0003e+00\r\n[torch.FloatTensor of size 2]\r\n```", "created_at": "2018-01-02T22:45:21Z", "updated_at": "2018-11-23T15:37:47Z", "html_url": "https://github.com/pytorch/pytorch/pull/4448#discussion_r159332604", "pull_request_url": "https://api.github.com/repos/pytorch/pytorch/pulls/4448", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/159332604"}, "html": {"href": "https://github.com/pytorch/pytorch/pull/4448#discussion_r159332604"}, "pull_request": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/4448"}}, "body_html": "<p>I wanted to use <code>cross_entropy_with_logits</code> but you are right that <code>reduce</code> arg is not available with that.</p>\n<p>If we are operating with logits, this will be more stable. See:</p>\n<pre><code>&gt;&gt;&gt; b = Bernoulli(logits=torch.FloatTensor([-32, -8]))\n&gt;&gt;&gt; b.log_prob(torch.FloatTensor([0, 1]))\n\n-0.0000\n-8.0003\n[torch.FloatTensor of size 2]\n\n&gt;&gt;&gt; torch._C._nn.binary_cross_entropy(Variable(b.probs), Variable(torch.FloatTensor([0, 1])), reduce=False)\nVariable containing:\n-9.8743e-13\n 8.0003e+00\n[torch.FloatTensor of size 2]\n</code></pre>", "body_text": "I wanted to use cross_entropy_with_logits but you are right that reduce arg is not available with that.\nIf we are operating with logits, this will be more stable. See:\n>>> b = Bernoulli(logits=torch.FloatTensor([-32, -8]))\n>>> b.log_prob(torch.FloatTensor([0, 1]))\n\n-0.0000\n-8.0003\n[torch.FloatTensor of size 2]\n\n>>> torch._C._nn.binary_cross_entropy(Variable(b.probs), Variable(torch.FloatTensor([0, 1])), reduce=False)\nVariable containing:\n-9.8743e-13\n 8.0003e+00\n[torch.FloatTensor of size 2]", "in_reply_to_id": 159323857}