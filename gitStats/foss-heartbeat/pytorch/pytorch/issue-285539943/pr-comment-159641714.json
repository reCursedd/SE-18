{"url": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/159641714", "pull_request_review_id": 86621891, "id": 159641714, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE1OTY0MTcxNA==", "diff_hunk": "@@ -31,16 +31,22 @@ def __init__(self, probs=None, logits=None):\n             raise ValueError(\"Either `probs` or `logits` must be specified, but not both.\")\n         if probs is not None:\n             self.probs, = broadcast_all(probs)\n-            self.logits = probs_to_logits(self.probs, is_binary=True)\n         else:\n             self.logits, = broadcast_all(logits)\n-            self.probs = logits_to_probs(self.logits, is_binary=True)\n-        if isinstance(probs, Number):\n+        if isinstance(probs, Number) or isinstance(logits, Number):", "path": "torch/distributions/bernoulli.py", "position": null, "original_position": 18, "commit_id": "c0cca3bfb188f1588c6276e9235b56447b5cc530", "original_commit_id": "03f63158707db40c82d7164562196265a0b4d22d", "user": {"login": "apaszke", "id": 4583066, "node_id": "MDQ6VXNlcjQ1ODMwNjY=", "avatar_url": "https://avatars3.githubusercontent.com/u/4583066?v=4", "gravatar_id": "", "url": "https://api.github.com/users/apaszke", "html_url": "https://github.com/apaszke", "followers_url": "https://api.github.com/users/apaszke/followers", "following_url": "https://api.github.com/users/apaszke/following{/other_user}", "gists_url": "https://api.github.com/users/apaszke/gists{/gist_id}", "starred_url": "https://api.github.com/users/apaszke/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/apaszke/subscriptions", "organizations_url": "https://api.github.com/users/apaszke/orgs", "repos_url": "https://api.github.com/users/apaszke/repos", "events_url": "https://api.github.com/users/apaszke/events{/privacy}", "received_events_url": "https://api.github.com/users/apaszke/received_events", "type": "User", "site_admin": false}, "body": "One suggestion (feel free to ignore that if you don't want to implement it), for both here and in `Categorical` would be to define `probs_or_logits` in the `if` above, to make it point to whatever was specified to the distribution. You're only using the shape so that's enough, it will save you all the conditionals, and we will be sure that you're not triggering the lazy attributes by accident.\r\n\r\n  ", "created_at": "2018-01-04T12:30:13Z", "updated_at": "2018-11-23T15:37:49Z", "html_url": "https://github.com/pytorch/pytorch/pull/4448#discussion_r159641714", "pull_request_url": "https://api.github.com/repos/pytorch/pytorch/pulls/4448", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/159641714"}, "html": {"href": "https://github.com/pytorch/pytorch/pull/4448#discussion_r159641714"}, "pull_request": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/4448"}}, "body_html": "<p>One suggestion (feel free to ignore that if you don't want to implement it), for both here and in <code>Categorical</code> would be to define <code>probs_or_logits</code> in the <code>if</code> above, to make it point to whatever was specified to the distribution. You're only using the shape so that's enough, it will save you all the conditionals, and we will be sure that you're not triggering the lazy attributes by accident.</p>", "body_text": "One suggestion (feel free to ignore that if you don't want to implement it), for both here and in Categorical would be to define probs_or_logits in the if above, to make it point to whatever was specified to the distribution. You're only using the shape so that's enough, it will save you all the conditionals, and we will be sure that you're not triggering the lazy attributes by accident."}