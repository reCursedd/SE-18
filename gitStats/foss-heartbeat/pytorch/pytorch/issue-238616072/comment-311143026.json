{"url": "https://api.github.com/repos/pytorch/pytorch/issues/comments/311143026", "html_url": "https://github.com/pytorch/pytorch/pull/1916#issuecomment-311143026", "issue_url": "https://api.github.com/repos/pytorch/pytorch/issues/1916", "id": 311143026, "node_id": "MDEyOklzc3VlQ29tbWVudDMxMTE0MzAyNg==", "user": {"login": "jekbradbury", "id": 11729078, "node_id": "MDQ6VXNlcjExNzI5MDc4", "avatar_url": "https://avatars2.githubusercontent.com/u/11729078?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jekbradbury", "html_url": "https://github.com/jekbradbury", "followers_url": "https://api.github.com/users/jekbradbury/followers", "following_url": "https://api.github.com/users/jekbradbury/following{/other_user}", "gists_url": "https://api.github.com/users/jekbradbury/gists{/gist_id}", "starred_url": "https://api.github.com/users/jekbradbury/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jekbradbury/subscriptions", "organizations_url": "https://api.github.com/users/jekbradbury/orgs", "repos_url": "https://api.github.com/users/jekbradbury/repos", "events_url": "https://api.github.com/users/jekbradbury/events{/privacy}", "received_events_url": "https://api.github.com/users/jekbradbury/received_events", "type": "User", "site_admin": false}, "created_at": "2017-06-26T18:29:18Z", "updated_at": "2017-06-26T18:29:18Z", "author_association": "CONTRIBUTOR", "body_html": "<p>Any particular reason <code>_backend.Embedding</code> isn't wrapped in the functional interface? I just ran into a use case where I needed a functional-style embedding module; maybe <code>F.embedding(x, W)</code> should be a synonym of <code>self._backend.Embedding(-1, None, 2, False, False)(x, W)</code>?</p>", "body_text": "Any particular reason _backend.Embedding isn't wrapped in the functional interface? I just ran into a use case where I needed a functional-style embedding module; maybe F.embedding(x, W) should be a synonym of self._backend.Embedding(-1, None, 2, False, False)(x, W)?", "body": "Any particular reason `_backend.Embedding` isn't wrapped in the functional interface? I just ran into a use case where I needed a functional-style embedding module; maybe `F.embedding(x, W)` should be a synonym of `self._backend.Embedding(-1, None, 2, False, False)(x, W)`?"}