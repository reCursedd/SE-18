{"url": "https://api.github.com/repos/pytorch/pytorch/issues/comments/420000205", "html_url": "https://github.com/pytorch/pytorch/pull/11379#issuecomment-420000205", "issue_url": "https://api.github.com/repos/pytorch/pytorch/issues/11379", "id": 420000205, "node_id": "MDEyOklzc3VlQ29tbWVudDQyMDAwMDIwNQ==", "user": {"login": "Tixxx", "id": 26332583, "node_id": "MDQ6VXNlcjI2MzMyNTgz", "avatar_url": "https://avatars1.githubusercontent.com/u/26332583?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Tixxx", "html_url": "https://github.com/Tixxx", "followers_url": "https://api.github.com/users/Tixxx/followers", "following_url": "https://api.github.com/users/Tixxx/following{/other_user}", "gists_url": "https://api.github.com/users/Tixxx/gists{/gist_id}", "starred_url": "https://api.github.com/users/Tixxx/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Tixxx/subscriptions", "organizations_url": "https://api.github.com/users/Tixxx/orgs", "repos_url": "https://api.github.com/users/Tixxx/repos", "events_url": "https://api.github.com/users/Tixxx/events{/privacy}", "received_events_url": "https://api.github.com/users/Tixxx/received_events", "type": "User", "site_admin": false}, "created_at": "2018-09-10T17:46:32Z", "updated_at": "2018-09-10T17:46:32Z", "author_association": "NONE", "body_html": "<p><a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=9998726\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/peterjc123\">@peterjc123</a> Wrong TJ tagged :) I use a different handle on Github.<br>\nFYI, i tested below patch on my machine and it worked with any arch level:</p>\n<p>diff --git a/Eigen/src/Core/arch/CUDA/Half.h b/Eigen/src/Core/arch/CUDA/Half.h<br>\nindex 2bb3d0d9b..b9f1fe6cf 100644<br>\n--- a/Eigen/src/Core/arch/CUDA/Half.h<br>\n+++ b/Eigen/src/Core/arch/CUDA/Half.h<br>\n@@ -209,7 +209,11 @@ namespace half_impl {<br>\n// conversion steps back and forth.</p>\n<p>EIGEN_STRONG_INLINE <strong>device</strong> half operator + (const half&amp; a, const half&amp; b) {<br>\n+#if defined(EIGEN_CUDACC_VER) &amp;&amp; EIGEN_CUDACC_VER &gt;= 90000</p>\n<ul>\n<li>return __hadd(::__half(a), ::__half(b));<br>\n+#else<br>\nreturn __hadd(a, b);<br>\n+#endif<br>\n}<br>\nEIGEN_STRONG_INLINE <strong>device</strong> half operator * (const half&amp; a, const half&amp; b) {<br>\nreturn __hmul(a, b);<br>\n@@ -218,9 +222,13 @@ EIGEN_STRONG_INLINE <strong>device</strong> half operator - (const half&amp; a, const half&amp; b) {<br>\nreturn __hsub(a, b);<br>\n}<br>\nEIGEN_STRONG_INLINE <strong>device</strong> half operator / (const half&amp; a, const half&amp; b) {<br>\n+#if defined(EIGEN_CUDACC_VER) &amp;&amp; EIGEN_CUDACC_VER &gt;= 90000</li>\n<li>return __hdiv(a, b);<br>\n+#else<br>\nfloat num = __half2float(a);<br>\nfloat denom = __half2float(b);<br>\nreturn __float2half(num / denom);<br>\n+#endif<br>\n}<br>\nEIGEN_STRONG_INLINE <strong>device</strong> half operator - (const half&amp; a) {<br>\nreturn __hneg(a);</li>\n</ul>", "body_text": "@peterjc123 Wrong TJ tagged :) I use a different handle on Github.\nFYI, i tested below patch on my machine and it worked with any arch level:\ndiff --git a/Eigen/src/Core/arch/CUDA/Half.h b/Eigen/src/Core/arch/CUDA/Half.h\nindex 2bb3d0d9b..b9f1fe6cf 100644\n--- a/Eigen/src/Core/arch/CUDA/Half.h\n+++ b/Eigen/src/Core/arch/CUDA/Half.h\n@@ -209,7 +209,11 @@ namespace half_impl {\n// conversion steps back and forth.\nEIGEN_STRONG_INLINE device half operator + (const half& a, const half& b) {\n+#if defined(EIGEN_CUDACC_VER) && EIGEN_CUDACC_VER >= 90000\n\nreturn __hadd(::__half(a), ::__half(b));\n+#else\nreturn __hadd(a, b);\n+#endif\n}\nEIGEN_STRONG_INLINE device half operator * (const half& a, const half& b) {\nreturn __hmul(a, b);\n@@ -218,9 +222,13 @@ EIGEN_STRONG_INLINE device half operator - (const half& a, const half& b) {\nreturn __hsub(a, b);\n}\nEIGEN_STRONG_INLINE device half operator / (const half& a, const half& b) {\n+#if defined(EIGEN_CUDACC_VER) && EIGEN_CUDACC_VER >= 90000\nreturn __hdiv(a, b);\n+#else\nfloat num = __half2float(a);\nfloat denom = __half2float(b);\nreturn __float2half(num / denom);\n+#endif\n}\nEIGEN_STRONG_INLINE device half operator - (const half& a) {\nreturn __hneg(a);", "body": "@peterjc123 Wrong TJ tagged :) I use a different handle on Github.\r\nFYI, i tested below patch on my machine and it worked with any arch level:\r\n\r\ndiff --git a/Eigen/src/Core/arch/CUDA/Half.h b/Eigen/src/Core/arch/CUDA/Half.h\r\nindex 2bb3d0d9b..b9f1fe6cf 100644\r\n--- a/Eigen/src/Core/arch/CUDA/Half.h\r\n+++ b/Eigen/src/Core/arch/CUDA/Half.h\r\n@@ -209,7 +209,11 @@ namespace half_impl {\r\n // conversion steps back and forth.\r\n \r\n EIGEN_STRONG_INLINE __device__ half operator + (const half& a, const half& b) {\r\n+#if defined(EIGEN_CUDACC_VER) && EIGEN_CUDACC_VER >= 90000\r\n+  return __hadd(::__half(a), ::__half(b));\r\n+#else\r\n   return __hadd(a, b);\r\n+#endif\r\n }\r\n EIGEN_STRONG_INLINE __device__ half operator * (const half& a, const half& b) {\r\n   return __hmul(a, b);\r\n@@ -218,9 +222,13 @@ EIGEN_STRONG_INLINE __device__ half operator - (const half& a, const half& b) {\r\n   return __hsub(a, b);\r\n }\r\n EIGEN_STRONG_INLINE __device__ half operator / (const half& a, const half& b) {\r\n+#if defined(EIGEN_CUDACC_VER) && EIGEN_CUDACC_VER >= 90000\r\n+  return __hdiv(a, b);\r\n+#else\r\n   float num = __half2float(a);\r\n   float denom = __half2float(b);\r\n   return __float2half(num / denom);\r\n+#endif\r\n }\r\n EIGEN_STRONG_INLINE __device__ half operator - (const half& a) {\r\n   return __hneg(a);\r\n"}