{"url": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/210666847", "pull_request_review_id": 146929091, "id": 210666847, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIxMDY2Njg0Nw==", "diff_hunk": "@@ -0,0 +1,88 @@\n+#if defined USE_CUDA && !(defined _WIN32) && !(defined USE_ROCM)\n+#pragma once\n+\n+#include \"torch/csrc/jit/fusers/cuda/cuda_fuser.h\"\n+#include <unordered_map>\n+\n+namespace torch { namespace jit {\n+\n+// What is a simple mappable operator?  It is:\n+//    - Has an output with the same sizes as its input\n+//    - Single output\n+//    - Can handle non-contiguous input\n+//    - Produces contiguous output\n+// Some of these restrictions may be relaxable, but you should\n+// carefully read the code first, as we rely on these assumptions.\n+std::unordered_set<NodeKind> simple_mappable = {", "path": "torch/csrc/jit/fusers/cuda/simple_ops.h", "position": 16, "original_position": 16, "commit_id": "75c6809940efe8ab293e80a55ddf5910e0bb02f7", "original_commit_id": "75c6809940efe8ab293e80a55ddf5910e0bb02f7", "user": {"login": "apaszke", "id": 4583066, "node_id": "MDQ6VXNlcjQ1ODMwNjY=", "avatar_url": "https://avatars3.githubusercontent.com/u/4583066?v=4", "gravatar_id": "", "url": "https://api.github.com/users/apaszke", "html_url": "https://github.com/apaszke", "followers_url": "https://api.github.com/users/apaszke/followers", "following_url": "https://api.github.com/users/apaszke/following{/other_user}", "gists_url": "https://api.github.com/users/apaszke/gists{/gist_id}", "starred_url": "https://api.github.com/users/apaszke/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/apaszke/subscriptions", "organizations_url": "https://api.github.com/users/apaszke/orgs", "repos_url": "https://api.github.com/users/apaszke/repos", "events_url": "https://api.github.com/users/apaszke/events{/privacy}", "received_events_url": "https://api.github.com/users/apaszke/received_events", "type": "User", "site_admin": false}, "body": "This is a non-inline non-static map in a header. That's not a good idea. This is really needed only in the fuser pass, so I don't understand why did this end up in a header", "created_at": "2018-08-16T16:49:56Z", "updated_at": "2018-11-23T15:49:32Z", "html_url": "https://github.com/pytorch/pytorch/pull/10561#discussion_r210666847", "pull_request_url": "https://api.github.com/repos/pytorch/pytorch/pulls/10561", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/210666847"}, "html": {"href": "https://github.com/pytorch/pytorch/pull/10561#discussion_r210666847"}, "pull_request": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/10561"}}, "body_html": "<p>This is a non-inline non-static map in a header. That's not a good idea. This is really needed only in the fuser pass, so I don't understand why did this end up in a header</p>", "body_text": "This is a non-inline non-static map in a header. That's not a good idea. This is really needed only in the fuser pass, so I don't understand why did this end up in a header"}