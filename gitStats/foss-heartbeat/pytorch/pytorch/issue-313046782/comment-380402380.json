{"url": "https://api.github.com/repos/pytorch/pytorch/issues/comments/380402380", "html_url": "https://github.com/pytorch/pytorch/issues/6477#issuecomment-380402380", "issue_url": "https://api.github.com/repos/pytorch/pytorch/issues/6477", "id": 380402380, "node_id": "MDEyOklzc3VlQ29tbWVudDM4MDQwMjM4MA==", "user": {"login": "shekhovt", "id": 2486893, "node_id": "MDQ6VXNlcjI0ODY4OTM=", "avatar_url": "https://avatars0.githubusercontent.com/u/2486893?v=4", "gravatar_id": "", "url": "https://api.github.com/users/shekhovt", "html_url": "https://github.com/shekhovt", "followers_url": "https://api.github.com/users/shekhovt/followers", "following_url": "https://api.github.com/users/shekhovt/following{/other_user}", "gists_url": "https://api.github.com/users/shekhovt/gists{/gist_id}", "starred_url": "https://api.github.com/users/shekhovt/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/shekhovt/subscriptions", "organizations_url": "https://api.github.com/users/shekhovt/orgs", "repos_url": "https://api.github.com/users/shekhovt/repos", "events_url": "https://api.github.com/users/shekhovt/events{/privacy}", "received_events_url": "https://api.github.com/users/shekhovt/received_events", "type": "User", "site_admin": false}, "created_at": "2018-04-11T10:18:35Z", "updated_at": "2018-04-11T10:18:35Z", "author_association": "NONE", "body_html": "<p>I've checked all the above cases work for me on 0.3.1.<br>\nWhat doesn't work on 0.3.1 or is not conforming to the documented interface <code>set_(source=None, storage_offset=0, size=None, stride=None) \u2192 Tensor</code>:</p>\n<p><code>x.set_(y, size=[2], storage_offset=1)</code><br>\n(the doc says source can be Tensor or Storage)<br>\nTypeError: set_ received an invalid combination of arguments - got (torch.FloatTensor, storage_offset=int, size=list)</p>\n<p><code>x.set_(source = y.storage(), size=[2], storage_offset=1)</code><br>\nTypeError: set_ received an invalid combination of arguments - got (storage_offset=int, size=list, source=torch.FloatStorage, )</p>\n<p><code>x.set_(None, size=[2], storage_offset=0)</code><br>\nTypeError: set_ received an invalid combination of arguments - got (NoneType, storage_offset=int, size=list)</p>\n<p><code>x.set_(y.storage(), size=[2]) </code><br>\n(expecting the default storage_offset=0)<br>\nTypeError...</p>\n<p>With a bit more digging I can see that the following works<br>\n<code>x.set_(storage=y.storage())</code><br>\n<code>x.set_(source=y)</code><br>\n<code>x.set_(sourceStorage=y.storage(), size=[2], storage_offset=0)</code><br>\nbut is not matching to the documented python interface.</p>", "body_text": "I've checked all the above cases work for me on 0.3.1.\nWhat doesn't work on 0.3.1 or is not conforming to the documented interface set_(source=None, storage_offset=0, size=None, stride=None) \u2192 Tensor:\nx.set_(y, size=[2], storage_offset=1)\n(the doc says source can be Tensor or Storage)\nTypeError: set_ received an invalid combination of arguments - got (torch.FloatTensor, storage_offset=int, size=list)\nx.set_(source = y.storage(), size=[2], storage_offset=1)\nTypeError: set_ received an invalid combination of arguments - got (storage_offset=int, size=list, source=torch.FloatStorage, )\nx.set_(None, size=[2], storage_offset=0)\nTypeError: set_ received an invalid combination of arguments - got (NoneType, storage_offset=int, size=list)\nx.set_(y.storage(), size=[2]) \n(expecting the default storage_offset=0)\nTypeError...\nWith a bit more digging I can see that the following works\nx.set_(storage=y.storage())\nx.set_(source=y)\nx.set_(sourceStorage=y.storage(), size=[2], storage_offset=0)\nbut is not matching to the documented python interface.", "body": "I've checked all the above cases work for me on 0.3.1.\r\nWhat doesn't work on 0.3.1 or is not conforming to the documented interface `set_(source=None, storage_offset=0, size=None, stride=None) \u2192 Tensor`:\r\n\r\n`x.set_(y, size=[2], storage_offset=1)`\r\n(the doc says source can be Tensor or Storage)\r\nTypeError: set_ received an invalid combination of arguments - got (torch.FloatTensor, storage_offset=int, size=list)\r\n\r\n`x.set_(source = y.storage(), size=[2], storage_offset=1)`\r\nTypeError: set_ received an invalid combination of arguments - got (storage_offset=int, size=list, source=torch.FloatStorage, )\r\n\r\n`x.set_(None, size=[2], storage_offset=0)`\r\nTypeError: set_ received an invalid combination of arguments - got (NoneType, storage_offset=int, size=list)\r\n\r\n`x.set_(y.storage(), size=[2]) `\r\n(expecting the default storage_offset=0)\r\nTypeError...\r\n\r\nWith a bit more digging I can see that the following works \r\n`x.set_(storage=y.storage())`\r\n`x.set_(source=y)`\r\n`x.set_(sourceStorage=y.storage(), size=[2], storage_offset=0)`\r\nbut is not matching to the documented python interface."}