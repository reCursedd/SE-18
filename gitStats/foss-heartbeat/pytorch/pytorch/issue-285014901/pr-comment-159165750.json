{"url": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/159165750", "pull_request_review_id": 86071409, "id": 159165750, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE1OTE2NTc1MA==", "diff_hunk": "@@ -197,6 +197,16 @@ def test_sinh(self):\n     def test_lgamma(self):\n         self._testMathByName('lgamma')\n \n+    @unittest.skipIf(not TEST_SCIPY, \"Scipy not found\")\n+    def test_digamma(self):\n+        from scipy.special import digamma\n+        self._testMath(torch.digamma, digamma)\n+\n+    @unittest.skipIf(not TEST_SCIPY, \"Scipy not found\")\n+    def test_trigamma(self):\n+        from scipy.special import polygamma", "path": "test/test_torch.py", "position": null, "original_position": 11, "commit_id": "92cec60d58a6a7c1567abad8d2720d070481c837", "original_commit_id": "e52ff9860d5e890a3720f2d7da2f73f4a6c89d70", "user": {"login": "apaszke", "id": 4583066, "node_id": "MDQ6VXNlcjQ1ODMwNjY=", "avatar_url": "https://avatars3.githubusercontent.com/u/4583066?v=4", "gravatar_id": "", "url": "https://api.github.com/users/apaszke", "html_url": "https://github.com/apaszke", "followers_url": "https://api.github.com/users/apaszke/followers", "following_url": "https://api.github.com/users/apaszke/following{/other_user}", "gists_url": "https://api.github.com/users/apaszke/gists{/gist_id}", "starred_url": "https://api.github.com/users/apaszke/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/apaszke/subscriptions", "organizations_url": "https://api.github.com/users/apaszke/orgs", "repos_url": "https://api.github.com/users/apaszke/repos", "events_url": "https://api.github.com/users/apaszke/events{/privacy}", "received_events_url": "https://api.github.com/users/apaszke/received_events", "type": "User", "site_admin": false}, "body": "Yes I've been thinking of having a polygamma that only supports `n` up to 2 (or up to `1`, if we want to be consistent with SciPy). It should still be quite straightforward - just add an extra argument in all yaml declarations (`- int degree`), and add it to the C signature", "created_at": "2018-01-01T23:10:34Z", "updated_at": "2018-11-23T15:37:45Z", "html_url": "https://github.com/pytorch/pytorch/pull/4399#discussion_r159165750", "pull_request_url": "https://api.github.com/repos/pytorch/pytorch/pulls/4399", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/159165750"}, "html": {"href": "https://github.com/pytorch/pytorch/pull/4399#discussion_r159165750"}, "pull_request": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/4399"}}, "body_html": "<p>Yes I've been thinking of having a polygamma that only supports <code>n</code> up to 2 (or up to <code>1</code>, if we want to be consistent with SciPy). It should still be quite straightforward - just add an extra argument in all yaml declarations (<code>- int degree</code>), and add it to the C signature</p>", "body_text": "Yes I've been thinking of having a polygamma that only supports n up to 2 (or up to 1, if we want to be consistent with SciPy). It should still be quite straightforward - just add an extra argument in all yaml declarations (- int degree), and add it to the C signature", "in_reply_to_id": 159164349}