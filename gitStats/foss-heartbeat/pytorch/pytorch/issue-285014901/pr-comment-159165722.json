{"url": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/159165722", "pull_request_review_id": 86071375, "id": 159165722, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE1OTE2NTcyMg==", "diff_hunk": "@@ -779,5 +779,49 @@ struct TensorBitXorOp {\n   }\n };\n \n+template <typename real, typename accreal>\n+struct TensorDigammaOp {\n+  __device__ __forceinline__ void\n+  operator()(real* out, real* in) {\n+    static accreal PI = 3.14159265358979323846;\n+    accreal x = ScalarConvert<real, accreal>::to(*in);\n+    accreal result = 0;", "path": "aten/src/THC/THCTensorMathPointwise.cuh", "position": null, "original_position": 10, "commit_id": "92cec60d58a6a7c1567abad8d2720d070481c837", "original_commit_id": "e52ff9860d5e890a3720f2d7da2f73f4a6c89d70", "user": {"login": "apaszke", "id": 4583066, "node_id": "MDQ6VXNlcjQ1ODMwNjY=", "avatar_url": "https://avatars3.githubusercontent.com/u/4583066?v=4", "gravatar_id": "", "url": "https://api.github.com/users/apaszke", "html_url": "https://github.com/apaszke", "followers_url": "https://api.github.com/users/apaszke/followers", "following_url": "https://api.github.com/users/apaszke/following{/other_user}", "gists_url": "https://api.github.com/users/apaszke/gists{/gist_id}", "starred_url": "https://api.github.com/users/apaszke/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/apaszke/subscriptions", "organizations_url": "https://api.github.com/users/apaszke/orgs", "repos_url": "https://api.github.com/users/apaszke/repos", "events_url": "https://api.github.com/users/apaszke/events{/privacy}", "received_events_url": "https://api.github.com/users/apaszke/received_events", "type": "User", "site_admin": false}, "body": "One way would be to do some template magic a'la\r\n```cpp\r\nusing compute_type = typename std::conditional<std::is_same<real, half>::value, accreal, real>::type;\r\n```", "created_at": "2018-01-01T23:09:00Z", "updated_at": "2018-11-23T15:37:45Z", "html_url": "https://github.com/pytorch/pytorch/pull/4399#discussion_r159165722", "pull_request_url": "https://api.github.com/repos/pytorch/pytorch/pulls/4399", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/159165722"}, "html": {"href": "https://github.com/pytorch/pytorch/pull/4399#discussion_r159165722"}, "pull_request": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/4399"}}, "body_html": "<p>One way would be to do some template magic a'la</p>\n<div class=\"highlight highlight-source-c++\"><pre><span class=\"pl-k\">using</span> compute_type = <span class=\"pl-k\">typename</span> std::conditional&lt;std::is_same&lt;real, half&gt;::value, accreal, real&gt;::type;</pre></div>", "body_text": "One way would be to do some template magic a'la\nusing compute_type = typename std::conditional<std::is_same<real, half>::value, accreal, real>::type;", "in_reply_to_id": 159164306}