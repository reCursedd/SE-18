{"url": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/159165530", "pull_request_review_id": 86071174, "id": 159165530, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE1OTE2NTUzMA==", "diff_hunk": "@@ -197,6 +197,16 @@ def test_sinh(self):\n     def test_lgamma(self):\n         self._testMathByName('lgamma')\n \n+    @unittest.skipIf(not TEST_SCIPY, \"Scipy not found\")\n+    def test_digamma(self):\n+        from scipy.special import digamma\n+        self._testMath(torch.digamma, digamma)\n+\n+    @unittest.skipIf(not TEST_SCIPY, \"Scipy not found\")\n+    def test_trigamma(self):\n+        from scipy.special import polygamma", "path": "test/test_torch.py", "position": null, "original_position": 11, "commit_id": "92cec60d58a6a7c1567abad8d2720d070481c837", "original_commit_id": "e52ff9860d5e890a3720f2d7da2f73f4a6c89d70", "user": {"login": "fritzo", "id": 648532, "node_id": "MDQ6VXNlcjY0ODUzMg==", "avatar_url": "https://avatars0.githubusercontent.com/u/648532?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fritzo", "html_url": "https://github.com/fritzo", "followers_url": "https://api.github.com/users/fritzo/followers", "following_url": "https://api.github.com/users/fritzo/following{/other_user}", "gists_url": "https://api.github.com/users/fritzo/gists{/gist_id}", "starred_url": "https://api.github.com/users/fritzo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fritzo/subscriptions", "organizations_url": "https://api.github.com/users/fritzo/orgs", "repos_url": "https://api.github.com/users/fritzo/repos", "events_url": "https://api.github.com/users/fritzo/events{/privacy}", "received_events_url": "https://api.github.com/users/fritzo/received_events", "type": "User", "site_admin": false}, "body": "Note that Pymc3 has a `trigamma()` ([code](https://github.com/pymc-devs/pymc3/blob/master/pymc3/distributions/special.py#L7)). If you do prefer `polygamma()` could you give me some tips on out how to change this PR? It was easy for me to implement `trigamma(x)` since I could copy wiring from @zou3519's `digamma(x)`, but `polygamma(n,x)` is a more complex interface and I'm not sure whether it will fit into the generic C macros and python tests.", "created_at": "2018-01-01T22:58:44Z", "updated_at": "2018-11-23T15:37:45Z", "html_url": "https://github.com/pytorch/pytorch/pull/4399#discussion_r159165530", "pull_request_url": "https://api.github.com/repos/pytorch/pytorch/pulls/4399", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/159165530"}, "html": {"href": "https://github.com/pytorch/pytorch/pull/4399#discussion_r159165530"}, "pull_request": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/4399"}}, "body_html": "<p>Note that Pymc3 has a <code>trigamma()</code> (<a href=\"https://github.com/pymc-devs/pymc3/blob/master/pymc3/distributions/special.py#L7\">code</a>). If you do prefer <code>polygamma()</code> could you give me some tips on out how to change this PR? It was easy for me to implement <code>trigamma(x)</code> since I could copy wiring from <a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=5652049\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/zou3519\">@zou3519</a>'s <code>digamma(x)</code>, but <code>polygamma(n,x)</code> is a more complex interface and I'm not sure whether it will fit into the generic C macros and python tests.</p>", "body_text": "Note that Pymc3 has a trigamma() (code). If you do prefer polygamma() could you give me some tips on out how to change this PR? It was easy for me to implement trigamma(x) since I could copy wiring from @zou3519's digamma(x), but polygamma(n,x) is a more complex interface and I'm not sure whether it will fit into the generic C macros and python tests.", "in_reply_to_id": 159164349}