{"url": "https://api.github.com/repos/pytorch/pytorch/issues/12914", "repository_url": "https://api.github.com/repos/pytorch/pytorch", "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/12914/labels{/name}", "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/12914/comments", "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/12914/events", "html_url": "https://github.com/pytorch/pytorch/pull/12914", "id": 372343392, "node_id": "MDExOlB1bGxSZXF1ZXN0MjI0NTYwMDYz", "number": 12914, "title": "Docs/cpp misc features and fixes", "user": {"login": "svenevs", "id": 5871461, "node_id": "MDQ6VXNlcjU4NzE0NjE=", "avatar_url": "https://avatars0.githubusercontent.com/u/5871461?v=4", "gravatar_id": "", "url": "https://api.github.com/users/svenevs", "html_url": "https://github.com/svenevs", "followers_url": "https://api.github.com/users/svenevs/followers", "following_url": "https://api.github.com/users/svenevs/following{/other_user}", "gists_url": "https://api.github.com/users/svenevs/gists{/gist_id}", "starred_url": "https://api.github.com/users/svenevs/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/svenevs/subscriptions", "organizations_url": "https://api.github.com/users/svenevs/orgs", "repos_url": "https://api.github.com/users/svenevs/repos", "events_url": "https://api.github.com/users/svenevs/events{/privacy}", "received_events_url": "https://api.github.com/users/svenevs/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2018-10-21T18:34:34Z", "updated_at": "2018-11-04T07:16:52Z", "closed_at": "2018-11-04T07:16:52Z", "author_association": "CONTRIBUTOR", "pull_request": {"url": "https://api.github.com/repos/pytorch/pytorch/pulls/12914", "html_url": "https://github.com/pytorch/pytorch/pull/12914", "diff_url": "https://github.com/pytorch/pytorch/pull/12914.diff", "patch_url": "https://github.com/pytorch/pytorch/pull/12914.patch"}, "body_html": "<p>CC: <a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=6429851\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/goldsborough\">@goldsborough</a></p>\n<ul class=\"contains-task-list\">\n<li class=\"task-list-item\">\n<p><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\" checked=\"\"> Use the shiny new feature just for <code>pytorch</code> like we talked about (<code>\"listingExclude\"</code>) to mitigate some of the PIMPL clutter.</p>\n</li>\n<li class=\"task-list-item\">\n<p><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\" checked=\"\"> Fix a few errors on <code>index.rst</code>.</p>\n</li>\n<li class=\"task-list-item\">\n<p><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\" checked=\"\"> Fix some broken <code>.. code-block::</code> directives.</p>\n</li>\n<li class=\"task-list-item\">\n<p><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\" checked=\"\"> Fix Markdown link by way of using intersphinx (can't use markdown linking style inside an <code>\\rst</code> block, but intersphinx is super sweet).  More info on using intersphinx with exhale <a href=\"https://my-favorite-documentation-test.readthedocs.io/en/latest/using_intersphinx.html\" rel=\"nofollow\">here</a>.</p>\n</li>\n<li class=\"task-list-item\">\n<p><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\" checked=\"\"> Make sure <code>torch::detail::CursorBase</code> reliably gets correct defining file assigned by skipping forward declarations (previously exhale was breaking a tie between <code>cursor.h</code> and <code>optimizer.h</code>, and was \"accidentally\" getting <code>cursor.h</code> correct, now it will reliably get <code>cursor.h</code>).</p>\n</li>\n<li class=\"task-list-item\">\n<p><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\"> There is a slight snag right now: <code>[~] Manually setting file definition of typedef disable_if_module_holder_t to [torch/csrc/api/include/torch/nn/module.h]</code>.  It's <em>used</em> in <code>module.h</code>, but is actually defined in <code>pimpl-inl.h</code>.  However, currently the following exclude for <code>Doxyfile</code> means this can't be recovered:</p>\n<div class=\"highlight highlight-source-makefile\"><pre><span class=\"pl-smi\">EXCLUDE</span> = ../../../torch/csrc/api/include/torch/nn/pimpl-inl.h <span class=\"pl-cce\">\\</span>\n          ../../../torch/csrc/api/include/torch/detail</pre></div>\n<p>Six on one hand, half dozen on the other.  There's no documentation on it, so it's not super important either way in my opinion.</p>\n</li>\n</ul>\n<p>P.S. Where the <code>.. code-block::</code> errors are concerned, there's a not-so-well-known way to quickly find out if these errors exist when you run <code>make html</code>.  I'm attaching a picture because it's a color-based approach.  Because of the unfortunate state of affairs with breathe and sphinx cpp domain, there's a lot of red text flying around.  That can make it next to impossible to find actual errors you can do something about because it all bleeds together.  But the ones that you can potentially fix are in a dim red (see picture), whereas the ones that are coming from breathe / sphinx tension are in bold red.</p>\n<p><a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://user-images.githubusercontent.com/5871461/47270751-089fd980-d525-11e8-8a30-50b0770cc409.png\"><img src=\"https://user-images.githubusercontent.com/5871461/47270751-089fd980-d525-11e8-8a30-50b0770cc409.png\" alt=\"finding_code_block_problems\" style=\"max-width:100%;\"></a></p>\n<p>Note of course this isn't a hard rule, for example there are some dim red ones that cannot be fixed (but apparently aren't actually a problem?), specifically</p>\n<pre><code>/home/sven/Desktop/pytorch/docs/cpp/source/api/function_namespacetorch_1_1nn_1_1init_1a105c2a8ef81c6faa82a01cf35ce9f3b1.rst:6: WARNING: Unknown target name: \"normal\".       \n/home/sven/Desktop/pytorch/docs/cpp/source/api/function_namespacetorch_1_1nn_1_1init_1a5978fcc257460475f635b5960e892a8e.rst:6: WARNING: Unknown target name: \"orthogonal\".   \n/home/sven/Desktop/pytorch/docs/cpp/source/api/function_namespacetorch_1_1nn_1_1init_1a77eb9bba76a93da5b33e7770f9113015.rst:6: WARNING: Unknown target name: \"eye\".          \n/home/sven/Desktop/pytorch/docs/cpp/source/api/function_namespacetorch_1_1nn_1_1init_1a82f2e5810880c7cc60c84516eb283be6.rst:6: WARNING: Unknown target name: \"sparse\".       \n/home/sven/Desktop/pytorch/docs/cpp/source/api/function_namespacetorch_1_1nn_1_1init_1a86191a828a085e1c720dbce185d6c307.rst:6: WARNING: Unknown target name: \"xavier_normal\".\n/home/sven/Desktop/pytorch/docs/cpp/source/api/function_namespacetorch_1_1nn_1_1init_1a9c886724aac3a487553dc0a406565c83.rst:6: WARNING: Unknown target name: \"constant\".\n/home/sven/Desktop/pytorch/docs/cpp/source/api/function_namespacetorch_1_1nn_1_1init_1a9dcc2051aadbe8ddb37d58bbd2b7943a.rst:6: WARNING: Unknown target name: \"ones\".\n/home/sven/Desktop/pytorch/docs/cpp/source/api/function_namespacetorch_1_1nn_1_1init_1ab0aeccca28b2225ee9aab809ec38a801.rst:6: WARNING: Unknown target name: \"uniform\".\n/home/sven/Desktop/pytorch/docs/cpp/source/api/function_namespacetorch_1_1nn_1_1init_1ab9fa9ea51c05df8a5c9dcca7a54dd628.rst:6: WARNING: Unknown target name: \"dirac\".\n/home/sven/Desktop/pytorch/docs/cpp/source/api/function_namespacetorch_1_1nn_1_1init_1ace282f75916a862c9678343dfd4d5ffe.rst:6: WARNING: Unknown target name: \"xavier_uniform\"\n.\n/home/sven/Desktop/pytorch/docs/cpp/source/api/function_namespacetorch_1_1nn_1_1init_1af7e7736ba2d050adc0523d84285564e8.rst:6: WARNING: Unknown target name: \"zeros\".\n</code></pre>\n<p>Those are dim red warnings, but the docs for them (<code>torch/csrc/api/include/torch/nn/init.h</code>) are valid.  It's because of the trailing underscore in those function names, but should be safe to ignore for now.</p>", "body_text": "CC: @goldsborough\n\n\n Use the shiny new feature just for pytorch like we talked about (\"listingExclude\") to mitigate some of the PIMPL clutter.\n\n\n Fix a few errors on index.rst.\n\n\n Fix some broken .. code-block:: directives.\n\n\n Fix Markdown link by way of using intersphinx (can't use markdown linking style inside an \\rst block, but intersphinx is super sweet).  More info on using intersphinx with exhale here.\n\n\n Make sure torch::detail::CursorBase reliably gets correct defining file assigned by skipping forward declarations (previously exhale was breaking a tie between cursor.h and optimizer.h, and was \"accidentally\" getting cursor.h correct, now it will reliably get cursor.h).\n\n\n There is a slight snag right now: [~] Manually setting file definition of typedef disable_if_module_holder_t to [torch/csrc/api/include/torch/nn/module.h].  It's used in module.h, but is actually defined in pimpl-inl.h.  However, currently the following exclude for Doxyfile means this can't be recovered:\nEXCLUDE = ../../../torch/csrc/api/include/torch/nn/pimpl-inl.h \\\n          ../../../torch/csrc/api/include/torch/detail\nSix on one hand, half dozen on the other.  There's no documentation on it, so it's not super important either way in my opinion.\n\n\nP.S. Where the .. code-block:: errors are concerned, there's a not-so-well-known way to quickly find out if these errors exist when you run make html.  I'm attaching a picture because it's a color-based approach.  Because of the unfortunate state of affairs with breathe and sphinx cpp domain, there's a lot of red text flying around.  That can make it next to impossible to find actual errors you can do something about because it all bleeds together.  But the ones that you can potentially fix are in a dim red (see picture), whereas the ones that are coming from breathe / sphinx tension are in bold red.\n\nNote of course this isn't a hard rule, for example there are some dim red ones that cannot be fixed (but apparently aren't actually a problem?), specifically\n/home/sven/Desktop/pytorch/docs/cpp/source/api/function_namespacetorch_1_1nn_1_1init_1a105c2a8ef81c6faa82a01cf35ce9f3b1.rst:6: WARNING: Unknown target name: \"normal\".       \n/home/sven/Desktop/pytorch/docs/cpp/source/api/function_namespacetorch_1_1nn_1_1init_1a5978fcc257460475f635b5960e892a8e.rst:6: WARNING: Unknown target name: \"orthogonal\".   \n/home/sven/Desktop/pytorch/docs/cpp/source/api/function_namespacetorch_1_1nn_1_1init_1a77eb9bba76a93da5b33e7770f9113015.rst:6: WARNING: Unknown target name: \"eye\".          \n/home/sven/Desktop/pytorch/docs/cpp/source/api/function_namespacetorch_1_1nn_1_1init_1a82f2e5810880c7cc60c84516eb283be6.rst:6: WARNING: Unknown target name: \"sparse\".       \n/home/sven/Desktop/pytorch/docs/cpp/source/api/function_namespacetorch_1_1nn_1_1init_1a86191a828a085e1c720dbce185d6c307.rst:6: WARNING: Unknown target name: \"xavier_normal\".\n/home/sven/Desktop/pytorch/docs/cpp/source/api/function_namespacetorch_1_1nn_1_1init_1a9c886724aac3a487553dc0a406565c83.rst:6: WARNING: Unknown target name: \"constant\".\n/home/sven/Desktop/pytorch/docs/cpp/source/api/function_namespacetorch_1_1nn_1_1init_1a9dcc2051aadbe8ddb37d58bbd2b7943a.rst:6: WARNING: Unknown target name: \"ones\".\n/home/sven/Desktop/pytorch/docs/cpp/source/api/function_namespacetorch_1_1nn_1_1init_1ab0aeccca28b2225ee9aab809ec38a801.rst:6: WARNING: Unknown target name: \"uniform\".\n/home/sven/Desktop/pytorch/docs/cpp/source/api/function_namespacetorch_1_1nn_1_1init_1ab9fa9ea51c05df8a5c9dcca7a54dd628.rst:6: WARNING: Unknown target name: \"dirac\".\n/home/sven/Desktop/pytorch/docs/cpp/source/api/function_namespacetorch_1_1nn_1_1init_1ace282f75916a862c9678343dfd4d5ffe.rst:6: WARNING: Unknown target name: \"xavier_uniform\"\n.\n/home/sven/Desktop/pytorch/docs/cpp/source/api/function_namespacetorch_1_1nn_1_1init_1af7e7736ba2d050adc0523d84285564e8.rst:6: WARNING: Unknown target name: \"zeros\".\n\nThose are dim red warnings, but the docs for them (torch/csrc/api/include/torch/nn/init.h) are valid.  It's because of the trailing underscore in those function names, but should be safe to ignore for now.", "body": "CC: @goldsborough \r\n\r\n- [x] Use the shiny new feature just for `pytorch` like we talked about (`\"listingExclude\"`) to mitigate some of the PIMPL clutter.\r\n- [x] Fix a few errors on `index.rst`.\r\n- [x] Fix some broken `.. code-block::` directives.\r\n- [x] Fix Markdown link by way of using intersphinx (can't use markdown linking style inside an `\\rst` block, but intersphinx is super sweet).  More info on using intersphinx with exhale [here](https://my-favorite-documentation-test.readthedocs.io/en/latest/using_intersphinx.html).\r\n- [x] Make sure `torch::detail::CursorBase` reliably gets correct defining file assigned by skipping forward declarations (previously exhale was breaking a tie between `cursor.h` and `optimizer.h`, and was \"accidentally\" getting `cursor.h` correct, now it will reliably get `cursor.h`).\r\n- [ ] There is a slight snag right now: `[~] Manually setting file definition of typedef disable_if_module_holder_t to [torch/csrc/api/include/torch/nn/module.h]`.  It's _used_ in `module.h`, but is actually defined in `pimpl-inl.h`.  However, currently the following exclude for `Doxyfile` means this can't be recovered:\r\n\r\n    ```make\r\n    EXCLUDE = ../../../torch/csrc/api/include/torch/nn/pimpl-inl.h \\\r\n              ../../../torch/csrc/api/include/torch/detail\r\n    ```\r\n\r\n    Six on one hand, half dozen on the other.  There's no documentation on it, so it's not super important either way in my opinion.\r\n\r\nP.S. Where the `.. code-block::` errors are concerned, there's a not-so-well-known way to quickly find out if these errors exist when you run `make html`.  I'm attaching a picture because it's a color-based approach.  Because of the unfortunate state of affairs with breathe and sphinx cpp domain, there's a lot of red text flying around.  That can make it next to impossible to find actual errors you can do something about because it all bleeds together.  But the ones that you can potentially fix are in a dim red (see picture), whereas the ones that are coming from breathe / sphinx tension are in bold red.\r\n\r\n![finding_code_block_problems](https://user-images.githubusercontent.com/5871461/47270751-089fd980-d525-11e8-8a30-50b0770cc409.png)\r\n\r\nNote of course this isn't a hard rule, for example there are some dim red ones that cannot be fixed (but apparently aren't actually a problem?), specifically\r\n\r\n```\r\n/home/sven/Desktop/pytorch/docs/cpp/source/api/function_namespacetorch_1_1nn_1_1init_1a105c2a8ef81c6faa82a01cf35ce9f3b1.rst:6: WARNING: Unknown target name: \"normal\".       \r\n/home/sven/Desktop/pytorch/docs/cpp/source/api/function_namespacetorch_1_1nn_1_1init_1a5978fcc257460475f635b5960e892a8e.rst:6: WARNING: Unknown target name: \"orthogonal\".   \r\n/home/sven/Desktop/pytorch/docs/cpp/source/api/function_namespacetorch_1_1nn_1_1init_1a77eb9bba76a93da5b33e7770f9113015.rst:6: WARNING: Unknown target name: \"eye\".          \r\n/home/sven/Desktop/pytorch/docs/cpp/source/api/function_namespacetorch_1_1nn_1_1init_1a82f2e5810880c7cc60c84516eb283be6.rst:6: WARNING: Unknown target name: \"sparse\".       \r\n/home/sven/Desktop/pytorch/docs/cpp/source/api/function_namespacetorch_1_1nn_1_1init_1a86191a828a085e1c720dbce185d6c307.rst:6: WARNING: Unknown target name: \"xavier_normal\".\r\n/home/sven/Desktop/pytorch/docs/cpp/source/api/function_namespacetorch_1_1nn_1_1init_1a9c886724aac3a487553dc0a406565c83.rst:6: WARNING: Unknown target name: \"constant\".\r\n/home/sven/Desktop/pytorch/docs/cpp/source/api/function_namespacetorch_1_1nn_1_1init_1a9dcc2051aadbe8ddb37d58bbd2b7943a.rst:6: WARNING: Unknown target name: \"ones\".\r\n/home/sven/Desktop/pytorch/docs/cpp/source/api/function_namespacetorch_1_1nn_1_1init_1ab0aeccca28b2225ee9aab809ec38a801.rst:6: WARNING: Unknown target name: \"uniform\".\r\n/home/sven/Desktop/pytorch/docs/cpp/source/api/function_namespacetorch_1_1nn_1_1init_1ab9fa9ea51c05df8a5c9dcca7a54dd628.rst:6: WARNING: Unknown target name: \"dirac\".\r\n/home/sven/Desktop/pytorch/docs/cpp/source/api/function_namespacetorch_1_1nn_1_1init_1ace282f75916a862c9678343dfd4d5ffe.rst:6: WARNING: Unknown target name: \"xavier_uniform\"\r\n.\r\n/home/sven/Desktop/pytorch/docs/cpp/source/api/function_namespacetorch_1_1nn_1_1init_1af7e7736ba2d050adc0523d84285564e8.rst:6: WARNING: Unknown target name: \"zeros\".\r\n```\r\n\r\nThose are dim red warnings, but the docs for them (`torch/csrc/api/include/torch/nn/init.h`) are valid.  It's because of the trailing underscore in those function names, but should be safe to ignore for now."}