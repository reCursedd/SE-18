{"url": "https://api.github.com/repos/pytorch/pytorch/issues/6167", "repository_url": "https://api.github.com/repos/pytorch/pytorch", "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/6167/labels{/name}", "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/6167/comments", "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/6167/events", "html_url": "https://github.com/pytorch/pytorch/issues/6167", "id": 310291861, "node_id": "MDU6SXNzdWUzMTAyOTE4NjE=", "number": 6167, "title": "Optimizing weights withtout gradients, is it possible?", "user": {"login": "berkankadioglu", "id": 30954743, "node_id": "MDQ6VXNlcjMwOTU0NzQz", "avatar_url": "https://avatars3.githubusercontent.com/u/30954743?v=4", "gravatar_id": "", "url": "https://api.github.com/users/berkankadioglu", "html_url": "https://github.com/berkankadioglu", "followers_url": "https://api.github.com/users/berkankadioglu/followers", "following_url": "https://api.github.com/users/berkankadioglu/following{/other_user}", "gists_url": "https://api.github.com/users/berkankadioglu/gists{/gist_id}", "starred_url": "https://api.github.com/users/berkankadioglu/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/berkankadioglu/subscriptions", "organizations_url": "https://api.github.com/users/berkankadioglu/orgs", "repos_url": "https://api.github.com/users/berkankadioglu/repos", "events_url": "https://api.github.com/users/berkankadioglu/events{/privacy}", "received_events_url": "https://api.github.com/users/berkankadioglu/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": true, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-04-01T04:03:37Z", "updated_at": "2018-04-01T04:18:24Z", "closed_at": "2018-04-01T04:18:20Z", "author_association": "NONE", "body_html": "<p>Hi, I'm sorry if this is not the right place to ask this question.</p>\n<p>Mainly for a fully connected NN, can I write my own weight update function (I dont want to use gradients, I believe in optimizer when backpropping) according to the input/outputs and weights for each perceptron at current iteration? I am going to have the same update function for every perceptron. Can I update layers in any order I want with Pytorch?</p>\n<p>Thank you.</p>", "body_text": "Hi, I'm sorry if this is not the right place to ask this question.\nMainly for a fully connected NN, can I write my own weight update function (I dont want to use gradients, I believe in optimizer when backpropping) according to the input/outputs and weights for each perceptron at current iteration? I am going to have the same update function for every perceptron. Can I update layers in any order I want with Pytorch?\nThank you.", "body": "Hi, I'm sorry if this is not the right place to ask this question.\r\n\r\nMainly for a fully connected NN, can I write my own weight update function (I dont want to use gradients, I believe in optimizer when backpropping) according to the input/outputs and weights for each perceptron at current iteration? I am going to have the same update function for every perceptron. Can I update layers in any order I want with Pytorch?\r\n\r\nThank you."}