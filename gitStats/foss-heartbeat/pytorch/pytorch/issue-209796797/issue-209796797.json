{"url": "https://api.github.com/repos/pytorch/pytorch/issues/836", "repository_url": "https://api.github.com/repos/pytorch/pytorch", "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/836/labels{/name}", "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/836/comments", "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/836/events", "html_url": "https://github.com/pytorch/pytorch/issues/836", "id": 209796797, "node_id": "MDU6SXNzdWUyMDk3OTY3OTc=", "number": 836, "title": "Exploding RAM with simple code", "user": {"login": "tcosmo", "id": 7616128, "node_id": "MDQ6VXNlcjc2MTYxMjg=", "avatar_url": "https://avatars1.githubusercontent.com/u/7616128?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tcosmo", "html_url": "https://github.com/tcosmo", "followers_url": "https://api.github.com/users/tcosmo/followers", "following_url": "https://api.github.com/users/tcosmo/following{/other_user}", "gists_url": "https://api.github.com/users/tcosmo/gists{/gist_id}", "starred_url": "https://api.github.com/users/tcosmo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tcosmo/subscriptions", "organizations_url": "https://api.github.com/users/tcosmo/orgs", "repos_url": "https://api.github.com/users/tcosmo/repos", "events_url": "https://api.github.com/users/tcosmo/events{/privacy}", "received_events_url": "https://api.github.com/users/tcosmo/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2017-02-23T15:37:27Z", "updated_at": "2017-02-23T17:17:06Z", "closed_at": "2017-02-23T15:57:04Z", "author_association": "CONTRIBUTOR", "body_html": "<p>Hi all,<br>\nPlease find attach a very simple code that just stocks VGG outputs:</p>\n<div class=\"highlight highlight-source-python\"><pre><span class=\"pl-k\">import</span> torch\n<span class=\"pl-k\">import</span> torch.nn <span class=\"pl-k\">as</span> nn\n<span class=\"pl-k\">import</span> torchvision.models <span class=\"pl-k\">as</span> models\n<span class=\"pl-k\">from</span> torch.autograd <span class=\"pl-k\">import</span> Variable\n\nvgg19 <span class=\"pl-k\">=</span> models.vgg19(<span class=\"pl-v\">pretrained</span><span class=\"pl-k\">=</span><span class=\"pl-c1\">True</span>)\n\nl <span class=\"pl-k\">=</span> []\n<span class=\"pl-k\">for</span> i <span class=\"pl-k\">in</span> <span class=\"pl-c1\">range</span>(<span class=\"pl-c1\">10</span>):\n    <span class=\"pl-c1\">print</span>(i)\n    l.append(vgg19(Variable(torch.randn([<span class=\"pl-c1\">1</span>,<span class=\"pl-c1\">3</span>,<span class=\"pl-c1\">224</span>,<span class=\"pl-c1\">224</span>]))))</pre></div>\n<p>It requires over 4 GB of RAM on my laptop <strong>after</strong> the model is loaded (in the loop)<br>\nIt seems really weird to me, do you think it could be a pytorch bug ?</p>", "body_text": "Hi all,\nPlease find attach a very simple code that just stocks VGG outputs:\nimport torch\nimport torch.nn as nn\nimport torchvision.models as models\nfrom torch.autograd import Variable\n\nvgg19 = models.vgg19(pretrained=True)\n\nl = []\nfor i in range(10):\n    print(i)\n    l.append(vgg19(Variable(torch.randn([1,3,224,224]))))\nIt requires over 4 GB of RAM on my laptop after the model is loaded (in the loop)\nIt seems really weird to me, do you think it could be a pytorch bug ?", "body": "Hi all,\r\nPlease find attach a very simple code that just stocks VGG outputs:\r\n```python\r\nimport torch\r\nimport torch.nn as nn\r\nimport torchvision.models as models\r\nfrom torch.autograd import Variable\r\n\r\nvgg19 = models.vgg19(pretrained=True)\r\n\r\nl = []\r\nfor i in range(10):\r\n    print(i)\r\n    l.append(vgg19(Variable(torch.randn([1,3,224,224]))))\r\n```\r\nIt requires over 4 GB of RAM on my laptop **after** the model is loaded (in the loop)\r\nIt seems really weird to me, do you think it could be a pytorch bug ?"}