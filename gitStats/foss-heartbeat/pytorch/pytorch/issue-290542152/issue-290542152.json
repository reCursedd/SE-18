{"url": "https://api.github.com/repos/pytorch/pytorch/issues/4782", "repository_url": "https://api.github.com/repos/pytorch/pytorch", "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/4782/labels{/name}", "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/4782/comments", "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/4782/events", "html_url": "https://github.com/pytorch/pytorch/issues/4782", "id": 290542152, "node_id": "MDU6SXNzdWUyOTA1NDIxNTI=", "number": 4782, "title": "IR docs are out of date after Value/Node split", "user": {"login": "ezyang", "id": 13564, "node_id": "MDQ6VXNlcjEzNTY0", "avatar_url": "https://avatars0.githubusercontent.com/u/13564?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ezyang", "html_url": "https://github.com/ezyang", "followers_url": "https://api.github.com/users/ezyang/followers", "following_url": "https://api.github.com/users/ezyang/following{/other_user}", "gists_url": "https://api.github.com/users/ezyang/gists{/gist_id}", "starred_url": "https://api.github.com/users/ezyang/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ezyang/subscriptions", "organizations_url": "https://api.github.com/users/ezyang/orgs", "repos_url": "https://api.github.com/users/ezyang/repos", "events_url": "https://api.github.com/users/ezyang/events{/privacy}", "received_events_url": "https://api.github.com/users/ezyang/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 679953983, "node_id": "MDU6TGFiZWw2Nzk5NTM5ODM=", "url": "https://api.github.com/repos/pytorch/pytorch/labels/jit", "name": "jit", "color": "c5def5", "default": false}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-01-22T17:05:57Z", "updated_at": "2018-01-23T10:07:06Z", "closed_at": null, "author_association": "CONTRIBUTOR", "body_html": "<p>Docs on Node still use a unique to uniquely identify a Node, even though only Values actually get uniques. Actually, identifying Node is a bit of trouble in the IR today, since there is no succinct way to refer to a particular node.</p>\n<p>Here is one notation proposal. Suppose we have:</p>\n<pre><code>%1, %2 = Fun %3, %4\n</code></pre>\n<p>If <code>%1</code> refers to a Value, I propose that <code>[%1, %2]</code> (or <code>[%1]</code> in the unary case) refer to a Node with these values in documentation. The downside of this notational convention is that if you change the outputs of a Node, the identifier for the Node changes too, but there is no way to solve this without introducing another unique identifier for nodes.</p>\n<p>CC <a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=4583066\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/apaszke\">@apaszke</a> <a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=370202\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/zdevito\">@zdevito</a></p>", "body_text": "Docs on Node still use a unique to uniquely identify a Node, even though only Values actually get uniques. Actually, identifying Node is a bit of trouble in the IR today, since there is no succinct way to refer to a particular node.\nHere is one notation proposal. Suppose we have:\n%1, %2 = Fun %3, %4\n\nIf %1 refers to a Value, I propose that [%1, %2] (or [%1] in the unary case) refer to a Node with these values in documentation. The downside of this notational convention is that if you change the outputs of a Node, the identifier for the Node changes too, but there is no way to solve this without introducing another unique identifier for nodes.\nCC @apaszke @zdevito", "body": "Docs on Node still use a unique to uniquely identify a Node, even though only Values actually get uniques. Actually, identifying Node is a bit of trouble in the IR today, since there is no succinct way to refer to a particular node.\r\n\r\nHere is one notation proposal. Suppose we have:\r\n\r\n```\r\n%1, %2 = Fun %3, %4\r\n```\r\n\r\nIf `%1` refers to a Value, I propose that `[%1, %2]` (or `[%1]` in the unary case) refer to a Node with these values in documentation. The downside of this notational convention is that if you change the outputs of a Node, the identifier for the Node changes too, but there is no way to solve this without introducing another unique identifier for nodes.\r\n\r\nCC @apaszke @zdevito "}