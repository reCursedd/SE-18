{"url": "https://api.github.com/repos/pytorch/pytorch/issues/11587", "repository_url": "https://api.github.com/repos/pytorch/pytorch", "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/11587/labels{/name}", "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/11587/comments", "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/11587/events", "html_url": "https://github.com/pytorch/pytorch/pull/11587", "id": 359590255, "node_id": "MDExOlB1bGxSZXF1ZXN0MjE1MDQ3MjUy", "number": 11587, "title": "Add checking of nullptrs in GetTensorInfo", "user": {"login": "yinghai", "id": 1100089, "node_id": "MDQ6VXNlcjExMDAwODk=", "avatar_url": "https://avatars1.githubusercontent.com/u/1100089?v=4", "gravatar_id": "", "url": "https://api.github.com/users/yinghai", "html_url": "https://github.com/yinghai", "followers_url": "https://api.github.com/users/yinghai/followers", "following_url": "https://api.github.com/users/yinghai/following{/other_user}", "gists_url": "https://api.github.com/users/yinghai/gists{/gist_id}", "starred_url": "https://api.github.com/users/yinghai/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/yinghai/subscriptions", "organizations_url": "https://api.github.com/users/yinghai/orgs", "repos_url": "https://api.github.com/users/yinghai/repos", "events_url": "https://api.github.com/users/yinghai/events{/privacy}", "received_events_url": "https://api.github.com/users/yinghai/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 890282107, "node_id": "MDU6TGFiZWw4OTAyODIxMDc=", "url": "https://api.github.com/repos/pytorch/pytorch/labels/caffe2", "name": "caffe2", "color": "210aa8", "default": false}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2018-09-12T17:59:49Z", "updated_at": "2018-09-14T22:50:32Z", "closed_at": "2018-09-12T23:27:01Z", "author_association": "CONTRIBUTOR", "pull_request": {"url": "https://api.github.com/repos/pytorch/pytorch/pulls/11587", "html_url": "https://github.com/pytorch/pytorch/pull/11587", "diff_url": "https://github.com/pytorch/pytorch/pull/11587.diff", "patch_url": "https://github.com/pytorch/pytorch/pull/11587.patch"}, "body_html": "<p>Summary:<br>\nTo help debug the issue in T33295362, we add some checks in the function.</p>\n<p>Possible crashing site in <code>GetTensorInfo</code></p>\n<ol>\n<li>tc is nullptr, which is checked.</li>\n<li>tc-&gt;capacity_nbytes() hits nullptr, this is unlikely because storage is not a pointer and compute of capacity_nbytes doesn't involve pointers. It's numel * itermsize().</li>\n<li>tc-&gt;ExtractDeviceOption hits nullpt. One possibility raw_data() is nullptr because tc-&gt;ExtractDeviceOption will use that. This is checked.</li>\n<li>Tensor itself which is not a reference. This is also checked.</li>\n</ol>\n<p>Differential Revision: D9793484</p>", "body_text": "Summary:\nTo help debug the issue in T33295362, we add some checks in the function.\nPossible crashing site in GetTensorInfo\n\ntc is nullptr, which is checked.\ntc->capacity_nbytes() hits nullptr, this is unlikely because storage is not a pointer and compute of capacity_nbytes doesn't involve pointers. It's numel * itermsize().\ntc->ExtractDeviceOption hits nullpt. One possibility raw_data() is nullptr because tc->ExtractDeviceOption will use that. This is checked.\nTensor itself which is not a reference. This is also checked.\n\nDifferential Revision: D9793484", "body": "Summary:\nTo help debug the issue in T33295362, we add some checks in the function.\n\nPossible crashing site in `GetTensorInfo`\n1. tc is nullptr, which is checked.\n2. tc->capacity_nbytes() hits nullptr, this is unlikely because storage is not a pointer and compute of capacity_nbytes doesn't involve pointers. It's numel * itermsize().\n3. tc->ExtractDeviceOption hits nullpt. One possibility raw_data() is nullptr because tc->ExtractDeviceOption will use that. This is checked.\n4. Tensor itself which is not a reference. This is also checked.\n\nDifferential Revision: D9793484\n"}