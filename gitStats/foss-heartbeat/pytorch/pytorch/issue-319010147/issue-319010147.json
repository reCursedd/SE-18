{"url": "https://api.github.com/repos/pytorch/pytorch/issues/7104", "repository_url": "https://api.github.com/repos/pytorch/pytorch", "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/7104/labels{/name}", "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/7104/comments", "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/7104/events", "html_url": "https://github.com/pytorch/pytorch/pull/7104", "id": 319010147, "node_id": "MDExOlB1bGxSZXF1ZXN0MTg1MDQ1MzIw", "number": 7104, "title": "Make AT_ASSERT/AT_ERROR non-printf based, other tweaks", "user": {"login": "ezyang", "id": 13564, "node_id": "MDQ6VXNlcjEzNTY0", "avatar_url": "https://avatars0.githubusercontent.com/u/13564?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ezyang", "html_url": "https://github.com/ezyang", "followers_url": "https://api.github.com/users/ezyang/followers", "following_url": "https://api.github.com/users/ezyang/following{/other_user}", "gists_url": "https://api.github.com/users/ezyang/gists{/gist_id}", "starred_url": "https://api.github.com/users/ezyang/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ezyang/subscriptions", "organizations_url": "https://api.github.com/users/ezyang/orgs", "repos_url": "https://api.github.com/users/ezyang/repos", "events_url": "https://api.github.com/users/ezyang/events{/privacy}", "received_events_url": "https://api.github.com/users/ezyang/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2018-04-30T19:40:39Z", "updated_at": "2018-11-23T15:43:31Z", "closed_at": "2018-05-01T14:28:31Z", "author_association": "CONTRIBUTOR", "pull_request": {"url": "https://api.github.com/repos/pytorch/pytorch/pulls/7104", "html_url": "https://github.com/pytorch/pytorch/pull/7104", "diff_url": "https://github.com/pytorch/pytorch/pull/7104.diff", "patch_url": "https://github.com/pytorch/pytorch/pull/7104.patch"}, "body_html": "<ul>\n<li>\n<p>AT_ASSERT/AT_ERROR don't take printf strings anymore; instead,<br>\nthey take a comma-separated list of things you wanted to print<br>\n(bringing it inline with Caffe2's conventions).</p>\n<p>Instead of AT_ASSERT(x == 0, \"%d is not zero\", x)<br>\nyou write AT_ASSERT(x == 0, x, \" is not zero\")</p>\n<p>This is done by way of a new variadic template at::str(), which<br>\ntakes a list of arguments and cats their string reps (as per<br>\noperator&lt;&lt;) together.</p>\n</li>\n<li>\n<p>A bunch of the demangling logic that was in Error.h is now<br>\nmoved to Error.cpp (better header hygiene.)  Also, demangle<br>\nhas been moved out to its own helper function, and also<br>\na new helper demangle_type (from Caffe2) added.</p>\n</li>\n</ul>\n<p>Signed-off-by: Edward Z. Yang <a href=\"mailto:ezyang@fb.com\">ezyang@fb.com</a></p>", "body_text": "AT_ASSERT/AT_ERROR don't take printf strings anymore; instead,\nthey take a comma-separated list of things you wanted to print\n(bringing it inline with Caffe2's conventions).\nInstead of AT_ASSERT(x == 0, \"%d is not zero\", x)\nyou write AT_ASSERT(x == 0, x, \" is not zero\")\nThis is done by way of a new variadic template at::str(), which\ntakes a list of arguments and cats their string reps (as per\noperator<<) together.\n\n\nA bunch of the demangling logic that was in Error.h is now\nmoved to Error.cpp (better header hygiene.)  Also, demangle\nhas been moved out to its own helper function, and also\na new helper demangle_type (from Caffe2) added.\n\n\nSigned-off-by: Edward Z. Yang ezyang@fb.com", "body": "- AT_ASSERT/AT_ERROR don't take printf strings anymore; instead,\r\n  they take a comma-separated list of things you wanted to print\r\n  (bringing it inline with Caffe2's conventions).\r\n\r\n  Instead of AT_ASSERT(x == 0, \"%d is not zero\", x)\r\n  you write AT_ASSERT(x == 0, x, \" is not zero\")\r\n\r\n  This is done by way of a new variadic template at::str(), which\r\n  takes a list of arguments and cats their string reps (as per\r\n  operator<<) together.\r\n\r\n- A bunch of the demangling logic that was in Error.h is now\r\n  moved to Error.cpp (better header hygiene.)  Also, demangle\r\n  has been moved out to its own helper function, and also\r\n  a new helper demangle_type (from Caffe2) added.\r\n\r\nSigned-off-by: Edward Z. Yang <ezyang@fb.com>\r\n\r\n"}