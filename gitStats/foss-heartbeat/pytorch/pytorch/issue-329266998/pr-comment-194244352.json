{"url": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/194244352", "pull_request_review_id": 127384173, "id": 194244352, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5NDI0NDM1Mg==", "diff_hunk": "@@ -3104,6 +3108,236 @@ def unpack_variables(args):\n     'test_slogdet_symmetric',\n }\n \n+# known to be failing in tracer\n+EXCLUDE_TRACED = {\n+    'test___getitem___adv_index',\n+    'test___getitem___adv_index_beg',\n+    'test___getitem___adv_index_comb',\n+    'test___getitem___adv_index_dup',\n+    'test___getitem___adv_index_end',\n+    'test___getitem___adv_index_mid',\n+    'test___getitem___adv_index_sub',\n+    'test___getitem___adv_index_sub_2',\n+    'test___getitem___adv_index_sub_3',\n+    'test___getitem___adv_index_var',\n+    'test___radd___scalar_constant',\n+    'test___rmul___scalar_constant',\n+    'test___rsub___scalar_constant',\n+    'test_add_scalar',\n+    'test_add_scalar_constant',\n+    'test_addmm_broadcast_lhs_coef',\n+    'test_addmm_coef',\n+    'test_addmm_scalar_broadcast_lhs_coef',\n+    'test_expand_scalar_to_scalar',\n+    'test_index_add_dim',\n+    'test_index_add_dim_neg0',\n+    'test_index_add_scalar_all_dim',\n+    'test_index_add_scalar_all_dim_neg0',\n+    'test_index_add_scalar_input_dim',\n+    'test_index_add_scalar_input_dim_neg0',\n+    'test_index_copy_dim',\n+    'test_index_copy_dim_neg0',\n+    'test_index_copy_scalar_all_dim',\n+    'test_index_copy_scalar_all_dim_neg0',\n+    'test_index_copy_scalar_input_dim',\n+    'test_index_copy_scalar_input_dim_neg0',\n+    'test_index_fill_dim',\n+    'test_index_fill_dim_neg0',\n+    'test_index_fill_scalar_both_dim',\n+    'test_index_fill_scalar_both_dim_neg0',\n+    'test_index_fill_scalar_index_dim',\n+    'test_index_fill_scalar_index_dim_neg0',\n+    'test_index_fill_scalar_input_dim',\n+    'test_index_fill_scalar_input_dim_neg0',\n+    'test_index_fill_variable_dim',\n+    'test_index_fill_variable_dim_neg0',\n+    'test_masked_fill',\n+    'test_masked_fill_broadcast_rhs',\n+    'test_masked_fill_scalar',\n+    'test_masked_fill_scalar_broadcast_rhs',\n+    'test_masked_fill_scalar_variable',\n+    'test_masked_fill_tensor',\n+    'test_masked_scatter',\n+    'test_masked_scatter_broadcast_rhs',\n+    'test_masked_scatter_scalar',\n+    'test_masked_scatter_scalar_broadcast_rhs',\n+    'test_mul_scalar',\n+    'test_mul_scalar_constant',\n+    'test_scatter_add_dim0',\n+    'test_scatter_add_dim0_neg0',\n+    'test_scatter_add_dim1',\n+    'test_scatter_add_dim1_neg0',\n+    'test_scatter_add_scalar_all_dim0',\n+    'test_scatter_add_scalar_all_dim0_neg0',\n+    'test_scatter_dim0',\n+    'test_scatter_dim0_neg0',\n+    'test_scatter_dim1',\n+    'test_scatter_dim1_neg0',\n+    'test_scatter_scalar_all_dim0',\n+    'test_scatter_scalar_all_dim0_neg0',\n+    'test_sigmoid_scalar',\n+    'test_sub_scalar_constant',\n+    'test_tanh_scalar',\n+    'test_unsqueeze_last_neg0',\n+    'test_unsqueeze_middle_neg0',\n+    'test_split_dim',\n+    'test_split_dim_neg0',\n+    'test_gesv',\n+    'test_inverse',\n+}\n+\n+# known to be failing in script\n+EXCLUDE_SCRIPT = {", "path": "test/test_autograd.py", "position": null, "original_position": 94, "commit_id": "51abb5c20b9aa98254108e37afdec2eb76199a03", "original_commit_id": "bf5b6a352be3187849366e3a6322cc135c32a28c", "user": {"login": "ezyang", "id": 13564, "node_id": "MDQ6VXNlcjEzNTY0", "avatar_url": "https://avatars0.githubusercontent.com/u/13564?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ezyang", "html_url": "https://github.com/ezyang", "followers_url": "https://api.github.com/users/ezyang/followers", "following_url": "https://api.github.com/users/ezyang/following{/other_user}", "gists_url": "https://api.github.com/users/ezyang/gists{/gist_id}", "starred_url": "https://api.github.com/users/ezyang/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ezyang/subscriptions", "organizations_url": "https://api.github.com/users/ezyang/orgs", "repos_url": "https://api.github.com/users/ezyang/repos", "events_url": "https://api.github.com/users/ezyang/events{/privacy}", "received_events_url": "https://api.github.com/users/ezyang/received_events", "type": "User", "site_admin": false}, "body": "Wouldn't it be better to run these tests, and then fail if they unexpectedly pass? Will help you remember to re-enable tests when they start passing.", "created_at": "2018-06-10T03:30:51Z", "updated_at": "2018-11-23T15:45:18Z", "html_url": "https://github.com/pytorch/pytorch/pull/8145#discussion_r194244352", "pull_request_url": "https://api.github.com/repos/pytorch/pytorch/pulls/8145", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/194244352"}, "html": {"href": "https://github.com/pytorch/pytorch/pull/8145#discussion_r194244352"}, "pull_request": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/8145"}}, "body_html": "<p>Wouldn't it be better to run these tests, and then fail if they unexpectedly pass? Will help you remember to re-enable tests when they start passing.</p>", "body_text": "Wouldn't it be better to run these tests, and then fail if they unexpectedly pass? Will help you remember to re-enable tests when they start passing."}