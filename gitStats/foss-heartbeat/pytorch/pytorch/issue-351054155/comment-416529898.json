{"url": "https://api.github.com/repos/pytorch/pytorch/issues/comments/416529898", "html_url": "https://github.com/pytorch/pytorch/issues/10577#issuecomment-416529898", "issue_url": "https://api.github.com/repos/pytorch/pytorch/issues/10577", "id": 416529898, "node_id": "MDEyOklzc3VlQ29tbWVudDQxNjUyOTg5OA==", "user": {"login": "noahcao", "id": 17743251, "node_id": "MDQ6VXNlcjE3NzQzMjUx", "avatar_url": "https://avatars0.githubusercontent.com/u/17743251?v=4", "gravatar_id": "", "url": "https://api.github.com/users/noahcao", "html_url": "https://github.com/noahcao", "followers_url": "https://api.github.com/users/noahcao/followers", "following_url": "https://api.github.com/users/noahcao/following{/other_user}", "gists_url": "https://api.github.com/users/noahcao/gists{/gist_id}", "starred_url": "https://api.github.com/users/noahcao/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/noahcao/subscriptions", "organizations_url": "https://api.github.com/users/noahcao/orgs", "repos_url": "https://api.github.com/users/noahcao/repos", "events_url": "https://api.github.com/users/noahcao/events{/privacy}", "received_events_url": "https://api.github.com/users/noahcao/received_events", "type": "User", "site_admin": false}, "created_at": "2018-08-28T10:16:05Z", "updated_at": "2018-08-28T10:16:05Z", "author_association": "NONE", "body_html": "<p>same error occurs for me, under both 0.4.1 and 0.3.1 version of pytorch.</p>\n<p>It's strange that, this program saves .pth after each epoch, and it can save successfully sometimes (for instance, for the first 3 epoches but fails for the 4th). I checked disk storage and memory, both are sufficient.</p>\n<blockquote>\n<p>Traceback (most recent call last):<br>\nFile \"main-train.py\", line 250, in  main()<br>\nFile \"main-train.py\", line 232, in main<br>\nm.state_dict(), '../exp/{}/{}/model_{}.pth'.format(opt.dataset, opt.expID, opt.epoch))<br>\nFile \"/usr/local/lib/python3.5/dist-packages/torch/serialization.py\", line 135, in save<br>\nreturn _with_file_like(f, \"wb\", lambda f: _save(obj, f, pickle_module, pickle_protocol))<br>\nFile \"/usr/local/lib/python3.5/dist-packages/torch/serialization.py\", line 117, in _with_file_like<br>\nreturn body(f)<br>\nFile \"/usr/local/lib/python3.5/dist-packages/torch/serialization.py\", line 135, in <br>\nreturn _with_file_like(f, \"wb\", lambda f: _save(obj, f, pickle_module, pickle_protocol))<br>\nFile \"/usr/local/lib/python3.5/dist-packages/torch/serialization.py\", line 204, in _save<br>\nserialized_storages[key]._write_file(f)<br>\nRuntimeError: Unknown error -1</p>\n</blockquote>\n<pre><code>start_point = opt.epoch + 1\nfor i in range(start_point, start_point + opt.nEpochs):\n    opt.epoch = i\n\n    print('############# Starting Epoch {} #############'.format(opt.epoch))\n    loss, acc = train(train_loader, m, criterion, optimizer, writer)\n\n    print('Train-{idx:d} epoch | loss:{loss:.8f} | acc:{acc:.4f}'.format(\n        idx=opt.epoch,\n        loss=loss,\n        acc=acc\n    ))\n\n    opt.acc = acc\n    opt.loss = loss\n    m = m.module\n    if (i - start_point) % opt.snapshot == 0:\n        torch.save(\n            **m.state_dict(), '../exp/{}/{}/model_{}.pth'.format(opt.dataset, opt.expID, opt.epoch))**\n        torch.save(\n            opt, '../exp/{}/{}/option.pth'.format(opt.dataset, opt.expID, opt.epoch))\n        torch.save(\n            optimizer, '../exp/{}/{}/optimizer.pth'.format(opt.dataset, opt.expID))\n\n    m = torch.nn.DataParallel(m).cuda()\n    loss, acc = valid(val_loader, m, criterion, optimizer, writer)\n\n    print('Valid-{idx:d} epoch | loss:{loss:.8f} | acc:{acc:.4f}'.format(\n        idx=i,\n        loss=loss,\n        acc=acc\n    ))\nwriter.close()\n</code></pre>", "body_text": "same error occurs for me, under both 0.4.1 and 0.3.1 version of pytorch.\nIt's strange that, this program saves .pth after each epoch, and it can save successfully sometimes (for instance, for the first 3 epoches but fails for the 4th). I checked disk storage and memory, both are sufficient.\n\nTraceback (most recent call last):\nFile \"main-train.py\", line 250, in  main()\nFile \"main-train.py\", line 232, in main\nm.state_dict(), '../exp/{}/{}/model_{}.pth'.format(opt.dataset, opt.expID, opt.epoch))\nFile \"/usr/local/lib/python3.5/dist-packages/torch/serialization.py\", line 135, in save\nreturn _with_file_like(f, \"wb\", lambda f: _save(obj, f, pickle_module, pickle_protocol))\nFile \"/usr/local/lib/python3.5/dist-packages/torch/serialization.py\", line 117, in _with_file_like\nreturn body(f)\nFile \"/usr/local/lib/python3.5/dist-packages/torch/serialization.py\", line 135, in \nreturn _with_file_like(f, \"wb\", lambda f: _save(obj, f, pickle_module, pickle_protocol))\nFile \"/usr/local/lib/python3.5/dist-packages/torch/serialization.py\", line 204, in _save\nserialized_storages[key]._write_file(f)\nRuntimeError: Unknown error -1\n\nstart_point = opt.epoch + 1\nfor i in range(start_point, start_point + opt.nEpochs):\n    opt.epoch = i\n\n    print('############# Starting Epoch {} #############'.format(opt.epoch))\n    loss, acc = train(train_loader, m, criterion, optimizer, writer)\n\n    print('Train-{idx:d} epoch | loss:{loss:.8f} | acc:{acc:.4f}'.format(\n        idx=opt.epoch,\n        loss=loss,\n        acc=acc\n    ))\n\n    opt.acc = acc\n    opt.loss = loss\n    m = m.module\n    if (i - start_point) % opt.snapshot == 0:\n        torch.save(\n            **m.state_dict(), '../exp/{}/{}/model_{}.pth'.format(opt.dataset, opt.expID, opt.epoch))**\n        torch.save(\n            opt, '../exp/{}/{}/option.pth'.format(opt.dataset, opt.expID, opt.epoch))\n        torch.save(\n            optimizer, '../exp/{}/{}/optimizer.pth'.format(opt.dataset, opt.expID))\n\n    m = torch.nn.DataParallel(m).cuda()\n    loss, acc = valid(val_loader, m, criterion, optimizer, writer)\n\n    print('Valid-{idx:d} epoch | loss:{loss:.8f} | acc:{acc:.4f}'.format(\n        idx=i,\n        loss=loss,\n        acc=acc\n    ))\nwriter.close()", "body": "same error occurs for me, under both 0.4.1 and 0.3.1 version of pytorch.\r\n\r\nIt's strange that, this program saves .pth after each epoch, and it can save successfully sometimes (for instance, for the first 3 epoches but fails for the 4th). I checked disk storage and memory, both are sufficient.\r\n\r\n> Traceback (most recent call last):\r\n  File \"main-train.py\", line 250, in <module> main()\r\n  File \"main-train.py\", line 232, in main\r\n m.state_dict(), '../exp/{}/{}/model_{}.pth'.format(opt.dataset, opt.expID, opt.epoch))\r\n  File \"/usr/local/lib/python3.5/dist-packages/torch/serialization.py\", line 135, in save\r\n    return _with_file_like(f, \"wb\", lambda f: _save(obj, f, pickle_module, pickle_protocol))\r\n  File \"/usr/local/lib/python3.5/dist-packages/torch/serialization.py\", line 117, in _with_file_like\r\n    return body(f)\r\n  File \"/usr/local/lib/python3.5/dist-packages/torch/serialization.py\", line 135, in <lambda>\r\n    return _with_file_like(f, \"wb\", lambda f: _save(obj, f, pickle_module, pickle_protocol))\r\n  File \"/usr/local/lib/python3.5/dist-packages/torch/serialization.py\", line 204, in _save\r\n    serialized_storages[key]._write_file(f)\r\nRuntimeError: Unknown error -1\r\n\r\n    start_point = opt.epoch + 1\r\n    for i in range(start_point, start_point + opt.nEpochs):\r\n        opt.epoch = i\r\n\r\n        print('############# Starting Epoch {} #############'.format(opt.epoch))\r\n        loss, acc = train(train_loader, m, criterion, optimizer, writer)\r\n\r\n        print('Train-{idx:d} epoch | loss:{loss:.8f} | acc:{acc:.4f}'.format(\r\n            idx=opt.epoch,\r\n            loss=loss,\r\n            acc=acc\r\n        ))\r\n\r\n        opt.acc = acc\r\n        opt.loss = loss\r\n        m = m.module\r\n        if (i - start_point) % opt.snapshot == 0:\r\n            torch.save(\r\n                **m.state_dict(), '../exp/{}/{}/model_{}.pth'.format(opt.dataset, opt.expID, opt.epoch))**\r\n            torch.save(\r\n                opt, '../exp/{}/{}/option.pth'.format(opt.dataset, opt.expID, opt.epoch))\r\n            torch.save(\r\n                optimizer, '../exp/{}/{}/optimizer.pth'.format(opt.dataset, opt.expID))\r\n\r\n        m = torch.nn.DataParallel(m).cuda()\r\n        loss, acc = valid(val_loader, m, criterion, optimizer, writer)\r\n\r\n        print('Valid-{idx:d} epoch | loss:{loss:.8f} | acc:{acc:.4f}'.format(\r\n            idx=i,\r\n            loss=loss,\r\n            acc=acc\r\n        ))\r\n    writer.close()\r\n"}