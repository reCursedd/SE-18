{"url": "https://api.github.com/repos/pytorch/pytorch/issues/8777", "repository_url": "https://api.github.com/repos/pytorch/pytorch", "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/8777/labels{/name}", "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/8777/comments", "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/8777/events", "html_url": "https://github.com/pytorch/pytorch/issues/8777", "id": 334702379, "node_id": "MDU6SXNzdWUzMzQ3MDIzNzk=", "number": 8777, "title": "[JIT] type annotations is not descending to the python signature of nn.LSTMCell after instantiazation", "user": {"login": "wanchaol", "id": 9443650, "node_id": "MDQ6VXNlcjk0NDM2NTA=", "avatar_url": "https://avatars2.githubusercontent.com/u/9443650?v=4", "gravatar_id": "", "url": "https://api.github.com/users/wanchaol", "html_url": "https://github.com/wanchaol", "followers_url": "https://api.github.com/users/wanchaol/followers", "following_url": "https://api.github.com/users/wanchaol/following{/other_user}", "gists_url": "https://api.github.com/users/wanchaol/gists{/gist_id}", "starred_url": "https://api.github.com/users/wanchaol/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/wanchaol/subscriptions", "organizations_url": "https://api.github.com/users/wanchaol/orgs", "repos_url": "https://api.github.com/users/wanchaol/repos", "events_url": "https://api.github.com/users/wanchaol/events{/privacy}", "received_events_url": "https://api.github.com/users/wanchaol/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 679953983, "node_id": "MDU6TGFiZWw2Nzk5NTM5ODM=", "url": "https://api.github.com/repos/pytorch/pytorch/labels/jit", "name": "jit", "color": "c5def5", "default": false}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2018-06-22T00:15:51Z", "updated_at": "2018-06-22T00:15:51Z", "closed_at": null, "author_association": "CONTRIBUTOR", "body_html": "<p>After we initialize a nn.LSTMCell and run the instance by passing the input like:</p>\n<pre><code>lstm1 = nn.LSTMCell(1, 51)\nh_t, c_t  = lstm1(input_t, (h_t, c_t))\n</code></pre>\n<p>The type annotation for the instance func we called <a href=\"https://github.com/pytorch/pytorch/blob/master/torch/csrc/jit/script/init.cpp#L50\">1</a> <a href=\"https://github.com/pytorch/pytorch/blob/master/torch/jit/annotations.py#L62\">2</a> get no signature (which falls back to the default_signature), source/typeline is None.</p>\n<p>Mitigate:<br>\nWrapper function for the instance func that manually add the typeline.</p>", "body_text": "After we initialize a nn.LSTMCell and run the instance by passing the input like:\nlstm1 = nn.LSTMCell(1, 51)\nh_t, c_t  = lstm1(input_t, (h_t, c_t))\n\nThe type annotation for the instance func we called 1 2 get no signature (which falls back to the default_signature), source/typeline is None.\nMitigate:\nWrapper function for the instance func that manually add the typeline.", "body": "After we initialize a nn.LSTMCell and run the instance by passing the input like: \r\n```\r\nlstm1 = nn.LSTMCell(1, 51)\r\nh_t, c_t  = lstm1(input_t, (h_t, c_t))\r\n```\r\n\r\nThe type annotation for the instance func we called [1](https://github.com/pytorch/pytorch/blob/master/torch/csrc/jit/script/init.cpp#L50) [2](https://github.com/pytorch/pytorch/blob/master/torch/jit/annotations.py#L62) get no signature (which falls back to the default_signature), source/typeline is None. \r\n\r\nMitigate:\r\nWrapper function for the instance func that manually add the typeline. \r\n"}