{"url": "https://api.github.com/repos/pytorch/pytorch/issues/comments/315631403", "html_url": "https://github.com/pytorch/pytorch/issues/2124#issuecomment-315631403", "issue_url": "https://api.github.com/repos/pytorch/pytorch/issues/2124", "id": 315631403, "node_id": "MDEyOklzc3VlQ29tbWVudDMxNTYzMTQwMw==", "user": {"login": "awni", "id": 1542805, "node_id": "MDQ6VXNlcjE1NDI4MDU=", "avatar_url": "https://avatars1.githubusercontent.com/u/1542805?v=4", "gravatar_id": "", "url": "https://api.github.com/users/awni", "html_url": "https://github.com/awni", "followers_url": "https://api.github.com/users/awni/followers", "following_url": "https://api.github.com/users/awni/following{/other_user}", "gists_url": "https://api.github.com/users/awni/gists{/gist_id}", "starred_url": "https://api.github.com/users/awni/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/awni/subscriptions", "organizations_url": "https://api.github.com/users/awni/orgs", "repos_url": "https://api.github.com/users/awni/repos", "events_url": "https://api.github.com/users/awni/events{/privacy}", "received_events_url": "https://api.github.com/users/awni/received_events", "type": "User", "site_admin": false}, "created_at": "2017-07-16T19:31:13Z", "updated_at": "2017-07-16T19:34:44Z", "author_association": "NONE", "body_html": "<p>I see..<br>\nIt originally came up because I was comparing two <code>IntTensors</code> - <code>torch.sum(a==b)</code>. The <code>a==b</code> is a <code>ByteTensor</code> in a <code>Variable</code> and the sum gives the wrong answer (but oddly only for the <code>Variable</code>, not for a plain Tensor).</p>\n<p>It may be a feature request then to have the Variable sum behave the same as the Tensor / Numpy sum?</p>", "body_text": "I see..\nIt originally came up because I was comparing two IntTensors - torch.sum(a==b). The a==b is a ByteTensor in a Variable and the sum gives the wrong answer (but oddly only for the Variable, not for a plain Tensor).\nIt may be a feature request then to have the Variable sum behave the same as the Tensor / Numpy sum?", "body": "I see..\r\nIt originally came up because I was comparing two `IntTensors` - `torch.sum(a==b)`. The `a==b` is a `ByteTensor` in a `Variable` and the sum gives the wrong answer (but oddly only for the `Variable`, not for a plain Tensor).\r\n\r\nIt may be a feature request then to have the Variable sum behave the same as the Tensor / Numpy sum?"}