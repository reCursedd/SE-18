{"url": "https://api.github.com/repos/pytorch/pytorch/pulls/9102", "id": 198677822, "node_id": "MDExOlB1bGxSZXF1ZXN0MTk4Njc3ODIy", "html_url": "https://github.com/pytorch/pytorch/pull/9102", "diff_url": "https://github.com/pytorch/pytorch/pull/9102.diff", "patch_url": "https://github.com/pytorch/pytorch/pull/9102.patch", "issue_url": "https://api.github.com/repos/pytorch/pytorch/issues/9102", "number": 9102, "state": "closed", "locked": false, "title": "Implement batch matrix inverse", "user": {"login": "karol-arndt", "id": 15629271, "node_id": "MDQ6VXNlcjE1NjI5Mjcx", "avatar_url": "https://avatars2.githubusercontent.com/u/15629271?v=4", "gravatar_id": "", "url": "https://api.github.com/users/karol-arndt", "html_url": "https://github.com/karol-arndt", "followers_url": "https://api.github.com/users/karol-arndt/followers", "following_url": "https://api.github.com/users/karol-arndt/following{/other_user}", "gists_url": "https://api.github.com/users/karol-arndt/gists{/gist_id}", "starred_url": "https://api.github.com/users/karol-arndt/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/karol-arndt/subscriptions", "organizations_url": "https://api.github.com/users/karol-arndt/orgs", "repos_url": "https://api.github.com/users/karol-arndt/repos", "events_url": "https://api.github.com/users/karol-arndt/events{/privacy}", "received_events_url": "https://api.github.com/users/karol-arndt/received_events", "type": "User", "site_admin": false}, "body": "I was recently working on some Kalman filter stuff and found myself in need of a batch matrix inverse, so I implemented it (doing it in a Python for loop is incredibly slow, especially with CUDA). Since cuBLAS has such functionality already implemented (and the standard inverse function just passes 1 as the batch size), it's just a matter of allocating some buffers and passing data to the appropriate cuBLAS functions. The implementation is based on the `btrifact` (batch LU factorization using `getrf`) function. I also added a CPU implementation (which is really just a for loop) for the sake of completeness. \r\n\r\nI figured that this might be useful for other people, so I'm sharing it here. This is my first contribution to PyTorch and I'm not very experienced with CUDA programming, so all comments regarding the code are most welcome.", "created_at": "2018-07-02T13:21:03Z", "updated_at": "2018-11-23T15:46:58Z", "closed_at": "2018-10-28T17:42:19Z", "merged_at": null, "merge_commit_sha": "6404c8420f8a834f70ba9c0094b9287280dc5f35", "assignee": null, "assignees": [], "requested_reviewers": [{"login": "ezyang", "id": 13564, "node_id": "MDQ6VXNlcjEzNTY0", "avatar_url": "https://avatars0.githubusercontent.com/u/13564?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ezyang", "html_url": "https://github.com/ezyang", "followers_url": "https://api.github.com/users/ezyang/followers", "following_url": "https://api.github.com/users/ezyang/following{/other_user}", "gists_url": "https://api.github.com/users/ezyang/gists{/gist_id}", "starred_url": "https://api.github.com/users/ezyang/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ezyang/subscriptions", "organizations_url": "https://api.github.com/users/ezyang/orgs", "repos_url": "https://api.github.com/users/ezyang/repos", "events_url": "https://api.github.com/users/ezyang/events{/privacy}", "received_events_url": "https://api.github.com/users/ezyang/received_events", "type": "User", "site_admin": false}, {"login": "zdevito", "id": 370202, "node_id": "MDQ6VXNlcjM3MDIwMg==", "avatar_url": "https://avatars0.githubusercontent.com/u/370202?v=4", "gravatar_id": "", "url": "https://api.github.com/users/zdevito", "html_url": "https://github.com/zdevito", "followers_url": "https://api.github.com/users/zdevito/followers", "following_url": "https://api.github.com/users/zdevito/following{/other_user}", "gists_url": "https://api.github.com/users/zdevito/gists{/gist_id}", "starred_url": "https://api.github.com/users/zdevito/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/zdevito/subscriptions", "organizations_url": "https://api.github.com/users/zdevito/orgs", "repos_url": "https://api.github.com/users/zdevito/repos", "events_url": "https://api.github.com/users/zdevito/events{/privacy}", "received_events_url": "https://api.github.com/users/zdevito/received_events", "type": "User", "site_admin": false}, {"login": "colesbury", "id": 655866, "node_id": "MDQ6VXNlcjY1NTg2Ng==", "avatar_url": "https://avatars1.githubusercontent.com/u/655866?v=4", "gravatar_id": "", "url": "https://api.github.com/users/colesbury", "html_url": "https://github.com/colesbury", "followers_url": "https://api.github.com/users/colesbury/followers", "following_url": "https://api.github.com/users/colesbury/following{/other_user}", "gists_url": "https://api.github.com/users/colesbury/gists{/gist_id}", "starred_url": "https://api.github.com/users/colesbury/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/colesbury/subscriptions", "organizations_url": "https://api.github.com/users/colesbury/orgs", "repos_url": "https://api.github.com/users/colesbury/repos", "events_url": "https://api.github.com/users/colesbury/events{/privacy}", "received_events_url": "https://api.github.com/users/colesbury/received_events", "type": "User", "site_admin": false}, {"login": "soumith", "id": 1310570, "node_id": "MDQ6VXNlcjEzMTA1NzA=", "avatar_url": "https://avatars0.githubusercontent.com/u/1310570?v=4", "gravatar_id": "", "url": "https://api.github.com/users/soumith", "html_url": "https://github.com/soumith", "followers_url": "https://api.github.com/users/soumith/followers", "following_url": "https://api.github.com/users/soumith/following{/other_user}", "gists_url": "https://api.github.com/users/soumith/gists{/gist_id}", "starred_url": "https://api.github.com/users/soumith/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/soumith/subscriptions", "organizations_url": "https://api.github.com/users/soumith/orgs", "repos_url": "https://api.github.com/users/soumith/repos", "events_url": "https://api.github.com/users/soumith/events{/privacy}", "received_events_url": "https://api.github.com/users/soumith/received_events", "type": "User", "site_admin": false}, {"login": "gchanan", "id": 3768583, "node_id": "MDQ6VXNlcjM3Njg1ODM=", "avatar_url": "https://avatars2.githubusercontent.com/u/3768583?v=4", "gravatar_id": "", "url": "https://api.github.com/users/gchanan", "html_url": "https://github.com/gchanan", "followers_url": "https://api.github.com/users/gchanan/followers", "following_url": "https://api.github.com/users/gchanan/following{/other_user}", "gists_url": "https://api.github.com/users/gchanan/gists{/gist_id}", "starred_url": "https://api.github.com/users/gchanan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/gchanan/subscriptions", "organizations_url": "https://api.github.com/users/gchanan/orgs", "repos_url": "https://api.github.com/users/gchanan/repos", "events_url": "https://api.github.com/users/gchanan/events{/privacy}", "received_events_url": "https://api.github.com/users/gchanan/received_events", "type": "User", "site_admin": false}, {"login": "apaszke", "id": 4583066, "node_id": "MDQ6VXNlcjQ1ODMwNjY=", "avatar_url": "https://avatars3.githubusercontent.com/u/4583066?v=4", "gravatar_id": "", "url": "https://api.github.com/users/apaszke", "html_url": "https://github.com/apaszke", "followers_url": "https://api.github.com/users/apaszke/followers", "following_url": "https://api.github.com/users/apaszke/following{/other_user}", "gists_url": "https://api.github.com/users/apaszke/gists{/gist_id}", "starred_url": "https://api.github.com/users/apaszke/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/apaszke/subscriptions", "organizations_url": "https://api.github.com/users/apaszke/orgs", "repos_url": "https://api.github.com/users/apaszke/repos", "events_url": "https://api.github.com/users/apaszke/events{/privacy}", "received_events_url": "https://api.github.com/users/apaszke/received_events", "type": "User", "site_admin": false}], "requested_teams": [], "labels": [], "milestone": null, "commits_url": "https://api.github.com/repos/pytorch/pytorch/pulls/9102/commits", "review_comments_url": "https://api.github.com/repos/pytorch/pytorch/pulls/9102/comments", "review_comment_url": "https://api.github.com/repos/pytorch/pytorch/pulls/comments{/number}", "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/9102/comments", "statuses_url": "https://api.github.com/repos/pytorch/pytorch/statuses/cb3f11c7e7fb420e5b38eb7128d0753765389a1b", "head": {"label": "karol-arndt:implement-batch-inverse", "ref": "implement-batch-inverse", "sha": "cb3f11c7e7fb420e5b38eb7128d0753765389a1b", "user": {"login": "karol-arndt", "id": 15629271, "node_id": "MDQ6VXNlcjE1NjI5Mjcx", "avatar_url": "https://avatars2.githubusercontent.com/u/15629271?v=4", "gravatar_id": "", "url": "https://api.github.com/users/karol-arndt", "html_url": "https://github.com/karol-arndt", "followers_url": "https://api.github.com/users/karol-arndt/followers", "following_url": "https://api.github.com/users/karol-arndt/following{/other_user}", "gists_url": "https://api.github.com/users/karol-arndt/gists{/gist_id}", "starred_url": "https://api.github.com/users/karol-arndt/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/karol-arndt/subscriptions", "organizations_url": "https://api.github.com/users/karol-arndt/orgs", "repos_url": "https://api.github.com/users/karol-arndt/repos", "events_url": "https://api.github.com/users/karol-arndt/events{/privacy}", "received_events_url": "https://api.github.com/users/karol-arndt/received_events", "type": "User", "site_admin": false}, "repo": {"id": 139425173, "node_id": "MDEwOlJlcG9zaXRvcnkxMzk0MjUxNzM=", "name": "pytorch", "full_name": "karol-arndt/pytorch", "private": false, "owner": {"login": "karol-arndt", "id": 15629271, "node_id": "MDQ6VXNlcjE1NjI5Mjcx", "avatar_url": "https://avatars2.githubusercontent.com/u/15629271?v=4", "gravatar_id": "", "url": "https://api.github.com/users/karol-arndt", "html_url": "https://github.com/karol-arndt", "followers_url": "https://api.github.com/users/karol-arndt/followers", "following_url": "https://api.github.com/users/karol-arndt/following{/other_user}", "gists_url": "https://api.github.com/users/karol-arndt/gists{/gist_id}", "starred_url": "https://api.github.com/users/karol-arndt/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/karol-arndt/subscriptions", "organizations_url": "https://api.github.com/users/karol-arndt/orgs", "repos_url": "https://api.github.com/users/karol-arndt/repos", "events_url": "https://api.github.com/users/karol-arndt/events{/privacy}", "received_events_url": "https://api.github.com/users/karol-arndt/received_events", "type": "User", "site_admin": false}, "html_url": "https://github.com/karol-arndt/pytorch", "description": "Tensors and Dynamic neural networks in Python  with strong GPU acceleration", "fork": true, "url": "https://api.github.com/repos/karol-arndt/pytorch", "forks_url": "https://api.github.com/repos/karol-arndt/pytorch/forks", "keys_url": "https://api.github.com/repos/karol-arndt/pytorch/keys{/key_id}", "collaborators_url": "https://api.github.com/repos/karol-arndt/pytorch/collaborators{/collaborator}", "teams_url": "https://api.github.com/repos/karol-arndt/pytorch/teams", "hooks_url": "https://api.github.com/repos/karol-arndt/pytorch/hooks", "issue_events_url": "https://api.github.com/repos/karol-arndt/pytorch/issues/events{/number}", "events_url": "https://api.github.com/repos/karol-arndt/pytorch/events", "assignees_url": "https://api.github.com/repos/karol-arndt/pytorch/assignees{/user}", "branches_url": "https://api.github.com/repos/karol-arndt/pytorch/branches{/branch}", "tags_url": "https://api.github.com/repos/karol-arndt/pytorch/tags", "blobs_url": "https://api.github.com/repos/karol-arndt/pytorch/git/blobs{/sha}", "git_tags_url": "https://api.github.com/repos/karol-arndt/pytorch/git/tags{/sha}", "git_refs_url": "https://api.github.com/repos/karol-arndt/pytorch/git/refs{/sha}", "trees_url": "https://api.github.com/repos/karol-arndt/pytorch/git/trees{/sha}", "statuses_url": "https://api.github.com/repos/karol-arndt/pytorch/statuses/{sha}", "languages_url": "https://api.github.com/repos/karol-arndt/pytorch/languages", "stargazers_url": "https://api.github.com/repos/karol-arndt/pytorch/stargazers", "contributors_url": "https://api.github.com/repos/karol-arndt/pytorch/contributors", "subscribers_url": "https://api.github.com/repos/karol-arndt/pytorch/subscribers", "subscription_url": "https://api.github.com/repos/karol-arndt/pytorch/subscription", "commits_url": "https://api.github.com/repos/karol-arndt/pytorch/commits{/sha}", "git_commits_url": "https://api.github.com/repos/karol-arndt/pytorch/git/commits{/sha}", "comments_url": "https://api.github.com/repos/karol-arndt/pytorch/comments{/number}", "issue_comment_url": "https://api.github.com/repos/karol-arndt/pytorch/issues/comments{/number}", "contents_url": "https://api.github.com/repos/karol-arndt/pytorch/contents/{+path}", "compare_url": "https://api.github.com/repos/karol-arndt/pytorch/compare/{base}...{head}", "merges_url": "https://api.github.com/repos/karol-arndt/pytorch/merges", "archive_url": "https://api.github.com/repos/karol-arndt/pytorch/{archive_format}{/ref}", "downloads_url": "https://api.github.com/repos/karol-arndt/pytorch/downloads", "issues_url": "https://api.github.com/repos/karol-arndt/pytorch/issues{/number}", "pulls_url": "https://api.github.com/repos/karol-arndt/pytorch/pulls{/number}", "milestones_url": "https://api.github.com/repos/karol-arndt/pytorch/milestones{/number}", "notifications_url": "https://api.github.com/repos/karol-arndt/pytorch/notifications{?since,all,participating}", "labels_url": "https://api.github.com/repos/karol-arndt/pytorch/labels{/name}", "releases_url": "https://api.github.com/repos/karol-arndt/pytorch/releases{/id}", "deployments_url": "https://api.github.com/repos/karol-arndt/pytorch/deployments", "created_at": "2018-07-02T10:01:33Z", "updated_at": "2018-07-02T10:01:46Z", "pushed_at": "2018-07-11T09:10:17Z", "git_url": "git://github.com/karol-arndt/pytorch.git", "ssh_url": "git@github.com:karol-arndt/pytorch.git", "clone_url": "https://github.com/karol-arndt/pytorch.git", "svn_url": "https://github.com/karol-arndt/pytorch", "homepage": "http://pytorch.org", "size": 62622, "stargazers_count": 0, "watchers_count": 0, "language": "C++", "has_issues": false, "has_projects": true, "has_downloads": true, "has_wiki": true, "has_pages": false, "forks_count": 0, "mirror_url": null, "archived": false, "open_issues_count": 0, "license": {"key": "other", "name": "Other", "spdx_id": "NOASSERTION", "url": null, "node_id": "MDc6TGljZW5zZTA="}, "forks": 0, "open_issues": 0, "watchers": 0, "default_branch": "master"}}, "base": {"label": "pytorch:master", "ref": "master", "sha": "04a7fc1dc4173a2571c1a9c3829b82955523b91d", "user": {"login": "pytorch", "id": 21003710, "node_id": "MDEyOk9yZ2FuaXphdGlvbjIxMDAzNzEw", "avatar_url": "https://avatars3.githubusercontent.com/u/21003710?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pytorch", "html_url": "https://github.com/pytorch", "followers_url": "https://api.github.com/users/pytorch/followers", "following_url": "https://api.github.com/users/pytorch/following{/other_user}", "gists_url": "https://api.github.com/users/pytorch/gists{/gist_id}", "starred_url": "https://api.github.com/users/pytorch/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pytorch/subscriptions", "organizations_url": "https://api.github.com/users/pytorch/orgs", "repos_url": "https://api.github.com/users/pytorch/repos", "events_url": "https://api.github.com/users/pytorch/events{/privacy}", "received_events_url": "https://api.github.com/users/pytorch/received_events", "type": "Organization", "site_admin": false}, "repo": {"id": 65600975, "node_id": "MDEwOlJlcG9zaXRvcnk2NTYwMDk3NQ==", "name": "pytorch", "full_name": "pytorch/pytorch", "private": false, "owner": {"login": "pytorch", "id": 21003710, "node_id": "MDEyOk9yZ2FuaXphdGlvbjIxMDAzNzEw", "avatar_url": "https://avatars3.githubusercontent.com/u/21003710?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pytorch", "html_url": "https://github.com/pytorch", "followers_url": "https://api.github.com/users/pytorch/followers", "following_url": "https://api.github.com/users/pytorch/following{/other_user}", "gists_url": "https://api.github.com/users/pytorch/gists{/gist_id}", "starred_url": "https://api.github.com/users/pytorch/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pytorch/subscriptions", "organizations_url": "https://api.github.com/users/pytorch/orgs", "repos_url": "https://api.github.com/users/pytorch/repos", "events_url": "https://api.github.com/users/pytorch/events{/privacy}", "received_events_url": "https://api.github.com/users/pytorch/received_events", "type": "Organization", "site_admin": false}, "html_url": "https://github.com/pytorch/pytorch", "description": "Tensors and Dynamic neural networks in Python  with strong GPU acceleration", "fork": false, "url": "https://api.github.com/repos/pytorch/pytorch", "forks_url": "https://api.github.com/repos/pytorch/pytorch/forks", "keys_url": "https://api.github.com/repos/pytorch/pytorch/keys{/key_id}", "collaborators_url": "https://api.github.com/repos/pytorch/pytorch/collaborators{/collaborator}", "teams_url": "https://api.github.com/repos/pytorch/pytorch/teams", "hooks_url": "https://api.github.com/repos/pytorch/pytorch/hooks", "issue_events_url": "https://api.github.com/repos/pytorch/pytorch/issues/events{/number}", "events_url": "https://api.github.com/repos/pytorch/pytorch/events", "assignees_url": "https://api.github.com/repos/pytorch/pytorch/assignees{/user}", "branches_url": "https://api.github.com/repos/pytorch/pytorch/branches{/branch}", "tags_url": "https://api.github.com/repos/pytorch/pytorch/tags", "blobs_url": "https://api.github.com/repos/pytorch/pytorch/git/blobs{/sha}", "git_tags_url": "https://api.github.com/repos/pytorch/pytorch/git/tags{/sha}", "git_refs_url": "https://api.github.com/repos/pytorch/pytorch/git/refs{/sha}", "trees_url": "https://api.github.com/repos/pytorch/pytorch/git/trees{/sha}", "statuses_url": "https://api.github.com/repos/pytorch/pytorch/statuses/{sha}", "languages_url": "https://api.github.com/repos/pytorch/pytorch/languages", "stargazers_url": "https://api.github.com/repos/pytorch/pytorch/stargazers", "contributors_url": "https://api.github.com/repos/pytorch/pytorch/contributors", "subscribers_url": "https://api.github.com/repos/pytorch/pytorch/subscribers", "subscription_url": "https://api.github.com/repos/pytorch/pytorch/subscription", "commits_url": "https://api.github.com/repos/pytorch/pytorch/commits{/sha}", "git_commits_url": "https://api.github.com/repos/pytorch/pytorch/git/commits{/sha}", "comments_url": "https://api.github.com/repos/pytorch/pytorch/comments{/number}", "issue_comment_url": "https://api.github.com/repos/pytorch/pytorch/issues/comments{/number}", "contents_url": "https://api.github.com/repos/pytorch/pytorch/contents/{+path}", "compare_url": "https://api.github.com/repos/pytorch/pytorch/compare/{base}...{head}", "merges_url": "https://api.github.com/repos/pytorch/pytorch/merges", "archive_url": "https://api.github.com/repos/pytorch/pytorch/{archive_format}{/ref}", "downloads_url": "https://api.github.com/repos/pytorch/pytorch/downloads", "issues_url": "https://api.github.com/repos/pytorch/pytorch/issues{/number}", "pulls_url": "https://api.github.com/repos/pytorch/pytorch/pulls{/number}", "milestones_url": "https://api.github.com/repos/pytorch/pytorch/milestones{/number}", "notifications_url": "https://api.github.com/repos/pytorch/pytorch/notifications{?since,all,participating}", "labels_url": "https://api.github.com/repos/pytorch/pytorch/labels{/name}", "releases_url": "https://api.github.com/repos/pytorch/pytorch/releases{/id}", "deployments_url": "https://api.github.com/repos/pytorch/pytorch/deployments", "created_at": "2016-08-13T05:26:41Z", "updated_at": "2018-11-24T12:35:43Z", "pushed_at": "2018-11-24T12:42:01Z", "git_url": "git://github.com/pytorch/pytorch.git", "ssh_url": "git@github.com:pytorch/pytorch.git", "clone_url": "https://github.com/pytorch/pytorch.git", "svn_url": "https://github.com/pytorch/pytorch", "homepage": "http://pytorch.org", "size": 89656, "stargazers_count": 21589, "watchers_count": 21589, "language": "C++", "has_issues": true, "has_projects": true, "has_downloads": true, "has_wiki": true, "has_pages": false, "forks_count": 5153, "mirror_url": null, "archived": false, "open_issues_count": 2196, "license": {"key": "other", "name": "Other", "spdx_id": "NOASSERTION", "url": null, "node_id": "MDc6TGljZW5zZTA="}, "forks": 5153, "open_issues": 2196, "watchers": 21589, "default_branch": "master"}}, "_links": {"self": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/9102"}, "html": {"href": "https://github.com/pytorch/pytorch/pull/9102"}, "issue": {"href": "https://api.github.com/repos/pytorch/pytorch/issues/9102"}, "comments": {"href": "https://api.github.com/repos/pytorch/pytorch/issues/9102/comments"}, "review_comments": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/9102/comments"}, "review_comment": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/comments{/number}"}, "commits": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/9102/commits"}, "statuses": {"href": "https://api.github.com/repos/pytorch/pytorch/statuses/cb3f11c7e7fb420e5b38eb7128d0753765389a1b"}}, "author_association": "NONE", "body_html": "<p>I was recently working on some Kalman filter stuff and found myself in need of a batch matrix inverse, so I implemented it (doing it in a Python for loop is incredibly slow, especially with CUDA). Since cuBLAS has such functionality already implemented (and the standard inverse function just passes 1 as the batch size), it's just a matter of allocating some buffers and passing data to the appropriate cuBLAS functions. The implementation is based on the <code>btrifact</code> (batch LU factorization using <code>getrf</code>) function. I also added a CPU implementation (which is really just a for loop) for the sake of completeness.</p>\n<p>I figured that this might be useful for other people, so I'm sharing it here. This is my first contribution to PyTorch and I'm not very experienced with CUDA programming, so all comments regarding the code are most welcome.</p>", "body_text": "I was recently working on some Kalman filter stuff and found myself in need of a batch matrix inverse, so I implemented it (doing it in a Python for loop is incredibly slow, especially with CUDA). Since cuBLAS has such functionality already implemented (and the standard inverse function just passes 1 as the batch size), it's just a matter of allocating some buffers and passing data to the appropriate cuBLAS functions. The implementation is based on the btrifact (batch LU factorization using getrf) function. I also added a CPU implementation (which is really just a for loop) for the sake of completeness.\nI figured that this might be useful for other people, so I'm sharing it here. This is my first contribution to PyTorch and I'm not very experienced with CUDA programming, so all comments regarding the code are most welcome.", "merged": false, "mergeable": false, "rebaseable": false, "mergeable_state": "dirty", "merged_by": null, "comments": 17, "review_comments": 1, "maintainer_can_modify": false, "commits": 9, "additions": 297, "deletions": 174, "changed_files": 14}