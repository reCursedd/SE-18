{"url": "https://api.github.com/repos/pytorch/pytorch/issues/comments/401934769", "html_url": "https://github.com/pytorch/pytorch/pull/9102#issuecomment-401934769", "issue_url": "https://api.github.com/repos/pytorch/pytorch/issues/9102", "id": 401934769, "node_id": "MDEyOklzc3VlQ29tbWVudDQwMTkzNDc2OQ==", "user": {"login": "fmassa", "id": 9110200, "node_id": "MDQ6VXNlcjkxMTAyMDA=", "avatar_url": "https://avatars2.githubusercontent.com/u/9110200?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fmassa", "html_url": "https://github.com/fmassa", "followers_url": "https://api.github.com/users/fmassa/followers", "following_url": "https://api.github.com/users/fmassa/following{/other_user}", "gists_url": "https://api.github.com/users/fmassa/gists{/gist_id}", "starred_url": "https://api.github.com/users/fmassa/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fmassa/subscriptions", "organizations_url": "https://api.github.com/users/fmassa/orgs", "repos_url": "https://api.github.com/users/fmassa/repos", "events_url": "https://api.github.com/users/fmassa/events{/privacy}", "received_events_url": "https://api.github.com/users/fmassa/received_events", "type": "User", "site_admin": false}, "created_at": "2018-07-02T21:02:02Z", "updated_at": "2018-07-02T21:02:02Z", "author_association": "MEMBER", "body_html": "<p>Thanks for the PR!<br>\nI have a quick suggestion on the python interface: instead of making a new <code>binverse</code> function, can't we instead extend support for <code>inverse</code> to support arbitrary batch dimensions (where we view all the batch dimensions as 1 and then view back after the result). What do you think?</p>", "body_text": "Thanks for the PR!\nI have a quick suggestion on the python interface: instead of making a new binverse function, can't we instead extend support for inverse to support arbitrary batch dimensions (where we view all the batch dimensions as 1 and then view back after the result). What do you think?", "body": "Thanks for the PR!\r\nI have a quick suggestion on the python interface: instead of making a new `binverse` function, can't we instead extend support for `inverse` to support arbitrary batch dimensions (where we view all the batch dimensions as 1 and then view back after the result). What do you think?"}