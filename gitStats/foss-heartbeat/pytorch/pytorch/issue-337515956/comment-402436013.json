{"url": "https://api.github.com/repos/pytorch/pytorch/issues/comments/402436013", "html_url": "https://github.com/pytorch/pytorch/pull/9102#issuecomment-402436013", "issue_url": "https://api.github.com/repos/pytorch/pytorch/issues/9102", "id": 402436013, "node_id": "MDEyOklzc3VlQ29tbWVudDQwMjQzNjAxMw==", "user": {"login": "karol-arndt", "id": 15629271, "node_id": "MDQ6VXNlcjE1NjI5Mjcx", "avatar_url": "https://avatars2.githubusercontent.com/u/15629271?v=4", "gravatar_id": "", "url": "https://api.github.com/users/karol-arndt", "html_url": "https://github.com/karol-arndt", "followers_url": "https://api.github.com/users/karol-arndt/followers", "following_url": "https://api.github.com/users/karol-arndt/following{/other_user}", "gists_url": "https://api.github.com/users/karol-arndt/gists{/gist_id}", "starred_url": "https://api.github.com/users/karol-arndt/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/karol-arndt/subscriptions", "organizations_url": "https://api.github.com/users/karol-arndt/orgs", "repos_url": "https://api.github.com/users/karol-arndt/repos", "events_url": "https://api.github.com/users/karol-arndt/events{/privacy}", "received_events_url": "https://api.github.com/users/karol-arndt/received_events", "type": "User", "site_admin": false}, "created_at": "2018-07-04T10:21:25Z", "updated_at": "2018-07-04T10:21:25Z", "author_association": "NONE", "body_html": "<p><a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=9110200\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/fmassa\">@fmassa</a> In that case, I'll adopt the code to extend the <code>inverse</code> function.</p>\n<p><a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=13564\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/ezyang\">@ezyang</a> I've never written any ATen code before. I wouldn't expect it to be particularly difficult though, the API seems to be more friendly than TH. If the current trend is to write new code in ATen, I can try to port the implementation in the coming days. Should I use MKL for the CPU code?</p>", "body_text": "@fmassa In that case, I'll adopt the code to extend the inverse function.\n@ezyang I've never written any ATen code before. I wouldn't expect it to be particularly difficult though, the API seems to be more friendly than TH. If the current trend is to write new code in ATen, I can try to port the implementation in the coming days. Should I use MKL for the CPU code?", "body": "@fmassa In that case, I'll adopt the code to extend the `inverse` function.\r\n\r\n@ezyang I've never written any ATen code before. I wouldn't expect it to be particularly difficult though, the API seems to be more friendly than TH. If the current trend is to write new code in ATen, I can try to port the implementation in the coming days. Should I use MKL for the CPU code?"}