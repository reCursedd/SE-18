{"url": "https://api.github.com/repos/pytorch/pytorch/issues/comments/384820705", "html_url": "https://github.com/pytorch/pytorch/pull/6986#issuecomment-384820705", "issue_url": "https://api.github.com/repos/pytorch/pytorch/issues/6986", "id": 384820705, "node_id": "MDEyOklzc3VlQ29tbWVudDM4NDgyMDcwNQ==", "user": {"login": "goldsborough", "id": 6429851, "node_id": "MDQ6VXNlcjY0Mjk4NTE=", "avatar_url": "https://avatars3.githubusercontent.com/u/6429851?v=4", "gravatar_id": "", "url": "https://api.github.com/users/goldsborough", "html_url": "https://github.com/goldsborough", "followers_url": "https://api.github.com/users/goldsborough/followers", "following_url": "https://api.github.com/users/goldsborough/following{/other_user}", "gists_url": "https://api.github.com/users/goldsborough/gists{/gist_id}", "starred_url": "https://api.github.com/users/goldsborough/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/goldsborough/subscriptions", "organizations_url": "https://api.github.com/users/goldsborough/orgs", "repos_url": "https://api.github.com/users/goldsborough/repos", "events_url": "https://api.github.com/users/goldsborough/events{/privacy}", "received_events_url": "https://api.github.com/users/goldsborough/received_events", "type": "User", "site_admin": false}, "created_at": "2018-04-26T23:39:35Z", "updated_at": "2018-04-26T23:39:35Z", "author_association": "CONTRIBUTOR", "body_html": "<p>I'm always a bit wary about silently doing things like this for users because it becomes more confusing when they don't expect it. Like here, someone might have a <code>A._C</code> and <code>B._C</code> extension and expect them to differ, but will probably end up with something very weird (e.g. the second library overwriting the first). Disallowing dots in the name and raising an error might be better?</p>\n<p>Also, just to understand, were you trying to name the extension something like <code>torchvision._C</code>? It probably doesn't matter for the JIT extensions because the module is loaded from an absolute path, but if you tried to actually import the module with <code>import</code> it would fail because there wouldn't actually be such a directory structure <code>torchvision/_C.py</code> right?</p>", "body_text": "I'm always a bit wary about silently doing things like this for users because it becomes more confusing when they don't expect it. Like here, someone might have a A._C and B._C extension and expect them to differ, but will probably end up with something very weird (e.g. the second library overwriting the first). Disallowing dots in the name and raising an error might be better?\nAlso, just to understand, were you trying to name the extension something like torchvision._C? It probably doesn't matter for the JIT extensions because the module is loaded from an absolute path, but if you tried to actually import the module with import it would fail because there wouldn't actually be such a directory structure torchvision/_C.py right?", "body": "I'm always a bit wary about silently doing things like this for users because it becomes more confusing when they don't expect it. Like here, someone might have a `A._C` and `B._C` extension and expect them to differ, but will probably end up with something very weird (e.g. the second library overwriting the first). Disallowing dots in the name and raising an error might be better? \r\n\r\nAlso, just to understand, were you trying to name the extension something like `torchvision._C`? It probably doesn't matter for the JIT extensions because the module is loaded from an absolute path, but if you tried to actually import the module with `import` it would fail because there wouldn't actually be such a directory structure `torchvision/_C.py` right?"}