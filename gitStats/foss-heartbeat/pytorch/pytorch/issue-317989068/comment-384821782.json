{"url": "https://api.github.com/repos/pytorch/pytorch/issues/comments/384821782", "html_url": "https://github.com/pytorch/pytorch/pull/6986#issuecomment-384821782", "issue_url": "https://api.github.com/repos/pytorch/pytorch/issues/6986", "id": 384821782, "node_id": "MDEyOklzc3VlQ29tbWVudDM4NDgyMTc4Mg==", "user": {"login": "fmassa", "id": 9110200, "node_id": "MDQ6VXNlcjkxMTAyMDA=", "avatar_url": "https://avatars2.githubusercontent.com/u/9110200?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fmassa", "html_url": "https://github.com/fmassa", "followers_url": "https://api.github.com/users/fmassa/followers", "following_url": "https://api.github.com/users/fmassa/following{/other_user}", "gists_url": "https://api.github.com/users/fmassa/gists{/gist_id}", "starred_url": "https://api.github.com/users/fmassa/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fmassa/subscriptions", "organizations_url": "https://api.github.com/users/fmassa/orgs", "repos_url": "https://api.github.com/users/fmassa/repos", "events_url": "https://api.github.com/users/fmassa/events{/privacy}", "received_events_url": "https://api.github.com/users/fmassa/received_events", "type": "User", "site_admin": false}, "created_at": "2018-04-26T23:47:04Z", "updated_at": "2018-04-26T23:47:04Z", "author_association": "MEMBER", "body_html": "<p>Actually, setuptools send the <code>_C</code> library to the right folder. So in your example, there would be no clash (except if the temporaries are first written to the same destination then copied, not sure what actually happens).<br>\nBut this pattern of having <code>module.ext</code> is quite common in setuptools.Extension.</p>\n<p>And <code>torchvision._C</code> worked fine in my case. Without this patch, I had to create the extension in the global namespace like <code>_torchvision__C</code>, which is not great.</p>", "body_text": "Actually, setuptools send the _C library to the right folder. So in your example, there would be no clash (except if the temporaries are first written to the same destination then copied, not sure what actually happens).\nBut this pattern of having module.ext is quite common in setuptools.Extension.\nAnd torchvision._C worked fine in my case. Without this patch, I had to create the extension in the global namespace like _torchvision__C, which is not great.", "body": "Actually, setuptools send the `_C` library to the right folder. So in your example, there would be no clash (except if the temporaries are first written to the same destination then copied, not sure what actually happens).\r\nBut this pattern of having `module.ext` is quite common in setuptools.Extension.\r\n\r\nAnd `torchvision._C` worked fine in my case. Without this patch, I had to create the extension in the global namespace like `_torchvision__C`, which is not great.\r\n"}