{"url": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/175194458", "pull_request_review_id": 104693561, "id": 175194458, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE3NTE5NDQ1OA==", "diff_hunk": "@@ -5,26 +5,28 @@\n namespace at { namespace native {\n \n Tensor bilinear(const Tensor& input1, const Tensor& input2, const Tensor& weight, const Tensor& bias) {\n-  if (input1.dim() != input2.dim()) {\n-    throw std::runtime_error(\"Inputs should have the same number of dimensions\");\n-  }\n+  AT_ASSERT(input1.dim() == input2.dim(), \"bilinear(): input dimensions do not match: got %d and %d\",\n+            input1.dim(), input2.dim());\n   for (int64_t i = 0; i < input1.dim() - 1; i++) {\n-    if (input1.size(i) != input2.size(i)) {\n-      throw std::runtime_error(\"Batch dimensions of inputs do not match\");\n-    }\n-  }\n-  if (input1.size(input1.dim() - 1) != weight.size(1) || input2.size(input2.dim() - 1) != weight.size(2)) {\n-    throw std::runtime_error(\"Input sizes do not match weight sizes\");\n-  }\n-  if (bias.defined() && bias.size(0) != weight.size(0)) {\n-    throw std::runtime_error(\"Bias sizes does not match weight size\");\n+    AT_ASSERT(input1.size(i) == input2.size(i),\n+              \"bilinear(): input batch dimensions do not match at dim %d: got %d and %d\",\n+              i, input1.size(i), input2.size(i));", "path": "aten/src/ATen/native/Linear.cpp", "position": null, "original_position": 21, "commit_id": "263eb7c106c8a565d0891b74c11e103b60530f6d", "original_commit_id": "9ede25a53def3d68b355cbf25f3f96bb85be4930", "user": {"login": "zou3519", "id": 5652049, "node_id": "MDQ6VXNlcjU2NTIwNDk=", "avatar_url": "https://avatars3.githubusercontent.com/u/5652049?v=4", "gravatar_id": "", "url": "https://api.github.com/users/zou3519", "html_url": "https://github.com/zou3519", "followers_url": "https://api.github.com/users/zou3519/followers", "following_url": "https://api.github.com/users/zou3519/following{/other_user}", "gists_url": "https://api.github.com/users/zou3519/gists{/gist_id}", "starred_url": "https://api.github.com/users/zou3519/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/zou3519/subscriptions", "organizations_url": "https://api.github.com/users/zou3519/orgs", "repos_url": "https://api.github.com/users/zou3519/repos", "events_url": "https://api.github.com/users/zou3519/events{/privacy}", "received_events_url": "https://api.github.com/users/zou3519/received_events", "type": "User", "site_admin": false}, "body": "My bad, \"%d\" isn't the correct format (bcause input.size(1) is an int64_t). You can use \"%lld\" and cast input1.size(i) to `(long long)` or you can cast input1.size(1) to (int).", "created_at": "2018-03-16T19:35:36Z", "updated_at": "2018-11-23T15:40:54Z", "html_url": "https://github.com/pytorch/pytorch/pull/5764#discussion_r175194458", "pull_request_url": "https://api.github.com/repos/pytorch/pytorch/pulls/5764", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/175194458"}, "html": {"href": "https://github.com/pytorch/pytorch/pull/5764#discussion_r175194458"}, "pull_request": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/5764"}}, "body_html": "<p>My bad, \"%d\" isn't the correct format (bcause input.size(1) is an int64_t). You can use \"%lld\" and cast input1.size(i) to <code>(long long)</code> or you can cast input1.size(1) to (int).</p>", "body_text": "My bad, \"%d\" isn't the correct format (bcause input.size(1) is an int64_t). You can use \"%lld\" and cast input1.size(i) to (long long) or you can cast input1.size(1) to (int)."}