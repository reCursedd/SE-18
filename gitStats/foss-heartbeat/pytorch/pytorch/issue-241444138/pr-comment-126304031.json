{"url": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/126304031", "pull_request_review_id": 48776750, "id": 126304031, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEyNjMwNDAzMQ==", "diff_hunk": "@@ -556,6 +556,22 @@ def batch_norm(input, running_mean, running_var, weight=None, bias=None,\n     return f(input, weight, bias)\n \n \n+def layer_norm(input, weight=None, bias=None, eps=1e-5):", "path": "torch/nn/functional.py", "position": null, "original_position": 4, "commit_id": "9182562a19855ec294d297118c01d0a3f04df0dc", "original_commit_id": "1937cf510e0a243d55b134980170e998df532a74", "user": {"login": "alykhantejani", "id": 687194, "node_id": "MDQ6VXNlcjY4NzE5NA==", "avatar_url": "https://avatars1.githubusercontent.com/u/687194?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alykhantejani", "html_url": "https://github.com/alykhantejani", "followers_url": "https://api.github.com/users/alykhantejani/followers", "following_url": "https://api.github.com/users/alykhantejani/following{/other_user}", "gists_url": "https://api.github.com/users/alykhantejani/gists{/gist_id}", "starred_url": "https://api.github.com/users/alykhantejani/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alykhantejani/subscriptions", "organizations_url": "https://api.github.com/users/alykhantejani/orgs", "repos_url": "https://api.github.com/users/alykhantejani/repos", "events_url": "https://api.github.com/users/alykhantejani/events{/privacy}", "received_events_url": "https://api.github.com/users/alykhantejani/received_events", "type": "User", "site_admin": false}, "body": "Maybe just this one should go in the functional interface:\r\n```Python\r\nif weight is not None and input.size(1) != self.weight.nelement():\r\n           raise ValueError('got {}-feature tensor, expected {}'\r\n                            .format(input.size(1), self.num_features))\r\n```", "created_at": "2017-07-09T13:00:24Z", "updated_at": "2018-11-23T15:34:03Z", "html_url": "https://github.com/pytorch/pytorch/pull/2019#discussion_r126304031", "pull_request_url": "https://api.github.com/repos/pytorch/pytorch/pulls/2019", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/126304031"}, "html": {"href": "https://github.com/pytorch/pytorch/pull/2019#discussion_r126304031"}, "pull_request": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/2019"}}, "body_html": "<p>Maybe just this one should go in the functional interface:</p>\n<div class=\"highlight highlight-source-python\"><pre><span class=\"pl-k\">if</span> weight <span class=\"pl-k\">is</span> <span class=\"pl-k\">not</span> <span class=\"pl-c1\">None</span> <span class=\"pl-k\">and</span> <span class=\"pl-c1\">input</span>.size(<span class=\"pl-c1\">1</span>) <span class=\"pl-k\">!=</span> <span class=\"pl-c1\">self</span>.weight.nelement():\n           <span class=\"pl-k\">raise</span> <span class=\"pl-c1\">ValueError</span>(<span class=\"pl-s\"><span class=\"pl-pds\">'</span>got <span class=\"pl-c1\">{}</span>-feature tensor, expected <span class=\"pl-c1\">{}</span><span class=\"pl-pds\">'</span></span>\n                            .format(<span class=\"pl-c1\">input</span>.size(<span class=\"pl-c1\">1</span>), <span class=\"pl-c1\">self</span>.num_features))</pre></div>", "body_text": "Maybe just this one should go in the functional interface:\nif weight is not None and input.size(1) != self.weight.nelement():\n           raise ValueError('got {}-feature tensor, expected {}'\n                            .format(input.size(1), self.num_features))", "in_reply_to_id": 126303104}