{"url": "https://api.github.com/repos/pytorch/pytorch/issues/comments/342787832", "html_url": "https://github.com/pytorch/pytorch/pull/2019#issuecomment-342787832", "issue_url": "https://api.github.com/repos/pytorch/pytorch/issues/2019", "id": 342787832, "node_id": "MDEyOklzc3VlQ29tbWVudDM0Mjc4NzgzMg==", "user": {"login": "mys007", "id": 5921083, "node_id": "MDQ6VXNlcjU5MjEwODM=", "avatar_url": "https://avatars2.githubusercontent.com/u/5921083?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mys007", "html_url": "https://github.com/mys007", "followers_url": "https://api.github.com/users/mys007/followers", "following_url": "https://api.github.com/users/mys007/following{/other_user}", "gists_url": "https://api.github.com/users/mys007/gists{/gist_id}", "starred_url": "https://api.github.com/users/mys007/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mys007/subscriptions", "organizations_url": "https://api.github.com/users/mys007/orgs", "repos_url": "https://api.github.com/users/mys007/repos", "events_url": "https://api.github.com/users/mys007/events{/privacy}", "received_events_url": "https://api.github.com/users/mys007/received_events", "type": "User", "site_admin": false}, "created_at": "2017-11-08T11:18:09Z", "updated_at": "2017-11-08T11:18:36Z", "author_association": "CONTRIBUTOR", "body_html": "<p>I got bitten by <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load issue title\" data-id=\"252806002\" data-permission-text=\"Issue title is private\" data-url=\"https://github.com/pytorch/pytorch/issues/2534\" data-hovercard-type=\"issue\" data-hovercard-url=\"/pytorch/pytorch/issues/2534/hovercard\" href=\"https://github.com/pytorch/pytorch/issues/2534\">#2534</a> here: if the standard deviation happens to be 0 for some sample, the gradient will become NaN. The following workaround fixes the computation here for me:</p>\n<pre><code>std = ((input - mean).pow(2).sum(1, keepdim=True).div(input.size(1)-1) + eps).sqrt()\noutput = (input - mean) / std\n</code></pre>", "body_text": "I got bitten by #2534 here: if the standard deviation happens to be 0 for some sample, the gradient will become NaN. The following workaround fixes the computation here for me:\nstd = ((input - mean).pow(2).sum(1, keepdim=True).div(input.size(1)-1) + eps).sqrt()\noutput = (input - mean) / std", "body": "I got bitten by https://github.com/pytorch/pytorch/issues/2534 here: if the standard deviation happens to be 0 for some sample, the gradient will become NaN. The following workaround fixes the computation here for me:\r\n```\r\nstd = ((input - mean).pow(2).sum(1, keepdim=True).div(input.size(1)-1) + eps).sqrt()\r\noutput = (input - mean) / std"}