{"url": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/126286747", "pull_request_review_id": 48760836, "id": 126286747, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEyNjI4Njc0Nw==", "diff_hunk": "@@ -0,0 +1,156 @@\n+import torch\n+from .module import Module\n+from torch.nn.parameter import Parameter\n+\n+\n+class _LayerNorm(Module):\n+    def __init__(self, num_features, eps=1e-5, affine=True):\n+        super(_LayerNorm, self).__init__()\n+        self.num_features = num_features\n+        self.affine = affine\n+        self.eps = eps\n+        if self.affine:\n+            self.weight = Parameter(torch.ones(num_features))\n+            self.bias = Parameter(torch.zeros(num_features))\n+        else:\n+            self.register_parameter('weight', None)\n+            self.register_parameter('bias', None)\n+        self.reset_parameters()\n+\n+    def reset_parameters(self):\n+        if self.affine:\n+            self.weight.data.fill_(1)\n+            self.bias.data.zero_()\n+\n+    def _check_input_dim(self, input):\n+        if self.affine and input.size(1) != self.weight.nelement():\n+            raise ValueError('got {}-feature tensor, expected {}'\n+                             .format(input.size(1), self.num_features))\n+\n+    def forward(self, input):", "path": "torch/nn/modules/layernorm.py", "position": null, "original_position": 30, "commit_id": "9182562a19855ec294d297118c01d0a3f04df0dc", "original_commit_id": "1f1a48d5e986c25f41e72e2192881a08971905ae", "user": {"login": "alykhantejani", "id": 687194, "node_id": "MDQ6VXNlcjY4NzE5NA==", "avatar_url": "https://avatars1.githubusercontent.com/u/687194?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alykhantejani", "html_url": "https://github.com/alykhantejani", "followers_url": "https://api.github.com/users/alykhantejani/followers", "following_url": "https://api.github.com/users/alykhantejani/following{/other_user}", "gists_url": "https://api.github.com/users/alykhantejani/gists{/gist_id}", "starred_url": "https://api.github.com/users/alykhantejani/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alykhantejani/subscriptions", "organizations_url": "https://api.github.com/users/alykhantejani/orgs", "repos_url": "https://api.github.com/users/alykhantejani/repos", "events_url": "https://api.github.com/users/alykhantejani/events{/privacy}", "received_events_url": "https://api.github.com/users/alykhantejani/received_events", "type": "User", "site_admin": false}, "body": "Should this be added in the functional interface and called from here? (i.e. `torch.nn.functional.layer_norm`)", "created_at": "2017-07-08T17:40:20Z", "updated_at": "2018-11-23T15:34:03Z", "html_url": "https://github.com/pytorch/pytorch/pull/2019#discussion_r126286747", "pull_request_url": "https://api.github.com/repos/pytorch/pytorch/pulls/2019", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/126286747"}, "html": {"href": "https://github.com/pytorch/pytorch/pull/2019#discussion_r126286747"}, "pull_request": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/2019"}}, "body_html": "<p>Should this be added in the functional interface and called from here? (i.e. <code>torch.nn.functional.layer_norm</code>)</p>", "body_text": "Should this be added in the functional interface and called from here? (i.e. torch.nn.functional.layer_norm)"}