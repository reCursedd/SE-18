{"url": "https://api.github.com/repos/pytorch/pytorch/issues/comments/271911457", "html_url": "https://github.com/pytorch/pytorch/issues/431#issuecomment-271911457", "issue_url": "https://api.github.com/repos/pytorch/pytorch/issues/431", "id": 271911457, "node_id": "MDEyOklzc3VlQ29tbWVudDI3MTkxMTQ1Nw==", "user": {"login": "apaszke", "id": 4583066, "node_id": "MDQ6VXNlcjQ1ODMwNjY=", "avatar_url": "https://avatars3.githubusercontent.com/u/4583066?v=4", "gravatar_id": "", "url": "https://api.github.com/users/apaszke", "html_url": "https://github.com/apaszke", "followers_url": "https://api.github.com/users/apaszke/followers", "following_url": "https://api.github.com/users/apaszke/following{/other_user}", "gists_url": "https://api.github.com/users/apaszke/gists{/gist_id}", "starred_url": "https://api.github.com/users/apaszke/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/apaszke/subscriptions", "organizations_url": "https://api.github.com/users/apaszke/orgs", "repos_url": "https://api.github.com/users/apaszke/repos", "events_url": "https://api.github.com/users/apaszke/events{/privacy}", "received_events_url": "https://api.github.com/users/apaszke/received_events", "type": "User", "site_admin": false}, "created_at": "2017-01-11T16:11:31Z", "updated_at": "2017-01-11T16:11:31Z", "author_association": "MEMBER", "body_html": "<p>Ok, how about adding this then:</p>\n<div class=\"highlight highlight-source-python\"><pre>    <span class=\"pl-k\">class</span> <span class=\"pl-en\">Proxy</span>(<span class=\"pl-c1\">object</span>):\n        <span class=\"pl-k\">def</span> <span class=\"pl-c1\">__init__</span>(<span class=\"pl-smi\"><span class=\"pl-smi\">self</span></span>, <span class=\"pl-smi\">obj</span>, <span class=\"pl-smi\">prefix</span>):\n            <span class=\"pl-c1\">self</span>.obj <span class=\"pl-k\">=</span> obj\n            <span class=\"pl-c1\">self</span>.prefix <span class=\"pl-k\">=</span> prefix\n\n        <span class=\"pl-k\">def</span> <span class=\"pl-c1\">__getitem__</span>(<span class=\"pl-smi\"><span class=\"pl-smi\">self</span></span>, <span class=\"pl-smi\">idx</span>):\n            <span class=\"pl-k\">return</span> <span class=\"pl-c1\">getattr</span>(<span class=\"pl-c1\">self</span>.obj, prefix <span class=\"pl-k\">+</span> <span class=\"pl-c1\">str</span>(idx))\n\n    <span class=\"pl-c1\">self</span>.U1_c <span class=\"pl-k\">=</span> Proxy(<span class=\"pl-c1\">self</span>, <span class=\"pl-s\"><span class=\"pl-pds\">'</span>U2_r_<span class=\"pl-pds\">'</span></span>)\n    <span class=\"pl-c1\">self</span>.U1_r <span class=\"pl-k\">=</span> Proxy(<span class=\"pl-c1\">self</span>, <span class=\"pl-s\"><span class=\"pl-pds\">'</span>U1_r_<span class=\"pl-pds\">'</span></span>)</pre></div>", "body_text": "Ok, how about adding this then:\n    class Proxy(object):\n        def __init__(self, obj, prefix):\n            self.obj = obj\n            self.prefix = prefix\n\n        def __getitem__(self, idx):\n            return getattr(self.obj, prefix + str(idx))\n\n    self.U1_c = Proxy(self, 'U2_r_')\n    self.U1_r = Proxy(self, 'U1_r_')", "body": "Ok, how about adding this then:\r\n\r\n```python\r\n    class Proxy(object):\r\n        def __init__(self, obj, prefix):\r\n            self.obj = obj\r\n            self.prefix = prefix\r\n\r\n        def __getitem__(self, idx):\r\n            return getattr(self.obj, prefix + str(idx))\r\n\r\n    self.U1_c = Proxy(self, 'U2_r_')\r\n    self.U1_r = Proxy(self, 'U1_r_')\r\n```"}