{"url": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/177948162", "pull_request_review_id": 107919075, "id": 177948162, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE3Nzk0ODE2Mg==", "diff_hunk": "@@ -2587,6 +2588,86 @@ def test_gesv(self):\n         torch.gesv(b, a, out=(tb, ta))[0]\n         self.assertEqual(res1, tb)\n \n+    @staticmethod\n+    def _test_gesv_batched(self, cast):\n+        from torch.autograd import Variable\n+\n+        # test against gesv: one batch\n+        A = Variable(cast(torch.randn(1, 5, 5)))\n+        b = Variable(cast(torch.randn(1, 5, 10)))\n+        x_exp, LU_exp = torch.gesv(b.squeeze(0), A.squeeze(0))\n+        x, LU = torch.gesv(b, A)\n+        self.assertEqual(x, x_exp.unsqueeze(0))\n+        self.assertEqual(LU, LU_exp.unsqueeze(0))\n+\n+        # test against gesv in a loop: four batches\n+        A = Variable(cast(torch.randn(4, 5, 5)))\n+        b = Variable(cast(torch.randn(4, 5, 10)))\n+\n+        x_exp_list = list()\n+        LU_exp_list = list()\n+        for i in range(4):\n+            x_exp, LU_exp = torch.gesv(b[i], A[i])\n+            x_exp_list.append(x_exp)\n+            LU_exp_list.append(LU_exp)\n+        x_exp = torch.stack(x_exp_list)\n+        LU_exp = torch.stack(LU_exp_list)\n+\n+        x, LU = torch.gesv(b, A)\n+        self.assertEqual(x, x_exp)\n+        self.assertEqual(LU, LU_exp)\n+\n+        # basic correctness test\n+        A = Variable(cast(torch.randn(3, 5, 5)))\n+        b = Variable(cast(torch.randn(3, 5, 10)))\n+        x, LU = torch.gesv(b, A)\n+        self.assertEqual(torch.matmul(A, x), b)\n+\n+    @skipIfNoLapack\n+    def test_gesv_batched(self):\n+        self._test_gesv_batched(self, lambda t: t)\n+\n+    @staticmethod\n+    def _test_gesv_batched_dims(self, cast):\n+        if not TEST_NUMPY:\n+            return\n+\n+        from torch.autograd import Variable", "path": "test/test_torch.py", "position": null, "original_position": 56, "commit_id": "fabd77594df5a7e4c4ceca8bb6fd62f036f3b7ff", "original_commit_id": "501b78471d5235ddb03e943b6a09b7a551822afe", "user": {"login": "zou3519", "id": 5652049, "node_id": "MDQ6VXNlcjU2NTIwNDk=", "avatar_url": "https://avatars3.githubusercontent.com/u/5652049?v=4", "gravatar_id": "", "url": "https://api.github.com/users/zou3519", "html_url": "https://github.com/zou3519", "followers_url": "https://api.github.com/users/zou3519/followers", "following_url": "https://api.github.com/users/zou3519/following{/other_user}", "gists_url": "https://api.github.com/users/zou3519/gists{/gist_id}", "starred_url": "https://api.github.com/users/zou3519/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/zou3519/subscriptions", "organizations_url": "https://api.github.com/users/zou3519/orgs", "repos_url": "https://api.github.com/users/zou3519/repos", "events_url": "https://api.github.com/users/zou3519/events{/privacy}", "received_events_url": "https://api.github.com/users/zou3519/received_events", "type": "User", "site_admin": false}, "body": "ahh thanks it's been so long :)", "created_at": "2018-03-29T03:53:59Z", "updated_at": "2018-11-23T15:41:17Z", "html_url": "https://github.com/pytorch/pytorch/pull/6100#discussion_r177948162", "pull_request_url": "https://api.github.com/repos/pytorch/pytorch/pulls/6100", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/177948162"}, "html": {"href": "https://github.com/pytorch/pytorch/pull/6100#discussion_r177948162"}, "pull_request": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/6100"}}, "body_html": "<p>ahh thanks it's been so long :)</p>", "body_text": "ahh thanks it's been so long :)", "in_reply_to_id": 177947950}