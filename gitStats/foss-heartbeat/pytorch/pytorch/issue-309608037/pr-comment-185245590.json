{"url": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/185245590", "pull_request_review_id": 116595067, "id": 185245590, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4NTI0NTU5MA==", "diff_hunk": "@@ -0,0 +1,126 @@\n+#include \"ATen/ATen.h\"\n+#include \"ATen/CPUApplyUtils.h\"\n+#include \"ATen/Dispatch.h\"\n+#include \"ATen/ExpandUtils.h\"\n+#include \"ATen/NativeFunctions.h\"\n+\n+#include \"ATen/native/LinearAlgebraUtils.h\"\n+#include \"ATen/native/Gesv.h\"\n+\n+#include \"TH.h\"  // for USE_LAPACK\n+\n+#include <vector>\n+\n+#ifdef USE_LAPACK\n+extern \"C\" void dgesv_(\n+    int* n, int* nrhs, double* a, int* lda,\n+    int *ipiv, double* b, int* ldb, int* info);\n+extern \"C\" void sgesv_(\n+    int* n, int* nrhs, float* a, int* lda,\n+    int* ipiv, float* b, int* ldb, int* info);\n+#endif\n+\n+namespace at { namespace native {\n+\n+template<class real>\n+void lapackGesv(\n+    int n, int nrhs, real* a, int lda, int* ipiv,\n+    real* b, int ldb, int* info) {\n+  AT_ERROR(\"gesv only takes float or double Tensors\");\n+}\n+\n+#ifdef USE_LAPACK\n+template<> void lapackGesv<float>(\n+    int n, int nrhs, float* a, int lda, int* ipiv,\n+    float* b, int ldb, int* info) {\n+  sgesv_(&n, &nrhs, a, &lda, ipiv, b, &ldb, info);\n+}\n+\n+template<> void lapackGesv<double>(\n+    int n, int nrhs, double* a, int lda, int* ipiv,\n+    double* b, int ldb, int* info) {\n+  dgesv_(&n, &nrhs, a, &lda, ipiv, b, &ldb, info);\n+}\n+#endif\n+\n+template <typename real>\n+static void applyGesv(Tensor& b, Tensor& A, std::vector<int64_t> infos) {\n+#ifndef USE_LAPACK\n+  AT_ERROR(\"gesv: LAPACK library not found in compilation\");\n+#endif\n+  real* A_data = (real*)A.data_ptr();", "path": "aten/src/ATen/native/Gesv.cpp", "position": null, "original_position": 51, "commit_id": "fabd77594df5a7e4c4ceca8bb6fd62f036f3b7ff", "original_commit_id": "6f6d95e086aef6006d08933e9a27378cb9d0ced4", "user": {"login": "SsnL", "id": 5674597, "node_id": "MDQ6VXNlcjU2NzQ1OTc=", "avatar_url": "https://avatars2.githubusercontent.com/u/5674597?v=4", "gravatar_id": "", "url": "https://api.github.com/users/SsnL", "html_url": "https://github.com/SsnL", "followers_url": "https://api.github.com/users/SsnL/followers", "following_url": "https://api.github.com/users/SsnL/following{/other_user}", "gists_url": "https://api.github.com/users/SsnL/gists{/gist_id}", "starred_url": "https://api.github.com/users/SsnL/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/SsnL/subscriptions", "organizations_url": "https://api.github.com/users/SsnL/orgs", "repos_url": "https://api.github.com/users/SsnL/repos", "events_url": "https://api.github.com/users/SsnL/events{/privacy}", "received_events_url": "https://api.github.com/users/SsnL/received_events", "type": "User", "site_admin": false}, "body": "Yes, thanks!", "created_at": "2018-05-01T15:15:00Z", "updated_at": "2018-11-23T15:43:29Z", "html_url": "https://github.com/pytorch/pytorch/pull/6100#discussion_r185245590", "pull_request_url": "https://api.github.com/repos/pytorch/pytorch/pulls/6100", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/185245590"}, "html": {"href": "https://github.com/pytorch/pytorch/pull/6100#discussion_r185245590"}, "pull_request": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/6100"}}, "body_html": "<p>Yes, thanks!</p>", "body_text": "Yes, thanks!", "in_reply_to_id": 185239023}