{"url": "https://api.github.com/repos/pytorch/pytorch/issues/comments/385025238", "html_url": "https://github.com/pytorch/pytorch/pull/6100#issuecomment-385025238", "issue_url": "https://api.github.com/repos/pytorch/pytorch/issues/6100", "id": 385025238, "node_id": "MDEyOklzc3VlQ29tbWVudDM4NTAyNTIzOA==", "user": {"login": "zou3519", "id": 5652049, "node_id": "MDQ6VXNlcjU2NTIwNDk=", "avatar_url": "https://avatars3.githubusercontent.com/u/5652049?v=4", "gravatar_id": "", "url": "https://api.github.com/users/zou3519", "html_url": "https://github.com/zou3519", "followers_url": "https://api.github.com/users/zou3519/followers", "following_url": "https://api.github.com/users/zou3519/following{/other_user}", "gists_url": "https://api.github.com/users/zou3519/gists{/gist_id}", "starred_url": "https://api.github.com/users/zou3519/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/zou3519/subscriptions", "organizations_url": "https://api.github.com/users/zou3519/orgs", "repos_url": "https://api.github.com/users/zou3519/repos", "events_url": "https://api.github.com/users/zou3519/events{/privacy}", "received_events_url": "https://api.github.com/users/zou3519/received_events", "type": "User", "site_admin": false}, "created_at": "2018-04-27T16:37:18Z", "updated_at": "2018-04-27T16:37:18Z", "author_association": "CONTRIBUTOR", "body_html": "<p><a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=5674597\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/SsnL\">@SsnL</a> could I get another review on this please? I've addressed all the previous comments. IIRC, your last pending comment was that we should delete the TH gesv and move it to ATen as well (because the batched gesv does the TH gesv in a loop). Could we leave that for a future PR? (I'll open another issue for it). It's much more difficult to implement because of the following:</p>\n<ul>\n<li>the single version of gesv takes an _out keyword. Implementing that efficiently (or even just as efficiently as in TH) is going to take a lot of refactoring, especially because many of the ATen functions are designed without an <code>out</code> keyword in mind.</li>\n</ul>\n<p>I don't think it's worth the marginal benefit to deduplicate our gesv code right now, especially since users have been requesting batched gesv for a while.</p>", "body_text": "@SsnL could I get another review on this please? I've addressed all the previous comments. IIRC, your last pending comment was that we should delete the TH gesv and move it to ATen as well (because the batched gesv does the TH gesv in a loop). Could we leave that for a future PR? (I'll open another issue for it). It's much more difficult to implement because of the following:\n\nthe single version of gesv takes an _out keyword. Implementing that efficiently (or even just as efficiently as in TH) is going to take a lot of refactoring, especially because many of the ATen functions are designed without an out keyword in mind.\n\nI don't think it's worth the marginal benefit to deduplicate our gesv code right now, especially since users have been requesting batched gesv for a while.", "body": "@ssnl could I get another review on this please? I've addressed all the previous comments. IIRC, your last pending comment was that we should delete the TH gesv and move it to ATen as well (because the batched gesv does the TH gesv in a loop). Could we leave that for a future PR? (I'll open another issue for it). It's much more difficult to implement because of the following:\r\n\r\n- the single version of gesv takes an _out keyword. Implementing that efficiently (or even just as efficiently as in TH) is going to take a lot of refactoring, especially because many of the ATen functions are designed without an `out` keyword in mind.\r\n\r\nI don't think it's worth the marginal benefit to deduplicate our gesv code right now, especially since users have been requesting batched gesv for a while."}