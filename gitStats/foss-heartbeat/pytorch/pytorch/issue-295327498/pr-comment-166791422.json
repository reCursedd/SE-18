{"url": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/166791422", "pull_request_review_id": 94906614, "id": 166791422, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE2Njc5MTQyMg==", "diff_hunk": "@@ -1,46 +1,68 @@\n #pragma once\n \n-#include <mutex>\n-#include <memory>\n-#include <functional>\n-#include <ATen/ATen.h>\n-\n-#include \"torch/csrc/jit/tracer_state.h\"\n-#include \"torch/csrc/autograd/variable.h\"\n #include \"torch/csrc/autograd/variable_version.h\"\n-#include \"torch/csrc/Types.h\"\n \n-namespace torch { namespace autograd {\n+#include <ATen/Tensor.h>\n+\n+#include <cstdint>\n+#include <list>\n+#include <memory>\n \n+namespace torch {\n+namespace autograd {\n+class Variable;\n struct Function;\n+} // namespace autograd\n+namespace jit { namespace tracer {\n+struct ValueTracingStateElem;\n+using ValueTracingState = std::list<ValueTracingStateElem>;\n+}} // namespace jit::tracer\n+} // namespace torch\n \n-extern const char* ERR_BACKWARD_TWICE;\n+namespace torch { namespace autograd {\n \n-struct SavedVariable {\n-  SavedVariable()\n-    : data()\n-    , has_grad_fn(false)\n-    , version()\n-    , requires_grad(false)\n-    , expected_version(-1) {}\n+extern const char* ERR_BACKWARD_TWICE;\n \n+/// A snapshot of a variable at a certain version. A `SavedVariable` stores\n+/// enough information to reconstruct a variable from a certain point in time.\n+class SavedVariable {\n+ public:\n+  SavedVariable() = default;\n   SavedVariable(const Variable& variable, bool is_output);\n+  SavedVariable(SavedVariable&&) = default;\n+  SavedVariable& operator=(SavedVariable&&) = default;\n+\n+  // Must be defined externally to avoid it being inlined by the compiler,\n+  // which would require it to see the definition of ValueTracingState.\n+  ~SavedVariable();", "path": "torch/csrc/autograd/saved_variable.h", "position": null, "original_position": 54, "commit_id": "eba1e177795cddcd1971096dbccdcd81e0dcd773", "original_commit_id": "2770506f74aa5bd4f0a6c4a3dee541a6e8e4250c", "user": {"login": "apaszke", "id": 4583066, "node_id": "MDQ6VXNlcjQ1ODMwNjY=", "avatar_url": "https://avatars3.githubusercontent.com/u/4583066?v=4", "gravatar_id": "", "url": "https://api.github.com/users/apaszke", "html_url": "https://github.com/apaszke", "followers_url": "https://api.github.com/users/apaszke/followers", "following_url": "https://api.github.com/users/apaszke/following{/other_user}", "gists_url": "https://api.github.com/users/apaszke/gists{/gist_id}", "starred_url": "https://api.github.com/users/apaszke/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/apaszke/subscriptions", "organizations_url": "https://api.github.com/users/apaszke/orgs", "repos_url": "https://api.github.com/users/apaszke/repos", "events_url": "https://api.github.com/users/apaszke/events{/privacy}", "received_events_url": "https://api.github.com/users/apaszke/received_events", "type": "User", "site_admin": false}, "body": "Why? It was automatically defined previously and worked fine", "created_at": "2018-02-07T23:33:45Z", "updated_at": "2018-11-23T15:39:19Z", "html_url": "https://github.com/pytorch/pytorch/pull/5127#discussion_r166791422", "pull_request_url": "https://api.github.com/repos/pytorch/pytorch/pulls/5127", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/166791422"}, "html": {"href": "https://github.com/pytorch/pytorch/pull/5127#discussion_r166791422"}, "pull_request": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/5127"}}, "body_html": "<p>Why? It was automatically defined previously and worked fine</p>", "body_text": "Why? It was automatically defined previously and worked fine"}