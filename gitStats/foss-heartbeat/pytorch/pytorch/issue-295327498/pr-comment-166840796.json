{"url": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/166840796", "pull_request_review_id": 94965885, "id": 166840796, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE2Njg0MDc5Ng==", "diff_hunk": "@@ -84,4 +89,23 @@ inline size_t count_variables(Args&&... args) {\n   return CountVariables().apply(std::forward<Args>(args)...).out;\n }\n \n+//===----------------------------------------------------------------------===//\n+//                std::index_sequence shim for C++11\n+//===----------------------------------------------------------------------===//\n+\n+// A container of type-template parameter indices.", "path": "torch/csrc/utils/variadic.h", "position": 20, "original_position": 20, "commit_id": "eba1e177795cddcd1971096dbccdcd81e0dcd773", "original_commit_id": "2770506f74aa5bd4f0a6c4a3dee541a6e8e4250c", "user": {"login": "ezyang", "id": 13564, "node_id": "MDQ6VXNlcjEzNTY0", "avatar_url": "https://avatars0.githubusercontent.com/u/13564?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ezyang", "html_url": "https://github.com/ezyang", "followers_url": "https://api.github.com/users/ezyang/followers", "following_url": "https://api.github.com/users/ezyang/following{/other_user}", "gists_url": "https://api.github.com/users/ezyang/gists{/gist_id}", "starred_url": "https://api.github.com/users/ezyang/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ezyang/subscriptions", "organizations_url": "https://api.github.com/users/ezyang/orgs", "repos_url": "https://api.github.com/users/ezyang/repos", "events_url": "https://api.github.com/users/ezyang/events{/privacy}", "received_events_url": "https://api.github.com/users/ezyang/received_events", "type": "User", "site_admin": false}, "body": "Yes, I ended up implementing tuple recursion manually for `TuplePacker`.\r\n\r\nCurious about a few things: (1) did this code come from somewhere or was developed from first principles; (2) how does it compare to the C++14 integer sequence, is it exactly compatible but under a different name, or is there porting involved?", "created_at": "2018-02-08T06:16:34Z", "updated_at": "2018-11-23T15:39:22Z", "html_url": "https://github.com/pytorch/pytorch/pull/5127#discussion_r166840796", "pull_request_url": "https://api.github.com/repos/pytorch/pytorch/pulls/5127", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/166840796"}, "html": {"href": "https://github.com/pytorch/pytorch/pull/5127#discussion_r166840796"}, "pull_request": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/5127"}}, "body_html": "<p>Yes, I ended up implementing tuple recursion manually for <code>TuplePacker</code>.</p>\n<p>Curious about a few things: (1) did this code come from somewhere or was developed from first principles; (2) how does it compare to the C++14 integer sequence, is it exactly compatible but under a different name, or is there porting involved?</p>", "body_text": "Yes, I ended up implementing tuple recursion manually for TuplePacker.\nCurious about a few things: (1) did this code come from somewhere or was developed from first principles; (2) how does it compare to the C++14 integer sequence, is it exactly compatible but under a different name, or is there porting involved?", "in_reply_to_id": 166790528}