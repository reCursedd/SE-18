{"url": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/167534156", "pull_request_review_id": 95763349, "id": 167534156, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE2NzUzNDE1Ng==", "diff_hunk": "@@ -1,49 +1,61 @@\n #include \"torch/csrc/autograd/saved_variable.h\"\n \n #include \"torch/csrc/autograd/function.h\"\n+#include \"torch/csrc/autograd/variable.h\"\n+#include \"torch/csrc/autograd/edge.h\"\n+#include \"torch/csrc/jit/tracer_state.h\"\n \n-using namespace at;\n+#include <ATen/Tensor.h>\n \n-namespace torch { namespace autograd {\n+#include <cstdint>\n+#include <list>\n+#include <memory>\n \n-SavedVariable::SavedVariable(const Variable& variable, bool is_output)\n-  : SavedVariable() {\n+namespace torch {\n+namespace autograd {\n+\n+SavedVariable::SavedVariable(const Variable& variable, bool is_output) {\n   if (!variable.defined()) {\n     return;\n   }\n-  data = variable.data();\n-  requires_grad = variable.requires_grad();\n-  expected_version = variable.current_version();\n-  version = variable.get()->version_counter.save();\n-  has_grad_fn = !variable.is_leaf();\n-  output_nr = variable.output_nr();\n-  if (!has_grad_fn) {\n-    grad_accumulator = variable.grad_accumulator();\n+  was_default_constructed_ = false;\n+\n+  data_ = variable.data();\n+  requires_grad_ = variable.requires_grad();\n+  version_counter_ = variable.version_counter();\n+  saved_version_ = version_counter_.current_version();\n+  has_grad_fn_ = !variable.is_leaf();\n+  output_nr_ = variable.output_nr();", "path": "torch/csrc/autograd/saved_variable.cpp", "position": null, "original_position": 40, "commit_id": "eba1e177795cddcd1971096dbccdcd81e0dcd773", "original_commit_id": "b2eb9e59dd9969c5c8c9d21036652c3e0a281de9", "user": {"login": "apaszke", "id": 4583066, "node_id": "MDQ6VXNlcjQ1ODMwNjY=", "avatar_url": "https://avatars3.githubusercontent.com/u/4583066?v=4", "gravatar_id": "", "url": "https://api.github.com/users/apaszke", "html_url": "https://github.com/apaszke", "followers_url": "https://api.github.com/users/apaszke/followers", "following_url": "https://api.github.com/users/apaszke/following{/other_user}", "gists_url": "https://api.github.com/users/apaszke/gists{/gist_id}", "starred_url": "https://api.github.com/users/apaszke/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/apaszke/subscriptions", "organizations_url": "https://api.github.com/users/apaszke/orgs", "repos_url": "https://api.github.com/users/apaszke/repos", "events_url": "https://api.github.com/users/apaszke/events{/privacy}", "received_events_url": "https://api.github.com/users/apaszke/received_events", "type": "User", "site_admin": false}, "body": "Isn't it better to use member initializer lists to avoid triggering the default constructor?", "created_at": "2018-02-12T11:57:43Z", "updated_at": "2018-11-23T15:39:28Z", "html_url": "https://github.com/pytorch/pytorch/pull/5127#discussion_r167534156", "pull_request_url": "https://api.github.com/repos/pytorch/pytorch/pulls/5127", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/167534156"}, "html": {"href": "https://github.com/pytorch/pytorch/pull/5127#discussion_r167534156"}, "pull_request": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/5127"}}, "body_html": "<p>Isn't it better to use member initializer lists to avoid triggering the default constructor?</p>", "body_text": "Isn't it better to use member initializer lists to avoid triggering the default constructor?"}