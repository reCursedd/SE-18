{"url": "https://api.github.com/repos/pytorch/pytorch/issues/comments/364289153", "html_url": "https://github.com/pytorch/pytorch/pull/5127#issuecomment-364289153", "issue_url": "https://api.github.com/repos/pytorch/pytorch/issues/5127", "id": 364289153, "node_id": "MDEyOklzc3VlQ29tbWVudDM2NDI4OTE1Mw==", "user": {"login": "goldsborough", "id": 6429851, "node_id": "MDQ6VXNlcjY0Mjk4NTE=", "avatar_url": "https://avatars3.githubusercontent.com/u/6429851?v=4", "gravatar_id": "", "url": "https://api.github.com/users/goldsborough", "html_url": "https://github.com/goldsborough", "followers_url": "https://api.github.com/users/goldsborough/followers", "following_url": "https://api.github.com/users/goldsborough/following{/other_user}", "gists_url": "https://api.github.com/users/goldsborough/gists{/gist_id}", "starred_url": "https://api.github.com/users/goldsborough/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/goldsborough/subscriptions", "organizations_url": "https://api.github.com/users/goldsborough/orgs", "repos_url": "https://api.github.com/users/goldsborough/repos", "events_url": "https://api.github.com/users/goldsborough/events{/privacy}", "received_events_url": "https://api.github.com/users/goldsborough/received_events", "type": "User", "site_admin": false}, "created_at": "2018-02-08T23:54:46Z", "updated_at": "2018-02-08T23:54:46Z", "author_association": "CONTRIBUTOR", "body_html": "<p>Summary of updates and who this should be interesting for:</p>\n<ul>\n<li>Made <code>Variable</code> constructors into free functions <a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=4583066\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/apaszke\">@apaszke</a>  <a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=13564\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/ezyang\">@ezyang</a></li>\n<li>Implemented <code>as_variable_ref</code> to downcast <code>Tensor</code> to <code>Variable</code>, with a safe mode if <code>DEBUG</code> is defined <a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=13564\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/ezyang\">@ezyang</a></li>\n<li>Changed <code>grad_fn_ptr()</code> to <code>grad_fn_unsafe()</code> <a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=4583066\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/apaszke\">@apaszke</a></li>\n<li>Made the <code>set_type</code> hack less hacky by (1) Making the <code>type_</code> field protected in <code>TensorImpl</code> (<a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=370202\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/zdevito\">@zdevito</a> says this is fine) and makes sense anyway and (2) prefixing <code>set_type</code> with <code>temporary_hack_</code>, <a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=13564\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/ezyang\">@ezyang</a> <a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=4583066\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/apaszke\">@apaszke</a></li>\n<li>Slightly unrelated to other things: removed the <code>ir.h</code> include from <code>tracer_state.h</code>, so that future modifications to the JIT will not rebuild <code>variable</code> and its descendants (70 files or so) <a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=370202\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/zdevito\">@zdevito</a></li>\n</ul>", "body_text": "Summary of updates and who this should be interesting for:\n\nMade Variable constructors into free functions @apaszke  @ezyang\nImplemented as_variable_ref to downcast Tensor to Variable, with a safe mode if DEBUG is defined @ezyang\nChanged grad_fn_ptr() to grad_fn_unsafe() @apaszke\nMade the set_type hack less hacky by (1) Making the type_ field protected in TensorImpl (@zdevito says this is fine) and makes sense anyway and (2) prefixing set_type with temporary_hack_, @ezyang @apaszke\nSlightly unrelated to other things: removed the ir.h include from tracer_state.h, so that future modifications to the JIT will not rebuild variable and its descendants (70 files or so) @zdevito", "body": "Summary of updates and who this should be interesting for:\r\n- Made `Variable` constructors into free functions @apaszke  @ezyang \r\n- Implemented `as_variable_ref` to downcast `Tensor` to `Variable`, with a safe mode if `DEBUG` is defined @ezyang \r\n- Changed `grad_fn_ptr()` to `grad_fn_unsafe()` @apaszke \r\n- Made the `set_type` hack less hacky by (1) Making the `type_` field protected in `TensorImpl` (@zdevito says this is fine) and makes sense anyway and (2) prefixing `set_type` with `temporary_hack_`, @ezyang @apaszke \r\n- Slightly unrelated to other things: removed the `ir.h` include from `tracer_state.h`, so that future modifications to the JIT will not rebuild `variable` and its descendants (70 files or so) @zdevito "}