{"url": "https://api.github.com/repos/pytorch/pytorch/issues/comments/298922855", "html_url": "https://github.com/pytorch/pytorch/pull/1453#issuecomment-298922855", "issue_url": "https://api.github.com/repos/pytorch/pytorch/issues/1453", "id": 298922855, "node_id": "MDEyOklzc3VlQ29tbWVudDI5ODkyMjg1NQ==", "user": {"login": "GBLin5566", "id": 7339902, "node_id": "MDQ6VXNlcjczMzk5MDI=", "avatar_url": "https://avatars2.githubusercontent.com/u/7339902?v=4", "gravatar_id": "", "url": "https://api.github.com/users/GBLin5566", "html_url": "https://github.com/GBLin5566", "followers_url": "https://api.github.com/users/GBLin5566/followers", "following_url": "https://api.github.com/users/GBLin5566/following{/other_user}", "gists_url": "https://api.github.com/users/GBLin5566/gists{/gist_id}", "starred_url": "https://api.github.com/users/GBLin5566/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/GBLin5566/subscriptions", "organizations_url": "https://api.github.com/users/GBLin5566/orgs", "repos_url": "https://api.github.com/users/GBLin5566/repos", "events_url": "https://api.github.com/users/GBLin5566/events{/privacy}", "received_events_url": "https://api.github.com/users/GBLin5566/received_events", "type": "User", "site_admin": false}, "created_at": "2017-05-03T14:12:22Z", "updated_at": "2017-05-03T14:12:22Z", "author_association": "CONTRIBUTOR", "body_html": "<p><a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=4583066\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/apaszke\">@apaszke</a> thanks for commenting the code, fix it already.<br>\nAbout the benchmark, I make a simple performance test on my (poor) mac air.<br>\nI fix the seed and make a huge matrix init.<br>\nResult:</p>\n<ul>\n<li>QR factorization<br>\n('orthogonal ', (1000L, 10000L), ' done in ', 3.1053740978240967, 'seconds')<br>\n('orthogonal ', (10000L, 1000L), ' done in ', 2.580883026123047, 'seconds')<br>\n('orthogonal ', (3000L, 3000L), ' done in ', 4.194360017776489, 'seconds')</li>\n<li>SVD<br>\n('orthogonal ', (1000L, 10000L), ' done in ', 10.98503303527832, 'seconds')<br>\n('orthogonal ', (10000L, 1000L), ' done in ', 8.293554067611694, 'seconds')<br>\n('orthogonal ', (3000L, 3000L), ' done in ', 210.0512809753418, 'seconds')</li>\n</ul>\n<p>As the result. when n is huge (3000 in this case), the running time of SVD will become very scary and QR factorization will be fine. And I think it can be proved in theory too.<br>\n(comparing - n^3 / 3 and n^3 in QR and SVD)</p>", "body_text": "@apaszke thanks for commenting the code, fix it already.\nAbout the benchmark, I make a simple performance test on my (poor) mac air.\nI fix the seed and make a huge matrix init.\nResult:\n\nQR factorization\n('orthogonal ', (1000L, 10000L), ' done in ', 3.1053740978240967, 'seconds')\n('orthogonal ', (10000L, 1000L), ' done in ', 2.580883026123047, 'seconds')\n('orthogonal ', (3000L, 3000L), ' done in ', 4.194360017776489, 'seconds')\nSVD\n('orthogonal ', (1000L, 10000L), ' done in ', 10.98503303527832, 'seconds')\n('orthogonal ', (10000L, 1000L), ' done in ', 8.293554067611694, 'seconds')\n('orthogonal ', (3000L, 3000L), ' done in ', 210.0512809753418, 'seconds')\n\nAs the result. when n is huge (3000 in this case), the running time of SVD will become very scary and QR factorization will be fine. And I think it can be proved in theory too.\n(comparing - n^3 / 3 and n^3 in QR and SVD)", "body": "@apaszke thanks for commenting the code, fix it already.\r\nAbout the benchmark, I make a simple performance test on my (poor) mac air.\r\nI fix the seed and make a huge matrix init.\r\nResult:\r\n- QR factorization\r\n('orthogonal ', (1000L, 10000L), ' done in ', 3.1053740978240967, 'seconds')\r\n('orthogonal ', (10000L, 1000L), ' done in ', 2.580883026123047, 'seconds')\r\n('orthogonal ', (3000L, 3000L), ' done in ', 4.194360017776489, 'seconds')\r\n- SVD\r\n('orthogonal ', (1000L, 10000L), ' done in ', 10.98503303527832, 'seconds')\r\n('orthogonal ', (10000L, 1000L), ' done in ', 8.293554067611694, 'seconds')\r\n('orthogonal ', (3000L, 3000L), ' done in ', 210.0512809753418, 'seconds')\r\n\r\nAs the result. when n is huge (3000 in this case), the running time of SVD will become very scary and QR factorization will be fine. And I think it can be proved in theory too.\r\n(comparing - n^3 / 3 and n^3 in QR and SVD)"}