{"url": "https://api.github.com/repos/pytorch/pytorch/issues/comments/298785782", "html_url": "https://github.com/pytorch/pytorch/pull/1439#issuecomment-298785782", "issue_url": "https://api.github.com/repos/pytorch/pytorch/issues/1439", "id": 298785782, "node_id": "MDEyOklzc3VlQ29tbWVudDI5ODc4NTc4Mg==", "user": {"login": "fmassa", "id": 9110200, "node_id": "MDQ6VXNlcjkxMTAyMDA=", "avatar_url": "https://avatars2.githubusercontent.com/u/9110200?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fmassa", "html_url": "https://github.com/fmassa", "followers_url": "https://api.github.com/users/fmassa/followers", "following_url": "https://api.github.com/users/fmassa/following{/other_user}", "gists_url": "https://api.github.com/users/fmassa/gists{/gist_id}", "starred_url": "https://api.github.com/users/fmassa/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fmassa/subscriptions", "organizations_url": "https://api.github.com/users/fmassa/orgs", "repos_url": "https://api.github.com/users/fmassa/repos", "events_url": "https://api.github.com/users/fmassa/events{/privacy}", "received_events_url": "https://api.github.com/users/fmassa/received_events", "type": "User", "site_admin": false}, "created_at": "2017-05-02T23:06:19Z", "updated_at": "2017-05-02T23:06:19Z", "author_association": "MEMBER", "body_html": "<p>Did we consider using the implementation of <code>cumsum</code> to compute <code>cumprod</code>? We could writesomething like</p>\n<div class=\"highlight highlight-source-python\"><pre><span class=\"pl-k\">def</span> <span class=\"pl-en\">cumprod</span>(<span class=\"pl-smi\">x</span>):\n    <span class=\"pl-k\">return</span> exp(cumsum(log(x)))</pre></div>\n<p>Maybe it's very unstable computing it like that?</p>", "body_text": "Did we consider using the implementation of cumsum to compute cumprod? We could writesomething like\ndef cumprod(x):\n    return exp(cumsum(log(x)))\nMaybe it's very unstable computing it like that?", "body": "Did we consider using the implementation of `cumsum` to compute `cumprod`? We could writesomething like\r\n```python\r\ndef cumprod(x):\r\n    return exp(cumsum(log(x)))\r\n```\r\nMaybe it's very unstable computing it like that?"}