{"url": "https://api.github.com/repos/pytorch/pytorch/issues/14130", "repository_url": "https://api.github.com/repos/pytorch/pytorch", "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/14130/labels{/name}", "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/14130/comments", "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/14130/events", "html_url": "https://github.com/pytorch/pytorch/pull/14130", "id": 381799505, "node_id": "MDExOlB1bGxSZXF1ZXN0MjMxNjg1ODcy", "number": 14130, "title": "Allow building libraries with setuptools that dont have abi suffix", "user": {"login": "goldsborough", "id": 6429851, "node_id": "MDQ6VXNlcjY0Mjk4NTE=", "avatar_url": "https://avatars3.githubusercontent.com/u/6429851?v=4", "gravatar_id": "", "url": "https://api.github.com/users/goldsborough", "html_url": "https://github.com/goldsborough", "followers_url": "https://api.github.com/users/goldsborough/followers", "following_url": "https://api.github.com/users/goldsborough/following{/other_user}", "gists_url": "https://api.github.com/users/goldsborough/gists{/gist_id}", "starred_url": "https://api.github.com/users/goldsborough/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/goldsborough/subscriptions", "organizations_url": "https://api.github.com/users/goldsborough/orgs", "repos_url": "https://api.github.com/users/goldsborough/repos", "events_url": "https://api.github.com/users/goldsborough/events{/privacy}", "received_events_url": "https://api.github.com/users/goldsborough/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-11-16T23:47:38Z", "updated_at": "2018-11-17T05:39:50Z", "closed_at": null, "author_association": "CONTRIBUTOR", "pull_request": {"url": "https://api.github.com/repos/pytorch/pytorch/pulls/14130", "html_url": "https://github.com/pytorch/pytorch/pull/14130", "diff_url": "https://github.com/pytorch/pytorch/pull/14130.diff", "patch_url": "https://github.com/pytorch/pytorch/pull/14130.patch"}, "body_html": "<p>When using <code>setuptools</code> to build a Python extension, setuptools will automatically add an ABI suffix like <code>cpython-37m-x86_64-linux-gnu</code> to the shared library name when using Python 3. This is required for extensions meant to be imported as Python modules. When we use setuptools to build shared libraries not meant as Python modules, for example libraries that define and register TorchScript custom ops, having your library called <code>my_ops.cpython-37m-x86_64-linux-gnu.so</code> is a bit annoying compared to just <code>my_ops.so</code>, especially since you have to reference the library name when loading it with <code>torch.ops.load_library</code> in Python.</p>\n<p>This PR fixes this by adding a <code>with_options</code> class method to the <code>torch.utils.cpp_extension.BuildExtension</code> which allows configuring the <code>BuildExtension</code>. In this case, the first option we add is <code>no_python_abi_suffix</code>, which we then use in <code>get_ext_filename</code> (override from <code>setuptools.build_ext</code>) to throw away the ABI suffix.</p>\n<p>I've added a test <code>setup.py</code> in a <code>no_python_abi_suffix_test</code> folder.</p>\n<p><a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=20787943\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/t-vi\">@t-vi</a> <a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=9110200\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/fmassa\">@fmassa</a> <a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=1310570\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/soumith\">@soumith</a></p>", "body_text": "When using setuptools to build a Python extension, setuptools will automatically add an ABI suffix like cpython-37m-x86_64-linux-gnu to the shared library name when using Python 3. This is required for extensions meant to be imported as Python modules. When we use setuptools to build shared libraries not meant as Python modules, for example libraries that define and register TorchScript custom ops, having your library called my_ops.cpython-37m-x86_64-linux-gnu.so is a bit annoying compared to just my_ops.so, especially since you have to reference the library name when loading it with torch.ops.load_library in Python.\nThis PR fixes this by adding a with_options class method to the torch.utils.cpp_extension.BuildExtension which allows configuring the BuildExtension. In this case, the first option we add is no_python_abi_suffix, which we then use in get_ext_filename (override from setuptools.build_ext) to throw away the ABI suffix.\nI've added a test setup.py in a no_python_abi_suffix_test folder.\n@t-vi @fmassa @soumith", "body": "When using `setuptools` to build a Python extension, setuptools will automatically add an ABI suffix like `cpython-37m-x86_64-linux-gnu` to the shared library name when using Python 3. This is required for extensions meant to be imported as Python modules. When we use setuptools to build shared libraries not meant as Python modules, for example libraries that define and register TorchScript custom ops, having your library called `my_ops.cpython-37m-x86_64-linux-gnu.so` is a bit annoying compared to just `my_ops.so`, especially since you have to reference the library name when loading it with `torch.ops.load_library` in Python.\r\n\r\nThis PR fixes this by adding a `with_options` class method to the `torch.utils.cpp_extension.BuildExtension` which allows configuring the `BuildExtension`. In this case, the first option we add is `no_python_abi_suffix`, which we then use in `get_ext_filename` (override from `setuptools.build_ext`) to throw away the ABI suffix.\r\n\r\nI've added a test `setup.py` in a `no_python_abi_suffix_test` folder.\r\n\r\n@t-vi @fmassa @soumith "}