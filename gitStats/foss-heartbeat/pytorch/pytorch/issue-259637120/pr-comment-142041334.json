{"url": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/142041334", "pull_request_review_id": 66347772, "id": 142041334, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE0MjA0MTMzNA==", "diff_hunk": "@@ -807,13 +849,32 @@ static tensor_pair compute_grad_params(\n             params.padding[1], params.padding[0],\n             params.dilation[1], params.dilation[0], 1.0); goto done;\n       } else {\n-        /* CPU implementation has specialized MM kernels\n-           for non-dilated case here */\n-        at::SpatialConvolutionMM_accGradParameters(\n-            input, grad_output, grad_weight, grad_bias, columns, ones,\n-            kernel_size[1], kernel_size[0],\n-            params.stride[1], params.stride[0],\n-            params.padding[1], params.padding[0], 1.0); goto done;\n+        if (params.use_nnpack(input)) {\n+#ifdef WITH_NNPACK\n+          // NNPACK does not have a bias gradient calculation, so we split\n+          // into two calls here if necessary\n+          nnpack::SpatialConvolution_accGradWeight(\n+              input, grad_output, grad_weight,\n+              kernel_size[1], kernel_size[0],\n+              params.padding[1], params.padding[0]);\n+\n+          if (bias.defined() && params.should_compute_output(2)) {\n+            // grad_output is in N, C, H, W, we re-shape and make contiguous\n+            at::Tensor ones = grad_output.type().ones(input.size(0) * grad_output.size(2) * grad_output.size(3));\n+            at::Tensor reshaped = grad_output.transpose(1, 3).contiguous().view({-1, ones.numel()});\n+            grad_bias.addmv_(1.0, 1.0, reshaped, ones);", "path": "torch/csrc/autograd/functions/convolution.cpp", "position": 150, "original_position": 146, "commit_id": "917f9b819b09ad90a2f46e1243a6ad6dfd2d37d7", "original_commit_id": "cdf73443cea3425f7d054d4245da9c9b039d1180", "user": {"login": "apaszke", "id": 4583066, "node_id": "MDQ6VXNlcjQ1ODMwNjY=", "avatar_url": "https://avatars3.githubusercontent.com/u/4583066?v=4", "gravatar_id": "", "url": "https://api.github.com/users/apaszke", "html_url": "https://github.com/apaszke", "followers_url": "https://api.github.com/users/apaszke/followers", "following_url": "https://api.github.com/users/apaszke/following{/other_user}", "gists_url": "https://api.github.com/users/apaszke/gists{/gist_id}", "starred_url": "https://api.github.com/users/apaszke/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/apaszke/subscriptions", "organizations_url": "https://api.github.com/users/apaszke/orgs", "repos_url": "https://api.github.com/users/apaszke/repos", "events_url": "https://api.github.com/users/apaszke/events{/privacy}", "received_events_url": "https://api.github.com/users/apaszke/received_events", "type": "User", "site_admin": false}, "body": "Did you include the cost of allocating `ones` in here?", "created_at": "2017-10-01T21:36:43Z", "updated_at": "2018-11-23T15:34:54Z", "html_url": "https://github.com/pytorch/pytorch/pull/2826#discussion_r142041334", "pull_request_url": "https://api.github.com/repos/pytorch/pytorch/pulls/2826", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/142041334"}, "html": {"href": "https://github.com/pytorch/pytorch/pull/2826#discussion_r142041334"}, "pull_request": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/2826"}}, "body_html": "<p>Did you include the cost of allocating <code>ones</code> in here?</p>", "body_text": "Did you include the cost of allocating ones in here?", "in_reply_to_id": 141913783}