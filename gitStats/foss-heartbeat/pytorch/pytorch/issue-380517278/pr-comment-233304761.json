{"url": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/233304761", "pull_request_review_id": 174684997, "id": 233304761, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIzMzMwNDc2MQ==", "diff_hunk": "@@ -352,24 +353,33 @@ static void SparseSegmentsFillerHelper(\n       .Max(shapes[value_index].front() * 2)\n       .Dist(FD_UNIFORM);\n   (*fillers)[segment_index].SparseSegments(shapes[value_index].front() - 1);\n+  if (weight_index < fillers->size()) {\n+    (*fillers)[weight_index]\n+        .Min(0)\n+        .Max(shapes[weight_index].front() - 1)\n+        .Dist(FD_UNIFORM);\n+  }\n }\n \n // The helper is build sparse input with values, keys, and lengths; e.g.:\n // values  = [1, 2, 3, 2, 4, 6, 7, 3, 6]\n // keys    = [0, 1, 4, 0, 1, 2, 5, 1, 2]\n+// weights = [1, 2, 3, 4, 5, 6, 7, 8, 9]\n //            \\_____/  \\________/  \\__/\n // lengths =    [3,        4,       2]\n-OpSchema& OpSchema::ValueKeyLengthInputFillers(\n+OpSchema& OpSchema::WeightedValueKeyLengthInputFillers(", "path": "caffe2/core/operator_schema.cc", "position": 47, "original_position": 27, "commit_id": "c357fc72efba96d478e43eabcdc5cb561470ae91", "original_commit_id": "993006cdb70922e21dc4be93dc341d7001084a9a", "user": {"login": "highker", "id": 2192913, "node_id": "MDQ6VXNlcjIxOTI5MTM=", "avatar_url": "https://avatars0.githubusercontent.com/u/2192913?v=4", "gravatar_id": "", "url": "https://api.github.com/users/highker", "html_url": "https://github.com/highker", "followers_url": "https://api.github.com/users/highker/followers", "following_url": "https://api.github.com/users/highker/following{/other_user}", "gists_url": "https://api.github.com/users/highker/gists{/gist_id}", "starred_url": "https://api.github.com/users/highker/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/highker/subscriptions", "organizations_url": "https://api.github.com/users/highker/orgs", "repos_url": "https://api.github.com/users/highker/repos", "events_url": "https://api.github.com/users/highker/events{/privacy}", "received_events_url": "https://api.github.com/users/highker/received_events", "type": "User", "site_admin": false}, "body": "If we separate the interfaces, `WeightedValueKeyLengthInputFillers` would be:\r\n```lang=c++\r\nWeightedValueKeyLengthInputFillers(...) {\r\n  ValueKeyLengthInputFillers(...);\r\n  // add assertion on weight_index if necessary\r\n  (*fillers)[weight_index]\r\n        .Min(0)\r\n        .Max(shapes[weight_index].front() - 1)\r\n        .Dist(FD_UNIFORM);\r\n} \r\n```", "created_at": "2018-11-14T03:35:15Z", "updated_at": "2018-11-23T15:54:48Z", "html_url": "https://github.com/pytorch/pytorch/pull/13949#discussion_r233304761", "pull_request_url": "https://api.github.com/repos/pytorch/pytorch/pulls/13949", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/233304761"}, "html": {"href": "https://github.com/pytorch/pytorch/pull/13949#discussion_r233304761"}, "pull_request": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/13949"}}, "body_html": "<p>If we separate the interfaces, <code>WeightedValueKeyLengthInputFillers</code> would be:</p>\n<pre lang=\"lang=c++\"><code>WeightedValueKeyLengthInputFillers(...) {\n  ValueKeyLengthInputFillers(...);\n  // add assertion on weight_index if necessary\n  (*fillers)[weight_index]\n        .Min(0)\n        .Max(shapes[weight_index].front() - 1)\n        .Dist(FD_UNIFORM);\n} \n</code></pre>", "body_text": "If we separate the interfaces, WeightedValueKeyLengthInputFillers would be:\nWeightedValueKeyLengthInputFillers(...) {\n  ValueKeyLengthInputFillers(...);\n  // add assertion on weight_index if necessary\n  (*fillers)[weight_index]\n        .Min(0)\n        .Max(shapes[weight_index].front() - 1)\n        .Dist(FD_UNIFORM);\n}"}