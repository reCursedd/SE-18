{"url": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/233311700", "pull_request_review_id": 174694303, "id": 233311700, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIzMzMxMTcwMA==", "diff_hunk": "@@ -41,8 +43,17 @@ class TensorFiller {\n         auto fixed_sum = static_cast<Type>(fixed_sum_);\n         CAFFE_ENFORCE_LE(min * tensor->numel(), fixed_sum);\n         CAFFE_ENFORCE_GE(max * tensor->numel(), fixed_sum);\n-        math::RandFixedSum<Type, Context>(\n-            tensor->numel(), min, max, fixed_sum_, data, context);\n+        auto average = fixed_sum / tensor->numel();", "path": "caffe2/utils/filler.h", "position": null, "original_position": 15, "commit_id": "c357fc72efba96d478e43eabcdc5cb561470ae91", "original_commit_id": "993006cdb70922e21dc4be93dc341d7001084a9a", "user": {"login": "yinghai", "id": 1100089, "node_id": "MDQ6VXNlcjExMDAwODk=", "avatar_url": "https://avatars1.githubusercontent.com/u/1100089?v=4", "gravatar_id": "", "url": "https://api.github.com/users/yinghai", "html_url": "https://github.com/yinghai", "followers_url": "https://api.github.com/users/yinghai/followers", "following_url": "https://api.github.com/users/yinghai/following{/other_user}", "gists_url": "https://api.github.com/users/yinghai/gists{/gist_id}", "starred_url": "https://api.github.com/users/yinghai/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/yinghai/subscriptions", "organizations_url": "https://api.github.com/users/yinghai/orgs", "repos_url": "https://api.github.com/users/yinghai/repos", "events_url": "https://api.github.com/users/yinghai/events{/privacy}", "received_events_url": "https://api.github.com/users/yinghai/received_events", "type": "User", "site_admin": false}, "body": "This is pretty hacky and not working for all the cases. I just want to see how much we can get while keeping the current memoryless filler implementation. I'm getting less and less confident... ", "created_at": "2018-11-14T04:34:18Z", "updated_at": "2018-11-23T15:54:48Z", "html_url": "https://github.com/pytorch/pytorch/pull/13949#discussion_r233311700", "pull_request_url": "https://api.github.com/repos/pytorch/pytorch/pulls/13949", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/233311700"}, "html": {"href": "https://github.com/pytorch/pytorch/pull/13949#discussion_r233311700"}, "pull_request": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/13949"}}, "body_html": "<p>This is pretty hacky and not working for all the cases. I just want to see how much we can get while keeping the current memoryless filler implementation. I'm getting less and less confident...</p>", "body_text": "This is pretty hacky and not working for all the cases. I just want to see how much we can get while keeping the current memoryless filler implementation. I'm getting less and less confident...", "in_reply_to_id": 233305456}