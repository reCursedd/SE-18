{"url": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/233306262", "pull_request_review_id": 174684997, "id": 233306262, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIzMzMwNjI2Mg==", "diff_hunk": "@@ -2321,37 +2321,41 @@ CAFFE2_RAND_UNIFORM_INT(uint64_t);\n // to between a and b.\n // The algorithm is non-trivial given the adjustment would be different towards\n // each value.\n-#define CAFFE2_RAND_FIXED_SUM(T)                                        \\\n-  template <>                                                           \\\n-  C10_EXPORT void RandFixedSum<T, CPUContext>(                          \\\n-      const size_t n,                                                   \\\n-      const T a,                                                        \\\n-      const T b,                                                        \\\n-      const T sum,                                                      \\\n-      T* r,                                                             \\\n-      CPUContext* context) {                                            \\\n-    CAFFE_ENFORCE_GE(a, 0);                                             \\\n-    CAFFE_ENFORCE_GE(sum / (double)n, a);                               \\\n-    CAFFE_ENFORCE_LE(sum / (double)n, b);                               \\\n-    T current_sum = 0;                                                  \\\n-    for (size_t i = 0; i < n - 1; ++i) {                                \\\n-      auto remaining_numbers = n - 1 - i;                               \\\n-      double mean = (sum - current_sum) / remaining_numbers;            \\\n-      double stdev = std::min(mean - a, b - mean);                      \\\n-      std::normal_distribution<double> distribution{mean, stdev / 4.0}; \\\n-      T value = distribution(context->RandGenerator());                 \\\n-      auto remaining_sum = sum - current_sum - value;                   \\\n-      if (value < a || remaining_sum > b * remaining_numbers) {         \\\n-        value = a;                                                      \\\n-      } else if (value > b || remaining_sum < a * remaining_numbers) {  \\\n-        value = b;                                                      \\\n-      }                                                                 \\\n-      r[i] = value;                                                     \\\n-      CAFFE_ENFORCE(a <= value && value <= b);                          \\\n-      current_sum += value;                                             \\\n-    }                                                                   \\\n-    r[n - 1] = sum - current_sum;                                       \\\n-    CAFFE_ENFORCE(a <= r[n - 1] && r[n - 1] <= b);                      \\\n+#define CAFFE2_RAND_FIXED_SUM(T)                                            \\\n+  template <>                                                               \\\n+  C10_EXPORT void RandFixedSum<T, CPUContext>(                              \\\n+      const size_t n,                                                       \\\n+      const T a,                                                            \\\n+      const T b,                                                            \\\n+      const T sum,                                                          \\\n+      T* r,                                                                 \\\n+      CPUContext* context) {                                                \\\n+    CAFFE_ENFORCE_GE(a, 0);                                                 \\\n+    CAFFE_ENFORCE_GE(sum / (double)n, a);                                   \\\n+    CAFFE_ENFORCE_LE(sum / (double)n, b);                                   \\\n+    T current_sum = 0;                                                      \\\n+    T remaining_sum = sum;                                                  \\\n+    for (size_t i = 0; i < n; ++i) {                                        \\\n+      auto remaining_numbers = n - 1 - i;                                   \\\n+      double mean = (sum - current_sum) / (remaining_numbers + 1);          \\\n+      double stdev = std::min(mean - a, b - mean);                          \\\n+      std::normal_distribution<double> distribution{mean, stdev / 4.0};     \\\n+      T value = distribution(context->RandGenerator());                     \\\n+      T remaining_sum_test = remaining_sum - value;                         \\", "path": "caffe2/utils/math_cpu.cc", "position": null, "original_position": 55, "commit_id": "c357fc72efba96d478e43eabcdc5cb561470ae91", "original_commit_id": "993006cdb70922e21dc4be93dc341d7001084a9a", "user": {"login": "highker", "id": 2192913, "node_id": "MDQ6VXNlcjIxOTI5MTM=", "avatar_url": "https://avatars0.githubusercontent.com/u/2192913?v=4", "gravatar_id": "", "url": "https://api.github.com/users/highker", "html_url": "https://github.com/highker", "followers_url": "https://api.github.com/users/highker/followers", "following_url": "https://api.github.com/users/highker/following{/other_user}", "gists_url": "https://api.github.com/users/highker/gists{/gist_id}", "starred_url": "https://api.github.com/users/highker/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/highker/subscriptions", "organizations_url": "https://api.github.com/users/highker/orgs", "repos_url": "https://api.github.com/users/highker/repos", "events_url": "https://api.github.com/users/highker/events{/privacy}", "received_events_url": "https://api.github.com/users/highker/received_events", "type": "User", "site_admin": false}, "body": "Feel free to implement the real random fixed sum alg (https://www.mathworks.com/matlabcentral/fileexchange/9700-random-vectors-with-fixed-sum) lol. I tried a bit and gave up.", "created_at": "2018-11-14T03:46:47Z", "updated_at": "2018-11-23T15:54:48Z", "html_url": "https://github.com/pytorch/pytorch/pull/13949#discussion_r233306262", "pull_request_url": "https://api.github.com/repos/pytorch/pytorch/pulls/13949", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/233306262"}, "html": {"href": "https://github.com/pytorch/pytorch/pull/13949#discussion_r233306262"}, "pull_request": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/13949"}}, "body_html": "<p>Feel free to implement the real random fixed sum alg (<a href=\"https://www.mathworks.com/matlabcentral/fileexchange/9700-random-vectors-with-fixed-sum\" rel=\"nofollow\">https://www.mathworks.com/matlabcentral/fileexchange/9700-random-vectors-with-fixed-sum</a>) lol. I tried a bit and gave up.</p>", "body_text": "Feel free to implement the real random fixed sum alg (https://www.mathworks.com/matlabcentral/fileexchange/9700-random-vectors-with-fixed-sum) lol. I tried a bit and gave up."}