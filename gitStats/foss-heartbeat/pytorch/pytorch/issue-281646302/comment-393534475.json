{"url": "https://api.github.com/repos/pytorch/pytorch/issues/comments/393534475", "html_url": "https://github.com/pytorch/pytorch/issues/4144#issuecomment-393534475", "issue_url": "https://api.github.com/repos/pytorch/pytorch/issues/4144", "id": 393534475, "node_id": "MDEyOklzc3VlQ29tbWVudDM5MzUzNDQ3NQ==", "user": {"login": "morawi", "id": 36924479, "node_id": "MDQ6VXNlcjM2OTI0NDc5", "avatar_url": "https://avatars3.githubusercontent.com/u/36924479?v=4", "gravatar_id": "", "url": "https://api.github.com/users/morawi", "html_url": "https://github.com/morawi", "followers_url": "https://api.github.com/users/morawi/followers", "following_url": "https://api.github.com/users/morawi/following{/other_user}", "gists_url": "https://api.github.com/users/morawi/gists{/gist_id}", "starred_url": "https://api.github.com/users/morawi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/morawi/subscriptions", "organizations_url": "https://api.github.com/users/morawi/orgs", "repos_url": "https://api.github.com/users/morawi/repos", "events_url": "https://api.github.com/users/morawi/events{/privacy}", "received_events_url": "https://api.github.com/users/morawi/received_events", "type": "User", "site_admin": false}, "created_at": "2018-05-31T13:43:58Z", "updated_at": "2018-05-31T13:59:29Z", "author_association": "NONE", "body_html": "<p><a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=1310570\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/soumith\">@soumith</a> totally agree; thus, I have already replaced the -1's with some random numbers (sorry for  not mentioning this) within the range <code>[0, n_classes]</code> , something like:<br>\n<code>train_set.labels = 1+ np.random.randint(n_classes, size=len(train_set.labels), dtype='uint8')</code><br>\nwith n_classes equals 10<br>\nThat did not solve the problem. To enable the run, I have disabled getting the loss, via <code>loss.item()</code>, in both training and testing .</p>", "body_text": "@soumith totally agree; thus, I have already replaced the -1's with some random numbers (sorry for  not mentioning this) within the range [0, n_classes] , something like:\ntrain_set.labels = 1+ np.random.randint(n_classes, size=len(train_set.labels), dtype='uint8')\nwith n_classes equals 10\nThat did not solve the problem. To enable the run, I have disabled getting the loss, via loss.item(), in both training and testing .", "body": "@soumith totally agree; thus, I have already replaced the -1's with some random numbers (sorry for  not mentioning this) within the range `[0, n_classes]` , something like:\r\n`train_set.labels = 1+ np.random.randint(n_classes, size=len(train_set.labels), dtype='uint8')`\r\nwith n_classes equals 10\r\nThat did not solve the problem. To enable the run, I have disabled getting the loss, via `loss.item()`, in both training and testing .\r\n"}