{"url": "https://api.github.com/repos/pytorch/pytorch/issues/comments/433491132", "html_url": "https://github.com/pytorch/pytorch/pull/13146#issuecomment-433491132", "issue_url": "https://api.github.com/repos/pytorch/pytorch/issues/13146", "id": 433491132, "node_id": "MDEyOklzc3VlQ29tbWVudDQzMzQ5MTEzMg==", "user": {"login": "smessmer", "id": 2373925, "node_id": "MDQ6VXNlcjIzNzM5MjU=", "avatar_url": "https://avatars3.githubusercontent.com/u/2373925?v=4", "gravatar_id": "", "url": "https://api.github.com/users/smessmer", "html_url": "https://github.com/smessmer", "followers_url": "https://api.github.com/users/smessmer/followers", "following_url": "https://api.github.com/users/smessmer/following{/other_user}", "gists_url": "https://api.github.com/users/smessmer/gists{/gist_id}", "starred_url": "https://api.github.com/users/smessmer/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/smessmer/subscriptions", "organizations_url": "https://api.github.com/users/smessmer/orgs", "repos_url": "https://api.github.com/users/smessmer/repos", "events_url": "https://api.github.com/users/smessmer/events{/privacy}", "received_events_url": "https://api.github.com/users/smessmer/received_events", "type": "User", "site_admin": false}, "created_at": "2018-10-26T17:52:15Z", "updated_at": "2018-10-26T17:52:15Z", "author_association": "CONTRIBUTOR", "body_html": "<p>The SFINAE stuff looks correct. I'm, however, not certain if we really want this API in C++. It seems a bit too magical to me. If we require people to define the type, it's much easier, for example:</p>\n<pre><code>tensor.to(Device {kCUDA, 1});\n</code></pre>", "body_text": "The SFINAE stuff looks correct. I'm, however, not certain if we really want this API in C++. It seems a bit too magical to me. If we require people to define the type, it's much easier, for example:\ntensor.to(Device {kCUDA, 1});", "body": "The SFINAE stuff looks correct. I'm, however, not certain if we really want this API in C++. It seems a bit too magical to me. If we require people to define the type, it's much easier, for example:\r\n\r\n    tensor.to(Device {kCUDA, 1});"}