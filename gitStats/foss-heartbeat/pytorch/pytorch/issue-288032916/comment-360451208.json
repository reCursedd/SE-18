{"url": "https://api.github.com/repos/pytorch/pytorch/issues/comments/360451208", "html_url": "https://github.com/pytorch/pytorch/issues/4628#issuecomment-360451208", "issue_url": "https://api.github.com/repos/pytorch/pytorch/issues/4628", "id": 360451208, "node_id": "MDEyOklzc3VlQ29tbWVudDM2MDQ1MTIwOA==", "user": {"login": "Tetratrio", "id": 7781148, "node_id": "MDQ6VXNlcjc3ODExNDg=", "avatar_url": "https://avatars0.githubusercontent.com/u/7781148?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Tetratrio", "html_url": "https://github.com/Tetratrio", "followers_url": "https://api.github.com/users/Tetratrio/followers", "following_url": "https://api.github.com/users/Tetratrio/following{/other_user}", "gists_url": "https://api.github.com/users/Tetratrio/gists{/gist_id}", "starred_url": "https://api.github.com/users/Tetratrio/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Tetratrio/subscriptions", "organizations_url": "https://api.github.com/users/Tetratrio/orgs", "repos_url": "https://api.github.com/users/Tetratrio/repos", "events_url": "https://api.github.com/users/Tetratrio/events{/privacy}", "received_events_url": "https://api.github.com/users/Tetratrio/received_events", "type": "User", "site_admin": false}, "created_at": "2018-01-25T12:21:13Z", "updated_at": "2018-01-25T12:21:13Z", "author_association": "NONE", "body_html": "<p>I have experienced the same problem. I am gathering trajectories for policy gradients with multiple processes. When I moved from a continous actionspace to a discrete action space (and changed the final activation in my policy net from sigmoid to softmax) the sampling got super slow. Using torch.set_num_threads(1) solves the problem.</p>\n<p>Using python 3.5 and pytorch 0.3 installed via pip. Running on Ubuntu 16.04 on my home PC. No docker or similar things used.</p>", "body_text": "I have experienced the same problem. I am gathering trajectories for policy gradients with multiple processes. When I moved from a continous actionspace to a discrete action space (and changed the final activation in my policy net from sigmoid to softmax) the sampling got super slow. Using torch.set_num_threads(1) solves the problem.\nUsing python 3.5 and pytorch 0.3 installed via pip. Running on Ubuntu 16.04 on my home PC. No docker or similar things used.", "body": "I have experienced the same problem. I am gathering trajectories for policy gradients with multiple processes. When I moved from a continous actionspace to a discrete action space (and changed the final activation in my policy net from sigmoid to softmax) the sampling got super slow. Using torch.set_num_threads(1) solves the problem.\r\n\r\nUsing python 3.5 and pytorch 0.3 installed via pip. Running on Ubuntu 16.04 on my home PC. No docker or similar things used."}