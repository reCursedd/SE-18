{"url": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/170292175", "pull_request_review_id": 98962176, "id": 170292175, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE3MDI5MjE3NQ==", "diff_hunk": "@@ -19,5 +19,6 @@ class Chi2(Gamma):\n     \"\"\"\n     params = {'df': constraints.positive}\n \n-    def __init__(self, df):\n-        super(Chi2, self).__init__(0.5 * df, 0.5)\n+    def __init__(self, df, validate_args=None):\n+        self.df = df", "path": "torch/distributions/chi2.py", "position": null, "original_position": 7, "commit_id": "6c5581b0ae17d07bdf6c24710d7e91e238f9a23c", "original_commit_id": "86d2abb24713b20b6b841d8cbafc4d0276b9f7ef", "user": {"login": "fritzo", "id": 648532, "node_id": "MDQ6VXNlcjY0ODUzMg==", "avatar_url": "https://avatars0.githubusercontent.com/u/648532?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fritzo", "html_url": "https://github.com/fritzo", "followers_url": "https://api.github.com/users/fritzo/followers", "following_url": "https://api.github.com/users/fritzo/following{/other_user}", "gists_url": "https://api.github.com/users/fritzo/gists{/gist_id}", "starred_url": "https://api.github.com/users/fritzo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fritzo/subscriptions", "organizations_url": "https://api.github.com/users/fritzo/orgs", "repos_url": "https://api.github.com/users/fritzo/repos", "events_url": "https://api.github.com/users/fritzo/events{/privacy}", "received_events_url": "https://api.github.com/users/fritzo/received_events", "type": "User", "site_admin": false}, "body": "That's right, and I think we shouldn't be saving `df`. Instead we should reconstruct it as needed\r\n```py\r\n@property\r\ndef df(self):\r\n    return 2 * self.concentration\r\n```\r\nThis minimizes overhead when `self._validate_args == False`. It is more expensive when `self._validate_args == True`, but in that's not the performance-critical case anyway.", "created_at": "2018-02-23T16:07:34Z", "updated_at": "2018-11-23T15:39:56Z", "html_url": "https://github.com/pytorch/pytorch/pull/5358#discussion_r170292175", "pull_request_url": "https://api.github.com/repos/pytorch/pytorch/pulls/5358", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/170292175"}, "html": {"href": "https://github.com/pytorch/pytorch/pull/5358#discussion_r170292175"}, "pull_request": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/5358"}}, "body_html": "<p>That's right, and I think we shouldn't be saving <code>df</code>. Instead we should reconstruct it as needed</p>\n<div class=\"highlight highlight-source-python\"><pre><span class=\"pl-en\">@</span><span class=\"pl-c1\">property</span>\n<span class=\"pl-k\">def</span> <span class=\"pl-en\">df</span>(<span class=\"pl-smi\"><span class=\"pl-smi\">self</span></span>):\n    <span class=\"pl-k\">return</span> <span class=\"pl-c1\">2</span> <span class=\"pl-k\">*</span> <span class=\"pl-c1\">self</span>.concentration</pre></div>\n<p>This minimizes overhead when <code>self._validate_args == False</code>. It is more expensive when <code>self._validate_args == True</code>, but in that's not the performance-critical case anyway.</p>", "body_text": "That's right, and I think we shouldn't be saving df. Instead we should reconstruct it as needed\n@property\ndef df(self):\n    return 2 * self.concentration\nThis minimizes overhead when self._validate_args == False. It is more expensive when self._validate_args == True, but in that's not the performance-critical case anyway.", "in_reply_to_id": 170240427}