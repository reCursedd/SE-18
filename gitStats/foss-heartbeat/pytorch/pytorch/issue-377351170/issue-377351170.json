{"url": "https://api.github.com/repos/pytorch/pytorch/issues/13565", "repository_url": "https://api.github.com/repos/pytorch/pytorch", "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/13565/labels{/name}", "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/13565/comments", "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/13565/events", "html_url": "https://github.com/pytorch/pytorch/issues/13565", "id": 377351170, "node_id": "MDU6SXNzdWUzNzczNTExNzA=", "number": 13565, "title": "Unicode support for the MS Windows platform [Caffe2]", "user": {"login": "Palmitoxico", "id": 8903198, "node_id": "MDQ6VXNlcjg5MDMxOTg=", "avatar_url": "https://avatars2.githubusercontent.com/u/8903198?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Palmitoxico", "html_url": "https://github.com/Palmitoxico", "followers_url": "https://api.github.com/users/Palmitoxico/followers", "following_url": "https://api.github.com/users/Palmitoxico/following{/other_user}", "gists_url": "https://api.github.com/users/Palmitoxico/gists{/gist_id}", "starred_url": "https://api.github.com/users/Palmitoxico/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Palmitoxico/subscriptions", "organizations_url": "https://api.github.com/users/Palmitoxico/orgs", "repos_url": "https://api.github.com/users/Palmitoxico/repos", "events_url": "https://api.github.com/users/Palmitoxico/events{/privacy}", "received_events_url": "https://api.github.com/users/Palmitoxico/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 890282107, "node_id": "MDU6TGFiZWw4OTAyODIxMDc=", "url": "https://api.github.com/repos/pytorch/pytorch/labels/caffe2", "name": "caffe2", "color": "210aa8", "default": false}, {"id": 790080431, "node_id": "MDU6TGFiZWw3OTAwODA0MzE=", "url": "https://api.github.com/repos/pytorch/pytorch/labels/windows", "name": "windows", "color": "fcff6b", "default": false}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-11-05T11:08:24Z", "updated_at": "2018-11-12T18:47:28Z", "closed_at": null, "author_association": "NONE", "body_html": "<h2><g-emoji class=\"g-emoji\" alias=\"rocket\" fallback-src=\"https://assets-cdn.github.com/images/icons/emoji/unicode/1f680.png\">\ud83d\ude80</g-emoji> Feature</h2>\n<p>I'm proposing adding support for Unicode filenames for the MS Windows platform following the <a href=\"http://utf8everywhere.org/\" rel=\"nofollow\">UTF-8 Everywhere</a> guidelines.</p>\n<p>Here is a concrete example of what I want to implement:</p>\n<div class=\"highlight highlight-source-diff\"><pre><span class=\"pl-c1\">diff --git a/caffe2/utils/proto_utils.cc b/caffe2/utils/proto_utils.cc</span>\nindex 885d0a384..17aae8248 100644\n<span class=\"pl-md\">--- a/caffe2/utils/proto_utils.cc</span>\n<span class=\"pl-mi1\">+++ b/caffe2/utils/proto_utils.cc</span>\n<span class=\"pl-mdr\">@@ -5,6 +5,9 @@</span>\n #include &lt;fcntl.h&gt;\n #include &lt;cerrno&gt;\n #include &lt;fstream&gt;\n<span class=\"pl-mi1\"><span class=\"pl-mi1\">+</span>#include &lt;string&gt;</span>\n<span class=\"pl-mi1\"><span class=\"pl-mi1\">+</span>#include &lt;locale&gt;</span>\n<span class=\"pl-mi1\"><span class=\"pl-mi1\">+</span>#include &lt;codecvt&gt;</span>\n \n #include &lt;google/protobuf/io/coded_stream.h&gt;\n \n<span class=\"pl-mdr\">@@ -202,7 +205,10 @@</span> C10_EXPORT bool ReadProtoFromBinaryFile(\n     const char* filename,\n     MessageLite* proto) {\n #if defined (_MSC_VER)  // for MSC compiler binary flag needs to be specified\n<span class=\"pl-md\"><span class=\"pl-md\">-</span>  int fd = open(filename, O_RDONLY | O_BINARY);</span>\n<span class=\"pl-mi1\"><span class=\"pl-mi1\">+</span>  std::string str = filename;</span>\n<span class=\"pl-mi1\"><span class=\"pl-mi1\">+</span>  std::wstring_convert&lt;std::codecvt_utf8_utf16&lt;wchar_t&gt;&gt; converter;</span>\n<span class=\"pl-mi1\"><span class=\"pl-mi1\">+</span>  std::wstring wstr = converter.from_bytes(str);</span>\n<span class=\"pl-mi1\"><span class=\"pl-mi1\">+</span>  int fd = _wopen(&amp;wstr[0], O_RDONLY | O_BINARY);</span>\n #else\n   int fd = open(filename, O_RDONLY);\n #endif\n</pre></div>\n<p>I welcome suggestions and critiques to my implementation.</p>\n<h2>Motivation</h2>\n<p>Caffe2 should support opening files with a unicode name on MS Windows, and to avoid API breakage and fragmentation I assume that the <code>char* filename</code> string is UTF-8 encoded. On MS Windows this string will be translated to UTF-16 and then passed to _wopen .</p>\n<h2>Pitch</h2>\n<p>My plan is to apply these changes to every function/method that open/search files. I don't known exactly where all these functions are except for the ones contained in <code>caffe2/utils/proto_utils.cc</code>, so I would be glad if someone that is more familiar with the code base could guide me.</p>\n<p>Thanks<br>\nAugusto.</p>", "body_text": "\ud83d\ude80 Feature\nI'm proposing adding support for Unicode filenames for the MS Windows platform following the UTF-8 Everywhere guidelines.\nHere is a concrete example of what I want to implement:\ndiff --git a/caffe2/utils/proto_utils.cc b/caffe2/utils/proto_utils.cc\nindex 885d0a384..17aae8248 100644\n--- a/caffe2/utils/proto_utils.cc\n+++ b/caffe2/utils/proto_utils.cc\n@@ -5,6 +5,9 @@\n #include <fcntl.h>\n #include <cerrno>\n #include <fstream>\n+#include <string>\n+#include <locale>\n+#include <codecvt>\n \n #include <google/protobuf/io/coded_stream.h>\n \n@@ -202,7 +205,10 @@ C10_EXPORT bool ReadProtoFromBinaryFile(\n     const char* filename,\n     MessageLite* proto) {\n #if defined (_MSC_VER)  // for MSC compiler binary flag needs to be specified\n-  int fd = open(filename, O_RDONLY | O_BINARY);\n+  std::string str = filename;\n+  std::wstring_convert<std::codecvt_utf8_utf16<wchar_t>> converter;\n+  std::wstring wstr = converter.from_bytes(str);\n+  int fd = _wopen(&wstr[0], O_RDONLY | O_BINARY);\n #else\n   int fd = open(filename, O_RDONLY);\n #endif\n\nI welcome suggestions and critiques to my implementation.\nMotivation\nCaffe2 should support opening files with a unicode name on MS Windows, and to avoid API breakage and fragmentation I assume that the char* filename string is UTF-8 encoded. On MS Windows this string will be translated to UTF-16 and then passed to _wopen .\nPitch\nMy plan is to apply these changes to every function/method that open/search files. I don't known exactly where all these functions are except for the ones contained in caffe2/utils/proto_utils.cc, so I would be glad if someone that is more familiar with the code base could guide me.\nThanks\nAugusto.", "body": "## \ud83d\ude80 Feature\r\n\r\nI'm proposing adding support for Unicode filenames for the MS Windows platform following the [UTF-8 Everywhere](http://utf8everywhere.org/) guidelines.\r\n\r\nHere is a concrete example of what I want to implement:\r\n```diff\r\ndiff --git a/caffe2/utils/proto_utils.cc b/caffe2/utils/proto_utils.cc\r\nindex 885d0a384..17aae8248 100644\r\n--- a/caffe2/utils/proto_utils.cc\r\n+++ b/caffe2/utils/proto_utils.cc\r\n@@ -5,6 +5,9 @@\r\n #include <fcntl.h>\r\n #include <cerrno>\r\n #include <fstream>\r\n+#include <string>\r\n+#include <locale>\r\n+#include <codecvt>\r\n \r\n #include <google/protobuf/io/coded_stream.h>\r\n \r\n@@ -202,7 +205,10 @@ C10_EXPORT bool ReadProtoFromBinaryFile(\r\n     const char* filename,\r\n     MessageLite* proto) {\r\n #if defined (_MSC_VER)  // for MSC compiler binary flag needs to be specified\r\n-  int fd = open(filename, O_RDONLY | O_BINARY);\r\n+  std::string str = filename;\r\n+  std::wstring_convert<std::codecvt_utf8_utf16<wchar_t>> converter;\r\n+  std::wstring wstr = converter.from_bytes(str);\r\n+  int fd = _wopen(&wstr[0], O_RDONLY | O_BINARY);\r\n #else\r\n   int fd = open(filename, O_RDONLY);\r\n #endif\r\n\r\n```\r\n\r\nI welcome suggestions and critiques to my implementation.\r\n\r\n## Motivation\r\n\r\nCaffe2 should support opening files with a unicode name on MS Windows, and to avoid API breakage and fragmentation I assume that the ```char* filename``` string is UTF-8 encoded. On MS Windows this string will be translated to UTF-16 and then passed to _wopen .\r\n\r\n## Pitch\r\n\r\nMy plan is to apply these changes to every function/method that open/search files. I don't known exactly where all these functions are except for the ones contained in ```caffe2/utils/proto_utils.cc```, so I would be glad if someone that is more familiar with the code base could guide me.\r\n\r\nThanks\r\nAugusto.\r\n"}