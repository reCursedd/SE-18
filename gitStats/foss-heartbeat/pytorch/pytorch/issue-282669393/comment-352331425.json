{"url": "https://api.github.com/repos/pytorch/pytorch/issues/comments/352331425", "html_url": "https://github.com/pytorch/pytorch/pull/4210#issuecomment-352331425", "issue_url": "https://api.github.com/repos/pytorch/pytorch/issues/4210", "id": 352331425, "node_id": "MDEyOklzc3VlQ29tbWVudDM1MjMzMTQyNQ==", "user": {"login": "fritzo", "id": 648532, "node_id": "MDQ6VXNlcjY0ODUzMg==", "avatar_url": "https://avatars0.githubusercontent.com/u/648532?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fritzo", "html_url": "https://github.com/fritzo", "followers_url": "https://api.github.com/users/fritzo/followers", "following_url": "https://api.github.com/users/fritzo/following{/other_user}", "gists_url": "https://api.github.com/users/fritzo/gists{/gist_id}", "starred_url": "https://api.github.com/users/fritzo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fritzo/subscriptions", "organizations_url": "https://api.github.com/users/fritzo/orgs", "repos_url": "https://api.github.com/users/fritzo/repos", "events_url": "https://api.github.com/users/fritzo/events{/privacy}", "received_events_url": "https://api.github.com/users/fritzo/received_events", "type": "User", "site_admin": false}, "created_at": "2017-12-18T05:42:46Z", "updated_at": "2017-12-18T05:42:46Z", "author_association": "CONTRIBUTOR", "body_html": "<p><a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=1762463\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/neerajprad\">@neerajprad</a> You've convinced me that values should match <code>event_shape</code> exactly. I think there is a strong case for allowing broadcasting-up of <code>batch_shape</code> of values to match parameters (which is very useful in mixture models: scoring a single datum over many parameters). There's less of a case for broadcasting-down <code>batch_shape</code> of many values to parameters of 1 value, but this behavior would allow us to move past scalar issues.</p>\n<blockquote>\n<p>require clients to use scalar parameters to score such shapes</p>\n</blockquote>\n<p>This doesn't work currently because I usually need a Variables, and Variables must have at least one dimension. <a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=1762463\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/neerajprad\">@neerajprad</a> let's chat tomorrow.</p>", "body_text": "@neerajprad You've convinced me that values should match event_shape exactly. I think there is a strong case for allowing broadcasting-up of batch_shape of values to match parameters (which is very useful in mixture models: scoring a single datum over many parameters). There's less of a case for broadcasting-down batch_shape of many values to parameters of 1 value, but this behavior would allow us to move past scalar issues.\n\nrequire clients to use scalar parameters to score such shapes\n\nThis doesn't work currently because I usually need a Variables, and Variables must have at least one dimension. @neerajprad let's chat tomorrow.", "body": "@neerajprad You've convinced me that values should match `event_shape` exactly. I think there is a strong case for allowing broadcasting-up of `batch_shape` of values to match parameters (which is very useful in mixture models: scoring a single datum over many parameters). There's less of a case for broadcasting-down `batch_shape` of many values to parameters of 1 value, but this behavior would allow us to move past scalar issues.\r\n\r\n> require clients to use scalar parameters to score such shapes\r\n\r\nThis doesn't work currently because I usually need a Variables, and Variables must have at least one dimension. @neerajprad let's chat tomorrow."}