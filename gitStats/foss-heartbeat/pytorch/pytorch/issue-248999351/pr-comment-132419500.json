{"url": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/132419500", "pull_request_review_id": 55496565, "id": 132419500, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEzMjQxOTUwMA==", "diff_hunk": "@@ -71,7 +71,10 @@ def safe_zeros_backward(inp, dim):\n             exclusive_normal = exclusive_normal_nocp.cumprod(dim)\n \n             def reverse_dim(var, dim):\n-                return var.index_select(dim, Variable(torch.arange(var.size(dim) - 1, -1, -1)).long())\n+                index = Variable(torch.arange(var.size(dim) - 1, -1, -1)).long()\n+                if var.is_cuda:\n+                    index = index.cuda()", "path": "torch/autograd/_functions/reduce.py", "position": null, "original_position": 7, "commit_id": "47fee489814fe5cc79e7dc22d4b92b06a3b04a1d", "original_commit_id": "2e8062825820eb9e353067b1dcf5d1ee5aa1d9a9", "user": {"login": "fmassa", "id": 9110200, "node_id": "MDQ6VXNlcjkxMTAyMDA=", "avatar_url": "https://avatars2.githubusercontent.com/u/9110200?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fmassa", "html_url": "https://github.com/fmassa", "followers_url": "https://api.github.com/users/fmassa/followers", "following_url": "https://api.github.com/users/fmassa/following{/other_user}", "gists_url": "https://api.github.com/users/fmassa/gists{/gist_id}", "starred_url": "https://api.github.com/users/fmassa/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fmassa/subscriptions", "organizations_url": "https://api.github.com/users/fmassa/orgs", "repos_url": "https://api.github.com/users/fmassa/repos", "events_url": "https://api.github.com/users/fmassa/events{/privacy}", "received_events_url": "https://api.github.com/users/fmassa/received_events", "type": "User", "site_admin": false}, "body": "This only works if your current device is the device you want to send the `index` to.\r\nI think a better solution would be to replace this by something like\r\n```python\r\nidx = torch.arange(var.size(dim) -1, -1, -1, out=var.data.new().long())\r\nreturn var.index_select(dim, Variable(idx))\r\n```", "created_at": "2017-08-10T10:35:12Z", "updated_at": "2018-11-23T15:34:19Z", "html_url": "https://github.com/pytorch/pytorch/pull/2353#discussion_r132419500", "pull_request_url": "https://api.github.com/repos/pytorch/pytorch/pulls/2353", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/132419500"}, "html": {"href": "https://github.com/pytorch/pytorch/pull/2353#discussion_r132419500"}, "pull_request": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/2353"}}, "body_html": "<p>This only works if your current device is the device you want to send the <code>index</code> to.<br>\nI think a better solution would be to replace this by something like</p>\n<div class=\"highlight highlight-source-python\"><pre>idx <span class=\"pl-k\">=</span> torch.arange(var.size(dim) <span class=\"pl-k\">-</span><span class=\"pl-c1\">1</span>, <span class=\"pl-k\">-</span><span class=\"pl-c1\">1</span>, <span class=\"pl-k\">-</span><span class=\"pl-c1\">1</span>, <span class=\"pl-v\">out</span><span class=\"pl-k\">=</span>var.data.new().long())\n<span class=\"pl-k\">return</span> var.index_select(dim, Variable(idx))</pre></div>", "body_text": "This only works if your current device is the device you want to send the index to.\nI think a better solution would be to replace this by something like\nidx = torch.arange(var.size(dim) -1, -1, -1, out=var.data.new().long())\nreturn var.index_select(dim, Variable(idx))"}