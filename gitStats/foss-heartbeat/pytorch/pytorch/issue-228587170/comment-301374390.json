{"url": "https://api.github.com/repos/pytorch/pytorch/issues/comments/301374390", "html_url": "https://github.com/pytorch/pytorch/issues/1553#issuecomment-301374390", "issue_url": "https://api.github.com/repos/pytorch/pytorch/issues/1553", "id": 301374390, "node_id": "MDEyOklzc3VlQ29tbWVudDMwMTM3NDM5MA==", "user": {"login": "zhanghang1989", "id": 8041160, "node_id": "MDQ6VXNlcjgwNDExNjA=", "avatar_url": "https://avatars1.githubusercontent.com/u/8041160?v=4", "gravatar_id": "", "url": "https://api.github.com/users/zhanghang1989", "html_url": "https://github.com/zhanghang1989", "followers_url": "https://api.github.com/users/zhanghang1989/followers", "following_url": "https://api.github.com/users/zhanghang1989/following{/other_user}", "gists_url": "https://api.github.com/users/zhanghang1989/gists{/gist_id}", "starred_url": "https://api.github.com/users/zhanghang1989/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/zhanghang1989/subscriptions", "organizations_url": "https://api.github.com/users/zhanghang1989/orgs", "repos_url": "https://api.github.com/users/zhanghang1989/repos", "events_url": "https://api.github.com/users/zhanghang1989/events{/privacy}", "received_events_url": "https://api.github.com/users/zhanghang1989/received_events", "type": "User", "site_admin": false}, "created_at": "2017-05-15T04:35:30Z", "updated_at": "2017-05-15T04:36:45Z", "author_association": "NONE", "body_html": "<p><a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=1310570\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/soumith\">@soumith</a> Sorry that I have to reopen the issue, this error seems inconsistent, but it occurs again. I am using conda 3.6 OSX, install pytorch from source. Thank you for the help!</p>\n<div class=\"highlight highlight-source-python\"><pre>In [<span class=\"pl-c1\">1</span>]: <span class=\"pl-k\">import</span> torch\n   <span class=\"pl-c1\">...</span>: <span class=\"pl-k\">from</span> torch.autograd <span class=\"pl-k\">import</span> Variable\n   <span class=\"pl-c1\">...</span>: x<span class=\"pl-k\">=</span>Variable(torch.Tensor(<span class=\"pl-c1\">2</span>,<span class=\"pl-c1\">3</span>))\n   <span class=\"pl-c1\">...</span>: x<span class=\"pl-k\">+</span>x\n   <span class=\"pl-c1\">...</span>: \n<span class=\"pl-ii\">--------------------------------------------------------------------------</span><span class=\"pl-k\">-</span>\n<span class=\"pl-c1\">TypeError</span>                                 Traceback (most recent call last)\n<span class=\"pl-k\">&lt;</span>ipython<span class=\"pl-k\">-</span><span class=\"pl-c1\">input</span><span class=\"pl-k\">-</span><span class=\"pl-c1\">1</span><span class=\"pl-k\">-</span><span class=\"pl-ii\">130a4b9b3fe8</span><span class=\"pl-k\">&gt;</span> <span class=\"pl-k\">in</span> <span class=\"pl-k\">&lt;</span>module<span class=\"pl-k\">&gt;</span>()\n      <span class=\"pl-c1\">2</span> <span class=\"pl-k\">from</span> torch.autograd <span class=\"pl-k\">import</span> Variable\n      <span class=\"pl-c1\">3</span> x<span class=\"pl-k\">=</span>Variable(torch.Tensor(<span class=\"pl-c1\">2</span>,<span class=\"pl-c1\">3</span>))\n<span class=\"pl-ii\">----</span><span class=\"pl-k\">&gt;</span> <span class=\"pl-c1\">4</span> x<span class=\"pl-k\">+</span>x\n\n<span class=\"pl-k\">/</span>anaconda<span class=\"pl-k\">/</span>lib<span class=\"pl-k\">/</span>python3.6<span class=\"pl-k\">/</span>site<span class=\"pl-k\">-</span>packages<span class=\"pl-k\">/</span>torch<span class=\"pl-k\">/</span>autograd<span class=\"pl-k\">/</span>variable.py <span class=\"pl-k\">in</span> <span class=\"pl-c1\">__add__</span>(<span class=\"pl-c1\">self</span>, other)\n    <span class=\"pl-c1\">734</span> \n    <span class=\"pl-c1\">735</span>     <span class=\"pl-k\">def</span> <span class=\"pl-c1\">__add__</span>(<span class=\"pl-smi\"><span class=\"pl-smi\">self</span></span>, <span class=\"pl-smi\">other</span>):\n<span class=\"pl-ii\">--</span><span class=\"pl-k\">&gt;</span> <span class=\"pl-c1\">736</span>         <span class=\"pl-k\">return</span> <span class=\"pl-c1\">self</span>.add(other)\n    <span class=\"pl-c1\">737</span>     <span class=\"pl-c1\">__radd__</span> <span class=\"pl-k\">=</span> <span class=\"pl-c1\">__add__</span>\n    <span class=\"pl-c1\">738</span> \n\n<span class=\"pl-k\">/</span>anaconda<span class=\"pl-k\">/</span>lib<span class=\"pl-k\">/</span>python3.6<span class=\"pl-k\">/</span>site<span class=\"pl-k\">-</span>packages<span class=\"pl-k\">/</span>torch<span class=\"pl-k\">/</span>autograd<span class=\"pl-k\">/</span>variable.py <span class=\"pl-k\">in</span> add(<span class=\"pl-c1\">self</span>, other)\n    <span class=\"pl-c1\">280</span> \n    <span class=\"pl-c1\">281</span>     <span class=\"pl-k\">def</span> <span class=\"pl-en\">add</span>(<span class=\"pl-smi\"><span class=\"pl-smi\">self</span></span>, <span class=\"pl-smi\">other</span>):\n<span class=\"pl-ii\">--</span><span class=\"pl-k\">&gt;</span> <span class=\"pl-c1\">282</span>         <span class=\"pl-k\">return</span> <span class=\"pl-c1\">self</span>._add(other, <span class=\"pl-c1\">False</span>)\n    <span class=\"pl-c1\">283</span> \n    <span class=\"pl-c1\">284</span>     <span class=\"pl-k\">def</span> <span class=\"pl-en\">add_</span>(<span class=\"pl-smi\"><span class=\"pl-smi\">self</span></span>, <span class=\"pl-smi\">other</span>):\n\n<span class=\"pl-k\">/</span>anaconda<span class=\"pl-k\">/</span>lib<span class=\"pl-k\">/</span>python3.6<span class=\"pl-k\">/</span>site<span class=\"pl-k\">-</span>packages<span class=\"pl-k\">/</span>torch<span class=\"pl-k\">/</span>autograd<span class=\"pl-k\">/</span>variable.py <span class=\"pl-k\">in</span> _add(<span class=\"pl-c1\">self</span>, other, inplace)\n    <span class=\"pl-c1\">274</span>     <span class=\"pl-k\">def</span> <span class=\"pl-en\">_add</span>(<span class=\"pl-smi\"><span class=\"pl-smi\">self</span></span>, <span class=\"pl-smi\">other</span>, <span class=\"pl-smi\">inplace</span>):\n    <span class=\"pl-c1\">275</span>         <span class=\"pl-k\">if</span> <span class=\"pl-c1\">isinstance</span>(other, Variable):\n<span class=\"pl-ii\">--</span><span class=\"pl-k\">&gt;</span> <span class=\"pl-c1\">276</span>             <span class=\"pl-k\">return</span> Add.apply(<span class=\"pl-c1\">self</span>, other, inplace)\n    <span class=\"pl-c1\">277</span>         <span class=\"pl-k\">else</span>:\n    <span class=\"pl-c1\">278</span>             <span class=\"pl-k\">assert</span> <span class=\"pl-k\">not</span> torch.is_tensor(other)\n\n<span class=\"pl-c1\">TypeError</span>: forward() takes <span class=\"pl-c1\">3</span> positional arguments but <span class=\"pl-c1\">4</span> were given</pre></div>", "body_text": "@soumith Sorry that I have to reopen the issue, this error seems inconsistent, but it occurs again. I am using conda 3.6 OSX, install pytorch from source. Thank you for the help!\nIn [1]: import torch\n   ...: from torch.autograd import Variable\n   ...: x=Variable(torch.Tensor(2,3))\n   ...: x+x\n   ...: \n---------------------------------------------------------------------------\nTypeError                                 Traceback (most recent call last)\n<ipython-input-1-130a4b9b3fe8> in <module>()\n      2 from torch.autograd import Variable\n      3 x=Variable(torch.Tensor(2,3))\n----> 4 x+x\n\n/anaconda/lib/python3.6/site-packages/torch/autograd/variable.py in __add__(self, other)\n    734 \n    735     def __add__(self, other):\n--> 736         return self.add(other)\n    737     __radd__ = __add__\n    738 \n\n/anaconda/lib/python3.6/site-packages/torch/autograd/variable.py in add(self, other)\n    280 \n    281     def add(self, other):\n--> 282         return self._add(other, False)\n    283 \n    284     def add_(self, other):\n\n/anaconda/lib/python3.6/site-packages/torch/autograd/variable.py in _add(self, other, inplace)\n    274     def _add(self, other, inplace):\n    275         if isinstance(other, Variable):\n--> 276             return Add.apply(self, other, inplace)\n    277         else:\n    278             assert not torch.is_tensor(other)\n\nTypeError: forward() takes 3 positional arguments but 4 were given", "body": "@soumith Sorry that I have to reopen the issue, this error seems inconsistent, but it occurs again. I am using conda 3.6 OSX, install pytorch from source. Thank you for the help! \r\n```python\r\nIn [1]: import torch\r\n   ...: from torch.autograd import Variable\r\n   ...: x=Variable(torch.Tensor(2,3))\r\n   ...: x+x\r\n   ...: \r\n---------------------------------------------------------------------------\r\nTypeError                                 Traceback (most recent call last)\r\n<ipython-input-1-130a4b9b3fe8> in <module>()\r\n      2 from torch.autograd import Variable\r\n      3 x=Variable(torch.Tensor(2,3))\r\n----> 4 x+x\r\n\r\n/anaconda/lib/python3.6/site-packages/torch/autograd/variable.py in __add__(self, other)\r\n    734 \r\n    735     def __add__(self, other):\r\n--> 736         return self.add(other)\r\n    737     __radd__ = __add__\r\n    738 \r\n\r\n/anaconda/lib/python3.6/site-packages/torch/autograd/variable.py in add(self, other)\r\n    280 \r\n    281     def add(self, other):\r\n--> 282         return self._add(other, False)\r\n    283 \r\n    284     def add_(self, other):\r\n\r\n/anaconda/lib/python3.6/site-packages/torch/autograd/variable.py in _add(self, other, inplace)\r\n    274     def _add(self, other, inplace):\r\n    275         if isinstance(other, Variable):\r\n--> 276             return Add.apply(self, other, inplace)\r\n    277         else:\r\n    278             assert not torch.is_tensor(other)\r\n\r\nTypeError: forward() takes 3 positional arguments but 4 were given\r\n```"}