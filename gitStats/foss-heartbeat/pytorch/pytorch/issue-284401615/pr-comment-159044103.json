{"url": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/159044103", "pull_request_review_id": 85934018, "id": 159044103, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE1OTA0NDEwMw==", "diff_hunk": "@@ -522,6 +530,63 @@ def test_gamma_sample_grad(self):\n                                        'rel error {}'.format(rel_error),\n                                        'max error {}'.format(rel_error.max())]))\n \n+    # This is a randomized test.\n+    @unittest.skipIf(not TEST_NUMPY, \"Numpy not found\")\n+    def test_chi2_shape(self):\n+        df = Variable(torch.exp(torch.randn(2, 3)), requires_grad=True)\n+        df_1d = Variable(torch.exp(torch.randn(1)), requires_grad=True)\n+        self.assertEqual(Chi2(df).sample().size(), (2, 3))\n+        self.assertEqual(Chi2(df).sample_n(5).size(), (5, 2, 3))\n+        self.assertEqual(Chi2(df_1d).sample_n(1).size(), (1, 1))\n+        self.assertEqual(Chi2(df_1d).sample().size(), (1,))\n+        self.assertEqual(Chi2(0.5).sample().size(), (1,))\n+        self.assertEqual(Chi2(0.5).sample_n(1).size(), (1,))\n+\n+        def ref_log_prob(idx, x, log_prob):\n+            d = df.data.view(-1)[idx]\n+            expected = scipy.stats.chi2.logpdf(x, d)\n+            self.assertAlmostEqual(log_prob, expected, places=3)\n+\n+        self._check_log_prob(Chi2(df), ref_log_prob)\n+\n+    # This is a randomized test.\n+    @unittest.skipIf(not TEST_NUMPY, \"Numpy not found\")\n+    def test_chi2_sample(self):\n+        set_rng_seed(0)", "path": "test/test_distributions.py", "position": 50, "original_position": 50, "commit_id": "dfc3ab220d3b89793bd656ae9c58bc8aeb875901", "original_commit_id": "e90d721100acb8391202b02ca89f93ed5ff08822", "user": {"login": "apaszke", "id": 4583066, "node_id": "MDQ6VXNlcjQ1ODMwNjY=", "avatar_url": "https://avatars3.githubusercontent.com/u/4583066?v=4", "gravatar_id": "", "url": "https://api.github.com/users/apaszke", "html_url": "https://github.com/apaszke", "followers_url": "https://api.github.com/users/apaszke/followers", "following_url": "https://api.github.com/users/apaszke/following{/other_user}", "gists_url": "https://api.github.com/users/apaszke/gists{/gist_id}", "starred_url": "https://api.github.com/users/apaszke/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/apaszke/subscriptions", "organizations_url": "https://api.github.com/users/apaszke/orgs", "repos_url": "https://api.github.com/users/apaszke/repos", "events_url": "https://api.github.com/users/apaszke/events{/privacy}", "received_events_url": "https://api.github.com/users/apaszke/received_events", "type": "User", "site_admin": false}, "body": "This needs a reference to the note about testing that has been added in one of the recent PRs. @fritzo Does it also apply to the test below?", "created_at": "2017-12-29T10:07:20Z", "updated_at": "2018-11-23T15:37:42Z", "html_url": "https://github.com/pytorch/pytorch/pull/4346#discussion_r159044103", "pull_request_url": "https://api.github.com/repos/pytorch/pytorch/pulls/4346", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/159044103"}, "html": {"href": "https://github.com/pytorch/pytorch/pull/4346#discussion_r159044103"}, "pull_request": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/4346"}}, "body_html": "<p>This needs a reference to the note about testing that has been added in one of the recent PRs. <a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=648532\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/fritzo\">@fritzo</a> Does it also apply to the test below?</p>", "body_text": "This needs a reference to the note about testing that has been added in one of the recent PRs. @fritzo Does it also apply to the test below?"}