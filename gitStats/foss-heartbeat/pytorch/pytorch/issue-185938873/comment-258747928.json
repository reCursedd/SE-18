{"url": "https://api.github.com/repos/pytorch/pytorch/issues/comments/258747928", "html_url": "https://github.com/pytorch/pytorch/issues/175#issuecomment-258747928", "issue_url": "https://api.github.com/repos/pytorch/pytorch/issues/175", "id": 258747928, "node_id": "MDEyOklzc3VlQ29tbWVudDI1ODc0NzkyOA==", "user": {"login": "soumith", "id": 1310570, "node_id": "MDQ6VXNlcjEzMTA1NzA=", "avatar_url": "https://avatars0.githubusercontent.com/u/1310570?v=4", "gravatar_id": "", "url": "https://api.github.com/users/soumith", "html_url": "https://github.com/soumith", "followers_url": "https://api.github.com/users/soumith/followers", "following_url": "https://api.github.com/users/soumith/following{/other_user}", "gists_url": "https://api.github.com/users/soumith/gists{/gist_id}", "starred_url": "https://api.github.com/users/soumith/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/soumith/subscriptions", "organizations_url": "https://api.github.com/users/soumith/orgs", "repos_url": "https://api.github.com/users/soumith/repos", "events_url": "https://api.github.com/users/soumith/events{/privacy}", "received_events_url": "https://api.github.com/users/soumith/received_events", "type": "User", "site_admin": false}, "created_at": "2016-11-07T05:02:27Z", "updated_at": "2016-11-07T05:02:27Z", "author_association": "MEMBER", "body_html": "<p><a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=2326749\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/bshillingford\">@bshillingford</a> <a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=8885556\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/glample\">@glample</a> thanks for the feedback. I think after looking at both your feedback, and while i was implementing dcgan today, i think it's better to remove this line: <a href=\"https://github.com/pytorch/pytorch/blob/master/torch/optim/optimizer.py#L48\">https://github.com/pytorch/pytorch/blob/master/torch/optim/optimizer.py#L48</a></p>\n<p>It's not the job of the optimizer to call backward. It simply has to get params / gradients and do the optimization step.</p>\n<p><a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=4583066\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/apaszke\">@apaszke</a> <a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=655866\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/colesbury\">@colesbury</a> there's real value for us to go back to a functional API. Having the params passed in at the constructor of the optimizer is a fairly dysfunctional constraint for flexibility.</p>", "body_text": "@bshillingford @glample thanks for the feedback. I think after looking at both your feedback, and while i was implementing dcgan today, i think it's better to remove this line: https://github.com/pytorch/pytorch/blob/master/torch/optim/optimizer.py#L48\nIt's not the job of the optimizer to call backward. It simply has to get params / gradients and do the optimization step.\n@apaszke @colesbury there's real value for us to go back to a functional API. Having the params passed in at the constructor of the optimizer is a fairly dysfunctional constraint for flexibility.", "body": "@bshillingford @glample thanks for the feedback. I think after looking at both your feedback, and while i was implementing dcgan today, i think it's better to remove this line: https://github.com/pytorch/pytorch/blob/master/torch/optim/optimizer.py#L48\n\nIt's not the job of the optimizer to call backward. It simply has to get params / gradients and do the optimization step.\n\n@apaszke @colesbury there's real value for us to go back to a functional API. Having the params passed in at the constructor of the optimizer is a fairly dysfunctional constraint for flexibility.\n"}