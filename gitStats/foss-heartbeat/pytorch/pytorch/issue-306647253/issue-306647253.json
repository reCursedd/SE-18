{"url": "https://api.github.com/repos/pytorch/pytorch/issues/5889", "repository_url": "https://api.github.com/repos/pytorch/pytorch", "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/5889/labels{/name}", "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/5889/comments", "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/5889/events", "html_url": "https://github.com/pytorch/pytorch/pull/5889", "id": 306647253, "node_id": "MDExOlB1bGxSZXF1ZXN0MTc2MDMzMjUx", "number": 5889, "title": "Support legacy empty tensor behavior in cat", "user": {"login": "zou3519", "id": 5652049, "node_id": "MDQ6VXNlcjU2NTIwNDk=", "avatar_url": "https://avatars3.githubusercontent.com/u/5652049?v=4", "gravatar_id": "", "url": "https://api.github.com/users/zou3519", "html_url": "https://github.com/zou3519", "followers_url": "https://api.github.com/users/zou3519/followers", "following_url": "https://api.github.com/users/zou3519/following{/other_user}", "gists_url": "https://api.github.com/users/zou3519/gists{/gist_id}", "starred_url": "https://api.github.com/users/zou3519/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/zou3519/subscriptions", "organizations_url": "https://api.github.com/users/zou3519/orgs", "repos_url": "https://api.github.com/users/zou3519/repos", "events_url": "https://api.github.com/users/zou3519/events{/privacy}", "received_events_url": "https://api.github.com/users/zou3519/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2018-03-19T21:40:15Z", "updated_at": "2018-11-23T15:41:00Z", "closed_at": "2018-03-23T15:53:32Z", "author_association": "CONTRIBUTOR", "pull_request": {"url": "https://api.github.com/repos/pytorch/pytorch/pulls/5889", "html_url": "https://github.com/pytorch/pytorch/pull/5889", "diff_url": "https://github.com/pytorch/pytorch/pull/5889.diff", "patch_url": "https://github.com/pytorch/pytorch/pull/5889.patch"}, "body_html": "<p>Continuing from <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load issue title\" data-id=\"305996092\" data-permission-text=\"Issue title is private\" data-url=\"https://github.com/pytorch/pytorch/issues/5837\" data-hovercard-type=\"pull_request\" data-hovercard-url=\"/pytorch/pytorch/pull/5837/hovercard\" href=\"https://github.com/pytorch/pytorch/pull/5837\">#5837</a>:<br>\n<span class=\"issue-keyword tooltipped tooltipped-se\" aria-label=\"This pull request closes issue #5332.\">Fixes</span> <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load issue title\" data-id=\"299019779\" data-permission-text=\"Issue title is private\" data-url=\"https://github.com/pytorch/pytorch/issues/5332\" data-hovercard-type=\"issue\" data-hovercard-url=\"/pytorch/pytorch/issues/5332/hovercard\" href=\"https://github.com/pytorch/pytorch/issues/5332\">#5332</a>.</p>\n<p>Currently, the following behavior happens with <code>torch.cat</code>:</p>\n<pre><code>import torch\n\nx = torch.randn(4, 3, 32, 32)\nempty = torch.Tensor([])\n\n# Doesn't error out\nres1 = torch.cat([x, empty], dim=1)\n\n# Errors out\nres2 = torch.cat([empty, x], dim=1)\n</code></pre>\n<p>However, at some point in the past, <code>res1</code> and <code>res2</code> were equal. This PR supports the legacy behavior of ignoring empty tensors when concatenating a list of tensors, until we have empty tensors that can have arbitrary shape, at which point we'll stop supporting this behavior.</p>\n<p>cc <a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=3768583\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/gchanan\">@gchanan</a></p>\n<h3>Test Plan</h3>\n<p>New test</p>", "body_text": "Continuing from #5837:\nFixes #5332.\nCurrently, the following behavior happens with torch.cat:\nimport torch\n\nx = torch.randn(4, 3, 32, 32)\nempty = torch.Tensor([])\n\n# Doesn't error out\nres1 = torch.cat([x, empty], dim=1)\n\n# Errors out\nres2 = torch.cat([empty, x], dim=1)\n\nHowever, at some point in the past, res1 and res2 were equal. This PR supports the legacy behavior of ignoring empty tensors when concatenating a list of tensors, until we have empty tensors that can have arbitrary shape, at which point we'll stop supporting this behavior.\ncc @gchanan\nTest Plan\nNew test", "body": "Continuing from #5837:\r\nFixes #5332.\r\n\r\nCurrently, the following behavior happens with `torch.cat`:\r\n```\r\nimport torch\r\n\r\nx = torch.randn(4, 3, 32, 32)\r\nempty = torch.Tensor([])\r\n\r\n# Doesn't error out\r\nres1 = torch.cat([x, empty], dim=1)\r\n\r\n# Errors out\r\nres2 = torch.cat([empty, x], dim=1)\r\n```\r\n\r\nHowever, at some point in the past, `res1` and `res2` were equal. This PR supports the legacy behavior of ignoring empty tensors when concatenating a list of tensors, until we have empty tensors that can have arbitrary shape, at which point we'll stop supporting this behavior.\r\n\r\ncc @gchanan \r\n\r\n### Test Plan\r\nNew test\r\n"}