{"url": "https://api.github.com/repos/pytorch/pytorch/issues/491", "repository_url": "https://api.github.com/repos/pytorch/pytorch", "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/491/labels{/name}", "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/491/comments", "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/491/events", "html_url": "https://github.com/pytorch/pytorch/issues/491", "id": 201763725, "node_id": "MDU6SXNzdWUyMDE3NjM3MjU=", "number": 491, "title": "Implement Broadcasting with exact semantics as NumPy", "user": {"login": "wiseodd", "id": 2296722, "node_id": "MDQ6VXNlcjIyOTY3MjI=", "avatar_url": "https://avatars2.githubusercontent.com/u/2296722?v=4", "gravatar_id": "", "url": "https://api.github.com/users/wiseodd", "html_url": "https://github.com/wiseodd", "followers_url": "https://api.github.com/users/wiseodd/followers", "following_url": "https://api.github.com/users/wiseodd/following{/other_user}", "gists_url": "https://api.github.com/users/wiseodd/gists{/gist_id}", "starred_url": "https://api.github.com/users/wiseodd/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/wiseodd/subscriptions", "organizations_url": "https://api.github.com/users/wiseodd/orgs", "repos_url": "https://api.github.com/users/wiseodd/repos", "events_url": "https://api.github.com/users/wiseodd/events{/privacy}", "received_events_url": "https://api.github.com/users/wiseodd/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 586699385, "node_id": "MDU6TGFiZWw1ODY2OTkzODU=", "url": "https://api.github.com/repos/pytorch/pytorch/labels/24hr+", "name": "24hr+", "color": "d4a5d9", "default": false}, {"id": 424131849, "node_id": "MDU6TGFiZWw0MjQxMzE4NDk=", "url": "https://api.github.com/repos/pytorch/pytorch/labels/enhancement", "name": "enhancement", "color": "84b6eb", "default": true}, {"id": 443484050, "node_id": "MDU6TGFiZWw0NDM0ODQwNTA=", "url": "https://api.github.com/repos/pytorch/pytorch/labels/medium%20priority", "name": "medium priority", "color": "fbca04", "default": false}], "state": "closed", "locked": false, "assignee": {"login": "gchanan", "id": 3768583, "node_id": "MDQ6VXNlcjM3Njg1ODM=", "avatar_url": "https://avatars2.githubusercontent.com/u/3768583?v=4", "gravatar_id": "", "url": "https://api.github.com/users/gchanan", "html_url": "https://github.com/gchanan", "followers_url": "https://api.github.com/users/gchanan/followers", "following_url": "https://api.github.com/users/gchanan/following{/other_user}", "gists_url": "https://api.github.com/users/gchanan/gists{/gist_id}", "starred_url": "https://api.github.com/users/gchanan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/gchanan/subscriptions", "organizations_url": "https://api.github.com/users/gchanan/orgs", "repos_url": "https://api.github.com/users/gchanan/repos", "events_url": "https://api.github.com/users/gchanan/events{/privacy}", "received_events_url": "https://api.github.com/users/gchanan/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "gchanan", "id": 3768583, "node_id": "MDQ6VXNlcjM3Njg1ODM=", "avatar_url": "https://avatars2.githubusercontent.com/u/3768583?v=4", "gravatar_id": "", "url": "https://api.github.com/users/gchanan", "html_url": "https://github.com/gchanan", "followers_url": "https://api.github.com/users/gchanan/followers", "following_url": "https://api.github.com/users/gchanan/following{/other_user}", "gists_url": "https://api.github.com/users/gchanan/gists{/gist_id}", "starred_url": "https://api.github.com/users/gchanan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/gchanan/subscriptions", "organizations_url": "https://api.github.com/users/gchanan/orgs", "repos_url": "https://api.github.com/users/gchanan/repos", "events_url": "https://api.github.com/users/gchanan/events{/privacy}", "received_events_url": "https://api.github.com/users/gchanan/received_events", "type": "User", "site_admin": false}], "milestone": {"url": "https://api.github.com/repos/pytorch/pytorch/milestones/2", "html_url": "https://github.com/pytorch/pytorch/milestone/2", "labels_url": "https://api.github.com/repos/pytorch/pytorch/milestones/2/labels", "id": 2536200, "node_id": "MDk6TWlsZXN0b25lMjUzNjIwMA==", "number": 2, "title": "v0.2", "description": "", "creator": {"login": "apaszke", "id": 4583066, "node_id": "MDQ6VXNlcjQ1ODMwNjY=", "avatar_url": "https://avatars3.githubusercontent.com/u/4583066?v=4", "gravatar_id": "", "url": "https://api.github.com/users/apaszke", "html_url": "https://github.com/apaszke", "followers_url": "https://api.github.com/users/apaszke/followers", "following_url": "https://api.github.com/users/apaszke/following{/other_user}", "gists_url": "https://api.github.com/users/apaszke/gists{/gist_id}", "starred_url": "https://api.github.com/users/apaszke/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/apaszke/subscriptions", "organizations_url": "https://api.github.com/users/apaszke/orgs", "repos_url": "https://api.github.com/users/apaszke/repos", "events_url": "https://api.github.com/users/apaszke/events{/privacy}", "received_events_url": "https://api.github.com/users/apaszke/received_events", "type": "User", "site_admin": false}, "open_issues": 2, "closed_issues": 34, "state": "closed", "created_at": "2017-05-22T18:19:28Z", "updated_at": "2018-08-06T21:16:06Z", "due_on": "2017-06-04T07:00:00Z", "closed_at": "2018-08-06T21:16:06Z"}, "comments": 14, "created_at": "2017-01-19T04:44:13Z", "updated_at": "2017-06-07T23:08:20Z", "closed_at": "2017-06-07T23:08:20Z", "author_association": "NONE", "body_html": "<p>I'm not familiar with Torch and its behavior, but in numpy, one can do this:</p>\n<div class=\"highlight highlight-source-python\"><pre>X <span class=\"pl-k\">=</span> np.random.randn(<span class=\"pl-c1\">100</span>, <span class=\"pl-c1\">10</span>)\nW <span class=\"pl-k\">=</span> np.random.randn(<span class=\"pl-c1\">10</span>, <span class=\"pl-c1\">64</span>)\nb <span class=\"pl-k\">=</span> np.ones(<span class=\"pl-c1\">64</span>)\nz <span class=\"pl-k\">=</span> X <span class=\"pl-k\">@</span> W <span class=\"pl-k\">+</span> b <span class=\"pl-c\"><span class=\"pl-c\">#</span> Works</span></pre></div>\n<p>However the similar operation fails in pytorch:</p>\n<div class=\"highlight highlight-source-python\"><pre>X <span class=\"pl-k\">=</span> torch.randn(<span class=\"pl-c1\">100</span>, <span class=\"pl-c1\">10</span>)\nW <span class=\"pl-k\">=</span> torch.randn(<span class=\"pl-c1\">10</span>, <span class=\"pl-c1\">64</span>)\nb <span class=\"pl-k\">=</span> torch.ones(<span class=\"pl-c1\">64</span>)\nz <span class=\"pl-k\">=</span> X <span class=\"pl-k\">@</span> W <span class=\"pl-k\">+</span> b <span class=\"pl-c\"><span class=\"pl-c\">#</span> Error, cannot add tensor of size [100, 64] and [64]</span></pre></div>\n<p>The message I got:</p>\n<pre><code>RuntimeError: inconsistent tensor size at /Users/soumith/anaconda/conda-bld/pytorch-0.1.6_1484756295864/work/torch/lib/TH/generic/THTensorMath.c:601\n</code></pre>\n<p>Is this the expected behavior? If so, what is the preferred way to do the bias addition in pytorch?</p>", "body_text": "I'm not familiar with Torch and its behavior, but in numpy, one can do this:\nX = np.random.randn(100, 10)\nW = np.random.randn(10, 64)\nb = np.ones(64)\nz = X @ W + b # Works\nHowever the similar operation fails in pytorch:\nX = torch.randn(100, 10)\nW = torch.randn(10, 64)\nb = torch.ones(64)\nz = X @ W + b # Error, cannot add tensor of size [100, 64] and [64]\nThe message I got:\nRuntimeError: inconsistent tensor size at /Users/soumith/anaconda/conda-bld/pytorch-0.1.6_1484756295864/work/torch/lib/TH/generic/THTensorMath.c:601\n\nIs this the expected behavior? If so, what is the preferred way to do the bias addition in pytorch?", "body": "I'm not familiar with Torch and its behavior, but in numpy, one can do this:\r\n\r\n``` python\r\nX = np.random.randn(100, 10)\r\nW = np.random.randn(10, 64)\r\nb = np.ones(64)\r\nz = X @ W + b # Works\r\n```\r\n\r\nHowever the similar operation fails in pytorch:\r\n\r\n``` python\r\nX = torch.randn(100, 10)\r\nW = torch.randn(10, 64)\r\nb = torch.ones(64)\r\nz = X @ W + b # Error, cannot add tensor of size [100, 64] and [64]\r\n```\r\n\r\nThe message I got:\r\n```\r\nRuntimeError: inconsistent tensor size at /Users/soumith/anaconda/conda-bld/pytorch-0.1.6_1484756295864/work/torch/lib/TH/generic/THTensorMath.c:601\r\n```\r\n\r\nIs this the expected behavior? If so, what is the preferred way to do the bias addition in pytorch?"}