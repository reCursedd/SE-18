{"url": "https://api.github.com/repos/pytorch/pytorch/issues/comments/273681742", "html_url": "https://github.com/pytorch/pytorch/issues/491#issuecomment-273681742", "issue_url": "https://api.github.com/repos/pytorch/pytorch/issues/491", "id": 273681742, "node_id": "MDEyOklzc3VlQ29tbWVudDI3MzY4MTc0Mg==", "user": {"login": "soumith", "id": 1310570, "node_id": "MDQ6VXNlcjEzMTA1NzA=", "avatar_url": "https://avatars0.githubusercontent.com/u/1310570?v=4", "gravatar_id": "", "url": "https://api.github.com/users/soumith", "html_url": "https://github.com/soumith", "followers_url": "https://api.github.com/users/soumith/followers", "following_url": "https://api.github.com/users/soumith/following{/other_user}", "gists_url": "https://api.github.com/users/soumith/gists{/gist_id}", "starred_url": "https://api.github.com/users/soumith/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/soumith/subscriptions", "organizations_url": "https://api.github.com/users/soumith/orgs", "repos_url": "https://api.github.com/users/soumith/repos", "events_url": "https://api.github.com/users/soumith/events{/privacy}", "received_events_url": "https://api.github.com/users/soumith/received_events", "type": "User", "site_admin": false}, "created_at": "2017-01-19T04:51:46Z", "updated_at": "2017-01-19T04:51:46Z", "author_association": "MEMBER", "body_html": "<p>numpy has broadcasting semantics implemented.<br>\nIn torch, we plan to add broadcasting, but we haven't yet done so.</p>\n<p>For now, you can use the <a href=\"http://pytorch.org/docs/tensors.html?highlight=repeat#torch.Tensor.repeat\" rel=\"nofollow\">repeat</a> function to expand ahead:</p>\n<pre><code>X = torch.randn(100, 10)\nW = torch.randn(10, 64)\nb = torch.ones(64)\nz = X @ W + b.repeat(X.size(0), 1)\n</code></pre>", "body_text": "numpy has broadcasting semantics implemented.\nIn torch, we plan to add broadcasting, but we haven't yet done so.\nFor now, you can use the repeat function to expand ahead:\nX = torch.randn(100, 10)\nW = torch.randn(10, 64)\nb = torch.ones(64)\nz = X @ W + b.repeat(X.size(0), 1)", "body": "numpy has broadcasting semantics implemented.\r\nIn torch, we plan to add broadcasting, but we haven't yet done so.\r\n\r\nFor now, you can use the [repeat](http://pytorch.org/docs/tensors.html?highlight=repeat#torch.Tensor.repeat) function to expand ahead:\r\n\r\n```\r\nX = torch.randn(100, 10)\r\nW = torch.randn(10, 64)\r\nb = torch.ones(64)\r\nz = X @ W + b.repeat(X.size(0), 1)\r\n```"}