{"url": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/180933576", "pull_request_review_id": 111444012, "id": 180933576, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MDkzMzU3Ng==", "diff_hunk": "@@ -723,100 +782,83 @@ struct to_ir {\n     }\n   }\n \n-  template <typename Trees>\n-  std::vector<Value*> getValues(const Trees& trees, bool maybe_unpack=false) {\n+  std::vector<Value*> getValues(TreeList trees, bool maybe_unpack=false) {\n     std::vector<Value*> values;\n     for (const auto& tree : trees) {\n-      CallsiteDescriptor cd{1, maybe_unpack};\n-      auto outputs = emitExpr(tree, cd);\n-      if (!maybe_unpack && outputs.size() > 1) {\n-        throw ErrorReport(tree) << \"Expr unexpectedly returned more than 1 value.\"\n-                                << \" File a bug report.\";\n-      }\n-      for (auto* v : outputs) {\n-        values.push_back(v);\n+      if(maybe_unpack && tree->kind() == TK_STARRED) {", "path": "torch/csrc/jit/script/compiler.cpp", "position": 498, "original_position": 498, "commit_id": "ca6e043cf9a5d6baa53815864b848deef5a0211f", "original_commit_id": "11c8a6a0223a393485a3832531a44467fc42d8a5", "user": {"login": "zdevito", "id": 370202, "node_id": "MDQ6VXNlcjM3MDIwMg==", "avatar_url": "https://avatars0.githubusercontent.com/u/370202?v=4", "gravatar_id": "", "url": "https://api.github.com/users/zdevito", "html_url": "https://github.com/zdevito", "followers_url": "https://api.github.com/users/zdevito/followers", "following_url": "https://api.github.com/users/zdevito/following{/other_user}", "gists_url": "https://api.github.com/users/zdevito/gists{/gist_id}", "starred_url": "https://api.github.com/users/zdevito/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/zdevito/subscriptions", "organizations_url": "https://api.github.com/users/zdevito/orgs", "repos_url": "https://api.github.com/users/zdevito/repos", "events_url": "https://api.github.com/users/zdevito/events{/privacy}", "received_events_url": "https://api.github.com/users/zdevito/received_events", "type": "User", "site_admin": false}, "body": "There is only a single check in any case:\r\n1. when maybe_unpack is false, we just call `emitExpr` which calls `emitSimpleExpr` which will fail for TK_STARRED with a useful error for us to fix the compiler.\r\n2. when maybe_unpack is true, then we handle the TK_STARRED here.", "created_at": "2018-04-12T00:09:58Z", "updated_at": "2018-11-23T15:42:17Z", "html_url": "https://github.com/pytorch/pytorch/pull/6492#discussion_r180933576", "pull_request_url": "https://api.github.com/repos/pytorch/pytorch/pulls/6492", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/180933576"}, "html": {"href": "https://github.com/pytorch/pytorch/pull/6492#discussion_r180933576"}, "pull_request": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/6492"}}, "body_html": "<p>There is only a single check in any case:</p>\n<ol>\n<li>when maybe_unpack is false, we just call <code>emitExpr</code> which calls <code>emitSimpleExpr</code> which will fail for TK_STARRED with a useful error for us to fix the compiler.</li>\n<li>when maybe_unpack is true, then we handle the TK_STARRED here.</li>\n</ol>", "body_text": "There is only a single check in any case:\n\nwhen maybe_unpack is false, we just call emitExpr which calls emitSimpleExpr which will fail for TK_STARRED with a useful error for us to fix the compiler.\nwhen maybe_unpack is true, then we handle the TK_STARRED here.", "in_reply_to_id": 180805996}