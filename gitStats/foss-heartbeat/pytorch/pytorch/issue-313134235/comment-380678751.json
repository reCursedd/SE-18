{"url": "https://api.github.com/repos/pytorch/pytorch/issues/comments/380678751", "html_url": "https://github.com/pytorch/pytorch/pull/6492#issuecomment-380678751", "issue_url": "https://api.github.com/repos/pytorch/pytorch/issues/6492", "id": 380678751, "node_id": "MDEyOklzc3VlQ29tbWVudDM4MDY3ODc1MQ==", "user": {"login": "zdevito", "id": 370202, "node_id": "MDQ6VXNlcjM3MDIwMg==", "avatar_url": "https://avatars0.githubusercontent.com/u/370202?v=4", "gravatar_id": "", "url": "https://api.github.com/users/zdevito", "html_url": "https://github.com/zdevito", "followers_url": "https://api.github.com/users/zdevito/followers", "following_url": "https://api.github.com/users/zdevito/following{/other_user}", "gists_url": "https://api.github.com/users/zdevito/gists{/gist_id}", "starred_url": "https://api.github.com/users/zdevito/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/zdevito/subscriptions", "organizations_url": "https://api.github.com/users/zdevito/orgs", "repos_url": "https://api.github.com/users/zdevito/repos", "events_url": "https://api.github.com/users/zdevito/events{/privacy}", "received_events_url": "https://api.github.com/users/zdevito/received_events", "type": "User", "site_admin": false}, "created_at": "2018-04-12T05:01:53Z", "updated_at": "2018-04-12T05:01:53Z", "author_association": "CONTRIBUTOR", "body_html": "<div class=\"email-fragment\">I think it solves it by not attempting to do any conversions to the inputs\nlist, and just binds it to type T. That way it works as long as you can\nusing `for` on `inputs`.</div>\n<span class=\"email-hidden-toggle\"><a href=\"#\">\u2026</a></span><div class=\"email-hidden-reply\">\n<div class=\"email-quoted-reply\">On Wed, Apr 11, 2018 at 8:59 PM, Edward Z. Yang ***@***.***&gt; wrote:\n ***@***.**** commented on this pull request.\n ------------------------------\n\n In torch/csrc/utils/functional.h\n &lt;<a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load issue title\" data-id=\"313134235\" data-permission-text=\"Issue title is private\" data-url=\"https://github.com/pytorch/pytorch/issues/6492\" href=\"https://github.com/pytorch/pytorch/pull/6492#discussion_r180959429\">#6492 (comment)</a>&gt;:\n\n &gt; @@ -18,41 +14,26 @@ namespace torch {\n  // No explicit template parameters are required.\n\n  // Overload for explicit function and ArrayRef\n -template&lt;typename F, typename T, typename R = typename std::result_of&lt;F(T)&gt;::type&gt;\n -inline std::vector&lt;R&gt; fmap(at::ArrayRef&lt;T&gt; inputs, const F&amp; fn) {\n -  std::vector&lt;R&gt; r;\n +template&lt;typename F, typename T&gt;\n +inline auto fmap(const T&amp; inputs, const F&amp; fn) -&gt; std::vector&lt;decltype(fn(*inputs.begin()))&gt; {\n +  std::vector&lt;decltype(fn(*inputs.begin()))&gt; r;\n\n If you still have this change paged in your head, I am curious to know how\n this solves the ambiguous conversion problem that the code previously had :)\n\n \u2014\n You are receiving this because you authored the thread.\n Reply to this email directly, view it on GitHub\n &lt;<a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load issue title\" data-id=\"313134235\" data-permission-text=\"Issue title is private\" data-url=\"https://github.com/pytorch/pytorch/issues/6492\" href=\"https://github.com/pytorch/pytorch/pull/6492#pullrequestreview-111473149\">#6492 (review)</a>&gt;,\n or mute the thread\n &lt;<a href=\"https://github.com/notifications/unsubscribe-auth/AAWmGlM0XlY6uiS4NI1U2_odgwv_X8VEks5tntETgaJpZM4TPMmH\">https://github.com/notifications/unsubscribe-auth/AAWmGlM0XlY6uiS4NI1U2_odgwv_X8VEks5tntETgaJpZM4TPMmH</a>&gt;\n .\n</div>\n<div class=\"email-fragment\"></div>\n</div>", "body_text": "I think it solves it by not attempting to do any conversions to the inputs\nlist, and just binds it to type T. That way it works as long as you can\nusing `for` on `inputs`.\n\u2026\nOn Wed, Apr 11, 2018 at 8:59 PM, Edward Z. Yang ***@***.***> wrote:\n ***@***.**** commented on this pull request.\n ------------------------------\n\n In torch/csrc/utils/functional.h\n <#6492 (comment)>:\n\n > @@ -18,41 +14,26 @@ namespace torch {\n  // No explicit template parameters are required.\n\n  // Overload for explicit function and ArrayRef\n -template<typename F, typename T, typename R = typename std::result_of<F(T)>::type>\n -inline std::vector<R> fmap(at::ArrayRef<T> inputs, const F& fn) {\n -  std::vector<R> r;\n +template<typename F, typename T>\n +inline auto fmap(const T& inputs, const F& fn) -> std::vector<decltype(fn(*inputs.begin()))> {\n +  std::vector<decltype(fn(*inputs.begin()))> r;\n\n If you still have this change paged in your head, I am curious to know how\n this solves the ambiguous conversion problem that the code previously had :)\n\n \u2014\n You are receiving this because you authored the thread.\n Reply to this email directly, view it on GitHub\n <#6492 (review)>,\n or mute the thread\n <https://github.com/notifications/unsubscribe-auth/AAWmGlM0XlY6uiS4NI1U2_odgwv_X8VEks5tntETgaJpZM4TPMmH>\n .", "body": "I think it solves it by not attempting to do any conversions to the inputs\nlist, and just binds it to type T. That way it works as long as you can\nusing `for` on `inputs`.\n\nOn Wed, Apr 11, 2018 at 8:59 PM, Edward Z. Yang <notifications@github.com>\nwrote:\n\n> *@ezyang* commented on this pull request.\n> ------------------------------\n>\n> In torch/csrc/utils/functional.h\n> <https://github.com/pytorch/pytorch/pull/6492#discussion_r180959429>:\n>\n> > @@ -18,41 +14,26 @@ namespace torch {\n>  // No explicit template parameters are required.\n>\n>  // Overload for explicit function and ArrayRef\n> -template<typename F, typename T, typename R = typename std::result_of<F(T)>::type>\n> -inline std::vector<R> fmap(at::ArrayRef<T> inputs, const F& fn) {\n> -  std::vector<R> r;\n> +template<typename F, typename T>\n> +inline auto fmap(const T& inputs, const F& fn) -> std::vector<decltype(fn(*inputs.begin()))> {\n> +  std::vector<decltype(fn(*inputs.begin()))> r;\n>\n> If you still have this change paged in your head, I am curious to know how\n> this solves the ambiguous conversion problem that the code previously had :)\n>\n> \u2014\n> You are receiving this because you authored the thread.\n> Reply to this email directly, view it on GitHub\n> <https://github.com/pytorch/pytorch/pull/6492#pullrequestreview-111473149>,\n> or mute the thread\n> <https://github.com/notifications/unsubscribe-auth/AAWmGlM0XlY6uiS4NI1U2_odgwv_X8VEks5tntETgaJpZM4TPMmH>\n> .\n>\n"}