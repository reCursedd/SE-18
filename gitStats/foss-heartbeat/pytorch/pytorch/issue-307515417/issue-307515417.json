{"url": "https://api.github.com/repos/pytorch/pytorch/issues/5931", "repository_url": "https://api.github.com/repos/pytorch/pytorch", "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/5931/labels{/name}", "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/5931/comments", "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/5931/events", "html_url": "https://github.com/pytorch/pytorch/pull/5931", "id": 307515417, "node_id": "MDExOlB1bGxSZXF1ZXN0MTc2NjgyMjYz", "number": 5931, "title": "[distributions] Fix scalar bugs in torch.distributions.transforms etc.", "user": {"login": "fritzo", "id": 648532, "node_id": "MDQ6VXNlcjY0ODUzMg==", "avatar_url": "https://avatars0.githubusercontent.com/u/648532?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fritzo", "html_url": "https://github.com/fritzo", "followers_url": "https://api.github.com/users/fritzo/followers", "following_url": "https://api.github.com/users/fritzo/following{/other_user}", "gists_url": "https://api.github.com/users/fritzo/gists{/gist_id}", "starred_url": "https://api.github.com/users/fritzo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fritzo/subscriptions", "organizations_url": "https://api.github.com/users/fritzo/orgs", "repos_url": "https://api.github.com/users/fritzo/repos", "events_url": "https://api.github.com/users/fritzo/events{/privacy}", "received_events_url": "https://api.github.com/users/fritzo/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-03-22T05:54:38Z", "updated_at": "2018-11-23T15:41:06Z", "closed_at": "2018-03-25T11:33:32Z", "author_association": "CONTRIBUTOR", "pull_request": {"url": "https://api.github.com/repos/pytorch/pytorch/pulls/5931", "html_url": "https://github.com/pytorch/pytorch/pull/5931", "diff_url": "https://github.com/pytorch/pytorch/pull/5931.diff", "patch_url": "https://github.com/pytorch/pytorch/pull/5931.patch"}, "body_html": "<p>This attempts to fix a number of edge-case bugs in <code>Transforms</code> and <code>ConstraintRegistry</code>:</p>\n<ol>\n<li>\n<p><del>Avoids <code>broadcast_all()</code> on statically defined transforms, since these must work with all tensor types (float/double, cpu/cuda), and often are defined only via integers, e.g. <code>AffineTransform(0, -1)</code>. This PR aims to support <code>numbers.Number</code> as <code>.loc</code> and <code>.scale</code> of <code>AffineTransform</code>.</del><br>\nEDIT This will be addressed in a later PR.</p>\n</li>\n<li>\n<p>Support scalars in the <code>.log_bas_det_jacobian()</code> method of <code>identity_transform = ComposeTransform([])</code>. This had not been updated since PyTorch supported scalars.</p>\n</li>\n</ol>\n<p>This also updates <code>test_distributions.py</code> to use more modern PyTorch syntax, and fixes some broken documentation.</p>\n<h2>Tested</h2>\n<ul>\n<li>added a few <code>Transform</code>s and <code>TransformedDistribution</code>s with parameters that are <code>numbers.Number</code></li>\n</ul>", "body_text": "This attempts to fix a number of edge-case bugs in Transforms and ConstraintRegistry:\n\n\nAvoids broadcast_all() on statically defined transforms, since these must work with all tensor types (float/double, cpu/cuda), and often are defined only via integers, e.g. AffineTransform(0, -1). This PR aims to support numbers.Number as .loc and .scale of AffineTransform.\nEDIT This will be addressed in a later PR.\n\n\nSupport scalars in the .log_bas_det_jacobian() method of identity_transform = ComposeTransform([]). This had not been updated since PyTorch supported scalars.\n\n\nThis also updates test_distributions.py to use more modern PyTorch syntax, and fixes some broken documentation.\nTested\n\nadded a few Transforms and TransformedDistributions with parameters that are numbers.Number", "body": "This attempts to fix a number of edge-case bugs in `Transforms` and `ConstraintRegistry`:\r\n\r\n1. ~~Avoids `broadcast_all()` on statically defined transforms, since these must work with all tensor types (float/double, cpu/cuda), and often are defined only via integers, e.g. `AffineTransform(0, -1)`. This PR aims to support `numbers.Number` as `.loc` and `.scale` of `AffineTransform`.~~\r\n  EDIT This will be addressed in a later PR.\r\n\r\n2. Support scalars in the `.log_bas_det_jacobian()` method of `identity_transform = ComposeTransform([])`. This had not been updated since PyTorch supported scalars.\r\n\r\nThis also updates `test_distributions.py` to use more modern PyTorch syntax, and fixes some broken documentation. \r\n\r\n## Tested\r\n\r\n- added a few `Transform`s and `TransformedDistribution`s with parameters that are `numbers.Number`"}