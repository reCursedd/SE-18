{"url": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/176361224", "pull_request_review_id": 106044898, "id": 176361224, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE3NjM2MTIyNA==", "diff_hunk": "@@ -354,19 +355,34 @@ class AffineTransform(Transform):\n \n     def __init__(self, loc, scale, event_dim=0, cache_size=0):\n         super(AffineTransform, self).__init__(cache_size=cache_size)\n-        self.loc, self.scale = broadcast_all(loc, scale)\n+        self.loc = loc\n+        self.scale = scale\n         self.event_dim = event_dim\n \n     def __eq__(self, other):\n         if not isinstance(other, AffineTransform):\n             return False\n-        result = self.loc.eq(other.loc).all() and self.scale.eq(other.scale).all()\n-        if isinstance(result, Variable):\n-            result = result.data.view(-1)[0]\n-        return result\n+\n+        if isinstance(self.loc, numbers.Number) and isinstance(other.loc, numbers.Number):\n+            if self.loc != other.loc:\n+                return False\n+        else:\n+            if (self.loc != other.loc).any().item():\n+                return False\n+\n+        if isinstance(self.scale, numbers.Number) and isinstance(other.scale, numbers.Number):\n+            if self.scale != other.scale:\n+                return False\n+        else:\n+            if (self.scale != other.scale).any().item():\n+                return False\n+\n+        return True\n \n     @property\n     def sign(self):\n+        if isinstance(self.scale, numbers.Number):\n+            return (self.scale > 0) - (self.scale < 0)", "path": "torch/distributions/transforms.py", "position": null, "original_position": 57, "commit_id": "5940a3017e6892f01328dc02c6afb73352e387ba", "original_commit_id": "3a25db73c8fa4cf5fe53705bb392c711dd95b980", "user": {"login": "apaszke", "id": 4583066, "node_id": "MDQ6VXNlcjQ1ODMwNjY=", "avatar_url": "https://avatars3.githubusercontent.com/u/4583066?v=4", "gravatar_id": "", "url": "https://api.github.com/users/apaszke", "html_url": "https://github.com/apaszke", "followers_url": "https://api.github.com/users/apaszke/followers", "following_url": "https://api.github.com/users/apaszke/following{/other_user}", "gists_url": "https://api.github.com/users/apaszke/gists{/gist_id}", "starred_url": "https://api.github.com/users/apaszke/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/apaszke/subscriptions", "organizations_url": "https://api.github.com/users/apaszke/orgs", "repos_url": "https://api.github.com/users/apaszke/repos", "events_url": "https://api.github.com/users/apaszke/events{/privacy}", "received_events_url": "https://api.github.com/users/apaszke/received_events", "type": "User", "site_admin": false}, "body": "Uh please don\u2019t do arithmetic on Boolean values.", "created_at": "2018-03-22T09:55:06Z", "updated_at": "2018-11-23T15:41:01Z", "html_url": "https://github.com/pytorch/pytorch/pull/5931#discussion_r176361224", "pull_request_url": "https://api.github.com/repos/pytorch/pytorch/pulls/5931", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/176361224"}, "html": {"href": "https://github.com/pytorch/pytorch/pull/5931#discussion_r176361224"}, "pull_request": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/5931"}}, "body_html": "<p>Uh please don\u2019t do arithmetic on Boolean values.</p>", "body_text": "Uh please don\u2019t do arithmetic on Boolean values."}