{"url": "https://api.github.com/repos/pytorch/pytorch/issues/comments/392178228", "html_url": "https://github.com/pytorch/pytorch/issues/7860#issuecomment-392178228", "issue_url": "https://api.github.com/repos/pytorch/pytorch/issues/7860", "id": 392178228, "node_id": "MDEyOklzc3VlQ29tbWVudDM5MjE3ODIyOA==", "user": {"login": "colesbury", "id": 655866, "node_id": "MDQ6VXNlcjY1NTg2Ng==", "avatar_url": "https://avatars1.githubusercontent.com/u/655866?v=4", "gravatar_id": "", "url": "https://api.github.com/users/colesbury", "html_url": "https://github.com/colesbury", "followers_url": "https://api.github.com/users/colesbury/followers", "following_url": "https://api.github.com/users/colesbury/following{/other_user}", "gists_url": "https://api.github.com/users/colesbury/gists{/gist_id}", "starred_url": "https://api.github.com/users/colesbury/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/colesbury/subscriptions", "organizations_url": "https://api.github.com/users/colesbury/orgs", "repos_url": "https://api.github.com/users/colesbury/repos", "events_url": "https://api.github.com/users/colesbury/events{/privacy}", "received_events_url": "https://api.github.com/users/colesbury/received_events", "type": "User", "site_admin": false}, "created_at": "2018-05-25T20:39:56Z", "updated_at": "2018-05-25T20:40:13Z", "author_association": "MEMBER", "body_html": "<p>No -- the protection is only to detect modifications to (hidden) internal values saved for backwards. It's does not throw exceptions on explicit modifications to variables.</p>\n<p>For example, this will throw an exception:</p>\n<div class=\"highlight highlight-source-python\"><pre>x <span class=\"pl-k\">=</span> torch.randn(<span class=\"pl-c1\">1</span>, <span class=\"pl-v\">requires_grad</span><span class=\"pl-k\">=</span><span class=\"pl-c1\">True</span>)\ny <span class=\"pl-k\">=</span> torch.randn(<span class=\"pl-c1\">1</span>, <span class=\"pl-v\">requires_grad</span><span class=\"pl-k\">=</span><span class=\"pl-c1\">True</span>)\nz <span class=\"pl-k\">=</span> x <span class=\"pl-k\">*</span> y\nx_detach <span class=\"pl-k\">=</span> x.detach()\nx_detach.zero_()\nz.backward()   <span class=\"pl-c\"><span class=\"pl-c\">#</span> throws</span></pre></div>\n<p>This will NOT throw an exception</p>\n<div class=\"highlight highlight-source-python\"><pre>x <span class=\"pl-k\">=</span> torch.randn(<span class=\"pl-c1\">1</span>, <span class=\"pl-v\">requires_grad</span><span class=\"pl-k\">=</span><span class=\"pl-c1\">True</span>)\ny <span class=\"pl-k\">=</span> torch.randn(<span class=\"pl-c1\">1</span>, <span class=\"pl-v\">requires_grad</span><span class=\"pl-k\">=</span><span class=\"pl-c1\">True</span>)\nz <span class=\"pl-k\">=</span> x <span class=\"pl-k\">*</span> y\nz_detach <span class=\"pl-k\">=</span> z.detach()\nz_detach.zero_()\nz.backward()   <span class=\"pl-c\"><span class=\"pl-c\">#</span> does not throw</span></pre></div>\n<p>In the first case, x is saved internally needed to compute the gradient of dz/dy. In the second case, modifying z directly does not cause an exception to be thrown.</p>", "body_text": "No -- the protection is only to detect modifications to (hidden) internal values saved for backwards. It's does not throw exceptions on explicit modifications to variables.\nFor example, this will throw an exception:\nx = torch.randn(1, requires_grad=True)\ny = torch.randn(1, requires_grad=True)\nz = x * y\nx_detach = x.detach()\nx_detach.zero_()\nz.backward()   # throws\nThis will NOT throw an exception\nx = torch.randn(1, requires_grad=True)\ny = torch.randn(1, requires_grad=True)\nz = x * y\nz_detach = z.detach()\nz_detach.zero_()\nz.backward()   # does not throw\nIn the first case, x is saved internally needed to compute the gradient of dz/dy. In the second case, modifying z directly does not cause an exception to be thrown.", "body": "No -- the protection is only to detect modifications to (hidden) internal values saved for backwards. It's does not throw exceptions on explicit modifications to variables.\r\n\r\nFor example, this will throw an exception:\r\n\r\n```python\r\nx = torch.randn(1, requires_grad=True)\r\ny = torch.randn(1, requires_grad=True)\r\nz = x * y\r\nx_detach = x.detach()\r\nx_detach.zero_()\r\nz.backward()   # throws\r\n```\r\n\r\nThis will NOT throw an exception\r\n\r\n\r\n```python\r\nx = torch.randn(1, requires_grad=True)\r\ny = torch.randn(1, requires_grad=True)\r\nz = x * y\r\nz_detach = z.detach()\r\nz_detach.zero_()\r\nz.backward()   # does not throw\r\n```\r\n\r\nIn the first case, x is saved internally needed to compute the gradient of dz/dy. In the second case, modifying z directly does not cause an exception to be thrown."}