{"url": "https://api.github.com/repos/pytorch/pytorch/issues/3963", "repository_url": "https://api.github.com/repos/pytorch/pytorch", "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/3963/labels{/name}", "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/3963/comments", "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/3963/events", "html_url": "https://github.com/pytorch/pytorch/issues/3963", "id": 278436626, "node_id": "MDU6SXNzdWUyNzg0MzY2MjY=", "number": 3963, "title": "Failed to compile ATen_generated_NativeFunctionsCuda.cu on Ubuntu 16.10", "user": {"login": "scottyyih", "id": 5283913, "node_id": "MDQ6VXNlcjUyODM5MTM=", "avatar_url": "https://avatars1.githubusercontent.com/u/5283913?v=4", "gravatar_id": "", "url": "https://api.github.com/users/scottyyih", "html_url": "https://github.com/scottyyih", "followers_url": "https://api.github.com/users/scottyyih/followers", "following_url": "https://api.github.com/users/scottyyih/following{/other_user}", "gists_url": "https://api.github.com/users/scottyyih/gists{/gist_id}", "starred_url": "https://api.github.com/users/scottyyih/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/scottyyih/subscriptions", "organizations_url": "https://api.github.com/users/scottyyih/orgs", "repos_url": "https://api.github.com/users/scottyyih/repos", "events_url": "https://api.github.com/users/scottyyih/events{/privacy}", "received_events_url": "https://api.github.com/users/scottyyih/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2017-12-01T11:24:37Z", "updated_at": "2018-06-26T04:08:22Z", "closed_at": "2018-06-26T04:08:22Z", "author_association": "NONE", "body_html": "<p>[  0%] Building NVCC (Device) object src/ATen/CMakeFiles/ATen.dir/native/cuda/ATen_generated_NativeFunctionsCuda.cu.o<br>\n/usr/include/c++/6/tuple: In instantiation of \\u2018static constexpr bool std::_TC&lt;, _Elements&gt;::_MoveConstructibleTuple() [with _UElements = {std::tuple&lt;at::Tensor&amp;, at::Tensor&amp;, at::Tensor&amp;&gt;}; bool  = true; _Elements = {at::Tensor&amp;, at::Tensor&amp;, at::Tensor&amp;}]\\u2019:<br>\n/usr/include/c++/6/tuple:626:248:   required by substitution of \\u2018template&lt;class ... _UElements, typename std::enable_if&lt;(((std::_TC&lt;(sizeof... (_UElements) == 1), at::Tensor&amp;, at::Tensor&amp;, at::Tensor&amp;&gt;::_NotSameTuple&lt;_UElements ...&gt;() &amp;&amp; std::_TC&lt;(1ul == sizeof... (_UElements)), at::Tensor&amp;, at::Tensor&amp;, at::Tensor&amp;&gt;::_MoveConstructibleTuple&lt;_UElements ...&gt;()) &amp;&amp; std::_TC&lt;(1ul == sizeof... (_UElements)), at::Tensor&amp;, at::Tensor&amp;, at::Tensor&amp;&gt;::_ImplicitlyMoveConvertibleTuple&lt;_UElements ...&gt;()) &amp;&amp; (3ul &gt;= 1)), bool&gt;::type  &gt; constexpr std::tuple&lt;  &gt;::tuple(_UElements&amp;&amp; ...) [with _UElements = {std::tuple&lt;at::Tensor&amp;, at::Tensor&amp;, at::Tensor&amp;&gt;}; typename std::enable_if&lt;(((std::_TC&lt;(sizeof... (_UElements) == 1), at::Tensor&amp;, at::Tensor&amp;, at::Tensor&amp;&gt;::_NotSameTuple&lt;_UElements ...&gt;() &amp;&amp; std::_TC&lt;(1ul == sizeof... (_UElements)), at::Tensor&amp;, at::Tensor&amp;, at::Tensor&amp;&gt;::_MoveConstructibleTuple&lt;_UElements ...&gt;()) &amp;&amp; std::_TC&lt;(1ul == sizeof... (_UElements)), at::Tensor&amp;, at::Tensor&amp;, at::Tensor&amp;&gt;::_ImplicitlyMoveConvertibleTuple&lt;_UElements ...&gt;()) &amp;&amp; (3ul &gt;= 1)), bool&gt;::type  = ]\\u2019<br>\n/home/scottyyi/MachineLearning/pytorch/pytorch/torch/lib/build/aten/src/ATen/ATen/Functions.h:1437:61:   required from here<br>\n/usr/include/c++/6/tuple:483:67: error: mismatched argument pack lengths while expanding \\u2018std::is_constructible&lt;_Elements, _UElements&amp;&amp;&gt;\\u2019<br>\nreturn _<em>and</em>&lt;is_constructible&lt;_Elements, _UElements&amp;&amp;&gt;...&gt;::value;<br>\n^~~~~<br>\n/usr/include/c++/6/tuple:484:1: error: body of constexpr function \\u2018static constexpr bool std::_TC&lt;, _Elements&gt;::_MoveConstructibleTuple() [with _UElements = {std::tuple&lt;at::Tensor&amp;, at::Tensor&amp;, at::Tensor&amp;&gt;}; bool  = true; _Elements = {at::Tensor&amp;, at::Tensor&amp;, at::Tensor&amp;}]\\u2019 not a return-statement<br>\n}<br>\n^<br>\n/usr/include/c++/6/tuple: In instantiation of \\u2018static constexpr bool std::_TC&lt;, _Elements&gt;::_ImplicitlyMoveConvertibleTuple() [with _UElements = {std::tuple&lt;at::Tensor&amp;, at::Tensor&amp;, at::Tensor&amp;&gt;}; bool  = true; _Elements = {at::Tensor&amp;, at::Tensor&amp;, at::Tensor&amp;}]\\u2019:<br>\n/usr/include/c++/6/tuple:626:362:   required by substitution of \\u2018template&lt;class ... _UElements, typename std::enable_if&lt;(((std::_TC&lt;(sizeof... (_UElements) == 1), at::Tensor&amp;, at::Tensor&amp;, at::Tensor&amp;&gt;::_NotSameTuple&lt;_UElements ...&gt;() &amp;&amp; std::_TC&lt;(1ul == sizeof... (_UElements)), at::Tensor&amp;, at::Tensor&amp;, at::Tensor&amp;&gt;::_MoveConstructibleTuple&lt;_UElements ...&gt;()) &amp;&amp; std::_TC&lt;(1ul == sizeof... (_UElements)), at::Tensor&amp;, at::Tensor&amp;, at::Tensor&amp;&gt;::_ImplicitlyMoveConvertibleTuple&lt;_UElements ...&gt;()) &amp;&amp; (3ul &gt;= 1)), bool&gt;::type  &gt; constexpr std::tuple&lt;  &gt;::tuple(_UElements&amp;&amp; ...) [with _UElements = {std::tuple&lt;at::Tensor&amp;, at::Tensor&amp;, at::Tensor&amp;&gt;}; typename std::enable_if&lt;(((std::_TC&lt;(sizeof... (_UElements) == 1), at::Tensor&amp;, at::Tensor&amp;, at::Tensor&amp;&gt;::_NotSameTuple&lt;_UElements ...&gt;() &amp;&amp; std::_TC&lt;(1ul == sizeof... (_UElements)), at::Tensor&amp;, at::Tensor&amp;, at::Tensor&amp;&gt;::_MoveConstructibleTuple&lt;_UElements ...&gt;()) &amp;&amp; std::_TC&lt;(1ul == sizeof... (_UElements)), at::Tensor&amp;, at::Tensor&amp;, at::Tensor&amp;&gt;::_ImplicitlyMoveConvertibleTuple&lt;_UElements ...&gt;()) &amp;&amp; (3ul &gt;= 1)), bool&gt;::type  = ]\\u2019<br>\n/home/scottyyi/MachineLearning/pytorch/pytorch/torch/lib/build/aten/src/ATen/ATen/Functions.h:1437:61:   required from here<br>\n/usr/include/c++/6/tuple:489:65: error: mismatched argument pack lengths while expanding \\u2018std::is_convertible&lt;_UElements&amp;&amp;, _Elements&gt;\\u2019<br>\nreturn _<em>and</em>&lt;is_convertible&lt;_UElements&amp;&amp;, _Elements&gt;...&gt;::value;<br>\n^~~~~<br>\n/usr/include/c++/6/tuple:490:1: error: body of constexpr function \\u2018static constexpr bool std::_TC&lt;, _Elements&gt;::_ImplicitlyMoveConvertibleTuple() [with _UElements = {std::tuple&lt;at::Tensor&amp;, at::Tensor&amp;, at::Tensor&amp;&gt;}; bool  = true; _Elements = {at::Tensor&amp;, at::Tensor&amp;, at::Tensor&amp;}]\\u2019 not a return-statement<br>\n}<br>\n^<br>\n/usr/include/c++/6/tuple: In instantiation of \\u2018static constexpr bool std::_TC&lt;, _Elements&gt;::_NonNestedTuple() [with _SrcTuple = const std::tuple&lt;at::Tensor&amp;, at::Tensor&amp;, at::Tensor&amp;&gt;&amp;; bool  = true; _Elements = {at::Tensor&amp;, at::Tensor&amp;, at::Tensor&amp;}]\\u2019:<br>\n/usr/include/c++/6/tuple:662:419:   required by substitution of \\u2018template&lt;class ... _UElements, class _Dummy, typename std::enable_if&lt;((std::_TC&lt;(1ul == sizeof... (_UElements)), at::Tensor&amp;, at::Tensor&amp;, at::Tensor&amp;&gt;::_ConstructibleTuple&lt;_UElements ...&gt;() &amp;&amp; std::_TC&lt;(1ul == sizeof... (_UElements)), at::Tensor&amp;, at::Tensor&amp;, at::Tensor&amp;&gt;::_ImplicitlyConvertibleTuple&lt;_UElements ...&gt;()) &amp;&amp; std::_TC&lt;(std::is_same&lt;_Dummy, void&gt;::value &amp;&amp; (1ul == 1)), at::Tensor&amp;, at::Tensor&amp;, at::Tensor&amp;&gt;::_NonNestedTuple&lt;const tuple&lt;_Elements ...&gt;&amp;&gt;()), bool&gt;::type  &gt; constexpr std::tuple&lt;  &gt;::tuple(const std::tuple&lt;_Args1 ...&gt;&amp;) [with _UElements = {at::Tensor&amp;, at::Tensor&amp;, at::Tensor&amp;}; _Dummy = void; typename std::enable_if&lt;((std::_TC&lt;(1ul == sizeof... (_UElements)), at::Tensor&amp;, at::Tensor&amp;, at::Tensor&amp;&gt;::_ConstructibleTuple&lt;_UElements ...&gt;() &amp;&amp; std::_TC&lt;(1ul == sizeof... (_UElements)), at::Tensor&amp;, at::Tensor&amp;, at::Tensor&amp;&gt;::_ImplicitlyConvertibleTuple&lt;_UElements ...&gt;()) &amp;&amp; std::_TC&lt;(std::is_same&lt;_Dummy, void&gt;::value &amp;&amp; (1ul == 1)), at::Tensor&amp;, at::Tensor&amp;, at::Tensor&amp;&gt;::_NonNestedTuple&lt;const tuple&lt;_Elements ...&gt;&amp;&gt;()), bool&gt;::type  = ]\\u2019<br>\n/home/scottyyi/MachineLearning/pytorch/pytorch/torch/lib/build/aten/src/ATen/ATen/Functions.h:1437:61:   required from here<br>\n/usr/include/c++/6/tuple:495:244: error: wrong number of template arguments (4, should be 2)<br>\nreturn  _<em>and</em>&lt;_<em>not</em>&lt;is_same&lt;tuple&lt;_Elements...&gt;,<br>\n^<br>\n/usr/include/c++/6/type_traits:1558:8: note: provided for \\u2018template&lt;class _From, class _To&gt; struct std::is_convertible\\u2019<br>\nstruct is_convertible<br>\n^~~~~~~~~~~~~~<br>\n/usr/include/c++/6/tuple:502:1: error: body of constexpr function \\u2018static constexpr bool std::_TC&lt;, _Elements&gt;::_NonNestedTuple() [with _SrcTuple = const std::tuple&lt;at::Tensor&amp;, at::Tensor&amp;, at::Tensor&amp;&gt;&amp;; bool  = true; _Elements = {at::Tensor&amp;, at::Tensor&amp;, at::Tensor&amp;}]\\u2019 not a return-statement<br>\n}<br>\n^<br>\n/usr/include/c++/6/tuple: In instantiation of \\u2018static constexpr bool std::_TC&lt;, _Elements&gt;::_NonNestedTuple() [with _SrcTuple = std::tuple&lt;at::Tensor&amp;, at::Tensor&amp;, at::Tensor&amp;&gt;&amp;&amp;; bool  = true; _Elements = {at::Tensor&amp;, at::Tensor&amp;, at::Tensor&amp;}]\\u2019:<br>\n/usr/include/c++/6/tuple:686:422:   required by substitution of \\u2018template&lt;class ... _UElements, class _Dummy, typename std::enable_if&lt;((std::_TC&lt;(1ul == sizeof... (_UElements)), at::Tensor&amp;, at::Tensor&amp;, at::Tensor&amp;&gt;::_MoveConstructibleTuple&lt;_UElements ...&gt;() &amp;&amp; std::_TC&lt;(1ul == sizeof... (_UElements)), at::Tensor&amp;, at::Tensor&amp;, at::Tensor&amp;&gt;::_ImplicitlyMoveConvertibleTuple&lt;_UElements ...&gt;()) &amp;&amp; std::_TC&lt;(std::is_same&lt;_Dummy, void&gt;::value &amp;&amp; (1ul == 1)), at::Tensor&amp;, at::Tensor&amp;, at::Tensor&amp;&gt;::_NonNestedTuple&lt;tuple&lt;_Elements ...&gt;&amp;&amp;&gt;()), bool&gt;::type  &gt; constexpr std::tuple&lt;  &gt;::tuple(std::tuple&lt;_Args1 ...&gt;&amp;&amp;) [with _UElements = {at::Tensor&amp;, at::Tensor&amp;, at::Tensor&amp;}; _Dummy = void; typename std::enable_if&lt;((std::_TC&lt;(1ul == sizeof... (_UElements)), at::Tensor&amp;, at::Tensor&amp;, at::Tensor&amp;&gt;::_MoveConstructibleTuple&lt;_UElements ...&gt;() &amp;&amp; std::_TC&lt;(1ul == sizeof... (_UElements)), at::Tensor&amp;, at::Tensor&amp;, at::Tensor&amp;&gt;::_ImplicitlyMoveConvertibleTuple&lt;_UElements ...&gt;()) &amp;&amp; std::_TC&lt;(std::is_same&lt;_Dummy, void&gt;::value &amp;&amp; (1ul == 1)), at::Tensor&amp;, at::Tensor&amp;, at::Tensor&amp;&gt;::_NonNestedTuple&lt;tuple&lt;_Elements ...&gt;&amp;&amp;&gt;()), bool&gt;::type  = ]\\u2019<br>\n/home/scottyyi/MachineLearning/pytorch/pytorch/torch/lib/build/aten/src/ATen/ATen/Functions.h:1437:61:   required from here<br>\n/usr/include/c++/6/tuple:495:244: error: wrong number of template arguments (4, should be 2)<br>\nreturn  _<em>and</em>&lt;_<em>not</em>&lt;is_same&lt;tuple&lt;_Elements...&gt;,<br>\n^<br>\n/usr/include/c++/6/type_traits:1558:8: note: provided for \\u2018template&lt;class _From, class _To&gt; struct std::is_convertible\\u2019<br>\nstruct is_convertible<br>\n^~~~~~~~~~~~~~<br>\n/usr/include/c++/6/tuple:502:1: error: body of constexpr function \\u2018static constexpr bool std::_TC&lt;, _Elements&gt;::_NonNestedTuple() [with _SrcTuple = std::tuple&lt;at::Tensor&amp;, at::Tensor&amp;, at::Tensor&amp;&gt;&amp;&amp;; bool  = true; _Elements = {at::Tensor&amp;, at::Tensor&amp;, at::Tensor&amp;}]\\u2019 not a return-statement<br>\n}<br>\n^<br>\n/usr/include/c++/6/tuple: In instantiation of \\u2018static constexpr bool std::_TC&lt;, _Elements&gt;::_MoveConstructibleTuple() [with _UElements = {std::tuple&lt;at::Tensor, at::Tensor, at::Tensor&gt;}; bool  = true; _Elements = {at::Tensor, at::Tensor, at::Tensor}]\\u2019:<br>\n/usr/include/c++/6/tuple:626:248:   required by substitution of \\u2018template&lt;class ... _UElements, typename std::enable_if&lt;(((std::_TC&lt;(sizeof... (_UElements) == 1), at::Tensor, at::Tensor, at::Tensor&gt;::_NotSameTuple&lt;_UElements ...&gt;() &amp;&amp; std::_TC&lt;(1ul == sizeof... (_UElements)), at::Tensor, at::Tensor, at::Tensor&gt;::_MoveConstructibleTuple&lt;_UElements ...&gt;()) &amp;&amp; std::_TC&lt;(1ul == sizeof... (_UElements)), at::Tensor, at::Tensor, at::Tensor&gt;::_ImplicitlyMoveConvertibleTuple&lt;_UElements ...&gt;()) &amp;&amp; (3ul &gt;= 1)), bool&gt;::type  &gt; constexpr std::tuple&lt;  &gt;::tuple(_UElements&amp;&amp; ...) [with _UElements = {std::tuple&lt;at::Tensor, at::Tensor, at::Tensor&gt;}; typename std::enable_if&lt;(((std::_TC&lt;(sizeof... (_UElements) == 1), at::Tensor, at::Tensor, at::Tensor&gt;::_NotSameTuple&lt;_UElements ...&gt;() &amp;&amp; std::_TC&lt;(1ul == sizeof... (_UElements)), at::Tensor, at::Tensor, at::Tensor&gt;::_MoveConstructibleTuple&lt;_UElements ...&gt;()) &amp;&amp; std::_TC&lt;(1ul == sizeof... (_UElements)), at::Tensor, at::Tensor, at::Tensor&gt;::_ImplicitlyMoveConvertibleTuple&lt;_UElements ...&gt;()) &amp;&amp; (3ul &gt;= 1)), bool&gt;::type  = ]\\u2019<br>\n/home/scottyyi/MachineLearning/pytorch/pytorch/torch/lib/build/aten/src/ATen/ATen/Functions.h:1440:39:   required from here<br>\n/usr/include/c++/6/tuple:483:67: error: mismatched argument pack lengths while expanding \\u2018std::is_constructible&lt;_Elements, _UElements&amp;&amp;&gt;\\u2019<br>\nreturn _<em>and</em>&lt;is_constructible&lt;_Elements, _UElements&amp;&amp;&gt;...&gt;::value;<br>\n^~~~~<br>\n/usr/include/c++/6/tuple:484:1: error: body of constexpr function \\u2018static constexpr bool std::_TC&lt;, _Elements&gt;::_MoveConstructibleTuple() [with _UElements = {std::tuple&lt;at::Tensor, at::Tensor, at::Tensor&gt;}; bool  = true; _Elements = {at::Tensor, at::Tensor, at::Tensor}]\\u2019 not a return-statement<br>\n}<br>\n^<br>\n/usr/include/c++/6/tuple: In instantiation of \\u2018static constexpr bool std::_TC&lt;, _Elements&gt;::_ImplicitlyMoveConvertibleTuple() [with _UElements = {std::tuple&lt;at::Tensor, at::Tensor, at::Tensor&gt;}; bool  = true; _Elements = {at::Tensor, at::Tensor, at::Tensor}]\\u2019:<br>\n/usr/include/c++/6/tuple:626:362:   required by substitution of \\u2018template&lt;class ... _UElements, typename std::enable_if&lt;(((std::_TC&lt;(sizeof... (_UElements) == 1), at::Tensor, at::Tensor, at::Tensor&gt;::_NotSameTuple&lt;_UElements ...&gt;() &amp;&amp; std::_TC&lt;(1ul == sizeof... (_UElements)), at::Tensor, at::Tensor, at::Tensor&gt;::_MoveConstructibleTuple&lt;_UElements ...&gt;()) &amp;&amp; std::_TC&lt;(1ul == sizeof... (_UElements)), at::Tensor, at::Tensor, at::Tensor&gt;::_ImplicitlyMoveConvertibleTuple&lt;_UElements ...&gt;()) &amp;&amp; (3ul &gt;= 1)), bool&gt;::type  &gt; constexpr std::tuple&lt;  &gt;::tuple(_UElements&amp;&amp; ...) [with _UElements = {std::tuple&lt;at::Tensor, at::Tensor, at::Tensor&gt;}; typename std::enable_if&lt;(((std::_TC&lt;(sizeof... (_UElements) == 1), at::Tensor, at::Tensor, at::Tensor&gt;::_NotSameTuple&lt;_UElements ...&gt;() &amp;&amp; std::_TC&lt;(1ul == sizeof... (_UElements)), at::Tensor, at::Tensor, at::Tensor&gt;::_MoveConstructibleTuple&lt;_UElements ...&gt;()) &amp;&amp; std::_TC&lt;(1ul == sizeof... (_UElements)), at::Tensor, at::Tensor, at::Tensor&gt;::_ImplicitlyMoveConvertibleTuple&lt;_UElements ...&gt;()) &amp;&amp; (3ul &gt;= 1)), bool&gt;::type  = ]\\u2019<br>\n/home/scottyyi/MachineLearning/pytorch/pytorch/torch/lib/build/aten/src/ATen/ATen/Functions.h:1440:39:   required from here<br>\n/usr/include/c++/6/tuple:489:65: error: mismatched argument pack lengths while expanding \\u2018std::is_convertible&lt;_UElements&amp;&amp;, _Elements&gt;\\u2019<br>\nreturn _<em>and</em>&lt;is_convertible&lt;_UElements&amp;&amp;, _Elements&gt;...&gt;::value;<br>\n^~~~~<br>\n/usr/include/c++/6/tuple:490:1: error: body of constexpr function \\u2018static constexpr bool std::_TC&lt;, _Elements&gt;::_ImplicitlyMoveConvertibleTuple() [with _UElements = {std::tuple&lt;at::Tensor, at::Tensor, at::Tensor&gt;}; bool  = true; _Elements = {at::Tensor, at::Tensor, at::Tensor}]\\u2019 not a return-statement<br>\n}<br>\n^<br>\n/usr/include/c++/6/tuple: In instantiation of \\u2018static constexpr bool std::_TC&lt;, _Elements&gt;::_NonNestedTuple() [with _SrcTuple = const std::tuple&lt;at::Tensor, at::Tensor, at::Tensor&gt;&amp;; bool  = true; _Elements = {at::Tensor, at::Tensor, at::Tensor}]\\u2019:<br>\n/usr/include/c++/6/tuple:662:419:   required by substitution of \\u2018template&lt;class ... _UElements, class _Dummy, typename std::enable_if&lt;((std::_TC&lt;(1ul == sizeof... (_UElements)), at::Tensor, at::Tensor, at::Tensor&gt;::_ConstructibleTuple&lt;_UElements ...&gt;() &amp;&amp; std::_TC&lt;(1ul == sizeof... (_UElements)), at::Tensor, at::Tensor, at::Tensor&gt;::_ImplicitlyConvertibleTuple&lt;_UElements ...&gt;()) &amp;&amp; std::_TC&lt;(std::is_same&lt;_Dummy, void&gt;::value &amp;&amp; (1ul == 1)), at::Tensor, at::Tensor, at::Tensor&gt;::_NonNestedTuple&lt;const tuple&lt;_Elements ...&gt;&amp;&gt;()), bool&gt;::type  &gt; constexpr std::tuple&lt;  &gt;::tuple(const std::tuple&lt;_Args1 ...&gt;&amp;) [with _UElements = {at::Tensor, at::Tensor, at::Tensor}; _Dummy = void; typename std::enable_if&lt;((std::_TC&lt;(1ul == sizeof... (_UElements)), at::Tensor, at::Tensor, at::Tensor&gt;::_ConstructibleTuple&lt;_UElements ...&gt;() &amp;&amp; std::_TC&lt;(1ul == sizeof... (_UElements)), at::Tensor, at::Tensor, at::Tensor&gt;::_ImplicitlyConvertibleTuple&lt;_UElements ...&gt;()) &amp;&amp; std::_TC&lt;(std::is_same&lt;_Dummy, void&gt;::value &amp;&amp; (1ul == 1)), at::Tensor, at::Tensor, at::Tensor&gt;::_NonNestedTuple&lt;const tuple&lt;_Elements ...&gt;&amp;&gt;()), bool&gt;::type  = ]\\u2019<br>\n/home/scottyyi/MachineLearning/pytorch/pytorch/torch/lib/build/aten/src/ATen/ATen/Functions.h:1440:39:   required from here<br>\n/usr/include/c++/6/tuple:495:244: error: wrong number of template arguments (4, should be 2)<br>\nreturn  _<em>and</em>&lt;_<em>not</em>&lt;is_same&lt;tuple&lt;_Elements...&gt;,<br>\n^<br>\n/usr/include/c++/6/type_traits:1558:8: note: provided for \\u2018template&lt;class _From, class _To&gt; struct std::is_convertible\\u2019<br>\nstruct is_convertible<br>\n^~~~~~~~~~~~~~<br>\n/usr/include/c++/6/tuple:502:1: error: body of constexpr function \\u2018static constexpr bool std::_TC&lt;, _Elements&gt;::_NonNestedTuple() [with _SrcTuple = const std::tuple&lt;at::Tensor, at::Tensor, at::Tensor&gt;&amp;; bool  = true; _Elements = {at::Tensor, at::Tensor, at::Tensor}]\\u2019 not a return-statement<br>\n}<br>\n^<br>\n/usr/include/c++/6/tuple: In instantiation of \\u2018static constexpr bool std::_TC&lt;, _Elements&gt;::_NonNestedTuple() [with _SrcTuple = std::tuple&lt;at::Tensor, at::Tensor, at::Tensor&gt;&amp;&amp;; bool  = true; _Elements = {at::Tensor, at::Tensor, at::Tensor}]\\u2019:<br>\n/usr/include/c++/6/tuple:686:422:   required by substitution of \\u2018template&lt;class ... _UElements, class _Dummy, typename std::enable_if&lt;((std::_TC&lt;(1ul == sizeof... (_UElements)), at::Tensor, at::Tensor, at::Tensor&gt;::_MoveConstructibleTuple&lt;_UElements ...&gt;() &amp;&amp; std::_TC&lt;(1ul == sizeof... (_UElements)), at::Tensor, at::Tensor, at::Tensor&gt;::_ImplicitlyMoveConvertibleTuple&lt;_UElements ...&gt;()) &amp;&amp; std::_TC&lt;(std::is_same&lt;_Dummy, void&gt;::value &amp;&amp; (1ul == 1)), at::Tensor, at::Tensor, at::Tensor&gt;::_NonNestedTuple&lt;tuple&lt;_Elements ...&gt;&amp;&amp;&gt;()), bool&gt;::type  &gt; constexpr std::tuple&lt;  &gt;::tuple(std::tuple&lt;_Args1 ...&gt;&amp;&amp;) [with _UElements = {at::Tensor, at::Tensor, at::Tensor}; _Dummy = void; typename std::enable_if&lt;((std::_TC&lt;(1ul == sizeof... (_UElements)), at::Tensor, at::Tensor, at::Tensor&gt;::_MoveConstructibleTuple&lt;_UElements ...&gt;() &amp;&amp; std::_TC&lt;(1ul == sizeof... (_UElements)), at::Tensor, at::Tensor, at::Tensor&gt;::_ImplicitlyMoveConvertibleTuple&lt;_UElements ...&gt;()) &amp;&amp; std::_TC&lt;(std::is_same&lt;_Dummy, void&gt;::value &amp;&amp; (1ul == 1)), at::Tensor, at::Tensor, at::Tensor&gt;::_NonNestedTuple&lt;tuple&lt;_Elements ...&gt;&amp;&amp;&gt;()), bool&gt;::type  = ]\\u2019<br>\n/home/scottyyi/MachineLearning/pytorch/pytorch/torch/lib/build/aten/src/ATen/ATen/Functions.h:1440:39:   required from here<br>\n/usr/include/c++/6/tuple:495:244: error: wrong number of template arguments (4, should be 2)<br>\nreturn  _<em>and</em>&lt;_<em>not</em>&lt;is_same&lt;tuple&lt;_Elements...&gt;,<br>\n^<br>\n/usr/include/c++/6/type_traits:1558:8: note: provided for \\u2018template&lt;class _From, class _To&gt; struct std::is_convertible\\u2019<br>\nstruct is_convertible<br>\n^~~~~~~~~~~~~~<br>\n/usr/include/c++/6/tuple:502:1: error: body of constexpr function \\u2018static constexpr bool std::_TC&lt;, _Elements&gt;::_NonNestedTuple() [with _SrcTuple = std::tuple&lt;at::Tensor, at::Tensor, at::Tensor&gt;&amp;&amp;; bool  = true; _Elements = {at::Tensor, at::Tensor, at::Tensor}]\\u2019 not a return-statement<br>\n}<br>\n^<br>\nCMake Error at ATen_generated_NativeFunctionsCuda.cu.o.cmake:267 (message):<br>\nError generating file<br>\n/home/scottyyi/MachineLearning/pytorch/pytorch/torch/lib/build/aten/src/ATen/CMakeFiles/ATen.dir/native/cuda/./ATen_generated_NativeFunctionsCuda.cu.o</p>\n<p>src/ATen/CMakeFiles/ATen.dir/build.make:70765: recipe for target 'src/ATen/CMakeFiles/ATen.dir/native/cuda/ATen_generated_NativeFunctionsCuda.cu.o' failed<br>\nmake[2]: *** [src/ATen/CMakeFiles/ATen.dir/native/cuda/ATen_generated_NativeFunctionsCuda.cu.o] Error 1<br>\nCMakeFiles/Makefile2:193: recipe for target 'src/ATen/CMakeFiles/ATen.dir/all' failed<br>\nmake[1]: *** [src/ATen/CMakeFiles/ATen.dir/all] Error 2<br>\nMakefile:127: recipe for target 'all' failed<br>\nmake: *** [all] Error 2</p>", "body_text": "[  0%] Building NVCC (Device) object src/ATen/CMakeFiles/ATen.dir/native/cuda/ATen_generated_NativeFunctionsCuda.cu.o\n/usr/include/c++/6/tuple: In instantiation of \\u2018static constexpr bool std::_TC<, _Elements>::_MoveConstructibleTuple() [with _UElements = {std::tuple<at::Tensor&, at::Tensor&, at::Tensor&>}; bool  = true; _Elements = {at::Tensor&, at::Tensor&, at::Tensor&}]\\u2019:\n/usr/include/c++/6/tuple:626:248:   required by substitution of \\u2018template<class ... _UElements, typename std::enable_if<(((std::_TC<(sizeof... (_UElements) == 1), at::Tensor&, at::Tensor&, at::Tensor&>::_NotSameTuple<_UElements ...>() && std::_TC<(1ul == sizeof... (_UElements)), at::Tensor&, at::Tensor&, at::Tensor&>::_MoveConstructibleTuple<_UElements ...>()) && std::_TC<(1ul == sizeof... (_UElements)), at::Tensor&, at::Tensor&, at::Tensor&>::_ImplicitlyMoveConvertibleTuple<_UElements ...>()) && (3ul >= 1)), bool>::type  > constexpr std::tuple<  >::tuple(_UElements&& ...) [with _UElements = {std::tuple<at::Tensor&, at::Tensor&, at::Tensor&>}; typename std::enable_if<(((std::_TC<(sizeof... (_UElements) == 1), at::Tensor&, at::Tensor&, at::Tensor&>::_NotSameTuple<_UElements ...>() && std::_TC<(1ul == sizeof... (_UElements)), at::Tensor&, at::Tensor&, at::Tensor&>::_MoveConstructibleTuple<_UElements ...>()) && std::_TC<(1ul == sizeof... (_UElements)), at::Tensor&, at::Tensor&, at::Tensor&>::_ImplicitlyMoveConvertibleTuple<_UElements ...>()) && (3ul >= 1)), bool>::type  = ]\\u2019\n/home/scottyyi/MachineLearning/pytorch/pytorch/torch/lib/build/aten/src/ATen/ATen/Functions.h:1437:61:   required from here\n/usr/include/c++/6/tuple:483:67: error: mismatched argument pack lengths while expanding \\u2018std::is_constructible<_Elements, _UElements&&>\\u2019\nreturn _and<is_constructible<_Elements, _UElements&&>...>::value;\n^~~~~\n/usr/include/c++/6/tuple:484:1: error: body of constexpr function \\u2018static constexpr bool std::_TC<, _Elements>::_MoveConstructibleTuple() [with _UElements = {std::tuple<at::Tensor&, at::Tensor&, at::Tensor&>}; bool  = true; _Elements = {at::Tensor&, at::Tensor&, at::Tensor&}]\\u2019 not a return-statement\n}\n^\n/usr/include/c++/6/tuple: In instantiation of \\u2018static constexpr bool std::_TC<, _Elements>::_ImplicitlyMoveConvertibleTuple() [with _UElements = {std::tuple<at::Tensor&, at::Tensor&, at::Tensor&>}; bool  = true; _Elements = {at::Tensor&, at::Tensor&, at::Tensor&}]\\u2019:\n/usr/include/c++/6/tuple:626:362:   required by substitution of \\u2018template<class ... _UElements, typename std::enable_if<(((std::_TC<(sizeof... (_UElements) == 1), at::Tensor&, at::Tensor&, at::Tensor&>::_NotSameTuple<_UElements ...>() && std::_TC<(1ul == sizeof... (_UElements)), at::Tensor&, at::Tensor&, at::Tensor&>::_MoveConstructibleTuple<_UElements ...>()) && std::_TC<(1ul == sizeof... (_UElements)), at::Tensor&, at::Tensor&, at::Tensor&>::_ImplicitlyMoveConvertibleTuple<_UElements ...>()) && (3ul >= 1)), bool>::type  > constexpr std::tuple<  >::tuple(_UElements&& ...) [with _UElements = {std::tuple<at::Tensor&, at::Tensor&, at::Tensor&>}; typename std::enable_if<(((std::_TC<(sizeof... (_UElements) == 1), at::Tensor&, at::Tensor&, at::Tensor&>::_NotSameTuple<_UElements ...>() && std::_TC<(1ul == sizeof... (_UElements)), at::Tensor&, at::Tensor&, at::Tensor&>::_MoveConstructibleTuple<_UElements ...>()) && std::_TC<(1ul == sizeof... (_UElements)), at::Tensor&, at::Tensor&, at::Tensor&>::_ImplicitlyMoveConvertibleTuple<_UElements ...>()) && (3ul >= 1)), bool>::type  = ]\\u2019\n/home/scottyyi/MachineLearning/pytorch/pytorch/torch/lib/build/aten/src/ATen/ATen/Functions.h:1437:61:   required from here\n/usr/include/c++/6/tuple:489:65: error: mismatched argument pack lengths while expanding \\u2018std::is_convertible<_UElements&&, _Elements>\\u2019\nreturn _and<is_convertible<_UElements&&, _Elements>...>::value;\n^~~~~\n/usr/include/c++/6/tuple:490:1: error: body of constexpr function \\u2018static constexpr bool std::_TC<, _Elements>::_ImplicitlyMoveConvertibleTuple() [with _UElements = {std::tuple<at::Tensor&, at::Tensor&, at::Tensor&>}; bool  = true; _Elements = {at::Tensor&, at::Tensor&, at::Tensor&}]\\u2019 not a return-statement\n}\n^\n/usr/include/c++/6/tuple: In instantiation of \\u2018static constexpr bool std::_TC<, _Elements>::_NonNestedTuple() [with _SrcTuple = const std::tuple<at::Tensor&, at::Tensor&, at::Tensor&>&; bool  = true; _Elements = {at::Tensor&, at::Tensor&, at::Tensor&}]\\u2019:\n/usr/include/c++/6/tuple:662:419:   required by substitution of \\u2018template<class ... _UElements, class _Dummy, typename std::enable_if<((std::_TC<(1ul == sizeof... (_UElements)), at::Tensor&, at::Tensor&, at::Tensor&>::_ConstructibleTuple<_UElements ...>() && std::_TC<(1ul == sizeof... (_UElements)), at::Tensor&, at::Tensor&, at::Tensor&>::_ImplicitlyConvertibleTuple<_UElements ...>()) && std::_TC<(std::is_same<_Dummy, void>::value && (1ul == 1)), at::Tensor&, at::Tensor&, at::Tensor&>::_NonNestedTuple<const tuple<_Elements ...>&>()), bool>::type  > constexpr std::tuple<  >::tuple(const std::tuple<_Args1 ...>&) [with _UElements = {at::Tensor&, at::Tensor&, at::Tensor&}; _Dummy = void; typename std::enable_if<((std::_TC<(1ul == sizeof... (_UElements)), at::Tensor&, at::Tensor&, at::Tensor&>::_ConstructibleTuple<_UElements ...>() && std::_TC<(1ul == sizeof... (_UElements)), at::Tensor&, at::Tensor&, at::Tensor&>::_ImplicitlyConvertibleTuple<_UElements ...>()) && std::_TC<(std::is_same<_Dummy, void>::value && (1ul == 1)), at::Tensor&, at::Tensor&, at::Tensor&>::_NonNestedTuple<const tuple<_Elements ...>&>()), bool>::type  = ]\\u2019\n/home/scottyyi/MachineLearning/pytorch/pytorch/torch/lib/build/aten/src/ATen/ATen/Functions.h:1437:61:   required from here\n/usr/include/c++/6/tuple:495:244: error: wrong number of template arguments (4, should be 2)\nreturn  _and<_not<is_same<tuple<_Elements...>,\n^\n/usr/include/c++/6/type_traits:1558:8: note: provided for \\u2018template<class _From, class _To> struct std::is_convertible\\u2019\nstruct is_convertible\n^~~~~~~~~~~~~~\n/usr/include/c++/6/tuple:502:1: error: body of constexpr function \\u2018static constexpr bool std::_TC<, _Elements>::_NonNestedTuple() [with _SrcTuple = const std::tuple<at::Tensor&, at::Tensor&, at::Tensor&>&; bool  = true; _Elements = {at::Tensor&, at::Tensor&, at::Tensor&}]\\u2019 not a return-statement\n}\n^\n/usr/include/c++/6/tuple: In instantiation of \\u2018static constexpr bool std::_TC<, _Elements>::_NonNestedTuple() [with _SrcTuple = std::tuple<at::Tensor&, at::Tensor&, at::Tensor&>&&; bool  = true; _Elements = {at::Tensor&, at::Tensor&, at::Tensor&}]\\u2019:\n/usr/include/c++/6/tuple:686:422:   required by substitution of \\u2018template<class ... _UElements, class _Dummy, typename std::enable_if<((std::_TC<(1ul == sizeof... (_UElements)), at::Tensor&, at::Tensor&, at::Tensor&>::_MoveConstructibleTuple<_UElements ...>() && std::_TC<(1ul == sizeof... (_UElements)), at::Tensor&, at::Tensor&, at::Tensor&>::_ImplicitlyMoveConvertibleTuple<_UElements ...>()) && std::_TC<(std::is_same<_Dummy, void>::value && (1ul == 1)), at::Tensor&, at::Tensor&, at::Tensor&>::_NonNestedTuple<tuple<_Elements ...>&&>()), bool>::type  > constexpr std::tuple<  >::tuple(std::tuple<_Args1 ...>&&) [with _UElements = {at::Tensor&, at::Tensor&, at::Tensor&}; _Dummy = void; typename std::enable_if<((std::_TC<(1ul == sizeof... (_UElements)), at::Tensor&, at::Tensor&, at::Tensor&>::_MoveConstructibleTuple<_UElements ...>() && std::_TC<(1ul == sizeof... (_UElements)), at::Tensor&, at::Tensor&, at::Tensor&>::_ImplicitlyMoveConvertibleTuple<_UElements ...>()) && std::_TC<(std::is_same<_Dummy, void>::value && (1ul == 1)), at::Tensor&, at::Tensor&, at::Tensor&>::_NonNestedTuple<tuple<_Elements ...>&&>()), bool>::type  = ]\\u2019\n/home/scottyyi/MachineLearning/pytorch/pytorch/torch/lib/build/aten/src/ATen/ATen/Functions.h:1437:61:   required from here\n/usr/include/c++/6/tuple:495:244: error: wrong number of template arguments (4, should be 2)\nreturn  _and<_not<is_same<tuple<_Elements...>,\n^\n/usr/include/c++/6/type_traits:1558:8: note: provided for \\u2018template<class _From, class _To> struct std::is_convertible\\u2019\nstruct is_convertible\n^~~~~~~~~~~~~~\n/usr/include/c++/6/tuple:502:1: error: body of constexpr function \\u2018static constexpr bool std::_TC<, _Elements>::_NonNestedTuple() [with _SrcTuple = std::tuple<at::Tensor&, at::Tensor&, at::Tensor&>&&; bool  = true; _Elements = {at::Tensor&, at::Tensor&, at::Tensor&}]\\u2019 not a return-statement\n}\n^\n/usr/include/c++/6/tuple: In instantiation of \\u2018static constexpr bool std::_TC<, _Elements>::_MoveConstructibleTuple() [with _UElements = {std::tuple<at::Tensor, at::Tensor, at::Tensor>}; bool  = true; _Elements = {at::Tensor, at::Tensor, at::Tensor}]\\u2019:\n/usr/include/c++/6/tuple:626:248:   required by substitution of \\u2018template<class ... _UElements, typename std::enable_if<(((std::_TC<(sizeof... (_UElements) == 1), at::Tensor, at::Tensor, at::Tensor>::_NotSameTuple<_UElements ...>() && std::_TC<(1ul == sizeof... (_UElements)), at::Tensor, at::Tensor, at::Tensor>::_MoveConstructibleTuple<_UElements ...>()) && std::_TC<(1ul == sizeof... (_UElements)), at::Tensor, at::Tensor, at::Tensor>::_ImplicitlyMoveConvertibleTuple<_UElements ...>()) && (3ul >= 1)), bool>::type  > constexpr std::tuple<  >::tuple(_UElements&& ...) [with _UElements = {std::tuple<at::Tensor, at::Tensor, at::Tensor>}; typename std::enable_if<(((std::_TC<(sizeof... (_UElements) == 1), at::Tensor, at::Tensor, at::Tensor>::_NotSameTuple<_UElements ...>() && std::_TC<(1ul == sizeof... (_UElements)), at::Tensor, at::Tensor, at::Tensor>::_MoveConstructibleTuple<_UElements ...>()) && std::_TC<(1ul == sizeof... (_UElements)), at::Tensor, at::Tensor, at::Tensor>::_ImplicitlyMoveConvertibleTuple<_UElements ...>()) && (3ul >= 1)), bool>::type  = ]\\u2019\n/home/scottyyi/MachineLearning/pytorch/pytorch/torch/lib/build/aten/src/ATen/ATen/Functions.h:1440:39:   required from here\n/usr/include/c++/6/tuple:483:67: error: mismatched argument pack lengths while expanding \\u2018std::is_constructible<_Elements, _UElements&&>\\u2019\nreturn _and<is_constructible<_Elements, _UElements&&>...>::value;\n^~~~~\n/usr/include/c++/6/tuple:484:1: error: body of constexpr function \\u2018static constexpr bool std::_TC<, _Elements>::_MoveConstructibleTuple() [with _UElements = {std::tuple<at::Tensor, at::Tensor, at::Tensor>}; bool  = true; _Elements = {at::Tensor, at::Tensor, at::Tensor}]\\u2019 not a return-statement\n}\n^\n/usr/include/c++/6/tuple: In instantiation of \\u2018static constexpr bool std::_TC<, _Elements>::_ImplicitlyMoveConvertibleTuple() [with _UElements = {std::tuple<at::Tensor, at::Tensor, at::Tensor>}; bool  = true; _Elements = {at::Tensor, at::Tensor, at::Tensor}]\\u2019:\n/usr/include/c++/6/tuple:626:362:   required by substitution of \\u2018template<class ... _UElements, typename std::enable_if<(((std::_TC<(sizeof... (_UElements) == 1), at::Tensor, at::Tensor, at::Tensor>::_NotSameTuple<_UElements ...>() && std::_TC<(1ul == sizeof... (_UElements)), at::Tensor, at::Tensor, at::Tensor>::_MoveConstructibleTuple<_UElements ...>()) && std::_TC<(1ul == sizeof... (_UElements)), at::Tensor, at::Tensor, at::Tensor>::_ImplicitlyMoveConvertibleTuple<_UElements ...>()) && (3ul >= 1)), bool>::type  > constexpr std::tuple<  >::tuple(_UElements&& ...) [with _UElements = {std::tuple<at::Tensor, at::Tensor, at::Tensor>}; typename std::enable_if<(((std::_TC<(sizeof... (_UElements) == 1), at::Tensor, at::Tensor, at::Tensor>::_NotSameTuple<_UElements ...>() && std::_TC<(1ul == sizeof... (_UElements)), at::Tensor, at::Tensor, at::Tensor>::_MoveConstructibleTuple<_UElements ...>()) && std::_TC<(1ul == sizeof... (_UElements)), at::Tensor, at::Tensor, at::Tensor>::_ImplicitlyMoveConvertibleTuple<_UElements ...>()) && (3ul >= 1)), bool>::type  = ]\\u2019\n/home/scottyyi/MachineLearning/pytorch/pytorch/torch/lib/build/aten/src/ATen/ATen/Functions.h:1440:39:   required from here\n/usr/include/c++/6/tuple:489:65: error: mismatched argument pack lengths while expanding \\u2018std::is_convertible<_UElements&&, _Elements>\\u2019\nreturn _and<is_convertible<_UElements&&, _Elements>...>::value;\n^~~~~\n/usr/include/c++/6/tuple:490:1: error: body of constexpr function \\u2018static constexpr bool std::_TC<, _Elements>::_ImplicitlyMoveConvertibleTuple() [with _UElements = {std::tuple<at::Tensor, at::Tensor, at::Tensor>}; bool  = true; _Elements = {at::Tensor, at::Tensor, at::Tensor}]\\u2019 not a return-statement\n}\n^\n/usr/include/c++/6/tuple: In instantiation of \\u2018static constexpr bool std::_TC<, _Elements>::_NonNestedTuple() [with _SrcTuple = const std::tuple<at::Tensor, at::Tensor, at::Tensor>&; bool  = true; _Elements = {at::Tensor, at::Tensor, at::Tensor}]\\u2019:\n/usr/include/c++/6/tuple:662:419:   required by substitution of \\u2018template<class ... _UElements, class _Dummy, typename std::enable_if<((std::_TC<(1ul == sizeof... (_UElements)), at::Tensor, at::Tensor, at::Tensor>::_ConstructibleTuple<_UElements ...>() && std::_TC<(1ul == sizeof... (_UElements)), at::Tensor, at::Tensor, at::Tensor>::_ImplicitlyConvertibleTuple<_UElements ...>()) && std::_TC<(std::is_same<_Dummy, void>::value && (1ul == 1)), at::Tensor, at::Tensor, at::Tensor>::_NonNestedTuple<const tuple<_Elements ...>&>()), bool>::type  > constexpr std::tuple<  >::tuple(const std::tuple<_Args1 ...>&) [with _UElements = {at::Tensor, at::Tensor, at::Tensor}; _Dummy = void; typename std::enable_if<((std::_TC<(1ul == sizeof... (_UElements)), at::Tensor, at::Tensor, at::Tensor>::_ConstructibleTuple<_UElements ...>() && std::_TC<(1ul == sizeof... (_UElements)), at::Tensor, at::Tensor, at::Tensor>::_ImplicitlyConvertibleTuple<_UElements ...>()) && std::_TC<(std::is_same<_Dummy, void>::value && (1ul == 1)), at::Tensor, at::Tensor, at::Tensor>::_NonNestedTuple<const tuple<_Elements ...>&>()), bool>::type  = ]\\u2019\n/home/scottyyi/MachineLearning/pytorch/pytorch/torch/lib/build/aten/src/ATen/ATen/Functions.h:1440:39:   required from here\n/usr/include/c++/6/tuple:495:244: error: wrong number of template arguments (4, should be 2)\nreturn  _and<_not<is_same<tuple<_Elements...>,\n^\n/usr/include/c++/6/type_traits:1558:8: note: provided for \\u2018template<class _From, class _To> struct std::is_convertible\\u2019\nstruct is_convertible\n^~~~~~~~~~~~~~\n/usr/include/c++/6/tuple:502:1: error: body of constexpr function \\u2018static constexpr bool std::_TC<, _Elements>::_NonNestedTuple() [with _SrcTuple = const std::tuple<at::Tensor, at::Tensor, at::Tensor>&; bool  = true; _Elements = {at::Tensor, at::Tensor, at::Tensor}]\\u2019 not a return-statement\n}\n^\n/usr/include/c++/6/tuple: In instantiation of \\u2018static constexpr bool std::_TC<, _Elements>::_NonNestedTuple() [with _SrcTuple = std::tuple<at::Tensor, at::Tensor, at::Tensor>&&; bool  = true; _Elements = {at::Tensor, at::Tensor, at::Tensor}]\\u2019:\n/usr/include/c++/6/tuple:686:422:   required by substitution of \\u2018template<class ... _UElements, class _Dummy, typename std::enable_if<((std::_TC<(1ul == sizeof... (_UElements)), at::Tensor, at::Tensor, at::Tensor>::_MoveConstructibleTuple<_UElements ...>() && std::_TC<(1ul == sizeof... (_UElements)), at::Tensor, at::Tensor, at::Tensor>::_ImplicitlyMoveConvertibleTuple<_UElements ...>()) && std::_TC<(std::is_same<_Dummy, void>::value && (1ul == 1)), at::Tensor, at::Tensor, at::Tensor>::_NonNestedTuple<tuple<_Elements ...>&&>()), bool>::type  > constexpr std::tuple<  >::tuple(std::tuple<_Args1 ...>&&) [with _UElements = {at::Tensor, at::Tensor, at::Tensor}; _Dummy = void; typename std::enable_if<((std::_TC<(1ul == sizeof... (_UElements)), at::Tensor, at::Tensor, at::Tensor>::_MoveConstructibleTuple<_UElements ...>() && std::_TC<(1ul == sizeof... (_UElements)), at::Tensor, at::Tensor, at::Tensor>::_ImplicitlyMoveConvertibleTuple<_UElements ...>()) && std::_TC<(std::is_same<_Dummy, void>::value && (1ul == 1)), at::Tensor, at::Tensor, at::Tensor>::_NonNestedTuple<tuple<_Elements ...>&&>()), bool>::type  = ]\\u2019\n/home/scottyyi/MachineLearning/pytorch/pytorch/torch/lib/build/aten/src/ATen/ATen/Functions.h:1440:39:   required from here\n/usr/include/c++/6/tuple:495:244: error: wrong number of template arguments (4, should be 2)\nreturn  _and<_not<is_same<tuple<_Elements...>,\n^\n/usr/include/c++/6/type_traits:1558:8: note: provided for \\u2018template<class _From, class _To> struct std::is_convertible\\u2019\nstruct is_convertible\n^~~~~~~~~~~~~~\n/usr/include/c++/6/tuple:502:1: error: body of constexpr function \\u2018static constexpr bool std::_TC<, _Elements>::_NonNestedTuple() [with _SrcTuple = std::tuple<at::Tensor, at::Tensor, at::Tensor>&&; bool  = true; _Elements = {at::Tensor, at::Tensor, at::Tensor}]\\u2019 not a return-statement\n}\n^\nCMake Error at ATen_generated_NativeFunctionsCuda.cu.o.cmake:267 (message):\nError generating file\n/home/scottyyi/MachineLearning/pytorch/pytorch/torch/lib/build/aten/src/ATen/CMakeFiles/ATen.dir/native/cuda/./ATen_generated_NativeFunctionsCuda.cu.o\nsrc/ATen/CMakeFiles/ATen.dir/build.make:70765: recipe for target 'src/ATen/CMakeFiles/ATen.dir/native/cuda/ATen_generated_NativeFunctionsCuda.cu.o' failed\nmake[2]: *** [src/ATen/CMakeFiles/ATen.dir/native/cuda/ATen_generated_NativeFunctionsCuda.cu.o] Error 1\nCMakeFiles/Makefile2:193: recipe for target 'src/ATen/CMakeFiles/ATen.dir/all' failed\nmake[1]: *** [src/ATen/CMakeFiles/ATen.dir/all] Error 2\nMakefile:127: recipe for target 'all' failed\nmake: *** [all] Error 2", "body": "[  0%] Building NVCC (Device) object src/ATen/CMakeFiles/ATen.dir/native/cuda/ATen_generated_NativeFunctionsCuda.cu.o\r\n/usr/include/c++/6/tuple: In instantiation of \\u2018static constexpr bool std::_TC<<anonymous>, _Elements>::_MoveConstructibleTuple() [with _UElements = {std::tuple<at::Tensor&, at::Tensor&, at::Tensor&>}; bool <anonymous> = true; _Elements = {at::Tensor&, at::Tensor&, at::Tensor&}]\\u2019:\r\n/usr/include/c++/6/tuple:626:248:   required by substitution of \\u2018template<class ... _UElements, typename std::enable_if<(((std::_TC<(sizeof... (_UElements) == 1), at::Tensor&, at::Tensor&, at::Tensor&>::_NotSameTuple<_UElements ...>() && std::_TC<(1ul == sizeof... (_UElements)), at::Tensor&, at::Tensor&, at::Tensor&>::_MoveConstructibleTuple<_UElements ...>()) && std::_TC<(1ul == sizeof... (_UElements)), at::Tensor&, at::Tensor&, at::Tensor&>::_ImplicitlyMoveConvertibleTuple<_UElements ...>()) && (3ul >= 1)), bool>::type <anonymous> > constexpr std::tuple< <template-parameter-1-1> >::tuple(_UElements&& ...) [with _UElements = {std::tuple<at::Tensor&, at::Tensor&, at::Tensor&>}; typename std::enable_if<(((std::_TC<(sizeof... (_UElements) == 1), at::Tensor&, at::Tensor&, at::Tensor&>::_NotSameTuple<_UElements ...>() && std::_TC<(1ul == sizeof... (_UElements)), at::Tensor&, at::Tensor&, at::Tensor&>::_MoveConstructibleTuple<_UElements ...>()) && std::_TC<(1ul == sizeof... (_UElements)), at::Tensor&, at::Tensor&, at::Tensor&>::_ImplicitlyMoveConvertibleTuple<_UElements ...>()) && (3ul >= 1)), bool>::type <anonymous> = <missing>]\\u2019\r\n/home/scottyyi/MachineLearning/pytorch/pytorch/torch/lib/build/aten/src/ATen/ATen/Functions.h:1437:61:   required from here\r\n/usr/include/c++/6/tuple:483:67: error: mismatched argument pack lengths while expanding \\u2018std::is_constructible<_Elements, _UElements&&>\\u2019\r\n       return __and_<is_constructible<_Elements, _UElements&&>...>::value;\r\n                                                                   ^~~~~\r\n/usr/include/c++/6/tuple:484:1: error: body of constexpr function \\u2018static constexpr bool std::_TC<<anonymous>, _Elements>::_MoveConstructibleTuple() [with _UElements = {std::tuple<at::Tensor&, at::Tensor&, at::Tensor&>}; bool <anonymous> = true; _Elements = {at::Tensor&, at::Tensor&, at::Tensor&}]\\u2019 not a return-statement\r\n     }\r\n ^\r\n/usr/include/c++/6/tuple: In instantiation of \\u2018static constexpr bool std::_TC<<anonymous>, _Elements>::_ImplicitlyMoveConvertibleTuple() [with _UElements = {std::tuple<at::Tensor&, at::Tensor&, at::Tensor&>}; bool <anonymous> = true; _Elements = {at::Tensor&, at::Tensor&, at::Tensor&}]\\u2019:\r\n/usr/include/c++/6/tuple:626:362:   required by substitution of \\u2018template<class ... _UElements, typename std::enable_if<(((std::_TC<(sizeof... (_UElements) == 1), at::Tensor&, at::Tensor&, at::Tensor&>::_NotSameTuple<_UElements ...>() && std::_TC<(1ul == sizeof... (_UElements)), at::Tensor&, at::Tensor&, at::Tensor&>::_MoveConstructibleTuple<_UElements ...>()) && std::_TC<(1ul == sizeof... (_UElements)), at::Tensor&, at::Tensor&, at::Tensor&>::_ImplicitlyMoveConvertibleTuple<_UElements ...>()) && (3ul >= 1)), bool>::type <anonymous> > constexpr std::tuple< <template-parameter-1-1> >::tuple(_UElements&& ...) [with _UElements = {std::tuple<at::Tensor&, at::Tensor&, at::Tensor&>}; typename std::enable_if<(((std::_TC<(sizeof... (_UElements) == 1), at::Tensor&, at::Tensor&, at::Tensor&>::_NotSameTuple<_UElements ...>() && std::_TC<(1ul == sizeof... (_UElements)), at::Tensor&, at::Tensor&, at::Tensor&>::_MoveConstructibleTuple<_UElements ...>()) && std::_TC<(1ul == sizeof... (_UElements)), at::Tensor&, at::Tensor&, at::Tensor&>::_ImplicitlyMoveConvertibleTuple<_UElements ...>()) && (3ul >= 1)), bool>::type <anonymous> = <missing>]\\u2019\r\n/home/scottyyi/MachineLearning/pytorch/pytorch/torch/lib/build/aten/src/ATen/ATen/Functions.h:1437:61:   required from here\r\n/usr/include/c++/6/tuple:489:65: error: mismatched argument pack lengths while expanding \\u2018std::is_convertible<_UElements&&, _Elements>\\u2019\r\n       return __and_<is_convertible<_UElements&&, _Elements>...>::value;\r\n                                                                 ^~~~~\r\n/usr/include/c++/6/tuple:490:1: error: body of constexpr function \\u2018static constexpr bool std::_TC<<anonymous>, _Elements>::_ImplicitlyMoveConvertibleTuple() [with _UElements = {std::tuple<at::Tensor&, at::Tensor&, at::Tensor&>}; bool <anonymous> = true; _Elements = {at::Tensor&, at::Tensor&, at::Tensor&}]\\u2019 not a return-statement\r\n     }\r\n ^\r\n/usr/include/c++/6/tuple: In instantiation of \\u2018static constexpr bool std::_TC<<anonymous>, _Elements>::_NonNestedTuple() [with _SrcTuple = const std::tuple<at::Tensor&, at::Tensor&, at::Tensor&>&; bool <anonymous> = true; _Elements = {at::Tensor&, at::Tensor&, at::Tensor&}]\\u2019:\r\n/usr/include/c++/6/tuple:662:419:   required by substitution of \\u2018template<class ... _UElements, class _Dummy, typename std::enable_if<((std::_TC<(1ul == sizeof... (_UElements)), at::Tensor&, at::Tensor&, at::Tensor&>::_ConstructibleTuple<_UElements ...>() && std::_TC<(1ul == sizeof... (_UElements)), at::Tensor&, at::Tensor&, at::Tensor&>::_ImplicitlyConvertibleTuple<_UElements ...>()) && std::_TC<(std::is_same<_Dummy, void>::value && (1ul == 1)), at::Tensor&, at::Tensor&, at::Tensor&>::_NonNestedTuple<const tuple<_Elements ...>&>()), bool>::type <anonymous> > constexpr std::tuple< <template-parameter-1-1> >::tuple(const std::tuple<_Args1 ...>&) [with _UElements = {at::Tensor&, at::Tensor&, at::Tensor&}; _Dummy = void; typename std::enable_if<((std::_TC<(1ul == sizeof... (_UElements)), at::Tensor&, at::Tensor&, at::Tensor&>::_ConstructibleTuple<_UElements ...>() && std::_TC<(1ul == sizeof... (_UElements)), at::Tensor&, at::Tensor&, at::Tensor&>::_ImplicitlyConvertibleTuple<_UElements ...>()) && std::_TC<(std::is_same<_Dummy, void>::value && (1ul == 1)), at::Tensor&, at::Tensor&, at::Tensor&>::_NonNestedTuple<const tuple<_Elements ...>&>()), bool>::type <anonymous> = <missing>]\\u2019\r\n/home/scottyyi/MachineLearning/pytorch/pytorch/torch/lib/build/aten/src/ATen/ATen/Functions.h:1437:61:   required from here\r\n/usr/include/c++/6/tuple:495:244: error: wrong number of template arguments (4, should be 2)\r\n       return  __and_<__not_<is_same<tuple<_Elements...>,\r\n                                                                                                                                                                                                                                                    ^    \r\n/usr/include/c++/6/type_traits:1558:8: note: provided for \\u2018template<class _From, class _To> struct std::is_convertible\\u2019\r\n     struct is_convertible\r\n        ^~~~~~~~~~~~~~\r\n/usr/include/c++/6/tuple:502:1: error: body of constexpr function \\u2018static constexpr bool std::_TC<<anonymous>, _Elements>::_NonNestedTuple() [with _SrcTuple = const std::tuple<at::Tensor&, at::Tensor&, at::Tensor&>&; bool <anonymous> = true; _Elements = {at::Tensor&, at::Tensor&, at::Tensor&}]\\u2019 not a return-statement\r\n     }\r\n ^\r\n/usr/include/c++/6/tuple: In instantiation of \\u2018static constexpr bool std::_TC<<anonymous>, _Elements>::_NonNestedTuple() [with _SrcTuple = std::tuple<at::Tensor&, at::Tensor&, at::Tensor&>&&; bool <anonymous> = true; _Elements = {at::Tensor&, at::Tensor&, at::Tensor&}]\\u2019:\r\n/usr/include/c++/6/tuple:686:422:   required by substitution of \\u2018template<class ... _UElements, class _Dummy, typename std::enable_if<((std::_TC<(1ul == sizeof... (_UElements)), at::Tensor&, at::Tensor&, at::Tensor&>::_MoveConstructibleTuple<_UElements ...>() && std::_TC<(1ul == sizeof... (_UElements)), at::Tensor&, at::Tensor&, at::Tensor&>::_ImplicitlyMoveConvertibleTuple<_UElements ...>()) && std::_TC<(std::is_same<_Dummy, void>::value && (1ul == 1)), at::Tensor&, at::Tensor&, at::Tensor&>::_NonNestedTuple<tuple<_Elements ...>&&>()), bool>::type <anonymous> > constexpr std::tuple< <template-parameter-1-1> >::tuple(std::tuple<_Args1 ...>&&) [with _UElements = {at::Tensor&, at::Tensor&, at::Tensor&}; _Dummy = void; typename std::enable_if<((std::_TC<(1ul == sizeof... (_UElements)), at::Tensor&, at::Tensor&, at::Tensor&>::_MoveConstructibleTuple<_UElements ...>() && std::_TC<(1ul == sizeof... (_UElements)), at::Tensor&, at::Tensor&, at::Tensor&>::_ImplicitlyMoveConvertibleTuple<_UElements ...>()) && std::_TC<(std::is_same<_Dummy, void>::value && (1ul == 1)), at::Tensor&, at::Tensor&, at::Tensor&>::_NonNestedTuple<tuple<_Elements ...>&&>()), bool>::type <anonymous> = <missing>]\\u2019\r\n/home/scottyyi/MachineLearning/pytorch/pytorch/torch/lib/build/aten/src/ATen/ATen/Functions.h:1437:61:   required from here\r\n/usr/include/c++/6/tuple:495:244: error: wrong number of template arguments (4, should be 2)\r\n       return  __and_<__not_<is_same<tuple<_Elements...>,\r\n                                                                                                                                                                                                                                                    ^    \r\n/usr/include/c++/6/type_traits:1558:8: note: provided for \\u2018template<class _From, class _To> struct std::is_convertible\\u2019\r\n     struct is_convertible\r\n        ^~~~~~~~~~~~~~\r\n/usr/include/c++/6/tuple:502:1: error: body of constexpr function \\u2018static constexpr bool std::_TC<<anonymous>, _Elements>::_NonNestedTuple() [with _SrcTuple = std::tuple<at::Tensor&, at::Tensor&, at::Tensor&>&&; bool <anonymous> = true; _Elements = {at::Tensor&, at::Tensor&, at::Tensor&}]\\u2019 not a return-statement\r\n     }\r\n ^\r\n/usr/include/c++/6/tuple: In instantiation of \\u2018static constexpr bool std::_TC<<anonymous>, _Elements>::_MoveConstructibleTuple() [with _UElements = {std::tuple<at::Tensor, at::Tensor, at::Tensor>}; bool <anonymous> = true; _Elements = {at::Tensor, at::Tensor, at::Tensor}]\\u2019:\r\n/usr/include/c++/6/tuple:626:248:   required by substitution of \\u2018template<class ... _UElements, typename std::enable_if<(((std::_TC<(sizeof... (_UElements) == 1), at::Tensor, at::Tensor, at::Tensor>::_NotSameTuple<_UElements ...>() && std::_TC<(1ul == sizeof... (_UElements)), at::Tensor, at::Tensor, at::Tensor>::_MoveConstructibleTuple<_UElements ...>()) && std::_TC<(1ul == sizeof... (_UElements)), at::Tensor, at::Tensor, at::Tensor>::_ImplicitlyMoveConvertibleTuple<_UElements ...>()) && (3ul >= 1)), bool>::type <anonymous> > constexpr std::tuple< <template-parameter-1-1> >::tuple(_UElements&& ...) [with _UElements = {std::tuple<at::Tensor, at::Tensor, at::Tensor>}; typename std::enable_if<(((std::_TC<(sizeof... (_UElements) == 1), at::Tensor, at::Tensor, at::Tensor>::_NotSameTuple<_UElements ...>() && std::_TC<(1ul == sizeof... (_UElements)), at::Tensor, at::Tensor, at::Tensor>::_MoveConstructibleTuple<_UElements ...>()) && std::_TC<(1ul == sizeof... (_UElements)), at::Tensor, at::Tensor, at::Tensor>::_ImplicitlyMoveConvertibleTuple<_UElements ...>()) && (3ul >= 1)), bool>::type <anonymous> = <missing>]\\u2019\r\n/home/scottyyi/MachineLearning/pytorch/pytorch/torch/lib/build/aten/src/ATen/ATen/Functions.h:1440:39:   required from here\r\n/usr/include/c++/6/tuple:483:67: error: mismatched argument pack lengths while expanding \\u2018std::is_constructible<_Elements, _UElements&&>\\u2019\r\n       return __and_<is_constructible<_Elements, _UElements&&>...>::value;\r\n                                                                   ^~~~~\r\n/usr/include/c++/6/tuple:484:1: error: body of constexpr function \\u2018static constexpr bool std::_TC<<anonymous>, _Elements>::_MoveConstructibleTuple() [with _UElements = {std::tuple<at::Tensor, at::Tensor, at::Tensor>}; bool <anonymous> = true; _Elements = {at::Tensor, at::Tensor, at::Tensor}]\\u2019 not a return-statement\r\n     }\r\n ^\r\n/usr/include/c++/6/tuple: In instantiation of \\u2018static constexpr bool std::_TC<<anonymous>, _Elements>::_ImplicitlyMoveConvertibleTuple() [with _UElements = {std::tuple<at::Tensor, at::Tensor, at::Tensor>}; bool <anonymous> = true; _Elements = {at::Tensor, at::Tensor, at::Tensor}]\\u2019:\r\n/usr/include/c++/6/tuple:626:362:   required by substitution of \\u2018template<class ... _UElements, typename std::enable_if<(((std::_TC<(sizeof... (_UElements) == 1), at::Tensor, at::Tensor, at::Tensor>::_NotSameTuple<_UElements ...>() && std::_TC<(1ul == sizeof... (_UElements)), at::Tensor, at::Tensor, at::Tensor>::_MoveConstructibleTuple<_UElements ...>()) && std::_TC<(1ul == sizeof... (_UElements)), at::Tensor, at::Tensor, at::Tensor>::_ImplicitlyMoveConvertibleTuple<_UElements ...>()) && (3ul >= 1)), bool>::type <anonymous> > constexpr std::tuple< <template-parameter-1-1> >::tuple(_UElements&& ...) [with _UElements = {std::tuple<at::Tensor, at::Tensor, at::Tensor>}; typename std::enable_if<(((std::_TC<(sizeof... (_UElements) == 1), at::Tensor, at::Tensor, at::Tensor>::_NotSameTuple<_UElements ...>() && std::_TC<(1ul == sizeof... (_UElements)), at::Tensor, at::Tensor, at::Tensor>::_MoveConstructibleTuple<_UElements ...>()) && std::_TC<(1ul == sizeof... (_UElements)), at::Tensor, at::Tensor, at::Tensor>::_ImplicitlyMoveConvertibleTuple<_UElements ...>()) && (3ul >= 1)), bool>::type <anonymous> = <missing>]\\u2019\r\n/home/scottyyi/MachineLearning/pytorch/pytorch/torch/lib/build/aten/src/ATen/ATen/Functions.h:1440:39:   required from here\r\n/usr/include/c++/6/tuple:489:65: error: mismatched argument pack lengths while expanding \\u2018std::is_convertible<_UElements&&, _Elements>\\u2019\r\n       return __and_<is_convertible<_UElements&&, _Elements>...>::value;\r\n                                                                 ^~~~~\r\n/usr/include/c++/6/tuple:490:1: error: body of constexpr function \\u2018static constexpr bool std::_TC<<anonymous>, _Elements>::_ImplicitlyMoveConvertibleTuple() [with _UElements = {std::tuple<at::Tensor, at::Tensor, at::Tensor>}; bool <anonymous> = true; _Elements = {at::Tensor, at::Tensor, at::Tensor}]\\u2019 not a return-statement\r\n     }\r\n ^\r\n/usr/include/c++/6/tuple: In instantiation of \\u2018static constexpr bool std::_TC<<anonymous>, _Elements>::_NonNestedTuple() [with _SrcTuple = const std::tuple<at::Tensor, at::Tensor, at::Tensor>&; bool <anonymous> = true; _Elements = {at::Tensor, at::Tensor, at::Tensor}]\\u2019:\r\n/usr/include/c++/6/tuple:662:419:   required by substitution of \\u2018template<class ... _UElements, class _Dummy, typename std::enable_if<((std::_TC<(1ul == sizeof... (_UElements)), at::Tensor, at::Tensor, at::Tensor>::_ConstructibleTuple<_UElements ...>() && std::_TC<(1ul == sizeof... (_UElements)), at::Tensor, at::Tensor, at::Tensor>::_ImplicitlyConvertibleTuple<_UElements ...>()) && std::_TC<(std::is_same<_Dummy, void>::value && (1ul == 1)), at::Tensor, at::Tensor, at::Tensor>::_NonNestedTuple<const tuple<_Elements ...>&>()), bool>::type <anonymous> > constexpr std::tuple< <template-parameter-1-1> >::tuple(const std::tuple<_Args1 ...>&) [with _UElements = {at::Tensor, at::Tensor, at::Tensor}; _Dummy = void; typename std::enable_if<((std::_TC<(1ul == sizeof... (_UElements)), at::Tensor, at::Tensor, at::Tensor>::_ConstructibleTuple<_UElements ...>() && std::_TC<(1ul == sizeof... (_UElements)), at::Tensor, at::Tensor, at::Tensor>::_ImplicitlyConvertibleTuple<_UElements ...>()) && std::_TC<(std::is_same<_Dummy, void>::value && (1ul == 1)), at::Tensor, at::Tensor, at::Tensor>::_NonNestedTuple<const tuple<_Elements ...>&>()), bool>::type <anonymous> = <missing>]\\u2019\r\n/home/scottyyi/MachineLearning/pytorch/pytorch/torch/lib/build/aten/src/ATen/ATen/Functions.h:1440:39:   required from here\r\n/usr/include/c++/6/tuple:495:244: error: wrong number of template arguments (4, should be 2)\r\n       return  __and_<__not_<is_same<tuple<_Elements...>,\r\n                                                                                                                                                                                                                                                    ^    \r\n/usr/include/c++/6/type_traits:1558:8: note: provided for \\u2018template<class _From, class _To> struct std::is_convertible\\u2019\r\n     struct is_convertible\r\n        ^~~~~~~~~~~~~~\r\n/usr/include/c++/6/tuple:502:1: error: body of constexpr function \\u2018static constexpr bool std::_TC<<anonymous>, _Elements>::_NonNestedTuple() [with _SrcTuple = const std::tuple<at::Tensor, at::Tensor, at::Tensor>&; bool <anonymous> = true; _Elements = {at::Tensor, at::Tensor, at::Tensor}]\\u2019 not a return-statement\r\n     }\r\n ^\r\n/usr/include/c++/6/tuple: In instantiation of \\u2018static constexpr bool std::_TC<<anonymous>, _Elements>::_NonNestedTuple() [with _SrcTuple = std::tuple<at::Tensor, at::Tensor, at::Tensor>&&; bool <anonymous> = true; _Elements = {at::Tensor, at::Tensor, at::Tensor}]\\u2019:\r\n/usr/include/c++/6/tuple:686:422:   required by substitution of \\u2018template<class ... _UElements, class _Dummy, typename std::enable_if<((std::_TC<(1ul == sizeof... (_UElements)), at::Tensor, at::Tensor, at::Tensor>::_MoveConstructibleTuple<_UElements ...>() && std::_TC<(1ul == sizeof... (_UElements)), at::Tensor, at::Tensor, at::Tensor>::_ImplicitlyMoveConvertibleTuple<_UElements ...>()) && std::_TC<(std::is_same<_Dummy, void>::value && (1ul == 1)), at::Tensor, at::Tensor, at::Tensor>::_NonNestedTuple<tuple<_Elements ...>&&>()), bool>::type <anonymous> > constexpr std::tuple< <template-parameter-1-1> >::tuple(std::tuple<_Args1 ...>&&) [with _UElements = {at::Tensor, at::Tensor, at::Tensor}; _Dummy = void; typename std::enable_if<((std::_TC<(1ul == sizeof... (_UElements)), at::Tensor, at::Tensor, at::Tensor>::_MoveConstructibleTuple<_UElements ...>() && std::_TC<(1ul == sizeof... (_UElements)), at::Tensor, at::Tensor, at::Tensor>::_ImplicitlyMoveConvertibleTuple<_UElements ...>()) && std::_TC<(std::is_same<_Dummy, void>::value && (1ul == 1)), at::Tensor, at::Tensor, at::Tensor>::_NonNestedTuple<tuple<_Elements ...>&&>()), bool>::type <anonymous> = <missing>]\\u2019\r\n/home/scottyyi/MachineLearning/pytorch/pytorch/torch/lib/build/aten/src/ATen/ATen/Functions.h:1440:39:   required from here\r\n/usr/include/c++/6/tuple:495:244: error: wrong number of template arguments (4, should be 2)\r\n       return  __and_<__not_<is_same<tuple<_Elements...>,\r\n                                                                                                                                                                                                                                                    ^    \r\n/usr/include/c++/6/type_traits:1558:8: note: provided for \\u2018template<class _From, class _To> struct std::is_convertible\\u2019\r\n     struct is_convertible\r\n        ^~~~~~~~~~~~~~\r\n/usr/include/c++/6/tuple:502:1: error: body of constexpr function \\u2018static constexpr bool std::_TC<<anonymous>, _Elements>::_NonNestedTuple() [with _SrcTuple = std::tuple<at::Tensor, at::Tensor, at::Tensor>&&; bool <anonymous> = true; _Elements = {at::Tensor, at::Tensor, at::Tensor}]\\u2019 not a return-statement\r\n     }\r\n ^\r\nCMake Error at ATen_generated_NativeFunctionsCuda.cu.o.cmake:267 (message):\r\n  Error generating file\r\n  /home/scottyyi/MachineLearning/pytorch/pytorch/torch/lib/build/aten/src/ATen/CMakeFiles/ATen.dir/native/cuda/./ATen_generated_NativeFunctionsCuda.cu.o\r\n\r\n\r\nsrc/ATen/CMakeFiles/ATen.dir/build.make:70765: recipe for target 'src/ATen/CMakeFiles/ATen.dir/native/cuda/ATen_generated_NativeFunctionsCuda.cu.o' failed\r\nmake[2]: *** [src/ATen/CMakeFiles/ATen.dir/native/cuda/ATen_generated_NativeFunctionsCuda.cu.o] Error 1\r\nCMakeFiles/Makefile2:193: recipe for target 'src/ATen/CMakeFiles/ATen.dir/all' failed\r\nmake[1]: *** [src/ATen/CMakeFiles/ATen.dir/all] Error 2\r\nMakefile:127: recipe for target 'all' failed\r\nmake: *** [all] Error 2\r\n"}