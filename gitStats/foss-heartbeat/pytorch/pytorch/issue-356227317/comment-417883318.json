{"url": "https://api.github.com/repos/pytorch/pytorch/issues/comments/417883318", "html_url": "https://github.com/pytorch/pytorch/issues/11176#issuecomment-417883318", "issue_url": "https://api.github.com/repos/pytorch/pytorch/issues/11176", "id": 417883318, "node_id": "MDEyOklzc3VlQ29tbWVudDQxNzg4MzMxOA==", "user": {"login": "SsnL", "id": 5674597, "node_id": "MDQ6VXNlcjU2NzQ1OTc=", "avatar_url": "https://avatars2.githubusercontent.com/u/5674597?v=4", "gravatar_id": "", "url": "https://api.github.com/users/SsnL", "html_url": "https://github.com/SsnL", "followers_url": "https://api.github.com/users/SsnL/followers", "following_url": "https://api.github.com/users/SsnL/following{/other_user}", "gists_url": "https://api.github.com/users/SsnL/gists{/gist_id}", "starred_url": "https://api.github.com/users/SsnL/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/SsnL/subscriptions", "organizations_url": "https://api.github.com/users/SsnL/orgs", "repos_url": "https://api.github.com/users/SsnL/repos", "events_url": "https://api.github.com/users/SsnL/events{/privacy}", "received_events_url": "https://api.github.com/users/SsnL/received_events", "type": "User", "site_admin": false}, "created_at": "2018-09-01T19:53:15Z", "updated_at": "2018-09-01T19:53:15Z", "author_association": "CONTRIBUTOR", "body_html": "<p>Yeah. Introduction of scalars unfortunately broke some existing code. But we believed that this is a necessary hit we needed to take, for the better and more sound tensor shape behavior, and avoiding unexpected behaviors for new users. The change was detailedly described in <a href=\"https://pytorch.org/2018/04/22/0_4_0-migration-guide.html\" rel=\"nofollow\">our migration guide</a>.</p>\n<p>So, instead, you can do <code>self.scale = nn.Parameter(torch.full((), init_value))</code> and the code will run perfectly.</p>", "body_text": "Yeah. Introduction of scalars unfortunately broke some existing code. But we believed that this is a necessary hit we needed to take, for the better and more sound tensor shape behavior, and avoiding unexpected behaviors for new users. The change was detailedly described in our migration guide.\nSo, instead, you can do self.scale = nn.Parameter(torch.full((), init_value)) and the code will run perfectly.", "body": "Yeah. Introduction of scalars unfortunately broke some existing code. But we believed that this is a necessary hit we needed to take, for the better and more sound tensor shape behavior, and avoiding unexpected behaviors for new users. The change was detailedly described in [our migration guide](https://pytorch.org/2018/04/22/0_4_0-migration-guide.html).\r\n\r\nSo, instead, you can do `self.scale = nn.Parameter(torch.full((), init_value))` and the code will run perfectly."}