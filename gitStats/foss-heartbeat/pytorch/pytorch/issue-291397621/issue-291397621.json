{"url": "https://api.github.com/repos/pytorch/pytorch/issues/4838", "repository_url": "https://api.github.com/repos/pytorch/pytorch", "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/4838/labels{/name}", "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/4838/comments", "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/4838/events", "html_url": "https://github.com/pytorch/pytorch/pull/4838", "id": 291397621, "node_id": "MDExOlB1bGxSZXF1ZXN0MTY0OTkxNjMw", "number": 4838, "title": "Add zoneout", "user": {"login": "tomekkorbak", "id": 9259131, "node_id": "MDQ6VXNlcjkyNTkxMzE=", "avatar_url": "https://avatars1.githubusercontent.com/u/9259131?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tomekkorbak", "html_url": "https://github.com/tomekkorbak", "followers_url": "https://api.github.com/users/tomekkorbak/followers", "following_url": "https://api.github.com/users/tomekkorbak/following{/other_user}", "gists_url": "https://api.github.com/users/tomekkorbak/gists{/gist_id}", "starred_url": "https://api.github.com/users/tomekkorbak/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tomekkorbak/subscriptions", "organizations_url": "https://api.github.com/users/tomekkorbak/orgs", "repos_url": "https://api.github.com/users/tomekkorbak/repos", "events_url": "https://api.github.com/users/tomekkorbak/events{/privacy}", "received_events_url": "https://api.github.com/users/tomekkorbak/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 545367190, "node_id": "MDU6TGFiZWw1NDUzNjcxOTA=", "url": "https://api.github.com/repos/pytorch/pytorch/labels/awaiting%20response", "name": "awaiting response", "color": "5319e7", "default": false}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 11, "created_at": "2018-01-24T23:28:01Z", "updated_at": "2018-08-15T01:31:57Z", "closed_at": null, "author_association": "NONE", "pull_request": {"url": "https://api.github.com/repos/pytorch/pytorch/pulls/4838", "html_url": "https://github.com/pytorch/pytorch/pull/4838", "diff_url": "https://github.com/pytorch/pytorch/pull/4838.diff", "patch_url": "https://github.com/pytorch/pytorch/pull/4838.patch"}, "body_html": "<p>This PR adds a new module for regularizing LSTMs and GRUs implementing zoneout, a technique recently pushing state-of-the-art in language modelling. It was requested in <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load issue title\" data-id=\"202634918\" data-permission-text=\"Issue title is private\" data-url=\"https://github.com/pytorch/pytorch/issues/561\" data-hovercard-type=\"issue\" data-hovercard-url=\"/pytorch/pytorch/issues/561/hovercard\" href=\"https://github.com/pytorch/pytorch/issues/561\">#561</a>.</p>\n<p>A naive code snippet for using it with <code>RNNCellBase</code> subclasses is provided in the docstring. Ideally,  more convenient and faster utilities for using zoneout could be implemented, including a wrapper around <code>RNNCellBase</code> (<a href=\"https://github.com/eladhoffer/seq2seq.pytorch/blob/master/seq2seq/models/modules/recurrent.py#L210-L237\">what they did in seq2seq.pytorch</a> looks like a good design) and argument-level support in <code>nn.LSTM</code> and <code>nn.GRU</code>. This is not straightforward since current RNN API is poorly extensible (as pointed out in <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load issue title\" data-id=\"206652810\" data-permission-text=\"Issue title is private\" data-url=\"https://github.com/pytorch/pytorch/issues/711\" data-hovercard-type=\"issue\" data-hovercard-url=\"/pytorch/pytorch/issues/711/hovercard\" href=\"https://github.com/pytorch/pytorch/issues/711\">#711</a>) and zoneout could only work with autograd RNN backend (as opposed to cudnn). Considering that, I decided integrating zoneout with RNN API deserves its own PR and should be discussed in the meantime. Suggestions are most welcome.</p>", "body_text": "This PR adds a new module for regularizing LSTMs and GRUs implementing zoneout, a technique recently pushing state-of-the-art in language modelling. It was requested in #561.\nA naive code snippet for using it with RNNCellBase subclasses is provided in the docstring. Ideally,  more convenient and faster utilities for using zoneout could be implemented, including a wrapper around RNNCellBase (what they did in seq2seq.pytorch looks like a good design) and argument-level support in nn.LSTM and nn.GRU. This is not straightforward since current RNN API is poorly extensible (as pointed out in #711) and zoneout could only work with autograd RNN backend (as opposed to cudnn). Considering that, I decided integrating zoneout with RNN API deserves its own PR and should be discussed in the meantime. Suggestions are most welcome.", "body": "This PR adds a new module for regularizing LSTMs and GRUs implementing zoneout, a technique recently pushing state-of-the-art in language modelling. It was requested in #561.\r\n\r\nA naive code snippet for using it with `RNNCellBase` subclasses is provided in the docstring. Ideally,  more convenient and faster utilities for using zoneout could be implemented, including a wrapper around `RNNCellBase` ([what they did in seq2seq.pytorch](https://github.com/eladhoffer/seq2seq.pytorch/blob/master/seq2seq/models/modules/recurrent.py#L210-L237) looks like a good design) and argument-level support in `nn.LSTM` and `nn.GRU`. This is not straightforward since current RNN API is poorly extensible (as pointed out in #711) and zoneout could only work with autograd RNN backend (as opposed to cudnn). Considering that, I decided integrating zoneout with RNN API deserves its own PR and should be discussed in the meantime. Suggestions are most welcome."}