{"url": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/160046876", "pull_request_review_id": 87096732, "id": 160046876, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE2MDA0Njg3Ng==", "diff_hunk": "@@ -0,0 +1,51 @@\n+from numbers import Number\n+\n+import math\n+\n+import torch\n+from torch.distributions import constraints\n+from torch.distributions.distribution import Distribution\n+from torch.distributions.utils import broadcast_all\n+\n+\n+class Gumbel(Distribution):\n+    r\"\"\"\n+    Samples from a Gumbel Distribution.\n+\n+    Examples::\n+\n+        >>> m = Gumbel(torch.Tensor([1.0]), torch.Tensor([2.0]))\n+        >>> m.sample()  # sample from Gumbel distribution with loc=1, scale=2\n+         1.0124\n+        [torch.FloatTensor of size 1]\n+\n+    Args:\n+        loc (float or Tensor or Variable): Location parameter of the distribution\n+        scale (float or Tensor or Variable): Scale parameter of the distribution\n+    \"\"\"\n+    has_rsample = True\n+    params = {'loc': constraints.real, 'scale': constraints.positive}\n+    support = constraints.real\n+\n+    def __init__(self, loc, scale):\n+        self.loc, self.scale = broadcast_all(loc, scale)\n+        if isinstance(loc, Number) and isinstance(scale, Number):\n+            batch_shape = torch.Size()\n+        else:\n+            batch_shape = self.scale.size()\n+        super(Gumbel, self).__init__(batch_shape)\n+\n+    def rsample(self, sample_shape=torch.Size()):\n+        shape = self._extended_shape(sample_shape)\n+        uni_dist = self.scale.new(shape).uniform_()\n+        # X ~ Uniform(0, 1)\n+        # Y = loc - scale * ln (-ln (X)) ~ Gumbel(loc, scale)\n+        return self.loc - self.scale * torch.log(-uni_dist.log())", "path": "torch/distributions/gumbel.py", "position": null, "original_position": 43, "commit_id": "2c8019531ca852b19dcf1e518cabde9b01f3528c", "original_commit_id": "5c994f1359341198e623bf95af3887634a7014ad", "user": {"login": "vadimkantorov", "id": 1041752, "node_id": "MDQ6VXNlcjEwNDE3NTI=", "avatar_url": "https://avatars0.githubusercontent.com/u/1041752?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vadimkantorov", "html_url": "https://github.com/vadimkantorov", "followers_url": "https://api.github.com/users/vadimkantorov/followers", "following_url": "https://api.github.com/users/vadimkantorov/following{/other_user}", "gists_url": "https://api.github.com/users/vadimkantorov/gists{/gist_id}", "starred_url": "https://api.github.com/users/vadimkantorov/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vadimkantorov/subscriptions", "organizations_url": "https://api.github.com/users/vadimkantorov/orgs", "repos_url": "https://api.github.com/users/vadimkantorov/repos", "events_url": "https://api.github.com/users/vadimkantorov/events{/privacy}", "received_events_url": "https://api.github.com/users/vadimkantorov/received_events", "type": "User", "site_admin": false}, "body": "Can this produce `-inf` if `unform_` happens to sample exactly 0?\r\n\r\n[torch.Tensor.uniform_](http://pytorch.org/docs/master/tensors.html?highlight=uniform_#torch.Tensor.uniform_) doesn't specify if low value can realize exactly (should the docs be clearer about this?)\r\n\r\n[torch.distributions.Uniform](http://pytorch.org/docs/master/distributions.html?highlight=uniform#torch.distributions.Uniform) does specify this is possible.\r\n  ", "created_at": "2018-01-07T11:39:05Z", "updated_at": "2018-11-23T15:37:55Z", "html_url": "https://github.com/pytorch/pytorch/pull/4517#discussion_r160046876", "pull_request_url": "https://api.github.com/repos/pytorch/pytorch/pulls/4517", "author_association": "NONE", "_links": {"self": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/160046876"}, "html": {"href": "https://github.com/pytorch/pytorch/pull/4517#discussion_r160046876"}, "pull_request": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/4517"}}, "body_html": "<p>Can this produce <code>-inf</code> if <code>unform_</code> happens to sample exactly 0?</p>\n<p><a href=\"http://pytorch.org/docs/master/tensors.html?highlight=uniform_#torch.Tensor.uniform_\" rel=\"nofollow\">torch.Tensor.uniform_</a> doesn't specify if low value can realize exactly (should the docs be clearer about this?)</p>\n<p><a href=\"http://pytorch.org/docs/master/distributions.html?highlight=uniform#torch.distributions.Uniform\" rel=\"nofollow\">torch.distributions.Uniform</a> does specify this is possible.</p>", "body_text": "Can this produce -inf if unform_ happens to sample exactly 0?\ntorch.Tensor.uniform_ doesn't specify if low value can realize exactly (should the docs be clearer about this?)\ntorch.distributions.Uniform does specify this is possible."}