{"url": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/181227907", "pull_request_review_id": 111801510, "id": 181227907, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MTIyNzkwNw==", "diff_hunk": "@@ -74,18 +77,21 @@ static THCGenerator* THCRandom_rawGenerator(THCState* state)\n THCGenerator* THCRandom_getGenerator(THCState* state)\n {\n   THCGenerator* gen = THCRandom_rawGenerator(state);\n-  if (gen->initf == 0)\n+  std::lock_guard<std::mutex> lock(gen->mutex);\n+  if (gen->gen_state.initf == 0)\n   {\n     initializeGenerator(state, gen);\n-    createGeneratorState(gen, gen->initial_seed);\n-    gen->initf = 1;\n+    createGeneratorState(gen, gen->gen_state.initial_seed);\n+    gen->gen_state.initf = 1;\n   }\n   return gen;\n }\n \n struct curandStateMtgp32* THCRandom_generatorStates(struct THCState* state)\n {\n-  return THCRandom_getGenerator(state)->gen_states;\n+  THCGenerator* gen = THCRandom_getGenerator(state);\n+  std::lock_guard<std::mutex> lock(gen->mutex);", "path": "aten/src/THC/THCTensorRandom.cpp", "position": null, "original_position": 68, "commit_id": "92b24234d4c4fea55a1a0617ac21153584579949", "original_commit_id": "44c17946184b76d5cb5aa0bc1c5b11367d311eba", "user": {"login": "apaszke", "id": 4583066, "node_id": "MDQ6VXNlcjQ1ODMwNjY=", "avatar_url": "https://avatars3.githubusercontent.com/u/4583066?v=4", "gravatar_id": "", "url": "https://api.github.com/users/apaszke", "html_url": "https://github.com/apaszke", "followers_url": "https://api.github.com/users/apaszke/followers", "following_url": "https://api.github.com/users/apaszke/following{/other_user}", "gists_url": "https://api.github.com/users/apaszke/gists{/gist_id}", "starred_url": "https://api.github.com/users/apaszke/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/apaszke/subscriptions", "organizations_url": "https://api.github.com/users/apaszke/orgs", "repos_url": "https://api.github.com/users/apaszke/repos", "events_url": "https://api.github.com/users/apaszke/events{/privacy}", "received_events_url": "https://api.github.com/users/apaszke/received_events", "type": "User", "site_admin": false}, "body": "I can't see how is this lock supposed to help. It calls `getGenerator` which should ensure that it's ready to be used by now, and this doesn't protect the actual use of the states anyway", "created_at": "2018-04-12T21:31:30Z", "updated_at": "2018-11-23T15:42:22Z", "html_url": "https://github.com/pytorch/pytorch/pull/6527#discussion_r181227907", "pull_request_url": "https://api.github.com/repos/pytorch/pytorch/pulls/6527", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/181227907"}, "html": {"href": "https://github.com/pytorch/pytorch/pull/6527#discussion_r181227907"}, "pull_request": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/6527"}}, "body_html": "<p>I can't see how is this lock supposed to help. It calls <code>getGenerator</code> which should ensure that it's ready to be used by now, and this doesn't protect the actual use of the states anyway</p>", "body_text": "I can't see how is this lock supposed to help. It calls getGenerator which should ensure that it's ready to be used by now, and this doesn't protect the actual use of the states anyway"}