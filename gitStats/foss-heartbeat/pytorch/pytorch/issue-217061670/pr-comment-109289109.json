{"url": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/109289109", "pull_request_review_id": 30386289, "id": 109289109, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEwOTI4OTEwOQ==", "diff_hunk": "@@ -71,18 +72,19 @@ def backward(self, grad_output):\n             grad_input[some_zeros] = 0\n \n             single_zero_idx = slice_zero_count.eq(1).nonzero()\n-            for idx in single_zero_idx:\n-                idx_tuple = tuple(idx.cpu())\n-                input_idx_tuple = idx_tuple[:self.dim] + (slice(0, None),) + idx_tuple[self.dim + 1:]\n-\n-                # slice_mask and input_copy are 1D\n-                slice_mask = zero_mask[input_idx_tuple]\n-                input_copy = input[input_idx_tuple].clone()\n-                zero_idx = slice_mask.nonzero()[0, 0]\n-                input_copy[zero_idx] = 1.\n-\n-                grad_idx_tuple = idx_tuple[:self.dim] + (zero_idx,) + idx_tuple[self.dim + 1:]\n-                grad_input[grad_idx_tuple] = grad_output[idx_tuple] * input_copy.prod()\n+            if len(single_zero_idx) > 0:", "path": "torch/autograd/_functions/reduce.py", "position": null, "original_position": 27, "commit_id": "37d95687c47beab841cd67003de3390414db0dca", "original_commit_id": "f6a50c2a5406a6acb1c06d1679edff3caf6de494", "user": {"login": "apaszke", "id": 4583066, "node_id": "MDQ6VXNlcjQ1ODMwNjY=", "avatar_url": "https://avatars3.githubusercontent.com/u/4583066?v=4", "gravatar_id": "", "url": "https://api.github.com/users/apaszke", "html_url": "https://github.com/apaszke", "followers_url": "https://api.github.com/users/apaszke/followers", "following_url": "https://api.github.com/users/apaszke/following{/other_user}", "gists_url": "https://api.github.com/users/apaszke/gists{/gist_id}", "starred_url": "https://api.github.com/users/apaszke/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/apaszke/subscriptions", "organizations_url": "https://api.github.com/users/apaszke/orgs", "repos_url": "https://api.github.com/users/apaszke/repos", "events_url": "https://api.github.com/users/apaszke/events{/privacy}", "received_events_url": "https://api.github.com/users/apaszke/received_events", "type": "User", "site_admin": false}, "body": "That `if` is unnecessary. If the length of `single_zero_idx` then the body of the loop won't be executed anyway.", "created_at": "2017-04-01T17:07:18Z", "updated_at": "2018-11-23T15:32:57Z", "html_url": "https://github.com/pytorch/pytorch/pull/1108#discussion_r109289109", "pull_request_url": "https://api.github.com/repos/pytorch/pytorch/pulls/1108", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/109289109"}, "html": {"href": "https://github.com/pytorch/pytorch/pull/1108#discussion_r109289109"}, "pull_request": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/1108"}}, "body_html": "<p>That <code>if</code> is unnecessary. If the length of <code>single_zero_idx</code> then the body of the loop won't be executed anyway.</p>", "body_text": "That if is unnecessary. If the length of single_zero_idx then the body of the loop won't be executed anyway."}