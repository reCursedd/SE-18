{"url": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/83879535", "pull_request_review_id": 4693242, "id": 83879535, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDgzODc5NTM1", "diff_hunk": "@@ -134,27 +146,30 @@ def __getstate__(self):\n         # but signalling the end is tricky without a non-blocking API\n         raise NotImplementedError(\"DataLoaderIterator cannot be pickled\")\n \n-    def _joinWorkers(self):\n-        self.joined = True\n-        if self.num_workers:\n-            [self.index_queue.put(None) for x in self.workers]\n-            [x.join() for x in self.workers]\n+    def _shutdown_workers(self):\n+        if not self.shutdown:\n+            self.shutdown = True\n+            for _ in self.workers:\n+                self.index_queue.put(None)", "path": "torch/utils/data/dataloader.py", "position": 194, "original_position": 195, "commit_id": "0ece591a9d5b1fc295bf33814eacb5f411a37c32", "original_commit_id": "cdf0e0e777a9a2255d8c3d60bcf6e482ab6720a1", "user": {"login": "colesbury", "id": 655866, "node_id": "MDQ6VXNlcjY1NTg2Ng==", "avatar_url": "https://avatars1.githubusercontent.com/u/655866?v=4", "gravatar_id": "", "url": "https://api.github.com/users/colesbury", "html_url": "https://github.com/colesbury", "followers_url": "https://api.github.com/users/colesbury/followers", "following_url": "https://api.github.com/users/colesbury/following{/other_user}", "gists_url": "https://api.github.com/users/colesbury/gists{/gist_id}", "starred_url": "https://api.github.com/users/colesbury/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/colesbury/subscriptions", "organizations_url": "https://api.github.com/users/colesbury/orgs", "repos_url": "https://api.github.com/users/colesbury/repos", "events_url": "https://api.github.com/users/colesbury/events{/privacy}", "received_events_url": "https://api.github.com/users/colesbury/received_events", "type": "User", "site_admin": false}, "body": "This prevents annoying delays in the `__del__` when, for example, you exit out of the the loop early. The `join()`'s didn't buy us much -- no ordering issues between processes here. At best, they surface some deadlock issues.\n\nThe synchronization on GC (and associated issues) in Lua Torch was one of the the things that really annoyed me.\n", "created_at": "2016-10-18T15:21:35Z", "updated_at": "2018-11-23T15:31:45Z", "html_url": "https://github.com/pytorch/pytorch/pull/135#discussion_r83879535", "pull_request_url": "https://api.github.com/repos/pytorch/pytorch/pulls/135", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/83879535"}, "html": {"href": "https://github.com/pytorch/pytorch/pull/135#discussion_r83879535"}, "pull_request": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/135"}}, "body_html": "<p>This prevents annoying delays in the <code>__del__</code> when, for example, you exit out of the the loop early. The <code>join()</code>'s didn't buy us much -- no ordering issues between processes here. At best, they surface some deadlock issues.</p>\n<p>The synchronization on GC (and associated issues) in Lua Torch was one of the the things that really annoyed me.</p>", "body_text": "This prevents annoying delays in the __del__ when, for example, you exit out of the the loop early. The join()'s didn't buy us much -- no ordering issues between processes here. At best, they surface some deadlock issues.\nThe synchronization on GC (and associated issues) in Lua Torch was one of the the things that really annoyed me.", "in_reply_to_id": 83830932}