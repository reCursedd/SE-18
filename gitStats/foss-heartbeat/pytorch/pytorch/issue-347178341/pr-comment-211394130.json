{"url": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/211394130", "pull_request_review_id": 147802454, "id": 211394130, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIxMTM5NDEzMA==", "diff_hunk": "@@ -473,6 +474,18 @@ at::optional<std::vector<Value*>> tryMatchSchema(\n           value = graph.insertNode(graph.createUndefined())->output();\n       }\n \n+      //implicit conversion of tensors to scalars\n+      if(convert_tensors_to_nums && arg.type->isSubtypeOf(NumberType::get())\n+          && value->type()->isSubtypeOf(DynamicType::get())) {\n+          auto err = checkScalarToNum(value->type(), arg.type);", "path": "torch/csrc/jit/script/compiler.cpp", "position": null, "original_position": 17, "commit_id": "b9a33edecbfb28f126046d76cb2c17158aaf53a0", "original_commit_id": "211d12c73ec006aee4bf374b756603d99217c08d", "user": {"login": "zdevito", "id": 370202, "node_id": "MDQ6VXNlcjM3MDIwMg==", "avatar_url": "https://avatars0.githubusercontent.com/u/370202?v=4", "gravatar_id": "", "url": "https://api.github.com/users/zdevito", "html_url": "https://github.com/zdevito", "followers_url": "https://api.github.com/users/zdevito/followers", "following_url": "https://api.github.com/users/zdevito/following{/other_user}", "gists_url": "https://api.github.com/users/zdevito/gists{/gist_id}", "starred_url": "https://api.github.com/users/zdevito/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/zdevito/subscriptions", "organizations_url": "https://api.github.com/users/zdevito/orgs", "repos_url": "https://api.github.com/users/zdevito/repos", "events_url": "https://api.github.com/users/zdevito/events{/privacy}", "received_events_url": "https://api.github.com/users/zdevito/received_events", "type": "User", "site_admin": false}, "body": "I don't like that fact that having a more concrete type here (like a sized tensor) increases the amount of error messages the compiler would emit. It could have some subtle behavior, such as moving on to another overload of this function, when the sizes are wrong but accepting this overload if it cannot determine the sizes. We should just allow this to fail.", "created_at": "2018-08-20T20:19:20Z", "updated_at": "2018-11-23T15:49:38Z", "html_url": "https://github.com/pytorch/pytorch/pull/10180#discussion_r211394130", "pull_request_url": "https://api.github.com/repos/pytorch/pytorch/pulls/10180", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/211394130"}, "html": {"href": "https://github.com/pytorch/pytorch/pull/10180#discussion_r211394130"}, "pull_request": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/10180"}}, "body_html": "<p>I don't like that fact that having a more concrete type here (like a sized tensor) increases the amount of error messages the compiler would emit. It could have some subtle behavior, such as moving on to another overload of this function, when the sizes are wrong but accepting this overload if it cannot determine the sizes. We should just allow this to fail.</p>", "body_text": "I don't like that fact that having a more concrete type here (like a sized tensor) increases the amount of error messages the compiler would emit. It could have some subtle behavior, such as moving on to another overload of this function, when the sizes are wrong but accepting this overload if it cannot determine the sizes. We should just allow this to fail."}