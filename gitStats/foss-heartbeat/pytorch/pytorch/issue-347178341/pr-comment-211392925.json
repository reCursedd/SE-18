{"url": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/211392925", "pull_request_review_id": 147802454, "id": 211392925, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIxMTM5MjkyNQ==", "diff_hunk": "@@ -245,7 +245,24 @@ void PropagateShapeOnNode(Node * node, bool insert_expands) {\n       }\n       return;\n     }\n-    case prim::TensorToNum:\n+    case prim::ScalarToNum:\n+      if (auto err = checkScalarToNum(node->input()->type(), node->output()->type())) {\n+        throw std::runtime_error(*err);\n+      }\n+    case prim::TensorToNum: {\n+      if (auto ten = node->input()->type()->cast<TensorType>()) {\n+        int64_t numel = 1;\n+        for (int64_t size : ten->sizes()) {\n+          numel *= size;\n+        }\n+        if (numel != 1) {\n+          std::stringstream ss;\n+          ss << \"Tensor with \" << numel << \" elements could not be converted to Scalar\\n\";\n+          throw std::runtime_error(ss.str());", "path": "torch/csrc/jit/passes/shape_analysis.cpp", "position": null, "original_position": 18, "commit_id": "b9a33edecbfb28f126046d76cb2c17158aaf53a0", "original_commit_id": "211d12c73ec006aee4bf374b756603d99217c08d", "user": {"login": "zdevito", "id": 370202, "node_id": "MDQ6VXNlcjM3MDIwMg==", "avatar_url": "https://avatars0.githubusercontent.com/u/370202?v=4", "gravatar_id": "", "url": "https://api.github.com/users/zdevito", "html_url": "https://github.com/zdevito", "followers_url": "https://api.github.com/users/zdevito/followers", "following_url": "https://api.github.com/users/zdevito/following{/other_user}", "gists_url": "https://api.github.com/users/zdevito/gists{/gist_id}", "starred_url": "https://api.github.com/users/zdevito/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/zdevito/subscriptions", "organizations_url": "https://api.github.com/users/zdevito/orgs", "repos_url": "https://api.github.com/users/zdevito/repos", "events_url": "https://api.github.com/users/zdevito/events{/privacy}", "received_events_url": "https://api.github.com/users/zdevito/received_events", "type": "User", "site_admin": false}, "body": "Shape analysis should never fail, even if the code when run _would_ fail. This would be as if the C++ compiler would crash in an optimization if it noticed the code it was compiling would throw an exception.  TensorToNum should just leave the number type as is.", "created_at": "2018-08-20T20:14:55Z", "updated_at": "2018-11-23T15:49:38Z", "html_url": "https://github.com/pytorch/pytorch/pull/10180#discussion_r211392925", "pull_request_url": "https://api.github.com/repos/pytorch/pytorch/pulls/10180", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/211392925"}, "html": {"href": "https://github.com/pytorch/pytorch/pull/10180#discussion_r211392925"}, "pull_request": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/10180"}}, "body_html": "<p>Shape analysis should never fail, even if the code when run <em>would</em> fail. This would be as if the C++ compiler would crash in an optimization if it noticed the code it was compiling would throw an exception.  TensorToNum should just leave the number type as is.</p>", "body_text": "Shape analysis should never fail, even if the code when run would fail. This would be as if the C++ compiler would crash in an optimization if it noticed the code it was compiling would throw an exception.  TensorToNum should just leave the number type as is."}