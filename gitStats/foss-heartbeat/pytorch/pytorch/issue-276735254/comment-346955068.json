{"url": "https://api.github.com/repos/pytorch/pytorch/issues/comments/346955068", "html_url": "https://github.com/pytorch/pytorch/issues/3868#issuecomment-346955068", "issue_url": "https://api.github.com/repos/pytorch/pytorch/issues/3868", "id": 346955068, "node_id": "MDEyOklzc3VlQ29tbWVudDM0Njk1NTA2OA==", "user": {"login": "xinyuwufei", "id": 6299086, "node_id": "MDQ6VXNlcjYyOTkwODY=", "avatar_url": "https://avatars0.githubusercontent.com/u/6299086?v=4", "gravatar_id": "", "url": "https://api.github.com/users/xinyuwufei", "html_url": "https://github.com/xinyuwufei", "followers_url": "https://api.github.com/users/xinyuwufei/followers", "following_url": "https://api.github.com/users/xinyuwufei/following{/other_user}", "gists_url": "https://api.github.com/users/xinyuwufei/gists{/gist_id}", "starred_url": "https://api.github.com/users/xinyuwufei/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/xinyuwufei/subscriptions", "organizations_url": "https://api.github.com/users/xinyuwufei/orgs", "repos_url": "https://api.github.com/users/xinyuwufei/repos", "events_url": "https://api.github.com/users/xinyuwufei/events{/privacy}", "received_events_url": "https://api.github.com/users/xinyuwufei/received_events", "type": "User", "site_admin": false}, "created_at": "2017-11-25T17:43:39Z", "updated_at": "2017-11-25T17:43:39Z", "author_association": "NONE", "body_html": "<p>hi apaszke,<br>\nthanks for the explanation.<br>\nI want to do an in-place operation for some indexes of var.data, now I think the more natural way is to use var.data[idx].<br>\njust for my curiosity,  what happens for the use case of this:</p>\n<div class=\"highlight highlight-source-python\"><pre>out<span class=\"pl-k\">=</span>np.array([[<span class=\"pl-c1\">5.5737e-08</span>,<span class=\"pl-c1\">1.2218e-07</span>]],<span class=\"pl-v\">dtype</span><span class=\"pl-k\">=</span>np.float32)\nout <span class=\"pl-k\">=</span> Variable(torch.from_numpy(out).cuda())\ntorch.mul(out[<span class=\"pl-c1\">0</span>,:].data,zero_one_mat,<span class=\"pl-v\">out</span><span class=\"pl-k\">=</span>out[<span class=\"pl-c1\">0</span>,:].data)\n<span class=\"pl-c1\">print</span>(out.data)</pre></div>\n<p>it still gives me the right result.</p>\n<p>Thanks!</p>", "body_text": "hi apaszke,\nthanks for the explanation.\nI want to do an in-place operation for some indexes of var.data, now I think the more natural way is to use var.data[idx].\njust for my curiosity,  what happens for the use case of this:\nout=np.array([[5.5737e-08,1.2218e-07]],dtype=np.float32)\nout = Variable(torch.from_numpy(out).cuda())\ntorch.mul(out[0,:].data,zero_one_mat,out=out[0,:].data)\nprint(out.data)\nit still gives me the right result.\nThanks!", "body": "hi apaszke,\r\nthanks for the explanation.\r\nI want to do an in-place operation for some indexes of var.data, now I think the more natural way is to use var.data[idx].\r\njust for my curiosity,  what happens for the use case of this:\r\n\r\n```python\r\nout=np.array([[5.5737e-08,1.2218e-07]],dtype=np.float32)\r\nout = Variable(torch.from_numpy(out).cuda())\r\ntorch.mul(out[0,:].data,zero_one_mat,out=out[0,:].data)\r\nprint(out.data)\r\n```\r\n\r\nit still gives me the right result.\r\n\r\nThanks!"}