{"url": "https://api.github.com/repos/pytorch/pytorch/issues/comments/346949889", "html_url": "https://github.com/pytorch/pytorch/issues/3868#issuecomment-346949889", "issue_url": "https://api.github.com/repos/pytorch/pytorch/issues/3868", "id": 346949889, "node_id": "MDEyOklzc3VlQ29tbWVudDM0Njk0OTg4OQ==", "user": {"login": "apaszke", "id": 4583066, "node_id": "MDQ6VXNlcjQ1ODMwNjY=", "avatar_url": "https://avatars3.githubusercontent.com/u/4583066?v=4", "gravatar_id": "", "url": "https://api.github.com/users/apaszke", "html_url": "https://github.com/apaszke", "followers_url": "https://api.github.com/users/apaszke/followers", "following_url": "https://api.github.com/users/apaszke/following{/other_user}", "gists_url": "https://api.github.com/users/apaszke/gists{/gist_id}", "starred_url": "https://api.github.com/users/apaszke/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/apaszke/subscriptions", "organizations_url": "https://api.github.com/users/apaszke/orgs", "repos_url": "https://api.github.com/users/apaszke/repos", "events_url": "https://api.github.com/users/apaszke/events{/privacy}", "received_events_url": "https://api.github.com/users/apaszke/received_events", "type": "User", "site_admin": false}, "created_at": "2017-11-25T16:11:56Z", "updated_at": "2017-11-25T16:12:02Z", "author_association": "MEMBER", "body_html": "<p>That's expected. When you do <code>var[idx]</code> you get a new Variable, and changing its <code>.data</code> won't modify the <code>.data</code> of <code>var</code> in any way. If you want to differentiate this operation remove <code>.data</code> altogether. If you don't, do <code>var[idx].data.copy_(some_expression.data)</code>.</p>", "body_text": "That's expected. When you do var[idx] you get a new Variable, and changing its .data won't modify the .data of var in any way. If you want to differentiate this operation remove .data altogether. If you don't, do var[idx].data.copy_(some_expression.data).", "body": "That's expected. When you do `var[idx]` you get a new Variable, and changing its `.data` won't modify the `.data` of `var` in any way. If you want to differentiate this operation remove `.data` altogether. If you don't, do `var[idx].data.copy_(some_expression.data)`."}