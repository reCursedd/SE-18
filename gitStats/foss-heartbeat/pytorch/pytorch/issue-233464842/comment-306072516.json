{"url": "https://api.github.com/repos/pytorch/pytorch/issues/comments/306072516", "html_url": "https://github.com/pytorch/pytorch/pull/1718#issuecomment-306072516", "issue_url": "https://api.github.com/repos/pytorch/pytorch/issues/1718", "id": 306072516, "node_id": "MDEyOklzc3VlQ29tbWVudDMwNjA3MjUxNg==", "user": {"login": "lantiga", "id": 191033, "node_id": "MDQ6VXNlcjE5MTAzMw==", "avatar_url": "https://avatars2.githubusercontent.com/u/191033?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lantiga", "html_url": "https://github.com/lantiga", "followers_url": "https://api.github.com/users/lantiga/followers", "following_url": "https://api.github.com/users/lantiga/following{/other_user}", "gists_url": "https://api.github.com/users/lantiga/gists{/gist_id}", "starred_url": "https://api.github.com/users/lantiga/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lantiga/subscriptions", "organizations_url": "https://api.github.com/users/lantiga/orgs", "repos_url": "https://api.github.com/users/lantiga/repos", "events_url": "https://api.github.com/users/lantiga/events{/privacy}", "received_events_url": "https://api.github.com/users/lantiga/received_events", "type": "User", "site_admin": false}, "created_at": "2017-06-04T22:47:15Z", "updated_at": "2017-06-04T22:47:15Z", "author_association": "COLLABORATOR", "body_html": "<p>To verify:</p>\n<pre><code>import torch\nimport torch.nn as nn\nfrom torch.autograd import Variable\n\ndef hook(module, grad_input, grad_output):\n    print(grad_input)\n    return grad_input\n\na = Variable(torch.randn(1,1,3,3))\nconv = nn.Conv2d(1, 1, (3,3), bias=False)\nconv.register_backward_hook(hook)\nb = conv(a)\nb.backward()\n</code></pre>", "body_text": "To verify:\nimport torch\nimport torch.nn as nn\nfrom torch.autograd import Variable\n\ndef hook(module, grad_input, grad_output):\n    print(grad_input)\n    return grad_input\n\na = Variable(torch.randn(1,1,3,3))\nconv = nn.Conv2d(1, 1, (3,3), bias=False)\nconv.register_backward_hook(hook)\nb = conv(a)\nb.backward()", "body": "To verify:\r\n```\r\nimport torch\r\nimport torch.nn as nn\r\nfrom torch.autograd import Variable\r\n\r\ndef hook(module, grad_input, grad_output):\r\n    print(grad_input)\r\n    return grad_input\r\n\r\na = Variable(torch.randn(1,1,3,3))\r\nconv = nn.Conv2d(1, 1, (3,3), bias=False)\r\nconv.register_backward_hook(hook)\r\nb = conv(a)\r\nb.backward()\r\n```"}