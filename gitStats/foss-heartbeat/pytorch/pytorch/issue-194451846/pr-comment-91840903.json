{"url": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/91840903", "pull_request_review_id": 12353379, "id": 91840903, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDkxODQwOTAz", "diff_hunk": "@@ -0,0 +1,85 @@\n+from ..stochastic_function import StochasticFunction\n+\n+# Gradient formulas are based on Simple Statistical Gradient-Following\n+# Algorithms for Connectionist Reinforcement Learning, available at\n+# http://incompleteideas.net/sutton/williams-92.pdf\n+\n+\n+class Multinomial(StochasticFunction):\n+\n+    def __init__(self, num_samples):\n+        super(Multinomial, self).__init__()\n+        self.num_samples = num_samples\n+\n+    def forward(self, probs):\n+        samples = probs.multinomial(self.num_samples)\n+        self.save_for_backward(probs, samples)\n+        self.mark_non_differentiable(samples)\n+        return samples\n+\n+    def backward(self, reward):\n+        probs, samples = self.saved_tensors\n+        grad_probs = probs.new().resize_as_(probs).zero_()\n+        output_probs = probs.index_select(0, samples)\n+        output_probs.add_(1e-6).cinv_()\n+        output_probs.neg_().mul_(reward)\n+        grad_probs.index_add_(0, samples, output_probs)\n+        return grad_probs\n+\n+\n+class Bernoulli(StochasticFunction):\n+\n+    def forward(self, probs):\n+        samples = probs.clone().bernoulli_()\n+        self.save_for_backward(probs, samples)\n+        self.mark_non_differentiable(samples)\n+        return samples\n+\n+    def backward(self, reward):\n+        probs, samples = self.saved_tensors\n+        rev_probs = probs.neg().add_(1)\n+        denom = probs.mul(rev_probs).add_(1e-6)\n+        grad_probs = probs.sub(samples).div_(denom).mul_(reward)", "path": "torch/autograd/functions/random.py", "position": null, "original_position": 42, "commit_id": "a13e7113196241133204ee553d157b455002402a", "original_commit_id": "c1aa1ca5ce6ef9513b1381443cd4874b9645f11f", "user": {"login": "apaszke", "id": 4583066, "node_id": "MDQ6VXNlcjQ1ODMwNjY=", "avatar_url": "https://avatars3.githubusercontent.com/u/4583066?v=4", "gravatar_id": "", "url": "https://api.github.com/users/apaszke", "html_url": "https://github.com/apaszke", "followers_url": "https://api.github.com/users/apaszke/followers", "following_url": "https://api.github.com/users/apaszke/following{/other_user}", "gists_url": "https://api.github.com/users/apaszke/gists{/gist_id}", "starred_url": "https://api.github.com/users/apaszke/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/apaszke/subscriptions", "organizations_url": "https://api.github.com/users/apaszke/orgs", "repos_url": "https://api.github.com/users/apaszke/repos", "events_url": "https://api.github.com/users/apaszke/events{/privacy}", "received_events_url": "https://api.github.com/users/apaszke/received_events", "type": "User", "site_admin": false}, "body": "It's a micro-optimization on my side (one python function call less!!) \ud83d\ude1c You're right, I'll make it readable.", "created_at": "2016-12-10T19:37:12Z", "updated_at": "2018-11-23T15:31:58Z", "html_url": "https://github.com/pytorch/pytorch/pull/294#discussion_r91840903", "pull_request_url": "https://api.github.com/repos/pytorch/pytorch/pulls/294", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/91840903"}, "html": {"href": "https://github.com/pytorch/pytorch/pull/294#discussion_r91840903"}, "pull_request": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/294"}}, "body_html": "<p>It's a micro-optimization on my side (one python function call less!!) <g-emoji class=\"g-emoji\" alias=\"stuck_out_tongue_winking_eye\" fallback-src=\"https://assets-cdn.github.com/images/icons/emoji/unicode/1f61c.png\">\ud83d\ude1c</g-emoji> You're right, I'll make it readable.</p>", "body_text": "It's a micro-optimization on my side (one python function call less!!) \ud83d\ude1c You're right, I'll make it readable.", "in_reply_to_id": 91780450}