{"url": "https://api.github.com/repos/pytorch/pytorch/issues/10481", "repository_url": "https://api.github.com/repos/pytorch/pytorch", "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/10481/labels{/name}", "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/10481/comments", "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/10481/events", "html_url": "https://github.com/pytorch/pytorch/pull/10481", "id": 350159406, "node_id": "MDExOlB1bGxSZXF1ZXN0MjA4MDc3MjM1", "number": 10481, "title": "Move RNN implementations to C++", "user": {"login": "apaszke", "id": 4583066, "node_id": "MDQ6VXNlcjQ1ODMwNjY=", "avatar_url": "https://avatars3.githubusercontent.com/u/4583066?v=4", "gravatar_id": "", "url": "https://api.github.com/users/apaszke", "html_url": "https://github.com/apaszke", "followers_url": "https://api.github.com/users/apaszke/followers", "following_url": "https://api.github.com/users/apaszke/following{/other_user}", "gists_url": "https://api.github.com/users/apaszke/gists{/gist_id}", "starred_url": "https://api.github.com/users/apaszke/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/apaszke/subscriptions", "organizations_url": "https://api.github.com/users/apaszke/orgs", "repos_url": "https://api.github.com/users/apaszke/repos", "events_url": "https://api.github.com/users/apaszke/events{/privacy}", "received_events_url": "https://api.github.com/users/apaszke/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-08-13T19:22:38Z", "updated_at": "2018-11-23T15:49:25Z", "closed_at": "2018-08-15T20:26:51Z", "author_association": "MEMBER", "pull_request": {"url": "https://api.github.com/repos/pytorch/pytorch/pulls/10481", "html_url": "https://github.com/pytorch/pytorch/pull/10481", "diff_url": "https://github.com/pytorch/pytorch/pull/10481.diff", "patch_url": "https://github.com/pytorch/pytorch/pull/10481.patch"}, "body_html": "<p>This is the first of two changes that are supposed to improve how we handle RNNs in the JIT. They still get traced as <code>PythonOp</code>s, but now it will be much easier to actually expose them to the JIT as e.g. <code>aten::lstm</code>, and ignore the Python interpreter entirely. This needs some symbolic adjustments that will be part of a second PR.</p>\n<p>Even when we fix symbolics, there will still be a bit of a problem with statefulness of the cuDNN API (we need a mutable cache for the dropout state, but our IR has no way of representing that).</p>\n<p><a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=370202\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/zdevito\">@zdevito</a> <a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=13564\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/ezyang\">@ezyang</a></p>", "body_text": "This is the first of two changes that are supposed to improve how we handle RNNs in the JIT. They still get traced as PythonOps, but now it will be much easier to actually expose them to the JIT as e.g. aten::lstm, and ignore the Python interpreter entirely. This needs some symbolic adjustments that will be part of a second PR.\nEven when we fix symbolics, there will still be a bit of a problem with statefulness of the cuDNN API (we need a mutable cache for the dropout state, but our IR has no way of representing that).\n@zdevito @ezyang", "body": "This is the first of two changes that are supposed to improve how we handle RNNs in the JIT. They still get traced as `PythonOp`s, but now it will be much easier to actually expose them to the JIT as e.g. `aten::lstm`, and ignore the Python interpreter entirely. This needs some symbolic adjustments that will be part of a second PR.\r\n\r\nEven when we fix symbolics, there will still be a bit of a problem with statefulness of the cuDNN API (we need a mutable cache for the dropout state, but our IR has no way of representing that).\r\n\r\n@zdevito @ezyang "}