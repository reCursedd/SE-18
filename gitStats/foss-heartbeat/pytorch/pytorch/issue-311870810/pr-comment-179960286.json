{"url": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/179960286", "pull_request_review_id": 110299162, "id": 179960286, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE3OTk2MDI4Ng==", "diff_hunk": "@@ -23,6 +22,42 @@ def __init__(self, optimizer, last_epoch=-1):\n         self.step(last_epoch + 1)\n         self.last_epoch = last_epoch\n \n+        self.state = kwargs\n+\n+    def __getstate__(self):\n+        return {\n+            'state': self.state,\n+            'last_epoch': self.last_epoch,\n+        }\n+\n+    def __setstate__(self, state):\n+        self.__dict__.update(state)\n+\n+    def state_dict(self):\n+        \"\"\"Returns the state of the scheduler as a :class:`dict`.\n+\n+        It contains two entries. One representing all variables passed through\n+        kwargs and second representing the last_epoch:\n+\n+        * state - a dict holding current scheduler variables. Its content\n+            differs between LR Scheduler classes.\n+        * last_epoch - the last epoch of trying\n+        \"\"\"\n+        state = {key: self.__dict__[key] for key in self.state.keys()}\n+        return {'state': state, 'last_epoch': self.last_epoch}\n+\n+    def load_state_dict(self, state_dict):\n+        \"\"\"Loads the schedulers state.\n+\n+        Arguments:\n+            state_dict (dict): scheduler state. Should be an object returned\n+                from a call to :meth:`state_dict`.\n+        \"\"\"\n+        state = state_dict['state']\n+\n+        self.last_epoch = state_dict['last_epoch']\n+        self.__dict__.update(state)", "path": "torch/optim/lr_scheduler.py", "position": null, "original_position": 52, "commit_id": "a4158d715b462763ee248c64c3433f9cd3a27cbe", "original_commit_id": "240a05269ff2895c70c2d1cbfa2df685d0d2c5d5", "user": {"login": "apaszke", "id": 4583066, "node_id": "MDQ6VXNlcjQ1ODMwNjY=", "avatar_url": "https://avatars3.githubusercontent.com/u/4583066?v=4", "gravatar_id": "", "url": "https://api.github.com/users/apaszke", "html_url": "https://github.com/apaszke", "followers_url": "https://api.github.com/users/apaszke/followers", "following_url": "https://api.github.com/users/apaszke/following{/other_user}", "gists_url": "https://api.github.com/users/apaszke/gists{/gist_id}", "starred_url": "https://api.github.com/users/apaszke/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/apaszke/subscriptions", "organizations_url": "https://api.github.com/users/apaszke/orgs", "repos_url": "https://api.github.com/users/apaszke/repos", "events_url": "https://api.github.com/users/apaszke/events{/privacy}", "received_events_url": "https://api.github.com/users/apaszke/received_events", "type": "User", "site_admin": false}, "body": "I think those two are pretty much equivalent to `__getstate__` and `__setstate__` in this implementation", "created_at": "2018-04-08T20:28:56Z", "updated_at": "2018-11-23T15:42:00Z", "html_url": "https://github.com/pytorch/pytorch/pull/6342#discussion_r179960286", "pull_request_url": "https://api.github.com/repos/pytorch/pytorch/pulls/6342", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/179960286"}, "html": {"href": "https://github.com/pytorch/pytorch/pull/6342#discussion_r179960286"}, "pull_request": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/6342"}}, "body_html": "<p>I think those two are pretty much equivalent to <code>__getstate__</code> and <code>__setstate__</code> in this implementation</p>", "body_text": "I think those two are pretty much equivalent to __getstate__ and __setstate__ in this implementation"}