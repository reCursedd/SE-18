{"url": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/223158451", "pull_request_review_id": 162228866, "id": 223158451, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIyMzE1ODQ1MQ==", "diff_hunk": "@@ -452,6 +453,54 @@ struct TORCH_API ListType : public Type {\n   bool has_free_variables_;\n };\n \n+struct FutureType;\n+using FutureTypePtr = std::shared_ptr<FutureType>;\n+\n+struct TORCH_API FutureType : public Type {\n+  // It's not exactly a singleton, but there should be exactly once instance of\n+  // Future[T] for every T\n+  static constexpr bool is_singleton = true;\n+  friend struct Type;\n+  template<typename ... T>\n+  static FutureTypePtr create( T&& ... all) {\n+    return FutureTypePtr(new FutureType( std::forward<T>(all)... )); // NOLINT(modernize-make-shared)", "path": "torch/csrc/jit/type.h", "position": 22, "original_position": 22, "commit_id": "ae4a50ff51e5b10af7bd0befc52acc755bc80457", "original_commit_id": "ae4a50ff51e5b10af7bd0befc52acc755bc80457", "user": {"login": "zdevito", "id": 370202, "node_id": "MDQ6VXNlcjM3MDIwMg==", "avatar_url": "https://avatars0.githubusercontent.com/u/370202?v=4", "gravatar_id": "", "url": "https://api.github.com/users/zdevito", "html_url": "https://github.com/zdevito", "followers_url": "https://api.github.com/users/zdevito/followers", "following_url": "https://api.github.com/users/zdevito/following{/other_user}", "gists_url": "https://api.github.com/users/zdevito/gists{/gist_id}", "starred_url": "https://api.github.com/users/zdevito/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/zdevito/subscriptions", "organizations_url": "https://api.github.com/users/zdevito/orgs", "repos_url": "https://api.github.com/users/zdevito/repos", "events_url": "https://api.github.com/users/zdevito/events{/privacy}", "received_events_url": "https://api.github.com/users/zdevito/received_events", "type": "User", "site_admin": false}, "body": "nit: I know this what the other classes do, but I don't want to propagate it. It produces bad errors. Just write `create(TypePtr elem)`", "created_at": "2018-10-05T23:10:15Z", "updated_at": "2018-11-23T15:52:28Z", "html_url": "https://github.com/pytorch/pytorch/pull/12405#discussion_r223158451", "pull_request_url": "https://api.github.com/repos/pytorch/pytorch/pulls/12405", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/223158451"}, "html": {"href": "https://github.com/pytorch/pytorch/pull/12405#discussion_r223158451"}, "pull_request": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/12405"}}, "body_html": "<p>nit: I know this what the other classes do, but I don't want to propagate it. It produces bad errors. Just write <code>create(TypePtr elem)</code></p>", "body_text": "nit: I know this what the other classes do, but I don't want to propagate it. It produces bad errors. Just write create(TypePtr elem)"}