{"url": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/223858816", "pull_request_review_id": 163089773, "id": 223858816, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIyMzg1ODgxNg==", "diff_hunk": "@@ -126,6 +127,40 @@ void desugarTripCounts(Block * b) {\n   }\n }\n \n+// Currently inline the Fork node's block to evaluate it eagerly.\n+void desugarForkJoin(Block *b) {\n+  for (auto n : b->nodes()) {\n+    for (auto block : n->blocks()) {\n+      desugarForkJoin(block);\n+    }\n+    if (n->kind() == prim::Fork) {\n+      auto g = n->owningGraph();\n+      auto body_block = n->blocks()[0];\n+      auto input_tup = n->input(0);\n+      auto tup_unpack = g->createTupleUnpack(input_tup)->insertBefore(n);\n+      std::unordered_map<Value*, Value*> value_remap;\n+\n+      for (size_t i = 0; i < body_block->inputs().size(); ++i) {\n+        value_remap[body_block->inputs()[i]] = tup_unpack->outputs()[i];\n+      }\n+\n+      {\n+        WithInsertPoint guard(n);\n+        for (auto sub_node : body_block->nodes()) {\n+          auto inserted_node = g->insertNode(g->createClone(sub_node, [&value_remap](Value* v) { return value_remap[v];}));\n+          for (size_t i = 0; i < sub_node->outputs().size(); ++i) {\n+            value_remap[sub_node->outputs()[i]] = inserted_node->outputs()[i];\n+          }\n+        }\n+        JIT_ASSERT(body_block->outputs().size() == 1);\n+        n->output()->replaceAllUsesWith(value_remap[body_block->outputs()[0]]);", "path": "torch/csrc/jit/interpreter.cpp", "position": 38, "original_position": 38, "commit_id": "ae4a50ff51e5b10af7bd0befc52acc755bc80457", "original_commit_id": "ae4a50ff51e5b10af7bd0befc52acc755bc80457", "user": {"login": "apaszke", "id": 4583066, "node_id": "MDQ6VXNlcjQ1ODMwNjY=", "avatar_url": "https://avatars3.githubusercontent.com/u/4583066?v=4", "gravatar_id": "", "url": "https://api.github.com/users/apaszke", "html_url": "https://github.com/apaszke", "followers_url": "https://api.github.com/users/apaszke/followers", "following_url": "https://api.github.com/users/apaszke/following{/other_user}", "gists_url": "https://api.github.com/users/apaszke/gists{/gist_id}", "starred_url": "https://api.github.com/users/apaszke/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/apaszke/subscriptions", "organizations_url": "https://api.github.com/users/apaszke/orgs", "repos_url": "https://api.github.com/users/apaszke/repos", "events_url": "https://api.github.com/users/apaszke/events{/privacy}", "received_events_url": "https://api.github.com/users/apaszke/received_events", "type": "User", "site_admin": false}, "body": "Eh we really should have a single utility for inlining graphs/blocks because this code is repeated somewhere in the JIT probably around 10 times.", "created_at": "2018-10-09T20:50:35Z", "updated_at": "2018-11-23T15:52:45Z", "html_url": "https://github.com/pytorch/pytorch/pull/12405#discussion_r223858816", "pull_request_url": "https://api.github.com/repos/pytorch/pytorch/pulls/12405", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/223858816"}, "html": {"href": "https://github.com/pytorch/pytorch/pull/12405#discussion_r223858816"}, "pull_request": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/12405"}}, "body_html": "<p>Eh we really should have a single utility for inlining graphs/blocks because this code is repeated somewhere in the JIT probably around 10 times.</p>", "body_text": "Eh we really should have a single utility for inlining graphs/blocks because this code is repeated somewhere in the JIT probably around 10 times."}