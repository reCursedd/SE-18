{"url": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/223159420", "pull_request_review_id": 162228866, "id": 223159420, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIyMzE1OTQyMA==", "diff_hunk": "@@ -466,6 +466,18 @@ RegisterOperators reg({\n             };\n           }\n         }),\n+    // TODO schema\n+    Operator(prim::Fork, [](Node* stack) -> Operation {\n+      return [=](Stack& stack) -> int {\n+        throw detail::NewCoroutine();", "path": "torch/csrc/jit/register_prim_ops.cpp", "position": 7, "original_position": 7, "commit_id": "ae4a50ff51e5b10af7bd0befc52acc755bc80457", "original_commit_id": "ae4a50ff51e5b10af7bd0befc52acc755bc80457", "user": {"login": "zdevito", "id": 370202, "node_id": "MDQ6VXNlcjM3MDIwMg==", "avatar_url": "https://avatars0.githubusercontent.com/u/370202?v=4", "gravatar_id": "", "url": "https://api.github.com/users/zdevito", "html_url": "https://github.com/zdevito", "followers_url": "https://api.github.com/users/zdevito/followers", "following_url": "https://api.github.com/users/zdevito/following{/other_user}", "gists_url": "https://api.github.com/users/zdevito/gists{/gist_id}", "starred_url": "https://api.github.com/users/zdevito/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/zdevito/subscriptions", "organizations_url": "https://api.github.com/users/zdevito/orgs", "repos_url": "https://api.github.com/users/zdevito/repos", "events_url": "https://api.github.com/users/zdevito/events{/privacy}", "received_events_url": "https://api.github.com/users/zdevito/received_events", "type": "User", "site_admin": false}, "body": "This won't throw an exception in the real implementation (control in the caller always continues) normally after a fork. Here is where the task will be added to the scheduler, the task hooked up to a future, and the future returned.", "created_at": "2018-10-05T23:19:57Z", "updated_at": "2018-11-23T15:52:28Z", "html_url": "https://github.com/pytorch/pytorch/pull/12405#discussion_r223159420", "pull_request_url": "https://api.github.com/repos/pytorch/pytorch/pulls/12405", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/223159420"}, "html": {"href": "https://github.com/pytorch/pytorch/pull/12405#discussion_r223159420"}, "pull_request": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/12405"}}, "body_html": "<p>This won't throw an exception in the real implementation (control in the caller always continues) normally after a fork. Here is where the task will be added to the scheduler, the task hooked up to a future, and the future returned.</p>", "body_text": "This won't throw an exception in the real implementation (control in the caller always continues) normally after a fork. Here is where the task will be added to the scheduler, the task hooked up to a future, and the future returned."}