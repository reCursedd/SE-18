{"url": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/229823812", "pull_request_review_id": 170416119, "id": 229823812, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIyOTgyMzgxMg==", "diff_hunk": "@@ -9,51 +10,90 @@\n namespace at {\n namespace native {\n \n+template <typename scalar_t>\n+void inline flip_cpu_kernel(\n+  const int64_t numel,\n+  const int64_t total_dims,\n+  const int64_t flip_dims_size,\n+  const int64_t* stride_contiguous_d,\n+  const int64_t* flip_dims_d,\n+  const int64_t* strides_d,\n+  const int64_t* sizes_d,\n+  const scalar_t* in_tensor_d,\n+  scalar_t* out_tensor_d\n+){\n+  int64_t i;\n+\n+  #pragma omp parallel for private(i) if (numel > 1000)\n+  for (i = 0; i < numel; i++) {\n+    int64_t cur_indices = i;\n+    int64_t rem = 0;\n+    int64_t dst_offset = 0;\n+\n+    for (int64_t d = 0; d < total_dims; d++) {\n+      int64_t temp = cur_indices;\n+      cur_indices = cur_indices / stride_contiguous_d[d];\n+      rem = temp - cur_indices * stride_contiguous_d[d];\n+      for (int64_t j = 0; j < flip_dims_size; j++) {\n+        if (d == flip_dims_d[j]) cur_indices = sizes_d[d] - 1 - cur_indices;\n+      }\n+      dst_offset += cur_indices * strides_d[d];\n+      cur_indices = rem;\n+    }\n+    out_tensor_d[i] = in_tensor_d[dst_offset];\n+  }\n+}\n+\n Tensor flip_cpu(const Tensor& self, IntList dims) {\n-  const int64_t total_dims = self.dim(), flip_dims_size = dims.size();\n-  flip_check_errors(total_dims, flip_dims_size, dims);\n+  auto in_tensor = self;\n+  const int64_t total_dims = self.dim();\n \n+  dim_list_to_bitset(dims, total_dims);", "path": "aten/src/ATen/native/TensorTransformations.cpp", "position": null, "original_position": 50, "commit_id": "5cfe431761b6bdd471754e8b8952f2e3e6797802", "original_commit_id": "131624af06c64ad6a44dee22a4c48a24c75b63d9", "user": {"login": "weiyangfb", "id": 38509346, "node_id": "MDQ6VXNlcjM4NTA5MzQ2", "avatar_url": "https://avatars1.githubusercontent.com/u/38509346?v=4", "gravatar_id": "", "url": "https://api.github.com/users/weiyangfb", "html_url": "https://github.com/weiyangfb", "followers_url": "https://api.github.com/users/weiyangfb/followers", "following_url": "https://api.github.com/users/weiyangfb/following{/other_user}", "gists_url": "https://api.github.com/users/weiyangfb/gists{/gist_id}", "starred_url": "https://api.github.com/users/weiyangfb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/weiyangfb/subscriptions", "organizations_url": "https://api.github.com/users/weiyangfb/orgs", "repos_url": "https://api.github.com/users/weiyangfb/repos", "events_url": "https://api.github.com/users/weiyangfb/events{/privacy}", "received_events_url": "https://api.github.com/users/weiyangfb/received_events", "type": "User", "site_admin": false}, "body": "still not using bitset in the changes, the thing is I will need to get `flip_dims` at the kernel, although I can still get the same thing from a bitset by going through the entire set, but it will be a longer loop, and thus the hesitation to use it here", "created_at": "2018-10-31T18:47:02Z", "updated_at": "2018-11-23T15:53:55Z", "html_url": "https://github.com/pytorch/pytorch/pull/13344#discussion_r229823812", "pull_request_url": "https://api.github.com/repos/pytorch/pytorch/pulls/13344", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/229823812"}, "html": {"href": "https://github.com/pytorch/pytorch/pull/13344#discussion_r229823812"}, "pull_request": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/13344"}}, "body_html": "<p>still not using bitset in the changes, the thing is I will need to get <code>flip_dims</code> at the kernel, although I can still get the same thing from a bitset by going through the entire set, but it will be a longer loop, and thus the hesitation to use it here</p>", "body_text": "still not using bitset in the changes, the thing is I will need to get flip_dims at the kernel, although I can still get the same thing from a bitset by going through the entire set, but it will be a longer loop, and thus the hesitation to use it here", "in_reply_to_id": 229789941}