{"url": "https://api.github.com/repos/pytorch/pytorch/issues/2395", "repository_url": "https://api.github.com/repos/pytorch/pytorch", "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/2395/labels{/name}", "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/2395/comments", "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/2395/events", "html_url": "https://github.com/pytorch/pytorch/pull/2395", "id": 249815149, "node_id": "MDExOlB1bGxSZXF1ZXN0MTM1NDYxNjc1", "number": 2395, "title": "Add CUDA version of eye", "user": {"login": "fmassa", "id": 9110200, "node_id": "MDQ6VXNlcjkxMTAyMDA=", "avatar_url": "https://avatars2.githubusercontent.com/u/9110200?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fmassa", "html_url": "https://github.com/fmassa", "followers_url": "https://api.github.com/users/fmassa/followers", "following_url": "https://api.github.com/users/fmassa/following{/other_user}", "gists_url": "https://api.github.com/users/fmassa/gists{/gist_id}", "starred_url": "https://api.github.com/users/fmassa/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fmassa/subscriptions", "organizations_url": "https://api.github.com/users/fmassa/orgs", "repos_url": "https://api.github.com/users/fmassa/repos", "events_url": "https://api.github.com/users/fmassa/events{/privacy}", "received_events_url": "https://api.github.com/users/fmassa/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-08-12T14:26:47Z", "updated_at": "2018-11-23T15:34:22Z", "closed_at": "2017-08-16T21:38:01Z", "author_association": "MEMBER", "pull_request": {"url": "https://api.github.com/repos/pytorch/pytorch/pulls/2395", "html_url": "https://github.com/pytorch/pytorch/pull/2395", "diff_url": "https://github.com/pytorch/pytorch/pull/2395.diff", "patch_url": "https://github.com/pytorch/pytorch/pull/2395.patch"}, "body_html": "<p>Instead of writing a dedicated kernel, just selects the diagonal elements of the tensor using stride tricks, and fill them with ones.</p>", "body_text": "Instead of writing a dedicated kernel, just selects the diagonal elements of the tensor using stride tricks, and fill them with ones.", "body": "Instead of writing a dedicated kernel, just selects the diagonal elements of the tensor using stride tricks, and fill them with ones."}