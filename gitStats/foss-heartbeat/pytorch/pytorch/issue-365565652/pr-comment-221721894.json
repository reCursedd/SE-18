{"url": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/221721894", "pull_request_review_id": 160439179, "id": 221721894, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIyMTcyMTg5NA==", "diff_hunk": "@@ -0,0 +1,53 @@\n+#include \"torch/csrc/jit/ir.h\"\n+#include <unordered_set>\n+#include \"torch/csrc/jit/interned_strings.h\"\n+#include \"torch/csrc/jit/passes/constant_pooling.h\"\n+#include \"torch/csrc/jit/node_hashing.h\"\n+\n+namespace torch { namespace jit {\n+\n+namespace {\n+\n+//Very similar to the common subexpression elimination pass\n+//Move all constants to the beginning of the graph, and deduplicate\n+void ConstantPooling(Block * block, std::unordered_set<Node*, HashNodeCSE, EqualNodeCSE>& constants) {\n+  for (auto it = block->nodes().begin(); it != block->nodes().end();) {\n+    auto node = *it;\n+    // node may be moved to a different block so advance iterator now\n+    ++it;\n+    if (!node->blocks().empty()) {\n+      // Traverse sub-blocks.\n+      for (auto block : node->blocks()) {\n+        ConstantPooling(block, constants);\n+      }\n+      continue;\n+    }\n+\n+    if (node->kind() != prim::Constant) {\n+      continue;\n+    }\n+\n+    auto first_node = node->owningGraph()->block()->nodes().front();", "path": "torch/csrc/jit/passes/constant_pooling.cpp", "position": 30, "original_position": 30, "commit_id": "ecfc98c3885e1582bfebd2c67cb9b420126f9701", "original_commit_id": "c797197be9f36f0b0bcd2e8e28bbcf3eef5d1a13", "user": {"login": "zdevito", "id": 370202, "node_id": "MDQ6VXNlcjM3MDIwMg==", "avatar_url": "https://avatars0.githubusercontent.com/u/370202?v=4", "gravatar_id": "", "url": "https://api.github.com/users/zdevito", "html_url": "https://github.com/zdevito", "followers_url": "https://api.github.com/users/zdevito/followers", "following_url": "https://api.github.com/users/zdevito/following{/other_user}", "gists_url": "https://api.github.com/users/zdevito/gists{/gist_id}", "starred_url": "https://api.github.com/users/zdevito/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/zdevito/subscriptions", "organizations_url": "https://api.github.com/users/zdevito/orgs", "repos_url": "https://api.github.com/users/zdevito/repos", "events_url": "https://api.github.com/users/zdevito/events{/privacy}", "received_events_url": "https://api.github.com/users/zdevito/received_events", "type": "User", "site_admin": false}, "body": "Shouldn't this move the constant to the first node? Not after the first node?\r\n```\r\nnode->moveBefore(node->owningGraph()->nodes().front());\r\n```", "created_at": "2018-10-01T19:06:14Z", "updated_at": "2018-11-23T15:52:14Z", "html_url": "https://github.com/pytorch/pytorch/pull/12222#discussion_r221721894", "pull_request_url": "https://api.github.com/repos/pytorch/pytorch/pulls/12222", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/221721894"}, "html": {"href": "https://github.com/pytorch/pytorch/pull/12222#discussion_r221721894"}, "pull_request": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/12222"}}, "body_html": "<p>Shouldn't this move the constant to the first node? Not after the first node?</p>\n<pre><code>node-&gt;moveBefore(node-&gt;owningGraph()-&gt;nodes().front());\n</code></pre>", "body_text": "Shouldn't this move the constant to the first node? Not after the first node?\nnode->moveBefore(node->owningGraph()->nodes().front());"}