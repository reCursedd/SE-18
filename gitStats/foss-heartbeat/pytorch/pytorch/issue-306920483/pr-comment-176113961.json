{"url": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/176113961", "pull_request_review_id": 105759769, "id": 176113961, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE3NjExMzk2MQ==", "diff_hunk": "@@ -43,27 +30,38 @@ actually lower memory usage by any significant amount. Unless you're operating\n under heavy memory pressure, you might never need to use them.\n \n In-place correctness checks\n-^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+---------------------------\n \n-All :class:`Variable` s keep track of in-place operations applied to them, and\n-if the implementation detects that a variable was saved for backward in one of\n+All :class:`Tensor` s keep track of in-place operations applied to them, and\n+if the implementation detects that a tensor was saved for backward in one of\n the functions, but it was modified in-place afterwards, an error will be raised\n once backward pass is started. This ensures that if you're using in-place\n functions and not seeing any errors, you can be sure that the computed\n gradients are correct.\n \n+Variable (deprecated)\n+^^^^^^^^^^^^^^^^^^^^^\n \n+.. warning::\n+    The Variable API has been deprecated: Variables are no longer necessary to\n+    use autograd with tensors. Autograd automatically supports Tensors with\n+    ``requires_grad`` set to ``True``. In addition, ``Variable(tensor)`` now returns\n+    a :class:`torch.Tensor`.", "path": "docs/source/autograd.rst", "position": null, "original_position": 47, "commit_id": "79ce483a3f633cbdcb88167d640b9539c9878dd6", "original_commit_id": "6967fac5488ffe795d2c2869e268d3a469fd3bf0", "user": {"login": "ezyang", "id": 13564, "node_id": "MDQ6VXNlcjEzNTY0", "avatar_url": "https://avatars0.githubusercontent.com/u/13564?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ezyang", "html_url": "https://github.com/ezyang", "followers_url": "https://api.github.com/users/ezyang/followers", "following_url": "https://api.github.com/users/ezyang/following{/other_user}", "gists_url": "https://api.github.com/users/ezyang/gists{/gist_id}", "starred_url": "https://api.github.com/users/ezyang/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ezyang/subscriptions", "organizations_url": "https://api.github.com/users/ezyang/orgs", "repos_url": "https://api.github.com/users/ezyang/repos", "events_url": "https://api.github.com/users/ezyang/events{/privacy}", "received_events_url": "https://api.github.com/users/ezyang/received_events", "type": "User", "site_admin": false}, "body": "A decoder ring would be helpful here. Something like:\r\n\r\n```\r\nVariable(tensor, requires_grad=True) ===> ???\r\nvar.data ===> ???\r\n```\r\n\r\netc", "created_at": "2018-03-21T15:00:22Z", "updated_at": "2018-11-23T15:41:00Z", "html_url": "https://github.com/pytorch/pytorch/pull/5907#discussion_r176113961", "pull_request_url": "https://api.github.com/repos/pytorch/pytorch/pulls/5907", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/176113961"}, "html": {"href": "https://github.com/pytorch/pytorch/pull/5907#discussion_r176113961"}, "pull_request": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/5907"}}, "body_html": "<p>A decoder ring would be helpful here. Something like:</p>\n<pre><code>Variable(tensor, requires_grad=True) ===&gt; ???\nvar.data ===&gt; ???\n</code></pre>\n<p>etc</p>", "body_text": "A decoder ring would be helpful here. Something like:\nVariable(tensor, requires_grad=True) ===> ???\nvar.data ===> ???\n\netc"}