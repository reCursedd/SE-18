{"url": "https://api.github.com/repos/pytorch/pytorch/issues/8611", "repository_url": "https://api.github.com/repos/pytorch/pytorch", "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/8611/labels{/name}", "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/8611/comments", "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/8611/events", "html_url": "https://github.com/pytorch/pytorch/issues/8611", "id": 333390611, "node_id": "MDU6SXNzdWUzMzMzOTA2MTE=", "number": 8611, "title": "[feature request] Make from_numpy method externally visible", "user": {"login": "varunagrawal", "id": 975964, "node_id": "MDQ6VXNlcjk3NTk2NA==", "avatar_url": "https://avatars2.githubusercontent.com/u/975964?v=4", "gravatar_id": "", "url": "https://api.github.com/users/varunagrawal", "html_url": "https://github.com/varunagrawal", "followers_url": "https://api.github.com/users/varunagrawal/followers", "following_url": "https://api.github.com/users/varunagrawal/following{/other_user}", "gists_url": "https://api.github.com/users/varunagrawal/gists{/gist_id}", "starred_url": "https://api.github.com/users/varunagrawal/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/varunagrawal/subscriptions", "organizations_url": "https://api.github.com/users/varunagrawal/orgs", "repos_url": "https://api.github.com/users/varunagrawal/repos", "events_url": "https://api.github.com/users/varunagrawal/events{/privacy}", "received_events_url": "https://api.github.com/users/varunagrawal/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 7, "created_at": "2018-06-18T18:47:25Z", "updated_at": "2018-06-18T19:58:50Z", "closed_at": "2018-06-18T19:58:50Z", "author_association": "CONTRIBUTOR", "body_html": "<h2>Issue description</h2>\n<p>Currently, most Python linters complain that <code>torch</code> has no method <code>from_numpy</code>. Since converting from a numpy array to a Pytorch tensor is pretty common, it would be nice to add <code>from_numpy</code> to the <code>__all__</code> list in the <code>torch</code> module to remedy this.</p>\n<p>I believe this to be an easy fix and not break anything, but rather make production code linters work better with Pytorch.</p>\n<h2>Code example</h2>\n<div class=\"highlight highlight-source-python\"><pre>x <span class=\"pl-k\">=</span> numpy.rand(<span class=\"pl-c1\">3</span>, <span class=\"pl-c1\">3</span>)\nt <span class=\"pl-k\">=</span> torch.from_numpy(x)  <span class=\"pl-c\"><span class=\"pl-c\">#</span> pylint complains that torch has no method from_numpy</span></pre></div>\n<h2>System Info</h2>\n<p>PyTorch version: 0.4.0<br>\nIs debug build: No<br>\nCUDA used to build PyTorch: 8.0.61</p>\n<p>OS: Ubuntu 16.04.4 LTS<br>\nGCC version: (Ubuntu 5.4.0-6ubuntu1~16.04.9) 5.4.0 20160609<br>\nCMake version: version 3.5.1</p>\n<p>Python version: 3.6<br>\nIs CUDA available: Yes<br>\nCUDA runtime version: 8.0.61<br>\nGPU models and configuration: GPU 0: Quadro P5000<br>\nNvidia driver version: 384.111<br>\ncuDNN version: Probably one of the following:<br>\n/usr/lib/x86_64-linux-gnu/libcudnn.so.5.1.10<br>\n/usr/lib/x86_64-linux-gnu/libcudnn.so.6.0.21<br>\n/usr/lib/x86_64-linux-gnu/libcudnn_static.a</p>\n<p>Versions of relevant libraries:<br>\n[pip3] msgpack-numpy (0.4.1)<br>\n[pip3] numpy (1.14.2)<br>\n[pip3] tensorboard-pytorch (0.7.1)<br>\n[pip3] torch (0.4.0)<br>\n[pip3] torchfile (0.1.0)<br>\n[pip3] torchvision (0.2.1)<br>\n[conda] tensorboard-pytorch       0.7.1                     <br>\n[conda] torch                     0.4.0                     <br>\n[conda] torchfile                 0.1.0                     <br>\n[conda] torchvision               0.2.1                     </p>", "body_text": "Issue description\nCurrently, most Python linters complain that torch has no method from_numpy. Since converting from a numpy array to a Pytorch tensor is pretty common, it would be nice to add from_numpy to the __all__ list in the torch module to remedy this.\nI believe this to be an easy fix and not break anything, but rather make production code linters work better with Pytorch.\nCode example\nx = numpy.rand(3, 3)\nt = torch.from_numpy(x)  # pylint complains that torch has no method from_numpy\nSystem Info\nPyTorch version: 0.4.0\nIs debug build: No\nCUDA used to build PyTorch: 8.0.61\nOS: Ubuntu 16.04.4 LTS\nGCC version: (Ubuntu 5.4.0-6ubuntu1~16.04.9) 5.4.0 20160609\nCMake version: version 3.5.1\nPython version: 3.6\nIs CUDA available: Yes\nCUDA runtime version: 8.0.61\nGPU models and configuration: GPU 0: Quadro P5000\nNvidia driver version: 384.111\ncuDNN version: Probably one of the following:\n/usr/lib/x86_64-linux-gnu/libcudnn.so.5.1.10\n/usr/lib/x86_64-linux-gnu/libcudnn.so.6.0.21\n/usr/lib/x86_64-linux-gnu/libcudnn_static.a\nVersions of relevant libraries:\n[pip3] msgpack-numpy (0.4.1)\n[pip3] numpy (1.14.2)\n[pip3] tensorboard-pytorch (0.7.1)\n[pip3] torch (0.4.0)\n[pip3] torchfile (0.1.0)\n[pip3] torchvision (0.2.1)\n[conda] tensorboard-pytorch       0.7.1                     \n[conda] torch                     0.4.0                     \n[conda] torchfile                 0.1.0                     \n[conda] torchvision               0.2.1", "body": "## Issue description\r\n\r\nCurrently, most Python linters complain that `torch` has no method `from_numpy`. Since converting from a numpy array to a Pytorch tensor is pretty common, it would be nice to add `from_numpy` to the `__all__` list in the `torch` module to remedy this.\r\n\r\nI believe this to be an easy fix and not break anything, but rather make production code linters work better with Pytorch.\r\n\r\n## Code example\r\n\r\n```python\r\nx = numpy.rand(3, 3)\r\nt = torch.from_numpy(x)  # pylint complains that torch has no method from_numpy\r\n```\r\n\r\n## System Info\r\n\r\nPyTorch version: 0.4.0\r\nIs debug build: No\r\nCUDA used to build PyTorch: 8.0.61\r\n\r\nOS: Ubuntu 16.04.4 LTS\r\nGCC version: (Ubuntu 5.4.0-6ubuntu1~16.04.9) 5.4.0 20160609\r\nCMake version: version 3.5.1\r\n\r\nPython version: 3.6\r\nIs CUDA available: Yes\r\nCUDA runtime version: 8.0.61\r\nGPU models and configuration: GPU 0: Quadro P5000\r\nNvidia driver version: 384.111\r\ncuDNN version: Probably one of the following:\r\n/usr/lib/x86_64-linux-gnu/libcudnn.so.5.1.10\r\n/usr/lib/x86_64-linux-gnu/libcudnn.so.6.0.21\r\n/usr/lib/x86_64-linux-gnu/libcudnn_static.a\r\n\r\nVersions of relevant libraries:\r\n[pip3] msgpack-numpy (0.4.1)\r\n[pip3] numpy (1.14.2)\r\n[pip3] tensorboard-pytorch (0.7.1)\r\n[pip3] torch (0.4.0)\r\n[pip3] torchfile (0.1.0)\r\n[pip3] torchvision (0.2.1)\r\n[conda] tensorboard-pytorch       0.7.1                     <pip>\r\n[conda] torch                     0.4.0                     <pip>\r\n[conda] torchfile                 0.1.0                     <pip>\r\n[conda] torchvision               0.2.1                     <pip>\r\n"}