{"url": "https://api.github.com/repos/pytorch/pytorch/issues/comments/398167436", "html_url": "https://github.com/pytorch/pytorch/issues/8611#issuecomment-398167436", "issue_url": "https://api.github.com/repos/pytorch/pytorch/issues/8611", "id": 398167436, "node_id": "MDEyOklzc3VlQ29tbWVudDM5ODE2NzQzNg==", "user": {"login": "fmassa", "id": 9110200, "node_id": "MDQ6VXNlcjkxMTAyMDA=", "avatar_url": "https://avatars2.githubusercontent.com/u/9110200?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fmassa", "html_url": "https://github.com/fmassa", "followers_url": "https://api.github.com/users/fmassa/followers", "following_url": "https://api.github.com/users/fmassa/following{/other_user}", "gists_url": "https://api.github.com/users/fmassa/gists{/gist_id}", "starred_url": "https://api.github.com/users/fmassa/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fmassa/subscriptions", "organizations_url": "https://api.github.com/users/fmassa/orgs", "repos_url": "https://api.github.com/users/fmassa/repos", "events_url": "https://api.github.com/users/fmassa/events{/privacy}", "received_events_url": "https://api.github.com/users/fmassa/received_events", "type": "User", "site_admin": false}, "created_at": "2018-06-18T19:25:58Z", "updated_at": "2018-06-18T19:25:58Z", "author_association": "MEMBER", "body_html": "<p>All the functionality of <code>from_numpy</code> is present in <code>as_tensor</code>, but <code>as_tensor</code> also supports other data types and thus is more generic. I'm ok if we don't deprecate it, but for new users it might just be simpler for them to learn one API</p>", "body_text": "All the functionality of from_numpy is present in as_tensor, but as_tensor also supports other data types and thus is more generic. I'm ok if we don't deprecate it, but for new users it might just be simpler for them to learn one API", "body": "All the functionality of `from_numpy` is present in `as_tensor`, but `as_tensor` also supports other data types and thus is more generic. I'm ok if we don't deprecate it, but for new users it might just be simpler for them to learn one API"}