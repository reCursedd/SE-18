{"url": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/109080889", "pull_request_review_id": 30159316, "id": 109080889, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEwOTA4MDg4OQ==", "diff_hunk": "@@ -0,0 +1,40 @@\n+import math\n+\n+import torch\n+from torch.nn.parameter import Parameter\n+\n+from .module import Module\n+\n+\n+class Bilinear(Module):\n+\n+    def __init__(self, in_features1, in_features2, out_features, bias=True):\n+        super(Bilinear, self).__init__()\n+        self.in_features1 = in_features1\n+        self.in_features2 = in_features2\n+        self.out_features = out_features\n+        self.weight = Parameter(torch.Tensor(out_features, in_features1, in_features2))\n+\n+        if bias:\n+            self.bias = Parameter(torch.Tensor(out_features))\n+        else:\n+            self.register_parameter('bias', None)\n+        self.reset_parameters()\n+\n+    def reset_parameters(self):\n+        stdv = 1. / math.sqrt(self.weight.size(1))\n+        self.weight.data.uniform_(-stdv, stdv)\n+        if self.bias is not None:\n+            self.bias.data.uniform_(-stdv, stdv)\n+\n+    def forward(self, input1, input2):\n+        if self.bias is None:", "path": "torch/nn/modules/bilinear.py", "position": null, "original_position": 31, "commit_id": "736a4dd03f271dda9929b38228b51789e29e75e2", "original_commit_id": "2f40dec201019b0ae3651e609b91232225bc065e", "user": {"login": "fmassa", "id": 9110200, "node_id": "MDQ6VXNlcjkxMTAyMDA=", "avatar_url": "https://avatars2.githubusercontent.com/u/9110200?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fmassa", "html_url": "https://github.com/fmassa", "followers_url": "https://api.github.com/users/fmassa/followers", "following_url": "https://api.github.com/users/fmassa/following{/other_user}", "gists_url": "https://api.github.com/users/fmassa/gists{/gist_id}", "starred_url": "https://api.github.com/users/fmassa/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fmassa/subscriptions", "organizations_url": "https://api.github.com/users/fmassa/orgs", "repos_url": "https://api.github.com/users/fmassa/repos", "events_url": "https://api.github.com/users/fmassa/events{/privacy}", "received_events_url": "https://api.github.com/users/fmassa/received_events", "type": "User", "site_admin": false}, "body": "I believe latest version of PyTorch accepts `None` as argument, so you can remove the `if`... and only have\r\n```python\r\nreturn self._backend.Bilinear()(input1, input2, self.weight, self.bias)\r\n```", "created_at": "2017-03-31T03:14:58Z", "updated_at": "2018-11-23T15:32:55Z", "html_url": "https://github.com/pytorch/pytorch/pull/1146#discussion_r109080889", "pull_request_url": "https://api.github.com/repos/pytorch/pytorch/pulls/1146", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/109080889"}, "html": {"href": "https://github.com/pytorch/pytorch/pull/1146#discussion_r109080889"}, "pull_request": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/1146"}}, "body_html": "<p>I believe latest version of PyTorch accepts <code>None</code> as argument, so you can remove the <code>if</code>... and only have</p>\n<div class=\"highlight highlight-source-python\"><pre><span class=\"pl-k\">return</span> <span class=\"pl-c1\">self</span>._backend.Bilinear()(input1, input2, <span class=\"pl-c1\">self</span>.weight, <span class=\"pl-c1\">self</span>.bias)</pre></div>", "body_text": "I believe latest version of PyTorch accepts None as argument, so you can remove the if... and only have\nreturn self._backend.Bilinear()(input1, input2, self.weight, self.bias)"}