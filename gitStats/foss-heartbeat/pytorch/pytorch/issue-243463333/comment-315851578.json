{"url": "https://api.github.com/repos/pytorch/pytorch/issues/comments/315851578", "html_url": "https://github.com/pytorch/pytorch/issues/2134#issuecomment-315851578", "issue_url": "https://api.github.com/repos/pytorch/pytorch/issues/2134", "id": 315851578, "node_id": "MDEyOklzc3VlQ29tbWVudDMxNTg1MTU3OA==", "user": {"login": "apaszke", "id": 4583066, "node_id": "MDQ6VXNlcjQ1ODMwNjY=", "avatar_url": "https://avatars3.githubusercontent.com/u/4583066?v=4", "gravatar_id": "", "url": "https://api.github.com/users/apaszke", "html_url": "https://github.com/apaszke", "followers_url": "https://api.github.com/users/apaszke/followers", "following_url": "https://api.github.com/users/apaszke/following{/other_user}", "gists_url": "https://api.github.com/users/apaszke/gists{/gist_id}", "starred_url": "https://api.github.com/users/apaszke/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/apaszke/subscriptions", "organizations_url": "https://api.github.com/users/apaszke/orgs", "repos_url": "https://api.github.com/users/apaszke/repos", "events_url": "https://api.github.com/users/apaszke/events{/privacy}", "received_events_url": "https://api.github.com/users/apaszke/received_events", "type": "User", "site_admin": false}, "created_at": "2017-07-17T19:07:40Z", "updated_at": "2017-07-17T19:07:40Z", "author_association": "MEMBER", "body_html": "<p>A workaround for now would be to use <code>topk</code>. It should be very fast.</p>\n<div class=\"highlight highlight-source-python\"><pre><span class=\"pl-k\">def</span> <span class=\"pl-en\">kthvalue</span>(<span class=\"pl-smi\">tensor</span>, <span class=\"pl-smi\">k</span>, <span class=\"pl-smi\">dim</span><span class=\"pl-k\">=</span><span class=\"pl-c1\">None</span>):\n    val, idx <span class=\"pl-k\">=</span> tensor.topk(k, dim)\n    <span class=\"pl-k\">return</span> val[:<span class=\"pl-c1\">1</span>], idx[:<span class=\"pl-c1\">1</span>]</pre></div>", "body_text": "A workaround for now would be to use topk. It should be very fast.\ndef kthvalue(tensor, k, dim=None):\n    val, idx = tensor.topk(k, dim)\n    return val[:1], idx[:1]", "body": "A workaround for now would be to use `topk`. It should be very fast.\r\n```python\r\ndef kthvalue(tensor, k, dim=None):\r\n    val, idx = tensor.topk(k, dim)\r\n    return val[:1], idx[:1]\r\n```"}