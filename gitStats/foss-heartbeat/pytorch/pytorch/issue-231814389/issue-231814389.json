{"url": "https://api.github.com/repos/pytorch/pytorch/issues/1666", "repository_url": "https://api.github.com/repos/pytorch/pytorch", "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/1666/labels{/name}", "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/1666/comments", "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/1666/events", "html_url": "https://github.com/pytorch/pytorch/issues/1666", "id": 231814389, "node_id": "MDU6SXNzdWUyMzE4MTQzODk=", "number": 1666, "title": "RuntimeError: cuda runtime error (3)", "user": {"login": "littleredxh", "id": 22952455, "node_id": "MDQ6VXNlcjIyOTUyNDU1", "avatar_url": "https://avatars2.githubusercontent.com/u/22952455?v=4", "gravatar_id": "", "url": "https://api.github.com/users/littleredxh", "html_url": "https://github.com/littleredxh", "followers_url": "https://api.github.com/users/littleredxh/followers", "following_url": "https://api.github.com/users/littleredxh/following{/other_user}", "gists_url": "https://api.github.com/users/littleredxh/gists{/gist_id}", "starred_url": "https://api.github.com/users/littleredxh/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/littleredxh/subscriptions", "organizations_url": "https://api.github.com/users/littleredxh/orgs", "repos_url": "https://api.github.com/users/littleredxh/repos", "events_url": "https://api.github.com/users/littleredxh/events{/privacy}", "received_events_url": "https://api.github.com/users/littleredxh/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-05-27T16:59:43Z", "updated_at": "2017-06-03T11:47:35Z", "closed_at": "2017-06-03T11:47:35Z", "author_association": "NONE", "body_html": "<p>I hope to add a ResNet in the transform.compose utility. And then apply the dataLoader to create batches for training. When the ResNet and images are both on CPU, it works. But when the ResNet and images are both on GPU, there is a cuda problem:</p>\n<p>File \"\", line 4, in <br>\ntransforms.Lambda(lambda x: FM(resnet, x))])<br>\nFile \"\", line 23, in FM<br>\ninput_imgs = Variable(imgs.cuda(),volatile=True)<br>\nFile \"/project/focus/hong/anaconda3/lib/python3.5/site-packages/torch/_utils.py\", line 65, in <em>cuda<br>\nreturn new_type(self.size()).copy</em>(self, async)<br>\nRuntimeError: cuda runtime error (3) initialization error at /py/conda-bld/pytorch_1490983232023/work/torch/lib/THC/generic/THCStorage.c:55</p>\n<pre><code>data_transforms = transforms.Compose([transforms.ToTensor(),\n                                      transforms.Normalize([0.485, 0.456, 0.406], [0.229, 0.224, 0.225]),\n                                      transforms.Lambda(lambda x: FM(resnet, x))])\n</code></pre>\n<pre><code>def FM(model, img):\n    [d,h,w] = img.size()\n        \n    if w &gt; h:\n        w_new, h_new, s_new = int((w - h)/2), 0, h // NGSIZE\n    else:\n        w_new, h_new, s_new = 0, int((h - w)/2), w // NGSIZE\n\n    imgs = torch.Tensor(NGSIZE**2,d,s_new,s_new)\n\n    # crop the center part of the image\n    i = 0\n    for nh in range(NGSIZE):\n        for nw in range(NGSIZE):\n            Hsta = h_new + nh * s_new\n            Wsta = w_new + nw * s_new\n            Hend = h_new + nh * s_new + s_new\n            Wend = w_new + nw * s_new + s_new\n            imgs[i,:,:,:] = img[:,Hsta:Hend,Wsta:Wend]\n            i += 1\n            \n    if use_gpu:\n        input_imgs = Variable(imgs.cuda())\n    else:\n        input_imgs = Variable(imgs)\n\n    # forward\n    outputs = model.forward(input_imgs).squeeze()\n    \n    return outputs.cpu().data.view(3,3,512)\n</code></pre>\n<pre><code>%% data loader\ndsets = {x: datasets.ImageFolder(os.path.join(data_dir, x), data_transforms) for x in ['train', 'val']}\ndset_loaders = {x: torch.utils.data.DataLoader(dsets[x], batch_size=1,\n                                               shuffle=False, num_workers=16)\n                for x in ['train', 'val']}\n</code></pre>", "body_text": "I hope to add a ResNet in the transform.compose utility. And then apply the dataLoader to create batches for training. When the ResNet and images are both on CPU, it works. But when the ResNet and images are both on GPU, there is a cuda problem:\nFile \"\", line 4, in \ntransforms.Lambda(lambda x: FM(resnet, x))])\nFile \"\", line 23, in FM\ninput_imgs = Variable(imgs.cuda(),volatile=True)\nFile \"/project/focus/hong/anaconda3/lib/python3.5/site-packages/torch/_utils.py\", line 65, in cuda\nreturn new_type(self.size()).copy(self, async)\nRuntimeError: cuda runtime error (3) initialization error at /py/conda-bld/pytorch_1490983232023/work/torch/lib/THC/generic/THCStorage.c:55\ndata_transforms = transforms.Compose([transforms.ToTensor(),\n                                      transforms.Normalize([0.485, 0.456, 0.406], [0.229, 0.224, 0.225]),\n                                      transforms.Lambda(lambda x: FM(resnet, x))])\n\ndef FM(model, img):\n    [d,h,w] = img.size()\n        \n    if w > h:\n        w_new, h_new, s_new = int((w - h)/2), 0, h // NGSIZE\n    else:\n        w_new, h_new, s_new = 0, int((h - w)/2), w // NGSIZE\n\n    imgs = torch.Tensor(NGSIZE**2,d,s_new,s_new)\n\n    # crop the center part of the image\n    i = 0\n    for nh in range(NGSIZE):\n        for nw in range(NGSIZE):\n            Hsta = h_new + nh * s_new\n            Wsta = w_new + nw * s_new\n            Hend = h_new + nh * s_new + s_new\n            Wend = w_new + nw * s_new + s_new\n            imgs[i,:,:,:] = img[:,Hsta:Hend,Wsta:Wend]\n            i += 1\n            \n    if use_gpu:\n        input_imgs = Variable(imgs.cuda())\n    else:\n        input_imgs = Variable(imgs)\n\n    # forward\n    outputs = model.forward(input_imgs).squeeze()\n    \n    return outputs.cpu().data.view(3,3,512)\n\n%% data loader\ndsets = {x: datasets.ImageFolder(os.path.join(data_dir, x), data_transforms) for x in ['train', 'val']}\ndset_loaders = {x: torch.utils.data.DataLoader(dsets[x], batch_size=1,\n                                               shuffle=False, num_workers=16)\n                for x in ['train', 'val']}", "body": "I hope to add a ResNet in the transform.compose utility. And then apply the dataLoader to create batches for training. When the ResNet and images are both on CPU, it works. But when the ResNet and images are both on GPU, there is a cuda problem:\r\n\r\nFile \"<ipython-input-15-04e2cfe6b0fc>\", line 4, in <lambda>\r\n    transforms.Lambda(lambda x: FM(resnet, x))])\r\n  File \"<ipython-input-17-4d2737ddf71a>\", line 23, in FM\r\n    input_imgs = Variable(imgs.cuda(),volatile=True)\r\n  File \"/project/focus/hong/anaconda3/lib/python3.5/site-packages/torch/_utils.py\", line 65, in _cuda\r\n    return new_type(self.size()).copy_(self, async)\r\nRuntimeError: cuda runtime error (3) initialization error at /py/conda-bld/pytorch_1490983232023/work/torch/lib/THC/generic/THCStorage.c:55\r\n\r\n```\r\ndata_transforms = transforms.Compose([transforms.ToTensor(),\r\n                                      transforms.Normalize([0.485, 0.456, 0.406], [0.229, 0.224, 0.225]),\r\n                                      transforms.Lambda(lambda x: FM(resnet, x))])\r\n```\r\n```\r\ndef FM(model, img):\r\n    [d,h,w] = img.size()\r\n        \r\n    if w > h:\r\n        w_new, h_new, s_new = int((w - h)/2), 0, h // NGSIZE\r\n    else:\r\n        w_new, h_new, s_new = 0, int((h - w)/2), w // NGSIZE\r\n\r\n    imgs = torch.Tensor(NGSIZE**2,d,s_new,s_new)\r\n\r\n    # crop the center part of the image\r\n    i = 0\r\n    for nh in range(NGSIZE):\r\n        for nw in range(NGSIZE):\r\n            Hsta = h_new + nh * s_new\r\n            Wsta = w_new + nw * s_new\r\n            Hend = h_new + nh * s_new + s_new\r\n            Wend = w_new + nw * s_new + s_new\r\n            imgs[i,:,:,:] = img[:,Hsta:Hend,Wsta:Wend]\r\n            i += 1\r\n            \r\n    if use_gpu:\r\n        input_imgs = Variable(imgs.cuda())\r\n    else:\r\n        input_imgs = Variable(imgs)\r\n\r\n    # forward\r\n    outputs = model.forward(input_imgs).squeeze()\r\n    \r\n    return outputs.cpu().data.view(3,3,512)\r\n```\r\n```\r\n%% data loader\r\ndsets = {x: datasets.ImageFolder(os.path.join(data_dir, x), data_transforms) for x in ['train', 'val']}\r\ndset_loaders = {x: torch.utils.data.DataLoader(dsets[x], batch_size=1,\r\n                                               shuffle=False, num_workers=16)\r\n                for x in ['train', 'val']}\r\n```\r\n\r\n"}