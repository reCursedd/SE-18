{"url": "https://api.github.com/repos/pytorch/pytorch/issues/5287", "repository_url": "https://api.github.com/repos/pytorch/pytorch", "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/5287/labels{/name}", "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/5287/comments", "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/5287/events", "html_url": "https://github.com/pytorch/pytorch/pull/5287", "id": 298040386, "node_id": "MDExOlB1bGxSZXF1ZXN0MTY5ODAzODI5", "number": 5287, "title": "Implement adaptive softmax", "user": {"login": "elanmart", "id": 10772830, "node_id": "MDQ6VXNlcjEwNzcyODMw", "avatar_url": "https://avatars3.githubusercontent.com/u/10772830?v=4", "gravatar_id": "", "url": "https://api.github.com/users/elanmart", "html_url": "https://github.com/elanmart", "followers_url": "https://api.github.com/users/elanmart/followers", "following_url": "https://api.github.com/users/elanmart/following{/other_user}", "gists_url": "https://api.github.com/users/elanmart/gists{/gist_id}", "starred_url": "https://api.github.com/users/elanmart/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/elanmart/subscriptions", "organizations_url": "https://api.github.com/users/elanmart/orgs", "repos_url": "https://api.github.com/users/elanmart/repos", "events_url": "https://api.github.com/users/elanmart/events{/privacy}", "received_events_url": "https://api.github.com/users/elanmart/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 545367190, "node_id": "MDU6TGFiZWw1NDUzNjcxOTA=", "url": "https://api.github.com/repos/pytorch/pytorch/labels/awaiting%20response", "name": "awaiting response", "color": "5319e7", "default": false}], "state": "closed", "locked": false, "assignee": {"login": "SsnL", "id": 5674597, "node_id": "MDQ6VXNlcjU2NzQ1OTc=", "avatar_url": "https://avatars2.githubusercontent.com/u/5674597?v=4", "gravatar_id": "", "url": "https://api.github.com/users/SsnL", "html_url": "https://github.com/SsnL", "followers_url": "https://api.github.com/users/SsnL/followers", "following_url": "https://api.github.com/users/SsnL/following{/other_user}", "gists_url": "https://api.github.com/users/SsnL/gists{/gist_id}", "starred_url": "https://api.github.com/users/SsnL/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/SsnL/subscriptions", "organizations_url": "https://api.github.com/users/SsnL/orgs", "repos_url": "https://api.github.com/users/SsnL/repos", "events_url": "https://api.github.com/users/SsnL/events{/privacy}", "received_events_url": "https://api.github.com/users/SsnL/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "SsnL", "id": 5674597, "node_id": "MDQ6VXNlcjU2NzQ1OTc=", "avatar_url": "https://avatars2.githubusercontent.com/u/5674597?v=4", "gravatar_id": "", "url": "https://api.github.com/users/SsnL", "html_url": "https://github.com/SsnL", "followers_url": "https://api.github.com/users/SsnL/followers", "following_url": "https://api.github.com/users/SsnL/following{/other_user}", "gists_url": "https://api.github.com/users/SsnL/gists{/gist_id}", "starred_url": "https://api.github.com/users/SsnL/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/SsnL/subscriptions", "organizations_url": "https://api.github.com/users/SsnL/orgs", "repos_url": "https://api.github.com/users/SsnL/repos", "events_url": "https://api.github.com/users/SsnL/events{/privacy}", "received_events_url": "https://api.github.com/users/SsnL/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 39, "created_at": "2018-02-17T22:05:20Z", "updated_at": "2018-11-23T15:44:42Z", "closed_at": "2018-06-04T16:12:04Z", "author_association": "CONTRIBUTOR", "pull_request": {"url": "https://api.github.com/repos/pytorch/pytorch/pulls/5287", "html_url": "https://github.com/pytorch/pytorch/pull/5287", "diff_url": "https://github.com/pytorch/pytorch/pull/5287.diff", "patch_url": "https://github.com/pytorch/pytorch/pull/5287.patch"}, "body_html": "<p>This PR implements <a href=\"https://arxiv.org/abs/1609.04309\" rel=\"nofollow\">Efficient softmax approximation for GPUs<br>\n</a></p>\n<p>Briefly discussed in <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load issue title\" data-id=\"288371538\" data-permission-text=\"Issue title is private\" data-url=\"https://github.com/pytorch/pytorch/issues/4659\" data-hovercard-type=\"issue\" data-hovercard-url=\"/pytorch/pytorch/issues/4659/hovercard\" href=\"https://github.com/pytorch/pytorch/issues/4659\">#4659</a></p>\n<p>It is kind currently takes <code>input</code> and <code>targets</code> in <code>forward</code> pass, and returns the <code>log probabilities</code> of these targets.</p>\n<p>I think the class description could be improved.</p>\n<p>I also didn't know how to add a test for a module that eats two inputs, instead of a single one, hence the hack with a dummy class in <code>test_nn</code>.</p>\n<p>Let me know what you think.</p>", "body_text": "This PR implements Efficient softmax approximation for GPUs\n\nBriefly discussed in #4659\nIt is kind currently takes input and targets in forward pass, and returns the log probabilities of these targets.\nI think the class description could be improved.\nI also didn't know how to add a test for a module that eats two inputs, instead of a single one, hence the hack with a dummy class in test_nn.\nLet me know what you think.", "body": "This PR implements [Efficient softmax approximation for GPUs\r\n](https://arxiv.org/abs/1609.04309)\r\n\r\nBriefly discussed in https://github.com/pytorch/pytorch/issues/4659\r\n\r\nIt is kind currently takes `input` and `targets` in `forward` pass, and returns the `log probabilities` of these targets.\r\n\r\nI think the class description could be improved. \r\n\r\nI also didn't know how to add a test for a module that eats two inputs, instead of a single one, hence the hack with a dummy class in `test_nn`.\r\n\r\nLet me know what you think."}