{"url": "https://api.github.com/repos/pytorch/pytorch/issues/comments/377406779", "html_url": "https://github.com/pytorch/pytorch/pull/5287#issuecomment-377406779", "issue_url": "https://api.github.com/repos/pytorch/pytorch/issues/5287", "id": 377406779, "node_id": "MDEyOklzc3VlQ29tbWVudDM3NzQwNjc3OQ==", "user": {"login": "elanmart", "id": 10772830, "node_id": "MDQ6VXNlcjEwNzcyODMw", "avatar_url": "https://avatars3.githubusercontent.com/u/10772830?v=4", "gravatar_id": "", "url": "https://api.github.com/users/elanmart", "html_url": "https://github.com/elanmart", "followers_url": "https://api.github.com/users/elanmart/followers", "following_url": "https://api.github.com/users/elanmart/following{/other_user}", "gists_url": "https://api.github.com/users/elanmart/gists{/gist_id}", "starred_url": "https://api.github.com/users/elanmart/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/elanmart/subscriptions", "organizations_url": "https://api.github.com/users/elanmart/orgs", "repos_url": "https://api.github.com/users/elanmart/repos", "events_url": "https://api.github.com/users/elanmart/events{/privacy}", "received_events_url": "https://api.github.com/users/elanmart/received_events", "type": "User", "site_admin": false}, "created_at": "2018-03-29T23:53:57Z", "updated_at": "2018-03-29T23:53:57Z", "author_association": "CONTRIBUTOR", "body_html": "<p><a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=5674597\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/SsnL\">@SsnL</a> I'm sorry, I've been away myself for some time.</p>\n<p>I definitely see your point about splitting the code into separate \"<code>decoder</code>\" and <code>loss</code>.</p>\n<p>I personally consider it more convenient to have those things merged, because if there is only one <code>loss</code> that works with your <code>decoder</code>, what's the point of having it separate?</p>\n<p>On the other hand having it separate is more consistent with the rest of the codebase, and it also can make things nicer -- <code>nn.Linear</code> followed by <code>nn.CrossEntropy</code> transforms into <code>nn.AdaptiveSoftmax</code> and <code>nn.AdaptiveLoss</code>.</p>\n<p>So, to close this PR in next few days:</p>\n<ul>\n<li>Should I make the change to split the current implementation</li>\n<li>Should I address Your comments, or rather try to move the whole thing into <code>ATen</code>?</li>\n</ul>", "body_text": "@SsnL I'm sorry, I've been away myself for some time.\nI definitely see your point about splitting the code into separate \"decoder\" and loss.\nI personally consider it more convenient to have those things merged, because if there is only one loss that works with your decoder, what's the point of having it separate?\nOn the other hand having it separate is more consistent with the rest of the codebase, and it also can make things nicer -- nn.Linear followed by nn.CrossEntropy transforms into nn.AdaptiveSoftmax and nn.AdaptiveLoss.\nSo, to close this PR in next few days:\n\nShould I make the change to split the current implementation\nShould I address Your comments, or rather try to move the whole thing into ATen?", "body": "@SsnL I'm sorry, I've been away myself for some time. \r\n\r\nI definitely see your point about splitting the code into separate \"`decoder`\" and `loss`. \r\n\r\nI personally consider it more convenient to have those things merged, because if there is only one `loss` that works with your `decoder`, what's the point of having it separate?\r\n\r\nOn the other hand having it separate is more consistent with the rest of the codebase, and it also can make things nicer -- `nn.Linear` followed by `nn.CrossEntropy` transforms into `nn.AdaptiveSoftmax` and `nn.AdaptiveLoss`.\r\n\r\nSo, to close this PR in next few days:\r\n* Should I make the change to split the current implementation\r\n* Should I address Your comments, or rather try to move the whole thing into `ATen`?"}