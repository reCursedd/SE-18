{"url": "https://api.github.com/repos/pytorch/pytorch/issues/comments/407259856", "html_url": "https://github.com/pytorch/pytorch/issues/9687#issuecomment-407259856", "issue_url": "https://api.github.com/repos/pytorch/pytorch/issues/9687", "id": 407259856, "node_id": "MDEyOklzc3VlQ29tbWVudDQwNzI1OTg1Ng==", "user": {"login": "bhushan23", "id": 1794273, "node_id": "MDQ6VXNlcjE3OTQyNzM=", "avatar_url": "https://avatars2.githubusercontent.com/u/1794273?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bhushan23", "html_url": "https://github.com/bhushan23", "followers_url": "https://api.github.com/users/bhushan23/followers", "following_url": "https://api.github.com/users/bhushan23/following{/other_user}", "gists_url": "https://api.github.com/users/bhushan23/gists{/gist_id}", "starred_url": "https://api.github.com/users/bhushan23/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bhushan23/subscriptions", "organizations_url": "https://api.github.com/users/bhushan23/orgs", "repos_url": "https://api.github.com/users/bhushan23/repos", "events_url": "https://api.github.com/users/bhushan23/events{/privacy}", "received_events_url": "https://api.github.com/users/bhushan23/received_events", "type": "User", "site_admin": false}, "created_at": "2018-07-24T02:27:09Z", "updated_at": "2018-07-24T02:27:09Z", "author_association": "CONTRIBUTOR", "body_html": "<p>I think behavior should match to numpy's .T behavior. It will be very easy to port existing code to and from PyTorch,<br>\nRegarding introducing T attribute. I am okay with both introducing and not introducing.<br>\nAs long as we make .t() behavior similar to numpy, it is okay even if we don't introduce T attribute as user needs uniform behavior and not uniform convention (Framework to framework convention change is acceptable)</p>", "body_text": "I think behavior should match to numpy's .T behavior. It will be very easy to port existing code to and from PyTorch,\nRegarding introducing T attribute. I am okay with both introducing and not introducing.\nAs long as we make .t() behavior similar to numpy, it is okay even if we don't introduce T attribute as user needs uniform behavior and not uniform convention (Framework to framework convention change is acceptable)", "body": "I think behavior should match to numpy's .T behavior. It will be very easy to port existing code to and from PyTorch, \r\nRegarding introducing T attribute. I am okay with both introducing and not introducing.\r\nAs long as we make .t() behavior similar to numpy, it is okay even if we don't introduce T attribute as user needs uniform behavior and not uniform convention (Framework to framework convention change is acceptable)\r\n"}