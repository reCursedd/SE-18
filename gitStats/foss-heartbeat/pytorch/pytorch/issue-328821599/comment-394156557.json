{"url": "https://api.github.com/repos/pytorch/pytorch/issues/comments/394156557", "html_url": "https://github.com/pytorch/pytorch/issues/8083#issuecomment-394156557", "issue_url": "https://api.github.com/repos/pytorch/pytorch/issues/8083", "id": 394156557, "node_id": "MDEyOklzc3VlQ29tbWVudDM5NDE1NjU1Nw==", "user": {"login": "apaszke", "id": 4583066, "node_id": "MDQ6VXNlcjQ1ODMwNjY=", "avatar_url": "https://avatars3.githubusercontent.com/u/4583066?v=4", "gravatar_id": "", "url": "https://api.github.com/users/apaszke", "html_url": "https://github.com/apaszke", "followers_url": "https://api.github.com/users/apaszke/followers", "following_url": "https://api.github.com/users/apaszke/following{/other_user}", "gists_url": "https://api.github.com/users/apaszke/gists{/gist_id}", "starred_url": "https://api.github.com/users/apaszke/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/apaszke/subscriptions", "organizations_url": "https://api.github.com/users/apaszke/orgs", "repos_url": "https://api.github.com/users/apaszke/repos", "events_url": "https://api.github.com/users/apaszke/events{/privacy}", "received_events_url": "https://api.github.com/users/apaszke/received_events", "type": "User", "site_admin": false}, "created_at": "2018-06-03T11:46:22Z", "updated_at": "2018-06-03T11:46:22Z", "author_association": "MEMBER", "body_html": "<p>I don't think we should do this, because sets don't have any ordering guarantees, and as such the result you'd get from an expression like this would differ all the time (or at least between Python processes). If you really don't care about the ordering, just do <code>list(s)</code> before you index the tensor.</p>", "body_text": "I don't think we should do this, because sets don't have any ordering guarantees, and as such the result you'd get from an expression like this would differ all the time (or at least between Python processes). If you really don't care about the ordering, just do list(s) before you index the tensor.", "body": "I don't think we should do this, because sets don't have any ordering guarantees, and as such the result you'd get from an expression like this would differ all the time (or at least between Python processes). If you really don't care about the ordering, just do `list(s)` before you index the tensor."}