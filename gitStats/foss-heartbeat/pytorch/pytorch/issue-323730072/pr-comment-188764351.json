{"url": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/188764351", "pull_request_review_id": 120809910, "id": 188764351, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4ODc2NDM1MQ==", "diff_hunk": "@@ -0,0 +1,38 @@\n+#include \"torch/csrc/autograd/engine_without_python.h\"\n+\n+#include \"torch/csrc/autograd/engine.h\"\n+#include \"torch/csrc/autograd/function.h\"\n+#include \"torch/csrc/autograd/functions/basic_ops.h\"\n+#include \"torch/csrc/autograd/grad_mode.h\"\n+#include \"torch/csrc/autograd/variable.h\"\n+#include \"torch/csrc/utils/auto_gpu.h\"\n+\n+#include <atomic>\n+#include <condition_variable>\n+#include <cstdint>\n+#include <functional>\n+#include <iostream>\n+#include <memory>\n+#include <mutex>\n+#include <set>\n+#include <string>\n+#include <thread>\n+#include <unordered_set>\n+#include <typeinfo>\n+#include <sstream>\n+#include <queue>\n+#include <TH/TH.h>\n+\n+#ifdef WITH_CUDA\n+#include <cuda.h>\n+#include <THC/THC.h>\n+#endif\n+namespace torch{ namespace autograd{\n+    \n+Engine& Engine::getDefaultEngine(){", "path": "torch/csrc/autograd/engine_without_python.cpp", "position": null, "original_position": 32, "commit_id": "6e020b05ecd82b564ce6182861abbf180efdce55", "original_commit_id": "b82ebc603d18fe242d41b66083ea681d4a207ac7", "user": {"login": "zrphercule", "id": 22670479, "node_id": "MDQ6VXNlcjIyNjcwNDc5", "avatar_url": "https://avatars2.githubusercontent.com/u/22670479?v=4", "gravatar_id": "", "url": "https://api.github.com/users/zrphercule", "html_url": "https://github.com/zrphercule", "followers_url": "https://api.github.com/users/zrphercule/followers", "following_url": "https://api.github.com/users/zrphercule/following{/other_user}", "gists_url": "https://api.github.com/users/zrphercule/gists{/gist_id}", "starred_url": "https://api.github.com/users/zrphercule/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/zrphercule/subscriptions", "organizations_url": "https://api.github.com/users/zrphercule/orgs", "repos_url": "https://api.github.com/users/zrphercule/repos", "events_url": "https://api.github.com/users/zrphercule/events{/privacy}", "received_events_url": "https://api.github.com/users/zrphercule/received_events", "type": "User", "site_admin": false}, "body": "Yes, and that is why I deleted the definition of getDefaultEngine in python_engine.cpp. The originally logic is like this: if there is no-python, then define getDefaultEngine in engine.cpp; else do nothing, and use the (same) definition of getDefaultEngine in python_engine.cpp. Since these two definitions are same, I think @apaszke is right that we can simply move this piece of code into engine.cpp.", "created_at": "2018-05-16T20:37:22Z", "updated_at": "2018-11-23T15:44:11Z", "html_url": "https://github.com/pytorch/pytorch/pull/7619#discussion_r188764351", "pull_request_url": "https://api.github.com/repos/pytorch/pytorch/pulls/7619", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/188764351"}, "html": {"href": "https://github.com/pytorch/pytorch/pull/7619#discussion_r188764351"}, "pull_request": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/7619"}}, "body_html": "<p>Yes, and that is why I deleted the definition of getDefaultEngine in python_engine.cpp. The originally logic is like this: if there is no-python, then define getDefaultEngine in engine.cpp; else do nothing, and use the (same) definition of getDefaultEngine in python_engine.cpp. Since these two definitions are same, I think <a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=4583066\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/apaszke\">@apaszke</a> is right that we can simply move this piece of code into engine.cpp.</p>", "body_text": "Yes, and that is why I deleted the definition of getDefaultEngine in python_engine.cpp. The originally logic is like this: if there is no-python, then define getDefaultEngine in engine.cpp; else do nothing, and use the (same) definition of getDefaultEngine in python_engine.cpp. Since these two definitions are same, I think @apaszke is right that we can simply move this piece of code into engine.cpp.", "in_reply_to_id": 188758616}