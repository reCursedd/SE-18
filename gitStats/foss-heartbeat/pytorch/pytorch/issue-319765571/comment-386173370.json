{"url": "https://api.github.com/repos/pytorch/pytorch/issues/comments/386173370", "html_url": "https://github.com/pytorch/pytorch/issues/7214#issuecomment-386173370", "issue_url": "https://api.github.com/repos/pytorch/pytorch/issues/7214", "id": 386173370, "node_id": "MDEyOklzc3VlQ29tbWVudDM4NjE3MzM3MA==", "user": {"login": "ezyang", "id": 13564, "node_id": "MDQ6VXNlcjEzNTY0", "avatar_url": "https://avatars0.githubusercontent.com/u/13564?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ezyang", "html_url": "https://github.com/ezyang", "followers_url": "https://api.github.com/users/ezyang/followers", "following_url": "https://api.github.com/users/ezyang/following{/other_user}", "gists_url": "https://api.github.com/users/ezyang/gists{/gist_id}", "starred_url": "https://api.github.com/users/ezyang/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ezyang/subscriptions", "organizations_url": "https://api.github.com/users/ezyang/orgs", "repos_url": "https://api.github.com/users/ezyang/repos", "events_url": "https://api.github.com/users/ezyang/events{/privacy}", "received_events_url": "https://api.github.com/users/ezyang/received_events", "type": "User", "site_admin": false}, "created_at": "2018-05-03T02:01:52Z", "updated_at": "2018-05-03T02:01:52Z", "author_association": "CONTRIBUTOR", "body_html": "<p>So, if I understand correctly, the tension is:</p>\n<ol>\n<li>Having the PyTorch dynlib work out of the box on the build machine when cuDNN is installed in a non-standard path without having to add <code>LD_LIBRARY_PATH</code>, vs.</li>\n<li>Having the PyTorch dynlib respect default search order when it is built as a distributable and shipped somewhere else</li>\n</ol>\n<p>So it seems, at least, there should be a way to prevent the RPATH from being set. But maybe, due to (1), we should still put in the RPATH by default.</p>", "body_text": "So, if I understand correctly, the tension is:\n\nHaving the PyTorch dynlib work out of the box on the build machine when cuDNN is installed in a non-standard path without having to add LD_LIBRARY_PATH, vs.\nHaving the PyTorch dynlib respect default search order when it is built as a distributable and shipped somewhere else\n\nSo it seems, at least, there should be a way to prevent the RPATH from being set. But maybe, due to (1), we should still put in the RPATH by default.", "body": "So, if I understand correctly, the tension is:\r\n\r\n1. Having the PyTorch dynlib work out of the box on the build machine when cuDNN is installed in a non-standard path without having to add `LD_LIBRARY_PATH`, vs.\r\n2. Having the PyTorch dynlib respect default search order when it is built as a distributable and shipped somewhere else\r\n\r\nSo it seems, at least, there should be a way to prevent the RPATH from being set. But maybe, due to (1), we should still put in the RPATH by default."}