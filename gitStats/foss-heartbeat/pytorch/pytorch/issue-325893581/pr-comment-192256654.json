{"url": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/192256654", "pull_request_review_id": 124999351, "id": 192256654, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5MjI1NjY1NA==", "diff_hunk": "@@ -229,8 +253,26 @@ def emit_decl(decl):\n         'returns': [{'name': 'result', 'type': 'int64_t', 'dynamic_type': 'int64_t'}],\n     } for name in ['sizes', 'strides', 'dim']]\n     aten_decls = load_aten_declarations(declarations) + tensor_impl_methods\n+\n     jit_decls = [d for d in aten_decls if is_jit_op(d)]\n \n+    # add arguments dtype and device for functions like zeros\n+    for decl in jit_decls:\n+        arguments = decl['arguments']\n+        if len(arguments) == 0 or arguments[0]['simple_type'] != 'Type':\n+            continue\n+        del arguments[0]\n+        arguments.extend([\n+            # dtype is specified as an int64_t of at::ScalarType", "path": "tools/jit/gen_jit_dispatch.py", "position": 158, "original_position": 158, "commit_id": "a5e95066d924d3b97ac342eed273dc2a970a70c4", "original_commit_id": "a5e95066d924d3b97ac342eed273dc2a970a70c4", "user": {"login": "zdevito", "id": 370202, "node_id": "MDQ6VXNlcjM3MDIwMg==", "avatar_url": "https://avatars0.githubusercontent.com/u/370202?v=4", "gravatar_id": "", "url": "https://api.github.com/users/zdevito", "html_url": "https://github.com/zdevito", "followers_url": "https://api.github.com/users/zdevito/followers", "following_url": "https://api.github.com/users/zdevito/following{/other_user}", "gists_url": "https://api.github.com/users/zdevito/gists{/gist_id}", "starred_url": "https://api.github.com/users/zdevito/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/zdevito/subscriptions", "organizations_url": "https://api.github.com/users/zdevito/orgs", "repos_url": "https://api.github.com/users/zdevito/repos", "events_url": "https://api.github.com/users/zdevito/events{/privacy}", "received_events_url": "https://api.github.com/users/zdevito/received_events", "type": "User", "site_admin": false}, "body": "Correct `ones` does not set the device. Instead the `CALL_DTYPE` template has an  `AutoGPU` guard that uses the device setting, effectively setting the device before the call to ones occurs. We do want to put this info into the `ones` op eventually though.", "created_at": "2018-05-31T22:34:44Z", "updated_at": "2018-11-23T15:44:48Z", "html_url": "https://github.com/pytorch/pytorch/pull/7799#discussion_r192256654", "pull_request_url": "https://api.github.com/repos/pytorch/pytorch/pulls/7799", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/192256654"}, "html": {"href": "https://github.com/pytorch/pytorch/pull/7799#discussion_r192256654"}, "pull_request": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/7799"}}, "body_html": "<p>Correct <code>ones</code> does not set the device. Instead the <code>CALL_DTYPE</code> template has an  <code>AutoGPU</code> guard that uses the device setting, effectively setting the device before the call to ones occurs. We do want to put this info into the <code>ones</code> op eventually though.</p>", "body_text": "Correct ones does not set the device. Instead the CALL_DTYPE template has an  AutoGPU guard that uses the device setting, effectively setting the device before the call to ones occurs. We do want to put this info into the ones op eventually though.", "in_reply_to_id": 192189774}