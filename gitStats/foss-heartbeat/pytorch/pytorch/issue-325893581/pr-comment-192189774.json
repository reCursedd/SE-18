{"url": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/192189774", "pull_request_review_id": 124917704, "id": 192189774, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5MjE4OTc3NA==", "diff_hunk": "@@ -229,8 +253,26 @@ def emit_decl(decl):\n         'returns': [{'name': 'result', 'type': 'int64_t', 'dynamic_type': 'int64_t'}],\n     } for name in ['sizes', 'strides', 'dim']]\n     aten_decls = load_aten_declarations(declarations) + tensor_impl_methods\n+\n     jit_decls = [d for d in aten_decls if is_jit_op(d)]\n \n+    # add arguments dtype and device for functions like zeros\n+    for decl in jit_decls:\n+        arguments = decl['arguments']\n+        if len(arguments) == 0 or arguments[0]['simple_type'] != 'Type':\n+            continue\n+        del arguments[0]\n+        arguments.extend([\n+            # dtype is specified as an int64_t of at::ScalarType", "path": "tools/jit/gen_jit_dispatch.py", "position": 158, "original_position": 158, "commit_id": "a5e95066d924d3b97ac342eed273dc2a970a70c4", "original_commit_id": "a5e95066d924d3b97ac342eed273dc2a970a70c4", "user": {"login": "ezyang", "id": 13564, "node_id": "MDQ6VXNlcjEzNTY0", "avatar_url": "https://avatars0.githubusercontent.com/u/13564?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ezyang", "html_url": "https://github.com/ezyang", "followers_url": "https://api.github.com/users/ezyang/followers", "following_url": "https://api.github.com/users/ezyang/following{/other_user}", "gists_url": "https://api.github.com/users/ezyang/gists{/gist_id}", "starred_url": "https://api.github.com/users/ezyang/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ezyang/subscriptions", "organizations_url": "https://api.github.com/users/ezyang/orgs", "repos_url": "https://api.github.com/users/ezyang/repos", "events_url": "https://api.github.com/users/ezyang/events{/privacy}", "received_events_url": "https://api.github.com/users/ezyang/received_events", "type": "User", "site_admin": false}, "body": "I think I don't understand well enough how `torch::ones()` handles devices input. According to native_functions.yaml it has the following signature:\r\n\r\n```\r\n- func: ones(Type dtype, IntList size) -> Tensor\r\n  variants: function\r\n```\r\n\r\nI don't see how the Type can contain the device information that you're substituting here. According to 5edf6b203749f3088569ccb5a83fbbe3ece97871 this is not actually supported yet. @gchanan  @goldsborough do the ATen factories support being passed devices? Not yet, IIRC?\r\n\r\nMaybe this is all fine because we *eventually* want to do this, but it's something that anyone who actually adds this to ATen later will have to be aware of when working with the codegen.", "created_at": "2018-05-31T18:13:06Z", "updated_at": "2018-11-23T15:44:47Z", "html_url": "https://github.com/pytorch/pytorch/pull/7799#discussion_r192189774", "pull_request_url": "https://api.github.com/repos/pytorch/pytorch/pulls/7799", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/192189774"}, "html": {"href": "https://github.com/pytorch/pytorch/pull/7799#discussion_r192189774"}, "pull_request": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/7799"}}, "body_html": "<p>I think I don't understand well enough how <code>torch::ones()</code> handles devices input. According to native_functions.yaml it has the following signature:</p>\n<pre><code>- func: ones(Type dtype, IntList size) -&gt; Tensor\n  variants: function\n</code></pre>\n<p>I don't see how the Type can contain the device information that you're substituting here. According to <a class=\"commit-link\" data-hovercard-type=\"commit\" data-hovercard-url=\"https://github.com/pytorch/pytorch/commit/5edf6b203749f3088569ccb5a83fbbe3ece97871/hovercard\" href=\"https://github.com/pytorch/pytorch/commit/5edf6b203749f3088569ccb5a83fbbe3ece97871\"><tt>5edf6b2</tt></a> this is not actually supported yet. <a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=3768583\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/gchanan\">@gchanan</a>  <a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=6429851\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/goldsborough\">@goldsborough</a> do the ATen factories support being passed devices? Not yet, IIRC?</p>\n<p>Maybe this is all fine because we <em>eventually</em> want to do this, but it's something that anyone who actually adds this to ATen later will have to be aware of when working with the codegen.</p>", "body_text": "I think I don't understand well enough how torch::ones() handles devices input. According to native_functions.yaml it has the following signature:\n- func: ones(Type dtype, IntList size) -> Tensor\n  variants: function\n\nI don't see how the Type can contain the device information that you're substituting here. According to 5edf6b2 this is not actually supported yet. @gchanan  @goldsborough do the ATen factories support being passed devices? Not yet, IIRC?\nMaybe this is all fine because we eventually want to do this, but it's something that anyone who actually adds this to ATen later will have to be aware of when working with the codegen."}