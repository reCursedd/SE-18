{"url": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/121223101", "pull_request_review_id": 43262291, "id": 121223101, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEyMTIyMzEwMQ==", "diff_hunk": "@@ -217,21 +217,25 @@ void THCSTensor_(hspmm)(THCState *state, THCSTensor *r_, real alpha, THCSTensor\n void THCSTensor_(spcadd)(THCState *state, THCTensor *r_, THCTensor *dense, real value, THCSTensor *sparse) {\n   THCAssertSameGPU(THCSTensor_(checkGPU)(state, 1, 3, sparse, r_, dense));\n \n+  const ptrdiff_t nnz = THCSTensor_(nnz)(state, sparse);\n+  if (nnz == 0) {\n+    THCTensor_(resizeAs)(state, r_, dense);\n+    THCTensor_(copy)(state, r_, dense);", "path": "torch/lib/THCS/generic/THCSTensorMath.cu", "position": 7, "original_position": 7, "commit_id": "3b3f7f34ae7d04cd40dc67740e7a09b9294e724a", "original_commit_id": "278c621a4ec3138a24dd0bded62e2adb5f2177a5", "user": {"login": "ezyang", "id": 13564, "node_id": "MDQ6VXNlcjEzNTY0", "avatar_url": "https://avatars0.githubusercontent.com/u/13564?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ezyang", "html_url": "https://github.com/ezyang", "followers_url": "https://api.github.com/users/ezyang/followers", "following_url": "https://api.github.com/users/ezyang/following{/other_user}", "gists_url": "https://api.github.com/users/ezyang/gists{/gist_id}", "starred_url": "https://api.github.com/users/ezyang/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ezyang/subscriptions", "organizations_url": "https://api.github.com/users/ezyang/orgs", "repos_url": "https://api.github.com/users/ezyang/repos", "events_url": "https://api.github.com/users/ezyang/events{/privacy}", "received_events_url": "https://api.github.com/users/ezyang/received_events", "type": "User", "site_admin": false}, "body": "I suggest:\r\n\r\n```patch\r\ndiff --git a/torch/lib/TH/generic/THTensorCopy.c b/torch/lib/TH/generic/THTensorCopy.c\r\nindex 71ccfdd..6e08ba6 100644\r\n--- a/torch/lib/TH/generic/THTensorCopy.c\r\n+++ b/torch/lib/TH/generic/THTensorCopy.c\r\n@@ -68,7 +68,9 @@ void THTensor_(copyTranspose)(THTensor *tensor, THTensor *src) {\r\n \r\n void THTensor_(copy)(THTensor *tensor, THTensor *src)\r\n {\r\n-  if (THTensor_(isContiguous)(tensor) && THTensor_(isContiguous)(src) && THTensor_(nElement)(tensor) == THTensor_(nElement)(src)) {\r\n+  if (tensor == src) {\r\n+    // Nothing to do\r\n+  } else if (THTensor_(isContiguous)(tensor) && THTensor_(isContiguous)(src) && THTensor_(nElement)(tensor) == THTensor_(nElement)(src)) {\r\n     real *sp = THTensor_(data)(src);\r\n     real *rp = THTensor_(data)(tensor);\r\n     ptrdiff_t sz = THTensor_(nElement)(tensor);\r\ndiff --git a/torch/lib/THC/generic/THCTensorCopy.cu b/torch/lib/THC/generic/THCTensorCopy.cu\r\nindex 4198025..f99ea44 100644\r\n--- a/torch/lib/THC/generic/THCTensorCopy.cu\r\n+++ b/torch/lib/THC/generic/THCTensorCopy.cu\r\n@@ -4,7 +4,9 @@\r\n \r\n THC_API void\r\n THCTensor_(copy)(THCState* state, THCTensor* dst, THCTensor* src) {\r\n-  THC_copyTensor<THCTensor, THCTensor>(state, dst, src);\r\n+  if (dst != src) {\r\n+    THC_copyTensor<THCTensor, THCTensor>(state, dst, src);\r\n+  }\r\n }\r\n \r\n THC_API void\r\n```", "created_at": "2017-06-09T21:08:08Z", "updated_at": "2018-11-23T15:33:43Z", "html_url": "https://github.com/pytorch/pytorch/pull/1761#discussion_r121223101", "pull_request_url": "https://api.github.com/repos/pytorch/pytorch/pulls/1761", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/121223101"}, "html": {"href": "https://github.com/pytorch/pytorch/pull/1761#discussion_r121223101"}, "pull_request": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/1761"}}, "body_html": "<p>I suggest:</p>\n<div class=\"highlight highlight-source-diff\"><pre><span class=\"pl-c1\">diff --git a/torch/lib/TH/generic/THTensorCopy.c b/torch/lib/TH/generic/THTensorCopy.c</span>\nindex 71ccfdd..6e08ba6 100644\n<span class=\"pl-md\">--- a/torch/lib/TH/generic/THTensorCopy.c</span>\n<span class=\"pl-mi1\">+++ b/torch/lib/TH/generic/THTensorCopy.c</span>\n<span class=\"pl-mdr\">@@ -68,7 +68,9 @@</span> void THTensor_(copyTranspose)(THTensor *tensor, THTensor *src) {\n \n void THTensor_(copy)(THTensor *tensor, THTensor *src)\n {\n<span class=\"pl-md\"><span class=\"pl-md\">-</span>  if (THTensor_(isContiguous)(tensor) &amp;&amp; THTensor_(isContiguous)(src) &amp;&amp; THTensor_(nElement)(tensor) == THTensor_(nElement)(src)) {</span>\n<span class=\"pl-mi1\"><span class=\"pl-mi1\">+</span>  if (tensor == src) {</span>\n<span class=\"pl-mi1\"><span class=\"pl-mi1\">+</span>    // Nothing to do</span>\n<span class=\"pl-mi1\"><span class=\"pl-mi1\">+</span>  } else if (THTensor_(isContiguous)(tensor) &amp;&amp; THTensor_(isContiguous)(src) &amp;&amp; THTensor_(nElement)(tensor) == THTensor_(nElement)(src)) {</span>\n     real *sp = THTensor_(data)(src);\n     real *rp = THTensor_(data)(tensor);\n     ptrdiff_t sz = THTensor_(nElement)(tensor);\n<span class=\"pl-c1\">diff --git a/torch/lib/THC/generic/THCTensorCopy.cu b/torch/lib/THC/generic/THCTensorCopy.cu</span>\nindex 4198025..f99ea44 100644\n<span class=\"pl-md\">--- a/torch/lib/THC/generic/THCTensorCopy.cu</span>\n<span class=\"pl-mi1\">+++ b/torch/lib/THC/generic/THCTensorCopy.cu</span>\n<span class=\"pl-mdr\">@@ -4,7 +4,9 @@</span>\n \n THC_API void\n THCTensor_(copy)(THCState* state, THCTensor* dst, THCTensor* src) {\n<span class=\"pl-md\"><span class=\"pl-md\">-</span>  THC_copyTensor&lt;THCTensor, THCTensor&gt;(state, dst, src);</span>\n<span class=\"pl-mi1\"><span class=\"pl-mi1\">+</span>  if (dst != src) {</span>\n<span class=\"pl-mi1\"><span class=\"pl-mi1\">+</span>    THC_copyTensor&lt;THCTensor, THCTensor&gt;(state, dst, src);</span>\n<span class=\"pl-mi1\"><span class=\"pl-mi1\">+</span>  }</span>\n }\n \n THC_API void</pre></div>", "body_text": "I suggest:\ndiff --git a/torch/lib/TH/generic/THTensorCopy.c b/torch/lib/TH/generic/THTensorCopy.c\nindex 71ccfdd..6e08ba6 100644\n--- a/torch/lib/TH/generic/THTensorCopy.c\n+++ b/torch/lib/TH/generic/THTensorCopy.c\n@@ -68,7 +68,9 @@ void THTensor_(copyTranspose)(THTensor *tensor, THTensor *src) {\n \n void THTensor_(copy)(THTensor *tensor, THTensor *src)\n {\n-  if (THTensor_(isContiguous)(tensor) && THTensor_(isContiguous)(src) && THTensor_(nElement)(tensor) == THTensor_(nElement)(src)) {\n+  if (tensor == src) {\n+    // Nothing to do\n+  } else if (THTensor_(isContiguous)(tensor) && THTensor_(isContiguous)(src) && THTensor_(nElement)(tensor) == THTensor_(nElement)(src)) {\n     real *sp = THTensor_(data)(src);\n     real *rp = THTensor_(data)(tensor);\n     ptrdiff_t sz = THTensor_(nElement)(tensor);\ndiff --git a/torch/lib/THC/generic/THCTensorCopy.cu b/torch/lib/THC/generic/THCTensorCopy.cu\nindex 4198025..f99ea44 100644\n--- a/torch/lib/THC/generic/THCTensorCopy.cu\n+++ b/torch/lib/THC/generic/THCTensorCopy.cu\n@@ -4,7 +4,9 @@\n \n THC_API void\n THCTensor_(copy)(THCState* state, THCTensor* dst, THCTensor* src) {\n-  THC_copyTensor<THCTensor, THCTensor>(state, dst, src);\n+  if (dst != src) {\n+    THC_copyTensor<THCTensor, THCTensor>(state, dst, src);\n+  }\n }\n \n THC_API void", "in_reply_to_id": 121143458}