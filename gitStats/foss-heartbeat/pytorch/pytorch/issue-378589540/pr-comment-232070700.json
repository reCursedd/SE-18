{"url": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/232070700", "pull_request_review_id": 173185087, "id": 232070700, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIzMjA3MDcwMA==", "diff_hunk": "@@ -290,24 +301,15 @@ def test_common_errors(self):\n             next(gen)\n \n     def test_nominal(self):\n-        with tempfile.NamedTemporaryFile() as file:\n-            url = 'file://%s?world_size=%d' % (file.name, 2)\n+        with tempfile.NamedTemporaryFile(delete=False) as file:\n+            url = 'file://%s?world_size=%d' % (file.name, 1)\n             gen0 = c10d.rendezvous(url + \"&rank=0\")\n             store0, rank0, size0 = next(gen0)\n             self.assertEqual(0, rank0)\n-            self.assertEqual(2, size0)\n-            gen1 = c10d.rendezvous(url + \"&rank=1\")\n-            store1, rank1, size1 = next(gen1)\n-            self.assertEqual(1, rank1)\n-            self.assertEqual(2, size1)\n+            self.assertEqual(1, size0)\n \n-            # Set value on both stores\n             store0.set(\"key0\", \"value0\")\n-            store1.set(\"key1\", \"value1\")\n-\n-            # Cross check with get\n-            self.assertEqual(b\"value0\", store1.get(\"key0\"))\n-            self.assertEqual(b\"value1\", store0.get(\"key1\"))\n+            self.assertEqual(b\"value0\", store0.get(\"key0\"))", "path": "test/test_c10d.py", "position": null, "original_position": 82, "commit_id": "459f11878ca51fc436e69a78f8d1beefe44d12f9", "original_commit_id": "a6799f8f8371b9d5b0b4f821cf703cc85dd2f87e", "user": {"login": "pietern", "id": 9845, "node_id": "MDQ6VXNlcjk4NDU=", "avatar_url": "https://avatars3.githubusercontent.com/u/9845?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pietern", "html_url": "https://github.com/pietern", "followers_url": "https://api.github.com/users/pietern/followers", "following_url": "https://api.github.com/users/pietern/following{/other_user}", "gists_url": "https://api.github.com/users/pietern/gists{/gist_id}", "starred_url": "https://api.github.com/users/pietern/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pietern/subscriptions", "organizations_url": "https://api.github.com/users/pietern/orgs", "repos_url": "https://api.github.com/users/pietern/repos", "events_url": "https://api.github.com/users/pietern/events{/privacy}", "received_events_url": "https://api.github.com/users/pietern/received_events", "type": "User", "site_admin": false}, "body": "It doesn't need to be two processes, it can be two instances within the same process. The test ensures that sets on one instance are visible by the other. As well as the proper c10d.rendezvous integration of course.", "created_at": "2018-11-08T21:40:30Z", "updated_at": "2018-11-23T15:54:33Z", "html_url": "https://github.com/pytorch/pytorch/pull/13708#discussion_r232070700", "pull_request_url": "https://api.github.com/repos/pytorch/pytorch/pulls/13708", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/232070700"}, "html": {"href": "https://github.com/pytorch/pytorch/pull/13708#discussion_r232070700"}, "pull_request": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/13708"}}, "body_html": "<p>It doesn't need to be two processes, it can be two instances within the same process. The test ensures that sets on one instance are visible by the other. As well as the proper c10d.rendezvous integration of course.</p>", "body_text": "It doesn't need to be two processes, it can be two instances within the same process. The test ensures that sets on one instance are visible by the other. As well as the proper c10d.rendezvous integration of course.", "in_reply_to_id": 231774089}