{"url": "https://api.github.com/repos/pytorch/pytorch/issues/comments/390918168", "html_url": "https://github.com/pytorch/pytorch/issues/7255#issuecomment-390918168", "issue_url": "https://api.github.com/repos/pytorch/pytorch/issues/7255", "id": 390918168, "node_id": "MDEyOklzc3VlQ29tbWVudDM5MDkxODE2OA==", "user": {"login": "elanmart", "id": 10772830, "node_id": "MDQ6VXNlcjEwNzcyODMw", "avatar_url": "https://avatars3.githubusercontent.com/u/10772830?v=4", "gravatar_id": "", "url": "https://api.github.com/users/elanmart", "html_url": "https://github.com/elanmart", "followers_url": "https://api.github.com/users/elanmart/followers", "following_url": "https://api.github.com/users/elanmart/following{/other_user}", "gists_url": "https://api.github.com/users/elanmart/gists{/gist_id}", "starred_url": "https://api.github.com/users/elanmart/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/elanmart/subscriptions", "organizations_url": "https://api.github.com/users/elanmart/orgs", "repos_url": "https://api.github.com/users/elanmart/repos", "events_url": "https://api.github.com/users/elanmart/events{/privacy}", "received_events_url": "https://api.github.com/users/elanmart/received_events", "type": "User", "site_admin": false}, "created_at": "2018-05-22T09:06:49Z", "updated_at": "2018-05-22T09:06:49Z", "author_association": "CONTRIBUTOR", "body_html": "<p>Is including the optimizer a good idea though? I can imagine a code like this</p>\n<div class=\"highlight highlight-source-python\"><pre>optimizer <span class=\"pl-k\">=</span> th.load(<span class=\"pl-c1\">...</span>)\nscheduler <span class=\"pl-k\">=</span> th.load(<span class=\"pl-c1\">...</span>)\n\nscheduler.step() <span class=\"pl-c\"><span class=\"pl-c\">#</span> this will not change lr of the loaded optimizer, but of the internal copy?</span></pre></div>", "body_text": "Is including the optimizer a good idea though? I can imagine a code like this\noptimizer = th.load(...)\nscheduler = th.load(...)\n\nscheduler.step() # this will not change lr of the loaded optimizer, but of the internal copy?", "body": "Is including the optimizer a good idea though? I can imagine a code like this \r\n\r\n```python\r\noptimizer = th.load(...)\r\nscheduler = th.load(...)\r\n\r\nscheduler.step() # this will not change lr of the loaded optimizer, but of the internal copy?\r\n```\r\n"}