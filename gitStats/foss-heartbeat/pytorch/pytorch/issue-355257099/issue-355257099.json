{"url": "https://api.github.com/repos/pytorch/pytorch/issues/11004", "repository_url": "https://api.github.com/repos/pytorch/pytorch", "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/11004/labels{/name}", "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/11004/comments", "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/11004/events", "html_url": "https://github.com/pytorch/pytorch/issues/11004", "id": 355257099, "node_id": "MDU6SXNzdWUzNTUyNTcwOTk=", "number": 11004, "title": "CUDA Extension Build Failure on Windows and MSVC 2017", "user": {"login": "JackHunt", "id": 3265323, "node_id": "MDQ6VXNlcjMyNjUzMjM=", "avatar_url": "https://avatars3.githubusercontent.com/u/3265323?v=4", "gravatar_id": "", "url": "https://api.github.com/users/JackHunt", "html_url": "https://github.com/JackHunt", "followers_url": "https://api.github.com/users/JackHunt/followers", "following_url": "https://api.github.com/users/JackHunt/following{/other_user}", "gists_url": "https://api.github.com/users/JackHunt/gists{/gist_id}", "starred_url": "https://api.github.com/users/JackHunt/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/JackHunt/subscriptions", "organizations_url": "https://api.github.com/users/JackHunt/orgs", "repos_url": "https://api.github.com/users/JackHunt/repos", "events_url": "https://api.github.com/users/JackHunt/events{/privacy}", "received_events_url": "https://api.github.com/users/JackHunt/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 790080431, "node_id": "MDU6TGFiZWw3OTAwODA0MzE=", "url": "https://api.github.com/repos/pytorch/pytorch/labels/windows", "name": "windows", "color": "fcff6b", "default": false}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-08-29T17:19:50Z", "updated_at": "2018-09-24T03:50:40Z", "closed_at": null, "author_association": "NONE", "body_html": "<h2>Issue description</h2>\n<p>Building a custom CUDA extension fails with the following error on MSVC 2017:<br>\n<code>&lt;env_lib_dir&gt;\\site-packages\\torch\\lib\\include\\pybind11\\cast.h(1393): error: expression must be a pointer to a complete object type</code></p>\n<p>However, I have not observed the error with multiple GCC versions on Linux.</p>\n<h2>Code example</h2>\n<p>Here is an MWE.</p>\n<p>setup.py</p>\n<pre><code>import os\nfrom setuptools import setup\nfrom torch.utils.cpp_extension import CppExtension, CUDAExtension, BuildExtension\n\nsetup(name='exten', ext_modules=[\n    CUDAExtension('exten_cuda', ['exten_cuda.cpp', 'exten_cuda_kernel.cu'])\n    ], cmdclass={'build_ext': BuildExtension})\n</code></pre>\n<p>exten_cuda.cpp</p>\n<pre><code>std::vector&lt;at::Tensor&gt; exten_cuda_forward(at::Tensor a);\nstd::vector&lt;at::Tensor&gt; exten_cuda_backward(at::Tensor a);\n\nstd::vector&lt;at::Tensor&gt; exten_forward(at::Tensor a) {\n  return exten_cuda_forward(a);\n}\n\nstd::vector&lt;at::Tensor&gt; exten_backward(at::Tensor a) {\n  return exten_cuda_backward(a);\n}\n\n// Do Python bindings.\nPYBIND11_MODULE(TORCH_EXTENSION_NAME, m) {\n  m.def(\"forward\", &amp;exten_forward, \"Extension forward CUDA\");\n  m.def(\"backward\", &amp;exten_backward, \"Extension backward CUDA\");\n}\n</code></pre>\n<p>exten_cuda_kernel.cu</p>\n<pre><code>#include &lt;torch/torch.h&gt;\n#include &lt;cuda.h&gt;\n#include &lt;cuda_runtime.h&gt;\n#include &lt;vector&gt;\n\nstd::vector&lt;at::Tensor&gt; exten_cuda_forward(at::Tensor a) {\n  // Do nothing.\n\n  // Return empty vector (just for compile error demo).\n  return {};\n}\n\nstd::vector&lt;at::Tensor&gt; exten_cuda_backward(at::Tensor a) {\n  // Do nothing.\n\n  // Return empty vector (just for compile error demo).\n  return {};\n}\n</code></pre>\n<h2>System Info</h2>\n<pre><code>Collecting environment information...\nPyTorch version: 0.4.1\nIs debug build: No\nCUDA used to build PyTorch: 9.2\n\nOS: Microsoft Windows 10 Education\nGCC version: (x86_64-posix-seh, Built by strawberryperl.com project) 7.1.0\nCMake version: version 3.12.0\n\nPython version: 3.7\nIs CUDA available: Yes\nCUDA runtime version: 9.2.148\nGPU models and configuration: GPU 0: GeForce GTX 1060 6GB\nNvidia driver version: 399.07\ncuDNN version: Could not collect\n\nVersions of relevant libraries:\n[pip] numpy (1.15.1)\n[pip] torch (0.4.1)\n[pip] torchvision (0.2.1)\n[conda] cuda92                    1.0                           0    pytorch\n[conda] pytorch                   0.4.1           py37_cuda92_cudnn7he774522_1  [cuda92]  pytorch\n[conda] torchvision               0.2.1                     &lt;pip&gt;\n</code></pre>\n<ul>\n<li>PyTorch or Caffe2: PyTorch</li>\n<li>How you installed PyTorch (conda, pip, source): conda</li>\n<li>OS: Windows 10 x64</li>\n<li>PyTorch version: 0.4.1</li>\n<li>Python version: 3.7</li>\n<li>CUDA/cuDNN version: 9.2</li>\n<li>GPU models and configuration: GTX 1060 6GB</li>\n<li>MSVC version (if compiling from source): 15.7.5</li>\n<li>CMake version: 3.12.0</li>\n<li>Versions of any other relevant libraries:  setuptools 0.2.1</li>\n</ul>", "body_text": "Issue description\nBuilding a custom CUDA extension fails with the following error on MSVC 2017:\n<env_lib_dir>\\site-packages\\torch\\lib\\include\\pybind11\\cast.h(1393): error: expression must be a pointer to a complete object type\nHowever, I have not observed the error with multiple GCC versions on Linux.\nCode example\nHere is an MWE.\nsetup.py\nimport os\nfrom setuptools import setup\nfrom torch.utils.cpp_extension import CppExtension, CUDAExtension, BuildExtension\n\nsetup(name='exten', ext_modules=[\n    CUDAExtension('exten_cuda', ['exten_cuda.cpp', 'exten_cuda_kernel.cu'])\n    ], cmdclass={'build_ext': BuildExtension})\n\nexten_cuda.cpp\nstd::vector<at::Tensor> exten_cuda_forward(at::Tensor a);\nstd::vector<at::Tensor> exten_cuda_backward(at::Tensor a);\n\nstd::vector<at::Tensor> exten_forward(at::Tensor a) {\n  return exten_cuda_forward(a);\n}\n\nstd::vector<at::Tensor> exten_backward(at::Tensor a) {\n  return exten_cuda_backward(a);\n}\n\n// Do Python bindings.\nPYBIND11_MODULE(TORCH_EXTENSION_NAME, m) {\n  m.def(\"forward\", &exten_forward, \"Extension forward CUDA\");\n  m.def(\"backward\", &exten_backward, \"Extension backward CUDA\");\n}\n\nexten_cuda_kernel.cu\n#include <torch/torch.h>\n#include <cuda.h>\n#include <cuda_runtime.h>\n#include <vector>\n\nstd::vector<at::Tensor> exten_cuda_forward(at::Tensor a) {\n  // Do nothing.\n\n  // Return empty vector (just for compile error demo).\n  return {};\n}\n\nstd::vector<at::Tensor> exten_cuda_backward(at::Tensor a) {\n  // Do nothing.\n\n  // Return empty vector (just for compile error demo).\n  return {};\n}\n\nSystem Info\nCollecting environment information...\nPyTorch version: 0.4.1\nIs debug build: No\nCUDA used to build PyTorch: 9.2\n\nOS: Microsoft Windows 10 Education\nGCC version: (x86_64-posix-seh, Built by strawberryperl.com project) 7.1.0\nCMake version: version 3.12.0\n\nPython version: 3.7\nIs CUDA available: Yes\nCUDA runtime version: 9.2.148\nGPU models and configuration: GPU 0: GeForce GTX 1060 6GB\nNvidia driver version: 399.07\ncuDNN version: Could not collect\n\nVersions of relevant libraries:\n[pip] numpy (1.15.1)\n[pip] torch (0.4.1)\n[pip] torchvision (0.2.1)\n[conda] cuda92                    1.0                           0    pytorch\n[conda] pytorch                   0.4.1           py37_cuda92_cudnn7he774522_1  [cuda92]  pytorch\n[conda] torchvision               0.2.1                     <pip>\n\n\nPyTorch or Caffe2: PyTorch\nHow you installed PyTorch (conda, pip, source): conda\nOS: Windows 10 x64\nPyTorch version: 0.4.1\nPython version: 3.7\nCUDA/cuDNN version: 9.2\nGPU models and configuration: GTX 1060 6GB\nMSVC version (if compiling from source): 15.7.5\nCMake version: 3.12.0\nVersions of any other relevant libraries:  setuptools 0.2.1", "body": "## Issue description\r\n\r\nBuilding a custom CUDA extension fails with the following error on MSVC 2017:\r\n`<env_lib_dir>\\site-packages\\torch\\lib\\include\\pybind11\\cast.h(1393): error: expression must be a pointer to a complete object type`\r\n\r\nHowever, I have not observed the error with multiple GCC versions on Linux.\r\n\r\n## Code example\r\nHere is an MWE.\r\n\r\nsetup.py\r\n```\r\nimport os\r\nfrom setuptools import setup\r\nfrom torch.utils.cpp_extension import CppExtension, CUDAExtension, BuildExtension\r\n\r\nsetup(name='exten', ext_modules=[\r\n    CUDAExtension('exten_cuda', ['exten_cuda.cpp', 'exten_cuda_kernel.cu'])\r\n    ], cmdclass={'build_ext': BuildExtension})\r\n```\r\n\r\nexten_cuda.cpp\r\n```\r\nstd::vector<at::Tensor> exten_cuda_forward(at::Tensor a);\r\nstd::vector<at::Tensor> exten_cuda_backward(at::Tensor a);\r\n\r\nstd::vector<at::Tensor> exten_forward(at::Tensor a) {\r\n  return exten_cuda_forward(a);\r\n}\r\n\r\nstd::vector<at::Tensor> exten_backward(at::Tensor a) {\r\n  return exten_cuda_backward(a);\r\n}\r\n\r\n// Do Python bindings.\r\nPYBIND11_MODULE(TORCH_EXTENSION_NAME, m) {\r\n  m.def(\"forward\", &exten_forward, \"Extension forward CUDA\");\r\n  m.def(\"backward\", &exten_backward, \"Extension backward CUDA\");\r\n}\r\n```\r\n\r\nexten_cuda_kernel.cu\r\n```\r\n#include <torch/torch.h>\r\n#include <cuda.h>\r\n#include <cuda_runtime.h>\r\n#include <vector>\r\n\r\nstd::vector<at::Tensor> exten_cuda_forward(at::Tensor a) {\r\n  // Do nothing.\r\n\r\n  // Return empty vector (just for compile error demo).\r\n  return {};\r\n}\r\n\r\nstd::vector<at::Tensor> exten_cuda_backward(at::Tensor a) {\r\n  // Do nothing.\r\n\r\n  // Return empty vector (just for compile error demo).\r\n  return {};\r\n}\r\n```\r\n\r\n## System Info\r\n```\r\nCollecting environment information...\r\nPyTorch version: 0.4.1\r\nIs debug build: No\r\nCUDA used to build PyTorch: 9.2\r\n\r\nOS: Microsoft Windows 10 Education\r\nGCC version: (x86_64-posix-seh, Built by strawberryperl.com project) 7.1.0\r\nCMake version: version 3.12.0\r\n\r\nPython version: 3.7\r\nIs CUDA available: Yes\r\nCUDA runtime version: 9.2.148\r\nGPU models and configuration: GPU 0: GeForce GTX 1060 6GB\r\nNvidia driver version: 399.07\r\ncuDNN version: Could not collect\r\n\r\nVersions of relevant libraries:\r\n[pip] numpy (1.15.1)\r\n[pip] torch (0.4.1)\r\n[pip] torchvision (0.2.1)\r\n[conda] cuda92                    1.0                           0    pytorch\r\n[conda] pytorch                   0.4.1           py37_cuda92_cudnn7he774522_1  [cuda92]  pytorch\r\n[conda] torchvision               0.2.1                     <pip>\r\n```\r\n\r\n- PyTorch or Caffe2: PyTorch\r\n- How you installed PyTorch (conda, pip, source): conda\r\n- OS: Windows 10 x64\r\n- PyTorch version: 0.4.1\r\n- Python version: 3.7\r\n- CUDA/cuDNN version: 9.2\r\n- GPU models and configuration: GTX 1060 6GB\r\n- MSVC version (if compiling from source): 15.7.5\r\n- CMake version: 3.12.0\r\n- Versions of any other relevant libraries:  setuptools 0.2.1\r\n"}