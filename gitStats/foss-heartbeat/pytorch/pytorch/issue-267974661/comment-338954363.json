{"url": "https://api.github.com/repos/pytorch/pytorch/issues/comments/338954363", "html_url": "https://github.com/pytorch/pytorch/pull/3255#issuecomment-338954363", "issue_url": "https://api.github.com/repos/pytorch/pytorch/issues/3255", "id": 338954363, "node_id": "MDEyOklzc3VlQ29tbWVudDMzODk1NDM2Mw==", "user": {"login": "bermanmaxim", "id": 5989894, "node_id": "MDQ6VXNlcjU5ODk4OTQ=", "avatar_url": "https://avatars3.githubusercontent.com/u/5989894?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bermanmaxim", "html_url": "https://github.com/bermanmaxim", "followers_url": "https://api.github.com/users/bermanmaxim/followers", "following_url": "https://api.github.com/users/bermanmaxim/following{/other_user}", "gists_url": "https://api.github.com/users/bermanmaxim/gists{/gist_id}", "starred_url": "https://api.github.com/users/bermanmaxim/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bermanmaxim/subscriptions", "organizations_url": "https://api.github.com/users/bermanmaxim/orgs", "repos_url": "https://api.github.com/users/bermanmaxim/repos", "events_url": "https://api.github.com/users/bermanmaxim/events{/privacy}", "received_events_url": "https://api.github.com/users/bermanmaxim/received_events", "type": "User", "site_admin": false}, "created_at": "2017-10-24T11:04:08Z", "updated_at": "2017-10-24T11:07:03Z", "author_association": "CONTRIBUTOR", "body_html": "<p>Actually, I just thought of an issue. Similarly to <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load issue title\" data-id=\"251834168\" data-permission-text=\"Issue title is private\" data-url=\"https://github.com/pytorch/pytorch/issues/2510\" data-hovercard-type=\"issue\" data-hovercard-url=\"/pytorch/pytorch/issues/2510/hovercard\" href=\"https://github.com/pytorch/pytorch/issues/2510\">#2510</a>, if there is a cudnn library in <code>cuda_lib_path</code> and the user still specifies a different <code>CUDNN_LIB_DIR</code>, the binary will not use the user-specified one, since the <code>cuda_lib_path</code> is appened before in the rpath:</p>\n<blockquote>\n<p>patchelf --print-rpath _C.so<br>\n/users/me/miniconda2/lib:/usr/local/cuda-8.0/lib64:/custom_cudnn/v7/lib64:$ORIGIN/lib</p>\n</blockquote>\n<p>We could replace <code>extra_link_args.append('-Wl,-rpath,' + CUDNN_LIB_DIR)</code> by <code>extra_link_args.insert(0, '-Wl,-rpath,' + CUDNN_LIB_DIR)</code> similarly to <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load issue title\" data-id=\"262424758\" data-permission-text=\"Issue title is private\" data-url=\"https://github.com/pytorch/pytorch/issues/2947\" data-hovercard-type=\"pull_request\" data-hovercard-url=\"/pytorch/pytorch/pull/2947/hovercard\" href=\"https://github.com/pytorch/pytorch/pull/2947\">#2947</a>...</p>", "body_text": "Actually, I just thought of an issue. Similarly to #2510, if there is a cudnn library in cuda_lib_path and the user still specifies a different CUDNN_LIB_DIR, the binary will not use the user-specified one, since the cuda_lib_path is appened before in the rpath:\n\npatchelf --print-rpath _C.so\n/users/me/miniconda2/lib:/usr/local/cuda-8.0/lib64:/custom_cudnn/v7/lib64:$ORIGIN/lib\n\nWe could replace extra_link_args.append('-Wl,-rpath,' + CUDNN_LIB_DIR) by extra_link_args.insert(0, '-Wl,-rpath,' + CUDNN_LIB_DIR) similarly to #2947...", "body": "Actually, I just thought of an issue. Similarly to #2510, if there is a cudnn library in `cuda_lib_path` and the user still specifies a different `CUDNN_LIB_DIR`, the binary will not use the user-specified one, since the `cuda_lib_path` is appened before in the rpath:\r\n\r\n> patchelf --print-rpath _C.so\r\n> /users/me/miniconda2/lib:/usr/local/cuda-8.0/lib64:/custom_cudnn/v7/lib64:$ORIGIN/lib\r\n> \r\n\r\nWe could replace `extra_link_args.append('-Wl,-rpath,' + CUDNN_LIB_DIR)` by `extra_link_args.insert(0, '-Wl,-rpath,' + CUDNN_LIB_DIR)` similarly to #2947...\r\n"}