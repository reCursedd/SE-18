{"url": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/156459016", "pull_request_review_id": 82939300, "id": 156459016, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE1NjQ1OTAxNg==", "diff_hunk": "@@ -77,6 +78,20 @@ def log_prob(self, value):\n         \"\"\"\n         raise NotImplementedError\n \n+    def enumerate_support(self):\n+        \"\"\"\n+        Returns tensor containing all values supported by a discrete\n+        distribution. The result will enumerate over dimension 0.\n+\n+        Note that this enumerates over all batched variables in lock-step\n+        ``[[0, 0], [1, 1], ...]``. To iterate over the full Cartesian product", "path": "torch/distributions.py", "position": null, "original_position": 18, "commit_id": "2bc2a66d31021ba797f4472d9485922ffe297e47", "original_commit_id": "517b6d2afab4cb0d679cc61392ca21d2572baedc", "user": {"login": "fritzo", "id": 648532, "node_id": "MDQ6VXNlcjY0ODUzMg==", "avatar_url": "https://avatars0.githubusercontent.com/u/648532?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fritzo", "html_url": "https://github.com/fritzo", "followers_url": "https://api.github.com/users/fritzo/followers", "following_url": "https://api.github.com/users/fritzo/following{/other_user}", "gists_url": "https://api.github.com/users/fritzo/gists{/gist_id}", "starred_url": "https://api.github.com/users/fritzo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fritzo/subscriptions", "organizations_url": "https://api.github.com/users/fritzo/orgs", "repos_url": "https://api.github.com/users/fritzo/repos", "events_url": "https://api.github.com/users/fritzo/events{/privacy}", "received_events_url": "https://api.github.com/users/fritzo/received_events", "type": "User", "site_admin": false}, "body": "Correct. The final shape should be `(cardinality,) + batch_shape`. In multivariate distributions like Multinomial or OneHotCategorical, the shape will be `(cardinality,) + batch_shape + event_shape`, but for the simple distributions in this PR, `event_shape = ()`.", "created_at": "2017-12-12T18:45:31Z", "updated_at": "2018-11-23T15:37:17Z", "html_url": "https://github.com/pytorch/pytorch/pull/4129#discussion_r156459016", "pull_request_url": "https://api.github.com/repos/pytorch/pytorch/pulls/4129", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/156459016"}, "html": {"href": "https://github.com/pytorch/pytorch/pull/4129#discussion_r156459016"}, "pull_request": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/4129"}}, "body_html": "<p>Correct. The final shape should be <code>(cardinality,) + batch_shape</code>. In multivariate distributions like Multinomial or OneHotCategorical, the shape will be <code>(cardinality,) + batch_shape + event_shape</code>, but for the simple distributions in this PR, <code>event_shape = ()</code>.</p>", "body_text": "Correct. The final shape should be (cardinality,) + batch_shape. In multivariate distributions like Multinomial or OneHotCategorical, the shape will be (cardinality,) + batch_shape + event_shape, but for the simple distributions in this PR, event_shape = ().", "in_reply_to_id": 156366925}