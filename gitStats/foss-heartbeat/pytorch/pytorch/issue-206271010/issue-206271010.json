{"url": "https://api.github.com/repos/pytorch/pytorch/issues/702", "repository_url": "https://api.github.com/repos/pytorch/pytorch", "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/702/labels{/name}", "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/702/comments", "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/702/events", "html_url": "https://github.com/pytorch/pytorch/issues/702", "id": 206271010, "node_id": "MDU6SXNzdWUyMDYyNzEwMTA=", "number": 702, "title": "Feature request: user specified default values for nn.Embedding", "user": {"login": "shawnjhenry", "id": 9464836, "node_id": "MDQ6VXNlcjk0NjQ4MzY=", "avatar_url": "https://avatars1.githubusercontent.com/u/9464836?v=4", "gravatar_id": "", "url": "https://api.github.com/users/shawnjhenry", "html_url": "https://github.com/shawnjhenry", "followers_url": "https://api.github.com/users/shawnjhenry/followers", "following_url": "https://api.github.com/users/shawnjhenry/following{/other_user}", "gists_url": "https://api.github.com/users/shawnjhenry/gists{/gist_id}", "starred_url": "https://api.github.com/users/shawnjhenry/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/shawnjhenry/subscriptions", "organizations_url": "https://api.github.com/users/shawnjhenry/orgs", "repos_url": "https://api.github.com/users/shawnjhenry/repos", "events_url": "https://api.github.com/users/shawnjhenry/events{/privacy}", "received_events_url": "https://api.github.com/users/shawnjhenry/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 586698641, "node_id": "MDU6TGFiZWw1ODY2OTg2NDE=", "url": "https://api.github.com/repos/pytorch/pytorch/labels/5hr", "name": "5hr", "color": "d4c5e9", "default": false}, {"id": 424131849, "node_id": "MDU6TGFiZWw0MjQxMzE4NDk=", "url": "https://api.github.com/repos/pytorch/pytorch/labels/enhancement", "name": "enhancement", "color": "84b6eb", "default": true}, {"id": 443484050, "node_id": "MDU6TGFiZWw0NDM0ODQwNTA=", "url": "https://api.github.com/repos/pytorch/pytorch/labels/medium%20priority", "name": "medium priority", "color": "fbca04", "default": false}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-02-08T17:40:56Z", "updated_at": "2017-04-18T22:44:52Z", "closed_at": null, "author_association": "NONE", "body_html": "<p>Hi,</p>\n<p>I'm trying to create a module that, given an n-dimensional <code>LongTensor</code> returns an n+2 dimensional <code>FloatTensor</code> arranged correspondingly from slices of a 3-dimensional <code>FloatTensor</code>.  In theory this can be accomplished with <code>nn.Embedding</code> plus a reshape, except that I need the matrix corresponding to the <code>padding_idx</code> to be the identity matrix instead of a zero matrix.  This could be accomplished by allowing the user to specify what default vector is returned corresponding to <code>padding_idx</code>.  Would that be possible?</p>\n<p>Thanks,<br>\nShawn</p>", "body_text": "Hi,\nI'm trying to create a module that, given an n-dimensional LongTensor returns an n+2 dimensional FloatTensor arranged correspondingly from slices of a 3-dimensional FloatTensor.  In theory this can be accomplished with nn.Embedding plus a reshape, except that I need the matrix corresponding to the padding_idx to be the identity matrix instead of a zero matrix.  This could be accomplished by allowing the user to specify what default vector is returned corresponding to padding_idx.  Would that be possible?\nThanks,\nShawn", "body": "Hi,\r\n\r\nI'm trying to create a module that, given an n-dimensional `LongTensor` returns an n+2 dimensional `FloatTensor` arranged correspondingly from slices of a 3-dimensional `FloatTensor`.  In theory this can be accomplished with `nn.Embedding` plus a reshape, except that I need the matrix corresponding to the `padding_idx` to be the identity matrix instead of a zero matrix.  This could be accomplished by allowing the user to specify what default vector is returned corresponding to `padding_idx`.  Would that be possible?\r\n\r\nThanks,\r\nShawn"}