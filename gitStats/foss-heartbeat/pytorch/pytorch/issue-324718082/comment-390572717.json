{"url": "https://api.github.com/repos/pytorch/pytorch/issues/comments/390572717", "html_url": "https://github.com/pytorch/pytorch/issues/7716#issuecomment-390572717", "issue_url": "https://api.github.com/repos/pytorch/pytorch/issues/7716", "id": 390572717, "node_id": "MDEyOklzc3VlQ29tbWVudDM5MDU3MjcxNw==", "user": {"login": "jeasinema", "id": 10633528, "node_id": "MDQ6VXNlcjEwNjMzNTI4", "avatar_url": "https://avatars3.githubusercontent.com/u/10633528?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jeasinema", "html_url": "https://github.com/jeasinema", "followers_url": "https://api.github.com/users/jeasinema/followers", "following_url": "https://api.github.com/users/jeasinema/following{/other_user}", "gists_url": "https://api.github.com/users/jeasinema/gists{/gist_id}", "starred_url": "https://api.github.com/users/jeasinema/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jeasinema/subscriptions", "organizations_url": "https://api.github.com/users/jeasinema/orgs", "repos_url": "https://api.github.com/users/jeasinema/repos", "events_url": "https://api.github.com/users/jeasinema/events{/privacy}", "received_events_url": "https://api.github.com/users/jeasinema/received_events", "type": "User", "site_admin": false}, "created_at": "2018-05-21T07:13:16Z", "updated_at": "2018-05-21T07:13:16Z", "author_association": "NONE", "body_html": "<p>I have checked the code like <a href=\"https://github.com/pytorch/pytorch/blob/master/torch/nn/functional.py#L1202\">batch_norm</a> and <a href=\"https://github.com/pytorch/pytorch/blob/master/torch/nn/functional.py#L1243\">instance_norm</a>. Does it mean for a <code>feature</code>(a.k.a. <code>channel</code>), there must be more than 1 value(batch size &gt; 1 or L/H*W/D*H*W &gt; 1)?</p>\n<p>I agree that it's pathologic when the amount of value is too few, and I try to invoke <code>.mean()</code> or <code>.std()</code> on a <code>torch.Tensor</code> with only 1 value like <code>torch.ones(1).std()</code>, <code>torch.ones(3,1).std(dim=1)</code>, it will return <code>nan</code>. Thus I think add some error message and doc will better than assuming average std in <code>n=1</code> case.</p>", "body_text": "I have checked the code like batch_norm and instance_norm. Does it mean for a feature(a.k.a. channel), there must be more than 1 value(batch size > 1 or L/H*W/D*H*W > 1)?\nI agree that it's pathologic when the amount of value is too few, and I try to invoke .mean() or .std() on a torch.Tensor with only 1 value like torch.ones(1).std(), torch.ones(3,1).std(dim=1), it will return nan. Thus I think add some error message and doc will better than assuming average std in n=1 case.", "body": "I have checked the code like [batch_norm](https://github.com/pytorch/pytorch/blob/master/torch/nn/functional.py#L1202) and [instance_norm](https://github.com/pytorch/pytorch/blob/master/torch/nn/functional.py#L1243). Does it mean for a `feature`(a.k.a. `channel`), there must be more than 1 value(batch size > 1 or L/H\\*W/D\\*H\\*W > 1)? \r\n\r\nI agree that it's pathologic when the amount of value is too few, and I try to invoke `.mean()` or `.std()` on a `torch.Tensor` with only 1 value like `torch.ones(1).std()`, `torch.ones(3,1).std(dim=1)`, it will return `nan`. Thus I think add some error message and doc will better than assuming average std in `n=1` case. "}