{"url": "https://api.github.com/repos/pytorch/pytorch/issues/comments/361984639", "html_url": "https://github.com/pytorch/pytorch/issues/4960#issuecomment-361984639", "issue_url": "https://api.github.com/repos/pytorch/pytorch/issues/4960", "id": 361984639, "node_id": "MDEyOklzc3VlQ29tbWVudDM2MTk4NDYzOQ==", "user": {"login": "R0bertoG", "id": 2477257, "node_id": "MDQ6VXNlcjI0NzcyNTc=", "avatar_url": "https://avatars2.githubusercontent.com/u/2477257?v=4", "gravatar_id": "", "url": "https://api.github.com/users/R0bertoG", "html_url": "https://github.com/R0bertoG", "followers_url": "https://api.github.com/users/R0bertoG/followers", "following_url": "https://api.github.com/users/R0bertoG/following{/other_user}", "gists_url": "https://api.github.com/users/R0bertoG/gists{/gist_id}", "starred_url": "https://api.github.com/users/R0bertoG/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/R0bertoG/subscriptions", "organizations_url": "https://api.github.com/users/R0bertoG/orgs", "repos_url": "https://api.github.com/users/R0bertoG/repos", "events_url": "https://api.github.com/users/R0bertoG/events{/privacy}", "received_events_url": "https://api.github.com/users/R0bertoG/received_events", "type": "User", "site_admin": false}, "created_at": "2018-01-31T16:19:07Z", "updated_at": "2018-01-31T16:20:36Z", "author_association": "NONE", "body_html": "<p>Thanks for your answer. I think I understand your point, but I found this confusing and I think it's not consistent with what programmers are used to expect.</p>\n<p>For instance, in Python (or others languages), ideally, an object should throw an error when you call a method with a not allowed type. The message will be about the expected type, not about the internals of the method, otherwise the abstraction is broken and we couldn't use APIs in a transparent way.</p>\n<p>Suppose that you are using the network that other person wrote. What would be the ideal message about? In theory, you don't care about the internals of the network, but about what the network is expecting as input.</p>", "body_text": "Thanks for your answer. I think I understand your point, but I found this confusing and I think it's not consistent with what programmers are used to expect.\nFor instance, in Python (or others languages), ideally, an object should throw an error when you call a method with a not allowed type. The message will be about the expected type, not about the internals of the method, otherwise the abstraction is broken and we couldn't use APIs in a transparent way.\nSuppose that you are using the network that other person wrote. What would be the ideal message about? In theory, you don't care about the internals of the network, but about what the network is expecting as input.", "body": "Thanks for your answer. I think I understand your point, but I found this confusing and I think it's not consistent with what programmers are used to expect. \r\n\r\nFor instance, in Python (or others languages), ideally, an object should throw an error when you call a method with a not allowed type. The message will be about the expected type, not about the internals of the method, otherwise the abstraction is broken and we couldn't use APIs in a transparent way. \r\n\r\nSuppose that you are using the network that other person wrote. What would be the ideal message about? In theory, you don't care about the internals of the network, but about what the network is expecting as input."}