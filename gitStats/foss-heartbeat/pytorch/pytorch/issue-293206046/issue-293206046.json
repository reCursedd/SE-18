{"url": "https://api.github.com/repos/pytorch/pytorch/issues/4960", "repository_url": "https://api.github.com/repos/pytorch/pytorch", "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/4960/labels{/name}", "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/4960/comments", "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/4960/events", "html_url": "https://github.com/pytorch/pytorch/issues/4960", "id": 293206046, "node_id": "MDU6SXNzdWUyOTMyMDYwNDY=", "number": 4960, "title": "Wrong error message from 'matmul' in 'functional.py'", "user": {"login": "R0bertoG", "id": 2477257, "node_id": "MDQ6VXNlcjI0NzcyNTc=", "avatar_url": "https://avatars2.githubusercontent.com/u/2477257?v=4", "gravatar_id": "", "url": "https://api.github.com/users/R0bertoG", "html_url": "https://github.com/R0bertoG", "followers_url": "https://api.github.com/users/R0bertoG/followers", "following_url": "https://api.github.com/users/R0bertoG/following{/other_user}", "gists_url": "https://api.github.com/users/R0bertoG/gists{/gist_id}", "starred_url": "https://api.github.com/users/R0bertoG/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/R0bertoG/subscriptions", "organizations_url": "https://api.github.com/users/R0bertoG/orgs", "repos_url": "https://api.github.com/users/R0bertoG/repos", "events_url": "https://api.github.com/users/R0bertoG/events{/privacy}", "received_events_url": "https://api.github.com/users/R0bertoG/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-01-31T15:43:43Z", "updated_at": "2018-01-31T16:20:36Z", "closed_at": null, "author_association": "NONE", "body_html": "<ul>\n<li>OS: debian (docker container)</li>\n<li>PyTorch version: 0.3.0.post4</li>\n<li>How you installed PyTorch (conda, pip, source): Kaggle Docker Image (<a href=\"https://github.com/Kaggle/docker-python\">https://github.com/Kaggle/docker-python</a>)</li>\n<li>Python version: 3.6.4</li>\n<li>Using CPU</li>\n</ul>\n<hr>\n<p>The error message:</p>\n<pre><code>---------------------------------------------------------------------------\nRuntimeError                              Traceback (most recent call last)\n&lt;ipython-input-56-0e3aecff8c7c&gt; in &lt;module&gt;()\n      3 data = torch.autograd.Variable(data)\n      4 print(data)\n----&gt; 5 y_ = myNetwork(data)\n\n/opt/conda/lib/python3.6/site-packages/torch/nn/modules/module.py in __call__(self, *input, **kwargs)\n    323         for hook in self._forward_pre_hooks.values():\n    324             hook(self, input)\n--&gt; 325         result = self.forward(*input, **kwargs)\n    326         for hook in self._forward_hooks.values():\n    327             hook_result = hook(self, input, result)\n\n&lt;ipython-input-53-5dc90cb17d6e&gt; in forward(self, x)\n      5 \n      6     def forward(self, x):\n----&gt; 7         x = self.fc1(x)\n      8         return x\n      9 \n\n/opt/conda/lib/python3.6/site-packages/torch/nn/modules/module.py in __call__(self, *input, **kwargs)\n    323         for hook in self._forward_pre_hooks.values():\n    324             hook(self, input)\n--&gt; 325         result = self.forward(*input, **kwargs)\n    326         for hook in self._forward_hooks.values():\n    327             hook_result = hook(self, input, result)\n\n/opt/conda/lib/python3.6/site-packages/torch/nn/modules/linear.py in forward(self, input)\n     53 \n     54     def forward(self, input):\n---&gt; 55         return F.linear(input, self.weight, self.bias)\n     56 \n     57     def __repr__(self):\n\n/opt/conda/lib/python3.6/site-packages/torch/nn/functional.py in linear(input, weight, bias)\n    835         return torch.addmm(bias, input, weight.t())\n    836 \n--&gt; 837     output = input.matmul(weight.t())\n    838     if bias is not None:\n    839         output += bias\n\n/opt/conda/lib/python3.6/site-packages/torch/autograd/variable.py in matmul(self, other)\n    384 \n    385     def matmul(self, other):\n--&gt; 386         return torch.matmul(self, other)\n    387 \n    388     def resize(self, *sizes):\n\n/opt/conda/lib/python3.6/site-packages/torch/functional.py in matmul(tensor1, tensor2, out)\n    166     elif dim_tensor1 == 1 and dim_tensor2 == 2:\n    167         if out is None:\n--&gt; 168             return torch.mm(tensor1.unsqueeze(0), tensor2).squeeze_(0)\n    169         else:\n    170             return torch.mm(tensor1.unsqueeze(0), tensor2, out=out).squeeze_(0)\n\nRuntimeError: Expected object of type Variable[torch.LongTensor] but found type Variable[torch.FloatTensor] for argument #1 'mat2'\n</code></pre>\n<p>It's produced by the code:</p>\n<pre><code>import torch\nimport torchvision\nclass Network(torch.nn.Module):\n    def __init__(self):\n        super(Network, self).__init__()\n        self.fc1 = torch.nn.Linear(1, 10)\n        \n    def forward(self, x):\n        x = self.fc1(x)\n        return x\n\nmyNetwork = Network()\n\ndata = torch.Tensor([3]).long()\ndata = torch.autograd.Variable(data)\ny_ = myNetwork(data)\n\n\n</code></pre>\n<p>The error happens because the input to the network is of type 'long' and it should be of type 'float'.<br>\nChanging the type to 'float' fix the problem.<br>\nBut, it seems that the message is saying the opposite:</p>\n<p>RuntimeError: Expected object of type Variable[torch.<strong>LongTensor</strong>] but found type Variable[torch.<strong>FloatTensor</strong>] for argument <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load issue title\" data-id=\"171281708\" data-permission-text=\"Issue title is private\" data-url=\"https://github.com/pytorch/pytorch/issues/1\" data-hovercard-type=\"issue\" data-hovercard-url=\"/pytorch/pytorch/issues/1/hovercard\" href=\"https://github.com/pytorch/pytorch/issues/1\">#1</a> 'mat2'</p>\n<p>The message should be:</p>\n<p>RuntimeError: Expected object of type Variable[torch.<strong>FloatTensor</strong>] but found type Variable[torch.<strong>LongTensor</strong>] for argument <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load issue title\" data-id=\"171281708\" data-permission-text=\"Issue title is private\" data-url=\"https://github.com/pytorch/pytorch/issues/1\" data-hovercard-type=\"issue\" data-hovercard-url=\"/pytorch/pytorch/issues/1/hovercard\" href=\"https://github.com/pytorch/pytorch/issues/1\">#1</a> 'mat2'</p>", "body_text": "OS: debian (docker container)\nPyTorch version: 0.3.0.post4\nHow you installed PyTorch (conda, pip, source): Kaggle Docker Image (https://github.com/Kaggle/docker-python)\nPython version: 3.6.4\nUsing CPU\n\n\nThe error message:\n---------------------------------------------------------------------------\nRuntimeError                              Traceback (most recent call last)\n<ipython-input-56-0e3aecff8c7c> in <module>()\n      3 data = torch.autograd.Variable(data)\n      4 print(data)\n----> 5 y_ = myNetwork(data)\n\n/opt/conda/lib/python3.6/site-packages/torch/nn/modules/module.py in __call__(self, *input, **kwargs)\n    323         for hook in self._forward_pre_hooks.values():\n    324             hook(self, input)\n--> 325         result = self.forward(*input, **kwargs)\n    326         for hook in self._forward_hooks.values():\n    327             hook_result = hook(self, input, result)\n\n<ipython-input-53-5dc90cb17d6e> in forward(self, x)\n      5 \n      6     def forward(self, x):\n----> 7         x = self.fc1(x)\n      8         return x\n      9 \n\n/opt/conda/lib/python3.6/site-packages/torch/nn/modules/module.py in __call__(self, *input, **kwargs)\n    323         for hook in self._forward_pre_hooks.values():\n    324             hook(self, input)\n--> 325         result = self.forward(*input, **kwargs)\n    326         for hook in self._forward_hooks.values():\n    327             hook_result = hook(self, input, result)\n\n/opt/conda/lib/python3.6/site-packages/torch/nn/modules/linear.py in forward(self, input)\n     53 \n     54     def forward(self, input):\n---> 55         return F.linear(input, self.weight, self.bias)\n     56 \n     57     def __repr__(self):\n\n/opt/conda/lib/python3.6/site-packages/torch/nn/functional.py in linear(input, weight, bias)\n    835         return torch.addmm(bias, input, weight.t())\n    836 \n--> 837     output = input.matmul(weight.t())\n    838     if bias is not None:\n    839         output += bias\n\n/opt/conda/lib/python3.6/site-packages/torch/autograd/variable.py in matmul(self, other)\n    384 \n    385     def matmul(self, other):\n--> 386         return torch.matmul(self, other)\n    387 \n    388     def resize(self, *sizes):\n\n/opt/conda/lib/python3.6/site-packages/torch/functional.py in matmul(tensor1, tensor2, out)\n    166     elif dim_tensor1 == 1 and dim_tensor2 == 2:\n    167         if out is None:\n--> 168             return torch.mm(tensor1.unsqueeze(0), tensor2).squeeze_(0)\n    169         else:\n    170             return torch.mm(tensor1.unsqueeze(0), tensor2, out=out).squeeze_(0)\n\nRuntimeError: Expected object of type Variable[torch.LongTensor] but found type Variable[torch.FloatTensor] for argument #1 'mat2'\n\nIt's produced by the code:\nimport torch\nimport torchvision\nclass Network(torch.nn.Module):\n    def __init__(self):\n        super(Network, self).__init__()\n        self.fc1 = torch.nn.Linear(1, 10)\n        \n    def forward(self, x):\n        x = self.fc1(x)\n        return x\n\nmyNetwork = Network()\n\ndata = torch.Tensor([3]).long()\ndata = torch.autograd.Variable(data)\ny_ = myNetwork(data)\n\n\n\nThe error happens because the input to the network is of type 'long' and it should be of type 'float'.\nChanging the type to 'float' fix the problem.\nBut, it seems that the message is saying the opposite:\nRuntimeError: Expected object of type Variable[torch.LongTensor] but found type Variable[torch.FloatTensor] for argument #1 'mat2'\nThe message should be:\nRuntimeError: Expected object of type Variable[torch.FloatTensor] but found type Variable[torch.LongTensor] for argument #1 'mat2'", "body": "- OS: debian (docker container)\r\n- PyTorch version: 0.3.0.post4\r\n- How you installed PyTorch (conda, pip, source): Kaggle Docker Image (https://github.com/Kaggle/docker-python)\r\n- Python version: 3.6.4\r\n- Using CPU\r\n_______\r\nThe error message: \r\n\r\n```\r\n---------------------------------------------------------------------------\r\nRuntimeError                              Traceback (most recent call last)\r\n<ipython-input-56-0e3aecff8c7c> in <module>()\r\n      3 data = torch.autograd.Variable(data)\r\n      4 print(data)\r\n----> 5 y_ = myNetwork(data)\r\n\r\n/opt/conda/lib/python3.6/site-packages/torch/nn/modules/module.py in __call__(self, *input, **kwargs)\r\n    323         for hook in self._forward_pre_hooks.values():\r\n    324             hook(self, input)\r\n--> 325         result = self.forward(*input, **kwargs)\r\n    326         for hook in self._forward_hooks.values():\r\n    327             hook_result = hook(self, input, result)\r\n\r\n<ipython-input-53-5dc90cb17d6e> in forward(self, x)\r\n      5 \r\n      6     def forward(self, x):\r\n----> 7         x = self.fc1(x)\r\n      8         return x\r\n      9 \r\n\r\n/opt/conda/lib/python3.6/site-packages/torch/nn/modules/module.py in __call__(self, *input, **kwargs)\r\n    323         for hook in self._forward_pre_hooks.values():\r\n    324             hook(self, input)\r\n--> 325         result = self.forward(*input, **kwargs)\r\n    326         for hook in self._forward_hooks.values():\r\n    327             hook_result = hook(self, input, result)\r\n\r\n/opt/conda/lib/python3.6/site-packages/torch/nn/modules/linear.py in forward(self, input)\r\n     53 \r\n     54     def forward(self, input):\r\n---> 55         return F.linear(input, self.weight, self.bias)\r\n     56 \r\n     57     def __repr__(self):\r\n\r\n/opt/conda/lib/python3.6/site-packages/torch/nn/functional.py in linear(input, weight, bias)\r\n    835         return torch.addmm(bias, input, weight.t())\r\n    836 \r\n--> 837     output = input.matmul(weight.t())\r\n    838     if bias is not None:\r\n    839         output += bias\r\n\r\n/opt/conda/lib/python3.6/site-packages/torch/autograd/variable.py in matmul(self, other)\r\n    384 \r\n    385     def matmul(self, other):\r\n--> 386         return torch.matmul(self, other)\r\n    387 \r\n    388     def resize(self, *sizes):\r\n\r\n/opt/conda/lib/python3.6/site-packages/torch/functional.py in matmul(tensor1, tensor2, out)\r\n    166     elif dim_tensor1 == 1 and dim_tensor2 == 2:\r\n    167         if out is None:\r\n--> 168             return torch.mm(tensor1.unsqueeze(0), tensor2).squeeze_(0)\r\n    169         else:\r\n    170             return torch.mm(tensor1.unsqueeze(0), tensor2, out=out).squeeze_(0)\r\n\r\nRuntimeError: Expected object of type Variable[torch.LongTensor] but found type Variable[torch.FloatTensor] for argument #1 'mat2'\r\n```\r\n\r\nIt's produced by the code:\r\n\r\n```\r\nimport torch\r\nimport torchvision\r\nclass Network(torch.nn.Module):\r\n    def __init__(self):\r\n        super(Network, self).__init__()\r\n        self.fc1 = torch.nn.Linear(1, 10)\r\n        \r\n    def forward(self, x):\r\n        x = self.fc1(x)\r\n        return x\r\n\r\nmyNetwork = Network()\r\n\r\ndata = torch.Tensor([3]).long()\r\ndata = torch.autograd.Variable(data)\r\ny_ = myNetwork(data)\r\n\r\n\r\n```\r\nThe error happens because the input to the network is of type 'long' and it should be of type 'float'.\r\nChanging the type to 'float' fix the problem.\r\nBut, it seems that the message is saying the opposite:\r\n\r\nRuntimeError: Expected object of type Variable[torch.**LongTensor**] but found type Variable[torch.**FloatTensor**] for argument #1 'mat2'\r\n\r\nThe message should be:\r\n\r\nRuntimeError: Expected object of type Variable[torch.**FloatTensor**] but found type Variable[torch.**LongTensor**] for argument #1 'mat2'\r\n"}