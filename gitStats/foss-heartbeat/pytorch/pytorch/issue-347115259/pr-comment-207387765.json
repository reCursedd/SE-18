{"url": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/207387765", "pull_request_review_id": 142991534, "id": 207387765, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwNzM4Nzc2NQ==", "diff_hunk": "@@ -64,19 +64,25 @@ struct PrintValue : public SugaredValue {\n   }\n };\n \n-static Value* numToTensor(const SourceRange& loc, Value* value) {\n+static Value* typeCast(const SourceRange& loc, Value* value, TypePtr dst) {\n   auto& graph = *value->owningGraph();\n-  auto n = graph.insertNode(graph.createNumToTensor(value))\n-      ->setSourceLocation(std::make_shared<SourceRange>(loc));\n-  return n->output();\n-}\n+  const TypePtr orig = value->type();\n+  Node* n = nullptr;\n+\n+  if(dst->isSubtypeOf(DynamicType::get()) && orig->isSubtypeOf(NumberType::get())) {\n+    n = graph.createNumToTensor(value);\n+  } else if (dst->isSubtypeOf(NumberType::get()) && orig->isSubtypeOf(DynamicType::get())) {\n+    n = graph.createTensorToNum(dst, value);\n+  } else if(dst->isSubtypeOf(IntType::get()) && orig->isSubtypeOf(FloatType::get())) {\n+    n = graph.createFloatToInt(dst, value);\n+  } else if(dst->isSubtypeOf(FloatType::get()) && orig->isSubtypeOf(IntType::get())) {\n+    n = graph.createIntToFloat(dst, value);\n+  } else {\n+    throw ErrorReport(loc) << \"Cannot cast type '\" << orig->str() << \"' to type '\"\n+      << dst->str() << \"', no available type casting.\";", "path": "torch/csrc/jit/script/compiler.cpp", "position": null, "original_position": 24, "commit_id": "46b54e112b64c8fca1aa24a54c542e8cdede7308", "original_commit_id": "8cc10e9f8fc393d69cac23242031df29653fb17b", "user": {"login": "zdevito", "id": 370202, "node_id": "MDQ6VXNlcjM3MDIwMg==", "avatar_url": "https://avatars0.githubusercontent.com/u/370202?v=4", "gravatar_id": "", "url": "https://api.github.com/users/zdevito", "html_url": "https://github.com/zdevito", "followers_url": "https://api.github.com/users/zdevito/followers", "following_url": "https://api.github.com/users/zdevito/following{/other_user}", "gists_url": "https://api.github.com/users/zdevito/gists{/gist_id}", "starred_url": "https://api.github.com/users/zdevito/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/zdevito/subscriptions", "organizations_url": "https://api.github.com/users/zdevito/orgs", "repos_url": "https://api.github.com/users/zdevito/repos", "events_url": "https://api.github.com/users/zdevito/events{/privacy}", "received_events_url": "https://api.github.com/users/zdevito/received_events", "type": "User", "site_admin": false}, "body": "let's drop `, no available type casting.` it adds no extra information.", "created_at": "2018-08-02T21:58:19Z", "updated_at": "2018-11-23T15:48:40Z", "html_url": "https://github.com/pytorch/pytorch/pull/10168#discussion_r207387765", "pull_request_url": "https://api.github.com/repos/pytorch/pytorch/pulls/10168", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/207387765"}, "html": {"href": "https://github.com/pytorch/pytorch/pull/10168#discussion_r207387765"}, "pull_request": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/10168"}}, "body_html": "<p>let's drop <code>, no available type casting.</code> it adds no extra information.</p>", "body_text": "let's drop , no available type casting. it adds no extra information."}