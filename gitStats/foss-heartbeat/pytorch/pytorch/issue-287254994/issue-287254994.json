{"url": "https://api.github.com/repos/pytorch/pytorch/issues/4569", "repository_url": "https://api.github.com/repos/pytorch/pytorch", "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/4569/labels{/name}", "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/4569/comments", "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/4569/events", "html_url": "https://github.com/pytorch/pytorch/pull/4569", "id": 287254994, "node_id": "MDExOlB1bGxSZXF1ZXN0MTYxOTkzNzE2", "number": 4569, "title": "Fix #4422, use grad instead of grads[0] for cudnn_batch_norm derivative.", "user": {"login": "ezyang", "id": 13564, "node_id": "MDQ6VXNlcjEzNTY0", "avatar_url": "https://avatars0.githubusercontent.com/u/13564?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ezyang", "html_url": "https://github.com/ezyang", "followers_url": "https://api.github.com/users/ezyang/followers", "following_url": "https://api.github.com/users/ezyang/following{/other_user}", "gists_url": "https://api.github.com/users/ezyang/gists{/gist_id}", "starred_url": "https://api.github.com/users/ezyang/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ezyang/subscriptions", "organizations_url": "https://api.github.com/users/ezyang/orgs", "repos_url": "https://api.github.com/users/ezyang/repos", "events_url": "https://api.github.com/users/ezyang/events{/privacy}", "received_events_url": "https://api.github.com/users/ezyang/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 797012849, "node_id": "MDU6TGFiZWw3OTcwMTI4NDk=", "url": "https://api.github.com/repos/pytorch/pytorch/labels/in%20progress", "name": "in progress", "color": "ededed", "default": false}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-01-09T22:38:16Z", "updated_at": "2018-11-23T15:38:03Z", "closed_at": "2018-01-16T17:24:56Z", "author_association": "CONTRIBUTOR", "pull_request": {"url": "https://api.github.com/repos/pytorch/pytorch/pulls/4569", "html_url": "https://github.com/pytorch/pytorch/pull/4569", "diff_url": "https://github.com/pytorch/pytorch/pull/4569.diff", "patch_url": "https://github.com/pytorch/pytorch/pull/4569.patch"}, "body_html": "<p>The fix proper is very simple: use 'grad' instead of 'grads[0]' in<br>\ncudnn_batch_norm's backward definition.</p>\n<p>However, the problem was annoyingly subtle and I nearly went off<br>\nand implemented a big pile of infrastructure to \"tell\" the codegen<br>\nhow to distinguish between differentiable and non-differentiable<br>\noutputs before realizing that there must be a way we do this<br>\nlegitimately, because it works for THNN.  I documented this in<br>\nderivatives.yaml, and also added tests for the problem in<br>\nload_derivatives.py to catch the various ways you could \"get it<br>\nwrong\".  Hope this helps someone else.</p>\n<p>Signed-off-by: Edward Z. Yang <a href=\"mailto:ezyang@fb.com\">ezyang@fb.com</a></p>\n<p>CC <a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=1851290\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/elbaro\">@elbaro</a></p>", "body_text": "The fix proper is very simple: use 'grad' instead of 'grads[0]' in\ncudnn_batch_norm's backward definition.\nHowever, the problem was annoyingly subtle and I nearly went off\nand implemented a big pile of infrastructure to \"tell\" the codegen\nhow to distinguish between differentiable and non-differentiable\noutputs before realizing that there must be a way we do this\nlegitimately, because it works for THNN.  I documented this in\nderivatives.yaml, and also added tests for the problem in\nload_derivatives.py to catch the various ways you could \"get it\nwrong\".  Hope this helps someone else.\nSigned-off-by: Edward Z. Yang ezyang@fb.com\nCC @elbaro", "body": "The fix proper is very simple: use 'grad' instead of 'grads[0]' in\r\ncudnn_batch_norm's backward definition.\r\n\r\nHowever, the problem was annoyingly subtle and I nearly went off\r\nand implemented a big pile of infrastructure to \"tell\" the codegen\r\nhow to distinguish between differentiable and non-differentiable\r\noutputs before realizing that there must be a way we do this\r\nlegitimately, because it works for THNN.  I documented this in\r\nderivatives.yaml, and also added tests for the problem in\r\nload_derivatives.py to catch the various ways you could \"get it\r\nwrong\".  Hope this helps someone else.\r\n\r\nSigned-off-by: Edward Z. Yang <ezyang@fb.com>\r\n\r\nCC @elbaro"}