{"url": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/182167569", "pull_request_review_id": 112920479, "id": 182167569, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MjE2NzU2OQ==", "diff_hunk": "@@ -121,6 +121,81 @@ def _export(model, args, f, export_params=True, verbose=False, training=False,\n     if isinstance(args, torch.autograd.Variable):\n         args = (args, )\n \n+    torch_out = None\n+\n+    if isinstance(model, torch.jit.ScriptModule):\n+        proto, export_map = _export_script(model, args, f, export_params, verbose, training,\n+                                           input_names, output_names, aten, export_type)\n+    else:\n+        proto, export_map, torch_out = _export_trace(model, args, f, export_params, verbose, training,\n+                                                     input_names, output_names, aten, export_type)\n+\n+    if export_type == ExportTypes.PROTOBUF_FILE:\n+        assert(len(export_map) == 0)\n+        torch.serialization._with_file_like(f, \"wb\", lambda f: f.write(proto))\n+    elif export_type in [ExportTypes.ZIP_ARCHIVE, ExportTypes.COMPRESSED_ZIP_ARCHIVE]:\n+        import zipfile\n+        compression = zipfile.ZIP_DEFLATED \\\n+            if export_type == ExportTypes.COMPRESSED_ZIP_ARCHIVE \\\n+            else zipfile.ZIP_STORED\n+        with zipfile.ZipFile(f, 'w', compression=compression) as z:\n+            z.writestr(ONNX_ARCHIVE_MODEL_PROTO_NAME, proto)\n+            for k, v in export_map.items():\n+                z.writestr(k, v)\n+    elif export_type == ExportTypes.DIRECTORY:\n+        import os\n+        if os.path.exists(f):\n+            assert(os.path.isdir(f))\n+        else:\n+            os.makedirs(f)\n+\n+        model_proto_file = os.path.join(f, ONNX_ARCHIVE_MODEL_PROTO_NAME)\n+        torch.serialization._with_file_like(\n+            model_proto_file, \"wb\", lambda f: f.write(proto))\n+\n+        for k, v in export_map.items():\n+            weight_proto_file = os.path.join(f, k)\n+            torch.serialization._with_file_like(\n+                weight_proto_file, \"wb\", lambda f: f.write(v))\n+    else:\n+        raise RuntimeError('Unknown export type')\n+\n+    return torch_out\n+\n+\n+def _export_script(model, args, f, export_params=True, verbose=False, training=False,\n+                   input_names=None, output_names=None, aten=False, export_type=ExportTypes.PROTOBUF_FILE):\n+    try:\n+        graph = model.__getattr__('forward').graph()\n+    except AttributeError:\n+        # TODO: just trace it\n+        raise RuntimeError('\\'forward\\' method must be a script method')\n+\n+    # Need to at least associate input shapes with inputs. If we propagate the\n+    # rest of the shapes that's an added benefit\n+    graph.propagate_shapes(args, False)\n+    graph = _optimize_graph(graph, aten)\n+\n+    _set_input_and_output_names(graph, input_names, output_names)\n+\n+    if verbose:\n+        print(graph)", "path": "torch/onnx/utils.py", "position": null, "original_position": 62, "commit_id": "b7a83c278c7b21d96e24e4e19308c2eb942ccab2", "original_commit_id": "efb08ce3f00a09df9d767a072ba8dfe855b91743", "user": {"login": "jamesr66a", "id": 4685384, "node_id": "MDQ6VXNlcjQ2ODUzODQ=", "avatar_url": "https://avatars2.githubusercontent.com/u/4685384?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jamesr66a", "html_url": "https://github.com/jamesr66a", "followers_url": "https://api.github.com/users/jamesr66a/followers", "following_url": "https://api.github.com/users/jamesr66a/following{/other_user}", "gists_url": "https://api.github.com/users/jamesr66a/gists{/gist_id}", "starred_url": "https://api.github.com/users/jamesr66a/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jamesr66a/subscriptions", "organizations_url": "https://api.github.com/users/jamesr66a/orgs", "repos_url": "https://api.github.com/users/jamesr66a/repos", "events_url": "https://api.github.com/users/jamesr66a/events{/privacy}", "received_events_url": "https://api.github.com/users/jamesr66a/received_events", "type": "User", "site_admin": false}, "body": "@ezyang I've removed `trace.export` and re-organized this function a bit", "created_at": "2018-04-17T17:40:30Z", "updated_at": "2018-11-23T15:42:37Z", "html_url": "https://github.com/pytorch/pytorch/pull/6600#discussion_r182167569", "pull_request_url": "https://api.github.com/repos/pytorch/pytorch/pulls/6600", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/182167569"}, "html": {"href": "https://github.com/pytorch/pytorch/pull/6600#discussion_r182167569"}, "pull_request": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/6600"}}, "body_html": "<p><a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=13564\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/ezyang\">@ezyang</a> I've removed <code>trace.export</code> and re-organized this function a bit</p>", "body_text": "@ezyang I've removed trace.export and re-organized this function a bit", "in_reply_to_id": 181570079}