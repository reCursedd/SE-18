{"url": "https://api.github.com/repos/pytorch/pytorch/issues/6600", "repository_url": "https://api.github.com/repos/pytorch/pytorch", "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/6600/labels{/name}", "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/6600/comments", "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/6600/events", "html_url": "https://github.com/pytorch/pytorch/pull/6600", "id": 314281806, "node_id": "MDExOlB1bGxSZXF1ZXN0MTgxNjE5NDEw", "number": 6600, "title": "[JIT][script][ONNX] Initial ScriptModule ONNX export", "user": {"login": "jamesr66a", "id": 4685384, "node_id": "MDQ6VXNlcjQ2ODUzODQ=", "avatar_url": "https://avatars2.githubusercontent.com/u/4685384?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jamesr66a", "html_url": "https://github.com/jamesr66a", "followers_url": "https://api.github.com/users/jamesr66a/followers", "following_url": "https://api.github.com/users/jamesr66a/following{/other_user}", "gists_url": "https://api.github.com/users/jamesr66a/gists{/gist_id}", "starred_url": "https://api.github.com/users/jamesr66a/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jamesr66a/subscriptions", "organizations_url": "https://api.github.com/users/jamesr66a/orgs", "repos_url": "https://api.github.com/users/jamesr66a/repos", "events_url": "https://api.github.com/users/jamesr66a/events{/privacy}", "received_events_url": "https://api.github.com/users/jamesr66a/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2018-04-14T00:09:37Z", "updated_at": "2018-11-23T15:42:46Z", "closed_at": "2018-04-18T17:43:30Z", "author_association": "CONTRIBUTOR", "pull_request": {"url": "https://api.github.com/repos/pytorch/pytorch/pulls/6600", "html_url": "https://github.com/pytorch/pytorch/pull/6600", "diff_url": "https://github.com/pytorch/pytorch/pull/6600.diff", "patch_url": "https://github.com/pytorch/pytorch/pull/6600.patch"}, "body_html": "<p>This PR creates the initial implementation for ONNX export for ScriptModules. It allows you to call the same ONNX export entrypoint on a ScriptModule where the <code>forward</code> method is a script method. The limitations are currently:</p>\n<ol>\n<li>It simply looks for <code>forward</code> on the module. In the case that we're exporting a non-<code>ScriptModule</code>, we trace the <code>__call__</code> function on the module. This is not possible on <code>ScriptModule</code> at this point, so we will likely have to do some more sophisticated lookup</li>\n<li>This does not have a fallback implementation for if the <code>forward</code> method is not a script method. This is going to involve more deep introspection into the tracing machinery, in particular the <code>slow_forward</code> business</li>\n<li>Control flow support is forthcoming</li>\n<li>TODO: we should make <code>onnx-fb-universe</code> tests to actually test this functionality, rather than just these smoke tests</li>\n</ol>", "body_text": "This PR creates the initial implementation for ONNX export for ScriptModules. It allows you to call the same ONNX export entrypoint on a ScriptModule where the forward method is a script method. The limitations are currently:\n\nIt simply looks for forward on the module. In the case that we're exporting a non-ScriptModule, we trace the __call__ function on the module. This is not possible on ScriptModule at this point, so we will likely have to do some more sophisticated lookup\nThis does not have a fallback implementation for if the forward method is not a script method. This is going to involve more deep introspection into the tracing machinery, in particular the slow_forward business\nControl flow support is forthcoming\nTODO: we should make onnx-fb-universe tests to actually test this functionality, rather than just these smoke tests", "body": "This PR creates the initial implementation for ONNX export for ScriptModules. It allows you to call the same ONNX export entrypoint on a ScriptModule where the `forward` method is a script method. The limitations are currently:\r\n\r\n1) It simply looks for `forward` on the module. In the case that we're exporting a non-`ScriptModule`, we trace the `__call__` function on the module. This is not possible on `ScriptModule` at this point, so we will likely have to do some more sophisticated lookup\r\n2) This does not have a fallback implementation for if the `forward` method is not a script method. This is going to involve more deep introspection into the tracing machinery, in particular the `slow_forward` business\r\n3) Control flow support is forthcoming\r\n4) TODO: we should make `onnx-fb-universe` tests to actually test this functionality, rather than just these smoke tests"}