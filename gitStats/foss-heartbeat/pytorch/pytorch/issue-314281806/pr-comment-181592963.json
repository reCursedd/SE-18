{"url": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/181592963", "pull_request_review_id": 112247407, "id": 181592963, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MTU5Mjk2Mw==", "diff_hunk": "@@ -21,6 +25,27 @@ void initPythonIRBindings(PyObject * module_) {\n       ss << g;\n       return ss.str();\n     })\n+    .def(\"propagate_shapes\", [](Graph& g, std::vector<at::Tensor> inputs, bool with_grad) {\n+      PropagateInputShapes(g, ArgumentSpec(with_grad, variable_tensor_list(std::move(inputs))));\n+    })\n+    .def(\"export\", [](const std::shared_ptr<Graph> g, const std::vector<at::Tensor>& initializers,\n+                      int64_t onnx_opset_version, bool defer_weight_export=false) {\n+      std::string graph;\n+      RawDataExportMap export_map;\n+      std::tie(graph, export_map) = ExportGraph(\n+        g, initializers, onnx_opset_version, defer_weight_export);\n+        std::unordered_map<std::string, py::bytes> python_serialized_export_map;\n+        for (auto& kv : export_map) {\n+          auto t = kv.second;\n+          size_t copy_bytes = t.type().elementSizeInBytes() * t.numel();\n+          // TODO: this is an unecessary copy. In theory we can directly return\n+          // the map from identifier to Tensor, but we need some API in Python\n+          // to get raw `bytes` containing the raw tensor data.\n+          python_serialized_export_map[kv.first] = py::bytes(static_cast<const char*>(t.data_ptr()), copy_bytes);\n+        }\n+        return std::make_tuple(\n+            py::bytes(graph), python_serialized_export_map);", "path": "torch/csrc/jit/python_ir.cpp", "position": null, "original_position": 34, "commit_id": "b7a83c278c7b21d96e24e4e19308c2eb942ccab2", "original_commit_id": "efb08ce3f00a09df9d767a072ba8dfe855b91743", "user": {"login": "apaszke", "id": 4583066, "node_id": "MDQ6VXNlcjQ1ODMwNjY=", "avatar_url": "https://avatars3.githubusercontent.com/u/4583066?v=4", "gravatar_id": "", "url": "https://api.github.com/users/apaszke", "html_url": "https://github.com/apaszke", "followers_url": "https://api.github.com/users/apaszke/followers", "following_url": "https://api.github.com/users/apaszke/following{/other_user}", "gists_url": "https://api.github.com/users/apaszke/gists{/gist_id}", "starred_url": "https://api.github.com/users/apaszke/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/apaszke/subscriptions", "organizations_url": "https://api.github.com/users/apaszke/orgs", "repos_url": "https://api.github.com/users/apaszke/repos", "events_url": "https://api.github.com/users/apaszke/events{/privacy}", "received_events_url": "https://api.github.com/users/apaszke/received_events", "type": "User", "site_admin": false}, "body": "Why is this indented?", "created_at": "2018-04-15T18:52:49Z", "updated_at": "2018-11-23T15:42:28Z", "html_url": "https://github.com/pytorch/pytorch/pull/6600#discussion_r181592963", "pull_request_url": "https://api.github.com/repos/pytorch/pytorch/pulls/6600", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/181592963"}, "html": {"href": "https://github.com/pytorch/pytorch/pull/6600#discussion_r181592963"}, "pull_request": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/6600"}}, "body_html": "<p>Why is this indented?</p>", "body_text": "Why is this indented?"}