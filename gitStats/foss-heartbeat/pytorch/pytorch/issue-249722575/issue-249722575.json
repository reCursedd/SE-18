{"url": "https://api.github.com/repos/pytorch/pytorch/issues/2389", "repository_url": "https://api.github.com/repos/pytorch/pytorch", "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/2389/labels{/name}", "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/2389/comments", "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/2389/events", "html_url": "https://github.com/pytorch/pytorch/issues/2389", "id": 249722575, "node_id": "MDU6SXNzdWUyNDk3MjI1NzU=", "number": 2389, "title": "sparse ops with autograd", "user": {"login": "killeent", "id": 4529377, "node_id": "MDQ6VXNlcjQ1MjkzNzc=", "avatar_url": "https://avatars1.githubusercontent.com/u/4529377?v=4", "gravatar_id": "", "url": "https://api.github.com/users/killeent", "html_url": "https://github.com/killeent", "followers_url": "https://api.github.com/users/killeent/followers", "following_url": "https://api.github.com/users/killeent/following{/other_user}", "gists_url": "https://api.github.com/users/killeent/gists{/gist_id}", "starred_url": "https://api.github.com/users/killeent/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/killeent/subscriptions", "organizations_url": "https://api.github.com/users/killeent/orgs", "repos_url": "https://api.github.com/users/killeent/repos", "events_url": "https://api.github.com/users/killeent/events{/privacy}", "received_events_url": "https://api.github.com/users/killeent/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 424131849, "node_id": "MDU6TGFiZWw0MjQxMzE4NDk=", "url": "https://api.github.com/repos/pytorch/pytorch/labels/enhancement", "name": "enhancement", "color": "84b6eb", "default": true}, {"id": 443484050, "node_id": "MDU6TGFiZWw0NDM0ODQwNTA=", "url": "https://api.github.com/repos/pytorch/pytorch/labels/medium%20priority", "name": "medium priority", "color": "fbca04", "default": false}, {"id": 679954154, "node_id": "MDU6TGFiZWw2Nzk5NTQxNTQ=", "url": "https://api.github.com/repos/pytorch/pytorch/labels/sparse", "name": "sparse", "color": "bfd4f2", "default": false}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 22, "created_at": "2017-08-11T19:10:00Z", "updated_at": "2018-09-12T21:04:05Z", "closed_at": null, "author_association": "CONTRIBUTOR", "body_html": "<pre><code>x = torch.sparse.FloatTensor(5, 5)\ny = torch.FloatTensor(5, 5)\n\ntorch.mm(x, y) # works\n\nxx = torch.autograd.Variable(x)\nxy = torch.autograd.Variable(y)\n\ntorch.mm(x, y) # fails\n</code></pre>\n<p>Error Message:</p>\n<pre><code>Traceback (most recent call last):\n  File \"sparse_dense_mm.py\", line 22, in &lt;module&gt;\n    AX = torch.mm(A, X) # This doesn't work\n  File \"/home/killeent/github/pytorch/torch/autograd/variable.py\", line 580, in mm\n    return Addmm.apply(output, self, matrix, 0, 1, True)\n  File \"/home/killeent/github/pytorch/torch/autograd/_functions/blas.py\", line 26, in forward\n    matrix1, matrix2, out=output)\nTypeError: Type torch.sparse.FloatTensor doesn't implement stateless method addmm\n</code></pre>\n<p>I'm not sure what the correct semantics are for dense/sparse, so I may be wrong about this being something we should support. If so, feel free to close :)</p>", "body_text": "x = torch.sparse.FloatTensor(5, 5)\ny = torch.FloatTensor(5, 5)\n\ntorch.mm(x, y) # works\n\nxx = torch.autograd.Variable(x)\nxy = torch.autograd.Variable(y)\n\ntorch.mm(x, y) # fails\n\nError Message:\nTraceback (most recent call last):\n  File \"sparse_dense_mm.py\", line 22, in <module>\n    AX = torch.mm(A, X) # This doesn't work\n  File \"/home/killeent/github/pytorch/torch/autograd/variable.py\", line 580, in mm\n    return Addmm.apply(output, self, matrix, 0, 1, True)\n  File \"/home/killeent/github/pytorch/torch/autograd/_functions/blas.py\", line 26, in forward\n    matrix1, matrix2, out=output)\nTypeError: Type torch.sparse.FloatTensor doesn't implement stateless method addmm\n\nI'm not sure what the correct semantics are for dense/sparse, so I may be wrong about this being something we should support. If so, feel free to close :)", "body": "```\r\nx = torch.sparse.FloatTensor(5, 5)\r\ny = torch.FloatTensor(5, 5)\r\n\r\ntorch.mm(x, y) # works\r\n\r\nxx = torch.autograd.Variable(x)\r\nxy = torch.autograd.Variable(y)\r\n\r\ntorch.mm(x, y) # fails\r\n```\r\n\r\nError Message:\r\n\r\n```\r\nTraceback (most recent call last):\r\n  File \"sparse_dense_mm.py\", line 22, in <module>\r\n    AX = torch.mm(A, X) # This doesn't work\r\n  File \"/home/killeent/github/pytorch/torch/autograd/variable.py\", line 580, in mm\r\n    return Addmm.apply(output, self, matrix, 0, 1, True)\r\n  File \"/home/killeent/github/pytorch/torch/autograd/_functions/blas.py\", line 26, in forward\r\n    matrix1, matrix2, out=output)\r\nTypeError: Type torch.sparse.FloatTensor doesn't implement stateless method addmm\r\n```\r\n\r\nI'm not sure what the correct semantics are for dense/sparse, so I may be wrong about this being something we should support. If so, feel free to close :)"}