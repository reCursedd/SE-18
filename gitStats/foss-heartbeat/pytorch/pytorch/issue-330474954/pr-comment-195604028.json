{"url": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/195604028", "pull_request_review_id": 129008244, "id": 195604028, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5NTYwNDAyOA==", "diff_hunk": "@@ -0,0 +1,145 @@\n+#ifndef CAFFE2_OPERATORS_REDUCE_OPS_H_\n+#define CAFFE2_OPERATORS_REDUCE_OPS_H_\n+\n+#include <algorithm>\n+#include <functional>\n+#include <vector>\n+\n+#include \"caffe2/core/context.h\"\n+#include \"caffe2/core/operator.h\"\n+#include \"caffe2/core/types.h\"\n+#include \"caffe2/utils/math.h\"\n+\n+namespace caffe2 {\n+\n+template <class Context>\n+struct Expander {\n+  template <typename T>\n+  bool Forward(\n+      const std::vector<int>& X_dims,\n+      const std::vector<int>& Y_dims,\n+      const T* X_data,\n+      T* Y_data,\n+      Context* context) const {\n+    math::Broadcast(\n+        X_dims.size(),\n+        X_dims.data(),\n+        Y_dims.size(),\n+        Y_dims.data(),\n+        X_data,\n+        Y_data,\n+        context);\n+    return true;\n+  }\n+\n+  template <typename T>\n+  bool Backward(\n+      const std::vector<int>& dims,\n+      const std::vector<int>& axes,\n+      const T* dY_data,\n+      T* dX_data,\n+      Context* context) const {\n+    math::ReduceSum<T, Context>(\n+        dims.size(),\n+        dims.data(),\n+        axes.size(),\n+        axes.data(),\n+        dY_data,\n+        dX_data,\n+        context);\n+    return true;\n+  }\n+};\n+\n+template <typename InputTypes, class Context>\n+class ExpandOp final : public Operator<Context> {\n+ public:\n+  USE_OPERATOR_CONTEXT_FUNCTIONS;\n+\n+  ExpandOp(const OperatorDef& operator_def, Workspace* ws)\n+      : Operator<Context>(operator_def, ws) {}\n+\n+  bool RunOnDevice() override {\n+    return DispatchHelper<InputTypes>::call(this, Input(0));\n+  }\n+ template <typename T>\n+  bool DoRunWithType() {\n+    const auto& X = Input(0);\n+    const auto& Y_shape_tensor = Input(1);\n+    std::vector<int64_t> shape_dims(Y_shape_tensor.size());\n+    context_.template Copy<int64_t, Context, CPUContext>(\n+        Y_shape_tensor.size(),\n+        Y_shape_tensor.template data<int64_t>(),\n+        shape_dims.data());\n+    auto* Y = Output(0);\n+\n+\tconst int ndim = shape_dims.size();\n+    const std::vector<int> X_dims(X.dims().cbegin(), X.dims().cend());\n+    std::vector<int> Y_dims;\n+    Y_dims.reserve(std::max(ndim, X.ndim()));\n+    // ndim, X.ndim() might equal to 0\n+    for (int i = ndim - 1, j = X.ndim() - 1; i >= 0 || j >= 0; i--, j--) {\n+      const int shape_x = (j >= 0 ? X_dims[j] : 1);\n+      const int shape_y = (i >= 0 ? shape_dims[i] : 1);\n+      CAFFE_ENFORCE(\n+          shape_x == 1 || shape_y == 1 || shape_x == shape_y,\n+          \"Dimensions format invalid.\");\n+      Y_dims.push_back(std::max(shape_x, shape_y));\n+    }\n+    std::reverse(Y_dims.begin(), Y_dims.end());\n+    Y->Resize(Y_dims);\n+    return expander_.template Forward<T>(\n+        X_dims,\n+        Y_dims,\n+        X.template data<T>(),\n+        Y->template mutable_data<T>(),\n+        &context_);\n+  }\n+\n+ private:\n+  Expander<Context> expander_{};", "path": "caffe2/operators/expand_op.h", "position": null, "original_position": 100, "commit_id": "da691c3616829781c2d7d017cdfb1f468f5c55b9", "original_commit_id": "cb0d21a3cd838690ee2db6faaa0dff004931a3a3", "user": {"login": "zrphercule", "id": 22670479, "node_id": "MDQ6VXNlcjIyNjcwNDc5", "avatar_url": "https://avatars2.githubusercontent.com/u/22670479?v=4", "gravatar_id": "", "url": "https://api.github.com/users/zrphercule", "html_url": "https://github.com/zrphercule", "followers_url": "https://api.github.com/users/zrphercule/followers", "following_url": "https://api.github.com/users/zrphercule/following{/other_user}", "gists_url": "https://api.github.com/users/zrphercule/gists{/gist_id}", "starred_url": "https://api.github.com/users/zrphercule/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/zrphercule/subscriptions", "organizations_url": "https://api.github.com/users/zrphercule/orgs", "repos_url": "https://api.github.com/users/zrphercule/repos", "events_url": "https://api.github.com/users/zrphercule/events{/privacy}", "received_events_url": "https://api.github.com/users/zrphercule/received_events", "type": "User", "site_admin": false}, "body": "OK Boss!", "created_at": "2018-06-14T23:55:01Z", "updated_at": "2018-11-23T15:45:36Z", "html_url": "https://github.com/pytorch/pytorch/pull/8263#discussion_r195604028", "pull_request_url": "https://api.github.com/repos/pytorch/pytorch/pulls/8263", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/195604028"}, "html": {"href": "https://github.com/pytorch/pytorch/pull/8263#discussion_r195604028"}, "pull_request": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/8263"}}, "body_html": "<p>OK Boss!</p>", "body_text": "OK Boss!", "in_reply_to_id": 195601750}