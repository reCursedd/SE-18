{"url": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/195277488", "pull_request_review_id": 128612733, "id": 195277488, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5NTI3NzQ4OA==", "diff_hunk": "@@ -0,0 +1,49 @@\n+from __future__ import absolute_import\n+from __future__ import division\n+from __future__ import print_function\n+from __future__ import unicode_literals\n+\n+from caffe2.python import core, workspace\n+from hypothesis import given\n+\n+import caffe2.python.hypothesis_test_util as hu\n+import hypothesis.strategies as st\n+import numpy as np\n+import itertools as it\n+\n+class TestExpandOp(hu.HypothesisTestCase):\n+    def run_expand_op_test(\n+        self, op_name, X, gc, dc):\n+        shape_length = np.random.randint(5)\n+        shape_list = []\n+        j = shape_length-1\n+        i = X.ndim-1\n+        while i >= 0 or j >= 0:\n+            k = np.random.randint(5) + 1\n+            if i >= 0 and X.shape[i] != 1:\n+                if np.random.randint(2) == 0:\n+                    k = 1\n+                else:\n+                    k = X.shape[i]\n+            shape_list.insert(0, k)\n+            i -= 1\n+            j -= 1\n+        shape = np.array(shape_list, dtype=np.int32)\n+\n+        op = core.CreateOperator(\n+            op_name,\n+            [\"X\", \"shape\"],\n+            [\"Y\"],\n+        )\n+        def ref(X, shape):\n+            return (np.array(X) * np.ones(shape),)", "path": "caffe2/python/operator_test/expand_op_test.py", "position": null, "original_position": 39, "commit_id": "da691c3616829781c2d7d017cdfb1f468f5c55b9", "original_commit_id": "f7e3c112b9c77889378f26b1812505c7e262f9a1", "user": {"login": "zrphercule", "id": 22670479, "node_id": "MDQ6VXNlcjIyNjcwNDc5", "avatar_url": "https://avatars2.githubusercontent.com/u/22670479?v=4", "gravatar_id": "", "url": "https://api.github.com/users/zrphercule", "html_url": "https://github.com/zrphercule", "followers_url": "https://api.github.com/users/zrphercule/followers", "following_url": "https://api.github.com/users/zrphercule/following{/other_user}", "gists_url": "https://api.github.com/users/zrphercule/gists{/gist_id}", "starred_url": "https://api.github.com/users/zrphercule/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/zrphercule/subscriptions", "organizations_url": "https://api.github.com/users/zrphercule/orgs", "repos_url": "https://api.github.com/users/zrphercule/repos", "events_url": "https://api.github.com/users/zrphercule/events{/privacy}", "received_events_url": "https://api.github.com/users/zrphercule/received_events", "type": "User", "site_admin": false}, "body": "I think np.broadcast_to is equals to this function?", "created_at": "2018-06-14T00:56:10Z", "updated_at": "2018-11-23T15:45:30Z", "html_url": "https://github.com/pytorch/pytorch/pull/8263#discussion_r195277488", "pull_request_url": "https://api.github.com/repos/pytorch/pytorch/pulls/8263", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/195277488"}, "html": {"href": "https://github.com/pytorch/pytorch/pull/8263#discussion_r195277488"}, "pull_request": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/8263"}}, "body_html": "<p>I think np.broadcast_to is equals to this function?</p>", "body_text": "I think np.broadcast_to is equals to this function?", "in_reply_to_id": 195273108}