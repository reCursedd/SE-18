{"url": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/195611516", "pull_request_review_id": 129016761, "id": 195611516, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5NTYxMTUxNg==", "diff_hunk": "@@ -0,0 +1,49 @@\n+from __future__ import absolute_import\n+from __future__ import division\n+from __future__ import print_function\n+from __future__ import unicode_literals\n+\n+from caffe2.python import core, workspace\n+from hypothesis import given\n+\n+import caffe2.python.hypothesis_test_util as hu\n+import hypothesis.strategies as st\n+import numpy as np\n+import itertools as it\n+\n+class TestExpandOp(hu.HypothesisTestCase):\n+    def run_expand_op_test(\n+        self, op_name, X, gc, dc):\n+        shape_length = np.random.randint(5)\n+        shape_list = []\n+        j = shape_length-1\n+        i = X.ndim-1\n+        while i >= 0 or j >= 0:\n+            k = np.random.randint(5) + 1\n+            if i >= 0 and X.shape[i] != 1:\n+                if np.random.randint(2) == 0:\n+                    k = 1\n+                else:\n+                    k = X.shape[i]\n+            shape_list.insert(0, k)\n+            i -= 1\n+            j -= 1\n+        shape = np.array(shape_list, dtype=np.int32)\n+\n+        op = core.CreateOperator(\n+            op_name,\n+            [\"X\", \"shape\"],\n+            [\"Y\"],\n+        )\n+        def ref(X, shape):\n+            return (np.array(X) * np.ones(shape),)", "path": "caffe2/python/operator_test/expand_op_test.py", "position": null, "original_position": 39, "commit_id": "da691c3616829781c2d7d017cdfb1f468f5c55b9", "original_commit_id": "f7e3c112b9c77889378f26b1812505c7e262f9a1", "user": {"login": "zrphercule", "id": 22670479, "node_id": "MDQ6VXNlcjIyNjcwNDc5", "avatar_url": "https://avatars2.githubusercontent.com/u/22670479?v=4", "gravatar_id": "", "url": "https://api.github.com/users/zrphercule", "html_url": "https://github.com/zrphercule", "followers_url": "https://api.github.com/users/zrphercule/followers", "following_url": "https://api.github.com/users/zrphercule/following{/other_user}", "gists_url": "https://api.github.com/users/zrphercule/gists{/gist_id}", "starred_url": "https://api.github.com/users/zrphercule/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/zrphercule/subscriptions", "organizations_url": "https://api.github.com/users/zrphercule/orgs", "repos_url": "https://api.github.com/users/zrphercule/repos", "events_url": "https://api.github.com/users/zrphercule/events{/privacy}", "received_events_url": "https://api.github.com/users/zrphercule/received_events", "type": "User", "site_admin": false}, "body": "@BIT-silence in fact we cannot use np.broadcast_to here, since our function is a little bit different from np.broadcast_to.\r\n\r\nfor example:\r\n\r\nwe have an array X, X.shape = [3,1]\r\nlet Y = caffe2.Expand(X, (3,1,3))\r\nthen Y.shape = [3,3,3], and that's what we want.\r\n\r\nhowever, if we\r\nlet Y = np.broadcast_to(X, (3,1,3)),\r\nthen np will raise a value error notify you that the second dimension of new_shape is smaller than X.shape, and it is illegal.\r\n", "created_at": "2018-06-15T00:57:08Z", "updated_at": "2018-11-23T15:45:36Z", "html_url": "https://github.com/pytorch/pytorch/pull/8263#discussion_r195611516", "pull_request_url": "https://api.github.com/repos/pytorch/pytorch/pulls/8263", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/195611516"}, "html": {"href": "https://github.com/pytorch/pytorch/pull/8263#discussion_r195611516"}, "pull_request": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/8263"}}, "body_html": "<p><a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=3357667\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/BIT-silence\">@BIT-silence</a> in fact we cannot use np.broadcast_to here, since our function is a little bit different from np.broadcast_to.</p>\n<p>for example:</p>\n<p>we have an array X, X.shape = [3,1]<br>\nlet Y = caffe2.Expand(X, (3,1,3))<br>\nthen Y.shape = [3,3,3], and that's what we want.</p>\n<p>however, if we<br>\nlet Y = np.broadcast_to(X, (3,1,3)),<br>\nthen np will raise a value error notify you that the second dimension of new_shape is smaller than X.shape, and it is illegal.</p>", "body_text": "@BIT-silence in fact we cannot use np.broadcast_to here, since our function is a little bit different from np.broadcast_to.\nfor example:\nwe have an array X, X.shape = [3,1]\nlet Y = caffe2.Expand(X, (3,1,3))\nthen Y.shape = [3,3,3], and that's what we want.\nhowever, if we\nlet Y = np.broadcast_to(X, (3,1,3)),\nthen np will raise a value error notify you that the second dimension of new_shape is smaller than X.shape, and it is illegal.", "in_reply_to_id": 195273108}