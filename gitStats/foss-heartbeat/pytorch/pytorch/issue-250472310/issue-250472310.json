{"url": "https://api.github.com/repos/pytorch/pytorch/issues/2435", "repository_url": "https://api.github.com/repos/pytorch/pytorch", "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/2435/labels{/name}", "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/2435/comments", "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/2435/events", "html_url": "https://github.com/pytorch/pytorch/issues/2435", "id": 250472310, "node_id": "MDU6SXNzdWUyNTA0NzIzMTA=", "number": 2435, "title": "RuntimeError: BatchNormalization_updateOutput is not implemented for type CUDAHalfType", "user": {"login": "csarofeen", "id": 22205833, "node_id": "MDQ6VXNlcjIyMjA1ODMz", "avatar_url": "https://avatars2.githubusercontent.com/u/22205833?v=4", "gravatar_id": "", "url": "https://api.github.com/users/csarofeen", "html_url": "https://github.com/csarofeen", "followers_url": "https://api.github.com/users/csarofeen/followers", "following_url": "https://api.github.com/users/csarofeen/following{/other_user}", "gists_url": "https://api.github.com/users/csarofeen/gists{/gist_id}", "starred_url": "https://api.github.com/users/csarofeen/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/csarofeen/subscriptions", "organizations_url": "https://api.github.com/users/csarofeen/orgs", "repos_url": "https://api.github.com/users/csarofeen/repos", "events_url": "https://api.github.com/users/csarofeen/events{/privacy}", "received_events_url": "https://api.github.com/users/csarofeen/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-08-16T00:06:24Z", "updated_at": "2017-10-18T12:27:18Z", "closed_at": "2017-10-18T12:27:18Z", "author_association": "CONTRIBUTOR", "body_html": "<p>Batch Norm is broken for CUDAHalfType</p>\n<p>Repro:</p>\n<div class=\"highlight highlight-source-python\"><pre><span class=\"pl-k\">import</span> torch.nn\n<span class=\"pl-k\">from</span> torch.autograd <span class=\"pl-k\">import</span> Variable\n<span class=\"pl-k\">import</span> torch.nn <span class=\"pl-k\">as</span> nn\n<span class=\"pl-k\">import</span> torch.nn.functional <span class=\"pl-k\">as</span> F\n\n\n<span class=\"pl-k\">class</span> <span class=\"pl-en\">Net</span>(<span class=\"pl-e\">nn</span>.<span class=\"pl-e\">Module</span>):\n    <span class=\"pl-k\">def</span> <span class=\"pl-c1\">__init__</span>(<span class=\"pl-smi\"><span class=\"pl-smi\">self</span></span>):\n        <span class=\"pl-c1\">super</span>(Net, <span class=\"pl-c1\">self</span>).<span class=\"pl-c1\">__init__</span>()\n        <span class=\"pl-c1\">self</span>.conv1 <span class=\"pl-k\">=</span> nn.Conv2d(<span class=\"pl-c1\">3</span>, <span class=\"pl-c1\">6</span>, <span class=\"pl-c1\">5</span>)\n        <span class=\"pl-c1\">self</span>.pool <span class=\"pl-k\">=</span> nn.MaxPool2d(<span class=\"pl-c1\">2</span>, <span class=\"pl-c1\">2</span>)\n        <span class=\"pl-c1\">self</span>.bn <span class=\"pl-k\">=</span> nn.BatchNorm2d(<span class=\"pl-c1\">6</span>)\n\n    <span class=\"pl-k\">def</span> <span class=\"pl-en\">forward</span>(<span class=\"pl-smi\"><span class=\"pl-smi\">self</span></span>, <span class=\"pl-smi\">x</span>):\n        x <span class=\"pl-k\">=</span> <span class=\"pl-c1\">self</span>.pool(F.relu(<span class=\"pl-c1\">self</span>.bn(<span class=\"pl-c1\">self</span>.conv1(x))))\n        <span class=\"pl-k\">return</span> x\n\n\nnet <span class=\"pl-k\">=</span> Net()\n\nnet <span class=\"pl-k\">=</span> net.cuda().half().train()\n\nnet.forward(Variable(torch.randn(<span class=\"pl-c1\">1</span>,<span class=\"pl-c1\">3</span>,<span class=\"pl-c1\">32</span>,<span class=\"pl-c1\">32</span>).cuda().half()))</pre></div>\n<p>Possibly broken from <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load issue title\" data-id=\"244518643\" data-permission-text=\"Issue title is private\" data-url=\"https://github.com/pytorch/pytorch/issues/2170\" data-hovercard-type=\"pull_request\" data-hovercard-url=\"/pytorch/pytorch/pull/2170/hovercard\" href=\"https://github.com/pytorch/pytorch/pull/2170\">#2170</a><br>\n<a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=4529377\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/killeent\">@killeent</a></p>", "body_text": "Batch Norm is broken for CUDAHalfType\nRepro:\nimport torch.nn\nfrom torch.autograd import Variable\nimport torch.nn as nn\nimport torch.nn.functional as F\n\n\nclass Net(nn.Module):\n    def __init__(self):\n        super(Net, self).__init__()\n        self.conv1 = nn.Conv2d(3, 6, 5)\n        self.pool = nn.MaxPool2d(2, 2)\n        self.bn = nn.BatchNorm2d(6)\n\n    def forward(self, x):\n        x = self.pool(F.relu(self.bn(self.conv1(x))))\n        return x\n\n\nnet = Net()\n\nnet = net.cuda().half().train()\n\nnet.forward(Variable(torch.randn(1,3,32,32).cuda().half()))\nPossibly broken from #2170\n@killeent", "body": "Batch Norm is broken for CUDAHalfType\r\n\r\nRepro:\r\n```.py\r\nimport torch.nn\r\nfrom torch.autograd import Variable\r\nimport torch.nn as nn\r\nimport torch.nn.functional as F\r\n\r\n\r\nclass Net(nn.Module):\r\n    def __init__(self):\r\n        super(Net, self).__init__()\r\n        self.conv1 = nn.Conv2d(3, 6, 5)\r\n        self.pool = nn.MaxPool2d(2, 2)\r\n        self.bn = nn.BatchNorm2d(6)\r\n\r\n    def forward(self, x):\r\n        x = self.pool(F.relu(self.bn(self.conv1(x))))\r\n        return x\r\n\r\n\r\nnet = Net()\r\n\r\nnet = net.cuda().half().train()\r\n\r\nnet.forward(Variable(torch.randn(1,3,32,32).cuda().half()))\r\n```\r\nPossibly broken from https://github.com/pytorch/pytorch/pull/2170\r\n@killeent "}