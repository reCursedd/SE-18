{"url": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/171733914", "pull_request_review_id": 100640887, "id": 171733914, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE3MTczMzkxNA==", "diff_hunk": "@@ -35,20 +35,13 @@ def __setstate__(self, state):\n         self.inner = None\n \n \n-def init_dropout_descriptor(handle, dropout, train, dropout_seed, dropout_state):\n+def init_dropout_state(ty, dropout, train, dropout_seed, dropout_state):\n     dropout_desc_name = 'desc_' + str(torch.cuda.current_device())\n     dropout_p = dropout if train else 0\n     if (dropout_desc_name not in dropout_state) or (dropout_state[dropout_desc_name].get() is None):\n         dropout_state[dropout_desc_name] = Unserializable(\n-            cudnn.DropoutDescriptor(handle, dropout_p, dropout_seed)\n+            torch._C._VariableFunctions._cudnn_init_dropout_state(ty, dropout_p, train, dropout_seed)\n+            if dropout_p != 0 else None\n         )\n-    dropout_desc = dropout_state[dropout_desc_name].get()\n-    dropout_desc.set_dropout(dropout_p, dropout_seed)\n-    return dropout_desc\n-\n-\n-def get_dropout_state(fn, handle):", "path": "torch/backends/cudnn/rnn.py", "position": 38, "original_position": 38, "commit_id": "1678144c5fba7ac70d5b2beab873c0157b9e9b9f", "original_commit_id": "1678144c5fba7ac70d5b2beab873c0157b9e9b9f", "user": {"login": "gchanan", "id": 3768583, "node_id": "MDQ6VXNlcjM3Njg1ODM=", "avatar_url": "https://avatars2.githubusercontent.com/u/3768583?v=4", "gravatar_id": "", "url": "https://api.github.com/users/gchanan", "html_url": "https://github.com/gchanan", "followers_url": "https://api.github.com/users/gchanan/followers", "following_url": "https://api.github.com/users/gchanan/following{/other_user}", "gists_url": "https://api.github.com/users/gchanan/gists{/gist_id}", "starred_url": "https://api.github.com/users/gchanan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/gchanan/subscriptions", "organizations_url": "https://api.github.com/users/gchanan/orgs", "repos_url": "https://api.github.com/users/gchanan/repos", "events_url": "https://api.github.com/users/gchanan/events{/privacy}", "received_events_url": "https://api.github.com/users/gchanan/received_events", "type": "User", "site_admin": false}, "body": "we don't need this for backwards compatibility too?", "created_at": "2018-03-02T00:12:22Z", "updated_at": "2018-11-23T15:40:14Z", "html_url": "https://github.com/pytorch/pytorch/pull/5383#discussion_r171733914", "pull_request_url": "https://api.github.com/repos/pytorch/pytorch/pulls/5383", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/171733914"}, "html": {"href": "https://github.com/pytorch/pytorch/pull/5383#discussion_r171733914"}, "pull_request": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/5383"}}, "body_html": "<p>we don't need this for backwards compatibility too?</p>", "body_text": "we don't need this for backwards compatibility too?"}