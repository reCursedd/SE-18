{"url": "https://api.github.com/repos/pytorch/pytorch/issues/10682", "repository_url": "https://api.github.com/repos/pytorch/pytorch", "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/10682/labels{/name}", "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/10682/comments", "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/10682/events", "html_url": "https://github.com/pytorch/pytorch/issues/10682", "id": 352143235, "node_id": "MDU6SXNzdWUzNTIxNDMyMzU=", "number": 10682, "title": "Numerical mismatch in torch.sum(dim=1) on CPU between 0.3.1 and 0.4.1", "user": {"login": "volcacius", "id": 1934033, "node_id": "MDQ6VXNlcjE5MzQwMzM=", "avatar_url": "https://avatars0.githubusercontent.com/u/1934033?v=4", "gravatar_id": "", "url": "https://api.github.com/users/volcacius", "html_url": "https://github.com/volcacius", "followers_url": "https://api.github.com/users/volcacius/followers", "following_url": "https://api.github.com/users/volcacius/following{/other_user}", "gists_url": "https://api.github.com/users/volcacius/gists{/gist_id}", "starred_url": "https://api.github.com/users/volcacius/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/volcacius/subscriptions", "organizations_url": "https://api.github.com/users/volcacius/orgs", "repos_url": "https://api.github.com/users/volcacius/repos", "events_url": "https://api.github.com/users/volcacius/events{/privacy}", "received_events_url": "https://api.github.com/users/volcacius/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-08-20T13:47:39Z", "updated_at": "2018-08-20T17:32:06Z", "closed_at": "2018-08-20T17:32:06Z", "author_association": "NONE", "body_html": "<h2>Issue description</h2>\n<p>Torch.sum(x, dim=1) with x a 2d tensor gives a different result on pytorch 0.4.0/1 compared to pytorch 0.3.1. I couldn't find any documentation/issue on this change of behavior, so I'm opening this issue to track it. Any feedback or links to related issues that I may have missed would help.<br>\nIt's a small difference, but it appears to be the reason why I loose 0.02 top-1 accuracy on a CIFAR10 model simply by upgrading pytorch.</p>\n<h2>Code example</h2>\n<h4>Pytorch 0.3.1:</h4>\n<p>In [1]: import torch</p>\n<p>In [2]: torch.manual_seed(1)<br>\nOut[2]: &lt;torch._C.Generator at 0x7f75ed7fde30&gt;</p>\n<p>In [3]: torch.set_printoptions(precision=12)</p>\n<p>In [4]: r = torch.rand(18,18)</p>\n<p>In [5]: s = torch.sum(r, dim=1)</p>\n<p>In [6]: print(s[0])<br>\n9.30374813079834</p>\n<h4>Pytorch 0.4.1:</h4>\n<p>In [1]: import torch</p>\n<p>In [2]: torch.manual_seed(1)<br>\nOut[2]: &lt;torch._C.Generator at 0x7fb075b08b50&gt;</p>\n<p>In [3]: torch.set_printoptions(precision=12)</p>\n<p>In [4]: r = torch.rand(18,18)</p>\n<p>In [5]: s = torch.sum(r, dim=1)</p>\n<p>In [6]: print(s[0])<br>\ntensor(9.303749084473)</p>\n<h2>System Info</h2>\n<h4>Pytorch 0.3.1</h4>\n<p>Running in a docker image built from the official Dockerfile for tag v0.3.1</p>\n<p>PyTorch version: 0.3.1b0+2b47480<br>\nIs debug build: No<br>\nCUDA used to build PyTorch: 8.0.61</p>\n<p>OS: Ubuntu 16.04.5 LTS<br>\nGCC version: (Ubuntu 5.4.0-6ubuntu1~16.04.10) 5.4.0 20160609<br>\nCMake version: version 3.5.1</p>\n<p>Python version: 3.6<br>\nIs CUDA available: Yes<br>\nCUDA runtime version: 8.0.61<br>\nGPU models and configuration: GPU 0: Tesla P4<br>\nNvidia driver version: 387.26<br>\ncuDNN version: Probably one of the following:<br>\n/usr/lib/x86_64-linux-gnu/libcudnn.so.6.0.21<br>\n/usr/lib/x86_64-linux-gnu/libcudnn_static_v6.a</p>\n<p>Versions of relevant libraries:<br>\n[pip] numpy (1.15.0)<br>\n[pip] torch (0.3.1b0+2b47480)<br>\n[pip] torchvision (0.2.1)<br>\n[conda] Could not collect</p>\n<h4>Pytorch 0.4.1</h4>\n<p>Running in the official pytorch Docker image (pytorch/pytorch:0.4.1-cuda9-cudnn7-runtime, 7b329a33d981)</p>\n<p>PyTorch version: 0.4.1<br>\nIs debug build: No<br>\nCUDA used to build PyTorch: 9.0.176</p>\n<p>OS: Ubuntu 16.04.5 LTS<br>\nGCC version: (Ubuntu 5.4.0-6ubuntu1~16.04.10) 5.4.0 20160609<br>\nCMake version: Could not collect</p>\n<p>Python version: 3.6<br>\nIs CUDA available: Yes<br>\nCUDA runtime version: Could not collect<br>\nGPU models and configuration: GPU 0: Tesla P4<br>\nNvidia driver version: 387.26<br>\ncuDNN version: Could not collect</p>\n<p>Versions of relevant libraries:<br>\n[pip] numpy (1.14.5)<br>\n[pip] torch (0.4.1)<br>\n[pip] torchvision (0.2.1)<br>\n[conda] cuda90                    1.0                  h6433d27_0    pytorch<br>\n[conda] pytorch                   0.4.1           py36_cuda9.0.176_cudnn7.1.2_1    pytorch<br>\n[conda] torchvision               0.2.1                    py36_1    pytorch</p>", "body_text": "Issue description\nTorch.sum(x, dim=1) with x a 2d tensor gives a different result on pytorch 0.4.0/1 compared to pytorch 0.3.1. I couldn't find any documentation/issue on this change of behavior, so I'm opening this issue to track it. Any feedback or links to related issues that I may have missed would help.\nIt's a small difference, but it appears to be the reason why I loose 0.02 top-1 accuracy on a CIFAR10 model simply by upgrading pytorch.\nCode example\nPytorch 0.3.1:\nIn [1]: import torch\nIn [2]: torch.manual_seed(1)\nOut[2]: <torch._C.Generator at 0x7f75ed7fde30>\nIn [3]: torch.set_printoptions(precision=12)\nIn [4]: r = torch.rand(18,18)\nIn [5]: s = torch.sum(r, dim=1)\nIn [6]: print(s[0])\n9.30374813079834\nPytorch 0.4.1:\nIn [1]: import torch\nIn [2]: torch.manual_seed(1)\nOut[2]: <torch._C.Generator at 0x7fb075b08b50>\nIn [3]: torch.set_printoptions(precision=12)\nIn [4]: r = torch.rand(18,18)\nIn [5]: s = torch.sum(r, dim=1)\nIn [6]: print(s[0])\ntensor(9.303749084473)\nSystem Info\nPytorch 0.3.1\nRunning in a docker image built from the official Dockerfile for tag v0.3.1\nPyTorch version: 0.3.1b0+2b47480\nIs debug build: No\nCUDA used to build PyTorch: 8.0.61\nOS: Ubuntu 16.04.5 LTS\nGCC version: (Ubuntu 5.4.0-6ubuntu1~16.04.10) 5.4.0 20160609\nCMake version: version 3.5.1\nPython version: 3.6\nIs CUDA available: Yes\nCUDA runtime version: 8.0.61\nGPU models and configuration: GPU 0: Tesla P4\nNvidia driver version: 387.26\ncuDNN version: Probably one of the following:\n/usr/lib/x86_64-linux-gnu/libcudnn.so.6.0.21\n/usr/lib/x86_64-linux-gnu/libcudnn_static_v6.a\nVersions of relevant libraries:\n[pip] numpy (1.15.0)\n[pip] torch (0.3.1b0+2b47480)\n[pip] torchvision (0.2.1)\n[conda] Could not collect\nPytorch 0.4.1\nRunning in the official pytorch Docker image (pytorch/pytorch:0.4.1-cuda9-cudnn7-runtime, 7b329a33d981)\nPyTorch version: 0.4.1\nIs debug build: No\nCUDA used to build PyTorch: 9.0.176\nOS: Ubuntu 16.04.5 LTS\nGCC version: (Ubuntu 5.4.0-6ubuntu1~16.04.10) 5.4.0 20160609\nCMake version: Could not collect\nPython version: 3.6\nIs CUDA available: Yes\nCUDA runtime version: Could not collect\nGPU models and configuration: GPU 0: Tesla P4\nNvidia driver version: 387.26\ncuDNN version: Could not collect\nVersions of relevant libraries:\n[pip] numpy (1.14.5)\n[pip] torch (0.4.1)\n[pip] torchvision (0.2.1)\n[conda] cuda90                    1.0                  h6433d27_0    pytorch\n[conda] pytorch                   0.4.1           py36_cuda9.0.176_cudnn7.1.2_1    pytorch\n[conda] torchvision               0.2.1                    py36_1    pytorch", "body": "## Issue description\r\n\r\nTorch.sum(x, dim=1) with x a 2d tensor gives a different result on pytorch 0.4.0/1 compared to pytorch 0.3.1. I couldn't find any documentation/issue on this change of behavior, so I'm opening this issue to track it. Any feedback or links to related issues that I may have missed would help.\r\nIt's a small difference, but it appears to be the reason why I loose 0.02 top-1 accuracy on a CIFAR10 model simply by upgrading pytorch.\r\n\r\n## Code example\r\n\r\n#### Pytorch 0.3.1: \r\n\r\nIn [1]: import torch\r\n\r\nIn [2]: torch.manual_seed(1)\r\nOut[2]: <torch._C.Generator at 0x7f75ed7fde30>\r\n\r\nIn [3]: torch.set_printoptions(precision=12)\r\n\r\nIn [4]: r = torch.rand(18,18)\r\n\r\nIn [5]: s = torch.sum(r, dim=1)\r\n\r\nIn [6]: print(s[0])\r\n9.30374813079834\r\n\r\n#### Pytorch 0.4.1:\r\n\r\n In [1]: import torch\r\n\r\nIn [2]: torch.manual_seed(1)\r\nOut[2]: <torch._C.Generator at 0x7fb075b08b50>\r\n\r\nIn [3]: torch.set_printoptions(precision=12)\r\n\r\nIn [4]: r = torch.rand(18,18)\r\n\r\nIn [5]: s = torch.sum(r, dim=1)\r\n\r\nIn [6]: print(s[0])\r\ntensor(9.303749084473)\r\n\r\n## System Info\r\n\r\n#### Pytorch 0.3.1\r\nRunning in a docker image built from the official Dockerfile for tag v0.3.1\r\n\r\nPyTorch version: 0.3.1b0+2b47480\r\nIs debug build: No\r\nCUDA used to build PyTorch: 8.0.61\r\n\r\nOS: Ubuntu 16.04.5 LTS\r\nGCC version: (Ubuntu 5.4.0-6ubuntu1~16.04.10) 5.4.0 20160609\r\nCMake version: version 3.5.1\r\n\r\nPython version: 3.6\r\nIs CUDA available: Yes\r\nCUDA runtime version: 8.0.61\r\nGPU models and configuration: GPU 0: Tesla P4\r\nNvidia driver version: 387.26\r\ncuDNN version: Probably one of the following:\r\n/usr/lib/x86_64-linux-gnu/libcudnn.so.6.0.21\r\n/usr/lib/x86_64-linux-gnu/libcudnn_static_v6.a\r\n\r\nVersions of relevant libraries:\r\n[pip] numpy (1.15.0)\r\n[pip] torch (0.3.1b0+2b47480)\r\n[pip] torchvision (0.2.1)\r\n[conda] Could not collect\r\n\r\n#### Pytorch 0.4.1\r\nRunning in the official pytorch Docker image (pytorch/pytorch:0.4.1-cuda9-cudnn7-runtime, 7b329a33d981)\r\n\r\nPyTorch version: 0.4.1\r\nIs debug build: No\r\nCUDA used to build PyTorch: 9.0.176\r\n\r\nOS: Ubuntu 16.04.5 LTS\r\nGCC version: (Ubuntu 5.4.0-6ubuntu1~16.04.10) 5.4.0 20160609\r\nCMake version: Could not collect\r\n\r\nPython version: 3.6\r\nIs CUDA available: Yes\r\nCUDA runtime version: Could not collect\r\nGPU models and configuration: GPU 0: Tesla P4\r\nNvidia driver version: 387.26\r\ncuDNN version: Could not collect\r\n\r\nVersions of relevant libraries:\r\n[pip] numpy (1.14.5)\r\n[pip] torch (0.4.1)\r\n[pip] torchvision (0.2.1)\r\n[conda] cuda90                    1.0                  h6433d27_0    pytorch\r\n[conda] pytorch                   0.4.1           py36_cuda9.0.176_cudnn7.1.2_1    pytorch\r\n[conda] torchvision               0.2.1                    py36_1    pytorch\r\n"}