{"url": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/179585485", "pull_request_review_id": 109857849, "id": 179585485, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE3OTU4NTQ4NQ==", "diff_hunk": "@@ -120,5 +122,84 @@ Tensor prod(const Tensor &self, int64_t dim_, bool keepdim) {\n }\n \n // \\DIM REDUCE ################################################################\n+\n+// MULTI DIM REDUCE ###########################################################\n+\n+template <Tensor (reduce_1)(const Tensor &, int64_t, bool)>\n+inline Tensor reduce_multi(const Tensor &self, IntList dims_, bool keepdim) {\n+  if (dims_.size() == 1) {\n+    return reduce_1(self, dims_[0], keepdim);\n+  }\n+  if (dims_.size() == 0) {\n+    return self;\n+  }\n+  size_t ndims = self.dim();\n+  std::bitset<dim_bitset_size> seen = dim_list_to_bitset(dims_, ndims);\n+  Tensor result = self;\n+  for (size_t i = 0; i < dims_.size(); i++) {\n+    size_t dim = maybe_wrap_dim(dims_[i], ndims);\n+    result = reduce_1(result, dim, true);", "path": "aten/src/ATen/native/ReduceOps.cpp", "position": null, "original_position": 35, "commit_id": "3b631f02f2d88b09e83d700f3c33cc2e3ad01e63", "original_commit_id": "fa7f0a940bde207c759d04ccc41f94ea7872aec4", "user": {"login": "apaszke", "id": 4583066, "node_id": "MDQ6VXNlcjQ1ODMwNjY=", "avatar_url": "https://avatars3.githubusercontent.com/u/4583066?v=4", "gravatar_id": "", "url": "https://api.github.com/users/apaszke", "html_url": "https://github.com/apaszke", "followers_url": "https://api.github.com/users/apaszke/followers", "following_url": "https://api.github.com/users/apaszke/following{/other_user}", "gists_url": "https://api.github.com/users/apaszke/gists{/gist_id}", "starred_url": "https://api.github.com/users/apaszke/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/apaszke/subscriptions", "organizations_url": "https://api.github.com/users/apaszke/orgs", "repos_url": "https://api.github.com/users/apaszke/repos", "events_url": "https://api.github.com/users/apaszke/events{/privacy}", "received_events_url": "https://api.github.com/users/apaszke/received_events", "type": "User", "site_admin": false}, "body": "Wouldn't passing in `keepdim=false` here let us remove the next block? It seems safe to just collapse the dimensions, with some care taken to offset `dim` by `i`.", "created_at": "2018-04-05T20:06:30Z", "updated_at": "2018-11-23T15:41:50Z", "html_url": "https://github.com/pytorch/pytorch/pull/6152#discussion_r179585485", "pull_request_url": "https://api.github.com/repos/pytorch/pytorch/pulls/6152", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/179585485"}, "html": {"href": "https://github.com/pytorch/pytorch/pull/6152#discussion_r179585485"}, "pull_request": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/6152"}}, "body_html": "<p>Wouldn't passing in <code>keepdim=false</code> here let us remove the next block? It seems safe to just collapse the dimensions, with some care taken to offset <code>dim</code> by <code>i</code>.</p>", "body_text": "Wouldn't passing in keepdim=false here let us remove the next block? It seems safe to just collapse the dimensions, with some care taken to offset dim by i."}