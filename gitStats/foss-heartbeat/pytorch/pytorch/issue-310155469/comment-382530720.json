{"url": "https://api.github.com/repos/pytorch/pytorch/issues/comments/382530720", "html_url": "https://github.com/pytorch/pytorch/pull/6152#issuecomment-382530720", "issue_url": "https://api.github.com/repos/pytorch/pytorch/issues/6152", "id": 382530720, "node_id": "MDEyOklzc3VlQ29tbWVudDM4MjUzMDcyMA==", "user": {"login": "t-vi", "id": 20787943, "node_id": "MDQ6VXNlcjIwNzg3OTQz", "avatar_url": "https://avatars2.githubusercontent.com/u/20787943?v=4", "gravatar_id": "", "url": "https://api.github.com/users/t-vi", "html_url": "https://github.com/t-vi", "followers_url": "https://api.github.com/users/t-vi/followers", "following_url": "https://api.github.com/users/t-vi/following{/other_user}", "gists_url": "https://api.github.com/users/t-vi/gists{/gist_id}", "starred_url": "https://api.github.com/users/t-vi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/t-vi/subscriptions", "organizations_url": "https://api.github.com/users/t-vi/orgs", "repos_url": "https://api.github.com/users/t-vi/repos", "events_url": "https://api.github.com/users/t-vi/events{/privacy}", "received_events_url": "https://api.github.com/users/t-vi/received_events", "type": "User", "site_admin": false}, "created_at": "2018-04-18T21:11:11Z", "updated_at": "2018-04-18T21:11:11Z", "author_association": "CONTRIBUTOR", "body_html": "<p>So after a rebase against master:<br>\nThe tests fails in <code>test_jit.py</code>. The reason is that the <code>TestJit.test_keyword</code> jit-compiles <code>torch.sum(x, dim=0, keepdim=False)</code>. The jit does not know about the dim being declared <code>IntList[1]</code> (i.e. with automatic conversion from <code>int64_t</code> to <code>IntList</code>) and but would accept <code>torch.sum(x, dim=[0], keepdim=False)</code>.<br>\nInterestingly, the behaviour seems to be different between passing in arguments in the<br>\njit-compiling <code>torch.nn.functional.adaptive_avg_pool1d</code> has a similar quirk with <code>(x, 0)</code> being OK as arguments, but <code>(x, output_size=0)</code> not and <code>(x, output_size=[0])</code> being OK but not <code>(x, [0])</code>.</p>\n<p>So there might be something to <a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=13564\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/ezyang\">@ezyang</a> 's comment that one might consider a change in the jit here.</p>\n<p>Best regards</p>\n<p>Thomas</p>", "body_text": "So after a rebase against master:\nThe tests fails in test_jit.py. The reason is that the TestJit.test_keyword jit-compiles torch.sum(x, dim=0, keepdim=False). The jit does not know about the dim being declared IntList[1] (i.e. with automatic conversion from int64_t to IntList) and but would accept torch.sum(x, dim=[0], keepdim=False).\nInterestingly, the behaviour seems to be different between passing in arguments in the\njit-compiling torch.nn.functional.adaptive_avg_pool1d has a similar quirk with (x, 0) being OK as arguments, but (x, output_size=0) not and (x, output_size=[0]) being OK but not (x, [0]).\nSo there might be something to @ezyang 's comment that one might consider a change in the jit here.\nBest regards\nThomas", "body": "So after a rebase against master:\r\nThe tests fails in `test_jit.py`. The reason is that the `TestJit.test_keyword` jit-compiles `torch.sum(x, dim=0, keepdim=False)`. The jit does not know about the dim being declared `IntList[1]` (i.e. with automatic conversion from `int64_t` to `IntList`) and but would accept `torch.sum(x, dim=[0], keepdim=False)`.\r\nInterestingly, the behaviour seems to be different between passing in arguments in the \r\njit-compiling `torch.nn.functional.adaptive_avg_pool1d` has a similar quirk with `(x, 0)` being OK as arguments, but `(x, output_size=0)` not and `(x, output_size=[0])` being OK but not `(x, [0])`.\r\n\r\nSo there might be something to @ezyang 's comment that one might consider a change in the jit here.\r\n\r\nBest regards\r\n\r\nThomas\r\n"}