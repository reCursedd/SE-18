{"url": "https://api.github.com/repos/pytorch/pytorch/issues/comments/378714657", "html_url": "https://github.com/pytorch/pytorch/pull/6152#issuecomment-378714657", "issue_url": "https://api.github.com/repos/pytorch/pytorch/issues/6152", "id": 378714657, "node_id": "MDEyOklzc3VlQ29tbWVudDM3ODcxNDY1Nw==", "user": {"login": "t-vi", "id": 20787943, "node_id": "MDQ6VXNlcjIwNzg3OTQz", "avatar_url": "https://avatars2.githubusercontent.com/u/20787943?v=4", "gravatar_id": "", "url": "https://api.github.com/users/t-vi", "html_url": "https://github.com/t-vi", "followers_url": "https://api.github.com/users/t-vi/followers", "following_url": "https://api.github.com/users/t-vi/following{/other_user}", "gists_url": "https://api.github.com/users/t-vi/gists{/gist_id}", "starred_url": "https://api.github.com/users/t-vi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/t-vi/subscriptions", "organizations_url": "https://api.github.com/users/t-vi/orgs", "repos_url": "https://api.github.com/users/t-vi/repos", "events_url": "https://api.github.com/users/t-vi/events{/privacy}", "received_events_url": "https://api.github.com/users/t-vi/received_events", "type": "User", "site_admin": false}, "created_at": "2018-04-04T19:17:59Z", "updated_at": "2018-04-04T19:53:56Z", "author_association": "CONTRIBUTOR", "body_html": "<p>So far I have assumed that the user prescribes the order of summation. The obvious alternative is to use ascending or descending order in the tensors by iterating over the bitset <code>dims</code> instead of the user-provided list <code>dims_</code>.</p>\n<p>Even more radically, one could consider to permute+reshape axes together. Then one would only sum once and not have intermediate results...</p>", "body_text": "So far I have assumed that the user prescribes the order of summation. The obvious alternative is to use ascending or descending order in the tensors by iterating over the bitset dims instead of the user-provided list dims_.\nEven more radically, one could consider to permute+reshape axes together. Then one would only sum once and not have intermediate results...", "body": "So far I have assumed that the user prescribes the order of summation. The obvious alternative is to use ascending or descending order in the tensors by iterating over the bitset `dims` instead of the user-provided list `dims_`.\r\n\r\nEven more radically, one could consider to permute+reshape axes together. Then one would only sum once and not have intermediate results..."}