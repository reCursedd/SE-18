{"url": "https://api.github.com/repos/pytorch/pytorch/issues/comments/379786398", "html_url": "https://github.com/pytorch/pytorch/pull/6152#issuecomment-379786398", "issue_url": "https://api.github.com/repos/pytorch/pytorch/issues/6152", "id": 379786398, "node_id": "MDEyOklzc3VlQ29tbWVudDM3OTc4NjM5OA==", "user": {"login": "fmassa", "id": 9110200, "node_id": "MDQ6VXNlcjkxMTAyMDA=", "avatar_url": "https://avatars2.githubusercontent.com/u/9110200?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fmassa", "html_url": "https://github.com/fmassa", "followers_url": "https://api.github.com/users/fmassa/followers", "following_url": "https://api.github.com/users/fmassa/following{/other_user}", "gists_url": "https://api.github.com/users/fmassa/gists{/gist_id}", "starred_url": "https://api.github.com/users/fmassa/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fmassa/subscriptions", "organizations_url": "https://api.github.com/users/fmassa/orgs", "repos_url": "https://api.github.com/users/fmassa/repos", "events_url": "https://api.github.com/users/fmassa/events{/privacy}", "received_events_url": "https://api.github.com/users/fmassa/received_events", "type": "User", "site_admin": false}, "created_at": "2018-04-09T15:10:28Z", "updated_at": "2018-04-09T15:10:28Z", "author_association": "MEMBER", "body_html": "<p>Indeed, in some cases the cost of permute + contiguous outweights the single execution of <code>op</code>.<br>\nMight just be good to keep in mind this subtlety when extending multiple axis to other ops.</p>\n<p>btw, I believe in your first <code>timeit</code> you should have added something like <code>x.sum(2).sum(3)</code> (because we remove the dimension by default). But still, this option is the fastest.</p>", "body_text": "Indeed, in some cases the cost of permute + contiguous outweights the single execution of op.\nMight just be good to keep in mind this subtlety when extending multiple axis to other ops.\nbtw, I believe in your first timeit you should have added something like x.sum(2).sum(3) (because we remove the dimension by default). But still, this option is the fastest.", "body": "Indeed, in some cases the cost of permute + contiguous outweights the single execution of `op`.\r\nMight just be good to keep in mind this subtlety when extending multiple axis to other ops.\r\n\r\nbtw, I believe in your first `timeit` you should have added something like `x.sum(2).sum(3)` (because we remove the dimension by default). But still, this option is the fastest."}