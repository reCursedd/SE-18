{"url": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/178568136", "pull_request_review_id": 108644434, "id": 178568136, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE3ODU2ODEzNg==", "diff_hunk": "@@ -27,6 +28,24 @@ static inline int64_t maybe_wrap_dim(int64_t dim, int64_t dim_post_expr, bool wr\n   return dim;\n }\n \n+#ifndef __CUDA_ARCH__\n+// on Windows, std::bitset cannot seem to cope with the\n+// non-explicit half conversion in THCUNN/THCHalfAutoNumerics.cuh\n+// so this is host-code only\n+\n+static inline std::bitset<64> dim_list_to_vector(IntList dims, int64_t ndims, bool wrap_scalar=true) {", "path": "aten/src/ATen/WrapDimUtils.h", "position": null, "original_position": 17, "commit_id": "3b631f02f2d88b09e83d700f3c33cc2e3ad01e63", "original_commit_id": "71a6adf35ea5e7fba00aee693f48a4e31de08cd7", "user": {"login": "t-vi", "id": 20787943, "node_id": "MDQ6VXNlcjIwNzg3OTQz", "avatar_url": "https://avatars2.githubusercontent.com/u/20787943?v=4", "gravatar_id": "", "url": "https://api.github.com/users/t-vi", "html_url": "https://github.com/t-vi", "followers_url": "https://api.github.com/users/t-vi/followers", "following_url": "https://api.github.com/users/t-vi/following{/other_user}", "gists_url": "https://api.github.com/users/t-vi/gists{/gist_id}", "starred_url": "https://api.github.com/users/t-vi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/t-vi/subscriptions", "organizations_url": "https://api.github.com/users/t-vi/orgs", "repos_url": "https://api.github.com/users/t-vi/repos", "events_url": "https://api.github.com/users/t-vi/events{/privacy}", "received_events_url": "https://api.github.com/users/t-vi/received_events", "type": "User", "site_admin": false}, "body": "Thank you @apaszke , @peterjc123  for your comments.\r\nAs far as I can tell, a host annotation would not fix this, as the half conversion seems to also be included for host compiling .cu files.\r\nAlso, I don't know whether the problem is actually the 64. My impression is that it is some internals within MSVC's bitset that is odd.\r\nI'll make the 64 a constexpr as suggested.\r\n\r\nHow about sticking the `dim_list_to_vector` in a separate .h `WrapDimUtilsCpp.h` or so?\r\n\r\nBest regards\r\n\r\nThomas", "created_at": "2018-04-02T15:27:33Z", "updated_at": "2018-11-23T15:41:29Z", "html_url": "https://github.com/pytorch/pytorch/pull/6152#discussion_r178568136", "pull_request_url": "https://api.github.com/repos/pytorch/pytorch/pulls/6152", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/178568136"}, "html": {"href": "https://github.com/pytorch/pytorch/pull/6152#discussion_r178568136"}, "pull_request": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/6152"}}, "body_html": "<p>Thank you <a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=4583066\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/apaszke\">@apaszke</a> , <a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=9998726\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/peterjc123\">@peterjc123</a>  for your comments.<br>\nAs far as I can tell, a host annotation would not fix this, as the half conversion seems to also be included for host compiling .cu files.<br>\nAlso, I don't know whether the problem is actually the 64. My impression is that it is some internals within MSVC's bitset that is odd.<br>\nI'll make the 64 a constexpr as suggested.</p>\n<p>How about sticking the <code>dim_list_to_vector</code> in a separate .h <code>WrapDimUtilsCpp.h</code> or so?</p>\n<p>Best regards</p>\n<p>Thomas</p>", "body_text": "Thank you @apaszke , @peterjc123  for your comments.\nAs far as I can tell, a host annotation would not fix this, as the half conversion seems to also be included for host compiling .cu files.\nAlso, I don't know whether the problem is actually the 64. My impression is that it is some internals within MSVC's bitset that is odd.\nI'll make the 64 a constexpr as suggested.\nHow about sticking the dim_list_to_vector in a separate .h WrapDimUtilsCpp.h or so?\nBest regards\nThomas", "in_reply_to_id": 178545141}