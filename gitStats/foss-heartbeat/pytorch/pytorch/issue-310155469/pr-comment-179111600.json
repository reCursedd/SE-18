{"url": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/179111600", "pull_request_review_id": 109291666, "id": 179111600, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE3OTExMTYwMA==", "diff_hunk": "@@ -0,0 +1,27 @@\n+#pragma once\n+\n+#include \"ATen/TensorImpl.h\"\n+#include \"ATen/WrapDimUtils.h\"\n+#include <sstream>\n+#include <bitset>\n+\n+namespace at {\n+\n+// This is in an extra file to work around strange interaction of\n+// bitset on Windows with operator overloading\n+\n+constexpr size_t dim_bitset_size = 64;\n+\n+static inline std::bitset<dim_bitset_size> dim_list_to_vector(IntList dims, int64_t ndims, bool wrap_scalar=true) {", "path": "aten/src/ATen/WrapDimUtilsMulti.h", "position": null, "original_position": 15, "commit_id": "3b631f02f2d88b09e83d700f3c33cc2e3ad01e63", "original_commit_id": "d32ca285576fe1ed0691e270e03cb7bb175d3b9b", "user": {"login": "t-vi", "id": 20787943, "node_id": "MDQ6VXNlcjIwNzg3OTQz", "avatar_url": "https://avatars2.githubusercontent.com/u/20787943?v=4", "gravatar_id": "", "url": "https://api.github.com/users/t-vi", "html_url": "https://github.com/t-vi", "followers_url": "https://api.github.com/users/t-vi/followers", "following_url": "https://api.github.com/users/t-vi/following{/other_user}", "gists_url": "https://api.github.com/users/t-vi/gists{/gist_id}", "starred_url": "https://api.github.com/users/t-vi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/t-vi/subscriptions", "organizations_url": "https://api.github.com/users/t-vi/orgs", "repos_url": "https://api.github.com/users/t-vi/repos", "events_url": "https://api.github.com/users/t-vi/events{/privacy}", "received_events_url": "https://api.github.com/users/t-vi/received_events", "type": "User", "site_admin": false}, "body": "Good catch, `vector` is misleading. But would something more like a conversion function `dim_list_to_bitset` be OK? I use the function for other dimension lists, too (e.g. expansion), so I would not necessarily use reduce as a name. (I currently use for expansion and reduction it while reworking the bilinear fix and also for the pairwise reduction for `einsum` - though there it is reduction...)\r\n", "created_at": "2018-04-04T11:49:01Z", "updated_at": "2018-11-23T15:41:40Z", "html_url": "https://github.com/pytorch/pytorch/pull/6152#discussion_r179111600", "pull_request_url": "https://api.github.com/repos/pytorch/pytorch/pulls/6152", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/179111600"}, "html": {"href": "https://github.com/pytorch/pytorch/pull/6152#discussion_r179111600"}, "pull_request": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/6152"}}, "body_html": "<p>Good catch, <code>vector</code> is misleading. But would something more like a conversion function <code>dim_list_to_bitset</code> be OK? I use the function for other dimension lists, too (e.g. expansion), so I would not necessarily use reduce as a name. (I currently use for expansion and reduction it while reworking the bilinear fix and also for the pairwise reduction for <code>einsum</code> - though there it is reduction...)</p>", "body_text": "Good catch, vector is misleading. But would something more like a conversion function dim_list_to_bitset be OK? I use the function for other dimension lists, too (e.g. expansion), so I would not necessarily use reduce as a name. (I currently use for expansion and reduction it while reworking the bilinear fix and also for the pairwise reduction for einsum - though there it is reduction...)", "in_reply_to_id": 179106491}