{"url": "https://api.github.com/repos/pytorch/pytorch/issues/comments/414666193", "html_url": "https://github.com/pytorch/pytorch/issues/10729#issuecomment-414666193", "issue_url": "https://api.github.com/repos/pytorch/pytorch/issues/10729", "id": 414666193, "node_id": "MDEyOklzc3VlQ29tbWVudDQxNDY2NjE5Mw==", "user": {"login": "arvidfm", "id": 885076, "node_id": "MDQ6VXNlcjg4NTA3Ng==", "avatar_url": "https://avatars3.githubusercontent.com/u/885076?v=4", "gravatar_id": "", "url": "https://api.github.com/users/arvidfm", "html_url": "https://github.com/arvidfm", "followers_url": "https://api.github.com/users/arvidfm/followers", "following_url": "https://api.github.com/users/arvidfm/following{/other_user}", "gists_url": "https://api.github.com/users/arvidfm/gists{/gist_id}", "starred_url": "https://api.github.com/users/arvidfm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/arvidfm/subscriptions", "organizations_url": "https://api.github.com/users/arvidfm/orgs", "repos_url": "https://api.github.com/users/arvidfm/repos", "events_url": "https://api.github.com/users/arvidfm/events{/privacy}", "received_events_url": "https://api.github.com/users/arvidfm/received_events", "type": "User", "site_admin": false}, "created_at": "2018-08-21T13:04:10Z", "updated_at": "2018-08-21T13:04:10Z", "author_association": "NONE", "body_html": "<p>Not sure if this is worth opening a new issue for, but the same behaviour can be seen when using <code>torch.where</code>:</p>\n<div class=\"highlight highlight-source-python\"><pre><span class=\"pl-k\">&gt;&gt;</span><span class=\"pl-k\">&gt;</span> x <span class=\"pl-k\">=</span> torch.FloatTensor([<span class=\"pl-k\">-</span><span class=\"pl-c1\">10</span>, <span class=\"pl-k\">-</span><span class=\"pl-c1\">5</span>, <span class=\"pl-c1\">0</span>, <span class=\"pl-c1\">5</span>, <span class=\"pl-c1\">10</span>, <span class=\"pl-c1\">50</span>, <span class=\"pl-c1\">60</span>, <span class=\"pl-c1\">70</span>, <span class=\"pl-c1\">80</span>, <span class=\"pl-c1\">90</span>, <span class=\"pl-c1\">100</span>])\n<span class=\"pl-k\">&gt;&gt;</span><span class=\"pl-k\">&gt;</span> x.requires_grad <span class=\"pl-k\">=</span> <span class=\"pl-c1\">True</span>\n<span class=\"pl-k\">&gt;&gt;</span><span class=\"pl-k\">&gt;</span> y <span class=\"pl-k\">=</span> torch.where(x <span class=\"pl-k\">&lt;</span> <span class=\"pl-c1\">0</span>, torch.exp(x), torch.ones_like(x))\n<span class=\"pl-k\">&gt;&gt;</span><span class=\"pl-k\">&gt;</span> y.sum().backward()\n<span class=\"pl-k\">&gt;&gt;</span><span class=\"pl-k\">&gt;</span> x.grad\ntensor([<span class=\"pl-c1\">0.0000</span>, <span class=\"pl-c1\">0.0067</span>, <span class=\"pl-c1\">0.0000</span>, <span class=\"pl-c1\">0.0000</span>, <span class=\"pl-c1\">0.0000</span>, <span class=\"pl-c1\">0.0000</span>, <span class=\"pl-c1\">0.0000</span>, <span class=\"pl-c1\">0.0000</span>, <span class=\"pl-c1\">0.0000</span>,\n           nan,    nan])</pre></div>", "body_text": "Not sure if this is worth opening a new issue for, but the same behaviour can be seen when using torch.where:\n>>> x = torch.FloatTensor([-10, -5, 0, 5, 10, 50, 60, 70, 80, 90, 100])\n>>> x.requires_grad = True\n>>> y = torch.where(x < 0, torch.exp(x), torch.ones_like(x))\n>>> y.sum().backward()\n>>> x.grad\ntensor([0.0000, 0.0067, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000,\n           nan,    nan])", "body": "Not sure if this is worth opening a new issue for, but the same behaviour can be seen when using `torch.where`:\r\n\r\n```py\r\n>>> x = torch.FloatTensor([-10, -5, 0, 5, 10, 50, 60, 70, 80, 90, 100])\r\n>>> x.requires_grad = True\r\n>>> y = torch.where(x < 0, torch.exp(x), torch.ones_like(x))\r\n>>> y.sum().backward()\r\n>>> x.grad\r\ntensor([0.0000, 0.0067, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000,\r\n           nan,    nan])\r\n```"}