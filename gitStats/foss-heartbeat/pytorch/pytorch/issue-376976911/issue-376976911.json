{"url": "https://api.github.com/repos/pytorch/pytorch/issues/13523", "repository_url": "https://api.github.com/repos/pytorch/pytorch", "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/13523/labels{/name}", "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/13523/comments", "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/13523/events", "html_url": "https://github.com/pytorch/pytorch/pull/13523", "id": 376976911, "node_id": "MDExOlB1bGxSZXF1ZXN0MjI4MDY2Mjcz", "number": 13523, "title": "Use torch:: instead of at:: in all C++ APIs", "user": {"login": "goldsborough", "id": 6429851, "node_id": "MDQ6VXNlcjY0Mjk4NTE=", "avatar_url": "https://avatars3.githubusercontent.com/u/6429851?v=4", "gravatar_id": "", "url": "https://api.github.com/users/goldsborough", "html_url": "https://github.com/goldsborough", "followers_url": "https://api.github.com/users/goldsborough/followers", "following_url": "https://api.github.com/users/goldsborough/following{/other_user}", "gists_url": "https://api.github.com/users/goldsborough/gists{/gist_id}", "starred_url": "https://api.github.com/users/goldsborough/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/goldsborough/subscriptions", "organizations_url": "https://api.github.com/users/goldsborough/orgs", "repos_url": "https://api.github.com/users/goldsborough/repos", "events_url": "https://api.github.com/users/goldsborough/events{/privacy}", "received_events_url": "https://api.github.com/users/goldsborough/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 679953983, "node_id": "MDU6TGFiZWw2Nzk5NTM5ODM=", "url": "https://api.github.com/repos/pytorch/pytorch/labels/jit", "name": "jit", "color": "c5def5", "default": false}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2018-11-02T21:42:28Z", "updated_at": "2018-11-06T22:33:58Z", "closed_at": "2018-11-06T22:33:58Z", "author_association": "CONTRIBUTOR", "pull_request": {"url": "https://api.github.com/repos/pytorch/pytorch/pulls/13523", "html_url": "https://github.com/pytorch/pytorch/pull/13523", "diff_url": "https://github.com/pytorch/pytorch/pull/13523.diff", "patch_url": "https://github.com/pytorch/pytorch/pull/13523.patch"}, "body_html": "<p>In TorchScript and C++ extensions we currently advocate a mix of <code>torch::</code> and <code>at::</code> namespace usage. In the C++ frontend I had instead exported all symbols from <code>at::</code> and some from <code>c10::</code> into the <code>torch::</code> namespace. This is far, far easier for users to understand, and also avoid bugs around creating tensors vs. variables. The same should from now on be true for the TorchScript C++ API (for running and loading models) and all C++ extensions.</p>\n<p>Note that since we're just talking about typedefs, this change does not break any existing code.</p>\n<p>Once this lands I will update stuff in <code>pytorch/tutorials</code> too.</p>\n<p><a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=370202\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/zdevito\">@zdevito</a> <a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=13564\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/ezyang\">@ezyang</a> <a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=3768583\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/gchanan\">@gchanan</a></p>", "body_text": "In TorchScript and C++ extensions we currently advocate a mix of torch:: and at:: namespace usage. In the C++ frontend I had instead exported all symbols from at:: and some from c10:: into the torch:: namespace. This is far, far easier for users to understand, and also avoid bugs around creating tensors vs. variables. The same should from now on be true for the TorchScript C++ API (for running and loading models) and all C++ extensions.\nNote that since we're just talking about typedefs, this change does not break any existing code.\nOnce this lands I will update stuff in pytorch/tutorials too.\n@zdevito @ezyang @gchanan", "body": "In TorchScript and C++ extensions we currently advocate a mix of `torch::` and `at::` namespace usage. In the C++ frontend I had instead exported all symbols from `at::` and some from `c10::` into the `torch::` namespace. This is far, far easier for users to understand, and also avoid bugs around creating tensors vs. variables. The same should from now on be true for the TorchScript C++ API (for running and loading models) and all C++ extensions.\r\n\r\nNote that since we're just talking about typedefs, this change does not break any existing code.\r\n\r\nOnce this lands I will update stuff in `pytorch/tutorials` too.\r\n\r\n@zdevito @ezyang @gchanan "}