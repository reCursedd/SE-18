{"url": "https://api.github.com/repos/pytorch/pytorch/issues/comments/439242839", "html_url": "https://github.com/pytorch/pytorch/issues/13573#issuecomment-439242839", "issue_url": "https://api.github.com/repos/pytorch/pytorch/issues/13573", "id": 439242839, "node_id": "MDEyOklzc3VlQ29tbWVudDQzOTI0MjgzOQ==", "user": {"login": "SsnL", "id": 5674597, "node_id": "MDQ6VXNlcjU2NzQ1OTc=", "avatar_url": "https://avatars2.githubusercontent.com/u/5674597?v=4", "gravatar_id": "", "url": "https://api.github.com/users/SsnL", "html_url": "https://github.com/SsnL", "followers_url": "https://api.github.com/users/SsnL/followers", "following_url": "https://api.github.com/users/SsnL/following{/other_user}", "gists_url": "https://api.github.com/users/SsnL/gists{/gist_id}", "starred_url": "https://api.github.com/users/SsnL/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/SsnL/subscriptions", "organizations_url": "https://api.github.com/users/SsnL/orgs", "repos_url": "https://api.github.com/users/SsnL/repos", "events_url": "https://api.github.com/users/SsnL/events{/privacy}", "received_events_url": "https://api.github.com/users/SsnL/received_events", "type": "User", "site_admin": false}, "created_at": "2018-11-16T00:48:09Z", "updated_at": "2018-11-16T00:48:09Z", "author_association": "CONTRIBUTOR", "body_html": "<blockquote>\n<p>you are asking for a barrier call for init_process_group</p>\n</blockquote>\n<p><a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=8120856\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/teng-li\">@teng-li</a> Yes exactly. Currently there is no way to correctly log that the ranks have successfully created the process group. IIRC, in THD days, <code>init_process_group</code> blocks until so.</p>\n<blockquote>\n<p>If <a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=5674597\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/SsnL\">@SsnL</a> only needs a barrier after init_process_group, I feel it's an overkill since there is no GPU access in \"init_process_group\". So ideally, for this case, the barrier should happen on the CPU.</p>\n</blockquote>\n<p>I don't really mind if <code>barrier</code> is specific to <code>init_process_group</code>. All I want is a way to block all ranks until they have reached a certain point after initialization. In fact, I think, for the general purpose NCCL <code>barrier</code>, it makes sense for it to use GPU.</p>", "body_text": "you are asking for a barrier call for init_process_group\n\n@teng-li Yes exactly. Currently there is no way to correctly log that the ranks have successfully created the process group. IIRC, in THD days, init_process_group blocks until so.\n\nIf @SsnL only needs a barrier after init_process_group, I feel it's an overkill since there is no GPU access in \"init_process_group\". So ideally, for this case, the barrier should happen on the CPU.\n\nI don't really mind if barrier is specific to init_process_group. All I want is a way to block all ranks until they have reached a certain point after initialization. In fact, I think, for the general purpose NCCL barrier, it makes sense for it to use GPU.", "body": ">  you are asking for a barrier call for init_process_group\r\n\r\n@teng-li Yes exactly. Currently there is no way to correctly log that the ranks have successfully created the process group. IIRC, in THD days, `init_process_group` blocks until so.\r\n\r\n>  If @SsnL only needs a barrier after init_process_group, I feel it's an overkill since there is no GPU access in \"init_process_group\". So ideally, for this case, the barrier should happen on the CPU.\r\n\r\nI don't really mind if `barrier` is specific to `init_process_group`. All I want is a way to block all ranks until they have reached a certain point after initialization. In fact, I think, for the general purpose NCCL `barrier`, it makes sense for it to use GPU. "}