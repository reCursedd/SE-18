{"url": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/208991772", "pull_request_review_id": 144917572, "id": 208991772, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwODk5MTc3Mg==", "diff_hunk": "@@ -2356,6 +2356,38 @@ def parse_kwargs(desc):\n     tensor([ 1.2252,  0.5002,  0.6248,  2.0139])\n \"\"\")\n \n+add_docstr(torch.matrix_rank,\n+           r\"\"\"\n+matrix_rank(input, tol=None, bool symmetric=False) -> Tensor\n+\n+Returns the numerical rank of a 2-D tensor. The method to compute the\n+matrix rank is done using SVD by default. If :attr:`symmetric` is ``True``,\n+then :attr:`input` is assumed to be symmetric, and the computation of the\n+rank is done by obtaining the eigenvalues.\n+\n+:attr:`tol` is the threshold below which the singular values (or the eigenvalues\n+when :attr:`symmetric` is ``True``) are considered to be 0. If :attr:`tol` is not\n+specified, :attr:`tol` is set to `S.max() * max(S.size()) * eps` where `S` is the\n+singular values (or the eigenvalues when :attr:`symmetric` is ``True``), and `eps`\n+is the epsilon value for the datatype of :attr:`input`.\n+\n+Args:\n+    input (Tensor): the input 2-D tensor\n+    tol (float, optional): the tolerance value. Default: ``None``\n+    symmetric(bool, optional): indicates whether :attr:`input` is symmetric.\n+                               Default: ``False``\n+\n+Example::\n+\n+    >>> a = torch.eye(10)\n+    >>> torch.matrix_rank(a)\n+    10", "path": "torch/_torch_docs.py", "position": null, "original_position": 29, "commit_id": "c9052b5bf6893bc9c5fafb56d0ae3ea8dff3250b", "original_commit_id": "2374e88bc07dfc627b28a1f0edcdeaa913923040", "user": {"login": "SsnL", "id": 5674597, "node_id": "MDQ6VXNlcjU2NzQ1OTc=", "avatar_url": "https://avatars2.githubusercontent.com/u/5674597?v=4", "gravatar_id": "", "url": "https://api.github.com/users/SsnL", "html_url": "https://github.com/SsnL", "followers_url": "https://api.github.com/users/SsnL/followers", "following_url": "https://api.github.com/users/SsnL/following{/other_user}", "gists_url": "https://api.github.com/users/SsnL/gists{/gist_id}", "starred_url": "https://api.github.com/users/SsnL/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/SsnL/subscriptions", "organizations_url": "https://api.github.com/users/SsnL/orgs", "repos_url": "https://api.github.com/users/SsnL/repos", "events_url": "https://api.github.com/users/SsnL/events{/privacy}", "received_events_url": "https://api.github.com/users/SsnL/received_events", "type": "User", "site_admin": false}, "body": "print should be updated with scalar :)", "created_at": "2018-08-09T16:14:57Z", "updated_at": "2018-11-23T15:49:01Z", "html_url": "https://github.com/pytorch/pytorch/pull/10338#discussion_r208991772", "pull_request_url": "https://api.github.com/repos/pytorch/pytorch/pulls/10338", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/208991772"}, "html": {"href": "https://github.com/pytorch/pytorch/pull/10338#discussion_r208991772"}, "pull_request": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/10338"}}, "body_html": "<p>print should be updated with scalar :)</p>", "body_text": "print should be updated with scalar :)"}