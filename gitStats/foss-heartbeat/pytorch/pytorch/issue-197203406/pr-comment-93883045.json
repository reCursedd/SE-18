{"url": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/93883045", "pull_request_review_id": 14415448, "id": 93883045, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDkzODgzMDQ1", "diff_hunk": "@@ -1,79 +1,42 @@\n-import os\n-import socket\n-from io import BytesIO\n+import io\n+import multiprocessing\n+import multiprocessing.queues\n+from multiprocessing.reduction import ForkingPickler\n+import pickle\n \n-import torch\n-import torch.cuda\n-from .common import CustomizablePicklingQueue, ExtendedInitPickler, \\\n-    ExtendedInitUnpickler\n-from ._storage import reduce_storage\n-from ._tensor import reduce_tensor\n \n+class ConnectionWrapper(object):\n+    \"\"\"Proxy class for _multiprocessing.Connection which uses ForkingPickler to\n+    serialize objects\"\"\"\n \n-def _deserialize_event(handle):\n-    return torch.cuda.Event(_handle=handle)\n+    def __init__(self, conn):\n+        self.conn = conn\n \n+    def send(self, obj):\n+        buf = io.BytesIO()\n+        ForkingPickler(buf, pickle.HIGHEST_PROTOCOL).dump(obj)\n+        self.send_bytes(buf.getvalue())\n \n-def reduce_event(self, event):\n-    return (_deserialize_event, (event.ipc_handle(),))\n+    def recv(self):\n+        buf = self.recv_bytes()\n+        return pickle.loads(buf)\n \n+    def __getattr__(self, name):\n+        return getattr(self.conn, name)\n \n-class Queue(CustomizablePicklingQueue):\n \n-    def __init__(self, context, reducers=None):\n-        if reducers is None:\n-            reducers = {}\n+class Queue(multiprocessing.queues.Queue):\n+    def __init__(self, maxsize=0):", "path": "torch/multiprocessing/queue.py", "position": null, "original_position": 46, "commit_id": "fe300c504147d8947010c885b45d6ad7bca8a3ea", "original_commit_id": "f44dea548f411ab8fda601766b4e7a2c12642758", "user": {"login": "apaszke", "id": 4583066, "node_id": "MDQ6VXNlcjQ1ODMwNjY=", "avatar_url": "https://avatars3.githubusercontent.com/u/4583066?v=4", "gravatar_id": "", "url": "https://api.github.com/users/apaszke", "html_url": "https://github.com/apaszke", "followers_url": "https://api.github.com/users/apaszke/followers", "following_url": "https://api.github.com/users/apaszke/following{/other_user}", "gists_url": "https://api.github.com/users/apaszke/gists{/gist_id}", "starred_url": "https://api.github.com/users/apaszke/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/apaszke/subscriptions", "organizations_url": "https://api.github.com/users/apaszke/orgs", "repos_url": "https://api.github.com/users/apaszke/repos", "events_url": "https://api.github.com/users/apaszke/events{/privacy}", "received_events_url": "https://api.github.com/users/apaszke/received_events", "type": "User", "site_admin": false}, "body": "I'd use `*args, **kwargs` in here. You don't need to access any argument, and I think it's more pythonic to do this in derived classes.", "created_at": "2016-12-26T20:04:39Z", "updated_at": "2018-11-23T15:32:04Z", "html_url": "https://github.com/pytorch/pytorch/pull/344#discussion_r93883045", "pull_request_url": "https://api.github.com/repos/pytorch/pytorch/pulls/344", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/93883045"}, "html": {"href": "https://github.com/pytorch/pytorch/pull/344#discussion_r93883045"}, "pull_request": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/344"}}, "body_html": "<p>I'd use <code>*args, **kwargs</code> in here. You don't need to access any argument, and I think it's more pythonic to do this in derived classes.</p>", "body_text": "I'd use *args, **kwargs in here. You don't need to access any argument, and I think it's more pythonic to do this in derived classes."}