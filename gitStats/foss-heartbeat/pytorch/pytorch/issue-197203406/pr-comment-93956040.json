{"url": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/93956040", "pull_request_review_id": 14486153, "id": 93956040, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDkzOTU2MDQw", "diff_hunk": "@@ -0,0 +1,127 @@\n+import torch\n+import os\n+import weakref\n+import multiprocessing\n+from multiprocessing.reduction import ForkingPickler\n+import sys\n+try:\n+    # Early load resource_sharer to prevent a partially initialized instance\n+    # from being inherited in a forked child process. The reduce_storage method\n+    # requires this module indirectly through DupFd(). The built-in mp.Queue\n+    # class pickles arguments in a background thread which may overlap with the\n+    # fork.\n+    import multiprocessing.resource_sharer\n+except ImportError:\n+    pass\n+\n+\n+class StorageRef(object):\n+    def __init__(self, ptr):\n+        self.cdata = ptr\n+\n+\n+shared_cache = weakref.WeakValueDictionary()\n+\n+\n+def rebuild_event(handle):\n+    return torch.cuda.Event(_handle=handle)\n+\n+\n+def reduce_event(event):\n+    return (rebuild_event, (event.ipc_handle(),))\n+\n+\n+def rebuild_tensor(cls, storage, metadata):\n+    storage_offset, size, stride = metadata\n+    new_tensor = cls()\n+    new_tensor.set_(storage, storage_offset, size, stride)\n+    return new_tensor\n+\n+\n+def reduce_tensor(tensor):\n+    metadata = (tensor.storage_offset(), tensor.size(), tensor.stride())\n+    storage = tensor.storage()\n+    return (rebuild_tensor, (type(tensor), storage, metadata))\n+\n+\n+def fd_id(fd):\n+    stat = os.fstat(fd)\n+    return (stat.st_ino, stat.st_dev)\n+\n+\n+def storage_from_cache(cls, key):\n+    storage_ref = shared_cache.get(key)\n+    if storage_ref is None:\n+        return None\n+    new_storage = cls._new_with_weak_ptr(storage_ref)\n+    if new_storage is None:\n+        return None\n+    new_storage._shared_decref()", "path": "torch/multiprocessing/reductions.py", "position": null, "original_position": 59, "commit_id": "fe300c504147d8947010c885b45d6ad7bca8a3ea", "original_commit_id": "f44dea548f411ab8fda601766b4e7a2c12642758", "user": {"login": "colesbury", "id": 655866, "node_id": "MDQ6VXNlcjY1NTg2Ng==", "avatar_url": "https://avatars1.githubusercontent.com/u/655866?v=4", "gravatar_id": "", "url": "https://api.github.com/users/colesbury", "html_url": "https://github.com/colesbury", "followers_url": "https://api.github.com/users/colesbury/followers", "following_url": "https://api.github.com/users/colesbury/following{/other_user}", "gists_url": "https://api.github.com/users/colesbury/gists{/gist_id}", "starred_url": "https://api.github.com/users/colesbury/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/colesbury/subscriptions", "organizations_url": "https://api.github.com/users/colesbury/orgs", "repos_url": "https://api.github.com/users/colesbury/repos", "events_url": "https://api.github.com/users/colesbury/events{/privacy}", "received_events_url": "https://api.github.com/users/colesbury/received_events", "type": "User", "site_admin": false}, "body": "Hmm... this corresponds to [this line](https://github.com/pytorch/pytorch/pull/344/files/f44dea548f411ab8fda601766b4e7a2c12642758#diff-8d3a695eae058d8a6393278d24d58781L53) in the current code. But calling `decref` when we get it from the cache does seem strange...", "created_at": "2016-12-27T18:04:24Z", "updated_at": "2018-11-23T15:32:06Z", "html_url": "https://github.com/pytorch/pytorch/pull/344#discussion_r93956040", "pull_request_url": "https://api.github.com/repos/pytorch/pytorch/pulls/344", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/93956040"}, "html": {"href": "https://github.com/pytorch/pytorch/pull/344#discussion_r93956040"}, "pull_request": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/344"}}, "body_html": "<p>Hmm... this corresponds to <a href=\"https://github.com/pytorch/pytorch/pull/344/files/f44dea548f411ab8fda601766b4e7a2c12642758#diff-8d3a695eae058d8a6393278d24d58781L53\">this line</a> in the current code. But calling <code>decref</code> when we get it from the cache does seem strange...</p>", "body_text": "Hmm... this corresponds to this line in the current code. But calling decref when we get it from the cache does seem strange...", "in_reply_to_id": 93883133}