{"url": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/93955147", "pull_request_review_id": 14486153, "id": 93955147, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDkzOTU1MTQ3", "diff_hunk": "@@ -67,17 +69,38 @@ def _check_driver():\n \n \n def _lazy_init():\n-    global _initialized, _cudart\n+    global _initialized, _cudart, _original_pid\n     if _initialized:\n         return\n+    if _in_bad_fork:\n+        from sys import version_info\n+        if version_info[0] < 3 or version_info[1] < 4 or True:\n+            msg = (\"To use CUDA with multiprocessing, you must use Python \"\n+                   \"3.4+ and the 'spawn' start method\")\n+        else:\n+            msg = (\"To use CUDA with multiprocessing, you must use the \"\n+                   \"'spawn' start method\")\n+        raise RuntimeError(\n+            \"Cannot re-initialize CUDA in forked subprocess. \" + msg)\n     _check_driver()\n     assert torch._C._cuda_init()\n     _cudart = _load_cudart()\n     _cudart.cudaGetErrorName.restype = ctypes.c_char_p\n     _cudart.cudaGetErrorString.restype = ctypes.c_char_p\n+    _original_pid = os.getpid()\n     _initialized = True\n \n \n+def _after_fork(arg):\n+    global _initialized, _in_bad_fork\n+    if _initialized and _original_pid != os.getpid():\n+        _initialized = False\n+        _in_bad_fork = True\n+\n+\n+_register_after_fork(_after_fork, _after_fork)", "path": "torch/cuda/__init__.py", "position": 49, "original_position": 49, "commit_id": "fe300c504147d8947010c885b45d6ad7bca8a3ea", "original_commit_id": "f44dea548f411ab8fda601766b4e7a2c12642758", "user": {"login": "colesbury", "id": 655866, "node_id": "MDQ6VXNlcjY1NTg2Ng==", "avatar_url": "https://avatars1.githubusercontent.com/u/655866?v=4", "gravatar_id": "", "url": "https://api.github.com/users/colesbury", "html_url": "https://github.com/colesbury", "followers_url": "https://api.github.com/users/colesbury/followers", "following_url": "https://api.github.com/users/colesbury/following{/other_user}", "gists_url": "https://api.github.com/users/colesbury/gists{/gist_id}", "starred_url": "https://api.github.com/users/colesbury/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/colesbury/subscriptions", "organizations_url": "https://api.github.com/users/colesbury/orgs", "repos_url": "https://api.github.com/users/colesbury/repos", "events_url": "https://api.github.com/users/colesbury/events{/privacy}", "received_events_url": "https://api.github.com/users/colesbury/received_events", "type": "User", "site_admin": false}, "body": "I tested it in 2.7 and 3.5. There are some cases where it's not going to catch the error. For example, if a CUDA tensor get's inherited across a fork and an operation is called on the tensor before something that triggers _lazy_init() gets called.\r\n\r\n\"register_after_fork\" isn't a public API, but it exists in 2.7+", "created_at": "2016-12-27T17:53:26Z", "updated_at": "2018-11-23T15:32:06Z", "html_url": "https://github.com/pytorch/pytorch/pull/344#discussion_r93955147", "pull_request_url": "https://api.github.com/repos/pytorch/pytorch/pulls/344", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/93955147"}, "html": {"href": "https://github.com/pytorch/pytorch/pull/344#discussion_r93955147"}, "pull_request": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/344"}}, "body_html": "<p>I tested it in 2.7 and 3.5. There are some cases where it's not going to catch the error. For example, if a CUDA tensor get's inherited across a fork and an operation is called on the tensor before something that triggers _lazy_init() gets called.</p>\n<p>\"register_after_fork\" isn't a public API, but it exists in 2.7+</p>", "body_text": "I tested it in 2.7 and 3.5. There are some cases where it's not going to catch the error. For example, if a CUDA tensor get's inherited across a fork and an operation is called on the tensor before something that triggers _lazy_init() gets called.\n\"register_after_fork\" isn't a public API, but it exists in 2.7+", "in_reply_to_id": 93882877}