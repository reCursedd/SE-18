{"url": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/204500760", "pull_request_review_id": 139589390, "id": 204500760, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwNDUwMDc2MA==", "diff_hunk": "@@ -367,5 +414,87 @@ def allreduce(tensors, op):\n             self.assertEqual(torch.Tensor([self.num_gpus]), tensors[i])\n \n \n+class Net(nn.Module):\n+    def __init__(self):\n+        super(Net, self).__init__()\n+        self.fc1 = nn.Linear(2, 10, bias=False)\n+        self.fc2 = nn.Linear(10, 50, bias=False)\n+        self.fc3 = nn.Linear(50, 4, bias=False)\n+        self.relu = nn.ReLU()\n+\n+    def forward(self, x):\n+        x = self.relu(self.fc1(x))\n+        x = self.relu(self.fc2(x))\n+        x = self.fc3(x)\n+        return F.softmax(x, dim=1)\n+\n+\n+class DistributedDataParallelTest(MultiProcessTestCase):\n+\n+    @property\n+    def size(self):\n+        return 2\n+\n+    def _test_ddp_with_process_group(self, process_group):\n+        gpus = gpus_for_rank(self.size)[self.rank]\n+        model = Net()\n+        ddp_model = distributed_c10d._DistributedDataParallelC10d(\n+            copy.deepcopy(model).cuda(gpus[0]),\n+            process_group,\n+            device_ids=gpus)\n+        model.cuda(gpus[0])\n+\n+        local_batch_size = len(gpus)\n+        global_batch_size = self.size * local_batch_size\n+        criterion = nn.MSELoss()\n+        input = torch.randn(global_batch_size, 2).cuda(gpus[0])\n+        target = torch.randn(global_batch_size, 4).cuda(gpus[0])\n+\n+        def step_model(model, input, target, criterion):\n+            model.train()\n+            output = model(input)\n+            loss = criterion(output, target)\n+            loss.backward()\n+\n+        def update_parameters(model):\n+            for param in model.parameters():\n+                param.data += param.grad", "path": "test/test_c10d.py", "position": null, "original_position": 192, "commit_id": "23e8275f3bacf8cf0cc87ff86d6d854d43dc9045", "original_commit_id": "3b4ca0c5ada39d7985cf64682c2fd54166b9f63a", "user": {"login": "goldsborough", "id": 6429851, "node_id": "MDQ6VXNlcjY0Mjk4NTE=", "avatar_url": "https://avatars3.githubusercontent.com/u/6429851?v=4", "gravatar_id": "", "url": "https://api.github.com/users/goldsborough", "html_url": "https://github.com/goldsborough", "followers_url": "https://api.github.com/users/goldsborough/followers", "following_url": "https://api.github.com/users/goldsborough/following{/other_user}", "gists_url": "https://api.github.com/users/goldsborough/gists{/gist_id}", "starred_url": "https://api.github.com/users/goldsborough/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/goldsborough/subscriptions", "organizations_url": "https://api.github.com/users/goldsborough/orgs", "repos_url": "https://api.github.com/users/goldsborough/repos", "events_url": "https://api.github.com/users/goldsborough/events{/privacy}", "received_events_url": "https://api.github.com/users/goldsborough/received_events", "type": "User", "site_admin": false}, "body": "haha yeah it's just copied from the DDP test case", "created_at": "2018-07-23T18:02:39Z", "updated_at": "2018-11-23T15:47:55Z", "html_url": "https://github.com/pytorch/pytorch/pull/9670#discussion_r204500760", "pull_request_url": "https://api.github.com/repos/pytorch/pytorch/pulls/9670", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/204500760"}, "html": {"href": "https://github.com/pytorch/pytorch/pull/9670#discussion_r204500760"}, "pull_request": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/9670"}}, "body_html": "<p>haha yeah it's just copied from the DDP test case</p>", "body_text": "haha yeah it's just copied from the DDP test case", "in_reply_to_id": 204200831}