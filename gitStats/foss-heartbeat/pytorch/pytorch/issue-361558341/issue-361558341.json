{"url": "https://api.github.com/repos/pytorch/pytorch/issues/11851", "repository_url": "https://api.github.com/repos/pytorch/pytorch", "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/11851/labels{/name}", "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/11851/comments", "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/11851/events", "html_url": "https://github.com/pytorch/pytorch/pull/11851", "id": 361558341, "node_id": "MDExOlB1bGxSZXF1ZXN0MjE2NDk5OTY3", "number": 11851, "title": "[FindCUDA] Workaround CUDA logging on some embedded platforms", "user": {"login": "soumith", "id": 1310570, "node_id": "MDQ6VXNlcjEzMTA1NzA=", "avatar_url": "https://avatars0.githubusercontent.com/u/1310570?v=4", "gravatar_id": "", "url": "https://api.github.com/users/soumith", "html_url": "https://github.com/soumith", "followers_url": "https://api.github.com/users/soumith/followers", "following_url": "https://api.github.com/users/soumith/following{/other_user}", "gists_url": "https://api.github.com/users/soumith/gists{/gist_id}", "starred_url": "https://api.github.com/users/soumith/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/soumith/subscriptions", "organizations_url": "https://api.github.com/users/soumith/orgs", "repos_url": "https://api.github.com/users/soumith/repos", "events_url": "https://api.github.com/users/soumith/events{/privacy}", "received_events_url": "https://api.github.com/users/soumith/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2018-09-19T02:57:01Z", "updated_at": "2018-09-20T16:54:20Z", "closed_at": "2018-09-20T16:27:18Z", "author_association": "MEMBER", "pull_request": {"url": "https://api.github.com/repos/pytorch/pytorch/pulls/11851", "html_url": "https://github.com/pytorch/pytorch/pull/11851", "diff_url": "https://github.com/pytorch/pytorch/pull/11851.diff", "patch_url": "https://github.com/pytorch/pytorch/pull/11851.patch"}, "body_html": "<p><span class=\"issue-keyword tooltipped tooltipped-se\" aria-label=\"This pull request closes issue #11518.\">Fixes</span> <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load issue title\" data-id=\"359113249\" data-permission-text=\"Issue title is private\" data-url=\"https://github.com/pytorch/pytorch/issues/11518\" data-hovercard-type=\"issue\" data-hovercard-url=\"/pytorch/pytorch/issues/11518/hovercard\" href=\"https://github.com/pytorch/pytorch/issues/11518\">#11518</a><br>\nUpstream PR submitted at <a href=\"https://gitlab.kitware.com/cmake/cmake/merge_requests/2400\" rel=\"nofollow\">https://gitlab.kitware.com/cmake/cmake/merge_requests/2400</a></p>\n<p>On some embedded platforms, the NVIDIA driver is verbose logging unexpected output to stdout.<br>\nOne example is Drive PX2, where we see something like this whenever a CUDA program is run:</p>\n<pre><code>nvrm_gpu: Bug 200215060 workaround enabled.\n</code></pre>\n<p>This patch does a regex on the output of the architecture detection program to only capture architecture patterns.<br>\nIt's more robust than before, but not fool-proof.</p>", "body_text": "Fixes #11518\nUpstream PR submitted at https://gitlab.kitware.com/cmake/cmake/merge_requests/2400\nOn some embedded platforms, the NVIDIA driver is verbose logging unexpected output to stdout.\nOne example is Drive PX2, where we see something like this whenever a CUDA program is run:\nnvrm_gpu: Bug 200215060 workaround enabled.\n\nThis patch does a regex on the output of the architecture detection program to only capture architecture patterns.\nIt's more robust than before, but not fool-proof.", "body": "Fixes #11518 \r\nUpstream PR submitted at https://gitlab.kitware.com/cmake/cmake/merge_requests/2400\r\n\r\nOn some embedded platforms, the NVIDIA driver is verbose logging unexpected output to stdout.\r\nOne example is Drive PX2, where we see something like this whenever a CUDA program is run:\r\n\r\n```\r\nnvrm_gpu: Bug 200215060 workaround enabled.\r\n```\r\n\r\nThis patch does a regex on the output of the architecture detection program to only capture architecture patterns.\r\nIt's more robust than before, but not fool-proof."}