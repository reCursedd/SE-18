{"url": "https://api.github.com/repos/pytorch/pytorch/issues/13379", "repository_url": "https://api.github.com/repos/pytorch/pytorch", "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/13379/labels{/name}", "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/13379/comments", "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/13379/events", "html_url": "https://github.com/pytorch/pytorch/issues/13379", "id": 375851783, "node_id": "MDU6SXNzdWUzNzU4NTE3ODM=", "number": 13379, "title": "Dataloader question", "user": {"login": "dccho", "id": 15798952, "node_id": "MDQ6VXNlcjE1Nzk4OTUy", "avatar_url": "https://avatars2.githubusercontent.com/u/15798952?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dccho", "html_url": "https://github.com/dccho", "followers_url": "https://api.github.com/users/dccho/followers", "following_url": "https://api.github.com/users/dccho/following{/other_user}", "gists_url": "https://api.github.com/users/dccho/gists{/gist_id}", "starred_url": "https://api.github.com/users/dccho/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dccho/subscriptions", "organizations_url": "https://api.github.com/users/dccho/orgs", "repos_url": "https://api.github.com/users/dccho/repos", "events_url": "https://api.github.com/users/dccho/events{/privacy}", "received_events_url": "https://api.github.com/users/dccho/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-10-31T08:36:49Z", "updated_at": "2018-11-06T05:25:03Z", "closed_at": "2018-11-06T05:23:49Z", "author_association": "NONE", "body_html": "<p>When using dataloader with multiple workers, each data loading task is assigned to workers in order. If some data need heavy computation such as augmentation to load and some other data need simple computation, sequential assignment may cause task imbalance then some workers finish tasks earlier then other. How about assign new task to worker whose queue is least(it's in function _put_indices)?</p>", "body_text": "When using dataloader with multiple workers, each data loading task is assigned to workers in order. If some data need heavy computation such as augmentation to load and some other data need simple computation, sequential assignment may cause task imbalance then some workers finish tasks earlier then other. How about assign new task to worker whose queue is least(it's in function _put_indices)?", "body": "When using dataloader with multiple workers, each data loading task is assigned to workers in order. If some data need heavy computation such as augmentation to load and some other data need simple computation, sequential assignment may cause task imbalance then some workers finish tasks earlier then other. How about assign new task to worker whose queue is least(it's in function _put_indices)?"}