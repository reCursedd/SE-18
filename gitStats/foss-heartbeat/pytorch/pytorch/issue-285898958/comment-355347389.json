{"url": "https://api.github.com/repos/pytorch/pytorch/issues/comments/355347389", "html_url": "https://github.com/pytorch/pytorch/pull/4471#issuecomment-355347389", "issue_url": "https://api.github.com/repos/pytorch/pytorch/issues/4471", "id": 355347389, "node_id": "MDEyOklzc3VlQ29tbWVudDM1NTM0NzM4OQ==", "user": {"login": "houseroad", "id": 30275821, "node_id": "MDQ6VXNlcjMwMjc1ODIx", "avatar_url": "https://avatars0.githubusercontent.com/u/30275821?v=4", "gravatar_id": "", "url": "https://api.github.com/users/houseroad", "html_url": "https://github.com/houseroad", "followers_url": "https://api.github.com/users/houseroad/followers", "following_url": "https://api.github.com/users/houseroad/following{/other_user}", "gists_url": "https://api.github.com/users/houseroad/gists{/gist_id}", "starred_url": "https://api.github.com/users/houseroad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/houseroad/subscriptions", "organizations_url": "https://api.github.com/users/houseroad/orgs", "repos_url": "https://api.github.com/users/houseroad/repos", "events_url": "https://api.github.com/users/houseroad/events{/privacy}", "received_events_url": "https://api.github.com/users/houseroad/received_events", "type": "User", "site_admin": false}, "created_at": "2018-01-04T17:36:12Z", "updated_at": "2018-01-04T17:36:12Z", "author_association": "MEMBER", "body_html": "<p>I can see leaky_relu_forward by running <code>python test_caffe2.py TestCaffe2BackendEmbed.test_dcgan</code>.</p>\n<pre><code>ERROR: test_dcgan (__main__.TestCaffe2BackendEmbed)\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"/home/lufang/gitrepos/onnx-fb-universe/test/test_pytorch_common.py\", line 27, in wrapper\n    return f(*args, **kwargs)\n  File \"test_caffe2.py\", line 244, in test_dcgan\n    input=input)\n  File \"test_caffe2.py\", line 162, in run_model_test\n    use_gpu=use_gpu_)\n  File \"test_caffe2.py\", line 155, in run_actual_test\n    onnx_pytorch.verify.verify(model, input, c2)\n  File \"/home/lufang/gitrepos/onnx-fb-universe/repos/onnx-pytorch/onnx_pytorch/verify.py\", line 313, in verify\n    torch_out = torch.onnx._export(model, args, proto_bytes, verbose=verbose)\n  File \"/home/lufang/gitrepos/onnx-fb-universe/repos/pytorch/torch/onnx/__init__.py\", line 150, in _export\n    proto = trace.export(list(_unique_state_dict(model).values()), _onnx_opset_version)\nRuntimeError: ONNX export failed: Couldn't export operator leaky_relu_forward\n\nGraph we tried to export:\ngraph(%0 : Float(2, 3, 64, 64)\n      %1 : Float(64, 3, 4, 4)\n      %2 : Float(128, 64, 4, 4)\n      %3 : Float(128)\n      %4 : Float(128)\n      %5 : Float(128)\n      %6 : Float(128)\n      %7 : Float(256, 128, 4, 4)\n      %8 : Float(256)\n      %9 : Float(256)\n      %10 : Float(256)\n      %11 : Float(256)\n      %12 : Float(512, 256, 4, 4)\n      %13 : Float(512)\n      %14 : Float(512)\n      %15 : Float(512)\n      %16 : Float(512)\n      %17 : Float(1, 512, 4, 4)) {\n  %18 : Float(2, 64, 32, 32) = Conv[dilations=[1, 1], group=1, kernel_shape=[4, 4], pads=[1, 1, 1, 1], strides=[2, 2]](%0, %1), scope: _netD/Sequential[main]/Conv2d[0]\n  %19 : Float(2, 64, 32, 32) = leaky_relu_forward[negative_slope={0.2}](%18), scope: _netD/Sequential[main]/LeakyReLU[1]\n  %20 : Float(2, 64, 32, 32) = LeakyRelu[alpha=0.2](%19), scope: _netD/Sequential[main]/LeakyReLU[1]\n  %21 : Float(2, 128, 16, 16) = Conv[dilations=[1, 1], group=1, kernel_shape=[4, 4], pads=[1, 1, 1, 1], strides=[2, 2]](%20, %2), scope: _netD/Sequential[main]/Conv2d[2]\n  %22 : Float(2, 128, 16, 16) = BatchNormalization[consumed_inputs=[0, 0, 0, 1, 1], epsilon=1e-05, is_test=1, momentum=0.9](%21, %3, %4, %5, %6), scope: _netD/Sequential[main]/BatchNorm2d[3]\n  %23 : Float(2, 128, 16, 16) = leaky_relu_forward[negative_slope={0.2}](%22), scope: _netD/Sequential[main]/LeakyReLU[4]\n  %24 : Float(2, 128, 16, 16) = LeakyRelu[alpha=0.2](%23), scope: _netD/Sequential[main]/LeakyReLU[4]\n  %25 : Float(2, 256, 8, 8) = Conv[dilations=[1, 1], group=1, kernel_shape=[4, 4], pads=[1, 1, 1, 1], strides=[2, 2]](%24, %7), scope: _netD/Sequential[main]/Conv2d[5]\n  %26 : Float(2, 256, 8, 8) = BatchNormalization[consumed_inputs=[0, 0, 0, 1, 1], epsilon=1e-05, is_test=1, momentum=0.9](%25, %8, %9, %10, %11), scope: _netD/Sequential[main]/BatchNorm2d[6]\n  %27 : Float(2, 256, 8, 8) = leaky_relu_forward[negative_slope={0.2}](%26), scope: _netD/Sequential[main]/LeakyReLU[7]\n  %28 : Float(2, 256, 8, 8) = LeakyRelu[alpha=0.2](%27), scope: _netD/Sequential[main]/LeakyReLU[7]\n  %29 : Float(2, 512, 4, 4) = Conv[dilations=[1, 1], group=1, kernel_shape=[4, 4], pads=[1, 1, 1, 1], strides=[2, 2]](%28, %12), scope: _netD/Sequential[main]/Conv2d[8]\n  %30 : Float(2, 512, 4, 4) = BatchNormalization[consumed_inputs=[0, 0, 0, 1, 1], epsilon=1e-05, is_test=1, momentum=0.9](%29, %13, %14, %15, %16), scope: _netD/Sequential[main]/BatchNorm2d[9]\n  %31 : Float(2, 512, 4, 4) = leaky_relu_forward[negative_slope={0.2}](%30), scope: _netD/Sequential[main]/LeakyReLU[10]\n  %32 : Float(2, 512, 4, 4) = LeakyRelu[alpha=0.2](%31), scope: _netD/Sequential[main]/LeakyReLU[10]\n  %33 : Float(2, 1, 1, 1) = Conv[dilations=[1, 1], group=1, kernel_shape=[4, 4], pads=[0, 0, 0, 0], strides=[1, 1]](%32, %17), scope: _netD/Sequential[main]/Conv2d[11]\n  %34 : Float(2, 1, 1, 1) = Sigmoid(%33), scope: _netD/Sequential[main]/Sigmoid[12]\n  %35 : Float(2, 1) = Reshape[shape=[-1, 1]](%34), scope: _netD\n  return (%35);\n}\n</code></pre>", "body_text": "I can see leaky_relu_forward by running python test_caffe2.py TestCaffe2BackendEmbed.test_dcgan.\nERROR: test_dcgan (__main__.TestCaffe2BackendEmbed)\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"/home/lufang/gitrepos/onnx-fb-universe/test/test_pytorch_common.py\", line 27, in wrapper\n    return f(*args, **kwargs)\n  File \"test_caffe2.py\", line 244, in test_dcgan\n    input=input)\n  File \"test_caffe2.py\", line 162, in run_model_test\n    use_gpu=use_gpu_)\n  File \"test_caffe2.py\", line 155, in run_actual_test\n    onnx_pytorch.verify.verify(model, input, c2)\n  File \"/home/lufang/gitrepos/onnx-fb-universe/repos/onnx-pytorch/onnx_pytorch/verify.py\", line 313, in verify\n    torch_out = torch.onnx._export(model, args, proto_bytes, verbose=verbose)\n  File \"/home/lufang/gitrepos/onnx-fb-universe/repos/pytorch/torch/onnx/__init__.py\", line 150, in _export\n    proto = trace.export(list(_unique_state_dict(model).values()), _onnx_opset_version)\nRuntimeError: ONNX export failed: Couldn't export operator leaky_relu_forward\n\nGraph we tried to export:\ngraph(%0 : Float(2, 3, 64, 64)\n      %1 : Float(64, 3, 4, 4)\n      %2 : Float(128, 64, 4, 4)\n      %3 : Float(128)\n      %4 : Float(128)\n      %5 : Float(128)\n      %6 : Float(128)\n      %7 : Float(256, 128, 4, 4)\n      %8 : Float(256)\n      %9 : Float(256)\n      %10 : Float(256)\n      %11 : Float(256)\n      %12 : Float(512, 256, 4, 4)\n      %13 : Float(512)\n      %14 : Float(512)\n      %15 : Float(512)\n      %16 : Float(512)\n      %17 : Float(1, 512, 4, 4)) {\n  %18 : Float(2, 64, 32, 32) = Conv[dilations=[1, 1], group=1, kernel_shape=[4, 4], pads=[1, 1, 1, 1], strides=[2, 2]](%0, %1), scope: _netD/Sequential[main]/Conv2d[0]\n  %19 : Float(2, 64, 32, 32) = leaky_relu_forward[negative_slope={0.2}](%18), scope: _netD/Sequential[main]/LeakyReLU[1]\n  %20 : Float(2, 64, 32, 32) = LeakyRelu[alpha=0.2](%19), scope: _netD/Sequential[main]/LeakyReLU[1]\n  %21 : Float(2, 128, 16, 16) = Conv[dilations=[1, 1], group=1, kernel_shape=[4, 4], pads=[1, 1, 1, 1], strides=[2, 2]](%20, %2), scope: _netD/Sequential[main]/Conv2d[2]\n  %22 : Float(2, 128, 16, 16) = BatchNormalization[consumed_inputs=[0, 0, 0, 1, 1], epsilon=1e-05, is_test=1, momentum=0.9](%21, %3, %4, %5, %6), scope: _netD/Sequential[main]/BatchNorm2d[3]\n  %23 : Float(2, 128, 16, 16) = leaky_relu_forward[negative_slope={0.2}](%22), scope: _netD/Sequential[main]/LeakyReLU[4]\n  %24 : Float(2, 128, 16, 16) = LeakyRelu[alpha=0.2](%23), scope: _netD/Sequential[main]/LeakyReLU[4]\n  %25 : Float(2, 256, 8, 8) = Conv[dilations=[1, 1], group=1, kernel_shape=[4, 4], pads=[1, 1, 1, 1], strides=[2, 2]](%24, %7), scope: _netD/Sequential[main]/Conv2d[5]\n  %26 : Float(2, 256, 8, 8) = BatchNormalization[consumed_inputs=[0, 0, 0, 1, 1], epsilon=1e-05, is_test=1, momentum=0.9](%25, %8, %9, %10, %11), scope: _netD/Sequential[main]/BatchNorm2d[6]\n  %27 : Float(2, 256, 8, 8) = leaky_relu_forward[negative_slope={0.2}](%26), scope: _netD/Sequential[main]/LeakyReLU[7]\n  %28 : Float(2, 256, 8, 8) = LeakyRelu[alpha=0.2](%27), scope: _netD/Sequential[main]/LeakyReLU[7]\n  %29 : Float(2, 512, 4, 4) = Conv[dilations=[1, 1], group=1, kernel_shape=[4, 4], pads=[1, 1, 1, 1], strides=[2, 2]](%28, %12), scope: _netD/Sequential[main]/Conv2d[8]\n  %30 : Float(2, 512, 4, 4) = BatchNormalization[consumed_inputs=[0, 0, 0, 1, 1], epsilon=1e-05, is_test=1, momentum=0.9](%29, %13, %14, %15, %16), scope: _netD/Sequential[main]/BatchNorm2d[9]\n  %31 : Float(2, 512, 4, 4) = leaky_relu_forward[negative_slope={0.2}](%30), scope: _netD/Sequential[main]/LeakyReLU[10]\n  %32 : Float(2, 512, 4, 4) = LeakyRelu[alpha=0.2](%31), scope: _netD/Sequential[main]/LeakyReLU[10]\n  %33 : Float(2, 1, 1, 1) = Conv[dilations=[1, 1], group=1, kernel_shape=[4, 4], pads=[0, 0, 0, 0], strides=[1, 1]](%32, %17), scope: _netD/Sequential[main]/Conv2d[11]\n  %34 : Float(2, 1, 1, 1) = Sigmoid(%33), scope: _netD/Sequential[main]/Sigmoid[12]\n  %35 : Float(2, 1) = Reshape[shape=[-1, 1]](%34), scope: _netD\n  return (%35);\n}", "body": "I can see leaky_relu_forward by running `python test_caffe2.py TestCaffe2BackendEmbed.test_dcgan`.\r\n\r\n```\r\nERROR: test_dcgan (__main__.TestCaffe2BackendEmbed)\r\n----------------------------------------------------------------------\r\nTraceback (most recent call last):\r\n  File \"/home/lufang/gitrepos/onnx-fb-universe/test/test_pytorch_common.py\", line 27, in wrapper\r\n    return f(*args, **kwargs)\r\n  File \"test_caffe2.py\", line 244, in test_dcgan\r\n    input=input)\r\n  File \"test_caffe2.py\", line 162, in run_model_test\r\n    use_gpu=use_gpu_)\r\n  File \"test_caffe2.py\", line 155, in run_actual_test\r\n    onnx_pytorch.verify.verify(model, input, c2)\r\n  File \"/home/lufang/gitrepos/onnx-fb-universe/repos/onnx-pytorch/onnx_pytorch/verify.py\", line 313, in verify\r\n    torch_out = torch.onnx._export(model, args, proto_bytes, verbose=verbose)\r\n  File \"/home/lufang/gitrepos/onnx-fb-universe/repos/pytorch/torch/onnx/__init__.py\", line 150, in _export\r\n    proto = trace.export(list(_unique_state_dict(model).values()), _onnx_opset_version)\r\nRuntimeError: ONNX export failed: Couldn't export operator leaky_relu_forward\r\n\r\nGraph we tried to export:\r\ngraph(%0 : Float(2, 3, 64, 64)\r\n      %1 : Float(64, 3, 4, 4)\r\n      %2 : Float(128, 64, 4, 4)\r\n      %3 : Float(128)\r\n      %4 : Float(128)\r\n      %5 : Float(128)\r\n      %6 : Float(128)\r\n      %7 : Float(256, 128, 4, 4)\r\n      %8 : Float(256)\r\n      %9 : Float(256)\r\n      %10 : Float(256)\r\n      %11 : Float(256)\r\n      %12 : Float(512, 256, 4, 4)\r\n      %13 : Float(512)\r\n      %14 : Float(512)\r\n      %15 : Float(512)\r\n      %16 : Float(512)\r\n      %17 : Float(1, 512, 4, 4)) {\r\n  %18 : Float(2, 64, 32, 32) = Conv[dilations=[1, 1], group=1, kernel_shape=[4, 4], pads=[1, 1, 1, 1], strides=[2, 2]](%0, %1), scope: _netD/Sequential[main]/Conv2d[0]\r\n  %19 : Float(2, 64, 32, 32) = leaky_relu_forward[negative_slope={0.2}](%18), scope: _netD/Sequential[main]/LeakyReLU[1]\r\n  %20 : Float(2, 64, 32, 32) = LeakyRelu[alpha=0.2](%19), scope: _netD/Sequential[main]/LeakyReLU[1]\r\n  %21 : Float(2, 128, 16, 16) = Conv[dilations=[1, 1], group=1, kernel_shape=[4, 4], pads=[1, 1, 1, 1], strides=[2, 2]](%20, %2), scope: _netD/Sequential[main]/Conv2d[2]\r\n  %22 : Float(2, 128, 16, 16) = BatchNormalization[consumed_inputs=[0, 0, 0, 1, 1], epsilon=1e-05, is_test=1, momentum=0.9](%21, %3, %4, %5, %6), scope: _netD/Sequential[main]/BatchNorm2d[3]\r\n  %23 : Float(2, 128, 16, 16) = leaky_relu_forward[negative_slope={0.2}](%22), scope: _netD/Sequential[main]/LeakyReLU[4]\r\n  %24 : Float(2, 128, 16, 16) = LeakyRelu[alpha=0.2](%23), scope: _netD/Sequential[main]/LeakyReLU[4]\r\n  %25 : Float(2, 256, 8, 8) = Conv[dilations=[1, 1], group=1, kernel_shape=[4, 4], pads=[1, 1, 1, 1], strides=[2, 2]](%24, %7), scope: _netD/Sequential[main]/Conv2d[5]\r\n  %26 : Float(2, 256, 8, 8) = BatchNormalization[consumed_inputs=[0, 0, 0, 1, 1], epsilon=1e-05, is_test=1, momentum=0.9](%25, %8, %9, %10, %11), scope: _netD/Sequential[main]/BatchNorm2d[6]\r\n  %27 : Float(2, 256, 8, 8) = leaky_relu_forward[negative_slope={0.2}](%26), scope: _netD/Sequential[main]/LeakyReLU[7]\r\n  %28 : Float(2, 256, 8, 8) = LeakyRelu[alpha=0.2](%27), scope: _netD/Sequential[main]/LeakyReLU[7]\r\n  %29 : Float(2, 512, 4, 4) = Conv[dilations=[1, 1], group=1, kernel_shape=[4, 4], pads=[1, 1, 1, 1], strides=[2, 2]](%28, %12), scope: _netD/Sequential[main]/Conv2d[8]\r\n  %30 : Float(2, 512, 4, 4) = BatchNormalization[consumed_inputs=[0, 0, 0, 1, 1], epsilon=1e-05, is_test=1, momentum=0.9](%29, %13, %14, %15, %16), scope: _netD/Sequential[main]/BatchNorm2d[9]\r\n  %31 : Float(2, 512, 4, 4) = leaky_relu_forward[negative_slope={0.2}](%30), scope: _netD/Sequential[main]/LeakyReLU[10]\r\n  %32 : Float(2, 512, 4, 4) = LeakyRelu[alpha=0.2](%31), scope: _netD/Sequential[main]/LeakyReLU[10]\r\n  %33 : Float(2, 1, 1, 1) = Conv[dilations=[1, 1], group=1, kernel_shape=[4, 4], pads=[0, 0, 0, 0], strides=[1, 1]](%32, %17), scope: _netD/Sequential[main]/Conv2d[11]\r\n  %34 : Float(2, 1, 1, 1) = Sigmoid(%33), scope: _netD/Sequential[main]/Sigmoid[12]\r\n  %35 : Float(2, 1) = Reshape[shape=[-1, 1]](%34), scope: _netD\r\n  return (%35);\r\n}\r\n```"}