{"url": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/198364732", "pull_request_review_id": 132282526, "id": 198364732, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5ODM2NDczMg==", "diff_hunk": "@@ -0,0 +1,155 @@\n+#include \"caffe2/operators/onnxifi_op.h\"\n+\n+namespace caffe2 {\n+\n+namespace {\n+\n+void BlobToTensorDescriptor(\n+    const std::string& name,\n+    Workspace* ws,\n+    onnxTensorDescriptor* desc,\n+    std::vector<std::vector<uint64_t>>* shapes) {\n+  const Blob* blob = ws->GetBlob(name);\n+  CAFFE_ENFORCE(blob, \"Blob \", name, \" doesn't exist\");\n+\n+  // Memory type\n+  // We only allow weights to be CPU tensor for now\n+  CAFFE_ENFORCE(\n+      blob->template IsType<TensorCPU>(),\n+      \"Initialization blob \",\n+      name,\n+      \" needs to be TensorCPU\");\n+  desc->memoryType = ONNXIFI_MEMORY_TYPE_CPU;\n+\n+  // Data type\n+  const auto& cpu_tensor = blob->template Get<TensorCPU>();\n+  if (cpu_tensor.template IsType<float>()) {\n+    desc->dataType = ONNXIFI_DATATYPE_FLOAT32;\n+    desc->buffer = reinterpret_cast<onnxPointer>(cpu_tensor.data<float>());\n+  } else if (cpu_tensor.template IsType<int64_t>()) {\n+    desc->dataType = ONNXIFI_DATATYPE_INT64;\n+    desc->buffer = reinterpret_cast<onnxPointer>(cpu_tensor.data<int64_t>());\n+  } else if (cpu_tensor.template IsType<int32_t>()) {\n+    desc->dataType = ONNXIFI_DATATYPE_INT32;\n+    desc->buffer = reinterpret_cast<onnxPointer>(cpu_tensor.data<int32_t>());\n+  }\n+\n+  // Set dims\n+  const auto shape = GetTensorShapeOfBlob(blob);\n+  desc->dimensions = shape.dims_size();\n+  shapes->emplace_back(shape.dims().begin(), shape.dims().end());\n+  auto& shape_tmp = shapes->back();\n+  desc->shape = shapes->back().data();\n+}\n+} // namespace\n+\n+template <>\n+std::vector<onnxTensorDescriptor>\n+OnnxifiOp<float, CPUContext>::BuildInitializationList(\n+    Workspace* ws,\n+    std::unordered_set<std::string>* initialization_list,\n+    std::vector<std::string>* weight_names,\n+    std::vector<std::vector<uint64_t>>* weight_shapes) {\n+  const std::vector<string>& ws_blobs = ws->Blobs();", "path": "caffe2/operators/onnxifi_op.cc", "position": 52, "original_position": 53, "commit_id": "d441bb622ebb16bcc309e6ffb07b51ed43f161ce", "original_commit_id": "c633cc25ea4e14b9b343092a1d2b464c41abaab8", "user": {"login": "yinghai", "id": 1100089, "node_id": "MDQ6VXNlcjExMDAwODk=", "avatar_url": "https://avatars1.githubusercontent.com/u/1100089?v=4", "gravatar_id": "", "url": "https://api.github.com/users/yinghai", "html_url": "https://github.com/yinghai", "followers_url": "https://api.github.com/users/yinghai/followers", "following_url": "https://api.github.com/users/yinghai/following{/other_user}", "gists_url": "https://api.github.com/users/yinghai/gists{/gist_id}", "starred_url": "https://api.github.com/users/yinghai/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/yinghai/subscriptions", "organizations_url": "https://api.github.com/users/yinghai/orgs", "repos_url": "https://api.github.com/users/yinghai/repos", "events_url": "https://api.github.com/users/yinghai/events{/privacy}", "received_events_url": "https://api.github.com/users/yinghai/received_events", "type": "User", "site_admin": false}, "body": "Yes. The reason I have this is that I wanted to do a matching of names between initialization list and workspace blobs. That's why I do the iteration through workspace blobs and O(1) lookup to initialization_list. ", "created_at": "2018-06-27T04:36:57Z", "updated_at": "2018-11-23T15:46:27Z", "html_url": "https://github.com/pytorch/pytorch/pull/8749#discussion_r198364732", "pull_request_url": "https://api.github.com/repos/pytorch/pytorch/pulls/8749", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/198364732"}, "html": {"href": "https://github.com/pytorch/pytorch/pull/8749#discussion_r198364732"}, "pull_request": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/8749"}}, "body_html": "<p>Yes. The reason I have this is that I wanted to do a matching of names between initialization list and workspace blobs. That's why I do the iteration through workspace blobs and O(1) lookup to initialization_list.</p>", "body_text": "Yes. The reason I have this is that I wanted to do a matching of names between initialization list and workspace blobs. That's why I do the iteration through workspace blobs and O(1) lookup to initialization_list.", "in_reply_to_id": 198363535}