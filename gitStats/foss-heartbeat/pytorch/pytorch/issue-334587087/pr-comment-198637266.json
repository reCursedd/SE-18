{"url": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/198637266", "pull_request_review_id": 132604209, "id": 198637266, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5ODYzNzI2Ng==", "diff_hunk": "@@ -0,0 +1,155 @@\n+#include \"caffe2/operators/onnxifi_op.h\"\n+\n+namespace caffe2 {\n+\n+namespace {\n+\n+void BlobToTensorDescriptor(\n+    const std::string& name,\n+    Workspace* ws,\n+    onnxTensorDescriptor* desc,\n+    std::vector<std::vector<uint64_t>>* shapes) {\n+  const Blob* blob = ws->GetBlob(name);\n+  CAFFE_ENFORCE(blob, \"Blob \", name, \" doesn't exist\");\n+\n+  // Memory type\n+  // We only allow weights to be CPU tensor for now\n+  CAFFE_ENFORCE(\n+      blob->template IsType<TensorCPU>(),\n+      \"Initialization blob \",\n+      name,\n+      \" needs to be TensorCPU\");\n+  desc->memoryType = ONNXIFI_MEMORY_TYPE_CPU;\n+\n+  // Data type\n+  const auto& cpu_tensor = blob->template Get<TensorCPU>();\n+  if (cpu_tensor.template IsType<float>()) {\n+    desc->dataType = ONNXIFI_DATATYPE_FLOAT32;\n+    desc->buffer = reinterpret_cast<onnxPointer>(cpu_tensor.data<float>());\n+  } else if (cpu_tensor.template IsType<int64_t>()) {\n+    desc->dataType = ONNXIFI_DATATYPE_INT64;\n+    desc->buffer = reinterpret_cast<onnxPointer>(cpu_tensor.data<int64_t>());\n+  } else if (cpu_tensor.template IsType<int32_t>()) {\n+    desc->dataType = ONNXIFI_DATATYPE_INT32;\n+    desc->buffer = reinterpret_cast<onnxPointer>(cpu_tensor.data<int32_t>());\n+  }\n+\n+  // Set dims\n+  const auto& shape = cpu_tensor.dims();\n+  desc->dimensions = shape.size();\n+  shapes->emplace_back(shape.cbegin(), shape.cend());\n+  auto& shape_tmp = shapes->back();", "path": "caffe2/operators/onnxifi_op.cc", "position": null, "original_position": 41, "commit_id": "d441bb622ebb16bcc309e6ffb07b51ed43f161ce", "original_commit_id": "663c84d685248d8b06f71804972d5e70f5b17bf0", "user": {"login": "Maratyszcza", "id": 1093985, "node_id": "MDQ6VXNlcjEwOTM5ODU=", "avatar_url": "https://avatars1.githubusercontent.com/u/1093985?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Maratyszcza", "html_url": "https://github.com/Maratyszcza", "followers_url": "https://api.github.com/users/Maratyszcza/followers", "following_url": "https://api.github.com/users/Maratyszcza/following{/other_user}", "gists_url": "https://api.github.com/users/Maratyszcza/gists{/gist_id}", "starred_url": "https://api.github.com/users/Maratyszcza/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Maratyszcza/subscriptions", "organizations_url": "https://api.github.com/users/Maratyszcza/orgs", "repos_url": "https://api.github.com/users/Maratyszcza/repos", "events_url": "https://api.github.com/users/Maratyszcza/events{/privacy}", "received_events_url": "https://api.github.com/users/Maratyszcza/received_events", "type": "User", "site_admin": false}, "body": "Unused", "created_at": "2018-06-27T20:53:18Z", "updated_at": "2018-11-23T15:46:29Z", "html_url": "https://github.com/pytorch/pytorch/pull/8749#discussion_r198637266", "pull_request_url": "https://api.github.com/repos/pytorch/pytorch/pulls/8749", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/198637266"}, "html": {"href": "https://github.com/pytorch/pytorch/pull/8749#discussion_r198637266"}, "pull_request": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/8749"}}, "body_html": "<p>Unused</p>", "body_text": "Unused"}