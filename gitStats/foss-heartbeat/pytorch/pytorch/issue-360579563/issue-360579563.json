{"url": "https://api.github.com/repos/pytorch/pytorch/issues/11734", "repository_url": "https://api.github.com/repos/pytorch/pytorch", "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/11734/labels{/name}", "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/11734/comments", "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/11734/events", "html_url": "https://github.com/pytorch/pytorch/issues/11734", "id": 360579563, "node_id": "MDU6SXNzdWUzNjA1Nzk1NjM=", "number": 11734, "title": "Silent failure indexing torch.Tensor with None", "user": {"login": "PetrochukM", "id": 7424737, "node_id": "MDQ6VXNlcjc0MjQ3Mzc=", "avatar_url": "https://avatars2.githubusercontent.com/u/7424737?v=4", "gravatar_id": "", "url": "https://api.github.com/users/PetrochukM", "html_url": "https://github.com/PetrochukM", "followers_url": "https://api.github.com/users/PetrochukM/followers", "following_url": "https://api.github.com/users/PetrochukM/following{/other_user}", "gists_url": "https://api.github.com/users/PetrochukM/gists{/gist_id}", "starred_url": "https://api.github.com/users/PetrochukM/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/PetrochukM/subscriptions", "organizations_url": "https://api.github.com/users/PetrochukM/orgs", "repos_url": "https://api.github.com/users/PetrochukM/repos", "events_url": "https://api.github.com/users/PetrochukM/events{/privacy}", "received_events_url": "https://api.github.com/users/PetrochukM/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-09-15T22:01:12Z", "updated_at": "2018-09-15T22:20:14Z", "closed_at": "2018-09-15T22:20:14Z", "author_association": "NONE", "body_html": "<h2>Issue description</h2>\n<p><code>None</code> passed as an index to a tensor does not throw an error. This causes a silent failure which is not against PyTorch's design goals. Also, this behavior is inconsistent with Python's handling of the same situation.</p>\n<h2>Code example</h2>\n<p>Current behavior</p>\n<pre><code>&gt;&gt;&gt; import torch\n&gt;&gt;&gt; torch.LongTensor([1, 2])[None]\ntensor([[1, 2]])\n</code></pre>\n<p>Expected behavior:</p>\n<pre><code>&gt;&gt;&gt; [1, 2][None]\nTraceback (most recent call last):\n  File \"&lt;stdin&gt;\", line 1, in &lt;module&gt;\nTypeError: list indices must be integers or slices, not NoneType\n</code></pre>", "body_text": "Issue description\nNone passed as an index to a tensor does not throw an error. This causes a silent failure which is not against PyTorch's design goals. Also, this behavior is inconsistent with Python's handling of the same situation.\nCode example\nCurrent behavior\n>>> import torch\n>>> torch.LongTensor([1, 2])[None]\ntensor([[1, 2]])\n\nExpected behavior:\n>>> [1, 2][None]\nTraceback (most recent call last):\n  File \"<stdin>\", line 1, in <module>\nTypeError: list indices must be integers or slices, not NoneType", "body": "## Issue description\r\n\r\n``None`` passed as an index to a tensor does not throw an error. This causes a silent failure which is not against PyTorch's design goals. Also, this behavior is inconsistent with Python's handling of the same situation.\r\n\r\n## Code example\r\n\r\nCurrent behavior\r\n```\r\n>>> import torch\r\n>>> torch.LongTensor([1, 2])[None]\r\ntensor([[1, 2]])\r\n```\r\n\r\nExpected behavior:\r\n```\r\n>>> [1, 2][None]\r\nTraceback (most recent call last):\r\n  File \"<stdin>\", line 1, in <module>\r\nTypeError: list indices must be integers or slices, not NoneType\r\n```\r\n\r\n\r\n"}