{"url": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/205292604", "pull_request_review_id": 140535714, "id": 205292604, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwNTI5MjYwNA==", "diff_hunk": "@@ -40,6 +40,9 @@ void addCUDAGlobalMethods(py::module& m) {\n   m.def(\"num_cuda_devices\", &NumCudaDevices);\n   m.def(\"get_cuda_version\", &CudaVersion);\n   m.def(\"get_cudnn_version\", &cudnnCompiledVersion);\n+  m.def(\"cudnn_convolution_fwd_algo_count\", &CudnnConvolutionFwdAlgoCount);", "path": "caffe2/python/pybind_state_gpu.cc", "position": null, "original_position": 4, "commit_id": "788259c1db2711d914ced69a11c1bba8e47dc344", "original_commit_id": "fbda944f1b3f8509693641370e9a7ff6156515fc", "user": {"login": "bddppq", "id": 9300575, "node_id": "MDQ6VXNlcjkzMDA1NzU=", "avatar_url": "https://avatars2.githubusercontent.com/u/9300575?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bddppq", "html_url": "https://github.com/bddppq", "followers_url": "https://api.github.com/users/bddppq/followers", "following_url": "https://api.github.com/users/bddppq/following{/other_user}", "gists_url": "https://api.github.com/users/bddppq/gists{/gist_id}", "starred_url": "https://api.github.com/users/bddppq/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bddppq/subscriptions", "organizations_url": "https://api.github.com/users/bddppq/orgs", "repos_url": "https://api.github.com/users/bddppq/repos", "events_url": "https://api.github.com/users/bddppq/events{/privacy}", "received_events_url": "https://api.github.com/users/bddppq/received_events", "type": "User", "site_admin": false}, "body": "you can do `m.attr(\"cudnn_convolution_fwd_algo_count\") = py::int_(CUDNN_CONVOLUTION_FWD_ALGO_COUNT);` to avoid making it a function in both python and c++", "created_at": "2018-07-25T23:32:25Z", "updated_at": "2018-11-23T15:48:09Z", "html_url": "https://github.com/pytorch/pytorch/pull/9798#discussion_r205292604", "pull_request_url": "https://api.github.com/repos/pytorch/pytorch/pulls/9798", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/205292604"}, "html": {"href": "https://github.com/pytorch/pytorch/pull/9798#discussion_r205292604"}, "pull_request": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/9798"}}, "body_html": "<p>you can do <code>m.attr(\"cudnn_convolution_fwd_algo_count\") = py::int_(CUDNN_CONVOLUTION_FWD_ALGO_COUNT);</code> to avoid making it a function in both python and c++</p>", "body_text": "you can do m.attr(\"cudnn_convolution_fwd_algo_count\") = py::int_(CUDNN_CONVOLUTION_FWD_ALGO_COUNT); to avoid making it a function in both python and c++"}