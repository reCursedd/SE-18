{"url": "https://api.github.com/repos/pytorch/pytorch/issues/comments/435253577", "html_url": "https://github.com/pytorch/pytorch/issues/9688#issuecomment-435253577", "issue_url": "https://api.github.com/repos/pytorch/pytorch/issues/9688", "id": 435253577, "node_id": "MDEyOklzc3VlQ29tbWVudDQzNTI1MzU3Nw==", "user": {"login": "soumith", "id": 1310570, "node_id": "MDQ6VXNlcjEzMTA1NzA=", "avatar_url": "https://avatars0.githubusercontent.com/u/1310570?v=4", "gravatar_id": "", "url": "https://api.github.com/users/soumith", "html_url": "https://github.com/soumith", "followers_url": "https://api.github.com/users/soumith/followers", "following_url": "https://api.github.com/users/soumith/following{/other_user}", "gists_url": "https://api.github.com/users/soumith/gists{/gist_id}", "starred_url": "https://api.github.com/users/soumith/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/soumith/subscriptions", "organizations_url": "https://api.github.com/users/soumith/orgs", "repos_url": "https://api.github.com/users/soumith/repos", "events_url": "https://api.github.com/users/soumith/events{/privacy}", "received_events_url": "https://api.github.com/users/soumith/received_events", "type": "User", "site_admin": false}, "created_at": "2018-11-02T02:43:04Z", "updated_at": "2018-11-02T02:43:04Z", "author_association": "MEMBER", "body_html": "<p>This is something worth digging into. Principally speaking, we should bring you the behavior you are expecting.<br>\nThe very likely reason for this behavior is the fact that we dont handle masked gradients separately from zeroed gradients. Hence, when we send a <code>grad_output</code> with <code>[0, 1]</code>, grad_sqrt(0) turns into <code>nan</code>.</p>\n<p><a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=6359743\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/albanD\">@albanD</a> do you think there's any interesting solutions we can come up with at the autograd engine level?<br>\nOne thing that seems easy to do for simple pointwise cases is that we mask grad_input as well. But that doesn't work for cases where grad_input starts changing shape</p>", "body_text": "This is something worth digging into. Principally speaking, we should bring you the behavior you are expecting.\nThe very likely reason for this behavior is the fact that we dont handle masked gradients separately from zeroed gradients. Hence, when we send a grad_output with [0, 1], grad_sqrt(0) turns into nan.\n@albanD do you think there's any interesting solutions we can come up with at the autograd engine level?\nOne thing that seems easy to do for simple pointwise cases is that we mask grad_input as well. But that doesn't work for cases where grad_input starts changing shape", "body": "This is something worth digging into. Principally speaking, we should bring you the behavior you are expecting.\r\nThe very likely reason for this behavior is the fact that we dont handle masked gradients separately from zeroed gradients. Hence, when we send a `grad_output` with `[0, 1]`, grad_sqrt(0) turns into `nan`.\r\n\r\n@albanD do you think there's any interesting solutions we can come up with at the autograd engine level?\r\nOne thing that seems easy to do for simple pointwise cases is that we mask grad_input as well. But that doesn't work for cases where grad_input starts changing shape"}