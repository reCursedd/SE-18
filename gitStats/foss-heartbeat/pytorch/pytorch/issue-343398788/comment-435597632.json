{"url": "https://api.github.com/repos/pytorch/pytorch/issues/comments/435597632", "html_url": "https://github.com/pytorch/pytorch/issues/9688#issuecomment-435597632", "issue_url": "https://api.github.com/repos/pytorch/pytorch/issues/9688", "id": 435597632, "node_id": "MDEyOklzc3VlQ29tbWVudDQzNTU5NzYzMg==", "user": {"login": "jwdink", "id": 6982295, "node_id": "MDQ6VXNlcjY5ODIyOTU=", "avatar_url": "https://avatars2.githubusercontent.com/u/6982295?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwdink", "html_url": "https://github.com/jwdink", "followers_url": "https://api.github.com/users/jwdink/followers", "following_url": "https://api.github.com/users/jwdink/following{/other_user}", "gists_url": "https://api.github.com/users/jwdink/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwdink/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwdink/subscriptions", "organizations_url": "https://api.github.com/users/jwdink/orgs", "repos_url": "https://api.github.com/users/jwdink/repos", "events_url": "https://api.github.com/users/jwdink/events{/privacy}", "received_events_url": "https://api.github.com/users/jwdink/received_events", "type": "User", "site_admin": false}, "created_at": "2018-11-03T15:45:54Z", "updated_at": "2018-11-03T16:03:00Z", "author_association": "NONE", "body_html": "<p>Is there anywhere in the documentation where it's stated that these two options, like those in your example (or in mine), will have such different behavior? As it is set-up right now, it feels very much like a \"gotcha.\" The intuition it contradicts is something like:</p>\n<ul>\n<li>When I perform an element-wise operation, I expect to have element-wise gradients.</li>\n<li>If I later exclude the invalid elements before aggregating, then I have excluded those invalid gradients. The result of my aggregation should have a valid gradient.</li>\n</ul>\n<p>I apologize for not stating this intuition more formally, but can you help me understand where this intuition gets things wrong?</p>", "body_text": "Is there anywhere in the documentation where it's stated that these two options, like those in your example (or in mine), will have such different behavior? As it is set-up right now, it feels very much like a \"gotcha.\" The intuition it contradicts is something like:\n\nWhen I perform an element-wise operation, I expect to have element-wise gradients.\nIf I later exclude the invalid elements before aggregating, then I have excluded those invalid gradients. The result of my aggregation should have a valid gradient.\n\nI apologize for not stating this intuition more formally, but can you help me understand where this intuition gets things wrong?", "body": "Is there anywhere in the documentation where it's stated that these two options, like those in your example (or in mine), will have such different behavior? As it is set-up right now, it feels very much like a \"gotcha.\" The intuition it contradicts is something like:\r\n\r\n- When I perform an element-wise operation, I expect to have element-wise gradients. \r\n- If I later exclude the invalid elements before aggregating, then I have excluded those invalid gradients. The result of my aggregation should have a valid gradient.\r\n\r\nI apologize for not stating this intuition more formally, but can you help me understand where this intuition gets things wrong?"}