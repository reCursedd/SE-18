{"url": "https://api.github.com/repos/pytorch/pytorch/issues/comments/400421813", "html_url": "https://github.com/pytorch/pytorch/issues/2530#issuecomment-400421813", "issue_url": "https://api.github.com/repos/pytorch/pytorch/issues/2530", "id": 400421813, "node_id": "MDEyOklzc3VlQ29tbWVudDQwMDQyMTgxMw==", "user": {"login": "pietern", "id": 9845, "node_id": "MDQ6VXNlcjk4NDU=", "avatar_url": "https://avatars3.githubusercontent.com/u/9845?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pietern", "html_url": "https://github.com/pietern", "followers_url": "https://api.github.com/users/pietern/followers", "following_url": "https://api.github.com/users/pietern/following{/other_user}", "gists_url": "https://api.github.com/users/pietern/gists{/gist_id}", "starred_url": "https://api.github.com/users/pietern/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pietern/subscriptions", "organizations_url": "https://api.github.com/users/pietern/orgs", "repos_url": "https://api.github.com/users/pietern/repos", "events_url": "https://api.github.com/users/pietern/events{/privacy}", "received_events_url": "https://api.github.com/users/pietern/received_events", "type": "User", "site_admin": false}, "created_at": "2018-06-26T18:45:11Z", "updated_at": "2018-06-26T18:45:11Z", "author_association": "CONTRIBUTOR", "body_html": "<p><a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=5492121\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/fliman\">@fliman</a> On master when using THD you can run <code>torch.distributed.destroy_process_group()</code> to destruct everything before interpreter shutdown. For 1.0 with c10d all distributed context is captured in Python objects (no more globals) and will be destructed before CUDA shuts down by default (no need for a separate call to destruct it).</p>", "body_text": "@fliman On master when using THD you can run torch.distributed.destroy_process_group() to destruct everything before interpreter shutdown. For 1.0 with c10d all distributed context is captured in Python objects (no more globals) and will be destructed before CUDA shuts down by default (no need for a separate call to destruct it).", "body": "@fliman On master when using THD you can run `torch.distributed.destroy_process_group()` to destruct everything before interpreter shutdown. For 1.0 with c10d all distributed context is captured in Python objects (no more globals) and will be destructed before CUDA shuts down by default (no need for a separate call to destruct it)."}