{"url": "https://api.github.com/repos/pytorch/pytorch/issues/1406", "repository_url": "https://api.github.com/repos/pytorch/pytorch", "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/1406/labels{/name}", "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/1406/comments", "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/1406/events", "html_url": "https://github.com/pytorch/pytorch/issues/1406", "id": 225277196, "node_id": "MDU6SXNzdWUyMjUyNzcxOTY=", "number": 1406, "title": "Check input size for CUDA convolutions", "user": {"login": "colesbury", "id": 655866, "node_id": "MDQ6VXNlcjY1NTg2Ng==", "avatar_url": "https://avatars1.githubusercontent.com/u/655866?v=4", "gravatar_id": "", "url": "https://api.github.com/users/colesbury", "html_url": "https://github.com/colesbury", "followers_url": "https://api.github.com/users/colesbury/followers", "following_url": "https://api.github.com/users/colesbury/following{/other_user}", "gists_url": "https://api.github.com/users/colesbury/gists{/gist_id}", "starred_url": "https://api.github.com/users/colesbury/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/colesbury/subscriptions", "organizations_url": "https://api.github.com/users/colesbury/orgs", "repos_url": "https://api.github.com/users/colesbury/repos", "events_url": "https://api.github.com/users/colesbury/events{/privacy}", "received_events_url": "https://api.github.com/users/colesbury/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 424131849, "node_id": "MDU6TGFiZWw0MjQxMzE4NDk=", "url": "https://api.github.com/repos/pytorch/pytorch/labels/enhancement", "name": "enhancement", "color": "84b6eb", "default": true}, {"id": 443484135, "node_id": "MDU6TGFiZWw0NDM0ODQxMzU=", "url": "https://api.github.com/repos/pytorch/pytorch/labels/high%20priority", "name": "high priority", "color": "F22613", "default": false}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": {"url": "https://api.github.com/repos/pytorch/pytorch/milestones/2", "html_url": "https://github.com/pytorch/pytorch/milestone/2", "labels_url": "https://api.github.com/repos/pytorch/pytorch/milestones/2/labels", "id": 2536200, "node_id": "MDk6TWlsZXN0b25lMjUzNjIwMA==", "number": 2, "title": "v0.2", "description": "", "creator": {"login": "apaszke", "id": 4583066, "node_id": "MDQ6VXNlcjQ1ODMwNjY=", "avatar_url": "https://avatars3.githubusercontent.com/u/4583066?v=4", "gravatar_id": "", "url": "https://api.github.com/users/apaszke", "html_url": "https://github.com/apaszke", "followers_url": "https://api.github.com/users/apaszke/followers", "following_url": "https://api.github.com/users/apaszke/following{/other_user}", "gists_url": "https://api.github.com/users/apaszke/gists{/gist_id}", "starred_url": "https://api.github.com/users/apaszke/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/apaszke/subscriptions", "organizations_url": "https://api.github.com/users/apaszke/orgs", "repos_url": "https://api.github.com/users/apaszke/repos", "events_url": "https://api.github.com/users/apaszke/events{/privacy}", "received_events_url": "https://api.github.com/users/apaszke/received_events", "type": "User", "site_admin": false}, "open_issues": 2, "closed_issues": 34, "state": "closed", "created_at": "2017-05-22T18:19:28Z", "updated_at": "2018-08-06T21:16:06Z", "due_on": "2017-06-04T07:00:00Z", "closed_at": "2018-08-06T21:16:06Z"}, "comments": 6, "created_at": "2017-04-29T18:47:28Z", "updated_at": "2017-06-06T19:42:12Z", "closed_at": "2017-06-06T19:42:12Z", "author_association": "MEMBER", "body_html": "<p>For example:</p>\n<div class=\"highlight highlight-source-python\"><pre><span class=\"pl-k\">import</span> torch\n<span class=\"pl-c1\">input</span> <span class=\"pl-k\">=</span> torch.autograd.Variable(torch.randn(<span class=\"pl-c1\">3</span>, <span class=\"pl-c1\">3</span>, <span class=\"pl-c1\">7</span>, <span class=\"pl-c1\">7</span>))\nx <span class=\"pl-k\">=</span> torch.nn.Conv2d(<span class=\"pl-c1\">1</span>, <span class=\"pl-c1\">10</span>, <span class=\"pl-c1\">3</span>, <span class=\"pl-c1\">3</span>)</pre></div>\n<p>The CPU version correctly gives an error:</p>\n<div class=\"highlight highlight-source-python\"><pre><span class=\"pl-k\">&gt;&gt;</span><span class=\"pl-k\">&gt;</span> x(<span class=\"pl-c1\">input</span>)\n<span class=\"pl-c1\">RuntimeError</span>: Need <span class=\"pl-c1\">input</span> of dimension <span class=\"pl-c1\">4</span> <span class=\"pl-k\">and</span> <span class=\"pl-c1\">input</span>.size[<span class=\"pl-c1\">1</span>] <span class=\"pl-k\">==</span> <span class=\"pl-c1\">1</span> but got <span class=\"pl-c1\">input</span> to be of shape: [<span class=\"pl-c1\">3</span> x <span class=\"pl-c1\">3</span> x <span class=\"pl-c1\">7</span> x <span class=\"pl-c1\">7</span>]</pre></div>\n<p>But the CUDA/cuDNN version gives an ambiguous error <code>RuntimeError: CUDNN_STATUS_BAD_PARAM</code>:</p>\n<div class=\"highlight highlight-source-python\"><pre><span class=\"pl-k\">&gt;&gt;</span><span class=\"pl-k\">&gt;</span> x.cuda()(<span class=\"pl-c1\">input</span>.cuda())\n<span class=\"pl-c1\">RuntimeError</span>: <span class=\"pl-c1\">CUDNN_STATUS_BAD_PARAM</span></pre></div>", "body_text": "For example:\nimport torch\ninput = torch.autograd.Variable(torch.randn(3, 3, 7, 7))\nx = torch.nn.Conv2d(1, 10, 3, 3)\nThe CPU version correctly gives an error:\n>>> x(input)\nRuntimeError: Need input of dimension 4 and input.size[1] == 1 but got input to be of shape: [3 x 3 x 7 x 7]\nBut the CUDA/cuDNN version gives an ambiguous error RuntimeError: CUDNN_STATUS_BAD_PARAM:\n>>> x.cuda()(input.cuda())\nRuntimeError: CUDNN_STATUS_BAD_PARAM", "body": "For example:\r\n\r\n```python\r\nimport torch\r\ninput = torch.autograd.Variable(torch.randn(3, 3, 7, 7))\r\nx = torch.nn.Conv2d(1, 10, 3, 3)\r\n```\r\n\r\nThe CPU version correctly gives an error:\r\n\r\n```python\r\n>>> x(input)\r\nRuntimeError: Need input of dimension 4 and input.size[1] == 1 but got input to be of shape: [3 x 3 x 7 x 7]\r\n```\r\n\r\nBut the CUDA/cuDNN version gives an ambiguous error `RuntimeError: CUDNN_STATUS_BAD_PARAM`:\r\n\r\n```python\r\n>>> x.cuda()(input.cuda())\r\nRuntimeError: CUDNN_STATUS_BAD_PARAM\r\n```"}