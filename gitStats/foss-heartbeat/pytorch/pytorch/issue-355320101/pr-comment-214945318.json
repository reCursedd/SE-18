{"url": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/214945318", "pull_request_review_id": 152103892, "id": 214945318, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIxNDk0NTMxOA==", "diff_hunk": "@@ -141,6 +141,8 @@ def _optimize_graph(graph, operator_export_type):\n     torch._C._jit_pass_peephole(graph)\n     torch._C._jit_pass_lint(graph)\n \n+    # onnx only supports tensors, but 1 / 2 = 0.5 and tensor(1) / tensor(2) = 0\n+    torch._C._jit_pass_prepare_division_for_onnx(graph)", "path": "torch/onnx/utils.py", "position": 5, "original_position": 5, "commit_id": "ac3a92975152f3768c9120ea813760b18e763d65", "original_commit_id": "666eecf19e03183a2060e3982cf7da630560654d", "user": {"login": "zou3519", "id": 5652049, "node_id": "MDQ6VXNlcjU2NTIwNDk=", "avatar_url": "https://avatars3.githubusercontent.com/u/5652049?v=4", "gravatar_id": "", "url": "https://api.github.com/users/zou3519", "html_url": "https://github.com/zou3519", "followers_url": "https://api.github.com/users/zou3519/followers", "following_url": "https://api.github.com/users/zou3519/following{/other_user}", "gists_url": "https://api.github.com/users/zou3519/gists{/gist_id}", "starred_url": "https://api.github.com/users/zou3519/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/zou3519/subscriptions", "organizations_url": "https://api.github.com/users/zou3519/orgs", "repos_url": "https://api.github.com/users/zou3519/repos", "events_url": "https://api.github.com/users/zou3519/events{/privacy}", "received_events_url": "https://api.github.com/users/zou3519/received_events", "type": "User", "site_admin": false}, "body": "There isn't an easy way to do the fixup as part of the `def div` in symbolic.py -- EraseNumberTypes runs before `div` in symbolic gets called. Because of this, `div` doesn't have an easy way to check if it is dividing two numbers or two scalar tensors (it sees two scalar tensors).  The way to distinguish between the two is check the type of the outputs in the graph (LongTensor, LongTensor -> FloatTensor) but `div` doesn't get that information.\r\n\r\nI ended up following @jamesr66a's advice and used `aten::_cast_Float` instead of `onnx::Cast` (thanks James!), let me know if this looks good.", "created_at": "2018-09-04T14:48:49Z", "updated_at": "2018-11-23T15:50:33Z", "html_url": "https://github.com/pytorch/pytorch/pull/11016#discussion_r214945318", "pull_request_url": "https://api.github.com/repos/pytorch/pytorch/pulls/11016", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/214945318"}, "html": {"href": "https://github.com/pytorch/pytorch/pull/11016#discussion_r214945318"}, "pull_request": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/11016"}}, "body_html": "<p>There isn't an easy way to do the fixup as part of the <code>def div</code> in symbolic.py -- EraseNumberTypes runs before <code>div</code> in symbolic gets called. Because of this, <code>div</code> doesn't have an easy way to check if it is dividing two numbers or two scalar tensors (it sees two scalar tensors).  The way to distinguish between the two is check the type of the outputs in the graph (LongTensor, LongTensor -&gt; FloatTensor) but <code>div</code> doesn't get that information.</p>\n<p>I ended up following <a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=4685384\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/jamesr66a\">@jamesr66a</a>'s advice and used <code>aten::_cast_Float</code> instead of <code>onnx::Cast</code> (thanks James!), let me know if this looks good.</p>", "body_text": "There isn't an easy way to do the fixup as part of the def div in symbolic.py -- EraseNumberTypes runs before div in symbolic gets called. Because of this, div doesn't have an easy way to check if it is dividing two numbers or two scalar tensors (it sees two scalar tensors).  The way to distinguish between the two is check the type of the outputs in the graph (LongTensor, LongTensor -> FloatTensor) but div doesn't get that information.\nI ended up following @jamesr66a's advice and used aten::_cast_Float instead of onnx::Cast (thanks James!), let me know if this looks good.", "in_reply_to_id": 214473106}