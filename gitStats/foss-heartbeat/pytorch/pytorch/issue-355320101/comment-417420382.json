{"url": "https://api.github.com/repos/pytorch/pytorch/issues/comments/417420382", "html_url": "https://github.com/pytorch/pytorch/pull/11016#issuecomment-417420382", "issue_url": "https://api.github.com/repos/pytorch/pytorch/issues/11016", "id": 417420382, "node_id": "MDEyOklzc3VlQ29tbWVudDQxNzQyMDM4Mg==", "user": {"login": "zdevito", "id": 370202, "node_id": "MDQ6VXNlcjM3MDIwMg==", "avatar_url": "https://avatars0.githubusercontent.com/u/370202?v=4", "gravatar_id": "", "url": "https://api.github.com/users/zdevito", "html_url": "https://github.com/zdevito", "followers_url": "https://api.github.com/users/zdevito/followers", "following_url": "https://api.github.com/users/zdevito/following{/other_user}", "gists_url": "https://api.github.com/users/zdevito/gists{/gist_id}", "starred_url": "https://api.github.com/users/zdevito/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/zdevito/subscriptions", "organizations_url": "https://api.github.com/users/zdevito/orgs", "repos_url": "https://api.github.com/users/zdevito/repos", "events_url": "https://api.github.com/users/zdevito/events{/privacy}", "received_events_url": "https://api.github.com/users/zdevito/received_events", "type": "User", "site_admin": false}, "created_at": "2018-08-30T18:25:57Z", "updated_at": "2018-08-30T18:25:57Z", "author_association": "CONTRIBUTOR", "body_html": "<p>I think the fix should be:</p>\n<ul>\n<li>In Python 2, use of <code>/</code> should cause a compiler error if <code>from __future__ import division</code> is not imported in the file.</li>\n<li>The <code>/</code> operator is universally set to do \"true\" division for integers, meaning it returns a float.</li>\n<li>(optional, for now) We add the <code>//</code> operator support to script.</li>\n</ul>", "body_text": "I think the fix should be:\n\nIn Python 2, use of / should cause a compiler error if from __future__ import division is not imported in the file.\nThe / operator is universally set to do \"true\" division for integers, meaning it returns a float.\n(optional, for now) We add the // operator support to script.", "body": "I think the fix should be:\r\n\r\n* In Python 2, use of `/` should cause a compiler error if `from __future__ import division` is not imported in the file. \r\n* The `/` operator is universally set to do \"true\" division for integers, meaning it returns a float.\r\n* (optional, for now) We add the `//` operator support to script.\r\n\r\n"}