{"url": "https://api.github.com/repos/pytorch/pytorch/issues/1964", "repository_url": "https://api.github.com/repos/pytorch/pytorch", "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/1964/labels{/name}", "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/1964/comments", "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/1964/events", "html_url": "https://github.com/pytorch/pytorch/issues/1964", "id": 240007802, "node_id": "MDU6SXNzdWUyNDAwMDc4MDI=", "number": 1964, "title": "Cuda compilation path for building extension", "user": {"login": "DarwinSenior", "id": 3981610, "node_id": "MDQ6VXNlcjM5ODE2MTA=", "avatar_url": "https://avatars1.githubusercontent.com/u/3981610?v=4", "gravatar_id": "", "url": "https://api.github.com/users/DarwinSenior", "html_url": "https://github.com/DarwinSenior", "followers_url": "https://api.github.com/users/DarwinSenior/followers", "following_url": "https://api.github.com/users/DarwinSenior/following{/other_user}", "gists_url": "https://api.github.com/users/DarwinSenior/gists{/gist_id}", "starred_url": "https://api.github.com/users/DarwinSenior/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/DarwinSenior/subscriptions", "organizations_url": "https://api.github.com/users/DarwinSenior/orgs", "repos_url": "https://api.github.com/users/DarwinSenior/repos", "events_url": "https://api.github.com/users/DarwinSenior/events{/privacy}", "received_events_url": "https://api.github.com/users/DarwinSenior/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 424131847, "node_id": "MDU6TGFiZWw0MjQxMzE4NDc=", "url": "https://api.github.com/repos/pytorch/pytorch/labels/bug", "name": "bug", "color": "b60205", "default": true}, {"id": 443483881, "node_id": "MDU6TGFiZWw0NDM0ODM4ODE=", "url": "https://api.github.com/repos/pytorch/pytorch/labels/todo", "name": "todo", "color": "c2e0c6", "default": false}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-07-02T12:35:43Z", "updated_at": "2017-07-13T06:21:43Z", "closed_at": null, "author_association": "NONE", "body_html": "<p>I was trying to compile around other people's code with the ffi module.<br>\nMy current system is arch linux and the path for cuda is <code>/opt/cuda</code>.<br>\nAs I found out that the path for create_extension is hard coded to be <code>/usr/local/cuda</code> (debian) and <code>/Developer/NVIDIA/CUDA-*</code>(mac os).<br>\nSo, I hack around a little bit to add</p>\n<div class=\"highlight highlight-source-python\"><pre>        cuda_include_dirs <span class=\"pl-k\">+=</span> glob.glob(<span class=\"pl-s\"><span class=\"pl-pds\">'</span>/opt/cuda/include<span class=\"pl-pds\">'</span></span>)</pre></div>\n<p>to make it compile on my system.</p>\n<p>I think the proper way to do that is make the library path as a configurable parameter like</p>\n<div class=\"highlight highlight-source-python\"><pre><span class=\"pl-k\">def</span> <span class=\"pl-en\">create_extension</span>(<span class=\"pl-smi\">name</span>, <span class=\"pl-smi\">headers</span>, <span class=\"pl-smi\">sources</span>, <span class=\"pl-smi\">verbose</span><span class=\"pl-k\">=</span><span class=\"pl-c1\">True</span>, <span class=\"pl-smi\">with_cuda</span><span class=\"pl-k\">=</span><span class=\"pl-c1\">False</span>,\n                     <span class=\"pl-smi\">cuda_root_dir</span><span class=\"pl-k\">=</span><span class=\"pl-c1\">None</span>, <span class=\"pl-c\"><span class=\"pl-c\">#</span> make it as a parameter</span>\n                     <span class=\"pl-smi\">package</span><span class=\"pl-k\">=</span><span class=\"pl-c1\">False</span>, <span class=\"pl-smi\">relative_to</span><span class=\"pl-k\">=</span><span class=\"pl-s\"><span class=\"pl-pds\">'</span>.<span class=\"pl-pds\">'</span></span>, <span class=\"pl-k\">**</span><span class=\"pl-smi\">kwargs</span>):</pre></div>\n<p>And we could figure out cuda_root_dir (either <code>/opt/cuda</code>, <code>/usr/local/cuda</code>, <code>/Developer/NVIDIA/CUDA-*</code>) by</p>\n<ol>\n<li>supply it as a parameter</li>\n<li>env variable <code>CUDA_ROOT</code></li>\n<li>Figure it out from common system</li>\n</ol>", "body_text": "I was trying to compile around other people's code with the ffi module.\nMy current system is arch linux and the path for cuda is /opt/cuda.\nAs I found out that the path for create_extension is hard coded to be /usr/local/cuda (debian) and /Developer/NVIDIA/CUDA-*(mac os).\nSo, I hack around a little bit to add\n        cuda_include_dirs += glob.glob('/opt/cuda/include')\nto make it compile on my system.\nI think the proper way to do that is make the library path as a configurable parameter like\ndef create_extension(name, headers, sources, verbose=True, with_cuda=False,\n                     cuda_root_dir=None, # make it as a parameter\n                     package=False, relative_to='.', **kwargs):\nAnd we could figure out cuda_root_dir (either /opt/cuda, /usr/local/cuda, /Developer/NVIDIA/CUDA-*) by\n\nsupply it as a parameter\nenv variable CUDA_ROOT\nFigure it out from common system", "body": "I was trying to compile around other people's code with the ffi module. \r\nMy current system is arch linux and the path for cuda is `/opt/cuda`. \r\nAs I found out that the path for create_extension is hard coded to be `/usr/local/cuda` (debian) and `/Developer/NVIDIA/CUDA-*`(mac os). \r\nSo, I hack around a little bit to add\r\n```python\r\n        cuda_include_dirs += glob.glob('/opt/cuda/include')\r\n```\r\nto make it compile on my system.\r\n\r\nI think the proper way to do that is make the library path as a configurable parameter like\r\n\r\n```python\r\ndef create_extension(name, headers, sources, verbose=True, with_cuda=False,\r\n                     cuda_root_dir=None, # make it as a parameter\r\n                     package=False, relative_to='.', **kwargs):\r\n```\r\nAnd we could figure out cuda_root_dir (either `/opt/cuda`, `/usr/local/cuda`, `/Developer/NVIDIA/CUDA-*`) by \r\n1. supply it as a parameter\r\n2. env variable `CUDA_ROOT`\r\n3. Figure it out from common system"}