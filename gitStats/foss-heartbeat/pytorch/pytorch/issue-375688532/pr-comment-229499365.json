{"url": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/229499365", "pull_request_review_id": 170014638, "id": 229499365, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIyOTQ5OTM2NQ==", "diff_hunk": "@@ -623,4 +626,27 @@ inline optional<T> IValue::toOptional() {\n   return this->to<T>();\n }\n \n+inline bool IValue::isSameIdentity(IValue& rhs) {\n+  // we choose to not use memcmp for payload check due to potenntial random padding characters on union type", "path": "aten/src/ATen/core/ivalue.h", "position": null, "original_position": 15, "commit_id": "6d96fa0fa0bcd660fa045591b35a7b1a679b0e9b", "original_commit_id": "861c572ad19b7a495d961658352907b8019b80a6", "user": {"login": "zdevito", "id": 370202, "node_id": "MDQ6VXNlcjM3MDIwMg==", "avatar_url": "https://avatars0.githubusercontent.com/u/370202?v=4", "gravatar_id": "", "url": "https://api.github.com/users/zdevito", "html_url": "https://github.com/zdevito", "followers_url": "https://api.github.com/users/zdevito/followers", "following_url": "https://api.github.com/users/zdevito/following{/other_user}", "gists_url": "https://api.github.com/users/zdevito/gists{/gist_id}", "starred_url": "https://api.github.com/users/zdevito/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/zdevito/subscriptions", "organizations_url": "https://api.github.com/users/zdevito/orgs", "repos_url": "https://api.github.com/users/zdevito/repos", "events_url": "https://api.github.com/users/zdevito/events{/privacy}", "received_events_url": "https://api.github.com/users/zdevito/received_events", "type": "User", "site_admin": false}, "body": "This logic is still a decent interpretation of `is` but will be stabler over time as we add new IValue variants:\r\n\r\n```\r\nreturn is_intrusive_ptr && rhs.is_intrusive_ptr && this->payload.as_intrusive_ptr == rhs.payload.as_intrusive_ptr;\r\n```", "created_at": "2018-10-30T21:50:24Z", "updated_at": "2018-11-23T15:53:53Z", "html_url": "https://github.com/pytorch/pytorch/pull/13336#discussion_r229499365", "pull_request_url": "https://api.github.com/repos/pytorch/pytorch/pulls/13336", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/229499365"}, "html": {"href": "https://github.com/pytorch/pytorch/pull/13336#discussion_r229499365"}, "pull_request": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/13336"}}, "body_html": "<p>This logic is still a decent interpretation of <code>is</code> but will be stabler over time as we add new IValue variants:</p>\n<pre><code>return is_intrusive_ptr &amp;&amp; rhs.is_intrusive_ptr &amp;&amp; this-&gt;payload.as_intrusive_ptr == rhs.payload.as_intrusive_ptr;\n</code></pre>", "body_text": "This logic is still a decent interpretation of is but will be stabler over time as we add new IValue variants:\nreturn is_intrusive_ptr && rhs.is_intrusive_ptr && this->payload.as_intrusive_ptr == rhs.payload.as_intrusive_ptr;"}