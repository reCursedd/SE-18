{"url": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/164505143", "pull_request_review_id": 92286969, "id": 164505143, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE2NDUwNTE0Mw==", "diff_hunk": "@@ -132,71 +134,101 @@ static void THNN_(unfolded_acc_vol)(\n           long outputWidth,\n           long outputHeight)\n {\n-  long nip;\n   real *input_data = THTensor_(data)(input);\n   real *finput_data = THTensor_(data)(finput);\n-\n-//#pragma omp parallel for private(nip)\n-  for (nip = 0; nip < nInputPlane; nip++)\n+#ifdef _OPENMP\n+  int inOmp = omp_in_parallel();\n+  #pragma omp parallel if (!inOmp)\n   {\n-    long kt, kw, kh, t, y, x, it, ix, iy;\n-    for (kt = 0; kt < kT; kt++)\n-    {\n-      for (kh = 0; kh < kH; kh++)\n-      {\n-        for (kw = 0; kw < kW; kw++)\n-        {\n-          real *src = finput_data\n-            + nip * (kT*kH*kW*outputDepth*outputHeight*outputWidth)\n-            + kt  * (kH*kW*outputDepth*outputHeight*outputWidth)\n-            + kh  * (kW*outputDepth*outputHeight*outputWidth)\n-            + kw  * (outputDepth*outputHeight*outputWidth);\n-\n-          real *dst = input_data + nip*(inputDepth*inputHeight*inputWidth);\n-          if (pT > 0 || pH > 0 || pW > 0)\n-          {\n-            for (t = 0; t < outputDepth; t++)\n-            {\n-              it = t*dT - pT + kt;\n-              for (y = 0; y < outputHeight; y++)\n-              {\n-                iy = y*dH - pH + kh;\n-                for (x = 0; x < outputWidth; x++)\n-                {\n-                  ix = x*dW - pW + kw;\n-                  if (it < 0 || it >= inputDepth || iy < 0 || iy >= inputHeight || ix < 0 || ix >= inputWidth)\n-                  {\n-                  }\n-                  else\n-                  {\n-                    real *dst_slice = dst+it*inputHeight*inputWidth+iy*inputWidth+ix;\n-                    THVector_(cadd)(dst_slice, dst_slice, src+t*outputHeight*outputWidth+y*outputWidth+x, 1, 1);\n-                  }\n-                }\n-              }\n-            }\n+    size_t num_threads = omp_get_num_threads();\n+    size_t tid = omp_get_thread_num();\n+    int64_t n = nInputPlane * inputHeight * inputWidth * inputDepth;\n+    int64_t seg_len_tmp = n / num_threads;\n+    int64_t line_index_offset = tid * seg_len_tmp;\n+    int64_t line_seg_len = (tid == num_threads - 1)? (n-line_index_offset) : seg_len_tmp;\n+\n+    long w = line_index_offset % inputWidth + pW;", "path": "aten/src/THNN/generic/VolumetricConvolutionMM.c", "position": null, "original_position": 66, "commit_id": "4560bf28064c53fedaa1602aad691bde6a59b0d2", "original_commit_id": "b9aaf7329e4bcedb882b79c4dc6b1cec3fdc0a88", "user": {"login": "fmassa", "id": 9110200, "node_id": "MDQ6VXNlcjkxMTAyMDA=", "avatar_url": "https://avatars2.githubusercontent.com/u/9110200?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fmassa", "html_url": "https://github.com/fmassa", "followers_url": "https://api.github.com/users/fmassa/followers", "following_url": "https://api.github.com/users/fmassa/following{/other_user}", "gists_url": "https://api.github.com/users/fmassa/gists{/gist_id}", "starred_url": "https://api.github.com/users/fmassa/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fmassa/subscriptions", "organizations_url": "https://api.github.com/users/fmassa/orgs", "repos_url": "https://api.github.com/users/fmassa/repos", "events_url": "https://api.github.com/users/fmassa/events{/privacy}", "received_events_url": "https://api.github.com/users/fmassa/received_events", "type": "User", "site_admin": false}, "body": "I'm surprised to see that we still had instances of `long` in our code.\r\nI think it might be better to replace `long` by `int64_t` all over this file.", "created_at": "2018-01-29T17:35:08Z", "updated_at": "2018-11-23T15:38:41Z", "html_url": "https://github.com/pytorch/pytorch/pull/4824#discussion_r164505143", "pull_request_url": "https://api.github.com/repos/pytorch/pytorch/pulls/4824", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/164505143"}, "html": {"href": "https://github.com/pytorch/pytorch/pull/4824#discussion_r164505143"}, "pull_request": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/4824"}}, "body_html": "<p>I'm surprised to see that we still had instances of <code>long</code> in our code.<br>\nI think it might be better to replace <code>long</code> by <code>int64_t</code> all over this file.</p>", "body_text": "I'm surprised to see that we still had instances of long in our code.\nI think it might be better to replace long by int64_t all over this file."}