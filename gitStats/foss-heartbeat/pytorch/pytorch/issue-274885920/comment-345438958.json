{"url": "https://api.github.com/repos/pytorch/pytorch/issues/comments/345438958", "html_url": "https://github.com/pytorch/pytorch/pull/3756#issuecomment-345438958", "issue_url": "https://api.github.com/repos/pytorch/pytorch/issues/3756", "id": 345438958, "node_id": "MDEyOklzc3VlQ29tbWVudDM0NTQzODk1OA==", "user": {"login": "stefan-it", "id": 20651387, "node_id": "MDQ6VXNlcjIwNjUxMzg3", "avatar_url": "https://avatars1.githubusercontent.com/u/20651387?v=4", "gravatar_id": "", "url": "https://api.github.com/users/stefan-it", "html_url": "https://github.com/stefan-it", "followers_url": "https://api.github.com/users/stefan-it/followers", "following_url": "https://api.github.com/users/stefan-it/following{/other_user}", "gists_url": "https://api.github.com/users/stefan-it/gists{/gist_id}", "starred_url": "https://api.github.com/users/stefan-it/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/stefan-it/subscriptions", "organizations_url": "https://api.github.com/users/stefan-it/orgs", "repos_url": "https://api.github.com/users/stefan-it/repos", "events_url": "https://api.github.com/users/stefan-it/events{/privacy}", "received_events_url": "https://api.github.com/users/stefan-it/received_events", "type": "User", "site_admin": false}, "created_at": "2017-11-18T12:25:32Z", "updated_at": "2017-11-18T12:27:14Z", "author_association": "CONTRIBUTOR", "body_html": "<p>Hi,</p>\n<p>with GCC 7.2 on Arch Linux I get the following error message:</p>\n<div class=\"highlight highlight-source-shell\"><pre>/mnt/Repositories/pytorch/torch/csrc/jit/python_arg_flatten.h:28:80:   required from here\n/mnt/Repositories/pytorch/torch/csrc/utils/hash.h:75:39: error: call of overloaded <span class=\"pl-s\"><span class=\"pl-pds\">'</span>dispatch_hash(const at::ScalarType&amp;)<span class=\"pl-pds\">'</span></span> is ambiguous\n     <span class=\"pl-k\">return</span> _hash_detail::dispatch_hash(o)<span class=\"pl-k\">;</span>\n            <span class=\"pl-k\">~</span>~~~~~~~~~~~~~~~~~~~~~~~~~~^~~\n/mnt/Repositories/pytorch/torch/csrc/utils/hash.h:52:6: note: candidate: decltype <span class=\"pl-s\"><span class=\"pl-pds\">((</span>std<span class=\"pl-k\">::</span>hash<span class=\"pl-k\">&lt;</span>_Tp<span class=\"pl-k\">&gt;</span>()(o)<span class=\"pl-k\">,</span> std<span class=\"pl-k\">::</span>size_t(<span class=\"pl-pds\">))</span></span>) torch::_hash_detail::dispatch_hash(const T<span class=\"pl-k\">&amp;</span>) [with T <span class=\"pl-k\">=</span> at::ScalarType<span class=\"pl-k\">;</span> decltype <span class=\"pl-s\"><span class=\"pl-pds\">((</span>std<span class=\"pl-k\">::</span>hash<span class=\"pl-k\">&lt;</span>_Tp<span class=\"pl-k\">&gt;</span>()(o)<span class=\"pl-k\">,</span> std<span class=\"pl-k\">::</span>size_t(<span class=\"pl-pds\">))</span></span>) <span class=\"pl-k\">=</span> long unsigned int<span class=\"pl-k\">;</span> std::size_t <span class=\"pl-k\">=</span> long unsigned int]\n auto dispatch_hash(const T<span class=\"pl-k\">&amp;</span> o) -<span class=\"pl-k\">&gt;</span> <span class=\"pl-en\">decltype(std::hash&lt;T&gt;</span>()(o), <span class=\"pl-en\">std::size_t</span>()) {\n      ^~~~~~~~~~~~~\n/mnt/Repositories/pytorch/torch/csrc/utils/hash.h:59:68: note: candidate: typename std::enable_if<span class=\"pl-k\">&lt;</span>std::is_enum<span class=\"pl-k\">&lt;</span>_Tp<span class=\"pl-k\">&gt;</span>::value, long unsigned int<span class=\"pl-k\">&gt;</span>::type torch::_hash_detail::dispatch_hash(const T<span class=\"pl-k\">&amp;</span>) [with T <span class=\"pl-k\">=</span> at::ScalarType<span class=\"pl-k\">;</span> typename std::enable_if<span class=\"pl-k\">&lt;</span>std::is_enum<span class=\"pl-k\">&lt;</span>_Tp<span class=\"pl-k\">&gt;</span>::value, long unsigned int<span class=\"pl-k\">&gt;</span>::type <span class=\"pl-k\">=</span> long unsigned int]\n typename std::enable_if<span class=\"pl-k\">&lt;</span>std::is_enum<span class=\"pl-k\">&lt;</span>T<span class=\"pl-k\">&gt;</span>::value, std::size_t<span class=\"pl-k\">&gt;</span>::type dispatch_hash(const T<span class=\"pl-k\">&amp;</span> o) {\n                                                                    ^~~~~~~~~~~~~</pre></div>\n<p>I can reproduce the error message on x64 and ARM64. Should I open a bug report for that?</p>", "body_text": "Hi,\nwith GCC 7.2 on Arch Linux I get the following error message:\n/mnt/Repositories/pytorch/torch/csrc/jit/python_arg_flatten.h:28:80:   required from here\n/mnt/Repositories/pytorch/torch/csrc/utils/hash.h:75:39: error: call of overloaded 'dispatch_hash(const at::ScalarType&)' is ambiguous\n     return _hash_detail::dispatch_hash(o);\n            ~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~\n/mnt/Repositories/pytorch/torch/csrc/utils/hash.h:52:6: note: candidate: decltype ((std::hash<_Tp>()(o), std::size_t())) torch::_hash_detail::dispatch_hash(const T&) [with T = at::ScalarType; decltype ((std::hash<_Tp>()(o), std::size_t())) = long unsigned int; std::size_t = long unsigned int]\n auto dispatch_hash(const T& o) -> decltype(std::hash<T>()(o), std::size_t()) {\n      ^~~~~~~~~~~~~\n/mnt/Repositories/pytorch/torch/csrc/utils/hash.h:59:68: note: candidate: typename std::enable_if<std::is_enum<_Tp>::value, long unsigned int>::type torch::_hash_detail::dispatch_hash(const T&) [with T = at::ScalarType; typename std::enable_if<std::is_enum<_Tp>::value, long unsigned int>::type = long unsigned int]\n typename std::enable_if<std::is_enum<T>::value, std::size_t>::type dispatch_hash(const T& o) {\n                                                                    ^~~~~~~~~~~~~\nI can reproduce the error message on x64 and ARM64. Should I open a bug report for that?", "body": "Hi,\r\n\r\nwith GCC 7.2 on Arch Linux I get the following error message:\r\n\r\n```bash\r\n/mnt/Repositories/pytorch/torch/csrc/jit/python_arg_flatten.h:28:80:   required from here\r\n/mnt/Repositories/pytorch/torch/csrc/utils/hash.h:75:39: error: call of overloaded 'dispatch_hash(const at::ScalarType&)' is ambiguous\r\n     return _hash_detail::dispatch_hash(o);\r\n            ~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~\r\n/mnt/Repositories/pytorch/torch/csrc/utils/hash.h:52:6: note: candidate: decltype ((std::hash<_Tp>()(o), std::size_t())) torch::_hash_detail::dispatch_hash(const T&) [with T = at::ScalarType; decltype ((std::hash<_Tp>()(o), std::size_t())) = long unsigned int; std::size_t = long unsigned int]\r\n auto dispatch_hash(const T& o) -> decltype(std::hash<T>()(o), std::size_t()) {\r\n      ^~~~~~~~~~~~~\r\n/mnt/Repositories/pytorch/torch/csrc/utils/hash.h:59:68: note: candidate: typename std::enable_if<std::is_enum<_Tp>::value, long unsigned int>::type torch::_hash_detail::dispatch_hash(const T&) [with T = at::ScalarType; typename std::enable_if<std::is_enum<_Tp>::value, long unsigned int>::type = long unsigned int]\r\n typename std::enable_if<std::is_enum<T>::value, std::size_t>::type dispatch_hash(const T& o) {\r\n                                                                    ^~~~~~~~~~~~~\r\n```\r\n\r\nI can reproduce the error message on x64 and ARM64. Should I open a bug report for that?"}