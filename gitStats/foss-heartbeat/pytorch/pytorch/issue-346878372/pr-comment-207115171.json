{"url": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/207115171", "pull_request_review_id": 142660250, "id": 207115171, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwNzExNTE3MQ==", "diff_hunk": "@@ -25,13 +25,21 @@ class IDEEPConcatOp final : public IDEEPOperator {\n   virtual ~IDEEPConcatOp() {}\n \n   bool RunOnDevice() override {\n-    const auto& input_zero = Input(INPUT0);\n     auto* output = Output(OUTPUT);\n     TensorCPU* axis_info = OperatorBase::Output<TensorCPU>(AXIS_INFO, CPU);\n \n     vector<itensor> inputs;\n     for (int i = 0; i < InputSize(); ++i) {\n-      inputs.emplace_back(Input(i));\n+      if (OperatorBase::InputBlob(i).template IsType<itensor>()) {\n+        inputs.emplace_back(Input(i));\n+      } else {\n+        CAFFE_ENFORCE(OperatorBase::InputBlob(i).template IsType<TensorCPU>(),\n+                      \"Expect cpu tensor if not itensor\");\n+        auto& tensor_cpu = OperatorBase::Input<Tensor>(i, CPU);\n+        CAFFE_ENFORCE(tensor_cpu.dims().size() == 0 ||\n+                      tensor_cpu.size_from_dim(0) == 0,\n+                      \"Expect zero dim tensor\");", "path": "caffe2/ideep/operators/concat_split_op.cc", "position": 19, "original_position": 19, "commit_id": "406f1bafc343417b64ffbe7fb5ea93570e645b06", "original_commit_id": "df74febfbf2a898d6df8ea8a605cfac7a18f7788", "user": {"login": "jgong5", "id": 8359223, "node_id": "MDQ6VXNlcjgzNTkyMjM=", "avatar_url": "https://avatars3.githubusercontent.com/u/8359223?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jgong5", "html_url": "https://github.com/jgong5", "followers_url": "https://api.github.com/users/jgong5/followers", "following_url": "https://api.github.com/users/jgong5/following{/other_user}", "gists_url": "https://api.github.com/users/jgong5/gists{/gist_id}", "starred_url": "https://api.github.com/users/jgong5/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jgong5/subscriptions", "organizations_url": "https://api.github.com/users/jgong5/orgs", "repos_url": "https://api.github.com/users/jgong5/repos", "events_url": "https://api.github.com/users/jgong5/events{/privacy}", "received_events_url": "https://api.github.com/users/jgong5/received_events", "type": "User", "site_admin": false}, "body": "Ignore 0-dim tensors in concat. Sanity checking to make sure they are with CPU devices.", "created_at": "2018-08-02T06:39:47Z", "updated_at": "2018-11-23T15:48:37Z", "html_url": "https://github.com/pytorch/pytorch/pull/10157#discussion_r207115171", "pull_request_url": "https://api.github.com/repos/pytorch/pytorch/pulls/10157", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/207115171"}, "html": {"href": "https://github.com/pytorch/pytorch/pull/10157#discussion_r207115171"}, "pull_request": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/10157"}}, "body_html": "<p>Ignore 0-dim tensors in concat. Sanity checking to make sure they are with CPU devices.</p>", "body_text": "Ignore 0-dim tensors in concat. Sanity checking to make sure they are with CPU devices."}