{"url": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/210806931", "pull_request_review_id": 147100344, "id": 210806931, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIxMDgwNjkzMQ==", "diff_hunk": "@@ -35,8 +35,54 @@ class UpsampleNearestOp final : public Operator<Context> {\n   USE_OPERATOR_CONTEXT_FUNCTIONS;\n \n   bool RunOnDevice() override {\n-    // No CPU implementation for now\n-    CAFFE_NOT_IMPLEMENTED;\n+    auto translate_idx = [](int ii, int d1, int d2, int d3, int scale_factor) {\n+      int x, y, z, w;\n+      w = ii % d3;\n+      ii = ii/d3;\n+      z = ii % d2;\n+      ii = ii/d2;\n+      y = ii % d1;\n+      ii = ii/d1;\n+      x = ii;\n+      w = w/scale_factor;\n+      z = z/scale_factor;\n+      d2 /= scale_factor;\n+      d3 /= scale_factor;\n+      return (((x*d1+y)*d2)+z)*d3+w;\n+    };\n+\n+    auto& X = Input(0);\n+    auto* Y = Output(0);\n+\n+    vector<TIndex> out_shape;\n+    for (int i = 0; i < X.ndim(); ++i) {\n+      out_shape.push_back(X.dim32(i));\n+    }\n+    out_shape[X.ndim() - 1] *= scale_;\n+    out_shape[X.ndim() - 2] *= scale_;\n+    Y->Resize(out_shape);\n+\n+    int d1;\n+    int d2;\n+    int d3;\n+    if (X.ndim() == 3) {\n+      d1 = Y->dim32(0);\n+      d2 = Y->dim32(1);\n+      d3 = Y->dim32(2);\n+    } else {\n+      d1 = Y->dim32(1);\n+      d2 = Y->dim32(2);\n+      d3 = Y->dim32(3);\n+    }\n+\n+    const float *input_data = X.template data<T>();", "path": "modules/detectron/upsample_nearest_op.h", "position": null, "original_position": 46, "commit_id": "406f1bafc343417b64ffbe7fb5ea93570e645b06", "original_commit_id": "0ede18024b59e054ecb33c736d98f4db57de1fb6", "user": {"login": "BIT-silence", "id": 3357667, "node_id": "MDQ6VXNlcjMzNTc2Njc=", "avatar_url": "https://avatars0.githubusercontent.com/u/3357667?v=4", "gravatar_id": "", "url": "https://api.github.com/users/BIT-silence", "html_url": "https://github.com/BIT-silence", "followers_url": "https://api.github.com/users/BIT-silence/followers", "following_url": "https://api.github.com/users/BIT-silence/following{/other_user}", "gists_url": "https://api.github.com/users/BIT-silence/gists{/gist_id}", "starred_url": "https://api.github.com/users/BIT-silence/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/BIT-silence/subscriptions", "organizations_url": "https://api.github.com/users/BIT-silence/orgs", "repos_url": "https://api.github.com/users/BIT-silence/repos", "events_url": "https://api.github.com/users/BIT-silence/events{/privacy}", "received_events_url": "https://api.github.com/users/BIT-silence/received_events", "type": "User", "site_admin": false}, "body": "const T* input_data = X.template data<T>(); or const float* input_data = X.template data<float>();", "created_at": "2018-08-17T05:20:17Z", "updated_at": "2018-11-23T15:49:35Z", "html_url": "https://github.com/pytorch/pytorch/pull/10157#discussion_r210806931", "pull_request_url": "https://api.github.com/repos/pytorch/pytorch/pulls/10157", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/210806931"}, "html": {"href": "https://github.com/pytorch/pytorch/pull/10157#discussion_r210806931"}, "pull_request": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/10157"}}, "body_html": "<p>const T* input_data = X.template data(); or const float* input_data = X.template data();</p>", "body_text": "const T* input_data = X.template data(); or const float* input_data = X.template data();"}