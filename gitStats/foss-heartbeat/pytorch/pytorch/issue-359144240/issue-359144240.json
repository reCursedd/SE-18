{"url": "https://api.github.com/repos/pytorch/pytorch/issues/11526", "repository_url": "https://api.github.com/repos/pytorch/pytorch", "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/11526/labels{/name}", "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/11526/comments", "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/11526/events", "html_url": "https://github.com/pytorch/pytorch/issues/11526", "id": 359144240, "node_id": "MDU6SXNzdWUzNTkxNDQyNDA=", "number": 11526, "title": "as_strided *sometimes* produces extremely large values", "user": {"login": "JamesFitzpatrickTP", "id": 23082224, "node_id": "MDQ6VXNlcjIzMDgyMjI0", "avatar_url": "https://avatars1.githubusercontent.com/u/23082224?v=4", "gravatar_id": "", "url": "https://api.github.com/users/JamesFitzpatrickTP", "html_url": "https://github.com/JamesFitzpatrickTP", "followers_url": "https://api.github.com/users/JamesFitzpatrickTP/followers", "following_url": "https://api.github.com/users/JamesFitzpatrickTP/following{/other_user}", "gists_url": "https://api.github.com/users/JamesFitzpatrickTP/gists{/gist_id}", "starred_url": "https://api.github.com/users/JamesFitzpatrickTP/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/JamesFitzpatrickTP/subscriptions", "organizations_url": "https://api.github.com/users/JamesFitzpatrickTP/orgs", "repos_url": "https://api.github.com/users/JamesFitzpatrickTP/repos", "events_url": "https://api.github.com/users/JamesFitzpatrickTP/events{/privacy}", "received_events_url": "https://api.github.com/users/JamesFitzpatrickTP/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2018-09-11T17:24:08Z", "updated_at": "2018-09-11T17:36:22Z", "closed_at": "2018-09-11T17:36:22Z", "author_association": "NONE", "body_html": "<h2>Issue description</h2>\n<p>Sometimes, though not all of the time, using as_strided on a float tensor will produce<br>\nnumbers on the order of 10^24 in some elements of the strided tensor, even if the original<br>\ntensor had small values; [-1, 1]. Repetition of the following code example a few times shows this.</p>\n<h2>Code example</h2>\n<pre><code>a = torch.randn(1,8,512,512).float()\nstrides = (2097152, 262144, 512, 1)\ni, j, k, l = strides\nstride = 2\nnew_shape = (1, 8, 256, 256, 3, 3)\nb = a.as_strided(new_shape, (i,j, k*stride, l*stride, k*stride, l*stride))\nfloat(b.sum())\n</code></pre>\n<p>Or, automated...</p>\n<pre><code>lst = []\nfor i in range(100):\n  a = torch.randn(1,8,512,512).float()\n  b = a.as_strided(new_shape, (i,j, k*stride, l*stride, k*stride, l*stride))\n  arr += [float(b.max())]\n</code></pre>\n<h2>System Info</h2>\n<p>PyTorch version: 0.4.1<br>\nIs debug build: No<br>\nCUDA used to build PyTorch: None</p>\n<p>OS: Ubuntu 16.04.3 LTS<br>\nGCC version: (Ubuntu 5.4.0-6ubuntu1~16.04.5) 5.4.0 20160609<br>\nCMake version: Could not collect</p>\n<p>Python version: 3.5<br>\nIs CUDA available: No<br>\nCUDA runtime version: No CUDA<br>\nGPU models and configuration: No CUDA<br>\nNvidia driver version: No CUDA<br>\ncuDNN version: No CUDA</p>\n<p>Versions of relevant libraries:<br>\n[pip] Could not collect<br>\n[conda] Could not collect</p>", "body_text": "Issue description\nSometimes, though not all of the time, using as_strided on a float tensor will produce\nnumbers on the order of 10^24 in some elements of the strided tensor, even if the original\ntensor had small values; [-1, 1]. Repetition of the following code example a few times shows this.\nCode example\na = torch.randn(1,8,512,512).float()\nstrides = (2097152, 262144, 512, 1)\ni, j, k, l = strides\nstride = 2\nnew_shape = (1, 8, 256, 256, 3, 3)\nb = a.as_strided(new_shape, (i,j, k*stride, l*stride, k*stride, l*stride))\nfloat(b.sum())\n\nOr, automated...\nlst = []\nfor i in range(100):\n  a = torch.randn(1,8,512,512).float()\n  b = a.as_strided(new_shape, (i,j, k*stride, l*stride, k*stride, l*stride))\n  arr += [float(b.max())]\n\nSystem Info\nPyTorch version: 0.4.1\nIs debug build: No\nCUDA used to build PyTorch: None\nOS: Ubuntu 16.04.3 LTS\nGCC version: (Ubuntu 5.4.0-6ubuntu1~16.04.5) 5.4.0 20160609\nCMake version: Could not collect\nPython version: 3.5\nIs CUDA available: No\nCUDA runtime version: No CUDA\nGPU models and configuration: No CUDA\nNvidia driver version: No CUDA\ncuDNN version: No CUDA\nVersions of relevant libraries:\n[pip] Could not collect\n[conda] Could not collect", "body": "## Issue description\r\n\r\nSometimes, though not all of the time, using as_strided on a float tensor will produce\r\nnumbers on the order of 10^24 in some elements of the strided tensor, even if the original\r\ntensor had small values; [-1, 1]. Repetition of the following code example a few times shows this.\r\n\r\n## Code example\r\n\r\n```\r\na = torch.randn(1,8,512,512).float()\r\nstrides = (2097152, 262144, 512, 1)\r\ni, j, k, l = strides\r\nstride = 2\r\nnew_shape = (1, 8, 256, 256, 3, 3)\r\nb = a.as_strided(new_shape, (i,j, k*stride, l*stride, k*stride, l*stride))\r\nfloat(b.sum())\r\n```\r\nOr, automated...\r\n\r\n```\r\nlst = []\r\nfor i in range(100):\r\n  a = torch.randn(1,8,512,512).float()\r\n  b = a.as_strided(new_shape, (i,j, k*stride, l*stride, k*stride, l*stride))\r\n  arr += [float(b.max())]\r\n```\r\n## System Info\r\n\r\nPyTorch version: 0.4.1\r\nIs debug build: No\r\nCUDA used to build PyTorch: None\r\n\r\nOS: Ubuntu 16.04.3 LTS\r\nGCC version: (Ubuntu 5.4.0-6ubuntu1~16.04.5) 5.4.0 20160609\r\nCMake version: Could not collect\r\n\r\nPython version: 3.5\r\nIs CUDA available: No\r\nCUDA runtime version: No CUDA\r\nGPU models and configuration: No CUDA\r\nNvidia driver version: No CUDA\r\ncuDNN version: No CUDA\r\n\r\nVersions of relevant libraries:\r\n[pip] Could not collect\r\n[conda] Could not collect"}