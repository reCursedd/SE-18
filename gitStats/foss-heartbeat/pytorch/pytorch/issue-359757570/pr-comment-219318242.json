{"url": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/219318242", "pull_request_review_id": 157467027, "id": 219318242, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIxOTMxODI0Mg==", "diff_hunk": "@@ -137,6 +137,80 @@ const std::exception& ProcessGroupMPI::WorkMPI::exception() const {\n   }\n }\n \n+ProcessGroupMPI::AsyncWork::AsyncWork(\n+    at::Tensor tensor,\n+    MPI_Request request,\n+    int* srcRank)\n+    : tensor_(std::move(tensor)),\n+      request_(request),\n+      srcRank_(srcRank) {\n+  memset(&status_, 0, sizeof(status_));\n+}\n+\n+ProcessGroupMPI::AsyncWork::~AsyncWork() {\n+  if (request_ != MPI_REQUEST_NULL) {\n+    throw std::runtime_error(\n+        \"Attempted destruction of AsyncWork before work has completed\");\n+  }\n+}\n+\n+bool ProcessGroupMPI::AsyncWork::isCompleted() {\n+  if (request_ == MPI_REQUEST_NULL) {\n+    return true;\n+  }\n+\n+  std::unique_lock<std::mutex> globalLock(pgGlobalMutex_);\n+  int flag = 0;\n+  MPI_CHECK(MPI_Test(&request_, &flag, &status_));\n+  if (request_ != MPI_REQUEST_NULL) {\n+    return false;\n+  }\n+\n+  // request_ == MPI_REQUEST_NULL; the work has completed\n+  if (srcRank_ != nullptr) {\n+    *srcRank_ = status_.MPI_SOURCE;\n+  }\n+\n+  return true;\n+}\n+\n+bool ProcessGroupMPI::AsyncWork::isSuccess() const {\n+  if (request_ != MPI_REQUEST_NULL) {\n+    throw std::runtime_error(\n+        \"Invalid call to AsyncWork::isSuccess before work has completed\");\n+  }\n+\n+  return status_.MPI_ERROR == MPI_SUCCESS;\n+}\n+\n+void ProcessGroupMPI::AsyncWork::synchronize() {}\n+\n+bool ProcessGroupMPI::AsyncWork::wait() {\n+  if (request_ == MPI_REQUEST_NULL) {\n+    return true;\n+  }\n+\n+  std::unique_lock<std::mutex> globalLock(pgGlobalMutex_);\n+  MPI_CHECK(MPI_Wait(&request_, &status_));\n+  if (srcRank_ != nullptr && status_.MPI_ERROR == MPI_SUCCESS) {\n+    *srcRank_ = status_.MPI_SOURCE;\n+  }\n+\n+  return status_.MPI_ERROR == MPI_SUCCESS;\n+}\n+\n+const std::exception& ProcessGroupMPI::AsyncWork::exception() const {\n+  if (request_ != MPI_REQUEST_NULL) {\n+    throw std::runtime_error(\n+        \"Invalid call to AsyncWork::exception before work has completed\");\n+  }\n+\n+  std::array<char, MPI_MAX_ERROR_STRING> buf;\n+  int len = buf.size();\n+  MPI_CHECK(MPI_Error_string(status_.MPI_ERROR, buf.data(), &len));\n+  return std::runtime_error(std::string(buf.data(), len));", "path": "torch/lib/c10d/ProcessGroupMPI.cpp", "position": 84, "original_position": 84, "commit_id": "de50a59fe3aacff55aef7493b9da689d5b922a63", "original_commit_id": "de50a59fe3aacff55aef7493b9da689d5b922a63", "user": {"login": "colesbury", "id": 655866, "node_id": "MDQ6VXNlcjY1NTg2Ng==", "avatar_url": "https://avatars1.githubusercontent.com/u/655866?v=4", "gravatar_id": "", "url": "https://api.github.com/users/colesbury", "html_url": "https://github.com/colesbury", "followers_url": "https://api.github.com/users/colesbury/followers", "following_url": "https://api.github.com/users/colesbury/following{/other_user}", "gists_url": "https://api.github.com/users/colesbury/gists{/gist_id}", "starred_url": "https://api.github.com/users/colesbury/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/colesbury/subscriptions", "organizations_url": "https://api.github.com/users/colesbury/orgs", "repos_url": "https://api.github.com/users/colesbury/repos", "events_url": "https://api.github.com/users/colesbury/events{/privacy}", "received_events_url": "https://api.github.com/users/colesbury/received_events", "type": "User", "site_admin": false}, "body": "@pietern this looks wrong: the return type is `const std::exception&` but it's returning a temporary. (There is a compiler warning about this that is hidden by all the other compiler output)", "created_at": "2018-09-20T21:07:29Z", "updated_at": "2018-11-23T15:51:46Z", "html_url": "https://github.com/pytorch/pytorch/pull/11630#discussion_r219318242", "pull_request_url": "https://api.github.com/repos/pytorch/pytorch/pulls/11630", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/219318242"}, "html": {"href": "https://github.com/pytorch/pytorch/pull/11630#discussion_r219318242"}, "pull_request": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/11630"}}, "body_html": "<p><a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=9845\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/pietern\">@pietern</a> this looks wrong: the return type is <code>const std::exception&amp;</code> but it's returning a temporary. (There is a compiler warning about this that is hidden by all the other compiler output)</p>", "body_text": "@pietern this looks wrong: the return type is const std::exception& but it's returning a temporary. (There is a compiler warning about this that is hidden by all the other compiler output)"}