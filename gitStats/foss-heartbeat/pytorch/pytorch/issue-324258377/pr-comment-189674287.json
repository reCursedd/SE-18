{"url": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/189674287", "pull_request_review_id": 121899616, "id": 189674287, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4OTY3NDI4Nw==", "diff_hunk": "@@ -0,0 +1,68 @@\n+#include <torch/parameter_list.h>\n+\n+#include <torch/csrc/autograd/variable.h>\n+\n+#include <functional>\n+#include <type_traits>\n+\n+namespace torch { namespace detail {\n+\n+/// A class that stores const-correct getters to a member variable, accessible\n+/// through a pointer to an object.\n+template <typename T>\n+class MemberRef {\n+ public:\n+  // TODO: Replace with (std/boost/our)::any.\n+  using This = void*;\n+  using ConstThis = const void*;\n+  using Getter = std::function<T&(This)>;\n+  using ConstGetter = std::function<const T&(ConstThis)>;\n+\n+  template <typename Class>\n+  /* implicit */ MemberRef(T Class::*member)\n+      : getter_([member](This self) -> T& {\n+          return static_cast<Class*>(self)->*member;\n+        }),\n+        const_getter_([member](ConstThis self) -> const T& {\n+          return static_cast<const Class*>(self)->*member;\n+        }) {}", "path": "torch/csrc/api/include/torch/detail/member_ref.h", "position": 31, "original_position": 28, "commit_id": "f82bd37e337af4d606efb5adfd6e3a85453f83d5", "original_commit_id": "a478435beb5f154bd8c984a9e6a3611bc1f4b107", "user": {"login": "goldsborough", "id": 6429851, "node_id": "MDQ6VXNlcjY0Mjk4NTE=", "avatar_url": "https://avatars3.githubusercontent.com/u/6429851?v=4", "gravatar_id": "", "url": "https://api.github.com/users/goldsborough", "html_url": "https://github.com/goldsborough", "followers_url": "https://api.github.com/users/goldsborough/followers", "following_url": "https://api.github.com/users/goldsborough/following{/other_user}", "gists_url": "https://api.github.com/users/goldsborough/gists{/gist_id}", "starred_url": "https://api.github.com/users/goldsborough/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/goldsborough/subscriptions", "organizations_url": "https://api.github.com/users/goldsborough/orgs", "repos_url": "https://api.github.com/users/goldsborough/repos", "events_url": "https://api.github.com/users/goldsborough/events{/privacy}", "received_events_url": "https://api.github.com/users/goldsborough/received_events", "type": "User", "site_admin": false}, "body": "Actually, I think this wouldn't work polymorphically would it? Right now, when `this` points to a derived class, but we cast it to the base class inside, it's ok. With just offsets, this would go wrong", "created_at": "2018-05-21T18:28:48Z", "updated_at": "2018-11-23T15:44:25Z", "html_url": "https://github.com/pytorch/pytorch/pull/7663#discussion_r189674287", "pull_request_url": "https://api.github.com/repos/pytorch/pytorch/pulls/7663", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/189674287"}, "html": {"href": "https://github.com/pytorch/pytorch/pull/7663#discussion_r189674287"}, "pull_request": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/7663"}}, "body_html": "<p>Actually, I think this wouldn't work polymorphically would it? Right now, when <code>this</code> points to a derived class, but we cast it to the base class inside, it's ok. With just offsets, this would go wrong</p>", "body_text": "Actually, I think this wouldn't work polymorphically would it? Right now, when this points to a derived class, but we cast it to the base class inside, it's ok. With just offsets, this would go wrong", "in_reply_to_id": 189469280}