{"url": "https://api.github.com/repos/pytorch/pytorch/issues/comments/351190644", "html_url": "https://github.com/pytorch/pytorch/pull/4127#issuecomment-351190644", "issue_url": "https://api.github.com/repos/pytorch/pytorch/issues/4127", "id": 351190644, "node_id": "MDEyOklzc3VlQ29tbWVudDM1MTE5MDY0NA==", "user": {"login": "ezyang", "id": 13564, "node_id": "MDQ6VXNlcjEzNTY0", "avatar_url": "https://avatars0.githubusercontent.com/u/13564?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ezyang", "html_url": "https://github.com/ezyang", "followers_url": "https://api.github.com/users/ezyang/followers", "following_url": "https://api.github.com/users/ezyang/following{/other_user}", "gists_url": "https://api.github.com/users/ezyang/gists{/gist_id}", "starred_url": "https://api.github.com/users/ezyang/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ezyang/subscriptions", "organizations_url": "https://api.github.com/users/ezyang/orgs", "repos_url": "https://api.github.com/users/ezyang/repos", "events_url": "https://api.github.com/users/ezyang/events{/privacy}", "received_events_url": "https://api.github.com/users/ezyang/received_events", "type": "User", "site_admin": false}, "created_at": "2017-12-12T20:53:08Z", "updated_at": "2017-12-12T20:53:08Z", "author_association": "CONTRIBUTOR", "body_html": "<blockquote>\n<p>I don't think native vs. not-native is the right way to distinguish how to take a derivative in the first place. You can have a native function in ATen that needs a derivative to be defined, we probably just haven't written one yet. I think it is up to derivatives.yaml to say which functions are just compositions and should be fallthroughs.</p>\n</blockquote>\n<p>I thought about this some more and I still don't see how you can avoid whether or not something is 'native' or not leaking from ATen. Because even if you declare something as a composition it explicitly in <code>derivatives.yaml</code>, whether or not this fact is true or not depends on how it was actually implemented in ATen.</p>", "body_text": "I don't think native vs. not-native is the right way to distinguish how to take a derivative in the first place. You can have a native function in ATen that needs a derivative to be defined, we probably just haven't written one yet. I think it is up to derivatives.yaml to say which functions are just compositions and should be fallthroughs.\n\nI thought about this some more and I still don't see how you can avoid whether or not something is 'native' or not leaking from ATen. Because even if you declare something as a composition it explicitly in derivatives.yaml, whether or not this fact is true or not depends on how it was actually implemented in ATen.", "body": "> I don't think native vs. not-native is the right way to distinguish how to take a derivative in the first place. You can have a native function in ATen that needs a derivative to be defined, we probably just haven't written one yet. I think it is up to derivatives.yaml to say which functions are just compositions and should be fallthroughs. \r\n\r\nI thought about this some more and I still don't see how you can avoid whether or not something is 'native' or not leaking from ATen. Because even if you declare something as a composition it explicitly in `derivatives.yaml`, whether or not this fact is true or not depends on how it was actually implemented in ATen."}