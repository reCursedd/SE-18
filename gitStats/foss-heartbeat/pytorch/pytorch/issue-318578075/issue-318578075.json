{"url": "https://api.github.com/repos/pytorch/pytorch/issues/7056", "repository_url": "https://api.github.com/repos/pytorch/pytorch", "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/7056/labels{/name}", "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/7056/comments", "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/7056/events", "html_url": "https://github.com/pytorch/pytorch/pull/7056", "id": 318578075, "node_id": "MDExOlB1bGxSZXF1ZXN0MTg0NzQ5MTEz", "number": 7056, "title": "Updates collapseDims() function and documentation", "user": {"login": "mruberry", "id": 38511765, "node_id": "MDQ6VXNlcjM4NTExNzY1", "avatar_url": "https://avatars3.githubusercontent.com/u/38511765?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mruberry", "html_url": "https://github.com/mruberry", "followers_url": "https://api.github.com/users/mruberry/followers", "following_url": "https://api.github.com/users/mruberry/following{/other_user}", "gists_url": "https://api.github.com/users/mruberry/gists{/gist_id}", "starred_url": "https://api.github.com/users/mruberry/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mruberry/subscriptions", "organizations_url": "https://api.github.com/users/mruberry/orgs", "repos_url": "https://api.github.com/users/mruberry/repos", "events_url": "https://api.github.com/users/mruberry/events{/privacy}", "received_events_url": "https://api.github.com/users/mruberry/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 11, "created_at": "2018-04-27T23:38:50Z", "updated_at": "2018-11-23T15:43:22Z", "closed_at": "2018-05-13T03:42:56Z", "author_association": "CONTRIBUTOR", "pull_request": {"url": "https://api.github.com/repos/pytorch/pytorch/pulls/7056", "html_url": "https://github.com/pytorch/pytorch/pull/7056", "diff_url": "https://github.com/pytorch/pytorch/pull/7056.diff", "patch_url": "https://github.com/pytorch/pytorch/pull/7056.patch"}, "body_html": "<p>The collapseDims() function was correctly implemented but it...</p>\n<p>(1) made four passes over its inputs<br>\n(2) created two new (very tiny) arrays<br>\n(3) was very long</p>\n<p>This new version collapses the TensorInfo's dimensions with a single pass and only four ints of storage. It is significantly shorter. The function's documentation has also been updated to clarify its effect and return values.</p>\n<p>As additional testing, while running the automated test_cuda.py tests the results of this collapseDims() were compared with the version in Master and no differences reported. That is, the changes made by each were the same. This additional testing is important because it is possible that collapseDims() could be rewritten to do nothing and many (all?) tests would still pass.</p>\n<p>Automated testing: test_cuda.py (OK), test_nn.py (no regression from master)</p>", "body_text": "The collapseDims() function was correctly implemented but it...\n(1) made four passes over its inputs\n(2) created two new (very tiny) arrays\n(3) was very long\nThis new version collapses the TensorInfo's dimensions with a single pass and only four ints of storage. It is significantly shorter. The function's documentation has also been updated to clarify its effect and return values.\nAs additional testing, while running the automated test_cuda.py tests the results of this collapseDims() were compared with the version in Master and no differences reported. That is, the changes made by each were the same. This additional testing is important because it is possible that collapseDims() could be rewritten to do nothing and many (all?) tests would still pass.\nAutomated testing: test_cuda.py (OK), test_nn.py (no regression from master)", "body": "The collapseDims() function was correctly implemented but it...\r\n\r\n(1) made four passes over its inputs\r\n(2) created two new (very tiny) arrays\r\n(3) was very long\r\n\r\nThis new version collapses the TensorInfo's dimensions with a single pass and only four ints of storage. It is significantly shorter. The function's documentation has also been updated to clarify its effect and return values.\r\n\r\nAs additional testing, while running the automated test_cuda.py tests the results of this collapseDims() were compared with the version in Master and no differences reported. That is, the changes made by each were the same. This additional testing is important because it is possible that collapseDims() could be rewritten to do nothing and many (all?) tests would still pass.\r\n\r\nAutomated testing: test_cuda.py (OK), test_nn.py (no regression from master) "}