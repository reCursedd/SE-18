{"url": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/85429725", "pull_request_review_id": 6147953, "id": 85429725, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDg1NDI5NzI1", "diff_hunk": "@@ -2061,12 +2061,12 @@ def test_view(self):\n         tensor = torch.rand(15)\n         template = torch.rand(3, 5)\n         empty = torch.Tensor()\n-        target = template.size().tolist()\n-        self.assertEqual(tensor.view_as(template).size().tolist(), target)\n-        self.assertEqual(tensor.view(3, 5).size().tolist(), target)\n-        self.assertEqual(tensor.view(torch.LongStorage((3, 5))).size().tolist(), target)\n-        self.assertEqual(tensor.view(-1, 5).size().tolist(), target)\n-        self.assertEqual(tensor.view(3, -1).size().tolist(), target)\n+        target = template.size()\n+        self.assertEqual(tensor.view_as(template).size(), target)\n+        self.assertEqual(tensor.view(3, 5).size(), target)\n+        self.assertEqual(tensor.view(torch.Size([3, 5])).size(), target)", "path": "test/test_torch.py", "position": 22, "original_position": 22, "commit_id": "de5a6404f47ba46190345635b45fc317874fb374", "original_commit_id": "485b76e81083ab62d2e626259dc904a653c96310", "user": {"login": "colesbury", "id": 655866, "node_id": "MDQ6VXNlcjY1NTg2Ng==", "avatar_url": "https://avatars1.githubusercontent.com/u/655866?v=4", "gravatar_id": "", "url": "https://api.github.com/users/colesbury", "html_url": "https://github.com/colesbury", "followers_url": "https://api.github.com/users/colesbury/followers", "following_url": "https://api.github.com/users/colesbury/following{/other_user}", "gists_url": "https://api.github.com/users/colesbury/gists{/gist_id}", "starred_url": "https://api.github.com/users/colesbury/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/colesbury/subscriptions", "organizations_url": "https://api.github.com/users/colesbury/orgs", "repos_url": "https://api.github.com/users/colesbury/repos", "events_url": "https://api.github.com/users/colesbury/events{/privacy}", "received_events_url": "https://api.github.com/users/colesbury/received_events", "type": "User", "site_admin": false}, "body": "I think accepting a sequence better follows Python conventions. All the python collection constructors tkae a sequence rather than varargs. (For example, you write `set([1, 2, 3])`, not `set(1, 2, 3)`)\n", "created_at": "2016-10-27T21:17:50Z", "updated_at": "2018-11-23T15:31:49Z", "html_url": "https://github.com/pytorch/pytorch/pull/171#discussion_r85429725", "pull_request_url": "https://api.github.com/repos/pytorch/pytorch/pulls/171", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/85429725"}, "html": {"href": "https://github.com/pytorch/pytorch/pull/171#discussion_r85429725"}, "pull_request": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/171"}}, "body_html": "<p>I think accepting a sequence better follows Python conventions. All the python collection constructors tkae a sequence rather than varargs. (For example, you write <code>set([1, 2, 3])</code>, not <code>set(1, 2, 3)</code>)</p>", "body_text": "I think accepting a sequence better follows Python conventions. All the python collection constructors tkae a sequence rather than varargs. (For example, you write set([1, 2, 3]), not set(1, 2, 3))", "in_reply_to_id": 85426705}