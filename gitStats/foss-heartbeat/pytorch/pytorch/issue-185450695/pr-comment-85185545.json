{"url": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/85185545", "pull_request_review_id": 5915525, "id": 85185545, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDg1MTg1NTQ1", "diff_hunk": "@@ -1299,18 +1344,36 @@ static PyObject * THPTensor_(map2)(THPTensor *self, PyObject *args)\n     - THTensor* self\n ]]\n \n+PyObject * THPTensor_(size)(PyObject *self, PyObject *args, PyObject *kwargs)\n+{\n+   THTensor* tensor = ((THPTensor*)self)->cdata;\n+   if (PyTuple_Size(args) == 0 && (!kwargs || PyDict_Size(kwargs) == 0)) {\n+      return THPSize_New(tensor->nDimension, tensor->size);\n+   }\n+\n+   int tuplecount = args ? PyTuple_Size(args) : 0;\n+   int dictcount = kwargs ? PyDict_Size(kwargs) : 0;\n+\n+   PyObject* pydim = NULL;\n+   if (tuplecount == 1 && dictcount == 0) {\n+      pydim = PyTuple_GET_ITEM(args, 0);\n+   } else if (dictcount == 1 && tuplecount == 0) {\n+      pydim = PyDict_GetItemString(kwargs, \"dim\");\n+   }\n+\n+   if (pydim && THPUtils_checkLong(pydim)) {\n+      int dim = (int)THPUtils_unpackLong(pydim);\n+      return PyInt_FromLong(THTensor_(size)(LIBRARY_STATE tensor, dim));\n+   }\n+\n+   THPUtils_invalidArguments(args, \"size\", 2, \"(int dim)\", \"no arguments\");\n+   return NULL;\n+}\n [[\n-  name: size\n-  options:\n-    - return: long\n-      cname: size\n-      arguments:\n-        - THTensor* self\n-        - long dim\n-    - return: THLongStorage*", "path": "torch/csrc/generic/TensorMethods.cwrap", "position": 149, "original_position": 176, "commit_id": "de5a6404f47ba46190345635b45fc317874fb374", "original_commit_id": "2d4a11b019857dafe1c306092d1ab8b88a2066e9", "user": {"login": "apaszke", "id": 4583066, "node_id": "MDQ6VXNlcjQ1ODMwNjY=", "avatar_url": "https://avatars3.githubusercontent.com/u/4583066?v=4", "gravatar_id": "", "url": "https://api.github.com/users/apaszke", "html_url": "https://github.com/apaszke", "followers_url": "https://api.github.com/users/apaszke/followers", "following_url": "https://api.github.com/users/apaszke/following{/other_user}", "gists_url": "https://api.github.com/users/apaszke/gists{/gist_id}", "starred_url": "https://api.github.com/users/apaszke/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/apaszke/subscriptions", "organizations_url": "https://api.github.com/users/apaszke/orgs", "repos_url": "https://api.github.com/users/apaszke/repos", "events_url": "https://api.github.com/users/apaszke/events{/privacy}", "received_events_url": "https://api.github.com/users/apaszke/received_events", "type": "User", "site_admin": false}, "body": "Ok, fair enough.\n", "created_at": "2016-10-26T18:11:34Z", "updated_at": "2018-11-23T15:31:48Z", "html_url": "https://github.com/pytorch/pytorch/pull/171#discussion_r85185545", "pull_request_url": "https://api.github.com/repos/pytorch/pytorch/pulls/171", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/85185545"}, "html": {"href": "https://github.com/pytorch/pytorch/pull/171#discussion_r85185545"}, "pull_request": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/171"}}, "body_html": "<p>Ok, fair enough.</p>", "body_text": "Ok, fair enough.", "in_reply_to_id": 85172240}