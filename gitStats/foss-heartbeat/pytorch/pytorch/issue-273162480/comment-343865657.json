{"url": "https://api.github.com/repos/pytorch/pytorch/issues/comments/343865657", "html_url": "https://github.com/pytorch/pytorch/issues/3644#issuecomment-343865657", "issue_url": "https://api.github.com/repos/pytorch/pytorch/issues/3644", "id": 343865657, "node_id": "MDEyOklzc3VlQ29tbWVudDM0Mzg2NTY1Nw==", "user": {"login": "mys007", "id": 5921083, "node_id": "MDQ6VXNlcjU5MjEwODM=", "avatar_url": "https://avatars2.githubusercontent.com/u/5921083?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mys007", "html_url": "https://github.com/mys007", "followers_url": "https://api.github.com/users/mys007/followers", "following_url": "https://api.github.com/users/mys007/following{/other_user}", "gists_url": "https://api.github.com/users/mys007/gists{/gist_id}", "starred_url": "https://api.github.com/users/mys007/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mys007/subscriptions", "organizations_url": "https://api.github.com/users/mys007/orgs", "repos_url": "https://api.github.com/users/mys007/repos", "events_url": "https://api.github.com/users/mys007/events{/privacy}", "received_events_url": "https://api.github.com/users/mys007/received_events", "type": "User", "site_admin": false}, "created_at": "2017-11-13T09:46:25Z", "updated_at": "2017-11-13T09:46:44Z", "author_association": "CONTRIBUTOR", "body_html": "<p><a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=5652049\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/zou3519\">@zou3519</a> Indeed, I used exp for this blowing-up purpose, which is however fairly common if you use softmax and train to convergence. But the effect also happens if you'll have <code>input = torch.randn(n,c) * 0.01</code>, albeit one doesn't reach such high exponents.</p>", "body_text": "@zou3519 Indeed, I used exp for this blowing-up purpose, which is however fairly common if you use softmax and train to convergence. But the effect also happens if you'll have input = torch.randn(n,c) * 0.01, albeit one doesn't reach such high exponents.", "body": "@zou3519 Indeed, I used exp for this blowing-up purpose, which is however fairly common if you use softmax and train to convergence. But the effect also happens if you'll have `input = torch.randn(n,c) * 0.01`, albeit one doesn't reach such high exponents."}