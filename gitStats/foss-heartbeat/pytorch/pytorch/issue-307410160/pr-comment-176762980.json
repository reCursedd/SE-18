{"url": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/176762980", "pull_request_review_id": 106527870, "id": 176762980, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE3Njc2Mjk4MA==", "diff_hunk": "@@ -232,7 +232,7 @@ static void test(Type & type) {\n     for (int64_t i = 0; i < tensor.numel(); ++i) {\n       REQUIRE(tensor[i].equal(one * i));\n     }\n-    for (size_t i = 0; i < tensor.numel(); ++i) {\n+    for (size_t i = 0; i < (uint64_t) tensor.numel(); ++i) {", "path": "aten/src/ATen/test/basic.cpp", "position": null, "original_position": 5, "commit_id": "c2495181b48e563ca2e469ea3e4a5ec7d53d1ede", "original_commit_id": "981e339e52db36eb9859d71e37279e91d4b6b784", "user": {"login": "ezyang", "id": 13564, "node_id": "MDQ6VXNlcjEzNTY0", "avatar_url": "https://avatars0.githubusercontent.com/u/13564?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ezyang", "html_url": "https://github.com/ezyang", "followers_url": "https://api.github.com/users/ezyang/followers", "following_url": "https://api.github.com/users/ezyang/following{/other_user}", "gists_url": "https://api.github.com/users/ezyang/gists{/gist_id}", "starred_url": "https://api.github.com/users/ezyang/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ezyang/subscriptions", "organizations_url": "https://api.github.com/users/ezyang/orgs", "repos_url": "https://api.github.com/users/ezyang/repos", "events_url": "https://api.github.com/users/ezyang/events{/privacy}", "received_events_url": "https://api.github.com/users/ezyang/received_events", "type": "User", "site_admin": false}, "body": "More idiomatic, and inline with the code below, is `static_cast<uint64_t>(tensor.numel())`", "created_at": "2018-03-23T15:00:56Z", "updated_at": "2018-11-23T15:41:02Z", "html_url": "https://github.com/pytorch/pytorch/pull/5927#discussion_r176762980", "pull_request_url": "https://api.github.com/repos/pytorch/pytorch/pulls/5927", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/176762980"}, "html": {"href": "https://github.com/pytorch/pytorch/pull/5927#discussion_r176762980"}, "pull_request": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/5927"}}, "body_html": "<p>More idiomatic, and inline with the code below, is <code>static_cast&lt;uint64_t&gt;(tensor.numel())</code></p>", "body_text": "More idiomatic, and inline with the code below, is static_cast<uint64_t>(tensor.numel())"}