{"url": "https://api.github.com/repos/pytorch/pytorch/issues/10851", "repository_url": "https://api.github.com/repos/pytorch/pytorch", "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/10851/labels{/name}", "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/10851/comments", "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/10851/events", "html_url": "https://github.com/pytorch/pytorch/issues/10851", "id": 353805998, "node_id": "MDU6SXNzdWUzNTM4MDU5OTg=", "number": 10851, "title": "`profiler.table()` too slow", "user": {"login": "gan-lin", "id": 22568947, "node_id": "MDQ6VXNlcjIyNTY4OTQ3", "avatar_url": "https://avatars0.githubusercontent.com/u/22568947?v=4", "gravatar_id": "", "url": "https://api.github.com/users/gan-lin", "html_url": "https://github.com/gan-lin", "followers_url": "https://api.github.com/users/gan-lin/followers", "following_url": "https://api.github.com/users/gan-lin/following{/other_user}", "gists_url": "https://api.github.com/users/gan-lin/gists{/gist_id}", "starred_url": "https://api.github.com/users/gan-lin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/gan-lin/subscriptions", "organizations_url": "https://api.github.com/users/gan-lin/orgs", "repos_url": "https://api.github.com/users/gan-lin/repos", "events_url": "https://api.github.com/users/gan-lin/events{/privacy}", "received_events_url": "https://api.github.com/users/gan-lin/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 443484050, "node_id": "MDU6TGFiZWw0NDM0ODQwNTA=", "url": "https://api.github.com/repos/pytorch/pytorch/labels/medium%20priority", "name": "medium priority", "color": "fbca04", "default": false}], "state": "closed", "locked": false, "assignee": {"login": "zou3519", "id": 5652049, "node_id": "MDQ6VXNlcjU2NTIwNDk=", "avatar_url": "https://avatars3.githubusercontent.com/u/5652049?v=4", "gravatar_id": "", "url": "https://api.github.com/users/zou3519", "html_url": "https://github.com/zou3519", "followers_url": "https://api.github.com/users/zou3519/followers", "following_url": "https://api.github.com/users/zou3519/following{/other_user}", "gists_url": "https://api.github.com/users/zou3519/gists{/gist_id}", "starred_url": "https://api.github.com/users/zou3519/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/zou3519/subscriptions", "organizations_url": "https://api.github.com/users/zou3519/orgs", "repos_url": "https://api.github.com/users/zou3519/repos", "events_url": "https://api.github.com/users/zou3519/events{/privacy}", "received_events_url": "https://api.github.com/users/zou3519/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "zou3519", "id": 5652049, "node_id": "MDQ6VXNlcjU2NTIwNDk=", "avatar_url": "https://avatars3.githubusercontent.com/u/5652049?v=4", "gravatar_id": "", "url": "https://api.github.com/users/zou3519", "html_url": "https://github.com/zou3519", "followers_url": "https://api.github.com/users/zou3519/followers", "following_url": "https://api.github.com/users/zou3519/following{/other_user}", "gists_url": "https://api.github.com/users/zou3519/gists{/gist_id}", "starred_url": "https://api.github.com/users/zou3519/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/zou3519/subscriptions", "organizations_url": "https://api.github.com/users/zou3519/orgs", "repos_url": "https://api.github.com/users/zou3519/repos", "events_url": "https://api.github.com/users/zou3519/events{/privacy}", "received_events_url": "https://api.github.com/users/zou3519/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 0, "created_at": "2018-08-24T14:26:42Z", "updated_at": "2018-08-29T19:27:05Z", "closed_at": "2018-08-29T19:27:05Z", "author_association": "NONE", "body_html": "<h2>Issue description</h2>\n<p>When processing large amount of output lines(about 100000 lines), profiler.table() can spend several minutes. I think it's because in <code>build_table()</code>, new lines are added to the end of a string, and this can result in a copy operation of the whole string. The best practise here may be using <code>StringIO</code>.</p>", "body_text": "Issue description\nWhen processing large amount of output lines(about 100000 lines), profiler.table() can spend several minutes. I think it's because in build_table(), new lines are added to the end of a string, and this can result in a copy operation of the whole string. The best practise here may be using StringIO.", "body": "## Issue description\r\n\r\nWhen processing large amount of output lines(about 100000 lines), profiler.table() can spend several minutes. I think it's because in `build_table()`, new lines are added to the end of a string, and this can result in a copy operation of the whole string. The best practise here may be using `StringIO`."}