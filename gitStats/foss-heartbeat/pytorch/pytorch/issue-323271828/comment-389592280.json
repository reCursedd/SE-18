{"url": "https://api.github.com/repos/pytorch/pytorch/issues/comments/389592280", "html_url": "https://github.com/pytorch/pytorch/issues/7580#issuecomment-389592280", "issue_url": "https://api.github.com/repos/pytorch/pytorch/issues/7580", "id": 389592280, "node_id": "MDEyOklzc3VlQ29tbWVudDM4OTU5MjI4MA==", "user": {"login": "zasdfgbnm", "id": 1032377, "node_id": "MDQ6VXNlcjEwMzIzNzc=", "avatar_url": "https://avatars2.githubusercontent.com/u/1032377?v=4", "gravatar_id": "", "url": "https://api.github.com/users/zasdfgbnm", "html_url": "https://github.com/zasdfgbnm", "followers_url": "https://api.github.com/users/zasdfgbnm/followers", "following_url": "https://api.github.com/users/zasdfgbnm/following{/other_user}", "gists_url": "https://api.github.com/users/zasdfgbnm/gists{/gist_id}", "starred_url": "https://api.github.com/users/zasdfgbnm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/zasdfgbnm/subscriptions", "organizations_url": "https://api.github.com/users/zasdfgbnm/orgs", "repos_url": "https://api.github.com/users/zasdfgbnm/repos", "events_url": "https://api.github.com/users/zasdfgbnm/events{/privacy}", "received_events_url": "https://api.github.com/users/zasdfgbnm/received_events", "type": "User", "site_admin": false}, "created_at": "2018-05-16T17:00:31Z", "updated_at": "2018-05-16T17:01:08Z", "author_association": "CONTRIBUTOR", "body_html": "<p><a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=9110200\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/fmassa\">@fmassa</a> Ahh, yes. So, do you think there is no need to implement a <code>cartesian_range</code>? To be honest, if I can only choose one of <code>meshgrid</code> and <code>cartesian_range</code>, I would prefer <code>meshgrid</code>. Do you think it is better to implement a meshgrid into ATen, or leave it for the user to implement themselves?</p>\n<p>By the way, I can not think of an application when meshgrid would be helpful(except the example you gave above), because broadcasting semantics itself is working already very well: if you want to compute x + y for all pairs (x,y), just <code>x.view(-1,1) + y.view(1,-1)</code> would work perfectly.</p>", "body_text": "@fmassa Ahh, yes. So, do you think there is no need to implement a cartesian_range? To be honest, if I can only choose one of meshgrid and cartesian_range, I would prefer meshgrid. Do you think it is better to implement a meshgrid into ATen, or leave it for the user to implement themselves?\nBy the way, I can not think of an application when meshgrid would be helpful(except the example you gave above), because broadcasting semantics itself is working already very well: if you want to compute x + y for all pairs (x,y), just x.view(-1,1) + y.view(1,-1) would work perfectly.", "body": "@fmassa Ahh, yes. So, do you think there is no need to implement a `cartesian_range`? To be honest, if I can only choose one of `meshgrid` and `cartesian_range`, I would prefer `meshgrid`. Do you think it is better to implement a meshgrid into ATen, or leave it for the user to implement themselves?\r\n\r\nBy the way, I can not think of an application when meshgrid would be helpful(except the example you gave above), because broadcasting semantics itself is working already very well: if you want to compute x + y for all pairs (x,y), just `x.view(-1,1) + y.view(1,-1)` would work perfectly.\r\n\r\n"}