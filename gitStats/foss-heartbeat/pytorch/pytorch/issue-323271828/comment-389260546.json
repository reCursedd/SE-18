{"url": "https://api.github.com/repos/pytorch/pytorch/issues/comments/389260546", "html_url": "https://github.com/pytorch/pytorch/issues/7580#issuecomment-389260546", "issue_url": "https://api.github.com/repos/pytorch/pytorch/issues/7580", "id": 389260546, "node_id": "MDEyOklzc3VlQ29tbWVudDM4OTI2MDU0Ng==", "user": {"login": "fmassa", "id": 9110200, "node_id": "MDQ6VXNlcjkxMTAyMDA=", "avatar_url": "https://avatars2.githubusercontent.com/u/9110200?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fmassa", "html_url": "https://github.com/fmassa", "followers_url": "https://api.github.com/users/fmassa/followers", "following_url": "https://api.github.com/users/fmassa/following{/other_user}", "gists_url": "https://api.github.com/users/fmassa/gists{/gist_id}", "starred_url": "https://api.github.com/users/fmassa/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fmassa/subscriptions", "organizations_url": "https://api.github.com/users/fmassa/orgs", "repos_url": "https://api.github.com/users/fmassa/repos", "events_url": "https://api.github.com/users/fmassa/events{/privacy}", "received_events_url": "https://api.github.com/users/fmassa/received_events", "type": "User", "site_admin": false}, "created_at": "2018-05-15T18:06:37Z", "updated_at": "2018-05-15T18:06:37Z", "author_association": "MEMBER", "body_html": "<p>Quick question: what's the advantage of viewing the tensor as 1d and concatenating them? Is it to make sampling easier? For sampling as if it was a 1d tensor given a list of indices (say randpermon the numel of the meshgrid), one could use <code>torch.take</code> and I believe the results would be fairly efficient (but need to be performed twice, one for x and one for y, the results of meshgrid).<br>\nBut I might be missing something in here.<br>\nWould be good to know what the others think</p>", "body_text": "Quick question: what's the advantage of viewing the tensor as 1d and concatenating them? Is it to make sampling easier? For sampling as if it was a 1d tensor given a list of indices (say randpermon the numel of the meshgrid), one could use torch.take and I believe the results would be fairly efficient (but need to be performed twice, one for x and one for y, the results of meshgrid).\nBut I might be missing something in here.\nWould be good to know what the others think", "body": "Quick question: what's the advantage of viewing the tensor as 1d and concatenating them? Is it to make sampling easier? For sampling as if it was a 1d tensor given a list of indices (say randpermon the numel of the meshgrid), one could use `torch.take` and I believe the results would be fairly efficient (but need to be performed twice, one for x and one for y, the results of meshgrid).\r\nBut I might be missing something in here.\r\nWould be good to know what the others think"}