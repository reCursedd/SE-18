{"url": "https://api.github.com/repos/pytorch/pytorch/issues/comments/318875133", "html_url": "https://github.com/pytorch/pytorch/issues/2245#issuecomment-318875133", "issue_url": "https://api.github.com/repos/pytorch/pytorch/issues/2245", "id": 318875133, "node_id": "MDEyOklzc3VlQ29tbWVudDMxODg3NTEzMw==", "user": {"login": "apaszke", "id": 4583066, "node_id": "MDQ6VXNlcjQ1ODMwNjY=", "avatar_url": "https://avatars3.githubusercontent.com/u/4583066?v=4", "gravatar_id": "", "url": "https://api.github.com/users/apaszke", "html_url": "https://github.com/apaszke", "followers_url": "https://api.github.com/users/apaszke/followers", "following_url": "https://api.github.com/users/apaszke/following{/other_user}", "gists_url": "https://api.github.com/users/apaszke/gists{/gist_id}", "starred_url": "https://api.github.com/users/apaszke/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/apaszke/subscriptions", "organizations_url": "https://api.github.com/users/apaszke/orgs", "repos_url": "https://api.github.com/users/apaszke/repos", "events_url": "https://api.github.com/users/apaszke/events{/privacy}", "received_events_url": "https://api.github.com/users/apaszke/received_events", "type": "User", "site_admin": false}, "created_at": "2017-07-30T03:19:02Z", "updated_at": "2017-07-30T03:19:02Z", "author_association": "MEMBER", "body_html": "<p>It's not so much about contention on shared resources, but more on leaving some global library data in an inconsistent state. <code>fork()</code> isn't really meant to be used in multi-threaded programs (it's undefined behaviour IIRC)</p>", "body_text": "It's not so much about contention on shared resources, but more on leaving some global library data in an inconsistent state. fork() isn't really meant to be used in multi-threaded programs (it's undefined behaviour IIRC)", "body": "It's not so much about contention on shared resources, but more on leaving some global library data in an inconsistent state. `fork()` isn't really meant to be used in multi-threaded programs (it's undefined behaviour IIRC)"}