{"url": "https://api.github.com/repos/pytorch/pytorch/issues/comments/318874920", "html_url": "https://github.com/pytorch/pytorch/issues/2245#issuecomment-318874920", "issue_url": "https://api.github.com/repos/pytorch/pytorch/issues/2245", "id": 318874920, "node_id": "MDEyOklzc3VlQ29tbWVudDMxODg3NDkyMA==", "user": {"login": "Louis-Tian", "id": 5655024, "node_id": "MDQ6VXNlcjU2NTUwMjQ=", "avatar_url": "https://avatars2.githubusercontent.com/u/5655024?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Louis-Tian", "html_url": "https://github.com/Louis-Tian", "followers_url": "https://api.github.com/users/Louis-Tian/followers", "following_url": "https://api.github.com/users/Louis-Tian/following{/other_user}", "gists_url": "https://api.github.com/users/Louis-Tian/gists{/gist_id}", "starred_url": "https://api.github.com/users/Louis-Tian/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Louis-Tian/subscriptions", "organizations_url": "https://api.github.com/users/Louis-Tian/orgs", "repos_url": "https://api.github.com/users/Louis-Tian/repos", "events_url": "https://api.github.com/users/Louis-Tian/events{/privacy}", "received_events_url": "https://api.github.com/users/Louis-Tian/received_events", "type": "User", "site_admin": false}, "created_at": "2017-07-30T03:13:07Z", "updated_at": "2017-07-30T03:13:45Z", "author_association": "NONE", "body_html": "<p><a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=4583066\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/apaszke\">@apaszke</a> Thanks for the explanation. It's much appreciated. I am definitely not seasoned when comes to parallel computing. So my apology if this is obvious. I read the multiprocessing section of on the doc, where you mentioned about the 'fork' is susceptible to deadlock. However, I was assuming that if there is no sharing (model and data are created inside the child processes) among the processes, we would be fine since there would be no competition among processes to access resources.</p>", "body_text": "@apaszke Thanks for the explanation. It's much appreciated. I am definitely not seasoned when comes to parallel computing. So my apology if this is obvious. I read the multiprocessing section of on the doc, where you mentioned about the 'fork' is susceptible to deadlock. However, I was assuming that if there is no sharing (model and data are created inside the child processes) among the processes, we would be fine since there would be no competition among processes to access resources.", "body": "@apaszke Thanks for the explanation. It's much appreciated. I am definitely not seasoned when comes to parallel computing. So my apology if this is obvious. I read the multiprocessing section of on the doc, where you mentioned about the 'fork' is susceptible to deadlock. However, I was assuming that if there is no sharing (model and data are created inside the child processes) among the processes, we would be fine since there would be no competition among processes to access resources.\r\n\r\n"}