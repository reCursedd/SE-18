{"url": "https://api.github.com/repos/pytorch/pytorch/issues/comments/318874112", "html_url": "https://github.com/pytorch/pytorch/issues/2245#issuecomment-318874112", "issue_url": "https://api.github.com/repos/pytorch/pytorch/issues/2245", "id": 318874112, "node_id": "MDEyOklzc3VlQ29tbWVudDMxODg3NDExMg==", "user": {"login": "apaszke", "id": 4583066, "node_id": "MDQ6VXNlcjQ1ODMwNjY=", "avatar_url": "https://avatars3.githubusercontent.com/u/4583066?v=4", "gravatar_id": "", "url": "https://api.github.com/users/apaszke", "html_url": "https://github.com/apaszke", "followers_url": "https://api.github.com/users/apaszke/followers", "following_url": "https://api.github.com/users/apaszke/following{/other_user}", "gists_url": "https://api.github.com/users/apaszke/gists{/gist_id}", "starred_url": "https://api.github.com/users/apaszke/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/apaszke/subscriptions", "organizations_url": "https://api.github.com/users/apaszke/orgs", "repos_url": "https://api.github.com/users/apaszke/repos", "events_url": "https://api.github.com/users/apaszke/events{/privacy}", "received_events_url": "https://api.github.com/users/apaszke/received_events", "type": "User", "site_admin": false}, "created_at": "2017-07-30T02:52:24Z", "updated_at": "2017-07-30T02:52:24Z", "author_association": "MEMBER", "body_html": "<p>The default start method (fork) is pretty dangerous in multi-threaded programs. It's a reasonable default for mp, because it's cheap and people usually don't use multiple threads in Python, but we do - both in our autograd code and in our backends that use OpenMP (which doesn't support forking). This would explain this behaviour. I can leave this issue open, but with a very low priority, because it's possible that it's OpenMP that's left in inconsistent state, and there's nothing we can do about that</p>", "body_text": "The default start method (fork) is pretty dangerous in multi-threaded programs. It's a reasonable default for mp, because it's cheap and people usually don't use multiple threads in Python, but we do - both in our autograd code and in our backends that use OpenMP (which doesn't support forking). This would explain this behaviour. I can leave this issue open, but with a very low priority, because it's possible that it's OpenMP that's left in inconsistent state, and there's nothing we can do about that", "body": "The default start method (fork) is pretty dangerous in multi-threaded programs. It's a reasonable default for mp, because it's cheap and people usually don't use multiple threads in Python, but we do - both in our autograd code and in our backends that use OpenMP (which doesn't support forking). This would explain this behaviour. I can leave this issue open, but with a very low priority, because it's possible that it's OpenMP that's left in inconsistent state, and there's nothing we can do about that"}