{"url": "https://api.github.com/repos/pytorch/pytorch/issues/1334", "repository_url": "https://api.github.com/repos/pytorch/pytorch", "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/1334/labels{/name}", "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/1334/comments", "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/1334/events", "html_url": "https://github.com/pytorch/pytorch/pull/1334", "id": 223599372, "node_id": "MDExOlB1bGxSZXF1ZXN0MTE3MTI5MDIx", "number": 1334, "title": "Fix errors when no CUDA devices are available", "user": {"login": "colesbury", "id": 655866, "node_id": "MDQ6VXNlcjY1NTg2Ng==", "avatar_url": "https://avatars1.githubusercontent.com/u/655866?v=4", "gravatar_id": "", "url": "https://api.github.com/users/colesbury", "html_url": "https://github.com/colesbury", "followers_url": "https://api.github.com/users/colesbury/followers", "following_url": "https://api.github.com/users/colesbury/following{/other_user}", "gists_url": "https://api.github.com/users/colesbury/gists{/gist_id}", "starred_url": "https://api.github.com/users/colesbury/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/colesbury/subscriptions", "organizations_url": "https://api.github.com/users/colesbury/orgs", "repos_url": "https://api.github.com/users/colesbury/repos", "events_url": "https://api.github.com/users/colesbury/events{/privacy}", "received_events_url": "https://api.github.com/users/colesbury/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2017-04-22T23:16:02Z", "updated_at": "2017-04-24T15:33:43Z", "closed_at": "2017-04-23T12:45:28Z", "author_association": "MEMBER", "pull_request": {"url": "https://api.github.com/repos/pytorch/pytorch/pulls/1334", "html_url": "https://github.com/pytorch/pytorch/pull/1334", "diff_url": "https://github.com/pytorch/pytorch/pull/1334.diff", "patch_url": "https://github.com/pytorch/pytorch/pull/1334.patch"}, "body_html": "<p><span class=\"issue-keyword tooltipped tooltipped-se\" aria-label=\"This pull request closes issue #1267.\">Fixes</span> <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load issue title\" data-id=\"221952720\" data-permission-text=\"Issue title is private\" data-url=\"https://github.com/pytorch/pytorch/issues/1267\" data-hovercard-type=\"issue\" data-hovercard-url=\"/pytorch/pytorch/issues/1267/hovercard\" href=\"https://github.com/pytorch/pytorch/issues/1267\">#1267</a></p>\n<p>This fixes a number of issues when PyTorch was compiled with CUDA<br>\nsupport but run on a machine without any GPUs. Now, we treat all errors<br>\nfrom cudaGetDeviceCount() as if the machine has no devices.</p>\n<p>Now all tests pass with:</p>\n<p><code>CUDA_VISIBLE_DEVICES= ./run_test.sh</code></p>\n<p>I also changed _cuda_init and _cuda_sparse_init to return None on success and raise an exception on failure. Previously, they set the exception but returned a Python bool False which isn't allowed.</p>\n<p>We should probably add a smoke test for the PyTorch compiled with CUDA but run without any GPUs (or with no visible device).</p>", "body_text": "Fixes #1267\nThis fixes a number of issues when PyTorch was compiled with CUDA\nsupport but run on a machine without any GPUs. Now, we treat all errors\nfrom cudaGetDeviceCount() as if the machine has no devices.\nNow all tests pass with:\nCUDA_VISIBLE_DEVICES= ./run_test.sh\nI also changed _cuda_init and _cuda_sparse_init to return None on success and raise an exception on failure. Previously, they set the exception but returned a Python bool False which isn't allowed.\nWe should probably add a smoke test for the PyTorch compiled with CUDA but run without any GPUs (or with no visible device).", "body": "Fixes #1267\r\n\r\nThis fixes a number of issues when PyTorch was compiled with CUDA\r\nsupport but run on a machine without any GPUs. Now, we treat all errors\r\nfrom cudaGetDeviceCount() as if the machine has no devices.\r\n\r\nNow all tests pass with:\r\n\r\n`CUDA_VISIBLE_DEVICES= ./run_test.sh`\r\n\r\nI also changed _cuda_init and _cuda_sparse_init to return None on success and raise an exception on failure. Previously, they set the exception but returned a Python bool False which isn't allowed.\r\n\r\nWe should probably add a smoke test for the PyTorch compiled with CUDA but run without any GPUs (or with no visible device)."}