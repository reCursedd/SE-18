{"url": "https://api.github.com/repos/pytorch/pytorch/issues/14289", "repository_url": "https://api.github.com/repos/pytorch/pytorch", "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/14289/labels{/name}", "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/14289/comments", "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/14289/events", "html_url": "https://github.com/pytorch/pytorch/issues/14289", "id": 383293191, "node_id": "MDU6SXNzdWUzODMyOTMxOTE=", "number": 14289, "title": "nn.NLLLoss ignores class weights", "user": {"login": "idc9", "id": 906398, "node_id": "MDQ6VXNlcjkwNjM5OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/906398?v=4", "gravatar_id": "", "url": "https://api.github.com/users/idc9", "html_url": "https://github.com/idc9", "followers_url": "https://api.github.com/users/idc9/followers", "following_url": "https://api.github.com/users/idc9/following{/other_user}", "gists_url": "https://api.github.com/users/idc9/gists{/gist_id}", "starred_url": "https://api.github.com/users/idc9/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/idc9/subscriptions", "organizations_url": "https://api.github.com/users/idc9/orgs", "repos_url": "https://api.github.com/users/idc9/repos", "events_url": "https://api.github.com/users/idc9/events{/privacy}", "received_events_url": "https://api.github.com/users/idc9/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-11-21T21:10:29Z", "updated_at": "2018-11-22T16:41:11Z", "closed_at": "2018-11-22T16:41:10Z", "author_association": "NONE", "body_html": "<h2><g-emoji class=\"g-emoji\" alias=\"bug\" fallback-src=\"https://assets-cdn.github.com/images/icons/emoji/unicode/1f41b.png\">\ud83d\udc1b</g-emoji> Bug</h2>\n<p><code>nn.NLLLoss</code> and <code>nn.CrossEntropyLoss</code> ignore user provided class weights.</p>\n<h2>To Reproduce</h2>\n<p>First run without class weights (gives correct answer)</p>\n<div class=\"highlight highlight-source-python\"><pre><span class=\"pl-k\">import</span> torch\n<span class=\"pl-k\">import</span> torch.nn <span class=\"pl-k\">as</span> nn\n\nlog_prob <span class=\"pl-k\">=</span> torch.tensor([[<span class=\"pl-k\">-</span><span class=\"pl-c1\">0.0141</span>, <span class=\"pl-k\">-</span><span class=\"pl-c1\">4.2669</span>]])\ntarget <span class=\"pl-k\">=</span> torch.tensor([<span class=\"pl-c1\">0</span>])\ncriterion <span class=\"pl-k\">=</span> nn.NLLLoss()\n\ncriterion(log_prob, target)</pre></div>\n<pre><code>tensor(0.0141)\n</code></pre>\n<p>Next run with class weights (gives same as above i.e. incorrect answer)</p>\n<div class=\"highlight highlight-source-python\"><pre>log_prob <span class=\"pl-k\">=</span> torch.tensor([[<span class=\"pl-k\">-</span><span class=\"pl-c1\">0.0141</span>, <span class=\"pl-k\">-</span><span class=\"pl-c1\">4.2669</span>]])\ntarget <span class=\"pl-k\">=</span> torch.tensor([<span class=\"pl-c1\">0</span>])\nweight <span class=\"pl-k\">=</span> torch.tensor([<span class=\"pl-c1\">2.0</span>, <span class=\"pl-c1\">3.0</span>])\ncriterion <span class=\"pl-k\">=</span> nn.NLLLoss(<span class=\"pl-v\">weight</span><span class=\"pl-k\">=</span>weight)\n\ncriterion(log_prob, target)</pre></div>\n<pre><code>tensor(0.0141)\n</code></pre>\n<p>(should be 2 * 0.0141 = 0.0282)</p>\n<h2>Expected behavior</h2>\n<p>The loss should be multiplied by the provided weight.</p>\n<h2>Environment</h2>\n<p>PyTorch version: 0.4.1<br>\nIs debug build: No<br>\nCUDA used to build PyTorch: None</p>\n<p>OS: Mac OSX 10.13.6<br>\nGCC version: Could not collect<br>\nCMake version: version 3.12.0</p>\n<p>Python version: 3.6<br>\nIs CUDA available: No<br>\nCUDA runtime version: No CUDA<br>\nGPU models and configuration: No CUDA<br>\nNvidia driver version: No CUDA<br>\ncuDNN version: No CUDA</p>\n<p>Versions of relevant libraries:<br>\n[pip] Could not collect<br>\n[conda] pytorch                   0.2.0                py36_4cu75    soumith<br>\n[conda] torch                     0.4.1                     <br>\n[conda] torchvision               0.1.9                    py36_1    soumith<br>\n[conda] torchvision               0.2.1                     </p>", "body_text": "\ud83d\udc1b Bug\nnn.NLLLoss and nn.CrossEntropyLoss ignore user provided class weights.\nTo Reproduce\nFirst run without class weights (gives correct answer)\nimport torch\nimport torch.nn as nn\n\nlog_prob = torch.tensor([[-0.0141, -4.2669]])\ntarget = torch.tensor([0])\ncriterion = nn.NLLLoss()\n\ncriterion(log_prob, target)\ntensor(0.0141)\n\nNext run with class weights (gives same as above i.e. incorrect answer)\nlog_prob = torch.tensor([[-0.0141, -4.2669]])\ntarget = torch.tensor([0])\nweight = torch.tensor([2.0, 3.0])\ncriterion = nn.NLLLoss(weight=weight)\n\ncriterion(log_prob, target)\ntensor(0.0141)\n\n(should be 2 * 0.0141 = 0.0282)\nExpected behavior\nThe loss should be multiplied by the provided weight.\nEnvironment\nPyTorch version: 0.4.1\nIs debug build: No\nCUDA used to build PyTorch: None\nOS: Mac OSX 10.13.6\nGCC version: Could not collect\nCMake version: version 3.12.0\nPython version: 3.6\nIs CUDA available: No\nCUDA runtime version: No CUDA\nGPU models and configuration: No CUDA\nNvidia driver version: No CUDA\ncuDNN version: No CUDA\nVersions of relevant libraries:\n[pip] Could not collect\n[conda] pytorch                   0.2.0                py36_4cu75    soumith\n[conda] torch                     0.4.1                     \n[conda] torchvision               0.1.9                    py36_1    soumith\n[conda] torchvision               0.2.1", "body": "## \ud83d\udc1b Bug\r\n\r\n`nn.NLLLoss` and `nn.CrossEntropyLoss` ignore user provided class weights.\r\n\r\n## To Reproduce\r\n\r\nFirst run without class weights (gives correct answer)\r\n``` python\r\nimport torch\r\nimport torch.nn as nn\r\n\r\nlog_prob = torch.tensor([[-0.0141, -4.2669]])\r\ntarget = torch.tensor([0])\r\ncriterion = nn.NLLLoss()\r\n\r\ncriterion(log_prob, target)\r\n```\r\n\r\n```\r\ntensor(0.0141)\r\n```\r\n\r\nNext run with class weights (gives same as above i.e. incorrect answer)\r\n``` python\r\nlog_prob = torch.tensor([[-0.0141, -4.2669]])\r\ntarget = torch.tensor([0])\r\nweight = torch.tensor([2.0, 3.0])\r\ncriterion = nn.NLLLoss(weight=weight)\r\n\r\ncriterion(log_prob, target)\r\n```\r\n\r\n```\r\ntensor(0.0141)\r\n```\r\n(should be 2 * 0.0141 = 0.0282)\r\n\r\n## Expected behavior\r\n\r\nThe loss should be multiplied by the provided weight.\r\n\r\n## Environment\r\nPyTorch version: 0.4.1\r\nIs debug build: No\r\nCUDA used to build PyTorch: None\r\n\r\nOS: Mac OSX 10.13.6\r\nGCC version: Could not collect\r\nCMake version: version 3.12.0\r\n\r\nPython version: 3.6\r\nIs CUDA available: No\r\nCUDA runtime version: No CUDA\r\nGPU models and configuration: No CUDA\r\nNvidia driver version: No CUDA\r\ncuDNN version: No CUDA\r\n\r\nVersions of relevant libraries:\r\n[pip] Could not collect\r\n[conda] pytorch                   0.2.0                py36_4cu75    soumith\r\n[conda] torch                     0.4.1                     <pip>\r\n[conda] torchvision               0.1.9                    py36_1    soumith\r\n[conda] torchvision               0.2.1                     <pip>\r\n\r\n"}