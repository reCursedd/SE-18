{"url": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/217151503", "pull_request_review_id": 154797135, "id": 217151503, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIxNzE1MTUwMw==", "diff_hunk": "@@ -481,6 +481,8 @@ std::string encodeRHS(Node * n) {\n     {aten::add, \"${0} + ${2}*${1}\"},\n     {aten::sub, \"(${0} - ${2}*${1})\"},\n     {aten::rand_like, \"uniform(rnd())\"},\n+    //min, max\n+    {aten::clamp, \"fmaxf(fminf(${0}, ${2}), ${1})\"},", "path": "torch/csrc/jit/fusion_compiler.cpp", "position": null, "original_position": 5, "commit_id": "30be1e7983687052b37e4261489878d50e223a3b", "original_commit_id": "838e55a0027b071772c9157bf2086be6c81de708", "user": {"login": "t-vi", "id": 20787943, "node_id": "MDQ6VXNlcjIwNzg3OTQz", "avatar_url": "https://avatars2.githubusercontent.com/u/20787943?v=4", "gravatar_id": "", "url": "https://api.github.com/users/t-vi", "html_url": "https://github.com/t-vi", "followers_url": "https://api.github.com/users/t-vi/followers", "following_url": "https://api.github.com/users/t-vi/following{/other_user}", "gists_url": "https://api.github.com/users/t-vi/gists{/gist_id}", "starred_url": "https://api.github.com/users/t-vi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/t-vi/subscriptions", "organizations_url": "https://api.github.com/users/t-vi/orgs", "repos_url": "https://api.github.com/users/t-vi/repos", "events_url": "https://api.github.com/users/t-vi/events{/privacy}", "received_events_url": "https://api.github.com/users/t-vi/received_events", "type": "User", "site_admin": false}, "body": "While there might be code not providing proper NaN semantics, I'm kind of attached to them.\r\nFor clamp, we actually have min/max=NaN to mean \"unbounded\", so `(a > max ? max : a)` gives the right thing.\r\n", "created_at": "2018-09-12T18:59:58Z", "updated_at": "2018-11-23T15:51:12Z", "html_url": "https://github.com/pytorch/pytorch/pull/11574#discussion_r217151503", "pull_request_url": "https://api.github.com/repos/pytorch/pytorch/pulls/11574", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/217151503"}, "html": {"href": "https://github.com/pytorch/pytorch/pull/11574#discussion_r217151503"}, "pull_request": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/11574"}}, "body_html": "<p>While there might be code not providing proper NaN semantics, I'm kind of attached to them.<br>\nFor clamp, we actually have min/max=NaN to mean \"unbounded\", so <code>(a &gt; max ? max : a)</code> gives the right thing.</p>", "body_text": "While there might be code not providing proper NaN semantics, I'm kind of attached to them.\nFor clamp, we actually have min/max=NaN to mean \"unbounded\", so (a > max ? max : a) gives the right thing.", "in_reply_to_id": 217096947}