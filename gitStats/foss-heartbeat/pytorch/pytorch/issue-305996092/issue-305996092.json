{"url": "https://api.github.com/repos/pytorch/pytorch/issues/5837", "repository_url": "https://api.github.com/repos/pytorch/pytorch", "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/5837/labels{/name}", "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/5837/comments", "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/5837/events", "html_url": "https://github.com/pytorch/pytorch/pull/5837", "id": 305996092, "node_id": "MDExOlB1bGxSZXF1ZXN0MTc1NTg0OTUw", "number": 5837, "title": "Change `wrap_dim` semantics for TensorList", "user": {"login": "zou3519", "id": 5652049, "node_id": "MDQ6VXNlcjU2NTIwNDk=", "avatar_url": "https://avatars3.githubusercontent.com/u/5652049?v=4", "gravatar_id": "", "url": "https://api.github.com/users/zou3519", "html_url": "https://github.com/zou3519", "followers_url": "https://api.github.com/users/zou3519/followers", "following_url": "https://api.github.com/users/zou3519/following{/other_user}", "gists_url": "https://api.github.com/users/zou3519/gists{/gist_id}", "starred_url": "https://api.github.com/users/zou3519/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/zou3519/subscriptions", "organizations_url": "https://api.github.com/users/zou3519/orgs", "repos_url": "https://api.github.com/users/zou3519/repos", "events_url": "https://api.github.com/users/zou3519/events{/privacy}", "received_events_url": "https://api.github.com/users/zou3519/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 797012849, "node_id": "MDU6TGFiZWw3OTcwMTI4NDk=", "url": "https://api.github.com/repos/pytorch/pytorch/labels/in%20progress", "name": "in progress", "color": "ededed", "default": false}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2018-03-16T16:33:41Z", "updated_at": "2018-03-19T21:36:36Z", "closed_at": "2018-03-19T21:36:36Z", "author_association": "CONTRIBUTOR", "pull_request": {"url": "https://api.github.com/repos/pytorch/pytorch/pulls/5837", "html_url": "https://github.com/pytorch/pytorch/pull/5837", "diff_url": "https://github.com/pytorch/pytorch/pull/5837.diff", "patch_url": "https://github.com/pytorch/pytorch/pull/5837.patch"}, "body_html": "<p>Should <span class=\"issue-keyword tooltipped tooltipped-se\" aria-label=\"This pull request closes issue #5332.\">fix</span> <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load issue title\" data-id=\"299019779\" data-permission-text=\"Issue title is private\" data-url=\"https://github.com/pytorch/pytorch/issues/5332\" data-hovercard-type=\"issue\" data-hovercard-url=\"/pytorch/pytorch/issues/5332/hovercard\" href=\"https://github.com/pytorch/pytorch/issues/5332\">#5332</a>.</p>\n<p>When wrapping <code>dim</code> for a TensorList, right now we take the first element of the TensorList, look at its dimension, and use that to wrap <code>dim</code>.</p>\n<p>This approach doesn't work for <code>torch.cat</code>, which takes empty tensors. Un-intuitively, <code>torch.cat([empty, notempty], dim=1)</code> and <code>torch.cat([notempty, empty], dim=1)</code> behave differently because we don't support empty tensors very well. I think a better fix would be to ensure that empty tensors are broadcastable to arbitrary dimensions, but we don't support arbitrary empty dimensions.</p>\n<p>I made the following changes:</p>\n<ul>\n<li>wrap <code>dim</code> to the first non-empty tensor in a TensorList</li>\n<li>If the TensorList is empty, the output of wrapping <code>dim</code> is 0.</li>\n</ul>\n<p>cc <a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=3768583\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/gchanan\">@gchanan</a> <a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=655866\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/colesbury\">@colesbury</a></p>\n<h3>Test Plan</h3>\n<p>I haven't written any tests yet because this PR depends on <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load issue title\" data-id=\"302080299\" data-permission-text=\"Issue title is private\" data-url=\"https://github.com/pytorch/pytorch/issues/5552\" data-hovercard-type=\"issue\" data-hovercard-url=\"/pytorch/pytorch/issues/5552/hovercard\" href=\"https://github.com/pytorch/pytorch/issues/5552\">#5552</a> to <span class=\"issue-keyword tooltipped tooltipped-se\" aria-label=\"This pull request closes issue #5332.\">fix</span> <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load issue title\" data-id=\"299019779\" data-permission-text=\"Issue title is private\" data-url=\"https://github.com/pytorch/pytorch/issues/5332\" data-hovercard-type=\"issue\" data-hovercard-url=\"/pytorch/pytorch/issues/5332/hovercard\" href=\"https://github.com/pytorch/pytorch/issues/5332\">#5332</a> completely. When that is merged I'll put in tests here.</p>", "body_text": "Should fix #5332.\nWhen wrapping dim for a TensorList, right now we take the first element of the TensorList, look at its dimension, and use that to wrap dim.\nThis approach doesn't work for torch.cat, which takes empty tensors. Un-intuitively, torch.cat([empty, notempty], dim=1) and torch.cat([notempty, empty], dim=1) behave differently because we don't support empty tensors very well. I think a better fix would be to ensure that empty tensors are broadcastable to arbitrary dimensions, but we don't support arbitrary empty dimensions.\nI made the following changes:\n\nwrap dim to the first non-empty tensor in a TensorList\nIf the TensorList is empty, the output of wrapping dim is 0.\n\ncc @gchanan @colesbury\nTest Plan\nI haven't written any tests yet because this PR depends on #5552 to fix #5332 completely. When that is merged I'll put in tests here.", "body": "Should fix https://github.com/pytorch/pytorch/issues/5332. \r\n\r\nWhen wrapping `dim` for a TensorList, right now we take the first element of the TensorList, look at its dimension, and use that to wrap `dim`.\r\n\r\nThis approach doesn't work for `torch.cat`, which takes empty tensors. Un-intuitively, `torch.cat([empty, notempty], dim=1)` and `torch.cat([notempty, empty], dim=1)` behave differently because we don't support empty tensors very well. I think a better fix would be to ensure that empty tensors are broadcastable to arbitrary dimensions, but we don't support arbitrary empty dimensions.\r\n\r\nI made the following changes:\r\n- wrap `dim` to the first non-empty tensor in a TensorList\r\n- If the TensorList is empty, the output of wrapping `dim` is 0.\r\n\r\ncc @gchanan @colesbury \r\n\r\n### Test Plan\r\nI haven't written any tests yet because this PR depends on #5552 to fix #5332 completely. When that is merged I'll put in tests here."}