{"url": "https://api.github.com/repos/pytorch/pytorch/issues/comments/373794397", "html_url": "https://github.com/pytorch/pytorch/pull/5837#issuecomment-373794397", "issue_url": "https://api.github.com/repos/pytorch/pytorch/issues/5837", "id": 373794397, "node_id": "MDEyOklzc3VlQ29tbWVudDM3Mzc5NDM5Nw==", "user": {"login": "fmassa", "id": 9110200, "node_id": "MDQ6VXNlcjkxMTAyMDA=", "avatar_url": "https://avatars2.githubusercontent.com/u/9110200?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fmassa", "html_url": "https://github.com/fmassa", "followers_url": "https://api.github.com/users/fmassa/followers", "following_url": "https://api.github.com/users/fmassa/following{/other_user}", "gists_url": "https://api.github.com/users/fmassa/gists{/gist_id}", "starred_url": "https://api.github.com/users/fmassa/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fmassa/subscriptions", "organizations_url": "https://api.github.com/users/fmassa/orgs", "repos_url": "https://api.github.com/users/fmassa/repos", "events_url": "https://api.github.com/users/fmassa/events{/privacy}", "received_events_url": "https://api.github.com/users/fmassa/received_events", "type": "User", "site_admin": false}, "created_at": "2018-03-16T17:53:39Z", "updated_at": "2018-03-16T17:54:31Z", "author_association": "MEMBER", "body_html": "<p><a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=3768583\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/gchanan\">@gchanan</a> I can confirm that <code>[0 x 4]</code> dimensional arrays concatenate nicely with <code>[n x 4]</code> arrays in numpy, and other operations on 0d arrays also work as expected, for example</p>\n<div class=\"highlight highlight-source-python\"><pre>a <span class=\"pl-k\">=</span> np.random.rand(<span class=\"pl-c1\">0</span>, <span class=\"pl-c1\">4</span>)\nc <span class=\"pl-k\">=</span> [b.shape[<span class=\"pl-c1\">0</span>] <span class=\"pl-k\">for</span> b <span class=\"pl-k\">in</span> a]\n\na[:, <span class=\"pl-c1\">2</span>:] <span class=\"pl-k\">+=</span> a[:, :<span class=\"pl-c1\">2</span>]\na[:, <span class=\"pl-c1\">2</span>]</pre></div>", "body_text": "@gchanan I can confirm that [0 x 4] dimensional arrays concatenate nicely with [n x 4] arrays in numpy, and other operations on 0d arrays also work as expected, for example\na = np.random.rand(0, 4)\nc = [b.shape[0] for b in a]\n\na[:, 2:] += a[:, :2]\na[:, 2]", "body": "@gchanan I can confirm that `[0 x 4]` dimensional arrays concatenate nicely with `[n x 4]` arrays in numpy, and other operations on 0d arrays also work as expected, for example\r\n```python\r\na = np.random.rand(0, 4)\r\nc = [b.shape[0] for b in a]\r\n\r\na[:, 2:] += a[:, :2]\r\na[:, 2]\r\n```"}