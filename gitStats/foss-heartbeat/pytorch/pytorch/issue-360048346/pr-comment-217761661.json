{"url": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/217761661", "pull_request_review_id": 155557687, "id": 217761661, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIxNzc2MTY2MQ==", "diff_hunk": "@@ -163,6 +163,20 @@ def __dir__(self):\n         keys = [key for key in keys if not key.isdigit()]\n         return keys\n \n+    def insert(self, index, module):\n+        r\"\"\"Insert a given module before a given index in the list.\n+\n+        Arguments:\n+            index (int): index to insert.\n+            module (nn.Module): module to insert\n+        \"\"\"\n+        self.append(module)\n+        items = list(self._modules.items())\n+        items.insert(index, (str(index), items.pop()[1]))\n+        for i in range(index + 1, len(items)):\n+            items[i] = (str(int(items[i][0]) + 1), items[i][1])\n+        self._modules = OrderedDict(items)", "path": "torch/nn/modules/container.py", "position": null, "original_position": 16, "commit_id": "09a00f951c901a35e086d2a352d0f5f14f4f9886", "original_commit_id": "939660a868ebc1673ee7146d7baa3ad0b5c0b004", "user": {"login": "apaszke", "id": 4583066, "node_id": "MDQ6VXNlcjQ1ODMwNjY=", "avatar_url": "https://avatars3.githubusercontent.com/u/4583066?v=4", "gravatar_id": "", "url": "https://api.github.com/users/apaszke", "html_url": "https://github.com/apaszke", "followers_url": "https://api.github.com/users/apaszke/followers", "following_url": "https://api.github.com/users/apaszke/following{/other_user}", "gists_url": "https://api.github.com/users/apaszke/gists{/gist_id}", "starred_url": "https://api.github.com/users/apaszke/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/apaszke/subscriptions", "organizations_url": "https://api.github.com/users/apaszke/orgs", "repos_url": "https://api.github.com/users/apaszke/repos", "events_url": "https://api.github.com/users/apaszke/events{/privacy}", "received_events_url": "https://api.github.com/users/apaszke/received_events", "type": "User", "site_admin": false}, "body": "Wouldn't it be simpler to just do this:\r\n```py\r\nfor i in range(len(self._modules), index, -1):\r\n  self._modules[str(i)] = self._modules[str(i - 1)]\r\nself._modules[str(index)] = module\r\n```\r\n\r\nThat's everything you need in the body of this function.", "created_at": "2018-09-14T15:58:18Z", "updated_at": "2018-11-23T15:51:23Z", "html_url": "https://github.com/pytorch/pytorch/pull/11664#discussion_r217761661", "pull_request_url": "https://api.github.com/repos/pytorch/pytorch/pulls/11664", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/217761661"}, "html": {"href": "https://github.com/pytorch/pytorch/pull/11664#discussion_r217761661"}, "pull_request": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/11664"}}, "body_html": "<p>Wouldn't it be simpler to just do this:</p>\n<div class=\"highlight highlight-source-python\"><pre><span class=\"pl-k\">for</span> i <span class=\"pl-k\">in</span> <span class=\"pl-c1\">range</span>(<span class=\"pl-c1\">len</span>(<span class=\"pl-c1\">self</span>._modules), index, <span class=\"pl-k\">-</span><span class=\"pl-c1\">1</span>):\n  <span class=\"pl-c1\">self</span>._modules[<span class=\"pl-c1\">str</span>(i)] <span class=\"pl-k\">=</span> <span class=\"pl-c1\">self</span>._modules[<span class=\"pl-c1\">str</span>(i <span class=\"pl-k\">-</span> <span class=\"pl-c1\">1</span>)]\n<span class=\"pl-c1\">self</span>._modules[<span class=\"pl-c1\">str</span>(index)] <span class=\"pl-k\">=</span> module</pre></div>\n<p>That's everything you need in the body of this function.</p>", "body_text": "Wouldn't it be simpler to just do this:\nfor i in range(len(self._modules), index, -1):\n  self._modules[str(i)] = self._modules[str(i - 1)]\nself._modules[str(index)] = module\nThat's everything you need in the body of this function."}