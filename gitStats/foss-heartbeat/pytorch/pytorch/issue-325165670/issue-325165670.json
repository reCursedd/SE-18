{"url": "https://api.github.com/repos/pytorch/pytorch/issues/7755", "repository_url": "https://api.github.com/repos/pytorch/pytorch", "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/7755/labels{/name}", "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/7755/comments", "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/7755/events", "html_url": "https://github.com/pytorch/pytorch/issues/7755", "id": 325165670, "node_id": "MDU6SXNzdWUzMjUxNjU2NzA=", "number": 7755, "title": "torch.empty after construction puts a high load on CPU for a long time when the size is big", "user": {"login": "SergeyDidenko", "id": 150409, "node_id": "MDQ6VXNlcjE1MDQwOQ==", "avatar_url": "https://avatars0.githubusercontent.com/u/150409?v=4", "gravatar_id": "", "url": "https://api.github.com/users/SergeyDidenko", "html_url": "https://github.com/SergeyDidenko", "followers_url": "https://api.github.com/users/SergeyDidenko/followers", "following_url": "https://api.github.com/users/SergeyDidenko/following{/other_user}", "gists_url": "https://api.github.com/users/SergeyDidenko/gists{/gist_id}", "starred_url": "https://api.github.com/users/SergeyDidenko/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/SergeyDidenko/subscriptions", "organizations_url": "https://api.github.com/users/SergeyDidenko/orgs", "repos_url": "https://api.github.com/users/SergeyDidenko/repos", "events_url": "https://api.github.com/users/SergeyDidenko/events{/privacy}", "received_events_url": "https://api.github.com/users/SergeyDidenko/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2018-05-22T07:07:27Z", "updated_at": "2018-05-22T20:15:10Z", "closed_at": "2018-05-22T20:09:52Z", "author_association": "NONE", "body_html": "<h2>Issue description</h2>\n<p><code>tensor_uninitialized = torch.empty(1000000)</code> returns immediately but just after that puts a 100% load an a CPU core that lasts about 40s. The longevity of this load seems to be proportional to the requested tensor size.</p>\n<p><code>numpy.empty()</code> and <code>torch.zeros()</code> have no this problem.</p>\n<h2>Code example</h2>\n<pre><code>tensor_uninitialized = torch.empty(1000000)\n</code></pre>\n<p>returns very fast but puts a long load on CPU</p>\n<h2>System Info</h2>\n<p>PyTorch version: 0.4.0<br>\nIs debug build: No<br>\nCUDA used to build PyTorch: 9.1.85</p>\n<p>OS: Linux Mint 18.3 Sylvia<br>\nGCC version: (Ubuntu 5.4.0-6ubuntu1~16.04.9) 5.4.0 20160609<br>\nCMake version: Could not collect</p>\n<p>Python version: 3.6<br>\nIs CUDA available: Yes<br>\nCUDA runtime version: 9.1.85<br>\nGPU models and configuration: GPU 0: GeForce GTX 1070<br>\nNvidia driver version: 387.26<br>\ncuDNN version: Probably one of the following:<br>\n/usr/lib/x86_64-linux-gnu/libcudnn.so.7.0.5<br>\n/usr/lib/x86_64-linux-gnu/libcudnn_static_v7.a</p>\n<p>Versions of relevant libraries:<br>\n[pip3] numpy (1.14.1)<br>\n[pip3] torch (0.4.0)<br>\n[pip3] torchvision (0.2.1)<br>\n[conda] Could not collect</p>", "body_text": "Issue description\ntensor_uninitialized = torch.empty(1000000) returns immediately but just after that puts a 100% load an a CPU core that lasts about 40s. The longevity of this load seems to be proportional to the requested tensor size.\nnumpy.empty() and torch.zeros() have no this problem.\nCode example\ntensor_uninitialized = torch.empty(1000000)\n\nreturns very fast but puts a long load on CPU\nSystem Info\nPyTorch version: 0.4.0\nIs debug build: No\nCUDA used to build PyTorch: 9.1.85\nOS: Linux Mint 18.3 Sylvia\nGCC version: (Ubuntu 5.4.0-6ubuntu1~16.04.9) 5.4.0 20160609\nCMake version: Could not collect\nPython version: 3.6\nIs CUDA available: Yes\nCUDA runtime version: 9.1.85\nGPU models and configuration: GPU 0: GeForce GTX 1070\nNvidia driver version: 387.26\ncuDNN version: Probably one of the following:\n/usr/lib/x86_64-linux-gnu/libcudnn.so.7.0.5\n/usr/lib/x86_64-linux-gnu/libcudnn_static_v7.a\nVersions of relevant libraries:\n[pip3] numpy (1.14.1)\n[pip3] torch (0.4.0)\n[pip3] torchvision (0.2.1)\n[conda] Could not collect", "body": "\r\n## Issue description\r\n\r\n`tensor_uninitialized = torch.empty(1000000)` returns immediately but just after that puts a 100% load an a CPU core that lasts about 40s. The longevity of this load seems to be proportional to the requested tensor size.\r\n\r\n`numpy.empty()` and `torch.zeros()` have no this problem.\r\n\r\n## Code example\r\n\r\n```\r\ntensor_uninitialized = torch.empty(1000000)\r\n```\r\n\r\nreturns very fast but puts a long load on CPU\r\n\r\n## System Info\r\nPyTorch version: 0.4.0\r\nIs debug build: No\r\nCUDA used to build PyTorch: 9.1.85\r\n\r\nOS: Linux Mint 18.3 Sylvia\r\nGCC version: (Ubuntu 5.4.0-6ubuntu1~16.04.9) 5.4.0 20160609\r\nCMake version: Could not collect\r\n\r\nPython version: 3.6\r\nIs CUDA available: Yes\r\nCUDA runtime version: 9.1.85\r\nGPU models and configuration: GPU 0: GeForce GTX 1070\r\nNvidia driver version: 387.26\r\ncuDNN version: Probably one of the following:\r\n/usr/lib/x86_64-linux-gnu/libcudnn.so.7.0.5\r\n/usr/lib/x86_64-linux-gnu/libcudnn_static_v7.a\r\n\r\nVersions of relevant libraries:\r\n[pip3] numpy (1.14.1)\r\n[pip3] torch (0.4.0)\r\n[pip3] torchvision (0.2.1)\r\n[conda] Could not collect\r\n"}