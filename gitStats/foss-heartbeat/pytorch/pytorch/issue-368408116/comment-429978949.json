{"url": "https://api.github.com/repos/pytorch/pytorch/issues/comments/429978949", "html_url": "https://github.com/pytorch/pytorch/pull/12502#issuecomment-429978949", "issue_url": "https://api.github.com/repos/pytorch/pytorch/issues/12502", "id": 429978949, "node_id": "MDEyOklzc3VlQ29tbWVudDQyOTk3ODk0OQ==", "user": {"login": "apaszke", "id": 4583066, "node_id": "MDQ6VXNlcjQ1ODMwNjY=", "avatar_url": "https://avatars3.githubusercontent.com/u/4583066?v=4", "gravatar_id": "", "url": "https://api.github.com/users/apaszke", "html_url": "https://github.com/apaszke", "followers_url": "https://api.github.com/users/apaszke/followers", "following_url": "https://api.github.com/users/apaszke/following{/other_user}", "gists_url": "https://api.github.com/users/apaszke/gists{/gist_id}", "starred_url": "https://api.github.com/users/apaszke/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/apaszke/subscriptions", "organizations_url": "https://api.github.com/users/apaszke/orgs", "repos_url": "https://api.github.com/users/apaszke/repos", "events_url": "https://api.github.com/users/apaszke/events{/privacy}", "received_events_url": "https://api.github.com/users/apaszke/received_events", "type": "User", "site_admin": false}, "created_at": "2018-10-15T19:14:57Z", "updated_at": "2018-10-15T19:14:57Z", "author_association": "MEMBER", "body_html": "<p><a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=5674597\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/SsnL\">@SsnL</a> I think the question boils down to how do you define what does it mean for a block of code to be differentiable. Note that all operations that are of concern to me happen <strong>outside of the <code>no_grad</code> block</strong>. While I agree that no gradients should even flow through the part of the function that has been encapsulated in that context manager, the surrounding program should work as if that didn't happen. In this case <code>z</code> is directly influenced by the data of <code>y</code>, and this influence happens in the differentiable region. This seems like an argument for allowing gradient propagation through it.</p>", "body_text": "@SsnL I think the question boils down to how do you define what does it mean for a block of code to be differentiable. Note that all operations that are of concern to me happen outside of the no_grad block. While I agree that no gradients should even flow through the part of the function that has been encapsulated in that context manager, the surrounding program should work as if that didn't happen. In this case z is directly influenced by the data of y, and this influence happens in the differentiable region. This seems like an argument for allowing gradient propagation through it.", "body": "@SsnL I think the question boils down to how do you define what does it mean for a block of code to be differentiable. Note that all operations that are of concern to me happen **outside of the `no_grad` block**. While I agree that no gradients should even flow through the part of the function that has been encapsulated in that context manager, the surrounding program should work as if that didn't happen. In this case `z` is directly influenced by the data of `y`, and this influence happens in the differentiable region. This seems like an argument for allowing gradient propagation through it."}