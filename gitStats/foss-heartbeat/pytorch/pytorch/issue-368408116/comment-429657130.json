{"url": "https://api.github.com/repos/pytorch/pytorch/issues/comments/429657130", "html_url": "https://github.com/pytorch/pytorch/pull/12502#issuecomment-429657130", "issue_url": "https://api.github.com/repos/pytorch/pytorch/issues/12502", "id": 429657130, "node_id": "MDEyOklzc3VlQ29tbWVudDQyOTY1NzEzMA==", "user": {"login": "apaszke", "id": 4583066, "node_id": "MDQ6VXNlcjQ1ODMwNjY=", "avatar_url": "https://avatars3.githubusercontent.com/u/4583066?v=4", "gravatar_id": "", "url": "https://api.github.com/users/apaszke", "html_url": "https://github.com/apaszke", "followers_url": "https://api.github.com/users/apaszke/followers", "following_url": "https://api.github.com/users/apaszke/following{/other_user}", "gists_url": "https://api.github.com/users/apaszke/gists{/gist_id}", "starred_url": "https://api.github.com/users/apaszke/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/apaszke/subscriptions", "organizations_url": "https://api.github.com/users/apaszke/orgs", "repos_url": "https://api.github.com/users/apaszke/repos", "events_url": "https://api.github.com/users/apaszke/events{/privacy}", "received_events_url": "https://api.github.com/users/apaszke/received_events", "type": "User", "site_admin": false}, "created_at": "2018-10-14T19:56:32Z", "updated_at": "2018-10-14T19:56:32Z", "author_association": "MEMBER", "body_html": "<p>I agree that the view should not start tracking gradient, but the problem is that the fact that it's a view and aliases other values that live entirely in <code>with_grad</code> regions might cause us to miss some differentiable connections. I don't think it's very intuitive.</p>\n<p><a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=655866\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/colesbury\">@colesbury</a> when you argued for introducing gradient context managers, your main argument was that \"whether you want to differentiate is a property of the code region and not data that's flowing inside it\". That's very reasonable and I agreed. In this case however, we're pushing this \"should you differentiate\" decision back to the data part (to the fact how Variables are wired), which outlives the context managers. I'm still unconvinced that this is how this should work.</p>", "body_text": "I agree that the view should not start tracking gradient, but the problem is that the fact that it's a view and aliases other values that live entirely in with_grad regions might cause us to miss some differentiable connections. I don't think it's very intuitive.\n@colesbury when you argued for introducing gradient context managers, your main argument was that \"whether you want to differentiate is a property of the code region and not data that's flowing inside it\". That's very reasonable and I agreed. In this case however, we're pushing this \"should you differentiate\" decision back to the data part (to the fact how Variables are wired), which outlives the context managers. I'm still unconvinced that this is how this should work.", "body": "I agree that the view should not start tracking gradient, but the problem is that the fact that it's a view and aliases other values that live entirely in `with_grad` regions might cause us to miss some differentiable connections. I don't think it's very intuitive.\r\n\r\n@colesbury when you argued for introducing gradient context managers, your main argument was that \"whether you want to differentiate is a property of the code region and not data that's flowing inside it\". That's very reasonable and I agreed. In this case however, we're pushing this \"should you differentiate\" decision back to the data part (to the fact how Variables are wired), which outlives the context managers. I'm still unconvinced that this is how this should work."}