{"url": "https://api.github.com/repos/pytorch/pytorch/issues/12516", "repository_url": "https://api.github.com/repos/pytorch/pytorch", "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/12516/labels{/name}", "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/12516/comments", "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/12516/events", "html_url": "https://github.com/pytorch/pytorch/issues/12516", "id": 368482073, "node_id": "MDU6SXNzdWUzNjg0ODIwNzM=", "number": 12516, "title": "[Windows] Unpooling of nn.FractionalMaxPool2d does not work", "user": {"login": "sanctifier", "id": 39151126, "node_id": "MDQ6VXNlcjM5MTUxMTI2", "avatar_url": "https://avatars1.githubusercontent.com/u/39151126?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sanctifier", "html_url": "https://github.com/sanctifier", "followers_url": "https://api.github.com/users/sanctifier/followers", "following_url": "https://api.github.com/users/sanctifier/following{/other_user}", "gists_url": "https://api.github.com/users/sanctifier/gists{/gist_id}", "starred_url": "https://api.github.com/users/sanctifier/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sanctifier/subscriptions", "organizations_url": "https://api.github.com/users/sanctifier/orgs", "repos_url": "https://api.github.com/users/sanctifier/repos", "events_url": "https://api.github.com/users/sanctifier/events{/privacy}", "received_events_url": "https://api.github.com/users/sanctifier/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 790080431, "node_id": "MDU6TGFiZWw3OTAwODA0MzE=", "url": "https://api.github.com/repos/pytorch/pytorch/labels/windows", "name": "windows", "color": "fcff6b", "default": false}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2018-10-10T03:41:23Z", "updated_at": "2018-10-16T21:55:26Z", "closed_at": null, "author_association": "NONE", "body_html": "<p>In official online document, the nn.MaxUnpool2d() is recommended to  unpool nn.FractionalMaxPool2d(), however, there are no stride, padding arguments involved in class nn.FractionalMaxPool2d, but the initialization of class nn.MaxUnpool2d does require stride and padding and these parameters affect the shape of the resulting data.</p>\n<p>Thus I wrote a script to compute stride and padding for nn.MaxUnpool2d to unpool nn.FractionalMaxPool2d. This script works fine in Pytorch 0.4, but not in Pytorch 0.4.1. The reason is the none-integer stride and padding trigger exception in forward() of nn.MaxUnpool2d.</p>\n<h2>To Reproduce</h2>\n<p>Steps to reproduce the behavior:</p>\n<pre><code>import torch, math\nimport torch.nn as nn\nimport torch.nn.functional as F\n\ndef compute_processed_size(data_size, kernel_size, process_mode='conv', stride=1, padding=0, dilation=1, output_ratio=None):\n    if process_mode == 'unpool':\n        return math.floor((data_size - 1) * stride - 2 * padding + kernel_size)\n\nsize = (100,80)    # sample size\ninput = torch.arange(1, size[0]*size[1] + 1).reshape((1,1,size[0],size[1])).float()\nkernel = (2, 2)   \noutput_ratio = 0.62   \nkernel, stride, padding = (2,2), (1/output_ratio,1/output_ratio), (0., 0.)\npool = nn.FractionalMaxPool2d(kernel_size=kernel,output_ratio=output_ratio,return_indices=True)\noutput, indices = pool(input)    \ndiff0, diff1 = 1, 1\nwhile diff0 != 0 or diff1 != 0:        \n    unpool_size0 = compute_processed_size(output.shape[2], kernel[0],'unpool',stride=stride[0],padding=padding[0])\n    unpool_size1 = compute_processed_size(output.shape[3], kernel[1],'unpool',stride=stride[1],padding=padding[1])\n    diff0, diff1 = unpool_size0-input.shape[2], unpool_size1 - input.shape[3]\n    if diff0 != 0 or diff1 != 0:\n        padding= (diff0/2, diff1/2)\nprint(f'unpool size {unpool_size0}-by-{unpool_size1}')\nunpool = nn.MaxUnpool2d(kernel_size=kernel,stride=stride,padding=padding)\nunpooled = unpool(output, indices)\n</code></pre>\n<p>The last line throws an exception as followings.<br>\nException has occurred: TypeError<br>\n'float' object cannot be interpreted as an integer<br>\nFile \"C:\\Users\\Administrator\\Desktop\\temp_python\\test.py\", line 25, in <br>\nunpooled = unpool(output, indices)</p>\n<h2>Expected behavior</h2>\n<p>nn.MaxUnpool2d can accept none-integer stride and padding parameters as in Pytorch 0.4, OR nn.MaxUnpool2d can unpool result from nn.FractionalMaxPool2d without requiring stride and padding.</p>\n<h2>Environment</h2>\n<p>PyTorch or Caffe2: PyTorch<br>\nHow you installed PyTorch (conda, pip, source): \"conda install pytorch cuda91\"<br>\nBuild command you used (if compiling from source):<br>\nOS: Windows 10 Home Edition<br>\nPyTorch version: 0.4.1<br>\nPython version: 3.6.5 |Anaconda, Inc.| (default, Mar 29 2018, 13:32:41) [MSC v.1900 64 bit (AMD64)]<br>\nCUDA/cuDNN version: 9.1.85/7005<br>\nGPU models and configuration: GPU 0 = GeForce GTX 1060<br>\nGCC version (if compiling from source):<br>\nCMake version:<br>\nVersions of any other relevant libraries: torchvision (0.2.1)</p>", "body_text": "In official online document, the nn.MaxUnpool2d() is recommended to  unpool nn.FractionalMaxPool2d(), however, there are no stride, padding arguments involved in class nn.FractionalMaxPool2d, but the initialization of class nn.MaxUnpool2d does require stride and padding and these parameters affect the shape of the resulting data.\nThus I wrote a script to compute stride and padding for nn.MaxUnpool2d to unpool nn.FractionalMaxPool2d. This script works fine in Pytorch 0.4, but not in Pytorch 0.4.1. The reason is the none-integer stride and padding trigger exception in forward() of nn.MaxUnpool2d.\nTo Reproduce\nSteps to reproduce the behavior:\nimport torch, math\nimport torch.nn as nn\nimport torch.nn.functional as F\n\ndef compute_processed_size(data_size, kernel_size, process_mode='conv', stride=1, padding=0, dilation=1, output_ratio=None):\n    if process_mode == 'unpool':\n        return math.floor((data_size - 1) * stride - 2 * padding + kernel_size)\n\nsize = (100,80)    # sample size\ninput = torch.arange(1, size[0]*size[1] + 1).reshape((1,1,size[0],size[1])).float()\nkernel = (2, 2)   \noutput_ratio = 0.62   \nkernel, stride, padding = (2,2), (1/output_ratio,1/output_ratio), (0., 0.)\npool = nn.FractionalMaxPool2d(kernel_size=kernel,output_ratio=output_ratio,return_indices=True)\noutput, indices = pool(input)    \ndiff0, diff1 = 1, 1\nwhile diff0 != 0 or diff1 != 0:        \n    unpool_size0 = compute_processed_size(output.shape[2], kernel[0],'unpool',stride=stride[0],padding=padding[0])\n    unpool_size1 = compute_processed_size(output.shape[3], kernel[1],'unpool',stride=stride[1],padding=padding[1])\n    diff0, diff1 = unpool_size0-input.shape[2], unpool_size1 - input.shape[3]\n    if diff0 != 0 or diff1 != 0:\n        padding= (diff0/2, diff1/2)\nprint(f'unpool size {unpool_size0}-by-{unpool_size1}')\nunpool = nn.MaxUnpool2d(kernel_size=kernel,stride=stride,padding=padding)\nunpooled = unpool(output, indices)\n\nThe last line throws an exception as followings.\nException has occurred: TypeError\n'float' object cannot be interpreted as an integer\nFile \"C:\\Users\\Administrator\\Desktop\\temp_python\\test.py\", line 25, in \nunpooled = unpool(output, indices)\nExpected behavior\nnn.MaxUnpool2d can accept none-integer stride and padding parameters as in Pytorch 0.4, OR nn.MaxUnpool2d can unpool result from nn.FractionalMaxPool2d without requiring stride and padding.\nEnvironment\nPyTorch or Caffe2: PyTorch\nHow you installed PyTorch (conda, pip, source): \"conda install pytorch cuda91\"\nBuild command you used (if compiling from source):\nOS: Windows 10 Home Edition\nPyTorch version: 0.4.1\nPython version: 3.6.5 |Anaconda, Inc.| (default, Mar 29 2018, 13:32:41) [MSC v.1900 64 bit (AMD64)]\nCUDA/cuDNN version: 9.1.85/7005\nGPU models and configuration: GPU 0 = GeForce GTX 1060\nGCC version (if compiling from source):\nCMake version:\nVersions of any other relevant libraries: torchvision (0.2.1)", "body": "In official online document, the nn.MaxUnpool2d() is recommended to  unpool nn.FractionalMaxPool2d(), however, there are no stride, padding arguments involved in class nn.FractionalMaxPool2d, but the initialization of class nn.MaxUnpool2d does require stride and padding and these parameters affect the shape of the resulting data. \r\n\r\nThus I wrote a script to compute stride and padding for nn.MaxUnpool2d to unpool nn.FractionalMaxPool2d. This script works fine in Pytorch 0.4, but not in Pytorch 0.4.1. The reason is the none-integer stride and padding trigger exception in forward() of nn.MaxUnpool2d.\r\n\r\n## To Reproduce\r\n\r\nSteps to reproduce the behavior:\r\n\r\n    import torch, math\r\n    import torch.nn as nn\r\n    import torch.nn.functional as F\r\n\r\n    def compute_processed_size(data_size, kernel_size, process_mode='conv', stride=1, padding=0, dilation=1, output_ratio=None):\r\n        if process_mode == 'unpool':\r\n            return math.floor((data_size - 1) * stride - 2 * padding + kernel_size)\r\n    \r\n    size = (100,80)    # sample size\r\n    input = torch.arange(1, size[0]*size[1] + 1).reshape((1,1,size[0],size[1])).float()\r\n    kernel = (2, 2)   \r\n    output_ratio = 0.62   \r\n    kernel, stride, padding = (2,2), (1/output_ratio,1/output_ratio), (0., 0.)\r\n    pool = nn.FractionalMaxPool2d(kernel_size=kernel,output_ratio=output_ratio,return_indices=True)\r\n    output, indices = pool(input)    \r\n    diff0, diff1 = 1, 1\r\n    while diff0 != 0 or diff1 != 0:        \r\n        unpool_size0 = compute_processed_size(output.shape[2], kernel[0],'unpool',stride=stride[0],padding=padding[0])\r\n        unpool_size1 = compute_processed_size(output.shape[3], kernel[1],'unpool',stride=stride[1],padding=padding[1])\r\n        diff0, diff1 = unpool_size0-input.shape[2], unpool_size1 - input.shape[3]\r\n        if diff0 != 0 or diff1 != 0:\r\n            padding= (diff0/2, diff1/2)\r\n    print(f'unpool size {unpool_size0}-by-{unpool_size1}')\r\n    unpool = nn.MaxUnpool2d(kernel_size=kernel,stride=stride,padding=padding)\r\n    unpooled = unpool(output, indices)\r\n\r\nThe last line throws an exception as followings.\r\nException has occurred: TypeError\r\n'float' object cannot be interpreted as an integer\r\n  File \"C:\\Users\\Administrator\\Desktop\\temp_python\\test.py\", line 25, in <module>\r\n    unpooled = unpool(output, indices)    \r\n\r\n## Expected behavior\r\n\r\nnn.MaxUnpool2d can accept none-integer stride and padding parameters as in Pytorch 0.4, OR nn.MaxUnpool2d can unpool result from nn.FractionalMaxPool2d without requiring stride and padding.\r\n\r\n## Environment\r\n\r\nPyTorch or Caffe2: PyTorch\r\nHow you installed PyTorch (conda, pip, source): \"conda install pytorch cuda91\"\r\nBuild command you used (if compiling from source):\r\nOS: Windows 10 Home Edition\r\nPyTorch version: 0.4.1\r\nPython version: 3.6.5 |Anaconda, Inc.| (default, Mar 29 2018, 13:32:41) [MSC v.1900 64 bit (AMD64)]\r\nCUDA/cuDNN version: 9.1.85/7005\r\nGPU models and configuration: GPU 0 = GeForce GTX 1060\r\nGCC version (if compiling from source):\r\nCMake version:\r\nVersions of any other relevant libraries: torchvision (0.2.1)\r\n"}