{"url": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/171502672", "pull_request_review_id": 100363110, "id": 171502672, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE3MTUwMjY3Mg==", "diff_hunk": "@@ -456,7 +457,152 @@ def trace(*args, **kwargs):\n         >>> def f(x):\n         >>>     return x * 2\n     \"\"\"\n-    return lambda func: torch._C.GraphExecutor(func, args, kwargs.pop('optimize', True))\n+    def wrapper(func):\n+        executor_options = {'optimize': True}\n+        for name in executor_options:\n+            executor_options[name] = kwargs.pop(name, executor_options[name])\n+        if isinstance(func, torch.nn.Module):\n+            captures = list(func.state_dict(keep_vars=True).values())\n+            # TODO: support shared parameters\n+            if len(set(map(id, captures))) != len(list(map(id, captures))):\n+                raise ValueError(\"TracedModules don't support parameter sharing between modules\")\n+            executor = torch._C.GraphExecutor(func, args, captures=captures, **executor_options)\n+            return TracedModule(func, executor)\n+        else:\n+            return torch._C.GraphExecutor(func, args, **executor_options)\n+    return wrapper\n+\n+\n+class TracedModuleBase(torch.nn.Module):\n+    __frozen = False\n+\n+    def __init__(self, orig):\n+        super(TracedModuleBase, self).__init__()\n+\n+        self.training = orig.training\n+        for name, param in orig._parameters.items():\n+            if param is not None:\n+                self._parameters[name] = param\n+        for name, buf in orig._buffers.items():\n+            if param is not None:\n+                self._buffers[name] = buf\n+        self._orig_class = type(orig)\n+\n+        if orig._backward_hooks or orig._forward_hooks or orig._forward_pre_hooks:\n+            raise ValueError(\"Modules that have hooks assigned can't be compiled\")\n+\n+        # XXX: submodules can't be initialized here, because we don't know what the root is\n+\n+    def _freeze(self):\n+        self.__frozen = True\n+\n+    def __setattr__(self, name, value):\n+        if not self.__frozen:\n+            return super(TracedModuleBase, self).__setattr__(name, value)\n+        if name in self._parameters or name in self._buffers:\n+            self._recompute_captures()\n+            return super(TracedModuleBase, self).__setattr__(name, value)", "path": "torch/jit/__init__.py", "position": 78, "original_position": 78, "commit_id": "b02df12699d14cb04dbff311dc363d43e6abae5a", "original_commit_id": "faa2bc89d0cb52630c9d56f318d6e00b28867c3b", "user": {"login": "apaszke", "id": 4583066, "node_id": "MDQ6VXNlcjQ1ODMwNjY=", "avatar_url": "https://avatars3.githubusercontent.com/u/4583066?v=4", "gravatar_id": "", "url": "https://api.github.com/users/apaszke", "html_url": "https://github.com/apaszke", "followers_url": "https://api.github.com/users/apaszke/followers", "following_url": "https://api.github.com/users/apaszke/following{/other_user}", "gists_url": "https://api.github.com/users/apaszke/gists{/gist_id}", "starred_url": "https://api.github.com/users/apaszke/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/apaszke/subscriptions", "organizations_url": "https://api.github.com/users/apaszke/orgs", "repos_url": "https://api.github.com/users/apaszke/repos", "events_url": "https://api.github.com/users/apaszke/events{/privacy}", "received_events_url": "https://api.github.com/users/apaszke/received_events", "type": "User", "site_admin": false}, "body": "Yeah I think it should.", "created_at": "2018-03-01T09:31:47Z", "updated_at": "2018-11-23T15:40:11Z", "html_url": "https://github.com/pytorch/pytorch/pull/5409#discussion_r171502672", "pull_request_url": "https://api.github.com/repos/pytorch/pytorch/pulls/5409", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/171502672"}, "html": {"href": "https://github.com/pytorch/pytorch/pull/5409#discussion_r171502672"}, "pull_request": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/5409"}}, "body_html": "<p>Yeah I think it should.</p>", "body_text": "Yeah I think it should.", "in_reply_to_id": 171424009}