{"url": "https://api.github.com/repos/pytorch/pytorch/issues/comments/368741153", "html_url": "https://github.com/pytorch/pytorch/pull/5409#issuecomment-368741153", "issue_url": "https://api.github.com/repos/pytorch/pytorch/issues/5409", "id": 368741153, "node_id": "MDEyOklzc3VlQ29tbWVudDM2ODc0MTE1Mw==", "user": {"login": "ezyang", "id": 13564, "node_id": "MDQ6VXNlcjEzNTY0", "avatar_url": "https://avatars0.githubusercontent.com/u/13564?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ezyang", "html_url": "https://github.com/ezyang", "followers_url": "https://api.github.com/users/ezyang/followers", "following_url": "https://api.github.com/users/ezyang/following{/other_user}", "gists_url": "https://api.github.com/users/ezyang/gists{/gist_id}", "starred_url": "https://api.github.com/users/ezyang/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ezyang/subscriptions", "organizations_url": "https://api.github.com/users/ezyang/orgs", "repos_url": "https://api.github.com/users/ezyang/repos", "events_url": "https://api.github.com/users/ezyang/events{/privacy}", "received_events_url": "https://api.github.com/users/ezyang/received_events", "type": "User", "site_admin": false}, "created_at": "2018-02-27T04:09:38Z", "updated_at": "2018-02-27T04:09:38Z", "author_association": "CONTRIBUTOR", "body_html": "<p><g-emoji class=\"g-emoji\" alias=\"+1\" fallback-src=\"https://assets-cdn.github.com/images/icons/emoji/unicode/1f44d.png\">\ud83d\udc4d</g-emoji> on <a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=370202\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/zdevito\">@zdevito</a>'s comments. It is not to say that you will <em>never</em> implement a \"traced module\" that will masquerade as the original module, but this will be done as an abstraction layer on top of the lower-level basic implementation.</p>", "body_text": "\ud83d\udc4d on @zdevito's comments. It is not to say that you will never implement a \"traced module\" that will masquerade as the original module, but this will be done as an abstraction layer on top of the lower-level basic implementation.", "body": ":+1: on @zdevito's comments. It is not to say that you will *never* implement a \"traced module\" that will masquerade as the original module, but this will be done as an abstraction layer on top of the lower-level basic implementation."}