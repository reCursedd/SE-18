{"url": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/151749462", "pull_request_review_id": 77513400, "id": 151749462, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE1MTc0OTQ2Mg==", "diff_hunk": "@@ -320,53 +320,47 @@ bool FunctionSignature::parse(PyObject* args, PyObject* kwargs, PyObject* dst[],\n   int i = 0;\n   for (auto& param : params) {\n     PyObject* obj = nullptr;\n+    bool is_kwd = false;\n     if (arg_pos < nargs) {\n       obj = PyTuple_GET_ITEM(args, arg_pos);\n-      if (obj == Py_None && param.allow_none) {\n-        dst[i++] = nullptr;\n-        arg_pos++;\n-        continue;\n-      }\n-      if (param.check(obj)) {\n-        dst[i++] = obj;\n-        arg_pos++;\n-        continue;\n-      }\n-      if (allow_varargs_intlist && arg_pos == 0) {\n-        dst[i++] = args;\n-        arg_pos += nargs;\n-        continue;\n-      }\n+    } else if (kwargs) {\n+      obj = PyDict_GetItem(kwargs, param.python_name);\n+      is_kwd = true;\n+    }\n+\n+    if ((!obj && param.optional) || (obj == Py_None && param.allow_none)) {\n+      dst[i++] = nullptr;\n+    } else if (!obj) {\n       if (raise_exception) {\n+        // foo() missing 1 required positional argument: \"b\"\n+        missing_args(*this, i);\n+      }\n+      return false;\n+    } else if (param.check(obj)) {\n+      dst[i++] = obj;\n+    } else if (allow_varargs_intlist && arg_pos == 0 && !is_kwd) {\n+      dst[i++] = args;\n+      arg_pos = nargs;", "path": "torch/csrc/utils/python_arg_parser.cpp", "position": null, "original_position": 39, "commit_id": "33b42f1d60819d7915df7b237b375870bc6fbe11", "original_commit_id": "a18eee93f95da959c22e5d332d5fdf01298ed348", "user": {"login": "gchanan", "id": 3768583, "node_id": "MDQ6VXNlcjM3Njg1ODM=", "avatar_url": "https://avatars2.githubusercontent.com/u/3768583?v=4", "gravatar_id": "", "url": "https://api.github.com/users/gchanan", "html_url": "https://github.com/gchanan", "followers_url": "https://api.github.com/users/gchanan/followers", "following_url": "https://api.github.com/users/gchanan/following{/other_user}", "gists_url": "https://api.github.com/users/gchanan/gists{/gist_id}", "starred_url": "https://api.github.com/users/gchanan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/gchanan/subscriptions", "organizations_url": "https://api.github.com/users/gchanan/orgs", "repos_url": "https://api.github.com/users/gchanan/repos", "events_url": "https://api.github.com/users/gchanan/events{/privacy}", "received_events_url": "https://api.github.com/users/gchanan/received_events", "type": "User", "site_admin": false}, "body": "nit: this will end up being 1 past the length because it will be incremented again.  Probably not worth complicating the code, though.", "created_at": "2017-11-17T17:58:29Z", "updated_at": "2018-11-23T15:36:38Z", "html_url": "https://github.com/pytorch/pytorch/pull/3739#discussion_r151749462", "pull_request_url": "https://api.github.com/repos/pytorch/pytorch/pulls/3739", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/151749462"}, "html": {"href": "https://github.com/pytorch/pytorch/pull/3739#discussion_r151749462"}, "pull_request": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/3739"}}, "body_html": "<p>nit: this will end up being 1 past the length because it will be incremented again.  Probably not worth complicating the code, though.</p>", "body_text": "nit: this will end up being 1 past the length because it will be incremented again.  Probably not worth complicating the code, though."}