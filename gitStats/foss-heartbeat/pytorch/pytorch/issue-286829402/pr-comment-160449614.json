{"url": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/160449614", "pull_request_review_id": 87569202, "id": 160449614, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE2MDQ0OTYxNA==", "diff_hunk": "@@ -5,16 +5,22 @@\n \n namespace at {\n \n-static inline int64_t maybe_wrap_dim(int64_t dim, int64_t dim_post_expr) {\n+static inline int64_t maybe_wrap_dim(int64_t dim, int64_t dim_post_expr, bool wrap_scalar=true) {\n   if (dim_post_expr <= 0) {", "path": "aten/src/ATen/WrapDimUtils.h", "position": 6, "original_position": 6, "commit_id": "02407970df038beb2c554988b206ffd379cdfa4c", "original_commit_id": "02407970df038beb2c554988b206ffd379cdfa4c", "user": {"login": "gchanan", "id": 3768583, "node_id": "MDQ6VXNlcjM3Njg1ODM=", "avatar_url": "https://avatars2.githubusercontent.com/u/3768583?v=4", "gravatar_id": "", "url": "https://api.github.com/users/gchanan", "html_url": "https://github.com/gchanan", "followers_url": "https://api.github.com/users/gchanan/followers", "following_url": "https://api.github.com/users/gchanan/following{/other_user}", "gists_url": "https://api.github.com/users/gchanan/gists{/gist_id}", "starred_url": "https://api.github.com/users/gchanan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/gchanan/subscriptions", "organizations_url": "https://api.github.com/users/gchanan/orgs", "repos_url": "https://api.github.com/users/gchanan/repos", "events_url": "https://api.github.com/users/gchanan/events{/privacy}", "received_events_url": "https://api.github.com/users/gchanan/received_events", "type": "User", "site_admin": false}, "body": "I think @apaszke is probably referring to `tensor.dim()`; it used to be possible to have negative values before we had size {0} tensors, but now they are always non-negative.\r\n\r\n`dim_post_expr` is IMO unfortunately named because it's `tensor.dim() + expr`, i.e. has nothing really to do with the `dim` parameter and can't currently be negative (because expr is always 0 or 1 and dim is always at least 0).\r\n\r\nI'm open to suggestions for making this clearer -- maybe rename the parameter `ndim_post_expr` and just check == 0?", "created_at": "2018-01-09T16:08:58Z", "updated_at": "2018-11-23T15:37:58Z", "html_url": "https://github.com/pytorch/pytorch/pull/4536#discussion_r160449614", "pull_request_url": "https://api.github.com/repos/pytorch/pytorch/pulls/4536", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/160449614"}, "html": {"href": "https://github.com/pytorch/pytorch/pull/4536#discussion_r160449614"}, "pull_request": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/4536"}}, "body_html": "<p>I think <a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=4583066\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/apaszke\">@apaszke</a> is probably referring to <code>tensor.dim()</code>; it used to be possible to have negative values before we had size {0} tensors, but now they are always non-negative.</p>\n<p><code>dim_post_expr</code> is IMO unfortunately named because it's <code>tensor.dim() + expr</code>, i.e. has nothing really to do with the <code>dim</code> parameter and can't currently be negative (because expr is always 0 or 1 and dim is always at least 0).</p>\n<p>I'm open to suggestions for making this clearer -- maybe rename the parameter <code>ndim_post_expr</code> and just check == 0?</p>", "body_text": "I think @apaszke is probably referring to tensor.dim(); it used to be possible to have negative values before we had size {0} tensors, but now they are always non-negative.\ndim_post_expr is IMO unfortunately named because it's tensor.dim() + expr, i.e. has nothing really to do with the dim parameter and can't currently be negative (because expr is always 0 or 1 and dim is always at least 0).\nI'm open to suggestions for making this clearer -- maybe rename the parameter ndim_post_expr and just check == 0?", "in_reply_to_id": 160350715}