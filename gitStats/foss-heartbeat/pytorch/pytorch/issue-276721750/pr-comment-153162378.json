{"url": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/153162378", "pull_request_review_id": 79115948, "id": 153162378, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE1MzE2MjM3OA==", "diff_hunk": "@@ -193,6 +362,55 @@ struct CodeImpl {\n   std::vector<bool> bool_data;\n };\n \n+\n+struct Registers {\n+  Registers(size_t size)\n+  : registers(size) {}\n+  Registers(const Registers & rhs)\n+  : registers(rhs.registers) {\n+    for(auto & r : registers) {\n+      if(isValid(r))\n+        r->retain();\n+    }\n+  }\n+  ~Registers() {\n+    for(auto & r : registers) {\n+      if(isValid(r))\n+        r->release();\n+    }\n+  }\n+  at::RefCounted*& operator[](size_t i) {\n+    return registers[i];\n+  }\n+  //guarenteed to be non-null\n+  at::RefCounted* release(size_t i) {\n+    auto & v = registers[i];\n+    if(isValid(v)) {\n+      v->release();\n+      v = nullptr;\n+    }\n+    return v;\n+  }\n+  void save(size_t i, const at::Tensor & t) {\n+    registers[i] = at::Tensor(t).detach();\n+  }\n+  at::Tensor load(size_t i, bool andFree) {\n+    auto & v = registers[i];\n+    if(andFree) {\n+      auto r = at::Tensor(static_cast<at::TensorImpl*>(v), false);\n+      v = nullptr;\n+      return r;\n+    } else {\n+      return at::Tensor(static_cast<at::TensorImpl*>(v), true);", "path": "torch/csrc/jit/interpreter.cpp", "position": null, "original_position": 303, "commit_id": "9ed71c792b2ea33bbc30a18bd9b0bc7cc7ea5c84", "original_commit_id": "1c5a385c904352750860eb388e46801d8de5d803", "user": {"login": "apaszke", "id": 4583066, "node_id": "MDQ6VXNlcjQ1ODMwNjY=", "avatar_url": "https://avatars3.githubusercontent.com/u/4583066?v=4", "gravatar_id": "", "url": "https://api.github.com/users/apaszke", "html_url": "https://github.com/apaszke", "followers_url": "https://api.github.com/users/apaszke/followers", "following_url": "https://api.github.com/users/apaszke/following{/other_user}", "gists_url": "https://api.github.com/users/apaszke/gists{/gist_id}", "starred_url": "https://api.github.com/users/apaszke/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/apaszke/subscriptions", "organizations_url": "https://api.github.com/users/apaszke/orgs", "repos_url": "https://api.github.com/users/apaszke/repos", "events_url": "https://api.github.com/users/apaszke/events{/privacy}", "received_events_url": "https://api.github.com/users/apaszke/received_events", "type": "User", "site_admin": false}, "body": "nit: you can use that tensor caster you defined earlier", "created_at": "2017-11-27T10:49:38Z", "updated_at": "2018-11-23T15:36:50Z", "html_url": "https://github.com/pytorch/pytorch/pull/3866#discussion_r153162378", "pull_request_url": "https://api.github.com/repos/pytorch/pytorch/pulls/3866", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/153162378"}, "html": {"href": "https://github.com/pytorch/pytorch/pull/3866#discussion_r153162378"}, "pull_request": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/3866"}}, "body_html": "<p>nit: you can use that tensor caster you defined earlier</p>", "body_text": "nit: you can use that tensor caster you defined earlier"}