{"url": "https://api.github.com/repos/pytorch/pytorch/issues/comments/347694396", "html_url": "https://github.com/pytorch/pytorch/pull/3866#issuecomment-347694396", "issue_url": "https://api.github.com/repos/pytorch/pytorch/issues/3866", "id": 347694396, "node_id": "MDEyOklzc3VlQ29tbWVudDM0NzY5NDM5Ng==", "user": {"login": "apaszke", "id": 4583066, "node_id": "MDQ6VXNlcjQ1ODMwNjY=", "avatar_url": "https://avatars3.githubusercontent.com/u/4583066?v=4", "gravatar_id": "", "url": "https://api.github.com/users/apaszke", "html_url": "https://github.com/apaszke", "followers_url": "https://api.github.com/users/apaszke/followers", "following_url": "https://api.github.com/users/apaszke/following{/other_user}", "gists_url": "https://api.github.com/users/apaszke/gists{/gist_id}", "starred_url": "https://api.github.com/users/apaszke/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/apaszke/subscriptions", "organizations_url": "https://api.github.com/users/apaszke/orgs", "repos_url": "https://api.github.com/users/apaszke/repos", "events_url": "https://api.github.com/users/apaszke/events{/privacy}", "received_events_url": "https://api.github.com/users/apaszke/received_events", "type": "User", "site_admin": false}, "created_at": "2017-11-28T23:05:41Z", "updated_at": "2017-11-28T23:05:41Z", "author_association": "MEMBER", "body_html": "<p>And this <code>std::unique_ptr&lt;at::Retainable&gt;</code> could also be used to implement the struct we use to hold registers, without the need to iterate through these vectors and checking if we don't need to free sth. It will do it automatically when you destruct it, or reset to a <code>nullptr</code>.</p>", "body_text": "And this std::unique_ptr<at::Retainable> could also be used to implement the struct we use to hold registers, without the need to iterate through these vectors and checking if we don't need to free sth. It will do it automatically when you destruct it, or reset to a nullptr.", "body": "And this `std::unique_ptr<at::Retainable>` could also be used to implement the struct we use to hold registers, without the need to iterate through these vectors and checking if we don't need to free sth. It will do it automatically when you destruct it, or reset to a `nullptr`."}