{"url": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/153164985", "pull_request_review_id": 79115948, "id": 153164985, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE1MzE2NDk4NQ==", "diff_hunk": "@@ -193,6 +362,55 @@ struct CodeImpl {\n   std::vector<bool> bool_data;\n };\n \n+\n+struct Registers {\n+  Registers(size_t size)\n+  : registers(size) {}\n+  Registers(const Registers & rhs)\n+  : registers(rhs.registers) {\n+    for(auto & r : registers) {\n+      if(isValid(r))\n+        r->retain();\n+    }\n+  }\n+  ~Registers() {\n+    for(auto & r : registers) {\n+      if(isValid(r))\n+        r->release();\n+    }\n+  }\n+  at::RefCounted*& operator[](size_t i) {", "path": "torch/csrc/jit/interpreter.cpp", "position": null, "original_position": 281, "commit_id": "9ed71c792b2ea33bbc30a18bd9b0bc7cc7ea5c84", "original_commit_id": "1c5a385c904352750860eb388e46801d8de5d803", "user": {"login": "apaszke", "id": 4583066, "node_id": "MDQ6VXNlcjQ1ODMwNjY=", "avatar_url": "https://avatars3.githubusercontent.com/u/4583066?v=4", "gravatar_id": "", "url": "https://api.github.com/users/apaszke", "html_url": "https://github.com/apaszke", "followers_url": "https://api.github.com/users/apaszke/followers", "following_url": "https://api.github.com/users/apaszke/following{/other_user}", "gists_url": "https://api.github.com/users/apaszke/gists{/gist_id}", "starred_url": "https://api.github.com/users/apaszke/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/apaszke/subscriptions", "organizations_url": "https://api.github.com/users/apaszke/orgs", "repos_url": "https://api.github.com/users/apaszke/repos", "events_url": "https://api.github.com/users/apaszke/events{/privacy}", "received_events_url": "https://api.github.com/users/apaszke/received_events", "type": "User", "site_admin": false}, "body": "Returning a reference in here seems dangerous - if you have a managed object in `i`th position, and you just overwrite its pointer with another one, then the previous one won't be freed.\r\n\r\nAt least describing the intended semantics would be helpful.", "created_at": "2017-11-27T11:00:35Z", "updated_at": "2018-11-23T15:36:50Z", "html_url": "https://github.com/pytorch/pytorch/pull/3866#discussion_r153164985", "pull_request_url": "https://api.github.com/repos/pytorch/pytorch/pulls/3866", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/153164985"}, "html": {"href": "https://github.com/pytorch/pytorch/pull/3866#discussion_r153164985"}, "pull_request": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/3866"}}, "body_html": "<p>Returning a reference in here seems dangerous - if you have a managed object in <code>i</code>th position, and you just overwrite its pointer with another one, then the previous one won't be freed.</p>\n<p>At least describing the intended semantics would be helpful.</p>", "body_text": "Returning a reference in here seems dangerous - if you have a managed object in ith position, and you just overwrite its pointer with another one, then the previous one won't be freed.\nAt least describing the intended semantics would be helpful."}