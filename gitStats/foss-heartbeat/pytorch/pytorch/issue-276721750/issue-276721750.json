{"url": "https://api.github.com/repos/pytorch/pytorch/issues/3866", "repository_url": "https://api.github.com/repos/pytorch/pytorch", "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/3866/labels{/name}", "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/3866/comments", "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/3866/events", "html_url": "https://github.com/pytorch/pytorch/pull/3866", "id": 276721750, "node_id": "MDExOlB1bGxSZXF1ZXN0MTU0NjIyMDkz", "number": 3866, "title": "Add interpreter support for Handles/PythonOp/CppOp", "user": {"login": "zdevito", "id": 370202, "node_id": "MDQ6VXNlcjM3MDIwMg==", "avatar_url": "https://avatars0.githubusercontent.com/u/370202?v=4", "gravatar_id": "", "url": "https://api.github.com/users/zdevito", "html_url": "https://github.com/zdevito", "followers_url": "https://api.github.com/users/zdevito/followers", "following_url": "https://api.github.com/users/zdevito/following{/other_user}", "gists_url": "https://api.github.com/users/zdevito/gists{/gist_id}", "starred_url": "https://api.github.com/users/zdevito/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/zdevito/subscriptions", "organizations_url": "https://api.github.com/users/zdevito/orgs", "repos_url": "https://api.github.com/users/zdevito/repos", "events_url": "https://api.github.com/users/zdevito/events{/privacy}", "received_events_url": "https://api.github.com/users/zdevito/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 7, "created_at": "2017-11-25T03:17:35Z", "updated_at": "2018-11-23T15:36:57Z", "closed_at": "2017-11-29T16:38:57Z", "author_association": "CONTRIBUTOR", "pull_request": {"url": "https://api.github.com/repos/pytorch/pytorch/pulls/3866", "html_url": "https://github.com/pytorch/pytorch/pull/3866", "diff_url": "https://github.com/pytorch/pytorch/pull/3866.diff", "patch_url": "https://github.com/pytorch/pytorch/pull/3866.patch"}, "body_html": "<p>This treats Handles as a first-class type in the interpreter<br>\nsince this turned out to be conceptually simpler than treating<br>\nthem as a separate concept, which requires a second channel for<br>\nregister allocating and moving data from one op to the next.</p>\n<p>Notes:</p>\n<ul>\n<li>The refcounting nature of tensors is factored into its own base type<br>\nso that it can be shared with other refcounted types such as handle.</li>\n<li>Some methods redundant with TensorBase have been deleted from Tensor</li>\n<li>The interpreter uses raw refcounted handles. In addition to being<br>\nable to treat Tensors and Handles as the same base object, it removes<br>\na lot of redundant refcounting as objects moved from tensors to input/<br>\noutput lists.</li>\n<li>aten_dispatch has been updated to work directly on the raw refcounted<br>\nlists to avoid refcounting and duplicate lists.</li>\n<li>PythonOp and CppOp gain VariableFlags lists so that the interpreter knows how the bodies of those operators should be executed.</li>\n</ul>", "body_text": "This treats Handles as a first-class type in the interpreter\nsince this turned out to be conceptually simpler than treating\nthem as a separate concept, which requires a second channel for\nregister allocating and moving data from one op to the next.\nNotes:\n\nThe refcounting nature of tensors is factored into its own base type\nso that it can be shared with other refcounted types such as handle.\nSome methods redundant with TensorBase have been deleted from Tensor\nThe interpreter uses raw refcounted handles. In addition to being\nable to treat Tensors and Handles as the same base object, it removes\na lot of redundant refcounting as objects moved from tensors to input/\noutput lists.\naten_dispatch has been updated to work directly on the raw refcounted\nlists to avoid refcounting and duplicate lists.\nPythonOp and CppOp gain VariableFlags lists so that the interpreter knows how the bodies of those operators should be executed.", "body": "This treats Handles as a first-class type in the interpreter\r\nsince this turned out to be conceptually simpler than treating\r\nthem as a separate concept, which requires a second channel for\r\nregister allocating and moving data from one op to the next.\r\n\r\nNotes:\r\n* The refcounting nature of tensors is factored into its own base type\r\nso that it can be shared with other refcounted types such as handle.\r\n* Some methods redundant with TensorBase have been deleted from Tensor\r\n* The interpreter uses raw refcounted handles. In addition to being\r\nable to treat Tensors and Handles as the same base object, it removes\r\na lot of redundant refcounting as objects moved from tensors to input/\r\noutput lists.\r\n* aten_dispatch has been updated to work directly on the raw refcounted\r\nlists to avoid refcounting and duplicate lists.\r\n* PythonOp and CppOp gain VariableFlags lists so that the interpreter knows how the bodies of those operators should be executed."}