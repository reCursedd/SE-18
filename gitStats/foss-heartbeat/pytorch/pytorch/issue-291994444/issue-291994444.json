{"url": "https://api.github.com/repos/pytorch/pytorch/issues/4877", "repository_url": "https://api.github.com/repos/pytorch/pytorch", "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/4877/labels{/name}", "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/4877/comments", "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/4877/events", "html_url": "https://github.com/pytorch/pytorch/issues/4877", "id": 291994444, "node_id": "MDU6SXNzdWUyOTE5OTQ0NDQ=", "number": 4877, "title": "`arange` incorrect behavior above 2^24", "user": {"login": "adamlerer", "id": 5702157, "node_id": "MDQ6VXNlcjU3MDIxNTc=", "avatar_url": "https://avatars2.githubusercontent.com/u/5702157?v=4", "gravatar_id": "", "url": "https://api.github.com/users/adamlerer", "html_url": "https://github.com/adamlerer", "followers_url": "https://api.github.com/users/adamlerer/followers", "following_url": "https://api.github.com/users/adamlerer/following{/other_user}", "gists_url": "https://api.github.com/users/adamlerer/gists{/gist_id}", "starred_url": "https://api.github.com/users/adamlerer/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/adamlerer/subscriptions", "organizations_url": "https://api.github.com/users/adamlerer/orgs", "repos_url": "https://api.github.com/users/adamlerer/repos", "events_url": "https://api.github.com/users/adamlerer/events{/privacy}", "received_events_url": "https://api.github.com/users/adamlerer/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 8, "created_at": "2018-01-26T18:43:54Z", "updated_at": "2018-05-28T17:50:20Z", "closed_at": "2018-05-28T17:50:20Z", "author_association": "CONTRIBUTOR", "body_html": "<p>Looks like it's just incrementing mantissa and saturates at 2^24.</p>\n<pre><code>In [14]: torch.arange(1,50000000)[-5:]\nOut[14]:\n\n 1.6777e+07\n 1.6777e+07\n 1.6777e+07\n 1.6777e+07\n 1.6777e+07\n[torch.FloatTensor of size 5]\n</code></pre>\n<p>Shouldn't <code>arange</code> be returning <code>LongTensor</code> if the increment is an int? Numpy seems to get this right.</p>\n<pre><code>In [16]: np.arange(1,50000000).dtype\nOut[16]: dtype('int64')\n\nIn [17]: np.arange(1,50000000)[-5:]\nOut[17]: array([49999995, 49999996, 49999997, 49999998, 49999999])\n</code></pre>", "body_text": "Looks like it's just incrementing mantissa and saturates at 2^24.\nIn [14]: torch.arange(1,50000000)[-5:]\nOut[14]:\n\n 1.6777e+07\n 1.6777e+07\n 1.6777e+07\n 1.6777e+07\n 1.6777e+07\n[torch.FloatTensor of size 5]\n\nShouldn't arange be returning LongTensor if the increment is an int? Numpy seems to get this right.\nIn [16]: np.arange(1,50000000).dtype\nOut[16]: dtype('int64')\n\nIn [17]: np.arange(1,50000000)[-5:]\nOut[17]: array([49999995, 49999996, 49999997, 49999998, 49999999])", "body": "Looks like it's just incrementing mantissa and saturates at 2^24.\r\n\r\n```\r\nIn [14]: torch.arange(1,50000000)[-5:]\r\nOut[14]:\r\n\r\n 1.6777e+07\r\n 1.6777e+07\r\n 1.6777e+07\r\n 1.6777e+07\r\n 1.6777e+07\r\n[torch.FloatTensor of size 5]\r\n```\r\n\r\nShouldn't `arange` be returning `LongTensor` if the increment is an int? Numpy seems to get this right.\r\n\r\n```\r\nIn [16]: np.arange(1,50000000).dtype\r\nOut[16]: dtype('int64')\r\n\r\nIn [17]: np.arange(1,50000000)[-5:]\r\nOut[17]: array([49999995, 49999996, 49999997, 49999998, 49999999])\r\n```"}