{"url": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/187272187", "pull_request_review_id": 119012437, "id": 187272187, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4NzI3MjE4Nw==", "diff_hunk": "@@ -0,0 +1,38 @@\n+#pragma once\n+\n+#include <sys/types.h>\n+\n+#include <map>\n+\n+#include \"Store.hpp\"\n+\n+namespace c10d {\n+\n+class FileStore : public Store {\n+ public:\n+  explicit FileStore(const std::string& path);\n+\n+  virtual ~FileStore();\n+\n+  void set(\n+      const std::string& key,\n+      const std::vector<uint8_t>& value) override;\n+\n+  std::vector<uint8_t> get(const std::string& key) override;\n+\n+  int64_t add(const std::string& key, int64_t value) override;\n+\n+  bool check(const std::vector<std::string>& keys) override;\n+\n+  void wait(\n+      const std::vector<std::string>& keys,\n+      const std::chrono::milliseconds& timeout = kDefaultTimeout) override;\n+\n+ protected:\n+  std::string path_;\n+  off_t pos_;\n+\n+  std::map<std::string, std::vector<uint8_t>> cache_;", "path": "torch/lib/c10d/FileStore.hpp", "position": null, "original_position": 35, "commit_id": "111ef58035156203a38d4d0d60451a8cdc10dc59", "original_commit_id": "f9db6d9144d4e52a9033cc899617c693c82a9162", "user": {"login": "apaszke", "id": 4583066, "node_id": "MDQ6VXNlcjQ1ODMwNjY=", "avatar_url": "https://avatars3.githubusercontent.com/u/4583066?v=4", "gravatar_id": "", "url": "https://api.github.com/users/apaszke", "html_url": "https://github.com/apaszke", "followers_url": "https://api.github.com/users/apaszke/followers", "following_url": "https://api.github.com/users/apaszke/following{/other_user}", "gists_url": "https://api.github.com/users/apaszke/gists{/gist_id}", "starred_url": "https://api.github.com/users/apaszke/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/apaszke/subscriptions", "organizations_url": "https://api.github.com/users/apaszke/orgs", "repos_url": "https://api.github.com/users/apaszke/repos", "events_url": "https://api.github.com/users/apaszke/events{/privacy}", "received_events_url": "https://api.github.com/users/apaszke/received_events", "type": "User", "site_admin": false}, "body": "we might want to use `unordered_map` if we're not using the ordering of keys anywhere. It's generally faster.", "created_at": "2018-05-10T08:38:01Z", "updated_at": "2018-11-23T15:43:49Z", "html_url": "https://github.com/pytorch/pytorch/pull/7439#discussion_r187272187", "pull_request_url": "https://api.github.com/repos/pytorch/pytorch/pulls/7439", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/187272187"}, "html": {"href": "https://github.com/pytorch/pytorch/pull/7439#discussion_r187272187"}, "pull_request": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/7439"}}, "body_html": "<p>we might want to use <code>unordered_map</code> if we're not using the ordering of keys anywhere. It's generally faster.</p>", "body_text": "we might want to use unordered_map if we're not using the ordering of keys anywhere. It's generally faster."}