{"url": "https://api.github.com/repos/pytorch/pytorch/issues/5351", "repository_url": "https://api.github.com/repos/pytorch/pytorch", "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/5351/labels{/name}", "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/5351/comments", "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/5351/events", "html_url": "https://github.com/pytorch/pytorch/issues/5351", "id": 299377565, "node_id": "MDU6SXNzdWUyOTkzNzc1NjU=", "number": 5351, "title": "Wrong automatic gradient for Linear-Layer (Autograd/gradcheck)", "user": {"login": "Twittadrock", "id": 8371424, "node_id": "MDQ6VXNlcjgzNzE0MjQ=", "avatar_url": "https://avatars2.githubusercontent.com/u/8371424?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Twittadrock", "html_url": "https://github.com/Twittadrock", "followers_url": "https://api.github.com/users/Twittadrock/followers", "following_url": "https://api.github.com/users/Twittadrock/following{/other_user}", "gists_url": "https://api.github.com/users/Twittadrock/gists{/gist_id}", "starred_url": "https://api.github.com/users/Twittadrock/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Twittadrock/subscriptions", "organizations_url": "https://api.github.com/users/Twittadrock/orgs", "repos_url": "https://api.github.com/users/Twittadrock/repos", "events_url": "https://api.github.com/users/Twittadrock/events{/privacy}", "received_events_url": "https://api.github.com/users/Twittadrock/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2018-02-22T14:38:23Z", "updated_at": "2018-09-29T10:19:02Z", "closed_at": "2018-02-22T15:09:42Z", "author_association": "NONE", "body_html": "<p>Minimal Example:</p>\n<pre><code>import torch.utils.data\nimport torch.autograd\nimport torch.nn as nn\nimport torch.nn.functional as F\nimport torch.optim as optim\nfrom torch.autograd import Variable\nfrom torch.autograd import gradcheck\n\ntorch.manual_seed(123)\ninput = Variable(torch.rand(1,2), requires_grad = True)\ntest = gradcheck(nn.Linear(2,1), (input,), eps=1e-6, atol=1e-3)\nprint(test)\n</code></pre>\n<p>Output:</p>\n<pre><code> numerical:(\n-0.3576\n 0.2682\n[torch.FloatTensor of size 2x1]\n,)\nanalytical:(\n-0.3512\n 0.2667\n[torch.FloatTensor of size 2x1]\n,)\n\n</code></pre>\n<p>My Environment:</p>\n<pre><code>Python: (3, 5, 4)\nCuDNN: 7005\nCUDA: 8.0.61\nTorch: 0.3.1.post2\nNumpy: 1.13.3\n\n\n</code></pre>", "body_text": "Minimal Example:\nimport torch.utils.data\nimport torch.autograd\nimport torch.nn as nn\nimport torch.nn.functional as F\nimport torch.optim as optim\nfrom torch.autograd import Variable\nfrom torch.autograd import gradcheck\n\ntorch.manual_seed(123)\ninput = Variable(torch.rand(1,2), requires_grad = True)\ntest = gradcheck(nn.Linear(2,1), (input,), eps=1e-6, atol=1e-3)\nprint(test)\n\nOutput:\n numerical:(\n-0.3576\n 0.2682\n[torch.FloatTensor of size 2x1]\n,)\nanalytical:(\n-0.3512\n 0.2667\n[torch.FloatTensor of size 2x1]\n,)\n\n\nMy Environment:\nPython: (3, 5, 4)\nCuDNN: 7005\nCUDA: 8.0.61\nTorch: 0.3.1.post2\nNumpy: 1.13.3", "body": "Minimal Example:\r\n```\r\nimport torch.utils.data\r\nimport torch.autograd\r\nimport torch.nn as nn\r\nimport torch.nn.functional as F\r\nimport torch.optim as optim\r\nfrom torch.autograd import Variable\r\nfrom torch.autograd import gradcheck\r\n\r\ntorch.manual_seed(123)\r\ninput = Variable(torch.rand(1,2), requires_grad = True)\r\ntest = gradcheck(nn.Linear(2,1), (input,), eps=1e-6, atol=1e-3)\r\nprint(test)\r\n```\r\nOutput:\r\n```\r\n numerical:(\r\n-0.3576\r\n 0.2682\r\n[torch.FloatTensor of size 2x1]\r\n,)\r\nanalytical:(\r\n-0.3512\r\n 0.2667\r\n[torch.FloatTensor of size 2x1]\r\n,)\r\n\r\n```\r\nMy Environment:\r\n```\r\nPython: (3, 5, 4)\r\nCuDNN: 7005\r\nCUDA: 8.0.61\r\nTorch: 0.3.1.post2\r\nNumpy: 1.13.3\r\n\r\n\r\n```"}