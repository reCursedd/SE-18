{"url": "https://api.github.com/repos/pytorch/pytorch/issues/9678", "repository_url": "https://api.github.com/repos/pytorch/pytorch", "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/9678/labels{/name}", "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/9678/comments", "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/9678/events", "html_url": "https://github.com/pytorch/pytorch/issues/9678", "id": 343323343, "node_id": "MDU6SXNzdWUzNDMzMjMzNDM=", "number": 9678, "title": "Remove BatchNorm layers once the training is completed.", "user": {"login": "zwx8981", "id": 14050646, "node_id": "MDQ6VXNlcjE0MDUwNjQ2", "avatar_url": "https://avatars2.githubusercontent.com/u/14050646?v=4", "gravatar_id": "", "url": "https://api.github.com/users/zwx8981", "html_url": "https://github.com/zwx8981", "followers_url": "https://api.github.com/users/zwx8981/followers", "following_url": "https://api.github.com/users/zwx8981/following{/other_user}", "gists_url": "https://api.github.com/users/zwx8981/gists{/gist_id}", "starred_url": "https://api.github.com/users/zwx8981/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/zwx8981/subscriptions", "organizations_url": "https://api.github.com/users/zwx8981/orgs", "repos_url": "https://api.github.com/users/zwx8981/repos", "events_url": "https://api.github.com/users/zwx8981/events{/privacy}", "received_events_url": "https://api.github.com/users/zwx8981/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-07-21T12:29:41Z", "updated_at": "2018-07-23T17:54:21Z", "closed_at": null, "author_association": "NONE", "body_html": "<p>In PyTorch, is there any way to remove the batchnorm layers by merging their parameters into their preceding convolutional layers?</p>\n<p>ps: If you are familiar with the model deployment function in MatConvNet, you should know what I mean :)</p>", "body_text": "In PyTorch, is there any way to remove the batchnorm layers by merging their parameters into their preceding convolutional layers?\nps: If you are familiar with the model deployment function in MatConvNet, you should know what I mean :)", "body": "In PyTorch, is there any way to remove the batchnorm layers by merging their parameters into their preceding convolutional layers?\r\n\r\nps: If you are familiar with the model deployment function in MatConvNet, you should know what I mean :)"}