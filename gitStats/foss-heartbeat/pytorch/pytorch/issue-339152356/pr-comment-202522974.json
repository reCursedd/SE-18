{"url": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/202522974", "pull_request_review_id": 137246240, "id": 202522974, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwMjUyMjk3NA==", "diff_hunk": "@@ -575,6 +575,28 @@ Tensor var_backward(Tensor grad, const Tensor & self, int64_t dim, bool unbiased\n   return (2.0 / (self.size(dim) - unbiased)) * grad * (self - self.mean(dim, true));\n }\n \n+Tensor std_backward(const Tensor & grad, const Tensor & self, Tensor result, bool unbiased) {\n+  Tensor result_zero_mask = (result == 0.);\n+  if (result_zero_mask.any().toCByte()) {", "path": "tools/autograd/templates/Functions.cpp", "position": 6, "original_position": 6, "commit_id": "8a3736a5adc55359bfa49caa94bd423a471b6d26", "original_commit_id": "a2809e685bc8d77b428615b27ff3da96a29a5735", "user": {"login": "ezyang", "id": 13564, "node_id": "MDQ6VXNlcjEzNTY0", "avatar_url": "https://avatars0.githubusercontent.com/u/13564?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ezyang", "html_url": "https://github.com/ezyang", "followers_url": "https://api.github.com/users/ezyang/followers", "following_url": "https://api.github.com/users/ezyang/following{/other_user}", "gists_url": "https://api.github.com/users/ezyang/gists{/gist_id}", "starred_url": "https://api.github.com/users/ezyang/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ezyang/subscriptions", "organizations_url": "https://api.github.com/users/ezyang/orgs", "repos_url": "https://api.github.com/users/ezyang/repos", "events_url": "https://api.github.com/users/ezyang/events{/privacy}", "received_events_url": "https://api.github.com/users/ezyang/received_events", "type": "User", "site_admin": false}, "body": "Hmm... in the CUDA case, I wonder if it wouldn't be better to unconditionally apply the masked fill, because that lets you prevent a synchronization.", "created_at": "2018-07-14T19:08:35Z", "updated_at": "2018-11-23T15:47:26Z", "html_url": "https://github.com/pytorch/pytorch/pull/9238#discussion_r202522974", "pull_request_url": "https://api.github.com/repos/pytorch/pytorch/pulls/9238", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/202522974"}, "html": {"href": "https://github.com/pytorch/pytorch/pull/9238#discussion_r202522974"}, "pull_request": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/9238"}}, "body_html": "<p>Hmm... in the CUDA case, I wonder if it wouldn't be better to unconditionally apply the masked fill, because that lets you prevent a synchronization.</p>", "body_text": "Hmm... in the CUDA case, I wonder if it wouldn't be better to unconditionally apply the masked fill, because that lets you prevent a synchronization."}