{"url": "https://api.github.com/repos/pytorch/pytorch/issues/comments/405080736", "html_url": "https://github.com/pytorch/pytorch/pull/9238#issuecomment-405080736", "issue_url": "https://api.github.com/repos/pytorch/pytorch/issues/9238", "id": 405080736, "node_id": "MDEyOklzc3VlQ29tbWVudDQwNTA4MDczNg==", "user": {"login": "SsnL", "id": 5674597, "node_id": "MDQ6VXNlcjU2NzQ1OTc=", "avatar_url": "https://avatars2.githubusercontent.com/u/5674597?v=4", "gravatar_id": "", "url": "https://api.github.com/users/SsnL", "html_url": "https://github.com/SsnL", "followers_url": "https://api.github.com/users/SsnL/followers", "following_url": "https://api.github.com/users/SsnL/following{/other_user}", "gists_url": "https://api.github.com/users/SsnL/gists{/gist_id}", "starred_url": "https://api.github.com/users/SsnL/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/SsnL/subscriptions", "organizations_url": "https://api.github.com/users/SsnL/orgs", "repos_url": "https://api.github.com/users/SsnL/repos", "events_url": "https://api.github.com/users/SsnL/events{/privacy}", "received_events_url": "https://api.github.com/users/SsnL/received_events", "type": "User", "site_admin": false}, "created_at": "2018-07-15T10:10:29Z", "updated_at": "2018-07-15T10:10:29Z", "author_association": "CONTRIBUTOR", "body_html": "<p>Derivative is not the same if we take the limit from <code>x-&gt;0-</code> direction. The change in the output is the same, but the change in the input is negated. So the limit is negative of that taken from <code>x-&gt;0+</code> direction. You can verify this using <a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=655866\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/colesbury\">@colesbury</a> 's code above but with <code>eps=-1e-9</code>. So essentially anywhere in range <code>[-1/sqrt(N), 1/sqrt(N)]</code> is valid subgradient.</p>\n<p>Since the usage is mostly gradient-based optimization like gd, it makes sense to take one of these two extremes. But it's unclear to me that which we should choose. (<code>nan</code> really isn't a bad choice in this sense.) I think if we choose one, we should state the choice in the doc.</p>", "body_text": "Derivative is not the same if we take the limit from x->0- direction. The change in the output is the same, but the change in the input is negated. So the limit is negative of that taken from x->0+ direction. You can verify this using @colesbury 's code above but with eps=-1e-9. So essentially anywhere in range [-1/sqrt(N), 1/sqrt(N)] is valid subgradient.\nSince the usage is mostly gradient-based optimization like gd, it makes sense to take one of these two extremes. But it's unclear to me that which we should choose. (nan really isn't a bad choice in this sense.) I think if we choose one, we should state the choice in the doc.", "body": "Derivative is not the same if we take the limit from `x->0-` direction. The change in the output is the same, but the change in the input is negated. So the limit is negative of that taken from `x->0+` direction. You can verify this using @colesbury 's code above but with `eps=-1e-9`. So essentially anywhere in range `[-1/sqrt(N), 1/sqrt(N)]` is valid subgradient.\r\n\r\nSince the usage is mostly gradient-based optimization like gd, it makes sense to take one of these two extremes. But it's unclear to me that which we should choose. (`nan` really isn't a bad choice in this sense.) I think if we choose one, we should state the choice in the doc."}