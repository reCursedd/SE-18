{"url": "https://api.github.com/repos/pytorch/pytorch/issues/comments/397025337", "html_url": "https://github.com/pytorch/pytorch/issues/8365#issuecomment-397025337", "issue_url": "https://api.github.com/repos/pytorch/pytorch/issues/8365", "id": 397025337, "node_id": "MDEyOklzc3VlQ29tbWVudDM5NzAyNTMzNw==", "user": {"login": "fmassa", "id": 9110200, "node_id": "MDQ6VXNlcjkxMTAyMDA=", "avatar_url": "https://avatars2.githubusercontent.com/u/9110200?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fmassa", "html_url": "https://github.com/fmassa", "followers_url": "https://api.github.com/users/fmassa/followers", "following_url": "https://api.github.com/users/fmassa/following{/other_user}", "gists_url": "https://api.github.com/users/fmassa/gists{/gist_id}", "starred_url": "https://api.github.com/users/fmassa/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fmassa/subscriptions", "organizations_url": "https://api.github.com/users/fmassa/orgs", "repos_url": "https://api.github.com/users/fmassa/repos", "events_url": "https://api.github.com/users/fmassa/events{/privacy}", "received_events_url": "https://api.github.com/users/fmassa/received_events", "type": "User", "site_admin": false}, "created_at": "2018-06-13T17:45:03Z", "updated_at": "2018-06-13T17:45:03Z", "author_association": "MEMBER", "body_html": "<p>About your point that we need to specify the type of the tensor, we actually have type inference now, so that if you pass</p>\n<div class=\"highlight highlight-source-python\"><pre>a <span class=\"pl-k\">=</span> torch.tensor([<span class=\"pl-c1\">1</span>, <span class=\"pl-c1\">2</span>])  <span class=\"pl-c\"><span class=\"pl-c\">#</span> long tensor</span>\nb <span class=\"pl-k\">=</span> torch.tensor([<span class=\"pl-c1\">1</span>.])  <span class=\"pl-c\"><span class=\"pl-c\">#</span> float tensor</span>\nc <span class=\"pl-k\">=</span> torch.tensor([<span class=\"pl-c1\">True</span>])  <span class=\"pl-c\"><span class=\"pl-c\">#</span> byte tensor</span></pre></div>\n<p>which is very handy.</p>\n<p>But it seems that we are missing support for numpy integer types:</p>\n<div class=\"highlight highlight-source-python\"><pre>a <span class=\"pl-k\">=</span> torch.tensor(np.float64(<span class=\"pl-c1\">1</span>))  <span class=\"pl-c\"><span class=\"pl-c\">#</span> works</span>\nb <span class=\"pl-k\">=</span> torch.tensor(np.int64(<span class=\"pl-c1\">1</span>))  <span class=\"pl-c\"><span class=\"pl-c\">#</span> fails</span></pre></div>", "body_text": "About your point that we need to specify the type of the tensor, we actually have type inference now, so that if you pass\na = torch.tensor([1, 2])  # long tensor\nb = torch.tensor([1.])  # float tensor\nc = torch.tensor([True])  # byte tensor\nwhich is very handy.\nBut it seems that we are missing support for numpy integer types:\na = torch.tensor(np.float64(1))  # works\nb = torch.tensor(np.int64(1))  # fails", "body": "About your point that we need to specify the type of the tensor, we actually have type inference now, so that if you pass\r\n```python\r\na = torch.tensor([1, 2])  # long tensor\r\nb = torch.tensor([1.])  # float tensor\r\nc = torch.tensor([True])  # byte tensor\r\n```\r\nwhich is very handy.\r\n\r\nBut it seems that we are missing support for numpy integer types:\r\n```python\r\na = torch.tensor(np.float64(1))  # works\r\nb = torch.tensor(np.int64(1))  # fails\r\n```"}