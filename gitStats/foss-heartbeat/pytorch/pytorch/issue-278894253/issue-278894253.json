{"url": "https://api.github.com/repos/pytorch/pytorch/issues/3995", "repository_url": "https://api.github.com/repos/pytorch/pytorch", "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/3995/labels{/name}", "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/3995/comments", "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/3995/events", "html_url": "https://github.com/pytorch/pytorch/issues/3995", "id": 278894253, "node_id": "MDU6SXNzdWUyNzg4OTQyNTM=", "number": 3995, "title": "0.2_4 release notes inconsistent with documentation and actual behavior of reduce functions", "user": {"login": "narfanar", "id": 5769148, "node_id": "MDQ6VXNlcjU3NjkxNDg=", "avatar_url": "https://avatars2.githubusercontent.com/u/5769148?v=4", "gravatar_id": "", "url": "https://api.github.com/users/narfanar", "html_url": "https://github.com/narfanar", "followers_url": "https://api.github.com/users/narfanar/followers", "following_url": "https://api.github.com/users/narfanar/following{/other_user}", "gists_url": "https://api.github.com/users/narfanar/gists{/gist_id}", "starred_url": "https://api.github.com/users/narfanar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/narfanar/subscriptions", "organizations_url": "https://api.github.com/users/narfanar/orgs", "repos_url": "https://api.github.com/users/narfanar/repos", "events_url": "https://api.github.com/users/narfanar/events{/privacy}", "received_events_url": "https://api.github.com/users/narfanar/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-12-04T07:15:49Z", "updated_at": "2017-12-04T07:59:18Z", "closed_at": "2017-12-04T07:59:18Z", "author_association": "NONE", "body_html": "<p>The <a href=\"https://github.com/pytorch/pytorch/releases/tag/v0.2.0\">0.2</a> release notes say:</p>\n<blockquote>\n<p>All reduce functions such as <code>sum</code> and <code>mean</code> now default to squeezing the reduced dimension. For example <code>torch.sum(torch.randn(10, 20))</code> returns a 1D Tensor.</p>\n</blockquote>\n<p>This doesn't happen in a Python terminal with the latest pull from soumith's channel through <code>conda</code>.</p>\n<p>The <a href=\"http://pytorch.org/docs/master/torch.html?highlight=sum#torch.sum\" rel=\"nofollow\">documentation</a> doesn't illustrate this point either way:</p>\n<div class=\"highlight highlight-source-python\"><pre><span class=\"pl-k\">&gt;&gt;</span><span class=\"pl-k\">&gt;</span> a <span class=\"pl-k\">=</span> torch.randn(<span class=\"pl-c1\">1</span>, <span class=\"pl-c1\">3</span>)\n<span class=\"pl-k\">&gt;&gt;</span><span class=\"pl-k\">&gt;</span> a\n\n <span class=\"pl-c1\">0.6170</span>  <span class=\"pl-c1\">0.3546</span>  <span class=\"pl-c1\">0.0253</span>\n[torch.FloatTensor of size <span class=\"pl-ii\">1x3</span>]\n\n<span class=\"pl-k\">&gt;&gt;</span><span class=\"pl-k\">&gt;</span> torch.sum(a)\n<span class=\"pl-c1\">0.9969287421554327</span></pre></div>\n<p>What was the rationale behind the intended change in behavior, anyway? (It would be different from what NumPy does.) Or is this just an error in the release notes?</p>", "body_text": "The 0.2 release notes say:\n\nAll reduce functions such as sum and mean now default to squeezing the reduced dimension. For example torch.sum(torch.randn(10, 20)) returns a 1D Tensor.\n\nThis doesn't happen in a Python terminal with the latest pull from soumith's channel through conda.\nThe documentation doesn't illustrate this point either way:\n>>> a = torch.randn(1, 3)\n>>> a\n\n 0.6170  0.3546  0.0253\n[torch.FloatTensor of size 1x3]\n\n>>> torch.sum(a)\n0.9969287421554327\nWhat was the rationale behind the intended change in behavior, anyway? (It would be different from what NumPy does.) Or is this just an error in the release notes?", "body": "The [0.2](https://github.com/pytorch/pytorch/releases/tag/v0.2.0) release notes say:\r\n> All reduce functions such as `sum` and `mean` now default to squeezing the reduced dimension. For example `torch.sum(torch.randn(10, 20))` returns a 1D Tensor.\r\n\r\nThis doesn't happen in a Python terminal with the latest pull from soumith's channel through `conda`.\r\n\r\nThe [documentation](http://pytorch.org/docs/master/torch.html?highlight=sum#torch.sum) doesn't illustrate this point either way:\r\n```py\r\n>>> a = torch.randn(1, 3)\r\n>>> a\r\n\r\n 0.6170  0.3546  0.0253\r\n[torch.FloatTensor of size 1x3]\r\n\r\n>>> torch.sum(a)\r\n0.9969287421554327\r\n```\r\n\r\nWhat was the rationale behind the intended change in behavior, anyway? (It would be different from what NumPy does.) Or is this just an error in the release notes?"}