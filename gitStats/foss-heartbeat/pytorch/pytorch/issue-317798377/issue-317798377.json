{"url": "https://api.github.com/repos/pytorch/pytorch/issues/6968", "repository_url": "https://api.github.com/repos/pytorch/pytorch", "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/6968/labels{/name}", "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/6968/comments", "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/6968/events", "html_url": "https://github.com/pytorch/pytorch/issues/6968", "id": 317798377, "node_id": "MDU6SXNzdWUzMTc3OTgzNzc=", "number": 6968, "title": "[feature request] Implement torch.stack() / _cat() for also for torch.HalfTensor", "user": {"login": "timothygebhard", "id": 10123688, "node_id": "MDQ6VXNlcjEwMTIzNjg4", "avatar_url": "https://avatars2.githubusercontent.com/u/10123688?v=4", "gravatar_id": "", "url": "https://api.github.com/users/timothygebhard", "html_url": "https://github.com/timothygebhard", "followers_url": "https://api.github.com/users/timothygebhard/followers", "following_url": "https://api.github.com/users/timothygebhard/following{/other_user}", "gists_url": "https://api.github.com/users/timothygebhard/gists{/gist_id}", "starred_url": "https://api.github.com/users/timothygebhard/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/timothygebhard/subscriptions", "organizations_url": "https://api.github.com/users/timothygebhard/orgs", "repos_url": "https://api.github.com/users/timothygebhard/repos", "events_url": "https://api.github.com/users/timothygebhard/events{/privacy}", "received_events_url": "https://api.github.com/users/timothygebhard/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 443483881, "node_id": "MDU6TGFiZWw0NDM0ODM4ODE=", "url": "https://api.github.com/repos/pytorch/pytorch/labels/todo", "name": "todo", "color": "c2e0c6", "default": false}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2018-04-25T21:21:01Z", "updated_at": "2018-10-14T01:26:02Z", "closed_at": null, "author_association": "NONE", "body_html": "<h2>Issue Description</h2>\n<p>It seems that stacking is currently (PyTorch 0.4) is not supported for tensors of type <code>HalfTensor</code>; see code example.</p>\n<p>I don't know if this is intentional for some reason (hence I didn't label this issue as a bug), but I couldn't find any issue or documentation pointing to that. Since some methods, like <code>torch.utils.data.DataLoader</code>, depend on <code>torch.stack()</code> (in this case implicitly through the <code>default_collate()</code> method), it would be great if either stacking for HalfTensors could get implemented, or the documentation could be updated to contain some kind of hint.</p>\n<h2>Code Example</h2>\n<pre><code>Python 3.6.5 (default, Mar 30 2018, 06:41:49)\nType 'copyright', 'credits' or 'license' for more information\nIPython 6.3.1 -- An enhanced Interactive Python. Type '?' for help.\n\nIn [1]: import torch\n\nIn [2]: torch.__version__\nOut[2]: '0.4.0'\n\nIn [3]: tensor_1_float = torch.tensor([1, 2, 3], dtype=torch.float)\n\nIn [4]: tensor_2_float = torch.tensor([4, 5, 6], dtype=torch.float)\n\nIn [5]: torch.stack([tensor_1_float, tensor_2_float])\nOut[5]:\ntensor([[ 1.,  2.,  3.],\n        [ 4.,  5.,  6.]])\n\nIn [6]: tensor_1_half = torch.tensor([1, 2, 3], dtype=torch.half)\n\nIn [7]: tensor_2_half = torch.tensor([4, 5, 6], dtype=torch.half)\n\nIn [8]: torch.stack([tensor_1_half, tensor_2_half])\n---------------------------------------------------------------------------\nRuntimeError                              Traceback (most recent call last)\n&lt;ipython-input-8-10f49aa85ea5&gt; in &lt;module&gt;()\n----&gt; 1 torch.stack([tensor_1_half, tensor_2_half])\n\nRuntimeError: _cat is not implemented for type torch.HalfTensor\n</code></pre>\n<p>On PyTorch 0.3.1, one gets basically the same error when one tries to do the same thing:</p>\n<pre><code>TypeError: Type torch.HalfTensor doesn't implement stateless method cat\n</code></pre>", "body_text": "Issue Description\nIt seems that stacking is currently (PyTorch 0.4) is not supported for tensors of type HalfTensor; see code example.\nI don't know if this is intentional for some reason (hence I didn't label this issue as a bug), but I couldn't find any issue or documentation pointing to that. Since some methods, like torch.utils.data.DataLoader, depend on torch.stack() (in this case implicitly through the default_collate() method), it would be great if either stacking for HalfTensors could get implemented, or the documentation could be updated to contain some kind of hint.\nCode Example\nPython 3.6.5 (default, Mar 30 2018, 06:41:49)\nType 'copyright', 'credits' or 'license' for more information\nIPython 6.3.1 -- An enhanced Interactive Python. Type '?' for help.\n\nIn [1]: import torch\n\nIn [2]: torch.__version__\nOut[2]: '0.4.0'\n\nIn [3]: tensor_1_float = torch.tensor([1, 2, 3], dtype=torch.float)\n\nIn [4]: tensor_2_float = torch.tensor([4, 5, 6], dtype=torch.float)\n\nIn [5]: torch.stack([tensor_1_float, tensor_2_float])\nOut[5]:\ntensor([[ 1.,  2.,  3.],\n        [ 4.,  5.,  6.]])\n\nIn [6]: tensor_1_half = torch.tensor([1, 2, 3], dtype=torch.half)\n\nIn [7]: tensor_2_half = torch.tensor([4, 5, 6], dtype=torch.half)\n\nIn [8]: torch.stack([tensor_1_half, tensor_2_half])\n---------------------------------------------------------------------------\nRuntimeError                              Traceback (most recent call last)\n<ipython-input-8-10f49aa85ea5> in <module>()\n----> 1 torch.stack([tensor_1_half, tensor_2_half])\n\nRuntimeError: _cat is not implemented for type torch.HalfTensor\n\nOn PyTorch 0.3.1, one gets basically the same error when one tries to do the same thing:\nTypeError: Type torch.HalfTensor doesn't implement stateless method cat", "body": "## Issue Description\r\nIt seems that stacking is currently (PyTorch 0.4) is not supported for tensors of type `HalfTensor`; see code example. \r\n\r\nI don't know if this is intentional for some reason (hence I didn't label this issue as a bug), but I couldn't find any issue or documentation pointing to that. Since some methods, like `torch.utils.data.DataLoader`, depend on `torch.stack()` (in this case implicitly through the `default_collate()` method), it would be great if either stacking for HalfTensors could get implemented, or the documentation could be updated to contain some kind of hint.\r\n\r\n## Code Example\r\n```\r\nPython 3.6.5 (default, Mar 30 2018, 06:41:49)\r\nType 'copyright', 'credits' or 'license' for more information\r\nIPython 6.3.1 -- An enhanced Interactive Python. Type '?' for help.\r\n\r\nIn [1]: import torch\r\n\r\nIn [2]: torch.__version__\r\nOut[2]: '0.4.0'\r\n\r\nIn [3]: tensor_1_float = torch.tensor([1, 2, 3], dtype=torch.float)\r\n\r\nIn [4]: tensor_2_float = torch.tensor([4, 5, 6], dtype=torch.float)\r\n\r\nIn [5]: torch.stack([tensor_1_float, tensor_2_float])\r\nOut[5]:\r\ntensor([[ 1.,  2.,  3.],\r\n        [ 4.,  5.,  6.]])\r\n\r\nIn [6]: tensor_1_half = torch.tensor([1, 2, 3], dtype=torch.half)\r\n\r\nIn [7]: tensor_2_half = torch.tensor([4, 5, 6], dtype=torch.half)\r\n\r\nIn [8]: torch.stack([tensor_1_half, tensor_2_half])\r\n---------------------------------------------------------------------------\r\nRuntimeError                              Traceback (most recent call last)\r\n<ipython-input-8-10f49aa85ea5> in <module>()\r\n----> 1 torch.stack([tensor_1_half, tensor_2_half])\r\n\r\nRuntimeError: _cat is not implemented for type torch.HalfTensor\r\n```\r\n\r\nOn PyTorch 0.3.1, one gets basically the same error when one tries to do the same thing:\r\n```\r\nTypeError: Type torch.HalfTensor doesn't implement stateless method cat\r\n```"}