{"url": "https://api.github.com/repos/pytorch/pytorch/issues/comments/374438963", "html_url": "https://github.com/pytorch/pytorch/issues/5877#issuecomment-374438963", "issue_url": "https://api.github.com/repos/pytorch/pytorch/issues/5877", "id": 374438963, "node_id": "MDEyOklzc3VlQ29tbWVudDM3NDQzODk2Mw==", "user": {"login": "ngimel", "id": 15841449, "node_id": "MDQ6VXNlcjE1ODQxNDQ5", "avatar_url": "https://avatars3.githubusercontent.com/u/15841449?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ngimel", "html_url": "https://github.com/ngimel", "followers_url": "https://api.github.com/users/ngimel/followers", "following_url": "https://api.github.com/users/ngimel/following{/other_user}", "gists_url": "https://api.github.com/users/ngimel/gists{/gist_id}", "starred_url": "https://api.github.com/users/ngimel/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ngimel/subscriptions", "organizations_url": "https://api.github.com/users/ngimel/orgs", "repos_url": "https://api.github.com/users/ngimel/repos", "events_url": "https://api.github.com/users/ngimel/events{/privacy}", "received_events_url": "https://api.github.com/users/ngimel/received_events", "type": "User", "site_admin": false}, "created_at": "2018-03-20T01:15:22Z", "updated_at": "2018-03-20T01:15:22Z", "author_association": "CONTRIBUTOR", "body_html": "<p>The failing tests on Maxwells are test_broadcast_cuda, test_reduce_sum_cuda, test_all_reduce_sum_cuda, test_all_gather_cuda, all where the tensors are actually on the same GPU. Maxwell does not support pre-emption, so that's expected.</p>", "body_text": "The failing tests on Maxwells are test_broadcast_cuda, test_reduce_sum_cuda, test_all_reduce_sum_cuda, test_all_gather_cuda, all where the tensors are actually on the same GPU. Maxwell does not support pre-emption, so that's expected.", "body": "The failing tests on Maxwells are test_broadcast_cuda, test_reduce_sum_cuda, test_all_reduce_sum_cuda, test_all_gather_cuda, all where the tensors are actually on the same GPU. Maxwell does not support pre-emption, so that's expected. "}