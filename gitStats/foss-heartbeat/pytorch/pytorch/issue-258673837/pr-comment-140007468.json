{"url": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/140007468", "pull_request_review_id": 64019379, "id": 140007468, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE0MDAwNzQ2OA==", "diff_hunk": "@@ -26,6 +26,12 @@ bool hasUsedHandle(Node *node) {\n \n // Transform PythonOps and Cpp Ops into Node's that match ONNX semantics.\n void ToONNX(std::shared_ptr<tracer::TracingState>& state) {\n+  // Check that the tracing state is live (it should be, because\n+  // you were supposed to request zero derivatives.)\n+  if (state->is_expired()) {\n+    throw std::runtime_error(\"Tracing state is expired!  You should run the tracer with num_derivatives=0\");", "path": "torch/csrc/jit/passes/onnx.cpp", "position": null, "original_position": 7, "commit_id": "32ae63e6e787ed3eb88e36cb78da3a16c27d725f", "original_commit_id": "9e20d5b58b1d876f66effba438b096345bb0e687", "user": {"login": "ezyang", "id": 13564, "node_id": "MDQ6VXNlcjEzNTY0", "avatar_url": "https://avatars0.githubusercontent.com/u/13564?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ezyang", "html_url": "https://github.com/ezyang", "followers_url": "https://api.github.com/users/ezyang/followers", "following_url": "https://api.github.com/users/ezyang/following{/other_user}", "gists_url": "https://api.github.com/users/ezyang/gists{/gist_id}", "starred_url": "https://api.github.com/users/ezyang/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ezyang/subscriptions", "organizations_url": "https://api.github.com/users/ezyang/orgs", "repos_url": "https://api.github.com/users/ezyang/repos", "events_url": "https://api.github.com/users/ezyang/events{/privacy}", "received_events_url": "https://api.github.com/users/ezyang/received_events", "type": "User", "site_admin": false}, "body": "OK, I'm going to do something like:\r\n\r\n```\r\ndiff --git a/torch/csrc/jit/passes/onnx.cpp b/torch/csrc/jit/passes/onnx.cpp\r\nindex 842d79f..0596d05 100644\r\n--- a/torch/csrc/jit/passes/onnx.cpp\r\n+++ b/torch/csrc/jit/passes/onnx.cpp\r\n@@ -29,7 +29,7 @@ void ToONNX(std::shared_ptr<tracer::TracingState>& state) {\r\n   // Check that the tracing state is live (it should be, because\r\n   // you were supposed to request zero derivatives.)\r\n   if (state->is_expired()) {\r\n-    throw std::runtime_error(\"Tracing state is expired!  You should run the tracer with num_derivatives=0\");\r\n+    throw std::logic_error(\"ToONNX: tracing state is expired\");\r\n   }\r\n \r\n   auto new_graph = std::make_shared<Graph>();\r\n```", "created_at": "2017-09-20T15:36:07Z", "updated_at": "2018-11-23T15:34:41Z", "html_url": "https://github.com/pytorch/pytorch/pull/2781#discussion_r140007468", "pull_request_url": "https://api.github.com/repos/pytorch/pytorch/pulls/2781", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/140007468"}, "html": {"href": "https://github.com/pytorch/pytorch/pull/2781#discussion_r140007468"}, "pull_request": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/2781"}}, "body_html": "<p>OK, I'm going to do something like:</p>\n<pre><code>diff --git a/torch/csrc/jit/passes/onnx.cpp b/torch/csrc/jit/passes/onnx.cpp\nindex 842d79f..0596d05 100644\n--- a/torch/csrc/jit/passes/onnx.cpp\n+++ b/torch/csrc/jit/passes/onnx.cpp\n@@ -29,7 +29,7 @@ void ToONNX(std::shared_ptr&lt;tracer::TracingState&gt;&amp; state) {\n   // Check that the tracing state is live (it should be, because\n   // you were supposed to request zero derivatives.)\n   if (state-&gt;is_expired()) {\n-    throw std::runtime_error(\"Tracing state is expired!  You should run the tracer with num_derivatives=0\");\n+    throw std::logic_error(\"ToONNX: tracing state is expired\");\n   }\n \n   auto new_graph = std::make_shared&lt;Graph&gt;();\n</code></pre>", "body_text": "OK, I'm going to do something like:\ndiff --git a/torch/csrc/jit/passes/onnx.cpp b/torch/csrc/jit/passes/onnx.cpp\nindex 842d79f..0596d05 100644\n--- a/torch/csrc/jit/passes/onnx.cpp\n+++ b/torch/csrc/jit/passes/onnx.cpp\n@@ -29,7 +29,7 @@ void ToONNX(std::shared_ptr<tracer::TracingState>& state) {\n   // Check that the tracing state is live (it should be, because\n   // you were supposed to request zero derivatives.)\n   if (state->is_expired()) {\n-    throw std::runtime_error(\"Tracing state is expired!  You should run the tracer with num_derivatives=0\");\n+    throw std::logic_error(\"ToONNX: tracing state is expired\");\n   }\n \n   auto new_graph = std::make_shared<Graph>();", "in_reply_to_id": 139985567}