{"url": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/139989844", "pull_request_review_id": 63999161, "id": 139989844, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEzOTk4OTg0NA==", "diff_hunk": "@@ -129,9 +141,10 @@ void ToONNX(std::shared_ptr<tracer::TracingState>& state) {\n       py_symbolic_args[input_nr++] = obj;\n     }\n     // Call the symbolic function\n-    py::object raw_output = py::reinterpret_steal<py::object>(\n-        PyObject_CallObject(pyobj.attr(\"symbolic\").ptr(), py_symbolic_args.ptr()));\n-    if (!raw_output) throw py::error_already_set();\n+    py::object onnx = py::module::import(\"torch.onnx\");\n+    // Use a little trampoline function so we can give good error messages\n+    // upon argument mismatch\n+    py::object raw_output = onnx.attr(\"run_symbolic\")(op->name(), pyobj.attr(\"symbolic\"), py_symbolic_args);", "path": "torch/csrc/jit/passes/onnx.cpp", "position": 66, "original_position": 66, "commit_id": "32ae63e6e787ed3eb88e36cb78da3a16c27d725f", "original_commit_id": "9e20d5b58b1d876f66effba438b096345bb0e687", "user": {"login": "ezyang", "id": 13564, "node_id": "MDQ6VXNlcjEzNTY0", "avatar_url": "https://avatars0.githubusercontent.com/u/13564?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ezyang", "html_url": "https://github.com/ezyang", "followers_url": "https://api.github.com/users/ezyang/followers", "following_url": "https://api.github.com/users/ezyang/following{/other_user}", "gists_url": "https://api.github.com/users/ezyang/gists{/gist_id}", "starred_url": "https://api.github.com/users/ezyang/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ezyang/subscriptions", "organizations_url": "https://api.github.com/users/ezyang/orgs", "repos_url": "https://api.github.com/users/ezyang/repos", "events_url": "https://api.github.com/users/ezyang/events{/privacy}", "received_events_url": "https://api.github.com/users/ezyang/received_events", "type": "User", "site_admin": false}, "body": "Invoking symbolic functions shouldn't ever be the bottleneck for export. But fine, I'll do it in C. (One other motivation for having a Python trampoline is to ease up debugging: if you want to see what symbolic functions are being called, there's now one place you can edit without having to recompile the C++)", "created_at": "2017-09-20T14:41:23Z", "updated_at": "2018-11-23T15:34:40Z", "html_url": "https://github.com/pytorch/pytorch/pull/2781#discussion_r139989844", "pull_request_url": "https://api.github.com/repos/pytorch/pytorch/pulls/2781", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/139989844"}, "html": {"href": "https://github.com/pytorch/pytorch/pull/2781#discussion_r139989844"}, "pull_request": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/2781"}}, "body_html": "<p>Invoking symbolic functions shouldn't ever be the bottleneck for export. But fine, I'll do it in C. (One other motivation for having a Python trampoline is to ease up debugging: if you want to see what symbolic functions are being called, there's now one place you can edit without having to recompile the C++)</p>", "body_text": "Invoking symbolic functions shouldn't ever be the bottleneck for export. But fine, I'll do it in C. (One other motivation for having a Python trampoline is to ease up debugging: if you want to see what symbolic functions are being called, there's now one place you can edit without having to recompile the C++)", "in_reply_to_id": 139985785}