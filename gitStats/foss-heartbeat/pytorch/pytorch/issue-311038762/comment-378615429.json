{"url": "https://api.github.com/repos/pytorch/pytorch/issues/comments/378615429", "html_url": "https://github.com/pytorch/pytorch/pull/6254#issuecomment-378615429", "issue_url": "https://api.github.com/repos/pytorch/pytorch/issues/6254", "id": 378615429, "node_id": "MDEyOklzc3VlQ29tbWVudDM3ODYxNTQyOQ==", "user": {"login": "colesbury", "id": 655866, "node_id": "MDQ6VXNlcjY1NTg2Ng==", "avatar_url": "https://avatars1.githubusercontent.com/u/655866?v=4", "gravatar_id": "", "url": "https://api.github.com/users/colesbury", "html_url": "https://github.com/colesbury", "followers_url": "https://api.github.com/users/colesbury/followers", "following_url": "https://api.github.com/users/colesbury/following{/other_user}", "gists_url": "https://api.github.com/users/colesbury/gists{/gist_id}", "starred_url": "https://api.github.com/users/colesbury/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/colesbury/subscriptions", "organizations_url": "https://api.github.com/users/colesbury/orgs", "repos_url": "https://api.github.com/users/colesbury/repos", "events_url": "https://api.github.com/users/colesbury/events{/privacy}", "received_events_url": "https://api.github.com/users/colesbury/received_events", "type": "User", "site_admin": false}, "created_at": "2018-04-04T14:16:35Z", "updated_at": "2018-04-04T14:16:35Z", "author_association": "MEMBER", "body_html": "<p>I will restate the issue in an attempt to make it more clear: Currently, the PythonArgParser reads and then discards uninitialized data in some cases. This is technically undefined behavior even though the value isn't used, and it triggers ubsan errors.</p>\n<p>Here is the relevant code:</p>\n<pre><code>inline double PythonArgs::toDouble(int i) {\n  return toDoubleWithDefault(i, signature.params[i].default_double);\n}\n</code></pre>\n<p>When argument <code>i</code> is required, <code>signature.params[i].default_double</code> is uninitialized. The value will never be returned to the caller, but just the access triggers the ubsan errors.</p>\n<p>There is not a good way to test for this (except running with ubsan) because the current code produces the correct behavior in practice.</p>", "body_text": "I will restate the issue in an attempt to make it more clear: Currently, the PythonArgParser reads and then discards uninitialized data in some cases. This is technically undefined behavior even though the value isn't used, and it triggers ubsan errors.\nHere is the relevant code:\ninline double PythonArgs::toDouble(int i) {\n  return toDoubleWithDefault(i, signature.params[i].default_double);\n}\n\nWhen argument i is required, signature.params[i].default_double is uninitialized. The value will never be returned to the caller, but just the access triggers the ubsan errors.\nThere is not a good way to test for this (except running with ubsan) because the current code produces the correct behavior in practice.", "body": "I will restate the issue in an attempt to make it more clear: Currently, the PythonArgParser reads and then discards uninitialized data in some cases. This is technically undefined behavior even though the value isn't used, and it triggers ubsan errors.\r\n\r\nHere is the relevant code:\r\n\r\n```\r\ninline double PythonArgs::toDouble(int i) {\r\n  return toDoubleWithDefault(i, signature.params[i].default_double);\r\n}\r\n```\r\n\r\nWhen argument `i` is required, `signature.params[i].default_double` is uninitialized. The value will never be returned to the caller, but just the access triggers the ubsan errors.\r\n\r\nThere is not a good way to test for this (except running with ubsan) because the current code produces the correct behavior in practice."}