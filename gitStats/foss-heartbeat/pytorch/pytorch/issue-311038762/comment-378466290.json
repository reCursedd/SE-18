{"url": "https://api.github.com/repos/pytorch/pytorch/issues/comments/378466290", "html_url": "https://github.com/pytorch/pytorch/pull/6254#issuecomment-378466290", "issue_url": "https://api.github.com/repos/pytorch/pytorch/issues/6254", "id": 378466290, "node_id": "MDEyOklzc3VlQ29tbWVudDM3ODQ2NjI5MA==", "user": {"login": "li-roy", "id": 8813817, "node_id": "MDQ6VXNlcjg4MTM4MTc=", "avatar_url": "https://avatars0.githubusercontent.com/u/8813817?v=4", "gravatar_id": "", "url": "https://api.github.com/users/li-roy", "html_url": "https://github.com/li-roy", "followers_url": "https://api.github.com/users/li-roy/followers", "following_url": "https://api.github.com/users/li-roy/following{/other_user}", "gists_url": "https://api.github.com/users/li-roy/gists{/gist_id}", "starred_url": "https://api.github.com/users/li-roy/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/li-roy/subscriptions", "organizations_url": "https://api.github.com/users/li-roy/orgs", "repos_url": "https://api.github.com/users/li-roy/repos", "events_url": "https://api.github.com/users/li-roy/events{/privacy}", "received_events_url": "https://api.github.com/users/li-roy/received_events", "type": "User", "site_admin": false}, "created_at": "2018-04-04T03:08:54Z", "updated_at": "2018-04-04T03:10:07Z", "author_association": "CONTRIBUTOR", "body_html": "<p>This only happens with non optional arguments, so adding default arguments to native_functions.yaml will solve this issue in a different way. But basically the issue is:</p>\n<p>Take a generated function in <code>python_torch_functions.cpp</code></p>\n<pre><code>  static PythonArgParser parser({\n    \"hinge_embedding_loss(Tensor input, Tensor target, double margin, bool size_average, bool reduce)\",\n  });\n\n  ParsedArgs&lt;5&gt; parsed_args;\n  auto r = parser.parse(args, kwargs, parsed_args);\n  if (r.idx == 0) {\n    return wrap(dispatch_hinge_embedding_loss(r.tensor(0), r.tensor(1), r.toDouble(2), r.toBool(3), r.toBool(4)));\n  }\n</code></pre>\n<p><code>r.toBool(3)</code> will attempt to do <code>return toBoolWithDefault(i, signature.params[i].default_bool);</code>. Because reduce isn't optional, the union here (<a href=\"https://github.com/li-roy/pytorch/blob/501d0d21ee30dfaf07260c4ab2767dc60e089324/torch/csrc/utils/python_arg_parser.h#L139\">https://github.com/li-roy/pytorch/blob/501d0d21ee30dfaf07260c4ab2767dc60e089324/torch/csrc/utils/python_arg_parser.h#L139</a>) was never initialized. So doing attempting to read <code>default_bool</code> is undefined behavior and is causing the error.</p>\n<p>Setting the union happens here: <a href=\"https://github.com/li-roy/pytorch/blob/501d0d21ee30dfaf07260c4ab2767dc60e089324/torch/csrc/utils/python_arg_parser.cpp#L69\">https://github.com/li-roy/pytorch/blob/501d0d21ee30dfaf07260c4ab2767dc60e089324/torch/csrc/utils/python_arg_parser.cpp#L69</a></p>", "body_text": "This only happens with non optional arguments, so adding default arguments to native_functions.yaml will solve this issue in a different way. But basically the issue is:\nTake a generated function in python_torch_functions.cpp\n  static PythonArgParser parser({\n    \"hinge_embedding_loss(Tensor input, Tensor target, double margin, bool size_average, bool reduce)\",\n  });\n\n  ParsedArgs<5> parsed_args;\n  auto r = parser.parse(args, kwargs, parsed_args);\n  if (r.idx == 0) {\n    return wrap(dispatch_hinge_embedding_loss(r.tensor(0), r.tensor(1), r.toDouble(2), r.toBool(3), r.toBool(4)));\n  }\n\nr.toBool(3) will attempt to do return toBoolWithDefault(i, signature.params[i].default_bool);. Because reduce isn't optional, the union here (https://github.com/li-roy/pytorch/blob/501d0d21ee30dfaf07260c4ab2767dc60e089324/torch/csrc/utils/python_arg_parser.h#L139) was never initialized. So doing attempting to read default_bool is undefined behavior and is causing the error.\nSetting the union happens here: https://github.com/li-roy/pytorch/blob/501d0d21ee30dfaf07260c4ab2767dc60e089324/torch/csrc/utils/python_arg_parser.cpp#L69", "body": "This only happens with non optional arguments, so adding default arguments to native_functions.yaml will solve this issue in a different way. But basically the issue is:\r\n\r\nTake a generated function in `python_torch_functions.cpp`\r\n```\r\n  static PythonArgParser parser({\r\n    \"hinge_embedding_loss(Tensor input, Tensor target, double margin, bool size_average, bool reduce)\",\r\n  });\r\n\r\n  ParsedArgs<5> parsed_args;\r\n  auto r = parser.parse(args, kwargs, parsed_args);\r\n  if (r.idx == 0) {\r\n    return wrap(dispatch_hinge_embedding_loss(r.tensor(0), r.tensor(1), r.toDouble(2), r.toBool(3), r.toBool(4)));\r\n  }\r\n```\r\n\r\n`r.toBool(3)` will attempt to do `return toBoolWithDefault(i, signature.params[i].default_bool);`. Because reduce isn't optional, the union here (https://github.com/li-roy/pytorch/blob/501d0d21ee30dfaf07260c4ab2767dc60e089324/torch/csrc/utils/python_arg_parser.h#L139) was never initialized. So doing attempting to read `default_bool` is undefined behavior and is causing the error.\r\n\r\nSetting the union happens here: https://github.com/li-roy/pytorch/blob/501d0d21ee30dfaf07260c4ab2767dc60e089324/torch/csrc/utils/python_arg_parser.cpp#L69"}