{"url": "https://api.github.com/repos/pytorch/pytorch/issues/3376", "repository_url": "https://api.github.com/repos/pytorch/pytorch", "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/3376/labels{/name}", "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/3376/comments", "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/3376/events", "html_url": "https://github.com/pytorch/pytorch/issues/3376", "id": 269734349, "node_id": "MDU6SXNzdWUyNjk3MzQzNDk=", "number": 3376, "title": "[minor] support reversed(torch.Tensor)", "user": {"login": "vadimkantorov", "id": 1041752, "node_id": "MDQ6VXNlcjEwNDE3NTI=", "avatar_url": "https://avatars0.githubusercontent.com/u/1041752?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vadimkantorov", "html_url": "https://github.com/vadimkantorov", "followers_url": "https://api.github.com/users/vadimkantorov/followers", "following_url": "https://api.github.com/users/vadimkantorov/following{/other_user}", "gists_url": "https://api.github.com/users/vadimkantorov/gists{/gist_id}", "starred_url": "https://api.github.com/users/vadimkantorov/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vadimkantorov/subscriptions", "organizations_url": "https://api.github.com/users/vadimkantorov/orgs", "repos_url": "https://api.github.com/users/vadimkantorov/repos", "events_url": "https://api.github.com/users/vadimkantorov/events{/privacy}", "received_events_url": "https://api.github.com/users/vadimkantorov/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2017-10-30T20:00:02Z", "updated_at": "2018-07-13T02:42:56Z", "closed_at": "2018-07-13T02:42:56Z", "author_association": "NONE", "body_html": "<div class=\"highlight highlight-source-python\"><pre><span class=\"pl-c1\">sorted</span>(torch.Tensor([<span class=\"pl-c1\">3</span>, <span class=\"pl-c1\">2</span>, <span class=\"pl-c1\">1</span>])) <span class=\"pl-c\"><span class=\"pl-c\">#</span> works</span>\n\n<span class=\"pl-c1\">reversed</span>(torch.Tensor([<span class=\"pl-c1\">3</span>, <span class=\"pl-c1\">2</span>, <span class=\"pl-c1\">1</span>])) <span class=\"pl-c\"><span class=\"pl-c\">#</span> doesn't </span>\n<span class=\"pl-c\"><span class=\"pl-c\">#</span>Traceback (most recent call last):</span>\n<span class=\"pl-c\"><span class=\"pl-c\">#</span>  File \"&lt;stdin&gt;\", line 1, in &lt;module&gt;</span>\n<span class=\"pl-c\"><span class=\"pl-c\">#</span>TypeError: argument to reversed() must be a sequence</span>\n\n<span class=\"pl-c1\">reversed</span>(np.array([<span class=\"pl-c1\">3</span>, <span class=\"pl-c1\">2</span>, <span class=\"pl-c1\">1</span>])) <span class=\"pl-c\"><span class=\"pl-c\">#</span> works</span>\n<span class=\"pl-c\"><span class=\"pl-c\">#</span>&lt;reversed object at 0x7f2ea830b290&gt;</span></pre></div>\n<p>This can be addressed by implementing <a href=\"https://bugs.python.org/issue18826\" rel=\"nofollow\"><code>__reversed__</code></a> magic.</p>\n<p>(Workaround, of course, is <code>reversed(list(torch.Tensor([3, 2, 1])))</code>)</p>", "body_text": "sorted(torch.Tensor([3, 2, 1])) # works\n\nreversed(torch.Tensor([3, 2, 1])) # doesn't \n#Traceback (most recent call last):\n#  File \"<stdin>\", line 1, in <module>\n#TypeError: argument to reversed() must be a sequence\n\nreversed(np.array([3, 2, 1])) # works\n#<reversed object at 0x7f2ea830b290>\nThis can be addressed by implementing __reversed__ magic.\n(Workaround, of course, is reversed(list(torch.Tensor([3, 2, 1]))))", "body": "```python\r\nsorted(torch.Tensor([3, 2, 1])) # works\r\n\r\nreversed(torch.Tensor([3, 2, 1])) # doesn't \r\n#Traceback (most recent call last):\r\n#  File \"<stdin>\", line 1, in <module>\r\n#TypeError: argument to reversed() must be a sequence\r\n\r\nreversed(np.array([3, 2, 1])) # works\r\n#<reversed object at 0x7f2ea830b290>\r\n```\r\n\r\nThis can be addressed by implementing [`__reversed__`](https://bugs.python.org/issue18826) magic.\r\n\r\n(Workaround, of course, is `reversed(list(torch.Tensor([3, 2, 1])))`)"}