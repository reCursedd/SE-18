{"url": "https://api.github.com/repos/pytorch/pytorch/issues/comments/421019725", "html_url": "https://github.com/pytorch/pytorch/issues/1834#issuecomment-421019725", "issue_url": "https://api.github.com/repos/pytorch/pytorch/issues/1834", "id": 421019725, "node_id": "MDEyOklzc3VlQ29tbWVudDQyMTAxOTcyNQ==", "user": {"login": "hughperkins", "id": 123560, "node_id": "MDQ6VXNlcjEyMzU2MA==", "avatar_url": "https://avatars2.githubusercontent.com/u/123560?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hughperkins", "html_url": "https://github.com/hughperkins", "followers_url": "https://api.github.com/users/hughperkins/followers", "following_url": "https://api.github.com/users/hughperkins/following{/other_user}", "gists_url": "https://api.github.com/users/hughperkins/gists{/gist_id}", "starred_url": "https://api.github.com/users/hughperkins/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hughperkins/subscriptions", "organizations_url": "https://api.github.com/users/hughperkins/orgs", "repos_url": "https://api.github.com/users/hughperkins/repos", "events_url": "https://api.github.com/users/hughperkins/events{/privacy}", "received_events_url": "https://api.github.com/users/hughperkins/received_events", "type": "User", "site_admin": false}, "created_at": "2018-09-13T14:06:36Z", "updated_at": "2018-09-13T14:06:36Z", "author_association": "CONTRIBUTOR", "body_html": "<p>I use <code>nonzero</code> all over the place, in performance critical sections, where the result is a cuda tensor:</p>\n<pre><code># input: some_mask, some_tensor (both cudarized)\nidxes = some_mask.view(-1).nonzero().long().view(-1)\nsome_tensor = some_tensor[idxes]\n</code></pre>\n<p>Preference to at least provide the functionality of changing from a mask into indices efficiently using some other differnetly-named function, if it becomes preferable to change the functionality of nonzero itself.</p>", "body_text": "I use nonzero all over the place, in performance critical sections, where the result is a cuda tensor:\n# input: some_mask, some_tensor (both cudarized)\nidxes = some_mask.view(-1).nonzero().long().view(-1)\nsome_tensor = some_tensor[idxes]\n\nPreference to at least provide the functionality of changing from a mask into indices efficiently using some other differnetly-named function, if it becomes preferable to change the functionality of nonzero itself.", "body": "I use `nonzero` all over the place, in performance critical sections, where the result is a cuda tensor:\r\n\r\n```\r\n# input: some_mask, some_tensor (both cudarized)\r\nidxes = some_mask.view(-1).nonzero().long().view(-1)\r\nsome_tensor = some_tensor[idxes]\r\n```\r\n\r\nPreference to at least provide the functionality of changing from a mask into indices efficiently using some other differnetly-named function, if it becomes preferable to change the functionality of nonzero itself.\r\n"}