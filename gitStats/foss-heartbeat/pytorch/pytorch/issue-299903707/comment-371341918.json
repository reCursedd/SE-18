{"url": "https://api.github.com/repos/pytorch/pytorch/issues/comments/371341918", "html_url": "https://github.com/pytorch/pytorch/pull/5394#issuecomment-371341918", "issue_url": "https://api.github.com/repos/pytorch/pytorch/issues/5394", "id": 371341918, "node_id": "MDEyOklzc3VlQ29tbWVudDM3MTM0MTkxOA==", "user": {"login": "li-roy", "id": 8813817, "node_id": "MDQ6VXNlcjg4MTM4MTc=", "avatar_url": "https://avatars0.githubusercontent.com/u/8813817?v=4", "gravatar_id": "", "url": "https://api.github.com/users/li-roy", "html_url": "https://github.com/li-roy", "followers_url": "https://api.github.com/users/li-roy/followers", "following_url": "https://api.github.com/users/li-roy/following{/other_user}", "gists_url": "https://api.github.com/users/li-roy/gists{/gist_id}", "starred_url": "https://api.github.com/users/li-roy/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/li-roy/subscriptions", "organizations_url": "https://api.github.com/users/li-roy/orgs", "repos_url": "https://api.github.com/users/li-roy/repos", "events_url": "https://api.github.com/users/li-roy/events{/privacy}", "received_events_url": "https://api.github.com/users/li-roy/received_events", "type": "User", "site_admin": false}, "created_at": "2018-03-08T01:06:53Z", "updated_at": "2018-03-08T01:06:53Z", "author_association": "CONTRIBUTOR", "body_html": "<p>Here's some benchmarks I ran. I only did ge, but all others are similar.<br>\nbenchmark ipython script: <a href=\"https://gist.github.com/li-roy/76046c3dae52dfb93d376ffd1187836c\">https://gist.github.com/li-roy/76046c3dae52dfb93d376ffd1187836c</a><br>\nthis branch results: <a href=\"https://gist.github.com/li-roy/58239f19febc62fca0bb00b858ae3cd9\">https://gist.github.com/li-roy/58239f19febc62fca0bb00b858ae3cd9</a><br>\nmaster results: <a href=\"https://gist.github.com/li-roy/63b18e866e77b916c52ea12a23511de7\">https://gist.github.com/li-roy/63b18e866e77b916c52ea12a23511de7</a></p>\n<p>This pr is only slower on cases where the tensor is integral and the scalar is floating. This is expected because we need to convert the tensors to floating types in order to compare them properly. I couldn't think of a faster way to do this.</p>\n<p>Still working on getting this to compile on windows.</p>", "body_text": "Here's some benchmarks I ran. I only did ge, but all others are similar.\nbenchmark ipython script: https://gist.github.com/li-roy/76046c3dae52dfb93d376ffd1187836c\nthis branch results: https://gist.github.com/li-roy/58239f19febc62fca0bb00b858ae3cd9\nmaster results: https://gist.github.com/li-roy/63b18e866e77b916c52ea12a23511de7\nThis pr is only slower on cases where the tensor is integral and the scalar is floating. This is expected because we need to convert the tensors to floating types in order to compare them properly. I couldn't think of a faster way to do this.\nStill working on getting this to compile on windows.", "body": "Here's some benchmarks I ran. I only did ge, but all others are similar.\r\nbenchmark ipython script: https://gist.github.com/li-roy/76046c3dae52dfb93d376ffd1187836c\r\nthis branch results: https://gist.github.com/li-roy/58239f19febc62fca0bb00b858ae3cd9\r\nmaster results: https://gist.github.com/li-roy/63b18e866e77b916c52ea12a23511de7\r\n\r\nThis pr is only slower on cases where the tensor is integral and the scalar is floating. This is expected because we need to convert the tensors to floating types in order to compare them properly. I couldn't think of a faster way to do this.\r\n\r\nStill working on getting this to compile on windows."}