{"url": "https://api.github.com/repos/pytorch/pytorch/issues/5394", "repository_url": "https://api.github.com/repos/pytorch/pytorch", "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/5394/labels{/name}", "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/5394/comments", "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/5394/events", "html_url": "https://github.com/pytorch/pytorch/pull/5394", "id": 299903707, "node_id": "MDExOlB1bGxSZXF1ZXN0MTcxMTU2MjY2", "number": 5394, "title": "Reimplement tensor comparators in aten", "user": {"login": "li-roy", "id": 8813817, "node_id": "MDQ6VXNlcjg4MTM4MTc=", "avatar_url": "https://avatars0.githubusercontent.com/u/8813817?v=4", "gravatar_id": "", "url": "https://api.github.com/users/li-roy", "html_url": "https://github.com/li-roy", "followers_url": "https://api.github.com/users/li-roy/followers", "following_url": "https://api.github.com/users/li-roy/following{/other_user}", "gists_url": "https://api.github.com/users/li-roy/gists{/gist_id}", "starred_url": "https://api.github.com/users/li-roy/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/li-roy/subscriptions", "organizations_url": "https://api.github.com/users/li-roy/orgs", "repos_url": "https://api.github.com/users/li-roy/repos", "events_url": "https://api.github.com/users/li-roy/events{/privacy}", "received_events_url": "https://api.github.com/users/li-roy/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 545367190, "node_id": "MDU6TGFiZWw1NDUzNjcxOTA=", "url": "https://api.github.com/repos/pytorch/pytorch/labels/awaiting%20response", "name": "awaiting response", "color": "5319e7", "default": false}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 21, "created_at": "2018-02-24T02:35:50Z", "updated_at": "2018-11-23T15:41:13Z", "closed_at": "2018-06-07T02:21:51Z", "author_association": "CONTRIBUTOR", "pull_request": {"url": "https://api.github.com/repos/pytorch/pytorch/pulls/5394", "html_url": "https://github.com/pytorch/pytorch/pull/5394", "diff_url": "https://github.com/pytorch/pytorch/pull/5394.diff", "patch_url": "https://github.com/pytorch/pytorch/pull/5394.patch"}, "body_html": "<p><span class=\"issue-keyword tooltipped tooltipped-se\" aria-label=\"This pull request closes issue #5008.\">Fixes</span> <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load issue title\" data-id=\"293807981\" data-permission-text=\"Issue title is private\" data-url=\"https://github.com/pytorch/pytorch/issues/5008\" data-hovercard-type=\"issue\" data-hovercard-url=\"/pytorch/pytorch/issues/5008/hovercard\" href=\"https://github.com/pytorch/pytorch/issues/5008\">#5008</a>. Instead of throwing error, we allow doing comparators with floats on integral tensors.</p>\n<p>example:</p>\n<pre><code>&gt;&gt;&gt; a = torch.LongTensor([0,1]).cuda()\n&gt;&gt;&gt; a.ge(0.5)\n\n 0\n 1\n[torch.cuda.ByteTensor of size (2,) (GPU 0)]\n</code></pre>", "body_text": "Fixes #5008. Instead of throwing error, we allow doing comparators with floats on integral tensors.\nexample:\n>>> a = torch.LongTensor([0,1]).cuda()\n>>> a.ge(0.5)\n\n 0\n 1\n[torch.cuda.ByteTensor of size (2,) (GPU 0)]", "body": "Fixes #5008. Instead of throwing error, we allow doing comparators with floats on integral tensors.\r\n\r\nexample:\r\n```\r\n>>> a = torch.LongTensor([0,1]).cuda()\r\n>>> a.ge(0.5)\r\n\r\n 0\r\n 1\r\n[torch.cuda.ByteTensor of size (2,) (GPU 0)]\r\n```"}