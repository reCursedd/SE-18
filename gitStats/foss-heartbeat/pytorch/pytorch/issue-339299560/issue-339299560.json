{"url": "https://api.github.com/repos/pytorch/pytorch/issues/9253", "repository_url": "https://api.github.com/repos/pytorch/pytorch", "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/9253/labels{/name}", "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/9253/comments", "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/9253/events", "html_url": "https://github.com/pytorch/pytorch/issues/9253", "id": 339299560, "node_id": "MDU6SXNzdWUzMzkyOTk1NjA=", "number": 9253, "title": "Inconsistent slicing ", "user": {"login": "PetrochukM", "id": 7424737, "node_id": "MDQ6VXNlcjc0MjQ3Mzc=", "avatar_url": "https://avatars2.githubusercontent.com/u/7424737?v=4", "gravatar_id": "", "url": "https://api.github.com/users/PetrochukM", "html_url": "https://github.com/PetrochukM", "followers_url": "https://api.github.com/users/PetrochukM/followers", "following_url": "https://api.github.com/users/PetrochukM/following{/other_user}", "gists_url": "https://api.github.com/users/PetrochukM/gists{/gist_id}", "starred_url": "https://api.github.com/users/PetrochukM/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/PetrochukM/subscriptions", "organizations_url": "https://api.github.com/users/PetrochukM/orgs", "repos_url": "https://api.github.com/users/PetrochukM/repos", "events_url": "https://api.github.com/users/PetrochukM/events{/privacy}", "received_events_url": "https://api.github.com/users/PetrochukM/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-07-09T04:16:17Z", "updated_at": "2018-07-09T05:03:31Z", "closed_at": null, "author_association": "NONE", "body_html": "<h2>Issue description</h2>\n<p>Let me know but I'd imagine the code lines below would have the same output.</p>\n<h2>Code example</h2>\n<pre><code>&gt;&gt;&gt; torch.tensor([[1, 2, 3]])[:, :0] # This is inconsistent with below\ntensor([ 1])\n\n&gt;&gt;&gt; torch.tensor([1, 2, 3])[:0]  # This is inconsistent with above\ntensor([], dtype=torch.int64) \n\n&gt;&gt;&gt; torch.tensor([[1, 2, 3]])[:, :1]\ntensor([[ 1]])\n\n&gt;&gt;&gt; torch.tensor([1, 2, 3])[:1]\ntensor([ 1])\n</code></pre>", "body_text": "Issue description\nLet me know but I'd imagine the code lines below would have the same output.\nCode example\n>>> torch.tensor([[1, 2, 3]])[:, :0] # This is inconsistent with below\ntensor([ 1])\n\n>>> torch.tensor([1, 2, 3])[:0]  # This is inconsistent with above\ntensor([], dtype=torch.int64) \n\n>>> torch.tensor([[1, 2, 3]])[:, :1]\ntensor([[ 1]])\n\n>>> torch.tensor([1, 2, 3])[:1]\ntensor([ 1])", "body": "## Issue description\r\n\r\nLet me know but I'd imagine the code lines below would have the same output.\r\n\r\n## Code example\r\n\r\n```\r\n>>> torch.tensor([[1, 2, 3]])[:, :0] # This is inconsistent with below\r\ntensor([ 1])\r\n\r\n>>> torch.tensor([1, 2, 3])[:0]  # This is inconsistent with above\r\ntensor([], dtype=torch.int64) \r\n\r\n>>> torch.tensor([[1, 2, 3]])[:, :1]\r\ntensor([[ 1]])\r\n\r\n>>> torch.tensor([1, 2, 3])[:1]\r\ntensor([ 1])\r\n```\r\n"}