{"url": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/167453157", "pull_request_review_id": 95673019, "id": 167453157, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE2NzQ1MzE1Nw==", "diff_hunk": "@@ -61,12 +61,16 @@ class Transform(object):\n             the codomain. Transforms that are not bijective should at least\n             maintain the weaker pseudoinverse properties\n             ``t(t.inv(t(x)) == t(x)`` and ``t.inv(t(t.inv(y))) == t.inv(y)``.\n+        sign (int or Variable): For bijective univariate transforms, this\n+            should be +1 or -1 depending on whether transform is monotone\n+            increasing or decreasing.\n         event_dim (int): Number of dimensions that are correlated together in\n             the transform ``event_shape``. This should be 0 for pointwise\n             transforms, 1 for transforms that act jointly on vectors, 2 for\n             transforms that act jointly on matrices, etc.\n     \"\"\"\n     bijective = False\n+    sign = float('nan')", "path": "torch/distributions/transforms.py", "position": null, "original_position": 13, "commit_id": "394e31591342b21dcebf8bb7e8260dad2991dcc5", "original_commit_id": "c45200e6aa0fe4b2feaf82682348eeaa77caf930", "user": {"login": "apaszke", "id": 4583066, "node_id": "MDQ6VXNlcjQ1ODMwNjY=", "avatar_url": "https://avatars3.githubusercontent.com/u/4583066?v=4", "gravatar_id": "", "url": "https://api.github.com/users/apaszke", "html_url": "https://github.com/apaszke", "followers_url": "https://api.github.com/users/apaszke/followers", "following_url": "https://api.github.com/users/apaszke/following{/other_user}", "gists_url": "https://api.github.com/users/apaszke/gists{/gist_id}", "starred_url": "https://api.github.com/users/apaszke/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/apaszke/subscriptions", "organizations_url": "https://api.github.com/users/apaszke/orgs", "repos_url": "https://api.github.com/users/apaszke/repos", "events_url": "https://api.github.com/users/apaszke/events{/privacy}", "received_events_url": "https://api.github.com/users/apaszke/received_events", "type": "User", "site_admin": false}, "body": "I think it would be a better idea to make it a property that raises `NotImplementedError` instead of a `NaN`", "created_at": "2018-02-11T22:43:43Z", "updated_at": "2018-11-23T15:39:27Z", "html_url": "https://github.com/pytorch/pytorch/pull/5172#discussion_r167453157", "pull_request_url": "https://api.github.com/repos/pytorch/pytorch/pulls/5172", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/167453157"}, "html": {"href": "https://github.com/pytorch/pytorch/pull/5172#discussion_r167453157"}, "pull_request": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/5172"}}, "body_html": "<p>I think it would be a better idea to make it a property that raises <code>NotImplementedError</code> instead of a <code>NaN</code></p>", "body_text": "I think it would be a better idea to make it a property that raises NotImplementedError instead of a NaN"}