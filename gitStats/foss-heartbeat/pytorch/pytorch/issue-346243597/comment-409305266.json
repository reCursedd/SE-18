{"url": "https://api.github.com/repos/pytorch/pytorch/issues/comments/409305266", "html_url": "https://github.com/pytorch/pytorch/pull/10075#issuecomment-409305266", "issue_url": "https://api.github.com/repos/pytorch/pytorch/issues/10075", "id": 409305266, "node_id": "MDEyOklzc3VlQ29tbWVudDQwOTMwNTI2Ng==", "user": {"login": "fmassa", "id": 9110200, "node_id": "MDQ6VXNlcjkxMTAyMDA=", "avatar_url": "https://avatars2.githubusercontent.com/u/9110200?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fmassa", "html_url": "https://github.com/fmassa", "followers_url": "https://api.github.com/users/fmassa/followers", "following_url": "https://api.github.com/users/fmassa/following{/other_user}", "gists_url": "https://api.github.com/users/fmassa/gists{/gist_id}", "starred_url": "https://api.github.com/users/fmassa/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fmassa/subscriptions", "organizations_url": "https://api.github.com/users/fmassa/orgs", "repos_url": "https://api.github.com/users/fmassa/repos", "events_url": "https://api.github.com/users/fmassa/events{/privacy}", "received_events_url": "https://api.github.com/users/fmassa/received_events", "type": "User", "site_admin": false}, "created_at": "2018-07-31T17:36:37Z", "updated_at": "2018-07-31T17:36:37Z", "author_association": "MEMBER", "body_html": "<p><a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=1041752\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/vadimkantorov\">@vadimkantorov</a> I think there was a discussion around using <code>torch.as_tensor</code> (or something equivalent) in the beginning of every PyTorch function, so that it also works for numbers and numpy arrays.<br>\nNot sure what's the status of that. <a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=3768583\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/gchanan\">@gchanan</a> did we decide on something about that?</p>", "body_text": "@vadimkantorov I think there was a discussion around using torch.as_tensor (or something equivalent) in the beginning of every PyTorch function, so that it also works for numbers and numpy arrays.\nNot sure what's the status of that. @gchanan did we decide on something about that?", "body": "@vadimkantorov I think there was a discussion around using `torch.as_tensor` (or something equivalent) in the beginning of every PyTorch function, so that it also works for numbers and numpy arrays.\r\nNot sure what's the status of that. @gchanan did we decide on something about that?"}