{"url": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/206999414", "pull_request_review_id": 142522827, "id": 206999414, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwNjk5OTQxNA==", "diff_hunk": "@@ -64,22 +48,20 @@ def broadcast_all(*values):\n         ValueError: if any of the values is not a `numbers.Number` or\n             `torch.*Tensor` instance\n     \"\"\"\n-    values = list(values)\n-    scalar_idxs = [i for i in range(len(values)) if isinstance(values[i], Number)]\n-    tensor_idxs = [i for i in range(len(values)) if values[i].__class__.__name__ == 'Tensor']\n-    if len(scalar_idxs) + len(tensor_idxs) != len(values):\n+    if not all(map(lambda v: torch.is_tensor(v) or isinstance(v, Number), values)):", "path": "torch/distributions/utils.py", "position": null, "original_position": 41, "commit_id": "de7de5c26da15a6d9b15b5af4098ecad4c391db1", "original_commit_id": "f28068f6bd427d20fff40e77bb370e73a5f7f1db", "user": {"login": "fritzo", "id": 648532, "node_id": "MDQ6VXNlcjY0ODUzMg==", "avatar_url": "https://avatars0.githubusercontent.com/u/648532?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fritzo", "html_url": "https://github.com/fritzo", "followers_url": "https://api.github.com/users/fritzo/followers", "following_url": "https://api.github.com/users/fritzo/following{/other_user}", "gists_url": "https://api.github.com/users/fritzo/gists{/gist_id}", "starred_url": "https://api.github.com/users/fritzo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fritzo/subscriptions", "organizations_url": "https://api.github.com/users/fritzo/orgs", "repos_url": "https://api.github.com/users/fritzo/repos", "events_url": "https://api.github.com/users/fritzo/events{/privacy}", "received_events_url": "https://api.github.com/users/fritzo/received_events", "type": "User", "site_admin": false}, "body": "nit: it's a tad bit more readable to \r\n```py\r\nif not all(torch.is_tensor(v) or isinstance(v, Number) for v in values):\r\n    ...\r\n```", "created_at": "2018-08-01T19:12:00Z", "updated_at": "2018-11-23T15:48:34Z", "html_url": "https://github.com/pytorch/pytorch/pull/10075#discussion_r206999414", "pull_request_url": "https://api.github.com/repos/pytorch/pytorch/pulls/10075", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/206999414"}, "html": {"href": "https://github.com/pytorch/pytorch/pull/10075#discussion_r206999414"}, "pull_request": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/10075"}}, "body_html": "<p>nit: it's a tad bit more readable to</p>\n<div class=\"highlight highlight-source-python\"><pre><span class=\"pl-k\">if</span> <span class=\"pl-k\">not</span> <span class=\"pl-c1\">all</span>(torch.is_tensor(v) <span class=\"pl-k\">or</span> <span class=\"pl-c1\">isinstance</span>(v, Number) <span class=\"pl-k\">for</span> v <span class=\"pl-k\">in</span> values):\n    <span class=\"pl-c1\">...</span></pre></div>", "body_text": "nit: it's a tad bit more readable to\nif not all(torch.is_tensor(v) or isinstance(v, Number) for v in values):\n    ..."}