{"url": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/206998833", "pull_request_review_id": 142522090, "id": 206998833, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwNjk5ODgzMw==", "diff_hunk": "@@ -64,22 +48,20 @@ def broadcast_all(*values):\n         ValueError: if any of the values is not a `numbers.Number` or\n             `torch.*Tensor` instance\n     \"\"\"\n-    values = list(values)\n-    scalar_idxs = [i for i in range(len(values)) if isinstance(values[i], Number)]\n-    tensor_idxs = [i for i in range(len(values)) if values[i].__class__.__name__ == 'Tensor']\n-    if len(scalar_idxs) + len(tensor_idxs) != len(values):\n+    if not all(map(lambda v: torch.is_tensor(v) or isinstance(v, Number), values)):\n         raise ValueError('Input arguments must all be instances of numbers.Number or torch.tensor.')\n-    if tensor_idxs:\n-        broadcast_shape = _broadcast_shape([values[i].size() for i in tensor_idxs])\n-        for idx in tensor_idxs:\n-            values[idx] = values[idx].expand(broadcast_shape)\n-        template = values[tensor_idxs[0]]\n-        for idx in scalar_idxs:\n-            values[idx] = template.new(template.size()).fill_(values[idx])\n-    else:\n-        for idx in scalar_idxs:\n-            values[idx] = torch.tensor(float(values[idx]))\n-    return values\n+    if not all(map(torch.is_tensor, values)):\n+        # promote numbers to tensors of dtype torch.get_default_dtype()\n+        def default_promotion(v):", "path": "torch/distributions/utils.py", "position": null, "original_position": 56, "commit_id": "de7de5c26da15a6d9b15b5af4098ecad4c391db1", "original_commit_id": "f28068f6bd427d20fff40e77bb370e73a5f7f1db", "user": {"login": "fritzo", "id": 648532, "node_id": "MDQ6VXNlcjY0ODUzMg==", "avatar_url": "https://avatars0.githubusercontent.com/u/648532?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fritzo", "html_url": "https://github.com/fritzo", "followers_url": "https://api.github.com/users/fritzo/followers", "following_url": "https://api.github.com/users/fritzo/following{/other_user}", "gists_url": "https://api.github.com/users/fritzo/gists{/gist_id}", "starred_url": "https://api.github.com/users/fritzo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fritzo/subscriptions", "organizations_url": "https://api.github.com/users/fritzo/orgs", "repos_url": "https://api.github.com/users/fritzo/repos", "events_url": "https://api.github.com/users/fritzo/events{/privacy}", "received_events_url": "https://api.github.com/users/fritzo/received_events", "type": "User", "site_admin": false}, "body": "nit: I think we should define this at file level to avoid the overhead of creating a new function on each invocation.\r\n```py\r\ndef _default_promotion(v):\r\n    return torch.tensor(v, dtype=torch.get_default_dtype())\r\n```", "created_at": "2018-08-01T19:09:44Z", "updated_at": "2018-11-23T15:48:34Z", "html_url": "https://github.com/pytorch/pytorch/pull/10075#discussion_r206998833", "pull_request_url": "https://api.github.com/repos/pytorch/pytorch/pulls/10075", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/206998833"}, "html": {"href": "https://github.com/pytorch/pytorch/pull/10075#discussion_r206998833"}, "pull_request": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/10075"}}, "body_html": "<p>nit: I think we should define this at file level to avoid the overhead of creating a new function on each invocation.</p>\n<div class=\"highlight highlight-source-python\"><pre><span class=\"pl-k\">def</span> <span class=\"pl-en\">_default_promotion</span>(<span class=\"pl-smi\">v</span>):\n    <span class=\"pl-k\">return</span> torch.tensor(v, <span class=\"pl-v\">dtype</span><span class=\"pl-k\">=</span>torch.get_default_dtype())</pre></div>", "body_text": "nit: I think we should define this at file level to avoid the overhead of creating a new function on each invocation.\ndef _default_promotion(v):\n    return torch.tensor(v, dtype=torch.get_default_dtype())"}