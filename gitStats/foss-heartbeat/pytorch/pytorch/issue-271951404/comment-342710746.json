{"url": "https://api.github.com/repos/pytorch/pytorch/issues/comments/342710746", "html_url": "https://github.com/pytorch/pytorch/issues/3540#issuecomment-342710746", "issue_url": "https://api.github.com/repos/pytorch/pytorch/issues/3540", "id": 342710746, "node_id": "MDEyOklzc3VlQ29tbWVudDM0MjcxMDc0Ng==", "user": {"login": "meder411", "id": 6818607, "node_id": "MDQ6VXNlcjY4MTg2MDc=", "avatar_url": "https://avatars0.githubusercontent.com/u/6818607?v=4", "gravatar_id": "", "url": "https://api.github.com/users/meder411", "html_url": "https://github.com/meder411", "followers_url": "https://api.github.com/users/meder411/followers", "following_url": "https://api.github.com/users/meder411/following{/other_user}", "gists_url": "https://api.github.com/users/meder411/gists{/gist_id}", "starred_url": "https://api.github.com/users/meder411/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/meder411/subscriptions", "organizations_url": "https://api.github.com/users/meder411/orgs", "repos_url": "https://api.github.com/users/meder411/repos", "events_url": "https://api.github.com/users/meder411/events{/privacy}", "received_events_url": "https://api.github.com/users/meder411/received_events", "type": "User", "site_admin": false}, "created_at": "2017-11-08T04:54:38Z", "updated_at": "2017-11-08T04:54:38Z", "author_association": "NONE", "body_html": "<p>Thinking this over further, it seems that BCELoss should have a way to do this. Even through BCELoss with {0,1} targets basically reduces to NLLLoss, the annoying thing about the NLLLoss2d function is that I need a channel for each class. It'd be much more preferable to provide a Bx1xHxW binary image as my input to the loss.</p>", "body_text": "Thinking this over further, it seems that BCELoss should have a way to do this. Even through BCELoss with {0,1} targets basically reduces to NLLLoss, the annoying thing about the NLLLoss2d function is that I need a channel for each class. It'd be much more preferable to provide a Bx1xHxW binary image as my input to the loss.", "body": "Thinking this over further, it seems that BCELoss should have a way to do this. Even through BCELoss with {0,1} targets basically reduces to NLLLoss, the annoying thing about the NLLLoss2d function is that I need a channel for each class. It'd be much more preferable to provide a Bx1xHxW binary image as my input to the loss."}