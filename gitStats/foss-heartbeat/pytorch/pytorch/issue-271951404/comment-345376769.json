{"url": "https://api.github.com/repos/pytorch/pytorch/issues/comments/345376769", "html_url": "https://github.com/pytorch/pytorch/issues/3540#issuecomment-345376769", "issue_url": "https://api.github.com/repos/pytorch/pytorch/issues/3540", "id": 345376769, "node_id": "MDEyOklzc3VlQ29tbWVudDM0NTM3Njc2OQ==", "user": {"login": "zou3519", "id": 5652049, "node_id": "MDQ6VXNlcjU2NTIwNDk=", "avatar_url": "https://avatars3.githubusercontent.com/u/5652049?v=4", "gravatar_id": "", "url": "https://api.github.com/users/zou3519", "html_url": "https://github.com/zou3519", "followers_url": "https://api.github.com/users/zou3519/followers", "following_url": "https://api.github.com/users/zou3519/following{/other_user}", "gists_url": "https://api.github.com/users/zou3519/gists{/gist_id}", "starred_url": "https://api.github.com/users/zou3519/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/zou3519/subscriptions", "organizations_url": "https://api.github.com/users/zou3519/orgs", "repos_url": "https://api.github.com/users/zou3519/repos", "events_url": "https://api.github.com/users/zou3519/events{/privacy}", "received_events_url": "https://api.github.com/users/zou3519/received_events", "type": "User", "site_admin": false}, "created_at": "2017-11-17T21:57:38Z", "updated_at": "2017-11-17T21:57:38Z", "author_association": "CONTRIBUTOR", "body_html": "<blockquote>\n<p>BCELoss with {0,1} targets basically reduces to NLLLoss</p>\n</blockquote>\n<p>Does it? Their formulation is different on the <a href=\"http://pytorch.org/docs/master/nn.html?highlight=bceloss#torch.nn.BCELoss\" rel=\"nofollow\">docs</a>.</p>\n<blockquote>\n<p>the annoying thing about the NLLLoss2d function is that I need a channel for each class</p>\n</blockquote>\n<p>The input to <code>NLLLoss2d</code> would have size <code>(N, 2, H, W)</code>, while the target should be <code>(N, H, W)</code>. Could you elaborate a little more on how this is annoying? I'm not sure I understand what you mean by providing a <code>Bx1xHxW</code> input.</p>", "body_text": "BCELoss with {0,1} targets basically reduces to NLLLoss\n\nDoes it? Their formulation is different on the docs.\n\nthe annoying thing about the NLLLoss2d function is that I need a channel for each class\n\nThe input to NLLLoss2d would have size (N, 2, H, W), while the target should be (N, H, W). Could you elaborate a little more on how this is annoying? I'm not sure I understand what you mean by providing a Bx1xHxW input.", "body": "> BCELoss with {0,1} targets basically reduces to NLLLoss\r\n\r\nDoes it? Their formulation is different on the [docs](http://pytorch.org/docs/master/nn.html?highlight=bceloss#torch.nn.BCELoss).\r\n\r\n>  the annoying thing about the NLLLoss2d function is that I need a channel for each class\r\n\r\nThe input to `NLLLoss2d` would have size `(N, 2, H, W)`, while the target should be `(N, H, W)`. Could you elaborate a little more on how this is annoying? I'm not sure I understand what you mean by providing a `Bx1xHxW` input."}