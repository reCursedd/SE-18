{"url": "https://api.github.com/repos/pytorch/pytorch/issues/comments/345377756", "html_url": "https://github.com/pytorch/pytorch/issues/3540#issuecomment-345377756", "issue_url": "https://api.github.com/repos/pytorch/pytorch/issues/3540", "id": 345377756, "node_id": "MDEyOklzc3VlQ29tbWVudDM0NTM3Nzc1Ng==", "user": {"login": "meder411", "id": 6818607, "node_id": "MDQ6VXNlcjY4MTg2MDc=", "avatar_url": "https://avatars0.githubusercontent.com/u/6818607?v=4", "gravatar_id": "", "url": "https://api.github.com/users/meder411", "html_url": "https://github.com/meder411", "followers_url": "https://api.github.com/users/meder411/followers", "following_url": "https://api.github.com/users/meder411/following{/other_user}", "gists_url": "https://api.github.com/users/meder411/gists{/gist_id}", "starred_url": "https://api.github.com/users/meder411/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/meder411/subscriptions", "organizations_url": "https://api.github.com/users/meder411/orgs", "repos_url": "https://api.github.com/users/meder411/repos", "events_url": "https://api.github.com/users/meder411/events{/privacy}", "received_events_url": "https://api.github.com/users/meder411/received_events", "type": "User", "site_admin": false}, "created_at": "2017-11-17T22:02:22Z", "updated_at": "2017-11-17T22:02:22Z", "author_association": "NONE", "body_html": "<div class=\"email-fragment\">After playing with this further, I suspect I wasn\u2019t quite articulating my concern well at all and have resolved the issue. Feel free to close this.</div>\n<span class=\"email-hidden-toggle\"><a href=\"#\">\u2026</a></span><div class=\"email-hidden-reply\">\n<div class=\"email-quoted-reply\"> On Nov 17, 2017, at 4:57 PM, Richard Zou ***@***.***&gt; wrote:\n\n BCELoss with {0,1} targets basically reduces to NLLLoss\n\n Does it? Their formulation is different on the docs.\n\n the annoying thing about the NLLLoss2d function is that I need a channel for each class\n\n The input to NLLLoss2d would have size (N, 2, H, W), while the target should be (N, H, W). Could you elaborate a little more on how this is annoying? I'm not sure I understand what you mean by providing a Bx1xHxW input.\n\n \u2014\n You are receiving this because you authored the thread.\n Reply to this email directly, view it on GitHub, or mute the thread.\n</div>\n<div class=\"email-fragment\"></div>\n</div>", "body_text": "After playing with this further, I suspect I wasn\u2019t quite articulating my concern well at all and have resolved the issue. Feel free to close this.\n\u2026\n On Nov 17, 2017, at 4:57 PM, Richard Zou ***@***.***> wrote:\n\n BCELoss with {0,1} targets basically reduces to NLLLoss\n\n Does it? Their formulation is different on the docs.\n\n the annoying thing about the NLLLoss2d function is that I need a channel for each class\n\n The input to NLLLoss2d would have size (N, 2, H, W), while the target should be (N, H, W). Could you elaborate a little more on how this is annoying? I'm not sure I understand what you mean by providing a Bx1xHxW input.\n\n \u2014\n You are receiving this because you authored the thread.\n Reply to this email directly, view it on GitHub, or mute the thread.", "body": "After playing with this further, I suspect I wasn\u2019t quite articulating my concern well at all and have resolved the issue. Feel free to close this. \n\n\n> On Nov 17, 2017, at 4:57 PM, Richard Zou <notifications@github.com> wrote:\n> \n> BCELoss with {0,1} targets basically reduces to NLLLoss\n> \n> Does it? Their formulation is different on the docs.\n> \n> the annoying thing about the NLLLoss2d function is that I need a channel for each class\n> \n> The input to NLLLoss2d would have size (N, 2, H, W), while the target should be (N, H, W). Could you elaborate a little more on how this is annoying? I'm not sure I understand what you mean by providing a Bx1xHxW input.\n> \n> \u2014\n> You are receiving this because you authored the thread.\n> Reply to this email directly, view it on GitHub, or mute the thread.\n> \n"}