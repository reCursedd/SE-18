{"url": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/189828340", "pull_request_review_id": 122078108, "id": 189828340, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4OTgyODM0MA==", "diff_hunk": "@@ -149,6 +159,32 @@ static std::vector<Value*> gradientForNode(Node* node, ArrayRef<Value*> grad_val\n           return returned_grads;\n         }\n       }\n+      case aten::addmm: {\n+        JIT_ASSERT(inputs.size() == 3);\n+        JIT_ASSERT(outputs.size() == 1);\n+        JIT_ASSERT(grads.size() == 1);\n+\n+        // First take the grads from the matmul\n+        auto returned_grads = mm_grads({inputs[1], inputs[2]}, grads);\n+\n+        // Scale grads if applicable\n+        auto alpha = at::Scalar(node->t(attr::alpha));\n+        if (alpha.to<double>() != 1.0) {\n+          for (size_t i=0; i < returned_grads.size(); ++i) {\n+            returned_grads[i] = returned_grads[i] * alpha;\n+          }\n+        }\n+\n+        // Grad from the addition\n+        auto beta = at::Scalar(node->t(attr::beta));\n+        auto it = returned_grads.begin();\n+        if (beta.to<double>() != 1.0)\n+          returned_grads.insert(it, grads[0] * beta);\n+        else\n+          returned_grads.insert(it, grads[0]);", "path": "torch/csrc/jit/autodiff.cpp", "position": 104, "original_position": 104, "commit_id": "61a34571fbd5134a1fc71c532e43ef19e7e01921", "original_commit_id": "61a34571fbd5134a1fc71c532e43ef19e7e01921", "user": {"login": "apaszke", "id": 4583066, "node_id": "MDQ6VXNlcjQ1ODMwNjY=", "avatar_url": "https://avatars3.githubusercontent.com/u/4583066?v=4", "gravatar_id": "", "url": "https://api.github.com/users/apaszke", "html_url": "https://github.com/apaszke", "followers_url": "https://api.github.com/users/apaszke/followers", "following_url": "https://api.github.com/users/apaszke/following{/other_user}", "gists_url": "https://api.github.com/users/apaszke/gists{/gist_id}", "starred_url": "https://api.github.com/users/apaszke/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/apaszke/subscriptions", "organizations_url": "https://api.github.com/users/apaszke/orgs", "repos_url": "https://api.github.com/users/apaszke/repos", "events_url": "https://api.github.com/users/apaszke/events{/privacy}", "received_events_url": "https://api.github.com/users/apaszke/received_events", "type": "User", "site_admin": false}, "body": "Soo this is expected to work only under the assumption that the add part doesn't broadcast, right?", "created_at": "2018-05-22T09:09:23Z", "updated_at": "2018-11-23T15:44:29Z", "html_url": "https://github.com/pytorch/pytorch/pull/7748#discussion_r189828340", "pull_request_url": "https://api.github.com/repos/pytorch/pytorch/pulls/7748", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/189828340"}, "html": {"href": "https://github.com/pytorch/pytorch/pull/7748#discussion_r189828340"}, "pull_request": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/7748"}}, "body_html": "<p>Soo this is expected to work only under the assumption that the add part doesn't broadcast, right?</p>", "body_text": "Soo this is expected to work only under the assumption that the add part doesn't broadcast, right?"}