{"url": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/189755281", "pull_request_review_id": 121995385, "id": 189755281, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4OTc1NTI4MQ==", "diff_hunk": "@@ -149,6 +159,32 @@ static std::vector<Value*> gradientForNode(Node* node, ArrayRef<Value*> grad_val\n           return returned_grads;\n         }\n       }\n+      case aten::addmm: {", "path": "torch/csrc/jit/autodiff.cpp", "position": 82, "original_position": 82, "commit_id": "61a34571fbd5134a1fc71c532e43ef19e7e01921", "original_commit_id": "61a34571fbd5134a1fc71c532e43ef19e7e01921", "user": {"login": "zdevito", "id": 370202, "node_id": "MDQ6VXNlcjM3MDIwMg==", "avatar_url": "https://avatars0.githubusercontent.com/u/370202?v=4", "gravatar_id": "", "url": "https://api.github.com/users/zdevito", "html_url": "https://github.com/zdevito", "followers_url": "https://api.github.com/users/zdevito/followers", "following_url": "https://api.github.com/users/zdevito/following{/other_user}", "gists_url": "https://api.github.com/users/zdevito/gists{/gist_id}", "starred_url": "https://api.github.com/users/zdevito/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/zdevito/subscriptions", "organizations_url": "https://api.github.com/users/zdevito/orgs", "repos_url": "https://api.github.com/users/zdevito/repos", "events_url": "https://api.github.com/users/zdevito/events{/privacy}", "received_events_url": "https://api.github.com/users/zdevito/received_events", "type": "User", "site_admin": false}, "body": "Offline chat: Due to broadcasting issues (shape_analysis doesn't handle broadcasting of addmm), we are going to \r\n\r\n1. before differentiation apply a pass that fissions addmm so that we can work on RISC instructions.\r\n2. add a case to peephole to construct addmm's from a*b + c patterns, which should actually help in cases where the user didn't write the fused op in the first place.", "created_at": "2018-05-22T01:23:27Z", "updated_at": "2018-11-23T15:44:27Z", "html_url": "https://github.com/pytorch/pytorch/pull/7748#discussion_r189755281", "pull_request_url": "https://api.github.com/repos/pytorch/pytorch/pulls/7748", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/189755281"}, "html": {"href": "https://github.com/pytorch/pytorch/pull/7748#discussion_r189755281"}, "pull_request": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/7748"}}, "body_html": "<p>Offline chat: Due to broadcasting issues (shape_analysis doesn't handle broadcasting of addmm), we are going to</p>\n<ol>\n<li>before differentiation apply a pass that fissions addmm so that we can work on RISC instructions.</li>\n<li>add a case to peephole to construct addmm's from a*b + c patterns, which should actually help in cases where the user didn't write the fused op in the first place.</li>\n</ol>", "body_text": "Offline chat: Due to broadcasting issues (shape_analysis doesn't handle broadcasting of addmm), we are going to\n\nbefore differentiation apply a pass that fissions addmm so that we can work on RISC instructions.\nadd a case to peephole to construct addmm's from a*b + c patterns, which should actually help in cases where the user didn't write the fused op in the first place."}