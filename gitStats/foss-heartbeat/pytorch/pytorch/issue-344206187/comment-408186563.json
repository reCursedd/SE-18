{"url": "https://api.github.com/repos/pytorch/pytorch/issues/comments/408186563", "html_url": "https://github.com/pytorch/pytorch/pull/9786#issuecomment-408186563", "issue_url": "https://api.github.com/repos/pytorch/pytorch/issues/9786", "id": 408186563, "node_id": "MDEyOklzc3VlQ29tbWVudDQwODE4NjU2Mw==", "user": {"login": "zdevito", "id": 370202, "node_id": "MDQ6VXNlcjM3MDIwMg==", "avatar_url": "https://avatars0.githubusercontent.com/u/370202?v=4", "gravatar_id": "", "url": "https://api.github.com/users/zdevito", "html_url": "https://github.com/zdevito", "followers_url": "https://api.github.com/users/zdevito/followers", "following_url": "https://api.github.com/users/zdevito/following{/other_user}", "gists_url": "https://api.github.com/users/zdevito/gists{/gist_id}", "starred_url": "https://api.github.com/users/zdevito/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/zdevito/subscriptions", "organizations_url": "https://api.github.com/users/zdevito/orgs", "repos_url": "https://api.github.com/users/zdevito/repos", "events_url": "https://api.github.com/users/zdevito/events{/privacy}", "received_events_url": "https://api.github.com/users/zdevito/received_events", "type": "User", "site_admin": false}, "created_at": "2018-07-26T18:12:02Z", "updated_at": "2018-07-26T18:12:02Z", "author_association": "CONTRIBUTOR", "body_html": "<p>We were already using type pointers before, this is just making their use consistent. There were a bunch of places where you ended up with a derived type but needed the shared pointer again.</p>\n<p>In the future, I think it would be better to make types behave like value types (e.g. like at::Tensor or IValue), meaning that equality etc. all just works and we can pass them around as Type objects. But this would be a more invasive change that we can't make while all our other PRs are in flight.</p>", "body_text": "We were already using type pointers before, this is just making their use consistent. There were a bunch of places where you ended up with a derived type but needed the shared pointer again.\nIn the future, I think it would be better to make types behave like value types (e.g. like at::Tensor or IValue), meaning that equality etc. all just works and we can pass them around as Type objects. But this would be a more invasive change that we can't make while all our other PRs are in flight.", "body": "We were already using type pointers before, this is just making their use consistent. There were a bunch of places where you ended up with a derived type but needed the shared pointer again. \r\n\r\nIn the future, I think it would be better to make types behave like value types (e.g. like at::Tensor or IValue), meaning that equality etc. all just works and we can pass them around as Type objects. But this would be a more invasive change that we can't make while all our other PRs are in flight."}