{"url": "https://api.github.com/repos/pytorch/pytorch/issues/comments/364240544", "html_url": "https://github.com/pytorch/pytorch/pull/5141#issuecomment-364240544", "issue_url": "https://api.github.com/repos/pytorch/pytorch/issues/5141", "id": 364240544, "node_id": "MDEyOklzc3VlQ29tbWVudDM2NDI0MDU0NA==", "user": {"login": "apaszke", "id": 4583066, "node_id": "MDQ6VXNlcjQ1ODMwNjY=", "avatar_url": "https://avatars3.githubusercontent.com/u/4583066?v=4", "gravatar_id": "", "url": "https://api.github.com/users/apaszke", "html_url": "https://github.com/apaszke", "followers_url": "https://api.github.com/users/apaszke/followers", "following_url": "https://api.github.com/users/apaszke/following{/other_user}", "gists_url": "https://api.github.com/users/apaszke/gists{/gist_id}", "starred_url": "https://api.github.com/users/apaszke/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/apaszke/subscriptions", "organizations_url": "https://api.github.com/users/apaszke/orgs", "repos_url": "https://api.github.com/users/apaszke/repos", "events_url": "https://api.github.com/users/apaszke/events{/privacy}", "received_events_url": "https://api.github.com/users/apaszke/received_events", "type": "User", "site_admin": false}, "created_at": "2018-02-08T20:37:03Z", "updated_at": "2018-02-08T20:38:06Z", "author_association": "MEMBER", "body_html": "<p>But what you're doing in here is effectively local value numbering. I don't think we want to make it a responsibility of all our transforms to think whether they are manipulating the IR in a way that preserves this or not. I think this should be done only in the SSA conversion and later discarded.</p>\n<p>I'm not even sure what what our name story currently is (with all the name/uniqueName business). It's already quite complicated, and this would only make matters worse.</p>\n<p>If we implement function application by inlining nodes in the compiler, then it's not an argument to leak those data structures to the outside world.</p>\n<p>I'll leave the decision up to <a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=370202\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/zdevito\">@zdevito</a> though</p>", "body_text": "But what you're doing in here is effectively local value numbering. I don't think we want to make it a responsibility of all our transforms to think whether they are manipulating the IR in a way that preserves this or not. I think this should be done only in the SSA conversion and later discarded.\nI'm not even sure what what our name story currently is (with all the name/uniqueName business). It's already quite complicated, and this would only make matters worse.\nIf we implement function application by inlining nodes in the compiler, then it's not an argument to leak those data structures to the outside world.\nI'll leave the decision up to @zdevito though", "body": "But what you're doing in here is effectively local value numbering. I don't think we want to make it a responsibility of all our transforms to think whether they are manipulating the IR in a way that preserves this or not. I think this should be done only in the SSA conversion and later discarded.\r\n\r\nI'm not even sure what what our name story currently is (with all the name/uniqueName business). It's already quite complicated, and this would only make matters worse.\r\n\r\nIf we implement function application by inlining nodes in the compiler, then it's not an argument to leak those data structures to the outside world.\r\n\r\nI'll leave the decision up to @zdevito though"}