{"url": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/191891415", "pull_request_review_id": 124539732, "id": 191891415, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5MTg5MTQxNQ==", "diff_hunk": "@@ -15,9 +17,42 @@ using namespace torch::autograd::utils;\n \n namespace torch { namespace autograd {\n \n+static PyObject * THPVariable__parse_to(PyObject* module, PyObject* args, PyObject* kwargs)\n+{\n+  HANDLE_TH_ERRORS\n+  auto parsed = parse_to_conversion(args, kwargs);\n+  auto& device = std::get<0>(parsed);\n+  auto& scalarType = std::get<1>(parsed);\n+  auto non_blocking = std::get<2>(parsed);\n+  auto tuple = THPObjectPtr{PyTuple_New(3)};\n+  if (!tuple) throw python_error();\n+  if (device) {\n+    PyTuple_SET_ITEM(tuple.get(), 0, THPDevice_New(*device));\n+  } else {\n+    Py_INCREF(Py_None);\n+    PyTuple_SET_ITEM(tuple.get(), 0, Py_None);\n+  }\n+  if (scalarType) {\n+    PyTuple_SET_ITEM(tuple.get(), 1, torch::autograd::utils::wrap(torch::getDtype(*scalarType)));\n+  } else {\n+    Py_INCREF(Py_None);\n+    PyTuple_SET_ITEM(tuple.get(), 1, Py_None);\n+  }\n+  if (non_blocking) {\n+    Py_INCREF(Py_True);", "path": "tools/autograd/templates/python_nn_functions.cpp", "position": null, "original_position": 35, "commit_id": "036f618a8df265c928ff96d43295df2f9de7141a", "original_commit_id": "5ae8e3ddd9fb04920c2f6d9b184645937269a679", "user": {"login": "gchanan", "id": 3768583, "node_id": "MDQ6VXNlcjM3Njg1ODM=", "avatar_url": "https://avatars2.githubusercontent.com/u/3768583?v=4", "gravatar_id": "", "url": "https://api.github.com/users/gchanan", "html_url": "https://github.com/gchanan", "followers_url": "https://api.github.com/users/gchanan/followers", "following_url": "https://api.github.com/users/gchanan/following{/other_user}", "gists_url": "https://api.github.com/users/gchanan/gists{/gist_id}", "starred_url": "https://api.github.com/users/gchanan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/gchanan/subscriptions", "organizations_url": "https://api.github.com/users/gchanan/orgs", "repos_url": "https://api.github.com/users/gchanan/repos", "events_url": "https://api.github.com/users/gchanan/events{/privacy}", "received_events_url": "https://api.github.com/users/gchanan/received_events", "type": "User", "site_admin": false}, "body": "nit: you could collapse this case using utils::wrap on true/false and get rid of the Py_INCREF.", "created_at": "2018-05-30T19:20:12Z", "updated_at": "2018-11-23T15:44:45Z", "html_url": "https://github.com/pytorch/pytorch/pull/7312#discussion_r191891415", "pull_request_url": "https://api.github.com/repos/pytorch/pytorch/pulls/7312", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/191891415"}, "html": {"href": "https://github.com/pytorch/pytorch/pull/7312#discussion_r191891415"}, "pull_request": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/7312"}}, "body_html": "<p>nit: you could collapse this case using utils::wrap on true/false and get rid of the Py_INCREF.</p>", "body_text": "nit: you could collapse this case using utils::wrap on true/false and get rid of the Py_INCREF."}