{"url": "https://api.github.com/repos/pytorch/pytorch/issues/comments/354541320", "html_url": "https://github.com/pytorch/pytorch/issues/4402#issuecomment-354541320", "issue_url": "https://api.github.com/repos/pytorch/pytorch/issues/4402", "id": 354541320, "node_id": "MDEyOklzc3VlQ29tbWVudDM1NDU0MTMyMA==", "user": {"login": "apaszke", "id": 4583066, "node_id": "MDQ6VXNlcjQ1ODMwNjY=", "avatar_url": "https://avatars3.githubusercontent.com/u/4583066?v=4", "gravatar_id": "", "url": "https://api.github.com/users/apaszke", "html_url": "https://github.com/apaszke", "followers_url": "https://api.github.com/users/apaszke/followers", "following_url": "https://api.github.com/users/apaszke/following{/other_user}", "gists_url": "https://api.github.com/users/apaszke/gists{/gist_id}", "starred_url": "https://api.github.com/users/apaszke/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/apaszke/subscriptions", "organizations_url": "https://api.github.com/users/apaszke/orgs", "repos_url": "https://api.github.com/users/apaszke/repos", "events_url": "https://api.github.com/users/apaszke/events{/privacy}", "received_events_url": "https://api.github.com/users/apaszke/received_events", "type": "User", "site_admin": false}, "created_at": "2017-12-30T11:31:25Z", "updated_at": "2017-12-30T11:31:25Z", "author_association": "MEMBER", "body_html": "<p>Oh my bad. The new definition would be actually much more efficient for in-place. Not sure why I thought differently. Sorry <a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=655866\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/colesbury\">@colesbury</a></p>\n<p><a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=23639302\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/vishwakftw\">@vishwakftw</a> <code>x.reciprocal()</code> is equivalent to <code>1 / x</code>, but more efficient. On the other hand <code>y / x</code> is more efficient than <code>y * x.reciprocal()</code>.</p>", "body_text": "Oh my bad. The new definition would be actually much more efficient for in-place. Not sure why I thought differently. Sorry @colesbury\n@vishwakftw x.reciprocal() is equivalent to 1 / x, but more efficient. On the other hand y / x is more efficient than y * x.reciprocal().", "body": "Oh my bad. The new definition would be actually much more efficient for in-place. Not sure why I thought differently. Sorry @colesbury \r\n\r\n@vishwakftw `x.reciprocal()` is equivalent to `1 / x`, but more efficient. On the other hand `y / x` is more efficient than `y * x.reciprocal()`."}