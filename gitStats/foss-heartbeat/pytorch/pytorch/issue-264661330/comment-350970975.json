{"url": "https://api.github.com/repos/pytorch/pytorch/issues/comments/350970975", "html_url": "https://github.com/pytorch/pytorch/issues/3073#issuecomment-350970975", "issue_url": "https://api.github.com/repos/pytorch/pytorch/issues/3073", "id": 350970975, "node_id": "MDEyOklzc3VlQ29tbWVudDM1MDk3MDk3NQ==", "user": {"login": "juancamilog", "id": 2013726, "node_id": "MDQ6VXNlcjIwMTM3MjY=", "avatar_url": "https://avatars3.githubusercontent.com/u/2013726?v=4", "gravatar_id": "", "url": "https://api.github.com/users/juancamilog", "html_url": "https://github.com/juancamilog", "followers_url": "https://api.github.com/users/juancamilog/followers", "following_url": "https://api.github.com/users/juancamilog/following{/other_user}", "gists_url": "https://api.github.com/users/juancamilog/gists{/gist_id}", "starred_url": "https://api.github.com/users/juancamilog/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/juancamilog/subscriptions", "organizations_url": "https://api.github.com/users/juancamilog/orgs", "repos_url": "https://api.github.com/users/juancamilog/repos", "events_url": "https://api.github.com/users/juancamilog/events{/privacy}", "received_events_url": "https://api.github.com/users/juancamilog/received_events", "type": "User", "site_admin": false}, "created_at": "2017-12-12T07:46:32Z", "updated_at": "2017-12-12T07:56:59Z", "author_association": "NONE", "body_html": "<p>As it is currently implemented, the backward pass is still using a general system solver operation (gesv) which is slower than the equivalent code using trsv (or trsm).</p>\n<p>This is because gesv computes the LU factorization of the input matrix, a step that is unnecessary since we already have the Cholesky factorization from the forward pass.</p>\n<p>But having triangular system solve ops on GPU is not only useful for the backward pass of potrf. This operation appears often when computing the log likelihood objective for fitting gaussian processes, and when using the reparametrization trick with gaussian noise to backpropagate gradients through a covariance matrix.</p>", "body_text": "As it is currently implemented, the backward pass is still using a general system solver operation (gesv) which is slower than the equivalent code using trsv (or trsm).\nThis is because gesv computes the LU factorization of the input matrix, a step that is unnecessary since we already have the Cholesky factorization from the forward pass.\nBut having triangular system solve ops on GPU is not only useful for the backward pass of potrf. This operation appears often when computing the log likelihood objective for fitting gaussian processes, and when using the reparametrization trick with gaussian noise to backpropagate gradients through a covariance matrix.", "body": "As it is currently implemented, the backward pass is still using a general system solver operation (gesv) which is slower than the equivalent code using trsv (or trsm). \r\n\r\nThis is because gesv computes the LU factorization of the input matrix, a step that is unnecessary since we already have the Cholesky factorization from the forward pass.\r\n\r\nBut having triangular system solve ops on GPU is not only useful for the backward pass of potrf. This operation appears often when computing the log likelihood objective for fitting gaussian processes, and when using the reparametrization trick with gaussian noise to backpropagate gradients through a covariance matrix."}