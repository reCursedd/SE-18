{"url": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/171361008", "pull_request_review_id": 100199965, "id": 171361008, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE3MTM2MTAwOA==", "diff_hunk": "@@ -384,35 +390,89 @@ Operation createPythonOperation(PythonOp* op) {\n     size_t next_scalar = 0;\n     size_t next_tensor = 0;\n     HandleBuilder builder(has_handle);\n-    for(auto arg_type : op->cconv) {\n-      if(arg_type == 's') {\n-        py_inputs[i] = py::reinterpret_borrow<py::object>(op->scalar_args[next_scalar++].get());\n-      } else if(arg_type == 't') {\n-        py_inputs[i] = py::reinterpret_steal<py::object>(THPVariable_Wrap(\n-          builder.addInput(std::move(fromLast(stack, num_inputs - next_tensor)), op->var_flags.at(next_tensor))));\n-        next_tensor++;\n+    if (unpack_variables) {\n+      for (auto arg_type : op->cconv) {\n+        if (arg_type == 's') {\n+          py_inputs[i] = py::reinterpret_borrow<py::object>(\n+              op->scalar_args[next_scalar++].get());\n+        } else if (arg_type == 't') {\n+          py_inputs[i] = py::reinterpret_steal<py::object>(\n+              THPVariable_Wrap(builder.addInput(\n+                  std::move(fromLast(stack, num_inputs - next_tensor)),\n+                  op->var_flags.at(next_tensor))));", "path": "torch/csrc/jit/interpreter.cpp", "position": 42, "original_position": 37, "commit_id": "7b960c17637717b61803232353e71d8c33ab1dd5", "original_commit_id": "0087e81bf953a39e9917132e7218b138a8d3234e", "user": {"login": "zdevito", "id": 370202, "node_id": "MDQ6VXNlcjM3MDIwMg==", "avatar_url": "https://avatars0.githubusercontent.com/u/370202?v=4", "gravatar_id": "", "url": "https://api.github.com/users/zdevito", "html_url": "https://github.com/zdevito", "followers_url": "https://api.github.com/users/zdevito/followers", "following_url": "https://api.github.com/users/zdevito/following{/other_user}", "gists_url": "https://api.github.com/users/zdevito/gists{/gist_id}", "starred_url": "https://api.github.com/users/zdevito/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/zdevito/subscriptions", "organizations_url": "https://api.github.com/users/zdevito/orgs", "repos_url": "https://api.github.com/users/zdevito/repos", "events_url": "https://api.github.com/users/zdevito/events{/privacy}", "received_events_url": "https://api.github.com/users/zdevito/received_events", "type": "User", "site_admin": false}, "body": "The names for the flags are weird right now `unpack_variables` should probably be called `tracing_autograd_python_function`. Then `values_are_variables` determines if the inputs to the python function are already variables or if they are tensors. Because of optimization passes, it is possible that the graph executor has decided to unwrap variables to do more aggressive optimizations. In that case, there may be a call to a python op inside of one of these blocks, and we can see `values_are_variables==false`. This requires wrapping/unwrapping around the call.", "created_at": "2018-02-28T19:37:05Z", "updated_at": "2018-11-23T15:40:08Z", "html_url": "https://github.com/pytorch/pytorch/pull/5445#discussion_r171361008", "pull_request_url": "https://api.github.com/repos/pytorch/pytorch/pulls/5445", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/171361008"}, "html": {"href": "https://github.com/pytorch/pytorch/pull/5445#discussion_r171361008"}, "pull_request": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/5445"}}, "body_html": "<p>The names for the flags are weird right now <code>unpack_variables</code> should probably be called <code>tracing_autograd_python_function</code>. Then <code>values_are_variables</code> determines if the inputs to the python function are already variables or if they are tensors. Because of optimization passes, it is possible that the graph executor has decided to unwrap variables to do more aggressive optimizations. In that case, there may be a call to a python op inside of one of these blocks, and we can see <code>values_are_variables==false</code>. This requires wrapping/unwrapping around the call.</p>", "body_text": "The names for the flags are weird right now unpack_variables should probably be called tracing_autograd_python_function. Then values_are_variables determines if the inputs to the python function are already variables or if they are tensors. Because of optimization passes, it is possible that the graph executor has decided to unwrap variables to do more aggressive optimizations. In that case, there may be a call to a python op inside of one of these blocks, and we can see values_are_variables==false. This requires wrapping/unwrapping around the call.", "in_reply_to_id": 171202389}