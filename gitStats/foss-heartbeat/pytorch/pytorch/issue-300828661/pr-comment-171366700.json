{"url": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/171366700", "pull_request_review_id": 100206567, "id": 171366700, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE3MTM2NjcwMA==", "diff_hunk": "@@ -459,16 +459,33 @@ def trace(*args, **kwargs):\n     return lambda func: torch._C.GraphExecutor(func, args, kwargs.pop('optimize', True))\n \n \n+def createResolutionCallback(frame_id=2):\n+    frame = inspect.stack()[frame_id][0]\n+\n+    def env(key):\n+        if key not in frame.f_locals:\n+            try:\n+                return frame.f_globals[key]\n+            except KeyError:\n+                return None\n+        else:\n+            return frame.f_locals[key]", "path": "torch/jit/__init__.py", "position": null, "original_position": 14, "commit_id": "7b960c17637717b61803232353e71d8c33ab1dd5", "original_commit_id": "0087e81bf953a39e9917132e7218b138a8d3234e", "user": {"login": "apaszke", "id": 4583066, "node_id": "MDQ6VXNlcjQ1ODMwNjY=", "avatar_url": "https://avatars3.githubusercontent.com/u/4583066?v=4", "gravatar_id": "", "url": "https://api.github.com/users/apaszke", "html_url": "https://github.com/apaszke", "followers_url": "https://api.github.com/users/apaszke/followers", "following_url": "https://api.github.com/users/apaszke/following{/other_user}", "gists_url": "https://api.github.com/users/apaszke/gists{/gist_id}", "starred_url": "https://api.github.com/users/apaszke/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/apaszke/subscriptions", "organizations_url": "https://api.github.com/users/apaszke/orgs", "repos_url": "https://api.github.com/users/apaszke/repos", "events_url": "https://api.github.com/users/apaszke/events{/privacy}", "received_events_url": "https://api.github.com/users/apaszke/received_events", "type": "User", "site_admin": false}, "body": "I'm pretty sure you have to traverse the stack. This is what I'm getting from a test script I wrote a while back:\r\n```python\r\nimport inspect                                \r\n                                              \r\ndef show_me(name):                            \r\n    stack = inspect.stack()                   \r\n    for frame in stack:                       \r\n        print(list(frame[0].f_locals.keys())) \r\n                                              \r\ndef f():                                      \r\n    x = 2                                     \r\n    def g():                                  \r\n        def h():                              \r\n            show_me('x')                      \r\n        h()                                   \r\n    g()                                       \r\n    print(x)                                  \r\nf()                                           \r\n```\r\ngives:\r\n```\r\n['frame', 'stack', 'name']                                                                           \r\n[]                                                                                                   \r\n['h']                                                                                                \r\n['g', 'x']                                                                                           \r\n['__name__', '__doc__', '__package__', '__loader__', '__spec__', '__annotations__', '__builtins__', '\r\n__file__', '__cached__', 'inspect', 'show_me', 'f']                                                  \r\n```", "created_at": "2018-02-28T19:56:37Z", "updated_at": "2018-11-23T15:40:09Z", "html_url": "https://github.com/pytorch/pytorch/pull/5445#discussion_r171366700", "pull_request_url": "https://api.github.com/repos/pytorch/pytorch/pulls/5445", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/171366700"}, "html": {"href": "https://github.com/pytorch/pytorch/pull/5445#discussion_r171366700"}, "pull_request": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/5445"}}, "body_html": "<p>I'm pretty sure you have to traverse the stack. This is what I'm getting from a test script I wrote a while back:</p>\n<div class=\"highlight highlight-source-python\"><pre><span class=\"pl-k\">import</span> inspect                                \n                                              \n<span class=\"pl-k\">def</span> <span class=\"pl-en\">show_me</span>(<span class=\"pl-smi\">name</span>):                            \n    stack <span class=\"pl-k\">=</span> inspect.stack()                   \n    <span class=\"pl-k\">for</span> frame <span class=\"pl-k\">in</span> stack:                       \n        <span class=\"pl-c1\">print</span>(<span class=\"pl-c1\">list</span>(frame[<span class=\"pl-c1\">0</span>].f_locals.keys())) \n                                              \n<span class=\"pl-k\">def</span> <span class=\"pl-en\">f</span>():                                      \n    x <span class=\"pl-k\">=</span> <span class=\"pl-c1\">2</span>                                     \n    <span class=\"pl-k\">def</span> <span class=\"pl-en\">g</span>():                                  \n        <span class=\"pl-k\">def</span> <span class=\"pl-en\">h</span>():                              \n            show_me(<span class=\"pl-s\"><span class=\"pl-pds\">'</span>x<span class=\"pl-pds\">'</span></span>)                      \n        h()                                   \n    g()                                       \n    <span class=\"pl-c1\">print</span>(x)                                  \nf()                                           </pre></div>\n<p>gives:</p>\n<pre><code>['frame', 'stack', 'name']                                                                           \n[]                                                                                                   \n['h']                                                                                                \n['g', 'x']                                                                                           \n['__name__', '__doc__', '__package__', '__loader__', '__spec__', '__annotations__', '__builtins__', '\n__file__', '__cached__', 'inspect', 'show_me', 'f']                                                  \n</code></pre>", "body_text": "I'm pretty sure you have to traverse the stack. This is what I'm getting from a test script I wrote a while back:\nimport inspect                                \n                                              \ndef show_me(name):                            \n    stack = inspect.stack()                   \n    for frame in stack:                       \n        print(list(frame[0].f_locals.keys())) \n                                              \ndef f():                                      \n    x = 2                                     \n    def g():                                  \n        def h():                              \n            show_me('x')                      \n        h()                                   \n    g()                                       \n    print(x)                                  \nf()                                           \ngives:\n['frame', 'stack', 'name']                                                                           \n[]                                                                                                   \n['h']                                                                                                \n['g', 'x']                                                                                           \n['__name__', '__doc__', '__package__', '__loader__', '__spec__', '__annotations__', '__builtins__', '\n__file__', '__cached__', 'inspect', 'show_me', 'f']", "in_reply_to_id": 171186971}