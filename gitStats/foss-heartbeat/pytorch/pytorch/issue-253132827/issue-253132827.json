{"url": "https://api.github.com/repos/pytorch/pytorch/issues/2545", "repository_url": "https://api.github.com/repos/pytorch/pytorch", "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/2545/labels{/name}", "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/2545/comments", "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/2545/events", "html_url": "https://github.com/pytorch/pytorch/issues/2545", "id": 253132827, "node_id": "MDU6SXNzdWUyNTMxMzI4Mjc=", "number": 2545, "title": "Counter-intuitive Patience & Cooldown of ReduceLROnPlateau", "user": {"login": "Jiaming-Liu", "id": 16099575, "node_id": "MDQ6VXNlcjE2MDk5NTc1", "avatar_url": "https://avatars3.githubusercontent.com/u/16099575?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Jiaming-Liu", "html_url": "https://github.com/Jiaming-Liu", "followers_url": "https://api.github.com/users/Jiaming-Liu/followers", "following_url": "https://api.github.com/users/Jiaming-Liu/following{/other_user}", "gists_url": "https://api.github.com/users/Jiaming-Liu/gists{/gist_id}", "starred_url": "https://api.github.com/users/Jiaming-Liu/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Jiaming-Liu/subscriptions", "organizations_url": "https://api.github.com/users/Jiaming-Liu/orgs", "repos_url": "https://api.github.com/users/Jiaming-Liu/repos", "events_url": "https://api.github.com/users/Jiaming-Liu/events{/privacy}", "received_events_url": "https://api.github.com/users/Jiaming-Liu/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 443483881, "node_id": "MDU6TGFiZWw0NDM0ODM4ODE=", "url": "https://api.github.com/repos/pytorch/pytorch/labels/todo", "name": "todo", "color": "c2e0c6", "default": false}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2017-08-27T00:48:32Z", "updated_at": "2018-06-11T18:17:12Z", "closed_at": null, "author_association": "CONTRIBUTOR", "body_html": "<p><a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load issue title\" data-id=\"224620853\" data-permission-text=\"Issue title is private\" data-url=\"https://github.com/pytorch/pytorch/issues/1370\" data-hovercard-type=\"pull_request\" data-hovercard-url=\"/pytorch/pytorch/pull/1370/hovercard\" href=\"https://github.com/pytorch/pytorch/pull/1370\">#1370</a> provides a LR scheduler that reduces LR when the validation metrics stops improving.</p>\n<p>It works like this: when <code>patience=2, cooldown=0</code>,</p>\n<div class=\"highlight highlight-source-python\"><pre><span class=\"pl-k\">import</span> torch\n<span class=\"pl-k\">from</span> torch.optim.lr_scheduler <span class=\"pl-k\">import</span> ReduceLROnPlateau\nn<span class=\"pl-k\">=</span>torch.nn.Linear(<span class=\"pl-c1\">1</span>,<span class=\"pl-c1\">1</span>)\nopt <span class=\"pl-k\">=</span> torch.optim.SGD(n.parameters(), <span class=\"pl-v\">lr</span><span class=\"pl-k\">=</span><span class=\"pl-c1\">0.1</span>)\nrp <span class=\"pl-k\">=</span> ReduceLROnPlateau(opt, <span class=\"pl-v\">patience</span><span class=\"pl-k\">=</span><span class=\"pl-c1\">2</span>, <span class=\"pl-v\">cooldown</span><span class=\"pl-k\">=</span><span class=\"pl-c1\">0</span>)\n<span class=\"pl-k\">for</span> _ <span class=\"pl-k\">in</span> <span class=\"pl-c1\">range</span>(<span class=\"pl-c1\">10</span>):\n    <span class=\"pl-c1\">print</span>(opt.param_groups[<span class=\"pl-c1\">0</span>][<span class=\"pl-s\"><span class=\"pl-pds\">'</span>lr<span class=\"pl-pds\">'</span></span>])\n    <span class=\"pl-c\"><span class=\"pl-c\">#</span> train_one_epoch(...)</span>\n    <span class=\"pl-c\"><span class=\"pl-c\">#</span> metrics = validate(...)</span>\n    rp.step(<span class=\"pl-v\">metrics</span><span class=\"pl-k\">=</span><span class=\"pl-c1\">0</span>) <span class=\"pl-c\"><span class=\"pl-c\">#</span> metrics \"stops improving\" after the first epoch</span></pre></div>\n<p>Output LR for each epoch:</p>\n<pre><code>0.1\n0.1\n0.1\n0.1\n0.01\n0.01\n0.01\n0.001\n0.001\n0.001\n\n</code></pre>\n<p>when <code>patience=2, cooldown=1</code>,</p>\n<pre><code>0.1\n0.1\n0.1\n0.1\n0.01\n0.01\n0.01\n0.01\n0.001\n0.001\n</code></pre>\n<p>IMO the two examples' outcomes should instead match <code>patience=3, cooldown=0</code> and <code>patience=3, cooldown=1</code> respectively. Any idea?</p>\n<p>Edited: change the position of <code>print</code></p>", "body_text": "#1370 provides a LR scheduler that reduces LR when the validation metrics stops improving.\nIt works like this: when patience=2, cooldown=0,\nimport torch\nfrom torch.optim.lr_scheduler import ReduceLROnPlateau\nn=torch.nn.Linear(1,1)\nopt = torch.optim.SGD(n.parameters(), lr=0.1)\nrp = ReduceLROnPlateau(opt, patience=2, cooldown=0)\nfor _ in range(10):\n    print(opt.param_groups[0]['lr'])\n    # train_one_epoch(...)\n    # metrics = validate(...)\n    rp.step(metrics=0) # metrics \"stops improving\" after the first epoch\nOutput LR for each epoch:\n0.1\n0.1\n0.1\n0.1\n0.01\n0.01\n0.01\n0.001\n0.001\n0.001\n\n\nwhen patience=2, cooldown=1,\n0.1\n0.1\n0.1\n0.1\n0.01\n0.01\n0.01\n0.01\n0.001\n0.001\n\nIMO the two examples' outcomes should instead match patience=3, cooldown=0 and patience=3, cooldown=1 respectively. Any idea?\nEdited: change the position of print", "body": "https://github.com/pytorch/pytorch/pull/1370 provides a LR scheduler that reduces LR when the validation metrics stops improving. \r\n\r\nIt works like this: when ```patience=2, cooldown=0```,\r\n``` Python \r\nimport torch\r\nfrom torch.optim.lr_scheduler import ReduceLROnPlateau\r\nn=torch.nn.Linear(1,1)\r\nopt = torch.optim.SGD(n.parameters(), lr=0.1)\r\nrp = ReduceLROnPlateau(opt, patience=2, cooldown=0)\r\nfor _ in range(10):\r\n    print(opt.param_groups[0]['lr'])\r\n    # train_one_epoch(...)\r\n    # metrics = validate(...)\r\n    rp.step(metrics=0) # metrics \"stops improving\" after the first epoch\r\n```\r\n\r\nOutput LR for each epoch:\r\n```\r\n0.1\r\n0.1\r\n0.1\r\n0.1\r\n0.01\r\n0.01\r\n0.01\r\n0.001\r\n0.001\r\n0.001\r\n\r\n```\r\n\r\nwhen `patience=2, cooldown=1`,\r\n```\r\n0.1\r\n0.1\r\n0.1\r\n0.1\r\n0.01\r\n0.01\r\n0.01\r\n0.01\r\n0.001\r\n0.001\r\n```\r\n\r\nIMO the two examples' outcomes should instead match `patience=3, cooldown=0` and `patience=3, cooldown=1` respectively. Any idea?\r\n\r\nEdited: change the position of `print` "}