{"url": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/219986766", "pull_request_review_id": 158291448, "id": 219986766, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIxOTk4Njc2Ng==", "diff_hunk": "@@ -59,6 +62,38 @@ std::shared_ptr<SugaredValue> toSugaredValue(\n     bool is_constant = false,\n     bool is_submodule = false);\n \n+Resolver pythonResolver(ResolutionCallback rcb) {\n+  return [=](const std::string& name,\n+             Method& m,\n+             const SourceRange& loc) -> std::shared_ptr<SugaredValue> {\n+    AutoGIL ag;\n+    py::object obj = rcb(name);\n+    if (obj.is(py::none())) {\n+      return nullptr;\n+    }\n+    return toSugaredValue(obj, m, loc);\n+  };\n+}\n+\n+static void registerWeakOperator(const Node* node, py::function func) {\n+  auto name = node->kind();\n+  py::tuple tuple = py::cast<py::tuple>(compile_func_(func));\n+  const Def& def = py::cast<const Def&>(tuple[0]);\n+  ResolutionCallback rcb = py::cast<ResolutionCallback>(tuple[1]);\n+  auto m = std::make_shared<Module>();\n+  defineMethodsInModule(*m, {def}, {pythonResolver(rcb)}, nullptr);", "path": "torch/csrc/jit/script/init.cpp", "position": null, "original_position": 40, "commit_id": "d356b035e17caebb2c5677087164bc339641fa7e", "original_commit_id": "e0f50ab8a3b44ebebe7679499e3bd0691e7ba7a2", "user": {"login": "zdevito", "id": 370202, "node_id": "MDQ6VXNlcjM3MDIwMg==", "avatar_url": "https://avatars0.githubusercontent.com/u/370202?v=4", "gravatar_id": "", "url": "https://api.github.com/users/zdevito", "html_url": "https://github.com/zdevito", "followers_url": "https://api.github.com/users/zdevito/followers", "following_url": "https://api.github.com/users/zdevito/following{/other_user}", "gists_url": "https://api.github.com/users/zdevito/gists{/gist_id}", "starred_url": "https://api.github.com/users/zdevito/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/zdevito/subscriptions", "organizations_url": "https://api.github.com/users/zdevito/orgs", "repos_url": "https://api.github.com/users/zdevito/repos", "events_url": "https://api.github.com/users/zdevito/events{/privacy}", "received_events_url": "https://api.github.com/users/zdevito/received_events", "type": "User", "site_admin": false}, "body": "This code should use the same pathway as the normal script function. Otherwise future changes won't get put in both places.", "created_at": "2018-09-24T20:58:19Z", "updated_at": "2018-11-23T15:51:50Z", "html_url": "https://github.com/pytorch/pytorch/pull/11963#discussion_r219986766", "pull_request_url": "https://api.github.com/repos/pytorch/pytorch/pulls/11963", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/219986766"}, "html": {"href": "https://github.com/pytorch/pytorch/pull/11963#discussion_r219986766"}, "pull_request": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/11963"}}, "body_html": "<p>This code should use the same pathway as the normal script function. Otherwise future changes won't get put in both places.</p>", "body_text": "This code should use the same pathway as the normal script function. Otherwise future changes won't get put in both places."}