{"url": "https://api.github.com/repos/pytorch/pytorch/issues/comments/384765111", "html_url": "https://github.com/pytorch/pytorch/issues/7001#issuecomment-384765111", "issue_url": "https://api.github.com/repos/pytorch/pytorch/issues/7001", "id": 384765111, "node_id": "MDEyOklzc3VlQ29tbWVudDM4NDc2NTExMQ==", "user": {"login": "apaszke", "id": 4583066, "node_id": "MDQ6VXNlcjQ1ODMwNjY=", "avatar_url": "https://avatars3.githubusercontent.com/u/4583066?v=4", "gravatar_id": "", "url": "https://api.github.com/users/apaszke", "html_url": "https://github.com/apaszke", "followers_url": "https://api.github.com/users/apaszke/followers", "following_url": "https://api.github.com/users/apaszke/following{/other_user}", "gists_url": "https://api.github.com/users/apaszke/gists{/gist_id}", "starred_url": "https://api.github.com/users/apaszke/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/apaszke/subscriptions", "organizations_url": "https://api.github.com/users/apaszke/orgs", "repos_url": "https://api.github.com/users/apaszke/repos", "events_url": "https://api.github.com/users/apaszke/events{/privacy}", "received_events_url": "https://api.github.com/users/apaszke/received_events", "type": "User", "site_admin": false}, "created_at": "2018-04-26T19:39:16Z", "updated_at": "2018-04-26T19:39:22Z", "author_association": "MEMBER", "body_html": "<p>Hmmm we don't really do anything special. I think the errors are not so much about releasing resources in destructors, but about releasing them only once static objects are destructed (this happens after the driver is unloaded and causes an error). However, we do use a <a href=\"https://github.com/pytorch/pytorch/blob/master/torch/csrc/jit/fusion_compiler.cpp#L799\"><code>static FusionCompiler</code></a> in our code and it has been ok so far.</p>\n<p>I think everything should be fine if only you moved the actual map into the body of a function (as a non-static variable), and then you can keep a</p>\n<div class=\"highlight highlight-source-c++\"><pre><span class=\"pl-k\">static</span> unordered_map&lt;<span class=\"pl-c1\">size_t</span>,shared_ptr&lt;FusionCompiler&gt;&gt;* map_ptr;</pre></div>\n<p>if you don't want to pass it around.</p>", "body_text": "Hmmm we don't really do anything special. I think the errors are not so much about releasing resources in destructors, but about releasing them only once static objects are destructed (this happens after the driver is unloaded and causes an error). However, we do use a static FusionCompiler in our code and it has been ok so far.\nI think everything should be fine if only you moved the actual map into the body of a function (as a non-static variable), and then you can keep a\nstatic unordered_map<size_t,shared_ptr<FusionCompiler>>* map_ptr;\nif you don't want to pass it around.", "body": "Hmmm we don't really do anything special. I think the errors are not so much about releasing resources in destructors, but about releasing them only once static objects are destructed (this happens after the driver is unloaded and causes an error). However, we do use a [`static FusionCompiler`](https://github.com/pytorch/pytorch/blob/master/torch/csrc/jit/fusion_compiler.cpp#L799) in our code and it has been ok so far.\r\n\r\nI think everything should be fine if only you moved the actual map into the body of a function (as a non-static variable), and then you can keep a\r\n```cpp\r\nstatic unordered_map<size_t,shared_ptr<FusionCompiler>>* map_ptr;\r\n```\r\nif you don't want to pass it around."}