{"url": "https://api.github.com/repos/pytorch/pytorch/issues/5472", "repository_url": "https://api.github.com/repos/pytorch/pytorch", "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/5472/labels{/name}", "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/5472/comments", "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/5472/events", "html_url": "https://github.com/pytorch/pytorch/issues/5472", "id": 301186282, "node_id": "MDU6SXNzdWUzMDExODYyODI=", "number": 5472, "title": "Issue when using padding token as input to the network", "user": {"login": "shagunsodhani", "id": 1321193, "node_id": "MDQ6VXNlcjEzMjExOTM=", "avatar_url": "https://avatars0.githubusercontent.com/u/1321193?v=4", "gravatar_id": "", "url": "https://api.github.com/users/shagunsodhani", "html_url": "https://github.com/shagunsodhani", "followers_url": "https://api.github.com/users/shagunsodhani/followers", "following_url": "https://api.github.com/users/shagunsodhani/following{/other_user}", "gists_url": "https://api.github.com/users/shagunsodhani/gists{/gist_id}", "starred_url": "https://api.github.com/users/shagunsodhani/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/shagunsodhani/subscriptions", "organizations_url": "https://api.github.com/users/shagunsodhani/orgs", "repos_url": "https://api.github.com/users/shagunsodhani/repos", "events_url": "https://api.github.com/users/shagunsodhani/events{/privacy}", "received_events_url": "https://api.github.com/users/shagunsodhani/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": {"login": "ailzhang", "id": 5248122, "node_id": "MDQ6VXNlcjUyNDgxMjI=", "avatar_url": "https://avatars2.githubusercontent.com/u/5248122?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ailzhang", "html_url": "https://github.com/ailzhang", "followers_url": "https://api.github.com/users/ailzhang/followers", "following_url": "https://api.github.com/users/ailzhang/following{/other_user}", "gists_url": "https://api.github.com/users/ailzhang/gists{/gist_id}", "starred_url": "https://api.github.com/users/ailzhang/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ailzhang/subscriptions", "organizations_url": "https://api.github.com/users/ailzhang/orgs", "repos_url": "https://api.github.com/users/ailzhang/repos", "events_url": "https://api.github.com/users/ailzhang/events{/privacy}", "received_events_url": "https://api.github.com/users/ailzhang/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "ailzhang", "id": 5248122, "node_id": "MDQ6VXNlcjUyNDgxMjI=", "avatar_url": "https://avatars2.githubusercontent.com/u/5248122?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ailzhang", "html_url": "https://github.com/ailzhang", "followers_url": "https://api.github.com/users/ailzhang/followers", "following_url": "https://api.github.com/users/ailzhang/following{/other_user}", "gists_url": "https://api.github.com/users/ailzhang/gists{/gist_id}", "starred_url": "https://api.github.com/users/ailzhang/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ailzhang/subscriptions", "organizations_url": "https://api.github.com/users/ailzhang/orgs", "repos_url": "https://api.github.com/users/ailzhang/repos", "events_url": "https://api.github.com/users/ailzhang/events{/privacy}", "received_events_url": "https://api.github.com/users/ailzhang/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 1, "created_at": "2018-02-28T21:16:26Z", "updated_at": "2018-04-03T19:53:44Z", "closed_at": "2018-04-03T19:53:44Z", "author_association": "CONTRIBUTOR", "body_html": "<p>I have a straightforward use case. Given a token (or word), lookup the embedding of the word, pass that through a linear layer and perform L2 regression. If the token corresponds to the <code>padding_idx</code> of the embedding layer, <code>loss.backward()</code> throws an error saying <code>RuntimeError: invalid argument 3: Index is supposed to be a vector at /Users/soumith/code/builder/wheel/pytorch-src/torch/lib/TH/generic/THTensorMath.c:248</code></p>\n<ul>\n<li>OS: macOS High Sierra</li>\n<li>PyTorch version: 0.3.1</li>\n<li>How you installed PyTorch (conda, pip, source): Tried both conda and pip</li>\n<li>Python version: 3.6.4</li>\n<li>CUDA/cuDNN version: CPU</li>\n<li>GPU models and configuration: NA</li>\n<li>GCC version (if compiling from source): NA</li>\n<li>A script to reproduce the bug: <a href=\"https://gist.github.com/shagunsodhani/4b043d897a7d39903ae5e396994e9c84\">Available here</a></li>\n</ul>", "body_text": "I have a straightforward use case. Given a token (or word), lookup the embedding of the word, pass that through a linear layer and perform L2 regression. If the token corresponds to the padding_idx of the embedding layer, loss.backward() throws an error saying RuntimeError: invalid argument 3: Index is supposed to be a vector at /Users/soumith/code/builder/wheel/pytorch-src/torch/lib/TH/generic/THTensorMath.c:248\n\nOS: macOS High Sierra\nPyTorch version: 0.3.1\nHow you installed PyTorch (conda, pip, source): Tried both conda and pip\nPython version: 3.6.4\nCUDA/cuDNN version: CPU\nGPU models and configuration: NA\nGCC version (if compiling from source): NA\nA script to reproduce the bug: Available here", "body": "I have a straightforward use case. Given a token (or word), lookup the embedding of the word, pass that through a linear layer and perform L2 regression. If the token corresponds to the `padding_idx` of the embedding layer, `loss.backward()` throws an error saying `RuntimeError: invalid argument 3: Index is supposed to be a vector at /Users/soumith/code/builder/wheel/pytorch-src/torch/lib/TH/generic/THTensorMath.c:248`\r\n\r\n- OS: macOS High Sierra\r\n- PyTorch version: 0.3.1\r\n- How you installed PyTorch (conda, pip, source): Tried both conda and pip\r\n- Python version: 3.6.4\r\n- CUDA/cuDNN version: CPU\r\n- GPU models and configuration: NA\r\n- GCC version (if compiling from source): NA\r\n- A script to reproduce the bug: [Available here](https://gist.github.com/shagunsodhani/4b043d897a7d39903ae5e396994e9c84)\r\n\r\n"}