{"url": "https://api.github.com/repos/pytorch/pytorch/issues/comments/345881622", "html_url": "https://github.com/pytorch/pytorch/pull/3435#issuecomment-345881622", "issue_url": "https://api.github.com/repos/pytorch/pytorch/issues/3435", "id": 345881622, "node_id": "MDEyOklzc3VlQ29tbWVudDM0NTg4MTYyMg==", "user": {"login": "teng-li", "id": 8120856, "node_id": "MDQ6VXNlcjgxMjA4NTY=", "avatar_url": "https://avatars2.githubusercontent.com/u/8120856?v=4", "gravatar_id": "", "url": "https://api.github.com/users/teng-li", "html_url": "https://github.com/teng-li", "followers_url": "https://api.github.com/users/teng-li/followers", "following_url": "https://api.github.com/users/teng-li/following{/other_user}", "gists_url": "https://api.github.com/users/teng-li/gists{/gist_id}", "starred_url": "https://api.github.com/users/teng-li/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/teng-li/subscriptions", "organizations_url": "https://api.github.com/users/teng-li/orgs", "repos_url": "https://api.github.com/users/teng-li/repos", "events_url": "https://api.github.com/users/teng-li/events{/privacy}", "received_events_url": "https://api.github.com/users/teng-li/received_events", "type": "User", "site_admin": false}, "created_at": "2017-11-21T00:59:12Z", "updated_at": "2017-11-21T01:24:05Z", "author_association": "CONTRIBUTOR", "body_html": "<p><a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=22205833\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/csarofeen\">@csarofeen</a> Will do. I will send you later.<br>\n<a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=4583066\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/apaszke\">@apaszke</a> Made the simplest change to distributed.py with a single thread, which actually gives the best performance for ImageNet on DGX1 with very good scalability. Now the basic distributed data parallel model works with NCCL2 backend.</p>", "body_text": "@csarofeen Will do. I will send you later.\n@apaszke Made the simplest change to distributed.py with a single thread, which actually gives the best performance for ImageNet on DGX1 with very good scalability. Now the basic distributed data parallel model works with NCCL2 backend.", "body": "@csarofeen Will do. I will send you later.\r\n@apaszke Made the simplest change to distributed.py with a single thread, which actually gives the best performance for ImageNet on DGX1 with very good scalability. Now the basic distributed data parallel model works with NCCL2 backend. "}