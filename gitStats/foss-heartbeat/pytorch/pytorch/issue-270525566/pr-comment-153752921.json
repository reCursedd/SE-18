{"url": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/153752921", "pull_request_review_id": 79804984, "id": 153752921, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE1Mzc1MjkyMQ==", "diff_hunk": "@@ -338,6 +367,271 @@ PyObject* THDPModule_recv(PyObject *_unused, PyObject *args)\n   END_HANDLE_TH_ERRORS\n }\n \n+\n+PyObject* THDPModule_allReduceMultiGPU(PyObject *_unused, PyObject *args)\n+{\n+  HANDLE_TH_ERRORS\n+  std::vector<at::Tensor> descriptors;\n+  Py_ssize_t tmp_length;\n+  std::size_t length;\n+  THDGroup group;\n+  THDReduceOp op;\n+  PyObject* sequence;\n+\n+  if (PyTuple_GET_SIZE(args) != 3) {\n+    goto invalid_arguments;\n+  }\n+\n+  if (!PySequence_Check(PyTuple_GET_ITEM(args, 0))) {\n+    goto invalid_arguments;\n+  }\n+\n+  sequence = PySequence_Fast(PyTuple_GET_ITEM(args, 0), nullptr);", "path": "torch/csrc/distributed/Module.cpp", "position": null, "original_position": 77, "commit_id": "9400fd54da0d3b3a27b93cc4af8bb4c7a29b47d2", "original_commit_id": "e857ec4d3bb1d863f51ed4c45a8668ad08e4d679", "user": {"login": "apaszke", "id": 4583066, "node_id": "MDQ6VXNlcjQ1ODMwNjY=", "avatar_url": "https://avatars3.githubusercontent.com/u/4583066?v=4", "gravatar_id": "", "url": "https://api.github.com/users/apaszke", "html_url": "https://github.com/apaszke", "followers_url": "https://api.github.com/users/apaszke/followers", "following_url": "https://api.github.com/users/apaszke/following{/other_user}", "gists_url": "https://api.github.com/users/apaszke/gists{/gist_id}", "starred_url": "https://api.github.com/users/apaszke/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/apaszke/subscriptions", "organizations_url": "https://api.github.com/users/apaszke/orgs", "repos_url": "https://api.github.com/users/apaszke/repos", "events_url": "https://api.github.com/users/apaszke/events{/privacy}", "received_events_url": "https://api.github.com/users/apaszke/received_events", "type": "User", "site_admin": false}, "body": "This returns a new reference, so you will leak memory if you don't decref it. That's why I suggested using `THPObjectPtr`, because it will do it for you automatically (even in case of any errors).", "created_at": "2017-11-29T10:51:12Z", "updated_at": "2018-11-23T15:36:56Z", "html_url": "https://github.com/pytorch/pytorch/pull/3435#discussion_r153752921", "pull_request_url": "https://api.github.com/repos/pytorch/pytorch/pulls/3435", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/153752921"}, "html": {"href": "https://github.com/pytorch/pytorch/pull/3435#discussion_r153752921"}, "pull_request": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/3435"}}, "body_html": "<p>This returns a new reference, so you will leak memory if you don't decref it. That's why I suggested using <code>THPObjectPtr</code>, because it will do it for you automatically (even in case of any errors).</p>", "body_text": "This returns a new reference, so you will leak memory if you don't decref it. That's why I suggested using THPObjectPtr, because it will do it for you automatically (even in case of any errors)."}