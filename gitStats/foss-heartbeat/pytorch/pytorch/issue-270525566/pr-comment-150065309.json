{"url": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/150065309", "pull_request_review_id": 75557806, "id": 150065309, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE1MDA2NTMwOQ==", "diff_hunk": "@@ -0,0 +1,731 @@\n+#include \"../Cuda.hpp\"\n+#include \"../../../csrc/utils/auto_gpu.h\"\n+#include \"DataChannelNccl.hpp\"\n+#include \"DataChannelUtils.hpp\"\n+\n+#include <cuda.h>\n+#include <THC/THC.h>\n+\n+#include <unistd.h>\n+\n+#include <cstdint>\n+#include <stdexcept>\n+#include <unordered_set>\n+#include <sstream>\n+\n+namespace thd {\n+\n+namespace {\n+\n+\n+std::unordered_map<THDReduceOp, ncclRedOp_t> ncclOp = {\n+  {THDReduceOp::THDReduceMIN, ncclMin},\n+  {THDReduceOp::THDReduceMAX, ncclMax},\n+  {THDReduceOp::THDReduceSUM, ncclSum},\n+  {THDReduceOp::THDReducePRODUCT, ncclProd},\n+};\n+\n+\n+std::unordered_map<at::ScalarType, ncclDataType_t> ncclDatatype = {\n+  {at::kChar, ncclInt8},\n+  {at::kByte, ncclUint8},\n+  {at::kFloat, ncclFloat},\n+  {at::kDouble, ncclDouble},\n+  {at::kInt, ncclInt32},\n+  {at::kLong, ncclInt64},\n+};\n+\n+\n+// Helper function that gets the data type and issues error if not supported\n+static ncclDataType_t _getNcclDataType(at::ScalarType type) {\n+  if (ncclDatatype.find(type) == ncclDatatype.end()) {\n+    throw std::runtime_error(\"Unsupported data type for NCCL\");\n+  }\n+  return ncclDatatype[type];\n+}\n+\n+\n+// Helper function that gets the device list to determine the CUDA devices\n+std::vector<int> getDevicesList(const std::string& deviceSeq) {", "path": "torch/lib/THD/base/data_channels/DataChannelNccl.cpp", "position": 50, "original_position": 49, "commit_id": "9400fd54da0d3b3a27b93cc4af8bb4c7a29b47d2", "original_commit_id": "18f92006e8b7b6efff22489a775eb1941e0091e9", "user": {"login": "teng-li", "id": 8120856, "node_id": "MDQ6VXNlcjgxMjA4NTY=", "avatar_url": "https://avatars2.githubusercontent.com/u/8120856?v=4", "gravatar_id": "", "url": "https://api.github.com/users/teng-li", "html_url": "https://github.com/teng-li", "followers_url": "https://api.github.com/users/teng-li/followers", "following_url": "https://api.github.com/users/teng-li/following{/other_user}", "gists_url": "https://api.github.com/users/teng-li/gists{/gist_id}", "starred_url": "https://api.github.com/users/teng-li/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/teng-li/subscriptions", "organizations_url": "https://api.github.com/users/teng-li/orgs", "repos_url": "https://api.github.com/users/teng-li/repos", "events_url": "https://api.github.com/users/teng-li/events{/privacy}", "received_events_url": "https://api.github.com/users/teng-li/received_events", "type": "User", "site_admin": false}, "body": "following  ~/pytorch/torch/csrc/cuda/nccl.cpp since it does the same.  This function isn't called that much and I wouldn't worry about the perf issue of converting a tiny string of maximum size of \"1,2,3,4,5,6,7\" to int since the perf impact is minimal, and the order of this number matters too. ", "created_at": "2017-11-09T19:38:03Z", "updated_at": "2018-11-23T15:36:18Z", "html_url": "https://github.com/pytorch/pytorch/pull/3435#discussion_r150065309", "pull_request_url": "https://api.github.com/repos/pytorch/pytorch/pulls/3435", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/150065309"}, "html": {"href": "https://github.com/pytorch/pytorch/pull/3435#discussion_r150065309"}, "pull_request": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/3435"}}, "body_html": "<p>following  ~/pytorch/torch/csrc/cuda/nccl.cpp since it does the same.  This function isn't called that much and I wouldn't worry about the perf issue of converting a tiny string of maximum size of \"1,2,3,4,5,6,7\" to int since the perf impact is minimal, and the order of this number matters too.</p>", "body_text": "following  ~/pytorch/torch/csrc/cuda/nccl.cpp since it does the same.  This function isn't called that much and I wouldn't worry about the perf issue of converting a tiny string of maximum size of \"1,2,3,4,5,6,7\" to int since the perf impact is minimal, and the order of this number matters too.", "in_reply_to_id": 149961011}