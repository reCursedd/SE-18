{"url": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/150056157", "pull_request_review_id": 73704858, "id": 150056157, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE1MDA1NjE1Nw==", "diff_hunk": "@@ -0,0 +1,173 @@\n+#pragma once\n+\n+#include \"../DataChannel.hpp\"\n+#include \"DataChannelUtils.hpp\"\n+\n+#include <nccl.h>\n+\n+#include <utility>\n+#include <memory>\n+#include <string>\n+#include <unordered_map>\n+#include <vector>\n+\n+\n+#define NCCL_CHECK(cmd) do {                                  \\\n+  ncclResult_t error = cmd;                                   \\\n+  if (error != ncclSuccess) {                                 \\\n+    std::string err = \"NCCL error in: \" +                     \\\n+                      std::string(__FILE__) + \":\" +           \\\n+                      std::to_string(__LINE__) + \", \" +       \\\n+                      std::string(ncclGetErrorString(error)); \\\n+    throw std::runtime_error(err);                            \\\n+  }                                                           \\\n+} while (0)\n+\n+\n+namespace thd {\n+\n+struct DataChannelNccl : DataChannel {\n+  struct RequestNccl : DataChannel::Request {\n+\n+    RequestNccl(QueueWorker::Request&& request);\n+    virtual ~RequestNccl();\n+\n+    virtual bool isCompleted() override;\n+    virtual void wait() override;\n+\n+  private:\n+    QueueWorker::Request _request;\n+  };", "path": "torch/lib/THD/base/data_channels/DataChannelNccl.hpp", "position": null, "original_position": 40, "commit_id": "9400fd54da0d3b3a27b93cc4af8bb4c7a29b47d2", "original_commit_id": "18f92006e8b7b6efff22489a775eb1941e0091e9", "user": {"login": "apaszke", "id": 4583066, "node_id": "MDQ6VXNlcjQ1ODMwNjY=", "avatar_url": "https://avatars3.githubusercontent.com/u/4583066?v=4", "gravatar_id": "", "url": "https://api.github.com/users/apaszke", "html_url": "https://github.com/apaszke", "followers_url": "https://api.github.com/users/apaszke/followers", "following_url": "https://api.github.com/users/apaszke/following{/other_user}", "gists_url": "https://api.github.com/users/apaszke/gists{/gist_id}", "starred_url": "https://api.github.com/users/apaszke/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/apaszke/subscriptions", "organizations_url": "https://api.github.com/users/apaszke/orgs", "repos_url": "https://api.github.com/users/apaszke/repos", "events_url": "https://api.github.com/users/apaszke/events{/privacy}", "received_events_url": "https://api.github.com/users/apaszke/received_events", "type": "User", "site_admin": false}, "body": "I don't think you need to implement anything (no memebers are necessary) for requests if you don't support `send` and `recv` anyway", "created_at": "2017-11-09T19:03:03Z", "updated_at": "2018-11-23T15:36:17Z", "html_url": "https://github.com/pytorch/pytorch/pull/3435#discussion_r150056157", "pull_request_url": "https://api.github.com/repos/pytorch/pytorch/pulls/3435", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/150056157"}, "html": {"href": "https://github.com/pytorch/pytorch/pull/3435#discussion_r150056157"}, "pull_request": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/3435"}}, "body_html": "<p>I don't think you need to implement anything (no memebers are necessary) for requests if you don't support <code>send</code> and <code>recv</code> anyway</p>", "body_text": "I don't think you need to implement anything (no memebers are necessary) for requests if you don't support send and recv anyway"}