{"url": "https://api.github.com/repos/pytorch/pytorch/issues/comments/409727580", "html_url": "https://github.com/pytorch/pytorch/issues/10088#issuecomment-409727580", "issue_url": "https://api.github.com/repos/pytorch/pytorch/issues/10088", "id": 409727580, "node_id": "MDEyOklzc3VlQ29tbWVudDQwOTcyNzU4MA==", "user": {"login": "dmasmont", "id": 26934529, "node_id": "MDQ6VXNlcjI2OTM0NTI5", "avatar_url": "https://avatars0.githubusercontent.com/u/26934529?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dmasmont", "html_url": "https://github.com/dmasmont", "followers_url": "https://api.github.com/users/dmasmont/followers", "following_url": "https://api.github.com/users/dmasmont/following{/other_user}", "gists_url": "https://api.github.com/users/dmasmont/gists{/gist_id}", "starred_url": "https://api.github.com/users/dmasmont/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dmasmont/subscriptions", "organizations_url": "https://api.github.com/users/dmasmont/orgs", "repos_url": "https://api.github.com/users/dmasmont/repos", "events_url": "https://api.github.com/users/dmasmont/events{/privacy}", "received_events_url": "https://api.github.com/users/dmasmont/received_events", "type": "User", "site_admin": false}, "created_at": "2018-08-01T21:20:52Z", "updated_at": "2018-08-01T21:20:52Z", "author_association": "NONE", "body_html": "<p><a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=12903362\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/smajida\">@smajida</a> I was able to implement it by doing the coordinate concatenation using a Python operator. I am not allowed to share the code, but you can follow this tutorial: <a href=\"https://github.com/caffe2/tutorials/blob/master/Python_Op.ipynb\">https://github.com/caffe2/tutorials/blob/master/Python_Op.ipynb</a></p>\n<p>Still, it might be better to figure out how to implement it with existing operators or to define a new one with GPU compatibility (I think Python operators only run on CPU)</p>", "body_text": "@smajida I was able to implement it by doing the coordinate concatenation using a Python operator. I am not allowed to share the code, but you can follow this tutorial: https://github.com/caffe2/tutorials/blob/master/Python_Op.ipynb\nStill, it might be better to figure out how to implement it with existing operators or to define a new one with GPU compatibility (I think Python operators only run on CPU)", "body": "@smajida I was able to implement it by doing the coordinate concatenation using a Python operator. I am not allowed to share the code, but you can follow this tutorial: https://github.com/caffe2/tutorials/blob/master/Python_Op.ipynb\r\n\r\nStill, it might be better to figure out how to implement it with existing operators or to define a new one with GPU compatibility (I think Python operators only run on CPU)"}