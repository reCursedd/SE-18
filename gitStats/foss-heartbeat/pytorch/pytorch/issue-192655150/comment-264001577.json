{"url": "https://api.github.com/repos/pytorch/pytorch/issues/comments/264001577", "html_url": "https://github.com/pytorch/pytorch/issues/274#issuecomment-264001577", "issue_url": "https://api.github.com/repos/pytorch/pytorch/issues/274", "id": 264001577, "node_id": "MDEyOklzc3VlQ29tbWVudDI2NDAwMTU3Nw==", "user": {"login": "jekbradbury", "id": 11729078, "node_id": "MDQ6VXNlcjExNzI5MDc4", "avatar_url": "https://avatars2.githubusercontent.com/u/11729078?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jekbradbury", "html_url": "https://github.com/jekbradbury", "followers_url": "https://api.github.com/users/jekbradbury/followers", "following_url": "https://api.github.com/users/jekbradbury/following{/other_user}", "gists_url": "https://api.github.com/users/jekbradbury/gists{/gist_id}", "starred_url": "https://api.github.com/users/jekbradbury/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jekbradbury/subscriptions", "organizations_url": "https://api.github.com/users/jekbradbury/orgs", "repos_url": "https://api.github.com/users/jekbradbury/repos", "events_url": "https://api.github.com/users/jekbradbury/events{/privacy}", "received_events_url": "https://api.github.com/users/jekbradbury/received_events", "type": "User", "site_admin": false}, "created_at": "2016-11-30T21:30:55Z", "updated_at": "2016-11-30T21:39:39Z", "author_association": "CONTRIBUTOR", "body_html": "<p>This is something Chainer implemented a few months ago, but it has broader implications than were originally realized. It means you might not be able to provide <code>volatile</code> and <code>requires_grad</code> flags along with your data, so the distinction between train and inference had to become a global mode switch, which means we are considering not using <code>volatile</code> at all in v2.0 (since There Is Only One Way To Do It), which changes a lot of things!</p>\n<p>ETA: I never liked Chainer's variable-level flags, preferring the <code>no_backprop_mode</code> context manager (which creates global state). There's an even easier solution for <code>requires_grad</code>: when you provide a raw tensor, <code>requires_grad</code> should automatically be <code>False</code>, since it's most likely input data and doesn't need a gradient.</p>", "body_text": "This is something Chainer implemented a few months ago, but it has broader implications than were originally realized. It means you might not be able to provide volatile and requires_grad flags along with your data, so the distinction between train and inference had to become a global mode switch, which means we are considering not using volatile at all in v2.0 (since There Is Only One Way To Do It), which changes a lot of things!\nETA: I never liked Chainer's variable-level flags, preferring the no_backprop_mode context manager (which creates global state). There's an even easier solution for requires_grad: when you provide a raw tensor, requires_grad should automatically be False, since it's most likely input data and doesn't need a gradient.", "body": "This is something Chainer implemented a few months ago, but it has broader implications than were originally realized. It means you might not be able to provide `volatile` and `requires_grad` flags along with your data, so the distinction between train and inference had to become a global mode switch, which means we are considering not using `volatile` at all in v2.0 (since There Is Only One Way To Do It), which changes a lot of things!\r\n\r\nETA: I never liked Chainer's variable-level flags, preferring the `no_backprop_mode` context manager (which creates global state). There's an even easier solution for `requires_grad`: when you provide a raw tensor, `requires_grad` should automatically be `False`, since it's most likely input data and doesn't need a gradient."}