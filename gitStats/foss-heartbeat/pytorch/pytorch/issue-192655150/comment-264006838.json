{"url": "https://api.github.com/repos/pytorch/pytorch/issues/comments/264006838", "html_url": "https://github.com/pytorch/pytorch/issues/274#issuecomment-264006838", "issue_url": "https://api.github.com/repos/pytorch/pytorch/issues/274", "id": 264006838, "node_id": "MDEyOklzc3VlQ29tbWVudDI2NDAwNjgzOA==", "user": {"login": "jekbradbury", "id": 11729078, "node_id": "MDQ6VXNlcjExNzI5MDc4", "avatar_url": "https://avatars2.githubusercontent.com/u/11729078?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jekbradbury", "html_url": "https://github.com/jekbradbury", "followers_url": "https://api.github.com/users/jekbradbury/followers", "following_url": "https://api.github.com/users/jekbradbury/following{/other_user}", "gists_url": "https://api.github.com/users/jekbradbury/gists{/gist_id}", "starred_url": "https://api.github.com/users/jekbradbury/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jekbradbury/subscriptions", "organizations_url": "https://api.github.com/users/jekbradbury/orgs", "repos_url": "https://api.github.com/users/jekbradbury/repos", "events_url": "https://api.github.com/users/jekbradbury/events{/privacy}", "received_events_url": "https://api.github.com/users/jekbradbury/received_events", "type": "User", "site_admin": false}, "created_at": "2016-11-30T21:50:44Z", "updated_at": "2016-11-30T21:50:44Z", "author_association": "CONTRIBUTOR", "body_html": "<p>If <code>DataLoader</code> provides tensors, and people's code works fine at both train and inference time when they pass those tensors directly into the model, then won't a lot of users not realize that they should intercept the tensors and wrap them in <code>Variable(tensor, volatile=True)</code> if they're doing inference? It makes a huge difference in memory requirements/potential batch size...<br>\n(Someone just emailed me yesterday asking how they can make their server-side Chainer code faster...they were doing inference and didn't turn on <code>volatile</code>)</p>", "body_text": "If DataLoader provides tensors, and people's code works fine at both train and inference time when they pass those tensors directly into the model, then won't a lot of users not realize that they should intercept the tensors and wrap them in Variable(tensor, volatile=True) if they're doing inference? It makes a huge difference in memory requirements/potential batch size...\n(Someone just emailed me yesterday asking how they can make their server-side Chainer code faster...they were doing inference and didn't turn on volatile)", "body": "If `DataLoader` provides tensors, and people's code works fine at both train and inference time when they pass those tensors directly into the model, then won't a lot of users not realize that they should intercept the tensors and wrap them in `Variable(tensor, volatile=True)` if they're doing inference? It makes a huge difference in memory requirements/potential batch size...\r\n(Someone just emailed me yesterday asking how they can make their server-side Chainer code faster...they were doing inference and didn't turn on `volatile`)"}