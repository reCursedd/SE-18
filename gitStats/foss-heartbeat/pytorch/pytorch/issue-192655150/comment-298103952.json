{"url": "https://api.github.com/repos/pytorch/pytorch/issues/comments/298103952", "html_url": "https://github.com/pytorch/pytorch/issues/274#issuecomment-298103952", "issue_url": "https://api.github.com/repos/pytorch/pytorch/issues/274", "id": 298103952, "node_id": "MDEyOklzc3VlQ29tbWVudDI5ODEwMzk1Mg==", "user": {"login": "jekbradbury", "id": 11729078, "node_id": "MDQ6VXNlcjExNzI5MDc4", "avatar_url": "https://avatars2.githubusercontent.com/u/11729078?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jekbradbury", "html_url": "https://github.com/jekbradbury", "followers_url": "https://api.github.com/users/jekbradbury/followers", "following_url": "https://api.github.com/users/jekbradbury/following{/other_user}", "gists_url": "https://api.github.com/users/jekbradbury/gists{/gist_id}", "starred_url": "https://api.github.com/users/jekbradbury/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jekbradbury/subscriptions", "organizations_url": "https://api.github.com/users/jekbradbury/orgs", "repos_url": "https://api.github.com/users/jekbradbury/repos", "events_url": "https://api.github.com/users/jekbradbury/events{/privacy}", "received_events_url": "https://api.github.com/users/jekbradbury/received_events", "type": "User", "site_admin": false}, "created_at": "2017-04-28T20:52:57Z", "updated_at": "2017-04-28T20:52:57Z", "author_association": "CONTRIBUTOR", "body_html": "<p>Yes, I agree. BTW the Chainer devs are moving to the same API (they\u2019ve always autowrapped Tensors but now they\u2019re also adding a requires_grad attribute to Variable with the same semantics as PyTorch, defaulting to False, so that they don\u2019t have to have to allow modules to return both tensors and variables).</p>", "body_text": "Yes, I agree. BTW the Chainer devs are moving to the same API (they\u2019ve always autowrapped Tensors but now they\u2019re also adding a requires_grad attribute to Variable with the same semantics as PyTorch, defaulting to False, so that they don\u2019t have to have to allow modules to return both tensors and variables).", "body": "Yes, I agree. BTW the Chainer devs are moving to the same API (they\u2019ve always autowrapped Tensors but now they\u2019re also adding a requires_grad attribute to Variable with the same semantics as PyTorch, defaulting to False, so that they don\u2019t have to have to allow modules to return both tensors and variables)."}