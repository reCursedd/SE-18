{"url": "https://api.github.com/repos/pytorch/pytorch/issues/comments/403439392", "html_url": "https://github.com/pytorch/pytorch/issues/9242#issuecomment-403439392", "issue_url": "https://api.github.com/repos/pytorch/pytorch/issues/9242", "id": 403439392, "node_id": "MDEyOklzc3VlQ29tbWVudDQwMzQzOTM5Mg==", "user": {"login": "CarlosYeverino", "id": 25825048, "node_id": "MDQ6VXNlcjI1ODI1MDQ4", "avatar_url": "https://avatars0.githubusercontent.com/u/25825048?v=4", "gravatar_id": "", "url": "https://api.github.com/users/CarlosYeverino", "html_url": "https://github.com/CarlosYeverino", "followers_url": "https://api.github.com/users/CarlosYeverino/followers", "following_url": "https://api.github.com/users/CarlosYeverino/following{/other_user}", "gists_url": "https://api.github.com/users/CarlosYeverino/gists{/gist_id}", "starred_url": "https://api.github.com/users/CarlosYeverino/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/CarlosYeverino/subscriptions", "organizations_url": "https://api.github.com/users/CarlosYeverino/orgs", "repos_url": "https://api.github.com/users/CarlosYeverino/repos", "events_url": "https://api.github.com/users/CarlosYeverino/events{/privacy}", "received_events_url": "https://api.github.com/users/CarlosYeverino/received_events", "type": "User", "site_admin": false}, "created_at": "2018-07-09T10:52:32Z", "updated_at": "2018-07-09T10:53:08Z", "author_association": "NONE", "body_html": "<p>**As peterjc123 suggested, I set TORCH_CUDA_ARCH_LIST. I also change versions to CUDA 8.0, cuDNN  7.0.5 and Visual Studio 2015 since I saw on internet that there is no good compatibility with my previous combination.</p>\n<p>However, I got a different error \"Caffe2 building failed\". How should I set TORCH_CUDA_ARCH_LIST for GeForce GTX 1050? I already tried set TORCH_CUDA_ARCH_LIST=\"6.1\" with no success.**</p>\n<p>I did the following sets:<br>\nD:\\Yeverino\\git_projects\\pytorch\\scripts&gt;set CMAKE_GENERATOR=\"Visual Studio 14 2015 Win64\"</p>\n<p>D:\\Yeverino\\git_projects\\pytorch\\scripts&gt;set USE_CUDA=ON</p>\n<p>D:\\Yeverino\\git_projects\\pytorch\\scripts&gt;set TORCH_CUDA_ARCH_LIST=\"6.1\"</p>\n<p>D:\\Yeverino\\git_projects\\pytorch\\scripts&gt;build_windows.bat</p>\n<p>Below the Console Output:<br>\nRequirement already satisfied: pyyaml in c:\\python27\\lib\\site-packages (3.13)<br>\nCAFFE2_ROOT=D:\\Yeverino\\git_projects\\pytorch\\scripts..<br>\nCMAKE_GENERATOR=\"Visual Studio 14 2015 Win64\"<br>\nCMAKE_BUILD_TYPE=Release<br>\n-- Selecting Windows SDK version 10.0.14393.0 to target Windows 10.0.17134.<br>\n-- The CXX compiler identification is MSVC 19.0.24215.1<br>\n-- The C compiler identification is MSVC 19.0.24215.1<br>\n-- Check for working CXX compiler: D:/Program Files/Microsoft Visual Studio 14.0/VC/bin/x86_amd64/cl.exe<br>\n-- Check for working CXX compiler: D:/Program Files/Microsoft Visual Studio 14.0/VC/bin/x86_amd64/cl.exe -- works<br>\n-- Detecting CXX compiler ABI info<br>\n-- Detecting CXX compiler ABI info - done<br>\n-- Detecting CXX compile features<br>\n-- Detecting CXX compile features - done<br>\n-- Check for working C compiler: D:/Program Files/Microsoft Visual Studio 14.0/VC/bin/x86_amd64/cl.exe<br>\n-- Check for working C compiler: D:/Program Files/Microsoft Visual Studio 14.0/VC/bin/x86_amd64/cl.exe -- works<br>\n-- Detecting C compiler ABI info<br>\n-- Detecting C compiler ABI info - done<br>\n-- Detecting C compile features<br>\n-- Detecting C compile features - done<br>\n-- Not forcing any particular BLAS to be found<br>\n-- Performing Test CAFFE2_LONG_IS_INT32_OR_64<br>\n-- Performing Test CAFFE2_LONG_IS_INT32_OR_64 - Failed<br>\n-- Need to define long as a separate typeid.<br>\n-- Performing Test CAFFE2_EXCEPTION_PTR_SUPPORTED<br>\n-- Performing Test CAFFE2_EXCEPTION_PTR_SUPPORTED - Success<br>\n-- std::exception_ptr is supported.<br>\n-- Performing Test CAFFE2_IS_NUMA_AVAILABLE<br>\n-- Performing Test CAFFE2_IS_NUMA_AVAILABLE - Failed<br>\n-- NUMA is not available<br>\n-- Performing Test CAFFE2_NEED_TO_TURN_OFF_DEPRECATION_WARNING<br>\n-- Performing Test CAFFE2_NEED_TO_TURN_OFF_DEPRECATION_WARNING - Failed<br>\n-- Performing Test CAFFE2_COMPILER_SUPPORTS_AVX2_EXTENSIONS<br>\n-- Performing Test CAFFE2_COMPILER_SUPPORTS_AVX2_EXTENSIONS - Success<br>\n-- Current compiler supports avx2 extention. Will build perfkernels.<br>\n-- Performing Test COMPILER_SUPPORTS_HIDDEN_VISIBILITY<br>\n-- Performing Test COMPILER_SUPPORTS_HIDDEN_VISIBILITY - Failed<br>\n-- Performing Test COMPILER_SUPPORTS_HIDDEN_INLINE_VISIBILITY<br>\n-- Performing Test COMPILER_SUPPORTS_HIDDEN_INLINE_VISIBILITY - Failed<br>\n-- Building using own protobuf under third_party per request.<br>\n-- Use custom protobuf build.<br>\n-- Looking for pthread.h<br>\n-- Looking for pthread.h - not found<br>\n-- Found Threads: TRUE<br>\n-- Caffe2 protobuf include directory: $&lt;BUILD_INTERFACE:D:/Yeverino/git_projects/pytorch/third_party/protobuf/src&gt;$&lt;INSTALL_INTERFACE:include&gt;<br>\n-- Found Git: D:/Program Files/Git/Git/cmd/git.exe (found version \"2.18.0.windows.1\")<br>\n-- The BLAS backend of choice:Eigen<br>\nCMake Warning at cmake/Dependencies.cmake:257 (message):<br>\nNUMA is currently only supported under Linux.<br>\nCall Stack (most recent call first):<br>\nCMakeLists.txt:181 (include)</p>\n<p>CMake Warning at cmake/Dependencies.cmake:330 (find_package):<br>\nBy not providing \"FindEigen3.cmake\" in CMAKE_MODULE_PATH this project has<br>\nasked CMake to find a package configuration file provided by \"Eigen3\", but<br>\nCMake did not find one.</p>\n<p>Could not find a package configuration file provided by \"Eigen3\" with any<br>\nof the following names:</p>\n<p>Eigen3Config.cmake<br>\neigen3-config.cmake</p>\n<p>Add the installation prefix of \"Eigen3\" to CMAKE_PREFIX_PATH or set<br>\n\"Eigen3_DIR\" to a directory containing one of the above files. If \"Eigen3\"<br>\nprovides a separate development package or SDK, be sure it has been<br>\ninstalled.<br>\nCall Stack (most recent call first):<br>\nCMakeLists.txt:181 (include)</p>\n<p>-- Did not find system Eigen. Using third party subdirectory.<br>\n-- Found PythonInterp: C:/Python27/python.exe (found suitable version \"2.7.14\", minimum required is \"2.7\")<br>\n-- Found PythonLibs: C:/Python27/libs/python27.lib (found suitable version \"2.7.14\", minimum required is \"2.7\")<br>\n-- Found NumPy: C:/Python27/lib/site-packages/numpy/core/include (found version \"1.14.5\")<br>\n-- NumPy ver. 1.14.5 found (include: C:/Python27/lib/site-packages/numpy/core/include)<br>\n-- Could NOT find pybind11 (missing: pybind11_INCLUDE_DIR)<br>\n-- Could NOT find MPI_C (missing: MPI_C_LIB_NAMES MPI_C_HEADER_DIR MPI_C_WORKS)<br>\n-- Could NOT find MPI_CXX (missing: MPI_CXX_LIB_NAMES MPI_CXX_HEADER_DIR MPI_CXX_WORKS)<br>\n-- Could NOT find MPI (missing: MPI_C_FOUND MPI_CXX_FOUND)<br>\nCMake Warning at cmake/Dependencies.cmake:401 (message):<br>\nNot compiling with MPI. Suppress this warning with -DUSE_MPI=OFF<br>\nCall Stack (most recent call first):<br>\nCMakeLists.txt:181 (include)</p>\n<p>-- Found CUDA: C:/Program Files/NVIDIA GPU Computing Toolkit/CUDA/v8.0 (found suitable version \"8.0\", minimum required is \"7.0\")<br>\n-- Caffe2: CUDA detected: 8.0<br>\n-- Caffe2: CUDA nvcc is: C:/Program Files/NVIDIA GPU Computing Toolkit/CUDA/v8.0/bin/nvcc.exe<br>\n-- Caffe2: CUDA toolkit directory: C:/Program Files/NVIDIA GPU Computing Toolkit/CUDA/v8.0<br>\n-- Caffe2: Header version is: 8.0<br>\n-- Found CUDNN: C:/Program Files/NVIDIA GPU Computing Toolkit/CUDA/v8.0/include<br>\n-- Found cuDNN: v7.0.5 (include: C:/Program Files/NVIDIA GPU Computing Toolkit/CUDA/v8.0/include, library: C:/Program Files/NVIDIA GPU Computing Toolkit/CUDA/v8.0/lib/x64/cudnn.lib)<br>\nCMake Warning at cmake/public/utils.cmake:148 (message):<br>\nIn the future we will require one to explicitly pass TORCH_CUDA_ARCH_LIST<br>\nto cmake instead of implicitly setting it as an env variable. This will<br>\nbecome a FATAL_ERROR in future version of pytorch.<br>\nCall Stack (most recent call first):<br>\ncmake/public/cuda.cmake:332 (torch_cuda_get_nvcc_gencode_flag)<br>\ncmake/Dependencies.cmake:433 (include)<br>\nCMakeLists.txt:181 (include)</p>\n<p>CMake Error at cmake/Modules_CUDA_fix/upstream/FindCUDA/select_compute_arch.cmake:168 (message):<br>\nUnknown CUDA Architecture Name \"6.1\" in CUDA_SELECT_NVCC_ARCH_FLAGS<br>\nCall Stack (most recent call first):<br>\ncmake/public/utils.cmake:164 (cuda_select_nvcc_arch_flags)<br>\ncmake/public/cuda.cmake:332 (torch_cuda_get_nvcc_gencode_flag)<br>\ncmake/Dependencies.cmake:433 (include)<br>\nCMakeLists.txt:181 (include)</p>\n<p>CMake Error at cmake/Modules_CUDA_fix/upstream/FindCUDA/select_compute_arch.cmake:172 (message):<br>\narch_bin wasn't set for some reason<br>\nCall Stack (most recent call first):<br>\ncmake/public/utils.cmake:164 (cuda_select_nvcc_arch_flags)<br>\ncmake/public/cuda.cmake:332 (torch_cuda_get_nvcc_gencode_flag)<br>\ncmake/Dependencies.cmake:433 (include)<br>\nCMakeLists.txt:181 (include)</p>\n<p>-- Added CUDA NVCC flags for:<br>\nCMake Warning at cmake/Dependencies.cmake:543 (message):<br>\nNCCL is currently only supported under Linux.<br>\nCall Stack (most recent call first):<br>\nCMakeLists.txt:181 (include)</p>\n<p>-- Could NOT find CUB (missing: CUB_INCLUDE_DIR)<br>\nCMake Warning at cmake/Dependencies.cmake:563 (message):<br>\nGloo can only be used on Linux.<br>\nCall Stack (most recent call first):<br>\nCMakeLists.txt:181 (include)</p>\n<p>CMake Warning at cmake/Dependencies.cmake:623 (message):<br>\nmobile opengl is only used in android or ios builds.<br>\nCall Stack (most recent call first):<br>\nCMakeLists.txt:181 (include)</p>\n<p>CMake Warning at cmake/Dependencies.cmake:699 (message):<br>\nMetal is only used in ios builds.<br>\nCall Stack (most recent call first):<br>\nCMakeLists.txt:181 (include)</p>\n<p>-- NCCL operators skipped due to no CUDA support<br>\n-- Excluding ideep operators as we are not using ideep<br>\n-- Excluding image processing operators due to no opencv<br>\n-- Excluding video processing operators due to no opencv<br>\n-- Excluding mkl operators as we are not using mkl<br>\n-- MPI operators skipped due to no MPI support<br>\n-- Include Observer library<br>\n-- Using Lib\\site-packages as python relative installation path<br>\n-- Automatically generating missing <strong>init</strong>.py files.<br>\nCMake Warning at CMakeLists.txt:341 (message):<br>\nGenerated cmake files are only fully tested if one builds with system glog,<br>\ngflags, and protobuf. Other settings may generate files that are not well<br>\ntested.</p>\n<p>CMake Warning at CMakeLists.txt:390 (message):<br>\nGenerated cmake files are only available when building shared libs.</p>\n<h2>--<br>\n-- ******** Summary ********<br>\n-- General:<br>\n-- CMake version : 3.12.0-rc2<br>\n-- CMake command : C:/Program Files/CMake/bin/cmake.exe<br>\n-- Git version : v0.1.11-9211-gf87499a8f-dirty<br>\n-- System : Windows<br>\n-- C++ compiler : D:/Program Files/Microsoft Visual Studio 14.0/VC/bin/x86_amd64/cl.exe<br>\n-- C++ compiler version : 19.0.24215.1<br>\n-- BLAS : Eigen<br>\n-- CXX flags : /DWIN32 /D_WINDOWS /W3 /GR /EHsc -DONNX_NAMESPACE=onnx_c2 /MP /bigobj<br>\n-- Build type : Release<br>\n-- Compile definitions :<br>\n-- CMAKE_PREFIX_PATH :<br>\n-- CMAKE_INSTALL_PREFIX : C:/Program Files/Caffe2</h2>\n<p>-- BUILD_CAFFE2 : ON<br>\n-- BUILD_ATEN : OFF<br>\n-- BUILD_BINARY : ON<br>\n-- BUILD_CUSTOM_PROTOBUF : ON<br>\n-- Protobuf compiler :<br>\n-- Protobuf includes :<br>\n-- Protobuf libraries :<br>\n-- BUILD_DOCS : OFF<br>\n-- BUILD_PYTHON : ON<br>\n-- Python version : 2.7.14<br>\n-- Python includes : C:/Python27/include<br>\n-- BUILD_SHARED_LIBS : OFF<br>\n-- BUILD_TEST : OFF<br>\n-- USE_ASAN : OFF<br>\n-- USE_ATEN : OFF<br>\n-- USE_CUDA : ON<br>\n-- CUDA static link : OFF<br>\n-- USE_CUDNN : ON<br>\n-- CUDA version : 8.0<br>\n-- cuDNN version : 7.0.5<br>\n-- CUDA root directory : C:/Program Files/NVIDIA GPU Computing Toolkit/CUDA/v8.0<br>\n-- CUDA library : C:/Program Files/NVIDIA GPU Computing Toolkit/CUDA/v8.0/lib/x64/cuda.lib<br>\n-- cudart library : C:/Program Files/NVIDIA GPU Computing Toolkit/CUDA/v8.0/lib/x64/cudart_static.lib<br>\n-- cublas library : C:/Program Files/NVIDIA GPU Computing Toolkit/CUDA/v8.0/lib/x64/cublas.lib;C:/Program Files/NVIDIA GPU Computing Toolkit/CUDA/v8.0/lib/x64/cublas_device.lib<br>\n-- cufft library : C:/Program Files/NVIDIA GPU Computing Toolkit/CUDA/v8.0/lib/x64/cufft.lib<br>\n-- curand library : C:/Program Files/NVIDIA GPU Computing Toolkit/CUDA/v8.0/lib/x64/curand.lib<br>\n-- cuDNN library : C:/Program Files/NVIDIA GPU Computing Toolkit/CUDA/v8.0/lib/x64/cudnn.lib<br>\n-- nvrtc : C:/Program Files/NVIDIA GPU Computing Toolkit/CUDA/v8.0/lib/x64/nvrtc.lib<br>\n-- CUDA include path : C:/Program Files/NVIDIA GPU Computing Toolkit/CUDA/v8.0/include<br>\n-- NVCC executable : C:/Program Files/NVIDIA GPU Computing Toolkit/CUDA/v8.0/bin/nvcc.exe<br>\n-- CUDA host compiler : $(VCInstallDir)bin<br>\n-- USE_TENSORRT : OFF<br>\n-- USE_ROCM : OFF<br>\n-- USE_EIGEN_FOR_BLAS : ON<br>\n-- USE_FFMPEG : OFF<br>\n-- USE_GFLAGS : OFF<br>\n-- USE_GLOG : OFF<br>\n-- USE_GLOO : OFF<br>\n-- USE_LEVELDB : OFF<br>\n-- USE_LITE_PROTO : OFF<br>\n-- USE_LMDB : OFF<br>\n-- USE_METAL : OFF<br>\n-- USE_MKL :<br>\n-- USE_MOBILE_OPENGL : OFF<br>\n-- USE_MPI : OFF<br>\n-- USE_NCCL : OFF<br>\n-- USE_NERVANA_GPU : OFF<br>\n-- USE_NNPACK : OFF<br>\n-- USE_OBSERVERS : ON<br>\n-- USE_OPENCL : OFF<br>\n-- USE_OPENCV : OFF<br>\n-- USE_OPENMP : OFF<br>\n-- USE_PROF : OFF<br>\n-- USE_REDIS : OFF<br>\n-- USE_ROCKSDB : OFF<br>\n-- USE_ZMQ : OFF<br>\n-- Public Dependencies : Threads::Threads<br>\n-- Private Dependencies : cpuinfo;onnxifi_loader<br>\n-- Configuring incomplete, errors occurred!<br>\nSee also \"D:/Yeverino/git_projects/pytorch/build/CMakeFiles/CMakeOutput.log\".<br>\nSee also \"D:/Yeverino/git_projects/pytorch/build/CMakeFiles/CMakeError.log\".<br>\n\"Caffe2 building failed\"</p>", "body_text": "**As peterjc123 suggested, I set TORCH_CUDA_ARCH_LIST. I also change versions to CUDA 8.0, cuDNN  7.0.5 and Visual Studio 2015 since I saw on internet that there is no good compatibility with my previous combination.\nHowever, I got a different error \"Caffe2 building failed\". How should I set TORCH_CUDA_ARCH_LIST for GeForce GTX 1050? I already tried set TORCH_CUDA_ARCH_LIST=\"6.1\" with no success.**\nI did the following sets:\nD:\\Yeverino\\git_projects\\pytorch\\scripts>set CMAKE_GENERATOR=\"Visual Studio 14 2015 Win64\"\nD:\\Yeverino\\git_projects\\pytorch\\scripts>set USE_CUDA=ON\nD:\\Yeverino\\git_projects\\pytorch\\scripts>set TORCH_CUDA_ARCH_LIST=\"6.1\"\nD:\\Yeverino\\git_projects\\pytorch\\scripts>build_windows.bat\nBelow the Console Output:\nRequirement already satisfied: pyyaml in c:\\python27\\lib\\site-packages (3.13)\nCAFFE2_ROOT=D:\\Yeverino\\git_projects\\pytorch\\scripts..\nCMAKE_GENERATOR=\"Visual Studio 14 2015 Win64\"\nCMAKE_BUILD_TYPE=Release\n-- Selecting Windows SDK version 10.0.14393.0 to target Windows 10.0.17134.\n-- The CXX compiler identification is MSVC 19.0.24215.1\n-- The C compiler identification is MSVC 19.0.24215.1\n-- Check for working CXX compiler: D:/Program Files/Microsoft Visual Studio 14.0/VC/bin/x86_amd64/cl.exe\n-- Check for working CXX compiler: D:/Program Files/Microsoft Visual Studio 14.0/VC/bin/x86_amd64/cl.exe -- works\n-- Detecting CXX compiler ABI info\n-- Detecting CXX compiler ABI info - done\n-- Detecting CXX compile features\n-- Detecting CXX compile features - done\n-- Check for working C compiler: D:/Program Files/Microsoft Visual Studio 14.0/VC/bin/x86_amd64/cl.exe\n-- Check for working C compiler: D:/Program Files/Microsoft Visual Studio 14.0/VC/bin/x86_amd64/cl.exe -- works\n-- Detecting C compiler ABI info\n-- Detecting C compiler ABI info - done\n-- Detecting C compile features\n-- Detecting C compile features - done\n-- Not forcing any particular BLAS to be found\n-- Performing Test CAFFE2_LONG_IS_INT32_OR_64\n-- Performing Test CAFFE2_LONG_IS_INT32_OR_64 - Failed\n-- Need to define long as a separate typeid.\n-- Performing Test CAFFE2_EXCEPTION_PTR_SUPPORTED\n-- Performing Test CAFFE2_EXCEPTION_PTR_SUPPORTED - Success\n-- std::exception_ptr is supported.\n-- Performing Test CAFFE2_IS_NUMA_AVAILABLE\n-- Performing Test CAFFE2_IS_NUMA_AVAILABLE - Failed\n-- NUMA is not available\n-- Performing Test CAFFE2_NEED_TO_TURN_OFF_DEPRECATION_WARNING\n-- Performing Test CAFFE2_NEED_TO_TURN_OFF_DEPRECATION_WARNING - Failed\n-- Performing Test CAFFE2_COMPILER_SUPPORTS_AVX2_EXTENSIONS\n-- Performing Test CAFFE2_COMPILER_SUPPORTS_AVX2_EXTENSIONS - Success\n-- Current compiler supports avx2 extention. Will build perfkernels.\n-- Performing Test COMPILER_SUPPORTS_HIDDEN_VISIBILITY\n-- Performing Test COMPILER_SUPPORTS_HIDDEN_VISIBILITY - Failed\n-- Performing Test COMPILER_SUPPORTS_HIDDEN_INLINE_VISIBILITY\n-- Performing Test COMPILER_SUPPORTS_HIDDEN_INLINE_VISIBILITY - Failed\n-- Building using own protobuf under third_party per request.\n-- Use custom protobuf build.\n-- Looking for pthread.h\n-- Looking for pthread.h - not found\n-- Found Threads: TRUE\n-- Caffe2 protobuf include directory: $<BUILD_INTERFACE:D:/Yeverino/git_projects/pytorch/third_party/protobuf/src>$<INSTALL_INTERFACE:include>\n-- Found Git: D:/Program Files/Git/Git/cmd/git.exe (found version \"2.18.0.windows.1\")\n-- The BLAS backend of choice:Eigen\nCMake Warning at cmake/Dependencies.cmake:257 (message):\nNUMA is currently only supported under Linux.\nCall Stack (most recent call first):\nCMakeLists.txt:181 (include)\nCMake Warning at cmake/Dependencies.cmake:330 (find_package):\nBy not providing \"FindEigen3.cmake\" in CMAKE_MODULE_PATH this project has\nasked CMake to find a package configuration file provided by \"Eigen3\", but\nCMake did not find one.\nCould not find a package configuration file provided by \"Eigen3\" with any\nof the following names:\nEigen3Config.cmake\neigen3-config.cmake\nAdd the installation prefix of \"Eigen3\" to CMAKE_PREFIX_PATH or set\n\"Eigen3_DIR\" to a directory containing one of the above files. If \"Eigen3\"\nprovides a separate development package or SDK, be sure it has been\ninstalled.\nCall Stack (most recent call first):\nCMakeLists.txt:181 (include)\n-- Did not find system Eigen. Using third party subdirectory.\n-- Found PythonInterp: C:/Python27/python.exe (found suitable version \"2.7.14\", minimum required is \"2.7\")\n-- Found PythonLibs: C:/Python27/libs/python27.lib (found suitable version \"2.7.14\", minimum required is \"2.7\")\n-- Found NumPy: C:/Python27/lib/site-packages/numpy/core/include (found version \"1.14.5\")\n-- NumPy ver. 1.14.5 found (include: C:/Python27/lib/site-packages/numpy/core/include)\n-- Could NOT find pybind11 (missing: pybind11_INCLUDE_DIR)\n-- Could NOT find MPI_C (missing: MPI_C_LIB_NAMES MPI_C_HEADER_DIR MPI_C_WORKS)\n-- Could NOT find MPI_CXX (missing: MPI_CXX_LIB_NAMES MPI_CXX_HEADER_DIR MPI_CXX_WORKS)\n-- Could NOT find MPI (missing: MPI_C_FOUND MPI_CXX_FOUND)\nCMake Warning at cmake/Dependencies.cmake:401 (message):\nNot compiling with MPI. Suppress this warning with -DUSE_MPI=OFF\nCall Stack (most recent call first):\nCMakeLists.txt:181 (include)\n-- Found CUDA: C:/Program Files/NVIDIA GPU Computing Toolkit/CUDA/v8.0 (found suitable version \"8.0\", minimum required is \"7.0\")\n-- Caffe2: CUDA detected: 8.0\n-- Caffe2: CUDA nvcc is: C:/Program Files/NVIDIA GPU Computing Toolkit/CUDA/v8.0/bin/nvcc.exe\n-- Caffe2: CUDA toolkit directory: C:/Program Files/NVIDIA GPU Computing Toolkit/CUDA/v8.0\n-- Caffe2: Header version is: 8.0\n-- Found CUDNN: C:/Program Files/NVIDIA GPU Computing Toolkit/CUDA/v8.0/include\n-- Found cuDNN: v7.0.5 (include: C:/Program Files/NVIDIA GPU Computing Toolkit/CUDA/v8.0/include, library: C:/Program Files/NVIDIA GPU Computing Toolkit/CUDA/v8.0/lib/x64/cudnn.lib)\nCMake Warning at cmake/public/utils.cmake:148 (message):\nIn the future we will require one to explicitly pass TORCH_CUDA_ARCH_LIST\nto cmake instead of implicitly setting it as an env variable. This will\nbecome a FATAL_ERROR in future version of pytorch.\nCall Stack (most recent call first):\ncmake/public/cuda.cmake:332 (torch_cuda_get_nvcc_gencode_flag)\ncmake/Dependencies.cmake:433 (include)\nCMakeLists.txt:181 (include)\nCMake Error at cmake/Modules_CUDA_fix/upstream/FindCUDA/select_compute_arch.cmake:168 (message):\nUnknown CUDA Architecture Name \"6.1\" in CUDA_SELECT_NVCC_ARCH_FLAGS\nCall Stack (most recent call first):\ncmake/public/utils.cmake:164 (cuda_select_nvcc_arch_flags)\ncmake/public/cuda.cmake:332 (torch_cuda_get_nvcc_gencode_flag)\ncmake/Dependencies.cmake:433 (include)\nCMakeLists.txt:181 (include)\nCMake Error at cmake/Modules_CUDA_fix/upstream/FindCUDA/select_compute_arch.cmake:172 (message):\narch_bin wasn't set for some reason\nCall Stack (most recent call first):\ncmake/public/utils.cmake:164 (cuda_select_nvcc_arch_flags)\ncmake/public/cuda.cmake:332 (torch_cuda_get_nvcc_gencode_flag)\ncmake/Dependencies.cmake:433 (include)\nCMakeLists.txt:181 (include)\n-- Added CUDA NVCC flags for:\nCMake Warning at cmake/Dependencies.cmake:543 (message):\nNCCL is currently only supported under Linux.\nCall Stack (most recent call first):\nCMakeLists.txt:181 (include)\n-- Could NOT find CUB (missing: CUB_INCLUDE_DIR)\nCMake Warning at cmake/Dependencies.cmake:563 (message):\nGloo can only be used on Linux.\nCall Stack (most recent call first):\nCMakeLists.txt:181 (include)\nCMake Warning at cmake/Dependencies.cmake:623 (message):\nmobile opengl is only used in android or ios builds.\nCall Stack (most recent call first):\nCMakeLists.txt:181 (include)\nCMake Warning at cmake/Dependencies.cmake:699 (message):\nMetal is only used in ios builds.\nCall Stack (most recent call first):\nCMakeLists.txt:181 (include)\n-- NCCL operators skipped due to no CUDA support\n-- Excluding ideep operators as we are not using ideep\n-- Excluding image processing operators due to no opencv\n-- Excluding video processing operators due to no opencv\n-- Excluding mkl operators as we are not using mkl\n-- MPI operators skipped due to no MPI support\n-- Include Observer library\n-- Using Lib\\site-packages as python relative installation path\n-- Automatically generating missing init.py files.\nCMake Warning at CMakeLists.txt:341 (message):\nGenerated cmake files are only fully tested if one builds with system glog,\ngflags, and protobuf. Other settings may generate files that are not well\ntested.\nCMake Warning at CMakeLists.txt:390 (message):\nGenerated cmake files are only available when building shared libs.\n--\n-- ******** Summary ********\n-- General:\n-- CMake version : 3.12.0-rc2\n-- CMake command : C:/Program Files/CMake/bin/cmake.exe\n-- Git version : v0.1.11-9211-gf87499a8f-dirty\n-- System : Windows\n-- C++ compiler : D:/Program Files/Microsoft Visual Studio 14.0/VC/bin/x86_amd64/cl.exe\n-- C++ compiler version : 19.0.24215.1\n-- BLAS : Eigen\n-- CXX flags : /DWIN32 /D_WINDOWS /W3 /GR /EHsc -DONNX_NAMESPACE=onnx_c2 /MP /bigobj\n-- Build type : Release\n-- Compile definitions :\n-- CMAKE_PREFIX_PATH :\n-- CMAKE_INSTALL_PREFIX : C:/Program Files/Caffe2\n-- BUILD_CAFFE2 : ON\n-- BUILD_ATEN : OFF\n-- BUILD_BINARY : ON\n-- BUILD_CUSTOM_PROTOBUF : ON\n-- Protobuf compiler :\n-- Protobuf includes :\n-- Protobuf libraries :\n-- BUILD_DOCS : OFF\n-- BUILD_PYTHON : ON\n-- Python version : 2.7.14\n-- Python includes : C:/Python27/include\n-- BUILD_SHARED_LIBS : OFF\n-- BUILD_TEST : OFF\n-- USE_ASAN : OFF\n-- USE_ATEN : OFF\n-- USE_CUDA : ON\n-- CUDA static link : OFF\n-- USE_CUDNN : ON\n-- CUDA version : 8.0\n-- cuDNN version : 7.0.5\n-- CUDA root directory : C:/Program Files/NVIDIA GPU Computing Toolkit/CUDA/v8.0\n-- CUDA library : C:/Program Files/NVIDIA GPU Computing Toolkit/CUDA/v8.0/lib/x64/cuda.lib\n-- cudart library : C:/Program Files/NVIDIA GPU Computing Toolkit/CUDA/v8.0/lib/x64/cudart_static.lib\n-- cublas library : C:/Program Files/NVIDIA GPU Computing Toolkit/CUDA/v8.0/lib/x64/cublas.lib;C:/Program Files/NVIDIA GPU Computing Toolkit/CUDA/v8.0/lib/x64/cublas_device.lib\n-- cufft library : C:/Program Files/NVIDIA GPU Computing Toolkit/CUDA/v8.0/lib/x64/cufft.lib\n-- curand library : C:/Program Files/NVIDIA GPU Computing Toolkit/CUDA/v8.0/lib/x64/curand.lib\n-- cuDNN library : C:/Program Files/NVIDIA GPU Computing Toolkit/CUDA/v8.0/lib/x64/cudnn.lib\n-- nvrtc : C:/Program Files/NVIDIA GPU Computing Toolkit/CUDA/v8.0/lib/x64/nvrtc.lib\n-- CUDA include path : C:/Program Files/NVIDIA GPU Computing Toolkit/CUDA/v8.0/include\n-- NVCC executable : C:/Program Files/NVIDIA GPU Computing Toolkit/CUDA/v8.0/bin/nvcc.exe\n-- CUDA host compiler : $(VCInstallDir)bin\n-- USE_TENSORRT : OFF\n-- USE_ROCM : OFF\n-- USE_EIGEN_FOR_BLAS : ON\n-- USE_FFMPEG : OFF\n-- USE_GFLAGS : OFF\n-- USE_GLOG : OFF\n-- USE_GLOO : OFF\n-- USE_LEVELDB : OFF\n-- USE_LITE_PROTO : OFF\n-- USE_LMDB : OFF\n-- USE_METAL : OFF\n-- USE_MKL :\n-- USE_MOBILE_OPENGL : OFF\n-- USE_MPI : OFF\n-- USE_NCCL : OFF\n-- USE_NERVANA_GPU : OFF\n-- USE_NNPACK : OFF\n-- USE_OBSERVERS : ON\n-- USE_OPENCL : OFF\n-- USE_OPENCV : OFF\n-- USE_OPENMP : OFF\n-- USE_PROF : OFF\n-- USE_REDIS : OFF\n-- USE_ROCKSDB : OFF\n-- USE_ZMQ : OFF\n-- Public Dependencies : Threads::Threads\n-- Private Dependencies : cpuinfo;onnxifi_loader\n-- Configuring incomplete, errors occurred!\nSee also \"D:/Yeverino/git_projects/pytorch/build/CMakeFiles/CMakeOutput.log\".\nSee also \"D:/Yeverino/git_projects/pytorch/build/CMakeFiles/CMakeError.log\".\n\"Caffe2 building failed\"", "body": "**As peterjc123 suggested, I set TORCH_CUDA_ARCH_LIST. I also change versions to CUDA 8.0, cuDNN  7.0.5 and Visual Studio 2015 since I saw on internet that there is no good compatibility with my previous combination.\r\n\r\nHowever, I got a different error \"Caffe2 building failed\". How should I set TORCH_CUDA_ARCH_LIST for GeForce GTX 1050? I already tried set TORCH_CUDA_ARCH_LIST=\"6.1\" with no success.**\r\n\r\nI did the following sets:\r\nD:\\Yeverino\\git_projects\\pytorch\\scripts>set CMAKE_GENERATOR=\"Visual Studio 14 2015 Win64\"\r\n\r\nD:\\Yeverino\\git_projects\\pytorch\\scripts>set USE_CUDA=ON\r\n\r\nD:\\Yeverino\\git_projects\\pytorch\\scripts>set TORCH_CUDA_ARCH_LIST=\"6.1\"\r\n\r\nD:\\Yeverino\\git_projects\\pytorch\\scripts>build_windows.bat\r\n\r\nBelow the Console Output:\r\nRequirement already satisfied: pyyaml in c:\\python27\\lib\\site-packages (3.13)\r\nCAFFE2_ROOT=D:\\Yeverino\\git_projects\\pytorch\\scripts\\..\r\nCMAKE_GENERATOR=\"Visual Studio 14 2015 Win64\"\r\nCMAKE_BUILD_TYPE=Release\r\n-- Selecting Windows SDK version 10.0.14393.0 to target Windows 10.0.17134.\r\n-- The CXX compiler identification is MSVC 19.0.24215.1\r\n-- The C compiler identification is MSVC 19.0.24215.1\r\n-- Check for working CXX compiler: D:/Program Files/Microsoft Visual Studio 14.0/VC/bin/x86_amd64/cl.exe\r\n-- Check for working CXX compiler: D:/Program Files/Microsoft Visual Studio 14.0/VC/bin/x86_amd64/cl.exe -- works\r\n-- Detecting CXX compiler ABI info\r\n-- Detecting CXX compiler ABI info - done\r\n-- Detecting CXX compile features\r\n-- Detecting CXX compile features - done\r\n-- Check for working C compiler: D:/Program Files/Microsoft Visual Studio 14.0/VC/bin/x86_amd64/cl.exe\r\n-- Check for working C compiler: D:/Program Files/Microsoft Visual Studio 14.0/VC/bin/x86_amd64/cl.exe -- works\r\n-- Detecting C compiler ABI info\r\n-- Detecting C compiler ABI info - done\r\n-- Detecting C compile features\r\n-- Detecting C compile features - done\r\n-- Not forcing any particular BLAS to be found\r\n-- Performing Test CAFFE2_LONG_IS_INT32_OR_64\r\n-- Performing Test CAFFE2_LONG_IS_INT32_OR_64 - Failed\r\n-- Need to define long as a separate typeid.\r\n-- Performing Test CAFFE2_EXCEPTION_PTR_SUPPORTED\r\n-- Performing Test CAFFE2_EXCEPTION_PTR_SUPPORTED - Success\r\n-- std::exception_ptr is supported.\r\n-- Performing Test CAFFE2_IS_NUMA_AVAILABLE\r\n-- Performing Test CAFFE2_IS_NUMA_AVAILABLE - Failed\r\n-- NUMA is not available\r\n-- Performing Test CAFFE2_NEED_TO_TURN_OFF_DEPRECATION_WARNING\r\n-- Performing Test CAFFE2_NEED_TO_TURN_OFF_DEPRECATION_WARNING - Failed\r\n-- Performing Test CAFFE2_COMPILER_SUPPORTS_AVX2_EXTENSIONS\r\n-- Performing Test CAFFE2_COMPILER_SUPPORTS_AVX2_EXTENSIONS - Success\r\n-- Current compiler supports avx2 extention. Will build perfkernels.\r\n-- Performing Test COMPILER_SUPPORTS_HIDDEN_VISIBILITY\r\n-- Performing Test COMPILER_SUPPORTS_HIDDEN_VISIBILITY - Failed\r\n-- Performing Test COMPILER_SUPPORTS_HIDDEN_INLINE_VISIBILITY\r\n-- Performing Test COMPILER_SUPPORTS_HIDDEN_INLINE_VISIBILITY - Failed\r\n-- Building using own protobuf under third_party per request.\r\n-- Use custom protobuf build.\r\n-- Looking for pthread.h\r\n-- Looking for pthread.h - not found\r\n-- Found Threads: TRUE\r\n-- Caffe2 protobuf include directory: $<BUILD_INTERFACE:D:/Yeverino/git_projects/pytorch/third_party/protobuf/src>$<INSTALL_INTERFACE:include>\r\n-- Found Git: D:/Program Files/Git/Git/cmd/git.exe (found version \"2.18.0.windows.1\")\r\n-- The BLAS backend of choice:Eigen\r\nCMake Warning at cmake/Dependencies.cmake:257 (message):\r\nNUMA is currently only supported under Linux.\r\nCall Stack (most recent call first):\r\nCMakeLists.txt:181 (include)\r\n\r\n\r\nCMake Warning at cmake/Dependencies.cmake:330 (find_package):\r\nBy not providing \"FindEigen3.cmake\" in CMAKE_MODULE_PATH this project has\r\nasked CMake to find a package configuration file provided by \"Eigen3\", but\r\nCMake did not find one.\r\n\r\nCould not find a package configuration file provided by \"Eigen3\" with any\r\nof the following names:\r\n\r\nEigen3Config.cmake\r\neigen3-config.cmake\r\n\r\nAdd the installation prefix of \"Eigen3\" to CMAKE_PREFIX_PATH or set\r\n\"Eigen3_DIR\" to a directory containing one of the above files. If \"Eigen3\"\r\nprovides a separate development package or SDK, be sure it has been\r\ninstalled.\r\nCall Stack (most recent call first):\r\nCMakeLists.txt:181 (include)\r\n\r\n\r\n-- Did not find system Eigen. Using third party subdirectory.\r\n-- Found PythonInterp: C:/Python27/python.exe (found suitable version \"2.7.14\", minimum required is \"2.7\")\r\n-- Found PythonLibs: C:/Python27/libs/python27.lib (found suitable version \"2.7.14\", minimum required is \"2.7\")\r\n-- Found NumPy: C:/Python27/lib/site-packages/numpy/core/include (found version \"1.14.5\")\r\n-- NumPy ver. 1.14.5 found (include: C:/Python27/lib/site-packages/numpy/core/include)\r\n-- Could NOT find pybind11 (missing: pybind11_INCLUDE_DIR)\r\n-- Could NOT find MPI_C (missing: MPI_C_LIB_NAMES MPI_C_HEADER_DIR MPI_C_WORKS)\r\n-- Could NOT find MPI_CXX (missing: MPI_CXX_LIB_NAMES MPI_CXX_HEADER_DIR MPI_CXX_WORKS)\r\n-- Could NOT find MPI (missing: MPI_C_FOUND MPI_CXX_FOUND)\r\nCMake Warning at cmake/Dependencies.cmake:401 (message):\r\nNot compiling with MPI. Suppress this warning with -DUSE_MPI=OFF\r\nCall Stack (most recent call first):\r\nCMakeLists.txt:181 (include)\r\n\r\n\r\n-- Found CUDA: C:/Program Files/NVIDIA GPU Computing Toolkit/CUDA/v8.0 (found suitable version \"8.0\", minimum required is \"7.0\")\r\n-- Caffe2: CUDA detected: 8.0\r\n-- Caffe2: CUDA nvcc is: C:/Program Files/NVIDIA GPU Computing Toolkit/CUDA/v8.0/bin/nvcc.exe\r\n-- Caffe2: CUDA toolkit directory: C:/Program Files/NVIDIA GPU Computing Toolkit/CUDA/v8.0\r\n-- Caffe2: Header version is: 8.0\r\n-- Found CUDNN: C:/Program Files/NVIDIA GPU Computing Toolkit/CUDA/v8.0/include\r\n-- Found cuDNN: v7.0.5 (include: C:/Program Files/NVIDIA GPU Computing Toolkit/CUDA/v8.0/include, library: C:/Program Files/NVIDIA GPU Computing Toolkit/CUDA/v8.0/lib/x64/cudnn.lib)\r\nCMake Warning at cmake/public/utils.cmake:148 (message):\r\nIn the future we will require one to explicitly pass TORCH_CUDA_ARCH_LIST\r\nto cmake instead of implicitly setting it as an env variable. This will\r\nbecome a FATAL_ERROR in future version of pytorch.\r\nCall Stack (most recent call first):\r\ncmake/public/cuda.cmake:332 (torch_cuda_get_nvcc_gencode_flag)\r\ncmake/Dependencies.cmake:433 (include)\r\nCMakeLists.txt:181 (include)\r\n\r\n\r\nCMake Error at cmake/Modules_CUDA_fix/upstream/FindCUDA/select_compute_arch.cmake:168 (message):\r\nUnknown CUDA Architecture Name \"6.1\" in CUDA_SELECT_NVCC_ARCH_FLAGS\r\nCall Stack (most recent call first):\r\ncmake/public/utils.cmake:164 (cuda_select_nvcc_arch_flags)\r\ncmake/public/cuda.cmake:332 (torch_cuda_get_nvcc_gencode_flag)\r\ncmake/Dependencies.cmake:433 (include)\r\nCMakeLists.txt:181 (include)\r\n\r\n\r\nCMake Error at cmake/Modules_CUDA_fix/upstream/FindCUDA/select_compute_arch.cmake:172 (message):\r\narch_bin wasn't set for some reason\r\nCall Stack (most recent call first):\r\ncmake/public/utils.cmake:164 (cuda_select_nvcc_arch_flags)\r\ncmake/public/cuda.cmake:332 (torch_cuda_get_nvcc_gencode_flag)\r\ncmake/Dependencies.cmake:433 (include)\r\nCMakeLists.txt:181 (include)\r\n\r\n\r\n-- Added CUDA NVCC flags for:\r\nCMake Warning at cmake/Dependencies.cmake:543 (message):\r\nNCCL is currently only supported under Linux.\r\nCall Stack (most recent call first):\r\nCMakeLists.txt:181 (include)\r\n\r\n\r\n-- Could NOT find CUB (missing: CUB_INCLUDE_DIR)\r\nCMake Warning at cmake/Dependencies.cmake:563 (message):\r\nGloo can only be used on Linux.\r\nCall Stack (most recent call first):\r\nCMakeLists.txt:181 (include)\r\n\r\n\r\nCMake Warning at cmake/Dependencies.cmake:623 (message):\r\nmobile opengl is only used in android or ios builds.\r\nCall Stack (most recent call first):\r\nCMakeLists.txt:181 (include)\r\n\r\n\r\nCMake Warning at cmake/Dependencies.cmake:699 (message):\r\nMetal is only used in ios builds.\r\nCall Stack (most recent call first):\r\nCMakeLists.txt:181 (include)\r\n\r\n\r\n-- NCCL operators skipped due to no CUDA support\r\n-- Excluding ideep operators as we are not using ideep\r\n-- Excluding image processing operators due to no opencv\r\n-- Excluding video processing operators due to no opencv\r\n-- Excluding mkl operators as we are not using mkl\r\n-- MPI operators skipped due to no MPI support\r\n-- Include Observer library\r\n-- Using Lib\\site-packages as python relative installation path\r\n-- Automatically generating missing __init__.py files.\r\nCMake Warning at CMakeLists.txt:341 (message):\r\nGenerated cmake files are only fully tested if one builds with system glog,\r\ngflags, and protobuf. Other settings may generate files that are not well\r\ntested.\r\n\r\n\r\nCMake Warning at CMakeLists.txt:390 (message):\r\nGenerated cmake files are only available when building shared libs.\r\n\r\n\r\n--\r\n-- ******** Summary ********\r\n-- General:\r\n-- CMake version : 3.12.0-rc2\r\n-- CMake command : C:/Program Files/CMake/bin/cmake.exe\r\n-- Git version : v0.1.11-9211-gf87499a8f-dirty\r\n-- System : Windows\r\n-- C++ compiler : D:/Program Files/Microsoft Visual Studio 14.0/VC/bin/x86_amd64/cl.exe\r\n-- C++ compiler version : 19.0.24215.1\r\n-- BLAS : Eigen\r\n-- CXX flags : /DWIN32 /D_WINDOWS /W3 /GR /EHsc -DONNX_NAMESPACE=onnx_c2 /MP /bigobj\r\n-- Build type : Release\r\n-- Compile definitions :\r\n-- CMAKE_PREFIX_PATH :\r\n-- CMAKE_INSTALL_PREFIX : C:/Program Files/Caffe2\r\n--\r\n-- BUILD_CAFFE2 : ON\r\n-- BUILD_ATEN : OFF\r\n-- BUILD_BINARY : ON\r\n-- BUILD_CUSTOM_PROTOBUF : ON\r\n-- Protobuf compiler :\r\n-- Protobuf includes :\r\n-- Protobuf libraries :\r\n-- BUILD_DOCS : OFF\r\n-- BUILD_PYTHON : ON\r\n-- Python version : 2.7.14\r\n-- Python includes : C:/Python27/include\r\n-- BUILD_SHARED_LIBS : OFF\r\n-- BUILD_TEST : OFF\r\n-- USE_ASAN : OFF\r\n-- USE_ATEN : OFF\r\n-- USE_CUDA : ON\r\n-- CUDA static link : OFF\r\n-- USE_CUDNN : ON\r\n-- CUDA version : 8.0\r\n-- cuDNN version : 7.0.5\r\n-- CUDA root directory : C:/Program Files/NVIDIA GPU Computing Toolkit/CUDA/v8.0\r\n-- CUDA library : C:/Program Files/NVIDIA GPU Computing Toolkit/CUDA/v8.0/lib/x64/cuda.lib\r\n-- cudart library : C:/Program Files/NVIDIA GPU Computing Toolkit/CUDA/v8.0/lib/x64/cudart_static.lib\r\n-- cublas library : C:/Program Files/NVIDIA GPU Computing Toolkit/CUDA/v8.0/lib/x64/cublas.lib;C:/Program Files/NVIDIA GPU Computing Toolkit/CUDA/v8.0/lib/x64/cublas_device.lib\r\n-- cufft library : C:/Program Files/NVIDIA GPU Computing Toolkit/CUDA/v8.0/lib/x64/cufft.lib\r\n-- curand library : C:/Program Files/NVIDIA GPU Computing Toolkit/CUDA/v8.0/lib/x64/curand.lib\r\n-- cuDNN library : C:/Program Files/NVIDIA GPU Computing Toolkit/CUDA/v8.0/lib/x64/cudnn.lib\r\n-- nvrtc : C:/Program Files/NVIDIA GPU Computing Toolkit/CUDA/v8.0/lib/x64/nvrtc.lib\r\n-- CUDA include path : C:/Program Files/NVIDIA GPU Computing Toolkit/CUDA/v8.0/include\r\n-- NVCC executable : C:/Program Files/NVIDIA GPU Computing Toolkit/CUDA/v8.0/bin/nvcc.exe\r\n-- CUDA host compiler : $(VCInstallDir)bin\r\n-- USE_TENSORRT : OFF\r\n-- USE_ROCM : OFF\r\n-- USE_EIGEN_FOR_BLAS : ON\r\n-- USE_FFMPEG : OFF\r\n-- USE_GFLAGS : OFF\r\n-- USE_GLOG : OFF\r\n-- USE_GLOO : OFF\r\n-- USE_LEVELDB : OFF\r\n-- USE_LITE_PROTO : OFF\r\n-- USE_LMDB : OFF\r\n-- USE_METAL : OFF\r\n-- USE_MKL :\r\n-- USE_MOBILE_OPENGL : OFF\r\n-- USE_MPI : OFF\r\n-- USE_NCCL : OFF\r\n-- USE_NERVANA_GPU : OFF\r\n-- USE_NNPACK : OFF\r\n-- USE_OBSERVERS : ON\r\n-- USE_OPENCL : OFF\r\n-- USE_OPENCV : OFF\r\n-- USE_OPENMP : OFF\r\n-- USE_PROF : OFF\r\n-- USE_REDIS : OFF\r\n-- USE_ROCKSDB : OFF\r\n-- USE_ZMQ : OFF\r\n-- Public Dependencies : Threads::Threads\r\n-- Private Dependencies : cpuinfo;onnxifi_loader\r\n-- Configuring incomplete, errors occurred!\r\nSee also \"D:/Yeverino/git_projects/pytorch/build/CMakeFiles/CMakeOutput.log\".\r\nSee also \"D:/Yeverino/git_projects/pytorch/build/CMakeFiles/CMakeError.log\".\r\n\"Caffe2 building failed\""}