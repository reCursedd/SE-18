{"url": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/165485175", "pull_request_review_id": 93434518, "id": 165485175, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE2NTQ4NTE3NQ==", "diff_hunk": "@@ -46,5 +46,8 @@ def gather_map(outputs):\n             return Gather.apply(target_device, dim, *outputs)\n         if out is None:\n             return None\n-        return type(out)(map(gather_map, zip(*outputs)))\n+        if isinstance(out, dict):\n+            return dict(zip(out.keys(),\n+                            map(gather_map, zip(*[d.values() for d in outputs]))))", "path": "torch/nn/parallel/scatter_gather.py", "position": 7, "original_position": 7, "commit_id": "4889bf4c73ac365f9c4df3a9b106eadf495912a8", "original_commit_id": "4889bf4c73ac365f9c4df3a9b106eadf495912a8", "user": {"login": "SsnL", "id": 5674597, "node_id": "MDQ6VXNlcjU2NzQ1OTc=", "avatar_url": "https://avatars2.githubusercontent.com/u/5674597?v=4", "gravatar_id": "", "url": "https://api.github.com/users/SsnL", "html_url": "https://github.com/SsnL", "followers_url": "https://api.github.com/users/SsnL/followers", "following_url": "https://api.github.com/users/SsnL/following{/other_user}", "gists_url": "https://api.github.com/users/SsnL/gists{/gist_id}", "starred_url": "https://api.github.com/users/SsnL/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/SsnL/subscriptions", "organizations_url": "https://api.github.com/users/SsnL/orgs", "repos_url": "https://api.github.com/users/SsnL/repos", "events_url": "https://api.github.com/users/SsnL/events{/privacy}", "received_events_url": "https://api.github.com/users/SsnL/received_events", "type": "User", "site_admin": false}, "body": "Correct me if I'm wrong, but I don't think that `keys()` is necessarily ordered in the same way as `values()`. Could you do instead \r\n```python\r\nkeys = tuple(out.keys())\r\nreturn dict([(k, gather_map([d[k] for d in outputs])) for k in keys])\r\n```", "created_at": "2018-02-01T20:57:03Z", "updated_at": "2018-11-23T15:38:56Z", "html_url": "https://github.com/pytorch/pytorch/pull/2511#discussion_r165485175", "pull_request_url": "https://api.github.com/repos/pytorch/pytorch/pulls/2511", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/165485175"}, "html": {"href": "https://github.com/pytorch/pytorch/pull/2511#discussion_r165485175"}, "pull_request": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/2511"}}, "body_html": "<p>Correct me if I'm wrong, but I don't think that <code>keys()</code> is necessarily ordered in the same way as <code>values()</code>. Could you do instead</p>\n<div class=\"highlight highlight-source-python\"><pre>keys <span class=\"pl-k\">=</span> <span class=\"pl-c1\">tuple</span>(out.keys())\n<span class=\"pl-k\">return</span> <span class=\"pl-c1\">dict</span>([(k, gather_map([d[k] <span class=\"pl-k\">for</span> d <span class=\"pl-k\">in</span> outputs])) <span class=\"pl-k\">for</span> k <span class=\"pl-k\">in</span> keys])</pre></div>", "body_text": "Correct me if I'm wrong, but I don't think that keys() is necessarily ordered in the same way as values(). Could you do instead\nkeys = tuple(out.keys())\nreturn dict([(k, gather_map([d[k] for d in outputs])) for k in keys])"}