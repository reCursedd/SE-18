{"url": "https://api.github.com/repos/pytorch/pytorch/issues/comments/421416635", "html_url": "https://github.com/pytorch/pytorch/pull/11689#issuecomment-421416635", "issue_url": "https://api.github.com/repos/pytorch/pytorch/issues/11689", "id": 421416635, "node_id": "MDEyOklzc3VlQ29tbWVudDQyMTQxNjYzNQ==", "user": {"login": "ezyang", "id": 13564, "node_id": "MDQ6VXNlcjEzNTY0", "avatar_url": "https://avatars0.githubusercontent.com/u/13564?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ezyang", "html_url": "https://github.com/ezyang", "followers_url": "https://api.github.com/users/ezyang/followers", "following_url": "https://api.github.com/users/ezyang/following{/other_user}", "gists_url": "https://api.github.com/users/ezyang/gists{/gist_id}", "starred_url": "https://api.github.com/users/ezyang/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ezyang/subscriptions", "organizations_url": "https://api.github.com/users/ezyang/orgs", "repos_url": "https://api.github.com/users/ezyang/repos", "events_url": "https://api.github.com/users/ezyang/events{/privacy}", "received_events_url": "https://api.github.com/users/ezyang/received_events", "type": "User", "site_admin": false}, "created_at": "2018-09-14T16:42:35Z", "updated_at": "2018-09-14T16:42:35Z", "author_association": "CONTRIBUTOR", "body_html": "<p>So, IIRC, in the new <code>DataPtr</code> world (which is landed), the at::Device (analogous to DeviceOption) is stored directly on the DataPtr. So you don't actually need a way to \"get\" the device ID, you can read it off of at::Device, right? So the only thing you need to do then is to setup the allocators so that they save the device along with the pointer when they return a DataPtr.</p>", "body_text": "So, IIRC, in the new DataPtr world (which is landed), the at::Device (analogous to DeviceOption) is stored directly on the DataPtr. So you don't actually need a way to \"get\" the device ID, you can read it off of at::Device, right? So the only thing you need to do then is to setup the allocators so that they save the device along with the pointer when they return a DataPtr.", "body": "So, IIRC, in the new `DataPtr` world (which is landed), the at::Device (analogous to DeviceOption) is stored directly on the DataPtr. So you don't actually need a way to \"get\" the device ID, you can read it off of at::Device, right? So the only thing you need to do then is to setup the allocators so that they save the device along with the pointer when they return a DataPtr."}