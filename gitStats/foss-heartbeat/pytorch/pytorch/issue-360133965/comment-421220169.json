{"url": "https://api.github.com/repos/pytorch/pytorch/issues/comments/421220169", "html_url": "https://github.com/pytorch/pytorch/pull/11689#issuecomment-421220169", "issue_url": "https://api.github.com/repos/pytorch/pytorch/issues/11689", "id": 421220169, "node_id": "MDEyOklzc3VlQ29tbWVudDQyMTIyMDE2OQ==", "user": {"login": "ezyang", "id": 13564, "node_id": "MDQ6VXNlcjEzNTY0", "avatar_url": "https://avatars0.githubusercontent.com/u/13564?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ezyang", "html_url": "https://github.com/ezyang", "followers_url": "https://api.github.com/users/ezyang/followers", "following_url": "https://api.github.com/users/ezyang/following{/other_user}", "gists_url": "https://api.github.com/users/ezyang/gists{/gist_id}", "starred_url": "https://api.github.com/users/ezyang/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ezyang/subscriptions", "organizations_url": "https://api.github.com/users/ezyang/orgs", "repos_url": "https://api.github.com/users/ezyang/repos", "events_url": "https://api.github.com/users/ezyang/events{/privacy}", "received_events_url": "https://api.github.com/users/ezyang/received_events", "type": "User", "site_admin": false}, "created_at": "2018-09-14T03:30:02Z", "updated_at": "2018-09-14T03:30:02Z", "author_association": "CONTRIBUTOR", "body_html": "<blockquote>\n<blockquote>\n<p>Making an entirely new registry for this seems like too much. ISTR we discussed less invasive ways of doing this, such as forward declaring DeviceOption and moving the implementations to the subclasses. Why did this not work?<br>\nby subclass which one do you mean? this is mostly because GetGPUIDFromPointer can only be used in specific files like \"context_gpu.cu\".</p>\n</blockquote>\n</blockquote>\n<p>I don't see GetGPUIDFromPointer in this patch at all. Is there a specific technical problem related to this? I couldn't figure it out from your description.</p>\n<p>By subclass, I mean classes like CUDAStaticContext.</p>\n<p>Stepping back a moment: what's the reason for this patch? I thought the reasoning of this patch was to make Context to stop depending on a type defined in protobuf. Is there another motivation behind the patch as you've authored it?</p>", "body_text": "Making an entirely new registry for this seems like too much. ISTR we discussed less invasive ways of doing this, such as forward declaring DeviceOption and moving the implementations to the subclasses. Why did this not work?\nby subclass which one do you mean? this is mostly because GetGPUIDFromPointer can only be used in specific files like \"context_gpu.cu\".\n\n\nI don't see GetGPUIDFromPointer in this patch at all. Is there a specific technical problem related to this? I couldn't figure it out from your description.\nBy subclass, I mean classes like CUDAStaticContext.\nStepping back a moment: what's the reason for this patch? I thought the reasoning of this patch was to make Context to stop depending on a type defined in protobuf. Is there another motivation behind the patch as you've authored it?", "body": ">> Making an entirely new registry for this seems like too much. ISTR we discussed less invasive ways of doing this, such as forward declaring DeviceOption and moving the implementations to the subclasses. Why did this not work?\r\n> by subclass which one do you mean? this is mostly because GetGPUIDFromPointer can only be used in specific files like \"context_gpu.cu\".\r\n\r\nI don't see GetGPUIDFromPointer in this patch at all. Is there a specific technical problem related to this? I couldn't figure it out from your description.\r\n\r\nBy subclass, I mean classes like CUDAStaticContext.\r\n\r\nStepping back a moment: what's the reason for this patch? I thought the reasoning of this patch was to make Context to stop depending on a type defined in protobuf. Is there another motivation behind the patch as you've authored it?"}