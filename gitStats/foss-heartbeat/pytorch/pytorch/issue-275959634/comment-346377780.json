{"url": "https://api.github.com/repos/pytorch/pytorch/issues/comments/346377780", "html_url": "https://github.com/pytorch/pytorch/issues/3830#issuecomment-346377780", "issue_url": "https://api.github.com/repos/pytorch/pytorch/issues/3830", "id": 346377780, "node_id": "MDEyOklzc3VlQ29tbWVudDM0NjM3Nzc4MA==", "user": {"login": "soumith", "id": 1310570, "node_id": "MDQ6VXNlcjEzMTA1NzA=", "avatar_url": "https://avatars0.githubusercontent.com/u/1310570?v=4", "gravatar_id": "", "url": "https://api.github.com/users/soumith", "html_url": "https://github.com/soumith", "followers_url": "https://api.github.com/users/soumith/followers", "following_url": "https://api.github.com/users/soumith/following{/other_user}", "gists_url": "https://api.github.com/users/soumith/gists{/gist_id}", "starred_url": "https://api.github.com/users/soumith/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/soumith/subscriptions", "organizations_url": "https://api.github.com/users/soumith/orgs", "repos_url": "https://api.github.com/users/soumith/repos", "events_url": "https://api.github.com/users/soumith/events{/privacy}", "received_events_url": "https://api.github.com/users/soumith/received_events", "type": "User", "site_admin": false}, "created_at": "2017-11-22T15:07:54Z", "updated_at": "2017-11-22T15:07:54Z", "author_association": "MEMBER", "body_html": "<p>returning numpy arrays is horribly inefficient, because it goes through the default pickler that is really slow. if you pass around torch.*Tensor, we use a custom pickler that uses system shared memory and runs in a zero copy design.</p>", "body_text": "returning numpy arrays is horribly inefficient, because it goes through the default pickler that is really slow. if you pass around torch.*Tensor, we use a custom pickler that uses system shared memory and runs in a zero copy design.", "body": "returning numpy arrays is horribly inefficient, because it goes through the default pickler that is really slow. if you pass around torch.*Tensor, we use a custom pickler that uses system shared memory and runs in a zero copy design. "}