{"url": "https://api.github.com/repos/pytorch/pytorch/issues/3830", "repository_url": "https://api.github.com/repos/pytorch/pytorch", "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/3830/labels{/name}", "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/3830/comments", "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/3830/events", "html_url": "https://github.com/pytorch/pytorch/issues/3830", "id": 275959634, "node_id": "MDU6SXNzdWUyNzU5NTk2MzQ=", "number": 3830, "title": "DataLoader for Numpy datasets", "user": {"login": "stepelu", "id": 6617696, "node_id": "MDQ6VXNlcjY2MTc2OTY=", "avatar_url": "https://avatars3.githubusercontent.com/u/6617696?v=4", "gravatar_id": "", "url": "https://api.github.com/users/stepelu", "html_url": "https://github.com/stepelu", "followers_url": "https://api.github.com/users/stepelu/followers", "following_url": "https://api.github.com/users/stepelu/following{/other_user}", "gists_url": "https://api.github.com/users/stepelu/gists{/gist_id}", "starred_url": "https://api.github.com/users/stepelu/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/stepelu/subscriptions", "organizations_url": "https://api.github.com/users/stepelu/orgs", "repos_url": "https://api.github.com/users/stepelu/repos", "events_url": "https://api.github.com/users/stepelu/events{/privacy}", "received_events_url": "https://api.github.com/users/stepelu/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2017-11-22T06:39:21Z", "updated_at": "2017-12-01T21:58:13Z", "closed_at": null, "author_association": "NONE", "body_html": "<p>Currently the DataLoader\u2019s default collate_fn expects the dataset to return Torch tensors.</p>\n<p>Going forward, it makes sense for datasets to be provided by external libraries, instead of being embedded inside of DL frameworks.<br>\nThe observations library is a good step in this direction that provides many datasets.</p>\n<p>It would be nice if PyTorch\u2019s default collate_fn could handle numpy arrays too (returning aggregated versions, still in numpy arrays), as this would make it compatible with that kind of datasets.</p>", "body_text": "Currently the DataLoader\u2019s default collate_fn expects the dataset to return Torch tensors.\nGoing forward, it makes sense for datasets to be provided by external libraries, instead of being embedded inside of DL frameworks.\nThe observations library is a good step in this direction that provides many datasets.\nIt would be nice if PyTorch\u2019s default collate_fn could handle numpy arrays too (returning aggregated versions, still in numpy arrays), as this would make it compatible with that kind of datasets.", "body": "Currently the DataLoader\u2019s default collate_fn expects the dataset to return Torch tensors.\r\n\r\nGoing forward, it makes sense for datasets to be provided by external libraries, instead of being embedded inside of DL frameworks.\r\nThe observations library is a good step in this direction that provides many datasets.\r\n\r\nIt would be nice if PyTorch\u2019s default collate_fn could handle numpy arrays too (returning aggregated versions, still in numpy arrays), as this would make it compatible with that kind of datasets."}