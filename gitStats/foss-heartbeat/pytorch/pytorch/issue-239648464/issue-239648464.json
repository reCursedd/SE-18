{"url": "https://api.github.com/repos/pytorch/pytorch/issues/1952", "repository_url": "https://api.github.com/repos/pytorch/pytorch", "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/1952/labels{/name}", "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/1952/comments", "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/1952/events", "html_url": "https://github.com/pytorch/pytorch/issues/1952", "id": 239648464, "node_id": "MDU6SXNzdWUyMzk2NDg0NjQ=", "number": 1952, "title": "[minor] list(empty tensor) fails", "user": {"login": "vadimkantorov", "id": 1041752, "node_id": "MDQ6VXNlcjEwNDE3NTI=", "avatar_url": "https://avatars0.githubusercontent.com/u/1041752?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vadimkantorov", "html_url": "https://github.com/vadimkantorov", "followers_url": "https://api.github.com/users/vadimkantorov/followers", "following_url": "https://api.github.com/users/vadimkantorov/following{/other_user}", "gists_url": "https://api.github.com/users/vadimkantorov/gists{/gist_id}", "starred_url": "https://api.github.com/users/vadimkantorov/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vadimkantorov/subscriptions", "organizations_url": "https://api.github.com/users/vadimkantorov/orgs", "repos_url": "https://api.github.com/users/vadimkantorov/repos", "events_url": "https://api.github.com/users/vadimkantorov/events{/privacy}", "received_events_url": "https://api.github.com/users/vadimkantorov/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-06-30T00:41:15Z", "updated_at": "2017-07-04T21:29:41Z", "closed_at": "2017-07-04T21:29:41Z", "author_association": "NONE", "body_html": "<p><code>list(empty tensor)</code> fails, while <code>(empty tensor).tolist()</code> is ok. It might be better if they were consistent.</p>\n<div class=\"highlight highlight-source-python\"><pre><span class=\"pl-c1\">list</span>(torch.LongTensor())\n\n<span class=\"pl-c\"><span class=\"pl-c\">#</span>Traceback (most recent call last):</span>\n<span class=\"pl-c\"><span class=\"pl-c\">#</span>  File \"&lt;stdin&gt;\", line 1, in &lt;module&gt;</span>\n<span class=\"pl-c\"><span class=\"pl-c\">#</span>  File \".../torch/tensor.py\", line 149, in __iter__</span>\n<span class=\"pl-c\"><span class=\"pl-c\">#</span>    return iter(map(lambda i: self.select(0, i), _range(self.size(0))))</span>\n<span class=\"pl-c\"><span class=\"pl-c\">#</span>RuntimeError: dimension 0 out of range of 0D tensor at .../torch/lib/TH/generic/THTensor.c:24</span>\n\ntorch.LongTensor().tolist()\n<span class=\"pl-c\"><span class=\"pl-c\">#</span>[]</span></pre></div>", "body_text": "list(empty tensor) fails, while (empty tensor).tolist() is ok. It might be better if they were consistent.\nlist(torch.LongTensor())\n\n#Traceback (most recent call last):\n#  File \"<stdin>\", line 1, in <module>\n#  File \".../torch/tensor.py\", line 149, in __iter__\n#    return iter(map(lambda i: self.select(0, i), _range(self.size(0))))\n#RuntimeError: dimension 0 out of range of 0D tensor at .../torch/lib/TH/generic/THTensor.c:24\n\ntorch.LongTensor().tolist()\n#[]", "body": "`list(empty tensor)` fails, while `(empty tensor).tolist()` is ok. It might be better if they were consistent.\r\n\r\n```python\r\nlist(torch.LongTensor())\r\n\r\n#Traceback (most recent call last):\r\n#  File \"<stdin>\", line 1, in <module>\r\n#  File \".../torch/tensor.py\", line 149, in __iter__\r\n#    return iter(map(lambda i: self.select(0, i), _range(self.size(0))))\r\n#RuntimeError: dimension 0 out of range of 0D tensor at .../torch/lib/TH/generic/THTensor.c:24\r\n\r\ntorch.LongTensor().tolist()\r\n#[]\r\n```"}