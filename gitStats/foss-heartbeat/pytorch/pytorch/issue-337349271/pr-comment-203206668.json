{"url": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/203206668", "pull_request_review_id": 138050662, "id": 203206668, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwMzIwNjY2OA==", "diff_hunk": "@@ -0,0 +1,179 @@\n+#pragma once\n+\n+#include \"caffe2/core/operator.h\"\n+\n+namespace caffe2 {\n+\n+template <typename Context>\n+void adadelta_update(\n+    int N,\n+    const float* w,\n+    const float* g,\n+    const float* h,\n+    const float* d,\n+    float* nw,\n+    float* nh,\n+    float* nd,\n+    float epsilon,\n+    float decay,\n+    const float* lr,\n+    Context* /*context*/) {\n+  for (auto i = 0; i < N; ++i) {\n+    float gi = g[i];\n+    float di = d[i];\n+    float hi = nh[i] = decay * h[i] + (1.0f - decay) * gi * gi;\n+    float ng = (std::sqrt(di + epsilon) / std::sqrt(hi + epsilon)) * gi;\n+    nw[i] = w[i] + lr[0] * ng;\n+    nd[i] = decay * di + (1.0f - decay) * ng * ng;\n+  }\n+}\n+\n+template <typename T, class Context>\n+class AdadeltaOp final : public Operator<Context> {\n+ public:\n+  USE_OPERATOR_CONTEXT_FUNCTIONS;\n+  AdadeltaOp(const OperatorDef& operator_def, Workspace* ws)\n+      : Operator<Context>(operator_def, ws),\n+        epsilon_(OperatorBase::GetSingleArgument<T>(\"epsilon\", 1e-5f)),\n+        decay_(OperatorBase::GetSingleArgument<T>(\"decay\", 0.95f)) {}\n+\n+  bool RunOnDevice() override {\n+    CAFFE_ENFORCE(Input(GRAD).size() == Input(MOMENT_GRAD).size());\n+    CAFFE_ENFORCE(Input(GRAD).size() == Input(MOMENT_DELTA).size());\n+    CAFFE_ENFORCE(Input(GRAD).size() == Input(PARAM).size());\n+    CAFFE_ENFORCE_GE(static_cast<T>(epsilon_), 0.0f);\n+    CAFFE_ENFORCE_GT(static_cast<T>(decay_), 0.0f);\n+    CAFFE_ENFORCE_LT(static_cast<T>(decay_), 1.0f);\n+\n+    Output(OUTPUT_PARAM)->ResizeLike(Input(PARAM));\n+    Output(OUTPUT_MOMENT_GRAD)->ResizeLike(Input(MOMENT_GRAD));\n+    Output(OUTPUT_MOMENT_DELTA)->ResizeLike(Input(MOMENT_DELTA));\n+    adadelta_update<Context>(\n+        Input(GRAD).size(),\n+        Input(PARAM).template data<T>(),\n+        Input(GRAD).template data<T>(),\n+        Input(MOMENT_GRAD).template data<T>(),\n+        Input(MOMENT_DELTA).template data<T>(),\n+        Output(OUTPUT_PARAM)->template mutable_data<T>(),\n+        Output(OUTPUT_MOMENT_GRAD)->template mutable_data<T>(),\n+        Output(OUTPUT_MOMENT_DELTA)->template mutable_data<T>(),\n+        epsilon_,\n+        decay_,\n+        Input(LR).template data<T>(),\n+        &context_);\n+    return true;\n+  }\n+\n+ protected:\n+  T epsilon_;\n+  T decay_;", "path": "caffe2/sgd/adadelta_op.h", "position": null, "original_position": 69, "commit_id": "c1bec97c4308dabee966c9b488f6d4863dba6fa5", "original_commit_id": "92f3b6d535fcadf55a7e60c862887e0309906883", "user": {"login": "sidgoyal78", "id": 6762570, "node_id": "MDQ6VXNlcjY3NjI1NzA=", "avatar_url": "https://avatars1.githubusercontent.com/u/6762570?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sidgoyal78", "html_url": "https://github.com/sidgoyal78", "followers_url": "https://api.github.com/users/sidgoyal78/followers", "following_url": "https://api.github.com/users/sidgoyal78/following{/other_user}", "gists_url": "https://api.github.com/users/sidgoyal78/gists{/gist_id}", "starred_url": "https://api.github.com/users/sidgoyal78/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sidgoyal78/subscriptions", "organizations_url": "https://api.github.com/users/sidgoyal78/orgs", "repos_url": "https://api.github.com/users/sidgoyal78/repos", "events_url": "https://api.github.com/users/sidgoyal78/events{/privacy}", "received_events_url": "https://api.github.com/users/sidgoyal78/received_events", "type": "User", "site_admin": false}, "body": "Done.", "created_at": "2018-07-17T22:54:29Z", "updated_at": "2018-11-23T15:47:36Z", "html_url": "https://github.com/pytorch/pytorch/pull/9088#discussion_r203206668", "pull_request_url": "https://api.github.com/repos/pytorch/pytorch/pulls/9088", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/203206668"}, "html": {"href": "https://github.com/pytorch/pytorch/pull/9088#discussion_r203206668"}, "pull_request": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/9088"}}, "body_html": "<p>Done.</p>", "body_text": "Done.", "in_reply_to_id": 202783077}