{"url": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/203209223", "pull_request_review_id": 138050662, "id": 203209223, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwMzIwOTIyMw==", "diff_hunk": "@@ -0,0 +1,179 @@\n+#pragma once\n+\n+#include \"caffe2/core/operator.h\"\n+\n+namespace caffe2 {\n+\n+template <typename Context>\n+void adadelta_update(\n+    int N,\n+    const float* w,\n+    const float* g,\n+    const float* h,\n+    const float* d,\n+    float* nw,\n+    float* nh,\n+    float* nd,\n+    float epsilon,\n+    float decay,\n+    const float* lr,\n+    Context* /*context*/) {\n+  for (auto i = 0; i < N; ++i) {", "path": "caffe2/sgd/adadelta_op.h", "position": null, "original_position": 21, "commit_id": "c1bec97c4308dabee966c9b488f6d4863dba6fa5", "original_commit_id": "92f3b6d535fcadf55a7e60c862887e0309906883", "user": {"login": "sidgoyal78", "id": 6762570, "node_id": "MDQ6VXNlcjY3NjI1NzA=", "avatar_url": "https://avatars1.githubusercontent.com/u/6762570?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sidgoyal78", "html_url": "https://github.com/sidgoyal78", "followers_url": "https://api.github.com/users/sidgoyal78/followers", "following_url": "https://api.github.com/users/sidgoyal78/following{/other_user}", "gists_url": "https://api.github.com/users/sidgoyal78/gists{/gist_id}", "starred_url": "https://api.github.com/users/sidgoyal78/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sidgoyal78/subscriptions", "organizations_url": "https://api.github.com/users/sidgoyal78/orgs", "repos_url": "https://api.github.com/users/sidgoyal78/repos", "events_url": "https://api.github.com/users/sidgoyal78/events{/privacy}", "received_events_url": "https://api.github.com/users/sidgoyal78/received_events", "type": "User", "site_admin": false}, "body": "I tried writing down like that:\r\n```\r\n  ConstEigenVectorArrayMap<float> w_arr(w, N);\r\n  ConstEigenVectorArrayMap<float> g_arr(g, N);\r\n  ConstEigenVectorArrayMap<float> h_arr(h, N);\r\n  ConstEigenVectorArrayMap<float> d_arr(d, N);\r\n  EigenVectorArrayMap<float> ng_arr(nw, N);\r\n  EigenVectorMap<float>(nh, N) =\r\n      decay * h_arr + (1.0f - decay) * g_arr.square();\r\n  ng_arr = (d_arr + epsilon).sqrt() * (h_arr + epsilon).rsqrt() * g_arr;\r\n  EigenVectorMap<float>(nw, N) = w_arr + lr[0] * ng_arr;\r\n  EigenVectorMap<float>(nd, N) =\r\n      decay * d_arr + (1.0f - decay) * ng_arr.square();\r\n```\r\nBut using Eigen, the tests don't pass. I think Andrey had also suggested doing this but probably in another diff. So probably we can move eigen based implementation for later.", "created_at": "2018-07-17T23:09:19Z", "updated_at": "2018-11-23T15:47:37Z", "html_url": "https://github.com/pytorch/pytorch/pull/9088#discussion_r203209223", "pull_request_url": "https://api.github.com/repos/pytorch/pytorch/pulls/9088", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/203209223"}, "html": {"href": "https://github.com/pytorch/pytorch/pull/9088#discussion_r203209223"}, "pull_request": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/9088"}}, "body_html": "<p>I tried writing down like that:</p>\n<pre><code>  ConstEigenVectorArrayMap&lt;float&gt; w_arr(w, N);\n  ConstEigenVectorArrayMap&lt;float&gt; g_arr(g, N);\n  ConstEigenVectorArrayMap&lt;float&gt; h_arr(h, N);\n  ConstEigenVectorArrayMap&lt;float&gt; d_arr(d, N);\n  EigenVectorArrayMap&lt;float&gt; ng_arr(nw, N);\n  EigenVectorMap&lt;float&gt;(nh, N) =\n      decay * h_arr + (1.0f - decay) * g_arr.square();\n  ng_arr = (d_arr + epsilon).sqrt() * (h_arr + epsilon).rsqrt() * g_arr;\n  EigenVectorMap&lt;float&gt;(nw, N) = w_arr + lr[0] * ng_arr;\n  EigenVectorMap&lt;float&gt;(nd, N) =\n      decay * d_arr + (1.0f - decay) * ng_arr.square();\n</code></pre>\n<p>But using Eigen, the tests don't pass. I think Andrey had also suggested doing this but probably in another diff. So probably we can move eigen based implementation for later.</p>", "body_text": "I tried writing down like that:\n  ConstEigenVectorArrayMap<float> w_arr(w, N);\n  ConstEigenVectorArrayMap<float> g_arr(g, N);\n  ConstEigenVectorArrayMap<float> h_arr(h, N);\n  ConstEigenVectorArrayMap<float> d_arr(d, N);\n  EigenVectorArrayMap<float> ng_arr(nw, N);\n  EigenVectorMap<float>(nh, N) =\n      decay * h_arr + (1.0f - decay) * g_arr.square();\n  ng_arr = (d_arr + epsilon).sqrt() * (h_arr + epsilon).rsqrt() * g_arr;\n  EigenVectorMap<float>(nw, N) = w_arr + lr[0] * ng_arr;\n  EigenVectorMap<float>(nd, N) =\n      decay * d_arr + (1.0f - decay) * ng_arr.square();\n\nBut using Eigen, the tests don't pass. I think Andrey had also suggested doing this but probably in another diff. So probably we can move eigen based implementation for later.", "in_reply_to_id": 202787301}