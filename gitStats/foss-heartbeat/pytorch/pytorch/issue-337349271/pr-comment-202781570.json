{"url": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/202781570", "pull_request_review_id": 137544643, "id": 202781570, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwMjc4MTU3MA==", "diff_hunk": "@@ -0,0 +1,168 @@\n+#include \"adadelta_op.h\"\n+#include \"caffe2/core/common_gpu.h\"\n+#include \"caffe2/core/context_gpu.h\"\n+#include \"caffe2/utils/mixed_utils.h\"\n+\n+namespace caffe2 {\n+\n+__global__ void AdadeltaUpdate(\n+    int N,\n+    const float* w,\n+    const float* g,\n+    const float* h,\n+    const float* d,\n+    float* nw,\n+    float* nh,\n+    float* nd,\n+    float epsilon,\n+    float decay,\n+    const float* lr) {\n+  CUDA_1D_KERNEL_LOOP(i, N) {\n+    float gi = g[i];\n+    float di = d[i];\n+    float hi = nh[i] = decay * h[i] + (1.0f - decay) * gi * gi;\n+    float ng = (std::sqrt(di + epsilon) / std::sqrt(hi + epsilon)) * gi;", "path": "caffe2/sgd/adadelta_op_gpu.cu", "position": null, "original_position": 24, "commit_id": "c1bec97c4308dabee966c9b488f6d4863dba6fa5", "original_commit_id": "92f3b6d535fcadf55a7e60c862887e0309906883", "user": {"login": "BIT-silence", "id": 3357667, "node_id": "MDQ6VXNlcjMzNTc2Njc=", "avatar_url": "https://avatars0.githubusercontent.com/u/3357667?v=4", "gravatar_id": "", "url": "https://api.github.com/users/BIT-silence", "html_url": "https://github.com/BIT-silence", "followers_url": "https://api.github.com/users/BIT-silence/followers", "following_url": "https://api.github.com/users/BIT-silence/following{/other_user}", "gists_url": "https://api.github.com/users/BIT-silence/gists{/gist_id}", "starred_url": "https://api.github.com/users/BIT-silence/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/BIT-silence/subscriptions", "organizations_url": "https://api.github.com/users/BIT-silence/orgs", "repos_url": "https://api.github.com/users/BIT-silence/repos", "events_url": "https://api.github.com/users/BIT-silence/events{/privacy}", "received_events_url": "https://api.github.com/users/BIT-silence/received_events", "type": "User", "site_admin": false}, "body": "Please do not use std:: functions in kernel. Please use sqrtf and rsqrtf here.\r\nI'd suggest\r\nconst float ng =  sqrtf(__ldg(d + i) + epsilon) * rsqrtf(__ldg(nh + i) + epsilon) * __ldg(g + i);", "created_at": "2018-07-16T18:37:55Z", "updated_at": "2018-11-23T15:47:28Z", "html_url": "https://github.com/pytorch/pytorch/pull/9088#discussion_r202781570", "pull_request_url": "https://api.github.com/repos/pytorch/pytorch/pulls/9088", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/202781570"}, "html": {"href": "https://github.com/pytorch/pytorch/pull/9088#discussion_r202781570"}, "pull_request": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/9088"}}, "body_html": "<p>Please do not use std:: functions in kernel. Please use sqrtf and rsqrtf here.<br>\nI'd suggest<br>\nconst float ng =  sqrtf(__ldg(d + i) + epsilon) * rsqrtf(__ldg(nh + i) + epsilon) * __ldg(g + i);</p>", "body_text": "Please do not use std:: functions in kernel. Please use sqrtf and rsqrtf here.\nI'd suggest\nconst float ng =  sqrtf(__ldg(d + i) + epsilon) * rsqrtf(__ldg(nh + i) + epsilon) * __ldg(g + i);"}