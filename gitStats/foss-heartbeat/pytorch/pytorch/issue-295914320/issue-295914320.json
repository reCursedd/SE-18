{"url": "https://api.github.com/repos/pytorch/pytorch/issues/5156", "repository_url": "https://api.github.com/repos/pytorch/pytorch", "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/5156/labels{/name}", "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/5156/comments", "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/5156/events", "html_url": "https://github.com/pytorch/pytorch/issues/5156", "id": 295914320, "node_id": "MDU6SXNzdWUyOTU5MTQzMjA=", "number": 5156, "title": "confusing docs for `add` and maybe some other functions", "user": {"login": "zym1010", "id": 4273204, "node_id": "MDQ6VXNlcjQyNzMyMDQ=", "avatar_url": "https://avatars3.githubusercontent.com/u/4273204?v=4", "gravatar_id": "", "url": "https://api.github.com/users/zym1010", "html_url": "https://github.com/zym1010", "followers_url": "https://api.github.com/users/zym1010/followers", "following_url": "https://api.github.com/users/zym1010/following{/other_user}", "gists_url": "https://api.github.com/users/zym1010/gists{/gist_id}", "starred_url": "https://api.github.com/users/zym1010/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/zym1010/subscriptions", "organizations_url": "https://api.github.com/users/zym1010/orgs", "repos_url": "https://api.github.com/users/zym1010/repos", "events_url": "https://api.github.com/users/zym1010/events{/privacy}", "received_events_url": "https://api.github.com/users/zym1010/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 9, "created_at": "2018-02-09T15:45:13Z", "updated_at": "2018-02-12T20:33:13Z", "closed_at": "2018-02-09T18:32:51Z", "author_association": "CONTRIBUTOR", "body_html": "<p>in <a href=\"http://pytorch.org/docs/master/torch.html#torch.add\" rel=\"nofollow\">http://pytorch.org/docs/master/torch.html#torch.add</a>, there are two overloaded variations.</p>\n<ul>\n<li><code>torch.add(input, value, out=None)</code></li>\n<li><code>torch.add(input, value=1, other, out=None)</code></li>\n</ul>\n<p>But in practice I believe there are more, as shown in the error message below, by trying <code>torch.add(a,b,c)</code>, where all three are <code>FloatTensor</code> of the same shape.</p>\n<pre><code>TypeError: torch.add received an invalid combination of arguments - got (torch.FloatTensor, torch.FloatTensor, torch.FloatTensor), bu\nt expected one of:\n * (torch.FloatTensor source, float value)\n * (torch.FloatTensor source, torch.FloatTensor other)\n * (torch.FloatTensor source, torch.SparseFloatTensor other)\n * (torch.FloatTensor source, float value, torch.FloatTensor other)\n      didn't match because some of the arguments have invalid types: (torch.FloatTensor, torch.FloatTensor, torch.FloatTensor)\n * (torch.FloatTensor source, float value, torch.SparseFloatTensor other)\n      didn't match because some of the arguments have invalid types: (torch.FloatTensor, torch.FloatTensor, torch.FloatTensor)\n</code></pre>\n<p>also, my test seems to suggest that <code>out</code> is a keyword-only argument. Otherwise, how can the library tell apart the two variations in the doc?</p>", "body_text": "in http://pytorch.org/docs/master/torch.html#torch.add, there are two overloaded variations.\n\ntorch.add(input, value, out=None)\ntorch.add(input, value=1, other, out=None)\n\nBut in practice I believe there are more, as shown in the error message below, by trying torch.add(a,b,c), where all three are FloatTensor of the same shape.\nTypeError: torch.add received an invalid combination of arguments - got (torch.FloatTensor, torch.FloatTensor, torch.FloatTensor), bu\nt expected one of:\n * (torch.FloatTensor source, float value)\n * (torch.FloatTensor source, torch.FloatTensor other)\n * (torch.FloatTensor source, torch.SparseFloatTensor other)\n * (torch.FloatTensor source, float value, torch.FloatTensor other)\n      didn't match because some of the arguments have invalid types: (torch.FloatTensor, torch.FloatTensor, torch.FloatTensor)\n * (torch.FloatTensor source, float value, torch.SparseFloatTensor other)\n      didn't match because some of the arguments have invalid types: (torch.FloatTensor, torch.FloatTensor, torch.FloatTensor)\n\nalso, my test seems to suggest that out is a keyword-only argument. Otherwise, how can the library tell apart the two variations in the doc?", "body": "in <http://pytorch.org/docs/master/torch.html#torch.add>, there are two overloaded variations.\r\n\r\n* `torch.add(input, value, out=None)`\r\n* `torch.add(input, value=1, other, out=None)`\r\n\r\nBut in practice I believe there are more, as shown in the error message below, by trying `torch.add(a,b,c)`, where all three are `FloatTensor` of the same shape.\r\n\r\n~~~\r\nTypeError: torch.add received an invalid combination of arguments - got (torch.FloatTensor, torch.FloatTensor, torch.FloatTensor), bu\r\nt expected one of:\r\n * (torch.FloatTensor source, float value)\r\n * (torch.FloatTensor source, torch.FloatTensor other)\r\n * (torch.FloatTensor source, torch.SparseFloatTensor other)\r\n * (torch.FloatTensor source, float value, torch.FloatTensor other)\r\n      didn't match because some of the arguments have invalid types: (torch.FloatTensor, torch.FloatTensor, torch.FloatTensor)\r\n * (torch.FloatTensor source, float value, torch.SparseFloatTensor other)\r\n      didn't match because some of the arguments have invalid types: (torch.FloatTensor, torch.FloatTensor, torch.FloatTensor)\r\n~~~\r\n\r\nalso, my test seems to suggest that `out` is a keyword-only argument. Otherwise, how can the library tell apart the two variations in the doc?"}