{"url": "https://api.github.com/repos/pytorch/pytorch/issues/comments/365052847", "html_url": "https://github.com/pytorch/pytorch/issues/5156#issuecomment-365052847", "issue_url": "https://api.github.com/repos/pytorch/pytorch/issues/5156", "id": 365052847, "node_id": "MDEyOklzc3VlQ29tbWVudDM2NTA1Mjg0Nw==", "user": {"login": "zym1010", "id": 4273204, "node_id": "MDQ6VXNlcjQyNzMyMDQ=", "avatar_url": "https://avatars3.githubusercontent.com/u/4273204?v=4", "gravatar_id": "", "url": "https://api.github.com/users/zym1010", "html_url": "https://github.com/zym1010", "followers_url": "https://api.github.com/users/zym1010/followers", "following_url": "https://api.github.com/users/zym1010/following{/other_user}", "gists_url": "https://api.github.com/users/zym1010/gists{/gist_id}", "starred_url": "https://api.github.com/users/zym1010/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/zym1010/subscriptions", "organizations_url": "https://api.github.com/users/zym1010/orgs", "repos_url": "https://api.github.com/users/zym1010/repos", "events_url": "https://api.github.com/users/zym1010/events{/privacy}", "received_events_url": "https://api.github.com/users/zym1010/received_events", "type": "User", "site_admin": false}, "created_at": "2018-02-12T20:33:13Z", "updated_at": "2018-02-12T20:33:13Z", "author_association": "CONTRIBUTOR", "body_html": "<blockquote>\n<p>If you do this, the first two overloads are identical</p>\n</blockquote>\n<p>So I think it's easier to replace the current first overload with <code>torch.add(input, other, out=None)</code>, add specify that <code>other</code> can be both a <code>Number</code> or <code>Tensor</code>.</p>", "body_text": "If you do this, the first two overloads are identical\n\nSo I think it's easier to replace the current first overload with torch.add(input, other, out=None), add specify that other can be both a Number or Tensor.", "body": "> If you do this, the first two overloads are identical\r\n\r\nSo I think it's easier to replace the current first overload with `torch.add(input, other, out=None)`, add specify that `other` can be both a `Number` or `Tensor`."}