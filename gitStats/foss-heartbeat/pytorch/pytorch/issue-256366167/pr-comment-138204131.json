{"url": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/138204131", "pull_request_review_id": 61969747, "id": 138204131, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEzODIwNDEzMQ==", "diff_hunk": "@@ -14,9 +14,7 @@ variable_list wrap_outputs(const variable_list& inputs, tensor_list&& outputs,\n   if (flags.is_volatile) {\n     for (auto& output : outputs) {\n       if (output.defined()) {\n-        auto pImpl = new VariableTensor(output);\n-        pImpl->is_volatile = true;\n-        result.emplace_back(pImpl, false);\n+        result.emplace_back(new VariableTensor(output, false, true), false);", "path": "torch/csrc/autograd/functions/utils.cpp", "position": null, "original_position": 7, "commit_id": "e281c83541d5d06a4f149d51bb51ad426813bc56", "original_commit_id": "78fae0164ab0d3de10697a990f34a843c27b3cb1", "user": {"login": "apaszke", "id": 4583066, "node_id": "MDQ6VXNlcjQ1ODMwNjY=", "avatar_url": "https://avatars3.githubusercontent.com/u/4583066?v=4", "gravatar_id": "", "url": "https://api.github.com/users/apaszke", "html_url": "https://github.com/apaszke", "followers_url": "https://api.github.com/users/apaszke/followers", "following_url": "https://api.github.com/users/apaszke/following{/other_user}", "gists_url": "https://api.github.com/users/apaszke/gists{/gist_id}", "starred_url": "https://api.github.com/users/apaszke/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/apaszke/subscriptions", "organizations_url": "https://api.github.com/users/apaszke/orgs", "repos_url": "https://api.github.com/users/apaszke/repos", "events_url": "https://api.github.com/users/apaszke/events{/privacy}", "received_events_url": "https://api.github.com/users/apaszke/received_events", "type": "User", "site_admin": false}, "body": "I don't think this fixes the problem I mentioned. You only got rid of this temporary assignment, but this `VariableTensor` can still leak if the vector fails to resize (it has to increase its size before it even creates the VariableTensor. I think the right way to do it would be to construct a `Variable` here, so that it takes ownership of the `VariableTensor`, and only then will be moved into the vector", "created_at": "2017-09-11T22:02:29Z", "updated_at": "2018-11-23T15:34:34Z", "html_url": "https://github.com/pytorch/pytorch/pull/2676#discussion_r138204131", "pull_request_url": "https://api.github.com/repos/pytorch/pytorch/pulls/2676", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/138204131"}, "html": {"href": "https://github.com/pytorch/pytorch/pull/2676#discussion_r138204131"}, "pull_request": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/2676"}}, "body_html": "<p>I don't think this fixes the problem I mentioned. You only got rid of this temporary assignment, but this <code>VariableTensor</code> can still leak if the vector fails to resize (it has to increase its size before it even creates the VariableTensor. I think the right way to do it would be to construct a <code>Variable</code> here, so that it takes ownership of the <code>VariableTensor</code>, and only then will be moved into the vector</p>", "body_text": "I don't think this fixes the problem I mentioned. You only got rid of this temporary assignment, but this VariableTensor can still leak if the vector fails to resize (it has to increase its size before it even creates the VariableTensor. I think the right way to do it would be to construct a Variable here, so that it takes ownership of the VariableTensor, and only then will be moved into the vector"}