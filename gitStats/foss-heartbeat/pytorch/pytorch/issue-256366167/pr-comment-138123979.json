{"url": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/138123979", "pull_request_review_id": 61667278, "id": 138123979, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEzODEyMzk3OQ==", "diff_hunk": "@@ -112,8 +107,87 @@ struct Variable : std::enable_shared_from_this<Variable> {\n \n   // For use in torch::jit::tracer\n   auto_unique_ptr<jit::tracer::ValueTracingState> tracing_state;\n+  friend struct VariableType;\n+};\n+\n+inline Variable::Variable(VariableTensor * self, bool retain) : Tensor(self, retain) {\n+}\n+\n+inline VariableTensor* Variable::get() const {\n+  return static_cast<VariableTensor*>(pImpl);\n+}\n+\n+inline const Tensor & Variable::data() const {\n+  return get()->data;\n+}\n+inline Tensor & Variable::data() {\n+  return get()->data;\n+}\n+\n+inline Tensor Variable::opt_data() const {\n+  if (!defined()) {\n+    return Tensor();\n+  }\n+  return data();\n+}\n+\n+inline const Variable & Variable::grad() const {\n+  return get()->grad;\n+}\n+inline Variable & Variable::grad() {\n+  return get()->grad;\n+}\n+\n+inline const std::shared_ptr<Function>& Variable::grad_fn() const {\n+  return get()->grad_fn;\n+};\n+inline std::shared_ptr<Function>& Variable::grad_fn() {\n+  return get()->grad_fn;\n+};\n+inline std::shared_ptr<Function> Variable::grad_accumulator() const {\n+  return get()->get_grad_accumulator();\n+};\n+\n+inline const std::vector<std::shared_ptr<FunctionPreHook>>& Variable::hooks() const {\n+  return get()->hooks;\n+};\n+inline std::vector<std::shared_ptr<FunctionPreHook>>& Variable::hooks() {\n+  return get()->hooks;\n+};\n+\n+inline auto_unique_ptr<jit::tracer::ValueTracingState>& Variable::tracing_state() const {\n+  return get()->tracing_state;\n };\n \n-using SavedVariable = Variable::SavedVariable;\n+inline int Variable::current_version() const {\n+  return **get()->version_counter;\n+}\n+\n+inline int Variable::output_nr() const {\n+  return get()->output_nr;\n+}\n+\n+inline bool Variable::requires_grad() const {\n+  return get()->requires_grad;\n+}\n+inline void Variable::set_requires_grad(bool requires_grad) {\n+  get()->requires_grad = requires_grad;\n+}\n+\n+inline bool Variable::is_volatile() const {\n+  return get()->is_volatile;\n+}\n+inline void Variable::set_volatile(bool is_volatile) {\n+  get()->is_volatile = is_volatile;\n+}", "path": "torch/csrc/autograd/variable.h", "position": null, "original_position": 244, "commit_id": "e281c83541d5d06a4f149d51bb51ad426813bc56", "original_commit_id": "afa8bdcd28be0147df9cd97286c792e39c2f2608", "user": {"login": "apaszke", "id": 4583066, "node_id": "MDQ6VXNlcjQ1ODMwNjY=", "avatar_url": "https://avatars3.githubusercontent.com/u/4583066?v=4", "gravatar_id": "", "url": "https://api.github.com/users/apaszke", "html_url": "https://github.com/apaszke", "followers_url": "https://api.github.com/users/apaszke/followers", "following_url": "https://api.github.com/users/apaszke/following{/other_user}", "gists_url": "https://api.github.com/users/apaszke/gists{/gist_id}", "starred_url": "https://api.github.com/users/apaszke/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/apaszke/subscriptions", "organizations_url": "https://api.github.com/users/apaszke/orgs", "repos_url": "https://api.github.com/users/apaszke/repos", "events_url": "https://api.github.com/users/apaszke/events{/privacy}", "received_events_url": "https://api.github.com/users/apaszke/received_events", "type": "User", "site_admin": false}, "body": "wouldn't it be nicer to return references from `requires_grad` and `is_volatile`?", "created_at": "2017-09-11T16:36:37Z", "updated_at": "2018-11-23T15:34:33Z", "html_url": "https://github.com/pytorch/pytorch/pull/2676#discussion_r138123979", "pull_request_url": "https://api.github.com/repos/pytorch/pytorch/pulls/2676", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/138123979"}, "html": {"href": "https://github.com/pytorch/pytorch/pull/2676#discussion_r138123979"}, "pull_request": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/2676"}}, "body_html": "<p>wouldn't it be nicer to return references from <code>requires_grad</code> and <code>is_volatile</code>?</p>", "body_text": "wouldn't it be nicer to return references from requires_grad and is_volatile?"}