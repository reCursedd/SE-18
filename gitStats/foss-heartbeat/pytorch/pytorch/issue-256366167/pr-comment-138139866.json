{"url": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/138139866", "pull_request_review_id": 61897386, "id": 138139866, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEzODEzOTg2Ng==", "diff_hunk": "@@ -11,19 +11,23 @@\n #include \"torch/csrc/cuda/AutoGPU.h\"\n #include \"torch/csrc/utils/auto_gil.h\"\n #include \"torch/csrc/Exceptions.h\"\n+#include \"torch/csrc/autograd/variable.h\"\n \n \n+using namespace at;\n using namespace torch::autograd;\n \n PyObject *THPVariableClass = NULL;\n \n-static PyObject* THPVariable_NewWithVar(PyTypeObject* type, std::shared_ptr<Variable> var)\n+static PyObject* THPVariable_NewWithVar(PyTypeObject* type, const Variable& var)\n {\n   PyObject* obj = type->tp_alloc(type, 0);\n   if (obj) {\n     auto v = (THPVariable*) obj;\n-    new (&v->cdata) std::shared_ptr<Variable>(std::move(var));\n-    if (auto fn = dynamic_cast<PyFunction*>(v->cdata->grad_fn.get())) {\n+    v->cdata = var.get();\n+    v->cdata->retain();\n+    v->cdata->pyobj = obj;", "path": "torch/csrc/autograd/python_variable.cpp", "position": null, "original_position": 22, "commit_id": "e281c83541d5d06a4f149d51bb51ad426813bc56", "original_commit_id": "afa8bdcd28be0147df9cd97286c792e39c2f2608", "user": {"login": "colesbury", "id": 655866, "node_id": "MDQ6VXNlcjY1NTg2Ng==", "avatar_url": "https://avatars1.githubusercontent.com/u/655866?v=4", "gravatar_id": "", "url": "https://api.github.com/users/colesbury", "html_url": "https://github.com/colesbury", "followers_url": "https://api.github.com/users/colesbury/followers", "following_url": "https://api.github.com/users/colesbury/following{/other_user}", "gists_url": "https://api.github.com/users/colesbury/gists{/gist_id}", "starred_url": "https://api.github.com/users/colesbury/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/colesbury/subscriptions", "organizations_url": "https://api.github.com/users/colesbury/orgs", "repos_url": "https://api.github.com/users/colesbury/repos", "events_url": "https://api.github.com/users/colesbury/events{/privacy}", "received_events_url": "https://api.github.com/users/colesbury/received_events", "type": "User", "site_admin": false}, "body": "I've added a comment. We've had the invariant for a while that every Variable has only one Python wrapper associated with it (or no wrapper).", "created_at": "2017-09-11T17:39:30Z", "updated_at": "2018-11-23T15:34:34Z", "html_url": "https://github.com/pytorch/pytorch/pull/2676#discussion_r138139866", "pull_request_url": "https://api.github.com/repos/pytorch/pytorch/pulls/2676", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/138139866"}, "html": {"href": "https://github.com/pytorch/pytorch/pull/2676#discussion_r138139866"}, "pull_request": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/2676"}}, "body_html": "<p>I've added a comment. We've had the invariant for a while that every Variable has only one Python wrapper associated with it (or no wrapper).</p>", "body_text": "I've added a comment. We've had the invariant for a while that every Variable has only one Python wrapper associated with it (or no wrapper).", "in_reply_to_id": 138114792}