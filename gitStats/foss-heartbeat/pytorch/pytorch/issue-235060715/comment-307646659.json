{"url": "https://api.github.com/repos/pytorch/pytorch/issues/comments/307646659", "html_url": "https://github.com/pytorch/pytorch/issues/1774#issuecomment-307646659", "issue_url": "https://api.github.com/repos/pytorch/pytorch/issues/1774", "id": 307646659, "node_id": "MDEyOklzc3VlQ29tbWVudDMwNzY0NjY1OQ==", "user": {"login": "fmassa", "id": 9110200, "node_id": "MDQ6VXNlcjkxMTAyMDA=", "avatar_url": "https://avatars2.githubusercontent.com/u/9110200?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fmassa", "html_url": "https://github.com/fmassa", "followers_url": "https://api.github.com/users/fmassa/followers", "following_url": "https://api.github.com/users/fmassa/following{/other_user}", "gists_url": "https://api.github.com/users/fmassa/gists{/gist_id}", "starred_url": "https://api.github.com/users/fmassa/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fmassa/subscriptions", "organizations_url": "https://api.github.com/users/fmassa/orgs", "repos_url": "https://api.github.com/users/fmassa/repos", "events_url": "https://api.github.com/users/fmassa/events{/privacy}", "received_events_url": "https://api.github.com/users/fmassa/received_events", "type": "User", "site_admin": false}, "created_at": "2017-06-11T18:13:39Z", "updated_at": "2017-06-11T18:13:39Z", "author_association": "MEMBER", "body_html": "<p>The C/Cuda implementation can be found in <code>libs/THNN</code> and <code>libs/THCUNN</code>, which are automatically wrapped in python via <code>torch/nn/_functions/thnn/auto.py</code>. If the function can be trivially implemented using autograd, the implementation could go to <code>torch/nn/functional</code>, followed by a wrapper in the modules. If you want to write the backprop by hand and in python (for example for optimization reasons), then you could write it in <code>torch/nn/_functions/loss.py</code> for example.</p>", "body_text": "The C/Cuda implementation can be found in libs/THNN and libs/THCUNN, which are automatically wrapped in python via torch/nn/_functions/thnn/auto.py. If the function can be trivially implemented using autograd, the implementation could go to torch/nn/functional, followed by a wrapper in the modules. If you want to write the backprop by hand and in python (for example for optimization reasons), then you could write it in torch/nn/_functions/loss.py for example.", "body": "The C/Cuda implementation can be found in `libs/THNN` and `libs/THCUNN`, which are automatically wrapped in python via `torch/nn/_functions/thnn/auto.py`. If the function can be trivially implemented using autograd, the implementation could go to `torch/nn/functional`, followed by a wrapper in the modules. If you want to write the backprop by hand and in python (for example for optimization reasons), then you could write it in `torch/nn/_functions/loss.py` for example."}