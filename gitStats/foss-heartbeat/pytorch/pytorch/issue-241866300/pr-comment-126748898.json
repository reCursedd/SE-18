{"url": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/126748898", "pull_request_review_id": 49262727, "id": 126748898, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEyNjc0ODg5OA==", "diff_hunk": "@@ -202,20 +202,20 @@ def normfn_attr(t, dim, keepdim=False):\n             fn_attr = getattr(torch, fn_name) if fn_name != \"norm\" else normfn_attr\n \n             def fn(t, dim, keepdim=False):\n-                ans = fn_attr(x, dim, keepdim)\n+                ans = fn_attr(x, dim, keepdim=keepdim)\n                 return ans if not isinstance(ans, tuple) else ans[0]\n \n             dim = random.randint(0, 2)\n-            self.assertEqual(fn(x, dim).unsqueeze(dim), fn(x, dim, True))\n+            self.assertEqual(fn(x, dim).unsqueeze(dim), fn(x, dim, keepdim=True))\n             self.assertEqual(x.ndimension() - 1, fn(x, dim).ndimension())\n-            self.assertEqual(x.ndimension(), fn(x, dim, True).ndimension())\n+            self.assertEqual(x.ndimension(), fn(x, dim, keepdim=True).ndimension())\n \n             # check 1-d behavior\n             x = torch.randn(1)\n             dim = 0\n-            self.assertEqual(fn(x, dim), fn(x, dim, True))\n+            self.assertEqual(fn(x, dim), fn(x, dim, keepdim=True))\n             self.assertEqual(x.ndimension(), fn(x, dim).ndimension())\n-            self.assertEqual(x.ndimension(), fn(x, dim, True).ndimension())\n+            self.assertEqual(x.ndimension(), fn(x, dim, keepdim=True).ndimension())", "path": "test/test_torch.py", "position": 22, "original_position": 22, "commit_id": "07b9aefa3da05f3ef108110cff0d9ebe43ab1b7a", "original_commit_id": "db5c110cb8e895891b5275ffa79c44b1162f2aca", "user": {"login": "apaszke", "id": 4583066, "node_id": "MDQ6VXNlcjQ1ODMwNjY=", "avatar_url": "https://avatars3.githubusercontent.com/u/4583066?v=4", "gravatar_id": "", "url": "https://api.github.com/users/apaszke", "html_url": "https://github.com/apaszke", "followers_url": "https://api.github.com/users/apaszke/followers", "following_url": "https://api.github.com/users/apaszke/following{/other_user}", "gists_url": "https://api.github.com/users/apaszke/gists{/gist_id}", "starred_url": "https://api.github.com/users/apaszke/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/apaszke/subscriptions", "organizations_url": "https://api.github.com/users/apaszke/orgs", "repos_url": "https://api.github.com/users/apaszke/repos", "events_url": "https://api.github.com/users/apaszke/events{/privacy}", "received_events_url": "https://api.github.com/users/apaszke/received_events", "type": "User", "site_admin": false}, "body": "how is it possible that the tests were passing without these changes?", "created_at": "2017-07-11T17:00:17Z", "updated_at": "2018-11-23T15:34:04Z", "html_url": "https://github.com/pytorch/pytorch/pull/2043#discussion_r126748898", "pull_request_url": "https://api.github.com/repos/pytorch/pytorch/pulls/2043", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/126748898"}, "html": {"href": "https://github.com/pytorch/pytorch/pull/2043#discussion_r126748898"}, "pull_request": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/2043"}}, "body_html": "<p>how is it possible that the tests were passing without these changes?</p>", "body_text": "how is it possible that the tests were passing without these changes?"}