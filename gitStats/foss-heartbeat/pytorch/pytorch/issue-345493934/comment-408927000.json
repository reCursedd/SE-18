{"url": "https://api.github.com/repos/pytorch/pytorch/issues/comments/408927000", "html_url": "https://github.com/pytorch/pytorch/pull/9979#issuecomment-408927000", "issue_url": "https://api.github.com/repos/pytorch/pytorch/issues/9979", "id": 408927000, "node_id": "MDEyOklzc3VlQ29tbWVudDQwODkyNzAwMA==", "user": {"login": "fmassa", "id": 9110200, "node_id": "MDQ6VXNlcjkxMTAyMDA=", "avatar_url": "https://avatars2.githubusercontent.com/u/9110200?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fmassa", "html_url": "https://github.com/fmassa", "followers_url": "https://api.github.com/users/fmassa/followers", "following_url": "https://api.github.com/users/fmassa/following{/other_user}", "gists_url": "https://api.github.com/users/fmassa/gists{/gist_id}", "starred_url": "https://api.github.com/users/fmassa/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fmassa/subscriptions", "organizations_url": "https://api.github.com/users/fmassa/orgs", "repos_url": "https://api.github.com/users/fmassa/repos", "events_url": "https://api.github.com/users/fmassa/events{/privacy}", "received_events_url": "https://api.github.com/users/fmassa/received_events", "type": "User", "site_admin": false}, "created_at": "2018-07-30T16:33:10Z", "updated_at": "2018-07-30T16:33:10Z", "author_association": "MEMBER", "body_html": "<p>If I understand correctly, only the first layer would accept multiple inputs, while all the other layers would receive a tuple of a single element as input (which can in turn be a tuple), is that right?</p>\n<p>I'm not sure this behavior is very natural. Actually, I'd say it's more consistent to always take a tuple and return a tuple (which is the current behavior btw).</p>\n<p>Ultimately, having anything that takes more than one input depends quite a lot on the application, so I'd rather not have <code>nn.Sequential</code> special-case for one use-case.</p>\n<p>Not sure what the others think about it.</p>", "body_text": "If I understand correctly, only the first layer would accept multiple inputs, while all the other layers would receive a tuple of a single element as input (which can in turn be a tuple), is that right?\nI'm not sure this behavior is very natural. Actually, I'd say it's more consistent to always take a tuple and return a tuple (which is the current behavior btw).\nUltimately, having anything that takes more than one input depends quite a lot on the application, so I'd rather not have nn.Sequential special-case for one use-case.\nNot sure what the others think about it.", "body": "If I understand correctly, only the first layer would accept multiple inputs, while all the other layers would receive a tuple of a single element as input (which can in turn be a tuple), is that right?\r\n\r\nI'm not sure this behavior is very natural. Actually, I'd say it's more consistent to always take a tuple and return a tuple (which is the current behavior btw).\r\n\r\nUltimately, having anything that takes more than one input depends quite a lot on the application, so I'd rather not have `nn.Sequential` special-case for one use-case.\r\n\r\nNot sure what the others think about it."}