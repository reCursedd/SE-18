{"url": "https://api.github.com/repos/pytorch/pytorch/issues/comments/343280107", "html_url": "https://github.com/pytorch/pytorch/issues/3598#issuecomment-343280107", "issue_url": "https://api.github.com/repos/pytorch/pytorch/issues/3598", "id": 343280107, "node_id": "MDEyOklzc3VlQ29tbWVudDM0MzI4MDEwNw==", "user": {"login": "fmassa", "id": 9110200, "node_id": "MDQ6VXNlcjkxMTAyMDA=", "avatar_url": "https://avatars2.githubusercontent.com/u/9110200?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fmassa", "html_url": "https://github.com/fmassa", "followers_url": "https://api.github.com/users/fmassa/followers", "following_url": "https://api.github.com/users/fmassa/following{/other_user}", "gists_url": "https://api.github.com/users/fmassa/gists{/gist_id}", "starred_url": "https://api.github.com/users/fmassa/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fmassa/subscriptions", "organizations_url": "https://api.github.com/users/fmassa/orgs", "repos_url": "https://api.github.com/users/fmassa/repos", "events_url": "https://api.github.com/users/fmassa/events{/privacy}", "received_events_url": "https://api.github.com/users/fmassa/received_events", "type": "User", "site_admin": false}, "created_at": "2017-11-09T20:23:46Z", "updated_at": "2017-11-09T20:27:12Z", "author_association": "MEMBER", "body_html": "<p><a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=687194\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/alykhantejani\">@alykhantejani</a> I think <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load issue title\" data-id=\"272619179\" data-permission-text=\"Issue title is private\" data-url=\"https://github.com/pytorch/pytorch/issues/3601\" data-hovercard-type=\"pull_request\" data-hovercard-url=\"/pytorch/pytorch/pull/3601/hovercard\" href=\"https://github.com/pytorch/pytorch/pull/3601\">#3601</a> is a more robust way of getting the CUDA used to compile PyTorch, as currently if there are multiple CUDA installed in the machine, the heuristics used in <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load issue title\" data-id=\"263983109\" data-permission-text=\"Issue title is private\" data-url=\"https://github.com/pytorch/pytorch/issues/3036\" data-hovercard-type=\"pull_request\" data-hovercard-url=\"/pytorch/pytorch/pull/3036/hovercard\" href=\"https://github.com/pytorch/pytorch/pull/3036\">#3036</a> might not match those used by CMake FindCUDA.</p>\n<p>I think that we should modify the <code>torch.version.cuda</code> to return the cuda version used during compilation. I have the impression that it will not require changing much because <a href=\"https://github.com/pytorch/pytorch/pull/3601/files#diff-0ce47ff0818c8399fda8ce62457480a3R192\">get_compiled_version</a> doesn't require cuda to execute.</p>\n<p>What do you think?</p>", "body_text": "@alykhantejani I think #3601 is a more robust way of getting the CUDA used to compile PyTorch, as currently if there are multiple CUDA installed in the machine, the heuristics used in #3036 might not match those used by CMake FindCUDA.\nI think that we should modify the torch.version.cuda to return the cuda version used during compilation. I have the impression that it will not require changing much because get_compiled_version doesn't require cuda to execute.\nWhat do you think?", "body": "@alykhantejani I think https://github.com/pytorch/pytorch/pull/3601 is a more robust way of getting the CUDA used to compile PyTorch, as currently if there are multiple CUDA installed in the machine, the heuristics used in #3036 might not match those used by CMake FindCUDA.\r\n\r\nI think that we should modify the `torch.version.cuda` to return the cuda version used during compilation. I have the impression that it will not require changing much because [get_compiled_version](https://github.com/pytorch/pytorch/pull/3601/files#diff-0ce47ff0818c8399fda8ce62457480a3R192) doesn't require cuda to execute.\r\n\r\nWhat do you think?"}