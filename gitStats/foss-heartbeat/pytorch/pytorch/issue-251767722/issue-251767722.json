{"url": "https://api.github.com/repos/pytorch/pytorch/issues/2507", "repository_url": "https://api.github.com/repos/pytorch/pytorch", "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/2507/labels{/name}", "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/2507/comments", "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/2507/events", "html_url": "https://github.com/pytorch/pytorch/issues/2507", "id": 251767722, "node_id": "MDU6SXNzdWUyNTE3Njc3MjI=", "number": 2507, "title": "Segfault (free() on invalid pointer)", "user": {"login": "rh314", "id": 12065941, "node_id": "MDQ6VXNlcjEyMDY1OTQx", "avatar_url": "https://avatars1.githubusercontent.com/u/12065941?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rh314", "html_url": "https://github.com/rh314", "followers_url": "https://api.github.com/users/rh314/followers", "following_url": "https://api.github.com/users/rh314/following{/other_user}", "gists_url": "https://api.github.com/users/rh314/gists{/gist_id}", "starred_url": "https://api.github.com/users/rh314/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rh314/subscriptions", "organizations_url": "https://api.github.com/users/rh314/orgs", "repos_url": "https://api.github.com/users/rh314/repos", "events_url": "https://api.github.com/users/rh314/events{/privacy}", "received_events_url": "https://api.github.com/users/rh314/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 12, "created_at": "2017-08-21T20:51:47Z", "updated_at": "2017-09-24T18:26:20Z", "closed_at": "2017-08-27T22:49:27Z", "author_association": "NONE", "body_html": "<p>On Ubuntu 16.04, Python 3.6.2 and PyTorch 0.2.0, it's possible to force a <code>free() on invalid pointer</code> segfault by first doing <code>import zmq</code> then <code>import torch</code>.<br>\n<em>(Originally, I had this problem when trying to import pytorch into a Jupyter notebook, then proceeded to narrow the problem down to just importing zmq in a plain python3 interpreter).</em></p>\n<p>For reproducability, I've created a gist containing a Dockerfile and script:<br>\n<a href=\"https://gist.github.com/rh314/bef5152b655286a8138edd7666789807\">https://gist.github.com/rh314/bef5152b655286a8138edd7666789807</a><br>\n(I managed to reproduce the crash with the above scripts)</p>\n<p>The crash typically looks as follows:</p>\n<pre><code>*** Error in `python3': free(): invalid pointer: 0x00007f98524c1b80 ***\n======= Backtrace: =========\n/lib/x86_64-linux-gnu/libc.so.6(+0x777e5)[0x7f986429c7e5]\n/lib/x86_64-linux-gnu/libc.so.6(+0x8037a)[0x7f98642a537a]\n/lib/x86_64-linux-gnu/libc.so.6(cfree+0x4c)[0x7f98642a953c]\n/usr/local/lib/python3.6/site-packages/torch/lib/libshm.so(_ZNSt6locale5_Impl16_M_install_facetEPKNS_2idEPKNS_5facetE+0x142)[0x7f985225b802]\n/usr/local/lib/python3.6/site-packages/torch/lib/libshm.so(_ZNSt6locale5_ImplC2Em+0x1e3)[0x7f985225d953]\n/usr/local/lib/python3.6/site-packages/torch/lib/libshm.so(_ZNSt6locale18_S_initialize_onceEv+0x15)[0x7f985225e8c5]\n/lib/x86_64-linux-gnu/libpthread.so.0(+0xea99)[0x7f98645fda99]\n/usr/local/lib/python3.6/site-packages/torch/lib/libshm.so(_ZNSt6locale13_S_initializeEv+0x21)[0x7f985225e911]\n/usr/local/lib/python3.6/site-packages/torch/lib/libshm.so(_ZNSt6localeC1Ev+0x13)[0x7f985225e953]\n/usr/local/lib/python3.6/site-packages/torch/lib/libshm.so(_ZNSt8ios_base4InitC1Ev+0xb4)[0x7f98522301b4]\n/usr/local/lib/python3.6/site-packages/torch/lib/libcusparse-652fe42d.so.7.5.18(+0x2a5a14)[0x7f982ee0ba14]\n/usr/local/lib/python3.6/site-packages/torch/lib/libcusparse-652fe42d.so.7.5.18(+0x2a6aa3)[0x7f982ee0caa3]\n/usr/local/lib/python3.6/site-packages/torch/lib/libcusparse-652fe42d.so.7.5.18(+0x335026)[0x7f982ee9b026]\n</code></pre>", "body_text": "On Ubuntu 16.04, Python 3.6.2 and PyTorch 0.2.0, it's possible to force a free() on invalid pointer segfault by first doing import zmq then import torch.\n(Originally, I had this problem when trying to import pytorch into a Jupyter notebook, then proceeded to narrow the problem down to just importing zmq in a plain python3 interpreter).\nFor reproducability, I've created a gist containing a Dockerfile and script:\nhttps://gist.github.com/rh314/bef5152b655286a8138edd7666789807\n(I managed to reproduce the crash with the above scripts)\nThe crash typically looks as follows:\n*** Error in `python3': free(): invalid pointer: 0x00007f98524c1b80 ***\n======= Backtrace: =========\n/lib/x86_64-linux-gnu/libc.so.6(+0x777e5)[0x7f986429c7e5]\n/lib/x86_64-linux-gnu/libc.so.6(+0x8037a)[0x7f98642a537a]\n/lib/x86_64-linux-gnu/libc.so.6(cfree+0x4c)[0x7f98642a953c]\n/usr/local/lib/python3.6/site-packages/torch/lib/libshm.so(_ZNSt6locale5_Impl16_M_install_facetEPKNS_2idEPKNS_5facetE+0x142)[0x7f985225b802]\n/usr/local/lib/python3.6/site-packages/torch/lib/libshm.so(_ZNSt6locale5_ImplC2Em+0x1e3)[0x7f985225d953]\n/usr/local/lib/python3.6/site-packages/torch/lib/libshm.so(_ZNSt6locale18_S_initialize_onceEv+0x15)[0x7f985225e8c5]\n/lib/x86_64-linux-gnu/libpthread.so.0(+0xea99)[0x7f98645fda99]\n/usr/local/lib/python3.6/site-packages/torch/lib/libshm.so(_ZNSt6locale13_S_initializeEv+0x21)[0x7f985225e911]\n/usr/local/lib/python3.6/site-packages/torch/lib/libshm.so(_ZNSt6localeC1Ev+0x13)[0x7f985225e953]\n/usr/local/lib/python3.6/site-packages/torch/lib/libshm.so(_ZNSt8ios_base4InitC1Ev+0xb4)[0x7f98522301b4]\n/usr/local/lib/python3.6/site-packages/torch/lib/libcusparse-652fe42d.so.7.5.18(+0x2a5a14)[0x7f982ee0ba14]\n/usr/local/lib/python3.6/site-packages/torch/lib/libcusparse-652fe42d.so.7.5.18(+0x2a6aa3)[0x7f982ee0caa3]\n/usr/local/lib/python3.6/site-packages/torch/lib/libcusparse-652fe42d.so.7.5.18(+0x335026)[0x7f982ee9b026]", "body": "On Ubuntu 16.04, Python 3.6.2 and PyTorch 0.2.0, it's possible to force a `free() on invalid pointer` segfault by first doing `import zmq` then `import torch`.\r\n_(Originally, I had this problem when trying to import pytorch into a Jupyter notebook, then proceeded to narrow the problem down to just importing zmq in a plain python3 interpreter)._\r\n\r\nFor reproducability, I've created a gist containing a Dockerfile and script:\r\nhttps://gist.github.com/rh314/bef5152b655286a8138edd7666789807\r\n(I managed to reproduce the crash with the above scripts)\r\n\r\nThe crash typically looks as follows:\r\n```\r\n*** Error in `python3': free(): invalid pointer: 0x00007f98524c1b80 ***\r\n======= Backtrace: =========\r\n/lib/x86_64-linux-gnu/libc.so.6(+0x777e5)[0x7f986429c7e5]\r\n/lib/x86_64-linux-gnu/libc.so.6(+0x8037a)[0x7f98642a537a]\r\n/lib/x86_64-linux-gnu/libc.so.6(cfree+0x4c)[0x7f98642a953c]\r\n/usr/local/lib/python3.6/site-packages/torch/lib/libshm.so(_ZNSt6locale5_Impl16_M_install_facetEPKNS_2idEPKNS_5facetE+0x142)[0x7f985225b802]\r\n/usr/local/lib/python3.6/site-packages/torch/lib/libshm.so(_ZNSt6locale5_ImplC2Em+0x1e3)[0x7f985225d953]\r\n/usr/local/lib/python3.6/site-packages/torch/lib/libshm.so(_ZNSt6locale18_S_initialize_onceEv+0x15)[0x7f985225e8c5]\r\n/lib/x86_64-linux-gnu/libpthread.so.0(+0xea99)[0x7f98645fda99]\r\n/usr/local/lib/python3.6/site-packages/torch/lib/libshm.so(_ZNSt6locale13_S_initializeEv+0x21)[0x7f985225e911]\r\n/usr/local/lib/python3.6/site-packages/torch/lib/libshm.so(_ZNSt6localeC1Ev+0x13)[0x7f985225e953]\r\n/usr/local/lib/python3.6/site-packages/torch/lib/libshm.so(_ZNSt8ios_base4InitC1Ev+0xb4)[0x7f98522301b4]\r\n/usr/local/lib/python3.6/site-packages/torch/lib/libcusparse-652fe42d.so.7.5.18(+0x2a5a14)[0x7f982ee0ba14]\r\n/usr/local/lib/python3.6/site-packages/torch/lib/libcusparse-652fe42d.so.7.5.18(+0x2a6aa3)[0x7f982ee0caa3]\r\n/usr/local/lib/python3.6/site-packages/torch/lib/libcusparse-652fe42d.so.7.5.18(+0x335026)[0x7f982ee9b026]\r\n```"}