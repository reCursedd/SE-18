{"url": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/127627333", "pull_request_review_id": 50230997, "id": 127627333, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEyNzYyNzMzMw==", "diff_hunk": "@@ -36,29 +36,90 @@ def eval(self):\n         return self\n \n \n+class LayerNorm(_InstanceNorm):\n+    r\"\"\"Applies Layer Normalization over a 2D input that is seen\n+    as a mini-batch of 1D inputs.\n+\n+    .. math::\n+\n+        y = \\gamma * \\frac{x - \\mu_x}{\\sigma_x + \\epsilon} + \\beta\n+\n+    The mean and standard deviation are calculated per-dimension separately\n+    for each object in a mini-batch. Gamma and beta are learnable parameter\n+    vectors of size C (where C is the input size).\n+\n+    During training, this layer keeps a running estimate of its computed mean\n+    and variance. The running sum is kept with a default momentum of 0.1.\n+\n+    At evaluation time (`.eval()`), the default behaviour of the LayerNorm\n+    module stays the same, i.e. the running mean/variance is NOT used for\n+    normalization. One can force using the stored mean and variance with\n+    the `.train(False)` method.", "path": "torch/nn/modules/instancenorm.py", "position": null, "original_position": 22, "commit_id": "59a975026ba88985f56bea4a88012e02cd9409db", "original_commit_id": "c37529686a0be1e6526cea3094a96dad0510aebe", "user": {"login": "DmitryUlyanov", "id": 6727524, "node_id": "MDQ6VXNlcjY3Mjc1MjQ=", "avatar_url": "https://avatars2.githubusercontent.com/u/6727524?v=4", "gravatar_id": "", "url": "https://api.github.com/users/DmitryUlyanov", "html_url": "https://github.com/DmitryUlyanov", "followers_url": "https://api.github.com/users/DmitryUlyanov/followers", "following_url": "https://api.github.com/users/DmitryUlyanov/following{/other_user}", "gists_url": "https://api.github.com/users/DmitryUlyanov/gists{/gist_id}", "starred_url": "https://api.github.com/users/DmitryUlyanov/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/DmitryUlyanov/subscriptions", "organizations_url": "https://api.github.com/users/DmitryUlyanov/orgs", "repos_url": "https://api.github.com/users/DmitryUlyanov/repos", "events_url": "https://api.github.com/users/DmitryUlyanov/events{/privacy}", "received_events_url": "https://api.github.com/users/DmitryUlyanov/received_events", "type": "User", "site_admin": false}, "body": "Hi, batchnorm has hardcoded `train=True` here https://github.com/Kaixhin/pytorch/blob/c37529686a0be1e6526cea3094a96dad0510aebe/torch/nn/modules/instancenorm.py#L27, so `self.trainining` is not used at all.", "created_at": "2017-07-17T03:06:32Z", "updated_at": "2018-11-23T15:34:10Z", "html_url": "https://github.com/pytorch/pytorch/pull/2112#discussion_r127627333", "pull_request_url": "https://api.github.com/repos/pytorch/pytorch/pulls/2112", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/127627333"}, "html": {"href": "https://github.com/pytorch/pytorch/pull/2112#discussion_r127627333"}, "pull_request": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/2112"}}, "body_html": "<p>Hi, batchnorm has hardcoded <code>train=True</code> here <a href=\"https://github.com/Kaixhin/pytorch/blob/c37529686a0be1e6526cea3094a96dad0510aebe/torch/nn/modules/instancenorm.py#L27\">https://github.com/Kaixhin/pytorch/blob/c37529686a0be1e6526cea3094a96dad0510aebe/torch/nn/modules/instancenorm.py#L27</a>, so <code>self.trainining</code> is not used at all.</p>", "body_text": "Hi, batchnorm has hardcoded train=True here https://github.com/Kaixhin/pytorch/blob/c37529686a0be1e6526cea3094a96dad0510aebe/torch/nn/modules/instancenorm.py#L27, so self.trainining is not used at all.", "in_reply_to_id": 127593708}