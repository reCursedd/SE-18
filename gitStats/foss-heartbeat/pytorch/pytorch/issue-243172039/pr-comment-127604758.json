{"url": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/127604758", "pull_request_review_id": 50208914, "id": 127604758, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEyNzYwNDc1OA==", "diff_hunk": "@@ -36,29 +36,90 @@ def eval(self):\n         return self\n \n \n+class LayerNorm(_InstanceNorm):\n+    r\"\"\"Applies Layer Normalization over a 2D input that is seen\n+    as a mini-batch of 1D inputs.\n+\n+    .. math::\n+\n+        y = \\gamma * \\frac{x - \\mu_x}{\\sigma_x + \\epsilon} + \\beta\n+\n+    The mean and standard deviation are calculated per-dimension separately\n+    for each object in a mini-batch. Gamma and beta are learnable parameter\n+    vectors of size C (where C is the input size).\n+\n+    During training, this layer keeps a running estimate of its computed mean\n+    and variance. The running sum is kept with a default momentum of 0.1.\n+\n+    At evaluation time (`.eval()`), the default behaviour of the LayerNorm\n+    module stays the same, i.e. the running mean/variance is NOT used for\n+    normalization. One can force using the stored mean and variance with\n+    the `.train(False)` method.", "path": "torch/nn/modules/instancenorm.py", "position": null, "original_position": 22, "commit_id": "59a975026ba88985f56bea4a88012e02cd9409db", "original_commit_id": "c37529686a0be1e6526cea3094a96dad0510aebe", "user": {"login": "Kaixhin", "id": 991891, "node_id": "MDQ6VXNlcjk5MTg5MQ==", "avatar_url": "https://avatars3.githubusercontent.com/u/991891?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Kaixhin", "html_url": "https://github.com/Kaixhin", "followers_url": "https://api.github.com/users/Kaixhin/followers", "following_url": "https://api.github.com/users/Kaixhin/following{/other_user}", "gists_url": "https://api.github.com/users/Kaixhin/gists{/gist_id}", "starred_url": "https://api.github.com/users/Kaixhin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Kaixhin/subscriptions", "organizations_url": "https://api.github.com/users/Kaixhin/orgs", "repos_url": "https://api.github.com/users/Kaixhin/repos", "events_url": "https://api.github.com/users/Kaixhin/events{/privacy}", "received_events_url": "https://api.github.com/users/Kaixhin/received_events", "type": "User", "site_admin": false}, "body": "Agreed, that code looked mysterious to me and I wasn't sure it worked either. Pinging @DmitryUlyanov to find out more. As James said below, using running statistics seems to be counter to layer/instance norm, and if so, then we could actually change InstanceNorm to use what I wrote for LayerNorm (I'll keep the instance norm name, just update the docs to refer to layer norm too): https://github.com/pytorch/pytorch/pull/2019", "created_at": "2017-07-16T11:29:40Z", "updated_at": "2018-11-23T15:34:08Z", "html_url": "https://github.com/pytorch/pytorch/pull/2112#discussion_r127604758", "pull_request_url": "https://api.github.com/repos/pytorch/pytorch/pulls/2112", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/127604758"}, "html": {"href": "https://github.com/pytorch/pytorch/pull/2112#discussion_r127604758"}, "pull_request": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/2112"}}, "body_html": "<p>Agreed, that code looked mysterious to me and I wasn't sure it worked either. Pinging <a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=6727524\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/DmitryUlyanov\">@DmitryUlyanov</a> to find out more. As James said below, using running statistics seems to be counter to layer/instance norm, and if so, then we could actually change InstanceNorm to use what I wrote for LayerNorm (I'll keep the instance norm name, just update the docs to refer to layer norm too): <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load issue title\" data-id=\"241444138\" data-permission-text=\"Issue title is private\" data-url=\"https://github.com/pytorch/pytorch/issues/2019\" data-hovercard-type=\"pull_request\" data-hovercard-url=\"/pytorch/pytorch/pull/2019/hovercard\" href=\"https://github.com/pytorch/pytorch/pull/2019\">#2019</a></p>", "body_text": "Agreed, that code looked mysterious to me and I wasn't sure it worked either. Pinging @DmitryUlyanov to find out more. As James said below, using running statistics seems to be counter to layer/instance norm, and if so, then we could actually change InstanceNorm to use what I wrote for LayerNorm (I'll keep the instance norm name, just update the docs to refer to layer norm too): #2019", "in_reply_to_id": 127593708}