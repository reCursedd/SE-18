{"url": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/182515722", "pull_request_review_id": 113326817, "id": 182515722, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MjUxNTcyMg==", "diff_hunk": "@@ -494,14 +491,48 @@ struct to_ir {\n     auto* false_block = n->addBlock();\n \n     // Emit both blocks once to get the union of all mutated values\n-    std::unordered_set<std::string> mutated_parent_values;\n-    auto save_true = emitSingleIfBranch(\n-        true_block, stmt.trueBranch(), &mutated_parent_values);\n-    auto save_false = emitSingleIfBranch(\n-        false_block, stmt.falseBranch(), &mutated_parent_values);\n+    auto save_true = emitSingleIfBranch(true_block, stmt.trueBranch());\n+    auto save_false = emitSingleIfBranch(false_block, stmt.falseBranch());\n+\n+    // In python, every variable assigned in an if statement escapes\n+    // the scope of the if statement (all variables are scoped to the function).\n+    // Script is a subset of python: we consider variables to be in scope\n+    // as long as there is a definition of the variable along all paths\n+    // through the if statemnent\n+    // ----\n+    // if ...:\n+    //   a =\n+    // else:\n+    //   ...\n+    // ... = a  # error, a is not defined along all paths\n+    // ----\n+    // if ...:\n+    //   a =\n+    // else:\n+    //   a =\n+    // ... = a # OK, a is defined along all paths\n+    // ----\n+    // a = ...\n+    // if ...:\n+    //   a =\n+    // ... = a # OK, a is defined along all paths\n+\n+\n+    std::set<std::string> mutated_variables;", "path": "torch/csrc/jit/script/compiler.cpp", "position": null, "original_position": 72, "commit_id": "fb5bb0d2d3f4a97aa24c866e8fbb9047d2483bf9", "original_commit_id": "62ed12ad37e9baf74137ad4843bd89de5a468997", "user": {"login": "zdevito", "id": 370202, "node_id": "MDQ6VXNlcjM3MDIwMg==", "avatar_url": "https://avatars0.githubusercontent.com/u/370202?v=4", "gravatar_id": "", "url": "https://api.github.com/users/zdevito", "html_url": "https://github.com/zdevito", "followers_url": "https://api.github.com/users/zdevito/followers", "following_url": "https://api.github.com/users/zdevito/following{/other_user}", "gists_url": "https://api.github.com/users/zdevito/gists{/gist_id}", "starred_url": "https://api.github.com/users/zdevito/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/zdevito/subscriptions", "organizations_url": "https://api.github.com/users/zdevito/orgs", "repos_url": "https://api.github.com/users/zdevito/repos", "events_url": "https://api.github.com/users/zdevito/events{/privacy}", "received_events_url": "https://api.github.com/users/zdevito/received_events", "type": "User", "site_admin": false}, "body": "Well, the use of set was a typo on my part, but your point about sorting is valid, so I guess we'll keep it :)", "created_at": "2018-04-18T17:55:00Z", "updated_at": "2018-11-23T15:42:46Z", "html_url": "https://github.com/pytorch/pytorch/pull/6675#discussion_r182515722", "pull_request_url": "https://api.github.com/repos/pytorch/pytorch/pulls/6675", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/182515722"}, "html": {"href": "https://github.com/pytorch/pytorch/pull/6675#discussion_r182515722"}, "pull_request": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/6675"}}, "body_html": "<p>Well, the use of set was a typo on my part, but your point about sorting is valid, so I guess we'll keep it :)</p>", "body_text": "Well, the use of set was a typo on my part, but your point about sorting is valid, so I guess we'll keep it :)", "in_reply_to_id": 182260980}