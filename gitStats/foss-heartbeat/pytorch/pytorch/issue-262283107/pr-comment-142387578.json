{"url": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/142387578", "pull_request_review_id": 66737183, "id": 142387578, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE0MjM4NzU3OA==", "diff_hunk": "@@ -26,39 +27,49 @@\n # Load the extension module\n ################################################################################\n \n-# Loading the extension with RTLD_GLOBAL option allows to not link extension\n-# modules against the _C shared object. Their missing THP symbols will be\n-# automatically filled by the dynamic loader.\n-import os as _dl_flags\n-\n # if we have numpy, it *must* be imported before the call to setdlopenflags()\n # or there is risk that later c modules will segfault when importing numpy\n try:\n     import numpy as np\n except:\n     pass\n \n-# first check if the os package has the required flags\n-if not hasattr(_dl_flags, 'RTLD_GLOBAL') or not hasattr(_dl_flags, 'RTLD_NOW'):\n-    try:\n-        # next try if DLFCN exists\n-        import DLFCN as _dl_flags\n-    except ImportError:\n-        # as a last attempt, use compile-time constants\n-        import torch._dl as _dl_flags\n+if platform.system() == 'Windows':\n+    import os\n+    os.environ['PATH'] = os.path.dirname(__file__) + '\\\\lib\\\\;' + os.environ['PATH']\n+\n+    from torch._C import *\n+    __all__ += [name for name in dir(_C)\n+                if name[0] != '_' and\n+                not name.endswith('Base')]", "path": "torch/__init__.py", "position": null, "original_position": 39, "commit_id": "bb39f23252a1ccd7465eb20a76c4de3d4ea80f52", "original_commit_id": "a2035e61440f07eb9145cdcf1ee70dddcbfa12de", "user": {"login": "apaszke", "id": 4583066, "node_id": "MDQ6VXNlcjQ1ODMwNjY=", "avatar_url": "https://avatars3.githubusercontent.com/u/4583066?v=4", "gravatar_id": "", "url": "https://api.github.com/users/apaszke", "html_url": "https://github.com/apaszke", "followers_url": "https://api.github.com/users/apaszke/followers", "following_url": "https://api.github.com/users/apaszke/following{/other_user}", "gists_url": "https://api.github.com/users/apaszke/gists{/gist_id}", "starred_url": "https://api.github.com/users/apaszke/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/apaszke/subscriptions", "organizations_url": "https://api.github.com/users/apaszke/orgs", "repos_url": "https://api.github.com/users/apaszke/repos", "events_url": "https://api.github.com/users/apaszke/events{/privacy}", "received_events_url": "https://api.github.com/users/apaszke/received_events", "type": "User", "site_admin": false}, "body": "This code seems to be the same in both cases, so why replicate it (I mean `__all__` not the import)?", "created_at": "2017-10-03T12:36:33Z", "updated_at": "2018-11-23T15:34:57Z", "html_url": "https://github.com/pytorch/pytorch/pull/2941#discussion_r142387578", "pull_request_url": "https://api.github.com/repos/pytorch/pytorch/pulls/2941", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/142387578"}, "html": {"href": "https://github.com/pytorch/pytorch/pull/2941#discussion_r142387578"}, "pull_request": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/2941"}}, "body_html": "<p>This code seems to be the same in both cases, so why replicate it (I mean <code>__all__</code> not the import)?</p>", "body_text": "This code seems to be the same in both cases, so why replicate it (I mean __all__ not the import)?"}