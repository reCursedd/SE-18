{"url": "https://api.github.com/repos/pytorch/pytorch/issues/comments/385341044", "html_url": "https://github.com/pytorch/pytorch/pull/7052#issuecomment-385341044", "issue_url": "https://api.github.com/repos/pytorch/pytorch/issues/7052", "id": 385341044, "node_id": "MDEyOklzc3VlQ29tbWVudDM4NTM0MTA0NA==", "user": {"login": "t-vi", "id": 20787943, "node_id": "MDQ6VXNlcjIwNzg3OTQz", "avatar_url": "https://avatars2.githubusercontent.com/u/20787943?v=4", "gravatar_id": "", "url": "https://api.github.com/users/t-vi", "html_url": "https://github.com/t-vi", "followers_url": "https://api.github.com/users/t-vi/followers", "following_url": "https://api.github.com/users/t-vi/following{/other_user}", "gists_url": "https://api.github.com/users/t-vi/gists{/gist_id}", "starred_url": "https://api.github.com/users/t-vi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/t-vi/subscriptions", "organizations_url": "https://api.github.com/users/t-vi/orgs", "repos_url": "https://api.github.com/users/t-vi/repos", "events_url": "https://api.github.com/users/t-vi/events{/privacy}", "received_events_url": "https://api.github.com/users/t-vi/received_events", "type": "User", "site_admin": false}, "created_at": "2018-04-30T08:42:09Z", "updated_at": "2018-04-30T08:42:09Z", "author_association": "CONTRIBUTOR", "body_html": "<div class=\"email-fragment\">To me, the main difference seems to be  breaking - this is needed in the cpu implementation because otherwise the NaN in theMax var will cause the next comparison to favour value.\nStopping the calculation might be a bit more efficient - when there are NaNs, so not really.\nAlso, we wanted a cuda implementation that doesn't need comments to explain whats going on. :)\n\nThat said, I might be missing something...</div>", "body_text": "To me, the main difference seems to be  breaking - this is needed in the cpu implementation because otherwise the NaN in theMax var will cause the next comparison to favour value.\nStopping the calculation might be a bit more efficient - when there are NaNs, so not really.\nAlso, we wanted a cuda implementation that doesn't need comments to explain whats going on. :)\n\nThat said, I might be missing something...", "body": "To me, the main difference seems to be  breaking - this is needed in the cpu implementation because otherwise the NaN in theMax var will cause the next comparison to favour value.\nStopping the calculation might be a bit more efficient - when there are NaNs, so not really.\nAlso, we wanted a cuda implementation that doesn't need comments to explain whats going on. :)\n\nThat said, I might be missing something...\n"}