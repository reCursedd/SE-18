{"url": "https://api.github.com/repos/pytorch/pytorch/issues/4973", "repository_url": "https://api.github.com/repos/pytorch/pytorch", "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/4973/labels{/name}", "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/4973/comments", "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/4973/events", "html_url": "https://github.com/pytorch/pytorch/pull/4973", "id": 293336498, "node_id": "MDExOlB1bGxSZXF1ZXN0MTY2Mzk1MTE2", "number": 4973, "title": "Improve CUDA softmax performance", "user": {"login": "apaszke", "id": 4583066, "node_id": "MDQ6VXNlcjQ1ODMwNjY=", "avatar_url": "https://avatars3.githubusercontent.com/u/4583066?v=4", "gravatar_id": "", "url": "https://api.github.com/users/apaszke", "html_url": "https://github.com/apaszke", "followers_url": "https://api.github.com/users/apaszke/followers", "following_url": "https://api.github.com/users/apaszke/following{/other_user}", "gists_url": "https://api.github.com/users/apaszke/gists{/gist_id}", "starred_url": "https://api.github.com/users/apaszke/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/apaszke/subscriptions", "organizations_url": "https://api.github.com/users/apaszke/orgs", "repos_url": "https://api.github.com/users/apaszke/repos", "events_url": "https://api.github.com/users/apaszke/events{/privacy}", "received_events_url": "https://api.github.com/users/apaszke/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 825466279, "node_id": "MDU6TGFiZWw4MjU0NjYyNzk=", "url": "https://api.github.com/repos/pytorch/pytorch/labels/0.3.1", "name": "0.3.1", "color": "aefcae", "default": false}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-01-31T22:33:34Z", "updated_at": "2018-11-23T15:38:58Z", "closed_at": "2018-02-02T12:23:58Z", "author_association": "MEMBER", "pull_request": {"url": "https://api.github.com/repos/pytorch/pytorch/pulls/4973", "html_url": "https://github.com/pytorch/pytorch/pull/4973", "diff_url": "https://github.com/pytorch/pytorch/pull/4973.diff", "patch_url": "https://github.com/pytorch/pytorch/pull/4973.patch"}, "body_html": "<p>Simple fix with a very large perf benefit for smaller sizes. Below are some plots (<code>dim_size</code> = size of the softmaxed dimension, <code>outer_size</code> = batch size, z-axis = ratio of old time to new time). In general, as long as <code>dim_size &lt; 1024</code> you get at least a 2x speedup with this code, 4x if you fit in 256, and even 12x for sizes around 100 and smaller.</p>\n<p><a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://user-images.githubusercontent.com/4583066/35651055-9596a8b6-06de-11e8-97d6-32eaa4e74a49.png\"><img width=\"435\" alt=\"screen shot 2018-01-31 at 23 27 02\" src=\"https://user-images.githubusercontent.com/4583066/35651055-9596a8b6-06de-11e8-97d6-32eaa4e74a49.png\" style=\"max-width:100%;\"></a></p>\n<p><a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://user-images.githubusercontent.com/4583066/35651057-983b9edc-06de-11e8-9134-1b461a9016cc.png\"><img width=\"456\" alt=\"screen shot 2018-01-31 at 23 27 18\" src=\"https://user-images.githubusercontent.com/4583066/35651057-983b9edc-06de-11e8-9134-1b461a9016cc.png\" style=\"max-width:100%;\"></a></p>\n<p>I tried playing with some other potential improvements like replacing the blockReduce function with a shuffle-based one, but it gave mixed results (-20% time in some cases, +20% time in other cases).</p>\n<p>Thanks to <a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=252225\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/nikitakit\">@nikitakit</a> for reporting <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load issue title\" data-id=\"292106672\" data-permission-text=\"Issue title is private\" data-url=\"https://github.com/pytorch/pytorch/issues/4893\" data-hovercard-type=\"issue\" data-hovercard-url=\"/pytorch/pytorch/issues/4893/hovercard\" href=\"https://github.com/pytorch/pytorch/issues/4893\">#4893</a> (which is fixed in this PR).</p>", "body_text": "Simple fix with a very large perf benefit for smaller sizes. Below are some plots (dim_size = size of the softmaxed dimension, outer_size = batch size, z-axis = ratio of old time to new time). In general, as long as dim_size < 1024 you get at least a 2x speedup with this code, 4x if you fit in 256, and even 12x for sizes around 100 and smaller.\n\n\nI tried playing with some other potential improvements like replacing the blockReduce function with a shuffle-based one, but it gave mixed results (-20% time in some cases, +20% time in other cases).\nThanks to @nikitakit for reporting #4893 (which is fixed in this PR).", "body": "Simple fix with a very large perf benefit for smaller sizes. Below are some plots (`dim_size` = size of the softmaxed dimension, `outer_size` = batch size, z-axis = ratio of old time to new time). In general, as long as `dim_size < 1024` you get at least a 2x speedup with this code, 4x if you fit in 256, and even 12x for sizes around 100 and smaller.\r\n\r\n<img width=\"435\" alt=\"screen shot 2018-01-31 at 23 27 02\" src=\"https://user-images.githubusercontent.com/4583066/35651055-9596a8b6-06de-11e8-97d6-32eaa4e74a49.png\">\r\n\r\n<img width=\"456\" alt=\"screen shot 2018-01-31 at 23 27 18\" src=\"https://user-images.githubusercontent.com/4583066/35651057-983b9edc-06de-11e8-9134-1b461a9016cc.png\">\r\n\r\nI tried playing with some other potential improvements like replacing the blockReduce function with a shuffle-based one, but it gave mixed results (-20% time in some cases, +20% time in other cases).\r\n\r\nThanks to @nikitakit for reporting #4893 (which is fixed in this PR)."}