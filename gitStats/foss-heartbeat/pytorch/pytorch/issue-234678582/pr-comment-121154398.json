{"url": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/121154398", "pull_request_review_id": 43185726, "id": 121154398, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEyMTE1NDM5OA==", "diff_hunk": "@@ -557,21 +556,19 @@ def backward(ctx, grad_output):\n \n class Cumsum(Function):\n \n-    def __init__(self, dim):\n-        super(Cumsum, self).__init__()\n-        self.dim = dim\n-\n-    def forward(self, input):\n-        return torch.cumsum(input, dim=self.dim)\n+    @staticmethod\n+    def forward(ctx, input, dim):\n+        ctx.dim = dim\n+        return torch.cumsum(input, dim=ctx.dim)\n \n-    def backward(self, grad_output):\n-        grad_input = torch.cumsum(-grad_output, dim=self.dim)\n+    @staticmethod\n+    def backward(ctx, grad_output):\n+        grad_input = torch.cumsum(-grad_output, dim=ctx.dim)\n \n-        end_idx = grad_input.size(self.dim) - 1\n-        grad_sum = grad_input.narrow(self.dim, end_idx, 1)\n-        grad_input -= grad_sum.expand_as(grad_input)\n-        grad_input += grad_output\n-        return grad_input\n+        end_idx = grad_input.size(ctx.dim) - 1\n+        grad_sum = grad_input.narrow(ctx.dim, end_idx, 1)\n+        grad_input = (grad_input - grad_sum.expand_as(grad_input)) + grad_output", "path": "torch/autograd/_functions/tensor.py", "position": null, "original_position": 36, "commit_id": "56164468bc7a4c86bdffb3e412bdceab68f08c7f", "original_commit_id": "df80d626496ba9ee86f9e89d23e3589a542f908c", "user": {"login": "gchanan", "id": 3768583, "node_id": "MDQ6VXNlcjM3Njg1ODM=", "avatar_url": "https://avatars2.githubusercontent.com/u/3768583?v=4", "gravatar_id": "", "url": "https://api.github.com/users/gchanan", "html_url": "https://github.com/gchanan", "followers_url": "https://api.github.com/users/gchanan/followers", "following_url": "https://api.github.com/users/gchanan/following{/other_user}", "gists_url": "https://api.github.com/users/gchanan/gists{/gist_id}", "starred_url": "https://api.github.com/users/gchanan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/gchanan/subscriptions", "organizations_url": "https://api.github.com/users/gchanan/orgs", "repos_url": "https://api.github.com/users/gchanan/repos", "events_url": "https://api.github.com/users/gchanan/events{/privacy}", "received_events_url": "https://api.github.com/users/gchanan/received_events", "type": "User", "site_admin": false}, "body": "```\r\ngrad_input = (grad_input - grad_sum.expand_as(grad_input))\r\ngrad_input += grad_output\r\n```\r\nseems to work.  Making the first line inplace and running through gradgrad check gives me:\r\n```\r\nRuntimeError: in-place operations can be only used on variables that don't share storage with any other variables, but detected that there are 3 objects sharing it\r\n```", "created_at": "2017-06-09T15:26:06Z", "updated_at": "2018-11-23T15:33:43Z", "html_url": "https://github.com/pytorch/pytorch/pull/1758#discussion_r121154398", "pull_request_url": "https://api.github.com/repos/pytorch/pytorch/pulls/1758", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/121154398"}, "html": {"href": "https://github.com/pytorch/pytorch/pull/1758#discussion_r121154398"}, "pull_request": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/1758"}}, "body_html": "<pre><code>grad_input = (grad_input - grad_sum.expand_as(grad_input))\ngrad_input += grad_output\n</code></pre>\n<p>seems to work.  Making the first line inplace and running through gradgrad check gives me:</p>\n<pre><code>RuntimeError: in-place operations can be only used on variables that don't share storage with any other variables, but detected that there are 3 objects sharing it\n</code></pre>", "body_text": "grad_input = (grad_input - grad_sum.expand_as(grad_input))\ngrad_input += grad_output\n\nseems to work.  Making the first line inplace and running through gradgrad check gives me:\nRuntimeError: in-place operations can be only used on variables that don't share storage with any other variables, but detected that there are 3 objects sharing it", "in_reply_to_id": 121140476}