{"url": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/205196955", "pull_request_review_id": 140420027, "id": 205196955, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwNTE5Njk1NQ==", "diff_hunk": "@@ -0,0 +1,32 @@\n+#pragma once\n+\n+#include <torch/csrc/utils/tensor_flatten.h>\n+\n+#include <c10d/ProcessGroup.hpp>\n+\n+#include <ATen/ATen.h>\n+\n+#include <cstddef>\n+#include <vector>\n+\n+namespace c10d {\n+inline void distBroadcastCoalesced(\n+    std::vector<at::Tensor>& tensors,\n+    int64_t bufferSize,\n+    ProcessGroup& processGroup) {\n+  for (auto& group : torch::utils::take_tensors(tensors, bufferSize)) {\n+    std::vector<at::Tensor> flatTensor = {\n+        torch::utils::flatten_dense_tensors(group.tensors)};\n+    BroadcastOptions broadcastOptions;\n+    broadcastOptions.rootRank = 0;\n+    broadcastOptions.rootTensor = 0;\n+    processGroup.broadcast(flatTensor, broadcastOptions)->wait();", "path": "torch/csrc/distributed/c10d/ddp.h", "position": null, "original_position": 23, "commit_id": "5108147e91209b82dae82c17d42505ee97cbf500", "original_commit_id": "b1bf41c9f37880d69f1e48058381bae81bc63c3a", "user": {"login": "apaszke", "id": 4583066, "node_id": "MDQ6VXNlcjQ1ODMwNjY=", "avatar_url": "https://avatars3.githubusercontent.com/u/4583066?v=4", "gravatar_id": "", "url": "https://api.github.com/users/apaszke", "html_url": "https://github.com/apaszke", "followers_url": "https://api.github.com/users/apaszke/followers", "following_url": "https://api.github.com/users/apaszke/following{/other_user}", "gists_url": "https://api.github.com/users/apaszke/gists{/gist_id}", "starred_url": "https://api.github.com/users/apaszke/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/apaszke/subscriptions", "organizations_url": "https://api.github.com/users/apaszke/orgs", "repos_url": "https://api.github.com/users/apaszke/repos", "events_url": "https://api.github.com/users/apaszke/events{/privacy}", "received_events_url": "https://api.github.com/users/apaszke/received_events", "type": "User", "site_admin": false}, "body": "It might actually be a better idea to first queue all the waits, and only then trigger the copies (you can accumulate the futures in a vector).", "created_at": "2018-07-25T17:31:05Z", "updated_at": "2018-11-23T15:48:05Z", "html_url": "https://github.com/pytorch/pytorch/pull/9729#discussion_r205196955", "pull_request_url": "https://api.github.com/repos/pytorch/pytorch/pulls/9729", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/205196955"}, "html": {"href": "https://github.com/pytorch/pytorch/pull/9729#discussion_r205196955"}, "pull_request": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/9729"}}, "body_html": "<p>It might actually be a better idea to first queue all the waits, and only then trigger the copies (you can accumulate the futures in a vector).</p>", "body_text": "It might actually be a better idea to first queue all the waits, and only then trigger the copies (you can accumulate the futures in a vector)."}