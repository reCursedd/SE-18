{"url": "https://api.github.com/repos/pytorch/pytorch/issues/comments/384138225", "html_url": "https://github.com/pytorch/pytorch/issues/6921#issuecomment-384138225", "issue_url": "https://api.github.com/repos/pytorch/pytorch/issues/6921", "id": 384138225, "node_id": "MDEyOklzc3VlQ29tbWVudDM4NDEzODIyNQ==", "user": {"login": "gchanan", "id": 3768583, "node_id": "MDQ6VXNlcjM3Njg1ODM=", "avatar_url": "https://avatars2.githubusercontent.com/u/3768583?v=4", "gravatar_id": "", "url": "https://api.github.com/users/gchanan", "html_url": "https://github.com/gchanan", "followers_url": "https://api.github.com/users/gchanan/followers", "following_url": "https://api.github.com/users/gchanan/following{/other_user}", "gists_url": "https://api.github.com/users/gchanan/gists{/gist_id}", "starred_url": "https://api.github.com/users/gchanan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/gchanan/subscriptions", "organizations_url": "https://api.github.com/users/gchanan/orgs", "repos_url": "https://api.github.com/users/gchanan/repos", "events_url": "https://api.github.com/users/gchanan/events{/privacy}", "received_events_url": "https://api.github.com/users/gchanan/received_events", "type": "User", "site_admin": false}, "created_at": "2018-04-25T02:06:09Z", "updated_at": "2018-04-25T02:06:09Z", "author_association": "CONTRIBUTOR", "body_html": "<p>Because the tensor was 1-d and was converted to a 1-d numpy array, but is now 0-d and converted to a 0-d array.  Pytorch still let's you index 0-d tensor as if they were 1-d for backwards compatibility, so this usually doesn't come up, but numpy doesn't allow it.</p>", "body_text": "Because the tensor was 1-d and was converted to a 1-d numpy array, but is now 0-d and converted to a 0-d array.  Pytorch still let's you index 0-d tensor as if they were 1-d for backwards compatibility, so this usually doesn't come up, but numpy doesn't allow it.", "body": "Because the tensor was 1-d and was converted to a 1-d numpy array, but is now 0-d and converted to a 0-d array.  Pytorch still let's you index 0-d tensor as if they were 1-d for backwards compatibility, so this usually doesn't come up, but numpy doesn't allow it."}