{"url": "https://api.github.com/repos/pytorch/pytorch/issues/11340", "repository_url": "https://api.github.com/repos/pytorch/pytorch", "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/11340/labels{/name}", "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/11340/comments", "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/11340/events", "html_url": "https://github.com/pytorch/pytorch/issues/11340", "id": 357773117, "node_id": "MDU6SXNzdWUzNTc3NzMxMTc=", "number": 11340, "title": "Better user experience for using Generator object", "user": {"login": "SsnL", "id": 5674597, "node_id": "MDQ6VXNlcjU2NzQ1OTc=", "avatar_url": "https://avatars2.githubusercontent.com/u/5674597?v=4", "gravatar_id": "", "url": "https://api.github.com/users/SsnL", "html_url": "https://github.com/SsnL", "followers_url": "https://api.github.com/users/SsnL/followers", "following_url": "https://api.github.com/users/SsnL/following{/other_user}", "gists_url": "https://api.github.com/users/SsnL/gists{/gist_id}", "starred_url": "https://api.github.com/users/SsnL/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/SsnL/subscriptions", "organizations_url": "https://api.github.com/users/SsnL/orgs", "repos_url": "https://api.github.com/users/SsnL/repos", "events_url": "https://api.github.com/users/SsnL/events{/privacy}", "received_events_url": "https://api.github.com/users/SsnL/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 443483881, "node_id": "MDU6TGFiZWw0NDM0ODM4ODE=", "url": "https://api.github.com/repos/pytorch/pytorch/labels/todo", "name": "todo", "color": "c2e0c6", "default": false}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 12, "created_at": "2018-09-06T18:27:52Z", "updated_at": "2018-09-18T18:23:39Z", "closed_at": null, "author_association": "CONTRIBUTOR", "body_html": "<p>Not a comprehensive list, but we should:</p>\n<ol>\n<li>Document <code>torch.Generator</code> better, e.g., it's only CPU RNG, examples, ctor, etc.</li>\n<li>Provide CUDA equivalent of <code>torch.Generator</code>.</li>\n<li>Provide better transformation between <code>Generator</code> and <code>rng_state</code>.</li>\n<li>Document that <code>torch.manual_seed</code> seeds <strong>all</strong> CUDA devices.</li>\n<li>Support <code>generator=</code> keyword argument in <code>torch.nn.init.*</code> (at least the stochastic ones).</li>\n<li>Support <code>generator=</code> keyword argument for distributions classes (?)</li>\n</ol>", "body_text": "Not a comprehensive list, but we should:\n\nDocument torch.Generator better, e.g., it's only CPU RNG, examples, ctor, etc.\nProvide CUDA equivalent of torch.Generator.\nProvide better transformation between Generator and rng_state.\nDocument that torch.manual_seed seeds all CUDA devices.\nSupport generator= keyword argument in torch.nn.init.* (at least the stochastic ones).\nSupport generator= keyword argument for distributions classes (?)", "body": "Not a comprehensive list, but we should:\r\n\r\n1. Document `torch.Generator` better, e.g., it's only CPU RNG, examples, ctor, etc.\r\n2. Provide CUDA equivalent of `torch.Generator`.\r\n3. Provide better transformation between `Generator` and `rng_state`.\r\n3. Document that `torch.manual_seed` seeds **all** CUDA devices.\r\n4. Support `generator=` keyword argument in `torch.nn.init.*` (at least the stochastic ones).\r\n5. Support `generator=` keyword argument for distributions classes (?)"}