{"url": "https://api.github.com/repos/pytorch/pytorch/issues/comments/399980995", "html_url": "https://github.com/pytorch/pytorch/issues/1917#issuecomment-399980995", "issue_url": "https://api.github.com/repos/pytorch/pytorch/issues/1917", "id": 399980995, "node_id": "MDEyOklzc3VlQ29tbWVudDM5OTk4MDk5NQ==", "user": {"login": "srossi93", "id": 11166137, "node_id": "MDQ6VXNlcjExMTY2MTM3", "avatar_url": "https://avatars2.githubusercontent.com/u/11166137?v=4", "gravatar_id": "", "url": "https://api.github.com/users/srossi93", "html_url": "https://github.com/srossi93", "followers_url": "https://api.github.com/users/srossi93/followers", "following_url": "https://api.github.com/users/srossi93/following{/other_user}", "gists_url": "https://api.github.com/users/srossi93/gists{/gist_id}", "starred_url": "https://api.github.com/users/srossi93/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/srossi93/subscriptions", "organizations_url": "https://api.github.com/users/srossi93/orgs", "repos_url": "https://api.github.com/users/srossi93/repos", "events_url": "https://api.github.com/users/srossi93/events{/privacy}", "received_events_url": "https://api.github.com/users/srossi93/received_events", "type": "User", "site_admin": false}, "created_at": "2018-06-25T14:54:46Z", "updated_at": "2018-06-25T14:54:46Z", "author_association": "NONE", "body_html": "<p>Same problem of memory leak with the following (slightly different) code:</p>\n<div class=\"highlight highlight-source-python\"><pre>dataloader_iterator <span class=\"pl-k\">=</span> <span class=\"pl-c1\">iter</span>(dataloader)\n<span class=\"pl-k\">for</span> i <span class=\"pl-k\">in</span> <span class=\"pl-c1\">range</span>(iterations):     \n    <span class=\"pl-k\">try</span>:\n        X, Y <span class=\"pl-k\">=</span> <span class=\"pl-c1\">next</span>(dataloader_iterator)\n    <span class=\"pl-k\">except</span>:\n        dataloader_iterator <span class=\"pl-k\">=</span> <span class=\"pl-c1\">iter</span>(train_loader)\n        X, Y <span class=\"pl-k\">=</span> <span class=\"pl-c1\">next</span>(dataloader_iterator)\n    do_backprop(X, Y)</pre></div>\n<p>Memory occupation continuously increases during the for-loop. I might open a new issue with more information (if not done yet)</p>", "body_text": "Same problem of memory leak with the following (slightly different) code:\ndataloader_iterator = iter(dataloader)\nfor i in range(iterations):     \n    try:\n        X, Y = next(dataloader_iterator)\n    except:\n        dataloader_iterator = iter(train_loader)\n        X, Y = next(dataloader_iterator)\n    do_backprop(X, Y)\nMemory occupation continuously increases during the for-loop. I might open a new issue with more information (if not done yet)", "body": "Same problem of memory leak with the following (slightly different) code:\r\n``` python\r\ndataloader_iterator = iter(dataloader)\r\nfor i in range(iterations):     \r\n    try:\r\n        X, Y = next(dataloader_iterator)\r\n    except:\r\n        dataloader_iterator = iter(train_loader)\r\n        X, Y = next(dataloader_iterator)\r\n    do_backprop(X, Y)\r\n```\r\nMemory occupation continuously increases during the for-loop. I might open a new issue with more information (if not done yet)"}