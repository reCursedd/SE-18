{"url": "https://api.github.com/repos/pytorch/pytorch/issues/comments/433698337", "html_url": "https://github.com/pytorch/pytorch/issues/1917#issuecomment-433698337", "issue_url": "https://api.github.com/repos/pytorch/pytorch/issues/1917", "id": 433698337, "node_id": "MDEyOklzc3VlQ29tbWVudDQzMzY5ODMzNw==", "user": {"login": "srossi93", "id": 11166137, "node_id": "MDQ6VXNlcjExMTY2MTM3", "avatar_url": "https://avatars2.githubusercontent.com/u/11166137?v=4", "gravatar_id": "", "url": "https://api.github.com/users/srossi93", "html_url": "https://github.com/srossi93", "followers_url": "https://api.github.com/users/srossi93/followers", "following_url": "https://api.github.com/users/srossi93/following{/other_user}", "gists_url": "https://api.github.com/users/srossi93/gists{/gist_id}", "starred_url": "https://api.github.com/users/srossi93/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/srossi93/subscriptions", "organizations_url": "https://api.github.com/users/srossi93/orgs", "repos_url": "https://api.github.com/users/srossi93/repos", "events_url": "https://api.github.com/users/srossi93/events{/privacy}", "received_events_url": "https://api.github.com/users/srossi93/received_events", "type": "User", "site_admin": false}, "created_at": "2018-10-28T11:54:28Z", "updated_at": "2018-10-28T11:54:28Z", "author_association": "NONE", "body_html": "<p><a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=1818351\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/shaibagon\">@shaibagon</a><br>\nIt's not documented very well but when you do <code>iter(dataloader)</code> you create an object of class <a href=\"https://github.com/pytorch/pytorch/blob/v1.0rc1/torch/utils/data/dataloader.py#L246\">_DataLoaderIter</a> and, in the loop, you'll create same object <code>n</code> times and retrieve the first batch only.<br>\nA workaround is to create a _DataLoaderIter outside the loop and iterate over it. The problem is that once all batches are retrieved, _DataLoaderIter will raise a <a href=\"https://github.com/pytorch/pytorch/blob/v1.0rc1/torch/utils/data/dataloader.py#L343\">StopIteration error</a>.</p>\n<p>To avoid problems, what I'm currently doing is the following:</p>\n<div class=\"highlight highlight-source-python\"><pre>    dataloader_iterator <span class=\"pl-k\">=</span> <span class=\"pl-c1\">iter</span>(dataloader)\n    <span class=\"pl-k\">for</span> i <span class=\"pl-k\">in</span> <span class=\"pl-c1\">range</span>(iterations):\n        <span class=\"pl-k\">try</span>:\n            data, target <span class=\"pl-k\">=</span> <span class=\"pl-c1\">next</span>(dataloader_iterator)\n        <span class=\"pl-k\">except</span> <span class=\"pl-c1\">StopIteration</span>:\n            dataloader_iterator <span class=\"pl-k\">=</span> <span class=\"pl-c1\">iter</span>(dataloader)\n            data, target <span class=\"pl-k\">=</span> <span class=\"pl-c1\">next</span>(dataloader_iterator)\n        do_something()</pre></div>\n<p>It's very ugly but it works just fine.</p>", "body_text": "@shaibagon\nIt's not documented very well but when you do iter(dataloader) you create an object of class _DataLoaderIter and, in the loop, you'll create same object n times and retrieve the first batch only.\nA workaround is to create a _DataLoaderIter outside the loop and iterate over it. The problem is that once all batches are retrieved, _DataLoaderIter will raise a StopIteration error.\nTo avoid problems, what I'm currently doing is the following:\n    dataloader_iterator = iter(dataloader)\n    for i in range(iterations):\n        try:\n            data, target = next(dataloader_iterator)\n        except StopIteration:\n            dataloader_iterator = iter(dataloader)\n            data, target = next(dataloader_iterator)\n        do_something()\nIt's very ugly but it works just fine.", "body": "@shaibagon \r\nIt's not documented very well but when you do ```iter(dataloader)``` you create an object of class [_DataLoaderIter](https://github.com/pytorch/pytorch/blob/v1.0rc1/torch/utils/data/dataloader.py#L246) and, in the loop, you'll create same object ```n``` times and retrieve the first batch only. \r\nA workaround is to create a _DataLoaderIter outside the loop and iterate over it. The problem is that once all batches are retrieved, _DataLoaderIter will raise a [StopIteration error](https://github.com/pytorch/pytorch/blob/v1.0rc1/torch/utils/data/dataloader.py#L343). \r\n\r\nTo avoid problems, what I'm currently doing is the following:\r\n\r\n```python\r\n    dataloader_iterator = iter(dataloader)\r\n    for i in range(iterations):\r\n        try:\r\n            data, target = next(dataloader_iterator)\r\n        except StopIteration:\r\n            dataloader_iterator = iter(dataloader)\r\n            data, target = next(dataloader_iterator)\r\n        do_something()\r\n```\r\n\r\nIt's very ugly but it works just fine. "}