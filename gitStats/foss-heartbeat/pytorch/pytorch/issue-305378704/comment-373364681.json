{"url": "https://api.github.com/repos/pytorch/pytorch/issues/comments/373364681", "html_url": "https://github.com/pytorch/pytorch/pull/5795#issuecomment-373364681", "issue_url": "https://api.github.com/repos/pytorch/pytorch/issues/5795", "id": 373364681, "node_id": "MDEyOklzc3VlQ29tbWVudDM3MzM2NDY4MQ==", "user": {"login": "fmassa", "id": 9110200, "node_id": "MDQ6VXNlcjkxMTAyMDA=", "avatar_url": "https://avatars2.githubusercontent.com/u/9110200?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fmassa", "html_url": "https://github.com/fmassa", "followers_url": "https://api.github.com/users/fmassa/followers", "following_url": "https://api.github.com/users/fmassa/following{/other_user}", "gists_url": "https://api.github.com/users/fmassa/gists{/gist_id}", "starred_url": "https://api.github.com/users/fmassa/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fmassa/subscriptions", "organizations_url": "https://api.github.com/users/fmassa/orgs", "repos_url": "https://api.github.com/users/fmassa/repos", "events_url": "https://api.github.com/users/fmassa/events{/privacy}", "received_events_url": "https://api.github.com/users/fmassa/received_events", "type": "User", "site_admin": false}, "created_at": "2018-03-15T12:49:36Z", "updated_at": "2018-03-15T12:49:36Z", "author_association": "MEMBER", "body_html": "<p>It seems that numpy perform different type promotions if the type is a 0-d tensor or not.</p>\n<div class=\"highlight highlight-source-python\"><pre><span class=\"pl-c1\">print</span>((np.random.rand(<span class=\"pl-c1\">2</span>).astype(np.float32) <span class=\"pl-k\">+</span> np.array([<span class=\"pl-c1\">1</span>], <span class=\"pl-v\">dtype</span><span class=\"pl-k\">=</span>np.float64)).dtype)\n<span class=\"pl-c\"><span class=\"pl-c\">#</span> float64</span>\n<span class=\"pl-c1\">print</span>((np.random.rand(<span class=\"pl-c1\">2</span>).astype(np.float32) <span class=\"pl-k\">+</span> np.array(<span class=\"pl-c1\">1</span>, <span class=\"pl-v\">dtype</span><span class=\"pl-k\">=</span>np.float64)).dtype)\n<span class=\"pl-c\"><span class=\"pl-c\">#</span> float32</span>\n<span class=\"pl-c1\">print</span>((np.array(<span class=\"pl-c1\">1</span>) <span class=\"pl-k\">+</span> np.array(<span class=\"pl-c1\">1</span>, <span class=\"pl-v\">dtype</span><span class=\"pl-k\">=</span>np.float32)).dtype)\n<span class=\"pl-c\"><span class=\"pl-c\">#</span> float64</span></pre></div>", "body_text": "It seems that numpy perform different type promotions if the type is a 0-d tensor or not.\nprint((np.random.rand(2).astype(np.float32) + np.array([1], dtype=np.float64)).dtype)\n# float64\nprint((np.random.rand(2).astype(np.float32) + np.array(1, dtype=np.float64)).dtype)\n# float32\nprint((np.array(1) + np.array(1, dtype=np.float32)).dtype)\n# float64", "body": "It seems that numpy perform different type promotions if the type is a 0-d tensor or not.\r\n```python\r\nprint((np.random.rand(2).astype(np.float32) + np.array([1], dtype=np.float64)).dtype)\r\n# float64\r\nprint((np.random.rand(2).astype(np.float32) + np.array(1, dtype=np.float64)).dtype)\r\n# float32\r\nprint((np.array(1) + np.array(1, dtype=np.float32)).dtype)\r\n# float64\r\n```"}