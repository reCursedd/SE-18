{"url": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/223755384", "pull_request_review_id": 162946847, "id": 223755384, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIyMzc1NTM4NA==", "diff_hunk": "@@ -152,11 +202,27 @@ message DeviceOption {\n // Operator Definition.\n message OperatorDef {\n   repeated string input = 1; // the name of the input blobs\n+  // we plan to support named inputs in schema, and this extension is for the\n+  // named inputs\n+  // if inputs are positional, just leave mapped_inputs empty\n+  // if (some) inputs are named in the schema, the positional inputs have\n+  // empty string as place holder in mapped_inputs, and the named inputs\n+  // have their schema input names at the correponding postition in\n+  // mapped_inputs\n+  repeated string mapped_inputs = 11;", "path": "caffe2/proto/caffe2.proto", "position": null, "original_position": 140, "commit_id": "af60ce1589b2921a069f7c301ab6bec2886fba79", "original_commit_id": "a65da4173542444a9dd501232a24f659e63add59", "user": {"login": "Yangqing", "id": 551151, "node_id": "MDQ6VXNlcjU1MTE1MQ==", "avatar_url": "https://avatars1.githubusercontent.com/u/551151?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Yangqing", "html_url": "https://github.com/Yangqing", "followers_url": "https://api.github.com/users/Yangqing/followers", "following_url": "https://api.github.com/users/Yangqing/following{/other_user}", "gists_url": "https://api.github.com/users/Yangqing/gists{/gist_id}", "starred_url": "https://api.github.com/users/Yangqing/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Yangqing/subscriptions", "organizations_url": "https://api.github.com/users/Yangqing/orgs", "repos_url": "https://api.github.com/users/Yangqing/repos", "events_url": "https://api.github.com/users/Yangqing/events{/privacy}", "received_events_url": "https://api.github.com/users/Yangqing/received_events", "type": "User", "site_admin": false}, "body": "I personally do not favor the mish-mash of positional and named inputs in one - this adds a big confusion and overhead for parsing and instantiation of the operators. Since the position (and in some way, the name) of the inputs are going to be codified in operator schema in one way or another, I do not see the need for mapped inputs here.\r\n\r\nThere is one use for mapped inputs - if we fold arguments into inputs and call everything an input. I would like to explicitly state that I don't support that path: all existing solutions, caffe1/2, mxnet, tensorflow, onnx, have serialization formats that separates input from arguments. The definition is clear: inputs (and outputs) are what the operators work on, and arguments are what defines the behavior of the operators. They are semantically different and they should be different.\r\n\r\nSo, to clarify, I think we should *not* have the mapped inputs field.", "created_at": "2018-10-09T15:37:34Z", "updated_at": "2018-11-23T15:52:41Z", "html_url": "https://github.com/pytorch/pytorch/pull/12384#discussion_r223755384", "pull_request_url": "https://api.github.com/repos/pytorch/pytorch/pulls/12384", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/223755384"}, "html": {"href": "https://github.com/pytorch/pytorch/pull/12384#discussion_r223755384"}, "pull_request": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/12384"}}, "body_html": "<p>I personally do not favor the mish-mash of positional and named inputs in one - this adds a big confusion and overhead for parsing and instantiation of the operators. Since the position (and in some way, the name) of the inputs are going to be codified in operator schema in one way or another, I do not see the need for mapped inputs here.</p>\n<p>There is one use for mapped inputs - if we fold arguments into inputs and call everything an input. I would like to explicitly state that I don't support that path: all existing solutions, caffe1/2, mxnet, tensorflow, onnx, have serialization formats that separates input from arguments. The definition is clear: inputs (and outputs) are what the operators work on, and arguments are what defines the behavior of the operators. They are semantically different and they should be different.</p>\n<p>So, to clarify, I think we should <em>not</em> have the mapped inputs field.</p>", "body_text": "I personally do not favor the mish-mash of positional and named inputs in one - this adds a big confusion and overhead for parsing and instantiation of the operators. Since the position (and in some way, the name) of the inputs are going to be codified in operator schema in one way or another, I do not see the need for mapped inputs here.\nThere is one use for mapped inputs - if we fold arguments into inputs and call everything an input. I would like to explicitly state that I don't support that path: all existing solutions, caffe1/2, mxnet, tensorflow, onnx, have serialization formats that separates input from arguments. The definition is clear: inputs (and outputs) are what the operators work on, and arguments are what defines the behavior of the operators. They are semantically different and they should be different.\nSo, to clarify, I think we should not have the mapped inputs field."}