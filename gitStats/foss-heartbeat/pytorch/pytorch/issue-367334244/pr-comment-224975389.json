{"url": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/224975389", "pull_request_review_id": 164480260, "id": 224975389, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIyNDk3NTM4OQ==", "diff_hunk": "@@ -184,6 +240,23 @@ message OperatorDef {\n   // This is an optional string with no assumed characteristics as\n   // operators can be constructed in any language.\n   optional string debug_info = 10;\n+\n+  // the domain of the operator\n+  // to support legacy operator libs, we use domain to distinguish which\n+  // operator lib we refer to:\n+  //   - \"CAFFE2\" means this uses Caffe2 operator library\n+  //   - \"ATEN\" means this uses ATen operator library\n+  //   - \"C10\" is for the fused library\n+  //   - if the domain is missing or empty, we use \"CAFFE2\", this is for\n+  //     legacy models\n+  optional string domain = 11;", "path": "caffe2/proto/caffe2.proto", "position": 157, "original_position": 153, "commit_id": "af60ce1589b2921a069f7c301ab6bec2886fba79", "original_commit_id": "22fab896c7dce175efdffd4e877d2a8e005c21a6", "user": {"login": "Yangqing", "id": 551151, "node_id": "MDQ6VXNlcjU1MTE1MQ==", "avatar_url": "https://avatars1.githubusercontent.com/u/551151?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Yangqing", "html_url": "https://github.com/Yangqing", "followers_url": "https://api.github.com/users/Yangqing/followers", "following_url": "https://api.github.com/users/Yangqing/following{/other_user}", "gists_url": "https://api.github.com/users/Yangqing/gists{/gist_id}", "starred_url": "https://api.github.com/users/Yangqing/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Yangqing/subscriptions", "organizations_url": "https://api.github.com/users/Yangqing/orgs", "repos_url": "https://api.github.com/users/Yangqing/repos", "events_url": "https://api.github.com/users/Yangqing/events{/privacy}", "received_events_url": "https://api.github.com/users/Yangqing/received_events", "type": "User", "site_admin": false}, "body": "Would you mind elaborating the domain field a bit? For example is it intended to\r\n\r\n(1) distinguish operators of the same name but different semantics in different libraries? or\r\n(2) distinguish operators that are *not* present in some libraries?\r\n\r\nFor (1) I think it makes sense. For (2) I don't think we should use domain: we should basically have the runtime sanity check if an operator is present in the current registration.", "created_at": "2018-10-14T00:16:42Z", "updated_at": "2018-11-23T15:52:58Z", "html_url": "https://github.com/pytorch/pytorch/pull/12384#discussion_r224975389", "pull_request_url": "https://api.github.com/repos/pytorch/pytorch/pulls/12384", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/224975389"}, "html": {"href": "https://github.com/pytorch/pytorch/pull/12384#discussion_r224975389"}, "pull_request": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/12384"}}, "body_html": "<p>Would you mind elaborating the domain field a bit? For example is it intended to</p>\n<p>(1) distinguish operators of the same name but different semantics in different libraries? or<br>\n(2) distinguish operators that are <em>not</em> present in some libraries?</p>\n<p>For (1) I think it makes sense. For (2) I don't think we should use domain: we should basically have the runtime sanity check if an operator is present in the current registration.</p>", "body_text": "Would you mind elaborating the domain field a bit? For example is it intended to\n(1) distinguish operators of the same name but different semantics in different libraries? or\n(2) distinguish operators that are not present in some libraries?\nFor (1) I think it makes sense. For (2) I don't think we should use domain: we should basically have the runtime sanity check if an operator is present in the current registration."}