{"url": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/223818597", "pull_request_review_id": 163039737, "id": 223818597, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIyMzgxODU5Nw==", "diff_hunk": "@@ -46,20 +73,33 @@ message TensorProto {\n   repeated double double_data = 9 [packed = true];\n   // For int64\n   repeated int64 int64_data = 10 [packed = true];\n+  // For raw data\n+  optional bytes raw_data = 15;\n+  // External data by file name\n+  optional string external_data = 16;\n+\n   // Optionally, a name for the tensor.\n   optional string name = 7;\n \n   // Optionally, a TensorProto can contain the details about the device that\n   // it was serialized from. This is useful in cases like snapshotting a whole\n   // workspace in a multi-GPU environment.\n   optional DeviceOption device_detail = 8;\n+\n   // When loading from chunks this is going to indicate where to put data in the\n   // full array. When not used full data have to be present\n   message Segment {\n     required int64 begin = 1;\n     required int64 end = 2;\n   }\n   optional Segment segment = 11;\n+  optional string debug_info = 17;\n+\n+  // For PyTorch serialized tensor.\n+  // When save Variable in PyTorch using TensorProto, we also need\n+  // to store whether this Variable requires gradient, whether it's buffer.\n+  optional bool require_gradient = 18;\n+  optional bool is_buffer = 19;", "path": "caffe2/proto/caffe2.proto", "position": null, "original_position": 93, "commit_id": "af60ce1589b2921a069f7c301ab6bec2886fba79", "original_commit_id": "a65da4173542444a9dd501232a24f659e63add59", "user": {"login": "houseroad", "id": 30275821, "node_id": "MDQ6VXNlcjMwMjc1ODIx", "avatar_url": "https://avatars0.githubusercontent.com/u/30275821?v=4", "gravatar_id": "", "url": "https://api.github.com/users/houseroad", "html_url": "https://github.com/houseroad", "followers_url": "https://api.github.com/users/houseroad/followers", "following_url": "https://api.github.com/users/houseroad/following{/other_user}", "gists_url": "https://api.github.com/users/houseroad/gists{/gist_id}", "starred_url": "https://api.github.com/users/houseroad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/houseroad/subscriptions", "organizations_url": "https://api.github.com/users/houseroad/orgs", "repos_url": "https://api.github.com/users/houseroad/repos", "events_url": "https://api.github.com/users/houseroad/events{/privacy}", "received_events_url": "https://api.github.com/users/houseroad/received_events", "type": "User", "site_admin": false}, "body": "Sounds good!", "created_at": "2018-10-09T18:43:02Z", "updated_at": "2018-11-23T15:52:43Z", "html_url": "https://github.com/pytorch/pytorch/pull/12384#discussion_r223818597", "pull_request_url": "https://api.github.com/repos/pytorch/pytorch/pulls/12384", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/223818597"}, "html": {"href": "https://github.com/pytorch/pytorch/pull/12384#discussion_r223818597"}, "pull_request": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/12384"}}, "body_html": "<p>Sounds good!</p>", "body_text": "Sounds good!", "in_reply_to_id": 223755835}