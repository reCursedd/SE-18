{"url": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/224975312", "pull_request_review_id": 164480260, "id": 224975312, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIyNDk3NTMxMg==", "diff_hunk": "@@ -11,27 +11,73 @@ package caffe2;\n //     is mainly for backward compability purposes but we may consider using\n //     those in the future.\n \n+// ExternalDataProto stores the pointer to the content of TensorProto\n+// the content are stored in the raw format as little endian\n+message ExternalDataProto {\n+  // type of the external storage type, can be the following:\n+  enum SourceType {\n+    // use external file to store the data, and id is the POSIX relative path\n+    // to the file\n+    FILE = 0;\n+    // the wrapper defined in torch/csrc/jit/serialization.h is used,\n+    // and id is the tag to help the runtime identify the data\n+    // this type of storage is set as DEFAULT and recommended for external\n+    // data storage\n+    TORCH_WRAPPER = 1;\n+  }\n+  optional SourceType source_type = 1 [default = TORCH_WRAPPER];", "path": "caffe2/proto/caffe2.proto", "position": null, "original_position": 18, "commit_id": "af60ce1589b2921a069f7c301ab6bec2886fba79", "original_commit_id": "22fab896c7dce175efdffd4e877d2a8e005c21a6", "user": {"login": "Yangqing", "id": 551151, "node_id": "MDQ6VXNlcjU1MTE1MQ==", "avatar_url": "https://avatars1.githubusercontent.com/u/551151?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Yangqing", "html_url": "https://github.com/Yangqing", "followers_url": "https://api.github.com/users/Yangqing/followers", "following_url": "https://api.github.com/users/Yangqing/following{/other_user}", "gists_url": "https://api.github.com/users/Yangqing/gists{/gist_id}", "starred_url": "https://api.github.com/users/Yangqing/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Yangqing/subscriptions", "organizations_url": "https://api.github.com/users/Yangqing/orgs", "repos_url": "https://api.github.com/users/Yangqing/repos", "events_url": "https://api.github.com/users/Yangqing/events{/privacy}", "received_events_url": "https://api.github.com/users/Yangqing/received_events", "type": "User", "site_admin": false}, "body": "For future proof designs, proto3 will get rid of default, so we should probably value TORCH_WRAPPER as 0. Default default for enum type is 0.", "created_at": "2018-10-14T00:12:57Z", "updated_at": "2018-11-23T15:52:58Z", "html_url": "https://github.com/pytorch/pytorch/pull/12384#discussion_r224975312", "pull_request_url": "https://api.github.com/repos/pytorch/pytorch/pulls/12384", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/224975312"}, "html": {"href": "https://github.com/pytorch/pytorch/pull/12384#discussion_r224975312"}, "pull_request": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/12384"}}, "body_html": "<p>For future proof designs, proto3 will get rid of default, so we should probably value TORCH_WRAPPER as 0. Default default for enum type is 0.</p>", "body_text": "For future proof designs, proto3 will get rid of default, so we should probably value TORCH_WRAPPER as 0. Default default for enum type is 0."}