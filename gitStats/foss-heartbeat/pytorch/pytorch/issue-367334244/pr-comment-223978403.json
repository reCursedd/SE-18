{"url": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/223978403", "pull_request_review_id": 163232997, "id": 223978403, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIyMzk3ODQwMw==", "diff_hunk": "@@ -11,27 +11,69 @@ package caffe2;\n //     is mainly for backward compability purposes but we may consider using\n //     those in the future.\n \n+// ExternalDataProto stores the pointer to the content of TensorProto\n+message ExternalDataProto {\n+  // type of the external storage type, can be the following:\n+  //   - FILE, external file, id is the path to the file\n+  //   - TORCH_WRAPPER, the wrapper in torch/csrc/jit/serialization.h is used,\n+  //     id is the tag\n+  //   - DB, id is the serialized DBReaderProto\n+  // NEW type to be ADDED here\n+  optional string type = 1;", "path": "caffe2/proto/caffe2.proto", "position": null, "original_position": 12, "commit_id": "af60ce1589b2921a069f7c301ab6bec2886fba79", "original_commit_id": "68dd65e5dfe6fee935ecbf8564478f422446414f", "user": {"login": "kennyhorror", "id": 1067890, "node_id": "MDQ6VXNlcjEwNjc4OTA=", "avatar_url": "https://avatars3.githubusercontent.com/u/1067890?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kennyhorror", "html_url": "https://github.com/kennyhorror", "followers_url": "https://api.github.com/users/kennyhorror/followers", "following_url": "https://api.github.com/users/kennyhorror/following{/other_user}", "gists_url": "https://api.github.com/users/kennyhorror/gists{/gist_id}", "starred_url": "https://api.github.com/users/kennyhorror/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kennyhorror/subscriptions", "organizations_url": "https://api.github.com/users/kennyhorror/orgs", "repos_url": "https://api.github.com/users/kennyhorror/repos", "events_url": "https://api.github.com/users/kennyhorror/events{/privacy}", "received_events_url": "https://api.github.com/users/kennyhorror/received_events", "type": "User", "site_admin": false}, "body": "What is the motivation for this to be string instead of enum?\r\n\r\nAlso as a second question - how access to the external files is supposed to be handled? Is it assuming thtat only POSIX files are supported for this path and everything else goes through DBReaderProto?\r\n\r\nAlso what is the plan to warranty integrity of the models for cases of production delivery? I can totally foresee cases when certain external files will be lost/not accessible for one or another reason.", "created_at": "2018-10-10T08:20:58Z", "updated_at": "2018-11-23T15:52:48Z", "html_url": "https://github.com/pytorch/pytorch/pull/12384#discussion_r223978403", "pull_request_url": "https://api.github.com/repos/pytorch/pytorch/pulls/12384", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/223978403"}, "html": {"href": "https://github.com/pytorch/pytorch/pull/12384#discussion_r223978403"}, "pull_request": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/12384"}}, "body_html": "<p>What is the motivation for this to be string instead of enum?</p>\n<p>Also as a second question - how access to the external files is supposed to be handled? Is it assuming thtat only POSIX files are supported for this path and everything else goes through DBReaderProto?</p>\n<p>Also what is the plan to warranty integrity of the models for cases of production delivery? I can totally foresee cases when certain external files will be lost/not accessible for one or another reason.</p>", "body_text": "What is the motivation for this to be string instead of enum?\nAlso as a second question - how access to the external files is supposed to be handled? Is it assuming thtat only POSIX files are supported for this path and everything else goes through DBReaderProto?\nAlso what is the plan to warranty integrity of the models for cases of production delivery? I can totally foresee cases when certain external files will be lost/not accessible for one or another reason."}