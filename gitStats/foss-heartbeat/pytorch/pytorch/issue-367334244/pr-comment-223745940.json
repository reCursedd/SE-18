{"url": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/223745940", "pull_request_review_id": 162946847, "id": 223745940, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIyMzc0NTk0MA==", "diff_hunk": "@@ -15,23 +15,50 @@ package caffe2;\n message TensorProto {\n   // The dimensions in the tensor.\n   repeated int64 dims = 1;\n+  // The strides of the tensor.\n+  repeated int64 strides = 12;\n+\n+  // Data type\n   enum DataType {\n     UNDEFINED = 0;\n-    FLOAT = 1;  // float\n-    INT32 = 2;  // int\n-    BYTE = 3;  // BYTE, when deserialized, is going to be restored as uint8.\n-    STRING = 4;  // string\n-    // Less-commonly used data types.\n-    BOOL = 5;  // bool\n-    UINT8 = 6;  // uint8_t\n-    INT8 = 7;  // int8_t\n-    UINT16 = 8;  // uint16_t\n-    INT16 = 9;  // int16_t\n-    INT64 = 10;  // int64_t\n+\n+    // Basic types\n+    FLOAT = 1;     // float\n+    INT32 = 2;     // int\n+    BYTE = 3;      // byte, when deserialized, is going to be restored as uint8\n+    STRING = 4;    // string\n+\n+    // Less-commonly used data types\n+    BOOL = 5;      // bool\n+    UINT8 = 6;     // uint8_t\n+    INT8 = 7;      // int8_t\n+    UINT16 = 8;    // uint16_t\n+    INT16 = 9;     // int16_t\n+    INT64 = 10;    // int64_t\n     FLOAT16 = 12;  // at::Half\n-    DOUBLE = 13;  // double\n+    DOUBLE = 13;   // double\n+\n+    // There are two use cases of this field:\n+    //   1) to replace BlobProto\n+    //   2) to enable the non-tensor storage\n+    // If data_type == SPEICAL, special_type should be present\n+    SPECIAL = 51;", "path": "caffe2/proto/caffe2.proto", "position": null, "original_position": 43, "commit_id": "af60ce1589b2921a069f7c301ab6bec2886fba79", "original_commit_id": "a65da4173542444a9dd501232a24f659e63add59", "user": {"login": "Yangqing", "id": 551151, "node_id": "MDQ6VXNlcjU1MTE1MQ==", "avatar_url": "https://avatars1.githubusercontent.com/u/551151?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Yangqing", "html_url": "https://github.com/Yangqing", "followers_url": "https://api.github.com/users/Yangqing/followers", "following_url": "https://api.github.com/users/Yangqing/following{/other_user}", "gists_url": "https://api.github.com/users/Yangqing/gists{/gist_id}", "starred_url": "https://api.github.com/users/Yangqing/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Yangqing/subscriptions", "organizations_url": "https://api.github.com/users/Yangqing/orgs", "repos_url": "https://api.github.com/users/Yangqing/repos", "events_url": "https://api.github.com/users/Yangqing/events{/privacy}", "received_events_url": "https://api.github.com/users/Yangqing/received_events", "type": "User", "site_admin": false}, "body": "Out of curiosity, why 51? Is it to reserve numbers for potentially new data points? (In this case, maybe we can use larger numbers just to be safe, but this is a nit point)", "created_at": "2018-10-09T15:15:26Z", "updated_at": "2018-11-23T15:52:40Z", "html_url": "https://github.com/pytorch/pytorch/pull/12384#discussion_r223745940", "pull_request_url": "https://api.github.com/repos/pytorch/pytorch/pulls/12384", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/223745940"}, "html": {"href": "https://github.com/pytorch/pytorch/pull/12384#discussion_r223745940"}, "pull_request": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/12384"}}, "body_html": "<p>Out of curiosity, why 51? Is it to reserve numbers for potentially new data points? (In this case, maybe we can use larger numbers just to be safe, but this is a nit point)</p>", "body_text": "Out of curiosity, why 51? Is it to reserve numbers for potentially new data points? (In this case, maybe we can use larger numbers just to be safe, but this is a nit point)"}