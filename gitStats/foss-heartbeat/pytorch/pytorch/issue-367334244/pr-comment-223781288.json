{"url": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/223781288", "pull_request_review_id": 162959745, "id": 223781288, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIyMzc4MTI4OA==", "diff_hunk": "@@ -152,11 +202,27 @@ message DeviceOption {\n // Operator Definition.\n message OperatorDef {\n   repeated string input = 1; // the name of the input blobs\n+  // we plan to support named inputs in schema, and this extension is for the\n+  // named inputs\n+  // if inputs are positional, just leave mapped_inputs empty\n+  // if (some) inputs are named in the schema, the positional inputs have\n+  // empty string as place holder in mapped_inputs, and the named inputs\n+  // have their schema input names at the correponding postition in\n+  // mapped_inputs\n+  repeated string mapped_inputs = 11;", "path": "caffe2/proto/caffe2.proto", "position": null, "original_position": 140, "commit_id": "af60ce1589b2921a069f7c301ab6bec2886fba79", "original_commit_id": "a65da4173542444a9dd501232a24f659e63add59", "user": {"login": "dzhulgakov", "id": 17890620, "node_id": "MDQ6VXNlcjE3ODkwNjIw", "avatar_url": "https://avatars2.githubusercontent.com/u/17890620?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dzhulgakov", "html_url": "https://github.com/dzhulgakov", "followers_url": "https://api.github.com/users/dzhulgakov/followers", "following_url": "https://api.github.com/users/dzhulgakov/following{/other_user}", "gists_url": "https://api.github.com/users/dzhulgakov/gists{/gist_id}", "starred_url": "https://api.github.com/users/dzhulgakov/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dzhulgakov/subscriptions", "organizations_url": "https://api.github.com/users/dzhulgakov/orgs", "repos_url": "https://api.github.com/users/dzhulgakov/repos", "events_url": "https://api.github.com/users/dzhulgakov/events{/privacy}", "received_events_url": "https://api.github.com/users/dzhulgakov/received_events", "type": "User", "site_admin": false}, "body": "there are several things that get conflated here:\r\n1) should we use names or positions for serialization? There's an argument that even for C2 nets it's much better to serialize names as it has clearer semantics for adding/removing inputs when the need occurs.\r\n2) do we have distinction between inputs and arguments on serialization format or we try to enforce it downstream when op is instantiated?\r\n3) are inputs which are constants specified as input constant nodes in the graph or are they present on the node itself.\r\n\r\nMy slight preference for the ideal world is:\r\n1) everything is names so we  can add/remove inputs freely\r\n2) it's enforced downstream as a way to register some kernels that require some inputs to be constants (hence arguments)\r\n3) no strong preference for the serialization purposes\r\n\r\nFrom the delta with Caffe2 - the decision we need to make here is whether we want to enable (1) and add names to all operators within C2 or do some trick with putting just a digit there.", "created_at": "2018-10-09T16:51:58Z", "updated_at": "2018-11-23T15:52:42Z", "html_url": "https://github.com/pytorch/pytorch/pull/12384#discussion_r223781288", "pull_request_url": "https://api.github.com/repos/pytorch/pytorch/pulls/12384", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/223781288"}, "html": {"href": "https://github.com/pytorch/pytorch/pull/12384#discussion_r223781288"}, "pull_request": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/12384"}}, "body_html": "<p>there are several things that get conflated here:</p>\n<ol>\n<li>should we use names or positions for serialization? There's an argument that even for C2 nets it's much better to serialize names as it has clearer semantics for adding/removing inputs when the need occurs.</li>\n<li>do we have distinction between inputs and arguments on serialization format or we try to enforce it downstream when op is instantiated?</li>\n<li>are inputs which are constants specified as input constant nodes in the graph or are they present on the node itself.</li>\n</ol>\n<p>My slight preference for the ideal world is:</p>\n<ol>\n<li>everything is names so we  can add/remove inputs freely</li>\n<li>it's enforced downstream as a way to register some kernels that require some inputs to be constants (hence arguments)</li>\n<li>no strong preference for the serialization purposes</li>\n</ol>\n<p>From the delta with Caffe2 - the decision we need to make here is whether we want to enable (1) and add names to all operators within C2 or do some trick with putting just a digit there.</p>", "body_text": "there are several things that get conflated here:\n\nshould we use names or positions for serialization? There's an argument that even for C2 nets it's much better to serialize names as it has clearer semantics for adding/removing inputs when the need occurs.\ndo we have distinction between inputs and arguments on serialization format or we try to enforce it downstream when op is instantiated?\nare inputs which are constants specified as input constant nodes in the graph or are they present on the node itself.\n\nMy slight preference for the ideal world is:\n\neverything is names so we  can add/remove inputs freely\nit's enforced downstream as a way to register some kernels that require some inputs to be constants (hence arguments)\nno strong preference for the serialization purposes\n\nFrom the delta with Caffe2 - the decision we need to make here is whether we want to enable (1) and add names to all operators within C2 or do some trick with putting just a digit there.", "in_reply_to_id": 223755384}