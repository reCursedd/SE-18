{"url": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/224533637", "pull_request_review_id": 163926211, "id": 224533637, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIyNDUzMzYzNw==", "diff_hunk": "@@ -520,7 +526,14 @@ void TensorDeserializer::Deserialize(const TensorProto& proto, Tensor* tensor) {\n                 (i + chunkBegin) * temp_blob.meta().itemsize(),\n             1);\n       }\n-    }\n+    } break;\n+    case TensorProto_DataType_SPECIAL: {\n+      CAFFE_THROW(\"SPECIAL Tensor is not handled yet.\");\n+    } break;\n+    case TensorProto_DataType_NO_CONTENT: {\n+      CAFFE_THROW(\"NO_CONTENT Tensor should not be deserialized.\");\n+    } break;\n+      // Note: we intentially do not provide \"default:\" so if any new data types", "path": "caffe2/core/blob_serialization.cc", "position": 6, "original_position": 25, "commit_id": "af60ce1589b2921a069f7c301ab6bec2886fba79", "original_commit_id": "68dd65e5dfe6fee935ecbf8564478f422446414f", "user": {"login": "houseroad", "id": 30275821, "node_id": "MDQ6VXNlcjMwMjc1ODIx", "avatar_url": "https://avatars0.githubusercontent.com/u/30275821?v=4", "gravatar_id": "", "url": "https://api.github.com/users/houseroad", "html_url": "https://github.com/houseroad", "followers_url": "https://api.github.com/users/houseroad/followers", "following_url": "https://api.github.com/users/houseroad/following{/other_user}", "gists_url": "https://api.github.com/users/houseroad/gists{/gist_id}", "starred_url": "https://api.github.com/users/houseroad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/houseroad/subscriptions", "organizations_url": "https://api.github.com/users/houseroad/orgs", "repos_url": "https://api.github.com/users/houseroad/repos", "events_url": "https://api.github.com/users/houseroad/events{/privacy}", "received_events_url": "https://api.github.com/users/houseroad/received_events", "type": "User", "site_admin": false}, "body": "To keep the forward compatibility, we should add proto/IR version. Each time we update the proto, we bump up the version. And the runtime rejects the model, if the IR version is too high. Also for the NO_CONTENT option, we think I should move it to STORAGE_TYPE, because it's safer and looks more natural.", "created_at": "2018-10-11T17:21:33Z", "updated_at": "2018-11-23T15:52:53Z", "html_url": "https://github.com/pytorch/pytorch/pull/12384#discussion_r224533637", "pull_request_url": "https://api.github.com/repos/pytorch/pytorch/pulls/12384", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/224533637"}, "html": {"href": "https://github.com/pytorch/pytorch/pull/12384#discussion_r224533637"}, "pull_request": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/12384"}}, "body_html": "<p>To keep the forward compatibility, we should add proto/IR version. Each time we update the proto, we bump up the version. And the runtime rejects the model, if the IR version is too high. Also for the NO_CONTENT option, we think I should move it to STORAGE_TYPE, because it's safer and looks more natural.</p>", "body_text": "To keep the forward compatibility, we should add proto/IR version. Each time we update the proto, we bump up the version. And the runtime rejects the model, if the IR version is too high. Also for the NO_CONTENT option, we think I should move it to STORAGE_TYPE, because it's safer and looks more natural.", "in_reply_to_id": 223977384}