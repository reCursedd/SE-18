{"url": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/223807278", "pull_request_review_id": 163025105, "id": 223807278, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIyMzgwNzI3OA==", "diff_hunk": "@@ -15,23 +15,50 @@ package caffe2;\n message TensorProto {\n   // The dimensions in the tensor.\n   repeated int64 dims = 1;\n+  // The strides of the tensor.\n+  repeated int64 strides = 12;\n+\n+  // Data type\n   enum DataType {\n     UNDEFINED = 0;\n-    FLOAT = 1;  // float\n-    INT32 = 2;  // int\n-    BYTE = 3;  // BYTE, when deserialized, is going to be restored as uint8.\n-    STRING = 4;  // string\n-    // Less-commonly used data types.\n-    BOOL = 5;  // bool\n-    UINT8 = 6;  // uint8_t\n-    INT8 = 7;  // int8_t\n-    UINT16 = 8;  // uint16_t\n-    INT16 = 9;  // int16_t\n-    INT64 = 10;  // int64_t\n+\n+    // Basic types\n+    FLOAT = 1;     // float\n+    INT32 = 2;     // int\n+    BYTE = 3;      // byte, when deserialized, is going to be restored as uint8\n+    STRING = 4;    // string\n+\n+    // Less-commonly used data types\n+    BOOL = 5;      // bool\n+    UINT8 = 6;     // uint8_t\n+    INT8 = 7;      // int8_t\n+    UINT16 = 8;    // uint16_t\n+    INT16 = 9;     // int16_t\n+    INT64 = 10;    // int64_t\n     FLOAT16 = 12;  // at::Half\n-    DOUBLE = 13;  // double\n+    DOUBLE = 13;   // double\n+\n+    // There are two use cases of this field:\n+    //   1) to replace BlobProto\n+    //   2) to enable the non-tensor storage\n+    // If data_type == SPEICAL, special_type should be present\n+    SPECIAL = 51;\n+    // When DataType is NO_CONTENT, we use TensorProto to store only type\n+    // and shape information. Reuse TensorProto to store type and shape\n+    // because we can just have one proto, not having another ValueInfoProto\n+    NO_CONTENT = 52;\n   }\n   optional DataType data_type = 2 [default = FLOAT];\n+  // if data_type is SPECIAL, use this field to express the type info\n+  optional SpecialType special_type = 13;\n+\n+  // Data storage", "path": "caffe2/proto/caffe2.proto", "position": null, "original_position": 53, "commit_id": "af60ce1589b2921a069f7c301ab6bec2886fba79", "original_commit_id": "a65da4173542444a9dd501232a24f659e63add59", "user": {"login": "houseroad", "id": 30275821, "node_id": "MDQ6VXNlcjMwMjc1ODIx", "avatar_url": "https://avatars0.githubusercontent.com/u/30275821?v=4", "gravatar_id": "", "url": "https://api.github.com/users/houseroad", "html_url": "https://github.com/houseroad", "followers_url": "https://api.github.com/users/houseroad/followers", "following_url": "https://api.github.com/users/houseroad/following{/other_user}", "gists_url": "https://api.github.com/users/houseroad/gists{/gist_id}", "starred_url": "https://api.github.com/users/houseroad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/houseroad/subscriptions", "organizations_url": "https://api.github.com/users/houseroad/orgs", "repos_url": "https://api.github.com/users/houseroad/repos", "events_url": "https://api.github.com/users/houseroad/events{/privacy}", "received_events_url": "https://api.github.com/users/houseroad/received_events", "type": "User", "site_admin": false}, "body": "Yeah, good point, will add the comments.", "created_at": "2018-10-09T18:08:16Z", "updated_at": "2018-11-23T15:52:43Z", "html_url": "https://github.com/pytorch/pytorch/pull/12384#discussion_r223807278", "pull_request_url": "https://api.github.com/repos/pytorch/pytorch/pulls/12384", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/223807278"}, "html": {"href": "https://github.com/pytorch/pytorch/pull/12384#discussion_r223807278"}, "pull_request": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/12384"}}, "body_html": "<p>Yeah, good point, will add the comments.</p>", "body_text": "Yeah, good point, will add the comments.", "in_reply_to_id": 223746188}