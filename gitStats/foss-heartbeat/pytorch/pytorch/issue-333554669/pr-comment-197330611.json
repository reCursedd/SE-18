{"url": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/197330611", "pull_request_review_id": 131055308, "id": 197330611, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5NzMzMDYxMQ==", "diff_hunk": "@@ -20,12 +20,16 @@ namespace at {\n /// `type()` to return a variable type instead of a tensor type, such that\n /// variables are created inside factory methods, instead of tensors.\n struct TensorOptions {\n-  /// Constructs the `TensorOptions` with valid defaults, which are:\n-  /// - dtype: float\n-  /// - device: CPU\n-  /// - layout: strided\n+  TensorOptions() : TensorOptions(/*use_thread_local_default_options=*/true) {}\n+\n+  /// Constructs the `TensorOptions` with defaults taken from the thread local\n+  /// `TensorOptions` object if `use_thread_local_default_options`, else\n+  /// defaults to:\n+  /// - dtype: kFloat,\n+  /// - device: kCPU,\n+  /// - layout: kStrided,\n   /// - requires_grad: false\n-  TensorOptions() = default;\n+  explicit TensorOptions(bool use_thread_local_default_options);", "path": "aten/src/ATen/TensorOptions.h", "position": 18, "original_position": 18, "commit_id": "82cb0fea9271e6ec42397f2a0ad057b6119df853", "original_commit_id": "82cb0fea9271e6ec42397f2a0ad057b6119df853", "user": {"login": "ezyang", "id": 13564, "node_id": "MDQ6VXNlcjEzNTY0", "avatar_url": "https://avatars0.githubusercontent.com/u/13564?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ezyang", "html_url": "https://github.com/ezyang", "followers_url": "https://api.github.com/users/ezyang/followers", "following_url": "https://api.github.com/users/ezyang/following{/other_user}", "gists_url": "https://api.github.com/users/ezyang/gists{/gist_id}", "starred_url": "https://api.github.com/users/ezyang/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ezyang/subscriptions", "organizations_url": "https://api.github.com/users/ezyang/orgs", "repos_url": "https://api.github.com/users/ezyang/repos", "events_url": "https://api.github.com/users/ezyang/events{/privacy}", "received_events_url": "https://api.github.com/users/ezyang/received_events", "type": "User", "site_admin": false}, "body": "NB: this is a little inconsistent with how the PyTorch API works. Consider the two corresponding variants:\r\n\r\n```\r\nkwargs = {} # default options\r\n# ...\r\nt = torch.zeros(2, **kwargs)\r\n```\r\n\r\nversus\r\n\r\n```\r\nTensorOptions options(true);\r\n// ...\r\nauto t = at::zeros({2}, options);\r\n```\r\n\r\nThe former reads the TLS at the time of zeros construction; the latter reads TLS at the time of options construction.", "created_at": "2018-06-22T03:11:13Z", "updated_at": "2018-11-23T15:46:05Z", "html_url": "https://github.com/pytorch/pytorch/pull/8647#discussion_r197330611", "pull_request_url": "https://api.github.com/repos/pytorch/pytorch/pulls/8647", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/197330611"}, "html": {"href": "https://github.com/pytorch/pytorch/pull/8647#discussion_r197330611"}, "pull_request": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/8647"}}, "body_html": "<p>NB: this is a little inconsistent with how the PyTorch API works. Consider the two corresponding variants:</p>\n<pre><code>kwargs = {} # default options\n# ...\nt = torch.zeros(2, **kwargs)\n</code></pre>\n<p>versus</p>\n<pre><code>TensorOptions options(true);\n// ...\nauto t = at::zeros({2}, options);\n</code></pre>\n<p>The former reads the TLS at the time of zeros construction; the latter reads TLS at the time of options construction.</p>", "body_text": "NB: this is a little inconsistent with how the PyTorch API works. Consider the two corresponding variants:\nkwargs = {} # default options\n# ...\nt = torch.zeros(2, **kwargs)\n\nversus\nTensorOptions options(true);\n// ...\nauto t = at::zeros({2}, options);\n\nThe former reads the TLS at the time of zeros construction; the latter reads TLS at the time of options construction."}