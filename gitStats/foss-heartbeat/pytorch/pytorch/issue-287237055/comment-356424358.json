{"url": "https://api.github.com/repos/pytorch/pytorch/issues/comments/356424358", "html_url": "https://github.com/pytorch/pytorch/pull/4566#issuecomment-356424358", "issue_url": "https://api.github.com/repos/pytorch/pytorch/issues/4566", "id": 356424358, "node_id": "MDEyOklzc3VlQ29tbWVudDM1NjQyNDM1OA==", "user": {"login": "gchanan", "id": 3768583, "node_id": "MDQ6VXNlcjM3Njg1ODM=", "avatar_url": "https://avatars2.githubusercontent.com/u/3768583?v=4", "gravatar_id": "", "url": "https://api.github.com/users/gchanan", "html_url": "https://github.com/gchanan", "followers_url": "https://api.github.com/users/gchanan/followers", "following_url": "https://api.github.com/users/gchanan/following{/other_user}", "gists_url": "https://api.github.com/users/gchanan/gists{/gist_id}", "starred_url": "https://api.github.com/users/gchanan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/gchanan/subscriptions", "organizations_url": "https://api.github.com/users/gchanan/orgs", "repos_url": "https://api.github.com/users/gchanan/repos", "events_url": "https://api.github.com/users/gchanan/events{/privacy}", "received_events_url": "https://api.github.com/users/gchanan/received_events", "type": "User", "site_admin": false}, "created_at": "2018-01-09T21:45:43Z", "updated_at": "2018-01-09T21:45:43Z", "author_association": "CONTRIBUTOR", "body_html": "<p>I ran into this while trying to add some scalar tests to autograd; essentially because we have scalars in Variables (via ATen), but not with tensors, I need to construct my inputs using only the Variable API (i.e. not escaping to Tensor API).  So what is currently something like:</p>\n<pre><code>grad_y = (Variable(torch.randn(dummy_out.size()), requires_grad=dummy_out.requires_grad),)\n</code></pre>\n<p>becomes something like:</p>\n<pre><code>grad_y = dummy_out.new(dummy_out.size())\ngrad_y.normal_()\ngrad_y.requires_grad=True\n</code></pre>\n<p>but this fails in the backward in the accumulate_grad check that I've removed.  Given that we are planing to merge the Variable and Tensor API, it seems reasonable to have a construct like this.</p>", "body_text": "I ran into this while trying to add some scalar tests to autograd; essentially because we have scalars in Variables (via ATen), but not with tensors, I need to construct my inputs using only the Variable API (i.e. not escaping to Tensor API).  So what is currently something like:\ngrad_y = (Variable(torch.randn(dummy_out.size()), requires_grad=dummy_out.requires_grad),)\n\nbecomes something like:\ngrad_y = dummy_out.new(dummy_out.size())\ngrad_y.normal_()\ngrad_y.requires_grad=True\n\nbut this fails in the backward in the accumulate_grad check that I've removed.  Given that we are planing to merge the Variable and Tensor API, it seems reasonable to have a construct like this.", "body": "I ran into this while trying to add some scalar tests to autograd; essentially because we have scalars in Variables (via ATen), but not with tensors, I need to construct my inputs using only the Variable API (i.e. not escaping to Tensor API).  So what is currently something like:\r\n```\r\ngrad_y = (Variable(torch.randn(dummy_out.size()), requires_grad=dummy_out.requires_grad),)\r\n```\r\nbecomes something like:\r\n```\r\ngrad_y = dummy_out.new(dummy_out.size())\r\ngrad_y.normal_()\r\ngrad_y.requires_grad=True\r\n```\r\n\r\nbut this fails in the backward in the accumulate_grad check that I've removed.  Given that we are planing to merge the Variable and Tensor API, it seems reasonable to have a construct like this."}