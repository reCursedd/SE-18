{"url": "https://api.github.com/repos/pytorch/pytorch/issues/comments/356691921", "html_url": "https://github.com/pytorch/pytorch/pull/4566#issuecomment-356691921", "issue_url": "https://api.github.com/repos/pytorch/pytorch/issues/4566", "id": 356691921, "node_id": "MDEyOklzc3VlQ29tbWVudDM1NjY5MTkyMQ==", "user": {"login": "gchanan", "id": 3768583, "node_id": "MDQ6VXNlcjM3Njg1ODM=", "avatar_url": "https://avatars2.githubusercontent.com/u/3768583?v=4", "gravatar_id": "", "url": "https://api.github.com/users/gchanan", "html_url": "https://github.com/gchanan", "followers_url": "https://api.github.com/users/gchanan/followers", "following_url": "https://api.github.com/users/gchanan/following{/other_user}", "gists_url": "https://api.github.com/users/gchanan/gists{/gist_id}", "starred_url": "https://api.github.com/users/gchanan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/gchanan/subscriptions", "organizations_url": "https://api.github.com/users/gchanan/orgs", "repos_url": "https://api.github.com/users/gchanan/repos", "events_url": "https://api.github.com/users/gchanan/events{/privacy}", "received_events_url": "https://api.github.com/users/gchanan/received_events", "type": "User", "site_admin": false}, "created_at": "2018-01-10T18:25:33Z", "updated_at": "2018-01-10T18:25:33Z", "author_association": "CONTRIBUTOR", "body_html": "<p>it doesn't work in that direction, see:</p>\n<pre><code>inline bool Variable::requires_grad() const {\n  return get()-&gt;_requires_grad || get()-&gt;_grad_fn || (is_view() &amp;&amp; base().requires_grad());\n}\n</code></pre>\n<p><a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=655866\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/colesbury\">@colesbury</a> said it's to handle cases in python functions when an input is returned from the forward; we consider that a view (and set requires_grad on it), but don't want to affect the base.</p>", "body_text": "it doesn't work in that direction, see:\ninline bool Variable::requires_grad() const {\n  return get()->_requires_grad || get()->_grad_fn || (is_view() && base().requires_grad());\n}\n\n@colesbury said it's to handle cases in python functions when an input is returned from the forward; we consider that a view (and set requires_grad on it), but don't want to affect the base.", "body": "it doesn't work in that direction, see:\r\n```\r\ninline bool Variable::requires_grad() const {\r\n  return get()->_requires_grad || get()->_grad_fn || (is_view() && base().requires_grad());\r\n}\r\n```\r\n\r\n@colesbury said it's to handle cases in python functions when an input is returned from the forward; we consider that a view (and set requires_grad on it), but don't want to affect the base."}