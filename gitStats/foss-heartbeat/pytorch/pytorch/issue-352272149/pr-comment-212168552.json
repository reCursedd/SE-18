{"url": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/212168552", "pull_request_review_id": 148741378, "id": 212168552, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIxMjE2ODU1Mg==", "diff_hunk": "@@ -254,9 +254,22 @@ struct Environment {\n         throw ErrorReport(loc) << \"Cannot re-assign '\" << name << \"' because it has type \" << value->kind() <<\n \t\" and \" << name << \" is not a first-class value.  Only reassignments to first-class values are allowed\";\n       }\n-      if(!as_simple_value->type()->isSubtypeOf(unshapedType(simple_parent->type()))) {\n-        throw ErrorReport(loc) << \"variable '\" << name << \"' previously has type \" << simple_parent->type()->str()\n-        << \" but is now being assigned to a value of type \" << as_simple_value->type()->str();\n+      if (!as_simple_value->type()->isSubtypeOf(\n+              unshapedType(simple_parent->type()))) {\n+        std::stringstream errMsg;\n+        errMsg << \"variable '\" << name << \"' previously has type \"\n+               << simple_parent->type()->str()\n+               << \" but is now being assigned to a value of type \"\n+               << as_simple_value->type()->str();\n+        // Special-cased error msg if we're trying to assign to a tensor list.\n+        if (simple_parent->type()->kind() == TypeKind::ListType &&\n+            as_simple_value->type()->kind() == TypeKind::ListType) {\n+          errMsg << \"\\n. (Note: empty lists are constructed as Tensor[]; \"\n+                 << \"if you want an empty list of a different type, \"\n+                 << \"use `_construct_empty_foo_list`, \"", "path": "torch/csrc/jit/script/compiler.cpp", "position": 19, "original_position": 19, "commit_id": "352e1bcd4049f56fccf1c736009efe1777b2bf9c", "original_commit_id": "352e1bcd4049f56fccf1c736009efe1777b2bf9c", "user": {"login": "apaszke", "id": 4583066, "node_id": "MDQ6VXNlcjQ1ODMwNjY=", "avatar_url": "https://avatars3.githubusercontent.com/u/4583066?v=4", "gravatar_id": "", "url": "https://api.github.com/users/apaszke", "html_url": "https://github.com/apaszke", "followers_url": "https://api.github.com/users/apaszke/followers", "following_url": "https://api.github.com/users/apaszke/following{/other_user}", "gists_url": "https://api.github.com/users/apaszke/gists{/gist_id}", "starred_url": "https://api.github.com/users/apaszke/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/apaszke/subscriptions", "organizations_url": "https://api.github.com/users/apaszke/orgs", "repos_url": "https://api.github.com/users/apaszke/repos", "events_url": "https://api.github.com/users/apaszke/events{/privacy}", "received_events_url": "https://api.github.com/users/apaszke/received_events", "type": "User", "site_admin": false}, "body": "Can we please at least call it `torch.jit.empty_int_list`? \ud83d\ude2c ", "created_at": "2018-08-23T02:48:25Z", "updated_at": "2018-11-23T15:49:48Z", "html_url": "https://github.com/pytorch/pytorch/pull/10705#discussion_r212168552", "pull_request_url": "https://api.github.com/repos/pytorch/pytorch/pulls/10705", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/212168552"}, "html": {"href": "https://github.com/pytorch/pytorch/pull/10705#discussion_r212168552"}, "pull_request": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/10705"}}, "body_html": "<p>Can we please at least call it <code>torch.jit.empty_int_list</code>? <g-emoji class=\"g-emoji\" alias=\"grimacing\" fallback-src=\"https://assets-cdn.github.com/images/icons/emoji/unicode/1f62c.png\">\ud83d\ude2c</g-emoji></p>", "body_text": "Can we please at least call it torch.jit.empty_int_list? \ud83d\ude2c"}