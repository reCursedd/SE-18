{"url": "https://api.github.com/repos/pytorch/pytorch/issues/12067", "repository_url": "https://api.github.com/repos/pytorch/pytorch", "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/12067/labels{/name}", "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/12067/comments", "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/12067/events", "html_url": "https://github.com/pytorch/pytorch/issues/12067", "id": 363762142, "node_id": "MDU6SXNzdWUzNjM3NjIxNDI=", "number": 12067, "title": "[jit] clamp fusion issues", "user": {"login": "ngimel", "id": 15841449, "node_id": "MDQ6VXNlcjE1ODQxNDQ5", "avatar_url": "https://avatars3.githubusercontent.com/u/15841449?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ngimel", "html_url": "https://github.com/ngimel", "followers_url": "https://api.github.com/users/ngimel/followers", "following_url": "https://api.github.com/users/ngimel/following{/other_user}", "gists_url": "https://api.github.com/users/ngimel/gists{/gist_id}", "starred_url": "https://api.github.com/users/ngimel/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ngimel/subscriptions", "organizations_url": "https://api.github.com/users/ngimel/orgs", "repos_url": "https://api.github.com/users/ngimel/repos", "events_url": "https://api.github.com/users/ngimel/events{/privacy}", "received_events_url": "https://api.github.com/users/ngimel/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 679953983, "node_id": "MDU6TGFiZWw2Nzk5NTM5ODM=", "url": "https://api.github.com/repos/pytorch/pytorch/labels/jit", "name": "jit", "color": "c5def5", "default": false}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2018-09-25T20:54:19Z", "updated_at": "2018-09-26T20:46:15Z", "closed_at": null, "author_association": "CONTRIBUTOR", "body_html": "<ol>\n<li>jit.script errors out if only min or only max argument is specified, with</li>\n</ol>\n<pre><code>Traceback (most recent call last):\n  File \"jitclamp.py\", line 10, in &lt;module&gt;\n    traced_fn1 = torch.jit.script(clampfn, (x,y))\n  File \"/workspace/home/pytorch_upstream/torch/jit/__init__.py\", line 589, in script\n    graph = _jit_script_compile(ast, rcb)\nRuntimeError: \narguments for call are not valid:\n  \n  for operator aten::clamp(Tensor self, Scalar min, Scalar max) -&gt; Tensor:\n  argument max not provided.\n  def clampfn(x, y):\n      return (torch.clamp(x, min=0)+y) \n              ~~~~~~~~~~~ &lt;--- HERE\nfor call at:\ndef clampfn(x, y):\n    return (torch.clamp(x, min=0)+y) \n            ~~~~~~~~~~~ &lt;--- HERE\n</code></pre>\n<p><del>jit.trace also fails, comlaining about problems stemming from this line in generated code</del></p>\n<pre><code>     auto n3 = nanf;\n</code></pre>\n<p><del>2) Both script and trace fail if min or max are specified as <code>float('inf')</code>, also complaining about a line</del></p>\n<pre><code>     auto n3 = inff;\n</code></pre>\n<p>Repro script</p>\n<pre><code>import torch\n\ndef clampfn(x, y):\n    return (torch.clamp(x, min=0)+y)\n\nrg = True\nx = torch.Tensor(10240, 1024).cuda().uniform_().requires_grad_(rg)\ny = torch.Tensor(10240, 1024).cuda().uniform_().requires_grad_(rg)\ngO = torch.Tensor(10240, 1024).cuda().uniform_()\ntraced_fn1 = torch.jit.script(clampfn, (x,y))\n#traced_fn1 = clampfn\n#print(\"trace output\", traced_fn1.graph)\n\nfor i in range(10):\n   out = traced_fn1(x.detach().requires_grad_(rg), y.detach().requires_grad_(rg))\n   out.backward(gO)\n</code></pre>\n<p>cc <a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=20787943\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/t-vi\">@t-vi</a>, <a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=38511765\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/mruberry\">@mruberry</a> promised to look at it (at least at fixing <code>auto n3 = inff</code> and <code>auto n3 = nanf</code> lines.<br>\nEdit: after <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load issue title\" data-id=\"363786982\" data-permission-text=\"Issue title is private\" data-url=\"https://github.com/pytorch/pytorch/issues/12070\" data-hovercard-type=\"pull_request\" data-hovercard-url=\"/pytorch/pytorch/pull/12070/hovercard\" href=\"https://github.com/pytorch/pytorch/pull/12070\">#12070</a> only syntax error in script remains.</p>", "body_text": "jit.script errors out if only min or only max argument is specified, with\n\nTraceback (most recent call last):\n  File \"jitclamp.py\", line 10, in <module>\n    traced_fn1 = torch.jit.script(clampfn, (x,y))\n  File \"/workspace/home/pytorch_upstream/torch/jit/__init__.py\", line 589, in script\n    graph = _jit_script_compile(ast, rcb)\nRuntimeError: \narguments for call are not valid:\n  \n  for operator aten::clamp(Tensor self, Scalar min, Scalar max) -> Tensor:\n  argument max not provided.\n  def clampfn(x, y):\n      return (torch.clamp(x, min=0)+y) \n              ~~~~~~~~~~~ <--- HERE\nfor call at:\ndef clampfn(x, y):\n    return (torch.clamp(x, min=0)+y) \n            ~~~~~~~~~~~ <--- HERE\n\njit.trace also fails, comlaining about problems stemming from this line in generated code\n     auto n3 = nanf;\n\n2) Both script and trace fail if min or max are specified as float('inf'), also complaining about a line\n     auto n3 = inff;\n\nRepro script\nimport torch\n\ndef clampfn(x, y):\n    return (torch.clamp(x, min=0)+y)\n\nrg = True\nx = torch.Tensor(10240, 1024).cuda().uniform_().requires_grad_(rg)\ny = torch.Tensor(10240, 1024).cuda().uniform_().requires_grad_(rg)\ngO = torch.Tensor(10240, 1024).cuda().uniform_()\ntraced_fn1 = torch.jit.script(clampfn, (x,y))\n#traced_fn1 = clampfn\n#print(\"trace output\", traced_fn1.graph)\n\nfor i in range(10):\n   out = traced_fn1(x.detach().requires_grad_(rg), y.detach().requires_grad_(rg))\n   out.backward(gO)\n\ncc @t-vi, @mruberry promised to look at it (at least at fixing auto n3 = inff and auto n3 = nanf lines.\nEdit: after #12070 only syntax error in script remains.", "body": "1) jit.script errors out if only min or only max argument is specified, with \r\n```\r\nTraceback (most recent call last):\r\n  File \"jitclamp.py\", line 10, in <module>\r\n    traced_fn1 = torch.jit.script(clampfn, (x,y))\r\n  File \"/workspace/home/pytorch_upstream/torch/jit/__init__.py\", line 589, in script\r\n    graph = _jit_script_compile(ast, rcb)\r\nRuntimeError: \r\narguments for call are not valid:\r\n  \r\n  for operator aten::clamp(Tensor self, Scalar min, Scalar max) -> Tensor:\r\n  argument max not provided.\r\n  def clampfn(x, y):\r\n      return (torch.clamp(x, min=0)+y) \r\n              ~~~~~~~~~~~ <--- HERE\r\nfor call at:\r\ndef clampfn(x, y):\r\n    return (torch.clamp(x, min=0)+y) \r\n            ~~~~~~~~~~~ <--- HERE\r\n```\r\n~~jit.trace also fails, comlaining about problems stemming from this line in generated code~~\r\n```\r\n     auto n3 = nanf;\r\n```\r\n~~2) Both script and trace fail if min or max are specified as `float('inf')`, also complaining about a line~~\r\n```\r\n     auto n3 = inff;\r\n```\r\nRepro script\r\n```\r\nimport torch\r\n\r\ndef clampfn(x, y):\r\n    return (torch.clamp(x, min=0)+y)\r\n\r\nrg = True\r\nx = torch.Tensor(10240, 1024).cuda().uniform_().requires_grad_(rg)\r\ny = torch.Tensor(10240, 1024).cuda().uniform_().requires_grad_(rg)\r\ngO = torch.Tensor(10240, 1024).cuda().uniform_()\r\ntraced_fn1 = torch.jit.script(clampfn, (x,y))\r\n#traced_fn1 = clampfn\r\n#print(\"trace output\", traced_fn1.graph)\r\n\r\nfor i in range(10):\r\n   out = traced_fn1(x.detach().requires_grad_(rg), y.detach().requires_grad_(rg))\r\n   out.backward(gO)\r\n```\r\ncc @t-vi, @mruberry promised to look at it (at least at fixing `auto n3 = inff` and `auto n3 = nanf` lines. \r\nEdit: after #12070 only syntax error in script remains."}