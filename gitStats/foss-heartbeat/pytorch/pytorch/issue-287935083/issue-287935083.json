{"url": "https://api.github.com/repos/pytorch/pytorch/issues/4615", "repository_url": "https://api.github.com/repos/pytorch/pytorch", "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/4615/labels{/name}", "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/4615/comments", "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/4615/events", "html_url": "https://github.com/pytorch/pytorch/pull/4615", "id": 287935083, "node_id": "MDExOlB1bGxSZXF1ZXN0MTYyNDk1MDIz", "number": 4615, "title": "Implement MM fusion (MM with add reduction tree)", "user": {"login": "apaszke", "id": 4583066, "node_id": "MDQ6VXNlcjQ1ODMwNjY=", "avatar_url": "https://avatars3.githubusercontent.com/u/4583066?v=4", "gravatar_id": "", "url": "https://api.github.com/users/apaszke", "html_url": "https://github.com/apaszke", "followers_url": "https://api.github.com/users/apaszke/followers", "following_url": "https://api.github.com/users/apaszke/following{/other_user}", "gists_url": "https://api.github.com/users/apaszke/gists{/gist_id}", "starred_url": "https://api.github.com/users/apaszke/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/apaszke/subscriptions", "organizations_url": "https://api.github.com/users/apaszke/orgs", "repos_url": "https://api.github.com/users/apaszke/repos", "events_url": "https://api.github.com/users/apaszke/events{/privacy}", "received_events_url": "https://api.github.com/users/apaszke/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2018-01-11T21:46:28Z", "updated_at": "2018-11-23T15:38:09Z", "closed_at": "2018-01-17T20:36:22Z", "author_association": "MEMBER", "pull_request": {"url": "https://api.github.com/repos/pytorch/pytorch/pulls/4615", "html_url": "https://github.com/pytorch/pytorch/pull/4615", "diff_url": "https://github.com/pytorch/pytorch/pull/4615.diff", "patch_url": "https://github.com/pytorch/pytorch/pull/4615.patch"}, "body_html": "<p>A tree where leaves are matrix multiplies and inner<br>\nvertices are adds can be computed as a single mm.<br>\nSuch subgraph often appear in backward if a single weight<br>\nis reused multiple times (e.g. in RNNs).</p>\n<p>NOTE: this seems to be slightly slower on the GPU than the<br>\nnaive implementation, but it's a huge win on the CPU<br>\n(think 100x lower overhead)</p>", "body_text": "A tree where leaves are matrix multiplies and inner\nvertices are adds can be computed as a single mm.\nSuch subgraph often appear in backward if a single weight\nis reused multiple times (e.g. in RNNs).\nNOTE: this seems to be slightly slower on the GPU than the\nnaive implementation, but it's a huge win on the CPU\n(think 100x lower overhead)", "body": "A tree where leaves are matrix multiplies and inner\r\nvertices are adds can be computed as a single mm.\r\nSuch subgraph often appear in backward if a single weight\r\nis reused multiple times (e.g. in RNNs).\r\n\r\nNOTE: this seems to be slightly slower on the GPU than the\r\nnaive implementation, but it's a huge win on the CPU\r\n(think 100x lower overhead)"}