{"url": "https://api.github.com/repos/pytorch/pytorch/issues/10288", "repository_url": "https://api.github.com/repos/pytorch/pytorch", "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/10288/labels{/name}", "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/10288/comments", "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/10288/events", "html_url": "https://github.com/pytorch/pytorch/issues/10288", "id": 348129825, "node_id": "MDU6SXNzdWUzNDgxMjk4MjU=", "number": 10288, "title": "Cannot link against CUDA-aware MPI due to Anaconda's MPI library taking precedence", "user": {"login": "feynmanliang", "id": 990069, "node_id": "MDQ6VXNlcjk5MDA2OQ==", "avatar_url": "https://avatars2.githubusercontent.com/u/990069?v=4", "gravatar_id": "", "url": "https://api.github.com/users/feynmanliang", "html_url": "https://github.com/feynmanliang", "followers_url": "https://api.github.com/users/feynmanliang/followers", "following_url": "https://api.github.com/users/feynmanliang/following{/other_user}", "gists_url": "https://api.github.com/users/feynmanliang/gists{/gist_id}", "starred_url": "https://api.github.com/users/feynmanliang/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/feynmanliang/subscriptions", "organizations_url": "https://api.github.com/users/feynmanliang/orgs", "repos_url": "https://api.github.com/users/feynmanliang/repos", "events_url": "https://api.github.com/users/feynmanliang/events{/privacy}", "received_events_url": "https://api.github.com/users/feynmanliang/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 890282107, "node_id": "MDU6TGFiZWw4OTAyODIxMDc=", "url": "https://api.github.com/repos/pytorch/pytorch/labels/caffe2", "name": "caffe2", "color": "210aa8", "default": false}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2018-08-07T01:01:40Z", "updated_at": "2018-08-07T01:25:38Z", "closed_at": null, "author_association": "NONE", "body_html": "<h2>Issue description</h2>\n<p>After compiling a CUDA-aware OpenMPI from source, I tried to build with MPI+CUDA support within Anaconda. However, the Anaconda MPI library was taking precedence and <code>FindPackage</code> wasn't able to resolve the MPI library I wanted. It would be useful if we could override the <code>MPI_CXX_COMPILER</code> option to CMake to force building against a particular MPI library when multiple are available.</p>\n<ul>\n<li>PyTorch or Caffe2: Caffe2 (failing on <code>Caffe2_MPI_GPU</code>)</li>\n<li>How you installed PyTorch (conda, pip, source): <code>conda</code></li>\n<li>Build command you used (if compiling from source): <code>MACOSX_DEPLOYMENT_TARGET=10.9 FULL_CAFFE2=ON USE_EIGEN_FOR_BLAS=OFF USE_GLOG=ON USE_NNPACK=ON USE_MPI=ON USE_DISTRIBUTED=ON USE_DISTRIBUTED_MW=ON MPI_CXX_COMPILER=/usr/local/bin/mpicxx MPI_C_COMPILER=/usr/local/bin/mpicc USE_NINJA=ON USE_CUDNN=ON python setup.py install</code></li>\n<li>OS: Mac OS 10.13.6</li>\n<li>PyTorch version: commit <a class=\"commit-link\" data-hovercard-type=\"commit\" data-hovercard-url=\"https://github.com/pytorch/pytorch/commit/f57e4ce1d59aab53e48b0ae93a7ef7e9a4dc1e2e/hovercard\" href=\"https://github.com/pytorch/pytorch/commit/f57e4ce1d59aab53e48b0ae93a7ef7e9a4dc1e2e\"><tt>f57e4ce</tt></a></li>\n<li>Python version: Python 3.7.0</li>\n<li>CUDA/cuDNN version: 9.2 / 7</li>\n<li>GPU models and configuration: n/a</li>\n<li>GCC version (if compiling from source): Apple LLVM version 9.0.0 (clang-900.0.39.2)</li>\n<li>CMake version: 3.12.0</li>\n<li>Versions of any other relevant libraries: compiled openmpi-3.1.1 from source</li>\n</ul>\n<p>I modified <code>build_pytorch_libs.sh</code> to pass the extra env vars I needed (<code>MPI_C_COMPILER</code> and <code>MPI_CXX_COMPILER</code>) and was able to work around it. If this would be more generally useful, let me know and I'd be happy to submit a PR. Otherwise, please educate me on a better way to get this done :)</p>", "body_text": "Issue description\nAfter compiling a CUDA-aware OpenMPI from source, I tried to build with MPI+CUDA support within Anaconda. However, the Anaconda MPI library was taking precedence and FindPackage wasn't able to resolve the MPI library I wanted. It would be useful if we could override the MPI_CXX_COMPILER option to CMake to force building against a particular MPI library when multiple are available.\n\nPyTorch or Caffe2: Caffe2 (failing on Caffe2_MPI_GPU)\nHow you installed PyTorch (conda, pip, source): conda\nBuild command you used (if compiling from source): MACOSX_DEPLOYMENT_TARGET=10.9 FULL_CAFFE2=ON USE_EIGEN_FOR_BLAS=OFF USE_GLOG=ON USE_NNPACK=ON USE_MPI=ON USE_DISTRIBUTED=ON USE_DISTRIBUTED_MW=ON MPI_CXX_COMPILER=/usr/local/bin/mpicxx MPI_C_COMPILER=/usr/local/bin/mpicc USE_NINJA=ON USE_CUDNN=ON python setup.py install\nOS: Mac OS 10.13.6\nPyTorch version: commit f57e4ce\nPython version: Python 3.7.0\nCUDA/cuDNN version: 9.2 / 7\nGPU models and configuration: n/a\nGCC version (if compiling from source): Apple LLVM version 9.0.0 (clang-900.0.39.2)\nCMake version: 3.12.0\nVersions of any other relevant libraries: compiled openmpi-3.1.1 from source\n\nI modified build_pytorch_libs.sh to pass the extra env vars I needed (MPI_C_COMPILER and MPI_CXX_COMPILER) and was able to work around it. If this would be more generally useful, let me know and I'd be happy to submit a PR. Otherwise, please educate me on a better way to get this done :)", "body": "## Issue description\r\n\r\nAfter compiling a CUDA-aware OpenMPI from source, I tried to build with MPI+CUDA support within Anaconda. However, the Anaconda MPI library was taking precedence and `FindPackage` wasn't able to resolve the MPI library I wanted. It would be useful if we could override the `MPI_CXX_COMPILER` option to CMake to force building against a particular MPI library when multiple are available.\r\n\r\n- PyTorch or Caffe2: Caffe2 (failing on `Caffe2_MPI_GPU`)\r\n- How you installed PyTorch (conda, pip, source): `conda`\r\n- Build command you used (if compiling from source): `MACOSX_DEPLOYMENT_TARGET=10.9 FULL_CAFFE2=ON USE_EIGEN_FOR_BLAS=OFF USE_GLOG=ON USE_NNPACK=ON USE_MPI=ON USE_DISTRIBUTED=ON USE_DISTRIBUTED_MW=ON MPI_CXX_COMPILER=/usr/local/bin/mpicxx MPI_C_COMPILER=/usr/local/bin/mpicc USE_NINJA=ON USE_CUDNN=ON python setup.py install`\r\n- OS: Mac OS 10.13.6\r\n- PyTorch version: commit f57e4ce1d\r\n- Python version: Python 3.7.0\r\n- CUDA/cuDNN version: 9.2 / 7\r\n- GPU models and configuration: n/a\r\n- GCC version (if compiling from source): Apple LLVM version 9.0.0 (clang-900.0.39.2)\r\n- CMake version: 3.12.0\r\n- Versions of any other relevant libraries: compiled openmpi-3.1.1 from source\r\n\r\nI modified `build_pytorch_libs.sh` to pass the extra env vars I needed (`MPI_C_COMPILER` and `MPI_CXX_COMPILER`) and was able to work around it. If this would be more generally useful, let me know and I'd be happy to submit a PR. Otherwise, please educate me on a better way to get this done :)\r\n"}