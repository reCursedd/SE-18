{"url": "https://api.github.com/repos/pytorch/pytorch/issues/10658", "repository_url": "https://api.github.com/repos/pytorch/pytorch", "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/10658/labels{/name}", "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/10658/comments", "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/10658/events", "html_url": "https://github.com/pytorch/pytorch/issues/10658", "id": 351813444, "node_id": "MDU6SXNzdWUzNTE4MTM0NDQ=", "number": 10658, "title": "Need to add check for init_state in LSTM", "user": {"login": "arogozhnikov", "id": 6318811, "node_id": "MDQ6VXNlcjYzMTg4MTE=", "avatar_url": "https://avatars3.githubusercontent.com/u/6318811?v=4", "gravatar_id": "", "url": "https://api.github.com/users/arogozhnikov", "html_url": "https://github.com/arogozhnikov", "followers_url": "https://api.github.com/users/arogozhnikov/followers", "following_url": "https://api.github.com/users/arogozhnikov/following{/other_user}", "gists_url": "https://api.github.com/users/arogozhnikov/gists{/gist_id}", "starred_url": "https://api.github.com/users/arogozhnikov/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/arogozhnikov/subscriptions", "organizations_url": "https://api.github.com/users/arogozhnikov/orgs", "repos_url": "https://api.github.com/users/arogozhnikov/repos", "events_url": "https://api.github.com/users/arogozhnikov/events{/privacy}", "received_events_url": "https://api.github.com/users/arogozhnikov/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-08-18T11:30:17Z", "updated_at": "2018-08-20T17:38:35Z", "closed_at": "2018-08-20T17:38:35Z", "author_association": "NONE", "body_html": "<h2>Issue description</h2>\n<p>Passing non-cuda tensors for initial state drives to CuDNN error<br>\nProvide a short description.</p>\n<h2>Code example</h2>\n<pre><code>import torch\n\nm = torch.nn.LSTM(input_size=10, hidden_size=20).to('cuda')\n\nm(torch.zeros(1, 5, 10).to('cuda'), torch.zeros(2, 1, 5, 20).to('cuda')) \n# ok, works well\n\nm(torch.zeros(1, 5, 10).to('cpu')) \n# Fails normally with RuntimeError: Expected object of type torch.cuda.FloatTensor but found type torch.FloatTensor for argument #4 'mat1' \n\nm(torch.zeros(1, 5, 10).to('cuda'), torch.zeros(2, 1, 5, 20).to('cpu')) \n# RuntimeError: CuDNN error: CUDNN_STATUS_EXECUTION_FAILED\n</code></pre>\n<h2>System Info</h2>\n<ul>\n<li>PyTorch or Caffe2: pytorch</li>\n<li>How you installed PyTorch (conda, pip, source): pip</li>\n<li>Build command you used (if compiling from source): NA</li>\n<li>OS: ubuntu16</li>\n<li>PyTorch version: 0.4.1</li>\n<li>Python version: 3.6</li>\n<li>CUDA/cuDNN version: 9.0</li>\n<li>GPU models and configuration: 1070</li>\n</ul>", "body_text": "Issue description\nPassing non-cuda tensors for initial state drives to CuDNN error\nProvide a short description.\nCode example\nimport torch\n\nm = torch.nn.LSTM(input_size=10, hidden_size=20).to('cuda')\n\nm(torch.zeros(1, 5, 10).to('cuda'), torch.zeros(2, 1, 5, 20).to('cuda')) \n# ok, works well\n\nm(torch.zeros(1, 5, 10).to('cpu')) \n# Fails normally with RuntimeError: Expected object of type torch.cuda.FloatTensor but found type torch.FloatTensor for argument #4 'mat1' \n\nm(torch.zeros(1, 5, 10).to('cuda'), torch.zeros(2, 1, 5, 20).to('cpu')) \n# RuntimeError: CuDNN error: CUDNN_STATUS_EXECUTION_FAILED\n\nSystem Info\n\nPyTorch or Caffe2: pytorch\nHow you installed PyTorch (conda, pip, source): pip\nBuild command you used (if compiling from source): NA\nOS: ubuntu16\nPyTorch version: 0.4.1\nPython version: 3.6\nCUDA/cuDNN version: 9.0\nGPU models and configuration: 1070", "body": "## Issue description\r\n\r\nPassing non-cuda tensors for initial state drives to CuDNN error\r\nProvide a short description.\r\n\r\n## Code example\r\n\r\n```\r\nimport torch\r\n\r\nm = torch.nn.LSTM(input_size=10, hidden_size=20).to('cuda')\r\n\r\nm(torch.zeros(1, 5, 10).to('cuda'), torch.zeros(2, 1, 5, 20).to('cuda')) \r\n# ok, works well\r\n\r\nm(torch.zeros(1, 5, 10).to('cpu')) \r\n# Fails normally with RuntimeError: Expected object of type torch.cuda.FloatTensor but found type torch.FloatTensor for argument #4 'mat1' \r\n\r\nm(torch.zeros(1, 5, 10).to('cuda'), torch.zeros(2, 1, 5, 20).to('cpu')) \r\n# RuntimeError: CuDNN error: CUDNN_STATUS_EXECUTION_FAILED\r\n```\r\n\r\n\r\n## System Info\r\n\r\n- PyTorch or Caffe2: pytorch\r\n- How you installed PyTorch (conda, pip, source): pip\r\n- Build command you used (if compiling from source): NA\r\n- OS: ubuntu16\r\n- PyTorch version: 0.4.1\r\n- Python version: 3.6\r\n- CUDA/cuDNN version: 9.0\r\n- GPU models and configuration: 1070"}