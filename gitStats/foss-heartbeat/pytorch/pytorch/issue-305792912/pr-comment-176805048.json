{"url": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/176805048", "pull_request_review_id": 106579047, "id": 176805048, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE3NjgwNTA0OA==", "diff_hunk": "@@ -394,6 +397,23 @@ struct Node : public Attributes<Node> {\n     return node;\n   }\n \n+  // Add 'node' as an input to 'this' at the specified position in the\n+  // arguments. Returns the added node for ease of chaining.\n+  Value* insertInput(size_t i, Value* node) {\n+    JIT_ASSERT(graph_ == node->owningGraph());\n+    node->uses_.emplace_back(this, i);\n+    inputs_.insert(inputs_.begin() + i, node);\n+    for (size_t use_itr = i + 1; use_itr < inputs_.size(); ++use_itr) {\n+      for (auto& use : inputs_[use_itr]->uses_) {\n+        if (use.user == this) {\n+          use.offset += 1;\n+          break;", "path": "torch/csrc/jit/ir.h", "position": 24, "original_position": 24, "commit_id": "556f5b6c02cd01de9dcd253b89b406fce1e9f9dc", "original_commit_id": "556f5b6c02cd01de9dcd253b89b406fce1e9f9dc", "user": {"login": "jamesr66a", "id": 4685384, "node_id": "MDQ6VXNlcjQ2ODUzODQ=", "avatar_url": "https://avatars2.githubusercontent.com/u/4685384?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jamesr66a", "html_url": "https://github.com/jamesr66a", "followers_url": "https://api.github.com/users/jamesr66a/followers", "following_url": "https://api.github.com/users/jamesr66a/following{/other_user}", "gists_url": "https://api.github.com/users/jamesr66a/gists{/gist_id}", "starred_url": "https://api.github.com/users/jamesr66a/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jamesr66a/subscriptions", "organizations_url": "https://api.github.com/users/jamesr66a/orgs", "repos_url": "https://api.github.com/users/jamesr66a/repos", "events_url": "https://api.github.com/users/jamesr66a/events{/privacy}", "received_events_url": "https://api.github.com/users/jamesr66a/received_events", "type": "User", "site_admin": false}, "body": "On second thought, I think this might be incorrect. I think the conditional above needs to be `if (use == Use(this, use_itr)`. Otherwise in the case of multiple uses of the same value at different positions at the input of a node, we'll just be bumping the first instance first\r\n\r\n", "created_at": "2018-03-23T17:14:56Z", "updated_at": "2018-11-23T15:41:04Z", "html_url": "https://github.com/pytorch/pytorch/pull/5827#discussion_r176805048", "pull_request_url": "https://api.github.com/repos/pytorch/pytorch/pulls/5827", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/176805048"}, "html": {"href": "https://github.com/pytorch/pytorch/pull/5827#discussion_r176805048"}, "pull_request": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/5827"}}, "body_html": "<p>On second thought, I think this might be incorrect. I think the conditional above needs to be <code>if (use == Use(this, use_itr)</code>. Otherwise in the case of multiple uses of the same value at different positions at the input of a node, we'll just be bumping the first instance first</p>", "body_text": "On second thought, I think this might be incorrect. I think the conditional above needs to be if (use == Use(this, use_itr). Otherwise in the case of multiple uses of the same value at different positions at the input of a node, we'll just be bumping the first instance first"}