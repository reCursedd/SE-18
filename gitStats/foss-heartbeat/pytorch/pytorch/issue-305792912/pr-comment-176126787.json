{"url": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/176126787", "pull_request_review_id": 105772978, "id": 176126787, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE3NjEyNjc4Nw==", "diff_hunk": "@@ -470,6 +485,73 @@ struct to_ir {\n     }\n   }\n \n+  void emitFor(const For& stmt) {\n+    // For now, we only support range loops. e.g. for i in range(3): ...\n+\n+    auto targets = stmt.targets();\n+    auto itrs = stmt.itrs();\n+    auto body = stmt.body();\n+\n+    // itrs must consist of a single Apply node\n+    if (stmt.itrs().size() != 1) {\n+      throw ErrorReport(stmt)\n+          << \"List of iterables is not supported currently.\";\n+    }\n+    if (itrs[0].kind() != TK_APPLY) {\n+      throw ErrorReport(stmt)\n+          << \"Non-range for loops are currently not supported.\";\n+    }\n+\n+    Apply range_iterator = Apply(itrs[0]);\n+    if (range_iterator.callee().kind() != TK_VAR) {\n+      throw ErrorReport(stmt)\n+          << \"Non-range for loops are currently not supported.\";\n+    }\n+\n+    {\n+      Var var = Var(range_iterator.callee());\n+      if (var.name().name() != \"range\") {\n+        throw ErrorReport(stmt)\n+            << \"Non-range for loops are currently not supported.\";\n+      }\n+    }\n+\n+    List<Expr> args = range_iterator.inputs();\n+    // TODO: start, stop, step loop\n+    if (args.size() != 1) {\n+      throw ErrorReport(stmt)\n+          << \"range() expects one argument but got\" << args.size();\n+    }\n+\n+    auto target_list = List<Ident>(targets);\n+    std::vector<std::string> target_idents;\n+    target_idents.reserve(target_list.size());\n+    for (const auto& t : target_list) {\n+      target_idents.push_back(Ident(t).name());\n+    }\n+\n+    Value* max_trip_count = emitExpr(args[0], 1)[0];\n+    Value* cond_value_dummy = emitBooleanConst(stmt, true)[0];\n+\n+    emitLoopCommon(\n+        max_trip_count,\n+        cond_value_dummy,\n+        stmt.body(),\n+        stmt,\n+        nullptr,", "path": "torch/csrc/jit/script/compiler.cpp", "position": null, "original_position": 154, "commit_id": "556f5b6c02cd01de9dcd253b89b406fce1e9f9dc", "original_commit_id": "232bfaafed25987ddc65fce4834763d3362217a0", "user": {"login": "zdevito", "id": 370202, "node_id": "MDQ6VXNlcjM3MDIwMg==", "avatar_url": "https://avatars0.githubusercontent.com/u/370202?v=4", "gravatar_id": "", "url": "https://api.github.com/users/zdevito", "html_url": "https://github.com/zdevito", "followers_url": "https://api.github.com/users/zdevito/followers", "following_url": "https://api.github.com/users/zdevito/following{/other_user}", "gists_url": "https://api.github.com/users/zdevito/gists{/gist_id}", "starred_url": "https://api.github.com/users/zdevito/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/zdevito/subscriptions", "organizations_url": "https://api.github.com/users/zdevito/orgs", "repos_url": "https://api.github.com/users/zdevito/repos", "events_url": "https://api.github.com/users/zdevito/events{/privacy}", "received_events_url": "https://api.github.com/users/zdevito/received_events", "type": "User", "site_admin": false}, "body": "Can be replaced with `CompoundTree::create(TK_TRUE)`", "created_at": "2018-03-21T15:33:00Z", "updated_at": "2018-11-23T15:41:00Z", "html_url": "https://github.com/pytorch/pytorch/pull/5827#discussion_r176126787", "pull_request_url": "https://api.github.com/repos/pytorch/pytorch/pulls/5827", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/176126787"}, "html": {"href": "https://github.com/pytorch/pytorch/pull/5827#discussion_r176126787"}, "pull_request": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/5827"}}, "body_html": "<p>Can be replaced with <code>CompoundTree::create(TK_TRUE)</code></p>", "body_text": "Can be replaced with CompoundTree::create(TK_TRUE)"}