{"url": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/175066567", "pull_request_review_id": 104536217, "id": 175066567, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE3NTA2NjU2Nw==", "diff_hunk": "@@ -474,6 +489,87 @@ struct to_ir {\n     }\n   }\n \n+  void emitFor(const For& stmt) {\n+    // For now, we only support range loops. e.g. for i in range(3): ...\n+\n+    auto targets = stmt.targets();\n+    auto itrs = stmt.itrs();\n+    auto body = stmt.body();\n+\n+    // itrs must consist of a single Apply node\n+    if (stmt.itrs().size() != 1) {\n+      throw ErrorReport(stmt)\n+          << \"List of iterables is not supported currently.\";\n+    }\n+    if (itrs[0].kind() != TK_APPLY) {\n+      throw ErrorReport(stmt)\n+          << \"Non-range for loops are currently not supported.\";\n+    }\n+\n+    Apply range_iterator = Apply(itrs[0]);\n+    if (range_iterator.callee().kind() != TK_VAR) {\n+      throw ErrorReport(stmt)\n+          << \"Non-range for loops are currently not supported.\";\n+    }\n+\n+    {\n+      Var var = Var(range_iterator.callee());\n+      if (var.name().name() != \"range\") {\n+        throw ErrorReport(stmt)\n+            << \"Non-range for loops are currently not supported.\";\n+      }\n+    }\n+\n+    int max_trip_count_val;\n+    {\n+      List<Expr> args = range_iterator.inputs();\n+      // TODO: start, stop, step loop\n+      if (args.size() != 1) {\n+        throw ErrorReport(stmt)\n+            << \"range() expects one argument but got\" << args.size();\n+      }\n+\n+      if (args[0].kind() != TK_CONST) {\n+        throw ErrorReport(stmt) << \"Argument to range() must be a constant\";\n+      }\n+      auto const_tree = args[0].get();\n+      auto num_value = const_tree->tree(0)->doubleValue();\n+      auto type = const_tree->tree(1)->stringValue();\n+      if (type != \"i\") {\n+        throw ErrorReport(stmt) << \"Argument to range() must be an integer\";\n+      }\n+      max_trip_count_val = num_value;\n+    }\n+\n+    auto target_list = List<Ident>(targets);\n+    std::vector<std::string> target_idents;\n+    target_idents.reserve(target_list.size());\n+    for (const auto& t : target_list) {\n+      target_idents.push_back(Ident(t).name());\n+    }\n+\n+    Value* max_trip_count = emitConst(stmt.range(), max_trip_count_val, \"i\")[0];\n+    Value* cond_value_dummy = emitConst(stmt.range(), 1, \"b\")[0];\n+\n+    emitLoopCommon(\n+        max_trip_count,\n+        cond_value_dummy,\n+        stmt.body(),\n+        stmt,", "path": "torch/csrc/jit/script/compiler.cpp", "position": null, "original_position": 166, "commit_id": "556f5b6c02cd01de9dcd253b89b406fce1e9f9dc", "original_commit_id": "4fc4028ed9fe754370dbe315b4e7fcc2808742db", "user": {"login": "apaszke", "id": 4583066, "node_id": "MDQ6VXNlcjQ1ODMwNjY=", "avatar_url": "https://avatars3.githubusercontent.com/u/4583066?v=4", "gravatar_id": "", "url": "https://api.github.com/users/apaszke", "html_url": "https://github.com/apaszke", "followers_url": "https://api.github.com/users/apaszke/followers", "following_url": "https://api.github.com/users/apaszke/following{/other_user}", "gists_url": "https://api.github.com/users/apaszke/gists{/gist_id}", "starred_url": "https://api.github.com/users/apaszke/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/apaszke/subscriptions", "organizations_url": "https://api.github.com/users/apaszke/orgs", "repos_url": "https://api.github.com/users/apaszke/repos", "events_url": "https://api.github.com/users/apaszke/events{/privacy}", "received_events_url": "https://api.github.com/users/apaszke/received_events", "type": "User", "site_admin": false}, "body": "Can we avoid passing `stmt.body` and `stmt`? It's redundant", "created_at": "2018-03-16T11:53:04Z", "updated_at": "2018-11-23T15:40:51Z", "html_url": "https://github.com/pytorch/pytorch/pull/5827#discussion_r175066567", "pull_request_url": "https://api.github.com/repos/pytorch/pytorch/pulls/5827", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/175066567"}, "html": {"href": "https://github.com/pytorch/pytorch/pull/5827#discussion_r175066567"}, "pull_request": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/5827"}}, "body_html": "<p>Can we avoid passing <code>stmt.body</code> and <code>stmt</code>? It's redundant</p>", "body_text": "Can we avoid passing stmt.body and stmt? It's redundant"}