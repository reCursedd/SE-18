{"url": "https://api.github.com/repos/pytorch/pytorch/issues/4832", "repository_url": "https://api.github.com/repos/pytorch/pytorch", "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/4832/labels{/name}", "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/4832/comments", "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/4832/events", "html_url": "https://github.com/pytorch/pytorch/issues/4832", "id": 291274700, "node_id": "MDU6SXNzdWUyOTEyNzQ3MDA=", "number": 4832, "title": "Documentation: default values for __init__ not documented", "user": {"login": "DavidNemeskey", "id": 690386, "node_id": "MDQ6VXNlcjY5MDM4Ng==", "avatar_url": "https://avatars3.githubusercontent.com/u/690386?v=4", "gravatar_id": "", "url": "https://api.github.com/users/DavidNemeskey", "html_url": "https://github.com/DavidNemeskey", "followers_url": "https://api.github.com/users/DavidNemeskey/followers", "following_url": "https://api.github.com/users/DavidNemeskey/following{/other_user}", "gists_url": "https://api.github.com/users/DavidNemeskey/gists{/gist_id}", "starred_url": "https://api.github.com/users/DavidNemeskey/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/DavidNemeskey/subscriptions", "organizations_url": "https://api.github.com/users/DavidNemeskey/orgs", "repos_url": "https://api.github.com/users/DavidNemeskey/repos", "events_url": "https://api.github.com/users/DavidNemeskey/events{/privacy}", "received_events_url": "https://api.github.com/users/DavidNemeskey/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2018-01-24T16:33:09Z", "updated_at": "2018-01-24T16:33:09Z", "closed_at": null, "author_association": "NONE", "body_html": "<p>I don't know if documentation issues should be reported here, so if not, please point me to the right place.</p>\n<p>I have found an issue with the offical pytorch documentation on pytorch.org. Apparently, <code>__init__</code> is handled differently from the rest of the class methods, because it doesn't have a proper function documentation block (which starts with the function signature otherwise). This shouldn't be a problem, as the <strong>Parameters</strong> block is still there, but</p>\n<ol>\n<li>the latter does not show the default value for optional parameters -- it is only available in the signature.</li>\n<li>this particular <strong>Parameters</strong> block doesn't always specify which arguments are optional; the blocks for regular functions / methods do.</li>\n</ol>\n<p>Two examples:</p>\n<ul>\n<li><a href=\"http://pytorch.org/docs/master/autograd.html#torch.autograd.Variable\" rel=\"nofollow\">Variable</a>: there is no clue as to the default value of <code>requires_grad</code>, nor to the fact that it is <em>optional</em>. The function below (<code>backward</code>) specifies its arguments (e.g. <code>create_graph</code>) fully</li>\n<li><a href=\"http://pytorch.org/docs/master/nn.html#parameters\" rel=\"nofollow\">Parameter</a> marks <code>requires_grad</code> <em>optional</em>, though still no mention of the default value</li>\n</ul>\n<p>Though the links lead to the documentation of 0.4.0, the same issues exist in earlier versions (at least in 0.3.0).</p>", "body_text": "I don't know if documentation issues should be reported here, so if not, please point me to the right place.\nI have found an issue with the offical pytorch documentation on pytorch.org. Apparently, __init__ is handled differently from the rest of the class methods, because it doesn't have a proper function documentation block (which starts with the function signature otherwise). This shouldn't be a problem, as the Parameters block is still there, but\n\nthe latter does not show the default value for optional parameters -- it is only available in the signature.\nthis particular Parameters block doesn't always specify which arguments are optional; the blocks for regular functions / methods do.\n\nTwo examples:\n\nVariable: there is no clue as to the default value of requires_grad, nor to the fact that it is optional. The function below (backward) specifies its arguments (e.g. create_graph) fully\nParameter marks requires_grad optional, though still no mention of the default value\n\nThough the links lead to the documentation of 0.4.0, the same issues exist in earlier versions (at least in 0.3.0).", "body": "I don't know if documentation issues should be reported here, so if not, please point me to the right place.\r\n\r\nI have found an issue with the offical pytorch documentation on pytorch.org. Apparently, `__init__` is handled differently from the rest of the class methods, because it doesn't have a proper function documentation block (which starts with the function signature otherwise). This shouldn't be a problem, as the **Parameters** block is still there, but\r\n\r\n1. the latter does not show the default value for optional parameters -- it is only available in the signature.\r\n1. this particular **Parameters** block doesn't always specify which arguments are optional; the blocks for regular functions / methods do.\r\n\r\nTwo examples:\r\n  - [Variable](http://pytorch.org/docs/master/autograd.html#torch.autograd.Variable): there is no clue as to the default value of `requires_grad`, nor to the fact that it is _optional_. The function below (`backward`) specifies its arguments (e.g. `create_graph`) fully\r\n  - [Parameter](http://pytorch.org/docs/master/nn.html#parameters) marks `requires_grad` _optional_, though still no mention of the default value\r\n\r\nThough the links lead to the documentation of 0.4.0, the same issues exist in earlier versions (at least in 0.3.0)."}