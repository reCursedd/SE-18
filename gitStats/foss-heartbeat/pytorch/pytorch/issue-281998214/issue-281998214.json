{"url": "https://api.github.com/repos/pytorch/pytorch/issues/4169", "repository_url": "https://api.github.com/repos/pytorch/pytorch", "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/4169/labels{/name}", "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/4169/comments", "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/4169/events", "html_url": "https://github.com/pytorch/pytorch/issues/4169", "id": 281998214, "node_id": "MDU6SXNzdWUyODE5OTgyMTQ=", "number": 4169, "title": "EmbeddingBag with data and offset intput misfunctions for  sample with empty sequence ", "user": {"login": "luoq", "id": 999336, "node_id": "MDQ6VXNlcjk5OTMzNg==", "avatar_url": "https://avatars2.githubusercontent.com/u/999336?v=4", "gravatar_id": "", "url": "https://api.github.com/users/luoq", "html_url": "https://github.com/luoq", "followers_url": "https://api.github.com/users/luoq/followers", "following_url": "https://api.github.com/users/luoq/following{/other_user}", "gists_url": "https://api.github.com/users/luoq/gists{/gist_id}", "starred_url": "https://api.github.com/users/luoq/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/luoq/subscriptions", "organizations_url": "https://api.github.com/users/luoq/orgs", "repos_url": "https://api.github.com/users/luoq/repos", "events_url": "https://api.github.com/users/luoq/events{/privacy}", "received_events_url": "https://api.github.com/users/luoq/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2017-12-14T06:48:11Z", "updated_at": "2018-01-26T03:29:16Z", "closed_at": null, "author_association": "NONE", "body_html": "<h2>When empty sequence is in middle of batch, nan/inf is returned</h2>\n<div class=\"highlight highlight-source-python\"><pre><span class=\"pl-k\">import</span> torch\n<span class=\"pl-k\">from</span> torch.autograd <span class=\"pl-k\">import</span> Variable\nembed <span class=\"pl-k\">=</span> torch.nn.EmbeddingBag(<span class=\"pl-c1\">5</span>,<span class=\"pl-c1\">3</span>)\n<span class=\"pl-c1\">print</span>(<span class=\"pl-c1\">next</span>(embed.parameters()))\nembed(Variable(torch.LongTensor([<span class=\"pl-c1\">0</span>,<span class=\"pl-c1\">1</span>,<span class=\"pl-c1\">2</span>,<span class=\"pl-c1\">3</span>,<span class=\"pl-c1\">4</span>])), Variable(torch.LongTensor([<span class=\"pl-c1\">0</span>, <span class=\"pl-c1\">1</span>,<span class=\"pl-c1\">1</span>, <span class=\"pl-c1\">3</span>, <span class=\"pl-c1\">3</span>, <span class=\"pl-c1\">4</span>])))</pre></div>\n<p>output:</p>\n<pre><code>Parameter containing:\n-0.3498 -0.2860 -0.5298\n-0.1395 -0.8514 -0.2102\n-2.2412  0.0741  0.1624\n-0.2580  0.5171 -0.5516\n-0.2722  1.3453  1.0304\n[torch.FloatTensor of size 5x3]\n\nVariable containing:\n-0.3498 -0.2860 -0.5298\n   -inf    -inf    -inf\n-0.1290  0.2586 -0.2758\n   -inf     inf     inf\n 0.0000  0.0000  0.0000\n 0.0000  0.0000  0.0000\n[torch.FloatTensor of size 6x3]\n</code></pre>\n<h2>When empty sequence is the last in batch,  an exception is triggered</h2>\n<div class=\"highlight highlight-source-python\"><pre><span class=\"pl-k\">import</span> torch\n<span class=\"pl-k\">from</span> torch.autograd <span class=\"pl-k\">import</span> Variable\nembed <span class=\"pl-k\">=</span> torch.nn.EmbeddingBag(<span class=\"pl-c1\">5</span>,<span class=\"pl-c1\">3</span>)\n<span class=\"pl-c1\">print</span>(<span class=\"pl-c1\">next</span>(embed.parameters()))\nembed(Variable(torch.LongTensor([<span class=\"pl-c1\">0</span>,<span class=\"pl-c1\">1</span>,<span class=\"pl-c1\">2</span>,<span class=\"pl-c1\">3</span>,<span class=\"pl-c1\">4</span>])), Variable(torch.LongTensor([<span class=\"pl-c1\">0</span>, <span class=\"pl-c1\">1</span>, <span class=\"pl-c1\">5</span>])))</pre></div>\n<p>output:</p>\n<pre><code>Parameter containing:\n-1.7822 -0.7059  0.5406\n-0.2862 -0.0818  0.4721\n 1.0102 -1.2675 -0.7046\n-1.1004  2.2961 -1.8793\n-1.3006  0.3268 -0.6197\n[torch.FloatTensor of size 5x3]\n\n---------------------------------------------------------------------------\nRuntimeError                              Traceback (most recent call last)\n&lt;ipython-input-56-a63e43408f30&gt; in &lt;module&gt;()\n      3 embed = torch.nn.EmbeddingBag(5,3)\n      4 print(next(embed.parameters()))\n----&gt; 5 embed(Variable(torch.LongTensor([0,1,2,3,4])), Variable(torch.LongTensor([0, 1, 5])))\n\n~/platform/anaconda3.6/lib/python3.6/site-packages/torch/nn/modules/module.py in __call__(self, *input, **kwargs)\n    323         for hook in self._forward_pre_hooks.values():\n    324             hook(self, input)\n--&gt; 325         result = self.forward(*input, **kwargs)\n    326         for hook in self._forward_hooks.values():\n    327             hook_result = hook(self, input, result)\n\n~/platform/anaconda3.6/lib/python3.6/site-packages/torch/nn/modules/sparse.py in forward(self, input, offsets)\n    203         return F.embedding_bag(self.weight, input, offsets,\n    204                                self.max_norm, self.norm_type,\n--&gt; 205                                self.scale_grad_by_freq, self.mode)\n    206 \n    207     def __repr__(self):\n\n~/platform/anaconda3.6/lib/python3.6/site-packages/torch/nn/functional.py in embedding_bag(embedding_matrix, indices, offsets, max_norm, norm_type, scale_grad_by_freq, mode)\n   1000         embedding_matrix, indices, offsets,\n   1001         max_norm, norm_type,\n-&gt; 1002         scale_grad_by_freq, mode\n   1003     )\n   1004 \n\n~/platform/anaconda3.6/lib/python3.6/site-packages/torch/nn/_functions/thnn/sparse.py in forward(cls, ctx, weight, indices, offsets, max_norm, norm_type, scale_grad_by_freq, mode)\n    199             # indices = [1, 2, 30, 100, 12], offsets = [0, 2, 3]\n    200             ctx._offset2bag.resize_(indices.size(0)).zero_()  # offset2bag = [0 0 0 0 0]\n--&gt; 201             ctx._offset2bag.index_fill_(0, offsets, 1)  # offset2bag = [1 0 1 0 1]\n    202             ctx._offset2bag[0] = 0  # offset2bag = [0 0 1 0 1]\n    203             ctx._offset2bag = ctx._offset2bag.cumsum(0)  # offset2bag = [0 0 1 1 2]\n\nRuntimeError: invalid argument 2: out of range at /pytorch/torch/lib/TH/generic/THTensor.c:862\n</code></pre>", "body_text": "When empty sequence is in middle of batch, nan/inf is returned\nimport torch\nfrom torch.autograd import Variable\nembed = torch.nn.EmbeddingBag(5,3)\nprint(next(embed.parameters()))\nembed(Variable(torch.LongTensor([0,1,2,3,4])), Variable(torch.LongTensor([0, 1,1, 3, 3, 4])))\noutput:\nParameter containing:\n-0.3498 -0.2860 -0.5298\n-0.1395 -0.8514 -0.2102\n-2.2412  0.0741  0.1624\n-0.2580  0.5171 -0.5516\n-0.2722  1.3453  1.0304\n[torch.FloatTensor of size 5x3]\n\nVariable containing:\n-0.3498 -0.2860 -0.5298\n   -inf    -inf    -inf\n-0.1290  0.2586 -0.2758\n   -inf     inf     inf\n 0.0000  0.0000  0.0000\n 0.0000  0.0000  0.0000\n[torch.FloatTensor of size 6x3]\n\nWhen empty sequence is the last in batch,  an exception is triggered\nimport torch\nfrom torch.autograd import Variable\nembed = torch.nn.EmbeddingBag(5,3)\nprint(next(embed.parameters()))\nembed(Variable(torch.LongTensor([0,1,2,3,4])), Variable(torch.LongTensor([0, 1, 5])))\noutput:\nParameter containing:\n-1.7822 -0.7059  0.5406\n-0.2862 -0.0818  0.4721\n 1.0102 -1.2675 -0.7046\n-1.1004  2.2961 -1.8793\n-1.3006  0.3268 -0.6197\n[torch.FloatTensor of size 5x3]\n\n---------------------------------------------------------------------------\nRuntimeError                              Traceback (most recent call last)\n<ipython-input-56-a63e43408f30> in <module>()\n      3 embed = torch.nn.EmbeddingBag(5,3)\n      4 print(next(embed.parameters()))\n----> 5 embed(Variable(torch.LongTensor([0,1,2,3,4])), Variable(torch.LongTensor([0, 1, 5])))\n\n~/platform/anaconda3.6/lib/python3.6/site-packages/torch/nn/modules/module.py in __call__(self, *input, **kwargs)\n    323         for hook in self._forward_pre_hooks.values():\n    324             hook(self, input)\n--> 325         result = self.forward(*input, **kwargs)\n    326         for hook in self._forward_hooks.values():\n    327             hook_result = hook(self, input, result)\n\n~/platform/anaconda3.6/lib/python3.6/site-packages/torch/nn/modules/sparse.py in forward(self, input, offsets)\n    203         return F.embedding_bag(self.weight, input, offsets,\n    204                                self.max_norm, self.norm_type,\n--> 205                                self.scale_grad_by_freq, self.mode)\n    206 \n    207     def __repr__(self):\n\n~/platform/anaconda3.6/lib/python3.6/site-packages/torch/nn/functional.py in embedding_bag(embedding_matrix, indices, offsets, max_norm, norm_type, scale_grad_by_freq, mode)\n   1000         embedding_matrix, indices, offsets,\n   1001         max_norm, norm_type,\n-> 1002         scale_grad_by_freq, mode\n   1003     )\n   1004 \n\n~/platform/anaconda3.6/lib/python3.6/site-packages/torch/nn/_functions/thnn/sparse.py in forward(cls, ctx, weight, indices, offsets, max_norm, norm_type, scale_grad_by_freq, mode)\n    199             # indices = [1, 2, 30, 100, 12], offsets = [0, 2, 3]\n    200             ctx._offset2bag.resize_(indices.size(0)).zero_()  # offset2bag = [0 0 0 0 0]\n--> 201             ctx._offset2bag.index_fill_(0, offsets, 1)  # offset2bag = [1 0 1 0 1]\n    202             ctx._offset2bag[0] = 0  # offset2bag = [0 0 1 0 1]\n    203             ctx._offset2bag = ctx._offset2bag.cumsum(0)  # offset2bag = [0 0 1 1 2]\n\nRuntimeError: invalid argument 2: out of range at /pytorch/torch/lib/TH/generic/THTensor.c:862", "body": "## When empty sequence is in middle of batch, nan/inf is returned\r\n\r\n```python\r\nimport torch\r\nfrom torch.autograd import Variable\r\nembed = torch.nn.EmbeddingBag(5,3)\r\nprint(next(embed.parameters()))\r\nembed(Variable(torch.LongTensor([0,1,2,3,4])), Variable(torch.LongTensor([0, 1,1, 3, 3, 4])))\r\n```\r\n\r\noutput:\r\n\r\n```\r\nParameter containing:\r\n-0.3498 -0.2860 -0.5298\r\n-0.1395 -0.8514 -0.2102\r\n-2.2412  0.0741  0.1624\r\n-0.2580  0.5171 -0.5516\r\n-0.2722  1.3453  1.0304\r\n[torch.FloatTensor of size 5x3]\r\n\r\nVariable containing:\r\n-0.3498 -0.2860 -0.5298\r\n   -inf    -inf    -inf\r\n-0.1290  0.2586 -0.2758\r\n   -inf     inf     inf\r\n 0.0000  0.0000  0.0000\r\n 0.0000  0.0000  0.0000\r\n[torch.FloatTensor of size 6x3]\r\n```\r\n\r\n## When empty sequence is the last in batch,  an exception is triggered\r\n\r\n```python\r\nimport torch\r\nfrom torch.autograd import Variable\r\nembed = torch.nn.EmbeddingBag(5,3)\r\nprint(next(embed.parameters()))\r\nembed(Variable(torch.LongTensor([0,1,2,3,4])), Variable(torch.LongTensor([0, 1, 5])))\r\n```\r\n\r\noutput:\r\n\r\n```\r\nParameter containing:\r\n-1.7822 -0.7059  0.5406\r\n-0.2862 -0.0818  0.4721\r\n 1.0102 -1.2675 -0.7046\r\n-1.1004  2.2961 -1.8793\r\n-1.3006  0.3268 -0.6197\r\n[torch.FloatTensor of size 5x3]\r\n\r\n---------------------------------------------------------------------------\r\nRuntimeError                              Traceback (most recent call last)\r\n<ipython-input-56-a63e43408f30> in <module>()\r\n      3 embed = torch.nn.EmbeddingBag(5,3)\r\n      4 print(next(embed.parameters()))\r\n----> 5 embed(Variable(torch.LongTensor([0,1,2,3,4])), Variable(torch.LongTensor([0, 1, 5])))\r\n\r\n~/platform/anaconda3.6/lib/python3.6/site-packages/torch/nn/modules/module.py in __call__(self, *input, **kwargs)\r\n    323         for hook in self._forward_pre_hooks.values():\r\n    324             hook(self, input)\r\n--> 325         result = self.forward(*input, **kwargs)\r\n    326         for hook in self._forward_hooks.values():\r\n    327             hook_result = hook(self, input, result)\r\n\r\n~/platform/anaconda3.6/lib/python3.6/site-packages/torch/nn/modules/sparse.py in forward(self, input, offsets)\r\n    203         return F.embedding_bag(self.weight, input, offsets,\r\n    204                                self.max_norm, self.norm_type,\r\n--> 205                                self.scale_grad_by_freq, self.mode)\r\n    206 \r\n    207     def __repr__(self):\r\n\r\n~/platform/anaconda3.6/lib/python3.6/site-packages/torch/nn/functional.py in embedding_bag(embedding_matrix, indices, offsets, max_norm, norm_type, scale_grad_by_freq, mode)\r\n   1000         embedding_matrix, indices, offsets,\r\n   1001         max_norm, norm_type,\r\n-> 1002         scale_grad_by_freq, mode\r\n   1003     )\r\n   1004 \r\n\r\n~/platform/anaconda3.6/lib/python3.6/site-packages/torch/nn/_functions/thnn/sparse.py in forward(cls, ctx, weight, indices, offsets, max_norm, norm_type, scale_grad_by_freq, mode)\r\n    199             # indices = [1, 2, 30, 100, 12], offsets = [0, 2, 3]\r\n    200             ctx._offset2bag.resize_(indices.size(0)).zero_()  # offset2bag = [0 0 0 0 0]\r\n--> 201             ctx._offset2bag.index_fill_(0, offsets, 1)  # offset2bag = [1 0 1 0 1]\r\n    202             ctx._offset2bag[0] = 0  # offset2bag = [0 0 1 0 1]\r\n    203             ctx._offset2bag = ctx._offset2bag.cumsum(0)  # offset2bag = [0 0 1 1 2]\r\n\r\nRuntimeError: invalid argument 2: out of range at /pytorch/torch/lib/TH/generic/THTensor.c:862\r\n```"}