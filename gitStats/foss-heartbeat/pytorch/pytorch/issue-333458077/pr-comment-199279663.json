{"url": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/199279663", "pull_request_review_id": 133377117, "id": 199279663, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5OTI3OTY2Mw==", "diff_hunk": "@@ -161,6 +161,48 @@ static inline at::optional<int64_t> parse_as_integer(const std::string& s) {\n   return (*str_end == 0) ? at::optional<int64_t>(ans) : at::nullopt;\n }\n \n+/*\n+Parse default value of IntList declared at native_functions.yaml\n+\n+There are two kinds of default values:\n+1. IntList[2] x=1 (where size=2, value={1,1}\n+2. IntList x={1,2,3} (where size=3, value={1,2,3}, note that there cannot be space after comma since native_parse.py uses ', ' to split args)\n+*/\n+static inline std::vector<int64_t> parse_intlist_args(const std::string& s, int64_t size) {\n+  if (s[0] != '{') {\n+    return std::vector<int64_t>(size, std::stoi(s));\n+  }\n+\n+  size_t n = s.size();\n+  // since already checked left brace '{' above, here only checks right brace '}'\n+  AT_CHECK(s[n - 1] == '}', \"Default value of IntList is missing right brace '}', found \", s[n - 1]);\n+\n+  auto args = std::vector<int64_t>();\n+  // for case IntList x={}, return an empty vector\n+  if (s.size() == 2) {\n+    return args;\n+  }\n+\n+  int64_t x = 0, sign = 1;\n+  for (size_t i = 1; i < n - 1; i++) {", "path": "torch/csrc/utils/python_arg_parser.cpp", "position": null, "original_position": 27, "commit_id": "0a5d9e04bf57a9a4e5c91ee9f5c0bb1b44802d28", "original_commit_id": "b76331e3950fba5f8ac40985010a3f34b5e1741d", "user": {"login": "weiyangfb", "id": 38509346, "node_id": "MDQ6VXNlcjM4NTA5MzQ2", "avatar_url": "https://avatars1.githubusercontent.com/u/38509346?v=4", "gravatar_id": "", "url": "https://api.github.com/users/weiyangfb", "html_url": "https://github.com/weiyangfb", "followers_url": "https://api.github.com/users/weiyangfb/followers", "following_url": "https://api.github.com/users/weiyangfb/following{/other_user}", "gists_url": "https://api.github.com/users/weiyangfb/gists{/gist_id}", "starred_url": "https://api.github.com/users/weiyangfb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/weiyangfb/subscriptions", "organizations_url": "https://api.github.com/users/weiyangfb/orgs", "repos_url": "https://api.github.com/users/weiyangfb/repos", "events_url": "https://api.github.com/users/weiyangfb/events{/privacy}", "received_events_url": "https://api.github.com/users/weiyangfb/received_events", "type": "User", "site_admin": false}, "body": "Yes, I can use atol", "created_at": "2018-06-29T21:02:59Z", "updated_at": "2018-11-23T15:46:36Z", "html_url": "https://github.com/pytorch/pytorch/pull/8628#discussion_r199279663", "pull_request_url": "https://api.github.com/repos/pytorch/pytorch/pulls/8628", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/199279663"}, "html": {"href": "https://github.com/pytorch/pytorch/pull/8628#discussion_r199279663"}, "pull_request": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/8628"}}, "body_html": "<p>Yes, I can use atol</p>", "body_text": "Yes, I can use atol", "in_reply_to_id": 199277358}