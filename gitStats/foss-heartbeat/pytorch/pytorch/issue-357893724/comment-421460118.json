{"url": "https://api.github.com/repos/pytorch/pytorch/issues/comments/421460118", "html_url": "https://github.com/pytorch/pytorch/issues/11360#issuecomment-421460118", "issue_url": "https://api.github.com/repos/pytorch/pytorch/issues/11360", "id": 421460118, "node_id": "MDEyOklzc3VlQ29tbWVudDQyMTQ2MDExOA==", "user": {"login": "zou3519", "id": 5652049, "node_id": "MDQ6VXNlcjU2NTIwNDk=", "avatar_url": "https://avatars3.githubusercontent.com/u/5652049?v=4", "gravatar_id": "", "url": "https://api.github.com/users/zou3519", "html_url": "https://github.com/zou3519", "followers_url": "https://api.github.com/users/zou3519/followers", "following_url": "https://api.github.com/users/zou3519/following{/other_user}", "gists_url": "https://api.github.com/users/zou3519/gists{/gist_id}", "starred_url": "https://api.github.com/users/zou3519/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/zou3519/subscriptions", "organizations_url": "https://api.github.com/users/zou3519/orgs", "repos_url": "https://api.github.com/users/zou3519/repos", "events_url": "https://api.github.com/users/zou3519/events{/privacy}", "received_events_url": "https://api.github.com/users/zou3519/received_events", "type": "User", "site_admin": false}, "created_at": "2018-09-14T19:25:01Z", "updated_at": "2018-09-14T19:25:01Z", "author_association": "CONTRIBUTOR", "body_html": "<p>I've confirmed that the reason why test_jit.py's process holds 4g of memory after test_snli (which uses a peak 4g) is because <code>free()</code> is unwilling to give up memory.</p>\n<p>Using <code>malloc_trim()</code> (thank you <a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=4583066\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/apaszke\">@apaszke</a> for finding this function!) persuades the malloc allocator to free up the memory -- test_jit usage ends up going down to 200mb from the 4g peak when I insert malloc_trim() calls into the c++ code.</p>", "body_text": "I've confirmed that the reason why test_jit.py's process holds 4g of memory after test_snli (which uses a peak 4g) is because free() is unwilling to give up memory.\nUsing malloc_trim() (thank you @apaszke for finding this function!) persuades the malloc allocator to free up the memory -- test_jit usage ends up going down to 200mb from the 4g peak when I insert malloc_trim() calls into the c++ code.", "body": "I've confirmed that the reason why test_jit.py's process holds 4g of memory after test_snli (which uses a peak 4g) is because `free()` is unwilling to give up memory. \r\n\r\nUsing `malloc_trim()` (thank you @apaszke for finding this function!) persuades the malloc allocator to free up the memory -- test_jit usage ends up going down to 200mb from the 4g peak when I insert malloc_trim() calls into the c++ code."}