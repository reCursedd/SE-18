{"url": "https://api.github.com/repos/pytorch/pytorch/issues/comments/381709639", "html_url": "https://github.com/pytorch/pytorch/pull/6270#issuecomment-381709639", "issue_url": "https://api.github.com/repos/pytorch/pytorch/issues/6270", "id": 381709639, "node_id": "MDEyOklzc3VlQ29tbWVudDM4MTcwOTYzOQ==", "user": {"login": "jamestwebber", "id": 963647, "node_id": "MDQ6VXNlcjk2MzY0Nw==", "avatar_url": "https://avatars0.githubusercontent.com/u/963647?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jamestwebber", "html_url": "https://github.com/jamestwebber", "followers_url": "https://api.github.com/users/jamestwebber/followers", "following_url": "https://api.github.com/users/jamestwebber/following{/other_user}", "gists_url": "https://api.github.com/users/jamestwebber/gists{/gist_id}", "starred_url": "https://api.github.com/users/jamestwebber/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jamestwebber/subscriptions", "organizations_url": "https://api.github.com/users/jamestwebber/orgs", "repos_url": "https://api.github.com/users/jamestwebber/repos", "events_url": "https://api.github.com/users/jamestwebber/events{/privacy}", "received_events_url": "https://api.github.com/users/jamestwebber/received_events", "type": "User", "site_admin": false}, "created_at": "2018-04-16T18:49:22Z", "updated_at": "2018-04-16T18:49:22Z", "author_association": "NONE", "body_html": "<p>Not a stake-holder on either side, but I'd like to <g-emoji class=\"g-emoji\" alias=\"+1\" fallback-src=\"https://assets-cdn.github.com/images/icons/emoji/unicode/1f44d.png\">\ud83d\udc4d</g-emoji> the notion that a low barrier to entry is important. Case in point: I was interested in trying this, so I googled \"aggregated momentum pytorch\" and found this PR.</p>\n<p>I'm unlikely to implement it myself as I don't have the coding chops or the time to tinker with PyTorch internals. (I feel the same about <a href=\"https://arxiv.org/abs/1803.03383\" rel=\"nofollow\">HALP</a>, another method that sounds great but is difficult to implement on my own)</p>\n<p>Definitely understand the reluctance to add lots of new methods to PyTorch. Is there a framework for writing compatible extensions, such that <a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=10150986\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/AtheMathmo\">@AtheMathmo</a> could create a separate repo that drops in a new optimizer?</p>", "body_text": "Not a stake-holder on either side, but I'd like to \ud83d\udc4d the notion that a low barrier to entry is important. Case in point: I was interested in trying this, so I googled \"aggregated momentum pytorch\" and found this PR.\nI'm unlikely to implement it myself as I don't have the coding chops or the time to tinker with PyTorch internals. (I feel the same about HALP, another method that sounds great but is difficult to implement on my own)\nDefinitely understand the reluctance to add lots of new methods to PyTorch. Is there a framework for writing compatible extensions, such that @AtheMathmo could create a separate repo that drops in a new optimizer?", "body": "Not a stake-holder on either side, but I'd like to \ud83d\udc4d the notion that a low barrier to entry is important. Case in point: I was interested in trying this, so I googled \"aggregated momentum pytorch\" and found this PR.\r\n\r\nI'm unlikely to implement it myself as I don't have the coding chops or the time to tinker with PyTorch internals. (I feel the same about [HALP](https://arxiv.org/abs/1803.03383), another method that sounds great but is difficult to implement on my own)\r\n\r\nDefinitely understand the reluctance to add lots of new methods to PyTorch. Is there a framework for writing compatible extensions, such that @AtheMathmo could create a separate repo that drops in a new optimizer?"}