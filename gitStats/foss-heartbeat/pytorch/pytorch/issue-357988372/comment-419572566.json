{"url": "https://api.github.com/repos/pytorch/pytorch/issues/comments/419572566", "html_url": "https://github.com/pytorch/pytorch/pull/11373#issuecomment-419572566", "issue_url": "https://api.github.com/repos/pytorch/pytorch/issues/11373", "id": 419572566, "node_id": "MDEyOklzc3VlQ29tbWVudDQxOTU3MjU2Ng==", "user": {"login": "ezyang", "id": 13564, "node_id": "MDQ6VXNlcjEzNTY0", "avatar_url": "https://avatars0.githubusercontent.com/u/13564?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ezyang", "html_url": "https://github.com/ezyang", "followers_url": "https://api.github.com/users/ezyang/followers", "following_url": "https://api.github.com/users/ezyang/following{/other_user}", "gists_url": "https://api.github.com/users/ezyang/gists{/gist_id}", "starred_url": "https://api.github.com/users/ezyang/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ezyang/subscriptions", "organizations_url": "https://api.github.com/users/ezyang/orgs", "repos_url": "https://api.github.com/users/ezyang/repos", "events_url": "https://api.github.com/users/ezyang/events{/privacy}", "received_events_url": "https://api.github.com/users/ezyang/received_events", "type": "User", "site_admin": false}, "created_at": "2018-09-07T21:37:47Z", "updated_at": "2018-09-07T21:37:47Z", "author_association": "CONTRIBUTOR", "body_html": "<blockquote>\n<p>So there is one thing that doesn't work: device code doesn't have IntList functions/operators, so I would need to make size(i) and stride(i) in TensorAccessor bypass IntList's indexing operator. I'm not sure what the reason is to wrap those into IntList rather than accessing strides_[i] directly</p>\n</blockquote>\n<p>That seems like a great reason to just not store IntList. It isn't a big deal to inline it, if it makes it more portable.</p>", "body_text": "So there is one thing that doesn't work: device code doesn't have IntList functions/operators, so I would need to make size(i) and stride(i) in TensorAccessor bypass IntList's indexing operator. I'm not sure what the reason is to wrap those into IntList rather than accessing strides_[i] directly\n\nThat seems like a great reason to just not store IntList. It isn't a big deal to inline it, if it makes it more portable.", "body": "> So there is one thing that doesn't work: device code doesn't have IntList functions/operators, so I would need to make size(i) and stride(i) in TensorAccessor bypass IntList's indexing operator. I'm not sure what the reason is to wrap those into IntList rather than accessing strides_[i] directly\r\n\r\nThat seems like a great reason to just not store IntList. It isn't a big deal to inline it, if it makes it more portable."}