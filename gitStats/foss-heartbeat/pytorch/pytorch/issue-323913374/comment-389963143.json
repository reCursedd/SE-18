{"url": "https://api.github.com/repos/pytorch/pytorch/issues/comments/389963143", "html_url": "https://github.com/pytorch/pytorch/issues/7637#issuecomment-389963143", "issue_url": "https://api.github.com/repos/pytorch/pytorch/issues/7637", "id": 389963143, "node_id": "MDEyOklzc3VlQ29tbWVudDM4OTk2MzE0Mw==", "user": {"login": "fritzo", "id": 648532, "node_id": "MDQ6VXNlcjY0ODUzMg==", "avatar_url": "https://avatars0.githubusercontent.com/u/648532?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fritzo", "html_url": "https://github.com/fritzo", "followers_url": "https://api.github.com/users/fritzo/followers", "following_url": "https://api.github.com/users/fritzo/following{/other_user}", "gists_url": "https://api.github.com/users/fritzo/gists{/gist_id}", "starred_url": "https://api.github.com/users/fritzo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fritzo/subscriptions", "organizations_url": "https://api.github.com/users/fritzo/orgs", "repos_url": "https://api.github.com/users/fritzo/repos", "events_url": "https://api.github.com/users/fritzo/events{/privacy}", "received_events_url": "https://api.github.com/users/fritzo/received_events", "type": "User", "site_admin": false}, "created_at": "2018-05-17T18:25:22Z", "updated_at": "2018-05-17T18:25:22Z", "author_association": "CONTRIBUTOR", "body_html": "<p><code>Normal</code> is a continuous probability distribution, so its <code>.log_prob()</code> method returns the log of a probability density, not a probability mass function. Of course probability density is not bounded above. E.g. the maximum density of a normal distribution with standard deviation <code>sigma</code></p>\n<div class=\"highlight highlight-source-python\"><pre>density <span class=\"pl-k\">=</span> Normal(<span class=\"pl-c1\">0</span>,sigma).log_prob(<span class=\"pl-c1\">0</span>).exp()</pre></div>\n<p>is equal to <code>1/sqrt(2 * pi * sigma**2)</code>, so the maximum density will be greater than 1 whenever <code>sigma</code> is narrower than <code>1/sqrt(2*pi)</code>.</p>\n<div class=\"highlight highlight-source-python\"><pre><span class=\"pl-k\">&gt;&gt;</span><span class=\"pl-k\">&gt;</span> <span class=\"pl-k\">import</span> math\n<span class=\"pl-k\">&gt;&gt;</span><span class=\"pl-k\">&gt;</span> <span class=\"pl-k\">from</span> torch.distributions <span class=\"pl-k\">import</span> Normal\n<span class=\"pl-k\">&gt;&gt;</span><span class=\"pl-k\">&gt;</span> Normal(<span class=\"pl-c1\">0</span>, <span class=\"pl-c1\">1.0</span> <span class=\"pl-k\">*</span> (<span class=\"pl-c1\">2</span><span class=\"pl-k\">*</span>math.pi)<span class=\"pl-k\">**-</span><span class=\"pl-c1\">0.5</span>).log_prob(<span class=\"pl-c1\">0</span>).exp()\ntensor(<span class=\"pl-c1\">1</span>.)\n<span class=\"pl-k\">&gt;&gt;</span><span class=\"pl-k\">&gt;</span> Normal(<span class=\"pl-c1\">0</span>, <span class=\"pl-c1\">2.0</span> <span class=\"pl-k\">*</span> (<span class=\"pl-c1\">2</span><span class=\"pl-k\">*</span>math.pi)<span class=\"pl-k\">**-</span><span class=\"pl-c1\">0.5</span>).log_prob(<span class=\"pl-c1\">0</span>).exp()\ntensor(<span class=\"pl-c1\">0.5000</span>)\n<span class=\"pl-k\">&gt;&gt;</span><span class=\"pl-k\">&gt;</span> Normal(<span class=\"pl-c1\">0</span>, <span class=\"pl-c1\">0.5</span> <span class=\"pl-k\">*</span> (<span class=\"pl-c1\">2</span><span class=\"pl-k\">*</span>math.pi)<span class=\"pl-k\">**-</span><span class=\"pl-c1\">0.5</span>).log_prob(<span class=\"pl-c1\">0</span>).exp()\ntensor(<span class=\"pl-c1\">2</span>.)</pre></div>", "body_text": "Normal is a continuous probability distribution, so its .log_prob() method returns the log of a probability density, not a probability mass function. Of course probability density is not bounded above. E.g. the maximum density of a normal distribution with standard deviation sigma\ndensity = Normal(0,sigma).log_prob(0).exp()\nis equal to 1/sqrt(2 * pi * sigma**2), so the maximum density will be greater than 1 whenever sigma is narrower than 1/sqrt(2*pi).\n>>> import math\n>>> from torch.distributions import Normal\n>>> Normal(0, 1.0 * (2*math.pi)**-0.5).log_prob(0).exp()\ntensor(1.)\n>>> Normal(0, 2.0 * (2*math.pi)**-0.5).log_prob(0).exp()\ntensor(0.5000)\n>>> Normal(0, 0.5 * (2*math.pi)**-0.5).log_prob(0).exp()\ntensor(2.)", "body": "`Normal` is a continuous probability distribution, so its `.log_prob()` method returns the log of a probability density, not a probability mass function. Of course probability density is not bounded above. E.g. the maximum density of a normal distribution with standard deviation `sigma`\r\n```py\r\ndensity = Normal(0,sigma).log_prob(0).exp()\r\n```\r\nis equal to `1/sqrt(2 * pi * sigma**2)`, so the maximum density will be greater than 1 whenever `sigma` is narrower than `1/sqrt(2*pi)`.\r\n```py\r\n>>> import math\r\n>>> from torch.distributions import Normal\r\n>>> Normal(0, 1.0 * (2*math.pi)**-0.5).log_prob(0).exp()\r\ntensor(1.)\r\n>>> Normal(0, 2.0 * (2*math.pi)**-0.5).log_prob(0).exp()\r\ntensor(0.5000)\r\n>>> Normal(0, 0.5 * (2*math.pi)**-0.5).log_prob(0).exp()\r\ntensor(2.)\r\n```"}