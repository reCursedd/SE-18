{"url": "https://api.github.com/repos/pytorch/pytorch/issues/13438", "repository_url": "https://api.github.com/repos/pytorch/pytorch", "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/13438/labels{/name}", "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/13438/comments", "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/13438/events", "html_url": "https://github.com/pytorch/pytorch/issues/13438", "id": 376217116, "node_id": "MDU6SXNzdWUzNzYyMTcxMTY=", "number": 13438, "title": "Chaining Operations - Misunderstanding?", "user": {"login": "ShreyasSkandan", "id": 5595336, "node_id": "MDQ6VXNlcjU1OTUzMzY=", "avatar_url": "https://avatars1.githubusercontent.com/u/5595336?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ShreyasSkandan", "html_url": "https://github.com/ShreyasSkandan", "followers_url": "https://api.github.com/users/ShreyasSkandan/followers", "following_url": "https://api.github.com/users/ShreyasSkandan/following{/other_user}", "gists_url": "https://api.github.com/users/ShreyasSkandan/gists{/gist_id}", "starred_url": "https://api.github.com/users/ShreyasSkandan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ShreyasSkandan/subscriptions", "organizations_url": "https://api.github.com/users/ShreyasSkandan/orgs", "repos_url": "https://api.github.com/users/ShreyasSkandan/repos", "events_url": "https://api.github.com/users/ShreyasSkandan/events{/privacy}", "received_events_url": "https://api.github.com/users/ShreyasSkandan/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-11-01T01:16:27Z", "updated_at": "2018-11-01T01:37:44Z", "closed_at": "2018-11-01T01:37:44Z", "author_association": "NONE", "body_html": "<p>Hi,</p>\n<p>I'm having a little trouble understanding why I'm getting different results for the following operations that seem identical to me. I've been smacking my brain over this for a while now so any thoughts will be extremely helpful.</p>\n<p>Let's say I have the following Tensors<br>\nTensor_A: dimension =&gt; [batch_size, 1, 250, 500]<br>\nTensor_B: dimension =&gt; [batch_size, 1, 250, 500]</p>\n<p>I'm trying to find the Mean Absolute Error of the two tensors, but there's an additional caveat to do this over only a certain set of pixels for each image. So i have a Mask that I got from checking to see if some matrix had elements greater than 0,</p>\n<p>Tensor_Mask = (SomeTensor &gt; 0).detach()<br>\nTensor_Mask: dimension =&gt; [batch_size, 1, 250, 500]</p>\n<p>My calculations are as follows:</p>\n<p>Difference_AB = Tensor_A - Tensor_B<br>\nMaskedError = Difference_AB[Tensor_Mask]<br>\nMAE_Scalar = MaskedError.abs().mean()</p>\n<p>Let's take a more elaborate way to compute the same MAE_Scalar</p>\n<p>Difference_AB = Tensor_A - Tensor_B<br>\nMaskedDiff = torch.mul(Difference_AB, Tensor_Mask.float())<br>\nMaskedErrAbs = torch.abs(MaskedDiff)<br>\nMaskedAverageError = torch.mean(MaskedErrAbs)</p>\n<p>The two values MAE_Scalar and MaskedAverageError don't seem to be the same.</p>\n<p>Any thoughts?</p>\n<p>Am I doing something extremely silly..?</p>", "body_text": "Hi,\nI'm having a little trouble understanding why I'm getting different results for the following operations that seem identical to me. I've been smacking my brain over this for a while now so any thoughts will be extremely helpful.\nLet's say I have the following Tensors\nTensor_A: dimension => [batch_size, 1, 250, 500]\nTensor_B: dimension => [batch_size, 1, 250, 500]\nI'm trying to find the Mean Absolute Error of the two tensors, but there's an additional caveat to do this over only a certain set of pixels for each image. So i have a Mask that I got from checking to see if some matrix had elements greater than 0,\nTensor_Mask = (SomeTensor > 0).detach()\nTensor_Mask: dimension => [batch_size, 1, 250, 500]\nMy calculations are as follows:\nDifference_AB = Tensor_A - Tensor_B\nMaskedError = Difference_AB[Tensor_Mask]\nMAE_Scalar = MaskedError.abs().mean()\nLet's take a more elaborate way to compute the same MAE_Scalar\nDifference_AB = Tensor_A - Tensor_B\nMaskedDiff = torch.mul(Difference_AB, Tensor_Mask.float())\nMaskedErrAbs = torch.abs(MaskedDiff)\nMaskedAverageError = torch.mean(MaskedErrAbs)\nThe two values MAE_Scalar and MaskedAverageError don't seem to be the same.\nAny thoughts?\nAm I doing something extremely silly..?", "body": "Hi,\r\n\r\nI'm having a little trouble understanding why I'm getting different results for the following operations that seem identical to me. I've been smacking my brain over this for a while now so any thoughts will be extremely helpful.\r\n\r\nLet's say I have the following Tensors\r\nTensor_A: dimension => [batch_size, 1, 250, 500]\r\nTensor_B: dimension => [batch_size, 1, 250, 500]\r\n\r\nI'm trying to find the Mean Absolute Error of the two tensors, but there's an additional caveat to do this over only a certain set of pixels for each image. So i have a Mask that I got from checking to see if some matrix had elements greater than 0,\r\n\r\nTensor_Mask = (SomeTensor > 0).detach()\r\nTensor_Mask: dimension => [batch_size, 1, 250, 500]\r\n\r\nMy calculations are as follows:\r\n\r\nDifference_AB = Tensor_A - Tensor_B\r\nMaskedError = Difference_AB[Tensor_Mask]\r\nMAE_Scalar = MaskedError.abs().mean()\r\n\r\nLet's take a more elaborate way to compute the same MAE_Scalar\r\n\r\nDifference_AB = Tensor_A - Tensor_B\r\nMaskedDiff = torch.mul(Difference_AB, Tensor_Mask.float())\r\nMaskedErrAbs = torch.abs(MaskedDiff)\r\nMaskedAverageError = torch.mean(MaskedErrAbs)\r\n\r\nThe two values MAE_Scalar and MaskedAverageError don't seem to be the same. \r\n\r\nAny thoughts?\r\n\r\nAm I doing something extremely silly..?\r\n\r\n"}