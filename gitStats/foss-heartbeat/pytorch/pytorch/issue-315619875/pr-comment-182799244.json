{"url": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/182799244", "pull_request_review_id": 113671865, "id": 182799244, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4Mjc5OTI0NA==", "diff_hunk": "@@ -2500,6 +2545,8 @@ def __init__(self, probs):\n         # e.g. bernoulli[1] varies row-wise; that way we test all param pairs.\n         bernoulli = pairwise(Bernoulli, [0.1, 0.2, 0.6, 0.9])\n         binomial30 = pairwise(Binomial30, [0.1, 0.2, 0.6, 0.9])\n+        binomial_vectorized_count = (Binomial(torch.tensor([3., 4.]), torch.tensor([0.4, 0.6])),", "path": "test/test_distributions.py", "position": null, "original_position": 77, "commit_id": "bfcd553b118a0427f0a1d9cbef4bea20639010b1", "original_commit_id": "1690d1e1eaab880b96d2c5ed6ac883dd9db2e5c8", "user": {"login": "fritzo", "id": 648532, "node_id": "MDQ6VXNlcjY0ODUzMg==", "avatar_url": "https://avatars0.githubusercontent.com/u/648532?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fritzo", "html_url": "https://github.com/fritzo", "followers_url": "https://api.github.com/users/fritzo/followers", "following_url": "https://api.github.com/users/fritzo/following{/other_user}", "gists_url": "https://api.github.com/users/fritzo/gists{/gist_id}", "starred_url": "https://api.github.com/users/fritzo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fritzo/subscriptions", "organizations_url": "https://api.github.com/users/fritzo/orgs", "repos_url": "https://api.github.com/users/fritzo/repos", "events_url": "https://api.github.com/users/fritzo/events{/privacy}", "received_events_url": "https://api.github.com/users/fritzo/received_events", "type": "User", "site_admin": false}, "body": "This is consistent with `torch.bernoulli()` returning a float tensor. When I tried making all the morally-integer datatypes in torch.distributions into `LongTensor`s, there were lots of incompatibilities and inconsistencies with the rest of PyTorch. The only remaining distribution for which we use `LongTensor`s is `Categorical`. #WeirdAllTheWayDown", "created_at": "2018-04-19T16:00:21Z", "updated_at": "2018-11-23T15:42:52Z", "html_url": "https://github.com/pytorch/pytorch/pull/6720#discussion_r182799244", "pull_request_url": "https://api.github.com/repos/pytorch/pytorch/pulls/6720", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/182799244"}, "html": {"href": "https://github.com/pytorch/pytorch/pull/6720#discussion_r182799244"}, "pull_request": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/6720"}}, "body_html": "<p>This is consistent with <code>torch.bernoulli()</code> returning a float tensor. When I tried making all the morally-integer datatypes in torch.distributions into <code>LongTensor</code>s, there were lots of incompatibilities and inconsistencies with the rest of PyTorch. The only remaining distribution for which we use <code>LongTensor</code>s is <code>Categorical</code>. #WeirdAllTheWayDown</p>", "body_text": "This is consistent with torch.bernoulli() returning a float tensor. When I tried making all the morally-integer datatypes in torch.distributions into LongTensors, there were lots of incompatibilities and inconsistencies with the rest of PyTorch. The only remaining distribution for which we use LongTensors is Categorical. #WeirdAllTheWayDown", "in_reply_to_id": 182683544}