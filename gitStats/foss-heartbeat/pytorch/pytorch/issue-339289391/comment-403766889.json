{"url": "https://api.github.com/repos/pytorch/pytorch/issues/comments/403766889", "html_url": "https://github.com/pytorch/pytorch/issues/9250#issuecomment-403766889", "issue_url": "https://api.github.com/repos/pytorch/pytorch/issues/9250", "id": 403766889, "node_id": "MDEyOklzc3VlQ29tbWVudDQwMzc2Njg4OQ==", "user": {"login": "vadimkantorov", "id": 1041752, "node_id": "MDQ6VXNlcjEwNDE3NTI=", "avatar_url": "https://avatars0.githubusercontent.com/u/1041752?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vadimkantorov", "html_url": "https://github.com/vadimkantorov", "followers_url": "https://api.github.com/users/vadimkantorov/followers", "following_url": "https://api.github.com/users/vadimkantorov/following{/other_user}", "gists_url": "https://api.github.com/users/vadimkantorov/gists{/gist_id}", "starred_url": "https://api.github.com/users/vadimkantorov/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vadimkantorov/subscriptions", "organizations_url": "https://api.github.com/users/vadimkantorov/orgs", "repos_url": "https://api.github.com/users/vadimkantorov/repos", "events_url": "https://api.github.com/users/vadimkantorov/events{/privacy}", "received_events_url": "https://api.github.com/users/vadimkantorov/received_events", "type": "User", "site_admin": false}, "created_at": "2018-07-10T09:52:12Z", "updated_at": "2018-07-10T16:15:40Z", "author_association": "NONE", "body_html": "<p>Some ideas for it:</p>\n<ul>\n<li>opt-in voting function (so that importing or using a module would send a vote to the server, and by resampling votes you may see if a module is really popular) - so that the most popular modules may be considered for promotion to core</li>\n<li>some suggested structure such as \"one module - one file\" (a bit similar to MATLAB File Central) and relaxed testing requirements</li>\n<li>some reasonable way to declare per-module dependencies on other libraries, so that installation of the whole package doesn't turn into an unpredictable nightmare</li>\n<li>some pre-agreed deprecation schedule: if an example started to break and no corrections are done within two months, module is declared deprecated (and is moved out of the main contrib package in one year?)</li>\n<li>pytorch team-hosted site for pretrained model weights with easy upload (so that one can fetch not just ImageNet-pretrained ResNet, but a one for Places, or whatever)</li>\n</ul>", "body_text": "Some ideas for it:\n\nopt-in voting function (so that importing or using a module would send a vote to the server, and by resampling votes you may see if a module is really popular) - so that the most popular modules may be considered for promotion to core\nsome suggested structure such as \"one module - one file\" (a bit similar to MATLAB File Central) and relaxed testing requirements\nsome reasonable way to declare per-module dependencies on other libraries, so that installation of the whole package doesn't turn into an unpredictable nightmare\nsome pre-agreed deprecation schedule: if an example started to break and no corrections are done within two months, module is declared deprecated (and is moved out of the main contrib package in one year?)\npytorch team-hosted site for pretrained model weights with easy upload (so that one can fetch not just ImageNet-pretrained ResNet, but a one for Places, or whatever)", "body": "Some ideas for it:\r\n - opt-in voting function (so that importing or using a module would send a vote to the server, and by resampling votes you may see if a module is really popular) - so that the most popular modules may be considered for promotion to core\r\n - some suggested structure such as \"one module - one file\" (a bit similar to MATLAB File Central) and relaxed testing requirements\r\n - some reasonable way to declare per-module dependencies on other libraries, so that installation of the whole package doesn't turn into an unpredictable nightmare\r\n - some pre-agreed deprecation schedule: if an example started to break and no corrections are done within two months, module is declared deprecated (and is moved out of the main contrib package in one year?)\r\n - pytorch team-hosted site for pretrained model weights with easy upload (so that one can fetch not just ImageNet-pretrained ResNet, but a one for Places, or whatever)"}