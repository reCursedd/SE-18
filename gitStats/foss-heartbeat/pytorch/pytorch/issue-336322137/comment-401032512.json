{"url": "https://api.github.com/repos/pytorch/pytorch/issues/comments/401032512", "html_url": "https://github.com/pytorch/pytorch/pull/8946#issuecomment-401032512", "issue_url": "https://api.github.com/repos/pytorch/pytorch/issues/8946", "id": 401032512, "node_id": "MDEyOklzc3VlQ29tbWVudDQwMTAzMjUxMg==", "user": {"login": "ezyang", "id": 13564, "node_id": "MDQ6VXNlcjEzNTY0", "avatar_url": "https://avatars0.githubusercontent.com/u/13564?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ezyang", "html_url": "https://github.com/ezyang", "followers_url": "https://api.github.com/users/ezyang/followers", "following_url": "https://api.github.com/users/ezyang/following{/other_user}", "gists_url": "https://api.github.com/users/ezyang/gists{/gist_id}", "starred_url": "https://api.github.com/users/ezyang/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ezyang/subscriptions", "organizations_url": "https://api.github.com/users/ezyang/orgs", "repos_url": "https://api.github.com/users/ezyang/repos", "events_url": "https://api.github.com/users/ezyang/events{/privacy}", "received_events_url": "https://api.github.com/users/ezyang/received_events", "type": "User", "site_admin": false}, "created_at": "2018-06-28T13:22:08Z", "updated_at": "2018-06-28T13:22:08Z", "author_association": "CONTRIBUTOR", "body_html": "<p>This requires fbcode changes:</p>\n<pre><code>pytorch/autogradpp/tests/integration_t.cpp:300:46: error: no matching function for call to \u2018get(at::Tensor)\u2019\n     x = std::get&lt;0&gt;(at::max_pool2d(x, {2, 2})).clamp_min(0);\n                                              ^\n</code></pre>", "body_text": "This requires fbcode changes:\npytorch/autogradpp/tests/integration_t.cpp:300:46: error: no matching function for call to \u2018get(at::Tensor)\u2019\n     x = std::get<0>(at::max_pool2d(x, {2, 2})).clamp_min(0);\n                                              ^", "body": "This requires fbcode changes:\r\n\r\n```\r\npytorch/autogradpp/tests/integration_t.cpp:300:46: error: no matching function for call to \u2018get(at::Tensor)\u2019\r\n     x = std::get<0>(at::max_pool2d(x, {2, 2})).clamp_min(0);\r\n                                              ^\r\n```"}