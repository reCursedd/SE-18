{"url": "https://api.github.com/repos/pytorch/pytorch/issues/comments/425930095", "html_url": "https://github.com/pytorch/pytorch/issues/11683#issuecomment-425930095", "issue_url": "https://api.github.com/repos/pytorch/pytorch/issues/11683", "id": 425930095, "node_id": "MDEyOklzc3VlQ29tbWVudDQyNTkzMDA5NQ==", "user": {"login": "ezyang", "id": 13564, "node_id": "MDQ6VXNlcjEzNTY0", "avatar_url": "https://avatars0.githubusercontent.com/u/13564?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ezyang", "html_url": "https://github.com/ezyang", "followers_url": "https://api.github.com/users/ezyang/followers", "following_url": "https://api.github.com/users/ezyang/following{/other_user}", "gists_url": "https://api.github.com/users/ezyang/gists{/gist_id}", "starred_url": "https://api.github.com/users/ezyang/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ezyang/subscriptions", "organizations_url": "https://api.github.com/users/ezyang/orgs", "repos_url": "https://api.github.com/users/ezyang/repos", "events_url": "https://api.github.com/users/ezyang/events{/privacy}", "received_events_url": "https://api.github.com/users/ezyang/received_events", "type": "User", "site_admin": false}, "created_at": "2018-10-01T14:33:10Z", "updated_at": "2018-10-01T14:33:10Z", "author_association": "CONTRIBUTOR", "body_html": "<p>OK, after some discussion with <a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=4583066\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/apaszke\">@apaszke</a>, we've decided that:</p>\n<ol>\n<li>\n<p>Under <em>no</em> circumstances should we serialize hooks. This is a BC-breaking change, but it's consistent with the ways we are doing serialization today: (1) DDP doesn't assume that hooks are set after load, it makes sure it restores the hooks afterwards; (2) the recommend method of saving parameters using <code>state_dict()</code> doesn't save hooks, as hooks get stripped when you save <code>x.data</code> of a tensor. There are multiple places where we have implemented serialization code; all of them need to be fixed.</p>\n</li>\n<li>\n<p>Since this is a BC-breaking change, we should warn when we previously serialized a hook, but no longer do so. After some discussion, we've decided that adding a special sentinel property to hooks will be used to suppress this warning. If a hook has the property <code>_torch_serialize_ignore</code>, we will not emit a warning if we attempt to serialize a Tensor with this hook attached to it. For example, the DDP attached hooks will have this property set.</p>\n</li>\n</ol>", "body_text": "OK, after some discussion with @apaszke, we've decided that:\n\n\nUnder no circumstances should we serialize hooks. This is a BC-breaking change, but it's consistent with the ways we are doing serialization today: (1) DDP doesn't assume that hooks are set after load, it makes sure it restores the hooks afterwards; (2) the recommend method of saving parameters using state_dict() doesn't save hooks, as hooks get stripped when you save x.data of a tensor. There are multiple places where we have implemented serialization code; all of them need to be fixed.\n\n\nSince this is a BC-breaking change, we should warn when we previously serialized a hook, but no longer do so. After some discussion, we've decided that adding a special sentinel property to hooks will be used to suppress this warning. If a hook has the property _torch_serialize_ignore, we will not emit a warning if we attempt to serialize a Tensor with this hook attached to it. For example, the DDP attached hooks will have this property set.", "body": "OK, after some discussion with @apaszke, we've decided that:\r\n\r\n1. Under *no* circumstances should we serialize hooks. This is a BC-breaking change, but it's consistent with the ways we are doing serialization today: (1) DDP doesn't assume that hooks are set after load, it makes sure it restores the hooks afterwards; (2) the recommend method of saving parameters using `state_dict()` doesn't save hooks, as hooks get stripped when you save `x.data` of a tensor. There are multiple places where we have implemented serialization code; all of them need to be fixed.\r\n\r\n2. Since this is a BC-breaking change, we should warn when we previously serialized a hook, but no longer do so. After some discussion, we've decided that adding a special sentinel property to hooks will be used to suppress this warning. If a hook has the property `_torch_serialize_ignore`, we will not emit a warning if we attempt to serialize a Tensor with this hook attached to it. For example, the DDP attached hooks will have this property set."}