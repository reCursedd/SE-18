{"url": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/169319867", "pull_request_review_id": 97825308, "id": 169319867, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE2OTMxOTg2Nw==", "diff_hunk": "@@ -90,6 +90,78 @@ def forward(self, input):\n         return input\n \n \n+class ModuleDict(Module):\n+    r\"\"\"Holds submodules in a dict.\n+\n+    ModuleDict can be indexed like a regular Python dict, but modules it contains\n+    as values are properly registered, and will be visible by all Module methods.\n+\n+    Arguments:\n+        modules (dict, optional): a dict of keys : modules to add\n+\n+    Example::\n+\n+        class TwoHeadedNet(nn.Module):\n+            def __init__(self):\n+                super(MyModule, self).__init__()\n+                self.shared_backbone = nn.Linear(10, 10)\n+                self.heads = nn.ModuleDict({\n+                    'task1' : nn.Linear(10, 5),\n+                    'task2' : nn.Linear(10, 10),\n+                })\n+\n+            def forward(self, x, task_name):\n+                # takes an extra `task_name` argument to determine\n+                # which head of the network to use\n+                assert task_name in ['task1', 'task2']\n+\n+                x = self.shared_backbone(x)\n+                x = self.heads[task_name](x)\n+                return x\n+    \"\"\"\n+\n+    def __init__(self, modules=None):\n+        super(ModuleDict, self).__init__()\n+        if modules is not None:\n+            self.update(modules)\n+\n+    def __getitem__(self, key):\n+        return self._modules[key]\n+\n+    def __setitem__(self, key, module):\n+        return setattr(self, key, module)\n+\n+    def __len__(self):\n+        return len(self._modules)\n+\n+    def __iter__(self):\n+        return iter(self._modules)\n+\n+    def keys(self):\n+        return self._modules.keys()\n+\n+    def items(self):\n+        return self._modules.items()\n+\n+    def values(self):\n+        return self._modules.values()\n+\n+    def get(self, key, default=None):\n+        return self._modules.get(key, default)\n+\n+    def update(self, modules):\n+        r\"\"\"Updates modules from a Python dict.\n+        Arguments:\n+            modules (dict): dict of modules to append\n+        \"\"\"\n+        if not isinstance(modules, dict):", "path": "torch/nn/modules/container.py", "position": 68, "original_position": 68, "commit_id": "debb5c711ed90e29843956f652dba068de32f932", "original_commit_id": "debb5c711ed90e29843956f652dba068de32f932", "user": {"login": "dhpollack", "id": 368699, "node_id": "MDQ6VXNlcjM2ODY5OQ==", "avatar_url": "https://avatars0.githubusercontent.com/u/368699?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dhpollack", "html_url": "https://github.com/dhpollack", "followers_url": "https://api.github.com/users/dhpollack/followers", "following_url": "https://api.github.com/users/dhpollack/following{/other_user}", "gists_url": "https://api.github.com/users/dhpollack/gists{/gist_id}", "starred_url": "https://api.github.com/users/dhpollack/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dhpollack/subscriptions", "organizations_url": "https://api.github.com/users/dhpollack/orgs", "repos_url": "https://api.github.com/users/dhpollack/repos", "events_url": "https://api.github.com/users/dhpollack/events{/privacy}", "received_events_url": "https://api.github.com/users/dhpollack/received_events", "type": "User", "site_admin": false}, "body": "I think you should allow updating from other structures.  Notably the `named_modules` function, which is part of the `nn.Module` creates a generator of (name, value) tuples.\r\n\r\n", "created_at": "2018-02-20T13:39:30Z", "updated_at": "2018-11-23T15:39:44Z", "html_url": "https://github.com/pytorch/pytorch/pull/5297#discussion_r169319867", "pull_request_url": "https://api.github.com/repos/pytorch/pytorch/pulls/5297", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/169319867"}, "html": {"href": "https://github.com/pytorch/pytorch/pull/5297#discussion_r169319867"}, "pull_request": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/5297"}}, "body_html": "<p>I think you should allow updating from other structures.  Notably the <code>named_modules</code> function, which is part of the <code>nn.Module</code> creates a generator of (name, value) tuples.</p>", "body_text": "I think you should allow updating from other structures.  Notably the named_modules function, which is part of the nn.Module creates a generator of (name, value) tuples."}