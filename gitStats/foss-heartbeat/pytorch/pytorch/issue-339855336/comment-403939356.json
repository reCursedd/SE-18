{"url": "https://api.github.com/repos/pytorch/pytorch/issues/comments/403939356", "html_url": "https://github.com/pytorch/pytorch/pull/9304#issuecomment-403939356", "issue_url": "https://api.github.com/repos/pytorch/pytorch/issues/9304", "id": 403939356, "node_id": "MDEyOklzc3VlQ29tbWVudDQwMzkzOTM1Ng==", "user": {"login": "vadimkantorov", "id": 1041752, "node_id": "MDQ6VXNlcjEwNDE3NTI=", "avatar_url": "https://avatars0.githubusercontent.com/u/1041752?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vadimkantorov", "html_url": "https://github.com/vadimkantorov", "followers_url": "https://api.github.com/users/vadimkantorov/followers", "following_url": "https://api.github.com/users/vadimkantorov/following{/other_user}", "gists_url": "https://api.github.com/users/vadimkantorov/gists{/gist_id}", "starred_url": "https://api.github.com/users/vadimkantorov/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vadimkantorov/subscriptions", "organizations_url": "https://api.github.com/users/vadimkantorov/orgs", "repos_url": "https://api.github.com/users/vadimkantorov/repos", "events_url": "https://api.github.com/users/vadimkantorov/events{/privacy}", "received_events_url": "https://api.github.com/users/vadimkantorov/received_events", "type": "User", "site_admin": false}, "created_at": "2018-07-10T19:30:07Z", "updated_at": "2018-07-10T19:30:49Z", "author_association": "NONE", "body_html": "<p>I thought of conserving the separation and the semantics, but having it present as an attribute in the tensor, so that the separate wrapper class <code>nn.Parameter</code> can be eliminated (and there's no question about return types of methods on <code>nn.Parameter</code>)</p>\n<p>(like was done for <code>Variable</code>, but of course Variable was much more tedious, and <code>nn.Parameter</code> usage is relatively much less frequent and doesn't pose as much friction, and benefits aren't clear - so it's more of coherence/usability design decision)</p>", "body_text": "I thought of conserving the separation and the semantics, but having it present as an attribute in the tensor, so that the separate wrapper class nn.Parameter can be eliminated (and there's no question about return types of methods on nn.Parameter)\n(like was done for Variable, but of course Variable was much more tedious, and nn.Parameter usage is relatively much less frequent and doesn't pose as much friction, and benefits aren't clear - so it's more of coherence/usability design decision)", "body": "I thought of conserving the separation and the semantics, but having it present as an attribute in the tensor, so that the separate wrapper class `nn.Parameter` can be eliminated (and there's no question about return types of methods on `nn.Parameter`)\r\n\r\n(like was done for `Variable`, but of course Variable was much more tedious, and `nn.Parameter` usage is relatively much less frequent and doesn't pose as much friction, and benefits aren't clear - so it's more of coherence/usability design decision)"}