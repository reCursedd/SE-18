{"url": "https://api.github.com/repos/pytorch/pytorch/issues/comments/366395831", "html_url": "https://github.com/pytorch/pytorch/pull/5278#issuecomment-366395831", "issue_url": "https://api.github.com/repos/pytorch/pytorch/issues/5278", "id": 366395831, "node_id": "MDEyOklzc3VlQ29tbWVudDM2NjM5NTgzMQ==", "user": {"login": "SsnL", "id": 5674597, "node_id": "MDQ6VXNlcjU2NzQ1OTc=", "avatar_url": "https://avatars2.githubusercontent.com/u/5674597?v=4", "gravatar_id": "", "url": "https://api.github.com/users/SsnL", "html_url": "https://github.com/SsnL", "followers_url": "https://api.github.com/users/SsnL/followers", "following_url": "https://api.github.com/users/SsnL/following{/other_user}", "gists_url": "https://api.github.com/users/SsnL/gists{/gist_id}", "starred_url": "https://api.github.com/users/SsnL/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/SsnL/subscriptions", "organizations_url": "https://api.github.com/users/SsnL/orgs", "repos_url": "https://api.github.com/users/SsnL/repos", "events_url": "https://api.github.com/users/SsnL/events{/privacy}", "received_events_url": "https://api.github.com/users/SsnL/received_events", "type": "User", "site_admin": false}, "created_at": "2018-02-17T00:19:12Z", "updated_at": "2018-02-17T00:19:12Z", "author_association": "CONTRIBUTOR", "body_html": "<p><a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=315821\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/0x00b1\">@0x00b1</a> Thanks for offering help. But since most \"hard\" features are done, I think I can finish this by myself.</p>\n<p>I will fix the build errors as they are pretty easy to solve. The only thing I'm not sure how to do is skipping cpu fft test if MKL is not available. This info can be obtained when building ATen, but I haven't spend time on exposing it in python, like what we did for has_cudnn <div class=\"border rounded-1 my-2\">\n  <div class=\"f6 px-3 py-2 lh-condensed border-bottom bg-gray-light\">\n    <p class=\"mb-0 text-bold\">\n      <a href=\"https://github.com/pytorch/pytorch/blob/9bb6d33d355251d4856f036b8987649f395bc9b8/torch/csrc/Module.cpp#L944-L950\">pytorch/torch/csrc/Module.cpp</a>\n    </p>\n    <p class=\"mb-0 text-gray-light\">\n        Lines 944 to 950\n      in\n      <a data-pjax=\"true\" class=\"commit-tease-sha\" href=\"/pytorch/pytorch/commit/9bb6d33d355251d4856f036b8987649f395bc9b8\">9bb6d33</a>\n    </p>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper blob-wrapper-embedded data\">\n    <table class=\"highlight tab-size mb-0 js-file-line-container\" data-tab-size=\"8\">\n\n        <tbody><tr class=\"border-0\">\n          <td id=\"L944\" class=\"blob-num border-0 px-3 py-0 bg-white js-line-number\" data-line-number=\"944\"></td>\n          <td id=\"LC944\" class=\"blob-code border-0 px-3 py-0 bg-white blob-code-inner js-file-line\"> #<span class=\"pl-k\">ifdef</span> WITH_CUDNN </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L945\" class=\"blob-num border-0 px-3 py-0 bg-white js-line-number\" data-line-number=\"945\"></td>\n          <td id=\"LC945\" class=\"blob-code border-0 px-3 py-0 bg-white blob-code-inner js-file-line\">   PyObject *has_cudnn = Py_True; </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L946\" class=\"blob-num border-0 px-3 py-0 bg-white js-line-number\" data-line-number=\"946\"></td>\n          <td id=\"LC946\" class=\"blob-code border-0 px-3 py-0 bg-white blob-code-inner js-file-line\"> #<span class=\"pl-k\">else</span> </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L947\" class=\"blob-num border-0 px-3 py-0 bg-white js-line-number\" data-line-number=\"947\"></td>\n          <td id=\"LC947\" class=\"blob-code border-0 px-3 py-0 bg-white blob-code-inner js-file-line\">   PyObject *has_cudnn = Py_False; </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L948\" class=\"blob-num border-0 px-3 py-0 bg-white js-line-number\" data-line-number=\"948\"></td>\n          <td id=\"LC948\" class=\"blob-code border-0 px-3 py-0 bg-white blob-code-inner js-file-line\"> #<span class=\"pl-k\">endif</span> </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L949\" class=\"blob-num border-0 px-3 py-0 bg-white js-line-number\" data-line-number=\"949\"></td>\n          <td id=\"LC949\" class=\"blob-code border-0 px-3 py-0 bg-white blob-code-inner js-file-line\">   <span class=\"pl-c1\">Py_INCREF</span>(has_cudnn); </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L950\" class=\"blob-num border-0 px-3 py-0 bg-white js-line-number\" data-line-number=\"950\"></td>\n          <td id=\"LC950\" class=\"blob-code border-0 px-3 py-0 bg-white blob-code-inner js-file-line\">   <span class=\"pl-c1\">ASSERT_TRUE</span>(<span class=\"pl-c1\">PyModule_AddObject</span>(module, <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>has_cudnn<span class=\"pl-pds\">\"</span></span>, has_cudnn) == <span class=\"pl-c1\">0</span>); </td>\n        </tr>\n    </tbody></table>\n  </div>\n</div>\n</p>", "body_text": "@0x00b1 Thanks for offering help. But since most \"hard\" features are done, I think I can finish this by myself.\nI will fix the build errors as they are pretty easy to solve. The only thing I'm not sure how to do is skipping cpu fft test if MKL is not available. This info can be obtained when building ATen, but I haven't spend time on exposing it in python, like what we did for has_cudnn \n  \n    \n      pytorch/torch/csrc/Module.cpp\n    \n    \n        Lines 944 to 950\n      in\n      9bb6d33\n    \n    \n    \n    \n\n        \n          \n           #ifdef WITH_CUDNN \n        \n\n        \n          \n             PyObject *has_cudnn = Py_True; \n        \n\n        \n          \n           #else \n        \n\n        \n          \n             PyObject *has_cudnn = Py_False; \n        \n\n        \n          \n           #endif \n        \n\n        \n          \n             Py_INCREF(has_cudnn); \n        \n\n        \n          \n             ASSERT_TRUE(PyModule_AddObject(module, \"has_cudnn\", has_cudnn) == 0);", "body": "@0x00b1 Thanks for offering help. But since most \"hard\" features are done, I think I can finish this by myself. \r\n\r\nI will fix the build errors as they are pretty easy to solve. The only thing I'm not sure how to do is skipping cpu fft test if MKL is not available. This info can be obtained when building ATen, but I haven't spend time on exposing it in python, like what we did for has_cudnn https://github.com/pytorch/pytorch/blob/9bb6d33d355251d4856f036b8987649f395bc9b8/torch/csrc/Module.cpp#L944-L950"}