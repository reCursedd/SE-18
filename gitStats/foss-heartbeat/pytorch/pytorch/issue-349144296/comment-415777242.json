{"url": "https://api.github.com/repos/pytorch/pytorch/issues/comments/415777242", "html_url": "https://github.com/pytorch/pytorch/issues/10377#issuecomment-415777242", "issue_url": "https://api.github.com/repos/pytorch/pytorch/issues/10377", "id": 415777242, "node_id": "MDEyOklzc3VlQ29tbWVudDQxNTc3NzI0Mg==", "user": {"login": "gchanan", "id": 3768583, "node_id": "MDQ6VXNlcjM3Njg1ODM=", "avatar_url": "https://avatars2.githubusercontent.com/u/3768583?v=4", "gravatar_id": "", "url": "https://api.github.com/users/gchanan", "html_url": "https://github.com/gchanan", "followers_url": "https://api.github.com/users/gchanan/followers", "following_url": "https://api.github.com/users/gchanan/following{/other_user}", "gists_url": "https://api.github.com/users/gchanan/gists{/gist_id}", "starred_url": "https://api.github.com/users/gchanan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/gchanan/subscriptions", "organizations_url": "https://api.github.com/users/gchanan/orgs", "repos_url": "https://api.github.com/users/gchanan/repos", "events_url": "https://api.github.com/users/gchanan/events{/privacy}", "received_events_url": "https://api.github.com/users/gchanan/received_events", "type": "User", "site_admin": false}, "created_at": "2018-08-24T14:32:03Z", "updated_at": "2018-08-24T14:32:03Z", "author_association": "CONTRIBUTOR", "body_html": "<p><a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=376455\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/omry\">@omry</a> there are really 3 parts to that section:<br>\nA) we allowed pointwise ops as long as the number of elements matched.</p>\n<p>This isn't supported anymore:</p>\n<pre><code>In [94]: torch.add(torch.ones(2,2), torch.ones(4))\n---------------------------------------------------------------------------\nRuntimeError                              Traceback (most recent call last)\n&lt;ipython-input-94-a57498fcc93b&gt; in &lt;module&gt;()\n----&gt; 1 torch.add(torch.ones(2,2), torch.ones(4))\n\nRuntimeError: The size of tensor a (2) must match the size of tensor b (4) at non-singleton dimension 1\n</code></pre>\n<p>B) A description of e.g. (4,1) op (4,) causing different behavior</p>\n<p>This is still technically relevant, although we are a couple of versions away from this changing so it might make sense to remove it at some point.</p>\n<p>C) How to enable warnings in cases of B)</p>\n<p>This isn't supported anymore:</p>\n<pre><code>In [92]: torch.utils.backcompat.broadcast_warning.enabled=True\n\nIn [93]: torch.add(torch.ones(4,1), torch.ones(4))\nOut[93]:\ntensor([[2., 2., 2., 2.],\n        [2., 2., 2., 2.],\n        [2., 2., 2., 2.],\n        [2., 2., 2., 2.]])\n</code></pre>", "body_text": "@omry there are really 3 parts to that section:\nA) we allowed pointwise ops as long as the number of elements matched.\nThis isn't supported anymore:\nIn [94]: torch.add(torch.ones(2,2), torch.ones(4))\n---------------------------------------------------------------------------\nRuntimeError                              Traceback (most recent call last)\n<ipython-input-94-a57498fcc93b> in <module>()\n----> 1 torch.add(torch.ones(2,2), torch.ones(4))\n\nRuntimeError: The size of tensor a (2) must match the size of tensor b (4) at non-singleton dimension 1\n\nB) A description of e.g. (4,1) op (4,) causing different behavior\nThis is still technically relevant, although we are a couple of versions away from this changing so it might make sense to remove it at some point.\nC) How to enable warnings in cases of B)\nThis isn't supported anymore:\nIn [92]: torch.utils.backcompat.broadcast_warning.enabled=True\n\nIn [93]: torch.add(torch.ones(4,1), torch.ones(4))\nOut[93]:\ntensor([[2., 2., 2., 2.],\n        [2., 2., 2., 2.],\n        [2., 2., 2., 2.],\n        [2., 2., 2., 2.]])", "body": "@omry there are really 3 parts to that section:\r\nA) we allowed pointwise ops as long as the number of elements matched.\r\n\r\nThis isn't supported anymore:\r\n```\r\nIn [94]: torch.add(torch.ones(2,2), torch.ones(4))\r\n---------------------------------------------------------------------------\r\nRuntimeError                              Traceback (most recent call last)\r\n<ipython-input-94-a57498fcc93b> in <module>()\r\n----> 1 torch.add(torch.ones(2,2), torch.ones(4))\r\n\r\nRuntimeError: The size of tensor a (2) must match the size of tensor b (4) at non-singleton dimension 1\r\n```\r\n\r\nB) A description of e.g. (4,1) op (4,) causing different behavior\r\n\r\nThis is still technically relevant, although we are a couple of versions away from this changing so it might make sense to remove it at some point.\r\n\r\nC) How to enable warnings in cases of B)\r\n\r\nThis isn't supported anymore:\r\n```\r\nIn [92]: torch.utils.backcompat.broadcast_warning.enabled=True\r\n\r\nIn [93]: torch.add(torch.ones(4,1), torch.ones(4))\r\nOut[93]:\r\ntensor([[2., 2., 2., 2.],\r\n        [2., 2., 2., 2.],\r\n        [2., 2., 2., 2.],\r\n        [2., 2., 2., 2.]])\r\n```"}