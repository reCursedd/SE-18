{"url": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/153180550", "pull_request_review_id": 79147743, "id": 153180550, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE1MzE4MDU1MA==", "diff_hunk": "@@ -155,9 +130,43 @@ def __call__(cls, *args, **kwargs):\n             # user passed in), this problem goes away, because the class\n             # __init__ is a part of is indeed Foo.\n \n+            old_init = arg.__init__\n+            # Python 2 has a concept of unbound methods, which are returned when\n+            # you take a method form a class. They behave just like regular functions,\n+            # but check the type of the first argument (self). We don't want this here,\n+            # because self in our __init__ will be an instance of this new class.", "path": "torch/jit/__init__.py", "position": 51, "original_position": 51, "commit_id": "77e4a4b39eda7f9e35007fce7744919037ee0c13", "original_commit_id": "77e4a4b39eda7f9e35007fce7744919037ee0c13", "user": {"login": "ezyang", "id": 13564, "node_id": "MDQ6VXNlcjEzNTY0", "avatar_url": "https://avatars0.githubusercontent.com/u/13564?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ezyang", "html_url": "https://github.com/ezyang", "followers_url": "https://api.github.com/users/ezyang/followers", "following_url": "https://api.github.com/users/ezyang/following{/other_user}", "gists_url": "https://api.github.com/users/ezyang/gists{/gist_id}", "starred_url": "https://api.github.com/users/ezyang/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ezyang/subscriptions", "organizations_url": "https://api.github.com/users/ezyang/orgs", "repos_url": "https://api.github.com/users/ezyang/repos", "events_url": "https://api.github.com/users/ezyang/events{/privacy}", "received_events_url": "https://api.github.com/users/ezyang/received_events", "type": "User", "site_admin": false}, "body": "...\"So instead, we use `im_func` to get the underlying, unbound function.\"", "created_at": "2017-11-27T12:16:57Z", "updated_at": "2018-11-23T15:36:51Z", "html_url": "https://github.com/pytorch/pytorch/pull/3855#discussion_r153180550", "pull_request_url": "https://api.github.com/repos/pytorch/pytorch/pulls/3855", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/153180550"}, "html": {"href": "https://github.com/pytorch/pytorch/pull/3855#discussion_r153180550"}, "pull_request": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/3855"}}, "body_html": "<p>...\"So instead, we use <code>im_func</code> to get the underlying, unbound function.\"</p>", "body_text": "...\"So instead, we use im_func to get the underlying, unbound function.\""}