{"url": "https://api.github.com/repos/pytorch/pytorch/pulls/11328", "id": 213526087, "node_id": "MDExOlB1bGxSZXF1ZXN0MjEzNTI2MDg3", "html_url": "https://github.com/pytorch/pytorch/pull/11328", "diff_url": "https://github.com/pytorch/pytorch/pull/11328.diff", "patch_url": "https://github.com/pytorch/pytorch/pull/11328.patch", "issue_url": "https://api.github.com/repos/pytorch/pytorch/issues/11328", "number": 11328, "state": "closed", "locked": false, "title": "ADD child module at ARBITRAY POSITION in current module", "user": {"login": "tomguluson92", "id": 19585240, "node_id": "MDQ6VXNlcjE5NTg1MjQw", "avatar_url": "https://avatars1.githubusercontent.com/u/19585240?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tomguluson92", "html_url": "https://github.com/tomguluson92", "followers_url": "https://api.github.com/users/tomguluson92/followers", "following_url": "https://api.github.com/users/tomguluson92/following{/other_user}", "gists_url": "https://api.github.com/users/tomguluson92/gists{/gist_id}", "starred_url": "https://api.github.com/users/tomguluson92/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tomguluson92/subscriptions", "organizations_url": "https://api.github.com/users/tomguluson92/orgs", "repos_url": "https://api.github.com/users/tomguluson92/repos", "events_url": "https://api.github.com/users/tomguluson92/events{/privacy}", "received_events_url": "https://api.github.com/users/tomguluson92/received_events", "type": "User", "site_admin": false}, "body": "I revised member function add_module(...) of Module. I reinforce it by add child module to arbitary position of the current module.\r\nSamples like this:\r\n\r\nI revised member function `add_module(...)` of Module. I reinforce it by add child module to arbitary position of the current module.\r\nSamples like this:\r\n``` python\r\nclass Perceptron(nn.Module):\r\n\r\n    def __init__(self, in_features, out_features, hidden_features):\r\n        super(Perceptron, self).__init__()\r\n\r\n        self.layer1 = nn.Linear(in_features, hidden_features)\r\n        self.layer2 = nn.Linear(hidden_features, 4)\r\n        self.layer3 = nn.Linear(4, out_features)\r\n\r\n\r\n\r\n    def forward(self, x):\r\n\r\n        x = self.layer1(x)\r\n        x = self.layer2(x)\r\n        x = self.layer3(x)\r\n\r\n        return x\r\n```\r\nWhen we have a lot of module like this kind. if we need to add a child module to all of this kind of module.\r\nWe can easily specify the child module position via setting the parameter `index` to a number(default is -1, the same\r\nas now PyTorcher's already define.)\r\n\r\nIt can easily use the following code to do add a specified child module between **model.layer2** and **model.layer3**:\r\n``` python\r\nclass Perceptron_ADD(nn.Module):\r\n    def __init__(self):\r\n        super(Perceptron_ADD, self).__init__()\r\n        model = Perceptron(10, 5, 4)\r\n\r\n        model.add_module(\"arbitarylayer\", nn.Linear(4, 4), index=2)\r\n\r\n        self.model = model\r\n\r\n    def forward(self, x):\r\n        return self.model(x)\r\n\r\n", "created_at": "2018-09-06T07:54:11Z", "updated_at": "2018-09-07T15:37:27Z", "closed_at": "2018-09-07T15:37:27Z", "merged_at": null, "merge_commit_sha": "1954d0aa646864242a40fef71bee394098a6715d", "assignee": null, "assignees": [], "requested_reviewers": [{"login": "ezyang", "id": 13564, "node_id": "MDQ6VXNlcjEzNTY0", "avatar_url": "https://avatars0.githubusercontent.com/u/13564?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ezyang", "html_url": "https://github.com/ezyang", "followers_url": "https://api.github.com/users/ezyang/followers", "following_url": "https://api.github.com/users/ezyang/following{/other_user}", "gists_url": "https://api.github.com/users/ezyang/gists{/gist_id}", "starred_url": "https://api.github.com/users/ezyang/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ezyang/subscriptions", "organizations_url": "https://api.github.com/users/ezyang/orgs", "repos_url": "https://api.github.com/users/ezyang/repos", "events_url": "https://api.github.com/users/ezyang/events{/privacy}", "received_events_url": "https://api.github.com/users/ezyang/received_events", "type": "User", "site_admin": false}, {"login": "zdevito", "id": 370202, "node_id": "MDQ6VXNlcjM3MDIwMg==", "avatar_url": "https://avatars0.githubusercontent.com/u/370202?v=4", "gravatar_id": "", "url": "https://api.github.com/users/zdevito", "html_url": "https://github.com/zdevito", "followers_url": "https://api.github.com/users/zdevito/followers", "following_url": "https://api.github.com/users/zdevito/following{/other_user}", "gists_url": "https://api.github.com/users/zdevito/gists{/gist_id}", "starred_url": "https://api.github.com/users/zdevito/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/zdevito/subscriptions", "organizations_url": "https://api.github.com/users/zdevito/orgs", "repos_url": "https://api.github.com/users/zdevito/repos", "events_url": "https://api.github.com/users/zdevito/events{/privacy}", "received_events_url": "https://api.github.com/users/zdevito/received_events", "type": "User", "site_admin": false}, {"login": "colesbury", "id": 655866, "node_id": "MDQ6VXNlcjY1NTg2Ng==", "avatar_url": "https://avatars1.githubusercontent.com/u/655866?v=4", "gravatar_id": "", "url": "https://api.github.com/users/colesbury", "html_url": "https://github.com/colesbury", "followers_url": "https://api.github.com/users/colesbury/followers", "following_url": "https://api.github.com/users/colesbury/following{/other_user}", "gists_url": "https://api.github.com/users/colesbury/gists{/gist_id}", "starred_url": "https://api.github.com/users/colesbury/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/colesbury/subscriptions", "organizations_url": "https://api.github.com/users/colesbury/orgs", "repos_url": "https://api.github.com/users/colesbury/repos", "events_url": "https://api.github.com/users/colesbury/events{/privacy}", "received_events_url": "https://api.github.com/users/colesbury/received_events", "type": "User", "site_admin": false}, {"login": "soumith", "id": 1310570, "node_id": "MDQ6VXNlcjEzMTA1NzA=", "avatar_url": "https://avatars0.githubusercontent.com/u/1310570?v=4", "gravatar_id": "", "url": "https://api.github.com/users/soumith", "html_url": "https://github.com/soumith", "followers_url": "https://api.github.com/users/soumith/followers", "following_url": "https://api.github.com/users/soumith/following{/other_user}", "gists_url": "https://api.github.com/users/soumith/gists{/gist_id}", "starred_url": "https://api.github.com/users/soumith/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/soumith/subscriptions", "organizations_url": "https://api.github.com/users/soumith/orgs", "repos_url": "https://api.github.com/users/soumith/repos", "events_url": "https://api.github.com/users/soumith/events{/privacy}", "received_events_url": "https://api.github.com/users/soumith/received_events", "type": "User", "site_admin": false}, {"login": "gchanan", "id": 3768583, "node_id": "MDQ6VXNlcjM3Njg1ODM=", "avatar_url": "https://avatars2.githubusercontent.com/u/3768583?v=4", "gravatar_id": "", "url": "https://api.github.com/users/gchanan", "html_url": "https://github.com/gchanan", "followers_url": "https://api.github.com/users/gchanan/followers", "following_url": "https://api.github.com/users/gchanan/following{/other_user}", "gists_url": "https://api.github.com/users/gchanan/gists{/gist_id}", "starred_url": "https://api.github.com/users/gchanan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/gchanan/subscriptions", "organizations_url": "https://api.github.com/users/gchanan/orgs", "repos_url": "https://api.github.com/users/gchanan/repos", "events_url": "https://api.github.com/users/gchanan/events{/privacy}", "received_events_url": "https://api.github.com/users/gchanan/received_events", "type": "User", "site_admin": false}], "requested_teams": [], "labels": [], "milestone": null, "commits_url": "https://api.github.com/repos/pytorch/pytorch/pulls/11328/commits", "review_comments_url": "https://api.github.com/repos/pytorch/pytorch/pulls/11328/comments", "review_comment_url": "https://api.github.com/repos/pytorch/pytorch/pulls/comments{/number}", "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/11328/comments", "statuses_url": "https://api.github.com/repos/pytorch/pytorch/statuses/606a3d12afd5c586b00a927c6c3a6f41191c3fd9", "head": {"label": "tomguluson92:patch-2", "ref": "patch-2", "sha": "606a3d12afd5c586b00a927c6c3a6f41191c3fd9", "user": {"login": "tomguluson92", "id": 19585240, "node_id": "MDQ6VXNlcjE5NTg1MjQw", "avatar_url": "https://avatars1.githubusercontent.com/u/19585240?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tomguluson92", "html_url": "https://github.com/tomguluson92", "followers_url": "https://api.github.com/users/tomguluson92/followers", "following_url": "https://api.github.com/users/tomguluson92/following{/other_user}", "gists_url": "https://api.github.com/users/tomguluson92/gists{/gist_id}", "starred_url": "https://api.github.com/users/tomguluson92/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tomguluson92/subscriptions", "organizations_url": "https://api.github.com/users/tomguluson92/orgs", "repos_url": "https://api.github.com/users/tomguluson92/repos", "events_url": "https://api.github.com/users/tomguluson92/events{/privacy}", "received_events_url": "https://api.github.com/users/tomguluson92/received_events", "type": "User", "site_admin": false}, "repo": null}, "base": {"label": "pytorch:master", "ref": "master", "sha": "bb7d1837bc164b06e1d0826a20a8f7e8338a44e3", "user": {"login": "pytorch", "id": 21003710, "node_id": "MDEyOk9yZ2FuaXphdGlvbjIxMDAzNzEw", "avatar_url": "https://avatars3.githubusercontent.com/u/21003710?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pytorch", "html_url": "https://github.com/pytorch", "followers_url": "https://api.github.com/users/pytorch/followers", "following_url": "https://api.github.com/users/pytorch/following{/other_user}", "gists_url": "https://api.github.com/users/pytorch/gists{/gist_id}", "starred_url": "https://api.github.com/users/pytorch/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pytorch/subscriptions", "organizations_url": "https://api.github.com/users/pytorch/orgs", "repos_url": "https://api.github.com/users/pytorch/repos", "events_url": "https://api.github.com/users/pytorch/events{/privacy}", "received_events_url": "https://api.github.com/users/pytorch/received_events", "type": "Organization", "site_admin": false}, "repo": {"id": 65600975, "node_id": "MDEwOlJlcG9zaXRvcnk2NTYwMDk3NQ==", "name": "pytorch", "full_name": "pytorch/pytorch", "private": false, "owner": {"login": "pytorch", "id": 21003710, "node_id": "MDEyOk9yZ2FuaXphdGlvbjIxMDAzNzEw", "avatar_url": "https://avatars3.githubusercontent.com/u/21003710?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pytorch", "html_url": "https://github.com/pytorch", "followers_url": "https://api.github.com/users/pytorch/followers", "following_url": "https://api.github.com/users/pytorch/following{/other_user}", "gists_url": "https://api.github.com/users/pytorch/gists{/gist_id}", "starred_url": "https://api.github.com/users/pytorch/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pytorch/subscriptions", "organizations_url": "https://api.github.com/users/pytorch/orgs", "repos_url": "https://api.github.com/users/pytorch/repos", "events_url": "https://api.github.com/users/pytorch/events{/privacy}", "received_events_url": "https://api.github.com/users/pytorch/received_events", "type": "Organization", "site_admin": false}, "html_url": "https://github.com/pytorch/pytorch", "description": "Tensors and Dynamic neural networks in Python  with strong GPU acceleration", "fork": false, "url": "https://api.github.com/repos/pytorch/pytorch", "forks_url": "https://api.github.com/repos/pytorch/pytorch/forks", "keys_url": "https://api.github.com/repos/pytorch/pytorch/keys{/key_id}", "collaborators_url": "https://api.github.com/repos/pytorch/pytorch/collaborators{/collaborator}", "teams_url": "https://api.github.com/repos/pytorch/pytorch/teams", "hooks_url": "https://api.github.com/repos/pytorch/pytorch/hooks", "issue_events_url": "https://api.github.com/repos/pytorch/pytorch/issues/events{/number}", "events_url": "https://api.github.com/repos/pytorch/pytorch/events", "assignees_url": "https://api.github.com/repos/pytorch/pytorch/assignees{/user}", "branches_url": "https://api.github.com/repos/pytorch/pytorch/branches{/branch}", "tags_url": "https://api.github.com/repos/pytorch/pytorch/tags", "blobs_url": "https://api.github.com/repos/pytorch/pytorch/git/blobs{/sha}", "git_tags_url": "https://api.github.com/repos/pytorch/pytorch/git/tags{/sha}", "git_refs_url": "https://api.github.com/repos/pytorch/pytorch/git/refs{/sha}", "trees_url": "https://api.github.com/repos/pytorch/pytorch/git/trees{/sha}", "statuses_url": "https://api.github.com/repos/pytorch/pytorch/statuses/{sha}", "languages_url": "https://api.github.com/repos/pytorch/pytorch/languages", "stargazers_url": "https://api.github.com/repos/pytorch/pytorch/stargazers", "contributors_url": "https://api.github.com/repos/pytorch/pytorch/contributors", "subscribers_url": "https://api.github.com/repos/pytorch/pytorch/subscribers", "subscription_url": "https://api.github.com/repos/pytorch/pytorch/subscription", "commits_url": "https://api.github.com/repos/pytorch/pytorch/commits{/sha}", "git_commits_url": "https://api.github.com/repos/pytorch/pytorch/git/commits{/sha}", "comments_url": "https://api.github.com/repos/pytorch/pytorch/comments{/number}", "issue_comment_url": "https://api.github.com/repos/pytorch/pytorch/issues/comments{/number}", "contents_url": "https://api.github.com/repos/pytorch/pytorch/contents/{+path}", "compare_url": "https://api.github.com/repos/pytorch/pytorch/compare/{base}...{head}", "merges_url": "https://api.github.com/repos/pytorch/pytorch/merges", "archive_url": "https://api.github.com/repos/pytorch/pytorch/{archive_format}{/ref}", "downloads_url": "https://api.github.com/repos/pytorch/pytorch/downloads", "issues_url": "https://api.github.com/repos/pytorch/pytorch/issues{/number}", "pulls_url": "https://api.github.com/repos/pytorch/pytorch/pulls{/number}", "milestones_url": "https://api.github.com/repos/pytorch/pytorch/milestones{/number}", "notifications_url": "https://api.github.com/repos/pytorch/pytorch/notifications{?since,all,participating}", "labels_url": "https://api.github.com/repos/pytorch/pytorch/labels{/name}", "releases_url": "https://api.github.com/repos/pytorch/pytorch/releases{/id}", "deployments_url": "https://api.github.com/repos/pytorch/pytorch/deployments", "created_at": "2016-08-13T05:26:41Z", "updated_at": "2018-11-24T05:35:41Z", "pushed_at": "2018-11-24T05:34:07Z", "git_url": "git://github.com/pytorch/pytorch.git", "ssh_url": "git@github.com:pytorch/pytorch.git", "clone_url": "https://github.com/pytorch/pytorch.git", "svn_url": "https://github.com/pytorch/pytorch", "homepage": "http://pytorch.org", "size": 89651, "stargazers_count": 21577, "watchers_count": 21577, "language": "C++", "has_issues": true, "has_projects": true, "has_downloads": true, "has_wiki": true, "has_pages": false, "forks_count": 5149, "mirror_url": null, "archived": false, "open_issues_count": 2193, "license": {"key": "other", "name": "Other", "spdx_id": "NOASSERTION", "url": null, "node_id": "MDc6TGljZW5zZTA="}, "forks": 5149, "open_issues": 2193, "watchers": 21577, "default_branch": "master"}}, "_links": {"self": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/11328"}, "html": {"href": "https://github.com/pytorch/pytorch/pull/11328"}, "issue": {"href": "https://api.github.com/repos/pytorch/pytorch/issues/11328"}, "comments": {"href": "https://api.github.com/repos/pytorch/pytorch/issues/11328/comments"}, "review_comments": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/11328/comments"}, "review_comment": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/comments{/number}"}, "commits": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/11328/commits"}, "statuses": {"href": "https://api.github.com/repos/pytorch/pytorch/statuses/606a3d12afd5c586b00a927c6c3a6f41191c3fd9"}}, "author_association": "CONTRIBUTOR", "body_html": "<p>I revised member function add_module(...) of Module. I reinforce it by add child module to arbitary position of the current module.<br>\nSamples like this:</p>\n<p>I revised member function <code>add_module(...)</code> of Module. I reinforce it by add child module to arbitary position of the current module.<br>\nSamples like this:</p>\n<div class=\"highlight highlight-source-python\"><pre><span class=\"pl-k\">class</span> <span class=\"pl-en\">Perceptron</span>(<span class=\"pl-e\">nn</span>.<span class=\"pl-e\">Module</span>):\n\n    <span class=\"pl-k\">def</span> <span class=\"pl-c1\">__init__</span>(<span class=\"pl-smi\"><span class=\"pl-smi\">self</span></span>, <span class=\"pl-smi\">in_features</span>, <span class=\"pl-smi\">out_features</span>, <span class=\"pl-smi\">hidden_features</span>):\n        <span class=\"pl-c1\">super</span>(Perceptron, <span class=\"pl-c1\">self</span>).<span class=\"pl-c1\">__init__</span>()\n\n        <span class=\"pl-c1\">self</span>.layer1 <span class=\"pl-k\">=</span> nn.Linear(in_features, hidden_features)\n        <span class=\"pl-c1\">self</span>.layer2 <span class=\"pl-k\">=</span> nn.Linear(hidden_features, <span class=\"pl-c1\">4</span>)\n        <span class=\"pl-c1\">self</span>.layer3 <span class=\"pl-k\">=</span> nn.Linear(<span class=\"pl-c1\">4</span>, out_features)\n\n\n\n    <span class=\"pl-k\">def</span> <span class=\"pl-en\">forward</span>(<span class=\"pl-smi\"><span class=\"pl-smi\">self</span></span>, <span class=\"pl-smi\">x</span>):\n\n        x <span class=\"pl-k\">=</span> <span class=\"pl-c1\">self</span>.layer1(x)\n        x <span class=\"pl-k\">=</span> <span class=\"pl-c1\">self</span>.layer2(x)\n        x <span class=\"pl-k\">=</span> <span class=\"pl-c1\">self</span>.layer3(x)\n\n        <span class=\"pl-k\">return</span> x</pre></div>\n<p>When we have a lot of module like this kind. if we need to add a child module to all of this kind of module.<br>\nWe can easily specify the child module position via setting the parameter <code>index</code> to a number(default is -1, the same<br>\nas now PyTorcher's already define.)</p>\n<p>It can easily use the following code to do add a specified child module between <strong>model.layer2</strong> and <strong>model.layer3</strong>:</p>\n<div class=\"highlight highlight-source-python\"><pre><span class=\"pl-k\">class</span> <span class=\"pl-en\">Perceptron_ADD</span>(<span class=\"pl-e\">nn</span>.<span class=\"pl-e\">Module</span>):\n    <span class=\"pl-k\">def</span> <span class=\"pl-c1\">__init__</span>(<span class=\"pl-smi\"><span class=\"pl-smi\">self</span></span>):\n        <span class=\"pl-c1\">super</span>(Perceptron_ADD, <span class=\"pl-c1\">self</span>).<span class=\"pl-c1\">__init__</span>()\n        model <span class=\"pl-k\">=</span> Perceptron(<span class=\"pl-c1\">10</span>, <span class=\"pl-c1\">5</span>, <span class=\"pl-c1\">4</span>)\n\n        model.add_module(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>arbitarylayer<span class=\"pl-pds\">\"</span></span>, nn.Linear(<span class=\"pl-c1\">4</span>, <span class=\"pl-c1\">4</span>), <span class=\"pl-v\">index</span><span class=\"pl-k\">=</span><span class=\"pl-c1\">2</span>)\n\n        <span class=\"pl-c1\">self</span>.model <span class=\"pl-k\">=</span> model\n\n    <span class=\"pl-k\">def</span> <span class=\"pl-en\">forward</span>(<span class=\"pl-smi\"><span class=\"pl-smi\">self</span></span>, <span class=\"pl-smi\">x</span>):\n        <span class=\"pl-k\">return</span> <span class=\"pl-c1\">self</span>.model(x)\n</pre></div>", "body_text": "I revised member function add_module(...) of Module. I reinforce it by add child module to arbitary position of the current module.\nSamples like this:\nI revised member function add_module(...) of Module. I reinforce it by add child module to arbitary position of the current module.\nSamples like this:\nclass Perceptron(nn.Module):\n\n    def __init__(self, in_features, out_features, hidden_features):\n        super(Perceptron, self).__init__()\n\n        self.layer1 = nn.Linear(in_features, hidden_features)\n        self.layer2 = nn.Linear(hidden_features, 4)\n        self.layer3 = nn.Linear(4, out_features)\n\n\n\n    def forward(self, x):\n\n        x = self.layer1(x)\n        x = self.layer2(x)\n        x = self.layer3(x)\n\n        return x\nWhen we have a lot of module like this kind. if we need to add a child module to all of this kind of module.\nWe can easily specify the child module position via setting the parameter index to a number(default is -1, the same\nas now PyTorcher's already define.)\nIt can easily use the following code to do add a specified child module between model.layer2 and model.layer3:\nclass Perceptron_ADD(nn.Module):\n    def __init__(self):\n        super(Perceptron_ADD, self).__init__()\n        model = Perceptron(10, 5, 4)\n\n        model.add_module(\"arbitarylayer\", nn.Linear(4, 4), index=2)\n\n        self.model = model\n\n    def forward(self, x):\n        return self.model(x)", "merged": false, "mergeable": null, "rebaseable": null, "mergeable_state": "unknown", "merged_by": null, "comments": 3, "review_comments": 0, "maintainer_can_modify": false, "commits": 0, "additions": 0, "deletions": 0, "changed_files": 0}