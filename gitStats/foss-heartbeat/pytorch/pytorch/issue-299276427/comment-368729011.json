{"url": "https://api.github.com/repos/pytorch/pytorch/issues/comments/368729011", "html_url": "https://github.com/pytorch/pytorch/issues/5349#issuecomment-368729011", "issue_url": "https://api.github.com/repos/pytorch/pytorch/issues/5349", "id": 368729011, "node_id": "MDEyOklzc3VlQ29tbWVudDM2ODcyOTAxMQ==", "user": {"login": "ezyang", "id": 13564, "node_id": "MDQ6VXNlcjEzNTY0", "avatar_url": "https://avatars0.githubusercontent.com/u/13564?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ezyang", "html_url": "https://github.com/ezyang", "followers_url": "https://api.github.com/users/ezyang/followers", "following_url": "https://api.github.com/users/ezyang/following{/other_user}", "gists_url": "https://api.github.com/users/ezyang/gists{/gist_id}", "starred_url": "https://api.github.com/users/ezyang/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ezyang/subscriptions", "organizations_url": "https://api.github.com/users/ezyang/orgs", "repos_url": "https://api.github.com/users/ezyang/repos", "events_url": "https://api.github.com/users/ezyang/events{/privacy}", "received_events_url": "https://api.github.com/users/ezyang/received_events", "type": "User", "site_admin": false}, "created_at": "2018-02-27T02:50:48Z", "updated_at": "2018-02-27T02:50:48Z", "author_association": "CONTRIBUTOR", "body_html": "<p>Well, how about <code>torch.autograd.backward</code> with support for specifying which inputs you actually want to compute gradients for? I think it's pretty easy to polyfill this functionality (take each of the returned grads from <code>torch.autograd.grad</code> and manually add them to the <code>x.grad</code> of each input <code>x</code>) but it seems like a glaring omission from the current API.</p>", "body_text": "Well, how about torch.autograd.backward with support for specifying which inputs you actually want to compute gradients for? I think it's pretty easy to polyfill this functionality (take each of the returned grads from torch.autograd.grad and manually add them to the x.grad of each input x) but it seems like a glaring omission from the current API.", "body": "Well, how about `torch.autograd.backward` with support for specifying which inputs you actually want to compute gradients for? I think it's pretty easy to polyfill this functionality (take each of the returned grads from `torch.autograd.grad` and manually add them to the `x.grad` of each input `x`) but it seems like a glaring omission from the current API."}