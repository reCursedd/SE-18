{"url": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/167948919", "pull_request_review_id": 96238939, "id": 167948919, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE2Nzk0ODkxOQ==", "diff_hunk": "@@ -250,3 +330,38 @@ def _write_ninja_file(path, name, sources, extra_cflags, extra_ldflags,\n         for block in blocks:\n             lines = '\\n'.join(block)\n             build_file.write('{}\\n\\n'.format(lines))\n+\n+\n+def _wrap_compile(obj, src, ext, cc_args, extra_postargs, pp_opts):\n+    # Recover the original compiler instance that we are monkey-patching.\n+    self = _wrap_compile.compiler_object\n+\n+    # Store the original compiler for later.\n+    original_compiler = self.compiler_so\n+    if os.path.splitext(src)[1].startswith('.cu'):\n+        self.set_executable('compiler_so', _join_cuda_home('bin', 'nvcc'))\n+        if isinstance(extra_postargs, dict):\n+            extra_postargs = extra_postargs['nvcc']\n+        extra_postargs += ['-c', '--compiler-options', \"'-fPIC'\"]\n+    else:\n+        if isinstance(extra_postargs, dict):\n+            extra_postargs = extra_postargs['cxx']\n+        extra_postargs.append('-std=c++11')\n+\n+    self._original_compile(obj, src, ext, cc_args, extra_postargs, pp_opts)\n+\n+    # Put the original compiler back in place.\n+    self.set_executable('compiler_so', original_compiler)", "path": "torch/utils/cpp_extension.py", "position": null, "original_position": 153, "commit_id": "e24efb6eba4ca54f5502e566c33e225e3207e26d", "original_commit_id": "5aacf8ed86e6329d545628c6a166410639ce3caa", "user": {"login": "apaszke", "id": 4583066, "node_id": "MDQ6VXNlcjQ1ODMwNjY=", "avatar_url": "https://avatars3.githubusercontent.com/u/4583066?v=4", "gravatar_id": "", "url": "https://api.github.com/users/apaszke", "html_url": "https://github.com/apaszke", "followers_url": "https://api.github.com/users/apaszke/followers", "following_url": "https://api.github.com/users/apaszke/following{/other_user}", "gists_url": "https://api.github.com/users/apaszke/gists{/gist_id}", "starred_url": "https://api.github.com/users/apaszke/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/apaszke/subscriptions", "organizations_url": "https://api.github.com/users/apaszke/orgs", "repos_url": "https://api.github.com/users/apaszke/repos", "events_url": "https://api.github.com/users/apaszke/events{/privacy}", "received_events_url": "https://api.github.com/users/apaszke/received_events", "type": "User", "site_admin": false}, "body": "This should probably be implemented as a `try: ... finally: ...`", "created_at": "2018-02-13T17:57:51Z", "updated_at": "2018-11-23T15:39:33Z", "html_url": "https://github.com/pytorch/pytorch/pull/5207#discussion_r167948919", "pull_request_url": "https://api.github.com/repos/pytorch/pytorch/pulls/5207", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/167948919"}, "html": {"href": "https://github.com/pytorch/pytorch/pull/5207#discussion_r167948919"}, "pull_request": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/5207"}}, "body_html": "<p>This should probably be implemented as a <code>try: ... finally: ...</code></p>", "body_text": "This should probably be implemented as a try: ... finally: ..."}