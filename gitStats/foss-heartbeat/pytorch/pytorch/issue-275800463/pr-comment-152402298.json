{"url": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/152402298", "pull_request_review_id": 78259586, "id": 152402298, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE1MjQwMjI5OA==", "diff_hunk": "@@ -58,6 +58,8 @@\n \n - func: unsqueeze_(Tensor self, int64_t dim) -> Tensor\n \n+- func: _det_with_svd(Tensor self) -> (Tensor, Tensor, Tensor, Tensor)", "path": "aten/src/ATen/native/native_functions.yaml", "position": 4, "original_position": 4, "commit_id": "fc62b950f1e6af3fa3034bee9aeee08ac2c4ca5d", "original_commit_id": "7ba0ad5da14cc2fb1c481e28384e4b677ce6017f", "user": {"login": "colesbury", "id": 655866, "node_id": "MDQ6VXNlcjY1NTg2Ng==", "avatar_url": "https://avatars1.githubusercontent.com/u/655866?v=4", "gravatar_id": "", "url": "https://api.github.com/users/colesbury", "html_url": "https://github.com/colesbury", "followers_url": "https://api.github.com/users/colesbury/followers", "following_url": "https://api.github.com/users/colesbury/following{/other_user}", "gists_url": "https://api.github.com/users/colesbury/gists{/gist_id}", "starred_url": "https://api.github.com/users/colesbury/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/colesbury/subscriptions", "organizations_url": "https://api.github.com/users/colesbury/orgs", "repos_url": "https://api.github.com/users/colesbury/repos", "events_url": "https://api.github.com/users/colesbury/events{/privacy}", "received_events_url": "https://api.github.com/users/colesbury/received_events", "type": "User", "site_admin": false}, "body": "This seems good to me. We don't really want this as part of the public-API, but it's useful for avoiding duplicate computations in the backwards. The underscore prefix seems appropriate for this.\r\n\r\nWith the NN functions, we named some `xxx_forward` because we thought that the `_forward` versions might be useful at least at the C++ level. I don't think that's the case here.\r\n\r\nAs you suggest below, I think moving det() down to C++ as a simple NativeFunction would be good too.", "created_at": "2017-11-21T21:09:56Z", "updated_at": "2018-11-23T15:36:42Z", "html_url": "https://github.com/pytorch/pytorch/pull/3816#discussion_r152402298", "pull_request_url": "https://api.github.com/repos/pytorch/pytorch/pulls/3816", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/152402298"}, "html": {"href": "https://github.com/pytorch/pytorch/pull/3816#discussion_r152402298"}, "pull_request": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/3816"}}, "body_html": "<p>This seems good to me. We don't really want this as part of the public-API, but it's useful for avoiding duplicate computations in the backwards. The underscore prefix seems appropriate for this.</p>\n<p>With the NN functions, we named some <code>xxx_forward</code> because we thought that the <code>_forward</code> versions might be useful at least at the C++ level. I don't think that's the case here.</p>\n<p>As you suggest below, I think moving det() down to C++ as a simple NativeFunction would be good too.</p>", "body_text": "This seems good to me. We don't really want this as part of the public-API, but it's useful for avoiding duplicate computations in the backwards. The underscore prefix seems appropriate for this.\nWith the NN functions, we named some xxx_forward because we thought that the _forward versions might be useful at least at the C++ level. I don't think that's the case here.\nAs you suggest below, I think moving det() down to C++ as a simple NativeFunction would be good too.", "in_reply_to_id": 152400121}