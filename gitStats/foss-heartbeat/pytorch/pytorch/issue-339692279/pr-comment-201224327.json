{"url": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/201224327", "pull_request_review_id": 135682411, "id": 201224327, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwMTIyNDMyNw==", "diff_hunk": "@@ -0,0 +1,67 @@\n+#include <torch/nn/init.h>\n+\n+#include <torch/tensor.h>\n+#include <torch/utils.h>\n+\n+namespace torch {\n+namespace nn {\n+namespace init {\n+\n+Tensor uniform_(Tensor tensor, double low, double high) {\n+  NoGradGuard guard;\n+  return tensor.uniform_(low, high);\n+}\n+\n+Tensor normal_(Tensor tensor, double mean, double std) {\n+  NoGradGuard guard;\n+  return tensor.normal_(mean, std);\n+}\n+\n+Tensor constant_(Tensor tensor, Scalar value) {\n+  NoGradGuard guard;\n+  return tensor.fill_(value);\n+}\n+\n+Tensor ones_(Tensor tensor) {\n+  NoGradGuard guard;\n+  return tensor.fill_(1);\n+}\n+\n+Tensor zeros_(Tensor tensor) {\n+  NoGradGuard guard;\n+  return tensor.zero_();\n+}\n+\n+Tensor eye_(Tensor tensor) {\n+  NoGradGuard guard;\n+  return tensor.eye_();\n+}\n+\n+Tensor dirac_(Tensor tensor) {\n+  NoGradGuard guard;\n+  return tensor.dirac_();\n+}\n+\n+Tensor xavier_uniform_(Tensor tensor, double gain) {\n+  NoGradGuard guard;\n+  return tensor.xavier_uniform_(gain);\n+}\n+\n+Tensor xavier_normal_(Tensor tensor, double gain) {\n+  NoGradGuard guard;\n+  return tensor.xavier_normal_(gain);\n+}\n+\n+Tensor orthogonal_(Tensor tensor, double gain) {\n+  NoGradGuard guard;\n+  return tensor.orthogonal_(gain);\n+}\n+\n+Tensor sparse_(Tensor tensor, double sparsity, double std) {\n+  NoGradGuard guard;\n+  return tensor.sparse_(sparsity, std);", "path": "torch/csrc/api/src/nn/init.cpp", "position": null, "original_position": 62, "commit_id": "a78f62fde100bc21543e22781f98c16db06a7a69", "original_commit_id": "8531dafc8379002a2cae8028cdca4b26f7b7edcd", "user": {"login": "goldsborough", "id": 6429851, "node_id": "MDQ6VXNlcjY0Mjk4NTE=", "avatar_url": "https://avatars3.githubusercontent.com/u/6429851?v=4", "gravatar_id": "", "url": "https://api.github.com/users/goldsborough", "html_url": "https://github.com/goldsborough", "followers_url": "https://api.github.com/users/goldsborough/followers", "following_url": "https://api.github.com/users/goldsborough/following{/other_user}", "gists_url": "https://api.github.com/users/goldsborough/gists{/gist_id}", "starred_url": "https://api.github.com/users/goldsborough/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/goldsborough/subscriptions", "organizations_url": "https://api.github.com/users/goldsborough/orgs", "repos_url": "https://api.github.com/users/goldsborough/repos", "events_url": "https://api.github.com/users/goldsborough/events{/privacy}", "received_events_url": "https://api.github.com/users/goldsborough/received_events", "type": "User", "site_admin": false}, "body": "Should we put them only on torch and not tensor? We only need them for nn.init, so happy to do whatever is the best way to hide it\r\n\r\nEDIT: I meant torch in Python and at in C++, i.e.  a namespace only method", "created_at": "2018-07-10T05:58:01Z", "updated_at": "2018-11-23T15:47:03Z", "html_url": "https://github.com/pytorch/pytorch/pull/9295#discussion_r201224327", "pull_request_url": "https://api.github.com/repos/pytorch/pytorch/pulls/9295", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/201224327"}, "html": {"href": "https://github.com/pytorch/pytorch/pull/9295#discussion_r201224327"}, "pull_request": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/9295"}}, "body_html": "<p>Should we put them only on torch and not tensor? We only need them for nn.init, so happy to do whatever is the best way to hide it</p>\n<p>EDIT: I meant torch in Python and at in C++, i.e.  a namespace only method</p>", "body_text": "Should we put them only on torch and not tensor? We only need them for nn.init, so happy to do whatever is the best way to hide it\nEDIT: I meant torch in Python and at in C++, i.e.  a namespace only method", "in_reply_to_id": 201222900}