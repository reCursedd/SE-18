{"url": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/201541985", "pull_request_review_id": 136064119, "id": 201541985, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwMTU0MTk4NQ==", "diff_hunk": "@@ -0,0 +1,23 @@\n+#pragma once\n+\n+#include <torch/tensor.h>\n+\n+namespace torch {\n+namespace nn {\n+namespace init {\n+\n+Tensor constant_(Tensor tensor, Scalar value);\n+Tensor dirac_(Tensor tensor);\n+Tensor eye_(Tensor tensor);\n+Tensor normal_(Tensor tensor, double mean = 0, double std = 1);\n+Tensor ones_(Tensor tensor);\n+Tensor orthogonal_(Tensor tensor, double gain = 1.0);\n+Tensor sparse_(Tensor tensor, double sparsity, double std = 0.01);\n+Tensor uniform_(Tensor tensor, double low = 0, double high = 1);\n+Tensor xavier_normal_(Tensor tensor, double gain = 1.0);\n+Tensor xavier_uniform_(Tensor tensor, double gain = 1.0);", "path": "torch/csrc/api/include/torch/nn/init.h", "position": 18, "original_position": 18, "commit_id": "a78f62fde100bc21543e22781f98c16db06a7a69", "original_commit_id": "a78f62fde100bc21543e22781f98c16db06a7a69", "user": {"login": "goldsborough", "id": 6429851, "node_id": "MDQ6VXNlcjY0Mjk4NTE=", "avatar_url": "https://avatars3.githubusercontent.com/u/6429851?v=4", "gravatar_id": "", "url": "https://api.github.com/users/goldsborough", "html_url": "https://github.com/goldsborough", "followers_url": "https://api.github.com/users/goldsborough/followers", "following_url": "https://api.github.com/users/goldsborough/following{/other_user}", "gists_url": "https://api.github.com/users/goldsborough/gists{/gist_id}", "starred_url": "https://api.github.com/users/goldsborough/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/goldsborough/subscriptions", "organizations_url": "https://api.github.com/users/goldsborough/orgs", "repos_url": "https://api.github.com/users/goldsborough/repos", "events_url": "https://api.github.com/users/goldsborough/events{/privacy}", "received_events_url": "https://api.github.com/users/goldsborough/received_events", "type": "User", "site_admin": false}, "body": "`kaiming_normal_` and `kaiming_uniform_` do lots of custom logic based on the `activation` which would have been hard to cram through our ATen codegen, so I left it out before. Now that it's purely in the C++ API, we could add an enum for the activation and stuff. But I've left it out for now.", "created_at": "2018-07-11T01:24:16Z", "updated_at": "2018-11-23T15:47:06Z", "html_url": "https://github.com/pytorch/pytorch/pull/9295#discussion_r201541985", "pull_request_url": "https://api.github.com/repos/pytorch/pytorch/pulls/9295", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/201541985"}, "html": {"href": "https://github.com/pytorch/pytorch/pull/9295#discussion_r201541985"}, "pull_request": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/9295"}}, "body_html": "<p><code>kaiming_normal_</code> and <code>kaiming_uniform_</code> do lots of custom logic based on the <code>activation</code> which would have been hard to cram through our ATen codegen, so I left it out before. Now that it's purely in the C++ API, we could add an enum for the activation and stuff. But I've left it out for now.</p>", "body_text": "kaiming_normal_ and kaiming_uniform_ do lots of custom logic based on the activation which would have been hard to cram through our ATen codegen, so I left it out before. Now that it's purely in the C++ API, we could add an enum for the activation and stuff. But I've left it out for now.", "in_reply_to_id": 201541661}