{"url": "https://api.github.com/repos/pytorch/pytorch/issues/7352", "repository_url": "https://api.github.com/repos/pytorch/pytorch", "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/7352/labels{/name}", "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/7352/comments", "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/7352/events", "html_url": "https://github.com/pytorch/pytorch/issues/7352", "id": 320951625, "node_id": "MDU6SXNzdWUzMjA5NTE2MjU=", "number": 7352, "title": "Check for F2C convention (for blas) at runtime", "user": {"login": "ezyang", "id": 13564, "node_id": "MDQ6VXNlcjEzNTY0", "avatar_url": "https://avatars0.githubusercontent.com/u/13564?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ezyang", "html_url": "https://github.com/ezyang", "followers_url": "https://api.github.com/users/ezyang/followers", "following_url": "https://api.github.com/users/ezyang/following{/other_user}", "gists_url": "https://api.github.com/users/ezyang/gists{/gist_id}", "starred_url": "https://api.github.com/users/ezyang/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ezyang/subscriptions", "organizations_url": "https://api.github.com/users/ezyang/orgs", "repos_url": "https://api.github.com/users/ezyang/repos", "events_url": "https://api.github.com/users/ezyang/events{/privacy}", "received_events_url": "https://api.github.com/users/ezyang/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2018-05-07T20:47:23Z", "updated_at": "2018-05-07T20:47:23Z", "closed_at": null, "author_association": "CONTRIBUTOR", "body_html": "<p>In <code>cmake/Modules/FindBLAS.cmake</code> we have a test to see if <code>sdot_</code> returns a float or a double (which may vary, depending on whether or not BLAS is compiled with the F2C convention or not.) However, in general, we <em>dynamically</em> link against our BLAS library, which means that it is possible that at runtime we get a BLAS library with a different convention than what we compiled with. This is bad.</p>\n<p>A more robust solution would be to test the convention <em>at runtime</em>, so that we always make the correct selection.</p>\n<p>CC <a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=1310570\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/soumith\">@soumith</a></p>", "body_text": "In cmake/Modules/FindBLAS.cmake we have a test to see if sdot_ returns a float or a double (which may vary, depending on whether or not BLAS is compiled with the F2C convention or not.) However, in general, we dynamically link against our BLAS library, which means that it is possible that at runtime we get a BLAS library with a different convention than what we compiled with. This is bad.\nA more robust solution would be to test the convention at runtime, so that we always make the correct selection.\nCC @soumith", "body": "In `cmake/Modules/FindBLAS.cmake` we have a test to see if `sdot_` returns a float or a double (which may vary, depending on whether or not BLAS is compiled with the F2C convention or not.) However, in general, we *dynamically* link against our BLAS library, which means that it is possible that at runtime we get a BLAS library with a different convention than what we compiled with. This is bad.\r\n\r\nA more robust solution would be to test the convention *at runtime*, so that we always make the correct selection.\r\n\r\nCC @soumith "}