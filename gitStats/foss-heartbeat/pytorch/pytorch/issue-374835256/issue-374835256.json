{"url": "https://api.github.com/repos/pytorch/pytorch/issues/13233", "repository_url": "https://api.github.com/repos/pytorch/pytorch", "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/13233/labels{/name}", "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/13233/comments", "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/13233/events", "html_url": "https://github.com/pytorch/pytorch/issues/13233", "id": 374835256, "node_id": "MDU6SXNzdWUzNzQ4MzUyNTY=", "number": 13233, "title": "Slow tests on CPU", "user": {"login": "ezyang", "id": 13564, "node_id": "MDQ6VXNlcjEzNTY0", "avatar_url": "https://avatars0.githubusercontent.com/u/13564?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ezyang", "html_url": "https://github.com/ezyang", "followers_url": "https://api.github.com/users/ezyang/followers", "following_url": "https://api.github.com/users/ezyang/following{/other_user}", "gists_url": "https://api.github.com/users/ezyang/gists{/gist_id}", "starred_url": "https://api.github.com/users/ezyang/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ezyang/subscriptions", "organizations_url": "https://api.github.com/users/ezyang/orgs", "repos_url": "https://api.github.com/users/ezyang/repos", "events_url": "https://api.github.com/users/ezyang/events{/privacy}", "received_events_url": "https://api.github.com/users/ezyang/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-10-29T02:35:47Z", "updated_at": "2018-10-29T03:17:11Z", "closed_at": null, "author_association": "CONTRIBUTOR", "body_html": "<p>I was looking through some logs and noticed the following slow tests. I'm not sure if a timestamp skip means that the test before or the test after was slow; but I've seen big jumps on \"skipped\" tests under the former interpretation, so this issue is written under the assumption that it's the after.</p>\n<p>test_baddbmm_broadcast_lhs_coef, test_baddbmm_coef, test_baddbmm_scalar_broadcast_lhs, test_baddbmm_scalar_broadcast_lhs_coef, test_bmm</p>\n<pre><code>Oct 29 00:52:20 test_backward_no_grad (__main__.TestAutograd) ... ok\nOct 29 00:56:29 test_baddbmm (__main__.TestAutograd) ... ok\nOct 29 00:59:32 test_baddbmm_broadcast_lhs (__main__.TestAutograd) ... ok\nOct 29 01:02:29 test_baddbmm_broadcast_lhs_coef (__main__.TestAutograd) ... ok\nOct 29 01:06:42 test_baddbmm_coef (__main__.TestAutograd) ... ok\nOct 29 01:09:36 test_baddbmm_scalar_broadcast_lhs (__main__.TestAutograd) ... ok\nOct 29 01:12:48 test_baddbmm_scalar_broadcast_lhs_coef (__main__.TestAutograd) ... ok\nOct 29 01:17:28 test_bmm (__main__.TestAutograd) ... ok\n</code></pre>\n<p>test_transpose:</p>\n<pre><code>Oct 29 01:29:58 test_to_sparse (__main__.TestUncoalescedSparse) ... ok\nOct 29 01:31:29 test_transpose (__main__.TestUncoalescedSparse) ... ok\n</code></pre>\n<p>test_matmul_1d_4d (not replicated in python3.5)</p>\n<pre><code>Oct 29 01:20:43 test_matmul (__main__.TestAutograd) ... ok\nOct 29 01:20:43 test_matmul_1d_2d (__main__.TestAutograd) ... ok\nOct 29 01:24:50 test_matmul_1d_4d (__main__.TestAutograd) ... ok\nOct 29 01:24:50 test_matmul_2d_1d (__main__.TestAutograd) ... ok\n</code></pre>\n<p>test_fft_ifft_rfft_irfft (less pronounced in python3.5)</p>\n<pre><code>Oct 29 01:17:42 test_expm1 (__main__.TestAutograd) ... ok\nOct 29 01:17:42 test_expm1_scalar (__main__.TestAutograd) ... ok\nOct 29 01:20:28 test_fft_ifft_rfft_irfft (__main__.TestAutograd) ... ok\nOct 29 01:20:28 test_fill (__main__.TestAutograd) ... ok\n</code></pre>\n<p>test_softmax_spatial_dtype, test_softmax_spatial_special: (only special replicated in python3.5)</p>\n<pre><code>Oct 29 00:50:54 test_softmax_spatial_cuda (__main__.TestNN) ... skipped 'Excluded from CUDA tests'\nOct 29 00:51:04 test_softmax_spatial_dtype (__main__.TestNN) ... ok\nOct 29 00:51:04 test_softmax_spatial_dtype_cuda (__main__.TestNN) ... skipped 'Excluded from CUDA tests'\nOct 29 00:52:03 test_softmax_spatial_special (__main__.TestNN) ... ok\nOct 29 00:52:03 test_softmax_spatial_special_cuda (__main__.TestNN) ... skipped 'Excluded from CUDA tests'\n</code></pre>\n<p>test_conv_double_backward, test_conv_double_backward_groups (generally the convolution tests are slow-ish)</p>\n<pre><code>Oct 29 00:41:37 test_container_copy (__main__.TestNN) ... ok\nOct 29 00:41:37 test_contig_wrong_stride_cudnn (__main__.TestNN) ... skipped 'needs cudnn'\nOct 29 00:48:49 test_conv_double_backward (__main__.TestNN) ... ok\nOct 29 00:48:49 test_conv_double_backward_cuda (__main__.TestNN) ... skipped 'CUDA unavailable'\nOct 29 00:49:02 test_conv_double_backward_groups (__main__.TestNN) ... ok\n</code></pre>\n<p>test_AdaptiveMaxPool3d_single, test_AdaptiveMaxPool3d_single_nonatomic</p>\n<pre><code>Oct 29 00:26:44 test_AdaptiveMaxPool3d_indices_cuda (__main__.TestNN) ... skipped 'CUDA unavailable'\nOct 29 00:29:05 test_AdaptiveMaxPool3d_single (__main__.TestNN) ... ok\nOct 29 00:29:05 test_AdaptiveMaxPool3d_single_cuda (__main__.TestNN) ... skipped 'Excluded from CUDA tests'\nOct 29 00:31:31 test_AdaptiveMaxPool3d_single_nonatomic (__main__.TestNN) ... ok\n</code></pre>\n<p>test_AdaptiveAvgPool3d_tuple_none</p>\n<pre><code>Oct 29 00:23:44 test_AdaptiveAvgPool3d_tuple (__main__.TestNN) ... ok\nOct 29 00:23:44 test_AdaptiveAvgPool3d_tuple_cuda (__main__.TestNN) ... skipped 'Excluded from CUDA tests'\nOct 29 00:25:53 test_AdaptiveAvgPool3d_tuple_none (__main__.TestNN) ... ok\nOct 29 00:25:53 test_AdaptiveAvgPool3d_tuple_none_cuda (__main__.TestNN) ... skipped 'Excluded from CUDA tests'\n</code></pre>\n<p>Source log: <a href=\"https://circleci.com/gh/pytorch/pytorch/137930?utm_campaign=vcs-integration-link&amp;utm_medium=referral&amp;utm_source=github-build-link\" rel=\"nofollow\">https://circleci.com/gh/pytorch/pytorch/137930?utm_campaign=vcs-integration-link&amp;utm_medium=referral&amp;utm_source=github-build-link</a></p>\n<p>Python 3.5 source log: <a href=\"https://circleci.com/gh/pytorch/pytorch/137928?utm_campaign=vcs-integration-link&amp;utm_medium=referral&amp;utm_source=github-build-link\" rel=\"nofollow\">https://circleci.com/gh/pytorch/pytorch/137928?utm_campaign=vcs-integration-link&amp;utm_medium=referral&amp;utm_source=github-build-link</a></p>\n<p>cc <a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=370202\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/zdevito\">@zdevito</a></p>", "body_text": "I was looking through some logs and noticed the following slow tests. I'm not sure if a timestamp skip means that the test before or the test after was slow; but I've seen big jumps on \"skipped\" tests under the former interpretation, so this issue is written under the assumption that it's the after.\ntest_baddbmm_broadcast_lhs_coef, test_baddbmm_coef, test_baddbmm_scalar_broadcast_lhs, test_baddbmm_scalar_broadcast_lhs_coef, test_bmm\nOct 29 00:52:20 test_backward_no_grad (__main__.TestAutograd) ... ok\nOct 29 00:56:29 test_baddbmm (__main__.TestAutograd) ... ok\nOct 29 00:59:32 test_baddbmm_broadcast_lhs (__main__.TestAutograd) ... ok\nOct 29 01:02:29 test_baddbmm_broadcast_lhs_coef (__main__.TestAutograd) ... ok\nOct 29 01:06:42 test_baddbmm_coef (__main__.TestAutograd) ... ok\nOct 29 01:09:36 test_baddbmm_scalar_broadcast_lhs (__main__.TestAutograd) ... ok\nOct 29 01:12:48 test_baddbmm_scalar_broadcast_lhs_coef (__main__.TestAutograd) ... ok\nOct 29 01:17:28 test_bmm (__main__.TestAutograd) ... ok\n\ntest_transpose:\nOct 29 01:29:58 test_to_sparse (__main__.TestUncoalescedSparse) ... ok\nOct 29 01:31:29 test_transpose (__main__.TestUncoalescedSparse) ... ok\n\ntest_matmul_1d_4d (not replicated in python3.5)\nOct 29 01:20:43 test_matmul (__main__.TestAutograd) ... ok\nOct 29 01:20:43 test_matmul_1d_2d (__main__.TestAutograd) ... ok\nOct 29 01:24:50 test_matmul_1d_4d (__main__.TestAutograd) ... ok\nOct 29 01:24:50 test_matmul_2d_1d (__main__.TestAutograd) ... ok\n\ntest_fft_ifft_rfft_irfft (less pronounced in python3.5)\nOct 29 01:17:42 test_expm1 (__main__.TestAutograd) ... ok\nOct 29 01:17:42 test_expm1_scalar (__main__.TestAutograd) ... ok\nOct 29 01:20:28 test_fft_ifft_rfft_irfft (__main__.TestAutograd) ... ok\nOct 29 01:20:28 test_fill (__main__.TestAutograd) ... ok\n\ntest_softmax_spatial_dtype, test_softmax_spatial_special: (only special replicated in python3.5)\nOct 29 00:50:54 test_softmax_spatial_cuda (__main__.TestNN) ... skipped 'Excluded from CUDA tests'\nOct 29 00:51:04 test_softmax_spatial_dtype (__main__.TestNN) ... ok\nOct 29 00:51:04 test_softmax_spatial_dtype_cuda (__main__.TestNN) ... skipped 'Excluded from CUDA tests'\nOct 29 00:52:03 test_softmax_spatial_special (__main__.TestNN) ... ok\nOct 29 00:52:03 test_softmax_spatial_special_cuda (__main__.TestNN) ... skipped 'Excluded from CUDA tests'\n\ntest_conv_double_backward, test_conv_double_backward_groups (generally the convolution tests are slow-ish)\nOct 29 00:41:37 test_container_copy (__main__.TestNN) ... ok\nOct 29 00:41:37 test_contig_wrong_stride_cudnn (__main__.TestNN) ... skipped 'needs cudnn'\nOct 29 00:48:49 test_conv_double_backward (__main__.TestNN) ... ok\nOct 29 00:48:49 test_conv_double_backward_cuda (__main__.TestNN) ... skipped 'CUDA unavailable'\nOct 29 00:49:02 test_conv_double_backward_groups (__main__.TestNN) ... ok\n\ntest_AdaptiveMaxPool3d_single, test_AdaptiveMaxPool3d_single_nonatomic\nOct 29 00:26:44 test_AdaptiveMaxPool3d_indices_cuda (__main__.TestNN) ... skipped 'CUDA unavailable'\nOct 29 00:29:05 test_AdaptiveMaxPool3d_single (__main__.TestNN) ... ok\nOct 29 00:29:05 test_AdaptiveMaxPool3d_single_cuda (__main__.TestNN) ... skipped 'Excluded from CUDA tests'\nOct 29 00:31:31 test_AdaptiveMaxPool3d_single_nonatomic (__main__.TestNN) ... ok\n\ntest_AdaptiveAvgPool3d_tuple_none\nOct 29 00:23:44 test_AdaptiveAvgPool3d_tuple (__main__.TestNN) ... ok\nOct 29 00:23:44 test_AdaptiveAvgPool3d_tuple_cuda (__main__.TestNN) ... skipped 'Excluded from CUDA tests'\nOct 29 00:25:53 test_AdaptiveAvgPool3d_tuple_none (__main__.TestNN) ... ok\nOct 29 00:25:53 test_AdaptiveAvgPool3d_tuple_none_cuda (__main__.TestNN) ... skipped 'Excluded from CUDA tests'\n\nSource log: https://circleci.com/gh/pytorch/pytorch/137930?utm_campaign=vcs-integration-link&utm_medium=referral&utm_source=github-build-link\nPython 3.5 source log: https://circleci.com/gh/pytorch/pytorch/137928?utm_campaign=vcs-integration-link&utm_medium=referral&utm_source=github-build-link\ncc @zdevito", "body": "I was looking through some logs and noticed the following slow tests. I'm not sure if a timestamp skip means that the test before or the test after was slow; but I've seen big jumps on \"skipped\" tests under the former interpretation, so this issue is written under the assumption that it's the after.\r\n\r\ntest_baddbmm_broadcast_lhs_coef, test_baddbmm_coef, test_baddbmm_scalar_broadcast_lhs, test_baddbmm_scalar_broadcast_lhs_coef, test_bmm\r\n\r\n```\r\nOct 29 00:52:20 test_backward_no_grad (__main__.TestAutograd) ... ok\r\nOct 29 00:56:29 test_baddbmm (__main__.TestAutograd) ... ok\r\nOct 29 00:59:32 test_baddbmm_broadcast_lhs (__main__.TestAutograd) ... ok\r\nOct 29 01:02:29 test_baddbmm_broadcast_lhs_coef (__main__.TestAutograd) ... ok\r\nOct 29 01:06:42 test_baddbmm_coef (__main__.TestAutograd) ... ok\r\nOct 29 01:09:36 test_baddbmm_scalar_broadcast_lhs (__main__.TestAutograd) ... ok\r\nOct 29 01:12:48 test_baddbmm_scalar_broadcast_lhs_coef (__main__.TestAutograd) ... ok\r\nOct 29 01:17:28 test_bmm (__main__.TestAutograd) ... ok\r\n```\r\n\r\ntest_transpose:\r\n\r\n```\r\nOct 29 01:29:58 test_to_sparse (__main__.TestUncoalescedSparse) ... ok\r\nOct 29 01:31:29 test_transpose (__main__.TestUncoalescedSparse) ... ok\r\n```\r\n\r\ntest_matmul_1d_4d (not replicated in python3.5)\r\n\r\n```\r\nOct 29 01:20:43 test_matmul (__main__.TestAutograd) ... ok\r\nOct 29 01:20:43 test_matmul_1d_2d (__main__.TestAutograd) ... ok\r\nOct 29 01:24:50 test_matmul_1d_4d (__main__.TestAutograd) ... ok\r\nOct 29 01:24:50 test_matmul_2d_1d (__main__.TestAutograd) ... ok\r\n```\r\n\r\ntest_fft_ifft_rfft_irfft (less pronounced in python3.5)\r\n\r\n```\r\nOct 29 01:17:42 test_expm1 (__main__.TestAutograd) ... ok\r\nOct 29 01:17:42 test_expm1_scalar (__main__.TestAutograd) ... ok\r\nOct 29 01:20:28 test_fft_ifft_rfft_irfft (__main__.TestAutograd) ... ok\r\nOct 29 01:20:28 test_fill (__main__.TestAutograd) ... ok\r\n```\r\n\r\ntest_softmax_spatial_dtype, test_softmax_spatial_special: (only special replicated in python3.5)\r\n\r\n```\r\nOct 29 00:50:54 test_softmax_spatial_cuda (__main__.TestNN) ... skipped 'Excluded from CUDA tests'\r\nOct 29 00:51:04 test_softmax_spatial_dtype (__main__.TestNN) ... ok\r\nOct 29 00:51:04 test_softmax_spatial_dtype_cuda (__main__.TestNN) ... skipped 'Excluded from CUDA tests'\r\nOct 29 00:52:03 test_softmax_spatial_special (__main__.TestNN) ... ok\r\nOct 29 00:52:03 test_softmax_spatial_special_cuda (__main__.TestNN) ... skipped 'Excluded from CUDA tests'\r\n```\r\n\r\ntest_conv_double_backward, test_conv_double_backward_groups (generally the convolution tests are slow-ish) \r\n\r\n```\r\nOct 29 00:41:37 test_container_copy (__main__.TestNN) ... ok\r\nOct 29 00:41:37 test_contig_wrong_stride_cudnn (__main__.TestNN) ... skipped 'needs cudnn'\r\nOct 29 00:48:49 test_conv_double_backward (__main__.TestNN) ... ok\r\nOct 29 00:48:49 test_conv_double_backward_cuda (__main__.TestNN) ... skipped 'CUDA unavailable'\r\nOct 29 00:49:02 test_conv_double_backward_groups (__main__.TestNN) ... ok\r\n```\r\n\r\ntest_AdaptiveMaxPool3d_single, test_AdaptiveMaxPool3d_single_nonatomic\r\n\r\n```\r\nOct 29 00:26:44 test_AdaptiveMaxPool3d_indices_cuda (__main__.TestNN) ... skipped 'CUDA unavailable'\r\nOct 29 00:29:05 test_AdaptiveMaxPool3d_single (__main__.TestNN) ... ok\r\nOct 29 00:29:05 test_AdaptiveMaxPool3d_single_cuda (__main__.TestNN) ... skipped 'Excluded from CUDA tests'\r\nOct 29 00:31:31 test_AdaptiveMaxPool3d_single_nonatomic (__main__.TestNN) ... ok\r\n```\r\n\r\ntest_AdaptiveAvgPool3d_tuple_none\r\n\r\n```\r\nOct 29 00:23:44 test_AdaptiveAvgPool3d_tuple (__main__.TestNN) ... ok\r\nOct 29 00:23:44 test_AdaptiveAvgPool3d_tuple_cuda (__main__.TestNN) ... skipped 'Excluded from CUDA tests'\r\nOct 29 00:25:53 test_AdaptiveAvgPool3d_tuple_none (__main__.TestNN) ... ok\r\nOct 29 00:25:53 test_AdaptiveAvgPool3d_tuple_none_cuda (__main__.TestNN) ... skipped 'Excluded from CUDA tests'\r\n```\r\n\r\nSource log: https://circleci.com/gh/pytorch/pytorch/137930?utm_campaign=vcs-integration-link&utm_medium=referral&utm_source=github-build-link\r\n\r\nPython 3.5 source log: https://circleci.com/gh/pytorch/pytorch/137928?utm_campaign=vcs-integration-link&utm_medium=referral&utm_source=github-build-link\r\n\r\ncc @zdevito "}