{"url": "https://api.github.com/repos/pytorch/pytorch/issues/606", "repository_url": "https://api.github.com/repos/pytorch/pytorch", "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/606/labels{/name}", "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/606/comments", "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/606/events", "html_url": "https://github.com/pytorch/pytorch/issues/606", "id": 203561760, "node_id": "MDU6SXNzdWUyMDM1NjE3NjA=", "number": 606, "title": "torch.load() and torch.save() of big tensors is slow due to tar", "user": {"login": "adamlerer", "id": 5702157, "node_id": "MDQ6VXNlcjU3MDIxNTc=", "avatar_url": "https://avatars2.githubusercontent.com/u/5702157?v=4", "gravatar_id": "", "url": "https://api.github.com/users/adamlerer", "html_url": "https://github.com/adamlerer", "followers_url": "https://api.github.com/users/adamlerer/followers", "following_url": "https://api.github.com/users/adamlerer/following{/other_user}", "gists_url": "https://api.github.com/users/adamlerer/gists{/gist_id}", "starred_url": "https://api.github.com/users/adamlerer/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/adamlerer/subscriptions", "organizations_url": "https://api.github.com/users/adamlerer/orgs", "repos_url": "https://api.github.com/users/adamlerer/repos", "events_url": "https://api.github.com/users/adamlerer/events{/privacy}", "received_events_url": "https://api.github.com/users/adamlerer/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 424131849, "node_id": "MDU6TGFiZWw0MjQxMzE4NDk=", "url": "https://api.github.com/repos/pytorch/pytorch/labels/enhancement", "name": "enhancement", "color": "84b6eb", "default": true}, {"id": 443484050, "node_id": "MDU6TGFiZWw0NDM0ODQwNTA=", "url": "https://api.github.com/repos/pytorch/pytorch/labels/medium%20priority", "name": "medium priority", "color": "fbca04", "default": false}], "state": "closed", "locked": false, "assignee": {"login": "adamlerer", "id": 5702157, "node_id": "MDQ6VXNlcjU3MDIxNTc=", "avatar_url": "https://avatars2.githubusercontent.com/u/5702157?v=4", "gravatar_id": "", "url": "https://api.github.com/users/adamlerer", "html_url": "https://github.com/adamlerer", "followers_url": "https://api.github.com/users/adamlerer/followers", "following_url": "https://api.github.com/users/adamlerer/following{/other_user}", "gists_url": "https://api.github.com/users/adamlerer/gists{/gist_id}", "starred_url": "https://api.github.com/users/adamlerer/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/adamlerer/subscriptions", "organizations_url": "https://api.github.com/users/adamlerer/orgs", "repos_url": "https://api.github.com/users/adamlerer/repos", "events_url": "https://api.github.com/users/adamlerer/events{/privacy}", "received_events_url": "https://api.github.com/users/adamlerer/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "adamlerer", "id": 5702157, "node_id": "MDQ6VXNlcjU3MDIxNTc=", "avatar_url": "https://avatars2.githubusercontent.com/u/5702157?v=4", "gravatar_id": "", "url": "https://api.github.com/users/adamlerer", "html_url": "https://github.com/adamlerer", "followers_url": "https://api.github.com/users/adamlerer/followers", "following_url": "https://api.github.com/users/adamlerer/following{/other_user}", "gists_url": "https://api.github.com/users/adamlerer/gists{/gist_id}", "starred_url": "https://api.github.com/users/adamlerer/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/adamlerer/subscriptions", "organizations_url": "https://api.github.com/users/adamlerer/orgs", "repos_url": "https://api.github.com/users/adamlerer/repos", "events_url": "https://api.github.com/users/adamlerer/events{/privacy}", "received_events_url": "https://api.github.com/users/adamlerer/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 2, "created_at": "2017-01-27T05:37:13Z", "updated_at": "2017-02-28T19:20:43Z", "closed_at": "2017-02-28T19:20:43Z", "author_association": "CONTRIBUTOR", "body_html": "<pre><code>import torch\nimport time\n\nt = torch.FloatTensor(1000000000).zero_()\nstart = time.time();\nu = torch.load('foo.pt');\nprint(time.time() - start)\n</code></pre>\n<p>13.5132961273</p>\n<p>The equivalent code in Torch takes ~2.5s.</p>\n<p>perf top says it's in <code>copy_user_enhanced_fast_string</code></p>\n<p>and if I interrupt it the stack trace is</p>\n<pre><code>.../torch/serialization.pyc in load(f, map_location, pickle_module)\n    246         f = open(f, 'rb')\n    247     try:\n--&gt; 248         return _load(f, map_location, pickle_module)\n    249     finally:\n    250         if new_fd:\n\n.../torch/serialization.pyc in _load(f, map_location, pickle_module)\n    315          mkdtemp() as tmpdir:\n    316\n--&gt; 317         tar.extract('storages', path=tmpdir)\n    318         with open(os.path.join(tmpdir, 'storages'), 'rb', 0) as f:\n    319             num_storages = pickle_module.load(f)\n\n/usr/local/gcc-4.9-glibc-2.20/lib/python2.7/tarfile.py in extract(self, member, path)\n   2086\n   2087         try:\n-&gt; 2088             self._extract_member(tarinfo, os.path.join(path, tarinfo.name))\n   2089         except EnvironmentError, e:\n   2090             if self.errorlevel &gt; 0:\n\n/usr/local/gcc-4.9-glibc-2.20/lib/python2.7/tarfile.py in _extract_member(self, tarinfo, targetpath)\n   2162\n   2163         if tarinfo.isreg():\n-&gt; 2164             self.makefile(tarinfo, targetpath)\n   2165         elif tarinfo.isdir():\n   2166             self.makedir(tarinfo, targetpath)\n\n/usr/local/gcc-4.9-glibc-2.20/lib/python2.7/tarfile.py in makefile(self, tarinfo, targetpath)\n   2203         try:\n   2204             with bltn_open(targetpath, \"wb\") as target:\n-&gt; 2205                 copyfileobj(source, target)\n   2206         finally:\n   2207             source.close()\n\n/usr/local/gcc-4.9-glibc-2.20/lib/python2.7/tarfile.py in copyfileobj(src, dst, length)\n    263         return\n    264     if length is None:\n--&gt; 265         shutil.copyfileobj(src, dst)\n    266         return\n    267\n\n/usr/local/gcc-4.9-glibc-2.20/lib/python2.7/shutil.py in copyfileobj(fsrc, fdst, length)\n     50         if not buf:\n     51             break\n---&gt; 52         fdst.write(buf)\n     53\n     54 def _samefile(src, dst):\n</code></pre>", "body_text": "import torch\nimport time\n\nt = torch.FloatTensor(1000000000).zero_()\nstart = time.time();\nu = torch.load('foo.pt');\nprint(time.time() - start)\n\n13.5132961273\nThe equivalent code in Torch takes ~2.5s.\nperf top says it's in copy_user_enhanced_fast_string\nand if I interrupt it the stack trace is\n.../torch/serialization.pyc in load(f, map_location, pickle_module)\n    246         f = open(f, 'rb')\n    247     try:\n--> 248         return _load(f, map_location, pickle_module)\n    249     finally:\n    250         if new_fd:\n\n.../torch/serialization.pyc in _load(f, map_location, pickle_module)\n    315          mkdtemp() as tmpdir:\n    316\n--> 317         tar.extract('storages', path=tmpdir)\n    318         with open(os.path.join(tmpdir, 'storages'), 'rb', 0) as f:\n    319             num_storages = pickle_module.load(f)\n\n/usr/local/gcc-4.9-glibc-2.20/lib/python2.7/tarfile.py in extract(self, member, path)\n   2086\n   2087         try:\n-> 2088             self._extract_member(tarinfo, os.path.join(path, tarinfo.name))\n   2089         except EnvironmentError, e:\n   2090             if self.errorlevel > 0:\n\n/usr/local/gcc-4.9-glibc-2.20/lib/python2.7/tarfile.py in _extract_member(self, tarinfo, targetpath)\n   2162\n   2163         if tarinfo.isreg():\n-> 2164             self.makefile(tarinfo, targetpath)\n   2165         elif tarinfo.isdir():\n   2166             self.makedir(tarinfo, targetpath)\n\n/usr/local/gcc-4.9-glibc-2.20/lib/python2.7/tarfile.py in makefile(self, tarinfo, targetpath)\n   2203         try:\n   2204             with bltn_open(targetpath, \"wb\") as target:\n-> 2205                 copyfileobj(source, target)\n   2206         finally:\n   2207             source.close()\n\n/usr/local/gcc-4.9-glibc-2.20/lib/python2.7/tarfile.py in copyfileobj(src, dst, length)\n    263         return\n    264     if length is None:\n--> 265         shutil.copyfileobj(src, dst)\n    266         return\n    267\n\n/usr/local/gcc-4.9-glibc-2.20/lib/python2.7/shutil.py in copyfileobj(fsrc, fdst, length)\n     50         if not buf:\n     51             break\n---> 52         fdst.write(buf)\n     53\n     54 def _samefile(src, dst):", "body": "```\r\nimport torch\r\nimport time\r\n\r\nt = torch.FloatTensor(1000000000).zero_()\r\nstart = time.time();\r\nu = torch.load('foo.pt');\r\nprint(time.time() - start)\r\n```\r\n13.5132961273\r\n\r\nThe equivalent code in Torch takes ~2.5s.\r\n\r\nperf top says it's in `copy_user_enhanced_fast_string`\r\n\r\nand if I interrupt it the stack trace is\r\n\r\n```\r\n.../torch/serialization.pyc in load(f, map_location, pickle_module)\r\n    246         f = open(f, 'rb')\r\n    247     try:\r\n--> 248         return _load(f, map_location, pickle_module)\r\n    249     finally:\r\n    250         if new_fd:\r\n\r\n.../torch/serialization.pyc in _load(f, map_location, pickle_module)\r\n    315          mkdtemp() as tmpdir:\r\n    316\r\n--> 317         tar.extract('storages', path=tmpdir)\r\n    318         with open(os.path.join(tmpdir, 'storages'), 'rb', 0) as f:\r\n    319             num_storages = pickle_module.load(f)\r\n\r\n/usr/local/gcc-4.9-glibc-2.20/lib/python2.7/tarfile.py in extract(self, member, path)\r\n   2086\r\n   2087         try:\r\n-> 2088             self._extract_member(tarinfo, os.path.join(path, tarinfo.name))\r\n   2089         except EnvironmentError, e:\r\n   2090             if self.errorlevel > 0:\r\n\r\n/usr/local/gcc-4.9-glibc-2.20/lib/python2.7/tarfile.py in _extract_member(self, tarinfo, targetpath)\r\n   2162\r\n   2163         if tarinfo.isreg():\r\n-> 2164             self.makefile(tarinfo, targetpath)\r\n   2165         elif tarinfo.isdir():\r\n   2166             self.makedir(tarinfo, targetpath)\r\n\r\n/usr/local/gcc-4.9-glibc-2.20/lib/python2.7/tarfile.py in makefile(self, tarinfo, targetpath)\r\n   2203         try:\r\n   2204             with bltn_open(targetpath, \"wb\") as target:\r\n-> 2205                 copyfileobj(source, target)\r\n   2206         finally:\r\n   2207             source.close()\r\n\r\n/usr/local/gcc-4.9-glibc-2.20/lib/python2.7/tarfile.py in copyfileobj(src, dst, length)\r\n    263         return\r\n    264     if length is None:\r\n--> 265         shutil.copyfileobj(src, dst)\r\n    266         return\r\n    267\r\n\r\n/usr/local/gcc-4.9-glibc-2.20/lib/python2.7/shutil.py in copyfileobj(fsrc, fdst, length)\r\n     50         if not buf:\r\n     51             break\r\n---> 52         fdst.write(buf)\r\n     53\r\n     54 def _samefile(src, dst):\r\n```"}