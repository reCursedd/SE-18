{"url": "https://api.github.com/repos/pytorch/pytorch/issues/comments/434136656", "html_url": "https://github.com/pytorch/pytorch/issues/12911#issuecomment-434136656", "issue_url": "https://api.github.com/repos/pytorch/pytorch/issues/12911", "id": 434136656, "node_id": "MDEyOklzc3VlQ29tbWVudDQzNDEzNjY1Ng==", "user": {"login": "AceCoooool", "id": 16620320, "node_id": "MDQ6VXNlcjE2NjIwMzIw", "avatar_url": "https://avatars3.githubusercontent.com/u/16620320?v=4", "gravatar_id": "", "url": "https://api.github.com/users/AceCoooool", "html_url": "https://github.com/AceCoooool", "followers_url": "https://api.github.com/users/AceCoooool/followers", "following_url": "https://api.github.com/users/AceCoooool/following{/other_user}", "gists_url": "https://api.github.com/users/AceCoooool/gists{/gist_id}", "starred_url": "https://api.github.com/users/AceCoooool/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/AceCoooool/subscriptions", "organizations_url": "https://api.github.com/users/AceCoooool/orgs", "repos_url": "https://api.github.com/users/AceCoooool/repos", "events_url": "https://api.github.com/users/AceCoooool/events{/privacy}", "received_events_url": "https://api.github.com/users/AceCoooool/received_events", "type": "User", "site_admin": false}, "created_at": "2018-10-30T01:14:38Z", "updated_at": "2018-10-30T01:14:38Z", "author_association": "CONTRIBUTOR", "body_html": "<p>Thank you, goldsborough. It can fix the bug\uff08cmake3.12 works well too\uff09.<br>\nAnd I want to ask another question. \uff08not related to this topic\uff09 \uff5e</p>\n<ol>\n<li>Sometimes, I want to debug <a href=\"https://github.com/facebookresearch/maskrcnn-benchmark/blob/7282f554886b1885357e7e0e73d2b4000c60642b/maskrcnn_benchmark/csrc/cuda/nms.cu#L5\">nms.cu in maskrcnn</a> in c++ code, however <code>#include&lt;THC/THC.h&gt;</code> is error in the libtorch</li>\n<li>In the c++ extension code, whether it's recommended to use <code>at::torch</code> rather than \u201cmanual allocate space\uff08like: <code>  mask_dev = (unsigned long long*) THCudaMalloc(state, boxes_num * col_blocks * sizeof(unsigned long long));</code> \uff09\"</li>\n</ol>", "body_text": "Thank you, goldsborough. It can fix the bug\uff08cmake3.12 works well too\uff09.\nAnd I want to ask another question. \uff08not related to this topic\uff09 \uff5e\n\nSometimes, I want to debug nms.cu in maskrcnn in c++ code, however #include<THC/THC.h> is error in the libtorch\nIn the c++ extension code, whether it's recommended to use at::torch rather than \u201cmanual allocate space\uff08like:   mask_dev = (unsigned long long*) THCudaMalloc(state, boxes_num * col_blocks * sizeof(unsigned long long)); \uff09\"", "body": "Thank you, goldsborough. It can fix the bug\uff08cmake3.12 works well too\uff09. \r\nAnd I want to ask another question. \uff08not related to this topic\uff09 \uff5e \r\n1. Sometimes, I want to debug [nms.cu in maskrcnn](https://github.com/facebookresearch/maskrcnn-benchmark/blob/7282f554886b1885357e7e0e73d2b4000c60642b/maskrcnn_benchmark/csrc/cuda/nms.cu#L5) in c++ code, however `#include<THC/THC.h>` is error in the libtorch \r\n2. In the c++ extension code, whether it's recommended to use `at::torch` rather than \u201cmanual allocate space\uff08like: `  mask_dev = (unsigned long long*) THCudaMalloc(state, boxes_num * col_blocks * sizeof(unsigned long long));` \uff09\""}