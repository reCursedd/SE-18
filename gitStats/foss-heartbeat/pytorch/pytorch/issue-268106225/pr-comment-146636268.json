{"url": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/146636268", "pull_request_review_id": 71607038, "id": 146636268, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE0NjYzNjI2OA==", "diff_hunk": "@@ -30,30 +40,42 @@ __global__ void spatialDepthwiseConvolutionUpdateOutput(\n {\n   const int channelStride = outputHeight * outputWidth;\n   const int batchStride = outputChannels * channelStride;\n+  const int KW_LIMIT = (kSize !=0) ? kSize : kernelWidth;\n+  const int KH_LIMIT = (kSize !=0) ? kSize : kernelHeight;\n+  \n \n   for (IndexType linearIndex = blockIdx.x * blockDim.x + threadIdx.x;\n        linearIndex < totalElements;\n        linearIndex += gridDim.x * blockDim.x) {\n-\n-    const int n = linearIndex / batchStride;\n-    const int c = (linearIndex / channelStride) % outputChannels;\n-    const int h = (linearIndex / outputWidth) % outputHeight;\n-    const int w = linearIndex % outputWidth;\n-\n-    const int inputChannel = c / depthwiseMultiplier;\n-    const int inputChannels = outputChannels / depthwiseMultiplier;\n+    int indtmp1 = linearIndex/outputWidth;\n+    const int w = linearIndex - indtmp1 * outputWidth;\n+    int indtmp2 = indtmp1/outputHeight;\n+    const int h = indtmp1 - indtmp2 * outputHeight;\n+    indtmp1 = indtmp2; \n+    indtmp2 = indtmp1/outputChannels;\n+    const int c = indtmp1 - indtmp2 * outputChannels;\n+    const int n = indtmp2;\n+\n+    int inputChannel = c; \n+    int inputChannels = outputChannels; \n+    if (depthwiseMultiplier !=1) {\n+      inputChannel /= depthwiseMultiplier;\n+      inputChannels /= depthwiseMultiplier;\n+    }\n \n     int weightOffset = c * kernelHeight * kernelWidth;\n \n     AccT value = biasEnabled ? ScalarConvert<T, AccT>::to(bias.data()[c]) : ScalarConvert<int, AccT>::to(0);\n-    for (int kH = 0; kH < kernelHeight; ++kH) {\n-      for (int kW = 0; kW < kernelWidth; ++kW) {\n+    const IndexType offset0 = (n * inputChannels + inputChannel) * inputHeight * inputWidth;\n+#pragma unroll\n+    for (int kH = 0; kH < KH_LIMIT; ++kH) {\n+#pragma unroll", "path": "torch/lib/THCUNN/SpatialDepthwiseConvolution.cu", "position": 72, "original_position": 62, "commit_id": "ea8eddbfb6fdd3ce06dee2ae89e0a7119a4b4ee0", "original_commit_id": "0d806fdf519d90c0e5c6073c70826d4007069779", "user": {"login": "ngimel", "id": 15841449, "node_id": "MDQ6VXNlcjE1ODQxNDQ5", "avatar_url": "https://avatars3.githubusercontent.com/u/15841449?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ngimel", "html_url": "https://github.com/ngimel", "followers_url": "https://api.github.com/users/ngimel/followers", "following_url": "https://api.github.com/users/ngimel/following{/other_user}", "gists_url": "https://api.github.com/users/ngimel/gists{/gist_id}", "starred_url": "https://api.github.com/users/ngimel/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ngimel/subscriptions", "organizations_url": "https://api.github.com/users/ngimel/orgs", "repos_url": "https://api.github.com/users/ngimel/repos", "events_url": "https://api.github.com/users/ngimel/events{/privacy}", "received_events_url": "https://api.github.com/users/ngimel/received_events", "type": "User", "site_admin": false}, "body": "Yes", "created_at": "2017-10-24T17:35:34Z", "updated_at": "2018-11-23T15:35:40Z", "html_url": "https://github.com/pytorch/pytorch/pull/3265#discussion_r146636268", "pull_request_url": "https://api.github.com/repos/pytorch/pytorch/pulls/3265", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/146636268"}, "html": {"href": "https://github.com/pytorch/pytorch/pull/3265#discussion_r146636268"}, "pull_request": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/3265"}}, "body_html": "<p>Yes</p>", "body_text": "Yes", "in_reply_to_id": 146633286}