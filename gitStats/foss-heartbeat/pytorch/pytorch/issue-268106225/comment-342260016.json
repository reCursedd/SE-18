{"url": "https://api.github.com/repos/pytorch/pytorch/issues/comments/342260016", "html_url": "https://github.com/pytorch/pytorch/pull/3265#issuecomment-342260016", "issue_url": "https://api.github.com/repos/pytorch/pytorch/issues/3265", "id": 342260016, "node_id": "MDEyOklzc3VlQ29tbWVudDM0MjI2MDAxNg==", "user": {"login": "ngimel", "id": 15841449, "node_id": "MDQ6VXNlcjE1ODQxNDQ5", "avatar_url": "https://avatars3.githubusercontent.com/u/15841449?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ngimel", "html_url": "https://github.com/ngimel", "followers_url": "https://api.github.com/users/ngimel/followers", "following_url": "https://api.github.com/users/ngimel/following{/other_user}", "gists_url": "https://api.github.com/users/ngimel/gists{/gist_id}", "starred_url": "https://api.github.com/users/ngimel/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ngimel/subscriptions", "organizations_url": "https://api.github.com/users/ngimel/orgs", "repos_url": "https://api.github.com/users/ngimel/repos", "events_url": "https://api.github.com/users/ngimel/events{/privacy}", "received_events_url": "https://api.github.com/users/ngimel/received_events", "type": "User", "site_admin": false}, "created_at": "2017-11-06T19:32:20Z", "updated_at": "2017-11-06T20:54:16Z", "author_association": "CONTRIBUTOR", "body_html": "<p>That's a fair point, though, currently when deciding between cudnn and depthwise-separable kernels the only thing that's checked is that number_of_groups = input_channels, however, when depth_multiplier is large (that is, number of output channels = &lt; large numer &gt; * number of input channels), using cudnn and just dispatching a number of regular convolution kernels might be faster. Are layers like this encountered in practice?</p>", "body_text": "That's a fair point, though, currently when deciding between cudnn and depthwise-separable kernels the only thing that's checked is that number_of_groups = input_channels, however, when depth_multiplier is large (that is, number of output channels = < large numer > * number of input channels), using cudnn and just dispatching a number of regular convolution kernels might be faster. Are layers like this encountered in practice?", "body": "That's a fair point, though, currently when deciding between cudnn and depthwise-separable kernels the only thing that's checked is that number_of_groups = input_channels, however, when depth_multiplier is large (that is, number of output channels = < large numer > * number of input channels), using cudnn and just dispatching a number of regular convolution kernels might be faster. Are layers like this encountered in practice? "}