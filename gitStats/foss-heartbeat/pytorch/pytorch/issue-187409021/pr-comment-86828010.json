{"url": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/86828010", "pull_request_review_id": 7466528, "id": 86828010, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDg2ODI4MDEw", "diff_hunk": "@@ -12,39 +17,41 @@ def _fd_id(fd):\n \n \n def _shm_object_handle(handle):\n-    if len(handle) == 3:\n+    if len(handle) == 3 or len(handle) == 5:\n         return handle[1]\n     else:\n         return _fd_id(handle[0])\n \n \n def _shared_serialize(self, use_fd):\n-    handle, weak_storage = self._share(use_fd)\n+    handle, storage_ref = self._share(use_fd, StorageRef)\n     object_handle = _shm_object_handle(handle)\n-    _shared_cache[object_handle] = weak_storage\n-    self._shared_incref()\n+    _shared_cache[object_handle] = storage_ref\n+    if not self.is_cuda:\n+        self._shared_incref()", "path": "torch/multiprocessing/_storage.py", "position": null, "original_position": 33, "commit_id": "f2c88c328ee29fb70123b30a2c637434382624c9", "original_commit_id": "782b98406e53e23328102307e4f8a0271d9f5231", "user": {"login": "colesbury", "id": 655866, "node_id": "MDQ6VXNlcjY1NTg2Ng==", "avatar_url": "https://avatars1.githubusercontent.com/u/655866?v=4", "gravatar_id": "", "url": "https://api.github.com/users/colesbury", "html_url": "https://github.com/colesbury", "followers_url": "https://api.github.com/users/colesbury/followers", "following_url": "https://api.github.com/users/colesbury/following{/other_user}", "gists_url": "https://api.github.com/users/colesbury/gists{/gist_id}", "starred_url": "https://api.github.com/users/colesbury/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/colesbury/subscriptions", "organizations_url": "https://api.github.com/users/colesbury/orgs", "repos_url": "https://api.github.com/users/colesbury/repos", "events_url": "https://api.github.com/users/colesbury/events{/privacy}", "received_events_url": "https://api.github.com/users/colesbury/received_events", "type": "User", "site_admin": false}, "body": "Oh actually, this doesn't work. The `_shared_incref()` isn't defined on CUDA tensors because it won't compile (they have different storage->allocator types)\n", "created_at": "2016-11-07T17:44:20Z", "updated_at": "2018-11-23T15:31:53Z", "html_url": "https://github.com/pytorch/pytorch/pull/203#discussion_r86828010", "pull_request_url": "https://api.github.com/repos/pytorch/pytorch/pulls/203", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/86828010"}, "html": {"href": "https://github.com/pytorch/pytorch/pull/203#discussion_r86828010"}, "pull_request": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/203"}}, "body_html": "<p>Oh actually, this doesn't work. The <code>_shared_incref()</code> isn't defined on CUDA tensors because it won't compile (they have different storage-&gt;allocator types)</p>", "body_text": "Oh actually, this doesn't work. The _shared_incref() isn't defined on CUDA tensors because it won't compile (they have different storage->allocator types)", "in_reply_to_id": 86693661}