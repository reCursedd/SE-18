{"url": "https://api.github.com/repos/pytorch/pytorch/issues/1990", "repository_url": "https://api.github.com/repos/pytorch/pytorch", "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/1990/labels{/name}", "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/1990/comments", "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/1990/events", "html_url": "https://github.com/pytorch/pytorch/issues/1990", "id": 240897170, "node_id": "MDU6SXNzdWUyNDA4OTcxNzA=", "number": 1990, "title": "[Feature request] Allow exceptions in load_state_dict", "user": {"login": "karandwivedi42", "id": 9624554, "node_id": "MDQ6VXNlcjk2MjQ1NTQ=", "avatar_url": "https://avatars1.githubusercontent.com/u/9624554?v=4", "gravatar_id": "", "url": "https://api.github.com/users/karandwivedi42", "html_url": "https://github.com/karandwivedi42", "followers_url": "https://api.github.com/users/karandwivedi42/followers", "following_url": "https://api.github.com/users/karandwivedi42/following{/other_user}", "gists_url": "https://api.github.com/users/karandwivedi42/gists{/gist_id}", "starred_url": "https://api.github.com/users/karandwivedi42/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/karandwivedi42/subscriptions", "organizations_url": "https://api.github.com/users/karandwivedi42/orgs", "repos_url": "https://api.github.com/users/karandwivedi42/repos", "events_url": "https://api.github.com/users/karandwivedi42/events{/privacy}", "received_events_url": "https://api.github.com/users/karandwivedi42/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 424131849, "node_id": "MDU6TGFiZWw0MjQxMzE4NDk=", "url": "https://api.github.com/repos/pytorch/pytorch/labels/enhancement", "name": "enhancement", "color": "84b6eb", "default": true}, {"id": 443484135, "node_id": "MDU6TGFiZWw0NDM0ODQxMzU=", "url": "https://api.github.com/repos/pytorch/pytorch/labels/high%20priority", "name": "high priority", "color": "F22613", "default": false}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2017-07-06T09:29:29Z", "updated_at": "2017-10-18T13:37:18Z", "closed_at": "2017-10-18T13:37:18Z", "author_association": "CONTRIBUTOR", "body_html": "<p>Currently, <a href=\"https://github.com/pytorch/pytorch/blob/2c038f20748c588c9e98f3d549036237ab280ff7/torch/nn/modules/module.py#L337\"><code>load_state_dict</code></a> works only when the loaded state_dict and the Module's state_dict match exactly.</p>\n<p>Problem: For the purpose of fine-tuning or for any slight change in the network, it is not straightforward to load the base layers, leaving one or two unchanged. Either we have to define the old network, load the state and then modify the network, or essentially rewrite the <code>load_state_dict</code> function.</p>\n<p>Proposed Solution:</p>\n<div class=\"highlight highlight-source-python\"><pre>    <span class=\"pl-k\">def</span> <span class=\"pl-en\">load_state_dict</span>(<span class=\"pl-smi\"><span class=\"pl-smi\">self</span></span>, <span class=\"pl-smi\">state_dict</span>, <span class=\"pl-smi\">ignored_keys</span><span class=\"pl-k\">=</span><span class=\"pl-c1\">None</span>):</pre></div>\n<p>Can I create a PR for the same?</p>", "body_text": "Currently, load_state_dict works only when the loaded state_dict and the Module's state_dict match exactly.\nProblem: For the purpose of fine-tuning or for any slight change in the network, it is not straightforward to load the base layers, leaving one or two unchanged. Either we have to define the old network, load the state and then modify the network, or essentially rewrite the load_state_dict function.\nProposed Solution:\n    def load_state_dict(self, state_dict, ignored_keys=None):\nCan I create a PR for the same?", "body": "Currently, [`load_state_dict`](https://github.com/pytorch/pytorch/blob/2c038f20748c588c9e98f3d549036237ab280ff7/torch/nn/modules/module.py#L337) works only when the loaded state_dict and the Module's state_dict match exactly. \r\n\r\nProblem: For the purpose of fine-tuning or for any slight change in the network, it is not straightforward to load the base layers, leaving one or two unchanged. Either we have to define the old network, load the state and then modify the network, or essentially rewrite the `load_state_dict` function.\r\n\r\nProposed Solution:\r\n\r\n```python\r\n    def load_state_dict(self, state_dict, ignored_keys=None):\r\n```\r\n\r\nCan I create a PR for the same?"}