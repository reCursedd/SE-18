{"url": "https://api.github.com/repos/pytorch/pytorch/issues/comments/354733588", "html_url": "https://github.com/pytorch/pytorch/issues/3775#issuecomment-354733588", "issue_url": "https://api.github.com/repos/pytorch/pytorch/issues/3775", "id": 354733588, "node_id": "MDEyOklzc3VlQ29tbWVudDM1NDczMzU4OA==", "user": {"login": "diggerdu", "id": 5636045, "node_id": "MDQ6VXNlcjU2MzYwNDU=", "avatar_url": "https://avatars2.githubusercontent.com/u/5636045?v=4", "gravatar_id": "", "url": "https://api.github.com/users/diggerdu", "html_url": "https://github.com/diggerdu", "followers_url": "https://api.github.com/users/diggerdu/followers", "following_url": "https://api.github.com/users/diggerdu/following{/other_user}", "gists_url": "https://api.github.com/users/diggerdu/gists{/gist_id}", "starred_url": "https://api.github.com/users/diggerdu/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/diggerdu/subscriptions", "organizations_url": "https://api.github.com/users/diggerdu/orgs", "repos_url": "https://api.github.com/users/diggerdu/repos", "events_url": "https://api.github.com/users/diggerdu/events{/privacy}", "received_events_url": "https://api.github.com/users/diggerdu/received_events", "type": "User", "site_admin": false}, "created_at": "2018-01-02T10:02:53Z", "updated_at": "2018-01-02T10:02:53Z", "author_association": "NONE", "body_html": "<p><a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=1310570\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/soumith\">@soumith</a> but without inverse transformation, which is an important module in google tacotron or other end to end model for audio processing. I have a paper which submitted to ICASSP 2018, we developed a  SOTA learning based model for noise reduction using this code. And a pure python implementation is more flexible and efficient than an unoptimized CUDA version, because we just combine some conv layers.</p>", "body_text": "@soumith but without inverse transformation, which is an important module in google tacotron or other end to end model for audio processing. I have a paper which submitted to ICASSP 2018, we developed a  SOTA learning based model for noise reduction using this code. And a pure python implementation is more flexible and efficient than an unoptimized CUDA version, because we just combine some conv layers.", "body": "@soumith but without inverse transformation, which is an important module in google tacotron or other end to end model for audio processing. I have a paper which submitted to ICASSP 2018, we developed a  SOTA learning based model for noise reduction using this code. And a pure python implementation is more flexible and efficient than an unoptimized CUDA version, because we just combine some conv layers. "}