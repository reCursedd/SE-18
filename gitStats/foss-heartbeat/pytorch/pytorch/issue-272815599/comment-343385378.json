{"url": "https://api.github.com/repos/pytorch/pytorch/issues/comments/343385378", "html_url": "https://github.com/pytorch/pytorch/issues/3619#issuecomment-343385378", "issue_url": "https://api.github.com/repos/pytorch/pytorch/issues/3619", "id": 343385378, "node_id": "MDEyOklzc3VlQ29tbWVudDM0MzM4NTM3OA==", "user": {"login": "MlWoo", "id": 20226293, "node_id": "MDQ6VXNlcjIwMjI2Mjkz", "avatar_url": "https://avatars2.githubusercontent.com/u/20226293?v=4", "gravatar_id": "", "url": "https://api.github.com/users/MlWoo", "html_url": "https://github.com/MlWoo", "followers_url": "https://api.github.com/users/MlWoo/followers", "following_url": "https://api.github.com/users/MlWoo/following{/other_user}", "gists_url": "https://api.github.com/users/MlWoo/gists{/gist_id}", "starred_url": "https://api.github.com/users/MlWoo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/MlWoo/subscriptions", "organizations_url": "https://api.github.com/users/MlWoo/orgs", "repos_url": "https://api.github.com/users/MlWoo/repos", "events_url": "https://api.github.com/users/MlWoo/events{/privacy}", "received_events_url": "https://api.github.com/users/MlWoo/received_events", "type": "User", "site_admin": false}, "created_at": "2017-11-10T06:21:25Z", "updated_at": "2017-11-10T06:21:25Z", "author_association": "CONTRIBUTOR", "body_html": "<p><a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=5652049\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/zou3519\">@zou3519</a> I have modified n_data to 10000001, but the phenomenon cannot reprodeuce in my machine. But my pytorch is based on commit_id <a class=\"commit-link\" data-hovercard-type=\"commit\" data-hovercard-url=\"https://github.com/pytorch/pytorch/commit/6743d5951397eaf0bd454c941af00d2d0fae096d/hovercard\" href=\"https://github.com/pytorch/pytorch/commit/6743d5951397eaf0bd454c941af00d2d0fae096d\"><tt>6743d59</tt></a>. This version does not include a big refactor which is invovled with blas operations. Can you provide more info for us to identify the causes?  <a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=1310570\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/soumith\">@soumith</a> The MKL setting you provided will disable multithread in openmp(MKL also uses openmp).  If you want to speedup opertations furtherly by utilizing multithread in subprocess,  it is maybe not a best solution. But I am not sure that I understand your intention correctly. Openmp fork problems(including MKL) occured to us before,  it is maybe dependent on compilers or some environment virables. But I could not identify the cause because I cannot reproduce the bug.</p>", "body_text": "@zou3519 I have modified n_data to 10000001, but the phenomenon cannot reprodeuce in my machine. But my pytorch is based on commit_id 6743d59. This version does not include a big refactor which is invovled with blas operations. Can you provide more info for us to identify the causes?  @soumith The MKL setting you provided will disable multithread in openmp(MKL also uses openmp).  If you want to speedup opertations furtherly by utilizing multithread in subprocess,  it is maybe not a best solution. But I am not sure that I understand your intention correctly. Openmp fork problems(including MKL) occured to us before,  it is maybe dependent on compilers or some environment virables. But I could not identify the cause because I cannot reproduce the bug.", "body": "@zou3519 I have modified n_data to 10000001, but the phenomenon cannot reprodeuce in my machine. But my pytorch is based on commit_id 6743d5951397eaf0bd454c941af00d2d0fae096d. This version does not include a big refactor which is invovled with blas operations. Can you provide more info for us to identify the causes?  @soumith The MKL setting you provided will disable multithread in openmp(MKL also uses openmp).  If you want to speedup opertations furtherly by utilizing multithread in subprocess,  it is maybe not a best solution. But I am not sure that I understand your intention correctly. Openmp fork problems(including MKL) occured to us before,  it is maybe dependent on compilers or some environment virables. But I could not identify the cause because I cannot reproduce the bug."}