{"url": "https://api.github.com/repos/pytorch/pytorch/issues/3619", "repository_url": "https://api.github.com/repos/pytorch/pytorch", "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/3619/labels{/name}", "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/3619/comments", "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/3619/events", "html_url": "https://github.com/pytorch/pytorch/issues/3619", "id": 272815599, "node_id": "MDU6SXNzdWUyNzI4MTU1OTk=", "number": 3619, "title": "Multiprocessing with gesv hangs", "user": {"login": "zou3519", "id": 5652049, "node_id": "MDQ6VXNlcjU2NTIwNDk=", "avatar_url": "https://avatars3.githubusercontent.com/u/5652049?v=4", "gravatar_id": "", "url": "https://api.github.com/users/zou3519", "html_url": "https://github.com/zou3519", "followers_url": "https://api.github.com/users/zou3519/followers", "following_url": "https://api.github.com/users/zou3519/following{/other_user}", "gists_url": "https://api.github.com/users/zou3519/gists{/gist_id}", "starred_url": "https://api.github.com/users/zou3519/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/zou3519/subscriptions", "organizations_url": "https://api.github.com/users/zou3519/orgs", "repos_url": "https://api.github.com/users/zou3519/repos", "events_url": "https://api.github.com/users/zou3519/events{/privacy}", "received_events_url": "https://api.github.com/users/zou3519/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 9, "created_at": "2017-11-10T04:20:43Z", "updated_at": "2017-11-29T15:33:40Z", "closed_at": null, "author_association": "CONTRIBUTOR", "body_html": "<p>Applying torch.gesv with multiprocessing, after a call to torch.potrf, causes hanging. Reported from the forums: <a href=\"https://discuss.pytorch.org/t/multiprocessing-subprocess-is-not-running-at-blas-or-lapack-command/9727/8\" rel=\"nofollow\">https://discuss.pytorch.org/t/multiprocessing-subprocess-is-not-running-at-blas-or-lapack-command/9727/8</a></p>\n<p>Repro below. Increase <code>n_data</code> until it happens (for me it happened at 1001).</p>\n<pre><code>import torch\nfrom torch.autograd import Variable\nimport torch.optim\n\ndef reproduce():\n\tn_data = 100\n\tndim = 100\n\n\tx_input = Variable(torch.rand(n_data, ndim) * 2 - 1)\n\tx_input.data[0, :] = 0\n\toutput = Variable(torch.randn(n_data, 1))\n\n\tn_init = 1\n\tb = Variable(torch.randn(ndim, n_data))\n\tA = Variable(torch.randn(ndim, ndim))\n\n\tchol = torch.potrf(A.mm(A.t()) + Variable(torch.eye(ndim)))\n\n\tpool = torch.multiprocessing.Pool(n_init)\n\tres = pool.apply_async(torch.gesv, args=(b, A))\n\treturn res.get()\n\n\nif __name__ == '__main__':\n\tprint(reproduce())\n</code></pre>", "body_text": "Applying torch.gesv with multiprocessing, after a call to torch.potrf, causes hanging. Reported from the forums: https://discuss.pytorch.org/t/multiprocessing-subprocess-is-not-running-at-blas-or-lapack-command/9727/8\nRepro below. Increase n_data until it happens (for me it happened at 1001).\nimport torch\nfrom torch.autograd import Variable\nimport torch.optim\n\ndef reproduce():\n\tn_data = 100\n\tndim = 100\n\n\tx_input = Variable(torch.rand(n_data, ndim) * 2 - 1)\n\tx_input.data[0, :] = 0\n\toutput = Variable(torch.randn(n_data, 1))\n\n\tn_init = 1\n\tb = Variable(torch.randn(ndim, n_data))\n\tA = Variable(torch.randn(ndim, ndim))\n\n\tchol = torch.potrf(A.mm(A.t()) + Variable(torch.eye(ndim)))\n\n\tpool = torch.multiprocessing.Pool(n_init)\n\tres = pool.apply_async(torch.gesv, args=(b, A))\n\treturn res.get()\n\n\nif __name__ == '__main__':\n\tprint(reproduce())", "body": "Applying torch.gesv with multiprocessing, after a call to torch.potrf, causes hanging. Reported from the forums: https://discuss.pytorch.org/t/multiprocessing-subprocess-is-not-running-at-blas-or-lapack-command/9727/8\r\n\r\nRepro below. Increase `n_data` until it happens (for me it happened at 1001).\r\n```\r\nimport torch\r\nfrom torch.autograd import Variable\r\nimport torch.optim\r\n\r\ndef reproduce():\r\n\tn_data = 100\r\n\tndim = 100\r\n\r\n\tx_input = Variable(torch.rand(n_data, ndim) * 2 - 1)\r\n\tx_input.data[0, :] = 0\r\n\toutput = Variable(torch.randn(n_data, 1))\r\n\r\n\tn_init = 1\r\n\tb = Variable(torch.randn(ndim, n_data))\r\n\tA = Variable(torch.randn(ndim, ndim))\r\n\r\n\tchol = torch.potrf(A.mm(A.t()) + Variable(torch.eye(ndim)))\r\n\r\n\tpool = torch.multiprocessing.Pool(n_init)\r\n\tres = pool.apply_async(torch.gesv, args=(b, A))\r\n\treturn res.get()\r\n\r\n\r\nif __name__ == '__main__':\r\n\tprint(reproduce())\r\n```"}