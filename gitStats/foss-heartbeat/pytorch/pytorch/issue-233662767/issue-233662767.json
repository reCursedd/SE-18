{"url": "https://api.github.com/repos/pytorch/pytorch/issues/1728", "repository_url": "https://api.github.com/repos/pytorch/pytorch", "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/1728/labels{/name}", "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/1728/comments", "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/1728/events", "html_url": "https://github.com/pytorch/pytorch/issues/1728", "id": 233662767, "node_id": "MDU6SXNzdWUyMzM2NjI3Njc=", "number": 1728, "title": "The 'defined_if' field in PyTorch's cwrap declaration couples the declarations to TH(C) library implementation details", "user": {"login": "killeent", "id": 4529377, "node_id": "MDQ6VXNlcjQ1MjkzNzc=", "avatar_url": "https://avatars1.githubusercontent.com/u/4529377?v=4", "gravatar_id": "", "url": "https://api.github.com/users/killeent", "html_url": "https://github.com/killeent", "followers_url": "https://api.github.com/users/killeent/followers", "following_url": "https://api.github.com/users/killeent/following{/other_user}", "gists_url": "https://api.github.com/users/killeent/gists{/gist_id}", "starred_url": "https://api.github.com/users/killeent/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/killeent/subscriptions", "organizations_url": "https://api.github.com/users/killeent/orgs", "repos_url": "https://api.github.com/users/killeent/repos", "events_url": "https://api.github.com/users/killeent/events{/privacy}", "received_events_url": "https://api.github.com/users/killeent/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "open", "locked": false, "assignee": {"login": "killeent", "id": 4529377, "node_id": "MDQ6VXNlcjQ1MjkzNzc=", "avatar_url": "https://avatars1.githubusercontent.com/u/4529377?v=4", "gravatar_id": "", "url": "https://api.github.com/users/killeent", "html_url": "https://github.com/killeent", "followers_url": "https://api.github.com/users/killeent/followers", "following_url": "https://api.github.com/users/killeent/following{/other_user}", "gists_url": "https://api.github.com/users/killeent/gists{/gist_id}", "starred_url": "https://api.github.com/users/killeent/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/killeent/subscriptions", "organizations_url": "https://api.github.com/users/killeent/orgs", "repos_url": "https://api.github.com/users/killeent/repos", "events_url": "https://api.github.com/users/killeent/events{/privacy}", "received_events_url": "https://api.github.com/users/killeent/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "killeent", "id": 4529377, "node_id": "MDQ6VXNlcjQ1MjkzNzc=", "avatar_url": "https://avatars1.githubusercontent.com/u/4529377?v=4", "gravatar_id": "", "url": "https://api.github.com/users/killeent", "html_url": "https://github.com/killeent", "followers_url": "https://api.github.com/users/killeent/followers", "following_url": "https://api.github.com/users/killeent/following{/other_user}", "gists_url": "https://api.github.com/users/killeent/gists{/gist_id}", "starred_url": "https://api.github.com/users/killeent/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/killeent/subscriptions", "organizations_url": "https://api.github.com/users/killeent/orgs", "repos_url": "https://api.github.com/users/killeent/repos", "events_url": "https://api.github.com/users/killeent/events{/privacy}", "received_events_url": "https://api.github.com/users/killeent/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 1, "created_at": "2017-06-05T17:55:40Z", "updated_at": "2017-06-29T20:52:24Z", "closed_at": null, "author_association": "CONTRIBUTOR", "body_html": "<p><a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=370202\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/zdevito\">@zdevito</a> and I are working on re-using the PyTorch cwrap declarations in the Tensor Lib. Strings such as:</p>\n<pre><code>defined_if: defined(TH_REAL_IS_FLOAT) || defined(TH_REAL_IS_DOUBLE) || CUDA_FLOAT || CUDA_HALF || CUDA_DOUBLE\n</code></pre>\n<p>in the cwrap are necessary because of the way PyTorch generates code via macros/includes. However, this is an implementation detail. Really, what the code is saying is that the method should be supported for all floating point types across CPU/GPU.</p>\n<p>This issue will track a conversion to cwrap declarations that separate which types/devices (and eventually distributed, sparse) support which methods.</p>\n<ul class=\"contains-task-list\">\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\" checked=\"\"> Add additional declaration fields for 'type', 'device', etc. that mimic the defined_if field, for use in the TensorLib</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\" checked=\"\"> Modify the plugin engine to translate these fields to the same defined_if strings, and remove the defined_if code for types and devices</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\"> Extend to sparse, distributed</li>\n</ul>", "body_text": "@zdevito and I are working on re-using the PyTorch cwrap declarations in the Tensor Lib. Strings such as:\ndefined_if: defined(TH_REAL_IS_FLOAT) || defined(TH_REAL_IS_DOUBLE) || CUDA_FLOAT || CUDA_HALF || CUDA_DOUBLE\n\nin the cwrap are necessary because of the way PyTorch generates code via macros/includes. However, this is an implementation detail. Really, what the code is saying is that the method should be supported for all floating point types across CPU/GPU.\nThis issue will track a conversion to cwrap declarations that separate which types/devices (and eventually distributed, sparse) support which methods.\n\n Add additional declaration fields for 'type', 'device', etc. that mimic the defined_if field, for use in the TensorLib\n Modify the plugin engine to translate these fields to the same defined_if strings, and remove the defined_if code for types and devices\n Extend to sparse, distributed", "body": "@zdevito and I are working on re-using the PyTorch cwrap declarations in the Tensor Lib. Strings such as:\r\n\r\n```\r\ndefined_if: defined(TH_REAL_IS_FLOAT) || defined(TH_REAL_IS_DOUBLE) || CUDA_FLOAT || CUDA_HALF || CUDA_DOUBLE\r\n```\r\n\r\nin the cwrap are necessary because of the way PyTorch generates code via macros/includes. However, this is an implementation detail. Really, what the code is saying is that the method should be supported for all floating point types across CPU/GPU.\r\n\r\nThis issue will track a conversion to cwrap declarations that separate which types/devices (and eventually distributed, sparse) support which methods.\r\n\r\n- [x] Add additional declaration fields for 'type', 'device', etc. that mimic the defined_if field, for use in the TensorLib\r\n- [x] Modify the plugin engine to translate these fields to the same defined_if strings, and remove the defined_if code for types and devices\r\n- [ ] Extend to sparse, distributed"}