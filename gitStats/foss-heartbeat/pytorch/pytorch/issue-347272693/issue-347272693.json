{"url": "https://api.github.com/repos/pytorch/pytorch/issues/10198", "repository_url": "https://api.github.com/repos/pytorch/pytorch", "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/10198/labels{/name}", "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/10198/comments", "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/10198/events", "html_url": "https://github.com/pytorch/pytorch/pull/10198", "id": 347272693, "node_id": "MDExOlB1bGxSZXF1ZXN0MjA1OTM1MzQ2", "number": 10198, "title": "Schema-based creation of graph nodes", "user": {"login": "zdevito", "id": 370202, "node_id": "MDQ6VXNlcjM3MDIwMg==", "avatar_url": "https://avatars0.githubusercontent.com/u/370202?v=4", "gravatar_id": "", "url": "https://api.github.com/users/zdevito", "html_url": "https://github.com/zdevito", "followers_url": "https://api.github.com/users/zdevito/followers", "following_url": "https://api.github.com/users/zdevito/following{/other_user}", "gists_url": "https://api.github.com/users/zdevito/gists{/gist_id}", "starred_url": "https://api.github.com/users/zdevito/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/zdevito/subscriptions", "organizations_url": "https://api.github.com/users/zdevito/orgs", "repos_url": "https://api.github.com/users/zdevito/repos", "events_url": "https://api.github.com/users/zdevito/events{/privacy}", "received_events_url": "https://api.github.com/users/zdevito/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 679953983, "node_id": "MDU6TGFiZWw2Nzk5NTM5ODM=", "url": "https://api.github.com/repos/pytorch/pytorch/labels/jit", "name": "jit", "color": "c5def5", "default": false}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-08-03T06:18:17Z", "updated_at": "2018-11-23T15:49:11Z", "closed_at": "2018-08-14T17:26:56Z", "author_association": "CONTRIBUTOR", "pull_request": {"url": "https://api.github.com/repos/pytorch/pytorch/pulls/10198", "html_url": "https://github.com/pytorch/pytorch/pull/10198", "diff_url": "https://github.com/pytorch/pytorch/pull/10198.diff", "patch_url": "https://github.com/pytorch/pytorch/pull/10198.patch"}, "body_html": "<p>This commit adds the ability to insert a node with inputs, using the schema to check the inputs are valid types, fill in any default values, and perform standard implicit conversions. Since it is schema based, it will discover and use the right overload.<br>\nConstructors to <code>NamedValue</code> enable it to be constructed using <code>IValue</code> constants so it is possible to use constant values in the input list as well:</p>\n<pre><code>g.insert(aten::add, {v, 3});\n</code></pre>\n<p>Keyword arguments are also supported:</p>\n<pre><code>g.insert(aten::add, {v}, {{\"other\", t}, {\"scalar\", 1}});\n</code></pre>", "body_text": "This commit adds the ability to insert a node with inputs, using the schema to check the inputs are valid types, fill in any default values, and perform standard implicit conversions. Since it is schema based, it will discover and use the right overload.\nConstructors to NamedValue enable it to be constructed using IValue constants so it is possible to use constant values in the input list as well:\ng.insert(aten::add, {v, 3});\n\nKeyword arguments are also supported:\ng.insert(aten::add, {v}, {{\"other\", t}, {\"scalar\", 1}});", "body": "This commit adds the ability to insert a node with inputs, using the schema to check the inputs are valid types, fill in any default values, and perform standard implicit conversions. Since it is schema based, it will discover and use the right overload. \r\nConstructors to `NamedValue` enable it to be constructed using `IValue` constants so it is possible to use constant values in the input list as well:\r\n\r\n```\r\ng.insert(aten::add, {v, 3});\r\n```\r\n \r\nKeyword arguments are also supported:\r\n\r\n```\r\ng.insert(aten::add, {v}, {{\"other\", t}, {\"scalar\", 1}});\r\n```\r\n"}