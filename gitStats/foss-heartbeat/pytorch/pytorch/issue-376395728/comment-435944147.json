{"url": "https://api.github.com/repos/pytorch/pytorch/issues/comments/435944147", "html_url": "https://github.com/pytorch/pytorch/issues/13448#issuecomment-435944147", "issue_url": "https://api.github.com/repos/pytorch/pytorch/issues/13448", "id": 435944147, "node_id": "MDEyOklzc3VlQ29tbWVudDQzNTk0NDE0Nw==", "user": {"login": "colesbury", "id": 655866, "node_id": "MDQ6VXNlcjY1NTg2Ng==", "avatar_url": "https://avatars1.githubusercontent.com/u/655866?v=4", "gravatar_id": "", "url": "https://api.github.com/users/colesbury", "html_url": "https://github.com/colesbury", "followers_url": "https://api.github.com/users/colesbury/followers", "following_url": "https://api.github.com/users/colesbury/following{/other_user}", "gists_url": "https://api.github.com/users/colesbury/gists{/gist_id}", "starred_url": "https://api.github.com/users/colesbury/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/colesbury/subscriptions", "organizations_url": "https://api.github.com/users/colesbury/orgs", "repos_url": "https://api.github.com/users/colesbury/repos", "events_url": "https://api.github.com/users/colesbury/events{/privacy}", "received_events_url": "https://api.github.com/users/colesbury/received_events", "type": "User", "site_admin": false}, "created_at": "2018-11-05T16:41:21Z", "updated_at": "2018-11-05T16:41:21Z", "author_association": "MEMBER", "body_html": "<p>That makes sense. I think that's how the Sleef implementation propagates NaNs.</p>\n<p>I was thinking about this a bit more on Friday and I'm a bit concerned that exp256_ps from avx_mathfun.h isn't great. The implementation from Sleef is superior in most ways: more precise, handles the edge cases properly, and I think it's faster.</p>\n<p>Although we link against sleef, we're not using its implementation of exp() because it's not available in a header, so we would incur the full cost of a non-inlineable function call.</p>\n<p>We could port the sleef implementation for exp. I tried this and it's mostly mechanical. Of course, it would be better if the sleef implementation were available in a way that could be inlined into call sites.</p>\n<p>sleef scalar and vector implementations:</p>\n<p><a href=\"https://github.com/shibatch/sleef/blob/master/src/libm/sleefsp.c#L1109-L1129\">https://github.com/shibatch/sleef/blob/master/src/libm/sleefsp.c#L1109-L1129</a><br>\n<a href=\"https://github.com/shibatch/sleef/blob/master/src/libm/sleefsimdsp.c#L1705-L1727\">https://github.com/shibatch/sleef/blob/master/src/libm/sleefsimdsp.c#L1705-L1727</a></p>\n<p>port (incomplete: requires AVX)</p>\n<p><a href=\"https://gist.github.com/colesbury/ea25e51bd54ccac17ed8811a18303ae2\">https://gist.github.com/colesbury/ea25e51bd54ccac17ed8811a18303ae2</a></p>", "body_text": "That makes sense. I think that's how the Sleef implementation propagates NaNs.\nI was thinking about this a bit more on Friday and I'm a bit concerned that exp256_ps from avx_mathfun.h isn't great. The implementation from Sleef is superior in most ways: more precise, handles the edge cases properly, and I think it's faster.\nAlthough we link against sleef, we're not using its implementation of exp() because it's not available in a header, so we would incur the full cost of a non-inlineable function call.\nWe could port the sleef implementation for exp. I tried this and it's mostly mechanical. Of course, it would be better if the sleef implementation were available in a way that could be inlined into call sites.\nsleef scalar and vector implementations:\nhttps://github.com/shibatch/sleef/blob/master/src/libm/sleefsp.c#L1109-L1129\nhttps://github.com/shibatch/sleef/blob/master/src/libm/sleefsimdsp.c#L1705-L1727\nport (incomplete: requires AVX)\nhttps://gist.github.com/colesbury/ea25e51bd54ccac17ed8811a18303ae2", "body": "That makes sense. I think that's how the Sleef implementation propagates NaNs.\r\n\r\nI was thinking about this a bit more on Friday and I'm a bit concerned that exp256_ps from avx_mathfun.h isn't great. The implementation from Sleef is superior in most ways: more precise, handles the edge cases properly, and I think it's faster.\r\n\r\nAlthough we link against sleef, we're not using its implementation of exp() because it's not available in a header, so we would incur the full cost of a non-inlineable function call.\r\n\r\nWe could port the sleef implementation for exp. I tried this and it's mostly mechanical. Of course, it would be better if the sleef implementation were available in a way that could be inlined into call sites.\r\n\r\nsleef scalar and vector implementations:\r\n\r\nhttps://github.com/shibatch/sleef/blob/master/src/libm/sleefsp.c#L1109-L1129\r\nhttps://github.com/shibatch/sleef/blob/master/src/libm/sleefsimdsp.c#L1705-L1727\r\n\r\nport (incomplete: requires AVX)\r\n\r\nhttps://gist.github.com/colesbury/ea25e51bd54ccac17ed8811a18303ae2"}