{"url": "https://api.github.com/repos/pytorch/pytorch/issues/3556", "repository_url": "https://api.github.com/repos/pytorch/pytorch", "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/3556/labels{/name}", "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/3556/comments", "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/3556/events", "html_url": "https://github.com/pytorch/pytorch/issues/3556", "id": 272024539, "node_id": "MDU6SXNzdWUyNzIwMjQ1Mzk=", "number": 3556, "title": "CrossEntropyLoss for 3D and higher", "user": {"login": "wadimkehl", "id": 11465414, "node_id": "MDQ6VXNlcjExNDY1NDE0", "avatar_url": "https://avatars1.githubusercontent.com/u/11465414?v=4", "gravatar_id": "", "url": "https://api.github.com/users/wadimkehl", "html_url": "https://github.com/wadimkehl", "followers_url": "https://api.github.com/users/wadimkehl/followers", "following_url": "https://api.github.com/users/wadimkehl/following{/other_user}", "gists_url": "https://api.github.com/users/wadimkehl/gists{/gist_id}", "starred_url": "https://api.github.com/users/wadimkehl/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/wadimkehl/subscriptions", "organizations_url": "https://api.github.com/users/wadimkehl/orgs", "repos_url": "https://api.github.com/users/wadimkehl/repos", "events_url": "https://api.github.com/users/wadimkehl/events{/privacy}", "received_events_url": "https://api.github.com/users/wadimkehl/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": {"login": "SsnL", "id": 5674597, "node_id": "MDQ6VXNlcjU2NzQ1OTc=", "avatar_url": "https://avatars2.githubusercontent.com/u/5674597?v=4", "gravatar_id": "", "url": "https://api.github.com/users/SsnL", "html_url": "https://github.com/SsnL", "followers_url": "https://api.github.com/users/SsnL/followers", "following_url": "https://api.github.com/users/SsnL/following{/other_user}", "gists_url": "https://api.github.com/users/SsnL/gists{/gist_id}", "starred_url": "https://api.github.com/users/SsnL/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/SsnL/subscriptions", "organizations_url": "https://api.github.com/users/SsnL/orgs", "repos_url": "https://api.github.com/users/SsnL/repos", "events_url": "https://api.github.com/users/SsnL/events{/privacy}", "received_events_url": "https://api.github.com/users/SsnL/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "SsnL", "id": 5674597, "node_id": "MDQ6VXNlcjU2NzQ1OTc=", "avatar_url": "https://avatars2.githubusercontent.com/u/5674597?v=4", "gravatar_id": "", "url": "https://api.github.com/users/SsnL", "html_url": "https://github.com/SsnL", "followers_url": "https://api.github.com/users/SsnL/followers", "following_url": "https://api.github.com/users/SsnL/following{/other_user}", "gists_url": "https://api.github.com/users/SsnL/gists{/gist_id}", "starred_url": "https://api.github.com/users/SsnL/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/SsnL/subscriptions", "organizations_url": "https://api.github.com/users/SsnL/orgs", "repos_url": "https://api.github.com/users/SsnL/repos", "events_url": "https://api.github.com/users/SsnL/events{/privacy}", "received_events_url": "https://api.github.com/users/SsnL/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 6, "created_at": "2017-11-07T23:38:29Z", "updated_at": "2018-05-12T06:52:20Z", "closed_at": "2018-01-12T20:04:17Z", "author_association": "NONE", "body_html": "<p>Going hand-in-hand with <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load issue title\" data-id=\"214876554\" data-permission-text=\"Issue title is private\" data-url=\"https://github.com/pytorch/pytorch/issues/1020\" data-hovercard-type=\"issue\" data-hovercard-url=\"/pytorch/pytorch/issues/1020/hovercard\" href=\"https://github.com/pytorch/pytorch/issues/1020\">#1020</a> and <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load issue title\" data-id=\"221749508\" data-permission-text=\"Issue title is private\" data-url=\"https://github.com/pytorch/pytorch/issues/1260\" data-hovercard-type=\"issue\" data-hovercard-url=\"/pytorch/pytorch/issues/1260/hovercard\" href=\"https://github.com/pytorch/pytorch/issues/1260\">#1260</a> it would be nice to have the same multi-dim behavior for the CrossEntropyLoss as is now for softmax. Similar to <a href=\"https://www.tensorflow.org/api_docs/python/tf/nn/sparse_softmax_cross_entropy_with_logits\" rel=\"nofollow\">https://www.tensorflow.org/api_docs/python/tf/nn/sparse_softmax_cross_entropy_with_logits</a><br>\nwhere the loss is is evaluated along the last provided dimension, i.e.</p>\n<pre><code>labels: shape [d_0, d_1, ..., d_{r-1}]\nlogits: shape [d_0, d_1, ..., d_{r-1}, num_classes]\n</code></pre>\n<p>At the moment one has to reshape into 2D before and back again after the operation.<br>\nIt would not require a signature change and would not break current code that use 2D input into the loss.<br>\nAny thoughts?</p>", "body_text": "Going hand-in-hand with #1020 and #1260 it would be nice to have the same multi-dim behavior for the CrossEntropyLoss as is now for softmax. Similar to https://www.tensorflow.org/api_docs/python/tf/nn/sparse_softmax_cross_entropy_with_logits\nwhere the loss is is evaluated along the last provided dimension, i.e.\nlabels: shape [d_0, d_1, ..., d_{r-1}]\nlogits: shape [d_0, d_1, ..., d_{r-1}, num_classes]\n\nAt the moment one has to reshape into 2D before and back again after the operation.\nIt would not require a signature change and would not break current code that use 2D input into the loss.\nAny thoughts?", "body": "Going hand-in-hand with #1020 and #1260 it would be nice to have the same multi-dim behavior for the CrossEntropyLoss as is now for softmax. Similar to https://www.tensorflow.org/api_docs/python/tf/nn/sparse_softmax_cross_entropy_with_logits\r\nwhere the loss is is evaluated along the last provided dimension, i.e.\r\n```\r\nlabels: shape [d_0, d_1, ..., d_{r-1}]\r\nlogits: shape [d_0, d_1, ..., d_{r-1}, num_classes]\r\n```\r\nAt the moment one has to reshape into 2D before and back again after the operation. \r\nIt would not require a signature change and would not break current code that use 2D input into the loss.\r\nAny thoughts? "}