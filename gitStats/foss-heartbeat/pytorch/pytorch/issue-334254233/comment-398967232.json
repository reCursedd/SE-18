{"url": "https://api.github.com/repos/pytorch/pytorch/issues/comments/398967232", "html_url": "https://github.com/pytorch/pytorch/issues/8712#issuecomment-398967232", "issue_url": "https://api.github.com/repos/pytorch/pytorch/issues/8712", "id": 398967232, "node_id": "MDEyOklzc3VlQ29tbWVudDM5ODk2NzIzMg==", "user": {"login": "zou3519", "id": 5652049, "node_id": "MDQ6VXNlcjU2NTIwNDk=", "avatar_url": "https://avatars3.githubusercontent.com/u/5652049?v=4", "gravatar_id": "", "url": "https://api.github.com/users/zou3519", "html_url": "https://github.com/zou3519", "followers_url": "https://api.github.com/users/zou3519/followers", "following_url": "https://api.github.com/users/zou3519/following{/other_user}", "gists_url": "https://api.github.com/users/zou3519/gists{/gist_id}", "starred_url": "https://api.github.com/users/zou3519/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/zou3519/subscriptions", "organizations_url": "https://api.github.com/users/zou3519/orgs", "repos_url": "https://api.github.com/users/zou3519/repos", "events_url": "https://api.github.com/users/zou3519/events{/privacy}", "received_events_url": "https://api.github.com/users/zou3519/received_events", "type": "User", "site_admin": false}, "created_at": "2018-06-21T03:46:28Z", "updated_at": "2018-06-21T03:47:34Z", "author_association": "CONTRIBUTOR", "body_html": "<p><a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=1310570\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/soumith\">@soumith</a> I think there were two stack traces in the txt files. The first one is from tbb (could be conflicting symbols, but tbb does this thing where it re-catches an exception... when debugging in gdb I had to continue past the first exception). The second stack trace is</p>\n<pre><code>\nProgram received signal SIGSEGV, Segmentation fault.\n0x00007fffb53ff6c9 in pybind11::detail::make_new_python_type (rec=...) at /misc/vlgscratch4/BowmanGroup/awang/software/miniconda3/envs/mtl-sent-rep/include/python3.6m/pybind11/detail/class.h:568\n568\t    auto heap_type = (PyHeapTypeObject *) metaclass-&gt;tp_alloc(metaclass, 0);\n#0  0x00007fffb53ff6c9 in pybind11::detail::make_new_python_type (rec=...) at /misc/vlgscratch4/BowmanGroup/awang/software/miniconda3/envs/mtl-sent-rep/include/python3.6m/pybind11/detail/class.h:568\n#1  0x00007fffb5409dd1 in pybind11::detail::generic_type::initialize (this=this@entry=0x7fffffff9e70, rec=...)\n    at /misc/vlgscratch4/BowmanGroup/awang/software/miniconda3/envs/mtl-sent-rep/include/python3.6m/pybind11/pybind11.h:895\n#2  0x00007fffb53f2232 in class_&lt;&gt; (name=0x7fffb5433128 \"args\", scope=..., this=0x7fffffff9e70)\n    at /misc/vlgscratch4/BowmanGroup/awang/software/miniconda3/envs/mtl-sent-rep/include/python3.6m/pybind11/pybind11.h:1065\n#3  pybind11_init_fasttext_pybind (m=...) at python/fastText/pybind/fasttext_pybind.cc:51\n#4  0x00007fffb53f5d0f in PyInit_fasttext_pybind () at python/fastText/pybind/fasttext_pybind.cc:49\n#5  0x0000555555769e25 in _PyImport_LoadDynamicModuleWithSpec ()\n#6  0x000055555576a025 in _imp_create_dynamic ()\n#7  0x0000555555666731 in PyCFunction_Call ()\n#8  0x000055555571a457 in _PyEval_EvalFrameDefault ()\n#9  0x00005555556ebf06 in _PyEval_EvalCodeWithName ()\n#10 0x00005555556ecf4f in fast_function ()\n#11 0x00005555556f2ba5 in call_function ()\n#12 0x00005555557154ba in _PyEval_EvalFrameDefault ()\n#13 0x00005555556ecd0b in fast_function ()\n#14 0x00005555556f2ba5 in call_function ()\n#15 0x00005555557154ba in _PyEval_EvalFrameDefault ()\n#16 0x00005555556ecd0b in fast_function ()\n#17 0x00005555556f2ba5 in call_function ()\n#18 0x00005555557154ba in _PyEval_EvalFrameDefault ()\n#19 0x00005555556ecd0b in fast_function ()\n#20 0x00005555556f2ba5 in call_function ()\n#21 0x00005555557154ba in _PyEval_EvalFrameDefault ()\n#22 0x00005555556ecd0b in fast_function ()\n#23 0x00005555556f2ba5 in call_function ()\n#24 0x00005555557154ba in _PyEval_EvalFrameDefault ()\n#25 0x00005555556ed35b in _PyFunction_FastCallDict ()\n#26 0x0000555555663b1f in _PyObject_FastCallDict ()\n#27 0x00005555556a7960 in _PyObject_CallMethodIdObjArgs ()\n#28 0x000055555565a660 in PyImport_ImportModuleLevelObject ()\n#29 0x0000555555717be0 in _PyEval_EvalFrameDefault ()\n#30 0x00005555556eda39 in PyEval_EvalCodeEx ()\n#31 0x00005555556ee7cc in PyEval_EvalCode ()\n#32 0x0000555555712dcd in builtin_exec ()\n#33 0x0000555555666731 in PyCFunction_Call ()\n#34 0x000055555571a457 in _PyEval_EvalFrameDefault ()\n#35 0x00005555556ebf06 in _PyEval_EvalCodeWithName ()\n#36 0x00005555556ecf4f in fast_function ()\n#37 0x00005555556f2ba5 in call_function ()\n#38 0x00005555557154ba in _PyEval_EvalFrameDefault ()\n#39 0x00005555556ecd0b in fast_function ()\n#40 0x00005555556f2ba5 in call_function ()\n#41 0x00005555557154ba in _PyEval_EvalFrameDefault ()\n#42 0x00005555556ecd0b in fast_function ()\n#43 0x00005555556f2ba5 in call_function ()\n#44 0x00005555557154ba in _PyEval_EvalFrameDefault ()\n#45 0x00005555556ecd0b in fast_function ()\n#46 0x00005555556f2ba5 in call_function ()\n#47 0x00005555557154ba in _PyEval_EvalFrameDefault ()\n#48 0x00005555556ed35b in _PyFunction_FastCallDict ()\n#49 0x0000555555663b1f in _PyObject_FastCallDict ()\n#50 0x00005555556a7960 in _PyObject_CallMethodIdObjArgs ()\n#51 0x000055555565a660 in PyImport_ImportModuleLevelObject ()\n#52 0x0000555555717be0 in _PyEval_EvalFrameDefault ()\n#53 0x00005555556eda39 in PyEval_EvalCodeEx ()\n#54 0x00005555556ee7cc in PyEval_EvalCode ()\n#55 0x0000555555712dcd in builtin_exec ()\n#56 0x0000555555666731 in PyCFunction_Call ()\n#57 0x000055555571a457 in _PyEval_EvalFrameDefault ()\n#58 0x00005555556ebf06 in _PyEval_EvalCodeWithName ()\n#59 0x00005555556ecf4f in fast_function ()\n#60 0x00005555556f2ba5 in call_function ()\n#61 0x00005555557154ba in _PyEval_EvalFrameDefault ()\n#62 0x00005555556ecd0b in fast_function ()\n#63 0x00005555556f2ba5 in call_function ()\n#64 0x00005555557154ba in _PyEval_EvalFrameDefault ()\n#65 0x00005555556ecd0b in fast_function ()\n#66 0x00005555556f2ba5 in call_function ()\n#67 0x00005555557154ba in _PyEval_EvalFrameDefault ()\n#68 0x00005555556ecd0b in fast_function ()\n#69 0x00005555556f2ba5 in call_function ()\n#70 0x00005555557154ba in _PyEval_EvalFrameDefault ()\n#71 0x00005555556ed35b in _PyFunction_FastCallDict ()\n#72 0x0000555555663b1f in _PyObject_FastCallDict ()\n#73 0x00005555556a7960 in _PyObject_CallMethodIdObjArgs ()\n#74 0x000055555565a660 in PyImport_ImportModuleLevelObject ()\n#75 0x0000555555717be0 in _PyEval_EvalFrameDefault ()\n#76 0x00005555556eda39 in PyEval_EvalCodeEx ()\n#77 0x00005555556ee7cc in PyEval_EvalCode ()\n#78 0x0000555555768ee4 in run_mod ()\n#79 0x00005555557692e1 in PyRun_FileExFlags ()\n#80 0x00005555557694e4 in PyRun_SimpleFileExFlags ()\n#81 0x000055555576cfdf in Py_Main ()\n#82 0x0000555555634bfe in main ()\n</code></pre>\n<p>which looks like a pybind11 problem. Do you know if this is the pybind11 namespacing problem that is fixed?</p>\n<p>At any rate, <a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=5520155\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/W4ngatang\">@W4ngatang</a>, please try building from source and see how it goes.</p>", "body_text": "@soumith I think there were two stack traces in the txt files. The first one is from tbb (could be conflicting symbols, but tbb does this thing where it re-catches an exception... when debugging in gdb I had to continue past the first exception). The second stack trace is\n\nProgram received signal SIGSEGV, Segmentation fault.\n0x00007fffb53ff6c9 in pybind11::detail::make_new_python_type (rec=...) at /misc/vlgscratch4/BowmanGroup/awang/software/miniconda3/envs/mtl-sent-rep/include/python3.6m/pybind11/detail/class.h:568\n568\t    auto heap_type = (PyHeapTypeObject *) metaclass->tp_alloc(metaclass, 0);\n#0  0x00007fffb53ff6c9 in pybind11::detail::make_new_python_type (rec=...) at /misc/vlgscratch4/BowmanGroup/awang/software/miniconda3/envs/mtl-sent-rep/include/python3.6m/pybind11/detail/class.h:568\n#1  0x00007fffb5409dd1 in pybind11::detail::generic_type::initialize (this=this@entry=0x7fffffff9e70, rec=...)\n    at /misc/vlgscratch4/BowmanGroup/awang/software/miniconda3/envs/mtl-sent-rep/include/python3.6m/pybind11/pybind11.h:895\n#2  0x00007fffb53f2232 in class_<> (name=0x7fffb5433128 \"args\", scope=..., this=0x7fffffff9e70)\n    at /misc/vlgscratch4/BowmanGroup/awang/software/miniconda3/envs/mtl-sent-rep/include/python3.6m/pybind11/pybind11.h:1065\n#3  pybind11_init_fasttext_pybind (m=...) at python/fastText/pybind/fasttext_pybind.cc:51\n#4  0x00007fffb53f5d0f in PyInit_fasttext_pybind () at python/fastText/pybind/fasttext_pybind.cc:49\n#5  0x0000555555769e25 in _PyImport_LoadDynamicModuleWithSpec ()\n#6  0x000055555576a025 in _imp_create_dynamic ()\n#7  0x0000555555666731 in PyCFunction_Call ()\n#8  0x000055555571a457 in _PyEval_EvalFrameDefault ()\n#9  0x00005555556ebf06 in _PyEval_EvalCodeWithName ()\n#10 0x00005555556ecf4f in fast_function ()\n#11 0x00005555556f2ba5 in call_function ()\n#12 0x00005555557154ba in _PyEval_EvalFrameDefault ()\n#13 0x00005555556ecd0b in fast_function ()\n#14 0x00005555556f2ba5 in call_function ()\n#15 0x00005555557154ba in _PyEval_EvalFrameDefault ()\n#16 0x00005555556ecd0b in fast_function ()\n#17 0x00005555556f2ba5 in call_function ()\n#18 0x00005555557154ba in _PyEval_EvalFrameDefault ()\n#19 0x00005555556ecd0b in fast_function ()\n#20 0x00005555556f2ba5 in call_function ()\n#21 0x00005555557154ba in _PyEval_EvalFrameDefault ()\n#22 0x00005555556ecd0b in fast_function ()\n#23 0x00005555556f2ba5 in call_function ()\n#24 0x00005555557154ba in _PyEval_EvalFrameDefault ()\n#25 0x00005555556ed35b in _PyFunction_FastCallDict ()\n#26 0x0000555555663b1f in _PyObject_FastCallDict ()\n#27 0x00005555556a7960 in _PyObject_CallMethodIdObjArgs ()\n#28 0x000055555565a660 in PyImport_ImportModuleLevelObject ()\n#29 0x0000555555717be0 in _PyEval_EvalFrameDefault ()\n#30 0x00005555556eda39 in PyEval_EvalCodeEx ()\n#31 0x00005555556ee7cc in PyEval_EvalCode ()\n#32 0x0000555555712dcd in builtin_exec ()\n#33 0x0000555555666731 in PyCFunction_Call ()\n#34 0x000055555571a457 in _PyEval_EvalFrameDefault ()\n#35 0x00005555556ebf06 in _PyEval_EvalCodeWithName ()\n#36 0x00005555556ecf4f in fast_function ()\n#37 0x00005555556f2ba5 in call_function ()\n#38 0x00005555557154ba in _PyEval_EvalFrameDefault ()\n#39 0x00005555556ecd0b in fast_function ()\n#40 0x00005555556f2ba5 in call_function ()\n#41 0x00005555557154ba in _PyEval_EvalFrameDefault ()\n#42 0x00005555556ecd0b in fast_function ()\n#43 0x00005555556f2ba5 in call_function ()\n#44 0x00005555557154ba in _PyEval_EvalFrameDefault ()\n#45 0x00005555556ecd0b in fast_function ()\n#46 0x00005555556f2ba5 in call_function ()\n#47 0x00005555557154ba in _PyEval_EvalFrameDefault ()\n#48 0x00005555556ed35b in _PyFunction_FastCallDict ()\n#49 0x0000555555663b1f in _PyObject_FastCallDict ()\n#50 0x00005555556a7960 in _PyObject_CallMethodIdObjArgs ()\n#51 0x000055555565a660 in PyImport_ImportModuleLevelObject ()\n#52 0x0000555555717be0 in _PyEval_EvalFrameDefault ()\n#53 0x00005555556eda39 in PyEval_EvalCodeEx ()\n#54 0x00005555556ee7cc in PyEval_EvalCode ()\n#55 0x0000555555712dcd in builtin_exec ()\n#56 0x0000555555666731 in PyCFunction_Call ()\n#57 0x000055555571a457 in _PyEval_EvalFrameDefault ()\n#58 0x00005555556ebf06 in _PyEval_EvalCodeWithName ()\n#59 0x00005555556ecf4f in fast_function ()\n#60 0x00005555556f2ba5 in call_function ()\n#61 0x00005555557154ba in _PyEval_EvalFrameDefault ()\n#62 0x00005555556ecd0b in fast_function ()\n#63 0x00005555556f2ba5 in call_function ()\n#64 0x00005555557154ba in _PyEval_EvalFrameDefault ()\n#65 0x00005555556ecd0b in fast_function ()\n#66 0x00005555556f2ba5 in call_function ()\n#67 0x00005555557154ba in _PyEval_EvalFrameDefault ()\n#68 0x00005555556ecd0b in fast_function ()\n#69 0x00005555556f2ba5 in call_function ()\n#70 0x00005555557154ba in _PyEval_EvalFrameDefault ()\n#71 0x00005555556ed35b in _PyFunction_FastCallDict ()\n#72 0x0000555555663b1f in _PyObject_FastCallDict ()\n#73 0x00005555556a7960 in _PyObject_CallMethodIdObjArgs ()\n#74 0x000055555565a660 in PyImport_ImportModuleLevelObject ()\n#75 0x0000555555717be0 in _PyEval_EvalFrameDefault ()\n#76 0x00005555556eda39 in PyEval_EvalCodeEx ()\n#77 0x00005555556ee7cc in PyEval_EvalCode ()\n#78 0x0000555555768ee4 in run_mod ()\n#79 0x00005555557692e1 in PyRun_FileExFlags ()\n#80 0x00005555557694e4 in PyRun_SimpleFileExFlags ()\n#81 0x000055555576cfdf in Py_Main ()\n#82 0x0000555555634bfe in main ()\n\nwhich looks like a pybind11 problem. Do you know if this is the pybind11 namespacing problem that is fixed?\nAt any rate, @W4ngatang, please try building from source and see how it goes.", "body": "@soumith I think there were two stack traces in the txt files. The first one is from tbb (could be conflicting symbols, but tbb does this thing where it re-catches an exception... when debugging in gdb I had to continue past the first exception). The second stack trace is\r\n```\r\n\r\nProgram received signal SIGSEGV, Segmentation fault.\r\n0x00007fffb53ff6c9 in pybind11::detail::make_new_python_type (rec=...) at /misc/vlgscratch4/BowmanGroup/awang/software/miniconda3/envs/mtl-sent-rep/include/python3.6m/pybind11/detail/class.h:568\r\n568\t    auto heap_type = (PyHeapTypeObject *) metaclass->tp_alloc(metaclass, 0);\r\n#0  0x00007fffb53ff6c9 in pybind11::detail::make_new_python_type (rec=...) at /misc/vlgscratch4/BowmanGroup/awang/software/miniconda3/envs/mtl-sent-rep/include/python3.6m/pybind11/detail/class.h:568\r\n#1  0x00007fffb5409dd1 in pybind11::detail::generic_type::initialize (this=this@entry=0x7fffffff9e70, rec=...)\r\n    at /misc/vlgscratch4/BowmanGroup/awang/software/miniconda3/envs/mtl-sent-rep/include/python3.6m/pybind11/pybind11.h:895\r\n#2  0x00007fffb53f2232 in class_<> (name=0x7fffb5433128 \"args\", scope=..., this=0x7fffffff9e70)\r\n    at /misc/vlgscratch4/BowmanGroup/awang/software/miniconda3/envs/mtl-sent-rep/include/python3.6m/pybind11/pybind11.h:1065\r\n#3  pybind11_init_fasttext_pybind (m=...) at python/fastText/pybind/fasttext_pybind.cc:51\r\n#4  0x00007fffb53f5d0f in PyInit_fasttext_pybind () at python/fastText/pybind/fasttext_pybind.cc:49\r\n#5  0x0000555555769e25 in _PyImport_LoadDynamicModuleWithSpec ()\r\n#6  0x000055555576a025 in _imp_create_dynamic ()\r\n#7  0x0000555555666731 in PyCFunction_Call ()\r\n#8  0x000055555571a457 in _PyEval_EvalFrameDefault ()\r\n#9  0x00005555556ebf06 in _PyEval_EvalCodeWithName ()\r\n#10 0x00005555556ecf4f in fast_function ()\r\n#11 0x00005555556f2ba5 in call_function ()\r\n#12 0x00005555557154ba in _PyEval_EvalFrameDefault ()\r\n#13 0x00005555556ecd0b in fast_function ()\r\n#14 0x00005555556f2ba5 in call_function ()\r\n#15 0x00005555557154ba in _PyEval_EvalFrameDefault ()\r\n#16 0x00005555556ecd0b in fast_function ()\r\n#17 0x00005555556f2ba5 in call_function ()\r\n#18 0x00005555557154ba in _PyEval_EvalFrameDefault ()\r\n#19 0x00005555556ecd0b in fast_function ()\r\n#20 0x00005555556f2ba5 in call_function ()\r\n#21 0x00005555557154ba in _PyEval_EvalFrameDefault ()\r\n#22 0x00005555556ecd0b in fast_function ()\r\n#23 0x00005555556f2ba5 in call_function ()\r\n#24 0x00005555557154ba in _PyEval_EvalFrameDefault ()\r\n#25 0x00005555556ed35b in _PyFunction_FastCallDict ()\r\n#26 0x0000555555663b1f in _PyObject_FastCallDict ()\r\n#27 0x00005555556a7960 in _PyObject_CallMethodIdObjArgs ()\r\n#28 0x000055555565a660 in PyImport_ImportModuleLevelObject ()\r\n#29 0x0000555555717be0 in _PyEval_EvalFrameDefault ()\r\n#30 0x00005555556eda39 in PyEval_EvalCodeEx ()\r\n#31 0x00005555556ee7cc in PyEval_EvalCode ()\r\n#32 0x0000555555712dcd in builtin_exec ()\r\n#33 0x0000555555666731 in PyCFunction_Call ()\r\n#34 0x000055555571a457 in _PyEval_EvalFrameDefault ()\r\n#35 0x00005555556ebf06 in _PyEval_EvalCodeWithName ()\r\n#36 0x00005555556ecf4f in fast_function ()\r\n#37 0x00005555556f2ba5 in call_function ()\r\n#38 0x00005555557154ba in _PyEval_EvalFrameDefault ()\r\n#39 0x00005555556ecd0b in fast_function ()\r\n#40 0x00005555556f2ba5 in call_function ()\r\n#41 0x00005555557154ba in _PyEval_EvalFrameDefault ()\r\n#42 0x00005555556ecd0b in fast_function ()\r\n#43 0x00005555556f2ba5 in call_function ()\r\n#44 0x00005555557154ba in _PyEval_EvalFrameDefault ()\r\n#45 0x00005555556ecd0b in fast_function ()\r\n#46 0x00005555556f2ba5 in call_function ()\r\n#47 0x00005555557154ba in _PyEval_EvalFrameDefault ()\r\n#48 0x00005555556ed35b in _PyFunction_FastCallDict ()\r\n#49 0x0000555555663b1f in _PyObject_FastCallDict ()\r\n#50 0x00005555556a7960 in _PyObject_CallMethodIdObjArgs ()\r\n#51 0x000055555565a660 in PyImport_ImportModuleLevelObject ()\r\n#52 0x0000555555717be0 in _PyEval_EvalFrameDefault ()\r\n#53 0x00005555556eda39 in PyEval_EvalCodeEx ()\r\n#54 0x00005555556ee7cc in PyEval_EvalCode ()\r\n#55 0x0000555555712dcd in builtin_exec ()\r\n#56 0x0000555555666731 in PyCFunction_Call ()\r\n#57 0x000055555571a457 in _PyEval_EvalFrameDefault ()\r\n#58 0x00005555556ebf06 in _PyEval_EvalCodeWithName ()\r\n#59 0x00005555556ecf4f in fast_function ()\r\n#60 0x00005555556f2ba5 in call_function ()\r\n#61 0x00005555557154ba in _PyEval_EvalFrameDefault ()\r\n#62 0x00005555556ecd0b in fast_function ()\r\n#63 0x00005555556f2ba5 in call_function ()\r\n#64 0x00005555557154ba in _PyEval_EvalFrameDefault ()\r\n#65 0x00005555556ecd0b in fast_function ()\r\n#66 0x00005555556f2ba5 in call_function ()\r\n#67 0x00005555557154ba in _PyEval_EvalFrameDefault ()\r\n#68 0x00005555556ecd0b in fast_function ()\r\n#69 0x00005555556f2ba5 in call_function ()\r\n#70 0x00005555557154ba in _PyEval_EvalFrameDefault ()\r\n#71 0x00005555556ed35b in _PyFunction_FastCallDict ()\r\n#72 0x0000555555663b1f in _PyObject_FastCallDict ()\r\n#73 0x00005555556a7960 in _PyObject_CallMethodIdObjArgs ()\r\n#74 0x000055555565a660 in PyImport_ImportModuleLevelObject ()\r\n#75 0x0000555555717be0 in _PyEval_EvalFrameDefault ()\r\n#76 0x00005555556eda39 in PyEval_EvalCodeEx ()\r\n#77 0x00005555556ee7cc in PyEval_EvalCode ()\r\n#78 0x0000555555768ee4 in run_mod ()\r\n#79 0x00005555557692e1 in PyRun_FileExFlags ()\r\n#80 0x00005555557694e4 in PyRun_SimpleFileExFlags ()\r\n#81 0x000055555576cfdf in Py_Main ()\r\n#82 0x0000555555634bfe in main ()\r\n```\r\nwhich looks like a pybind11 problem. Do you know if this is the pybind11 namespacing problem that is fixed?\r\n\r\nAt any rate, @W4ngatang, please try building from source and see how it goes."}