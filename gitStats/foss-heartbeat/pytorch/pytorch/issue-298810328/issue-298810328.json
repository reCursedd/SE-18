{"url": "https://api.github.com/repos/pytorch/pytorch/issues/5324", "repository_url": "https://api.github.com/repos/pytorch/pytorch", "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/5324/labels{/name}", "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/5324/comments", "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/5324/events", "html_url": "https://github.com/pytorch/pytorch/pull/5324", "id": 298810328, "node_id": "MDExOlB1bGxSZXF1ZXN0MTcwMzU0Njk1", "number": 5324, "title": "Improve CUDA extension support", "user": {"login": "goldsborough", "id": 6429851, "node_id": "MDQ6VXNlcjY0Mjk4NTE=", "avatar_url": "https://avatars3.githubusercontent.com/u/6429851?v=4", "gravatar_id": "", "url": "https://api.github.com/users/goldsborough", "html_url": "https://github.com/goldsborough", "followers_url": "https://api.github.com/users/goldsborough/followers", "following_url": "https://api.github.com/users/goldsborough/following{/other_user}", "gists_url": "https://api.github.com/users/goldsborough/gists{/gist_id}", "starred_url": "https://api.github.com/users/goldsborough/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/goldsborough/subscriptions", "organizations_url": "https://api.github.com/users/goldsborough/orgs", "repos_url": "https://api.github.com/users/goldsborough/repos", "events_url": "https://api.github.com/users/goldsborough/events{/privacy}", "received_events_url": "https://api.github.com/users/goldsborough/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2018-02-21T01:25:54Z", "updated_at": "2018-11-23T15:39:55Z", "closed_at": "2018-02-23T15:15:31Z", "author_association": "CONTRIBUTOR", "pull_request": {"url": "https://api.github.com/repos/pytorch/pytorch/pulls/5324", "html_url": "https://github.com/pytorch/pytorch/pull/5324", "diff_url": "https://github.com/pytorch/pytorch/pull/5324.diff", "patch_url": "https://github.com/pytorch/pytorch/pull/5324.patch"}, "body_html": "<p><a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=9110200\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/fmassa\">@fmassa</a> provided valuable feedback about the usability of C++/CUDA extensions, which this PR addresses. Major changes are:</p>\n<ul>\n<li>Include <code>*.cuh</code> headers from <code>ATen/cuda</code>, <code>THC</code> and <code>ATen/cudnn</code> in the PyTorch install. These headers are <em>not</em> exposed in <code>torch.h</code> and are not part of the public API. We just package them with the install so that power users like <a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=9110200\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/fmassa\">@fmassa</a> can use them (at their own risk w.r.t. API stability).</li>\n<li>Add <code>-I torch/lib/include/TH</code>, since <code>THC</code> headers refer to <code>TH.h</code> without a prefix,</li>\n<li>Give compiled CUDA object files a <code>.cuda.o</code> suffix to avoid collision with C++ files with the same filename (e.g. <code>extension.cpp</code> and <code>extension.cu</code>),</li>\n<li>Add <code>-std=c++11</code> to CUDA builds, taking care to only add it when <code>-std</code> was not already passed by the user, since NVCC does not allow duplicate flags.</li>\n</ul>\n<p><a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=370202\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/zdevito\">@zdevito</a> <a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=4583066\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/apaszke\">@apaszke</a> <a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=13564\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/ezyang\">@ezyang</a></p>", "body_text": "@fmassa provided valuable feedback about the usability of C++/CUDA extensions, which this PR addresses. Major changes are:\n\nInclude *.cuh headers from ATen/cuda, THC and ATen/cudnn in the PyTorch install. These headers are not exposed in torch.h and are not part of the public API. We just package them with the install so that power users like @fmassa can use them (at their own risk w.r.t. API stability).\nAdd -I torch/lib/include/TH, since THC headers refer to TH.h without a prefix,\nGive compiled CUDA object files a .cuda.o suffix to avoid collision with C++ files with the same filename (e.g. extension.cpp and extension.cu),\nAdd -std=c++11 to CUDA builds, taking care to only add it when -std was not already passed by the user, since NVCC does not allow duplicate flags.\n\n@zdevito @apaszke @ezyang", "body": "@fmassa provided valuable feedback about the usability of C++/CUDA extensions, which this PR addresses. Major changes are:\r\n\r\n- Include `*.cuh` headers from `ATen/cuda`, `THC` and `ATen/cudnn` in the PyTorch install. These headers are *not* exposed in `torch.h` and are not part of the public API. We just package them with the install so that power users like @fmassa can use them (at their own risk w.r.t. API stability).\r\n- Add `-I torch/lib/include/TH`, since `THC` headers refer to `TH.h` without a prefix,\r\n- Give compiled CUDA object files a `.cuda.o` suffix to avoid collision with C++ files with the same filename (e.g. `extension.cpp` and `extension.cu`),\r\n- Add `-std=c++11` to CUDA builds, taking care to only add it when `-std` was not already passed by the user, since NVCC does not allow duplicate flags.\r\n\r\n@zdevito @apaszke @ezyang  "}