{"url": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/234026949", "pull_request_review_id": 175579764, "id": 234026949, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIzNDAyNjk0OQ==", "diff_hunk": "@@ -437,25 +511,70 @@ struct CAFFE2_API CompleteTensorType : public TensorType {\n   static TypePtr fromNumberType(TypePtr typ);\n   static TypePtr fromBoolType();\n \n-private:\n+ private:\n   CompleteTensorType(const at::Tensor& tensor)\n-    : TensorType(tensor, TypeKind::CompleteTensorType)\n-    , sizes_(tensor.sizes().vec())\n-    , strides_(tensor.strides().vec()) {}\n-  CompleteTensorType(at::ScalarType scalar_type, int device, at::IntList sizes, bool requires_grad=true)\n-    : CompleteTensorType(scalar_type, device, sizes, CompleteTensorType::contiguousStridesOf(sizes), requires_grad) {}\n-  CompleteTensorType(at::ScalarType scalar_type, int device, at::IntList sizes, at::IntList strides, bool requires_grad=true)\n-    : TensorType(scalar_type, device, sizes.size(), requires_grad, TypeKind::CompleteTensorType)\n-    , sizes_(sizes.vec())\n-    , strides_(strides.vec()) {}\n+      : TensorType(tensor, TypeKind::CompleteTensorType),\n+        sizes_(tensor.sizes().vec()),\n+        strides_(tensor.strides().vec()) {}\n+  CompleteTensorType(\n+      at::ScalarType scalar_type,\n+      at::Device device,\n+      at::IntList sizes,\n+      bool requires_grad = true)\n+      : CompleteTensorType(\n+            scalar_type,\n+            device,\n+            sizes,\n+            CompleteTensorType::contiguousStridesOf(sizes),\n+            requires_grad) {}\n+  CompleteTensorType(\n+      at::ScalarType scalar_type,\n+      at::Device device,\n+      at::IntList sizes,\n+      at::IntList strides,\n+      bool requires_grad = true)\n+      : TensorType(\n+            scalar_type,\n+            device,\n+            sizes.size(),\n+            requires_grad,\n+            TypeKind::CompleteTensorType),\n+        sizes_(sizes.vec()),\n+        strides_(strides.vec()) {}\n+\n+  CompleteTensorType(\n+      at::ScalarType scalar_type,\n+      int device,", "path": "aten/src/ATen/core/jit_type.h", "position": 608, "original_position": 608, "commit_id": "7b828ab2106f071dec7eb5b8e06a7bc9538c6fff", "original_commit_id": "7b828ab2106f071dec7eb5b8e06a7bc9538c6fff", "user": {"login": "ezyang", "id": 13564, "node_id": "MDQ6VXNlcjEzNTY0", "avatar_url": "https://avatars0.githubusercontent.com/u/13564?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ezyang", "html_url": "https://github.com/ezyang", "followers_url": "https://api.github.com/users/ezyang/followers", "following_url": "https://api.github.com/users/ezyang/following{/other_user}", "gists_url": "https://api.github.com/users/ezyang/gists{/gist_id}", "starred_url": "https://api.github.com/users/ezyang/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ezyang/subscriptions", "organizations_url": "https://api.github.com/users/ezyang/orgs", "repos_url": "https://api.github.com/users/ezyang/repos", "events_url": "https://api.github.com/users/ezyang/events{/privacy}", "received_events_url": "https://api.github.com/users/ezyang/received_events", "type": "User", "site_admin": false}, "body": "Kill this constructor?", "created_at": "2018-11-15T22:08:53Z", "updated_at": "2018-11-23T15:54:58Z", "html_url": "https://github.com/pytorch/pytorch/pull/14008#discussion_r234026949", "pull_request_url": "https://api.github.com/repos/pytorch/pytorch/pulls/14008", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/234026949"}, "html": {"href": "https://github.com/pytorch/pytorch/pull/14008#discussion_r234026949"}, "pull_request": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/14008"}}, "body_html": "<p>Kill this constructor?</p>", "body_text": "Kill this constructor?"}