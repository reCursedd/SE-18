{"url": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/234026468", "pull_request_review_id": 175579167, "id": 234026468, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIzNDAyNjQ2OA==", "diff_hunk": "@@ -339,52 +362,106 @@ struct CAFFE2_API TensorType : public DynamicType {\n \n   static const TypeKind Kind = TypeKind::TensorType;\n \n-protected:\n-  TensorType(const at::Tensor& tensor, TypeKind kind=TypeKind::TensorType)\n-    : TensorType(tensor.type().scalarType(),\n-                 tensor.is_cuda() ? tensor.get_device() : -1,\n-                 tensor.dim(),\n-                 tensor.is_variable() && tensor.requires_grad(),\n-                 kind) {}\n-  TensorType(at::ScalarType scalar_type, int device, int dim, bool requires_grad=true, TypeKind kind=TypeKind::TensorType)\n-    : DynamicType(kind)\n-    , scalar_type_(scalar_type)\n-    , requires_grad_(at::isFloatingType(scalar_type) && requires_grad)\n-    , device_(device)\n-    , dim_(dim) {}\n-\n+ protected:\n+  TensorType(const at::Tensor& tensor, TypeKind kind = TypeKind::TensorType)\n+      : TensorType(\n+            tensor.type().scalarType(),\n+            tensor.device(),\n+            tensor.dim(),\n+            tensor.is_variable() && tensor.requires_grad(),\n+            kind) {}\n+  TensorType(\n+      at::ScalarType scalar_type,\n+      at::Device device,\n+      int dim,\n+      bool requires_grad = true,\n+      TypeKind kind = TypeKind::TensorType)\n+      : DynamicType(kind),\n+        scalar_type_(scalar_type),\n+        requires_grad_(at::isFloatingType(scalar_type) && requires_grad),\n+        device_(device),\n+        dim_(dim) {}\n+  TensorType(\n+      at::ScalarType scalar_type,\n+      int device,", "path": "aten/src/ATen/core/jit_type.h", "position": 414, "original_position": 414, "commit_id": "7b828ab2106f071dec7eb5b8e06a7bc9538c6fff", "original_commit_id": "7b828ab2106f071dec7eb5b8e06a7bc9538c6fff", "user": {"login": "ezyang", "id": 13564, "node_id": "MDQ6VXNlcjEzNTY0", "avatar_url": "https://avatars0.githubusercontent.com/u/13564?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ezyang", "html_url": "https://github.com/ezyang", "followers_url": "https://api.github.com/users/ezyang/followers", "following_url": "https://api.github.com/users/ezyang/following{/other_user}", "gists_url": "https://api.github.com/users/ezyang/gists{/gist_id}", "starred_url": "https://api.github.com/users/ezyang/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ezyang/subscriptions", "organizations_url": "https://api.github.com/users/ezyang/orgs", "repos_url": "https://api.github.com/users/ezyang/repos", "events_url": "https://api.github.com/users/ezyang/events{/privacy}", "received_events_url": "https://api.github.com/users/ezyang/received_events", "type": "User", "site_admin": false}, "body": "Shouldn't this take an `at::Device`?", "created_at": "2018-11-15T22:07:06Z", "updated_at": "2018-11-23T15:54:58Z", "html_url": "https://github.com/pytorch/pytorch/pull/14008#discussion_r234026468", "pull_request_url": "https://api.github.com/repos/pytorch/pytorch/pulls/14008", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/234026468"}, "html": {"href": "https://github.com/pytorch/pytorch/pull/14008#discussion_r234026468"}, "pull_request": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/14008"}}, "body_html": "<p>Shouldn't this take an <code>at::Device</code>?</p>", "body_text": "Shouldn't this take an at::Device?"}