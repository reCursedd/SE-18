{"url": "https://api.github.com/repos/pytorch/pytorch/issues/7717", "repository_url": "https://api.github.com/repos/pytorch/pytorch", "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/7717/labels{/name}", "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/7717/comments", "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/7717/events", "html_url": "https://github.com/pytorch/pytorch/issues/7717", "id": 324742900, "node_id": "MDU6SXNzdWUzMjQ3NDI5MDA=", "number": 7717, "title": "Remove nderivs from torch.jit.trace", "user": {"login": "apaszke", "id": 4583066, "node_id": "MDQ6VXNlcjQ1ODMwNjY=", "avatar_url": "https://avatars3.githubusercontent.com/u/4583066?v=4", "gravatar_id": "", "url": "https://api.github.com/users/apaszke", "html_url": "https://github.com/apaszke", "followers_url": "https://api.github.com/users/apaszke/followers", "following_url": "https://api.github.com/users/apaszke/following{/other_user}", "gists_url": "https://api.github.com/users/apaszke/gists{/gist_id}", "starred_url": "https://api.github.com/users/apaszke/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/apaszke/subscriptions", "organizations_url": "https://api.github.com/users/apaszke/orgs", "repos_url": "https://api.github.com/users/apaszke/repos", "events_url": "https://api.github.com/users/apaszke/events{/privacy}", "received_events_url": "https://api.github.com/users/apaszke/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 679953983, "node_id": "MDU6TGFiZWw2Nzk5NTM5ODM=", "url": "https://api.github.com/repos/pytorch/pytorch/labels/jit", "name": "jit", "color": "c5def5", "default": false}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2018-05-20T21:09:28Z", "updated_at": "2018-05-20T21:09:28Z", "closed_at": null, "author_association": "MEMBER", "body_html": "<p><code>torch.jit.trace</code> currently takes a <code>nderivs</code> argument, which should be equal to the expected number of derivatives of the traced graph that the user is expected to compute at some point. This was necessary in the re-tracing framework of the removed <code>@compile</code>, but is incompatible with the new invariant we have for tracing - we record the computation <em>exactly once</em> and only inside the actual traced region.</p>\n<p>We should still make sure that it possible to use <code>autograd.grad</code> inside the traced functions, and the gradient function should be recorded correctly. On the other hand, there's a bunch of logic that handles invalidation and lifetime management of traces that is completely unnecessary now, and should be removed (since <code>TracingState</code>s are valid only inside <code>@trace</code> now). It might also turn out that we don't even need the subgraph-capturing logic which would lead to additional reductions in code size.</p>\n<p>This should conclude the JIT cleanup efforts.</p>", "body_text": "torch.jit.trace currently takes a nderivs argument, which should be equal to the expected number of derivatives of the traced graph that the user is expected to compute at some point. This was necessary in the re-tracing framework of the removed @compile, but is incompatible with the new invariant we have for tracing - we record the computation exactly once and only inside the actual traced region.\nWe should still make sure that it possible to use autograd.grad inside the traced functions, and the gradient function should be recorded correctly. On the other hand, there's a bunch of logic that handles invalidation and lifetime management of traces that is completely unnecessary now, and should be removed (since TracingStates are valid only inside @trace now). It might also turn out that we don't even need the subgraph-capturing logic which would lead to additional reductions in code size.\nThis should conclude the JIT cleanup efforts.", "body": "`torch.jit.trace` currently takes a `nderivs` argument, which should be equal to the expected number of derivatives of the traced graph that the user is expected to compute at some point. This was necessary in the re-tracing framework of the removed `@compile`, but is incompatible with the new invariant we have for tracing - we record the computation *exactly once* and only inside the actual traced region.\r\n\r\nWe should still make sure that it possible to use `autograd.grad` inside the traced functions, and the gradient function should be recorded correctly. On the other hand, there's a bunch of logic that handles invalidation and lifetime management of traces that is completely unnecessary now, and should be removed (since `TracingState`s are valid only inside `@trace` now). It might also turn out that we don't even need the subgraph-capturing logic which would lead to additional reductions in code size.\r\n\r\nThis should conclude the JIT cleanup efforts."}