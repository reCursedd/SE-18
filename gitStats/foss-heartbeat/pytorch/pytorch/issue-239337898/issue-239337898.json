{"url": "https://api.github.com/repos/pytorch/pytorch/issues/1938", "repository_url": "https://api.github.com/repos/pytorch/pytorch", "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/1938/labels{/name}", "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/1938/comments", "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/1938/events", "html_url": "https://github.com/pytorch/pytorch/issues/1938", "id": 239337898, "node_id": "MDU6SXNzdWUyMzkzMzc4OTg=", "number": 1938, "title": "numerical stability of CPU implementation of LRN", "user": {"login": "zym1010", "id": 4273204, "node_id": "MDQ6VXNlcjQyNzMyMDQ=", "avatar_url": "https://avatars3.githubusercontent.com/u/4273204?v=4", "gravatar_id": "", "url": "https://api.github.com/users/zym1010", "html_url": "https://github.com/zym1010", "followers_url": "https://api.github.com/users/zym1010/followers", "following_url": "https://api.github.com/users/zym1010/following{/other_user}", "gists_url": "https://api.github.com/users/zym1010/gists{/gist_id}", "starred_url": "https://api.github.com/users/zym1010/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/zym1010/subscriptions", "organizations_url": "https://api.github.com/users/zym1010/orgs", "repos_url": "https://api.github.com/users/zym1010/repos", "events_url": "https://api.github.com/users/zym1010/events{/privacy}", "received_events_url": "https://api.github.com/users/zym1010/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 424131847, "node_id": "MDU6TGFiZWw0MjQxMzE4NDc=", "url": "https://api.github.com/repos/pytorch/pytorch/labels/bug", "name": "bug", "color": "b60205", "default": true}, {"id": 424131850, "node_id": "MDU6TGFiZWw0MjQxMzE4NTA=", "url": "https://api.github.com/repos/pytorch/pytorch/labels/help%20wanted", "name": "help wanted", "color": "128A0C", "default": true}, {"id": 443483881, "node_id": "MDU6TGFiZWw0NDM0ODM4ODE=", "url": "https://api.github.com/repos/pytorch/pytorch/labels/todo", "name": "todo", "color": "c2e0c6", "default": false}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2017-06-29T00:56:24Z", "updated_at": "2017-07-13T06:34:16Z", "closed_at": null, "author_association": "CONTRIBUTOR", "body_html": "<p>using a LRN module from <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load issue title\" data-id=\"204214359\" data-permission-text=\"Issue title is private\" data-url=\"https://github.com/pytorch/pytorch/issues/653\" data-hovercard-type=\"issue\" data-hovercard-url=\"/pytorch/pytorch/issues/653/hovercard?comment_id=304361386&amp;comment_type=issue_comment\" href=\"https://github.com/pytorch/pytorch/issues/653#issuecomment-304361386\">#653 (comment)</a>, which is just wrapper of legacy LRN, I found that, the CPU and GPU results of this module, given same input, are hugely different.</p>\n<p>Check <a href=\"https://github.com/leelabcnbc/pytorch-caffe-models/blob/master/test_LRN.py\">https://github.com/leelabcnbc/pytorch-caffe-models/blob/master/test_LRN.py</a>, <code>abs(result_cpu, result_gpu).max()</code> can be as large as 73, where given exactly the same input in Caffe, <code>abs(result_cpu, result_gpu).max()</code> is only as large as 0.0004.</p>", "body_text": "using a LRN module from #653 (comment), which is just wrapper of legacy LRN, I found that, the CPU and GPU results of this module, given same input, are hugely different.\nCheck https://github.com/leelabcnbc/pytorch-caffe-models/blob/master/test_LRN.py, abs(result_cpu, result_gpu).max() can be as large as 73, where given exactly the same input in Caffe, abs(result_cpu, result_gpu).max() is only as large as 0.0004.", "body": "using a LRN module from <https://github.com/pytorch/pytorch/issues/653#issuecomment-304361386>, which is just wrapper of legacy LRN, I found that, the CPU and GPU results of this module, given same input, are hugely different.\r\n\r\nCheck <https://github.com/leelabcnbc/pytorch-caffe-models/blob/master/test_LRN.py>, `abs(result_cpu, result_gpu).max()` can be as large as 73, where given exactly the same input in Caffe, `abs(result_cpu, result_gpu).max()` is only as large as 0.0004."}