{"url": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/160002222", "pull_request_review_id": 87043663, "id": 160002222, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE2MDAwMjIyMg==", "diff_hunk": "@@ -101,6 +101,34 @@ static THTensor *THTensor_(cloneColumnMajor)(THTensor *self, THTensor *src)\n   return THTensor_(cloneColumnMajorNrows)(self, src, src->size[0]);\n }\n \n+/*\n+ * Creates a clone of a 3D tensor such that each 2D batch is in column major\n+ * format and each batch is contiguous WRT itself in memory.\n+ */\n+static THTensor *THTensor_(cloneBatchedColumnMajor)(THTensor *self, THTensor *src)\n+{\n+  THAssert(src->nDimension == 3);\n+  int64_t matrix_size = src->size[1] * src->size[2];\n+  if (self == src && self->stride[0] == matrix_size && \n+      self->stride[1] == 1 && self->stride[2] == self->size[1]) {\n+    THTensor_(retain)(self);\n+    return self;\n+  }\n+\n+  if (self == src) {\n+    self = THTensor_(new)();\n+  } else {\n+    THTensor_(retain)(self);\n+  }\n+\n+  int64_t size[3] = { src->size[0], src->size[1], src->size[2] };\n+  int64_t stride[3] = { matrix_size, 1, src->size[1] };\n+\n+  THTensor_(resizeNd)(self, 3, size, stride);\n+  THTensor_(copy)(self, src);\n+  return self;\n+}", "path": "aten/src/TH/generic/THTensorLapack.c", "position": null, "original_position": 30, "commit_id": "bb1d72f99ccf1bfc4b2ce1cd56cd2e04ee3d2f8d", "original_commit_id": "523c6bb646fbec0e5ebf5eec5d377f8bf3658fb5", "user": {"login": "apaszke", "id": 4583066, "node_id": "MDQ6VXNlcjQ1ODMwNjY=", "avatar_url": "https://avatars3.githubusercontent.com/u/4583066?v=4", "gravatar_id": "", "url": "https://api.github.com/users/apaszke", "html_url": "https://github.com/apaszke", "followers_url": "https://api.github.com/users/apaszke/followers", "following_url": "https://api.github.com/users/apaszke/following{/other_user}", "gists_url": "https://api.github.com/users/apaszke/gists{/gist_id}", "starred_url": "https://api.github.com/users/apaszke/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/apaszke/subscriptions", "organizations_url": "https://api.github.com/users/apaszke/orgs", "repos_url": "https://api.github.com/users/apaszke/repos", "events_url": "https://api.github.com/users/apaszke/events{/privacy}", "received_events_url": "https://api.github.com/users/apaszke/received_events", "type": "User", "site_admin": false}, "body": "I think it'd be better to rearrange some statements in this function. I'd move the `size` and `stride` arrays to the top and used that both to check if `self` matches what we expect, and in a call to `resizeNd` (less duplication, fewer chances for errors).", "created_at": "2018-01-05T23:24:19Z", "updated_at": "2018-11-23T15:37:54Z", "html_url": "https://github.com/pytorch/pytorch/pull/4502#discussion_r160002222", "pull_request_url": "https://api.github.com/repos/pytorch/pytorch/pulls/4502", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/160002222"}, "html": {"href": "https://github.com/pytorch/pytorch/pull/4502#discussion_r160002222"}, "pull_request": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/4502"}}, "body_html": "<p>I think it'd be better to rearrange some statements in this function. I'd move the <code>size</code> and <code>stride</code> arrays to the top and used that both to check if <code>self</code> matches what we expect, and in a call to <code>resizeNd</code> (less duplication, fewer chances for errors).</p>", "body_text": "I think it'd be better to rearrange some statements in this function. I'd move the size and stride arrays to the top and used that both to check if self matches what we expect, and in a call to resizeNd (less duplication, fewer chances for errors)."}