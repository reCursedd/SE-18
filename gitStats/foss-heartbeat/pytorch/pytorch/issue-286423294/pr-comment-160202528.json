{"url": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/160202528", "pull_request_review_id": 87277008, "id": 160202528, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE2MDIwMjUyOA==", "diff_hunk": "@@ -98,6 +121,76 @@ THC_API void THCTensor_(gesv)(THCState *state, THCTensor *rb_, THCTensor *ra_, T\n #endif\n }\n \n+THC_API void THCTensor_(bgesv)(THCState *state, THCTensor *rb_, THCTensor *ra_, THCTensor *b_, THCTensor *a_)\n+{\n+#ifdef USE_MAGMA\n+  THArgCheck(a_->nDimension == 3, 1, \"A should be 3 dimensional\");\n+  THArgCheck(b_->nDimension == 3, 2, \"b should be 3 dimensional\");\n+  THArgCheck(a_->size[1] == a_->size[2], 1, \"A should be batches of square matrices\");\n+  THArgCheck(b_->size[0] == a_->size[0], 2, \"A, b batch_count incompatible\");\n+  THArgCheck(b_->size[1] == a_->size[1], 2, \"A, b size incompatible\");\n+\n+  int64_t batch_count = a_->size[0];\n+  int64_t n = a_->size[1];\n+  int64_t nrhs = b_->size[2];\n+\n+  THCTensor *a = THCTensor_(newBatchedColumnMajor)(state, ra_, a_);\n+  THCTensor *b = THCTensor_(newBatchedColumnMajor)(state, rb_, b_);\n+  real *a_data = THCTensor_(data)(state, a);\n+  real *b_data = THCTensor_(data)(state, b);\n+\n+  real **a_array = th_magma_malloc_pinned<real *>(batch_count);\n+  real **b_array = th_magma_malloc_pinned<real *>(batch_count);\n+\n+  int *info_array = th_magma_malloc_pinned<int>(batch_count);\n+  int *ipiv_data = th_magma_malloc_pinned<int>(batch_count * n);\n+  int **ipiv_array = th_magma_malloc_pinned<int *>(batch_count);\n+\n+  for (int64_t i = 0; i < batch_count; i++) {\n+    a_array[i] = &a_data[i * n * n];\n+    b_array[i] = &b_data[i * n * nrhs]; \n+    ipiv_array[i] = &ipiv_data[i * n];\n+  }\n+\n+  magma_queue_t magma_queue;\n+  magma_queue_create_from_cuda(", "path": "aten/src/THC/generic/THCTensorMathMagma.cu", "position": 67, "original_position": 66, "commit_id": "bb1d72f99ccf1bfc4b2ce1cd56cd2e04ee3d2f8d", "original_commit_id": "523c6bb646fbec0e5ebf5eec5d377f8bf3658fb5", "user": {"login": "zou3519", "id": 5652049, "node_id": "MDQ6VXNlcjU2NTIwNDk=", "avatar_url": "https://avatars3.githubusercontent.com/u/5652049?v=4", "gravatar_id": "", "url": "https://api.github.com/users/zou3519", "html_url": "https://github.com/zou3519", "followers_url": "https://api.github.com/users/zou3519/followers", "following_url": "https://api.github.com/users/zou3519/following{/other_user}", "gists_url": "https://api.github.com/users/zou3519/gists{/gist_id}", "starred_url": "https://api.github.com/users/zou3519/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/zou3519/subscriptions", "organizations_url": "https://api.github.com/users/zou3519/orgs", "repos_url": "https://api.github.com/users/zou3519/repos", "events_url": "https://api.github.com/users/zou3519/events{/privacy}", "received_events_url": "https://api.github.com/users/zou3519/received_events", "type": "User", "site_admin": false}, "body": "The overhead is ~350000 microseconds the first time it's called (on my machine), and ~6 microseconds every time after that. Is that reasonable?", "created_at": "2018-01-08T17:18:35Z", "updated_at": "2018-11-23T15:37:56Z", "html_url": "https://github.com/pytorch/pytorch/pull/4502#discussion_r160202528", "pull_request_url": "https://api.github.com/repos/pytorch/pytorch/pulls/4502", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/160202528"}, "html": {"href": "https://github.com/pytorch/pytorch/pull/4502#discussion_r160202528"}, "pull_request": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/4502"}}, "body_html": "<p>The overhead is ~350000 microseconds the first time it's called (on my machine), and ~6 microseconds every time after that. Is that reasonable?</p>", "body_text": "The overhead is ~350000 microseconds the first time it's called (on my machine), and ~6 microseconds every time after that. Is that reasonable?", "in_reply_to_id": 159996825}