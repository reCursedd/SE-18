{"url": "https://api.github.com/repos/pytorch/pytorch/issues/comments/284085505", "html_url": "https://github.com/pytorch/pytorch/issues/914#issuecomment-284085505", "issue_url": "https://api.github.com/repos/pytorch/pytorch/issues/914", "id": 284085505, "node_id": "MDEyOklzc3VlQ29tbWVudDI4NDA4NTUwNQ==", "user": {"login": "jekbradbury", "id": 11729078, "node_id": "MDQ6VXNlcjExNzI5MDc4", "avatar_url": "https://avatars2.githubusercontent.com/u/11729078?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jekbradbury", "html_url": "https://github.com/jekbradbury", "followers_url": "https://api.github.com/users/jekbradbury/followers", "following_url": "https://api.github.com/users/jekbradbury/following{/other_user}", "gists_url": "https://api.github.com/users/jekbradbury/gists{/gist_id}", "starred_url": "https://api.github.com/users/jekbradbury/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jekbradbury/subscriptions", "organizations_url": "https://api.github.com/users/jekbradbury/orgs", "repos_url": "https://api.github.com/users/jekbradbury/repos", "events_url": "https://api.github.com/users/jekbradbury/events{/privacy}", "received_events_url": "https://api.github.com/users/jekbradbury/received_events", "type": "User", "site_admin": false}, "created_at": "2017-03-03T22:16:47Z", "updated_at": "2017-03-03T22:16:47Z", "author_association": "CONTRIBUTOR", "body_html": "<p>I'm in favor of flattening; I think copying buffers at runtime is Not Good and we don't really have a choice but to fit the wrapper as closely as possible to things CUDNN wants (as you did with the packed input arrays).<br>\nBTW Chainer's <code>functions.n_step_lstm</code> copies buffers at runtime, while cudnn.torch and tf.contrib.cudnn_rnn flatten params and allow non-flattened access if the user wants to pull the params out for something else.</p>", "body_text": "I'm in favor of flattening; I think copying buffers at runtime is Not Good and we don't really have a choice but to fit the wrapper as closely as possible to things CUDNN wants (as you did with the packed input arrays).\nBTW Chainer's functions.n_step_lstm copies buffers at runtime, while cudnn.torch and tf.contrib.cudnn_rnn flatten params and allow non-flattened access if the user wants to pull the params out for something else.", "body": "I'm in favor of flattening; I think copying buffers at runtime is Not Good and we don't really have a choice but to fit the wrapper as closely as possible to things CUDNN wants (as you did with the packed input arrays).\r\nBTW Chainer's `functions.n_step_lstm` copies buffers at runtime, while cudnn.torch and tf.contrib.cudnn_rnn flatten params and allow non-flattened access if the user wants to pull the params out for something else."}