{"url": "https://api.github.com/repos/pytorch/pytorch/issues/comments/435204326", "html_url": "https://github.com/pytorch/pytorch/issues/13386#issuecomment-435204326", "issue_url": "https://api.github.com/repos/pytorch/pytorch/issues/13386", "id": 435204326, "node_id": "MDEyOklzc3VlQ29tbWVudDQzNTIwNDMyNg==", "user": {"login": "colesbury", "id": 655866, "node_id": "MDQ6VXNlcjY1NTg2Ng==", "avatar_url": "https://avatars1.githubusercontent.com/u/655866?v=4", "gravatar_id": "", "url": "https://api.github.com/users/colesbury", "html_url": "https://github.com/colesbury", "followers_url": "https://api.github.com/users/colesbury/followers", "following_url": "https://api.github.com/users/colesbury/following{/other_user}", "gists_url": "https://api.github.com/users/colesbury/gists{/gist_id}", "starred_url": "https://api.github.com/users/colesbury/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/colesbury/subscriptions", "organizations_url": "https://api.github.com/users/colesbury/orgs", "repos_url": "https://api.github.com/users/colesbury/repos", "events_url": "https://api.github.com/users/colesbury/events{/privacy}", "received_events_url": "https://api.github.com/users/colesbury/received_events", "type": "User", "site_admin": false}, "created_at": "2018-11-01T22:10:20Z", "updated_at": "2018-11-01T22:10:20Z", "author_association": "MEMBER", "body_html": "<p>Yup... looks like we're using floating point calculation:</p>\n<p><div class=\"border rounded-1 my-2\">\n  <div class=\"f6 px-3 py-2 lh-condensed border-bottom bg-gray-light\">\n    <p class=\"mb-0 text-bold\">\n      <a href=\"https://github.com/pytorch/pytorch/blob/26a8bb62ee359d3fa444dc55133f11a4a42f0479/aten/src/THNN/generic/SpatialDilatedMaxPooling.c#L45-L51\">pytorch/aten/src/THNN/generic/SpatialDilatedMaxPooling.c</a>\n    </p>\n    <p class=\"mb-0 text-gray-light\">\n        Lines 45 to 51\n      in\n      <a data-pjax=\"true\" class=\"commit-tease-sha\" href=\"/pytorch/pytorch/commit/26a8bb62ee359d3fa444dc55133f11a4a42f0479\">26a8bb6</a>\n    </p>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper blob-wrapper-embedded data\">\n    <table class=\"highlight tab-size mb-0 js-file-line-container\" data-tab-size=\"8\">\n\n        <tbody><tr class=\"border-0\">\n          <td id=\"L45\" class=\"blob-num border-0 px-3 py-0 bg-white js-line-number\" data-line-number=\"45\"></td>\n          <td id=\"LC45\" class=\"blob-code border-0 px-3 py-0 bg-white blob-code-inner js-file-line\">   outputHeight = (<span class=\"pl-c1\">int64_t</span>)(<span class=\"pl-c1\">ceil</span>((<span class=\"pl-k\">float</span>)(inputHeight - (dilationH * (<span class=\"pl-c1\">kH</span> - <span class=\"pl-c1\">1</span>) + <span class=\"pl-c1\">1</span>) + <span class=\"pl-c1\">2</span>*padH) / dH)) + <span class=\"pl-c1\">1</span>; </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L46\" class=\"blob-num border-0 px-3 py-0 bg-white js-line-number\" data-line-number=\"46\"></td>\n          <td id=\"LC46\" class=\"blob-code border-0 px-3 py-0 bg-white blob-code-inner js-file-line\">   outputWidth  = (<span class=\"pl-c1\">int64_t</span>)(<span class=\"pl-c1\">ceil</span>((<span class=\"pl-k\">float</span>)(inputWidth  - (dilationW * (<span class=\"pl-c1\">kW</span> - <span class=\"pl-c1\">1</span>) + <span class=\"pl-c1\">1</span>) + <span class=\"pl-c1\">2</span>*padW) / dW)) + <span class=\"pl-c1\">1</span>; </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L47\" class=\"blob-num border-0 px-3 py-0 bg-white js-line-number\" data-line-number=\"47\"></td>\n          <td id=\"LC47\" class=\"blob-code border-0 px-3 py-0 bg-white blob-code-inner js-file-line\"> } </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L48\" class=\"blob-num border-0 px-3 py-0 bg-white js-line-number\" data-line-number=\"48\"></td>\n          <td id=\"LC48\" class=\"blob-code border-0 px-3 py-0 bg-white blob-code-inner js-file-line\"> <span class=\"pl-k\">else</span> </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L49\" class=\"blob-num border-0 px-3 py-0 bg-white js-line-number\" data-line-number=\"49\"></td>\n          <td id=\"LC49\" class=\"blob-code border-0 px-3 py-0 bg-white blob-code-inner js-file-line\"> { </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L50\" class=\"blob-num border-0 px-3 py-0 bg-white js-line-number\" data-line-number=\"50\"></td>\n          <td id=\"LC50\" class=\"blob-code border-0 px-3 py-0 bg-white blob-code-inner js-file-line\">   outputHeight = (<span class=\"pl-c1\">int64_t</span>)(<span class=\"pl-c1\">floor</span>((<span class=\"pl-k\">float</span>)(inputHeight - (dilationH * (<span class=\"pl-c1\">kH</span> - <span class=\"pl-c1\">1</span>) + <span class=\"pl-c1\">1</span>) + <span class=\"pl-c1\">2</span>*padH) / dH)) + <span class=\"pl-c1\">1</span>; </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L51\" class=\"blob-num border-0 px-3 py-0 bg-white js-line-number\" data-line-number=\"51\"></td>\n          <td id=\"LC51\" class=\"blob-code border-0 px-3 py-0 bg-white blob-code-inner js-file-line\">   outputWidth  = (<span class=\"pl-c1\">int64_t</span>)(<span class=\"pl-c1\">floor</span>((<span class=\"pl-k\">float</span>)(inputWidth  - (dilationW * (<span class=\"pl-c1\">kW</span> - <span class=\"pl-c1\">1</span>) + <span class=\"pl-c1\">1</span>) + <span class=\"pl-c1\">2</span>*padW) / dW)) + <span class=\"pl-c1\">1</span>; </td>\n        </tr>\n    </tbody></table>\n  </div>\n</div>\n</p>", "body_text": "Yup... looks like we're using floating point calculation:\n\n  \n    \n      pytorch/aten/src/THNN/generic/SpatialDilatedMaxPooling.c\n    \n    \n        Lines 45 to 51\n      in\n      26a8bb6\n    \n    \n    \n    \n\n        \n          \n             outputHeight = (int64_t)(ceil((float)(inputHeight - (dilationH * (kH - 1) + 1) + 2*padH) / dH)) + 1; \n        \n\n        \n          \n             outputWidth  = (int64_t)(ceil((float)(inputWidth  - (dilationW * (kW - 1) + 1) + 2*padW) / dW)) + 1; \n        \n\n        \n          \n           } \n        \n\n        \n          \n           else \n        \n\n        \n          \n           { \n        \n\n        \n          \n             outputHeight = (int64_t)(floor((float)(inputHeight - (dilationH * (kH - 1) + 1) + 2*padH) / dH)) + 1; \n        \n\n        \n          \n             outputWidth  = (int64_t)(floor((float)(inputWidth  - (dilationW * (kW - 1) + 1) + 2*padW) / dW)) + 1;", "body": "Yup... looks like we're using floating point calculation:\r\n\r\nhttps://github.com/pytorch/pytorch/blob/26a8bb62ee359d3fa444dc55133f11a4a42f0479/aten/src/THNN/generic/SpatialDilatedMaxPooling.c#L45-L51"}