{"url": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/193925229", "pull_request_review_id": 127000230, "id": 193925229, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5MzkyNTIyOQ==", "diff_hunk": "@@ -1,47 +1,95 @@\n-# ---[ GPU files\n-# ------[ cuDNN\n-file(GLOB_RECURSE tmp *_cudnn.cc)\n-set(Caffe2_GPU_SRCS ${Caffe2_GPU_SRCS} ${tmp})\n-# ------[ general GPU\n-file(GLOB_RECURSE tmp *_gpu.cc)\n-set(Caffe2_GPU_SRCS ${Caffe2_GPU_SRCS} ${tmp})\n-# ------[ CUDA sources\n-file(GLOB_RECURSE tmp *.cu)\n-set(Caffe2_GPU_SRCS ${Caffe2_GPU_SRCS} ${tmp})\n-# exclude test files\n-file(GLOB_RECURSE tmp *_test.cc)\n-exclude(Caffe2_GPU_SRCS \"${Caffe2_GPU_SRCS}\" ${tmp})\n-\n-# ---[ CPU files.\n-file(GLOB_RECURSE tmp *.cc)\n-set(Caffe2_CPU_SRCS ${Caffe2_CPU_SRCS} ${tmp})\n-# exclude test files and gpu files\n-file(GLOB_RECURSE tmp *_test.cc)\n-exclude(Caffe2_CPU_SRCS \"${Caffe2_CPU_SRCS}\" ${tmp})\n-exclude(Caffe2_CPU_SRCS \"${Caffe2_CPU_SRCS}\" ${Caffe2_GPU_SRCS})\n+project(c10_utils CXX C)", "path": "caffe2/utils/CMakeLists.txt", "position": null, "original_position": 22, "commit_id": "429a38e920e8929b67ee433f65aba1a18fcbee98", "original_commit_id": "54d532a55e3598afd6fc0befc6438874d87a6e7d", "user": {"login": "smessmer", "id": 2373925, "node_id": "MDQ6VXNlcjIzNzM5MjU=", "avatar_url": "https://avatars3.githubusercontent.com/u/2373925?v=4", "gravatar_id": "", "url": "https://api.github.com/users/smessmer", "html_url": "https://github.com/smessmer", "followers_url": "https://api.github.com/users/smessmer/followers", "following_url": "https://api.github.com/users/smessmer/following{/other_user}", "gists_url": "https://api.github.com/users/smessmer/gists{/gist_id}", "starred_url": "https://api.github.com/users/smessmer/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/smessmer/subscriptions", "organizations_url": "https://api.github.com/users/smessmer/orgs", "repos_url": "https://api.github.com/users/smessmer/repos", "events_url": "https://api.github.com/users/smessmer/events{/privacy}", "received_events_url": "https://api.github.com/users/smessmer/received_events", "type": "User", "site_admin": false}, "body": "Short term: This allows me to enforce higher code quality standards for new source files (i.e. more warnings flags) without having to change existing code all at once.\r\n\r\nLong term: I think we should move towards a more modularized build setup throughout the whole code base, see also the quip document I wrote about this. That would actually  make the cmake setup simpler and easier to understand, not more difficult.", "created_at": "2018-06-08T00:30:48Z", "updated_at": "2018-11-23T15:45:12Z", "html_url": "https://github.com/pytorch/pytorch/pull/8264#discussion_r193925229", "pull_request_url": "https://api.github.com/repos/pytorch/pytorch/pulls/8264", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/193925229"}, "html": {"href": "https://github.com/pytorch/pytorch/pull/8264#discussion_r193925229"}, "pull_request": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/8264"}}, "body_html": "<p>Short term: This allows me to enforce higher code quality standards for new source files (i.e. more warnings flags) without having to change existing code all at once.</p>\n<p>Long term: I think we should move towards a more modularized build setup throughout the whole code base, see also the quip document I wrote about this. That would actually  make the cmake setup simpler and easier to understand, not more difficult.</p>", "body_text": "Short term: This allows me to enforce higher code quality standards for new source files (i.e. more warnings flags) without having to change existing code all at once.\nLong term: I think we should move towards a more modularized build setup throughout the whole code base, see also the quip document I wrote about this. That would actually  make the cmake setup simpler and easier to understand, not more difficult.", "in_reply_to_id": 193924570}