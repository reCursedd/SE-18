{"url": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/167352163", "pull_request_review_id": 95570070, "id": 167352163, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE2NzM1MjE2Mw==", "diff_hunk": "@@ -794,42 +794,47 @@ def forward(self, input1, input2, target):\n         return F.margin_ranking_loss(input1, input2, target, self.margin, self.size_average)\n \n \n-class MultiMarginLoss(Module):\n+class MultiMarginLoss(_WeightedLoss):\n     r\"\"\"Creates a criterion that optimizes a multi-class classification hinge\n     loss (margin-based loss) between input `x` (a 2D mini-batch `Tensor`) and\n     output `y` (which is a 1D tensor of target class indices,\n     `0` <= `y` <= `x.size(1)`):\n \n     For each mini-batch sample::\n \n-        loss(x, y) = sum_i(max(0, (margin - x[y] + x[i]))^p) / x.size(0)\n+        loss(x, y) = sum_i(max(0, w[y] * (margin - x[y] + x[i]))^p) / x.size(0)\n                      where `i == 0` to `x.size(0)` and `i != y`.\n \n-    Optionally, you can give non-equal weighting on the classes by passing\n-    a 1D `weight` tensor into the constructor.\n-\n-    The loss function then becomes:\n-\n-        loss(x, y) = sum_i(max(0, w[y] * (margin - x[y] - x[i]))^p) / x.size(0)\n+    Args:A", "path": "torch/nn/modules/loss.py", "position": null, "original_position": 23, "commit_id": "c6b323d2569e8b07f62a3aced32881c4c636d42f", "original_commit_id": "5eb259c5b161f87b924f4685205ab3d55f369072", "user": {"login": "SsnL", "id": 5674597, "node_id": "MDQ6VXNlcjU2NzQ1OTc=", "avatar_url": "https://avatars2.githubusercontent.com/u/5674597?v=4", "gravatar_id": "", "url": "https://api.github.com/users/SsnL", "html_url": "https://github.com/SsnL", "followers_url": "https://api.github.com/users/SsnL/followers", "following_url": "https://api.github.com/users/SsnL/following{/other_user}", "gists_url": "https://api.github.com/users/SsnL/gists{/gist_id}", "starred_url": "https://api.github.com/users/SsnL/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/SsnL/subscriptions", "organizations_url": "https://api.github.com/users/SsnL/orgs", "repos_url": "https://api.github.com/users/SsnL/repos", "events_url": "https://api.github.com/users/SsnL/events{/privacy}", "received_events_url": "https://api.github.com/users/SsnL/received_events", "type": "User", "site_admin": false}, "body": "nit: extra A", "created_at": "2018-02-09T21:36:15Z", "updated_at": "2018-11-23T15:39:26Z", "html_url": "https://github.com/pytorch/pytorch/pull/5150#discussion_r167352163", "pull_request_url": "https://api.github.com/repos/pytorch/pytorch/pulls/5150", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/167352163"}, "html": {"href": "https://github.com/pytorch/pytorch/pull/5150#discussion_r167352163"}, "pull_request": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/5150"}}, "body_html": "<p>nit: extra A</p>", "body_text": "nit: extra A"}