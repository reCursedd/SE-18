{"url": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/158174813", "pull_request_review_id": 84942799, "id": 158174813, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE1ODE3NDgxMw==", "diff_hunk": "@@ -712,12 +712,17 @@ std::tuple<Tensor, Tensor, Tensor> batchnorm_double_backward(\n     const Tensor & ggB,\n     const Tensor & gO,\n     double eps,\n-    const Tensor & save_mean, // not Variable\n-    const Tensor & save_std, // not Variable\n-    const Tensor & running_mean, // not Variable\n-    const Tensor & running_var, // not Variable\n+    const Tensor & save_mean_v,\n+    const Tensor & save_std_v,\n+    const Tensor & running_mean_v,\n+    const Tensor & running_var_v,\n     bool training) {\n \n+  const Tensor& save_mean = static_cast<const Variable&>(save_mean_v).data();", "path": "tools/autograd/templates/Functions.cpp", "position": null, "original_position": 14, "commit_id": "c80cafb1f3ad9221fe8aaa12a2eb31e8547082a6", "original_commit_id": "3e007d5c9f084b48f7efb179fd08453a101ef057", "user": {"login": "ezyang", "id": 13564, "node_id": "MDQ6VXNlcjEzNTY0", "avatar_url": "https://avatars0.githubusercontent.com/u/13564?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ezyang", "html_url": "https://github.com/ezyang", "followers_url": "https://api.github.com/users/ezyang/followers", "following_url": "https://api.github.com/users/ezyang/following{/other_user}", "gists_url": "https://api.github.com/users/ezyang/gists{/gist_id}", "starred_url": "https://api.github.com/users/ezyang/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ezyang/subscriptions", "organizations_url": "https://api.github.com/users/ezyang/orgs", "repos_url": "https://api.github.com/users/ezyang/repos", "events_url": "https://api.github.com/users/ezyang/events{/privacy}", "received_events_url": "https://api.github.com/users/ezyang/received_events", "type": "User", "site_admin": false}, "body": "The back story is I couldn't figure out if it was a supported operation to directly pass Tensors (not Variables) to an ATen derivative function, so I compromised with turning them all into Variables and unpacking them. `save_mean` and `save_std` used to be possibly undefined but that broke things, so they're now always defined (I need to fix some stuff elsewhere in this patch, as you have noticed).", "created_at": "2017-12-21T00:59:59Z", "updated_at": "2018-11-23T15:37:35Z", "html_url": "https://github.com/pytorch/pytorch/pull/4285#discussion_r158174813", "pull_request_url": "https://api.github.com/repos/pytorch/pytorch/pulls/4285", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/158174813"}, "html": {"href": "https://github.com/pytorch/pytorch/pull/4285#discussion_r158174813"}, "pull_request": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/4285"}}, "body_html": "<p>The back story is I couldn't figure out if it was a supported operation to directly pass Tensors (not Variables) to an ATen derivative function, so I compromised with turning them all into Variables and unpacking them. <code>save_mean</code> and <code>save_std</code> used to be possibly undefined but that broke things, so they're now always defined (I need to fix some stuff elsewhere in this patch, as you have noticed).</p>", "body_text": "The back story is I couldn't figure out if it was a supported operation to directly pass Tensors (not Variables) to an ATen derivative function, so I compromised with turning them all into Variables and unpacking them. save_mean and save_std used to be possibly undefined but that broke things, so they're now always defined (I need to fix some stuff elsewhere in this patch, as you have noticed).", "in_reply_to_id": 158174161}