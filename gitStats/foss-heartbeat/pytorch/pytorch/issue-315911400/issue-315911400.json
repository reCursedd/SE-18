{"url": "https://api.github.com/repos/pytorch/pytorch/issues/6767", "repository_url": "https://api.github.com/repos/pytorch/pytorch", "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/6767/labels{/name}", "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/6767/comments", "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/6767/events", "html_url": "https://github.com/pytorch/pytorch/issues/6767", "id": 315911400, "node_id": "MDU6SXNzdWUzMTU5MTE0MDA=", "number": 6767, "title": "Mis-sized out parameter silently ignores strides", "user": {"login": "ezyang", "id": 13564, "node_id": "MDQ6VXNlcjEzNTY0", "avatar_url": "https://avatars0.githubusercontent.com/u/13564?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ezyang", "html_url": "https://github.com/ezyang", "followers_url": "https://api.github.com/users/ezyang/followers", "following_url": "https://api.github.com/users/ezyang/following{/other_user}", "gists_url": "https://api.github.com/users/ezyang/gists{/gist_id}", "starred_url": "https://api.github.com/users/ezyang/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ezyang/subscriptions", "organizations_url": "https://api.github.com/users/ezyang/orgs", "repos_url": "https://api.github.com/users/ezyang/repos", "events_url": "https://api.github.com/users/ezyang/events{/privacy}", "received_events_url": "https://api.github.com/users/ezyang/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 443483881, "node_id": "MDU6TGFiZWw0NDM0ODM4ODE=", "url": "https://api.github.com/repos/pytorch/pytorch/labels/todo", "name": "todo", "color": "c2e0c6", "default": false}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-04-19T14:48:13Z", "updated_at": "2018-05-14T19:51:22Z", "closed_at": null, "author_association": "CONTRIBUTOR", "body_html": "<p>In this example, the output size of arange is correct, and the output gets correctly strided:</p>\n<pre><code>&gt;&gt;&gt; x = torch.zeros(3,3).as_strided(storage_offset=1, size=(2,2), stride=(4,1))\n&gt;&gt;&gt; torch.arange(1,5,out=x)\ntensor([[ 1.0000,  2.0000],\n        [ 3.0000,  4.0000]])\n&gt;&gt;&gt; x\ntensor([[ 1.0000,  2.0000],\n        [ 3.0000,  4.0000]])\n&gt;&gt;&gt; x.storage()\n 0.0\n 1.0\n 2.0\n 0.0\n 0.0\n 3.0\n 4.0\n 0.0\n 0.0\n[torch.FloatStorage of size 9]\n</code></pre>\n<p>In this example, the arange is a different size than x and we silently lose striding.</p>\n<pre><code>&gt;&gt;&gt; x = torch.zeros(3,3).as_strided(storage_offset=1, size=(2,2), stride=(4,1))\n&gt;&gt;&gt; torch.arange(1,4,out=x)\ntensor([ 1.0000,  2.0000,  3.0000])\n&gt;&gt;&gt; x\ntensor([ 1.0000,  2.0000,  3.0000])\n&gt;&gt;&gt; x.storage()\n 0.0\n 1.0\n 2.0\n 3.0\n 0.0\n 0.0\n 0.0\n 0.0\n 0.0\n[torch.FloatStorage of size 9]\n</code></pre>\n<p>Maybe this should be error? Asking for C10.</p>", "body_text": "In this example, the output size of arange is correct, and the output gets correctly strided:\n>>> x = torch.zeros(3,3).as_strided(storage_offset=1, size=(2,2), stride=(4,1))\n>>> torch.arange(1,5,out=x)\ntensor([[ 1.0000,  2.0000],\n        [ 3.0000,  4.0000]])\n>>> x\ntensor([[ 1.0000,  2.0000],\n        [ 3.0000,  4.0000]])\n>>> x.storage()\n 0.0\n 1.0\n 2.0\n 0.0\n 0.0\n 3.0\n 4.0\n 0.0\n 0.0\n[torch.FloatStorage of size 9]\n\nIn this example, the arange is a different size than x and we silently lose striding.\n>>> x = torch.zeros(3,3).as_strided(storage_offset=1, size=(2,2), stride=(4,1))\n>>> torch.arange(1,4,out=x)\ntensor([ 1.0000,  2.0000,  3.0000])\n>>> x\ntensor([ 1.0000,  2.0000,  3.0000])\n>>> x.storage()\n 0.0\n 1.0\n 2.0\n 3.0\n 0.0\n 0.0\n 0.0\n 0.0\n 0.0\n[torch.FloatStorage of size 9]\n\nMaybe this should be error? Asking for C10.", "body": "In this example, the output size of arange is correct, and the output gets correctly strided:\r\n\r\n```\r\n>>> x = torch.zeros(3,3).as_strided(storage_offset=1, size=(2,2), stride=(4,1))\r\n>>> torch.arange(1,5,out=x)\r\ntensor([[ 1.0000,  2.0000],\r\n        [ 3.0000,  4.0000]])\r\n>>> x\r\ntensor([[ 1.0000,  2.0000],\r\n        [ 3.0000,  4.0000]])\r\n>>> x.storage()\r\n 0.0\r\n 1.0\r\n 2.0\r\n 0.0\r\n 0.0\r\n 3.0\r\n 4.0\r\n 0.0\r\n 0.0\r\n[torch.FloatStorage of size 9]\r\n```\r\n\r\nIn this example, the arange is a different size than x and we silently lose striding.\r\n\r\n```\r\n>>> x = torch.zeros(3,3).as_strided(storage_offset=1, size=(2,2), stride=(4,1))\r\n>>> torch.arange(1,4,out=x)\r\ntensor([ 1.0000,  2.0000,  3.0000])\r\n>>> x\r\ntensor([ 1.0000,  2.0000,  3.0000])\r\n>>> x.storage()\r\n 0.0\r\n 1.0\r\n 2.0\r\n 3.0\r\n 0.0\r\n 0.0\r\n 0.0\r\n 0.0\r\n 0.0\r\n[torch.FloatStorage of size 9]\r\n```\r\n\r\nMaybe this should be error? Asking for C10."}