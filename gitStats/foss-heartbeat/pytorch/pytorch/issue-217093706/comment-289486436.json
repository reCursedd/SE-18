{"url": "https://api.github.com/repos/pytorch/pytorch/issues/comments/289486436", "html_url": "https://github.com/pytorch/pytorch/issues/1110#issuecomment-289486436", "issue_url": "https://api.github.com/repos/pytorch/pytorch/issues/1110", "id": 289486436, "node_id": "MDEyOklzc3VlQ29tbWVudDI4OTQ4NjQzNg==", "user": {"login": "soumith", "id": 1310570, "node_id": "MDQ6VXNlcjEzMTA1NzA=", "avatar_url": "https://avatars0.githubusercontent.com/u/1310570?v=4", "gravatar_id": "", "url": "https://api.github.com/users/soumith", "html_url": "https://github.com/soumith", "followers_url": "https://api.github.com/users/soumith/followers", "following_url": "https://api.github.com/users/soumith/following{/other_user}", "gists_url": "https://api.github.com/users/soumith/gists{/gist_id}", "starred_url": "https://api.github.com/users/soumith/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/soumith/subscriptions", "organizations_url": "https://api.github.com/users/soumith/orgs", "repos_url": "https://api.github.com/users/soumith/repos", "events_url": "https://api.github.com/users/soumith/events{/privacy}", "received_events_url": "https://api.github.com/users/soumith/received_events", "type": "User", "site_admin": false}, "created_at": "2017-03-27T15:19:14Z", "updated_at": "2017-03-27T15:19:14Z", "author_association": "MEMBER", "body_html": "<p>Generally, you can achieve this with plain autograd, for example:</p>\n<pre><code>y = foo(x)\nz = -1*y\n</code></pre>\n<p>z will flip the outputs and gradients.<br>\nNow if you ONLY want to reverse gradients, two ways:</p>\n<ol>\n<li>\n<p>Hooks. For example:<br>\n<a href=\"https://discuss.pytorch.org/t/updating-the-parameters-of-a-few-nodes-in-a-pre-trained-network-during-training/1221/5\" rel=\"nofollow\">https://discuss.pytorch.org/t/updating-the-parameters-of-a-few-nodes-in-a-pre-trained-network-during-training/1221/5</a></p>\n</li>\n<li>\n<p>Have a gradient reversal function:<br>\nNow, I am not sure if the use-cases for this are that great that we need a separate Function / Module for this. My understanding is that this is rare and when needed can be done with hooks or with autograd.</p>\n</li>\n</ol>", "body_text": "Generally, you can achieve this with plain autograd, for example:\ny = foo(x)\nz = -1*y\n\nz will flip the outputs and gradients.\nNow if you ONLY want to reverse gradients, two ways:\n\n\nHooks. For example:\nhttps://discuss.pytorch.org/t/updating-the-parameters-of-a-few-nodes-in-a-pre-trained-network-during-training/1221/5\n\n\nHave a gradient reversal function:\nNow, I am not sure if the use-cases for this are that great that we need a separate Function / Module for this. My understanding is that this is rare and when needed can be done with hooks or with autograd.", "body": "Generally, you can achieve this with plain autograd, for example:\r\n\r\n```\r\ny = foo(x)\r\nz = -1*y\r\n```\r\nz will flip the outputs and gradients.\r\nNow if you ONLY want to reverse gradients, two ways:\r\n\r\n1. Hooks. For example:\r\nhttps://discuss.pytorch.org/t/updating-the-parameters-of-a-few-nodes-in-a-pre-trained-network-during-training/1221/5\r\n\r\n2. Have a gradient reversal function:\r\nNow, I am not sure if the use-cases for this are that great that we need a separate Function / Module for this. My understanding is that this is rare and when needed can be done with hooks or with autograd.\r\n\r\n\r\n"}