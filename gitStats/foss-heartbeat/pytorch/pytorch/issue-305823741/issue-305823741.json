{"url": "https://api.github.com/repos/pytorch/pytorch/issues/5831", "repository_url": "https://api.github.com/repos/pytorch/pytorch", "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/5831/labels{/name}", "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/5831/comments", "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/5831/events", "html_url": "https://github.com/pytorch/pytorch/issues/5831", "id": 305823741, "node_id": "MDU6SXNzdWUzMDU4MjM3NDE=", "number": 5831, "title": "master build failure: error related to templates", "user": {"login": "sorrge", "id": 4583935, "node_id": "MDQ6VXNlcjQ1ODM5MzU=", "avatar_url": "https://avatars3.githubusercontent.com/u/4583935?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sorrge", "html_url": "https://github.com/sorrge", "followers_url": "https://api.github.com/users/sorrge/followers", "following_url": "https://api.github.com/users/sorrge/following{/other_user}", "gists_url": "https://api.github.com/users/sorrge/gists{/gist_id}", "starred_url": "https://api.github.com/users/sorrge/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sorrge/subscriptions", "organizations_url": "https://api.github.com/users/sorrge/orgs", "repos_url": "https://api.github.com/users/sorrge/repos", "events_url": "https://api.github.com/users/sorrge/events{/privacy}", "received_events_url": "https://api.github.com/users/sorrge/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2018-03-16T07:11:45Z", "updated_at": "2018-04-04T21:32:36Z", "closed_at": null, "author_association": "NONE", "body_html": "<ul>\n<li>OS: Debian stretch</li>\n<li>PyTorch version: git master</li>\n<li>How you installed PyTorch (conda, pip, source): git clone --recursive</li>\n<li>Python version: 3.6</li>\n<li>CUDA/cuDNN version: 9.0 / 7</li>\n<li>GPU models and configuration: 1080Ti</li>\n<li>GCC version (if compiling from source): 6.3.0</li>\n</ul>\n<p>Doing python setup.py install, I get hundreds of errors related to template arguments. The first one is:</p>\n<pre><code>[ 53%] Building NVCC (Device) object src/ATen/CMakeFiles/ATen.dir/native/cuda/ATen_generated_Unique.cu\n.o\n/path_to_pytorch_src/pytorch/aten/src/ATen/native/cuda/Embedding.cu(36): warning: function\n \"__any\"\n/usr/local/cuda/include/device_atomic_functions.h(180): here was declared deprecated (\"__any() is depr\necated in favor of __any_sync() and may be removed in a future release (Use -Wno-deprecated-declaratio\nns to suppress this warning).\")\n\n/usr/include/c++/6/tuple: In instantiation of \u2018static constexpr bool std::_TC&lt;&lt;anonymous&gt;, _Elements&gt;:\n:_MoveConstructibleTuple() [with _UElements = {std::tuple&lt;at::Tensor&amp;, at::Tensor&amp;, at::Tensor&amp;&gt;}; boo\nl &lt;anonymous&gt; = true; _Elements = {at::Tensor&amp;, at::Tensor&amp;, at::Tensor&amp;}]\u2019:\n/usr/include/c++/6/tuple:626:248:   required by substitution of \u2018template&lt;class ... _UElements, typena\nme std::enable_if&lt;(((std::_TC&lt;(sizeof... (_UElements) == 1), at::Tensor&amp;, at::Tensor&amp;, at::Tensor&amp;&gt;::_\nNotSameTuple&lt;_UElements ...&gt;() &amp;&amp; std::_TC&lt;(1ul == sizeof... (_UElements)), at::Tensor&amp;, at::Tensor&amp;,\nat::Tensor&amp;&gt;::_MoveConstructibleTuple&lt;_UElements ...&gt;()) &amp;&amp; std::_TC&lt;(1ul == sizeof... (_UElements)),\nat::Tensor&amp;, at::Tensor&amp;, at::Tensor&amp;&gt;::_ImplicitlyMoveConvertibleTuple&lt;_UElements ...&gt;()) &amp;&amp; (3ul &gt;=\n1)), bool&gt;::type &lt;anonymous&gt; &gt; constexpr std::tuple&lt; &lt;template-parameter-1-1&gt; &gt;::tuple(_UElements&amp;&amp; ..\n.) [with _UElements = {std::tuple&lt;at::Tensor&amp;, at::Tensor&amp;, at::Tensor&amp;&gt;}; typename std::enable_if&lt;(((\nstd::_TC&lt;(sizeof... (_UElements) == 1), at::Tensor&amp;, at::Tensor&amp;, at::Tensor&amp;&gt;::_NotSameTuple&lt;_UElemen\nts ...&gt;() &amp;&amp; std::_TC&lt;(1ul == sizeof... (_UElements)), at::Tensor&amp;, at::Tensor&amp;, at::Tensor&amp;&gt;::_MoveCo\nnstructibleTuple&lt;_UElements ...&gt;()) &amp;&amp; std::_TC&lt;(1ul == sizeof... (_UElements)), at::Tensor&amp;, at::Tens\nor&amp;, at::Tensor&amp;&gt;::_ImplicitlyMoveConvertibleTuple&lt;_UElements ...&gt;()) &amp;&amp; (3ul &gt;= 1)), bool&gt;::type &lt;ano\nnymous&gt; = &lt;missing&gt;]\u2019\n/path_to_pytorch_src/pytorch/torch/lib/build/aten/src/ATen/ATen/Functions.h:1622:61:   req\nuired from here\n/usr/include/c++/6/tuple:483:67: error: mismatched argument pack lengths while expanding \u2018std::is_cons\ntructible&lt;_Elements, _UElements&amp;&amp;&gt;\u2019\n       return __and_&lt;is_constructible&lt;_Elements, _UElements&amp;&amp;&gt;...&gt;::value;\n                                                                   ^~~~~\n\n</code></pre>\n<p>The others are very similar.</p>", "body_text": "OS: Debian stretch\nPyTorch version: git master\nHow you installed PyTorch (conda, pip, source): git clone --recursive\nPython version: 3.6\nCUDA/cuDNN version: 9.0 / 7\nGPU models and configuration: 1080Ti\nGCC version (if compiling from source): 6.3.0\n\nDoing python setup.py install, I get hundreds of errors related to template arguments. The first one is:\n[ 53%] Building NVCC (Device) object src/ATen/CMakeFiles/ATen.dir/native/cuda/ATen_generated_Unique.cu\n.o\n/path_to_pytorch_src/pytorch/aten/src/ATen/native/cuda/Embedding.cu(36): warning: function\n \"__any\"\n/usr/local/cuda/include/device_atomic_functions.h(180): here was declared deprecated (\"__any() is depr\necated in favor of __any_sync() and may be removed in a future release (Use -Wno-deprecated-declaratio\nns to suppress this warning).\")\n\n/usr/include/c++/6/tuple: In instantiation of \u2018static constexpr bool std::_TC<<anonymous>, _Elements>:\n:_MoveConstructibleTuple() [with _UElements = {std::tuple<at::Tensor&, at::Tensor&, at::Tensor&>}; boo\nl <anonymous> = true; _Elements = {at::Tensor&, at::Tensor&, at::Tensor&}]\u2019:\n/usr/include/c++/6/tuple:626:248:   required by substitution of \u2018template<class ... _UElements, typena\nme std::enable_if<(((std::_TC<(sizeof... (_UElements) == 1), at::Tensor&, at::Tensor&, at::Tensor&>::_\nNotSameTuple<_UElements ...>() && std::_TC<(1ul == sizeof... (_UElements)), at::Tensor&, at::Tensor&,\nat::Tensor&>::_MoveConstructibleTuple<_UElements ...>()) && std::_TC<(1ul == sizeof... (_UElements)),\nat::Tensor&, at::Tensor&, at::Tensor&>::_ImplicitlyMoveConvertibleTuple<_UElements ...>()) && (3ul >=\n1)), bool>::type <anonymous> > constexpr std::tuple< <template-parameter-1-1> >::tuple(_UElements&& ..\n.) [with _UElements = {std::tuple<at::Tensor&, at::Tensor&, at::Tensor&>}; typename std::enable_if<(((\nstd::_TC<(sizeof... (_UElements) == 1), at::Tensor&, at::Tensor&, at::Tensor&>::_NotSameTuple<_UElemen\nts ...>() && std::_TC<(1ul == sizeof... (_UElements)), at::Tensor&, at::Tensor&, at::Tensor&>::_MoveCo\nnstructibleTuple<_UElements ...>()) && std::_TC<(1ul == sizeof... (_UElements)), at::Tensor&, at::Tens\nor&, at::Tensor&>::_ImplicitlyMoveConvertibleTuple<_UElements ...>()) && (3ul >= 1)), bool>::type <ano\nnymous> = <missing>]\u2019\n/path_to_pytorch_src/pytorch/torch/lib/build/aten/src/ATen/ATen/Functions.h:1622:61:   req\nuired from here\n/usr/include/c++/6/tuple:483:67: error: mismatched argument pack lengths while expanding \u2018std::is_cons\ntructible<_Elements, _UElements&&>\u2019\n       return __and_<is_constructible<_Elements, _UElements&&>...>::value;\n                                                                   ^~~~~\n\n\nThe others are very similar.", "body": "- OS: Debian stretch\r\n- PyTorch version: git master\r\n- How you installed PyTorch (conda, pip, source): git clone --recursive\r\n- Python version: 3.6\r\n- CUDA/cuDNN version: 9.0 / 7\r\n- GPU models and configuration: 1080Ti\r\n- GCC version (if compiling from source): 6.3.0\r\n\r\nDoing python setup.py install, I get hundreds of errors related to template arguments. The first one is:\r\n\r\n```\r\n[ 53%] Building NVCC (Device) object src/ATen/CMakeFiles/ATen.dir/native/cuda/ATen_generated_Unique.cu\r\n.o\r\n/path_to_pytorch_src/pytorch/aten/src/ATen/native/cuda/Embedding.cu(36): warning: function\r\n \"__any\"\r\n/usr/local/cuda/include/device_atomic_functions.h(180): here was declared deprecated (\"__any() is depr\r\necated in favor of __any_sync() and may be removed in a future release (Use -Wno-deprecated-declaratio\r\nns to suppress this warning).\")\r\n\r\n/usr/include/c++/6/tuple: In instantiation of \u2018static constexpr bool std::_TC<<anonymous>, _Elements>:\r\n:_MoveConstructibleTuple() [with _UElements = {std::tuple<at::Tensor&, at::Tensor&, at::Tensor&>}; boo\r\nl <anonymous> = true; _Elements = {at::Tensor&, at::Tensor&, at::Tensor&}]\u2019:\r\n/usr/include/c++/6/tuple:626:248:   required by substitution of \u2018template<class ... _UElements, typena\r\nme std::enable_if<(((std::_TC<(sizeof... (_UElements) == 1), at::Tensor&, at::Tensor&, at::Tensor&>::_\r\nNotSameTuple<_UElements ...>() && std::_TC<(1ul == sizeof... (_UElements)), at::Tensor&, at::Tensor&,\r\nat::Tensor&>::_MoveConstructibleTuple<_UElements ...>()) && std::_TC<(1ul == sizeof... (_UElements)),\r\nat::Tensor&, at::Tensor&, at::Tensor&>::_ImplicitlyMoveConvertibleTuple<_UElements ...>()) && (3ul >=\r\n1)), bool>::type <anonymous> > constexpr std::tuple< <template-parameter-1-1> >::tuple(_UElements&& ..\r\n.) [with _UElements = {std::tuple<at::Tensor&, at::Tensor&, at::Tensor&>}; typename std::enable_if<(((\r\nstd::_TC<(sizeof... (_UElements) == 1), at::Tensor&, at::Tensor&, at::Tensor&>::_NotSameTuple<_UElemen\r\nts ...>() && std::_TC<(1ul == sizeof... (_UElements)), at::Tensor&, at::Tensor&, at::Tensor&>::_MoveCo\r\nnstructibleTuple<_UElements ...>()) && std::_TC<(1ul == sizeof... (_UElements)), at::Tensor&, at::Tens\r\nor&, at::Tensor&>::_ImplicitlyMoveConvertibleTuple<_UElements ...>()) && (3ul >= 1)), bool>::type <ano\r\nnymous> = <missing>]\u2019\r\n/path_to_pytorch_src/pytorch/torch/lib/build/aten/src/ATen/ATen/Functions.h:1622:61:   req\r\nuired from here\r\n/usr/include/c++/6/tuple:483:67: error: mismatched argument pack lengths while expanding \u2018std::is_cons\r\ntructible<_Elements, _UElements&&>\u2019\r\n       return __and_<is_constructible<_Elements, _UElements&&>...>::value;\r\n                                                                   ^~~~~\r\n\r\n```\r\nThe others are very similar.\r\n"}