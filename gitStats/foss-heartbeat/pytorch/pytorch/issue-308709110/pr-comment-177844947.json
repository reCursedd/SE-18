{"url": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/177844947", "pull_request_review_id": 107794422, "id": 177844947, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE3Nzg0NDk0Nw==", "diff_hunk": "@@ -40,9 +40,21 @@ void initPythonTracerBindings(PyObject* module_) {\n       ASSERT_UNEXPIRED(\"pop_scope\");\n       s.pop_scope();\n     })\n-    .def(\"export\", [](TracingState& s, const std::vector<at::Tensor>& initializers, int64_t onnx_opset_version) {\n+    .def(\"export\", [](TracingState& s, const std::vector<at::Tensor>& initializers,\n+                      int64_t onnx_opset_version, bool defer_weight_export=false) {\n       ASSERT_UNEXPIRED(\"export\");\n-      return py::bytes(ExportGraph(s.graph, initializers, onnx_opset_version));\n+      std::string graph;\n+      RawDataExportMap export_map;\n+      std::tie(graph, export_map) = ExportGraph(\n+        s.graph, initializers, onnx_opset_version, defer_weight_export);\n+      std::unordered_map<std::string, py::bytes> python_serialized_export_map;\n+      for (auto& kv : export_map) {\n+        auto t = kv.second;\n+        size_t copy_bytes = t.type().elementSizeInBytes() * t.numel();\n+        python_serialized_export_map[kv.first] = py::bytes(static_cast<const char*>(t.data_ptr()), copy_bytes);", "path": "torch/csrc/jit/python_tracer.cpp", "position": null, "original_position": 17, "commit_id": "967e611399a5e3de4fd31a0145b76c324700b3b4", "original_commit_id": "4c6ce01f1de81bb4afba7e1beee0f01dafa9938e", "user": {"login": "ezyang", "id": 13564, "node_id": "MDQ6VXNlcjEzNTY0", "avatar_url": "https://avatars0.githubusercontent.com/u/13564?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ezyang", "html_url": "https://github.com/ezyang", "followers_url": "https://api.github.com/users/ezyang/followers", "following_url": "https://api.github.com/users/ezyang/following{/other_user}", "gists_url": "https://api.github.com/users/ezyang/gists{/gist_id}", "starred_url": "https://api.github.com/users/ezyang/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ezyang/subscriptions", "organizations_url": "https://api.github.com/users/ezyang/orgs", "repos_url": "https://api.github.com/users/ezyang/repos", "events_url": "https://api.github.com/users/ezyang/events{/privacy}", "received_events_url": "https://api.github.com/users/ezyang/received_events", "type": "User", "site_admin": false}, "body": "OK, good enough for now. Worth putting a comment saying that an in-principle unnecessary copy is happening here.", "created_at": "2018-03-28T18:20:36Z", "updated_at": "2018-11-23T15:41:15Z", "html_url": "https://github.com/pytorch/pytorch/pull/6016#discussion_r177844947", "pull_request_url": "https://api.github.com/repos/pytorch/pytorch/pulls/6016", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/177844947"}, "html": {"href": "https://github.com/pytorch/pytorch/pull/6016#discussion_r177844947"}, "pull_request": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/6016"}}, "body_html": "<p>OK, good enough for now. Worth putting a comment saying that an in-principle unnecessary copy is happening here.</p>", "body_text": "OK, good enough for now. Worth putting a comment saying that an in-principle unnecessary copy is happening here."}