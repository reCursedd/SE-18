{"url": "https://api.github.com/repos/pytorch/pytorch/issues/9855", "repository_url": "https://api.github.com/repos/pytorch/pytorch", "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/9855/labels{/name}", "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/9855/comments", "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/9855/events", "html_url": "https://github.com/pytorch/pytorch/pull/9855", "id": 344657272, "node_id": "MDExOlB1bGxSZXF1ZXN0MjA0MDAxOTMy", "number": 9855, "title": "Support production models with predictor benchmark", "user": {"login": "highker", "id": 2192913, "node_id": "MDQ6VXNlcjIxOTI5MTM=", "avatar_url": "https://avatars0.githubusercontent.com/u/2192913?v=4", "gravatar_id": "", "url": "https://api.github.com/users/highker", "html_url": "https://github.com/highker", "followers_url": "https://api.github.com/users/highker/followers", "following_url": "https://api.github.com/users/highker/following{/other_user}", "gists_url": "https://api.github.com/users/highker/gists{/gist_id}", "starred_url": "https://api.github.com/users/highker/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/highker/subscriptions", "organizations_url": "https://api.github.com/users/highker/orgs", "repos_url": "https://api.github.com/users/highker/repos", "events_url": "https://api.github.com/users/highker/events{/privacy}", "received_events_url": "https://api.github.com/users/highker/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 890282107, "node_id": "MDU6TGFiZWw4OTAyODIxMDc=", "url": "https://api.github.com/repos/pytorch/pytorch/labels/caffe2", "name": "caffe2", "color": "210aa8", "default": false}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2018-07-26T00:59:46Z", "updated_at": "2018-07-27T04:40:23Z", "closed_at": "2018-07-27T04:40:23Z", "author_association": "CONTRIBUTOR", "pull_request": {"url": "https://api.github.com/repos/pytorch/pytorch/pulls/9855", "html_url": "https://github.com/pytorch/pytorch/pull/9855", "diff_url": "https://github.com/pytorch/pytorch/pull/9855.diff", "patch_url": "https://github.com/pytorch/pytorch/pull/9855.patch"}, "body_html": "<p>Summary:<br>\nSupport production models with predictor benchmark<br>\nTwo new flags are added:<br>\n<code>--update_prod</code>: pull production data (netdef, input types, input dims) from Hive and store locally<br>\n<code>--use_prod</code>: run benchmark with local production data with the same workload as in production.<br>\nBy default, 300 models will be loaded.</p>\n<p>production vs benchmark<br>\navg net run time:<br>\n(collected by prod: <a href=\"https://fburl.com/scuba/6lb91zfx\" rel=\"nofollow\">https://fburl.com/scuba/6lb91zfx</a> and bench: <a href=\"https://fburl.com/ngjj1dc8\" rel=\"nofollow\">https://fburl.com/ngjj1dc8</a>)<br>\n<strong>prod: <code>408us</code> vs bench: <code>543us</code></strong><br>\n(With prod data distribution, this should be even closer)</p>\n<p>framework overhead (as of 2018-07-22):<br>\nprod:</p>\n<pre><code>9.111%    BlackBoxPredictor::Run\n4.602%    SimpleNet::Run\n2.377%    Operator::Run\n1.786%    BlackBoxPredictor::AllocateMemory\n1.372%    Observable::StartAllObservers\n1.358%    Observable::StartObserver\n1.206%    Blob::GetMutable\n</code></pre>\n<p>bench:</p>\n<pre><code>8.577%    BlackBoxPredictor::operator()\n3.276%    SimpleNet::Run\n1.954%    Operator::Run\n1.697%    BlackBoxPredictor::AllocateMemory\n1.477%    Tensor::ShareData\n1.230%    Blob::GetMutable\n1.034%    Observable::StartObserver\n</code></pre>\n<p>Differential Revision: D8942996</p>", "body_text": "Summary:\nSupport production models with predictor benchmark\nTwo new flags are added:\n--update_prod: pull production data (netdef, input types, input dims) from Hive and store locally\n--use_prod: run benchmark with local production data with the same workload as in production.\nBy default, 300 models will be loaded.\nproduction vs benchmark\navg net run time:\n(collected by prod: https://fburl.com/scuba/6lb91zfx and bench: https://fburl.com/ngjj1dc8)\nprod: 408us vs bench: 543us\n(With prod data distribution, this should be even closer)\nframework overhead (as of 2018-07-22):\nprod:\n9.111%    BlackBoxPredictor::Run\n4.602%    SimpleNet::Run\n2.377%    Operator::Run\n1.786%    BlackBoxPredictor::AllocateMemory\n1.372%    Observable::StartAllObservers\n1.358%    Observable::StartObserver\n1.206%    Blob::GetMutable\n\nbench:\n8.577%    BlackBoxPredictor::operator()\n3.276%    SimpleNet::Run\n1.954%    Operator::Run\n1.697%    BlackBoxPredictor::AllocateMemory\n1.477%    Tensor::ShareData\n1.230%    Blob::GetMutable\n1.034%    Observable::StartObserver\n\nDifferential Revision: D8942996", "body": "Summary:\nSupport production models with predictor benchmark\nTwo new flags are added:\n`--update_prod`: pull production data (netdef, input types, input dims) from Hive and store locally\n`--use_prod`: run benchmark with local production data with the same workload as in production.\nBy default, 300 models will be loaded.\n\nproduction vs benchmark\navg net run time:\n(collected by prod: https://fburl.com/scuba/6lb91zfx and bench: https://fburl.com/ngjj1dc8)\n**prod: `408us` vs bench: `543us`**\n(With prod data distribution, this should be even closer)\n\nframework overhead (as of 2018-07-22):\nprod:\n```\n9.111%    BlackBoxPredictor::Run\n4.602%    SimpleNet::Run\n2.377%    Operator::Run\n1.786%    BlackBoxPredictor::AllocateMemory\n1.372%    Observable::StartAllObservers\n1.358%    Observable::StartObserver\n1.206%    Blob::GetMutable\n```\n\nbench:\n```\n8.577%    BlackBoxPredictor::operator()\n3.276%    SimpleNet::Run\n1.954%    Operator::Run\n1.697%    BlackBoxPredictor::AllocateMemory\n1.477%    Tensor::ShareData\n1.230%    Blob::GetMutable\n1.034%    Observable::StartObserver\n```\n\nDifferential Revision: D8942996\n"}