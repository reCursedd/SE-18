{"url": "https://api.github.com/repos/pytorch/pytorch/issues/comments/335621646", "html_url": "https://github.com/pytorch/pytorch/issues/3001#issuecomment-335621646", "issue_url": "https://api.github.com/repos/pytorch/pytorch/issues/3001", "id": 335621646, "node_id": "MDEyOklzc3VlQ29tbWVudDMzNTYyMTY0Ng==", "user": {"login": "futurulus", "id": 933453, "node_id": "MDQ6VXNlcjkzMzQ1Mw==", "avatar_url": "https://avatars3.githubusercontent.com/u/933453?v=4", "gravatar_id": "", "url": "https://api.github.com/users/futurulus", "html_url": "https://github.com/futurulus", "followers_url": "https://api.github.com/users/futurulus/followers", "following_url": "https://api.github.com/users/futurulus/following{/other_user}", "gists_url": "https://api.github.com/users/futurulus/gists{/gist_id}", "starred_url": "https://api.github.com/users/futurulus/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/futurulus/subscriptions", "organizations_url": "https://api.github.com/users/futurulus/orgs", "repos_url": "https://api.github.com/users/futurulus/repos", "events_url": "https://api.github.com/users/futurulus/events{/privacy}", "received_events_url": "https://api.github.com/users/futurulus/received_events", "type": "User", "site_admin": false}, "created_at": "2017-10-10T22:02:25Z", "updated_at": "2017-10-10T22:02:25Z", "author_association": "NONE", "body_html": "<p>Ah, it works on <code>master</code> for me too. Awesome.</p>\n<p>This:</p>\n<pre><code>torch.LongTensor(idx)\n</code></pre>\n<p>still spins for a while but eventually comes back with</p>\n<pre><code>Traceback (most recent call last):\n  File \"&lt;stdin&gt;\", line 1, in &lt;module&gt;\nRuntimeError: already counted a million dimensions in a given sequence. Most likely your items are also sequences and there's no way to infer how many dimension should the tensor have\n</code></pre>\n<p>It seems natural to me that a Tensor constructor should know to reach into <code>.data</code> if it sees a Variable, but perhaps there are good reasons for it not to. In any case, there's an easy workaround (just use <code>idx.data</code> instead of <code>idx</code>) and a googlable error message.</p>\n<p>Thanks for the quick reply!</p>", "body_text": "Ah, it works on master for me too. Awesome.\nThis:\ntorch.LongTensor(idx)\n\nstill spins for a while but eventually comes back with\nTraceback (most recent call last):\n  File \"<stdin>\", line 1, in <module>\nRuntimeError: already counted a million dimensions in a given sequence. Most likely your items are also sequences and there's no way to infer how many dimension should the tensor have\n\nIt seems natural to me that a Tensor constructor should know to reach into .data if it sees a Variable, but perhaps there are good reasons for it not to. In any case, there's an easy workaround (just use idx.data instead of idx) and a googlable error message.\nThanks for the quick reply!", "body": "Ah, it works on `master` for me too. Awesome.\r\n\r\nThis:\r\n\r\n    torch.LongTensor(idx)\r\n\r\nstill spins for a while but eventually comes back with\r\n\r\n    Traceback (most recent call last):\r\n      File \"<stdin>\", line 1, in <module>\r\n    RuntimeError: already counted a million dimensions in a given sequence. Most likely your items are also sequences and there's no way to infer how many dimension should the tensor have\r\n\r\nIt seems natural to me that a Tensor constructor should know to reach into `.data` if it sees a Variable, but perhaps there are good reasons for it not to. In any case, there's an easy workaround (just use `idx.data` instead of `idx`) and a googlable error message.\r\n\r\nThanks for the quick reply!"}