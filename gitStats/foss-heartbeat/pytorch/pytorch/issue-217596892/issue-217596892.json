{"url": "https://api.github.com/repos/pytorch/pytorch/issues/1129", "repository_url": "https://api.github.com/repos/pytorch/pytorch", "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/1129/labels{/name}", "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/1129/comments", "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/1129/events", "html_url": "https://github.com/pytorch/pytorch/issues/1129", "id": 217596892, "node_id": "MDU6SXNzdWUyMTc1OTY4OTI=", "number": 1129, "title": "Support cast of single-element tensors to numbers", "user": {"login": "vadimkantorov", "id": 1041752, "node_id": "MDQ6VXNlcjEwNDE3NTI=", "avatar_url": "https://avatars0.githubusercontent.com/u/1041752?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vadimkantorov", "html_url": "https://github.com/vadimkantorov", "followers_url": "https://api.github.com/users/vadimkantorov/followers", "following_url": "https://api.github.com/users/vadimkantorov/following{/other_user}", "gists_url": "https://api.github.com/users/vadimkantorov/gists{/gist_id}", "starred_url": "https://api.github.com/users/vadimkantorov/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vadimkantorov/subscriptions", "organizations_url": "https://api.github.com/users/vadimkantorov/orgs", "repos_url": "https://api.github.com/users/vadimkantorov/repos", "events_url": "https://api.github.com/users/vadimkantorov/events{/privacy}", "received_events_url": "https://api.github.com/users/vadimkantorov/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 424131849, "node_id": "MDU6TGFiZWw0MjQxMzE4NDk=", "url": "https://api.github.com/repos/pytorch/pytorch/labels/enhancement", "name": "enhancement", "color": "84b6eb", "default": true}, {"id": 443484050, "node_id": "MDU6TGFiZWw0NDM0ODQwNTA=", "url": "https://api.github.com/repos/pytorch/pytorch/labels/medium%20priority", "name": "medium priority", "color": "fbca04", "default": false}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2017-03-28T15:20:45Z", "updated_at": "2017-10-31T12:52:32Z", "closed_at": "2017-10-31T12:52:32Z", "author_association": "NONE", "body_html": "<div class=\"highlight highlight-source-python\"><pre>t <span class=\"pl-k\">=</span> torch.LongTensor([<span class=\"pl-c1\">1</span>])\nn <span class=\"pl-k\">=</span> <span class=\"pl-v\">long</span>(t) <span class=\"pl-c\"><span class=\"pl-c\">#</span> currently throws</span></pre></div>\n<p>It reads a bit better than <code>t[0]</code> and makes intent clear that the tensor must alway contain only one element. I think in practice it means overriding <code>__int__</code>, <code>__long__</code>, <code>__float__</code>, etc.</p>\n<p>It would be useful for returns of <code>max(dim)</code> over a one-dimensional tensor.</p>\n<p>NumPy supports this as well.</p>", "body_text": "t = torch.LongTensor([1])\nn = long(t) # currently throws\nIt reads a bit better than t[0] and makes intent clear that the tensor must alway contain only one element. I think in practice it means overriding __int__, __long__, __float__, etc.\nIt would be useful for returns of max(dim) over a one-dimensional tensor.\nNumPy supports this as well.", "body": "```python\r\nt = torch.LongTensor([1])\r\nn = long(t) # currently throws\r\n```\r\n\r\nIt reads a bit better than `t[0]` and makes intent clear that the tensor must alway contain only one element. I think in practice it means overriding `__int__`, `__long__`, `__float__`, etc.\r\n\r\nIt would be useful for returns of `max(dim)` over a one-dimensional tensor. \r\n\r\nNumPy supports this as well."}