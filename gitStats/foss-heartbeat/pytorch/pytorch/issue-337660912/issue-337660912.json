{"url": "https://api.github.com/repos/pytorch/pytorch/issues/9114", "repository_url": "https://api.github.com/repos/pytorch/pytorch", "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/9114/labels{/name}", "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/9114/comments", "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/9114/events", "html_url": "https://github.com/pytorch/pytorch/pull/9114", "id": 337660912, "node_id": "MDExOlB1bGxSZXF1ZXN0MTk4Nzg3OTc5", "number": 9114, "title": "Test nn.Module on non-contiguous inputs", "user": {"login": "SsnL", "id": 5674597, "node_id": "MDQ6VXNlcjU2NzQ1OTc=", "avatar_url": "https://avatars2.githubusercontent.com/u/5674597?v=4", "gravatar_id": "", "url": "https://api.github.com/users/SsnL", "html_url": "https://github.com/SsnL", "followers_url": "https://api.github.com/users/SsnL/followers", "following_url": "https://api.github.com/users/SsnL/following{/other_user}", "gists_url": "https://api.github.com/users/SsnL/gists{/gist_id}", "starred_url": "https://api.github.com/users/SsnL/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/SsnL/subscriptions", "organizations_url": "https://api.github.com/users/SsnL/orgs", "repos_url": "https://api.github.com/users/SsnL/repos", "events_url": "https://api.github.com/users/SsnL/events{/privacy}", "received_events_url": "https://api.github.com/users/SsnL/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-07-02T20:59:08Z", "updated_at": "2018-11-23T15:46:41Z", "closed_at": "2018-07-06T04:10:49Z", "author_association": "CONTRIBUTOR", "pull_request": {"url": "https://api.github.com/repos/pytorch/pytorch/pulls/9114", "html_url": "https://github.com/pytorch/pytorch/pull/9114", "diff_url": "https://github.com/pytorch/pytorch/pull/9114.diff", "patch_url": "https://github.com/pytorch/pytorch/pull/9114.patch"}, "body_html": "<ol>\n<li>Let <code>ModuleTest</code> raise when they fail on non-contiguous inputs. Fix legacy modules.</li>\n<li>Fix BN (both THNN and cuDNN) not working on non-contiguous inputs.</li>\n<li>Fix CUDA EmbeddingBag not working on non-contiguous inputs. To prevent calling <code>.contiguous()</code> on in both <code>forward</code> and <code>backward</code>,<br>\na. prefix all current <code>embedding_bag*</code> functions with <code>_</code>, indicating that they require input to be contiguous (there is a check in each function).<br>\nb. create <code>embedding_bag</code>, which makes input arguments <code>.contiguous()</code>, and calls <code>_embedding_bag</code></li>\n<li>Make many ATen <code>embedding*</code> functions to work on non-contiguous inputs so we don't need to call <code>input = input.contiguous()</code> in Python <code>nn.functional.embedding</code>.</li>\n<li>Fix dense-sparse addition when the sparse input is not coalesced and indices or values tensor is not contiguous. This came up in the test cases of Embedding modules with <code>sparse=True</code>. Added tests.</li>\n<li>Update <code>TensorUtils.cpp</code> to use <code>AT_*</code> macros.</li>\n</ol>\n<p>Request:<br>\nreview from <a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=1716488\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/cpuhrsch\">@cpuhrsch</a> on the <code>Embedding*</code> changes.<br>\nreview from <a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=13564\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/ezyang\">@ezyang</a> on ATen sparse &amp; BN changes.</p>", "body_text": "Let ModuleTest raise when they fail on non-contiguous inputs. Fix legacy modules.\nFix BN (both THNN and cuDNN) not working on non-contiguous inputs.\nFix CUDA EmbeddingBag not working on non-contiguous inputs. To prevent calling .contiguous() on in both forward and backward,\na. prefix all current embedding_bag* functions with _, indicating that they require input to be contiguous (there is a check in each function).\nb. create embedding_bag, which makes input arguments .contiguous(), and calls _embedding_bag\nMake many ATen embedding* functions to work on non-contiguous inputs so we don't need to call input = input.contiguous() in Python nn.functional.embedding.\nFix dense-sparse addition when the sparse input is not coalesced and indices or values tensor is not contiguous. This came up in the test cases of Embedding modules with sparse=True. Added tests.\nUpdate TensorUtils.cpp to use AT_* macros.\n\nRequest:\nreview from @cpuhrsch on the Embedding* changes.\nreview from @ezyang on ATen sparse & BN changes.", "body": "1. Let `ModuleTest` raise when they fail on non-contiguous inputs. Fix legacy modules.\r\n2. Fix BN (both THNN and cuDNN) not working on non-contiguous inputs.\r\n3. Fix CUDA EmbeddingBag not working on non-contiguous inputs. To prevent calling `.contiguous()` on in both `forward` and `backward`, \r\n  a. prefix all current `embedding_bag*` functions with `_`, indicating that they require input to be contiguous (there is a check in each function).\r\n  b. create `embedding_bag`, which makes input arguments `.contiguous()`, and calls `_embedding_bag`\r\n3. Make many ATen `embedding*` functions to work on non-contiguous inputs so we don't need to call `input = input.contiguous()` in Python `nn.functional.embedding`.\r\n4. Fix dense-sparse addition when the sparse input is not coalesced and indices or values tensor is not contiguous. This came up in the test cases of Embedding modules with `sparse=True`. Added tests.\r\n5. Update `TensorUtils.cpp` to use `AT_*` macros.\r\n\r\nRequest:\r\nreview from @cpuhrsch on the `Embedding*` changes.\r\nreview from @ezyang on ATen sparse & BN changes.\r\n"}