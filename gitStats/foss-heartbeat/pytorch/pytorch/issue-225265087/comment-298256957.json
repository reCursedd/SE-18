{"url": "https://api.github.com/repos/pytorch/pytorch/issues/comments/298256957", "html_url": "https://github.com/pytorch/pytorch/pull/1405#issuecomment-298256957", "issue_url": "https://api.github.com/repos/pytorch/pytorch/issues/1405", "id": 298256957, "node_id": "MDEyOklzc3VlQ29tbWVudDI5ODI1Njk1Nw==", "user": {"login": "lantiga", "id": 191033, "node_id": "MDQ6VXNlcjE5MTAzMw==", "avatar_url": "https://avatars2.githubusercontent.com/u/191033?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lantiga", "html_url": "https://github.com/lantiga", "followers_url": "https://api.github.com/users/lantiga/followers", "following_url": "https://api.github.com/users/lantiga/following{/other_user}", "gists_url": "https://api.github.com/users/lantiga/gists{/gist_id}", "starred_url": "https://api.github.com/users/lantiga/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lantiga/subscriptions", "organizations_url": "https://api.github.com/users/lantiga/orgs", "repos_url": "https://api.github.com/users/lantiga/repos", "events_url": "https://api.github.com/users/lantiga/events{/privacy}", "received_events_url": "https://api.github.com/users/lantiga/received_events", "type": "User", "site_admin": false}, "created_at": "2017-04-30T21:03:41Z", "updated_at": "2017-04-30T21:03:41Z", "author_association": "COLLABORATOR", "body_html": "<p>I played with a few C++ possibilities for concatenating <code>default_properties</code> to the ones passed to <code>_initFunctionPyTypeObject</code>, but the macro solution felt cleaner. I'll be happy to see C++ alternatives\u00a0though.</p>\n<p>At this point, all changes that were suggested are in.</p>", "body_text": "I played with a few C++ possibilities for concatenating default_properties to the ones passed to _initFunctionPyTypeObject, but the macro solution felt cleaner. I'll be happy to see C++ alternatives\u00a0though.\nAt this point, all changes that were suggested are in.", "body": "I played with a few C++ possibilities for concatenating `default_properties` to the ones passed to `_initFunctionPyTypeObject`, but the macro solution felt cleaner. I'll be happy to see C++ alternatives\u00a0though.\r\n\r\nAt this point, all changes that were suggested are in."}