{"url": "https://api.github.com/repos/pytorch/pytorch/issues/comments/377629890", "html_url": "https://github.com/pytorch/pytorch/pull/6151#issuecomment-377629890", "issue_url": "https://api.github.com/repos/pytorch/pytorch/issues/6151", "id": 377629890, "node_id": "MDEyOklzc3VlQ29tbWVudDM3NzYyOTg5MA==", "user": {"login": "Maratyszcza", "id": 1093985, "node_id": "MDQ6VXNlcjEwOTM5ODU=", "avatar_url": "https://avatars1.githubusercontent.com/u/1093985?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Maratyszcza", "html_url": "https://github.com/Maratyszcza", "followers_url": "https://api.github.com/users/Maratyszcza/followers", "following_url": "https://api.github.com/users/Maratyszcza/following{/other_user}", "gists_url": "https://api.github.com/users/Maratyszcza/gists{/gist_id}", "starred_url": "https://api.github.com/users/Maratyszcza/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Maratyszcza/subscriptions", "organizations_url": "https://api.github.com/users/Maratyszcza/orgs", "repos_url": "https://api.github.com/users/Maratyszcza/repos", "events_url": "https://api.github.com/users/Maratyszcza/events{/privacy}", "received_events_url": "https://api.github.com/users/Maratyszcza/received_events", "type": "User", "site_admin": false}, "created_at": "2018-03-30T21:42:20Z", "updated_at": "2018-03-30T21:42:20Z", "author_association": "CONTRIBUTOR", "body_html": "<p>NNPACK for x86 is not actively optimized for performance, but it is maintained.</p>\n<p>As for the conflict with cpuinfo, I have a better solution. PyTorch now has NNPACK and all its deps as submodules, it could just build them instead of using pre-installed version. NNPACK's CMakeLists has necessary precautions to not build or link <code>cpuinfo</code> twice.</p>", "body_text": "NNPACK for x86 is not actively optimized for performance, but it is maintained.\nAs for the conflict with cpuinfo, I have a better solution. PyTorch now has NNPACK and all its deps as submodules, it could just build them instead of using pre-installed version. NNPACK's CMakeLists has necessary precautions to not build or link cpuinfo twice.", "body": "NNPACK for x86 is not actively optimized for performance, but it is maintained.\r\n\r\nAs for the conflict with cpuinfo, I have a better solution. PyTorch now has NNPACK and all its deps as submodules, it could just build them instead of using pre-installed version. NNPACK's CMakeLists has necessary precautions to not build or link `cpuinfo` twice."}