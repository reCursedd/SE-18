{"url": "https://api.github.com/repos/pytorch/pytorch/issues/comments/376818318", "html_url": "https://github.com/pytorch/pytorch/pull/6059#issuecomment-376818318", "issue_url": "https://api.github.com/repos/pytorch/pytorch/issues/6059", "id": 376818318, "node_id": "MDEyOklzc3VlQ29tbWVudDM3NjgxODMxOA==", "user": {"login": "apaszke", "id": 4583066, "node_id": "MDQ6VXNlcjQ1ODMwNjY=", "avatar_url": "https://avatars3.githubusercontent.com/u/4583066?v=4", "gravatar_id": "", "url": "https://api.github.com/users/apaszke", "html_url": "https://github.com/apaszke", "followers_url": "https://api.github.com/users/apaszke/followers", "following_url": "https://api.github.com/users/apaszke/following{/other_user}", "gists_url": "https://api.github.com/users/apaszke/gists{/gist_id}", "starred_url": "https://api.github.com/users/apaszke/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/apaszke/subscriptions", "organizations_url": "https://api.github.com/users/apaszke/orgs", "repos_url": "https://api.github.com/users/apaszke/repos", "events_url": "https://api.github.com/users/apaszke/events{/privacy}", "received_events_url": "https://api.github.com/users/apaszke/received_events", "type": "User", "site_admin": false}, "created_at": "2018-03-28T09:16:04Z", "updated_at": "2018-03-28T09:16:04Z", "author_association": "MEMBER", "body_html": "<p>Also, a simple way to remove the source information in Python would be to avoid throwing <code>std::runtime_error</code> and throw a subclass instead. Then, try to <code>dynamic_cast</code> the error in <code>HANDLE_TH_ERRORS</code>, and use <code>what_without_location()</code> (a method we implement) instead of <code>what()</code>.</p>", "body_text": "Also, a simple way to remove the source information in Python would be to avoid throwing std::runtime_error and throw a subclass instead. Then, try to dynamic_cast the error in HANDLE_TH_ERRORS, and use what_without_location() (a method we implement) instead of what().", "body": "Also, a simple way to remove the source information in Python would be to avoid throwing `std::runtime_error` and throw a subclass instead. Then, try to `dynamic_cast` the error in `HANDLE_TH_ERRORS`, and use `what_without_location()` (a method we implement) instead of `what()`."}