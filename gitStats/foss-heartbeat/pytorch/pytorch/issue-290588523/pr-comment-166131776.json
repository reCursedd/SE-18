{"url": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/166131776", "pull_request_review_id": 94165058, "id": 166131776, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE2NjEzMTc3Ng==", "diff_hunk": "@@ -38,24 +39,9 @@ def mark_dirty(self, *args):\n         self.dirty_tensors = args\n \n     def mark_shared_storage(self, *pairs):\n-        \"\"\"Marks that given pairs of distinct tensors are sharing storage.\n-\n-        **This should be called at most once, only from inside the**\n-        :func:`forward` **method, and all arguments should be pairs of\n-        (input, output).**\n-\n-        If some of the outputs are going to be tensors sharing storage with\n-        some of the inputs, all pairs of (input_arg, output_arg) should be\n-        given to this function, to ensure correctness checking of in-place\n-        modification. The only exception is when an output is exactly the same\n-        tensor as input (e.g. in-place ops). In such case it's easy to conclude\n-        that they're sharing data, so we don't require specifying such\n-        dependencies.\n-\n-        This function is not needed in most functions. It's primarily used in\n-        indexing and transpose ops.\n-        \"\"\"\n-        self.shared_pairs = pairs\n+        warnings.warn(", "path": "torch/autograd/function.py", "position": 30, "original_position": 30, "commit_id": "a52a6a4055e7bc0053fbc4c65f217b3cb39f0b29", "original_commit_id": "6969af0171d696f4e1fff36692502b2e7a22c592", "user": {"login": "apaszke", "id": 4583066, "node_id": "MDQ6VXNlcjQ1ODMwNjY=", "avatar_url": "https://avatars3.githubusercontent.com/u/4583066?v=4", "gravatar_id": "", "url": "https://api.github.com/users/apaszke", "html_url": "https://github.com/apaszke", "followers_url": "https://api.github.com/users/apaszke/followers", "following_url": "https://api.github.com/users/apaszke/following{/other_user}", "gists_url": "https://api.github.com/users/apaszke/gists{/gist_id}", "starred_url": "https://api.github.com/users/apaszke/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/apaszke/subscriptions", "organizations_url": "https://api.github.com/users/apaszke/orgs", "repos_url": "https://api.github.com/users/apaszke/repos", "events_url": "https://api.github.com/users/apaszke/events{/privacy}", "received_events_url": "https://api.github.com/users/apaszke/received_events", "type": "User", "site_admin": false}, "body": "idk, storages are kind of nice. Can you add a note that says that we don't track `set_`?", "created_at": "2018-02-05T22:25:18Z", "updated_at": "2018-11-23T15:39:07Z", "html_url": "https://github.com/pytorch/pytorch/pull/4786#discussion_r166131776", "pull_request_url": "https://api.github.com/repos/pytorch/pytorch/pulls/4786", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/166131776"}, "html": {"href": "https://github.com/pytorch/pytorch/pull/4786#discussion_r166131776"}, "pull_request": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/4786"}}, "body_html": "<p>idk, storages are kind of nice. Can you add a note that says that we don't track <code>set_</code>?</p>", "body_text": "idk, storages are kind of nice. Can you add a note that says that we don't track set_?", "in_reply_to_id": 163542962}