{"url": "https://api.github.com/repos/pytorch/pytorch/issues/14258", "repository_url": "https://api.github.com/repos/pytorch/pytorch", "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/14258/labels{/name}", "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/14258/comments", "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/14258/events", "html_url": "https://github.com/pytorch/pytorch/issues/14258", "id": 382904760, "node_id": "MDU6SXNzdWUzODI5MDQ3NjA=", "number": 14258, "title": "Support the Android NDK with libtorch", "user": {"login": "Suhail", "id": 66225, "node_id": "MDQ6VXNlcjY2MjI1", "avatar_url": "https://avatars1.githubusercontent.com/u/66225?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Suhail", "html_url": "https://github.com/Suhail", "followers_url": "https://api.github.com/users/Suhail/followers", "following_url": "https://api.github.com/users/Suhail/following{/other_user}", "gists_url": "https://api.github.com/users/Suhail/gists{/gist_id}", "starred_url": "https://api.github.com/users/Suhail/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Suhail/subscriptions", "organizations_url": "https://api.github.com/users/Suhail/orgs", "repos_url": "https://api.github.com/users/Suhail/repos", "events_url": "https://api.github.com/users/Suhail/events{/privacy}", "received_events_url": "https://api.github.com/users/Suhail/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-11-21T00:29:24Z", "updated_at": "2018-11-21T00:39:43Z", "closed_at": null, "author_association": "NONE", "body_html": "<h2><g-emoji class=\"g-emoji\" alias=\"rocket\" fallback-src=\"https://assets-cdn.github.com/images/icons/emoji/unicode/1f680.png\">\ud83d\ude80</g-emoji> Feature</h2>\n<p>Hey folks, I think the best path forward if you want to truly support mobile production environments is to make it easier to allow people to compile libtorch such that it can be used with Android Studio's NDK.</p>\n<p>Right now, given the current state of things, I'm forced to fall back on the protobuf, caffe2 solution. I do understand that things are still unstable &amp; a work in progress.</p>\n<h2>Motivation</h2>\n<p>Current shared/static libs offered in the docs are pre-built for specific architectures &amp; thereby do not allow you to utilize libtorch on a robust set of production devices easily in the real-world.</p>\n<p>For example, in my case, I can't run libtorch even a rooted Android phone because the architecture (aarch64) still has differences in compilation due to the OS/ABI I suspect. The NDK has invested in solving this for developers already via a fairly robust toolchain. It's not obvious how to build pytorch via it &amp; then utilize those various static/shared libs to compile with the NDK.</p>\n<p>Additionally, it's not simple to just compile libtorch on an arm64 machine and run the binary on the phone.</p>\n<h2>Pitch</h2>\n<p>NDK support will dramatically reduce the numerous pipeline of tools required for a mobile production environment.</p>\n<p>This will also help people who do not have the priviledge of developing on a rooted phone &amp; enable fast, client-side inference.</p>\n<h2>Alternatives</h2>\n<p>pytorch -&gt; export to onnx -&gt; caffe2 -&gt; Write C++ w/ NDK -&gt; Java</p>", "body_text": "\ud83d\ude80 Feature\nHey folks, I think the best path forward if you want to truly support mobile production environments is to make it easier to allow people to compile libtorch such that it can be used with Android Studio's NDK.\nRight now, given the current state of things, I'm forced to fall back on the protobuf, caffe2 solution. I do understand that things are still unstable & a work in progress.\nMotivation\nCurrent shared/static libs offered in the docs are pre-built for specific architectures & thereby do not allow you to utilize libtorch on a robust set of production devices easily in the real-world.\nFor example, in my case, I can't run libtorch even a rooted Android phone because the architecture (aarch64) still has differences in compilation due to the OS/ABI I suspect. The NDK has invested in solving this for developers already via a fairly robust toolchain. It's not obvious how to build pytorch via it & then utilize those various static/shared libs to compile with the NDK.\nAdditionally, it's not simple to just compile libtorch on an arm64 machine and run the binary on the phone.\nPitch\nNDK support will dramatically reduce the numerous pipeline of tools required for a mobile production environment.\nThis will also help people who do not have the priviledge of developing on a rooted phone & enable fast, client-side inference.\nAlternatives\npytorch -> export to onnx -> caffe2 -> Write C++ w/ NDK -> Java", "body": "## \ud83d\ude80 Feature\r\n\r\nHey folks, I think the best path forward if you want to truly support mobile production environments is to make it easier to allow people to compile libtorch such that it can be used with Android Studio's NDK.\r\n\r\nRight now, given the current state of things, I'm forced to fall back on the protobuf, caffe2 solution. I do understand that things are still unstable & a work in progress.\r\n\r\n## Motivation\r\n\r\nCurrent shared/static libs offered in the docs are pre-built for specific architectures & thereby do not allow you to utilize libtorch on a robust set of production devices easily in the real-world. \r\n\r\nFor example, in my case, I can't run libtorch even a rooted Android phone because the architecture (aarch64) still has differences in compilation due to the OS/ABI I suspect. The NDK has invested in solving this for developers already via a fairly robust toolchain. It's not obvious how to build pytorch via it & then utilize those various static/shared libs to compile with the NDK.\r\n\r\nAdditionally, it's not simple to just compile libtorch on an arm64 machine and run the binary on the phone.\r\n\r\n## Pitch\r\n\r\nNDK support will dramatically reduce the numerous pipeline of tools required for a mobile production environment.\r\n\r\nThis will also help people who do not have the priviledge of developing on a rooted phone & enable fast, client-side inference.\r\n\r\n## Alternatives\r\n\r\npytorch -> export to onnx -> caffe2 -> Write C++ w/ NDK -> Java\r\n"}