{"url": "https://api.github.com/repos/pytorch/pytorch/issues/comments/384574085", "html_url": "https://github.com/pytorch/pytorch/pull/6970#issuecomment-384574085", "issue_url": "https://api.github.com/repos/pytorch/pytorch/issues/6970", "id": 384574085, "node_id": "MDEyOklzc3VlQ29tbWVudDM4NDU3NDA4NQ==", "user": {"login": "apaszke", "id": 4583066, "node_id": "MDQ6VXNlcjQ1ODMwNjY=", "avatar_url": "https://avatars3.githubusercontent.com/u/4583066?v=4", "gravatar_id": "", "url": "https://api.github.com/users/apaszke", "html_url": "https://github.com/apaszke", "followers_url": "https://api.github.com/users/apaszke/followers", "following_url": "https://api.github.com/users/apaszke/following{/other_user}", "gists_url": "https://api.github.com/users/apaszke/gists{/gist_id}", "starred_url": "https://api.github.com/users/apaszke/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/apaszke/subscriptions", "organizations_url": "https://api.github.com/users/apaszke/orgs", "repos_url": "https://api.github.com/users/apaszke/repos", "events_url": "https://api.github.com/users/apaszke/events{/privacy}", "received_events_url": "https://api.github.com/users/apaszke/received_events", "type": "User", "site_admin": false}, "created_at": "2018-04-26T09:24:54Z", "updated_at": "2018-04-26T09:24:54Z", "author_association": "MEMBER", "body_html": "<p>I can't see why would anyone ever want their communicators to be recreated because the cache is too small to fit them. If anything bad happens then you'll get a pretty clear signal that NCCL2 can't handle your use case and will choose a different backend. If we try to make it work and silently pretend that it's ok, then people will basically waste a lot of time to discover where the bottleneck is, or will simply conclude that PyTorch is slow.</p>\n<p>I'm pretty sure that once you have 10 of them, then adding a few won't really make a difference. I would like to avoid setting an artificial limit, because it should be valid to e.g. have a communicator for every GPU separately.</p>", "body_text": "I can't see why would anyone ever want their communicators to be recreated because the cache is too small to fit them. If anything bad happens then you'll get a pretty clear signal that NCCL2 can't handle your use case and will choose a different backend. If we try to make it work and silently pretend that it's ok, then people will basically waste a lot of time to discover where the bottleneck is, or will simply conclude that PyTorch is slow.\nI'm pretty sure that once you have 10 of them, then adding a few won't really make a difference. I would like to avoid setting an artificial limit, because it should be valid to e.g. have a communicator for every GPU separately.", "body": "I can't see why would anyone ever want their communicators to be recreated because the cache is too small to fit them. If anything bad happens then you'll get a pretty clear signal that NCCL2 can't handle your use case and will choose a different backend. If we try to make it work and silently pretend that it's ok, then people will basically waste a lot of time to discover where the bottleneck is, or will simply conclude that PyTorch is slow.\r\n\r\n I'm pretty sure that once you have 10 of them, then adding a few won't really make a difference. I would like to avoid setting an artificial limit, because it should be valid to e.g. have a communicator for every GPU separately. "}