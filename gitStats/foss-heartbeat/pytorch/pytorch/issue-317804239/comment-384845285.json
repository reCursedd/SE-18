{"url": "https://api.github.com/repos/pytorch/pytorch/issues/comments/384845285", "html_url": "https://github.com/pytorch/pytorch/pull/6970#issuecomment-384845285", "issue_url": "https://api.github.com/repos/pytorch/pytorch/issues/6970", "id": 384845285, "node_id": "MDEyOklzc3VlQ29tbWVudDM4NDg0NTI4NQ==", "user": {"login": "teng-li", "id": 8120856, "node_id": "MDQ6VXNlcjgxMjA4NTY=", "avatar_url": "https://avatars2.githubusercontent.com/u/8120856?v=4", "gravatar_id": "", "url": "https://api.github.com/users/teng-li", "html_url": "https://github.com/teng-li", "followers_url": "https://api.github.com/users/teng-li/followers", "following_url": "https://api.github.com/users/teng-li/following{/other_user}", "gists_url": "https://api.github.com/users/teng-li/gists{/gist_id}", "starred_url": "https://api.github.com/users/teng-li/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/teng-li/subscriptions", "organizations_url": "https://api.github.com/users/teng-li/orgs", "repos_url": "https://api.github.com/users/teng-li/repos", "events_url": "https://api.github.com/users/teng-li/events{/privacy}", "received_events_url": "https://api.github.com/users/teng-li/received_events", "type": "User", "site_admin": false}, "created_at": "2018-04-27T02:29:42Z", "updated_at": "2018-04-27T02:32:23Z", "author_association": "CONTRIBUTOR", "body_html": "<p>The number of groups is much easier to keep track during the program run. Originally when we had one NCCL communicator per group, we know exactly how many NCCL communicators we have. With this change, I am not sure how easy this tracking is. As I said earlier, caching too many communicators is error prone from my conversation with NVIDIA last time, and it's not just about memory usage. Agree d on OOM could be the strategy, but there are more. What the NCCL team told me was that we should only have one communicator as the best strategy.</p>\n<p><a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=17164548\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/FDecaYed\">@FDecaYed</a>, for the scenario you described, can you use two groups instead to achieve the same purpose?</p>", "body_text": "The number of groups is much easier to keep track during the program run. Originally when we had one NCCL communicator per group, we know exactly how many NCCL communicators we have. With this change, I am not sure how easy this tracking is. As I said earlier, caching too many communicators is error prone from my conversation with NVIDIA last time, and it's not just about memory usage. Agree d on OOM could be the strategy, but there are more. What the NCCL team told me was that we should only have one communicator as the best strategy.\n@FDecaYed, for the scenario you described, can you use two groups instead to achieve the same purpose?", "body": "The number of groups is much easier to keep track during the program run. Originally when we had one NCCL communicator per group, we know exactly how many NCCL communicators we have. With this change, I am not sure how easy this tracking is. As I said earlier, caching too many communicators is error prone from my conversation with NVIDIA last time, and it's not just about memory usage. Agree d on OOM could be the strategy, but there are more. What the NCCL team told me was that we should only have one communicator as the best strategy.\r\n\r\n@FDecaYed, for the scenario you described, can you use two groups instead to achieve the same purpose?"}