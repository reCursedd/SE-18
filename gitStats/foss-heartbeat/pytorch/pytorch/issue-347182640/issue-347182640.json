{"url": "https://api.github.com/repos/pytorch/pytorch/issues/10182", "repository_url": "https://api.github.com/repos/pytorch/pytorch", "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/10182/labels{/name}", "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/10182/comments", "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/10182/events", "html_url": "https://github.com/pytorch/pytorch/issues/10182", "id": 347182640, "node_id": "MDU6SXNzdWUzNDcxODI2NDA=", "number": 10182, "title": "[feature request] Treat tensor as tuple of tensors in torch.cat", "user": {"login": "carlosgmartin", "id": 8883917, "node_id": "MDQ6VXNlcjg4ODM5MTc=", "avatar_url": "https://avatars3.githubusercontent.com/u/8883917?v=4", "gravatar_id": "", "url": "https://api.github.com/users/carlosgmartin", "html_url": "https://github.com/carlosgmartin", "followers_url": "https://api.github.com/users/carlosgmartin/followers", "following_url": "https://api.github.com/users/carlosgmartin/following{/other_user}", "gists_url": "https://api.github.com/users/carlosgmartin/gists{/gist_id}", "starred_url": "https://api.github.com/users/carlosgmartin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/carlosgmartin/subscriptions", "organizations_url": "https://api.github.com/users/carlosgmartin/orgs", "repos_url": "https://api.github.com/users/carlosgmartin/repos", "events_url": "https://api.github.com/users/carlosgmartin/events{/privacy}", "received_events_url": "https://api.github.com/users/carlosgmartin/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 7, "created_at": "2018-08-02T21:33:42Z", "updated_at": "2018-08-06T21:32:14Z", "closed_at": "2018-08-06T21:32:14Z", "author_association": "NONE", "body_html": "<h2>Issue description</h2>\n<p>Treat <code>torch.cat(a)</code> as <code>torch.cat(tuple(a))</code> when <code>a</code> is a tensor, like numpy does.</p>\n<h2>Code example</h2>\n<pre><code>import torch\nimport numpy\na = torch.arange(6).reshape(2,3)\nprint(numpy.concatenate(a.numpy()))\nprint(torch.cat(tuple(a)))\nprint(torch.cat(a))\n</code></pre>\n<p>outputs</p>\n<pre><code>array([0, 1, 2, 3, 4, 5])\ntensor([0, 1, 2, 3, 4, 5])\nTraceback (most recent call last):\n  File \"&lt;stdin&gt;\", line 1, in &lt;module&gt;\nTypeError: cat(): argument 'tensors' (position 1) must be tuple of Tensors, not Tensor\n</code></pre>", "body_text": "Issue description\nTreat torch.cat(a) as torch.cat(tuple(a)) when a is a tensor, like numpy does.\nCode example\nimport torch\nimport numpy\na = torch.arange(6).reshape(2,3)\nprint(numpy.concatenate(a.numpy()))\nprint(torch.cat(tuple(a)))\nprint(torch.cat(a))\n\noutputs\narray([0, 1, 2, 3, 4, 5])\ntensor([0, 1, 2, 3, 4, 5])\nTraceback (most recent call last):\n  File \"<stdin>\", line 1, in <module>\nTypeError: cat(): argument 'tensors' (position 1) must be tuple of Tensors, not Tensor", "body": "## Issue description\r\n\r\nTreat `torch.cat(a)` as `torch.cat(tuple(a))` when `a` is a tensor, like numpy does.\r\n\r\n## Code example\r\n\r\n```\r\nimport torch\r\nimport numpy\r\na = torch.arange(6).reshape(2,3)\r\nprint(numpy.concatenate(a.numpy()))\r\nprint(torch.cat(tuple(a)))\r\nprint(torch.cat(a))\r\n```\r\noutputs\r\n```\r\narray([0, 1, 2, 3, 4, 5])\r\ntensor([0, 1, 2, 3, 4, 5])\r\nTraceback (most recent call last):\r\n  File \"<stdin>\", line 1, in <module>\r\nTypeError: cat(): argument 'tensors' (position 1) must be tuple of Tensors, not Tensor\r\n```"}