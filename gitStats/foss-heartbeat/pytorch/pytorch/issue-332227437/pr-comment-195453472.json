{"url": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/195453472", "pull_request_review_id": 128825920, "id": 195453472, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5NTQ1MzQ3Mg==", "diff_hunk": "@@ -48,38 +41,17 @@ class THLongStorageView {\n   */\n \n   THLongStorageView(ArrayRef<int64_t> ref, THLongStorageViewKind kind)\n-  : zero_dim_to_null(false)\n   {\n     // zero_dim_to_one converts an empty ArrayRef into [1]\n-    // zero_dim_to_null converts an empty ArrayRef into a null THLongStorage\n-    // noelem_to_empty makes an ArrayRef of [0] into an empty THLongStorage\n-    bool zero_dim_to_one = false;\n-    bool noelem_to_empty = false;\n-    switch (kind) {\n-      case THLongStorageViewKind::SIZE:\n-        zero_dim_to_one = true;\n-        break;\n-      case THLongStorageViewKind::STRIDE_EMPTY_TENSOR:\n-        zero_dim_to_null = true;\n-        noelem_to_empty = true;\n-        break;\n-      case THLongStorageViewKind::STRIDE_SCALAR:\n-        zero_dim_to_null = true;\n-        break;\n-      case THLongStorageViewKind::LENGTH:\n-        break;\n-    }\n+    bool zero_dim_to_one = kind == THLongStorageViewKind::SIZE_STRIDE;\n+\n     if(zero_dim_to_one && ref.size() == 0) {", "path": "aten/src/ATen/THLongStorageView.h", "position": null, "original_position": 50, "commit_id": "e68512ec9b4cb9d630be1a267570b1f97146127d", "original_commit_id": "7a194a02c0b87e4fe0bb73f7a5f434167ddefa72", "user": {"login": "gchanan", "id": 3768583, "node_id": "MDQ6VXNlcjM3Njg1ODM=", "avatar_url": "https://avatars2.githubusercontent.com/u/3768583?v=4", "gravatar_id": "", "url": "https://api.github.com/users/gchanan", "html_url": "https://github.com/gchanan", "followers_url": "https://api.github.com/users/gchanan/followers", "following_url": "https://api.github.com/users/gchanan/following{/other_user}", "gists_url": "https://api.github.com/users/gchanan/gists{/gist_id}", "starred_url": "https://api.github.com/users/gchanan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/gchanan/subscriptions", "organizations_url": "https://api.github.com/users/gchanan/orgs", "repos_url": "https://api.github.com/users/gchanan/repos", "events_url": "https://api.github.com/users/gchanan/events{/privacy}", "received_events_url": "https://api.github.com/users/gchanan/received_events", "type": "User", "site_admin": false}, "body": "I agree it's not super clear.\r\n\r\nYour first comment is correct \"this conditional didn't go away because it's handling scalars, and scalars aren't being pushed into TH in this PR.\"\r\n\r\n`USE_TH_SCALAR` is there because I basically need to audit all the calls to `_dim()` and the legacy `resize` functions.  Some of them I noticed have code that is incorrect if TH has scalar support.  So it seemed best to fix up everything at once (even if some of the behavior is hidden behind an ifdef) than to leave a FIXME that I will have to figure out again.", "created_at": "2018-06-14T14:49:50Z", "updated_at": "2018-11-23T15:45:33Z", "html_url": "https://github.com/pytorch/pytorch/pull/8468#discussion_r195453472", "pull_request_url": "https://api.github.com/repos/pytorch/pytorch/pulls/8468", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/195453472"}, "html": {"href": "https://github.com/pytorch/pytorch/pull/8468#discussion_r195453472"}, "pull_request": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/8468"}}, "body_html": "<p>I agree it's not super clear.</p>\n<p>Your first comment is correct \"this conditional didn't go away because it's handling scalars, and scalars aren't being pushed into TH in this PR.\"</p>\n<p><code>USE_TH_SCALAR</code> is there because I basically need to audit all the calls to <code>_dim()</code> and the legacy <code>resize</code> functions.  Some of them I noticed have code that is incorrect if TH has scalar support.  So it seemed best to fix up everything at once (even if some of the behavior is hidden behind an ifdef) than to leave a FIXME that I will have to figure out again.</p>", "body_text": "I agree it's not super clear.\nYour first comment is correct \"this conditional didn't go away because it's handling scalars, and scalars aren't being pushed into TH in this PR.\"\nUSE_TH_SCALAR is there because I basically need to audit all the calls to _dim() and the legacy resize functions.  Some of them I noticed have code that is incorrect if TH has scalar support.  So it seemed best to fix up everything at once (even if some of the behavior is hidden behind an ifdef) than to leave a FIXME that I will have to figure out again.", "in_reply_to_id": 195409603}