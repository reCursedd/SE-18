{"url": "https://api.github.com/repos/pytorch/pytorch/issues/8468", "repository_url": "https://api.github.com/repos/pytorch/pytorch", "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/8468/labels{/name}", "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/8468/comments", "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/8468/events", "html_url": "https://github.com/pytorch/pytorch/pull/8468", "id": 332227437, "node_id": "MDExOlB1bGxSZXF1ZXN0MTk0NzYyMDkx", "number": 8468, "title": "Move empty size logic from ATen into TH/THC.", "user": {"login": "gchanan", "id": 3768583, "node_id": "MDQ6VXNlcjM3Njg1ODM=", "avatar_url": "https://avatars2.githubusercontent.com/u/3768583?v=4", "gravatar_id": "", "url": "https://api.github.com/users/gchanan", "html_url": "https://github.com/gchanan", "followers_url": "https://api.github.com/users/gchanan/followers", "following_url": "https://api.github.com/users/gchanan/following{/other_user}", "gists_url": "https://api.github.com/users/gchanan/gists{/gist_id}", "starred_url": "https://api.github.com/users/gchanan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/gchanan/subscriptions", "organizations_url": "https://api.github.com/users/gchanan/orgs", "repos_url": "https://api.github.com/users/gchanan/repos", "events_url": "https://api.github.com/users/gchanan/events{/privacy}", "received_events_url": "https://api.github.com/users/gchanan/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2018-06-14T02:17:32Z", "updated_at": "2018-11-23T15:45:33Z", "closed_at": "2018-06-14T20:56:53Z", "author_association": "CONTRIBUTOR", "pull_request": {"url": "https://api.github.com/repos/pytorch/pytorch/pulls/8468", "html_url": "https://github.com/pytorch/pytorch/pull/8468", "diff_url": "https://github.com/pytorch/pytorch/pull/8468.diff", "patch_url": "https://github.com/pytorch/pytorch/pull/8468.patch"}, "body_html": "<p>The goal here is to unify the tensor representations; since the \"majority\" of the representation is in TH, we push the empty size ({0}) and empty stride ({1}) logic into TH.</p>\n<p>This PR does the following:</p>\n<ol>\n<li>Previously THTensor/THCTensor with dim_ == 0, size == nullptr, stride == nullptr are now dim_ == 1, size == {0}, stride == {1}.</li>\n<li>The logic that previously implemented this at the ATen level (e.g. THLongStorageView STRIDE_EMPTY_TENSOR) is removed.</li>\n<li>The above is pretty clean except for resize/resizeNd logic -- that is still called with nDimension == 0.  So, we rename these to resizeLegacy, resizeNdLegacy, map nDimension == 1<br>\ninto the new regime, and will later write a empty-aware resize/resizeNd and move over the calls to resizeLegacy, resizeNdLegacy.</li>\n<li>Also introduces some ifdefs that are just used for testing:<br>\na) USE_TH_SCALAR: move scalar logic in TH<br>\nb) USE_TH_ZERO_SIZE_DIM: support arbitrary 0-sized dimensions, i.e {...,0,...}.<br>\nThese are just used to write forward-looking correct code while call sites to _dim() (old TH nDimension) and resizeLegacy are updated.</li>\n</ol>", "body_text": "The goal here is to unify the tensor representations; since the \"majority\" of the representation is in TH, we push the empty size ({0}) and empty stride ({1}) logic into TH.\nThis PR does the following:\n\nPreviously THTensor/THCTensor with dim_ == 0, size == nullptr, stride == nullptr are now dim_ == 1, size == {0}, stride == {1}.\nThe logic that previously implemented this at the ATen level (e.g. THLongStorageView STRIDE_EMPTY_TENSOR) is removed.\nThe above is pretty clean except for resize/resizeNd logic -- that is still called with nDimension == 0.  So, we rename these to resizeLegacy, resizeNdLegacy, map nDimension == 1\ninto the new regime, and will later write a empty-aware resize/resizeNd and move over the calls to resizeLegacy, resizeNdLegacy.\nAlso introduces some ifdefs that are just used for testing:\na) USE_TH_SCALAR: move scalar logic in TH\nb) USE_TH_ZERO_SIZE_DIM: support arbitrary 0-sized dimensions, i.e {...,0,...}.\nThese are just used to write forward-looking correct code while call sites to _dim() (old TH nDimension) and resizeLegacy are updated.", "body": "The goal here is to unify the tensor representations; since the \"majority\" of the representation is in TH, we push the empty size ({0}) and empty stride ({1}) logic into TH.\r\n\r\nThis PR does the following:\r\n1) Previously THTensor/THCTensor with dim_ == 0, size == nullptr, stride == nullptr are now dim_ == 1, size == {0}, stride == {1}.\r\n2) The logic that previously implemented this at the ATen level (e.g. THLongStorageView STRIDE_EMPTY_TENSOR) is removed.\r\n3) The above is pretty clean except for resize/resizeNd logic -- that is still called with nDimension == 0.  So, we rename these to resizeLegacy, resizeNdLegacy, map nDimension == 1\r\ninto the new regime, and will later write a empty-aware resize/resizeNd and move over the calls to resizeLegacy, resizeNdLegacy.\r\n4) Also introduces some ifdefs that are just used for testing:\r\na) USE_TH_SCALAR: move scalar logic in TH\r\nb) USE_TH_ZERO_SIZE_DIM: support arbitrary 0-sized dimensions, i.e {...,0,...}.\r\nThese are just used to write forward-looking correct code while call sites to _dim() (old TH nDimension) and resizeLegacy are updated.\r\n\r\n"}