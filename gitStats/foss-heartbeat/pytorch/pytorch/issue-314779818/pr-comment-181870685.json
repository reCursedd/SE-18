{"url": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/181870685", "pull_request_review_id": 112571042, "id": 181870685, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MTg3MDY4NQ==", "diff_hunk": "@@ -0,0 +1,55 @@\n+.. currentmodule:: torch\n+\n+.. _device-doc:\n+\n+torch.device\n+===================================\n+\n+A :class:`torch.device` is an object representing the device on which a :class:`torch.Tensor` is\n+or will be allocated.\n+\n+The :class:`torch.device` contains a device type ('cpu' or 'cuda') and optional device ordinal for the\n+device type.  If the device ordinal is not present, this represents the current device for the device type;\n+e.g. a :class:`torch.Tensor` constructed with device 'cuda' is equivalent to 'cuda:X' where X is the result of\n+:func:`torch.cuda.get_device()`.\n+\n+A :class:`torch.device` can be constructed via a string, a string and device ordinal, or a device ordinal.\n+\n+\n+Via a string:\n+::\n+\n+    >>> torch.device('cuda:0')\n+    device(device_type='cuda', device_index=0)\n+\n+    >>> torch.device('cpu')\n+    device(device_type='cpu')\n+\n+    >>> torch.device('cuda')  # current cuda device\n+    device(device_type='cuda')\n+\n+\n+Via a string and device ordinal:\n+\n+::\n+\n+    >>> torch.device('cuda', 0)\n+    device(device_type='cuda', device_index=0)\n+\n+    >>> torch.device('cpu', 0)\n+    device(device_type='cpu', device_index=0)\n+\n+Via a device ordinal (device ordinals by themselves are treated as cuda devices).\n+\n+::\n+\n+  >>> torch.device(1)\n+  device(device_type='cuda', device_index=1)\n+\n+.. note::\n+   Methods which take a device will generally accept a (properly formatted) string\n+   or integer device ordinal, e.g. the following are all equivalent:\n+\n+   >>> torch.randn((2,3), device=1)", "path": "docs/source/device.rst", "position": null, "original_position": 53, "commit_id": "4d0edb2b079e34c3b4c55e968c63bc53a4760b92", "original_commit_id": "63da2f87667c3b3a25029b1d342ce7fff4b80773", "user": {"login": "apaszke", "id": 4583066, "node_id": "MDQ6VXNlcjQ1ODMwNjY=", "avatar_url": "https://avatars3.githubusercontent.com/u/4583066?v=4", "gravatar_id": "", "url": "https://api.github.com/users/apaszke", "html_url": "https://github.com/apaszke", "followers_url": "https://api.github.com/users/apaszke/followers", "following_url": "https://api.github.com/users/apaszke/following{/other_user}", "gists_url": "https://api.github.com/users/apaszke/gists{/gist_id}", "starred_url": "https://api.github.com/users/apaszke/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/apaszke/subscriptions", "organizations_url": "https://api.github.com/users/apaszke/orgs", "repos_url": "https://api.github.com/users/apaszke/repos", "events_url": "https://api.github.com/users/apaszke/events{/privacy}", "received_events_url": "https://api.github.com/users/apaszke/received_events", "type": "User", "site_admin": false}, "body": "I think our policy for legacy code should be: it works, but we *never* show it in the docs, to avoid spreading it. If someone has been using this way then fine, but if they will look up the docs, then they should see the recommended ways.", "created_at": "2018-04-16T20:15:33Z", "updated_at": "2018-11-23T15:42:33Z", "html_url": "https://github.com/pytorch/pytorch/pull/6633#discussion_r181870685", "pull_request_url": "https://api.github.com/repos/pytorch/pytorch/pulls/6633", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/181870685"}, "html": {"href": "https://github.com/pytorch/pytorch/pull/6633#discussion_r181870685"}, "pull_request": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/6633"}}, "body_html": "<p>I think our policy for legacy code should be: it works, but we <em>never</em> show it in the docs, to avoid spreading it. If someone has been using this way then fine, but if they will look up the docs, then they should see the recommended ways.</p>", "body_text": "I think our policy for legacy code should be: it works, but we never show it in the docs, to avoid spreading it. If someone has been using this way then fine, but if they will look up the docs, then they should see the recommended ways.", "in_reply_to_id": 181853006}