{"url": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/182052728", "pull_request_review_id": 112784987, "id": 182052728, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MjA1MjcyOA==", "diff_hunk": "@@ -0,0 +1,56 @@\n+.. currentmodule:: torch\n+\n+.. _device-doc:\n+\n+torch.device\n+===================================\n+\n+A :class:`torch.device` is an object representing the device on which a :class:`torch.Tensor` is\n+or will be allocated.\n+\n+The :class:`torch.device` contains a device type (``'cpu'`` or ``'cuda'``) and optional device ordinal for the\n+device type.  If the device ordinal is not present, this represents the current device for the device type;\n+e.g. a :class:`torch.Tensor` constructed with device ``'cuda'`` is equivalent to ``'cuda:X'`` where X is the result of\n+:func:`torch.cuda.current_device()`.\n+\n+A :class:`torch.Tensor`'s device can be accessed via the :attr:`Tensor.device` property.\n+\n+A :class:`torch.device` can be constructed via a string or via a string and device ordinal\n+\n+Via a string:\n+::\n+\n+    >>> torch.device('cuda:0')\n+    device(type='cuda', index=0)\n+\n+    >>> torch.device('cpu')\n+    device(type='cpu')\n+\n+    >>> torch.device('cuda')  # current cuda device\n+    device(type='cuda')\n+\n+Via a string and device ordinal:\n+\n+::\n+\n+    >>> torch.device('cuda', 0)\n+    device(type='cuda', index=0)\n+\n+    >>> torch.device('cpu', 0)\n+    device(type='cpu', index=0)\n+\n+.. note::\n+   For legacy reasons, a device can be constructed via a single device ordinal, which is treated", "path": "docs/source/device.rst", "position": 43, "original_position": 43, "commit_id": "4d0edb2b079e34c3b4c55e968c63bc53a4760b92", "original_commit_id": "4d0edb2b079e34c3b4c55e968c63bc53a4760b92", "user": {"login": "apaszke", "id": 4583066, "node_id": "MDQ6VXNlcjQ1ODMwNjY=", "avatar_url": "https://avatars3.githubusercontent.com/u/4583066?v=4", "gravatar_id": "", "url": "https://api.github.com/users/apaszke", "html_url": "https://github.com/apaszke", "followers_url": "https://api.github.com/users/apaszke/followers", "following_url": "https://api.github.com/users/apaszke/following{/other_user}", "gists_url": "https://api.github.com/users/apaszke/gists{/gist_id}", "starred_url": "https://api.github.com/users/apaszke/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/apaszke/subscriptions", "organizations_url": "https://api.github.com/users/apaszke/orgs", "repos_url": "https://api.github.com/users/apaszke/repos", "events_url": "https://api.github.com/users/apaszke/events{/privacy}", "received_events_url": "https://api.github.com/users/apaszke/received_events", "type": "User", "site_admin": false}, "body": "Should we mention this is deprecated?", "created_at": "2018-04-17T12:25:10Z", "updated_at": "2018-11-23T15:42:35Z", "html_url": "https://github.com/pytorch/pytorch/pull/6633#discussion_r182052728", "pull_request_url": "https://api.github.com/repos/pytorch/pytorch/pulls/6633", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/182052728"}, "html": {"href": "https://github.com/pytorch/pytorch/pull/6633#discussion_r182052728"}, "pull_request": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/6633"}}, "body_html": "<p>Should we mention this is deprecated?</p>", "body_text": "Should we mention this is deprecated?"}