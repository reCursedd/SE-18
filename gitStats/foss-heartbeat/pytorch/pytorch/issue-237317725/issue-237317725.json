{"url": "https://api.github.com/repos/pytorch/pytorch/issues/1857", "repository_url": "https://api.github.com/repos/pytorch/pytorch", "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/1857/labels{/name}", "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/1857/comments", "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/1857/events", "html_url": "https://github.com/pytorch/pytorch/issues/1857", "id": 237317725, "node_id": "MDU6SXNzdWUyMzczMTc3MjU=", "number": 1857, "title": "DataParallel does not support dicts as first (or sole) input", "user": {"login": "arunmallya", "id": 838538, "node_id": "MDQ6VXNlcjgzODUzOA==", "avatar_url": "https://avatars3.githubusercontent.com/u/838538?v=4", "gravatar_id": "", "url": "https://api.github.com/users/arunmallya", "html_url": "https://github.com/arunmallya", "followers_url": "https://api.github.com/users/arunmallya/followers", "following_url": "https://api.github.com/users/arunmallya/following{/other_user}", "gists_url": "https://api.github.com/users/arunmallya/gists{/gist_id}", "starred_url": "https://api.github.com/users/arunmallya/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/arunmallya/subscriptions", "organizations_url": "https://api.github.com/users/arunmallya/orgs", "repos_url": "https://api.github.com/users/arunmallya/repos", "events_url": "https://api.github.com/users/arunmallya/events{/privacy}", "received_events_url": "https://api.github.com/users/arunmallya/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2017-06-20T19:23:39Z", "updated_at": "2017-07-05T15:46:17Z", "closed_at": "2017-07-05T15:46:16Z", "author_association": "NONE", "body_html": "<p><div class=\"border rounded-1 my-2\">\n  <div class=\"f6 px-3 py-2 lh-condensed border-bottom bg-gray-light\">\n    <p class=\"mb-0 text-bold\">\n      <a href=\"https://github.com/pytorch/pytorch/blob/d9d50f80c7f162c9c6c6d95c0b51f9e6fd8fccee/torch/nn/parallel/parallel_apply.py#L21-L22\">pytorch/torch/nn/parallel/parallel_apply.py</a>\n    </p>\n    <p class=\"mb-0 text-gray-light\">\n        Lines 21 to 22\n      in\n      <a data-pjax=\"true\" class=\"commit-tease-sha\" href=\"/pytorch/pytorch/commit/d9d50f80c7f162c9c6c6d95c0b51f9e6fd8fccee\">d9d50f8</a>\n    </p>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper blob-wrapper-embedded data\">\n    <table class=\"highlight tab-size mb-0 js-file-line-container\" data-tab-size=\"8\">\n\n        <tbody><tr class=\"border-0\">\n          <td id=\"L21\" class=\"blob-num border-0 px-3 py-0 bg-white js-line-number\" data-line-number=\"21\"></td>\n          <td id=\"LC21\" class=\"blob-code border-0 px-3 py-0 bg-white blob-code-inner js-file-line\"> <span class=\"pl-k\">while</span> <span class=\"pl-k\">not</span> <span class=\"pl-c1\">isinstance</span>(var_input, Variable): </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L22\" class=\"blob-num border-0 px-3 py-0 bg-white js-line-number\" data-line-number=\"22\"></td>\n          <td id=\"LC22\" class=\"blob-code border-0 px-3 py-0 bg-white blob-code-inner js-file-line\">     var_input <span class=\"pl-k\">=</span> var_input[<span class=\"pl-c1\">0</span>] </td>\n        </tr>\n    </tbody></table>\n  </div>\n</div>\n is the culprit. Assumes that the first input is a variable or a sequence containing a variable in index 0 (recursively indexed).</p>\n<p>Workaround is to pass a dummy variable as first input, as suggested in <a href=\"https://pytorch.slack.com/archives/C2077MFDL/p1497986173722359\" rel=\"nofollow\">https://pytorch.slack.com/archives/C2077MFDL/p1497986173722359</a></p>", "body_text": "pytorch/torch/nn/parallel/parallel_apply.py\n    \n    \n        Lines 21 to 22\n      in\n      d9d50f8\n    \n    \n    \n    \n\n        \n          \n           while not isinstance(var_input, Variable): \n        \n\n        \n          \n               var_input = var_input[0] \n        \n    \n  \n\n is the culprit. Assumes that the first input is a variable or a sequence containing a variable in index 0 (recursively indexed).\nWorkaround is to pass a dummy variable as first input, as suggested in https://pytorch.slack.com/archives/C2077MFDL/p1497986173722359", "body": "https://github.com/pytorch/pytorch/blob/d9d50f80c7f162c9c6c6d95c0b51f9e6fd8fccee/torch/nn/parallel/parallel_apply.py#L21-L22 is the culprit. Assumes that the first input is a variable or a sequence containing a variable in index 0 (recursively indexed).\r\n\r\nWorkaround is to pass a dummy variable as first input, as suggested in https://pytorch.slack.com/archives/C2077MFDL/p1497986173722359"}