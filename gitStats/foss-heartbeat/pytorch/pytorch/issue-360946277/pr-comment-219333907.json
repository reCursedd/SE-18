{"url": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/219333907", "pull_request_review_id": 157486732, "id": 219333907, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIxOTMzMzkwNw==", "diff_hunk": "@@ -2,9 +2,239 @@\n #include \"ATen/NativeFunctions.h\"\n #include \"ATen/Dispatch.h\"\n #include \"ATen/cuda/CUDAApplyUtils.cuh\"\n+#include \"ATen/cuda/detail/IndexUtils.cuh\"\n+\n \n namespace at { namespace native {\n \n+// -----------------------------------\n+// prelu forward\n+// -----------------------------------\n+template <typename scalar_t>\n+void prelu_cuda_kernel_share_weights(\n+  const Tensor& input,\n+  Tensor& result,\n+  const scalar_t* weight_data) {\n+\n+  at::cuda::CUDA_tensor_apply2<scalar_t, scalar_t>(\n+    input,\n+    result,\n+    [=] __device__ (\n+      const scalar_t& input_val,\n+      scalar_t& result_val) {\n+        result_val = (input_val > 0) ? input_val : *weight_data * input_val;\n+  });\n+}\n+\n+template <typename scalar_t>\n+__global__ void prelu_cuda_kernel_multi_weights(\n+  scalar_t* result_data,\n+  const scalar_t* input_data,\n+  const scalar_t* weight_data,\n+  int64_t input_stride0,\n+  int64_t input_stride1,\n+  int64_t input_numel) {\n+\n+  int64_t linearId = blockIdx.x * blockDim.x + threadIdx.x;\n+  if (linearId >= input_numel) return;\n+\n+  // multiply values at each channel with weight[channel_index]\n+  int64_t channel = (linearId % input_stride0) / input_stride1;\n+  scalar_t input_data_val = input_data[linearId];\n+  result_data[linearId] = (input_data_val > 0) ? input_data_val : weight_data[channel] * input_data_val;\n+}\n+\n+Tensor prelu_cuda(const Tensor& self, const Tensor& weight_) {\n+  AT_CHECK(self.is_cuda());\n+  AT_CHECK(weight_.is_cuda());\n+\n+  auto input = self.contiguous();\n+  auto weight = weight_.contiguous();\n+\n+  AT_CHECK(input.is_contiguous());\n+  AT_CHECK(weight.is_contiguous());\n+\n+  int64_t weight_num = weight.numel();\n+  Tensor result = at::empty_like(input);\n+  auto strides = input.strides();\n+\n+  // case1: shared weight for all channels\n+  if (weight_num == 1) {", "path": "aten/src/ATen/native/cuda/Activation.cu", "position": 61, "original_position": 61, "commit_id": "b4b5ae0ce41bd2cf83d23c5fea005ee05f92bc1e", "original_commit_id": "e836b583067fe044830f916abc38995dc990de31", "user": {"login": "weiyangfb", "id": 38509346, "node_id": "MDQ6VXNlcjM4NTA5MzQ2", "avatar_url": "https://avatars1.githubusercontent.com/u/38509346?v=4", "gravatar_id": "", "url": "https://api.github.com/users/weiyangfb", "html_url": "https://github.com/weiyangfb", "followers_url": "https://api.github.com/users/weiyangfb/followers", "following_url": "https://api.github.com/users/weiyangfb/following{/other_user}", "gists_url": "https://api.github.com/users/weiyangfb/gists{/gist_id}", "starred_url": "https://api.github.com/users/weiyangfb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/weiyangfb/subscriptions", "organizations_url": "https://api.github.com/users/weiyangfb/orgs", "repos_url": "https://api.github.com/users/weiyangfb/repos", "events_url": "https://api.github.com/users/weiyangfb/events{/privacy}", "received_events_url": "https://api.github.com/users/weiyangfb/received_events", "type": "User", "site_admin": false}, "body": "CUDA kernel for weight.numel() == 1 is still slower than previous implementation, not sure why... can it be the difference between `THC_pointwiseApply2` and `CUDA_tensor_apply2`?\r\n\r\nhttps://github.com/pytorch/pytorch/blob/b91b15d86e274611f448caa3f9b73eb4bf24a625/aten/src/THCUNN/generic/PReLU.cu#L17-L20\r\n\r\nhttps://github.com/pytorch/pytorch/blob/b91b15d86e274611f448caa3f9b73eb4bf24a625/aten/src/THCUNN/PReLU.cu#L9-L23", "created_at": "2018-09-20T22:14:30Z", "updated_at": "2018-11-23T15:51:47Z", "html_url": "https://github.com/pytorch/pytorch/pull/11758#discussion_r219333907", "pull_request_url": "https://api.github.com/repos/pytorch/pytorch/pulls/11758", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/219333907"}, "html": {"href": "https://github.com/pytorch/pytorch/pull/11758#discussion_r219333907"}, "pull_request": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/11758"}}, "body_html": "<p>CUDA kernel for weight.numel() == 1 is still slower than previous implementation, not sure why... can it be the difference between <code>THC_pointwiseApply2</code> and <code>CUDA_tensor_apply2</code>?</p>\n<p><div class=\"border rounded-1 my-2\">\n  <div class=\"f6 px-3 py-2 lh-condensed border-bottom bg-gray-light\">\n    <p class=\"mb-0 text-bold\">\n      <a href=\"https://github.com/pytorch/pytorch/blob/b91b15d86e274611f448caa3f9b73eb4bf24a625/aten/src/THCUNN/generic/PReLU.cu#L17-L20\">pytorch/aten/src/THCUNN/generic/PReLU.cu</a>\n    </p>\n    <p class=\"mb-0 text-gray-light\">\n        Lines 17 to 20\n      in\n      <a data-pjax=\"true\" class=\"commit-tease-sha\" href=\"/pytorch/pytorch/commit/b91b15d86e274611f448caa3f9b73eb4bf24a625\">b91b15d</a>\n    </p>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper blob-wrapper-embedded data\">\n    <table class=\"highlight tab-size mb-0 js-file-line-container\" data-tab-size=\"8\">\n\n        <tbody><tr class=\"border-0\">\n          <td id=\"L17\" class=\"blob-num border-0 px-3 py-0 bg-white js-line-number\" data-line-number=\"17\"></td>\n          <td id=\"LC17\" class=\"blob-code border-0 px-3 py-0 bg-white blob-code-inner js-file-line\"> <span class=\"pl-k\">if</span> (nOutputPlane == <span class=\"pl-c1\">1</span>) </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L18\" class=\"blob-num border-0 px-3 py-0 bg-white js-line-number\" data-line-number=\"18\"></td>\n          <td id=\"LC18\" class=\"blob-code border-0 px-3 py-0 bg-white blob-code-inner js-file-line\"> { </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L19\" class=\"blob-num border-0 px-3 py-0 bg-white js-line-number\" data-line-number=\"19\"></td>\n          <td id=\"LC19\" class=\"blob-code border-0 px-3 py-0 bg-white blob-code-inner js-file-line\">   THC_pointwiseApply2&lt;<span class=\"pl-c1\">scalar_t</span>, <span class=\"pl-c1\">scalar_t</span>&gt;(state, output, input, PReLUUpdateOutput&lt;<span class=\"pl-c1\">scalar_t</span>&gt;(w)); </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L20\" class=\"blob-num border-0 px-3 py-0 bg-white js-line-number\" data-line-number=\"20\"></td>\n          <td id=\"LC20\" class=\"blob-code border-0 px-3 py-0 bg-white blob-code-inner js-file-line\"> } </td>\n        </tr>\n    </tbody></table>\n  </div>\n</div>\n</p>\n<p><div class=\"border rounded-1 my-2\">\n  <div class=\"f6 px-3 py-2 lh-condensed border-bottom bg-gray-light\">\n    <p class=\"mb-0 text-bold\">\n      <a href=\"https://github.com/pytorch/pytorch/blob/b91b15d86e274611f448caa3f9b73eb4bf24a625/aten/src/THCUNN/PReLU.cu#L9-L23\">pytorch/aten/src/THCUNN/PReLU.cu</a>\n    </p>\n    <p class=\"mb-0 text-gray-light\">\n        Lines 9 to 23\n      in\n      <a data-pjax=\"true\" class=\"commit-tease-sha\" href=\"/pytorch/pytorch/commit/b91b15d86e274611f448caa3f9b73eb4bf24a625\">b91b15d</a>\n    </p>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper blob-wrapper-embedded data\">\n    <table class=\"highlight tab-size mb-0 js-file-line-container\" data-tab-size=\"8\">\n\n        <tbody><tr class=\"border-0\">\n          <td id=\"L9\" class=\"blob-num border-0 px-3 py-0 bg-white js-line-number\" data-line-number=\"9\"></td>\n          <td id=\"LC9\" class=\"blob-code border-0 px-3 py-0 bg-white blob-code-inner js-file-line\"> <span class=\"pl-k\">template </span>&lt;<span class=\"pl-k\">typename</span> T&gt; </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L10\" class=\"blob-num border-0 px-3 py-0 bg-white js-line-number\" data-line-number=\"10\"></td>\n          <td id=\"LC10\" class=\"blob-code border-0 px-3 py-0 bg-white blob-code-inner js-file-line\"> <span class=\"pl-k\">struct</span> <span class=\"pl-en\">PReLUUpdateOutput</span> </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L11\" class=\"blob-num border-0 px-3 py-0 bg-white js-line-number\" data-line-number=\"11\"></td>\n          <td id=\"LC11\" class=\"blob-code border-0 px-3 py-0 bg-white blob-code-inner js-file-line\"> { </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L12\" class=\"blob-num border-0 px-3 py-0 bg-white js-line-number\" data-line-number=\"12\"></td>\n          <td id=\"LC12\" class=\"blob-code border-0 px-3 py-0 bg-white blob-code-inner js-file-line\">   T* weight_; </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L13\" class=\"blob-num border-0 px-3 py-0 bg-white js-line-number\" data-line-number=\"13\"></td>\n          <td id=\"LC13\" class=\"blob-code border-0 px-3 py-0 bg-white blob-code-inner js-file-line\">  </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L14\" class=\"blob-num border-0 px-3 py-0 bg-white js-line-number\" data-line-number=\"14\"></td>\n          <td id=\"LC14\" class=\"blob-code border-0 px-3 py-0 bg-white blob-code-inner js-file-line\">   <span class=\"pl-en\">PReLUUpdateOutput</span>(T* weight) </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L15\" class=\"blob-num border-0 px-3 py-0 bg-white js-line-number\" data-line-number=\"15\"></td>\n          <td id=\"LC15\" class=\"blob-code border-0 px-3 py-0 bg-white blob-code-inner js-file-line\">     : weight_(weight) </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L16\" class=\"blob-num border-0 px-3 py-0 bg-white js-line-number\" data-line-number=\"16\"></td>\n          <td id=\"LC16\" class=\"blob-code border-0 px-3 py-0 bg-white blob-code-inner js-file-line\">   {} </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L17\" class=\"blob-num border-0 px-3 py-0 bg-white js-line-number\" data-line-number=\"17\"></td>\n          <td id=\"LC17\" class=\"blob-code border-0 px-3 py-0 bg-white blob-code-inner js-file-line\">  </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L18\" class=\"blob-num border-0 px-3 py-0 bg-white js-line-number\" data-line-number=\"18\"></td>\n          <td id=\"LC18\" class=\"blob-code border-0 px-3 py-0 bg-white blob-code-inner js-file-line\">   <span class=\"pl-k\">__device__</span> <span class=\"pl-k\">__forceinline__</span> <span class=\"pl-k\">void</span> <span class=\"pl-en\">operator</span>()(T *out, T *in) </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L19\" class=\"blob-num border-0 px-3 py-0 bg-white js-line-number\" data-line-number=\"19\"></td>\n          <td id=\"LC19\" class=\"blob-code border-0 px-3 py-0 bg-white blob-code-inner js-file-line\">   { </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L20\" class=\"blob-num border-0 px-3 py-0 bg-white js-line-number\" data-line-number=\"20\"></td>\n          <td id=\"LC20\" class=\"blob-code border-0 px-3 py-0 bg-white blob-code-inner js-file-line\">     T x = *in; </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L21\" class=\"blob-num border-0 px-3 py-0 bg-white js-line-number\" data-line-number=\"21\"></td>\n          <td id=\"LC21\" class=\"blob-code border-0 px-3 py-0 bg-white blob-code-inner js-file-line\">     *out = (x &gt; <span class=\"pl-c1\">0</span>) ? x : weight_[<span class=\"pl-c1\">0</span>] * x; </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L22\" class=\"blob-num border-0 px-3 py-0 bg-white js-line-number\" data-line-number=\"22\"></td>\n          <td id=\"LC22\" class=\"blob-code border-0 px-3 py-0 bg-white blob-code-inner js-file-line\">   } </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L23\" class=\"blob-num border-0 px-3 py-0 bg-white js-line-number\" data-line-number=\"23\"></td>\n          <td id=\"LC23\" class=\"blob-code border-0 px-3 py-0 bg-white blob-code-inner js-file-line\"> }; </td>\n        </tr>\n    </tbody></table>\n  </div>\n</div>\n</p>", "body_text": "CUDA kernel for weight.numel() == 1 is still slower than previous implementation, not sure why... can it be the difference between THC_pointwiseApply2 and CUDA_tensor_apply2?\n\n  \n    \n      pytorch/aten/src/THCUNN/generic/PReLU.cu\n    \n    \n        Lines 17 to 20\n      in\n      b91b15d\n    \n    \n    \n    \n\n        \n          \n           if (nOutputPlane == 1) \n        \n\n        \n          \n           { \n        \n\n        \n          \n             THC_pointwiseApply2<scalar_t, scalar_t>(state, output, input, PReLUUpdateOutput<scalar_t>(w)); \n        \n\n        \n          \n           } \n        \n    \n  \n\n\n\n  \n    \n      pytorch/aten/src/THCUNN/PReLU.cu\n    \n    \n        Lines 9 to 23\n      in\n      b91b15d\n    \n    \n    \n    \n\n        \n          \n           template <typename T> \n        \n\n        \n          \n           struct PReLUUpdateOutput \n        \n\n        \n          \n           { \n        \n\n        \n          \n             T* weight_; \n        \n\n        \n          \n            \n        \n\n        \n          \n             PReLUUpdateOutput(T* weight) \n        \n\n        \n          \n               : weight_(weight) \n        \n\n        \n          \n             {} \n        \n\n        \n          \n            \n        \n\n        \n          \n             __device__ __forceinline__ void operator()(T *out, T *in) \n        \n\n        \n          \n             { \n        \n\n        \n          \n               T x = *in; \n        \n\n        \n          \n               *out = (x > 0) ? x : weight_[0] * x; \n        \n\n        \n          \n             } \n        \n\n        \n          \n           };"}