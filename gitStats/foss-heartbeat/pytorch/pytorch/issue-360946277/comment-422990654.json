{"url": "https://api.github.com/repos/pytorch/pytorch/issues/comments/422990654", "html_url": "https://github.com/pytorch/pytorch/pull/11758#issuecomment-422990654", "issue_url": "https://api.github.com/repos/pytorch/pytorch/issues/11758", "id": 422990654, "node_id": "MDEyOklzc3VlQ29tbWVudDQyMjk5MDY1NA==", "user": {"login": "weiyangfb", "id": 38509346, "node_id": "MDQ6VXNlcjM4NTA5MzQ2", "avatar_url": "https://avatars1.githubusercontent.com/u/38509346?v=4", "gravatar_id": "", "url": "https://api.github.com/users/weiyangfb", "html_url": "https://github.com/weiyangfb", "followers_url": "https://api.github.com/users/weiyangfb/followers", "following_url": "https://api.github.com/users/weiyangfb/following{/other_user}", "gists_url": "https://api.github.com/users/weiyangfb/gists{/gist_id}", "starred_url": "https://api.github.com/users/weiyangfb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/weiyangfb/subscriptions", "organizations_url": "https://api.github.com/users/weiyangfb/orgs", "repos_url": "https://api.github.com/users/weiyangfb/repos", "events_url": "https://api.github.com/users/weiyangfb/events{/privacy}", "received_events_url": "https://api.github.com/users/weiyangfb/received_events", "type": "User", "site_admin": false}, "created_at": "2018-09-19T23:26:58Z", "updated_at": "2018-09-19T23:26:58Z", "author_association": "CONTRIBUTOR", "body_html": "<p><a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=1716488\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/cpuhrsch\">@cpuhrsch</a> by <code>CPU_tensor_apply</code> I meant the one at ATen. At the beginning I had some performance with it, I guess it was mainly because all the optimization tricks weren't carried through. It would be nice to have <code>TensorIterator</code> here as well, but I haven't found an easy way to replace <code>CPU_tensor_apply</code> directly.</p>", "body_text": "@cpuhrsch by CPU_tensor_apply I meant the one at ATen. At the beginning I had some performance with it, I guess it was mainly because all the optimization tricks weren't carried through. It would be nice to have TensorIterator here as well, but I haven't found an easy way to replace CPU_tensor_apply directly.", "body": "@cpuhrsch by `CPU_tensor_apply` I meant the one at ATen. At the beginning I had some performance with it, I guess it was mainly because all the optimization tricks weren't carried through. It would be nice to have `TensorIterator` here as well, but I haven't found an easy way to replace `CPU_tensor_apply` directly."}