{"url": "https://api.github.com/repos/pytorch/pytorch/issues/comments/373953288", "html_url": "https://github.com/pytorch/pytorch/pull/5788#issuecomment-373953288", "issue_url": "https://api.github.com/repos/pytorch/pytorch/issues/5788", "id": 373953288, "node_id": "MDEyOklzc3VlQ29tbWVudDM3Mzk1MzI4OA==", "user": {"login": "lantiga", "id": 191033, "node_id": "MDQ6VXNlcjE5MTAzMw==", "avatar_url": "https://avatars2.githubusercontent.com/u/191033?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lantiga", "html_url": "https://github.com/lantiga", "followers_url": "https://api.github.com/users/lantiga/followers", "following_url": "https://api.github.com/users/lantiga/following{/other_user}", "gists_url": "https://api.github.com/users/lantiga/gists{/gist_id}", "starred_url": "https://api.github.com/users/lantiga/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lantiga/subscriptions", "organizations_url": "https://api.github.com/users/lantiga/orgs", "repos_url": "https://api.github.com/users/lantiga/repos", "events_url": "https://api.github.com/users/lantiga/events{/privacy}", "received_events_url": "https://api.github.com/users/lantiga/received_events", "type": "User", "site_admin": false}, "created_at": "2018-03-17T21:17:31Z", "updated_at": "2018-03-18T00:28:11Z", "author_association": "COLLABORATOR", "body_html": "<p>Thanks for the hint <a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=13564\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/ezyang\">@ezyang</a>, I think I finally figured it out.</p>\n<p>The crash was coming from gcc during the <code>tools/run_aten_tests.sh</code> step, on the <code>asan</code> build that does not involve <code>libtorch</code>. Note that ATen tests (that are built for all builds except <code>*cuda*</code>) are always built with <code>gcc</code>, even in <code>asan</code> builds.</p>\n<p>Since the <code>asan</code> build has an <code>export LD_PRELOAD</code> after the main build, <code>LD_PRELOAD</code> is also seen from within <code>run_aten_tests.sh</code>.<br>\nIt's always been that way even before this PR, but apparently the fact that we're using <code>catch</code> now in aten tests makes <code>gcc</code> crash. Why wasn't it crashing before? Not sure.</p>\n<p>I now <code>unset LD_PRELOAD</code> in a subshell (to avoid having effects downstream) right before executing <code>run_aten_tests.sh</code>:</p>\n<pre><code>( unset LD_PRELOAD; time tools/run_aten_tests.sh )\n</code></pre>\n<p>This way the build succeeds and tests pass.</p>", "body_text": "Thanks for the hint @ezyang, I think I finally figured it out.\nThe crash was coming from gcc during the tools/run_aten_tests.sh step, on the asan build that does not involve libtorch. Note that ATen tests (that are built for all builds except *cuda*) are always built with gcc, even in asan builds.\nSince the asan build has an export LD_PRELOAD after the main build, LD_PRELOAD is also seen from within run_aten_tests.sh.\nIt's always been that way even before this PR, but apparently the fact that we're using catch now in aten tests makes gcc crash. Why wasn't it crashing before? Not sure.\nI now unset LD_PRELOAD in a subshell (to avoid having effects downstream) right before executing run_aten_tests.sh:\n( unset LD_PRELOAD; time tools/run_aten_tests.sh )\n\nThis way the build succeeds and tests pass.", "body": "Thanks for the hint @ezyang, I think I finally figured it out.\r\n\r\nThe crash was coming from gcc during the `tools/run_aten_tests.sh` step, on the `asan` build that does not involve `libtorch`. Note that ATen tests (that are built for all builds except `*cuda*`) are always built with `gcc`, even in `asan` builds.\r\n\r\nSince the `asan` build has an `export LD_PRELOAD` after the main build, `LD_PRELOAD` is also seen from within `run_aten_tests.sh`.\r\nIt's always been that way even before this PR, but apparently the fact that we're using `catch` now in aten tests makes `gcc` crash. Why wasn't it crashing before? Not sure.\r\n\r\nI now `unset LD_PRELOAD` in a subshell (to avoid having effects downstream) right before executing `run_aten_tests.sh`:\r\n```\r\n( unset LD_PRELOAD; time tools/run_aten_tests.sh )\r\n```\r\nThis way the build succeeds and tests pass."}