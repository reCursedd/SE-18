{"url": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/204216130", "pull_request_review_id": 139263779, "id": 204216130, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwNDIxNjEzMA==", "diff_hunk": "@@ -62,18 +62,22 @@ void PeepholeOptimize(Block * block) {\n         if (n->inputs().size() != 2) {\n           continue;\n         }\n-        // Alpha parameter must be 1.0\n-        auto alpha = at::Scalar(it->t(attr::alpha));\n-        if (alpha.to<double>() != 1.0) {\n-          continue;\n-        }\n \n+        // note: aten:mm node as an input ensures this is the tensor version\n+        // of add and that attr::alpha will exist", "path": "torch/csrc/jit/passes/peephole.cpp", "position": null, "original_position": 11, "commit_id": "6a9e59de5c6c7e7821e48863cd70d8fee3fc1870", "original_commit_id": "d185b8f5c2bc76ff588b66d28a20e268cf4e91f5", "user": {"login": "zdevito", "id": 370202, "node_id": "MDQ6VXNlcjM3MDIwMg==", "avatar_url": "https://avatars0.githubusercontent.com/u/370202?v=4", "gravatar_id": "", "url": "https://api.github.com/users/zdevito", "html_url": "https://github.com/zdevito", "followers_url": "https://api.github.com/users/zdevito/followers", "following_url": "https://api.github.com/users/zdevito/following{/other_user}", "gists_url": "https://api.github.com/users/zdevito/gists{/gist_id}", "starred_url": "https://api.github.com/users/zdevito/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/zdevito/subscriptions", "organizations_url": "https://api.github.com/users/zdevito/orgs", "repos_url": "https://api.github.com/users/zdevito/repos", "events_url": "https://api.github.com/users/zdevito/events{/privacy}", "received_events_url": "https://api.github.com/users/zdevito/received_events", "type": "User", "site_admin": false}, "body": "I simply mean that checking there is a aten::mm node first ensures that the alpha parameter must be here. Before it was trying to lookup alpha on number nodes that didn't exist. Your schema-based matching patch will fix this case.", "created_at": "2018-07-21T17:17:35Z", "updated_at": "2018-11-23T15:47:49Z", "html_url": "https://github.com/pytorch/pytorch/pull/9584#discussion_r204216130", "pull_request_url": "https://api.github.com/repos/pytorch/pytorch/pulls/9584", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/204216130"}, "html": {"href": "https://github.com/pytorch/pytorch/pull/9584#discussion_r204216130"}, "pull_request": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/9584"}}, "body_html": "<p>I simply mean that checking there is a aten::mm node first ensures that the alpha parameter must be here. Before it was trying to lookup alpha on number nodes that didn't exist. Your schema-based matching patch will fix this case.</p>", "body_text": "I simply mean that checking there is a aten::mm node first ensures that the alpha parameter must be here. Before it was trying to lookup alpha on number nodes that didn't exist. Your schema-based matching patch will fix this case.", "in_reply_to_id": 203870820}