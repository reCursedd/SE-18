{"url": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/204267660", "pull_request_review_id": 139315270, "id": 204267660, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwNDI2NzY2MA==", "diff_hunk": "@@ -103,65 +96,70 @@ struct SchemaParser {\n     parseType(arg);\n     args.push_back(std::move(arg));\n   }\n-  at::Tensor parseSingleConstant(TypeKind kind) {\n+  IValue parseSingleConstant(TypeKind kind) {\n     switch(L.cur().kind) {\n       case TK_TRUE:\n         L.next();\n-        return one();\n+        return true;\n       case TK_FALSE:\n         L.next();\n-        return zero();\n-      case TK_FLOAT:\n-        L.next();\n-        return as_tensor(static_cast<int64_t>(at::kFloat));\n+        return false;\n       case TK_IDENT: {\n         auto tok = L.next();\n         auto text = tok.text();\n-        if(\"cpu\" == text) {\n-          return as_tensor(static_cast<int64_t>(at::Device::Type::CPU));\n+        if(\"float\" == text) {\n+          return static_cast<int64_t>(at::kFloat);\n+        } else if(\"cpu\" == text) {\n+          return static_cast<int64_t>(at::Device::Type::CPU);\n         } else if(\"strided\" == text) {\n-          return as_tensor(static_cast<int64_t>(at::kStrided));\n+          return static_cast<int64_t>(at::kStrided);\n         } else if(\"ElementwiseMean\" == text) {\n-          return as_tensor(static_cast<int64_t>(Reduction::ElementwiseMean));\n+          return static_cast<int64_t>(Reduction::ElementwiseMean);", "path": "torch/csrc/jit/operator.cpp", "position": 74, "original_position": 65, "commit_id": "6a9e59de5c6c7e7821e48863cd70d8fee3fc1870", "original_commit_id": "63bc34a152d3d9259c71b5c2318e335b2f6c25db", "user": {"login": "zdevito", "id": 370202, "node_id": "MDQ6VXNlcjM3MDIwMg==", "avatar_url": "https://avatars0.githubusercontent.com/u/370202?v=4", "gravatar_id": "", "url": "https://api.github.com/users/zdevito", "html_url": "https://github.com/zdevito", "followers_url": "https://api.github.com/users/zdevito/followers", "following_url": "https://api.github.com/users/zdevito/following{/other_user}", "gists_url": "https://api.github.com/users/zdevito/gists{/gist_id}", "starred_url": "https://api.github.com/users/zdevito/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/zdevito/subscriptions", "organizations_url": "https://api.github.com/users/zdevito/orgs", "repos_url": "https://api.github.com/users/zdevito/repos", "events_url": "https://api.github.com/users/zdevito/events{/privacy}", "received_events_url": "https://api.github.com/users/zdevito/received_events", "type": "User", "site_admin": false}, "body": "Yes! In fact that place is `ivalue.h` now, which is what replaced tensor_as and as_tensor. `toScalar` and `IValue(Scalar)` are already examples of this, since they do not actually store an at::Scalar.", "created_at": "2018-07-23T02:07:18Z", "updated_at": "2018-11-23T15:47:53Z", "html_url": "https://github.com/pytorch/pytorch/pull/9584#discussion_r204267660", "pull_request_url": "https://api.github.com/repos/pytorch/pytorch/pulls/9584", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/204267660"}, "html": {"href": "https://github.com/pytorch/pytorch/pull/9584#discussion_r204267660"}, "pull_request": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/9584"}}, "body_html": "<p>Yes! In fact that place is <code>ivalue.h</code> now, which is what replaced tensor_as and as_tensor. <code>toScalar</code> and <code>IValue(Scalar)</code> are already examples of this, since they do not actually store an at::Scalar.</p>", "body_text": "Yes! In fact that place is ivalue.h now, which is what replaced tensor_as and as_tensor. toScalar and IValue(Scalar) are already examples of this, since they do not actually store an at::Scalar.", "in_reply_to_id": 204262446}