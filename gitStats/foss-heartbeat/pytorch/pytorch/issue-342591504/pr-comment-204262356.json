{"url": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/204262356", "pull_request_review_id": 139308537, "id": 204262356, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwNDI2MjM1Ng==", "diff_hunk": "@@ -209,6 +223,50 @@ struct IValue {\n     return Tag::None == tag;\n   }\n \n+  // Scalar, which gets encoded as either an Int or a Double\n+  IValue(at::Scalar s) {\n+    if(s.isFloatingPoint()) {\n+      *this = s.toDouble();\n+    } else {\n+      *this = s.toLong();\n+    }\n+  }\n+  bool isScalar() {\n+    return isDouble() || isInt();\n+  }\n+  at::Scalar toScalar() const {\n+    if(isDouble())\n+      return toDouble();\n+    else if(isInt())\n+      return toInt();\n+    else\n+      throw std::runtime_error(\"IValue is not a Scalar\");\n+  }\n+\n+  // for debugging\n+  std::string tagKind() {", "path": "torch/csrc/jit/ivalue.h", "position": 75, "original_position": 74, "commit_id": "6a9e59de5c6c7e7821e48863cd70d8fee3fc1870", "original_commit_id": "63bc34a152d3d9259c71b5c2318e335b2f6c25db", "user": {"login": "apaszke", "id": 4583066, "node_id": "MDQ6VXNlcjQ1ODMwNjY=", "avatar_url": "https://avatars3.githubusercontent.com/u/4583066?v=4", "gravatar_id": "", "url": "https://api.github.com/users/apaszke", "html_url": "https://github.com/apaszke", "followers_url": "https://api.github.com/users/apaszke/followers", "following_url": "https://api.github.com/users/apaszke/following{/other_user}", "gists_url": "https://api.github.com/users/apaszke/gists{/gist_id}", "starred_url": "https://api.github.com/users/apaszke/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/apaszke/subscriptions", "organizations_url": "https://api.github.com/users/apaszke/orgs", "repos_url": "https://api.github.com/users/apaszke/repos", "events_url": "https://api.github.com/users/apaszke/events{/privacy}", "received_events_url": "https://api.github.com/users/apaszke/received_events", "type": "User", "site_admin": false}, "body": "nit: We usually use `XxxKind` as enum types, so this might be a bit confusing. Maybe just `tagStr()`?", "created_at": "2018-07-23T00:50:43Z", "updated_at": "2018-11-23T15:47:51Z", "html_url": "https://github.com/pytorch/pytorch/pull/9584#discussion_r204262356", "pull_request_url": "https://api.github.com/repos/pytorch/pytorch/pulls/9584", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/204262356"}, "html": {"href": "https://github.com/pytorch/pytorch/pull/9584#discussion_r204262356"}, "pull_request": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/9584"}}, "body_html": "<p>nit: We usually use <code>XxxKind</code> as enum types, so this might be a bit confusing. Maybe just <code>tagStr()</code>?</p>", "body_text": "nit: We usually use XxxKind as enum types, so this might be a bit confusing. Maybe just tagStr()?"}