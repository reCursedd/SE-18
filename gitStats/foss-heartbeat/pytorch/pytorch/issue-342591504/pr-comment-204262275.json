{"url": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/204262275", "pull_request_review_id": 139308537, "id": 204262275, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwNDI2MjI3NQ==", "diff_hunk": "@@ -1001,6 +1006,23 @@ friend struct Block;\n     }\n     return n;\n   }\n+  Node* createList(const TypePtr& elem_type, at::ArrayRef<Value*> values) {\n+    auto n = create(prim::ListConstruct, values);\n+    for(const auto & v : values) {\n+      JIT_ASSERT(v->type()->isSubtypeOf(*elem_type));\n+    }\n+    n->output()->setType(std::make_shared<ListType>(elem_type));\n+    return n;\n+  }\n+  Node* createNumToTensor(Value* value) {\n+    JIT_ASSERT(value->type()->isSubtypeOf(*NumberType::get()));\n+    return create(prim::NumToTensor, {value});\n+  }\n+  Node* createTensorToNum(const TypePtr& type, Value* value) {\n+    auto* result = create(prim::TensorToNum, {value});\n+    result->output()->setType(type);", "path": "torch/csrc/jit/ir.h", "position": null, "original_position": 91, "commit_id": "6a9e59de5c6c7e7821e48863cd70d8fee3fc1870", "original_commit_id": "63bc34a152d3d9259c71b5c2318e335b2f6c25db", "user": {"login": "apaszke", "id": 4583066, "node_id": "MDQ6VXNlcjQ1ODMwNjY=", "avatar_url": "https://avatars3.githubusercontent.com/u/4583066?v=4", "gravatar_id": "", "url": "https://api.github.com/users/apaszke", "html_url": "https://github.com/apaszke", "followers_url": "https://api.github.com/users/apaszke/followers", "following_url": "https://api.github.com/users/apaszke/following{/other_user}", "gists_url": "https://api.github.com/users/apaszke/gists{/gist_id}", "starred_url": "https://api.github.com/users/apaszke/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/apaszke/subscriptions", "organizations_url": "https://api.github.com/users/apaszke/orgs", "repos_url": "https://api.github.com/users/apaszke/repos", "events_url": "https://api.github.com/users/apaszke/events{/privacy}", "received_events_url": "https://api.github.com/users/apaszke/received_events", "type": "User", "site_admin": false}, "body": "Also I kind of wish we had `>` to represent the subtyping relation, because it would be much less verbose than the `isSubtypeOf`, but I guess it might be a bit error prone considering the fact that we usually use pointers to types.", "created_at": "2018-07-23T00:49:33Z", "updated_at": "2018-11-23T15:47:51Z", "html_url": "https://github.com/pytorch/pytorch/pull/9584#discussion_r204262275", "pull_request_url": "https://api.github.com/repos/pytorch/pytorch/pulls/9584", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/204262275"}, "html": {"href": "https://github.com/pytorch/pytorch/pull/9584#discussion_r204262275"}, "pull_request": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/9584"}}, "body_html": "<p>Also I kind of wish we had <code>&gt;</code> to represent the subtyping relation, because it would be much less verbose than the <code>isSubtypeOf</code>, but I guess it might be a bit error prone considering the fact that we usually use pointers to types.</p>", "body_text": "Also I kind of wish we had > to represent the subtyping relation, because it would be much less verbose than the isSubtypeOf, but I guess it might be a bit error prone considering the fact that we usually use pointers to types.", "in_reply_to_id": 204262236}