{"url": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/204216097", "pull_request_review_id": 139263752, "id": 204216097, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwNDIxNjA5Nw==", "diff_hunk": "@@ -132,20 +133,37 @@ void repeatBody(Block *body, int64_t times) {\n   EliminateDeadCode(body, false);\n }\n \n+//TODO(zach): we need to replace these with a generic facility for resolving overloads\n+// currently we cant us SymbolicVariable because it assumes we are computing on tensors\n+// once we have something like emitBuiltinCall usable outside of the compiler,\n+// we can replace these with symbolic variable\n+Value* intMath(Symbol sym, Value* a, Value* b) {\n+  auto& g = *a->owningGraph();\n+  return g.insertNode(g.create(aten::div, {a, b}))", "path": "torch/csrc/jit/passes/loop_unrolling.cpp", "position": null, "original_position": 18, "commit_id": "6a9e59de5c6c7e7821e48863cd70d8fee3fc1870", "original_commit_id": "d185b8f5c2bc76ff588b66d28a20e268cf4e91f5", "user": {"login": "zdevito", "id": 370202, "node_id": "MDQ6VXNlcjM3MDIwMg==", "avatar_url": "https://avatars0.githubusercontent.com/u/370202?v=4", "gravatar_id": "", "url": "https://api.github.com/users/zdevito", "html_url": "https://github.com/zdevito", "followers_url": "https://api.github.com/users/zdevito/followers", "following_url": "https://api.github.com/users/zdevito/following{/other_user}", "gists_url": "https://api.github.com/users/zdevito/gists{/gist_id}", "starred_url": "https://api.github.com/users/zdevito/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/zdevito/subscriptions", "organizations_url": "https://api.github.com/users/zdevito/orgs", "repos_url": "https://api.github.com/users/zdevito/repos", "events_url": "https://api.github.com/users/zdevito/events{/privacy}", "received_events_url": "https://api.github.com/users/zdevito/received_events", "type": "User", "site_admin": false}, "body": "Two issues: return types would not be set correctly, and for things like add/sub there are `alpha` default parameters that only exist for the Tensor versions (and make little sense for the scalar versions). The schema-based insertion we discussed will fix both of these issues and let use SymbolicVariable again.", "created_at": "2018-07-21T17:16:13Z", "updated_at": "2018-11-23T15:47:49Z", "html_url": "https://github.com/pytorch/pytorch/pull/9584#discussion_r204216097", "pull_request_url": "https://api.github.com/repos/pytorch/pytorch/pulls/9584", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/204216097"}, "html": {"href": "https://github.com/pytorch/pytorch/pull/9584#discussion_r204216097"}, "pull_request": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/9584"}}, "body_html": "<p>Two issues: return types would not be set correctly, and for things like add/sub there are <code>alpha</code> default parameters that only exist for the Tensor versions (and make little sense for the scalar versions). The schema-based insertion we discussed will fix both of these issues and let use SymbolicVariable again.</p>", "body_text": "Two issues: return types would not be set correctly, and for things like add/sub there are alpha default parameters that only exist for the Tensor versions (and make little sense for the scalar versions). The schema-based insertion we discussed will fix both of these issues and let use SymbolicVariable again.", "in_reply_to_id": 203870163}