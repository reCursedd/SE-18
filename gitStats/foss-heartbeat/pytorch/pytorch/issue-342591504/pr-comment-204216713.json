{"url": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/204216713", "pull_request_review_id": 139264340, "id": 204216713, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwNDIxNjcxMw==", "diff_hunk": "@@ -48,7 +48,13 @@ void ArgumentStash::stashIntListElem(const std::string& arg_name, size_t size, s\n   JIT_ASSERT(size == list_trace.size());\n   JIT_ASSERT(idx < list_trace.size());\n   JIT_ASSERT(list_trace[idx] == nullptr);\n-  list_trace[idx] = getValueTrace(tracing_state, var);\n+\n+  Value* ten = getValueTrace(tracing_state, var);\n+  auto& g = *ten->owningGraph();\n+  auto prim = g.createTensorToNum(jit::IntType::get(), ten)", "path": "torch/csrc/jit/tracer.cpp", "position": null, "original_position": 8, "commit_id": "6a9e59de5c6c7e7821e48863cd70d8fee3fc1870", "original_commit_id": "d185b8f5c2bc76ff588b66d28a20e268cf4e91f5", "user": {"login": "zdevito", "id": 370202, "node_id": "MDQ6VXNlcjM3MDIwMg==", "avatar_url": "https://avatars0.githubusercontent.com/u/370202?v=4", "gravatar_id": "", "url": "https://api.github.com/users/zdevito", "html_url": "https://github.com/zdevito", "followers_url": "https://api.github.com/users/zdevito/followers", "following_url": "https://api.github.com/users/zdevito/following{/other_user}", "gists_url": "https://api.github.com/users/zdevito/gists{/gist_id}", "starred_url": "https://api.github.com/users/zdevito/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/zdevito/subscriptions", "organizations_url": "https://api.github.com/users/zdevito/orgs", "repos_url": "https://api.github.com/users/zdevito/repos", "events_url": "https://api.github.com/users/zdevito/events{/privacy}", "received_events_url": "https://api.github.com/users/zdevito/received_events", "type": "User", "site_admin": false}, "body": "It can't be a number because it is being converted from a Variable. The only thing we can trace right now is Variable, and all IR nodes attached to Tensors will have Tensor types. This is the other half of why sizeOf does NumToTensor. We can consider creating a \"recording primitive\" python type that we return instead in these situations, but that is a lot more work and still would require the Argument stash to stick around.", "created_at": "2018-07-21T17:39:14Z", "updated_at": "2018-11-23T15:47:49Z", "html_url": "https://github.com/pytorch/pytorch/pull/9584#discussion_r204216713", "pull_request_url": "https://api.github.com/repos/pytorch/pytorch/pulls/9584", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/204216713"}, "html": {"href": "https://github.com/pytorch/pytorch/pull/9584#discussion_r204216713"}, "pull_request": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/9584"}}, "body_html": "<p>It can't be a number because it is being converted from a Variable. The only thing we can trace right now is Variable, and all IR nodes attached to Tensors will have Tensor types. This is the other half of why sizeOf does NumToTensor. We can consider creating a \"recording primitive\" python type that we return instead in these situations, but that is a lot more work and still would require the Argument stash to stick around.</p>", "body_text": "It can't be a number because it is being converted from a Variable. The only thing we can trace right now is Variable, and all IR nodes attached to Tensors will have Tensor types. This is the other half of why sizeOf does NumToTensor. We can consider creating a \"recording primitive\" python type that we return instead in these situations, but that is a lot more work and still would require the Argument stash to stick around.", "in_reply_to_id": 203878748}