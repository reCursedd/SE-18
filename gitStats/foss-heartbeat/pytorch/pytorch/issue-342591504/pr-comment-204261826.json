{"url": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/204261826", "pull_request_review_id": 139308537, "id": 204261826, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwNDI2MTgyNg==", "diff_hunk": "@@ -52,79 +52,74 @@ def jit_type_of(arg):\n         typ = '{}?'.format(typ)\n     return typ\n \n-# map from _jit type_, generated from jit_type_of to attribute used to store it\n-ATTR_METHOD_MAP = {\n-    'int': 'i',\n-    'float': 'f',\n-    'bool': 'i',\n-    'Scalar': 't',\n-    'int[]': 'is',\n-    'bool[]': 'is',\n-    'Layout': 'i',\n-    'Device': 'is',\n-    'ScalarType': 'i',\n-}\n-\n-\n-def attr_of(jit_type):\n-    # for attributes, we dont care about the length of an array,\n-    # so strip it from the type\n-    jit_type = re.sub(\"\\\\[\\d+\\\\]\", \"[]\", jit_type)\n-    return ATTR_METHOD_MAP[jit_type]\n-\n # map from aten 'simple_type' to the function that will cast a attribute value\n # to that type\n FROM_ATTRIBUTE = {\n-    'std::array<bool,2>': 'as_bool_array<2>',\n-    'std::array<bool,3>': 'as_bool_array<3>',\n-    'std::array<bool,4>': 'as_bool_array<4>',\n-    'Scalar': 'Scalar',\n-    'IntList': 'std::vector<int64_t>',\n-    'Layout': 'int64_t',\n-    'Device': 'std::vector<int64_t>',\n-    'ScalarType': 'int64_t',\n+    'Device': 'as_device(node->is(attr::{}))',\n+    'IntList': 'std::vector<int64_t>(node->is(attr::{}))',\n+    'Layout': 'static_cast<at::Layout>(node->i(attr::{}))',\n+    'Scalar': 'Scalar(node->t(attr::{}))',\n+    'ScalarType': 'static_cast<at::ScalarType>(node->i(attr::{}))',\n+    'Tensor': 'node->t(attr::{})',\n+    'bool': 'bool(node->i(attr::{}))',\n+    'double': 'node->f(attr::{})',\n+    'int64_t': 'node->i(attr::{})',\n+    'std::array<bool,2>': 'as_bool_array<2>(node->is(attr::{}))',\n+    'std::array<bool,3>': 'as_bool_array<3>(node->is(attr::{}))',\n+    'std::array<bool,4>': 'as_bool_array<4>(node->is(attr::{}))',\n }\n \n+\n+def from_attribute(arg):\n+    simple_type = arg['simple_type']\n+    return FROM_ATTRIBUTE[simple_type].format(arg['name'])\n+\n+\n # map from aten 'simple_type' to the function that will turn a tensor into\n # that type\n-FROM_TENSOR = {\n-    'Device': 'tensor_as<std::vector<int64_t>>',\n-    'ScalarType': 'tensor_as<int64_t>',\n-    'Layout': 'tensor_as<int64_t>',\n-    'IntList': 'tensor_as<std::vector<int64_t>>',\n+FROM_IVALUE = {\n+    'Device': 'as_device({}.toIntList()->elements())',", "path": "tools/jit/gen_jit_dispatch.py", "position": 63, "original_position": 63, "commit_id": "6a9e59de5c6c7e7821e48863cd70d8fee3fc1870", "original_commit_id": "63bc34a152d3d9259c71b5c2318e335b2f6c25db", "user": {"login": "apaszke", "id": 4583066, "node_id": "MDQ6VXNlcjQ1ODMwNjY=", "avatar_url": "https://avatars3.githubusercontent.com/u/4583066?v=4", "gravatar_id": "", "url": "https://api.github.com/users/apaszke", "html_url": "https://github.com/apaszke", "followers_url": "https://api.github.com/users/apaszke/followers", "following_url": "https://api.github.com/users/apaszke/following{/other_user}", "gists_url": "https://api.github.com/users/apaszke/gists{/gist_id}", "starred_url": "https://api.github.com/users/apaszke/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/apaszke/subscriptions", "organizations_url": "https://api.github.com/users/apaszke/orgs", "repos_url": "https://api.github.com/users/apaszke/repos", "events_url": "https://api.github.com/users/apaszke/events{/privacy}", "received_events_url": "https://api.github.com/users/apaszke/received_events", "type": "User", "site_admin": false}, "body": "it might be a better idea to just index out the first two elements and avoid the vector allocation here", "created_at": "2018-07-23T00:40:11Z", "updated_at": "2018-11-23T15:47:51Z", "html_url": "https://github.com/pytorch/pytorch/pull/9584#discussion_r204261826", "pull_request_url": "https://api.github.com/repos/pytorch/pytorch/pulls/9584", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/204261826"}, "html": {"href": "https://github.com/pytorch/pytorch/pull/9584#discussion_r204261826"}, "pull_request": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/9584"}}, "body_html": "<p>it might be a better idea to just index out the first two elements and avoid the vector allocation here</p>", "body_text": "it might be a better idea to just index out the first two elements and avoid the vector allocation here"}