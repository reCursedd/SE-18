{"url": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/203876688", "pull_request_review_id": 138839907, "id": 203876688, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwMzg3NjY4OA==", "diff_hunk": "@@ -181,5 +198,150 @@ RegisterOperators reg({\n             return 0;\n           };\n         }),\n+    Operator(\n+        prim::ListConstruct,\n+        [](Node* node) -> Operation {\n+          size_t num_inputs = node->inputs().size();\n+          ListType* lt = node->output()->type()->expect<ListType>();\n+          if(IntType::get() == lt->getElementType()) {\n+            return [=](Stack& stack) {\n+              auto inputs = peekSlice(stack, 0, num_inputs, num_inputs);\n+              std::vector<int64_t> vals = fmap(inputs, [](const IValue& v) {\n+                return v.toInt();\n+              });\n+              drop(stack, num_inputs);\n+              push(stack, std::move(vals));\n+              return 0;\n+            };\n+          } else if(FloatType::get() == lt->getElementType()) {\n+            return [=](Stack& stack) {\n+              auto inputs = peekSlice(stack, 0, num_inputs, num_inputs);\n+              std::vector<double> vals = fmap(inputs, [](const IValue& v) {\n+                return v.toDouble();\n+              });\n+              push(stack, std::move(vals));", "path": "torch/csrc/jit/register_prim_ops.cpp", "position": null, "original_position": 117, "commit_id": "6a9e59de5c6c7e7821e48863cd70d8fee3fc1870", "original_commit_id": "d185b8f5c2bc76ff588b66d28a20e268cf4e91f5", "user": {"login": "apaszke", "id": 4583066, "node_id": "MDQ6VXNlcjQ1ODMwNjY=", "avatar_url": "https://avatars3.githubusercontent.com/u/4583066?v=4", "gravatar_id": "", "url": "https://api.github.com/users/apaszke", "html_url": "https://github.com/apaszke", "followers_url": "https://api.github.com/users/apaszke/followers", "following_url": "https://api.github.com/users/apaszke/following{/other_user}", "gists_url": "https://api.github.com/users/apaszke/gists{/gist_id}", "starred_url": "https://api.github.com/users/apaszke/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/apaszke/subscriptions", "organizations_url": "https://api.github.com/users/apaszke/orgs", "repos_url": "https://api.github.com/users/apaszke/repos", "events_url": "https://api.github.com/users/apaszke/events{/privacy}", "received_events_url": "https://api.github.com/users/apaszke/received_events", "type": "User", "site_admin": false}, "body": "Forgot to drop the inputs? We should really implement the body of this as a templated function, and call into it from the lambda. Otherwise we'll end up with errors like this one", "created_at": "2018-07-19T21:21:59Z", "updated_at": "2018-11-23T15:47:45Z", "html_url": "https://github.com/pytorch/pytorch/pull/9584#discussion_r203876688", "pull_request_url": "https://api.github.com/repos/pytorch/pytorch/pulls/9584", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/203876688"}, "html": {"href": "https://github.com/pytorch/pytorch/pull/9584#discussion_r203876688"}, "pull_request": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/9584"}}, "body_html": "<p>Forgot to drop the inputs? We should really implement the body of this as a templated function, and call into it from the lambda. Otherwise we'll end up with errors like this one</p>", "body_text": "Forgot to drop the inputs? We should really implement the body of this as a templated function, and call into it from the lambda. Otherwise we'll end up with errors like this one"}