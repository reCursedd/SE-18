{"url": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/121290301", "pull_request_review_id": 43327604, "id": 121290301, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEyMTI5MDMwMQ==", "diff_hunk": "@@ -406,6 +407,28 @@ def dropout(input, p=0.5, training=False, inplace=False):\n     return _functions.dropout.Dropout(p, training, inplace)(input)\n \n \n+def alpha_dropout(input, p=0.5, training=False):\n+    if not 0 < p <= 1:\n+        raise ValueError(\"dropout probability has to be between 0 and 1, \"\n+                         \"but got {}\".format(p))\n+\n+    if p > 0 and training:\n+        alpha = -1.7580993408473766\n+        keep_prob = 1 - p\n+        noise = input.data.new(input.size())\n+        noise.bernoulli_(keep_prob)\n+        noise = Variable(noise)\n+\n+        output = (input * noise).add_(noise.neg().add_(1).mul_(alpha))", "path": "torch/nn/functional.py", "position": null, "original_position": 24, "commit_id": "c06c7699168a15291b7454b8771ea9960456fe06", "original_commit_id": "7ab4b5f6a1d4c763b9af4bf622c96e1a7e4bd4d2", "user": {"login": "apaszke", "id": 4583066, "node_id": "MDQ6VXNlcjQ1ODMwNjY=", "avatar_url": "https://avatars3.githubusercontent.com/u/4583066?v=4", "gravatar_id": "", "url": "https://api.github.com/users/apaszke", "html_url": "https://github.com/apaszke", "followers_url": "https://api.github.com/users/apaszke/followers", "following_url": "https://api.github.com/users/apaszke/following{/other_user}", "gists_url": "https://api.github.com/users/apaszke/gists{/gist_id}", "starred_url": "https://api.github.com/users/apaszke/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/apaszke/subscriptions", "organizations_url": "https://api.github.com/users/apaszke/orgs", "repos_url": "https://api.github.com/users/apaszke/repos", "events_url": "https://api.github.com/users/apaszke/events{/privacy}", "received_events_url": "https://api.github.com/users/apaszke/received_events", "type": "User", "site_admin": false}, "body": "How about\r\n```python\r\noutput = input * noise\r\ntorch.eq(noise, 0, out=noise) # invert noise\r\noutput.add_(alpha, noise)\r\n```", "created_at": "2017-06-11T20:04:40Z", "updated_at": "2018-11-23T15:33:48Z", "html_url": "https://github.com/pytorch/pytorch/pull/1775#discussion_r121290301", "pull_request_url": "https://api.github.com/repos/pytorch/pytorch/pulls/1775", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/121290301"}, "html": {"href": "https://github.com/pytorch/pytorch/pull/1775#discussion_r121290301"}, "pull_request": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/1775"}}, "body_html": "<p>How about</p>\n<div class=\"highlight highlight-source-python\"><pre>output <span class=\"pl-k\">=</span> <span class=\"pl-c1\">input</span> <span class=\"pl-k\">*</span> noise\ntorch.eq(noise, <span class=\"pl-c1\">0</span>, <span class=\"pl-v\">out</span><span class=\"pl-k\">=</span>noise) <span class=\"pl-c\"><span class=\"pl-c\">#</span> invert noise</span>\noutput.add_(alpha, noise)</pre></div>", "body_text": "How about\noutput = input * noise\ntorch.eq(noise, 0, out=noise) # invert noise\noutput.add_(alpha, noise)", "in_reply_to_id": 121280399}