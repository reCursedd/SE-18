{"url": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/217831034", "pull_request_review_id": 155647214, "id": 217831034, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIxNzgzMTAzNA==", "diff_hunk": "@@ -126,41 +133,252 @@ void rearrangeDims(detail::TensorInfo<T1, IndexType>* aInfo,\n #define AT_APPLY_THREADS_PER_BLOCK 32 * 16\n #define AT_APPLY_BLOCKS_PER_SM 4\n \n+// The `step` argument is used to support Op that operates on multiple elements\n+// at the same time. See NOTE [ CUDA_tensor_applyN helpers ] below for how Op\n+// may look like.\n+\n+template <typename Op,\n+          typename scalar,\n+          typename IndexType,\n+          int ADims,\n+          int step,\n+          typename... Offsets>\n+struct ApplyOp1 {\n+__device__ __forceinline__\n+static void apply(detail::TensorInfo<scalar, IndexType> &a, const Op &op, int n,\n+                  IndexType linearIndex, Offsets... aOffsets) {\n+  // Convert `linearIndex` into an offset of `a`\n+  const IndexType aOffset = sizeof...(Offsets) < n ?\n+    detail::IndexToOffset<scalar, IndexType, ADims>::get(linearIndex, a) : 0;\n+\n+  ApplyOp1<Op, scalar, IndexType, ADims, step - 1, const IndexType, Offsets...>::apply(\n+    a, op, n, linearIndex + 1, aOffsets..., aOffset\n+  );\n+}\n+};\n+\n+// Specialize step=1 case. We don't need to pass in how many elements need to", "path": "aten/src/ATen/cuda/CUDAApplyUtils.cuh", "position": null, "original_position": 70, "commit_id": "e4013d853c2a9a837f6d396f156a4a60eeff8119", "original_commit_id": "9986cd4b590828c858f0575ce6bcbad9664b84a5", "user": {"login": "SsnL", "id": 5674597, "node_id": "MDQ6VXNlcjU2NzQ1OTc=", "avatar_url": "https://avatars2.githubusercontent.com/u/5674597?v=4", "gravatar_id": "", "url": "https://api.github.com/users/SsnL", "html_url": "https://github.com/SsnL", "followers_url": "https://api.github.com/users/SsnL/followers", "following_url": "https://api.github.com/users/SsnL/following{/other_user}", "gists_url": "https://api.github.com/users/SsnL/gists{/gist_id}", "starred_url": "https://api.github.com/users/SsnL/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/SsnL/subscriptions", "organizations_url": "https://api.github.com/users/SsnL/orgs", "repos_url": "https://api.github.com/users/SsnL/repos", "events_url": "https://api.github.com/users/SsnL/events{/privacy}", "received_events_url": "https://api.github.com/users/SsnL/received_events", "type": "User", "site_admin": false}, "body": "Sorry, it's misnamed. Here the `step` is different from the `step` arg in `CUDA_tensor_applyN`. It's more like `remaining_step`. I will change them. The `step=1` comes from that we have `remaining_step=0` and only have one `typename Offset ` (vs. `typename... Offsets` below).", "created_at": "2018-09-14T20:18:14Z", "updated_at": "2018-11-23T15:51:26Z", "html_url": "https://github.com/pytorch/pytorch/pull/10273#discussion_r217831034", "pull_request_url": "https://api.github.com/repos/pytorch/pytorch/pulls/10273", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/217831034"}, "html": {"href": "https://github.com/pytorch/pytorch/pull/10273#discussion_r217831034"}, "pull_request": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/10273"}}, "body_html": "<p>Sorry, it's misnamed. Here the <code>step</code> is different from the <code>step</code> arg in <code>CUDA_tensor_applyN</code>. It's more like <code>remaining_step</code>. I will change them. The <code>step=1</code> comes from that we have <code>remaining_step=0</code> and only have one <code>typename Offset </code> (vs. <code>typename... Offsets</code> below).</p>", "body_text": "Sorry, it's misnamed. Here the step is different from the step arg in CUDA_tensor_applyN. It's more like remaining_step. I will change them. The step=1 comes from that we have remaining_step=0 and only have one typename Offset  (vs. typename... Offsets below).", "in_reply_to_id": 217830516}