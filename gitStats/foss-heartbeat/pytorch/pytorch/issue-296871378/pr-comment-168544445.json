{"url": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/168544445", "pull_request_review_id": 96869478, "id": 168544445, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE2ODU0NDQ0NQ==", "diff_hunk": "@@ -261,10 +261,8 @@ static int THPFunction_clear(THPFunction *self)\n   self->saved_variables.clear();\n   self->is_variable_input.clear();\n \n-  // XXX: this will clear all hooks (not only Python ones)\n-  // I guess it's ok to leave it as is for now.\n-  auto pre_hooks = std::move(self->cdata.pre_hooks);\n-  auto post_hooks = std::move(self->cdata.post_hooks);\n+  self->cdata.clear_pre_hooks();\n+  self->cdata.clear_post_hooks();", "path": "torch/csrc/autograd/python_function.cpp", "position": null, "original_position": 63, "commit_id": "2820cf70a401e759ae67f8169c15f64b6dd628d0", "original_commit_id": "fbbfe675810f79e9d87f0239c892c3e16a23b976", "user": {"login": "apaszke", "id": 4583066, "node_id": "MDQ6VXNlcjQ1ODMwNjY=", "avatar_url": "https://avatars3.githubusercontent.com/u/4583066?v=4", "gravatar_id": "", "url": "https://api.github.com/users/apaszke", "html_url": "https://github.com/apaszke", "followers_url": "https://api.github.com/users/apaszke/followers", "following_url": "https://api.github.com/users/apaszke/following{/other_user}", "gists_url": "https://api.github.com/users/apaszke/gists{/gist_id}", "starred_url": "https://api.github.com/users/apaszke/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/apaszke/subscriptions", "organizations_url": "https://api.github.com/users/apaszke/orgs", "repos_url": "https://api.github.com/users/apaszke/repos", "events_url": "https://api.github.com/users/apaszke/events{/privacy}", "received_events_url": "https://api.github.com/users/apaszke/received_events", "type": "User", "site_admin": false}, "body": "This is not equivalent to the code we've had before. This code made sure to first disassociate the hooks from the function, but without destroying any of them. Then, they would get deleted when exiting this scope. This is important, because deleting Python objects, and trigger deletion of other objects, and they can reference this function, seeing it in a half-deleted state.", "created_at": "2018-02-15T17:11:26Z", "updated_at": "2018-11-23T15:39:37Z", "html_url": "https://github.com/pytorch/pytorch/pull/5221#discussion_r168544445", "pull_request_url": "https://api.github.com/repos/pytorch/pytorch/pulls/5221", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/168544445"}, "html": {"href": "https://github.com/pytorch/pytorch/pull/5221#discussion_r168544445"}, "pull_request": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/5221"}}, "body_html": "<p>This is not equivalent to the code we've had before. This code made sure to first disassociate the hooks from the function, but without destroying any of them. Then, they would get deleted when exiting this scope. This is important, because deleting Python objects, and trigger deletion of other objects, and they can reference this function, seeing it in a half-deleted state.</p>", "body_text": "This is not equivalent to the code we've had before. This code made sure to first disassociate the hooks from the function, but without destroying any of them. Then, they would get deleted when exiting this scope. This is important, because deleting Python objects, and trigger deletion of other objects, and they can reference this function, seeing it in a half-deleted state."}