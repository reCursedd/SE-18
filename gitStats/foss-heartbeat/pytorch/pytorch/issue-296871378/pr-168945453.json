{"url": "https://api.github.com/repos/pytorch/pytorch/pulls/5221", "id": 168945453, "node_id": "MDExOlB1bGxSZXF1ZXN0MTY4OTQ1NDUz", "html_url": "https://github.com/pytorch/pytorch/pull/5221", "diff_url": "https://github.com/pytorch/pytorch/pull/5221.diff", "patch_url": "https://github.com/pytorch/pytorch/pull/5221.patch", "issue_url": "https://api.github.com/repos/pytorch/pytorch/issues/5221", "number": 5221, "state": "closed", "locked": false, "title": "Improve Function interface", "user": {"login": "goldsborough", "id": 6429851, "node_id": "MDQ6VXNlcjY0Mjk4NTE=", "avatar_url": "https://avatars3.githubusercontent.com/u/6429851?v=4", "gravatar_id": "", "url": "https://api.github.com/users/goldsborough", "html_url": "https://github.com/goldsborough", "followers_url": "https://api.github.com/users/goldsborough/followers", "following_url": "https://api.github.com/users/goldsborough/following{/other_user}", "gists_url": "https://api.github.com/users/goldsborough/gists{/gist_id}", "starred_url": "https://api.github.com/users/goldsborough/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/goldsborough/subscriptions", "organizations_url": "https://api.github.com/users/goldsborough/orgs", "repos_url": "https://api.github.com/users/goldsborough/repos", "events_url": "https://api.github.com/users/goldsborough/events{/privacy}", "received_events_url": "https://api.github.com/users/goldsborough/received_events", "type": "User", "site_admin": false}, "body": "This PR is the second (and final) refactoring of the autograd internals. After `Variable`, I now took on `Function` to give it a nice API and make it easier to work with from the JIT and interoperate better with the new `Variable` API. \r\n\r\nThis change was actually a lot easier than for `Variable`. I basically proceeded by making the public fields protected one-by-one, and adding proper accessors for the operations that user code were making. I then renamed `next_functions` to `next_edges` everywhere. Finally, I fixed some includes and added a ton of documentation.\r\n\r\nThere is now a discrepancy between the Python API and the C++ `Function` class in that for Python I kept the `next_functions` name, but used `next_edges` in C++, which is more accurate in light of the introduction of the `Edge` class.\r\n\r\nI ran into a slightly interesting/controversial design decision for how to create gradient edges (i.e. connecting `Variable`s to `Function`s), especially when the number of inputs of the gradient function had to be incremented as well (i.e. a new gradient edge). Before this PR we had a lot of places like this:\r\n\r\n```\r\nvariable.set_gradient_edge(Edge(grad_fn, grad_fn.num_inputs++));\r\n```\r\n\r\nIt's certainly suboptimal that the user (even if it's just us) would have to mutate both `variable` and `grad_fn` to create the edge, and *especially* not forget to increment the `grad_fn`'s number of inputs! So I wrapped it in a free function:\r\n\r\n```\r\nvoid add_gradient_edge(Variable& variable, Function& function) {\r\n\tvariable.set_gradient_edge(Edge(grad_fn, grad_fn.num_inputs++));\r\n}\r\n```\r\n\r\nThat left the case for when `grad_fn.num_inputs` wouldn't need to be incremented, i.e. when the input number to the gradient function would be known ahead of time. Here, calling `variable.set_gradient_edge({grad_fn, input_nr})` would be fine. However, that would require us to use/remember two different APIs for the same action of adding a gradient edge. For this reason, I've made `set_gradient_edge` private in `Variable`, added an overload to `add_gradient_edge` to call `set_gradient_edge` and made that overload a `friend` of `Variable`. This way, `autograd::add_gradient_edge` is the one and only way to connect variables with their gradient edges.\r\n\r\nHappy to hear thoughts on naming and the API of the `Function` class. Recommended order of reviewing is `torch/csrc/autograd/function.h` and `torch/csrc/autograd/variable.h`, then everything else.\r\n\r\nBtw, at the end of these two PRs (including the `Variable` one), we will have gone from:\r\n\r\n```\r\n// TODO: this kinda stuff is _way_ to low level to the public API of variable.\r\n// Why do I have to care here whether v has a grad_fn or grad accumulator?\r\n// Why do I have to care here about output_nr? I just want to say\r\n// grad_fn->setOutputTo(i, v.input_port());\r\ngrad_fn->next_functions.emplace_back(v.grad_fn() ? v.grad_fn() : v.grad_accumulator(), v.output_nr());\r\n```\r\n\r\nto\r\n\r\n```\r\ngrad_fn->add_next_edge(v.gradient_edge());\r\n```\r\n\r\n@zdevito @apaszke @colesbury @ezyang ", "created_at": "2018-02-13T20:17:35Z", "updated_at": "2018-11-23T15:39:44Z", "closed_at": "2018-02-21T21:37:53Z", "merged_at": "2018-02-21T21:37:53Z", "merge_commit_sha": "702a7f386432108ec28fcabce2958e4ab11eae5b", "assignee": null, "assignees": [], "requested_reviewers": [], "requested_teams": [], "labels": [], "milestone": null, "commits_url": "https://api.github.com/repos/pytorch/pytorch/pulls/5221/commits", "review_comments_url": "https://api.github.com/repos/pytorch/pytorch/pulls/5221/comments", "review_comment_url": "https://api.github.com/repos/pytorch/pytorch/pulls/comments{/number}", "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/5221/comments", "statuses_url": "https://api.github.com/repos/pytorch/pytorch/statuses/2820cf70a401e759ae67f8169c15f64b6dd628d0", "head": {"label": "goldsborough:fn", "ref": "fn", "sha": "2820cf70a401e759ae67f8169c15f64b6dd628d0", "user": {"login": "goldsborough", "id": 6429851, "node_id": "MDQ6VXNlcjY0Mjk4NTE=", "avatar_url": "https://avatars3.githubusercontent.com/u/6429851?v=4", "gravatar_id": "", "url": "https://api.github.com/users/goldsborough", "html_url": "https://github.com/goldsborough", "followers_url": "https://api.github.com/users/goldsborough/followers", "following_url": "https://api.github.com/users/goldsborough/following{/other_user}", "gists_url": "https://api.github.com/users/goldsborough/gists{/gist_id}", "starred_url": "https://api.github.com/users/goldsborough/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/goldsborough/subscriptions", "organizations_url": "https://api.github.com/users/goldsborough/orgs", "repos_url": "https://api.github.com/users/goldsborough/repos", "events_url": "https://api.github.com/users/goldsborough/events{/privacy}", "received_events_url": "https://api.github.com/users/goldsborough/received_events", "type": "User", "site_admin": false}, "repo": {"id": 115096378, "node_id": "MDEwOlJlcG9zaXRvcnkxMTUwOTYzNzg=", "name": "pytorch", "full_name": "goldsborough/pytorch", "private": false, "owner": {"login": "goldsborough", "id": 6429851, "node_id": "MDQ6VXNlcjY0Mjk4NTE=", "avatar_url": "https://avatars3.githubusercontent.com/u/6429851?v=4", "gravatar_id": "", "url": "https://api.github.com/users/goldsborough", "html_url": "https://github.com/goldsborough", "followers_url": "https://api.github.com/users/goldsborough/followers", "following_url": "https://api.github.com/users/goldsborough/following{/other_user}", "gists_url": "https://api.github.com/users/goldsborough/gists{/gist_id}", "starred_url": "https://api.github.com/users/goldsborough/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/goldsborough/subscriptions", "organizations_url": "https://api.github.com/users/goldsborough/orgs", "repos_url": "https://api.github.com/users/goldsborough/repos", "events_url": "https://api.github.com/users/goldsborough/events{/privacy}", "received_events_url": "https://api.github.com/users/goldsborough/received_events", "type": "User", "site_admin": false}, "html_url": "https://github.com/goldsborough/pytorch", "description": "Tensors and Dynamic neural networks in Python  with strong GPU acceleration", "fork": true, "url": "https://api.github.com/repos/goldsborough/pytorch", "forks_url": "https://api.github.com/repos/goldsborough/pytorch/forks", "keys_url": "https://api.github.com/repos/goldsborough/pytorch/keys{/key_id}", "collaborators_url": "https://api.github.com/repos/goldsborough/pytorch/collaborators{/collaborator}", "teams_url": "https://api.github.com/repos/goldsborough/pytorch/teams", "hooks_url": "https://api.github.com/repos/goldsborough/pytorch/hooks", "issue_events_url": "https://api.github.com/repos/goldsborough/pytorch/issues/events{/number}", "events_url": "https://api.github.com/repos/goldsborough/pytorch/events", "assignees_url": "https://api.github.com/repos/goldsborough/pytorch/assignees{/user}", "branches_url": "https://api.github.com/repos/goldsborough/pytorch/branches{/branch}", "tags_url": "https://api.github.com/repos/goldsborough/pytorch/tags", "blobs_url": "https://api.github.com/repos/goldsborough/pytorch/git/blobs{/sha}", "git_tags_url": "https://api.github.com/repos/goldsborough/pytorch/git/tags{/sha}", "git_refs_url": "https://api.github.com/repos/goldsborough/pytorch/git/refs{/sha}", "trees_url": "https://api.github.com/repos/goldsborough/pytorch/git/trees{/sha}", "statuses_url": "https://api.github.com/repos/goldsborough/pytorch/statuses/{sha}", "languages_url": "https://api.github.com/repos/goldsborough/pytorch/languages", "stargazers_url": "https://api.github.com/repos/goldsborough/pytorch/stargazers", "contributors_url": "https://api.github.com/repos/goldsborough/pytorch/contributors", "subscribers_url": "https://api.github.com/repos/goldsborough/pytorch/subscribers", "subscription_url": "https://api.github.com/repos/goldsborough/pytorch/subscription", "commits_url": "https://api.github.com/repos/goldsborough/pytorch/commits{/sha}", "git_commits_url": "https://api.github.com/repos/goldsborough/pytorch/git/commits{/sha}", "comments_url": "https://api.github.com/repos/goldsborough/pytorch/comments{/number}", "issue_comment_url": "https://api.github.com/repos/goldsborough/pytorch/issues/comments{/number}", "contents_url": "https://api.github.com/repos/goldsborough/pytorch/contents/{+path}", "compare_url": "https://api.github.com/repos/goldsborough/pytorch/compare/{base}...{head}", "merges_url": "https://api.github.com/repos/goldsborough/pytorch/merges", "archive_url": "https://api.github.com/repos/goldsborough/pytorch/{archive_format}{/ref}", "downloads_url": "https://api.github.com/repos/goldsborough/pytorch/downloads", "issues_url": "https://api.github.com/repos/goldsborough/pytorch/issues{/number}", "pulls_url": "https://api.github.com/repos/goldsborough/pytorch/pulls{/number}", "milestones_url": "https://api.github.com/repos/goldsborough/pytorch/milestones{/number}", "notifications_url": "https://api.github.com/repos/goldsborough/pytorch/notifications{?since,all,participating}", "labels_url": "https://api.github.com/repos/goldsborough/pytorch/labels{/name}", "releases_url": "https://api.github.com/repos/goldsborough/pytorch/releases{/id}", "deployments_url": "https://api.github.com/repos/goldsborough/pytorch/deployments", "created_at": "2017-12-22T08:49:57Z", "updated_at": "2018-11-08T01:51:18Z", "pushed_at": "2018-11-17T00:54:35Z", "git_url": "git://github.com/goldsborough/pytorch.git", "ssh_url": "git@github.com:goldsborough/pytorch.git", "clone_url": "https://github.com/goldsborough/pytorch.git", "svn_url": "https://github.com/goldsborough/pytorch", "homepage": "http://pytorch.org", "size": 86862, "stargazers_count": 3, "watchers_count": 3, "language": "C++", "has_issues": false, "has_projects": true, "has_downloads": true, "has_wiki": true, "has_pages": false, "forks_count": 0, "mirror_url": null, "archived": false, "open_issues_count": 0, "license": {"key": "other", "name": "Other", "spdx_id": "NOASSERTION", "url": null, "node_id": "MDc6TGljZW5zZTA="}, "forks": 0, "open_issues": 0, "watchers": 3, "default_branch": "master"}}, "base": {"label": "pytorch:master", "ref": "master", "sha": "5ce46be17c73c77437902f34187704c01ac4c7e7", "user": {"login": "pytorch", "id": 21003710, "node_id": "MDEyOk9yZ2FuaXphdGlvbjIxMDAzNzEw", "avatar_url": "https://avatars3.githubusercontent.com/u/21003710?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pytorch", "html_url": "https://github.com/pytorch", "followers_url": "https://api.github.com/users/pytorch/followers", "following_url": "https://api.github.com/users/pytorch/following{/other_user}", "gists_url": "https://api.github.com/users/pytorch/gists{/gist_id}", "starred_url": "https://api.github.com/users/pytorch/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pytorch/subscriptions", "organizations_url": "https://api.github.com/users/pytorch/orgs", "repos_url": "https://api.github.com/users/pytorch/repos", "events_url": "https://api.github.com/users/pytorch/events{/privacy}", "received_events_url": "https://api.github.com/users/pytorch/received_events", "type": "Organization", "site_admin": false}, "repo": {"id": 65600975, "node_id": "MDEwOlJlcG9zaXRvcnk2NTYwMDk3NQ==", "name": "pytorch", "full_name": "pytorch/pytorch", "private": false, "owner": {"login": "pytorch", "id": 21003710, "node_id": "MDEyOk9yZ2FuaXphdGlvbjIxMDAzNzEw", "avatar_url": "https://avatars3.githubusercontent.com/u/21003710?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pytorch", "html_url": "https://github.com/pytorch", "followers_url": "https://api.github.com/users/pytorch/followers", "following_url": "https://api.github.com/users/pytorch/following{/other_user}", "gists_url": "https://api.github.com/users/pytorch/gists{/gist_id}", "starred_url": "https://api.github.com/users/pytorch/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pytorch/subscriptions", "organizations_url": "https://api.github.com/users/pytorch/orgs", "repos_url": "https://api.github.com/users/pytorch/repos", "events_url": "https://api.github.com/users/pytorch/events{/privacy}", "received_events_url": "https://api.github.com/users/pytorch/received_events", "type": "Organization", "site_admin": false}, "html_url": "https://github.com/pytorch/pytorch", "description": "Tensors and Dynamic neural networks in Python  with strong GPU acceleration", "fork": false, "url": "https://api.github.com/repos/pytorch/pytorch", "forks_url": "https://api.github.com/repos/pytorch/pytorch/forks", "keys_url": "https://api.github.com/repos/pytorch/pytorch/keys{/key_id}", "collaborators_url": "https://api.github.com/repos/pytorch/pytorch/collaborators{/collaborator}", "teams_url": "https://api.github.com/repos/pytorch/pytorch/teams", "hooks_url": "https://api.github.com/repos/pytorch/pytorch/hooks", "issue_events_url": "https://api.github.com/repos/pytorch/pytorch/issues/events{/number}", "events_url": "https://api.github.com/repos/pytorch/pytorch/events", "assignees_url": "https://api.github.com/repos/pytorch/pytorch/assignees{/user}", "branches_url": "https://api.github.com/repos/pytorch/pytorch/branches{/branch}", "tags_url": "https://api.github.com/repos/pytorch/pytorch/tags", "blobs_url": "https://api.github.com/repos/pytorch/pytorch/git/blobs{/sha}", "git_tags_url": "https://api.github.com/repos/pytorch/pytorch/git/tags{/sha}", "git_refs_url": "https://api.github.com/repos/pytorch/pytorch/git/refs{/sha}", "trees_url": "https://api.github.com/repos/pytorch/pytorch/git/trees{/sha}", "statuses_url": "https://api.github.com/repos/pytorch/pytorch/statuses/{sha}", "languages_url": "https://api.github.com/repos/pytorch/pytorch/languages", "stargazers_url": "https://api.github.com/repos/pytorch/pytorch/stargazers", "contributors_url": "https://api.github.com/repos/pytorch/pytorch/contributors", "subscribers_url": "https://api.github.com/repos/pytorch/pytorch/subscribers", "subscription_url": "https://api.github.com/repos/pytorch/pytorch/subscription", "commits_url": "https://api.github.com/repos/pytorch/pytorch/commits{/sha}", "git_commits_url": "https://api.github.com/repos/pytorch/pytorch/git/commits{/sha}", "comments_url": "https://api.github.com/repos/pytorch/pytorch/comments{/number}", "issue_comment_url": "https://api.github.com/repos/pytorch/pytorch/issues/comments{/number}", "contents_url": "https://api.github.com/repos/pytorch/pytorch/contents/{+path}", "compare_url": "https://api.github.com/repos/pytorch/pytorch/compare/{base}...{head}", "merges_url": "https://api.github.com/repos/pytorch/pytorch/merges", "archive_url": "https://api.github.com/repos/pytorch/pytorch/{archive_format}{/ref}", "downloads_url": "https://api.github.com/repos/pytorch/pytorch/downloads", "issues_url": "https://api.github.com/repos/pytorch/pytorch/issues{/number}", "pulls_url": "https://api.github.com/repos/pytorch/pytorch/pulls{/number}", "milestones_url": "https://api.github.com/repos/pytorch/pytorch/milestones{/number}", "notifications_url": "https://api.github.com/repos/pytorch/pytorch/notifications{?since,all,participating}", "labels_url": "https://api.github.com/repos/pytorch/pytorch/labels{/name}", "releases_url": "https://api.github.com/repos/pytorch/pytorch/releases{/id}", "deployments_url": "https://api.github.com/repos/pytorch/pytorch/deployments", "created_at": "2016-08-13T05:26:41Z", "updated_at": "2018-11-24T05:35:41Z", "pushed_at": "2018-11-24T05:34:07Z", "git_url": "git://github.com/pytorch/pytorch.git", "ssh_url": "git@github.com:pytorch/pytorch.git", "clone_url": "https://github.com/pytorch/pytorch.git", "svn_url": "https://github.com/pytorch/pytorch", "homepage": "http://pytorch.org", "size": 89651, "stargazers_count": 21577, "watchers_count": 21577, "language": "C++", "has_issues": true, "has_projects": true, "has_downloads": true, "has_wiki": true, "has_pages": false, "forks_count": 5149, "mirror_url": null, "archived": false, "open_issues_count": 2193, "license": {"key": "other", "name": "Other", "spdx_id": "NOASSERTION", "url": null, "node_id": "MDc6TGljZW5zZTA="}, "forks": 5149, "open_issues": 2193, "watchers": 21577, "default_branch": "master"}}, "_links": {"self": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/5221"}, "html": {"href": "https://github.com/pytorch/pytorch/pull/5221"}, "issue": {"href": "https://api.github.com/repos/pytorch/pytorch/issues/5221"}, "comments": {"href": "https://api.github.com/repos/pytorch/pytorch/issues/5221/comments"}, "review_comments": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/5221/comments"}, "review_comment": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/comments{/number}"}, "commits": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/5221/commits"}, "statuses": {"href": "https://api.github.com/repos/pytorch/pytorch/statuses/2820cf70a401e759ae67f8169c15f64b6dd628d0"}}, "author_association": "CONTRIBUTOR", "body_html": "<p>This PR is the second (and final) refactoring of the autograd internals. After <code>Variable</code>, I now took on <code>Function</code> to give it a nice API and make it easier to work with from the JIT and interoperate better with the new <code>Variable</code> API.</p>\n<p>This change was actually a lot easier than for <code>Variable</code>. I basically proceeded by making the public fields protected one-by-one, and adding proper accessors for the operations that user code were making. I then renamed <code>next_functions</code> to <code>next_edges</code> everywhere. Finally, I fixed some includes and added a ton of documentation.</p>\n<p>There is now a discrepancy between the Python API and the C++ <code>Function</code> class in that for Python I kept the <code>next_functions</code> name, but used <code>next_edges</code> in C++, which is more accurate in light of the introduction of the <code>Edge</code> class.</p>\n<p>I ran into a slightly interesting/controversial design decision for how to create gradient edges (i.e. connecting <code>Variable</code>s to <code>Function</code>s), especially when the number of inputs of the gradient function had to be incremented as well (i.e. a new gradient edge). Before this PR we had a lot of places like this:</p>\n<pre><code>variable.set_gradient_edge(Edge(grad_fn, grad_fn.num_inputs++));\n</code></pre>\n<p>It's certainly suboptimal that the user (even if it's just us) would have to mutate both <code>variable</code> and <code>grad_fn</code> to create the edge, and <em>especially</em> not forget to increment the <code>grad_fn</code>'s number of inputs! So I wrapped it in a free function:</p>\n<pre><code>void add_gradient_edge(Variable&amp; variable, Function&amp; function) {\n\tvariable.set_gradient_edge(Edge(grad_fn, grad_fn.num_inputs++));\n}\n</code></pre>\n<p>That left the case for when <code>grad_fn.num_inputs</code> wouldn't need to be incremented, i.e. when the input number to the gradient function would be known ahead of time. Here, calling <code>variable.set_gradient_edge({grad_fn, input_nr})</code> would be fine. However, that would require us to use/remember two different APIs for the same action of adding a gradient edge. For this reason, I've made <code>set_gradient_edge</code> private in <code>Variable</code>, added an overload to <code>add_gradient_edge</code> to call <code>set_gradient_edge</code> and made that overload a <code>friend</code> of <code>Variable</code>. This way, <code>autograd::add_gradient_edge</code> is the one and only way to connect variables with their gradient edges.</p>\n<p>Happy to hear thoughts on naming and the API of the <code>Function</code> class. Recommended order of reviewing is <code>torch/csrc/autograd/function.h</code> and <code>torch/csrc/autograd/variable.h</code>, then everything else.</p>\n<p>Btw, at the end of these two PRs (including the <code>Variable</code> one), we will have gone from:</p>\n<pre><code>// TODO: this kinda stuff is _way_ to low level to the public API of variable.\n// Why do I have to care here whether v has a grad_fn or grad accumulator?\n// Why do I have to care here about output_nr? I just want to say\n// grad_fn-&gt;setOutputTo(i, v.input_port());\ngrad_fn-&gt;next_functions.emplace_back(v.grad_fn() ? v.grad_fn() : v.grad_accumulator(), v.output_nr());\n</code></pre>\n<p>to</p>\n<pre><code>grad_fn-&gt;add_next_edge(v.gradient_edge());\n</code></pre>\n<p><a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=370202\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/zdevito\">@zdevito</a> <a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=4583066\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/apaszke\">@apaszke</a> <a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=655866\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/colesbury\">@colesbury</a> <a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=13564\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/ezyang\">@ezyang</a></p>", "body_text": "This PR is the second (and final) refactoring of the autograd internals. After Variable, I now took on Function to give it a nice API and make it easier to work with from the JIT and interoperate better with the new Variable API.\nThis change was actually a lot easier than for Variable. I basically proceeded by making the public fields protected one-by-one, and adding proper accessors for the operations that user code were making. I then renamed next_functions to next_edges everywhere. Finally, I fixed some includes and added a ton of documentation.\nThere is now a discrepancy between the Python API and the C++ Function class in that for Python I kept the next_functions name, but used next_edges in C++, which is more accurate in light of the introduction of the Edge class.\nI ran into a slightly interesting/controversial design decision for how to create gradient edges (i.e. connecting Variables to Functions), especially when the number of inputs of the gradient function had to be incremented as well (i.e. a new gradient edge). Before this PR we had a lot of places like this:\nvariable.set_gradient_edge(Edge(grad_fn, grad_fn.num_inputs++));\n\nIt's certainly suboptimal that the user (even if it's just us) would have to mutate both variable and grad_fn to create the edge, and especially not forget to increment the grad_fn's number of inputs! So I wrapped it in a free function:\nvoid add_gradient_edge(Variable& variable, Function& function) {\n\tvariable.set_gradient_edge(Edge(grad_fn, grad_fn.num_inputs++));\n}\n\nThat left the case for when grad_fn.num_inputs wouldn't need to be incremented, i.e. when the input number to the gradient function would be known ahead of time. Here, calling variable.set_gradient_edge({grad_fn, input_nr}) would be fine. However, that would require us to use/remember two different APIs for the same action of adding a gradient edge. For this reason, I've made set_gradient_edge private in Variable, added an overload to add_gradient_edge to call set_gradient_edge and made that overload a friend of Variable. This way, autograd::add_gradient_edge is the one and only way to connect variables with their gradient edges.\nHappy to hear thoughts on naming and the API of the Function class. Recommended order of reviewing is torch/csrc/autograd/function.h and torch/csrc/autograd/variable.h, then everything else.\nBtw, at the end of these two PRs (including the Variable one), we will have gone from:\n// TODO: this kinda stuff is _way_ to low level to the public API of variable.\n// Why do I have to care here whether v has a grad_fn or grad accumulator?\n// Why do I have to care here about output_nr? I just want to say\n// grad_fn->setOutputTo(i, v.input_port());\ngrad_fn->next_functions.emplace_back(v.grad_fn() ? v.grad_fn() : v.grad_accumulator(), v.output_nr());\n\nto\ngrad_fn->add_next_edge(v.gradient_edge());\n\n@zdevito @apaszke @colesbury @ezyang", "merged": true, "mergeable": null, "rebaseable": null, "mergeable_state": "unknown", "merged_by": {"login": "soumith", "id": 1310570, "node_id": "MDQ6VXNlcjEzMTA1NzA=", "avatar_url": "https://avatars0.githubusercontent.com/u/1310570?v=4", "gravatar_id": "", "url": "https://api.github.com/users/soumith", "html_url": "https://github.com/soumith", "followers_url": "https://api.github.com/users/soumith/followers", "following_url": "https://api.github.com/users/soumith/following{/other_user}", "gists_url": "https://api.github.com/users/soumith/gists{/gist_id}", "starred_url": "https://api.github.com/users/soumith/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/soumith/subscriptions", "organizations_url": "https://api.github.com/users/soumith/orgs", "repos_url": "https://api.github.com/users/soumith/repos", "events_url": "https://api.github.com/users/soumith/events{/privacy}", "received_events_url": "https://api.github.com/users/soumith/received_events", "type": "User", "site_admin": false}, "comments": 8, "review_comments": 36, "maintainer_can_modify": false, "commits": 14, "additions": 652, "deletions": 419, "changed_files": 33}