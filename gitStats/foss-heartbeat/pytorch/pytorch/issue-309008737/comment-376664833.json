{"url": "https://api.github.com/repos/pytorch/pytorch/issues/comments/376664833", "html_url": "https://github.com/pytorch/pytorch/pull/6042#issuecomment-376664833", "issue_url": "https://api.github.com/repos/pytorch/pytorch/issues/6042", "id": 376664833, "node_id": "MDEyOklzc3VlQ29tbWVudDM3NjY2NDgzMw==", "user": {"login": "colesbury", "id": 655866, "node_id": "MDQ6VXNlcjY1NTg2Ng==", "avatar_url": "https://avatars1.githubusercontent.com/u/655866?v=4", "gravatar_id": "", "url": "https://api.github.com/users/colesbury", "html_url": "https://github.com/colesbury", "followers_url": "https://api.github.com/users/colesbury/followers", "following_url": "https://api.github.com/users/colesbury/following{/other_user}", "gists_url": "https://api.github.com/users/colesbury/gists{/gist_id}", "starred_url": "https://api.github.com/users/colesbury/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/colesbury/subscriptions", "organizations_url": "https://api.github.com/users/colesbury/orgs", "repos_url": "https://api.github.com/users/colesbury/repos", "events_url": "https://api.github.com/users/colesbury/events{/privacy}", "received_events_url": "https://api.github.com/users/colesbury/received_events", "type": "User", "site_admin": false}, "created_at": "2018-03-27T20:31:08Z", "updated_at": "2018-03-27T20:31:21Z", "author_association": "MEMBER", "body_html": "<p>Oh... so <code>float</code> -&gt; <code>uint8_t</code> conversion is only well defined for non-negative floats. So we can either cast to something like <code>int64_t</code> first or change the test to avoid creating FloatTensors.</p>\n<p>i.e THTensorCopy does:</p>\n<pre><code>*tensor_data = (uint8_t)(*src_data)\n</code></pre>\n<p>We should get consistent behavior if we do:</p>\n<pre><code>*tensor_data = (uint8_t)(int64_t)(*src_data)\n</code></pre>\n<p>(See <a href=\"http://www.embeddeduse.com/2013/08/25/casting-a-negative-float-to-an-unsigned-int/\" rel=\"nofollow\">http://www.embeddeduse.com/2013/08/25/casting-a-negative-float-to-an-unsigned-int/</a>)</p>", "body_text": "Oh... so float -> uint8_t conversion is only well defined for non-negative floats. So we can either cast to something like int64_t first or change the test to avoid creating FloatTensors.\ni.e THTensorCopy does:\n*tensor_data = (uint8_t)(*src_data)\n\nWe should get consistent behavior if we do:\n*tensor_data = (uint8_t)(int64_t)(*src_data)\n\n(See http://www.embeddeduse.com/2013/08/25/casting-a-negative-float-to-an-unsigned-int/)", "body": "Oh... so `float` -> `uint8_t` conversion is only well defined for non-negative floats. So we can either cast to something like `int64_t` first or change the test to avoid creating FloatTensors.\r\n\r\ni.e THTensorCopy does:\r\n\r\n```\r\n*tensor_data = (uint8_t)(*src_data)\r\n```\r\n\r\nWe should get consistent behavior if we do:\r\n\r\n```\r\n*tensor_data = (uint8_t)(int64_t)(*src_data)\r\n```\r\n\r\n(See http://www.embeddeduse.com/2013/08/25/casting-a-negative-float-to-an-unsigned-int/)"}