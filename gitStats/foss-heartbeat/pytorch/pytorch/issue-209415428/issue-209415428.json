{"url": "https://api.github.com/repos/pytorch/pytorch/issues/822", "repository_url": "https://api.github.com/repos/pytorch/pytorch", "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/822/labels{/name}", "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/822/comments", "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/822/events", "html_url": "https://github.com/pytorch/pytorch/issues/822", "id": 209415428, "node_id": "MDU6SXNzdWUyMDk0MTU0Mjg=", "number": 822, "title": "slicing tensors within the network", "user": {"login": "aosokin", "id": 2099291, "node_id": "MDQ6VXNlcjIwOTkyOTE=", "avatar_url": "https://avatars3.githubusercontent.com/u/2099291?v=4", "gravatar_id": "", "url": "https://api.github.com/users/aosokin", "html_url": "https://github.com/aosokin", "followers_url": "https://api.github.com/users/aosokin/followers", "following_url": "https://api.github.com/users/aosokin/following{/other_user}", "gists_url": "https://api.github.com/users/aosokin/gists{/gist_id}", "starred_url": "https://api.github.com/users/aosokin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/aosokin/subscriptions", "organizations_url": "https://api.github.com/users/aosokin/orgs", "repos_url": "https://api.github.com/users/aosokin/repos", "events_url": "https://api.github.com/users/aosokin/events{/privacy}", "received_events_url": "https://api.github.com/users/aosokin/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 424131847, "node_id": "MDU6TGFiZWw0MjQxMzE4NDc=", "url": "https://api.github.com/repos/pytorch/pytorch/labels/bug", "name": "bug", "color": "b60205", "default": true}, {"id": 443484135, "node_id": "MDU6TGFiZWw0NDM0ODQxMzU=", "url": "https://api.github.com/repos/pytorch/pytorch/labels/high%20priority", "name": "high priority", "color": "F22613", "default": false}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2017-02-22T10:43:15Z", "updated_at": "2017-02-22T16:22:06Z", "closed_at": "2017-02-22T16:13:16Z", "author_association": "CONTRIBUTOR", "body_html": "<p>Hi, I've recently observed something weird which might indicate an obscure bug.<br>\nVery similar issue was open <a href=\"https://github.com/hughperkins/pytorch/issues/20\" data-hovercard-type=\"issue\" data-hovercard-url=\"/hughperkins/pytorch/issues/20/hovercard\">here</a>.</p>\n<p>I'm defining a network, and in forward() I have a slicing operation separating the first half of my channels:<br>\n<code>first_half = input[:, :self.n_input_ch // 2, :, :]</code><br>\nThis operation totally breaks down the training, i.e., after two or three training iterations the loss goes to nan. On top of that, something weird happens with variable references meaning some unrelated tensors start to randomly change.</p>\n<p>However, if I do<br>\n<code>first_half = input[:, :self.n_input_ch // 2, :, :] * 1.0</code><br>\ninstead, then everything works fine.</p>\n<p>Does this look like  a bug or slicing is not supposed to be used this way?</p>", "body_text": "Hi, I've recently observed something weird which might indicate an obscure bug.\nVery similar issue was open here.\nI'm defining a network, and in forward() I have a slicing operation separating the first half of my channels:\nfirst_half = input[:, :self.n_input_ch // 2, :, :]\nThis operation totally breaks down the training, i.e., after two or three training iterations the loss goes to nan. On top of that, something weird happens with variable references meaning some unrelated tensors start to randomly change.\nHowever, if I do\nfirst_half = input[:, :self.n_input_ch // 2, :, :] * 1.0\ninstead, then everything works fine.\nDoes this look like  a bug or slicing is not supposed to be used this way?", "body": "Hi, I've recently observed something weird which might indicate an obscure bug.\r\nVery similar issue was open [here](https://github.com/hughperkins/pytorch/issues/20).\r\n\r\nI'm defining a network, and in forward() I have a slicing operation separating the first half of my channels:\r\n`\r\nfirst_half = input[:, :self.n_input_ch // 2, :, :]\r\n`\r\nThis operation totally breaks down the training, i.e., after two or three training iterations the loss goes to nan. On top of that, something weird happens with variable references meaning some unrelated tensors start to randomly change.\r\n\r\nHowever, if I do\r\n`\r\nfirst_half = input[:, :self.n_input_ch // 2, :, :] * 1.0\r\n`\r\ninstead, then everything works fine.\r\n\r\nDoes this look like  a bug or slicing is not supposed to be used this way?\r\n"}