{"url": "https://api.github.com/repos/pytorch/pytorch/issues/1379", "repository_url": "https://api.github.com/repos/pytorch/pytorch", "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/1379/labels{/name}", "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/1379/comments", "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/1379/events", "html_url": "https://github.com/pytorch/pytorch/pull/1379", "id": 224843206, "node_id": "MDExOlB1bGxSZXF1ZXN0MTE3OTgxMTE2", "number": 1379, "title": "Use fully qualified name as tp_name for tensors and storages", "user": {"login": "colesbury", "id": 655866, "node_id": "MDQ6VXNlcjY1NTg2Ng==", "avatar_url": "https://avatars1.githubusercontent.com/u/655866?v=4", "gravatar_id": "", "url": "https://api.github.com/users/colesbury", "html_url": "https://github.com/colesbury", "followers_url": "https://api.github.com/users/colesbury/followers", "following_url": "https://api.github.com/users/colesbury/following{/other_user}", "gists_url": "https://api.github.com/users/colesbury/gists{/gist_id}", "starred_url": "https://api.github.com/users/colesbury/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/colesbury/subscriptions", "organizations_url": "https://api.github.com/users/colesbury/orgs", "repos_url": "https://api.github.com/users/colesbury/repos", "events_url": "https://api.github.com/users/colesbury/events{/privacy}", "received_events_url": "https://api.github.com/users/colesbury/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-04-27T16:33:36Z", "updated_at": "2018-11-23T15:33:12Z", "closed_at": "2017-04-27T20:26:45Z", "author_association": "MEMBER", "pull_request": {"url": "https://api.github.com/repos/pytorch/pytorch/pulls/1379", "html_url": "https://github.com/pytorch/pytorch/pull/1379", "diff_url": "https://github.com/pytorch/pytorch/pull/1379.diff", "patch_url": "https://github.com/pytorch/pytorch/pull/1379.patch"}, "body_html": "<p>Currently, AttributeErrors on tensors and storages are ambiguous. It's unclear if they refer to the CUDA, sparse, or regular CPU classes:</p>\n<pre><code>&gt;&gt;&gt; torch.FloatTensor().foobar\nAttributeError: 'FloatTensor' object has no attribute 'foobar'\n</code></pre>\n<p>Types defined in C don't have this problem because their <code>tp_name</code> field contains the fully qualified name:</p>\n<pre><code>&gt;&gt;&gt; torch._C.FloatTensorBase().foobar\nAttributeError: 'torch._C.FloatTensorBase' object has no attribute 'foobar'\n</code></pre>\n<p>This changes the <code>tp_name</code> field on the Tensor and Storage classes to be their fully qualified name. The <code>__name__</code> attribute is still the \"simple\" class name, which is necessary for pickling in Python 2. This matches the behavior for types defined in C:</p>\n<pre><code>&gt;&gt;&gt; torch.FloatTensor().foobar\nAttributeError: 'torch.FloatTensor' object has no attribute 'foobar'\n&gt;&gt;&gt; torch.cuda.FloatTensor().foobar\nAttributeError: 'torch.cuda.FloatTensor' object has no attribute 'foobar'\n&gt;&gt;&gt; ~torch.cuda.FloatTensor()\nTypeError: bad operand type for unary ~: 'torch.cuda.FloatTensor'\n</code></pre>", "body_text": "Currently, AttributeErrors on tensors and storages are ambiguous. It's unclear if they refer to the CUDA, sparse, or regular CPU classes:\n>>> torch.FloatTensor().foobar\nAttributeError: 'FloatTensor' object has no attribute 'foobar'\n\nTypes defined in C don't have this problem because their tp_name field contains the fully qualified name:\n>>> torch._C.FloatTensorBase().foobar\nAttributeError: 'torch._C.FloatTensorBase' object has no attribute 'foobar'\n\nThis changes the tp_name field on the Tensor and Storage classes to be their fully qualified name. The __name__ attribute is still the \"simple\" class name, which is necessary for pickling in Python 2. This matches the behavior for types defined in C:\n>>> torch.FloatTensor().foobar\nAttributeError: 'torch.FloatTensor' object has no attribute 'foobar'\n>>> torch.cuda.FloatTensor().foobar\nAttributeError: 'torch.cuda.FloatTensor' object has no attribute 'foobar'\n>>> ~torch.cuda.FloatTensor()\nTypeError: bad operand type for unary ~: 'torch.cuda.FloatTensor'", "body": "Currently, AttributeErrors on tensors and storages are ambiguous. It's unclear if they refer to the CUDA, sparse, or regular CPU classes:\r\n\r\n```\r\n>>> torch.FloatTensor().foobar\r\nAttributeError: 'FloatTensor' object has no attribute 'foobar'\r\n```\r\n\r\nTypes defined in C don't have this problem because their `tp_name` field contains the fully qualified name:\r\n\r\n```\r\n>>> torch._C.FloatTensorBase().foobar\r\nAttributeError: 'torch._C.FloatTensorBase' object has no attribute 'foobar'\r\n```\r\n\r\nThis changes the `tp_name` field on the Tensor and Storage classes to be their fully qualified name. The `__name__` attribute is still the \"simple\" class name, which is necessary for pickling in Python 2. This matches the behavior for types defined in C:\r\n\r\n```\r\n>>> torch.FloatTensor().foobar\r\nAttributeError: 'torch.FloatTensor' object has no attribute 'foobar'\r\n>>> torch.cuda.FloatTensor().foobar\r\nAttributeError: 'torch.cuda.FloatTensor' object has no attribute 'foobar'\r\n>>> ~torch.cuda.FloatTensor()\r\nTypeError: bad operand type for unary ~: 'torch.cuda.FloatTensor'\r\n```"}