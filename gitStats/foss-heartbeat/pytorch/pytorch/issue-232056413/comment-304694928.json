{"url": "https://api.github.com/repos/pytorch/pytorch/issues/comments/304694928", "html_url": "https://github.com/pytorch/pytorch/pull/1675#issuecomment-304694928", "issue_url": "https://api.github.com/repos/pytorch/pytorch/issues/1675", "id": 304694928, "node_id": "MDEyOklzc3VlQ29tbWVudDMwNDY5NDkyOA==", "user": {"login": "jfsantos", "id": 5733, "node_id": "MDQ6VXNlcjU3MzM=", "avatar_url": "https://avatars1.githubusercontent.com/u/5733?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jfsantos", "html_url": "https://github.com/jfsantos", "followers_url": "https://api.github.com/users/jfsantos/followers", "following_url": "https://api.github.com/users/jfsantos/following{/other_user}", "gists_url": "https://api.github.com/users/jfsantos/gists{/gist_id}", "starred_url": "https://api.github.com/users/jfsantos/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jfsantos/subscriptions", "organizations_url": "https://api.github.com/users/jfsantos/orgs", "repos_url": "https://api.github.com/users/jfsantos/repos", "events_url": "https://api.github.com/users/jfsantos/events{/privacy}", "received_events_url": "https://api.github.com/users/jfsantos/received_events", "type": "User", "site_admin": false}, "created_at": "2017-05-29T16:14:53Z", "updated_at": "2017-05-29T16:18:31Z", "author_association": "CONTRIBUTOR", "body_html": "<p><a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=4583066\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/apaszke\">@apaszke</a> that's not the behavior I get for <code>ctypes.util.find_library</code> on one of my machines (running Anaconda with Python 3.5 on Arch Linux), so we need to at least have a fallback for that. I can bring back the <code>find_library</code> method and only use the path for <code>nvcc</code> in case that fails.</p>\n<p>EDIT: according to the examples here, on Linux <code>find_library</code> only returns the library name, not the path: <a href=\"https://docs.python.org/3/library/ctypes.html#finding-shared-libraries\" rel=\"nofollow\">https://docs.python.org/3/library/ctypes.html#finding-shared-libraries</a>.</p>", "body_text": "@apaszke that's not the behavior I get for ctypes.util.find_library on one of my machines (running Anaconda with Python 3.5 on Arch Linux), so we need to at least have a fallback for that. I can bring back the find_library method and only use the path for nvcc in case that fails.\nEDIT: according to the examples here, on Linux find_library only returns the library name, not the path: https://docs.python.org/3/library/ctypes.html#finding-shared-libraries.", "body": "@apaszke that's not the behavior I get for `ctypes.util.find_library` on one of my machines (running Anaconda with Python 3.5 on Arch Linux), so we need to at least have a fallback for that. I can bring back the `find_library` method and only use the path for `nvcc` in case that fails.\r\n\r\nEDIT: according to the examples here, on Linux `find_library` only returns the library name, not the path: https://docs.python.org/3/library/ctypes.html#finding-shared-libraries."}