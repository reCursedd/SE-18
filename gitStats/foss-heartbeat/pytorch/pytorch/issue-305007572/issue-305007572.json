{"url": "https://api.github.com/repos/pytorch/pytorch/issues/5766", "repository_url": "https://api.github.com/repos/pytorch/pytorch", "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/5766/labels{/name}", "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/5766/comments", "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/5766/events", "html_url": "https://github.com/pytorch/pytorch/pull/5766", "id": 305007572, "node_id": "MDExOlB1bGxSZXF1ZXN0MTc0ODQzMjU4", "number": 5766, "title": "Enable resetting of batchnorm running stats and cumulative (\"simple\") moving average", "user": {"login": "jma127", "id": 2780434, "node_id": "MDQ6VXNlcjI3ODA0MzQ=", "avatar_url": "https://avatars2.githubusercontent.com/u/2780434?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jma127", "html_url": "https://github.com/jma127", "followers_url": "https://api.github.com/users/jma127/followers", "following_url": "https://api.github.com/users/jma127/following{/other_user}", "gists_url": "https://api.github.com/users/jma127/gists{/gist_id}", "starred_url": "https://api.github.com/users/jma127/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jma127/subscriptions", "organizations_url": "https://api.github.com/users/jma127/orgs", "repos_url": "https://api.github.com/users/jma127/repos", "events_url": "https://api.github.com/users/jma127/events{/privacy}", "received_events_url": "https://api.github.com/users/jma127/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 25, "created_at": "2018-03-14T03:06:56Z", "updated_at": "2018-11-23T15:40:55Z", "closed_at": "2018-03-19T15:47:58Z", "author_association": "CONTRIBUTOR", "pull_request": {"url": "https://api.github.com/repos/pytorch/pytorch/pulls/5766", "html_url": "https://github.com/pytorch/pytorch/pull/5766", "diff_url": "https://github.com/pytorch/pytorch/pull/5766.diff", "patch_url": "https://github.com/pytorch/pytorch/pull/5766.patch"}, "body_html": "<p>This is a proposed implementation of <code>reset_running_stats</code>, which I discussed with <a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=1310570\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/soumith\">@soumith</a> earlier today. In addition, it enables the use of the simple moving average for running stats in place of the exponential moving average, with a <code>momentum=None</code> setting.</p>\n<p>The motivation behind these changes is to faithfully execute the moment estimation of <a href=\"https://arxiv.org/abs/1502.03167\" rel=\"nofollow\">the original batchnorm paper</a> (line 10 in Algorithm 2). To do this, you would do:</p>\n<pre><code>bn_layer = BatchNorm(..., momentum=None)\n\n# construct the rest of the network and train\n\nbn_layer.reset_running_stats()\nfor i in range(num_bn_meanvar_batches):\n    model.forward(get_new_batch())\n\nbn_layer.eval()\n\n# use the model\n</code></pre>", "body_text": "This is a proposed implementation of reset_running_stats, which I discussed with @soumith earlier today. In addition, it enables the use of the simple moving average for running stats in place of the exponential moving average, with a momentum=None setting.\nThe motivation behind these changes is to faithfully execute the moment estimation of the original batchnorm paper (line 10 in Algorithm 2). To do this, you would do:\nbn_layer = BatchNorm(..., momentum=None)\n\n# construct the rest of the network and train\n\nbn_layer.reset_running_stats()\nfor i in range(num_bn_meanvar_batches):\n    model.forward(get_new_batch())\n\nbn_layer.eval()\n\n# use the model", "body": "This is a proposed implementation of ``reset_running_stats``, which I discussed with @soumith earlier today. In addition, it enables the use of the simple moving average for running stats in place of the exponential moving average, with a ``momentum=None`` setting.\r\n\r\nThe motivation behind these changes is to faithfully execute the moment estimation of [the original batchnorm paper](https://arxiv.org/abs/1502.03167) (line 10 in Algorithm 2). To do this, you would do:\r\n\r\n    bn_layer = BatchNorm(..., momentum=None)\r\n    \r\n    # construct the rest of the network and train\r\n    \r\n    bn_layer.reset_running_stats()\r\n    for i in range(num_bn_meanvar_batches):\r\n        model.forward(get_new_batch())\r\n\r\n    bn_layer.eval()\r\n\r\n    # use the model\r\n"}