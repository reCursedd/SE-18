{"url": "https://api.github.com/repos/pytorch/pytorch/issues/comments/247416498", "html_url": "https://github.com/pytorch/pytorch/issues/29#issuecomment-247416498", "issue_url": "https://api.github.com/repos/pytorch/pytorch/issues/29", "id": 247416498, "node_id": "MDEyOklzc3VlQ29tbWVudDI0NzQxNjQ5OA==", "user": {"login": "adamlerer", "id": 5702157, "node_id": "MDQ6VXNlcjU3MDIxNTc=", "avatar_url": "https://avatars2.githubusercontent.com/u/5702157?v=4", "gravatar_id": "", "url": "https://api.github.com/users/adamlerer", "html_url": "https://github.com/adamlerer", "followers_url": "https://api.github.com/users/adamlerer/followers", "following_url": "https://api.github.com/users/adamlerer/following{/other_user}", "gists_url": "https://api.github.com/users/adamlerer/gists{/gist_id}", "starred_url": "https://api.github.com/users/adamlerer/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/adamlerer/subscriptions", "organizations_url": "https://api.github.com/users/adamlerer/orgs", "repos_url": "https://api.github.com/users/adamlerer/repos", "events_url": "https://api.github.com/users/adamlerer/events{/privacy}", "received_events_url": "https://api.github.com/users/adamlerer/received_events", "type": "User", "site_admin": false}, "created_at": "2016-09-15T18:48:39Z", "updated_at": "2016-09-15T18:48:39Z", "author_association": "CONTRIBUTOR", "body_html": "<p>How does Chainer deal with the following architecture:</p>\n<pre><code>M1 = nn.Sequential([A, B])\nM2 = nn.Sequential([A, C])\nM = nn.Sequential([M1, M2])\n</code></pre>\n<p>Is this actually a realistic use case?</p>\n<p>On Thu, Sep 15, 2016 at 2:29 PM, Sam Gross <a href=\"mailto:notifications@github.com\">notifications@github.com</a> wrote:</p>\n<blockquote>\n<p>Chainer solves this in a different way: each module can only occur once,<br>\nin a single container, although you can invoke it many times. This might<br>\nend up being much simpler and less error prone.</p>\n<p>\u2014<br>\nYou are receiving this because you authored the thread.<br>\nReply to this email directly, view it on GitHub<br>\n<a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load issue title\" data-id=\"177056361\" data-permission-text=\"Issue title is private\" data-url=\"https://github.com/pytorch/pytorch/issues/29\" data-hovercard-type=\"issue\" data-hovercard-url=\"/pytorch/pytorch/issues/29/hovercard?comment_id=247411250&amp;comment_type=issue_comment\" href=\"https://github.com/pytorch/pytorch/issues/29#issuecomment-247411250\">#29 (comment)</a>, or mute<br>\nthe thread<br>\n<a href=\"https://github.com/notifications/unsubscribe-auth/AFcCDdRHOPW2ewi_FtwdRt8yHo1_vGF4ks5qqY5_gaJpZM4J9YXB\">https://github.com/notifications/unsubscribe-auth/AFcCDdRHOPW2ewi_FtwdRt8yHo1_vGF4ks5qqY5_gaJpZM4J9YXB</a><br>\n.</p>\n</blockquote>", "body_text": "How does Chainer deal with the following architecture:\nM1 = nn.Sequential([A, B])\nM2 = nn.Sequential([A, C])\nM = nn.Sequential([M1, M2])\n\nIs this actually a realistic use case?\nOn Thu, Sep 15, 2016 at 2:29 PM, Sam Gross notifications@github.com wrote:\n\nChainer solves this in a different way: each module can only occur once,\nin a single container, although you can invoke it many times. This might\nend up being much simpler and less error prone.\n\u2014\nYou are receiving this because you authored the thread.\nReply to this email directly, view it on GitHub\n#29 (comment), or mute\nthe thread\nhttps://github.com/notifications/unsubscribe-auth/AFcCDdRHOPW2ewi_FtwdRt8yHo1_vGF4ks5qqY5_gaJpZM4J9YXB\n.", "body": "How does Chainer deal with the following architecture:\n\n```\nM1 = nn.Sequential([A, B])\nM2 = nn.Sequential([A, C])\nM = nn.Sequential([M1, M2])\n```\n\nIs this actually a realistic use case?\n\nOn Thu, Sep 15, 2016 at 2:29 PM, Sam Gross notifications@github.com wrote:\n\n> Chainer solves this in a different way: each module can only occur once,\n> in a single container, although you can invoke it many times. This might\n> end up being much simpler and less error prone.\n> \n> \u2014\n> You are receiving this because you authored the thread.\n> Reply to this email directly, view it on GitHub\n> https://github.com/pytorch/pytorch/issues/29#issuecomment-247411250, or mute\n> the thread\n> https://github.com/notifications/unsubscribe-auth/AFcCDdRHOPW2ewi_FtwdRt8yHo1_vGF4ks5qqY5_gaJpZM4J9YXB\n> .\n"}