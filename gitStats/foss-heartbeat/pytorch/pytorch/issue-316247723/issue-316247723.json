{"url": "https://api.github.com/repos/pytorch/pytorch/issues/6801", "repository_url": "https://api.github.com/repos/pytorch/pytorch", "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/6801/labels{/name}", "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/6801/comments", "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/6801/events", "html_url": "https://github.com/pytorch/pytorch/issues/6801", "id": 316247723, "node_id": "MDU6SXNzdWUzMTYyNDc3MjM=", "number": 6801, "title": "error when loading model saved under newer version", "user": {"login": "Microos", "id": 14972757, "node_id": "MDQ6VXNlcjE0OTcyNzU3", "avatar_url": "https://avatars2.githubusercontent.com/u/14972757?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Microos", "html_url": "https://github.com/Microos", "followers_url": "https://api.github.com/users/Microos/followers", "following_url": "https://api.github.com/users/Microos/following{/other_user}", "gists_url": "https://api.github.com/users/Microos/gists{/gist_id}", "starred_url": "https://api.github.com/users/Microos/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Microos/subscriptions", "organizations_url": "https://api.github.com/users/Microos/orgs", "repos_url": "https://api.github.com/users/Microos/repos", "events_url": "https://api.github.com/users/Microos/events{/privacy}", "received_events_url": "https://api.github.com/users/Microos/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2018-04-20T12:27:30Z", "updated_at": "2018-04-20T18:14:39Z", "closed_at": "2018-04-20T18:09:46Z", "author_association": "NONE", "body_html": "<h2>PyTorch GitHub Issues Guidelines</h2>\n<p>We like to limit our issues to bug reports and feature requests. If you have a question or would like help and support, please visit our forums: <a href=\"https://discuss.pytorch.org/\" rel=\"nofollow\">https://discuss.pytorch.org/</a></p>\n<p>If you are submitting a feature request, please preface the title with [feature request].</p>\n<p>When submitting a bug report, please include the following information (where relevant):</p>\n<ul>\n<li>PyTorch or Caffe2: <code>PyTorch</code></li>\n<li>OS: <code>Ubuntu 16.04</code></li>\n<li>PyTorch version:  save using <code>0.4.0a0+67bbf58</code>, load using <code>0.2.0</code></li>\n<li>How you installed PyTorch (conda, pip, source): <code>source</code></li>\n<li>Python version: <code>python2.7</code></li>\n<li>CUDA/cuDNN version: <code>8.0/6.1</code></li>\n<li>GPU models and configuration: <code>TitanXp</code></li>\n<li>GCC version (if compiling from source): <code>gcc (Ubuntu 5.4.0-6ubuntu1~16.04.9) 5.4.0 20160609</code></li>\n<li>CMake version:  <code>cmake version 3.5.1</code></li>\n<li>Build command you used (if compiling from source): <code>python setup.py install --user</code></li>\n<li>Versions of any other relevant libraries:</li>\n</ul>\n<p>In addition, including the following information will also be very helpful for us to diagnose the problem:</p>\n<ul>\n<li>A script to reproduce the bug. Please try to provide as minimal of a test case as possible.</li>\n<li>Error messages and/or stack traces of the bug</li>\n<li>Context around what you are trying to do</li>\n</ul>\n<ul>\n<li>Create a tensor and save it in <code>0.4.0a0+67bbf58</code>:</li>\n</ul>\n<div class=\"highlight highlight-source-python\"><pre><span class=\"pl-k\">import</span> torch <span class=\"pl-k\">as</span> tc\n<span class=\"pl-c1\">print</span>(tc.<span class=\"pl-c1\">__version__</span>) <span class=\"pl-c\"><span class=\"pl-c\">#</span> 0.2.0</span>\nt <span class=\"pl-k\">=</span> tc.ones(<span class=\"pl-c1\">3</span>)\ntc.save(t, <span class=\"pl-s\"><span class=\"pl-pds\">'</span>./t.pth<span class=\"pl-pds\">'</span></span>)</pre></div>\n<ul>\n<li>Load it in <code>0.2.0</code>:</li>\n</ul>\n<div class=\"highlight highlight-source-python\"><pre><span class=\"pl-k\">import</span> torch <span class=\"pl-k\">as</span> tc\n<span class=\"pl-c1\">print</span>(tc.<span class=\"pl-c1\">__version__</span>) <span class=\"pl-c\"><span class=\"pl-c\">#</span> 0.4.0a0+67bbf58</span>\nt <span class=\"pl-k\">=</span> tc.load(<span class=\"pl-s\"><span class=\"pl-pds\">'</span>./t.pth<span class=\"pl-pds\">'</span></span>) <span class=\"pl-c\"><span class=\"pl-c\">#</span> error</span></pre></div>\n<ul>\n<li>ERROR:</li>\n</ul>\n<pre><code>---------------------------------------------------------------------------\nAttributeError                            Traceback (most recent call last)\n&lt;ipython-input-2-5932959b71e5&gt; in &lt;module&gt;()\n----&gt; 1 x = tc.load('./t.pth')\n\n/home/ylxie/.local/lib/python2.7/site-packages/torch/serialization.pyc in load(f, map_location, pickle_module)\n    229         f = open(f, 'rb')\n    230     try:\n--&gt; 231         return _load(f, map_location, pickle_module)\n    232     finally:\n    233         if new_fd:\n\n/home/ylxie/.local/lib/python2.7/site-packages/torch/serialization.pyc in _load(f, map_location, pickle_module)\n    377     unpickler = pickle_module.Unpickler(f)\n    378     unpickler.persistent_load = persistent_load\n--&gt; 379     result = unpickler.load()\n    380 \n    381     deserialized_storage_keys = pickle_module.load(f)\n\nAttributeError: 'module' object has no attribute '_rebuild_tensor_v2'\n</code></pre>\n<p>How could I solve this? this is an abstract version of my issue,  the <code>t</code> is actually a <code>state_dict</code>. Is there any way I can specify a saving protocol for the convenience of loading models at an older version.</p>", "body_text": "PyTorch GitHub Issues Guidelines\nWe like to limit our issues to bug reports and feature requests. If you have a question or would like help and support, please visit our forums: https://discuss.pytorch.org/\nIf you are submitting a feature request, please preface the title with [feature request].\nWhen submitting a bug report, please include the following information (where relevant):\n\nPyTorch or Caffe2: PyTorch\nOS: Ubuntu 16.04\nPyTorch version:  save using 0.4.0a0+67bbf58, load using 0.2.0\nHow you installed PyTorch (conda, pip, source): source\nPython version: python2.7\nCUDA/cuDNN version: 8.0/6.1\nGPU models and configuration: TitanXp\nGCC version (if compiling from source): gcc (Ubuntu 5.4.0-6ubuntu1~16.04.9) 5.4.0 20160609\nCMake version:  cmake version 3.5.1\nBuild command you used (if compiling from source): python setup.py install --user\nVersions of any other relevant libraries:\n\nIn addition, including the following information will also be very helpful for us to diagnose the problem:\n\nA script to reproduce the bug. Please try to provide as minimal of a test case as possible.\nError messages and/or stack traces of the bug\nContext around what you are trying to do\n\n\nCreate a tensor and save it in 0.4.0a0+67bbf58:\n\nimport torch as tc\nprint(tc.__version__) # 0.2.0\nt = tc.ones(3)\ntc.save(t, './t.pth')\n\nLoad it in 0.2.0:\n\nimport torch as tc\nprint(tc.__version__) # 0.4.0a0+67bbf58\nt = tc.load('./t.pth') # error\n\nERROR:\n\n---------------------------------------------------------------------------\nAttributeError                            Traceback (most recent call last)\n<ipython-input-2-5932959b71e5> in <module>()\n----> 1 x = tc.load('./t.pth')\n\n/home/ylxie/.local/lib/python2.7/site-packages/torch/serialization.pyc in load(f, map_location, pickle_module)\n    229         f = open(f, 'rb')\n    230     try:\n--> 231         return _load(f, map_location, pickle_module)\n    232     finally:\n    233         if new_fd:\n\n/home/ylxie/.local/lib/python2.7/site-packages/torch/serialization.pyc in _load(f, map_location, pickle_module)\n    377     unpickler = pickle_module.Unpickler(f)\n    378     unpickler.persistent_load = persistent_load\n--> 379     result = unpickler.load()\n    380 \n    381     deserialized_storage_keys = pickle_module.load(f)\n\nAttributeError: 'module' object has no attribute '_rebuild_tensor_v2'\n\nHow could I solve this? this is an abstract version of my issue,  the t is actually a state_dict. Is there any way I can specify a saving protocol for the convenience of loading models at an older version.", "body": "PyTorch GitHub Issues Guidelines\r\n--------------------------------\r\n\r\nWe like to limit our issues to bug reports and feature requests. If you have a question or would like help and support, please visit our forums: https://discuss.pytorch.org/\r\n\r\nIf you are submitting a feature request, please preface the title with [feature request].\r\n\r\nWhen submitting a bug report, please include the following information (where relevant):\r\n- PyTorch or Caffe2: `PyTorch`\r\n- OS: `Ubuntu 16.04`\r\n- PyTorch version:  save using `0.4.0a0+67bbf58`, load using `0.2.0`\r\n- How you installed PyTorch (conda, pip, source): `source`\r\n- Python version: `python2.7`\r\n- CUDA/cuDNN version: `8.0/6.1`\r\n- GPU models and configuration: `TitanXp`\r\n- GCC version (if compiling from source): `gcc (Ubuntu 5.4.0-6ubuntu1~16.04.9) 5.4.0 20160609`\r\n- CMake version:  `cmake version 3.5.1`\r\n- Build command you used (if compiling from source): `python setup.py install --user`\r\n- Versions of any other relevant libraries:\r\n\r\nIn addition, including the following information will also be very helpful for us to diagnose the problem:\r\n- A script to reproduce the bug. Please try to provide as minimal of a test case as possible.\r\n- Error messages and/or stack traces of the bug\r\n- Context around what you are trying to do\r\n\r\n* Create a tensor and save it in `0.4.0a0+67bbf58`:\r\n```Python\r\nimport torch as tc\r\nprint(tc.__version__) # 0.2.0\r\nt = tc.ones(3)\r\ntc.save(t, './t.pth')\r\n```\r\n* Load it in `0.2.0`:\r\n```Python\r\nimport torch as tc\r\nprint(tc.__version__) # 0.4.0a0+67bbf58\r\nt = tc.load('./t.pth') # error\r\n```\r\n* ERROR:\r\n```\r\n---------------------------------------------------------------------------\r\nAttributeError                            Traceback (most recent call last)\r\n<ipython-input-2-5932959b71e5> in <module>()\r\n----> 1 x = tc.load('./t.pth')\r\n\r\n/home/ylxie/.local/lib/python2.7/site-packages/torch/serialization.pyc in load(f, map_location, pickle_module)\r\n    229         f = open(f, 'rb')\r\n    230     try:\r\n--> 231         return _load(f, map_location, pickle_module)\r\n    232     finally:\r\n    233         if new_fd:\r\n\r\n/home/ylxie/.local/lib/python2.7/site-packages/torch/serialization.pyc in _load(f, map_location, pickle_module)\r\n    377     unpickler = pickle_module.Unpickler(f)\r\n    378     unpickler.persistent_load = persistent_load\r\n--> 379     result = unpickler.load()\r\n    380 \r\n    381     deserialized_storage_keys = pickle_module.load(f)\r\n\r\nAttributeError: 'module' object has no attribute '_rebuild_tensor_v2'\r\n```\r\n\r\nHow could I solve this? this is an abstract version of my issue,  the `t` is actually a `state_dict`. Is there any way I can specify a saving protocol for the convenience of loading models at an older version.\r\n\r\n"}