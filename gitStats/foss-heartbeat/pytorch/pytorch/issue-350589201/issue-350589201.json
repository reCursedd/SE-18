{"url": "https://api.github.com/repos/pytorch/pytorch/issues/10515", "repository_url": "https://api.github.com/repos/pytorch/pytorch", "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/10515/labels{/name}", "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/10515/comments", "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/10515/events", "html_url": "https://github.com/pytorch/pytorch/issues/10515", "id": 350589201, "node_id": "MDU6SXNzdWUzNTA1ODkyMDE=", "number": 10515, "title": "[Caffe2] Segmentation faults in multithreading Caffe2", "user": {"login": "minthetkhine", "id": 36428221, "node_id": "MDQ6VXNlcjM2NDI4MjIx", "avatar_url": "https://avatars0.githubusercontent.com/u/36428221?v=4", "gravatar_id": "", "url": "https://api.github.com/users/minthetkhine", "html_url": "https://github.com/minthetkhine", "followers_url": "https://api.github.com/users/minthetkhine/followers", "following_url": "https://api.github.com/users/minthetkhine/following{/other_user}", "gists_url": "https://api.github.com/users/minthetkhine/gists{/gist_id}", "starred_url": "https://api.github.com/users/minthetkhine/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/minthetkhine/subscriptions", "organizations_url": "https://api.github.com/users/minthetkhine/orgs", "repos_url": "https://api.github.com/users/minthetkhine/repos", "events_url": "https://api.github.com/users/minthetkhine/events{/privacy}", "received_events_url": "https://api.github.com/users/minthetkhine/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 890282107, "node_id": "MDU6TGFiZWw4OTAyODIxMDc=", "url": "https://api.github.com/repos/pytorch/pytorch/labels/caffe2", "name": "caffe2", "color": "210aa8", "default": false}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 7, "created_at": "2018-08-14T20:40:06Z", "updated_at": "2018-08-17T15:28:32Z", "closed_at": null, "author_association": "NONE", "body_html": "<p>I wrote these scripts in reference to the Caffe2 tutorials to check if Caffe2 is thread-safe.</p>\n<p>caffe2_trial.py:</p>\n<pre><code>#!/usr/bin/python\n\nfrom caffe2.python import workspace\n\nimport threading\nimport caffe2_multithreading\n\nNUM_THREADS = 2\n\ndef worker():\n    caffe2_multithreading.main()\n\ndef run_workers():\n\n    threads = [threading.Thread(name=\"Thread{}\".format(i), target=worker) for i in range(NUM_THREADS)]\n    for thread in threads:\n        thread.start()\n\nworkspace.GlobalInit(['caffe2', '--caffe2_log_level=0'])\nrun_workers()\n</code></pre>\n<p>caffe2_multithreading.py:</p>\n<pre><code>from caffe2.python import workspace, model_helper\n\nimport numpy as np \nimport threading\n\ndef main():\n\n    data = np.random.rand(16, 100).astype(np.float32)\n    label = (np.random.rand(16) * 10).astype(np.int32)\n\n    workspace.FeedBlob(\"data\", data)\n    workspace.FeedBlob(\"label\", label)\n\n    m = model_helper.ModelHelper(name=\"my first net\")\n\n    weight = m.param_init_net.XavierFill([], \"fc_w\", shape=[10, 100])\n    bias = m.param_init_net.ConstantFill([], \"fc_b\", shape=[10, ])\n\n    fc_l = m.net.FC([\"data\", \"fc_w\", \"fc_b\"], \"fcl\")\n    pred = m.net.Sigmoid(fc_l, \"pred\")\n    softmax, loss = m.net.SoftmaxWithLoss([pred, \"label\"], [\"softmax\", \"loss\"])\n\n    workspace.RunNetOnce(m.param_init_net)\n    workspace.CreateNet(m.net)\n\n    for _ in range(100):\n        data = np.random.rand(16, 100).astype(np.float32)\n        label = (np.random.rand(16) * 10).astype(np.int32)\n        workspace.FeedBlob(\"data\", data)\n        workspace.FeedBlob(\"label\", label)\n        workspace.RunNet(m.name, 10)\n    \n    print(\"{} in {} fetched blob softmax:\\n{}\".format(workspace.CurrentWorkspace(), threading.current_thread().name, workspace.FetchBlob(\"softmax\")))\n    print(\"{} in {} fetched blob loss:\\n{}\".format(workspace.CurrentWorkspace(), threading.current_thread().name, workspace.FetchBlob(\"loss\")))\n\nif __name__ == '__main__':\n    main()\n</code></pre>\n<p>When I run these, I get segfaults as below:</p>\n<pre><code>E0814 16:35:11.237641 13596 init_intrinsics_check.cc:43] CPU feature avx is present on your machine, but the Caffe2 binary is not compiled with it. It means you may not get the full speed of your CPU.\nE0814 16:35:11.237673 13596 init_intrinsics_check.cc:43] CPU feature avx2 is present on your machine, but the Caffe2 binary is not compiled with it. It means you may not get the full speed of your CPU.\nE0814 16:35:11.237675 13596 init_intrinsics_check.cc:43] CPU feature fma is present on your machine, but the Caffe2 binary is not compiled with it. It means you may not get the full speed of your CPU.\n*** Aborted at 1534278911 (unix time) try \"date -d @1534278911\" if you are using GNU date ***\nPC: @     0x7f98556c85b8 caffe2::math::Gemm&lt;&gt;()\n*** SIGSEGV (@0x0) received by PID 13596 (TID 0x7f9815001700) from PID 0; stack trace: ***\n    @     0x7f98ab66e390 (unknown)\n    @     0x7f98556c85b8 caffe2::math::Gemm&lt;&gt;()\n    @     0x7f9855c08c58 caffe2::FullyConnectedOp&lt;&gt;::DoRunWithType&lt;&gt;()\n    @     0x7f98556d89d2 caffe2::Operator&lt;&gt;::Run()\n    @     0x7f98557848bb caffe2::SimpleNet::Run()\n    @     0x7f985578f49a caffe2::Workspace::RunNet()\n    @     0x7f98564e9477 _ZZN8pybind1112cpp_function10initializeIZN6caffe26python16addGlobalMethodsERNS_6moduleEEUlRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEibE19_bJSD_ibEJNS_4nameENS_5scopeENS_7siblingEEEEvOT_PFT0_DpT1_EDpRKT2_ENUlRNS_6detail13function_callEE1_4_FUNESV_\n    @     0x7f985652ba0e pybind11::cpp_function::dispatcher()\n    @           0x4c30ce PyEval_EvalFrameEx\n    @           0x4b9ab6 PyEval_EvalCodeEx\n    @           0x4c1e6f PyEval_EvalFrameEx\n    @           0x4b9ab6 PyEval_EvalCodeEx\n    @           0x4c16e7 PyEval_EvalFrameEx\n    @           0x4b9ab6 PyEval_EvalCodeEx\n    @           0x4d55f3 (unknown)\n    @           0x4a577e PyObject_Call\n    @           0x4bed3d PyEval_EvalFrameEx\n    @           0x4c136f PyEval_EvalFrameEx\n    @           0x4c136f PyEval_EvalFrameEx\n    @           0x4b9ab6 PyEval_EvalCodeEx\n    @           0x4d54b9 (unknown)\n    @           0x4eebee (unknown)\n    @           0x4a577e PyObject_Call\n    @           0x4c5e10 PyEval_CallObjectWithKeywords\n    @           0x589172 (unknown)\n    @     0x7f98ab6646ba start_thread\ndefault in Thread0 fetched blob softmax:\n[[0.10406707 0.0958132  0.11186256 0.10592665 0.0817344  0.09865279\n  0.09048746 0.08944649 0.10203679 0.11997259]\n [0.10739651 0.09508494 0.10893054 0.10854136 0.0935948  0.09612396\n  0.10101433 0.08424021 0.09613933 0.10893402]\n [0.10163862 0.09200761 0.10511011 0.109869   0.09156405 0.10474087\n  0.1022335  0.0703143  0.09938712 0.12313475]\n [0.08985671 0.09775824 0.11547512 0.09998353 0.09359182 0.10500769\n  0.08895223 0.08376996 0.10898601 0.11661875]\n [0.08954862 0.08843845 0.11500646 0.09689793 0.09185582 0.10589205\n  0.10810956 0.08333685 0.10339628 0.11751796]\n [0.09852833 0.09209983 0.11036412 0.10263348 0.09042244 0.10394713\n  0.10160396 0.07928675 0.10388856 0.11722537]\n [0.10337994 0.09972429 0.11327668 0.08736703 0.09438661 0.10448781\n  0.0878675  0.08105434 0.10431094 0.12414487]\n [0.09534382 0.09335071 0.11011291 0.10551803 0.08672015 0.10744442\n  0.10062116 0.07553869 0.09846447 0.12688567]\n [0.09399191 0.10102197 0.11472756 0.09188537 0.08315386 0.11782556\n  0.0986233  0.08276524 0.10503418 0.11097106]\n [0.09374088 0.09551394 0.11585982 0.11314663 0.09346773 0.09375941\n  0.09588219 0.08359513 0.1058373  0.10919697]\n [0.10109688 0.0993735  0.11368633 0.08764622 0.09819658 0.11559883\n  0.09014595 0.0805226  0.10728084 0.10645223]\n [0.10267685 0.09026854 0.11018284 0.10741374 0.09042422 0.11028332\n  0.09176522 0.08200574 0.09634313 0.11863648]\n [0.10321208 0.09730779 0.10979314 0.10604937 0.09673787 0.10101081\n  0.09481944 0.08262547 0.09426087 0.11418316]\n [0.10170192 0.09810354 0.11086501 0.09821761 0.09967485 0.10490072\n  0.09211882 0.08475582 0.09108799 0.11857382]\n [0.09822202 0.10342799 0.10083076 0.10264489 0.09806627 0.10075969\n  0.10523681 0.08029877 0.09441201 0.11610077]\n [0.09419835 0.10204436 0.10571007 0.11321441 0.09489898 0.1064717\n  0.08542782 0.09340751 0.09008439 0.11454245]]\ndefault in Thread0 fetched blob loss:\n2.26629066467\n    @     0x7f98ab39a41d clone\n    @                0x0 (unknown)\nSegmentation fault (core dumped)\n</code></pre>\n<p>Does this mean that Caffe2 is not thread-safe? I have been working hard for days just to get multithreading working in Caffe2. Thanks!</p>", "body_text": "I wrote these scripts in reference to the Caffe2 tutorials to check if Caffe2 is thread-safe.\ncaffe2_trial.py:\n#!/usr/bin/python\n\nfrom caffe2.python import workspace\n\nimport threading\nimport caffe2_multithreading\n\nNUM_THREADS = 2\n\ndef worker():\n    caffe2_multithreading.main()\n\ndef run_workers():\n\n    threads = [threading.Thread(name=\"Thread{}\".format(i), target=worker) for i in range(NUM_THREADS)]\n    for thread in threads:\n        thread.start()\n\nworkspace.GlobalInit(['caffe2', '--caffe2_log_level=0'])\nrun_workers()\n\ncaffe2_multithreading.py:\nfrom caffe2.python import workspace, model_helper\n\nimport numpy as np \nimport threading\n\ndef main():\n\n    data = np.random.rand(16, 100).astype(np.float32)\n    label = (np.random.rand(16) * 10).astype(np.int32)\n\n    workspace.FeedBlob(\"data\", data)\n    workspace.FeedBlob(\"label\", label)\n\n    m = model_helper.ModelHelper(name=\"my first net\")\n\n    weight = m.param_init_net.XavierFill([], \"fc_w\", shape=[10, 100])\n    bias = m.param_init_net.ConstantFill([], \"fc_b\", shape=[10, ])\n\n    fc_l = m.net.FC([\"data\", \"fc_w\", \"fc_b\"], \"fcl\")\n    pred = m.net.Sigmoid(fc_l, \"pred\")\n    softmax, loss = m.net.SoftmaxWithLoss([pred, \"label\"], [\"softmax\", \"loss\"])\n\n    workspace.RunNetOnce(m.param_init_net)\n    workspace.CreateNet(m.net)\n\n    for _ in range(100):\n        data = np.random.rand(16, 100).astype(np.float32)\n        label = (np.random.rand(16) * 10).astype(np.int32)\n        workspace.FeedBlob(\"data\", data)\n        workspace.FeedBlob(\"label\", label)\n        workspace.RunNet(m.name, 10)\n    \n    print(\"{} in {} fetched blob softmax:\\n{}\".format(workspace.CurrentWorkspace(), threading.current_thread().name, workspace.FetchBlob(\"softmax\")))\n    print(\"{} in {} fetched blob loss:\\n{}\".format(workspace.CurrentWorkspace(), threading.current_thread().name, workspace.FetchBlob(\"loss\")))\n\nif __name__ == '__main__':\n    main()\n\nWhen I run these, I get segfaults as below:\nE0814 16:35:11.237641 13596 init_intrinsics_check.cc:43] CPU feature avx is present on your machine, but the Caffe2 binary is not compiled with it. It means you may not get the full speed of your CPU.\nE0814 16:35:11.237673 13596 init_intrinsics_check.cc:43] CPU feature avx2 is present on your machine, but the Caffe2 binary is not compiled with it. It means you may not get the full speed of your CPU.\nE0814 16:35:11.237675 13596 init_intrinsics_check.cc:43] CPU feature fma is present on your machine, but the Caffe2 binary is not compiled with it. It means you may not get the full speed of your CPU.\n*** Aborted at 1534278911 (unix time) try \"date -d @1534278911\" if you are using GNU date ***\nPC: @     0x7f98556c85b8 caffe2::math::Gemm<>()\n*** SIGSEGV (@0x0) received by PID 13596 (TID 0x7f9815001700) from PID 0; stack trace: ***\n    @     0x7f98ab66e390 (unknown)\n    @     0x7f98556c85b8 caffe2::math::Gemm<>()\n    @     0x7f9855c08c58 caffe2::FullyConnectedOp<>::DoRunWithType<>()\n    @     0x7f98556d89d2 caffe2::Operator<>::Run()\n    @     0x7f98557848bb caffe2::SimpleNet::Run()\n    @     0x7f985578f49a caffe2::Workspace::RunNet()\n    @     0x7f98564e9477 _ZZN8pybind1112cpp_function10initializeIZN6caffe26python16addGlobalMethodsERNS_6moduleEEUlRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEibE19_bJSD_ibEJNS_4nameENS_5scopeENS_7siblingEEEEvOT_PFT0_DpT1_EDpRKT2_ENUlRNS_6detail13function_callEE1_4_FUNESV_\n    @     0x7f985652ba0e pybind11::cpp_function::dispatcher()\n    @           0x4c30ce PyEval_EvalFrameEx\n    @           0x4b9ab6 PyEval_EvalCodeEx\n    @           0x4c1e6f PyEval_EvalFrameEx\n    @           0x4b9ab6 PyEval_EvalCodeEx\n    @           0x4c16e7 PyEval_EvalFrameEx\n    @           0x4b9ab6 PyEval_EvalCodeEx\n    @           0x4d55f3 (unknown)\n    @           0x4a577e PyObject_Call\n    @           0x4bed3d PyEval_EvalFrameEx\n    @           0x4c136f PyEval_EvalFrameEx\n    @           0x4c136f PyEval_EvalFrameEx\n    @           0x4b9ab6 PyEval_EvalCodeEx\n    @           0x4d54b9 (unknown)\n    @           0x4eebee (unknown)\n    @           0x4a577e PyObject_Call\n    @           0x4c5e10 PyEval_CallObjectWithKeywords\n    @           0x589172 (unknown)\n    @     0x7f98ab6646ba start_thread\ndefault in Thread0 fetched blob softmax:\n[[0.10406707 0.0958132  0.11186256 0.10592665 0.0817344  0.09865279\n  0.09048746 0.08944649 0.10203679 0.11997259]\n [0.10739651 0.09508494 0.10893054 0.10854136 0.0935948  0.09612396\n  0.10101433 0.08424021 0.09613933 0.10893402]\n [0.10163862 0.09200761 0.10511011 0.109869   0.09156405 0.10474087\n  0.1022335  0.0703143  0.09938712 0.12313475]\n [0.08985671 0.09775824 0.11547512 0.09998353 0.09359182 0.10500769\n  0.08895223 0.08376996 0.10898601 0.11661875]\n [0.08954862 0.08843845 0.11500646 0.09689793 0.09185582 0.10589205\n  0.10810956 0.08333685 0.10339628 0.11751796]\n [0.09852833 0.09209983 0.11036412 0.10263348 0.09042244 0.10394713\n  0.10160396 0.07928675 0.10388856 0.11722537]\n [0.10337994 0.09972429 0.11327668 0.08736703 0.09438661 0.10448781\n  0.0878675  0.08105434 0.10431094 0.12414487]\n [0.09534382 0.09335071 0.11011291 0.10551803 0.08672015 0.10744442\n  0.10062116 0.07553869 0.09846447 0.12688567]\n [0.09399191 0.10102197 0.11472756 0.09188537 0.08315386 0.11782556\n  0.0986233  0.08276524 0.10503418 0.11097106]\n [0.09374088 0.09551394 0.11585982 0.11314663 0.09346773 0.09375941\n  0.09588219 0.08359513 0.1058373  0.10919697]\n [0.10109688 0.0993735  0.11368633 0.08764622 0.09819658 0.11559883\n  0.09014595 0.0805226  0.10728084 0.10645223]\n [0.10267685 0.09026854 0.11018284 0.10741374 0.09042422 0.11028332\n  0.09176522 0.08200574 0.09634313 0.11863648]\n [0.10321208 0.09730779 0.10979314 0.10604937 0.09673787 0.10101081\n  0.09481944 0.08262547 0.09426087 0.11418316]\n [0.10170192 0.09810354 0.11086501 0.09821761 0.09967485 0.10490072\n  0.09211882 0.08475582 0.09108799 0.11857382]\n [0.09822202 0.10342799 0.10083076 0.10264489 0.09806627 0.10075969\n  0.10523681 0.08029877 0.09441201 0.11610077]\n [0.09419835 0.10204436 0.10571007 0.11321441 0.09489898 0.1064717\n  0.08542782 0.09340751 0.09008439 0.11454245]]\ndefault in Thread0 fetched blob loss:\n2.26629066467\n    @     0x7f98ab39a41d clone\n    @                0x0 (unknown)\nSegmentation fault (core dumped)\n\nDoes this mean that Caffe2 is not thread-safe? I have been working hard for days just to get multithreading working in Caffe2. Thanks!", "body": "I wrote these scripts in reference to the Caffe2 tutorials to check if Caffe2 is thread-safe.\r\n\r\ncaffe2_trial.py:\r\n\r\n```\r\n#!/usr/bin/python\r\n\r\nfrom caffe2.python import workspace\r\n\r\nimport threading\r\nimport caffe2_multithreading\r\n\r\nNUM_THREADS = 2\r\n\r\ndef worker():\r\n    caffe2_multithreading.main()\r\n\r\ndef run_workers():\r\n\r\n    threads = [threading.Thread(name=\"Thread{}\".format(i), target=worker) for i in range(NUM_THREADS)]\r\n    for thread in threads:\r\n        thread.start()\r\n\r\nworkspace.GlobalInit(['caffe2', '--caffe2_log_level=0'])\r\nrun_workers()\r\n```\r\n\r\ncaffe2_multithreading.py:\r\n\r\n```\r\nfrom caffe2.python import workspace, model_helper\r\n\r\nimport numpy as np \r\nimport threading\r\n\r\ndef main():\r\n\r\n    data = np.random.rand(16, 100).astype(np.float32)\r\n    label = (np.random.rand(16) * 10).astype(np.int32)\r\n\r\n    workspace.FeedBlob(\"data\", data)\r\n    workspace.FeedBlob(\"label\", label)\r\n\r\n    m = model_helper.ModelHelper(name=\"my first net\")\r\n\r\n    weight = m.param_init_net.XavierFill([], \"fc_w\", shape=[10, 100])\r\n    bias = m.param_init_net.ConstantFill([], \"fc_b\", shape=[10, ])\r\n\r\n    fc_l = m.net.FC([\"data\", \"fc_w\", \"fc_b\"], \"fcl\")\r\n    pred = m.net.Sigmoid(fc_l, \"pred\")\r\n    softmax, loss = m.net.SoftmaxWithLoss([pred, \"label\"], [\"softmax\", \"loss\"])\r\n\r\n    workspace.RunNetOnce(m.param_init_net)\r\n    workspace.CreateNet(m.net)\r\n\r\n    for _ in range(100):\r\n        data = np.random.rand(16, 100).astype(np.float32)\r\n        label = (np.random.rand(16) * 10).astype(np.int32)\r\n        workspace.FeedBlob(\"data\", data)\r\n        workspace.FeedBlob(\"label\", label)\r\n        workspace.RunNet(m.name, 10)\r\n    \r\n    print(\"{} in {} fetched blob softmax:\\n{}\".format(workspace.CurrentWorkspace(), threading.current_thread().name, workspace.FetchBlob(\"softmax\")))\r\n    print(\"{} in {} fetched blob loss:\\n{}\".format(workspace.CurrentWorkspace(), threading.current_thread().name, workspace.FetchBlob(\"loss\")))\r\n\r\nif __name__ == '__main__':\r\n    main()\r\n```\r\n\r\nWhen I run these, I get segfaults as below:\r\n\r\n```\r\nE0814 16:35:11.237641 13596 init_intrinsics_check.cc:43] CPU feature avx is present on your machine, but the Caffe2 binary is not compiled with it. It means you may not get the full speed of your CPU.\r\nE0814 16:35:11.237673 13596 init_intrinsics_check.cc:43] CPU feature avx2 is present on your machine, but the Caffe2 binary is not compiled with it. It means you may not get the full speed of your CPU.\r\nE0814 16:35:11.237675 13596 init_intrinsics_check.cc:43] CPU feature fma is present on your machine, but the Caffe2 binary is not compiled with it. It means you may not get the full speed of your CPU.\r\n*** Aborted at 1534278911 (unix time) try \"date -d @1534278911\" if you are using GNU date ***\r\nPC: @     0x7f98556c85b8 caffe2::math::Gemm<>()\r\n*** SIGSEGV (@0x0) received by PID 13596 (TID 0x7f9815001700) from PID 0; stack trace: ***\r\n    @     0x7f98ab66e390 (unknown)\r\n    @     0x7f98556c85b8 caffe2::math::Gemm<>()\r\n    @     0x7f9855c08c58 caffe2::FullyConnectedOp<>::DoRunWithType<>()\r\n    @     0x7f98556d89d2 caffe2::Operator<>::Run()\r\n    @     0x7f98557848bb caffe2::SimpleNet::Run()\r\n    @     0x7f985578f49a caffe2::Workspace::RunNet()\r\n    @     0x7f98564e9477 _ZZN8pybind1112cpp_function10initializeIZN6caffe26python16addGlobalMethodsERNS_6moduleEEUlRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEibE19_bJSD_ibEJNS_4nameENS_5scopeENS_7siblingEEEEvOT_PFT0_DpT1_EDpRKT2_ENUlRNS_6detail13function_callEE1_4_FUNESV_\r\n    @     0x7f985652ba0e pybind11::cpp_function::dispatcher()\r\n    @           0x4c30ce PyEval_EvalFrameEx\r\n    @           0x4b9ab6 PyEval_EvalCodeEx\r\n    @           0x4c1e6f PyEval_EvalFrameEx\r\n    @           0x4b9ab6 PyEval_EvalCodeEx\r\n    @           0x4c16e7 PyEval_EvalFrameEx\r\n    @           0x4b9ab6 PyEval_EvalCodeEx\r\n    @           0x4d55f3 (unknown)\r\n    @           0x4a577e PyObject_Call\r\n    @           0x4bed3d PyEval_EvalFrameEx\r\n    @           0x4c136f PyEval_EvalFrameEx\r\n    @           0x4c136f PyEval_EvalFrameEx\r\n    @           0x4b9ab6 PyEval_EvalCodeEx\r\n    @           0x4d54b9 (unknown)\r\n    @           0x4eebee (unknown)\r\n    @           0x4a577e PyObject_Call\r\n    @           0x4c5e10 PyEval_CallObjectWithKeywords\r\n    @           0x589172 (unknown)\r\n    @     0x7f98ab6646ba start_thread\r\ndefault in Thread0 fetched blob softmax:\r\n[[0.10406707 0.0958132  0.11186256 0.10592665 0.0817344  0.09865279\r\n  0.09048746 0.08944649 0.10203679 0.11997259]\r\n [0.10739651 0.09508494 0.10893054 0.10854136 0.0935948  0.09612396\r\n  0.10101433 0.08424021 0.09613933 0.10893402]\r\n [0.10163862 0.09200761 0.10511011 0.109869   0.09156405 0.10474087\r\n  0.1022335  0.0703143  0.09938712 0.12313475]\r\n [0.08985671 0.09775824 0.11547512 0.09998353 0.09359182 0.10500769\r\n  0.08895223 0.08376996 0.10898601 0.11661875]\r\n [0.08954862 0.08843845 0.11500646 0.09689793 0.09185582 0.10589205\r\n  0.10810956 0.08333685 0.10339628 0.11751796]\r\n [0.09852833 0.09209983 0.11036412 0.10263348 0.09042244 0.10394713\r\n  0.10160396 0.07928675 0.10388856 0.11722537]\r\n [0.10337994 0.09972429 0.11327668 0.08736703 0.09438661 0.10448781\r\n  0.0878675  0.08105434 0.10431094 0.12414487]\r\n [0.09534382 0.09335071 0.11011291 0.10551803 0.08672015 0.10744442\r\n  0.10062116 0.07553869 0.09846447 0.12688567]\r\n [0.09399191 0.10102197 0.11472756 0.09188537 0.08315386 0.11782556\r\n  0.0986233  0.08276524 0.10503418 0.11097106]\r\n [0.09374088 0.09551394 0.11585982 0.11314663 0.09346773 0.09375941\r\n  0.09588219 0.08359513 0.1058373  0.10919697]\r\n [0.10109688 0.0993735  0.11368633 0.08764622 0.09819658 0.11559883\r\n  0.09014595 0.0805226  0.10728084 0.10645223]\r\n [0.10267685 0.09026854 0.11018284 0.10741374 0.09042422 0.11028332\r\n  0.09176522 0.08200574 0.09634313 0.11863648]\r\n [0.10321208 0.09730779 0.10979314 0.10604937 0.09673787 0.10101081\r\n  0.09481944 0.08262547 0.09426087 0.11418316]\r\n [0.10170192 0.09810354 0.11086501 0.09821761 0.09967485 0.10490072\r\n  0.09211882 0.08475582 0.09108799 0.11857382]\r\n [0.09822202 0.10342799 0.10083076 0.10264489 0.09806627 0.10075969\r\n  0.10523681 0.08029877 0.09441201 0.11610077]\r\n [0.09419835 0.10204436 0.10571007 0.11321441 0.09489898 0.1064717\r\n  0.08542782 0.09340751 0.09008439 0.11454245]]\r\ndefault in Thread0 fetched blob loss:\r\n2.26629066467\r\n    @     0x7f98ab39a41d clone\r\n    @                0x0 (unknown)\r\nSegmentation fault (core dumped)\r\n```\r\n\r\nDoes this mean that Caffe2 is not thread-safe? I have been working hard for days just to get multithreading working in Caffe2. Thanks!"}