{"url": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/175567525", "pull_request_review_id": 105118353, "id": 175567525, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE3NTU2NzUyNQ==", "diff_hunk": "@@ -364,17 +364,20 @@ Tensor unsqueeze_to(const Tensor & self, int64_t dim, IntList sizes) {\n   return self;\n }\n \n-std::vector<Tensor> cat_tensors_backward(const Tensor & grad, const std::vector<int64_t> &sizes, int64_t dim) {\n+std::vector<Tensor> cat_tensors_backward(const Tensor & grad, const std::vector<std::vector<int64_t>> &sizes, int64_t dim) {", "path": "tools/autograd/templates/Functions.cpp", "position": 5, "original_position": 5, "commit_id": "fee486bd3bd78309203926f4af5734d6bbfc1839", "original_commit_id": "fee486bd3bd78309203926f4af5734d6bbfc1839", "user": {"login": "ezyang", "id": 13564, "node_id": "MDQ6VXNlcjEzNTY0", "avatar_url": "https://avatars0.githubusercontent.com/u/13564?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ezyang", "html_url": "https://github.com/ezyang", "followers_url": "https://api.github.com/users/ezyang/followers", "following_url": "https://api.github.com/users/ezyang/following{/other_user}", "gists_url": "https://api.github.com/users/ezyang/gists{/gist_id}", "starred_url": "https://api.github.com/users/ezyang/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ezyang/subscriptions", "organizations_url": "https://api.github.com/users/ezyang/orgs", "repos_url": "https://api.github.com/users/ezyang/repos", "events_url": "https://api.github.com/users/ezyang/events{/privacy}", "received_events_url": "https://api.github.com/users/ezyang/received_events", "type": "User", "site_admin": false}, "body": "Hmmmmmmmm. You told me that this wasn't going to be part of the ATen API, which was true, but it's part of the \"code in Functions.cpp which morally should be in ATen but isn't because shenanigans\".\r\n\r\nLast time this happened to me, I think I ended up passing the entire list of tensors to the function in question, because I secretly needed them anyway for something else. That's clearly not appropriate here. I guess this implies we should get something like `std::vector<TensorGeometry>` or something similar working in the codegen.", "created_at": "2018-03-19T20:05:23Z", "updated_at": "2018-11-23T15:40:57Z", "html_url": "https://github.com/pytorch/pytorch/pull/5819#discussion_r175567525", "pull_request_url": "https://api.github.com/repos/pytorch/pytorch/pulls/5819", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/175567525"}, "html": {"href": "https://github.com/pytorch/pytorch/pull/5819#discussion_r175567525"}, "pull_request": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/5819"}}, "body_html": "<p>Hmmmmmmmm. You told me that this wasn't going to be part of the ATen API, which was true, but it's part of the \"code in Functions.cpp which morally should be in ATen but isn't because shenanigans\".</p>\n<p>Last time this happened to me, I think I ended up passing the entire list of tensors to the function in question, because I secretly needed them anyway for something else. That's clearly not appropriate here. I guess this implies we should get something like <code>std::vector&lt;TensorGeometry&gt;</code> or something similar working in the codegen.</p>", "body_text": "Hmmmmmmmm. You told me that this wasn't going to be part of the ATen API, which was true, but it's part of the \"code in Functions.cpp which morally should be in ATen but isn't because shenanigans\".\nLast time this happened to me, I think I ended up passing the entire list of tensors to the function in question, because I secretly needed them anyway for something else. That's clearly not appropriate here. I guess this implies we should get something like std::vector<TensorGeometry> or something similar working in the codegen."}