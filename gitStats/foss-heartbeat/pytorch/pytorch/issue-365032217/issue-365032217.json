{"url": "https://api.github.com/repos/pytorch/pytorch/issues/12181", "repository_url": "https://api.github.com/repos/pytorch/pytorch", "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/12181/labels{/name}", "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/12181/comments", "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/12181/events", "html_url": "https://github.com/pytorch/pytorch/issues/12181", "id": 365032217, "node_id": "MDU6SXNzdWUzNjUwMzIyMTc=", "number": 12181, "title": "Network surgery for transfer fails", "user": {"login": "johncorring", "id": 11300328, "node_id": "MDQ6VXNlcjExMzAwMzI4", "avatar_url": "https://avatars3.githubusercontent.com/u/11300328?v=4", "gravatar_id": "", "url": "https://api.github.com/users/johncorring", "html_url": "https://github.com/johncorring", "followers_url": "https://api.github.com/users/johncorring/followers", "following_url": "https://api.github.com/users/johncorring/following{/other_user}", "gists_url": "https://api.github.com/users/johncorring/gists{/gist_id}", "starred_url": "https://api.github.com/users/johncorring/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/johncorring/subscriptions", "organizations_url": "https://api.github.com/users/johncorring/orgs", "repos_url": "https://api.github.com/users/johncorring/repos", "events_url": "https://api.github.com/users/johncorring/events{/privacy}", "received_events_url": "https://api.github.com/users/johncorring/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 890282107, "node_id": "MDU6TGFiZWw4OTAyODIxMDc=", "url": "https://api.github.com/repos/pytorch/pytorch/labels/caffe2", "name": "caffe2", "color": "210aa8", "default": false}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2018-09-28T20:37:56Z", "updated_at": "2018-10-01T17:26:23Z", "closed_at": null, "author_association": "NONE", "body_html": "<h2>Per the pytorch/caffe2 Readme I am asking here.</h2>\n<p>I would like to use an existing network definition and weights from the model zoo as the backbone for a new network. In this specific example the architecture will be squeezenet, and the new network simply has a different shape for the top parameterized layers ['conv10_w', 'conv10_b'], to accommodate a different set of classes from Imagenet.</p>\n<p>Unfortunately, it is not clear from the documentation, tutorials, or examples how to achieve this (to me). Some OS notes: I have built caffe2+OpenCV from source with the current master, into a python2.7.12 virtualenv, cuda 9.0, cuDNN 7.0.</p>\n<p>I wrote a script ( based on <a href=\"https://nbviewer.jupyter.org/gist/kyamagu/6cff70840c10ca374e069a3a7eb00cb4/dogs-vs-cats.ipynb\" rel=\"nofollow\">https://nbviewer.jupyter.org/gist/kyamagu/6cff70840c10ca374e069a3a7eb00cb4/dogs-vs-cats.ipynb</a> )<br>\nthat I think should do this: <a href=\"https://gist.github.com/johncorring/d735675e75add96fbdfbcc40fa00f3ba\">https://gist.github.com/johncorring/d735675e75add96fbdfbcc40fa00f3ba</a></p>\n<p>I get the following error message:<br>\nTraceback (most recent call last):<br>\nFile \"dogsvscats.py\", line 184, in <br>\nshtyp = workspace.InferShapesAndTypes([train_model.net])<br>\nFile \"/home/john/Code/pytorch/build/caffe2/python/workspace.py\", line 258, in InferShapesAndTypes<br>\nblobdesc_prototxt = C.infer_shapes_and_types_from_workspace(net_protos)<br>\nMemoryError: std::bad_alloc</p>\n<p>which isn't very helpful (especially since cross referencing against caffe2 docs doesn't yield anything).</p>\n<p>When I comment out the offending line and try to continue to training I recieve a seg fault that I have narrowed down to coming from line 204, workspace.RunNet(train_model.net). lldb returns the following stack trace:</p>\n<p>thread <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load issue title\" data-id=\"171281708\" data-permission-text=\"Issue title is private\" data-url=\"https://github.com/pytorch/pytorch/issues/1\" data-hovercard-type=\"issue\" data-hovercard-url=\"/pytorch/pytorch/issues/1/hovercard\" href=\"https://github.com/pytorch/pytorch/issues/1\">#1</a>: tid = 9130, 0x00007fffaa112240 libcaffe2.so`void caffe2::math::CopyMatrix&lt;float, caffe2::CPUContext&gt;(int, int, float const*, int, int, float*, int, int, caffe2::CPUContext*) + 208, name = 'python', stop reason = signal SIGSEGV: address access protected (fault address: 0xb15400000)</p>\n<ul>\n<li>frame #0: 0x00007fffaa112240 libcaffe2.so<code>void caffe2::math::CopyMatrix&lt;float, caffe2::CPUContext&gt;(int, int, float const*, int, int, float*, int, int, caffe2::CPUContext*) + 208 frame #1: 0x00007fffaa11392f libcaffe2.so</code>void caffe2::math::Im2Col&lt;float, caffe2::CPUContext, (caffe2::StorageOrder)2&gt;(int, int, int, int, int, int, int, int, int, int, int, int, int, float const*, float*, caffe2::CPUContext*, int) + 1087<br>\nframe <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load issue title\" data-id=\"171402941\" data-permission-text=\"Issue title is private\" data-url=\"https://github.com/pytorch/pytorch/issues/2\" data-hovercard-type=\"issue\" data-hovercard-url=\"/pytorch/pytorch/issues/2/hovercard\" href=\"https://github.com/pytorch/pytorch/issues/2\">#2</a>: 0x00007fffaa3f52b1 libcaffe2.so<code>caffe2::ConvOp&lt;float, caffe2::CPUContext&gt;::RunOnDeviceWithOrderNCHW()::{lambda(caffe2::Tensor*)#1}::operator()(caffe2::Tensor*) const + 1169 frame #3: 0x00007fffaa3f77f8 libcaffe2.so</code>caffe2::ConvOp&lt;float, caffe2::CPUContext&gt;::RunOnDeviceWithOrderNCHW() + 2712<br>\nframe <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load issue title\" data-id=\"171522963\" data-permission-text=\"Issue title is private\" data-url=\"https://github.com/pytorch/pytorch/issues/4\" data-hovercard-type=\"pull_request\" data-hovercard-url=\"/pytorch/pytorch/pull/4/hovercard\" href=\"https://github.com/pytorch/pytorch/pull/4\">#4</a>: 0x00007fffaa1c93ed libcaffe2.so<code>caffe2::ConvPoolOpBase&lt;caffe2::CPUContext&gt;::RunOnDevice() + 301 frame #5: 0x00007fffa9fb52e5 libcaffe2.so</code>caffe2::Operatorcaffe2::CPUContext::Run(int) + 229<br>\nframe <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load issue title\" data-id=\"174289461\" data-permission-text=\"Issue title is private\" data-url=\"https://github.com/pytorch/pytorch/issues/6\" data-hovercard-type=\"issue\" data-hovercard-url=\"/pytorch/pytorch/issues/6/hovercard\" href=\"https://github.com/pytorch/pytorch/issues/6\">#6</a>: 0x00007fffaa09275c libcaffe2.so<code>caffe2::SimpleNet::Run() + 460 frame #7: 0x00007fffaa0aeb8a libcaffe2.so</code>caffe2::Workspace::RunNet(std::__cxx11::basic_string&lt;char, std::char_traits, std::allocator &gt; const&amp;) + 954<br>\nframe <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load issue title\" data-id=\"174871471\" data-permission-text=\"Issue title is private\" data-url=\"https://github.com/pytorch/pytorch/issues/8\" data-hovercard-type=\"pull_request\" data-hovercard-url=\"/pytorch/pytorch/pull/8/hovercard\" href=\"https://github.com/pytorch/pytorch/pull/8\">#8</a>: 0x00007fffab11a277 caffe2_pybind11_state_gpu.so<code>void pybind11::cpp_function::initialize&lt;caffe2::python::addGlobalMethods(pybind11::module&amp;)::{lambda(std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, int, bool)#21}, bool, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, int, bool, pybind11::name, pybind11::scope, pybind11::sibling&gt;(caffe2::python::addGlobalMethods(pybind11::module&amp;)::{lambda(std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, int, bool)#21}&amp;&amp;, bool (*)(std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, int, bool), pybind11::name const&amp;, pybind11::scope const&amp;, pybind11::sibling const&amp;)::{lambda(pybind11::detail::function_call&amp;)#3}::_FUN(pybind11::detail::function_call) + 311 frame #9: 0x00007fffab160220 caffe2_pybind11_state_gpu.so</code>pybind11::cpp_function::dispatcher(_object*, _object*, _object*) + 3552<br>\nframe <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load issue title\" data-id=\"175552272\" data-permission-text=\"Issue title is private\" data-url=\"https://github.com/pytorch/pytorch/issues/10\" data-hovercard-type=\"issue\" data-hovercard-url=\"/pytorch/pytorch/issues/10/hovercard\" href=\"https://github.com/pytorch/pytorch/issues/10\">#10</a>: 0x00000000004c30ce python<code>PyEval_EvalFrameEx + 29342 frame #11: 0x00000000004b9ab6 python</code>PyEval_EvalCodeEx + 774<br>\nframe <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load issue title\" data-id=\"175559558\" data-permission-text=\"Issue title is private\" data-url=\"https://github.com/pytorch/pytorch/issues/12\" data-hovercard-type=\"pull_request\" data-hovercard-url=\"/pytorch/pytorch/pull/12/hovercard\" href=\"https://github.com/pytorch/pytorch/pull/12\">#12</a>: 0x00000000004c1e6f python<code>PyEval_EvalFrameEx + 24639 frame #13: 0x00000000004b9ab6 python</code>PyEval_EvalCodeEx + 774<br>\nframe <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load issue title\" data-id=\"175574237\" data-permission-text=\"Issue title is private\" data-url=\"https://github.com/pytorch/pytorch/issues/14\" data-hovercard-type=\"pull_request\" data-hovercard-url=\"/pytorch/pytorch/pull/14/hovercard\" href=\"https://github.com/pytorch/pytorch/pull/14\">#14</a>: 0x00000000004c16e7 python<code>PyEval_EvalFrameEx + 22711 frame #15: 0x00000000004b9ab6 python</code>PyEval_EvalCodeEx + 774<br>\nframe <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load issue title\" data-id=\"175834985\" data-permission-text=\"Issue title is private\" data-url=\"https://github.com/pytorch/pytorch/issues/16\" data-hovercard-type=\"issue\" data-hovercard-url=\"/pytorch/pytorch/issues/16/hovercard\" href=\"https://github.com/pytorch/pytorch/issues/16\">#16</a>: 0x00000000004eb30f python<code>??? + 63 frame #17: 0x00000000004e5422 python</code>PyRun_FileExFlags + 130<br>\nframe <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load issue title\" data-id=\"176034421\" data-permission-text=\"Issue title is private\" data-url=\"https://github.com/pytorch/pytorch/issues/18\" data-hovercard-type=\"issue\" data-hovercard-url=\"/pytorch/pytorch/issues/18/hovercard\" href=\"https://github.com/pytorch/pytorch/issues/18\">#18</a>: 0x00000000004e3cd6 python<code>PyRun_SimpleFileExFlags + 390 frame #19: 0x0000000000493ae2 python</code>Py_Main + 1554<br>\nframe <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load issue title\" data-id=\"176137249\" data-permission-text=\"Issue title is private\" data-url=\"https://github.com/pytorch/pytorch/issues/20\" data-hovercard-type=\"issue\" data-hovercard-url=\"/pytorch/pytorch/issues/20/hovercard\" href=\"https://github.com/pytorch/pytorch/issues/20\">#20</a>: 0x00007ffff7810830 libc.so.6<code>__libc_start_main(main=(python</code>main), argc=2, argv=0x00007fffffffda18, init=, fini=, rtld_fini=, stack_end=0x00007fffffffda08) + 240 at libc-start.c:291<br>\nframe <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load issue title\" data-id=\"176185026\" data-permission-text=\"Issue title is private\" data-url=\"https://github.com/pytorch/pytorch/issues/21\" data-hovercard-type=\"issue\" data-hovercard-url=\"/pytorch/pytorch/issues/21/hovercard\" href=\"https://github.com/pytorch/pytorch/issues/21\">#21</a>: 0x00000000004933e9 python`_start + 41</li>\n</ul>", "body_text": "Per the pytorch/caffe2 Readme I am asking here.\nI would like to use an existing network definition and weights from the model zoo as the backbone for a new network. In this specific example the architecture will be squeezenet, and the new network simply has a different shape for the top parameterized layers ['conv10_w', 'conv10_b'], to accommodate a different set of classes from Imagenet.\nUnfortunately, it is not clear from the documentation, tutorials, or examples how to achieve this (to me). Some OS notes: I have built caffe2+OpenCV from source with the current master, into a python2.7.12 virtualenv, cuda 9.0, cuDNN 7.0.\nI wrote a script ( based on https://nbviewer.jupyter.org/gist/kyamagu/6cff70840c10ca374e069a3a7eb00cb4/dogs-vs-cats.ipynb )\nthat I think should do this: https://gist.github.com/johncorring/d735675e75add96fbdfbcc40fa00f3ba\nI get the following error message:\nTraceback (most recent call last):\nFile \"dogsvscats.py\", line 184, in \nshtyp = workspace.InferShapesAndTypes([train_model.net])\nFile \"/home/john/Code/pytorch/build/caffe2/python/workspace.py\", line 258, in InferShapesAndTypes\nblobdesc_prototxt = C.infer_shapes_and_types_from_workspace(net_protos)\nMemoryError: std::bad_alloc\nwhich isn't very helpful (especially since cross referencing against caffe2 docs doesn't yield anything).\nWhen I comment out the offending line and try to continue to training I recieve a seg fault that I have narrowed down to coming from line 204, workspace.RunNet(train_model.net). lldb returns the following stack trace:\nthread #1: tid = 9130, 0x00007fffaa112240 libcaffe2.so`void caffe2::math::CopyMatrix<float, caffe2::CPUContext>(int, int, float const*, int, int, float*, int, int, caffe2::CPUContext*) + 208, name = 'python', stop reason = signal SIGSEGV: address access protected (fault address: 0xb15400000)\n\nframe #0: 0x00007fffaa112240 libcaffe2.sovoid caffe2::math::CopyMatrix<float, caffe2::CPUContext>(int, int, float const*, int, int, float*, int, int, caffe2::CPUContext*) + 208 frame #1: 0x00007fffaa11392f libcaffe2.sovoid caffe2::math::Im2Col<float, caffe2::CPUContext, (caffe2::StorageOrder)2>(int, int, int, int, int, int, int, int, int, int, int, int, int, float const*, float*, caffe2::CPUContext*, int) + 1087\nframe #2: 0x00007fffaa3f52b1 libcaffe2.socaffe2::ConvOp<float, caffe2::CPUContext>::RunOnDeviceWithOrderNCHW()::{lambda(caffe2::Tensor*)#1}::operator()(caffe2::Tensor*) const + 1169 frame #3: 0x00007fffaa3f77f8 libcaffe2.socaffe2::ConvOp<float, caffe2::CPUContext>::RunOnDeviceWithOrderNCHW() + 2712\nframe #4: 0x00007fffaa1c93ed libcaffe2.socaffe2::ConvPoolOpBase<caffe2::CPUContext>::RunOnDevice() + 301 frame #5: 0x00007fffa9fb52e5 libcaffe2.socaffe2::Operatorcaffe2::CPUContext::Run(int) + 229\nframe #6: 0x00007fffaa09275c libcaffe2.socaffe2::SimpleNet::Run() + 460 frame #7: 0x00007fffaa0aeb8a libcaffe2.socaffe2::Workspace::RunNet(std::__cxx11::basic_string<char, std::char_traits, std::allocator > const&) + 954\nframe #8: 0x00007fffab11a277 caffe2_pybind11_state_gpu.sovoid pybind11::cpp_function::initialize<caffe2::python::addGlobalMethods(pybind11::module&)::{lambda(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, int, bool)#21}, bool, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, int, bool, pybind11::name, pybind11::scope, pybind11::sibling>(caffe2::python::addGlobalMethods(pybind11::module&)::{lambda(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, int, bool)#21}&&, bool (*)(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, int, bool), pybind11::name const&, pybind11::scope const&, pybind11::sibling const&)::{lambda(pybind11::detail::function_call&)#3}::_FUN(pybind11::detail::function_call) + 311 frame #9: 0x00007fffab160220 caffe2_pybind11_state_gpu.sopybind11::cpp_function::dispatcher(_object*, _object*, _object*) + 3552\nframe #10: 0x00000000004c30ce pythonPyEval_EvalFrameEx + 29342 frame #11: 0x00000000004b9ab6 pythonPyEval_EvalCodeEx + 774\nframe #12: 0x00000000004c1e6f pythonPyEval_EvalFrameEx + 24639 frame #13: 0x00000000004b9ab6 pythonPyEval_EvalCodeEx + 774\nframe #14: 0x00000000004c16e7 pythonPyEval_EvalFrameEx + 22711 frame #15: 0x00000000004b9ab6 pythonPyEval_EvalCodeEx + 774\nframe #16: 0x00000000004eb30f python??? + 63 frame #17: 0x00000000004e5422 pythonPyRun_FileExFlags + 130\nframe #18: 0x00000000004e3cd6 pythonPyRun_SimpleFileExFlags + 390 frame #19: 0x0000000000493ae2 pythonPy_Main + 1554\nframe #20: 0x00007ffff7810830 libc.so.6__libc_start_main(main=(pythonmain), argc=2, argv=0x00007fffffffda18, init=, fini=, rtld_fini=, stack_end=0x00007fffffffda08) + 240 at libc-start.c:291\nframe #21: 0x00000000004933e9 python`_start + 41", "body": "## Per the pytorch/caffe2 Readme I am asking here.\r\n\r\nI would like to use an existing network definition and weights from the model zoo as the backbone for a new network. In this specific example the architecture will be squeezenet, and the new network simply has a different shape for the top parameterized layers ['conv10_w', 'conv10_b'], to accommodate a different set of classes from Imagenet. \r\n\r\nUnfortunately, it is not clear from the documentation, tutorials, or examples how to achieve this (to me). Some OS notes: I have built caffe2+OpenCV from source with the current master, into a python2.7.12 virtualenv, cuda 9.0, cuDNN 7.0. \r\n\r\nI wrote a script ( based on https://nbviewer.jupyter.org/gist/kyamagu/6cff70840c10ca374e069a3a7eb00cb4/dogs-vs-cats.ipynb )\r\nthat I think should do this: https://gist.github.com/johncorring/d735675e75add96fbdfbcc40fa00f3ba\r\n\r\nI get the following error message:\r\nTraceback (most recent call last):\r\n  File \"dogsvscats.py\", line 184, in <module>\r\n    shtyp = workspace.InferShapesAndTypes([train_model.net])\r\n  File \"/home/john/Code/pytorch/build/caffe2/python/workspace.py\", line 258, in InferShapesAndTypes\r\n    blobdesc_prototxt = C.infer_shapes_and_types_from_workspace(net_protos)\r\nMemoryError: std::bad_alloc\r\n\r\nwhich isn't very helpful (especially since cross referencing against caffe2 docs doesn't yield anything).\r\n\r\nWhen I comment out the offending line and try to continue to training I recieve a seg fault that I have narrowed down to coming from line 204, workspace.RunNet(train_model.net). lldb returns the following stack trace:\r\n\r\n thread #1: tid = 9130, 0x00007fffaa112240 libcaffe2.so`void caffe2::math::CopyMatrix<float, caffe2::CPUContext>(int, int, float const*, int, int, float*, int, int, caffe2::CPUContext*) + 208, name = 'python', stop reason = signal SIGSEGV: address access protected (fault address: 0xb15400000)\r\n  * frame #0: 0x00007fffaa112240 libcaffe2.so`void caffe2::math::CopyMatrix<float, caffe2::CPUContext>(int, int, float const*, int, int, float*, int, int, caffe2::CPUContext*) + 208\r\n    frame #1: 0x00007fffaa11392f libcaffe2.so`void caffe2::math::Im2Col<float, caffe2::CPUContext, (caffe2::StorageOrder)2>(int, int, int, int, int, int, int, int, int, int, int, int, int, float const*, float*, caffe2::CPUContext*, int) + 1087\r\n    frame #2: 0x00007fffaa3f52b1 libcaffe2.so`caffe2::ConvOp<float, caffe2::CPUContext>::RunOnDeviceWithOrderNCHW()::{lambda(caffe2::Tensor*)#1}::operator()(caffe2::Tensor*) const + 1169\r\n    frame #3: 0x00007fffaa3f77f8 libcaffe2.so`caffe2::ConvOp<float, caffe2::CPUContext>::RunOnDeviceWithOrderNCHW() + 2712\r\n    frame #4: 0x00007fffaa1c93ed libcaffe2.so`caffe2::ConvPoolOpBase<caffe2::CPUContext>::RunOnDevice() + 301\r\n    frame #5: 0x00007fffa9fb52e5 libcaffe2.so`caffe2::Operator<caffe2::CPUContext>::Run(int) + 229\r\n    frame #6: 0x00007fffaa09275c libcaffe2.so`caffe2::SimpleNet::Run() + 460\r\n    frame #7: 0x00007fffaa0aeb8a libcaffe2.so`caffe2::Workspace::RunNet(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) + 954\r\n    frame #8: 0x00007fffab11a277 caffe2_pybind11_state_gpu.so`void pybind11::cpp_function::initialize<caffe2::python::addGlobalMethods(pybind11::module&)::{lambda(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, int, bool)#21}, bool, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, int, bool, pybind11::name, pybind11::scope, pybind11::sibling>(caffe2::python::addGlobalMethods(pybind11::module&)::{lambda(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, int, bool)#21}&&, bool (*)(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, int, bool), pybind11::name const&, pybind11::scope const&, pybind11::sibling const&)::{lambda(pybind11::detail::function_call&)#3}::_FUN(pybind11::detail::function_call) + 311\r\n    frame #9: 0x00007fffab160220 caffe2_pybind11_state_gpu.so`pybind11::cpp_function::dispatcher(_object*, _object*, _object*) + 3552\r\n    frame #10: 0x00000000004c30ce python`PyEval_EvalFrameEx + 29342\r\n    frame #11: 0x00000000004b9ab6 python`PyEval_EvalCodeEx + 774\r\n    frame #12: 0x00000000004c1e6f python`PyEval_EvalFrameEx + 24639\r\n    frame #13: 0x00000000004b9ab6 python`PyEval_EvalCodeEx + 774\r\n    frame #14: 0x00000000004c16e7 python`PyEval_EvalFrameEx + 22711\r\n    frame #15: 0x00000000004b9ab6 python`PyEval_EvalCodeEx + 774\r\n    frame #16: 0x00000000004eb30f python`??? + 63\r\n    frame #17: 0x00000000004e5422 python`PyRun_FileExFlags + 130\r\n    frame #18: 0x00000000004e3cd6 python`PyRun_SimpleFileExFlags + 390\r\n    frame #19: 0x0000000000493ae2 python`Py_Main + 1554\r\n    frame #20: 0x00007ffff7810830 libc.so.6`__libc_start_main(main=(python`main), argc=2, argv=0x00007fffffffda18, init=<unavailable>, fini=<unavailable>, rtld_fini=<unavailable>, stack_end=0x00007fffffffda08) + 240 at libc-start.c:291\r\n    frame #21: 0x00000000004933e9 python`_start + 41\r\n\r\n\r\n"}