{"url": "https://api.github.com/repos/pytorch/pytorch/issues/comments/339491915", "html_url": "https://github.com/pytorch/pytorch/issues/3258#issuecomment-339491915", "issue_url": "https://api.github.com/repos/pytorch/pytorch/issues/3258", "id": 339491915, "node_id": "MDEyOklzc3VlQ29tbWVudDMzOTQ5MTkxNQ==", "user": {"login": "SsnL", "id": 5674597, "node_id": "MDQ6VXNlcjU2NzQ1OTc=", "avatar_url": "https://avatars2.githubusercontent.com/u/5674597?v=4", "gravatar_id": "", "url": "https://api.github.com/users/SsnL", "html_url": "https://github.com/SsnL", "followers_url": "https://api.github.com/users/SsnL/followers", "following_url": "https://api.github.com/users/SsnL/following{/other_user}", "gists_url": "https://api.github.com/users/SsnL/gists{/gist_id}", "starred_url": "https://api.github.com/users/SsnL/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/SsnL/subscriptions", "organizations_url": "https://api.github.com/users/SsnL/orgs", "repos_url": "https://api.github.com/users/SsnL/repos", "events_url": "https://api.github.com/users/SsnL/events{/privacy}", "received_events_url": "https://api.github.com/users/SsnL/received_events", "type": "User", "site_admin": false}, "created_at": "2017-10-25T22:24:18Z", "updated_at": "2017-10-25T22:24:18Z", "author_association": "CONTRIBUTOR", "body_html": "<p>Cause: <code>_indices()</code> and <code>_values()</code> are both empty. Since we neither support dimension with size <code>0</code> nor support a special sparse tensor size that contains dimI info, backend code errors when it tries to infer dimI from inputs, i.e., <code>indices, values, size</code>.</p>\n<p>This, along with many other sparse issues, requires some special treatment to sparse tensor's sizes.  Properly fixing the issue requires a some API discussion and nontrivial code change. It will take some time to do so. I'll try to come up a detailed explanation post to discuss this.</p>\n<p>For now, should we do a temporary solution? It would be easy to do an additional constructor taking in <code>torch.Size, long dimI</code>, and special case this in <code>_utils._cuda()</code>.</p>\n<p>cc <a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=13564\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/ezyang\">@ezyang</a></p>", "body_text": "Cause: _indices() and _values() are both empty. Since we neither support dimension with size 0 nor support a special sparse tensor size that contains dimI info, backend code errors when it tries to infer dimI from inputs, i.e., indices, values, size.\nThis, along with many other sparse issues, requires some special treatment to sparse tensor's sizes.  Properly fixing the issue requires a some API discussion and nontrivial code change. It will take some time to do so. I'll try to come up a detailed explanation post to discuss this.\nFor now, should we do a temporary solution? It would be easy to do an additional constructor taking in torch.Size, long dimI, and special case this in _utils._cuda().\ncc @ezyang", "body": "Cause: `_indices()` and `_values()` are both empty. Since we neither support dimension with size `0` nor support a special sparse tensor size that contains dimI info, backend code errors when it tries to infer dimI from inputs, i.e., `indices, values, size`.\r\n\r\nThis, along with many other sparse issues, requires some special treatment to sparse tensor's sizes.  Properly fixing the issue requires a some API discussion and nontrivial code change. It will take some time to do so. I'll try to come up a detailed explanation post to discuss this.\r\n\r\nFor now, should we do a temporary solution? It would be easy to do an additional constructor taking in `torch.Size, long dimI`, and special case this in `_utils._cuda()`.\r\n\r\ncc @ezyang \r\n"}