{"url": "https://api.github.com/repos/pytorch/pytorch/issues/12722", "repository_url": "https://api.github.com/repos/pytorch/pytorch", "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/12722/labels{/name}", "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/12722/comments", "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/12722/events", "html_url": "https://github.com/pytorch/pytorch/pull/12722", "id": 370765759, "node_id": "MDExOlB1bGxSZXF1ZXN0MjIzMzcwMTA1", "number": 12722, "title": "fix forward and backward for norm with negative infinity norm ", "user": {"login": "Separius", "id": 519177, "node_id": "MDQ6VXNlcjUxOTE3Nw==", "avatar_url": "https://avatars3.githubusercontent.com/u/519177?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Separius", "html_url": "https://github.com/Separius", "followers_url": "https://api.github.com/users/Separius/followers", "following_url": "https://api.github.com/users/Separius/following{/other_user}", "gists_url": "https://api.github.com/users/Separius/gists{/gist_id}", "starred_url": "https://api.github.com/users/Separius/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Separius/subscriptions", "organizations_url": "https://api.github.com/users/Separius/orgs", "repos_url": "https://api.github.com/users/Separius/repos", "events_url": "https://api.github.com/users/Separius/events{/privacy}", "received_events_url": "https://api.github.com/users/Separius/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2018-10-16T19:33:13Z", "updated_at": "2018-11-23T15:53:08Z", "closed_at": "2018-10-18T04:08:55Z", "author_association": "CONTRIBUTOR", "pull_request": {"url": "https://api.github.com/repos/pytorch/pytorch/pulls/12722", "html_url": "https://github.com/pytorch/pytorch/pull/12722", "diff_url": "https://github.com/pytorch/pytorch/pull/12722.diff", "patch_url": "https://github.com/pytorch/pytorch/pull/12722.patch"}, "body_html": "<p>I found a bug in norm() and fixed it (and added tests to make sure it's fixed)<br>\nhere is how to reproduce it:</p>\n<div class=\"highlight highlight-source-python\"><pre><span class=\"pl-k\">import</span> torch\nx <span class=\"pl-k\">=</span> torch.FloatTensor([[<span class=\"pl-c1\">10</span>, <span class=\"pl-c1\">12</span>, <span class=\"pl-c1\">13</span>], [<span class=\"pl-c1\">4</span>, <span class=\"pl-c1\">0</span>, <span class=\"pl-c1\">12</span>]])\n<span class=\"pl-c1\">print</span>(torch.norm(x, <span class=\"pl-k\">-</span><span class=\"pl-c1\">40</span>, <span class=\"pl-v\">dim</span><span class=\"pl-k\">=</span><span class=\"pl-c1\">0</span>, <span class=\"pl-v\">keepdim</span><span class=\"pl-k\">=</span><span class=\"pl-c1\">True</span>)) <span class=\"pl-c\"><span class=\"pl-c\">#</span>output is tensor([[ 4.0000,  0.0000, 11.9853]])</span>\n<span class=\"pl-c1\">print</span>(torch.norm(x, <span class=\"pl-c1\">float</span>(<span class=\"pl-s\"><span class=\"pl-pds\">'</span>-inf<span class=\"pl-pds\">'</span></span>), <span class=\"pl-v\">dim</span><span class=\"pl-k\">=</span><span class=\"pl-c1\">0</span>, <span class=\"pl-v\">keepdim</span><span class=\"pl-k\">=</span><span class=\"pl-c1\">True</span>)) <span class=\"pl-c\"><span class=\"pl-c\">#</span>output is tensor([[1., 1., 1.]]) which is wrong!</span>\n<span class=\"pl-k\">from</span> numpy.linalg <span class=\"pl-k\">import</span> norm <span class=\"pl-k\">as</span> np_norm\nx <span class=\"pl-k\">=</span> x.numpy()\n<span class=\"pl-c1\">print</span>(np_norm(x, <span class=\"pl-v\">ord</span><span class=\"pl-k\">=</span><span class=\"pl-k\">-</span><span class=\"pl-c1\">40</span>, <span class=\"pl-v\">axis</span><span class=\"pl-k\">=</span><span class=\"pl-c1\">0</span>)) <span class=\"pl-c\"><span class=\"pl-c\">#</span>output is array([[4., 0., 11.985261]])</span>\n<span class=\"pl-c1\">print</span>(np_norm(x, <span class=\"pl-v\">ord</span><span class=\"pl-k\">=</span><span class=\"pl-c1\">float</span>(<span class=\"pl-s\"><span class=\"pl-pds\">'</span>-inf<span class=\"pl-pds\">'</span></span>), <span class=\"pl-v\">axis</span><span class=\"pl-k\">=</span><span class=\"pl-c1\">0</span>)) <span class=\"pl-c\"><span class=\"pl-c\">#</span>output is array([[4., 0., 12.0]])</span></pre></div>\n<p>it's related to <a href=\"https://github.com/pytorch/pytorch/issues/6817\" data-hovercard-type=\"issue\" data-hovercard-url=\"/pytorch/pytorch/issues/6817/hovercard\">#6817</a> and <a href=\"https://github.com/pytorch/pytorch/pull/6969\" data-hovercard-type=\"pull_request\" data-hovercard-url=\"/pytorch/pytorch/pull/6969/hovercard\">#6969</a></p>", "body_text": "I found a bug in norm() and fixed it (and added tests to make sure it's fixed)\nhere is how to reproduce it:\nimport torch\nx = torch.FloatTensor([[10, 12, 13], [4, 0, 12]])\nprint(torch.norm(x, -40, dim=0, keepdim=True)) #output is tensor([[ 4.0000,  0.0000, 11.9853]])\nprint(torch.norm(x, float('-inf'), dim=0, keepdim=True)) #output is tensor([[1., 1., 1.]]) which is wrong!\nfrom numpy.linalg import norm as np_norm\nx = x.numpy()\nprint(np_norm(x, ord=-40, axis=0)) #output is array([[4., 0., 11.985261]])\nprint(np_norm(x, ord=float('-inf'), axis=0)) #output is array([[4., 0., 12.0]])\nit's related to #6817 and #6969", "body": "I found a bug in norm() and fixed it (and added tests to make sure it's fixed)\r\nhere is how to reproduce it:\r\n```python\r\nimport torch\r\nx = torch.FloatTensor([[10, 12, 13], [4, 0, 12]])\r\nprint(torch.norm(x, -40, dim=0, keepdim=True)) #output is tensor([[ 4.0000,  0.0000, 11.9853]])\r\nprint(torch.norm(x, float('-inf'), dim=0, keepdim=True)) #output is tensor([[1., 1., 1.]]) which is wrong!\r\nfrom numpy.linalg import norm as np_norm\r\nx = x.numpy()\r\nprint(np_norm(x, ord=-40, axis=0)) #output is array([[4., 0., 11.985261]])\r\nprint(np_norm(x, ord=float('-inf'), axis=0)) #output is array([[4., 0., 12.0]])\r\n```\r\nit's related to [#6817](https://github.com/pytorch/pytorch/issues/6817) and [#6969](https://github.com/pytorch/pytorch/pull/6969)"}