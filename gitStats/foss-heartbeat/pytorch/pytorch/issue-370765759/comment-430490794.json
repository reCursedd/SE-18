{"url": "https://api.github.com/repos/pytorch/pytorch/issues/comments/430490794", "html_url": "https://github.com/pytorch/pytorch/pull/12722#issuecomment-430490794", "issue_url": "https://api.github.com/repos/pytorch/pytorch/issues/12722", "id": 430490794, "node_id": "MDEyOklzc3VlQ29tbWVudDQzMDQ5MDc5NA==", "user": {"login": "Separius", "id": 519177, "node_id": "MDQ6VXNlcjUxOTE3Nw==", "avatar_url": "https://avatars3.githubusercontent.com/u/519177?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Separius", "html_url": "https://github.com/Separius", "followers_url": "https://api.github.com/users/Separius/followers", "following_url": "https://api.github.com/users/Separius/following{/other_user}", "gists_url": "https://api.github.com/users/Separius/gists{/gist_id}", "starred_url": "https://api.github.com/users/Separius/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Separius/subscriptions", "organizations_url": "https://api.github.com/users/Separius/orgs", "repos_url": "https://api.github.com/users/Separius/repos", "events_url": "https://api.github.com/users/Separius/events{/privacy}", "received_events_url": "https://api.github.com/users/Separius/received_events", "type": "User", "site_admin": false}, "created_at": "2018-10-17T05:05:15Z", "updated_at": "2018-10-17T05:48:49Z", "author_association": "CONTRIBUTOR", "body_html": "<p><a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=5674597\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/SsnL\">@SsnL</a> I checked CI's log and there were two problems, one is with data_loader which is probably unrelated to my code, but the other one was a jit test that my code failed, turns out there is a function in test_jit.py named <a href=\"https://github.com/pytorch/pytorch/blob/04d4ec285c8452bea0dfc38d98d0edebe6fe339e/test/test_jit.py#L8119\">get_constants()</a> and I think it has a bug(an obvious one), but maybe(0.001%) it was intentional, can you check that too?; I will rebase after that<br>\none more thing is it better to squash all my commits into one or two is better in this case? (jit test; norm)</p>\n<p>Edit: ah, looks like it was intentional :),<br>\nRuntimeError: Only 'inf' can be cast to a float, but got '-inf' (operator() at /var/lib/jenkins/workspace/torch/csrc/jit/register_prim_ops.cpp:178)<br>\nI can look at register_prim_ops.cpp and change it to accept -inf or I can simply exclude -inf test in jit<br>\nfirst one is obviously better, right?</p>\n<p>Edit: I changed register_prim_ops.cpp to accept -inf too</p>", "body_text": "@SsnL I checked CI's log and there were two problems, one is with data_loader which is probably unrelated to my code, but the other one was a jit test that my code failed, turns out there is a function in test_jit.py named get_constants() and I think it has a bug(an obvious one), but maybe(0.001%) it was intentional, can you check that too?; I will rebase after that\none more thing is it better to squash all my commits into one or two is better in this case? (jit test; norm)\nEdit: ah, looks like it was intentional :),\nRuntimeError: Only 'inf' can be cast to a float, but got '-inf' (operator() at /var/lib/jenkins/workspace/torch/csrc/jit/register_prim_ops.cpp:178)\nI can look at register_prim_ops.cpp and change it to accept -inf or I can simply exclude -inf test in jit\nfirst one is obviously better, right?\nEdit: I changed register_prim_ops.cpp to accept -inf too", "body": "@SsnL I checked CI's log and there were two problems, one is with data_loader which is probably unrelated to my code, but the other one was a jit test that my code failed, turns out there is a function in test_jit.py named [get_constants()](https://github.com/pytorch/pytorch/blob/04d4ec285c8452bea0dfc38d98d0edebe6fe339e/test/test_jit.py#L8119) and I think it has a bug(an obvious one), but maybe(0.001%) it was intentional, can you check that too?; I will rebase after that\r\none more thing is it better to squash all my commits into one or two is better in this case? (jit test; norm)\r\n\r\nEdit: ah, looks like it was intentional :),\r\nRuntimeError: Only 'inf' can be cast to a float, but got '-inf' (operator() at /var/lib/jenkins/workspace/torch/csrc/jit/register_prim_ops.cpp:178)\r\nI can look at register_prim_ops.cpp and change it to accept -inf or I can simply exclude -inf test in jit\r\nfirst one is obviously better, right?\r\n\r\nEdit: I changed register_prim_ops.cpp to accept -inf too"}