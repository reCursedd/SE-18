{"url": "https://api.github.com/repos/pytorch/pytorch/issues/2095", "repository_url": "https://api.github.com/repos/pytorch/pytorch", "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/2095/labels{/name}", "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/2095/comments", "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/2095/events", "html_url": "https://github.com/pytorch/pytorch/issues/2095", "id": 242890582, "node_id": "MDU6SXNzdWUyNDI4OTA1ODI=", "number": 2095, "title": "Repeat backward doesn't handle unsqueezed dimensions", "user": {"login": "apaszke", "id": 4583066, "node_id": "MDQ6VXNlcjQ1ODMwNjY=", "avatar_url": "https://avatars3.githubusercontent.com/u/4583066?v=4", "gravatar_id": "", "url": "https://api.github.com/users/apaszke", "html_url": "https://github.com/apaszke", "followers_url": "https://api.github.com/users/apaszke/followers", "following_url": "https://api.github.com/users/apaszke/following{/other_user}", "gists_url": "https://api.github.com/users/apaszke/gists{/gist_id}", "starred_url": "https://api.github.com/users/apaszke/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/apaszke/subscriptions", "organizations_url": "https://api.github.com/users/apaszke/orgs", "repos_url": "https://api.github.com/users/apaszke/repos", "events_url": "https://api.github.com/users/apaszke/events{/privacy}", "received_events_url": "https://api.github.com/users/apaszke/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2017-07-14T03:53:22Z", "updated_at": "2017-07-20T05:46:18Z", "closed_at": "2017-07-20T05:46:18Z", "author_association": "MEMBER", "body_html": "<div class=\"highlight highlight-source-python\"><pre><span class=\"pl-k\">import</span> torch                                           \n<span class=\"pl-k\">from</span> torch.autograd <span class=\"pl-k\">import</span> Variable                    \n                                                       \nx <span class=\"pl-k\">=</span> Variable(torch.randn(<span class=\"pl-c1\">2</span>, <span class=\"pl-c1\">3</span>, <span class=\"pl-c1\">4</span>), <span class=\"pl-v\">requires_grad</span><span class=\"pl-k\">=</span><span class=\"pl-c1\">True</span>) \ny <span class=\"pl-k\">=</span> x.repeat(<span class=\"pl-c1\">3</span>, <span class=\"pl-c1\">2</span>, <span class=\"pl-c1\">1</span>, <span class=\"pl-c1\">1</span>, <span class=\"pl-c1\">1</span>)                               \ny.sum().backward()                                     \n<span class=\"pl-k\">assert</span> x.size() <span class=\"pl-k\">==</span> x.grad.size() <span class=\"pl-c\"><span class=\"pl-c\">#</span> fails (2, 3, 4) != (1, 1, 2, 3, 4)                                          </span></pre></div>", "body_text": "import torch                                           \nfrom torch.autograd import Variable                    \n                                                       \nx = Variable(torch.randn(2, 3, 4), requires_grad=True) \ny = x.repeat(3, 2, 1, 1, 1)                               \ny.sum().backward()                                     \nassert x.size() == x.grad.size() # fails (2, 3, 4) != (1, 1, 2, 3, 4)", "body": "```python\r\nimport torch                                           \r\nfrom torch.autograd import Variable                    \r\n                                                       \r\nx = Variable(torch.randn(2, 3, 4), requires_grad=True) \r\ny = x.repeat(3, 2, 1, 1, 1)                               \r\ny.sum().backward()                                     \r\nassert x.size() == x.grad.size() # fails (2, 3, 4) != (1, 1, 2, 3, 4)                                          \r\n```\r\n"}