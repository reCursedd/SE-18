{"url": "https://api.github.com/repos/pytorch/pytorch/issues/comments/301492535", "html_url": "https://github.com/pytorch/pytorch/issues/1550#issuecomment-301492535", "issue_url": "https://api.github.com/repos/pytorch/pytorch/issues/1550", "id": 301492535, "node_id": "MDEyOklzc3VlQ29tbWVudDMwMTQ5MjUzNQ==", "user": {"login": "fmassa", "id": 9110200, "node_id": "MDQ6VXNlcjkxMTAyMDA=", "avatar_url": "https://avatars2.githubusercontent.com/u/9110200?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fmassa", "html_url": "https://github.com/fmassa", "followers_url": "https://api.github.com/users/fmassa/followers", "following_url": "https://api.github.com/users/fmassa/following{/other_user}", "gists_url": "https://api.github.com/users/fmassa/gists{/gist_id}", "starred_url": "https://api.github.com/users/fmassa/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fmassa/subscriptions", "organizations_url": "https://api.github.com/users/fmassa/orgs", "repos_url": "https://api.github.com/users/fmassa/repos", "events_url": "https://api.github.com/users/fmassa/events{/privacy}", "received_events_url": "https://api.github.com/users/fmassa/received_events", "type": "User", "site_admin": false}, "created_at": "2017-05-15T14:29:45Z", "updated_at": "2017-05-15T14:29:45Z", "author_association": "MEMBER", "body_html": "<p>I think sparse matrix-matrix multiply yielding sparse matrices is difficult to implement efficiently, because it's not trivial to estimate which indices in the result matrix are non-zero. But maybe we could leverage existing implementations, if there are any?</p>", "body_text": "I think sparse matrix-matrix multiply yielding sparse matrices is difficult to implement efficiently, because it's not trivial to estimate which indices in the result matrix are non-zero. But maybe we could leverage existing implementations, if there are any?", "body": "I think sparse matrix-matrix multiply yielding sparse matrices is difficult to implement efficiently, because it's not trivial to estimate which indices in the result matrix are non-zero. But maybe we could leverage existing implementations, if there are any?"}