{"url": "https://api.github.com/repos/pytorch/pytorch/issues/9939", "repository_url": "https://api.github.com/repos/pytorch/pytorch", "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/9939/labels{/name}", "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/9939/comments", "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/9939/events", "html_url": "https://github.com/pytorch/pytorch/pull/9939", "id": 345298121, "node_id": "MDExOlB1bGxSZXF1ZXN0MjA0NDg2ODAx", "number": 9939, "title": "Remove template parameter from Tensor (#13)", "user": {"login": "jerryzh168", "id": 4958441, "node_id": "MDQ6VXNlcjQ5NTg0NDE=", "avatar_url": "https://avatars0.githubusercontent.com/u/4958441?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jerryzh168", "html_url": "https://github.com/jerryzh168", "followers_url": "https://api.github.com/users/jerryzh168/followers", "following_url": "https://api.github.com/users/jerryzh168/following{/other_user}", "gists_url": "https://api.github.com/users/jerryzh168/gists{/gist_id}", "starred_url": "https://api.github.com/users/jerryzh168/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jerryzh168/subscriptions", "organizations_url": "https://api.github.com/users/jerryzh168/orgs", "repos_url": "https://api.github.com/users/jerryzh168/repos", "events_url": "https://api.github.com/users/jerryzh168/events{/privacy}", "received_events_url": "https://api.github.com/users/jerryzh168/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2018-07-27T16:57:56Z", "updated_at": "2018-07-27T17:57:45Z", "closed_at": "2018-07-27T17:57:45Z", "author_association": "CONTRIBUTOR", "pull_request": {"url": "https://api.github.com/repos/pytorch/pytorch/pulls/9939", "html_url": "https://github.com/pytorch/pytorch/pull/9939", "diff_url": "https://github.com/pytorch/pytorch/pull/9939.diff", "patch_url": "https://github.com/pytorch/pytorch/pull/9939.patch"}, "body_html": "<p>Summary:<br>\nPull Request <span class=\"issue-keyword tooltipped tooltipped-se\" aria-label=\"This pull request closes pull request #13.\">resolved</span>: <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load issue title\" data-id=\"343755684\" data-permission-text=\"Issue title is private\" data-url=\"https://github.com/facebookresearch/weakly-supervised-action-detection/issues/13\" data-hovercard-type=\"pull_request\" data-hovercard-url=\"/facebookresearch/weakly-supervised-action-detection/pull/13/hovercard\" href=\"https://github.com/facebookresearch/weakly-supervised-action-detection/pull/13\">facebookresearch/weakly-supervised-action-detection#13</a></p>\n<p>Pull Request <span class=\"issue-keyword tooltipped tooltipped-se\" aria-label=\"This pull request closes pull request #166.\">resolved</span>: <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load issue title\" data-id=\"343753308\" data-permission-text=\"Issue title is private\" data-url=\"https://github.com/pytorch/translate/issues/166\" data-hovercard-type=\"pull_request\" data-hovercard-url=\"/pytorch/translate/pull/166/hovercard\" href=\"https://github.com/pytorch/translate/pull/166\">pytorch/translate#166</a></p>\n<p>Pull Request <span class=\"issue-keyword tooltipped tooltipped-se\" aria-label=\"This pull request closes pull request #9125.\">resolved</span>: <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load issue title\" data-id=\"337734574\" data-permission-text=\"Issue title is private\" data-url=\"https://github.com/pytorch/pytorch/issues/9125\" data-hovercard-type=\"pull_request\" data-hovercard-url=\"/pytorch/pytorch/pull/9125/hovercard\" href=\"https://github.com/pytorch/pytorch/pull/9125\">#9125</a></p>\n<p><span class=\"issue-keyword tooltipped tooltipped-se\" aria-label=\"This pull request closes pull request #9125.\">Closes</span> <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load issue title\" data-id=\"337734574\" data-permission-text=\"Issue title is private\" data-url=\"https://github.com/pytorch/pytorch/issues/9125\" data-hovercard-type=\"pull_request\" data-hovercard-url=\"/pytorch/pytorch/pull/9125/hovercard\" href=\"https://github.com/pytorch/pytorch/pull/9125\">#9125</a></p>\n<p>Use inheritance for polymorphism, and remove template parameter<br>\nThis is to change the templating in call sites, the core implementations will change later</p>\n<p>Before Caffe2 Tensor class was compile-time fixed to bind to a particular device/context. With this change, we're making it a runtime property (stored inside the tensor), but preserve the same semantics. For example, one has to specify device type in order to create a Tensor - there are no uninitialized tensors. More specifically the changes are:</p>\n<ol>\n<li>We added an extra argument <em>DeviceType</em> to most of the constructors of the tensor, e.g. (Tensor(DeviceType type)),</li>\n<li>Semantics of constructor Tensor(const Tensor&amp; src, ContextForCopy* context); is changed, in this constructor, the second context is passed in to enable us to call the templated Copy function, it could be in a different context as source and target previously, now we'll enforce that the context should have same device type as src, if it is provided.</li>\n<li>To preserve 'get-or-construct' semantics of Blob, we added specialized getter Blob::GetMutableTensor that verifies both that Blob contains a Tensor and that it's of a correct type</li>\n<li>Specifically, Tensor type is not default-constructible any more (as we don't have unknown device tensors) and thus some of the code handling STL containers needs to change</li>\n</ol>\n<p>Note: Some changes are postponed just to keep this diff a bit smaller. Please see <code>TODO</code>s.</p>\n<p>Reviewed By: ezyang, houseroad</p>\n<p>Differential Revision: D9024330</p>", "body_text": "Summary:\nPull Request resolved: facebookresearch/weakly-supervised-action-detection#13\nPull Request resolved: pytorch/translate#166\nPull Request resolved: #9125\nCloses #9125\nUse inheritance for polymorphism, and remove template parameter\nThis is to change the templating in call sites, the core implementations will change later\nBefore Caffe2 Tensor class was compile-time fixed to bind to a particular device/context. With this change, we're making it a runtime property (stored inside the tensor), but preserve the same semantics. For example, one has to specify device type in order to create a Tensor - there are no uninitialized tensors. More specifically the changes are:\n\nWe added an extra argument DeviceType to most of the constructors of the tensor, e.g. (Tensor(DeviceType type)),\nSemantics of constructor Tensor(const Tensor& src, ContextForCopy* context); is changed, in this constructor, the second context is passed in to enable us to call the templated Copy function, it could be in a different context as source and target previously, now we'll enforce that the context should have same device type as src, if it is provided.\nTo preserve 'get-or-construct' semantics of Blob, we added specialized getter Blob::GetMutableTensor that verifies both that Blob contains a Tensor and that it's of a correct type\nSpecifically, Tensor type is not default-constructible any more (as we don't have unknown device tensors) and thus some of the code handling STL containers needs to change\n\nNote: Some changes are postponed just to keep this diff a bit smaller. Please see TODOs.\nReviewed By: ezyang, houseroad\nDifferential Revision: D9024330", "body": "Summary:\nPull Request resolved: https://github.com/facebookresearch/weakly-supervised-action-detection/pull/13\n\nPull Request resolved: https://github.com/pytorch/translate/pull/166\n\nPull Request resolved: https://github.com/pytorch/pytorch/pull/9125\n\nCloses https://github.com/pytorch/pytorch/pull/9125\n\nUse inheritance for polymorphism, and remove template parameter\nThis is to change the templating in call sites, the core implementations will change later\n\nBefore Caffe2 Tensor class was compile-time fixed to bind to a particular device/context. With this change, we're making it a runtime property (stored inside the tensor), but preserve the same semantics. For example, one has to specify device type in order to create a Tensor - there are no uninitialized tensors. More specifically the changes are:\n\n1. We added an extra argument *DeviceType* to most of the constructors of the tensor, e.g. (Tensor(DeviceType type)),\n2. Semantics of constructor Tensor(const Tensor<SrcContext>& src, ContextForCopy* context); is changed, in this constructor, the second context is passed in to enable us to call the templated Copy function, it could be in a different context as source and target previously, now we'll enforce that the context should have same device type as src, if it is provided.\n3. To preserve 'get-or-construct' semantics of Blob, we added specialized getter Blob::GetMutableTensor that verifies both that Blob contains a Tensor and that it's of a correct type\n4. Specifically, Tensor type is not default-constructible any more (as we don't have unknown device tensors) and thus some of the code handling STL containers needs to change\n\nNote: Some changes are postponed just to keep this diff a bit smaller. Please see `TODO`s.\n\nReviewed By: ezyang, houseroad\n\nDifferential Revision: D9024330\n"}