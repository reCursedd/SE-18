{"url": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/160889503", "pull_request_review_id": 88085068, "id": 160889503, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE2MDg4OTUwMw==", "diff_hunk": "@@ -49,6 +51,53 @@ struct FunctionFlags {\n   function_list next_functions;\n };\n \n+namespace {\n+\n+inline void variable_function_flags(FunctionFlags& f, size_t i, const Variable& var) {\n+  if (!var.defined()) return;\n+  f.is_executable |= var.requires_grad();\n+  if (var.grad_fn()) {\n+    f.next_functions[i] = std::make_pair<>(var.grad_fn(), var.output_nr());\n+  } else if (var.requires_grad()) {\n+    f.next_functions[i] = std::make_pair<>(var.grad_accumulator(), 0);\n+  }\n+}\n+\n+template<typename... Args> inline void set_variable_function_flags(FunctionFlags& flags, size_t i);\n+template<typename... Args> inline void set_variable_function_flags(FunctionFlags& flags, size_t i, const Variable& x, Args... args);\n+template<typename... Args> inline void set_variable_function_flags(FunctionFlags& flags, size_t i, at::ArrayRef<Variable> xs, Args... args);\n+\n+template<typename... Args> inline void set_variable_function_flags(FunctionFlags& flags, size_t i) {}\n+template<typename... Args> inline void set_variable_function_flags(FunctionFlags& flags, size_t i, const Variable& x, Args... args) {\n+  variable_function_flags(flags, i++, x);\n+  set_variable_function_flags(flags, i, args...);\n+}\n+template<typename... Args> inline void set_variable_function_flags(FunctionFlags& flags, size_t i, at::ArrayRef<Variable> xs, Args... args) {\n+  for (const auto& x : xs) {\n+    variable_function_flags(flags, i++, x);\n+  }\n+  set_variable_function_flags(flags, i, args...);\n+}\n+\n+// Sigh... such duplication.\n+template<typename... Args> inline void set_tensor_function_flags(FunctionFlags& flags, size_t i);\n+template<typename... Args> inline void set_tensor_function_flags(FunctionFlags& flags, size_t i, const at::Tensor& x, Args... args);\n+template<typename... Args> inline void set_tensor_function_flags(FunctionFlags& flags, size_t i, at::ArrayRef<at::Tensor> xs, Args... args);", "path": "torch/csrc/autograd/function.h", "position": null, "original_position": 47, "commit_id": "01b2c65b11dc030567189a4af5aaa151d1004ecf", "original_commit_id": "36381d5d099598c52145ad5526087aa75e795a56", "user": {"login": "apaszke", "id": 4583066, "node_id": "MDQ6VXNlcjQ1ODMwNjY=", "avatar_url": "https://avatars3.githubusercontent.com/u/4583066?v=4", "gravatar_id": "", "url": "https://api.github.com/users/apaszke", "html_url": "https://github.com/apaszke", "followers_url": "https://api.github.com/users/apaszke/followers", "following_url": "https://api.github.com/users/apaszke/following{/other_user}", "gists_url": "https://api.github.com/users/apaszke/gists{/gist_id}", "starred_url": "https://api.github.com/users/apaszke/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/apaszke/subscriptions", "organizations_url": "https://api.github.com/users/apaszke/orgs", "repos_url": "https://api.github.com/users/apaszke/repos", "events_url": "https://api.github.com/users/apaszke/events{/privacy}", "received_events_url": "https://api.github.com/users/apaszke/received_events", "type": "User", "site_admin": false}, "body": "Why do you have to pre-declare all overloads?", "created_at": "2018-01-11T08:28:13Z", "updated_at": "2018-11-23T15:38:02Z", "html_url": "https://github.com/pytorch/pytorch/pull/4593#discussion_r160889503", "pull_request_url": "https://api.github.com/repos/pytorch/pytorch/pulls/4593", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/160889503"}, "html": {"href": "https://github.com/pytorch/pytorch/pull/4593#discussion_r160889503"}, "pull_request": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/4593"}}, "body_html": "<p>Why do you have to pre-declare all overloads?</p>", "body_text": "Why do you have to pre-declare all overloads?"}