{"url": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/160987276", "pull_request_review_id": 88200787, "id": 160987276, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE2MDk4NzI3Ng==", "diff_hunk": "@@ -49,6 +51,53 @@ struct FunctionFlags {\n   function_list next_functions;\n };\n \n+namespace {\n+\n+inline void variable_function_flags(FunctionFlags& f, size_t i, const Variable& var) {\n+  if (!var.defined()) return;\n+  f.is_executable |= var.requires_grad();\n+  if (var.grad_fn()) {\n+    f.next_functions[i] = std::make_pair<>(var.grad_fn(), var.output_nr());\n+  } else if (var.requires_grad()) {\n+    f.next_functions[i] = std::make_pair<>(var.grad_accumulator(), 0);\n+  }\n+}\n+\n+template<typename... Args> inline void set_variable_function_flags(FunctionFlags& flags, size_t i);\n+template<typename... Args> inline void set_variable_function_flags(FunctionFlags& flags, size_t i, const Variable& x, Args... args);\n+template<typename... Args> inline void set_variable_function_flags(FunctionFlags& flags, size_t i, at::ArrayRef<Variable> xs, Args... args);\n+\n+template<typename... Args> inline void set_variable_function_flags(FunctionFlags& flags, size_t i) {}\n+template<typename... Args> inline void set_variable_function_flags(FunctionFlags& flags, size_t i, const Variable& x, Args... args) {\n+  variable_function_flags(flags, i++, x);\n+  set_variable_function_flags(flags, i, args...);\n+}\n+template<typename... Args> inline void set_variable_function_flags(FunctionFlags& flags, size_t i, at::ArrayRef<Variable> xs, Args... args) {\n+  for (const auto& x : xs) {\n+    variable_function_flags(flags, i++, x);\n+  }\n+  set_variable_function_flags(flags, i, args...);\n+}\n+\n+// Sigh... such duplication.\n+template<typename... Args> inline void set_tensor_function_flags(FunctionFlags& flags, size_t i);\n+template<typename... Args> inline void set_tensor_function_flags(FunctionFlags& flags, size_t i, const at::Tensor& x, Args... args);\n+template<typename... Args> inline void set_tensor_function_flags(FunctionFlags& flags, size_t i, at::ArrayRef<at::Tensor> xs, Args... args);", "path": "torch/csrc/autograd/function.h", "position": null, "original_position": 47, "commit_id": "01b2c65b11dc030567189a4af5aaa151d1004ecf", "original_commit_id": "36381d5d099598c52145ad5526087aa75e795a56", "user": {"login": "ezyang", "id": 13564, "node_id": "MDQ6VXNlcjEzNTY0", "avatar_url": "https://avatars0.githubusercontent.com/u/13564?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ezyang", "html_url": "https://github.com/ezyang", "followers_url": "https://api.github.com/users/ezyang/followers", "following_url": "https://api.github.com/users/ezyang/following{/other_user}", "gists_url": "https://api.github.com/users/ezyang/gists{/gist_id}", "starred_url": "https://api.github.com/users/ezyang/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ezyang/subscriptions", "organizations_url": "https://api.github.com/users/ezyang/orgs", "repos_url": "https://api.github.com/users/ezyang/repos", "events_url": "https://api.github.com/users/ezyang/events{/privacy}", "received_events_url": "https://api.github.com/users/ezyang/received_events", "type": "User", "site_admin": false}, "body": "I suppose you technically do not need all of the predeclarations; you only need to predeclare the last function: https://godbolt.org/g/FhkLPs (and in general, you need to predeclare all declarations after the first function which makes a recursive call).", "created_at": "2018-01-11T15:37:39Z", "updated_at": "2018-11-23T15:38:03Z", "html_url": "https://github.com/pytorch/pytorch/pull/4593#discussion_r160987276", "pull_request_url": "https://api.github.com/repos/pytorch/pytorch/pulls/4593", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/160987276"}, "html": {"href": "https://github.com/pytorch/pytorch/pull/4593#discussion_r160987276"}, "pull_request": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/4593"}}, "body_html": "<p>I suppose you technically do not need all of the predeclarations; you only need to predeclare the last function: <a href=\"https://godbolt.org/g/FhkLPs\" rel=\"nofollow\">https://godbolt.org/g/FhkLPs</a> (and in general, you need to predeclare all declarations after the first function which makes a recursive call).</p>", "body_text": "I suppose you technically do not need all of the predeclarations; you only need to predeclare the last function: https://godbolt.org/g/FhkLPs (and in general, you need to predeclare all declarations after the first function which makes a recursive call).", "in_reply_to_id": 160889503}