{"url": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/161890328", "pull_request_review_id": 89253194, "id": 161890328, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE2MTg5MDMyOA==", "diff_hunk": "@@ -49,6 +51,59 @@ struct FunctionFlags {\n   function_list next_functions;\n };\n \n+namespace {\n+\n+// Why can't we just combine the set_variable and set_tensor variants\n+// into one set of overloads?  The problem is Variable is convertible\n+// to both Tensor and ArrayRef<Variable>, making the overload ambiguous.", "path": "torch/csrc/autograd/function.h", "position": 20, "original_position": 20, "commit_id": "01b2c65b11dc030567189a4af5aaa151d1004ecf", "original_commit_id": "01b2c65b11dc030567189a4af5aaa151d1004ecf", "user": {"login": "ezyang", "id": 13564, "node_id": "MDQ6VXNlcjEzNTY0", "avatar_url": "https://avatars0.githubusercontent.com/u/13564?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ezyang", "html_url": "https://github.com/ezyang", "followers_url": "https://api.github.com/users/ezyang/followers", "following_url": "https://api.github.com/users/ezyang/following{/other_user}", "gists_url": "https://api.github.com/users/ezyang/gists{/gist_id}", "starred_url": "https://api.github.com/users/ezyang/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ezyang/subscriptions", "organizations_url": "https://api.github.com/users/ezyang/orgs", "repos_url": "https://api.github.com/users/ezyang/repos", "events_url": "https://api.github.com/users/ezyang/events{/privacy}", "received_events_url": "https://api.github.com/users/ezyang/received_events", "type": "User", "site_admin": false}, "body": "Yes.\r\n\r\n```\r\n    /// Construct an ArrayRef from a single element.\r\n    /*implicit*/ ArrayRef(const T &OneElt)\r\n      : Data(&OneElt), Length(1) {}\r\n```\r\n\r\nInherited from LLVM. I guess it is useful sometimes, but it is very annoying for Tensor/Variable overloads.", "created_at": "2018-01-16T21:23:18Z", "updated_at": "2018-11-23T15:38:14Z", "html_url": "https://github.com/pytorch/pytorch/pull/4593#discussion_r161890328", "pull_request_url": "https://api.github.com/repos/pytorch/pytorch/pulls/4593", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/161890328"}, "html": {"href": "https://github.com/pytorch/pytorch/pull/4593#discussion_r161890328"}, "pull_request": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/4593"}}, "body_html": "<p>Yes.</p>\n<pre><code>    /// Construct an ArrayRef from a single element.\n    /*implicit*/ ArrayRef(const T &amp;OneElt)\n      : Data(&amp;OneElt), Length(1) {}\n</code></pre>\n<p>Inherited from LLVM. I guess it is useful sometimes, but it is very annoying for Tensor/Variable overloads.</p>", "body_text": "Yes.\n    /// Construct an ArrayRef from a single element.\n    /*implicit*/ ArrayRef(const T &OneElt)\n      : Data(&OneElt), Length(1) {}\n\nInherited from LLVM. I guess it is useful sometimes, but it is very annoying for Tensor/Variable overloads.", "in_reply_to_id": 161203317}