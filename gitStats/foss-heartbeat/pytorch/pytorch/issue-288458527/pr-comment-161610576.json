{"url": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/161610576", "pull_request_review_id": 88927440, "id": 161610576, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE2MTYxMDU3Ng==", "diff_hunk": "@@ -1153,8 +1153,36 @@ def batch_norm(input, running_mean, running_var, weight=None, bias=None,\n     )\n \n \n+def local_response_norm(input, size, alpha=1e-4, beta=0.75, k=1):\n+    \"\"\"Applies local response normalization over an input signal composed of\n+    several input planes.\n+\n+    See :class:`~torch.nn.LocalResponseNorm` for details.\n+    \"\"\"\n+    dim = input.dim()\n+    if dim < 3 or dim > 5:\n+        raise ValueError('Expected {3,4,5}D input (got {} dimensions)'\n+                         .format(dim))\n+    div = input.mul(input).unsqueeze(1)\n+    if dim == 3:\n+        div = pad(div, (0, 0, size // 2, (size - 1) // 2))\n+        div = avg_pool2d(div, (size, 1), stride=1).squeeze(1)\n+    elif dim == 4:\n+        div = pad(div, (0, 0, 0, 0, size // 2, (size - 1) // 2))\n+        div = avg_pool3d(div, (size, 1, 1), stride=1).squeeze(1)\n+    elif dim == 5:\n+        sizes = input.size()\n+        div = div.view(sizes[0], 1, sizes[1], sizes[2], sizes[3] * sizes[4])\n+        div = pad(div, (0, 0, 0, 0, size // 2, (size - 1) // 2))\n+        div = avg_pool3d(div, (size, 1, 1), stride=1).squeeze(1)\n+        div = div.view(sizes[0], sizes[1], sizes[2], sizes[3], sizes[4])", "path": "torch/nn/functional.py", "position": null, "original_position": 26, "commit_id": "6244776e998f0e6513f89448506914c1d8985095", "original_commit_id": "f930ee86724fdaf6164b8fc0633b183236e7bd22", "user": {"login": "apaszke", "id": 4583066, "node_id": "MDQ6VXNlcjQ1ODMwNjY=", "avatar_url": "https://avatars3.githubusercontent.com/u/4583066?v=4", "gravatar_id": "", "url": "https://api.github.com/users/apaszke", "html_url": "https://github.com/apaszke", "followers_url": "https://api.github.com/users/apaszke/followers", "following_url": "https://api.github.com/users/apaszke/following{/other_user}", "gists_url": "https://api.github.com/users/apaszke/gists{/gist_id}", "starred_url": "https://api.github.com/users/apaszke/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/apaszke/subscriptions", "organizations_url": "https://api.github.com/users/apaszke/orgs", "repos_url": "https://api.github.com/users/apaszke/repos", "events_url": "https://api.github.com/users/apaszke/events{/privacy}", "received_events_url": "https://api.github.com/users/apaszke/received_events", "type": "User", "site_admin": false}, "body": "hmmm the cases looks very similar and it should be quite easy to generalize this to support an arbitrary number of dimensions. Let me know if you want to do that (I think that's nicer), of if you'd rather get this in as is (I'm ok with merging the code as is)", "created_at": "2018-01-15T20:35:27Z", "updated_at": "2018-11-23T15:38:11Z", "html_url": "https://github.com/pytorch/pytorch/pull/4667#discussion_r161610576", "pull_request_url": "https://api.github.com/repos/pytorch/pytorch/pulls/4667", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/161610576"}, "html": {"href": "https://github.com/pytorch/pytorch/pull/4667#discussion_r161610576"}, "pull_request": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/4667"}}, "body_html": "<p>hmmm the cases looks very similar and it should be quite easy to generalize this to support an arbitrary number of dimensions. Let me know if you want to do that (I think that's nicer), of if you'd rather get this in as is (I'm ok with merging the code as is)</p>", "body_text": "hmmm the cases looks very similar and it should be quite easy to generalize this to support an arbitrary number of dimensions. Let me know if you want to do that (I think that's nicer), of if you'd rather get this in as is (I'm ok with merging the code as is)"}