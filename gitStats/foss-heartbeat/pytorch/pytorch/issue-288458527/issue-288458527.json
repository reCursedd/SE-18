{"url": "https://api.github.com/repos/pytorch/pytorch/issues/4667", "repository_url": "https://api.github.com/repos/pytorch/pytorch", "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/4667/labels{/name}", "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/4667/comments", "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/4667/events", "html_url": "https://github.com/pytorch/pytorch/pull/4667", "id": 288458527, "node_id": "MDExOlB1bGxSZXF1ZXN0MTYyODU0NTcw", "number": 4667, "title": "Local Response Normalization", "user": {"login": "Kaixhin", "id": 991891, "node_id": "MDQ6VXNlcjk5MTg5MQ==", "avatar_url": "https://avatars3.githubusercontent.com/u/991891?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Kaixhin", "html_url": "https://github.com/Kaixhin", "followers_url": "https://api.github.com/users/Kaixhin/followers", "following_url": "https://api.github.com/users/Kaixhin/following{/other_user}", "gists_url": "https://api.github.com/users/Kaixhin/gists{/gist_id}", "starred_url": "https://api.github.com/users/Kaixhin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Kaixhin/subscriptions", "organizations_url": "https://api.github.com/users/Kaixhin/orgs", "repos_url": "https://api.github.com/users/Kaixhin/repos", "events_url": "https://api.github.com/users/Kaixhin/events{/privacy}", "received_events_url": "https://api.github.com/users/Kaixhin/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2018-01-15T01:32:01Z", "updated_at": "2018-11-23T15:38:11Z", "closed_at": "2018-01-16T03:23:52Z", "author_association": "CONTRIBUTOR", "pull_request": {"url": "https://api.github.com/repos/pytorch/pytorch/pulls/4667", "html_url": "https://github.com/pytorch/pytorch/pull/4667", "diff_url": "https://github.com/pytorch/pytorch/pull/4667.diff", "patch_url": "https://github.com/pytorch/pytorch/pull/4667.patch"}, "body_html": "<p>Functional implementation + module for LRN based on <a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=10011346\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/jiecaoyu\">@jiecaoyu</a>'s <a href=\"https://github.com/pytorch/pytorch/issues/653#issuecomment-326851808\" data-hovercard-type=\"issue\" data-hovercard-url=\"/pytorch/pytorch/issues/653/hovercard\">implementation</a>. Let me know if there should be any naming changes/if we want an across/within channel flag like Caffe/what to do with CrossMapLRN2d etc.</p>\n<p>Originally <a href=\"https://papers.nips.cc/paper/4824-imagenet-classification-with-deep-convolutional-neural-networks.pdf\" rel=\"nofollow\">AlexNet</a> doesn't seem to do an average (just sums), whilst <a href=\"http://caffe.berkeleyvision.org/tutorial/layers/lrn.html\" rel=\"nofollow\">Caffe</a> does do an average... I've written the docs as a sum as in the original, so will either need to change the docs or implementation depending on which one we want (or even make it another option).</p>", "body_text": "Functional implementation + module for LRN based on @jiecaoyu's implementation. Let me know if there should be any naming changes/if we want an across/within channel flag like Caffe/what to do with CrossMapLRN2d etc.\nOriginally AlexNet doesn't seem to do an average (just sums), whilst Caffe does do an average... I've written the docs as a sum as in the original, so will either need to change the docs or implementation depending on which one we want (or even make it another option).", "body": "Functional implementation + module for LRN based on @jiecaoyu's [implementation](https://github.com/pytorch/pytorch/issues/653#issuecomment-326851808). Let me know if there should be any naming changes/if we want an across/within channel flag like Caffe/what to do with CrossMapLRN2d etc.\r\n\r\nOriginally [AlexNet](https://papers.nips.cc/paper/4824-imagenet-classification-with-deep-convolutional-neural-networks.pdf) doesn't seem to do an average (just sums), whilst [Caffe](http://caffe.berkeleyvision.org/tutorial/layers/lrn.html) does do an average... I've written the docs as a sum as in the original, so will either need to change the docs or implementation depending on which one we want (or even make it another option)."}