{"url": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/161623312", "pull_request_review_id": 88942708, "id": 161623312, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE2MTYyMzMxMg==", "diff_hunk": "@@ -1153,8 +1153,36 @@ def batch_norm(input, running_mean, running_var, weight=None, bias=None,\n     )\n \n \n+def local_response_norm(input, size, alpha=1e-4, beta=0.75, k=1):\n+    \"\"\"Applies local response normalization over an input signal composed of\n+    several input planes.\n+\n+    See :class:`~torch.nn.LocalResponseNorm` for details.\n+    \"\"\"\n+    dim = input.dim()\n+    if dim < 3 or dim > 5:\n+        raise ValueError('Expected {3,4,5}D input (got {} dimensions)'\n+                         .format(dim))\n+    div = input.mul(input).unsqueeze(1)\n+    if dim == 3:\n+        div = pad(div, (0, 0, size // 2, (size - 1) // 2))\n+        div = avg_pool2d(div, (size, 1), stride=1).squeeze(1)\n+    elif dim == 4:\n+        div = pad(div, (0, 0, 0, 0, size // 2, (size - 1) // 2))\n+        div = avg_pool3d(div, (size, 1, 1), stride=1).squeeze(1)\n+    elif dim == 5:\n+        sizes = input.size()\n+        div = div.view(sizes[0], 1, sizes[1], sizes[2], sizes[3] * sizes[4])\n+        div = pad(div, (0, 0, 0, 0, size // 2, (size - 1) // 2))\n+        div = avg_pool3d(div, (size, 1, 1), stride=1).squeeze(1)\n+        div = div.view(sizes[0], sizes[1], sizes[2], sizes[3], sizes[4])", "path": "torch/nn/functional.py", "position": null, "original_position": 26, "commit_id": "6244776e998f0e6513f89448506914c1d8985095", "original_commit_id": "f930ee86724fdaf6164b8fc0633b183236e7bd22", "user": {"login": "Kaixhin", "id": 991891, "node_id": "MDQ6VXNlcjk5MTg5MQ==", "avatar_url": "https://avatars3.githubusercontent.com/u/991891?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Kaixhin", "html_url": "https://github.com/Kaixhin", "followers_url": "https://api.github.com/users/Kaixhin/followers", "following_url": "https://api.github.com/users/Kaixhin/following{/other_user}", "gists_url": "https://api.github.com/users/Kaixhin/gists{/gist_id}", "starred_url": "https://api.github.com/users/Kaixhin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Kaixhin/subscriptions", "organizations_url": "https://api.github.com/users/Kaixhin/orgs", "repos_url": "https://api.github.com/users/Kaixhin/repos", "events_url": "https://api.github.com/users/Kaixhin/events{/privacy}", "received_events_url": "https://api.github.com/users/Kaixhin/received_events", "type": "User", "site_admin": false}, "body": "Yep done a generalised higher dim version. If someone can check the maths/implementation then this should be good to go.", "created_at": "2018-01-15T22:05:10Z", "updated_at": "2018-11-23T15:38:11Z", "html_url": "https://github.com/pytorch/pytorch/pull/4667#discussion_r161623312", "pull_request_url": "https://api.github.com/repos/pytorch/pytorch/pulls/4667", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/161623312"}, "html": {"href": "https://github.com/pytorch/pytorch/pull/4667#discussion_r161623312"}, "pull_request": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/4667"}}, "body_html": "<p>Yep done a generalised higher dim version. If someone can check the maths/implementation then this should be good to go.</p>", "body_text": "Yep done a generalised higher dim version. If someone can check the maths/implementation then this should be good to go.", "in_reply_to_id": 161610576}