{"url": "https://api.github.com/repos/pytorch/pytorch/issues/comments/434819322", "html_url": "https://github.com/pytorch/pytorch/issues/13397#issuecomment-434819322", "issue_url": "https://api.github.com/repos/pytorch/pytorch/issues/13397", "id": 434819322, "node_id": "MDEyOklzc3VlQ29tbWVudDQzNDgxOTMyMg==", "user": {"login": "ShreyasSkandan", "id": 5595336, "node_id": "MDQ6VXNlcjU1OTUzMzY=", "avatar_url": "https://avatars1.githubusercontent.com/u/5595336?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ShreyasSkandan", "html_url": "https://github.com/ShreyasSkandan", "followers_url": "https://api.github.com/users/ShreyasSkandan/followers", "following_url": "https://api.github.com/users/ShreyasSkandan/following{/other_user}", "gists_url": "https://api.github.com/users/ShreyasSkandan/gists{/gist_id}", "starred_url": "https://api.github.com/users/ShreyasSkandan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ShreyasSkandan/subscriptions", "organizations_url": "https://api.github.com/users/ShreyasSkandan/orgs", "repos_url": "https://api.github.com/users/ShreyasSkandan/repos", "events_url": "https://api.github.com/users/ShreyasSkandan/events{/privacy}", "received_events_url": "https://api.github.com/users/ShreyasSkandan/received_events", "type": "User", "site_admin": false}, "created_at": "2018-10-31T19:34:42Z", "updated_at": "2018-10-31T19:34:42Z", "author_association": "NONE", "body_html": "<p>Hi, My apologies for the lack of detail.</p>\n<p>Here is the network that i'm trying to load</p>\n<pre><code>DataParallel(                                                                                                                                                                                               \n  (module): Net(                                                                                                                                                                                            \n    (encoder): Encoder(                                                                                                                                                                                     \n      (initial_block): DownsamplerBlock(                                                                                                                                                                    \n        (conv): Conv2d(3, 13, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1))                                                                                                                            \n        (pool): MaxPool2d(kernel_size=2, stride=2, padding=0, dilation=1, ceil_mode=False)                                                                                                                  \n        (bn): BatchNorm2d(16, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)                                                                                                               \n      )                                                                                                                                                                                                     \n      (layers): ModuleList(                                                                                                                                                                                 \n        (0): DownsamplerBlock(                                                                                                                                                                              \n          (conv): Conv2d(16, 48, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1))                                                                                                                         \n          (pool): MaxPool2d(kernel_size=2, stride=2, padding=0, dilation=1, ceil_mode=False)                                                                                                                \n          (bn): BatchNorm2d(64, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)                                                                                                             \n        )                                                                                                                                                                                                   \n        (1): non_bottleneck_1d(                                                                                                                                                                             \n          (conv3x1_1): Conv2d(64, 64, kernel_size=(3, 1), stride=(1, 1), padding=(1, 0))                                                                                                                    \n          (conv1x3_1): Conv2d(64, 64, kernel_size=(1, 3), stride=(1, 1), padding=(0, 1))                                                                                                                    \n          (bn1): BatchNorm2d(64, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)                                                                                                            \n          (conv3x1_2): Conv2d(64, 64, kernel_size=(3, 1), stride=(1, 1), padding=(1, 0))                                                                                                                    \n          (conv1x3_2): Conv2d(64, 64, kernel_size=(1, 3), stride=(1, 1), padding=(0, 1))                                                                                                                    \n          (bn2): BatchNorm2d(64, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)                                                                                                            \n          (dropout): Dropout2d(p=0.03)                                                                                                                                                                      \n        )                                                                                                                                                                                                   \n        (2): non_bottleneck_1d(                                                                                                                                                                             \n          (conv3x1_1): Conv2d(64, 64, kernel_size=(3, 1), stride=(1, 1), padding=(1, 0))                                                                                                                    \n          (conv1x3_1): Conv2d(64, 64, kernel_size=(1, 3), stride=(1, 1), padding=(0, 1))                                                                                                                    \n          (bn1): BatchNorm2d(64, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)                                                                                                            \n          (conv3x1_2): Conv2d(64, 64, kernel_size=(3, 1), stride=(1, 1), padding=(1, 0))                                                                                                                    \n          (conv1x3_2): Conv2d(64, 64, kernel_size=(1, 3), stride=(1, 1), padding=(0, 1))                                                                                                                    \n          (bn2): BatchNorm2d(64, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)                                                                                                            \n          (dropout): Dropout2d(p=0.03)                                                                                                                                                                      \n        )                                                                                                                                                                                                   \n        (3): non_bottleneck_1d(                                                                                                                                                                             \n          (conv3x1_1): Conv2d(64, 64, kernel_size=(3, 1), stride=(1, 1), padding=(1, 0))                                                                                                                    \n          (conv1x3_1): Conv2d(64, 64, kernel_size=(1, 3), stride=(1, 1), padding=(0, 1))                                                                                                                    \n          (bn1): BatchNorm2d(64, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)                                                                                                            \n          (conv3x1_2): Conv2d(64, 64, kernel_size=(3, 1), stride=(1, 1), padding=(1, 0))                                                                                                                    \n          (conv1x3_2): Conv2d(64, 64, kernel_size=(1, 3), stride=(1, 1), padding=(0, 1))                                                                                                                    \n          (bn2): BatchNorm2d(64, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)                                                                                                            \n          (dropout): Dropout2d(p=0.03)                                                                                                                                                                      \n        )                                                                                                                                                                                                   \n        (5): non_bottleneck_1d(\n          (conv3x1_1): Conv2d(16, 16, kernel_size=(3, 1), stride=(1, 1), padding=(1, 0))\n        )                                                                                                                                                                                           [55/955]\n      )                                                                                                                                                                                                     \n      (output_conv): Conv2d(128, 2, kernel_size=(1, 1), stride=(1, 1))                                                                                                                                      \n    )                                                                                                                                                                                                       \n    (decoder): Decoder(                                                                                                                                                                                     \n      (layers): ModuleList(                                                                                                                                                                                 \n        (0): UpsamplerBlock(                                                                                                                                                                                \n          (conv): ConvTranspose2d(128, 64, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), output_padding=(1, 1))                                                                                        \n          (bn): BatchNorm2d(64, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)                                                                                                             \n        )                                                                                                                                                                                                   \n        (1): non_bottleneck_1d(                                                                                                                                                                             \n          (conv3x1_1): Conv2d(64, 64, kernel_size=(3, 1), stride=(1, 1), padding=(1, 0))                                                                                                                    \n          (conv1x3_1): Conv2d(64, 64, kernel_size=(1, 3), stride=(1, 1), padding=(0, 1))                                                                                                                    \n          (bn1): BatchNorm2d(64, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)                                                                                                            \n          (conv3x1_2): Conv2d(64, 64, kernel_size=(3, 1), stride=(1, 1), padding=(1, 0))                                                                                                                    \n          (conv1x3_2): Conv2d(64, 64, kernel_size=(1, 3), stride=(1, 1), padding=(0, 1))                                                                                                                    \n          (bn2): BatchNorm2d(64, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)                                                                                                            \n          (dropout): Dropout2d(p=0)                                                                                                                                                                         \n        )                                                                                                                                                                                                   \n        (2): non_bottleneck_1d(                                                                                                                                                                             \n          (conv3x1_1): Conv2d(64, 64, kernel_size=(3, 1), stride=(1, 1), padding=(1, 0))                                                                                                                    \n          (conv1x3_1): Conv2d(64, 64, kernel_size=(1, 3), stride=(1, 1), padding=(0, 1))\n          (bn1): BatchNorm2d(64, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n          (conv3x1_2): Conv2d(64, 64, kernel_size=(3, 1), stride=(1, 1), padding=(1, 0))\n          (conv1x3_2): Conv2d(64, 64, kernel_size=(1, 3), stride=(1, 1), padding=(0, 1))\n          (bn2): BatchNorm2d(64, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n          (dropout): Dropout2d(p=0)\n        )\n        (3): UpsamplerBlock(\n          (conv): ConvTranspose2d(64, 16, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), output_padding=(1, 1))\n          (bn): BatchNorm2d(16, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n        )\n        (4): non_bottleneck_1d(\n          (conv3x1_1): Conv2d(16, 16, kernel_size=(3, 1), stride=(1, 1), padding=(1, 0))\n          (conv1x3_1): Conv2d(16, 16, kernel_size=(1, 3), stride=(1, 1), padding=(0, 1))\n          (bn1): BatchNorm2d(16, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n          (conv3x1_2): Conv2d(16, 16, kernel_size=(3, 1), stride=(1, 1), padding=(1, 0))\n          (conv1x3_2): Conv2d(16, 16, kernel_size=(1, 3), stride=(1, 1), padding=(0, 1))\n          (bn2): BatchNorm2d(16, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n          (dropout): Dropout2d(p=0)\n        )\n        (5): non_bottleneck_1d(\n          (conv3x1_1): Conv2d(16, 16, kernel_size=(3, 1), stride=(1, 1), padding=(1, 0))\n          (conv1x3_1): Conv2d(16, 16, kernel_size=(1, 3), stride=(1, 1), padding=(0, 1))\n          (bn1): BatchNorm2d(16, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n          (conv3x1_2): Conv2d(16, 16, kernel_size=(3, 1), stride=(1, 1), padding=(1, 0))\n          (conv1x3_2): Conv2d(16, 16, kernel_size=(1, 3), stride=(1, 1), padding=(0, 1))\n          (bn2): BatchNorm2d(16, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n          (dropout): Dropout2d(p=0)\n        )\n      )\n      (output_conv): ConvTranspose2d(16, 2, kernel_size=(2, 2), stride=(2, 2))\n    )\n  )\n)\n            \n</code></pre>\n<p>Nothing that looks glaringly \"unsupported\"...</p>\n<p>Here is how I'm trying to load and export it.</p>\n<pre><code>    modelpath = ARGS_LOAD_DIR + ARGS_LOAD_MODEL\n    weightspath = ARGS_LOAD_DIR + ARGS_LOAD_WEIGHTS\n    print (\"---------- DATA PATHS: ----------\")\n    print (\"Model File: \" + modelpath)\n    print (\"Weight File: \" + weightspath)\n    model = Net(NUM_CLASSES)\n\n    model = torch.nn.DataParallel(model)\n    model = model.cuda()\n\n    model = load_my_state_dict(model, torch.load(weightspath))\n    print (\"Model and weights loaded..\")\n    print (\"---------------------------------\")\n\n    pdb.set_trace()\n    dummy_input = Variable(torch.randn(1, 3, 512, 640))\n    torch.onnx.export(model, dummy_input, 'test_model.onnx')\n\n    pdb.set_trace()\n</code></pre>\n<p>And here is the error I get:</p>\n<p><strong>COMMAND: torch.onnx.export(model, dumm_2, \"test.onnx\")</strong></p>\n<pre><code>*** RuntimeError: tuple appears in op that does not forward tuples (VisitNode at ../torch/csrc/jit/pa\nsses/lower_tuples.cpp:72)                                                                            \nframe #0: torch::jit::LowerAllTuples(std::shared_ptr&lt;torch::jit::Graph&gt;&amp;) + 0x6c (0x7f9d479284 in /ho\nme/nvidia/.local/lib/python3.6/site-packages/torch/lib/libtorch.so.1)                                \nframe #1: &lt;unknown function&gt; + 0x3afaf0 (0x7fafd41af0 in /home/nvidia/.local/lib/python3.6/site-packa\nges/torch/_C.cpython-36m-aarch64-linux-gnu.so)                                                       \nframe #2: &lt;unknown function&gt; + 0x1903f0 (0x7fafb223f0 in /home/nvidia/.local/lib/python3.6/site-packa\nges/torch/_C.cpython-36m-aarch64-linux-gnu.so)                                                       \n&lt;omitting python frames&gt;                                                                             \nframe #4: python3() [0x529658]                                                                       \nframe #6: python3() [0x528240]                                                                       \nframe #7: python3() [0x529750]\nframe #9: python3() [0x52915c]\nframe #10: python3() [0x529570]\nframe #12: python3() [0x52915c]\nframe #13: python3() [0x529570]\nframe #15: python3() [0x52915c]\nframe #17: python3() [0x4784d4]\nframe #20: python3() [0x52915c]\nframe #21: python3() [0x529570]\nframe #23: python3() [0x52915c]\nframe #25: python3() [0x526dcc]\nframe #27: python3() [0x529658]\nframe #29: python3() [0x528240]\nframe #30: python3() [0x529750]\nframe #32: python3() [0x528240]\nframe #33: python3() [0x529750]\nframe #35: python3() [0x528240]\nframe #36: python3() [0x529750]\nframe #38: python3() [0x52915c]\nframe #39: python3() [0x529570]\nframe #41: python3() [0x528240]\nframe #42: python3() [0x529750]\nframe #44: python3() [0x528240]\nframe #45: python3() [0x529750]\nframe #47: python3() [0x528240]\nframe #48: python3() [0x529750]\nframe #50: python3() [0x528240]\nframe #51: python3() [0x529750]\nframe #53: python3() [0x528240]\nframe #58: python3() [0x431770]\nframe #60: python3() [0x528240]\nframe #61: python3() [0x529750]\nframe #63: python3() [0x52915c]\n</code></pre>\n<p>Any help is appreciated!</p>", "body_text": "Hi, My apologies for the lack of detail.\nHere is the network that i'm trying to load\nDataParallel(                                                                                                                                                                                               \n  (module): Net(                                                                                                                                                                                            \n    (encoder): Encoder(                                                                                                                                                                                     \n      (initial_block): DownsamplerBlock(                                                                                                                                                                    \n        (conv): Conv2d(3, 13, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1))                                                                                                                            \n        (pool): MaxPool2d(kernel_size=2, stride=2, padding=0, dilation=1, ceil_mode=False)                                                                                                                  \n        (bn): BatchNorm2d(16, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)                                                                                                               \n      )                                                                                                                                                                                                     \n      (layers): ModuleList(                                                                                                                                                                                 \n        (0): DownsamplerBlock(                                                                                                                                                                              \n          (conv): Conv2d(16, 48, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1))                                                                                                                         \n          (pool): MaxPool2d(kernel_size=2, stride=2, padding=0, dilation=1, ceil_mode=False)                                                                                                                \n          (bn): BatchNorm2d(64, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)                                                                                                             \n        )                                                                                                                                                                                                   \n        (1): non_bottleneck_1d(                                                                                                                                                                             \n          (conv3x1_1): Conv2d(64, 64, kernel_size=(3, 1), stride=(1, 1), padding=(1, 0))                                                                                                                    \n          (conv1x3_1): Conv2d(64, 64, kernel_size=(1, 3), stride=(1, 1), padding=(0, 1))                                                                                                                    \n          (bn1): BatchNorm2d(64, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)                                                                                                            \n          (conv3x1_2): Conv2d(64, 64, kernel_size=(3, 1), stride=(1, 1), padding=(1, 0))                                                                                                                    \n          (conv1x3_2): Conv2d(64, 64, kernel_size=(1, 3), stride=(1, 1), padding=(0, 1))                                                                                                                    \n          (bn2): BatchNorm2d(64, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)                                                                                                            \n          (dropout): Dropout2d(p=0.03)                                                                                                                                                                      \n        )                                                                                                                                                                                                   \n        (2): non_bottleneck_1d(                                                                                                                                                                             \n          (conv3x1_1): Conv2d(64, 64, kernel_size=(3, 1), stride=(1, 1), padding=(1, 0))                                                                                                                    \n          (conv1x3_1): Conv2d(64, 64, kernel_size=(1, 3), stride=(1, 1), padding=(0, 1))                                                                                                                    \n          (bn1): BatchNorm2d(64, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)                                                                                                            \n          (conv3x1_2): Conv2d(64, 64, kernel_size=(3, 1), stride=(1, 1), padding=(1, 0))                                                                                                                    \n          (conv1x3_2): Conv2d(64, 64, kernel_size=(1, 3), stride=(1, 1), padding=(0, 1))                                                                                                                    \n          (bn2): BatchNorm2d(64, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)                                                                                                            \n          (dropout): Dropout2d(p=0.03)                                                                                                                                                                      \n        )                                                                                                                                                                                                   \n        (3): non_bottleneck_1d(                                                                                                                                                                             \n          (conv3x1_1): Conv2d(64, 64, kernel_size=(3, 1), stride=(1, 1), padding=(1, 0))                                                                                                                    \n          (conv1x3_1): Conv2d(64, 64, kernel_size=(1, 3), stride=(1, 1), padding=(0, 1))                                                                                                                    \n          (bn1): BatchNorm2d(64, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)                                                                                                            \n          (conv3x1_2): Conv2d(64, 64, kernel_size=(3, 1), stride=(1, 1), padding=(1, 0))                                                                                                                    \n          (conv1x3_2): Conv2d(64, 64, kernel_size=(1, 3), stride=(1, 1), padding=(0, 1))                                                                                                                    \n          (bn2): BatchNorm2d(64, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)                                                                                                            \n          (dropout): Dropout2d(p=0.03)                                                                                                                                                                      \n        )                                                                                                                                                                                                   \n        (5): non_bottleneck_1d(\n          (conv3x1_1): Conv2d(16, 16, kernel_size=(3, 1), stride=(1, 1), padding=(1, 0))\n        )                                                                                                                                                                                           [55/955]\n      )                                                                                                                                                                                                     \n      (output_conv): Conv2d(128, 2, kernel_size=(1, 1), stride=(1, 1))                                                                                                                                      \n    )                                                                                                                                                                                                       \n    (decoder): Decoder(                                                                                                                                                                                     \n      (layers): ModuleList(                                                                                                                                                                                 \n        (0): UpsamplerBlock(                                                                                                                                                                                \n          (conv): ConvTranspose2d(128, 64, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), output_padding=(1, 1))                                                                                        \n          (bn): BatchNorm2d(64, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)                                                                                                             \n        )                                                                                                                                                                                                   \n        (1): non_bottleneck_1d(                                                                                                                                                                             \n          (conv3x1_1): Conv2d(64, 64, kernel_size=(3, 1), stride=(1, 1), padding=(1, 0))                                                                                                                    \n          (conv1x3_1): Conv2d(64, 64, kernel_size=(1, 3), stride=(1, 1), padding=(0, 1))                                                                                                                    \n          (bn1): BatchNorm2d(64, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)                                                                                                            \n          (conv3x1_2): Conv2d(64, 64, kernel_size=(3, 1), stride=(1, 1), padding=(1, 0))                                                                                                                    \n          (conv1x3_2): Conv2d(64, 64, kernel_size=(1, 3), stride=(1, 1), padding=(0, 1))                                                                                                                    \n          (bn2): BatchNorm2d(64, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)                                                                                                            \n          (dropout): Dropout2d(p=0)                                                                                                                                                                         \n        )                                                                                                                                                                                                   \n        (2): non_bottleneck_1d(                                                                                                                                                                             \n          (conv3x1_1): Conv2d(64, 64, kernel_size=(3, 1), stride=(1, 1), padding=(1, 0))                                                                                                                    \n          (conv1x3_1): Conv2d(64, 64, kernel_size=(1, 3), stride=(1, 1), padding=(0, 1))\n          (bn1): BatchNorm2d(64, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n          (conv3x1_2): Conv2d(64, 64, kernel_size=(3, 1), stride=(1, 1), padding=(1, 0))\n          (conv1x3_2): Conv2d(64, 64, kernel_size=(1, 3), stride=(1, 1), padding=(0, 1))\n          (bn2): BatchNorm2d(64, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n          (dropout): Dropout2d(p=0)\n        )\n        (3): UpsamplerBlock(\n          (conv): ConvTranspose2d(64, 16, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), output_padding=(1, 1))\n          (bn): BatchNorm2d(16, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n        )\n        (4): non_bottleneck_1d(\n          (conv3x1_1): Conv2d(16, 16, kernel_size=(3, 1), stride=(1, 1), padding=(1, 0))\n          (conv1x3_1): Conv2d(16, 16, kernel_size=(1, 3), stride=(1, 1), padding=(0, 1))\n          (bn1): BatchNorm2d(16, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n          (conv3x1_2): Conv2d(16, 16, kernel_size=(3, 1), stride=(1, 1), padding=(1, 0))\n          (conv1x3_2): Conv2d(16, 16, kernel_size=(1, 3), stride=(1, 1), padding=(0, 1))\n          (bn2): BatchNorm2d(16, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n          (dropout): Dropout2d(p=0)\n        )\n        (5): non_bottleneck_1d(\n          (conv3x1_1): Conv2d(16, 16, kernel_size=(3, 1), stride=(1, 1), padding=(1, 0))\n          (conv1x3_1): Conv2d(16, 16, kernel_size=(1, 3), stride=(1, 1), padding=(0, 1))\n          (bn1): BatchNorm2d(16, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n          (conv3x1_2): Conv2d(16, 16, kernel_size=(3, 1), stride=(1, 1), padding=(1, 0))\n          (conv1x3_2): Conv2d(16, 16, kernel_size=(1, 3), stride=(1, 1), padding=(0, 1))\n          (bn2): BatchNorm2d(16, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\n          (dropout): Dropout2d(p=0)\n        )\n      )\n      (output_conv): ConvTranspose2d(16, 2, kernel_size=(2, 2), stride=(2, 2))\n    )\n  )\n)\n            \n\nNothing that looks glaringly \"unsupported\"...\nHere is how I'm trying to load and export it.\n    modelpath = ARGS_LOAD_DIR + ARGS_LOAD_MODEL\n    weightspath = ARGS_LOAD_DIR + ARGS_LOAD_WEIGHTS\n    print (\"---------- DATA PATHS: ----------\")\n    print (\"Model File: \" + modelpath)\n    print (\"Weight File: \" + weightspath)\n    model = Net(NUM_CLASSES)\n\n    model = torch.nn.DataParallel(model)\n    model = model.cuda()\n\n    model = load_my_state_dict(model, torch.load(weightspath))\n    print (\"Model and weights loaded..\")\n    print (\"---------------------------------\")\n\n    pdb.set_trace()\n    dummy_input = Variable(torch.randn(1, 3, 512, 640))\n    torch.onnx.export(model, dummy_input, 'test_model.onnx')\n\n    pdb.set_trace()\n\nAnd here is the error I get:\nCOMMAND: torch.onnx.export(model, dumm_2, \"test.onnx\")\n*** RuntimeError: tuple appears in op that does not forward tuples (VisitNode at ../torch/csrc/jit/pa\nsses/lower_tuples.cpp:72)                                                                            \nframe #0: torch::jit::LowerAllTuples(std::shared_ptr<torch::jit::Graph>&) + 0x6c (0x7f9d479284 in /ho\nme/nvidia/.local/lib/python3.6/site-packages/torch/lib/libtorch.so.1)                                \nframe #1: <unknown function> + 0x3afaf0 (0x7fafd41af0 in /home/nvidia/.local/lib/python3.6/site-packa\nges/torch/_C.cpython-36m-aarch64-linux-gnu.so)                                                       \nframe #2: <unknown function> + 0x1903f0 (0x7fafb223f0 in /home/nvidia/.local/lib/python3.6/site-packa\nges/torch/_C.cpython-36m-aarch64-linux-gnu.so)                                                       \n<omitting python frames>                                                                             \nframe #4: python3() [0x529658]                                                                       \nframe #6: python3() [0x528240]                                                                       \nframe #7: python3() [0x529750]\nframe #9: python3() [0x52915c]\nframe #10: python3() [0x529570]\nframe #12: python3() [0x52915c]\nframe #13: python3() [0x529570]\nframe #15: python3() [0x52915c]\nframe #17: python3() [0x4784d4]\nframe #20: python3() [0x52915c]\nframe #21: python3() [0x529570]\nframe #23: python3() [0x52915c]\nframe #25: python3() [0x526dcc]\nframe #27: python3() [0x529658]\nframe #29: python3() [0x528240]\nframe #30: python3() [0x529750]\nframe #32: python3() [0x528240]\nframe #33: python3() [0x529750]\nframe #35: python3() [0x528240]\nframe #36: python3() [0x529750]\nframe #38: python3() [0x52915c]\nframe #39: python3() [0x529570]\nframe #41: python3() [0x528240]\nframe #42: python3() [0x529750]\nframe #44: python3() [0x528240]\nframe #45: python3() [0x529750]\nframe #47: python3() [0x528240]\nframe #48: python3() [0x529750]\nframe #50: python3() [0x528240]\nframe #51: python3() [0x529750]\nframe #53: python3() [0x528240]\nframe #58: python3() [0x431770]\nframe #60: python3() [0x528240]\nframe #61: python3() [0x529750]\nframe #63: python3() [0x52915c]\n\nAny help is appreciated!", "body": "Hi, My apologies for the lack of detail.\r\n\r\nHere is the network that i'm trying to load\r\n\r\n```\r\nDataParallel(                                                                                                                                                                                               \r\n  (module): Net(                                                                                                                                                                                            \r\n    (encoder): Encoder(                                                                                                                                                                                     \r\n      (initial_block): DownsamplerBlock(                                                                                                                                                                    \r\n        (conv): Conv2d(3, 13, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1))                                                                                                                            \r\n        (pool): MaxPool2d(kernel_size=2, stride=2, padding=0, dilation=1, ceil_mode=False)                                                                                                                  \r\n        (bn): BatchNorm2d(16, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)                                                                                                               \r\n      )                                                                                                                                                                                                     \r\n      (layers): ModuleList(                                                                                                                                                                                 \r\n        (0): DownsamplerBlock(                                                                                                                                                                              \r\n          (conv): Conv2d(16, 48, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1))                                                                                                                         \r\n          (pool): MaxPool2d(kernel_size=2, stride=2, padding=0, dilation=1, ceil_mode=False)                                                                                                                \r\n          (bn): BatchNorm2d(64, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)                                                                                                             \r\n        )                                                                                                                                                                                                   \r\n        (1): non_bottleneck_1d(                                                                                                                                                                             \r\n          (conv3x1_1): Conv2d(64, 64, kernel_size=(3, 1), stride=(1, 1), padding=(1, 0))                                                                                                                    \r\n          (conv1x3_1): Conv2d(64, 64, kernel_size=(1, 3), stride=(1, 1), padding=(0, 1))                                                                                                                    \r\n          (bn1): BatchNorm2d(64, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)                                                                                                            \r\n          (conv3x1_2): Conv2d(64, 64, kernel_size=(3, 1), stride=(1, 1), padding=(1, 0))                                                                                                                    \r\n          (conv1x3_2): Conv2d(64, 64, kernel_size=(1, 3), stride=(1, 1), padding=(0, 1))                                                                                                                    \r\n          (bn2): BatchNorm2d(64, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)                                                                                                            \r\n          (dropout): Dropout2d(p=0.03)                                                                                                                                                                      \r\n        )                                                                                                                                                                                                   \r\n        (2): non_bottleneck_1d(                                                                                                                                                                             \r\n          (conv3x1_1): Conv2d(64, 64, kernel_size=(3, 1), stride=(1, 1), padding=(1, 0))                                                                                                                    \r\n          (conv1x3_1): Conv2d(64, 64, kernel_size=(1, 3), stride=(1, 1), padding=(0, 1))                                                                                                                    \r\n          (bn1): BatchNorm2d(64, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)                                                                                                            \r\n          (conv3x1_2): Conv2d(64, 64, kernel_size=(3, 1), stride=(1, 1), padding=(1, 0))                                                                                                                    \r\n          (conv1x3_2): Conv2d(64, 64, kernel_size=(1, 3), stride=(1, 1), padding=(0, 1))                                                                                                                    \r\n          (bn2): BatchNorm2d(64, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)                                                                                                            \r\n          (dropout): Dropout2d(p=0.03)                                                                                                                                                                      \r\n        )                                                                                                                                                                                                   \r\n        (3): non_bottleneck_1d(                                                                                                                                                                             \r\n          (conv3x1_1): Conv2d(64, 64, kernel_size=(3, 1), stride=(1, 1), padding=(1, 0))                                                                                                                    \r\n          (conv1x3_1): Conv2d(64, 64, kernel_size=(1, 3), stride=(1, 1), padding=(0, 1))                                                                                                                    \r\n          (bn1): BatchNorm2d(64, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)                                                                                                            \r\n          (conv3x1_2): Conv2d(64, 64, kernel_size=(3, 1), stride=(1, 1), padding=(1, 0))                                                                                                                    \r\n          (conv1x3_2): Conv2d(64, 64, kernel_size=(1, 3), stride=(1, 1), padding=(0, 1))                                                                                                                    \r\n          (bn2): BatchNorm2d(64, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)                                                                                                            \r\n          (dropout): Dropout2d(p=0.03)                                                                                                                                                                      \r\n        )                                                                                                                                                                                                   \r\n        (5): non_bottleneck_1d(\r\n          (conv3x1_1): Conv2d(16, 16, kernel_size=(3, 1), stride=(1, 1), padding=(1, 0))\r\n        )                                                                                                                                                                                           [55/955]\r\n      )                                                                                                                                                                                                     \r\n      (output_conv): Conv2d(128, 2, kernel_size=(1, 1), stride=(1, 1))                                                                                                                                      \r\n    )                                                                                                                                                                                                       \r\n    (decoder): Decoder(                                                                                                                                                                                     \r\n      (layers): ModuleList(                                                                                                                                                                                 \r\n        (0): UpsamplerBlock(                                                                                                                                                                                \r\n          (conv): ConvTranspose2d(128, 64, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), output_padding=(1, 1))                                                                                        \r\n          (bn): BatchNorm2d(64, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)                                                                                                             \r\n        )                                                                                                                                                                                                   \r\n        (1): non_bottleneck_1d(                                                                                                                                                                             \r\n          (conv3x1_1): Conv2d(64, 64, kernel_size=(3, 1), stride=(1, 1), padding=(1, 0))                                                                                                                    \r\n          (conv1x3_1): Conv2d(64, 64, kernel_size=(1, 3), stride=(1, 1), padding=(0, 1))                                                                                                                    \r\n          (bn1): BatchNorm2d(64, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)                                                                                                            \r\n          (conv3x1_2): Conv2d(64, 64, kernel_size=(3, 1), stride=(1, 1), padding=(1, 0))                                                                                                                    \r\n          (conv1x3_2): Conv2d(64, 64, kernel_size=(1, 3), stride=(1, 1), padding=(0, 1))                                                                                                                    \r\n          (bn2): BatchNorm2d(64, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)                                                                                                            \r\n          (dropout): Dropout2d(p=0)                                                                                                                                                                         \r\n        )                                                                                                                                                                                                   \r\n        (2): non_bottleneck_1d(                                                                                                                                                                             \r\n          (conv3x1_1): Conv2d(64, 64, kernel_size=(3, 1), stride=(1, 1), padding=(1, 0))                                                                                                                    \r\n          (conv1x3_1): Conv2d(64, 64, kernel_size=(1, 3), stride=(1, 1), padding=(0, 1))\r\n          (bn1): BatchNorm2d(64, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\r\n          (conv3x1_2): Conv2d(64, 64, kernel_size=(3, 1), stride=(1, 1), padding=(1, 0))\r\n          (conv1x3_2): Conv2d(64, 64, kernel_size=(1, 3), stride=(1, 1), padding=(0, 1))\r\n          (bn2): BatchNorm2d(64, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\r\n          (dropout): Dropout2d(p=0)\r\n        )\r\n        (3): UpsamplerBlock(\r\n          (conv): ConvTranspose2d(64, 16, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), output_padding=(1, 1))\r\n          (bn): BatchNorm2d(16, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\r\n        )\r\n        (4): non_bottleneck_1d(\r\n          (conv3x1_1): Conv2d(16, 16, kernel_size=(3, 1), stride=(1, 1), padding=(1, 0))\r\n          (conv1x3_1): Conv2d(16, 16, kernel_size=(1, 3), stride=(1, 1), padding=(0, 1))\r\n          (bn1): BatchNorm2d(16, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\r\n          (conv3x1_2): Conv2d(16, 16, kernel_size=(3, 1), stride=(1, 1), padding=(1, 0))\r\n          (conv1x3_2): Conv2d(16, 16, kernel_size=(1, 3), stride=(1, 1), padding=(0, 1))\r\n          (bn2): BatchNorm2d(16, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\r\n          (dropout): Dropout2d(p=0)\r\n        )\r\n        (5): non_bottleneck_1d(\r\n          (conv3x1_1): Conv2d(16, 16, kernel_size=(3, 1), stride=(1, 1), padding=(1, 0))\r\n          (conv1x3_1): Conv2d(16, 16, kernel_size=(1, 3), stride=(1, 1), padding=(0, 1))\r\n          (bn1): BatchNorm2d(16, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\r\n          (conv3x1_2): Conv2d(16, 16, kernel_size=(3, 1), stride=(1, 1), padding=(1, 0))\r\n          (conv1x3_2): Conv2d(16, 16, kernel_size=(1, 3), stride=(1, 1), padding=(0, 1))\r\n          (bn2): BatchNorm2d(16, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)\r\n          (dropout): Dropout2d(p=0)\r\n        )\r\n      )\r\n      (output_conv): ConvTranspose2d(16, 2, kernel_size=(2, 2), stride=(2, 2))\r\n    )\r\n  )\r\n)\r\n            \r\n```\r\n\r\nNothing that looks glaringly \"unsupported\"...\r\n\r\nHere is how I'm trying to load and export it.\r\n\r\n\r\n```\r\n    modelpath = ARGS_LOAD_DIR + ARGS_LOAD_MODEL\r\n    weightspath = ARGS_LOAD_DIR + ARGS_LOAD_WEIGHTS\r\n    print (\"---------- DATA PATHS: ----------\")\r\n    print (\"Model File: \" + modelpath)\r\n    print (\"Weight File: \" + weightspath)\r\n    model = Net(NUM_CLASSES)\r\n\r\n    model = torch.nn.DataParallel(model)\r\n    model = model.cuda()\r\n\r\n    model = load_my_state_dict(model, torch.load(weightspath))\r\n    print (\"Model and weights loaded..\")\r\n    print (\"---------------------------------\")\r\n\r\n    pdb.set_trace()\r\n    dummy_input = Variable(torch.randn(1, 3, 512, 640))\r\n    torch.onnx.export(model, dummy_input, 'test_model.onnx')\r\n\r\n    pdb.set_trace()\r\n```\r\n\r\nAnd here is the error I get:\r\n\r\n**COMMAND: torch.onnx.export(model, dumm_2, \"test.onnx\")**     \r\n```\r\n*** RuntimeError: tuple appears in op that does not forward tuples (VisitNode at ../torch/csrc/jit/pa\r\nsses/lower_tuples.cpp:72)                                                                            \r\nframe #0: torch::jit::LowerAllTuples(std::shared_ptr<torch::jit::Graph>&) + 0x6c (0x7f9d479284 in /ho\r\nme/nvidia/.local/lib/python3.6/site-packages/torch/lib/libtorch.so.1)                                \r\nframe #1: <unknown function> + 0x3afaf0 (0x7fafd41af0 in /home/nvidia/.local/lib/python3.6/site-packa\r\nges/torch/_C.cpython-36m-aarch64-linux-gnu.so)                                                       \r\nframe #2: <unknown function> + 0x1903f0 (0x7fafb223f0 in /home/nvidia/.local/lib/python3.6/site-packa\r\nges/torch/_C.cpython-36m-aarch64-linux-gnu.so)                                                       \r\n<omitting python frames>                                                                             \r\nframe #4: python3() [0x529658]                                                                       \r\nframe #6: python3() [0x528240]                                                                       \r\nframe #7: python3() [0x529750]\r\nframe #9: python3() [0x52915c]\r\nframe #10: python3() [0x529570]\r\nframe #12: python3() [0x52915c]\r\nframe #13: python3() [0x529570]\r\nframe #15: python3() [0x52915c]\r\nframe #17: python3() [0x4784d4]\r\nframe #20: python3() [0x52915c]\r\nframe #21: python3() [0x529570]\r\nframe #23: python3() [0x52915c]\r\nframe #25: python3() [0x526dcc]\r\nframe #27: python3() [0x529658]\r\nframe #29: python3() [0x528240]\r\nframe #30: python3() [0x529750]\r\nframe #32: python3() [0x528240]\r\nframe #33: python3() [0x529750]\r\nframe #35: python3() [0x528240]\r\nframe #36: python3() [0x529750]\r\nframe #38: python3() [0x52915c]\r\nframe #39: python3() [0x529570]\r\nframe #41: python3() [0x528240]\r\nframe #42: python3() [0x529750]\r\nframe #44: python3() [0x528240]\r\nframe #45: python3() [0x529750]\r\nframe #47: python3() [0x528240]\r\nframe #48: python3() [0x529750]\r\nframe #50: python3() [0x528240]\r\nframe #51: python3() [0x529750]\r\nframe #53: python3() [0x528240]\r\nframe #58: python3() [0x431770]\r\nframe #60: python3() [0x528240]\r\nframe #61: python3() [0x529750]\r\nframe #63: python3() [0x52915c]\r\n```\r\n\r\nAny help is appreciated!\r\n\r\n"}