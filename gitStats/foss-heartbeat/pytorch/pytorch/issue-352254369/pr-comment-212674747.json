{"url": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/212674747", "pull_request_review_id": 149361203, "id": 212674747, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIxMjY3NDc0Nw==", "diff_hunk": "@@ -121,26 +116,81 @@ struct AT_API TensorImpl : public Retainable {\n \n   // represents that numel() == 0.\n   inline bool is_empty() const {\n-    for (int64_t i = 0; i < dim(); ++i) {\n-      if (sizes()[i] == 0) {\n-        return true;\n-      }\n-    }\n-    return false;\n+    return numel() == 0;\n+  }\n+\n+  virtual void resize_dim(int64_t ndim) {\n+    // NB: This is *truly* a resize; calling code (e.g., squeeze)\n+    // assumes that old values are preserved\n+    sizes_.resize(ndim);", "path": "aten/src/ATen/TensorImpl.h", "position": 60, "original_position": 52, "commit_id": "350e8dfd283f6c22b243e00ab1c5f8bd3a9ce173", "original_commit_id": "67d21a933ccc199363ea9c1a96f0301367c991c2", "user": {"login": "cpuhrsch", "id": 1716488, "node_id": "MDQ6VXNlcjE3MTY0ODg=", "avatar_url": "https://avatars1.githubusercontent.com/u/1716488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cpuhrsch", "html_url": "https://github.com/cpuhrsch", "followers_url": "https://api.github.com/users/cpuhrsch/followers", "following_url": "https://api.github.com/users/cpuhrsch/following{/other_user}", "gists_url": "https://api.github.com/users/cpuhrsch/gists{/gist_id}", "starred_url": "https://api.github.com/users/cpuhrsch/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cpuhrsch/subscriptions", "organizations_url": "https://api.github.com/users/cpuhrsch/orgs", "repos_url": "https://api.github.com/users/cpuhrsch/repos", "events_url": "https://api.github.com/users/cpuhrsch/events{/privacy}", "received_events_url": "https://api.github.com/users/cpuhrsch/received_events", "type": "User", "site_admin": false}, "body": "It's more difficult to keep track of sizes_ if it's been referenced somewhere, then implement these things (or disable them explicitly) for subclasses. Also, we're going to devirtualize all the functions later on anyway right? And even further along, this will be merged into Tensor.", "created_at": "2018-08-24T15:55:13Z", "updated_at": "2018-11-23T15:49:56Z", "html_url": "https://github.com/pytorch/pytorch/pull/10696#discussion_r212674747", "pull_request_url": "https://api.github.com/repos/pytorch/pytorch/pulls/10696", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/212674747"}, "html": {"href": "https://github.com/pytorch/pytorch/pull/10696#discussion_r212674747"}, "pull_request": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/10696"}}, "body_html": "<p>It's more difficult to keep track of sizes_ if it's been referenced somewhere, then implement these things (or disable them explicitly) for subclasses. Also, we're going to devirtualize all the functions later on anyway right? And even further along, this will be merged into Tensor.</p>", "body_text": "It's more difficult to keep track of sizes_ if it's been referenced somewhere, then implement these things (or disable them explicitly) for subclasses. Also, we're going to devirtualize all the functions later on anyway right? And even further along, this will be merged into Tensor.", "in_reply_to_id": 212663058}