{"url": "https://api.github.com/repos/pytorch/pytorch/issues/7428", "repository_url": "https://api.github.com/repos/pytorch/pytorch", "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/7428/labels{/name}", "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/7428/comments", "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/7428/events", "html_url": "https://github.com/pytorch/pytorch/issues/7428", "id": 321662173, "node_id": "MDU6SXNzdWUzMjE2NjIxNzM=", "number": 7428, "title": "libtorch test_jit hangs if an error occurs", "user": {"login": "ezyang", "id": 13564, "node_id": "MDQ6VXNlcjEzNTY0", "avatar_url": "https://avatars0.githubusercontent.com/u/13564?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ezyang", "html_url": "https://github.com/ezyang", "followers_url": "https://api.github.com/users/ezyang/followers", "following_url": "https://api.github.com/users/ezyang/following{/other_user}", "gists_url": "https://api.github.com/users/ezyang/gists{/gist_id}", "starred_url": "https://api.github.com/users/ezyang/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ezyang/subscriptions", "organizations_url": "https://api.github.com/users/ezyang/orgs", "repos_url": "https://api.github.com/users/ezyang/repos", "events_url": "https://api.github.com/users/ezyang/events{/privacy}", "received_events_url": "https://api.github.com/users/ezyang/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-05-09T17:40:22Z", "updated_at": "2018-05-09T20:51:20Z", "closed_at": null, "author_association": "CONTRIBUTOR", "body_html": "<p>Steps to reproduce:</p>\n<ol>\n<li>Build this commit <a class=\"commit-link\" data-hovercard-type=\"commit\" data-hovercard-url=\"https://github.com/pytorch/pytorch/commit/8d10a9245e364920e7fdba3af03b3a14ff41f126/hovercard\" href=\"https://github.com/pytorch/pytorch/commit/8d10a9245e364920e7fdba3af03b3a14ff41f126\"><tt>8d10a92</tt></a> with CUDA in pytorch-linux-xenial-cuda9-cudnn7-py3-test (alternately, <code>docker pull </code>ezyang/test_jit_hang<code>; alternately, purposely introduce an unexpected exception in the </code>test_jit` testsuite)</li>\n<li>Run <code>cpp-build/libtorch/bin/test_jit</code></li>\n</ol>\n<p>Expected result: it terminates</p>\n<p>Actual result: it hang:</p>\n<pre><code>jenkins@033788db9077:~/workspace$ ../cpp-build/libtorch/bin/test_jit \n\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\ntest_jit is a Catch v2.2.1 host application.\nRun with -? for options\n\n-------------------------------------------------------------------------------\njit test CUDA\n  graph executor\n-------------------------------------------------------------------------------\n/var/lib/jenkins/workspace/torch/csrc/jit/test_jit.cpp:914\n...............................................................................\n\n/var/lib/jenkins/workspace/torch/csrc/jit/test_jit.cpp:914: FAILED:\ndue to unexpected exception with message:\n  cannot initialize CUDA without ATen_cuda library (initCUDA at /var/lib/\n  jenkins/workspace/aten/src/ATen/detail/CUDAHooksInterface.h:42)\n  frame #0: at::Context::lazyInitCUDA()::{lambda()#1}::operator()() const +\n  0x32 (0x63ef90 in ../cpp-build/libtorch/bin/test_jit)\n  frame #1: void std::_Bind_simple&lt;at::Context::lazyInitCUDA()::{lambda()#1} ()\n  &gt;::_M_invoke&lt;&gt;(std::_Index_tuple&lt;&gt;) + 0x28 (0x690b38 in ../cpp-build/\n  libtorch/bin/test_jit)\n  frame #2: std::_Bind_simple&lt;at::Context::lazyInitCUDA()::{lambda()#1} ()&gt;::\n  operator()() + 0x2c (0x6808aa in ../cpp-build/libtorch/bin/test_jit)\n  frame #3: void std::__once_call_impl&lt;std::_Bind_simple&lt;at::Context::\n  lazyInitCUDA()::{lambda()#1} ()&gt; &gt;() + 0x17 (0x66bfbc in ../cpp-build/\n  libtorch/bin/test_jit)\n  frame #4: &lt;unknown function&gt; + 0xea99 (0x7fd2b2e22a99 in /lib/x86_64-linux-\n  gnu/libpthread.so.0)\n  frame #5: ../cpp-build/libtorch/bin/test_jit() [0x5e9e9d]\n  frame #6: void std::call_once&lt;at::Context::lazyInitCUDA()::{lambda()#1}&gt;(std:\n  :once_flag&amp;, at::Context::lazyInitCUDA()::{lambda()#1}&amp;&amp;) + 0x7f (0x657c67 in\n  ../cpp-build/libtorch/bin/test_jit)\n  frame #7: at::Context::lazyInitCUDA() + 0x3d (0x63f071 in ../cpp-build/\n  libtorch/bin/test_jit)\n  frame #8: at::Context::initCUDAIfNeeded(at::Backend) + 0x21 (0x63f0bb in ../\n  cpp-build/libtorch/bin/test_jit)\n  frame #9: at::Context::getTypeOpt(at::Backend, at::ScalarType) + 0x23\n  (0x63ed79 in ../cpp-build/libtorch/bin/test_jit)\n  frame #10: at::Context::getType(at::Backend, at::ScalarType) + 0x4a (0x63ee58\n  in ../cpp-build/libtorch/bin/test_jit)\n  frame #11: ../cpp-build/libtorch/bin/test_jit() [0x60ebb6]\n  frame #12: ../cpp-build/libtorch/bin/test_jit() [0x60ebee]\n  frame #13: torch::jit::testGraphExecutor() + 0x79 (0x621eeb in ../cpp-build/\n  libtorch/bin/test_jit)\n  frame #14: ../cpp-build/libtorch/bin/test_jit() [0x6251a7]\n  frame #15: Catch::TestInvokerAsFunction::invoke() const + 0x16 (0x5fe09c in .\n  ./cpp-build/libtorch/bin/test_jit)\n  frame #16: Catch::TestCase::invoke() const + 0x29 (0x5fd755 in ../cpp-build/\n  libtorch/bin/test_jit)\n  frame #17: Catch::RunContext::invokeActiveTestCase() + 0x38 (0x5f7f1c in ../\n  cpp-build/libtorch/bin/test_jit)\n  frame #18: Catch::RunContext::runCurrentTest(std::__cxx11::basic_string&lt;char,\n  std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;&amp;, std::__cxx11::basic_string\n  &lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;&amp;) + 0x2ce (0x5f7c30 in\n  ../cpp-build/libtorch/bin/test_jit)\n  frame #19: Catch::RunContext::runTest(Catch::TestCase const&amp;) + 0x240\n  (0x5f67ba in ../cpp-build/libtorch/bin/test_jit)\n  frame #20: ../cpp-build/libtorch/bin/test_jit() [0x5f9574]\n  frame #21: Catch::Session::runInternal() + 0x13d (0x5fa931 in ../cpp-build/\n  libtorch/bin/test_jit)\n  frame #22: Catch::Session::run() + 0x57 (0x5fa6b5 in ../cpp-build/libtorch/\n  bin/test_jit)\n  frame #23: Catch::Session::run(int, char**) + 0x53 (0x5fa655 in ../cpp-build/\n  libtorch/bin/test_jit)\n  frame #24: main + 0x55 (0x60ea6b in ../cpp-build/libtorch/bin/test_jit)\n  frame #25: __libc_start_main + 0xf0 (0x7fd2b0947830 in /lib/x86_64-linux-gnu/\n  libc.so.6)\n  frame #26: _start + 0x29 (0x5e9d89 in ../cpp-build/libtorch/bin/test_jit)\n\n\n</code></pre>\n<p>when I ctrl-c it finally comes back:</p>\n<pre><code>\n^C-------------------------------------------------------------------------------\njit test CUDA\n  fusion\n-------------------------------------------------------------------------------\n/var/lib/jenkins/workspace/torch/csrc/jit/test_jit.cpp:916\n...............................................................................\n\n/var/lib/jenkins/workspace/torch/csrc/jit/test_jit.cpp:916: FAILED:\ndue to a fatal error condition:\n  SIGINT - Terminal interrupt signal\n\n===============================================================================\ntest cases:   2 |   1 passed | 1 failed\nassertions: 137 | 135 passed | 2 failed\n\n</code></pre>\n<p>CC <a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=191033\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/lantiga\">@lantiga</a> <a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=6429851\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/goldsborough\">@goldsborough</a></p>", "body_text": "Steps to reproduce:\n\nBuild this commit 8d10a92 with CUDA in pytorch-linux-xenial-cuda9-cudnn7-py3-test (alternately, docker pull ezyang/test_jit_hang; alternately, purposely introduce an unexpected exception in the test_jit` testsuite)\nRun cpp-build/libtorch/bin/test_jit\n\nExpected result: it terminates\nActual result: it hang:\njenkins@033788db9077:~/workspace$ ../cpp-build/libtorch/bin/test_jit \n\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\ntest_jit is a Catch v2.2.1 host application.\nRun with -? for options\n\n-------------------------------------------------------------------------------\njit test CUDA\n  graph executor\n-------------------------------------------------------------------------------\n/var/lib/jenkins/workspace/torch/csrc/jit/test_jit.cpp:914\n...............................................................................\n\n/var/lib/jenkins/workspace/torch/csrc/jit/test_jit.cpp:914: FAILED:\ndue to unexpected exception with message:\n  cannot initialize CUDA without ATen_cuda library (initCUDA at /var/lib/\n  jenkins/workspace/aten/src/ATen/detail/CUDAHooksInterface.h:42)\n  frame #0: at::Context::lazyInitCUDA()::{lambda()#1}::operator()() const +\n  0x32 (0x63ef90 in ../cpp-build/libtorch/bin/test_jit)\n  frame #1: void std::_Bind_simple<at::Context::lazyInitCUDA()::{lambda()#1} ()\n  >::_M_invoke<>(std::_Index_tuple<>) + 0x28 (0x690b38 in ../cpp-build/\n  libtorch/bin/test_jit)\n  frame #2: std::_Bind_simple<at::Context::lazyInitCUDA()::{lambda()#1} ()>::\n  operator()() + 0x2c (0x6808aa in ../cpp-build/libtorch/bin/test_jit)\n  frame #3: void std::__once_call_impl<std::_Bind_simple<at::Context::\n  lazyInitCUDA()::{lambda()#1} ()> >() + 0x17 (0x66bfbc in ../cpp-build/\n  libtorch/bin/test_jit)\n  frame #4: <unknown function> + 0xea99 (0x7fd2b2e22a99 in /lib/x86_64-linux-\n  gnu/libpthread.so.0)\n  frame #5: ../cpp-build/libtorch/bin/test_jit() [0x5e9e9d]\n  frame #6: void std::call_once<at::Context::lazyInitCUDA()::{lambda()#1}>(std:\n  :once_flag&, at::Context::lazyInitCUDA()::{lambda()#1}&&) + 0x7f (0x657c67 in\n  ../cpp-build/libtorch/bin/test_jit)\n  frame #7: at::Context::lazyInitCUDA() + 0x3d (0x63f071 in ../cpp-build/\n  libtorch/bin/test_jit)\n  frame #8: at::Context::initCUDAIfNeeded(at::Backend) + 0x21 (0x63f0bb in ../\n  cpp-build/libtorch/bin/test_jit)\n  frame #9: at::Context::getTypeOpt(at::Backend, at::ScalarType) + 0x23\n  (0x63ed79 in ../cpp-build/libtorch/bin/test_jit)\n  frame #10: at::Context::getType(at::Backend, at::ScalarType) + 0x4a (0x63ee58\n  in ../cpp-build/libtorch/bin/test_jit)\n  frame #11: ../cpp-build/libtorch/bin/test_jit() [0x60ebb6]\n  frame #12: ../cpp-build/libtorch/bin/test_jit() [0x60ebee]\n  frame #13: torch::jit::testGraphExecutor() + 0x79 (0x621eeb in ../cpp-build/\n  libtorch/bin/test_jit)\n  frame #14: ../cpp-build/libtorch/bin/test_jit() [0x6251a7]\n  frame #15: Catch::TestInvokerAsFunction::invoke() const + 0x16 (0x5fe09c in .\n  ./cpp-build/libtorch/bin/test_jit)\n  frame #16: Catch::TestCase::invoke() const + 0x29 (0x5fd755 in ../cpp-build/\n  libtorch/bin/test_jit)\n  frame #17: Catch::RunContext::invokeActiveTestCase() + 0x38 (0x5f7f1c in ../\n  cpp-build/libtorch/bin/test_jit)\n  frame #18: Catch::RunContext::runCurrentTest(std::__cxx11::basic_string<char,\n  std::char_traits<char>, std::allocator<char> >&, std::__cxx11::basic_string\n  <char, std::char_traits<char>, std::allocator<char> >&) + 0x2ce (0x5f7c30 in\n  ../cpp-build/libtorch/bin/test_jit)\n  frame #19: Catch::RunContext::runTest(Catch::TestCase const&) + 0x240\n  (0x5f67ba in ../cpp-build/libtorch/bin/test_jit)\n  frame #20: ../cpp-build/libtorch/bin/test_jit() [0x5f9574]\n  frame #21: Catch::Session::runInternal() + 0x13d (0x5fa931 in ../cpp-build/\n  libtorch/bin/test_jit)\n  frame #22: Catch::Session::run() + 0x57 (0x5fa6b5 in ../cpp-build/libtorch/\n  bin/test_jit)\n  frame #23: Catch::Session::run(int, char**) + 0x53 (0x5fa655 in ../cpp-build/\n  libtorch/bin/test_jit)\n  frame #24: main + 0x55 (0x60ea6b in ../cpp-build/libtorch/bin/test_jit)\n  frame #25: __libc_start_main + 0xf0 (0x7fd2b0947830 in /lib/x86_64-linux-gnu/\n  libc.so.6)\n  frame #26: _start + 0x29 (0x5e9d89 in ../cpp-build/libtorch/bin/test_jit)\n\n\n\nwhen I ctrl-c it finally comes back:\n\n^C-------------------------------------------------------------------------------\njit test CUDA\n  fusion\n-------------------------------------------------------------------------------\n/var/lib/jenkins/workspace/torch/csrc/jit/test_jit.cpp:916\n...............................................................................\n\n/var/lib/jenkins/workspace/torch/csrc/jit/test_jit.cpp:916: FAILED:\ndue to a fatal error condition:\n  SIGINT - Terminal interrupt signal\n\n===============================================================================\ntest cases:   2 |   1 passed | 1 failed\nassertions: 137 | 135 passed | 2 failed\n\n\nCC @lantiga @goldsborough", "body": "Steps to reproduce:\r\n1. Build this commit https://github.com/pytorch/pytorch/pull/7275/commits/8d10a9245e364920e7fdba3af03b3a14ff41f126 with CUDA in pytorch-linux-xenial-cuda9-cudnn7-py3-test (alternately, `docker pull `ezyang/test_jit_hang`; alternately, purposely introduce an unexpected exception in the `test_jit` testsuite)\r\n2. Run `cpp-build/libtorch/bin/test_jit`\r\n\r\nExpected result: it terminates\r\n\r\nActual result: it hang:\r\n\r\n```\r\njenkins@033788db9077:~/workspace$ ../cpp-build/libtorch/bin/test_jit \r\n\r\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\ntest_jit is a Catch v2.2.1 host application.\r\nRun with -? for options\r\n\r\n-------------------------------------------------------------------------------\r\njit test CUDA\r\n  graph executor\r\n-------------------------------------------------------------------------------\r\n/var/lib/jenkins/workspace/torch/csrc/jit/test_jit.cpp:914\r\n...............................................................................\r\n\r\n/var/lib/jenkins/workspace/torch/csrc/jit/test_jit.cpp:914: FAILED:\r\ndue to unexpected exception with message:\r\n  cannot initialize CUDA without ATen_cuda library (initCUDA at /var/lib/\r\n  jenkins/workspace/aten/src/ATen/detail/CUDAHooksInterface.h:42)\r\n  frame #0: at::Context::lazyInitCUDA()::{lambda()#1}::operator()() const +\r\n  0x32 (0x63ef90 in ../cpp-build/libtorch/bin/test_jit)\r\n  frame #1: void std::_Bind_simple<at::Context::lazyInitCUDA()::{lambda()#1} ()\r\n  >::_M_invoke<>(std::_Index_tuple<>) + 0x28 (0x690b38 in ../cpp-build/\r\n  libtorch/bin/test_jit)\r\n  frame #2: std::_Bind_simple<at::Context::lazyInitCUDA()::{lambda()#1} ()>::\r\n  operator()() + 0x2c (0x6808aa in ../cpp-build/libtorch/bin/test_jit)\r\n  frame #3: void std::__once_call_impl<std::_Bind_simple<at::Context::\r\n  lazyInitCUDA()::{lambda()#1} ()> >() + 0x17 (0x66bfbc in ../cpp-build/\r\n  libtorch/bin/test_jit)\r\n  frame #4: <unknown function> + 0xea99 (0x7fd2b2e22a99 in /lib/x86_64-linux-\r\n  gnu/libpthread.so.0)\r\n  frame #5: ../cpp-build/libtorch/bin/test_jit() [0x5e9e9d]\r\n  frame #6: void std::call_once<at::Context::lazyInitCUDA()::{lambda()#1}>(std:\r\n  :once_flag&, at::Context::lazyInitCUDA()::{lambda()#1}&&) + 0x7f (0x657c67 in\r\n  ../cpp-build/libtorch/bin/test_jit)\r\n  frame #7: at::Context::lazyInitCUDA() + 0x3d (0x63f071 in ../cpp-build/\r\n  libtorch/bin/test_jit)\r\n  frame #8: at::Context::initCUDAIfNeeded(at::Backend) + 0x21 (0x63f0bb in ../\r\n  cpp-build/libtorch/bin/test_jit)\r\n  frame #9: at::Context::getTypeOpt(at::Backend, at::ScalarType) + 0x23\r\n  (0x63ed79 in ../cpp-build/libtorch/bin/test_jit)\r\n  frame #10: at::Context::getType(at::Backend, at::ScalarType) + 0x4a (0x63ee58\r\n  in ../cpp-build/libtorch/bin/test_jit)\r\n  frame #11: ../cpp-build/libtorch/bin/test_jit() [0x60ebb6]\r\n  frame #12: ../cpp-build/libtorch/bin/test_jit() [0x60ebee]\r\n  frame #13: torch::jit::testGraphExecutor() + 0x79 (0x621eeb in ../cpp-build/\r\n  libtorch/bin/test_jit)\r\n  frame #14: ../cpp-build/libtorch/bin/test_jit() [0x6251a7]\r\n  frame #15: Catch::TestInvokerAsFunction::invoke() const + 0x16 (0x5fe09c in .\r\n  ./cpp-build/libtorch/bin/test_jit)\r\n  frame #16: Catch::TestCase::invoke() const + 0x29 (0x5fd755 in ../cpp-build/\r\n  libtorch/bin/test_jit)\r\n  frame #17: Catch::RunContext::invokeActiveTestCase() + 0x38 (0x5f7f1c in ../\r\n  cpp-build/libtorch/bin/test_jit)\r\n  frame #18: Catch::RunContext::runCurrentTest(std::__cxx11::basic_string<char,\r\n  std::char_traits<char>, std::allocator<char> >&, std::__cxx11::basic_string\r\n  <char, std::char_traits<char>, std::allocator<char> >&) + 0x2ce (0x5f7c30 in\r\n  ../cpp-build/libtorch/bin/test_jit)\r\n  frame #19: Catch::RunContext::runTest(Catch::TestCase const&) + 0x240\r\n  (0x5f67ba in ../cpp-build/libtorch/bin/test_jit)\r\n  frame #20: ../cpp-build/libtorch/bin/test_jit() [0x5f9574]\r\n  frame #21: Catch::Session::runInternal() + 0x13d (0x5fa931 in ../cpp-build/\r\n  libtorch/bin/test_jit)\r\n  frame #22: Catch::Session::run() + 0x57 (0x5fa6b5 in ../cpp-build/libtorch/\r\n  bin/test_jit)\r\n  frame #23: Catch::Session::run(int, char**) + 0x53 (0x5fa655 in ../cpp-build/\r\n  libtorch/bin/test_jit)\r\n  frame #24: main + 0x55 (0x60ea6b in ../cpp-build/libtorch/bin/test_jit)\r\n  frame #25: __libc_start_main + 0xf0 (0x7fd2b0947830 in /lib/x86_64-linux-gnu/\r\n  libc.so.6)\r\n  frame #26: _start + 0x29 (0x5e9d89 in ../cpp-build/libtorch/bin/test_jit)\r\n\r\n\r\n```\r\n\r\nwhen I ctrl-c it finally comes back:\r\n\r\n```\r\n\r\n^C-------------------------------------------------------------------------------\r\njit test CUDA\r\n  fusion\r\n-------------------------------------------------------------------------------\r\n/var/lib/jenkins/workspace/torch/csrc/jit/test_jit.cpp:916\r\n...............................................................................\r\n\r\n/var/lib/jenkins/workspace/torch/csrc/jit/test_jit.cpp:916: FAILED:\r\ndue to a fatal error condition:\r\n  SIGINT - Terminal interrupt signal\r\n\r\n===============================================================================\r\ntest cases:   2 |   1 passed | 1 failed\r\nassertions: 137 | 135 passed | 2 failed\r\n\r\n```\r\n\r\nCC @lantiga @goldsborough "}