{"url": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/174892996", "pull_request_review_id": 104333170, "id": 174892996, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE3NDg5Mjk5Ng==", "diff_hunk": "@@ -116,80 +120,33 @@ static void THPVariable_dealloc(THPVariable* self)\n   Py_TYPE(self)->tp_free((PyObject*)self);\n }\n \n-PyObject *THPVariable_pynew(PyTypeObject *type, PyObject *args, PyObject *kwds)\n+PyObject *THPVariable_pynew(PyTypeObject *type, PyObject *args, PyObject *kwargs)\n {\n   HANDLE_TH_ERRORS\n-  THPObjectPtr _data;\n-  PyObject *data = nullptr;\n-  PyObject *grad_fn = nullptr;\n-  char is_volatile = 0;\n-  char requires_grad = 0;\n-  const char* name = nullptr;\n-\n-  const char *accepted_args[] = {\"data\", \"requires_grad\", \"volatile\", \"_grad_fn\", \"name\", nullptr};\n-  if (!PyArg_ParseTupleAndKeywords(args, kwds, \"|ObbOz\", (char**)accepted_args,\n-      &data, &requires_grad, &is_volatile, &grad_fn, &name))\n-    return nullptr;\n-\n-  if (grad_fn == Py_None)\n-    grad_fn = nullptr;\n-\n-  if (is_volatile) {\n-    PyErr_WarnEx(PyExc_UserWarning, VOLATILE_WARNING, 1);\n+  auto& default_type = torch::tensor::get_default_tensor_type();\n+  if (default_type.is_cuda()) {\n+    torch::utils::cuda_lazy_init();", "path": "torch/csrc/autograd/python_variable.cpp", "position": null, "original_position": 46, "commit_id": "906c39b9979307ac94cb706a7d5ba03b2befaef4", "original_commit_id": "6e29955fe6a7f5b319d30b536982e1ad5748c0be", "user": {"login": "gchanan", "id": 3768583, "node_id": "MDQ6VXNlcjM3Njg1ODM=", "avatar_url": "https://avatars2.githubusercontent.com/u/3768583?v=4", "gravatar_id": "", "url": "https://api.github.com/users/gchanan", "html_url": "https://github.com/gchanan", "followers_url": "https://api.github.com/users/gchanan/followers", "following_url": "https://api.github.com/users/gchanan/following{/other_user}", "gists_url": "https://api.github.com/users/gchanan/gists{/gist_id}", "starred_url": "https://api.github.com/users/gchanan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/gchanan/subscriptions", "organizations_url": "https://api.github.com/users/gchanan/orgs", "repos_url": "https://api.github.com/users/gchanan/repos", "events_url": "https://api.github.com/users/gchanan/events{/privacy}", "received_events_url": "https://api.github.com/users/gchanan/received_events", "type": "User", "site_admin": false}, "body": "this shouldn't be necessary; legacy_tensor_ctor should do this for you.", "created_at": "2018-03-15T18:49:32Z", "updated_at": "2018-11-23T15:40:48Z", "html_url": "https://github.com/pytorch/pytorch/pull/5785#discussion_r174892996", "pull_request_url": "https://api.github.com/repos/pytorch/pytorch/pulls/5785", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/174892996"}, "html": {"href": "https://github.com/pytorch/pytorch/pull/5785#discussion_r174892996"}, "pull_request": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/5785"}}, "body_html": "<p>this shouldn't be necessary; legacy_tensor_ctor should do this for you.</p>", "body_text": "this shouldn't be necessary; legacy_tensor_ctor should do this for you."}