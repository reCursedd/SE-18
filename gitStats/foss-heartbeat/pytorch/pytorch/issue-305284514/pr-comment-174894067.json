{"url": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/174894067", "pull_request_review_id": 104333170, "id": 174894067, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE3NDg5NDA2Nw==", "diff_hunk": "@@ -247,6 +230,7 @@ def manager_path():\n for name in dir(_C._VariableFunctions):\n     globals()[name] = getattr(_C._VariableFunctions, name)\n \n+set_default_tensor_type(globals()['float32'])", "path": "torch/__init__.py", "position": null, "original_position": 53, "commit_id": "906c39b9979307ac94cb706a7d5ba03b2befaef4", "original_commit_id": "6e29955fe6a7f5b319d30b536982e1ad5748c0be", "user": {"login": "gchanan", "id": 3768583, "node_id": "MDQ6VXNlcjM3Njg1ODM=", "avatar_url": "https://avatars2.githubusercontent.com/u/3768583?v=4", "gravatar_id": "", "url": "https://api.github.com/users/gchanan", "html_url": "https://github.com/gchanan", "followers_url": "https://api.github.com/users/gchanan/followers", "following_url": "https://api.github.com/users/gchanan/following{/other_user}", "gists_url": "https://api.github.com/users/gchanan/gists{/gist_id}", "starred_url": "https://api.github.com/users/gchanan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/gchanan/subscriptions", "organizations_url": "https://api.github.com/users/gchanan/orgs", "repos_url": "https://api.github.com/users/gchanan/repos", "events_url": "https://api.github.com/users/gchanan/events{/privacy}", "received_events_url": "https://api.github.com/users/gchanan/received_events", "type": "User", "site_admin": false}, "body": "I found this much easier to follow when all the type creation + default type logic was in C++; can this not still be done in C++? (I know the implementation would be different because you got rid of the extra PyTypeObject).", "created_at": "2018-03-15T18:53:19Z", "updated_at": "2018-11-23T15:40:48Z", "html_url": "https://github.com/pytorch/pytorch/pull/5785#discussion_r174894067", "pull_request_url": "https://api.github.com/repos/pytorch/pytorch/pulls/5785", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/174894067"}, "html": {"href": "https://github.com/pytorch/pytorch/pull/5785#discussion_r174894067"}, "pull_request": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/5785"}}, "body_html": "<p>I found this much easier to follow when all the type creation + default type logic was in C++; can this not still be done in C++? (I know the implementation would be different because you got rid of the extra PyTypeObject).</p>", "body_text": "I found this much easier to follow when all the type creation + default type logic was in C++; can this not still be done in C++? (I know the implementation would be different because you got rid of the extra PyTypeObject)."}