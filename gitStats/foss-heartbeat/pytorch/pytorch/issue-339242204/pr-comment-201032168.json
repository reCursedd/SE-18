{"url": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/201032168", "pull_request_review_id": 135453780, "id": 201032168, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwMTAzMjE2OA==", "diff_hunk": "@@ -112,3 +113,16 @@ struct Device {\n \n std::ostream& operator<<(std::ostream& stream, at::Device::Type type);\n std::ostream& operator<<(std::ostream& stream, const at::Device& device);\n+\n+namespace std {\n+  template<> struct hash<at::Device>\n+  {\n+    int64_t operator()(const at::Device& device) const noexcept {\n+      int64_t hash_val = static_cast<int64_t>(device.index());\n+      if (device.type() == at::Device::Type::CUDA) {\n+        hash_val += 2;", "path": "aten/src/ATen/Device.h", "position": null, "original_position": 19, "commit_id": "a8e6bcc4aa2a692000146d4f755d8df02c75d919", "original_commit_id": "0f0c1010757c6e7ddbf19f7d1995ff24a20845e0", "user": {"login": "vishwakftw", "id": 23639302, "node_id": "MDQ6VXNlcjIzNjM5MzAy", "avatar_url": "https://avatars2.githubusercontent.com/u/23639302?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vishwakftw", "html_url": "https://github.com/vishwakftw", "followers_url": "https://api.github.com/users/vishwakftw/followers", "following_url": "https://api.github.com/users/vishwakftw/following{/other_user}", "gists_url": "https://api.github.com/users/vishwakftw/gists{/gist_id}", "starred_url": "https://api.github.com/users/vishwakftw/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vishwakftw/subscriptions", "organizations_url": "https://api.github.com/users/vishwakftw/orgs", "repos_url": "https://api.github.com/users/vishwakftw/repos", "events_url": "https://api.github.com/users/vishwakftw/events{/privacy}", "received_events_url": "https://api.github.com/users/vishwakftw/received_events", "type": "User", "site_admin": false}, "body": "The logic is simple: permissible values for CPU indices are -1, 0. CUDA indices can be arbitrary, starting from -1. CUDA hash values will hence be index + 2.\r\n\r\nHowever, this still causes non-determinism when CUDA device index > 254. [This](https://docs.python.org/3/c-api/long.html#c.PyLong_FromLong) could be the reason.", "created_at": "2018-07-09T14:54:09Z", "updated_at": "2018-11-23T15:46:57Z", "html_url": "https://github.com/pytorch/pytorch/pull/9246#discussion_r201032168", "pull_request_url": "https://api.github.com/repos/pytorch/pytorch/pulls/9246", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/201032168"}, "html": {"href": "https://github.com/pytorch/pytorch/pull/9246#discussion_r201032168"}, "pull_request": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/9246"}}, "body_html": "<p>The logic is simple: permissible values for CPU indices are -1, 0. CUDA indices can be arbitrary, starting from -1. CUDA hash values will hence be index + 2.</p>\n<p>However, this still causes non-determinism when CUDA device index &gt; 254. <a href=\"https://docs.python.org/3/c-api/long.html#c.PyLong_FromLong\" rel=\"nofollow\">This</a> could be the reason.</p>", "body_text": "The logic is simple: permissible values for CPU indices are -1, 0. CUDA indices can be arbitrary, starting from -1. CUDA hash values will hence be index + 2.\nHowever, this still causes non-determinism when CUDA device index > 254. This could be the reason."}