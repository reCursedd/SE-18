{"url": "https://api.github.com/repos/pytorch/pytorch/issues/comments/405286213", "html_url": "https://github.com/pytorch/pytorch/pull/9246#issuecomment-405286213", "issue_url": "https://api.github.com/repos/pytorch/pytorch/issues/9246", "id": 405286213, "node_id": "MDEyOklzc3VlQ29tbWVudDQwNTI4NjIxMw==", "user": {"login": "apaszke", "id": 4583066, "node_id": "MDQ6VXNlcjQ1ODMwNjY=", "avatar_url": "https://avatars3.githubusercontent.com/u/4583066?v=4", "gravatar_id": "", "url": "https://api.github.com/users/apaszke", "html_url": "https://github.com/apaszke", "followers_url": "https://api.github.com/users/apaszke/followers", "following_url": "https://api.github.com/users/apaszke/following{/other_user}", "gists_url": "https://api.github.com/users/apaszke/gists{/gist_id}", "starred_url": "https://api.github.com/users/apaszke/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/apaszke/subscriptions", "organizations_url": "https://api.github.com/users/apaszke/orgs", "repos_url": "https://api.github.com/users/apaszke/repos", "events_url": "https://api.github.com/users/apaszke/events{/privacy}", "received_events_url": "https://api.github.com/users/apaszke/received_events", "type": "User", "site_admin": false}, "created_at": "2018-07-16T15:27:56Z", "updated_at": "2018-07-16T15:27:56Z", "author_association": "MEMBER", "body_html": "<p><a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=23639302\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/vishwakftw\">@vishwakftw</a> yes, the current code is correct for sure, but what if for some reason we'll end up using <code>hash_combine</code> of multiple fields, and <code>std::hash&lt;int64_t&gt;(index)</code> in the future (e.g. because there will be more backends)? Who will remember to go and update the Python bindings because they have silent assumptions about the code that lives so far. The bug won't even be very apparent and will be very hard to debug.</p>", "body_text": "@vishwakftw yes, the current code is correct for sure, but what if for some reason we'll end up using hash_combine of multiple fields, and std::hash<int64_t>(index) in the future (e.g. because there will be more backends)? Who will remember to go and update the Python bindings because they have silent assumptions about the code that lives so far. The bug won't even be very apparent and will be very hard to debug.", "body": "@vishwakftw yes, the current code is correct for sure, but what if for some reason we'll end up using `hash_combine` of multiple fields, and `std::hash<int64_t>(index)` in the future (e.g. because there will be more backends)? Who will remember to go and update the Python bindings because they have silent assumptions about the code that lives so far. The bug won't even be very apparent and will be very hard to debug."}