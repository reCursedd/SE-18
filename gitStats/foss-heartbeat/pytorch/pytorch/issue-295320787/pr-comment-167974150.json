{"url": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/167974150", "pull_request_review_id": 96268694, "id": 167974150, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE2Nzk3NDE1MA==", "diff_hunk": "@@ -429,7 +535,11 @@ def tmp(self):\n         self.assertEqual(cpu_tensor, gpu_tensor, precision)\n         self.assertEqual(cpu_args, gpu_args, precision)\n         # Compare results\n-        self.assertEqual(cpu_result, gpu_result, precision)\n+        if fn == 'element_size' and t.__name__ == 'HalfTensor':\n+            # Workaround since cpu_result is float\n+            self.assertEqual(cpu_result, gpu_result * 2, precision)", "path": "test/test_cuda.py", "position": null, "original_position": 251, "commit_id": "71c458ece098633106b7f73c744f43c85bb0d318", "original_commit_id": "bd654500514263f98cde522b4d0a58c026d8d91f", "user": {"login": "ngimel", "id": 15841449, "node_id": "MDQ6VXNlcjE1ODQxNDQ5", "avatar_url": "https://avatars3.githubusercontent.com/u/15841449?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ngimel", "html_url": "https://github.com/ngimel", "followers_url": "https://api.github.com/users/ngimel/followers", "following_url": "https://api.github.com/users/ngimel/following{/other_user}", "gists_url": "https://api.github.com/users/ngimel/gists{/gist_id}", "starred_url": "https://api.github.com/users/ngimel/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ngimel/subscriptions", "organizations_url": "https://api.github.com/users/ngimel/orgs", "repos_url": "https://api.github.com/users/ngimel/repos", "events_url": "https://api.github.com/users/ngimel/events{/privacy}", "received_events_url": "https://api.github.com/users/ngimel/received_events", "type": "User", "site_admin": false}, "body": "element_size for half is 2, for float is 4. But since element_size is special-cased anyway, I would just do ```self.assertEqual(gpu_result, 2)``` for clarity. ", "created_at": "2018-02-13T19:26:27Z", "updated_at": "2018-11-23T15:39:34Z", "html_url": "https://github.com/pytorch/pytorch/pull/5122#discussion_r167974150", "pull_request_url": "https://api.github.com/repos/pytorch/pytorch/pulls/5122", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/167974150"}, "html": {"href": "https://github.com/pytorch/pytorch/pull/5122#discussion_r167974150"}, "pull_request": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/5122"}}, "body_html": "<p>element_size for half is 2, for float is 4. But since element_size is special-cased anyway, I would just do <code>self.assertEqual(gpu_result, 2)</code> for clarity.</p>", "body_text": "element_size for half is 2, for float is 4. But since element_size is special-cased anyway, I would just do self.assertEqual(gpu_result, 2) for clarity.", "in_reply_to_id": 167949696}