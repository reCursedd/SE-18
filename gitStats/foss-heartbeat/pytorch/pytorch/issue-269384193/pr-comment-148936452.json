{"url": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/148936452", "pull_request_review_id": 74260889, "id": 148936452, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE0ODkzNjQ1Mg==", "diff_hunk": "@@ -46,3 +47,27 @@ def mark(msg):\n     if _libnvToolsExt() is None:\n         raise RuntimeError('Unable to load nvToolsExt library')\n     return lib.nvtxMarkA(ctypes.c_char_p(msg.encode(\"ascii\")))\n+\n+class nvtxEventAttributes_t(ctypes.Structure):\n+    \"\"\"\n+    A C struct containing essential attributes and optional\n+    attributes about a CUDA event. \n+    \"\"\"\n+    _fields_ = [('version', ctypes.c_ushort),\n+                ('size', ctypes.c_ushort),\n+                ('colorType', ctypes.c_int),\n+                ('color', ctypes.c_uint),\n+                ('msgType', ctypes.c_int),\n+                ('msg', ctypes.c_char_p)\n+               ]\n+\n+    def __init__(self, message, color, version=DEFAULT,\n+                 size=, colorType=0xFF00FF00):\n+        \n+        # Set to fields to zero as per NVTX documentation\n+        for attr_name in [field[0] for field in _fields_]:\n+            setattr(self, attr_name, 0)\n+\n+        # Now use user-defined values for the fields\n+        super(EventAttributes, self).__init__(message, color, version,\n+                                              size, int(colorType))", "path": "torch/cuda/nvtx.py", "position": null, "original_position": 35, "commit_id": "72215cd59a01221324b67b4ab6dbdc25e077511d", "original_commit_id": "952c8041111c99b34cd095ffbc5d82301d1ee969", "user": {"login": "apaszke", "id": 4583066, "node_id": "MDQ6VXNlcjQ1ODMwNjY=", "avatar_url": "https://avatars3.githubusercontent.com/u/4583066?v=4", "gravatar_id": "", "url": "https://api.github.com/users/apaszke", "html_url": "https://github.com/apaszke", "followers_url": "https://api.github.com/users/apaszke/followers", "following_url": "https://api.github.com/users/apaszke/following{/other_user}", "gists_url": "https://api.github.com/users/apaszke/gists{/gist_id}", "starred_url": "https://api.github.com/users/apaszke/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/apaszke/subscriptions", "organizations_url": "https://api.github.com/users/apaszke/orgs", "repos_url": "https://api.github.com/users/apaszke/repos", "events_url": "https://api.github.com/users/apaszke/events{/privacy}", "received_events_url": "https://api.github.com/users/apaszke/received_events", "type": "User", "site_admin": false}, "body": "It seems that the order of arguments in here doesn't match the order of fields in the struct. I don't think that's correct. Also, since we'll be initializing all fields here, do we need to zero-fill the struct before?", "created_at": "2017-11-04T17:27:48Z", "updated_at": "2018-11-23T15:36:02Z", "html_url": "https://github.com/pytorch/pytorch/pull/3351#discussion_r148936452", "pull_request_url": "https://api.github.com/repos/pytorch/pytorch/pulls/3351", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/148936452"}, "html": {"href": "https://github.com/pytorch/pytorch/pull/3351#discussion_r148936452"}, "pull_request": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/3351"}}, "body_html": "<p>It seems that the order of arguments in here doesn't match the order of fields in the struct. I don't think that's correct. Also, since we'll be initializing all fields here, do we need to zero-fill the struct before?</p>", "body_text": "It seems that the order of arguments in here doesn't match the order of fields in the struct. I don't think that's correct. Also, since we'll be initializing all fields here, do we need to zero-fill the struct before?"}