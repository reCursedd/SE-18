{"url": "https://api.github.com/repos/pytorch/pytorch/issues/comments/440762478", "html_url": "https://github.com/pytorch/pytorch/pull/14271#issuecomment-440762478", "issue_url": "https://api.github.com/repos/pytorch/pytorch/issues/14271", "id": 440762478, "node_id": "MDEyOklzc3VlQ29tbWVudDQ0MDc2MjQ3OA==", "user": {"login": "pietern", "id": 9845, "node_id": "MDQ6VXNlcjk4NDU=", "avatar_url": "https://avatars3.githubusercontent.com/u/9845?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pietern", "html_url": "https://github.com/pietern", "followers_url": "https://api.github.com/users/pietern/followers", "following_url": "https://api.github.com/users/pietern/following{/other_user}", "gists_url": "https://api.github.com/users/pietern/gists{/gist_id}", "starred_url": "https://api.github.com/users/pietern/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pietern/subscriptions", "organizations_url": "https://api.github.com/users/pietern/orgs", "repos_url": "https://api.github.com/users/pietern/repos", "events_url": "https://api.github.com/users/pietern/events{/privacy}", "received_events_url": "https://api.github.com/users/pietern/received_events", "type": "User", "site_admin": false}, "created_at": "2018-11-21T18:13:44Z", "updated_at": "2018-11-21T18:13:44Z", "author_association": "CONTRIBUTOR", "body_html": "<p>Great! Yeah, synchronizing on all those streams can either be done with <code>cudaStreamSynchronize</code> or by recording events and waiting on all of them in the stream of the barrier NCCL communicator. Then you end up with only a single <code>cudaStreamSynchronize</code>, on the stream of the barrier, instead of N. Agree that <code>cudaDeviceSynchronize</code> is not ideal. It's a sledgehammer approach.</p>", "body_text": "Great! Yeah, synchronizing on all those streams can either be done with cudaStreamSynchronize or by recording events and waiting on all of them in the stream of the barrier NCCL communicator. Then you end up with only a single cudaStreamSynchronize, on the stream of the barrier, instead of N. Agree that cudaDeviceSynchronize is not ideal. It's a sledgehammer approach.", "body": "Great! Yeah, synchronizing on all those streams can either be done with `cudaStreamSynchronize` or by recording events and waiting on all of them in the stream of the barrier NCCL communicator. Then you end up with only a single `cudaStreamSynchronize`, on the stream of the barrier, instead of N. Agree that `cudaDeviceSynchronize` is not ideal. It's a sledgehammer approach."}