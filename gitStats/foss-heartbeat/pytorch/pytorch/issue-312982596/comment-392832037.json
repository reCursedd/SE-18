{"url": "https://api.github.com/repos/pytorch/pytorch/issues/comments/392832037", "html_url": "https://github.com/pytorch/pytorch/issues/6469#issuecomment-392832037", "issue_url": "https://api.github.com/repos/pytorch/pytorch/issues/6469", "id": 392832037, "node_id": "MDEyOklzc3VlQ29tbWVudDM5MjgzMjAzNw==", "user": {"login": "SsnL", "id": 5674597, "node_id": "MDQ6VXNlcjU2NzQ1OTc=", "avatar_url": "https://avatars2.githubusercontent.com/u/5674597?v=4", "gravatar_id": "", "url": "https://api.github.com/users/SsnL", "html_url": "https://github.com/SsnL", "followers_url": "https://api.github.com/users/SsnL/followers", "following_url": "https://api.github.com/users/SsnL/following{/other_user}", "gists_url": "https://api.github.com/users/SsnL/gists{/gist_id}", "starred_url": "https://api.github.com/users/SsnL/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/SsnL/subscriptions", "organizations_url": "https://api.github.com/users/SsnL/orgs", "repos_url": "https://api.github.com/users/SsnL/repos", "events_url": "https://api.github.com/users/SsnL/events{/privacy}", "received_events_url": "https://api.github.com/users/SsnL/received_events", "type": "User", "site_admin": false}, "created_at": "2018-05-29T15:59:53Z", "updated_at": "2018-05-29T15:59:53Z", "author_association": "CONTRIBUTOR", "body_html": "<p><a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=20787943\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/t-vi\">@t-vi</a> Thanks for the detailed explanation.</p>\n<p><a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=10772830\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/elanmart\">@elanmart</a> I agree with <a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=20787943\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/t-vi\">@t-vi</a> 's suggestion on adding optional weight matrix on <code>index_add_</code>. This would also require we output the inverse of <code>counts</code> in the <code>embedding_backward</code> functions as floating point tensors, but I think this is the cleanest solution.</p>", "body_text": "@t-vi Thanks for the detailed explanation.\n@elanmart I agree with @t-vi 's suggestion on adding optional weight matrix on index_add_. This would also require we output the inverse of counts in the embedding_backward functions as floating point tensors, but I think this is the cleanest solution.", "body": "@t-vi Thanks for the detailed explanation.\r\n\r\n@elanmart I agree with @t-vi 's suggestion on adding optional weight matrix on `index_add_`. This would also require we output the inverse of `counts` in the `embedding_backward` functions as floating point tensors, but I think this is the cleanest solution."}