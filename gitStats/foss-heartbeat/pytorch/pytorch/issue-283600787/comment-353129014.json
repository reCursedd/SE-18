{"url": "https://api.github.com/repos/pytorch/pytorch/issues/comments/353129014", "html_url": "https://github.com/pytorch/pytorch/issues/4274#issuecomment-353129014", "issue_url": "https://api.github.com/repos/pytorch/pytorch/issues/4274", "id": 353129014, "node_id": "MDEyOklzc3VlQ29tbWVudDM1MzEyOTAxNA==", "user": {"login": "gchanan", "id": 3768583, "node_id": "MDQ6VXNlcjM3Njg1ODM=", "avatar_url": "https://avatars2.githubusercontent.com/u/3768583?v=4", "gravatar_id": "", "url": "https://api.github.com/users/gchanan", "html_url": "https://github.com/gchanan", "followers_url": "https://api.github.com/users/gchanan/followers", "following_url": "https://api.github.com/users/gchanan/following{/other_user}", "gists_url": "https://api.github.com/users/gchanan/gists{/gist_id}", "starred_url": "https://api.github.com/users/gchanan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/gchanan/subscriptions", "organizations_url": "https://api.github.com/users/gchanan/orgs", "repos_url": "https://api.github.com/users/gchanan/repos", "events_url": "https://api.github.com/users/gchanan/events{/privacy}", "received_events_url": "https://api.github.com/users/gchanan/received_events", "type": "User", "site_admin": false}, "created_at": "2017-12-20T17:29:10Z", "updated_at": "2017-12-20T17:29:10Z", "author_association": "CONTRIBUTOR", "body_html": "<blockquote>\n<p>Tensors continue to default construct into undefined tensors. After this change is in place, we will revert <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load issue title\" data-id=\"271143246\" data-permission-text=\"Issue title is private\" data-url=\"https://github.com/pytorch/pytorch/issues/3482\" data-hovercard-type=\"pull_request\" data-hovercard-url=\"/pytorch/pytorch/pull/3482/hovercard\" href=\"https://github.com/pytorch/pytorch/pull/3482\">#3482</a>, restoring undefined tensors into actual null pointers which will segfault if you attempt to access them.</p>\n</blockquote>\n<p>This seems like an orthogonal concern; we may want to do this because it would allow us to make some functions non-virtual, but that doesn't have to do with how we represent zero-filled tensors in the engine.</p>", "body_text": "Tensors continue to default construct into undefined tensors. After this change is in place, we will revert #3482, restoring undefined tensors into actual null pointers which will segfault if you attempt to access them.\n\nThis seems like an orthogonal concern; we may want to do this because it would allow us to make some functions non-virtual, but that doesn't have to do with how we represent zero-filled tensors in the engine.", "body": "> Tensors continue to default construct into undefined tensors. After this change is in place, we will revert #3482, restoring undefined tensors into actual null pointers which will segfault if you attempt to access them.\r\n\r\nThis seems like an orthogonal concern; we may want to do this because it would allow us to make some functions non-virtual, but that doesn't have to do with how we represent zero-filled tensors in the engine."}