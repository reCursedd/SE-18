{"url": "https://api.github.com/repos/pytorch/pytorch/issues/4887", "repository_url": "https://api.github.com/repos/pytorch/pytorch", "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/4887/labels{/name}", "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/4887/comments", "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/4887/events", "html_url": "https://github.com/pytorch/pytorch/issues/4887", "id": 292063888, "node_id": "MDU6SXNzdWUyOTIwNjM4ODg=", "number": 4887, "title": "sparse * dense variable ops don't work", "user": {"login": "zou3519", "id": 5652049, "node_id": "MDQ6VXNlcjU2NTIwNDk=", "avatar_url": "https://avatars3.githubusercontent.com/u/5652049?v=4", "gravatar_id": "", "url": "https://api.github.com/users/zou3519", "html_url": "https://github.com/zou3519", "followers_url": "https://api.github.com/users/zou3519/followers", "following_url": "https://api.github.com/users/zou3519/following{/other_user}", "gists_url": "https://api.github.com/users/zou3519/gists{/gist_id}", "starred_url": "https://api.github.com/users/zou3519/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/zou3519/subscriptions", "organizations_url": "https://api.github.com/users/zou3519/orgs", "repos_url": "https://api.github.com/users/zou3519/repos", "events_url": "https://api.github.com/users/zou3519/events{/privacy}", "received_events_url": "https://api.github.com/users/zou3519/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2018-01-26T23:38:12Z", "updated_at": "2018-06-11T16:39:04Z", "closed_at": "2018-02-15T19:18:55Z", "author_association": "CONTRIBUTOR", "body_html": "<p>reported at: <a href=\"https://discuss.pytorch.org/t/can-we-do-sparse-x-dense-dense-on-gpu/12901/3\" rel=\"nofollow\">https://discuss.pytorch.org/t/can-we-do-sparse-x-dense-dense-on-gpu/12901/3</a></p>\n<p>ops like <code>torch.mm</code> work for sparse * dense tensors, but not variables. It looks like the code for sparse * dense ops isn't being generated at all from Declarations.cwrap. dense * sparse ops are okay.</p>\n<pre><code>import torch\nfrom torch.autograd import Variable\ni = torch.LongTensor([[0, 1, 1],\n                      [2, 0, 2]])\nv = torch.FloatTensor([3, 4, 5])\nx = Variable(torch.sparse.FloatTensor(i, v, torch.Size([2,3])))\ny = Variable(x.data.to_dense().t())\nx.mm(y)\n\nRuntimeError: Expected object of type Variable[torch.sparse.FloatTensor] but\nfound type Variable[torch.FloatTensor] for argument #1 'mat2'\n</code></pre>", "body_text": "reported at: https://discuss.pytorch.org/t/can-we-do-sparse-x-dense-dense-on-gpu/12901/3\nops like torch.mm work for sparse * dense tensors, but not variables. It looks like the code for sparse * dense ops isn't being generated at all from Declarations.cwrap. dense * sparse ops are okay.\nimport torch\nfrom torch.autograd import Variable\ni = torch.LongTensor([[0, 1, 1],\n                      [2, 0, 2]])\nv = torch.FloatTensor([3, 4, 5])\nx = Variable(torch.sparse.FloatTensor(i, v, torch.Size([2,3])))\ny = Variable(x.data.to_dense().t())\nx.mm(y)\n\nRuntimeError: Expected object of type Variable[torch.sparse.FloatTensor] but\nfound type Variable[torch.FloatTensor] for argument #1 'mat2'", "body": "reported at: https://discuss.pytorch.org/t/can-we-do-sparse-x-dense-dense-on-gpu/12901/3\r\n\r\nops like `torch.mm` work for sparse * dense tensors, but not variables. It looks like the code for sparse * dense ops isn't being generated at all from Declarations.cwrap. dense * sparse ops are okay.\r\n\r\n```\r\nimport torch\r\nfrom torch.autograd import Variable\r\ni = torch.LongTensor([[0, 1, 1],\r\n                      [2, 0, 2]])\r\nv = torch.FloatTensor([3, 4, 5])\r\nx = Variable(torch.sparse.FloatTensor(i, v, torch.Size([2,3])))\r\ny = Variable(x.data.to_dense().t())\r\nx.mm(y)\r\n\r\nRuntimeError: Expected object of type Variable[torch.sparse.FloatTensor] but\r\nfound type Variable[torch.FloatTensor] for argument #1 'mat2'\r\n```"}