{"url": "https://api.github.com/repos/pytorch/pytorch/issues/4781", "repository_url": "https://api.github.com/repos/pytorch/pytorch", "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/4781/labels{/name}", "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/4781/comments", "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/4781/events", "html_url": "https://github.com/pytorch/pytorch/pull/4781", "id": 290539096, "node_id": "MDExOlB1bGxSZXF1ZXN0MTY0MzYxMDE1", "number": 4781, "title": "Use ATen infer_size implementation rather than TH.", "user": {"login": "gchanan", "id": 3768583, "node_id": "MDQ6VXNlcjM3Njg1ODM=", "avatar_url": "https://avatars2.githubusercontent.com/u/3768583?v=4", "gravatar_id": "", "url": "https://api.github.com/users/gchanan", "html_url": "https://github.com/gchanan", "followers_url": "https://api.github.com/users/gchanan/followers", "following_url": "https://api.github.com/users/gchanan/following{/other_user}", "gists_url": "https://api.github.com/users/gchanan/gists{/gist_id}", "starred_url": "https://api.github.com/users/gchanan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/gchanan/subscriptions", "organizations_url": "https://api.github.com/users/gchanan/orgs", "repos_url": "https://api.github.com/users/gchanan/repos", "events_url": "https://api.github.com/users/gchanan/events{/privacy}", "received_events_url": "https://api.github.com/users/gchanan/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2018-01-22T16:57:16Z", "updated_at": "2018-11-23T15:38:24Z", "closed_at": "2018-01-22T20:34:32Z", "author_association": "CONTRIBUTOR", "pull_request": {"url": "https://api.github.com/repos/pytorch/pytorch/pulls/4781", "html_url": "https://github.com/pytorch/pytorch/pull/4781", "diff_url": "https://github.com/pytorch/pytorch/pull/4781.diff", "patch_url": "https://github.com/pytorch/pytorch/pull/4781.patch"}, "body_html": "<p>The only substantitive difference between the two implementations is in how empty sizes are handled; in ATen these are treated as scalars (i.e., can be expanded to anything), whereas in TH they are treated as a special case of empty tensors (i.e., can't be expanded to anything).  Therefore, this change is necessary to support scalars (0-dimensional tensors).</p>\n<p>We could also take a bool parameter for determining how we treat empty tensors but this seems unnecessary: if one tries to expand an empty tensors (as a result of an infer_size calculation), the expansion will fail.</p>", "body_text": "The only substantitive difference between the two implementations is in how empty sizes are handled; in ATen these are treated as scalars (i.e., can be expanded to anything), whereas in TH they are treated as a special case of empty tensors (i.e., can't be expanded to anything).  Therefore, this change is necessary to support scalars (0-dimensional tensors).\nWe could also take a bool parameter for determining how we treat empty tensors but this seems unnecessary: if one tries to expand an empty tensors (as a result of an infer_size calculation), the expansion will fail.", "body": "The only substantitive difference between the two implementations is in how empty sizes are handled; in ATen these are treated as scalars (i.e., can be expanded to anything), whereas in TH they are treated as a special case of empty tensors (i.e., can't be expanded to anything).  Therefore, this change is necessary to support scalars (0-dimensional tensors).\r\n\r\nWe could also take a bool parameter for determining how we treat empty tensors but this seems unnecessary: if one tries to expand an empty tensors (as a result of an infer_size calculation), the expansion will fail."}