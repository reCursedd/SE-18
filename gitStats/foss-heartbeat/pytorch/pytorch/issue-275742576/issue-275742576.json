{"url": "https://api.github.com/repos/pytorch/pytorch/issues/3810", "repository_url": "https://api.github.com/repos/pytorch/pytorch", "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/3810/labels{/name}", "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/3810/comments", "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/3810/events", "html_url": "https://github.com/pytorch/pytorch/issues/3810", "id": 275742576, "node_id": "MDU6SXNzdWUyNzU3NDI1NzY=", "number": 3810, "title": "Calling float() in modules converts integer buffers or parameters to floating point", "user": {"login": "lantiga", "id": 191033, "node_id": "MDQ6VXNlcjE5MTAzMw==", "avatar_url": "https://avatars2.githubusercontent.com/u/191033?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lantiga", "html_url": "https://github.com/lantiga", "followers_url": "https://api.github.com/users/lantiga/followers", "following_url": "https://api.github.com/users/lantiga/following{/other_user}", "gists_url": "https://api.github.com/users/lantiga/gists{/gist_id}", "starred_url": "https://api.github.com/users/lantiga/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lantiga/subscriptions", "organizations_url": "https://api.github.com/users/lantiga/orgs", "repos_url": "https://api.github.com/users/lantiga/repos", "events_url": "https://api.github.com/users/lantiga/events{/privacy}", "received_events_url": "https://api.github.com/users/lantiga/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-11-21T14:59:23Z", "updated_at": "2017-11-23T20:09:36Z", "closed_at": "2017-11-23T20:09:36Z", "author_association": "COLLABORATOR", "body_html": "<p>I'm working on a module that takes a <code>LongTensor</code> as argument, that I register as an <code>indices</code> buffer (<a href=\"https://github.com/lantiga/pytorch/blob/idx2col/torch/nn/modules/conv.py#L706\">https://github.com/lantiga/pytorch/blob/idx2col/torch/nn/modules/conv.py#L706</a>).</p>\n<p>Calling <code>float()</code> on the module casts the <code>indices</code> buffer to <code>FloatTensor</code>, which I believe is not a desired behavior in general. In particular, it breaks subsequent calls to TH* functions, which expect either <code>DoubleTensor</code> or <code>FloatTensor</code> for certain arguments but always <code>LongTensor</code> for others.</p>\n<p>IMO registered buffers/params with integer types should be immune to calls to <code>float</code> or <code>double</code>, which are really there to control the precision of floating point buffers/params.</p>\n<p>I can take care of this in case the above makes sense.</p>", "body_text": "I'm working on a module that takes a LongTensor as argument, that I register as an indices buffer (https://github.com/lantiga/pytorch/blob/idx2col/torch/nn/modules/conv.py#L706).\nCalling float() on the module casts the indices buffer to FloatTensor, which I believe is not a desired behavior in general. In particular, it breaks subsequent calls to TH* functions, which expect either DoubleTensor or FloatTensor for certain arguments but always LongTensor for others.\nIMO registered buffers/params with integer types should be immune to calls to float or double, which are really there to control the precision of floating point buffers/params.\nI can take care of this in case the above makes sense.", "body": "I'm working on a module that takes a `LongTensor` as argument, that I register as an `indices` buffer (https://github.com/lantiga/pytorch/blob/idx2col/torch/nn/modules/conv.py#L706).\r\n\r\nCalling `float()` on the module casts the `indices` buffer to `FloatTensor`, which I believe is not a desired behavior in general. In particular, it breaks subsequent calls to TH* functions, which expect either `DoubleTensor` or `FloatTensor` for certain arguments but always `LongTensor` for others.\r\n\r\nIMO registered buffers/params with integer types should be immune to calls to `float` or `double`, which are really there to control the precision of floating point buffers/params.\r\n\r\nI can take care of this in case the above makes sense."}