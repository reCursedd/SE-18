{"url": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/220388044", "pull_request_review_id": 158785379, "id": 220388044, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIyMDM4ODA0NA==", "diff_hunk": "@@ -1113,21 +1113,21 @@ struct DropoutState {\n   }\n };\n \n-DropoutState& get_dropout_state(const Type& tp, double dropout_p, bool train) {\n+DropoutState& get_dropout_state(double dropout_p, bool train, TensorOptions options) {\n   // Each state is slightly over 2MB and initialized lazily, so it's fine to cache them.\n   static std::vector<DropoutState> ten_dropout_state_cache { static_cast<size_t>(cuda::getNumGPUs()) };\n   static std::vector<DropoutState> var_dropout_state_cache { static_cast<size_t>(cuda::getNumGPUs()) };\n   static std::mutex state_cache_mut;\n \n   int device = cuda::current_device();\n   std::unique_lock<std::mutex> lock {state_cache_mut};\n-  auto& state = tp.is_variable() ? var_dropout_state_cache.at(device)\n-                                 : ten_dropout_state_cache.at(device);\n+  auto& state = options.is_variable() ? var_dropout_state_cache.at(device)\n+                                      : ten_dropout_state_cache.at(device);\n   if (train && dropout_p > 0 && !state.buffer.defined()) {\n     std::unique_lock<std::mutex> lock {state.mutex};\n     int64_t seed = at::empty({}, at::kLong).random_().item<int64_t>();\n     state.buffer = at::_cudnn_init_dropout_state(\n-      tp.toScalarType(at::kByte), dropout_p, train, seed);\n+      dropout_p, train, seed, options.dtype(at::kByte));", "path": "aten/src/ATen/native/cudnn/RNN.cpp", "position": 62, "original_position": 54, "commit_id": "cc5919dbf83205bf7b3b8031caf41aa3f16e5d9c", "original_commit_id": "4d95dc12ad5d7702da8563d7577ffe07e134c22a", "user": {"login": "ezyang", "id": 13564, "node_id": "MDQ6VXNlcjEzNTY0", "avatar_url": "https://avatars0.githubusercontent.com/u/13564?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ezyang", "html_url": "https://github.com/ezyang", "followers_url": "https://api.github.com/users/ezyang/followers", "following_url": "https://api.github.com/users/ezyang/following{/other_user}", "gists_url": "https://api.github.com/users/ezyang/gists{/gist_id}", "starred_url": "https://api.github.com/users/ezyang/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ezyang/subscriptions", "organizations_url": "https://api.github.com/users/ezyang/orgs", "repos_url": "https://api.github.com/users/ezyang/repos", "events_url": "https://api.github.com/users/ezyang/events{/privacy}", "received_events_url": "https://api.github.com/users/ezyang/received_events", "type": "User", "site_admin": false}, "body": "Eww, mutation.", "created_at": "2018-09-25T23:36:00Z", "updated_at": "2018-11-23T15:51:59Z", "html_url": "https://github.com/pytorch/pytorch/pull/12071#discussion_r220388044", "pull_request_url": "https://api.github.com/repos/pytorch/pytorch/pulls/12071", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/220388044"}, "html": {"href": "https://github.com/pytorch/pytorch/pull/12071#discussion_r220388044"}, "pull_request": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/12071"}}, "body_html": "<p>Eww, mutation.</p>", "body_text": "Eww, mutation."}