{"url": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/129756277", "pull_request_review_id": 52560331, "id": 129756277, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEyOTc1NjI3Nw==", "diff_hunk": "@@ -109,48 +110,44 @@ auto ConvForward::output_size(Tensor& input, Tensor& weight) -> std::vector<long\n   return output_size;\n }\n \n-static auto view4d(const Tensor& tensor) -> std::unique_ptr<Tensor> {\n-  if (tensor.nDim() != 3) throw std::runtime_error(\"expected 3D tensor\");\n-  auto result = tensor.newTensor();\n-  result->unsqueeze(tensor, 2);\n-  return result;\n+static auto view4d(const at::Tensor& tensor) -> at::Tensor {\n+  if (tensor.ndimension() != 3) throw std::runtime_error(\"expected 3D tensor\");\n+  return tensor.unsqueeze(2);\n }\n \n-static auto view3d(const Tensor& tensor) -> std::unique_ptr<Tensor> {\n-  if (tensor.nDim() != 4) throw std::runtime_error(\"expected 4D tensor\");\n-  auto result = tensor.newTensor();\n-  result->squeeze(tensor, 2);\n-  return result;\n+static auto view3d(const at::Tensor& tensor) -> at::Tensor {\n+  if (tensor.ndimension() != 4) throw std::runtime_error(\"expected 4D tensor\");\n+  return tensor.squeeze(2);\n }\n \n-static std::unique_ptr<Tensor> subtensor(Tensor* tensor, int dim, int groups, int g) {\n-  if (!tensor) {\n-    return nullptr;\n+static at::Tensor subtensor(at::Tensor& tensor, int dim, int groups, int g) {\n+  if (!tensor.defined()) {\n+    at::Tensor empty;\n+    return empty;", "path": "torch/csrc/autograd/functions/convolution.cpp", "position": null, "original_position": 95, "commit_id": "3e4ce988241e01c50eab59c73f4faf030c749470", "original_commit_id": "f919a2177922fd13b457a738d1bc91f6cb53474a", "user": {"login": "zdevito", "id": 370202, "node_id": "MDQ6VXNlcjM3MDIwMg==", "avatar_url": "https://avatars0.githubusercontent.com/u/370202?v=4", "gravatar_id": "", "url": "https://api.github.com/users/zdevito", "html_url": "https://github.com/zdevito", "followers_url": "https://api.github.com/users/zdevito/followers", "following_url": "https://api.github.com/users/zdevito/following{/other_user}", "gists_url": "https://api.github.com/users/zdevito/gists{/gist_id}", "starred_url": "https://api.github.com/users/zdevito/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/zdevito/subscriptions", "organizations_url": "https://api.github.com/users/zdevito/orgs", "repos_url": "https://api.github.com/users/zdevito/repos", "events_url": "https://api.github.com/users/zdevito/events{/privacy}", "received_events_url": "https://api.github.com/users/zdevito/received_events", "type": "User", "site_admin": false}, "body": "`at::Tensor()` should work, we can also define `const Tensor kUndefinedTensor = Tensor()` somewhere in ATen to make the intent clearer.", "created_at": "2017-07-27T05:29:41Z", "updated_at": "2018-11-23T15:34:16Z", "html_url": "https://github.com/pytorch/pytorch/pull/2170#discussion_r129756277", "pull_request_url": "https://api.github.com/repos/pytorch/pytorch/pulls/2170", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/129756277"}, "html": {"href": "https://github.com/pytorch/pytorch/pull/2170#discussion_r129756277"}, "pull_request": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/2170"}}, "body_html": "<p><code>at::Tensor()</code> should work, we can also define <code>const Tensor kUndefinedTensor = Tensor()</code> somewhere in ATen to make the intent clearer.</p>", "body_text": "at::Tensor() should work, we can also define const Tensor kUndefinedTensor = Tensor() somewhere in ATen to make the intent clearer.", "in_reply_to_id": 129697134}