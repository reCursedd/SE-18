{"url": "https://api.github.com/repos/pytorch/pytorch/issues/comments/358286140", "html_url": "https://github.com/pytorch/pytorch/issues/679#issuecomment-358286140", "issue_url": "https://api.github.com/repos/pytorch/pytorch/issues/679", "id": 358286140, "node_id": "MDEyOklzc3VlQ29tbWVudDM1ODI4NjE0MA==", "user": {"login": "YannDubs", "id": 24327668, "node_id": "MDQ6VXNlcjI0MzI3NjY4", "avatar_url": "https://avatars3.githubusercontent.com/u/24327668?v=4", "gravatar_id": "", "url": "https://api.github.com/users/YannDubs", "html_url": "https://github.com/YannDubs", "followers_url": "https://api.github.com/users/YannDubs/followers", "following_url": "https://api.github.com/users/YannDubs/following{/other_user}", "gists_url": "https://api.github.com/users/YannDubs/gists{/gist_id}", "starred_url": "https://api.github.com/users/YannDubs/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/YannDubs/subscriptions", "organizations_url": "https://api.github.com/users/YannDubs/orgs", "repos_url": "https://api.github.com/users/YannDubs/repos", "events_url": "https://api.github.com/users/YannDubs/events{/privacy}", "received_events_url": "https://api.github.com/users/YannDubs/received_events", "type": "User", "site_admin": false}, "created_at": "2018-01-17T12:11:34Z", "updated_at": "2018-01-17T12:11:34Z", "author_association": "NONE", "body_html": "<p><a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=4583066\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/apaszke\">@apaszke</a> although I do agree in most contexts, there can be some issues with <code>.cuda()</code>. Indeed by not fixing variables as parameters you have to override the <code>cuda</code> and <code>cpu</code> methods. I can't say that it's complicated, but I think having constant parameters could help people not think about this.</p>\n<p>I encountered this in a very unusual type of network but others might too :)</p>", "body_text": "@apaszke although I do agree in most contexts, there can be some issues with .cuda(). Indeed by not fixing variables as parameters you have to override the cuda and cpu methods. I can't say that it's complicated, but I think having constant parameters could help people not think about this.\nI encountered this in a very unusual type of network but others might too :)", "body": "@apaszke although I do agree in most contexts, there can be some issues with `.cuda()`. Indeed by not fixing variables as parameters you have to override the `cuda` and `cpu` methods. I can't say that it's complicated, but I think having constant parameters could help people not think about this.\r\n\r\nI encountered this in a very unusual type of network but others might too :)"}