{"url": "https://api.github.com/repos/pytorch/pytorch/issues/comments/413081817", "html_url": "https://github.com/pytorch/pytorch/pull/10429#issuecomment-413081817", "issue_url": "https://api.github.com/repos/pytorch/pytorch/issues/10429", "id": 413081817, "node_id": "MDEyOklzc3VlQ29tbWVudDQxMzA4MTgxNw==", "user": {"login": "SsnL", "id": 5674597, "node_id": "MDQ6VXNlcjU2NzQ1OTc=", "avatar_url": "https://avatars2.githubusercontent.com/u/5674597?v=4", "gravatar_id": "", "url": "https://api.github.com/users/SsnL", "html_url": "https://github.com/SsnL", "followers_url": "https://api.github.com/users/SsnL/followers", "following_url": "https://api.github.com/users/SsnL/following{/other_user}", "gists_url": "https://api.github.com/users/SsnL/gists{/gist_id}", "starred_url": "https://api.github.com/users/SsnL/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/SsnL/subscriptions", "organizations_url": "https://api.github.com/users/SsnL/orgs", "repos_url": "https://api.github.com/users/SsnL/repos", "events_url": "https://api.github.com/users/SsnL/events{/privacy}", "received_events_url": "https://api.github.com/users/SsnL/received_events", "type": "User", "site_admin": false}, "created_at": "2018-08-15T03:14:46Z", "updated_at": "2018-08-15T03:14:46Z", "author_association": "CONTRIBUTOR", "body_html": "<p><a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=2780434\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/jma127\">@jma127</a> Sure. That makes sense. But I'm still not quite convinced that we should have this. It just doesn't feel a good solution to the problem you had with fp16, and I can't see much use other than that.</p>\n<p>Alternatively, how about exposing methods to iterate through immediate parameters &amp; buffers, e.g., via a flag on existing methods? Then users can just use <code>apply</code> and it will be much more general.</p>", "body_text": "@jma127 Sure. That makes sense. But I'm still not quite convinced that we should have this. It just doesn't feel a good solution to the problem you had with fp16, and I can't see much use other than that.\nAlternatively, how about exposing methods to iterate through immediate parameters & buffers, e.g., via a flag on existing methods? Then users can just use apply and it will be much more general.", "body": "@jma127 Sure. That makes sense. But I'm still not quite convinced that we should have this. It just doesn't feel a good solution to the problem you had with fp16, and I can't see much use other than that.\r\n\r\nAlternatively, how about exposing methods to iterate through immediate parameters & buffers, e.g., via a flag on existing methods? Then users can just use `apply` and it will be much more general."}