{"url": "https://api.github.com/repos/pytorch/pytorch/issues/comments/305651079", "html_url": "https://github.com/pytorch/pytorch/issues/1576#issuecomment-305651079", "issue_url": "https://api.github.com/repos/pytorch/pytorch/issues/1576", "id": 305651079, "node_id": "MDEyOklzc3VlQ29tbWVudDMwNTY1MTA3OQ==", "user": {"login": "alykhantejani", "id": 687194, "node_id": "MDQ6VXNlcjY4NzE5NA==", "avatar_url": "https://avatars1.githubusercontent.com/u/687194?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alykhantejani", "html_url": "https://github.com/alykhantejani", "followers_url": "https://api.github.com/users/alykhantejani/followers", "following_url": "https://api.github.com/users/alykhantejani/following{/other_user}", "gists_url": "https://api.github.com/users/alykhantejani/gists{/gist_id}", "starred_url": "https://api.github.com/users/alykhantejani/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alykhantejani/subscriptions", "organizations_url": "https://api.github.com/users/alykhantejani/orgs", "repos_url": "https://api.github.com/users/alykhantejani/repos", "events_url": "https://api.github.com/users/alykhantejani/events{/privacy}", "received_events_url": "https://api.github.com/users/alykhantejani/received_events", "type": "User", "site_admin": false}, "created_at": "2017-06-01T23:49:31Z", "updated_at": "2017-06-01T23:49:31Z", "author_association": "CONTRIBUTOR", "body_html": "<p>This error message is thrown by the <code>TupleParser</code>, at which point it doesn't know which param it's parsing but just the index of the param (in the args list).</p>\n<p>As the tuple parser is only used for parsing params to <code>autograd.functions.*</code> we could extend the <code>TupleParser::parse</code> functions to also take in the param name so that it can pass it through to <code>TupleParser::invalid_type</code> to throw an error which is more meaningful?</p>\n<p>Or we could just add these type checks at the python level?</p>\n<p><a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=4583066\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/apaszke\">@apaszke</a> <a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=1310570\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/soumith\">@soumith</a> I'm happy to send a PR, if you let me know which method you prefer/an alternative.</p>", "body_text": "This error message is thrown by the TupleParser, at which point it doesn't know which param it's parsing but just the index of the param (in the args list).\nAs the tuple parser is only used for parsing params to autograd.functions.* we could extend the TupleParser::parse functions to also take in the param name so that it can pass it through to TupleParser::invalid_type to throw an error which is more meaningful?\nOr we could just add these type checks at the python level?\n@apaszke @soumith I'm happy to send a PR, if you let me know which method you prefer/an alternative.", "body": "This error message is thrown by the `TupleParser`, at which point it doesn't know which param it's parsing but just the index of the param (in the args list). \r\n\r\nAs the tuple parser is only used for parsing params to `autograd.functions.*` we could extend the `TupleParser::parse` functions to also take in the param name so that it can pass it through to `TupleParser::invalid_type` to throw an error which is more meaningful?\r\n\r\nOr we could just add these type checks at the python level?\r\n\r\n@apaszke @soumith I'm happy to send a PR, if you let me know which method you prefer/an alternative.\r\n"}