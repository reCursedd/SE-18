{"url": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/233194683", "pull_request_review_id": 174551596, "id": 233194683, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIzMzE5NDY4Mw==", "diff_hunk": "@@ -2981,6 +2981,13 @@ def test_arange(self):\n         self.assertEqual(r1, r2, 0)\n         self.assertEqual(r2, r3[:-1], 0)\n \n+        self.assertRaises(RuntimeError, lambda: torch.arange(0, float('nan')))\n+        self.assertRaises(RuntimeError, lambda: torch.arange(0, float('-inf')))\n+        self.assertRaises(RuntimeError, lambda: torch.arange(0, float('inf')))", "path": "test/test_torch.py", "position": null, "original_position": 6, "commit_id": "aaf6e3620782c271a6572650664a46d48a3d8b59", "original_commit_id": "ba6e5a90540158e0bffadca8ba325bc10423bd64", "user": {"login": "zou3519", "id": 5652049, "node_id": "MDQ6VXNlcjU2NTIwNDk=", "avatar_url": "https://avatars3.githubusercontent.com/u/5652049?v=4", "gravatar_id": "", "url": "https://api.github.com/users/zou3519", "html_url": "https://github.com/zou3519", "followers_url": "https://api.github.com/users/zou3519/followers", "following_url": "https://api.github.com/users/zou3519/following{/other_user}", "gists_url": "https://api.github.com/users/zou3519/gists{/gist_id}", "starred_url": "https://api.github.com/users/zou3519/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/zou3519/subscriptions", "organizations_url": "https://api.github.com/users/zou3519/orgs", "repos_url": "https://api.github.com/users/zou3519/repos", "events_url": "https://api.github.com/users/zou3519/events{/privacy}", "received_events_url": "https://api.github.com/users/zou3519/received_events", "type": "User", "site_admin": false}, "body": "nit: self.assertRaisesRegex (with a regex on unsupported range) would probably be better. I can imagine a (wrong) scenario where we attempt to allocate memory for float('inf') and instead report OOM instead of \"unsupported range\".", "created_at": "2018-11-13T19:40:49Z", "updated_at": "2018-11-23T15:54:46Z", "html_url": "https://github.com/pytorch/pytorch/pull/13915#discussion_r233194683", "pull_request_url": "https://api.github.com/repos/pytorch/pytorch/pulls/13915", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/233194683"}, "html": {"href": "https://github.com/pytorch/pytorch/pull/13915#discussion_r233194683"}, "pull_request": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/13915"}}, "body_html": "<p>nit: self.assertRaisesRegex (with a regex on unsupported range) would probably be better. I can imagine a (wrong) scenario where we attempt to allocate memory for float('inf') and instead report OOM instead of \"unsupported range\".</p>", "body_text": "nit: self.assertRaisesRegex (with a regex on unsupported range) would probably be better. I can imagine a (wrong) scenario where we attempt to allocate memory for float('inf') and instead report OOM instead of \"unsupported range\"."}