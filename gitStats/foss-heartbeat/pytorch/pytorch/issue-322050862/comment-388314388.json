{"url": "https://api.github.com/repos/pytorch/pytorch/issues/comments/388314388", "html_url": "https://github.com/pytorch/pytorch/pull/7479#issuecomment-388314388", "issue_url": "https://api.github.com/repos/pytorch/pytorch/issues/7479", "id": 388314388, "node_id": "MDEyOklzc3VlQ29tbWVudDM4ODMxNDM4OA==", "user": {"login": "apaszke", "id": 4583066, "node_id": "MDQ6VXNlcjQ1ODMwNjY=", "avatar_url": "https://avatars3.githubusercontent.com/u/4583066?v=4", "gravatar_id": "", "url": "https://api.github.com/users/apaszke", "html_url": "https://github.com/apaszke", "followers_url": "https://api.github.com/users/apaszke/followers", "following_url": "https://api.github.com/users/apaszke/following{/other_user}", "gists_url": "https://api.github.com/users/apaszke/gists{/gist_id}", "starred_url": "https://api.github.com/users/apaszke/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/apaszke/subscriptions", "organizations_url": "https://api.github.com/users/apaszke/orgs", "repos_url": "https://api.github.com/users/apaszke/repos", "events_url": "https://api.github.com/users/apaszke/events{/privacy}", "received_events_url": "https://api.github.com/users/apaszke/received_events", "type": "User", "site_admin": false}, "created_at": "2018-05-11T09:37:42Z", "updated_at": "2018-05-11T09:37:42Z", "author_association": "MEMBER", "body_html": "<p>I think this patch leads to a pretty important question: Should our sparse library always treat the number of dense and sparse dimensions as an implementation detail, and allow automatic conversions between the types, or should they have hard checks for mismatches (so they effectively become part of the tensor type in a way). I'd slightly lean towards the first option, but it would be good if we pursued it not only in the all zero case, but in all situations (not necessary as this PR, but we should plan that). Otherwise, it will be really inconsistent with the rest of the library.</p>", "body_text": "I think this patch leads to a pretty important question: Should our sparse library always treat the number of dense and sparse dimensions as an implementation detail, and allow automatic conversions between the types, or should they have hard checks for mismatches (so they effectively become part of the tensor type in a way). I'd slightly lean towards the first option, but it would be good if we pursued it not only in the all zero case, but in all situations (not necessary as this PR, but we should plan that). Otherwise, it will be really inconsistent with the rest of the library.", "body": "I think this patch leads to a pretty important question: Should our sparse library always treat the number of dense and sparse dimensions as an implementation detail, and allow automatic conversions between the types, or should they have hard checks for mismatches (so they effectively become part of the tensor type in a way). I'd slightly lean towards the first option, but it would be good if we pursued it not only in the all zero case, but in all situations (not necessary as this PR, but we should plan that). Otherwise, it will be really inconsistent with the rest of the library."}