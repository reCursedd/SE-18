{"url": "https://api.github.com/repos/pytorch/pytorch/issues/7479", "repository_url": "https://api.github.com/repos/pytorch/pytorch", "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/7479/labels{/name}", "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/7479/comments", "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/7479/events", "html_url": "https://github.com/pytorch/pytorch/pull/7479", "id": 322050862, "node_id": "MDExOlB1bGxSZXF1ZXN0MTg3MjgxOTQz", "number": 7479, "title": "Better support for adding zero-filled sparse tensors", "user": {"login": "zou3519", "id": 5652049, "node_id": "MDQ6VXNlcjU2NTIwNDk=", "avatar_url": "https://avatars3.githubusercontent.com/u/5652049?v=4", "gravatar_id": "", "url": "https://api.github.com/users/zou3519", "html_url": "https://github.com/zou3519", "followers_url": "https://api.github.com/users/zou3519/followers", "following_url": "https://api.github.com/users/zou3519/following{/other_user}", "gists_url": "https://api.github.com/users/zou3519/gists{/gist_id}", "starred_url": "https://api.github.com/users/zou3519/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/zou3519/subscriptions", "organizations_url": "https://api.github.com/users/zou3519/orgs", "repos_url": "https://api.github.com/users/zou3519/repos", "events_url": "https://api.github.com/users/zou3519/events{/privacy}", "received_events_url": "https://api.github.com/users/zou3519/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2018-05-10T19:19:22Z", "updated_at": "2018-05-18T17:50:00Z", "closed_at": "2018-05-18T14:29:28Z", "author_association": "CONTRIBUTOR", "pull_request": {"url": "https://api.github.com/repos/pytorch/pytorch/pulls/7479", "html_url": "https://github.com/pytorch/pytorch/pull/7479", "diff_url": "https://github.com/pytorch/pytorch/pull/7479.diff", "patch_url": "https://github.com/pytorch/pytorch/pull/7479.patch"}, "body_html": "<p>Right now, if we add a zero-filled sparse tensor with another sparse<br>\ntensor, both tensors must have the same \"density\" (dimI, dimV) and size<br>\n(tensor.size()) for them to be added successfully. This relaxes that<br>\nconstraint so that if both tensors have the same tensor.size() and at<br>\nleast one is zero-filled, they can be added successfully.</p>\n<p>Before:</p>\n<pre><code>i = torch.LongTensor([[0, 1, 1], [2, 0, 2]])\nv = torch.FloatTensor([3, 4, 5]).unsqueeze(1)\nsparse_mat = torch.sparse.FloatTensor(i, v, torch.Size([2,3,1]))\nzeros = torch.zeros(sparse_mat.size(), layout=torch.sparse_coo)\nsparse_mat + zeros\n\nRuntimeError: cadd operands have\nincompatible sizes or dimension types\nat\n../src/THS/generic/THSTensorMath.c:126\n</code></pre>\n<p>After: no error.</p>", "body_text": "Right now, if we add a zero-filled sparse tensor with another sparse\ntensor, both tensors must have the same \"density\" (dimI, dimV) and size\n(tensor.size()) for them to be added successfully. This relaxes that\nconstraint so that if both tensors have the same tensor.size() and at\nleast one is zero-filled, they can be added successfully.\nBefore:\ni = torch.LongTensor([[0, 1, 1], [2, 0, 2]])\nv = torch.FloatTensor([3, 4, 5]).unsqueeze(1)\nsparse_mat = torch.sparse.FloatTensor(i, v, torch.Size([2,3,1]))\nzeros = torch.zeros(sparse_mat.size(), layout=torch.sparse_coo)\nsparse_mat + zeros\n\nRuntimeError: cadd operands have\nincompatible sizes or dimension types\nat\n../src/THS/generic/THSTensorMath.c:126\n\nAfter: no error.", "body": "Right now, if we add a zero-filled sparse tensor with another sparse\r\ntensor, both tensors must have the same \"density\" (dimI, dimV) and size\r\n(tensor.size()) for them to be added successfully. This relaxes that\r\nconstraint so that if both tensors have the same tensor.size() and at\r\nleast one is zero-filled, they can be added successfully.\r\n\r\nBefore:\r\n```\r\ni = torch.LongTensor([[0, 1, 1], [2, 0, 2]])\r\nv = torch.FloatTensor([3, 4, 5]).unsqueeze(1)\r\nsparse_mat = torch.sparse.FloatTensor(i, v, torch.Size([2,3,1]))\r\nzeros = torch.zeros(sparse_mat.size(), layout=torch.sparse_coo)\r\nsparse_mat + zeros\r\n\r\nRuntimeError: cadd operands have\r\nincompatible sizes or dimension types\r\nat\r\n../src/THS/generic/THSTensorMath.c:126\r\n```\r\n\r\nAfter: no error.\r\n\r\n"}