{"url": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/189593571", "pull_request_review_id": 121802154, "id": 189593571, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4OTU5MzU3MQ==", "diff_hunk": "@@ -30,4 +33,57 @@ Tensor & rrelu_(Tensor & self, Scalar lower, Scalar upper, bool training, Genera\n   return at::rrelu_with_noise_(self, self.type().tensor(), lower, upper, training, generator);\n }\n \n+Tensor hard_shrink_cpu(const Tensor & self, Scalar lambda) {\n+  auto scalarType = self.type().scalarType();\n+  if (scalarType != kDouble\n+      && scalarType != kFloat) {\n+        std::stringstream ss;\n+        ss << \"hardshrink only accepts types \"\n+          << \"(Double, Float), \"\n+          << \"tensor has invalid type = \"\n+          << scalarType;\n+        throw std::runtime_error(ss.str());\n+  }\n+\n+  auto lambda_t = at::zeros_like(self).fill_(lambda);\n+  auto zero_t = at::zeros_like(self);\n+  auto out_t = self.clone();\n+  AT_DISPATCH_FLOATING_TYPES(self.type(), \"hard_shrink_cpu\", [&] {\n+    at::CPU_tensor_apply3<scalar_t, scalar_t, scalar_t>(\n+        out_t,\n+        lambda_t,\n+        zero_t,\n+        [](scalar_t& out_t_val,\n+           const scalar_t& lambda_t_val,\n+           const scalar_t& zero_t_val) {\n+             if (out_t_val >= -lambda_t_val && out_t_val <= lambda_t_val) {\n+               out_t_val = zero_t_val;", "path": "aten/src/ATen/native/Activation.cpp", "position": 37, "original_position": 37, "commit_id": "c01552f028d1edaee4654e2db6611c6512328807", "original_commit_id": "c01552f028d1edaee4654e2db6611c6512328807", "user": {"login": "zou3519", "id": 5652049, "node_id": "MDQ6VXNlcjU2NTIwNDk=", "avatar_url": "https://avatars3.githubusercontent.com/u/5652049?v=4", "gravatar_id": "", "url": "https://api.github.com/users/zou3519", "html_url": "https://github.com/zou3519", "followers_url": "https://api.github.com/users/zou3519/followers", "following_url": "https://api.github.com/users/zou3519/following{/other_user}", "gists_url": "https://api.github.com/users/zou3519/gists{/gist_id}", "starred_url": "https://api.github.com/users/zou3519/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/zou3519/subscriptions", "organizations_url": "https://api.github.com/users/zou3519/orgs", "repos_url": "https://api.github.com/users/zou3519/repos", "events_url": "https://api.github.com/users/zou3519/events{/privacy}", "received_events_url": "https://api.github.com/users/zou3519/received_events", "type": "User", "site_admin": false}, "body": "Could you do this with a CPU_tensor_apply2?\r\ni.e. `out_t_val = 0` and drop the `zero_t` variable", "created_at": "2018-05-21T13:46:38Z", "updated_at": "2018-11-23T15:44:23Z", "html_url": "https://github.com/pytorch/pytorch/pull/7695#discussion_r189593571", "pull_request_url": "https://api.github.com/repos/pytorch/pytorch/pulls/7695", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/189593571"}, "html": {"href": "https://github.com/pytorch/pytorch/pull/7695#discussion_r189593571"}, "pull_request": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/7695"}}, "body_html": "<p>Could you do this with a CPU_tensor_apply2?<br>\ni.e. <code>out_t_val = 0</code> and drop the <code>zero_t</code> variable</p>", "body_text": "Could you do this with a CPU_tensor_apply2?\ni.e. out_t_val = 0 and drop the zero_t variable"}