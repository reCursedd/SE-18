{"url": "https://api.github.com/repos/pytorch/pytorch/issues/comments/419321647", "html_url": "https://github.com/pytorch/pytorch/issues/7129#issuecomment-419321647", "issue_url": "https://api.github.com/repos/pytorch/pytorch/issues/7129", "id": 419321647, "node_id": "MDEyOklzc3VlQ29tbWVudDQxOTMyMTY0Nw==", "user": {"login": "xyang35", "id": 12552711, "node_id": "MDQ6VXNlcjEyNTUyNzEx", "avatar_url": "https://avatars3.githubusercontent.com/u/12552711?v=4", "gravatar_id": "", "url": "https://api.github.com/users/xyang35", "html_url": "https://github.com/xyang35", "followers_url": "https://api.github.com/users/xyang35/followers", "following_url": "https://api.github.com/users/xyang35/following{/other_user}", "gists_url": "https://api.github.com/users/xyang35/gists{/gist_id}", "starred_url": "https://api.github.com/users/xyang35/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/xyang35/subscriptions", "organizations_url": "https://api.github.com/users/xyang35/orgs", "repos_url": "https://api.github.com/users/xyang35/repos", "events_url": "https://api.github.com/users/xyang35/events{/privacy}", "received_events_url": "https://api.github.com/users/xyang35/received_events", "type": "User", "site_admin": false}, "created_at": "2018-09-07T04:48:50Z", "updated_at": "2018-09-07T04:48:50Z", "author_association": "NONE", "body_html": "<p><a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=10711177\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/yasheshgaur\">@yasheshgaur</a> I found a workaround actually. By setting torch.backends.cudnn.enabled=False, the problem is gone... I'm still not sure why but I got the idea from <a href=\"https://discuss.pytorch.org/t/cudnn-status-execution-failed/4441/9\" rel=\"nofollow\">https://discuss.pytorch.org/t/cudnn-status-execution-failed/4441/9</a>, and it works for my case...</p>", "body_text": "@yasheshgaur I found a workaround actually. By setting torch.backends.cudnn.enabled=False, the problem is gone... I'm still not sure why but I got the idea from https://discuss.pytorch.org/t/cudnn-status-execution-failed/4441/9, and it works for my case...", "body": "@yasheshgaur I found a workaround actually. By setting torch.backends.cudnn.enabled=False, the problem is gone... I'm still not sure why but I got the idea from https://discuss.pytorch.org/t/cudnn-status-execution-failed/4441/9, and it works for my case..."}