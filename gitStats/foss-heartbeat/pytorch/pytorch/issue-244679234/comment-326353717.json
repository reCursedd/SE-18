{"url": "https://api.github.com/repos/pytorch/pytorch/issues/comments/326353717", "html_url": "https://github.com/pytorch/pytorch/issues/2178#issuecomment-326353717", "issue_url": "https://api.github.com/repos/pytorch/pytorch/issues/2178", "id": 326353717, "node_id": "MDEyOklzc3VlQ29tbWVudDMyNjM1MzcxNw==", "user": {"login": "soumith", "id": 1310570, "node_id": "MDQ6VXNlcjEzMTA1NzA=", "avatar_url": "https://avatars0.githubusercontent.com/u/1310570?v=4", "gravatar_id": "", "url": "https://api.github.com/users/soumith", "html_url": "https://github.com/soumith", "followers_url": "https://api.github.com/users/soumith/followers", "following_url": "https://api.github.com/users/soumith/following{/other_user}", "gists_url": "https://api.github.com/users/soumith/gists{/gist_id}", "starred_url": "https://api.github.com/users/soumith/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/soumith/subscriptions", "organizations_url": "https://api.github.com/users/soumith/orgs", "repos_url": "https://api.github.com/users/soumith/repos", "events_url": "https://api.github.com/users/soumith/events{/privacy}", "received_events_url": "https://api.github.com/users/soumith/received_events", "type": "User", "site_admin": false}, "created_at": "2017-08-31T16:40:49Z", "updated_at": "2017-08-31T16:40:49Z", "author_association": "MEMBER", "body_html": "<p>When you call next(iter(loader)), it calls <code>__getitem__(self, index)</code> on your dataset, which returns <code>self.data_tensor[index], self.target_tensor[index]</code>.<br>\nHowever, <code>self.target_tensor[index]</code> will become a Python scalar of precision double. Then, when the mini-batch is collated, it puts all these doubles together in a <code>torch.DoubleTensor</code>.</p>\n<p>A fix / workaround is to make <code>y</code> to be <code>torch.zeros(100, 1)</code> and then squeeze the last dimension once you get the mini-batch.</p>\n<p>I'm not sure we can solve this / if this is a bug.</p>", "body_text": "When you call next(iter(loader)), it calls __getitem__(self, index) on your dataset, which returns self.data_tensor[index], self.target_tensor[index].\nHowever, self.target_tensor[index] will become a Python scalar of precision double. Then, when the mini-batch is collated, it puts all these doubles together in a torch.DoubleTensor.\nA fix / workaround is to make y to be torch.zeros(100, 1) and then squeeze the last dimension once you get the mini-batch.\nI'm not sure we can solve this / if this is a bug.", "body": "When you call next(iter(loader)), it calls `__getitem__(self, index)` on your dataset, which returns `self.data_tensor[index], self.target_tensor[index]`. \r\nHowever, `self.target_tensor[index]` will become a Python scalar of precision double. Then, when the mini-batch is collated, it puts all these doubles together in a `torch.DoubleTensor`.\r\n\r\nA fix / workaround is to make `y` to be `torch.zeros(100, 1)` and then squeeze the last dimension once you get the mini-batch.\r\n\r\nI'm not sure we can solve this / if this is a bug."}