{"url": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/210188827", "pull_request_review_id": 146350866, "id": 210188827, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIxMDE4ODgyNw==", "diff_hunk": "@@ -899,12 +899,17 @@ struct to_ir {\n     // Register outputs in each block\n     for (const auto& x : mutated_variables) {\n       auto tv = save_true->getVar(x, stmt.range());\n-      true_block->registerOutput(tv);\n       auto fv = save_false->getVar(x, stmt.range());\n+      auto unified = unifyTypes(tv->type(), fv->type());\n+      if (!unified) {\n+        throw ErrorReport(stmt)\n+          << \"Type mismatch: \" << x << \" is set to type \" << tv->type()->str() << \" in the true branch\"", "path": "torch/csrc/jit/script/compiler.cpp", "position": null, "original_position": 9, "commit_id": "624f11f604758f6f58bddba3f0d9912df4ac86c9", "original_commit_id": "1f7701716e83c30910223a9e55cf040d1c7b9ae2", "user": {"login": "zdevito", "id": 370202, "node_id": "MDQ6VXNlcjM3MDIwMg==", "avatar_url": "https://avatars0.githubusercontent.com/u/370202?v=4", "gravatar_id": "", "url": "https://api.github.com/users/zdevito", "html_url": "https://github.com/zdevito", "followers_url": "https://api.github.com/users/zdevito/followers", "following_url": "https://api.github.com/users/zdevito/following{/other_user}", "gists_url": "https://api.github.com/users/zdevito/gists{/gist_id}", "starred_url": "https://api.github.com/users/zdevito/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/zdevito/subscriptions", "organizations_url": "https://api.github.com/users/zdevito/orgs", "repos_url": "https://api.github.com/users/zdevito/repos", "events_url": "https://api.github.com/users/zdevito/events{/privacy}", "received_events_url": "https://api.github.com/users/zdevito/received_events", "type": "User", "site_admin": false}, "body": "It should be possible for if-statments to define variables of different types in each branch as long as that variable is not already in scope:\r\n\r\n```\r\nif x:\r\n  y = 4\r\n  print(y)\r\nelse:\r\n  y = \"hi\"\r\n  print(y)\r\n```\r\n\r\nWhat happens in this case with the current code? I think it would produce a type mismatch error. Instead, it should just choose not to expose the y variable.", "created_at": "2018-08-15T07:22:34Z", "updated_at": "2018-11-23T15:49:23Z", "html_url": "https://github.com/pytorch/pytorch/pull/10281#discussion_r210188827", "pull_request_url": "https://api.github.com/repos/pytorch/pytorch/pulls/10281", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/210188827"}, "html": {"href": "https://github.com/pytorch/pytorch/pull/10281#discussion_r210188827"}, "pull_request": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/10281"}}, "body_html": "<p>It should be possible for if-statments to define variables of different types in each branch as long as that variable is not already in scope:</p>\n<pre><code>if x:\n  y = 4\n  print(y)\nelse:\n  y = \"hi\"\n  print(y)\n</code></pre>\n<p>What happens in this case with the current code? I think it would produce a type mismatch error. Instead, it should just choose not to expose the y variable.</p>", "body_text": "It should be possible for if-statments to define variables of different types in each branch as long as that variable is not already in scope:\nif x:\n  y = 4\n  print(y)\nelse:\n  y = \"hi\"\n  print(y)\n\nWhat happens in this case with the current code? I think it would produce a type mismatch error. Instead, it should just choose not to expose the y variable."}