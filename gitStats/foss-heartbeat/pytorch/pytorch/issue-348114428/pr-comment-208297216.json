{"url": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/208297216", "pull_request_review_id": 144077181, "id": 208297216, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwODI5NzIxNg==", "diff_hunk": "@@ -899,8 +899,13 @@ struct to_ir {\n     // Register outputs in each block\n     for (const auto& x : mutated_variables) {\n       auto tv = save_true->getVar(x, stmt.range());\n-      true_block->registerOutput(tv);\n       auto fv = save_false->getVar(x, stmt.range());\n+      if (!tv->type()->isSubtypeOf(unshapedType(fv->type()))) {", "path": "torch/csrc/jit/script/compiler.cpp", "position": null, "original_position": 6, "commit_id": "624f11f604758f6f58bddba3f0d9912df4ac86c9", "original_commit_id": "8e310c29ad4e5990f86ec6e7569fcef6cc3f7d91", "user": {"login": "apaszke", "id": 4583066, "node_id": "MDQ6VXNlcjQ1ODMwNjY=", "avatar_url": "https://avatars3.githubusercontent.com/u/4583066?v=4", "gravatar_id": "", "url": "https://api.github.com/users/apaszke", "html_url": "https://github.com/apaszke", "followers_url": "https://api.github.com/users/apaszke/followers", "following_url": "https://api.github.com/users/apaszke/following{/other_user}", "gists_url": "https://api.github.com/users/apaszke/gists{/gist_id}", "starred_url": "https://api.github.com/users/apaszke/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/apaszke/subscriptions", "organizations_url": "https://api.github.com/users/apaszke/orgs", "repos_url": "https://api.github.com/users/apaszke/repos", "events_url": "https://api.github.com/users/apaszke/events{/privacy}", "received_events_url": "https://api.github.com/users/apaszke/received_events", "type": "User", "site_admin": false}, "body": "Hmm that's a hard one. I think there are two options here - we can either set the output type to be a `NumberType`, or we could make that an error. If we want to go with the first way, this is the job of the type matching function (find the least general type that matches both of them).", "created_at": "2018-08-07T16:22:07Z", "updated_at": "2018-11-23T15:48:54Z", "html_url": "https://github.com/pytorch/pytorch/pull/10281#discussion_r208297216", "pull_request_url": "https://api.github.com/repos/pytorch/pytorch/pulls/10281", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/208297216"}, "html": {"href": "https://github.com/pytorch/pytorch/pull/10281#discussion_r208297216"}, "pull_request": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/10281"}}, "body_html": "<p>Hmm that's a hard one. I think there are two options here - we can either set the output type to be a <code>NumberType</code>, or we could make that an error. If we want to go with the first way, this is the job of the type matching function (find the least general type that matches both of them).</p>", "body_text": "Hmm that's a hard one. I think there are two options here - we can either set the output type to be a NumberType, or we could make that an error. If we want to go with the first way, this is the job of the type matching function (find the least general type that matches both of them).", "in_reply_to_id": 208068570}