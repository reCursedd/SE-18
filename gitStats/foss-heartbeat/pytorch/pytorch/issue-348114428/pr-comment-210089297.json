{"url": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/210089297", "pull_request_review_id": 146234109, "id": 210089297, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIxMDA4OTI5Nw==", "diff_hunk": "@@ -3566,6 +3566,70 @@ def mixtypes(x):\n                 if True:\n                     a = 4\n \n+    def test_if_tuple_sizes(self):\n+        with self.assertRaisesRegex(RuntimeError, \"Type mismatch\"):\n+            @torch.jit.script\n+            def diff_tuple_sizes(x):\n+                if False:\n+                    c0 = ((x, x), (x, x, x))\n+                else:\n+                    c0 = ((x, x, x), (x, x))\n+                return c0\n+\n+    def test_if_different_type(self):\n+        with self.assertRaisesRegex(RuntimeError, \"Type mismatch: c0 is set to type Tensor \"\n+                                    \"in the true branch and type int in the false branch:\"):\n+            @torch.jit.script\n+            def tensor_scalar(x):\n+                if False:\n+                    c0 = x\n+                else:\n+                    c0 = 1\n+                return c0\n+        with self.assertRaisesRegex(RuntimeError, \"Type mismatch: c0 is set to type int in \"\n+                                    \"the true branch and type float in the false branch:\"):\n+            @torch.jit.script\n+            def int_float(x):\n+                if False:\n+                    c0 = 1\n+                else:\n+                    c0 = 1.0\n+                return c0\n+\n+    def test_if_list(self):\n+        # testing that different length lists don't throw error\n+        @torch.jit.script\n+        def test_list(x):\n+            if True:\n+                c = [x, x]\n+            else:\n+                c = [x, x, x]\n+            return torch.cat(c)\n+\n+        b = torch.zeros(2, 4)\n+        # unrelated bug", "path": "test/test_jit.py", "position": 55, "original_position": 45, "commit_id": "624f11f604758f6f58bddba3f0d9912df4ac86c9", "original_commit_id": "4008dc16fb52fcd327e0fb5128d534e088f94d99", "user": {"login": "eellison", "id": 11477974, "node_id": "MDQ6VXNlcjExNDc3OTc0", "avatar_url": "https://avatars2.githubusercontent.com/u/11477974?v=4", "gravatar_id": "", "url": "https://api.github.com/users/eellison", "html_url": "https://github.com/eellison", "followers_url": "https://api.github.com/users/eellison/followers", "following_url": "https://api.github.com/users/eellison/following{/other_user}", "gists_url": "https://api.github.com/users/eellison/gists{/gist_id}", "starred_url": "https://api.github.com/users/eellison/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/eellison/subscriptions", "organizations_url": "https://api.github.com/users/eellison/orgs", "repos_url": "https://api.github.com/users/eellison/repos", "events_url": "https://api.github.com/users/eellison/events{/privacy}", "received_events_url": "https://api.github.com/users/eellison/received_events", "type": "User", "site_admin": false}, "body": "This is the list propagation bug that I have a PR out for. ", "created_at": "2018-08-14T20:17:42Z", "updated_at": "2018-11-23T15:49:20Z", "html_url": "https://github.com/pytorch/pytorch/pull/10281#discussion_r210089297", "pull_request_url": "https://api.github.com/repos/pytorch/pytorch/pulls/10281", "author_association": "NONE", "_links": {"self": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/210089297"}, "html": {"href": "https://github.com/pytorch/pytorch/pull/10281#discussion_r210089297"}, "pull_request": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/10281"}}, "body_html": "<p>This is the list propagation bug that I have a PR out for.</p>", "body_text": "This is the list propagation bug that I have a PR out for.", "in_reply_to_id": 210075013}