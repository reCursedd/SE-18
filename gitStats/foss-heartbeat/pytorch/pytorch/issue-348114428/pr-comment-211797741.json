{"url": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/211797741", "pull_request_review_id": 148296162, "id": 211797741, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIxMTc5Nzc0MQ==", "diff_hunk": "@@ -461,11 +491,17 @@ at::optional<std::vector<Value*>> tryMatchSchema(\n \n       // Allow homogeneous tuples to be casted implicitly to lists of appropriate types\n       if (arg.type->kind() == TypeKind::ListType &&\n-          value->type()->kind() == TypeKind::TupleType &&\n-          value->type()->isSubtypeOf(arg.type)) {\n-        auto unpacked = createTupleUnpack(value);\n-        auto elem_type = arg.type->expect<ListType>()->getElementType();\n-        value = graph.insertNode(graph.createList(elem_type, unpacked))->output();\n+          value->type()->kind() == TypeKind::TupleType) {\n+          auto list_type = arg.type->cast<ListType>()->getElementType();\n+          auto tuple = value->type()->cast<TupleType>();\n+          auto castable = std::all_of(tuple->elements().begin(), tuple->elements().end(), [&](const TypePtr& t) {\n+            return unifyTypes(list_type, t) != at::nullopt;", "path": "torch/csrc/jit/script/compiler.cpp", "position": null, "original_position": 61, "commit_id": "624f11f604758f6f58bddba3f0d9912df4ac86c9", "original_commit_id": "977438c060c6b8ac30f53f7975b12ea49483dadf", "user": {"login": "zdevito", "id": 370202, "node_id": "MDQ6VXNlcjM3MDIwMg==", "avatar_url": "https://avatars0.githubusercontent.com/u/370202?v=4", "gravatar_id": "", "url": "https://api.github.com/users/zdevito", "html_url": "https://github.com/zdevito", "followers_url": "https://api.github.com/users/zdevito/followers", "following_url": "https://api.github.com/users/zdevito/following{/other_user}", "gists_url": "https://api.github.com/users/zdevito/gists{/gist_id}", "starred_url": "https://api.github.com/users/zdevito/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/zdevito/subscriptions", "organizations_url": "https://api.github.com/users/zdevito/orgs", "repos_url": "https://api.github.com/users/zdevito/repos", "events_url": "https://api.github.com/users/zdevito/events{/privacy}", "received_events_url": "https://api.github.com/users/zdevito/received_events", "type": "User", "site_admin": false}, "body": "This should just be `t->isSubtypeOf(list_type)`", "created_at": "2018-08-22T00:14:06Z", "updated_at": "2018-11-23T15:49:43Z", "html_url": "https://github.com/pytorch/pytorch/pull/10281#discussion_r211797741", "pull_request_url": "https://api.github.com/repos/pytorch/pytorch/pulls/10281", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/211797741"}, "html": {"href": "https://github.com/pytorch/pytorch/pull/10281#discussion_r211797741"}, "pull_request": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/10281"}}, "body_html": "<p>This should just be <code>t-&gt;isSubtypeOf(list_type)</code></p>", "body_text": "This should just be t->isSubtypeOf(list_type)"}