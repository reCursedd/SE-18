{"url": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/217799339", "pull_request_review_id": 155606665, "id": 217799339, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIxNzc5OTMzOQ==", "diff_hunk": "@@ -663,16 +656,27 @@ def _load_from_state_dict(self, state_dict, prefix, metadata, strict, missing_ke\n                                       'whose dimensions in the model are {} and '\n                                       'whose dimensions in the checkpoint are {}.'\n                                       .format(key, param.size(), input_param.size()))\n-            elif strict:\n-                missing_keys.append(key)\n \n-        if strict:\n-            for key, input_param in state_dict.items():\n-                if key.startswith(prefix):\n-                    input_name = key[len(prefix):]\n-                    input_name = input_name.split('.', 1)[0]  # get the name of param/buffer/child\n-                    if input_name not in self._modules and input_name not in local_state:\n-                        unexpected_keys.append(key)\n+    def diff_state_dict(self, state_dict):\n+        r\"\"\"Compares current keys with given state dictionary\n+        and returns matched, unmatched and unexpected keys\n+\n+        Arguments:\n+            state_dict (dict): a dict containing parameters and\n+                persistent buffers.\n+        \"\"\"\n+        local_keys = set(self.state_dict())\n+        state_keys, _ = zip(*state_dict.items())\n+        state_keys = set(state_keys)\n+\n+        # matched keys are keys present in current and given state\n+        matched_keys = state_keys & local_keys\n+        # unmatched keys are present in current but not in given state\n+        unmatched_keys = local_keys - state_keys\n+        # unexpected keys are present in state but not in current\n+        unexpected_keys = state_keys - local_keys\n+\n+        return list(matched_keys), list(unmatched_keys), list(unexpected_keys)", "path": "torch/nn/modules/module.py", "position": null, "original_position": 56, "commit_id": "0e78cf6757531c21069155bb6435690d754e883b", "original_commit_id": "2465f5a4e2bdaeb09bd6547db2dbef72e541408c", "user": {"login": "apaszke", "id": 4583066, "node_id": "MDQ6VXNlcjQ1ODMwNjY=", "avatar_url": "https://avatars3.githubusercontent.com/u/4583066?v=4", "gravatar_id": "", "url": "https://api.github.com/users/apaszke", "html_url": "https://github.com/apaszke", "followers_url": "https://api.github.com/users/apaszke/followers", "following_url": "https://api.github.com/users/apaszke/following{/other_user}", "gists_url": "https://api.github.com/users/apaszke/gists{/gist_id}", "starred_url": "https://api.github.com/users/apaszke/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/apaszke/subscriptions", "organizations_url": "https://api.github.com/users/apaszke/orgs", "repos_url": "https://api.github.com/users/apaszke/repos", "events_url": "https://api.github.com/users/apaszke/events{/privacy}", "received_events_url": "https://api.github.com/users/apaszke/received_events", "type": "User", "site_admin": false}, "body": "I'm not 100% sure if we really want to have this function. The beginning could be simplified to\r\n```py\r\nlocal_keys = set(self.state_dict())\r\nstate_keys = set(state_dict)\r\n```\r\nand then it becomes a few lines of very straightforward Python code. To be honest it would be harder for me to find this function to the docs, and make sure that I assign the three lists we return in the correct order, than to write them out myself...", "created_at": "2018-09-14T18:14:52Z", "updated_at": "2018-11-23T15:51:24Z", "html_url": "https://github.com/pytorch/pytorch/pull/9620#discussion_r217799339", "pull_request_url": "https://api.github.com/repos/pytorch/pytorch/pulls/9620", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/217799339"}, "html": {"href": "https://github.com/pytorch/pytorch/pull/9620#discussion_r217799339"}, "pull_request": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/9620"}}, "body_html": "<p>I'm not 100% sure if we really want to have this function. The beginning could be simplified to</p>\n<div class=\"highlight highlight-source-python\"><pre>local_keys <span class=\"pl-k\">=</span> <span class=\"pl-c1\">set</span>(<span class=\"pl-c1\">self</span>.state_dict())\nstate_keys <span class=\"pl-k\">=</span> <span class=\"pl-c1\">set</span>(state_dict)</pre></div>\n<p>and then it becomes a few lines of very straightforward Python code. To be honest it would be harder for me to find this function to the docs, and make sure that I assign the three lists we return in the correct order, than to write them out myself...</p>", "body_text": "I'm not 100% sure if we really want to have this function. The beginning could be simplified to\nlocal_keys = set(self.state_dict())\nstate_keys = set(state_dict)\nand then it becomes a few lines of very straightforward Python code. To be honest it would be harder for me to find this function to the docs, and make sure that I assign the three lists we return in the correct order, than to write them out myself..."}