{"url": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/213397606", "pull_request_review_id": 150225657, "id": 213397606, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIxMzM5NzYwNg==", "diff_hunk": "@@ -700,28 +710,19 @@ def load_state_dict(self, state_dict, strict=True):\n         def load(module, prefix=''):\n             local_metadata = {} if metadata is None else metadata.get(prefix[:-1], {})\n             module._load_from_state_dict(\n-                state_dict, prefix, local_metadata, strict, missing_keys, unexpected_keys, error_msgs)\n+                state_dict, prefix, local_metadata, error_msgs)\n             for name, child in module._modules.items():\n                 if child is not None:\n                     load(child, prefix + name + '.')\n \n         load(self)\n-\n-        if strict:\n-            error_msg = ''\n-            if len(unexpected_keys) > 0:\n-                error_msgs.insert(\n-                    0, 'Unexpected key(s) in state_dict: {}. '.format(\n-                        ', '.join('\"{}\"'.format(k) for k in unexpected_keys)))\n-            if len(missing_keys) > 0:\n-                error_msgs.insert(\n-                    0, 'Missing key(s) in state_dict: {}. '.format(\n-                        ', '.join('\"{}\"'.format(k) for k in missing_keys)))\n-\n         if len(error_msgs) > 0:\n             raise RuntimeError('Error(s) in loading state_dict for {}:\\n\\t{}'.format(\n                                self.__class__.__name__, \"\\n\\t\".join(error_msgs)))\n+        if return_keys:", "path": "torch/nn/modules/module.py", "position": null, "original_position": 108, "commit_id": "0e78cf6757531c21069155bb6435690d754e883b", "original_commit_id": "b83c4f0970dca773eb82cee9569ff32b4b573908", "user": {"login": "fmassa", "id": 9110200, "node_id": "MDQ6VXNlcjkxMTAyMDA=", "avatar_url": "https://avatars2.githubusercontent.com/u/9110200?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fmassa", "html_url": "https://github.com/fmassa", "followers_url": "https://api.github.com/users/fmassa/followers", "following_url": "https://api.github.com/users/fmassa/following{/other_user}", "gists_url": "https://api.github.com/users/fmassa/gists{/gist_id}", "starred_url": "https://api.github.com/users/fmassa/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fmassa/subscriptions", "organizations_url": "https://api.github.com/users/fmassa/orgs", "repos_url": "https://api.github.com/users/fmassa/repos", "events_url": "https://api.github.com/users/fmassa/events{/privacy}", "received_events_url": "https://api.github.com/users/fmassa/received_events", "type": "User", "site_admin": false}, "body": "I think we have decided that it's better not to return the keys conditionally on an argument?", "created_at": "2018-08-28T17:09:29Z", "updated_at": "2018-11-23T15:50:10Z", "html_url": "https://github.com/pytorch/pytorch/pull/9620#discussion_r213397606", "pull_request_url": "https://api.github.com/repos/pytorch/pytorch/pulls/9620", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/213397606"}, "html": {"href": "https://github.com/pytorch/pytorch/pull/9620#discussion_r213397606"}, "pull_request": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/9620"}}, "body_html": "<p>I think we have decided that it's better not to return the keys conditionally on an argument?</p>", "body_text": "I think we have decided that it's better not to return the keys conditionally on an argument?"}