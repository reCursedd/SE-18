{"url": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/234071126", "pull_request_review_id": 175634702, "id": 234071126, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIzNDA3MTEyNg==", "diff_hunk": "@@ -148,51 +134,84 @@ void bernoulli_scalar_cuda_kernel(\n   // The template argument `4` below indicates that we want to operate on four\n   // element at each time. See NOTE [ CUDA_tensor_applyN helpers ] for details.\n   at::cuda::CUDA_tensor_apply1<scalar_t, 4>(", "path": "aten/src/ATen/native/cuda/Distributions.cu", "position": null, "original_position": 150, "commit_id": "a4279c73de70eb5a87260df7f5ede98c05f4e320", "original_commit_id": "992d302ff90714182d533472c2a9f090ad79d3d8", "user": {"login": "syed-ahmed", "id": 8906225, "node_id": "MDQ6VXNlcjg5MDYyMjU=", "avatar_url": "https://avatars1.githubusercontent.com/u/8906225?v=4", "gravatar_id": "", "url": "https://api.github.com/users/syed-ahmed", "html_url": "https://github.com/syed-ahmed", "followers_url": "https://api.github.com/users/syed-ahmed/followers", "following_url": "https://api.github.com/users/syed-ahmed/following{/other_user}", "gists_url": "https://api.github.com/users/syed-ahmed/gists{/gist_id}", "starred_url": "https://api.github.com/users/syed-ahmed/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/syed-ahmed/subscriptions", "organizations_url": "https://api.github.com/users/syed-ahmed/orgs", "repos_url": "https://api.github.com/users/syed-ahmed/repos", "events_url": "https://api.github.com/users/syed-ahmed/events{/privacy}", "received_events_url": "https://api.github.com/users/syed-ahmed/received_events", "type": "User", "site_admin": false}, "body": "Fixed the hardcoded 4 in the `CUDA_tensor_apply1` by not processing 4 elements (the curand workaround). Left the `step=1` for the grid calculation that goes into `incrementPhiloxOffset` function. The grid calculation is different in `CUDAApplyUtils` and takes `step` into account. I couldn't see a way to extract that info and hence, kept this hardcoded.", "created_at": "2018-11-16T02:07:00Z", "updated_at": "2018-11-23T15:54:59Z", "html_url": "https://github.com/pytorch/pytorch/pull/13070#discussion_r234071126", "pull_request_url": "https://api.github.com/repos/pytorch/pytorch/pulls/13070", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/234071126"}, "html": {"href": "https://github.com/pytorch/pytorch/pull/13070#discussion_r234071126"}, "pull_request": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/13070"}}, "body_html": "<p>Fixed the hardcoded 4 in the <code>CUDA_tensor_apply1</code> by not processing 4 elements (the curand workaround). Left the <code>step=1</code> for the grid calculation that goes into <code>incrementPhiloxOffset</code> function. The grid calculation is different in <code>CUDAApplyUtils</code> and takes <code>step</code> into account. I couldn't see a way to extract that info and hence, kept this hardcoded.</p>", "body_text": "Fixed the hardcoded 4 in the CUDA_tensor_apply1 by not processing 4 elements (the curand workaround). Left the step=1 for the grid calculation that goes into incrementPhiloxOffset function. The grid calculation is different in CUDAApplyUtils and takes step into account. I couldn't see a way to extract that info and hence, kept this hardcoded.", "in_reply_to_id": 233685468}