{"url": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/233673284", "pull_request_review_id": 175143560, "id": 233673284, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIzMzY3MzI4NA==", "diff_hunk": "@@ -0,0 +1,286 @@\n+#pragma once\n+\n+#include <math.h>\n+#include <stdint.h>\n+#include <cuda.h>\n+#include <c10/macros/Macros.h>\n+\n+namespace at {\n+namespace cuda {\n+\n+/*\n+* Philox Engine implementation\n+* Originally implemented in PyTorch's fusion compiler\n+* Refer to: https://ieeexplore.ieee.org/document/6114424\n+* for details regarding the engine.\n+*\n+* The Philox engine is currently used in CUDA distributions\n+* kernels as its random engine. \n+* \n+* It takes a seed value, a subsequeunce\n+* for starting the generation and an offset for the sequence.\n+*\n+* Think of this engine as an algorithm producing a huge array. We are \n+* parallelizing this array by partitioning the huge array and assigning \n+* a thread index to each partition. In other words, each seed value \n+* (there are 2^64 possible seed values) gives a sub array of size \n+* 2^128 (each element in that array is a 128 bit number). Reasoning\n+* behind the array being of size 2^128 is, there are 2^64 possible\n+* thread index value and there is an array of size 2^64 for each of\n+* those thread index. Hence 2^64 * 2^64 = 2^128 for each seed value.\n+*\n+* In short, this generator can produce 2^64 (seed values) * 2^128 (number\n+* of elements in an array given by a seed value) = 2^192 values.\n+*\n+* Arguments:\n+* seed:        Seed values could be any number from 0 to 2^64-1.\n+* subsequence: Subsequence is just the cuda thread indexing with:\n+*              - blockIdx.x * blockDim.x + threadIdx.x\n+* offset:      The offset variable in PhiloxEngine  decides how many 128-bit \n+*              random numbers to skip (i.e. how many groups of 4, 32-bit numbers to skip)\n+*              and hence really decides the total number of randoms that can be achieved \n+*              for the given subsequence. NOTE: there is a hard requirement for this", "path": "aten/src/ATen/cuda/PhiloxRNGEngine.h", "position": null, "original_position": 42, "commit_id": "a4279c73de70eb5a87260df7f5ede98c05f4e320", "original_commit_id": "7e782905089c8c6e688417941040d37164666388", "user": {"login": "syed-ahmed", "id": 8906225, "node_id": "MDQ6VXNlcjg5MDYyMjU=", "avatar_url": "https://avatars1.githubusercontent.com/u/8906225?v=4", "gravatar_id": "", "url": "https://api.github.com/users/syed-ahmed", "html_url": "https://github.com/syed-ahmed", "followers_url": "https://api.github.com/users/syed-ahmed/followers", "following_url": "https://api.github.com/users/syed-ahmed/following{/other_user}", "gists_url": "https://api.github.com/users/syed-ahmed/gists{/gist_id}", "starred_url": "https://api.github.com/users/syed-ahmed/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/syed-ahmed/subscriptions", "organizations_url": "https://api.github.com/users/syed-ahmed/orgs", "repos_url": "https://api.github.com/users/syed-ahmed/repos", "events_url": "https://api.github.com/users/syed-ahmed/events{/privacy}", "received_events_url": "https://api.github.com/users/syed-ahmed/received_events", "type": "User", "site_admin": false}, "body": "That is true. I will remove this comment. This was in regards to Runtian's initialization of Philox with `incr_n(offset/4)`. That is, we were assuming `incr_n` skips 32-bits vs 128-bits.", "created_at": "2018-11-15T00:26:45Z", "updated_at": "2018-11-23T15:54:52Z", "html_url": "https://github.com/pytorch/pytorch/pull/13070#discussion_r233673284", "pull_request_url": "https://api.github.com/repos/pytorch/pytorch/pulls/13070", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/233673284"}, "html": {"href": "https://github.com/pytorch/pytorch/pull/13070#discussion_r233673284"}, "pull_request": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/13070"}}, "body_html": "<p>That is true. I will remove this comment. This was in regards to Runtian's initialization of Philox with <code>incr_n(offset/4)</code>. That is, we were assuming <code>incr_n</code> skips 32-bits vs 128-bits.</p>", "body_text": "That is true. I will remove this comment. This was in regards to Runtian's initialization of Philox with incr_n(offset/4). That is, we were assuming incr_n skips 32-bits vs 128-bits.", "in_reply_to_id": 233668318}