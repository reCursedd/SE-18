{"url": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/233688885", "pull_request_review_id": 175157819, "id": 233688885, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIzMzY4ODg4NQ==", "diff_hunk": "@@ -104,8 +81,7 @@ fused_dropout_cuda(const Tensor& self, double p, Generator * gen){\n   dim3 dim_block(block_size);\n   dim3 grid((nelem + block_size -1)/block_size);\n   grid.x = std::min((unsigned int)at::cuda::getCurrentDeviceProperties()->multiProcessorCount * blocks_per_sm, grid.x);\n-//number of times random will be generated per thread, to offset philox counter in thc random state\n-  int64_t counter_offset = ((nelem - 1)/(block_size*grid.x*UNROLL)+1)*UNROLL;\n+  auto gen_ = at::detail::checkGeneratorWithDefault(gen, kCUDA);", "path": "aten/src/ATen/native/cuda/Dropout.cu", "position": null, "original_position": 82, "commit_id": "a4279c73de70eb5a87260df7f5ede98c05f4e320", "original_commit_id": "992d302ff90714182d533472c2a9f090ad79d3d8", "user": {"login": "ngimel", "id": 15841449, "node_id": "MDQ6VXNlcjE1ODQxNDQ5", "avatar_url": "https://avatars3.githubusercontent.com/u/15841449?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ngimel", "html_url": "https://github.com/ngimel", "followers_url": "https://api.github.com/users/ngimel/followers", "following_url": "https://api.github.com/users/ngimel/following{/other_user}", "gists_url": "https://api.github.com/users/ngimel/gists{/gist_id}", "starred_url": "https://api.github.com/users/ngimel/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ngimel/subscriptions", "organizations_url": "https://api.github.com/users/ngimel/orgs", "repos_url": "https://api.github.com/users/ngimel/repos", "events_url": "https://api.github.com/users/ngimel/events{/privacy}", "received_events_url": "https://api.github.com/users/ngimel/received_events", "type": "User", "site_admin": false}, "body": "Please benchmark dropout over variety of sizes and data types so that you don't introduce perf regression, dropout is a common function. Same for common distributions (uniform, random).", "created_at": "2018-11-15T01:55:45Z", "updated_at": "2018-11-23T15:54:53Z", "html_url": "https://github.com/pytorch/pytorch/pull/13070#discussion_r233688885", "pull_request_url": "https://api.github.com/repos/pytorch/pytorch/pulls/13070", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/233688885"}, "html": {"href": "https://github.com/pytorch/pytorch/pull/13070#discussion_r233688885"}, "pull_request": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/13070"}}, "body_html": "<p>Please benchmark dropout over variety of sizes and data types so that you don't introduce perf regression, dropout is a common function. Same for common distributions (uniform, random).</p>", "body_text": "Please benchmark dropout over variety of sizes and data types so that you don't introduce perf regression, dropout is a common function. Same for common distributions (uniform, random)."}