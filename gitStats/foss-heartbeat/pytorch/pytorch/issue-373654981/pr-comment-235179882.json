{"url": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/235179882", "pull_request_review_id": 176988042, "id": 235179882, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIzNTE3OTg4Mg==", "diff_hunk": "@@ -0,0 +1,316 @@\n+#include \"ATen/core/Generator.h\"\n+\n+namespace at {\n+\n+/*\n+* GeneratorState copy and assign constructor implementations\n+*/\n+GeneratorState::GeneratorState(const GeneratorState& other) {\n+  this->device = other.device;\n+  this->current_seed = other.current_seed;\n+  this->device_type = other.device_type;\n+  this->philox_offset_per_thread.exchange(other.philox_offset_per_thread);\n+  new (&(this->cpu_engine)) std::mt19937_64(other.cpu_engine);\n+}\n+\n+GeneratorState& GeneratorState::operator=(const GeneratorState& other) {\n+  if(&other == this) return *this;\n+  this->device = other.device;\n+  this->current_seed = other.current_seed;\n+  this->device_type = other.device_type;\n+  this->philox_offset_per_thread.exchange(other.philox_offset_per_thread);\n+  new (&(this->cpu_engine)) std::mt19937_64(other.cpu_engine);\n+  return *this;\n+}\n+\n+/*\n+* Internal Generator API\n+*/\n+namespace detail {\n+\n+// Global generator state and constants\n+static std::once_flag cpu_device_flag;\n+static GeneratorState* default_gen_state_cpu;\n+static std::unique_ptr<Generator> default_gen_cpu;\n+\n+static int64_t num_gpus = -1;\n+static std::once_flag num_gpu_init_flag;\n+static std::deque<std::once_flag> cuda_device_flags;\n+static std::vector<GeneratorState*> default_gen_states_cuda;\n+static std::vector<std::unique_ptr<Generator>> default_gens_cuda;\n+\n+/* \n+* Populates global values and creates a generator for CPU.\n+* Note: the generator on CPU is a 64 bit Mersenne Twister Engine.\n+* Warning: this function must only be called once!\n+*/\n+static void initGlobalCPUGeneratorState(){\n+  default_gen_state_cpu = new GeneratorState();\n+  default_gen_state_cpu->philox_offset_per_thread = 0;\n+  default_gen_state_cpu->device = -1;\n+  default_gen_state_cpu->device_type = at::kCPU;\n+  default_gen_state_cpu->current_seed = 123456;\n+  std::seed_seq seq({123456});\n+  new (&(default_gen_state_cpu->cpu_engine)) std::mt19937_64(seq);", "path": "aten/src/ATen/core/Generator.cpp", "position": null, "original_position": 54, "commit_id": "a4279c73de70eb5a87260df7f5ede98c05f4e320", "original_commit_id": "0c872f0608b457c742806603fdcca11f63e459b7", "user": {"login": "syed-ahmed", "id": 8906225, "node_id": "MDQ6VXNlcjg5MDYyMjU=", "avatar_url": "https://avatars1.githubusercontent.com/u/8906225?v=4", "gravatar_id": "", "url": "https://api.github.com/users/syed-ahmed", "html_url": "https://github.com/syed-ahmed", "followers_url": "https://api.github.com/users/syed-ahmed/followers", "following_url": "https://api.github.com/users/syed-ahmed/following{/other_user}", "gists_url": "https://api.github.com/users/syed-ahmed/gists{/gist_id}", "starred_url": "https://api.github.com/users/syed-ahmed/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/syed-ahmed/subscriptions", "organizations_url": "https://api.github.com/users/syed-ahmed/orgs", "repos_url": "https://api.github.com/users/syed-ahmed/repos", "events_url": "https://api.github.com/users/syed-ahmed/events{/privacy}", "received_events_url": "https://api.github.com/users/syed-ahmed/received_events", "type": "User", "site_admin": false}, "body": "Fixed by using mt19937 copy constructor.", "created_at": "2018-11-20T21:43:48Z", "updated_at": "2018-11-23T15:55:17Z", "html_url": "https://github.com/pytorch/pytorch/pull/13070#discussion_r235179882", "pull_request_url": "https://api.github.com/repos/pytorch/pytorch/pulls/13070", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/235179882"}, "html": {"href": "https://github.com/pytorch/pytorch/pull/13070#discussion_r235179882"}, "pull_request": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/13070"}}, "body_html": "<p>Fixed by using mt19937 copy constructor.</p>", "body_text": "Fixed by using mt19937 copy constructor.", "in_reply_to_id": 234064715}