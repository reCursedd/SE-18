{"url": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/149645823", "pull_request_review_id": 75069227, "id": 149645823, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE0OTY0NTgyMw==", "diff_hunk": "@@ -13,15 +13,64 @@ namespace {\n // Some of these restrictions may be relaxable, but you should\n // carefully read the code first, as we rely on these assumptions.\n std::unordered_set<NodeKind> simple_mappable = {\n-  ksigmoid,\n-  ktanh,\n-  kmul,\n+  k__and__,\n+  k__lshift__,\n+  k__or__,\n+  k__rshift__,\n+  k__xor__,\n+  kabs,\n+  kacos,\n   kadd,\n+  kasin,\n+  katan,\n+  katan2,\n+  kceil,\n+  kclamp,\n+  kcos,\n+  kcosh,\n+  kdiv,\n+  keq,\n+  kexp,\n+  kfloor,\n+  kfmod,\n+  kfrac,\n+  kge,\n+  kgt,\n+  kle,\n+  klerp,\n+  klgamma,\n+  klog,\n+  klog1p,\n+  klt,\n+  kmax,\n+  kmin,\n+  kmul,\n+  kne,\n   kneg,\n+  kones,\n+  kpow,\n+  kreciprocal,\n+  kremainder,\n+  kround,\n+  krsqrt,\n+  ksigmoid,\n+  ksin,\n+  ksinh,\n+  ksqrt,\n+  ksub,\n+  ktan,\n+  ktanh,\n+  ktrunc,\n+  kzeros,", "path": "torch/csrc/jit/passes/graph_fuser.cpp", "position": 55, "original_position": 55, "commit_id": "6c888bc4ce1d0bc4d47cc9fb154a881c00f0002e", "original_commit_id": "16f6853f2e8f61afe3d11d0697436878767cde0c", "user": {"login": "apaszke", "id": 4583066, "node_id": "MDQ6VXNlcjQ1ODMwNjY=", "avatar_url": "https://avatars3.githubusercontent.com/u/4583066?v=4", "gravatar_id": "", "url": "https://api.github.com/users/apaszke", "html_url": "https://github.com/apaszke", "followers_url": "https://api.github.com/users/apaszke/followers", "following_url": "https://api.github.com/users/apaszke/following{/other_user}", "gists_url": "https://api.github.com/users/apaszke/gists{/gist_id}", "starred_url": "https://api.github.com/users/apaszke/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/apaszke/subscriptions", "organizations_url": "https://api.github.com/users/apaszke/orgs", "repos_url": "https://api.github.com/users/apaszke/repos", "events_url": "https://api.github.com/users/apaszke/events{/privacy}", "received_events_url": "https://api.github.com/users/apaszke/received_events", "type": "User", "site_admin": false}, "body": "maybe instead of maintaining this huge list of interned strings it would just be easier to do this:\r\n```cpp\r\nstd::unordered_set<NodeKind> simple_mappable = fmap(std::vector<std::string>{\r\n  \"trunc\",\r\n  \"sigmoid\",\r\n  \"atan\",\r\n  ...\r\n}, stringToSymbol);\r\n```\r\n\r\nMost of them aren't used anywhere outside the lists here and in `graph_fuser.cpp`, which could do the same trick", "created_at": "2017-11-08T11:44:43Z", "updated_at": "2018-11-23T15:36:10Z", "html_url": "https://github.com/pytorch/pytorch/pull/3559#discussion_r149645823", "pull_request_url": "https://api.github.com/repos/pytorch/pytorch/pulls/3559", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/149645823"}, "html": {"href": "https://github.com/pytorch/pytorch/pull/3559#discussion_r149645823"}, "pull_request": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/3559"}}, "body_html": "<p>maybe instead of maintaining this huge list of interned strings it would just be easier to do this:</p>\n<div class=\"highlight highlight-source-c++\"><pre>std::unordered_set&lt;NodeKind&gt; simple_mappable = fmap(std::vector&lt;std::string&gt;{\n  <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>trunc<span class=\"pl-pds\">\"</span></span>,\n  <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>sigmoid<span class=\"pl-pds\">\"</span></span>,\n  <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>atan<span class=\"pl-pds\">\"</span></span>,\n  ...\n}, stringToSymbol);</pre></div>\n<p>Most of them aren't used anywhere outside the lists here and in <code>graph_fuser.cpp</code>, which could do the same trick</p>", "body_text": "maybe instead of maintaining this huge list of interned strings it would just be easier to do this:\nstd::unordered_set<NodeKind> simple_mappable = fmap(std::vector<std::string>{\n  \"trunc\",\n  \"sigmoid\",\n  \"atan\",\n  ...\n}, stringToSymbol);\nMost of them aren't used anywhere outside the lists here and in graph_fuser.cpp, which could do the same trick"}