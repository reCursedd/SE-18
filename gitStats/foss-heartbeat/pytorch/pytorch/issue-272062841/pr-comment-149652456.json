{"url": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/149652456", "pull_request_review_id": 75078013, "id": 149652456, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE0OTY1MjQ1Ng==", "diff_hunk": "@@ -13,15 +13,64 @@ namespace {\n // Some of these restrictions may be relaxable, but you should\n // carefully read the code first, as we rely on these assumptions.\n std::unordered_set<NodeKind> simple_mappable = {\n-  ksigmoid,\n-  ktanh,\n-  kmul,\n+  k__and__,\n+  k__lshift__,\n+  k__or__,\n+  k__rshift__,\n+  k__xor__,\n+  kabs,\n+  kacos,\n   kadd,\n+  kasin,\n+  katan,\n+  katan2,\n+  kceil,\n+  kclamp,\n+  kcos,\n+  kcosh,\n+  kdiv,\n+  keq,\n+  kexp,\n+  kfloor,\n+  kfmod,\n+  kfrac,\n+  kge,\n+  kgt,\n+  kle,\n+  klerp,\n+  klgamma,\n+  klog,\n+  klog1p,\n+  klt,\n+  kmax,\n+  kmin,\n+  kmul,\n+  kne,\n   kneg,\n+  kones,\n+  kpow,\n+  kreciprocal,\n+  kremainder,\n+  kround,\n+  krsqrt,\n+  ksigmoid,\n+  ksin,\n+  ksinh,\n+  ksqrt,\n+  ksub,\n+  ktan,\n+  ktanh,\n+  ktrunc,\n+  kzeros,", "path": "torch/csrc/jit/passes/graph_fuser.cpp", "position": 55, "original_position": 55, "commit_id": "6c888bc4ce1d0bc4d47cc9fb154a881c00f0002e", "original_commit_id": "16f6853f2e8f61afe3d11d0697436878767cde0c", "user": {"login": "ezyang", "id": 13564, "node_id": "MDQ6VXNlcjEzNTY0", "avatar_url": "https://avatars0.githubusercontent.com/u/13564?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ezyang", "html_url": "https://github.com/ezyang", "followers_url": "https://api.github.com/users/ezyang/followers", "following_url": "https://api.github.com/users/ezyang/following{/other_user}", "gists_url": "https://api.github.com/users/ezyang/gists{/gist_id}", "starred_url": "https://api.github.com/users/ezyang/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ezyang/subscriptions", "organizations_url": "https://api.github.com/users/ezyang/orgs", "repos_url": "https://api.github.com/users/ezyang/repos", "events_url": "https://api.github.com/users/ezyang/events{/privacy}", "received_events_url": "https://api.github.com/users/ezyang/received_events", "type": "User", "site_admin": false}, "body": "I think we should codegen interned strings for every identifier mentioned in ATen. But not in this PR.", "created_at": "2017-11-08T12:19:43Z", "updated_at": "2018-11-23T15:36:11Z", "html_url": "https://github.com/pytorch/pytorch/pull/3559#discussion_r149652456", "pull_request_url": "https://api.github.com/repos/pytorch/pytorch/pulls/3559", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/149652456"}, "html": {"href": "https://github.com/pytorch/pytorch/pull/3559#discussion_r149652456"}, "pull_request": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/3559"}}, "body_html": "<p>I think we should codegen interned strings for every identifier mentioned in ATen. But not in this PR.</p>", "body_text": "I think we should codegen interned strings for every identifier mentioned in ATen. But not in this PR.", "in_reply_to_id": 149645823}