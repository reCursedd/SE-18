{"url": "https://api.github.com/repos/pytorch/pytorch/issues/comments/433094191", "html_url": "https://github.com/pytorch/pytorch/pull/13109#issuecomment-433094191", "issue_url": "https://api.github.com/repos/pytorch/pytorch/issues/13109", "id": 433094191, "node_id": "MDEyOklzc3VlQ29tbWVudDQzMzA5NDE5MQ==", "user": {"login": "pietern", "id": 9845, "node_id": "MDQ6VXNlcjk4NDU=", "avatar_url": "https://avatars3.githubusercontent.com/u/9845?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pietern", "html_url": "https://github.com/pietern", "followers_url": "https://api.github.com/users/pietern/followers", "following_url": "https://api.github.com/users/pietern/following{/other_user}", "gists_url": "https://api.github.com/users/pietern/gists{/gist_id}", "starred_url": "https://api.github.com/users/pietern/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pietern/subscriptions", "organizations_url": "https://api.github.com/users/pietern/orgs", "repos_url": "https://api.github.com/users/pietern/repos", "events_url": "https://api.github.com/users/pietern/events{/privacy}", "received_events_url": "https://api.github.com/users/pietern/received_events", "type": "User", "site_admin": false}, "created_at": "2018-10-25T15:22:14Z", "updated_at": "2018-10-25T15:22:14Z", "author_association": "CONTRIBUTOR", "body_html": "<p><a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=13564\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/ezyang\">@ezyang</a> Agreed. I took a stab at the right approach (exactly what you mention) but it would have involved breaking up how <code>torch.distributed.init_process_group</code> works today. Basically we would need to create the store daemon before <code>init_process_group</code> and pass it, or pass a bound file descriptor or something. After 50 LOC I aborted and thought let's try this first. If it doesn't work we should revisit.</p>", "body_text": "@ezyang Agreed. I took a stab at the right approach (exactly what you mention) but it would have involved breaking up how torch.distributed.init_process_group works today. Basically we would need to create the store daemon before init_process_group and pass it, or pass a bound file descriptor or something. After 50 LOC I aborted and thought let's try this first. If it doesn't work we should revisit.", "body": "@ezyang Agreed. I took a stab at the right approach (exactly what you mention) but it would have involved breaking up how `torch.distributed.init_process_group` works today. Basically we would need to create the store daemon before `init_process_group` and pass it, or pass a bound file descriptor or something. After 50 LOC I aborted and thought let's try this first. If it doesn't work we should revisit."}