{"url": "https://api.github.com/repos/pytorch/pytorch/issues/1416", "repository_url": "https://api.github.com/repos/pytorch/pytorch", "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/1416/labels{/name}", "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/1416/comments", "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/1416/events", "html_url": "https://github.com/pytorch/pytorch/issues/1416", "id": 225400072, "node_id": "MDU6SXNzdWUyMjU0MDAwNzI=", "number": 1416, "title": "How to implement 'Signed Sqrt' under the Tensor level", "user": {"login": "KaiyuYue", "id": 19852297, "node_id": "MDQ6VXNlcjE5ODUyMjk3", "avatar_url": "https://avatars1.githubusercontent.com/u/19852297?v=4", "gravatar_id": "", "url": "https://api.github.com/users/KaiyuYue", "html_url": "https://github.com/KaiyuYue", "followers_url": "https://api.github.com/users/KaiyuYue/followers", "following_url": "https://api.github.com/users/KaiyuYue/following{/other_user}", "gists_url": "https://api.github.com/users/KaiyuYue/gists{/gist_id}", "starred_url": "https://api.github.com/users/KaiyuYue/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/KaiyuYue/subscriptions", "organizations_url": "https://api.github.com/users/KaiyuYue/orgs", "repos_url": "https://api.github.com/users/KaiyuYue/repos", "events_url": "https://api.github.com/users/KaiyuYue/events{/privacy}", "received_events_url": "https://api.github.com/users/KaiyuYue/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2017-05-01T07:44:40Z", "updated_at": "2017-12-30T13:16:22Z", "closed_at": "2017-05-01T09:48:34Z", "author_association": "CONTRIBUTOR", "body_html": "<p>Hi,<br>\nAre there any good methods to implement the <code>signed sqrt function</code>  in pytorch or torch?</p>\n<div class=\"highlight highlight-source-shell\"><pre>th<span class=\"pl-k\">&gt;</span> <span class=\"pl-en\">net:add(nn.Sqrt</span>())\nnn.Sequential {\n  [input -<span class=\"pl-k\">&gt;</span> (1) -<span class=\"pl-k\">&gt;</span> output]\n  (1): nn.Sqrt\n}\n\nth<span class=\"pl-k\">&gt;</span> a\n 4  -4\n[torch.DoubleTensor of size 1x2]\n\nth<span class=\"pl-k\">&gt;</span> net:forward(a)\n2.000000 nan</pre></div>\n<p>Would like to achieve the result like:</p>\n<div class=\"highlight highlight-source-shell\"><pre>th<span class=\"pl-k\">&gt;</span> \n2.000000 -2.000000</pre></div>", "body_text": "Hi,\nAre there any good methods to implement the signed sqrt function  in pytorch or torch?\nth> net:add(nn.Sqrt())\nnn.Sequential {\n  [input -> (1) -> output]\n  (1): nn.Sqrt\n}\n\nth> a\n 4  -4\n[torch.DoubleTensor of size 1x2]\n\nth> net:forward(a)\n2.000000 nan\nWould like to achieve the result like:\nth> \n2.000000 -2.000000", "body": "Hi,\r\nAre there any good methods to implement the `signed sqrt function`  in pytorch or torch? \r\n\r\n```bash\r\nth> net:add(nn.Sqrt())\r\nnn.Sequential {\r\n  [input -> (1) -> output]\r\n  (1): nn.Sqrt\r\n}\r\n\r\nth> a\r\n 4  -4\r\n[torch.DoubleTensor of size 1x2]\r\n\r\nth> net:forward(a)\r\n2.000000 nan\r\n```\r\nWould like to achieve the result like:\r\n```bash\r\nth> \r\n2.000000 -2.000000\r\n```"}