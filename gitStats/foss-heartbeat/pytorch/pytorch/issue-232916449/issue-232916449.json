{"url": "https://api.github.com/repos/pytorch/pytorch/issues/1696", "repository_url": "https://api.github.com/repos/pytorch/pytorch", "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/1696/labels{/name}", "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/1696/comments", "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/1696/events", "html_url": "https://github.com/pytorch/pytorch/issues/1696", "id": 232916449, "node_id": "MDU6SXNzdWUyMzI5MTY0NDk=", "number": 1696, "title": "Compilation with CUDA fails on ubuntu 17.04", "user": {"login": "garibarba", "id": 13115728, "node_id": "MDQ6VXNlcjEzMTE1NzI4", "avatar_url": "https://avatars3.githubusercontent.com/u/13115728?v=4", "gravatar_id": "", "url": "https://api.github.com/users/garibarba", "html_url": "https://github.com/garibarba", "followers_url": "https://api.github.com/users/garibarba/followers", "following_url": "https://api.github.com/users/garibarba/following{/other_user}", "gists_url": "https://api.github.com/users/garibarba/gists{/gist_id}", "starred_url": "https://api.github.com/users/garibarba/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/garibarba/subscriptions", "organizations_url": "https://api.github.com/users/garibarba/orgs", "repos_url": "https://api.github.com/users/garibarba/repos", "events_url": "https://api.github.com/users/garibarba/events{/privacy}", "received_events_url": "https://api.github.com/users/garibarba/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2017-06-01T15:22:16Z", "updated_at": "2017-06-04T10:35:14Z", "closed_at": "2017-06-03T11:57:06Z", "author_association": "NONE", "body_html": "<p>My system:<br>\nUbuntu 17.04<br>\npython 3.5.2 from anaconda<br>\nNvidia driver 381, cuda 8.0.44 from nvidia-cuda-toolkit and cudnn v6 installed with the deb package from nvidia for ubuntu 16.04.</p>\n<p>If I install the 0.1.12 release it works perfectly on CPU and GPU.<br>\nCompilation for CPU works perfectly, but I get the following output when compiling for GPU:</p>\n<blockquote>\n<p>running install<br>\nrunning build_deps<br>\n-- The C compiler identification is GNU 4.8.5<br>\n-- The CXX compiler identification is GNU 4.8.5<br>\n-- Check for working C compiler: /home/guille/anaconda3/bin/cc<br>\n-- Check for working C compiler: /home/guille/anaconda3/bin/cc -- works<br>\n-- Detecting C compiler ABI info<br>\n-- Checking if C linker supports --verbose<br>\n-- Checking if C linker supports --verbose - yes<br>\n-- Detecting C compiler ABI info - done<br>\n-- Detecting C compile features<br>\n-- Detecting C compile features - done<br>\n-- Check for working CXX compiler: /home/guille/anaconda3/bin/c++<br>\n-- Check for working CXX compiler: /home/guille/anaconda3/bin/c++ -- works<br>\n-- Detecting CXX compiler ABI info<br>\n-- Checking if CXX linker supports --verbose<br>\n-- Checking if CXX linker supports --verbose - yes<br>\n-- Detecting CXX compiler ABI info - done<br>\n-- Detecting CXX compile features<br>\n-- Detecting CXX compile features - done<br>\n-- Try OpenMP C flag = [-fopenmp]<br>\n-- Performing Test OpenMP_FLAG_DETECTED<br>\n-- Performing Test OpenMP_FLAG_DETECTED - Success<br>\n-- Try OpenMP CXX flag = [-fopenmp]<br>\n-- Performing Test OpenMP_FLAG_DETECTED<br>\n-- Performing Test OpenMP_FLAG_DETECTED - Success<br>\n-- Found OpenMP: -fopenmp<br>\n-- Compiling with OpenMP support<br>\n-- Could not find hardware support for NEON on this machine.<br>\n-- No OMAP3 processor on this machine.<br>\n-- No OMAP4 processor on this machine.<br>\n-- Looking for cpuid.h<br>\n-- Looking for cpuid.h - found<br>\n-- Performing Test HAVE_GCC_GET_CPUID<br>\n-- Performing Test HAVE_GCC_GET_CPUID - Success<br>\n-- Performing Test NO_GCC_EBX_FPIC_BUG<br>\n-- Performing Test NO_GCC_EBX_FPIC_BUG - Success<br>\n-- Performing Test C_HAS_SSE1_1<br>\n-- Performing Test C_HAS_SSE1_1 - Success<br>\n-- Performing Test C_HAS_SSE2_1<br>\n-- Performing Test C_HAS_SSE2_1 - Success<br>\n-- Performing Test C_HAS_SSE3_1<br>\n-- Performing Test C_HAS_SSE3_1 - Failed<br>\n-- Performing Test C_HAS_SSE3_2<br>\n-- Performing Test C_HAS_SSE3_2 - Success<br>\n-- Performing Test C_HAS_SSE4_1_1<br>\n-- Performing Test C_HAS_SSE4_1_1 - Failed<br>\n-- Performing Test C_HAS_SSE4_1_2<br>\n-- Performing Test C_HAS_SSE4_1_2 - Success<br>\n-- Performing Test C_HAS_SSE4_2_1<br>\n-- Performing Test C_HAS_SSE4_2_1 - Failed<br>\n-- Performing Test C_HAS_SSE4_2_2<br>\n-- Performing Test C_HAS_SSE4_2_2 - Success<br>\n-- Performing Test C_HAS_AVX_1<br>\n-- Performing Test C_HAS_AVX_1 - Failed<br>\n-- Performing Test C_HAS_AVX_2<br>\n-- Performing Test C_HAS_AVX_2 - Success<br>\n-- Performing Test C_HAS_AVX2_1<br>\n-- Performing Test C_HAS_AVX2_1 - Failed<br>\n-- Performing Test C_HAS_AVX2_2<br>\n-- Performing Test C_HAS_AVX2_2 - Success<br>\n-- Performing Test CXX_HAS_SSE1_1<br>\n-- Performing Test CXX_HAS_SSE1_1 - Success<br>\n-- Performing Test CXX_HAS_SSE2_1<br>\n-- Performing Test CXX_HAS_SSE2_1 - Success<br>\n-- Performing Test CXX_HAS_SSE3_1<br>\n-- Performing Test CXX_HAS_SSE3_1 - Failed<br>\n-- Performing Test CXX_HAS_SSE3_2<br>\n-- Performing Test CXX_HAS_SSE3_2 - Success<br>\n-- Performing Test CXX_HAS_SSE4_1_1<br>\n-- Performing Test CXX_HAS_SSE4_1_1 - Failed<br>\n-- Performing Test CXX_HAS_SSE4_1_2<br>\n-- Performing Test CXX_HAS_SSE4_1_2 - Success<br>\n-- Performing Test CXX_HAS_SSE4_2_1<br>\n-- Performing Test CXX_HAS_SSE4_2_1 - Failed<br>\n-- Performing Test CXX_HAS_SSE4_2_2<br>\n-- Performing Test CXX_HAS_SSE4_2_2 - Success<br>\n-- Performing Test CXX_HAS_AVX_1<br>\n-- Performing Test CXX_HAS_AVX_1 - Failed<br>\n-- Performing Test CXX_HAS_AVX_2<br>\n-- Performing Test CXX_HAS_AVX_2 - Success<br>\n-- Performing Test CXX_HAS_AVX2_1<br>\n-- Performing Test CXX_HAS_AVX2_1 - Failed<br>\n-- Performing Test CXX_HAS_AVX2_2<br>\n-- Performing Test CXX_HAS_AVX2_2 - Success<br>\n-- SSE2 Found<br>\n-- SSE3 Found<br>\n-- AVX Found<br>\n-- AVX2 Found<br>\n-- Performing Test HAS_C11_ATOMICS<br>\n-- Performing Test HAS_C11_ATOMICS - Failed<br>\n-- Performing Test HAS_MSC_ATOMICS<br>\n-- Performing Test HAS_MSC_ATOMICS - Failed<br>\n-- Performing Test HAS_GCC_ATOMICS<br>\n-- Performing Test HAS_GCC_ATOMICS - Success<br>\n-- TH_SO_VERSION: 1<br>\n-- Atomics: using GCC intrinsics<br>\n-- Looking for sys/types.h<br>\n-- Looking for sys/types.h - found<br>\n-- Looking for stdint.h<br>\n-- Looking for stdint.h - found<br>\n-- Looking for stddef.h<br>\n-- Looking for stddef.h - found<br>\n-- Check size of void*<br>\n-- Check size of void* - done<br>\n-- Checking for [mkl_gf_lp64 - mkl_gnu_thread - mkl_core - iomp5 - pthread - m]<br>\n--   Library mkl_gf_lp64: not found<br>\n-- Checking for [mkl_gf_lp64 - mkl_intel_thread - mkl_core - iomp5 - pthread - m]<br>\n--   Library mkl_gf_lp64: not found<br>\n-- Checking for [mkl_gf - mkl_gnu_thread - mkl_core - iomp5 - pthread - m]<br>\n--   Library mkl_gf: not found<br>\n-- Checking for [mkl_gf - mkl_intel_thread - mkl_core - iomp5 - pthread - m]<br>\n--   Library mkl_gf: not found<br>\n-- Checking for [mkl_intel_lp64 - mkl_gnu_thread - mkl_core - iomp5 - pthread - m]<br>\n--   Library mkl_intel_lp64: /home/guille/anaconda3/lib/libmkl_intel_lp64.so<br>\n--   Library mkl_gnu_thread: not found<br>\n-- Checking for [mkl_intel_lp64 - mkl_intel_thread - mkl_core - iomp5 - pthread - m]<br>\n--   Library mkl_intel_lp64: /home/guille/anaconda3/lib/libmkl_intel_lp64.so<br>\n--   Library mkl_intel_thread: /home/guille/anaconda3/lib/libmkl_intel_thread.so<br>\n--   Library mkl_core: /home/guille/anaconda3/lib/libmkl_core.so<br>\n--   Library iomp5: /home/guille/anaconda3/lib/libiomp5.so<br>\n--   Library pthread: /usr/lib/x86_64-linux-gnu/libpthread.so<br>\n--   Library m: /usr/lib/x86_64-linux-gnu/libm.so<br>\n-- Looking for cblas_sgemm<br>\n-- Looking for cblas_sgemm - found<br>\n-- MKL library found<br>\n-- Performing Test BLAS_F2C_DOUBLE_WORKS<br>\n-- Performing Test BLAS_F2C_DOUBLE_WORKS - Failed<br>\n-- Performing Test BLAS_F2C_FLOAT_WORKS<br>\n-- Performing Test BLAS_F2C_FLOAT_WORKS - Success<br>\n-- Found a library with BLAS API (mkl).<br>\n-- Found a library with LAPACK API. (mkl)<br>\n-- Looking for clock_gettime in rt<br>\n-- Looking for clock_gettime in rt - found<br>\n-- Looking for mmap<br>\n-- Looking for mmap - found<br>\n-- Looking for shm_open<br>\n-- Looking for shm_open - found<br>\n-- Looking for shm_unlink<br>\n-- Looking for shm_unlink - found<br>\n-- Looking for malloc_usable_size<br>\n-- Looking for malloc_usable_size - found<br>\n-- Performing Test C_HAS_THREAD<br>\n-- Performing Test C_HAS_THREAD - Success<br>\n-- Configuring done<br>\n-- Generating done<br>\nCMake Warning:<br>\nManually-specified variables were not used by the project:</p>\n<pre><code>CUDA_NVCC_FLAGS\nNO_CUDA\nTHCS_LIBRARIES\nTHCUNN_SO_VERSION\nTHC_LIBRARIES\nTHC_SO_VERSION\nTHD_SO_VERSION\nTHNN_SO_VERSION\nTHPP_LIBRARIES\nTHS_LIBRARIES\nTH_INCLUDE_PATH\nTH_LIB_PATH\nTorch_FOUND\n</code></pre>\n<p>-- Build files have been written to: /home/guille/git/pytorch/torch/lib/build/TH<br>\nScanning dependencies of target TH<br>\n[  5%] Building C object CMakeFiles/TH.dir/THGeneral.c.o<br>\n[ 10%] Building C object CMakeFiles/TH.dir/THHalf.c.o<br>\n[ 15%] Building C object CMakeFiles/TH.dir/THAllocator.c.o<br>\n[ 20%] Building C object CMakeFiles/TH.dir/THStorage.c.o<br>\n[ 25%] Building C object CMakeFiles/TH.dir/THTensor.c.o<br>\n[ 35%] Building C object CMakeFiles/TH.dir/THBlas.c.o<br>\n[ 35%] Building C object CMakeFiles/TH.dir/THLapack.c.o<br>\n[ 40%] Building C object CMakeFiles/TH.dir/THLogAdd.c.o<br>\n[ 45%] Building C object CMakeFiles/TH.dir/THRandom.c.o<br>\n[ 50%] Building C object CMakeFiles/TH.dir/THFile.c.o<br>\n[ 55%] Building C object CMakeFiles/TH.dir/THDiskFile.c.o<br>\n[ 60%] Building C object CMakeFiles/TH.dir/THMemoryFile.c.o<br>\n[ 65%] Building C object CMakeFiles/TH.dir/THAtomic.c.o<br>\n[ 70%] Building C object CMakeFiles/TH.dir/THVector.c.o<br>\n[ 75%] Building C object CMakeFiles/TH.dir/generic/simd/convolve5x5_sse.c.o<br>\n[ 80%] Building C object CMakeFiles/TH.dir/generic/simd/convolve.c.o<br>\n[ 85%] Building C object CMakeFiles/TH.dir/vector/AVX.c.o<br>\n[ 90%] Building C object CMakeFiles/TH.dir/generic/simd/convolve5x5_avx.c.o<br>\n[ 95%] Building C object CMakeFiles/TH.dir/vector/AVX2.c.o<br>\n[100%] Linking C shared library libTH.so<br>\n[100%] Built target TH<br>\nInstall the project...<br>\n-- Install configuration: \"Release\"<br>\n-- Installing: /home/guille/git/pytorch/torch/lib/tmp_install/lib/libTH.so.1<br>\n-- Installing: /home/guille/git/pytorch/torch/lib/tmp_install/lib/libTH.so<br>\n-- Set runtime path of \"/home/guille/git/pytorch/torch/lib/tmp_install/lib/libTH.so.1\" to \"\"<br>\n-- Installing: /home/guille/git/pytorch/torch/lib/tmp_install/include/TH/TH.h<br>\n-- Installing: /home/guille/git/pytorch/torch/lib/tmp_install/include/TH/THAllocator.h<br>\n-- Installing: /home/guille/git/pytorch/torch/lib/tmp_install/include/TH/THMath.h<br>\n-- Installing: /home/guille/git/pytorch/torch/lib/tmp_install/include/TH/THBlas.h<br>\n-- Installing: /home/guille/git/pytorch/torch/lib/tmp_install/include/TH/THDiskFile.h<br>\n-- Installing: /home/guille/git/pytorch/torch/lib/tmp_install/include/TH/THFile.h<br>\n-- Installing: /home/guille/git/pytorch/torch/lib/tmp_install/include/TH/THFilePrivate.h<br>\n-- Installing: /home/guille/git/pytorch/torch/lib/tmp_install/include/TH/THGeneral.h<br>\n-- Installing: /home/guille/git/pytorch/torch/lib/tmp_install/include/TH/THGenerateAllTypes.h<br>\n-- Installing: /home/guille/git/pytorch/torch/lib/tmp_install/include/TH/THGenerateDoubleType.h<br>\n-- Installing: /home/guille/git/pytorch/torch/lib/tmp_install/include/TH/THGenerateFloatType.h<br>\n-- Installing: /home/guille/git/pytorch/torch/lib/tmp_install/include/TH/THGenerateHalfType.h<br>\n-- Installing: /home/guille/git/pytorch/torch/lib/tmp_install/include/TH/THGenerateLongType.h<br>\n-- Installing: /home/guille/git/pytorch/torch/lib/tmp_install/include/TH/THGenerateIntType.h<br>\n-- Installing: /home/guille/git/pytorch/torch/lib/tmp_install/include/TH/THGenerateShortType.h<br>\n-- Installing: /home/guille/git/pytorch/torch/lib/tmp_install/include/TH/THGenerateCharType.h<br>\n-- Installing: /home/guille/git/pytorch/torch/lib/tmp_install/include/TH/THGenerateByteType.h<br>\n-- Installing: /home/guille/git/pytorch/torch/lib/tmp_install/include/TH/THGenerateFloatTypes.h<br>\n-- Installing: /home/guille/git/pytorch/torch/lib/tmp_install/include/TH/THGenerateIntTypes.h<br>\n-- Installing: /home/guille/git/pytorch/torch/lib/tmp_install/include/TH/THLapack.h<br>\n-- Installing: /home/guille/git/pytorch/torch/lib/tmp_install/include/TH/THLogAdd.h<br>\n-- Installing: /home/guille/git/pytorch/torch/lib/tmp_install/include/TH/THMemoryFile.h<br>\n-- Installing: /home/guille/git/pytorch/torch/lib/tmp_install/include/TH/THRandom.h<br>\n-- Installing: /home/guille/git/pytorch/torch/lib/tmp_install/include/TH/THStorage.h<br>\n-- Installing: /home/guille/git/pytorch/torch/lib/tmp_install/include/TH/THTensor.h<br>\n-- Installing: /home/guille/git/pytorch/torch/lib/tmp_install/include/TH/THTensorApply.h<br>\n-- Installing: /home/guille/git/pytorch/torch/lib/tmp_install/include/TH/THTensorDimApply.h<br>\n-- Installing: /home/guille/git/pytorch/torch/lib/tmp_install/include/TH/THTensorMacros.h<br>\n-- Installing: /home/guille/git/pytorch/torch/lib/tmp_install/include/TH/THVector.h<br>\n-- Installing: /home/guille/git/pytorch/torch/lib/tmp_install/include/TH/THAtomic.h<br>\n-- Installing: /home/guille/git/pytorch/torch/lib/tmp_install/include/TH/THHalf.h<br>\n-- Installing: /home/guille/git/pytorch/torch/lib/tmp_install/include/TH/vector/AVX.h<br>\n-- Installing: /home/guille/git/pytorch/torch/lib/tmp_install/include/TH/vector/AVX2.h<br>\n-- Installing: /home/guille/git/pytorch/torch/lib/tmp_install/include/TH/generic/THBlas.c<br>\n-- Installing: /home/guille/git/pytorch/torch/lib/tmp_install/include/TH/generic/THBlas.h<br>\n-- Installing: /home/guille/git/pytorch/torch/lib/tmp_install/include/TH/generic/THLapack.c<br>\n-- Installing: /home/guille/git/pytorch/torch/lib/tmp_install/include/TH/generic/THLapack.h<br>\n-- Installing: /home/guille/git/pytorch/torch/lib/tmp_install/include/TH/generic/THStorage.c<br>\n-- Installing: /home/guille/git/pytorch/torch/lib/tmp_install/include/TH/generic/THStorage.h<br>\n-- Installing: /home/guille/git/pytorch/torch/lib/tmp_install/include/TH/generic/THStorageCopy.c<br>\n-- Installing: /home/guille/git/pytorch/torch/lib/tmp_install/include/TH/generic/THStorageCopy.h<br>\n-- Installing: /home/guille/git/pytorch/torch/lib/tmp_install/include/TH/generic/THTensor.c<br>\n-- Installing: /home/guille/git/pytorch/torch/lib/tmp_install/include/TH/generic/THTensor.h<br>\n-- Installing: /home/guille/git/pytorch/torch/lib/tmp_install/include/TH/generic/THTensorConv.c<br>\n-- Installing: /home/guille/git/pytorch/torch/lib/tmp_install/include/TH/generic/THTensorConv.h<br>\n-- Installing: /home/guille/git/pytorch/torch/lib/tmp_install/include/TH/generic/THTensorCopy.c<br>\n-- Installing: /home/guille/git/pytorch/torch/lib/tmp_install/include/TH/generic/THTensorCopy.h<br>\n-- Installing: /home/guille/git/pytorch/torch/lib/tmp_install/include/TH/generic/THTensorLapack.c<br>\n-- Installing: /home/guille/git/pytorch/torch/lib/tmp_install/include/TH/generic/THTensorLapack.h<br>\n-- Installing: /home/guille/git/pytorch/torch/lib/tmp_install/include/TH/generic/THTensorMath.c<br>\n-- Installing: /home/guille/git/pytorch/torch/lib/tmp_install/include/TH/generic/THTensorMath.h<br>\n-- Installing: /home/guille/git/pytorch/torch/lib/tmp_install/include/TH/generic/THTensorRandom.c<br>\n-- Installing: /home/guille/git/pytorch/torch/lib/tmp_install/include/TH/generic/THTensorRandom.h<br>\n-- Installing: /home/guille/git/pytorch/torch/lib/tmp_install/include/TH/generic/THVectorDispatch.c<br>\n-- Installing: /home/guille/git/pytorch/torch/lib/tmp_install/include/TH/generic/THVector.h<br>\n-- Installing: /home/guille/git/pytorch/torch/lib/tmp_install/share/cmake/TH/THConfig.cmake<br>\n-- The C compiler identification is GNU 4.8.5<br>\n-- The CXX compiler identification is GNU 4.8.5<br>\n-- Check for working C compiler: /home/guille/anaconda3/bin/cc<br>\n-- Check for working C compiler: /home/guille/anaconda3/bin/cc -- works<br>\n-- Detecting C compiler ABI info<br>\n-- Checking if C linker supports --verbose<br>\n-- Checking if C linker supports --verbose - yes<br>\n-- Detecting C compiler ABI info - done<br>\n-- Detecting C compile features<br>\n-- Detecting C compile features - done<br>\n-- Check for working CXX compiler: /home/guille/anaconda3/bin/c++<br>\n-- Check for working CXX compiler: /home/guille/anaconda3/bin/c++ -- works<br>\n-- Detecting CXX compiler ABI info<br>\n-- Checking if CXX linker supports --verbose<br>\n-- Checking if CXX linker supports --verbose - yes<br>\n-- Detecting CXX compiler ABI info - done<br>\n-- Detecting CXX compile features<br>\n-- Detecting CXX compile features - done<br>\n-- TH_LIBRARIES: /home/guille/git/pytorch/torch/lib/tmp_install/lib/libTH.so.1<br>\n-- THS_SO_VERSION: 1<br>\n-- Configuring done<br>\n-- Generating done<br>\nCMake Warning:<br>\nManually-specified variables were not used by the project:</p>\n<pre><code>CUDA_NVCC_FLAGS\nNO_CUDA\nTHCS_LIBRARIES\nTHCUNN_SO_VERSION\nTHC_LIBRARIES\nTHC_SO_VERSION\nTHD_SO_VERSION\nTHNN_SO_VERSION\nTHPP_LIBRARIES\nTHS_LIBRARIES\nTH_SO_VERSION\n</code></pre>\n<p>-- Build files have been written to: /home/guille/git/pytorch/torch/lib/build/THS<br>\nScanning dependencies of target THS<br>\n[ 50%] Building C object CMakeFiles/THS.dir/THSTensor.c.o<br>\n[100%] Linking C shared library libTHS.so<br>\n[100%] Built target THS<br>\nInstall the project...<br>\n-- Install configuration: \"Release\"<br>\n-- Installing: /home/guille/git/pytorch/torch/lib/tmp_install/lib/libTHS.so.1<br>\n-- Installing: /home/guille/git/pytorch/torch/lib/tmp_install/lib/libTHS.so<br>\n-- Set runtime path of \"/home/guille/git/pytorch/torch/lib/tmp_install/lib/libTHS.so.1\" to \"\"<br>\n-- Installing: /home/guille/git/pytorch/torch/lib/tmp_install/include/THS/THS.h<br>\n-- Installing: /home/guille/git/pytorch/torch/lib/tmp_install/include/THS/THSGenerateAllTypes.h<br>\n-- Installing: /home/guille/git/pytorch/torch/lib/tmp_install/include/THS/THSGenerateFloatTypes.h<br>\n-- Installing: /home/guille/git/pytorch/torch/lib/tmp_install/include/THS/THSGenerateIntTypes.h<br>\n-- Installing: /home/guille/git/pytorch/torch/lib/tmp_install/include/THS/THSTensor.h<br>\n-- Installing: /home/guille/git/pytorch/torch/lib/tmp_install/include/THS/generic/THSTensor.c<br>\n-- Installing: /home/guille/git/pytorch/torch/lib/tmp_install/include/THS/generic/THSTensor.h<br>\n-- Installing: /home/guille/git/pytorch/torch/lib/tmp_install/include/THS/generic/THSTensorMath.c<br>\n-- Installing: /home/guille/git/pytorch/torch/lib/tmp_install/include/THS/generic/THSTensorMath.h<br>\n-- The C compiler identification is GNU 4.8.5<br>\n-- The CXX compiler identification is GNU 4.8.5<br>\n-- Check for working C compiler: /home/guille/anaconda3/bin/cc<br>\n-- Check for working C compiler: /home/guille/anaconda3/bin/cc -- works<br>\n-- Detecting C compiler ABI info<br>\n-- Checking if C linker supports --verbose<br>\n-- Checking if C linker supports --verbose - yes<br>\n-- Detecting C compiler ABI info - done<br>\n-- Detecting C compile features<br>\n-- Detecting C compile features - done<br>\n-- Check for working CXX compiler: /home/guille/anaconda3/bin/c++<br>\n-- Check for working CXX compiler: /home/guille/anaconda3/bin/c++ -- works<br>\n-- Detecting CXX compiler ABI info<br>\n-- Checking if CXX linker supports --verbose<br>\n-- Checking if CXX linker supports --verbose - yes<br>\n-- Detecting CXX compiler ABI info - done<br>\n-- Detecting CXX compile features<br>\n-- Detecting CXX compile features - done<br>\n-- TH_LIBRARIES: /home/guille/git/pytorch/torch/lib/tmp_install/lib/libTH.so.1<br>\n-- Try OpenMP C flag = [-fopenmp]<br>\n-- Performing Test OpenMP_FLAG_DETECTED<br>\n-- Performing Test OpenMP_FLAG_DETECTED - Success<br>\n-- Try OpenMP CXX flag = [-fopenmp]<br>\n-- Performing Test OpenMP_FLAG_DETECTED<br>\n-- Performing Test OpenMP_FLAG_DETECTED - Success<br>\n-- Found OpenMP: -fopenmp<br>\n-- Compiling with OpenMP support<br>\nCMake Warning (dev) at CMakeLists.txt:61 (LINK_DIRECTORIES):<br>\nThis command specifies the relative path</p>\n<p>as a link directory.</p>\n<p>Policy CMP0015 is not set: link_directories() treats paths relative to the<br>\nsource dir.  Run \"cmake --help-policy CMP0015\" for policy details.  Use the<br>\ncmake_policy command to set the policy and suppress this warning.<br>\nThis warning is for project developers.  Use -Wno-dev to suppress it.</p>\n<p>-- THNN_SO_VERSION: 1<br>\n-- Configuring done<br>\n-- Generating done<br>\nCMake Warning:<br>\nManually-specified variables were not used by the project:</p>\n<pre><code>CUDA_NVCC_FLAGS\nNO_CUDA\nTHCS_LIBRARIES\nTHCUNN_SO_VERSION\nTHC_LIBRARIES\nTHC_SO_VERSION\nTHD_SO_VERSION\nTHPP_LIBRARIES\nTHS_LIBRARIES\nTH_INCLUDE_PATH\nTH_LIB_PATH\nTH_SO_VERSION\n</code></pre>\n<p>-- Build files have been written to: /home/guille/git/pytorch/torch/lib/build/THNN<br>\nScanning dependencies of target THNN<br>\n[ 50%] Building C object CMakeFiles/THNN.dir/init.c.o<br>\n[100%] Linking C shared library libTHNN.so<br>\n[100%] Built target THNN<br>\nInstall the project...<br>\n-- Install configuration: \"Release\"<br>\n-- Installing: /home/guille/git/pytorch/torch/lib/tmp_install/lib/libTHNN.so.1<br>\n-- Installing: /home/guille/git/pytorch/torch/lib/tmp_install/lib/libTHNN.so<br>\n-- Set runtime path of \"/home/guille/git/pytorch/torch/lib/tmp_install/lib/libTHNN.so.1\" to \"\"<br>\n-- Installing: /home/guille/git/pytorch/torch/lib/tmp_install/include/THNN/THNN.h<br>\n-- Installing: /home/guille/git/pytorch/torch/lib/tmp_install/include/THNN/generic/THNN.h<br>\n-- The C compiler identification is GNU 4.8.5<br>\n-- The CXX compiler identification is GNU 4.8.5<br>\n-- Check for working C compiler: /home/guille/anaconda3/bin/cc<br>\n-- Check for working C compiler: /home/guille/anaconda3/bin/cc -- works<br>\n-- Detecting C compiler ABI info<br>\n-- Checking if C linker supports --verbose<br>\n-- Checking if C linker supports --verbose - yes<br>\n-- Detecting C compiler ABI info - done<br>\n-- Detecting C compile features<br>\n-- Detecting C compile features - done<br>\n-- Check for working CXX compiler: /home/guille/anaconda3/bin/c++<br>\n-- Check for working CXX compiler: /home/guille/anaconda3/bin/c++ -- works<br>\n-- Detecting CXX compiler ABI info<br>\n-- Checking if CXX linker supports --verbose<br>\n-- Checking if CXX linker supports --verbose - yes<br>\n-- Detecting CXX compiler ABI info - done<br>\n-- Detecting CXX compile features<br>\n-- Detecting CXX compile features - done<br>\n-- Removing -DNDEBUG from compile flags<br>\n-- TH_LIBRARIES: /home/guille/git/pytorch/torch/lib/tmp_install/lib/libTH.so.1<br>\nCMake Error at /home/guille/anaconda3/share/cmake-3.6/Modules/FindPackageHandleStandardArgs.cmake:148 (message):<br>\nCould NOT find CUDA (missing: CUDA_CUDART_LIBRARY) (found suitable version<br>\n\"8.0\", minimum required is \"5.5\")<br>\nCall Stack (most recent call first):<br>\n/home/guille/anaconda3/share/cmake-3.6/Modules/FindPackageHandleStandardArgs.cmake:388 (_FPHSA_FAILURE_MESSAGE)<br>\n/home/guille/git/pytorch/cmake/FindCUDA/FindCUDA.cmake:1013 (find_package_handle_standard_args)<br>\nCMakeLists.txt:28 (FIND_PACKAGE)</p>\n<p>-- Configuring incomplete, errors occurred!<br>\nSee also \"/home/guille/git/pytorch/torch/lib/build/THC/CMakeFiles/CMakeOutput.log\".</p>\n</blockquote>\n<p>I have tried configuring the environment variables PATH and LD_LIBRARY_PATH, but this does not help:</p>\n<blockquote>\n<p>export PATH=/home/guille/anaconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/snap/bin:/usr/lib/nvidia-381:/usr/lib/nvidia-381/bin<br>\nexport LD_LIBRARY_PATH=/usr/lib/x86_64-linux-gnu::/usr/lib/nvidia-381:/usr/lib32/nvidia-381:/usr/lib:/usr/lib32</p>\n</blockquote>\n<p>It might be related to <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load issue title\" data-id=\"203930295\" data-permission-text=\"Issue title is private\" data-url=\"https://github.com/pytorch/pytorch/issues/638\" data-hovercard-type=\"issue\" data-hovercard-url=\"/pytorch/pytorch/issues/638/hovercard\" href=\"https://github.com/pytorch/pytorch/issues/638\">#638</a> but I have not been able to fix this.</p>", "body_text": "My system:\nUbuntu 17.04\npython 3.5.2 from anaconda\nNvidia driver 381, cuda 8.0.44 from nvidia-cuda-toolkit and cudnn v6 installed with the deb package from nvidia for ubuntu 16.04.\nIf I install the 0.1.12 release it works perfectly on CPU and GPU.\nCompilation for CPU works perfectly, but I get the following output when compiling for GPU:\n\nrunning install\nrunning build_deps\n-- The C compiler identification is GNU 4.8.5\n-- The CXX compiler identification is GNU 4.8.5\n-- Check for working C compiler: /home/guille/anaconda3/bin/cc\n-- Check for working C compiler: /home/guille/anaconda3/bin/cc -- works\n-- Detecting C compiler ABI info\n-- Checking if C linker supports --verbose\n-- Checking if C linker supports --verbose - yes\n-- Detecting C compiler ABI info - done\n-- Detecting C compile features\n-- Detecting C compile features - done\n-- Check for working CXX compiler: /home/guille/anaconda3/bin/c++\n-- Check for working CXX compiler: /home/guille/anaconda3/bin/c++ -- works\n-- Detecting CXX compiler ABI info\n-- Checking if CXX linker supports --verbose\n-- Checking if CXX linker supports --verbose - yes\n-- Detecting CXX compiler ABI info - done\n-- Detecting CXX compile features\n-- Detecting CXX compile features - done\n-- Try OpenMP C flag = [-fopenmp]\n-- Performing Test OpenMP_FLAG_DETECTED\n-- Performing Test OpenMP_FLAG_DETECTED - Success\n-- Try OpenMP CXX flag = [-fopenmp]\n-- Performing Test OpenMP_FLAG_DETECTED\n-- Performing Test OpenMP_FLAG_DETECTED - Success\n-- Found OpenMP: -fopenmp\n-- Compiling with OpenMP support\n-- Could not find hardware support for NEON on this machine.\n-- No OMAP3 processor on this machine.\n-- No OMAP4 processor on this machine.\n-- Looking for cpuid.h\n-- Looking for cpuid.h - found\n-- Performing Test HAVE_GCC_GET_CPUID\n-- Performing Test HAVE_GCC_GET_CPUID - Success\n-- Performing Test NO_GCC_EBX_FPIC_BUG\n-- Performing Test NO_GCC_EBX_FPIC_BUG - Success\n-- Performing Test C_HAS_SSE1_1\n-- Performing Test C_HAS_SSE1_1 - Success\n-- Performing Test C_HAS_SSE2_1\n-- Performing Test C_HAS_SSE2_1 - Success\n-- Performing Test C_HAS_SSE3_1\n-- Performing Test C_HAS_SSE3_1 - Failed\n-- Performing Test C_HAS_SSE3_2\n-- Performing Test C_HAS_SSE3_2 - Success\n-- Performing Test C_HAS_SSE4_1_1\n-- Performing Test C_HAS_SSE4_1_1 - Failed\n-- Performing Test C_HAS_SSE4_1_2\n-- Performing Test C_HAS_SSE4_1_2 - Success\n-- Performing Test C_HAS_SSE4_2_1\n-- Performing Test C_HAS_SSE4_2_1 - Failed\n-- Performing Test C_HAS_SSE4_2_2\n-- Performing Test C_HAS_SSE4_2_2 - Success\n-- Performing Test C_HAS_AVX_1\n-- Performing Test C_HAS_AVX_1 - Failed\n-- Performing Test C_HAS_AVX_2\n-- Performing Test C_HAS_AVX_2 - Success\n-- Performing Test C_HAS_AVX2_1\n-- Performing Test C_HAS_AVX2_1 - Failed\n-- Performing Test C_HAS_AVX2_2\n-- Performing Test C_HAS_AVX2_2 - Success\n-- Performing Test CXX_HAS_SSE1_1\n-- Performing Test CXX_HAS_SSE1_1 - Success\n-- Performing Test CXX_HAS_SSE2_1\n-- Performing Test CXX_HAS_SSE2_1 - Success\n-- Performing Test CXX_HAS_SSE3_1\n-- Performing Test CXX_HAS_SSE3_1 - Failed\n-- Performing Test CXX_HAS_SSE3_2\n-- Performing Test CXX_HAS_SSE3_2 - Success\n-- Performing Test CXX_HAS_SSE4_1_1\n-- Performing Test CXX_HAS_SSE4_1_1 - Failed\n-- Performing Test CXX_HAS_SSE4_1_2\n-- Performing Test CXX_HAS_SSE4_1_2 - Success\n-- Performing Test CXX_HAS_SSE4_2_1\n-- Performing Test CXX_HAS_SSE4_2_1 - Failed\n-- Performing Test CXX_HAS_SSE4_2_2\n-- Performing Test CXX_HAS_SSE4_2_2 - Success\n-- Performing Test CXX_HAS_AVX_1\n-- Performing Test CXX_HAS_AVX_1 - Failed\n-- Performing Test CXX_HAS_AVX_2\n-- Performing Test CXX_HAS_AVX_2 - Success\n-- Performing Test CXX_HAS_AVX2_1\n-- Performing Test CXX_HAS_AVX2_1 - Failed\n-- Performing Test CXX_HAS_AVX2_2\n-- Performing Test CXX_HAS_AVX2_2 - Success\n-- SSE2 Found\n-- SSE3 Found\n-- AVX Found\n-- AVX2 Found\n-- Performing Test HAS_C11_ATOMICS\n-- Performing Test HAS_C11_ATOMICS - Failed\n-- Performing Test HAS_MSC_ATOMICS\n-- Performing Test HAS_MSC_ATOMICS - Failed\n-- Performing Test HAS_GCC_ATOMICS\n-- Performing Test HAS_GCC_ATOMICS - Success\n-- TH_SO_VERSION: 1\n-- Atomics: using GCC intrinsics\n-- Looking for sys/types.h\n-- Looking for sys/types.h - found\n-- Looking for stdint.h\n-- Looking for stdint.h - found\n-- Looking for stddef.h\n-- Looking for stddef.h - found\n-- Check size of void*\n-- Check size of void* - done\n-- Checking for [mkl_gf_lp64 - mkl_gnu_thread - mkl_core - iomp5 - pthread - m]\n--   Library mkl_gf_lp64: not found\n-- Checking for [mkl_gf_lp64 - mkl_intel_thread - mkl_core - iomp5 - pthread - m]\n--   Library mkl_gf_lp64: not found\n-- Checking for [mkl_gf - mkl_gnu_thread - mkl_core - iomp5 - pthread - m]\n--   Library mkl_gf: not found\n-- Checking for [mkl_gf - mkl_intel_thread - mkl_core - iomp5 - pthread - m]\n--   Library mkl_gf: not found\n-- Checking for [mkl_intel_lp64 - mkl_gnu_thread - mkl_core - iomp5 - pthread - m]\n--   Library mkl_intel_lp64: /home/guille/anaconda3/lib/libmkl_intel_lp64.so\n--   Library mkl_gnu_thread: not found\n-- Checking for [mkl_intel_lp64 - mkl_intel_thread - mkl_core - iomp5 - pthread - m]\n--   Library mkl_intel_lp64: /home/guille/anaconda3/lib/libmkl_intel_lp64.so\n--   Library mkl_intel_thread: /home/guille/anaconda3/lib/libmkl_intel_thread.so\n--   Library mkl_core: /home/guille/anaconda3/lib/libmkl_core.so\n--   Library iomp5: /home/guille/anaconda3/lib/libiomp5.so\n--   Library pthread: /usr/lib/x86_64-linux-gnu/libpthread.so\n--   Library m: /usr/lib/x86_64-linux-gnu/libm.so\n-- Looking for cblas_sgemm\n-- Looking for cblas_sgemm - found\n-- MKL library found\n-- Performing Test BLAS_F2C_DOUBLE_WORKS\n-- Performing Test BLAS_F2C_DOUBLE_WORKS - Failed\n-- Performing Test BLAS_F2C_FLOAT_WORKS\n-- Performing Test BLAS_F2C_FLOAT_WORKS - Success\n-- Found a library with BLAS API (mkl).\n-- Found a library with LAPACK API. (mkl)\n-- Looking for clock_gettime in rt\n-- Looking for clock_gettime in rt - found\n-- Looking for mmap\n-- Looking for mmap - found\n-- Looking for shm_open\n-- Looking for shm_open - found\n-- Looking for shm_unlink\n-- Looking for shm_unlink - found\n-- Looking for malloc_usable_size\n-- Looking for malloc_usable_size - found\n-- Performing Test C_HAS_THREAD\n-- Performing Test C_HAS_THREAD - Success\n-- Configuring done\n-- Generating done\nCMake Warning:\nManually-specified variables were not used by the project:\nCUDA_NVCC_FLAGS\nNO_CUDA\nTHCS_LIBRARIES\nTHCUNN_SO_VERSION\nTHC_LIBRARIES\nTHC_SO_VERSION\nTHD_SO_VERSION\nTHNN_SO_VERSION\nTHPP_LIBRARIES\nTHS_LIBRARIES\nTH_INCLUDE_PATH\nTH_LIB_PATH\nTorch_FOUND\n\n-- Build files have been written to: /home/guille/git/pytorch/torch/lib/build/TH\nScanning dependencies of target TH\n[  5%] Building C object CMakeFiles/TH.dir/THGeneral.c.o\n[ 10%] Building C object CMakeFiles/TH.dir/THHalf.c.o\n[ 15%] Building C object CMakeFiles/TH.dir/THAllocator.c.o\n[ 20%] Building C object CMakeFiles/TH.dir/THStorage.c.o\n[ 25%] Building C object CMakeFiles/TH.dir/THTensor.c.o\n[ 35%] Building C object CMakeFiles/TH.dir/THBlas.c.o\n[ 35%] Building C object CMakeFiles/TH.dir/THLapack.c.o\n[ 40%] Building C object CMakeFiles/TH.dir/THLogAdd.c.o\n[ 45%] Building C object CMakeFiles/TH.dir/THRandom.c.o\n[ 50%] Building C object CMakeFiles/TH.dir/THFile.c.o\n[ 55%] Building C object CMakeFiles/TH.dir/THDiskFile.c.o\n[ 60%] Building C object CMakeFiles/TH.dir/THMemoryFile.c.o\n[ 65%] Building C object CMakeFiles/TH.dir/THAtomic.c.o\n[ 70%] Building C object CMakeFiles/TH.dir/THVector.c.o\n[ 75%] Building C object CMakeFiles/TH.dir/generic/simd/convolve5x5_sse.c.o\n[ 80%] Building C object CMakeFiles/TH.dir/generic/simd/convolve.c.o\n[ 85%] Building C object CMakeFiles/TH.dir/vector/AVX.c.o\n[ 90%] Building C object CMakeFiles/TH.dir/generic/simd/convolve5x5_avx.c.o\n[ 95%] Building C object CMakeFiles/TH.dir/vector/AVX2.c.o\n[100%] Linking C shared library libTH.so\n[100%] Built target TH\nInstall the project...\n-- Install configuration: \"Release\"\n-- Installing: /home/guille/git/pytorch/torch/lib/tmp_install/lib/libTH.so.1\n-- Installing: /home/guille/git/pytorch/torch/lib/tmp_install/lib/libTH.so\n-- Set runtime path of \"/home/guille/git/pytorch/torch/lib/tmp_install/lib/libTH.so.1\" to \"\"\n-- Installing: /home/guille/git/pytorch/torch/lib/tmp_install/include/TH/TH.h\n-- Installing: /home/guille/git/pytorch/torch/lib/tmp_install/include/TH/THAllocator.h\n-- Installing: /home/guille/git/pytorch/torch/lib/tmp_install/include/TH/THMath.h\n-- Installing: /home/guille/git/pytorch/torch/lib/tmp_install/include/TH/THBlas.h\n-- Installing: /home/guille/git/pytorch/torch/lib/tmp_install/include/TH/THDiskFile.h\n-- Installing: /home/guille/git/pytorch/torch/lib/tmp_install/include/TH/THFile.h\n-- Installing: /home/guille/git/pytorch/torch/lib/tmp_install/include/TH/THFilePrivate.h\n-- Installing: /home/guille/git/pytorch/torch/lib/tmp_install/include/TH/THGeneral.h\n-- Installing: /home/guille/git/pytorch/torch/lib/tmp_install/include/TH/THGenerateAllTypes.h\n-- Installing: /home/guille/git/pytorch/torch/lib/tmp_install/include/TH/THGenerateDoubleType.h\n-- Installing: /home/guille/git/pytorch/torch/lib/tmp_install/include/TH/THGenerateFloatType.h\n-- Installing: /home/guille/git/pytorch/torch/lib/tmp_install/include/TH/THGenerateHalfType.h\n-- Installing: /home/guille/git/pytorch/torch/lib/tmp_install/include/TH/THGenerateLongType.h\n-- Installing: /home/guille/git/pytorch/torch/lib/tmp_install/include/TH/THGenerateIntType.h\n-- Installing: /home/guille/git/pytorch/torch/lib/tmp_install/include/TH/THGenerateShortType.h\n-- Installing: /home/guille/git/pytorch/torch/lib/tmp_install/include/TH/THGenerateCharType.h\n-- Installing: /home/guille/git/pytorch/torch/lib/tmp_install/include/TH/THGenerateByteType.h\n-- Installing: /home/guille/git/pytorch/torch/lib/tmp_install/include/TH/THGenerateFloatTypes.h\n-- Installing: /home/guille/git/pytorch/torch/lib/tmp_install/include/TH/THGenerateIntTypes.h\n-- Installing: /home/guille/git/pytorch/torch/lib/tmp_install/include/TH/THLapack.h\n-- Installing: /home/guille/git/pytorch/torch/lib/tmp_install/include/TH/THLogAdd.h\n-- Installing: /home/guille/git/pytorch/torch/lib/tmp_install/include/TH/THMemoryFile.h\n-- Installing: /home/guille/git/pytorch/torch/lib/tmp_install/include/TH/THRandom.h\n-- Installing: /home/guille/git/pytorch/torch/lib/tmp_install/include/TH/THStorage.h\n-- Installing: /home/guille/git/pytorch/torch/lib/tmp_install/include/TH/THTensor.h\n-- Installing: /home/guille/git/pytorch/torch/lib/tmp_install/include/TH/THTensorApply.h\n-- Installing: /home/guille/git/pytorch/torch/lib/tmp_install/include/TH/THTensorDimApply.h\n-- Installing: /home/guille/git/pytorch/torch/lib/tmp_install/include/TH/THTensorMacros.h\n-- Installing: /home/guille/git/pytorch/torch/lib/tmp_install/include/TH/THVector.h\n-- Installing: /home/guille/git/pytorch/torch/lib/tmp_install/include/TH/THAtomic.h\n-- Installing: /home/guille/git/pytorch/torch/lib/tmp_install/include/TH/THHalf.h\n-- Installing: /home/guille/git/pytorch/torch/lib/tmp_install/include/TH/vector/AVX.h\n-- Installing: /home/guille/git/pytorch/torch/lib/tmp_install/include/TH/vector/AVX2.h\n-- Installing: /home/guille/git/pytorch/torch/lib/tmp_install/include/TH/generic/THBlas.c\n-- Installing: /home/guille/git/pytorch/torch/lib/tmp_install/include/TH/generic/THBlas.h\n-- Installing: /home/guille/git/pytorch/torch/lib/tmp_install/include/TH/generic/THLapack.c\n-- Installing: /home/guille/git/pytorch/torch/lib/tmp_install/include/TH/generic/THLapack.h\n-- Installing: /home/guille/git/pytorch/torch/lib/tmp_install/include/TH/generic/THStorage.c\n-- Installing: /home/guille/git/pytorch/torch/lib/tmp_install/include/TH/generic/THStorage.h\n-- Installing: /home/guille/git/pytorch/torch/lib/tmp_install/include/TH/generic/THStorageCopy.c\n-- Installing: /home/guille/git/pytorch/torch/lib/tmp_install/include/TH/generic/THStorageCopy.h\n-- Installing: /home/guille/git/pytorch/torch/lib/tmp_install/include/TH/generic/THTensor.c\n-- Installing: /home/guille/git/pytorch/torch/lib/tmp_install/include/TH/generic/THTensor.h\n-- Installing: /home/guille/git/pytorch/torch/lib/tmp_install/include/TH/generic/THTensorConv.c\n-- Installing: /home/guille/git/pytorch/torch/lib/tmp_install/include/TH/generic/THTensorConv.h\n-- Installing: /home/guille/git/pytorch/torch/lib/tmp_install/include/TH/generic/THTensorCopy.c\n-- Installing: /home/guille/git/pytorch/torch/lib/tmp_install/include/TH/generic/THTensorCopy.h\n-- Installing: /home/guille/git/pytorch/torch/lib/tmp_install/include/TH/generic/THTensorLapack.c\n-- Installing: /home/guille/git/pytorch/torch/lib/tmp_install/include/TH/generic/THTensorLapack.h\n-- Installing: /home/guille/git/pytorch/torch/lib/tmp_install/include/TH/generic/THTensorMath.c\n-- Installing: /home/guille/git/pytorch/torch/lib/tmp_install/include/TH/generic/THTensorMath.h\n-- Installing: /home/guille/git/pytorch/torch/lib/tmp_install/include/TH/generic/THTensorRandom.c\n-- Installing: /home/guille/git/pytorch/torch/lib/tmp_install/include/TH/generic/THTensorRandom.h\n-- Installing: /home/guille/git/pytorch/torch/lib/tmp_install/include/TH/generic/THVectorDispatch.c\n-- Installing: /home/guille/git/pytorch/torch/lib/tmp_install/include/TH/generic/THVector.h\n-- Installing: /home/guille/git/pytorch/torch/lib/tmp_install/share/cmake/TH/THConfig.cmake\n-- The C compiler identification is GNU 4.8.5\n-- The CXX compiler identification is GNU 4.8.5\n-- Check for working C compiler: /home/guille/anaconda3/bin/cc\n-- Check for working C compiler: /home/guille/anaconda3/bin/cc -- works\n-- Detecting C compiler ABI info\n-- Checking if C linker supports --verbose\n-- Checking if C linker supports --verbose - yes\n-- Detecting C compiler ABI info - done\n-- Detecting C compile features\n-- Detecting C compile features - done\n-- Check for working CXX compiler: /home/guille/anaconda3/bin/c++\n-- Check for working CXX compiler: /home/guille/anaconda3/bin/c++ -- works\n-- Detecting CXX compiler ABI info\n-- Checking if CXX linker supports --verbose\n-- Checking if CXX linker supports --verbose - yes\n-- Detecting CXX compiler ABI info - done\n-- Detecting CXX compile features\n-- Detecting CXX compile features - done\n-- TH_LIBRARIES: /home/guille/git/pytorch/torch/lib/tmp_install/lib/libTH.so.1\n-- THS_SO_VERSION: 1\n-- Configuring done\n-- Generating done\nCMake Warning:\nManually-specified variables were not used by the project:\nCUDA_NVCC_FLAGS\nNO_CUDA\nTHCS_LIBRARIES\nTHCUNN_SO_VERSION\nTHC_LIBRARIES\nTHC_SO_VERSION\nTHD_SO_VERSION\nTHNN_SO_VERSION\nTHPP_LIBRARIES\nTHS_LIBRARIES\nTH_SO_VERSION\n\n-- Build files have been written to: /home/guille/git/pytorch/torch/lib/build/THS\nScanning dependencies of target THS\n[ 50%] Building C object CMakeFiles/THS.dir/THSTensor.c.o\n[100%] Linking C shared library libTHS.so\n[100%] Built target THS\nInstall the project...\n-- Install configuration: \"Release\"\n-- Installing: /home/guille/git/pytorch/torch/lib/tmp_install/lib/libTHS.so.1\n-- Installing: /home/guille/git/pytorch/torch/lib/tmp_install/lib/libTHS.so\n-- Set runtime path of \"/home/guille/git/pytorch/torch/lib/tmp_install/lib/libTHS.so.1\" to \"\"\n-- Installing: /home/guille/git/pytorch/torch/lib/tmp_install/include/THS/THS.h\n-- Installing: /home/guille/git/pytorch/torch/lib/tmp_install/include/THS/THSGenerateAllTypes.h\n-- Installing: /home/guille/git/pytorch/torch/lib/tmp_install/include/THS/THSGenerateFloatTypes.h\n-- Installing: /home/guille/git/pytorch/torch/lib/tmp_install/include/THS/THSGenerateIntTypes.h\n-- Installing: /home/guille/git/pytorch/torch/lib/tmp_install/include/THS/THSTensor.h\n-- Installing: /home/guille/git/pytorch/torch/lib/tmp_install/include/THS/generic/THSTensor.c\n-- Installing: /home/guille/git/pytorch/torch/lib/tmp_install/include/THS/generic/THSTensor.h\n-- Installing: /home/guille/git/pytorch/torch/lib/tmp_install/include/THS/generic/THSTensorMath.c\n-- Installing: /home/guille/git/pytorch/torch/lib/tmp_install/include/THS/generic/THSTensorMath.h\n-- The C compiler identification is GNU 4.8.5\n-- The CXX compiler identification is GNU 4.8.5\n-- Check for working C compiler: /home/guille/anaconda3/bin/cc\n-- Check for working C compiler: /home/guille/anaconda3/bin/cc -- works\n-- Detecting C compiler ABI info\n-- Checking if C linker supports --verbose\n-- Checking if C linker supports --verbose - yes\n-- Detecting C compiler ABI info - done\n-- Detecting C compile features\n-- Detecting C compile features - done\n-- Check for working CXX compiler: /home/guille/anaconda3/bin/c++\n-- Check for working CXX compiler: /home/guille/anaconda3/bin/c++ -- works\n-- Detecting CXX compiler ABI info\n-- Checking if CXX linker supports --verbose\n-- Checking if CXX linker supports --verbose - yes\n-- Detecting CXX compiler ABI info - done\n-- Detecting CXX compile features\n-- Detecting CXX compile features - done\n-- TH_LIBRARIES: /home/guille/git/pytorch/torch/lib/tmp_install/lib/libTH.so.1\n-- Try OpenMP C flag = [-fopenmp]\n-- Performing Test OpenMP_FLAG_DETECTED\n-- Performing Test OpenMP_FLAG_DETECTED - Success\n-- Try OpenMP CXX flag = [-fopenmp]\n-- Performing Test OpenMP_FLAG_DETECTED\n-- Performing Test OpenMP_FLAG_DETECTED - Success\n-- Found OpenMP: -fopenmp\n-- Compiling with OpenMP support\nCMake Warning (dev) at CMakeLists.txt:61 (LINK_DIRECTORIES):\nThis command specifies the relative path\nas a link directory.\nPolicy CMP0015 is not set: link_directories() treats paths relative to the\nsource dir.  Run \"cmake --help-policy CMP0015\" for policy details.  Use the\ncmake_policy command to set the policy and suppress this warning.\nThis warning is for project developers.  Use -Wno-dev to suppress it.\n-- THNN_SO_VERSION: 1\n-- Configuring done\n-- Generating done\nCMake Warning:\nManually-specified variables were not used by the project:\nCUDA_NVCC_FLAGS\nNO_CUDA\nTHCS_LIBRARIES\nTHCUNN_SO_VERSION\nTHC_LIBRARIES\nTHC_SO_VERSION\nTHD_SO_VERSION\nTHPP_LIBRARIES\nTHS_LIBRARIES\nTH_INCLUDE_PATH\nTH_LIB_PATH\nTH_SO_VERSION\n\n-- Build files have been written to: /home/guille/git/pytorch/torch/lib/build/THNN\nScanning dependencies of target THNN\n[ 50%] Building C object CMakeFiles/THNN.dir/init.c.o\n[100%] Linking C shared library libTHNN.so\n[100%] Built target THNN\nInstall the project...\n-- Install configuration: \"Release\"\n-- Installing: /home/guille/git/pytorch/torch/lib/tmp_install/lib/libTHNN.so.1\n-- Installing: /home/guille/git/pytorch/torch/lib/tmp_install/lib/libTHNN.so\n-- Set runtime path of \"/home/guille/git/pytorch/torch/lib/tmp_install/lib/libTHNN.so.1\" to \"\"\n-- Installing: /home/guille/git/pytorch/torch/lib/tmp_install/include/THNN/THNN.h\n-- Installing: /home/guille/git/pytorch/torch/lib/tmp_install/include/THNN/generic/THNN.h\n-- The C compiler identification is GNU 4.8.5\n-- The CXX compiler identification is GNU 4.8.5\n-- Check for working C compiler: /home/guille/anaconda3/bin/cc\n-- Check for working C compiler: /home/guille/anaconda3/bin/cc -- works\n-- Detecting C compiler ABI info\n-- Checking if C linker supports --verbose\n-- Checking if C linker supports --verbose - yes\n-- Detecting C compiler ABI info - done\n-- Detecting C compile features\n-- Detecting C compile features - done\n-- Check for working CXX compiler: /home/guille/anaconda3/bin/c++\n-- Check for working CXX compiler: /home/guille/anaconda3/bin/c++ -- works\n-- Detecting CXX compiler ABI info\n-- Checking if CXX linker supports --verbose\n-- Checking if CXX linker supports --verbose - yes\n-- Detecting CXX compiler ABI info - done\n-- Detecting CXX compile features\n-- Detecting CXX compile features - done\n-- Removing -DNDEBUG from compile flags\n-- TH_LIBRARIES: /home/guille/git/pytorch/torch/lib/tmp_install/lib/libTH.so.1\nCMake Error at /home/guille/anaconda3/share/cmake-3.6/Modules/FindPackageHandleStandardArgs.cmake:148 (message):\nCould NOT find CUDA (missing: CUDA_CUDART_LIBRARY) (found suitable version\n\"8.0\", minimum required is \"5.5\")\nCall Stack (most recent call first):\n/home/guille/anaconda3/share/cmake-3.6/Modules/FindPackageHandleStandardArgs.cmake:388 (_FPHSA_FAILURE_MESSAGE)\n/home/guille/git/pytorch/cmake/FindCUDA/FindCUDA.cmake:1013 (find_package_handle_standard_args)\nCMakeLists.txt:28 (FIND_PACKAGE)\n-- Configuring incomplete, errors occurred!\nSee also \"/home/guille/git/pytorch/torch/lib/build/THC/CMakeFiles/CMakeOutput.log\".\n\nI have tried configuring the environment variables PATH and LD_LIBRARY_PATH, but this does not help:\n\nexport PATH=/home/guille/anaconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/snap/bin:/usr/lib/nvidia-381:/usr/lib/nvidia-381/bin\nexport LD_LIBRARY_PATH=/usr/lib/x86_64-linux-gnu::/usr/lib/nvidia-381:/usr/lib32/nvidia-381:/usr/lib:/usr/lib32\n\nIt might be related to #638 but I have not been able to fix this.", "body": "My system:\r\nUbuntu 17.04\r\npython 3.5.2 from anaconda\r\nNvidia driver 381, cuda 8.0.44 from nvidia-cuda-toolkit and cudnn v6 installed with the deb package from nvidia for ubuntu 16.04.\r\n\r\nIf I install the 0.1.12 release it works perfectly on CPU and GPU.\r\nCompilation for CPU works perfectly, but I get the following output when compiling for GPU:\r\n\r\n> running install\r\n> running build_deps\r\n> -- The C compiler identification is GNU 4.8.5\r\n> -- The CXX compiler identification is GNU 4.8.5\r\n> -- Check for working C compiler: /home/guille/anaconda3/bin/cc\r\n> -- Check for working C compiler: /home/guille/anaconda3/bin/cc -- works\r\n> -- Detecting C compiler ABI info\r\n> -- Checking if C linker supports --verbose\r\n> -- Checking if C linker supports --verbose - yes\r\n> -- Detecting C compiler ABI info - done\r\n> -- Detecting C compile features\r\n> -- Detecting C compile features - done\r\n> -- Check for working CXX compiler: /home/guille/anaconda3/bin/c++\r\n> -- Check for working CXX compiler: /home/guille/anaconda3/bin/c++ -- works\r\n> -- Detecting CXX compiler ABI info\r\n> -- Checking if CXX linker supports --verbose\r\n> -- Checking if CXX linker supports --verbose - yes\r\n> -- Detecting CXX compiler ABI info - done\r\n> -- Detecting CXX compile features\r\n> -- Detecting CXX compile features - done\r\n> -- Try OpenMP C flag = [-fopenmp]\r\n> -- Performing Test OpenMP_FLAG_DETECTED\r\n> -- Performing Test OpenMP_FLAG_DETECTED - Success\r\n> -- Try OpenMP CXX flag = [-fopenmp]\r\n> -- Performing Test OpenMP_FLAG_DETECTED\r\n> -- Performing Test OpenMP_FLAG_DETECTED - Success\r\n> -- Found OpenMP: -fopenmp  \r\n> -- Compiling with OpenMP support\r\n> -- Could not find hardware support for NEON on this machine.\r\n> -- No OMAP3 processor on this machine.\r\n> -- No OMAP4 processor on this machine.\r\n> -- Looking for cpuid.h\r\n> -- Looking for cpuid.h - found\r\n> -- Performing Test HAVE_GCC_GET_CPUID\r\n> -- Performing Test HAVE_GCC_GET_CPUID - Success\r\n> -- Performing Test NO_GCC_EBX_FPIC_BUG\r\n> -- Performing Test NO_GCC_EBX_FPIC_BUG - Success\r\n> -- Performing Test C_HAS_SSE1_1\r\n> -- Performing Test C_HAS_SSE1_1 - Success\r\n> -- Performing Test C_HAS_SSE2_1\r\n> -- Performing Test C_HAS_SSE2_1 - Success\r\n> -- Performing Test C_HAS_SSE3_1\r\n> -- Performing Test C_HAS_SSE3_1 - Failed\r\n> -- Performing Test C_HAS_SSE3_2\r\n> -- Performing Test C_HAS_SSE3_2 - Success\r\n> -- Performing Test C_HAS_SSE4_1_1\r\n> -- Performing Test C_HAS_SSE4_1_1 - Failed\r\n> -- Performing Test C_HAS_SSE4_1_2\r\n> -- Performing Test C_HAS_SSE4_1_2 - Success\r\n> -- Performing Test C_HAS_SSE4_2_1\r\n> -- Performing Test C_HAS_SSE4_2_1 - Failed\r\n> -- Performing Test C_HAS_SSE4_2_2\r\n> -- Performing Test C_HAS_SSE4_2_2 - Success\r\n> -- Performing Test C_HAS_AVX_1\r\n> -- Performing Test C_HAS_AVX_1 - Failed\r\n> -- Performing Test C_HAS_AVX_2\r\n> -- Performing Test C_HAS_AVX_2 - Success\r\n> -- Performing Test C_HAS_AVX2_1\r\n> -- Performing Test C_HAS_AVX2_1 - Failed\r\n> -- Performing Test C_HAS_AVX2_2\r\n> -- Performing Test C_HAS_AVX2_2 - Success\r\n> -- Performing Test CXX_HAS_SSE1_1\r\n> -- Performing Test CXX_HAS_SSE1_1 - Success\r\n> -- Performing Test CXX_HAS_SSE2_1\r\n> -- Performing Test CXX_HAS_SSE2_1 - Success\r\n> -- Performing Test CXX_HAS_SSE3_1\r\n> -- Performing Test CXX_HAS_SSE3_1 - Failed\r\n> -- Performing Test CXX_HAS_SSE3_2\r\n> -- Performing Test CXX_HAS_SSE3_2 - Success\r\n> -- Performing Test CXX_HAS_SSE4_1_1\r\n> -- Performing Test CXX_HAS_SSE4_1_1 - Failed\r\n> -- Performing Test CXX_HAS_SSE4_1_2\r\n> -- Performing Test CXX_HAS_SSE4_1_2 - Success\r\n> -- Performing Test CXX_HAS_SSE4_2_1\r\n> -- Performing Test CXX_HAS_SSE4_2_1 - Failed\r\n> -- Performing Test CXX_HAS_SSE4_2_2\r\n> -- Performing Test CXX_HAS_SSE4_2_2 - Success\r\n> -- Performing Test CXX_HAS_AVX_1\r\n> -- Performing Test CXX_HAS_AVX_1 - Failed\r\n> -- Performing Test CXX_HAS_AVX_2\r\n> -- Performing Test CXX_HAS_AVX_2 - Success\r\n> -- Performing Test CXX_HAS_AVX2_1\r\n> -- Performing Test CXX_HAS_AVX2_1 - Failed\r\n> -- Performing Test CXX_HAS_AVX2_2\r\n> -- Performing Test CXX_HAS_AVX2_2 - Success\r\n> -- SSE2 Found\r\n> -- SSE3 Found\r\n> -- AVX Found\r\n> -- AVX2 Found\r\n> -- Performing Test HAS_C11_ATOMICS\r\n> -- Performing Test HAS_C11_ATOMICS - Failed\r\n> -- Performing Test HAS_MSC_ATOMICS\r\n> -- Performing Test HAS_MSC_ATOMICS - Failed\r\n> -- Performing Test HAS_GCC_ATOMICS\r\n> -- Performing Test HAS_GCC_ATOMICS - Success\r\n> -- TH_SO_VERSION: 1\r\n> -- Atomics: using GCC intrinsics\r\n> -- Looking for sys/types.h\r\n> -- Looking for sys/types.h - found\r\n> -- Looking for stdint.h\r\n> -- Looking for stdint.h - found\r\n> -- Looking for stddef.h\r\n> -- Looking for stddef.h - found\r\n> -- Check size of void*\r\n> -- Check size of void* - done\r\n> -- Checking for [mkl_gf_lp64 - mkl_gnu_thread - mkl_core - iomp5 - pthread - m]\r\n> --   Library mkl_gf_lp64: not found\r\n> -- Checking for [mkl_gf_lp64 - mkl_intel_thread - mkl_core - iomp5 - pthread - m]\r\n> --   Library mkl_gf_lp64: not found\r\n> -- Checking for [mkl_gf - mkl_gnu_thread - mkl_core - iomp5 - pthread - m]\r\n> --   Library mkl_gf: not found\r\n> -- Checking for [mkl_gf - mkl_intel_thread - mkl_core - iomp5 - pthread - m]\r\n> --   Library mkl_gf: not found\r\n> -- Checking for [mkl_intel_lp64 - mkl_gnu_thread - mkl_core - iomp5 - pthread - m]\r\n> --   Library mkl_intel_lp64: /home/guille/anaconda3/lib/libmkl_intel_lp64.so\r\n> --   Library mkl_gnu_thread: not found\r\n> -- Checking for [mkl_intel_lp64 - mkl_intel_thread - mkl_core - iomp5 - pthread - m]\r\n> --   Library mkl_intel_lp64: /home/guille/anaconda3/lib/libmkl_intel_lp64.so\r\n> --   Library mkl_intel_thread: /home/guille/anaconda3/lib/libmkl_intel_thread.so\r\n> --   Library mkl_core: /home/guille/anaconda3/lib/libmkl_core.so\r\n> --   Library iomp5: /home/guille/anaconda3/lib/libiomp5.so\r\n> --   Library pthread: /usr/lib/x86_64-linux-gnu/libpthread.so\r\n> --   Library m: /usr/lib/x86_64-linux-gnu/libm.so\r\n> -- Looking for cblas_sgemm\r\n> -- Looking for cblas_sgemm - found\r\n> -- MKL library found\r\n> -- Performing Test BLAS_F2C_DOUBLE_WORKS\r\n> -- Performing Test BLAS_F2C_DOUBLE_WORKS - Failed\r\n> -- Performing Test BLAS_F2C_FLOAT_WORKS\r\n> -- Performing Test BLAS_F2C_FLOAT_WORKS - Success\r\n> -- Found a library with BLAS API (mkl).\r\n> -- Found a library with LAPACK API. (mkl)\r\n> -- Looking for clock_gettime in rt\r\n> -- Looking for clock_gettime in rt - found\r\n> -- Looking for mmap\r\n> -- Looking for mmap - found\r\n> -- Looking for shm_open\r\n> -- Looking for shm_open - found\r\n> -- Looking for shm_unlink\r\n> -- Looking for shm_unlink - found\r\n> -- Looking for malloc_usable_size\r\n> -- Looking for malloc_usable_size - found\r\n> -- Performing Test C_HAS_THREAD\r\n> -- Performing Test C_HAS_THREAD - Success\r\n> -- Configuring done\r\n> -- Generating done\r\n> CMake Warning:\r\n>   Manually-specified variables were not used by the project:\r\n> \r\n>     CUDA_NVCC_FLAGS\r\n>     NO_CUDA\r\n>     THCS_LIBRARIES\r\n>     THCUNN_SO_VERSION\r\n>     THC_LIBRARIES\r\n>     THC_SO_VERSION\r\n>     THD_SO_VERSION\r\n>     THNN_SO_VERSION\r\n>     THPP_LIBRARIES\r\n>     THS_LIBRARIES\r\n>     TH_INCLUDE_PATH\r\n>     TH_LIB_PATH\r\n>     Torch_FOUND\r\n> \r\n> \r\n> -- Build files have been written to: /home/guille/git/pytorch/torch/lib/build/TH\r\n> Scanning dependencies of target TH\r\n> [  5%] Building C object CMakeFiles/TH.dir/THGeneral.c.o\r\n> [ 10%] Building C object CMakeFiles/TH.dir/THHalf.c.o\r\n> [ 15%] Building C object CMakeFiles/TH.dir/THAllocator.c.o\r\n> [ 20%] Building C object CMakeFiles/TH.dir/THStorage.c.o\r\n> [ 25%] Building C object CMakeFiles/TH.dir/THTensor.c.o\r\n> [ 35%] Building C object CMakeFiles/TH.dir/THBlas.c.o\r\n> [ 35%] Building C object CMakeFiles/TH.dir/THLapack.c.o\r\n> [ 40%] Building C object CMakeFiles/TH.dir/THLogAdd.c.o\r\n> [ 45%] Building C object CMakeFiles/TH.dir/THRandom.c.o\r\n> [ 50%] Building C object CMakeFiles/TH.dir/THFile.c.o\r\n> [ 55%] Building C object CMakeFiles/TH.dir/THDiskFile.c.o\r\n> [ 60%] Building C object CMakeFiles/TH.dir/THMemoryFile.c.o\r\n> [ 65%] Building C object CMakeFiles/TH.dir/THAtomic.c.o\r\n> [ 70%] Building C object CMakeFiles/TH.dir/THVector.c.o\r\n> [ 75%] Building C object CMakeFiles/TH.dir/generic/simd/convolve5x5_sse.c.o\r\n> [ 80%] Building C object CMakeFiles/TH.dir/generic/simd/convolve.c.o\r\n> [ 85%] Building C object CMakeFiles/TH.dir/vector/AVX.c.o\r\n> [ 90%] Building C object CMakeFiles/TH.dir/generic/simd/convolve5x5_avx.c.o\r\n> [ 95%] Building C object CMakeFiles/TH.dir/vector/AVX2.c.o\r\n> [100%] Linking C shared library libTH.so\r\n> [100%] Built target TH\r\n> Install the project...\r\n> -- Install configuration: \"Release\"\r\n> -- Installing: /home/guille/git/pytorch/torch/lib/tmp_install/lib/libTH.so.1\r\n> -- Installing: /home/guille/git/pytorch/torch/lib/tmp_install/lib/libTH.so\r\n> -- Set runtime path of \"/home/guille/git/pytorch/torch/lib/tmp_install/lib/libTH.so.1\" to \"\"\r\n> -- Installing: /home/guille/git/pytorch/torch/lib/tmp_install/include/TH/TH.h\r\n> -- Installing: /home/guille/git/pytorch/torch/lib/tmp_install/include/TH/THAllocator.h\r\n> -- Installing: /home/guille/git/pytorch/torch/lib/tmp_install/include/TH/THMath.h\r\n> -- Installing: /home/guille/git/pytorch/torch/lib/tmp_install/include/TH/THBlas.h\r\n> -- Installing: /home/guille/git/pytorch/torch/lib/tmp_install/include/TH/THDiskFile.h\r\n> -- Installing: /home/guille/git/pytorch/torch/lib/tmp_install/include/TH/THFile.h\r\n> -- Installing: /home/guille/git/pytorch/torch/lib/tmp_install/include/TH/THFilePrivate.h\r\n> -- Installing: /home/guille/git/pytorch/torch/lib/tmp_install/include/TH/THGeneral.h\r\n> -- Installing: /home/guille/git/pytorch/torch/lib/tmp_install/include/TH/THGenerateAllTypes.h\r\n> -- Installing: /home/guille/git/pytorch/torch/lib/tmp_install/include/TH/THGenerateDoubleType.h\r\n> -- Installing: /home/guille/git/pytorch/torch/lib/tmp_install/include/TH/THGenerateFloatType.h\r\n> -- Installing: /home/guille/git/pytorch/torch/lib/tmp_install/include/TH/THGenerateHalfType.h\r\n> -- Installing: /home/guille/git/pytorch/torch/lib/tmp_install/include/TH/THGenerateLongType.h\r\n> -- Installing: /home/guille/git/pytorch/torch/lib/tmp_install/include/TH/THGenerateIntType.h\r\n> -- Installing: /home/guille/git/pytorch/torch/lib/tmp_install/include/TH/THGenerateShortType.h\r\n> -- Installing: /home/guille/git/pytorch/torch/lib/tmp_install/include/TH/THGenerateCharType.h\r\n> -- Installing: /home/guille/git/pytorch/torch/lib/tmp_install/include/TH/THGenerateByteType.h\r\n> -- Installing: /home/guille/git/pytorch/torch/lib/tmp_install/include/TH/THGenerateFloatTypes.h\r\n> -- Installing: /home/guille/git/pytorch/torch/lib/tmp_install/include/TH/THGenerateIntTypes.h\r\n> -- Installing: /home/guille/git/pytorch/torch/lib/tmp_install/include/TH/THLapack.h\r\n> -- Installing: /home/guille/git/pytorch/torch/lib/tmp_install/include/TH/THLogAdd.h\r\n> -- Installing: /home/guille/git/pytorch/torch/lib/tmp_install/include/TH/THMemoryFile.h\r\n> -- Installing: /home/guille/git/pytorch/torch/lib/tmp_install/include/TH/THRandom.h\r\n> -- Installing: /home/guille/git/pytorch/torch/lib/tmp_install/include/TH/THStorage.h\r\n> -- Installing: /home/guille/git/pytorch/torch/lib/tmp_install/include/TH/THTensor.h\r\n> -- Installing: /home/guille/git/pytorch/torch/lib/tmp_install/include/TH/THTensorApply.h\r\n> -- Installing: /home/guille/git/pytorch/torch/lib/tmp_install/include/TH/THTensorDimApply.h\r\n> -- Installing: /home/guille/git/pytorch/torch/lib/tmp_install/include/TH/THTensorMacros.h\r\n> -- Installing: /home/guille/git/pytorch/torch/lib/tmp_install/include/TH/THVector.h\r\n> -- Installing: /home/guille/git/pytorch/torch/lib/tmp_install/include/TH/THAtomic.h\r\n> -- Installing: /home/guille/git/pytorch/torch/lib/tmp_install/include/TH/THHalf.h\r\n> -- Installing: /home/guille/git/pytorch/torch/lib/tmp_install/include/TH/vector/AVX.h\r\n> -- Installing: /home/guille/git/pytorch/torch/lib/tmp_install/include/TH/vector/AVX2.h\r\n> -- Installing: /home/guille/git/pytorch/torch/lib/tmp_install/include/TH/generic/THBlas.c\r\n> -- Installing: /home/guille/git/pytorch/torch/lib/tmp_install/include/TH/generic/THBlas.h\r\n> -- Installing: /home/guille/git/pytorch/torch/lib/tmp_install/include/TH/generic/THLapack.c\r\n> -- Installing: /home/guille/git/pytorch/torch/lib/tmp_install/include/TH/generic/THLapack.h\r\n> -- Installing: /home/guille/git/pytorch/torch/lib/tmp_install/include/TH/generic/THStorage.c\r\n> -- Installing: /home/guille/git/pytorch/torch/lib/tmp_install/include/TH/generic/THStorage.h\r\n> -- Installing: /home/guille/git/pytorch/torch/lib/tmp_install/include/TH/generic/THStorageCopy.c\r\n> -- Installing: /home/guille/git/pytorch/torch/lib/tmp_install/include/TH/generic/THStorageCopy.h\r\n> -- Installing: /home/guille/git/pytorch/torch/lib/tmp_install/include/TH/generic/THTensor.c\r\n> -- Installing: /home/guille/git/pytorch/torch/lib/tmp_install/include/TH/generic/THTensor.h\r\n> -- Installing: /home/guille/git/pytorch/torch/lib/tmp_install/include/TH/generic/THTensorConv.c\r\n> -- Installing: /home/guille/git/pytorch/torch/lib/tmp_install/include/TH/generic/THTensorConv.h\r\n> -- Installing: /home/guille/git/pytorch/torch/lib/tmp_install/include/TH/generic/THTensorCopy.c\r\n> -- Installing: /home/guille/git/pytorch/torch/lib/tmp_install/include/TH/generic/THTensorCopy.h\r\n> -- Installing: /home/guille/git/pytorch/torch/lib/tmp_install/include/TH/generic/THTensorLapack.c\r\n> -- Installing: /home/guille/git/pytorch/torch/lib/tmp_install/include/TH/generic/THTensorLapack.h\r\n> -- Installing: /home/guille/git/pytorch/torch/lib/tmp_install/include/TH/generic/THTensorMath.c\r\n> -- Installing: /home/guille/git/pytorch/torch/lib/tmp_install/include/TH/generic/THTensorMath.h\r\n> -- Installing: /home/guille/git/pytorch/torch/lib/tmp_install/include/TH/generic/THTensorRandom.c\r\n> -- Installing: /home/guille/git/pytorch/torch/lib/tmp_install/include/TH/generic/THTensorRandom.h\r\n> -- Installing: /home/guille/git/pytorch/torch/lib/tmp_install/include/TH/generic/THVectorDispatch.c\r\n> -- Installing: /home/guille/git/pytorch/torch/lib/tmp_install/include/TH/generic/THVector.h\r\n> -- Installing: /home/guille/git/pytorch/torch/lib/tmp_install/share/cmake/TH/THConfig.cmake\r\n> -- The C compiler identification is GNU 4.8.5\r\n> -- The CXX compiler identification is GNU 4.8.5\r\n> -- Check for working C compiler: /home/guille/anaconda3/bin/cc\r\n> -- Check for working C compiler: /home/guille/anaconda3/bin/cc -- works\r\n> -- Detecting C compiler ABI info\r\n> -- Checking if C linker supports --verbose\r\n> -- Checking if C linker supports --verbose - yes\r\n> -- Detecting C compiler ABI info - done\r\n> -- Detecting C compile features\r\n> -- Detecting C compile features - done\r\n> -- Check for working CXX compiler: /home/guille/anaconda3/bin/c++\r\n> -- Check for working CXX compiler: /home/guille/anaconda3/bin/c++ -- works\r\n> -- Detecting CXX compiler ABI info\r\n> -- Checking if CXX linker supports --verbose\r\n> -- Checking if CXX linker supports --verbose - yes\r\n> -- Detecting CXX compiler ABI info - done\r\n> -- Detecting CXX compile features\r\n> -- Detecting CXX compile features - done\r\n> -- TH_LIBRARIES: /home/guille/git/pytorch/torch/lib/tmp_install/lib/libTH.so.1\r\n> -- THS_SO_VERSION: 1\r\n> -- Configuring done\r\n> -- Generating done\r\n> CMake Warning:\r\n>   Manually-specified variables were not used by the project:\r\n> \r\n>     CUDA_NVCC_FLAGS\r\n>     NO_CUDA\r\n>     THCS_LIBRARIES\r\n>     THCUNN_SO_VERSION\r\n>     THC_LIBRARIES\r\n>     THC_SO_VERSION\r\n>     THD_SO_VERSION\r\n>     THNN_SO_VERSION\r\n>     THPP_LIBRARIES\r\n>     THS_LIBRARIES\r\n>     TH_SO_VERSION\r\n> \r\n> \r\n> -- Build files have been written to: /home/guille/git/pytorch/torch/lib/build/THS\r\n> Scanning dependencies of target THS\r\n> [ 50%] Building C object CMakeFiles/THS.dir/THSTensor.c.o\r\n> [100%] Linking C shared library libTHS.so\r\n> [100%] Built target THS\r\n> Install the project...\r\n> -- Install configuration: \"Release\"\r\n> -- Installing: /home/guille/git/pytorch/torch/lib/tmp_install/lib/libTHS.so.1\r\n> -- Installing: /home/guille/git/pytorch/torch/lib/tmp_install/lib/libTHS.so\r\n> -- Set runtime path of \"/home/guille/git/pytorch/torch/lib/tmp_install/lib/libTHS.so.1\" to \"\"\r\n> -- Installing: /home/guille/git/pytorch/torch/lib/tmp_install/include/THS/THS.h\r\n> -- Installing: /home/guille/git/pytorch/torch/lib/tmp_install/include/THS/THSGenerateAllTypes.h\r\n> -- Installing: /home/guille/git/pytorch/torch/lib/tmp_install/include/THS/THSGenerateFloatTypes.h\r\n> -- Installing: /home/guille/git/pytorch/torch/lib/tmp_install/include/THS/THSGenerateIntTypes.h\r\n> -- Installing: /home/guille/git/pytorch/torch/lib/tmp_install/include/THS/THSTensor.h\r\n> -- Installing: /home/guille/git/pytorch/torch/lib/tmp_install/include/THS/generic/THSTensor.c\r\n> -- Installing: /home/guille/git/pytorch/torch/lib/tmp_install/include/THS/generic/THSTensor.h\r\n> -- Installing: /home/guille/git/pytorch/torch/lib/tmp_install/include/THS/generic/THSTensorMath.c\r\n> -- Installing: /home/guille/git/pytorch/torch/lib/tmp_install/include/THS/generic/THSTensorMath.h\r\n> -- The C compiler identification is GNU 4.8.5\r\n> -- The CXX compiler identification is GNU 4.8.5\r\n> -- Check for working C compiler: /home/guille/anaconda3/bin/cc\r\n> -- Check for working C compiler: /home/guille/anaconda3/bin/cc -- works\r\n> -- Detecting C compiler ABI info\r\n> -- Checking if C linker supports --verbose\r\n> -- Checking if C linker supports --verbose - yes\r\n> -- Detecting C compiler ABI info - done\r\n> -- Detecting C compile features\r\n> -- Detecting C compile features - done\r\n> -- Check for working CXX compiler: /home/guille/anaconda3/bin/c++\r\n> -- Check for working CXX compiler: /home/guille/anaconda3/bin/c++ -- works\r\n> -- Detecting CXX compiler ABI info\r\n> -- Checking if CXX linker supports --verbose\r\n> -- Checking if CXX linker supports --verbose - yes\r\n> -- Detecting CXX compiler ABI info - done\r\n> -- Detecting CXX compile features\r\n> -- Detecting CXX compile features - done\r\n> -- TH_LIBRARIES: /home/guille/git/pytorch/torch/lib/tmp_install/lib/libTH.so.1\r\n> -- Try OpenMP C flag = [-fopenmp]\r\n> -- Performing Test OpenMP_FLAG_DETECTED\r\n> -- Performing Test OpenMP_FLAG_DETECTED - Success\r\n> -- Try OpenMP CXX flag = [-fopenmp]\r\n> -- Performing Test OpenMP_FLAG_DETECTED\r\n> -- Performing Test OpenMP_FLAG_DETECTED - Success\r\n> -- Found OpenMP: -fopenmp  \r\n> -- Compiling with OpenMP support\r\n> CMake Warning (dev) at CMakeLists.txt:61 (LINK_DIRECTORIES):\r\n>   This command specifies the relative path\r\n> \r\n>     \r\n> \r\n>   as a link directory.\r\n> \r\n>   Policy CMP0015 is not set: link_directories() treats paths relative to the\r\n>   source dir.  Run \"cmake --help-policy CMP0015\" for policy details.  Use the\r\n>   cmake_policy command to set the policy and suppress this warning.\r\n> This warning is for project developers.  Use -Wno-dev to suppress it.\r\n> \r\n> -- THNN_SO_VERSION: 1\r\n> -- Configuring done\r\n> -- Generating done\r\n> CMake Warning:\r\n>   Manually-specified variables were not used by the project:\r\n> \r\n>     CUDA_NVCC_FLAGS\r\n>     NO_CUDA\r\n>     THCS_LIBRARIES\r\n>     THCUNN_SO_VERSION\r\n>     THC_LIBRARIES\r\n>     THC_SO_VERSION\r\n>     THD_SO_VERSION\r\n>     THPP_LIBRARIES\r\n>     THS_LIBRARIES\r\n>     TH_INCLUDE_PATH\r\n>     TH_LIB_PATH\r\n>     TH_SO_VERSION\r\n> \r\n> \r\n> -- Build files have been written to: /home/guille/git/pytorch/torch/lib/build/THNN\r\n> Scanning dependencies of target THNN\r\n> [ 50%] Building C object CMakeFiles/THNN.dir/init.c.o\r\n> [100%] Linking C shared library libTHNN.so\r\n> [100%] Built target THNN\r\n> Install the project...\r\n> -- Install configuration: \"Release\"\r\n> -- Installing: /home/guille/git/pytorch/torch/lib/tmp_install/lib/libTHNN.so.1\r\n> -- Installing: /home/guille/git/pytorch/torch/lib/tmp_install/lib/libTHNN.so\r\n> -- Set runtime path of \"/home/guille/git/pytorch/torch/lib/tmp_install/lib/libTHNN.so.1\" to \"\"\r\n> -- Installing: /home/guille/git/pytorch/torch/lib/tmp_install/include/THNN/THNN.h\r\n> -- Installing: /home/guille/git/pytorch/torch/lib/tmp_install/include/THNN/generic/THNN.h\r\n> -- The C compiler identification is GNU 4.8.5\r\n> -- The CXX compiler identification is GNU 4.8.5\r\n> -- Check for working C compiler: /home/guille/anaconda3/bin/cc\r\n> -- Check for working C compiler: /home/guille/anaconda3/bin/cc -- works\r\n> -- Detecting C compiler ABI info\r\n> -- Checking if C linker supports --verbose\r\n> -- Checking if C linker supports --verbose - yes\r\n> -- Detecting C compiler ABI info - done\r\n> -- Detecting C compile features\r\n> -- Detecting C compile features - done\r\n> -- Check for working CXX compiler: /home/guille/anaconda3/bin/c++\r\n> -- Check for working CXX compiler: /home/guille/anaconda3/bin/c++ -- works\r\n> -- Detecting CXX compiler ABI info\r\n> -- Checking if CXX linker supports --verbose\r\n> -- Checking if CXX linker supports --verbose - yes\r\n> -- Detecting CXX compiler ABI info - done\r\n> -- Detecting CXX compile features\r\n> -- Detecting CXX compile features - done\r\n> -- Removing -DNDEBUG from compile flags\r\n> -- TH_LIBRARIES: /home/guille/git/pytorch/torch/lib/tmp_install/lib/libTH.so.1\r\n> CMake Error at /home/guille/anaconda3/share/cmake-3.6/Modules/FindPackageHandleStandardArgs.cmake:148 (message):\r\n>   Could NOT find CUDA (missing: CUDA_CUDART_LIBRARY) (found suitable version\r\n>   \"8.0\", minimum required is \"5.5\")\r\n> Call Stack (most recent call first):\r\n>   /home/guille/anaconda3/share/cmake-3.6/Modules/FindPackageHandleStandardArgs.cmake:388 (_FPHSA_FAILURE_MESSAGE)\r\n>   /home/guille/git/pytorch/cmake/FindCUDA/FindCUDA.cmake:1013 (find_package_handle_standard_args)\r\n>   CMakeLists.txt:28 (FIND_PACKAGE)\r\n> \r\n> \r\n> -- Configuring incomplete, errors occurred!\r\n> See also \"/home/guille/git/pytorch/torch/lib/build/THC/CMakeFiles/CMakeOutput.log\".\r\n> \r\n\r\nI have tried configuring the environment variables PATH and LD_LIBRARY_PATH, but this does not help:\r\n> export PATH=/home/guille/anaconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/snap/bin:/usr/lib/nvidia-381:/usr/lib/nvidia-381/bin\r\n> export LD_LIBRARY_PATH=/usr/lib/x86_64-linux-gnu::/usr/lib/nvidia-381:/usr/lib32/nvidia-381:/usr/lib:/usr/lib32\r\n\r\nIt might be related to #638 but I have not been able to fix this."}