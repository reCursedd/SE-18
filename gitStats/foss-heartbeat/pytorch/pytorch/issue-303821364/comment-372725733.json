{"url": "https://api.github.com/repos/pytorch/pytorch/issues/comments/372725733", "html_url": "https://github.com/pytorch/pytorch/issues/5660#issuecomment-372725733", "issue_url": "https://api.github.com/repos/pytorch/pytorch/issues/5660", "id": 372725733, "node_id": "MDEyOklzc3VlQ29tbWVudDM3MjcyNTczMw==", "user": {"login": "velikodniy", "id": 1735272, "node_id": "MDQ6VXNlcjE3MzUyNzI=", "avatar_url": "https://avatars2.githubusercontent.com/u/1735272?v=4", "gravatar_id": "", "url": "https://api.github.com/users/velikodniy", "html_url": "https://github.com/velikodniy", "followers_url": "https://api.github.com/users/velikodniy/followers", "following_url": "https://api.github.com/users/velikodniy/following{/other_user}", "gists_url": "https://api.github.com/users/velikodniy/gists{/gist_id}", "starred_url": "https://api.github.com/users/velikodniy/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/velikodniy/subscriptions", "organizations_url": "https://api.github.com/users/velikodniy/orgs", "repos_url": "https://api.github.com/users/velikodniy/repos", "events_url": "https://api.github.com/users/velikodniy/events{/privacy}", "received_events_url": "https://api.github.com/users/velikodniy/received_events", "type": "User", "site_admin": false}, "created_at": "2018-03-13T16:20:29Z", "updated_at": "2018-03-13T21:21:21Z", "author_association": "CONTRIBUTOR", "body_html": "<p>Note that <code>pos_weight</code> is multiplied only by the first addend in the formula for BCE loss. It's not the weight for the whole target. I cannot see the simple way to do it beforehand.</p>\n<p>Proposed loss looks like:</p>\n<pre><code>pos_weight * targets * -log(sigmoid(logits)) + (1 - targets) * -log(1 - sigmoid(logits))\n</code></pre>\n<p><code>BCEWithLogitsLoss</code> with multiplier <code>m</code> for targets:</p>\n<pre><code>m * targets * -log(sigmoid(logits)) + (1 - m * targets) * -log(1 - sigmoid(logits))\n</code></pre>\n<p>If these formulae are the same, <code>m</code> should be equal:</p>\n<pre><code>(log(1 - sigmoid(logits)) - pos_weight * log(sigmoid(logits)))/(log(1 - sigmoid(logits)) - log(sigmoid(logits)))\n</code></pre>\n<p>This formula is quite complex, contains <code>logits</code>, and I guess it is numerically unstable.</p>\n<p>Maybe I didn't understand your idea.</p>", "body_text": "Note that pos_weight is multiplied only by the first addend in the formula for BCE loss. It's not the weight for the whole target. I cannot see the simple way to do it beforehand.\nProposed loss looks like:\npos_weight * targets * -log(sigmoid(logits)) + (1 - targets) * -log(1 - sigmoid(logits))\n\nBCEWithLogitsLoss with multiplier m for targets:\nm * targets * -log(sigmoid(logits)) + (1 - m * targets) * -log(1 - sigmoid(logits))\n\nIf these formulae are the same, m should be equal:\n(log(1 - sigmoid(logits)) - pos_weight * log(sigmoid(logits)))/(log(1 - sigmoid(logits)) - log(sigmoid(logits)))\n\nThis formula is quite complex, contains logits, and I guess it is numerically unstable.\nMaybe I didn't understand your idea.", "body": "Note that `pos_weight` is multiplied only by the first addend in the formula for BCE loss. It's not the weight for the whole target. I cannot see the simple way to do it beforehand.\r\n\r\nProposed loss looks like:\r\n```\r\npos_weight * targets * -log(sigmoid(logits)) + (1 - targets) * -log(1 - sigmoid(logits))\r\n```\r\n\r\n`BCEWithLogitsLoss` with multiplier `m` for targets:\r\n```\r\nm * targets * -log(sigmoid(logits)) + (1 - m * targets) * -log(1 - sigmoid(logits))\r\n```\r\n\r\nIf these formulae are the same, `m` should be equal:\r\n```\r\n(log(1 - sigmoid(logits)) - pos_weight * log(sigmoid(logits)))/(log(1 - sigmoid(logits)) - log(sigmoid(logits)))\r\n```\r\n\r\nThis formula is quite complex, contains `logits`, and I guess it is numerically unstable.\r\n\r\nMaybe I didn't understand your idea."}