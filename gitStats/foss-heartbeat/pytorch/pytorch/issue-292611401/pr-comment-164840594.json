{"url": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/164840594", "pull_request_review_id": 92675009, "id": 164840594, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE2NDg0MDU5NA==", "diff_hunk": "@@ -68,6 +68,14 @@ def probs(self):\n     def param_shape(self):\n         return self._param.size()\n \n+    @property\n+    def mean(self):\n+        return torch.Tensor([float('nan')]).expand(self._extended_shape())", "path": "torch/distributions/categorical.py", "position": null, "original_position": 6, "commit_id": "a732dcbbd7a710fa8b2bb8de553aa219db5e77a5", "original_commit_id": "8a08b55af1a057f01986feb176970beed0bcedf1", "user": {"login": "fritzo", "id": 648532, "node_id": "MDQ6VXNlcjY0ODUzMg==", "avatar_url": "https://avatars0.githubusercontent.com/u/648532?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fritzo", "html_url": "https://github.com/fritzo", "followers_url": "https://api.github.com/users/fritzo/followers", "following_url": "https://api.github.com/users/fritzo/following{/other_user}", "gists_url": "https://api.github.com/users/fritzo/gists{/gist_id}", "starred_url": "https://api.github.com/users/fritzo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fritzo/subscriptions", "organizations_url": "https://api.github.com/users/fritzo/orgs", "repos_url": "https://api.github.com/users/fritzo/repos", "events_url": "https://api.github.com/users/fritzo/events{/privacy}", "received_events_url": "https://api.github.com/users/fritzo/received_events", "type": "User", "site_admin": false}, "body": "To correctly set precision, `.is_cuda`, and `.cuda_device` you should use `.new()`:\r\n```py\r\ndef mean(self):\r\n    return self._param.new([float('nan')]).expand(self._extended_shape())\r\n```", "created_at": "2018-01-30T18:47:07Z", "updated_at": "2018-11-23T15:38:44Z", "html_url": "https://github.com/pytorch/pytorch/pull/4923#discussion_r164840594", "pull_request_url": "https://api.github.com/repos/pytorch/pytorch/pulls/4923", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/164840594"}, "html": {"href": "https://github.com/pytorch/pytorch/pull/4923#discussion_r164840594"}, "pull_request": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/4923"}}, "body_html": "<p>To correctly set precision, <code>.is_cuda</code>, and <code>.cuda_device</code> you should use <code>.new()</code>:</p>\n<div class=\"highlight highlight-source-python\"><pre><span class=\"pl-k\">def</span> <span class=\"pl-en\">mean</span>(<span class=\"pl-smi\"><span class=\"pl-smi\">self</span></span>):\n    <span class=\"pl-k\">return</span> <span class=\"pl-c1\">self</span>._param.new([<span class=\"pl-c1\">float</span>(<span class=\"pl-s\"><span class=\"pl-pds\">'</span>nan<span class=\"pl-pds\">'</span></span>)]).expand(<span class=\"pl-c1\">self</span>._extended_shape())</pre></div>", "body_text": "To correctly set precision, .is_cuda, and .cuda_device you should use .new():\ndef mean(self):\n    return self._param.new([float('nan')]).expand(self._extended_shape())"}