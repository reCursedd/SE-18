{"url": "https://api.github.com/repos/pytorch/pytorch/issues/comments/297798154", "html_url": "https://github.com/pytorch/pytorch/issues/1369#issuecomment-297798154", "issue_url": "https://api.github.com/repos/pytorch/pytorch/issues/1369", "id": 297798154, "node_id": "MDEyOklzc3VlQ29tbWVudDI5Nzc5ODE1NA==", "user": {"login": "adamlerer", "id": 5702157, "node_id": "MDQ6VXNlcjU3MDIxNTc=", "avatar_url": "https://avatars2.githubusercontent.com/u/5702157?v=4", "gravatar_id": "", "url": "https://api.github.com/users/adamlerer", "html_url": "https://github.com/adamlerer", "followers_url": "https://api.github.com/users/adamlerer/followers", "following_url": "https://api.github.com/users/adamlerer/following{/other_user}", "gists_url": "https://api.github.com/users/adamlerer/gists{/gist_id}", "starred_url": "https://api.github.com/users/adamlerer/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/adamlerer/subscriptions", "organizations_url": "https://api.github.com/users/adamlerer/orgs", "repos_url": "https://api.github.com/users/adamlerer/repos", "events_url": "https://api.github.com/users/adamlerer/events{/privacy}", "received_events_url": "https://api.github.com/users/adamlerer/received_events", "type": "User", "site_admin": false}, "created_at": "2017-04-27T18:22:51Z", "updated_at": "2017-04-27T18:22:51Z", "author_association": "CONTRIBUTOR", "body_html": "<p>Re <a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=2560662\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/martinraison\">@martinraison</a> <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load issue title\" data-id=\"222830082\" data-permission-text=\"Issue title is private\" data-url=\"https://github.com/pytorch/pytorch/issues/1302\" data-hovercard-type=\"pull_request\" data-hovercard-url=\"/pytorch/pytorch/pull/1302/hovercard\" href=\"https://github.com/pytorch/pytorch/pull/1302\">#1302</a>  makes <code>coalesce</code> out-of-place, and so removes the coalesce from <code>__repr__</code>. <code>coalesce</code> is quite slow (requires host sync) so if you're going to call it before doing <code>indices</code> it means that users can't do any efficient operations directly on indices/values (as shown here) without paying that performance penalty.</p>\n<p>I wonder if we should look deeply into making coalesce really fast so that we can guarantee all tensors to always be coalesced without a performance hit. This will require some work to investigate and might not be possible.</p>", "body_text": "Re @martinraison #1302  makes coalesce out-of-place, and so removes the coalesce from __repr__. coalesce is quite slow (requires host sync) so if you're going to call it before doing indices it means that users can't do any efficient operations directly on indices/values (as shown here) without paying that performance penalty.\nI wonder if we should look deeply into making coalesce really fast so that we can guarantee all tensors to always be coalesced without a performance hit. This will require some work to investigate and might not be possible.", "body": "Re @martinraison #1302  makes `coalesce` out-of-place, and so removes the coalesce from `__repr__`. `coalesce` is quite slow (requires host sync) so if you're going to call it before doing `indices` it means that users can't do any efficient operations directly on indices/values (as shown here) without paying that performance penalty.\r\n\r\nI wonder if we should look deeply into making coalesce really fast so that we can guarantee all tensors to always be coalesced without a performance hit. This will require some work to investigate and might not be possible."}