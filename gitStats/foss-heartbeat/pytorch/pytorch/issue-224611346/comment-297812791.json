{"url": "https://api.github.com/repos/pytorch/pytorch/issues/comments/297812791", "html_url": "https://github.com/pytorch/pytorch/issues/1369#issuecomment-297812791", "issue_url": "https://api.github.com/repos/pytorch/pytorch/issues/1369", "id": 297812791, "node_id": "MDEyOklzc3VlQ29tbWVudDI5NzgxMjc5MQ==", "user": {"login": "ezyang", "id": 13564, "node_id": "MDQ6VXNlcjEzNTY0", "avatar_url": "https://avatars0.githubusercontent.com/u/13564?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ezyang", "html_url": "https://github.com/ezyang", "followers_url": "https://api.github.com/users/ezyang/followers", "following_url": "https://api.github.com/users/ezyang/following{/other_user}", "gists_url": "https://api.github.com/users/ezyang/gists{/gist_id}", "starred_url": "https://api.github.com/users/ezyang/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ezyang/subscriptions", "organizations_url": "https://api.github.com/users/ezyang/orgs", "repos_url": "https://api.github.com/users/ezyang/repos", "events_url": "https://api.github.com/users/ezyang/events{/privacy}", "received_events_url": "https://api.github.com/users/ezyang/received_events", "type": "User", "site_admin": false}, "created_at": "2017-04-27T19:18:12Z", "updated_at": "2017-04-27T19:18:12Z", "author_association": "CONTRIBUTOR", "body_html": "<p><a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=5702157\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/adamlerer\">@adamlerer</a></p>\n<blockquote>\n<p>Does sparse_mask have a contract about whether it will coalesce its indices?</p>\n</blockquote>\n<p>It does not, and in fact does not work correctly in this case:</p>\n<pre><code>&gt;&gt;&gt; z\nSparseFloatTensor of size 2 with indices:\n\n 0  0\n[torch.LongTensor of size 1x2]\nand values:\n\n 3\n 2\n[torch.FloatTensor of size 2]\n\n&gt;&gt;&gt; y\n\n 3\n 2\n[torch.FloatTensor of size 2]\n\n&gt;&gt;&gt; y.sparse_mask(z)\nSparseFloatTensor of size 2 with indices:\n\n 0  0\n[torch.LongTensor of size 1x2]\nand values:\n\n 3\n 3\n[torch.FloatTensor of size 2]\n</code></pre>", "body_text": "@adamlerer\n\nDoes sparse_mask have a contract about whether it will coalesce its indices?\n\nIt does not, and in fact does not work correctly in this case:\n>>> z\nSparseFloatTensor of size 2 with indices:\n\n 0  0\n[torch.LongTensor of size 1x2]\nand values:\n\n 3\n 2\n[torch.FloatTensor of size 2]\n\n>>> y\n\n 3\n 2\n[torch.FloatTensor of size 2]\n\n>>> y.sparse_mask(z)\nSparseFloatTensor of size 2 with indices:\n\n 0  0\n[torch.LongTensor of size 1x2]\nand values:\n\n 3\n 3\n[torch.FloatTensor of size 2]", "body": "@adamlerer \r\n\r\n> Does sparse_mask have a contract about whether it will coalesce its indices?\r\n\r\nIt does not, and in fact does not work correctly in this case:\r\n\r\n```\r\n>>> z\r\nSparseFloatTensor of size 2 with indices:\r\n\r\n 0  0\r\n[torch.LongTensor of size 1x2]\r\nand values:\r\n\r\n 3\r\n 2\r\n[torch.FloatTensor of size 2]\r\n\r\n>>> y\r\n\r\n 3\r\n 2\r\n[torch.FloatTensor of size 2]\r\n\r\n>>> y.sparse_mask(z)\r\nSparseFloatTensor of size 2 with indices:\r\n\r\n 0  0\r\n[torch.LongTensor of size 1x2]\r\nand values:\r\n\r\n 3\r\n 3\r\n[torch.FloatTensor of size 2]\r\n```\r\n\r\n\r\n"}