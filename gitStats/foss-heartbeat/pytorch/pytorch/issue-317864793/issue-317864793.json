{"url": "https://api.github.com/repos/pytorch/pytorch/issues/6978", "repository_url": "https://api.github.com/repos/pytorch/pytorch", "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/6978/labels{/name}", "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/6978/comments", "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/6978/events", "html_url": "https://github.com/pytorch/pytorch/issues/6978", "id": 317864793, "node_id": "MDU6SXNzdWUzMTc4NjQ3OTM=", "number": 6978, "title": "torch.utils.ffi test is not being triggered and has bitrotted", "user": {"login": "ezyang", "id": 13564, "node_id": "MDQ6VXNlcjEzNTY0", "avatar_url": "https://avatars0.githubusercontent.com/u/13564?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ezyang", "html_url": "https://github.com/ezyang", "followers_url": "https://api.github.com/users/ezyang/followers", "following_url": "https://api.github.com/users/ezyang/following{/other_user}", "gists_url": "https://api.github.com/users/ezyang/gists{/gist_id}", "starred_url": "https://api.github.com/users/ezyang/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ezyang/subscriptions", "organizations_url": "https://api.github.com/users/ezyang/orgs", "repos_url": "https://api.github.com/users/ezyang/repos", "events_url": "https://api.github.com/users/ezyang/events{/privacy}", "received_events_url": "https://api.github.com/users/ezyang/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-04-26T03:29:01Z", "updated_at": "2018-08-17T19:47:05Z", "closed_at": "2018-08-17T19:47:05Z", "author_association": "CONTRIBUTOR", "body_html": "<p>In <code>test_utils.py</code> we have</p>\n<pre><code>try:\n    import cffi\n    from torch.utils.ffi import compile_extension\n    HAS_CFFI = True\nexcept ImportError:\n    HAS_CFFI = False\n</code></pre>\n<p>but <code>compile_extension</code> no longer exists, it's called <code>create_extension</code> now. So we always skip.</p>\n<p>I applied this patch:</p>\n<pre><code>diff --git a/test/test_utils.py b/test/test_utils.py\nindex 9e9d358..ba9f709 100644\n--- a/test/test_utils.py\n+++ b/test/test_utils.py\n@@ -28,11 +28,14 @@ from common import TestCase, run_tests, download_file\n \n try:\n     import cffi\n-    from torch.utils.ffi import compile_extension\n     HAS_CFFI = True\n except ImportError:\n+    raise\n     HAS_CFFI = False\n \n+if HAS_CFFI:\n+    from torch.utils.ffi import create_extension\n+\n \n class SimplePlugin(Plugin):\n \n@@ -352,20 +355,22 @@ class TestFFI(TestCase):\n         self.tmpdir = tempfile.mkdtemp()\n         os.chdir(self.tmpdir)\n         sys.path.append(self.tmpdir)\n+        print(self.tmpdir)\n \n     def tearDown(self):\n-        shutil.rmtree(self.tmpdir)\n+        #shutil.rmtree(self.tmpdir)\n+        pass\n \n     @unittest.skipIf(not HAS_CFFI, \"ffi tests require cffi package\")\n     def test_cpu(self):\n-        compile_extension(\n+        create_extension(\n             name='test_extensions.cpulib',\n-            header=test_dir + '/ffi/src/cpu/lib.h',\n+            headers=[test_dir + '/ffi/src/cpu/lib.h'],\n             sources=[\n                 test_dir + '/ffi/src/cpu/lib1.c',\n                 test_dir + '/ffi/src/cpu/lib2.c',\n             ],\n-            verbose=False,\n+            verbose=True,\n         )\n         from test_extensions import cpulib\n         tensor = torch.ones(2, 2).float()\n@@ -386,9 +391,9 @@ class TestFFI(TestCase):\n \n     @unittest.skipIf(not HAS_CFFI or not HAS_CUDA, \"ffi tests require cffi package\")\n     def test_gpu(self):\n-        compile_extension(\n+        create_extension(\n             name='gpulib',\n-            header=test_dir + '/ffi/src/cuda/cudalib.h',\n+            headers=[test_dir + '/ffi/src/cuda/cudalib.h'],\n             sources=[\n                 test_dir + '/ffi/src/cuda/cudalib.c',\n             ],\n</code></pre>\n<p>But no compiling seems to happen when I run it, and so I get this error:</p>\n<pre><code>======================================================================\nERROR: test_cpu (__main__.TestFFI)\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"test/test_utils.py\", line 375, in test_cpu\n    from test_extensions import cpulib\n  File \"/tmp/tmp035br9l2/test_extensions/cpulib/__init__.py\", line 3, in &lt;module&gt;\n    from ._cpulib import lib as _lib, ffi as _ffi\nModuleNotFoundError: No module named 'test_extensions.cpulib._cpulib'\n\n\n</code></pre>\n<p>I haven't looked into how <code>torch.utils.ffi</code> is actually implemented yet.</p>\n<p>CC <a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=1310570\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/soumith\">@soumith</a> <a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=4583066\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/apaszke\">@apaszke</a></p>", "body_text": "In test_utils.py we have\ntry:\n    import cffi\n    from torch.utils.ffi import compile_extension\n    HAS_CFFI = True\nexcept ImportError:\n    HAS_CFFI = False\n\nbut compile_extension no longer exists, it's called create_extension now. So we always skip.\nI applied this patch:\ndiff --git a/test/test_utils.py b/test/test_utils.py\nindex 9e9d358..ba9f709 100644\n--- a/test/test_utils.py\n+++ b/test/test_utils.py\n@@ -28,11 +28,14 @@ from common import TestCase, run_tests, download_file\n \n try:\n     import cffi\n-    from torch.utils.ffi import compile_extension\n     HAS_CFFI = True\n except ImportError:\n+    raise\n     HAS_CFFI = False\n \n+if HAS_CFFI:\n+    from torch.utils.ffi import create_extension\n+\n \n class SimplePlugin(Plugin):\n \n@@ -352,20 +355,22 @@ class TestFFI(TestCase):\n         self.tmpdir = tempfile.mkdtemp()\n         os.chdir(self.tmpdir)\n         sys.path.append(self.tmpdir)\n+        print(self.tmpdir)\n \n     def tearDown(self):\n-        shutil.rmtree(self.tmpdir)\n+        #shutil.rmtree(self.tmpdir)\n+        pass\n \n     @unittest.skipIf(not HAS_CFFI, \"ffi tests require cffi package\")\n     def test_cpu(self):\n-        compile_extension(\n+        create_extension(\n             name='test_extensions.cpulib',\n-            header=test_dir + '/ffi/src/cpu/lib.h',\n+            headers=[test_dir + '/ffi/src/cpu/lib.h'],\n             sources=[\n                 test_dir + '/ffi/src/cpu/lib1.c',\n                 test_dir + '/ffi/src/cpu/lib2.c',\n             ],\n-            verbose=False,\n+            verbose=True,\n         )\n         from test_extensions import cpulib\n         tensor = torch.ones(2, 2).float()\n@@ -386,9 +391,9 @@ class TestFFI(TestCase):\n \n     @unittest.skipIf(not HAS_CFFI or not HAS_CUDA, \"ffi tests require cffi package\")\n     def test_gpu(self):\n-        compile_extension(\n+        create_extension(\n             name='gpulib',\n-            header=test_dir + '/ffi/src/cuda/cudalib.h',\n+            headers=[test_dir + '/ffi/src/cuda/cudalib.h'],\n             sources=[\n                 test_dir + '/ffi/src/cuda/cudalib.c',\n             ],\n\nBut no compiling seems to happen when I run it, and so I get this error:\n======================================================================\nERROR: test_cpu (__main__.TestFFI)\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"test/test_utils.py\", line 375, in test_cpu\n    from test_extensions import cpulib\n  File \"/tmp/tmp035br9l2/test_extensions/cpulib/__init__.py\", line 3, in <module>\n    from ._cpulib import lib as _lib, ffi as _ffi\nModuleNotFoundError: No module named 'test_extensions.cpulib._cpulib'\n\n\n\nI haven't looked into how torch.utils.ffi is actually implemented yet.\nCC @soumith @apaszke", "body": "In `test_utils.py` we have\r\n\r\n```\r\ntry:\r\n    import cffi\r\n    from torch.utils.ffi import compile_extension\r\n    HAS_CFFI = True\r\nexcept ImportError:\r\n    HAS_CFFI = False\r\n```\r\n\r\nbut `compile_extension` no longer exists, it's called `create_extension` now. So we always skip.\r\n\r\nI applied this patch:\r\n\r\n```\r\ndiff --git a/test/test_utils.py b/test/test_utils.py\r\nindex 9e9d358..ba9f709 100644\r\n--- a/test/test_utils.py\r\n+++ b/test/test_utils.py\r\n@@ -28,11 +28,14 @@ from common import TestCase, run_tests, download_file\r\n \r\n try:\r\n     import cffi\r\n-    from torch.utils.ffi import compile_extension\r\n     HAS_CFFI = True\r\n except ImportError:\r\n+    raise\r\n     HAS_CFFI = False\r\n \r\n+if HAS_CFFI:\r\n+    from torch.utils.ffi import create_extension\r\n+\r\n \r\n class SimplePlugin(Plugin):\r\n \r\n@@ -352,20 +355,22 @@ class TestFFI(TestCase):\r\n         self.tmpdir = tempfile.mkdtemp()\r\n         os.chdir(self.tmpdir)\r\n         sys.path.append(self.tmpdir)\r\n+        print(self.tmpdir)\r\n \r\n     def tearDown(self):\r\n-        shutil.rmtree(self.tmpdir)\r\n+        #shutil.rmtree(self.tmpdir)\r\n+        pass\r\n \r\n     @unittest.skipIf(not HAS_CFFI, \"ffi tests require cffi package\")\r\n     def test_cpu(self):\r\n-        compile_extension(\r\n+        create_extension(\r\n             name='test_extensions.cpulib',\r\n-            header=test_dir + '/ffi/src/cpu/lib.h',\r\n+            headers=[test_dir + '/ffi/src/cpu/lib.h'],\r\n             sources=[\r\n                 test_dir + '/ffi/src/cpu/lib1.c',\r\n                 test_dir + '/ffi/src/cpu/lib2.c',\r\n             ],\r\n-            verbose=False,\r\n+            verbose=True,\r\n         )\r\n         from test_extensions import cpulib\r\n         tensor = torch.ones(2, 2).float()\r\n@@ -386,9 +391,9 @@ class TestFFI(TestCase):\r\n \r\n     @unittest.skipIf(not HAS_CFFI or not HAS_CUDA, \"ffi tests require cffi package\")\r\n     def test_gpu(self):\r\n-        compile_extension(\r\n+        create_extension(\r\n             name='gpulib',\r\n-            header=test_dir + '/ffi/src/cuda/cudalib.h',\r\n+            headers=[test_dir + '/ffi/src/cuda/cudalib.h'],\r\n             sources=[\r\n                 test_dir + '/ffi/src/cuda/cudalib.c',\r\n             ],\r\n```\r\n\r\nBut no compiling seems to happen when I run it, and so I get this error:\r\n\r\n```\r\n======================================================================\r\nERROR: test_cpu (__main__.TestFFI)\r\n----------------------------------------------------------------------\r\nTraceback (most recent call last):\r\n  File \"test/test_utils.py\", line 375, in test_cpu\r\n    from test_extensions import cpulib\r\n  File \"/tmp/tmp035br9l2/test_extensions/cpulib/__init__.py\", line 3, in <module>\r\n    from ._cpulib import lib as _lib, ffi as _ffi\r\nModuleNotFoundError: No module named 'test_extensions.cpulib._cpulib'\r\n\r\n\r\n```\r\n\r\nI haven't looked into how `torch.utils.ffi` is actually implemented yet.\r\n\r\nCC @soumith @apaszke "}