{"url": "https://api.github.com/repos/pytorch/pytorch/issues/comments/301782423", "html_url": "https://github.com/pytorch/pytorch/pull/1569#issuecomment-301782423", "issue_url": "https://api.github.com/repos/pytorch/pytorch/issues/1569", "id": 301782423, "node_id": "MDEyOklzc3VlQ29tbWVudDMwMTc4MjQyMw==", "user": {"login": "caogang", "id": 2537027, "node_id": "MDQ6VXNlcjI1MzcwMjc=", "avatar_url": "https://avatars1.githubusercontent.com/u/2537027?v=4", "gravatar_id": "", "url": "https://api.github.com/users/caogang", "html_url": "https://github.com/caogang", "followers_url": "https://api.github.com/users/caogang/followers", "following_url": "https://api.github.com/users/caogang/following{/other_user}", "gists_url": "https://api.github.com/users/caogang/gists{/gist_id}", "starred_url": "https://api.github.com/users/caogang/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/caogang/subscriptions", "organizations_url": "https://api.github.com/users/caogang/orgs", "repos_url": "https://api.github.com/users/caogang/repos", "events_url": "https://api.github.com/users/caogang/events{/privacy}", "received_events_url": "https://api.github.com/users/caogang/received_events", "type": "User", "site_admin": false}, "created_at": "2017-05-16T13:30:19Z", "updated_at": "2017-05-16T13:30:19Z", "author_association": "CONTRIBUTOR", "body_html": "<p>Ok, I change the test code as follows. it can still pass the test</p>\n<div class=\"highlight highlight-source-python\"><pre>inputs <span class=\"pl-k\">=</span> (autograd.Variable(torch.randn(<span class=\"pl-c1\">1</span>, <span class=\"pl-c1\">12</span>, <span class=\"pl-c1\">12</span>).double(), <span class=\"pl-v\">requires_grad</span><span class=\"pl-k\">=</span><span class=\"pl-c1\">True</span>),\n               autograd.Variable(torch.randn(<span class=\"pl-c1\">10</span>, <span class=\"pl-c1\">12</span>, <span class=\"pl-c1\">5</span>).double(), <span class=\"pl-v\">requires_grad</span><span class=\"pl-k\">=</span><span class=\"pl-c1\">True</span>,),\n               autograd.Variable(torch.randn(<span class=\"pl-c1\">10</span>).double(), <span class=\"pl-v\">requires_grad</span><span class=\"pl-k\">=</span><span class=\"pl-c1\">True</span>))\ntest <span class=\"pl-k\">=</span> gradcheck(<span class=\"pl-k\">lambda</span> <span class=\"pl-smi\">i</span>, <span class=\"pl-smi\">w</span>, <span class=\"pl-smi\">b</span> : F.conv1d(i, w, b), inputs, <span class=\"pl-v\">eps</span><span class=\"pl-k\">=</span><span class=\"pl-c1\">1e-6</span>, <span class=\"pl-v\">atol</span><span class=\"pl-k\">=</span><span class=\"pl-c1\">1e-4</span>)\n<span class=\"pl-c1\">print</span>(test)\ninputs <span class=\"pl-k\">=</span> (autograd.Variable(torch.randn(<span class=\"pl-c1\">1</span>, <span class=\"pl-c1\">12</span>, <span class=\"pl-c1\">12</span>).double(), <span class=\"pl-v\">requires_grad</span><span class=\"pl-k\">=</span><span class=\"pl-c1\">True</span>),\n               autograd.Variable(torch.randn(<span class=\"pl-c1\">12</span>, <span class=\"pl-c1\">10</span>, <span class=\"pl-c1\">5</span>).double(), <span class=\"pl-v\">requires_grad</span><span class=\"pl-k\">=</span><span class=\"pl-c1\">True</span>,),\n               autograd.Variable(torch.randn(<span class=\"pl-c1\">10</span>).double(), <span class=\"pl-v\">requires_grad</span><span class=\"pl-k\">=</span><span class=\"pl-c1\">True</span>))\ntest <span class=\"pl-k\">=</span> gradcheck(<span class=\"pl-k\">lambda</span> <span class=\"pl-smi\">i</span>, <span class=\"pl-smi\">w</span>, <span class=\"pl-smi\">b</span> : F.conv1d(i, w, b), inputs, <span class=\"pl-v\">eps</span><span class=\"pl-k\">=</span><span class=\"pl-c1\">1e-6</span>, <span class=\"pl-v\">atol</span><span class=\"pl-k\">=</span><span class=\"pl-c1\">1e-4</span>)\n<span class=\"pl-c1\">print</span>(test)</pre></div>", "body_text": "Ok, I change the test code as follows. it can still pass the test\ninputs = (autograd.Variable(torch.randn(1, 12, 12).double(), requires_grad=True),\n               autograd.Variable(torch.randn(10, 12, 5).double(), requires_grad=True,),\n               autograd.Variable(torch.randn(10).double(), requires_grad=True))\ntest = gradcheck(lambda i, w, b : F.conv1d(i, w, b), inputs, eps=1e-6, atol=1e-4)\nprint(test)\ninputs = (autograd.Variable(torch.randn(1, 12, 12).double(), requires_grad=True),\n               autograd.Variable(torch.randn(12, 10, 5).double(), requires_grad=True,),\n               autograd.Variable(torch.randn(10).double(), requires_grad=True))\ntest = gradcheck(lambda i, w, b : F.conv1d(i, w, b), inputs, eps=1e-6, atol=1e-4)\nprint(test)", "body": "Ok, I change the test code as follows. it can still pass the test\r\n\r\n```python\r\ninputs = (autograd.Variable(torch.randn(1, 12, 12).double(), requires_grad=True),\r\n               autograd.Variable(torch.randn(10, 12, 5).double(), requires_grad=True,),\r\n               autograd.Variable(torch.randn(10).double(), requires_grad=True))\r\ntest = gradcheck(lambda i, w, b : F.conv1d(i, w, b), inputs, eps=1e-6, atol=1e-4)\r\nprint(test)\r\ninputs = (autograd.Variable(torch.randn(1, 12, 12).double(), requires_grad=True),\r\n               autograd.Variable(torch.randn(12, 10, 5).double(), requires_grad=True,),\r\n               autograd.Variable(torch.randn(10).double(), requires_grad=True))\r\ntest = gradcheck(lambda i, w, b : F.conv1d(i, w, b), inputs, eps=1e-6, atol=1e-4)\r\nprint(test)\r\n```"}