{"url": "https://api.github.com/repos/pytorch/pytorch/issues/8553", "repository_url": "https://api.github.com/repos/pytorch/pytorch", "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/8553/labels{/name}", "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/8553/comments", "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/8553/events", "html_url": "https://github.com/pytorch/pytorch/issues/8553", "id": 332800635, "node_id": "MDU6SXNzdWUzMzI4MDA2MzU=", "number": 8553, "title": "import torch._thnn during initial setup transitively triggers import of C extension, leading to module 'torch' has no attribute", "user": {"login": "ezyang", "id": 13564, "node_id": "MDQ6VXNlcjEzNTY0", "avatar_url": "https://avatars0.githubusercontent.com/u/13564?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ezyang", "html_url": "https://github.com/ezyang", "followers_url": "https://api.github.com/users/ezyang/followers", "following_url": "https://api.github.com/users/ezyang/following{/other_user}", "gists_url": "https://api.github.com/users/ezyang/gists{/gist_id}", "starred_url": "https://api.github.com/users/ezyang/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ezyang/subscriptions", "organizations_url": "https://api.github.com/users/ezyang/orgs", "repos_url": "https://api.github.com/users/ezyang/repos", "events_url": "https://api.github.com/users/ezyang/events{/privacy}", "received_events_url": "https://api.github.com/users/ezyang/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": {"login": "anderspapitto", "id": 1388690, "node_id": "MDQ6VXNlcjEzODg2OTA=", "avatar_url": "https://avatars3.githubusercontent.com/u/1388690?v=4", "gravatar_id": "", "url": "https://api.github.com/users/anderspapitto", "html_url": "https://github.com/anderspapitto", "followers_url": "https://api.github.com/users/anderspapitto/followers", "following_url": "https://api.github.com/users/anderspapitto/following{/other_user}", "gists_url": "https://api.github.com/users/anderspapitto/gists{/gist_id}", "starred_url": "https://api.github.com/users/anderspapitto/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/anderspapitto/subscriptions", "organizations_url": "https://api.github.com/users/anderspapitto/orgs", "repos_url": "https://api.github.com/users/anderspapitto/repos", "events_url": "https://api.github.com/users/anderspapitto/events{/privacy}", "received_events_url": "https://api.github.com/users/anderspapitto/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "anderspapitto", "id": 1388690, "node_id": "MDQ6VXNlcjEzODg2OTA=", "avatar_url": "https://avatars3.githubusercontent.com/u/1388690?v=4", "gravatar_id": "", "url": "https://api.github.com/users/anderspapitto", "html_url": "https://github.com/anderspapitto", "followers_url": "https://api.github.com/users/anderspapitto/followers", "following_url": "https://api.github.com/users/anderspapitto/following{/other_user}", "gists_url": "https://api.github.com/users/anderspapitto/gists{/gist_id}", "starred_url": "https://api.github.com/users/anderspapitto/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/anderspapitto/subscriptions", "organizations_url": "https://api.github.com/users/anderspapitto/orgs", "repos_url": "https://api.github.com/users/anderspapitto/repos", "events_url": "https://api.github.com/users/anderspapitto/events{/privacy}", "received_events_url": "https://api.github.com/users/anderspapitto/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 3, "created_at": "2018-06-15T14:37:27Z", "updated_at": "2018-06-21T14:05:45Z", "closed_at": "2018-06-21T14:05:44Z", "author_association": "CONTRIBUTOR", "body_html": "<p>Steps to reproduce:</p>\n<ol>\n<li>Build PyTorch</li>\n<li>Add a new native function and a docstring for it in <code>torch._torch_docs</code> (the key is that, there should be a new symbol added to <code>torch._C</code>, and a function in <code>_torch_docs</code> which relies on this symbol being defined)</li>\n<li>Rebuild PyTorch</li>\n</ol>\n<p>Expected result: It works</p>\n<p>Actual result: In my most recent build, I get:</p>\n<pre><code>Traceback (most recent call last):\n  File \"tools/setup_helpers/generate_code.py\", line 110, in &lt;module&gt;\n    main()\n  File \"tools/setup_helpers/generate_code.py\", line 106, in main\n    options.install_dir)\n  File \"tools/setup_helpers/generate_code.py\", line 80, in generate_code\n    from tools.nnwrap import generate_wrappers as generate_nn_wrappers\n  File \"/data/users/ezyang/pytorch-tmp/tools/nnwrap/__init__.py\", line 1, in &lt;module&gt;\n    from .generate_wrappers import generate_wrappers, wrap_function\n  File \"/data/users/ezyang/pytorch-tmp/tools/nnwrap/generate_wrappers.py\", line 13, in &lt;module&gt;\n    from torch._thnn import utils as thnn_utils\n  File \"/data/users/ezyang/pytorch-tmp/torch/__init__.py\", line 292, in &lt;module&gt;\n    from . import _torch_docs, _tensor_docs, _storage_docs\n  File \"/data/users/ezyang/pytorch-tmp/torch/_torch_docs.py\", line 600, in &lt;module&gt;\n    add_docstr(torch.bincount,\nAttributeError: module 'torch' has no attribute 'bincount'\n</code></pre>\n<p>I believe the reason is the following diff in <a class=\"commit-link\" data-hovercard-type=\"commit\" data-hovercard-url=\"https://github.com/pytorch/pytorch/commit/fcd9af8a257f83450ba82cccd227fe43bde7c879/hovercard\" href=\"https://github.com/pytorch/pytorch/commit/fcd9af8a257f83450ba82cccd227fe43bde7c879\"><tt>fcd9af8</tt></a> (<a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load issue title\" data-id=\"331734306\" data-permission-text=\"Issue title is private\" data-url=\"https://github.com/pytorch/pytorch/issues/8397\" data-hovercard-type=\"pull_request\" data-hovercard-url=\"/pytorch/pytorch/pull/8397/hovercard\" href=\"https://github.com/pytorch/pytorch/pull/8397\">#8397</a>):</p>\n<pre><code>-thnn_utils = import_module('torch._thnn.utils', THNN_UTILS_PATH)\n+try:\n+    from torch._thnn import utils as thnn_utils\n+except ImportError:\n+    from ..shared import import_module\n+    thnn_utils = import_module('torch._thnn.utils', THNN_UTILS_PATH)\n</code></pre>\n<p><code>torch._thnn</code> is inside <code>torch</code>, which means that a regular (non <code>import_module</code>) import will first try to load <code>torch/__init__.py</code>, which is what sets up the docstrings. But this is happening before we've built the C extension, so not everything you want is there.</p>", "body_text": "Steps to reproduce:\n\nBuild PyTorch\nAdd a new native function and a docstring for it in torch._torch_docs (the key is that, there should be a new symbol added to torch._C, and a function in _torch_docs which relies on this symbol being defined)\nRebuild PyTorch\n\nExpected result: It works\nActual result: In my most recent build, I get:\nTraceback (most recent call last):\n  File \"tools/setup_helpers/generate_code.py\", line 110, in <module>\n    main()\n  File \"tools/setup_helpers/generate_code.py\", line 106, in main\n    options.install_dir)\n  File \"tools/setup_helpers/generate_code.py\", line 80, in generate_code\n    from tools.nnwrap import generate_wrappers as generate_nn_wrappers\n  File \"/data/users/ezyang/pytorch-tmp/tools/nnwrap/__init__.py\", line 1, in <module>\n    from .generate_wrappers import generate_wrappers, wrap_function\n  File \"/data/users/ezyang/pytorch-tmp/tools/nnwrap/generate_wrappers.py\", line 13, in <module>\n    from torch._thnn import utils as thnn_utils\n  File \"/data/users/ezyang/pytorch-tmp/torch/__init__.py\", line 292, in <module>\n    from . import _torch_docs, _tensor_docs, _storage_docs\n  File \"/data/users/ezyang/pytorch-tmp/torch/_torch_docs.py\", line 600, in <module>\n    add_docstr(torch.bincount,\nAttributeError: module 'torch' has no attribute 'bincount'\n\nI believe the reason is the following diff in fcd9af8 (#8397):\n-thnn_utils = import_module('torch._thnn.utils', THNN_UTILS_PATH)\n+try:\n+    from torch._thnn import utils as thnn_utils\n+except ImportError:\n+    from ..shared import import_module\n+    thnn_utils = import_module('torch._thnn.utils', THNN_UTILS_PATH)\n\ntorch._thnn is inside torch, which means that a regular (non import_module) import will first try to load torch/__init__.py, which is what sets up the docstrings. But this is happening before we've built the C extension, so not everything you want is there.", "body": "Steps to reproduce:\r\n1. Build PyTorch\r\n2. Add a new native function and a docstring for it in `torch._torch_docs` (the key is that, there should be a new symbol added to `torch._C`, and a function in `_torch_docs` which relies on this symbol being defined)\r\n3. Rebuild PyTorch\r\n\r\nExpected result: It works\r\n\r\nActual result: In my most recent build, I get:\r\n\r\n```\r\nTraceback (most recent call last):\r\n  File \"tools/setup_helpers/generate_code.py\", line 110, in <module>\r\n    main()\r\n  File \"tools/setup_helpers/generate_code.py\", line 106, in main\r\n    options.install_dir)\r\n  File \"tools/setup_helpers/generate_code.py\", line 80, in generate_code\r\n    from tools.nnwrap import generate_wrappers as generate_nn_wrappers\r\n  File \"/data/users/ezyang/pytorch-tmp/tools/nnwrap/__init__.py\", line 1, in <module>\r\n    from .generate_wrappers import generate_wrappers, wrap_function\r\n  File \"/data/users/ezyang/pytorch-tmp/tools/nnwrap/generate_wrappers.py\", line 13, in <module>\r\n    from torch._thnn import utils as thnn_utils\r\n  File \"/data/users/ezyang/pytorch-tmp/torch/__init__.py\", line 292, in <module>\r\n    from . import _torch_docs, _tensor_docs, _storage_docs\r\n  File \"/data/users/ezyang/pytorch-tmp/torch/_torch_docs.py\", line 600, in <module>\r\n    add_docstr(torch.bincount,\r\nAttributeError: module 'torch' has no attribute 'bincount'\r\n```\r\n\r\nI believe the reason is the following diff in fcd9af8a257f83450ba82cccd227fe43bde7c879 (#8397):\r\n\r\n```\r\n-thnn_utils = import_module('torch._thnn.utils', THNN_UTILS_PATH)\r\n+try:\r\n+    from torch._thnn import utils as thnn_utils\r\n+except ImportError:\r\n+    from ..shared import import_module\r\n+    thnn_utils = import_module('torch._thnn.utils', THNN_UTILS_PATH)\r\n```\r\n\r\n`torch._thnn` is inside `torch`, which means that a regular (non `import_module`) import will first try to load `torch/__init__.py`, which is what sets up the docstrings. But this is happening before we've built the C extension, so not everything you want is there."}