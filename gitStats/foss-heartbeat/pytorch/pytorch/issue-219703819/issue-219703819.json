{"url": "https://api.github.com/repos/pytorch/pytorch/issues/1197", "repository_url": "https://api.github.com/repos/pytorch/pytorch", "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/1197/labels{/name}", "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/1197/comments", "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/1197/events", "html_url": "https://github.com/pytorch/pytorch/issues/1197", "id": 219703819, "node_id": "MDU6SXNzdWUyMTk3MDM4MTk=", "number": 1197, "title": "torch.nn.MaxPool3d returns junk indices", "user": {"login": "alexander-beer-weiss", "id": 9837758, "node_id": "MDQ6VXNlcjk4Mzc3NTg=", "avatar_url": "https://avatars2.githubusercontent.com/u/9837758?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexander-beer-weiss", "html_url": "https://github.com/alexander-beer-weiss", "followers_url": "https://api.github.com/users/alexander-beer-weiss/followers", "following_url": "https://api.github.com/users/alexander-beer-weiss/following{/other_user}", "gists_url": "https://api.github.com/users/alexander-beer-weiss/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexander-beer-weiss/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexander-beer-weiss/subscriptions", "organizations_url": "https://api.github.com/users/alexander-beer-weiss/orgs", "repos_url": "https://api.github.com/users/alexander-beer-weiss/repos", "events_url": "https://api.github.com/users/alexander-beer-weiss/events{/privacy}", "received_events_url": "https://api.github.com/users/alexander-beer-weiss/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 424131849, "node_id": "MDU6TGFiZWw0MjQxMzE4NDk=", "url": "https://api.github.com/repos/pytorch/pytorch/labels/enhancement", "name": "enhancement", "color": "84b6eb", "default": true}, {"id": 443484050, "node_id": "MDU6TGFiZWw0NDM0ODQwNTA=", "url": "https://api.github.com/repos/pytorch/pytorch/labels/medium%20priority", "name": "medium priority", "color": "fbca04", "default": false}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2017-04-05T20:23:18Z", "updated_at": "2018-03-08T11:19:53Z", "closed_at": "2018-03-08T11:19:52Z", "author_association": "NONE", "body_html": "<p><code>MaxPool3d(return_indices=True)</code> returns junk indices, both on CPU and GPU.</p>\n<p>Here is an example:</p>\n<div class=\"highlight highlight-source-python\"><pre>pool3d <span class=\"pl-k\">=</span> nn.MaxPool3d(<span class=\"pl-v\">kernel_size</span><span class=\"pl-k\">=</span><span class=\"pl-c1\">2</span>,<span class=\"pl-v\">stride</span><span class=\"pl-k\">=</span><span class=\"pl-c1\">2</span>,<span class=\"pl-v\">return_indices</span><span class=\"pl-k\">=</span><span class=\"pl-c1\">True</span>)\nimg3d <span class=\"pl-k\">=</span> Variable(torch.rand(<span class=\"pl-c1\">1</span>,<span class=\"pl-c1\">1</span>,<span class=\"pl-c1\">4</span>,<span class=\"pl-c1\">4</span>,<span class=\"pl-c1\">4</span>))\nout, indices <span class=\"pl-k\">=</span> pool3d(img3d)\n<span class=\"pl-c1\">print</span>(indices)</pre></div>\n<p>The output looks like this:</p>\n<pre><code>Variable containing:\n(0 ,0 ,0 ,.,.) = \n  4.6117e+18  4.6117e+18\n  4.2950e+09  2.3224e+18\n\n(0 ,0 ,1 ,.,.) = \n  4.2950e+09  4.2950e+09\n -8.9845e+18  4.2950e+09\n[torch.LongTensor of size 1x1x2x2x2]\n</code></pre>", "body_text": "MaxPool3d(return_indices=True) returns junk indices, both on CPU and GPU.\nHere is an example:\npool3d = nn.MaxPool3d(kernel_size=2,stride=2,return_indices=True)\nimg3d = Variable(torch.rand(1,1,4,4,4))\nout, indices = pool3d(img3d)\nprint(indices)\nThe output looks like this:\nVariable containing:\n(0 ,0 ,0 ,.,.) = \n  4.6117e+18  4.6117e+18\n  4.2950e+09  2.3224e+18\n\n(0 ,0 ,1 ,.,.) = \n  4.2950e+09  4.2950e+09\n -8.9845e+18  4.2950e+09\n[torch.LongTensor of size 1x1x2x2x2]", "body": "```MaxPool3d(return_indices=True)``` returns junk indices, both on CPU and GPU.\r\n\r\nHere is an example:\r\n```python\r\npool3d = nn.MaxPool3d(kernel_size=2,stride=2,return_indices=True)\r\nimg3d = Variable(torch.rand(1,1,4,4,4))\r\nout, indices = pool3d(img3d)\r\nprint(indices)\r\n```\r\nThe output looks like this:\r\n```\r\nVariable containing:\r\n(0 ,0 ,0 ,.,.) = \r\n  4.6117e+18  4.6117e+18\r\n  4.2950e+09  2.3224e+18\r\n\r\n(0 ,0 ,1 ,.,.) = \r\n  4.2950e+09  4.2950e+09\r\n -8.9845e+18  4.2950e+09\r\n[torch.LongTensor of size 1x1x2x2x2]\r\n```"}