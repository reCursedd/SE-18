{"url": "https://api.github.com/repos/pytorch/pytorch/issues/5601", "repository_url": "https://api.github.com/repos/pytorch/pytorch", "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/5601/labels{/name}", "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/5601/comments", "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/5601/events", "html_url": "https://github.com/pytorch/pytorch/issues/5601", "id": 302924860, "node_id": "MDU6SXNzdWUzMDI5MjQ4NjA=", "number": 5601, "title": "I think Bilinear() should support 3D tensor like Linear() does", "user": {"login": "xiongzhp", "id": 3404885, "node_id": "MDQ6VXNlcjM0MDQ4ODU=", "avatar_url": "https://avatars0.githubusercontent.com/u/3404885?v=4", "gravatar_id": "", "url": "https://api.github.com/users/xiongzhp", "html_url": "https://github.com/xiongzhp", "followers_url": "https://api.github.com/users/xiongzhp/followers", "following_url": "https://api.github.com/users/xiongzhp/following{/other_user}", "gists_url": "https://api.github.com/users/xiongzhp/gists{/gist_id}", "starred_url": "https://api.github.com/users/xiongzhp/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/xiongzhp/subscriptions", "organizations_url": "https://api.github.com/users/xiongzhp/orgs", "repos_url": "https://api.github.com/users/xiongzhp/repos", "events_url": "https://api.github.com/users/xiongzhp/events{/privacy}", "received_events_url": "https://api.github.com/users/xiongzhp/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2018-03-07T00:54:42Z", "updated_at": "2018-03-17T15:57:44Z", "closed_at": "2018-03-17T15:57:44Z", "author_association": "NONE", "body_html": "<p>When I execute following code, it is gonna get</p>\n<blockquote>\n<p>RuntimeError: matrices expected, got 3D, 2D tensors</p>\n</blockquote>\n<h2><code>import torch.nn as nn</code><br>\n<code>m = nn.Bilinear(2, 3, 4)</code><br>\n<code>input1 = Variable(torch.randn(5, 3, 2))</code><br>\n<code>input2 = Variable(torch.randn(5, 3, 3))</code><br>\n<code>output = m(input1, input2)</code><br>\n<code>print(output.size())</code></h2>\n<p>RuntimeError                              Traceback (most recent call last)<br>\n in ()<br>\n----&gt; 1 output = m(input1, input2)<br>\n2 print(output.size())</p>\n<p>~/anaconda3/envs/deepchem/lib/python3.5/site-packages/torch/nn/modules/module.py in <strong>call</strong>(self, *input, **kwargs)<br>\n323         for hook in self._forward_pre_hooks.values():<br>\n324             hook(self, input)<br>\n--&gt; 325         result = self.forward(*input, **kwargs)<br>\n326         for hook in self._forward_hooks.values():<br>\n327             hook_result = hook(self, input, result)</p>\n<p>~/anaconda3/envs/deepchem/lib/python3.5/site-packages/torch/nn/modules/linear.py in forward(self, input1, input2)<br>\n110<br>\n111     def forward(self, input1, input2):<br>\n--&gt; 112         return F.bilinear(input1, input2, self.weight, self.bias)<br>\n113<br>\n114     def <strong>repr</strong>(self):</p>\n<p>~/anaconda3/envs/deepchem/lib/python3.5/site-packages/torch/nn/functional.py in bilinear(input1, input2, weight, bias)<br>\n845         return Bilinear.apply(input1, input2, weight)<br>\n846     else:<br>\n--&gt; 847         return Bilinear.apply(input1, input2, weight, bias)<br>\n848<br>\n849</p>\n<p>~/anaconda3/envs/deepchem/lib/python3.5/site-packages/torch/nn/<em>functions/linear.py in forward(ctx, input1, input2, weight, bias)<br>\n15         # compute output scores:<br>\n16         for k, w in enumerate(weight):<br>\n---&gt; 17             torch.mm(input1, w, out=buff)<br>\n18             buff.mul</em>(input2)<br>\n19             torch.sum(buff, 1, keepdim=True, out=output.narrow(1, k, 1))</p>\n<p>RuntimeError: matrices expected, got 3D, 2D tensors at /opt/conda/conda-bld/pytorch_1512383260527/work/torch/lib/TH/generic/THTensorMath.c:1411</p>", "body_text": "When I execute following code, it is gonna get\n\nRuntimeError: matrices expected, got 3D, 2D tensors\n\nimport torch.nn as nn\nm = nn.Bilinear(2, 3, 4)\ninput1 = Variable(torch.randn(5, 3, 2))\ninput2 = Variable(torch.randn(5, 3, 3))\noutput = m(input1, input2)\nprint(output.size())\nRuntimeError                              Traceback (most recent call last)\n in ()\n----> 1 output = m(input1, input2)\n2 print(output.size())\n~/anaconda3/envs/deepchem/lib/python3.5/site-packages/torch/nn/modules/module.py in call(self, *input, **kwargs)\n323         for hook in self._forward_pre_hooks.values():\n324             hook(self, input)\n--> 325         result = self.forward(*input, **kwargs)\n326         for hook in self._forward_hooks.values():\n327             hook_result = hook(self, input, result)\n~/anaconda3/envs/deepchem/lib/python3.5/site-packages/torch/nn/modules/linear.py in forward(self, input1, input2)\n110\n111     def forward(self, input1, input2):\n--> 112         return F.bilinear(input1, input2, self.weight, self.bias)\n113\n114     def repr(self):\n~/anaconda3/envs/deepchem/lib/python3.5/site-packages/torch/nn/functional.py in bilinear(input1, input2, weight, bias)\n845         return Bilinear.apply(input1, input2, weight)\n846     else:\n--> 847         return Bilinear.apply(input1, input2, weight, bias)\n848\n849\n~/anaconda3/envs/deepchem/lib/python3.5/site-packages/torch/nn/functions/linear.py in forward(ctx, input1, input2, weight, bias)\n15         # compute output scores:\n16         for k, w in enumerate(weight):\n---> 17             torch.mm(input1, w, out=buff)\n18             buff.mul(input2)\n19             torch.sum(buff, 1, keepdim=True, out=output.narrow(1, k, 1))\nRuntimeError: matrices expected, got 3D, 2D tensors at /opt/conda/conda-bld/pytorch_1512383260527/work/torch/lib/TH/generic/THTensorMath.c:1411", "body": "When I execute following code, it is gonna get \r\n\r\n> RuntimeError: matrices expected, got 3D, 2D tensors\r\n\r\n`import torch.nn as nn`\r\n`m = nn.Bilinear(2, 3, 4)`\r\n`input1 = Variable(torch.randn(5, 3, 2))`\r\n`input2 = Variable(torch.randn(5, 3, 3))`\r\n`output = m(input1, input2)`\r\n`print(output.size())`\r\n---------------------------------------------------------------------------\r\nRuntimeError                              Traceback (most recent call last)\r\n<ipython-input-23-b247cd5ad730> in <module>()\r\n----> 1 output = m(input1, input2)\r\n      2 print(output.size())\r\n\r\n~/anaconda3/envs/deepchem/lib/python3.5/site-packages/torch/nn/modules/module.py in __call__(self, *input, **kwargs)\r\n    323         for hook in self._forward_pre_hooks.values():\r\n    324             hook(self, input)\r\n--> 325         result = self.forward(*input, **kwargs)\r\n    326         for hook in self._forward_hooks.values():\r\n    327             hook_result = hook(self, input, result)\r\n\r\n~/anaconda3/envs/deepchem/lib/python3.5/site-packages/torch/nn/modules/linear.py in forward(self, input1, input2)\r\n    110 \r\n    111     def forward(self, input1, input2):\r\n--> 112         return F.bilinear(input1, input2, self.weight, self.bias)\r\n    113 \r\n    114     def __repr__(self):\r\n\r\n~/anaconda3/envs/deepchem/lib/python3.5/site-packages/torch/nn/functional.py in bilinear(input1, input2, weight, bias)\r\n    845         return Bilinear.apply(input1, input2, weight)\r\n    846     else:\r\n--> 847         return Bilinear.apply(input1, input2, weight, bias)\r\n    848 \r\n    849 \r\n\r\n~/anaconda3/envs/deepchem/lib/python3.5/site-packages/torch/nn/_functions/linear.py in forward(ctx, input1, input2, weight, bias)\r\n     15         # compute output scores:\r\n     16         for k, w in enumerate(weight):\r\n---> 17             torch.mm(input1, w, out=buff)\r\n     18             buff.mul_(input2)\r\n     19             torch.sum(buff, 1, keepdim=True, out=output.narrow(1, k, 1))\r\n\r\nRuntimeError: matrices expected, got 3D, 2D tensors at /opt/conda/conda-bld/pytorch_1512383260527/work/torch/lib/TH/generic/THTensorMath.c:1411"}