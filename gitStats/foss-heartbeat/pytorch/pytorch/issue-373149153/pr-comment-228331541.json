{"url": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/228331541", "pull_request_review_id": 168582812, "id": 228331541, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIyODMzMTU0MQ==", "diff_hunk": "@@ -5126,6 +5126,21 @@ def test_pointwise_loss_target_grad_none_reduction(self):\n         self.assertEqual(F.mse_loss(i, t, reduction='none').size(), t.size())\n         self.assertEqual(F.l1_loss(i, t, reduction='none').size(), t.size())\n \n+    def test_pointwise_loss_broadcast(self):\n+        losses = {\n+            'mse_loss': lambda x, y, r: F.mse_loss(x, y, reduction=r),\n+            'l1_loss': lambda x, y, r: F.l1_loss(x, y, reduction=r),\n+            'smooth_l1_loss': lambda x, y, r: F.smooth_l1_loss(x, y, reduction=r),\n+        }\n+\n+        input = torch.ones(2, 1)\n+        for name, fn in losses.items():\n+            for requires_grad in (True, False):\n+                # When target.requires_grad=True, its impl is in Python, while the other is in TH.\n+                target = torch.ones(2, 10, requires_grad=requires_grad)\n+                l = fn(input, target, 'none')\n+                self.assertEqual(l.size(), target.size())", "path": "test/test_nn.py", "position": null, "original_position": 17, "commit_id": "05dadc4e0ad01a986b2b915fa6ef73fa85b608b8", "original_commit_id": "584a233a509b42a2035b3eaa7134becd411a120f", "user": {"login": "SsnL", "id": 5674597, "node_id": "MDQ6VXNlcjU2NzQ1OTc=", "avatar_url": "https://avatars2.githubusercontent.com/u/5674597?v=4", "gravatar_id": "", "url": "https://api.github.com/users/SsnL", "html_url": "https://github.com/SsnL", "followers_url": "https://api.github.com/users/SsnL/followers", "following_url": "https://api.github.com/users/SsnL/following{/other_user}", "gists_url": "https://api.github.com/users/SsnL/gists{/gist_id}", "starred_url": "https://api.github.com/users/SsnL/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/SsnL/subscriptions", "organizations_url": "https://api.github.com/users/SsnL/orgs", "repos_url": "https://api.github.com/users/SsnL/repos", "events_url": "https://api.github.com/users/SsnL/events{/privacy}", "received_events_url": "https://api.github.com/users/SsnL/received_events", "type": "User", "site_admin": false}, "body": "I think one of the issues you fix is about missing backward computation. Could you also add a gradcheck here?", "created_at": "2018-10-25T20:56:07Z", "updated_at": "2018-11-23T15:53:37Z", "html_url": "https://github.com/pytorch/pytorch/pull/12996#discussion_r228331541", "pull_request_url": "https://api.github.com/repos/pytorch/pytorch/pulls/12996", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/228331541"}, "html": {"href": "https://github.com/pytorch/pytorch/pull/12996#discussion_r228331541"}, "pull_request": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/12996"}}, "body_html": "<p>I think one of the issues you fix is about missing backward computation. Could you also add a gradcheck here?</p>", "body_text": "I think one of the issues you fix is about missing backward computation. Could you also add a gradcheck here?"}