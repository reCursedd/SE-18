{"url": "https://api.github.com/repos/pytorch/pytorch/issues/5809", "repository_url": "https://api.github.com/repos/pytorch/pytorch", "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/5809/labels{/name}", "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/5809/comments", "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/5809/events", "html_url": "https://github.com/pytorch/pytorch/pull/5809", "id": 305538821, "node_id": "MDExOlB1bGxSZXF1ZXN0MTc1MjM5NzEw", "number": 5809, "title": "Allow torch.nn.DataParallel to take as inputs Modules which have parameters on CPU", "user": {"login": "shinochin", "id": 16998772, "node_id": "MDQ6VXNlcjE2OTk4Nzcy", "avatar_url": "https://avatars2.githubusercontent.com/u/16998772?v=4", "gravatar_id": "", "url": "https://api.github.com/users/shinochin", "html_url": "https://github.com/shinochin", "followers_url": "https://api.github.com/users/shinochin/followers", "following_url": "https://api.github.com/users/shinochin/following{/other_user}", "gists_url": "https://api.github.com/users/shinochin/gists{/gist_id}", "starred_url": "https://api.github.com/users/shinochin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/shinochin/subscriptions", "organizations_url": "https://api.github.com/users/shinochin/orgs", "repos_url": "https://api.github.com/users/shinochin/repos", "events_url": "https://api.github.com/users/shinochin/events{/privacy}", "received_events_url": "https://api.github.com/users/shinochin/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-03-15T12:47:55Z", "updated_at": "2018-03-15T12:51:08Z", "closed_at": "2018-03-15T12:51:08Z", "author_association": "NONE", "pull_request": {"url": "https://api.github.com/repos/pytorch/pytorch/pulls/5809", "html_url": "https://github.com/pytorch/pytorch/pull/5809", "diff_url": "https://github.com/pytorch/pytorch/pull/5809.diff", "patch_url": "https://github.com/pytorch/pytorch/pull/5809.patch"}, "body_html": "<p>I edited replicate.py so that I can do:</p>\n<pre lang=\"python:\"><code>import torch.nn as nn\nclass DistributedModel(nn.Module):\n\n    def __init__(self):\n        super().__init__(\n            embedding=nn.Embedding(1000, 10),\n            rnn=nn.Linear(10, 10).cuda(0),\n        )\n\n    def forward(self, x):\n        # Compute embedding on CPU\n        x = self.embedding(x.cpu())\n\n        # Transfer to GPU\n        x = x.cuda(0)\n\n        # Compute RNN on GPU\n        x = self.rnn(x)\n        return x\n\nmodel = DistributedModel()\nmodel = nn.DataParallel(model)\n</code></pre>\n<p>In this way, I can put some parameters of MyModel on a CPU and the others on Multi-GPUs by such a simple code.</p>", "body_text": "I edited replicate.py so that I can do:\nimport torch.nn as nn\nclass DistributedModel(nn.Module):\n\n    def __init__(self):\n        super().__init__(\n            embedding=nn.Embedding(1000, 10),\n            rnn=nn.Linear(10, 10).cuda(0),\n        )\n\n    def forward(self, x):\n        # Compute embedding on CPU\n        x = self.embedding(x.cpu())\n\n        # Transfer to GPU\n        x = x.cuda(0)\n\n        # Compute RNN on GPU\n        x = self.rnn(x)\n        return x\n\nmodel = DistributedModel()\nmodel = nn.DataParallel(model)\n\nIn this way, I can put some parameters of MyModel on a CPU and the others on Multi-GPUs by such a simple code.", "body": "I edited replicate.py so that I can do:\r\n```python:\r\nimport torch.nn as nn\r\nclass DistributedModel(nn.Module):\r\n\r\n    def __init__(self):\r\n        super().__init__(\r\n            embedding=nn.Embedding(1000, 10),\r\n            rnn=nn.Linear(10, 10).cuda(0),\r\n        )\r\n\r\n    def forward(self, x):\r\n        # Compute embedding on CPU\r\n        x = self.embedding(x.cpu())\r\n\r\n        # Transfer to GPU\r\n        x = x.cuda(0)\r\n\r\n        # Compute RNN on GPU\r\n        x = self.rnn(x)\r\n        return x\r\n\r\nmodel = DistributedModel()\r\nmodel = nn.DataParallel(model)\r\n```\r\n\r\nIn this way, I can put some parameters of MyModel on a CPU and the others on Multi-GPUs by such a simple code."}