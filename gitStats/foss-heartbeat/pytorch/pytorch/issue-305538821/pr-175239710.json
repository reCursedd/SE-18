{"url": "https://api.github.com/repos/pytorch/pytorch/pulls/5809", "id": 175239710, "node_id": "MDExOlB1bGxSZXF1ZXN0MTc1MjM5NzEw", "html_url": "https://github.com/pytorch/pytorch/pull/5809", "diff_url": "https://github.com/pytorch/pytorch/pull/5809.diff", "patch_url": "https://github.com/pytorch/pytorch/pull/5809.patch", "issue_url": "https://api.github.com/repos/pytorch/pytorch/issues/5809", "number": 5809, "state": "closed", "locked": false, "title": "Allow torch.nn.DataParallel to take as inputs Modules which have parameters on CPU", "user": {"login": "shinochin", "id": 16998772, "node_id": "MDQ6VXNlcjE2OTk4Nzcy", "avatar_url": "https://avatars2.githubusercontent.com/u/16998772?v=4", "gravatar_id": "", "url": "https://api.github.com/users/shinochin", "html_url": "https://github.com/shinochin", "followers_url": "https://api.github.com/users/shinochin/followers", "following_url": "https://api.github.com/users/shinochin/following{/other_user}", "gists_url": "https://api.github.com/users/shinochin/gists{/gist_id}", "starred_url": "https://api.github.com/users/shinochin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/shinochin/subscriptions", "organizations_url": "https://api.github.com/users/shinochin/orgs", "repos_url": "https://api.github.com/users/shinochin/repos", "events_url": "https://api.github.com/users/shinochin/events{/privacy}", "received_events_url": "https://api.github.com/users/shinochin/received_events", "type": "User", "site_admin": false}, "body": "I edited replicate.py so that I can do:\r\n```python:\r\nimport torch.nn as nn\r\nclass DistributedModel(nn.Module):\r\n\r\n    def __init__(self):\r\n        super().__init__(\r\n            embedding=nn.Embedding(1000, 10),\r\n            rnn=nn.Linear(10, 10).cuda(0),\r\n        )\r\n\r\n    def forward(self, x):\r\n        # Compute embedding on CPU\r\n        x = self.embedding(x.cpu())\r\n\r\n        # Transfer to GPU\r\n        x = x.cuda(0)\r\n\r\n        # Compute RNN on GPU\r\n        x = self.rnn(x)\r\n        return x\r\n\r\nmodel = DistributedModel()\r\nmodel = nn.DataParallel(model)\r\n```\r\n\r\nIn this way, I can put some parameters of MyModel on a CPU and the others on Multi-GPUs by such a simple code.", "created_at": "2018-03-15T12:47:55Z", "updated_at": "2018-03-15T12:51:08Z", "closed_at": "2018-03-15T12:51:08Z", "merged_at": null, "merge_commit_sha": "fe314628c3e1cc0eb067c3f47187207c135d7b3c", "assignee": null, "assignees": [], "requested_reviewers": [], "requested_teams": [], "labels": [], "milestone": null, "commits_url": "https://api.github.com/repos/pytorch/pytorch/pulls/5809/commits", "review_comments_url": "https://api.github.com/repos/pytorch/pytorch/pulls/5809/comments", "review_comment_url": "https://api.github.com/repos/pytorch/pytorch/pulls/comments{/number}", "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/5809/comments", "statuses_url": "https://api.github.com/repos/pytorch/pytorch/statuses/6d033b8daba4161db17149d1b9ac55792dcceab4", "head": {"label": "shinochin:master", "ref": "master", "sha": "6d033b8daba4161db17149d1b9ac55792dcceab4", "user": {"login": "shinochin", "id": 16998772, "node_id": "MDQ6VXNlcjE2OTk4Nzcy", "avatar_url": "https://avatars2.githubusercontent.com/u/16998772?v=4", "gravatar_id": "", "url": "https://api.github.com/users/shinochin", "html_url": "https://github.com/shinochin", "followers_url": "https://api.github.com/users/shinochin/followers", "following_url": "https://api.github.com/users/shinochin/following{/other_user}", "gists_url": "https://api.github.com/users/shinochin/gists{/gist_id}", "starred_url": "https://api.github.com/users/shinochin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/shinochin/subscriptions", "organizations_url": "https://api.github.com/users/shinochin/orgs", "repos_url": "https://api.github.com/users/shinochin/repos", "events_url": "https://api.github.com/users/shinochin/events{/privacy}", "received_events_url": "https://api.github.com/users/shinochin/received_events", "type": "User", "site_admin": false}, "repo": {"id": 125355075, "node_id": "MDEwOlJlcG9zaXRvcnkxMjUzNTUwNzU=", "name": "pytorch", "full_name": "shinochin/pytorch", "private": false, "owner": {"login": "shinochin", "id": 16998772, "node_id": "MDQ6VXNlcjE2OTk4Nzcy", "avatar_url": "https://avatars2.githubusercontent.com/u/16998772?v=4", "gravatar_id": "", "url": "https://api.github.com/users/shinochin", "html_url": "https://github.com/shinochin", "followers_url": "https://api.github.com/users/shinochin/followers", "following_url": "https://api.github.com/users/shinochin/following{/other_user}", "gists_url": "https://api.github.com/users/shinochin/gists{/gist_id}", "starred_url": "https://api.github.com/users/shinochin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/shinochin/subscriptions", "organizations_url": "https://api.github.com/users/shinochin/orgs", "repos_url": "https://api.github.com/users/shinochin/repos", "events_url": "https://api.github.com/users/shinochin/events{/privacy}", "received_events_url": "https://api.github.com/users/shinochin/received_events", "type": "User", "site_admin": false}, "html_url": "https://github.com/shinochin/pytorch", "description": "Tensors and Dynamic neural networks in Python  with strong GPU acceleration", "fork": true, "url": "https://api.github.com/repos/shinochin/pytorch", "forks_url": "https://api.github.com/repos/shinochin/pytorch/forks", "keys_url": "https://api.github.com/repos/shinochin/pytorch/keys{/key_id}", "collaborators_url": "https://api.github.com/repos/shinochin/pytorch/collaborators{/collaborator}", "teams_url": "https://api.github.com/repos/shinochin/pytorch/teams", "hooks_url": "https://api.github.com/repos/shinochin/pytorch/hooks", "issue_events_url": "https://api.github.com/repos/shinochin/pytorch/issues/events{/number}", "events_url": "https://api.github.com/repos/shinochin/pytorch/events", "assignees_url": "https://api.github.com/repos/shinochin/pytorch/assignees{/user}", "branches_url": "https://api.github.com/repos/shinochin/pytorch/branches{/branch}", "tags_url": "https://api.github.com/repos/shinochin/pytorch/tags", "blobs_url": "https://api.github.com/repos/shinochin/pytorch/git/blobs{/sha}", "git_tags_url": "https://api.github.com/repos/shinochin/pytorch/git/tags{/sha}", "git_refs_url": "https://api.github.com/repos/shinochin/pytorch/git/refs{/sha}", "trees_url": "https://api.github.com/repos/shinochin/pytorch/git/trees{/sha}", "statuses_url": "https://api.github.com/repos/shinochin/pytorch/statuses/{sha}", "languages_url": "https://api.github.com/repos/shinochin/pytorch/languages", "stargazers_url": "https://api.github.com/repos/shinochin/pytorch/stargazers", "contributors_url": "https://api.github.com/repos/shinochin/pytorch/contributors", "subscribers_url": "https://api.github.com/repos/shinochin/pytorch/subscribers", "subscription_url": "https://api.github.com/repos/shinochin/pytorch/subscription", "commits_url": "https://api.github.com/repos/shinochin/pytorch/commits{/sha}", "git_commits_url": "https://api.github.com/repos/shinochin/pytorch/git/commits{/sha}", "comments_url": "https://api.github.com/repos/shinochin/pytorch/comments{/number}", "issue_comment_url": "https://api.github.com/repos/shinochin/pytorch/issues/comments{/number}", "contents_url": "https://api.github.com/repos/shinochin/pytorch/contents/{+path}", "compare_url": "https://api.github.com/repos/shinochin/pytorch/compare/{base}...{head}", "merges_url": "https://api.github.com/repos/shinochin/pytorch/merges", "archive_url": "https://api.github.com/repos/shinochin/pytorch/{archive_format}{/ref}", "downloads_url": "https://api.github.com/repos/shinochin/pytorch/downloads", "issues_url": "https://api.github.com/repos/shinochin/pytorch/issues{/number}", "pulls_url": "https://api.github.com/repos/shinochin/pytorch/pulls{/number}", "milestones_url": "https://api.github.com/repos/shinochin/pytorch/milestones{/number}", "notifications_url": "https://api.github.com/repos/shinochin/pytorch/notifications{?since,all,participating}", "labels_url": "https://api.github.com/repos/shinochin/pytorch/labels{/name}", "releases_url": "https://api.github.com/repos/shinochin/pytorch/releases{/id}", "deployments_url": "https://api.github.com/repos/shinochin/pytorch/deployments", "created_at": "2018-03-15T11:07:59Z", "updated_at": "2018-03-15T12:23:59Z", "pushed_at": "2018-03-15T12:23:58Z", "git_url": "git://github.com/shinochin/pytorch.git", "ssh_url": "git@github.com:shinochin/pytorch.git", "clone_url": "https://github.com/shinochin/pytorch.git", "svn_url": "https://github.com/shinochin/pytorch", "homepage": "http://pytorch.org", "size": 24826, "stargazers_count": 0, "watchers_count": 0, "language": "Python", "has_issues": false, "has_projects": true, "has_downloads": true, "has_wiki": true, "has_pages": false, "forks_count": 0, "mirror_url": null, "archived": false, "open_issues_count": 0, "license": {"key": "other", "name": "Other", "spdx_id": "NOASSERTION", "url": null, "node_id": "MDc6TGljZW5zZTA="}, "forks": 0, "open_issues": 0, "watchers": 0, "default_branch": "master"}}, "base": {"label": "pytorch:master", "ref": "master", "sha": "c66111e79b1790b54493b4dea68549dd60fcf471", "user": {"login": "pytorch", "id": 21003710, "node_id": "MDEyOk9yZ2FuaXphdGlvbjIxMDAzNzEw", "avatar_url": "https://avatars3.githubusercontent.com/u/21003710?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pytorch", "html_url": "https://github.com/pytorch", "followers_url": "https://api.github.com/users/pytorch/followers", "following_url": "https://api.github.com/users/pytorch/following{/other_user}", "gists_url": "https://api.github.com/users/pytorch/gists{/gist_id}", "starred_url": "https://api.github.com/users/pytorch/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pytorch/subscriptions", "organizations_url": "https://api.github.com/users/pytorch/orgs", "repos_url": "https://api.github.com/users/pytorch/repos", "events_url": "https://api.github.com/users/pytorch/events{/privacy}", "received_events_url": "https://api.github.com/users/pytorch/received_events", "type": "Organization", "site_admin": false}, "repo": {"id": 65600975, "node_id": "MDEwOlJlcG9zaXRvcnk2NTYwMDk3NQ==", "name": "pytorch", "full_name": "pytorch/pytorch", "private": false, "owner": {"login": "pytorch", "id": 21003710, "node_id": "MDEyOk9yZ2FuaXphdGlvbjIxMDAzNzEw", "avatar_url": "https://avatars3.githubusercontent.com/u/21003710?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pytorch", "html_url": "https://github.com/pytorch", "followers_url": "https://api.github.com/users/pytorch/followers", "following_url": "https://api.github.com/users/pytorch/following{/other_user}", "gists_url": "https://api.github.com/users/pytorch/gists{/gist_id}", "starred_url": "https://api.github.com/users/pytorch/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pytorch/subscriptions", "organizations_url": "https://api.github.com/users/pytorch/orgs", "repos_url": "https://api.github.com/users/pytorch/repos", "events_url": "https://api.github.com/users/pytorch/events{/privacy}", "received_events_url": "https://api.github.com/users/pytorch/received_events", "type": "Organization", "site_admin": false}, "html_url": "https://github.com/pytorch/pytorch", "description": "Tensors and Dynamic neural networks in Python  with strong GPU acceleration", "fork": false, "url": "https://api.github.com/repos/pytorch/pytorch", "forks_url": "https://api.github.com/repos/pytorch/pytorch/forks", "keys_url": "https://api.github.com/repos/pytorch/pytorch/keys{/key_id}", "collaborators_url": "https://api.github.com/repos/pytorch/pytorch/collaborators{/collaborator}", "teams_url": "https://api.github.com/repos/pytorch/pytorch/teams", "hooks_url": "https://api.github.com/repos/pytorch/pytorch/hooks", "issue_events_url": "https://api.github.com/repos/pytorch/pytorch/issues/events{/number}", "events_url": "https://api.github.com/repos/pytorch/pytorch/events", "assignees_url": "https://api.github.com/repos/pytorch/pytorch/assignees{/user}", "branches_url": "https://api.github.com/repos/pytorch/pytorch/branches{/branch}", "tags_url": "https://api.github.com/repos/pytorch/pytorch/tags", "blobs_url": "https://api.github.com/repos/pytorch/pytorch/git/blobs{/sha}", "git_tags_url": "https://api.github.com/repos/pytorch/pytorch/git/tags{/sha}", "git_refs_url": "https://api.github.com/repos/pytorch/pytorch/git/refs{/sha}", "trees_url": "https://api.github.com/repos/pytorch/pytorch/git/trees{/sha}", "statuses_url": "https://api.github.com/repos/pytorch/pytorch/statuses/{sha}", "languages_url": "https://api.github.com/repos/pytorch/pytorch/languages", "stargazers_url": "https://api.github.com/repos/pytorch/pytorch/stargazers", "contributors_url": "https://api.github.com/repos/pytorch/pytorch/contributors", "subscribers_url": "https://api.github.com/repos/pytorch/pytorch/subscribers", "subscription_url": "https://api.github.com/repos/pytorch/pytorch/subscription", "commits_url": "https://api.github.com/repos/pytorch/pytorch/commits{/sha}", "git_commits_url": "https://api.github.com/repos/pytorch/pytorch/git/commits{/sha}", "comments_url": "https://api.github.com/repos/pytorch/pytorch/comments{/number}", "issue_comment_url": "https://api.github.com/repos/pytorch/pytorch/issues/comments{/number}", "contents_url": "https://api.github.com/repos/pytorch/pytorch/contents/{+path}", "compare_url": "https://api.github.com/repos/pytorch/pytorch/compare/{base}...{head}", "merges_url": "https://api.github.com/repos/pytorch/pytorch/merges", "archive_url": "https://api.github.com/repos/pytorch/pytorch/{archive_format}{/ref}", "downloads_url": "https://api.github.com/repos/pytorch/pytorch/downloads", "issues_url": "https://api.github.com/repos/pytorch/pytorch/issues{/number}", "pulls_url": "https://api.github.com/repos/pytorch/pytorch/pulls{/number}", "milestones_url": "https://api.github.com/repos/pytorch/pytorch/milestones{/number}", "notifications_url": "https://api.github.com/repos/pytorch/pytorch/notifications{?since,all,participating}", "labels_url": "https://api.github.com/repos/pytorch/pytorch/labels{/name}", "releases_url": "https://api.github.com/repos/pytorch/pytorch/releases{/id}", "deployments_url": "https://api.github.com/repos/pytorch/pytorch/deployments", "created_at": "2016-08-13T05:26:41Z", "updated_at": "2018-11-24T14:27:35Z", "pushed_at": "2018-11-24T12:42:01Z", "git_url": "git://github.com/pytorch/pytorch.git", "ssh_url": "git@github.com:pytorch/pytorch.git", "clone_url": "https://github.com/pytorch/pytorch.git", "svn_url": "https://github.com/pytorch/pytorch", "homepage": "http://pytorch.org", "size": 89656, "stargazers_count": 21591, "watchers_count": 21591, "language": "C++", "has_issues": true, "has_projects": true, "has_downloads": true, "has_wiki": true, "has_pages": false, "forks_count": 5154, "mirror_url": null, "archived": false, "open_issues_count": 2196, "license": {"key": "other", "name": "Other", "spdx_id": "NOASSERTION", "url": null, "node_id": "MDc6TGljZW5zZTA="}, "forks": 5154, "open_issues": 2196, "watchers": 21591, "default_branch": "master"}}, "_links": {"self": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/5809"}, "html": {"href": "https://github.com/pytorch/pytorch/pull/5809"}, "issue": {"href": "https://api.github.com/repos/pytorch/pytorch/issues/5809"}, "comments": {"href": "https://api.github.com/repos/pytorch/pytorch/issues/5809/comments"}, "review_comments": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/5809/comments"}, "review_comment": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/comments{/number}"}, "commits": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/5809/commits"}, "statuses": {"href": "https://api.github.com/repos/pytorch/pytorch/statuses/6d033b8daba4161db17149d1b9ac55792dcceab4"}}, "author_association": "NONE", "body_html": "<p>I edited replicate.py so that I can do:</p>\n<pre lang=\"python:\"><code>import torch.nn as nn\nclass DistributedModel(nn.Module):\n\n    def __init__(self):\n        super().__init__(\n            embedding=nn.Embedding(1000, 10),\n            rnn=nn.Linear(10, 10).cuda(0),\n        )\n\n    def forward(self, x):\n        # Compute embedding on CPU\n        x = self.embedding(x.cpu())\n\n        # Transfer to GPU\n        x = x.cuda(0)\n\n        # Compute RNN on GPU\n        x = self.rnn(x)\n        return x\n\nmodel = DistributedModel()\nmodel = nn.DataParallel(model)\n</code></pre>\n<p>In this way, I can put some parameters of MyModel on a CPU and the others on Multi-GPUs by such a simple code.</p>", "body_text": "I edited replicate.py so that I can do:\nimport torch.nn as nn\nclass DistributedModel(nn.Module):\n\n    def __init__(self):\n        super().__init__(\n            embedding=nn.Embedding(1000, 10),\n            rnn=nn.Linear(10, 10).cuda(0),\n        )\n\n    def forward(self, x):\n        # Compute embedding on CPU\n        x = self.embedding(x.cpu())\n\n        # Transfer to GPU\n        x = x.cuda(0)\n\n        # Compute RNN on GPU\n        x = self.rnn(x)\n        return x\n\nmodel = DistributedModel()\nmodel = nn.DataParallel(model)\n\nIn this way, I can put some parameters of MyModel on a CPU and the others on Multi-GPUs by such a simple code.", "merged": false, "mergeable": null, "rebaseable": null, "mergeable_state": "unknown", "merged_by": null, "comments": 1, "review_comments": 0, "maintainer_can_modify": false, "commits": 2, "additions": 14, "deletions": 8, "changed_files": 1}