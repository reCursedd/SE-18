{"url": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/165669739", "pull_request_review_id": 93645490, "id": 165669739, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE2NTY2OTczOQ==", "diff_hunk": "@@ -413,88 +427,126 @@ void Graph::lint() const {\n   // - uniques in all_nodes are unique\n   // - every use will occur later in the topsort\n \n-  std::unordered_set<const Value*> in_scope;\n-  std::unordered_set<const Node*> node_in_scope;\n-  std::unordered_set<size_t> seen_uniques;\n-  std::unordered_map<const Node*, int64_t> anticipated_uses;\n-  auto check_value = [&](const Value* v) {\n-    auto b = in_scope.insert(v);\n-    JIT_ASSERT(b.second);  // insertion took place\n-    auto b2 = seen_uniques.insert(v->unique());\n-    JIT_ASSERT(b2.second);  // insertion took place\n-    JIT_ASSERT(v->unique() < next_unique_);\n-\n-    for (auto use : v->uses()) {\n-      JIT_ASSERT(node_in_scope.count(use.user) == 0);\n-      JIT_ASSERT(all_nodes.count(use.user) == 1);\n-      anticipated_uses[use.user]++;  // int default constructs to 0\n+  struct Scope {\n+    Scope() {}\n+    Scope(std::unique_ptr<Scope> parent)\n+    : parent(std::move(parent)) {}\n+    bool contains(const Value * v) {\n+      return values.count(v) > 0 || (parent && parent->contains(v));\n+    }\n+    bool contains(const Node * n) {\n+      return nodes.count(n) > 0 || (parent && parent->contains(n));\n     }\n+    void insert(const Value * v) {\n+      JIT_ASSERT(!contains(v));\n+      values.insert(v);\n+    }\n+    void insert(const Node * n) {\n+      JIT_ASSERT(!contains(n));\n+      nodes.insert(n);\n+    }\n+    std::unique_ptr<Scope> parent;\n+  private:\n+    std::unordered_set<const Value*> values;\n+    std::unordered_set<const Node*> nodes;\n   };\n-  auto check_node = [&](const Node* n) {\n-    for (auto input : n->inputs_) {\n-      if (in_scope.count(input) != 1) {\n-        JIT_ASSERTM(0, \"%%%d not in scope\", input->unique());\n+  struct Env {", "path": "torch/csrc/jit/ir.cpp", "position": null, "original_position": 96, "commit_id": "454f9d893a8df35d53eb040cc0f6e38ce3e4f424", "original_commit_id": "4b55af851f06bb57ee4bf7e5021da7511f516ad7", "user": {"login": "ezyang", "id": 13564, "node_id": "MDQ6VXNlcjEzNTY0", "avatar_url": "https://avatars0.githubusercontent.com/u/13564?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ezyang", "html_url": "https://github.com/ezyang", "followers_url": "https://api.github.com/users/ezyang/followers", "following_url": "https://api.github.com/users/ezyang/following{/other_user}", "gists_url": "https://api.github.com/users/ezyang/gists{/gist_id}", "starred_url": "https://api.github.com/users/ezyang/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ezyang/subscriptions", "organizations_url": "https://api.github.com/users/ezyang/orgs", "repos_url": "https://api.github.com/users/ezyang/repos", "events_url": "https://api.github.com/users/ezyang/events{/privacy}", "received_events_url": "https://api.github.com/users/ezyang/received_events", "type": "User", "site_admin": false}, "body": "I got mislead by the name `Env` (which here just means \"environment for the linting process) because it looks a lot like what I actually think of as a closure, and not an \"environment\" in the sense of, i.e., the ECMAScript spec (which is what is called `Scope` above...)", "created_at": "2018-02-02T15:11:24Z", "updated_at": "2018-11-23T15:38:59Z", "html_url": "https://github.com/pytorch/pytorch/pull/5009#discussion_r165669739", "pull_request_url": "https://api.github.com/repos/pytorch/pytorch/pulls/5009", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/165669739"}, "html": {"href": "https://github.com/pytorch/pytorch/pull/5009#discussion_r165669739"}, "pull_request": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/5009"}}, "body_html": "<p>I got mislead by the name <code>Env</code> (which here just means \"environment for the linting process) because it looks a lot like what I actually think of as a closure, and not an \"environment\" in the sense of, i.e., the ECMAScript spec (which is what is called <code>Scope</code> above...)</p>", "body_text": "I got mislead by the name Env (which here just means \"environment for the linting process) because it looks a lot like what I actually think of as a closure, and not an \"environment\" in the sense of, i.e., the ECMAScript spec (which is what is called Scope above...)"}