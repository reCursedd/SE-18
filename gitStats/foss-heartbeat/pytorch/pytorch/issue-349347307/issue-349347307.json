{"url": "https://api.github.com/repos/pytorch/pytorch/issues/10393", "repository_url": "https://api.github.com/repos/pytorch/pytorch", "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/10393/labels{/name}", "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/10393/comments", "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/10393/events", "html_url": "https://github.com/pytorch/pytorch/issues/10393", "id": 349347307, "node_id": "MDU6SXNzdWUzNDkzNDczMDc=", "number": 10393, "title": "`DataLoader` doesn't respond to `set_default_tensor_type`", "user": {"login": "eulerreich", "id": 4183609, "node_id": "MDQ6VXNlcjQxODM2MDk=", "avatar_url": "https://avatars3.githubusercontent.com/u/4183609?v=4", "gravatar_id": "", "url": "https://api.github.com/users/eulerreich", "html_url": "https://github.com/eulerreich", "followers_url": "https://api.github.com/users/eulerreich/followers", "following_url": "https://api.github.com/users/eulerreich/following{/other_user}", "gists_url": "https://api.github.com/users/eulerreich/gists{/gist_id}", "starred_url": "https://api.github.com/users/eulerreich/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/eulerreich/subscriptions", "organizations_url": "https://api.github.com/users/eulerreich/orgs", "repos_url": "https://api.github.com/users/eulerreich/repos", "events_url": "https://api.github.com/users/eulerreich/events{/privacy}", "received_events_url": "https://api.github.com/users/eulerreich/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 466131885, "node_id": "MDU6TGFiZWw0NjYxMzE4ODU=", "url": "https://api.github.com/repos/pytorch/pytorch/labels/needs%20discussion", "name": "needs discussion", "color": "cc317c", "default": false}, {"id": 443483881, "node_id": "MDU6TGFiZWw0NDM0ODM4ODE=", "url": "https://api.github.com/repos/pytorch/pytorch/labels/todo", "name": "todo", "color": "c2e0c6", "default": false}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-08-10T01:43:02Z", "updated_at": "2018-08-13T17:45:40Z", "closed_at": null, "author_association": "NONE", "body_html": "<p>If you have a question or would like help and support, please ask at our<br>\n<a href=\"https://discuss.pytorch.org/\" rel=\"nofollow\">forums</a>.</p>\n<p>If you are submitting a feature request, please preface the title with [feature request].<br>\nIf you are submitting a bug report, please fill in the following details.</p>\n<h2>Issue description</h2>\n<p>If I set default tensor to double, <code>DataLoader</code> still yields float tensors.</p>\n<h2>Code example</h2>\n<div class=\"highlight highlight-source-python\"><pre><span class=\"pl-k\">import</span> torch\n<span class=\"pl-k\">import</span> torch <span class=\"pl-k\">as</span> th\n<span class=\"pl-k\">import</span> torch.utils.data <span class=\"pl-k\">as</span> tdata\n<span class=\"pl-k\">from</span> torch <span class=\"pl-k\">import</span> nn\n<span class=\"pl-k\">from</span> torchvision <span class=\"pl-k\">import</span> datasets, transforms\n\n<span class=\"pl-c\"><span class=\"pl-c\">#</span> you can comment out any one of the following two lines and the result will still be the same</span>\nth.set_default_dtype(torch.float64)\nth.set_default_tensor_type(torch.DoubleTensor)\n\ntrain_data <span class=\"pl-k\">=</span> datasets.CIFAR10(<span class=\"pl-s\"><span class=\"pl-pds\">'</span>../data<span class=\"pl-pds\">'</span></span>, <span class=\"pl-v\">train</span><span class=\"pl-k\">=</span><span class=\"pl-c1\">True</span>, <span class=\"pl-v\">download</span><span class=\"pl-k\">=</span><span class=\"pl-c1\">True</span>, <span class=\"pl-v\">transform</span><span class=\"pl-k\">=</span>transforms.ToTensor())\ntrain_loader <span class=\"pl-k\">=</span> tdata.DataLoader(train_data, <span class=\"pl-v\">batch_size</span><span class=\"pl-k\">=</span><span class=\"pl-c1\">1000</span>, <span class=\"pl-v\">shuffle</span><span class=\"pl-k\">=</span><span class=\"pl-c1\">True</span>)\n\n<span class=\"pl-c1\">next</span>(<span class=\"pl-c1\">iter</span>(train_loader))[<span class=\"pl-c1\">0</span>].dtype</pre></div>\n<p>output</p>\n<pre><code>torch.float32\n</code></pre>\n<h2>System Info</h2>\n<p>Please copy and paste the output from our<br>\n<a href=\"https://raw.githubusercontent.com/pytorch/pytorch/master/torch/utils/collect_env.py\" rel=\"nofollow\">environment collection script</a><br>\n(or fill out the checklist below manually).</p>\n<p>You can get the script and run it with:</p>\n<pre><code>wget https://raw.githubusercontent.com/pytorch/pytorch/master/torch/utils/collect_env.py\n# For security purposes, please check the contents of collect_env.py before running it.\npython collect_env.py\n</code></pre>\n<p>PyTorch version: 0.4.1<br>\nIs debug build: No<br>\nCUDA used to build PyTorch: 9.0.176</p>\n<p>OS: Ubuntu 16.04.4 LTS<br>\nGCC version: (Ubuntu 5.4.0-6ubuntu1~16.04.10) 5.4.0 20160609<br>\nCMake version: version 3.5.1</p>\n<p>Python version: 2.7<br>\nIs CUDA available: Yes<br>\nCUDA runtime version: Could not collect<br>\nGPU models and configuration: GPU 0: Tesla P100-PCIE-16GB<br>\nNvidia driver version: 390.12<br>\ncuDNN version: Probably one of the following:<br>\n/usr/lib/x86_64-linux-gnu/libcudnn.so.7.1.2</p>\n<p>Versions of relevant libraries:<br>\n[pip] numpy (1.14.3)<br>\n[pip] numpydoc (0.8.0)<br>\n[pip] torch (0.4.1)<br>\n[pip] torchvision (0.2.1)<br>\n[conda] pytorch                   0.4.1           py27_cuda9.0.176_cudnn7.1.2_1    pytorch<br>\n[conda] torchvision               0.2.1                    py27_1    pytorch</p>", "body_text": "If you have a question or would like help and support, please ask at our\nforums.\nIf you are submitting a feature request, please preface the title with [feature request].\nIf you are submitting a bug report, please fill in the following details.\nIssue description\nIf I set default tensor to double, DataLoader still yields float tensors.\nCode example\nimport torch\nimport torch as th\nimport torch.utils.data as tdata\nfrom torch import nn\nfrom torchvision import datasets, transforms\n\n# you can comment out any one of the following two lines and the result will still be the same\nth.set_default_dtype(torch.float64)\nth.set_default_tensor_type(torch.DoubleTensor)\n\ntrain_data = datasets.CIFAR10('../data', train=True, download=True, transform=transforms.ToTensor())\ntrain_loader = tdata.DataLoader(train_data, batch_size=1000, shuffle=True)\n\nnext(iter(train_loader))[0].dtype\noutput\ntorch.float32\n\nSystem Info\nPlease copy and paste the output from our\nenvironment collection script\n(or fill out the checklist below manually).\nYou can get the script and run it with:\nwget https://raw.githubusercontent.com/pytorch/pytorch/master/torch/utils/collect_env.py\n# For security purposes, please check the contents of collect_env.py before running it.\npython collect_env.py\n\nPyTorch version: 0.4.1\nIs debug build: No\nCUDA used to build PyTorch: 9.0.176\nOS: Ubuntu 16.04.4 LTS\nGCC version: (Ubuntu 5.4.0-6ubuntu1~16.04.10) 5.4.0 20160609\nCMake version: version 3.5.1\nPython version: 2.7\nIs CUDA available: Yes\nCUDA runtime version: Could not collect\nGPU models and configuration: GPU 0: Tesla P100-PCIE-16GB\nNvidia driver version: 390.12\ncuDNN version: Probably one of the following:\n/usr/lib/x86_64-linux-gnu/libcudnn.so.7.1.2\nVersions of relevant libraries:\n[pip] numpy (1.14.3)\n[pip] numpydoc (0.8.0)\n[pip] torch (0.4.1)\n[pip] torchvision (0.2.1)\n[conda] pytorch                   0.4.1           py27_cuda9.0.176_cudnn7.1.2_1    pytorch\n[conda] torchvision               0.2.1                    py27_1    pytorch", "body": "If you have a question or would like help and support, please ask at our\r\n[forums](https://discuss.pytorch.org/).\r\n\r\nIf you are submitting a feature request, please preface the title with [feature request].\r\nIf you are submitting a bug report, please fill in the following details.\r\n\r\n## Issue description\r\n\r\nIf I set default tensor to double, `DataLoader` still yields float tensors.\r\n\r\n## Code example\r\n\r\n```python\r\nimport torch\r\nimport torch as th\r\nimport torch.utils.data as tdata\r\nfrom torch import nn\r\nfrom torchvision import datasets, transforms\r\n\r\n# you can comment out any one of the following two lines and the result will still be the same\r\nth.set_default_dtype(torch.float64)\r\nth.set_default_tensor_type(torch.DoubleTensor)\r\n\r\ntrain_data = datasets.CIFAR10('../data', train=True, download=True, transform=transforms.ToTensor())\r\ntrain_loader = tdata.DataLoader(train_data, batch_size=1000, shuffle=True)\r\n\r\nnext(iter(train_loader))[0].dtype\r\n```\r\noutput\r\n```\r\ntorch.float32\r\n```\r\n## System Info\r\nPlease copy and paste the output from our\r\n[environment collection script](https://raw.githubusercontent.com/pytorch/pytorch/master/torch/utils/collect_env.py)\r\n(or fill out the checklist below manually).\r\n\r\nYou can get the script and run it with:\r\n```\r\nwget https://raw.githubusercontent.com/pytorch/pytorch/master/torch/utils/collect_env.py\r\n# For security purposes, please check the contents of collect_env.py before running it.\r\npython collect_env.py\r\n```\r\nPyTorch version: 0.4.1\r\nIs debug build: No\r\nCUDA used to build PyTorch: 9.0.176\r\n\r\nOS: Ubuntu 16.04.4 LTS\r\nGCC version: (Ubuntu 5.4.0-6ubuntu1~16.04.10) 5.4.0 20160609\r\nCMake version: version 3.5.1\r\n\r\nPython version: 2.7\r\nIs CUDA available: Yes\r\nCUDA runtime version: Could not collect\r\nGPU models and configuration: GPU 0: Tesla P100-PCIE-16GB\r\nNvidia driver version: 390.12\r\ncuDNN version: Probably one of the following:\r\n/usr/lib/x86_64-linux-gnu/libcudnn.so.7.1.2\r\n\r\nVersions of relevant libraries:\r\n[pip] numpy (1.14.3)\r\n[pip] numpydoc (0.8.0)\r\n[pip] torch (0.4.1)\r\n[pip] torchvision (0.2.1)\r\n[conda] pytorch                   0.4.1           py27_cuda9.0.176_cudnn7.1.2_1    pytorch\r\n[conda] torchvision               0.2.1                    py27_1    pytorch\r\n"}