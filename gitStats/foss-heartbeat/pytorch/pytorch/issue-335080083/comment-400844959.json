{"url": "https://api.github.com/repos/pytorch/pytorch/issues/comments/400844959", "html_url": "https://github.com/pytorch/pytorch/issues/8820#issuecomment-400844959", "issue_url": "https://api.github.com/repos/pytorch/pytorch/issues/8820", "id": 400844959, "node_id": "MDEyOklzc3VlQ29tbWVudDQwMDg0NDk1OQ==", "user": {"login": "SsnL", "id": 5674597, "node_id": "MDQ6VXNlcjU2NzQ1OTc=", "avatar_url": "https://avatars2.githubusercontent.com/u/5674597?v=4", "gravatar_id": "", "url": "https://api.github.com/users/SsnL", "html_url": "https://github.com/SsnL", "followers_url": "https://api.github.com/users/SsnL/followers", "following_url": "https://api.github.com/users/SsnL/following{/other_user}", "gists_url": "https://api.github.com/users/SsnL/gists{/gist_id}", "starred_url": "https://api.github.com/users/SsnL/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/SsnL/subscriptions", "organizations_url": "https://api.github.com/users/SsnL/orgs", "repos_url": "https://api.github.com/users/SsnL/repos", "events_url": "https://api.github.com/users/SsnL/events{/privacy}", "received_events_url": "https://api.github.com/users/SsnL/received_events", "type": "User", "site_admin": false}, "created_at": "2018-06-27T22:08:50Z", "updated_at": "2018-06-27T22:08:50Z", "author_association": "CONTRIBUTOR", "body_html": "<p>Hi, in your <code>mydataset.py</code> (full script <a href=\"https://gist.github.com/SsnL/84dea832cebf4ccc44c6f7126352508f\">here</a>), there is this part</p>\n<div class=\"highlight highlight-source-python\"><pre>        <span class=\"pl-k\">for</span> i, lab <span class=\"pl-k\">in</span> <span class=\"pl-c1\">enumerate</span>(<span class=\"pl-c1\">set</span>(<span class=\"pl-c1\">self</span>.label_nms)):\n            <span class=\"pl-c1\">self</span>.label_ids[lab] <span class=\"pl-k\">=</span> i</pre></div>\n<p>Since <code>set</code> is unordered, the mapping between <code>label_nm</code> and <code>label_id</code> is not deterministic. (They maybe are Py2, but that is undefined behavior.) So you see different results on train vs test, and different test runs.</p>\n<p>Since those in <code>self.label_nms</code> are just strings of digits, I changed the dataset to just store <code>int(label_nm)</code> as labels. Train + test works as expected. <a href=\"https://gist.github.com/SsnL/5946f101e2ed7e83292054a1af258632\">Here</a> is a modified dataset file.</p>\n<pre><code>Test set: Average loss: 1.7855, Accuracy: 44/90 (49%)\nTrain Epoch: 20 [0/90 (0%)]     Loss: 1.765595  Accuuracy: 0.48\nTest set: Average loss: 1.7540, Accuracy: 43/90 (48%)\nTest set: Average loss: 1.7540, Accuracy: 43/90 (48%)\nacc2= 0.4777777777777778\n\u279c  ld_weights_debug python validate.py\n0.4777777777777778\n\u279c  ld_weights_debug\n</code></pre>", "body_text": "Hi, in your mydataset.py (full script here), there is this part\n        for i, lab in enumerate(set(self.label_nms)):\n            self.label_ids[lab] = i\nSince set is unordered, the mapping between label_nm and label_id is not deterministic. (They maybe are Py2, but that is undefined behavior.) So you see different results on train vs test, and different test runs.\nSince those in self.label_nms are just strings of digits, I changed the dataset to just store int(label_nm) as labels. Train + test works as expected. Here is a modified dataset file.\nTest set: Average loss: 1.7855, Accuracy: 44/90 (49%)\nTrain Epoch: 20 [0/90 (0%)]     Loss: 1.765595  Accuuracy: 0.48\nTest set: Average loss: 1.7540, Accuracy: 43/90 (48%)\nTest set: Average loss: 1.7540, Accuracy: 43/90 (48%)\nacc2= 0.4777777777777778\n\u279c  ld_weights_debug python validate.py\n0.4777777777777778\n\u279c  ld_weights_debug", "body": "Hi, in your `mydataset.py` (full script [here](https://gist.github.com/SsnL/84dea832cebf4ccc44c6f7126352508f)), there is this part\r\n```py\r\n        for i, lab in enumerate(set(self.label_nms)):\r\n            self.label_ids[lab] = i\r\n```\r\n\r\nSince `set` is unordered, the mapping between `label_nm` and `label_id` is not deterministic. (They maybe are Py2, but that is undefined behavior.) So you see different results on train vs test, and different test runs. \r\n\r\nSince those in `self.label_nms` are just strings of digits, I changed the dataset to just store `int(label_nm)` as labels. Train + test works as expected. [Here](https://gist.github.com/SsnL/5946f101e2ed7e83292054a1af258632) is a modified dataset file.\r\n\r\n```\r\nTest set: Average loss: 1.7855, Accuracy: 44/90 (49%)\r\nTrain Epoch: 20 [0/90 (0%)]     Loss: 1.765595  Accuuracy: 0.48\r\nTest set: Average loss: 1.7540, Accuracy: 43/90 (48%)\r\nTest set: Average loss: 1.7540, Accuracy: 43/90 (48%)\r\nacc2= 0.4777777777777778\r\n\u279c  ld_weights_debug python validate.py\r\n0.4777777777777778\r\n\u279c  ld_weights_debug\r\n```"}