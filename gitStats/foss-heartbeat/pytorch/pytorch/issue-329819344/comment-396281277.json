{"url": "https://api.github.com/repos/pytorch/pytorch/issues/comments/396281277", "html_url": "https://github.com/pytorch/pytorch/issues/8196#issuecomment-396281277", "issue_url": "https://api.github.com/repos/pytorch/pytorch/issues/8196", "id": 396281277, "node_id": "MDEyOklzc3VlQ29tbWVudDM5NjI4MTI3Nw==", "user": {"login": "vishwakftw", "id": 23639302, "node_id": "MDQ6VXNlcjIzNjM5MzAy", "avatar_url": "https://avatars2.githubusercontent.com/u/23639302?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vishwakftw", "html_url": "https://github.com/vishwakftw", "followers_url": "https://api.github.com/users/vishwakftw/followers", "following_url": "https://api.github.com/users/vishwakftw/following{/other_user}", "gists_url": "https://api.github.com/users/vishwakftw/gists{/gist_id}", "starred_url": "https://api.github.com/users/vishwakftw/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vishwakftw/subscriptions", "organizations_url": "https://api.github.com/users/vishwakftw/orgs", "repos_url": "https://api.github.com/users/vishwakftw/repos", "events_url": "https://api.github.com/users/vishwakftw/events{/privacy}", "received_events_url": "https://api.github.com/users/vishwakftw/received_events", "type": "User", "site_admin": false}, "created_at": "2018-06-11T15:19:17Z", "updated_at": "2018-06-11T15:19:45Z", "author_association": "CONTRIBUTOR", "body_html": "<p>From the MKL documentation, <code>potrf</code> requires the matrix to be symmetric. Could that be a reason? NumPy is not able to reproduce the matrix from the Cholesky decomposition:</p>\n<div class=\"highlight highlight-source-python\"><pre><span class=\"pl-k\">import</span> torch\nsigma <span class=\"pl-k\">=</span> torch.FloatTensor([[<span class=\"pl-c1\">1</span>, <span class=\"pl-c1\">20</span>], [<span class=\"pl-c1\">1</span>, <span class=\"pl-c1\">100</span>]])\ntorch.potrf(sigma) <span class=\"pl-c\"><span class=\"pl-c\">#</span> Fails</span>\n\ns <span class=\"pl-k\">=</span> sigma.numpy()\n<span class=\"pl-k\">import</span> numpy <span class=\"pl-k\">as</span> np\nnp.matmul(np.linalg.cholesky(s), np.linalg.cholesky(s).T)  <span class=\"pl-c\"><span class=\"pl-c\">#</span> does not equal s</span>\narray([[ <span class=\"pl-c1\">1</span>.     ,  <span class=\"pl-c1\">1</span>.     ],\n       [ <span class=\"pl-c1\">1</span>.     , <span class=\"pl-c1\">99.99999</span>]], <span class=\"pl-v\">dtype</span><span class=\"pl-k\">=</span>float32)</pre></div>", "body_text": "From the MKL documentation, potrf requires the matrix to be symmetric. Could that be a reason? NumPy is not able to reproduce the matrix from the Cholesky decomposition:\nimport torch\nsigma = torch.FloatTensor([[1, 20], [1, 100]])\ntorch.potrf(sigma) # Fails\n\ns = sigma.numpy()\nimport numpy as np\nnp.matmul(np.linalg.cholesky(s), np.linalg.cholesky(s).T)  # does not equal s\narray([[ 1.     ,  1.     ],\n       [ 1.     , 99.99999]], dtype=float32)", "body": "From the MKL documentation, `potrf` requires the matrix to be symmetric. Could that be a reason? NumPy is not able to reproduce the matrix from the Cholesky decomposition:\r\n```python\r\nimport torch\r\nsigma = torch.FloatTensor([[1, 20], [1, 100]])\r\ntorch.potrf(sigma) # Fails\r\n\r\ns = sigma.numpy()\r\nimport numpy as np\r\nnp.matmul(np.linalg.cholesky(s), np.linalg.cholesky(s).T)  # does not equal s\r\narray([[ 1.     ,  1.     ],\r\n       [ 1.     , 99.99999]], dtype=float32)\r\n```"}