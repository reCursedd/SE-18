{"url": "https://api.github.com/repos/pytorch/pytorch/issues/comments/400008433", "html_url": "https://github.com/pytorch/pytorch/issues/8816#issuecomment-400008433", "issue_url": "https://api.github.com/repos/pytorch/pytorch/issues/8816", "id": 400008433, "node_id": "MDEyOklzc3VlQ29tbWVudDQwMDAwODQzMw==", "user": {"login": "SsnL", "id": 5674597, "node_id": "MDQ6VXNlcjU2NzQ1OTc=", "avatar_url": "https://avatars2.githubusercontent.com/u/5674597?v=4", "gravatar_id": "", "url": "https://api.github.com/users/SsnL", "html_url": "https://github.com/SsnL", "followers_url": "https://api.github.com/users/SsnL/followers", "following_url": "https://api.github.com/users/SsnL/following{/other_user}", "gists_url": "https://api.github.com/users/SsnL/gists{/gist_id}", "starred_url": "https://api.github.com/users/SsnL/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/SsnL/subscriptions", "organizations_url": "https://api.github.com/users/SsnL/orgs", "repos_url": "https://api.github.com/users/SsnL/repos", "events_url": "https://api.github.com/users/SsnL/events{/privacy}", "received_events_url": "https://api.github.com/users/SsnL/received_events", "type": "User", "site_admin": false}, "created_at": "2018-06-25T16:12:46Z", "updated_at": "2018-06-25T16:12:46Z", "author_association": "CONTRIBUTOR", "body_html": "<p><a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=1563504\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/cosimo-dw\">@cosimo-dw</a> It doesn't adds zeros to input either. It is used to resolve the ambiguity when one have <code>stride &gt; 1</code>. E.g., consider a 3x3 conv with stride = 2. You would have:</p>\n<ol>\n<li><code>3x3 input =&gt; 1x1 output</code></li>\n<li><code>4x4 input =&gt; 1x1 output</code></li>\n<li><code>5x5 input =&gt; 2x2 output</code></li>\n<li><code>6x6 input =&gt; 2x2 output</code>.</li>\n</ol>\n<p>So it is a many-to-one mapping. For convT to \"revert\" this shape change, it needs an extra argument like <code>output_padding</code> to know (e.g. from <code>2x2 input</code> whether it should get <code>5x5 output</code> or <code>6x6 output</code>).</p>", "body_text": "@cosimo-dw It doesn't adds zeros to input either. It is used to resolve the ambiguity when one have stride > 1. E.g., consider a 3x3 conv with stride = 2. You would have:\n\n3x3 input => 1x1 output\n4x4 input => 1x1 output\n5x5 input => 2x2 output\n6x6 input => 2x2 output.\n\nSo it is a many-to-one mapping. For convT to \"revert\" this shape change, it needs an extra argument like output_padding to know (e.g. from 2x2 input whether it should get 5x5 output or 6x6 output).", "body": "@cosimo-dw It doesn't adds zeros to input either. It is used to resolve the ambiguity when one have `stride > 1`. E.g., consider a 3x3 conv with stride = 2. You would have:\r\n1. `3x3 input => 1x1 output`\r\n2. `4x4 input => 1x1 output`\r\n3. `5x5 input => 2x2 output`\r\n4. `6x6 input => 2x2 output`.\r\n\r\nSo it is a many-to-one mapping. For convT to \"revert\" this shape change, it needs an extra argument like `output_padding` to know (e.g. from `2x2 input` whether it should get `5x5 output` or `6x6 output`)."}