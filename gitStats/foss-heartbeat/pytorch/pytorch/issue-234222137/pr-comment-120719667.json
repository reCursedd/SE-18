{"url": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/120719667", "pull_request_review_id": 42706696, "id": 120719667, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEyMDcxOTY2Nw==", "diff_hunk": "@@ -0,0 +1,46 @@\n+import os\n+import ctypes\n+import warnings\n+import torch.cuda\n+\n+lib = None\n+\n+__all__ = ['range_push', 'range_pop', 'mark']\n+\n+def _libnvToolsExt():\n+    global lib\n+    if lib is None:\n+        lib = ctypes.cdll.LoadLibrary(None)\n+    return lib\n+\n+def range_push(msg):\n+    \"\"\"\n+    Pushes a range onto a stack of nested range span.  Returns zero-based\n+    depth of the range that is started.\n+\n+    Arguments:\n+        msg (string): ASCII message to associate with range\n+    \"\"\"\n+    if _libnvToolsExt() is None:\n+        raise RuntimeError('Unable to load nvToolsExt library')\n+    return lib.nvtxRangePushA(ctypes.c_char_p(msg))\n+\n+def range_pop():\n+    \"\"\"\n+    Pops a range off of a stack of nested range spans.  Returns the\n+    zero-based depth of the range that is ended.\n+    \"\"\"\n+    if _libnvToolsExt() is None:\n+        raise RuntimeError('Unable to load nvToolsExt library')\n+    return lib.nvtxRangePop()\n+\n+def mark(msg):\n+    \"\"\"\n+    Describe an instantaneous event that occurred at some point.\n+\n+    Arguments:\n+        msg (string): ASCII message to associate with the event.\n+    \"\"\"\n+    if _libnvToolsExt() is None:\n+        raise RuntimeError('Unable to load nvToolsExt library')\n+    return lib.nvtxMarkA(ctypes.c_char_p(msg))", "path": "torch/cuda/nvtx.py", "position": null, "original_position": 46, "commit_id": "60f2d4d55ef0ad098e462bd0534f5ee77fe55b8f", "original_commit_id": "dd35458b6b2f47ed8f472cc3bf8f7e10946c2820", "user": {"login": "colesbury", "id": 655866, "node_id": "MDQ6VXNlcjY1NTg2Ng==", "avatar_url": "https://avatars1.githubusercontent.com/u/655866?v=4", "gravatar_id": "", "url": "https://api.github.com/users/colesbury", "html_url": "https://github.com/colesbury", "followers_url": "https://api.github.com/users/colesbury/followers", "following_url": "https://api.github.com/users/colesbury/following{/other_user}", "gists_url": "https://api.github.com/users/colesbury/gists{/gist_id}", "starred_url": "https://api.github.com/users/colesbury/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/colesbury/subscriptions", "organizations_url": "https://api.github.com/users/colesbury/orgs", "repos_url": "https://api.github.com/users/colesbury/repos", "events_url": "https://api.github.com/users/colesbury/events{/privacy}", "received_events_url": "https://api.github.com/users/colesbury/received_events", "type": "User", "site_admin": false}, "body": "`nvtxMarkA` returns `void`. I think you may need to set the `restype` in `_libnvToolsExt`. (The default is int -- I'm not sure what happens if you call a void function as if it returns int).", "created_at": "2017-06-07T19:15:42Z", "updated_at": "2018-11-23T15:33:41Z", "html_url": "https://github.com/pytorch/pytorch/pull/1748#discussion_r120719667", "pull_request_url": "https://api.github.com/repos/pytorch/pytorch/pulls/1748", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/120719667"}, "html": {"href": "https://github.com/pytorch/pytorch/pull/1748#discussion_r120719667"}, "pull_request": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/1748"}}, "body_html": "<p><code>nvtxMarkA</code> returns <code>void</code>. I think you may need to set the <code>restype</code> in <code>_libnvToolsExt</code>. (The default is int -- I'm not sure what happens if you call a void function as if it returns int).</p>", "body_text": "nvtxMarkA returns void. I think you may need to set the restype in _libnvToolsExt. (The default is int -- I'm not sure what happens if you call a void function as if it returns int)."}