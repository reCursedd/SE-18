{"url": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/176835626", "pull_request_review_id": 106614317, "id": 176835626, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE3NjgzNTYyNg==", "diff_hunk": "@@ -1308,6 +1318,53 @@ def layer_norm(input, normalized_shape, running_mean, running_var,\n         return out\n \n \n+def group_norm(input, num_groups, weight=None, bias=None, eps=1e-5):\n+    r\"\"\"Applies Group Normalization for last certain number of dimensions.\n+\n+    See :class:`~torch.nn.GroupNorm` for details.\n+    \"\"\"\n+\n+    input_shape = input.size()\n+    b = input_shape[0]\n+    c = input_shape[1]\n+    g = num_groups\n+\n+    if c % num_groups != 0:\n+        raise ValueError('Expected number of channels in input to be divisible '\n+                         'by num_groups, but got {} input and num_groups={}'\n+                         .format(input_shape, num_groups))\n+\n+    if weight is not None and (weight.dim() != 1 or weight.numel() != c):\n+        raise ValueError('Expected weight to be a vector of size equal to the '\n+                         'number of channels in input, but got {} weight and {} '\n+                         'input'.format(weight.size(), input_shape))\n+\n+    if bias is not None and (bias.dim() != 1 or bias.numel() != c):\n+        raise ValueError('Expected bias to be a vector of size equal to the '\n+                         'number of channels in input, but got {} bias and {} '\n+                         'input'.format(bias.size(), input_shape))\n+\n+    # Apply group norm\n+    input_reshaped = input.contiguous().view(1, b * g, -1)", "path": "torch/nn/functional.py", "position": null, "original_position": 77, "commit_id": "49bfa99ca67b4b4b94a00d7132d61ff045a67411", "original_commit_id": "395e5e860373d348c8aa8bbda7cd785b71b599c4", "user": {"login": "fmassa", "id": 9110200, "node_id": "MDQ6VXNlcjkxMTAyMDA=", "avatar_url": "https://avatars2.githubusercontent.com/u/9110200?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fmassa", "html_url": "https://github.com/fmassa", "followers_url": "https://api.github.com/users/fmassa/followers", "following_url": "https://api.github.com/users/fmassa/following{/other_user}", "gists_url": "https://api.github.com/users/fmassa/gists{/gist_id}", "starred_url": "https://api.github.com/users/fmassa/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fmassa/subscriptions", "organizations_url": "https://api.github.com/users/fmassa/orgs", "repos_url": "https://api.github.com/users/fmassa/repos", "events_url": "https://api.github.com/users/fmassa/events{/privacy}", "received_events_url": "https://api.github.com/users/fmassa/received_events", "type": "User", "site_admin": false}, "body": "nit: this can be simplified with `.reshape(1, b * g, -1)`, which was added in https://github.com/pytorch/pytorch/pull/5575 and consists roughly as `.contiguous().view()`", "created_at": "2018-03-23T18:59:02Z", "updated_at": "2018-11-23T15:41:05Z", "html_url": "https://github.com/pytorch/pytorch/pull/5968#discussion_r176835626", "pull_request_url": "https://api.github.com/repos/pytorch/pytorch/pulls/5968", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/176835626"}, "html": {"href": "https://github.com/pytorch/pytorch/pull/5968#discussion_r176835626"}, "pull_request": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/5968"}}, "body_html": "<p>nit: this can be simplified with <code>.reshape(1, b * g, -1)</code>, which was added in <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load issue title\" data-id=\"302450251\" data-permission-text=\"Issue title is private\" data-url=\"https://github.com/pytorch/pytorch/issues/5575\" data-hovercard-type=\"pull_request\" data-hovercard-url=\"/pytorch/pytorch/pull/5575/hovercard\" href=\"https://github.com/pytorch/pytorch/pull/5575\">#5575</a> and consists roughly as <code>.contiguous().view()</code></p>", "body_text": "nit: this can be simplified with .reshape(1, b * g, -1), which was added in #5575 and consists roughly as .contiguous().view()"}