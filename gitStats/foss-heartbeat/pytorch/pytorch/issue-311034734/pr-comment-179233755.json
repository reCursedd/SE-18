{"url": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/179233755", "pull_request_review_id": 109439642, "id": 179233755, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE3OTIzMzc1NQ==", "diff_hunk": "@@ -223,10 +223,27 @@ bool DotProductOp<float, CPUContext>::RunOnDevice() {\n   return true;\n }\n \n+vector<TensorShape> TensorInferenceForDotProduct(\n+    const OperatorDef& /* def */,\n+    const vector<TensorShape>& in) {\n+  vector<TIndex> dims;\n+  if (in[0].dims().size() > 0) {\n+    dims.push_back(in[0].dims(0));", "path": "caffe2/operators/distance_op.cc", "position": null, "original_position": 9, "commit_id": "1a215b2c8dbecf0368b6b02bd3203c1699db1e44", "original_commit_id": "a25fd978a7a920443dca33c50b25e6939d50d0e7", "user": {"login": "mdschatz", "id": 20386276, "node_id": "MDQ6VXNlcjIwMzg2Mjc2", "avatar_url": "https://avatars2.githubusercontent.com/u/20386276?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mdschatz", "html_url": "https://github.com/mdschatz", "followers_url": "https://api.github.com/users/mdschatz/followers", "following_url": "https://api.github.com/users/mdschatz/following{/other_user}", "gists_url": "https://api.github.com/users/mdschatz/gists{/gist_id}", "starred_url": "https://api.github.com/users/mdschatz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mdschatz/subscriptions", "organizations_url": "https://api.github.com/users/mdschatz/orgs", "repos_url": "https://api.github.com/users/mdschatz/repos", "events_url": "https://api.github.com/users/mdschatz/events{/privacy}", "received_events_url": "https://api.github.com/users/mdschatz/received_events", "type": "User", "site_admin": false}, "body": "According to the documentation it's required to be 1-D (https://caffe2.ai/docs/operators-catalogue.html#dotproduct).  That said, the documentation also states that X and Y inputs are only allowed to be  1-D or 2-D, yet the implementation appears to support inputs 0- to N-D.  The inference here sets the output to 0-D if input X is 0-D, otherwise 1-D.", "created_at": "2018-04-04T18:08:51Z", "updated_at": "2018-11-23T15:41:44Z", "html_url": "https://github.com/pytorch/pytorch/pull/6253#discussion_r179233755", "pull_request_url": "https://api.github.com/repos/pytorch/pytorch/pulls/6253", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/179233755"}, "html": {"href": "https://github.com/pytorch/pytorch/pull/6253#discussion_r179233755"}, "pull_request": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/6253"}}, "body_html": "<p>According to the documentation it's required to be 1-D (<a href=\"https://caffe2.ai/docs/operators-catalogue.html#dotproduct\" rel=\"nofollow\">https://caffe2.ai/docs/operators-catalogue.html#dotproduct</a>).  That said, the documentation also states that X and Y inputs are only allowed to be  1-D or 2-D, yet the implementation appears to support inputs 0- to N-D.  The inference here sets the output to 0-D if input X is 0-D, otherwise 1-D.</p>", "body_text": "According to the documentation it's required to be 1-D (https://caffe2.ai/docs/operators-catalogue.html#dotproduct).  That said, the documentation also states that X and Y inputs are only allowed to be  1-D or 2-D, yet the implementation appears to support inputs 0- to N-D.  The inference here sets the output to 0-D if input X is 0-D, otherwise 1-D.", "in_reply_to_id": 179223451}