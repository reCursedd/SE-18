{"url": "https://api.github.com/repos/pytorch/pytorch/issues/comments/318099399", "html_url": "https://github.com/pytorch/pytorch/issues/1734#issuecomment-318099399", "issue_url": "https://api.github.com/repos/pytorch/pytorch/issues/1734", "id": 318099399, "node_id": "MDEyOklzc3VlQ29tbWVudDMxODA5OTM5OQ==", "user": {"login": "Kaixhin", "id": 991891, "node_id": "MDQ6VXNlcjk5MTg5MQ==", "avatar_url": "https://avatars3.githubusercontent.com/u/991891?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Kaixhin", "html_url": "https://github.com/Kaixhin", "followers_url": "https://api.github.com/users/Kaixhin/followers", "following_url": "https://api.github.com/users/Kaixhin/following{/other_user}", "gists_url": "https://api.github.com/users/Kaixhin/gists{/gist_id}", "starred_url": "https://api.github.com/users/Kaixhin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Kaixhin/subscriptions", "organizations_url": "https://api.github.com/users/Kaixhin/orgs", "repos_url": "https://api.github.com/users/Kaixhin/repos", "events_url": "https://api.github.com/users/Kaixhin/events{/privacy}", "received_events_url": "https://api.github.com/users/Kaixhin/received_events", "type": "User", "site_admin": false}, "created_at": "2017-07-26T15:59:49Z", "updated_at": "2017-07-26T15:59:49Z", "author_association": "CONTRIBUTOR", "body_html": "<p>Looks like what I need is making the graph modifiable - what Chainer exposes with <a href=\"https://docs.chainer.org/en/latest/reference/core/generated/chainer.variable.VariableNode.html#chainer.variable.VariableNode.set_creator\" rel=\"nofollow\"><code>set_creator</code></a> and <a href=\"https://docs.chainer.org/en/latest/reference/core/generated/chainer.variable.VariableNode.html#chainer.variable.VariableNode.set_creator\" rel=\"nofollow\"><code>unchain</code></a>. If you can keep on going up <code>creator</code>s, backwards in the graph, then you can detach and reattach further down in the graph (without having to keep multiple copies, as I discussed in <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load issue title\" data-id=\"245452623\" data-permission-text=\"Issue title is private\" data-url=\"https://github.com/pytorch/pytorch/issues/2203\" data-hovercard-type=\"issue\" data-hovercard-url=\"/pytorch/pytorch/issues/2203/hovercard\" href=\"https://github.com/pytorch/pytorch/issues/2203\">#2203</a>).</p>\n<p>So whilst PyTorch gives you plenty of freedom in constructing the forwards graph, this could potentially allow you to \"transplant\" the top of one graph onto the bottom of another one. Rather than going backwards on what happened on the forwards, you can go backwards on all kinds of possibilities.</p>", "body_text": "Looks like what I need is making the graph modifiable - what Chainer exposes with set_creator and unchain. If you can keep on going up creators, backwards in the graph, then you can detach and reattach further down in the graph (without having to keep multiple copies, as I discussed in #2203).\nSo whilst PyTorch gives you plenty of freedom in constructing the forwards graph, this could potentially allow you to \"transplant\" the top of one graph onto the bottom of another one. Rather than going backwards on what happened on the forwards, you can go backwards on all kinds of possibilities.", "body": "Looks like what I need is making the graph modifiable - what Chainer exposes with [`set_creator`](https://docs.chainer.org/en/latest/reference/core/generated/chainer.variable.VariableNode.html#chainer.variable.VariableNode.set_creator) and [`unchain`](https://docs.chainer.org/en/latest/reference/core/generated/chainer.variable.VariableNode.html#chainer.variable.VariableNode.set_creator). If you can keep on going up `creator`s, backwards in the graph, then you can detach and reattach further down in the graph (without having to keep multiple copies, as I discussed in https://github.com/pytorch/pytorch/issues/2203).\r\n\r\nSo whilst PyTorch gives you plenty of freedom in constructing the forwards graph, this could potentially allow you to \"transplant\" the top of one graph onto the bottom of another one. Rather than going backwards on what happened on the forwards, you can go backwards on all kinds of possibilities."}