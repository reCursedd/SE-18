{"url": "https://api.github.com/repos/pytorch/pytorch/issues/comments/368562233", "html_url": "https://github.com/pytorch/pytorch/pull/5407#issuecomment-368562233", "issue_url": "https://api.github.com/repos/pytorch/pytorch/issues/5407", "id": 368562233, "node_id": "MDEyOklzc3VlQ29tbWVudDM2ODU2MjIzMw==", "user": {"login": "Stonesjtu", "id": 4556044, "node_id": "MDQ6VXNlcjQ1NTYwNDQ=", "avatar_url": "https://avatars3.githubusercontent.com/u/4556044?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Stonesjtu", "html_url": "https://github.com/Stonesjtu", "followers_url": "https://api.github.com/users/Stonesjtu/followers", "following_url": "https://api.github.com/users/Stonesjtu/following{/other_user}", "gists_url": "https://api.github.com/users/Stonesjtu/gists{/gist_id}", "starred_url": "https://api.github.com/users/Stonesjtu/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Stonesjtu/subscriptions", "organizations_url": "https://api.github.com/users/Stonesjtu/orgs", "repos_url": "https://api.github.com/users/Stonesjtu/repos", "events_url": "https://api.github.com/users/Stonesjtu/events{/privacy}", "received_events_url": "https://api.github.com/users/Stonesjtu/received_events", "type": "User", "site_admin": false}, "created_at": "2018-02-26T16:32:36Z", "updated_at": "2018-02-26T16:32:36Z", "author_association": "CONTRIBUTOR", "body_html": "<p>Let's make the inner process clear:</p>\n<div class=\"highlight highlight-source-python\"><pre>v <span class=\"pl-k\">=</span> <span class=\"pl-c1\">1e+40</span> <span class=\"pl-c\"><span class=\"pl-c\">#</span> float</span>\na <span class=\"pl-k\">=</span> <span class=\"pl-c1\">int</span>(<span class=\"pl-c1\">1e+40</span>) <span class=\"pl-c\"><span class=\"pl-c\">#</span> a large number int in python, but not representable by long (10^40 &gt; 2^63)</span>\nunpacklong(a) <span class=\"pl-c\"><span class=\"pl-c\">#</span> overflow happens</span></pre></div>\n<p>I think adding a type conversion to the item type of target tensor should fix the issue:</p>\n<div class=\"highlight highlight-source-python\"><pre><span class=\"pl-k\">def</span> <span class=\"pl-en\">fill_</span>(<span class=\"pl-smi\">value</span>):\n    target_value <span class=\"pl-k\">=</span> target_type(value)\n    <span class=\"pl-c\"><span class=\"pl-c\">#</span> processing with target_value</span></pre></div>", "body_text": "Let's make the inner process clear:\nv = 1e+40 # float\na = int(1e+40) # a large number int in python, but not representable by long (10^40 > 2^63)\nunpacklong(a) # overflow happens\nI think adding a type conversion to the item type of target tensor should fix the issue:\ndef fill_(value):\n    target_value = target_type(value)\n    # processing with target_value", "body": "Let's make the inner process clear:\r\n```python\r\nv = 1e+40 # float\r\na = int(1e+40) # a large number int in python, but not representable by long (10^40 > 2^63)\r\nunpacklong(a) # overflow happens\r\n```\r\n\r\nI think adding a type conversion to the item type of target tensor should fix the issue:\r\n```python\r\ndef fill_(value):\r\n    target_value = target_type(value)\r\n    # processing with target_value\r\n```"}