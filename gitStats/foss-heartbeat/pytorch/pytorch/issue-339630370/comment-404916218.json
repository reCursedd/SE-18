{"url": "https://api.github.com/repos/pytorch/pytorch/issues/comments/404916218", "html_url": "https://github.com/pytorch/pytorch/issues/9289#issuecomment-404916218", "issue_url": "https://api.github.com/repos/pytorch/pytorch/issues/9289", "id": 404916218, "node_id": "MDEyOklzc3VlQ29tbWVudDQwNDkxNjIxOA==", "user": {"login": "Amir-Arsalan", "id": 6061721, "node_id": "MDQ6VXNlcjYwNjE3MjE=", "avatar_url": "https://avatars1.githubusercontent.com/u/6061721?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Amir-Arsalan", "html_url": "https://github.com/Amir-Arsalan", "followers_url": "https://api.github.com/users/Amir-Arsalan/followers", "following_url": "https://api.github.com/users/Amir-Arsalan/following{/other_user}", "gists_url": "https://api.github.com/users/Amir-Arsalan/gists{/gist_id}", "starred_url": "https://api.github.com/users/Amir-Arsalan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Amir-Arsalan/subscriptions", "organizations_url": "https://api.github.com/users/Amir-Arsalan/orgs", "repos_url": "https://api.github.com/users/Amir-Arsalan/repos", "events_url": "https://api.github.com/users/Amir-Arsalan/events{/privacy}", "received_events_url": "https://api.github.com/users/Amir-Arsalan/received_events", "type": "User", "site_admin": false}, "created_at": "2018-07-13T18:30:15Z", "updated_at": "2018-07-18T18:32:04Z", "author_association": "CONTRIBUTOR", "body_html": "<p><a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=15841449\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/ngimel\">@ngimel</a> I didn't do this using the official Docker file but it looks like the <a href=\"https://anaconda.org/pytorch/magma-cuda90\" rel=\"nofollow\">PyTorch Conda package</a> has been built about 5 months ago. Based on the above comment <a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=1310570\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/soumith\">@soumith</a> gave it looks like the pre-build packages of PyTorch use their own binaries for CuDNN. If that holds true for the Conda package, PyTorch will not use the CuDNN supplied through the official Docker file from NVIDIA (<code>nvidia/cuda:9.0-cudnn7-devel-ubuntu16.04</code>). To make sure that PyTorch is using CuDNN 7.1.4 you may run <code>torch.backends.cudnn.version()</code></p>\n<p>Can you try building PyTorch from <strong>source</strong> in a <a href=\"https://www.sylabs.io/guides/2.5.1/user-guide/\" rel=\"nofollow\">Singularity</a> container? Below I share my Singularity definition script that I've been using for the past 6-7 months so that you can use it to build a container for PyTorch. I've not changed any part of this script for a long time and never faced the issue I described above until recently. You can build the container using <code>singularity build /pytorch.img /definitionFile</code>:</p>\n<pre><code>BootStrap: docker\nFrom: nvidia/cuda:9.0-cudnn7-devel-ubuntu16.04\n\napt-get -y update &amp;&amp; apt-get -y install locales\nlocale-gen en_US.UTF-8\napt-get -y update &amp;&amp; apt-get -y install make \\\n                                        dpkg \\\n                                        wget \\\n                                        g++ \\\n                                        gcc \\\n                                        xvfb \\\n                                        libyaml-cpp-dev \\\n                                        git \\\n                                        cmake \\\n                                        vim \\\n                                        curl \\\n                                        ca-certificates \\\n                                        software-properties-common \\\n                                        python3 \\\n                                        python3-pip \\\n                                        zlib1g-dev \\\n                                        freeglut3-dev \\\n                                        mesa-utils \\\n                                        libreadline-dev \\\n                                        gnuplot \\\n                                        gnuplot-qt \\\n                                        unzip \\\n                                        libboost-all-dev\n\npip3 install --upgrade pip==9.0.3\nyes y | pip3 uninstall setuptools\npip3 install -U setuptools\npip3 install -U pyyaml\npip3 install multiprocess \\\n                        joblib \\\n                        scipy \\\n                        numpy \\\n                        transforms3d \\\n                        matplotlib \\\n                        mkl \\\n                        mkl-devel \\\n                        cffi \\\n                        Pillow \\\n                        h5py \n\napt-get install -y python3-setuptools\n\n# PyTorch\ncd /\nmkdir /repo-src &amp;&amp; cd /repo-src\ngit clone --recursive https://github.com/pytorch/pytorch\ncd pytorch\npython3 setup.py install\n\n# TorchVision\ncd /\nmkdir torchvision &amp;&amp; cd torchvision\ngit clone --recursive https://github.com/pytorch/vision.git\ncd vision\npython3 setup.py install\n</code></pre>\n<p>After building your container you can test it as follow:</p>\n<p><code>singularity shell --nv -B /home:/home --nv pytorch.img</code></p>\n<p><code>/home:home/</code> will bind your home directory to the home directory in the container. <code>--nv</code> flag lets the container use the NVIDIA driver installed on your machine.</p>\n<p>And then do <code>python3 ~/Desktop/cifar10_tutorial.py</code></p>", "body_text": "@ngimel I didn't do this using the official Docker file but it looks like the PyTorch Conda package has been built about 5 months ago. Based on the above comment @soumith gave it looks like the pre-build packages of PyTorch use their own binaries for CuDNN. If that holds true for the Conda package, PyTorch will not use the CuDNN supplied through the official Docker file from NVIDIA (nvidia/cuda:9.0-cudnn7-devel-ubuntu16.04). To make sure that PyTorch is using CuDNN 7.1.4 you may run torch.backends.cudnn.version()\nCan you try building PyTorch from source in a Singularity container? Below I share my Singularity definition script that I've been using for the past 6-7 months so that you can use it to build a container for PyTorch. I've not changed any part of this script for a long time and never faced the issue I described above until recently. You can build the container using singularity build /pytorch.img /definitionFile:\nBootStrap: docker\nFrom: nvidia/cuda:9.0-cudnn7-devel-ubuntu16.04\n\napt-get -y update && apt-get -y install locales\nlocale-gen en_US.UTF-8\napt-get -y update && apt-get -y install make \\\n                                        dpkg \\\n                                        wget \\\n                                        g++ \\\n                                        gcc \\\n                                        xvfb \\\n                                        libyaml-cpp-dev \\\n                                        git \\\n                                        cmake \\\n                                        vim \\\n                                        curl \\\n                                        ca-certificates \\\n                                        software-properties-common \\\n                                        python3 \\\n                                        python3-pip \\\n                                        zlib1g-dev \\\n                                        freeglut3-dev \\\n                                        mesa-utils \\\n                                        libreadline-dev \\\n                                        gnuplot \\\n                                        gnuplot-qt \\\n                                        unzip \\\n                                        libboost-all-dev\n\npip3 install --upgrade pip==9.0.3\nyes y | pip3 uninstall setuptools\npip3 install -U setuptools\npip3 install -U pyyaml\npip3 install multiprocess \\\n                        joblib \\\n                        scipy \\\n                        numpy \\\n                        transforms3d \\\n                        matplotlib \\\n                        mkl \\\n                        mkl-devel \\\n                        cffi \\\n                        Pillow \\\n                        h5py \n\napt-get install -y python3-setuptools\n\n# PyTorch\ncd /\nmkdir /repo-src && cd /repo-src\ngit clone --recursive https://github.com/pytorch/pytorch\ncd pytorch\npython3 setup.py install\n\n# TorchVision\ncd /\nmkdir torchvision && cd torchvision\ngit clone --recursive https://github.com/pytorch/vision.git\ncd vision\npython3 setup.py install\n\nAfter building your container you can test it as follow:\nsingularity shell --nv -B /home:/home --nv pytorch.img\n/home:home/ will bind your home directory to the home directory in the container. --nv flag lets the container use the NVIDIA driver installed on your machine.\nAnd then do python3 ~/Desktop/cifar10_tutorial.py", "body": "@ngimel I didn't do this using the official Docker file but it looks like the [PyTorch Conda package](https://anaconda.org/pytorch/magma-cuda90) has been built about 5 months ago. Based on the above comment @soumith gave it looks like the pre-build packages of PyTorch use their own binaries for CuDNN. If that holds true for the Conda package, PyTorch will not use the CuDNN supplied through the official Docker file from NVIDIA (`nvidia/cuda:9.0-cudnn7-devel-ubuntu16.04`). To make sure that PyTorch is using CuDNN 7.1.4 you may run `torch.backends.cudnn.version()`\r\n\r\nCan you try building PyTorch from **source** in a [Singularity](https://www.sylabs.io/guides/2.5.1/user-guide/) container? Below I share my Singularity definition script that I've been using for the past 6-7 months so that you can use it to build a container for PyTorch. I've not changed any part of this script for a long time and never faced the issue I described above until recently. You can build the container using `singularity build /pytorch.img /definitionFile`:\r\n\r\n```\r\nBootStrap: docker\r\nFrom: nvidia/cuda:9.0-cudnn7-devel-ubuntu16.04\r\n\r\napt-get -y update && apt-get -y install locales\r\nlocale-gen en_US.UTF-8\r\napt-get -y update && apt-get -y install make \\\r\n                                        dpkg \\\r\n                                        wget \\\r\n                                        g++ \\\r\n                                        gcc \\\r\n                                        xvfb \\\r\n                                        libyaml-cpp-dev \\\r\n                                        git \\\r\n                                        cmake \\\r\n                                        vim \\\r\n                                        curl \\\r\n                                        ca-certificates \\\r\n                                        software-properties-common \\\r\n                                        python3 \\\r\n                                        python3-pip \\\r\n                                        zlib1g-dev \\\r\n                                        freeglut3-dev \\\r\n                                        mesa-utils \\\r\n                                        libreadline-dev \\\r\n                                        gnuplot \\\r\n                                        gnuplot-qt \\\r\n                                        unzip \\\r\n                                        libboost-all-dev\r\n\r\npip3 install --upgrade pip==9.0.3\r\nyes y | pip3 uninstall setuptools\r\npip3 install -U setuptools\r\npip3 install -U pyyaml\r\npip3 install multiprocess \\\r\n                        joblib \\\r\n                        scipy \\\r\n                        numpy \\\r\n                        transforms3d \\\r\n                        matplotlib \\\r\n                        mkl \\\r\n                        mkl-devel \\\r\n                        cffi \\\r\n                        Pillow \\\r\n                        h5py \r\n\r\napt-get install -y python3-setuptools\r\n\r\n# PyTorch\r\ncd /\r\nmkdir /repo-src && cd /repo-src\r\ngit clone --recursive https://github.com/pytorch/pytorch\r\ncd pytorch\r\npython3 setup.py install\r\n\r\n# TorchVision\r\ncd /\r\nmkdir torchvision && cd torchvision\r\ngit clone --recursive https://github.com/pytorch/vision.git\r\ncd vision\r\npython3 setup.py install\r\n```\r\n\r\nAfter building your container you can test it as follow:\r\n\r\n`singularity shell --nv -B /home:/home --nv pytorch.img`\r\n\r\n`/home:home/` will bind your home directory to the home directory in the container. `--nv` flag lets the container use the NVIDIA driver installed on your machine.\r\n\r\nAnd then do `python3 ~/Desktop/cifar10_tutorial.py`"}