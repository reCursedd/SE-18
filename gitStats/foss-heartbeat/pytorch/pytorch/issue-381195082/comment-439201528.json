{"url": "https://api.github.com/repos/pytorch/pytorch/issues/comments/439201528", "html_url": "https://github.com/pytorch/pytorch/issues/14031#issuecomment-439201528", "issue_url": "https://api.github.com/repos/pytorch/pytorch/issues/14031", "id": 439201528, "node_id": "MDEyOklzc3VlQ29tbWVudDQzOTIwMTUyOA==", "user": {"login": "alcinos", "id": 7438704, "node_id": "MDQ6VXNlcjc0Mzg3MDQ=", "avatar_url": "https://avatars0.githubusercontent.com/u/7438704?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alcinos", "html_url": "https://github.com/alcinos", "followers_url": "https://api.github.com/users/alcinos/followers", "following_url": "https://api.github.com/users/alcinos/following{/other_user}", "gists_url": "https://api.github.com/users/alcinos/gists{/gist_id}", "starred_url": "https://api.github.com/users/alcinos/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alcinos/subscriptions", "organizations_url": "https://api.github.com/users/alcinos/orgs", "repos_url": "https://api.github.com/users/alcinos/repos", "events_url": "https://api.github.com/users/alcinos/events{/privacy}", "received_events_url": "https://api.github.com/users/alcinos/received_events", "type": "User", "site_admin": false}, "created_at": "2018-11-15T21:45:43Z", "updated_at": "2018-11-15T21:45:43Z", "author_association": "CONTRIBUTOR", "body_html": "<p>Oh, ok I was not expecting the type of the mean to leak into the return type of <code>at::normal</code>, thanks for the hint.<br>\n<code>torch::randint</code> seems to be the way to go. I thought that every function would be returning a Variable, even  from <code>at::</code>, but apparently that's not the case (yet?).</p>\n<p>Thanks for your help anyways :)</p>", "body_text": "Oh, ok I was not expecting the type of the mean to leak into the return type of at::normal, thanks for the hint.\ntorch::randint seems to be the way to go. I thought that every function would be returning a Variable, even  from at::, but apparently that's not the case (yet?).\nThanks for your help anyways :)", "body": "Oh, ok I was not expecting the type of the mean to leak into the return type of `at::normal`, thanks for the hint.\r\n`torch::randint` seems to be the way to go. I thought that every function would be returning a Variable, even  from `at::`, but apparently that's not the case (yet?).\r\n\r\nThanks for your help anyways :)"}