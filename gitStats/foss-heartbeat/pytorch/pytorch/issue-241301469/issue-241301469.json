{"url": "https://api.github.com/repos/pytorch/pytorch/issues/2006", "repository_url": "https://api.github.com/repos/pytorch/pytorch", "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/2006/labels{/name}", "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/2006/comments", "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/2006/events", "html_url": "https://github.com/pytorch/pytorch/issues/2006", "id": 241301469, "node_id": "MDU6SXNzdWUyNDEzMDE0Njk=", "number": 2006, "title": "Tensor.sum() over multiple axes", "user": {"login": "vlasenkov", "id": 13369474, "node_id": "MDQ6VXNlcjEzMzY5NDc0", "avatar_url": "https://avatars3.githubusercontent.com/u/13369474?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vlasenkov", "html_url": "https://github.com/vlasenkov", "followers_url": "https://api.github.com/users/vlasenkov/followers", "following_url": "https://api.github.com/users/vlasenkov/following{/other_user}", "gists_url": "https://api.github.com/users/vlasenkov/gists{/gist_id}", "starred_url": "https://api.github.com/users/vlasenkov/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vlasenkov/subscriptions", "organizations_url": "https://api.github.com/users/vlasenkov/orgs", "repos_url": "https://api.github.com/users/vlasenkov/repos", "events_url": "https://api.github.com/users/vlasenkov/events{/privacy}", "received_events_url": "https://api.github.com/users/vlasenkov/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 424131849, "node_id": "MDU6TGFiZWw0MjQxMzE4NDk=", "url": "https://api.github.com/repos/pytorch/pytorch/labels/enhancement", "name": "enhancement", "color": "84b6eb", "default": true}, {"id": 443484050, "node_id": "MDU6TGFiZWw0NDM0ODQwNTA=", "url": "https://api.github.com/repos/pytorch/pytorch/labels/medium%20priority", "name": "medium priority", "color": "fbca04", "default": false}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 7, "created_at": "2017-07-07T15:36:32Z", "updated_at": "2018-05-03T01:50:54Z", "closed_at": "2018-05-03T01:50:54Z", "author_association": "CONTRIBUTOR", "body_html": "<p>During writing <code>einsum</code> I've found that <code>sum</code> is able to sum only over single axis. I'm going to add a simple implementation of it:</p>\n<pre><code>def sum(input, axes, keepdim=False):\n    # probably some check for uniqueness of axes\n    if keepdim:\n        for ax in axes:\n            input = input.sum(ax, keepdim=True)\n    else:\n        for ax in sorted(axes, reverse=True):\n            input = input.sum(ax)\n    return input\n</code></pre>\n<ol>\n<li>Is it ok?</li>\n<li>Where should it be better placed?</li>\n</ol>", "body_text": "During writing einsum I've found that sum is able to sum only over single axis. I'm going to add a simple implementation of it:\ndef sum(input, axes, keepdim=False):\n    # probably some check for uniqueness of axes\n    if keepdim:\n        for ax in axes:\n            input = input.sum(ax, keepdim=True)\n    else:\n        for ax in sorted(axes, reverse=True):\n            input = input.sum(ax)\n    return input\n\n\nIs it ok?\nWhere should it be better placed?", "body": "During writing `einsum` I've found that `sum` is able to sum only over single axis. I'm going to add a simple implementation of it:\r\n\r\n```\r\ndef sum(input, axes, keepdim=False):\r\n    # probably some check for uniqueness of axes\r\n    if keepdim:\r\n        for ax in axes:\r\n            input = input.sum(ax, keepdim=True)\r\n    else:\r\n        for ax in sorted(axes, reverse=True):\r\n            input = input.sum(ax)\r\n    return input\r\n```\r\n1. Is it ok?\r\n2. Where should it be better placed?"}