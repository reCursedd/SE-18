{"url": "https://api.github.com/repos/pytorch/pytorch/issues/comments/340280727", "html_url": "https://github.com/pytorch/pytorch/issues/264#issuecomment-340280727", "issue_url": "https://api.github.com/repos/pytorch/pytorch/issues/264", "id": 340280727, "node_id": "MDEyOklzc3VlQ29tbWVudDM0MDI4MDcyNw==", "user": {"login": "zou3519", "id": 5652049, "node_id": "MDQ6VXNlcjU2NTIwNDk=", "avatar_url": "https://avatars3.githubusercontent.com/u/5652049?v=4", "gravatar_id": "", "url": "https://api.github.com/users/zou3519", "html_url": "https://github.com/zou3519", "followers_url": "https://api.github.com/users/zou3519/followers", "following_url": "https://api.github.com/users/zou3519/following{/other_user}", "gists_url": "https://api.github.com/users/zou3519/gists{/gist_id}", "starred_url": "https://api.github.com/users/zou3519/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/zou3519/subscriptions", "organizations_url": "https://api.github.com/users/zou3519/orgs", "repos_url": "https://api.github.com/users/zou3519/repos", "events_url": "https://api.github.com/users/zou3519/events{/privacy}", "received_events_url": "https://api.github.com/users/zou3519/received_events", "type": "User", "site_admin": false}, "created_at": "2017-10-29T17:53:06Z", "updated_at": "2017-10-29T17:53:06Z", "author_association": "CONTRIBUTOR", "body_html": "<p><a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=10518920\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/kevinzakka\">@kevinzakka</a> these might help:<br>\n<a href=\"http://pytorch.org/2017/05/11/Internals.html\" rel=\"nofollow\">http://pytorch.org/2017/05/11/Internals.html</a><br>\n<a href=\"http://pytorch.org/2017/06/27/Internals2.html\" rel=\"nofollow\">http://pytorch.org/2017/06/27/Internals2.html</a><br>\nYou can also probably look at the PRs above to generally what needs to happen for each loss.</p>\n<p>A quick overview:</p>\n<ul>\n<li>There's usually a THNN (C) version and a THCUNN (cuda) version of the code. Both those need to be updated.</li>\n<li>The python frontend calls into the THNN or THCUNN backends. That's usually a loss module in torch/nn/modules/loss.py and a functional equivalent in  nn/functional.py.</li>\n</ul>\n<p>Happy hacking! Let me know which loss you decide to pick up so we don't end up working on the same ones.</p>", "body_text": "@kevinzakka these might help:\nhttp://pytorch.org/2017/05/11/Internals.html\nhttp://pytorch.org/2017/06/27/Internals2.html\nYou can also probably look at the PRs above to generally what needs to happen for each loss.\nA quick overview:\n\nThere's usually a THNN (C) version and a THCUNN (cuda) version of the code. Both those need to be updated.\nThe python frontend calls into the THNN or THCUNN backends. That's usually a loss module in torch/nn/modules/loss.py and a functional equivalent in  nn/functional.py.\n\nHappy hacking! Let me know which loss you decide to pick up so we don't end up working on the same ones.", "body": "@kevinzakka these might help:\r\nhttp://pytorch.org/2017/05/11/Internals.html\r\nhttp://pytorch.org/2017/06/27/Internals2.html\r\nYou can also probably look at the PRs above to generally what needs to happen for each loss.\r\n\r\nA quick overview:\r\n- There's usually a THNN (C) version and a THCUNN (cuda) version of the code. Both those need to be updated.\r\n- The python frontend calls into the THNN or THCUNN backends. That's usually a loss module in torch/nn/modules/loss.py and a functional equivalent in  nn/functional.py.\r\n\r\nHappy hacking! Let me know which loss you decide to pick up so we don't end up working on the same ones."}