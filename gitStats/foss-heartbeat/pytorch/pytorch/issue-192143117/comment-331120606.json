{"url": "https://api.github.com/repos/pytorch/pytorch/issues/comments/331120606", "html_url": "https://github.com/pytorch/pytorch/issues/264#issuecomment-331120606", "issue_url": "https://api.github.com/repos/pytorch/pytorch/issues/264", "id": 331120606, "node_id": "MDEyOklzc3VlQ29tbWVudDMzMTEyMDYwNg==", "user": {"login": "fmassa", "id": 9110200, "node_id": "MDQ6VXNlcjkxMTAyMDA=", "avatar_url": "https://avatars2.githubusercontent.com/u/9110200?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fmassa", "html_url": "https://github.com/fmassa", "followers_url": "https://api.github.com/users/fmassa/followers", "following_url": "https://api.github.com/users/fmassa/following{/other_user}", "gists_url": "https://api.github.com/users/fmassa/gists{/gist_id}", "starred_url": "https://api.github.com/users/fmassa/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fmassa/subscriptions", "organizations_url": "https://api.github.com/users/fmassa/orgs", "repos_url": "https://api.github.com/users/fmassa/repos", "events_url": "https://api.github.com/users/fmassa/events{/privacy}", "received_events_url": "https://api.github.com/users/fmassa/received_events", "type": "User", "site_admin": false}, "created_at": "2017-09-21T10:44:13Z", "updated_at": "2017-09-21T10:44:13Z", "author_association": "MEMBER", "body_html": "<p>Instead of adding as a keyword <code>sum</code> (which I think might lead to confusion because you might want to sum but do not compute the <code>size_average</code>), what about using something like <code>reduce</code> or <code>reduction</code> <a href=\"https://www.tensorflow.org/api_docs/python/tf/losses/mean_squared_error\" rel=\"nofollow\">as in TF</a>.</p>\n<p>What do you think?</p>\n<p>Also, I should say that I never really liked the standard <code>size_average</code> behavior, which is to divide by the total number of elements in the input, and not by the batch size. But I guess that can be left for another discussion.</p>", "body_text": "Instead of adding as a keyword sum (which I think might lead to confusion because you might want to sum but do not compute the size_average), what about using something like reduce or reduction as in TF.\nWhat do you think?\nAlso, I should say that I never really liked the standard size_average behavior, which is to divide by the total number of elements in the input, and not by the batch size. But I guess that can be left for another discussion.", "body": "Instead of adding as a keyword `sum` (which I think might lead to confusion because you might want to sum but do not compute the `size_average`), what about using something like `reduce` or `reduction` [as in TF](https://www.tensorflow.org/api_docs/python/tf/losses/mean_squared_error).\r\n\r\nWhat do you think?\r\n\r\nAlso, I should say that I never really liked the standard `size_average` behavior, which is to divide by the total number of elements in the input, and not by the batch size. But I guess that can be left for another discussion."}