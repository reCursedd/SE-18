{"url": "https://api.github.com/repos/pytorch/pytorch/issues/1191", "repository_url": "https://api.github.com/repos/pytorch/pytorch", "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/1191/labels{/name}", "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/1191/comments", "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/1191/events", "html_url": "https://github.com/pytorch/pytorch/issues/1191", "id": 219563088, "node_id": "MDU6SXNzdWUyMTk1NjMwODg=", "number": 1191, "title": "Improve detection/packaging with system-wide Magma", "user": {"login": "mratsim", "id": 22738317, "node_id": "MDQ6VXNlcjIyNzM4MzE3", "avatar_url": "https://avatars3.githubusercontent.com/u/22738317?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mratsim", "html_url": "https://github.com/mratsim", "followers_url": "https://api.github.com/users/mratsim/followers", "following_url": "https://api.github.com/users/mratsim/following{/other_user}", "gists_url": "https://api.github.com/users/mratsim/gists{/gist_id}", "starred_url": "https://api.github.com/users/mratsim/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mratsim/subscriptions", "organizations_url": "https://api.github.com/users/mratsim/orgs", "repos_url": "https://api.github.com/users/mratsim/repos", "events_url": "https://api.github.com/users/mratsim/events{/privacy}", "received_events_url": "https://api.github.com/users/mratsim/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2017-04-05T12:17:22Z", "updated_at": "2017-04-19T22:23:50Z", "closed_at": "2017-04-19T22:23:50Z", "author_association": "CONTRIBUTOR", "body_html": "<p>Hello team,</p>\n<p>I have trouble making PyTorch works properly with a systemwide Magma install on Archlinux.<br>\nMagma is installed at the following location:</p>\n<div class=\"highlight highlight-source-shell\"><pre>$  pacman -Ql magma<span class=\"pl-k\">|</span>grep <span class=\"pl-s\"><span class=\"pl-pds\">'</span>libmagma.so\\|magma.h<span class=\"pl-pds\">'</span></span>\nmagma /opt/magma/include/magma.h\nmagma /opt/magma/lib/libmagma.so</pre></div>\n<p>This is the build script I'm using: <a href=\"https://github.com/mratsim/Arch-Data-Science/blob/master/python-pytorch-git/PKGBUILD\">https://github.com/mratsim/Arch-Data-Science/blob/master/python-pytorch-git/PKGBUILD</a><br>\nEspecially this part to add my directory to Magma detection routine:</p>\n<div class=\"highlight highlight-source-shell\"><pre>  <span class=\"pl-c\"><span class=\"pl-c\">#</span>Adding MAGMA on Archlinux support</span>\n  sed -i <span class=\"pl-s\"><span class=\"pl-pds\">'</span>s#/usr/local/magma/lib#/opt/magma/lib#g<span class=\"pl-pds\">'</span></span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span><span class=\"pl-smi\">${_pkgname}</span>/torch/lib/THC/cmake/FindMAGMA.cmake<span class=\"pl-pds\">\"</span></span>\n  sed -i <span class=\"pl-s\"><span class=\"pl-pds\">'</span>s#/usr/local/magma/include#/opt/magma/include#g<span class=\"pl-pds\">'</span></span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span><span class=\"pl-smi\">${_pkgname}</span>/torch/lib/THC/cmake/FindMAGMA.cmake<span class=\"pl-pds\">\"</span></span>\n  sed -i <span class=\"pl-s\"><span class=\"pl-pds\">'</span>s#/usr/local/magma/lib#/opt/magma/lib#g<span class=\"pl-pds\">'</span></span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span><span class=\"pl-smi\">${_pkgname}</span>/torch/lib/THCS/cmake/FindMAGMA.cmake<span class=\"pl-pds\">\"</span></span>\n  sed -i <span class=\"pl-s\"><span class=\"pl-pds\">'</span>s#/usr/local/magma/include#/opt/magma/include#g<span class=\"pl-pds\">'</span></span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span><span class=\"pl-smi\">${_pkgname}</span>/torch/lib/THCS/cmake/FindMAGMA.cmake<span class=\"pl-pds\">\"</span></span></pre></div>\n<p>During compilation magma.h is properly found however on importing torch I get the following error:</p>\n<div class=\"highlight highlight-source-python\"><pre><span class=\"pl-ii\">--------------------------------------------------------------------------</span><span class=\"pl-k\">-</span>\n<span class=\"pl-c1\">ImportError</span>                               Traceback (most recent call last)\n<span class=\"pl-k\">&lt;</span>ipython<span class=\"pl-k\">-</span><span class=\"pl-c1\">input</span><span class=\"pl-k\">-</span><span class=\"pl-c1\">2</span><span class=\"pl-k\">-</span>cf1060cf0cd9<span class=\"pl-k\">&gt;</span> <span class=\"pl-k\">in</span> <span class=\"pl-k\">&lt;</span>module<span class=\"pl-k\">&gt;</span>()\n<span class=\"pl-ii\">----</span><span class=\"pl-k\">&gt;</span> <span class=\"pl-c1\">1</span> <span class=\"pl-k\">import</span> torch\n      <span class=\"pl-c1\">2</span> <span class=\"pl-k\">from</span> torch.autograd <span class=\"pl-k\">import</span> Variable\n\n<span class=\"pl-k\">/</span>usr<span class=\"pl-k\">/</span>lib<span class=\"pl-k\">/</span>python3.6<span class=\"pl-k\">/</span>site<span class=\"pl-k\">-</span>packages<span class=\"pl-k\">/</span>torch<span class=\"pl-k\">/</span><span class=\"pl-c1\">__init__</span>.py <span class=\"pl-k\">in</span> <span class=\"pl-k\">&lt;</span>module<span class=\"pl-k\">&gt;</span>()\n     <span class=\"pl-c1\">51</span> sys.setdlopenflags(_dl_flags.<span class=\"pl-c1\">RTLD_GLOBAL</span> <span class=\"pl-k\">|</span> _dl_flags.<span class=\"pl-c1\">RTLD_NOW</span>)\n     <span class=\"pl-c1\">52</span> \n<span class=\"pl-ii\">--</span><span class=\"pl-ii\">-&gt;</span> <span class=\"pl-c1\">53</span> <span class=\"pl-k\">from</span> torch._C <span class=\"pl-k\">import</span> <span class=\"pl-k\">*</span>\n     <span class=\"pl-c1\">54</span> \n     <span class=\"pl-c1\">55</span> <span class=\"pl-c1\">__all__</span> <span class=\"pl-k\">+=</span> [name <span class=\"pl-k\">for</span> name <span class=\"pl-k\">in</span> <span class=\"pl-c1\">dir</span>(_C)\n\n<span class=\"pl-c1\">ImportError</span>: libmagma.so: cannot <span class=\"pl-c1\">open</span> shared <span class=\"pl-c1\">object</span> <span class=\"pl-v\">file</span>: No such <span class=\"pl-v\">file</span> <span class=\"pl-k\">or</span> directory</pre></div>\n<p>And indeed a ldd on _C gives the following:</p>\n<div class=\"highlight highlight-source-shell\"><pre>$  ldd _C.cpython-36m-x86_64-linux-gnu.so\n        linux-vdso.so.1 (0x00007fffedf67000)\n        libshm.so =<span class=\"pl-k\">&gt;</span> /usr/lib/python3.6/site-packages/torch/./lib/libshm.so (0x00007fb762f19000)\n        libcudart.so.8.0 =<span class=\"pl-k\">&gt;</span> /opt/cuda/lib64/libcudart.so.8.0 (0x00007fb762cb3000)\n        libcudnn.so.5 =<span class=\"pl-k\">&gt;</span> /opt/cuda/lib64/libcudnn.so.5 (0x00007fb75da44000)\n        libpython3.6m.so.1.0 =<span class=\"pl-k\">&gt;</span> /usr/lib/libpython3.6m.so.1.0 (0x00007fb75d4c7000)\n        libTH.so.1 =<span class=\"pl-k\">&gt;</span> /usr/lib/python3.6/site-packages/torch/./lib/libTH.so.1 (0x00007fb75ce7a000)\n        libTHS.so.1 =<span class=\"pl-k\">&gt;</span> /usr/lib/python3.6/site-packages/torch/./lib/libTHS.so.1 (0x00007fb75cc4d000)\n        libTHPP.so.1 =<span class=\"pl-k\">&gt;</span> /usr/lib/python3.6/site-packages/torch/./lib/libTHPP.so.1 (0x00007fb75c93f000)\n        libTHNN.so.1 =<span class=\"pl-k\">&gt;</span> /usr/lib/python3.6/site-packages/torch/./lib/libTHNN.so.1 (0x00007fb75c63f000)\n        libTHC.so.1 =<span class=\"pl-k\">&gt;</span> /usr/lib/python3.6/site-packages/torch/./lib/libTHC.so.1 (0x00007fb751cd9000)\n        libTHCS.so.1 =<span class=\"pl-k\">&gt;</span> /usr/lib/python3.6/site-packages/torch/./lib/libTHCS.so.1 (0x00007fb751ac3000)\n        libTHCUNN.so.1 =<span class=\"pl-k\">&gt;</span> /usr/lib/python3.6/site-packages/torch/./lib/libTHCUNN.so.1 (0x00007fb74f31b000)\n        libnccl.so.1 =<span class=\"pl-k\">&gt;</span> /usr/lib/python3.6/site-packages/torch/./lib/libnccl.so.1 (0x00007fb74d44e000)\n        libgcc_s.so.1 =<span class=\"pl-k\">&gt;</span> /usr/lib/libgcc_s.so.1 (0x00007fb74d235000)\n        libpthread.so.0 =<span class=\"pl-k\">&gt;</span> /usr/lib/libpthread.so.0 (0x00007fb74d017000)\n        libc.so.6 =<span class=\"pl-k\">&gt;</span> /usr/lib/libc.so.6 (0x00007fb74cc73000)\n        /usr/lib64/ld-linux-x86-64.so.2 (0x0000560721b76000)\n        librt.so.1 =<span class=\"pl-k\">&gt;</span> /usr/lib/librt.so.1 (0x00007fb74ca6b000)\n        libstdc++.so.6 =<span class=\"pl-k\">&gt;</span> /usr/lib/libstdc++.so.6 (0x00007fb74c6e3000)\n        libm.so.6 =<span class=\"pl-k\">&gt;</span> /usr/lib/libm.so.6 (0x00007fb74c3d0000)\n        libdl.so.2 =<span class=\"pl-k\">&gt;</span> /usr/lib/libdl.so.2 (0x00007fb74c1ca000)\n        libutil.so.1 =<span class=\"pl-k\">&gt;</span> /usr/lib/libutil.so.1 (0x00007fb74bfc7000)\n        libopenblas.so.0 =<span class=\"pl-k\">&gt;</span> /usr/lib/libopenblas.so.0 (0x00007fb74afa6000)\n        libgomp.so.1 =<span class=\"pl-k\">&gt;</span> /usr/lib/libgomp.so.1 (0x00007fb74ad78000)\n        libcublas.so.8.0 =<span class=\"pl-k\">&gt;</span> /opt/cuda/lib64/libcublas.so.8.0 (0x00007fb7482e0000)\n        libcurand.so.8.0 =<span class=\"pl-k\">&gt;</span> /opt/cuda/lib64/libcurand.so.8.0 (0x00007fb744368000)\n        libmagma.so =<span class=\"pl-k\">&gt;</span> not found\n        libcusparse.so.8.0 =<span class=\"pl-k\">&gt;</span> /opt/cuda/lib64/libcusparse.so.8.0 (0x00007fb74184d000)\n        libgfortran.so.3 =<span class=\"pl-k\">&gt;</span> /usr/lib/libgfortran.so.3 (0x00007fb74151c000)\n        libquadmath.so.0 =<span class=\"pl-k\">&gt;</span> /usr/lib/../lib/libquadmath.so.0 (0x00007fb7412da000)</pre></div>\n<p>Would it be possible to add an environment variable for Magma like there are for Cuda and CuDNN (CUDNN_LIB_DIR and CUDNN_INCLUDE_DIR)</p>\n<p>Thanks</p>", "body_text": "Hello team,\nI have trouble making PyTorch works properly with a systemwide Magma install on Archlinux.\nMagma is installed at the following location:\n$  pacman -Ql magma|grep 'libmagma.so\\|magma.h'\nmagma /opt/magma/include/magma.h\nmagma /opt/magma/lib/libmagma.so\nThis is the build script I'm using: https://github.com/mratsim/Arch-Data-Science/blob/master/python-pytorch-git/PKGBUILD\nEspecially this part to add my directory to Magma detection routine:\n  #Adding MAGMA on Archlinux support\n  sed -i 's#/usr/local/magma/lib#/opt/magma/lib#g' \"${_pkgname}/torch/lib/THC/cmake/FindMAGMA.cmake\"\n  sed -i 's#/usr/local/magma/include#/opt/magma/include#g' \"${_pkgname}/torch/lib/THC/cmake/FindMAGMA.cmake\"\n  sed -i 's#/usr/local/magma/lib#/opt/magma/lib#g' \"${_pkgname}/torch/lib/THCS/cmake/FindMAGMA.cmake\"\n  sed -i 's#/usr/local/magma/include#/opt/magma/include#g' \"${_pkgname}/torch/lib/THCS/cmake/FindMAGMA.cmake\"\nDuring compilation magma.h is properly found however on importing torch I get the following error:\n---------------------------------------------------------------------------\nImportError                               Traceback (most recent call last)\n<ipython-input-2-cf1060cf0cd9> in <module>()\n----> 1 import torch\n      2 from torch.autograd import Variable\n\n/usr/lib/python3.6/site-packages/torch/__init__.py in <module>()\n     51 sys.setdlopenflags(_dl_flags.RTLD_GLOBAL | _dl_flags.RTLD_NOW)\n     52 \n---> 53 from torch._C import *\n     54 \n     55 __all__ += [name for name in dir(_C)\n\nImportError: libmagma.so: cannot open shared object file: No such file or directory\nAnd indeed a ldd on _C gives the following:\n$  ldd _C.cpython-36m-x86_64-linux-gnu.so\n        linux-vdso.so.1 (0x00007fffedf67000)\n        libshm.so => /usr/lib/python3.6/site-packages/torch/./lib/libshm.so (0x00007fb762f19000)\n        libcudart.so.8.0 => /opt/cuda/lib64/libcudart.so.8.0 (0x00007fb762cb3000)\n        libcudnn.so.5 => /opt/cuda/lib64/libcudnn.so.5 (0x00007fb75da44000)\n        libpython3.6m.so.1.0 => /usr/lib/libpython3.6m.so.1.0 (0x00007fb75d4c7000)\n        libTH.so.1 => /usr/lib/python3.6/site-packages/torch/./lib/libTH.so.1 (0x00007fb75ce7a000)\n        libTHS.so.1 => /usr/lib/python3.6/site-packages/torch/./lib/libTHS.so.1 (0x00007fb75cc4d000)\n        libTHPP.so.1 => /usr/lib/python3.6/site-packages/torch/./lib/libTHPP.so.1 (0x00007fb75c93f000)\n        libTHNN.so.1 => /usr/lib/python3.6/site-packages/torch/./lib/libTHNN.so.1 (0x00007fb75c63f000)\n        libTHC.so.1 => /usr/lib/python3.6/site-packages/torch/./lib/libTHC.so.1 (0x00007fb751cd9000)\n        libTHCS.so.1 => /usr/lib/python3.6/site-packages/torch/./lib/libTHCS.so.1 (0x00007fb751ac3000)\n        libTHCUNN.so.1 => /usr/lib/python3.6/site-packages/torch/./lib/libTHCUNN.so.1 (0x00007fb74f31b000)\n        libnccl.so.1 => /usr/lib/python3.6/site-packages/torch/./lib/libnccl.so.1 (0x00007fb74d44e000)\n        libgcc_s.so.1 => /usr/lib/libgcc_s.so.1 (0x00007fb74d235000)\n        libpthread.so.0 => /usr/lib/libpthread.so.0 (0x00007fb74d017000)\n        libc.so.6 => /usr/lib/libc.so.6 (0x00007fb74cc73000)\n        /usr/lib64/ld-linux-x86-64.so.2 (0x0000560721b76000)\n        librt.so.1 => /usr/lib/librt.so.1 (0x00007fb74ca6b000)\n        libstdc++.so.6 => /usr/lib/libstdc++.so.6 (0x00007fb74c6e3000)\n        libm.so.6 => /usr/lib/libm.so.6 (0x00007fb74c3d0000)\n        libdl.so.2 => /usr/lib/libdl.so.2 (0x00007fb74c1ca000)\n        libutil.so.1 => /usr/lib/libutil.so.1 (0x00007fb74bfc7000)\n        libopenblas.so.0 => /usr/lib/libopenblas.so.0 (0x00007fb74afa6000)\n        libgomp.so.1 => /usr/lib/libgomp.so.1 (0x00007fb74ad78000)\n        libcublas.so.8.0 => /opt/cuda/lib64/libcublas.so.8.0 (0x00007fb7482e0000)\n        libcurand.so.8.0 => /opt/cuda/lib64/libcurand.so.8.0 (0x00007fb744368000)\n        libmagma.so => not found\n        libcusparse.so.8.0 => /opt/cuda/lib64/libcusparse.so.8.0 (0x00007fb74184d000)\n        libgfortran.so.3 => /usr/lib/libgfortran.so.3 (0x00007fb74151c000)\n        libquadmath.so.0 => /usr/lib/../lib/libquadmath.so.0 (0x00007fb7412da000)\nWould it be possible to add an environment variable for Magma like there are for Cuda and CuDNN (CUDNN_LIB_DIR and CUDNN_INCLUDE_DIR)\nThanks", "body": "Hello team,\r\n\r\nI have trouble making PyTorch works properly with a systemwide Magma install on Archlinux.\r\nMagma is installed at the following location:\r\n\r\n```bash\r\n$  pacman -Ql magma|grep 'libmagma.so\\|magma.h'\r\nmagma /opt/magma/include/magma.h\r\nmagma /opt/magma/lib/libmagma.so\r\n```\r\n\r\nThis is the build script I'm using: https://github.com/mratsim/Arch-Data-Science/blob/master/python-pytorch-git/PKGBUILD\r\nEspecially this part to add my directory to Magma detection routine:\r\n\r\n```bash\r\n  #Adding MAGMA on Archlinux support\r\n  sed -i 's#/usr/local/magma/lib#/opt/magma/lib#g' \"${_pkgname}/torch/lib/THC/cmake/FindMAGMA.cmake\"\r\n  sed -i 's#/usr/local/magma/include#/opt/magma/include#g' \"${_pkgname}/torch/lib/THC/cmake/FindMAGMA.cmake\"\r\n  sed -i 's#/usr/local/magma/lib#/opt/magma/lib#g' \"${_pkgname}/torch/lib/THCS/cmake/FindMAGMA.cmake\"\r\n  sed -i 's#/usr/local/magma/include#/opt/magma/include#g' \"${_pkgname}/torch/lib/THCS/cmake/FindMAGMA.cmake\"\r\n```\r\nDuring compilation magma.h is properly found however on importing torch I get the following error:\r\n\r\n```Python\r\n---------------------------------------------------------------------------\r\nImportError                               Traceback (most recent call last)\r\n<ipython-input-2-cf1060cf0cd9> in <module>()\r\n----> 1 import torch\r\n      2 from torch.autograd import Variable\r\n\r\n/usr/lib/python3.6/site-packages/torch/__init__.py in <module>()\r\n     51 sys.setdlopenflags(_dl_flags.RTLD_GLOBAL | _dl_flags.RTLD_NOW)\r\n     52 \r\n---> 53 from torch._C import *\r\n     54 \r\n     55 __all__ += [name for name in dir(_C)\r\n\r\nImportError: libmagma.so: cannot open shared object file: No such file or directory\r\n```\r\n\r\nAnd indeed a ldd on _C gives the following:\r\n```bash\r\n$  ldd _C.cpython-36m-x86_64-linux-gnu.so\r\n        linux-vdso.so.1 (0x00007fffedf67000)\r\n        libshm.so => /usr/lib/python3.6/site-packages/torch/./lib/libshm.so (0x00007fb762f19000)\r\n        libcudart.so.8.0 => /opt/cuda/lib64/libcudart.so.8.0 (0x00007fb762cb3000)\r\n        libcudnn.so.5 => /opt/cuda/lib64/libcudnn.so.5 (0x00007fb75da44000)\r\n        libpython3.6m.so.1.0 => /usr/lib/libpython3.6m.so.1.0 (0x00007fb75d4c7000)\r\n        libTH.so.1 => /usr/lib/python3.6/site-packages/torch/./lib/libTH.so.1 (0x00007fb75ce7a000)\r\n        libTHS.so.1 => /usr/lib/python3.6/site-packages/torch/./lib/libTHS.so.1 (0x00007fb75cc4d000)\r\n        libTHPP.so.1 => /usr/lib/python3.6/site-packages/torch/./lib/libTHPP.so.1 (0x00007fb75c93f000)\r\n        libTHNN.so.1 => /usr/lib/python3.6/site-packages/torch/./lib/libTHNN.so.1 (0x00007fb75c63f000)\r\n        libTHC.so.1 => /usr/lib/python3.6/site-packages/torch/./lib/libTHC.so.1 (0x00007fb751cd9000)\r\n        libTHCS.so.1 => /usr/lib/python3.6/site-packages/torch/./lib/libTHCS.so.1 (0x00007fb751ac3000)\r\n        libTHCUNN.so.1 => /usr/lib/python3.6/site-packages/torch/./lib/libTHCUNN.so.1 (0x00007fb74f31b000)\r\n        libnccl.so.1 => /usr/lib/python3.6/site-packages/torch/./lib/libnccl.so.1 (0x00007fb74d44e000)\r\n        libgcc_s.so.1 => /usr/lib/libgcc_s.so.1 (0x00007fb74d235000)\r\n        libpthread.so.0 => /usr/lib/libpthread.so.0 (0x00007fb74d017000)\r\n        libc.so.6 => /usr/lib/libc.so.6 (0x00007fb74cc73000)\r\n        /usr/lib64/ld-linux-x86-64.so.2 (0x0000560721b76000)\r\n        librt.so.1 => /usr/lib/librt.so.1 (0x00007fb74ca6b000)\r\n        libstdc++.so.6 => /usr/lib/libstdc++.so.6 (0x00007fb74c6e3000)\r\n        libm.so.6 => /usr/lib/libm.so.6 (0x00007fb74c3d0000)\r\n        libdl.so.2 => /usr/lib/libdl.so.2 (0x00007fb74c1ca000)\r\n        libutil.so.1 => /usr/lib/libutil.so.1 (0x00007fb74bfc7000)\r\n        libopenblas.so.0 => /usr/lib/libopenblas.so.0 (0x00007fb74afa6000)\r\n        libgomp.so.1 => /usr/lib/libgomp.so.1 (0x00007fb74ad78000)\r\n        libcublas.so.8.0 => /opt/cuda/lib64/libcublas.so.8.0 (0x00007fb7482e0000)\r\n        libcurand.so.8.0 => /opt/cuda/lib64/libcurand.so.8.0 (0x00007fb744368000)\r\n        libmagma.so => not found\r\n        libcusparse.so.8.0 => /opt/cuda/lib64/libcusparse.so.8.0 (0x00007fb74184d000)\r\n        libgfortran.so.3 => /usr/lib/libgfortran.so.3 (0x00007fb74151c000)\r\n        libquadmath.so.0 => /usr/lib/../lib/libquadmath.so.0 (0x00007fb7412da000)\r\n```\r\n\r\nWould it be possible to add an environment variable for Magma like there are for Cuda and CuDNN (CUDNN_LIB_DIR and CUDNN_INCLUDE_DIR)\r\n\r\nThanks"}