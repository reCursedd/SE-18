{"url": "https://api.github.com/repos/pytorch/pytorch/issues/comments/413918009", "html_url": "https://github.com/pytorch/pytorch/pull/10611#issuecomment-413918009", "issue_url": "https://api.github.com/repos/pytorch/pytorch/issues/10611", "id": 413918009, "node_id": "MDEyOklzc3VlQ29tbWVudDQxMzkxODAwOQ==", "user": {"login": "orionr", "id": 79994, "node_id": "MDQ6VXNlcjc5OTk0", "avatar_url": "https://avatars3.githubusercontent.com/u/79994?v=4", "gravatar_id": "", "url": "https://api.github.com/users/orionr", "html_url": "https://github.com/orionr", "followers_url": "https://api.github.com/users/orionr/followers", "following_url": "https://api.github.com/users/orionr/following{/other_user}", "gists_url": "https://api.github.com/users/orionr/gists{/gist_id}", "starred_url": "https://api.github.com/users/orionr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/orionr/subscriptions", "organizations_url": "https://api.github.com/users/orionr/orgs", "repos_url": "https://api.github.com/users/orionr/repos", "events_url": "https://api.github.com/users/orionr/events{/privacy}", "received_events_url": "https://api.github.com/users/orionr/received_events", "type": "User", "site_admin": false}, "created_at": "2018-08-17T16:23:50Z", "updated_at": "2018-08-17T16:23:50Z", "author_association": "CONTRIBUTOR", "body_html": "<p><code>TorchConfig.cmake.in</code> looks pretty good. Comparing to <code>Caffe2Config.cmake.in</code> you might be able to add some messaging when things aren't found.</p>\n<p>Also, it's possible that you could use a modules approach for libtorch similar to what we do with libcaffe2 like</p>\n<p><a href=\"https://github.com/pytorch/pytorch/blob/master/modules/rocksdb/CMakeLists.txt\">https://github.com/pytorch/pytorch/blob/master/modules/rocksdb/CMakeLists.txt</a></p>\n<p>I'm not sure if it's worth changing this right now, but would be nice to use similar mechanisms for extension in both cases. We can talk more offline too.</p>", "body_text": "TorchConfig.cmake.in looks pretty good. Comparing to Caffe2Config.cmake.in you might be able to add some messaging when things aren't found.\nAlso, it's possible that you could use a modules approach for libtorch similar to what we do with libcaffe2 like\nhttps://github.com/pytorch/pytorch/blob/master/modules/rocksdb/CMakeLists.txt\nI'm not sure if it's worth changing this right now, but would be nice to use similar mechanisms for extension in both cases. We can talk more offline too.", "body": "`TorchConfig.cmake.in` looks pretty good. Comparing to `Caffe2Config.cmake.in` you might be able to add some messaging when things aren't found.\r\n\r\nAlso, it's possible that you could use a modules approach for libtorch similar to what we do with libcaffe2 like\r\n\r\nhttps://github.com/pytorch/pytorch/blob/master/modules/rocksdb/CMakeLists.txt\r\n\r\nI'm not sure if it's worth changing this right now, but would be nice to use similar mechanisms for extension in both cases. We can talk more offline too."}