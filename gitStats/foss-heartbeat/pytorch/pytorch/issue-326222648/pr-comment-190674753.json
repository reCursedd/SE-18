{"url": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/190674753", "pull_request_review_id": 123102934, "id": 190674753, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5MDY3NDc1Mw==", "diff_hunk": "@@ -41,45 +41,91 @@ if(BUILD_CAFFE2)\n endif()\n \n # ---[ BLAS\n-if(BUILD_ATEN)\n-  set(BLAS \"MKL\" CACHE STRING \"Selected BLAS library\")\n-else()\n-  set(BLAS \"Eigen\" CACHE STRING \"Selected BLAS library\")\n+if(NOT BLAS_SET_BY_USER)\n+  if(BUILD_ATEN)\n+    set(BLAS \"MKL\" CACHE STRING \"Selected BLAS library\")\n+  else()\n+    set(BLAS \"Eigen\" CACHE STRING \"Selected BLAS library\")\n+  endif()\n endif()\n set_property(CACHE BLAS PROPERTY STRINGS \"Eigen;ATLAS;OpenBLAS;MKL;vecLib\")\n message(STATUS \"The BLAS backend of choice:\" ${BLAS})\n \n-if(BLAS STREQUAL \"Eigen\")\n-  # Eigen is header-only and we do not have any dependent libraries\n-  set(CAFFE2_USE_EIGEN_FOR_BLAS ON)\n-elseif(BLAS STREQUAL \"ATLAS\")\n-  find_package(Atlas REQUIRED)\n-  include_directories(${ATLAS_INCLUDE_DIRS})\n-  list(APPEND Caffe2_PUBLIC_DEPENDENCY_LIBS ${ATLAS_LIBRARIES})\n-  list(APPEND Caffe2_PUBLIC_DEPENDENCY_LIBS cblas)\n+# Atlas\n+if(BLAS STREQUAL \"ATLAS\")\n+  if(BLAS_SET_BY_USER)\n+    find_package(Atlas REQUIRED)\n+  else()\n+    find_package(Atlas)\n+  endif()\n+  if(Atlas_FOUND)", "path": "cmake/Dependencies.cmake", "position": null, "original_position": 33, "commit_id": "e4ef2458386d66ab4656704b890ec76ba7e56c52", "original_commit_id": "5cbc09afcfed2cb20dd719a400d586e2309c3249", "user": {"login": "pjh5", "id": 6456020, "node_id": "MDQ6VXNlcjY0NTYwMjA=", "avatar_url": "https://avatars1.githubusercontent.com/u/6456020?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pjh5", "html_url": "https://github.com/pjh5", "followers_url": "https://api.github.com/users/pjh5/followers", "following_url": "https://api.github.com/users/pjh5/following{/other_user}", "gists_url": "https://api.github.com/users/pjh5/gists{/gist_id}", "starred_url": "https://api.github.com/users/pjh5/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pjh5/subscriptions", "organizations_url": "https://api.github.com/users/pjh5/orgs", "repos_url": "https://api.github.com/users/pjh5/repos", "events_url": "https://api.github.com/users/pjh5/events{/privacy}", "received_events_url": "https://api.github.com/users/pjh5/received_events", "type": "User", "site_admin": false}, "body": "The include_directories list-appends have to go after both find_package calls though. I could move if(NOT Atlas_FOUND) with a 'break' into the else(), but that doesn't seem worth it to me", "created_at": "2018-05-24T17:50:03Z", "updated_at": "2018-11-23T15:44:36Z", "html_url": "https://github.com/pytorch/pytorch/pull/7813#discussion_r190674753", "pull_request_url": "https://api.github.com/repos/pytorch/pytorch/pulls/7813", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/190674753"}, "html": {"href": "https://github.com/pytorch/pytorch/pull/7813#discussion_r190674753"}, "pull_request": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/7813"}}, "body_html": "<p>The include_directories list-appends have to go after both find_package calls though. I could move if(NOT Atlas_FOUND) with a 'break' into the else(), but that doesn't seem worth it to me</p>", "body_text": "The include_directories list-appends have to go after both find_package calls though. I could move if(NOT Atlas_FOUND) with a 'break' into the else(), but that doesn't seem worth it to me", "in_reply_to_id": 190672648}