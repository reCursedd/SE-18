{"url": "https://api.github.com/repos/pytorch/pytorch/issues/6739", "repository_url": "https://api.github.com/repos/pytorch/pytorch", "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/6739/labels{/name}", "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/6739/comments", "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/6739/events", "html_url": "https://github.com/pytorch/pytorch/issues/6739", "id": 315685320, "node_id": "MDU6SXNzdWUzMTU2ODUzMjA=", "number": 6739, "title": "torch.zeros and other factory functions don't work with no arguments", "user": {"login": "ezyang", "id": 13564, "node_id": "MDQ6VXNlcjEzNTY0", "avatar_url": "https://avatars0.githubusercontent.com/u/13564?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ezyang", "html_url": "https://github.com/ezyang", "followers_url": "https://api.github.com/users/ezyang/followers", "following_url": "https://api.github.com/users/ezyang/following{/other_user}", "gists_url": "https://api.github.com/users/ezyang/gists{/gist_id}", "starred_url": "https://api.github.com/users/ezyang/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ezyang/subscriptions", "organizations_url": "https://api.github.com/users/ezyang/orgs", "repos_url": "https://api.github.com/users/ezyang/repos", "events_url": "https://api.github.com/users/ezyang/events{/privacy}", "received_events_url": "https://api.github.com/users/ezyang/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2018-04-19T00:18:09Z", "updated_at": "2018-04-20T02:31:50Z", "closed_at": null, "author_association": "CONTRIBUTOR", "body_html": "<p>Their argument specification is <code>torch.zeros(*sizes)</code>; thus, by induction, <code>torch.zeros()</code> should give you a zero scalar (since sizes=()). However, this is currently rejected.</p>", "body_text": "Their argument specification is torch.zeros(*sizes); thus, by induction, torch.zeros() should give you a zero scalar (since sizes=()). However, this is currently rejected.", "body": "Their argument specification is `torch.zeros(*sizes)`; thus, by induction, `torch.zeros()` should give you a zero scalar (since sizes=()). However, this is currently rejected."}