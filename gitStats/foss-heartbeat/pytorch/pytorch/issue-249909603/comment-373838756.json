{"url": "https://api.github.com/repos/pytorch/pytorch/issues/comments/373838756", "html_url": "https://github.com/pytorch/pytorch/issues/2405#issuecomment-373838756", "issue_url": "https://api.github.com/repos/pytorch/pytorch/issues/2405", "id": 373838756, "node_id": "MDEyOklzc3VlQ29tbWVudDM3MzgzODc1Ng==", "user": {"login": "zou3519", "id": 5652049, "node_id": "MDQ6VXNlcjU2NTIwNDk=", "avatar_url": "https://avatars3.githubusercontent.com/u/5652049?v=4", "gravatar_id": "", "url": "https://api.github.com/users/zou3519", "html_url": "https://github.com/zou3519", "followers_url": "https://api.github.com/users/zou3519/followers", "following_url": "https://api.github.com/users/zou3519/following{/other_user}", "gists_url": "https://api.github.com/users/zou3519/gists{/gist_id}", "starred_url": "https://api.github.com/users/zou3519/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/zou3519/subscriptions", "organizations_url": "https://api.github.com/users/zou3519/orgs", "repos_url": "https://api.github.com/users/zou3519/repos", "events_url": "https://api.github.com/users/zou3519/events{/privacy}", "received_events_url": "https://api.github.com/users/zou3519/received_events", "type": "User", "site_admin": false}, "created_at": "2018-03-16T20:40:23Z", "updated_at": "2018-03-16T20:40:23Z", "author_association": "CONTRIBUTOR", "body_html": "<p>This has been fixed somewhere down the line:</p>\n<pre><code>\nIn [1]: import torch\n   ...:\n   ...: A = torch.rand(4, 4)\n   ...: An = A.numpy()\n   ...:\n   ...: idx = torch.ByteTensor([1, 0, 0, 1])\n   ...: idxn = [True, False, False, True]\n   ...:\n\nIn [2]: # Numpy indexing.\n   ...: print('numpy')\n   ...: print(An[idxn].shape)\n   ...: print(An[:, idxn].shape)\n   ...:\nnumpy\n(2, 4)\n(4, 2)\n\nIn [3]: # Torch indexing.\n   ...: print('torch')\n   ...: print(A[idx].size())\n   ...: print(A[:, idx].size())\n   ...:\ntorch\ntorch.Size([2, 4])\ntorch.Size([4, 2])\n</code></pre>", "body_text": "This has been fixed somewhere down the line:\n\nIn [1]: import torch\n   ...:\n   ...: A = torch.rand(4, 4)\n   ...: An = A.numpy()\n   ...:\n   ...: idx = torch.ByteTensor([1, 0, 0, 1])\n   ...: idxn = [True, False, False, True]\n   ...:\n\nIn [2]: # Numpy indexing.\n   ...: print('numpy')\n   ...: print(An[idxn].shape)\n   ...: print(An[:, idxn].shape)\n   ...:\nnumpy\n(2, 4)\n(4, 2)\n\nIn [3]: # Torch indexing.\n   ...: print('torch')\n   ...: print(A[idx].size())\n   ...: print(A[:, idx].size())\n   ...:\ntorch\ntorch.Size([2, 4])\ntorch.Size([4, 2])", "body": "This has been fixed somewhere down the line:\r\n```\r\n\r\nIn [1]: import torch\r\n   ...:\r\n   ...: A = torch.rand(4, 4)\r\n   ...: An = A.numpy()\r\n   ...:\r\n   ...: idx = torch.ByteTensor([1, 0, 0, 1])\r\n   ...: idxn = [True, False, False, True]\r\n   ...:\r\n\r\nIn [2]: # Numpy indexing.\r\n   ...: print('numpy')\r\n   ...: print(An[idxn].shape)\r\n   ...: print(An[:, idxn].shape)\r\n   ...:\r\nnumpy\r\n(2, 4)\r\n(4, 2)\r\n\r\nIn [3]: # Torch indexing.\r\n   ...: print('torch')\r\n   ...: print(A[idx].size())\r\n   ...: print(A[:, idx].size())\r\n   ...:\r\ntorch\r\ntorch.Size([2, 4])\r\ntorch.Size([4, 2])\r\n```"}