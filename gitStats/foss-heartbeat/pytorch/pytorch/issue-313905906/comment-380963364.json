{"url": "https://api.github.com/repos/pytorch/pytorch/issues/comments/380963364", "html_url": "https://github.com/pytorch/pytorch/issues/6570#issuecomment-380963364", "issue_url": "https://api.github.com/repos/pytorch/pytorch/issues/6570", "id": 380963364, "node_id": "MDEyOklzc3VlQ29tbWVudDM4MDk2MzM2NA==", "user": {"login": "orionr", "id": 79994, "node_id": "MDQ6VXNlcjc5OTk0", "avatar_url": "https://avatars3.githubusercontent.com/u/79994?v=4", "gravatar_id": "", "url": "https://api.github.com/users/orionr", "html_url": "https://github.com/orionr", "followers_url": "https://api.github.com/users/orionr/followers", "following_url": "https://api.github.com/users/orionr/following{/other_user}", "gists_url": "https://api.github.com/users/orionr/gists{/gist_id}", "starred_url": "https://api.github.com/users/orionr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/orionr/subscriptions", "organizations_url": "https://api.github.com/users/orionr/orgs", "repos_url": "https://api.github.com/users/orionr/repos", "events_url": "https://api.github.com/users/orionr/events{/privacy}", "received_events_url": "https://api.github.com/users/orionr/received_events", "type": "User", "site_admin": false}, "created_at": "2018-04-12T22:27:23Z", "updated_at": "2018-04-12T22:28:38Z", "author_association": "CONTRIBUTOR", "body_html": "<p>As an example of an Android application running a Caffe2 model, feel free to take a look at <a href=\"https://github.com/caffe2/AICamera\">https://github.com/caffe2/AICamera</a> . As <a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=6429851\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/goldsborough\">@goldsborough</a> said, you'd want to train the model with PyTorch and then export with ONNX. Convolutional networks are pretty well covered by ONNX right now, so given your model structure this could be a reasonable way to go.</p>", "body_text": "As an example of an Android application running a Caffe2 model, feel free to take a look at https://github.com/caffe2/AICamera . As @goldsborough said, you'd want to train the model with PyTorch and then export with ONNX. Convolutional networks are pretty well covered by ONNX right now, so given your model structure this could be a reasonable way to go.", "body": "As an example of an Android application running a Caffe2 model, feel free to take a look at https://github.com/caffe2/AICamera . As @goldsborough said, you'd want to train the model with PyTorch and then export with ONNX. Convolutional networks are pretty well covered by ONNX right now, so given your model structure this could be a reasonable way to go."}