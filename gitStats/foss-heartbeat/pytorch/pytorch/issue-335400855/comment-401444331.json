{"url": "https://api.github.com/repos/pytorch/pytorch/issues/comments/401444331", "html_url": "https://github.com/pytorch/pytorch/issues/8847#issuecomment-401444331", "issue_url": "https://api.github.com/repos/pytorch/pytorch/issues/8847", "id": 401444331, "node_id": "MDEyOklzc3VlQ29tbWVudDQwMTQ0NDMzMQ==", "user": {"login": "t-vi", "id": 20787943, "node_id": "MDQ6VXNlcjIwNzg3OTQz", "avatar_url": "https://avatars2.githubusercontent.com/u/20787943?v=4", "gravatar_id": "", "url": "https://api.github.com/users/t-vi", "html_url": "https://github.com/t-vi", "followers_url": "https://api.github.com/users/t-vi/followers", "following_url": "https://api.github.com/users/t-vi/following{/other_user}", "gists_url": "https://api.github.com/users/t-vi/gists{/gist_id}", "starred_url": "https://api.github.com/users/t-vi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/t-vi/subscriptions", "organizations_url": "https://api.github.com/users/t-vi/orgs", "repos_url": "https://api.github.com/users/t-vi/repos", "events_url": "https://api.github.com/users/t-vi/events{/privacy}", "received_events_url": "https://api.github.com/users/t-vi/received_events", "type": "User", "site_admin": false}, "created_at": "2018-06-29T18:57:54Z", "updated_at": "2018-06-29T18:57:54Z", "author_association": "CONTRIBUTOR", "body_html": "<p>I think all you need to do is to wrap the call of the function (in the autograd.Function forward):</p>\n<pre><code>        with torch.enable_grad():\n            theta = solve_logistic_regression(X, y, lamb)\n</code></pre>\n<p>...oh, and return something more reasonable than <code>0</code>.</p>", "body_text": "I think all you need to do is to wrap the call of the function (in the autograd.Function forward):\n        with torch.enable_grad():\n            theta = solve_logistic_regression(X, y, lamb)\n\n...oh, and return something more reasonable than 0.", "body": "I think all you need to do is to wrap the call of the function (in the autograd.Function forward):\r\n```\r\n        with torch.enable_grad():\r\n            theta = solve_logistic_regression(X, y, lamb)\r\n```\r\n...oh, and return something more reasonable than `0`.\r\n"}