{"url": "https://api.github.com/repos/pytorch/pytorch/issues/comments/306543417", "html_url": "https://github.com/pytorch/pytorch/issues/1737#issuecomment-306543417", "issue_url": "https://api.github.com/repos/pytorch/pytorch/issues/1737", "id": 306543417, "node_id": "MDEyOklzc3VlQ29tbWVudDMwNjU0MzQxNw==", "user": {"login": "ngimel", "id": 15841449, "node_id": "MDQ6VXNlcjE1ODQxNDQ5", "avatar_url": "https://avatars3.githubusercontent.com/u/15841449?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ngimel", "html_url": "https://github.com/ngimel", "followers_url": "https://api.github.com/users/ngimel/followers", "following_url": "https://api.github.com/users/ngimel/following{/other_user}", "gists_url": "https://api.github.com/users/ngimel/gists{/gist_id}", "starred_url": "https://api.github.com/users/ngimel/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ngimel/subscriptions", "organizations_url": "https://api.github.com/users/ngimel/orgs", "repos_url": "https://api.github.com/users/ngimel/repos", "events_url": "https://api.github.com/users/ngimel/events{/privacy}", "received_events_url": "https://api.github.com/users/ngimel/received_events", "type": "User", "site_admin": false}, "created_at": "2017-06-06T16:34:19Z", "updated_at": "2017-06-06T16:34:19Z", "author_association": "CONTRIBUTOR", "body_html": "<p><a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load issue title\" data-id=\"232736715\" data-permission-text=\"Issue title is private\" data-url=\"https://github.com/pytorch/pytorch/issues/1691\" data-hovercard-type=\"pull_request\" data-hovercard-url=\"/pytorch/pytorch/pull/1691/hovercard\" href=\"https://github.com/pytorch/pytorch/pull/1691\">#1691</a> could help, but as <a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=4583066\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/apaszke\">@apaszke</a> notes it breaks sharing, so it is unlikely to be merged in its current form. We've never agreed on an acceptable workaround, I don't fully understand what Adam's proposed weakref solution entails. It is not related to cudnn per se, because in lua torch memory behaves in the expected way.</p>", "body_text": "#1691 could help, but as @apaszke notes it breaks sharing, so it is unlikely to be merged in its current form. We've never agreed on an acceptable workaround, I don't fully understand what Adam's proposed weakref solution entails. It is not related to cudnn per se, because in lua torch memory behaves in the expected way.", "body": "#1691 could help, but as @apaszke notes it breaks sharing, so it is unlikely to be merged in its current form. We've never agreed on an acceptable workaround, I don't fully understand what Adam's proposed weakref solution entails. It is not related to cudnn per se, because in lua torch memory behaves in the expected way. "}