{"url": "https://api.github.com/repos/pytorch/pytorch/issues/comments/353174876", "html_url": "https://github.com/pytorch/pytorch/issues/4281#issuecomment-353174876", "issue_url": "https://api.github.com/repos/pytorch/pytorch/issues/4281", "id": 353174876, "node_id": "MDEyOklzc3VlQ29tbWVudDM1MzE3NDg3Ng==", "user": {"login": "larspars", "id": 664369, "node_id": "MDQ6VXNlcjY2NDM2OQ==", "avatar_url": "https://avatars1.githubusercontent.com/u/664369?v=4", "gravatar_id": "", "url": "https://api.github.com/users/larspars", "html_url": "https://github.com/larspars", "followers_url": "https://api.github.com/users/larspars/followers", "following_url": "https://api.github.com/users/larspars/following{/other_user}", "gists_url": "https://api.github.com/users/larspars/gists{/gist_id}", "starred_url": "https://api.github.com/users/larspars/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/larspars/subscriptions", "organizations_url": "https://api.github.com/users/larspars/orgs", "repos_url": "https://api.github.com/users/larspars/repos", "events_url": "https://api.github.com/users/larspars/events{/privacy}", "received_events_url": "https://api.github.com/users/larspars/received_events", "type": "User", "site_admin": false}, "created_at": "2017-12-20T20:32:47Z", "updated_at": "2017-12-20T20:32:47Z", "author_association": "NONE", "body_html": "<p>I'm not sure if I understand what you mean. I suppose you could add @_make_bipolar as a decorator to new definitions, e.g:</p>\n<div class=\"highlight highlight-source-python\"><pre><span class=\"pl-en\">@_make_bipolar</span>\n<span class=\"pl-k\">def</span> <span class=\"pl-en\">my_activation_fn</span>(<span class=\"pl-smi\">x</span>):\n\t<span class=\"pl-k\">return</span> threshold(x, <span class=\"pl-k\">-</span><span class=\"pl-c1\">0.5</span>, <span class=\"pl-k\">-</span><span class=\"pl-c1\">0.5</span>)</pre></div>\n<p>But I don't see how to use it on the existing activation functions without replacing them.</p>", "body_text": "I'm not sure if I understand what you mean. I suppose you could add @_make_bipolar as a decorator to new definitions, e.g:\n@_make_bipolar\ndef my_activation_fn(x):\n\treturn threshold(x, -0.5, -0.5)\nBut I don't see how to use it on the existing activation functions without replacing them.", "body": "I'm not sure if I understand what you mean. I suppose you could add @_make_bipolar as a decorator to new definitions, e.g:\r\n\r\n```python\r\n@_make_bipolar\r\ndef my_activation_fn(x):\r\n\treturn threshold(x, -0.5, -0.5)\r\n```\r\n\r\nBut I don't see how to use it on the existing activation functions without replacing them."}