{"url": "https://api.github.com/repos/pytorch/pytorch/issues/comments/333778483", "html_url": "https://github.com/pytorch/pytorch/issues/2895#issuecomment-333778483", "issue_url": "https://api.github.com/repos/pytorch/pytorch/issues/2895", "id": 333778483, "node_id": "MDEyOklzc3VlQ29tbWVudDMzMzc3ODQ4Mw==", "user": {"login": "apaszke", "id": 4583066, "node_id": "MDQ6VXNlcjQ1ODMwNjY=", "avatar_url": "https://avatars3.githubusercontent.com/u/4583066?v=4", "gravatar_id": "", "url": "https://api.github.com/users/apaszke", "html_url": "https://github.com/apaszke", "followers_url": "https://api.github.com/users/apaszke/followers", "following_url": "https://api.github.com/users/apaszke/following{/other_user}", "gists_url": "https://api.github.com/users/apaszke/gists{/gist_id}", "starred_url": "https://api.github.com/users/apaszke/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/apaszke/subscriptions", "organizations_url": "https://api.github.com/users/apaszke/orgs", "repos_url": "https://api.github.com/users/apaszke/repos", "events_url": "https://api.github.com/users/apaszke/events{/privacy}", "received_events_url": "https://api.github.com/users/apaszke/received_events", "type": "User", "site_admin": false}, "created_at": "2017-10-03T08:44:55Z", "updated_at": "2017-10-03T08:44:55Z", "author_association": "MEMBER", "body_html": "<p>It all boils down to what cuDNN does. Maybe it uses a larger workspace for GRUs to make them faster? <a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=15841449\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/ngimel\">@ngimel</a>?</p>\n<p>The memory increase you see is because of Python scoping rules. If you put the body of the epoch loop in a function or added <code>del loss</code> at the end, you'd see that the memory usage is constant.</p>", "body_text": "It all boils down to what cuDNN does. Maybe it uses a larger workspace for GRUs to make them faster? @ngimel?\nThe memory increase you see is because of Python scoping rules. If you put the body of the epoch loop in a function or added del loss at the end, you'd see that the memory usage is constant.", "body": "It all boils down to what cuDNN does. Maybe it uses a larger workspace for GRUs to make them faster? @ngimel?\r\n\r\nThe memory increase you see is because of Python scoping rules. If you put the body of the epoch loop in a function or added `del loss` at the end, you'd see that the memory usage is constant."}