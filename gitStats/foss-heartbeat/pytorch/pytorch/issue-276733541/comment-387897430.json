{"url": "https://api.github.com/repos/pytorch/pytorch/issues/comments/387897430", "html_url": "https://github.com/pytorch/pytorch/issues/3867#issuecomment-387897430", "issue_url": "https://api.github.com/repos/pytorch/pytorch/issues/3867", "id": 387897430, "node_id": "MDEyOklzc3VlQ29tbWVudDM4Nzg5NzQzMA==", "user": {"login": "janLuke", "id": 6934216, "node_id": "MDQ6VXNlcjY5MzQyMTY=", "avatar_url": "https://avatars1.githubusercontent.com/u/6934216?v=4", "gravatar_id": "", "url": "https://api.github.com/users/janLuke", "html_url": "https://github.com/janLuke", "followers_url": "https://api.github.com/users/janLuke/followers", "following_url": "https://api.github.com/users/janLuke/following{/other_user}", "gists_url": "https://api.github.com/users/janLuke/gists{/gist_id}", "starred_url": "https://api.github.com/users/janLuke/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/janLuke/subscriptions", "organizations_url": "https://api.github.com/users/janLuke/orgs", "repos_url": "https://api.github.com/users/janLuke/repos", "events_url": "https://api.github.com/users/janLuke/events{/privacy}", "received_events_url": "https://api.github.com/users/janLuke/received_events", "type": "User", "site_admin": false}, "created_at": "2018-05-09T22:44:37Z", "updated_at": "2018-05-09T22:46:11Z", "author_association": "NONE", "body_html": "<p>I think that \"sliding-window operators\" should all support asymmetric padding.</p>\n<p>About the \"same\" argument...<br>\n<a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=1310570\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/soumith\">@soumith</a> Can you explain why making padding depending on the input size is bad, please?<br>\nIf that's a problem, anyway, a pragmatic solution could be to require <code>stride == 1</code> when using \"same\". For <code>stride == 1</code>, the padding doesn't depend on the input size and can be computed a single time. The constructor should raise a <code>ValueError</code> if the user attempts to use <code>padding='same'</code> with <code>stride &gt; 1</code>.</p>\n<p>I know, it's not the cleanest solution but the constraint sounds reasonable enough to me given that:</p>\n<ol>\n<li>the original semantic of the label \"same\" was introduced for not strided convolutions and was: the output has the <em>same</em> size of the input; of course, this is not true in tensorflow for <code>stride &gt; 1</code> and that makes the use of the word \"same\" a bit misleading IMO;</li>\n<li>it would cover 99% of the cases one wants to use \"same\"; I can barely imagine a case when someone really needs the behavior of tensorflow for <code>stride &gt; 1</code>, while if we give to \"same\" its original semantic, well, of course it doesn't make any sense to use a strided convolution if you want the output has the same size of the input.</li>\n</ol>", "body_text": "I think that \"sliding-window operators\" should all support asymmetric padding.\nAbout the \"same\" argument...\n@soumith Can you explain why making padding depending on the input size is bad, please?\nIf that's a problem, anyway, a pragmatic solution could be to require stride == 1 when using \"same\". For stride == 1, the padding doesn't depend on the input size and can be computed a single time. The constructor should raise a ValueError if the user attempts to use padding='same' with stride > 1.\nI know, it's not the cleanest solution but the constraint sounds reasonable enough to me given that:\n\nthe original semantic of the label \"same\" was introduced for not strided convolutions and was: the output has the same size of the input; of course, this is not true in tensorflow for stride > 1 and that makes the use of the word \"same\" a bit misleading IMO;\nit would cover 99% of the cases one wants to use \"same\"; I can barely imagine a case when someone really needs the behavior of tensorflow for stride > 1, while if we give to \"same\" its original semantic, well, of course it doesn't make any sense to use a strided convolution if you want the output has the same size of the input.", "body": "I think that \"sliding-window operators\" should all support asymmetric padding.\r\n\r\nAbout the \"same\" argument...\r\n@soumith Can you explain why making padding depending on the input size is bad, please? \r\nIf that's a problem, anyway, a pragmatic solution could be to require ``stride == 1`` when using \"same\". For ``stride == 1``, the padding doesn't depend on the input size and can be computed a single time. The constructor should raise a ``ValueError`` if the user attempts to use ``padding='same'`` with ``stride > 1``.\r\n\r\nI know, it's not the cleanest solution but the constraint sounds reasonable enough to me given that:\r\n1. the original semantic of the label \"same\" was introduced for not strided convolutions and was: the output has the _same_ size of the input; of course, this is not true in tensorflow for ``stride > 1`` and that makes the use of the word \"same\" a bit misleading IMO;\r\n2. it would cover 99% of the cases one wants to use \"same\"; I can barely imagine a case when someone really needs the behavior of tensorflow for ``stride > 1``, while if we give to \"same\" its original semantic, well, of course it doesn't make any sense to use a strided convolution if you want the output has the same size of the input."}