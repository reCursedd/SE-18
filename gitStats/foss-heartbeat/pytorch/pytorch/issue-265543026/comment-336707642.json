{"url": "https://api.github.com/repos/pytorch/pytorch/issues/comments/336707642", "html_url": "https://github.com/pytorch/pytorch/issues/3124#issuecomment-336707642", "issue_url": "https://api.github.com/repos/pytorch/pytorch/issues/3124", "id": 336707642, "node_id": "MDEyOklzc3VlQ29tbWVudDMzNjcwNzY0Mg==", "user": {"login": "barrykui", "id": 10492164, "node_id": "MDQ6VXNlcjEwNDkyMTY0", "avatar_url": "https://avatars2.githubusercontent.com/u/10492164?v=4", "gravatar_id": "", "url": "https://api.github.com/users/barrykui", "html_url": "https://github.com/barrykui", "followers_url": "https://api.github.com/users/barrykui/followers", "following_url": "https://api.github.com/users/barrykui/following{/other_user}", "gists_url": "https://api.github.com/users/barrykui/gists{/gist_id}", "starred_url": "https://api.github.com/users/barrykui/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/barrykui/subscriptions", "organizations_url": "https://api.github.com/users/barrykui/orgs", "repos_url": "https://api.github.com/users/barrykui/repos", "events_url": "https://api.github.com/users/barrykui/events{/privacy}", "received_events_url": "https://api.github.com/users/barrykui/received_events", "type": "User", "site_admin": false}, "created_at": "2017-10-15T12:14:33Z", "updated_at": "2017-10-15T12:14:33Z", "author_association": "NONE", "body_html": "<p><a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=4583066\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/apaszke\">@apaszke</a> Thanks for your kind hearted reply. However, <code>F.softmax</code> is only support  1D, 2D, 3D or 4D tensor, not support 5D tensor (batch, channel, Width, Height, Length ) yet. So I come here to encounter someone who has implemented the  5D tensor supported softmax.</p>\n<p>The followings is the output of the code you shared.</p>\n<pre><code>&gt;&gt;&gt; import torch\n&gt;&gt;&gt; from torch.autograd import Variable                                                                               \n&gt;&gt;&gt; import torch.nn.functional as F                                                                                   \n&gt;&gt;&gt; a=F.softmax(Variable(torch.randn(1, 3, 5, 5, 5)))                                                                 \nTraceback (most recent call last):\n  File \"&lt;stdin&gt;\", line 1, in &lt;module&gt;\n  File \"/home/jsptgpu/anaconda2/lib/python2.7/site-packages/torch/nn/functional.py\", line 529, in softmax\n    return _functions.thnn.auto.Softmax.apply(input)\n  File \"/home/jsptgpu/anaconda2/lib/python2.7/site-packages/torch/nn/_functions/thnn/auto.py\", line 174, in forward\n    getattr(ctx._backend, update_output.name)(ctx._backend.library_state, input, output, *args)\nRuntimeError: invalid argument 2: 1D, 2D, 3D or 4D tensor expected at /pytorch/torch/lib/THNN/generic/SoftMax.c:40\n</code></pre>", "body_text": "@apaszke Thanks for your kind hearted reply. However, F.softmax is only support  1D, 2D, 3D or 4D tensor, not support 5D tensor (batch, channel, Width, Height, Length ) yet. So I come here to encounter someone who has implemented the  5D tensor supported softmax.\nThe followings is the output of the code you shared.\n>>> import torch\n>>> from torch.autograd import Variable                                                                               \n>>> import torch.nn.functional as F                                                                                   \n>>> a=F.softmax(Variable(torch.randn(1, 3, 5, 5, 5)))                                                                 \nTraceback (most recent call last):\n  File \"<stdin>\", line 1, in <module>\n  File \"/home/jsptgpu/anaconda2/lib/python2.7/site-packages/torch/nn/functional.py\", line 529, in softmax\n    return _functions.thnn.auto.Softmax.apply(input)\n  File \"/home/jsptgpu/anaconda2/lib/python2.7/site-packages/torch/nn/_functions/thnn/auto.py\", line 174, in forward\n    getattr(ctx._backend, update_output.name)(ctx._backend.library_state, input, output, *args)\nRuntimeError: invalid argument 2: 1D, 2D, 3D or 4D tensor expected at /pytorch/torch/lib/THNN/generic/SoftMax.c:40", "body": "@apaszke Thanks for your kind hearted reply. However, `F.softmax` is only support  1D, 2D, 3D or 4D tensor, not support 5D tensor (batch, channel, Width, Height, Length ) yet. So I come here to encounter someone who has implemented the  5D tensor supported softmax.\r\n\r\nThe followings is the output of the code you shared.\r\n```\r\n>>> import torch\r\n>>> from torch.autograd import Variable                                                                               \r\n>>> import torch.nn.functional as F                                                                                   \r\n>>> a=F.softmax(Variable(torch.randn(1, 3, 5, 5, 5)))                                                                 \r\nTraceback (most recent call last):\r\n  File \"<stdin>\", line 1, in <module>\r\n  File \"/home/jsptgpu/anaconda2/lib/python2.7/site-packages/torch/nn/functional.py\", line 529, in softmax\r\n    return _functions.thnn.auto.Softmax.apply(input)\r\n  File \"/home/jsptgpu/anaconda2/lib/python2.7/site-packages/torch/nn/_functions/thnn/auto.py\", line 174, in forward\r\n    getattr(ctx._backend, update_output.name)(ctx._backend.library_state, input, output, *args)\r\nRuntimeError: invalid argument 2: 1D, 2D, 3D or 4D tensor expected at /pytorch/torch/lib/THNN/generic/SoftMax.c:40\r\n```\r\n\r\n"}