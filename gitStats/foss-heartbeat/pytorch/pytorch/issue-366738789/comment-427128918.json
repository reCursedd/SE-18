{"url": "https://api.github.com/repos/pytorch/pytorch/issues/comments/427128918", "html_url": "https://github.com/pytorch/pytorch/issues/12321#issuecomment-427128918", "issue_url": "https://api.github.com/repos/pytorch/pytorch/issues/12321", "id": 427128918, "node_id": "MDEyOklzc3VlQ29tbWVudDQyNzEyODkxOA==", "user": {"login": "fmassa", "id": 9110200, "node_id": "MDQ6VXNlcjkxMTAyMDA=", "avatar_url": "https://avatars2.githubusercontent.com/u/9110200?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fmassa", "html_url": "https://github.com/fmassa", "followers_url": "https://api.github.com/users/fmassa/followers", "following_url": "https://api.github.com/users/fmassa/following{/other_user}", "gists_url": "https://api.github.com/users/fmassa/gists{/gist_id}", "starred_url": "https://api.github.com/users/fmassa/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fmassa/subscriptions", "organizations_url": "https://api.github.com/users/fmassa/orgs", "repos_url": "https://api.github.com/users/fmassa/repos", "events_url": "https://api.github.com/users/fmassa/events{/privacy}", "received_events_url": "https://api.github.com/users/fmassa/received_events", "type": "User", "site_admin": false}, "created_at": "2018-10-04T18:47:52Z", "updated_at": "2018-10-04T18:47:52Z", "author_association": "MEMBER", "body_html": "<p>As <a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=23639302\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/vishwakftw\">@vishwakftw</a> pointed out, this is a consequence of floating point numbers not being associative.<br>\nThe exact same behavior happens with numpy</p>\n<div class=\"highlight highlight-source-python\"><pre>a <span class=\"pl-k\">=</span> np.random.randn(<span class=\"pl-c1\">2</span>, <span class=\"pl-c1\">24</span>, <span class=\"pl-c1\">10</span>).astype(np.float32)\nb <span class=\"pl-k\">=</span> np.random.randn(<span class=\"pl-c1\">5</span>, <span class=\"pl-c1\">10</span>).astype(np.float32)\nc1 <span class=\"pl-k\">=</span> np.einsum(<span class=\"pl-s\"><span class=\"pl-pds\">'</span>ijk,bk-&gt;bij<span class=\"pl-pds\">'</span></span>, a,b)\nc2 <span class=\"pl-k\">=</span> np.einsum(<span class=\"pl-s\"><span class=\"pl-pds\">'</span>bijk,bk-&gt;bij<span class=\"pl-pds\">'</span></span>, np.repeat(a[<span class=\"pl-c1\">None</span>], b.shape[<span class=\"pl-c1\">0</span>], <span class=\"pl-c1\">0</span>),b)\nc3 <span class=\"pl-k\">=</span> np.zeros((<span class=\"pl-c1\">5</span>, <span class=\"pl-c1\">2</span>, <span class=\"pl-c1\">24</span>), <span class=\"pl-v\">dtype</span><span class=\"pl-k\">=</span>np.float32)\n<span class=\"pl-k\">for</span> i <span class=\"pl-k\">in</span> <span class=\"pl-c1\">range</span>(<span class=\"pl-c1\">5</span>):\n    c3[i] <span class=\"pl-k\">=</span> np.einsum(<span class=\"pl-s\"><span class=\"pl-pds\">'</span>ijk,k-&gt;ij<span class=\"pl-pds\">'</span></span>, a, b[i])\n\n<span class=\"pl-c1\">print</span>(np.abs((c1<span class=\"pl-k\">-</span>c2)).max())\n<span class=\"pl-c1\">print</span>(np.abs((c1<span class=\"pl-k\">-</span>c3)).max())\n<span class=\"pl-c1\">print</span>(np.abs((c2<span class=\"pl-k\">-</span>c3)).max())</pre></div>\n<p>gives</p>\n<pre><code>9.536743e-07\n9.536743e-07\n9.536743e-07\n</code></pre>", "body_text": "As @vishwakftw pointed out, this is a consequence of floating point numbers not being associative.\nThe exact same behavior happens with numpy\na = np.random.randn(2, 24, 10).astype(np.float32)\nb = np.random.randn(5, 10).astype(np.float32)\nc1 = np.einsum('ijk,bk->bij', a,b)\nc2 = np.einsum('bijk,bk->bij', np.repeat(a[None], b.shape[0], 0),b)\nc3 = np.zeros((5, 2, 24), dtype=np.float32)\nfor i in range(5):\n    c3[i] = np.einsum('ijk,k->ij', a, b[i])\n\nprint(np.abs((c1-c2)).max())\nprint(np.abs((c1-c3)).max())\nprint(np.abs((c2-c3)).max())\ngives\n9.536743e-07\n9.536743e-07\n9.536743e-07", "body": "As @vishwakftw pointed out, this is a consequence of floating point numbers not being associative.\r\nThe exact same behavior happens with numpy\r\n```python\r\na = np.random.randn(2, 24, 10).astype(np.float32)\r\nb = np.random.randn(5, 10).astype(np.float32)\r\nc1 = np.einsum('ijk,bk->bij', a,b)\r\nc2 = np.einsum('bijk,bk->bij', np.repeat(a[None], b.shape[0], 0),b)\r\nc3 = np.zeros((5, 2, 24), dtype=np.float32)\r\nfor i in range(5):\r\n    c3[i] = np.einsum('ijk,k->ij', a, b[i])\r\n\r\nprint(np.abs((c1-c2)).max())\r\nprint(np.abs((c1-c3)).max())\r\nprint(np.abs((c2-c3)).max())\r\n```\r\ngives\r\n```\r\n9.536743e-07\r\n9.536743e-07\r\n9.536743e-07\r\n```"}