{"url": "https://api.github.com/repos/pytorch/pytorch/issues/comments/343750955", "html_url": "https://github.com/pytorch/pytorch/pull/3341#issuecomment-343750955", "issue_url": "https://api.github.com/repos/pytorch/pytorch/issues/3341", "id": 343750955, "node_id": "MDEyOklzc3VlQ29tbWVudDM0Mzc1MDk1NQ==", "user": {"login": "hughperkins", "id": 123560, "node_id": "MDQ6VXNlcjEyMzU2MA==", "avatar_url": "https://avatars2.githubusercontent.com/u/123560?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hughperkins", "html_url": "https://github.com/hughperkins", "followers_url": "https://api.github.com/users/hughperkins/followers", "following_url": "https://api.github.com/users/hughperkins/following{/other_user}", "gists_url": "https://api.github.com/users/hughperkins/gists{/gist_id}", "starred_url": "https://api.github.com/users/hughperkins/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hughperkins/subscriptions", "organizations_url": "https://api.github.com/users/hughperkins/orgs", "repos_url": "https://api.github.com/users/hughperkins/repos", "events_url": "https://api.github.com/users/hughperkins/events{/privacy}", "received_events_url": "https://api.github.com/users/hughperkins/received_events", "type": "User", "site_admin": false}, "created_at": "2017-11-12T16:57:55Z", "updated_at": "2017-11-12T16:58:52Z", "author_association": "CONTRIBUTOR", "body_html": "<p>note to whoever picks this up (might be me, but probably not until current master is available in versioned form): need to do something like:</p>\n<pre><code>type_constr = torch.cuda if logits.is_cuda else torch\ny_hard = type_constr.FloatTensor( ...\n</code></pre>\n<p>(or whatever is the standard approach for cuda-izing things).</p>\n<p>Edit: PS will be very nice when current master is available in versioned form, so we can use the new distributions api :) )</p>", "body_text": "note to whoever picks this up (might be me, but probably not until current master is available in versioned form): need to do something like:\ntype_constr = torch.cuda if logits.is_cuda else torch\ny_hard = type_constr.FloatTensor( ...\n\n(or whatever is the standard approach for cuda-izing things).\nEdit: PS will be very nice when current master is available in versioned form, so we can use the new distributions api :) )", "body": "note to whoever picks this up (might be me, but probably not until current master is available in versioned form): need to do something like:\r\n```\r\ntype_constr = torch.cuda if logits.is_cuda else torch\r\ny_hard = type_constr.FloatTensor( ...\r\n```\r\n(or whatever is the standard approach for cuda-izing things).\r\n\r\nEdit: PS will be very nice when current master is available in versioned form, so we can use the new distributions api :) )"}