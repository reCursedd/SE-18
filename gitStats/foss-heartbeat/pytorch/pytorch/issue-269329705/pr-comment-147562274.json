{"url": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/147562274", "pull_request_review_id": 72679517, "id": 147562274, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE0NzU2MjI3NA==", "diff_hunk": "@@ -660,6 +660,70 @@ def softmax(input, dim=None, _stacklevel=3):\n     return torch._C._nn.softmax(input, dim)\n \n \n+def sample_gumbel(shape, eps=1e-10):\n+    \"\"\"\n+    Sample from Gumbel(0, 1)\n+\n+    based on\n+    https://github.com/ericjang/gumbel-softmax/blob/3c8584924603869e90ca74ac20a6a03d99a91ef9/Categorical%20VAE.ipynb ,\n+    (MIT license)\n+    \"\"\"\n+    U = torch.rand(shape).float()\n+    return - torch.log(eps - torch.log(U + eps))\n+\n+\n+def gumbel_softmax_sample(logits, tau=1, eps=1e-10):\n+    \"\"\"\n+    Draw a sample from the Gumbel-Softmax distribution\n+\n+    based on\n+    https://github.com/ericjang/gumbel-softmax/blob/3c8584924603869e90ca74ac20a6a03d99a91ef9/Categorical%20VAE.ipynb\n+    (MIT license)\n+    \"\"\"\n+    dims = len(logits.size())\n+    gumbel_noise = sample_gumbel(logits.size(), eps=eps)\n+    y = logits + Variable(gumbel_noise)\n+    return softmax(y / tau, dims - 1)\n+\n+\n+def gumbel_softmax(logits, tau=1, hard=False, eps=1e-10):\n+    \"\"\"\n+    Sample from the Gumbel-Softmax distribution and optionally discretize.\n+    Args:\n+      logits: [batch_size, n_class] unnormalized log-probs\n+      tau: non-negative scalar temperature\n+      hard: if True, take argmax, but differentiate w.r.t. soft sample y\n+    Returns:\n+      [batch_size, n_class] sample from the Gumbel-Softmax distribution.\n+      If hard=True, then the returned sample will be one-hot, otherwise it will\n+      be a probabilitiy distribution that sums to 1 across classes", "path": "torch/nn/functional.py", "position": null, "original_position": 40, "commit_id": "53f43a769349791ee2c634a489df8e3f76409d8f", "original_commit_id": "efd7b2cf89afa2e121832ed2088c8306e8e363c5", "user": {"login": "ozancaglayan", "id": 330946, "node_id": "MDQ6VXNlcjMzMDk0Ng==", "avatar_url": "https://avatars0.githubusercontent.com/u/330946?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ozancaglayan", "html_url": "https://github.com/ozancaglayan", "followers_url": "https://api.github.com/users/ozancaglayan/followers", "following_url": "https://api.github.com/users/ozancaglayan/following{/other_user}", "gists_url": "https://api.github.com/users/ozancaglayan/gists{/gist_id}", "starred_url": "https://api.github.com/users/ozancaglayan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ozancaglayan/subscriptions", "organizations_url": "https://api.github.com/users/ozancaglayan/orgs", "repos_url": "https://api.github.com/users/ozancaglayan/repos", "events_url": "https://api.github.com/users/ozancaglayan/events{/privacy}", "received_events_url": "https://api.github.com/users/ozancaglayan/received_events", "type": "User", "site_admin": false}, "body": "An extra \"i\" in probabilit(i)y :)", "created_at": "2017-10-28T19:24:02Z", "updated_at": "2018-11-23T15:35:44Z", "html_url": "https://github.com/pytorch/pytorch/pull/3341#discussion_r147562274", "pull_request_url": "https://api.github.com/repos/pytorch/pytorch/pulls/3341", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/147562274"}, "html": {"href": "https://github.com/pytorch/pytorch/pull/3341#discussion_r147562274"}, "pull_request": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/3341"}}, "body_html": "<p>An extra \"i\" in probabilit(i)y :)</p>", "body_text": "An extra \"i\" in probabilit(i)y :)"}