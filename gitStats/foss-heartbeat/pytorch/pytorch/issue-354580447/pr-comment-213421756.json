{"url": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/213421756", "pull_request_review_id": 150254699, "id": 213421756, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIxMzQyMTc1Ng==", "diff_hunk": "@@ -103,24 +104,32 @@ def export(model, args, f, export_params=True, verbose=False, training=False,\n             operator_export_type=operator_export_type)\n \n \n-def _list_constant_prop(g, block):\n+# ONNX can't handle constants that are lists of tensors, which can\n+# get generated in constant prop. So we split them back into prim::ListConstructs\n+def _split_tensor_list_constants(g, block):\n     for node in block.nodes():\n         for subblock in node.blocks():\n-            _list_constant_prop(g, subblock)\n-        if node.kind() == \"prim::ListConstruct\":\n-            input_nodes = [i.node() for i in node.inputs()]\n-            if all(inode.kind() == \"prim::Constant\" and inode.kindOf(\"value\") == \"i\" for inode in input_nodes):\n-                input_values = [inode['value'] for inode in input_nodes]\n-                const_node = g.create(\"prim::Constant\")\n-                const_node.insertBefore(node)\n-                const_node.is_(\"value\", input_values)\n-                const_node.output().setType(torch._C.ListType.ofInts())\n-                node.output().replaceAllUsesWith(const_node.output())\n+            _split_tensor_list_constants(g, subblock)\n+        if node.kind() == \"prim::Constant\":\n+            output_type = node.output().type()\n+            if output_type.isSubtypeOf(ListType.ofTensors()):\n+                inputs = [g.create(\"prim::Constant\").t_('value', t)\n+                           .insertBefore(node).output()\n+                          for t in node['value']]\n+                lc = (g.create(\"prim::ListConstruct\", inputs)\n+                      .insertBefore(node)\n+                      .output()\n+                      .setType(ListType.ofTensors()))\n+                node.output().replaceAllUsesWith(lc)\n \n \n def _optimize_graph(graph, operator_export_type):\n-    _list_constant_prop(graph, graph)\n-\n+    # we record now record some ops like ones/zeros\n+    # into a trace where we previously recorded constants\n+    # use constant prop to maintain our current level of onnx support\n+    # without implementing symbolics for all of them\n+    torch._C._jit_pass_constant_propagation(graph)", "path": "torch/onnx/utils.py", "position": 49, "original_position": 49, "commit_id": "2aae196477beb758b8272f9e728afc75cfb975a9", "original_commit_id": "be1d4fcfd9a3e8b9625242efbb8b6d4d8c7ca683", "user": {"login": "zdevito", "id": 370202, "node_id": "MDQ6VXNlcjM3MDIwMg==", "avatar_url": "https://avatars0.githubusercontent.com/u/370202?v=4", "gravatar_id": "", "url": "https://api.github.com/users/zdevito", "html_url": "https://github.com/zdevito", "followers_url": "https://api.github.com/users/zdevito/followers", "following_url": "https://api.github.com/users/zdevito/following{/other_user}", "gists_url": "https://api.github.com/users/zdevito/gists{/gist_id}", "starred_url": "https://api.github.com/users/zdevito/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/zdevito/subscriptions", "organizations_url": "https://api.github.com/users/zdevito/orgs", "repos_url": "https://api.github.com/users/zdevito/repos", "events_url": "https://api.github.com/users/zdevito/events{/privacy}", "received_events_url": "https://api.github.com/users/zdevito/received_events", "type": "User", "site_admin": false}, "body": "Offline discussion: we should limit how much we constant prop through factories in non-ONNX code. However, this patch doesn't regress that behavior in anyway, so I am going to defer it a later task. ", "created_at": "2018-08-28T18:20:25Z", "updated_at": "2018-11-23T15:50:11Z", "html_url": "https://github.com/pytorch/pytorch/pull/10935#discussion_r213421756", "pull_request_url": "https://api.github.com/repos/pytorch/pytorch/pulls/10935", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/213421756"}, "html": {"href": "https://github.com/pytorch/pytorch/pull/10935#discussion_r213421756"}, "pull_request": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/10935"}}, "body_html": "<p>Offline discussion: we should limit how much we constant prop through factories in non-ONNX code. However, this patch doesn't regress that behavior in anyway, so I am going to defer it a later task.</p>", "body_text": "Offline discussion: we should limit how much we constant prop through factories in non-ONNX code. However, this patch doesn't regress that behavior in anyway, so I am going to defer it a later task.", "in_reply_to_id": 213333048}