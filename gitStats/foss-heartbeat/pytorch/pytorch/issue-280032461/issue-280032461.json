{"url": "https://api.github.com/repos/pytorch/pytorch/issues/4068", "repository_url": "https://api.github.com/repos/pytorch/pytorch", "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/4068/labels{/name}", "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/4068/comments", "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/4068/events", "html_url": "https://github.com/pytorch/pytorch/issues/4068", "id": 280032461, "node_id": "MDU6SXNzdWUyODAwMzI0NjE=", "number": 4068, "title": "Feature request: Weighted average for EmbeddingBag", "user": {"login": "kunaldahiya", "id": 18436752, "node_id": "MDQ6VXNlcjE4NDM2NzUy", "avatar_url": "https://avatars3.githubusercontent.com/u/18436752?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kunaldahiya", "html_url": "https://github.com/kunaldahiya", "followers_url": "https://api.github.com/users/kunaldahiya/followers", "following_url": "https://api.github.com/users/kunaldahiya/following{/other_user}", "gists_url": "https://api.github.com/users/kunaldahiya/gists{/gist_id}", "starred_url": "https://api.github.com/users/kunaldahiya/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kunaldahiya/subscriptions", "organizations_url": "https://api.github.com/users/kunaldahiya/orgs", "repos_url": "https://api.github.com/users/kunaldahiya/repos", "events_url": "https://api.github.com/users/kunaldahiya/events{/privacy}", "received_events_url": "https://api.github.com/users/kunaldahiya/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2017-12-07T07:46:15Z", "updated_at": "2017-12-07T07:46:15Z", "closed_at": null, "author_association": "NONE", "body_html": "<p>Right now 'torch.nn.EmbeddingBag' supports only 'sum' and 'mean'. What do you think about providing an option for weights to compute 'weighted average'? This would be more memory efficient than using current alternative.</p>\n<p>For instance something like 'sp_weights' in 'tf.nn.embedding_lookup_sparse' [1].</p>\n<p>References:<br>\n[1] <a href=\"https://www.tensorflow.org/api_docs/python/tf/nn/embedding_lookup_sparse\" rel=\"nofollow\">https://www.tensorflow.org/api_docs/python/tf/nn/embedding_lookup_sparse</a></p>", "body_text": "Right now 'torch.nn.EmbeddingBag' supports only 'sum' and 'mean'. What do you think about providing an option for weights to compute 'weighted average'? This would be more memory efficient than using current alternative.\nFor instance something like 'sp_weights' in 'tf.nn.embedding_lookup_sparse' [1].\nReferences:\n[1] https://www.tensorflow.org/api_docs/python/tf/nn/embedding_lookup_sparse", "body": "Right now 'torch.nn.EmbeddingBag' supports only 'sum' and 'mean'. What do you think about providing an option for weights to compute 'weighted average'? This would be more memory efficient than using current alternative. \r\n\r\nFor instance something like 'sp_weights' in 'tf.nn.embedding_lookup_sparse' [1].\r\n\r\nReferences:\r\n[1] https://www.tensorflow.org/api_docs/python/tf/nn/embedding_lookup_sparse "}