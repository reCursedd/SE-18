{"url": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/173283836", "pull_request_review_id": 102449997, "id": 173283836, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE3MzI4MzgzNg==", "diff_hunk": "@@ -2828,14 +2828,20 @@ void THTensor_(range)(THTensor *r_, accreal xmin, accreal xmax, accreal step)\n }\n \n void THTensor_(arange)(THTensor *r_, accreal xmin, accreal xmax, accreal step) {\n-#if defined(TH_REAL_IS_FLOAT) || defined(TH_REAL_IS_DOUBLE)\n-  int m = fmod(xmax - xmin, step) == 0;\n-#else\n-  int m = (xmax - xmin) % step == 0;\n-#endif\n-  if (m)\n-    xmax -= step;\n-  THTensor_(range)(r_, xmin, xmax, step);\n+  ptrdiff_t size;\n+  real i = 0;\n+\n+  THArgCheck(step > 0 || step < 0, 3, \"step must be a non-null number\");", "path": "aten/src/TH/generic/THTensorMath.c", "position": null, "original_position": 15, "commit_id": "613a5daa965fa79d97dfb1a107bfe6bfda043923", "original_commit_id": "a86e5f2ccb125c6a7891df32fbf172a8f82fb7e2", "user": {"login": "colesbury", "id": 655866, "node_id": "MDQ6VXNlcjY1NTg2Ng==", "avatar_url": "https://avatars1.githubusercontent.com/u/655866?v=4", "gravatar_id": "", "url": "https://api.github.com/users/colesbury", "html_url": "https://github.com/colesbury", "followers_url": "https://api.github.com/users/colesbury/followers", "following_url": "https://api.github.com/users/colesbury/following{/other_user}", "gists_url": "https://api.github.com/users/colesbury/gists{/gist_id}", "starred_url": "https://api.github.com/users/colesbury/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/colesbury/subscriptions", "organizations_url": "https://api.github.com/users/colesbury/orgs", "repos_url": "https://api.github.com/users/colesbury/repos", "events_url": "https://api.github.com/users/colesbury/events{/privacy}", "received_events_url": "https://api.github.com/users/colesbury/received_events", "type": "User", "site_admin": false}, "body": "I think Peter was suggesting that the line read:\r\n\r\n```\r\nTHArgCheck(step != 0, 3, ...);\r\n```\r\n\r\n(not that we allow a zero step)\r\n\r\nThe error message \"step must be a non-null number\" is a bit awkward. (I think something like \"step must not be 0\" will be better).\r\n\r\nIf you're concerned about `nan`, maybe just add an explicit check for it.\r\n\r\n(I realize that this is taken from the `range` code above)", "created_at": "2018-03-08T20:40:00Z", "updated_at": "2018-11-23T15:40:31Z", "html_url": "https://github.com/pytorch/pytorch/pull/5600#discussion_r173283836", "pull_request_url": "https://api.github.com/repos/pytorch/pytorch/pulls/5600", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/173283836"}, "html": {"href": "https://github.com/pytorch/pytorch/pull/5600#discussion_r173283836"}, "pull_request": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/5600"}}, "body_html": "<p>I think Peter was suggesting that the line read:</p>\n<pre><code>THArgCheck(step != 0, 3, ...);\n</code></pre>\n<p>(not that we allow a zero step)</p>\n<p>The error message \"step must be a non-null number\" is a bit awkward. (I think something like \"step must not be 0\" will be better).</p>\n<p>If you're concerned about <code>nan</code>, maybe just add an explicit check for it.</p>\n<p>(I realize that this is taken from the <code>range</code> code above)</p>", "body_text": "I think Peter was suggesting that the line read:\nTHArgCheck(step != 0, 3, ...);\n\n(not that we allow a zero step)\nThe error message \"step must be a non-null number\" is a bit awkward. (I think something like \"step must not be 0\" will be better).\nIf you're concerned about nan, maybe just add an explicit check for it.\n(I realize that this is taken from the range code above)", "in_reply_to_id": 172710447}