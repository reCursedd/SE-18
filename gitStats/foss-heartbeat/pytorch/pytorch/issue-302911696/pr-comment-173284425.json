{"url": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/173284425", "pull_request_review_id": 102449997, "id": 173284425, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE3MzI4NDQyNQ==", "diff_hunk": "@@ -491,14 +491,20 @@ void THCTensor_(range)(THCState *state, THCTensor *r_, accreal xmin, accreal xma\n }\n \n void THCTensor_(arange)(THCState* state, THCTensor *r_, accreal xmin, accreal xmax, accreal step) {\n-#if defined(THC_REAL_IS_FLOAT) || defined(THC_REAL_IS_DOUBLE) || defined(THC_REAL_IS_HALF)\n-  int m = fmod(xmax - xmin, step) == 0;\n-#else\n-  int m = (xmax - xmin) % step == 0;\n-#endif\n-  if (m)\n-    xmax -= step;\n-  THCTensor_(range)(state, r_, xmin, xmax, step);\n+  THCAssertSameGPU(THCTensor_(checkGPU)(state, 1, r_));\n+  THArgCheck(step > 0 || step < 0, 3, \"step must be a non-null number\");\n+  THArgCheck(((step > 0) && (xmax >= xmin)) || ((step < 0) && (xmax <= xmin))\n+              , 2, \"upper bound and larger bound inconsistent with step sign\");\n+  ptrdiff_t size = (ptrdiff_t) ceil(ScalarConvert<accreal, double>::to(xmax - xmin) / step);\n+  if (THCTensor_(nElement)(state, r_) != size) THCTensor_(resize1d)(state, r_, size);\n+  THCTensor *r = THCTensor_(isContiguous)(state, r_)\n+                 ? r_\n+                 : THCTensor_(newContiguous)(state, r_);\n+  LinspaceOp<real,accreal> linspace_method(xmin, step);\n+  thrust::device_ptr<real> data_(THCTensor_(data)(state, r));\n+  thrust::tabulate(data_, data_ + size, linspace_method);\n+  if (!THCTensor_(isContiguous)(state, r_)) THCTensor_(freeCopyTo)(state, r, r_);", "path": "aten/src/THC/generic/THCTensorMath.cu", "position": null, "original_position": 33, "commit_id": "613a5daa965fa79d97dfb1a107bfe6bfda043923", "original_commit_id": "ad4c89ccbc8d4815949598fd53da3591ac3dce2f", "user": {"login": "colesbury", "id": 655866, "node_id": "MDQ6VXNlcjY1NTg2Ng==", "avatar_url": "https://avatars1.githubusercontent.com/u/655866?v=4", "gravatar_id": "", "url": "https://api.github.com/users/colesbury", "html_url": "https://github.com/colesbury", "followers_url": "https://api.github.com/users/colesbury/followers", "following_url": "https://api.github.com/users/colesbury/following{/other_user}", "gists_url": "https://api.github.com/users/colesbury/gists{/gist_id}", "starred_url": "https://api.github.com/users/colesbury/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/colesbury/subscriptions", "organizations_url": "https://api.github.com/users/colesbury/orgs", "repos_url": "https://api.github.com/users/colesbury/repos", "events_url": "https://api.github.com/users/colesbury/events{/privacy}", "received_events_url": "https://api.github.com/users/colesbury/received_events", "type": "User", "site_admin": false}, "body": "And this should just be:\r\n\r\n```\r\nTHCTensor_(freeCopyTo)(state, r, r_);\r\n```", "created_at": "2018-03-08T20:42:27Z", "updated_at": "2018-11-23T15:40:31Z", "html_url": "https://github.com/pytorch/pytorch/pull/5600#discussion_r173284425", "pull_request_url": "https://api.github.com/repos/pytorch/pytorch/pulls/5600", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/173284425"}, "html": {"href": "https://github.com/pytorch/pytorch/pull/5600#discussion_r173284425"}, "pull_request": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/5600"}}, "body_html": "<p>And this should just be:</p>\n<pre><code>THCTensor_(freeCopyTo)(state, r, r_);\n</code></pre>", "body_text": "And this should just be:\nTHCTensor_(freeCopyTo)(state, r, r_);"}