{"url": "https://api.github.com/repos/pytorch/pytorch/issues/13752", "repository_url": "https://api.github.com/repos/pytorch/pytorch", "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/13752/labels{/name}", "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/13752/comments", "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/13752/events", "html_url": "https://github.com/pytorch/pytorch/pull/13752", "id": 378949947, "node_id": "MDExOlB1bGxSZXF1ZXN0MjI5NTM0MTU2", "number": 13752, "title": "Add ability to annotate jit types inside function", "user": {"login": "zdevito", "id": 370202, "node_id": "MDQ6VXNlcjM3MDIwMg==", "avatar_url": "https://avatars0.githubusercontent.com/u/370202?v=4", "gravatar_id": "", "url": "https://api.github.com/users/zdevito", "html_url": "https://github.com/zdevito", "followers_url": "https://api.github.com/users/zdevito/followers", "following_url": "https://api.github.com/users/zdevito/following{/other_user}", "gists_url": "https://api.github.com/users/zdevito/gists{/gist_id}", "starred_url": "https://api.github.com/users/zdevito/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/zdevito/subscriptions", "organizations_url": "https://api.github.com/users/zdevito/orgs", "repos_url": "https://api.github.com/users/zdevito/repos", "events_url": "https://api.github.com/users/zdevito/events{/privacy}", "received_events_url": "https://api.github.com/users/zdevito/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 679953983, "node_id": "MDU6TGFiZWw2Nzk5NTM5ODM=", "url": "https://api.github.com/repos/pytorch/pytorch/labels/jit", "name": "jit", "color": "c5def5", "default": false}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2018-11-08T22:48:51Z", "updated_at": "2018-11-23T15:54:34Z", "closed_at": "2018-11-09T04:26:15Z", "author_association": "CONTRIBUTOR", "pull_request": {"url": "https://api.github.com/repos/pytorch/pytorch/pulls/13752", "html_url": "https://github.com/pytorch/pytorch/pull/13752", "diff_url": "https://github.com/pytorch/pytorch/pull/13752.diff", "patch_url": "https://github.com/pytorch/pytorch/pull/13752.patch"}, "body_html": "<p>This adds torch.jit.annotate for annotating the type of an intermediate.<br>\nThis is Py2/3 compatible, e.g.:</p>\n<pre><code>from torch.jit import annotate\nfrom typing import List\n\n@torch.jit.script\ndef foo():\n  a = annotate(List[int], [])\n</code></pre>\n<p>This is needed to output valid python programs from our IR. It removes<br>\nthe need for the empty list constructors.</p>\n<p>A future patch can add support to the C++ parser and Python 3,<br>\nvia desugaring:</p>\n<pre><code>a : int = b\na = anntoate(int, b)\n</code></pre>\n<p>But this functionality is not required for serialization so is not added in this patch.</p>", "body_text": "This adds torch.jit.annotate for annotating the type of an intermediate.\nThis is Py2/3 compatible, e.g.:\nfrom torch.jit import annotate\nfrom typing import List\n\n@torch.jit.script\ndef foo():\n  a = annotate(List[int], [])\n\nThis is needed to output valid python programs from our IR. It removes\nthe need for the empty list constructors.\nA future patch can add support to the C++ parser and Python 3,\nvia desugaring:\na : int = b\na = anntoate(int, b)\n\nBut this functionality is not required for serialization so is not added in this patch.", "body": "This adds torch.jit.annotate for annotating the type of an intermediate.\r\nThis is Py2/3 compatible, e.g.:\r\n\r\n```\r\nfrom torch.jit import annotate\r\nfrom typing import List\r\n\r\n@torch.jit.script\r\ndef foo():\r\n  a = annotate(List[int], [])\r\n```\r\n\r\nThis is needed to output valid python programs from our IR. It removes\r\nthe need for the empty list constructors.\r\n\r\nA future patch can add support to the C++ parser and Python 3,\r\nvia desugaring:\r\n\r\n```\r\na : int = b\r\na = anntoate(int, b)\r\n```\r\n\r\nBut this functionality is not required for serialization so is not added in this patch."}