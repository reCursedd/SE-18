{"url": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/159965404", "pull_request_review_id": 86999548, "id": 159965404, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE1OTk2NTQwNA==", "diff_hunk": "@@ -0,0 +1,56 @@\n+#pragma once\n+\n+#include \"torch/csrc/utils/functional.h\"\n+#include \"torch/csrc/assertions.h\"\n+\n+#include <ATen/ATen.h>\n+#include <utility>\n+\n+namespace torch { namespace utils {\n+\n+inline at::Tensor flatten_dense_tensors(const at::TensorList& tensors) {\n+  static auto flatten = [](const at::Tensor &t) { return t.contiguous().view({-1}); };\n+  if (tensors.size() == 1)\n+    return flatten(tensors[0]);\n+  return at::cat(fmap(tensors, flatten));\n+}\n+\n+inline std::vector<at::Tensor> unflatten_dense_tensors(const at::Tensor& flat, const at::TensorList& tensors) {\n+  std::vector<at::Tensor> outputs;\n+  outputs.reserve(tensors.size());\n+  std::size_t offset = 0;\n+  for (const auto & tensor : tensors) {\n+    auto numel = tensor.numel();\n+    outputs.push_back(flat.narrow(0, offset, numel).view(tensor.sizes()));\n+    offset += numel;\n+  }\n+  return outputs;\n+}\n+\n+\n+struct TensorGroup {\n+  std::vector<at::Tensor> tensors;\n+  std::size_t size = 0;\n+\n+  at::Type& type() {\n+    TORCH_ASSERT(!tensors.empty());\n+    return tensors[0].type();\n+  }\n+\n+  void clear() {", "path": "torch/csrc/utils/tensor_flatten.h", "position": null, "original_position": 40, "commit_id": "a297a5469f60513dcb937ad0a0826208448ad1dd", "original_commit_id": "1f392e8c78e427442cb37da78ba221ad2e2b830c", "user": {"login": "colesbury", "id": 655866, "node_id": "MDQ6VXNlcjY1NTg2Ng==", "avatar_url": "https://avatars1.githubusercontent.com/u/655866?v=4", "gravatar_id": "", "url": "https://api.github.com/users/colesbury", "html_url": "https://github.com/colesbury", "followers_url": "https://api.github.com/users/colesbury/followers", "following_url": "https://api.github.com/users/colesbury/following{/other_user}", "gists_url": "https://api.github.com/users/colesbury/gists{/gist_id}", "starred_url": "https://api.github.com/users/colesbury/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/colesbury/subscriptions", "organizations_url": "https://api.github.com/users/colesbury/orgs", "repos_url": "https://api.github.com/users/colesbury/repos", "events_url": "https://api.github.com/users/colesbury/events{/privacy}", "received_events_url": "https://api.github.com/users/colesbury/received_events", "type": "User", "site_admin": false}, "body": "Is this called anywhere? I didn't see anything.", "created_at": "2018-01-05T19:53:16Z", "updated_at": "2018-11-23T15:37:52Z", "html_url": "https://github.com/pytorch/pytorch/pull/4443#discussion_r159965404", "pull_request_url": "https://api.github.com/repos/pytorch/pytorch/pulls/4443", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/159965404"}, "html": {"href": "https://github.com/pytorch/pytorch/pull/4443#discussion_r159965404"}, "pull_request": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/4443"}}, "body_html": "<p>Is this called anywhere? I didn't see anything.</p>", "body_text": "Is this called anywhere? I didn't see anything."}