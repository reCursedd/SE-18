{"url": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/159971104", "pull_request_review_id": 87013589, "id": 159971104, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE1OTk3MTEwNA==", "diff_hunk": "@@ -0,0 +1,56 @@\n+#pragma once\n+\n+#include \"torch/csrc/utils/functional.h\"\n+#include \"torch/csrc/assertions.h\"\n+\n+#include <ATen/ATen.h>\n+#include <utility>\n+\n+namespace torch { namespace utils {\n+\n+inline at::Tensor flatten_dense_tensors(const at::TensorList& tensors) {\n+  static auto flatten = [](const at::Tensor &t) { return t.contiguous().view({-1}); };\n+  if (tensors.size() == 1)\n+    return flatten(tensors[0]);\n+  return at::cat(fmap(tensors, flatten));\n+}\n+\n+inline std::vector<at::Tensor> unflatten_dense_tensors(const at::Tensor& flat, const at::TensorList& tensors) {\n+  std::vector<at::Tensor> outputs;\n+  outputs.reserve(tensors.size());\n+  std::size_t offset = 0;\n+  for (const auto & tensor : tensors) {\n+    auto numel = tensor.numel();\n+    outputs.push_back(flat.narrow(0, offset, numel).view(tensor.sizes()));\n+    offset += numel;\n+  }\n+  return outputs;\n+}\n+\n+\n+struct TensorGroup {\n+  std::vector<at::Tensor> tensors;\n+  std::size_t size = 0;\n+\n+  at::Type& type() {\n+    TORCH_ASSERT(!tensors.empty());\n+    return tensors[0].type();\n+  }\n+\n+  void clear() {", "path": "torch/csrc/utils/tensor_flatten.h", "position": null, "original_position": 40, "commit_id": "a297a5469f60513dcb937ad0a0826208448ad1dd", "original_commit_id": "1f392e8c78e427442cb37da78ba221ad2e2b830c", "user": {"login": "apaszke", "id": 4583066, "node_id": "MDQ6VXNlcjQ1ODMwNjY=", "avatar_url": "https://avatars3.githubusercontent.com/u/4583066?v=4", "gravatar_id": "", "url": "https://api.github.com/users/apaszke", "html_url": "https://github.com/apaszke", "followers_url": "https://api.github.com/users/apaszke/followers", "following_url": "https://api.github.com/users/apaszke/following{/other_user}", "gists_url": "https://api.github.com/users/apaszke/gists{/gist_id}", "starred_url": "https://api.github.com/users/apaszke/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/apaszke/subscriptions", "organizations_url": "https://api.github.com/users/apaszke/orgs", "repos_url": "https://api.github.com/users/apaszke/repos", "events_url": "https://api.github.com/users/apaszke/events{/privacy}", "received_events_url": "https://api.github.com/users/apaszke/received_events", "type": "User", "site_admin": false}, "body": "It was used in the implementation with a generator (it also cached allocations for groups). I'll remove it", "created_at": "2018-01-05T20:21:16Z", "updated_at": "2018-11-23T15:37:52Z", "html_url": "https://github.com/pytorch/pytorch/pull/4443#discussion_r159971104", "pull_request_url": "https://api.github.com/repos/pytorch/pytorch/pulls/4443", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/159971104"}, "html": {"href": "https://github.com/pytorch/pytorch/pull/4443#discussion_r159971104"}, "pull_request": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/4443"}}, "body_html": "<p>It was used in the implementation with a generator (it also cached allocations for groups). I'll remove it</p>", "body_text": "It was used in the implementation with a generator (it also cached allocations for groups). I'll remove it", "in_reply_to_id": 159965404}