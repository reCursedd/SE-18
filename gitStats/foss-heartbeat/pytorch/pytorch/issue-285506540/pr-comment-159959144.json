{"url": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/159959144", "pull_request_review_id": 86999548, "id": 159959144, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE1OTk1OTE0NA==", "diff_hunk": "@@ -25,9 +25,17 @@ Tensor & Type::copy_(Tensor & self, const Tensor & src, bool async) const {\n \n Tensor Type::copy(const Tensor & src, bool async) const {\n   AT_ASSERT(src.defined(), \"attempt to copy an undefined tensor\");\n-  Tensor r = this->tensor(src.sizes());\n-  r.copy_(src, async);\n-  return r;\n+  if (is_sparse()) {\n+    auto indices = src._indices();\n+    auto values = src._values();\n+    auto indices_copy = indices.type().copy(indices, async);\n+    auto values_copy = values.type().copy(values, async);\n+    return sparse_coo_tensor(indices_copy, values_copy, src.sizes());", "path": "aten/src/ATen/templates/Type.cpp", "position": null, "original_position": 12, "commit_id": "a297a5469f60513dcb937ad0a0826208448ad1dd", "original_commit_id": "1f392e8c78e427442cb37da78ba221ad2e2b830c", "user": {"login": "colesbury", "id": 655866, "node_id": "MDQ6VXNlcjY1NTg2Ng==", "avatar_url": "https://avatars1.githubusercontent.com/u/655866?v=4", "gravatar_id": "", "url": "https://api.github.com/users/colesbury", "html_url": "https://github.com/colesbury", "followers_url": "https://api.github.com/users/colesbury/followers", "following_url": "https://api.github.com/users/colesbury/following{/other_user}", "gists_url": "https://api.github.com/users/colesbury/gists{/gist_id}", "starred_url": "https://api.github.com/users/colesbury/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/colesbury/subscriptions", "organizations_url": "https://api.github.com/users/colesbury/orgs", "repos_url": "https://api.github.com/users/colesbury/repos", "events_url": "https://api.github.com/users/colesbury/events{/privacy}", "received_events_url": "https://api.github.com/users/colesbury/received_events", "type": "User", "site_admin": false}, "body": "This seems strange to me, in that it will only work for sparse inputs. Copying should works between different types.\r\n\r\nWhat part of the original code didn't work? The tensor construction or the copy_?", "created_at": "2018-01-05T19:23:47Z", "updated_at": "2018-11-23T15:37:52Z", "html_url": "https://github.com/pytorch/pytorch/pull/4443#discussion_r159959144", "pull_request_url": "https://api.github.com/repos/pytorch/pytorch/pulls/4443", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/159959144"}, "html": {"href": "https://github.com/pytorch/pytorch/pull/4443#discussion_r159959144"}, "pull_request": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/4443"}}, "body_html": "<p>This seems strange to me, in that it will only work for sparse inputs. Copying should works between different types.</p>\n<p>What part of the original code didn't work? The tensor construction or the copy_?</p>", "body_text": "This seems strange to me, in that it will only work for sparse inputs. Copying should works between different types.\nWhat part of the original code didn't work? The tensor construction or the copy_?"}