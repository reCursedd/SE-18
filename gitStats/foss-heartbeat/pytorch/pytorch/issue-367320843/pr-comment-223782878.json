{"url": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/223782878", "pull_request_review_id": 162994554, "id": 223782878, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIyMzc4Mjg3OA==", "diff_hunk": "@@ -722,3 +723,36 @@ def norm(input, p=\"fro\", dim=None, keepdim=False, out=None):\n         if out is None:\n             return torch._C._VariableFunctions.norm(input, p, dim, keepdim=keepdim)\n     return torch._C._VariableFunctions.norm(input, p, dim, keepdim=keepdim, out=out)\n+\n+\n+def chain_matmul(*matrices):\n+    r\"\"\"Returns the matrix product of the :math:`N` 2-D tensors. This product is efficiently computed\n+    using the matrix chain order algorithm which selects the order in which incurs the lowest cost in terms\n+    of arithmetic operations (`[CLRS]`_). Note that since is a function to compute the product, :math:`N`\n+    needs to be greater than or equal to 2; if equal to 2 then a trivial matrix-matrix product is returned.", "path": "torch/functional.py", "position": 18, "original_position": 18, "commit_id": "c601d439cfdbe088e589b2a4ea9bed94e27bf7f8", "original_commit_id": "08489ad04fd75ffd870306b92e146fdd276ea80f", "user": {"login": "SsnL", "id": 5674597, "node_id": "MDQ6VXNlcjU2NzQ1OTc=", "avatar_url": "https://avatars2.githubusercontent.com/u/5674597?v=4", "gravatar_id": "", "url": "https://api.github.com/users/SsnL", "html_url": "https://github.com/SsnL", "followers_url": "https://api.github.com/users/SsnL/followers", "following_url": "https://api.github.com/users/SsnL/following{/other_user}", "gists_url": "https://api.github.com/users/SsnL/gists{/gist_id}", "starred_url": "https://api.github.com/users/SsnL/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/SsnL/subscriptions", "organizations_url": "https://api.github.com/users/SsnL/orgs", "repos_url": "https://api.github.com/users/SsnL/repos", "events_url": "https://api.github.com/users/SsnL/events{/privacy}", "received_events_url": "https://api.github.com/users/SsnL/received_events", "type": "User", "site_admin": false}, "body": "Oh if you are removing the check below, I think it's fine as-is. I was just confused by that check.\r\n\r\nHowever, maybe reasonable to make `chain_matmul(A)` just return `A`?", "created_at": "2018-10-09T16:56:52Z", "updated_at": "2018-11-23T15:52:42Z", "html_url": "https://github.com/pytorch/pytorch/pull/12380#discussion_r223782878", "pull_request_url": "https://api.github.com/repos/pytorch/pytorch/pulls/12380", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/223782878"}, "html": {"href": "https://github.com/pytorch/pytorch/pull/12380#discussion_r223782878"}, "pull_request": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/12380"}}, "body_html": "<p>Oh if you are removing the check below, I think it's fine as-is. I was just confused by that check.</p>\n<p>However, maybe reasonable to make <code>chain_matmul(A)</code> just return <code>A</code>?</p>", "body_text": "Oh if you are removing the check below, I think it's fine as-is. I was just confused by that check.\nHowever, maybe reasonable to make chain_matmul(A) just return A?", "in_reply_to_id": 223775612}