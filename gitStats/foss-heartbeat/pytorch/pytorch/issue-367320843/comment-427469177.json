{"url": "https://api.github.com/repos/pytorch/pytorch/issues/comments/427469177", "html_url": "https://github.com/pytorch/pytorch/pull/12380#issuecomment-427469177", "issue_url": "https://api.github.com/repos/pytorch/pytorch/issues/12380", "id": 427469177, "node_id": "MDEyOklzc3VlQ29tbWVudDQyNzQ2OTE3Nw==", "user": {"login": "vishwakftw", "id": 23639302, "node_id": "MDQ6VXNlcjIzNjM5MzAy", "avatar_url": "https://avatars2.githubusercontent.com/u/23639302?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vishwakftw", "html_url": "https://github.com/vishwakftw", "followers_url": "https://api.github.com/users/vishwakftw/followers", "following_url": "https://api.github.com/users/vishwakftw/following{/other_user}", "gists_url": "https://api.github.com/users/vishwakftw/gists{/gist_id}", "starred_url": "https://api.github.com/users/vishwakftw/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vishwakftw/subscriptions", "organizations_url": "https://api.github.com/users/vishwakftw/orgs", "repos_url": "https://api.github.com/users/vishwakftw/repos", "events_url": "https://api.github.com/users/vishwakftw/events{/privacy}", "received_events_url": "https://api.github.com/users/vishwakftw/received_events", "type": "User", "site_admin": false}, "created_at": "2018-10-05T19:07:22Z", "updated_at": "2018-10-05T19:07:22Z", "author_association": "CONTRIBUTOR", "body_html": "<p>One benchmark on the CPU (taken out of an exercise in CLRS):</p>\n<pre><code>In [14]: a1 = torch.randn(30, 35)\n\nIn [15]: a2 = torch.randn(35, 15)\n\nIn [16]: a3 = torch.randn(15, 5)\n\nIn [17]: a4 = torch.randn(5, 10)\n\nIn [18]: a5 = torch.randn(10, 20)\n\nIn [19]: a6 = torch.randn(20, 25)\n\nIn [20]: %%timeit\n    ...: torch.einsum('pq,qr,rs,st,tu,uv-&gt;pv',[a1,a2,a3,a4,a5,a6])\n    ...: \n262 \u00b5s \u00b1 4.29 \u00b5s per loop (mean \u00b1 std. dev. of 7 runs, 1000 loops each)\n\nIn [21]: %%timeit\n    ...: torch.multi_mm(a1, a2, a3, a4, a5, a6)\n    ...: \n23.6 \u00b5s \u00b1 225 ns per loop (mean \u00b1 std. dev. of 7 runs, 10000 loops each)\n</code></pre>", "body_text": "One benchmark on the CPU (taken out of an exercise in CLRS):\nIn [14]: a1 = torch.randn(30, 35)\n\nIn [15]: a2 = torch.randn(35, 15)\n\nIn [16]: a3 = torch.randn(15, 5)\n\nIn [17]: a4 = torch.randn(5, 10)\n\nIn [18]: a5 = torch.randn(10, 20)\n\nIn [19]: a6 = torch.randn(20, 25)\n\nIn [20]: %%timeit\n    ...: torch.einsum('pq,qr,rs,st,tu,uv->pv',[a1,a2,a3,a4,a5,a6])\n    ...: \n262 \u00b5s \u00b1 4.29 \u00b5s per loop (mean \u00b1 std. dev. of 7 runs, 1000 loops each)\n\nIn [21]: %%timeit\n    ...: torch.multi_mm(a1, a2, a3, a4, a5, a6)\n    ...: \n23.6 \u00b5s \u00b1 225 ns per loop (mean \u00b1 std. dev. of 7 runs, 10000 loops each)", "body": "One benchmark on the CPU (taken out of an exercise in CLRS):\r\n```\r\nIn [14]: a1 = torch.randn(30, 35)\r\n\r\nIn [15]: a2 = torch.randn(35, 15)\r\n\r\nIn [16]: a3 = torch.randn(15, 5)\r\n\r\nIn [17]: a4 = torch.randn(5, 10)\r\n\r\nIn [18]: a5 = torch.randn(10, 20)\r\n\r\nIn [19]: a6 = torch.randn(20, 25)\r\n\r\nIn [20]: %%timeit\r\n    ...: torch.einsum('pq,qr,rs,st,tu,uv->pv',[a1,a2,a3,a4,a5,a6])\r\n    ...: \r\n262 \u00b5s \u00b1 4.29 \u00b5s per loop (mean \u00b1 std. dev. of 7 runs, 1000 loops each)\r\n\r\nIn [21]: %%timeit\r\n    ...: torch.multi_mm(a1, a2, a3, a4, a5, a6)\r\n    ...: \r\n23.6 \u00b5s \u00b1 225 ns per loop (mean \u00b1 std. dev. of 7 runs, 10000 loops each)\r\n```"}