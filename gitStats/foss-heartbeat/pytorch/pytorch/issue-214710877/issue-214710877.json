{"url": "https://api.github.com/repos/pytorch/pytorch/issues/1014", "repository_url": "https://api.github.com/repos/pytorch/pytorch", "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/1014/labels{/name}", "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/1014/comments", "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/1014/events", "html_url": "https://github.com/pytorch/pytorch/issues/1014", "id": 214710877, "node_id": "MDU6SXNzdWUyMTQ3MTA4Nzc=", "number": 1014, "title": "inconsistent behavior of torch.cat() for 1-dimensional variables and tensors", "user": {"login": "scheidan", "id": 3071486, "node_id": "MDQ6VXNlcjMwNzE0ODY=", "avatar_url": "https://avatars3.githubusercontent.com/u/3071486?v=4", "gravatar_id": "", "url": "https://api.github.com/users/scheidan", "html_url": "https://github.com/scheidan", "followers_url": "https://api.github.com/users/scheidan/followers", "following_url": "https://api.github.com/users/scheidan/following{/other_user}", "gists_url": "https://api.github.com/users/scheidan/gists{/gist_id}", "starred_url": "https://api.github.com/users/scheidan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/scheidan/subscriptions", "organizations_url": "https://api.github.com/users/scheidan/orgs", "repos_url": "https://api.github.com/users/scheidan/repos", "events_url": "https://api.github.com/users/scheidan/events{/privacy}", "received_events_url": "https://api.github.com/users/scheidan/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 424131847, "node_id": "MDU6TGFiZWw0MjQxMzE4NDc=", "url": "https://api.github.com/repos/pytorch/pytorch/labels/bug", "name": "bug", "color": "b60205", "default": true}, {"id": 443484135, "node_id": "MDU6TGFiZWw0NDM0ODQxMzU=", "url": "https://api.github.com/repos/pytorch/pytorch/labels/high%20priority", "name": "high priority", "color": "F22613", "default": false}], "state": "closed", "locked": false, "assignee": {"login": "apaszke", "id": 4583066, "node_id": "MDQ6VXNlcjQ1ODMwNjY=", "avatar_url": "https://avatars3.githubusercontent.com/u/4583066?v=4", "gravatar_id": "", "url": "https://api.github.com/users/apaszke", "html_url": "https://github.com/apaszke", "followers_url": "https://api.github.com/users/apaszke/followers", "following_url": "https://api.github.com/users/apaszke/following{/other_user}", "gists_url": "https://api.github.com/users/apaszke/gists{/gist_id}", "starred_url": "https://api.github.com/users/apaszke/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/apaszke/subscriptions", "organizations_url": "https://api.github.com/users/apaszke/orgs", "repos_url": "https://api.github.com/users/apaszke/repos", "events_url": "https://api.github.com/users/apaszke/events{/privacy}", "received_events_url": "https://api.github.com/users/apaszke/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "apaszke", "id": 4583066, "node_id": "MDQ6VXNlcjQ1ODMwNjY=", "avatar_url": "https://avatars3.githubusercontent.com/u/4583066?v=4", "gravatar_id": "", "url": "https://api.github.com/users/apaszke", "html_url": "https://github.com/apaszke", "followers_url": "https://api.github.com/users/apaszke/followers", "following_url": "https://api.github.com/users/apaszke/following{/other_user}", "gists_url": "https://api.github.com/users/apaszke/gists{/gist_id}", "starred_url": "https://api.github.com/users/apaszke/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/apaszke/subscriptions", "organizations_url": "https://api.github.com/users/apaszke/orgs", "repos_url": "https://api.github.com/users/apaszke/repos", "events_url": "https://api.github.com/users/apaszke/events{/privacy}", "received_events_url": "https://api.github.com/users/apaszke/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 1, "created_at": "2017-03-16T13:52:29Z", "updated_at": "2017-03-23T00:07:06Z", "closed_at": "2017-03-23T00:07:06Z", "author_association": "NONE", "body_html": "<p>I think I found an unexpected behavior of <code>torch.cat()</code>. It behaves differently for 1 dimensional variables and tensors:</p>\n<div class=\"highlight highlight-source-python\"><pre>x <span class=\"pl-k\">=</span> torch.rand(<span class=\"pl-c1\">1</span>)\nX <span class=\"pl-k\">=</span> Variable(x)\n\nx.size() <span class=\"pl-k\">==</span> X.size()            <span class=\"pl-c\"><span class=\"pl-c\">#</span> true</span>\n\ntorch.cat((x,x),<span class=\"pl-c1\">0</span>)              <span class=\"pl-c\"><span class=\"pl-c\">#</span> ok</span>\ntorch.cat((x,x),<span class=\"pl-c1\">1</span>)              <span class=\"pl-c\"><span class=\"pl-c\">#</span> ok</span>\n\ntorch.cat((X,X),<span class=\"pl-c1\">0</span>)              <span class=\"pl-c\"><span class=\"pl-c\">#</span> ok</span>\ntorch.cat((X,X),<span class=\"pl-c1\">1</span>)              <span class=\"pl-c\"><span class=\"pl-c\">#</span> -&gt; fails</span></pre></div>\n<p>but everything works for 2 dimensional tensors:</p>\n<div class=\"highlight highlight-source-python\"><pre>y <span class=\"pl-k\">=</span> torch.rand(<span class=\"pl-c1\">2</span>,<span class=\"pl-c1\">1</span>)\nY <span class=\"pl-k\">=</span> Variable(y)\n\ny.size() <span class=\"pl-k\">==</span> Y.size()            <span class=\"pl-c\"><span class=\"pl-c\">#</span> true</span>\n\ntorch.cat((y,y),<span class=\"pl-c1\">0</span>)              <span class=\"pl-c\"><span class=\"pl-c\">#</span> ok</span>\ntorch.cat((y,y),<span class=\"pl-c1\">1</span>)              <span class=\"pl-c\"><span class=\"pl-c\">#</span> ok</span>\n\ntorch.cat((Y,Y),<span class=\"pl-c1\">0</span>)              <span class=\"pl-c\"><span class=\"pl-c\">#</span> ok</span>\ntorch.cat((Y,Y),<span class=\"pl-c1\">1</span>)              <span class=\"pl-c\"><span class=\"pl-c\">#</span> ok</span></pre></div>\n<p>Thanks for all your work!</p>", "body_text": "I think I found an unexpected behavior of torch.cat(). It behaves differently for 1 dimensional variables and tensors:\nx = torch.rand(1)\nX = Variable(x)\n\nx.size() == X.size()            # true\n\ntorch.cat((x,x),0)              # ok\ntorch.cat((x,x),1)              # ok\n\ntorch.cat((X,X),0)              # ok\ntorch.cat((X,X),1)              # -> fails\nbut everything works for 2 dimensional tensors:\ny = torch.rand(2,1)\nY = Variable(y)\n\ny.size() == Y.size()            # true\n\ntorch.cat((y,y),0)              # ok\ntorch.cat((y,y),1)              # ok\n\ntorch.cat((Y,Y),0)              # ok\ntorch.cat((Y,Y),1)              # ok\nThanks for all your work!", "body": "I think I found an unexpected behavior of `torch.cat()`. It behaves differently for 1 dimensional variables and tensors:\r\n```Python\r\nx = torch.rand(1)\r\nX = Variable(x)\r\n\r\nx.size() == X.size()            # true\r\n\r\ntorch.cat((x,x),0)              # ok\r\ntorch.cat((x,x),1)              # ok\r\n\r\ntorch.cat((X,X),0)              # ok\r\ntorch.cat((X,X),1)              # -> fails\r\n```\r\n\r\nbut everything works for 2 dimensional tensors:\r\n```Python\r\ny = torch.rand(2,1)\r\nY = Variable(y)\r\n\r\ny.size() == Y.size()            # true\r\n\r\ntorch.cat((y,y),0)              # ok\r\ntorch.cat((y,y),1)              # ok\r\n\r\ntorch.cat((Y,Y),0)              # ok\r\ntorch.cat((Y,Y),1)              # ok\r\n```\r\n\r\nThanks for all your work!"}