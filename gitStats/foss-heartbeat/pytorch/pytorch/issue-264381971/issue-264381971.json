{"url": "https://api.github.com/repos/pytorch/pytorch/issues/3056", "repository_url": "https://api.github.com/repos/pytorch/pytorch", "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/3056/labels{/name}", "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/3056/comments", "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/3056/events", "html_url": "https://github.com/pytorch/pytorch/pull/3056", "id": 264381971, "node_id": "MDExOlB1bGxSZXF1ZXN0MTQ1ODA1NTYz", "number": 3056, "title": "Add document on how Module.cuda() and optims should work together", "user": {"login": "SsnL", "id": 5674597, "node_id": "MDQ6VXNlcjU2NzQ1OTc=", "avatar_url": "https://avatars2.githubusercontent.com/u/5674597?v=4", "gravatar_id": "", "url": "https://api.github.com/users/SsnL", "html_url": "https://github.com/SsnL", "followers_url": "https://api.github.com/users/SsnL/followers", "following_url": "https://api.github.com/users/SsnL/following{/other_user}", "gists_url": "https://api.github.com/users/SsnL/gists{/gist_id}", "starred_url": "https://api.github.com/users/SsnL/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/SsnL/subscriptions", "organizations_url": "https://api.github.com/users/SsnL/orgs", "repos_url": "https://api.github.com/users/SsnL/repos", "events_url": "https://api.github.com/users/SsnL/events{/privacy}", "received_events_url": "https://api.github.com/users/SsnL/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2017-10-10T21:26:16Z", "updated_at": "2017-10-11T14:10:47Z", "closed_at": "2017-10-11T02:55:24Z", "author_association": "CONTRIBUTOR", "pull_request": {"url": "https://api.github.com/repos/pytorch/pytorch/pulls/3056", "html_url": "https://github.com/pytorch/pytorch/pull/3056", "diff_url": "https://github.com/pytorch/pytorch/pull/3056.diff", "patch_url": "https://github.com/pytorch/pytorch/pull/3056.patch"}, "body_html": "<p>In <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load issue title\" data-id=\"241464151\" data-permission-text=\"Issue title is private\" data-url=\"https://github.com/pytorch/pytorch/issues/2021\" data-hovercard-type=\"issue\" data-hovercard-url=\"/pytorch/pytorch/issues/2021/hovercard\" href=\"https://github.com/pytorch/pytorch/issues/2021\">#2021</a> , many users are facing an error when calling <code>Module.cuda()</code> after constructing an optimizer. The error is expected, because the optimizer is initialized with different parameters with what it sees in <code>.step()</code>. It is difficult to make a better error message for it as well, as it can potentially happen with in any place of an optim that saves parameter-specific tensors in its state dict. As pointed out by <a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=3291951\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/matt-gardner\">@matt-gardner</a> in <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load issue title\" data-id=\"241464151\" data-permission-text=\"Issue title is private\" data-url=\"https://github.com/pytorch/pytorch/issues/2021\" data-hovercard-type=\"issue\" data-hovercard-url=\"/pytorch/pytorch/issues/2021/hovercard\" href=\"https://github.com/pytorch/pytorch/issues/2021\">#2021</a> , better documentation should be helpful.</p>", "body_text": "In #2021 , many users are facing an error when calling Module.cuda() after constructing an optimizer. The error is expected, because the optimizer is initialized with different parameters with what it sees in .step(). It is difficult to make a better error message for it as well, as it can potentially happen with in any place of an optim that saves parameter-specific tensors in its state dict. As pointed out by @matt-gardner in #2021 , better documentation should be helpful.", "body": "In #2021 , many users are facing an error when calling `Module.cuda()` after constructing an optimizer. The error is expected, because the optimizer is initialized with different parameters with what it sees in `.step()`. It is difficult to make a better error message for it as well, as it can potentially happen with in any place of an optim that saves parameter-specific tensors in its state dict. As pointed out by @matt-gardner in #2021 , better documentation should be helpful. "}