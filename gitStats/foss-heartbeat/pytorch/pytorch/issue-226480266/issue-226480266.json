{"url": "https://api.github.com/repos/pytorch/pytorch/issues/1480", "repository_url": "https://api.github.com/repos/pytorch/pytorch", "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/1480/labels{/name}", "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/1480/comments", "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/1480/events", "html_url": "https://github.com/pytorch/pytorch/issues/1480", "id": 226480266, "node_id": "MDU6SXNzdWUyMjY0ODAyNjY=", "number": 1480, "title": "Segfault on .permute() call with identity transform", "user": {"login": "memetb", "id": 9244085, "node_id": "MDQ6VXNlcjkyNDQwODU=", "avatar_url": "https://avatars0.githubusercontent.com/u/9244085?v=4", "gravatar_id": "", "url": "https://api.github.com/users/memetb", "html_url": "https://github.com/memetb", "followers_url": "https://api.github.com/users/memetb/followers", "following_url": "https://api.github.com/users/memetb/following{/other_user}", "gists_url": "https://api.github.com/users/memetb/gists{/gist_id}", "starred_url": "https://api.github.com/users/memetb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/memetb/subscriptions", "organizations_url": "https://api.github.com/users/memetb/orgs", "repos_url": "https://api.github.com/users/memetb/repos", "events_url": "https://api.github.com/users/memetb/events{/privacy}", "received_events_url": "https://api.github.com/users/memetb/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 424131847, "node_id": "MDU6TGFiZWw0MjQxMzE4NDc=", "url": "https://api.github.com/repos/pytorch/pytorch/labels/bug", "name": "bug", "color": "b60205", "default": true}, {"id": 443484135, "node_id": "MDU6TGFiZWw0NDM0ODQxMzU=", "url": "https://api.github.com/repos/pytorch/pytorch/labels/high%20priority", "name": "high priority", "color": "F22613", "default": false}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2017-05-05T05:52:30Z", "updated_at": "2017-05-08T19:33:55Z", "closed_at": "2017-05-08T19:33:55Z", "author_association": "NONE", "body_html": "<div class=\"highlight highlight-source-python\"><pre><span class=\"pl-k\">import</span> torch\n<span class=\"pl-k\">from</span> torch.autograd <span class=\"pl-k\">import</span> Variable\n<span class=\"pl-k\">import</span> torch.nn <span class=\"pl-k\">as</span> nn\n\nconv <span class=\"pl-k\">=</span> nn.Conv1d( <span class=\"pl-c1\">512</span>, <span class=\"pl-c1\">32</span>, <span class=\"pl-c1\">5</span>, <span class=\"pl-v\">padding</span><span class=\"pl-k\">=</span><span class=\"pl-c1\">2</span> )\n\n<span class=\"pl-c\"><span class=\"pl-c\">#</span> this works</span>\n<span class=\"pl-c1\">input</span> <span class=\"pl-k\">=</span> Variable( torch.randn( <span class=\"pl-c1\">120</span>, <span class=\"pl-c1\">512</span> , <span class=\"pl-c1\">1</span> ), <span class=\"pl-v\">volatile</span><span class=\"pl-k\">=</span><span class=\"pl-c1\">True</span>)\noutput <span class=\"pl-k\">=</span> conv(<span class=\"pl-c1\">input</span>).permute(<span class=\"pl-c1\">0</span>,<span class=\"pl-c1\">1</span>,<span class=\"pl-c1\">2</span>)\n\n<span class=\"pl-c\"><span class=\"pl-c\">#</span> this segfaults</span>\n<span class=\"pl-c1\">input</span> <span class=\"pl-k\">=</span> Variable( torch.randn( <span class=\"pl-c1\">120</span>, <span class=\"pl-c1\">512</span> , <span class=\"pl-c1\">1</span> ))\noutput <span class=\"pl-k\">=</span> conv(<span class=\"pl-c1\">input</span>).permute(<span class=\"pl-c1\">0</span>,<span class=\"pl-c1\">1</span>,<span class=\"pl-c1\">2</span>) <span class=\"pl-c\"><span class=\"pl-c\">#</span> &lt;- segfault</span></pre></div>\n<p>torch version 0.1.11+27fb875 and 0.1.12_2<br>\nPython 3.6.0 |Anaconda 4.3.1 (64-bit)</p>", "body_text": "import torch\nfrom torch.autograd import Variable\nimport torch.nn as nn\n\nconv = nn.Conv1d( 512, 32, 5, padding=2 )\n\n# this works\ninput = Variable( torch.randn( 120, 512 , 1 ), volatile=True)\noutput = conv(input).permute(0,1,2)\n\n# this segfaults\ninput = Variable( torch.randn( 120, 512 , 1 ))\noutput = conv(input).permute(0,1,2) # <- segfault\ntorch version 0.1.11+27fb875 and 0.1.12_2\nPython 3.6.0 |Anaconda 4.3.1 (64-bit)", "body": "```python\r\nimport torch\r\nfrom torch.autograd import Variable\r\nimport torch.nn as nn\r\n\r\nconv = nn.Conv1d( 512, 32, 5, padding=2 )\r\n\r\n# this works\r\ninput = Variable( torch.randn( 120, 512 , 1 ), volatile=True)\r\noutput = conv(input).permute(0,1,2)\r\n\r\n# this segfaults\r\ninput = Variable( torch.randn( 120, 512 , 1 ))\r\noutput = conv(input).permute(0,1,2) # <- segfault\r\n```\r\n\r\ntorch version 0.1.11+27fb875 and 0.1.12_2\r\nPython 3.6.0 |Anaconda 4.3.1 (64-bit)\r\n"}