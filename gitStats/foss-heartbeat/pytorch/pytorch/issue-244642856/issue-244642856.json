{"url": "https://api.github.com/repos/pytorch/pytorch/issues/2176", "repository_url": "https://api.github.com/repos/pytorch/pytorch", "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/2176/labels{/name}", "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/2176/comments", "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/2176/events", "html_url": "https://github.com/pytorch/pytorch/issues/2176", "id": 244642856, "node_id": "MDU6SXNzdWUyNDQ2NDI4NTY=", "number": 2176, "title": "should weight norm only recompute weights at the beginning and after each call to backward?", "user": {"login": "greaber", "id": 8763901, "node_id": "MDQ6VXNlcjg3NjM5MDE=", "avatar_url": "https://avatars1.githubusercontent.com/u/8763901?v=4", "gravatar_id": "", "url": "https://api.github.com/users/greaber", "html_url": "https://github.com/greaber", "followers_url": "https://api.github.com/users/greaber/followers", "following_url": "https://api.github.com/users/greaber/following{/other_user}", "gists_url": "https://api.github.com/users/greaber/gists{/gist_id}", "starred_url": "https://api.github.com/users/greaber/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/greaber/subscriptions", "organizations_url": "https://api.github.com/users/greaber/orgs", "repos_url": "https://api.github.com/users/greaber/repos", "events_url": "https://api.github.com/users/greaber/events{/privacy}", "received_events_url": "https://api.github.com/users/greaber/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 466131885, "node_id": "MDU6TGFiZWw0NjYxMzE4ODU=", "url": "https://api.github.com/repos/pytorch/pytorch/labels/needs%20discussion", "name": "needs discussion", "color": "cc317c", "default": false}], "state": "open", "locked": false, "assignee": {"login": "colesbury", "id": 655866, "node_id": "MDQ6VXNlcjY1NTg2Ng==", "avatar_url": "https://avatars1.githubusercontent.com/u/655866?v=4", "gravatar_id": "", "url": "https://api.github.com/users/colesbury", "html_url": "https://github.com/colesbury", "followers_url": "https://api.github.com/users/colesbury/followers", "following_url": "https://api.github.com/users/colesbury/following{/other_user}", "gists_url": "https://api.github.com/users/colesbury/gists{/gist_id}", "starred_url": "https://api.github.com/users/colesbury/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/colesbury/subscriptions", "organizations_url": "https://api.github.com/users/colesbury/orgs", "repos_url": "https://api.github.com/users/colesbury/repos", "events_url": "https://api.github.com/users/colesbury/events{/privacy}", "received_events_url": "https://api.github.com/users/colesbury/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "colesbury", "id": 655866, "node_id": "MDQ6VXNlcjY1NTg2Ng==", "avatar_url": "https://avatars1.githubusercontent.com/u/655866?v=4", "gravatar_id": "", "url": "https://api.github.com/users/colesbury", "html_url": "https://github.com/colesbury", "followers_url": "https://api.github.com/users/colesbury/followers", "following_url": "https://api.github.com/users/colesbury/following{/other_user}", "gists_url": "https://api.github.com/users/colesbury/gists{/gist_id}", "starred_url": "https://api.github.com/users/colesbury/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/colesbury/subscriptions", "organizations_url": "https://api.github.com/users/colesbury/orgs", "repos_url": "https://api.github.com/users/colesbury/repos", "events_url": "https://api.github.com/users/colesbury/events{/privacy}", "received_events_url": "https://api.github.com/users/colesbury/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 3, "created_at": "2017-07-21T11:32:18Z", "updated_at": "2017-08-17T16:01:26Z", "closed_at": null, "author_association": "CONTRIBUTOR", "body_html": "<p>I haven't tried the new pytorch implementation of weight norm, but I was having problems applying a similar implementation to RNNs because the weight recomputation with each call to <code>forward</code> was causing me to run out of memory.  The solution seemed to be to only recompute weights after each call to <code>backward</code>.  The version I was having problems with and my fix are both here: <a href=\"https://gist.github.com/rtqichen/b22a9c6bfc4f36e605a7b3ac1ab4122f\">https://gist.github.com/rtqichen/b22a9c6bfc4f36e605a7b3ac1ab4122f</a><br>\n(I should warn that I am not totally sure I didn't do something wrong in my implementation since the results I got from weight norm in my model were much worse than I expected.)  Should the official pytorch implementation of weight norm also recompute weights only after a call to <code>backward</code>?</p>", "body_text": "I haven't tried the new pytorch implementation of weight norm, but I was having problems applying a similar implementation to RNNs because the weight recomputation with each call to forward was causing me to run out of memory.  The solution seemed to be to only recompute weights after each call to backward.  The version I was having problems with and my fix are both here: https://gist.github.com/rtqichen/b22a9c6bfc4f36e605a7b3ac1ab4122f\n(I should warn that I am not totally sure I didn't do something wrong in my implementation since the results I got from weight norm in my model were much worse than I expected.)  Should the official pytorch implementation of weight norm also recompute weights only after a call to backward?", "body": "I haven't tried the new pytorch implementation of weight norm, but I was having problems applying a similar implementation to RNNs because the weight recomputation with each call to `forward` was causing me to run out of memory.  The solution seemed to be to only recompute weights after each call to `backward`.  The version I was having problems with and my fix are both here: https://gist.github.com/rtqichen/b22a9c6bfc4f36e605a7b3ac1ab4122f\r\n(I should warn that I am not totally sure I didn't do something wrong in my implementation since the results I got from weight norm in my model were much worse than I expected.)  Should the official pytorch implementation of weight norm also recompute weights only after a call to `backward`?"}