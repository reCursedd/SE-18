{"url": "https://api.github.com/repos/pytorch/pytorch/issues/comments/424414508", "html_url": "https://github.com/pytorch/pytorch/pull/11719#issuecomment-424414508", "issue_url": "https://api.github.com/repos/pytorch/pytorch/issues/11719", "id": 424414508, "node_id": "MDEyOklzc3VlQ29tbWVudDQyNDQxNDUwOA==", "user": {"login": "ngimel", "id": 15841449, "node_id": "MDQ6VXNlcjE1ODQxNDQ5", "avatar_url": "https://avatars3.githubusercontent.com/u/15841449?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ngimel", "html_url": "https://github.com/ngimel", "followers_url": "https://api.github.com/users/ngimel/followers", "following_url": "https://api.github.com/users/ngimel/following{/other_user}", "gists_url": "https://api.github.com/users/ngimel/gists{/gist_id}", "starred_url": "https://api.github.com/users/ngimel/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ngimel/subscriptions", "organizations_url": "https://api.github.com/users/ngimel/orgs", "repos_url": "https://api.github.com/users/ngimel/repos", "events_url": "https://api.github.com/users/ngimel/events{/privacy}", "received_events_url": "https://api.github.com/users/ngimel/received_events", "type": "User", "site_admin": false}, "created_at": "2018-09-25T16:35:26Z", "updated_at": "2018-09-25T16:35:26Z", "author_association": "CONTRIBUTOR", "body_html": "<p>If derivatives are declared for <code>log_softmax</code> then backward will have to take care of type conversion which is now delegated to autograd, which is not the end of the world, but will make backward more error-prone, especially if at some point some implicit conversions for other types are added.</p>", "body_text": "If derivatives are declared for log_softmax then backward will have to take care of type conversion which is now delegated to autograd, which is not the end of the world, but will make backward more error-prone, especially if at some point some implicit conversions for other types are added.", "body": "If derivatives are declared for `log_softmax` then backward will have to take care of type conversion which is now delegated to autograd, which is not the end of the world, but will make backward more error-prone, especially if at some point some implicit conversions for other types are added. "}