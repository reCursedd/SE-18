{"url": "https://api.github.com/repos/pytorch/pytorch/issues/comments/256156509", "html_url": "https://github.com/pytorch/pytorch/issues/166#issuecomment-256156509", "issue_url": "https://api.github.com/repos/pytorch/pytorch/issues/166", "id": 256156509, "node_id": "MDEyOklzc3VlQ29tbWVudDI1NjE1NjUwOQ==", "user": {"login": "apaszke", "id": 4583066, "node_id": "MDQ6VXNlcjQ1ODMwNjY=", "avatar_url": "https://avatars3.githubusercontent.com/u/4583066?v=4", "gravatar_id": "", "url": "https://api.github.com/users/apaszke", "html_url": "https://github.com/apaszke", "followers_url": "https://api.github.com/users/apaszke/followers", "following_url": "https://api.github.com/users/apaszke/following{/other_user}", "gists_url": "https://api.github.com/users/apaszke/gists{/gist_id}", "starred_url": "https://api.github.com/users/apaszke/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/apaszke/subscriptions", "organizations_url": "https://api.github.com/users/apaszke/orgs", "repos_url": "https://api.github.com/users/apaszke/repos", "events_url": "https://api.github.com/users/apaszke/events{/privacy}", "received_events_url": "https://api.github.com/users/apaszke/received_events", "type": "User", "site_admin": false}, "created_at": "2016-10-25T19:52:05Z", "updated_at": "2016-10-25T19:52:05Z", "author_association": "MEMBER", "body_html": "<p>I guess it depends on what do you call an unnecessary computation. Of course, if you're sure you don't want to detach the Variable it will work, and will prevent computation of its predecessors, however it won't encode the data dependencies properly, which might carry a performance penalty when using lazy evaluation.</p>\n<p>As I said, it's only a problem if the creator had multiple outputs, and you still want to backprop through some of them. We should probably have some function that allows you to \"detach\" the variable without accessing the <code>.data</code>, while still retaining the data dependencies. We'll discuss it today.</p>", "body_text": "I guess it depends on what do you call an unnecessary computation. Of course, if you're sure you don't want to detach the Variable it will work, and will prevent computation of its predecessors, however it won't encode the data dependencies properly, which might carry a performance penalty when using lazy evaluation.\nAs I said, it's only a problem if the creator had multiple outputs, and you still want to backprop through some of them. We should probably have some function that allows you to \"detach\" the variable without accessing the .data, while still retaining the data dependencies. We'll discuss it today.", "body": "I guess it depends on what do you call an unnecessary computation. Of course, if you're sure you don't want to detach the Variable it will work, and will prevent computation of its predecessors, however it won't encode the data dependencies properly, which might carry a performance penalty when using lazy evaluation.\n\nAs I said, it's only a problem if the creator had multiple outputs, and you still want to backprop through some of them. We should probably have some function that allows you to \"detach\" the variable without accessing the `.data`, while still retaining the data dependencies. We'll discuss it today.\n"}