{"url": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/226442292", "pull_request_review_id": 166263779, "id": 226442292, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIyNjQ0MjI5Mg==", "diff_hunk": "@@ -20,6 +20,43 @@ def _addindent(s_, numSpaces):\n     return s\n \n \n+def _check_same_shape(base, new, caller_name):\n+    if not isinstance(base, tuple):\n+        base = (base,)\n+        new = (new,)\n+    if type(base) != type(new):\n+        raise RuntimeError(\"{} returned invalid type {} \"\n+                           \"expected {}\".format(caller_name, type(new).__name__, type(base).__name__))\n+    if not len(base) == len(new):\n+        raise RuntimeError(\"{} return an incorrect number of \"\n+                           \"results {}, expected {}\".format(caller_name, len(new), len(base)))\n+    for arg_index, (base_el, new_el) in enumerate(zip(base, new)):\n+        if type(base_el) != type(new_el):\n+            raise RuntimeError(\"{} returned invalid type for element {}: {}\"\n+                               \", expected {}\".format(caller_name, arg_index, type(new_el).__name__,\n+                                                      type(base_el).__name__))\n+        if torch.is_tensor(base_el) and not base_el.size() == new_el.size():\n+            raise RuntimeError(\"{} returned invalid size for element {}:\"\n+                               \" expected {} got {}\".format(caller_name, arg_index, base_el.size(),\n+                                                            new_el.size()))\n+\n+\n+def _get_prev_function(var):\n+    while not isinstance(var, torch.Tensor):\n+        if isinstance(var, dict):\n+            var = next((v for v in var.values() if isinstance(v, torch.Tensor)))\n+        else:\n+            var = var[0]\n+    return var.grad_fn", "path": "torch/nn/modules/module.py", "position": null, "original_position": 44, "commit_id": "59c5202af559f3be0ca63ebb6b429944e84e52ac", "original_commit_id": "1c2986aae99e46e60154a5008e467970a78e6451", "user": {"login": "apaszke", "id": 4583066, "node_id": "MDQ6VXNlcjQ1ODMwNjY=", "avatar_url": "https://avatars3.githubusercontent.com/u/4583066?v=4", "gravatar_id": "", "url": "https://api.github.com/users/apaszke", "html_url": "https://github.com/apaszke", "followers_url": "https://api.github.com/users/apaszke/followers", "following_url": "https://api.github.com/users/apaszke/following{/other_user}", "gists_url": "https://api.github.com/users/apaszke/gists{/gist_id}", "starred_url": "https://api.github.com/users/apaszke/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/apaszke/subscriptions", "organizations_url": "https://api.github.com/users/apaszke/orgs", "repos_url": "https://api.github.com/users/apaszke/repos", "events_url": "https://api.github.com/users/apaszke/events{/privacy}", "received_events_url": "https://api.github.com/users/apaszke/received_events", "type": "User", "site_admin": false}, "body": "This assumes that it will succeed, but it can actually end up throwing an weird error when you try to `var[0]` sth that doesn't support indexing.", "created_at": "2018-10-18T19:50:35Z", "updated_at": "2018-11-23T15:53:14Z", "html_url": "https://github.com/pytorch/pytorch/pull/12573#discussion_r226442292", "pull_request_url": "https://api.github.com/repos/pytorch/pytorch/pulls/12573", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/226442292"}, "html": {"href": "https://github.com/pytorch/pytorch/pull/12573#discussion_r226442292"}, "pull_request": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/12573"}}, "body_html": "<p>This assumes that it will succeed, but it can actually end up throwing an weird error when you try to <code>var[0]</code> sth that doesn't support indexing.</p>", "body_text": "This assumes that it will succeed, but it can actually end up throwing an weird error when you try to var[0] sth that doesn't support indexing."}