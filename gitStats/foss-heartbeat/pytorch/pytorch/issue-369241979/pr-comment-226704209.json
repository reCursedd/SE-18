{"url": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/226704209", "pull_request_review_id": 166598143, "id": 226704209, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIyNjcwNDIwOQ==", "diff_hunk": "@@ -468,32 +512,59 @@ def _slow_forward(self, *input, **kwargs):\n             tracing_state._traced_module_stack.pop()\n         return result\n \n+    def _validate_backward_hook_args(self, position, args):\n+        for i, element in enumerate(args):\n+            if not torch.is_tensor(element):\n+                raise RuntimeError(\"Backward hooks on nn.Module only works for Modules\"\n+                                   \" that only use Tensors and the {}th {} of {} is of type {}\"\n+                                   \"\".format(i, position, self.__class__.__name__, type(element).__name__))\n+\n+    def _get_backward_hooks(self):\n+        backward_hooks = []\n+        for user_hook in self._backward_hooks.values():\n+            backward_hooks.append(hooks.BackwardHook(self, user_hook))\n+        return backward_hooks\n+\n     def __call__(self, *input, **kwargs):\n+        if len(self._backward_hooks) > 0:\n+            backward_hooks = self._get_backward_hooks()\n+\n+            self._validate_backward_hook_args(\"input\", input)\n+            input = Noop.apply(*input)\n+\n+            noop_fn = _get_prev_function(input)\n+            if noop_fn is not None:\n+                for hook in backward_hooks:\n+                    noop_fn.register_hook(hook.get_input_hook())\n+\n         for hook in self._forward_pre_hooks.values():\n-            hook(self, input)\n+            hook_result = hook(self, input)\n+            if hook_result is not None:\n+                _check_same_shape(input, hook_result, \"forward pre hook '{}'\".format(hook))", "path": "torch/nn/modules/module.py", "position": null, "original_position": 141, "commit_id": "59c5202af559f3be0ca63ebb6b429944e84e52ac", "original_commit_id": "1c2986aae99e46e60154a5008e467970a78e6451", "user": {"login": "albanD", "id": 6359743, "node_id": "MDQ6VXNlcjYzNTk3NDM=", "avatar_url": "https://avatars3.githubusercontent.com/u/6359743?v=4", "gravatar_id": "", "url": "https://api.github.com/users/albanD", "html_url": "https://github.com/albanD", "followers_url": "https://api.github.com/users/albanD/followers", "following_url": "https://api.github.com/users/albanD/following{/other_user}", "gists_url": "https://api.github.com/users/albanD/gists{/gist_id}", "starred_url": "https://api.github.com/users/albanD/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/albanD/subscriptions", "organizations_url": "https://api.github.com/users/albanD/orgs", "repos_url": "https://api.github.com/users/albanD/repos", "events_url": "https://api.github.com/users/albanD/events{/privacy}", "received_events_url": "https://api.github.com/users/albanD/received_events", "type": "User", "site_admin": false}, "body": "I'm happy to drop these.", "created_at": "2018-10-19T16:19:44Z", "updated_at": "2018-11-23T15:53:18Z", "html_url": "https://github.com/pytorch/pytorch/pull/12573#discussion_r226704209", "pull_request_url": "https://api.github.com/repos/pytorch/pytorch/pulls/12573", "author_association": "COLLABORATOR", "_links": {"self": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/226704209"}, "html": {"href": "https://github.com/pytorch/pytorch/pull/12573#discussion_r226704209"}, "pull_request": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/12573"}}, "body_html": "<p>I'm happy to drop these.</p>", "body_text": "I'm happy to drop these.", "in_reply_to_id": 226444552}