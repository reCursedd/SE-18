{"url": "https://api.github.com/repos/pytorch/pytorch/issues/comments/390299530", "html_url": "https://github.com/pytorch/pytorch/issues/6885#issuecomment-390299530", "issue_url": "https://api.github.com/repos/pytorch/pytorch/issues/6885", "id": 390299530, "node_id": "MDEyOklzc3VlQ29tbWVudDM5MDI5OTUzMA==", "user": {"login": "fmassa", "id": 9110200, "node_id": "MDQ6VXNlcjkxMTAyMDA=", "avatar_url": "https://avatars2.githubusercontent.com/u/9110200?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fmassa", "html_url": "https://github.com/fmassa", "followers_url": "https://api.github.com/users/fmassa/followers", "following_url": "https://api.github.com/users/fmassa/following{/other_user}", "gists_url": "https://api.github.com/users/fmassa/gists{/gist_id}", "starred_url": "https://api.github.com/users/fmassa/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fmassa/subscriptions", "organizations_url": "https://api.github.com/users/fmassa/orgs", "repos_url": "https://api.github.com/users/fmassa/repos", "events_url": "https://api.github.com/users/fmassa/events{/privacy}", "received_events_url": "https://api.github.com/users/fmassa/received_events", "type": "User", "site_admin": false}, "created_at": "2018-05-18T18:51:13Z", "updated_at": "2018-05-18T18:51:13Z", "author_association": "MEMBER", "body_html": "<p>This function has already been implemented in <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load issue title\" data-id=\"319051563\" data-permission-text=\"Issue title is private\" data-url=\"https://github.com/pytorch/pytorch/issues/7109\" data-hovercard-type=\"pull_request\" data-hovercard-url=\"/pytorch/pytorch/pull/7109/hovercard\" href=\"https://github.com/pytorch/pytorch/pull/7109\">#7109</a></p>\n<p>Given that we implement <code>__array_wrap__</code> and <code>__wrap_array__</code>, it's totally possible to write the following code in PyTorch</p>\n<div class=\"highlight highlight-source-python\"><pre>a <span class=\"pl-k\">=</span> torch.rand(<span class=\"pl-c1\">4</span>)\nb <span class=\"pl-k\">=</span> np.sin(a)  <span class=\"pl-c\"><span class=\"pl-c\">#</span> returns a torch tensor!</span></pre></div>\n<p>so as long as the underlying operations are respect the <code>__array_wrap__</code> API, I think having the same name as numpy is not a hard-requirement.</p>\n<p>Also I'm closing this issue because it has already been fixed in the aforementioned PR.</p>", "body_text": "This function has already been implemented in #7109\nGiven that we implement __array_wrap__ and __wrap_array__, it's totally possible to write the following code in PyTorch\na = torch.rand(4)\nb = np.sin(a)  # returns a torch tensor!\nso as long as the underlying operations are respect the __array_wrap__ API, I think having the same name as numpy is not a hard-requirement.\nAlso I'm closing this issue because it has already been fixed in the aforementioned PR.", "body": "This function has already been implemented in https://github.com/pytorch/pytorch/pull/7109\r\n\r\nGiven that we implement `__array_wrap__` and `__wrap_array__`, it's totally possible to write the following code in PyTorch\r\n\r\n```python\r\na = torch.rand(4)\r\nb = np.sin(a)  # returns a torch tensor!\r\n```\r\nso as long as the underlying operations are respect the `__array_wrap__` API, I think having the same name as numpy is not a hard-requirement.\r\n\r\nAlso I'm closing this issue because it has already been fixed in the aforementioned PR."}