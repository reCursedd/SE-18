{"url": "https://api.github.com/repos/pytorch/pytorch/issues/comments/321611639", "html_url": "https://github.com/pytorch/pytorch/issues/2363#issuecomment-321611639", "issue_url": "https://api.github.com/repos/pytorch/pytorch/issues/2363", "id": 321611639, "node_id": "MDEyOklzc3VlQ29tbWVudDMyMTYxMTYzOQ==", "user": {"login": "ArEsKay3", "id": 6547143, "node_id": "MDQ6VXNlcjY1NDcxNDM=", "avatar_url": "https://avatars3.githubusercontent.com/u/6547143?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ArEsKay3", "html_url": "https://github.com/ArEsKay3", "followers_url": "https://api.github.com/users/ArEsKay3/followers", "following_url": "https://api.github.com/users/ArEsKay3/following{/other_user}", "gists_url": "https://api.github.com/users/ArEsKay3/gists{/gist_id}", "starred_url": "https://api.github.com/users/ArEsKay3/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ArEsKay3/subscriptions", "organizations_url": "https://api.github.com/users/ArEsKay3/orgs", "repos_url": "https://api.github.com/users/ArEsKay3/repos", "events_url": "https://api.github.com/users/ArEsKay3/events{/privacy}", "received_events_url": "https://api.github.com/users/ArEsKay3/received_events", "type": "User", "site_admin": false}, "created_at": "2017-08-10T16:58:17Z", "updated_at": "2017-08-14T20:57:09Z", "author_association": "CONTRIBUTOR", "body_html": "<p>I'm trying to use the imagenet example as proof of concept. Using the file:// initialization method.</p>\n<p><a href=\"https://github.com/pytorch/examples/blob/master/imagenet/main.py\">main.py</a></p>\n<p>I've only made one change to that file where I force args.distributed to be True (rather than obey the args.world_size &gt; 1). To me it looks like because this code in the discoverWorkers utility function has a vector of length 0 for sockets the config object public_address field never gets set.</p>\n<div class=\"highlight highlight-source-c++\"><pre>std::string <span class=\"pl-en\">discoverWorkers</span>(<span class=\"pl-k\">int</span> listen_socket, rank_type world_size) {\n  <span class=\"pl-c\"><span class=\"pl-c\">//</span> accept connections from workers so they can know our address</span>\n  std::vector&lt;<span class=\"pl-k\">int</span>&gt; <span class=\"pl-c1\">sockets</span>(world_size - <span class=\"pl-c1\">1</span>);\n  <span class=\"pl-k\">for</span> (rank_type i = <span class=\"pl-c1\">0</span>; i &lt; world_size - <span class=\"pl-c1\">1</span>; ++i) {\n    <span class=\"pl-c1\">std::tie</span>(sockets[i], std::ignore) = <span class=\"pl-c1\">accept</span>(listen_socket);\n  }\n\n  std::string public_addr;\n  <span class=\"pl-k\">for</span> (<span class=\"pl-k\">auto</span> socket : sockets) {\n    <span class=\"pl-c1\">sendPeerName</span>(socket);\n    public_addr = <span class=\"pl-c1\">recv_string</span>(socket);\n    <span class=\"pl-en\">::close</span>(socket);\n  }\n  <span class=\"pl-k\">return</span> public_addr;\n}</pre></div>", "body_text": "I'm trying to use the imagenet example as proof of concept. Using the file:// initialization method.\nmain.py\nI've only made one change to that file where I force args.distributed to be True (rather than obey the args.world_size > 1). To me it looks like because this code in the discoverWorkers utility function has a vector of length 0 for sockets the config object public_address field never gets set.\nstd::string discoverWorkers(int listen_socket, rank_type world_size) {\n  // accept connections from workers so they can know our address\n  std::vector<int> sockets(world_size - 1);\n  for (rank_type i = 0; i < world_size - 1; ++i) {\n    std::tie(sockets[i], std::ignore) = accept(listen_socket);\n  }\n\n  std::string public_addr;\n  for (auto socket : sockets) {\n    sendPeerName(socket);\n    public_addr = recv_string(socket);\n    ::close(socket);\n  }\n  return public_addr;\n}", "body": "I'm trying to use the imagenet example as proof of concept. Using the file:// initialization method.\r\n\r\n[main.py](https://github.com/pytorch/examples/blob/master/imagenet/main.py)\r\n\r\nI've only made one change to that file where I force args.distributed to be True (rather than obey the args.world_size > 1). To me it looks like because this code in the discoverWorkers utility function has a vector of length 0 for sockets the config object public_address field never gets set.\r\n\r\n```c++\r\nstd::string discoverWorkers(int listen_socket, rank_type world_size) {\r\n  // accept connections from workers so they can know our address\r\n  std::vector<int> sockets(world_size - 1);\r\n  for (rank_type i = 0; i < world_size - 1; ++i) {\r\n    std::tie(sockets[i], std::ignore) = accept(listen_socket);\r\n  }\r\n\r\n  std::string public_addr;\r\n  for (auto socket : sockets) {\r\n    sendPeerName(socket);\r\n    public_addr = recv_string(socket);\r\n    ::close(socket);\r\n  }\r\n  return public_addr;\r\n}\r\n```"}