{"url": "https://api.github.com/repos/pytorch/pytorch/issues/comments/390612415", "html_url": "https://github.com/pytorch/pytorch/issues/6900#issuecomment-390612415", "issue_url": "https://api.github.com/repos/pytorch/pytorch/issues/6900", "id": 390612415, "node_id": "MDEyOklzc3VlQ29tbWVudDM5MDYxMjQxNQ==", "user": {"login": "aachigorin", "id": 21040224, "node_id": "MDQ6VXNlcjIxMDQwMjI0", "avatar_url": "https://avatars1.githubusercontent.com/u/21040224?v=4", "gravatar_id": "", "url": "https://api.github.com/users/aachigorin", "html_url": "https://github.com/aachigorin", "followers_url": "https://api.github.com/users/aachigorin/followers", "following_url": "https://api.github.com/users/aachigorin/following{/other_user}", "gists_url": "https://api.github.com/users/aachigorin/gists{/gist_id}", "starred_url": "https://api.github.com/users/aachigorin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/aachigorin/subscriptions", "organizations_url": "https://api.github.com/users/aachigorin/orgs", "repos_url": "https://api.github.com/users/aachigorin/repos", "events_url": "https://api.github.com/users/aachigorin/events{/privacy}", "received_events_url": "https://api.github.com/users/aachigorin/received_events", "type": "User", "site_admin": false}, "created_at": "2018-05-21T10:10:36Z", "updated_at": "2018-05-21T10:10:36Z", "author_association": "NONE", "body_html": "<p>Hey, guys.<br>\nI'm having similar issue with exporting bilinear upsample with align_corners=False on '0.5.0a0+ac5d7bd'.</p>\n<p>Here is the minimal example to reproduce:</p>\n<pre><code>import torch\nimport torch.onnx\nfrom torch import nn\nfrom torch.autograd import Variable\nimport torch.nn.functional as F\n\nclass SimpleNet(nn.Module):\n    def __init__(self):\n        super(SimpleNet, self).__init__()\n        \n    def forward(self, x):\n        h1 = x\n        h2 = F.upsample(x, size=h1.size()[-2:], mode='bilinear', align_corners=False)\n        h = torch.cat([h1, h2], dim=1)\n        return h\n\nmodel = SimpleNet()\nx = Variable(torch.randn(1, 3, 10, 10)).cpu()\ntorch_out = torch.onnx._export(model, x, '~/temp/test_bilinear_onnx_export.txt', export_params=True, verbose=True)\nprint('finished onnx export')\n</code></pre>\n<p>which gives me the following error:<br>\n<code>/Users/aachigorin/anaconda/envs/detector_py36_pytorch050/lib/python3.6/site-packages/torch/onnx/symbolic.py:69: UserWarning: ONNX export failed on upsample_bilinear2d because align_corners == True not supported </code></p>\n<p>Full output:</p>\n<pre><code>graph(%0 : Float(1, 3, 10, 10)) {\n  %1 : Dynamic = onnx::Shape(%0), scope: SimpleNet\n  %2 : Dynamic = onnx::Slice[axes=[0], ends=[3], starts=[2]](%1), scope: SimpleNet\n  %3 : Long() = onnx::Squeeze[axes=[0]](%2), scope: SimpleNet\n  %4 : Dynamic = onnx::Shape(%0), scope: SimpleNet\n  %5 : Dynamic = onnx::Slice[axes=[0], ends=[4], starts=[3]](%4), scope: SimpleNet\n  %6 : Long() = onnx::Squeeze[axes=[0]](%5), scope: SimpleNet\n  %7 : Dynamic = onnx::Unsqueeze[axes=[0]](%3), scope: SimpleNet\n  %8 : Dynamic = onnx::Unsqueeze[axes=[0]](%6), scope: SimpleNet\n  %9 : Dynamic = onnx::Concat[axis=0](%7, %8), scope: SimpleNet\n  %10 : Long() = onnx::Constant[value={0}](), scope: SimpleNet\n  %11 : Float(1, 3, 10, 10) = aten::upsample_bilinear2d(%0, %9, %10), scope: SimpleNet\n  %12 : Float(1, 6, 10, 10) = onnx::Concat[axis=1](%0, %11), scope: SimpleNet\n  return (%12);\n}\n\n/Users/aachigorin/anaconda/envs/detector_py36_pytorch050/lib/python3.6/site-packages/torch/onnx/symbolic.py:69: UserWarning: ONNX export failed on upsample_bilinear2d because align_corners == True not supported\n  warnings.warn(\"ONNX export failed on \" + op + \" because \" + msg + \" not supported\")\n---------------------------------------------------------------------------\nRuntimeError                              Traceback (most recent call last)\n&lt;ipython-input-13-2b176cabda6d&gt; in &lt;module&gt;()\n     11 model = SimpleNet()\n     12 x = Variable(torch.randn(1, 3, 10, 10)).cpu()\n---&gt; 13 torch_out = torch.onnx._export(model, x, '~/temp/test_bilinear_onnx_export.txt', export_params=True, verbose=True)\n     14 print('finished onnx export')\n\n/Users/aachigorin/anaconda/envs/detector_py36_pytorch050/lib/python3.6/site-packages/torch/onnx/__init__.py in _export(*args, **kwargs)\n     18 def _export(*args, **kwargs):\n     19     from torch.onnx import utils\n---&gt; 20     return utils._export(*args, **kwargs)\n     21 \n     22 \n\n/Users/aachigorin/anaconda/envs/detector_py36_pytorch050/lib/python3.6/site-packages/torch/onnx/utils.py in _export(model, args, f, export_params, verbose, training, input_names, output_names, aten, export_raw_ir, export_type, example_outputs, propagate)\n    205     defer_weight_export = export_type is not ExportTypes.PROTOBUF_FILE\n    206     if export_params:\n--&gt; 207         proto, export_map = graph.export(params, _onnx_opset_version, defer_weight_export, export_raw_ir)\n    208     else:\n    209         proto, export_map = graph.export([], _onnx_opset_version, False, export_raw_ir)\n\nRuntimeError: ONNX export failed: Couldn't export operator aten::upsample_bilinear2d\n\nDefined at:\n/Users/aachigorin/anaconda/envs/detector_py36_pytorch050/lib/python3.6/site-packages/torch/nn/functional.py(1779): upsample\n&lt;ipython-input-13-2b176cabda6d&gt;(7): forward\n/Users/aachigorin/anaconda/envs/detector_py36_pytorch050/lib/python3.6/site-packages/torch/nn/modules/module.py(479): _slow_forward\n/Users/aachigorin/anaconda/envs/detector_py36_pytorch050/lib/python3.6/site-packages/torch/nn/modules/module.py(489): __call__\n/Users/aachigorin/anaconda/envs/detector_py36_pytorch050/lib/python3.6/site-packages/torch/jit/__init__.py(288): forward\n/Users/aachigorin/anaconda/envs/detector_py36_pytorch050/lib/python3.6/site-packages/torch/nn/modules/module.py(491): __call__\n/Users/aachigorin/anaconda/envs/detector_py36_pytorch050/lib/python3.6/site-packages/torch/jit/__init__.py(255): get_trace_graph\n/Users/aachigorin/anaconda/envs/detector_py36_pytorch050/lib/python3.6/site-packages/torch/onnx/utils.py(137): _trace_and_get_graph_from_model\n/Users/aachigorin/anaconda/envs/detector_py36_pytorch050/lib/python3.6/site-packages/torch/onnx/utils.py(167): _model_to_graph\n/Users/aachigorin/anaconda/envs/detector_py36_pytorch050/lib/python3.6/site-packages/torch/onnx/utils.py(201): _export\n/Users/aachigorin/anaconda/envs/detector_py36_pytorch050/lib/python3.6/site-packages/torch/onnx/__init__.py(20): _export\n&lt;ipython-input-13-2b176cabda6d&gt;(13): &lt;module&gt;\n/Users/aachigorin/anaconda/envs/detector_py36_pytorch050/lib/python3.6/site-packages/IPython/core/interactiveshell.py(2881): run_code\n/Users/aachigorin/anaconda/envs/detector_py36_pytorch050/lib/python3.6/site-packages/IPython/core/interactiveshell.py(2821): run_ast_nodes\n/Users/aachigorin/anaconda/envs/detector_py36_pytorch050/lib/python3.6/site-packages/IPython/core/interactiveshell.py(2717): run_cell\n/Users/aachigorin/anaconda/envs/detector_py36_pytorch050/lib/python3.6/site-packages/ipykernel/zmqshell.py(533): run_cell\n/Users/aachigorin/anaconda/envs/detector_py36_pytorch050/lib/python3.6/site-packages/ipykernel/ipkernel.py(196): do_execute\n/Users/aachigorin/anaconda/envs/detector_py36_pytorch050/lib/python3.6/site-packages/ipykernel/kernelbase.py(399): execute_request\n/Users/aachigorin/anaconda/envs/detector_py36_pytorch050/lib/python3.6/site-packages/ipykernel/kernelbase.py(235): dispatch_shell\n/Users/aachigorin/anaconda/envs/detector_py36_pytorch050/lib/python3.6/site-packages/ipykernel/kernelbase.py(283): dispatcher\n/Users/aachigorin/anaconda/envs/detector_py36_pytorch050/lib/python3.6/site-packages/tornado/stack_context.py(277): null_wrapper\n/Users/aachigorin/anaconda/envs/detector_py36_pytorch050/lib/python3.6/site-packages/zmq/eventloop/zmqstream.py(414): _run_callback\n/Users/aachigorin/anaconda/envs/detector_py36_pytorch050/lib/python3.6/site-packages/zmq/eventloop/zmqstream.py(472): _handle_recv\n/Users/aachigorin/anaconda/envs/detector_py36_pytorch050/lib/python3.6/site-packages/zmq/eventloop/zmqstream.py(440): _handle_events\n/Users/aachigorin/anaconda/envs/detector_py36_pytorch050/lib/python3.6/site-packages/tornado/stack_context.py(277): null_wrapper\n/Users/aachigorin/anaconda/envs/detector_py36_pytorch050/lib/python3.6/site-packages/tornado/ioloop.py(888): start\n/Users/aachigorin/anaconda/envs/detector_py36_pytorch050/lib/python3.6/site-packages/zmq/eventloop/ioloop.py(177): start\n/Users/aachigorin/anaconda/envs/detector_py36_pytorch050/lib/python3.6/site-packages/ipykernel/kernelapp.py(477): start\n/Users/aachigorin/anaconda/envs/detector_py36_pytorch050/lib/python3.6/site-packages/traitlets/config/application.py(658): launch_instance\n/Users/aachigorin/anaconda/envs/detector_py36_pytorch050/lib/python3.6/site-packages/ipykernel_launcher.py(16): &lt;module&gt;\n/Users/aachigorin/anaconda/envs/detector_py36_pytorch050/lib/python3.6/runpy.py(85): _run_code\n/Users/aachigorin/anaconda/envs/detector_py36_pytorch050/lib/python3.6/runpy.py(193): _run_module_as_main\n\n\nGraph we tried to export:\ngraph(%0 : Float(1, 3, 10, 10)) {\n  %1 : Dynamic = onnx::Shape(%0), scope: SimpleNet\n  %2 : Dynamic = onnx::Slice[axes=[0], ends=[3], starts=[2]](%1), scope: SimpleNet\n  %3 : Long() = onnx::Squeeze[axes=[0]](%2), scope: SimpleNet\n  %4 : Dynamic = onnx::Shape(%0), scope: SimpleNet\n  %5 : Dynamic = onnx::Slice[axes=[0], ends=[4], starts=[3]](%4), scope: SimpleNet\n  %6 : Long() = onnx::Squeeze[axes=[0]](%5), scope: SimpleNet\n  %7 : Dynamic = onnx::Unsqueeze[axes=[0]](%3), scope: SimpleNet\n  %8 : Dynamic = onnx::Unsqueeze[axes=[0]](%6), scope: SimpleNet\n  %9 : Dynamic = onnx::Concat[axis=0](%7, %8), scope: SimpleNet\n  %10 : Long() = onnx::Constant[value={0}](), scope: SimpleNet\n  %11 : Float(1, 3, 10, 10) = aten::upsample_bilinear2d(%0, %9, %10), scope: SimpleNet\n  %12 : Float(1, 6, 10, 10) = onnx::Concat[axis=1](%0, %11), scope: SimpleNet\n  return (%12);\n}\n</code></pre>\n<p>Should I create the separate issue for this?</p>", "body_text": "Hey, guys.\nI'm having similar issue with exporting bilinear upsample with align_corners=False on '0.5.0a0+ac5d7bd'.\nHere is the minimal example to reproduce:\nimport torch\nimport torch.onnx\nfrom torch import nn\nfrom torch.autograd import Variable\nimport torch.nn.functional as F\n\nclass SimpleNet(nn.Module):\n    def __init__(self):\n        super(SimpleNet, self).__init__()\n        \n    def forward(self, x):\n        h1 = x\n        h2 = F.upsample(x, size=h1.size()[-2:], mode='bilinear', align_corners=False)\n        h = torch.cat([h1, h2], dim=1)\n        return h\n\nmodel = SimpleNet()\nx = Variable(torch.randn(1, 3, 10, 10)).cpu()\ntorch_out = torch.onnx._export(model, x, '~/temp/test_bilinear_onnx_export.txt', export_params=True, verbose=True)\nprint('finished onnx export')\n\nwhich gives me the following error:\n/Users/aachigorin/anaconda/envs/detector_py36_pytorch050/lib/python3.6/site-packages/torch/onnx/symbolic.py:69: UserWarning: ONNX export failed on upsample_bilinear2d because align_corners == True not supported \nFull output:\ngraph(%0 : Float(1, 3, 10, 10)) {\n  %1 : Dynamic = onnx::Shape(%0), scope: SimpleNet\n  %2 : Dynamic = onnx::Slice[axes=[0], ends=[3], starts=[2]](%1), scope: SimpleNet\n  %3 : Long() = onnx::Squeeze[axes=[0]](%2), scope: SimpleNet\n  %4 : Dynamic = onnx::Shape(%0), scope: SimpleNet\n  %5 : Dynamic = onnx::Slice[axes=[0], ends=[4], starts=[3]](%4), scope: SimpleNet\n  %6 : Long() = onnx::Squeeze[axes=[0]](%5), scope: SimpleNet\n  %7 : Dynamic = onnx::Unsqueeze[axes=[0]](%3), scope: SimpleNet\n  %8 : Dynamic = onnx::Unsqueeze[axes=[0]](%6), scope: SimpleNet\n  %9 : Dynamic = onnx::Concat[axis=0](%7, %8), scope: SimpleNet\n  %10 : Long() = onnx::Constant[value={0}](), scope: SimpleNet\n  %11 : Float(1, 3, 10, 10) = aten::upsample_bilinear2d(%0, %9, %10), scope: SimpleNet\n  %12 : Float(1, 6, 10, 10) = onnx::Concat[axis=1](%0, %11), scope: SimpleNet\n  return (%12);\n}\n\n/Users/aachigorin/anaconda/envs/detector_py36_pytorch050/lib/python3.6/site-packages/torch/onnx/symbolic.py:69: UserWarning: ONNX export failed on upsample_bilinear2d because align_corners == True not supported\n  warnings.warn(\"ONNX export failed on \" + op + \" because \" + msg + \" not supported\")\n---------------------------------------------------------------------------\nRuntimeError                              Traceback (most recent call last)\n<ipython-input-13-2b176cabda6d> in <module>()\n     11 model = SimpleNet()\n     12 x = Variable(torch.randn(1, 3, 10, 10)).cpu()\n---> 13 torch_out = torch.onnx._export(model, x, '~/temp/test_bilinear_onnx_export.txt', export_params=True, verbose=True)\n     14 print('finished onnx export')\n\n/Users/aachigorin/anaconda/envs/detector_py36_pytorch050/lib/python3.6/site-packages/torch/onnx/__init__.py in _export(*args, **kwargs)\n     18 def _export(*args, **kwargs):\n     19     from torch.onnx import utils\n---> 20     return utils._export(*args, **kwargs)\n     21 \n     22 \n\n/Users/aachigorin/anaconda/envs/detector_py36_pytorch050/lib/python3.6/site-packages/torch/onnx/utils.py in _export(model, args, f, export_params, verbose, training, input_names, output_names, aten, export_raw_ir, export_type, example_outputs, propagate)\n    205     defer_weight_export = export_type is not ExportTypes.PROTOBUF_FILE\n    206     if export_params:\n--> 207         proto, export_map = graph.export(params, _onnx_opset_version, defer_weight_export, export_raw_ir)\n    208     else:\n    209         proto, export_map = graph.export([], _onnx_opset_version, False, export_raw_ir)\n\nRuntimeError: ONNX export failed: Couldn't export operator aten::upsample_bilinear2d\n\nDefined at:\n/Users/aachigorin/anaconda/envs/detector_py36_pytorch050/lib/python3.6/site-packages/torch/nn/functional.py(1779): upsample\n<ipython-input-13-2b176cabda6d>(7): forward\n/Users/aachigorin/anaconda/envs/detector_py36_pytorch050/lib/python3.6/site-packages/torch/nn/modules/module.py(479): _slow_forward\n/Users/aachigorin/anaconda/envs/detector_py36_pytorch050/lib/python3.6/site-packages/torch/nn/modules/module.py(489): __call__\n/Users/aachigorin/anaconda/envs/detector_py36_pytorch050/lib/python3.6/site-packages/torch/jit/__init__.py(288): forward\n/Users/aachigorin/anaconda/envs/detector_py36_pytorch050/lib/python3.6/site-packages/torch/nn/modules/module.py(491): __call__\n/Users/aachigorin/anaconda/envs/detector_py36_pytorch050/lib/python3.6/site-packages/torch/jit/__init__.py(255): get_trace_graph\n/Users/aachigorin/anaconda/envs/detector_py36_pytorch050/lib/python3.6/site-packages/torch/onnx/utils.py(137): _trace_and_get_graph_from_model\n/Users/aachigorin/anaconda/envs/detector_py36_pytorch050/lib/python3.6/site-packages/torch/onnx/utils.py(167): _model_to_graph\n/Users/aachigorin/anaconda/envs/detector_py36_pytorch050/lib/python3.6/site-packages/torch/onnx/utils.py(201): _export\n/Users/aachigorin/anaconda/envs/detector_py36_pytorch050/lib/python3.6/site-packages/torch/onnx/__init__.py(20): _export\n<ipython-input-13-2b176cabda6d>(13): <module>\n/Users/aachigorin/anaconda/envs/detector_py36_pytorch050/lib/python3.6/site-packages/IPython/core/interactiveshell.py(2881): run_code\n/Users/aachigorin/anaconda/envs/detector_py36_pytorch050/lib/python3.6/site-packages/IPython/core/interactiveshell.py(2821): run_ast_nodes\n/Users/aachigorin/anaconda/envs/detector_py36_pytorch050/lib/python3.6/site-packages/IPython/core/interactiveshell.py(2717): run_cell\n/Users/aachigorin/anaconda/envs/detector_py36_pytorch050/lib/python3.6/site-packages/ipykernel/zmqshell.py(533): run_cell\n/Users/aachigorin/anaconda/envs/detector_py36_pytorch050/lib/python3.6/site-packages/ipykernel/ipkernel.py(196): do_execute\n/Users/aachigorin/anaconda/envs/detector_py36_pytorch050/lib/python3.6/site-packages/ipykernel/kernelbase.py(399): execute_request\n/Users/aachigorin/anaconda/envs/detector_py36_pytorch050/lib/python3.6/site-packages/ipykernel/kernelbase.py(235): dispatch_shell\n/Users/aachigorin/anaconda/envs/detector_py36_pytorch050/lib/python3.6/site-packages/ipykernel/kernelbase.py(283): dispatcher\n/Users/aachigorin/anaconda/envs/detector_py36_pytorch050/lib/python3.6/site-packages/tornado/stack_context.py(277): null_wrapper\n/Users/aachigorin/anaconda/envs/detector_py36_pytorch050/lib/python3.6/site-packages/zmq/eventloop/zmqstream.py(414): _run_callback\n/Users/aachigorin/anaconda/envs/detector_py36_pytorch050/lib/python3.6/site-packages/zmq/eventloop/zmqstream.py(472): _handle_recv\n/Users/aachigorin/anaconda/envs/detector_py36_pytorch050/lib/python3.6/site-packages/zmq/eventloop/zmqstream.py(440): _handle_events\n/Users/aachigorin/anaconda/envs/detector_py36_pytorch050/lib/python3.6/site-packages/tornado/stack_context.py(277): null_wrapper\n/Users/aachigorin/anaconda/envs/detector_py36_pytorch050/lib/python3.6/site-packages/tornado/ioloop.py(888): start\n/Users/aachigorin/anaconda/envs/detector_py36_pytorch050/lib/python3.6/site-packages/zmq/eventloop/ioloop.py(177): start\n/Users/aachigorin/anaconda/envs/detector_py36_pytorch050/lib/python3.6/site-packages/ipykernel/kernelapp.py(477): start\n/Users/aachigorin/anaconda/envs/detector_py36_pytorch050/lib/python3.6/site-packages/traitlets/config/application.py(658): launch_instance\n/Users/aachigorin/anaconda/envs/detector_py36_pytorch050/lib/python3.6/site-packages/ipykernel_launcher.py(16): <module>\n/Users/aachigorin/anaconda/envs/detector_py36_pytorch050/lib/python3.6/runpy.py(85): _run_code\n/Users/aachigorin/anaconda/envs/detector_py36_pytorch050/lib/python3.6/runpy.py(193): _run_module_as_main\n\n\nGraph we tried to export:\ngraph(%0 : Float(1, 3, 10, 10)) {\n  %1 : Dynamic = onnx::Shape(%0), scope: SimpleNet\n  %2 : Dynamic = onnx::Slice[axes=[0], ends=[3], starts=[2]](%1), scope: SimpleNet\n  %3 : Long() = onnx::Squeeze[axes=[0]](%2), scope: SimpleNet\n  %4 : Dynamic = onnx::Shape(%0), scope: SimpleNet\n  %5 : Dynamic = onnx::Slice[axes=[0], ends=[4], starts=[3]](%4), scope: SimpleNet\n  %6 : Long() = onnx::Squeeze[axes=[0]](%5), scope: SimpleNet\n  %7 : Dynamic = onnx::Unsqueeze[axes=[0]](%3), scope: SimpleNet\n  %8 : Dynamic = onnx::Unsqueeze[axes=[0]](%6), scope: SimpleNet\n  %9 : Dynamic = onnx::Concat[axis=0](%7, %8), scope: SimpleNet\n  %10 : Long() = onnx::Constant[value={0}](), scope: SimpleNet\n  %11 : Float(1, 3, 10, 10) = aten::upsample_bilinear2d(%0, %9, %10), scope: SimpleNet\n  %12 : Float(1, 6, 10, 10) = onnx::Concat[axis=1](%0, %11), scope: SimpleNet\n  return (%12);\n}\n\nShould I create the separate issue for this?", "body": "Hey, guys.\r\nI'm having similar issue with exporting bilinear upsample with align_corners=False on '0.5.0a0+ac5d7bd'.\r\n\r\nHere is the minimal example to reproduce:\r\n```\r\nimport torch\r\nimport torch.onnx\r\nfrom torch import nn\r\nfrom torch.autograd import Variable\r\nimport torch.nn.functional as F\r\n\r\nclass SimpleNet(nn.Module):\r\n    def __init__(self):\r\n        super(SimpleNet, self).__init__()\r\n        \r\n    def forward(self, x):\r\n        h1 = x\r\n        h2 = F.upsample(x, size=h1.size()[-2:], mode='bilinear', align_corners=False)\r\n        h = torch.cat([h1, h2], dim=1)\r\n        return h\r\n\r\nmodel = SimpleNet()\r\nx = Variable(torch.randn(1, 3, 10, 10)).cpu()\r\ntorch_out = torch.onnx._export(model, x, '~/temp/test_bilinear_onnx_export.txt', export_params=True, verbose=True)\r\nprint('finished onnx export')\r\n```\r\n\r\nwhich gives me the following error:\r\n`/Users/aachigorin/anaconda/envs/detector_py36_pytorch050/lib/python3.6/site-packages/torch/onnx/symbolic.py:69: UserWarning: ONNX export failed on upsample_bilinear2d because align_corners == True not supported\r\n`\r\n\r\nFull output:\r\n```\r\ngraph(%0 : Float(1, 3, 10, 10)) {\r\n  %1 : Dynamic = onnx::Shape(%0), scope: SimpleNet\r\n  %2 : Dynamic = onnx::Slice[axes=[0], ends=[3], starts=[2]](%1), scope: SimpleNet\r\n  %3 : Long() = onnx::Squeeze[axes=[0]](%2), scope: SimpleNet\r\n  %4 : Dynamic = onnx::Shape(%0), scope: SimpleNet\r\n  %5 : Dynamic = onnx::Slice[axes=[0], ends=[4], starts=[3]](%4), scope: SimpleNet\r\n  %6 : Long() = onnx::Squeeze[axes=[0]](%5), scope: SimpleNet\r\n  %7 : Dynamic = onnx::Unsqueeze[axes=[0]](%3), scope: SimpleNet\r\n  %8 : Dynamic = onnx::Unsqueeze[axes=[0]](%6), scope: SimpleNet\r\n  %9 : Dynamic = onnx::Concat[axis=0](%7, %8), scope: SimpleNet\r\n  %10 : Long() = onnx::Constant[value={0}](), scope: SimpleNet\r\n  %11 : Float(1, 3, 10, 10) = aten::upsample_bilinear2d(%0, %9, %10), scope: SimpleNet\r\n  %12 : Float(1, 6, 10, 10) = onnx::Concat[axis=1](%0, %11), scope: SimpleNet\r\n  return (%12);\r\n}\r\n\r\n/Users/aachigorin/anaconda/envs/detector_py36_pytorch050/lib/python3.6/site-packages/torch/onnx/symbolic.py:69: UserWarning: ONNX export failed on upsample_bilinear2d because align_corners == True not supported\r\n  warnings.warn(\"ONNX export failed on \" + op + \" because \" + msg + \" not supported\")\r\n---------------------------------------------------------------------------\r\nRuntimeError                              Traceback (most recent call last)\r\n<ipython-input-13-2b176cabda6d> in <module>()\r\n     11 model = SimpleNet()\r\n     12 x = Variable(torch.randn(1, 3, 10, 10)).cpu()\r\n---> 13 torch_out = torch.onnx._export(model, x, '~/temp/test_bilinear_onnx_export.txt', export_params=True, verbose=True)\r\n     14 print('finished onnx export')\r\n\r\n/Users/aachigorin/anaconda/envs/detector_py36_pytorch050/lib/python3.6/site-packages/torch/onnx/__init__.py in _export(*args, **kwargs)\r\n     18 def _export(*args, **kwargs):\r\n     19     from torch.onnx import utils\r\n---> 20     return utils._export(*args, **kwargs)\r\n     21 \r\n     22 \r\n\r\n/Users/aachigorin/anaconda/envs/detector_py36_pytorch050/lib/python3.6/site-packages/torch/onnx/utils.py in _export(model, args, f, export_params, verbose, training, input_names, output_names, aten, export_raw_ir, export_type, example_outputs, propagate)\r\n    205     defer_weight_export = export_type is not ExportTypes.PROTOBUF_FILE\r\n    206     if export_params:\r\n--> 207         proto, export_map = graph.export(params, _onnx_opset_version, defer_weight_export, export_raw_ir)\r\n    208     else:\r\n    209         proto, export_map = graph.export([], _onnx_opset_version, False, export_raw_ir)\r\n\r\nRuntimeError: ONNX export failed: Couldn't export operator aten::upsample_bilinear2d\r\n\r\nDefined at:\r\n/Users/aachigorin/anaconda/envs/detector_py36_pytorch050/lib/python3.6/site-packages/torch/nn/functional.py(1779): upsample\r\n<ipython-input-13-2b176cabda6d>(7): forward\r\n/Users/aachigorin/anaconda/envs/detector_py36_pytorch050/lib/python3.6/site-packages/torch/nn/modules/module.py(479): _slow_forward\r\n/Users/aachigorin/anaconda/envs/detector_py36_pytorch050/lib/python3.6/site-packages/torch/nn/modules/module.py(489): __call__\r\n/Users/aachigorin/anaconda/envs/detector_py36_pytorch050/lib/python3.6/site-packages/torch/jit/__init__.py(288): forward\r\n/Users/aachigorin/anaconda/envs/detector_py36_pytorch050/lib/python3.6/site-packages/torch/nn/modules/module.py(491): __call__\r\n/Users/aachigorin/anaconda/envs/detector_py36_pytorch050/lib/python3.6/site-packages/torch/jit/__init__.py(255): get_trace_graph\r\n/Users/aachigorin/anaconda/envs/detector_py36_pytorch050/lib/python3.6/site-packages/torch/onnx/utils.py(137): _trace_and_get_graph_from_model\r\n/Users/aachigorin/anaconda/envs/detector_py36_pytorch050/lib/python3.6/site-packages/torch/onnx/utils.py(167): _model_to_graph\r\n/Users/aachigorin/anaconda/envs/detector_py36_pytorch050/lib/python3.6/site-packages/torch/onnx/utils.py(201): _export\r\n/Users/aachigorin/anaconda/envs/detector_py36_pytorch050/lib/python3.6/site-packages/torch/onnx/__init__.py(20): _export\r\n<ipython-input-13-2b176cabda6d>(13): <module>\r\n/Users/aachigorin/anaconda/envs/detector_py36_pytorch050/lib/python3.6/site-packages/IPython/core/interactiveshell.py(2881): run_code\r\n/Users/aachigorin/anaconda/envs/detector_py36_pytorch050/lib/python3.6/site-packages/IPython/core/interactiveshell.py(2821): run_ast_nodes\r\n/Users/aachigorin/anaconda/envs/detector_py36_pytorch050/lib/python3.6/site-packages/IPython/core/interactiveshell.py(2717): run_cell\r\n/Users/aachigorin/anaconda/envs/detector_py36_pytorch050/lib/python3.6/site-packages/ipykernel/zmqshell.py(533): run_cell\r\n/Users/aachigorin/anaconda/envs/detector_py36_pytorch050/lib/python3.6/site-packages/ipykernel/ipkernel.py(196): do_execute\r\n/Users/aachigorin/anaconda/envs/detector_py36_pytorch050/lib/python3.6/site-packages/ipykernel/kernelbase.py(399): execute_request\r\n/Users/aachigorin/anaconda/envs/detector_py36_pytorch050/lib/python3.6/site-packages/ipykernel/kernelbase.py(235): dispatch_shell\r\n/Users/aachigorin/anaconda/envs/detector_py36_pytorch050/lib/python3.6/site-packages/ipykernel/kernelbase.py(283): dispatcher\r\n/Users/aachigorin/anaconda/envs/detector_py36_pytorch050/lib/python3.6/site-packages/tornado/stack_context.py(277): null_wrapper\r\n/Users/aachigorin/anaconda/envs/detector_py36_pytorch050/lib/python3.6/site-packages/zmq/eventloop/zmqstream.py(414): _run_callback\r\n/Users/aachigorin/anaconda/envs/detector_py36_pytorch050/lib/python3.6/site-packages/zmq/eventloop/zmqstream.py(472): _handle_recv\r\n/Users/aachigorin/anaconda/envs/detector_py36_pytorch050/lib/python3.6/site-packages/zmq/eventloop/zmqstream.py(440): _handle_events\r\n/Users/aachigorin/anaconda/envs/detector_py36_pytorch050/lib/python3.6/site-packages/tornado/stack_context.py(277): null_wrapper\r\n/Users/aachigorin/anaconda/envs/detector_py36_pytorch050/lib/python3.6/site-packages/tornado/ioloop.py(888): start\r\n/Users/aachigorin/anaconda/envs/detector_py36_pytorch050/lib/python3.6/site-packages/zmq/eventloop/ioloop.py(177): start\r\n/Users/aachigorin/anaconda/envs/detector_py36_pytorch050/lib/python3.6/site-packages/ipykernel/kernelapp.py(477): start\r\n/Users/aachigorin/anaconda/envs/detector_py36_pytorch050/lib/python3.6/site-packages/traitlets/config/application.py(658): launch_instance\r\n/Users/aachigorin/anaconda/envs/detector_py36_pytorch050/lib/python3.6/site-packages/ipykernel_launcher.py(16): <module>\r\n/Users/aachigorin/anaconda/envs/detector_py36_pytorch050/lib/python3.6/runpy.py(85): _run_code\r\n/Users/aachigorin/anaconda/envs/detector_py36_pytorch050/lib/python3.6/runpy.py(193): _run_module_as_main\r\n\r\n\r\nGraph we tried to export:\r\ngraph(%0 : Float(1, 3, 10, 10)) {\r\n  %1 : Dynamic = onnx::Shape(%0), scope: SimpleNet\r\n  %2 : Dynamic = onnx::Slice[axes=[0], ends=[3], starts=[2]](%1), scope: SimpleNet\r\n  %3 : Long() = onnx::Squeeze[axes=[0]](%2), scope: SimpleNet\r\n  %4 : Dynamic = onnx::Shape(%0), scope: SimpleNet\r\n  %5 : Dynamic = onnx::Slice[axes=[0], ends=[4], starts=[3]](%4), scope: SimpleNet\r\n  %6 : Long() = onnx::Squeeze[axes=[0]](%5), scope: SimpleNet\r\n  %7 : Dynamic = onnx::Unsqueeze[axes=[0]](%3), scope: SimpleNet\r\n  %8 : Dynamic = onnx::Unsqueeze[axes=[0]](%6), scope: SimpleNet\r\n  %9 : Dynamic = onnx::Concat[axis=0](%7, %8), scope: SimpleNet\r\n  %10 : Long() = onnx::Constant[value={0}](), scope: SimpleNet\r\n  %11 : Float(1, 3, 10, 10) = aten::upsample_bilinear2d(%0, %9, %10), scope: SimpleNet\r\n  %12 : Float(1, 6, 10, 10) = onnx::Concat[axis=1](%0, %11), scope: SimpleNet\r\n  return (%12);\r\n}\r\n```\r\n\r\nShould I create the separate issue for this?"}