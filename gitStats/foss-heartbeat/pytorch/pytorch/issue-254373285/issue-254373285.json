{"url": "https://api.github.com/repos/pytorch/pytorch/issues/2587", "repository_url": "https://api.github.com/repos/pytorch/pytorch", "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/2587/labels{/name}", "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/2587/comments", "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/2587/events", "html_url": "https://github.com/pytorch/pytorch/pull/2587", "id": 254373285, "node_id": "MDExOlB1bGxSZXF1ZXN0MTM4Njk2MDMy", "number": 2587, "title": "Allow LongTensor backed variables to be used in Advanced Indexing (v0.2.0)", "user": {"login": "killeent", "id": 4529377, "node_id": "MDQ6VXNlcjQ1MjkzNzc=", "avatar_url": "https://avatars1.githubusercontent.com/u/4529377?v=4", "gravatar_id": "", "url": "https://api.github.com/users/killeent", "html_url": "https://github.com/killeent", "followers_url": "https://api.github.com/users/killeent/followers", "following_url": "https://api.github.com/users/killeent/following{/other_user}", "gists_url": "https://api.github.com/users/killeent/gists{/gist_id}", "starred_url": "https://api.github.com/users/killeent/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/killeent/subscriptions", "organizations_url": "https://api.github.com/users/killeent/orgs", "repos_url": "https://api.github.com/users/killeent/repos", "events_url": "https://api.github.com/users/killeent/events{/privacy}", "received_events_url": "https://api.github.com/users/killeent/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 8, "created_at": "2017-08-31T15:23:10Z", "updated_at": "2017-08-31T19:53:03Z", "closed_at": "2017-08-31T19:53:03Z", "author_association": "CONTRIBUTOR", "pull_request": {"url": "https://api.github.com/repos/pytorch/pytorch/pulls/2587", "html_url": "https://github.com/pytorch/pytorch/pull/2587", "diff_url": "https://github.com/pytorch/pytorch/pull/2587.diff", "patch_url": "https://github.com/pytorch/pytorch/pull/2587.patch"}, "body_html": "<p>Addresses <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load issue title\" data-id=\"250874165\" data-permission-text=\"Issue title is private\" data-url=\"https://github.com/pytorch/pytorch/issues/2469\" data-hovercard-type=\"issue\" data-hovercard-url=\"/pytorch/pytorch/issues/2469/hovercard\" href=\"https://github.com/pytorch/pytorch/issues/2469\">#2469</a>, <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load issue title\" data-id=\"251379293\" data-permission-text=\"Issue title is private\" data-url=\"https://github.com/pytorch/pytorch/issues/2484\" data-hovercard-type=\"issue\" data-hovercard-url=\"/pytorch/pytorch/issues/2484/hovercard\" href=\"https://github.com/pytorch/pytorch/issues/2484\">#2484</a>.</p>\n<p>Essentially just extracts the underlying Tensor at conversion time if the indexing object is a PyTorch variable.</p>\n<p>I'm not sure exactly what constraints we want to put on what variable objects are appropriate, <a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=1310570\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/soumith\">@soumith</a> mentioned adding n assert that <code>requires_grad=False</code> - but I wanted to make sure this was the right approach first.</p>", "body_text": "Addresses #2469, #2484.\nEssentially just extracts the underlying Tensor at conversion time if the indexing object is a PyTorch variable.\nI'm not sure exactly what constraints we want to put on what variable objects are appropriate, @soumith mentioned adding n assert that requires_grad=False - but I wanted to make sure this was the right approach first.", "body": "Addresses #2469, #2484.\r\n\r\nEssentially just extracts the underlying Tensor at conversion time if the indexing object is a PyTorch variable.\r\n\r\nI'm not sure exactly what constraints we want to put on what variable objects are appropriate, @soumith mentioned adding n assert that `requires_grad=False` - but I wanted to make sure this was the right approach first."}