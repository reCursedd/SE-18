{"url": "https://api.github.com/repos/pytorch/pytorch/issues/5477", "repository_url": "https://api.github.com/repos/pytorch/pytorch", "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/5477/labels{/name}", "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/5477/comments", "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/5477/events", "html_url": "https://github.com/pytorch/pytorch/issues/5477", "id": 301207279, "node_id": "MDU6SXNzdWUzMDEyMDcyNzk=", "number": 5477, "title": "Some combination of add, mul, and sum causes a segfault", "user": {"login": "zou3519", "id": 5652049, "node_id": "MDQ6VXNlcjU2NTIwNDk=", "avatar_url": "https://avatars3.githubusercontent.com/u/5652049?v=4", "gravatar_id": "", "url": "https://api.github.com/users/zou3519", "html_url": "https://github.com/zou3519", "followers_url": "https://api.github.com/users/zou3519/followers", "following_url": "https://api.github.com/users/zou3519/following{/other_user}", "gists_url": "https://api.github.com/users/zou3519/gists{/gist_id}", "starred_url": "https://api.github.com/users/zou3519/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/zou3519/subscriptions", "organizations_url": "https://api.github.com/users/zou3519/orgs", "repos_url": "https://api.github.com/users/zou3519/repos", "events_url": "https://api.github.com/users/zou3519/events{/privacy}", "received_events_url": "https://api.github.com/users/zou3519/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-02-28T22:25:16Z", "updated_at": "2018-03-02T21:11:09Z", "closed_at": "2018-03-02T21:10:51Z", "author_association": "CONTRIBUTOR", "body_html": "<pre><code>import torch\nfrom torch.autograd import Variable\n\nfor i in range(0, 2):\n    x = Variable(torch.FloatTensor(range(9)).view(3,3), requires_grad=True) \n    time_step = 0.002\n    for i in range(10000):\n        x = x + x*time_step    \n    y = torch.sum(x)\n    y.backward()\n    print(x.grad)  \n</code></pre>\n<p>segfaults on master. It doesn't happen when the loop only runs once, so I'm suspecting some memory corruption.</p>\n<p>This code runs without error on pytorch 0.3.0, so there is a regression somewhere.</p>", "body_text": "import torch\nfrom torch.autograd import Variable\n\nfor i in range(0, 2):\n    x = Variable(torch.FloatTensor(range(9)).view(3,3), requires_grad=True) \n    time_step = 0.002\n    for i in range(10000):\n        x = x + x*time_step    \n    y = torch.sum(x)\n    y.backward()\n    print(x.grad)  \n\nsegfaults on master. It doesn't happen when the loop only runs once, so I'm suspecting some memory corruption.\nThis code runs without error on pytorch 0.3.0, so there is a regression somewhere.", "body": "```\r\nimport torch\r\nfrom torch.autograd import Variable\r\n\r\nfor i in range(0, 2):\r\n    x = Variable(torch.FloatTensor(range(9)).view(3,3), requires_grad=True) \r\n    time_step = 0.002\r\n    for i in range(10000):\r\n        x = x + x*time_step    \r\n    y = torch.sum(x)\r\n    y.backward()\r\n    print(x.grad)  \r\n```\r\nsegfaults on master. It doesn't happen when the loop only runs once, so I'm suspecting some memory corruption.\r\n\r\nThis code runs without error on pytorch 0.3.0, so there is a regression somewhere."}