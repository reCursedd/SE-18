{"url": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/174823960", "pull_request_review_id": 104251630, "id": 174823960, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE3NDgyMzk2MA==", "diff_hunk": "@@ -7,18 +8,33 @@\n namespace at {\n namespace native {\n \n-constexpr size_t _THRESHOLD = 32768;\n+// This parameter is heuristically chosen to determine the minimum number of\n+// work that warrants paralellism. For example, when summing an array, it is\n+// deemed inefficient to parallelise over arrays shorter than 32768. Further,\n+// no parallel algorithm (such as parallel_reduce) should split work into\n+// smaller than GRAIN_SIZE chunks.\n+constexpr size_t GRAIN_SIZE = 32768;\n \n template <class T, template <class> class PRED>\n T parallel_reduce(T (*f)(const T *, size_t, size_t, T), const T *data,\n                   size_t start, size_t end, T init_) {\n+\n+  static tbb::task_scheduler_init tbbinit;", "path": "aten/src/ATen/native/cpu/Parallel.h", "position": null, "original_position": 22, "commit_id": "f811874db6271f4f1ca3eb7340a62cec88afa0cc", "original_commit_id": "354a2f656c4db2ddc23bd606f2ac69accd52bf6d", "user": {"login": "cpuhrsch", "id": 1716488, "node_id": "MDQ6VXNlcjE3MTY0ODg=", "avatar_url": "https://avatars1.githubusercontent.com/u/1716488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cpuhrsch", "html_url": "https://github.com/cpuhrsch", "followers_url": "https://api.github.com/users/cpuhrsch/followers", "following_url": "https://api.github.com/users/cpuhrsch/following{/other_user}", "gists_url": "https://api.github.com/users/cpuhrsch/gists{/gist_id}", "starred_url": "https://api.github.com/users/cpuhrsch/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cpuhrsch/subscriptions", "organizations_url": "https://api.github.com/users/cpuhrsch/orgs", "repos_url": "https://api.github.com/users/cpuhrsch/repos", "events_url": "https://api.github.com/users/cpuhrsch/events{/privacy}", "received_events_url": "https://api.github.com/users/cpuhrsch/received_events", "type": "User", "site_admin": false}, "body": "What could be a better approach? I'm going to read through http://en.cppreference.com/w/cpp/language/storage_duration and probably introduce Parallel.cpp", "created_at": "2018-03-15T15:25:14Z", "updated_at": "2018-11-23T15:40:47Z", "html_url": "https://github.com/pytorch/pytorch/pull/5723#discussion_r174823960", "pull_request_url": "https://api.github.com/repos/pytorch/pytorch/pulls/5723", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/174823960"}, "html": {"href": "https://github.com/pytorch/pytorch/pull/5723#discussion_r174823960"}, "pull_request": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/5723"}}, "body_html": "<p>What could be a better approach? I'm going to read through <a href=\"http://en.cppreference.com/w/cpp/language/storage_duration\" rel=\"nofollow\">http://en.cppreference.com/w/cpp/language/storage_duration</a> and probably introduce Parallel.cpp</p>", "body_text": "What could be a better approach? I'm going to read through http://en.cppreference.com/w/cpp/language/storage_duration and probably introduce Parallel.cpp", "in_reply_to_id": 174503439}