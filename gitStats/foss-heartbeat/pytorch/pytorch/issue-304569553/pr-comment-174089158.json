{"url": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/174089158", "pull_request_review_id": 103380719, "id": 174089158, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE3NDA4OTE1OA==", "diff_hunk": "@@ -15,122 +15,103 @@\n namespace at {\n namespace native {\n \n-using sum_type = void(Tensor &, const Tensor &, size_t, bool);\n-sum_type *sumImpl = &DispatchStub<sum_type>::init<sumImplC, &sumImpl>;\n-\n-Tensor _sum_cpu(const Tensor &self) {\n-  if (self.is_contiguous()) {\n-    Tensor result = self.type().tensor({});\n-    sumImpl(result, self, 0, true);\n-    return result;\n-  }\n-  return self._sumall();\n-}\n-\n-Tensor _sum_cuda(const Tensor &self_) { return self_._sumall(); }\n-\n-Tensor sum(const Tensor &self, int64_t dim_, bool keepdim) {\n+static Tensor _dimreduce_setup(const Tensor &self, int64_t dim_,\n+                               int64_t ident) {\n   int64_t dim = maybe_wrap_dim(dim_, self.dim());\n   Tensor result = self.type().tensor();\n   if (self.numel() == 1 && self.ndimension() == 0) {\n     result.resize_({});\n     result.fill_(self);\n-    return result;\n+    return std::move(result);", "path": "aten/src/ATen/native/ReduceOps.cpp", "position": null, "original_position": 27, "commit_id": "f811874db6271f4f1ca3eb7340a62cec88afa0cc", "original_commit_id": "012f2b0c7ee524a376d84f16382e18cee8c30af2", "user": {"login": "apaszke", "id": 4583066, "node_id": "MDQ6VXNlcjQ1ODMwNjY=", "avatar_url": "https://avatars3.githubusercontent.com/u/4583066?v=4", "gravatar_id": "", "url": "https://api.github.com/users/apaszke", "html_url": "https://github.com/apaszke", "followers_url": "https://api.github.com/users/apaszke/followers", "following_url": "https://api.github.com/users/apaszke/following{/other_user}", "gists_url": "https://api.github.com/users/apaszke/gists{/gist_id}", "starred_url": "https://api.github.com/users/apaszke/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/apaszke/subscriptions", "organizations_url": "https://api.github.com/users/apaszke/orgs", "repos_url": "https://api.github.com/users/apaszke/repos", "events_url": "https://api.github.com/users/apaszke/events{/privacy}", "received_events_url": "https://api.github.com/users/apaszke/received_events", "type": "User", "site_admin": false}, "body": "Never `return std::move(...)`. This prevents return value optimization and ends up in slower code (clang even warns about it)", "created_at": "2018-03-13T11:00:59Z", "updated_at": "2018-11-23T15:40:40Z", "html_url": "https://github.com/pytorch/pytorch/pull/5723#discussion_r174089158", "pull_request_url": "https://api.github.com/repos/pytorch/pytorch/pulls/5723", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/174089158"}, "html": {"href": "https://github.com/pytorch/pytorch/pull/5723#discussion_r174089158"}, "pull_request": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/5723"}}, "body_html": "<p>Never <code>return std::move(...)</code>. This prevents return value optimization and ends up in slower code (clang even warns about it)</p>", "body_text": "Never return std::move(...). This prevents return value optimization and ends up in slower code (clang even warns about it)"}