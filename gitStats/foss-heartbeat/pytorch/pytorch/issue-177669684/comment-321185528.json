{"url": "https://api.github.com/repos/pytorch/pytorch/issues/comments/321185528", "html_url": "https://github.com/pytorch/pytorch/issues/39#issuecomment-321185528", "issue_url": "https://api.github.com/repos/pytorch/pytorch/issues/39", "id": 321185528, "node_id": "MDEyOklzc3VlQ29tbWVudDMyMTE4NTUyOA==", "user": {"login": "Stonesjtu", "id": 4556044, "node_id": "MDQ6VXNlcjQ1NTYwNDQ=", "avatar_url": "https://avatars3.githubusercontent.com/u/4556044?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Stonesjtu", "html_url": "https://github.com/Stonesjtu", "followers_url": "https://api.github.com/users/Stonesjtu/followers", "following_url": "https://api.github.com/users/Stonesjtu/following{/other_user}", "gists_url": "https://api.github.com/users/Stonesjtu/gists{/gist_id}", "starred_url": "https://api.github.com/users/Stonesjtu/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Stonesjtu/subscriptions", "organizations_url": "https://api.github.com/users/Stonesjtu/orgs", "repos_url": "https://api.github.com/users/Stonesjtu/repos", "events_url": "https://api.github.com/users/Stonesjtu/events{/privacy}", "received_events_url": "https://api.github.com/users/Stonesjtu/received_events", "type": "User", "site_admin": false}, "created_at": "2017-08-09T08:11:29Z", "updated_at": "2017-08-09T08:11:29Z", "author_association": "CONTRIBUTOR", "body_html": "<p>Something wrong when doing mixed advanced indexing. The error message is not helping in this case.</p>\n<pre><code>In [1]: import torch\nfrom torch.nn        \nIn [2]: from torch.autograd import Variable\n\nIn [3]: va = Variable(torch.rand(5,5))\n\nIn [4]: index = torch.LongTensor([1,2,3])\n\nIn [5]: va[1,index]\n---------------------------------------------------------------------------\nTypeError                                 Traceback (most recent call last)\n&lt;ipython-input-5-c87759241b4e&gt; in &lt;module&gt;()\n----&gt; 1 va[1,index]\n\n/slwork/users/kys10/anaconda2/lib/python2.7/site-packages/torch/autograd/variable.pyc in __getitem__(self, key)\n     73                 return IndexSelect.apply(self, 0, key)\n     74             # else fall through and raise an error in Index\n---&gt; 75         return Index.apply(self, key)\n     76 \n     77     def __setitem__(self, key, value):\n\n/slwork/users/kys10/anaconda2/lib/python2.7/site-packages/torch/autograd/_functions/tensor.pyc in forward(ctx, i, index)\n     14         ctx.input_size = i.size()\n     15         ctx.index = index\n---&gt; 16         result = i.index(ctx.index)\n     17         ctx.advanced_indexing = i._check_advanced_indexing(index)\n     18         if not ctx.advanced_indexing:\n\nTypeError: indexing a tensor with an object of type torch.LongTensor. The only supported types are integers, slices, numpy scalars and torch.LongTensor or torch.ByteTensor as the only argument.\n</code></pre>", "body_text": "Something wrong when doing mixed advanced indexing. The error message is not helping in this case.\nIn [1]: import torch\nfrom torch.nn        \nIn [2]: from torch.autograd import Variable\n\nIn [3]: va = Variable(torch.rand(5,5))\n\nIn [4]: index = torch.LongTensor([1,2,3])\n\nIn [5]: va[1,index]\n---------------------------------------------------------------------------\nTypeError                                 Traceback (most recent call last)\n<ipython-input-5-c87759241b4e> in <module>()\n----> 1 va[1,index]\n\n/slwork/users/kys10/anaconda2/lib/python2.7/site-packages/torch/autograd/variable.pyc in __getitem__(self, key)\n     73                 return IndexSelect.apply(self, 0, key)\n     74             # else fall through and raise an error in Index\n---> 75         return Index.apply(self, key)\n     76 \n     77     def __setitem__(self, key, value):\n\n/slwork/users/kys10/anaconda2/lib/python2.7/site-packages/torch/autograd/_functions/tensor.pyc in forward(ctx, i, index)\n     14         ctx.input_size = i.size()\n     15         ctx.index = index\n---> 16         result = i.index(ctx.index)\n     17         ctx.advanced_indexing = i._check_advanced_indexing(index)\n     18         if not ctx.advanced_indexing:\n\nTypeError: indexing a tensor with an object of type torch.LongTensor. The only supported types are integers, slices, numpy scalars and torch.LongTensor or torch.ByteTensor as the only argument.", "body": "Something wrong when doing mixed advanced indexing. The error message is not helping in this case.\r\n```\r\nIn [1]: import torch\r\nfrom torch.nn        \r\nIn [2]: from torch.autograd import Variable\r\n\r\nIn [3]: va = Variable(torch.rand(5,5))\r\n\r\nIn [4]: index = torch.LongTensor([1,2,3])\r\n\r\nIn [5]: va[1,index]\r\n---------------------------------------------------------------------------\r\nTypeError                                 Traceback (most recent call last)\r\n<ipython-input-5-c87759241b4e> in <module>()\r\n----> 1 va[1,index]\r\n\r\n/slwork/users/kys10/anaconda2/lib/python2.7/site-packages/torch/autograd/variable.pyc in __getitem__(self, key)\r\n     73                 return IndexSelect.apply(self, 0, key)\r\n     74             # else fall through and raise an error in Index\r\n---> 75         return Index.apply(self, key)\r\n     76 \r\n     77     def __setitem__(self, key, value):\r\n\r\n/slwork/users/kys10/anaconda2/lib/python2.7/site-packages/torch/autograd/_functions/tensor.pyc in forward(ctx, i, index)\r\n     14         ctx.input_size = i.size()\r\n     15         ctx.index = index\r\n---> 16         result = i.index(ctx.index)\r\n     17         ctx.advanced_indexing = i._check_advanced_indexing(index)\r\n     18         if not ctx.advanced_indexing:\r\n\r\nTypeError: indexing a tensor with an object of type torch.LongTensor. The only supported types are integers, slices, numpy scalars and torch.LongTensor or torch.ByteTensor as the only argument.\r\n```"}