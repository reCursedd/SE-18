{"url": "https://api.github.com/repos/pytorch/pytorch/issues/39", "repository_url": "https://api.github.com/repos/pytorch/pytorch", "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/39/labels{/name}", "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/39/comments", "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/39/events", "html_url": "https://github.com/pytorch/pytorch/issues/39", "id": 177669684, "node_id": "MDU6SXNzdWUxNzc2Njk2ODQ=", "number": 39, "title": "Error messages to improve", "user": {"login": "apaszke", "id": 4583066, "node_id": "MDQ6VXNlcjQ1ODMwNjY=", "avatar_url": "https://avatars3.githubusercontent.com/u/4583066?v=4", "gravatar_id": "", "url": "https://api.github.com/users/apaszke", "html_url": "https://github.com/apaszke", "followers_url": "https://api.github.com/users/apaszke/followers", "following_url": "https://api.github.com/users/apaszke/following{/other_user}", "gists_url": "https://api.github.com/users/apaszke/gists{/gist_id}", "starred_url": "https://api.github.com/users/apaszke/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/apaszke/subscriptions", "organizations_url": "https://api.github.com/users/apaszke/orgs", "repos_url": "https://api.github.com/users/apaszke/repos", "events_url": "https://api.github.com/users/apaszke/events{/privacy}", "received_events_url": "https://api.github.com/users/apaszke/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 586698444, "node_id": "MDU6TGFiZWw1ODY2OTg0NDQ=", "url": "https://api.github.com/repos/pytorch/pytorch/labels/1hr", "name": "1hr", "color": "d4c5f9", "default": false}, {"id": 424131849, "node_id": "MDU6TGFiZWw0MjQxMzE4NDk=", "url": "https://api.github.com/repos/pytorch/pytorch/labels/enhancement", "name": "enhancement", "color": "84b6eb", "default": true}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 16, "created_at": "2016-09-18T19:05:43Z", "updated_at": "2018-07-22T15:18:45Z", "closed_at": null, "author_association": "MEMBER", "body_html": "<ul class=\"contains-task-list\">\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\" checked=\"\"> THNN errors (say exactly which function has failed) - depends on the C API</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\" checked=\"\"> double backward without <code>save_variables=True</code></li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\" checked=\"\"> accept int as real for float types</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\" checked=\"\"> constructing variables with non-tensor objects</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\" checked=\"\"> <code>torch.cat</code> prints <code>TODO</code>: <code>torch.cat(torch.Tensor(128), torch.Tensor(128))</code></li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\" checked=\"\"> CUDA OOM when constructing tensors says the arguments were invalid</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\"> out of range errors</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\"> inconsistent tensor size</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\"> use of variables in torch.xxx APIs expecting tensors</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\"> Convolution with invalid input sizes</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\"> torch.cat (on variables) when given a.cat((b), 1) # a and b are 2D</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\"> torch.cat when given different tensor types. torch.cat((a,b)) where a is LongTensor and b is FloatTensor for example.</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\"> when autograd.Function.forward returns something other than a tensor or tuple(tensor)</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\"> when MyFunction.backward() takes the incorrect number of arguments</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\"> addbmm <code>output tensor of incorrect size at /Users/soumith/code/pytorch/torch/lib/TH/generic/THTensorMath.c:1040</code></li>\n</ul>\n<pre><code>RuntimeError: out of range at /Users/soumith/anaconda/conda-bld/pytorch-0.1.4_1475478983079/work/torch/lib/TH/generic/THTensor.c:350\n</code></pre>", "body_text": "THNN errors (say exactly which function has failed) - depends on the C API\n double backward without save_variables=True\n accept int as real for float types\n constructing variables with non-tensor objects\n torch.cat prints TODO: torch.cat(torch.Tensor(128), torch.Tensor(128))\n CUDA OOM when constructing tensors says the arguments were invalid\n out of range errors\n inconsistent tensor size\n use of variables in torch.xxx APIs expecting tensors\n Convolution with invalid input sizes\n torch.cat (on variables) when given a.cat((b), 1) # a and b are 2D\n torch.cat when given different tensor types. torch.cat((a,b)) where a is LongTensor and b is FloatTensor for example.\n when autograd.Function.forward returns something other than a tensor or tuple(tensor)\n when MyFunction.backward() takes the incorrect number of arguments\n addbmm output tensor of incorrect size at /Users/soumith/code/pytorch/torch/lib/TH/generic/THTensorMath.c:1040\n\nRuntimeError: out of range at /Users/soumith/anaconda/conda-bld/pytorch-0.1.4_1475478983079/work/torch/lib/TH/generic/THTensor.c:350", "body": "- [x] THNN errors (say exactly which function has failed) - depends on the C API\r\n- [x] double backward without `save_variables=True`\r\n- [x] accept int as real for float types\r\n- [x] constructing variables with non-tensor objects\r\n- [x] `torch.cat` prints `TODO`: `torch.cat(torch.Tensor(128), torch.Tensor(128))`\r\n- [x] CUDA OOM when constructing tensors says the arguments were invalid\r\n- [ ] out of range errors\r\n- [ ] inconsistent tensor size\r\n- [ ] use of variables in torch.xxx APIs expecting tensors\r\n- [ ] Convolution with invalid input sizes\r\n- [ ] torch.cat (on variables) when given a.cat((b), 1) # a and b are 2D\r\n- [ ] torch.cat when given different tensor types. torch.cat((a,b)) where a is LongTensor and b is FloatTensor for example.\r\n- [ ] when autograd.Function.forward returns something other than a tensor or tuple(tensor)\r\n- [ ] when MyFunction.backward() takes the incorrect number of arguments\r\n- [ ] addbmm `output tensor of incorrect size at /Users/soumith/code/pytorch/torch/lib/TH/generic/THTensorMath.c:1040`\r\n```\r\nRuntimeError: out of range at /Users/soumith/anaconda/conda-bld/pytorch-0.1.4_1475478983079/work/torch/lib/TH/generic/THTensor.c:350\r\n```\r\n"}