{"url": "https://api.github.com/repos/pytorch/pytorch/issues/comments/313223838", "html_url": "https://github.com/pytorch/pytorch/pull/1983#issuecomment-313223838", "issue_url": "https://api.github.com/repos/pytorch/pytorch/issues/1983", "id": 313223838, "node_id": "MDEyOklzc3VlQ29tbWVudDMxMzIyMzgzOA==", "user": {"login": "fmassa", "id": 9110200, "node_id": "MDQ6VXNlcjkxMTAyMDA=", "avatar_url": "https://avatars2.githubusercontent.com/u/9110200?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fmassa", "html_url": "https://github.com/fmassa", "followers_url": "https://api.github.com/users/fmassa/followers", "following_url": "https://api.github.com/users/fmassa/following{/other_user}", "gists_url": "https://api.github.com/users/fmassa/gists{/gist_id}", "starred_url": "https://api.github.com/users/fmassa/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fmassa/subscriptions", "organizations_url": "https://api.github.com/users/fmassa/orgs", "repos_url": "https://api.github.com/users/fmassa/repos", "events_url": "https://api.github.com/users/fmassa/events{/privacy}", "received_events_url": "https://api.github.com/users/fmassa/received_events", "type": "User", "site_admin": false}, "created_at": "2017-07-05T20:54:05Z", "updated_at": "2017-07-05T20:54:05Z", "author_association": "MEMBER", "body_html": "<p>I think you should not convert it to a tuple, but keep it instead as a torch.Size object (which inherits from tuplr btw). This is to avoid problems with some tensor constructors, that can accept either a size or an initializing tuple. I can find the issue discussing its introduction if you want (typing from the phone)</p>", "body_text": "I think you should not convert it to a tuple, but keep it instead as a torch.Size object (which inherits from tuplr btw). This is to avoid problems with some tensor constructors, that can accept either a size or an initializing tuple. I can find the issue discussing its introduction if you want (typing from the phone)", "body": "I think you should not convert it to a tuple, but keep it instead as a torch.Size object (which inherits from tuplr btw). This is to avoid problems with some tensor constructors, that can accept either a size or an initializing tuple. I can find the issue discussing its introduction if you want (typing from the phone)"}