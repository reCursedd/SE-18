{"url": "https://api.github.com/repos/pytorch/pytorch/issues/comments/386691903", "html_url": "https://github.com/pytorch/pytorch/issues/7294#issuecomment-386691903", "issue_url": "https://api.github.com/repos/pytorch/pytorch/issues/7294", "id": 386691903, "node_id": "MDEyOklzc3VlQ29tbWVudDM4NjY5MTkwMw==", "user": {"login": "mariogeiger", "id": 333780, "node_id": "MDQ6VXNlcjMzMzc4MA==", "avatar_url": "https://avatars1.githubusercontent.com/u/333780?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mariogeiger", "html_url": "https://github.com/mariogeiger", "followers_url": "https://api.github.com/users/mariogeiger/followers", "following_url": "https://api.github.com/users/mariogeiger/following{/other_user}", "gists_url": "https://api.github.com/users/mariogeiger/gists{/gist_id}", "starred_url": "https://api.github.com/users/mariogeiger/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mariogeiger/subscriptions", "organizations_url": "https://api.github.com/users/mariogeiger/orgs", "repos_url": "https://api.github.com/users/mariogeiger/repos", "events_url": "https://api.github.com/users/mariogeiger/events{/privacy}", "received_events_url": "https://api.github.com/users/mariogeiger/received_events", "type": "User", "site_admin": false}, "created_at": "2018-05-04T18:23:59Z", "updated_at": "2018-05-04T18:23:59Z", "author_association": "NONE", "body_html": "<p>in pytorch 0.4.0</p>\n<div class=\"highlight highlight-source-python\"><pre>x <span class=\"pl-k\">=</span> torch.tensor([<span class=\"pl-c1\">1</span>, <span class=\"pl-c1\">2</span>], <span class=\"pl-v\">requires_grad</span><span class=\"pl-k\">=</span><span class=\"pl-c1\">True</span>, <span class=\"pl-v\">dtype</span><span class=\"pl-k\">=</span>torch.float)\ny <span class=\"pl-k\">=</span> torch.tensor([<span class=\"pl-c1\">1</span>, <span class=\"pl-c1\">2</span>], <span class=\"pl-v\">requires_grad</span><span class=\"pl-k\">=</span><span class=\"pl-c1\">True</span>, <span class=\"pl-v\">dtype</span><span class=\"pl-k\">=</span>torch.float)\n\nx <span class=\"pl-k\">=</span> x <span class=\"pl-k\">**</span> <span class=\"pl-c1\">2</span>\ny <span class=\"pl-k\">=</span> y <span class=\"pl-k\">**</span> <span class=\"pl-c1\">2</span>\n\nx.add_(y)\n\nz <span class=\"pl-k\">=</span> x.sum()\nz.backward()\n\n<span class=\"pl-k\">assert</span> x.grad <span class=\"pl-k\">is</span> <span class=\"pl-c1\">None</span> <span class=\"pl-k\">and</span> y.grad <span class=\"pl-k\">is</span> <span class=\"pl-c1\">None</span></pre></div>\n<p>But in 0.3.* the <code>add_</code> of the class <code>Variable</code> was backward compatible</p>", "body_text": "in pytorch 0.4.0\nx = torch.tensor([1, 2], requires_grad=True, dtype=torch.float)\ny = torch.tensor([1, 2], requires_grad=True, dtype=torch.float)\n\nx = x ** 2\ny = y ** 2\n\nx.add_(y)\n\nz = x.sum()\nz.backward()\n\nassert x.grad is None and y.grad is None\nBut in 0.3.* the add_ of the class Variable was backward compatible", "body": "in pytorch 0.4.0\r\n```python\r\nx = torch.tensor([1, 2], requires_grad=True, dtype=torch.float)\r\ny = torch.tensor([1, 2], requires_grad=True, dtype=torch.float)\r\n\r\nx = x ** 2\r\ny = y ** 2\r\n\r\nx.add_(y)\r\n\r\nz = x.sum()\r\nz.backward()\r\n\r\nassert x.grad is None and y.grad is None\r\n```\r\n\r\nBut in 0.3.* the `add_` of the class `Variable` was backward compatible"}