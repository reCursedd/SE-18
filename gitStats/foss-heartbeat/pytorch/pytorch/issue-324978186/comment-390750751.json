{"url": "https://api.github.com/repos/pytorch/pytorch/issues/comments/390750751", "html_url": "https://github.com/pytorch/pytorch/issues/7733#issuecomment-390750751", "issue_url": "https://api.github.com/repos/pytorch/pytorch/issues/7733", "id": 390750751, "node_id": "MDEyOklzc3VlQ29tbWVudDM5MDc1MDc1MQ==", "user": {"login": "apaszke", "id": 4583066, "node_id": "MDQ6VXNlcjQ1ODMwNjY=", "avatar_url": "https://avatars3.githubusercontent.com/u/4583066?v=4", "gravatar_id": "", "url": "https://api.github.com/users/apaszke", "html_url": "https://github.com/apaszke", "followers_url": "https://api.github.com/users/apaszke/followers", "following_url": "https://api.github.com/users/apaszke/following{/other_user}", "gists_url": "https://api.github.com/users/apaszke/gists{/gist_id}", "starred_url": "https://api.github.com/users/apaszke/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/apaszke/subscriptions", "organizations_url": "https://api.github.com/users/apaszke/orgs", "repos_url": "https://api.github.com/users/apaszke/repos", "events_url": "https://api.github.com/users/apaszke/events{/privacy}", "received_events_url": "https://api.github.com/users/apaszke/received_events", "type": "User", "site_admin": false}, "created_at": "2018-05-21T19:03:14Z", "updated_at": "2018-05-21T19:03:14Z", "author_association": "MEMBER", "body_html": "<p>Well it all boils down to the implementation of <code>__bool__</code>, and this is the best message we can raise in general. Remember that dicts are basically hash tables, and hash tables need the keys to be hashable AND comparable. While you certainly can do <code>==</code> on tensors, it gives you a byte tensor, which will get its <code>__bool__</code> called, and this causes the code to fail (and it should, because it's unclear if you want <code>.all()</code> or <code>.any()</code> in general when you're doing it).</p>\n<p>Getting rid of <code>__hash__</code> seems like a good idea.</p>", "body_text": "Well it all boils down to the implementation of __bool__, and this is the best message we can raise in general. Remember that dicts are basically hash tables, and hash tables need the keys to be hashable AND comparable. While you certainly can do == on tensors, it gives you a byte tensor, which will get its __bool__ called, and this causes the code to fail (and it should, because it's unclear if you want .all() or .any() in general when you're doing it).\nGetting rid of __hash__ seems like a good idea.", "body": "Well it all boils down to the implementation of `__bool__`, and this is the best message we can raise in general. Remember that dicts are basically hash tables, and hash tables need the keys to be hashable AND comparable. While you certainly can do `==` on tensors, it gives you a byte tensor, which will get its `__bool__` called, and this causes the code to fail (and it should, because it's unclear if you want `.all()` or `.any()` in general when you're doing it).\r\n\r\nGetting rid of `__hash__` seems like a good idea."}