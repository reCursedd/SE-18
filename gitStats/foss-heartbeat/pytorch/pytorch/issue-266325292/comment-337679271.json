{"url": "https://api.github.com/repos/pytorch/pytorch/issues/comments/337679271", "html_url": "https://github.com/pytorch/pytorch/pull/3157#issuecomment-337679271", "issue_url": "https://api.github.com/repos/pytorch/pytorch/issues/3157", "id": 337679271, "node_id": "MDEyOklzc3VlQ29tbWVudDMzNzY3OTI3MQ==", "user": {"login": "soumith", "id": 1310570, "node_id": "MDQ6VXNlcjEzMTA1NzA=", "avatar_url": "https://avatars0.githubusercontent.com/u/1310570?v=4", "gravatar_id": "", "url": "https://api.github.com/users/soumith", "html_url": "https://github.com/soumith", "followers_url": "https://api.github.com/users/soumith/followers", "following_url": "https://api.github.com/users/soumith/following{/other_user}", "gists_url": "https://api.github.com/users/soumith/gists{/gist_id}", "starred_url": "https://api.github.com/users/soumith/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/soumith/subscriptions", "organizations_url": "https://api.github.com/users/soumith/orgs", "repos_url": "https://api.github.com/users/soumith/repos", "events_url": "https://api.github.com/users/soumith/events{/privacy}", "received_events_url": "https://api.github.com/users/soumith/received_events", "type": "User", "site_admin": false}, "created_at": "2017-10-18T18:09:05Z", "updated_at": "2017-10-18T18:09:05Z", "author_association": "MEMBER", "body_html": "<p>two thoughts on this PR:</p>\n<ol>\n<li>removing stochastic functions is a breaking change. Now, these aren't used a lot, which makes it more acceptable to break userland than not, especially if there's huge upsides.  My question is:</li>\n</ol>\n<ul>\n<li>is it essential to get a breaking change now, without deprecation? (I might have to semver the next release to 0.3, rather than 0.2.1)</li>\n<li>is there no easy path to deprecation?</li>\n<li>is this PR tied to the perf work? (if so, how critical is it in the overall perf).</li>\n</ul>\n<ol start=\"2\">\n<li><code>tf.distributions</code> style package is warranted, but in a later or parallel PR, it's a larger effort. However, if there's something that needs to be pre-designed for such a package in this PR, do think it through.</li>\n</ol>", "body_text": "two thoughts on this PR:\n\nremoving stochastic functions is a breaking change. Now, these aren't used a lot, which makes it more acceptable to break userland than not, especially if there's huge upsides.  My question is:\n\n\nis it essential to get a breaking change now, without deprecation? (I might have to semver the next release to 0.3, rather than 0.2.1)\nis there no easy path to deprecation?\nis this PR tied to the perf work? (if so, how critical is it in the overall perf).\n\n\ntf.distributions style package is warranted, but in a later or parallel PR, it's a larger effort. However, if there's something that needs to be pre-designed for such a package in this PR, do think it through.", "body": "two thoughts on this PR:\r\n\r\n1. removing stochastic functions is a breaking change. Now, these aren't used a lot, which makes it more acceptable to break userland than not, especially if there's huge upsides.  My question is:\r\n  - is it essential to get a breaking change now, without deprecation? (I might have to semver the next release to 0.3, rather than 0.2.1)\r\n  - is there no easy path to deprecation?\r\n  - is this PR tied to the perf work? (if so, how critical is it in the overall perf).\r\n\r\n2. `tf.distributions` style package is warranted, but in a later or parallel PR, it's a larger effort. However, if there's something that needs to be pre-designed for such a package in this PR, do think it through."}