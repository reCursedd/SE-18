{"url": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/228762283", "pull_request_review_id": 169106698, "id": 228762283, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIyODc2MjI4Mw==", "diff_hunk": "@@ -538,12 +538,28 @@ RegisterOperators reg({\n     Operator(\n         prim::fork,\n         [](Node* node) {\n+          int n_inputs = node->inputs().size();\n           Code code(node->g(attr::Subgraph));\n           JIT_ASSERT(node->blocks().size() == 0);\n           JIT_ASSERT(node->hasAttribute(attr::Subgraph));\n           return [=](Stack& stack) {\n-            InterpreterState(code).run(stack);\n-            push(stack, Future(pop(stack)));\n+            // Move inputs to a separate stack\n+            auto copied_stack = std::make_shared<Stack>();\n+            std::vector<IValue> inputs(n_inputs);\n+            for (int i = 0; i < n_inputs; ++i) {\n+              pop(stack, inputs[i]);\n+            }\n+            for (int i = n_inputs - 1; i >= 0; --i) {\n+              push(*copied_stack, inputs[i]);\n+            }\n+\n+            // TODO: (thread pool) move the task to a queue for threads to pick up\n+            auto task = [=](std::shared_ptr<Stack> new_stack) {", "path": "torch/csrc/jit/register_prim_ops.cpp", "position": null, "original_position": 22, "commit_id": "928476a76fc9249e71a8a523919ab91bc49e5b2e", "original_commit_id": "e686a31165afa957ca07f98a86a13ae7fd611851", "user": {"login": "apaszke", "id": 4583066, "node_id": "MDQ6VXNlcjQ1ODMwNjY=", "avatar_url": "https://avatars3.githubusercontent.com/u/4583066?v=4", "gravatar_id": "", "url": "https://api.github.com/users/apaszke", "html_url": "https://github.com/apaszke", "followers_url": "https://api.github.com/users/apaszke/followers", "following_url": "https://api.github.com/users/apaszke/following{/other_user}", "gists_url": "https://api.github.com/users/apaszke/gists{/gist_id}", "starred_url": "https://api.github.com/users/apaszke/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/apaszke/subscriptions", "organizations_url": "https://api.github.com/users/apaszke/orgs", "repos_url": "https://api.github.com/users/apaszke/repos", "events_url": "https://api.github.com/users/apaszke/events{/privacy}", "received_events_url": "https://api.github.com/users/apaszke/received_events", "type": "User", "site_admin": false}, "body": "Actually this could have been a `unique_ptr`, which would also be faster.", "created_at": "2018-10-28T19:54:34Z", "updated_at": "2018-11-23T15:53:43Z", "html_url": "https://github.com/pytorch/pytorch/pull/13212#discussion_r228762283", "pull_request_url": "https://api.github.com/repos/pytorch/pytorch/pulls/13212", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/228762283"}, "html": {"href": "https://github.com/pytorch/pytorch/pull/13212#discussion_r228762283"}, "pull_request": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/13212"}}, "body_html": "<p>Actually this could have been a <code>unique_ptr</code>, which would also be faster.</p>", "body_text": "Actually this could have been a unique_ptr, which would also be faster."}