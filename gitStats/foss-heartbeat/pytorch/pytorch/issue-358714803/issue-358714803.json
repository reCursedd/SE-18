{"url": "https://api.github.com/repos/pytorch/pytorch/issues/11458", "repository_url": "https://api.github.com/repos/pytorch/pytorch", "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/11458/labels{/name}", "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/11458/comments", "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/11458/events", "html_url": "https://github.com/pytorch/pytorch/pull/11458", "id": 358714803, "node_id": "MDExOlB1bGxSZXF1ZXN0MjE0Mzg0MDA1", "number": 11458, "title": "[C++ API] Use ATen dropout implementation in Dropout module and add FeatureDropout", "user": {"login": "goldsborough", "id": 6429851, "node_id": "MDQ6VXNlcjY0Mjk4NTE=", "avatar_url": "https://avatars3.githubusercontent.com/u/6429851?v=4", "gravatar_id": "", "url": "https://api.github.com/users/goldsborough", "html_url": "https://github.com/goldsborough", "followers_url": "https://api.github.com/users/goldsborough/followers", "following_url": "https://api.github.com/users/goldsborough/following{/other_user}", "gists_url": "https://api.github.com/users/goldsborough/gists{/gist_id}", "starred_url": "https://api.github.com/users/goldsborough/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/goldsborough/subscriptions", "organizations_url": "https://api.github.com/users/goldsborough/orgs", "repos_url": "https://api.github.com/users/goldsborough/repos", "events_url": "https://api.github.com/users/goldsborough/events{/privacy}", "received_events_url": "https://api.github.com/users/goldsborough/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-09-10T17:13:06Z", "updated_at": "2018-11-23T15:50:53Z", "closed_at": "2018-09-12T03:17:37Z", "author_association": "CONTRIBUTOR", "pull_request": {"url": "https://api.github.com/repos/pytorch/pytorch/pulls/11458", "html_url": "https://github.com/pytorch/pytorch/pull/11458", "diff_url": "https://github.com/pytorch/pytorch/pull/11458.diff", "patch_url": "https://github.com/pytorch/pytorch/pull/11458.patch"}, "body_html": "<p>This PR does two things:</p>\n<ol>\n<li>Replaces the implementation of the <code>Dropout</code> module with a call to the ATen function,</li>\n<li>Replaces <code>Dropout2d</code> with a new <code>FeatureDropout</code> module that shall take the place of <code>Dropout2d</code> and <code>Dropout3d</code>. I contemplated calling it <code>Dropout2d</code> and making <code>Dropout3d</code> an alias for it, but similar to our decision for <code>BatchNorm{1,2,3}d</code> (c.f. <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load issue title\" data-id=\"338677067\" data-permission-text=\"Issue title is private\" data-url=\"https://github.com/pytorch/pytorch/issues/9188\" data-hovercard-type=\"pull_request\" data-hovercard-url=\"/pytorch/pytorch/pull/9188/hovercard\" href=\"https://github.com/pytorch/pytorch/pull/9188\">#9188</a>), we can deviate from Python PyTorch in favor of the ideal-world solution, which is to have a single module, since both actually just call <code>feature_dropout</code>.</li>\n</ol>\n<p>I also replaced the implementation of <code>dropout3d</code>  with a call to <code>dropout2d</code> in Python. The code is the same and it's easier for developers to parse than having to manually match the tokens to make sure it's really 100% the same code (which it is, if I matched the tokens correctly).</p>\n<p><a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=3605224\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/ebetica\">@ebetica</a> <a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=13564\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/ezyang\">@ezyang</a> <a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=5674597\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/SsnL\">@SsnL</a></p>", "body_text": "This PR does two things:\n\nReplaces the implementation of the Dropout module with a call to the ATen function,\nReplaces Dropout2d with a new FeatureDropout module that shall take the place of Dropout2d and Dropout3d. I contemplated calling it Dropout2d and making Dropout3d an alias for it, but similar to our decision for BatchNorm{1,2,3}d (c.f. #9188), we can deviate from Python PyTorch in favor of the ideal-world solution, which is to have a single module, since both actually just call feature_dropout.\n\nI also replaced the implementation of dropout3d  with a call to dropout2d in Python. The code is the same and it's easier for developers to parse than having to manually match the tokens to make sure it's really 100% the same code (which it is, if I matched the tokens correctly).\n@ebetica @ezyang @SsnL", "body": "This PR does two things:\r\n1. Replaces the implementation of the `Dropout` module with a call to the ATen function,\r\n2. Replaces `Dropout2d` with a new `FeatureDropout` module that shall take the place of `Dropout2d` and `Dropout3d`. I contemplated calling it `Dropout2d` and making `Dropout3d` an alias for it, but similar to our decision for `BatchNorm{1,2,3}d` (c.f. https://github.com/pytorch/pytorch/pull/9188), we can deviate from Python PyTorch in favor of the ideal-world solution, which is to have a single module, since both actually just call `feature_dropout`.\r\n\r\nI also replaced the implementation of `dropout3d`  with a call to `dropout2d` in Python. The code is the same and it's easier for developers to parse than having to manually match the tokens to make sure it's really 100% the same code (which it is, if I matched the tokens correctly).\r\n\r\n@ebetica @ezyang @SsnL "}