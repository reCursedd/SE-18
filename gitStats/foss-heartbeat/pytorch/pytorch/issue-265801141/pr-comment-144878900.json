{"url": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/144878900", "pull_request_review_id": 69597376, "id": 144878900, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE0NDg3ODkwMA==", "diff_hunk": "@@ -16,26 +20,38 @@ def find_cudnn_version(cudnn_lib_dir):\n     candidate_names = list(glob.glob(os.path.join(cudnn_lib_dir, 'libcudnn*')))\n     candidate_names = [os.path.basename(c) for c in candidate_names]\n \n-    # suppose version is MAJOR.MINOR.PATCH, all numbers\n-    version_regex = re.compile('\\d+\\.\\d+\\.\\d+')\n-    candidates = [c.group() for c in map(version_regex.search, candidate_names) if c]\n-    if len(candidates) > 0:\n-        # normally only one will be retrieved, take the first result\n-        return candidates[0]\n-\n-    # if no candidates were found, try MAJOR.MINOR\n-    version_regex = re.compile('\\d+\\.\\d+')\n-    candidates = [c.group() for c in map(version_regex.search, candidate_names) if c]\n-    if len(candidates) > 0:\n-        return candidates[0]\n-\n-    # if no candidates were found, try MAJOR\n-    version_regex = re.compile('\\d+')\n-    candidates = [c.group() for c in map(version_regex.search, candidate_names) if c]\n-    if len(candidates) > 0:\n-        return candidates[0]\n-\n-    return 'unknown'\n+    # suppose lib file is is libcudnn.so.MAJOR.MINOR.PATCH, all numbers\n+    version_regex = re.compile('.so.(\\d+\\.\\d+\\.\\d+)$')\n+    candidates = [c.group(1) for c in map(version_regex.search, candidate_names) if c]\n+\n+    # libcudnn.so.MAJOR.MINOR\n+    version_regex = re.compile('.so.(\\d+\\.\\d+)$')\n+    candidates += [c.group(1) for c in map(version_regex.search, candidate_names) if c]\n+\n+    # libcudnn.so.MAJOR\n+    version_regex = re.compile('.so.(\\d+)$')\n+    candidates += [c.group(1) for c in map(version_regex.search, candidate_names) if c]\n+\n+    if len(candidates) == 0:\n+        return 'unknown'\n+\n+    # Each candidate represented as list, eg 6.0.21 -> [6, 0, 21]\n+    candidates = [[int(x) for x in c.split('.')] for c in candidates]\n+\n+    # From candidates, take the most recent, then most detailed version string", "path": "tools/setup_helpers/cudnn.py", "position": null, "original_position": 53, "commit_id": "451b04e9151e06e9150440582e4a9582864f4ead", "original_commit_id": "ac0aceeca9fbb89b7bb15d090f5caf10b147b091", "user": {"login": "ezyang", "id": 13564, "node_id": "MDQ6VXNlcjEzNTY0", "avatar_url": "https://avatars0.githubusercontent.com/u/13564?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ezyang", "html_url": "https://github.com/ezyang", "followers_url": "https://api.github.com/users/ezyang/followers", "following_url": "https://api.github.com/users/ezyang/following{/other_user}", "gists_url": "https://api.github.com/users/ezyang/gists{/gist_id}", "starred_url": "https://api.github.com/users/ezyang/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ezyang/subscriptions", "organizations_url": "https://api.github.com/users/ezyang/orgs", "repos_url": "https://api.github.com/users/ezyang/repos", "events_url": "https://api.github.com/users/ezyang/events{/privacy}", "received_events_url": "https://api.github.com/users/ezyang/received_events", "type": "User", "site_admin": false}, "body": "No, this will miscompare if you have `libcudnn.so.10` and `libcudnn.so.5`. Also, I'm pretty sure we already have the cudnn<6 check somewhere else.", "created_at": "2017-10-16T15:21:25Z", "updated_at": "2018-11-23T15:35:19Z", "html_url": "https://github.com/pytorch/pytorch/pull/3132#discussion_r144878900", "pull_request_url": "https://api.github.com/repos/pytorch/pytorch/pulls/3132", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/144878900"}, "html": {"href": "https://github.com/pytorch/pytorch/pull/3132#discussion_r144878900"}, "pull_request": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/3132"}}, "body_html": "<p>No, this will miscompare if you have <code>libcudnn.so.10</code> and <code>libcudnn.so.5</code>. Also, I'm pretty sure we already have the cudnn&lt;6 check somewhere else.</p>", "body_text": "No, this will miscompare if you have libcudnn.so.10 and libcudnn.so.5. Also, I'm pretty sure we already have the cudnn<6 check somewhere else.", "in_reply_to_id": 144876034}