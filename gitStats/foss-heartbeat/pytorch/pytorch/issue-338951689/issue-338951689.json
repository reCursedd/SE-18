{"url": "https://api.github.com/repos/pytorch/pytorch/issues/9206", "repository_url": "https://api.github.com/repos/pytorch/pytorch", "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/9206/labels{/name}", "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/9206/comments", "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/9206/events", "html_url": "https://github.com/pytorch/pytorch/pull/9206", "id": 338951689, "node_id": "MDExOlB1bGxSZXF1ZXN0MTk5NzU3MTQ0", "number": 9206, "title": "Optimize LeakyReLU and PReLU 'forward' functions on the CPU", "user": {"login": "btgraham", "id": 11717476, "node_id": "MDQ6VXNlcjExNzE3NDc2", "avatar_url": "https://avatars3.githubusercontent.com/u/11717476?v=4", "gravatar_id": "", "url": "https://api.github.com/users/btgraham", "html_url": "https://github.com/btgraham", "followers_url": "https://api.github.com/users/btgraham/followers", "following_url": "https://api.github.com/users/btgraham/following{/other_user}", "gists_url": "https://api.github.com/users/btgraham/gists{/gist_id}", "starred_url": "https://api.github.com/users/btgraham/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/btgraham/subscriptions", "organizations_url": "https://api.github.com/users/btgraham/orgs", "repos_url": "https://api.github.com/users/btgraham/repos", "events_url": "https://api.github.com/users/btgraham/events{/privacy}", "received_events_url": "https://api.github.com/users/btgraham/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2018-07-06T14:03:44Z", "updated_at": "2018-07-06T22:43:38Z", "closed_at": "2018-07-06T22:43:38Z", "author_association": "CONTRIBUTOR", "pull_request": {"url": "https://api.github.com/repos/pytorch/pytorch/pulls/9206", "html_url": "https://github.com/pytorch/pytorch/pull/9206", "diff_url": "https://github.com/pytorch/pytorch/pull/9206.diff", "patch_url": "https://github.com/pytorch/pytorch/pull/9206.patch"}, "body_html": "<p>This looks like a totally cosmetic change, but for some reason it reduces the runtime by ~50% running in a single CPU thread.</p>\n<pre><code>import os\nos.environ['OMP_NUM_THREADS']='1'  #Use one CPU thread\nimport torch, torch.nn as nn, time\ndef test_net(net,offset):\n    net.eval()\n    total=0\n    with torch.no_grad():\n        for _ in range(100):\n            x = torch.randn(100,100,100)+offset\n            start_time = time.time()\n            y = net(x)\n            total+=time.time()-start_time\n    print(net, total*10, 'ms')\n\nfor offset in [-1,0,+1]:\n    test_net(nn.LeakyReLU(),offset) \n    test_net(nn.PReLU(),offset) \n</code></pre>", "body_text": "This looks like a totally cosmetic change, but for some reason it reduces the runtime by ~50% running in a single CPU thread.\nimport os\nos.environ['OMP_NUM_THREADS']='1'  #Use one CPU thread\nimport torch, torch.nn as nn, time\ndef test_net(net,offset):\n    net.eval()\n    total=0\n    with torch.no_grad():\n        for _ in range(100):\n            x = torch.randn(100,100,100)+offset\n            start_time = time.time()\n            y = net(x)\n            total+=time.time()-start_time\n    print(net, total*10, 'ms')\n\nfor offset in [-1,0,+1]:\n    test_net(nn.LeakyReLU(),offset) \n    test_net(nn.PReLU(),offset)", "body": "This looks like a totally cosmetic change, but for some reason it reduces the runtime by ~50% running in a single CPU thread.\r\n\r\n```\r\nimport os\r\nos.environ['OMP_NUM_THREADS']='1'  #Use one CPU thread\r\nimport torch, torch.nn as nn, time\r\ndef test_net(net,offset):\r\n    net.eval()\r\n    total=0\r\n    with torch.no_grad():\r\n        for _ in range(100):\r\n            x = torch.randn(100,100,100)+offset\r\n            start_time = time.time()\r\n            y = net(x)\r\n            total+=time.time()-start_time\r\n    print(net, total*10, 'ms')\r\n\r\nfor offset in [-1,0,+1]:\r\n    test_net(nn.LeakyReLU(),offset) \r\n    test_net(nn.PReLU(),offset) \r\n```"}