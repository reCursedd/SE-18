{"url": "https://api.github.com/repos/pytorch/pytorch/issues/7941", "repository_url": "https://api.github.com/repos/pytorch/pytorch", "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/7941/labels{/name}", "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/7941/comments", "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/7941/events", "html_url": "https://github.com/pytorch/pytorch/pull/7941", "id": 327561033, "node_id": "MDExOlB1bGxSZXF1ZXN0MTkxMzI0MzMx", "number": 7941, "title": "Set smaller grain size for some cases", "user": {"login": "cpuhrsch", "id": 1716488, "node_id": "MDQ6VXNlcjE3MTY0ODg=", "avatar_url": "https://avatars1.githubusercontent.com/u/1716488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cpuhrsch", "html_url": "https://github.com/cpuhrsch", "followers_url": "https://api.github.com/users/cpuhrsch/followers", "following_url": "https://api.github.com/users/cpuhrsch/following{/other_user}", "gists_url": "https://api.github.com/users/cpuhrsch/gists{/gist_id}", "starred_url": "https://api.github.com/users/cpuhrsch/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cpuhrsch/subscriptions", "organizations_url": "https://api.github.com/users/cpuhrsch/orgs", "repos_url": "https://api.github.com/users/cpuhrsch/repos", "events_url": "https://api.github.com/users/cpuhrsch/events{/privacy}", "received_events_url": "https://api.github.com/users/cpuhrsch/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2018-05-30T03:32:33Z", "updated_at": "2018-11-23T15:44:43Z", "closed_at": "2018-05-30T22:07:13Z", "author_association": "CONTRIBUTOR", "pull_request": {"url": "https://api.github.com/repos/pytorch/pytorch/pulls/7941", "html_url": "https://github.com/pytorch/pytorch/pull/7941", "diff_url": "https://github.com/pytorch/pytorch/pull/7941.diff", "patch_url": "https://github.com/pytorch/pytorch/pull/7941.patch"}, "body_html": "<p>Will add more timings soon.</p>\n<p>For now consider</p>\n<pre><code>$ cat flavortown.py\nimport torch\nimport time\nimport gc\n\nif __name__ == \"__main__\":\n    tstart = time.time()\n    gc.collect()\n    numbers = torch.randn(100, 100).type('torch.FloatTensor')\n    gc.collect()\n\n    torch.set_num_threads(16)\n    tstart = time.time()\n    for _ in range(50000):\n        numbers = numbers.transpose(0, 1)\n        numbers = numbers.tanh()\n    print(\"elapsed: \" + str(time.time() - tstart))\n</code></pre>\n<p>This branch</p>\n<pre><code>$ MKL_NUM_THREADS=16 OMP_NUM_THREADS=16 numactl --membind=0 --cpunodebind=0 python flavortown.py\nelapsed: 1.73970794678\n</code></pre>\n<p>Master</p>\n<pre><code>$ MKL_NUM_THREADS=16 OMP_NUM_THREADS=16 numactl --membind=0 --cpunodebind=0 python flavortown.py\nelapsed: 9.53220701218\n</code></pre>", "body_text": "Will add more timings soon.\nFor now consider\n$ cat flavortown.py\nimport torch\nimport time\nimport gc\n\nif __name__ == \"__main__\":\n    tstart = time.time()\n    gc.collect()\n    numbers = torch.randn(100, 100).type('torch.FloatTensor')\n    gc.collect()\n\n    torch.set_num_threads(16)\n    tstart = time.time()\n    for _ in range(50000):\n        numbers = numbers.transpose(0, 1)\n        numbers = numbers.tanh()\n    print(\"elapsed: \" + str(time.time() - tstart))\n\nThis branch\n$ MKL_NUM_THREADS=16 OMP_NUM_THREADS=16 numactl --membind=0 --cpunodebind=0 python flavortown.py\nelapsed: 1.73970794678\n\nMaster\n$ MKL_NUM_THREADS=16 OMP_NUM_THREADS=16 numactl --membind=0 --cpunodebind=0 python flavortown.py\nelapsed: 9.53220701218", "body": "Will add more timings soon.\r\n\r\nFor now consider\r\n\r\n```\r\n$ cat flavortown.py\r\nimport torch\r\nimport time\r\nimport gc\r\n\r\nif __name__ == \"__main__\":\r\n    tstart = time.time()\r\n    gc.collect()\r\n    numbers = torch.randn(100, 100).type('torch.FloatTensor')\r\n    gc.collect()\r\n\r\n    torch.set_num_threads(16)\r\n    tstart = time.time()\r\n    for _ in range(50000):\r\n        numbers = numbers.transpose(0, 1)\r\n        numbers = numbers.tanh()\r\n    print(\"elapsed: \" + str(time.time() - tstart))\r\n```\r\n\r\nThis branch\r\n```\r\n$ MKL_NUM_THREADS=16 OMP_NUM_THREADS=16 numactl --membind=0 --cpunodebind=0 python flavortown.py\r\nelapsed: 1.73970794678\r\n```\r\n\r\nMaster\r\n```\r\n$ MKL_NUM_THREADS=16 OMP_NUM_THREADS=16 numactl --membind=0 --cpunodebind=0 python flavortown.py\r\nelapsed: 9.53220701218\r\n```\r\n\r\n"}