{"url": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/150419254", "pull_request_review_id": 75967565, "id": 150419254, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE1MDQxOTI1NA==", "diff_hunk": "@@ -49,7 +49,7 @@ double THCudaBlas_Ddot(THCState *state, int64_t n, double *x, int64_t incx, doub\n }\n \n #ifdef CUDA_HALF_TENSOR\n-float THCudaBlas_Hdot(THCState *state, int64_t n, half *x, int64_t incx, half *y, int64_t incy)\n+half THCudaBlas_Hdot(THCState *state, int64_t n, half *x, int64_t incx, half *y, int64_t incy)", "path": "aten/src/THC/THCBlas.cu", "position": 5, "original_position": 5, "commit_id": "f17f2bfd2b6113ca8fd31bbce6697e6376ce7ab3", "original_commit_id": "122f68174aa823c4ad54c5e702cd391bd00b3e91", "user": {"login": "ngimel", "id": 15841449, "node_id": "MDQ6VXNlcjE1ODQxNDQ5", "avatar_url": "https://avatars3.githubusercontent.com/u/15841449?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ngimel", "html_url": "https://github.com/ngimel", "followers_url": "https://api.github.com/users/ngimel/followers", "following_url": "https://api.github.com/users/ngimel/following{/other_user}", "gists_url": "https://api.github.com/users/ngimel/gists{/gist_id}", "starred_url": "https://api.github.com/users/ngimel/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ngimel/subscriptions", "organizations_url": "https://api.github.com/users/ngimel/orgs", "repos_url": "https://api.github.com/users/ngimel/repos", "events_url": "https://api.github.com/users/ngimel/events{/privacy}", "received_events_url": "https://api.github.com/users/ngimel/received_events", "type": "User", "site_admin": false}, "body": "Unit tests passed because for the most part half is not tested, in test_nn for sure, and looks like in test_cuda also. \r\nIn this case, you could use cublasGemmEx (m=1, n=1) that allows fp32 outputs with fp16 inputs, but it will pick the slowest possible kernel for this. ", "created_at": "2017-11-12T18:54:34Z", "updated_at": "2018-11-23T15:36:26Z", "html_url": "https://github.com/pytorch/pytorch/pull/3660#discussion_r150419254", "pull_request_url": "https://api.github.com/repos/pytorch/pytorch/pulls/3660", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/150419254"}, "html": {"href": "https://github.com/pytorch/pytorch/pull/3660#discussion_r150419254"}, "pull_request": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/3660"}}, "body_html": "<p>Unit tests passed because for the most part half is not tested, in test_nn for sure, and looks like in test_cuda also.<br>\nIn this case, you could use cublasGemmEx (m=1, n=1) that allows fp32 outputs with fp16 inputs, but it will pick the slowest possible kernel for this.</p>", "body_text": "Unit tests passed because for the most part half is not tested, in test_nn for sure, and looks like in test_cuda also.\nIn this case, you could use cublasGemmEx (m=1, n=1) that allows fp32 outputs with fp16 inputs, but it will pick the slowest possible kernel for this.", "in_reply_to_id": 150414975}