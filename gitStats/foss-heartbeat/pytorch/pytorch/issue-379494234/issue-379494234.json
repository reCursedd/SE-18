{"url": "https://api.github.com/repos/pytorch/pytorch/issues/13821", "repository_url": "https://api.github.com/repos/pytorch/pytorch", "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/13821/labels{/name}", "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/13821/comments", "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/13821/events", "html_url": "https://github.com/pytorch/pytorch/issues/13821", "id": 379494234, "node_id": "MDU6SXNzdWUzNzk0OTQyMzQ=", "number": 13821, "title": "Test_Benchmark function in caffe2/core/net_simple.cc not accurate for Titan Xp", "user": {"login": "sungongjian", "id": 21698034, "node_id": "MDQ6VXNlcjIxNjk4MDM0", "avatar_url": "https://avatars0.githubusercontent.com/u/21698034?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sungongjian", "html_url": "https://github.com/sungongjian", "followers_url": "https://api.github.com/users/sungongjian/followers", "following_url": "https://api.github.com/users/sungongjian/following{/other_user}", "gists_url": "https://api.github.com/users/sungongjian/gists{/gist_id}", "starred_url": "https://api.github.com/users/sungongjian/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sungongjian/subscriptions", "organizations_url": "https://api.github.com/users/sungongjian/orgs", "repos_url": "https://api.github.com/users/sungongjian/repos", "events_url": "https://api.github.com/users/sungongjian/events{/privacy}", "received_events_url": "https://api.github.com/users/sungongjian/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 890282107, "node_id": "MDU6TGFiZWw4OTAyODIxMDc=", "url": "https://api.github.com/repos/pytorch/pytorch/labels/caffe2", "name": "caffe2", "color": "210aa8", "default": false}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-11-11T06:17:34Z", "updated_at": "2018-11-14T16:07:48Z", "closed_at": "2018-11-14T16:07:48Z", "author_association": "NONE", "body_html": "<h2><code>Test_Benchmark</code> function in <code>caffe2/core/net_simple.cc</code> is not accurate</h2>\n<h3>The <code>Test_Benchmark</code> function give result of higher GFLOPS than the theoretical value of Titan Xp.</h3>\n<p>The <code>bvlc_alexnet</code> model in caffe zoo is used. The GPU device is Nvidia Titan Xp. The datatype is float32. Need to manually add one function in <code>caffe2/python/workspace.py</code> because python script is used.</p>\n<p>In the third convolution layer, I got a result of over 13000 GFlops, which is higher than 12150 GFlops, the theoretical peak value of Titan Xp when doing float32 operations. Even when warmup_runs is set to zero and main_runs is set to one, this phenomenon remains.</p>\n<p>The testing python script and modified <code>workspace.py</code> can be found in the following repo:<br>\n<a href=\"https://github.com/sungongjian/Test_Benchmark/tree/master\">run.py and workspace.py</a><br>\nTo use this python script you may need two extra steps.</p>\n<ol>\n<li>install <code>bvlc_alexnet</code> by typing the following code in bash<br>\n<code>python -m caffe2.python.models.download -i bvlc_alexnet</code></li>\n<li>prepare input images or use random inputs (need to modify the python script)</li>\n</ol>\n<p>Usage of run.py:<br>\nrun.py [-h] [-d D] [-s S] [-n N]<br>\nspecify work directory and size<br>\noptional arguments:<br>\n-h, --help  show this help message and exit<br>\n-d D          set working root, default '.'<br>\n-s S           set height and width in computing, default 227<br>\n-n N          set batch size(number of images), default 400</p>", "body_text": "Test_Benchmark function in caffe2/core/net_simple.cc is not accurate\nThe Test_Benchmark function give result of higher GFLOPS than the theoretical value of Titan Xp.\nThe bvlc_alexnet model in caffe zoo is used. The GPU device is Nvidia Titan Xp. The datatype is float32. Need to manually add one function in caffe2/python/workspace.py because python script is used.\nIn the third convolution layer, I got a result of over 13000 GFlops, which is higher than 12150 GFlops, the theoretical peak value of Titan Xp when doing float32 operations. Even when warmup_runs is set to zero and main_runs is set to one, this phenomenon remains.\nThe testing python script and modified workspace.py can be found in the following repo:\nrun.py and workspace.py\nTo use this python script you may need two extra steps.\n\ninstall bvlc_alexnet by typing the following code in bash\npython -m caffe2.python.models.download -i bvlc_alexnet\nprepare input images or use random inputs (need to modify the python script)\n\nUsage of run.py:\nrun.py [-h] [-d D] [-s S] [-n N]\nspecify work directory and size\noptional arguments:\n-h, --help  show this help message and exit\n-d D          set working root, default '.'\n-s S           set height and width in computing, default 227\n-n N          set batch size(number of images), default 400", "body": "## `Test_Benchmark` function in `caffe2/core/net_simple.cc` is not accurate\r\n\r\n### The `Test_Benchmark` function give result of higher GFLOPS than the theoretical value of Titan Xp.\r\n\r\nThe `bvlc_alexnet` model in caffe zoo is used. The GPU device is Nvidia Titan Xp. The datatype is float32. Need to manually add one function in `caffe2/python/workspace.py` because python script is used.\r\n\r\nIn the third convolution layer, I got a result of over 13000 GFlops, which is higher than 12150 GFlops, the theoretical peak value of Titan Xp when doing float32 operations. Even when warmup_runs is set to zero and main_runs is set to one, this phenomenon remains.\r\n\r\nThe testing python script and modified `workspace.py` can be found in the following repo:\r\n[run.py and workspace.py](https://github.com/sungongjian/Test_Benchmark/tree/master)\r\nTo use this python script you may need two extra steps.\r\n\r\n1. install `bvlc_alexnet` by typing the following code in bash\r\n`python -m caffe2.python.models.download -i bvlc_alexnet`\r\n2. prepare input images or use random inputs (need to modify the python script)\r\n\r\nUsage of run.py:\r\nrun.py [-h] [-d D] [-s S] [-n N]\r\nspecify work directory and size\r\noptional arguments:\r\n  -h, --help  show this help message and exit\r\n  -d D          set working root, default '.'\r\n  -s S           set height and width in computing, default 227\r\n  -n N          set batch size(number of images), default 400"}