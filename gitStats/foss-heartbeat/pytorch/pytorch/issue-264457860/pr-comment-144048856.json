{"url": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/144048856", "pull_request_review_id": 68650926, "id": 144048856, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE0NDA0ODg1Ng==", "diff_hunk": "@@ -17,8 +17,21 @@ class Addmm(InplaceFunction):\n \n     @staticmethod\n     def symbolic(g, add_matrix, matrix1, matrix2, beta=1, alpha=1, inplace=False):\n-        # TODO: test if broadcasting occurred\n-        return g.op(\"Gemm\", matrix1, matrix2, add_matrix, beta_f=beta, alpha_f=alpha, broadcast_i=True)\n+        assert matrix1.hasType() and matrix2.hasType() and add_matrix.hasType()\n+        sizes1 = matrix1.type().sizes()\n+        sizes2 = matrix2.type().sizes()\n+        sizes_add = add_matrix.type().sizes()\n+        broadcast = False\n+        assert len(sizes1) + len(sizes2) - 2 >= len(sizes_add)\n+        if (len(sizes1) + len(sizes2) - 2 > len(sizes_add)):\n+            broadcast = True\n+        else:\n+            sizes12 = sizes1[:-1] + sizes2[1:]", "path": "torch/autograd/_functions/blas.py", "position": null, "original_position": 15, "commit_id": "2634c37a93916cd875040a7478ed7f2073795fb4", "original_commit_id": "cf2ace1e78d76b37cd90690a28546546cd0d66d1", "user": {"login": "ezyang", "id": 13564, "node_id": "MDQ6VXNlcjEzNTY0", "avatar_url": "https://avatars0.githubusercontent.com/u/13564?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ezyang", "html_url": "https://github.com/ezyang", "followers_url": "https://api.github.com/users/ezyang/followers", "following_url": "https://api.github.com/users/ezyang/following{/other_user}", "gists_url": "https://api.github.com/users/ezyang/gists{/gist_id}", "starred_url": "https://api.github.com/users/ezyang/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ezyang/subscriptions", "organizations_url": "https://api.github.com/users/ezyang/orgs", "repos_url": "https://api.github.com/users/ezyang/repos", "events_url": "https://api.github.com/users/ezyang/events{/privacy}", "received_events_url": "https://api.github.com/users/ezyang/received_events", "type": "User", "site_admin": false}, "body": "This is an interesting case: IIUC, Caffe2 wouldn't actually support broadcast in this case: I believe Caffe2 only supports broadcasting a 1D tensor into a 2D one, and not expanding a 3 x 1 tensor into a 3 x 9 one (for example). ONNX docs seem to imply that broadcasting is not supported in the latter case https://github.com/onnx/onnx/blob/master/docs/Operators.md#Add (or perhaps I misunderstand the logic here?)", "created_at": "2017-10-11T15:29:48Z", "updated_at": "2018-11-23T15:35:14Z", "html_url": "https://github.com/pytorch/pytorch/pull/3063#discussion_r144048856", "pull_request_url": "https://api.github.com/repos/pytorch/pytorch/pulls/3063", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/144048856"}, "html": {"href": "https://github.com/pytorch/pytorch/pull/3063#discussion_r144048856"}, "pull_request": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/3063"}}, "body_html": "<p>This is an interesting case: IIUC, Caffe2 wouldn't actually support broadcast in this case: I believe Caffe2 only supports broadcasting a 1D tensor into a 2D one, and not expanding a 3 x 1 tensor into a 3 x 9 one (for example). ONNX docs seem to imply that broadcasting is not supported in the latter case <a href=\"https://github.com/onnx/onnx/blob/master/docs/Operators.md#Add\">https://github.com/onnx/onnx/blob/master/docs/Operators.md#Add</a> (or perhaps I misunderstand the logic here?)</p>", "body_text": "This is an interesting case: IIUC, Caffe2 wouldn't actually support broadcast in this case: I believe Caffe2 only supports broadcasting a 1D tensor into a 2D one, and not expanding a 3 x 1 tensor into a 3 x 9 one (for example). ONNX docs seem to imply that broadcasting is not supported in the latter case https://github.com/onnx/onnx/blob/master/docs/Operators.md#Add (or perhaps I misunderstand the logic here?)"}