{"url": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/144181296", "pull_request_review_id": 68801756, "id": 144181296, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE0NDE4MTI5Ng==", "diff_hunk": "@@ -17,8 +17,24 @@ class Addmm(InplaceFunction):\n \n     @staticmethod\n     def symbolic(g, add_matrix, matrix1, matrix2, beta=1, alpha=1, inplace=False):\n-        # TODO: test if broadcasting occurred\n-        return g.op(\"Gemm\", matrix1, matrix2, add_matrix, beta_f=beta, alpha_f=alpha, broadcast_i=True)\n+        assert matrix1.hasType() and matrix2.hasType() and add_matrix.hasType()\n+        sizes1 = matrix1.type().sizes()\n+        sizes2 = matrix2.type().sizes()\n+        sizes_add = add_matrix.type().sizes()\n+        broadcast = False\n+        not_supported = False\n+        assert len(sizes1) == 2 and len(sizes2) == 2 and len(sizes_add) <= 2 and len(sizes_add) > 0\n+        if len(sizes_add) == 1:", "path": "torch/autograd/_functions/blas.py", "position": 13, "original_position": 13, "commit_id": "2634c37a93916cd875040a7478ed7f2073795fb4", "original_commit_id": "2634c37a93916cd875040a7478ed7f2073795fb4", "user": {"login": "ezyang", "id": 13564, "node_id": "MDQ6VXNlcjEzNTY0", "avatar_url": "https://avatars0.githubusercontent.com/u/13564?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ezyang", "html_url": "https://github.com/ezyang", "followers_url": "https://api.github.com/users/ezyang/followers", "following_url": "https://api.github.com/users/ezyang/following{/other_user}", "gists_url": "https://api.github.com/users/ezyang/gists{/gist_id}", "starred_url": "https://api.github.com/users/ezyang/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ezyang/subscriptions", "organizations_url": "https://api.github.com/users/ezyang/orgs", "repos_url": "https://api.github.com/users/ezyang/repos", "events_url": "https://api.github.com/users/ezyang/events{/privacy}", "received_events_url": "https://api.github.com/users/ezyang/received_events", "type": "User", "site_admin": false}, "body": "At some point we should factor this logic out, because there are going to be a number of other places where we need to detect and support a broadcast (e.g., Add)", "created_at": "2017-10-12T02:21:11Z", "updated_at": "2018-11-23T15:35:14Z", "html_url": "https://github.com/pytorch/pytorch/pull/3063#discussion_r144181296", "pull_request_url": "https://api.github.com/repos/pytorch/pytorch/pulls/3063", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/144181296"}, "html": {"href": "https://github.com/pytorch/pytorch/pull/3063#discussion_r144181296"}, "pull_request": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/3063"}}, "body_html": "<p>At some point we should factor this logic out, because there are going to be a number of other places where we need to detect and support a broadcast (e.g., Add)</p>", "body_text": "At some point we should factor this logic out, because there are going to be a number of other places where we need to detect and support a broadcast (e.g., Add)"}