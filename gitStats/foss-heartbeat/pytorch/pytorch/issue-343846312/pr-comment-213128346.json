{"url": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/213128346", "pull_request_review_id": 149899819, "id": 213128346, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIxMzEyODM0Ng==", "diff_hunk": "@@ -72,6 +72,40 @@ static void applyGesv(Tensor& b, Tensor& A, std::vector<int64_t> infos) {\n   }\n }\n \n+std::tuple<Tensor&,Tensor&> _gesv_single_out_cpu(\n+    Tensor& sol, Tensor& lu,\n+    const Tensor& self, const Tensor& A) {\n+#ifndef USE_LAPACK\n+  AT_ERROR(\"gesv : Lapack library not found in compile time\");\n+#endif\n+  int info = 0;\n+  Tensor temp_sol;\n+  Tensor temp_lu;\n+  prepareTensorsForLapack(self, sol, temp_sol);\n+  prepareTensorsForLapack(A, lu, temp_lu);", "path": "aten/src/ATen/native/Gesv.cpp", "position": null, "original_position": 32, "commit_id": "6c573ec2fe05deacdb8541c2229f21fa51d96e30", "original_commit_id": "5341fee0443fab16c4386954242d6bb1e0b30cf2", "user": {"login": "zou3519", "id": 5652049, "node_id": "MDQ6VXNlcjU2NTIwNDk=", "avatar_url": "https://avatars3.githubusercontent.com/u/5652049?v=4", "gravatar_id": "", "url": "https://api.github.com/users/zou3519", "html_url": "https://github.com/zou3519", "followers_url": "https://api.github.com/users/zou3519/followers", "following_url": "https://api.github.com/users/zou3519/following{/other_user}", "gists_url": "https://api.github.com/users/zou3519/gists{/gist_id}", "starred_url": "https://api.github.com/users/zou3519/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/zou3519/subscriptions", "organizations_url": "https://api.github.com/users/zou3519/orgs", "repos_url": "https://api.github.com/users/zou3519/repos", "events_url": "https://api.github.com/users/zou3519/events{/privacy}", "received_events_url": "https://api.github.com/users/zou3519/received_events", "type": "User", "site_admin": false}, "body": "nit: Would it be easier if `prepareTensorsForLapack` returned a Tensor& for the tensor that we're going to send into the `magmaGesv`? \r\n\r\ni.e.,\r\n`prepareTensorForLapack(A, lu, temp_lu)` would always returns a reference. It could be a reference to lu, or a reference to a temp_lu because lu was not suitable. I'm trying to get rid of the ternary expression you have in the dispatch because that is a little confusing.", "created_at": "2018-08-27T21:54:46Z", "updated_at": "2018-11-23T15:50:07Z", "html_url": "https://github.com/pytorch/pytorch/pull/9742#discussion_r213128346", "pull_request_url": "https://api.github.com/repos/pytorch/pytorch/pulls/9742", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/213128346"}, "html": {"href": "https://github.com/pytorch/pytorch/pull/9742#discussion_r213128346"}, "pull_request": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/9742"}}, "body_html": "<p>nit: Would it be easier if <code>prepareTensorsForLapack</code> returned a Tensor&amp; for the tensor that we're going to send into the <code>magmaGesv</code>?</p>\n<p>i.e.,<br>\n<code>prepareTensorForLapack(A, lu, temp_lu)</code> would always returns a reference. It could be a reference to lu, or a reference to a temp_lu because lu was not suitable. I'm trying to get rid of the ternary expression you have in the dispatch because that is a little confusing.</p>", "body_text": "nit: Would it be easier if prepareTensorsForLapack returned a Tensor& for the tensor that we're going to send into the magmaGesv?\ni.e.,\nprepareTensorForLapack(A, lu, temp_lu) would always returns a reference. It could be a reference to lu, or a reference to a temp_lu because lu was not suitable. I'm trying to get rid of the ternary expression you have in the dispatch because that is a little confusing."}