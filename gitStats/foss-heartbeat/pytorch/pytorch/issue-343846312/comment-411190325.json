{"url": "https://api.github.com/repos/pytorch/pytorch/issues/comments/411190325", "html_url": "https://github.com/pytorch/pytorch/pull/9742#issuecomment-411190325", "issue_url": "https://api.github.com/repos/pytorch/pytorch/issues/9742", "id": 411190325, "node_id": "MDEyOklzc3VlQ29tbWVudDQxMTE5MDMyNQ==", "user": {"login": "animesht", "id": 1777276, "node_id": "MDQ6VXNlcjE3NzcyNzY=", "avatar_url": "https://avatars3.githubusercontent.com/u/1777276?v=4", "gravatar_id": "", "url": "https://api.github.com/users/animesht", "html_url": "https://github.com/animesht", "followers_url": "https://api.github.com/users/animesht/followers", "following_url": "https://api.github.com/users/animesht/following{/other_user}", "gists_url": "https://api.github.com/users/animesht/gists{/gist_id}", "starred_url": "https://api.github.com/users/animesht/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/animesht/subscriptions", "organizations_url": "https://api.github.com/users/animesht/orgs", "repos_url": "https://api.github.com/users/animesht/repos", "events_url": "https://api.github.com/users/animesht/events{/privacy}", "received_events_url": "https://api.github.com/users/animesht/received_events", "type": "User", "site_admin": false}, "created_at": "2018-08-07T20:25:42Z", "updated_at": "2018-08-07T20:25:42Z", "author_association": "NONE", "body_html": "<ul>\n<li>I removed earlier transposes for the output tensors and moved the <code>checkErrors</code> call to immediately after the <code>AT_DISPATCH</code> block, so that any resulting errors are caught as early as possible. Until this point, <code>sol</code> and <code>lu</code> have not been modified (except the <code>resize_</code> if required), so it should be re-entrant safe. Before returning the final solution tensors, I transpose them in-place once. This should be fine since there is no way for the function to error out after this point. I switched from reassigning the reference <code>sol = sol.t()</code> to using the inplace transpose since the documentation mentions requirements for the output tensors:</li>\n</ul>\n<blockquote>\n<p>Irrespective of the original strides, the returned matrices X and LU will be transposed, i.e. with strides like B.contiguous().transpose(-1, -2).strides() and A.contiguous().transpose(-1, -2).strides() respectively.</p>\n</blockquote>\n<ul>\n<li>Since MSVC didn't seem to like <code>at::optional</code>, I switched to the following style:</li>\n</ul>\n<pre><code>Tensor temp_sol;\nif (cond) { temp_sol = ... }\n...\nif (temp_sol.defined()) {...}\n</code></pre>", "body_text": "I removed earlier transposes for the output tensors and moved the checkErrors call to immediately after the AT_DISPATCH block, so that any resulting errors are caught as early as possible. Until this point, sol and lu have not been modified (except the resize_ if required), so it should be re-entrant safe. Before returning the final solution tensors, I transpose them in-place once. This should be fine since there is no way for the function to error out after this point. I switched from reassigning the reference sol = sol.t() to using the inplace transpose since the documentation mentions requirements for the output tensors:\n\n\nIrrespective of the original strides, the returned matrices X and LU will be transposed, i.e. with strides like B.contiguous().transpose(-1, -2).strides() and A.contiguous().transpose(-1, -2).strides() respectively.\n\n\nSince MSVC didn't seem to like at::optional, I switched to the following style:\n\nTensor temp_sol;\nif (cond) { temp_sol = ... }\n...\nif (temp_sol.defined()) {...}", "body": "- I removed earlier transposes for the output tensors and moved the `checkErrors` call to immediately after the `AT_DISPATCH` block, so that any resulting errors are caught as early as possible. Until this point, `sol` and `lu` have not been modified (except the `resize_` if required), so it should be re-entrant safe. Before returning the final solution tensors, I transpose them in-place once. This should be fine since there is no way for the function to error out after this point. I switched from reassigning the reference `sol = sol.t()` to using the inplace transpose since the documentation mentions requirements for the output tensors:\r\n\r\n> Irrespective of the original strides, the returned matrices X and LU will be transposed, i.e. with strides like B.contiguous().transpose(-1, -2).strides() and A.contiguous().transpose(-1, -2).strides() respectively.\r\n\r\n- Since MSVC didn't seem to like `at::optional`, I switched to the following style:\r\n```\r\nTensor temp_sol;\r\nif (cond) { temp_sol = ... }\r\n...\r\nif (temp_sol.defined()) {...}"}