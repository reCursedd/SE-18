{"url": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/210701261", "pull_request_review_id": 146973781, "id": 210701261, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIxMDcwMTI2MQ==", "diff_hunk": "@@ -72,6 +78,111 @@ static void applyGesv(Tensor& b, Tensor& A, std::vector<int64_t> infos) {\n   }\n }\n \n+std::tuple<Tensor&,Tensor&> _gesv_single_out_cpu(\n+    Tensor& sol, Tensor& lu,\n+    const Tensor& self, const Tensor& A) {\n+#ifndef USE_LAPACK\n+  AT_ERROR(\"gesv : Lapack library not found in compile time\");\n+#endif\n+  /* gesv takes two tensors (self, A) and returns (sol, lu).\n+   * The output Tensors (sol, lu) may be the same as input Tensors (self, A)\n+   *\n+   * Before passing pointers into Lapack, we need to ensure that:\n+   * (i)  self and A are represented in column major format\n+   * (ii) These pointers point to contiguous data for self and A.\n+   *\n+   * For 2D matrices, A.t() and self.t() represent their column major formats\n+   *\n+   * Case 1) The output tensor has the correct shape, but its elements do not\n+   *         form a contiguous chunk of memory (i.e., it and its transpose are\n+   *         not contiguous) eg. torch.gesv(... , out=(n[::2], ...)):\n+   *         - Since shape is correct, we must not resize_ it. Instead, we\n+   *           clone the input tensor into a buffer, use the buffer for Lapack\n+   *           and finally copy the buffer to the output tensor\n+   *\n+   * Note: In both cases below, we resize_ if required. This helps to:\n+   *       (i)  Make output tensors bigger and contiguous, if required, and\n+   *       (ii) Unsqueeze potential 1D `sol`, eg. torch.gesv(b, A, out=(b, A))\n+   *\n+   * Case 2) output_tensor.t() is contiguous (tc_sol / tc_lu is true):\n+   *         a) &input_tensor == &output_tensor:\n+   *            - it's fine to use output_tensor.data() as-is. Do nothing.\n+   *              (we need to transpose input_tensor for column-major anyway)\n+   *         b) &input_tensor != &output_tensor:\n+   *            - copy input_tensor.t() to output_tensor.t()\n+   *\n+   * Case 3) output_tensor.t() is not contiguous:\n+   *         - resize_ should make non-contig/incorrectly-sized tensors usable\n+   *         a) &input_tensor == &output_tensor:\n+   *            - clone and copy input_tensor.t() to output_tensor (same tensor)\n+   *         b) &input_tensor != &output_tensor:\n+   *            - copy input_tensor.t() to output_tensor\n+   */", "path": "aten/src/ATen/native/Gesv.cpp", "position": null, "original_position": 70, "commit_id": "6c573ec2fe05deacdb8541c2229f21fa51d96e30", "original_commit_id": "5ea2e77941b971e43e267274a75620a666f3c0fc", "user": {"login": "zou3519", "id": 5652049, "node_id": "MDQ6VXNlcjU2NTIwNDk=", "avatar_url": "https://avatars3.githubusercontent.com/u/5652049?v=4", "gravatar_id": "", "url": "https://api.github.com/users/zou3519", "html_url": "https://github.com/zou3519", "followers_url": "https://api.github.com/users/zou3519/followers", "following_url": "https://api.github.com/users/zou3519/following{/other_user}", "gists_url": "https://api.github.com/users/zou3519/gists{/gist_id}", "starred_url": "https://api.github.com/users/zou3519/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/zou3519/subscriptions", "organizations_url": "https://api.github.com/users/zou3519/orgs", "repos_url": "https://api.github.com/users/zou3519/repos", "events_url": "https://api.github.com/users/zou3519/events{/privacy}", "received_events_url": "https://api.github.com/users/zou3519/received_events", "type": "User", "site_admin": false}, "body": "Why are there so many cases? The original `THTensor_gesv(...)`code is much simpler than this and doesn't have `.t()` and `.t_()` everywhere. Did you improve on the original implementation?", "created_at": "2018-08-16T18:41:41Z", "updated_at": "2018-11-23T15:49:32Z", "html_url": "https://github.com/pytorch/pytorch/pull/9742#discussion_r210701261", "pull_request_url": "https://api.github.com/repos/pytorch/pytorch/pulls/9742", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/210701261"}, "html": {"href": "https://github.com/pytorch/pytorch/pull/9742#discussion_r210701261"}, "pull_request": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/9742"}}, "body_html": "<p>Why are there so many cases? The original <code>THTensor_gesv(...)</code>code is much simpler than this and doesn't have <code>.t()</code> and <code>.t_()</code> everywhere. Did you improve on the original implementation?</p>", "body_text": "Why are there so many cases? The original THTensor_gesv(...)code is much simpler than this and doesn't have .t() and .t_() everywhere. Did you improve on the original implementation?"}