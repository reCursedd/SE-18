{"url": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/207046012", "pull_request_review_id": 142580378, "id": 207046012, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwNzA0NjAxMg==", "diff_hunk": "@@ -72,6 +78,63 @@ static void applyGesv(Tensor& b, Tensor& A, std::vector<int64_t> infos) {\n   }\n }\n \n+std::tuple<Tensor&,Tensor&> _gesv_single_out_cpu(\n+    Tensor& sol, Tensor& lu,\n+    const Tensor& self, const Tensor& A) {\n+#ifndef USE_LAPACK\n+  AT_ERROR(\"gesv: LAPACK library not found in compilation\");\n+#endif\n+  int64_t bx = self.size(0);\n+  int64_t by = (self.dim() == 1) ? 1 : self.size(1);\n+  int64_t ax = A.size(0);\n+  int64_t ay = A.size(1);\n+  int info = 0;\n+\n+  /* Init to column major format. `sol` and `lu` need to be contiguous\n+   * since we pass sol.data() and lu.data() to Lapack */\n+  bool tc = sol.dim() == 2 && isTransposeContiguous(sol);\n+  if (tc) {\n+    // if transpose of output tensor is contiguous, use it\n+    sol.t_();\n+  }\n+\n+  sol.resize_({by, bx});\n+  if (self.data_ptr() == sol.data_ptr()) {", "path": "aten/src/ATen/native/Gesv.cpp", "position": null, "original_position": 47, "commit_id": "6c573ec2fe05deacdb8541c2229f21fa51d96e30", "original_commit_id": "a4ae8617d9d37adb709942b6fbace6af0d05842f", "user": {"login": "SsnL", "id": 5674597, "node_id": "MDQ6VXNlcjU2NzQ1OTc=", "avatar_url": "https://avatars2.githubusercontent.com/u/5674597?v=4", "gravatar_id": "", "url": "https://api.github.com/users/SsnL", "html_url": "https://github.com/SsnL", "followers_url": "https://api.github.com/users/SsnL/followers", "following_url": "https://api.github.com/users/SsnL/following{/other_user}", "gists_url": "https://api.github.com/users/SsnL/gists{/gist_id}", "starred_url": "https://api.github.com/users/SsnL/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/SsnL/subscriptions", "organizations_url": "https://api.github.com/users/SsnL/orgs", "repos_url": "https://api.github.com/users/SsnL/repos", "events_url": "https://api.github.com/users/SsnL/events{/privacy}", "received_events_url": "https://api.github.com/users/SsnL/received_events", "type": "User", "site_admin": false}, "body": "This is actually a much worse check. Because now if (1) `sol` is transpose contiguous, (2) `sol` and `self` have the same `data_ptr`, but (3) `self` has different size and strides so it isn't transpose contiguous, you are getting nonsense output. To do the real check, you need to compare sizes and strides too (and some cases strides don't matter, e.g., at dimensions with size `<= 0`). So it is kinda hard. That's why I commented that just checking the address is fine. \r\n\r\nAlso, what I'm really curious is: does the code still work expectedly in all cases if you remove this optimization?", "created_at": "2018-08-01T21:58:34Z", "updated_at": "2018-11-23T15:48:35Z", "html_url": "https://github.com/pytorch/pytorch/pull/9742#discussion_r207046012", "pull_request_url": "https://api.github.com/repos/pytorch/pytorch/pulls/9742", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/207046012"}, "html": {"href": "https://github.com/pytorch/pytorch/pull/9742#discussion_r207046012"}, "pull_request": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/9742"}}, "body_html": "<p>This is actually a much worse check. Because now if (1) <code>sol</code> is transpose contiguous, (2) <code>sol</code> and <code>self</code> have the same <code>data_ptr</code>, but (3) <code>self</code> has different size and strides so it isn't transpose contiguous, you are getting nonsense output. To do the real check, you need to compare sizes and strides too (and some cases strides don't matter, e.g., at dimensions with size <code>&lt;= 0</code>). So it is kinda hard. That's why I commented that just checking the address is fine.</p>\n<p>Also, what I'm really curious is: does the code still work expectedly in all cases if you remove this optimization?</p>", "body_text": "This is actually a much worse check. Because now if (1) sol is transpose contiguous, (2) sol and self have the same data_ptr, but (3) self has different size and strides so it isn't transpose contiguous, you are getting nonsense output. To do the real check, you need to compare sizes and strides too (and some cases strides don't matter, e.g., at dimensions with size <= 0). So it is kinda hard. That's why I commented that just checking the address is fine.\nAlso, what I'm really curious is: does the code still work expectedly in all cases if you remove this optimization?"}