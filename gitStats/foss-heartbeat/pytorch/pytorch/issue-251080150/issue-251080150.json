{"url": "https://api.github.com/repos/pytorch/pytorch/issues/2478", "repository_url": "https://api.github.com/repos/pytorch/pytorch", "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/2478/labels{/name}", "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/2478/comments", "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/2478/events", "html_url": "https://github.com/pytorch/pytorch/issues/2478", "id": 251080150, "node_id": "MDU6SXNzdWUyNTEwODAxNTA=", "number": 2478, "title": "ReduceLROnPlateau with a naive Backtracking", "user": {"login": "Taha-Bahadori", "id": 31113375, "node_id": "MDQ6VXNlcjMxMTEzMzc1", "avatar_url": "https://avatars3.githubusercontent.com/u/31113375?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Taha-Bahadori", "html_url": "https://github.com/Taha-Bahadori", "followers_url": "https://api.github.com/users/Taha-Bahadori/followers", "following_url": "https://api.github.com/users/Taha-Bahadori/following{/other_user}", "gists_url": "https://api.github.com/users/Taha-Bahadori/gists{/gist_id}", "starred_url": "https://api.github.com/users/Taha-Bahadori/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Taha-Bahadori/subscriptions", "organizations_url": "https://api.github.com/users/Taha-Bahadori/orgs", "repos_url": "https://api.github.com/users/Taha-Bahadori/repos", "events_url": "https://api.github.com/users/Taha-Bahadori/events{/privacy}", "received_events_url": "https://api.github.com/users/Taha-Bahadori/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2017-08-17T21:39:17Z", "updated_at": "2017-08-25T00:29:04Z", "closed_at": null, "author_association": "NONE", "body_html": "<p>Is it possible to implement a simple backtracking for the <code>ReduceLROnPlateau</code> module?<br>\nThat is, store the best model coefficients and reload it upon rate reduction.</p>\n<p>In my experiments, this helps speed up learning, though it might be expensive for very large models.</p>", "body_text": "Is it possible to implement a simple backtracking for the ReduceLROnPlateau module?\nThat is, store the best model coefficients and reload it upon rate reduction.\nIn my experiments, this helps speed up learning, though it might be expensive for very large models.", "body": "Is it possible to implement a simple backtracking for the `ReduceLROnPlateau` module?  \r\nThat is, store the best model coefficients and reload it upon rate reduction.\r\n\r\nIn my experiments, this helps speed up learning, though it might be expensive for very large models."}