{"url": "https://api.github.com/repos/pytorch/pytorch/issues/comments/324406673", "html_url": "https://github.com/pytorch/pytorch/issues/2478#issuecomment-324406673", "issue_url": "https://api.github.com/repos/pytorch/pytorch/issues/2478", "id": 324406673, "node_id": "MDEyOklzc3VlQ29tbWVudDMyNDQwNjY3Mw==", "user": {"login": "Jiaming-Liu", "id": 16099575, "node_id": "MDQ6VXNlcjE2MDk5NTc1", "avatar_url": "https://avatars3.githubusercontent.com/u/16099575?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Jiaming-Liu", "html_url": "https://github.com/Jiaming-Liu", "followers_url": "https://api.github.com/users/Jiaming-Liu/followers", "following_url": "https://api.github.com/users/Jiaming-Liu/following{/other_user}", "gists_url": "https://api.github.com/users/Jiaming-Liu/gists{/gist_id}", "starred_url": "https://api.github.com/users/Jiaming-Liu/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Jiaming-Liu/subscriptions", "organizations_url": "https://api.github.com/users/Jiaming-Liu/orgs", "repos_url": "https://api.github.com/users/Jiaming-Liu/repos", "events_url": "https://api.github.com/users/Jiaming-Liu/events{/privacy}", "received_events_url": "https://api.github.com/users/Jiaming-Liu/received_events", "type": "User", "site_admin": false}, "created_at": "2017-08-23T17:30:50Z", "updated_at": "2017-08-25T00:29:04Z", "author_association": "CONTRIBUTOR", "body_html": "<p>Hi, I am the puller of <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load issue title\" data-id=\"224620853\" data-permission-text=\"Issue title is private\" data-url=\"https://github.com/pytorch/pytorch/issues/1370\" data-hovercard-type=\"pull_request\" data-hovercard-url=\"/pytorch/pytorch/pull/1370/hovercard\" href=\"https://github.com/pytorch/pytorch/pull/1370\">#1370</a><br>\nI currently do this via some code in the main loop. Since ReduceLROnPlateau only has access of the optimizer, and optimizer.state_dict() does NOT include its parameters (<del>I guess this is some kind of bug</del>), backtracking could not be done quite naturally.</p>\n<pre><code># after optim.load_state_dict( ... )\nIn [17]: optim.state_dict()\nOut[17]:\n{'param_groups': [{'betas': (0.9, 0.999),\n   'eps': 1e-08,\n   'lr': 0.001,\n   'params': [139683866380144,\n    139683866381584,\n    139683866379472,\n    139683866381680],\n   'weight_decay': 0}],\n 'state': {}}\n</code></pre>\n<p><a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=1310570\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/soumith\">@soumith</a> any idea?</p>\n<p>Edit: I believe that optim.state_dict does not contain all parameter of a model (like BN's running average mean&amp;std). Therefore we still need to have access to nn.Module even without this issue.</p>", "body_text": "Hi, I am the puller of #1370\nI currently do this via some code in the main loop. Since ReduceLROnPlateau only has access of the optimizer, and optimizer.state_dict() does NOT include its parameters (I guess this is some kind of bug), backtracking could not be done quite naturally.\n# after optim.load_state_dict( ... )\nIn [17]: optim.state_dict()\nOut[17]:\n{'param_groups': [{'betas': (0.9, 0.999),\n   'eps': 1e-08,\n   'lr': 0.001,\n   'params': [139683866380144,\n    139683866381584,\n    139683866379472,\n    139683866381680],\n   'weight_decay': 0}],\n 'state': {}}\n\n@soumith any idea?\nEdit: I believe that optim.state_dict does not contain all parameter of a model (like BN's running average mean&std). Therefore we still need to have access to nn.Module even without this issue.", "body": "Hi, I am the puller of https://github.com/pytorch/pytorch/pull/1370\r\nI currently do this via some code in the main loop. Since ReduceLROnPlateau only has access of the optimizer, and optimizer.state_dict() does NOT include its parameters (~~I guess this is some kind of bug~~), backtracking could not be done quite naturally.\r\n\r\n```\r\n# after optim.load_state_dict( ... )\r\nIn [17]: optim.state_dict()\r\nOut[17]:\r\n{'param_groups': [{'betas': (0.9, 0.999),\r\n   'eps': 1e-08,\r\n   'lr': 0.001,\r\n   'params': [139683866380144,\r\n    139683866381584,\r\n    139683866379472,\r\n    139683866381680],\r\n   'weight_decay': 0}],\r\n 'state': {}}\r\n```\r\n\r\n@soumith any idea?\r\n\r\nEdit: I believe that optim.state_dict does not contain all parameter of a model (like BN's running average mean&std). Therefore we still need to have access to nn.Module even without this issue."}