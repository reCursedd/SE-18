{"url": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/204773946", "pull_request_review_id": 139912462, "id": 204773946, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwNDc3Mzk0Ng==", "diff_hunk": "@@ -345,17 +345,13 @@ Tensor _prod(const Tensor &self, int64_t dim_, bool keepdim) {\n \n Tensor& logsumexp_out(Tensor& result, const Tensor &self, int64_t dim_, bool keepdim) {\n   int64_t dim = maybe_wrap_dim(dim_, self.dim());\n-  // can't take max of empty tensor.\n-  if (self.numel() != 0) {\n-    auto maxes = at::max_values(self, dim, true);\n-    result = at::where((maxes == INFINITY).__or__(maxes == -INFINITY),\n-                       maxes,\n-                       maxes + at::log(at::sum(at::exp(self - maxes), dim, true)));\n-  } else {\n-    result = at::log(at::sum(at::exp(self), dim, true));\n-  }\n-  if (! keepdim)\n-    result.squeeze_(dim);\n+  // can't take max of empty tensor\n+  AT_CHECK(self.numel() != 0, \"logsumexp only works on nonempty tensors\");\n+  auto maxes = at::max_values(self, dim, true);\n+  auto maxes_squeezed = (keepdim ? maxes : maxes.squeeze(dim));\n+  maxes_squeezed.masked_scatter_(maxes_squeezed.abs() == INFINITY, at::zeros({1}, maxes_squeezed.options()).expand_as(maxes_squeezed));", "path": "aten/src/ATen/native/ReduceOps.cpp", "position": null, "original_position": 19, "commit_id": "71a56f5b243b625245b6b916ef77a7cceb8443df", "original_commit_id": "7b622cf02717857ee6f7019618a63de607118a6a", "user": {"login": "t-vi", "id": 20787943, "node_id": "MDQ6VXNlcjIwNzg3OTQz", "avatar_url": "https://avatars2.githubusercontent.com/u/20787943?v=4", "gravatar_id": "", "url": "https://api.github.com/users/t-vi", "html_url": "https://github.com/t-vi", "followers_url": "https://api.github.com/users/t-vi/followers", "following_url": "https://api.github.com/users/t-vi/following{/other_user}", "gists_url": "https://api.github.com/users/t-vi/gists{/gist_id}", "starred_url": "https://api.github.com/users/t-vi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/t-vi/subscriptions", "organizations_url": "https://api.github.com/users/t-vi/orgs", "repos_url": "https://api.github.com/users/t-vi/repos", "events_url": "https://api.github.com/users/t-vi/events{/privacy}", "received_events_url": "https://api.github.com/users/t-vi/received_events", "type": "User", "site_admin": false}, "body": "Hmhm. I had previously worked on the result instead of the maxes, here masked_fil_l would be best.", "created_at": "2018-07-24T14:17:05Z", "updated_at": "2018-11-23T15:47:57Z", "html_url": "https://github.com/pytorch/pytorch/pull/9755#discussion_r204773946", "pull_request_url": "https://api.github.com/repos/pytorch/pytorch/pulls/9755", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/204773946"}, "html": {"href": "https://github.com/pytorch/pytorch/pull/9755#discussion_r204773946"}, "pull_request": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/9755"}}, "body_html": "<p>Hmhm. I had previously worked on the result instead of the maxes, here masked_fil_l would be best.</p>", "body_text": "Hmhm. I had previously worked on the result instead of the maxes, here masked_fil_l would be best.", "in_reply_to_id": 204766260}