{"url": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/93502917", "pull_request_review_id": 14032290, "id": 93502917, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDkzNTAyOTE3", "diff_hunk": "@@ -0,0 +1,78 @@\n+from .module import Module\n+from torch.autograd import Function\n+\n+\n+class PixelShuffle(Module):\n+    \"\"\"Rearranges elements in a tensor of shape [*, C*r^2, H, W] to a\n+    tensor of shape [C, H*r, W*r]. This is useful for implementing\n+    efficient sub-pixel convolution with a stride of 1/r.\n+    \"Real-Time Single Image and Video Super-Resolution Using an Efficient\n+    Sub-Pixel Convolutional Neural Network\" - Shi et. al (2016) for more details\n+    Args:\n+        upscale_factor: factor to increase spatial resolution by\n+    Input Shape: [*, channels*upscale_factor^2, height, width]\n+    Output Shape:[*, channels, height*upscale_factor, width*upscale_factor]\n+    Examples:\n+        >>> ps = nn.PixelShuffle(3)\n+        >>> input = autograd.Variable(torch.Tensor(1, 9, 4, 4))\n+        >>> output = m(input)\n+        >>> print(output.size())\n+    \"\"\"\n+\n+    def __init__(self, upscale_factor):\n+        super(PixelShuffle, self).__init__()\n+        self.upscale_factor = upscale_factor\n+\n+    def forward(self, input):\n+        return _PixelShuffleFunction(self.upscale_factor)(input)\n+\n+    def __repr__(self):\n+        return self.__class__.__name__ + ' (upscale_factor=' + str(self.upscale_factor) + ')'\n+\n+\n+class _PixelShuffleFunction(Function):", "path": "torch/nn/modules/pixelshuffle.py", "position": null, "original_position": 33, "commit_id": "c1914f2fc3f2e9469bb96b10e3fb2cb724cdb6e5", "original_commit_id": "476a7c0254af82eb1fd8fbb9c6ca055a9e481b8f", "user": {"login": "apaszke", "id": 4583066, "node_id": "MDQ6VXNlcjQ1ODMwNjY=", "avatar_url": "https://avatars3.githubusercontent.com/u/4583066?v=4", "gravatar_id": "", "url": "https://api.github.com/users/apaszke", "html_url": "https://github.com/apaszke", "followers_url": "https://api.github.com/users/apaszke/followers", "following_url": "https://api.github.com/users/apaszke/following{/other_user}", "gists_url": "https://api.github.com/users/apaszke/gists{/gist_id}", "starred_url": "https://api.github.com/users/apaszke/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/apaszke/subscriptions", "organizations_url": "https://api.github.com/users/apaszke/orgs", "repos_url": "https://api.github.com/users/apaszke/repos", "events_url": "https://api.github.com/users/apaszke/events{/privacy}", "received_events_url": "https://api.github.com/users/apaszke/received_events", "type": "User", "site_admin": false}, "body": "Could you move this to `torch/nn/functions` dir? Also, you don't need to put a leading underscore.", "created_at": "2016-12-21T19:25:11Z", "updated_at": "2018-11-23T15:32:03Z", "html_url": "https://github.com/pytorch/pytorch/pull/338#discussion_r93502917", "pull_request_url": "https://api.github.com/repos/pytorch/pytorch/pulls/338", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/93502917"}, "html": {"href": "https://github.com/pytorch/pytorch/pull/338#discussion_r93502917"}, "pull_request": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/338"}}, "body_html": "<p>Could you move this to <code>torch/nn/functions</code> dir? Also, you don't need to put a leading underscore.</p>", "body_text": "Could you move this to torch/nn/functions dir? Also, you don't need to put a leading underscore."}