{"url": "https://api.github.com/repos/pytorch/pytorch/pulls/1802", "id": 125590780, "node_id": "MDExOlB1bGxSZXF1ZXN0MTI1NTkwNzgw", "html_url": "https://github.com/pytorch/pytorch/pull/1802", "diff_url": "https://github.com/pytorch/pytorch/pull/1802.diff", "patch_url": "https://github.com/pytorch/pytorch/pull/1802.patch", "issue_url": "https://api.github.com/repos/pytorch/pytorch/issues/1802", "number": 1802, "state": "open", "locked": false, "title": "added simple initializer to some modules", "user": {"login": "moskomule", "id": 11806234, "node_id": "MDQ6VXNlcjExODA2MjM0", "avatar_url": "https://avatars3.githubusercontent.com/u/11806234?v=4", "gravatar_id": "", "url": "https://api.github.com/users/moskomule", "html_url": "https://github.com/moskomule", "followers_url": "https://api.github.com/users/moskomule/followers", "following_url": "https://api.github.com/users/moskomule/following{/other_user}", "gists_url": "https://api.github.com/users/moskomule/gists{/gist_id}", "starred_url": "https://api.github.com/users/moskomule/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/moskomule/subscriptions", "organizations_url": "https://api.github.com/users/moskomule/orgs", "repos_url": "https://api.github.com/users/moskomule/repos", "events_url": "https://api.github.com/users/moskomule/events{/privacy}", "received_events_url": "https://api.github.com/users/moskomule/received_events", "type": "User", "site_admin": false}, "body": "Hi, I thought `nn.init` is great but initializing variables in layers using `nn.init` is a bit complicated. So I try to implement easier way of initialization like below. \r\n\r\n```python\r\nm = nn.Linear(20, 30, initializer=lambda x: init.xavier_normal(x, 1))\r\n```\r\n\r\nI do not think this is the best way and thus implemented only for `Linear`. If you think this is useful, give me advice and help me. Thank you.", "created_at": "2017-06-14T13:06:39Z", "updated_at": "2018-11-23T15:34:11Z", "closed_at": null, "merged_at": null, "merge_commit_sha": "662a1830b6830ca623d022369788c71acd685623", "assignee": null, "assignees": [], "requested_reviewers": [], "requested_teams": [], "labels": [], "milestone": null, "commits_url": "https://api.github.com/repos/pytorch/pytorch/pulls/1802/commits", "review_comments_url": "https://api.github.com/repos/pytorch/pytorch/pulls/1802/comments", "review_comment_url": "https://api.github.com/repos/pytorch/pytorch/pulls/comments{/number}", "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/1802/comments", "statuses_url": "https://api.github.com/repos/pytorch/pytorch/statuses/e3fbc5bef88842332aea5ffcd1e17a825c6ee672", "head": {"label": "moskomule:initialization", "ref": "initialization", "sha": "e3fbc5bef88842332aea5ffcd1e17a825c6ee672", "user": {"login": "moskomule", "id": 11806234, "node_id": "MDQ6VXNlcjExODA2MjM0", "avatar_url": "https://avatars3.githubusercontent.com/u/11806234?v=4", "gravatar_id": "", "url": "https://api.github.com/users/moskomule", "html_url": "https://github.com/moskomule", "followers_url": "https://api.github.com/users/moskomule/followers", "following_url": "https://api.github.com/users/moskomule/following{/other_user}", "gists_url": "https://api.github.com/users/moskomule/gists{/gist_id}", "starred_url": "https://api.github.com/users/moskomule/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/moskomule/subscriptions", "organizations_url": "https://api.github.com/users/moskomule/orgs", "repos_url": "https://api.github.com/users/moskomule/repos", "events_url": "https://api.github.com/users/moskomule/events{/privacy}", "received_events_url": "https://api.github.com/users/moskomule/received_events", "type": "User", "site_admin": false}, "repo": {"id": 94329652, "node_id": "MDEwOlJlcG9zaXRvcnk5NDMyOTY1Mg==", "name": "pytorch", "full_name": "moskomule/pytorch", "private": false, "owner": {"login": "moskomule", "id": 11806234, "node_id": "MDQ6VXNlcjExODA2MjM0", "avatar_url": "https://avatars3.githubusercontent.com/u/11806234?v=4", "gravatar_id": "", "url": "https://api.github.com/users/moskomule", "html_url": "https://github.com/moskomule", "followers_url": "https://api.github.com/users/moskomule/followers", "following_url": "https://api.github.com/users/moskomule/following{/other_user}", "gists_url": "https://api.github.com/users/moskomule/gists{/gist_id}", "starred_url": "https://api.github.com/users/moskomule/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/moskomule/subscriptions", "organizations_url": "https://api.github.com/users/moskomule/orgs", "repos_url": "https://api.github.com/users/moskomule/repos", "events_url": "https://api.github.com/users/moskomule/events{/privacy}", "received_events_url": "https://api.github.com/users/moskomule/received_events", "type": "User", "site_admin": false}, "html_url": "https://github.com/moskomule/pytorch", "description": "Tensors and Dynamic neural networks in Python  with strong GPU acceleration", "fork": true, "url": "https://api.github.com/repos/moskomule/pytorch", "forks_url": "https://api.github.com/repos/moskomule/pytorch/forks", "keys_url": "https://api.github.com/repos/moskomule/pytorch/keys{/key_id}", "collaborators_url": "https://api.github.com/repos/moskomule/pytorch/collaborators{/collaborator}", "teams_url": "https://api.github.com/repos/moskomule/pytorch/teams", "hooks_url": "https://api.github.com/repos/moskomule/pytorch/hooks", "issue_events_url": "https://api.github.com/repos/moskomule/pytorch/issues/events{/number}", "events_url": "https://api.github.com/repos/moskomule/pytorch/events", "assignees_url": "https://api.github.com/repos/moskomule/pytorch/assignees{/user}", "branches_url": "https://api.github.com/repos/moskomule/pytorch/branches{/branch}", "tags_url": "https://api.github.com/repos/moskomule/pytorch/tags", "blobs_url": "https://api.github.com/repos/moskomule/pytorch/git/blobs{/sha}", "git_tags_url": "https://api.github.com/repos/moskomule/pytorch/git/tags{/sha}", "git_refs_url": "https://api.github.com/repos/moskomule/pytorch/git/refs{/sha}", "trees_url": "https://api.github.com/repos/moskomule/pytorch/git/trees{/sha}", "statuses_url": "https://api.github.com/repos/moskomule/pytorch/statuses/{sha}", "languages_url": "https://api.github.com/repos/moskomule/pytorch/languages", "stargazers_url": "https://api.github.com/repos/moskomule/pytorch/stargazers", "contributors_url": "https://api.github.com/repos/moskomule/pytorch/contributors", "subscribers_url": "https://api.github.com/repos/moskomule/pytorch/subscribers", "subscription_url": "https://api.github.com/repos/moskomule/pytorch/subscription", "commits_url": "https://api.github.com/repos/moskomule/pytorch/commits{/sha}", "git_commits_url": "https://api.github.com/repos/moskomule/pytorch/git/commits{/sha}", "comments_url": "https://api.github.com/repos/moskomule/pytorch/comments{/number}", "issue_comment_url": "https://api.github.com/repos/moskomule/pytorch/issues/comments{/number}", "contents_url": "https://api.github.com/repos/moskomule/pytorch/contents/{+path}", "compare_url": "https://api.github.com/repos/moskomule/pytorch/compare/{base}...{head}", "merges_url": "https://api.github.com/repos/moskomule/pytorch/merges", "archive_url": "https://api.github.com/repos/moskomule/pytorch/{archive_format}{/ref}", "downloads_url": "https://api.github.com/repos/moskomule/pytorch/downloads", "issues_url": "https://api.github.com/repos/moskomule/pytorch/issues{/number}", "pulls_url": "https://api.github.com/repos/moskomule/pytorch/pulls{/number}", "milestones_url": "https://api.github.com/repos/moskomule/pytorch/milestones{/number}", "notifications_url": "https://api.github.com/repos/moskomule/pytorch/notifications{?since,all,participating}", "labels_url": "https://api.github.com/repos/moskomule/pytorch/labels{/name}", "releases_url": "https://api.github.com/repos/moskomule/pytorch/releases{/id}", "deployments_url": "https://api.github.com/repos/moskomule/pytorch/deployments", "created_at": "2017-06-14T12:41:11Z", "updated_at": "2018-07-10T04:46:03Z", "pushed_at": "2018-07-10T04:46:00Z", "git_url": "git://github.com/moskomule/pytorch.git", "ssh_url": "git@github.com:moskomule/pytorch.git", "clone_url": "https://github.com/moskomule/pytorch.git", "svn_url": "https://github.com/moskomule/pytorch", "homepage": "http://pytorch.org", "size": 61587, "stargazers_count": 0, "watchers_count": 0, "language": "C++", "has_issues": false, "has_projects": true, "has_downloads": true, "has_wiki": true, "has_pages": false, "forks_count": 0, "mirror_url": null, "archived": false, "open_issues_count": 0, "license": {"key": "other", "name": "Other", "spdx_id": "NOASSERTION", "url": null, "node_id": "MDc6TGljZW5zZTA="}, "forks": 0, "open_issues": 0, "watchers": 0, "default_branch": "master"}}, "base": {"label": "pytorch:master", "ref": "master", "sha": "f9d002d9f7c5f9ec1a5f097887b9120a4b0160f1", "user": {"login": "pytorch", "id": 21003710, "node_id": "MDEyOk9yZ2FuaXphdGlvbjIxMDAzNzEw", "avatar_url": "https://avatars3.githubusercontent.com/u/21003710?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pytorch", "html_url": "https://github.com/pytorch", "followers_url": "https://api.github.com/users/pytorch/followers", "following_url": "https://api.github.com/users/pytorch/following{/other_user}", "gists_url": "https://api.github.com/users/pytorch/gists{/gist_id}", "starred_url": "https://api.github.com/users/pytorch/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pytorch/subscriptions", "organizations_url": "https://api.github.com/users/pytorch/orgs", "repos_url": "https://api.github.com/users/pytorch/repos", "events_url": "https://api.github.com/users/pytorch/events{/privacy}", "received_events_url": "https://api.github.com/users/pytorch/received_events", "type": "Organization", "site_admin": false}, "repo": {"id": 65600975, "node_id": "MDEwOlJlcG9zaXRvcnk2NTYwMDk3NQ==", "name": "pytorch", "full_name": "pytorch/pytorch", "private": false, "owner": {"login": "pytorch", "id": 21003710, "node_id": "MDEyOk9yZ2FuaXphdGlvbjIxMDAzNzEw", "avatar_url": "https://avatars3.githubusercontent.com/u/21003710?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pytorch", "html_url": "https://github.com/pytorch", "followers_url": "https://api.github.com/users/pytorch/followers", "following_url": "https://api.github.com/users/pytorch/following{/other_user}", "gists_url": "https://api.github.com/users/pytorch/gists{/gist_id}", "starred_url": "https://api.github.com/users/pytorch/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pytorch/subscriptions", "organizations_url": "https://api.github.com/users/pytorch/orgs", "repos_url": "https://api.github.com/users/pytorch/repos", "events_url": "https://api.github.com/users/pytorch/events{/privacy}", "received_events_url": "https://api.github.com/users/pytorch/received_events", "type": "Organization", "site_admin": false}, "html_url": "https://github.com/pytorch/pytorch", "description": "Tensors and Dynamic neural networks in Python  with strong GPU acceleration", "fork": false, "url": "https://api.github.com/repos/pytorch/pytorch", "forks_url": "https://api.github.com/repos/pytorch/pytorch/forks", "keys_url": "https://api.github.com/repos/pytorch/pytorch/keys{/key_id}", "collaborators_url": "https://api.github.com/repos/pytorch/pytorch/collaborators{/collaborator}", "teams_url": "https://api.github.com/repos/pytorch/pytorch/teams", "hooks_url": "https://api.github.com/repos/pytorch/pytorch/hooks", "issue_events_url": "https://api.github.com/repos/pytorch/pytorch/issues/events{/number}", "events_url": "https://api.github.com/repos/pytorch/pytorch/events", "assignees_url": "https://api.github.com/repos/pytorch/pytorch/assignees{/user}", "branches_url": "https://api.github.com/repos/pytorch/pytorch/branches{/branch}", "tags_url": "https://api.github.com/repos/pytorch/pytorch/tags", "blobs_url": "https://api.github.com/repos/pytorch/pytorch/git/blobs{/sha}", "git_tags_url": "https://api.github.com/repos/pytorch/pytorch/git/tags{/sha}", "git_refs_url": "https://api.github.com/repos/pytorch/pytorch/git/refs{/sha}", "trees_url": "https://api.github.com/repos/pytorch/pytorch/git/trees{/sha}", "statuses_url": "https://api.github.com/repos/pytorch/pytorch/statuses/{sha}", "languages_url": "https://api.github.com/repos/pytorch/pytorch/languages", "stargazers_url": "https://api.github.com/repos/pytorch/pytorch/stargazers", "contributors_url": "https://api.github.com/repos/pytorch/pytorch/contributors", "subscribers_url": "https://api.github.com/repos/pytorch/pytorch/subscribers", "subscription_url": "https://api.github.com/repos/pytorch/pytorch/subscription", "commits_url": "https://api.github.com/repos/pytorch/pytorch/commits{/sha}", "git_commits_url": "https://api.github.com/repos/pytorch/pytorch/git/commits{/sha}", "comments_url": "https://api.github.com/repos/pytorch/pytorch/comments{/number}", "issue_comment_url": "https://api.github.com/repos/pytorch/pytorch/issues/comments{/number}", "contents_url": "https://api.github.com/repos/pytorch/pytorch/contents/{+path}", "compare_url": "https://api.github.com/repos/pytorch/pytorch/compare/{base}...{head}", "merges_url": "https://api.github.com/repos/pytorch/pytorch/merges", "archive_url": "https://api.github.com/repos/pytorch/pytorch/{archive_format}{/ref}", "downloads_url": "https://api.github.com/repos/pytorch/pytorch/downloads", "issues_url": "https://api.github.com/repos/pytorch/pytorch/issues{/number}", "pulls_url": "https://api.github.com/repos/pytorch/pytorch/pulls{/number}", "milestones_url": "https://api.github.com/repos/pytorch/pytorch/milestones{/number}", "notifications_url": "https://api.github.com/repos/pytorch/pytorch/notifications{?since,all,participating}", "labels_url": "https://api.github.com/repos/pytorch/pytorch/labels{/name}", "releases_url": "https://api.github.com/repos/pytorch/pytorch/releases{/id}", "deployments_url": "https://api.github.com/repos/pytorch/pytorch/deployments", "created_at": "2016-08-13T05:26:41Z", "updated_at": "2018-11-24T12:35:43Z", "pushed_at": "2018-11-24T12:42:01Z", "git_url": "git://github.com/pytorch/pytorch.git", "ssh_url": "git@github.com:pytorch/pytorch.git", "clone_url": "https://github.com/pytorch/pytorch.git", "svn_url": "https://github.com/pytorch/pytorch", "homepage": "http://pytorch.org", "size": 89656, "stargazers_count": 21589, "watchers_count": 21589, "language": "C++", "has_issues": true, "has_projects": true, "has_downloads": true, "has_wiki": true, "has_pages": false, "forks_count": 5153, "mirror_url": null, "archived": false, "open_issues_count": 2196, "license": {"key": "other", "name": "Other", "spdx_id": "NOASSERTION", "url": null, "node_id": "MDc6TGljZW5zZTA="}, "forks": 5153, "open_issues": 2196, "watchers": 21589, "default_branch": "master"}}, "_links": {"self": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/1802"}, "html": {"href": "https://github.com/pytorch/pytorch/pull/1802"}, "issue": {"href": "https://api.github.com/repos/pytorch/pytorch/issues/1802"}, "comments": {"href": "https://api.github.com/repos/pytorch/pytorch/issues/1802/comments"}, "review_comments": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/1802/comments"}, "review_comment": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/comments{/number}"}, "commits": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/1802/commits"}, "statuses": {"href": "https://api.github.com/repos/pytorch/pytorch/statuses/e3fbc5bef88842332aea5ffcd1e17a825c6ee672"}}, "author_association": "CONTRIBUTOR", "body_html": "<p>Hi, I thought <code>nn.init</code> is great but initializing variables in layers using <code>nn.init</code> is a bit complicated. So I try to implement easier way of initialization like below.</p>\n<div class=\"highlight highlight-source-python\"><pre>m <span class=\"pl-k\">=</span> nn.Linear(<span class=\"pl-c1\">20</span>, <span class=\"pl-c1\">30</span>, <span class=\"pl-v\">initializer</span><span class=\"pl-k\">=</span><span class=\"pl-k\">lambda</span> <span class=\"pl-smi\">x</span>: init.xavier_normal(x, <span class=\"pl-c1\">1</span>))</pre></div>\n<p>I do not think this is the best way and thus implemented only for <code>Linear</code>. If you think this is useful, give me advice and help me. Thank you.</p>", "body_text": "Hi, I thought nn.init is great but initializing variables in layers using nn.init is a bit complicated. So I try to implement easier way of initialization like below.\nm = nn.Linear(20, 30, initializer=lambda x: init.xavier_normal(x, 1))\nI do not think this is the best way and thus implemented only for Linear. If you think this is useful, give me advice and help me. Thank you.", "merged": false, "mergeable": null, "rebaseable": null, "mergeable_state": "unknown", "merged_by": null, "comments": 20, "review_comments": 8, "maintainer_can_modify": true, "commits": 15, "additions": 85, "deletions": 27, "changed_files": 3}