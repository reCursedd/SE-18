{"url": "https://api.github.com/repos/pytorch/pytorch/issues/comments/309248993", "html_url": "https://github.com/pytorch/pytorch/pull/1802#issuecomment-309248993", "issue_url": "https://api.github.com/repos/pytorch/pytorch/issues/1802", "id": 309248993, "node_id": "MDEyOklzc3VlQ29tbWVudDMwOTI0ODk5Mw==", "user": {"login": "moskomule", "id": 11806234, "node_id": "MDQ6VXNlcjExODA2MjM0", "avatar_url": "https://avatars3.githubusercontent.com/u/11806234?v=4", "gravatar_id": "", "url": "https://api.github.com/users/moskomule", "html_url": "https://github.com/moskomule", "followers_url": "https://api.github.com/users/moskomule/followers", "following_url": "https://api.github.com/users/moskomule/following{/other_user}", "gists_url": "https://api.github.com/users/moskomule/gists{/gist_id}", "starred_url": "https://api.github.com/users/moskomule/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/moskomule/subscriptions", "organizations_url": "https://api.github.com/users/moskomule/orgs", "repos_url": "https://api.github.com/users/moskomule/repos", "events_url": "https://api.github.com/users/moskomule/events{/privacy}", "received_events_url": "https://api.github.com/users/moskomule/received_events", "type": "User", "site_admin": false}, "created_at": "2017-06-18T00:37:42Z", "updated_at": "2017-06-18T00:37:42Z", "author_association": "CONTRIBUTOR", "body_html": "<p>Thank you for your ideas. Yes, as <a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=991891\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/Kaixhin\">@Kaixhin</a> mentions my original idea did not consider bias well.<br>\nAnd <a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=4583066\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/apaszke\">@apaszke</a> 's</p>\n<div class=\"highlight highlight-source-python\"><pre>m <span class=\"pl-k\">=</span> (nn.Linear(<span class=\"pl-c1\">20</span>, <span class=\"pl-c1\">30</span>).init(<span class=\"pl-s\"><span class=\"pl-pds\">'</span>weight<span class=\"pl-pds\">'</span></span>, <span class=\"pl-c1\">...</span>).init(<span class=\"pl-s\"><span class=\"pl-pds\">'</span>bias<span class=\"pl-pds\">'</span></span>, <span class=\"pl-c1\">...</span>))</pre></div>\n<p>is nice, but I don't think this is Python's way. What do you think of using dictionary instead, for example</p>\n<div class=\"highlight highlight-source-python\"><pre>m <span class=\"pl-k\">=</span> nn.Linear(<span class=\"pl-c1\">20</span>, <span class=\"pl-c1\">30</span>, <span class=\"pl-v\">initializer</span><span class=\"pl-k\">=</span>{<span class=\"pl-s\"><span class=\"pl-pds\">'</span>weight<span class=\"pl-pds\">'</span></span>: <span class=\"pl-c1\">...</span>, <span class=\"pl-s\"><span class=\"pl-pds\">'</span>bias<span class=\"pl-pds\">'</span></span>: <span class=\"pl-c1\">...</span>})</pre></div>\n<p>?</p>", "body_text": "Thank you for your ideas. Yes, as @Kaixhin mentions my original idea did not consider bias well.\nAnd @apaszke 's\nm = (nn.Linear(20, 30).init('weight', ...).init('bias', ...))\nis nice, but I don't think this is Python's way. What do you think of using dictionary instead, for example\nm = nn.Linear(20, 30, initializer={'weight': ..., 'bias': ...})\n?", "body": "Thank you for your ideas. Yes, as @Kaixhin mentions my original idea did not consider bias well. \r\nAnd @apaszke 's \r\n\r\n```python\r\nm = (nn.Linear(20, 30).init('weight', ...).init('bias', ...))\r\n```\r\n\r\nis nice, but I don't think this is Python's way. What do you think of using dictionary instead, for example \r\n\r\n```python\r\nm = nn.Linear(20, 30, initializer={'weight': ..., 'bias': ...})\r\n```\r\n\r\n?"}