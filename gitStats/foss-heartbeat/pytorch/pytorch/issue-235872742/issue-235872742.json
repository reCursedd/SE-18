{"url": "https://api.github.com/repos/pytorch/pytorch/issues/1802", "repository_url": "https://api.github.com/repos/pytorch/pytorch", "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/1802/labels{/name}", "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/1802/comments", "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/1802/events", "html_url": "https://github.com/pytorch/pytorch/pull/1802", "id": 235872742, "node_id": "MDExOlB1bGxSZXF1ZXN0MTI1NTkwNzgw", "number": 1802, "title": "added simple initializer to some modules", "user": {"login": "moskomule", "id": 11806234, "node_id": "MDQ6VXNlcjExODA2MjM0", "avatar_url": "https://avatars3.githubusercontent.com/u/11806234?v=4", "gravatar_id": "", "url": "https://api.github.com/users/moskomule", "html_url": "https://github.com/moskomule", "followers_url": "https://api.github.com/users/moskomule/followers", "following_url": "https://api.github.com/users/moskomule/following{/other_user}", "gists_url": "https://api.github.com/users/moskomule/gists{/gist_id}", "starred_url": "https://api.github.com/users/moskomule/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/moskomule/subscriptions", "organizations_url": "https://api.github.com/users/moskomule/orgs", "repos_url": "https://api.github.com/users/moskomule/repos", "events_url": "https://api.github.com/users/moskomule/events{/privacy}", "received_events_url": "https://api.github.com/users/moskomule/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 20, "created_at": "2017-06-14T13:06:39Z", "updated_at": "2018-11-23T15:34:11Z", "closed_at": null, "author_association": "CONTRIBUTOR", "pull_request": {"url": "https://api.github.com/repos/pytorch/pytorch/pulls/1802", "html_url": "https://github.com/pytorch/pytorch/pull/1802", "diff_url": "https://github.com/pytorch/pytorch/pull/1802.diff", "patch_url": "https://github.com/pytorch/pytorch/pull/1802.patch"}, "body_html": "<p>Hi, I thought <code>nn.init</code> is great but initializing variables in layers using <code>nn.init</code> is a bit complicated. So I try to implement easier way of initialization like below.</p>\n<div class=\"highlight highlight-source-python\"><pre>m <span class=\"pl-k\">=</span> nn.Linear(<span class=\"pl-c1\">20</span>, <span class=\"pl-c1\">30</span>, <span class=\"pl-v\">initializer</span><span class=\"pl-k\">=</span><span class=\"pl-k\">lambda</span> <span class=\"pl-smi\">x</span>: init.xavier_normal(x, <span class=\"pl-c1\">1</span>))</pre></div>\n<p>I do not think this is the best way and thus implemented only for <code>Linear</code>. If you think this is useful, give me advice and help me. Thank you.</p>", "body_text": "Hi, I thought nn.init is great but initializing variables in layers using nn.init is a bit complicated. So I try to implement easier way of initialization like below.\nm = nn.Linear(20, 30, initializer=lambda x: init.xavier_normal(x, 1))\nI do not think this is the best way and thus implemented only for Linear. If you think this is useful, give me advice and help me. Thank you.", "body": "Hi, I thought `nn.init` is great but initializing variables in layers using `nn.init` is a bit complicated. So I try to implement easier way of initialization like below. \r\n\r\n```python\r\nm = nn.Linear(20, 30, initializer=lambda x: init.xavier_normal(x, 1))\r\n```\r\n\r\nI do not think this is the best way and thus implemented only for `Linear`. If you think this is useful, give me advice and help me. Thank you."}