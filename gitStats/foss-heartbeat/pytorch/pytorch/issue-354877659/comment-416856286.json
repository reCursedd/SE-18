{"url": "https://api.github.com/repos/pytorch/pytorch/issues/comments/416856286", "html_url": "https://github.com/pytorch/pytorch/issues/10965#issuecomment-416856286", "issue_url": "https://api.github.com/repos/pytorch/pytorch/issues/10965", "id": 416856286, "node_id": "MDEyOklzc3VlQ29tbWVudDQxNjg1NjI4Ng==", "user": {"login": "yya007", "id": 11239571, "node_id": "MDQ6VXNlcjExMjM5NTcx", "avatar_url": "https://avatars3.githubusercontent.com/u/11239571?v=4", "gravatar_id": "", "url": "https://api.github.com/users/yya007", "html_url": "https://github.com/yya007", "followers_url": "https://api.github.com/users/yya007/followers", "following_url": "https://api.github.com/users/yya007/following{/other_user}", "gists_url": "https://api.github.com/users/yya007/gists{/gist_id}", "starred_url": "https://api.github.com/users/yya007/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/yya007/subscriptions", "organizations_url": "https://api.github.com/users/yya007/orgs", "repos_url": "https://api.github.com/users/yya007/repos", "events_url": "https://api.github.com/users/yya007/events{/privacy}", "received_events_url": "https://api.github.com/users/yya007/received_events", "type": "User", "site_admin": false}, "created_at": "2018-08-29T07:39:12Z", "updated_at": "2018-08-29T07:39:12Z", "author_association": "CONTRIBUTOR", "body_html": "<p><a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=5674597\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/SsnL\">@SsnL</a> I might not explain clearly in the last comment. I let Numpy use MKL and Numpy got the same result as it got before. I thought Numpy and Pytorch should achieve the same results if they both used MKL. However, they still didn't. I attached my new Numpy config.</p>\n<p>I agree that it might be caused by different routines. I just checked Numpy implementations. Numpy seems using gesdd (See <a href=\"https://github.com/numpy/numpy/blob/v1.15.1/numpy/linalg/linalg.py#L8\">https://github.com/numpy/numpy/blob/v1.15.1/numpy/linalg/linalg.py#L8</a>) but we use gesvd in Pytorch (See Declarations.cwrap).</p>\n<blockquote>\n<blockquote>\n<blockquote>\n<p>import numpy as np<br>\nnp.<strong>config</strong>.show()<br>\nmkl_info:<br>\nlibraries = ['mkl_rt', 'pthread']<br>\nlibrary_dirs = ['/home/yuangyao/local/miniconda/lib']<br>\ndefine_macros = [('SCIPY_MKL_H', None), ('HAVE_CBLAS', None)]<br>\ninclude_dirs = ['/home/yuangyao/local/miniconda/include']<br>\nblas_mkl_info:<br>\nlibraries = ['mkl_rt', 'pthread']<br>\nlibrary_dirs = ['/home/yuangyao/local/miniconda/lib']<br>\ndefine_macros = [('SCIPY_MKL_H', None), ('HAVE_CBLAS', None)]<br>\ninclude_dirs = ['/home/yuangyao/local/miniconda/include']<br>\nblas_opt_info:<br>\nlibraries = ['mkl_rt', 'pthread']<br>\nlibrary_dirs = ['/home/yuangyao/local/miniconda/lib']<br>\ndefine_macros = [('SCIPY_MKL_H', None), ('HAVE_CBLAS', None)]<br>\ninclude_dirs = ['/home/yuangyao/local/miniconda/include']<br>\nlapack_mkl_info:<br>\nlibraries = ['mkl_rt', 'pthread']<br>\nlibrary_dirs = ['/home/yuangyao/local/miniconda/lib']<br>\ndefine_macros = [('SCIPY_MKL_H', None), ('HAVE_CBLAS', None)]<br>\ninclude_dirs = ['/home/yuangyao/local/miniconda/include']<br>\nlapack_opt_info:<br>\nlibraries = ['mkl_rt', 'pthread']<br>\nlibrary_dirs = ['/home/yuangyao/local/miniconda/lib']<br>\ndefine_macros = [('SCIPY_MKL_H', None), ('HAVE_CBLAS', None)]<br>\ninclude_dirs = ['/home/yuangyao/local/miniconda/include']<br>\na = np.arange(9).astype(float) - 4<br>\nb = a.reshape((3,3))<br>\nnp.linalg.svd(b)<br>\n(array([[-7.07106781e-01, -5.77350269e-01,  4.08248290e-01],<br>\n[ 8.32667268e-17, -5.77350269e-01, -8.16496581e-01],<br>\n[ 7.07106781e-01, -5.77350269e-01,  4.08248290e-01]]),<br>\narray([7.34846923e+00, 2.44948974e+00, 1.85703319e-16]),<br>\narray([[ 5.77350269e-01,  5.77350269e-01,  5.77350269e-01],<br>\n[ 7.07106781e-01, -5.55111512e-17, -7.07106781e-01],<br>\n[ 4.08248290e-01, -8.16496581e-01,  4.08248290e-01]]))</p>\n</blockquote>\n</blockquote>\n</blockquote>", "body_text": "@SsnL I might not explain clearly in the last comment. I let Numpy use MKL and Numpy got the same result as it got before. I thought Numpy and Pytorch should achieve the same results if they both used MKL. However, they still didn't. I attached my new Numpy config.\nI agree that it might be caused by different routines. I just checked Numpy implementations. Numpy seems using gesdd (See https://github.com/numpy/numpy/blob/v1.15.1/numpy/linalg/linalg.py#L8) but we use gesvd in Pytorch (See Declarations.cwrap).\n\n\n\nimport numpy as np\nnp.config.show()\nmkl_info:\nlibraries = ['mkl_rt', 'pthread']\nlibrary_dirs = ['/home/yuangyao/local/miniconda/lib']\ndefine_macros = [('SCIPY_MKL_H', None), ('HAVE_CBLAS', None)]\ninclude_dirs = ['/home/yuangyao/local/miniconda/include']\nblas_mkl_info:\nlibraries = ['mkl_rt', 'pthread']\nlibrary_dirs = ['/home/yuangyao/local/miniconda/lib']\ndefine_macros = [('SCIPY_MKL_H', None), ('HAVE_CBLAS', None)]\ninclude_dirs = ['/home/yuangyao/local/miniconda/include']\nblas_opt_info:\nlibraries = ['mkl_rt', 'pthread']\nlibrary_dirs = ['/home/yuangyao/local/miniconda/lib']\ndefine_macros = [('SCIPY_MKL_H', None), ('HAVE_CBLAS', None)]\ninclude_dirs = ['/home/yuangyao/local/miniconda/include']\nlapack_mkl_info:\nlibraries = ['mkl_rt', 'pthread']\nlibrary_dirs = ['/home/yuangyao/local/miniconda/lib']\ndefine_macros = [('SCIPY_MKL_H', None), ('HAVE_CBLAS', None)]\ninclude_dirs = ['/home/yuangyao/local/miniconda/include']\nlapack_opt_info:\nlibraries = ['mkl_rt', 'pthread']\nlibrary_dirs = ['/home/yuangyao/local/miniconda/lib']\ndefine_macros = [('SCIPY_MKL_H', None), ('HAVE_CBLAS', None)]\ninclude_dirs = ['/home/yuangyao/local/miniconda/include']\na = np.arange(9).astype(float) - 4\nb = a.reshape((3,3))\nnp.linalg.svd(b)\n(array([[-7.07106781e-01, -5.77350269e-01,  4.08248290e-01],\n[ 8.32667268e-17, -5.77350269e-01, -8.16496581e-01],\n[ 7.07106781e-01, -5.77350269e-01,  4.08248290e-01]]),\narray([7.34846923e+00, 2.44948974e+00, 1.85703319e-16]),\narray([[ 5.77350269e-01,  5.77350269e-01,  5.77350269e-01],\n[ 7.07106781e-01, -5.55111512e-17, -7.07106781e-01],\n[ 4.08248290e-01, -8.16496581e-01,  4.08248290e-01]]))", "body": "@SsnL I might not explain clearly in the last comment. I let Numpy use MKL and Numpy got the same result as it got before. I thought Numpy and Pytorch should achieve the same results if they both used MKL. However, they still didn't. I attached my new Numpy config. \r\n\r\nI agree that it might be caused by different routines. I just checked Numpy implementations. Numpy seems using gesdd (See https://github.com/numpy/numpy/blob/v1.15.1/numpy/linalg/linalg.py#L8) but we use gesvd in Pytorch (See Declarations.cwrap). \r\n\r\n>>> import numpy as np\r\n>>> np.__config__.show()\r\nmkl_info:\r\n    libraries = ['mkl_rt', 'pthread']\r\n    library_dirs = ['/home/yuangyao/local/miniconda/lib']\r\n    define_macros = [('SCIPY_MKL_H', None), ('HAVE_CBLAS', None)]\r\n    include_dirs = ['/home/yuangyao/local/miniconda/include']\r\nblas_mkl_info:\r\n    libraries = ['mkl_rt', 'pthread']\r\n    library_dirs = ['/home/yuangyao/local/miniconda/lib']\r\n    define_macros = [('SCIPY_MKL_H', None), ('HAVE_CBLAS', None)]\r\n    include_dirs = ['/home/yuangyao/local/miniconda/include']\r\nblas_opt_info:\r\n    libraries = ['mkl_rt', 'pthread']\r\n    library_dirs = ['/home/yuangyao/local/miniconda/lib']\r\n    define_macros = [('SCIPY_MKL_H', None), ('HAVE_CBLAS', None)]\r\n    include_dirs = ['/home/yuangyao/local/miniconda/include']\r\nlapack_mkl_info:\r\n    libraries = ['mkl_rt', 'pthread']\r\n    library_dirs = ['/home/yuangyao/local/miniconda/lib']\r\n    define_macros = [('SCIPY_MKL_H', None), ('HAVE_CBLAS', None)]\r\n    include_dirs = ['/home/yuangyao/local/miniconda/include']\r\nlapack_opt_info:\r\n    libraries = ['mkl_rt', 'pthread']\r\n    library_dirs = ['/home/yuangyao/local/miniconda/lib']\r\n    define_macros = [('SCIPY_MKL_H', None), ('HAVE_CBLAS', None)]\r\n    include_dirs = ['/home/yuangyao/local/miniconda/include']\r\n>>> a = np.arange(9).astype(float) - 4\r\n>>> b = a.reshape((3,3))\r\n>>> np.linalg.svd(b)\r\n(array([[-7.07106781e-01, -5.77350269e-01,  4.08248290e-01],\r\n       [ 8.32667268e-17, -5.77350269e-01, -8.16496581e-01],\r\n       [ 7.07106781e-01, -5.77350269e-01,  4.08248290e-01]]), \r\narray([7.34846923e+00, 2.44948974e+00, 1.85703319e-16]), \r\narray([[ 5.77350269e-01,  5.77350269e-01,  5.77350269e-01],\r\n       [ 7.07106781e-01, -5.55111512e-17, -7.07106781e-01],\r\n       [ 4.08248290e-01, -8.16496581e-01,  4.08248290e-01]]))"}