{"url": "https://api.github.com/repos/pytorch/pytorch/issues/7460", "repository_url": "https://api.github.com/repos/pytorch/pytorch", "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/7460/labels{/name}", "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/7460/comments", "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/7460/events", "html_url": "https://github.com/pytorch/pytorch/issues/7460", "id": 321878012, "node_id": "MDU6SXNzdWUzMjE4NzgwMTI=", "number": 7460, "title": "[Feature Request] nn.Module should also get a `device` attribute", "user": {"login": "nehz", "id": 151358, "node_id": "MDQ6VXNlcjE1MTM1OA==", "avatar_url": "https://avatars3.githubusercontent.com/u/151358?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nehz", "html_url": "https://github.com/nehz", "followers_url": "https://api.github.com/users/nehz/followers", "following_url": "https://api.github.com/users/nehz/following{/other_user}", "gists_url": "https://api.github.com/users/nehz/gists{/gist_id}", "starred_url": "https://api.github.com/users/nehz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nehz/subscriptions", "organizations_url": "https://api.github.com/users/nehz/orgs", "repos_url": "https://api.github.com/users/nehz/repos", "events_url": "https://api.github.com/users/nehz/events{/privacy}", "received_events_url": "https://api.github.com/users/nehz/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2018-05-10T10:05:51Z", "updated_at": "2018-06-14T17:38:25Z", "closed_at": "2018-05-10T10:17:54Z", "author_association": "CONTRIBUTOR", "body_html": "<p>Similar to the changes for tensors in 0.4, Modules should also get a .device attribute to allow easy creation of correct tensors.</p>\n<p>Use case:</p>\n<pre><code>class Net(Module):\n    def forward(self, x):\n        x = x.to(self.device)\n\nnet = Net().cuda()\nnet.forward(Tensor([1]))   # Don't need conditional or additional .to()\n</code></pre>", "body_text": "Similar to the changes for tensors in 0.4, Modules should also get a .device attribute to allow easy creation of correct tensors.\nUse case:\nclass Net(Module):\n    def forward(self, x):\n        x = x.to(self.device)\n\nnet = Net().cuda()\nnet.forward(Tensor([1]))   # Don't need conditional or additional .to()", "body": "Similar to the changes for tensors in 0.4, Modules should also get a .device attribute to allow easy creation of correct tensors.\r\n\r\nUse case:\r\n\r\n```\r\nclass Net(Module):\r\n    def forward(self, x):\r\n        x = x.to(self.device)\r\n\r\nnet = Net().cuda()\r\nnet.forward(Tensor([1]))   # Don't need conditional or additional .to()\r\n```"}