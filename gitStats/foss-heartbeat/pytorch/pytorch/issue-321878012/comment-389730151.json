{"url": "https://api.github.com/repos/pytorch/pytorch/issues/comments/389730151", "html_url": "https://github.com/pytorch/pytorch/issues/7460#issuecomment-389730151", "issue_url": "https://api.github.com/repos/pytorch/pytorch/issues/7460", "id": 389730151, "node_id": "MDEyOklzc3VlQ29tbWVudDM4OTczMDE1MQ==", "user": {"login": "acgtyrant", "id": 3921062, "node_id": "MDQ6VXNlcjM5MjEwNjI=", "avatar_url": "https://avatars1.githubusercontent.com/u/3921062?v=4", "gravatar_id": "", "url": "https://api.github.com/users/acgtyrant", "html_url": "https://github.com/acgtyrant", "followers_url": "https://api.github.com/users/acgtyrant/followers", "following_url": "https://api.github.com/users/acgtyrant/following{/other_user}", "gists_url": "https://api.github.com/users/acgtyrant/gists{/gist_id}", "starred_url": "https://api.github.com/users/acgtyrant/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/acgtyrant/subscriptions", "organizations_url": "https://api.github.com/users/acgtyrant/orgs", "repos_url": "https://api.github.com/users/acgtyrant/repos", "events_url": "https://api.github.com/users/acgtyrant/events{/privacy}", "received_events_url": "https://api.github.com/users/acgtyrant/received_events", "type": "User", "site_admin": false}, "created_at": "2018-05-17T03:05:33Z", "updated_at": "2018-05-17T03:06:01Z", "author_association": "CONTRIBUTOR", "body_html": "<p>How about make the <code>device</code> of nn.Module as not implemented? Then all the official implemented module inherited from nn.Module should have the uniform device for their parameters (if I am wrong, forget it) so that they can have the <code>device</code> attribute, so as to <code>DataParallel</code> and <code>DistributedParallel</code> while their device is their <code>module</code>'s device.</p>\n<p>So if the user define a new Module class, then he should implement the <code>device</code> attributes by himself, or get the unimplemented exception when he use the unimplemented <code>device</code> attribute.</p>", "body_text": "How about make the device of nn.Module as not implemented? Then all the official implemented module inherited from nn.Module should have the uniform device for their parameters (if I am wrong, forget it) so that they can have the device attribute, so as to DataParallel and DistributedParallel while their device is their module's device.\nSo if the user define a new Module class, then he should implement the device attributes by himself, or get the unimplemented exception when he use the unimplemented device attribute.", "body": "How about make the `device` of nn.Module as not implemented? Then all the official implemented module inherited from nn.Module should have the uniform device for their parameters (if I am wrong, forget it) so that they can have the `device` attribute, so as to `DataParallel` and `DistributedParallel` while their device is their `module`'s device.\r\n\r\nSo if the user define a new Module class, then he should implement the `device` attributes by himself, or get the unimplemented exception when he use the unimplemented `device` attribute."}