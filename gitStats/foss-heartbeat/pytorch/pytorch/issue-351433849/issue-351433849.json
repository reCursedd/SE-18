{"url": "https://api.github.com/repos/pytorch/pytorch/issues/10609", "repository_url": "https://api.github.com/repos/pytorch/pytorch", "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/10609/labels{/name}", "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/10609/comments", "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/10609/events", "html_url": "https://github.com/pytorch/pytorch/issues/10609", "id": 351433849, "node_id": "MDU6SXNzdWUzNTE0MzM4NDk=", "number": 10609, "title": "[caffe2] meet CMake Error at caffe2_gpu_generated_given_tensor_byte_string_to_uint8_fill_op.cu.o.Release.cmake:279", "user": {"login": "jiaruixu", "id": 34403859, "node_id": "MDQ6VXNlcjM0NDAzODU5", "avatar_url": "https://avatars2.githubusercontent.com/u/34403859?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jiaruixu", "html_url": "https://github.com/jiaruixu", "followers_url": "https://api.github.com/users/jiaruixu/followers", "following_url": "https://api.github.com/users/jiaruixu/following{/other_user}", "gists_url": "https://api.github.com/users/jiaruixu/gists{/gist_id}", "starred_url": "https://api.github.com/users/jiaruixu/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jiaruixu/subscriptions", "organizations_url": "https://api.github.com/users/jiaruixu/orgs", "repos_url": "https://api.github.com/users/jiaruixu/repos", "events_url": "https://api.github.com/users/jiaruixu/events{/privacy}", "received_events_url": "https://api.github.com/users/jiaruixu/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-08-17T02:19:50Z", "updated_at": "2018-08-28T05:10:41Z", "closed_at": "2018-08-18T01:09:08Z", "author_association": "NONE", "body_html": "<h2>Issue description</h2>\n<p>can't install caffe2 on ubuntu 18.04</p>\n<h2>Code example</h2>\n<p>The code I use is</p>\n<pre><code>export CC=/usr/bin/gcc-7\ncmake ..\n</code></pre>\n<p>Then I got</p>\n<pre><code>-- Does not need to define long separately.\n-- std::exception_ptr is supported.\n-- NUMA is available\n-- Current compiler supports avx2 extention. Will build perfkernels.\n-- Building using own protobuf under third_party per request.\n-- Use custom protobuf build.\n-- Caffe2 protobuf include directory: $&lt;BUILD_INTERFACE:/home/jiarui/git/pytorch/third_party/protobuf/src&gt;$&lt;INSTALL_INTERFACE:include&gt;\n-- The BLAS backend of choice:Eigen\n-- Brace yourself, we are building NNPACK\n-- Found PythonInterp: /usr/bin/python (found version \"2.7.15\") \n-- Caffe2: Found gflags with new-style gflags target.\n-- Caffe2: Cannot find glog automatically. Using legacy find.\n-- Caffe2: Found glog (include: /usr/include, library: /usr/lib/x86_64-linux-gnu/libglog.so)\n-- Found lmdb    (include: /usr/include, library: /usr/lib/x86_64-linux-gnu/liblmdb.so)\n-- Found LevelDB (include: /usr/include, library: /usr/lib/x86_64-linux-gnu/libleveldb.so)\n-- Found Snappy  (include: /usr/include, library: /usr/lib/x86_64-linux-gnu/libsnappy.so)\n-- Found Numa  (include: /usr/include, library: /usr/lib/x86_64-linux-gnu/libnuma.so)\n-- OpenCV found (/usr/share/OpenCV)\nCMake Warning at cmake/Dependencies.cmake:330 (find_package):\n  By not providing \"FindEigen3.cmake\" in CMAKE_MODULE_PATH this project has\n  asked CMake to find a package configuration file provided by \"Eigen3\", but\n  CMake did not find one.\n\n  Could not find a package configuration file provided by \"Eigen3\" with any\n  of the following names:\n\n    Eigen3Config.cmake\n    eigen3-config.cmake\n\n  Add the installation prefix of \"Eigen3\" to CMAKE_PREFIX_PATH or set\n  \"Eigen3_DIR\" to a directory containing one of the above files.  If \"Eigen3\"\n  provides a separate development package or SDK, be sure it has been\n  installed.\nCall Stack (most recent call first):\n  CMakeLists.txt:184 (include)\n\n\n-- Did not find system Eigen. Using third party subdirectory.\nPython 2.7.15rc1\n-- Setting Python's include dir to /usr/include/python2.7 from distutils.sysconfig\n-- Setting Python's library to /usr/lib/python2.7\n-- Found PythonInterp: /usr/bin/python (found suitable version \"2.7.15\", minimum required is \"2.7\") \n-- NumPy ver. 1.14.3 found (include: /usr/local/lib/python2.7/dist-packages/numpy/core/include)\n-- Could NOT find pybind11 (missing: pybind11_INCLUDE_DIR) \n-- MPI support found\n-- MPI compile flags: -pthread\n-- MPI include path: /usr/lib/x86_64-linux-gnu/openmpi/include/openmpi/usr/lib/x86_64-linux-gnu/openmpi/include/openmpi/opal/mca/event/libevent2022/libevent/usr/lib/x86_64-linux-gnu/openmpi/include/openmpi/opal/mca/event/libevent2022/libevent/include/usr/lib/x86_64-linux-gnu/openmpi/include\n-- MPI LINK flags path: -pthread\n-- MPI libraries: /usr/lib/x86_64-linux-gnu/openmpi/lib/libmpi_cxx.so/usr/lib/x86_64-linux-gnu/openmpi/lib/libmpi.so\nCMake Warning at cmake/Dependencies.cmake:434 (message):\n  OpenMPI found, but it is not built with CUDA support.\nCall Stack (most recent call first):\n  CMakeLists.txt:184 (include)\n\n\n-- Caffe2: CUDA detected: 9.0\n-- Caffe2: CUDA nvcc is: /usr/local/cuda/bin/nvcc\n-- Caffe2: CUDA toolkit directory: /usr/local/cuda\n-- Caffe2: Header version is: 9.0\n-- Found cuDNN: v7.2.1  (include: /usr/local/cuda/include, library: /usr/local/cuda/lib64/libcudnn.so)\n-- Autodetected CUDA architecture(s): 6.1 6.1 \n-- Added CUDA NVCC flags for: -gencode;arch=compute_61,code=sm_61\n-- Determining NCCL version from the header file: /usr/include/nccl.h\n-- NCCL_MAJOR_VERSION: 2\n-- Found NCCL (include: /usr/include, library: /usr/lib/x86_64-linux-gnu/libnccl.so)\n-- Could NOT find CUB (missing: CUB_INCLUDE_DIR) \n-- Could NOT find Gloo (missing: Gloo_INCLUDE_DIR Gloo_LIBRARY) \n-- MPI include path: /usr/lib/x86_64-linux-gnu/openmpi/include/openmpi/usr/lib/x86_64-linux-gnu/openmpi/include/openmpi/opal/mca/event/libevent2022/libevent/usr/lib/x86_64-linux-gnu/openmpi/include/openmpi/opal/mca/event/libevent2022/libevent/include/usr/lib/x86_64-linux-gnu/openmpi/include\n-- MPI libraries: /usr/lib/x86_64-linux-gnu/openmpi/lib/libmpi_cxx.so/usr/lib/x86_64-linux-gnu/openmpi/lib/libmpi.so\n-- CUDA detected: 9.0\n-- Found libcuda: /usr/lib/x86_64-linux-gnu/libcuda.so\n-- Found libnvrtc: /usr/local/cuda/lib64/libnvrtc.so\n-- Determining NCCL version from the header file: /usr/include/nccl.h\n-- NCCL_MAJOR_VERSION: 2\n-- Found NCCL (include: /usr/include, library: /usr/lib/x86_64-linux-gnu/libnccl.so)\n-- GCC 7.3.0: Adding gcc and gcc_s libs to link line\n-- Include NCCL operators\n-- Excluding ideep operators as we are not using ideep\n-- Including image processing operators\n-- Excluding video processing operators due to no opencv\n-- Excluding mkl operators as we are not using mkl\n-- Include Observer library\n-- Using lib/python2.7/dist-packages as python relative installation path\n-- Automatically generating missing __init__.py files.\n-- A previous caffe2 cmake run already created the __init__.py files.\nCMake Warning at CMakeLists.txt:347 (message):\n  Generated cmake files are only fully tested if one builds with system glog,\n  gflags, and protobuf.  Other settings may generate files that are not well\n  tested.\n\n\n-- \n-- ******** Summary ********\n-- General:\n--   CMake version         : 3.10.2\n--   CMake command         : /usr/bin/cmake\n--   Git version           : v0.1.11-9892-gd6f3c8841\n--   System                : Linux\n--   C++ compiler          : /usr/bin/g++\n--   C++ compiler version  : 7.3.0\n--   BLAS                  : Eigen\n--   CXX flags             :  -fvisibility-inlines-hidden -rdynamic -DONNX_NAMESPACE=onnx_c2 -O2 -fPIC -Wno-narrowing -Wall -Wextra -Wno-missing-field-initializers -Wno-type-limits -Wno-array-bounds -Wno-unknown-pragmas -Wno-sign-compare -Wno-unused-parameter -Wno-unused-variable -Wno-unused-function -Wno-unused-result -Wno-strict-overflow -Wno-strict-aliasing -Wno-error=deprecated-declarations -Wno-stringop-overflow -faligned-new\n--   Build type            : Release\n--   Compile definitions   : \n--   CMAKE_PREFIX_PATH     : \n--   CMAKE_INSTALL_PREFIX  : /usr/local\n-- \n--   BUILD_CAFFE2          : ON\n--   BUILD_ATEN            : OFF\n--   BUILD_BINARY          : ON\n--   BUILD_CUSTOM_PROTOBUF : ON\n--     Link local protobuf : ON\n--   BUILD_DOCS            : OFF\n--   BUILD_PYTHON          : ON\n--     Python version      : 2.7.15\n--     Python executable   : /usr/bin/python\n--     Pythonlibs version  : 2.7.15rc1\n--     Python library      : /usr/lib/python2.7\n--     Python includes     : /usr/include/python2.7\n--     Python site-packages: lib/python2.7/dist-packages\n--   BUILD_SHARED_LIBS     : ON\n--   BUILD_TEST            : OFF\n--   USE_ASAN              : OFF\n--   USE_ATEN              : OFF\n--   USE_CUDA              : ON\n--     CUDA static link    : OFF\n--     USE_CUDNN           : ON\n--     CUDA version        : 9.0\n--     cuDNN version       : 7.2.1\n--     CUDA root directory : /usr/local/cuda\n--     CUDA library        : /usr/lib/x86_64-linux-gnu/libcuda.so\n--     cudart library      : /usr/local/cuda/lib64/libcudart_static.a;-pthread;dl;/usr/lib/x86_64-linux-gnu/librt.so\n--     cublas library      : /usr/local/cuda/lib64/libcublas.so;/usr/local/cuda/lib64/libcublas_device.a\n--     cufft library       : /usr/local/cuda/lib64/libcufft.so\n--     curand library      : /usr/local/cuda/lib64/libcurand.so\n--     cuDNN library       : /usr/local/cuda/lib64/libcudnn.so\n--     nvrtc               : /usr/local/cuda/lib64/libnvrtc.so\n--     CUDA include path   : /usr/local/cuda/include\n--     NVCC executable     : /usr/local/cuda/bin/nvcc\n--     CUDA host compiler  : /usr/bin/gcc\n--     USE_TENSORRT        : OFF\n--   USE_ROCM              : OFF\n--   USE_EIGEN_FOR_BLAS    : ON\n--   USE_FFMPEG            : OFF\n--   USE_GFLAGS            : ON\n--   USE_GLOG              : ON\n--   USE_GLOO              : ON\n--     USE_GLOO_IBVERBS    : OFF\n--   USE_LEVELDB           : ON\n--     LevelDB version     : 1.20\n--     Snappy version      : ..\n--   USE_LITE_PROTO        : OFF\n--   USE_LMDB              : ON\n--     LMDB version        : 0.9.21\n--   USE_METAL             : OFF\n--   USE_MKL               : \n--   USE_MOBILE_OPENGL     : OFF\n--   USE_MPI               : ON\n--   USE_NCCL              : ON\n--     USE_SYSTEM_NCCL     : OFF\n--   USE_NERVANA_GPU       : OFF\n--   USE_NNPACK            : ON\n--   USE_OBSERVERS         : ON\n--   USE_OPENCL            : OFF\n--   USE_OPENCV            : ON\n--     OpenCV version      : 3.2.0\n--   USE_OPENMP            : OFF\n--   USE_PROF              : OFF\n--   USE_REDIS             : OFF\n--   USE_ROCKSDB           : OFF\n--   USE_ZMQ               : OFF\n--   Public Dependencies  : Threads::Threads;gflags;glog::glog\n--   Private Dependencies : nnpack;cpuinfo;/usr/lib/x86_64-linux-gnu/liblmdb.so;/usr/lib/x86_64-linux-gnu/libleveldb.so;/usr/lib/x86_64-linux-gnu/libsnappy.so;/usr/lib/x86_64-linux-gnu/libnuma.so;opencv_core;opencv_highgui;opencv_imgproc;opencv_imgcodecs;opencv_videoio;opencv_video;/usr/lib/x86_64-linux-gnu/openmpi/lib/libmpi_cxx.so;/usr/lib/x86_64-linux-gnu/openmpi/lib/libmpi.so;gloo;onnxifi_loader;gcc_s;gcc;dl\n-- Configuring done\n-- Generating done\n\n</code></pre>\n<p>When I do <code>sudo make install</code>, the error is</p>\n<pre><code>[ 77%] Building NVCC (Device) object caffe2/CMakeFiles/caffe2_gpu.dir/operators/caffe2_gpu_generated_gather_op.cu.o\n[ 77%] Building NVCC (Device) object caffe2/CMakeFiles/caffe2_gpu.dir/operators/caffe2_gpu_generated_given_tensor_byte_string_to_uint8_fill_op.cu.o\n/home/jiarui/git/pytorch/caffe2/operators/given_tensor_byte_string_to_uint8_fill_op.h: In member function \u2018void caffe2::GivenTensorByteStringToUInt8FillOp&lt;Context&gt;::Extract()\u2019:\n/home/jiarui/git/pytorch/caffe2/operators/given_tensor_byte_string_to_uint8_fill_op.h:52:51: error: \u2018GetRepeatedArgument&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;\u2019 is not a member of \u2018caffe2::GivenTensorByteStringToUInt8FillOp&lt;Context&gt;\u2019\n     auto source_values = OperatorBase::GetRepeatedArgument&lt;string&gt;(\"values\");\n                                                   ^~~~~~~~~~~~~~~~~~~~~~~~~~~                                                                               \nCMake Error at caffe2_gpu_generated_given_tensor_byte_string_to_uint8_fill_op.cu.o.Release.cmake:279 (message):\n  Error generating file\n  /home/jiarui/git/pytorch/build/caffe2/CMakeFiles/caffe2_gpu.dir/operators/./caffe2_gpu_generated_given_tensor_byte_string_to_uint8_fill_op.cu.o\n\n\ncaffe2/CMakeFiles/caffe2_gpu.dir/build.make:371: recipe for target 'caffe2/CMakeFiles/caffe2_gpu.dir/operators/caffe2_gpu_generated_given_tensor_byte_string_to_uint8_fill_op.cu.o' failed\nmake[2]: *** [caffe2/CMakeFiles/caffe2_gpu.dir/operators/caffe2_gpu_generated_given_tensor_byte_string_to_uint8_fill_op.cu.o] Error 1\nCMakeFiles/Makefile2:1435: recipe for target 'caffe2/CMakeFiles/caffe2_gpu.dir/all' failed\nmake[1]: *** [caffe2/CMakeFiles/caffe2_gpu.dir/all] Error 2\nMakefile:140: recipe for target 'all' failed\nmake: *** [all] Error 2\n\n</code></pre>\n<p>By the way, the default gcc in my computer is</p>\n<pre><code>$ gcc --version\ngcc (GCC) 6.3.0\nCopyright (C) 2016 Free Software Foundation, Inc.\nThis is free software; see the source for copying conditions.  There is NO\nwarranty; not even for MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n\n$ which gcc\n/usr/local/bin/gcc\n\n$ gcc-7 --version\ngcc-7 (Ubuntu 7.3.0-16ubuntu3) 7.3.0\nCopyright (C) 2017 Free Software Foundation, Inc.\nThis is free software; see the source for copying conditions.  There is NO\nwarranty; not even for MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n\n$ which gcc-7\n/usr/bin/gcc-7\n</code></pre>\n<h2>System Info</h2>\n<ul>\n<li>PyTorch or Caffe2: Caffe2</li>\n<li>How you installed PyTorch (conda, pip, source): source</li>\n<li>Build command you used (if compiling from source): sudo make install</li>\n<li>OS: Ubuntu18.04</li>\n<li>PyTorch version:</li>\n<li>Python version: 2.7.15</li>\n<li>CUDA/cuDNN version: 9.2/ 7.2.1</li>\n<li>GPU models and configuration:</li>\n<li>GCC version (if compiling from source): 7.3.0</li>\n<li>CMake version: 3.10.2</li>\n<li>Versions of any other relevant libraries:</li>\n</ul>\n<h2>More information</h2>\n<p>I followed instructions <a href=\"https://github.com/pytorch/pytorch/issues/9208\" data-hovercard-type=\"issue\" data-hovercard-url=\"/pytorch/pytorch/issues/9208/hovercard\">here</a> and Commented out the appropriate lines in the main <code>CMakeLists.txt </code>:</p>\n<pre><code>diff --git a/CMakeLists.txt b/CMakeLists.txt\nindex 1cb5d13bc..3ae2dcaa8 100644\n--- a/CMakeLists.txt\n+++ b/CMakeLists.txt\n@@ -229,11 +229,11 @@ if(NOT MSVC)\n     set(CMAKE_CXX_FLAGS \"${CMAKE_CXX_FLAGS} -Wno-constexpr-not-const\")\n     set(CMAKE_CXX_FLAGS \"${CMAKE_CXX_FLAGS} -Wno-missing-braces\")\n   endif()\n-  if ((APPLE AND (NOT (\"${CLANG_VERSION_STRING}\" VERSION_LESS \"9.0\")))\n-    OR (CMAKE_COMPILER_IS_GNUCXX \n-    AND (CMAKE_CXX_COMPILER_VERSION VERSION_GREATER 7.0 AND NOT APPLE)))\n-    set(CMAKE_CXX_FLAGS \"${CMAKE_CXX_FLAGS} -faligned-new\")\n-  endif()\n+  #if ((APPLE AND (NOT (\"${CLANG_VERSION_STRING}\" VERSION_LESS \"9.0\")))\n+    #OR (CMAKE_COMPILER_IS_GNUCXX \n+    #AND (CMAKE_CXX_COMPILER_VERSION VERSION_GREATER 7.0 AND NOT APPLE)))\n+    #set(CMAKE_CXX_FLAGS \"${CMAKE_CXX_FLAGS} -faligned-new\") # This breaks nvcc using gcc-6\n+  #endif()\n   if ($ENV{WERROR})\n     set(CMAKE_CXX_FLAGS \"${CMAKE_CXX_FLAGS} -Werror\")\n   endif($ENV{WERROR})\n</code></pre>", "body_text": "Issue description\ncan't install caffe2 on ubuntu 18.04\nCode example\nThe code I use is\nexport CC=/usr/bin/gcc-7\ncmake ..\n\nThen I got\n-- Does not need to define long separately.\n-- std::exception_ptr is supported.\n-- NUMA is available\n-- Current compiler supports avx2 extention. Will build perfkernels.\n-- Building using own protobuf under third_party per request.\n-- Use custom protobuf build.\n-- Caffe2 protobuf include directory: $<BUILD_INTERFACE:/home/jiarui/git/pytorch/third_party/protobuf/src>$<INSTALL_INTERFACE:include>\n-- The BLAS backend of choice:Eigen\n-- Brace yourself, we are building NNPACK\n-- Found PythonInterp: /usr/bin/python (found version \"2.7.15\") \n-- Caffe2: Found gflags with new-style gflags target.\n-- Caffe2: Cannot find glog automatically. Using legacy find.\n-- Caffe2: Found glog (include: /usr/include, library: /usr/lib/x86_64-linux-gnu/libglog.so)\n-- Found lmdb    (include: /usr/include, library: /usr/lib/x86_64-linux-gnu/liblmdb.so)\n-- Found LevelDB (include: /usr/include, library: /usr/lib/x86_64-linux-gnu/libleveldb.so)\n-- Found Snappy  (include: /usr/include, library: /usr/lib/x86_64-linux-gnu/libsnappy.so)\n-- Found Numa  (include: /usr/include, library: /usr/lib/x86_64-linux-gnu/libnuma.so)\n-- OpenCV found (/usr/share/OpenCV)\nCMake Warning at cmake/Dependencies.cmake:330 (find_package):\n  By not providing \"FindEigen3.cmake\" in CMAKE_MODULE_PATH this project has\n  asked CMake to find a package configuration file provided by \"Eigen3\", but\n  CMake did not find one.\n\n  Could not find a package configuration file provided by \"Eigen3\" with any\n  of the following names:\n\n    Eigen3Config.cmake\n    eigen3-config.cmake\n\n  Add the installation prefix of \"Eigen3\" to CMAKE_PREFIX_PATH or set\n  \"Eigen3_DIR\" to a directory containing one of the above files.  If \"Eigen3\"\n  provides a separate development package or SDK, be sure it has been\n  installed.\nCall Stack (most recent call first):\n  CMakeLists.txt:184 (include)\n\n\n-- Did not find system Eigen. Using third party subdirectory.\nPython 2.7.15rc1\n-- Setting Python's include dir to /usr/include/python2.7 from distutils.sysconfig\n-- Setting Python's library to /usr/lib/python2.7\n-- Found PythonInterp: /usr/bin/python (found suitable version \"2.7.15\", minimum required is \"2.7\") \n-- NumPy ver. 1.14.3 found (include: /usr/local/lib/python2.7/dist-packages/numpy/core/include)\n-- Could NOT find pybind11 (missing: pybind11_INCLUDE_DIR) \n-- MPI support found\n-- MPI compile flags: -pthread\n-- MPI include path: /usr/lib/x86_64-linux-gnu/openmpi/include/openmpi/usr/lib/x86_64-linux-gnu/openmpi/include/openmpi/opal/mca/event/libevent2022/libevent/usr/lib/x86_64-linux-gnu/openmpi/include/openmpi/opal/mca/event/libevent2022/libevent/include/usr/lib/x86_64-linux-gnu/openmpi/include\n-- MPI LINK flags path: -pthread\n-- MPI libraries: /usr/lib/x86_64-linux-gnu/openmpi/lib/libmpi_cxx.so/usr/lib/x86_64-linux-gnu/openmpi/lib/libmpi.so\nCMake Warning at cmake/Dependencies.cmake:434 (message):\n  OpenMPI found, but it is not built with CUDA support.\nCall Stack (most recent call first):\n  CMakeLists.txt:184 (include)\n\n\n-- Caffe2: CUDA detected: 9.0\n-- Caffe2: CUDA nvcc is: /usr/local/cuda/bin/nvcc\n-- Caffe2: CUDA toolkit directory: /usr/local/cuda\n-- Caffe2: Header version is: 9.0\n-- Found cuDNN: v7.2.1  (include: /usr/local/cuda/include, library: /usr/local/cuda/lib64/libcudnn.so)\n-- Autodetected CUDA architecture(s): 6.1 6.1 \n-- Added CUDA NVCC flags for: -gencode;arch=compute_61,code=sm_61\n-- Determining NCCL version from the header file: /usr/include/nccl.h\n-- NCCL_MAJOR_VERSION: 2\n-- Found NCCL (include: /usr/include, library: /usr/lib/x86_64-linux-gnu/libnccl.so)\n-- Could NOT find CUB (missing: CUB_INCLUDE_DIR) \n-- Could NOT find Gloo (missing: Gloo_INCLUDE_DIR Gloo_LIBRARY) \n-- MPI include path: /usr/lib/x86_64-linux-gnu/openmpi/include/openmpi/usr/lib/x86_64-linux-gnu/openmpi/include/openmpi/opal/mca/event/libevent2022/libevent/usr/lib/x86_64-linux-gnu/openmpi/include/openmpi/opal/mca/event/libevent2022/libevent/include/usr/lib/x86_64-linux-gnu/openmpi/include\n-- MPI libraries: /usr/lib/x86_64-linux-gnu/openmpi/lib/libmpi_cxx.so/usr/lib/x86_64-linux-gnu/openmpi/lib/libmpi.so\n-- CUDA detected: 9.0\n-- Found libcuda: /usr/lib/x86_64-linux-gnu/libcuda.so\n-- Found libnvrtc: /usr/local/cuda/lib64/libnvrtc.so\n-- Determining NCCL version from the header file: /usr/include/nccl.h\n-- NCCL_MAJOR_VERSION: 2\n-- Found NCCL (include: /usr/include, library: /usr/lib/x86_64-linux-gnu/libnccl.so)\n-- GCC 7.3.0: Adding gcc and gcc_s libs to link line\n-- Include NCCL operators\n-- Excluding ideep operators as we are not using ideep\n-- Including image processing operators\n-- Excluding video processing operators due to no opencv\n-- Excluding mkl operators as we are not using mkl\n-- Include Observer library\n-- Using lib/python2.7/dist-packages as python relative installation path\n-- Automatically generating missing __init__.py files.\n-- A previous caffe2 cmake run already created the __init__.py files.\nCMake Warning at CMakeLists.txt:347 (message):\n  Generated cmake files are only fully tested if one builds with system glog,\n  gflags, and protobuf.  Other settings may generate files that are not well\n  tested.\n\n\n-- \n-- ******** Summary ********\n-- General:\n--   CMake version         : 3.10.2\n--   CMake command         : /usr/bin/cmake\n--   Git version           : v0.1.11-9892-gd6f3c8841\n--   System                : Linux\n--   C++ compiler          : /usr/bin/g++\n--   C++ compiler version  : 7.3.0\n--   BLAS                  : Eigen\n--   CXX flags             :  -fvisibility-inlines-hidden -rdynamic -DONNX_NAMESPACE=onnx_c2 -O2 -fPIC -Wno-narrowing -Wall -Wextra -Wno-missing-field-initializers -Wno-type-limits -Wno-array-bounds -Wno-unknown-pragmas -Wno-sign-compare -Wno-unused-parameter -Wno-unused-variable -Wno-unused-function -Wno-unused-result -Wno-strict-overflow -Wno-strict-aliasing -Wno-error=deprecated-declarations -Wno-stringop-overflow -faligned-new\n--   Build type            : Release\n--   Compile definitions   : \n--   CMAKE_PREFIX_PATH     : \n--   CMAKE_INSTALL_PREFIX  : /usr/local\n-- \n--   BUILD_CAFFE2          : ON\n--   BUILD_ATEN            : OFF\n--   BUILD_BINARY          : ON\n--   BUILD_CUSTOM_PROTOBUF : ON\n--     Link local protobuf : ON\n--   BUILD_DOCS            : OFF\n--   BUILD_PYTHON          : ON\n--     Python version      : 2.7.15\n--     Python executable   : /usr/bin/python\n--     Pythonlibs version  : 2.7.15rc1\n--     Python library      : /usr/lib/python2.7\n--     Python includes     : /usr/include/python2.7\n--     Python site-packages: lib/python2.7/dist-packages\n--   BUILD_SHARED_LIBS     : ON\n--   BUILD_TEST            : OFF\n--   USE_ASAN              : OFF\n--   USE_ATEN              : OFF\n--   USE_CUDA              : ON\n--     CUDA static link    : OFF\n--     USE_CUDNN           : ON\n--     CUDA version        : 9.0\n--     cuDNN version       : 7.2.1\n--     CUDA root directory : /usr/local/cuda\n--     CUDA library        : /usr/lib/x86_64-linux-gnu/libcuda.so\n--     cudart library      : /usr/local/cuda/lib64/libcudart_static.a;-pthread;dl;/usr/lib/x86_64-linux-gnu/librt.so\n--     cublas library      : /usr/local/cuda/lib64/libcublas.so;/usr/local/cuda/lib64/libcublas_device.a\n--     cufft library       : /usr/local/cuda/lib64/libcufft.so\n--     curand library      : /usr/local/cuda/lib64/libcurand.so\n--     cuDNN library       : /usr/local/cuda/lib64/libcudnn.so\n--     nvrtc               : /usr/local/cuda/lib64/libnvrtc.so\n--     CUDA include path   : /usr/local/cuda/include\n--     NVCC executable     : /usr/local/cuda/bin/nvcc\n--     CUDA host compiler  : /usr/bin/gcc\n--     USE_TENSORRT        : OFF\n--   USE_ROCM              : OFF\n--   USE_EIGEN_FOR_BLAS    : ON\n--   USE_FFMPEG            : OFF\n--   USE_GFLAGS            : ON\n--   USE_GLOG              : ON\n--   USE_GLOO              : ON\n--     USE_GLOO_IBVERBS    : OFF\n--   USE_LEVELDB           : ON\n--     LevelDB version     : 1.20\n--     Snappy version      : ..\n--   USE_LITE_PROTO        : OFF\n--   USE_LMDB              : ON\n--     LMDB version        : 0.9.21\n--   USE_METAL             : OFF\n--   USE_MKL               : \n--   USE_MOBILE_OPENGL     : OFF\n--   USE_MPI               : ON\n--   USE_NCCL              : ON\n--     USE_SYSTEM_NCCL     : OFF\n--   USE_NERVANA_GPU       : OFF\n--   USE_NNPACK            : ON\n--   USE_OBSERVERS         : ON\n--   USE_OPENCL            : OFF\n--   USE_OPENCV            : ON\n--     OpenCV version      : 3.2.0\n--   USE_OPENMP            : OFF\n--   USE_PROF              : OFF\n--   USE_REDIS             : OFF\n--   USE_ROCKSDB           : OFF\n--   USE_ZMQ               : OFF\n--   Public Dependencies  : Threads::Threads;gflags;glog::glog\n--   Private Dependencies : nnpack;cpuinfo;/usr/lib/x86_64-linux-gnu/liblmdb.so;/usr/lib/x86_64-linux-gnu/libleveldb.so;/usr/lib/x86_64-linux-gnu/libsnappy.so;/usr/lib/x86_64-linux-gnu/libnuma.so;opencv_core;opencv_highgui;opencv_imgproc;opencv_imgcodecs;opencv_videoio;opencv_video;/usr/lib/x86_64-linux-gnu/openmpi/lib/libmpi_cxx.so;/usr/lib/x86_64-linux-gnu/openmpi/lib/libmpi.so;gloo;onnxifi_loader;gcc_s;gcc;dl\n-- Configuring done\n-- Generating done\n\n\nWhen I do sudo make install, the error is\n[ 77%] Building NVCC (Device) object caffe2/CMakeFiles/caffe2_gpu.dir/operators/caffe2_gpu_generated_gather_op.cu.o\n[ 77%] Building NVCC (Device) object caffe2/CMakeFiles/caffe2_gpu.dir/operators/caffe2_gpu_generated_given_tensor_byte_string_to_uint8_fill_op.cu.o\n/home/jiarui/git/pytorch/caffe2/operators/given_tensor_byte_string_to_uint8_fill_op.h: In member function \u2018void caffe2::GivenTensorByteStringToUInt8FillOp<Context>::Extract()\u2019:\n/home/jiarui/git/pytorch/caffe2/operators/given_tensor_byte_string_to_uint8_fill_op.h:52:51: error: \u2018GetRepeatedArgument<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >\u2019 is not a member of \u2018caffe2::GivenTensorByteStringToUInt8FillOp<Context>\u2019\n     auto source_values = OperatorBase::GetRepeatedArgument<string>(\"values\");\n                                                   ^~~~~~~~~~~~~~~~~~~~~~~~~~~                                                                               \nCMake Error at caffe2_gpu_generated_given_tensor_byte_string_to_uint8_fill_op.cu.o.Release.cmake:279 (message):\n  Error generating file\n  /home/jiarui/git/pytorch/build/caffe2/CMakeFiles/caffe2_gpu.dir/operators/./caffe2_gpu_generated_given_tensor_byte_string_to_uint8_fill_op.cu.o\n\n\ncaffe2/CMakeFiles/caffe2_gpu.dir/build.make:371: recipe for target 'caffe2/CMakeFiles/caffe2_gpu.dir/operators/caffe2_gpu_generated_given_tensor_byte_string_to_uint8_fill_op.cu.o' failed\nmake[2]: *** [caffe2/CMakeFiles/caffe2_gpu.dir/operators/caffe2_gpu_generated_given_tensor_byte_string_to_uint8_fill_op.cu.o] Error 1\nCMakeFiles/Makefile2:1435: recipe for target 'caffe2/CMakeFiles/caffe2_gpu.dir/all' failed\nmake[1]: *** [caffe2/CMakeFiles/caffe2_gpu.dir/all] Error 2\nMakefile:140: recipe for target 'all' failed\nmake: *** [all] Error 2\n\n\nBy the way, the default gcc in my computer is\n$ gcc --version\ngcc (GCC) 6.3.0\nCopyright (C) 2016 Free Software Foundation, Inc.\nThis is free software; see the source for copying conditions.  There is NO\nwarranty; not even for MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n\n$ which gcc\n/usr/local/bin/gcc\n\n$ gcc-7 --version\ngcc-7 (Ubuntu 7.3.0-16ubuntu3) 7.3.0\nCopyright (C) 2017 Free Software Foundation, Inc.\nThis is free software; see the source for copying conditions.  There is NO\nwarranty; not even for MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n\n$ which gcc-7\n/usr/bin/gcc-7\n\nSystem Info\n\nPyTorch or Caffe2: Caffe2\nHow you installed PyTorch (conda, pip, source): source\nBuild command you used (if compiling from source): sudo make install\nOS: Ubuntu18.04\nPyTorch version:\nPython version: 2.7.15\nCUDA/cuDNN version: 9.2/ 7.2.1\nGPU models and configuration:\nGCC version (if compiling from source): 7.3.0\nCMake version: 3.10.2\nVersions of any other relevant libraries:\n\nMore information\nI followed instructions here and Commented out the appropriate lines in the main CMakeLists.txt :\ndiff --git a/CMakeLists.txt b/CMakeLists.txt\nindex 1cb5d13bc..3ae2dcaa8 100644\n--- a/CMakeLists.txt\n+++ b/CMakeLists.txt\n@@ -229,11 +229,11 @@ if(NOT MSVC)\n     set(CMAKE_CXX_FLAGS \"${CMAKE_CXX_FLAGS} -Wno-constexpr-not-const\")\n     set(CMAKE_CXX_FLAGS \"${CMAKE_CXX_FLAGS} -Wno-missing-braces\")\n   endif()\n-  if ((APPLE AND (NOT (\"${CLANG_VERSION_STRING}\" VERSION_LESS \"9.0\")))\n-    OR (CMAKE_COMPILER_IS_GNUCXX \n-    AND (CMAKE_CXX_COMPILER_VERSION VERSION_GREATER 7.0 AND NOT APPLE)))\n-    set(CMAKE_CXX_FLAGS \"${CMAKE_CXX_FLAGS} -faligned-new\")\n-  endif()\n+  #if ((APPLE AND (NOT (\"${CLANG_VERSION_STRING}\" VERSION_LESS \"9.0\")))\n+    #OR (CMAKE_COMPILER_IS_GNUCXX \n+    #AND (CMAKE_CXX_COMPILER_VERSION VERSION_GREATER 7.0 AND NOT APPLE)))\n+    #set(CMAKE_CXX_FLAGS \"${CMAKE_CXX_FLAGS} -faligned-new\") # This breaks nvcc using gcc-6\n+  #endif()\n   if ($ENV{WERROR})\n     set(CMAKE_CXX_FLAGS \"${CMAKE_CXX_FLAGS} -Werror\")\n   endif($ENV{WERROR})", "body": "## Issue description\r\n\r\ncan't install caffe2 on ubuntu 18.04\r\n\r\n## Code example\r\nThe code I use is \r\n\r\n```\r\nexport CC=/usr/bin/gcc-7\r\ncmake ..\r\n```\r\nThen I got\r\n\r\n```\r\n-- Does not need to define long separately.\r\n-- std::exception_ptr is supported.\r\n-- NUMA is available\r\n-- Current compiler supports avx2 extention. Will build perfkernels.\r\n-- Building using own protobuf under third_party per request.\r\n-- Use custom protobuf build.\r\n-- Caffe2 protobuf include directory: $<BUILD_INTERFACE:/home/jiarui/git/pytorch/third_party/protobuf/src>$<INSTALL_INTERFACE:include>\r\n-- The BLAS backend of choice:Eigen\r\n-- Brace yourself, we are building NNPACK\r\n-- Found PythonInterp: /usr/bin/python (found version \"2.7.15\") \r\n-- Caffe2: Found gflags with new-style gflags target.\r\n-- Caffe2: Cannot find glog automatically. Using legacy find.\r\n-- Caffe2: Found glog (include: /usr/include, library: /usr/lib/x86_64-linux-gnu/libglog.so)\r\n-- Found lmdb    (include: /usr/include, library: /usr/lib/x86_64-linux-gnu/liblmdb.so)\r\n-- Found LevelDB (include: /usr/include, library: /usr/lib/x86_64-linux-gnu/libleveldb.so)\r\n-- Found Snappy  (include: /usr/include, library: /usr/lib/x86_64-linux-gnu/libsnappy.so)\r\n-- Found Numa  (include: /usr/include, library: /usr/lib/x86_64-linux-gnu/libnuma.so)\r\n-- OpenCV found (/usr/share/OpenCV)\r\nCMake Warning at cmake/Dependencies.cmake:330 (find_package):\r\n  By not providing \"FindEigen3.cmake\" in CMAKE_MODULE_PATH this project has\r\n  asked CMake to find a package configuration file provided by \"Eigen3\", but\r\n  CMake did not find one.\r\n\r\n  Could not find a package configuration file provided by \"Eigen3\" with any\r\n  of the following names:\r\n\r\n    Eigen3Config.cmake\r\n    eigen3-config.cmake\r\n\r\n  Add the installation prefix of \"Eigen3\" to CMAKE_PREFIX_PATH or set\r\n  \"Eigen3_DIR\" to a directory containing one of the above files.  If \"Eigen3\"\r\n  provides a separate development package or SDK, be sure it has been\r\n  installed.\r\nCall Stack (most recent call first):\r\n  CMakeLists.txt:184 (include)\r\n\r\n\r\n-- Did not find system Eigen. Using third party subdirectory.\r\nPython 2.7.15rc1\r\n-- Setting Python's include dir to /usr/include/python2.7 from distutils.sysconfig\r\n-- Setting Python's library to /usr/lib/python2.7\r\n-- Found PythonInterp: /usr/bin/python (found suitable version \"2.7.15\", minimum required is \"2.7\") \r\n-- NumPy ver. 1.14.3 found (include: /usr/local/lib/python2.7/dist-packages/numpy/core/include)\r\n-- Could NOT find pybind11 (missing: pybind11_INCLUDE_DIR) \r\n-- MPI support found\r\n-- MPI compile flags: -pthread\r\n-- MPI include path: /usr/lib/x86_64-linux-gnu/openmpi/include/openmpi/usr/lib/x86_64-linux-gnu/openmpi/include/openmpi/opal/mca/event/libevent2022/libevent/usr/lib/x86_64-linux-gnu/openmpi/include/openmpi/opal/mca/event/libevent2022/libevent/include/usr/lib/x86_64-linux-gnu/openmpi/include\r\n-- MPI LINK flags path: -pthread\r\n-- MPI libraries: /usr/lib/x86_64-linux-gnu/openmpi/lib/libmpi_cxx.so/usr/lib/x86_64-linux-gnu/openmpi/lib/libmpi.so\r\nCMake Warning at cmake/Dependencies.cmake:434 (message):\r\n  OpenMPI found, but it is not built with CUDA support.\r\nCall Stack (most recent call first):\r\n  CMakeLists.txt:184 (include)\r\n\r\n\r\n-- Caffe2: CUDA detected: 9.0\r\n-- Caffe2: CUDA nvcc is: /usr/local/cuda/bin/nvcc\r\n-- Caffe2: CUDA toolkit directory: /usr/local/cuda\r\n-- Caffe2: Header version is: 9.0\r\n-- Found cuDNN: v7.2.1  (include: /usr/local/cuda/include, library: /usr/local/cuda/lib64/libcudnn.so)\r\n-- Autodetected CUDA architecture(s): 6.1 6.1 \r\n-- Added CUDA NVCC flags for: -gencode;arch=compute_61,code=sm_61\r\n-- Determining NCCL version from the header file: /usr/include/nccl.h\r\n-- NCCL_MAJOR_VERSION: 2\r\n-- Found NCCL (include: /usr/include, library: /usr/lib/x86_64-linux-gnu/libnccl.so)\r\n-- Could NOT find CUB (missing: CUB_INCLUDE_DIR) \r\n-- Could NOT find Gloo (missing: Gloo_INCLUDE_DIR Gloo_LIBRARY) \r\n-- MPI include path: /usr/lib/x86_64-linux-gnu/openmpi/include/openmpi/usr/lib/x86_64-linux-gnu/openmpi/include/openmpi/opal/mca/event/libevent2022/libevent/usr/lib/x86_64-linux-gnu/openmpi/include/openmpi/opal/mca/event/libevent2022/libevent/include/usr/lib/x86_64-linux-gnu/openmpi/include\r\n-- MPI libraries: /usr/lib/x86_64-linux-gnu/openmpi/lib/libmpi_cxx.so/usr/lib/x86_64-linux-gnu/openmpi/lib/libmpi.so\r\n-- CUDA detected: 9.0\r\n-- Found libcuda: /usr/lib/x86_64-linux-gnu/libcuda.so\r\n-- Found libnvrtc: /usr/local/cuda/lib64/libnvrtc.so\r\n-- Determining NCCL version from the header file: /usr/include/nccl.h\r\n-- NCCL_MAJOR_VERSION: 2\r\n-- Found NCCL (include: /usr/include, library: /usr/lib/x86_64-linux-gnu/libnccl.so)\r\n-- GCC 7.3.0: Adding gcc and gcc_s libs to link line\r\n-- Include NCCL operators\r\n-- Excluding ideep operators as we are not using ideep\r\n-- Including image processing operators\r\n-- Excluding video processing operators due to no opencv\r\n-- Excluding mkl operators as we are not using mkl\r\n-- Include Observer library\r\n-- Using lib/python2.7/dist-packages as python relative installation path\r\n-- Automatically generating missing __init__.py files.\r\n-- A previous caffe2 cmake run already created the __init__.py files.\r\nCMake Warning at CMakeLists.txt:347 (message):\r\n  Generated cmake files are only fully tested if one builds with system glog,\r\n  gflags, and protobuf.  Other settings may generate files that are not well\r\n  tested.\r\n\r\n\r\n-- \r\n-- ******** Summary ********\r\n-- General:\r\n--   CMake version         : 3.10.2\r\n--   CMake command         : /usr/bin/cmake\r\n--   Git version           : v0.1.11-9892-gd6f3c8841\r\n--   System                : Linux\r\n--   C++ compiler          : /usr/bin/g++\r\n--   C++ compiler version  : 7.3.0\r\n--   BLAS                  : Eigen\r\n--   CXX flags             :  -fvisibility-inlines-hidden -rdynamic -DONNX_NAMESPACE=onnx_c2 -O2 -fPIC -Wno-narrowing -Wall -Wextra -Wno-missing-field-initializers -Wno-type-limits -Wno-array-bounds -Wno-unknown-pragmas -Wno-sign-compare -Wno-unused-parameter -Wno-unused-variable -Wno-unused-function -Wno-unused-result -Wno-strict-overflow -Wno-strict-aliasing -Wno-error=deprecated-declarations -Wno-stringop-overflow -faligned-new\r\n--   Build type            : Release\r\n--   Compile definitions   : \r\n--   CMAKE_PREFIX_PATH     : \r\n--   CMAKE_INSTALL_PREFIX  : /usr/local\r\n-- \r\n--   BUILD_CAFFE2          : ON\r\n--   BUILD_ATEN            : OFF\r\n--   BUILD_BINARY          : ON\r\n--   BUILD_CUSTOM_PROTOBUF : ON\r\n--     Link local protobuf : ON\r\n--   BUILD_DOCS            : OFF\r\n--   BUILD_PYTHON          : ON\r\n--     Python version      : 2.7.15\r\n--     Python executable   : /usr/bin/python\r\n--     Pythonlibs version  : 2.7.15rc1\r\n--     Python library      : /usr/lib/python2.7\r\n--     Python includes     : /usr/include/python2.7\r\n--     Python site-packages: lib/python2.7/dist-packages\r\n--   BUILD_SHARED_LIBS     : ON\r\n--   BUILD_TEST            : OFF\r\n--   USE_ASAN              : OFF\r\n--   USE_ATEN              : OFF\r\n--   USE_CUDA              : ON\r\n--     CUDA static link    : OFF\r\n--     USE_CUDNN           : ON\r\n--     CUDA version        : 9.0\r\n--     cuDNN version       : 7.2.1\r\n--     CUDA root directory : /usr/local/cuda\r\n--     CUDA library        : /usr/lib/x86_64-linux-gnu/libcuda.so\r\n--     cudart library      : /usr/local/cuda/lib64/libcudart_static.a;-pthread;dl;/usr/lib/x86_64-linux-gnu/librt.so\r\n--     cublas library      : /usr/local/cuda/lib64/libcublas.so;/usr/local/cuda/lib64/libcublas_device.a\r\n--     cufft library       : /usr/local/cuda/lib64/libcufft.so\r\n--     curand library      : /usr/local/cuda/lib64/libcurand.so\r\n--     cuDNN library       : /usr/local/cuda/lib64/libcudnn.so\r\n--     nvrtc               : /usr/local/cuda/lib64/libnvrtc.so\r\n--     CUDA include path   : /usr/local/cuda/include\r\n--     NVCC executable     : /usr/local/cuda/bin/nvcc\r\n--     CUDA host compiler  : /usr/bin/gcc\r\n--     USE_TENSORRT        : OFF\r\n--   USE_ROCM              : OFF\r\n--   USE_EIGEN_FOR_BLAS    : ON\r\n--   USE_FFMPEG            : OFF\r\n--   USE_GFLAGS            : ON\r\n--   USE_GLOG              : ON\r\n--   USE_GLOO              : ON\r\n--     USE_GLOO_IBVERBS    : OFF\r\n--   USE_LEVELDB           : ON\r\n--     LevelDB version     : 1.20\r\n--     Snappy version      : ..\r\n--   USE_LITE_PROTO        : OFF\r\n--   USE_LMDB              : ON\r\n--     LMDB version        : 0.9.21\r\n--   USE_METAL             : OFF\r\n--   USE_MKL               : \r\n--   USE_MOBILE_OPENGL     : OFF\r\n--   USE_MPI               : ON\r\n--   USE_NCCL              : ON\r\n--     USE_SYSTEM_NCCL     : OFF\r\n--   USE_NERVANA_GPU       : OFF\r\n--   USE_NNPACK            : ON\r\n--   USE_OBSERVERS         : ON\r\n--   USE_OPENCL            : OFF\r\n--   USE_OPENCV            : ON\r\n--     OpenCV version      : 3.2.0\r\n--   USE_OPENMP            : OFF\r\n--   USE_PROF              : OFF\r\n--   USE_REDIS             : OFF\r\n--   USE_ROCKSDB           : OFF\r\n--   USE_ZMQ               : OFF\r\n--   Public Dependencies  : Threads::Threads;gflags;glog::glog\r\n--   Private Dependencies : nnpack;cpuinfo;/usr/lib/x86_64-linux-gnu/liblmdb.so;/usr/lib/x86_64-linux-gnu/libleveldb.so;/usr/lib/x86_64-linux-gnu/libsnappy.so;/usr/lib/x86_64-linux-gnu/libnuma.so;opencv_core;opencv_highgui;opencv_imgproc;opencv_imgcodecs;opencv_videoio;opencv_video;/usr/lib/x86_64-linux-gnu/openmpi/lib/libmpi_cxx.so;/usr/lib/x86_64-linux-gnu/openmpi/lib/libmpi.so;gloo;onnxifi_loader;gcc_s;gcc;dl\r\n-- Configuring done\r\n-- Generating done\r\n\r\n```\r\n\r\nWhen I do `sudo make install`, the error is \r\n\r\n```\r\n[ 77%] Building NVCC (Device) object caffe2/CMakeFiles/caffe2_gpu.dir/operators/caffe2_gpu_generated_gather_op.cu.o\r\n[ 77%] Building NVCC (Device) object caffe2/CMakeFiles/caffe2_gpu.dir/operators/caffe2_gpu_generated_given_tensor_byte_string_to_uint8_fill_op.cu.o\r\n/home/jiarui/git/pytorch/caffe2/operators/given_tensor_byte_string_to_uint8_fill_op.h: In member function \u2018void caffe2::GivenTensorByteStringToUInt8FillOp<Context>::Extract()\u2019:\r\n/home/jiarui/git/pytorch/caffe2/operators/given_tensor_byte_string_to_uint8_fill_op.h:52:51: error: \u2018GetRepeatedArgument<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >\u2019 is not a member of \u2018caffe2::GivenTensorByteStringToUInt8FillOp<Context>\u2019\r\n     auto source_values = OperatorBase::GetRepeatedArgument<string>(\"values\");\r\n                                                   ^~~~~~~~~~~~~~~~~~~~~~~~~~~                                                                               \r\nCMake Error at caffe2_gpu_generated_given_tensor_byte_string_to_uint8_fill_op.cu.o.Release.cmake:279 (message):\r\n  Error generating file\r\n  /home/jiarui/git/pytorch/build/caffe2/CMakeFiles/caffe2_gpu.dir/operators/./caffe2_gpu_generated_given_tensor_byte_string_to_uint8_fill_op.cu.o\r\n\r\n\r\ncaffe2/CMakeFiles/caffe2_gpu.dir/build.make:371: recipe for target 'caffe2/CMakeFiles/caffe2_gpu.dir/operators/caffe2_gpu_generated_given_tensor_byte_string_to_uint8_fill_op.cu.o' failed\r\nmake[2]: *** [caffe2/CMakeFiles/caffe2_gpu.dir/operators/caffe2_gpu_generated_given_tensor_byte_string_to_uint8_fill_op.cu.o] Error 1\r\nCMakeFiles/Makefile2:1435: recipe for target 'caffe2/CMakeFiles/caffe2_gpu.dir/all' failed\r\nmake[1]: *** [caffe2/CMakeFiles/caffe2_gpu.dir/all] Error 2\r\nMakefile:140: recipe for target 'all' failed\r\nmake: *** [all] Error 2\r\n\r\n```\r\n\r\nBy the way, the default gcc in my computer is \r\n\r\n```\r\n$ gcc --version\r\ngcc (GCC) 6.3.0\r\nCopyright (C) 2016 Free Software Foundation, Inc.\r\nThis is free software; see the source for copying conditions.  There is NO\r\nwarranty; not even for MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\r\n\r\n$ which gcc\r\n/usr/local/bin/gcc\r\n\r\n$ gcc-7 --version\r\ngcc-7 (Ubuntu 7.3.0-16ubuntu3) 7.3.0\r\nCopyright (C) 2017 Free Software Foundation, Inc.\r\nThis is free software; see the source for copying conditions.  There is NO\r\nwarranty; not even for MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\r\n\r\n$ which gcc-7\r\n/usr/bin/gcc-7\r\n```\r\n\r\n\r\n## System Info\r\n- PyTorch or Caffe2: Caffe2\r\n- How you installed PyTorch (conda, pip, source): source\r\n- Build command you used (if compiling from source): sudo make install\r\n- OS: Ubuntu18.04\r\n- PyTorch version:\r\n- Python version: 2.7.15\r\n- CUDA/cuDNN version: 9.2/ 7.2.1\r\n- GPU models and configuration:\r\n- GCC version (if compiling from source): 7.3.0\r\n- CMake version: 3.10.2\r\n- Versions of any other relevant libraries:\r\n\r\n## More information\r\nI followed instructions [here](https://github.com/pytorch/pytorch/issues/9208) and Commented out the appropriate lines in the main `CMakeLists.txt `:\r\n\r\n```\r\ndiff --git a/CMakeLists.txt b/CMakeLists.txt\r\nindex 1cb5d13bc..3ae2dcaa8 100644\r\n--- a/CMakeLists.txt\r\n+++ b/CMakeLists.txt\r\n@@ -229,11 +229,11 @@ if(NOT MSVC)\r\n     set(CMAKE_CXX_FLAGS \"${CMAKE_CXX_FLAGS} -Wno-constexpr-not-const\")\r\n     set(CMAKE_CXX_FLAGS \"${CMAKE_CXX_FLAGS} -Wno-missing-braces\")\r\n   endif()\r\n-  if ((APPLE AND (NOT (\"${CLANG_VERSION_STRING}\" VERSION_LESS \"9.0\")))\r\n-    OR (CMAKE_COMPILER_IS_GNUCXX \r\n-    AND (CMAKE_CXX_COMPILER_VERSION VERSION_GREATER 7.0 AND NOT APPLE)))\r\n-    set(CMAKE_CXX_FLAGS \"${CMAKE_CXX_FLAGS} -faligned-new\")\r\n-  endif()\r\n+  #if ((APPLE AND (NOT (\"${CLANG_VERSION_STRING}\" VERSION_LESS \"9.0\")))\r\n+    #OR (CMAKE_COMPILER_IS_GNUCXX \r\n+    #AND (CMAKE_CXX_COMPILER_VERSION VERSION_GREATER 7.0 AND NOT APPLE)))\r\n+    #set(CMAKE_CXX_FLAGS \"${CMAKE_CXX_FLAGS} -faligned-new\") # This breaks nvcc using gcc-6\r\n+  #endif()\r\n   if ($ENV{WERROR})\r\n     set(CMAKE_CXX_FLAGS \"${CMAKE_CXX_FLAGS} -Werror\")\r\n   endif($ENV{WERROR})\r\n```"}