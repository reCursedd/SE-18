{"url": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/207715497", "pull_request_review_id": 143390082, "id": 207715497, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwNzcxNTQ5Nw==", "diff_hunk": "@@ -186,28 +186,122 @@ def test_gemm(self):\n             output[\"Y\"],\n             alpha * np.dot(A, B) + beta * C)\n \n-        # broadcast\n+        # setup broadcastable C\n         C = np.random.randn(4).astype(np.float32)\n+\n+        # broadcast for opset7\n         node_def = make_node(\n             'Gemm',\n             ['A', 'B', 'C'],\n             [\"Y\"],\n             alpha=alpha,\n             beta=beta)\n-        output = c2.run_node(node_def, [A, B, C])\n+        output = c2.run_node(node_def, [A, B, C], opset_version=7)\n+        np.testing.assert_almost_equal(\n+            output[\"Y\"],\n+            alpha * np.dot(A, B) + beta * C)\n+        # broadcast for opset3 and 6\n+        node_def = make_node(\n+            'Gemm',\n+            ['A', 'B', 'C'],\n+            [\"Y\"],\n+            alpha=alpha,\n+            beta=beta,\n+            broadcast=1)\n+        output = c2.run_node(node_def, [A, B, C], opset_version=6)\n+        np.testing.assert_almost_equal(\n+            output[\"Y\"],\n+            alpha * np.dot(A, B) + beta * C)\n+\n+        # transB\n+        B = np.transpose(B)\n+\n+        # transB and broadcast for opset7\n+        node_def = make_node(\n+            'Gemm',\n+            ['A', 'B', 'C'],\n+            [\"Y\"],\n+            alpha=alpha,\n+            beta=beta,\n+            transB=True)", "path": "caffe2/python/onnx/tests/c2_ref_test.py", "position": null, "original_position": 52, "commit_id": "912e3b5d70711a4fcdd8716893239deee8de93c3", "original_commit_id": "c94eb43478f5c05939117d77aaad1cc22b8df9d7", "user": {"login": "houseroad", "id": 30275821, "node_id": "MDQ6VXNlcjMwMjc1ODIx", "avatar_url": "https://avatars0.githubusercontent.com/u/30275821?v=4", "gravatar_id": "", "url": "https://api.github.com/users/houseroad", "html_url": "https://github.com/houseroad", "followers_url": "https://api.github.com/users/houseroad/followers", "following_url": "https://api.github.com/users/houseroad/following{/other_user}", "gists_url": "https://api.github.com/users/houseroad/gists{/gist_id}", "starred_url": "https://api.github.com/users/houseroad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/houseroad/subscriptions", "organizations_url": "https://api.github.com/users/houseroad/orgs", "repos_url": "https://api.github.com/users/houseroad/repos", "events_url": "https://api.github.com/users/houseroad/events{/privacy}", "received_events_url": "https://api.github.com/users/houseroad/received_events", "type": "User", "site_admin": false}, "body": "transB=1", "created_at": "2018-08-04T18:12:44Z", "updated_at": "2018-11-23T15:48:46Z", "html_url": "https://github.com/pytorch/pytorch/pull/10108#discussion_r207715497", "pull_request_url": "https://api.github.com/repos/pytorch/pytorch/pulls/10108", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/207715497"}, "html": {"href": "https://github.com/pytorch/pytorch/pull/10108#discussion_r207715497"}, "pull_request": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/10108"}}, "body_html": "<p>transB=1</p>", "body_text": "transB=1"}