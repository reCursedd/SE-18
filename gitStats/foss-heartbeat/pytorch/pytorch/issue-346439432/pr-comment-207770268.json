{"url": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/207770268", "pull_request_review_id": 143447822, "id": 207770268, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwNzc3MDI2OA==", "diff_hunk": "@@ -674,25 +674,40 @@ Caffe2Ops Caffe2Backend::CreateGemm(\n \n   auto trans_a = onnx_node->attributes.get<int64_t>(\"transA\", 0L);\n   auto trans_b = onnx_node->attributes.get<int64_t>(\"transB\", 0L);\n-  auto broadcast = onnx_node->attributes.get<int64_t>(\"broadcast\", 0L);\n+  // Support broadcast by default when opset_version > 6.\n+  auto broadcast =\n+    onnx_node->attributes.get<int64_t>(\"broadcast\",\n+                                       (ctx.opset_version() > 6) ? 1L : 0L);\n \n   bool use_fc = false;\n-  if ((!trans_a) && trans_b) {\n-    if (broadcast) {\n-      use_fc = true;\n-    } else {\n-      const auto input_c_vi_iter = ctx.value_infos().find(node.input(2));\n-      if (input_c_vi_iter != ctx.value_infos().end() &&\n-          input_c_vi_iter->second.type().tensor_type().shape().dim_size() ==\n-              1) {\n-        use_fc = true;\n+  if (!trans_a && broadcast) {\n+    // If we have broadcast and the input_c's dim matching the FC requirement,\n+    // we could convert this onnx op to caffe2 FC op.\n+    const auto input_c_vi_iter = ctx.value_infos().find(node.input(2));\n+    const auto input_b_vi_iter = ctx.value_infos().find(node.input(1));\n+    if (input_c_vi_iter != ctx.value_infos().end() &&\n+        input_c_vi_iter->second.type().tensor_type().has_shape() &&\n+        input_b_vi_iter != ctx.value_infos().end() &&", "path": "caffe2/onnx/backend.cc", "position": null, "original_position": 27, "commit_id": "912e3b5d70711a4fcdd8716893239deee8de93c3", "original_commit_id": "05c571fcd0aef9c63b071ce6a1b213e243acf495", "user": {"login": "houseroad", "id": 30275821, "node_id": "MDQ6VXNlcjMwMjc1ODIx", "avatar_url": "https://avatars0.githubusercontent.com/u/30275821?v=4", "gravatar_id": "", "url": "https://api.github.com/users/houseroad", "html_url": "https://github.com/houseroad", "followers_url": "https://api.github.com/users/houseroad/followers", "following_url": "https://api.github.com/users/houseroad/following{/other_user}", "gists_url": "https://api.github.com/users/houseroad/gists{/gist_id}", "starred_url": "https://api.github.com/users/houseroad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/houseroad/subscriptions", "organizations_url": "https://api.github.com/users/houseroad/orgs", "repos_url": "https://api.github.com/users/houseroad/repos", "events_url": "https://api.github.com/users/houseroad/events{/privacy}", "received_events_url": "https://api.github.com/users/houseroad/received_events", "type": "User", "site_admin": false}, "body": "@JerryShih let's be more aggressive, two things to do:\r\n1) report error if the invalid condition appear,\r\n2) if B's shape information is not available, always assume shapes match.", "created_at": "2018-08-06T04:12:33Z", "updated_at": "2018-11-23T15:48:48Z", "html_url": "https://github.com/pytorch/pytorch/pull/10108#discussion_r207770268", "pull_request_url": "https://api.github.com/repos/pytorch/pytorch/pulls/10108", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/207770268"}, "html": {"href": "https://github.com/pytorch/pytorch/pull/10108#discussion_r207770268"}, "pull_request": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/10108"}}, "body_html": "<p><a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=5842681\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/JerryShih\">@JerryShih</a> let's be more aggressive, two things to do:</p>\n<ol>\n<li>report error if the invalid condition appear,</li>\n<li>if B's shape information is not available, always assume shapes match.</li>\n</ol>", "body_text": "@JerryShih let's be more aggressive, two things to do:\n\nreport error if the invalid condition appear,\nif B's shape information is not available, always assume shapes match.", "in_reply_to_id": 207768438}