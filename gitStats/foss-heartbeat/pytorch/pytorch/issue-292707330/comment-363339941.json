{"url": "https://api.github.com/repos/pytorch/pytorch/issues/comments/363339941", "html_url": "https://github.com/pytorch/pytorch/issues/4930#issuecomment-363339941", "issue_url": "https://api.github.com/repos/pytorch/pytorch/issues/4930", "id": 363339941, "node_id": "MDEyOklzc3VlQ29tbWVudDM2MzMzOTk0MQ==", "user": {"login": "SsnL", "id": 5674597, "node_id": "MDQ6VXNlcjU2NzQ1OTc=", "avatar_url": "https://avatars2.githubusercontent.com/u/5674597?v=4", "gravatar_id": "", "url": "https://api.github.com/users/SsnL", "html_url": "https://github.com/SsnL", "followers_url": "https://api.github.com/users/SsnL/followers", "following_url": "https://api.github.com/users/SsnL/following{/other_user}", "gists_url": "https://api.github.com/users/SsnL/gists{/gist_id}", "starred_url": "https://api.github.com/users/SsnL/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/SsnL/subscriptions", "organizations_url": "https://api.github.com/users/SsnL/orgs", "repos_url": "https://api.github.com/users/SsnL/repos", "events_url": "https://api.github.com/users/SsnL/events{/privacy}", "received_events_url": "https://api.github.com/users/SsnL/received_events", "type": "User", "site_admin": false}, "created_at": "2018-02-06T07:55:44Z", "updated_at": "2018-02-06T07:55:44Z", "author_association": "CONTRIBUTOR", "body_html": "<blockquote>\n<p>But model parameters and my code for Language Model show that Cudnn LSTM and non-Cudnn LSTM are type 2.</p>\n</blockquote>\n<p>What I was trying to say is that do not look at the model parameter shapes as they are deceiving. All the cudnn wrapper does is to give a contiguous chunk of GPU memory to cudnn. There are not redundant parameters, it's just PyTorch gives cudnn more than what it needs.</p>\n<p>doc:<br>\n<a href=\"http://docs.nvidia.com/deeplearning/sdk/cudnn-developer-guide/index.html#cudnnDirectionMode_t\" rel=\"nofollow\">http://docs.nvidia.com/deeplearning/sdk/cudnn-developer-guide/index.html#cudnnDirectionMode_t</a></p>", "body_text": "But model parameters and my code for Language Model show that Cudnn LSTM and non-Cudnn LSTM are type 2.\n\nWhat I was trying to say is that do not look at the model parameter shapes as they are deceiving. All the cudnn wrapper does is to give a contiguous chunk of GPU memory to cudnn. There are not redundant parameters, it's just PyTorch gives cudnn more than what it needs.\ndoc:\nhttp://docs.nvidia.com/deeplearning/sdk/cudnn-developer-guide/index.html#cudnnDirectionMode_t", "body": "> But model parameters and my code for Language Model show that Cudnn LSTM and non-Cudnn LSTM are type 2.\r\n\r\nWhat I was trying to say is that do not look at the model parameter shapes as they are deceiving. All the cudnn wrapper does is to give a contiguous chunk of GPU memory to cudnn. There are not redundant parameters, it's just PyTorch gives cudnn more than what it needs.\r\n\r\ndoc:\r\nhttp://docs.nvidia.com/deeplearning/sdk/cudnn-developer-guide/index.html#cudnnDirectionMode_t\r\n\r\n"}