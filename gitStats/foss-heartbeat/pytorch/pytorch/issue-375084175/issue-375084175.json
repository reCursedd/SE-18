{"url": "https://api.github.com/repos/pytorch/pytorch/issues/13254", "repository_url": "https://api.github.com/repos/pytorch/pytorch", "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/13254/labels{/name}", "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/13254/comments", "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/13254/events", "html_url": "https://github.com/pytorch/pytorch/issues/13254", "id": 375084175, "node_id": "MDU6SXNzdWUzNzUwODQxNzU=", "number": 13254, "title": "Make JIT less CUDA-centric", "user": {"login": "ezyang", "id": 13564, "node_id": "MDQ6VXNlcjEzNTY0", "avatar_url": "https://avatars0.githubusercontent.com/u/13564?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ezyang", "html_url": "https://github.com/ezyang", "followers_url": "https://api.github.com/users/ezyang/followers", "following_url": "https://api.github.com/users/ezyang/following{/other_user}", "gists_url": "https://api.github.com/users/ezyang/gists{/gist_id}", "starred_url": "https://api.github.com/users/ezyang/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ezyang/subscriptions", "organizations_url": "https://api.github.com/users/ezyang/orgs", "repos_url": "https://api.github.com/users/ezyang/repos", "events_url": "https://api.github.com/users/ezyang/events{/privacy}", "received_events_url": "https://api.github.com/users/ezyang/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 679953983, "node_id": "MDU6TGFiZWw2Nzk5NTM5ODM=", "url": "https://api.github.com/repos/pytorch/pytorch/labels/jit", "name": "jit", "color": "c5def5", "default": false}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2018-10-29T15:49:09Z", "updated_at": "2018-11-19T17:23:39Z", "closed_at": "2018-11-19T17:23:39Z", "author_association": "CONTRIBUTOR", "body_html": "<p>In a bunch of places in the JIT, we store an <code>int</code> representing a device index (where it is <code>-1</code> for CPU and otherwise represents a CUDA device). We have a perfectly good <code>at::Device</code> class which should be used instead, and prevents people from hard-coding assumptions that CPU and CUDA are the only devices.</p>\n<p>If there are performance considerations, let me know, but at least in terms of memory footprint, <code>at::Device</code> still fits in a single 64-bit word.</p>", "body_text": "In a bunch of places in the JIT, we store an int representing a device index (where it is -1 for CPU and otherwise represents a CUDA device). We have a perfectly good at::Device class which should be used instead, and prevents people from hard-coding assumptions that CPU and CUDA are the only devices.\nIf there are performance considerations, let me know, but at least in terms of memory footprint, at::Device still fits in a single 64-bit word.", "body": "In a bunch of places in the JIT, we store an `int` representing a device index (where it is `-1` for CPU and otherwise represents a CUDA device). We have a perfectly good `at::Device` class which should be used instead, and prevents people from hard-coding assumptions that CPU and CUDA are the only devices.\r\n\r\nIf there are performance considerations, let me know, but at least in terms of memory footprint, `at::Device` still fits in a single 64-bit word."}