{"url": "https://api.github.com/repos/pytorch/pytorch/issues/comments/352623888", "html_url": "https://github.com/pytorch/pytorch/pull/4174#issuecomment-352623888", "issue_url": "https://api.github.com/repos/pytorch/pytorch/issues/4174", "id": 352623888, "node_id": "MDEyOklzc3VlQ29tbWVudDM1MjYyMzg4OA==", "user": {"login": "yongjik", "id": 31876421, "node_id": "MDQ6VXNlcjMxODc2NDIx", "avatar_url": "https://avatars2.githubusercontent.com/u/31876421?v=4", "gravatar_id": "", "url": "https://api.github.com/users/yongjik", "html_url": "https://github.com/yongjik", "followers_url": "https://api.github.com/users/yongjik/followers", "following_url": "https://api.github.com/users/yongjik/following{/other_user}", "gists_url": "https://api.github.com/users/yongjik/gists{/gist_id}", "starred_url": "https://api.github.com/users/yongjik/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/yongjik/subscriptions", "organizations_url": "https://api.github.com/users/yongjik/orgs", "repos_url": "https://api.github.com/users/yongjik/repos", "events_url": "https://api.github.com/users/yongjik/events{/privacy}", "received_events_url": "https://api.github.com/users/yongjik/received_events", "type": "User", "site_admin": false}, "created_at": "2017-12-19T02:48:21Z", "updated_at": "2017-12-19T02:48:21Z", "author_association": "CONTRIBUTOR", "body_html": "<p>My PR should not change any visible behavior.  It is strictly performance optimization: it merely shuffles the order in which CUDA kernels visit each element of a tensor.  (For that matter, collapseDims() does not change the tensor's shape either: it merely tries to find a more efficient way of iterating over the elements for the particular CUDA kernel launch.)</p>\n<p>I tested your example code above and it seems a new tensor storage is already created with the \"expanded\" dimension before THC_pointwiseApply2 is even called: <div class=\"border rounded-1 my-2\">\n  <div class=\"f6 px-3 py-2 lh-condensed border-bottom bg-gray-light\">\n    <p class=\"mb-0 text-bold\">\n      <a href=\"https://github.com/pytorch/pytorch/blob/9bf5e40dfa66a78092a1c0dc953aed05406e1bf4/aten/src/THC/generic/THCTensorMathPairwise.cu#L74\">pytorch/aten/src/THC/generic/THCTensorMathPairwise.cu</a>\n    </p>\n    <p class=\"mb-0 text-gray-light\">\n         Line 74\n      in\n      <a data-pjax=\"true\" class=\"commit-tease-sha\" href=\"/pytorch/pytorch/commit/9bf5e40dfa66a78092a1c0dc953aed05406e1bf4\">9bf5e40</a>\n    </p>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper blob-wrapper-embedded data\">\n    <table class=\"highlight tab-size mb-0 js-file-line-container\" data-tab-size=\"8\">\n\n        <tbody><tr class=\"border-0\">\n          <td id=\"L74\" class=\"blob-num border-0 px-3 py-0 bg-white js-line-number\" data-line-number=\"74\"></td>\n          <td id=\"LC74\" class=\"blob-code border-0 px-3 py-0 bg-white blob-code-inner js-file-line\"> <span class=\"pl-c1\">THCTensor_</span>(resizeAs)(state, self_, src_); </td>\n        </tr>\n    </tbody></table>\n  </div>\n</div>\n</p>\n<p>So my PR can't help with <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load issue title\" data-id=\"279128190\" data-permission-text=\"Issue title is private\" data-url=\"https://github.com/pytorch/pytorch/issues/4010\" data-hovercard-type=\"issue\" data-hovercard-url=\"/pytorch/pytorch/issues/4010/hovercard\" href=\"https://github.com/pytorch/pytorch/issues/4010\">#4010</a>.</p>", "body_text": "My PR should not change any visible behavior.  It is strictly performance optimization: it merely shuffles the order in which CUDA kernels visit each element of a tensor.  (For that matter, collapseDims() does not change the tensor's shape either: it merely tries to find a more efficient way of iterating over the elements for the particular CUDA kernel launch.)\nI tested your example code above and it seems a new tensor storage is already created with the \"expanded\" dimension before THC_pointwiseApply2 is even called: \n  \n    \n      pytorch/aten/src/THC/generic/THCTensorMathPairwise.cu\n    \n    \n         Line 74\n      in\n      9bf5e40\n    \n    \n    \n    \n\n        \n          \n           THCTensor_(resizeAs)(state, self_, src_); \n        \n    \n  \n\n\nSo my PR can't help with #4010.", "body": "My PR should not change any visible behavior.  It is strictly performance optimization: it merely shuffles the order in which CUDA kernels visit each element of a tensor.  (For that matter, collapseDims() does not change the tensor's shape either: it merely tries to find a more efficient way of iterating over the elements for the particular CUDA kernel launch.)\r\n\r\nI tested your example code above and it seems a new tensor storage is already created with the \"expanded\" dimension before THC_pointwiseApply2 is even called: https://github.com/pytorch/pytorch/blob/9bf5e40dfa66a78092a1c0dc953aed05406e1bf4/aten/src/THC/generic/THCTensorMathPairwise.cu#L74\r\n\r\nSo my PR can't help with #4010."}