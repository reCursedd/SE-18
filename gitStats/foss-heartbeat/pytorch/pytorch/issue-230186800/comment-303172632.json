{"url": "https://api.github.com/repos/pytorch/pytorch/issues/comments/303172632", "html_url": "https://github.com/pytorch/pytorch/pull/1603#issuecomment-303172632", "issue_url": "https://api.github.com/repos/pytorch/pytorch/issues/1603", "id": 303172632, "node_id": "MDEyOklzc3VlQ29tbWVudDMwMzE3MjYzMg==", "user": {"login": "apaszke", "id": 4583066, "node_id": "MDQ6VXNlcjQ1ODMwNjY=", "avatar_url": "https://avatars3.githubusercontent.com/u/4583066?v=4", "gravatar_id": "", "url": "https://api.github.com/users/apaszke", "html_url": "https://github.com/apaszke", "followers_url": "https://api.github.com/users/apaszke/followers", "following_url": "https://api.github.com/users/apaszke/following{/other_user}", "gists_url": "https://api.github.com/users/apaszke/gists{/gist_id}", "starred_url": "https://api.github.com/users/apaszke/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/apaszke/subscriptions", "organizations_url": "https://api.github.com/users/apaszke/orgs", "repos_url": "https://api.github.com/users/apaszke/repos", "events_url": "https://api.github.com/users/apaszke/events{/privacy}", "received_events_url": "https://api.github.com/users/apaszke/received_events", "type": "User", "site_admin": false}, "created_at": "2017-05-22T17:51:05Z", "updated_at": "2017-05-22T17:51:05Z", "author_association": "MEMBER", "body_html": "<p>The problem I have is that the copy list will contain duplicate entries for the currently generated type. I thought it's a map, so the later declaration would overwrite the value for this pyType, but it all works because <a href=\"https://github.com/pytorch/pytorch/blob/master/torch/csrc/copy_utils.h#L85\">it's a vector</a> and the unoptimized implementation will be behind the main one. I guess it's ok to leave it like that <g-emoji class=\"g-emoji\" alias=\"confused\" fallback-src=\"https://assets-cdn.github.com/images/icons/emoji/unicode/1f615.png\">\ud83d\ude15</g-emoji></p>", "body_text": "The problem I have is that the copy list will contain duplicate entries for the currently generated type. I thought it's a map, so the later declaration would overwrite the value for this pyType, but it all works because it's a vector and the unoptimized implementation will be behind the main one. I guess it's ok to leave it like that \ud83d\ude15", "body": "The problem I have is that the copy list will contain duplicate entries for the currently generated type. I thought it's a map, so the later declaration would overwrite the value for this pyType, but it all works because [it's a vector](https://github.com/pytorch/pytorch/blob/master/torch/csrc/copy_utils.h#L85) and the unoptimized implementation will be behind the main one. I guess it's ok to leave it like that \ud83d\ude15 "}