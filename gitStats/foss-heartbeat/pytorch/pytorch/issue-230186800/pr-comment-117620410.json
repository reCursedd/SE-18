{"url": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/117620410", "pull_request_review_id": 39345245, "id": 117620410, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDExNzYyMDQxMA==", "diff_hunk": "@@ -2,17 +2,80 @@\n #define TH_GENERIC_FILE \"generic/THTensorCopy.c\"\n #else\n \n+int THTensor_(copyTransposeValid)(THTensor *tensor, THTensor *src) {\n+  const int MIN_SZ = 128 * 128;\n+  return THTensor_(isContiguous)(tensor) &&\n+         THTensor_(nDimension)(src) == 2 &&\n+         THTensor_(stride)(src, 0) == 1 &&\n+         THTensor_(stride)(src, 1) == THTensor_(size)(src, 0) &&\n+         THTensor_(nElement)(tensor) > MIN_SZ;\n+}\n+\n+// special case copy where tensor is contiguous and src is a transposed matrix\n+// This can be generalized to most copies, but it's tricker\n+void THTensor_(copyTranspose)(THTensor *tensor, THTensor *src) {\n+  #define MIN(x, y) (((x) < (y)) ? (x) : (y))\n+  #define MAX(x, y) (((x) > (y)) ? (x) : (y))\n+\n+  const int BLOCK_SZ = 128;", "path": "torch/lib/TH/generic/THTensorCopy.c", "position": null, "original_position": 19, "commit_id": "0409b42a02275e426de6a16ed22a861e2b4264ce", "original_commit_id": "6d508b9bbf3897cb1b7747baa2c1df19820b535c", "user": {"login": "apaszke", "id": 4583066, "node_id": "MDQ6VXNlcjQ1ODMwNjY=", "avatar_url": "https://avatars3.githubusercontent.com/u/4583066?v=4", "gravatar_id": "", "url": "https://api.github.com/users/apaszke", "html_url": "https://github.com/apaszke", "followers_url": "https://api.github.com/users/apaszke/followers", "following_url": "https://api.github.com/users/apaszke/following{/other_user}", "gists_url": "https://api.github.com/users/apaszke/gists{/gist_id}", "starred_url": "https://api.github.com/users/apaszke/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/apaszke/subscriptions", "organizations_url": "https://api.github.com/users/apaszke/orgs", "repos_url": "https://api.github.com/users/apaszke/repos", "events_url": "https://api.github.com/users/apaszke/events{/privacy}", "received_events_url": "https://api.github.com/users/apaszke/received_events", "type": "User", "site_admin": false}, "body": "It'd be better to use the same constant in here and in `copyTransposeValid`. Right now it can get out of sync when someone changes it in a single place.", "created_at": "2017-05-21T00:28:47Z", "updated_at": "2018-11-23T15:33:31Z", "html_url": "https://github.com/pytorch/pytorch/pull/1603#discussion_r117620410", "pull_request_url": "https://api.github.com/repos/pytorch/pytorch/pulls/1603", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/117620410"}, "html": {"href": "https://github.com/pytorch/pytorch/pull/1603#discussion_r117620410"}, "pull_request": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/1603"}}, "body_html": "<p>It'd be better to use the same constant in here and in <code>copyTransposeValid</code>. Right now it can get out of sync when someone changes it in a single place.</p>", "body_text": "It'd be better to use the same constant in here and in copyTransposeValid. Right now it can get out of sync when someone changes it in a single place."}