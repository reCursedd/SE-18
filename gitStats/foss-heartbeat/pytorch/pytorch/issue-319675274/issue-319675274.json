{"url": "https://api.github.com/repos/pytorch/pytorch/issues/7195", "repository_url": "https://api.github.com/repos/pytorch/pytorch", "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/7195/labels{/name}", "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/7195/comments", "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/7195/events", "html_url": "https://github.com/pytorch/pytorch/issues/7195", "id": 319675274, "node_id": "MDU6SXNzdWUzMTk2NzUyNzQ=", "number": 7195, "title": "[JIT][script] Implement nn.Sequential in a way that can be inlined into script modules", "user": {"login": "jamesr66a", "id": 4685384, "node_id": "MDQ6VXNlcjQ2ODUzODQ=", "avatar_url": "https://avatars2.githubusercontent.com/u/4685384?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jamesr66a", "html_url": "https://github.com/jamesr66a", "followers_url": "https://api.github.com/users/jamesr66a/followers", "following_url": "https://api.github.com/users/jamesr66a/following{/other_user}", "gists_url": "https://api.github.com/users/jamesr66a/gists{/gist_id}", "starred_url": "https://api.github.com/users/jamesr66a/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jamesr66a/subscriptions", "organizations_url": "https://api.github.com/users/jamesr66a/orgs", "repos_url": "https://api.github.com/users/jamesr66a/repos", "events_url": "https://api.github.com/users/jamesr66a/events{/privacy}", "received_events_url": "https://api.github.com/users/jamesr66a/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 679953983, "node_id": "MDU6TGFiZWw2Nzk5NTM5ODM=", "url": "https://api.github.com/repos/pytorch/pytorch/labels/jit", "name": "jit", "color": "c5def5", "default": false}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2018-05-02T19:05:35Z", "updated_at": "2018-06-12T19:15:23Z", "closed_at": "2018-06-12T19:15:23Z", "author_association": "CONTRIBUTOR", "body_html": "<pre><code>import torch\n\nclass HaveSequential(torch.jit.ScriptModule):\n    def __init__(self):\n        super().__init__()\n        self.someseq = torch.nn.Sequential(\n                            torch.nn.Conv2d(1, 20, 5),\n                            torch.nn.ReLU(),\n                            torch.nn.Conv2d(20, 64, 5),\n                            torch.nn.ReLU()\n                        )\n\n    @torch.jit.script_method\n    def forward(self, x):\n        return self.someseq(x)\n\nhs = HaveSequential()\nprint(hs.__getattr__('forward').graph)\n</code></pre>\n<p>We should be able to inline the instance of nn.Sequential into the graph.</p>", "body_text": "import torch\n\nclass HaveSequential(torch.jit.ScriptModule):\n    def __init__(self):\n        super().__init__()\n        self.someseq = torch.nn.Sequential(\n                            torch.nn.Conv2d(1, 20, 5),\n                            torch.nn.ReLU(),\n                            torch.nn.Conv2d(20, 64, 5),\n                            torch.nn.ReLU()\n                        )\n\n    @torch.jit.script_method\n    def forward(self, x):\n        return self.someseq(x)\n\nhs = HaveSequential()\nprint(hs.__getattr__('forward').graph)\n\nWe should be able to inline the instance of nn.Sequential into the graph.", "body": "```\r\nimport torch\r\n\r\nclass HaveSequential(torch.jit.ScriptModule):\r\n    def __init__(self):\r\n        super().__init__()\r\n        self.someseq = torch.nn.Sequential(\r\n                            torch.nn.Conv2d(1, 20, 5),\r\n                            torch.nn.ReLU(),\r\n                            torch.nn.Conv2d(20, 64, 5),\r\n                            torch.nn.ReLU()\r\n                        )\r\n\r\n    @torch.jit.script_method\r\n    def forward(self, x):\r\n        return self.someseq(x)\r\n\r\nhs = HaveSequential()\r\nprint(hs.__getattr__('forward').graph)\r\n```\r\n\r\nWe should be able to inline the instance of nn.Sequential into the graph."}