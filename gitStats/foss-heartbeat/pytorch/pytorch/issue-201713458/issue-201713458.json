{"url": "https://api.github.com/repos/pytorch/pytorch/issues/488", "repository_url": "https://api.github.com/repos/pytorch/pytorch", "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/488/labels{/name}", "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/488/comments", "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/488/events", "html_url": "https://github.com/pytorch/pytorch/issues/488", "id": 201713458, "node_id": "MDU6SXNzdWUyMDE3MTM0NTg=", "number": 488, "title": "OpenCL Support", "user": {"login": "cathalgarvey", "id": 1167837, "node_id": "MDQ6VXNlcjExNjc4Mzc=", "avatar_url": "https://avatars3.githubusercontent.com/u/1167837?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cathalgarvey", "html_url": "https://github.com/cathalgarvey", "followers_url": "https://api.github.com/users/cathalgarvey/followers", "following_url": "https://api.github.com/users/cathalgarvey/following{/other_user}", "gists_url": "https://api.github.com/users/cathalgarvey/gists{/gist_id}", "starred_url": "https://api.github.com/users/cathalgarvey/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cathalgarvey/subscriptions", "organizations_url": "https://api.github.com/users/cathalgarvey/orgs", "repos_url": "https://api.github.com/users/cathalgarvey/repos", "events_url": "https://api.github.com/users/cathalgarvey/events{/privacy}", "received_events_url": "https://api.github.com/users/cathalgarvey/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 466131885, "node_id": "MDU6TGFiZWw0NjYxMzE4ODU=", "url": "https://api.github.com/repos/pytorch/pytorch/labels/needs%20discussion", "name": "needs discussion", "color": "cc317c", "default": false}, {"id": 424131853, "node_id": "MDU6TGFiZWw0MjQxMzE4NTM=", "url": "https://api.github.com/repos/pytorch/pytorch/labels/wontfix", "name": "wontfix", "color": "ffffff", "default": true}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 40, "created_at": "2017-01-18T22:41:01Z", "updated_at": "2018-08-31T11:51:46Z", "closed_at": "2017-01-18T22:50:09Z", "author_association": "NONE", "body_html": "<p><a href=\"https://github.com/hughperkins/distro-cl\">Torch7 has OpenCL support</a> via <a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=123560\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/hughperkins\">@hughperkins</a>' work - if PyTorch is based on the same backends as Lua Torch, how hard would it be to port OpenCL over and get this working on virtually all modern GPUs and integrated graphics?</p>\n<p>Deep learning needs more accessible beginners' experience, so integrated graphics would help win early mindshare. DL also needs cheaper hardware; NVidia's monopoly and crazy prices are a hard and unnecessary tax.</p>\n<p>Further; there are higher-abstractions like Keras that currently only support CUDA because the lower abstractions only support CUDA; if PyTorch ported Torch7's OpenCL backend, then building a Keras back-end would be a step towards OpenCL-ising a large codebase written for Keras, also.</p>\n<p>The first Python OpenCL framework for DL will win a lot of credibility at beginners' workshops and in the creative-AI space where ubiquitous hardware is a must. OpenCL support should be a priority, in my opinion, for any new framework in this space. <a href=\"https://github.com/tensorflow/tensorflow/issues/22\" data-hovercard-type=\"issue\" data-hovercard-url=\"/tensorflow/tensorflow/issues/22/hovercard\">Tensorflow is already working on OpenCL</a>, so perhaps PyTorch will miss this window of opportunity. I'd love to see both hit the milestone at once, to encourage healthy competition.</p>", "body_text": "Torch7 has OpenCL support via @hughperkins' work - if PyTorch is based on the same backends as Lua Torch, how hard would it be to port OpenCL over and get this working on virtually all modern GPUs and integrated graphics?\nDeep learning needs more accessible beginners' experience, so integrated graphics would help win early mindshare. DL also needs cheaper hardware; NVidia's monopoly and crazy prices are a hard and unnecessary tax.\nFurther; there are higher-abstractions like Keras that currently only support CUDA because the lower abstractions only support CUDA; if PyTorch ported Torch7's OpenCL backend, then building a Keras back-end would be a step towards OpenCL-ising a large codebase written for Keras, also.\nThe first Python OpenCL framework for DL will win a lot of credibility at beginners' workshops and in the creative-AI space where ubiquitous hardware is a must. OpenCL support should be a priority, in my opinion, for any new framework in this space. Tensorflow is already working on OpenCL, so perhaps PyTorch will miss this window of opportunity. I'd love to see both hit the milestone at once, to encourage healthy competition.", "body": "[Torch7 has OpenCL support](https://github.com/hughperkins/distro-cl) via @hughperkins' work - if PyTorch is based on the same backends as Lua Torch, how hard would it be to port OpenCL over and get this working on virtually all modern GPUs and integrated graphics?\r\n\r\nDeep learning needs more accessible beginners' experience, so integrated graphics would help win early mindshare. DL also needs cheaper hardware; NVidia's monopoly and crazy prices are a hard and unnecessary tax.\r\n\r\nFurther; there are higher-abstractions like Keras that currently only support CUDA because the lower abstractions only support CUDA; if PyTorch ported Torch7's OpenCL backend, then building a Keras back-end would be a step towards OpenCL-ising a large codebase written for Keras, also.\r\n\r\nThe first Python OpenCL framework for DL will win a lot of credibility at beginners' workshops and in the creative-AI space where ubiquitous hardware is a must. OpenCL support should be a priority, in my opinion, for any new framework in this space. [Tensorflow is already working on OpenCL](https://github.com/tensorflow/tensorflow/issues/22), so perhaps PyTorch will miss this window of opportunity. I'd love to see both hit the milestone at once, to encourage healthy competition."}