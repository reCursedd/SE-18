{"url": "https://api.github.com/repos/pytorch/pytorch/issues/comments/364827132", "html_url": "https://github.com/pytorch/pytorch/issues/488#issuecomment-364827132", "issue_url": "https://api.github.com/repos/pytorch/pytorch/issues/488", "id": 364827132, "node_id": "MDEyOklzc3VlQ29tbWVudDM2NDgyNzEzMg==", "user": {"login": "hughperkins", "id": 123560, "node_id": "MDQ6VXNlcjEyMzU2MA==", "avatar_url": "https://avatars2.githubusercontent.com/u/123560?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hughperkins", "html_url": "https://github.com/hughperkins", "followers_url": "https://api.github.com/users/hughperkins/followers", "following_url": "https://api.github.com/users/hughperkins/following{/other_user}", "gists_url": "https://api.github.com/users/hughperkins/gists{/gist_id}", "starred_url": "https://api.github.com/users/hughperkins/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hughperkins/subscriptions", "organizations_url": "https://api.github.com/users/hughperkins/orgs", "repos_url": "https://api.github.com/users/hughperkins/repos", "events_url": "https://api.github.com/users/hughperkins/events{/privacy}", "received_events_url": "https://api.github.com/users/hughperkins/received_events", "type": "User", "site_admin": false}, "created_at": "2018-02-12T04:36:23Z", "updated_at": "2018-02-12T04:38:26Z", "author_association": "CONTRIBUTOR", "body_html": "<blockquote>\n<p>in the interest of trying to have everything train and run in a VM I would be super willing to help it work (and test) with linux.</p>\n</blockquote>\n<p>Note that I'm not intending to work on this for the foreseeable future. In a sense, you could consider that bad news, since it means, well, it means I'm not going to work on it in the foreseeable future :) In another sense, it's an opportunity. The bar is pretty low to having impact in the OpenCL and similar world. Just start small, and see where you get to. I'm going to say that starting with Coriander is probably not the way forward; at least, it might be, but it's got a learning curve more cliff-shaped than curvey. I think a workable way forward is just to pick something simple in pytorch, and opencl-ize it (or sycl-ize it, or spir-vize it, or whatever seems fun/cool to you :) ). Just do things that seem fun/cool/useful to you, and keep going till it stops seeming fun/cool, or you are suddenly known as the guy who got pytorch working on opencl etc :)</p>", "body_text": "in the interest of trying to have everything train and run in a VM I would be super willing to help it work (and test) with linux.\n\nNote that I'm not intending to work on this for the foreseeable future. In a sense, you could consider that bad news, since it means, well, it means I'm not going to work on it in the foreseeable future :) In another sense, it's an opportunity. The bar is pretty low to having impact in the OpenCL and similar world. Just start small, and see where you get to. I'm going to say that starting with Coriander is probably not the way forward; at least, it might be, but it's got a learning curve more cliff-shaped than curvey. I think a workable way forward is just to pick something simple in pytorch, and opencl-ize it (or sycl-ize it, or spir-vize it, or whatever seems fun/cool to you :) ). Just do things that seem fun/cool/useful to you, and keep going till it stops seeming fun/cool, or you are suddenly known as the guy who got pytorch working on opencl etc :)", "body": "> in the interest of trying to have everything train and run in a VM I would be super willing to help it work (and test) with linux.\r\n\r\nNote that I'm not intending to work on this for the foreseeable future. In a sense, you could consider that bad news, since it means, well, it means I'm not going to work on it in the foreseeable future :) In another sense, it's an opportunity. The bar is pretty low to having impact in the OpenCL and similar world. Just start small, and see where you get to. I'm going to say that starting with Coriander is probably not the way forward; at least, it might be, but it's got a learning curve more cliff-shaped than curvey. I think a workable way forward is just to pick something simple in pytorch, and opencl-ize it (or sycl-ize it, or spir-vize it, or whatever seems fun/cool to you :) ). Just do things that seem fun/cool/useful to you, and keep going till it stops seeming fun/cool, or you are suddenly known as the guy who got pytorch working on opencl etc :)"}