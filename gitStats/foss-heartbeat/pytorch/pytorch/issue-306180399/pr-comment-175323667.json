{"url": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/175323667", "pull_request_review_id": 104832391, "id": 175323667, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE3NTMyMzY2Nw==", "diff_hunk": "@@ -0,0 +1,82 @@\n+#pragma once\n+\n+#include \"ATen/ATen.h\"\n+#include \"ATen/Config.h\"\n+\n+#include <string>\n+#include <stdexcept>\n+#include <sstream>\n+#include <cufft.h>\n+#include <cufftXt.h>\n+\n+\n+namespace at { namespace native {\n+\n+static inline const char *_cudaGetErrorEnum(cufftResult error)\n+{\n+  switch (error)\n+  {\n+    case CUFFT_SUCCESS:\n+      return \"CUFFT_SUCCESS\";\n+    case CUFFT_INVALID_PLAN:\n+      return \"CUFFT_INVALID_PLAN\";\n+    case CUFFT_ALLOC_FAILED:\n+      return \"CUFFT_ALLOC_FAILED\";\n+    case CUFFT_INVALID_TYPE:\n+      return \"CUFFT_INVALID_TYPE\";\n+    case CUFFT_INVALID_VALUE:\n+      return \"CUFFT_INVALID_VALUE\";\n+    case CUFFT_INTERNAL_ERROR:\n+      return \"CUFFT_INTERNAL_ERROR\";\n+    case CUFFT_EXEC_FAILED:\n+      return \"CUFFT_EXEC_FAILED\";\n+    case CUFFT_SETUP_FAILED:\n+      return \"CUFFT_SETUP_FAILED\";\n+    case CUFFT_INVALID_SIZE:\n+      return \"CUFFT_INVALID_SIZE\";\n+    case CUFFT_UNALIGNED_DATA:\n+      return \"CUFFT_UNALIGNED_DATA\";\n+    case CUFFT_INCOMPLETE_PARAMETER_LIST:\n+      return \"CUFFT_INCOMPLETE_PARAMETER_LIST\";\n+    case CUFFT_INVALID_DEVICE:\n+      return \"CUFFT_INVALID_DEVICE\";\n+    case CUFFT_PARSE_ERROR:\n+      return \"CUFFT_PARSE_ERROR\";\n+    case CUFFT_NO_WORKSPACE:\n+      return \"CUFFT_NO_WORKSPACE\";\n+    case CUFFT_NOT_IMPLEMENTED:\n+      return \"CUFFT_NOT_IMPLEMENTED\";\n+    case CUFFT_LICENSE_ERROR:\n+      return \"CUFFT_LICENSE_ERROR\";\n+    case CUFFT_NOT_SUPPORTED:\n+      return \"CUFFT_NOT_SUPPORTED\";\n+    default:\n+      return \"<unknown>\";\n+  }\n+}\n+\n+static inline void CUFFT_CHECK(cufftResult error)\n+{\n+  if (error != CUFFT_SUCCESS) {\n+    std::ostringstream ss;\n+    ss << \"cuFFT error: \" << _cudaGetErrorEnum(error);\n+    throw std::runtime_error(ss.str());\n+  }\n+}\n+\n+class CufftHandle {\n+public:\n+  explicit CufftHandle() {\n+    CUFFT_CHECK(cufftCreate(&raw_plan));\n+  }\n+\n+  const cufftHandle &get() const { return raw_plan; }\n+\n+  ~CufftHandle() {\n+    CUFFT_CHECK(cufftDestroy(raw_plan));\n+  }\n+private:\n+  cufftHandle raw_plan;", "path": "aten/src/ATen/native/cuda/CuFFTUtils.h", "position": 81, "original_position": 79, "commit_id": "fb3a0256739f896795c65ae9d378dd2bda5282bb", "original_commit_id": "297f2a080eb2ef32723578713107022ffac94b30", "user": {"login": "ezyang", "id": 13564, "node_id": "MDQ6VXNlcjEzNTY0", "avatar_url": "https://avatars0.githubusercontent.com/u/13564?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ezyang", "html_url": "https://github.com/ezyang", "followers_url": "https://api.github.com/users/ezyang/followers", "following_url": "https://api.github.com/users/ezyang/following{/other_user}", "gists_url": "https://api.github.com/users/ezyang/gists{/gist_id}", "starred_url": "https://api.github.com/users/ezyang/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ezyang/subscriptions", "organizations_url": "https://api.github.com/users/ezyang/orgs", "repos_url": "https://api.github.com/users/ezyang/repos", "events_url": "https://api.github.com/users/ezyang/events{/privacy}", "received_events_url": "https://api.github.com/users/ezyang/received_events", "type": "User", "site_admin": false}, "body": "The downside of writing an explicit constructor and destructor is that you don't get a move constructor. `aten/src/ATen/cudnn/Descriptors.h` has an example of how to use `unique_ptr` with a custom deleter to implement something equivalent.", "created_at": "2018-03-19T03:23:22Z", "updated_at": "2018-11-23T15:40:56Z", "html_url": "https://github.com/pytorch/pytorch/pull/5855#discussion_r175323667", "pull_request_url": "https://api.github.com/repos/pytorch/pytorch/pulls/5855", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/175323667"}, "html": {"href": "https://github.com/pytorch/pytorch/pull/5855#discussion_r175323667"}, "pull_request": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/5855"}}, "body_html": "<p>The downside of writing an explicit constructor and destructor is that you don't get a move constructor. <code>aten/src/ATen/cudnn/Descriptors.h</code> has an example of how to use <code>unique_ptr</code> with a custom deleter to implement something equivalent.</p>", "body_text": "The downside of writing an explicit constructor and destructor is that you don't get a move constructor. aten/src/ATen/cudnn/Descriptors.h has an example of how to use unique_ptr with a custom deleter to implement something equivalent."}