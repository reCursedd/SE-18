{"url": "https://api.github.com/repos/pytorch/pytorch/issues/comments/330524456", "html_url": "https://github.com/pytorch/pytorch/pull/2764#issuecomment-330524456", "issue_url": "https://api.github.com/repos/pytorch/pytorch/issues/2764", "id": 330524456, "node_id": "MDEyOklzc3VlQ29tbWVudDMzMDUyNDQ1Ng==", "user": {"login": "MlWoo", "id": 20226293, "node_id": "MDQ6VXNlcjIwMjI2Mjkz", "avatar_url": "https://avatars2.githubusercontent.com/u/20226293?v=4", "gravatar_id": "", "url": "https://api.github.com/users/MlWoo", "html_url": "https://github.com/MlWoo", "followers_url": "https://api.github.com/users/MlWoo/followers", "following_url": "https://api.github.com/users/MlWoo/following{/other_user}", "gists_url": "https://api.github.com/users/MlWoo/gists{/gist_id}", "starred_url": "https://api.github.com/users/MlWoo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/MlWoo/subscriptions", "organizations_url": "https://api.github.com/users/MlWoo/orgs", "repos_url": "https://api.github.com/users/MlWoo/repos", "events_url": "https://api.github.com/users/MlWoo/events{/privacy}", "received_events_url": "https://api.github.com/users/MlWoo/received_events", "type": "User", "site_admin": false}, "created_at": "2017-09-19T12:33:33Z", "updated_at": "2017-09-19T12:33:33Z", "author_association": "CONTRIBUTOR", "body_html": "<p><a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=9110200\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/fmassa\">@fmassa</a>  I avoid handling that situation to avoid handling some operation involved  with copying  from a expanding tensor at first. I had misunderstood that  <a href=\"https://github.com/torch/torch7/issues/1053\" data-hovercard-type=\"issue\" data-hovercard-url=\"/torch/torch7/issues/1053/hovercard\">here</a>.<br>\nBut your view is very correct. And your view make me cognitive snap. Now I know the index calculation could be also used to calculate the index in a expanding tensor.  I will modify the code and later.</p>\n<p>In term of the name of Macro, how about TH_TENSOR_APPLY2_OMP?</p>\n<p>Thanks a lot for your advice.</p>", "body_text": "@fmassa  I avoid handling that situation to avoid handling some operation involved  with copying  from a expanding tensor at first. I had misunderstood that  here.\nBut your view is very correct. And your view make me cognitive snap. Now I know the index calculation could be also used to calculate the index in a expanding tensor.  I will modify the code and later.\nIn term of the name of Macro, how about TH_TENSOR_APPLY2_OMP?\nThanks a lot for your advice.", "body": "@fmassa  I avoid handling that situation to avoid handling some operation involved  with copying  from a expanding tensor at first. I had misunderstood that  [here](https://github.com/torch/torch7/issues/1053).  \r\nBut your view is very correct. And your view make me cognitive snap. Now I know the index calculation could be also used to calculate the index in a expanding tensor.  I will modify the code and later. \r\n\r\nIn term of the name of Macro, how about TH_TENSOR_APPLY2_OMP?  \r\n\r\nThanks a lot for your advice."}