{"url": "https://api.github.com/repos/pytorch/pytorch/issues/comments/330351038", "html_url": "https://github.com/pytorch/pytorch/pull/2764#issuecomment-330351038", "issue_url": "https://api.github.com/repos/pytorch/pytorch/issues/2764", "id": 330351038, "node_id": "MDEyOklzc3VlQ29tbWVudDMzMDM1MTAzOA==", "user": {"login": "fmassa", "id": 9110200, "node_id": "MDQ6VXNlcjkxMTAyMDA=", "avatar_url": "https://avatars2.githubusercontent.com/u/9110200?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fmassa", "html_url": "https://github.com/fmassa", "followers_url": "https://api.github.com/users/fmassa/followers", "following_url": "https://api.github.com/users/fmassa/following{/other_user}", "gists_url": "https://api.github.com/users/fmassa/gists{/gist_id}", "starred_url": "https://api.github.com/users/fmassa/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fmassa/subscriptions", "organizations_url": "https://api.github.com/users/fmassa/orgs", "repos_url": "https://api.github.com/users/fmassa/repos", "events_url": "https://api.github.com/users/fmassa/events{/privacy}", "received_events_url": "https://api.github.com/users/fmassa/received_events", "type": "User", "site_admin": false}, "created_at": "2017-09-18T20:46:19Z", "updated_at": "2017-09-18T20:46:19Z", "author_association": "MEMBER", "body_html": "<p>Thanks a lot for the PR!<br>\nI did a first quick pass and I have some small comments. I didn't check in details the macros yet (nor why you avoid handling expanded input tensors tensors in parallel).<br>\nAlso, as <a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=1310570\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/soumith\">@soumith</a> pointed out, do you have some performance comparisons between the previous behavior and the one proposed in this PR?</p>", "body_text": "Thanks a lot for the PR!\nI did a first quick pass and I have some small comments. I didn't check in details the macros yet (nor why you avoid handling expanded input tensors tensors in parallel).\nAlso, as @soumith pointed out, do you have some performance comparisons between the previous behavior and the one proposed in this PR?", "body": "Thanks a lot for the PR!\r\nI did a first quick pass and I have some small comments. I didn't check in details the macros yet (nor why you avoid handling expanded input tensors tensors in parallel).\r\nAlso, as @soumith pointed out, do you have some performance comparisons between the previous behavior and the one proposed in this PR?"}