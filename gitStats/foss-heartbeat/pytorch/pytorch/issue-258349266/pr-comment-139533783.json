{"url": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/139533783", "pull_request_review_id": 63480252, "id": 139533783, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEzOTUzMzc4Mw==", "diff_hunk": "@@ -707,84 +807,178 @@ void THTensor_(rshift)(THTensor *r_, THTensor *t, real value)\n   return THError(\"rshift is not supported for torch.HalfTensor\");\n #else\n   THTensor_(resizeAs)(r_, t);\n-  if (THTensor_(isContiguous)(r_) &&\n-      THTensor_(isContiguous)(t) &&\n-      THTensor_(nElement)(r_) == THTensor_(nElement)(t)) {\n+  int64_t r_Size = THTensor_(nElement)(r_);\n+  int64_t tSize = THTensor_(nElement)(t);\n+  int r_Contig = THTensor_(isContiguous)(r_);\n+  int tContig = THTensor_(isContiguous)(t);\n+  \n+  int serial_path = 0;\n+  if (tSize == r_Size){\n+    if (r_Contig && tContig) {\n       real *tp = THTensor_(data)(t);\n       real *rp = THTensor_(data)(r_);\n-      int64_t sz = THTensor_(nElement)(t);\n       int64_t i;\n-      #pragma omp parallel for if(sz > TH_OMP_OVERHEAD_THRESHOLD * 100) private(i)\n-      for (i=0; i<sz; i++) {\n+      #pragma omp parallel for if(r_Size > TH_OMP_OVERHEAD_THRESHOLD * 100) private(i)\n+      for (i=0; i<r_Size; i++) {\n #if defined(TH_REAL_IS_BYTE)\n-          rp[i] = ((real) tp[i]) >> value;\n+        rp[i] = ((real) tp[i]) >> value;\n #else\n-          rp[i] = ((ureal) tp[i]) >> value;\n+        rp[i] = ((ureal) tp[i]) >> value;\n #endif\n       }\n-  } else {\n+    } else {\n+#ifdef _OPENMP\n+      int tZeroStride = THTensor_(hasZeroStride)(t);\n+      int r_ZeroStride = THTensor_(hasZeroStride)(r_);\n+      int inOMP = omp_in_parallel();\n+      if (inOMP || tZeroStride || r_ZeroStride) {\n+        serial_path = 1;\n+      } else {\n+#if defined(TH_REAL_IS_BYTE)\n+        TH_TENSOR_APPLY2_ADVANCED_INDEX(r_Size, r_Contig, tContig, real, r_, real, t, *r__data = (((real) *t_data) >> value););\n+#else\n+        TH_TENSOR_APPLY2_ADVANCED_INDEX(r_Size, r_Contig, tContig, real, r_, real, t, *r__data = (((unsigned real) *t_data) >> value););", "path": "torch/lib/TH/generic/THTensorMath.c", "position": null, "original_position": 222, "commit_id": "1ccad046aab11cd78eab647a18fa3713bb9cfd6f", "original_commit_id": "347b0722f3b6a7d335fff6e1b34747d48d73565b", "user": {"login": "fmassa", "id": 9110200, "node_id": "MDQ6VXNlcjkxMTAyMDA=", "avatar_url": "https://avatars2.githubusercontent.com/u/9110200?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fmassa", "html_url": "https://github.com/fmassa", "followers_url": "https://api.github.com/users/fmassa/followers", "following_url": "https://api.github.com/users/fmassa/following{/other_user}", "gists_url": "https://api.github.com/users/fmassa/gists{/gist_id}", "starred_url": "https://api.github.com/users/fmassa/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fmassa/subscriptions", "organizations_url": "https://api.github.com/users/fmassa/orgs", "repos_url": "https://api.github.com/users/fmassa/repos", "events_url": "https://api.github.com/users/fmassa/events{/privacy}", "received_events_url": "https://api.github.com/users/fmassa/received_events", "type": "User", "site_admin": false}, "body": "Due to the Windows refactoring, you should now use `ureal` instead of `unsigned real`. Same in the other places in the code", "created_at": "2017-09-18T20:38:59Z", "updated_at": "2018-11-23T15:34:38Z", "html_url": "https://github.com/pytorch/pytorch/pull/2764#discussion_r139533783", "pull_request_url": "https://api.github.com/repos/pytorch/pytorch/pulls/2764", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/139533783"}, "html": {"href": "https://github.com/pytorch/pytorch/pull/2764#discussion_r139533783"}, "pull_request": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/2764"}}, "body_html": "<p>Due to the Windows refactoring, you should now use <code>ureal</code> instead of <code>unsigned real</code>. Same in the other places in the code</p>", "body_text": "Due to the Windows refactoring, you should now use ureal instead of unsigned real. Same in the other places in the code"}