{"url": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/162804343", "pull_request_review_id": 90324547, "id": 162804343, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE2MjgwNDM0Mw==", "diff_hunk": "@@ -766,19 +811,51 @@ void THTensor_(sub_scaled)(THTensor *r_, THTensor *t, real value, real alpha)\n void THTensor_(mul)(THTensor *r_, THTensor *t, real value)\n {\n   THTensor_(resizeAs)(r_, t);\n-  if (THTensor_(isContiguous)(r_) && THTensor_(isContiguous)(t) && THTensor_(nElement)(r_) == THTensor_(nElement)(t)) {\n+  int64_t r_Size = THTensor_(nElement)(r_);\n+  int r_Contig = THTensor_(isContiguous)(r_);\n+  int tContig = THTensor_(isContiguous)(t);\n+  int serial_path = 0;\n+  if (r_Contig && tContig) {\n     TH_TENSOR_APPLY2_CONTIG(real, r_, real, t, THVector_(muls)(r__data, t_data, value, r__len););\n   } else {\n+#ifdef _OPENMP\n+    int inOMP = omp_in_parallel();\n+    if (inOMP) {\n+      serial_path = 1;\n+    } else {\n+      TH_TENSOR_APPLY2_OMP(r_Size, r_Contig, tContig, real, r_, real, t, *r__data = *t_data * value;)", "path": "aten/src/TH/generic/THTensorMath.c", "position": 119, "original_position": 119, "commit_id": "1ccad046aab11cd78eab647a18fa3713bb9cfd6f", "original_commit_id": "b805a9d9cd18ec84f5476d1a549a61b7da80535f", "user": {"login": "MlWoo", "id": 20226293, "node_id": "MDQ6VXNlcjIwMjI2Mjkz", "avatar_url": "https://avatars2.githubusercontent.com/u/20226293?v=4", "gravatar_id": "", "url": "https://api.github.com/users/MlWoo", "html_url": "https://github.com/MlWoo", "followers_url": "https://api.github.com/users/MlWoo/followers", "following_url": "https://api.github.com/users/MlWoo/following{/other_user}", "gists_url": "https://api.github.com/users/MlWoo/gists{/gist_id}", "starred_url": "https://api.github.com/users/MlWoo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/MlWoo/subscriptions", "organizations_url": "https://api.github.com/users/MlWoo/orgs", "repos_url": "https://api.github.com/users/MlWoo/repos", "events_url": "https://api.github.com/users/MlWoo/events{/privacy}", "received_events_url": "https://api.github.com/users/MlWoo/received_events", "type": "User", "site_admin": false}, "body": "Sorry, I do not understand your point clearly. But it will access one element next to the last element in respective threads.", "created_at": "2018-01-21T08:19:48Z", "updated_at": "2018-11-23T15:38:22Z", "html_url": "https://github.com/pytorch/pytorch/pull/2764#discussion_r162804343", "pull_request_url": "https://api.github.com/repos/pytorch/pytorch/pulls/2764", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/162804343"}, "html": {"href": "https://github.com/pytorch/pytorch/pull/2764#discussion_r162804343"}, "pull_request": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/2764"}}, "body_html": "<p>Sorry, I do not understand your point clearly. But it will access one element next to the last element in respective threads.</p>", "body_text": "Sorry, I do not understand your point clearly. But it will access one element next to the last element in respective threads.", "in_reply_to_id": 162595993}