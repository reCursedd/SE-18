{"url": "https://api.github.com/repos/pytorch/pytorch/issues/comments/330493369", "html_url": "https://github.com/pytorch/pytorch/pull/2764#issuecomment-330493369", "issue_url": "https://api.github.com/repos/pytorch/pytorch/issues/2764", "id": 330493369, "node_id": "MDEyOklzc3VlQ29tbWVudDMzMDQ5MzM2OQ==", "user": {"login": "fmassa", "id": 9110200, "node_id": "MDQ6VXNlcjkxMTAyMDA=", "avatar_url": "https://avatars2.githubusercontent.com/u/9110200?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fmassa", "html_url": "https://github.com/fmassa", "followers_url": "https://api.github.com/users/fmassa/followers", "following_url": "https://api.github.com/users/fmassa/following{/other_user}", "gists_url": "https://api.github.com/users/fmassa/gists{/gist_id}", "starred_url": "https://api.github.com/users/fmassa/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fmassa/subscriptions", "organizations_url": "https://api.github.com/users/fmassa/orgs", "repos_url": "https://api.github.com/users/fmassa/repos", "events_url": "https://api.github.com/users/fmassa/events{/privacy}", "received_events_url": "https://api.github.com/users/fmassa/received_events", "type": "User", "site_admin": false}, "created_at": "2017-09-19T10:08:48Z", "updated_at": "2017-09-19T10:08:48Z", "author_association": "MEMBER", "body_html": "<p><a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=20226293\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/MlWoo\">@MlWoo</a> while I agree that the result tensor having zero strides can lead to weird behaviour, input tensors should work just fine I think.</p>\n<p>Indeed, your index calculation <a href=\"https://github.com/pytorch/pytorch/pull/2764/files#diff-e6901aa9c1af8dae369172563f114720R11\">multiplies the offset by the stride</a>, so zero stride should not change the index?<br>\nAnd because we are talking about input tensors, there is only read access happening, not write.<br>\nBut I might probably be missing something here :)</p>\n<p>Also, a small nit: the name <code>TH_TENSOR_APPLY2_ADVANCED_INDEX</code> might lead to confusion, as advanced index is a <a href=\"https://docs.scipy.org/doc/numpy-1.13.0/reference/arrays.indexing.html#advanced-indexing\" rel=\"nofollow\">specific operation in pytorch/numpy</a>, so might be worth changing the name to something else (I don't have a better name now).</p>", "body_text": "@MlWoo while I agree that the result tensor having zero strides can lead to weird behaviour, input tensors should work just fine I think.\nIndeed, your index calculation multiplies the offset by the stride, so zero stride should not change the index?\nAnd because we are talking about input tensors, there is only read access happening, not write.\nBut I might probably be missing something here :)\nAlso, a small nit: the name TH_TENSOR_APPLY2_ADVANCED_INDEX might lead to confusion, as advanced index is a specific operation in pytorch/numpy, so might be worth changing the name to something else (I don't have a better name now).", "body": "@MlWoo while I agree that the result tensor having zero strides can lead to weird behaviour, input tensors should work just fine I think.\r\n\r\nIndeed, your index calculation [multiplies the offset by the stride](https://github.com/pytorch/pytorch/pull/2764/files#diff-e6901aa9c1af8dae369172563f114720R11), so zero stride should not change the index?\r\nAnd because we are talking about input tensors, there is only read access happening, not write.\r\nBut I might probably be missing something here :)\r\n\r\nAlso, a small nit: the name `TH_TENSOR_APPLY2_ADVANCED_INDEX` might lead to confusion, as advanced index is a [specific operation in pytorch/numpy](https://docs.scipy.org/doc/numpy-1.13.0/reference/arrays.indexing.html#advanced-indexing), so might be worth changing the name to something else (I don't have a better name now)."}