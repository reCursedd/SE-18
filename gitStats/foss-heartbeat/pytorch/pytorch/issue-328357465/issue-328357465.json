{"url": "https://api.github.com/repos/pytorch/pytorch/issues/8017", "repository_url": "https://api.github.com/repos/pytorch/pytorch", "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/8017/labels{/name}", "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/8017/comments", "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/8017/events", "html_url": "https://github.com/pytorch/pytorch/issues/8017", "id": 328357465, "node_id": "MDU6SXNzdWUzMjgzNTc0NjU=", "number": 8017, "title": "failed to move parameters to GPU", "user": {"login": "wizardk", "id": 20595052, "node_id": "MDQ6VXNlcjIwNTk1MDUy", "avatar_url": "https://avatars3.githubusercontent.com/u/20595052?v=4", "gravatar_id": "", "url": "https://api.github.com/users/wizardk", "html_url": "https://github.com/wizardk", "followers_url": "https://api.github.com/users/wizardk/followers", "following_url": "https://api.github.com/users/wizardk/following{/other_user}", "gists_url": "https://api.github.com/users/wizardk/gists{/gist_id}", "starred_url": "https://api.github.com/users/wizardk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/wizardk/subscriptions", "organizations_url": "https://api.github.com/users/wizardk/orgs", "repos_url": "https://api.github.com/users/wizardk/repos", "events_url": "https://api.github.com/users/wizardk/events{/privacy}", "received_events_url": "https://api.github.com/users/wizardk/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-06-01T02:20:28Z", "updated_at": "2018-06-01T02:49:28Z", "closed_at": "2018-06-01T02:49:27Z", "author_association": "NONE", "body_html": "<h2>Issue description</h2>\n<p>initialize the layers of model in loop cause parameters of layers are failed to move to GPU by Module.to() or Module.cuda() method.</p>\n<h2>Code example</h2>\n<pre><code>class Model(nn.Module):\n    def __init__(self, in_channels, out_channels, layer_size):\n        super(Model, self).__init__()\n        self.conv = []\n        for idx in range(layer_size):\n            self.conv.append(nn.Conv2d(in_channels=in_channels, out_channels=out_channels,kernel_size=(3,3)))\n            in_channels = out_channels\n            out_channels *= 2\n\n    def forward(self, x):\n        for conv in self.conv:\n            x = conv(x)\n        return x\n\nmodel = Model(in_channels=1, out_channels=16, layer_size=3).to(torch.device(\"cuda\"))\nassert model.conv[0].weight.is_cuda\n</code></pre>\n<h2>System Info</h2>\n<ul>\n<li>OS: Windows 10</li>\n<li>PyTorch version: 0.4.0</li>\n<li>Python version: 3.6.4</li>\n<li>CUDA/cuDNN version: 9.1.85, no cuDNN</li>\n</ul>", "body_text": "Issue description\ninitialize the layers of model in loop cause parameters of layers are failed to move to GPU by Module.to() or Module.cuda() method.\nCode example\nclass Model(nn.Module):\n    def __init__(self, in_channels, out_channels, layer_size):\n        super(Model, self).__init__()\n        self.conv = []\n        for idx in range(layer_size):\n            self.conv.append(nn.Conv2d(in_channels=in_channels, out_channels=out_channels,kernel_size=(3,3)))\n            in_channels = out_channels\n            out_channels *= 2\n\n    def forward(self, x):\n        for conv in self.conv:\n            x = conv(x)\n        return x\n\nmodel = Model(in_channels=1, out_channels=16, layer_size=3).to(torch.device(\"cuda\"))\nassert model.conv[0].weight.is_cuda\n\nSystem Info\n\nOS: Windows 10\nPyTorch version: 0.4.0\nPython version: 3.6.4\nCUDA/cuDNN version: 9.1.85, no cuDNN", "body": "## Issue description\r\n\r\ninitialize the layers of model in loop cause parameters of layers are failed to move to GPU by Module.to() or Module.cuda() method.\r\n\r\n## Code example\r\n\r\n```\r\nclass Model(nn.Module):\r\n    def __init__(self, in_channels, out_channels, layer_size):\r\n        super(Model, self).__init__()\r\n        self.conv = []\r\n        for idx in range(layer_size):\r\n            self.conv.append(nn.Conv2d(in_channels=in_channels, out_channels=out_channels,kernel_size=(3,3)))\r\n            in_channels = out_channels\r\n            out_channels *= 2\r\n\r\n    def forward(self, x):\r\n        for conv in self.conv:\r\n            x = conv(x)\r\n        return x\r\n\r\nmodel = Model(in_channels=1, out_channels=16, layer_size=3).to(torch.device(\"cuda\"))\r\nassert model.conv[0].weight.is_cuda\r\n```\r\n\r\n## System Info\r\n\r\n- OS: Windows 10\r\n- PyTorch version: 0.4.0\r\n- Python version: 3.6.4\r\n- CUDA/cuDNN version: 9.1.85, no cuDNN\r\n"}