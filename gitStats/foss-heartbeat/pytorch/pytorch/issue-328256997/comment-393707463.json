{"url": "https://api.github.com/repos/pytorch/pytorch/issues/comments/393707463", "html_url": "https://github.com/pytorch/pytorch/issues/7999#issuecomment-393707463", "issue_url": "https://api.github.com/repos/pytorch/pytorch/issues/7999", "id": 393707463, "node_id": "MDEyOklzc3VlQ29tbWVudDM5MzcwNzQ2Mw==", "user": {"login": "apaszke", "id": 4583066, "node_id": "MDQ6VXNlcjQ1ODMwNjY=", "avatar_url": "https://avatars3.githubusercontent.com/u/4583066?v=4", "gravatar_id": "", "url": "https://api.github.com/users/apaszke", "html_url": "https://github.com/apaszke", "followers_url": "https://api.github.com/users/apaszke/followers", "following_url": "https://api.github.com/users/apaszke/following{/other_user}", "gists_url": "https://api.github.com/users/apaszke/gists{/gist_id}", "starred_url": "https://api.github.com/users/apaszke/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/apaszke/subscriptions", "organizations_url": "https://api.github.com/users/apaszke/orgs", "repos_url": "https://api.github.com/users/apaszke/repos", "events_url": "https://api.github.com/users/apaszke/events{/privacy}", "received_events_url": "https://api.github.com/users/apaszke/received_events", "type": "User", "site_admin": false}, "created_at": "2018-05-31T22:51:51Z", "updated_at": "2018-05-31T22:51:51Z", "author_association": "MEMBER", "body_html": "<p>I wouldn't treat this as a serious bug. In general, I think our strategy for handling NaNs should be best-effort, which means we try to propagate them when it's easy and doesn't cost us anything (like in this case - we probably only need to change the comparison op slightly). However, we shouldn't ever try to slow down any of our ops just to return NaNs.</p>", "body_text": "I wouldn't treat this as a serious bug. In general, I think our strategy for handling NaNs should be best-effort, which means we try to propagate them when it's easy and doesn't cost us anything (like in this case - we probably only need to change the comparison op slightly). However, we shouldn't ever try to slow down any of our ops just to return NaNs.", "body": "I wouldn't treat this as a serious bug. In general, I think our strategy for handling NaNs should be best-effort, which means we try to propagate them when it's easy and doesn't cost us anything (like in this case - we probably only need to change the comparison op slightly). However, we shouldn't ever try to slow down any of our ops just to return NaNs."}