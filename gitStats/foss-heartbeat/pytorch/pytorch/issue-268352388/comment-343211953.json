{"url": "https://api.github.com/repos/pytorch/pytorch/issues/comments/343211953", "html_url": "https://github.com/pytorch/pytorch/issues/3281#issuecomment-343211953", "issue_url": "https://api.github.com/repos/pytorch/pytorch/issues/3281", "id": 343211953, "node_id": "MDEyOklzc3VlQ29tbWVudDM0MzIxMTk1Mw==", "user": {"login": "Arseny-N", "id": 3064867, "node_id": "MDQ6VXNlcjMwNjQ4Njc=", "avatar_url": "https://avatars0.githubusercontent.com/u/3064867?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Arseny-N", "html_url": "https://github.com/Arseny-N", "followers_url": "https://api.github.com/users/Arseny-N/followers", "following_url": "https://api.github.com/users/Arseny-N/following{/other_user}", "gists_url": "https://api.github.com/users/Arseny-N/gists{/gist_id}", "starred_url": "https://api.github.com/users/Arseny-N/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Arseny-N/subscriptions", "organizations_url": "https://api.github.com/users/Arseny-N/orgs", "repos_url": "https://api.github.com/users/Arseny-N/repos", "events_url": "https://api.github.com/users/Arseny-N/events{/privacy}", "received_events_url": "https://api.github.com/users/Arseny-N/received_events", "type": "User", "site_admin": false}, "created_at": "2017-11-09T16:34:08Z", "updated_at": "2017-11-09T16:45:48Z", "author_association": "NONE", "body_html": "<p>Well, you can't reliably determine if an object is a namedtuple <a href=\"https://stackoverflow.com/questions/2166818/python-how-to-check-if-an-object-is-an-instance-of-a-namedtuple\" rel=\"nofollow\">link</a></p>\n<p>So either a heuristic should be used or a flag should be supplied to the DataLoader but it is then unclear how to signalize \"complex\" batch structures like a dict of namedtuples.</p>\n<p>I agree that the additional functionality of  <code>batch_type_ctor </code>will likely never be used,  but the original idea was -- if <code>batch_type_ctor</code> will be equal to the namedtuple type than <code>isinstance</code> could bee used to determine weather a variable is a namedtuple and then act accordingly. I agree that the name is misleading, maybe (if arbitrary class batches are a bad idea) <code>namedtuples_types</code> will be more intuitive.</p>", "body_text": "Well, you can't reliably determine if an object is a namedtuple link\nSo either a heuristic should be used or a flag should be supplied to the DataLoader but it is then unclear how to signalize \"complex\" batch structures like a dict of namedtuples.\nI agree that the additional functionality of  batch_type_ctor will likely never be used,  but the original idea was -- if batch_type_ctor will be equal to the namedtuple type than isinstance could bee used to determine weather a variable is a namedtuple and then act accordingly. I agree that the name is misleading, maybe (if arbitrary class batches are a bad idea) namedtuples_types will be more intuitive.", "body": "Well, you can't reliably determine if an object is a namedtuple [link](https://stackoverflow.com/questions/2166818/python-how-to-check-if-an-object-is-an-instance-of-a-namedtuple) \r\n\r\nSo either a heuristic should be used or a flag should be supplied to the DataLoader but it is then unclear how to signalize \"complex\" batch structures like a dict of namedtuples.  \r\n\r\nI agree that the additional functionality of  `batch_type_ctor `will likely never be used,  but the original idea was -- if `batch_type_ctor` will be equal to the namedtuple type than `isinstance` could bee used to determine weather a variable is a namedtuple and then act accordingly. I agree that the name is misleading, maybe (if arbitrary class batches are a bad idea) `namedtuples_types` will be more intuitive."}