{"url": "https://api.github.com/repos/pytorch/pytorch/issues/comments/354297911", "html_url": "https://github.com/pytorch/pytorch/issues/4361#issuecomment-354297911", "issue_url": "https://api.github.com/repos/pytorch/pytorch/issues/4361", "id": 354297911, "node_id": "MDEyOklzc3VlQ29tbWVudDM1NDI5NzkxMQ==", "user": {"login": "antspy", "id": 625297, "node_id": "MDQ6VXNlcjYyNTI5Nw==", "avatar_url": "https://avatars3.githubusercontent.com/u/625297?v=4", "gravatar_id": "", "url": "https://api.github.com/users/antspy", "html_url": "https://github.com/antspy", "followers_url": "https://api.github.com/users/antspy/followers", "following_url": "https://api.github.com/users/antspy/following{/other_user}", "gists_url": "https://api.github.com/users/antspy/gists{/gist_id}", "starred_url": "https://api.github.com/users/antspy/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/antspy/subscriptions", "organizations_url": "https://api.github.com/users/antspy/orgs", "repos_url": "https://api.github.com/users/antspy/repos", "events_url": "https://api.github.com/users/antspy/events{/privacy}", "received_events_url": "https://api.github.com/users/antspy/received_events", "type": "User", "site_admin": false}, "created_at": "2017-12-28T14:36:00Z", "updated_at": "2017-12-28T14:36:43Z", "author_association": "NONE", "body_html": "<p>Hi,</p>\n<p>I typically use torch.load_state_dict to save the model weights; I think this is cleaner and less error prone than saving the whole class with torch.save - torch.load.<br>\nSo, if I train a model on multiple GPUs and then want to evaluate on a single GPU (or viceversa), I will have to manually convert the state dict. For example:</p>\n<pre><code>&gt;&gt;&gt; a = nn.Linear(40, 50)\n&gt;&gt;&gt; b = a.state_dict()\n&gt;&gt;&gt; a_parallel = nn.parallel.DataParallel(a)\n&gt;&gt;&gt; a_parallel.load_state_dict(b)\nTraceback (most recent call last):\n  File \"&lt;input&gt;\", line 1, in &lt;module&gt;\n  File \"/home/user/anaconda3/lib/python3.6/site-packages/torch/nn/modules/module.py\", line 490, in load_state_dict\n    .format(name))\nKeyError: 'unexpected key \"weight\" in state_dict'\n</code></pre>\n<p>It is easy enough to just change the state dictionary so that it is accepted by load_state_dict (I know it is just a problem of keys name), but it would be nicer if this was done inside load_state_dict automatically :-)</p>", "body_text": "Hi,\nI typically use torch.load_state_dict to save the model weights; I think this is cleaner and less error prone than saving the whole class with torch.save - torch.load.\nSo, if I train a model on multiple GPUs and then want to evaluate on a single GPU (or viceversa), I will have to manually convert the state dict. For example:\n>>> a = nn.Linear(40, 50)\n>>> b = a.state_dict()\n>>> a_parallel = nn.parallel.DataParallel(a)\n>>> a_parallel.load_state_dict(b)\nTraceback (most recent call last):\n  File \"<input>\", line 1, in <module>\n  File \"/home/user/anaconda3/lib/python3.6/site-packages/torch/nn/modules/module.py\", line 490, in load_state_dict\n    .format(name))\nKeyError: 'unexpected key \"weight\" in state_dict'\n\nIt is easy enough to just change the state dictionary so that it is accepted by load_state_dict (I know it is just a problem of keys name), but it would be nicer if this was done inside load_state_dict automatically :-)", "body": "Hi, \r\n\r\nI typically use torch.load_state_dict to save the model weights; I think this is cleaner and less error prone than saving the whole class with torch.save - torch.load. \r\nSo, if I train a model on multiple GPUs and then want to evaluate on a single GPU (or viceversa), I will have to manually convert the state dict. For example:\r\n\r\n```\r\n>>> a = nn.Linear(40, 50)\r\n>>> b = a.state_dict()\r\n>>> a_parallel = nn.parallel.DataParallel(a)\r\n>>> a_parallel.load_state_dict(b)\r\nTraceback (most recent call last):\r\n  File \"<input>\", line 1, in <module>\r\n  File \"/home/user/anaconda3/lib/python3.6/site-packages/torch/nn/modules/module.py\", line 490, in load_state_dict\r\n    .format(name))\r\nKeyError: 'unexpected key \"weight\" in state_dict'\r\n```\r\n\r\nIt is easy enough to just change the state dictionary so that it is accepted by load_state_dict (I know it is just a problem of keys name), but it would be nicer if this was done inside load_state_dict automatically :-)"}