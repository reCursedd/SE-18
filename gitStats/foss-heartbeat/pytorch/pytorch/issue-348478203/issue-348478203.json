{"url": "https://api.github.com/repos/pytorch/pytorch/issues/10325", "repository_url": "https://api.github.com/repos/pytorch/pytorch", "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/10325/labels{/name}", "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/10325/comments", "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/10325/events", "html_url": "https://github.com/pytorch/pytorch/pull/10325", "id": 348478203, "node_id": "MDExOlB1bGxSZXF1ZXN0MjA2ODE5NTkx", "number": 10325, "title": "graph fuser inserts explicit expands where necessary", "user": {"login": "zou3519", "id": 5652049, "node_id": "MDQ6VXNlcjU2NTIwNDk=", "avatar_url": "https://avatars3.githubusercontent.com/u/5652049?v=4", "gravatar_id": "", "url": "https://api.github.com/users/zou3519", "html_url": "https://github.com/zou3519", "followers_url": "https://api.github.com/users/zou3519/followers", "following_url": "https://api.github.com/users/zou3519/following{/other_user}", "gists_url": "https://api.github.com/users/zou3519/gists{/gist_id}", "starred_url": "https://api.github.com/users/zou3519/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/zou3519/subscriptions", "organizations_url": "https://api.github.com/users/zou3519/orgs", "repos_url": "https://api.github.com/users/zou3519/repos", "events_url": "https://api.github.com/users/zou3519/events{/privacy}", "received_events_url": "https://api.github.com/users/zou3519/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 679953983, "node_id": "MDU6TGFiZWw2Nzk5NTM5ODM=", "url": "https://api.github.com/repos/pytorch/pytorch/labels/jit", "name": "jit", "color": "c5def5", "default": false}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2018-08-07T20:38:12Z", "updated_at": "2018-11-23T15:49:36Z", "closed_at": "2018-08-17T23:05:14Z", "author_association": "CONTRIBUTOR", "pull_request": {"url": "https://api.github.com/repos/pytorch/pytorch/pulls/10325", "html_url": "https://github.com/pytorch/pytorch/pull/10325", "diff_url": "https://github.com/pytorch/pytorch/pull/10325.diff", "patch_url": "https://github.com/pytorch/pytorch/pull/10325.patch"}, "body_html": "<p><span class=\"issue-keyword tooltipped tooltipped-se\" aria-label=\"This pull request closes issue #10096.\">Fixes</span> <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load issue title\" data-id=\"346374545\" data-permission-text=\"Issue title is private\" data-url=\"https://github.com/pytorch/pytorch/issues/10096\" data-hovercard-type=\"issue\" data-hovercard-url=\"/pytorch/pytorch/issues/10096/hovercard\" href=\"https://github.com/pytorch/pytorch/issues/10096\">#10096</a></p>\n<p>If the only thing preventing a simple mappable operator from being fused<br>\ninto a fusion group is that its Tensor inputs are not of the same shape as the<br>\noutput, then the graph fuser inserts explicit expand nodes for those<br>\ninputs.<br>\nThis helps the graph fuser not miss out on any fusion opportunities<br>\ninvolving simple mappable operations that have Tensor inputs. This PR<br>\ndoesn't do anything for the scalar case; that can be addressed later.</p>\n<p>Test Plan</p>\n<ul>\n<li>Simple expect test case</li>\n<li>Added expect tests for a raw LSTMCell. The expands help speed up the<br>\nforwards pass by allowing more operations to be fused into the LSTMCell's single<br>\nFusionGroup.</li>\n</ul>\n<p>cc <a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=4583066\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/apaszke\">@apaszke</a> <a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=370202\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/zdevito\">@zdevito</a></p>", "body_text": "Fixes #10096\nIf the only thing preventing a simple mappable operator from being fused\ninto a fusion group is that its Tensor inputs are not of the same shape as the\noutput, then the graph fuser inserts explicit expand nodes for those\ninputs.\nThis helps the graph fuser not miss out on any fusion opportunities\ninvolving simple mappable operations that have Tensor inputs. This PR\ndoesn't do anything for the scalar case; that can be addressed later.\nTest Plan\n\nSimple expect test case\nAdded expect tests for a raw LSTMCell. The expands help speed up the\nforwards pass by allowing more operations to be fused into the LSTMCell's single\nFusionGroup.\n\ncc @apaszke @zdevito", "body": "Fixes #10096\r\n\r\nIf the only thing preventing a simple mappable operator from being fused\r\ninto a fusion group is that its Tensor inputs are not of the same shape as the\r\noutput, then the graph fuser inserts explicit expand nodes for those\r\ninputs.\r\nThis helps the graph fuser not miss out on any fusion opportunities\r\ninvolving simple mappable operations that have Tensor inputs. This PR\r\ndoesn't do anything for the scalar case; that can be addressed later.\r\n\r\nTest Plan\r\n- Simple expect test case\r\n- Added expect tests for a raw LSTMCell. The expands help speed up the\r\n  forwards pass by allowing more operations to be fused into the LSTMCell's single\r\n  FusionGroup.\r\n\r\ncc @apaszke @zdevito \r\n\r\n"}