{"url": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/210191437", "pull_request_review_id": 146353126, "id": 210191437, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIxMDE5MTQzNw==", "diff_hunk": "@@ -536,6 +565,46 @@ struct GraphFuser {\n     return true;\n   }\n \n+  void insertExplicitExpands(Node * node) {\n+    JIT_ASSERT(isSimpleMap(node));\n+    auto & map_size = node->output()->type()->cast<TensorType>()->sizes();\n+    auto * graph = node->owningGraph();\n+\n+    WithInsertPoint guard(node);\n+\n+    auto it_end = node->inputs().end();\n+    if (node->matches(\"aten::add(Tensor self, Tensor other, *, Scalar alpha) -> Tensor\", /*const=*/attr::alpha)) {\n+      it_end--;\n+    }\n+    for (auto it = node->inputs().begin(); it != it_end; ++it) {\n+      auto * producer = *it;\n+      auto type = producer->type()->cast<TensorType>();\n+      JIT_ASSERT(type);\n+      if (type->sizes() == map_size) {\n+        continue;\n+      }\n+      // Insert explicit expand node when input doesn't have correct size.\n+      // NB: Because the graph is specialized with sizes,\n+      // we know that the inputs must be broadcastable to the output.\n+      //\n+      // XXX: This hardcodes the \"map size\" for this FusionGroup.\n+      // If we want to make the graph fuser more general in the future,\n+      // we could use aten::broadcast_tensors or add a primitive op that broadcasts.\n+      auto * expand = graph->insertNode(graph->create(aten::expand,", "path": "torch/csrc/jit/passes/graph_fuser.cpp", "position": null, "original_position": 126, "commit_id": "61cc7d664a317f213d27876f6243596d70582869", "original_commit_id": "3453b278fba76825f58e4fc3b86671acbd4fef67", "user": {"login": "zdevito", "id": 370202, "node_id": "MDQ6VXNlcjM3MDIwMg==", "avatar_url": "https://avatars0.githubusercontent.com/u/370202?v=4", "gravatar_id": "", "url": "https://api.github.com/users/zdevito", "html_url": "https://github.com/zdevito", "followers_url": "https://api.github.com/users/zdevito/followers", "following_url": "https://api.github.com/users/zdevito/following{/other_user}", "gists_url": "https://api.github.com/users/zdevito/gists{/gist_id}", "starred_url": "https://api.github.com/users/zdevito/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/zdevito/subscriptions", "organizations_url": "https://api.github.com/users/zdevito/orgs", "repos_url": "https://api.github.com/users/zdevito/repos", "events_url": "https://api.github.com/users/zdevito/events{/privacy}", "received_events_url": "https://api.github.com/users/zdevito/received_events", "type": "User", "site_admin": false}, "body": "You can use `graph->insert` no which will make this more concise:\r\n```\r\ngraph->insert(aten::expand, {producer, map_size, 0}, {}, ...);\r\n```\r\n", "created_at": "2018-08-15T07:36:53Z", "updated_at": "2018-11-23T15:49:24Z", "html_url": "https://github.com/pytorch/pytorch/pull/10325#discussion_r210191437", "pull_request_url": "https://api.github.com/repos/pytorch/pytorch/pulls/10325", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/210191437"}, "html": {"href": "https://github.com/pytorch/pytorch/pull/10325#discussion_r210191437"}, "pull_request": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/10325"}}, "body_html": "<p>You can use <code>graph-&gt;insert</code> no which will make this more concise:</p>\n<pre><code>graph-&gt;insert(aten::expand, {producer, map_size, 0}, {}, ...);\n</code></pre>", "body_text": "You can use graph->insert no which will make this more concise:\ngraph->insert(aten::expand, {producer, map_size, 0}, {}, ...);"}