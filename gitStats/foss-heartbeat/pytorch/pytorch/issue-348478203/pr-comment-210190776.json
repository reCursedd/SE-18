{"url": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/210190776", "pull_request_review_id": 146353126, "id": 210190776, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIxMDE5MDc3Ng==", "diff_hunk": "@@ -162,17 +175,33 @@ struct GraphFuser {\n     if (node->matches(\"aten::add(Tensor self, Tensor other, *, Scalar alpha) -> Tensor\", /*const=*/attr::alpha)) {\n       std::vector<Value*> inputs {node->namedInput(attr::self), node->namedInput(attr::other)};\n       return areTensorsOfSameShape(inputs) && haveSupportedType(inputs);\n-    } else if (node->matches(\"aten::lt(Tensor self, Tensor other) -> Tensor\") ||\n-               node->matches(\"aten::le(Tensor self, Tensor other) -> Tensor\") ||\n-               node->matches(\"aten::gt(Tensor self, Tensor other) -> Tensor\") ||\n-               node->matches(\"aten::ge(Tensor self, Tensor other) -> Tensor\") ||\n-               node->matches(\"aten::eq(Tensor self, Tensor other) -> Tensor\") ||\n-               node->matches(\"aten::ne(Tensor self, Tensor other) -> Tensor\")) {\n+    } else if (isComparisonOp(node)) {\n       // comparison operators produce Byte type, and it's ok, check only inputs\n       return areTensorsOfSameShape(node->inputs()) && haveSupportedType(node->inputs());\n     } else if (node->matches(\"aten::type_as(Tensor self, Tensor other) -> Tensor\")) {\n       // type_as can have different input types as long as output is float, check only output\n       return haveSupportedType(node->outputs());\n+    } else {\n+      return hasSupportedShapeAndType(node);\n+    }\n+  }\n+\n+  // Can the operator be fusable after adding adding explicit expands to inputs?\n+  // XXX: Somehow de-duplicate this and isFusable.", "path": "torch/csrc/jit/passes/graph_fuser.cpp", "position": null, "original_position": 61, "commit_id": "61cc7d664a317f213d27876f6243596d70582869", "original_commit_id": "3453b278fba76825f58e4fc3b86671acbd4fef67", "user": {"login": "zdevito", "id": 370202, "node_id": "MDQ6VXNlcjM3MDIwMg==", "avatar_url": "https://avatars0.githubusercontent.com/u/370202?v=4", "gravatar_id": "", "url": "https://api.github.com/users/zdevito", "html_url": "https://github.com/zdevito", "followers_url": "https://api.github.com/users/zdevito/followers", "following_url": "https://api.github.com/users/zdevito/following{/other_user}", "gists_url": "https://api.github.com/users/zdevito/gists{/gist_id}", "starred_url": "https://api.github.com/users/zdevito/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/zdevito/subscriptions", "organizations_url": "https://api.github.com/users/zdevito/orgs", "repos_url": "https://api.github.com/users/zdevito/repos", "events_url": "https://api.github.com/users/zdevito/events{/privacy}", "received_events_url": "https://api.github.com/users/zdevito/received_events", "type": "User", "site_admin": false}, "body": "This isn't maintainable until isFusible is merged with this. Already it is the case that it is being put into conditions right next to isFusible. ", "created_at": "2018-08-15T07:33:04Z", "updated_at": "2018-11-23T15:49:23Z", "html_url": "https://github.com/pytorch/pytorch/pull/10325#discussion_r210190776", "pull_request_url": "https://api.github.com/repos/pytorch/pytorch/pulls/10325", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/210190776"}, "html": {"href": "https://github.com/pytorch/pytorch/pull/10325#discussion_r210190776"}, "pull_request": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/10325"}}, "body_html": "<p>This isn't maintainable until isFusible is merged with this. Already it is the case that it is being put into conditions right next to isFusible.</p>", "body_text": "This isn't maintainable until isFusible is merged with this. Already it is the case that it is being put into conditions right next to isFusible."}