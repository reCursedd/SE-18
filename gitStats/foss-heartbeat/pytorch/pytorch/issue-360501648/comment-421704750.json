{"url": "https://api.github.com/repos/pytorch/pytorch/issues/comments/421704750", "html_url": "https://github.com/pytorch/pytorch/issues/11727#issuecomment-421704750", "issue_url": "https://api.github.com/repos/pytorch/pytorch/issues/11727", "id": 421704750, "node_id": "MDEyOklzc3VlQ29tbWVudDQyMTcwNDc1MA==", "user": {"login": "PetrochukM", "id": 7424737, "node_id": "MDQ6VXNlcjc0MjQ3Mzc=", "avatar_url": "https://avatars2.githubusercontent.com/u/7424737?v=4", "gravatar_id": "", "url": "https://api.github.com/users/PetrochukM", "html_url": "https://github.com/PetrochukM", "followers_url": "https://api.github.com/users/PetrochukM/followers", "following_url": "https://api.github.com/users/PetrochukM/following{/other_user}", "gists_url": "https://api.github.com/users/PetrochukM/gists{/gist_id}", "starred_url": "https://api.github.com/users/PetrochukM/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/PetrochukM/subscriptions", "organizations_url": "https://api.github.com/users/PetrochukM/orgs", "repos_url": "https://api.github.com/users/PetrochukM/repos", "events_url": "https://api.github.com/users/PetrochukM/events{/privacy}", "received_events_url": "https://api.github.com/users/PetrochukM/received_events", "type": "User", "site_admin": false}, "created_at": "2018-09-16T05:58:13Z", "updated_at": "2018-09-16T05:58:13Z", "author_association": "NONE", "body_html": "<p><a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=824529\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/chengs\">@chengs</a></p>\n<blockquote>\n<p><em>Note that this should be called at most once</em>, and it should be protected inside the if name == 'main' clause of the main module.</p>\n</blockquote>\n<p>The docs mention this to protect against calling <code>set_start_method</code> twice. Those docs don't address the fundamental problem between <code>RLock</code> and <code>set_start_method</code>.</p>\n<p>The code would still break if everything was moved inside the <code>if __name__ == '__main__':</code> statement.</p>", "body_text": "@chengs\n\nNote that this should be called at most once, and it should be protected inside the if name == 'main' clause of the main module.\n\nThe docs mention this to protect against calling set_start_method twice. Those docs don't address the fundamental problem between RLock and set_start_method.\nThe code would still break if everything was moved inside the if __name__ == '__main__': statement.", "body": "@chengs \r\n\r\n> *Note that this should be called at most once*, and it should be protected inside the if name == 'main' clause of the main module.\r\n\r\nThe docs mention this to protect against calling ``set_start_method`` twice. Those docs don't address the fundamental problem between ``RLock`` and ``set_start_method``. \r\n\r\nThe code would still break if everything was moved inside the ``if __name__ == '__main__':`` statement."}