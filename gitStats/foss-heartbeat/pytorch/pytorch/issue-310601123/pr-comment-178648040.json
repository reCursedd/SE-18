{"url": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/178648040", "pull_request_review_id": 108739844, "id": 178648040, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE3ODY0ODA0MA==", "diff_hunk": "@@ -6,9 +6,56 @@\n import random\n \n __all__ = [\n-    'make_non_contiguous', 'rand_like', 'randn_like'\n+    'assert_allclose', 'make_non_contiguous', 'rand_like', 'randn_like'\n ]\n \n+rand_like = torch._C._VariableFunctions.rand_like\n+randn_like = torch._C._VariableFunctions.randn_like\n+\n+\n+def assert_allclose(actual, expected, rtol=None, atol=None, equal_nan=True):\n+    if not isinstance(actual, torch.Tensor):\n+        actual = torch.tensor(actual)\n+    if not isinstance(expected, torch.Tensor):\n+        expected = torch.tensor(expected, dtype=actual.dtype)\n+    if expected.shape != actual.shape:\n+        expected = expected.expand_as(actual)\n+    if rtol is None or atol is None:\n+        if rtol is not None or atol is not None:\n+            raise ValueError(\"rtol and atol must both be specified or both be unspecified\")\n+        rtol, atol = _get_default_tolerance(actual, expected)\n+\n+    close = torch.isclose(actual, expected, rtol, atol, equal_nan)\n+    if close.all():\n+        return\n+\n+    # Find the worst offender\n+    error = (expected - actual).abs()\n+    expected_error = atol + rtol * expected.abs()\n+    delta = error - expected_error\n+    delta[close] = 0  # mask out NaN/inf\n+    _, index = delta.reshape(-1).max(0)\n+\n+    # TODO: consider adding torch.unravel_index\n+    def _unravel_index(index, shape):\n+        res = []\n+        for size in shape[::-1]:\n+            res.append(int(index % size))\n+            index = int(index // size)\n+        return tuple(res[::-1])\n+\n+    index = _unravel_index(index.item(), actual.shape)\n+\n+    # Count nubmer of offenders\n+    count = (~close).long().sum()\n+\n+    msg = ('Not within tolerance rtol={} atol={} at input{} ({} vs. {}) and {}'", "path": "torch/testing/__init__.py", "position": null, "original_position": 48, "commit_id": "e6b8d8d3a68acd8471a55af6b70108ad4686de8d", "original_commit_id": "ad8782a09b9af39e1323d7e62b3278f094dd71f5", "user": {"login": "colesbury", "id": 655866, "node_id": "MDQ6VXNlcjY1NTg2Ng==", "avatar_url": "https://avatars1.githubusercontent.com/u/655866?v=4", "gravatar_id": "", "url": "https://api.github.com/users/colesbury", "html_url": "https://github.com/colesbury", "followers_url": "https://api.github.com/users/colesbury/followers", "following_url": "https://api.github.com/users/colesbury/following{/other_user}", "gists_url": "https://api.github.com/users/colesbury/gists{/gist_id}", "starred_url": "https://api.github.com/users/colesbury/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/colesbury/subscriptions", "organizations_url": "https://api.github.com/users/colesbury/orgs", "repos_url": "https://api.github.com/users/colesbury/repos", "events_url": "https://api.github.com/users/colesbury/events{/privacy}", "received_events_url": "https://api.github.com/users/colesbury/received_events", "type": "User", "site_admin": false}, "body": "It prints something like:\r\n\r\n```\r\nAssertionError: Not within tolerance rtol=0.0001 atol=1e-05 at input[1, 0] (-1.6947613954544067 vs. 1.5197489261627197) and 11 other locations (100.00%)\r\n```\r\n\r\nSo it looks like your indexing a tensor named `input`", "created_at": "2018-04-02T20:55:45Z", "updated_at": "2018-11-23T15:41:31Z", "html_url": "https://github.com/pytorch/pytorch/pull/6200#discussion_r178648040", "pull_request_url": "https://api.github.com/repos/pytorch/pytorch/pulls/6200", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/178648040"}, "html": {"href": "https://github.com/pytorch/pytorch/pull/6200#discussion_r178648040"}, "pull_request": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/6200"}}, "body_html": "<p>It prints something like:</p>\n<pre><code>AssertionError: Not within tolerance rtol=0.0001 atol=1e-05 at input[1, 0] (-1.6947613954544067 vs. 1.5197489261627197) and 11 other locations (100.00%)\n</code></pre>\n<p>So it looks like your indexing a tensor named <code>input</code></p>", "body_text": "It prints something like:\nAssertionError: Not within tolerance rtol=0.0001 atol=1e-05 at input[1, 0] (-1.6947613954544067 vs. 1.5197489261627197) and 11 other locations (100.00%)\n\nSo it looks like your indexing a tensor named input", "in_reply_to_id": 178647035}