{"url": "https://api.github.com/repos/pytorch/pytorch/issues/comments/311401257", "html_url": "https://github.com/pytorch/pytorch/issues/1318#issuecomment-311401257", "issue_url": "https://api.github.com/repos/pytorch/pytorch/issues/1318", "id": 311401257, "node_id": "MDEyOklzc3VlQ29tbWVudDMxMTQwMTI1Nw==", "user": {"login": "ezyang", "id": 13564, "node_id": "MDQ6VXNlcjEzNTY0", "avatar_url": "https://avatars0.githubusercontent.com/u/13564?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ezyang", "html_url": "https://github.com/ezyang", "followers_url": "https://api.github.com/users/ezyang/followers", "following_url": "https://api.github.com/users/ezyang/following{/other_user}", "gists_url": "https://api.github.com/users/ezyang/gists{/gist_id}", "starred_url": "https://api.github.com/users/ezyang/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ezyang/subscriptions", "organizations_url": "https://api.github.com/users/ezyang/orgs", "repos_url": "https://api.github.com/users/ezyang/repos", "events_url": "https://api.github.com/users/ezyang/events{/privacy}", "received_events_url": "https://api.github.com/users/ezyang/received_events", "type": "User", "site_admin": false}, "created_at": "2017-06-27T15:50:33Z", "updated_at": "2017-06-27T16:00:55Z", "author_association": "CONTRIBUTOR", "body_html": "<p>Here is an even more minimized test case:</p>\n<pre><code>import torch\nimport torch.autograd as autograd\nimport gc\n\n# Having a function call seems to be required\ndef f(inputs):\n    emb_inputs = inputs + 2\n    # Create a cycle\n    g = [None]\n    g[0] = (emb_inputs, g)\n    return emb_inputs.view(4)\n\nx = autograd.Variable(torch.LongTensor(2,2).fill_(1), requires_grad=True)\ny_hat = f(x)\n\n# This is required\ngc.collect()\n\ngrad = y_hat.data.new(*y_hat.data.size()).zero_()\ny_hat.backward(grad)\n</code></pre>", "body_text": "Here is an even more minimized test case:\nimport torch\nimport torch.autograd as autograd\nimport gc\n\n# Having a function call seems to be required\ndef f(inputs):\n    emb_inputs = inputs + 2\n    # Create a cycle\n    g = [None]\n    g[0] = (emb_inputs, g)\n    return emb_inputs.view(4)\n\nx = autograd.Variable(torch.LongTensor(2,2).fill_(1), requires_grad=True)\ny_hat = f(x)\n\n# This is required\ngc.collect()\n\ngrad = y_hat.data.new(*y_hat.data.size()).zero_()\ny_hat.backward(grad)", "body": "Here is an even more minimized test case:\r\n\r\n```\r\nimport torch\r\nimport torch.autograd as autograd\r\nimport gc\r\n\r\n# Having a function call seems to be required\r\ndef f(inputs):\r\n    emb_inputs = inputs + 2\r\n    # Create a cycle\r\n    g = [None]\r\n    g[0] = (emb_inputs, g)\r\n    return emb_inputs.view(4)\r\n\r\nx = autograd.Variable(torch.LongTensor(2,2).fill_(1), requires_grad=True)\r\ny_hat = f(x)\r\n\r\n# This is required\r\ngc.collect()\r\n\r\ngrad = y_hat.data.new(*y_hat.data.size()).zero_()\r\ny_hat.backward(grad)\r\n```"}