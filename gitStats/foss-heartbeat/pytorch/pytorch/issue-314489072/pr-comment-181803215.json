{"url": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/181803215", "pull_request_review_id": 112491128, "id": 181803215, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MTgwMzIxNQ==", "diff_hunk": "@@ -19,22 +19,25 @@ class Adagrad(Optimizer):\n         Optimization: http://jmlr.org/papers/v12/duchi11a.html\n     \"\"\"\n \n-    def __init__(self, params, lr=1e-2, lr_decay=0, weight_decay=0):\n+    def __init__(self, params, lr=1e-2, lr_decay=0, weight_decay=0, initial_accumulator_value=0):\n         if not 0.0 <= lr:\n             raise ValueError(\"Invalid learning rate: {}\".format(lr))\n         if not 0.0 <= lr_decay:\n             raise ValueError(\"Invalid lr_decay value: {}\".format(lr_decay))\n         if not 0.0 <= weight_decay:\n             raise ValueError(\"Invalid weight_decay value: {}\".format(weight_decay))\n+        if not 0.0 <= initial_accumulator_value:\n+            raise ValueError(\"Invalid initial_accumulator_value value: {}\".format(initial_accumulator_value))\n \n-        defaults = dict(lr=lr, lr_decay=lr_decay, weight_decay=weight_decay)\n+        defaults = dict(lr=lr, lr_decay=lr_decay, weight_decay=weight_decay,\n+                        initial_accumulator_value=initial_accumulator_value)\n         super(Adagrad, self).__init__(params, defaults)\n \n         for group in self.param_groups:\n             for p in group['params']:\n                 state = self.state[p]\n                 state['step'] = 0\n-                state['sum'] = torch.zeros_like(p.data)\n+                state['sum'] = torch.zeros_like(p.data).fill_(initial_accumulator_value)", "path": "torch/optim/adagrad.py", "position": null, "original_position": 25, "commit_id": "6ac660aa1cdd4a0bd8efe83b6883e8f79cf5fc5d", "original_commit_id": "5a81e34dc90cc5f4f4216e8162bd9c8253ad3f3f", "user": {"login": "SsnL", "id": 5674597, "node_id": "MDQ6VXNlcjU2NzQ1OTc=", "avatar_url": "https://avatars2.githubusercontent.com/u/5674597?v=4", "gravatar_id": "", "url": "https://api.github.com/users/SsnL", "html_url": "https://github.com/SsnL", "followers_url": "https://api.github.com/users/SsnL/followers", "following_url": "https://api.github.com/users/SsnL/following{/other_user}", "gists_url": "https://api.github.com/users/SsnL/gists{/gist_id}", "starred_url": "https://api.github.com/users/SsnL/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/SsnL/subscriptions", "organizations_url": "https://api.github.com/users/SsnL/orgs", "repos_url": "https://api.github.com/users/SsnL/repos", "events_url": "https://api.github.com/users/SsnL/events{/privacy}", "received_events_url": "https://api.github.com/users/SsnL/received_events", "type": "User", "site_admin": false}, "body": "we should really document these new methods better...", "created_at": "2018-04-16T16:28:05Z", "updated_at": "2018-11-23T15:42:30Z", "html_url": "https://github.com/pytorch/pytorch/pull/6616#discussion_r181803215", "pull_request_url": "https://api.github.com/repos/pytorch/pytorch/pulls/6616", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/181803215"}, "html": {"href": "https://github.com/pytorch/pytorch/pull/6616#discussion_r181803215"}, "pull_request": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/6616"}}, "body_html": "<p>we should really document these new methods better...</p>", "body_text": "we should really document these new methods better...", "in_reply_to_id": 181794501}