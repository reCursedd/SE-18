{"url": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/130512064", "pull_request_review_id": 53393921, "id": 130512064, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEzMDUxMjA2NA==", "diff_hunk": "@@ -2829,26 +2829,84 @@ TENSOR_IMPLEMENT_LOGICAL(ge,>=)\n TENSOR_IMPLEMENT_LOGICAL(eq,==)\n TENSOR_IMPLEMENT_LOGICAL(ne,!=)\n \n+#define VECTOR_IMPLEMENT_FUNCTION(NAME, CFUNC)  \\\n+  void THVector_(NAME)(real *y, const real *x, const ptrdiff_t n) \\\n+  { \\\n+    ptrdiff_t i = 0;  \\\n+    for(; i<n-4; i+=4)  \\\n+    { \\\n+      y[i] = CFUNC(x[i]); \\\n+      y[i+1] = CFUNC(x[i+1]); \\\n+      y[i+2] = CFUNC(x[i+2]); \\\n+      y[i+3] = CFUNC(x[i+3]); \\\n+    } \\\n+    for(; i < n; i++) \\\n+      y[i] = CFUNC(x[i]); \\\n+  } \\\n+\n+#define VECTOR_IMPLEMENT_FUNCTION_VALUE(NAME, CFUNC)  \\\n+  void THVector_(NAME)(real *y, const real *x, const real c, const ptrdiff_t n) \\\n+  { \\\n+    ptrdiff_t i = 0;  \\\n+    for(; i<n-4; i+=4)  \\\n+    { \\\n+      y[i] = CFUNC(x[i], c);  \\\n+      y[i+1] = CFUNC(x[i+1], c);  \\\n+      y[i+2] = CFUNC(x[i+2], c);  \\\n+      y[i+3] = CFUNC(x[i+3], c);  \\\n+    } \\\n+    for(; i < n; i++) \\\n+      y[i] = CFUNC(x[i], c);  \\\n+  } \\\n+\n #define LAB_IMPLEMENT_BASIC_FUNCTION(NAME, CFUNC)             \\\n+  VECTOR_IMPLEMENT_FUNCTION(NAME, CFUNC)  \\\n   void THTensor_(NAME)(THTensor *r_, THTensor *t)                \\\n   {                                                           \\\n     THTensor_(resizeAs)(r_, t);                               \\\n-    TH_TENSOR_APPLY2(real, t, real, r_, *r__data = CFUNC(*t_data);); \\\n+    if (THTensor_(isContiguous)(r_) && THTensor_(isContiguous)(t) && THTensor_(nElement)(r_) == THTensor_(nElement)(t)) { \\\n+      TH_TENSOR_APPLY2_CONTIG(real, r_, real, t, THVector_(NAME)(r__data, t_data, r__len););  \\\n+    } else {  \\\n+      TH_TENSOR_APPLY2(real, r_, real, t, *r__data = CFUNC(*t_data);); \\\n+    } \\\n   }                                                           \\\n \n #define LAB_IMPLEMENT_BASIC_FUNCTION_VALUE(NAME, CFUNC)                 \\\n+  VECTOR_IMPLEMENT_FUNCTION_VALUE(NAME, CFUNC)  \\\n   void THTensor_(NAME)(THTensor *r_, THTensor *t, real value)              \\\n   {                                                                     \\\n     THTensor_(resizeAs)(r_, t);                                         \\\n-    TH_TENSOR_APPLY2(real, t, real, r_, *r__data = CFUNC(*t_data, value);); \\\n+    if (THTensor_(isContiguous)(r_) && THTensor_(isContiguous)(t) && THTensor_(nElement)(r_) == THTensor_(nElement)(t)) { \\\n+      TH_TENSOR_APPLY2_CONTIG(real, r_, real, t, THVector_(NAME)(r__data, t_data, value, r__len);); \\\n+    } else {  \\\n+      TH_TENSOR_APPLY2(real, r_, real, t, *r__data = CFUNC(*t_data, value);); \\\n+    } \\\n   }                                                                     \\\n \n #if defined(TH_REAL_IS_LONG)\n-LAB_IMPLEMENT_BASIC_FUNCTION(abs,labs)\n+VECTOR_IMPLEMENT_FUNCTION(abs, labs)", "path": "torch/lib/TH/generic/THTensorMath.c", "position": null, "original_position": 62, "commit_id": "37e27218749f3c5034c3bc40fa871ae4aa6bdc70", "original_commit_id": "77ae61bc09ca374fcc351e1d7e65a41243b7ac0b", "user": {"login": "ruotianluo", "id": 16023153, "node_id": "MDQ6VXNlcjE2MDIzMTUz", "avatar_url": "https://avatars2.githubusercontent.com/u/16023153?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ruotianluo", "html_url": "https://github.com/ruotianluo", "followers_url": "https://api.github.com/users/ruotianluo/followers", "following_url": "https://api.github.com/users/ruotianluo/following{/other_user}", "gists_url": "https://api.github.com/users/ruotianluo/gists{/gist_id}", "starred_url": "https://api.github.com/users/ruotianluo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ruotianluo/subscriptions", "organizations_url": "https://api.github.com/users/ruotianluo/orgs", "repos_url": "https://api.github.com/users/ruotianluo/repos", "events_url": "https://api.github.com/users/ruotianluo/events{/privacy}", "received_events_url": "https://api.github.com/users/ruotianluo/received_events", "type": "User", "site_admin": false}, "body": "It works on master now because the travis is using gcc5. And I tried also gcc4.9 and clang, both work. Only gcc4.8 on travis doesn't work. Is that fine?", "created_at": "2017-08-01T03:19:06Z", "updated_at": "2018-11-23T15:34:17Z", "html_url": "https://github.com/pytorch/pytorch/pull/2137#discussion_r130512064", "pull_request_url": "https://api.github.com/repos/pytorch/pytorch/pulls/2137", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/130512064"}, "html": {"href": "https://github.com/pytorch/pytorch/pull/2137#discussion_r130512064"}, "pull_request": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/2137"}}, "body_html": "<p>It works on master now because the travis is using gcc5. And I tried also gcc4.9 and clang, both work. Only gcc4.8 on travis doesn't work. Is that fine?</p>", "body_text": "It works on master now because the travis is using gcc5. And I tried also gcc4.9 and clang, both work. Only gcc4.8 on travis doesn't work. Is that fine?", "in_reply_to_id": 128923292}