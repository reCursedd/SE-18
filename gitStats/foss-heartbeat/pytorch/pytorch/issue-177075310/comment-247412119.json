{"url": "https://api.github.com/repos/pytorch/pytorch/issues/comments/247412119", "html_url": "https://github.com/pytorch/pytorch/issues/31#issuecomment-247412119", "issue_url": "https://api.github.com/repos/pytorch/pytorch/issues/31", "id": 247412119, "node_id": "MDEyOklzc3VlQ29tbWVudDI0NzQxMjExOQ==", "user": {"login": "colesbury", "id": 655866, "node_id": "MDQ6VXNlcjY1NTg2Ng==", "avatar_url": "https://avatars1.githubusercontent.com/u/655866?v=4", "gravatar_id": "", "url": "https://api.github.com/users/colesbury", "html_url": "https://github.com/colesbury", "followers_url": "https://api.github.com/users/colesbury/followers", "following_url": "https://api.github.com/users/colesbury/following{/other_user}", "gists_url": "https://api.github.com/users/colesbury/gists{/gist_id}", "starred_url": "https://api.github.com/users/colesbury/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/colesbury/subscriptions", "organizations_url": "https://api.github.com/users/colesbury/orgs", "repos_url": "https://api.github.com/users/colesbury/repos", "events_url": "https://api.github.com/users/colesbury/events{/privacy}", "received_events_url": "https://api.github.com/users/colesbury/received_events", "type": "User", "site_admin": false}, "created_at": "2016-09-15T18:32:28Z", "updated_at": "2016-09-15T18:32:28Z", "author_association": "MEMBER", "body_html": "<p>I don't think this is a pattern we should encourage. You should instead do:</p>\n<div class=\"highlight highlight-source-python\"><pre>nn.Sequential([\n  m1,\n  m2,\n])</pre></div>\n<p>If you need something dynamic:</p>\n<div class=\"highlight highlight-source-python\"><pre>a <span class=\"pl-k\">=</span> [m1]\na <span class=\"pl-k\">+=</span> [m2]\nnn.Sequential(a)</pre></div>\n<p>Chaining methods in general is a lot less nice in Python than Lua because they don't break cleanly across lines. You have to surround it with parentheses or break lines with \\</p>", "body_text": "I don't think this is a pattern we should encourage. You should instead do:\nnn.Sequential([\n  m1,\n  m2,\n])\nIf you need something dynamic:\na = [m1]\na += [m2]\nnn.Sequential(a)\nChaining methods in general is a lot less nice in Python than Lua because they don't break cleanly across lines. You have to surround it with parentheses or break lines with \\", "body": "I don't think this is a pattern we should encourage. You should instead do:\n\n``` python\nnn.Sequential([\n  m1,\n  m2,\n])\n```\n\nIf you need something dynamic:\n\n``` python\na = [m1]\na += [m2]\nnn.Sequential(a)\n```\n\nChaining methods in general is a lot less nice in Python than Lua because they don't break cleanly across lines. You have to surround it with parentheses or break lines with \\\n"}