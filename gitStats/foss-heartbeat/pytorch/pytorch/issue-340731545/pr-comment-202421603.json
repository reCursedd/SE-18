{"url": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/202421603", "pull_request_review_id": 137119395, "id": 202421603, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwMjQyMTYwMw==", "diff_hunk": "@@ -1,63 +1,441 @@\n #include \"torch/csrc/jit/passes/to_batch.h\"\n #include \"torch/csrc/jit/script/compiler.h\"\n+#include \"torch/csrc/jit/tensor_conversions.h\"\n \n namespace torch { namespace jit {\n \n std::unordered_map<std::string, std::shared_ptr<Graph>> ToBatch::batch_operator_table;\n \n-void ToBatch::toBatch(Block* block, Block* res_block) {\n-  // change inputs of a graph - expand tensor to {data, mask, dims}\n+// replace aten operator node with BatchTensor operator graph\n+void ToBatch::visitAten(Node* n, Block* block, Block* res_block, std::unordered_map<std::string, Value*>& var_map){\n+  if(n->outputs().size() > 1){\n+    throw std::runtime_error(\"NYI: multiple assignment is not supported yet\");\n+  }\n+  auto batch_graph = batch_operator_table.at(n->kind().toUnqualString());\n+  std::vector<Value*> new_inputs;\n+  for(Value *input : n->inputs()){\n+    if(batch_map.find(input) != batch_map.end()){\n+      auto new_input = batch_map.at(input);\n+      new_inputs.insert(new_inputs.end(), new_input.begin(), new_input.end());\n+    }\n+    else{\n+      throw std::runtime_error(\"NYI: non-tensor input for aten operator is not supported yet\");\n+    }\n+  }\n+  auto outputs = script::inlineCallTo(*res_block->owningGraph(), *batch_graph, new_inputs);\n+\n+  // do update on assignment", "path": "torch/csrc/jit/passes/to_batch.cpp", "position": null, "original_position": 29, "commit_id": "154e4eb8cd13cacd121fe3577831ed0590a1a5d5", "original_commit_id": "d840a83a0f6073fb074fc52b7c89a8887caab06f", "user": {"login": "zdevito", "id": 370202, "node_id": "MDQ6VXNlcjM3MDIwMg==", "avatar_url": "https://avatars0.githubusercontent.com/u/370202?v=4", "gravatar_id": "", "url": "https://api.github.com/users/zdevito", "html_url": "https://github.com/zdevito", "followers_url": "https://api.github.com/users/zdevito/followers", "following_url": "https://api.github.com/users/zdevito/following{/other_user}", "gists_url": "https://api.github.com/users/zdevito/gists{/gist_id}", "starred_url": "https://api.github.com/users/zdevito/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/zdevito/subscriptions", "organizations_url": "https://api.github.com/users/zdevito/orgs", "repos_url": "https://api.github.com/users/zdevito/repos", "events_url": "https://api.github.com/users/zdevito/events{/privacy}", "received_events_url": "https://api.github.com/users/zdevito/received_events", "type": "User", "site_admin": false}, "body": "The graph is in single-static assignment form. Because of this there are no assignments anywhere in the graph. I there is some confusion here because of it. Just because a uniqueName shares a prefix does not mean it is the same variable, uniqueNames are for debugging only. In fact, you can treat every `Value*` as a separate variable, and we should not need to call update.\r\n\r\nThis will also allow you to remove getNameBaseSuffix usages. ", "created_at": "2018-07-13T17:30:48Z", "updated_at": "2018-11-23T15:47:20Z", "html_url": "https://github.com/pytorch/pytorch/pull/9392#discussion_r202421603", "pull_request_url": "https://api.github.com/repos/pytorch/pytorch/pulls/9392", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/202421603"}, "html": {"href": "https://github.com/pytorch/pytorch/pull/9392#discussion_r202421603"}, "pull_request": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/9392"}}, "body_html": "<p>The graph is in single-static assignment form. Because of this there are no assignments anywhere in the graph. I there is some confusion here because of it. Just because a uniqueName shares a prefix does not mean it is the same variable, uniqueNames are for debugging only. In fact, you can treat every <code>Value*</code> as a separate variable, and we should not need to call update.</p>\n<p>This will also allow you to remove getNameBaseSuffix usages.</p>", "body_text": "The graph is in single-static assignment form. Because of this there are no assignments anywhere in the graph. I there is some confusion here because of it. Just because a uniqueName shares a prefix does not mean it is the same variable, uniqueNames are for debugging only. In fact, you can treat every Value* as a separate variable, and we should not need to call update.\nThis will also allow you to remove getNameBaseSuffix usages."}