{"url": "https://api.github.com/repos/pytorch/pytorch/issues/13275", "repository_url": "https://api.github.com/repos/pytorch/pytorch", "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/13275/labels{/name}", "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/13275/comments", "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/13275/events", "html_url": "https://github.com/pytorch/pytorch/pull/13275", "id": 375245295, "node_id": "MDExOlB1bGxSZXF1ZXN0MjI2NzM2MDM2", "number": 13275, "title": "Replace CUDA-specific set_index(_from) method from DeviceGuard with set_device.", "user": {"login": "ezyang", "id": 13564, "node_id": "MDQ6VXNlcjEzNTY0", "avatar_url": "https://avatars0.githubusercontent.com/u/13564?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ezyang", "html_url": "https://github.com/ezyang", "followers_url": "https://api.github.com/users/ezyang/followers", "following_url": "https://api.github.com/users/ezyang/following{/other_user}", "gists_url": "https://api.github.com/users/ezyang/gists{/gist_id}", "starred_url": "https://api.github.com/users/ezyang/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ezyang/subscriptions", "organizations_url": "https://api.github.com/users/ezyang/orgs", "repos_url": "https://api.github.com/users/ezyang/repos", "events_url": "https://api.github.com/users/ezyang/events{/privacy}", "received_events_url": "https://api.github.com/users/ezyang/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2018-10-29T22:35:52Z", "updated_at": "2018-11-23T15:53:48Z", "closed_at": "2018-10-31T14:57:26Z", "author_association": "CONTRIBUTOR", "pull_request": {"url": "https://api.github.com/repos/pytorch/pytorch/pulls/13275", "html_url": "https://github.com/pytorch/pytorch/pull/13275", "diff_url": "https://github.com/pytorch/pytorch/pull/13275.diff", "patch_url": "https://github.com/pytorch/pytorch/pull/13275.patch"}, "body_html": "<p>Stack:<br>\n\u00a0\u00a0\u00a0\u00a0<g-emoji class=\"g-emoji\" alias=\"white_circle\" fallback-src=\"https://assets-cdn.github.com/images/icons/emoji/unicode/26aa.png\">\u26aa\ufe0f</g-emoji>\u00a0 <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load issue title\" data-id=\"374072724\" data-permission-text=\"Issue title is private\" data-url=\"https://github.com/pytorch/pytorch/issues/13133\" data-hovercard-type=\"pull_request\" data-hovercard-url=\"/pytorch/pytorch/pull/13133/hovercard\" href=\"https://github.com/pytorch/pytorch/pull/13133\">#13133</a> Add c10::Stream, make at::cuda::CUDAStream use it.\u00a0\u00a0<a href=\"https://our.internmc.facebook.com/intern/diff/D10855883/\" rel=\"nofollow\"><g-emoji class=\"g-emoji\" alias=\"yellow_heart\" fallback-src=\"https://assets-cdn.github.com/images/icons/emoji/unicode/1f49b.png\">\ud83d\udc9b</g-emoji></a><br>\n\u00a0\u00a0\u00a0\u00a0<g-emoji class=\"g-emoji\" alias=\"white_circle\" fallback-src=\"https://assets-cdn.github.com/images/icons/emoji/unicode/26aa.png\">\u26aa\ufe0f</g-emoji>\u00a0 <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load issue title\" data-id=\"374825381\" data-permission-text=\"Issue title is private\" data-url=\"https://github.com/pytorch/pytorch/issues/13232\" data-hovercard-type=\"pull_request\" data-hovercard-url=\"/pytorch/pytorch/pull/13232/hovercard\" href=\"https://github.com/pytorch/pytorch/pull/13232\">#13232</a> Delete DeviceGuard(int64_t) constructor.\u00a0\u00a0<a href=\"https://our.internmc.facebook.com/intern/diff/D10858024/\" rel=\"nofollow\"><g-emoji class=\"g-emoji\" alias=\"yellow_heart\" fallback-src=\"https://assets-cdn.github.com/images/icons/emoji/unicode/1f49b.png\">\ud83d\udc9b</g-emoji></a><br>\n\u00a0\u00a0\u00a0\u00a0<g-emoji class=\"g-emoji\" alias=\"black_circle\" fallback-src=\"https://assets-cdn.github.com/images/icons/emoji/unicode/26ab.png\">\u26ab\ufe0f</g-emoji>\u00a0 <strong><a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load issue title\" data-id=\"375245295\" data-permission-text=\"Issue title is private\" data-url=\"https://github.com/pytorch/pytorch/issues/13275\" data-hovercard-type=\"pull_request\" data-hovercard-url=\"/pytorch/pytorch/pull/13275/hovercard\" href=\"https://github.com/pytorch/pytorch/pull/13275\">#13275</a> Replace CUDA-specific set_index(_from) method from DeviceGuard with set_device.</strong>\u00a0\u00a0<a href=\"https://our.internmc.facebook.com/intern/diff/D12832080/\" rel=\"nofollow\"><g-emoji class=\"g-emoji\" alias=\"yellow_heart\" fallback-src=\"https://assets-cdn.github.com/images/icons/emoji/unicode/1f49b.png\">\ud83d\udc9b</g-emoji></a><br>\n\u00a0\u00a0\u00a0\u00a0<g-emoji class=\"g-emoji\" alias=\"white_circle\" fallback-src=\"https://assets-cdn.github.com/images/icons/emoji/unicode/26aa.png\">\u26aa\ufe0f</g-emoji>\u00a0 <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load issue title\" data-id=\"375708276\" data-permission-text=\"Issue title is private\" data-url=\"https://github.com/pytorch/pytorch/issues/13342\" data-hovercard-type=\"pull_request\" data-hovercard-url=\"/pytorch/pytorch/pull/13342/hovercard\" href=\"https://github.com/pytorch/pytorch/pull/13342\">#13342</a> Generalize DeviceGuard to work with arbitrary DeviceType.\u00a0\u00a0<a href=\"https://our.internmc.facebook.com/intern/diff/D12849620/\" rel=\"nofollow\"><g-emoji class=\"g-emoji\" alias=\"yellow_heart\" fallback-src=\"https://assets-cdn.github.com/images/icons/emoji/unicode/1f49b.png\">\ud83d\udc9b</g-emoji></a></p>\n<p>This resulted in a bunch of knock-on changes, which I will now<br>\ndescribe:</p>\n<ul>\n<li>s/original_index/original_device/</li>\n<li>s/last_index/last_device/</li>\n<li>A bunch of places that used set_index, now use CUDAGuard (which does have<br>\nset_index) because they were CUDA-specific code.</li>\n</ul>\n<p>Major caveat: DeviceGuard doesn't <em>actually</em> work non-CUDA/CPU devices, To make<br>\nthat happen, I plan on totally replacing the implementation of DeviceGuard; what<br>\nI mostly care about here is wrangling the API into an acceptable state.</p>\n<p>Differential Revision: <a href=\"https://our.internmc.facebook.com/intern/diff/D12832080/\" rel=\"nofollow\">D12832080</a></p>", "body_text": "Stack:\n\u00a0\u00a0\u00a0\u00a0\u26aa\ufe0f\u00a0 #13133 Add c10::Stream, make at::cuda::CUDAStream use it.\u00a0\u00a0\ud83d\udc9b\n\u00a0\u00a0\u00a0\u00a0\u26aa\ufe0f\u00a0 #13232 Delete DeviceGuard(int64_t) constructor.\u00a0\u00a0\ud83d\udc9b\n\u00a0\u00a0\u00a0\u00a0\u26ab\ufe0f\u00a0 #13275 Replace CUDA-specific set_index(_from) method from DeviceGuard with set_device.\u00a0\u00a0\ud83d\udc9b\n\u00a0\u00a0\u00a0\u00a0\u26aa\ufe0f\u00a0 #13342 Generalize DeviceGuard to work with arbitrary DeviceType.\u00a0\u00a0\ud83d\udc9b\nThis resulted in a bunch of knock-on changes, which I will now\ndescribe:\n\ns/original_index/original_device/\ns/last_index/last_device/\nA bunch of places that used set_index, now use CUDAGuard (which does have\nset_index) because they were CUDA-specific code.\n\nMajor caveat: DeviceGuard doesn't actually work non-CUDA/CPU devices, To make\nthat happen, I plan on totally replacing the implementation of DeviceGuard; what\nI mostly care about here is wrangling the API into an acceptable state.\nDifferential Revision: D12832080", "body": "Stack:\n&nbsp;&nbsp;&nbsp;&nbsp;:white_circle:&nbsp; #13133 Add c10::Stream, make at::cuda::CUDAStream use it.&nbsp;&nbsp;[:yellow_heart:](https://our.internmc.facebook.com/intern/diff/D10855883/)\n&nbsp;&nbsp;&nbsp;&nbsp;:white_circle:&nbsp; #13232 Delete DeviceGuard(int64_t) constructor.&nbsp;&nbsp;[:yellow_heart:](https://our.internmc.facebook.com/intern/diff/D10858024/)\n&nbsp;&nbsp;&nbsp;&nbsp;:black_circle:&nbsp; **#13275 Replace CUDA-specific set_index(_from) method from DeviceGuard with set_device.**&nbsp;&nbsp;[:yellow_heart:](https://our.internmc.facebook.com/intern/diff/D12832080/)\n&nbsp;&nbsp;&nbsp;&nbsp;:white_circle:&nbsp; #13342 Generalize DeviceGuard to work with arbitrary DeviceType.&nbsp;&nbsp;[:yellow_heart:](https://our.internmc.facebook.com/intern/diff/D12849620/)\n\nThis resulted in a bunch of knock-on changes, which I will now\ndescribe:\n\n- s/original_index/original_device/\n- s/last_index/last_device/\n- A bunch of places that used set_index, now use CUDAGuard (which does have\n  set_index) because they were CUDA-specific code.\n\nMajor caveat: DeviceGuard doesn't *actually* work non-CUDA/CPU devices, To make\nthat happen, I plan on totally replacing the implementation of DeviceGuard; what\nI mostly care about here is wrangling the API into an acceptable state.\n\nDifferential Revision: [D12832080](https://our.internmc.facebook.com/intern/diff/D12832080/)"}