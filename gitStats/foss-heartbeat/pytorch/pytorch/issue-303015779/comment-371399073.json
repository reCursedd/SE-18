{"url": "https://api.github.com/repos/pytorch/pytorch/issues/comments/371399073", "html_url": "https://github.com/pytorch/pytorch/pull/5608#issuecomment-371399073", "issue_url": "https://api.github.com/repos/pytorch/pytorch/issues/5608", "id": 371399073, "node_id": "MDEyOklzc3VlQ29tbWVudDM3MTM5OTA3Mw==", "user": {"login": "Officium", "id": 13431221, "node_id": "MDQ6VXNlcjEzNDMxMjIx", "avatar_url": "https://avatars1.githubusercontent.com/u/13431221?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Officium", "html_url": "https://github.com/Officium", "followers_url": "https://api.github.com/users/Officium/followers", "following_url": "https://api.github.com/users/Officium/following{/other_user}", "gists_url": "https://api.github.com/users/Officium/gists{/gist_id}", "starred_url": "https://api.github.com/users/Officium/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Officium/subscriptions", "organizations_url": "https://api.github.com/users/Officium/orgs", "repos_url": "https://api.github.com/users/Officium/repos", "events_url": "https://api.github.com/users/Officium/events{/privacy}", "received_events_url": "https://api.github.com/users/Officium/received_events", "type": "User", "site_admin": false}, "created_at": "2018-03-08T07:04:04Z", "updated_at": "2018-03-08T07:50:06Z", "author_association": "CONTRIBUTOR", "body_html": "<p><a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=5652049\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/zou3519\">@zou3519</a> <a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=8813817\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/li-roy\">@li-roy</a> <a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=13564\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/ezyang\">@ezyang</a> <a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=4583066\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/apaszke\">@apaszke</a> <a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=1041752\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/vadimkantorov\">@vadimkantorov</a><br>\nI get an example of this trick.<br>\nIf we only have 3 significant digits for any number, and we want to calculate <code>8 - sqrt(63)</code>. Then we will get <code>8 - sqrt(63) = 8 - 7.94 = 0.06</code>. We can just transform the calculation format to get higher accuracy <code>8 - sqrt(63) = 1 / (8 + sqrt(63)) = 1 / (8 + 7.94) = 1 / 15.9 = 0.0629</code>.<br>\nIn this example, we can see that <strong>subtraction of two close number will loss accuracy</strong> because of the store space. In the commit of this pull request, the loss is transformed from <code>start</code> and <code>stop</code> to <code>start / step</code> and <code>stop / step</code> where the distance between the latter pair is bigger in <code>arange</code> setting.<br>\nI saw <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load issue title\" data-id=\"302911696\" data-permission-text=\"Issue title is private\" data-url=\"https://github.com/pytorch/pytorch/issues/5600\" data-hovercard-type=\"pull_request\" data-hovercard-url=\"/pytorch/pytorch/pull/5600/hovercard\" href=\"https://github.com/pytorch/pytorch/pull/5600\">#5600</a> and I think it is important to make consistent with <code>numpy.arange</code>. In the other hand, we should get more accuracy result as possible as we can.</p>", "body_text": "@zou3519 @li-roy @ezyang @apaszke @vadimkantorov\nI get an example of this trick.\nIf we only have 3 significant digits for any number, and we want to calculate 8 - sqrt(63). Then we will get 8 - sqrt(63) = 8 - 7.94 = 0.06. We can just transform the calculation format to get higher accuracy 8 - sqrt(63) = 1 / (8 + sqrt(63)) = 1 / (8 + 7.94) = 1 / 15.9 = 0.0629.\nIn this example, we can see that subtraction of two close number will loss accuracy because of the store space. In the commit of this pull request, the loss is transformed from start and stop to start / step and stop / step where the distance between the latter pair is bigger in arange setting.\nI saw #5600 and I think it is important to make consistent with numpy.arange. In the other hand, we should get more accuracy result as possible as we can.", "body": "@zou3519 @li-roy @ezyang @apaszke @vadimkantorov \r\nI get an example of this trick.\r\nIf we only have 3 significant digits for any number, and we want to calculate `8 - sqrt(63)`. Then we will get `8 - sqrt(63) = 8 - 7.94 = 0.06`. We can just transform the calculation format to get higher accuracy `8 - sqrt(63) = 1 / (8 + sqrt(63)) = 1 / (8 + 7.94) = 1 / 15.9 = 0.0629`.\r\nIn this example, we can see that **subtraction of two close number will loss accuracy** because of the store space. In the commit of this pull request, the loss is transformed from `start` and `stop` to `start / step` and `stop / step` where the distance between the latter pair is bigger in `arange` setting. \r\nI saw #5600 and I think it is important to make consistent with `numpy.arange`. In the other hand, we should get more accuracy result as possible as we can."}