{"url": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/167761823", "pull_request_review_id": 96026647, "id": 167761823, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE2Nzc2MTgyMw==", "diff_hunk": "@@ -309,7 +319,8 @@ def _shutdown_workers(self):\n             while not self.data_queue.empty():\n                 self.data_queue.get()\n             for _ in self.workers:\n-                self.index_queue.put(None)\n+                for q in self.index_queue:", "path": "torch/utils/data/dataloader.py", "position": null, "original_position": 44, "commit_id": "bbf5cd5611e02e27594c47fd76419ec5c5e78cc0", "original_commit_id": "b3fa12999b0f15186351b878a81a437edc5bf4b4", "user": {"login": "AlexanderRadionov", "id": 17885281, "node_id": "MDQ6VXNlcjE3ODg1Mjgx", "avatar_url": "https://avatars0.githubusercontent.com/u/17885281?v=4", "gravatar_id": "", "url": "https://api.github.com/users/AlexanderRadionov", "html_url": "https://github.com/AlexanderRadionov", "followers_url": "https://api.github.com/users/AlexanderRadionov/followers", "following_url": "https://api.github.com/users/AlexanderRadionov/following{/other_user}", "gists_url": "https://api.github.com/users/AlexanderRadionov/gists{/gist_id}", "starred_url": "https://api.github.com/users/AlexanderRadionov/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/AlexanderRadionov/subscriptions", "organizations_url": "https://api.github.com/users/AlexanderRadionov/orgs", "repos_url": "https://api.github.com/users/AlexanderRadionov/repos", "events_url": "https://api.github.com/users/AlexanderRadionov/events{/privacy}", "received_events_url": "https://api.github.com/users/AlexanderRadionov/received_events", "type": "User", "site_admin": false}, "body": "I think this is correct. The cycle by ``for _ in self.workers`` gurantee that ``index_queue`` get the ``num_worker`` Nones. I have changed ``index_queue`` type from Queue to list of Queues. Because of this, I put None to all ``q`` in ``self.index_queue``. In case when ``ind_worker_queue`` if False, the ``self.index_queue`` will list with only one Queue inside.", "created_at": "2018-02-13T05:08:14Z", "updated_at": "2018-11-23T15:39:31Z", "html_url": "https://github.com/pytorch/pytorch/pull/4640#discussion_r167761823", "pull_request_url": "https://api.github.com/repos/pytorch/pytorch/pulls/4640", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/167761823"}, "html": {"href": "https://github.com/pytorch/pytorch/pull/4640#discussion_r167761823"}, "pull_request": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/4640"}}, "body_html": "<p>I think this is correct. The cycle by <code>for _ in self.workers</code> gurantee that <code>index_queue</code> get the <code>num_worker</code> Nones. I have changed <code>index_queue</code> type from Queue to list of Queues. Because of this, I put None to all <code>q</code> in <code>self.index_queue</code>. In case when <code>ind_worker_queue</code> if False, the <code>self.index_queue</code> will list with only one Queue inside.</p>", "body_text": "I think this is correct. The cycle by for _ in self.workers gurantee that index_queue get the num_worker Nones. I have changed index_queue type from Queue to list of Queues. Because of this, I put None to all q in self.index_queue. In case when ind_worker_queue if False, the self.index_queue will list with only one Queue inside.", "in_reply_to_id": 165480425}