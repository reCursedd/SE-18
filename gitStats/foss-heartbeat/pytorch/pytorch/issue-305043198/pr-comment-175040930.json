{"url": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/175040930", "pull_request_review_id": 104505026, "id": 175040930, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE3NTA0MDkzMA==", "diff_hunk": "@@ -105,18 +106,15 @@ struct ModuleValue : public SugaredValue {\n \n   // select an attribute on it, e.g. `this.field`\n   virtual std::shared_ptr<SugaredValue> attr(SourceRange loc, Method & m, const std::string& field) override {\n-    auto kind = module->find_attribute(field);\n-    switch(kind) {\n-      case NamedMember::None:\n-        throw ErrorReport(loc) << \"module has no attribute '\" << field << \"'\";\n-      case NamedMember::Module:\n-        return std::make_shared<ModuleValue>(module->get_module(field));\n-      case NamedMember::Method:\n-        return std::make_shared<MethodValue>(module, module->get_method(field));\n-      case NamedMember::Parameter:\n-        return std::make_shared<SimpleValue>(m.get_or_add_parameter(module->parameter_slot(field)));\n+    if(auto v = module->find_module(field)) {\n+      return std::make_shared<ModuleValue>(v->module);\n+    } else if(auto v = module->find_method(field)) {\n+      return std::make_shared<MethodValue>(module, *v);\n+    } else if(auto v = module->find_parameter(field)) {", "path": "torch/csrc/jit/script/init.cpp", "position": null, "original_position": 25, "commit_id": "50399284500538c5061b09ca43ce118e838d09db", "original_commit_id": "6699ca53212e7b5395c74cad71cd9b61fe0fdf63", "user": {"login": "apaszke", "id": 4583066, "node_id": "MDQ6VXNlcjQ1ODMwNjY=", "avatar_url": "https://avatars3.githubusercontent.com/u/4583066?v=4", "gravatar_id": "", "url": "https://api.github.com/users/apaszke", "html_url": "https://github.com/apaszke", "followers_url": "https://api.github.com/users/apaszke/followers", "following_url": "https://api.github.com/users/apaszke/following{/other_user}", "gists_url": "https://api.github.com/users/apaszke/gists{/gist_id}", "starred_url": "https://api.github.com/users/apaszke/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/apaszke/subscriptions", "organizations_url": "https://api.github.com/users/apaszke/orgs", "repos_url": "https://api.github.com/users/apaszke/repos", "events_url": "https://api.github.com/users/apaszke/events{/privacy}", "received_events_url": "https://api.github.com/users/apaszke/received_events", "type": "User", "site_admin": false}, "body": "Can we please replace `auto` with real types here? They differ between branches and it's not immediately obvious what they are", "created_at": "2018-03-16T09:54:17Z", "updated_at": "2018-11-23T15:40:49Z", "html_url": "https://github.com/pytorch/pytorch/pull/5769#discussion_r175040930", "pull_request_url": "https://api.github.com/repos/pytorch/pytorch/pulls/5769", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/175040930"}, "html": {"href": "https://github.com/pytorch/pytorch/pull/5769#discussion_r175040930"}, "pull_request": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/5769"}}, "body_html": "<p>Can we please replace <code>auto</code> with real types here? They differ between branches and it's not immediately obvious what they are</p>", "body_text": "Can we please replace auto with real types here? They differ between branches and it's not immediately obvious what they are"}