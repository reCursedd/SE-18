{"url": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/175041756", "pull_request_review_id": 104505026, "id": 175041756, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE3NTA0MTc1Ng==", "diff_hunk": "@@ -155,6 +153,40 @@ py::object unpackVariableTensorList(std::vector<at::Tensor> outputs) {\n   }\n }\n \n+// This is a temporary constructor so that we can write python tests of\n+// the executor. It does not have most of the functionality of CompiledFunction\n+// such as being able to hold parameters...\n+std::shared_ptr<Graph> createGraphByTracing(\n+        py::function func,\n+        std::vector<tracer::TraceInput> trace_inputs,\n+        size_t num_func_inputs) {\n+  auto enter_info = tracer::enter(std::move(trace_inputs), 1);\n+  py::tuple py_inputs(num_func_inputs);\n+  for(size_t i = 0; i < num_func_inputs; ++i) {\n+    py_inputs[i] = py::cast(enter_info.second[i]);\n+  }\n+  auto out = func(*py_inputs);\n+  std::vector<autograd::Variable> outputs;\n+  if(PyTuple_Check(out.ptr())) {\n+    outputs = py::cast<std::vector<autograd::Variable>>(out);\n+  } else {\n+    outputs.push_back(py::cast<autograd::Variable>(out));\n+  }\n+  tracer::exit(outputs);\n+  auto graph = enter_info.first->graph;\n+  EliminateDeadCode(graph);\n+  return graph;\n+}\n+\n+static void gatherStateDict(std::vector<at::Tensor*> & values, const Module & m) {", "path": "torch/csrc/jit/script/init.cpp", "position": null, "original_position": 63, "commit_id": "50399284500538c5061b09ca43ce118e838d09db", "original_commit_id": "6699ca53212e7b5395c74cad71cd9b61fe0fdf63", "user": {"login": "apaszke", "id": 4583066, "node_id": "MDQ6VXNlcjQ1ODMwNjY=", "avatar_url": "https://avatars3.githubusercontent.com/u/4583066?v=4", "gravatar_id": "", "url": "https://api.github.com/users/apaszke", "html_url": "https://github.com/apaszke", "followers_url": "https://api.github.com/users/apaszke/followers", "following_url": "https://api.github.com/users/apaszke/following{/other_user}", "gists_url": "https://api.github.com/users/apaszke/gists{/gist_id}", "starred_url": "https://api.github.com/users/apaszke/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/apaszke/subscriptions", "organizations_url": "https://api.github.com/users/apaszke/orgs", "repos_url": "https://api.github.com/users/apaszke/repos", "events_url": "https://api.github.com/users/apaszke/events{/privacy}", "received_events_url": "https://api.github.com/users/apaszke/received_events", "type": "User", "site_admin": false}, "body": "This looks more like `.parameters()` than `.state_dict()`, so I'd change the name. Also I think `.parameters()` deduplicates them, but this function doesn't.", "created_at": "2018-03-16T09:57:54Z", "updated_at": "2018-11-23T15:40:49Z", "html_url": "https://github.com/pytorch/pytorch/pull/5769#discussion_r175041756", "pull_request_url": "https://api.github.com/repos/pytorch/pytorch/pulls/5769", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/175041756"}, "html": {"href": "https://github.com/pytorch/pytorch/pull/5769#discussion_r175041756"}, "pull_request": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/5769"}}, "body_html": "<p>This looks more like <code>.parameters()</code> than <code>.state_dict()</code>, so I'd change the name. Also I think <code>.parameters()</code> deduplicates them, but this function doesn't.</p>", "body_text": "This looks more like .parameters() than .state_dict(), so I'd change the name. Also I think .parameters() deduplicates them, but this function doesn't."}