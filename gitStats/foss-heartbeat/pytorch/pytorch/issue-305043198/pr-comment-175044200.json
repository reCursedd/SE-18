{"url": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/175044200", "pull_request_review_id": 104505026, "id": 175044200, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE3NTA0NDIwMA==", "diff_hunk": "@@ -105,124 +122,133 @@ struct NamedParameter {\n   std::unique_ptr<at::Tensor> parameter;\n };\n \n-struct NamedMember {\n-  enum Kind { Module, Parameter, Method, None };\n-  // note: None is used to report undefined attributes;\n-  Kind kind;\n-  size_t offset;\n-\n-  static const char * kind_string(Kind kind) {\n-    switch(kind) {\n-      case Module: return \"module\";\n-      case Parameter: return \"parameter\";\n-      case Method: return \"method\";\n-      case None: return \"none\";\n-      default: return \"unknown\";\n+// simple ordered dict used only in Module\n+// contains only the minimum necessary functionality for Module\n+template<typename T>\n+struct OrderedDict {\n+  OrderedDict() {}\n+  T& insert(const std::string& name,  T&& value, const char* what) {\n+    if(index_.count(name) != 0) {", "path": "torch/csrc/jit/script/module.h", "position": null, "original_position": 97, "commit_id": "50399284500538c5061b09ca43ce118e838d09db", "original_commit_id": "6699ca53212e7b5395c74cad71cd9b61fe0fdf63", "user": {"login": "apaszke", "id": 4583066, "node_id": "MDQ6VXNlcjQ1ODMwNjY=", "avatar_url": "https://avatars3.githubusercontent.com/u/4583066?v=4", "gravatar_id": "", "url": "https://api.github.com/users/apaszke", "html_url": "https://github.com/apaszke", "followers_url": "https://api.github.com/users/apaszke/followers", "following_url": "https://api.github.com/users/apaszke/following{/other_user}", "gists_url": "https://api.github.com/users/apaszke/gists{/gist_id}", "starred_url": "https://api.github.com/users/apaszke/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/apaszke/subscriptions", "organizations_url": "https://api.github.com/users/apaszke/orgs", "repos_url": "https://api.github.com/users/apaszke/repos", "events_url": "https://api.github.com/users/apaszke/events{/privacy}", "received_events_url": "https://api.github.com/users/apaszke/received_events", "type": "User", "site_admin": false}, "body": "FWIW `OrderedDict`s support insertion (items stay in the same order, only value is updated). Don't know if this is a general constraint coming from Modules, or you didn't implement it for some other reason", "created_at": "2018-03-16T10:08:25Z", "updated_at": "2018-11-23T15:40:50Z", "html_url": "https://github.com/pytorch/pytorch/pull/5769#discussion_r175044200", "pull_request_url": "https://api.github.com/repos/pytorch/pytorch/pulls/5769", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/175044200"}, "html": {"href": "https://github.com/pytorch/pytorch/pull/5769#discussion_r175044200"}, "pull_request": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/5769"}}, "body_html": "<p>FWIW <code>OrderedDict</code>s support insertion (items stay in the same order, only value is updated). Don't know if this is a general constraint coming from Modules, or you didn't implement it for some other reason</p>", "body_text": "FWIW OrderedDicts support insertion (items stay in the same order, only value is updated). Don't know if this is a general constraint coming from Modules, or you didn't implement it for some other reason"}