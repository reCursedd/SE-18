{"url": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/175047602", "pull_request_review_id": 104505026, "id": 175047602, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE3NTA0NzYwMg==", "diff_hunk": "@@ -669,6 +534,119 @@ def script_method(fn):\n     return ScriptMethodStub(createResolutionCallback(), get_jit_ast(fn))\n \n \n+# These OrderedDictWrapper classes replace the actual OrderedDicts in\n+# module with versions that get/set properties inside of script::Module.\n+# This allows us to reuse most of nn.Module while still storing the\n+# data in C++.\n+# Each OrderedDict needs to support:\n+#  x not in view\n+#  x in view\n+#  view[name] = ...\n+#  view.values()\n+#  del view[name]\n+#  view.items()\n+#  view.keys()\n+\n+class OrderedDictWrapper(object):\n+    def __init__(self, module):\n+        self.module_ref = weakref.ref(module)\n+\n+    @property\n+    def module(self):\n+        r = self.module_ref()\n+        if r is None:\n+            raise RuntimeError(\"_parameters or _modules alive after module is dead\")\n+        return r\n+\n+    def keys(self):\n+        return [k for k, v in self.items()]\n+\n+    def values(self):\n+        return [v for k, v in self.items()]\n+\n+    def __delitem__(self, k):\n+        raise RuntimeError(\"cannot delete methods or parameters of a script module\")\n+\n+    def items(self):\n+        raise NotImplementedError\n+\n+    def __contains__(self, k):\n+        raise NotImplementedError\n+\n+    def __getitem__(self, k):\n+        raise NotImplementedError\n+\n+    def __setitem__(self, k, v):\n+        raise NotImplementedError\n+\n+\n+class OrderedModuleDict(OrderedDictWrapper):\n+    def __init__(self, module):\n+        super(OrderedModuleDict, self).__init__(module)\n+\n+    def items(self):\n+        r = self.module._get_modules()\n+        return r\n+\n+    def __contains__(self, k):\n+        return self.module._has_module(k)\n+\n+    # TODO: allow for python modules in addition to script modules\n+    def __setitem__(self, k, v):\n+        self.module._register_module(k, v)\n+        # note: script modules are subclassed in python and the\n+        # C++ script::Module class will not hold references to them\n+        # to ensure that you always get the same python value here\n+        # we store it as a native attribute _in addition to_\n+        # registering it with the C++ script::Module\n+        object.__setattr__(self.module, k, v)\n+\n+    def __getitem__(self, k):\n+        return self._get_module(k)", "path": "torch/jit/__init__.py", "position": null, "original_position": 225, "commit_id": "50399284500538c5061b09ca43ce118e838d09db", "original_commit_id": "6699ca53212e7b5395c74cad71cd9b61fe0fdf63", "user": {"login": "apaszke", "id": 4583066, "node_id": "MDQ6VXNlcjQ1ODMwNjY=", "avatar_url": "https://avatars3.githubusercontent.com/u/4583066?v=4", "gravatar_id": "", "url": "https://api.github.com/users/apaszke", "html_url": "https://github.com/apaszke", "followers_url": "https://api.github.com/users/apaszke/followers", "following_url": "https://api.github.com/users/apaszke/following{/other_user}", "gists_url": "https://api.github.com/users/apaszke/gists{/gist_id}", "starred_url": "https://api.github.com/users/apaszke/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/apaszke/subscriptions", "organizations_url": "https://api.github.com/users/apaszke/orgs", "repos_url": "https://api.github.com/users/apaszke/repos", "events_url": "https://api.github.com/users/apaszke/events{/privacy}", "received_events_url": "https://api.github.com/users/apaszke/received_events", "type": "User", "site_admin": false}, "body": "Forgotten `.module`?", "created_at": "2018-03-16T10:22:50Z", "updated_at": "2018-11-23T15:40:50Z", "html_url": "https://github.com/pytorch/pytorch/pull/5769#discussion_r175047602", "pull_request_url": "https://api.github.com/repos/pytorch/pytorch/pulls/5769", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/175047602"}, "html": {"href": "https://github.com/pytorch/pytorch/pull/5769#discussion_r175047602"}, "pull_request": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/5769"}}, "body_html": "<p>Forgotten <code>.module</code>?</p>", "body_text": "Forgotten .module?"}