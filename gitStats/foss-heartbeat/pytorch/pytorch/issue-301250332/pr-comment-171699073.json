{"url": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/171699073", "pull_request_review_id": 100599515, "id": 171699073, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE3MTY5OTA3Mw==", "diff_hunk": "@@ -0,0 +1,91 @@\n+#include \"ATen/ATen.h\"\n+#include \"ATen/Dispatch.h\"\n+#include \"ATen/ExpandUtils.h\"\n+#include \"ATen/NativeFunctions.h\"\n+#include \"ATen/WrapDimUtils.h\"\n+#include \"ATen/cpu/cpuinfo/include/cpuinfo.h\"\n+#include \"cpu/ReduceOpsKernel.h\"\n+\n+#include <algorithm>\n+#include <functional>\n+#include <numeric>\n+#include <vector>\n+\n+#include <map>\n+\n+namespace at {\n+namespace native {\n+\n+sumallF sumallDispatch;\n+sumallF *sumall = &sumallDispatch;\n+void sumallDispatch(Tensor &result, const Tensor &self) {\n+  cpuinfo_initialize();\n+  sumall = &sumallNONE;\n+  if (cpuinfo_has_x86_avx()) {\n+    sumall = &sumallAVX;\n+  }\n+  if (cpuinfo_has_x86_avx2()) {\n+    sumall = &sumallAVX2;\n+  }\n+  return (*sumall)(result, self);\n+}\n+\n+reducesumF reducesumDispatch;\n+reducesumF *reducesum = &reducesumDispatch;\n+void reducesumDispatch(Tensor &result, const Tensor &self, size_t dim) {\n+  cpuinfo_initialize();\n+  reducesum = &reducesumNONE;\n+  if (cpuinfo_has_x86_avx()) {\n+    reducesum = &reducesumAVX;\n+  }\n+  if (cpuinfo_has_x86_avx2()) {\n+    reducesum = &reducesumAVX2;\n+  }\n+  return (*reducesum)(result, self, dim);\n+}", "path": "aten/src/ATen/native/ReduceOps.cpp", "position": null, "original_position": 45, "commit_id": "92e4e0671ee0326a1744e3b3b2c3c57694eae39d", "original_commit_id": "06ba5c4d25a59834104b22aa83f02566f5db7760", "user": {"login": "cpuhrsch", "id": 1716488, "node_id": "MDQ6VXNlcjE3MTY0ODg=", "avatar_url": "https://avatars1.githubusercontent.com/u/1716488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cpuhrsch", "html_url": "https://github.com/cpuhrsch", "followers_url": "https://api.github.com/users/cpuhrsch/followers", "following_url": "https://api.github.com/users/cpuhrsch/following{/other_user}", "gists_url": "https://api.github.com/users/cpuhrsch/gists{/gist_id}", "starred_url": "https://api.github.com/users/cpuhrsch/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cpuhrsch/subscriptions", "organizations_url": "https://api.github.com/users/cpuhrsch/orgs", "repos_url": "https://api.github.com/users/cpuhrsch/repos", "events_url": "https://api.github.com/users/cpuhrsch/events{/privacy}", "received_events_url": "https://api.github.com/users/cpuhrsch/received_events", "type": "User", "site_admin": false}, "body": "I'll also look into being able to get rid of manually specifying any of these suffixes. Ideally you'd just implement it using the macro and the only while that actually cares about the capabilities is vec256, unless you really want to care.", "created_at": "2018-03-01T21:28:05Z", "updated_at": "2018-11-23T15:40:14Z", "html_url": "https://github.com/pytorch/pytorch/pull/5481#discussion_r171699073", "pull_request_url": "https://api.github.com/repos/pytorch/pytorch/pulls/5481", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/171699073"}, "html": {"href": "https://github.com/pytorch/pytorch/pull/5481#discussion_r171699073"}, "pull_request": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/5481"}}, "body_html": "<p>I'll also look into being able to get rid of manually specifying any of these suffixes. Ideally you'd just implement it using the macro and the only while that actually cares about the capabilities is vec256, unless you really want to care.</p>", "body_text": "I'll also look into being able to get rid of manually specifying any of these suffixes. Ideally you'd just implement it using the macro and the only while that actually cares about the capabilities is vec256, unless you really want to care.", "in_reply_to_id": 171527929}