{"url": "https://api.github.com/repos/pytorch/pytorch/issues/comments/329361792", "html_url": "https://github.com/pytorch/pytorch/issues/2730#issuecomment-329361792", "issue_url": "https://api.github.com/repos/pytorch/pytorch/issues/2730", "id": 329361792, "node_id": "MDEyOklzc3VlQ29tbWVudDMyOTM2MTc5Mg==", "user": {"login": "ruotianluo", "id": 16023153, "node_id": "MDQ6VXNlcjE2MDIzMTUz", "avatar_url": "https://avatars2.githubusercontent.com/u/16023153?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ruotianluo", "html_url": "https://github.com/ruotianluo", "followers_url": "https://api.github.com/users/ruotianluo/followers", "following_url": "https://api.github.com/users/ruotianluo/following{/other_user}", "gists_url": "https://api.github.com/users/ruotianluo/gists{/gist_id}", "starred_url": "https://api.github.com/users/ruotianluo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ruotianluo/subscriptions", "organizations_url": "https://api.github.com/users/ruotianluo/orgs", "repos_url": "https://api.github.com/users/ruotianluo/repos", "events_url": "https://api.github.com/users/ruotianluo/events{/privacy}", "received_events_url": "https://api.github.com/users/ruotianluo/received_events", "type": "User", "site_admin": false}, "created_at": "2017-09-14T03:46:55Z", "updated_at": "2017-09-14T03:48:23Z", "author_association": "CONTRIBUTOR", "body_html": "<p>try this:</p>\n<pre><code>_x = Variable(torch.ones(10), requires_grad=True)\nx = _x.cuda()\ny = x * Variable(torch.linspace(1, 10, 10), requires_grad=False).cuda()\ny.backward(torch.ones(10).cuda())\nprint(x.grad)\nprint(_x.grad)\n</code></pre>\n<p>This is because x is an intermediate node.<br>\nAlternative is:</p>\n<pre><code>x = Variable(torch.ones(10).cuda(), requires_grad=True)\ny = x * Variable(torch.linspace(1, 10, 10), requires_grad=False).cuda()\ny.backward(torch.ones(10).cuda())\nprint(x.grad)\n</code></pre>", "body_text": "try this:\n_x = Variable(torch.ones(10), requires_grad=True)\nx = _x.cuda()\ny = x * Variable(torch.linspace(1, 10, 10), requires_grad=False).cuda()\ny.backward(torch.ones(10).cuda())\nprint(x.grad)\nprint(_x.grad)\n\nThis is because x is an intermediate node.\nAlternative is:\nx = Variable(torch.ones(10).cuda(), requires_grad=True)\ny = x * Variable(torch.linspace(1, 10, 10), requires_grad=False).cuda()\ny.backward(torch.ones(10).cuda())\nprint(x.grad)", "body": "try this:\r\n```\r\n_x = Variable(torch.ones(10), requires_grad=True)\r\nx = _x.cuda()\r\ny = x * Variable(torch.linspace(1, 10, 10), requires_grad=False).cuda()\r\ny.backward(torch.ones(10).cuda())\r\nprint(x.grad)\r\nprint(_x.grad)\r\n```\r\nThis is because x is an intermediate node.\r\nAlternative is:\r\n```\r\nx = Variable(torch.ones(10).cuda(), requires_grad=True)\r\ny = x * Variable(torch.linspace(1, 10, 10), requires_grad=False).cuda()\r\ny.backward(torch.ones(10).cuda())\r\nprint(x.grad)\r\n```"}