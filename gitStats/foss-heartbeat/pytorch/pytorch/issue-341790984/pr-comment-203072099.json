{"url": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/203072099", "pull_request_review_id": 137890667, "id": 203072099, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwMzA3MjA5OQ==", "diff_hunk": "@@ -136,6 +137,25 @@ def btriunpack(LU_data, LU_pivots, unpack_data=True, unpack_pivots=True):\n     return P, L, U\n \n \n+def isfinite(tensor):\n+    r\"\"\"Returns a new tensor with boolean elements representing if each element is `Finite` or not.\n+\n+    Arguments:\n+        tensor (Tensor): A tensor to check\n+\n+    Returns:\n+        Tensor: A ``torch.ByteTensor`` containing a 1 at each location of finite elements and 0 otherwise\n+\n+    Example::\n+\n+        >>> torch.isfinite(torch.Tensor([1, float('inf'), 2, float('-inf'), float('nan')]))\n+        tensor([ 1,  0,  1,  0,  0], dtype=torch.uint8)\n+    \"\"\"\n+    if not isinstance(tensor, torch.Tensor):\n+        raise ValueError(\"The argument is not a tensor\", str(tensor))\n+    return (isinf(tensor) | isnan(tensor)) == 0", "path": "torch/functional.py", "position": null, "original_position": 28, "commit_id": "287920cfa34fe33c1f36d62d5400cbdb53a651b0", "original_commit_id": "3bf735788f3b7a4dde57f5fdc36d5a3726a04ec1", "user": {"login": "SsnL", "id": 5674597, "node_id": "MDQ6VXNlcjU2NzQ1OTc=", "avatar_url": "https://avatars2.githubusercontent.com/u/5674597?v=4", "gravatar_id": "", "url": "https://api.github.com/users/SsnL", "html_url": "https://github.com/SsnL", "followers_url": "https://api.github.com/users/SsnL/followers", "following_url": "https://api.github.com/users/SsnL/following{/other_user}", "gists_url": "https://api.github.com/users/SsnL/gists{/gist_id}", "starred_url": "https://api.github.com/users/SsnL/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/SsnL/subscriptions", "organizations_url": "https://api.github.com/users/SsnL/orgs", "repos_url": "https://api.github.com/users/SsnL/repos", "events_url": "https://api.github.com/users/SsnL/events{/privacy}", "received_events_url": "https://api.github.com/users/SsnL/received_events", "type": "User", "site_admin": false}, "body": "This should be more efficient as `(tensor == tensor) & (tensor.abs() != math.inf)`.", "created_at": "2018-07-17T15:36:41Z", "updated_at": "2018-11-23T15:47:34Z", "html_url": "https://github.com/pytorch/pytorch/pull/9487#discussion_r203072099", "pull_request_url": "https://api.github.com/repos/pytorch/pytorch/pulls/9487", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/203072099"}, "html": {"href": "https://github.com/pytorch/pytorch/pull/9487#discussion_r203072099"}, "pull_request": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/9487"}}, "body_html": "<p>This should be more efficient as <code>(tensor == tensor) &amp; (tensor.abs() != math.inf)</code>.</p>", "body_text": "This should be more efficient as (tensor == tensor) & (tensor.abs() != math.inf)."}