{"url": "https://api.github.com/repos/pytorch/pytorch/issues/comments/370263454", "html_url": "https://github.com/pytorch/pytorch/pull/5547#issuecomment-370263454", "issue_url": "https://api.github.com/repos/pytorch/pytorch/issues/5547", "id": 370263454, "node_id": "MDEyOklzc3VlQ29tbWVudDM3MDI2MzQ1NA==", "user": {"login": "alshedivat", "id": 2126561, "node_id": "MDQ6VXNlcjIxMjY1NjE=", "avatar_url": "https://avatars3.githubusercontent.com/u/2126561?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alshedivat", "html_url": "https://github.com/alshedivat", "followers_url": "https://api.github.com/users/alshedivat/followers", "following_url": "https://api.github.com/users/alshedivat/following{/other_user}", "gists_url": "https://api.github.com/users/alshedivat/gists{/gist_id}", "starred_url": "https://api.github.com/users/alshedivat/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alshedivat/subscriptions", "organizations_url": "https://api.github.com/users/alshedivat/orgs", "repos_url": "https://api.github.com/users/alshedivat/repos", "events_url": "https://api.github.com/users/alshedivat/events{/privacy}", "received_events_url": "https://api.github.com/users/alshedivat/received_events", "type": "User", "site_admin": false}, "created_at": "2018-03-04T20:58:33Z", "updated_at": "2018-03-04T20:58:33Z", "author_association": "CONTRIBUTOR", "body_html": "<p><a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=23639302\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/vishwakftw\">@vishwakftw</a> Re: using existing transforms -- it is possible for the univariate logit-normal distribution, but not for the multivariate generalization. Basically, using <code>X = P(Y)</code> where <code>Y ~ Normal</code> and <code>P ~ Sigmoid</code> makes each component of <code>X</code> be an element of a 2-dim simplex. <code>InvertibleBoltzmannTransform</code> maps a <code>(D-1)</code>-dim vector onto a <code>D</code>-dim simplex (i.e., elements of <code>X</code> sum to 1).</p>\n<p>To avoid confusion, I'm thinking to rename the distribution to <code>LogisticNormal</code> (also consistent with the <a href=\"https://en.wikipedia.org/wiki/Logit-normal_distribution#Multivariate_generalization\" rel=\"nofollow\">wiki page</a>) and perhaps add <code>LogitNormal</code> as a separate one (implemented using the <code>Sigmoid</code> transform). Although, as <a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=4583066\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/apaszke\">@apaszke</a> mentioned, is it worth having separate distributions or better add only transforms? What are the current guidelines for this?</p>", "body_text": "@vishwakftw Re: using existing transforms -- it is possible for the univariate logit-normal distribution, but not for the multivariate generalization. Basically, using X = P(Y) where Y ~ Normal and P ~ Sigmoid makes each component of X be an element of a 2-dim simplex. InvertibleBoltzmannTransform maps a (D-1)-dim vector onto a D-dim simplex (i.e., elements of X sum to 1).\nTo avoid confusion, I'm thinking to rename the distribution to LogisticNormal (also consistent with the wiki page) and perhaps add LogitNormal as a separate one (implemented using the Sigmoid transform). Although, as @apaszke mentioned, is it worth having separate distributions or better add only transforms? What are the current guidelines for this?", "body": "@vishwakftw Re: using existing transforms -- it is possible for the univariate logit-normal distribution, but not for the multivariate generalization. Basically, using `X = P(Y)` where `Y ~ Normal` and `P ~ Sigmoid` makes each component of `X` be an element of a 2-dim simplex. `InvertibleBoltzmannTransform` maps a `(D-1)`-dim vector onto a `D`-dim simplex (i.e., elements of `X` sum to 1).\r\n\r\nTo avoid confusion, I'm thinking to rename the distribution to `LogisticNormal` (also consistent with the [wiki page](https://en.wikipedia.org/wiki/Logit-normal_distribution#Multivariate_generalization)) and perhaps add `LogitNormal` as a separate one (implemented using the `Sigmoid` transform). Although, as @apaszke mentioned, is it worth having separate distributions or better add only transforms? What are the current guidelines for this?"}