{"url": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/172080445", "pull_request_review_id": 101036344, "id": 172080445, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE3MjA4MDQ0NQ==", "diff_hunk": "@@ -412,6 +412,29 @@ def _inverse(self, y):\n         return probs.log()\n \n \n+class InvertableBoltzmannTransform(Transform):\n+    \"\"\"\n+    Transform from unconstrained space to the simplex via `y = [exp(x), 1]` and\n+    then normalizing. Note that dimensionality of `y.dim() == x.dim() + 1`.\n+    \"\"\"\n+    domain = constraints.real\n+    codomain = constraints.simplex\n+    event_dim = 1\n+\n+    def __eq__(self, other):\n+        return isinstance(other, InvertableBoltzmannTransform)\n+\n+    def _call(self, x):\n+        ones = torch.ones(*(x.size()[:-1] + (1, )))", "path": "torch/distributions/transforms.py", "position": null, "original_position": 17, "commit_id": "10377b822c64e8fc42893656f98451efaccc6559", "original_commit_id": "1ba3b1f9be364fd10c95cf6cedd689910a215cc8", "user": {"login": "alshedivat", "id": 2126561, "node_id": "MDQ6VXNlcjIxMjY1NjE=", "avatar_url": "https://avatars3.githubusercontent.com/u/2126561?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alshedivat", "html_url": "https://github.com/alshedivat", "followers_url": "https://api.github.com/users/alshedivat/followers", "following_url": "https://api.github.com/users/alshedivat/following{/other_user}", "gists_url": "https://api.github.com/users/alshedivat/gists{/gist_id}", "starred_url": "https://api.github.com/users/alshedivat/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alshedivat/subscriptions", "organizations_url": "https://api.github.com/users/alshedivat/orgs", "repos_url": "https://api.github.com/users/alshedivat/repos", "events_url": "https://api.github.com/users/alshedivat/events{/privacy}", "received_events_url": "https://api.github.com/users/alshedivat/received_events", "type": "User", "site_admin": false}, "body": "How about `probs = torch.nn.functional.pad(x.exp(), (0, 1), value=1.)` instead of lines 428-29?", "created_at": "2018-03-05T02:37:52Z", "updated_at": "2018-11-23T15:40:21Z", "html_url": "https://github.com/pytorch/pytorch/pull/5547#discussion_r172080445", "pull_request_url": "https://api.github.com/repos/pytorch/pytorch/pulls/5547", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/172080445"}, "html": {"href": "https://github.com/pytorch/pytorch/pull/5547#discussion_r172080445"}, "pull_request": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/5547"}}, "body_html": "<p>How about <code>probs = torch.nn.functional.pad(x.exp(), (0, 1), value=1.)</code> instead of lines 428-29?</p>", "body_text": "How about probs = torch.nn.functional.pad(x.exp(), (0, 1), value=1.) instead of lines 428-29?", "in_reply_to_id": 172062136}