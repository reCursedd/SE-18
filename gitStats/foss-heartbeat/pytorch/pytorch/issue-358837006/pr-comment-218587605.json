{"url": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/218587605", "pull_request_review_id": 156545187, "id": 218587605, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIxODU4NzYwNQ==", "diff_hunk": "@@ -28,13 +28,31 @@ static void check_cat_no_zero_dim(TensorList tensors) {\n Tensor & cat_out(Tensor & result, TensorList tensors, int64_t dim) {\n   check_cat_no_zero_dim(tensors);\n   dim = legacy_cat_wrap_dim(dim, tensors);\n-  return at::_cat_out(result, tensors, dim);\n+  return at::_cat_out(result, tensors, dim, false, 0);\n }\n \n Tensor cat(TensorList tensors, int64_t dim) {\n   check_cat_no_zero_dim(tensors);\n   dim = legacy_cat_wrap_dim(dim, tensors);\n-  return at::_cat(tensors, dim);\n+  return at::_cat(tensors, dim, false, 0);\n+}\n+\n+Tensor & cat_out(Tensor & result, TensorList tensors, int64_t dim, Scalar pad_value) {\n+  check_cat_no_zero_dim(tensors);\n+  dim = legacy_cat_wrap_dim(dim, tensors);\n+  if (std::isnan(pad_value.toFloat())){", "path": "aten/src/ATen/native/TensorShape.cpp", "position": null, "original_position": 18, "commit_id": "5b48bc2cd9a61cb81e09f008730bc096561a0e9a", "original_commit_id": "1b5bc9022927e486cba3b8d5bcd85de7d87b7e18", "user": {"login": "gchanan", "id": 3768583, "node_id": "MDQ6VXNlcjM3Njg1ODM=", "avatar_url": "https://avatars2.githubusercontent.com/u/3768583?v=4", "gravatar_id": "", "url": "https://api.github.com/users/gchanan", "html_url": "https://github.com/gchanan", "followers_url": "https://api.github.com/users/gchanan/followers", "following_url": "https://api.github.com/users/gchanan/following{/other_user}", "gists_url": "https://api.github.com/users/gchanan/gists{/gist_id}", "starred_url": "https://api.github.com/users/gchanan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/gchanan/subscriptions", "organizations_url": "https://api.github.com/users/gchanan/orgs", "repos_url": "https://api.github.com/users/gchanan/repos", "events_url": "https://api.github.com/users/gchanan/events{/privacy}", "received_events_url": "https://api.github.com/users/gchanan/received_events", "type": "User", "site_admin": false}, "body": "this check makes me a little nervous (it's probably actually fine), but I'd check that the scalar is a floatingPoint before converting it and checking if it's nan.", "created_at": "2018-09-18T20:43:03Z", "updated_at": "2018-11-23T15:51:37Z", "html_url": "https://github.com/pytorch/pytorch/pull/11494#discussion_r218587605", "pull_request_url": "https://api.github.com/repos/pytorch/pytorch/pulls/11494", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/218587605"}, "html": {"href": "https://github.com/pytorch/pytorch/pull/11494#discussion_r218587605"}, "pull_request": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/11494"}}, "body_html": "<p>this check makes me a little nervous (it's probably actually fine), but I'd check that the scalar is a floatingPoint before converting it and checking if it's nan.</p>", "body_text": "this check makes me a little nervous (it's probably actually fine), but I'd check that the scalar is a floatingPoint before converting it and checking if it's nan."}