{"url": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/223152160", "pull_request_review_id": 162219742, "id": 223152160, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIyMzE1MjE2MA==", "diff_hunk": "@@ -1989,6 +1989,16 @@ def test_cat_empty(self):\n                               lambda a, b: torch.cat((a, b)),\n                               True, f_args_variable, f_args_tensor)\n \n+    def test_cat_padding(self):\n+        f_args_variable = (torch.randn(1, 1, S, requires_grad=True),\n+                           torch.randn(2, 2, S, requires_grad=True),\n+                           torch.randn(3, 3, S, requires_grad=True),", "path": "test/test_autograd.py", "position": null, "original_position": 7, "commit_id": "5b48bc2cd9a61cb81e09f008730bc096561a0e9a", "original_commit_id": "679b3bb28b6479e114147027fbd52369c13d4aee", "user": {"login": "gchanan", "id": 3768583, "node_id": "MDQ6VXNlcjM3Njg1ODM=", "avatar_url": "https://avatars2.githubusercontent.com/u/3768583?v=4", "gravatar_id": "", "url": "https://api.github.com/users/gchanan", "html_url": "https://github.com/gchanan", "followers_url": "https://api.github.com/users/gchanan/followers", "following_url": "https://api.github.com/users/gchanan/following{/other_user}", "gists_url": "https://api.github.com/users/gchanan/gists{/gist_id}", "starred_url": "https://api.github.com/users/gchanan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/gchanan/subscriptions", "organizations_url": "https://api.github.com/users/gchanan/orgs", "repos_url": "https://api.github.com/users/gchanan/repos", "events_url": "https://api.github.com/users/gchanan/events{/privacy}", "received_events_url": "https://api.github.com/users/gchanan/received_events", "type": "User", "site_admin": false}, "body": "nit: it's better if you mix up the dimension sizes / which is the max.  e.g. something like:\r\n(1, 4)\r\n(2, 3)\r\n(3, 1)\r\nwould catch more potential bugs than your test here.", "created_at": "2018-10-05T22:20:16Z", "updated_at": "2018-11-23T15:52:28Z", "html_url": "https://github.com/pytorch/pytorch/pull/11494#discussion_r223152160", "pull_request_url": "https://api.github.com/repos/pytorch/pytorch/pulls/11494", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/223152160"}, "html": {"href": "https://github.com/pytorch/pytorch/pull/11494#discussion_r223152160"}, "pull_request": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/11494"}}, "body_html": "<p>nit: it's better if you mix up the dimension sizes / which is the max.  e.g. something like:<br>\n(1, 4)<br>\n(2, 3)<br>\n(3, 1)<br>\nwould catch more potential bugs than your test here.</p>", "body_text": "nit: it's better if you mix up the dimension sizes / which is the max.  e.g. something like:\n(1, 4)\n(2, 3)\n(3, 1)\nwould catch more potential bugs than your test here."}