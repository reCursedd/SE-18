{"url": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/220992490", "pull_request_review_id": 159533997, "id": 220992490, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIyMDk5MjQ5MA==", "diff_hunk": "@@ -740,11 +740,17 @@ def parse_kwargs(desc):\n \n add_docstr(torch.cat,\n            r\"\"\"\n-cat(seq, dim=0, out=None) -> Tensor\n+cat(seq, dim=0, pad_value=None, out=None) -> Tensor\n \n Concatenates the given sequence of :attr:`seq` tensors in the given dimension.\n-All tensors must either have the same shape (except in the concatenating\n-dimension) or be empty.\n+If pad_value is set to None, all tensors must have the same shape,\n+except in the dimension corresponding to :attr:`dim`.\n+If pad_value is set to a scalar, all tensors only need to have the same number\n+of dimensions.The size of the resulting tensor is the size of the sum of the\n+dimensions in the concatenating dimension, and the maximum of the\n+dimension sizes in all other dimensions. If an input tensor needs to be", "path": "torch/_torch_docs.py", "position": 15, "original_position": 15, "commit_id": "5b48bc2cd9a61cb81e09f008730bc096561a0e9a", "original_commit_id": "66efdc6c11a9705d9069ef91c210b405324487e1", "user": {"login": "zou3519", "id": 5652049, "node_id": "MDQ6VXNlcjU2NTIwNDk=", "avatar_url": "https://avatars3.githubusercontent.com/u/5652049?v=4", "gravatar_id": "", "url": "https://api.github.com/users/zou3519", "html_url": "https://github.com/zou3519", "followers_url": "https://api.github.com/users/zou3519/followers", "following_url": "https://api.github.com/users/zou3519/following{/other_user}", "gists_url": "https://api.github.com/users/zou3519/gists{/gist_id}", "starred_url": "https://api.github.com/users/zou3519/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/zou3519/subscriptions", "organizations_url": "https://api.github.com/users/zou3519/orgs", "repos_url": "https://api.github.com/users/zou3519/repos", "events_url": "https://api.github.com/users/zou3519/events{/privacy}", "received_events_url": "https://api.github.com/users/zou3519/received_events", "type": "User", "site_admin": false}, "body": "nit: it is probably nicer to give a mathematical example:\r\nwe're cat-ing tensors with size (x0, x1, ..., xn), (y0, y1, ..., yn)... ", "created_at": "2018-09-27T16:29:31Z", "updated_at": "2018-11-23T15:52:05Z", "html_url": "https://github.com/pytorch/pytorch/pull/11494#discussion_r220992490", "pull_request_url": "https://api.github.com/repos/pytorch/pytorch/pulls/11494", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/220992490"}, "html": {"href": "https://github.com/pytorch/pytorch/pull/11494#discussion_r220992490"}, "pull_request": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/11494"}}, "body_html": "<p>nit: it is probably nicer to give a mathematical example:<br>\nwe're cat-ing tensors with size (x0, x1, ..., xn), (y0, y1, ..., yn)...</p>", "body_text": "nit: it is probably nicer to give a mathematical example:\nwe're cat-ing tensors with size (x0, x1, ..., xn), (y0, y1, ..., yn)..."}