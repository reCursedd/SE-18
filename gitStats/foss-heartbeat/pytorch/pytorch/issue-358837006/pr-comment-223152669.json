{"url": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/223152669", "pull_request_review_id": 162219742, "id": 223152669, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIyMzE1MjY2OQ==", "diff_hunk": "@@ -740,11 +740,19 @@ def parse_kwargs(desc):\n \n add_docstr(torch.cat,\n            r\"\"\"\n-cat(seq, dim=0, out=None) -> Tensor\n+cat(seq, dim=0, pad_value=None, out=None) -> Tensor\n \n Concatenates the given sequence of :attr:`seq` tensors in the given dimension.\n-All tensors must either have the same shape (except in the concatenating\n-dimension) or be empty.\n+If pad_value is None, all tensors must have the same shape, except in the\n+dimension corresponding to :attr:`dim`.\n+If pad_value is not None (i.e. a scalar), all tensors only need to have the same\n+number of dimensions. The size of the resulting tensor is the size of the sum\n+of the dimensions sizes in the concatenating dimension, and the maximum of the\n+dimension sizes in all other dimensions. If an input tensor needs to be\n+logically expanded to fill out its place in the resulting tensor, it is\n+padded with :attr:pad_value. For example, if we cat tensors with size\n+(x0, x1, ..., xn) and (y0, y1, ..., yn) along 0 axis, the size of result tensor", "path": "torch/_torch_docs.py", "position": null, "original_position": 18, "commit_id": "5b48bc2cd9a61cb81e09f008730bc096561a0e9a", "original_commit_id": "679b3bb28b6479e114147027fbd52369c13d4aee", "user": {"login": "gchanan", "id": 3768583, "node_id": "MDQ6VXNlcjM3Njg1ODM=", "avatar_url": "https://avatars2.githubusercontent.com/u/3768583?v=4", "gravatar_id": "", "url": "https://api.github.com/users/gchanan", "html_url": "https://github.com/gchanan", "followers_url": "https://api.github.com/users/gchanan/followers", "following_url": "https://api.github.com/users/gchanan/following{/other_user}", "gists_url": "https://api.github.com/users/gchanan/gists{/gist_id}", "starred_url": "https://api.github.com/users/gchanan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/gchanan/subscriptions", "organizations_url": "https://api.github.com/users/gchanan/orgs", "repos_url": "https://api.github.com/users/gchanan/repos", "events_url": "https://api.github.com/users/gchanan/events{/privacy}", "received_events_url": "https://api.github.com/users/gchanan/received_events", "type": "User", "site_admin": false}, "body": "nit: \"dimension 0\" instead of \"0 axis\" and \"size of the result\" instead of \"size of result\".", "created_at": "2018-10-05T22:24:04Z", "updated_at": "2018-11-23T15:52:28Z", "html_url": "https://github.com/pytorch/pytorch/pull/11494#discussion_r223152669", "pull_request_url": "https://api.github.com/repos/pytorch/pytorch/pulls/11494", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/223152669"}, "html": {"href": "https://github.com/pytorch/pytorch/pull/11494#discussion_r223152669"}, "pull_request": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/11494"}}, "body_html": "<p>nit: \"dimension 0\" instead of \"0 axis\" and \"size of the result\" instead of \"size of result\".</p>", "body_text": "nit: \"dimension 0\" instead of \"0 axis\" and \"size of the result\" instead of \"size of result\"."}