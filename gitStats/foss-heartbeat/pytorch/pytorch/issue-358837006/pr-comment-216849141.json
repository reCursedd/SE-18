{"url": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/216849141", "pull_request_review_id": 154426825, "id": 216849141, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIxNjg0OTE0MQ==", "diff_hunk": "@@ -736,11 +736,16 @@ def parse_kwargs(desc):\n \n add_docstr(torch.cat,\n            r\"\"\"\n-cat(seq, dim=0, out=None) -> Tensor\n+cat(seq, dim=0, pad=False, pad_value=0, out=None) -> Tensor", "path": "torch/_torch_docs.py", "position": null, "original_position": 5, "commit_id": "5b48bc2cd9a61cb81e09f008730bc096561a0e9a", "original_commit_id": "c1fc2af620858d5e73f5ee08f3ee61d7942a0f28", "user": {"login": "gchanan", "id": 3768583, "node_id": "MDQ6VXNlcjM3Njg1ODM=", "avatar_url": "https://avatars2.githubusercontent.com/u/3768583?v=4", "gravatar_id": "", "url": "https://api.github.com/users/gchanan", "html_url": "https://github.com/gchanan", "followers_url": "https://api.github.com/users/gchanan/followers", "following_url": "https://api.github.com/users/gchanan/following{/other_user}", "gists_url": "https://api.github.com/users/gchanan/gists{/gist_id}", "starred_url": "https://api.github.com/users/gchanan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/gchanan/subscriptions", "organizations_url": "https://api.github.com/users/gchanan/orgs", "repos_url": "https://api.github.com/users/gchanan/repos", "events_url": "https://api.github.com/users/gchanan/events{/privacy}", "received_events_url": "https://api.github.com/users/gchanan/received_events", "type": "User", "site_admin": false}, "body": "that is a nicer public API.  It might be difficult to make it traceable because we don't have at::optional support in native_functions because it's not supported in the jit.  Presumably you'd have to write a (not exposed to python) native_function, then write your own binding to it in python_torch_functions.  But I'm not sure if that is jitable -- @apaszke do you know?", "created_at": "2018-09-11T22:52:23Z", "updated_at": "2018-11-23T15:51:05Z", "html_url": "https://github.com/pytorch/pytorch/pull/11494#discussion_r216849141", "pull_request_url": "https://api.github.com/repos/pytorch/pytorch/pulls/11494", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/216849141"}, "html": {"href": "https://github.com/pytorch/pytorch/pull/11494#discussion_r216849141"}, "pull_request": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/11494"}}, "body_html": "<p>that is a nicer public API.  It might be difficult to make it traceable because we don't have at::optional support in native_functions because it's not supported in the jit.  Presumably you'd have to write a (not exposed to python) native_function, then write your own binding to it in python_torch_functions.  But I'm not sure if that is jitable -- <a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=4583066\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/apaszke\">@apaszke</a> do you know?</p>", "body_text": "that is a nicer public API.  It might be difficult to make it traceable because we don't have at::optional support in native_functions because it's not supported in the jit.  Presumably you'd have to write a (not exposed to python) native_function, then write your own binding to it in python_torch_functions.  But I'm not sure if that is jitable -- @apaszke do you know?", "in_reply_to_id": 216745782}