{"url": "https://api.github.com/repos/pytorch/pytorch/issues/1931", "repository_url": "https://api.github.com/repos/pytorch/pytorch", "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/1931/labels{/name}", "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/1931/comments", "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/1931/events", "html_url": "https://github.com/pytorch/pytorch/pull/1931", "id": 239259309, "node_id": "MDExOlB1bGxSZXF1ZXN0MTI3OTkzMDIz", "number": 1931, "title": "Speed up torch.matmul for 3D+ x 2D/1D tensors", "user": {"login": "colesbury", "id": 655866, "node_id": "MDQ6VXNlcjY1NTg2Ng==", "avatar_url": "https://avatars1.githubusercontent.com/u/655866?v=4", "gravatar_id": "", "url": "https://api.github.com/users/colesbury", "html_url": "https://github.com/colesbury", "followers_url": "https://api.github.com/users/colesbury/followers", "following_url": "https://api.github.com/users/colesbury/following{/other_user}", "gists_url": "https://api.github.com/users/colesbury/gists{/gist_id}", "starred_url": "https://api.github.com/users/colesbury/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/colesbury/subscriptions", "organizations_url": "https://api.github.com/users/colesbury/orgs", "repos_url": "https://api.github.com/users/colesbury/repos", "events_url": "https://api.github.com/users/colesbury/events{/privacy}", "received_events_url": "https://api.github.com/users/colesbury/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2017-06-28T18:47:27Z", "updated_at": "2018-11-23T15:34:00Z", "closed_at": "2017-06-28T21:43:21Z", "author_association": "MEMBER", "pull_request": {"url": "https://api.github.com/repos/pytorch/pytorch/pulls/1931", "html_url": "https://github.com/pytorch/pytorch/pull/1931", "diff_url": "https://github.com/pytorch/pytorch/pull/1931.diff", "patch_url": "https://github.com/pytorch/pytorch/pull/1931.patch"}, "body_html": "<p>If the left tensor is 3D+ and the right tensor is at most 2D, we can<br>\nfold the batch into the matrix dimension and use <code>torch.mm</code> instead of<br>\n<code>torch.bmm</code>. In practice, this is faster especially if the right tensor is<br>\ncolumn major.</p>\n<p>See micro-benchmark at:<br>\n<a href=\"https://gist.github.com/colesbury/b230e68f548b72bef791685aad72db83\">https://gist.github.com/colesbury/b230e68f548b72bef791685aad72db83</a></p>", "body_text": "If the left tensor is 3D+ and the right tensor is at most 2D, we can\nfold the batch into the matrix dimension and use torch.mm instead of\ntorch.bmm. In practice, this is faster especially if the right tensor is\ncolumn major.\nSee micro-benchmark at:\nhttps://gist.github.com/colesbury/b230e68f548b72bef791685aad72db83", "body": "If the left tensor is 3D+ and the right tensor is at most 2D, we can\r\nfold the batch into the matrix dimension and use `torch.mm` instead of\r\n`torch.bmm`. In practice, this is faster especially if the right tensor is\r\ncolumn major.\r\n\r\nSee micro-benchmark at:\r\nhttps://gist.github.com/colesbury/b230e68f548b72bef791685aad72db83"}