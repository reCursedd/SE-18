{"url": "https://api.github.com/repos/pytorch/pytorch/issues/comments/383135702", "html_url": "https://github.com/pytorch/pytorch/issues/6623#issuecomment-383135702", "issue_url": "https://api.github.com/repos/pytorch/pytorch/issues/6623", "id": 383135702, "node_id": "MDEyOklzc3VlQ29tbWVudDM4MzEzNTcwMg==", "user": {"login": "stefanwebb", "id": 4926302, "node_id": "MDQ6VXNlcjQ5MjYzMDI=", "avatar_url": "https://avatars3.githubusercontent.com/u/4926302?v=4", "gravatar_id": "", "url": "https://api.github.com/users/stefanwebb", "html_url": "https://github.com/stefanwebb", "followers_url": "https://api.github.com/users/stefanwebb/followers", "following_url": "https://api.github.com/users/stefanwebb/following{/other_user}", "gists_url": "https://api.github.com/users/stefanwebb/gists{/gist_id}", "starred_url": "https://api.github.com/users/stefanwebb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/stefanwebb/subscriptions", "organizations_url": "https://api.github.com/users/stefanwebb/orgs", "repos_url": "https://api.github.com/users/stefanwebb/repos", "events_url": "https://api.github.com/users/stefanwebb/events{/privacy}", "received_events_url": "https://api.github.com/users/stefanwebb/received_events", "type": "User", "site_admin": false}, "created_at": "2018-04-20T15:37:24Z", "updated_at": "2018-04-20T15:37:24Z", "author_association": "NONE", "body_html": "<p>I think this is a more serious problem. I am trying to implement my own PyTorch distribution for the exponential concrete distribution but am running into the same problem. When I add together two expressions in the <code>.log_prob</code> function that are on the GPU it gives a segmentation fault:</p>\n<blockquote>\n<p>log_norm_const = lgamma(k) + (k - 1.) * torch.log(self.temperature)<br>\nlog_softmax = torch.nn.LogSoftmax(dim=-1)(self.logits - value * self.temperature)<br>\nlog_prob = log_norm_const + log_softmax</p>\n</blockquote>\n<p>But if I combine them into a single statement it is okay:</p>\n<blockquote>\n<p>log_softmax = torch.nn.LogSoftmax(dim=-1)(self.logits - value * self.temperature) + lgamma(k) + (k - 1.) * torch.log(self.temperature)</p>\n</blockquote>", "body_text": "I think this is a more serious problem. I am trying to implement my own PyTorch distribution for the exponential concrete distribution but am running into the same problem. When I add together two expressions in the .log_prob function that are on the GPU it gives a segmentation fault:\n\nlog_norm_const = lgamma(k) + (k - 1.) * torch.log(self.temperature)\nlog_softmax = torch.nn.LogSoftmax(dim=-1)(self.logits - value * self.temperature)\nlog_prob = log_norm_const + log_softmax\n\nBut if I combine them into a single statement it is okay:\n\nlog_softmax = torch.nn.LogSoftmax(dim=-1)(self.logits - value * self.temperature) + lgamma(k) + (k - 1.) * torch.log(self.temperature)", "body": "I think this is a more serious problem. I am trying to implement my own PyTorch distribution for the exponential concrete distribution but am running into the same problem. When I add together two expressions in the `.log_prob` function that are on the GPU it gives a segmentation fault:\r\n\r\n> log_norm_const = lgamma(k) + (k - 1.) * torch.log(self.temperature)\r\nlog_softmax = torch.nn.LogSoftmax(dim=-1)(self.logits - value * self.temperature)\r\nlog_prob = log_norm_const + log_softmax\r\n\r\nBut if I combine them into a single statement it is okay:\r\n\r\n> log_softmax = torch.nn.LogSoftmax(dim=-1)(self.logits - value * self.temperature) + lgamma(k) + (k - 1.) * torch.log(self.temperature)"}