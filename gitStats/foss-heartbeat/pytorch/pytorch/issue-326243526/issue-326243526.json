{"url": "https://api.github.com/repos/pytorch/pytorch/issues/7816", "repository_url": "https://api.github.com/repos/pytorch/pytorch", "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/7816/labels{/name}", "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/7816/comments", "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/7816/events", "html_url": "https://github.com/pytorch/pytorch/pull/7816", "id": 326243526, "node_id": "MDExOlB1bGxSZXF1ZXN0MTkwMzgzNTI1", "number": 7816, "title": "move Subset, random_split to data, use sequence at some places.", "user": {"login": "zasdfgbnm", "id": 1032377, "node_id": "MDQ6VXNlcjEwMzIzNzc=", "avatar_url": "https://avatars2.githubusercontent.com/u/1032377?v=4", "gravatar_id": "", "url": "https://api.github.com/users/zasdfgbnm", "html_url": "https://github.com/zasdfgbnm", "followers_url": "https://api.github.com/users/zasdfgbnm/followers", "following_url": "https://api.github.com/users/zasdfgbnm/following{/other_user}", "gists_url": "https://api.github.com/users/zasdfgbnm/gists{/gist_id}", "starred_url": "https://api.github.com/users/zasdfgbnm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/zasdfgbnm/subscriptions", "organizations_url": "https://api.github.com/users/zasdfgbnm/orgs", "repos_url": "https://api.github.com/users/zasdfgbnm/repos", "events_url": "https://api.github.com/users/zasdfgbnm/events{/privacy}", "received_events_url": "https://api.github.com/users/zasdfgbnm/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2018-05-24T18:41:46Z", "updated_at": "2018-05-25T14:39:50Z", "closed_at": "2018-05-25T10:50:51Z", "author_association": "CONTRIBUTOR", "pull_request": {"url": "https://api.github.com/repos/pytorch/pytorch/pulls/7816", "html_url": "https://github.com/pytorch/pytorch/pull/7816", "diff_url": "https://github.com/pytorch/pytorch/pull/7816.diff", "patch_url": "https://github.com/pytorch/pytorch/pull/7816.patch"}, "body_html": "<p>This PR propose the following changes:</p>\n<ol>\n<li>Move <code>torch.utils.data.dataset.random_split</code> to <code>torch.utils.data.random_split</code>.</li>\n<li>Move <code>torch.utils.data.dataset.Subset</code> to <code>torch.utils.data.Subset</code>.</li>\n<li>Add docstring for Subset and expose it.</li>\n<li>Change some wording from 'iterable' and 'list' to 'sequence'.</li>\n</ol>\n<p>Note:<br>\nThe relationship between iterable and sequence is stated at <a href=\"https://docs.python.org/3/glossary.html#term-sequence\" rel=\"nofollow\">python#term-sequence</a>:</p>\n<blockquote>\n<p>(A sequence is) an iterable which supports efficient element access using integer indices via the <code>__getitem__()</code> special method and defines a <code>__len__()</code> method that returns the length of the sequence.</p>\n</blockquote>", "body_text": "This PR propose the following changes:\n\nMove torch.utils.data.dataset.random_split to torch.utils.data.random_split.\nMove torch.utils.data.dataset.Subset to torch.utils.data.Subset.\nAdd docstring for Subset and expose it.\nChange some wording from 'iterable' and 'list' to 'sequence'.\n\nNote:\nThe relationship between iterable and sequence is stated at python#term-sequence:\n\n(A sequence is) an iterable which supports efficient element access using integer indices via the __getitem__() special method and defines a __len__() method that returns the length of the sequence.", "body": "This PR propose the following changes:\r\n1. Move `torch.utils.data.dataset.random_split` to `torch.utils.data.random_split`.\r\n2. Move `torch.utils.data.dataset.Subset` to `torch.utils.data.Subset`.\r\n3. Add docstring for Subset and expose it.\r\n4. Change some wording from 'iterable' and 'list' to 'sequence'.\r\n\r\nNote:\r\nThe relationship between iterable and sequence is stated at [python#term-sequence](https://docs.python.org/3/glossary.html#term-sequence):\r\n\r\n> (A sequence is) an iterable which supports efficient element access using integer indices via the `__getitem__()` special method and defines a `__len__()` method that returns the length of the sequence."}