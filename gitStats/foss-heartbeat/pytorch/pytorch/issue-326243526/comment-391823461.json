{"url": "https://api.github.com/repos/pytorch/pytorch/issues/comments/391823461", "html_url": "https://github.com/pytorch/pytorch/pull/7816#issuecomment-391823461", "issue_url": "https://api.github.com/repos/pytorch/pytorch/issues/7816", "id": 391823461, "node_id": "MDEyOklzc3VlQ29tbWVudDM5MTgyMzQ2MQ==", "user": {"login": "zasdfgbnm", "id": 1032377, "node_id": "MDQ6VXNlcjEwMzIzNzc=", "avatar_url": "https://avatars2.githubusercontent.com/u/1032377?v=4", "gravatar_id": "", "url": "https://api.github.com/users/zasdfgbnm", "html_url": "https://github.com/zasdfgbnm", "followers_url": "https://api.github.com/users/zasdfgbnm/followers", "following_url": "https://api.github.com/users/zasdfgbnm/following{/other_user}", "gists_url": "https://api.github.com/users/zasdfgbnm/gists{/gist_id}", "starred_url": "https://api.github.com/users/zasdfgbnm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/zasdfgbnm/subscriptions", "organizations_url": "https://api.github.com/users/zasdfgbnm/orgs", "repos_url": "https://api.github.com/users/zasdfgbnm/repos", "events_url": "https://api.github.com/users/zasdfgbnm/events{/privacy}", "received_events_url": "https://api.github.com/users/zasdfgbnm/received_events", "type": "User", "site_admin": false}, "created_at": "2018-05-24T18:59:00Z", "updated_at": "2018-05-24T18:59:00Z", "author_association": "CONTRIBUTOR", "body_html": "<p>Some quick experiments:</p>\n<div class=\"highlight highlight-source-python\"><pre><span class=\"pl-k\">import</span> collections\nf <span class=\"pl-k\">=</span> <span class=\"pl-c1\">open</span>(<span class=\"pl-s\"><span class=\"pl-pds\">'</span>examples.desktop<span class=\"pl-pds\">'</span></span>)\n<span class=\"pl-c1\">print</span>(<span class=\"pl-c1\">isinstance</span>(f, collections.Iterable))\n<span class=\"pl-c1\">print</span>(<span class=\"pl-c1\">isinstance</span>(f, collections.Sequence))\nf[<span class=\"pl-c1\">0</span>]</pre></div>\n<p>gives</p>\n<pre><code>True\nFalse\nTraceback (most recent call last):\n  File \"iterable-vs-sequence.py\", line 5, in &lt;module&gt;\n    f[0]\nTypeError: '_io.TextIOWrapper' object is not subscriptable\n</code></pre>\n<p>And</p>\n<div class=\"highlight highlight-source-python\"><pre><span class=\"pl-k\">import</span> torch\n<span class=\"pl-k\">class</span> <span class=\"pl-en\">A</span>:\n\t<span class=\"pl-k\">def</span> <span class=\"pl-c1\">__getitem__</span>(<span class=\"pl-smi\"><span class=\"pl-smi\">self</span></span>,<span class=\"pl-smi\">idx</span>):\n\t\t<span class=\"pl-k\">if</span> idx <span class=\"pl-k\">==</span> <span class=\"pl-c1\">0</span>:\n\t\t\t<span class=\"pl-k\">return</span> <span class=\"pl-c1\">0</span>\n\t\t<span class=\"pl-k\">elif</span> idx <span class=\"pl-k\">==</span> <span class=\"pl-c1\">1</span>:\n\t\t\t<span class=\"pl-k\">return</span> <span class=\"pl-c1\">1</span>\n\t\t<span class=\"pl-k\">else</span>:\n\t\t\t<span class=\"pl-k\">raise</span> <span class=\"pl-c1\">IndexError</span>(<span class=\"pl-s\"><span class=\"pl-pds\">'</span>index out of range<span class=\"pl-pds\">'</span></span>)\n\t<span class=\"pl-k\">def</span> <span class=\"pl-c1\">__len__</span>(<span class=\"pl-smi\"><span class=\"pl-smi\">self</span></span>):\n\t\t<span class=\"pl-k\">return</span> <span class=\"pl-c1\">2</span>\n\n<span class=\"pl-c1\">print</span>(torch.tensor(A()))</pre></div>\n<p>gives</p>\n<pre><code>tensor([ 0,  1])\n</code></pre>", "body_text": "Some quick experiments:\nimport collections\nf = open('examples.desktop')\nprint(isinstance(f, collections.Iterable))\nprint(isinstance(f, collections.Sequence))\nf[0]\ngives\nTrue\nFalse\nTraceback (most recent call last):\n  File \"iterable-vs-sequence.py\", line 5, in <module>\n    f[0]\nTypeError: '_io.TextIOWrapper' object is not subscriptable\n\nAnd\nimport torch\nclass A:\n\tdef __getitem__(self,idx):\n\t\tif idx == 0:\n\t\t\treturn 0\n\t\telif idx == 1:\n\t\t\treturn 1\n\t\telse:\n\t\t\traise IndexError('index out of range')\n\tdef __len__(self):\n\t\treturn 2\n\nprint(torch.tensor(A()))\ngives\ntensor([ 0,  1])", "body": "Some quick experiments:\r\n```python\r\nimport collections\r\nf = open('examples.desktop')\r\nprint(isinstance(f, collections.Iterable))\r\nprint(isinstance(f, collections.Sequence))\r\nf[0]\r\n```\r\ngives\r\n```\r\nTrue\r\nFalse\r\nTraceback (most recent call last):\r\n  File \"iterable-vs-sequence.py\", line 5, in <module>\r\n    f[0]\r\nTypeError: '_io.TextIOWrapper' object is not subscriptable\r\n```\r\n\r\nAnd\r\n```python\r\nimport torch\r\nclass A:\r\n\tdef __getitem__(self,idx):\r\n\t\tif idx == 0:\r\n\t\t\treturn 0\r\n\t\telif idx == 1:\r\n\t\t\treturn 1\r\n\t\telse:\r\n\t\t\traise IndexError('index out of range')\r\n\tdef __len__(self):\r\n\t\treturn 2\r\n\r\nprint(torch.tensor(A()))\r\n```\r\ngives\r\n```\r\ntensor([ 0,  1])\r\n```"}