{"url": "https://api.github.com/repos/pytorch/pytorch/issues/9080", "repository_url": "https://api.github.com/repos/pytorch/pytorch", "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/9080/labels{/name}", "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/9080/comments", "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/9080/events", "html_url": "https://github.com/pytorch/pytorch/pull/9080", "id": 337307945, "node_id": "MDExOlB1bGxSZXF1ZXN0MTk4NTM0MzU3", "number": 9080, "title": "[EASY] Use a static random_device in StorageSharing", "user": {"login": "apaszke", "id": 4583066, "node_id": "MDQ6VXNlcjQ1ODMwNjY=", "avatar_url": "https://avatars3.githubusercontent.com/u/4583066?v=4", "gravatar_id": "", "url": "https://api.github.com/users/apaszke", "html_url": "https://github.com/apaszke", "followers_url": "https://api.github.com/users/apaszke/followers", "following_url": "https://api.github.com/users/apaszke/following{/other_user}", "gists_url": "https://api.github.com/users/apaszke/gists{/gist_id}", "starred_url": "https://api.github.com/users/apaszke/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/apaszke/subscriptions", "organizations_url": "https://api.github.com/users/apaszke/orgs", "repos_url": "https://api.github.com/users/apaszke/repos", "events_url": "https://api.github.com/users/apaszke/events{/privacy}", "received_events_url": "https://api.github.com/users/apaszke/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2018-07-01T17:35:49Z", "updated_at": "2018-07-06T14:40:56Z", "closed_at": "2018-07-06T14:40:56Z", "author_association": "MEMBER", "pull_request": {"url": "https://api.github.com/repos/pytorch/pytorch/pulls/9080", "html_url": "https://github.com/pytorch/pytorch/pull/9080", "diff_url": "https://github.com/pytorch/pytorch/pull/9080.diff", "patch_url": "https://github.com/pytorch/pytorch/pull/9080.patch"}, "body_html": "<p>I've been cleaning up my email notifications, and noticed that this PR used a stack-allocated <code>random_device</code>. This is generally a bad idea due to this sentence from the C++ reference (emphasis mine):</p>\n<blockquote>\n<p><code>std::random_device</code> may be implemented in terms of an implementation-defined pseudo-random number engine if a non-deterministic source (e.g. a hardware device) is not available to the implementation. <strong>In this case each <code>std::random_device</code> object may generate the same number sequence.</strong></p>\n</blockquote>\n<p>If this is how this object is implemented, then this <code>rd()</code> call will give the same result at every call.</p>\n<p>cc <a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=4063635\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/yf225\">@yf225</a></p>", "body_text": "I've been cleaning up my email notifications, and noticed that this PR used a stack-allocated random_device. This is generally a bad idea due to this sentence from the C++ reference (emphasis mine):\n\nstd::random_device may be implemented in terms of an implementation-defined pseudo-random number engine if a non-deterministic source (e.g. a hardware device) is not available to the implementation. In this case each std::random_device object may generate the same number sequence.\n\nIf this is how this object is implemented, then this rd() call will give the same result at every call.\ncc @yf225", "body": "I've been cleaning up my email notifications, and noticed that this PR used a stack-allocated `random_device`. This is generally a bad idea due to this sentence from the C++ reference (emphasis mine):\r\n\r\n> `std::random_device` may be implemented in terms of an implementation-defined pseudo-random number engine if a non-deterministic source (e.g. a hardware device) is not available to the implementation. **In this case each `std::random_device` object may generate the same number sequence.**\r\n\r\nIf this is how this object is implemented, then this `rd()` call will give the same result at every call.\r\n\r\ncc @yf225 "}