{"url": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/209982340", "pull_request_review_id": 146102157, "id": 209982340, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwOTk4MjM0MA==", "diff_hunk": "@@ -0,0 +1,108 @@\n+import torch\n+\n+\n+class SobolEngine(object):\n+    \"\"\"\n+    The ``SobolEngine`` is an engine for generating (scrambled) Sobol sequences.\n+    Sobol sequences are an example of low discrepancy quasi-random sequences.\n+\n+    This implementation of an engine for Sobol sequences is capable of sampling sequences up to\n+    a maximum dimension of 1111. It uses direction numbers to generate these sequences, and these\n+    numbers have been adapted from `here <http://web.maths.unsw.edu.au/~fkuo/sobol/joe-kuo-old.1111>`_.\n+\n+    References:\n+      - Art B. Owen. Scrambling Sobol and Niederreiter-Xing points. Journal of\n+        Complexity, 14(4):466-489, December 1998.\n+\n+      - I. M. Sobol. The distribution of points in a cube and the accurate\n+        evaluation of integrals. Zh. Vychisl. Mat. i Mat. Phys., 7:784-802, 1967.\n+\n+    Args:\n+        dimension (Int): The dimensionality of the sequence to be drawn\n+        scramble (bool, optional): Setting this to ``True`` will produce scrambled Sobol sequences.\n+                                   Scrambling is capable of producing better Sobol sequences.\n+                                   Default: ``False``.\n+        seed (Int, optional): This is the seed for the scrambling. The seed of the random number\n+                              generator is set to this, if specified. Default: ``None``\n+\n+    Examples::\n+\n+        >>> soboleng = torch.quasirandom.SobolEngine(dimension=5, scramble=False)\n+        >>> soboleng.draw(3)\n+        tensor([[0.5000, 0.5000, 0.5000, 0.5000, 0.5000],\n+                [0.7500, 0.2500, 0.7500, 0.2500, 0.7500],\n+                [0.2500, 0.7500, 0.2500, 0.7500, 0.2500]])\n+    \"\"\"\n+    MAXBIT = 30\n+\n+    def __init__(self, dimension, scramble=False, seed=None):\n+        if dimension > 1111 or dimension < 1:\n+            raise ValueError(\"Supported range of dimensionality for SobolEngine is [1, 1111]\")\n+\n+        self.seed = seed\n+        self.scramble = scramble\n+        self.dimension = dimension\n+\n+        self.sobolstate = torch._sobol_engine_initialize_state(torch.zeros(dimension, self.MAXBIT, dtype=torch.long),\n+                                                               self.dimension)\n+\n+        if self.scramble:\n+            g = torch.Generator()\n+            if self.seed is not None:\n+                g.manual_seed(self.seed)\n+\n+            self.shift = torch.mv(torch.randint(2, (self.dimension, self.MAXBIT), dtype=torch.float, generator=g),", "path": "torch/quasirandom.py", "position": 57, "original_position": 54, "commit_id": "fca2445f6c70ee50686c1d54fae1d10013f80ef7", "original_commit_id": "6ef3ed9687e75679cab3aee2ddf8759c8e15c7da", "user": {"login": "vishwakftw", "id": 23639302, "node_id": "MDQ6VXNlcjIzNjM5MzAy", "avatar_url": "https://avatars2.githubusercontent.com/u/23639302?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vishwakftw", "html_url": "https://github.com/vishwakftw", "followers_url": "https://api.github.com/users/vishwakftw/followers", "following_url": "https://api.github.com/users/vishwakftw/following{/other_user}", "gists_url": "https://api.github.com/users/vishwakftw/gists{/gist_id}", "starred_url": "https://api.github.com/users/vishwakftw/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vishwakftw/subscriptions", "organizations_url": "https://api.github.com/users/vishwakftw/orgs", "repos_url": "https://api.github.com/users/vishwakftw/repos", "events_url": "https://api.github.com/users/vishwakftw/events{/privacy}", "received_events_url": "https://api.github.com/users/vishwakftw/received_events", "type": "User", "site_admin": false}, "body": "Isn't `torch.randint` supposed to be returning an `int` by virtue of its name?", "created_at": "2018-08-14T14:50:50Z", "updated_at": "2018-11-23T15:49:16Z", "html_url": "https://github.com/pytorch/pytorch/pull/10505#discussion_r209982340", "pull_request_url": "https://api.github.com/repos/pytorch/pytorch/pulls/10505", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/209982340"}, "html": {"href": "https://github.com/pytorch/pytorch/pull/10505#discussion_r209982340"}, "pull_request": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/10505"}}, "body_html": "<p>Isn't <code>torch.randint</code> supposed to be returning an <code>int</code> by virtue of its name?</p>", "body_text": "Isn't torch.randint supposed to be returning an int by virtue of its name?"}