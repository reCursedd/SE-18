{"url": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/212310448", "pull_request_review_id": 148912504, "id": 212310448, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIxMjMxMDQ0OA==", "diff_hunk": "@@ -0,0 +1,192 @@\n+#include \"ATen/native/cpu/ReduceOpsKernel.h\"\n+\n+#include <numeric>\n+#include <iterator>\n+#include <algorithm>\n+\n+#include \"ATen/Dispatch.h\"\n+#include \"ATen/Parallel.h\"\n+#include \"ATen/core/optional.h\"\n+#include \"ATen/cpu/vec256/vec256.h\"\n+\n+namespace at { namespace native { namespace {\n+\n+template<typename scalar_t>\n+struct PDist {\n+\n+  static inline scalar_t sign(scalar_t val) {\n+    return (0 < val) - (val < 0);\n+  }\n+\n+  static scalar_t zdist_calc(const scalar_t * a, const scalar_t * b, const int64_t size, const int64_t stride, const double p) {\n+    scalar_t result = 0.0;\n+    for (int64_t i = 0; i != size; i += 1, a += stride, b += stride) {\n+      result += *a != *b;\n+    }\n+    return result;\n+  }\n+\n+  static scalar_t odist_calc(const scalar_t * a, const scalar_t * b, const int64_t size, const int64_t stride, const double p) {\n+    scalar_t result = 0.0;\n+    for (int64_t i = 0; i != size; i += 1, a += stride, b += stride) {\n+      result += std::abs(*a - *b);\n+    }\n+    return result;\n+  }\n+\n+  static scalar_t tdist_calc(const scalar_t * a, const scalar_t * b, const int64_t size, const int64_t stride, const double p) {\n+    scalar_t result = 0.0;\n+    for (int64_t i = 0; i != size; i += 1, a += stride, b += stride) {\n+      scalar_t diff = *a - *b;\n+      result += diff * diff;\n+    }\n+    return std::sqrt(result);\n+  }\n+\n+  static scalar_t pdist_calc(const scalar_t * a, const scalar_t * b, const int64_t size, const int64_t stride, const double p) {\n+    scalar_t result = 0.0;\n+    for (int64_t i = 0; i != size; i += 1, a += stride, b += stride) {\n+      result += std::pow(std::abs(*a - *b), p);\n+    }\n+    return std::pow(result, 1.0 / p);\n+  }\n+\n+  static scalar_t idist_calc(const scalar_t * a, const scalar_t * b, const int64_t size, const int64_t stride, const double p) {\n+    scalar_t result = 0.0;", "path": "aten/src/ATen/native/cpu/DistanceOpsKernel.cpp", "position": null, "original_position": 55, "commit_id": "0d26aa6f1e62e3c44da085ecff3f94883cb56d21", "original_commit_id": "e909ffa248ae82915ab3ce7cff4efd1ca0b1662e", "user": {"login": "erikbrinkman", "id": 858926, "node_id": "MDQ6VXNlcjg1ODkyNg==", "avatar_url": "https://avatars1.githubusercontent.com/u/858926?v=4", "gravatar_id": "", "url": "https://api.github.com/users/erikbrinkman", "html_url": "https://github.com/erikbrinkman", "followers_url": "https://api.github.com/users/erikbrinkman/followers", "following_url": "https://api.github.com/users/erikbrinkman/following{/other_user}", "gists_url": "https://api.github.com/users/erikbrinkman/gists{/gist_id}", "starred_url": "https://api.github.com/users/erikbrinkman/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/erikbrinkman/subscriptions", "organizations_url": "https://api.github.com/users/erikbrinkman/orgs", "repos_url": "https://api.github.com/users/erikbrinkman/repos", "events_url": "https://api.github.com/users/erikbrinkman/events{/privacy}", "received_events_url": "https://api.github.com/users/erikbrinkman/received_events", "type": "User", "site_admin": false}, "body": "Yeah. I need to add a check that p must be in [0, inf]", "created_at": "2018-08-23T13:34:26Z", "updated_at": "2018-11-23T15:49:49Z", "html_url": "https://github.com/pytorch/pytorch/pull/10782#discussion_r212310448", "pull_request_url": "https://api.github.com/repos/pytorch/pytorch/pulls/10782", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/212310448"}, "html": {"href": "https://github.com/pytorch/pytorch/pull/10782#discussion_r212310448"}, "pull_request": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/10782"}}, "body_html": "<p>Yeah. I need to add a check that p must be in [0, inf]</p>", "body_text": "Yeah. I need to add a check that p must be in [0, inf]", "in_reply_to_id": 212135503}