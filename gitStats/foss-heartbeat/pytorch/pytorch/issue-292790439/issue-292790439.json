{"url": "https://api.github.com/repos/pytorch/pytorch/issues/4936", "repository_url": "https://api.github.com/repos/pytorch/pytorch", "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/4936/labels{/name}", "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/4936/comments", "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/4936/events", "html_url": "https://github.com/pytorch/pytorch/pull/4936", "id": 292790439, "node_id": "MDExOlB1bGxSZXF1ZXN0MTY1OTg2NjU1", "number": 4936, "title": "Make torch.cuda.empty_cache() a no-op when cuda is not initialized", "user": {"login": "albanD", "id": 6359743, "node_id": "MDQ6VXNlcjYzNTk3NDM=", "avatar_url": "https://avatars3.githubusercontent.com/u/6359743?v=4", "gravatar_id": "", "url": "https://api.github.com/users/albanD", "html_url": "https://github.com/albanD", "followers_url": "https://api.github.com/users/albanD/followers", "following_url": "https://api.github.com/users/albanD/following{/other_user}", "gists_url": "https://api.github.com/users/albanD/gists{/gist_id}", "starred_url": "https://api.github.com/users/albanD/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/albanD/subscriptions", "organizations_url": "https://api.github.com/users/albanD/orgs", "repos_url": "https://api.github.com/users/albanD/repos", "events_url": "https://api.github.com/users/albanD/events{/privacy}", "received_events_url": "https://api.github.com/users/albanD/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 825466279, "node_id": "MDU6TGFiZWw4MjU0NjYyNzk=", "url": "https://api.github.com/repos/pytorch/pytorch/labels/0.3.1", "name": "0.3.1", "color": "aefcae", "default": false}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2018-01-30T13:53:36Z", "updated_at": "2018-02-05T22:22:38Z", "closed_at": "2018-01-30T15:22:17Z", "author_association": "COLLABORATOR", "pull_request": {"url": "https://api.github.com/repos/pytorch/pytorch/pulls/4936", "html_url": "https://github.com/pytorch/pytorch/pull/4936", "diff_url": "https://github.com/pytorch/pytorch/pull/4936.diff", "patch_url": "https://github.com/pytorch/pytorch/pull/4936.patch"}, "body_html": "<p>cc: <a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=15841449\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/ngimel\">@ngimel</a> <a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=4583066\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/apaszke\">@apaszke</a></p>\n<p><code>current_blas_handle()</code> still calls <code>_lazy_init()</code> as all the <code>current_*()</code> functions that return something corresponding to the currently set device.</p>", "body_text": "cc: @ngimel @apaszke\ncurrent_blas_handle() still calls _lazy_init() as all the current_*() functions that return something corresponding to the currently set device.", "body": "cc: @ngimel @apaszke \r\n\r\n`current_blas_handle()` still calls `_lazy_init()` as all the `current_*()` functions that return something corresponding to the currently set device."}