{"url": "https://api.github.com/repos/pytorch/pytorch/issues/11979", "repository_url": "https://api.github.com/repos/pytorch/pytorch", "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/11979/labels{/name}", "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/11979/comments", "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/11979/events", "html_url": "https://github.com/pytorch/pytorch/issues/11979", "id": 362879174, "node_id": "MDU6SXNzdWUzNjI4NzkxNzQ=", "number": 11979, "title": "torch.nn.DataParallel not working", "user": {"login": "nkolot", "id": 31786013, "node_id": "MDQ6VXNlcjMxNzg2MDEz", "avatar_url": "https://avatars3.githubusercontent.com/u/31786013?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nkolot", "html_url": "https://github.com/nkolot", "followers_url": "https://api.github.com/users/nkolot/followers", "following_url": "https://api.github.com/users/nkolot/following{/other_user}", "gists_url": "https://api.github.com/users/nkolot/gists{/gist_id}", "starred_url": "https://api.github.com/users/nkolot/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nkolot/subscriptions", "organizations_url": "https://api.github.com/users/nkolot/orgs", "repos_url": "https://api.github.com/users/nkolot/repos", "events_url": "https://api.github.com/users/nkolot/events{/privacy}", "received_events_url": "https://api.github.com/users/nkolot/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-09-22T18:21:08Z", "updated_at": "2018-09-23T13:50:21Z", "closed_at": "2018-09-23T13:50:21Z", "author_association": "NONE", "body_html": "<h2>Issue description</h2>\n<p>I tried to use torch.nn.DataParallel but apparently I can't get it working on my system. I tried to run it using the <strong>pytorch/pytorch:0.4.1-cuda9-cudnn7-runtime</strong> docker image that you provide but the code crashes and outputs</p>\n<pre><code>Unexpected end of /proc/mounts line `overlay / overlay rw,relatime,lowerdir=/var/lib/docker/overlay2/l/4QRVRMEQI3QBEKYYH6Q7RBNTLM:/var/lib/docker/overlay2/l/4IZR47YTZ5HJWUNGSQMIL3GYOF:/var/lib/docker/overlay2/l/TDUFGMDQHXVXDCOZA23WRENEZ7:/var/lib/docker/overlay2/l/R6EAQ3YWCJDBGMF6FGUOLCXBYP:/var/lib/docker/overlay2/l/TZNAQRWOM5NWKXMA2AXYJ4RFJK:/var/lib/docker/overlay2/l/WOYGJ4J5NOOPQUV4VQQGAWIXSO:/var/lib/docker/overlay2/l/YKLJNXYBRFZM2C3NKCAD7DXATB:/var/lib/docker/overlay2/l/747UMECDYK5WGI2TEQ3Q2LBDEX:/var/lib/docker/overlay2/l/6TEFXVS427LG5\n</code></pre>\n<p>I also tried it with <strong>pytorch/pytorch:latest</strong> but I am getting the same errors.</p>\n<p>When I try to run it using <strong>pytorch/pytorch:0.4.1-cuda9-cudnn7-devel</strong> O a, getting this error:</p>\n<pre><code>Unexpected end of /proc/mounts line `overlay / overlay rw,relatime,lowerdir=/var/lib/docker/overlay2/l/J2FT2HKPICOMEUKVP43METQYBR:/var/lib/docker/overlay2/l/EVILMLJWKK7BVPAC6G7LJLYNFO:/var/lib/docker/overlay2/l/XHZIT4K7AY6ZBHBXCRTLCHMIDI:/var/lib/docker/overlay2/l/4OL6DC7JI2REXSF7VHGMGYSI25:/var/lib/docker/overlay2/l/SUNFHBCJREK3HRGBT63IPMJWFS:/var/lib/docker/overlay2/l/HYEVHJ2PSTITOIOIY7PNSRDYHK:/var/lib/docker/overlay2/l/3UHI5T5AMDD7WF6HW7L7RZY3MW:/var/lib/docker/overlay2/l/SCN3CFIVYJIDUVQNNRXA7E6HG7:/var/lib/docker/overlay2/l/2V7SCPNEERUSU'\nUnexpected end of /proc/mounts line `A2WTUG6MUW2EZ:/var/lib/docker/overlay2/l/R3ICXG7TJ5FBQAVBDX4O66HTYT:/var/lib/docker/overlay2/l/FCEZES76F7FZAUEZ4B5L3XBRLT:/var/lib/docker/overlay2/l/4NLWRVNBKOTNEPHTBTO74F7QK6:/var/lib/docker/overlay2/l/MCSIH24GTOAYTDCMLBX7ARR6QE:/var/lib/docker/overlay2/l/KDYCLWVCVOD7T4WNTT7YAH3OUF:/var/lib/docker/overlay2/l/P3XIA3QOGD56WY7LOLP2BOWBND:/var/lib/docker/overlay2/l/OKJBQ54KQBLC3T4FFCYCB5SFW2:/var/lib/docker/overlay2/l/6EOMY424KTNZWINHITSNJK3ZJG,upperdir=/var/lib/docker/overlay2/a30be0494ed731c466551e10696c10a'\n</code></pre>\n<p>Initially I tried to run it in a custom built docker image that we use (chaneyk/pytorch:0.4.1-py3) and I was getting the following error:</p>\n<pre><code>Traceback (most recent call last):\n  File \"dummy_module.py\", line 18, in &lt;module&gt;\n    y = dm(x)\n  File \"/usr/local/lib/python3.5/dist-packages/torch/nn/modules/module.py\", line 477, in __call__\n    result = self.forward(*input, **kwargs)\n  File \"/usr/local/lib/python3.5/dist-packages/torch/nn/parallel/data_parallel.py\", line 122, in forward\n    replicas = self.replicate(self.module, self.device_ids[:len(inputs)])\n  File \"/usr/local/lib/python3.5/dist-packages/torch/nn/parallel/data_parallel.py\", line 127, in replicate\n    return replicate(module, device_ids)\n  File \"/usr/local/lib/python3.5/dist-packages/torch/nn/parallel/replicate.py\", line 12, in replicate\n    param_copies = Broadcast.apply(devices, *params)\n  File \"/usr/local/lib/python3.5/dist-packages/torch/nn/parallel/_functions.py\", line 19, in forward\n    outputs = comm.broadcast_coalesced(inputs, ctx.target_gpus)\n  File \"/usr/local/lib/python3.5/dist-packages/torch/cuda/comm.py\", line 40, in broadcast_coalesced\n    return torch._C._broadcast_coalesced(tensors, devices, buffer_size)\nRuntimeError: NCCL Error 1: unhandled cuda error\n</code></pre>\n<p>Note that I tried to run it using pairs of several different types of GPU: Titan Z, Titan X, 1080Ti and Tesla V100 (always of the same type in a pair), but I am always getting the same errors. <code>torch.cuda.device_count()</code> always shows 2 for my system, and I tried to explicitly pass <code>device_ids=[0,1]</code> in nn.DataParallel but nothing changes. I can successfully copy tensors to both gpus using cuda(0) or cuda(1) so I assume that PyTorch recognizes both GPUs properly.</p>\n<h2>Code example</h2>\n<pre><code>import torch\nimport torch.nn as nn\n\nclass DummyModule(nn.Module):\n\n    def __init__(self):\n        super(DummyModule, self).__init__()\n        self.m = nn.Linear(10,1)\n\n    def forward(self, x):\n        return self.m(x)\n\nif __name__ == '__main__':\n    print(torch.cuda.device_count())\n    x = torch.ones(16,100,10).cuda()\n    dm = nn.DataParallel(DummyModule())\n    dm.cuda()\n    y = dm(x)\n</code></pre>\n<h2>System Info</h2>\n<p>PyTorch version: 0.4.1<br>\nIs debug build: No<br>\nCUDA used to build PyTorch: 9.0.176</p>\n<p>OS: Ubuntu 16.04.5 LTS<br>\nGCC version: (Ubuntu 5.4.0-6ubuntu1~16.04.10) 5.4.0 20160609<br>\nCMake version: Could not collect</p>\n<p>Python version: 3.6<br>\nIs CUDA available: Yes<br>\nCUDA runtime version: Could not collect<br>\nGPU models and configuration:<br>\nGPU 0: GeForce GTX TITAN Z<br>\nGPU 1: GeForce GTX TITAN Z</p>\n<p>Nvidia driver version: 384.130<br>\ncuDNN version: Could not collect</p>\n<p>Versions of relevant libraries:<br>\n[pip] numpy (1.14.5)<br>\n[pip] torch (0.4.1)<br>\n[pip] torchvision (0.2.1)<br>\n[conda] cuda90                    1.0                  h6433d27_0    pytorch<br>\n[conda] pytorch                   0.4.1           py36_cuda9.0.176_cudnn7.1.2_1    pytorch<br>\n[conda] torchvision               0.2.1                    py36_1    pytorch</p>", "body_text": "Issue description\nI tried to use torch.nn.DataParallel but apparently I can't get it working on my system. I tried to run it using the pytorch/pytorch:0.4.1-cuda9-cudnn7-runtime docker image that you provide but the code crashes and outputs\nUnexpected end of /proc/mounts line `overlay / overlay rw,relatime,lowerdir=/var/lib/docker/overlay2/l/4QRVRMEQI3QBEKYYH6Q7RBNTLM:/var/lib/docker/overlay2/l/4IZR47YTZ5HJWUNGSQMIL3GYOF:/var/lib/docker/overlay2/l/TDUFGMDQHXVXDCOZA23WRENEZ7:/var/lib/docker/overlay2/l/R6EAQ3YWCJDBGMF6FGUOLCXBYP:/var/lib/docker/overlay2/l/TZNAQRWOM5NWKXMA2AXYJ4RFJK:/var/lib/docker/overlay2/l/WOYGJ4J5NOOPQUV4VQQGAWIXSO:/var/lib/docker/overlay2/l/YKLJNXYBRFZM2C3NKCAD7DXATB:/var/lib/docker/overlay2/l/747UMECDYK5WGI2TEQ3Q2LBDEX:/var/lib/docker/overlay2/l/6TEFXVS427LG5\n\nI also tried it with pytorch/pytorch:latest but I am getting the same errors.\nWhen I try to run it using pytorch/pytorch:0.4.1-cuda9-cudnn7-devel O a, getting this error:\nUnexpected end of /proc/mounts line `overlay / overlay rw,relatime,lowerdir=/var/lib/docker/overlay2/l/J2FT2HKPICOMEUKVP43METQYBR:/var/lib/docker/overlay2/l/EVILMLJWKK7BVPAC6G7LJLYNFO:/var/lib/docker/overlay2/l/XHZIT4K7AY6ZBHBXCRTLCHMIDI:/var/lib/docker/overlay2/l/4OL6DC7JI2REXSF7VHGMGYSI25:/var/lib/docker/overlay2/l/SUNFHBCJREK3HRGBT63IPMJWFS:/var/lib/docker/overlay2/l/HYEVHJ2PSTITOIOIY7PNSRDYHK:/var/lib/docker/overlay2/l/3UHI5T5AMDD7WF6HW7L7RZY3MW:/var/lib/docker/overlay2/l/SCN3CFIVYJIDUVQNNRXA7E6HG7:/var/lib/docker/overlay2/l/2V7SCPNEERUSU'\nUnexpected end of /proc/mounts line `A2WTUG6MUW2EZ:/var/lib/docker/overlay2/l/R3ICXG7TJ5FBQAVBDX4O66HTYT:/var/lib/docker/overlay2/l/FCEZES76F7FZAUEZ4B5L3XBRLT:/var/lib/docker/overlay2/l/4NLWRVNBKOTNEPHTBTO74F7QK6:/var/lib/docker/overlay2/l/MCSIH24GTOAYTDCMLBX7ARR6QE:/var/lib/docker/overlay2/l/KDYCLWVCVOD7T4WNTT7YAH3OUF:/var/lib/docker/overlay2/l/P3XIA3QOGD56WY7LOLP2BOWBND:/var/lib/docker/overlay2/l/OKJBQ54KQBLC3T4FFCYCB5SFW2:/var/lib/docker/overlay2/l/6EOMY424KTNZWINHITSNJK3ZJG,upperdir=/var/lib/docker/overlay2/a30be0494ed731c466551e10696c10a'\n\nInitially I tried to run it in a custom built docker image that we use (chaneyk/pytorch:0.4.1-py3) and I was getting the following error:\nTraceback (most recent call last):\n  File \"dummy_module.py\", line 18, in <module>\n    y = dm(x)\n  File \"/usr/local/lib/python3.5/dist-packages/torch/nn/modules/module.py\", line 477, in __call__\n    result = self.forward(*input, **kwargs)\n  File \"/usr/local/lib/python3.5/dist-packages/torch/nn/parallel/data_parallel.py\", line 122, in forward\n    replicas = self.replicate(self.module, self.device_ids[:len(inputs)])\n  File \"/usr/local/lib/python3.5/dist-packages/torch/nn/parallel/data_parallel.py\", line 127, in replicate\n    return replicate(module, device_ids)\n  File \"/usr/local/lib/python3.5/dist-packages/torch/nn/parallel/replicate.py\", line 12, in replicate\n    param_copies = Broadcast.apply(devices, *params)\n  File \"/usr/local/lib/python3.5/dist-packages/torch/nn/parallel/_functions.py\", line 19, in forward\n    outputs = comm.broadcast_coalesced(inputs, ctx.target_gpus)\n  File \"/usr/local/lib/python3.5/dist-packages/torch/cuda/comm.py\", line 40, in broadcast_coalesced\n    return torch._C._broadcast_coalesced(tensors, devices, buffer_size)\nRuntimeError: NCCL Error 1: unhandled cuda error\n\nNote that I tried to run it using pairs of several different types of GPU: Titan Z, Titan X, 1080Ti and Tesla V100 (always of the same type in a pair), but I am always getting the same errors. torch.cuda.device_count() always shows 2 for my system, and I tried to explicitly pass device_ids=[0,1] in nn.DataParallel but nothing changes. I can successfully copy tensors to both gpus using cuda(0) or cuda(1) so I assume that PyTorch recognizes both GPUs properly.\nCode example\nimport torch\nimport torch.nn as nn\n\nclass DummyModule(nn.Module):\n\n    def __init__(self):\n        super(DummyModule, self).__init__()\n        self.m = nn.Linear(10,1)\n\n    def forward(self, x):\n        return self.m(x)\n\nif __name__ == '__main__':\n    print(torch.cuda.device_count())\n    x = torch.ones(16,100,10).cuda()\n    dm = nn.DataParallel(DummyModule())\n    dm.cuda()\n    y = dm(x)\n\nSystem Info\nPyTorch version: 0.4.1\nIs debug build: No\nCUDA used to build PyTorch: 9.0.176\nOS: Ubuntu 16.04.5 LTS\nGCC version: (Ubuntu 5.4.0-6ubuntu1~16.04.10) 5.4.0 20160609\nCMake version: Could not collect\nPython version: 3.6\nIs CUDA available: Yes\nCUDA runtime version: Could not collect\nGPU models and configuration:\nGPU 0: GeForce GTX TITAN Z\nGPU 1: GeForce GTX TITAN Z\nNvidia driver version: 384.130\ncuDNN version: Could not collect\nVersions of relevant libraries:\n[pip] numpy (1.14.5)\n[pip] torch (0.4.1)\n[pip] torchvision (0.2.1)\n[conda] cuda90                    1.0                  h6433d27_0    pytorch\n[conda] pytorch                   0.4.1           py36_cuda9.0.176_cudnn7.1.2_1    pytorch\n[conda] torchvision               0.2.1                    py36_1    pytorch", "body": "## Issue description\r\n\r\nI tried to use torch.nn.DataParallel but apparently I can't get it working on my system. I tried to run it using the **pytorch/pytorch:0.4.1-cuda9-cudnn7-runtime** docker image that you provide but the code crashes and outputs\r\n```\r\nUnexpected end of /proc/mounts line `overlay / overlay rw,relatime,lowerdir=/var/lib/docker/overlay2/l/4QRVRMEQI3QBEKYYH6Q7RBNTLM:/var/lib/docker/overlay2/l/4IZR47YTZ5HJWUNGSQMIL3GYOF:/var/lib/docker/overlay2/l/TDUFGMDQHXVXDCOZA23WRENEZ7:/var/lib/docker/overlay2/l/R6EAQ3YWCJDBGMF6FGUOLCXBYP:/var/lib/docker/overlay2/l/TZNAQRWOM5NWKXMA2AXYJ4RFJK:/var/lib/docker/overlay2/l/WOYGJ4J5NOOPQUV4VQQGAWIXSO:/var/lib/docker/overlay2/l/YKLJNXYBRFZM2C3NKCAD7DXATB:/var/lib/docker/overlay2/l/747UMECDYK5WGI2TEQ3Q2LBDEX:/var/lib/docker/overlay2/l/6TEFXVS427LG5\r\n```\r\nI also tried it with **pytorch/pytorch:latest** but I am getting the same errors.\r\n\r\nWhen I try to run it using **pytorch/pytorch:0.4.1-cuda9-cudnn7-devel** O a, getting this error:\r\n```\r\nUnexpected end of /proc/mounts line `overlay / overlay rw,relatime,lowerdir=/var/lib/docker/overlay2/l/J2FT2HKPICOMEUKVP43METQYBR:/var/lib/docker/overlay2/l/EVILMLJWKK7BVPAC6G7LJLYNFO:/var/lib/docker/overlay2/l/XHZIT4K7AY6ZBHBXCRTLCHMIDI:/var/lib/docker/overlay2/l/4OL6DC7JI2REXSF7VHGMGYSI25:/var/lib/docker/overlay2/l/SUNFHBCJREK3HRGBT63IPMJWFS:/var/lib/docker/overlay2/l/HYEVHJ2PSTITOIOIY7PNSRDYHK:/var/lib/docker/overlay2/l/3UHI5T5AMDD7WF6HW7L7RZY3MW:/var/lib/docker/overlay2/l/SCN3CFIVYJIDUVQNNRXA7E6HG7:/var/lib/docker/overlay2/l/2V7SCPNEERUSU'\r\nUnexpected end of /proc/mounts line `A2WTUG6MUW2EZ:/var/lib/docker/overlay2/l/R3ICXG7TJ5FBQAVBDX4O66HTYT:/var/lib/docker/overlay2/l/FCEZES76F7FZAUEZ4B5L3XBRLT:/var/lib/docker/overlay2/l/4NLWRVNBKOTNEPHTBTO74F7QK6:/var/lib/docker/overlay2/l/MCSIH24GTOAYTDCMLBX7ARR6QE:/var/lib/docker/overlay2/l/KDYCLWVCVOD7T4WNTT7YAH3OUF:/var/lib/docker/overlay2/l/P3XIA3QOGD56WY7LOLP2BOWBND:/var/lib/docker/overlay2/l/OKJBQ54KQBLC3T4FFCYCB5SFW2:/var/lib/docker/overlay2/l/6EOMY424KTNZWINHITSNJK3ZJG,upperdir=/var/lib/docker/overlay2/a30be0494ed731c466551e10696c10a'\r\n```\r\n\r\nInitially I tried to run it in a custom built docker image that we use (chaneyk/pytorch:0.4.1-py3) and I was getting the following error:\r\n```\r\nTraceback (most recent call last):\r\n  File \"dummy_module.py\", line 18, in <module>\r\n    y = dm(x)\r\n  File \"/usr/local/lib/python3.5/dist-packages/torch/nn/modules/module.py\", line 477, in __call__\r\n    result = self.forward(*input, **kwargs)\r\n  File \"/usr/local/lib/python3.5/dist-packages/torch/nn/parallel/data_parallel.py\", line 122, in forward\r\n    replicas = self.replicate(self.module, self.device_ids[:len(inputs)])\r\n  File \"/usr/local/lib/python3.5/dist-packages/torch/nn/parallel/data_parallel.py\", line 127, in replicate\r\n    return replicate(module, device_ids)\r\n  File \"/usr/local/lib/python3.5/dist-packages/torch/nn/parallel/replicate.py\", line 12, in replicate\r\n    param_copies = Broadcast.apply(devices, *params)\r\n  File \"/usr/local/lib/python3.5/dist-packages/torch/nn/parallel/_functions.py\", line 19, in forward\r\n    outputs = comm.broadcast_coalesced(inputs, ctx.target_gpus)\r\n  File \"/usr/local/lib/python3.5/dist-packages/torch/cuda/comm.py\", line 40, in broadcast_coalesced\r\n    return torch._C._broadcast_coalesced(tensors, devices, buffer_size)\r\nRuntimeError: NCCL Error 1: unhandled cuda error\r\n```\r\nNote that I tried to run it using pairs of several different types of GPU: Titan Z, Titan X, 1080Ti and Tesla V100 (always of the same type in a pair), but I am always getting the same errors. `torch.cuda.device_count()` always shows 2 for my system, and I tried to explicitly pass `device_ids=[0,1]` in nn.DataParallel but nothing changes. I can successfully copy tensors to both gpus using cuda(0) or cuda(1) so I assume that PyTorch recognizes both GPUs properly. \r\n\r\n## Code example\r\n```\r\nimport torch\r\nimport torch.nn as nn\r\n\r\nclass DummyModule(nn.Module):\r\n\r\n    def __init__(self):\r\n        super(DummyModule, self).__init__()\r\n        self.m = nn.Linear(10,1)\r\n\r\n    def forward(self, x):\r\n        return self.m(x)\r\n\r\nif __name__ == '__main__':\r\n    print(torch.cuda.device_count())\r\n    x = torch.ones(16,100,10).cuda()\r\n    dm = nn.DataParallel(DummyModule())\r\n    dm.cuda()\r\n    y = dm(x)\r\n```\r\n\r\n## System Info\r\nPyTorch version: 0.4.1\r\nIs debug build: No\r\nCUDA used to build PyTorch: 9.0.176\r\n\r\nOS: Ubuntu 16.04.5 LTS\r\nGCC version: (Ubuntu 5.4.0-6ubuntu1~16.04.10) 5.4.0 20160609\r\nCMake version: Could not collect\r\n\r\nPython version: 3.6\r\nIs CUDA available: Yes\r\nCUDA runtime version: Could not collect\r\nGPU models and configuration: \r\nGPU 0: GeForce GTX TITAN Z\r\nGPU 1: GeForce GTX TITAN Z\r\n\r\nNvidia driver version: 384.130\r\ncuDNN version: Could not collect\r\n\r\nVersions of relevant libraries:\r\n[pip] numpy (1.14.5)\r\n[pip] torch (0.4.1)\r\n[pip] torchvision (0.2.1)\r\n[conda] cuda90                    1.0                  h6433d27_0    pytorch\r\n[conda] pytorch                   0.4.1           py36_cuda9.0.176_cudnn7.1.2_1    pytorch\r\n[conda] torchvision               0.2.1                    py36_1    pytorch"}