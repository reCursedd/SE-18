{"url": "https://api.github.com/repos/pytorch/pytorch/issues/4232", "repository_url": "https://api.github.com/repos/pytorch/pytorch", "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/4232/labels{/name}", "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/4232/comments", "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/4232/events", "html_url": "https://github.com/pytorch/pytorch/issues/4232", "id": 282952270, "node_id": "MDU6SXNzdWUyODI5NTIyNzA=", "number": 4232, "title": "Custom collate_fn and _use_shared_memory", "user": {"login": "mikepound", "id": 9349459, "node_id": "MDQ6VXNlcjkzNDk0NTk=", "avatar_url": "https://avatars3.githubusercontent.com/u/9349459?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mikepound", "html_url": "https://github.com/mikepound", "followers_url": "https://api.github.com/users/mikepound/followers", "following_url": "https://api.github.com/users/mikepound/following{/other_user}", "gists_url": "https://api.github.com/users/mikepound/gists{/gist_id}", "starred_url": "https://api.github.com/users/mikepound/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mikepound/subscriptions", "organizations_url": "https://api.github.com/users/mikepound/orgs", "repos_url": "https://api.github.com/users/mikepound/repos", "events_url": "https://api.github.com/users/mikepound/events{/privacy}", "received_events_url": "https://api.github.com/users/mikepound/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-12-18T17:04:57Z", "updated_at": "2017-12-18T17:31:31Z", "closed_at": "2017-12-18T17:31:31Z", "author_association": "CONTRIBUTOR", "body_html": "<p>Hi,</p>\n<p>I'm writing my own batch collate function, and I was trying to re-implement the tensor concatenation bit of default_collate. Your default implementation uses the variable _use_shared_memory, but I'm struggling to get access to it from within my own function. Plus it's marked as \"private\", should it be passed to the collate as a parameter? Or am I best just ignoring it and using torch.stack? Any advice appreciated!</p>\n<p>Mike</p>", "body_text": "Hi,\nI'm writing my own batch collate function, and I was trying to re-implement the tensor concatenation bit of default_collate. Your default implementation uses the variable _use_shared_memory, but I'm struggling to get access to it from within my own function. Plus it's marked as \"private\", should it be passed to the collate as a parameter? Or am I best just ignoring it and using torch.stack? Any advice appreciated!\nMike", "body": "Hi,\r\n\r\nI'm writing my own batch collate function, and I was trying to re-implement the tensor concatenation bit of default_collate. Your default implementation uses the variable _use_shared_memory, but I'm struggling to get access to it from within my own function. Plus it's marked as \"private\", should it be passed to the collate as a parameter? Or am I best just ignoring it and using torch.stack? Any advice appreciated!\r\n\r\nMike"}