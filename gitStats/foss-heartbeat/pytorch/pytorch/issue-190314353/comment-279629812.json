{"url": "https://api.github.com/repos/pytorch/pytorch/issues/comments/279629812", "html_url": "https://github.com/pytorch/pytorch/issues/229#issuecomment-279629812", "issue_url": "https://api.github.com/repos/pytorch/pytorch/issues/229", "id": 279629812, "node_id": "MDEyOklzc3VlQ29tbWVudDI3OTYyOTgxMg==", "user": {"login": "rtqichen", "id": 3375899, "node_id": "MDQ6VXNlcjMzNzU4OTk=", "avatar_url": "https://avatars2.githubusercontent.com/u/3375899?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rtqichen", "html_url": "https://github.com/rtqichen", "followers_url": "https://api.github.com/users/rtqichen/followers", "following_url": "https://api.github.com/users/rtqichen/following{/other_user}", "gists_url": "https://api.github.com/users/rtqichen/gists{/gist_id}", "starred_url": "https://api.github.com/users/rtqichen/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rtqichen/subscriptions", "organizations_url": "https://api.github.com/users/rtqichen/orgs", "repos_url": "https://api.github.com/users/rtqichen/repos", "events_url": "https://api.github.com/users/rtqichen/events{/privacy}", "received_events_url": "https://api.github.com/users/rtqichen/received_events", "type": "User", "site_admin": false}, "created_at": "2017-02-14T07:37:06Z", "updated_at": "2017-02-14T07:38:10Z", "author_association": "NONE", "body_html": "<p>To add another use case for strides other than 1 (not just -1): accessing diagonals of a <code>n by n</code> matrix <code>X</code> would be very easy with <code>X.view(-1)[::n+1]</code>. The current torch.diag function returns a copy of the diagonal.</p>", "body_text": "To add another use case for strides other than 1 (not just -1): accessing diagonals of a n by n matrix X would be very easy with X.view(-1)[::n+1]. The current torch.diag function returns a copy of the diagonal.", "body": "To add another use case for strides other than 1 (not just -1): accessing diagonals of a `n by n` matrix `X` would be very easy with `X.view(-1)[::n+1]`. The current torch.diag function returns a copy of the diagonal."}