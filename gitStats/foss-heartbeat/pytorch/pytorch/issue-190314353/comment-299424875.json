{"url": "https://api.github.com/repos/pytorch/pytorch/issues/comments/299424875", "html_url": "https://github.com/pytorch/pytorch/issues/229#issuecomment-299424875", "issue_url": "https://api.github.com/repos/pytorch/pytorch/issues/229", "id": 299424875, "node_id": "MDEyOklzc3VlQ29tbWVudDI5OTQyNDg3NQ==", "user": {"login": "fmassa", "id": 9110200, "node_id": "MDQ6VXNlcjkxMTAyMDA=", "avatar_url": "https://avatars2.githubusercontent.com/u/9110200?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fmassa", "html_url": "https://github.com/fmassa", "followers_url": "https://api.github.com/users/fmassa/followers", "following_url": "https://api.github.com/users/fmassa/following{/other_user}", "gists_url": "https://api.github.com/users/fmassa/gists{/gist_id}", "starred_url": "https://api.github.com/users/fmassa/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fmassa/subscriptions", "organizations_url": "https://api.github.com/users/fmassa/orgs", "repos_url": "https://api.github.com/users/fmassa/repos", "events_url": "https://api.github.com/users/fmassa/events{/privacy}", "received_events_url": "https://api.github.com/users/fmassa/received_events", "type": "User", "site_admin": false}, "created_at": "2017-05-05T09:48:13Z", "updated_at": "2017-05-05T09:48:13Z", "author_association": "MEMBER", "body_html": "<p><a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=2099291\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/aosokin\">@aosokin</a> the most efficient way at the moment is to use <code>index_select</code> in the tensor, which will make a copy of it.</p>\n<div class=\"highlight highlight-source-python\"><pre>inv_idx <span class=\"pl-k\">=</span> torch.arange(tensor.size(<span class=\"pl-c1\">0</span>)<span class=\"pl-k\">-</span><span class=\"pl-c1\">1</span>, <span class=\"pl-k\">-</span><span class=\"pl-c1\">1</span>, <span class=\"pl-k\">-</span><span class=\"pl-c1\">1</span>).long()\n<span class=\"pl-c\"><span class=\"pl-c\">#</span> or equivalently torch.range(tensor.size(0)-1, 0, -1).long()</span>\ninv_tensor <span class=\"pl-k\">=</span> tensor.index_select(<span class=\"pl-c1\">0</span>, inv_idx)\n<span class=\"pl-c\"><span class=\"pl-c\">#</span> or equivalently</span>\ninv_tensor <span class=\"pl-k\">=</span> tensor[inv_idx]</pre></div>", "body_text": "@aosokin the most efficient way at the moment is to use index_select in the tensor, which will make a copy of it.\ninv_idx = torch.arange(tensor.size(0)-1, -1, -1).long()\n# or equivalently torch.range(tensor.size(0)-1, 0, -1).long()\ninv_tensor = tensor.index_select(0, inv_idx)\n# or equivalently\ninv_tensor = tensor[inv_idx]", "body": "@aosokin the most efficient way at the moment is to use `index_select` in the tensor, which will make a copy of it.\r\n```python\r\ninv_idx = torch.arange(tensor.size(0)-1, -1, -1).long()\r\n# or equivalently torch.range(tensor.size(0)-1, 0, -1).long()\r\ninv_tensor = tensor.index_select(0, inv_idx)\r\n# or equivalently\r\ninv_tensor = tensor[inv_idx]\r\n```"}