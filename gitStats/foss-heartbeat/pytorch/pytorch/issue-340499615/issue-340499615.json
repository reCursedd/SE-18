{"url": "https://api.github.com/repos/pytorch/pytorch/issues/9378", "repository_url": "https://api.github.com/repos/pytorch/pytorch", "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/9378/labels{/name}", "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/9378/comments", "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/9378/events", "html_url": "https://github.com/pytorch/pytorch/issues/9378", "id": 340499615, "node_id": "MDU6SXNzdWUzNDA0OTk2MTU=", "number": 9378, "title": "[feature request] Multivariate Gamma function", "user": {"login": "Balandat", "id": 1605878, "node_id": "MDQ6VXNlcjE2MDU4Nzg=", "avatar_url": "https://avatars2.githubusercontent.com/u/1605878?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Balandat", "html_url": "https://github.com/Balandat", "followers_url": "https://api.github.com/users/Balandat/followers", "following_url": "https://api.github.com/users/Balandat/following{/other_user}", "gists_url": "https://api.github.com/users/Balandat/gists{/gist_id}", "starred_url": "https://api.github.com/users/Balandat/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Balandat/subscriptions", "organizations_url": "https://api.github.com/users/Balandat/orgs", "repos_url": "https://api.github.com/users/Balandat/repos", "events_url": "https://api.github.com/users/Balandat/events{/privacy}", "received_events_url": "https://api.github.com/users/Balandat/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2018-07-12T06:01:24Z", "updated_at": "2018-07-24T22:44:20Z", "closed_at": "2018-07-24T19:11:14Z", "author_association": "NONE", "body_html": "<p>Looks like there currently is no implementation of the (log-) multivariate Gamma function? That would be useful for implementing Wishart / inverse Wishart distributions.</p>\n<p>The straightforward way to do this would be to reduce it to multiple <code>lgamma</code> evaluations using the identity 35.3.4 from <a href=\"https://dlmf.nist.gov/35.3\" rel=\"nofollow\">https://dlmf.nist.gov/35.3</a>. For a float <code>a</code> the <code>p</code>-dim multivariate Gamma function in python is just</p>\n<pre><code>def log_mv_gamma(p, a):\n    C = p * (p - 1) / 4 * math.log(math.pi)\n    return C + torch.lgamma(a - 0.5 * torch.arange(p, dtype=torch.float)).sum()\n</code></pre>\n<p>I'm not sure how numerically stable this simple approach is, but it doesn't look too bad at first glance.</p>", "body_text": "Looks like there currently is no implementation of the (log-) multivariate Gamma function? That would be useful for implementing Wishart / inverse Wishart distributions.\nThe straightforward way to do this would be to reduce it to multiple lgamma evaluations using the identity 35.3.4 from https://dlmf.nist.gov/35.3. For a float a the p-dim multivariate Gamma function in python is just\ndef log_mv_gamma(p, a):\n    C = p * (p - 1) / 4 * math.log(math.pi)\n    return C + torch.lgamma(a - 0.5 * torch.arange(p, dtype=torch.float)).sum()\n\nI'm not sure how numerically stable this simple approach is, but it doesn't look too bad at first glance.", "body": "Looks like there currently is no implementation of the (log-) multivariate Gamma function? That would be useful for implementing Wishart / inverse Wishart distributions.\r\n\r\nThe straightforward way to do this would be to reduce it to multiple `lgamma` evaluations using the identity 35.3.4 from https://dlmf.nist.gov/35.3. For a float `a` the `p`-dim multivariate Gamma function in python is just\r\n\r\n```\r\ndef log_mv_gamma(p, a):\r\n    C = p * (p - 1) / 4 * math.log(math.pi)\r\n    return C + torch.lgamma(a - 0.5 * torch.arange(p, dtype=torch.float)).sum()\r\n```\r\n\r\nI'm not sure how numerically stable this simple approach is, but it doesn't look too bad at first glance.\r\n"}