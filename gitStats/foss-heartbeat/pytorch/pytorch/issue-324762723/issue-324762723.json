{"url": "https://api.github.com/repos/pytorch/pytorch/issues/7719", "repository_url": "https://api.github.com/repos/pytorch/pytorch", "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/7719/labels{/name}", "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/7719/comments", "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/7719/events", "html_url": "https://github.com/pytorch/pytorch/issues/7719", "id": 324762723, "node_id": "MDU6SXNzdWUzMjQ3NjI3MjM=", "number": 7719, "title": "[caffe2] compile success in windows 10 but no caffe2_pybind11_state.pyd is produced", "user": {"login": "ZephyrSails", "id": 8208796, "node_id": "MDQ6VXNlcjgyMDg3OTY=", "avatar_url": "https://avatars0.githubusercontent.com/u/8208796?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ZephyrSails", "html_url": "https://github.com/ZephyrSails", "followers_url": "https://api.github.com/users/ZephyrSails/followers", "following_url": "https://api.github.com/users/ZephyrSails/following{/other_user}", "gists_url": "https://api.github.com/users/ZephyrSails/gists{/gist_id}", "starred_url": "https://api.github.com/users/ZephyrSails/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ZephyrSails/subscriptions", "organizations_url": "https://api.github.com/users/ZephyrSails/orgs", "repos_url": "https://api.github.com/users/ZephyrSails/repos", "events_url": "https://api.github.com/users/ZephyrSails/events{/privacy}", "received_events_url": "https://api.github.com/users/ZephyrSails/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 890282107, "node_id": "MDU6TGFiZWw4OTAyODIxMDc=", "url": "https://api.github.com/repos/pytorch/pytorch/labels/caffe2", "name": "caffe2", "color": "210aa8", "default": false}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-05-21T01:39:12Z", "updated_at": "2018-06-25T20:46:54Z", "closed_at": null, "author_association": "NONE", "body_html": "<p>Hi,</p>\n<p>I'm tring to build caffe2 from source with GPU support on windows 10 PC.</p>\n<p>I followed the instruction in <a href=\"https://caffe2.ai/docs/getting-started.html?platform=windows&amp;configuration=compile\" rel=\"nofollow\">https://caffe2.ai/docs/getting-started.html?platform=windows&amp;configuration=compile</a> until finished running build_windows.bat, it says:<br>\n<code> \"Caffe2 built successfully\"</code></p>\n<p>however it seems no caffe2_pybind11_state.pyd is produced.</p>\n<p>My configuration looks like this:</p>\n<pre><code>C:$USER\\source\\repos\\pytorch\\scripts&gt;build_windows.bat\nThe system cannot find the drive specified.\nCAFFE2_ROOT=C:$USER\\source\\repos\\pytorch\\scripts\\..\nCMAKE_GENERATOR=\"Visual Studio 14 2015 Win64\"\nCMAKE_BUILD_TYPE=Release\nThe system cannot find the path specified.\nThe system cannot find the path specified.\n-- Selecting Windows SDK version 10.0.17134.0 to target Windows 10.0.16299.\n-- Need to define long as a separate typeid.\n-- std::exception_ptr is supported.\n-- NUMA is not available\n-- Current compiler supports avx2 extention. Will build perfkernels.\n-- Building using own protobuf under third_party per request.\n-- Use custom protobuf build.\n-- Caffe2 protobuf include directory: $&lt;BUILD_INTERFACE:C:$USER\\source/repos/pytorch/third_party/protobuf/src&gt;$&lt;INSTALL_INTERFACE:include&gt;\n-- The BLAS backend of choice:Eigen\nCMake Warning at cmake/Dependencies.cmake:289 (find_package):\n  By not providing \"FindEigen3.cmake\" in CMAKE_MODULE_PATH this project has\n  asked CMake to find a package configuration file provided by \"Eigen3\", but\n  CMake did not find one.\n\n  Could not find a package configuration file provided by \"Eigen3\" with any\n  of the following names:\n\n    Eigen3Config.cmake\n    eigen3-config.cmake\n\n  Add the installation prefix of \"Eigen3\" to CMAKE_PREFIX_PATH or set\n  \"Eigen3_DIR\" to a directory containing one of the above files.  If \"Eigen3\"\n  provides a separate development package or SDK, be sure it has been\n  installed.\nCall Stack (most recent call first):\n  CMakeLists.txt:182 (include)\n\n\n-- Did not find system Eigen. Using third party subdirectory.\n-- NumPy ver. 1.14.3 found (include: C:/Program Files/Python36/lib/site-packages/numpy/core/include)\n-- Could NOT find pybind11 (missing: pybind11_INCLUDE_DIR)\n-- Caffe2: CUDA detected: 9.1\n-- Found cuDNN: v7.1.3  (include: C:/Program Files/NVIDIA GPU Computing Toolkit/CUDA/v9.1/include, library: C:/Program Files/NVIDIA GPU Computing Toolkit/CUDA/v9.1/lib/x64/cudnn.lib)\n-- Added CUDA NVCC flags for: sm_50\n-- Could NOT find CUB (missing: CUB_INCLUDE_DIR)\n-- NCCL operators skipped due to no CUDA support\n-- Excluding ideep operators as we are not using ideep\n-- Excluding image processing operators due to no opencv\n-- Excluding video processing operators due to no opencv\n-- Excluding mkl operators as we are not using mkl\n-- MPI operators skipped due to no MPI support\n-- Include Observer library\n-- Using Lib\\site-packages as python relative installation path\n-- Automatically generating missing __init__.py files.\n-- A previous caffe2 cmake run already created the __init__.py files.\nCMake Warning at CMakeLists.txt:310 (message):\n  Generated cmake files are only fully tested if one builds with system glog,\n  gflags, and protobuf.  Other settings may generate files that are not well\n  tested.\n\n\nCMake Warning at CMakeLists.txt:355 (message):\n  Generated cmake files are only available when building shared libs.\n\n\n--\n-- ******** Summary ********\n-- General:\n--   CMake version         : 3.11.1\n--   CMake command         : C:/Program Files/CMake/bin/cmake.exe\n--   Git version           : v0.1.11-8485-g75cf0faf4-dirty\n--   System                : Windows\n--   C++ compiler          : C:/Program Files (x86)/Microsoft Visual Studio 14.0/VC/bin/x86_amd64/cl.exe\n--   C++ compiler version  : 19.0.24234.1\n--   BLAS                  : Eigen\n--   CXX flags             : /DWIN32 /D_WINDOWS /W3 /GR /EHsc -DONNX_NAMESPACE=onnx_c2 /MP /bigobj\n--   Build type            : Release\n--   Compile definitions   :\n--\n--   BUILD_CAFFE2          : ON\n--   BUILD_ATEN            : OFF\n--   BUILD_BINARY          : ON\n--   BUILD_CUSTOM_PROTOBUF : ON\n--     Protobuf compiler   :\n--     Protobuf includes   :\n--     Protobuf libraries  :\n--   BUILD_DOCS            : OFF\n--   BUILD_PYTHON          : ON\n--     Python version      : 2.7.14\n--     Python includes     : C:/ProgramData/Anaconda2/include\n--   BUILD_SHARED_LIBS     : OFF\n--   BUILD_TEST            : OFF\n--   USE_ASAN              : OFF\n--   USE_CUDA              : ON\n--     CUDA static link    : OFF\n--     USE_CUDNN           : ON\n--     CUDA version        : 9.1\n--     cuDNN version       : 7.1.3\n--     CUDA root directory : C:/Program Files/NVIDIA GPU Computing Toolkit/CUDA/v9.1\n--     CUDA library        : C:/Program Files/NVIDIA GPU Computing Toolkit/CUDA/v9.1/lib/x64/cuda.lib\n--     cudart library      : C:/Program Files/NVIDIA GPU Computing Toolkit/CUDA/v9.1/lib/x64/cudart_static.lib\n--     cublas library      : C:/Program Files/NVIDIA GPU Computing Toolkit/CUDA/v9.1/lib/x64/cublas.lib;C:/Program Files/NVIDIA GPU Computing Toolkit/CUDA/v9.1/lib/x64/cublas_device.lib\n--     curand library      : C:/Program Files/NVIDIA GPU Computing Toolkit/CUDA/v9.1/lib/x64/curand.lib\n--     CuDNN library       : C:/Program Files/NVIDIA GPU Computing Toolkit/CUDA/v9.1/lib/x64/cudnn.lib\n--     nvrtc               : C:/Program Files/NVIDIA GPU Computing Toolkit/CUDA/v9.1/lib/x64/nvrtc.lib\n--     CUDA include path   : C:/Program Files/NVIDIA GPU Computing Toolkit/CUDA/v9.1/include\n--     NVCC executable     : C:/Program Files/NVIDIA GPU Computing Toolkit/CUDA/v9.1/bin/nvcc.exe\n--     CUDA host compiler  : $(VCInstallDir)bin\n--     USE_TENSORRT        : OFF\n--   USE_EIGEN_FOR_BLAS    : ON\n--   USE_FFMPEG            : OFF\n--   USE_GFLAGS            : OFF\n--   USE_GLOG              : OFF\n--   USE_GLOO              : OFF\n--   USE_LEVELDB           : OFF\n--   USE_LITE_PROTO        : OFF\n--   USE_LMDB              : OFF\n--   USE_METAL             : OFF\n--   USE_MKL               :\n--   USE_MOBILE_OPENGL     : OFF\n--   USE_MPI               : OFF\n--   USE_NCCL              : OFF\n--   USE_NERVANA_GPU       : OFF\n--   USE_NNPACK            : OFF\n--   USE_OBSERVERS         : ON\n--   USE_OPENCL            : OFF\n--   USE_OPENCV            : OFF\n--   USE_OPENMP            : OFF\n--   USE_PROF              : OFF\n--   USE_REDIS             : OFF\n--   USE_ROCKSDB           : OFF\n--   USE_ZMQ               : OFF\n-- Configuring done\n</code></pre>\n<p>I tried to add <code>pybind11_INCLUDE_DIR</code> and <code>Eigen3_DIR</code> to PATH (with path to pybind11 and eigen folder in third_party sub dir in pytorch), but could not resolve this problem.</p>\n<p>Thanks!</p>", "body_text": "Hi,\nI'm tring to build caffe2 from source with GPU support on windows 10 PC.\nI followed the instruction in https://caffe2.ai/docs/getting-started.html?platform=windows&configuration=compile until finished running build_windows.bat, it says:\n \"Caffe2 built successfully\"\nhowever it seems no caffe2_pybind11_state.pyd is produced.\nMy configuration looks like this:\nC:$USER\\source\\repos\\pytorch\\scripts>build_windows.bat\nThe system cannot find the drive specified.\nCAFFE2_ROOT=C:$USER\\source\\repos\\pytorch\\scripts\\..\nCMAKE_GENERATOR=\"Visual Studio 14 2015 Win64\"\nCMAKE_BUILD_TYPE=Release\nThe system cannot find the path specified.\nThe system cannot find the path specified.\n-- Selecting Windows SDK version 10.0.17134.0 to target Windows 10.0.16299.\n-- Need to define long as a separate typeid.\n-- std::exception_ptr is supported.\n-- NUMA is not available\n-- Current compiler supports avx2 extention. Will build perfkernels.\n-- Building using own protobuf under third_party per request.\n-- Use custom protobuf build.\n-- Caffe2 protobuf include directory: $<BUILD_INTERFACE:C:$USER\\source/repos/pytorch/third_party/protobuf/src>$<INSTALL_INTERFACE:include>\n-- The BLAS backend of choice:Eigen\nCMake Warning at cmake/Dependencies.cmake:289 (find_package):\n  By not providing \"FindEigen3.cmake\" in CMAKE_MODULE_PATH this project has\n  asked CMake to find a package configuration file provided by \"Eigen3\", but\n  CMake did not find one.\n\n  Could not find a package configuration file provided by \"Eigen3\" with any\n  of the following names:\n\n    Eigen3Config.cmake\n    eigen3-config.cmake\n\n  Add the installation prefix of \"Eigen3\" to CMAKE_PREFIX_PATH or set\n  \"Eigen3_DIR\" to a directory containing one of the above files.  If \"Eigen3\"\n  provides a separate development package or SDK, be sure it has been\n  installed.\nCall Stack (most recent call first):\n  CMakeLists.txt:182 (include)\n\n\n-- Did not find system Eigen. Using third party subdirectory.\n-- NumPy ver. 1.14.3 found (include: C:/Program Files/Python36/lib/site-packages/numpy/core/include)\n-- Could NOT find pybind11 (missing: pybind11_INCLUDE_DIR)\n-- Caffe2: CUDA detected: 9.1\n-- Found cuDNN: v7.1.3  (include: C:/Program Files/NVIDIA GPU Computing Toolkit/CUDA/v9.1/include, library: C:/Program Files/NVIDIA GPU Computing Toolkit/CUDA/v9.1/lib/x64/cudnn.lib)\n-- Added CUDA NVCC flags for: sm_50\n-- Could NOT find CUB (missing: CUB_INCLUDE_DIR)\n-- NCCL operators skipped due to no CUDA support\n-- Excluding ideep operators as we are not using ideep\n-- Excluding image processing operators due to no opencv\n-- Excluding video processing operators due to no opencv\n-- Excluding mkl operators as we are not using mkl\n-- MPI operators skipped due to no MPI support\n-- Include Observer library\n-- Using Lib\\site-packages as python relative installation path\n-- Automatically generating missing __init__.py files.\n-- A previous caffe2 cmake run already created the __init__.py files.\nCMake Warning at CMakeLists.txt:310 (message):\n  Generated cmake files are only fully tested if one builds with system glog,\n  gflags, and protobuf.  Other settings may generate files that are not well\n  tested.\n\n\nCMake Warning at CMakeLists.txt:355 (message):\n  Generated cmake files are only available when building shared libs.\n\n\n--\n-- ******** Summary ********\n-- General:\n--   CMake version         : 3.11.1\n--   CMake command         : C:/Program Files/CMake/bin/cmake.exe\n--   Git version           : v0.1.11-8485-g75cf0faf4-dirty\n--   System                : Windows\n--   C++ compiler          : C:/Program Files (x86)/Microsoft Visual Studio 14.0/VC/bin/x86_amd64/cl.exe\n--   C++ compiler version  : 19.0.24234.1\n--   BLAS                  : Eigen\n--   CXX flags             : /DWIN32 /D_WINDOWS /W3 /GR /EHsc -DONNX_NAMESPACE=onnx_c2 /MP /bigobj\n--   Build type            : Release\n--   Compile definitions   :\n--\n--   BUILD_CAFFE2          : ON\n--   BUILD_ATEN            : OFF\n--   BUILD_BINARY          : ON\n--   BUILD_CUSTOM_PROTOBUF : ON\n--     Protobuf compiler   :\n--     Protobuf includes   :\n--     Protobuf libraries  :\n--   BUILD_DOCS            : OFF\n--   BUILD_PYTHON          : ON\n--     Python version      : 2.7.14\n--     Python includes     : C:/ProgramData/Anaconda2/include\n--   BUILD_SHARED_LIBS     : OFF\n--   BUILD_TEST            : OFF\n--   USE_ASAN              : OFF\n--   USE_CUDA              : ON\n--     CUDA static link    : OFF\n--     USE_CUDNN           : ON\n--     CUDA version        : 9.1\n--     cuDNN version       : 7.1.3\n--     CUDA root directory : C:/Program Files/NVIDIA GPU Computing Toolkit/CUDA/v9.1\n--     CUDA library        : C:/Program Files/NVIDIA GPU Computing Toolkit/CUDA/v9.1/lib/x64/cuda.lib\n--     cudart library      : C:/Program Files/NVIDIA GPU Computing Toolkit/CUDA/v9.1/lib/x64/cudart_static.lib\n--     cublas library      : C:/Program Files/NVIDIA GPU Computing Toolkit/CUDA/v9.1/lib/x64/cublas.lib;C:/Program Files/NVIDIA GPU Computing Toolkit/CUDA/v9.1/lib/x64/cublas_device.lib\n--     curand library      : C:/Program Files/NVIDIA GPU Computing Toolkit/CUDA/v9.1/lib/x64/curand.lib\n--     CuDNN library       : C:/Program Files/NVIDIA GPU Computing Toolkit/CUDA/v9.1/lib/x64/cudnn.lib\n--     nvrtc               : C:/Program Files/NVIDIA GPU Computing Toolkit/CUDA/v9.1/lib/x64/nvrtc.lib\n--     CUDA include path   : C:/Program Files/NVIDIA GPU Computing Toolkit/CUDA/v9.1/include\n--     NVCC executable     : C:/Program Files/NVIDIA GPU Computing Toolkit/CUDA/v9.1/bin/nvcc.exe\n--     CUDA host compiler  : $(VCInstallDir)bin\n--     USE_TENSORRT        : OFF\n--   USE_EIGEN_FOR_BLAS    : ON\n--   USE_FFMPEG            : OFF\n--   USE_GFLAGS            : OFF\n--   USE_GLOG              : OFF\n--   USE_GLOO              : OFF\n--   USE_LEVELDB           : OFF\n--   USE_LITE_PROTO        : OFF\n--   USE_LMDB              : OFF\n--   USE_METAL             : OFF\n--   USE_MKL               :\n--   USE_MOBILE_OPENGL     : OFF\n--   USE_MPI               : OFF\n--   USE_NCCL              : OFF\n--   USE_NERVANA_GPU       : OFF\n--   USE_NNPACK            : OFF\n--   USE_OBSERVERS         : ON\n--   USE_OPENCL            : OFF\n--   USE_OPENCV            : OFF\n--   USE_OPENMP            : OFF\n--   USE_PROF              : OFF\n--   USE_REDIS             : OFF\n--   USE_ROCKSDB           : OFF\n--   USE_ZMQ               : OFF\n-- Configuring done\n\nI tried to add pybind11_INCLUDE_DIR and Eigen3_DIR to PATH (with path to pybind11 and eigen folder in third_party sub dir in pytorch), but could not resolve this problem.\nThanks!", "body": "Hi,\r\n\r\nI'm tring to build caffe2 from source with GPU support on windows 10 PC.\r\n\r\nI followed the instruction in https://caffe2.ai/docs/getting-started.html?platform=windows&configuration=compile until finished running build_windows.bat, it says:\r\n` \"Caffe2 built successfully\"`\r\n\r\nhowever it seems no caffe2_pybind11_state.pyd is produced.\r\n\r\nMy configuration looks like this:\r\n\r\n\r\n```\r\nC:$USER\\source\\repos\\pytorch\\scripts>build_windows.bat\r\nThe system cannot find the drive specified.\r\nCAFFE2_ROOT=C:$USER\\source\\repos\\pytorch\\scripts\\..\r\nCMAKE_GENERATOR=\"Visual Studio 14 2015 Win64\"\r\nCMAKE_BUILD_TYPE=Release\r\nThe system cannot find the path specified.\r\nThe system cannot find the path specified.\r\n-- Selecting Windows SDK version 10.0.17134.0 to target Windows 10.0.16299.\r\n-- Need to define long as a separate typeid.\r\n-- std::exception_ptr is supported.\r\n-- NUMA is not available\r\n-- Current compiler supports avx2 extention. Will build perfkernels.\r\n-- Building using own protobuf under third_party per request.\r\n-- Use custom protobuf build.\r\n-- Caffe2 protobuf include directory: $<BUILD_INTERFACE:C:$USER\\source/repos/pytorch/third_party/protobuf/src>$<INSTALL_INTERFACE:include>\r\n-- The BLAS backend of choice:Eigen\r\nCMake Warning at cmake/Dependencies.cmake:289 (find_package):\r\n  By not providing \"FindEigen3.cmake\" in CMAKE_MODULE_PATH this project has\r\n  asked CMake to find a package configuration file provided by \"Eigen3\", but\r\n  CMake did not find one.\r\n\r\n  Could not find a package configuration file provided by \"Eigen3\" with any\r\n  of the following names:\r\n\r\n    Eigen3Config.cmake\r\n    eigen3-config.cmake\r\n\r\n  Add the installation prefix of \"Eigen3\" to CMAKE_PREFIX_PATH or set\r\n  \"Eigen3_DIR\" to a directory containing one of the above files.  If \"Eigen3\"\r\n  provides a separate development package or SDK, be sure it has been\r\n  installed.\r\nCall Stack (most recent call first):\r\n  CMakeLists.txt:182 (include)\r\n\r\n\r\n-- Did not find system Eigen. Using third party subdirectory.\r\n-- NumPy ver. 1.14.3 found (include: C:/Program Files/Python36/lib/site-packages/numpy/core/include)\r\n-- Could NOT find pybind11 (missing: pybind11_INCLUDE_DIR)\r\n-- Caffe2: CUDA detected: 9.1\r\n-- Found cuDNN: v7.1.3  (include: C:/Program Files/NVIDIA GPU Computing Toolkit/CUDA/v9.1/include, library: C:/Program Files/NVIDIA GPU Computing Toolkit/CUDA/v9.1/lib/x64/cudnn.lib)\r\n-- Added CUDA NVCC flags for: sm_50\r\n-- Could NOT find CUB (missing: CUB_INCLUDE_DIR)\r\n-- NCCL operators skipped due to no CUDA support\r\n-- Excluding ideep operators as we are not using ideep\r\n-- Excluding image processing operators due to no opencv\r\n-- Excluding video processing operators due to no opencv\r\n-- Excluding mkl operators as we are not using mkl\r\n-- MPI operators skipped due to no MPI support\r\n-- Include Observer library\r\n-- Using Lib\\site-packages as python relative installation path\r\n-- Automatically generating missing __init__.py files.\r\n-- A previous caffe2 cmake run already created the __init__.py files.\r\nCMake Warning at CMakeLists.txt:310 (message):\r\n  Generated cmake files are only fully tested if one builds with system glog,\r\n  gflags, and protobuf.  Other settings may generate files that are not well\r\n  tested.\r\n\r\n\r\nCMake Warning at CMakeLists.txt:355 (message):\r\n  Generated cmake files are only available when building shared libs.\r\n\r\n\r\n--\r\n-- ******** Summary ********\r\n-- General:\r\n--   CMake version         : 3.11.1\r\n--   CMake command         : C:/Program Files/CMake/bin/cmake.exe\r\n--   Git version           : v0.1.11-8485-g75cf0faf4-dirty\r\n--   System                : Windows\r\n--   C++ compiler          : C:/Program Files (x86)/Microsoft Visual Studio 14.0/VC/bin/x86_amd64/cl.exe\r\n--   C++ compiler version  : 19.0.24234.1\r\n--   BLAS                  : Eigen\r\n--   CXX flags             : /DWIN32 /D_WINDOWS /W3 /GR /EHsc -DONNX_NAMESPACE=onnx_c2 /MP /bigobj\r\n--   Build type            : Release\r\n--   Compile definitions   :\r\n--\r\n--   BUILD_CAFFE2          : ON\r\n--   BUILD_ATEN            : OFF\r\n--   BUILD_BINARY          : ON\r\n--   BUILD_CUSTOM_PROTOBUF : ON\r\n--     Protobuf compiler   :\r\n--     Protobuf includes   :\r\n--     Protobuf libraries  :\r\n--   BUILD_DOCS            : OFF\r\n--   BUILD_PYTHON          : ON\r\n--     Python version      : 2.7.14\r\n--     Python includes     : C:/ProgramData/Anaconda2/include\r\n--   BUILD_SHARED_LIBS     : OFF\r\n--   BUILD_TEST            : OFF\r\n--   USE_ASAN              : OFF\r\n--   USE_CUDA              : ON\r\n--     CUDA static link    : OFF\r\n--     USE_CUDNN           : ON\r\n--     CUDA version        : 9.1\r\n--     cuDNN version       : 7.1.3\r\n--     CUDA root directory : C:/Program Files/NVIDIA GPU Computing Toolkit/CUDA/v9.1\r\n--     CUDA library        : C:/Program Files/NVIDIA GPU Computing Toolkit/CUDA/v9.1/lib/x64/cuda.lib\r\n--     cudart library      : C:/Program Files/NVIDIA GPU Computing Toolkit/CUDA/v9.1/lib/x64/cudart_static.lib\r\n--     cublas library      : C:/Program Files/NVIDIA GPU Computing Toolkit/CUDA/v9.1/lib/x64/cublas.lib;C:/Program Files/NVIDIA GPU Computing Toolkit/CUDA/v9.1/lib/x64/cublas_device.lib\r\n--     curand library      : C:/Program Files/NVIDIA GPU Computing Toolkit/CUDA/v9.1/lib/x64/curand.lib\r\n--     CuDNN library       : C:/Program Files/NVIDIA GPU Computing Toolkit/CUDA/v9.1/lib/x64/cudnn.lib\r\n--     nvrtc               : C:/Program Files/NVIDIA GPU Computing Toolkit/CUDA/v9.1/lib/x64/nvrtc.lib\r\n--     CUDA include path   : C:/Program Files/NVIDIA GPU Computing Toolkit/CUDA/v9.1/include\r\n--     NVCC executable     : C:/Program Files/NVIDIA GPU Computing Toolkit/CUDA/v9.1/bin/nvcc.exe\r\n--     CUDA host compiler  : $(VCInstallDir)bin\r\n--     USE_TENSORRT        : OFF\r\n--   USE_EIGEN_FOR_BLAS    : ON\r\n--   USE_FFMPEG            : OFF\r\n--   USE_GFLAGS            : OFF\r\n--   USE_GLOG              : OFF\r\n--   USE_GLOO              : OFF\r\n--   USE_LEVELDB           : OFF\r\n--   USE_LITE_PROTO        : OFF\r\n--   USE_LMDB              : OFF\r\n--   USE_METAL             : OFF\r\n--   USE_MKL               :\r\n--   USE_MOBILE_OPENGL     : OFF\r\n--   USE_MPI               : OFF\r\n--   USE_NCCL              : OFF\r\n--   USE_NERVANA_GPU       : OFF\r\n--   USE_NNPACK            : OFF\r\n--   USE_OBSERVERS         : ON\r\n--   USE_OPENCL            : OFF\r\n--   USE_OPENCV            : OFF\r\n--   USE_OPENMP            : OFF\r\n--   USE_PROF              : OFF\r\n--   USE_REDIS             : OFF\r\n--   USE_ROCKSDB           : OFF\r\n--   USE_ZMQ               : OFF\r\n-- Configuring done\r\n```\r\n\r\nI tried to add `pybind11_INCLUDE_DIR` and `Eigen3_DIR` to PATH (with path to pybind11 and eigen folder in third_party sub dir in pytorch), but could not resolve this problem.\r\n\r\nThanks! "}