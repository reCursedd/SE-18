{"url": "https://api.github.com/repos/pytorch/pytorch/issues/comments/287608320", "html_url": "https://github.com/pytorch/pytorch/pull/802#issuecomment-287608320", "issue_url": "https://api.github.com/repos/pytorch/pytorch/issues/802", "id": 287608320, "node_id": "MDEyOklzc3VlQ29tbWVudDI4NzYwODMyMA==", "user": {"login": "fmassa", "id": 9110200, "node_id": "MDQ6VXNlcjkxMTAyMDA=", "avatar_url": "https://avatars2.githubusercontent.com/u/9110200?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fmassa", "html_url": "https://github.com/fmassa", "followers_url": "https://api.github.com/users/fmassa/followers", "following_url": "https://api.github.com/users/fmassa/following{/other_user}", "gists_url": "https://api.github.com/users/fmassa/gists{/gist_id}", "starred_url": "https://api.github.com/users/fmassa/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fmassa/subscriptions", "organizations_url": "https://api.github.com/users/fmassa/orgs", "repos_url": "https://api.github.com/users/fmassa/repos", "events_url": "https://api.github.com/users/fmassa/events{/privacy}", "received_events_url": "https://api.github.com/users/fmassa/received_events", "type": "User", "site_admin": false}, "created_at": "2017-03-19T10:53:09Z", "updated_at": "2017-03-19T10:53:09Z", "author_association": "MEMBER", "body_html": "<p><a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=4583066\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/apaszke\">@apaszke</a> This is a solution, but maybe not ideal as it forces the user to have an extra class for classification (the ignored class), and then at test time it needs to narrow all but the selected class before applying softmax (or we could end up having ignored classes as our prediction).<br>\nIt's possible, but maybe not super convenient.</p>", "body_text": "@apaszke This is a solution, but maybe not ideal as it forces the user to have an extra class for classification (the ignored class), and then at test time it needs to narrow all but the selected class before applying softmax (or we could end up having ignored classes as our prediction).\nIt's possible, but maybe not super convenient.", "body": "@apaszke This is a solution, but maybe not ideal as it forces the user to have an extra class for classification (the ignored class), and then at test time it needs to narrow all but the selected class before applying softmax (or we could end up having ignored classes as our prediction).\r\nIt's possible, but maybe not super convenient."}