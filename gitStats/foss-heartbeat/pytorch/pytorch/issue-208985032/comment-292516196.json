{"url": "https://api.github.com/repos/pytorch/pytorch/issues/comments/292516196", "html_url": "https://github.com/pytorch/pytorch/pull/802#issuecomment-292516196", "issue_url": "https://api.github.com/repos/pytorch/pytorch/issues/802", "id": 292516196, "node_id": "MDEyOklzc3VlQ29tbWVudDI5MjUxNjE5Ng==", "user": {"login": "wkentaro", "id": 4310419, "node_id": "MDQ6VXNlcjQzMTA0MTk=", "avatar_url": "https://avatars2.githubusercontent.com/u/4310419?v=4", "gravatar_id": "", "url": "https://api.github.com/users/wkentaro", "html_url": "https://github.com/wkentaro", "followers_url": "https://api.github.com/users/wkentaro/followers", "following_url": "https://api.github.com/users/wkentaro/following{/other_user}", "gists_url": "https://api.github.com/users/wkentaro/gists{/gist_id}", "starred_url": "https://api.github.com/users/wkentaro/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/wkentaro/subscriptions", "organizations_url": "https://api.github.com/users/wkentaro/orgs", "repos_url": "https://api.github.com/users/wkentaro/repos", "events_url": "https://api.github.com/users/wkentaro/events{/privacy}", "received_events_url": "https://api.github.com/users/wkentaro/received_events", "type": "User", "site_admin": false}, "created_at": "2017-04-07T11:47:22Z", "updated_at": "2017-04-07T11:47:41Z", "author_association": "CONTRIBUTOR", "body_html": "<p>Thanks!<br>\nI see. Currently, I'm using advanced indexing of boolean array to extract values of interest (0 or positive label values in my case) from image, which returns 1d array, and then computing cross_entropy loss:<br>\n<a href=\"https://github.com/wkentaro/pytorch-fcn/blob/c5fe29ac8235befd186ef608fa4c6f5c51f56269/torchfcn/trainer.py#L25-L27\">https://github.com/wkentaro/pytorch-fcn/blob/c5fe29ac8235befd186ef608fa4c6f5c51f56269/torchfcn/trainer.py#L25-L27</a><br>\nBut I'm not sure if masking in kernel is better than that. Maybe it is faster than the boolean array indexing?</p>", "body_text": "Thanks!\nI see. Currently, I'm using advanced indexing of boolean array to extract values of interest (0 or positive label values in my case) from image, which returns 1d array, and then computing cross_entropy loss:\nhttps://github.com/wkentaro/pytorch-fcn/blob/c5fe29ac8235befd186ef608fa4c6f5c51f56269/torchfcn/trainer.py#L25-L27\nBut I'm not sure if masking in kernel is better than that. Maybe it is faster than the boolean array indexing?", "body": "Thanks!\r\nI see. Currently, I'm using advanced indexing of boolean array to extract values of interest (0 or positive label values in my case) from image, which returns 1d array, and then computing cross_entropy loss:\r\nhttps://github.com/wkentaro/pytorch-fcn/blob/c5fe29ac8235befd186ef608fa4c6f5c51f56269/torchfcn/trainer.py#L25-L27\r\nBut I'm not sure if masking in kernel is better than that. Maybe it is faster than the boolean array indexing?"}