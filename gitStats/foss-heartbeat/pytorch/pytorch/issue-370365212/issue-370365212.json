{"url": "https://api.github.com/repos/pytorch/pytorch/issues/12683", "repository_url": "https://api.github.com/repos/pytorch/pytorch", "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/12683/labels{/name}", "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/12683/comments", "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/12683/events", "html_url": "https://github.com/pytorch/pytorch/issues/12683", "id": 370365212, "node_id": "MDU6SXNzdWUzNzAzNjUyMTI=", "number": 12683, "title": "CPU triangular solve is slow", "user": {"login": "yaroslavvb", "id": 23068, "node_id": "MDQ6VXNlcjIzMDY4", "avatar_url": "https://avatars3.githubusercontent.com/u/23068?v=4", "gravatar_id": "", "url": "https://api.github.com/users/yaroslavvb", "html_url": "https://github.com/yaroslavvb", "followers_url": "https://api.github.com/users/yaroslavvb/followers", "following_url": "https://api.github.com/users/yaroslavvb/following{/other_user}", "gists_url": "https://api.github.com/users/yaroslavvb/gists{/gist_id}", "starred_url": "https://api.github.com/users/yaroslavvb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/yaroslavvb/subscriptions", "organizations_url": "https://api.github.com/users/yaroslavvb/orgs", "repos_url": "https://api.github.com/users/yaroslavvb/repos", "events_url": "https://api.github.com/users/yaroslavvb/events{/privacy}", "received_events_url": "https://api.github.com/users/yaroslavvb/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2018-10-15T22:15:46Z", "updated_at": "2018-10-17T21:36:43Z", "closed_at": null, "author_association": "NONE", "body_html": "<p>It would be nice to have a GPU version of triangular solve. It's needed for preconditioned stochastic gradient optimizer (<a href=\"https://ieeexplore.ieee.org/document/7875097/\" rel=\"nofollow\">paper</a>), and it's possibly the reason why TF implementation runs 3x faster than PyTorch version</p>\n<p>Here's a microbenchmark in milliseconds of 8000x8000 triangular solve:<br>\n<a href=\"https://github.com/yaroslavvb/newton/blob/master/benchmark_triangular.py\">https://github.com/yaroslavvb/newton/blob/master/benchmark_triangular.py</a></p>\n<pre><code>numpy: Times: min: 127.86, median: 128.12, mean: 128.31\ntensorflow: Times: min: 1.20, median: 1.20, mean: 1.20\npytorch: Times: min: 162.65, median: 162.65, mean: 162.65\n</code></pre>", "body_text": "It would be nice to have a GPU version of triangular solve. It's needed for preconditioned stochastic gradient optimizer (paper), and it's possibly the reason why TF implementation runs 3x faster than PyTorch version\nHere's a microbenchmark in milliseconds of 8000x8000 triangular solve:\nhttps://github.com/yaroslavvb/newton/blob/master/benchmark_triangular.py\nnumpy: Times: min: 127.86, median: 128.12, mean: 128.31\ntensorflow: Times: min: 1.20, median: 1.20, mean: 1.20\npytorch: Times: min: 162.65, median: 162.65, mean: 162.65", "body": "It would be nice to have a GPU version of triangular solve. It's needed for preconditioned stochastic gradient optimizer ([paper](https://ieeexplore.ieee.org/document/7875097/)), and it's possibly the reason why TF implementation runs 3x faster than PyTorch version\r\n\r\nHere's a microbenchmark in milliseconds of 8000x8000 triangular solve:\r\nhttps://github.com/yaroslavvb/newton/blob/master/benchmark_triangular.py\r\n\r\n```\r\nnumpy: Times: min: 127.86, median: 128.12, mean: 128.31\r\ntensorflow: Times: min: 1.20, median: 1.20, mean: 1.20\r\npytorch: Times: min: 162.65, median: 162.65, mean: 162.65\r\n```"}