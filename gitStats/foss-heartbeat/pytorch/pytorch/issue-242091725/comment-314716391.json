{"url": "https://api.github.com/repos/pytorch/pytorch/issues/comments/314716391", "html_url": "https://github.com/pytorch/pytorch/issues/2052#issuecomment-314716391", "issue_url": "https://api.github.com/repos/pytorch/pytorch/issues/2052", "id": 314716391, "node_id": "MDEyOklzc3VlQ29tbWVudDMxNDcxNjM5MQ==", "user": {"login": "trypag", "id": 13003839, "node_id": "MDQ6VXNlcjEzMDAzODM5", "avatar_url": "https://avatars1.githubusercontent.com/u/13003839?v=4", "gravatar_id": "", "url": "https://api.github.com/users/trypag", "html_url": "https://github.com/trypag", "followers_url": "https://api.github.com/users/trypag/followers", "following_url": "https://api.github.com/users/trypag/following{/other_user}", "gists_url": "https://api.github.com/users/trypag/gists{/gist_id}", "starred_url": "https://api.github.com/users/trypag/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/trypag/subscriptions", "organizations_url": "https://api.github.com/users/trypag/orgs", "repos_url": "https://api.github.com/users/trypag/repos", "events_url": "https://api.github.com/users/trypag/events{/privacy}", "received_events_url": "https://api.github.com/users/trypag/received_events", "type": "User", "site_admin": false}, "created_at": "2017-07-12T10:04:50Z", "updated_at": "2017-07-12T10:04:50Z", "author_association": "NONE", "body_html": "<p><a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=4583066\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/apaszke\">@apaszke</a> You made a good point that using <code>.share_point_()</code> would help, it's helps to save a little bit of memory.<br>\nNote : this is a small scale example, classic dataset will be at least 10x bigger.</p>\n<ul>\n<li>without <code>.share_memory</code>, <strong>1 worker</strong> : 1.81 GB</li>\n<li>without <code>.share_memory</code>, <strong>6 worker</strong> : 2.73 GB</li>\n<li>with <code>.share_memory</code>, <strong>6 worker</strong> : 2.3 GB</li>\n</ul>\n<p>This reduces the increase by 46%. I guess the 54% left are unshared python structures, I have no idea how to track this.</p>", "body_text": "@apaszke You made a good point that using .share_point_() would help, it's helps to save a little bit of memory.\nNote : this is a small scale example, classic dataset will be at least 10x bigger.\n\nwithout .share_memory, 1 worker : 1.81 GB\nwithout .share_memory, 6 worker : 2.73 GB\nwith .share_memory, 6 worker : 2.3 GB\n\nThis reduces the increase by 46%. I guess the 54% left are unshared python structures, I have no idea how to track this.", "body": "@apaszke You made a good point that using `.share_point_()` would help, it's helps to save a little bit of memory.\r\nNote : this is a small scale example, classic dataset will be at least 10x bigger.\r\n* without `.share_memory`, **1 worker** : 1.81 GB\r\n* without `.share_memory`, **6 worker** : 2.73 GB\r\n* with `.share_memory`, **6 worker** : 2.3 GB\r\n\r\nThis reduces the increase by 46%. I guess the 54% left are unshared python structures, I have no idea how to track this."}