{"url": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/185830727", "pull_request_review_id": 117299804, "id": 185830727, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4NTgzMDcyNw==", "diff_hunk": "@@ -394,27 +394,34 @@ Tensor& stack_out(Tensor& result, TensorList tensors, int64_t dim) {\n }\n \n static inline Tensor & sparse_transpose_(Tensor & self, int64_t dim0, int64_t dim1) {\n-  int64_t ndimI = self._indices().size(0);\n+  int64_t ndimI = self._dimI();\n   if (dim0 >= ndimI || dim1 >= ndimI) {\n     AT_ERROR(\n-        \"sparse transpose_: transposed dimensions must be sparse \",\n+        \"sparse transpose: transposed dimensions must be sparse \",\n         \"Got nDimI: \", ndimI, \", d0: \", dim0, \", d1: \", dim1);\n   }\n \n-  auto indices = self._indices();\n-  auto row0 = indices.select(0, dim0);\n-  auto row1 = indices.select(0, dim1);\n+  if (self._indices().numel() == 0 && self._values().numel() == 0) {\n+    std::vector<int64_t> sizes(self.sizes());\n+    std::swap(sizes[dim0], sizes[dim1]);\n \n-  // swap row0 and row1\n-  auto tmp = at::zeros_like(row0);\n-  tmp.copy_(row0);\n-  row0.copy_(row1);\n-  row1.copy_(tmp);\n+    return self.sparse_raw_resize_(sizes, self._dimI(), self._dimV());\n+  } else {", "path": "aten/src/ATen/native/TensorShape.cpp", "position": 26, "original_position": 26, "commit_id": "0c4e768ae388bf16cdaf96bdd095aa7477082568", "original_commit_id": "c927a779158ab6f370c00146403821ddd75c86d4", "user": {"login": "gchanan", "id": 3768583, "node_id": "MDQ6VXNlcjM3Njg1ODM=", "avatar_url": "https://avatars2.githubusercontent.com/u/3768583?v=4", "gravatar_id": "", "url": "https://api.github.com/users/gchanan", "html_url": "https://github.com/gchanan", "followers_url": "https://api.github.com/users/gchanan/followers", "following_url": "https://api.github.com/users/gchanan/following{/other_user}", "gists_url": "https://api.github.com/users/gchanan/gists{/gist_id}", "starred_url": "https://api.github.com/users/gchanan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/gchanan/subscriptions", "organizations_url": "https://api.github.com/users/gchanan/orgs", "repos_url": "https://api.github.com/users/gchanan/repos", "events_url": "https://api.github.com/users/gchanan/events{/privacy}", "received_events_url": "https://api.github.com/users/gchanan/received_events", "type": "User", "site_admin": false}, "body": "IMO it's easier to follow with the else (you don't have to understand anything in the if.", "created_at": "2018-05-03T15:02:50Z", "updated_at": "2018-11-23T15:43:34Z", "html_url": "https://github.com/pytorch/pytorch/pull/7200#discussion_r185830727", "pull_request_url": "https://api.github.com/repos/pytorch/pytorch/pulls/7200", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/185830727"}, "html": {"href": "https://github.com/pytorch/pytorch/pull/7200#discussion_r185830727"}, "pull_request": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/7200"}}, "body_html": "<p>IMO it's easier to follow with the else (you don't have to understand anything in the if.</p>", "body_text": "IMO it's easier to follow with the else (you don't have to understand anything in the if.", "in_reply_to_id": 185821253}