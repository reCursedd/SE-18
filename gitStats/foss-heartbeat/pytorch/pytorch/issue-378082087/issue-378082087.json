{"url": "https://api.github.com/repos/pytorch/pytorch/issues/13649", "repository_url": "https://api.github.com/repos/pytorch/pytorch", "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/13649/labels{/name}", "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/13649/comments", "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/13649/events", "html_url": "https://github.com/pytorch/pytorch/pull/13649", "id": 378082087, "node_id": "MDExOlB1bGxSZXF1ZXN0MjI4ODcyODg3", "number": 13649, "title": " Use SmallVector for TensorImpl sizes and strides.", "user": {"login": "zou3519", "id": 5652049, "node_id": "MDQ6VXNlcjU2NTIwNDk=", "avatar_url": "https://avatars3.githubusercontent.com/u/5652049?v=4", "gravatar_id": "", "url": "https://api.github.com/users/zou3519", "html_url": "https://github.com/zou3519", "followers_url": "https://api.github.com/users/zou3519/followers", "following_url": "https://api.github.com/users/zou3519/following{/other_user}", "gists_url": "https://api.github.com/users/zou3519/gists{/gist_id}", "starred_url": "https://api.github.com/users/zou3519/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/zou3519/subscriptions", "organizations_url": "https://api.github.com/users/zou3519/orgs", "repos_url": "https://api.github.com/users/zou3519/repos", "events_url": "https://api.github.com/users/zou3519/events{/privacy}", "received_events_url": "https://api.github.com/users/zou3519/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2018-11-06T23:44:51Z", "updated_at": "2018-11-23T15:54:38Z", "closed_at": "2018-11-12T18:42:14Z", "author_association": "CONTRIBUTOR", "pull_request": {"url": "https://api.github.com/repos/pytorch/pytorch/pulls/13649", "html_url": "https://github.com/pytorch/pytorch/pull/13649", "diff_url": "https://github.com/pytorch/pytorch/pull/13649.diff", "patch_url": "https://github.com/pytorch/pytorch/pull/13649.patch"}, "body_html": "<p>This removes dynamic allocations for sizes/strides for tensors with &lt;= 5<br>\ndims. This should cover the most common tensor use cases; we use a lot<br>\nof 4D tensors in images (N, C, H, W) and LSTMs use tensors with 3 or fewer dims.</p>\n<p>Benchmarking results can be found here:<br>\n<a href=\"https://gist.github.com/zou3519/ce4182722ae7e2a228bc8b57ae60b0e9\">https://gist.github.com/zou3519/ce4182722ae7e2a228bc8b57ae60b0e9</a><br>\nThe quick summary is that this PR:</p>\n<ul>\n<li>makes aten LSTM's forward pass ~1ms faster and improves JIT lstm perf<br>\nas well</li>\n<li>Tensor as_strided is now 200ns faster for dimensions &lt;= 5</li>\n<li>at::empty performance is 200ns slower for dimensions &gt; 5. For dims &lt;= 5,<br>\nthere is no noticeable perf change.</li>\n<li>Variable ops are 200-500ns faster because Variables never used their<br>\nsizes/strides fields in the first place.</li>\n</ul>\n<p>Test Plan:</p>\n<ul>\n<li>run tests</li>\n</ul>", "body_text": "This removes dynamic allocations for sizes/strides for tensors with <= 5\ndims. This should cover the most common tensor use cases; we use a lot\nof 4D tensors in images (N, C, H, W) and LSTMs use tensors with 3 or fewer dims.\nBenchmarking results can be found here:\nhttps://gist.github.com/zou3519/ce4182722ae7e2a228bc8b57ae60b0e9\nThe quick summary is that this PR:\n\nmakes aten LSTM's forward pass ~1ms faster and improves JIT lstm perf\nas well\nTensor as_strided is now 200ns faster for dimensions <= 5\nat::empty performance is 200ns slower for dimensions > 5. For dims <= 5,\nthere is no noticeable perf change.\nVariable ops are 200-500ns faster because Variables never used their\nsizes/strides fields in the first place.\n\nTest Plan:\n\nrun tests", "body": "This removes dynamic allocations for sizes/strides for tensors with <= 5\r\ndims. This should cover the most common tensor use cases; we use a lot\r\nof 4D tensors in images (N, C, H, W) and LSTMs use tensors with 3 or fewer dims.\r\n\r\nBenchmarking results can be found here:\r\nhttps://gist.github.com/zou3519/ce4182722ae7e2a228bc8b57ae60b0e9\r\nThe quick summary is that this PR:\r\n- makes aten LSTM's forward pass ~1ms faster and improves JIT lstm perf\r\n  as well\r\n- Tensor as_strided is now 200ns faster for dimensions <= 5\r\n- at::empty performance is 200ns slower for dimensions > 5. For dims <= 5,\r\n  there is no noticeable perf change.\r\n- Variable ops are 200-500ns faster because Variables never used their\r\n  sizes/strides fields in the first place.\r\n\r\nTest Plan:\r\n- run tests"}