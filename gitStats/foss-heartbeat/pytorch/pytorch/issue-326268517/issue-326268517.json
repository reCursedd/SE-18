{"url": "https://api.github.com/repos/pytorch/pytorch/issues/7821", "repository_url": "https://api.github.com/repos/pytorch/pytorch", "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/7821/labels{/name}", "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/7821/comments", "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/7821/events", "html_url": "https://github.com/pytorch/pytorch/pull/7821", "id": 326268517, "node_id": "MDExOlB1bGxSZXF1ZXN0MTkwNDAyODQ3", "number": 7821, "title": "Cosine Annealing with warm restarts", "user": {"login": "roveo", "id": 5427958, "node_id": "MDQ6VXNlcjU0Mjc5NTg=", "avatar_url": "https://avatars1.githubusercontent.com/u/5427958?v=4", "gravatar_id": "", "url": "https://api.github.com/users/roveo", "html_url": "https://github.com/roveo", "followers_url": "https://api.github.com/users/roveo/followers", "following_url": "https://api.github.com/users/roveo/following{/other_user}", "gists_url": "https://api.github.com/users/roveo/gists{/gist_id}", "starred_url": "https://api.github.com/users/roveo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/roveo/subscriptions", "organizations_url": "https://api.github.com/users/roveo/orgs", "repos_url": "https://api.github.com/users/roveo/repos", "events_url": "https://api.github.com/users/roveo/events{/privacy}", "received_events_url": "https://api.github.com/users/roveo/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 545367190, "node_id": "MDU6TGFiZWw1NDUzNjcxOTA=", "url": "https://api.github.com/repos/pytorch/pytorch/labels/awaiting%20response", "name": "awaiting response", "color": "5319e7", "default": false}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2018-05-24T19:57:29Z", "updated_at": "2018-08-27T09:26:01Z", "closed_at": null, "author_association": "NONE", "pull_request": {"url": "https://api.github.com/repos/pytorch/pytorch/pulls/7821", "html_url": "https://github.com/pytorch/pytorch/pull/7821", "diff_url": "https://github.com/pytorch/pytorch/pull/7821.diff", "patch_url": "https://github.com/pytorch/pytorch/pull/7821.patch"}, "body_html": "<p>Proposed in <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load issue title\" data-id=\"238562664\" data-permission-text=\"Issue title is private\" data-url=\"https://github.com/pytorch/pytorch/issues/1909\" data-hovercard-type=\"issue\" data-hovercard-url=\"/pytorch/pytorch/issues/1909/hovercard\" href=\"https://github.com/pytorch/pytorch/issues/1909\">#1909</a>, requested in <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load issue title\" data-id=\"275285052\" data-permission-text=\"Issue title is private\" data-url=\"https://github.com/pytorch/pytorch/issues/3790\" data-hovercard-type=\"issue\" data-hovercard-url=\"/pytorch/pytorch/issues/3790/hovercard\" href=\"https://github.com/pytorch/pytorch/issues/3790\">#3790</a></p>\n<p>Implementation of cosine annealing with restarts, as proposed in the original paper.</p>\n<p>I also worked on a purely functional stateless implementation, but my math is not good enough. I managed to implement the restarts, but dynamic iterations with T_mult was too tricky. If anyone has an idea of how to do that, please share.</p>", "body_text": "Proposed in #1909, requested in #3790\nImplementation of cosine annealing with restarts, as proposed in the original paper.\nI also worked on a purely functional stateless implementation, but my math is not good enough. I managed to implement the restarts, but dynamic iterations with T_mult was too tricky. If anyone has an idea of how to do that, please share.", "body": "Proposed in #1909, requested in #3790\r\n\r\nImplementation of cosine annealing with restarts, as proposed in the original paper.\r\n\r\nI also worked on a purely functional stateless implementation, but my math is not good enough. I managed to implement the restarts, but dynamic iterations with T_mult was too tricky. If anyone has an idea of how to do that, please share."}