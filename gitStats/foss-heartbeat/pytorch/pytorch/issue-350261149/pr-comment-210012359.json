{"url": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/210012359", "pull_request_review_id": 146139581, "id": 210012359, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIxMDAxMjM1OQ==", "diff_hunk": "@@ -14,6 +14,7 @@ bool hasSideEffects(Node * node, bool_memo_type& memo) {\n   if (it != memo.end())\n     return it->second;\n   bool has_side_effects = node->kind() == prim::Print ||\n+    node->kind() == aten::append ||", "path": "torch/csrc/jit/passes/dead_code_elimination.cpp", "position": 4, "original_position": 4, "commit_id": "f2f80212356100179d9b3a4b06e5d8d964a9342c", "original_commit_id": "ed7ae9a02e7cff3a5178513b58dec6466a83913e", "user": {"login": "suo", "id": 1617424, "node_id": "MDQ6VXNlcjE2MTc0MjQ=", "avatar_url": "https://avatars2.githubusercontent.com/u/1617424?v=4", "gravatar_id": "", "url": "https://api.github.com/users/suo", "html_url": "https://github.com/suo", "followers_url": "https://api.github.com/users/suo/followers", "following_url": "https://api.github.com/users/suo/following{/other_user}", "gists_url": "https://api.github.com/users/suo/gists{/gist_id}", "starred_url": "https://api.github.com/users/suo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/suo/subscriptions", "organizations_url": "https://api.github.com/users/suo/orgs", "repos_url": "https://api.github.com/users/suo/repos", "events_url": "https://api.github.com/users/suo/events{/privacy}", "received_events_url": "https://api.github.com/users/suo/received_events", "type": "User", "site_admin": false}, "body": "As mentioned in the top-level reply, this is a sad consequence of using the fence design; `append` doesn't return anything so gets eliminated by DCE. \r\n\r\n> Finally, if a list is dead after an append, it is dead right before it as well, so in fact DCE is safe for appends.\r\n\r\nNot sure what you mean here? The problem is that `append` returns nothing, and so the output of the node has no uses and so DCE cleans it up. \r\n", "created_at": "2018-08-14T16:09:37Z", "updated_at": "2018-11-23T15:49:18Z", "html_url": "https://github.com/pytorch/pytorch/pull/10500#discussion_r210012359", "pull_request_url": "https://api.github.com/repos/pytorch/pytorch/pulls/10500", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/210012359"}, "html": {"href": "https://github.com/pytorch/pytorch/pull/10500#discussion_r210012359"}, "pull_request": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/10500"}}, "body_html": "<p>As mentioned in the top-level reply, this is a sad consequence of using the fence design; <code>append</code> doesn't return anything so gets eliminated by DCE.</p>\n<blockquote>\n<p>Finally, if a list is dead after an append, it is dead right before it as well, so in fact DCE is safe for appends.</p>\n</blockquote>\n<p>Not sure what you mean here? The problem is that <code>append</code> returns nothing, and so the output of the node has no uses and so DCE cleans it up.</p>", "body_text": "As mentioned in the top-level reply, this is a sad consequence of using the fence design; append doesn't return anything so gets eliminated by DCE.\n\nFinally, if a list is dead after an append, it is dead right before it as well, so in fact DCE is safe for appends.\n\nNot sure what you mean here? The problem is that append returns nothing, and so the output of the node has no uses and so DCE cleans it up.", "in_reply_to_id": 209985222}