{"url": "https://api.github.com/repos/pytorch/pytorch/issues/comments/375702538", "html_url": "https://github.com/pytorch/pytorch/issues/5958#issuecomment-375702538", "issue_url": "https://api.github.com/repos/pytorch/pytorch/issues/5958", "id": 375702538, "node_id": "MDEyOklzc3VlQ29tbWVudDM3NTcwMjUzOA==", "user": {"login": "sonack", "id": 12935189, "node_id": "MDQ6VXNlcjEyOTM1MTg5", "avatar_url": "https://avatars1.githubusercontent.com/u/12935189?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sonack", "html_url": "https://github.com/sonack", "followers_url": "https://api.github.com/users/sonack/followers", "following_url": "https://api.github.com/users/sonack/following{/other_user}", "gists_url": "https://api.github.com/users/sonack/gists{/gist_id}", "starred_url": "https://api.github.com/users/sonack/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sonack/subscriptions", "organizations_url": "https://api.github.com/users/sonack/orgs", "repos_url": "https://api.github.com/users/sonack/repos", "events_url": "https://api.github.com/users/sonack/events{/privacy}", "received_events_url": "https://api.github.com/users/sonack/received_events", "type": "User", "site_admin": false}, "created_at": "2018-03-23T15:26:58Z", "updated_at": "2018-03-23T15:26:58Z", "author_association": "NONE", "body_html": "<p><a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=3186211\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/Erotemic\">@Erotemic</a>  So, If I want to get an intermediate output of a network's some layer, I have to pay such a lot effort when using multiple GPU. I have just came to a idea that maybe I can use dataparallel wrap the before and after sub networks separately individually, i.e. treating the interested intermediate output as a fake output where are the workers' production will be merged. But I haven't tried it because it may requires my modifying the network's definition, which isn't as clean as I expected. But maybe it is a workaround. What do you think of it?</p>", "body_text": "@Erotemic  So, If I want to get an intermediate output of a network's some layer, I have to pay such a lot effort when using multiple GPU. I have just came to a idea that maybe I can use dataparallel wrap the before and after sub networks separately individually, i.e. treating the interested intermediate output as a fake output where are the workers' production will be merged. But I haven't tried it because it may requires my modifying the network's definition, which isn't as clean as I expected. But maybe it is a workaround. What do you think of it?", "body": "@Erotemic  So, If I want to get an intermediate output of a network's some layer, I have to pay such a lot effort when using multiple GPU. I have just came to a idea that maybe I can use dataparallel wrap the before and after sub networks separately individually, i.e. treating the interested intermediate output as a fake output where are the workers' production will be merged. But I haven't tried it because it may requires my modifying the network's definition, which isn't as clean as I expected. But maybe it is a workaround. What do you think of it?"}