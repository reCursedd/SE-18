{"url": "https://api.github.com/repos/pytorch/pytorch/issues/comments/368056092", "html_url": "https://github.com/pytorch/pytorch/pull/5368#issuecomment-368056092", "issue_url": "https://api.github.com/repos/pytorch/pytorch/issues/5368", "id": 368056092, "node_id": "MDEyOklzc3VlQ29tbWVudDM2ODA1NjA5Mg==", "user": {"login": "gchanan", "id": 3768583, "node_id": "MDQ6VXNlcjM3Njg1ODM=", "avatar_url": "https://avatars2.githubusercontent.com/u/3768583?v=4", "gravatar_id": "", "url": "https://api.github.com/users/gchanan", "html_url": "https://github.com/gchanan", "followers_url": "https://api.github.com/users/gchanan/followers", "following_url": "https://api.github.com/users/gchanan/following{/other_user}", "gists_url": "https://api.github.com/users/gchanan/gists{/gist_id}", "starred_url": "https://api.github.com/users/gchanan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/gchanan/subscriptions", "organizations_url": "https://api.github.com/users/gchanan/orgs", "repos_url": "https://api.github.com/users/gchanan/repos", "events_url": "https://api.github.com/users/gchanan/events{/privacy}", "received_events_url": "https://api.github.com/users/gchanan/received_events", "type": "User", "site_admin": false}, "created_at": "2018-02-23T16:14:51Z", "updated_at": "2018-02-23T16:14:51Z", "author_association": "CONTRIBUTOR", "body_html": "<p>As another data point -- on linux with python I can call torch.cuda._lazy_init() even if I've compiled with NO_CUDA=1.  Given that torch::cuda::lazy_init() is just calling that (if the type is CUDA, which it will never be since cuda isn't enabled) -- the guarded function should be safe to call unconditionally as well.</p>", "body_text": "As another data point -- on linux with python I can call torch.cuda._lazy_init() even if I've compiled with NO_CUDA=1.  Given that torch::cuda::lazy_init() is just calling that (if the type is CUDA, which it will never be since cuda isn't enabled) -- the guarded function should be safe to call unconditionally as well.", "body": "As another data point -- on linux with python I can call torch.cuda._lazy_init() even if I've compiled with NO_CUDA=1.  Given that torch::cuda::lazy_init() is just calling that (if the type is CUDA, which it will never be since cuda isn't enabled) -- the guarded function should be safe to call unconditionally as well."}