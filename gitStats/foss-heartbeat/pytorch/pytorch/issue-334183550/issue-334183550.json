{"url": "https://api.github.com/repos/pytorch/pytorch/issues/8698", "repository_url": "https://api.github.com/repos/pytorch/pytorch", "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/8698/labels{/name}", "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/8698/comments", "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/8698/events", "html_url": "https://github.com/pytorch/pytorch/issues/8698", "id": 334183550, "node_id": "MDU6SXNzdWUzMzQxODM1NTA=", "number": 8698, "title": "[docs] Argument names in docs don't match those actually taken by function", "user": {"login": "vishwakftw", "id": 23639302, "node_id": "MDQ6VXNlcjIzNjM5MzAy", "avatar_url": "https://avatars2.githubusercontent.com/u/23639302?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vishwakftw", "html_url": "https://github.com/vishwakftw", "followers_url": "https://api.github.com/users/vishwakftw/followers", "following_url": "https://api.github.com/users/vishwakftw/following{/other_user}", "gists_url": "https://api.github.com/users/vishwakftw/gists{/gist_id}", "starred_url": "https://api.github.com/users/vishwakftw/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vishwakftw/subscriptions", "organizations_url": "https://api.github.com/users/vishwakftw/orgs", "repos_url": "https://api.github.com/users/vishwakftw/repos", "events_url": "https://api.github.com/users/vishwakftw/events{/privacy}", "received_events_url": "https://api.github.com/users/vishwakftw/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 443484050, "node_id": "MDU6TGFiZWw0NDM0ODQwNTA=", "url": "https://api.github.com/repos/pytorch/pytorch/labels/medium%20priority", "name": "medium priority", "color": "fbca04", "default": false}], "state": "open", "locked": false, "assignee": {"login": "li-roy", "id": 8813817, "node_id": "MDQ6VXNlcjg4MTM4MTc=", "avatar_url": "https://avatars0.githubusercontent.com/u/8813817?v=4", "gravatar_id": "", "url": "https://api.github.com/users/li-roy", "html_url": "https://github.com/li-roy", "followers_url": "https://api.github.com/users/li-roy/followers", "following_url": "https://api.github.com/users/li-roy/following{/other_user}", "gists_url": "https://api.github.com/users/li-roy/gists{/gist_id}", "starred_url": "https://api.github.com/users/li-roy/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/li-roy/subscriptions", "organizations_url": "https://api.github.com/users/li-roy/orgs", "repos_url": "https://api.github.com/users/li-roy/repos", "events_url": "https://api.github.com/users/li-roy/events{/privacy}", "received_events_url": "https://api.github.com/users/li-roy/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "li-roy", "id": 8813817, "node_id": "MDQ6VXNlcjg4MTM4MTc=", "avatar_url": "https://avatars0.githubusercontent.com/u/8813817?v=4", "gravatar_id": "", "url": "https://api.github.com/users/li-roy", "html_url": "https://github.com/li-roy", "followers_url": "https://api.github.com/users/li-roy/followers", "following_url": "https://api.github.com/users/li-roy/following{/other_user}", "gists_url": "https://api.github.com/users/li-roy/gists{/gist_id}", "starred_url": "https://api.github.com/users/li-roy/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/li-roy/subscriptions", "organizations_url": "https://api.github.com/users/li-roy/orgs", "repos_url": "https://api.github.com/users/li-roy/repos", "events_url": "https://api.github.com/users/li-roy/events{/privacy}", "received_events_url": "https://api.github.com/users/li-roy/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 6, "created_at": "2018-06-20T17:41:39Z", "updated_at": "2018-08-08T14:22:20Z", "closed_at": null, "author_association": "CONTRIBUTOR", "body_html": "<h2>Issue description</h2>\n<p>A bunch of functions have this behaviour. Please check the script below. The functions in the script might not be exhaustive.</p>\n<p>EDIT: Around 40 functions have this issue.</p>\n<pre><code>Exception message: addmm() missing 3 required positional argument: \"input\", \"mat1\", \"mat2\"\nGiven argument names: ['mat', 'mat1', 'mat2']\nException message: addmv() missing 3 required positional argument: \"input\", \"mat\", \"vec\"\nGiven argument names: ['tensor', 'mat', 'vec']\nException message: addr() missing 3 required positional argument: \"input\", \"vec1\", \"vec2\"\nGiven argument names: ['mat', 'vec1', 'vec2']\nException message: baddbmm() missing 3 required positional argument: \"input\", \"batch1\", \"batch2\"\nGiven argument names: ['mat', 'batch1', 'batch2']\nException message: bmm() missing 2 required positional argument: \"input\", \"mat2\"\nGiven argument names: ['batch1', 'batch2']\nException message: dot() missing 2 required positional argument: \"input\", \"tensor\"\nGiven argument names: ['tensor1', 'tensor2']\nException message: ger() missing 2 required positional argument: \"input\", \"vec2\"\nGiven argument names: ['vec1', 'vec2']\nException message: matmul() missing 2 required positional argument: \"input\", \"other\"\nGiven argument names: ['tensor1', 'tensor2']\nException message: mm() missing 2 required positional argument: \"input\", \"mat2\"\nGiven argument names: ['mat1', 'mat2']\nException message: mv() missing 2 required positional argument: \"input\", \"vec\"\nGiven argument names: ['mat', 'vec']\n</code></pre>\n<h2>Code example</h2>\n<pre><code>import torch\n\ndef test_function(func, inputs):\n    try:\n        func(**inputs)\n        print(\"No error with function {}\".format(func.__name__))\n    except Exception as e:\n        print(\"Exception message: {}\\nGiven argument names: {}\".format(e, list(inputs.keys())))\n\nif __name__ == '__main__':\n    cases = [\n             ('addmm', {'mat': torch.randn(2, 4), 'mat1': torch.randn(3, 2, 3), 'mat2': torch.randn(3, 3, 4)}),\n             ('addmv', {'tensor': torch.randn(4), 'mat': torch.randn(3, 4, 2), 'vec': torch.randn(3, 2)}),\n             ('addr', {'mat': torch.randn(2, 4), 'vec1': torch.randn(3, 2), 'vec2': torch.randn(3, 4)}),\n             ('baddbmm', {'mat': torch.randn(3, 2, 4), 'batch1': torch.randn(3, 2, 3), 'batch2': torch.randn(3, 3, 4)}),\n             ('bmm', {'batch1': torch.randn(3, 2, 3), 'batch2': torch.randn(3, 3, 4)}),\n             ('dot', {'tensor1': torch.randn(10), 'tensor2': torch.randn(10)}),\n             ('ger', {'vec1': torch.randn(2), 'vec2': torch.randn(4)}),\n             ('matmul', {'tensor1': torch.randn(3, 3), 'tensor2': torch.randn(3, 4)}),\n             ('mm', {'mat1': torch.randn(3, 3), 'mat2': torch.randn(3, 4)}),\n             ('mv', {'mat': torch.randn(3, 3), 'vec': torch.randn(3)}),\n            ]\n    for case in cases:\n        test_function(getattr(torch, case[0]), case[1])\n</code></pre>\n<h2>System Info</h2>\n<ul>\n<li>PyTorch or Caffe2: PyTorch</li>\n<li>How you installed PyTorch (conda, pip, source): source (<a class=\"commit-link\" data-hovercard-type=\"commit\" data-hovercard-url=\"https://github.com/pytorch/pytorch/commit/5ca4f5b43b63882794951aec8fcb81a7595414d0/hovercard\" href=\"https://github.com/pytorch/pytorch/commit/5ca4f5b43b63882794951aec8fcb81a7595414d0\"><tt>5ca4f5b</tt></a>)</li>\n</ul>", "body_text": "Issue description\nA bunch of functions have this behaviour. Please check the script below. The functions in the script might not be exhaustive.\nEDIT: Around 40 functions have this issue.\nException message: addmm() missing 3 required positional argument: \"input\", \"mat1\", \"mat2\"\nGiven argument names: ['mat', 'mat1', 'mat2']\nException message: addmv() missing 3 required positional argument: \"input\", \"mat\", \"vec\"\nGiven argument names: ['tensor', 'mat', 'vec']\nException message: addr() missing 3 required positional argument: \"input\", \"vec1\", \"vec2\"\nGiven argument names: ['mat', 'vec1', 'vec2']\nException message: baddbmm() missing 3 required positional argument: \"input\", \"batch1\", \"batch2\"\nGiven argument names: ['mat', 'batch1', 'batch2']\nException message: bmm() missing 2 required positional argument: \"input\", \"mat2\"\nGiven argument names: ['batch1', 'batch2']\nException message: dot() missing 2 required positional argument: \"input\", \"tensor\"\nGiven argument names: ['tensor1', 'tensor2']\nException message: ger() missing 2 required positional argument: \"input\", \"vec2\"\nGiven argument names: ['vec1', 'vec2']\nException message: matmul() missing 2 required positional argument: \"input\", \"other\"\nGiven argument names: ['tensor1', 'tensor2']\nException message: mm() missing 2 required positional argument: \"input\", \"mat2\"\nGiven argument names: ['mat1', 'mat2']\nException message: mv() missing 2 required positional argument: \"input\", \"vec\"\nGiven argument names: ['mat', 'vec']\n\nCode example\nimport torch\n\ndef test_function(func, inputs):\n    try:\n        func(**inputs)\n        print(\"No error with function {}\".format(func.__name__))\n    except Exception as e:\n        print(\"Exception message: {}\\nGiven argument names: {}\".format(e, list(inputs.keys())))\n\nif __name__ == '__main__':\n    cases = [\n             ('addmm', {'mat': torch.randn(2, 4), 'mat1': torch.randn(3, 2, 3), 'mat2': torch.randn(3, 3, 4)}),\n             ('addmv', {'tensor': torch.randn(4), 'mat': torch.randn(3, 4, 2), 'vec': torch.randn(3, 2)}),\n             ('addr', {'mat': torch.randn(2, 4), 'vec1': torch.randn(3, 2), 'vec2': torch.randn(3, 4)}),\n             ('baddbmm', {'mat': torch.randn(3, 2, 4), 'batch1': torch.randn(3, 2, 3), 'batch2': torch.randn(3, 3, 4)}),\n             ('bmm', {'batch1': torch.randn(3, 2, 3), 'batch2': torch.randn(3, 3, 4)}),\n             ('dot', {'tensor1': torch.randn(10), 'tensor2': torch.randn(10)}),\n             ('ger', {'vec1': torch.randn(2), 'vec2': torch.randn(4)}),\n             ('matmul', {'tensor1': torch.randn(3, 3), 'tensor2': torch.randn(3, 4)}),\n             ('mm', {'mat1': torch.randn(3, 3), 'mat2': torch.randn(3, 4)}),\n             ('mv', {'mat': torch.randn(3, 3), 'vec': torch.randn(3)}),\n            ]\n    for case in cases:\n        test_function(getattr(torch, case[0]), case[1])\n\nSystem Info\n\nPyTorch or Caffe2: PyTorch\nHow you installed PyTorch (conda, pip, source): source (5ca4f5b)", "body": "## Issue description\r\nA bunch of functions have this behaviour. Please check the script below. The functions in the script might not be exhaustive.\r\n\r\nEDIT: Around 40 functions have this issue.\r\n```\r\nException message: addmm() missing 3 required positional argument: \"input\", \"mat1\", \"mat2\"\r\nGiven argument names: ['mat', 'mat1', 'mat2']\r\nException message: addmv() missing 3 required positional argument: \"input\", \"mat\", \"vec\"\r\nGiven argument names: ['tensor', 'mat', 'vec']\r\nException message: addr() missing 3 required positional argument: \"input\", \"vec1\", \"vec2\"\r\nGiven argument names: ['mat', 'vec1', 'vec2']\r\nException message: baddbmm() missing 3 required positional argument: \"input\", \"batch1\", \"batch2\"\r\nGiven argument names: ['mat', 'batch1', 'batch2']\r\nException message: bmm() missing 2 required positional argument: \"input\", \"mat2\"\r\nGiven argument names: ['batch1', 'batch2']\r\nException message: dot() missing 2 required positional argument: \"input\", \"tensor\"\r\nGiven argument names: ['tensor1', 'tensor2']\r\nException message: ger() missing 2 required positional argument: \"input\", \"vec2\"\r\nGiven argument names: ['vec1', 'vec2']\r\nException message: matmul() missing 2 required positional argument: \"input\", \"other\"\r\nGiven argument names: ['tensor1', 'tensor2']\r\nException message: mm() missing 2 required positional argument: \"input\", \"mat2\"\r\nGiven argument names: ['mat1', 'mat2']\r\nException message: mv() missing 2 required positional argument: \"input\", \"vec\"\r\nGiven argument names: ['mat', 'vec']\r\n```\r\n\r\n## Code example\r\n```\r\nimport torch\r\n\r\ndef test_function(func, inputs):\r\n    try:\r\n        func(**inputs)\r\n        print(\"No error with function {}\".format(func.__name__))\r\n    except Exception as e:\r\n        print(\"Exception message: {}\\nGiven argument names: {}\".format(e, list(inputs.keys())))\r\n\r\nif __name__ == '__main__':\r\n    cases = [\r\n             ('addmm', {'mat': torch.randn(2, 4), 'mat1': torch.randn(3, 2, 3), 'mat2': torch.randn(3, 3, 4)}),\r\n             ('addmv', {'tensor': torch.randn(4), 'mat': torch.randn(3, 4, 2), 'vec': torch.randn(3, 2)}),\r\n             ('addr', {'mat': torch.randn(2, 4), 'vec1': torch.randn(3, 2), 'vec2': torch.randn(3, 4)}),\r\n             ('baddbmm', {'mat': torch.randn(3, 2, 4), 'batch1': torch.randn(3, 2, 3), 'batch2': torch.randn(3, 3, 4)}),\r\n             ('bmm', {'batch1': torch.randn(3, 2, 3), 'batch2': torch.randn(3, 3, 4)}),\r\n             ('dot', {'tensor1': torch.randn(10), 'tensor2': torch.randn(10)}),\r\n             ('ger', {'vec1': torch.randn(2), 'vec2': torch.randn(4)}),\r\n             ('matmul', {'tensor1': torch.randn(3, 3), 'tensor2': torch.randn(3, 4)}),\r\n             ('mm', {'mat1': torch.randn(3, 3), 'mat2': torch.randn(3, 4)}),\r\n             ('mv', {'mat': torch.randn(3, 3), 'vec': torch.randn(3)}),\r\n            ]\r\n    for case in cases:\r\n        test_function(getattr(torch, case[0]), case[1])\r\n```\r\n## System Info\r\n- PyTorch or Caffe2: PyTorch\r\n- How you installed PyTorch (conda, pip, source): source (5ca4f5b)"}