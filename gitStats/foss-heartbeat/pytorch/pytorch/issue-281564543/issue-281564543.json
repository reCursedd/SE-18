{"url": "https://api.github.com/repos/pytorch/pytorch/issues/4140", "repository_url": "https://api.github.com/repos/pytorch/pytorch", "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/4140/labels{/name}", "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/4140/comments", "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/4140/events", "html_url": "https://github.com/pytorch/pytorch/pull/4140", "id": 281564543, "node_id": "MDExOlB1bGxSZXF1ZXN0MTU3OTU5ODQ5", "number": 4140, "title": "Allow for broadcasting of distribution parameters", "user": {"login": "neerajprad", "id": 1762463, "node_id": "MDQ6VXNlcjE3NjI0NjM=", "avatar_url": "https://avatars3.githubusercontent.com/u/1762463?v=4", "gravatar_id": "", "url": "https://api.github.com/users/neerajprad", "html_url": "https://github.com/neerajprad", "followers_url": "https://api.github.com/users/neerajprad/followers", "following_url": "https://api.github.com/users/neerajprad/following{/other_user}", "gists_url": "https://api.github.com/users/neerajprad/gists{/gist_id}", "starred_url": "https://api.github.com/users/neerajprad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/neerajprad/subscriptions", "organizations_url": "https://api.github.com/users/neerajprad/orgs", "repos_url": "https://api.github.com/users/neerajprad/repos", "events_url": "https://api.github.com/users/neerajprad/events{/privacy}", "received_events_url": "https://api.github.com/users/neerajprad/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-12-12T22:47:25Z", "updated_at": "2018-11-23T15:37:19Z", "closed_at": "2017-12-14T08:37:03Z", "author_association": "CONTRIBUTOR", "pull_request": {"url": "https://api.github.com/repos/pytorch/pytorch/pulls/4140", "html_url": "https://github.com/pytorch/pytorch/pull/4140", "diff_url": "https://github.com/pytorch/pytorch/pull/4140.diff", "patch_url": "https://github.com/pytorch/pytorch/pull/4140.patch"}, "body_html": "<p>This ensures consistent broadcasting of parameters passed to distribution classes:</p>\n<ul>\n<li>all scalars are upcast to Tensors / Variables.</li>\n<li>all Tensors / Variable arguments are broadcasted to the inferred shape in the constructor.</li>\n<li>the Bernoulli distribution also supports scalar parameters now to keep it consistent with Gamma and Normal.</li>\n</ul>\n<p>Note that this is needed for consistent handling of batch and event shapes <a href=\"https://github.com/probtorch/pytorch/issues/30\" data-hovercard-type=\"issue\" data-hovercard-url=\"/probtorch/pytorch/issues/30/hovercard\">probtorch#30</a>.</p>\n<p><strong>Testing:</strong> Unit test cases added for asserting on valid / invalid examples of parameter broadcasting.</p>\n<p><strong>Issue:</strong> Refer to <a href=\"https://github.com/probtorch/pytorch/issues/32\" data-hovercard-type=\"issue\" data-hovercard-url=\"/probtorch/pytorch/issues/32/hovercard\">probtorch#32</a> for more details. <a href=\"https://docs.google.com/document/d/1wnABg0cdyaVMr-Xqz_brHBwnPJuzTeSk3Oqko2HHSfE/edit?usp=sharing\" rel=\"nofollow\">Distribution design doc</a></p>\n<p><strong>Note to reviewers</strong> - This change is not backwards compatible. e.g.</p>\n<pre><code>Normal(torch.Tensor([[0, 0]]), torch.Tensor([[1], [1]])).sample()\nearlier -&gt; Tensor of shape (1, 2); same as mean.size()\nnow -&gt; Tensor of shape (2, 2); with full broadcasting\n</code></pre>\n<p>Also, let us get outstanding PRs, namely <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load issue title\" data-id=\"276860315\" data-permission-text=\"Issue title is private\" data-url=\"https://github.com/pytorch/pytorch/issues/3886\" data-hovercard-type=\"pull_request\" data-hovercard-url=\"/pytorch/pytorch/pull/3886/hovercard\" href=\"https://github.com/pytorch/pytorch/pull/3886\">#3886</a> and <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load issue title\" data-id=\"281266454\" data-permission-text=\"Issue title is private\" data-url=\"https://github.com/pytorch/pytorch/issues/4129\" data-hovercard-type=\"pull_request\" data-hovercard-url=\"/pytorch/pytorch/pull/4129/hovercard\" href=\"https://github.com/pytorch/pytorch/pull/4129\">#4129</a> merged first, so as to avoid creating further merge conflicts.</p>", "body_text": "This ensures consistent broadcasting of parameters passed to distribution classes:\n\nall scalars are upcast to Tensors / Variables.\nall Tensors / Variable arguments are broadcasted to the inferred shape in the constructor.\nthe Bernoulli distribution also supports scalar parameters now to keep it consistent with Gamma and Normal.\n\nNote that this is needed for consistent handling of batch and event shapes probtorch#30.\nTesting: Unit test cases added for asserting on valid / invalid examples of parameter broadcasting.\nIssue: Refer to probtorch#32 for more details. Distribution design doc\nNote to reviewers - This change is not backwards compatible. e.g.\nNormal(torch.Tensor([[0, 0]]), torch.Tensor([[1], [1]])).sample()\nearlier -> Tensor of shape (1, 2); same as mean.size()\nnow -> Tensor of shape (2, 2); with full broadcasting\n\nAlso, let us get outstanding PRs, namely #3886 and #4129 merged first, so as to avoid creating further merge conflicts.", "body": "This ensures consistent broadcasting of parameters passed to distribution classes:\r\n - all scalars are upcast to Tensors / Variables. \r\n - all Tensors / Variable arguments are broadcasted to the inferred shape in the constructor.\r\n - the Bernoulli distribution also supports scalar parameters now to keep it consistent with Gamma and Normal.\r\n\r\nNote that this is needed for consistent handling of batch and event shapes [probtorch#30](https://github.com/probtorch/pytorch/issues/30). \r\n\r\n**Testing:** Unit test cases added for asserting on valid / invalid examples of parameter broadcasting.\r\n\r\n**Issue:** Refer to [probtorch#32](https://github.com/probtorch/pytorch/issues/32) for more details. [Distribution design doc](https://docs.google.com/document/d/1wnABg0cdyaVMr-Xqz_brHBwnPJuzTeSk3Oqko2HHSfE/edit?usp=sharing)\r\n\r\n**Note to reviewers** - This change is not backwards compatible. e.g. \r\n```\r\nNormal(torch.Tensor([[0, 0]]), torch.Tensor([[1], [1]])).sample()\r\nearlier -> Tensor of shape (1, 2); same as mean.size()\r\nnow -> Tensor of shape (2, 2); with full broadcasting\r\n```\r\nAlso, let us get outstanding PRs, namely #3886 and #4129 merged first, so as to avoid creating further merge conflicts.\r\n"}