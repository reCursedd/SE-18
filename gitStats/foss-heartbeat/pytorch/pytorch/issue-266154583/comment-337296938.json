{"url": "https://api.github.com/repos/pytorch/pytorch/issues/comments/337296938", "html_url": "https://github.com/pytorch/pytorch/pull/3148#issuecomment-337296938", "issue_url": "https://api.github.com/repos/pytorch/pytorch/issues/3148", "id": 337296938, "node_id": "MDEyOklzc3VlQ29tbWVudDMzNzI5NjkzOA==", "user": {"login": "colesbury", "id": 655866, "node_id": "MDQ6VXNlcjY1NTg2Ng==", "avatar_url": "https://avatars1.githubusercontent.com/u/655866?v=4", "gravatar_id": "", "url": "https://api.github.com/users/colesbury", "html_url": "https://github.com/colesbury", "followers_url": "https://api.github.com/users/colesbury/followers", "following_url": "https://api.github.com/users/colesbury/following{/other_user}", "gists_url": "https://api.github.com/users/colesbury/gists{/gist_id}", "starred_url": "https://api.github.com/users/colesbury/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/colesbury/subscriptions", "organizations_url": "https://api.github.com/users/colesbury/orgs", "repos_url": "https://api.github.com/users/colesbury/repos", "events_url": "https://api.github.com/users/colesbury/events{/privacy}", "received_events_url": "https://api.github.com/users/colesbury/received_events", "type": "User", "site_admin": false}, "created_at": "2017-10-17T16:58:22Z", "updated_at": "2017-10-17T16:58:22Z", "author_association": "MEMBER", "body_html": "<p>Except that this will break things. Currently we have the behavior that if x.is_contiguous() is True then x.contiguous() returns x. This is important: it means that you can avoid calls to contiguous if you know the tensor is already contiguous, which avoids allocation without changing behavior.</p>", "body_text": "Except that this will break things. Currently we have the behavior that if x.is_contiguous() is True then x.contiguous() returns x. This is important: it means that you can avoid calls to contiguous if you know the tensor is already contiguous, which avoids allocation without changing behavior.", "body": "Except that this will break things. Currently we have the behavior that if x.is_contiguous() is True then x.contiguous() returns x. This is important: it means that you can avoid calls to contiguous if you know the tensor is already contiguous, which avoids allocation without changing behavior."}