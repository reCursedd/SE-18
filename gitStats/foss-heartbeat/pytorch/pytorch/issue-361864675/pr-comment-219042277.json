{"url": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/219042277", "pull_request_review_id": 157116228, "id": 219042277, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIxOTA0MjI3Nw==", "diff_hunk": "@@ -297,6 +301,41 @@ def check(self, value):\n         return (value == value).all()  # False for NANs.\n \n \n+class _Cat(Constraint):\n+    \"\"\"\n+    Constraint functor that applies a sequence of constraints\n+    `cseq` at the submatrixes at dimension `dim`\n+    in a way compatible with `torch.cat`.\n+    \"\"\"\n+    def __init__(self, cseq, dim=0):\n+        assert all(isinstance(c, Constraint) for c in cseq)\n+        self.cseq = cseq\n+        self.dim = dim\n+\n+    def check(self, value):\n+        assert -len(value.shape) <= self.dim < len(value.shape)\n+        vs = value.chunk(value.shape[self.dim], self.dim)\n+        return all(constr.check(v) \n+                   for v, constr in zip(vs, self.cseq))\n+\n+\n+class _Stack(Constraint):\n+    \"\"\"\n+    Constraint functor that applies a sequence of constraints\n+    `cseq` at the submatrixes at dimension `dim`\n+    in a way compatible with `torch.stack`.\n+    \"\"\"\n+    def __init__(self, cseq, dim=0):\n+        assert all(isinstance(c, Constraint) for c in cseq)\n+        self.cseq = cseq\n+        self.dim = dim\n+\n+    def check(self, value):\n+        assert -len(value.shape) <= self.dim < len(value.shape)\n+        vs = [value.select(self.dim, i) for i in range(value.shape[self.dim])]", "path": "torch/distributions/constraints.py", "position": null, "original_position": 60, "commit_id": "a8745e666ea64dcec8487005e48f55dd90ac42da", "original_commit_id": "e4d4309b77c68d605df24d65fe7b14e957d0fbaf", "user": {"login": "vishwakftw", "id": 23639302, "node_id": "MDQ6VXNlcjIzNjM5MzAy", "avatar_url": "https://avatars2.githubusercontent.com/u/23639302?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vishwakftw", "html_url": "https://github.com/vishwakftw", "followers_url": "https://api.github.com/users/vishwakftw/followers", "following_url": "https://api.github.com/users/vishwakftw/following{/other_user}", "gists_url": "https://api.github.com/users/vishwakftw/gists{/gist_id}", "starred_url": "https://api.github.com/users/vishwakftw/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vishwakftw/subscriptions", "organizations_url": "https://api.github.com/users/vishwakftw/orgs", "repos_url": "https://api.github.com/users/vishwakftw/repos", "events_url": "https://api.github.com/users/vishwakftw/events{/privacy}", "received_events_url": "https://api.github.com/users/vishwakftw/received_events", "type": "User", "site_admin": false}, "body": "Same as above.", "created_at": "2018-09-20T06:00:03Z", "updated_at": "2018-11-23T15:51:44Z", "html_url": "https://github.com/pytorch/pytorch/pull/11868#discussion_r219042277", "pull_request_url": "https://api.github.com/repos/pytorch/pytorch/pulls/11868", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/219042277"}, "html": {"href": "https://github.com/pytorch/pytorch/pull/11868#discussion_r219042277"}, "pull_request": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/11868"}}, "body_html": "<p>Same as above.</p>", "body_text": "Same as above."}