{"url": "https://api.github.com/repos/pytorch/pytorch/issues/comments/282482048", "html_url": "https://github.com/pytorch/pytorch/pull/832#issuecomment-282482048", "issue_url": "https://api.github.com/repos/pytorch/pytorch/issues/832", "id": 282482048, "node_id": "MDEyOklzc3VlQ29tbWVudDI4MjQ4MjA0OA==", "user": {"login": "Teaonly", "id": 2042911, "node_id": "MDQ6VXNlcjIwNDI5MTE=", "avatar_url": "https://avatars1.githubusercontent.com/u/2042911?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Teaonly", "html_url": "https://github.com/Teaonly", "followers_url": "https://api.github.com/users/Teaonly/followers", "following_url": "https://api.github.com/users/Teaonly/following{/other_user}", "gists_url": "https://api.github.com/users/Teaonly/gists{/gist_id}", "starred_url": "https://api.github.com/users/Teaonly/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Teaonly/subscriptions", "organizations_url": "https://api.github.com/users/Teaonly/orgs", "repos_url": "https://api.github.com/users/Teaonly/repos", "events_url": "https://api.github.com/users/Teaonly/events{/privacy}", "received_events_url": "https://api.github.com/users/Teaonly/received_events", "type": "User", "site_admin": false}, "created_at": "2017-02-25T12:51:00Z", "updated_at": "2017-02-25T12:51:00Z", "author_association": "CONTRIBUTOR", "body_html": "<p>Input is a 4D tensor for MaxPool2D  :</p>\n<pre><code>(0 ,0 ,.,.) =\n   1   2   3   4\n   5   6   7   8\n   9  10  11  12\n  13  14  15  16\n\n(0 ,1 ,.,.) =\n  17  18  19  20\n  21  22  23  24\n  25  26  27  28\n  29  30  31  32\n\n(1 ,0 ,.,.) =\n  33  34  35  36\n  37  38  39  40\n  41  42  43  44\n  45  46  47  48\n\n(1 ,1 ,.,.) =\n  49  50  51  52\n  53  54  55  56\n  57  58  59  60\n  61  62  63  64\n[torch.FloatTensor of size 2x2x4x4]\n</code></pre>\n<p>So output is :</p>\n<pre><code>Variable containing:\n(0 ,0 ,.,.) =\n   6   8\n  14  16\n\n(0 ,1 ,.,.) =\n  22  24\n  30  32\n\n(1 ,0 ,.,.) =\n  38  40\n  46  48\n\n(1 ,1 ,.,.) =\n  54  56\n  62  64\n[torch.FloatTensor of size 2x2x2x2]\n</code></pre>\n<p>the returned indices should be :</p>\n<pre><code>(0 ,0 ,.,.) =\n   5   7\n  13  15\n\n(0 ,1 ,.,.) =\n   5   7\n  13  15\n\n(1 ,0 ,.,.) =\n   5   7\n  13  15\n\n(1 ,1 ,.,.) =\n   5   7\n  13  15\n[torch.LongTensor of size 2x2x2x2]\n</code></pre>\n<p><a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=4583066\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/apaszke\">@apaszke</a>  Your old code will build expected_indices as :</p>\n<pre><code>(0 ,0 ,.,.) =\n   5   7\n   5   7\n\n(0 ,1 ,.,.) =\n   5   7\n   5   7\n\n(1 ,0 ,.,.) =\n  13  15\n  13  15\n\n(1 ,1 ,.,.) =\n  13  15\n  13  15\n[torch.LongTensor of size 2x2x2x2]\n</code></pre>\n<p>So I changed expected_indices for MaxPool2D using inline data directly.</p>", "body_text": "Input is a 4D tensor for MaxPool2D  :\n(0 ,0 ,.,.) =\n   1   2   3   4\n   5   6   7   8\n   9  10  11  12\n  13  14  15  16\n\n(0 ,1 ,.,.) =\n  17  18  19  20\n  21  22  23  24\n  25  26  27  28\n  29  30  31  32\n\n(1 ,0 ,.,.) =\n  33  34  35  36\n  37  38  39  40\n  41  42  43  44\n  45  46  47  48\n\n(1 ,1 ,.,.) =\n  49  50  51  52\n  53  54  55  56\n  57  58  59  60\n  61  62  63  64\n[torch.FloatTensor of size 2x2x4x4]\n\nSo output is :\nVariable containing:\n(0 ,0 ,.,.) =\n   6   8\n  14  16\n\n(0 ,1 ,.,.) =\n  22  24\n  30  32\n\n(1 ,0 ,.,.) =\n  38  40\n  46  48\n\n(1 ,1 ,.,.) =\n  54  56\n  62  64\n[torch.FloatTensor of size 2x2x2x2]\n\nthe returned indices should be :\n(0 ,0 ,.,.) =\n   5   7\n  13  15\n\n(0 ,1 ,.,.) =\n   5   7\n  13  15\n\n(1 ,0 ,.,.) =\n   5   7\n  13  15\n\n(1 ,1 ,.,.) =\n   5   7\n  13  15\n[torch.LongTensor of size 2x2x2x2]\n\n@apaszke  Your old code will build expected_indices as :\n(0 ,0 ,.,.) =\n   5   7\n   5   7\n\n(0 ,1 ,.,.) =\n   5   7\n   5   7\n\n(1 ,0 ,.,.) =\n  13  15\n  13  15\n\n(1 ,1 ,.,.) =\n  13  15\n  13  15\n[torch.LongTensor of size 2x2x2x2]\n\nSo I changed expected_indices for MaxPool2D using inline data directly.", "body": "Input is a 4D tensor for MaxPool2D  : \r\n\r\n```\r\n(0 ,0 ,.,.) =\r\n   1   2   3   4\r\n   5   6   7   8\r\n   9  10  11  12\r\n  13  14  15  16\r\n\r\n(0 ,1 ,.,.) =\r\n  17  18  19  20\r\n  21  22  23  24\r\n  25  26  27  28\r\n  29  30  31  32\r\n\r\n(1 ,0 ,.,.) =\r\n  33  34  35  36\r\n  37  38  39  40\r\n  41  42  43  44\r\n  45  46  47  48\r\n\r\n(1 ,1 ,.,.) =\r\n  49  50  51  52\r\n  53  54  55  56\r\n  57  58  59  60\r\n  61  62  63  64\r\n[torch.FloatTensor of size 2x2x4x4]\r\n```\r\nSo output is : \r\n\r\n```\r\nVariable containing:\r\n(0 ,0 ,.,.) =\r\n   6   8\r\n  14  16\r\n\r\n(0 ,1 ,.,.) =\r\n  22  24\r\n  30  32\r\n\r\n(1 ,0 ,.,.) =\r\n  38  40\r\n  46  48\r\n\r\n(1 ,1 ,.,.) =\r\n  54  56\r\n  62  64\r\n[torch.FloatTensor of size 2x2x2x2]\r\n```\r\n\r\nthe returned indices should be : \r\n```\r\n(0 ,0 ,.,.) =\r\n   5   7\r\n  13  15\r\n\r\n(0 ,1 ,.,.) =\r\n   5   7\r\n  13  15\r\n\r\n(1 ,0 ,.,.) =\r\n   5   7\r\n  13  15\r\n\r\n(1 ,1 ,.,.) =\r\n   5   7\r\n  13  15\r\n[torch.LongTensor of size 2x2x2x2]\r\n```\r\n\r\n@apaszke  Your old code will build expected_indices as :\r\n\r\n```\r\n(0 ,0 ,.,.) =\r\n   5   7\r\n   5   7\r\n\r\n(0 ,1 ,.,.) =\r\n   5   7\r\n   5   7\r\n\r\n(1 ,0 ,.,.) =\r\n  13  15\r\n  13  15\r\n\r\n(1 ,1 ,.,.) =\r\n  13  15\r\n  13  15\r\n[torch.LongTensor of size 2x2x2x2]\r\n```\r\nSo I changed expected_indices for MaxPool2D using inline data directly.  \r\n\r\n"}