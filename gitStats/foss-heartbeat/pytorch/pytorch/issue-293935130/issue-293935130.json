{"url": "https://api.github.com/repos/pytorch/pytorch/issues/5011", "repository_url": "https://api.github.com/repos/pytorch/pytorch", "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/5011/labels{/name}", "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/5011/comments", "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/5011/events", "html_url": "https://github.com/pytorch/pytorch/issues/5011", "id": 293935130, "node_id": "MDU6SXNzdWUyOTM5MzUxMzA=", "number": 5011, "title": "Autograd keeps all input tensors live across function", "user": {"login": "ezyang", "id": 13564, "node_id": "MDQ6VXNlcjEzNTY0", "avatar_url": "https://avatars0.githubusercontent.com/u/13564?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ezyang", "html_url": "https://github.com/ezyang", "followers_url": "https://api.github.com/users/ezyang/followers", "following_url": "https://api.github.com/users/ezyang/following{/other_user}", "gists_url": "https://api.github.com/users/ezyang/gists{/gist_id}", "starred_url": "https://api.github.com/users/ezyang/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ezyang/subscriptions", "organizations_url": "https://api.github.com/users/ezyang/orgs", "repos_url": "https://api.github.com/users/ezyang/repos", "events_url": "https://api.github.com/users/ezyang/events{/privacy}", "received_events_url": "https://api.github.com/users/ezyang/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 679953983, "node_id": "MDU6TGFiZWw2Nzk5NTM5ODM=", "url": "https://api.github.com/repos/pytorch/pytorch/labels/jit", "name": "jit", "color": "c5def5", "default": false}], "state": "closed", "locked": false, "assignee": {"login": "zdevito", "id": 370202, "node_id": "MDQ6VXNlcjM3MDIwMg==", "avatar_url": "https://avatars0.githubusercontent.com/u/370202?v=4", "gravatar_id": "", "url": "https://api.github.com/users/zdevito", "html_url": "https://github.com/zdevito", "followers_url": "https://api.github.com/users/zdevito/followers", "following_url": "https://api.github.com/users/zdevito/following{/other_user}", "gists_url": "https://api.github.com/users/zdevito/gists{/gist_id}", "starred_url": "https://api.github.com/users/zdevito/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/zdevito/subscriptions", "organizations_url": "https://api.github.com/users/zdevito/orgs", "repos_url": "https://api.github.com/users/zdevito/repos", "events_url": "https://api.github.com/users/zdevito/events{/privacy}", "received_events_url": "https://api.github.com/users/zdevito/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "zdevito", "id": 370202, "node_id": "MDQ6VXNlcjM3MDIwMg==", "avatar_url": "https://avatars0.githubusercontent.com/u/370202?v=4", "gravatar_id": "", "url": "https://api.github.com/users/zdevito", "html_url": "https://github.com/zdevito", "followers_url": "https://api.github.com/users/zdevito/followers", "following_url": "https://api.github.com/users/zdevito/following{/other_user}", "gists_url": "https://api.github.com/users/zdevito/gists{/gist_id}", "starred_url": "https://api.github.com/users/zdevito/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/zdevito/subscriptions", "organizations_url": "https://api.github.com/users/zdevito/orgs", "repos_url": "https://api.github.com/users/zdevito/repos", "events_url": "https://api.github.com/users/zdevito/events{/privacy}", "received_events_url": "https://api.github.com/users/zdevito/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 5, "created_at": "2018-02-02T15:57:06Z", "updated_at": "2018-08-17T20:16:35Z", "closed_at": "2018-08-17T20:16:35Z", "author_association": "CONTRIBUTOR", "body_html": "<p>Today's API for calling an Autograd function is:</p>\n<pre><code>virtual variable_list apply(const variable_list&amp; inputs) override {\n  ...\n}\n</code></pre>\n<p>This API is unfortunate, because it implies that the caller of <code>apply</code> is obligated to keep <code>inputs</code> (and thus, all of the Tensors it refers to) live for the ENTIRE duration of the <code>apply</code> call. However, particularly large functions (esp. the interpreter we are working on for the JIT) may be able to profitably deallocate inputs before the end of the function.</p>\n<p>A very simple API amendment might be to change this to:</p>\n<pre><code>virtual variable_list apply(variable_list&amp;&amp;) override {\n  ...\n}\n</code></pre>\n<p>but we would need to see if we can actually efficiently implement this in the engine.</p>\n<p>I'm posting this here because possible API changes will be of interest to other folks working on core.</p>\n<p>CC <a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=370202\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/zdevito\">@zdevito</a> <a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=4583066\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/apaszke\">@apaszke</a> <a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=655866\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/colesbury\">@colesbury</a> <a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=3768583\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/gchanan\">@gchanan</a></p>", "body_text": "Today's API for calling an Autograd function is:\nvirtual variable_list apply(const variable_list& inputs) override {\n  ...\n}\n\nThis API is unfortunate, because it implies that the caller of apply is obligated to keep inputs (and thus, all of the Tensors it refers to) live for the ENTIRE duration of the apply call. However, particularly large functions (esp. the interpreter we are working on for the JIT) may be able to profitably deallocate inputs before the end of the function.\nA very simple API amendment might be to change this to:\nvirtual variable_list apply(variable_list&&) override {\n  ...\n}\n\nbut we would need to see if we can actually efficiently implement this in the engine.\nI'm posting this here because possible API changes will be of interest to other folks working on core.\nCC @zdevito @apaszke @colesbury @gchanan", "body": "Today's API for calling an Autograd function is:\r\n\r\n```\r\nvirtual variable_list apply(const variable_list& inputs) override {\r\n  ...\r\n}\r\n```\r\n\r\nThis API is unfortunate, because it implies that the caller of `apply` is obligated to keep `inputs` (and thus, all of the Tensors it refers to) live for the ENTIRE duration of the `apply` call. However, particularly large functions (esp. the interpreter we are working on for the JIT) may be able to profitably deallocate inputs before the end of the function.\r\n\r\nA very simple API amendment might be to change this to:\r\n\r\n```\r\nvirtual variable_list apply(variable_list&&) override {\r\n  ...\r\n}\r\n```\r\n\r\nbut we would need to see if we can actually efficiently implement this in the engine.\r\n\r\nI'm posting this here because possible API changes will be of interest to other folks working on core.\r\n\r\nCC @zdevito @apaszke @colesbury @gchanan "}