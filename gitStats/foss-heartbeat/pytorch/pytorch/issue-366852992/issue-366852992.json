{"url": "https://api.github.com/repos/pytorch/pytorch/issues/12328", "repository_url": "https://api.github.com/repos/pytorch/pytorch", "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/12328/labels{/name}", "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/12328/comments", "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/12328/events", "html_url": "https://github.com/pytorch/pytorch/pull/12328", "id": 366852992, "node_id": "MDExOlB1bGxSZXF1ZXN0MjIwNDI2MjYw", "number": 12328, "title": "Enforce invariant that storage_ is always non-null", "user": {"login": "ezyang", "id": 13564, "node_id": "MDQ6VXNlcjEzNTY0", "avatar_url": "https://avatars0.githubusercontent.com/u/13564?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ezyang", "html_url": "https://github.com/ezyang", "followers_url": "https://api.github.com/users/ezyang/followers", "following_url": "https://api.github.com/users/ezyang/following{/other_user}", "gists_url": "https://api.github.com/users/ezyang/gists{/gist_id}", "starred_url": "https://api.github.com/users/ezyang/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ezyang/subscriptions", "organizations_url": "https://api.github.com/users/ezyang/orgs", "repos_url": "https://api.github.com/users/ezyang/repos", "events_url": "https://api.github.com/users/ezyang/events{/privacy}", "received_events_url": "https://api.github.com/users/ezyang/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-10-04T15:42:56Z", "updated_at": "2018-10-05T16:45:02Z", "closed_at": "2018-10-05T16:45:02Z", "author_association": "CONTRIBUTOR", "pull_request": {"url": "https://api.github.com/repos/pytorch/pytorch/pulls/12328", "html_url": "https://github.com/pytorch/pytorch/pull/12328", "diff_url": "https://github.com/pytorch/pytorch/pull/12328.diff", "patch_url": "https://github.com/pytorch/pytorch/pull/12328.patch"}, "body_html": "<p>Stack:<br>\n\u00a0\u00a0\u00a0\u00a0<g-emoji class=\"g-emoji\" alias=\"black_circle\" fallback-src=\"https://assets-cdn.github.com/images/icons/emoji/unicode/26ab.png\">\u26ab\ufe0f</g-emoji>\u00a0 <strong><a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load issue title\" data-id=\"366852992\" data-permission-text=\"Issue title is private\" data-url=\"https://github.com/pytorch/pytorch/issues/12328\" data-hovercard-type=\"pull_request\" data-hovercard-url=\"/pytorch/pytorch/pull/12328/hovercard\" href=\"https://github.com/pytorch/pytorch/pull/12328\">#12328</a> Enforce invariant that storage_ is always non-null</strong>\u00a0\u00a0<a href=\"https://our.internmc.facebook.com/intern/diff/D10200448/\" rel=\"nofollow\"><g-emoji class=\"g-emoji\" alias=\"yellow_heart\" fallback-src=\"https://assets-cdn.github.com/images/icons/emoji/unicode/1f49b.png\">\ud83d\udc9b</g-emoji></a></p>\n<ul>\n<li>Delete reset() from Storage, as it makes it easy to accidentally<br>\ncreate a null storage.</li>\n<li>Immediately reject a storage if it is null when passed in</li>\n</ul>\n<p>Differential Revision: <a href=\"https://our.internmc.facebook.com/intern/diff/D10200448/\" rel=\"nofollow\">D10200448</a></p>", "body_text": "Stack:\n\u00a0\u00a0\u00a0\u00a0\u26ab\ufe0f\u00a0 #12328 Enforce invariant that storage_ is always non-null\u00a0\u00a0\ud83d\udc9b\n\nDelete reset() from Storage, as it makes it easy to accidentally\ncreate a null storage.\nImmediately reject a storage if it is null when passed in\n\nDifferential Revision: D10200448", "body": "Stack:\n&nbsp;&nbsp;&nbsp;&nbsp;:black_circle:&nbsp; **#12328 Enforce invariant that storage_ is always non-null**&nbsp;&nbsp;[:yellow_heart:](https://our.internmc.facebook.com/intern/diff/D10200448/)\n\n- Delete reset() from Storage, as it makes it easy to accidentally\n  create a null storage.\n- Immediately reject a storage if it is null when passed in\n\nDifferential Revision: [D10200448](https://our.internmc.facebook.com/intern/diff/D10200448/)"}