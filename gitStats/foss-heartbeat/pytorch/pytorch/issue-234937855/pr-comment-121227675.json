{"url": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/121227675", "pull_request_review_id": 43261787, "id": 121227675, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEyMTIyNzY3NQ==", "diff_hunk": "@@ -0,0 +1,190 @@\n+import os\n+import sys\n+import yaml\n+from optparse import OptionParser\n+\n+import cwrap_parser\n+import preprocess_declarations\n+import function_wrapper\n+import dispatch_macros\n+from code_template import CodeTemplate\n+\n+\n+parser = OptionParser()\n+parser.add_option('-s', '--source-path', help='path to source director for tensorlib',\n+                  action='store', default='.')\n+parser.add_option('-p', '--print-dependencies',\n+                  help='only output a list of dependencies', action='store_true')\n+parser.add_option('-n', '--no-cuda', action='store_true')\n+options, cwrap_files = parser.parse_args()\n+\n+TEMPLATE_PATH = options.source_path + \"/templates\"\n+GENERATOR_DERIVED = CodeTemplate.from_file(\n+    TEMPLATE_PATH + \"/GeneratorDerived.h\")\n+STORAGE_DERIVED_CPP = CodeTemplate.from_file(\n+    TEMPLATE_PATH + \"/StorageDerived.cpp\")\n+STORAGE_DERIVED_H = CodeTemplate.from_file(TEMPLATE_PATH + \"/StorageDerived.h\")\n+\n+TYPE_DERIVED_CPP = CodeTemplate.from_file(TEMPLATE_PATH + \"/TypeDerived.cpp\")\n+TYPE_DERIVED_H = CodeTemplate.from_file(TEMPLATE_PATH + \"/TypeDerived.h\")\n+TYPE_H = CodeTemplate.from_file(TEMPLATE_PATH + \"/Type.h\")\n+TYPE_CPP = CodeTemplate.from_file(TEMPLATE_PATH + \"/Type.cpp\")\n+\n+TENSOR_DERIVED_CPP = CodeTemplate.from_file(\n+    TEMPLATE_PATH + \"/TensorDerived.cpp\")\n+TENSOR_DERIVED_H = CodeTemplate.from_file(TEMPLATE_PATH + \"/TensorDerived.h\")\n+TENSOR_H = CodeTemplate.from_file(TEMPLATE_PATH + \"/Tensor.h\")\n+\n+FUNCTIONS_H = CodeTemplate.from_file(TEMPLATE_PATH + \"/Functions.h\")\n+\n+generators = {\n+    'CPUGenerator.h': {\n+        'name': 'CPU',\n+        'th_generator': 'THGenerator * generator;',\n+        'header': 'TH/TH.h',\n+    },\n+    'CUDAGenerator.h': {\n+        'name': 'CUDA',\n+        'th_generator': '',\n+        'header': 'THC/THC.h'\n+    },\n+}\n+\n+processors = ['CPU']\n+if not options.no_cuda:\n+    processors.append('CUDA')\n+\n+scalar_types = [\n+    ('Byte', 'uint8_t', 'Long'),\n+    ('Char', 'int8_t', 'Long'),\n+    ('Double', 'double', 'Double'),\n+    ('Float', 'float', 'Double'),\n+    ('Int', 'int', 'Long'),\n+    ('Long', 'int64_t', 'Long'),\n+    ('Short', 'int16_t', 'Long'),\n+    ('Half', 'Half', 'Double'),\n+]\n+\n+# shared environment for non-derived base classes Type.h Tensor.h Storage.h\n+top_env = {\n+    'type_registrations': [],\n+    'type_headers': [],\n+    'type_method_declarations': [],\n+    'type_method_definitions': [],\n+    'tensor_method_declarations': [],\n+    'tensor_method_definitions': [],\n+    'function_declarations': [],\n+    'function_definitions': [],\n+}\n+\n+\n+def write(filename, s):", "path": "torch/lib/TensorLib/gen.py", "position": null, "original_position": 81, "commit_id": "dadf12e892b69bca8457a4be963fece8328f2393", "original_commit_id": "e34f14280c610773902bd3bdc908c3757ec4668c", "user": {"login": "killeent", "id": 4529377, "node_id": "MDQ6VXNlcjQ1MjkzNzc=", "avatar_url": "https://avatars1.githubusercontent.com/u/4529377?v=4", "gravatar_id": "", "url": "https://api.github.com/users/killeent", "html_url": "https://github.com/killeent", "followers_url": "https://api.github.com/users/killeent/followers", "following_url": "https://api.github.com/users/killeent/following{/other_user}", "gists_url": "https://api.github.com/users/killeent/gists{/gist_id}", "starred_url": "https://api.github.com/users/killeent/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/killeent/subscriptions", "organizations_url": "https://api.github.com/users/killeent/orgs", "repos_url": "https://api.github.com/users/killeent/repos", "events_url": "https://api.github.com/users/killeent/events{/privacy}", "received_events_url": "https://api.github.com/users/killeent/received_events", "type": "User", "site_admin": false}, "body": "These is needed for CMake. The first pass we generate the list of files, so that CMake knows about them. The second time we actually write the code.", "created_at": "2017-06-09T21:38:29Z", "updated_at": "2018-11-23T15:33:44Z", "html_url": "https://github.com/pytorch/pytorch/pull/1766#discussion_r121227675", "pull_request_url": "https://api.github.com/repos/pytorch/pytorch/pulls/1766", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/121227675"}, "html": {"href": "https://github.com/pytorch/pytorch/pull/1766#discussion_r121227675"}, "pull_request": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/1766"}}, "body_html": "<p>These is needed for CMake. The first pass we generate the list of files, so that CMake knows about them. The second time we actually write the code.</p>", "body_text": "These is needed for CMake. The first pass we generate the list of files, so that CMake knows about them. The second time we actually write the code."}