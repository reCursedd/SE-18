{"url": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/121268122", "pull_request_review_id": 43307822, "id": 121268122, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEyMTI2ODEyMg==", "diff_hunk": "@@ -60,7 +60,7 @@ def updateGradInput(self, input, y):\n             self.mask = self.mask.resize_as_(input[0]).copy_(dist)\n             mask = self.mask\n \n-            torch.ge(dist, 0, out=mask)\n+            torch.ge_t(dist, 0, out=mask)", "path": "torch/legacy/nn/MarginRankingCriterion.py", "position": null, "original_position": 5, "commit_id": "dadf12e892b69bca8457a4be963fece8328f2393", "original_commit_id": "a5c86f848213f4877fae40e248a0b7b20d25a458", "user": {"login": "zdevito", "id": 370202, "node_id": "MDQ6VXNlcjM3MDIwMg==", "avatar_url": "https://avatars0.githubusercontent.com/u/370202?v=4", "gravatar_id": "", "url": "https://api.github.com/users/zdevito", "html_url": "https://github.com/zdevito", "followers_url": "https://api.github.com/users/zdevito/followers", "following_url": "https://api.github.com/users/zdevito/following{/other_user}", "gists_url": "https://api.github.com/users/zdevito/gists{/gist_id}", "starred_url": "https://api.github.com/users/zdevito/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/zdevito/subscriptions", "organizations_url": "https://api.github.com/users/zdevito/orgs", "repos_url": "https://api.github.com/users/zdevito/repos", "events_url": "https://api.github.com/users/zdevito/events{/privacy}", "received_events_url": "https://api.github.com/users/zdevito/received_events", "type": "User", "site_admin": false}, "body": "Overloading the behavior of a function on the type of value being produced is generally suspicious to me because an output parameter is secretly providing an input to the function -- what type should be returned. A argument to control the return type might be ok, but is going require its own changes to cwrap/TensorLib since it is a new case. I was under the impression that the release this would go in would introduce other breaking changes as well. Is this even used?", "created_at": "2017-06-10T23:07:11Z", "updated_at": "2018-11-23T15:33:47Z", "html_url": "https://github.com/pytorch/pytorch/pull/1766#discussion_r121268122", "pull_request_url": "https://api.github.com/repos/pytorch/pytorch/pulls/1766", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/121268122"}, "html": {"href": "https://github.com/pytorch/pytorch/pull/1766#discussion_r121268122"}, "pull_request": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/1766"}}, "body_html": "<p>Overloading the behavior of a function on the type of value being produced is generally suspicious to me because an output parameter is secretly providing an input to the function -- what type should be returned. A argument to control the return type might be ok, but is going require its own changes to cwrap/TensorLib since it is a new case. I was under the impression that the release this would go in would introduce other breaking changes as well. Is this even used?</p>", "body_text": "Overloading the behavior of a function on the type of value being produced is generally suspicious to me because an output parameter is secretly providing an input to the function -- what type should be returned. A argument to control the return type might be ok, but is going require its own changes to cwrap/TensorLib since it is a new case. I was under the impression that the release this would go in would introduce other breaking changes as well. Is this even used?", "in_reply_to_id": 121249175}