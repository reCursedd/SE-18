{"url": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/121224412", "pull_request_review_id": 43261787, "id": 121224412, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEyMTIyNDQxMg==", "diff_hunk": "@@ -0,0 +1,50 @@\n+#include \"Context.h\"\n+#include <thread>\n+#include <mutex>\n+\n+#ifdef TENSORLIB_CUDA_ENABLED\n+#include \"THC/THC.h\"\n+#include \"TensorLib/CUDAGenerator.h\"\n+#endif\n+#include \"TensorLib/CPUGenerator.h\"\n+\n+namespace tlib {\n+\n+Context::Context() {\n+\n+#ifdef TENSORLIB_CUDA_ENABLED\n+  thc_state = THCState_alloc();\n+  THCState_setDeviceAllocator(thc_state, THCCachingAllocator_get());\n+  thc_state->cudaHostAllocator = &THCCachingHostAllocator;\n+  THCudaInit(thc_state);\n+  generator_registry[static_cast<int>(Processor::CUDA)]\n+    .reset(new CUDAGenerator(this));\n+#endif\n+\n+  generator_registry[static_cast<int>(Processor::CPU)]\n+    .reset(new CPUGenerator(this));\n+  Type::registerAll(this);\n+  current_default_type = &getType(Processor::CPU, ScalarType::Float);\n+}\n+\n+Context::~Context() {\n+#ifdef TENSORLIB_CUDA_ENABLED\n+  THCState_free(thc_state);\n+#endif\n+}\n+\n+static std::mutex context_lock;\n+static Context * globalContext_ = nullptr;\n+\n+Context * globalContext() {\n+  if(!globalContext_) {\n+    std::lock_guard<std::mutex> lock(context_lock);", "path": "torch/lib/TensorLib/Context.cpp", "position": null, "original_position": 41, "commit_id": "dadf12e892b69bca8457a4be963fece8328f2393", "original_commit_id": "e34f14280c610773902bd3bdc908c3757ec4668c", "user": {"login": "killeent", "id": 4529377, "node_id": "MDQ6VXNlcjQ1MjkzNzc=", "avatar_url": "https://avatars1.githubusercontent.com/u/4529377?v=4", "gravatar_id": "", "url": "https://api.github.com/users/killeent", "html_url": "https://github.com/killeent", "followers_url": "https://api.github.com/users/killeent/followers", "following_url": "https://api.github.com/users/killeent/following{/other_user}", "gists_url": "https://api.github.com/users/killeent/gists{/gist_id}", "starred_url": "https://api.github.com/users/killeent/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/killeent/subscriptions", "organizations_url": "https://api.github.com/users/killeent/orgs", "repos_url": "https://api.github.com/users/killeent/repos", "events_url": "https://api.github.com/users/killeent/events{/privacy}", "received_events_url": "https://api.github.com/users/killeent/received_events", "type": "User", "site_admin": false}, "body": "We need to look at this for both performance, and correctness, but this is not a priority for this PR.", "created_at": "2017-06-09T21:16:27Z", "updated_at": "2018-11-23T15:33:43Z", "html_url": "https://github.com/pytorch/pytorch/pull/1766#discussion_r121224412", "pull_request_url": "https://api.github.com/repos/pytorch/pytorch/pulls/1766", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/121224412"}, "html": {"href": "https://github.com/pytorch/pytorch/pull/1766#discussion_r121224412"}, "pull_request": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/1766"}}, "body_html": "<p>We need to look at this for both performance, and correctness, but this is not a priority for this PR.</p>", "body_text": "We need to look at this for both performance, and correctness, but this is not a priority for this PR."}