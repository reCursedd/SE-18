{"url": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/121543341", "pull_request_review_id": 43581200, "id": 121543341, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEyMTU0MzM0MQ==", "diff_hunk": "@@ -0,0 +1,111 @@\n+# this code should be common among cwrap and TensorLib preprocessing\n+# for now, I have put it in one place but right now is copied out of cwrap", "path": "torch/lib/TensorLib/common_with_cwrap.py", "position": 2, "original_position": 2, "commit_id": "dadf12e892b69bca8457a4be963fece8328f2393", "original_commit_id": "a5c86f848213f4877fae40e248a0b7b20d25a458", "user": {"login": "killeent", "id": 4529377, "node_id": "MDQ6VXNlcjQ1MjkzNzc=", "avatar_url": "https://avatars1.githubusercontent.com/u/4529377?v=4", "gravatar_id": "", "url": "https://api.github.com/users/killeent", "html_url": "https://github.com/killeent", "followers_url": "https://api.github.com/users/killeent/followers", "following_url": "https://api.github.com/users/killeent/following{/other_user}", "gists_url": "https://api.github.com/users/killeent/gists{/gist_id}", "starred_url": "https://api.github.com/users/killeent/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/killeent/subscriptions", "organizations_url": "https://api.github.com/users/killeent/orgs", "repos_url": "https://api.github.com/users/killeent/repos", "events_url": "https://api.github.com/users/killeent/events{/privacy}", "received_events_url": "https://api.github.com/users/killeent/received_events", "type": "User", "site_admin": false}, "body": "@zdevito @apaszke I have done a proof-of-concept of this and committed to the repo - we load the `common_with_cwrap` module into `cwrap.py` using the existing nnwrap utility, and reuse the function there. If this is acceptable I will migrate the remaining use cases.", "created_at": "2017-06-12T22:33:47Z", "updated_at": "2018-11-23T15:33:49Z", "html_url": "https://github.com/pytorch/pytorch/pull/1766#discussion_r121543341", "pull_request_url": "https://api.github.com/repos/pytorch/pytorch/pulls/1766", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/121543341"}, "html": {"href": "https://github.com/pytorch/pytorch/pull/1766#discussion_r121543341"}, "pull_request": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/1766"}}, "body_html": "<p><a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=370202\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/zdevito\">@zdevito</a> <a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=4583066\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/apaszke\">@apaszke</a> I have done a proof-of-concept of this and committed to the repo - we load the <code>common_with_cwrap</code> module into <code>cwrap.py</code> using the existing nnwrap utility, and reuse the function there. If this is acceptable I will migrate the remaining use cases.</p>", "body_text": "@zdevito @apaszke I have done a proof-of-concept of this and committed to the repo - we load the common_with_cwrap module into cwrap.py using the existing nnwrap utility, and reuse the function there. If this is acceptable I will migrate the remaining use cases.", "in_reply_to_id": 121265021}