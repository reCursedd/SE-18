{"url": "https://api.github.com/repos/pytorch/pytorch/issues/1958", "repository_url": "https://api.github.com/repos/pytorch/pytorch", "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/1958/labels{/name}", "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/1958/comments", "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/1958/events", "html_url": "https://github.com/pytorch/pytorch/pull/1958", "id": 239823993, "node_id": "MDExOlB1bGxSZXF1ZXN0MTI4NDAyODc3", "number": 1958, "title": "Fix unused linker argument warnings.", "user": {"login": "ezyang", "id": 13564, "node_id": "MDQ6VXNlcjEzNTY0", "avatar_url": "https://avatars0.githubusercontent.com/u/13564?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ezyang", "html_url": "https://github.com/ezyang", "followers_url": "https://api.github.com/users/ezyang/followers", "following_url": "https://api.github.com/users/ezyang/following{/other_user}", "gists_url": "https://api.github.com/users/ezyang/gists{/gist_id}", "starred_url": "https://api.github.com/users/ezyang/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ezyang/subscriptions", "organizations_url": "https://api.github.com/users/ezyang/orgs", "repos_url": "https://api.github.com/users/ezyang/repos", "events_url": "https://api.github.com/users/ezyang/events{/privacy}", "received_events_url": "https://api.github.com/users/ezyang/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2017-06-30T16:08:06Z", "updated_at": "2018-11-23T15:34:01Z", "closed_at": "2017-06-30T18:15:32Z", "author_association": "CONTRIBUTOR", "pull_request": {"url": "https://api.github.com/repos/pytorch/pytorch/pulls/1958", "html_url": "https://github.com/pytorch/pytorch/pull/1958", "diff_url": "https://github.com/pytorch/pytorch/pull/1958.diff", "patch_url": "https://github.com/pytorch/pytorch/pull/1958.patch"}, "body_html": "<p>This patch began when I noticed the following clang warning:</p>\n<p>clang: warning: -Wl,-rpath,RIGIN: 'linker' input unused<br>\nclang: warning: argument unused during compilation:<br>\n'-L/home/ezyang/local/pytorch/torch/lib/tmp_install/lib'</p>\n<p>The warning is minor, but I was a bit worried our rpath wasn't<br>\nsetup correctly.  Actually, it was, and there wasn't a problem,<br>\nbut I had to spend some time figuring out exactly what as going<br>\non, and by the end of it, I might as well fix the warning.  In the end, I ended<br>\nup filing two upstream tickets for ccache and cmake:</p>\n<ul>\n<li><a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load issue title\" data-id=\"239795506\" data-permission-text=\"Issue title is private\" data-url=\"https://github.com/ccache/ccache/issues/189\" data-hovercard-type=\"issue\" data-hovercard-url=\"/ccache/ccache/issues/189/hovercard\" href=\"https://github.com/ccache/ccache/issues/189\">ccache/ccache#189</a></li>\n<li><a href=\"https://gitlab.kitware.com/cmake/cmake/issues/17025\" rel=\"nofollow\">https://gitlab.kitware.com/cmake/cmake/issues/17025</a></li>\n</ul>\n<p>We can remove the warning by using CMAKE_EXE_LINKER_FLAGS and<br>\nCMAKE_SHARED_LINKER_FLAGS, which have sane macro expansion rules<br>\n(although still slightly insane: the first level of escaping gets removed.)<br>\nTo ensure that the rpath was being set correctly, I ran<br>\nobjdump -x torch/lib/build/TH/libTH.so | grep RPATH and verified that ORIGIN<br>\nwas setup correctly.</p>\n<p>I also considered using CMAKE_INSTALL_RPATH, but the rpath here doesn't<br>\nseem to get set until you actually install, which is a change in behavior,<br>\nand I wasn't sure if anyone was relying on rpaths being setup in the build<br>\ndirectory.</p>\n<p>There is a SLIGHT behavior change, in that if we happened to need these<br>\nLDFLAGS passed to the static linker, they won't get passed. I don't<br>\nthink we ever build static libraries today so this shouldn't be aproblem.</p>\n<p>P.S. Because of the ccache bug, you may continue to see these warnings<br>\nafter this patch.  If you apply <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load issue title\" data-id=\"239798383\" data-permission-text=\"Issue title is private\" data-url=\"https://github.com/ccache/ccache/issues/190\" data-hovercard-type=\"pull_request\" data-hovercard-url=\"/ccache/ccache/pull/190/hovercard\" href=\"https://github.com/ccache/ccache/pull/190\">ccache/ccache#190</a><br>\nand clear your cache, it will solve the problem.</p>\n<p>Signed-off-by: Edward Z. Yang <a href=\"mailto:ezyang@fb.com\">ezyang@fb.com</a></p>", "body_text": "This patch began when I noticed the following clang warning:\nclang: warning: -Wl,-rpath,RIGIN: 'linker' input unused\nclang: warning: argument unused during compilation:\n'-L/home/ezyang/local/pytorch/torch/lib/tmp_install/lib'\nThe warning is minor, but I was a bit worried our rpath wasn't\nsetup correctly.  Actually, it was, and there wasn't a problem,\nbut I had to spend some time figuring out exactly what as going\non, and by the end of it, I might as well fix the warning.  In the end, I ended\nup filing two upstream tickets for ccache and cmake:\n\nccache/ccache#189\nhttps://gitlab.kitware.com/cmake/cmake/issues/17025\n\nWe can remove the warning by using CMAKE_EXE_LINKER_FLAGS and\nCMAKE_SHARED_LINKER_FLAGS, which have sane macro expansion rules\n(although still slightly insane: the first level of escaping gets removed.)\nTo ensure that the rpath was being set correctly, I ran\nobjdump -x torch/lib/build/TH/libTH.so | grep RPATH and verified that ORIGIN\nwas setup correctly.\nI also considered using CMAKE_INSTALL_RPATH, but the rpath here doesn't\nseem to get set until you actually install, which is a change in behavior,\nand I wasn't sure if anyone was relying on rpaths being setup in the build\ndirectory.\nThere is a SLIGHT behavior change, in that if we happened to need these\nLDFLAGS passed to the static linker, they won't get passed. I don't\nthink we ever build static libraries today so this shouldn't be aproblem.\nP.S. Because of the ccache bug, you may continue to see these warnings\nafter this patch.  If you apply ccache/ccache#190\nand clear your cache, it will solve the problem.\nSigned-off-by: Edward Z. Yang ezyang@fb.com", "body": "This patch began when I noticed the following clang warning:\r\n\r\nclang: warning: -Wl,-rpath,RIGIN: 'linker' input unused\r\nclang: warning: argument unused during compilation:\r\n'-L/home/ezyang/local/pytorch/torch/lib/tmp_install/lib'\r\n\r\nThe warning is minor, but I was a bit worried our rpath wasn't\r\nsetup correctly.  Actually, it was, and there wasn't a problem,\r\nbut I had to spend some time figuring out exactly what as going\r\non, and by the end of it, I might as well fix the warning.  In the end, I ended\r\nup filing two upstream tickets for ccache and cmake:\r\n\r\n- https://github.com/ccache/ccache/issues/189\r\n- https://gitlab.kitware.com/cmake/cmake/issues/17025\r\n\r\nWe can remove the warning by using CMAKE_EXE_LINKER_FLAGS and\r\nCMAKE_SHARED_LINKER_FLAGS, which have sane macro expansion rules\r\n(although still slightly insane: the first level of escaping gets removed.)\r\nTo ensure that the rpath was being set correctly, I ran\r\nobjdump -x torch/lib/build/TH/libTH.so | grep RPATH and verified that ORIGIN\r\nwas setup correctly.\r\n\r\nI also considered using CMAKE_INSTALL_RPATH, but the rpath here doesn't\r\nseem to get set until you actually install, which is a change in behavior,\r\nand I wasn't sure if anyone was relying on rpaths being setup in the build\r\ndirectory.\r\n\r\nThere is a SLIGHT behavior change, in that if we happened to need these\r\nLDFLAGS passed to the static linker, they won't get passed. I don't\r\nthink we ever build static libraries today so this shouldn't be aproblem.\r\n\r\nP.S. Because of the ccache bug, you may continue to see these warnings\r\nafter this patch.  If you apply https://github.com/ccache/ccache/pull/190\r\nand clear your cache, it will solve the problem.\r\n\r\nSigned-off-by: Edward Z. Yang <ezyang@fb.com>"}