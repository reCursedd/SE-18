{"url": "https://api.github.com/repos/pytorch/pytorch/issues/comments/437469653", "html_url": "https://github.com/pytorch/pytorch/issues/7071#issuecomment-437469653", "issue_url": "https://api.github.com/repos/pytorch/pytorch/issues/7071", "id": 437469653, "node_id": "MDEyOklzc3VlQ29tbWVudDQzNzQ2OTY1Mw==", "user": {"login": "kostyanoob", "id": 42372287, "node_id": "MDQ6VXNlcjQyMzcyMjg3", "avatar_url": "https://avatars1.githubusercontent.com/u/42372287?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kostyanoob", "html_url": "https://github.com/kostyanoob", "followers_url": "https://api.github.com/users/kostyanoob/followers", "following_url": "https://api.github.com/users/kostyanoob/following{/other_user}", "gists_url": "https://api.github.com/users/kostyanoob/gists{/gist_id}", "starred_url": "https://api.github.com/users/kostyanoob/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kostyanoob/subscriptions", "organizations_url": "https://api.github.com/users/kostyanoob/orgs", "repos_url": "https://api.github.com/users/kostyanoob/repos", "events_url": "https://api.github.com/users/kostyanoob/events{/privacy}", "received_events_url": "https://api.github.com/users/kostyanoob/received_events", "type": "User", "site_admin": false}, "created_at": "2018-11-09T19:30:37Z", "updated_at": "2018-11-09T19:30:37Z", "author_association": "NONE", "body_html": "<p>I had this problem even after the bug-fix. You should be able to debug your code and detect the line that causes the memory spill. (by debugging step by step and watching the nvidia-smi tool for memory increase in gpu0). Then you should wrap the problematic line with a scope.</p>\n<p>For example, I found that the loss computation was spilling to GPU0, whereas I wanted to use GPU3 only, so this is what I did:</p>\n<pre><code>with torch.cuda.device(3):\n    loss = hinge_loss(output, y)\n</code></pre>", "body_text": "I had this problem even after the bug-fix. You should be able to debug your code and detect the line that causes the memory spill. (by debugging step by step and watching the nvidia-smi tool for memory increase in gpu0). Then you should wrap the problematic line with a scope.\nFor example, I found that the loss computation was spilling to GPU0, whereas I wanted to use GPU3 only, so this is what I did:\nwith torch.cuda.device(3):\n    loss = hinge_loss(output, y)", "body": "I had this problem even after the bug-fix. You should be able to debug your code and detect the line that causes the memory spill. (by debugging step by step and watching the nvidia-smi tool for memory increase in gpu0). Then you should wrap the problematic line with a scope. \r\n\r\nFor example, I found that the loss computation was spilling to GPU0, whereas I wanted to use GPU3 only, so this is what I did:\r\n```\r\nwith torch.cuda.device(3):\r\n    loss = hinge_loss(output, y)\r\n```"}