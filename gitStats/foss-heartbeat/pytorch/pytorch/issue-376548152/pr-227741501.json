{"url": "https://api.github.com/repos/pytorch/pytorch/pulls/13470", "id": 227741501, "node_id": "MDExOlB1bGxSZXF1ZXN0MjI3NzQxNTAx", "html_url": "https://github.com/pytorch/pytorch/pull/13470", "diff_url": "https://github.com/pytorch/pytorch/pull/13470.diff", "patch_url": "https://github.com/pytorch/pytorch/pull/13470.patch", "issue_url": "https://api.github.com/repos/pytorch/pytorch/issues/13470", "number": 13470, "state": "open", "locked": false, "title": "requires_grad=False when no_grad()", "user": {"login": "SsnL", "id": 5674597, "node_id": "MDQ6VXNlcjU2NzQ1OTc=", "avatar_url": "https://avatars2.githubusercontent.com/u/5674597?v=4", "gravatar_id": "", "url": "https://api.github.com/users/SsnL", "html_url": "https://github.com/SsnL", "followers_url": "https://api.github.com/users/SsnL/followers", "following_url": "https://api.github.com/users/SsnL/following{/other_user}", "gists_url": "https://api.github.com/users/SsnL/gists{/gist_id}", "starred_url": "https://api.github.com/users/SsnL/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/SsnL/subscriptions", "organizations_url": "https://api.github.com/users/SsnL/orgs", "repos_url": "https://api.github.com/users/SsnL/repos", "events_url": "https://api.github.com/users/SsnL/events{/privacy}", "received_events_url": "https://api.github.com/users/SsnL/received_events", "type": "User", "site_admin": false}, "body": "This allows native functions to do computation conditioning on whether gradient is needed. \r\n\r\nFor example, SVD backward needs U and V tensors, but if we just need the singular values and the decomposed tensor doesn't require grad, we can safely skip computing U and V. Empirically, this speeds up nuclear norm calculation for tenors with `requires_grad=False` a lot.\r\n\r\n```py\r\n# CUDA_LAUNCH_BLOCKING=1\r\n\r\nx = (torch.randn(1000, 1000) + torch.eye(1000).div_(20)).cuda()\r\n\r\n%timeit -r 100 x.norm('nuc')\r\n\r\n# pre patch: 21.3 ms \u00b1 1.99 ms per loop (mean \u00b1 std. dev. of 100 runs, 1 loop each)\r\n# post patch: 9.77 ms \u00b1 295 \u00b5s per loop (mean \u00b1 std. dev. of 100 runs, 1 loop each)\r\n\r\nx.requires_grad_()\r\n\r\n%timeit -r 100 x.norm('nuc')\r\n\r\n# pre patch: 25.4 ms \u00b1 2.24 ms per loop (mean \u00b1 std. dev. of 100 runs, 1 loop each)\r\n# post patch: 24.9 ms \u00b1 1.46 ms per loop (mean \u00b1 std. dev. of 100 runs, 1 loop each)\r\n\r\nx = (torch.randn(1000, 1000) + torch.eye(1000).div_(20)).cpu()\r\n\r\n%timeit -r 100 x.norm('nuc')\r\n\r\n# pre patch: 3.73 ms \u00b1 396 \u00b5s per loop (mean \u00b1 std. dev. of 100 runs, 1 loop each)\r\n# post patch: 1.86 ms \u00b1 52.7 \u00b5s per loop (mean \u00b1 std. dev. of 100 runs, 1 loop each)\r\n\r\nx.requires_grad_()\r\n\r\n%timeit -r 100 x.norm('nuc')\r\n\r\n# pre patch: 3.3 ms \u00b1 478 \u00b5s per loop (mean \u00b1 std. dev. of 100 runs, 1 loop each)\r\n# post patch: 3.55 ms \u00b1 434 \u00b5s per loop (mean \u00b1 std. dev. of 100 runs, 1 loop each)\r\n```\r\n\r\n", "created_at": "2018-11-01T20:02:03Z", "updated_at": "2018-11-23T15:54:17Z", "closed_at": null, "merged_at": null, "merge_commit_sha": "b6b762dc2a39ab4344e7b6f5a26f49587d8f1fa6", "assignee": null, "assignees": [], "requested_reviewers": [{"login": "colesbury", "id": 655866, "node_id": "MDQ6VXNlcjY1NTg2Ng==", "avatar_url": "https://avatars1.githubusercontent.com/u/655866?v=4", "gravatar_id": "", "url": "https://api.github.com/users/colesbury", "html_url": "https://github.com/colesbury", "followers_url": "https://api.github.com/users/colesbury/followers", "following_url": "https://api.github.com/users/colesbury/following{/other_user}", "gists_url": "https://api.github.com/users/colesbury/gists{/gist_id}", "starred_url": "https://api.github.com/users/colesbury/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/colesbury/subscriptions", "organizations_url": "https://api.github.com/users/colesbury/orgs", "repos_url": "https://api.github.com/users/colesbury/repos", "events_url": "https://api.github.com/users/colesbury/events{/privacy}", "received_events_url": "https://api.github.com/users/colesbury/received_events", "type": "User", "site_admin": false}], "requested_teams": [], "labels": [], "milestone": null, "commits_url": "https://api.github.com/repos/pytorch/pytorch/pulls/13470/commits", "review_comments_url": "https://api.github.com/repos/pytorch/pytorch/pulls/13470/comments", "review_comment_url": "https://api.github.com/repos/pytorch/pytorch/pulls/comments{/number}", "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/13470/comments", "statuses_url": "https://api.github.com/repos/pytorch/pytorch/statuses/6e57f11a4edf105608e023f88f61e095558b9831", "head": {"label": "SsnL:rg_opt", "ref": "rg_opt", "sha": "6e57f11a4edf105608e023f88f61e095558b9831", "user": {"login": "SsnL", "id": 5674597, "node_id": "MDQ6VXNlcjU2NzQ1OTc=", "avatar_url": "https://avatars2.githubusercontent.com/u/5674597?v=4", "gravatar_id": "", "url": "https://api.github.com/users/SsnL", "html_url": "https://github.com/SsnL", "followers_url": "https://api.github.com/users/SsnL/followers", "following_url": "https://api.github.com/users/SsnL/following{/other_user}", "gists_url": "https://api.github.com/users/SsnL/gists{/gist_id}", "starred_url": "https://api.github.com/users/SsnL/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/SsnL/subscriptions", "organizations_url": "https://api.github.com/users/SsnL/orgs", "repos_url": "https://api.github.com/users/SsnL/repos", "events_url": "https://api.github.com/users/SsnL/events{/privacy}", "received_events_url": "https://api.github.com/users/SsnL/received_events", "type": "User", "site_admin": false}, "repo": {"id": 103305558, "node_id": "MDEwOlJlcG9zaXRvcnkxMDMzMDU1NTg=", "name": "pytorch", "full_name": "SsnL/pytorch", "private": false, "owner": {"login": "SsnL", "id": 5674597, "node_id": "MDQ6VXNlcjU2NzQ1OTc=", "avatar_url": "https://avatars2.githubusercontent.com/u/5674597?v=4", "gravatar_id": "", "url": "https://api.github.com/users/SsnL", "html_url": "https://github.com/SsnL", "followers_url": "https://api.github.com/users/SsnL/followers", "following_url": "https://api.github.com/users/SsnL/following{/other_user}", "gists_url": "https://api.github.com/users/SsnL/gists{/gist_id}", "starred_url": "https://api.github.com/users/SsnL/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/SsnL/subscriptions", "organizations_url": "https://api.github.com/users/SsnL/orgs", "repos_url": "https://api.github.com/users/SsnL/repos", "events_url": "https://api.github.com/users/SsnL/events{/privacy}", "received_events_url": "https://api.github.com/users/SsnL/received_events", "type": "User", "site_admin": false}, "html_url": "https://github.com/SsnL/pytorch", "description": "Tensors and Dynamic neural networks in Python  with strong GPU acceleration", "fork": true, "url": "https://api.github.com/repos/SsnL/pytorch", "forks_url": "https://api.github.com/repos/SsnL/pytorch/forks", "keys_url": "https://api.github.com/repos/SsnL/pytorch/keys{/key_id}", "collaborators_url": "https://api.github.com/repos/SsnL/pytorch/collaborators{/collaborator}", "teams_url": "https://api.github.com/repos/SsnL/pytorch/teams", "hooks_url": "https://api.github.com/repos/SsnL/pytorch/hooks", "issue_events_url": "https://api.github.com/repos/SsnL/pytorch/issues/events{/number}", "events_url": "https://api.github.com/repos/SsnL/pytorch/events", "assignees_url": "https://api.github.com/repos/SsnL/pytorch/assignees{/user}", "branches_url": "https://api.github.com/repos/SsnL/pytorch/branches{/branch}", "tags_url": "https://api.github.com/repos/SsnL/pytorch/tags", "blobs_url": "https://api.github.com/repos/SsnL/pytorch/git/blobs{/sha}", "git_tags_url": "https://api.github.com/repos/SsnL/pytorch/git/tags{/sha}", "git_refs_url": "https://api.github.com/repos/SsnL/pytorch/git/refs{/sha}", "trees_url": "https://api.github.com/repos/SsnL/pytorch/git/trees{/sha}", "statuses_url": "https://api.github.com/repos/SsnL/pytorch/statuses/{sha}", "languages_url": "https://api.github.com/repos/SsnL/pytorch/languages", "stargazers_url": "https://api.github.com/repos/SsnL/pytorch/stargazers", "contributors_url": "https://api.github.com/repos/SsnL/pytorch/contributors", "subscribers_url": "https://api.github.com/repos/SsnL/pytorch/subscribers", "subscription_url": "https://api.github.com/repos/SsnL/pytorch/subscription", "commits_url": "https://api.github.com/repos/SsnL/pytorch/commits{/sha}", "git_commits_url": "https://api.github.com/repos/SsnL/pytorch/git/commits{/sha}", "comments_url": "https://api.github.com/repos/SsnL/pytorch/comments{/number}", "issue_comment_url": "https://api.github.com/repos/SsnL/pytorch/issues/comments{/number}", "contents_url": "https://api.github.com/repos/SsnL/pytorch/contents/{+path}", "compare_url": "https://api.github.com/repos/SsnL/pytorch/compare/{base}...{head}", "merges_url": "https://api.github.com/repos/SsnL/pytorch/merges", "archive_url": "https://api.github.com/repos/SsnL/pytorch/{archive_format}{/ref}", "downloads_url": "https://api.github.com/repos/SsnL/pytorch/downloads", "issues_url": "https://api.github.com/repos/SsnL/pytorch/issues{/number}", "pulls_url": "https://api.github.com/repos/SsnL/pytorch/pulls{/number}", "milestones_url": "https://api.github.com/repos/SsnL/pytorch/milestones{/number}", "notifications_url": "https://api.github.com/repos/SsnL/pytorch/notifications{?since,all,participating}", "labels_url": "https://api.github.com/repos/SsnL/pytorch/labels{/name}", "releases_url": "https://api.github.com/repos/SsnL/pytorch/releases{/id}", "deployments_url": "https://api.github.com/repos/SsnL/pytorch/deployments", "created_at": "2017-09-12T18:13:43Z", "updated_at": "2018-11-04T15:36:18Z", "pushed_at": "2018-11-09T18:32:11Z", "git_url": "git://github.com/SsnL/pytorch.git", "ssh_url": "git@github.com:SsnL/pytorch.git", "clone_url": "https://github.com/SsnL/pytorch.git", "svn_url": "https://github.com/SsnL/pytorch", "homepage": "http://pytorch.org", "size": 83933, "stargazers_count": 0, "watchers_count": 0, "language": "C++", "has_issues": true, "has_projects": true, "has_downloads": true, "has_wiki": true, "has_pages": false, "forks_count": 0, "mirror_url": null, "archived": false, "open_issues_count": 1, "license": {"key": "other", "name": "Other", "spdx_id": "NOASSERTION", "url": null, "node_id": "MDc6TGljZW5zZTA="}, "forks": 0, "open_issues": 1, "watchers": 0, "default_branch": "master"}}, "base": {"label": "pytorch:master", "ref": "master", "sha": "da029ca0422ca95c7489e15fdd9c1f9dc12459d5", "user": {"login": "pytorch", "id": 21003710, "node_id": "MDEyOk9yZ2FuaXphdGlvbjIxMDAzNzEw", "avatar_url": "https://avatars3.githubusercontent.com/u/21003710?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pytorch", "html_url": "https://github.com/pytorch", "followers_url": "https://api.github.com/users/pytorch/followers", "following_url": "https://api.github.com/users/pytorch/following{/other_user}", "gists_url": "https://api.github.com/users/pytorch/gists{/gist_id}", "starred_url": "https://api.github.com/users/pytorch/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pytorch/subscriptions", "organizations_url": "https://api.github.com/users/pytorch/orgs", "repos_url": "https://api.github.com/users/pytorch/repos", "events_url": "https://api.github.com/users/pytorch/events{/privacy}", "received_events_url": "https://api.github.com/users/pytorch/received_events", "type": "Organization", "site_admin": false}, "repo": {"id": 65600975, "node_id": "MDEwOlJlcG9zaXRvcnk2NTYwMDk3NQ==", "name": "pytorch", "full_name": "pytorch/pytorch", "private": false, "owner": {"login": "pytorch", "id": 21003710, "node_id": "MDEyOk9yZ2FuaXphdGlvbjIxMDAzNzEw", "avatar_url": "https://avatars3.githubusercontent.com/u/21003710?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pytorch", "html_url": "https://github.com/pytorch", "followers_url": "https://api.github.com/users/pytorch/followers", "following_url": "https://api.github.com/users/pytorch/following{/other_user}", "gists_url": "https://api.github.com/users/pytorch/gists{/gist_id}", "starred_url": "https://api.github.com/users/pytorch/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pytorch/subscriptions", "organizations_url": "https://api.github.com/users/pytorch/orgs", "repos_url": "https://api.github.com/users/pytorch/repos", "events_url": "https://api.github.com/users/pytorch/events{/privacy}", "received_events_url": "https://api.github.com/users/pytorch/received_events", "type": "Organization", "site_admin": false}, "html_url": "https://github.com/pytorch/pytorch", "description": "Tensors and Dynamic neural networks in Python  with strong GPU acceleration", "fork": false, "url": "https://api.github.com/repos/pytorch/pytorch", "forks_url": "https://api.github.com/repos/pytorch/pytorch/forks", "keys_url": "https://api.github.com/repos/pytorch/pytorch/keys{/key_id}", "collaborators_url": "https://api.github.com/repos/pytorch/pytorch/collaborators{/collaborator}", "teams_url": "https://api.github.com/repos/pytorch/pytorch/teams", "hooks_url": "https://api.github.com/repos/pytorch/pytorch/hooks", "issue_events_url": "https://api.github.com/repos/pytorch/pytorch/issues/events{/number}", "events_url": "https://api.github.com/repos/pytorch/pytorch/events", "assignees_url": "https://api.github.com/repos/pytorch/pytorch/assignees{/user}", "branches_url": "https://api.github.com/repos/pytorch/pytorch/branches{/branch}", "tags_url": "https://api.github.com/repos/pytorch/pytorch/tags", "blobs_url": "https://api.github.com/repos/pytorch/pytorch/git/blobs{/sha}", "git_tags_url": "https://api.github.com/repos/pytorch/pytorch/git/tags{/sha}", "git_refs_url": "https://api.github.com/repos/pytorch/pytorch/git/refs{/sha}", "trees_url": "https://api.github.com/repos/pytorch/pytorch/git/trees{/sha}", "statuses_url": "https://api.github.com/repos/pytorch/pytorch/statuses/{sha}", "languages_url": "https://api.github.com/repos/pytorch/pytorch/languages", "stargazers_url": "https://api.github.com/repos/pytorch/pytorch/stargazers", "contributors_url": "https://api.github.com/repos/pytorch/pytorch/contributors", "subscribers_url": "https://api.github.com/repos/pytorch/pytorch/subscribers", "subscription_url": "https://api.github.com/repos/pytorch/pytorch/subscription", "commits_url": "https://api.github.com/repos/pytorch/pytorch/commits{/sha}", "git_commits_url": "https://api.github.com/repos/pytorch/pytorch/git/commits{/sha}", "comments_url": "https://api.github.com/repos/pytorch/pytorch/comments{/number}", "issue_comment_url": "https://api.github.com/repos/pytorch/pytorch/issues/comments{/number}", "contents_url": "https://api.github.com/repos/pytorch/pytorch/contents/{+path}", "compare_url": "https://api.github.com/repos/pytorch/pytorch/compare/{base}...{head}", "merges_url": "https://api.github.com/repos/pytorch/pytorch/merges", "archive_url": "https://api.github.com/repos/pytorch/pytorch/{archive_format}{/ref}", "downloads_url": "https://api.github.com/repos/pytorch/pytorch/downloads", "issues_url": "https://api.github.com/repos/pytorch/pytorch/issues{/number}", "pulls_url": "https://api.github.com/repos/pytorch/pytorch/pulls{/number}", "milestones_url": "https://api.github.com/repos/pytorch/pytorch/milestones{/number}", "notifications_url": "https://api.github.com/repos/pytorch/pytorch/notifications{?since,all,participating}", "labels_url": "https://api.github.com/repos/pytorch/pytorch/labels{/name}", "releases_url": "https://api.github.com/repos/pytorch/pytorch/releases{/id}", "deployments_url": "https://api.github.com/repos/pytorch/pytorch/deployments", "created_at": "2016-08-13T05:26:41Z", "updated_at": "2018-11-24T12:35:43Z", "pushed_at": "2018-11-24T12:42:01Z", "git_url": "git://github.com/pytorch/pytorch.git", "ssh_url": "git@github.com:pytorch/pytorch.git", "clone_url": "https://github.com/pytorch/pytorch.git", "svn_url": "https://github.com/pytorch/pytorch", "homepage": "http://pytorch.org", "size": 89656, "stargazers_count": 21589, "watchers_count": 21589, "language": "C++", "has_issues": true, "has_projects": true, "has_downloads": true, "has_wiki": true, "has_pages": false, "forks_count": 5153, "mirror_url": null, "archived": false, "open_issues_count": 2196, "license": {"key": "other", "name": "Other", "spdx_id": "NOASSERTION", "url": null, "node_id": "MDc6TGljZW5zZTA="}, "forks": 5153, "open_issues": 2196, "watchers": 21589, "default_branch": "master"}}, "_links": {"self": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/13470"}, "html": {"href": "https://github.com/pytorch/pytorch/pull/13470"}, "issue": {"href": "https://api.github.com/repos/pytorch/pytorch/issues/13470"}, "comments": {"href": "https://api.github.com/repos/pytorch/pytorch/issues/13470/comments"}, "review_comments": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/13470/comments"}, "review_comment": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/comments{/number}"}, "commits": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/13470/commits"}, "statuses": {"href": "https://api.github.com/repos/pytorch/pytorch/statuses/6e57f11a4edf105608e023f88f61e095558b9831"}}, "author_association": "CONTRIBUTOR", "body_html": "<p>This allows native functions to do computation conditioning on whether gradient is needed.</p>\n<p>For example, SVD backward needs U and V tensors, but if we just need the singular values and the decomposed tensor doesn't require grad, we can safely skip computing U and V. Empirically, this speeds up nuclear norm calculation for tenors with <code>requires_grad=False</code> a lot.</p>\n<div class=\"highlight highlight-source-python\"><pre><span class=\"pl-c\"><span class=\"pl-c\">#</span> CUDA_LAUNCH_BLOCKING=1</span>\n\nx <span class=\"pl-k\">=</span> (torch.randn(<span class=\"pl-c1\">1000</span>, <span class=\"pl-c1\">1000</span>) <span class=\"pl-k\">+</span> torch.eye(<span class=\"pl-c1\">1000</span>).div_(<span class=\"pl-c1\">20</span>)).cuda()\n\n<span class=\"pl-k\">%</span>timeit <span class=\"pl-k\">-</span>r <span class=\"pl-c1\">100</span> x.norm(<span class=\"pl-s\"><span class=\"pl-pds\">'</span>nuc<span class=\"pl-pds\">'</span></span>)\n\n<span class=\"pl-c\"><span class=\"pl-c\">#</span> pre patch: 21.3 ms \u00b1 1.99 ms per loop (mean \u00b1 std. dev. of 100 runs, 1 loop each)</span>\n<span class=\"pl-c\"><span class=\"pl-c\">#</span> post patch: 9.77 ms \u00b1 295 \u00b5s per loop (mean \u00b1 std. dev. of 100 runs, 1 loop each)</span>\n\nx.requires_grad_()\n\n<span class=\"pl-k\">%</span>timeit <span class=\"pl-k\">-</span>r <span class=\"pl-c1\">100</span> x.norm(<span class=\"pl-s\"><span class=\"pl-pds\">'</span>nuc<span class=\"pl-pds\">'</span></span>)\n\n<span class=\"pl-c\"><span class=\"pl-c\">#</span> pre patch: 25.4 ms \u00b1 2.24 ms per loop (mean \u00b1 std. dev. of 100 runs, 1 loop each)</span>\n<span class=\"pl-c\"><span class=\"pl-c\">#</span> post patch: 24.9 ms \u00b1 1.46 ms per loop (mean \u00b1 std. dev. of 100 runs, 1 loop each)</span>\n\nx <span class=\"pl-k\">=</span> (torch.randn(<span class=\"pl-c1\">1000</span>, <span class=\"pl-c1\">1000</span>) <span class=\"pl-k\">+</span> torch.eye(<span class=\"pl-c1\">1000</span>).div_(<span class=\"pl-c1\">20</span>)).cpu()\n\n<span class=\"pl-k\">%</span>timeit <span class=\"pl-k\">-</span>r <span class=\"pl-c1\">100</span> x.norm(<span class=\"pl-s\"><span class=\"pl-pds\">'</span>nuc<span class=\"pl-pds\">'</span></span>)\n\n<span class=\"pl-c\"><span class=\"pl-c\">#</span> pre patch: 3.73 ms \u00b1 396 \u00b5s per loop (mean \u00b1 std. dev. of 100 runs, 1 loop each)</span>\n<span class=\"pl-c\"><span class=\"pl-c\">#</span> post patch: 1.86 ms \u00b1 52.7 \u00b5s per loop (mean \u00b1 std. dev. of 100 runs, 1 loop each)</span>\n\nx.requires_grad_()\n\n<span class=\"pl-k\">%</span>timeit <span class=\"pl-k\">-</span>r <span class=\"pl-c1\">100</span> x.norm(<span class=\"pl-s\"><span class=\"pl-pds\">'</span>nuc<span class=\"pl-pds\">'</span></span>)\n\n<span class=\"pl-c\"><span class=\"pl-c\">#</span> pre patch: 3.3 ms \u00b1 478 \u00b5s per loop (mean \u00b1 std. dev. of 100 runs, 1 loop each)</span>\n<span class=\"pl-c\"><span class=\"pl-c\">#</span> post patch: 3.55 ms \u00b1 434 \u00b5s per loop (mean \u00b1 std. dev. of 100 runs, 1 loop each)</span></pre></div>", "body_text": "This allows native functions to do computation conditioning on whether gradient is needed.\nFor example, SVD backward needs U and V tensors, but if we just need the singular values and the decomposed tensor doesn't require grad, we can safely skip computing U and V. Empirically, this speeds up nuclear norm calculation for tenors with requires_grad=False a lot.\n# CUDA_LAUNCH_BLOCKING=1\n\nx = (torch.randn(1000, 1000) + torch.eye(1000).div_(20)).cuda()\n\n%timeit -r 100 x.norm('nuc')\n\n# pre patch: 21.3 ms \u00b1 1.99 ms per loop (mean \u00b1 std. dev. of 100 runs, 1 loop each)\n# post patch: 9.77 ms \u00b1 295 \u00b5s per loop (mean \u00b1 std. dev. of 100 runs, 1 loop each)\n\nx.requires_grad_()\n\n%timeit -r 100 x.norm('nuc')\n\n# pre patch: 25.4 ms \u00b1 2.24 ms per loop (mean \u00b1 std. dev. of 100 runs, 1 loop each)\n# post patch: 24.9 ms \u00b1 1.46 ms per loop (mean \u00b1 std. dev. of 100 runs, 1 loop each)\n\nx = (torch.randn(1000, 1000) + torch.eye(1000).div_(20)).cpu()\n\n%timeit -r 100 x.norm('nuc')\n\n# pre patch: 3.73 ms \u00b1 396 \u00b5s per loop (mean \u00b1 std. dev. of 100 runs, 1 loop each)\n# post patch: 1.86 ms \u00b1 52.7 \u00b5s per loop (mean \u00b1 std. dev. of 100 runs, 1 loop each)\n\nx.requires_grad_()\n\n%timeit -r 100 x.norm('nuc')\n\n# pre patch: 3.3 ms \u00b1 478 \u00b5s per loop (mean \u00b1 std. dev. of 100 runs, 1 loop each)\n# post patch: 3.55 ms \u00b1 434 \u00b5s per loop (mean \u00b1 std. dev. of 100 runs, 1 loop each)", "merged": false, "mergeable": null, "rebaseable": null, "mergeable_state": "unknown", "merged_by": null, "comments": 0, "review_comments": 12, "maintainer_can_modify": true, "commits": 4, "additions": 49, "deletions": 25, "changed_files": 7}