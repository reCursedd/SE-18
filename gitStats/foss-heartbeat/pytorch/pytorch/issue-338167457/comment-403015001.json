{"url": "https://api.github.com/repos/pytorch/pytorch/issues/comments/403015001", "html_url": "https://github.com/pytorch/pytorch/issues/9163#issuecomment-403015001", "issue_url": "https://api.github.com/repos/pytorch/pytorch/issues/9163", "id": 403015001, "node_id": "MDEyOklzc3VlQ29tbWVudDQwMzAxNTAwMQ==", "user": {"login": "apaszke", "id": 4583066, "node_id": "MDQ6VXNlcjQ1ODMwNjY=", "avatar_url": "https://avatars3.githubusercontent.com/u/4583066?v=4", "gravatar_id": "", "url": "https://api.github.com/users/apaszke", "html_url": "https://github.com/apaszke", "followers_url": "https://api.github.com/users/apaszke/followers", "following_url": "https://api.github.com/users/apaszke/following{/other_user}", "gists_url": "https://api.github.com/users/apaszke/gists{/gist_id}", "starred_url": "https://api.github.com/users/apaszke/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/apaszke/subscriptions", "organizations_url": "https://api.github.com/users/apaszke/orgs", "repos_url": "https://api.github.com/users/apaszke/repos", "events_url": "https://api.github.com/users/apaszke/events{/privacy}", "received_events_url": "https://api.github.com/users/apaszke/received_events", "type": "User", "site_admin": false}, "created_at": "2018-07-06T12:07:42Z", "updated_at": "2018-07-06T12:07:42Z", "author_association": "MEMBER", "body_html": "<p>NCCL really needs to run multiple kernels on multiple GPUs simultaneously, or otherwise it will deadlock. This is why having 2 processes running DataParallels causes deadlocks (one starts a kernel on GPU0, another one on GPU1, you get a deadlock). Same issue happens here, because the CPU has to wait for GPU0 to return before it can queue the GPU1 kernel, but the GPU0 waits for GPU1.</p>", "body_text": "NCCL really needs to run multiple kernels on multiple GPUs simultaneously, or otherwise it will deadlock. This is why having 2 processes running DataParallels causes deadlocks (one starts a kernel on GPU0, another one on GPU1, you get a deadlock). Same issue happens here, because the CPU has to wait for GPU0 to return before it can queue the GPU1 kernel, but the GPU0 waits for GPU1.", "body": "NCCL really needs to run multiple kernels on multiple GPUs simultaneously, or otherwise it will deadlock. This is why having 2 processes running DataParallels causes deadlocks (one starts a kernel on GPU0, another one on GPU1, you get a deadlock). Same issue happens here, because the CPU has to wait for GPU0 to return before it can queue the GPU1 kernel, but the GPU0 waits for GPU1."}