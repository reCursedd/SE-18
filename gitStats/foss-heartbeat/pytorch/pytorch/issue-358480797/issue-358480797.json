{"url": "https://api.github.com/repos/pytorch/pytorch/issues/11449", "repository_url": "https://api.github.com/repos/pytorch/pytorch", "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/11449/labels{/name}", "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/11449/comments", "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/11449/events", "html_url": "https://github.com/pytorch/pytorch/pull/11449", "id": 358480797, "node_id": "MDExOlB1bGxSZXF1ZXN0MjE0MjA3MDYx", "number": 11449, "title": "Move Gloo build to build_caffe2", "user": {"login": "soumith", "id": 1310570, "node_id": "MDQ6VXNlcjEzMTA1NzA=", "avatar_url": "https://avatars0.githubusercontent.com/u/1310570?v=4", "gravatar_id": "", "url": "https://api.github.com/users/soumith", "html_url": "https://github.com/soumith", "followers_url": "https://api.github.com/users/soumith/followers", "following_url": "https://api.github.com/users/soumith/following{/other_user}", "gists_url": "https://api.github.com/users/soumith/gists{/gist_id}", "starred_url": "https://api.github.com/users/soumith/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/soumith/subscriptions", "organizations_url": "https://api.github.com/users/soumith/orgs", "repos_url": "https://api.github.com/users/soumith/repos", "events_url": "https://api.github.com/users/soumith/events{/privacy}", "received_events_url": "https://api.github.com/users/soumith/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 890282107, "node_id": "MDU6TGFiZWw4OTAyODIxMDc=", "url": "https://api.github.com/repos/pytorch/pytorch/labels/caffe2", "name": "caffe2", "color": "210aa8", "default": false}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2018-09-10T06:10:49Z", "updated_at": "2018-09-25T16:44:45Z", "closed_at": null, "author_association": "MEMBER", "pull_request": {"url": "https://api.github.com/repos/pytorch/pytorch/pulls/11449", "html_url": "https://github.com/pytorch/pytorch/pull/11449", "diff_url": "https://github.com/pytorch/pytorch/pull/11449.diff", "patch_url": "https://github.com/pytorch/pytorch/pull/11449.patch"}, "body_html": "<p>This PR moves gloo build from being an isolated cmake invocation (via <code>build_pytorch_libs.sh</code>) to <code>build_caffe2</code> i.e. the unified <code>CMakeLists.txt</code>.</p>\n<p>The PR also requires <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load issue title\" data-id=\"358470991\" data-permission-text=\"Issue title is private\" data-url=\"https://github.com/facebookincubator/gloo/issues/132\" data-hovercard-type=\"pull_request\" data-hovercard-url=\"/facebookincubator/gloo/pull/132/hovercard\" href=\"https://github.com/facebookincubator/gloo/pull/132\">facebookincubator/gloo#132</a> via a submodule update (after that PR lands).</p>\n<p>There are a few open questions regardless of this PR:</p>\n<ol>\n<li>Gloo is generated as static libs by default right now. However, three separate libraries {<code>c10d</code>, <code>THD</code> and <code>caffe2.so / caffe2_gpu.so</code> are then linking to the static <code>gloo</code> libs. They're all loaded into the same process. We should either switch to shared linkage (complicates more of point (2) below), or dedup static linkage to subsequently only touch one lib (probably caffe2.so). This isn't a problem if both <code>c10d</code> and <code>THD</code> are static libs.</li>\n<li>We link to <code>nccl_static.a</code> in the binaries to <code>_C.so</code> (follow <code>USE_NCCL</code> in <code>setup.py</code>). This worked out well before, because <code>THD</code> and <code>c10d</code> were static libs, and <code>FULL_CAFFE2</code> was guarding <code>NCCL</code> linkage for the caffe2 bits (and no <code>nccl</code> symbols were pushed into <code>libcaffe2_gpu.so</code> effectively. However, after <code>FULL_CAFFE2</code> was removed, this is no longer true. So we need to dedup the linkage with <code>nccl2</code> (especially in static case) across <code>_C.so</code> and <code>libcaffe2_gpu.so</code></li>\n</ol>", "body_text": "This PR moves gloo build from being an isolated cmake invocation (via build_pytorch_libs.sh) to build_caffe2 i.e. the unified CMakeLists.txt.\nThe PR also requires facebookincubator/gloo#132 via a submodule update (after that PR lands).\nThere are a few open questions regardless of this PR:\n\nGloo is generated as static libs by default right now. However, three separate libraries {c10d, THD and caffe2.so / caffe2_gpu.so are then linking to the static gloo libs. They're all loaded into the same process. We should either switch to shared linkage (complicates more of point (2) below), or dedup static linkage to subsequently only touch one lib (probably caffe2.so). This isn't a problem if both c10d and THD are static libs.\nWe link to nccl_static.a in the binaries to _C.so (follow USE_NCCL in setup.py). This worked out well before, because THD and c10d were static libs, and FULL_CAFFE2 was guarding NCCL linkage for the caffe2 bits (and no nccl symbols were pushed into libcaffe2_gpu.so effectively. However, after FULL_CAFFE2 was removed, this is no longer true. So we need to dedup the linkage with nccl2 (especially in static case) across _C.so and libcaffe2_gpu.so", "body": "This PR moves gloo build from being an isolated cmake invocation (via `build_pytorch_libs.sh`) to `build_caffe2` i.e. the unified `CMakeLists.txt`.\r\n\r\nThe PR also requires https://github.com/facebookincubator/gloo/pull/132 via a submodule update (after that PR lands).\r\n\r\nThere are a few open questions regardless of this PR:\r\n\r\n1. Gloo is generated as static libs by default right now. However, three separate libraries {`c10d`, `THD` and `caffe2.so / caffe2_gpu.so` are then linking to the static `gloo` libs. They're all loaded into the same process. We should either switch to shared linkage (complicates more of point (2) below), or dedup static linkage to subsequently only touch one lib (probably caffe2.so). This isn't a problem if both `c10d` and `THD` are static libs.\r\n2. We link to `nccl_static.a` in the binaries to `_C.so` (follow `USE_NCCL` in `setup.py`). This worked out well before, because `THD` and `c10d` were static libs, and `FULL_CAFFE2` was guarding `NCCL` linkage for the caffe2 bits (and no `nccl` symbols were pushed into `libcaffe2_gpu.so` effectively. However, after `FULL_CAFFE2` was removed, this is no longer true. So we need to dedup the linkage with `nccl2` (especially in static case) across `_C.so` and `libcaffe2_gpu.so`"}