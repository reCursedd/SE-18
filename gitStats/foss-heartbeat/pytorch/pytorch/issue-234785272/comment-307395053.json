{"url": "https://api.github.com/repos/pytorch/pytorch/issues/comments/307395053", "html_url": "https://github.com/pytorch/pytorch/issues/1760#issuecomment-307395053", "issue_url": "https://api.github.com/repos/pytorch/pytorch/issues/1760", "id": 307395053, "node_id": "MDEyOklzc3VlQ29tbWVudDMwNzM5NTA1Mw==", "user": {"login": "chenzhekl", "id": 1201055, "node_id": "MDQ6VXNlcjEyMDEwNTU=", "avatar_url": "https://avatars3.githubusercontent.com/u/1201055?v=4", "gravatar_id": "", "url": "https://api.github.com/users/chenzhekl", "html_url": "https://github.com/chenzhekl", "followers_url": "https://api.github.com/users/chenzhekl/followers", "following_url": "https://api.github.com/users/chenzhekl/following{/other_user}", "gists_url": "https://api.github.com/users/chenzhekl/gists{/gist_id}", "starred_url": "https://api.github.com/users/chenzhekl/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/chenzhekl/subscriptions", "organizations_url": "https://api.github.com/users/chenzhekl/orgs", "repos_url": "https://api.github.com/users/chenzhekl/repos", "events_url": "https://api.github.com/users/chenzhekl/events{/privacy}", "received_events_url": "https://api.github.com/users/chenzhekl/received_events", "type": "User", "site_admin": false}, "created_at": "2017-06-09T13:54:21Z", "updated_at": "2017-06-09T13:54:21Z", "author_association": "NONE", "body_html": "<p>It is better to post this question to the forum.</p>\n<p><code>self.y = x</code> simply makes <code>y</code> points to <code>x</code>. While <code>Variable(torch.Tensor(x.data.numpy()), requires_grad=x.requires_grad, volatile=x.volatile)</code> recreats a new <code>Variable</code> using data in <code>x</code>. It loses all computational history of <code>x</code>.</p>\n<p>In your case, <code>y.grad</code> is not calculated because it is not a leaf node when <code>y = x</code>. Recreating a new <code>Variable</code> makes it a leaf node.</p>", "body_text": "It is better to post this question to the forum.\nself.y = x simply makes y points to x. While Variable(torch.Tensor(x.data.numpy()), requires_grad=x.requires_grad, volatile=x.volatile) recreats a new Variable using data in x. It loses all computational history of x.\nIn your case, y.grad is not calculated because it is not a leaf node when y = x. Recreating a new Variable makes it a leaf node.", "body": "It is better to post this question to the forum.\r\n\r\n`self.y = x` simply makes `y` points to `x`. While `Variable(torch.Tensor(x.data.numpy()), requires_grad=x.requires_grad, volatile=x.volatile)` recreats a new `Variable` using data in `x`. It loses all computational history of `x`.\r\n\r\nIn your case, `y.grad` is not calculated because it is not a leaf node when `y = x`. Recreating a new `Variable` makes it a leaf node."}