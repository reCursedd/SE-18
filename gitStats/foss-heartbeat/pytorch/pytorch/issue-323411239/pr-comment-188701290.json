{"url": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/188701290", "pull_request_review_id": 120732649, "id": 188701290, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4ODcwMTI5MA==", "diff_hunk": "@@ -0,0 +1,71 @@\n+#include \"caffe2/operators/elementwise_op.h\"\n+#include \"caffe2/utils/math.h\"\n+\n+namespace caffe2 {\n+\n+struct AsinCPUFunctor {\n+  template <typename T>\n+  inline void\n+  operator()(const int n, const T* x, T* y, CPUContext* device_context) {\n+    math::Asin<T, CPUContext>(n, x, y, device_context);\n+  }\n+};\n+\n+REGISTER_CPU_OPERATOR(\n+    Asin,\n+    UnaryElementwiseOp<TensorTypes<float>, CPUContext, AsinCPUFunctor>);\n+\n+OPERATOR_SCHEMA(Asin)\n+    .NumInputs(1)\n+    .NumOutputs(1)\n+    .IdenticalTypeAndShape()\n+    .SetDoc(R\"DOC(\n+Calculates the arcsine of the given input tensor, element-wise.\n+)DOC\")\n+    .Input(0, \"input\", \"Input tensor\")\n+    .Output(0, \"output\", \"The arcsine of the input tensor computed element-wise\");\n+\n+OPERATOR_SCHEMA(AsinGradient).NumInputs(2).NumOutputs(1).IdenticalTypeAndShape();\n+\n+class GetAsinGradient : public GradientMakerBase {\n+  using GradientMakerBase::GradientMakerBase;\n+  vector<OperatorDef> GetGradientDefs() override {\n+    Argument one_arg;\n+    one_arg.set_name(\"value\");\n+    one_arg.set_f(1);\n+    return vector<OperatorDef>{CreateOperatorDef(", "path": "caffe2/operators/asin_op.cc", "position": null, "original_position": 36, "commit_id": "0c45b6f7da10ba016550aaaedb4734b4318bd870", "original_commit_id": "097f42f7a3c684c17063160c50e2bb581bfac935", "user": {"login": "salexspb", "id": 20307328, "node_id": "MDQ6VXNlcjIwMzA3MzI4", "avatar_url": "https://avatars2.githubusercontent.com/u/20307328?v=4", "gravatar_id": "", "url": "https://api.github.com/users/salexspb", "html_url": "https://github.com/salexspb", "followers_url": "https://api.github.com/users/salexspb/followers", "following_url": "https://api.github.com/users/salexspb/following{/other_user}", "gists_url": "https://api.github.com/users/salexspb/gists{/gist_id}", "starred_url": "https://api.github.com/users/salexspb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/salexspb/subscriptions", "organizations_url": "https://api.github.com/users/salexspb/orgs", "repos_url": "https://api.github.com/users/salexspb/repos", "events_url": "https://api.github.com/users/salexspb/events{/privacy}", "received_events_url": "https://api.github.com/users/salexspb/received_events", "type": "User", "site_admin": false}, "body": "how about just fusing this manually? this implementation on Caffe2 graph seems to be  inefficient. And we are not there for full compilers support yet. ", "created_at": "2018-05-16T17:04:30Z", "updated_at": "2018-11-23T15:44:10Z", "html_url": "https://github.com/pytorch/pytorch/pull/7600#discussion_r188701290", "pull_request_url": "https://api.github.com/repos/pytorch/pytorch/pulls/7600", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/188701290"}, "html": {"href": "https://github.com/pytorch/pytorch/pull/7600#discussion_r188701290"}, "pull_request": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/7600"}}, "body_html": "<p>how about just fusing this manually? this implementation on Caffe2 graph seems to be  inefficient. And we are not there for full compilers support yet.</p>", "body_text": "how about just fusing this manually? this implementation on Caffe2 graph seems to be  inefficient. And we are not there for full compilers support yet."}