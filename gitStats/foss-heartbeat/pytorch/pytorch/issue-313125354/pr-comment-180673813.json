{"url": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/180673813", "pull_request_review_id": 111132102, "id": 180673813, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MDY3MzgxMw==", "diff_hunk": "@@ -121,8 +121,18 @@ def _with_file_like(f, mode, body):\n             f.close()\n \n \n+def _is_compressed_file(f):\n+    compress_modules = ['gzip']\n+    try:\n+        return f.__module__ in compress_modules", "path": "torch/serialization.py", "position": null, "original_position": 7, "commit_id": "a6d35ccbfc5b58cc82772eca09fe1633a1dc35b5", "original_commit_id": "4e10a4416b80e408d7c183e95b5a065dec2d1af5", "user": {"login": "apaszke", "id": 4583066, "node_id": "MDQ6VXNlcjQ1ODMwNjY=", "avatar_url": "https://avatars3.githubusercontent.com/u/4583066?v=4", "gravatar_id": "", "url": "https://api.github.com/users/apaszke", "html_url": "https://github.com/apaszke", "followers_url": "https://api.github.com/users/apaszke/followers", "following_url": "https://api.github.com/users/apaszke/following{/other_user}", "gists_url": "https://api.github.com/users/apaszke/gists{/gist_id}", "starred_url": "https://api.github.com/users/apaszke/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/apaszke/subscriptions", "organizations_url": "https://api.github.com/users/apaszke/orgs", "repos_url": "https://api.github.com/users/apaszke/repos", "events_url": "https://api.github.com/users/apaszke/events{/privacy}", "received_events_url": "https://api.github.com/users/apaszke/received_events", "type": "User", "site_admin": false}, "body": "That's a really good idea, but it might be a bit complicated. A excerpt from docs of `open()`:\r\n\r\n> The type of file object returned by the open() function depends on the mode. When open() is used to open a file in a text mode ('w', 'r', 'wt', 'rt', etc.), it returns a subclass of io.TextIOBase (specifically io.TextIOWrapper). When used to open a file in a binary mode with buffering, the returned class is a subclass of io.BufferedIOBase. The exact class varies: in read binary mode, it returns an io.BufferedReader; in write binary and append binary modes, it returns an io.BufferedWriter, and in read/write mode, it returns an io.BufferedRandom. When buffering is disabled, the raw stream, a subclass of io.RawIOBase, io.FileIO, is returned.", "created_at": "2018-04-11T08:31:00Z", "updated_at": "2018-11-23T15:42:15Z", "html_url": "https://github.com/pytorch/pytorch/pull/6490#discussion_r180673813", "pull_request_url": "https://api.github.com/repos/pytorch/pytorch/pulls/6490", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/180673813"}, "html": {"href": "https://github.com/pytorch/pytorch/pull/6490#discussion_r180673813"}, "pull_request": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/6490"}}, "body_html": "<p>That's a really good idea, but it might be a bit complicated. A excerpt from docs of <code>open()</code>:</p>\n<blockquote>\n<p>The type of file object returned by the open() function depends on the mode. When open() is used to open a file in a text mode ('w', 'r', 'wt', 'rt', etc.), it returns a subclass of io.TextIOBase (specifically io.TextIOWrapper). When used to open a file in a binary mode with buffering, the returned class is a subclass of io.BufferedIOBase. The exact class varies: in read binary mode, it returns an io.BufferedReader; in write binary and append binary modes, it returns an io.BufferedWriter, and in read/write mode, it returns an io.BufferedRandom. When buffering is disabled, the raw stream, a subclass of io.RawIOBase, io.FileIO, is returned.</p>\n</blockquote>", "body_text": "That's a really good idea, but it might be a bit complicated. A excerpt from docs of open():\n\nThe type of file object returned by the open() function depends on the mode. When open() is used to open a file in a text mode ('w', 'r', 'wt', 'rt', etc.), it returns a subclass of io.TextIOBase (specifically io.TextIOWrapper). When used to open a file in a binary mode with buffering, the returned class is a subclass of io.BufferedIOBase. The exact class varies: in read binary mode, it returns an io.BufferedReader; in write binary and append binary modes, it returns an io.BufferedWriter, and in read/write mode, it returns an io.BufferedRandom. When buffering is disabled, the raw stream, a subclass of io.RawIOBase, io.FileIO, is returned.", "in_reply_to_id": 180613811}