{"url": "https://api.github.com/repos/pytorch/pytorch/issues/5737", "repository_url": "https://api.github.com/repos/pytorch/pytorch", "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/5737/labels{/name}", "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/5737/comments", "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/5737/events", "html_url": "https://github.com/pytorch/pytorch/issues/5737", "id": 304728213, "node_id": "MDU6SXNzdWUzMDQ3MjgyMTM=", "number": 5737, "title": "[feature request] Callback on learning rate drop in torch.optim.lr_scheduler.ReduceLROnPlateau", "user": {"login": "reynoldscem", "id": 5931862, "node_id": "MDQ6VXNlcjU5MzE4NjI=", "avatar_url": "https://avatars2.githubusercontent.com/u/5931862?v=4", "gravatar_id": "", "url": "https://api.github.com/users/reynoldscem", "html_url": "https://github.com/reynoldscem", "followers_url": "https://api.github.com/users/reynoldscem/followers", "following_url": "https://api.github.com/users/reynoldscem/following{/other_user}", "gists_url": "https://api.github.com/users/reynoldscem/gists{/gist_id}", "starred_url": "https://api.github.com/users/reynoldscem/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/reynoldscem/subscriptions", "organizations_url": "https://api.github.com/users/reynoldscem/orgs", "repos_url": "https://api.github.com/users/reynoldscem/repos", "events_url": "https://api.github.com/users/reynoldscem/events{/privacy}", "received_events_url": "https://api.github.com/users/reynoldscem/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 443483881, "node_id": "MDU6TGFiZWw0NDM0ODM4ODE=", "url": "https://api.github.com/repos/pytorch/pytorch/labels/todo", "name": "todo", "color": "c2e0c6", "default": false}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-03-13T11:35:29Z", "updated_at": "2018-06-01T15:36:30Z", "closed_at": null, "author_association": "NONE", "body_html": "<p>Currently <a href=\"http://pytorch.org/docs/master/optim.html#torch.optim.lr_scheduler.ReduceLROnPlateau\" rel=\"nofollow\">torch.optim.lr_scheduler.ReduceLROnPlateau</a> has the option to print a fixed message once the learning rate drops.</p>\n<p>I propose that either this be replaced, or modified in some way so that we can run an arbitrary closure / callback at each drop.</p>\n<p>This could be useful for things such as logging which epochs the drop happened at, for terminating after a given number of drops, for taking a model snapshot, etc.</p>", "body_text": "Currently torch.optim.lr_scheduler.ReduceLROnPlateau has the option to print a fixed message once the learning rate drops.\nI propose that either this be replaced, or modified in some way so that we can run an arbitrary closure / callback at each drop.\nThis could be useful for things such as logging which epochs the drop happened at, for terminating after a given number of drops, for taking a model snapshot, etc.", "body": "Currently [torch.optim.lr_scheduler.ReduceLROnPlateau](http://pytorch.org/docs/master/optim.html#torch.optim.lr_scheduler.ReduceLROnPlateau) has the option to print a fixed message once the learning rate drops.\r\n\r\nI propose that either this be replaced, or modified in some way so that we can run an arbitrary closure / callback at each drop.\r\n\r\nThis could be useful for things such as logging which epochs the drop happened at, for terminating after a given number of drops, for taking a model snapshot, etc."}