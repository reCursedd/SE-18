{"url": "https://api.github.com/repos/pytorch/pytorch/issues/comments/375661717", "html_url": "https://github.com/pytorch/pytorch/issues/5737#issuecomment-375661717", "issue_url": "https://api.github.com/repos/pytorch/pytorch/issues/5737", "id": 375661717, "node_id": "MDEyOklzc3VlQ29tbWVudDM3NTY2MTcxNw==", "user": {"login": "StephanHeijl", "id": 3799160, "node_id": "MDQ6VXNlcjM3OTkxNjA=", "avatar_url": "https://avatars2.githubusercontent.com/u/3799160?v=4", "gravatar_id": "", "url": "https://api.github.com/users/StephanHeijl", "html_url": "https://github.com/StephanHeijl", "followers_url": "https://api.github.com/users/StephanHeijl/followers", "following_url": "https://api.github.com/users/StephanHeijl/following{/other_user}", "gists_url": "https://api.github.com/users/StephanHeijl/gists{/gist_id}", "starred_url": "https://api.github.com/users/StephanHeijl/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/StephanHeijl/subscriptions", "organizations_url": "https://api.github.com/users/StephanHeijl/orgs", "repos_url": "https://api.github.com/users/StephanHeijl/repos", "events_url": "https://api.github.com/users/StephanHeijl/events{/privacy}", "received_events_url": "https://api.github.com/users/StephanHeijl/received_events", "type": "User", "site_admin": false}, "created_at": "2018-03-23T13:17:19Z", "updated_at": "2018-03-23T13:17:19Z", "author_association": "NONE", "body_html": "<p>This behaviour can be emulated by checking if the <code>ReduceLROnPlateau</code> property <code>cooldown_counter</code> is equal to <code>ReduceLROnPlateau.cooldown</code> immediately after performing a step, or doing a simple boolean check on the <code>in_cooldown</code> property like so:</p>\n<pre><code>scheduler = optim.lr_scheduler.ReduceLROnPlateau(*args)\nif scheduler.in_cooldown:\n    callback()\n</code></pre>", "body_text": "This behaviour can be emulated by checking if the ReduceLROnPlateau property cooldown_counter is equal to ReduceLROnPlateau.cooldown immediately after performing a step, or doing a simple boolean check on the in_cooldown property like so:\nscheduler = optim.lr_scheduler.ReduceLROnPlateau(*args)\nif scheduler.in_cooldown:\n    callback()", "body": "This behaviour can be emulated by checking if the `ReduceLROnPlateau` property `cooldown_counter` is equal to `ReduceLROnPlateau.cooldown` immediately after performing a step, or doing a simple boolean check on the `in_cooldown` property like so:\r\n\r\n```\r\nscheduler = optim.lr_scheduler.ReduceLROnPlateau(*args)\r\nif scheduler.in_cooldown:\r\n    callback()\r\n```"}