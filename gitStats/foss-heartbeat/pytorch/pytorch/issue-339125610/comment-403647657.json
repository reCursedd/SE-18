{"url": "https://api.github.com/repos/pytorch/pytorch/issues/comments/403647657", "html_url": "https://github.com/pytorch/pytorch/issues/9235#issuecomment-403647657", "issue_url": "https://api.github.com/repos/pytorch/pytorch/issues/9235", "id": 403647657, "node_id": "MDEyOklzc3VlQ29tbWVudDQwMzY0NzY1Nw==", "user": {"login": "jiapei100", "id": 154013, "node_id": "MDQ6VXNlcjE1NDAxMw==", "avatar_url": "https://avatars1.githubusercontent.com/u/154013?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jiapei100", "html_url": "https://github.com/jiapei100", "followers_url": "https://api.github.com/users/jiapei100/followers", "following_url": "https://api.github.com/users/jiapei100/following{/other_user}", "gists_url": "https://api.github.com/users/jiapei100/gists{/gist_id}", "starred_url": "https://api.github.com/users/jiapei100/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jiapei100/subscriptions", "organizations_url": "https://api.github.com/users/jiapei100/orgs", "repos_url": "https://api.github.com/users/jiapei100/repos", "events_url": "https://api.github.com/users/jiapei100/events{/privacy}", "received_events_url": "https://api.github.com/users/jiapei100/received_events", "type": "User", "site_admin": false}, "created_at": "2018-07-09T23:08:18Z", "updated_at": "2018-07-10T00:11:36Z", "author_association": "NONE", "body_html": "<p><a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=6456020\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/pjh5\">@pjh5</a></p>\n<ul>\n<li>I followed your suggestion, <code>git clone --recursive</code> , still, after pressing <strong>g</strong> (for generating), I got:</li>\n</ul>\n<blockquote>\n<p>CMake Error: install(EXPORT \"Caffe2Targets\" ...) includes target \"caffe2\" which requires target \"nnpack\" that is not in the export set.</p>\n</blockquote>\n<ul>\n<li><code>cmake ../</code> brought me the following messages:</li>\n</ul>\n<blockquote>\n<p>$ cmake ../<br>\n-- Does not need to define long separately.<br>\n-- std::exception_ptr is supported.<br>\n-- NUMA is available<br>\n-- Current compiler supports avx2 extention. Will build perfkernels.<br>\n-- Building using own protobuf under third_party per request.<br>\n-- Use custom protobuf build.<br>\n-- Caffe2 protobuf include directory: $&lt;BUILD_INTERFACE:....../pytorch/third_party/protobuf/src&gt;$&lt;INSTALL_INTERFACE:include&gt;<br>\n-- The BLAS backend of choice:Eigen<br>\n-- Brace yourself, we are building NNPACK<br>\n-- Found PythonInterp: /usr/bin/python (found version \"3.6.5\")<br>\n-- Caffe2: Found gflags with new-style gflags target.<br>\n-- Caffe2: Found glog with new-style glog target.<br>\n-- Found lmdb    (include: /usr/include, library: /usr/lib/x86_64-linux-gnu/liblmdb.so)<br>\n-- Found LevelDB (include: /usr/include, library: /usr/lib/x86_64-linux-gnu/libleveldb.so)<br>\n-- Found Snappy  (include: /usr/include, library: /usr/lib/x86_64-linux-gnu/libsnappy.so)<br>\n-- Found Numa  (include: /usr/include, library: /usr/lib/x86_64-linux-gnu/libnuma.so)<br>\n-- Found CUDA: /usr/local/cuda (found suitable exact version \"9.2\")<br>\n-- OpenCV found (/usr/local/share/OpenCV)<br>\n-- Found system Eigen at /usr/include/eigen3<br>\n-- Found PythonInterp: /usr/bin/python (found suitable version \"3.6.5\", minimum required is \"2.7\")<br>\n-- NumPy ver. 1.14.5 found (include: /usr/local/lib/python3.6/dist-packages/numpy/core/include)<br>\n-- MPI support found<br>\n-- MPI compile flags: -pthread<br>\n-- MPI include path: /usr/lib/x86_64-linux-gnu/openmpi/include/openmpi/usr/lib/x86_64-linux-gnu/openmpi/include/openmpi/opal/mca/event/libevent2022/libevent/usr/lib/x86_64-linux-gnu/openmpi/include/openmpi/opal/mca/event/libevent2022/libevent/include/usr/lib/x86_64-linux-gnu/openmpi/include<br>\n-- MPI LINK flags path: -pthread<br>\n-- MPI libraries: /usr/lib/x86_64-linux-gnu/openmpi/lib/libmpi_cxx.so/usr/lib/libmpi.so<br>\nCMake Warning at cmake/Dependencies.cmake:396 (message):<br>\nOpenMPI found, but it is not built with CUDA support.<br>\nCall Stack (most recent call first):<br>\nCMakeLists.txt:181 (include)</p>\n<p>-- Found CUDA: /usr/local/cuda (found suitable version \"9.2\", minimum required is \"7.0\")<br>\n-- Caffe2: CUDA detected: 9.2<br>\n-- Caffe2: CUDA nvcc is: /usr/local/cuda/bin/nvcc<br>\n-- Caffe2: CUDA toolkit directory: /usr/local/cuda<br>\n-- Caffe2: Header version is: 9.2<br>\n-- Found cuDNN: v7.1.4  (include: /usr/local/cuda/include, library: /usr/local/cuda/lib64/libcudnn.so)<br>\n-- Autodetected CUDA architecture(s): 5.2<br>\n-- Added CUDA NVCC flags for: -gencode;arch=compute_52,code=sm_52<br>\n-- Could NOT find NCCL (missing: NCCL_INCLUDE_DIRS NCCL_LIBRARIES)<br>\n-- Could NOT find CUB (missing: CUB_INCLUDE_DIR)<br>\n-- Could NOT find Gloo (missing: Gloo_LIBRARY)<br>\n-- MPI include path: /usr/lib/x86_64-linux-gnu/openmpi/include/openmpi/usr/lib/x86_64-linux-gnu/openmpi/include/openmpi/opal/mca/event/libevent2022/libevent/usr/lib/x86_64-linux-gnu/openmpi/include/openmpi/opal/mca/event/libevent2022/libevent/include/usr/lib/x86_64-linux-gnu/openmpi/include<br>\n-- MPI libraries: /usr/lib/x86_64-linux-gnu/openmpi/lib/libmpi_cxx.so/usr/lib/libmpi.so<br>\n-- CUDA detected: 9.2<br>\n-- Found libcuda: /usr/lib/x86_64-linux-gnu/libcuda.so<br>\n-- Found libnvrtc: /usr/local/cuda/lib64/libnvrtc.so<br>\n-- Could NOT find NCCL (missing: NCCL_INCLUDE_DIR NCCL_LIBRARY)<br>\nCMake Warning at third_party/gloo/cmake/Dependencies.cmake:62 (message):<br>\nNot compiling with NCCL support.  Suppress this warning with<br>\n-DUSE_NCCL=OFF.<br>\nCall Stack (most recent call first):<br>\nthird_party/gloo/CMakeLists.txt:56 (include)</p>\n<p>-- GCC 7.3.0: Adding gcc and gcc_s libs to link line<br>\n-- Include NCCL operators<br>\n-- Excluding ideep operators as we are not using ideep<br>\n-- Including image processing operators<br>\n-- Excluding video processing operators due to no opencv<br>\n-- Excluding mkl operators as we are not using mkl<br>\n-- Include Observer library<br>\n-- Using lib/python3/dist-packages as python relative installation path<br>\n-- Automatically generating missing <strong>init</strong>.py files.<br>\n-- A previous caffe2 cmake run already created the <strong>init</strong>.py files.<br>\nCMake Warning at CMakeLists.txt:347 (message):<br>\nGenerated cmake files are only fully tested if one builds with system glog,<br>\ngflags, and protobuf.  Other settings may generate files that are not well<br>\ntested.</p>\n<h2>--<br>\n-- ******** Summary ********<br>\n-- General:<br>\n--   CMake version         : 3.10.2<br>\n--   CMake command         : /usr/bin/cmake<br>\n--   Git version           : v0.1.11-9237-g342dbcc35<br>\n--   System                : Linux<br>\n--   C++ compiler          : /usr/bin/c++<br>\n--   C++ compiler version  : 7.3.0<br>\n--   BLAS                  : Eigen<br>\n--   CXX flags             :  -fvisibility-inlines-hidden -DONNX_NAMESPACE=onnx_c2 -O2 -fPIC -Wno-narrowing -Wall -Wextra -Wno-missing-field-initializers -Wno-type-limits -Wno-array-bounds -Wno-unknown-pragmas -Wno-sign-compare -Wno-unused-parameter -Wno-unused-variable -Wno-unused-function -Wno-unused-result -Wno-strict-aliasing -Wno-error=deprecated-declarations -faligned-new<br>\n--   Build type            : Release<br>\n--   Compile definitions   :<br>\n--   CMAKE_PREFIX_PATH     :<br>\n--   CMAKE_INSTALL_PREFIX  : /usr/local</h2>\n<p>--   BUILD_CAFFE2          : ON<br>\n--   BUILD_ATEN            : OFF<br>\n--   BUILD_BINARY          : ON<br>\n--   BUILD_CUSTOM_PROTOBUF : ON<br>\n--     Link local protobuf : ON<br>\n--   BUILD_DOCS            : OFF<br>\n--   BUILD_PYTHON          : ON<br>\n--     Python version      : 3.6.5<br>\n--     Python includes     : /usr/include/python3.6m<br>\n--   BUILD_SHARED_LIBS     : ON<br>\n--   BUILD_TEST            : OFF<br>\n--   USE_ASAN              : OFF<br>\n--   USE_ATEN              : OFF<br>\n--   USE_CUDA              : ON<br>\n--     CUDA static link    : OFF<br>\n--     USE_CUDNN           : ON<br>\n--     CUDA version        : 9.2<br>\n--     cuDNN version       : 7.1.4<br>\n--     CUDA root directory : /usr/local/cuda<br>\n--     CUDA library        : /usr/lib/x86_64-linux-gnu/libcuda.so<br>\n--     cudart library      : /usr/local/cuda/lib64/libcudart.so<br>\n--     cublas library      : /usr/local/cuda/lib64/libcublas.so;/usr/local/cuda/lib64/libcublas_device.a<br>\n--     cufft library       : /usr/local/cuda/lib64/libcufft.so<br>\n--     curand library      : /usr/local/cuda/lib64/libcurand.so<br>\n--     cuDNN library       : /usr/local/cuda/lib64/libcudnn.so<br>\n--     nvrtc               : /usr/local/cuda/lib64/libnvrtc.so<br>\n--     CUDA include path   : /usr/local/cuda/include<br>\n--     NVCC executable     : /usr/local/cuda/bin/nvcc<br>\n--     CUDA host compiler  : /usr/bin/cc<br>\n--     USE_TENSORRT        : OFF<br>\n--   USE_ROCM              : OFF<br>\n--   USE_EIGEN_FOR_BLAS    : ON<br>\n--   USE_FFMPEG            : OFF<br>\n--   USE_GFLAGS            : ON<br>\n--   USE_GLOG              : ON<br>\n--   USE_GLOO              : ON<br>\n--     USE_GLOO_IBVERBS    : OFF<br>\n--   USE_LEVELDB           : ON<br>\n--     LevelDB version     : 1.20<br>\n--     Snappy version      : ..<br>\n--   USE_LITE_PROTO        : OFF<br>\n--   USE_LMDB              : ON<br>\n--     LMDB version        : 0.9.21<br>\n--   USE_METAL             : OFF<br>\n--   USE_MKL               :<br>\n--   USE_MOBILE_OPENGL     : OFF<br>\n--   USE_MPI               : ON<br>\n--   USE_NCCL              : ON<br>\n--     USE_SYSTEM_NCCL     : OFF<br>\n--   USE_NERVANA_GPU       : OFF<br>\n--   USE_NNPACK            : ON<br>\n--   USE_OBSERVERS         : ON<br>\n--   USE_OPENCL            : OFF<br>\n--   USE_OPENCV            : ON<br>\n--     OpenCV version      : 4.0.0<br>\n--   USE_OPENMP            : OFF<br>\n--   USE_PROF              : OFF<br>\n--   USE_REDIS             : OFF<br>\n--   USE_ROCKSDB           : OFF<br>\n--   USE_ZMQ               : OFF<br>\n--   Public Dependencies  : Threads::Threads;gflags;glog::glog<br>\n--   Private Dependencies : nnpack;cpuinfo;/usr/lib/x86_64-linux-gnu/liblmdb.so;/usr/lib/x86_64-linux-gnu/libleveldb.so;/usr/lib/x86_64-linux-gnu/libsnappy.so;/usr/lib/x86_64-linux-gnu/libnuma.so;opencv_core;opencv_highgui;opencv_imgproc;/usr/lib/x86_64-linux-gnu/openmpi/lib/libmpi_cxx.so;/usr/lib/libmpi.so;gloo;onnxifi_loader;gcc_s;gcc;dl<br>\n-- Configuring done<br>\nCMake Error: install(EXPORT \"Caffe2Targets\" ...) includes target \"caffe2\" which requires target \"nnpack\" that is not in the export set.<br>\n-- Generating done<br>\n-- Build files have been written to: ....../pytorch/build</p>\n</blockquote>\n<p>Any further suggestions?</p>\n<p>Cheers</p>", "body_text": "@pjh5\n\nI followed your suggestion, git clone --recursive , still, after pressing g (for generating), I got:\n\n\nCMake Error: install(EXPORT \"Caffe2Targets\" ...) includes target \"caffe2\" which requires target \"nnpack\" that is not in the export set.\n\n\ncmake ../ brought me the following messages:\n\n\n$ cmake ../\n-- Does not need to define long separately.\n-- std::exception_ptr is supported.\n-- NUMA is available\n-- Current compiler supports avx2 extention. Will build perfkernels.\n-- Building using own protobuf under third_party per request.\n-- Use custom protobuf build.\n-- Caffe2 protobuf include directory: $<BUILD_INTERFACE:....../pytorch/third_party/protobuf/src>$<INSTALL_INTERFACE:include>\n-- The BLAS backend of choice:Eigen\n-- Brace yourself, we are building NNPACK\n-- Found PythonInterp: /usr/bin/python (found version \"3.6.5\")\n-- Caffe2: Found gflags with new-style gflags target.\n-- Caffe2: Found glog with new-style glog target.\n-- Found lmdb    (include: /usr/include, library: /usr/lib/x86_64-linux-gnu/liblmdb.so)\n-- Found LevelDB (include: /usr/include, library: /usr/lib/x86_64-linux-gnu/libleveldb.so)\n-- Found Snappy  (include: /usr/include, library: /usr/lib/x86_64-linux-gnu/libsnappy.so)\n-- Found Numa  (include: /usr/include, library: /usr/lib/x86_64-linux-gnu/libnuma.so)\n-- Found CUDA: /usr/local/cuda (found suitable exact version \"9.2\")\n-- OpenCV found (/usr/local/share/OpenCV)\n-- Found system Eigen at /usr/include/eigen3\n-- Found PythonInterp: /usr/bin/python (found suitable version \"3.6.5\", minimum required is \"2.7\")\n-- NumPy ver. 1.14.5 found (include: /usr/local/lib/python3.6/dist-packages/numpy/core/include)\n-- MPI support found\n-- MPI compile flags: -pthread\n-- MPI include path: /usr/lib/x86_64-linux-gnu/openmpi/include/openmpi/usr/lib/x86_64-linux-gnu/openmpi/include/openmpi/opal/mca/event/libevent2022/libevent/usr/lib/x86_64-linux-gnu/openmpi/include/openmpi/opal/mca/event/libevent2022/libevent/include/usr/lib/x86_64-linux-gnu/openmpi/include\n-- MPI LINK flags path: -pthread\n-- MPI libraries: /usr/lib/x86_64-linux-gnu/openmpi/lib/libmpi_cxx.so/usr/lib/libmpi.so\nCMake Warning at cmake/Dependencies.cmake:396 (message):\nOpenMPI found, but it is not built with CUDA support.\nCall Stack (most recent call first):\nCMakeLists.txt:181 (include)\n-- Found CUDA: /usr/local/cuda (found suitable version \"9.2\", minimum required is \"7.0\")\n-- Caffe2: CUDA detected: 9.2\n-- Caffe2: CUDA nvcc is: /usr/local/cuda/bin/nvcc\n-- Caffe2: CUDA toolkit directory: /usr/local/cuda\n-- Caffe2: Header version is: 9.2\n-- Found cuDNN: v7.1.4  (include: /usr/local/cuda/include, library: /usr/local/cuda/lib64/libcudnn.so)\n-- Autodetected CUDA architecture(s): 5.2\n-- Added CUDA NVCC flags for: -gencode;arch=compute_52,code=sm_52\n-- Could NOT find NCCL (missing: NCCL_INCLUDE_DIRS NCCL_LIBRARIES)\n-- Could NOT find CUB (missing: CUB_INCLUDE_DIR)\n-- Could NOT find Gloo (missing: Gloo_LIBRARY)\n-- MPI include path: /usr/lib/x86_64-linux-gnu/openmpi/include/openmpi/usr/lib/x86_64-linux-gnu/openmpi/include/openmpi/opal/mca/event/libevent2022/libevent/usr/lib/x86_64-linux-gnu/openmpi/include/openmpi/opal/mca/event/libevent2022/libevent/include/usr/lib/x86_64-linux-gnu/openmpi/include\n-- MPI libraries: /usr/lib/x86_64-linux-gnu/openmpi/lib/libmpi_cxx.so/usr/lib/libmpi.so\n-- CUDA detected: 9.2\n-- Found libcuda: /usr/lib/x86_64-linux-gnu/libcuda.so\n-- Found libnvrtc: /usr/local/cuda/lib64/libnvrtc.so\n-- Could NOT find NCCL (missing: NCCL_INCLUDE_DIR NCCL_LIBRARY)\nCMake Warning at third_party/gloo/cmake/Dependencies.cmake:62 (message):\nNot compiling with NCCL support.  Suppress this warning with\n-DUSE_NCCL=OFF.\nCall Stack (most recent call first):\nthird_party/gloo/CMakeLists.txt:56 (include)\n-- GCC 7.3.0: Adding gcc and gcc_s libs to link line\n-- Include NCCL operators\n-- Excluding ideep operators as we are not using ideep\n-- Including image processing operators\n-- Excluding video processing operators due to no opencv\n-- Excluding mkl operators as we are not using mkl\n-- Include Observer library\n-- Using lib/python3/dist-packages as python relative installation path\n-- Automatically generating missing init.py files.\n-- A previous caffe2 cmake run already created the init.py files.\nCMake Warning at CMakeLists.txt:347 (message):\nGenerated cmake files are only fully tested if one builds with system glog,\ngflags, and protobuf.  Other settings may generate files that are not well\ntested.\n--\n-- ******** Summary ********\n-- General:\n--   CMake version         : 3.10.2\n--   CMake command         : /usr/bin/cmake\n--   Git version           : v0.1.11-9237-g342dbcc35\n--   System                : Linux\n--   C++ compiler          : /usr/bin/c++\n--   C++ compiler version  : 7.3.0\n--   BLAS                  : Eigen\n--   CXX flags             :  -fvisibility-inlines-hidden -DONNX_NAMESPACE=onnx_c2 -O2 -fPIC -Wno-narrowing -Wall -Wextra -Wno-missing-field-initializers -Wno-type-limits -Wno-array-bounds -Wno-unknown-pragmas -Wno-sign-compare -Wno-unused-parameter -Wno-unused-variable -Wno-unused-function -Wno-unused-result -Wno-strict-aliasing -Wno-error=deprecated-declarations -faligned-new\n--   Build type            : Release\n--   Compile definitions   :\n--   CMAKE_PREFIX_PATH     :\n--   CMAKE_INSTALL_PREFIX  : /usr/local\n--   BUILD_CAFFE2          : ON\n--   BUILD_ATEN            : OFF\n--   BUILD_BINARY          : ON\n--   BUILD_CUSTOM_PROTOBUF : ON\n--     Link local protobuf : ON\n--   BUILD_DOCS            : OFF\n--   BUILD_PYTHON          : ON\n--     Python version      : 3.6.5\n--     Python includes     : /usr/include/python3.6m\n--   BUILD_SHARED_LIBS     : ON\n--   BUILD_TEST            : OFF\n--   USE_ASAN              : OFF\n--   USE_ATEN              : OFF\n--   USE_CUDA              : ON\n--     CUDA static link    : OFF\n--     USE_CUDNN           : ON\n--     CUDA version        : 9.2\n--     cuDNN version       : 7.1.4\n--     CUDA root directory : /usr/local/cuda\n--     CUDA library        : /usr/lib/x86_64-linux-gnu/libcuda.so\n--     cudart library      : /usr/local/cuda/lib64/libcudart.so\n--     cublas library      : /usr/local/cuda/lib64/libcublas.so;/usr/local/cuda/lib64/libcublas_device.a\n--     cufft library       : /usr/local/cuda/lib64/libcufft.so\n--     curand library      : /usr/local/cuda/lib64/libcurand.so\n--     cuDNN library       : /usr/local/cuda/lib64/libcudnn.so\n--     nvrtc               : /usr/local/cuda/lib64/libnvrtc.so\n--     CUDA include path   : /usr/local/cuda/include\n--     NVCC executable     : /usr/local/cuda/bin/nvcc\n--     CUDA host compiler  : /usr/bin/cc\n--     USE_TENSORRT        : OFF\n--   USE_ROCM              : OFF\n--   USE_EIGEN_FOR_BLAS    : ON\n--   USE_FFMPEG            : OFF\n--   USE_GFLAGS            : ON\n--   USE_GLOG              : ON\n--   USE_GLOO              : ON\n--     USE_GLOO_IBVERBS    : OFF\n--   USE_LEVELDB           : ON\n--     LevelDB version     : 1.20\n--     Snappy version      : ..\n--   USE_LITE_PROTO        : OFF\n--   USE_LMDB              : ON\n--     LMDB version        : 0.9.21\n--   USE_METAL             : OFF\n--   USE_MKL               :\n--   USE_MOBILE_OPENGL     : OFF\n--   USE_MPI               : ON\n--   USE_NCCL              : ON\n--     USE_SYSTEM_NCCL     : OFF\n--   USE_NERVANA_GPU       : OFF\n--   USE_NNPACK            : ON\n--   USE_OBSERVERS         : ON\n--   USE_OPENCL            : OFF\n--   USE_OPENCV            : ON\n--     OpenCV version      : 4.0.0\n--   USE_OPENMP            : OFF\n--   USE_PROF              : OFF\n--   USE_REDIS             : OFF\n--   USE_ROCKSDB           : OFF\n--   USE_ZMQ               : OFF\n--   Public Dependencies  : Threads::Threads;gflags;glog::glog\n--   Private Dependencies : nnpack;cpuinfo;/usr/lib/x86_64-linux-gnu/liblmdb.so;/usr/lib/x86_64-linux-gnu/libleveldb.so;/usr/lib/x86_64-linux-gnu/libsnappy.so;/usr/lib/x86_64-linux-gnu/libnuma.so;opencv_core;opencv_highgui;opencv_imgproc;/usr/lib/x86_64-linux-gnu/openmpi/lib/libmpi_cxx.so;/usr/lib/libmpi.so;gloo;onnxifi_loader;gcc_s;gcc;dl\n-- Configuring done\nCMake Error: install(EXPORT \"Caffe2Targets\" ...) includes target \"caffe2\" which requires target \"nnpack\" that is not in the export set.\n-- Generating done\n-- Build files have been written to: ....../pytorch/build\n\nAny further suggestions?\nCheers", "body": "@pjh5 \r\n\r\n- I followed your suggestion, `git clone --recursive` , still, after pressing **g** (for generating), I got:\r\n\r\n>  CMake Error: install(EXPORT \"Caffe2Targets\" ...) includes target \"caffe2\" which requires target \"nnpack\" that is not in the export set.\r\n\r\n- `cmake ../` brought me the following messages:\r\n\r\n> $ cmake ../\r\n> -- Does not need to define long separately.\r\n> -- std::exception_ptr is supported.\r\n> -- NUMA is available\r\n> -- Current compiler supports avx2 extention. Will build perfkernels.\r\n> -- Building using own protobuf under third_party per request.\r\n> -- Use custom protobuf build.\r\n> -- Caffe2 protobuf include directory: $<BUILD_INTERFACE:....../pytorch/third_party/protobuf/src>$<INSTALL_INTERFACE:include>\r\n> -- The BLAS backend of choice:Eigen\r\n> -- Brace yourself, we are building NNPACK\r\n> -- Found PythonInterp: /usr/bin/python (found version \"3.6.5\") \r\n> -- Caffe2: Found gflags with new-style gflags target.\r\n> -- Caffe2: Found glog with new-style glog target.\r\n> -- Found lmdb    (include: /usr/include, library: /usr/lib/x86_64-linux-gnu/liblmdb.so)\r\n> -- Found LevelDB (include: /usr/include, library: /usr/lib/x86_64-linux-gnu/libleveldb.so)\r\n> -- Found Snappy  (include: /usr/include, library: /usr/lib/x86_64-linux-gnu/libsnappy.so)\r\n> -- Found Numa  (include: /usr/include, library: /usr/lib/x86_64-linux-gnu/libnuma.so)\r\n> -- Found CUDA: /usr/local/cuda (found suitable exact version \"9.2\") \r\n> -- OpenCV found (/usr/local/share/OpenCV)\r\n> -- Found system Eigen at /usr/include/eigen3\r\n> -- Found PythonInterp: /usr/bin/python (found suitable version \"3.6.5\", minimum required is \"2.7\") \r\n> -- NumPy ver. 1.14.5 found (include: /usr/local/lib/python3.6/dist-packages/numpy/core/include)\r\n> -- MPI support found\r\n> -- MPI compile flags: -pthread\r\n> -- MPI include path: /usr/lib/x86_64-linux-gnu/openmpi/include/openmpi/usr/lib/x86_64-linux-gnu/openmpi/include/openmpi/opal/mca/event/libevent2022/libevent/usr/lib/x86_64-linux-gnu/openmpi/include/openmpi/opal/mca/event/libevent2022/libevent/include/usr/lib/x86_64-linux-gnu/openmpi/include\r\n> -- MPI LINK flags path: -pthread\r\n> -- MPI libraries: /usr/lib/x86_64-linux-gnu/openmpi/lib/libmpi_cxx.so/usr/lib/libmpi.so\r\n> CMake Warning at cmake/Dependencies.cmake:396 (message):\r\n>   OpenMPI found, but it is not built with CUDA support.\r\n> Call Stack (most recent call first):\r\n>   CMakeLists.txt:181 (include)\r\n> \r\n> \r\n> -- Found CUDA: /usr/local/cuda (found suitable version \"9.2\", minimum required is \"7.0\") \r\n> -- Caffe2: CUDA detected: 9.2\r\n> -- Caffe2: CUDA nvcc is: /usr/local/cuda/bin/nvcc\r\n> -- Caffe2: CUDA toolkit directory: /usr/local/cuda\r\n> -- Caffe2: Header version is: 9.2\r\n> -- Found cuDNN: v7.1.4  (include: /usr/local/cuda/include, library: /usr/local/cuda/lib64/libcudnn.so)\r\n> -- Autodetected CUDA architecture(s): 5.2 \r\n> -- Added CUDA NVCC flags for: -gencode;arch=compute_52,code=sm_52\r\n> -- Could NOT find NCCL (missing: NCCL_INCLUDE_DIRS NCCL_LIBRARIES) \r\n> -- Could NOT find CUB (missing: CUB_INCLUDE_DIR) \r\n> -- Could NOT find Gloo (missing: Gloo_LIBRARY) \r\n> -- MPI include path: /usr/lib/x86_64-linux-gnu/openmpi/include/openmpi/usr/lib/x86_64-linux-gnu/openmpi/include/openmpi/opal/mca/event/libevent2022/libevent/usr/lib/x86_64-linux-gnu/openmpi/include/openmpi/opal/mca/event/libevent2022/libevent/include/usr/lib/x86_64-linux-gnu/openmpi/include\r\n> -- MPI libraries: /usr/lib/x86_64-linux-gnu/openmpi/lib/libmpi_cxx.so/usr/lib/libmpi.so\r\n> -- CUDA detected: 9.2\r\n> -- Found libcuda: /usr/lib/x86_64-linux-gnu/libcuda.so\r\n> -- Found libnvrtc: /usr/local/cuda/lib64/libnvrtc.so\r\n> -- Could NOT find NCCL (missing: NCCL_INCLUDE_DIR NCCL_LIBRARY) \r\n> CMake Warning at third_party/gloo/cmake/Dependencies.cmake:62 (message):\r\n>   Not compiling with NCCL support.  Suppress this warning with\r\n>   -DUSE_NCCL=OFF.\r\n> Call Stack (most recent call first):\r\n>   third_party/gloo/CMakeLists.txt:56 (include)\r\n> \r\n> \r\n> -- GCC 7.3.0: Adding gcc and gcc_s libs to link line\r\n> -- Include NCCL operators\r\n> -- Excluding ideep operators as we are not using ideep\r\n> -- Including image processing operators\r\n> -- Excluding video processing operators due to no opencv\r\n> -- Excluding mkl operators as we are not using mkl\r\n> -- Include Observer library\r\n> -- Using lib/python3/dist-packages as python relative installation path\r\n> -- Automatically generating missing __init__.py files.\r\n> -- A previous caffe2 cmake run already created the __init__.py files.\r\n> CMake Warning at CMakeLists.txt:347 (message):\r\n>   Generated cmake files are only fully tested if one builds with system glog,\r\n>   gflags, and protobuf.  Other settings may generate files that are not well\r\n>   tested.\r\n> \r\n> \r\n> -- \r\n> -- ******** Summary ********\r\n> -- General:\r\n> --   CMake version         : 3.10.2\r\n> --   CMake command         : /usr/bin/cmake\r\n> --   Git version           : v0.1.11-9237-g342dbcc35\r\n> --   System                : Linux\r\n> --   C++ compiler          : /usr/bin/c++\r\n> --   C++ compiler version  : 7.3.0\r\n> --   BLAS                  : Eigen\r\n> --   CXX flags             :  -fvisibility-inlines-hidden -DONNX_NAMESPACE=onnx_c2 -O2 -fPIC -Wno-narrowing -Wall -Wextra -Wno-missing-field-initializers -Wno-type-limits -Wno-array-bounds -Wno-unknown-pragmas -Wno-sign-compare -Wno-unused-parameter -Wno-unused-variable -Wno-unused-function -Wno-unused-result -Wno-strict-aliasing -Wno-error=deprecated-declarations -faligned-new\r\n> --   Build type            : Release\r\n> --   Compile definitions   : \r\n> --   CMAKE_PREFIX_PATH     : \r\n> --   CMAKE_INSTALL_PREFIX  : /usr/local\r\n> -- \r\n> --   BUILD_CAFFE2          : ON\r\n> --   BUILD_ATEN            : OFF\r\n> --   BUILD_BINARY          : ON\r\n> --   BUILD_CUSTOM_PROTOBUF : ON\r\n> --     Link local protobuf : ON\r\n> --   BUILD_DOCS            : OFF\r\n> --   BUILD_PYTHON          : ON\r\n> --     Python version      : 3.6.5\r\n> --     Python includes     : /usr/include/python3.6m\r\n> --   BUILD_SHARED_LIBS     : ON\r\n> --   BUILD_TEST            : OFF\r\n> --   USE_ASAN              : OFF\r\n> --   USE_ATEN              : OFF\r\n> --   USE_CUDA              : ON\r\n> --     CUDA static link    : OFF\r\n> --     USE_CUDNN           : ON\r\n> --     CUDA version        : 9.2\r\n> --     cuDNN version       : 7.1.4\r\n> --     CUDA root directory : /usr/local/cuda\r\n> --     CUDA library        : /usr/lib/x86_64-linux-gnu/libcuda.so\r\n> --     cudart library      : /usr/local/cuda/lib64/libcudart.so\r\n> --     cublas library      : /usr/local/cuda/lib64/libcublas.so;/usr/local/cuda/lib64/libcublas_device.a\r\n> --     cufft library       : /usr/local/cuda/lib64/libcufft.so\r\n> --     curand library      : /usr/local/cuda/lib64/libcurand.so\r\n> --     cuDNN library       : /usr/local/cuda/lib64/libcudnn.so\r\n> --     nvrtc               : /usr/local/cuda/lib64/libnvrtc.so\r\n> --     CUDA include path   : /usr/local/cuda/include\r\n> --     NVCC executable     : /usr/local/cuda/bin/nvcc\r\n> --     CUDA host compiler  : /usr/bin/cc\r\n> --     USE_TENSORRT        : OFF\r\n> --   USE_ROCM              : OFF\r\n> --   USE_EIGEN_FOR_BLAS    : ON\r\n> --   USE_FFMPEG            : OFF\r\n> --   USE_GFLAGS            : ON\r\n> --   USE_GLOG              : ON\r\n> --   USE_GLOO              : ON\r\n> --     USE_GLOO_IBVERBS    : OFF\r\n> --   USE_LEVELDB           : ON\r\n> --     LevelDB version     : 1.20\r\n> --     Snappy version      : ..\r\n> --   USE_LITE_PROTO        : OFF\r\n> --   USE_LMDB              : ON\r\n> --     LMDB version        : 0.9.21\r\n> --   USE_METAL             : OFF\r\n> --   USE_MKL               : \r\n> --   USE_MOBILE_OPENGL     : OFF\r\n> --   USE_MPI               : ON\r\n> --   USE_NCCL              : ON\r\n> --     USE_SYSTEM_NCCL     : OFF\r\n> --   USE_NERVANA_GPU       : OFF\r\n> --   USE_NNPACK            : ON\r\n> --   USE_OBSERVERS         : ON\r\n> --   USE_OPENCL            : OFF\r\n> --   USE_OPENCV            : ON\r\n> --     OpenCV version      : 4.0.0\r\n> --   USE_OPENMP            : OFF\r\n> --   USE_PROF              : OFF\r\n> --   USE_REDIS             : OFF\r\n> --   USE_ROCKSDB           : OFF\r\n> --   USE_ZMQ               : OFF\r\n> --   Public Dependencies  : Threads::Threads;gflags;glog::glog\r\n> --   Private Dependencies : nnpack;cpuinfo;/usr/lib/x86_64-linux-gnu/liblmdb.so;/usr/lib/x86_64-linux-gnu/libleveldb.so;/usr/lib/x86_64-linux-gnu/libsnappy.so;/usr/lib/x86_64-linux-gnu/libnuma.so;opencv_core;opencv_highgui;opencv_imgproc;/usr/lib/x86_64-linux-gnu/openmpi/lib/libmpi_cxx.so;/usr/lib/libmpi.so;gloo;onnxifi_loader;gcc_s;gcc;dl\r\n> -- Configuring done\r\n> CMake Error: install(EXPORT \"Caffe2Targets\" ...) includes target \"caffe2\" which requires target \"nnpack\" that is not in the export set.\r\n> -- Generating done\r\n> -- Build files have been written to: ....../pytorch/build\r\n> \r\n\r\nAny further suggestions?\r\n\r\n\r\nCheers\r\n"}