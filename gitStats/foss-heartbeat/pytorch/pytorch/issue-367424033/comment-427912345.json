{"url": "https://api.github.com/repos/pytorch/pytorch/issues/comments/427912345", "html_url": "https://github.com/pytorch/pytorch/pull/12410#issuecomment-427912345", "issue_url": "https://api.github.com/repos/pytorch/pytorch/issues/12410", "id": 427912345, "node_id": "MDEyOklzc3VlQ29tbWVudDQyNzkxMjM0NQ==", "user": {"login": "Orvid", "id": 709247, "node_id": "MDQ6VXNlcjcwOTI0Nw==", "avatar_url": "https://avatars2.githubusercontent.com/u/709247?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Orvid", "html_url": "https://github.com/Orvid", "followers_url": "https://api.github.com/users/Orvid/followers", "following_url": "https://api.github.com/users/Orvid/following{/other_user}", "gists_url": "https://api.github.com/users/Orvid/gists{/gist_id}", "starred_url": "https://api.github.com/users/Orvid/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Orvid/subscriptions", "organizations_url": "https://api.github.com/users/Orvid/orgs", "repos_url": "https://api.github.com/users/Orvid/repos", "events_url": "https://api.github.com/users/Orvid/events{/privacy}", "received_events_url": "https://api.github.com/users/Orvid/received_events", "type": "User", "site_admin": false}, "created_at": "2018-10-08T17:14:55Z", "updated_at": "2018-10-08T17:14:55Z", "author_association": "NONE", "body_html": "<pre><code>06:02:02 LINK : the 32-bit linker (C:\\PROGRA~2\\MIB055~1\\2017\\COMMUN~1\\VC\\Tools\\MSVC\\1411~1.255\\bin\\Hostx86\\x64\\link.exe) ran out of heap space; restarting link with the 64-bit linker (C:\\Program Files\\Git\\usr\\bin\\link.exe)\n</code></pre>\n<p>Isn't a build error. The build will succeed, but it will take longer to link, as it's basically trying to link with the 32-bit hosted linker, which fails because the 32-bit address space is too small to be able to link successfully, so it runs the 64-bit hosted linker which then links successfully.</p>\n<p>TLDR; The x86_amd64 MSVC toolchain is 32-bit binaries cross-compiling for amd64, and if the linker runs out of memory, it starts the linker from the amd64 (aka. amd64_amd64) toolchain, which is a 64-bit binary and has enough memory to complete.</p>", "body_text": "06:02:02 LINK : the 32-bit linker (C:\\PROGRA~2\\MIB055~1\\2017\\COMMUN~1\\VC\\Tools\\MSVC\\1411~1.255\\bin\\Hostx86\\x64\\link.exe) ran out of heap space; restarting link with the 64-bit linker (C:\\Program Files\\Git\\usr\\bin\\link.exe)\n\nIsn't a build error. The build will succeed, but it will take longer to link, as it's basically trying to link with the 32-bit hosted linker, which fails because the 32-bit address space is too small to be able to link successfully, so it runs the 64-bit hosted linker which then links successfully.\nTLDR; The x86_amd64 MSVC toolchain is 32-bit binaries cross-compiling for amd64, and if the linker runs out of memory, it starts the linker from the amd64 (aka. amd64_amd64) toolchain, which is a 64-bit binary and has enough memory to complete.", "body": "```\r\n06:02:02 LINK : the 32-bit linker (C:\\PROGRA~2\\MIB055~1\\2017\\COMMUN~1\\VC\\Tools\\MSVC\\1411~1.255\\bin\\Hostx86\\x64\\link.exe) ran out of heap space; restarting link with the 64-bit linker (C:\\Program Files\\Git\\usr\\bin\\link.exe)\r\n```\r\nIsn't a build error. The build will succeed, but it will take longer to link, as it's basically trying to link with the 32-bit hosted linker, which fails because the 32-bit address space is too small to be able to link successfully, so it runs the 64-bit hosted linker which then links successfully.\r\n\r\nTLDR; The x86_amd64 MSVC toolchain is 32-bit binaries cross-compiling for amd64, and if the linker runs out of memory, it starts the linker from the amd64 (aka. amd64_amd64) toolchain, which is a 64-bit binary and has enough memory to complete."}