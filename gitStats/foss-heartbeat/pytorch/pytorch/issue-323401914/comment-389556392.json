{"url": "https://api.github.com/repos/pytorch/pytorch/issues/comments/389556392", "html_url": "https://github.com/pytorch/pytorch/pull/7596#issuecomment-389556392", "issue_url": "https://api.github.com/repos/pytorch/pytorch/issues/7596", "id": 389556392, "node_id": "MDEyOklzc3VlQ29tbWVudDM4OTU1NjM5Mg==", "user": {"login": "ezyang", "id": 13564, "node_id": "MDQ6VXNlcjEzNTY0", "avatar_url": "https://avatars0.githubusercontent.com/u/13564?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ezyang", "html_url": "https://github.com/ezyang", "followers_url": "https://api.github.com/users/ezyang/followers", "following_url": "https://api.github.com/users/ezyang/following{/other_user}", "gists_url": "https://api.github.com/users/ezyang/gists{/gist_id}", "starred_url": "https://api.github.com/users/ezyang/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ezyang/subscriptions", "organizations_url": "https://api.github.com/users/ezyang/orgs", "repos_url": "https://api.github.com/users/ezyang/repos", "events_url": "https://api.github.com/users/ezyang/events{/privacy}", "received_events_url": "https://api.github.com/users/ezyang/received_events", "type": "User", "site_admin": false}, "created_at": "2018-05-16T15:15:20Z", "updated_at": "2018-05-16T15:15:20Z", "author_association": "CONTRIBUTOR", "body_html": "<p><a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=13142923\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/lematt1991\">@lematt1991</a> The very least you can do is make sure all of the RNGs are being seeded deterministically at the beginning of your test. Another possibility is to compare the C++ algo against the Python one instead of testing for convergence; you're less likely to have misimplemented both of them. Are there some mathematical properties that LBFGS optimization should have? Test for those.</p>", "body_text": "@lematt1991 The very least you can do is make sure all of the RNGs are being seeded deterministically at the beginning of your test. Another possibility is to compare the C++ algo against the Python one instead of testing for convergence; you're less likely to have misimplemented both of them. Are there some mathematical properties that LBFGS optimization should have? Test for those.", "body": "@lematt1991 The very least you can do is make sure all of the RNGs are being seeded deterministically at the beginning of your test. Another possibility is to compare the C++ algo against the Python one instead of testing for convergence; you're less likely to have misimplemented both of them. Are there some mathematical properties that LBFGS optimization should have? Test for those."}