{"url": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/188456649", "pull_request_review_id": 120437834, "id": 188456649, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4ODQ1NjY0OQ==", "diff_hunk": "@@ -18,6 +18,165 @@ void OptimizerImpl::set_model(std::shared_ptr<nn::Module> model) {\n   model_ = model;\n }\n \n+at::Tensor LBFGS::gather_flat_grad() {\n+  std::vector<at::Tensor> views;\n+  for(auto& pair : model_->parameters()) {\n+    views.push_back(torch::autograd::as_variable_ref(pair.second.grad()).data().view(-1));\n+  }\n+  return at::cat(views);\n+}\n+\n+void LBFGS::add_grad(const at::Scalar& step_size, const at::Tensor& update) {\n+  int offset = 0;\n+  for(auto& pair : model_->parameters()) {\n+    int numel = pair.second.numel();\n+    at::Tensor& pd = pair.second.data();\n+    pd.add_(update.slice(0, offset, offset + numel, 1).view_as(pd), step_size);\n+    offset += numel;\n+  }\n+}\n+\n+void LBFGS::step() {\n+  AT_ERROR(\n+    \"LBFGS step requires a closure for evaluating the model loss\", \n+    \"See: https://pytorch.org/docs/stable/optim.html#optimizer-step-closure\");\n+}\n+\n+at::Scalar LBFGS::step(std::function<at::Scalar()> closure) {\n+  at::Scalar orig_loss = closure();\n+  at::Scalar loss = orig_loss;\n+  int current_evals = 1;\n+  func_evals += 1;\n+\n+  at::Tensor flat_grad = gather_flat_grad();\n+  at::Scalar abs_grad_sum = at::Scalar(flat_grad.abs().sum());\n+\n+  if(at::Scalar(abs_grad_sum).toFloat() <= tolerance_grad_) {\n+    return loss;\n+  }\n+\n+  at::Tensor ONE = flat_grad.type().scalarTensor(1);\n+\n+  int n_iter = 0;\n+  while(n_iter < max_iter_) {\n+    n_iter++;\n+    state_n_iter += 1;\n+\n+    if(state_n_iter == 1) {\n+      d = flat_grad.neg();\n+      H_diag = flat_grad.type().scalarTensor(1);", "path": "torch/csrc/api/src/optimizers.cpp", "position": null, "original_position": 50, "commit_id": "d0d1a740abb750177b17f20e3e416333b08f1036", "original_commit_id": "6f9d9d4b8219957e38a9f6c5f96dc2bb662c5399", "user": {"login": "ebetica", "id": 3605224, "node_id": "MDQ6VXNlcjM2MDUyMjQ=", "avatar_url": "https://avatars3.githubusercontent.com/u/3605224?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ebetica", "html_url": "https://github.com/ebetica", "followers_url": "https://api.github.com/users/ebetica/followers", "following_url": "https://api.github.com/users/ebetica/following{/other_user}", "gists_url": "https://api.github.com/users/ebetica/gists{/gist_id}", "starred_url": "https://api.github.com/users/ebetica/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ebetica/subscriptions", "organizations_url": "https://api.github.com/users/ebetica/orgs", "repos_url": "https://api.github.com/users/ebetica/repos", "events_url": "https://api.github.com/users/ebetica/events{/privacy}", "received_events_url": "https://api.github.com/users/ebetica/received_events", "type": "User", "site_admin": false}, "body": "nit: H_diag = ONE;", "created_at": "2018-05-15T22:34:21Z", "updated_at": "2018-11-23T15:44:06Z", "html_url": "https://github.com/pytorch/pytorch/pull/7596#discussion_r188456649", "pull_request_url": "https://api.github.com/repos/pytorch/pytorch/pulls/7596", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/188456649"}, "html": {"href": "https://github.com/pytorch/pytorch/pull/7596#discussion_r188456649"}, "pull_request": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/7596"}}, "body_html": "<p>nit: H_diag = ONE;</p>", "body_text": "nit: H_diag = ONE;"}