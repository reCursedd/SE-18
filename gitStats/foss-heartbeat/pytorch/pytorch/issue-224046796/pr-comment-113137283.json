{"url": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/113137283", "pull_request_review_id": 34498174, "id": 113137283, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDExMzEzNzI4Mw==", "diff_hunk": "@@ -0,0 +1,68 @@\n+import torch\n+\n+from .module import Module\n+from .. import functional as F\n+\n+\n+class _CropBase(Module):\n+\n+    def __init__(self, size, mode='center'):\n+        super(Crop2d, self).__init__()\n+        self.size = size\n+        self.mode = mode\n+        assert self.mode == 'center', 'CropNd only supports center crop'\n+\n+    def _offset(self, initial, target):\n+        crop = torch.FloatTensor([initial]).sub(target).div(-2)\n+        return crop.ceil().int()[0], crop.floor().int()[0]", "path": "torch/nn/modules/crop.py", "position": null, "original_position": 17, "commit_id": "d5bd7947a5be4746d072e997c378dadd2dffb328", "original_commit_id": "029e151df107467a1323df362bf4c43a2e04ccfb", "user": {"login": "apaszke", "id": 4583066, "node_id": "MDQ6VXNlcjQ1ODMwNjY=", "avatar_url": "https://avatars3.githubusercontent.com/u/4583066?v=4", "gravatar_id": "", "url": "https://api.github.com/users/apaszke", "html_url": "https://github.com/apaszke", "followers_url": "https://api.github.com/users/apaszke/followers", "following_url": "https://api.github.com/users/apaszke/following{/other_user}", "gists_url": "https://api.github.com/users/apaszke/gists{/gist_id}", "starred_url": "https://api.github.com/users/apaszke/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/apaszke/subscriptions", "organizations_url": "https://api.github.com/users/apaszke/orgs", "repos_url": "https://api.github.com/users/apaszke/repos", "events_url": "https://api.github.com/users/apaszke/events{/privacy}", "received_events_url": "https://api.github.com/users/apaszke/received_events", "type": "User", "site_admin": false}, "body": "This is simpler and can handle all dimensions in one call:\r\n```python\r\ndef _offset(self, inp_size, crop_size):\r\n    for i, c in zip(inp_size, crop_size):\r\n        diff = (c - i) / 2.\r\n        results.append([int(crop.ceil(diff)), int(diff)])\r\n    return sum(results, [])\r\n```", "created_at": "2017-04-25T08:45:17Z", "updated_at": "2018-11-23T15:33:09Z", "html_url": "https://github.com/pytorch/pytorch/pull/1349#discussion_r113137283", "pull_request_url": "https://api.github.com/repos/pytorch/pytorch/pulls/1349", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/113137283"}, "html": {"href": "https://github.com/pytorch/pytorch/pull/1349#discussion_r113137283"}, "pull_request": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/1349"}}, "body_html": "<p>This is simpler and can handle all dimensions in one call:</p>\n<div class=\"highlight highlight-source-python\"><pre><span class=\"pl-k\">def</span> <span class=\"pl-en\">_offset</span>(<span class=\"pl-smi\"><span class=\"pl-smi\">self</span></span>, <span class=\"pl-smi\">inp_size</span>, <span class=\"pl-smi\">crop_size</span>):\n    <span class=\"pl-k\">for</span> i, c <span class=\"pl-k\">in</span> <span class=\"pl-c1\">zip</span>(inp_size, crop_size):\n        diff <span class=\"pl-k\">=</span> (c <span class=\"pl-k\">-</span> i) <span class=\"pl-k\">/</span> <span class=\"pl-c1\">2</span>.\n        results.append([<span class=\"pl-c1\">int</span>(crop.ceil(diff)), <span class=\"pl-c1\">int</span>(diff)])\n    <span class=\"pl-k\">return</span> <span class=\"pl-c1\">sum</span>(results, [])</pre></div>", "body_text": "This is simpler and can handle all dimensions in one call:\ndef _offset(self, inp_size, crop_size):\n    for i, c in zip(inp_size, crop_size):\n        diff = (c - i) / 2.\n        results.append([int(crop.ceil(diff)), int(diff)])\n    return sum(results, [])"}