{"url": "https://api.github.com/repos/pytorch/pytorch/issues/comments/386593414", "html_url": "https://github.com/pytorch/pytorch/pull/6625#issuecomment-386593414", "issue_url": "https://api.github.com/repos/pytorch/pytorch/issues/6625", "id": 386593414, "node_id": "MDEyOklzc3VlQ29tbWVudDM4NjU5MzQxNA==", "user": {"login": "ezyang", "id": 13564, "node_id": "MDQ6VXNlcjEzNTY0", "avatar_url": "https://avatars0.githubusercontent.com/u/13564?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ezyang", "html_url": "https://github.com/ezyang", "followers_url": "https://api.github.com/users/ezyang/followers", "following_url": "https://api.github.com/users/ezyang/following{/other_user}", "gists_url": "https://api.github.com/users/ezyang/gists{/gist_id}", "starred_url": "https://api.github.com/users/ezyang/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ezyang/subscriptions", "organizations_url": "https://api.github.com/users/ezyang/orgs", "repos_url": "https://api.github.com/users/ezyang/repos", "events_url": "https://api.github.com/users/ezyang/events{/privacy}", "received_events_url": "https://api.github.com/users/ezyang/received_events", "type": "User", "site_admin": false}, "created_at": "2018-05-04T12:58:20Z", "updated_at": "2018-05-04T12:58:20Z", "author_association": "CONTRIBUTOR", "body_html": "<p>Thank you <a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=8586039\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/Jorghi12\">@Jorghi12</a>, the new patches look much much improved! Just to summarize the things we're planning to fix later:</p>\n<ul>\n<li>Get AMD builders online. (Can we get more than one box from AMD, so that we're not perpetually low on capacity?)</li>\n<li>Eliminate more of the diffs\n<ul>\n<li>Don't <code>#include \"hip/hip_runtime.h\"</code> from user-facing headers</li>\n<li><code>&amp;&amp; !defined(__HIP_PLATFORM_HCC__)</code> tests don't have to be patched, we can unconditionally include them in our code</li>\n<li><code>WITH_ROCM</code> conditionals in cmake can be put straight in the cmake</li>\n<li>We should probably make a <code>cuda_based_add_executable</code> which either switches to <code>cuda_add_executable</code> or <code>hip_add_executable</code></li>\n<li>Ifdef the bitlanes file</li>\n</ul>\n</li>\n<li>Fix some correctness issues\n<ul>\n<li>Stop specializing abs/pow to float</li>\n</ul>\n</li>\n</ul>\n<p>Also, longer term thing I am thinking about: with <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load issue title\" data-id=\"320151543\" data-permission-text=\"Issue title is private\" data-url=\"https://github.com/pytorch/pytorch/issues/7275\" data-hovercard-type=\"pull_request\" data-hovercard-url=\"/pytorch/pytorch/pull/7275/hovercard\" href=\"https://github.com/pytorch/pytorch/pull/7275\">#7275</a> coming down the pipe, it would be nice to think of a way where you can easily build CPU/CUDA/AMD all in one go into separate libraries, not controlled by a build flag.</p>", "body_text": "Thank you @Jorghi12, the new patches look much much improved! Just to summarize the things we're planning to fix later:\n\nGet AMD builders online. (Can we get more than one box from AMD, so that we're not perpetually low on capacity?)\nEliminate more of the diffs\n\nDon't #include \"hip/hip_runtime.h\" from user-facing headers\n&& !defined(__HIP_PLATFORM_HCC__) tests don't have to be patched, we can unconditionally include them in our code\nWITH_ROCM conditionals in cmake can be put straight in the cmake\nWe should probably make a cuda_based_add_executable which either switches to cuda_add_executable or hip_add_executable\nIfdef the bitlanes file\n\n\nFix some correctness issues\n\nStop specializing abs/pow to float\n\n\n\nAlso, longer term thing I am thinking about: with #7275 coming down the pipe, it would be nice to think of a way where you can easily build CPU/CUDA/AMD all in one go into separate libraries, not controlled by a build flag.", "body": "Thank you @Jorghi12, the new patches look much much improved! Just to summarize the things we're planning to fix later:\r\n\r\n- Get AMD builders online. (Can we get more than one box from AMD, so that we're not perpetually low on capacity?)\r\n- Eliminate more of the diffs\r\n  - Don't `#include \"hip/hip_runtime.h\"` from user-facing headers\r\n  - `&& !defined(__HIP_PLATFORM_HCC__)` tests don't have to be patched, we can unconditionally include them in our code\r\n  - `WITH_ROCM` conditionals in cmake can be put straight in the cmake\r\n  - We should probably make a `cuda_based_add_executable` which either switches to `cuda_add_executable` or `hip_add_executable`\r\n  - Ifdef the bitlanes file\r\n- Fix some correctness issues\r\n  - Stop specializing abs/pow to float\r\n\r\nAlso, longer term thing I am thinking about: with https://github.com/pytorch/pytorch/pull/7275 coming down the pipe, it would be nice to think of a way where you can easily build CPU/CUDA/AMD all in one go into separate libraries, not controlled by a build flag."}