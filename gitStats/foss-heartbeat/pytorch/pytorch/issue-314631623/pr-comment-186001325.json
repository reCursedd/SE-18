{"url": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/186001325", "pull_request_review_id": 117506076, "id": 186001325, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4NjAwMTMyNQ==", "diff_hunk": "@@ -822,6 +871,7 @@ def make_relative_rpath(path):\n     DL = Extension(\"torch._dl\",\n                    sources=[\"torch/csrc/dl.c\"],\n                    language='c',\n+                   extra_link_args=['-shared'] if WITH_ROCM else []", "path": "setup.py", "position": null, "original_position": 74, "commit_id": "f5bdbf350990fb69280b68c5bfcfa949cc5fbe77", "original_commit_id": "06e62b3bac0579986d2208dadd99176072527088", "user": {"login": "Jorghi12", "id": 8586039, "node_id": "MDQ6VXNlcjg1ODYwMzk=", "avatar_url": "https://avatars2.githubusercontent.com/u/8586039?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Jorghi12", "html_url": "https://github.com/Jorghi12", "followers_url": "https://api.github.com/users/Jorghi12/followers", "following_url": "https://api.github.com/users/Jorghi12/following{/other_user}", "gists_url": "https://api.github.com/users/Jorghi12/gists{/gist_id}", "starred_url": "https://api.github.com/users/Jorghi12/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Jorghi12/subscriptions", "organizations_url": "https://api.github.com/users/Jorghi12/orgs", "repos_url": "https://api.github.com/users/Jorghi12/repos", "events_url": "https://api.github.com/users/Jorghi12/events{/privacy}", "received_events_url": "https://api.github.com/users/Jorghi12/received_events", "type": "User", "site_admin": false}, "body": "On the ROCm stack, the HCC compiler generates both the host & device code. I briefly spoke with a few developers at AMD about allowing other compilers such as GCC to be used on host - though it's not on their road map. It'll require modifications to [HIPCC](https://github.com/ROCm-Developer-Tools/HIP/blob/master/bin/hipcc). I'll give it a dive soon.\r\n\r\n(HIPCC is what we set as the compiler in CMakeLists.txt)", "created_at": "2018-05-04T06:54:11Z", "updated_at": "2018-11-23T15:43:37Z", "html_url": "https://github.com/pytorch/pytorch/pull/6625#discussion_r186001325", "pull_request_url": "https://api.github.com/repos/pytorch/pytorch/pulls/6625", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/186001325"}, "html": {"href": "https://github.com/pytorch/pytorch/pull/6625#discussion_r186001325"}, "pull_request": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/6625"}}, "body_html": "<p>On the ROCm stack, the HCC compiler generates both the host &amp; device code. I briefly spoke with a few developers at AMD about allowing other compilers such as GCC to be used on host - though it's not on their road map. It'll require modifications to <a href=\"https://github.com/ROCm-Developer-Tools/HIP/blob/master/bin/hipcc\">HIPCC</a>. I'll give it a dive soon.</p>\n<p>(HIPCC is what we set as the compiler in CMakeLists.txt)</p>", "body_text": "On the ROCm stack, the HCC compiler generates both the host & device code. I briefly spoke with a few developers at AMD about allowing other compilers such as GCC to be used on host - though it's not on their road map. It'll require modifications to HIPCC. I'll give it a dive soon.\n(HIPCC is what we set as the compiler in CMakeLists.txt)", "in_reply_to_id": 183350662}