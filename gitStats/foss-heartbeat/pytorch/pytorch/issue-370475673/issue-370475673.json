{"url": "https://api.github.com/repos/pytorch/pytorch/issues/12700", "repository_url": "https://api.github.com/repos/pytorch/pytorch", "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/12700/labels{/name}", "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/12700/comments", "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/12700/events", "html_url": "https://github.com/pytorch/pytorch/pull/12700", "id": 370475673, "node_id": "MDExOlB1bGxSZXF1ZXN0MjIzMTQyNzY3", "number": 12700, "title": "Simply exit DataLoader when Python is dying", "user": {"login": "SsnL", "id": 5674597, "node_id": "MDQ6VXNlcjU2NzQ1OTc=", "avatar_url": "https://avatars2.githubusercontent.com/u/5674597?v=4", "gravatar_id": "", "url": "https://api.github.com/users/SsnL", "html_url": "https://github.com/SsnL", "followers_url": "https://api.github.com/users/SsnL/followers", "following_url": "https://api.github.com/users/SsnL/following{/other_user}", "gists_url": "https://api.github.com/users/SsnL/gists{/gist_id}", "starred_url": "https://api.github.com/users/SsnL/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/SsnL/subscriptions", "organizations_url": "https://api.github.com/users/SsnL/orgs", "repos_url": "https://api.github.com/users/SsnL/repos", "events_url": "https://api.github.com/users/SsnL/events{/privacy}", "received_events_url": "https://api.github.com/users/SsnL/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-10-16T07:32:19Z", "updated_at": "2018-11-23T15:53:04Z", "closed_at": "2018-10-17T05:06:47Z", "author_association": "CONTRIBUTOR", "pull_request": {"url": "https://api.github.com/repos/pytorch/pytorch/pulls/12700", "html_url": "https://github.com/pytorch/pytorch/pull/12700", "diff_url": "https://github.com/pytorch/pytorch/pull/12700.diff", "patch_url": "https://github.com/pytorch/pytorch/pull/12700.patch"}, "body_html": "<p>I struggled with yet another DataLoader hang for the entire evening. After numerous experiments, I realized that it is unsafe to do anything when Python is shutting down. We also unfortunately implement our DataLaoder cleaning-up logic in <code>__del__</code>, a function that may or may not be called during shutdown, and if called, may or may not be called before core library resources are freed.</p>\n<p>Fortunately, we are already setting all our workers and pin_memory_thread as daemonic. So in case of Python shutting down, we can just do a no-op in <code>__del__</code> and rely on the automatic termination of daemonic children.</p>\n<p>An <code>atexit</code> hook is used to detect Python exit.</p>", "body_text": "I struggled with yet another DataLoader hang for the entire evening. After numerous experiments, I realized that it is unsafe to do anything when Python is shutting down. We also unfortunately implement our DataLaoder cleaning-up logic in __del__, a function that may or may not be called during shutdown, and if called, may or may not be called before core library resources are freed.\nFortunately, we are already setting all our workers and pin_memory_thread as daemonic. So in case of Python shutting down, we can just do a no-op in __del__ and rely on the automatic termination of daemonic children.\nAn atexit hook is used to detect Python exit.", "body": "I struggled with yet another DataLoader hang for the entire evening. After numerous experiments, I realized that it is unsafe to do anything when Python is shutting down. We also unfortunately implement our DataLaoder cleaning-up logic in `__del__`, a function that may or may not be called during shutdown, and if called, may or may not be called before core library resources are freed. \r\n\r\nFortunately, we are already setting all our workers and pin_memory_thread as daemonic. So in case of Python shutting down, we can just do a no-op in `__del__` and rely on the automatic termination of daemonic children.\r\n\r\nAn `atexit` hook is used to detect Python exit."}