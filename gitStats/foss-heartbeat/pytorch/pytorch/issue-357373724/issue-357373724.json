{"url": "https://api.github.com/repos/pytorch/pytorch/issues/11292", "repository_url": "https://api.github.com/repos/pytorch/pytorch", "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/11292/labels{/name}", "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/11292/comments", "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/11292/events", "html_url": "https://github.com/pytorch/pytorch/pull/11292", "id": 357373724, "node_id": "MDExOlB1bGxSZXF1ZXN0MjEzNDA0OTc5", "number": 11292, "title": "Move some bmm/baddbmm to ATen", "user": {"login": "t-vi", "id": 20787943, "node_id": "MDQ6VXNlcjIwNzg3OTQz", "avatar_url": "https://avatars2.githubusercontent.com/u/20787943?v=4", "gravatar_id": "", "url": "https://api.github.com/users/t-vi", "html_url": "https://github.com/t-vi", "followers_url": "https://api.github.com/users/t-vi/followers", "following_url": "https://api.github.com/users/t-vi/following{/other_user}", "gists_url": "https://api.github.com/users/t-vi/gists{/gist_id}", "starred_url": "https://api.github.com/users/t-vi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/t-vi/subscriptions", "organizations_url": "https://api.github.com/users/t-vi/orgs", "repos_url": "https://api.github.com/users/t-vi/repos", "events_url": "https://api.github.com/users/t-vi/events{/privacy}", "received_events_url": "https://api.github.com/users/t-vi/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 16, "created_at": "2018-09-05T19:37:53Z", "updated_at": "2018-11-23T15:50:50Z", "closed_at": "2018-09-12T14:11:20Z", "author_association": "CONTRIBUTOR", "pull_request": {"url": "https://api.github.com/repos/pytorch/pytorch/pulls/11292", "html_url": "https://github.com/pytorch/pytorch/pull/11292", "diff_url": "https://github.com/pytorch/pytorch/pull/11292.diff", "patch_url": "https://github.com/pytorch/pytorch/pull/11292.patch"}, "body_html": "<ul>\n<li>Incorporates MKL addition by <a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=20233731\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/mingfeima\">@mingfeima</a>  Thank you! (but all errors are my own)</li>\n<li>Native CPU implementation: defer to matrix multiplication for<br>\nsmall batches and parallelize over batch dimension for large<br>\nbatches.</li>\n<li>Add bmm test for CUDA just to be sure.</li>\n</ul>\n<p>This is a partial fix for <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load issue title\" data-id=\"351855556\" data-permission-text=\"Issue title is private\" data-url=\"https://github.com/pytorch/pytorch/issues/10661\" data-hovercard-type=\"issue\" data-hovercard-url=\"/pytorch/pytorch/issues/10661/hovercard\" href=\"https://github.com/pytorch/pytorch/issues/10661\">#10661</a>, getting down to a factor ~5.<br>\nConsiderable overhead is incurred for the setup in einsum. It might<br>\nbe more efficient to eventually define an optimized contraction<br>\nfunctions for arbitrary and several dimensions.</p>", "body_text": "Incorporates MKL addition by @mingfeima  Thank you! (but all errors are my own)\nNative CPU implementation: defer to matrix multiplication for\nsmall batches and parallelize over batch dimension for large\nbatches.\nAdd bmm test for CUDA just to be sure.\n\nThis is a partial fix for #10661, getting down to a factor ~5.\nConsiderable overhead is incurred for the setup in einsum. It might\nbe more efficient to eventually define an optimized contraction\nfunctions for arbitrary and several dimensions.", "body": "- Incorporates MKL addition by @mingfeima  Thank you! (but all errors are my own)\r\n- Native CPU implementation: defer to matrix multiplication for\r\n  small batches and parallelize over batch dimension for large\r\n  batches.\r\n- Add bmm test for CUDA just to be sure.\r\n\r\nThis is a partial fix for #10661, getting down to a factor ~5.\r\nConsiderable overhead is incurred for the setup in einsum. It might\r\nbe more efficient to eventually define an optimized contraction\r\nfunctions for arbitrary and several dimensions.\r\n"}