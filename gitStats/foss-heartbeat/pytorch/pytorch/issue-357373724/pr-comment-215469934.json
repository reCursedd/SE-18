{"url": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/215469934", "pull_request_review_id": 152742034, "id": 215469934, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIxNTQ2OTkzNA==", "diff_hunk": "@@ -222,6 +228,145 @@ Tensor& addr_out(Tensor &result, const Tensor& self, const Tensor& vec1, const T\n   return at::_addr_out(result, self, vec1, vec2, beta, alpha);\n }\n \n+template <typename scalar_t>\n+inline void bmm_cpu_kernel(const Tensor& result, const Tensor& self, const Tensor& mat2) {\n+  int64_t bs = result.size(0);\n+  int64_t is = result.size(1);\n+  int64_t js = result.size(2);\n+  int64_t ks = self.size(2);\n+\n+  auto r0 = result.accessor<scalar_t, 3>();\n+  auto s0 = self.accessor<scalar_t, 3>();\n+  auto m0 = mat2.accessor<scalar_t, 3>();\n+\n+  #pragma omp parallel for if(bs > 100) // or small ks?\n+  for (int64_t b = 0; b < bs; b++) {\n+    auto r1 = r0[b];\n+    auto s1 = s0[b];\n+    auto m1 = m0[b];\n+    for (int64_t i = 0; i < is; i++) {\n+      auto r2 = r1[i];\n+      auto s2 = s1[i];\n+      for (int64_t j = 0; j < js; j++) {\n+        scalar_t &r = r2[j];\n+\tr = 0;\n+        for (int64_t k = 0; k < ks; k++) {\n+          r += s2[k] * m1[k][j];\n+        }\n+      }\n+    }\n+  }\n+}\n+\n+template <typename scalar_t>\n+inline void baddbmm_cpu_kernel(const Tensor& result, const Tensor& self, const Tensor& mat2, Scalar beta_, Scalar alpha_) {\n+  int64_t bs = result.size(0);\n+  int64_t is = result.size(1);\n+  int64_t js = result.size(2);\n+  int64_t ks = self.size(2);\n+\n+  scalar_t alpha = alpha_.to<scalar_t>();\n+  scalar_t beta = beta_.to<scalar_t>();\n+\n+  auto r0 = result.accessor<scalar_t, 3>();\n+  auto s0 = self.accessor<scalar_t, 3>();\n+  auto m0 = mat2.accessor<scalar_t, 3>();\n+\n+  #pragma omp parallel for if(bs > 100) // or small ks?", "path": "aten/src/ATen/native/LinearAlgebra.cpp", "position": null, "original_position": 66, "commit_id": "4bb9a0670313152916955add409d4d9798137f85", "original_commit_id": "29701540f519c6dc92fe755f8d9e38c95fd1a7ad", "user": {"login": "vishwakftw", "id": 23639302, "node_id": "MDQ6VXNlcjIzNjM5MzAy", "avatar_url": "https://avatars2.githubusercontent.com/u/23639302?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vishwakftw", "html_url": "https://github.com/vishwakftw", "followers_url": "https://api.github.com/users/vishwakftw/followers", "following_url": "https://api.github.com/users/vishwakftw/following{/other_user}", "gists_url": "https://api.github.com/users/vishwakftw/gists{/gist_id}", "starred_url": "https://api.github.com/users/vishwakftw/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vishwakftw/subscriptions", "organizations_url": "https://api.github.com/users/vishwakftw/orgs", "repos_url": "https://api.github.com/users/vishwakftw/repos", "events_url": "https://api.github.com/users/vishwakftw/events{/privacy}", "received_events_url": "https://api.github.com/users/vishwakftw/received_events", "type": "User", "site_admin": false}, "body": "Likewise", "created_at": "2018-09-06T01:12:53Z", "updated_at": "2018-11-23T15:50:39Z", "html_url": "https://github.com/pytorch/pytorch/pull/11292#discussion_r215469934", "pull_request_url": "https://api.github.com/repos/pytorch/pytorch/pulls/11292", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/215469934"}, "html": {"href": "https://github.com/pytorch/pytorch/pull/11292#discussion_r215469934"}, "pull_request": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/11292"}}, "body_html": "<p>Likewise</p>", "body_text": "Likewise"}