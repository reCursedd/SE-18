{"url": "https://api.github.com/repos/pytorch/pytorch/issues/comments/419703675", "html_url": "https://github.com/pytorch/pytorch/pull/11292#issuecomment-419703675", "issue_url": "https://api.github.com/repos/pytorch/pytorch/issues/11292", "id": 419703675, "node_id": "MDEyOklzc3VlQ29tbWVudDQxOTcwMzY3NQ==", "user": {"login": "t-vi", "id": 20787943, "node_id": "MDQ6VXNlcjIwNzg3OTQz", "avatar_url": "https://avatars2.githubusercontent.com/u/20787943?v=4", "gravatar_id": "", "url": "https://api.github.com/users/t-vi", "html_url": "https://github.com/t-vi", "followers_url": "https://api.github.com/users/t-vi/followers", "following_url": "https://api.github.com/users/t-vi/following{/other_user}", "gists_url": "https://api.github.com/users/t-vi/gists{/gist_id}", "starred_url": "https://api.github.com/users/t-vi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/t-vi/subscriptions", "organizations_url": "https://api.github.com/users/t-vi/orgs", "repos_url": "https://api.github.com/users/t-vi/repos", "events_url": "https://api.github.com/users/t-vi/events{/privacy}", "received_events_url": "https://api.github.com/users/t-vi/received_events", "type": "User", "site_admin": false}, "created_at": "2018-09-09T09:51:37Z", "updated_at": "2018-09-09T09:52:26Z", "author_association": "CONTRIBUTOR", "body_html": "<p>Thank you for your comments! I will improve the PR based on your feedback.<br>\nSo I tried to adapt <a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=20233731\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/mingfeima\">@mingfeima</a> 's patch <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load issue title\" data-id=\"357901574\" data-permission-text=\"Issue title is private\" data-url=\"https://github.com/pytorch/pytorch/issues/11365\" data-hovercard-type=\"pull_request\" data-hovercard-url=\"/pytorch/pytorch/pull/11365/hovercard\" href=\"https://github.com/pytorch/pytorch/pull/11365\">#11365</a> to have a <code>baddbmm__mkl</code> (<code>baddbmm_</code>) but it is difficult:</p>\n<ul>\n<li>The <code>_mkl</code>-suffix messes up the type translations (non-constness of self) should I just adapt the types or would a prefix be OK?,</li>\n<li><a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=648532\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/fritzo\">@fritzo</a> 's benchmark from the bug report seems to indicate that it is slow when I compile with mkl. :(<br>\nI will try compare with the original <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load issue title\" data-id=\"357901574\" data-permission-text=\"Issue title is private\" data-url=\"https://github.com/pytorch/pytorch/issues/11365\" data-hovercard-type=\"pull_request\" data-hovercard-url=\"/pytorch/pytorch/pull/11365/hovercard\" href=\"https://github.com/pytorch/pytorch/pull/11365\">#11365</a> PR to see whether that these are my adaptations or whether MKL is indeed slow in that case.</li>\n</ul>", "body_text": "Thank you for your comments! I will improve the PR based on your feedback.\nSo I tried to adapt @mingfeima 's patch #11365 to have a baddbmm__mkl (baddbmm_) but it is difficult:\n\nThe _mkl-suffix messes up the type translations (non-constness of self) should I just adapt the types or would a prefix be OK?,\n@fritzo 's benchmark from the bug report seems to indicate that it is slow when I compile with mkl. :(\nI will try compare with the original #11365 PR to see whether that these are my adaptations or whether MKL is indeed slow in that case.", "body": "Thank you for your comments! I will improve the PR based on your feedback.\r\nSo I tried to adapt @mingfeima 's patch #11365 to have a `baddbmm__mkl` (`baddbmm_`) but it is difficult:\r\n- The `_mkl`-suffix messes up the type translations (non-constness of self) should I just adapt the types or would a prefix be OK?,\r\n- @fritzo 's benchmark from the bug report seems to indicate that it is slow when I compile with mkl. :(\r\n  I will try compare with the original #11365 PR to see whether that these are my adaptations or whether MKL is indeed slow in that case.\r\n"}