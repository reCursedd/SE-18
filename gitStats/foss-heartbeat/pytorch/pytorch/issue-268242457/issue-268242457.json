{"url": "https://api.github.com/repos/pytorch/pytorch/issues/3276", "repository_url": "https://api.github.com/repos/pytorch/pytorch", "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/3276/labels{/name}", "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/3276/comments", "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/3276/events", "html_url": "https://github.com/pytorch/pytorch/issues/3276", "id": 268242457, "node_id": "MDU6SXNzdWUyNjgyNDI0NTc=", "number": 3276, "title": "Confused at this error I got from LSTM", "user": {"login": "siddsach", "id": 20043538, "node_id": "MDQ6VXNlcjIwMDQzNTM4", "avatar_url": "https://avatars0.githubusercontent.com/u/20043538?v=4", "gravatar_id": "", "url": "https://api.github.com/users/siddsach", "html_url": "https://github.com/siddsach", "followers_url": "https://api.github.com/users/siddsach/followers", "following_url": "https://api.github.com/users/siddsach/following{/other_user}", "gists_url": "https://api.github.com/users/siddsach/gists{/gist_id}", "starred_url": "https://api.github.com/users/siddsach/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/siddsach/subscriptions", "organizations_url": "https://api.github.com/users/siddsach/orgs", "repos_url": "https://api.github.com/users/siddsach/repos", "events_url": "https://api.github.com/users/siddsach/events{/privacy}", "received_events_url": "https://api.github.com/users/siddsach/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-10-25T02:00:19Z", "updated_at": "2017-10-25T08:26:59Z", "closed_at": "2017-10-25T08:26:59Z", "author_association": "NONE", "body_html": "<p>I used the built in LSTM cell in my architecture, and am getting the following error that seem  pretty deep in the library. I printed the types of both my hidden and data variable, and they're both LongTensors as I understand they should be, which is why I'm confused as to why I'm getting a typerror. Here's a link to the project to see the code for yourself: <a href=\"https://github.com/siddsach/deep_subj_clf/tree/master/langmodel\">https://github.com/siddsach/deep_subj_clf/tree/master/langmodel</a></p>\n<p>File \"/Users/siddharth/flipsideML/ML-research/deep/semi-supervised_clf/langmodel/trainer.py\", line 123, in train_step<br>\noutput, hidden = model(data, hidden)<br>\nFile \"/Users/siddharth/anaconda/lib/python3.6/site-packages/torch/nn/modules/module.py\", line 224, in <strong>call</strong><br>\nresult = self.forward(*input, **kwargs)<br>\nFile \"/Users/siddharth/flipsideML/ML-research/deep/semi-supervised_clf/langmodel/model.py\", line 50, in forward<br>\nout, h = self.model(inp, h)<br>\nFile \"/Users/siddharth/anaconda/lib/python3.6/site-packages/torch/nn/modules/module.py\", line 224, in <strong>call</strong><br>\nresult = self.forward(*input, **kwargs)<br>\nFile \"/Users/siddharth/anaconda/lib/python3.6/site-packages/torch/nn/modules/rnn.py\", line 162, in forward<br>\noutput, hidden = func(input, self.all_weights, hx)<br>\nFile \"/Users/siddharth/anaconda/lib/python3.6/site-packages/torch/nn/_functions/rnn.py\", line 351, in forward<br>\nreturn func(input, *fargs, **fkwargs)<br>\nFile \"/Users/siddharth/anaconda/lib/python3.6/site-packages/torch/nn/_functions/rnn.py\", line 244, in forward<br>\nnexth, output = func(input, hidden, weight)<br>\nFile \"/Users/siddharth/anaconda/lib/python3.6/site-packages/torch/nn/_functions/rnn.py\", line 84, in forward<br>\nhy, output = inner(input, hidden[l], weight[l])<br>\nFile \"/Users/siddharth/anaconda/lib/python3.6/site-packages/torch/nn/_functions/rnn.py\", line 113, in forward<br>\nhidden = inner(input[i], hidden, *weight)<br>\nFile \"/Users/siddharth/anaconda/lib/python3.6/site-packages/torch/nn/<em>functions/rnn.py\", line 31, in LSTMCell<br>\ngates = F.linear(input, w_ih, b_ih) + F.linear(hx, w_hh, b_hh)<br>\nFile \"/Users/siddharth/anaconda/lib/python3.6/site-packages/torch/nn/functional.py\", line 555, in linear<br>\noutput = input.matmul(weight.t())<br>\nFile \"/Users/siddharth/anaconda/lib/python3.6/site-packages/torch/autograd/variable.py\", line 560, in matmul<br>\nreturn torch.matmul(self, other)<br>\nFile \"/Users/siddharth/anaconda/lib/python3.6/site-packages/torch/functional.py\", line 168, in matmul<br>\nreturn torch.mm(tensor1.unsqueeze(0), tensor2).squeeze</em>(0)<br>\nFile \"/Users/siddharth/anaconda/lib/python3.6/site-packages/torch/autograd/variable.py\", line 579, in mm<br>\nreturn Addmm.apply(output, self, matrix, 0, 1, True)<br>\nFile \"/Users/siddharth/anaconda/lib/python3.6/site-packages/torch/autograd/_functions/blas.py\", line 26, in forward<br>\nmatrix1, matrix2, out=output)<br>\nTypeError: torch.addmm received an invalid combination of arguments - got (int, torch.LongTensor, int, torch.LongTensor, torch.FloatTensor, out=torch.        LongTens<br>\nor), but expected one of:</p>\n<ul>\n<li>(torch.LongTensor source, torch.LongTensor mat1, torch.LongTensor mat2, *, torch.LongTensor out)</li>\n<li>(torch.LongTensor source, torch.SparseLongTensor mat1, torch.LongTensor mat2, *, torch.LongTensor out)</li>\n<li>(int beta, torch.LongTensor source, torch.LongTensor mat1, torch.LongTensor mat2, *, torch.LongTensor out)</li>\n<li>(torch.LongTensor source, int alpha, torch.LongTensor mat1, torch.LongTensor mat2, *, torch.LongTensor out)</li>\n<li>(int beta, torch.LongTensor source, torch.SparseLongTensor mat1, torch.LongTensor mat2, *, torch.LongTensor out)</li>\n<li>(torch.LongTensor source, int alpha, torch.SparseLongTensor mat1, torch.LongTensor mat2, *, torch.LongTensor out)</li>\n<li>(int beta, torch.LongTensor source, int alpha, torch.LongTensor mat1, torch.LongTensor mat2, *, torch.LongTensor out)<br>\ndidn't match because some of the arguments have invalid types: (int, torch.LongTensor, int, torch.LongTensor, torch.FloatTensor, out=torch.LongTensor)</li>\n<li>(int beta, torch.LongTensor source, int alpha, torch.SparseLongTensor mat1, torch.LongTensor mat2, *, torch.LongTensor out)<br>\ndidn't match because some of the arguments have invalid types: (int, torch.LongTensor, int, torch.LongTensor, torch.FloatTensor, out=torch.LongTensor)</li>\n</ul>", "body_text": "I used the built in LSTM cell in my architecture, and am getting the following error that seem  pretty deep in the library. I printed the types of both my hidden and data variable, and they're both LongTensors as I understand they should be, which is why I'm confused as to why I'm getting a typerror. Here's a link to the project to see the code for yourself: https://github.com/siddsach/deep_subj_clf/tree/master/langmodel\nFile \"/Users/siddharth/flipsideML/ML-research/deep/semi-supervised_clf/langmodel/trainer.py\", line 123, in train_step\noutput, hidden = model(data, hidden)\nFile \"/Users/siddharth/anaconda/lib/python3.6/site-packages/torch/nn/modules/module.py\", line 224, in call\nresult = self.forward(*input, **kwargs)\nFile \"/Users/siddharth/flipsideML/ML-research/deep/semi-supervised_clf/langmodel/model.py\", line 50, in forward\nout, h = self.model(inp, h)\nFile \"/Users/siddharth/anaconda/lib/python3.6/site-packages/torch/nn/modules/module.py\", line 224, in call\nresult = self.forward(*input, **kwargs)\nFile \"/Users/siddharth/anaconda/lib/python3.6/site-packages/torch/nn/modules/rnn.py\", line 162, in forward\noutput, hidden = func(input, self.all_weights, hx)\nFile \"/Users/siddharth/anaconda/lib/python3.6/site-packages/torch/nn/_functions/rnn.py\", line 351, in forward\nreturn func(input, *fargs, **fkwargs)\nFile \"/Users/siddharth/anaconda/lib/python3.6/site-packages/torch/nn/_functions/rnn.py\", line 244, in forward\nnexth, output = func(input, hidden, weight)\nFile \"/Users/siddharth/anaconda/lib/python3.6/site-packages/torch/nn/_functions/rnn.py\", line 84, in forward\nhy, output = inner(input, hidden[l], weight[l])\nFile \"/Users/siddharth/anaconda/lib/python3.6/site-packages/torch/nn/_functions/rnn.py\", line 113, in forward\nhidden = inner(input[i], hidden, *weight)\nFile \"/Users/siddharth/anaconda/lib/python3.6/site-packages/torch/nn/functions/rnn.py\", line 31, in LSTMCell\ngates = F.linear(input, w_ih, b_ih) + F.linear(hx, w_hh, b_hh)\nFile \"/Users/siddharth/anaconda/lib/python3.6/site-packages/torch/nn/functional.py\", line 555, in linear\noutput = input.matmul(weight.t())\nFile \"/Users/siddharth/anaconda/lib/python3.6/site-packages/torch/autograd/variable.py\", line 560, in matmul\nreturn torch.matmul(self, other)\nFile \"/Users/siddharth/anaconda/lib/python3.6/site-packages/torch/functional.py\", line 168, in matmul\nreturn torch.mm(tensor1.unsqueeze(0), tensor2).squeeze(0)\nFile \"/Users/siddharth/anaconda/lib/python3.6/site-packages/torch/autograd/variable.py\", line 579, in mm\nreturn Addmm.apply(output, self, matrix, 0, 1, True)\nFile \"/Users/siddharth/anaconda/lib/python3.6/site-packages/torch/autograd/_functions/blas.py\", line 26, in forward\nmatrix1, matrix2, out=output)\nTypeError: torch.addmm received an invalid combination of arguments - got (int, torch.LongTensor, int, torch.LongTensor, torch.FloatTensor, out=torch.        LongTens\nor), but expected one of:\n\n(torch.LongTensor source, torch.LongTensor mat1, torch.LongTensor mat2, *, torch.LongTensor out)\n(torch.LongTensor source, torch.SparseLongTensor mat1, torch.LongTensor mat2, *, torch.LongTensor out)\n(int beta, torch.LongTensor source, torch.LongTensor mat1, torch.LongTensor mat2, *, torch.LongTensor out)\n(torch.LongTensor source, int alpha, torch.LongTensor mat1, torch.LongTensor mat2, *, torch.LongTensor out)\n(int beta, torch.LongTensor source, torch.SparseLongTensor mat1, torch.LongTensor mat2, *, torch.LongTensor out)\n(torch.LongTensor source, int alpha, torch.SparseLongTensor mat1, torch.LongTensor mat2, *, torch.LongTensor out)\n(int beta, torch.LongTensor source, int alpha, torch.LongTensor mat1, torch.LongTensor mat2, *, torch.LongTensor out)\ndidn't match because some of the arguments have invalid types: (int, torch.LongTensor, int, torch.LongTensor, torch.FloatTensor, out=torch.LongTensor)\n(int beta, torch.LongTensor source, int alpha, torch.SparseLongTensor mat1, torch.LongTensor mat2, *, torch.LongTensor out)\ndidn't match because some of the arguments have invalid types: (int, torch.LongTensor, int, torch.LongTensor, torch.FloatTensor, out=torch.LongTensor)", "body": "I used the built in LSTM cell in my architecture, and am getting the following error that seem  pretty deep in the library. I printed the types of both my hidden and data variable, and they're both LongTensors as I understand they should be, which is why I'm confused as to why I'm getting a typerror. Here's a link to the project to see the code for yourself: https://github.com/siddsach/deep_subj_clf/tree/master/langmodel  \r\n\r\n\r\nFile \"/Users/siddharth/flipsideML/ML-research/deep/semi-supervised_clf/langmodel/trainer.py\", line 123, in train_step\r\n     output, hidden = model(data, hidden)\r\n   File \"/Users/siddharth/anaconda/lib/python3.6/site-packages/torch/nn/modules/module.py\", line 224, in __call__\r\n     result = self.forward(*input, **kwargs)\r\n   File \"/Users/siddharth/flipsideML/ML-research/deep/semi-supervised_clf/langmodel/model.py\", line 50, in forward\r\n     out, h = self.model(inp, h)\r\n   File \"/Users/siddharth/anaconda/lib/python3.6/site-packages/torch/nn/modules/module.py\", line 224, in __call__\r\n     result = self.forward(*input, **kwargs)\r\n   File \"/Users/siddharth/anaconda/lib/python3.6/site-packages/torch/nn/modules/rnn.py\", line 162, in forward\r\n     output, hidden = func(input, self.all_weights, hx)\r\n   File \"/Users/siddharth/anaconda/lib/python3.6/site-packages/torch/nn/_functions/rnn.py\", line 351, in forward\r\n     return func(input, *fargs, **fkwargs)\r\n   File \"/Users/siddharth/anaconda/lib/python3.6/site-packages/torch/nn/_functions/rnn.py\", line 244, in forward\r\n     nexth, output = func(input, hidden, weight)\r\n   File \"/Users/siddharth/anaconda/lib/python3.6/site-packages/torch/nn/_functions/rnn.py\", line 84, in forward\r\n     hy, output = inner(input, hidden[l], weight[l])\r\n   File \"/Users/siddharth/anaconda/lib/python3.6/site-packages/torch/nn/_functions/rnn.py\", line 113, in forward\r\n     hidden = inner(input[i], hidden, *weight)\r\n   File \"/Users/siddharth/anaconda/lib/python3.6/site-packages/torch/nn/_functions/rnn.py\", line 31, in LSTMCell\r\n     gates = F.linear(input, w_ih, b_ih) + F.linear(hx, w_hh, b_hh)\r\n   File \"/Users/siddharth/anaconda/lib/python3.6/site-packages/torch/nn/functional.py\", line 555, in linear\r\n     output = input.matmul(weight.t())\r\n   File \"/Users/siddharth/anaconda/lib/python3.6/site-packages/torch/autograd/variable.py\", line 560, in matmul\r\n     return torch.matmul(self, other)\r\n   File \"/Users/siddharth/anaconda/lib/python3.6/site-packages/torch/functional.py\", line 168, in matmul\r\n     return torch.mm(tensor1.unsqueeze(0), tensor2).squeeze_(0)\r\n   File \"/Users/siddharth/anaconda/lib/python3.6/site-packages/torch/autograd/variable.py\", line 579, in mm\r\n     return Addmm.apply(output, self, matrix, 0, 1, True)\r\n   File \"/Users/siddharth/anaconda/lib/python3.6/site-packages/torch/autograd/_functions/blas.py\", line 26, in forward\r\n     matrix1, matrix2, out=output)\r\n TypeError: torch.addmm received an invalid combination of arguments - got (int, torch.LongTensor, int, torch.LongTensor, torch.FloatTensor, out=torch.        LongTens\r\n or), but expected one of:\r\n  * (torch.LongTensor source, torch.LongTensor mat1, torch.LongTensor mat2, *, torch.LongTensor out)\r\n  * (torch.LongTensor source, torch.SparseLongTensor mat1, torch.LongTensor mat2, *, torch.LongTensor out)\r\n  * (int beta, torch.LongTensor source, torch.LongTensor mat1, torch.LongTensor mat2, *, torch.LongTensor out)\r\n  * (torch.LongTensor source, int alpha, torch.LongTensor mat1, torch.LongTensor mat2, *, torch.LongTensor out)\r\n  * (int beta, torch.LongTensor source, torch.SparseLongTensor mat1, torch.LongTensor mat2, *, torch.LongTensor out)\r\n  * (torch.LongTensor source, int alpha, torch.SparseLongTensor mat1, torch.LongTensor mat2, *, torch.LongTensor out)\r\n  * (int beta, torch.LongTensor source, int alpha, torch.LongTensor mat1, torch.LongTensor mat2, *, torch.LongTensor out)\r\n       didn't match because some of the arguments have invalid types: (int, torch.LongTensor, int, torch.LongTensor, torch.FloatTensor, out=torch.LongTensor)\r\n  * (int beta, torch.LongTensor source, int alpha, torch.SparseLongTensor mat1, torch.LongTensor mat2, *, torch.LongTensor out)\r\n       didn't match because some of the arguments have invalid types: (int, torch.LongTensor, int, torch.LongTensor, torch.FloatTensor, out=torch.LongTensor)"}