{"url": "https://api.github.com/repos/pytorch/pytorch/issues/comments/406049383", "html_url": "https://github.com/pytorch/pytorch/issues/9129#issuecomment-406049383", "issue_url": "https://api.github.com/repos/pytorch/pytorch/issues/9129", "id": 406049383, "node_id": "MDEyOklzc3VlQ29tbWVudDQwNjA0OTM4Mw==", "user": {"login": "SsnL", "id": 5674597, "node_id": "MDQ6VXNlcjU2NzQ1OTc=", "avatar_url": "https://avatars2.githubusercontent.com/u/5674597?v=4", "gravatar_id": "", "url": "https://api.github.com/users/SsnL", "html_url": "https://github.com/SsnL", "followers_url": "https://api.github.com/users/SsnL/followers", "following_url": "https://api.github.com/users/SsnL/following{/other_user}", "gists_url": "https://api.github.com/users/SsnL/gists{/gist_id}", "starred_url": "https://api.github.com/users/SsnL/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/SsnL/subscriptions", "organizations_url": "https://api.github.com/users/SsnL/orgs", "repos_url": "https://api.github.com/users/SsnL/repos", "events_url": "https://api.github.com/users/SsnL/events{/privacy}", "received_events_url": "https://api.github.com/users/SsnL/received_events", "type": "User", "site_admin": false}, "created_at": "2018-07-18T19:37:27Z", "updated_at": "2018-07-18T19:37:27Z", "author_association": "CONTRIBUTOR", "body_html": "<p><a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=6151691\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/xtannier\">@xtannier</a> Hi, I've looked into this. Basically if two libs both using <code>pybind11</code> are compiled using incompatible compilers, this will happen (see <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load issue title\" data-id=\"291774452\" data-permission-text=\"Issue title is private\" data-url=\"https://github.com/pybind/pybind11/issues/1262\" data-hovercard-type=\"issue\" data-hovercard-url=\"/pybind/pybind11/issues/1262/hovercard\" href=\"https://github.com/pybind/pybind11/issues/1262\">pybind/pybind11#1262</a>). By \"incompatible\" I mean e.g., <code>gcc</code> and <code>clang</code>, <code>gcc &lt; 4.9.2</code> and <code>gcc &gt;= 4.9.2</code>. To avoid such issue as much as possible, we compile our release binaries with <code>gcc 4.9.2</code>. So if you are compiling <code>fasttext</code> with a <code>gcc &lt; 4.9.2</code> it will segfault. Can you look into the gcc version used?</p>", "body_text": "@xtannier Hi, I've looked into this. Basically if two libs both using pybind11 are compiled using incompatible compilers, this will happen (see pybind/pybind11#1262). By \"incompatible\" I mean e.g., gcc and clang, gcc < 4.9.2 and gcc >= 4.9.2. To avoid such issue as much as possible, we compile our release binaries with gcc 4.9.2. So if you are compiling fasttext with a gcc < 4.9.2 it will segfault. Can you look into the gcc version used?", "body": "@xtannier Hi, I've looked into this. Basically if two libs both using `pybind11` are compiled using incompatible compilers, this will happen (see https://github.com/pybind/pybind11/issues/1262). By \"incompatible\" I mean e.g., `gcc` and `clang`, `gcc < 4.9.2` and `gcc >= 4.9.2`. To avoid such issue as much as possible, we compile our release binaries with `gcc 4.9.2`. So if you are compiling `fasttext` with a `gcc < 4.9.2` it will segfault. Can you look into the gcc version used?"}