{"url": "https://api.github.com/repos/pytorch/pytorch/issues/comments/386154231", "html_url": "https://github.com/pytorch/pytorch/pull/7170#issuecomment-386154231", "issue_url": "https://api.github.com/repos/pytorch/pytorch/issues/7170", "id": 386154231, "node_id": "MDEyOklzc3VlQ29tbWVudDM4NjE1NDIzMQ==", "user": {"login": "yinghai", "id": 1100089, "node_id": "MDQ6VXNlcjExMDAwODk=", "avatar_url": "https://avatars1.githubusercontent.com/u/1100089?v=4", "gravatar_id": "", "url": "https://api.github.com/users/yinghai", "html_url": "https://github.com/yinghai", "followers_url": "https://api.github.com/users/yinghai/followers", "following_url": "https://api.github.com/users/yinghai/following{/other_user}", "gists_url": "https://api.github.com/users/yinghai/gists{/gist_id}", "starred_url": "https://api.github.com/users/yinghai/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/yinghai/subscriptions", "organizations_url": "https://api.github.com/users/yinghai/orgs", "repos_url": "https://api.github.com/users/yinghai/repos", "events_url": "https://api.github.com/users/yinghai/events{/privacy}", "received_events_url": "https://api.github.com/users/yinghai/received_events", "type": "User", "site_admin": false}, "created_at": "2018-05-02T23:42:26Z", "updated_at": "2018-05-02T23:42:26Z", "author_association": "CONTRIBUTOR", "body_html": "<p>Actually, I was not correct. It finds one single library (<code>libmkl_rt.so</code>) because option <code>MKLML_MULTI_THREADED=OFF</code> is default. If you add <code>-DMKLML_MULTI_THREADED=ON</code> to cmake, it will find a bunch of libraries, which is expected:</p>\n<pre><code>-- Found MKLML (include: /home/yinghai/local/fbsource/fbcode/third-party2/IntelComposerXE/2017.0.098/gcc-4.9-glibc-2.20/e9936bf/mkl/include, lib: /home/yinghai/local/fbsource/fbcode/third-party2/IntelComp\noserXE/2017.0.098/gcc-4.9-glibc-2.20/e9936bf/mkl/lib/intel64/libmkl_intel_lp64.so;/home/yinghai/local/fbsource/fbcode/third-party2/IntelComposerXE/2017.0.098/gcc-4.9-glibc-2.20/e9936bf/mkl/lib/intel64/lib\nmkl_gf_lp64.so;/home/yinghai/local/fbsource/fbcode/third-party2/IntelComposerXE/2017.0.098/gcc-4.9-glibc-2.20/e9936bf/mkl/lib/intel64/libmkl_intel_thread.so;/home/yinghai/local/fbsource/fbcode/third-party\n2/IntelComposerXE/2017.0.098/gcc-4.9-glibc-2.20/e9936bf/mkl/lib/intel64/libmkl_core.so;/home/yinghai/local/fbsource/fbcode/third-party2/IntelComposerXE/2017.0.098/gcc-4.9-glibc-2.20/e9936bf/compiler/lib/i\nntel64/libiomp5.so)\n</code></pre>\n<p>One problem though, it is trying to find <code>libmkl_cdft_core.so</code> which is not included in our MKL distribution and resulted in failure. The above results is by removing <code>cdft_core</code> from requirement.</p>", "body_text": "Actually, I was not correct. It finds one single library (libmkl_rt.so) because option MKLML_MULTI_THREADED=OFF is default. If you add -DMKLML_MULTI_THREADED=ON to cmake, it will find a bunch of libraries, which is expected:\n-- Found MKLML (include: /home/yinghai/local/fbsource/fbcode/third-party2/IntelComposerXE/2017.0.098/gcc-4.9-glibc-2.20/e9936bf/mkl/include, lib: /home/yinghai/local/fbsource/fbcode/third-party2/IntelComp\noserXE/2017.0.098/gcc-4.9-glibc-2.20/e9936bf/mkl/lib/intel64/libmkl_intel_lp64.so;/home/yinghai/local/fbsource/fbcode/third-party2/IntelComposerXE/2017.0.098/gcc-4.9-glibc-2.20/e9936bf/mkl/lib/intel64/lib\nmkl_gf_lp64.so;/home/yinghai/local/fbsource/fbcode/third-party2/IntelComposerXE/2017.0.098/gcc-4.9-glibc-2.20/e9936bf/mkl/lib/intel64/libmkl_intel_thread.so;/home/yinghai/local/fbsource/fbcode/third-party\n2/IntelComposerXE/2017.0.098/gcc-4.9-glibc-2.20/e9936bf/mkl/lib/intel64/libmkl_core.so;/home/yinghai/local/fbsource/fbcode/third-party2/IntelComposerXE/2017.0.098/gcc-4.9-glibc-2.20/e9936bf/compiler/lib/i\nntel64/libiomp5.so)\n\nOne problem though, it is trying to find libmkl_cdft_core.so which is not included in our MKL distribution and resulted in failure. The above results is by removing cdft_core from requirement.", "body": "Actually, I was not correct. It finds one single library (`libmkl_rt.so`) because option `MKLML_MULTI_THREADED=OFF` is default. If you add `-DMKLML_MULTI_THREADED=ON` to cmake, it will find a bunch of libraries, which is expected:\r\n```\r\n-- Found MKLML (include: /home/yinghai/local/fbsource/fbcode/third-party2/IntelComposerXE/2017.0.098/gcc-4.9-glibc-2.20/e9936bf/mkl/include, lib: /home/yinghai/local/fbsource/fbcode/third-party2/IntelComp\r\noserXE/2017.0.098/gcc-4.9-glibc-2.20/e9936bf/mkl/lib/intel64/libmkl_intel_lp64.so;/home/yinghai/local/fbsource/fbcode/third-party2/IntelComposerXE/2017.0.098/gcc-4.9-glibc-2.20/e9936bf/mkl/lib/intel64/lib\r\nmkl_gf_lp64.so;/home/yinghai/local/fbsource/fbcode/third-party2/IntelComposerXE/2017.0.098/gcc-4.9-glibc-2.20/e9936bf/mkl/lib/intel64/libmkl_intel_thread.so;/home/yinghai/local/fbsource/fbcode/third-party\r\n2/IntelComposerXE/2017.0.098/gcc-4.9-glibc-2.20/e9936bf/mkl/lib/intel64/libmkl_core.so;/home/yinghai/local/fbsource/fbcode/third-party2/IntelComposerXE/2017.0.098/gcc-4.9-glibc-2.20/e9936bf/compiler/lib/i\r\nntel64/libiomp5.so)\r\n```\r\n\r\nOne problem though, it is trying to find `libmkl_cdft_core.so` which is not included in our MKL distribution and resulted in failure. The above results is by removing `cdft_core` from requirement. "}