{"url": "https://api.github.com/repos/pytorch/pytorch/issues/4744", "repository_url": "https://api.github.com/repos/pytorch/pytorch", "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/4744/labels{/name}", "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/4744/comments", "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/4744/events", "html_url": "https://github.com/pytorch/pytorch/pull/4744", "id": 290052649, "node_id": "MDExOlB1bGxSZXF1ZXN0MTY0MDI3MTcy", "number": 4744, "title": "Ensure that Tensors always have Storages", "user": {"login": "colesbury", "id": 655866, "node_id": "MDQ6VXNlcjY1NTg2Ng==", "avatar_url": "https://avatars1.githubusercontent.com/u/655866?v=4", "gravatar_id": "", "url": "https://api.github.com/users/colesbury", "html_url": "https://github.com/colesbury", "followers_url": "https://api.github.com/users/colesbury/followers", "following_url": "https://api.github.com/users/colesbury/following{/other_user}", "gists_url": "https://api.github.com/users/colesbury/gists{/gist_id}", "starred_url": "https://api.github.com/users/colesbury/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/colesbury/subscriptions", "organizations_url": "https://api.github.com/users/colesbury/orgs", "repos_url": "https://api.github.com/users/colesbury/repos", "events_url": "https://api.github.com/users/colesbury/events{/privacy}", "received_events_url": "https://api.github.com/users/colesbury/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2018-01-19T17:35:33Z", "updated_at": "2018-01-19T18:26:25Z", "closed_at": "2018-01-19T18:26:23Z", "author_association": "MEMBER", "pull_request": {"url": "https://api.github.com/repos/pytorch/pytorch/pulls/4744", "html_url": "https://github.com/pytorch/pytorch/pull/4744", "diff_url": "https://github.com/pytorch/pytorch/pull/4744.diff", "patch_url": "https://github.com/pytorch/pytorch/pull/4744.patch"}, "body_html": "<p>We've had the guarantee in PyTorch that every Tensor has an associated Storage, even empty ones. This important because the CUDA device is stored on the Storage object.</p>\n<p>We had a regression in some Variable functions that are routed through ATen. This fixes the problem in TH/THC. We didn't do this previously because TH/THC were shared with Lua Torch.</p>", "body_text": "We've had the guarantee in PyTorch that every Tensor has an associated Storage, even empty ones. This important because the CUDA device is stored on the Storage object.\nWe had a regression in some Variable functions that are routed through ATen. This fixes the problem in TH/THC. We didn't do this previously because TH/THC were shared with Lua Torch.", "body": "We've had the guarantee in PyTorch that every Tensor has an associated Storage, even empty ones. This important because the CUDA device is stored on the Storage object.\r\n\r\nWe had a regression in some Variable functions that are routed through ATen. This fixes the problem in TH/THC. We didn't do this previously because TH/THC were shared with Lua Torch."}