{"url": "https://api.github.com/repos/pytorch/pytorch/issues/comments/344136106", "html_url": "https://github.com/pytorch/pytorch/issues/1959#issuecomment-344136106", "issue_url": "https://api.github.com/repos/pytorch/pytorch/issues/1959", "id": 344136106, "node_id": "MDEyOklzc3VlQ29tbWVudDM0NDEzNjEwNg==", "user": {"login": "calclavia", "id": 1828968, "node_id": "MDQ6VXNlcjE4Mjg5Njg=", "avatar_url": "https://avatars3.githubusercontent.com/u/1828968?v=4", "gravatar_id": "", "url": "https://api.github.com/users/calclavia", "html_url": "https://github.com/calclavia", "followers_url": "https://api.github.com/users/calclavia/followers", "following_url": "https://api.github.com/users/calclavia/following{/other_user}", "gists_url": "https://api.github.com/users/calclavia/gists{/gist_id}", "starred_url": "https://api.github.com/users/calclavia/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/calclavia/subscriptions", "organizations_url": "https://api.github.com/users/calclavia/orgs", "repos_url": "https://api.github.com/users/calclavia/repos", "events_url": "https://api.github.com/users/calclavia/events{/privacy}", "received_events_url": "https://api.github.com/users/calclavia/received_events", "type": "User", "site_admin": false}, "created_at": "2017-11-14T03:33:17Z", "updated_at": "2017-11-14T03:33:35Z", "author_association": "NONE", "body_html": "<p><a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=9547057\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/D-X-Y\">@D-X-Y</a> <a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=11729078\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/jekbradbury\">@jekbradbury</a> I can also confirm that a simple implementation of Layernorm seems to be quite slow on Pytorch (slows down my training by at least 3x). Maybe the mean and standard deviation computation could be combined into a single CUDA kernel?</p>", "body_text": "@D-X-Y @jekbradbury I can also confirm that a simple implementation of Layernorm seems to be quite slow on Pytorch (slows down my training by at least 3x). Maybe the mean and standard deviation computation could be combined into a single CUDA kernel?", "body": "@D-X-Y @jekbradbury I can also confirm that a simple implementation of Layernorm seems to be quite slow on Pytorch (slows down my training by at least 3x). Maybe the mean and standard deviation computation could be combined into a single CUDA kernel?"}