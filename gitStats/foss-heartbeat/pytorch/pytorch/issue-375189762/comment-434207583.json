{"url": "https://api.github.com/repos/pytorch/pytorch/issues/comments/434207583", "html_url": "https://github.com/pytorch/pytorch/pull/13263#issuecomment-434207583", "issue_url": "https://api.github.com/repos/pytorch/pytorch/issues/13263", "id": 434207583, "node_id": "MDEyOklzc3VlQ29tbWVudDQzNDIwNzU4Mw==", "user": {"login": "t-vi", "id": 20787943, "node_id": "MDQ6VXNlcjIwNzg3OTQz", "avatar_url": "https://avatars2.githubusercontent.com/u/20787943?v=4", "gravatar_id": "", "url": "https://api.github.com/users/t-vi", "html_url": "https://github.com/t-vi", "followers_url": "https://api.github.com/users/t-vi/followers", "following_url": "https://api.github.com/users/t-vi/following{/other_user}", "gists_url": "https://api.github.com/users/t-vi/gists{/gist_id}", "starred_url": "https://api.github.com/users/t-vi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/t-vi/subscriptions", "organizations_url": "https://api.github.com/users/t-vi/orgs", "repos_url": "https://api.github.com/users/t-vi/repos", "events_url": "https://api.github.com/users/t-vi/events{/privacy}", "received_events_url": "https://api.github.com/users/t-vi/received_events", "type": "User", "site_admin": false}, "created_at": "2018-10-30T08:08:14Z", "updated_at": "2018-10-30T08:08:14Z", "author_association": "CONTRIBUTOR", "body_html": "<p>So one CI failure is a build timeout.<br>\nThe other is more interesting, it concerns the onnx inception test. The compared arrays are ~1e10 and the mismatch is 0.05%(?) - that doesn't match well with rtol=0.01. I might be tempted to think it's a precision problem.</p>\n<pre><code>E               AssertionError: \nOct 29 20:59:36 E               Not equal to tolerance rtol=0.01, atol=1e-07\nOct 29 20:59:36 E               \nOct 29 20:59:36 E               (mismatch 0.05%)\nOct 29 20:59:36 E                x: array([-4.504718e+09,  1.420829e+10,  2.013276e+09, ...,  1.283971e+10,\nOct 29 20:59:36 E                       4.517736e+09, -1.183408e+10], dtype=float32)\nOct 29 20:59:36 E                y: array([-4.504723e+09,  1.420830e+10,  2.013278e+09, ...,  1.283971e+10,\nOct 29 20:59:36 E                       4.517729e+09, -1.183407e+10], dtype=float32)\nOct 29 20:59:36 \n</code></pre>\n<p>There is a comment at the top of the failing <code>verify</code> function, not sure if that's applicable here:</p>\n<blockquote>\n<p>This function may spuriously fail: some operators are implemented with<br>\ndifferent numerical precision in an ONNX backend, in which case an unstable<br>\nnetwork (e.g., Inception) may blow up these numerical instabilities.  This<br>\nsituation is less likely to happen if your model has been trained.  However,<br>\nif this is not the case, you may have found a bug!  Please report it to the<br>\nPyTorch developers.  You can also debug the issue yourself by removing<br>\nsuffixes of operators from your model until verification passes.</p>\n</blockquote>\n<p><a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=30275821\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/houseroad\">@houseroad</a> Do you have advice on this? I would much appreciate your input!</p>", "body_text": "So one CI failure is a build timeout.\nThe other is more interesting, it concerns the onnx inception test. The compared arrays are ~1e10 and the mismatch is 0.05%(?) - that doesn't match well with rtol=0.01. I might be tempted to think it's a precision problem.\nE               AssertionError: \nOct 29 20:59:36 E               Not equal to tolerance rtol=0.01, atol=1e-07\nOct 29 20:59:36 E               \nOct 29 20:59:36 E               (mismatch 0.05%)\nOct 29 20:59:36 E                x: array([-4.504718e+09,  1.420829e+10,  2.013276e+09, ...,  1.283971e+10,\nOct 29 20:59:36 E                       4.517736e+09, -1.183408e+10], dtype=float32)\nOct 29 20:59:36 E                y: array([-4.504723e+09,  1.420830e+10,  2.013278e+09, ...,  1.283971e+10,\nOct 29 20:59:36 E                       4.517729e+09, -1.183407e+10], dtype=float32)\nOct 29 20:59:36 \n\nThere is a comment at the top of the failing verify function, not sure if that's applicable here:\n\nThis function may spuriously fail: some operators are implemented with\ndifferent numerical precision in an ONNX backend, in which case an unstable\nnetwork (e.g., Inception) may blow up these numerical instabilities.  This\nsituation is less likely to happen if your model has been trained.  However,\nif this is not the case, you may have found a bug!  Please report it to the\nPyTorch developers.  You can also debug the issue yourself by removing\nsuffixes of operators from your model until verification passes.\n\n@houseroad Do you have advice on this? I would much appreciate your input!", "body": "So one CI failure is a build timeout.\r\nThe other is more interesting, it concerns the onnx inception test. The compared arrays are ~1e10 and the mismatch is 0.05%(?) - that doesn't match well with rtol=0.01. I might be tempted to think it's a precision problem.\r\n```\r\nE               AssertionError: \r\nOct 29 20:59:36 E               Not equal to tolerance rtol=0.01, atol=1e-07\r\nOct 29 20:59:36 E               \r\nOct 29 20:59:36 E               (mismatch 0.05%)\r\nOct 29 20:59:36 E                x: array([-4.504718e+09,  1.420829e+10,  2.013276e+09, ...,  1.283971e+10,\r\nOct 29 20:59:36 E                       4.517736e+09, -1.183408e+10], dtype=float32)\r\nOct 29 20:59:36 E                y: array([-4.504723e+09,  1.420830e+10,  2.013278e+09, ...,  1.283971e+10,\r\nOct 29 20:59:36 E                       4.517729e+09, -1.183407e+10], dtype=float32)\r\nOct 29 20:59:36 \r\n```\r\nThere is a comment at the top of the failing `verify` function, not sure if that's applicable here:\r\n> This function may spuriously fail: some operators are implemented with\r\n> different numerical precision in an ONNX backend, in which case an unstable\r\n> network (e.g., Inception) may blow up these numerical instabilities.  This\r\n> situation is less likely to happen if your model has been trained.  However,\r\n> if this is not the case, you may have found a bug!  Please report it to the\r\n> PyTorch developers.  You can also debug the issue yourself by removing\r\n> suffixes of operators from your model until verification passes.\r\n\r\n@houseroad Do you have advice on this? I would much appreciate your input!"}