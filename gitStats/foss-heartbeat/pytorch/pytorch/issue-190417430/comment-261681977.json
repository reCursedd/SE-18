{"url": "https://api.github.com/repos/pytorch/pytorch/issues/comments/261681977", "html_url": "https://github.com/pytorch/pytorch/issues/237#issuecomment-261681977", "issue_url": "https://api.github.com/repos/pytorch/pytorch/issues/237", "id": 261681977, "node_id": "MDEyOklzc3VlQ29tbWVudDI2MTY4MTk3Nw==", "user": {"login": "apaszke", "id": 4583066, "node_id": "MDQ6VXNlcjQ1ODMwNjY=", "avatar_url": "https://avatars3.githubusercontent.com/u/4583066?v=4", "gravatar_id": "", "url": "https://api.github.com/users/apaszke", "html_url": "https://github.com/apaszke", "followers_url": "https://api.github.com/users/apaszke/followers", "following_url": "https://api.github.com/users/apaszke/following{/other_user}", "gists_url": "https://api.github.com/users/apaszke/gists{/gist_id}", "starred_url": "https://api.github.com/users/apaszke/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/apaszke/subscriptions", "organizations_url": "https://api.github.com/users/apaszke/orgs", "repos_url": "https://api.github.com/users/apaszke/repos", "events_url": "https://api.github.com/users/apaszke/events{/privacy}", "received_events_url": "https://api.github.com/users/apaszke/received_events", "type": "User", "site_admin": false}, "created_at": "2016-11-19T01:15:54Z", "updated_at": "2016-11-19T01:15:54Z", "author_association": "MEMBER", "body_html": "<p>That's a good point. I think one solution would be to add a <code>state_dict()</code> method that returns a dict containing both parameters and persistent buffers like <code>running_mean</code>. I'm only not sure if we want to keep <code>parameter_dict()</code>, as the difference might be a bit confusing. Also, when loading a model form the dict you likely always want to restore the buffers too, and doing so with <code>parameter_dict()</code> will just silently ignore them. What do you think?</p>", "body_text": "That's a good point. I think one solution would be to add a state_dict() method that returns a dict containing both parameters and persistent buffers like running_mean. I'm only not sure if we want to keep parameter_dict(), as the difference might be a bit confusing. Also, when loading a model form the dict you likely always want to restore the buffers too, and doing so with parameter_dict() will just silently ignore them. What do you think?", "body": "That's a good point. I think one solution would be to add a `state_dict()` method that returns a dict containing both parameters and persistent buffers like `running_mean`. I'm only not sure if we want to keep `parameter_dict()`, as the difference might be a bit confusing. Also, when loading a model form the dict you likely always want to restore the buffers too, and doing so with `parameter_dict()` will just silently ignore them. What do you think?\n"}