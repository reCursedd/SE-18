{"url": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/172937202", "pull_request_review_id": 102041178, "id": 172937202, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE3MjkzNzIwMg==", "diff_hunk": "@@ -5422,6 +5422,67 @@ def test_set_flush_denormal(self):\n         self.assertEqual(double_tensor[2], 0.0, prec=0.0)  # tiny_double to zero\n         torch.set_flush_denormal(False)\n \n+    def test_unique_cpu(self):\n+        x = torch.LongTensor([1, 2, 3, 2, 8, 5, 2, 3])\n+        expected_unique = torch.LongTensor([1, 2, 3, 5, 8])\n+        expected_inverse = torch.LongTensor([0, 1, 2, 1, 4, 3, 1, 2])\n+\n+        x_unique = torch.unique(x)\n+        self.assertEqual(\n+            expected_unique.tolist(), sorted(x_unique.tolist()))\n+\n+        x_unique, x_inverse = x.unique(return_inverse=True)\n+        self.assertEqual(\n+            expected_unique.tolist(), sorted(x_unique.tolist()))\n+        self.assertEqual(expected_inverse.numel(), x_inverse.numel())", "path": "test/test_torch.py", "position": 16, "original_position": 16, "commit_id": "eeebf16c94770df8b05401d4934f767ec9ea9044", "original_commit_id": "eeebf16c94770df8b05401d4934f767ec9ea9044", "user": {"login": "theweiho", "id": 6696956, "node_id": "MDQ6VXNlcjY2OTY5NTY=", "avatar_url": "https://avatars3.githubusercontent.com/u/6696956?v=4", "gravatar_id": "", "url": "https://api.github.com/users/theweiho", "html_url": "https://github.com/theweiho", "followers_url": "https://api.github.com/users/theweiho/followers", "following_url": "https://api.github.com/users/theweiho/following{/other_user}", "gists_url": "https://api.github.com/users/theweiho/gists{/gist_id}", "starred_url": "https://api.github.com/users/theweiho/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/theweiho/subscriptions", "organizations_url": "https://api.github.com/users/theweiho/orgs", "repos_url": "https://api.github.com/users/theweiho/repos", "events_url": "https://api.github.com/users/theweiho/events{/privacy}", "received_events_url": "https://api.github.com/users/theweiho/received_events", "type": "User", "site_admin": false}, "body": "The inverse should always have the same number of elements (the same as the input), regardless of the hashing strategy...? Notice that I'm only comparing `numel()`", "created_at": "2018-03-07T18:21:43Z", "updated_at": "2018-11-23T15:40:27Z", "html_url": "https://github.com/pytorch/pytorch/pull/5503#discussion_r172937202", "pull_request_url": "https://api.github.com/repos/pytorch/pytorch/pulls/5503", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/172937202"}, "html": {"href": "https://github.com/pytorch/pytorch/pull/5503#discussion_r172937202"}, "pull_request": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/5503"}}, "body_html": "<p>The inverse should always have the same number of elements (the same as the input), regardless of the hashing strategy...? Notice that I'm only comparing <code>numel()</code></p>", "body_text": "The inverse should always have the same number of elements (the same as the input), regardless of the hashing strategy...? Notice that I'm only comparing numel()", "in_reply_to_id": 172900116}