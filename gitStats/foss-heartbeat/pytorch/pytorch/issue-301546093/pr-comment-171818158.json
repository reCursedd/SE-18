{"url": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/171818158", "pull_request_review_id": 100738036, "id": 171818158, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE3MTgxODE1OA==", "diff_hunk": "@@ -5422,6 +5422,65 @@ def test_set_flush_denormal(self):\n         self.assertEqual(double_tensor[2], 0.0, prec=0.0)  # tiny_double to zero\n         torch.set_flush_denormal(False)\n \n+    def test_unique(self):\n+        x = torch.LongTensor([1, 2, 3, 2, 8, 5, 2, 3])\n+        expected_unique = torch.LongTensor([1, 2, 3, 5, 8])\n+        expected_inverse = torch.LongTensor([0, 1, 2, 1, 4, 3, 1, 2])\n+        empty_inverse = torch.LongTensor([])\n+\n+        if TEST_NUMPY:\n+            x_unique, x_inverse = torch.unique(x)\n+            self.assertEqual(\n+                expected_unique.numpy().tolist(),\n+                sorted(x_unique.numpy().tolist())\n+            )\n+            self.assertEqual(empty_inverse, x_inverse)\n+\n+            x_unique, x_inverse = x.unique(return_inverse=True)\n+            self.assertEqual(\n+                expected_unique.numpy().tolist(),\n+                sorted(x_unique.numpy().tolist())\n+            )\n+            self.assertEqual(expected_inverse.numel(), x_inverse.numel())\n+\n+        x_unique, x_inverse = x.unique(sorted=True)\n+        self.assertEqual(expected_unique, x_unique)\n+        self.assertEqual(empty_inverse, x_inverse)\n+\n+        x_unique, x_inverse = torch.autograd.Variable.unique(\n+            x, sorted=True, return_inverse=True)", "path": "test/test_torch.py", "position": null, "original_position": 30, "commit_id": "eeebf16c94770df8b05401d4934f767ec9ea9044", "original_commit_id": "a3dc7b23e8efad32c99507eb24fc35c6c0ccdec4", "user": {"login": "apaszke", "id": 4583066, "node_id": "MDQ6VXNlcjQ1ODMwNjY=", "avatar_url": "https://avatars3.githubusercontent.com/u/4583066?v=4", "gravatar_id": "", "url": "https://api.github.com/users/apaszke", "html_url": "https://github.com/apaszke", "followers_url": "https://api.github.com/users/apaszke/followers", "following_url": "https://api.github.com/users/apaszke/following{/other_user}", "gists_url": "https://api.github.com/users/apaszke/gists{/gist_id}", "starred_url": "https://api.github.com/users/apaszke/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/apaszke/subscriptions", "organizations_url": "https://api.github.com/users/apaszke/orgs", "repos_url": "https://api.github.com/users/apaszke/repos", "events_url": "https://api.github.com/users/apaszke/events{/privacy}", "received_events_url": "https://api.github.com/users/apaszke/received_events", "type": "User", "site_admin": false}, "body": "What's going on in here? You should never call methods on a class when you have `x` as an instance.", "created_at": "2018-03-02T10:54:52Z", "updated_at": "2018-11-23T15:40:16Z", "html_url": "https://github.com/pytorch/pytorch/pull/5503#discussion_r171818158", "pull_request_url": "https://api.github.com/repos/pytorch/pytorch/pulls/5503", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/171818158"}, "html": {"href": "https://github.com/pytorch/pytorch/pull/5503#discussion_r171818158"}, "pull_request": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/5503"}}, "body_html": "<p>What's going on in here? You should never call methods on a class when you have <code>x</code> as an instance.</p>", "body_text": "What's going on in here? You should never call methods on a class when you have x as an instance."}