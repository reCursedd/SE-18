{"url": "https://api.github.com/repos/pytorch/pytorch/issues/comments/390758518", "html_url": "https://github.com/pytorch/pytorch/issues/7736#issuecomment-390758518", "issue_url": "https://api.github.com/repos/pytorch/pytorch/issues/7736", "id": 390758518, "node_id": "MDEyOklzc3VlQ29tbWVudDM5MDc1ODUxOA==", "user": {"login": "zou3519", "id": 5652049, "node_id": "MDQ6VXNlcjU2NTIwNDk=", "avatar_url": "https://avatars3.githubusercontent.com/u/5652049?v=4", "gravatar_id": "", "url": "https://api.github.com/users/zou3519", "html_url": "https://github.com/zou3519", "followers_url": "https://api.github.com/users/zou3519/followers", "following_url": "https://api.github.com/users/zou3519/following{/other_user}", "gists_url": "https://api.github.com/users/zou3519/gists{/gist_id}", "starred_url": "https://api.github.com/users/zou3519/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/zou3519/subscriptions", "organizations_url": "https://api.github.com/users/zou3519/orgs", "repos_url": "https://api.github.com/users/zou3519/repos", "events_url": "https://api.github.com/users/zou3519/events{/privacy}", "received_events_url": "https://api.github.com/users/zou3519/received_events", "type": "User", "site_admin": false}, "created_at": "2018-05-21T19:34:14Z", "updated_at": "2018-05-21T19:36:20Z", "author_association": "CONTRIBUTOR", "body_html": "<p>My bad, I should have provided some code.</p>\n<p>On python 3: (in python 2 the function is just <code>urllib.urlopen</code>):</p>\n<pre><code>import torch\nimport urllib\nresource = urllib.request.urlopen('https://download.pytorch.org/test_data/linear.pt')\nmodel = torch.load(resource)\n---------------------------------------------------------------------------\nUnsupportedOperation                      Traceback (most recent call last)\n&lt;ipython-input-15-62e11b1f7972&gt; in &lt;module&gt;()\n      2 import urllib\n      3 resource = urllib.request.urlopen('https://download.pytorch.org/test_data/linear.pt')\n----&gt; 4 model = torch.load(resource)\n\n~/pytorch/pytorch/torch/serialization.py in load(f, map_location, pickle_module)\n    301         f = open(f, 'rb')\n    302     try:\n--&gt; 303         return _load(f, map_location, pickle_module)\n    304     finally:\n    305         if new_fd:\n\n~/pytorch/pytorch/torch/serialization.py in _load(f, map_location, pickle_module)\n    448\n    449     f_is_real_file = _is_real_file(f)\n--&gt; 450     if f_is_real_file and f.tell() == 0:\n    451         # legacy_load requires that f has fileno()\n    452         # only if offset is zero we can attempt the legacy tar file loader\n\nUnsupportedOperation: seek\n</code></pre>\n<p>It would be good if we checked if the file is seekable so that we can provide a better error message. Something along the lines of \"Error: you can only torch.load from a file that is seekable. Please read the file into a seekable file on disk using request.urlretrieve or a string buffer like io.BytesIO and try to load from it instead.\"</p>", "body_text": "My bad, I should have provided some code.\nOn python 3: (in python 2 the function is just urllib.urlopen):\nimport torch\nimport urllib\nresource = urllib.request.urlopen('https://download.pytorch.org/test_data/linear.pt')\nmodel = torch.load(resource)\n---------------------------------------------------------------------------\nUnsupportedOperation                      Traceback (most recent call last)\n<ipython-input-15-62e11b1f7972> in <module>()\n      2 import urllib\n      3 resource = urllib.request.urlopen('https://download.pytorch.org/test_data/linear.pt')\n----> 4 model = torch.load(resource)\n\n~/pytorch/pytorch/torch/serialization.py in load(f, map_location, pickle_module)\n    301         f = open(f, 'rb')\n    302     try:\n--> 303         return _load(f, map_location, pickle_module)\n    304     finally:\n    305         if new_fd:\n\n~/pytorch/pytorch/torch/serialization.py in _load(f, map_location, pickle_module)\n    448\n    449     f_is_real_file = _is_real_file(f)\n--> 450     if f_is_real_file and f.tell() == 0:\n    451         # legacy_load requires that f has fileno()\n    452         # only if offset is zero we can attempt the legacy tar file loader\n\nUnsupportedOperation: seek\n\nIt would be good if we checked if the file is seekable so that we can provide a better error message. Something along the lines of \"Error: you can only torch.load from a file that is seekable. Please read the file into a seekable file on disk using request.urlretrieve or a string buffer like io.BytesIO and try to load from it instead.\"", "body": "My bad, I should have provided some code.\r\n\r\nOn python 3: (in python 2 the function is just `urllib.urlopen`):\r\n\r\n```\r\nimport torch\r\nimport urllib\r\nresource = urllib.request.urlopen('https://download.pytorch.org/test_data/linear.pt')\r\nmodel = torch.load(resource)\r\n---------------------------------------------------------------------------\r\nUnsupportedOperation                      Traceback (most recent call last)\r\n<ipython-input-15-62e11b1f7972> in <module>()\r\n      2 import urllib\r\n      3 resource = urllib.request.urlopen('https://download.pytorch.org/test_data/linear.pt')\r\n----> 4 model = torch.load(resource)\r\n\r\n~/pytorch/pytorch/torch/serialization.py in load(f, map_location, pickle_module)\r\n    301         f = open(f, 'rb')\r\n    302     try:\r\n--> 303         return _load(f, map_location, pickle_module)\r\n    304     finally:\r\n    305         if new_fd:\r\n\r\n~/pytorch/pytorch/torch/serialization.py in _load(f, map_location, pickle_module)\r\n    448\r\n    449     f_is_real_file = _is_real_file(f)\r\n--> 450     if f_is_real_file and f.tell() == 0:\r\n    451         # legacy_load requires that f has fileno()\r\n    452         # only if offset is zero we can attempt the legacy tar file loader\r\n\r\nUnsupportedOperation: seek\r\n```\r\nIt would be good if we checked if the file is seekable so that we can provide a better error message. Something along the lines of \"Error: you can only torch.load from a file that is seekable. Please read the file into a seekable file on disk using request.urlretrieve or a string buffer like io.BytesIO and try to load from it instead.\"\r\n\r\n"}