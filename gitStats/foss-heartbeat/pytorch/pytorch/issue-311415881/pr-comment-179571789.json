{"url": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/179571789", "pull_request_review_id": 109841577, "id": 179571789, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE3OTU3MTc4OQ==", "diff_hunk": "@@ -432,6 +433,20 @@ static PyObject * THPVariable_layout(THPVariable* self, PyObject* args) {\n   END_HANDLE_TH_ERRORS\n }\n \n+static PyObject * THPVariable_device(THPVariable* self, PyObject* args) {\n+  HANDLE_TH_ERRORS\n+  auto& self_ = self->cdata;\n+  std::ostringstream oss;\n+  if (self_.type().is_cuda()) {\n+    oss << \"cuda:\" << self_.get_device();\n+  }\n+  else {\n+    oss << \"cpu\";\n+  }\n+  return THPUtils_packString(oss.str().c_str());", "path": "torch/csrc/autograd/python_variable.cpp", "position": null, "original_position": 22, "commit_id": "e591346acf064c4bd31383f1e5f57ba1a086206a", "original_commit_id": "146c33f6860b80f42151007b7210b31995eecf10", "user": {"login": "gchanan", "id": 3768583, "node_id": "MDQ6VXNlcjM3Njg1ODM=", "avatar_url": "https://avatars2.githubusercontent.com/u/3768583?v=4", "gravatar_id": "", "url": "https://api.github.com/users/gchanan", "html_url": "https://github.com/gchanan", "followers_url": "https://api.github.com/users/gchanan/followers", "following_url": "https://api.github.com/users/gchanan/following{/other_user}", "gists_url": "https://api.github.com/users/gchanan/gists{/gist_id}", "starred_url": "https://api.github.com/users/gchanan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/gchanan/subscriptions", "organizations_url": "https://api.github.com/users/gchanan/orgs", "repos_url": "https://api.github.com/users/gchanan/repos", "events_url": "https://api.github.com/users/gchanan/events{/privacy}", "received_events_url": "https://api.github.com/users/gchanan/received_events", "type": "User", "site_admin": false}, "body": "For one, that's what tf eager does.  I also thought most of the time people would just pass around strings, and would only use DeviceSpecs when they wanted to avoid parsing and/or to do math on the indices.\r\n\r\nBut I'm fine having a `device` and a `device_str`, that might just be the easiest.", "created_at": "2018-04-05T19:12:24Z", "updated_at": "2018-11-23T15:41:48Z", "html_url": "https://github.com/pytorch/pytorch/pull/6283#discussion_r179571789", "pull_request_url": "https://api.github.com/repos/pytorch/pytorch/pulls/6283", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/179571789"}, "html": {"href": "https://github.com/pytorch/pytorch/pull/6283#discussion_r179571789"}, "pull_request": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/6283"}}, "body_html": "<p>For one, that's what tf eager does.  I also thought most of the time people would just pass around strings, and would only use DeviceSpecs when they wanted to avoid parsing and/or to do math on the indices.</p>\n<p>But I'm fine having a <code>device</code> and a <code>device_str</code>, that might just be the easiest.</p>", "body_text": "For one, that's what tf eager does.  I also thought most of the time people would just pass around strings, and would only use DeviceSpecs when they wanted to avoid parsing and/or to do math on the indices.\nBut I'm fine having a device and a device_str, that might just be the easiest.", "in_reply_to_id": 179568827}