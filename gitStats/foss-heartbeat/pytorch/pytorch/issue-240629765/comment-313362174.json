{"url": "https://api.github.com/repos/pytorch/pytorch/issues/comments/313362174", "html_url": "https://github.com/pytorch/pytorch/issues/1986#issuecomment-313362174", "issue_url": "https://api.github.com/repos/pytorch/pytorch/issues/1986", "id": 313362174, "node_id": "MDEyOklzc3VlQ29tbWVudDMxMzM2MjE3NA==", "user": {"login": "hughperkins", "id": 123560, "node_id": "MDQ6VXNlcjEyMzU2MA==", "avatar_url": "https://avatars2.githubusercontent.com/u/123560?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hughperkins", "html_url": "https://github.com/hughperkins", "followers_url": "https://api.github.com/users/hughperkins/followers", "following_url": "https://api.github.com/users/hughperkins/following{/other_user}", "gists_url": "https://api.github.com/users/hughperkins/gists{/gist_id}", "starred_url": "https://api.github.com/users/hughperkins/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hughperkins/subscriptions", "organizations_url": "https://api.github.com/users/hughperkins/orgs", "repos_url": "https://api.github.com/users/hughperkins/repos", "events_url": "https://api.github.com/users/hughperkins/events{/privacy}", "received_events_url": "https://api.github.com/users/hughperkins/received_events", "type": "User", "site_admin": false}, "created_at": "2017-07-06T10:45:43Z", "updated_at": "2017-07-06T10:45:43Z", "author_association": "CONTRIBUTOR", "body_html": "<p>Thats interesting. I tried throwing a <code>__init__</code> onto <code>Variable</code>, but seems it is not quite so simple as I assert :-)</p>\n<pre><code>    def __init__(self, tensor_or_array, requires_grad=False):\n        print('Variable.__init__', tensor_or_array)\n        # super(Variable, self).__init__(tensor_or_array, requires_grad=requires_grad)\n        # _C._VariableBase.__init__(self, tensor_or_array, requires_grad=requires_grad)\n        _C._VariableBase.__init__(self, tensor_or_array, requires_grad=requires_grad)\n        print('self', self)\n        print('dir(self)', dir(self))\n        print('self.creator', self.creator)\n</code></pre>\n<p>Result:</p>\n<pre><code>dir(self) ['__add__', '__bool__', '__class__', '__deepcopy__', '__delattr__', '__dict__', '__dir__', '__div__', '__doc__', '__eq__', '__format__', '__ge__', '__getattr__', '__getattribute__', '__getitem__', '__gt__', '__hash__', '__iadd__', '__idiv__', '__imul__', '__init__', '__init_subclass__', '__ipow__', '__isub__', '__iter__', '__le__', '__len__', '__lt__', '__matmul__', '__mod__', '__module__', '__mul__', '__ne__', '__neg__', '__new__', '__nonzero__', '__pow__', '__radd__', '__rdiv__', '__reduce__', '__reduce_ex__', '__repr__', '__rmul__', '__rpow__', '__rsub__', '__rtruediv__', '__setattr__', '__setitem__', '__setstate__', '__sizeof__', '__str__', '__sub__', '__subclasshook__', '__truediv__', '__weakref__', '_add', '_addcop', '_advanced_index_add', '_backward_hooks', '_blas', '_execution_engine', '_fallthrough_methods', '_get_type', '_grad', '_grad_fn', '_static_blas', '_sub', '_torch', '_version', 'abs', 'acos', 'add', 'add_', 'addbmm', 'addbmm_', 'addcdiv', 'addcdiv_', 'addcmul', 'addcmul_', 'addmm', 'addmm_', 'addmv', 'addmv_', 'addr', 'addr_', 'asin', 'atan', 'backward', 'baddbmm', 'baddbmm_', 'bernoulli', 'bmm', 'byte', 'ceil', 'char', 'chunk', 'clamp', 'clone', 'contiguous', 'cos', 'cosh', 'cpu', 'cross', 'cuda', 'cumprod', 'cumsum', 'data', 'detach', 'detach_', 'diag', 'dist', 'div', 'div_', 'dot', 'double', 'eq', 'exp', 'exp_', 'expand', 'expand_as', 'float', 'floor', 'fmod', 'frac', 'gather', 'ge', 'ger', 'gesv', 'grad', 'grad_fn', 'gt', 'half', 'index_add', 'index_add_', 'index_copy', 'index_copy_', 'index_fill', 'index_fill_', 'index_select', 'int', 'inverse', 'is_leaf', 'is_same_size', 'kthvalue', 'le', 'lerp', 'log', 'log1p', 'long', 'lt', 'masked_copy', 'masked_copy_', 'masked_fill', 'masked_fill_', 'masked_scatter', 'masked_scatter_', 'masked_select', 'matmul', 'max', 'mean', 'median', 'min', 'mm', 'mode', 'mul', 'mul_', 'multinomial', 'mv', 'narrow', 'ne', 'neg', 'neg_', 'norm', 'output_nr', 'permute', 'pow', 'prod', 'reciprocal', 'register_hook', 'reinforce', 'remainder', 'renorm', 'repeat', 'requires_grad', 'resize', 'resize_as', 'round', 'rsqrt', 'scatter', 'scatter_', 'scatter_add', 'scatter_add_', 'select', 'short', 'sigmoid', 'sigmoid_', 'sign', 'sin', 'sinh', 'sort', 'split', 'sqrt', 'squeeze', 'squeeze_', 'std', 'sub', 'sub_', 'sum', 't', 'tan', 'tanh', 'tanh_', 'topk', 'trace', 'transpose', 'tril', 'triu', 'trunc', 'type', 'type_as', 'unfold', 'unsqueeze', 'var', 'view', 'view_as', 'volatile']\nTraceback (most recent call last):\n  File \"testgrad.py\", line 9, in &lt;module&gt;\n    a_var = autograd.Variable(a, requires_grad=True)\n  File \"/home/ubuntu/conda3/envs/pytorch-dev/lib/python3.6/site-packages/torch/autograd/variable.py\", line 53, in __init__\n    print('self.creator', self.creator)\n  File \"/home/ubuntu/conda3/envs/pytorch-dev/lib/python3.6/site-packages/torch/autograd/variable.py\", line 73, in __getattr__\n    return object.__getattribute__(self, name)\nAttributeError: 'Variable' object has no attribute 'creator'\n</code></pre>", "body_text": "Thats interesting. I tried throwing a __init__ onto Variable, but seems it is not quite so simple as I assert :-)\n    def __init__(self, tensor_or_array, requires_grad=False):\n        print('Variable.__init__', tensor_or_array)\n        # super(Variable, self).__init__(tensor_or_array, requires_grad=requires_grad)\n        # _C._VariableBase.__init__(self, tensor_or_array, requires_grad=requires_grad)\n        _C._VariableBase.__init__(self, tensor_or_array, requires_grad=requires_grad)\n        print('self', self)\n        print('dir(self)', dir(self))\n        print('self.creator', self.creator)\n\nResult:\ndir(self) ['__add__', '__bool__', '__class__', '__deepcopy__', '__delattr__', '__dict__', '__dir__', '__div__', '__doc__', '__eq__', '__format__', '__ge__', '__getattr__', '__getattribute__', '__getitem__', '__gt__', '__hash__', '__iadd__', '__idiv__', '__imul__', '__init__', '__init_subclass__', '__ipow__', '__isub__', '__iter__', '__le__', '__len__', '__lt__', '__matmul__', '__mod__', '__module__', '__mul__', '__ne__', '__neg__', '__new__', '__nonzero__', '__pow__', '__radd__', '__rdiv__', '__reduce__', '__reduce_ex__', '__repr__', '__rmul__', '__rpow__', '__rsub__', '__rtruediv__', '__setattr__', '__setitem__', '__setstate__', '__sizeof__', '__str__', '__sub__', '__subclasshook__', '__truediv__', '__weakref__', '_add', '_addcop', '_advanced_index_add', '_backward_hooks', '_blas', '_execution_engine', '_fallthrough_methods', '_get_type', '_grad', '_grad_fn', '_static_blas', '_sub', '_torch', '_version', 'abs', 'acos', 'add', 'add_', 'addbmm', 'addbmm_', 'addcdiv', 'addcdiv_', 'addcmul', 'addcmul_', 'addmm', 'addmm_', 'addmv', 'addmv_', 'addr', 'addr_', 'asin', 'atan', 'backward', 'baddbmm', 'baddbmm_', 'bernoulli', 'bmm', 'byte', 'ceil', 'char', 'chunk', 'clamp', 'clone', 'contiguous', 'cos', 'cosh', 'cpu', 'cross', 'cuda', 'cumprod', 'cumsum', 'data', 'detach', 'detach_', 'diag', 'dist', 'div', 'div_', 'dot', 'double', 'eq', 'exp', 'exp_', 'expand', 'expand_as', 'float', 'floor', 'fmod', 'frac', 'gather', 'ge', 'ger', 'gesv', 'grad', 'grad_fn', 'gt', 'half', 'index_add', 'index_add_', 'index_copy', 'index_copy_', 'index_fill', 'index_fill_', 'index_select', 'int', 'inverse', 'is_leaf', 'is_same_size', 'kthvalue', 'le', 'lerp', 'log', 'log1p', 'long', 'lt', 'masked_copy', 'masked_copy_', 'masked_fill', 'masked_fill_', 'masked_scatter', 'masked_scatter_', 'masked_select', 'matmul', 'max', 'mean', 'median', 'min', 'mm', 'mode', 'mul', 'mul_', 'multinomial', 'mv', 'narrow', 'ne', 'neg', 'neg_', 'norm', 'output_nr', 'permute', 'pow', 'prod', 'reciprocal', 'register_hook', 'reinforce', 'remainder', 'renorm', 'repeat', 'requires_grad', 'resize', 'resize_as', 'round', 'rsqrt', 'scatter', 'scatter_', 'scatter_add', 'scatter_add_', 'select', 'short', 'sigmoid', 'sigmoid_', 'sign', 'sin', 'sinh', 'sort', 'split', 'sqrt', 'squeeze', 'squeeze_', 'std', 'sub', 'sub_', 'sum', 't', 'tan', 'tanh', 'tanh_', 'topk', 'trace', 'transpose', 'tril', 'triu', 'trunc', 'type', 'type_as', 'unfold', 'unsqueeze', 'var', 'view', 'view_as', 'volatile']\nTraceback (most recent call last):\n  File \"testgrad.py\", line 9, in <module>\n    a_var = autograd.Variable(a, requires_grad=True)\n  File \"/home/ubuntu/conda3/envs/pytorch-dev/lib/python3.6/site-packages/torch/autograd/variable.py\", line 53, in __init__\n    print('self.creator', self.creator)\n  File \"/home/ubuntu/conda3/envs/pytorch-dev/lib/python3.6/site-packages/torch/autograd/variable.py\", line 73, in __getattr__\n    return object.__getattribute__(self, name)\nAttributeError: 'Variable' object has no attribute 'creator'", "body": "Thats interesting. I tried throwing a `__init__` onto `Variable`, but seems it is not quite so simple as I assert :-)\r\n\r\n```\r\n    def __init__(self, tensor_or_array, requires_grad=False):\r\n        print('Variable.__init__', tensor_or_array)\r\n        # super(Variable, self).__init__(tensor_or_array, requires_grad=requires_grad)\r\n        # _C._VariableBase.__init__(self, tensor_or_array, requires_grad=requires_grad)\r\n        _C._VariableBase.__init__(self, tensor_or_array, requires_grad=requires_grad)\r\n        print('self', self)\r\n        print('dir(self)', dir(self))\r\n        print('self.creator', self.creator)\r\n```\r\n\r\nResult:\r\n```\r\ndir(self) ['__add__', '__bool__', '__class__', '__deepcopy__', '__delattr__', '__dict__', '__dir__', '__div__', '__doc__', '__eq__', '__format__', '__ge__', '__getattr__', '__getattribute__', '__getitem__', '__gt__', '__hash__', '__iadd__', '__idiv__', '__imul__', '__init__', '__init_subclass__', '__ipow__', '__isub__', '__iter__', '__le__', '__len__', '__lt__', '__matmul__', '__mod__', '__module__', '__mul__', '__ne__', '__neg__', '__new__', '__nonzero__', '__pow__', '__radd__', '__rdiv__', '__reduce__', '__reduce_ex__', '__repr__', '__rmul__', '__rpow__', '__rsub__', '__rtruediv__', '__setattr__', '__setitem__', '__setstate__', '__sizeof__', '__str__', '__sub__', '__subclasshook__', '__truediv__', '__weakref__', '_add', '_addcop', '_advanced_index_add', '_backward_hooks', '_blas', '_execution_engine', '_fallthrough_methods', '_get_type', '_grad', '_grad_fn', '_static_blas', '_sub', '_torch', '_version', 'abs', 'acos', 'add', 'add_', 'addbmm', 'addbmm_', 'addcdiv', 'addcdiv_', 'addcmul', 'addcmul_', 'addmm', 'addmm_', 'addmv', 'addmv_', 'addr', 'addr_', 'asin', 'atan', 'backward', 'baddbmm', 'baddbmm_', 'bernoulli', 'bmm', 'byte', 'ceil', 'char', 'chunk', 'clamp', 'clone', 'contiguous', 'cos', 'cosh', 'cpu', 'cross', 'cuda', 'cumprod', 'cumsum', 'data', 'detach', 'detach_', 'diag', 'dist', 'div', 'div_', 'dot', 'double', 'eq', 'exp', 'exp_', 'expand', 'expand_as', 'float', 'floor', 'fmod', 'frac', 'gather', 'ge', 'ger', 'gesv', 'grad', 'grad_fn', 'gt', 'half', 'index_add', 'index_add_', 'index_copy', 'index_copy_', 'index_fill', 'index_fill_', 'index_select', 'int', 'inverse', 'is_leaf', 'is_same_size', 'kthvalue', 'le', 'lerp', 'log', 'log1p', 'long', 'lt', 'masked_copy', 'masked_copy_', 'masked_fill', 'masked_fill_', 'masked_scatter', 'masked_scatter_', 'masked_select', 'matmul', 'max', 'mean', 'median', 'min', 'mm', 'mode', 'mul', 'mul_', 'multinomial', 'mv', 'narrow', 'ne', 'neg', 'neg_', 'norm', 'output_nr', 'permute', 'pow', 'prod', 'reciprocal', 'register_hook', 'reinforce', 'remainder', 'renorm', 'repeat', 'requires_grad', 'resize', 'resize_as', 'round', 'rsqrt', 'scatter', 'scatter_', 'scatter_add', 'scatter_add_', 'select', 'short', 'sigmoid', 'sigmoid_', 'sign', 'sin', 'sinh', 'sort', 'split', 'sqrt', 'squeeze', 'squeeze_', 'std', 'sub', 'sub_', 'sum', 't', 'tan', 'tanh', 'tanh_', 'topk', 'trace', 'transpose', 'tril', 'triu', 'trunc', 'type', 'type_as', 'unfold', 'unsqueeze', 'var', 'view', 'view_as', 'volatile']\r\nTraceback (most recent call last):\r\n  File \"testgrad.py\", line 9, in <module>\r\n    a_var = autograd.Variable(a, requires_grad=True)\r\n  File \"/home/ubuntu/conda3/envs/pytorch-dev/lib/python3.6/site-packages/torch/autograd/variable.py\", line 53, in __init__\r\n    print('self.creator', self.creator)\r\n  File \"/home/ubuntu/conda3/envs/pytorch-dev/lib/python3.6/site-packages/torch/autograd/variable.py\", line 73, in __getattr__\r\n    return object.__getattribute__(self, name)\r\nAttributeError: 'Variable' object has no attribute 'creator'\r\n```"}