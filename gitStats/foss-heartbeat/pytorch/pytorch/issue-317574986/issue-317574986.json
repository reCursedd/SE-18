{"url": "https://api.github.com/repos/pytorch/pytorch/issues/6941", "repository_url": "https://api.github.com/repos/pytorch/pytorch", "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/6941/labels{/name}", "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/6941/comments", "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/6941/events", "html_url": "https://github.com/pytorch/pytorch/issues/6941", "id": 317574986, "node_id": "MDU6SXNzdWUzMTc1NzQ5ODY=", "number": 6941, "title": "KeyError(\"module name can't contain \\\".\\\"\") breaking change 0.4 not mentioned anywhere", "user": {"login": "mario98", "id": 23034262, "node_id": "MDQ6VXNlcjIzMDM0MjYy", "avatar_url": "https://avatars1.githubusercontent.com/u/23034262?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mario98", "html_url": "https://github.com/mario98", "followers_url": "https://api.github.com/users/mario98/followers", "following_url": "https://api.github.com/users/mario98/following{/other_user}", "gists_url": "https://api.github.com/users/mario98/gists{/gist_id}", "starred_url": "https://api.github.com/users/mario98/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mario98/subscriptions", "organizations_url": "https://api.github.com/users/mario98/orgs", "repos_url": "https://api.github.com/users/mario98/repos", "events_url": "https://api.github.com/users/mario98/events{/privacy}", "received_events_url": "https://api.github.com/users/mario98/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2018-04-25T10:48:27Z", "updated_at": "2018-11-16T09:11:06Z", "closed_at": "2018-11-16T09:11:06Z", "author_association": "NONE", "body_html": "<h2>Issue description</h2>\n<p>For some reason, I had to compile pytorch from source. I did this using the latest master five days ago. Previously, I worked with pytorch 0.3. I have pretrained models which I now want to load. However, due to changes in name conventions, I can not create a model such that the layer names are corresponding to the layer names in my pretrained model (which is required if you want to load that pretrained model) Reason: The model names contain a dot, e.g. \"norm.1\". I receive the error message: <code>KeyError(\"module name can't contain \\\".\\\"\")</code>. I didn't receive a message (or even a warning) before.</p>\n<p>Not good. Pytorch should not break things because developers feel that dots should not be allowed in module names any more. I ask you to reconsider this decision, maybe add a warning first before actually breaking things, or to clearly communicate a workaround such that I can still use my pretrained models from previous pytorch versions.</p>\n<p>Update:<br>\nI've seen that pytorch 0.4 is out now. In the <a href=\"http://pytorch.org/2018/04/22/0_4_0-migration-guide.html\" rel=\"nofollow\">migration guide</a>, this breaking change is not mentioned either. (which I am sure exists in the final version, too, <a href=\"https://github.com/pytorch/pytorch/blob/master/torch/nn/modules/module.py#L168\">looking at the code</a>)</p>\n<h2>Code example</h2>\n<pre><code>class MyModule(nn.Sequential):\n  [...]\n  self.add_module('norm.1', BatchNorm(num_input_features))\n</code></pre>\n<h2>System Info</h2>\n<p>Installed pytorch from source (master) 5 days ago. Using python 3.5 with conda 4.3. (BROKEN VERSION)<br>\nvs.<br>\nInstalled pytorch though conda (a few days ago), using python 3.5 with conda 4.3 (WORKING)</p>", "body_text": "Issue description\nFor some reason, I had to compile pytorch from source. I did this using the latest master five days ago. Previously, I worked with pytorch 0.3. I have pretrained models which I now want to load. However, due to changes in name conventions, I can not create a model such that the layer names are corresponding to the layer names in my pretrained model (which is required if you want to load that pretrained model) Reason: The model names contain a dot, e.g. \"norm.1\". I receive the error message: KeyError(\"module name can't contain \\\".\\\"\"). I didn't receive a message (or even a warning) before.\nNot good. Pytorch should not break things because developers feel that dots should not be allowed in module names any more. I ask you to reconsider this decision, maybe add a warning first before actually breaking things, or to clearly communicate a workaround such that I can still use my pretrained models from previous pytorch versions.\nUpdate:\nI've seen that pytorch 0.4 is out now. In the migration guide, this breaking change is not mentioned either. (which I am sure exists in the final version, too, looking at the code)\nCode example\nclass MyModule(nn.Sequential):\n  [...]\n  self.add_module('norm.1', BatchNorm(num_input_features))\n\nSystem Info\nInstalled pytorch from source (master) 5 days ago. Using python 3.5 with conda 4.3. (BROKEN VERSION)\nvs.\nInstalled pytorch though conda (a few days ago), using python 3.5 with conda 4.3 (WORKING)", "body": "## Issue description\r\n\r\nFor some reason, I had to compile pytorch from source. I did this using the latest master five days ago. Previously, I worked with pytorch 0.3. I have pretrained models which I now want to load. However, due to changes in name conventions, I can not create a model such that the layer names are corresponding to the layer names in my pretrained model (which is required if you want to load that pretrained model) Reason: The model names contain a dot, e.g. \"norm.1\". I receive the error message: `KeyError(\"module name can't contain \\\".\\\"\")`. I didn't receive a message (or even a warning) before.\r\n\r\nNot good. Pytorch should not break things because developers feel that dots should not be allowed in module names any more. I ask you to reconsider this decision, maybe add a warning first before actually breaking things, or to clearly communicate a workaround such that I can still use my pretrained models from previous pytorch versions.\r\n\r\nUpdate:\r\nI've seen that pytorch 0.4 is out now. In the [migration guide](http://pytorch.org/2018/04/22/0_4_0-migration-guide.html), this breaking change is not mentioned either. (which I am sure exists in the final version, too, [looking at the code](https://github.com/pytorch/pytorch/blob/master/torch/nn/modules/module.py#L168))\r\n\r\n## Code example\r\n\r\n```\r\nclass MyModule(nn.Sequential):\r\n  [...]\r\n  self.add_module('norm.1', BatchNorm(num_input_features))\r\n```\r\n\r\n## System Info\r\nInstalled pytorch from source (master) 5 days ago. Using python 3.5 with conda 4.3. (BROKEN VERSION)\r\nvs.\r\nInstalled pytorch though conda (a few days ago), using python 3.5 with conda 4.3 (WORKING)"}