{"url": "https://api.github.com/repos/pytorch/pytorch/issues/comments/390001477", "html_url": "https://github.com/pytorch/pytorch/issues/7651#issuecomment-390001477", "issue_url": "https://api.github.com/repos/pytorch/pytorch/issues/7651", "id": 390001477, "node_id": "MDEyOklzc3VlQ29tbWVudDM5MDAwMTQ3Nw==", "user": {"login": "zou3519", "id": 5652049, "node_id": "MDQ6VXNlcjU2NTIwNDk=", "avatar_url": "https://avatars3.githubusercontent.com/u/5652049?v=4", "gravatar_id": "", "url": "https://api.github.com/users/zou3519", "html_url": "https://github.com/zou3519", "followers_url": "https://api.github.com/users/zou3519/followers", "following_url": "https://api.github.com/users/zou3519/following{/other_user}", "gists_url": "https://api.github.com/users/zou3519/gists{/gist_id}", "starred_url": "https://api.github.com/users/zou3519/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/zou3519/subscriptions", "organizations_url": "https://api.github.com/users/zou3519/orgs", "repos_url": "https://api.github.com/users/zou3519/repos", "events_url": "https://api.github.com/users/zou3519/events{/privacy}", "received_events_url": "https://api.github.com/users/zou3519/received_events", "type": "User", "site_admin": false}, "created_at": "2018-05-17T20:32:08Z", "updated_at": "2018-05-17T20:36:38Z", "author_association": "CONTRIBUTOR", "body_html": "<p><a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/hovercards?user_id=20787943\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/t-vi\">@t-vi</a> even if we decide to return NaN instead, if users run the pytorch tests with scipy &lt; 1.1.0 then the same problem happens (the tests fail), so in any case we should fix the tests. I don't think our polygamma tests test pole values so we don't have to worry about that for now.</p>", "body_text": "@t-vi even if we decide to return NaN instead, if users run the pytorch tests with scipy < 1.1.0 then the same problem happens (the tests fail), so in any case we should fix the tests. I don't think our polygamma tests test pole values so we don't have to worry about that for now.", "body": "@t-vi even if we decide to return NaN instead, if users run the pytorch tests with scipy < 1.1.0 then the same problem happens (the tests fail), so in any case we should fix the tests. I don't think our polygamma tests test pole values so we don't have to worry about that for now."}