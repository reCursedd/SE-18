{"url": "https://api.github.com/repos/pytorch/pytorch/issues/9531", "repository_url": "https://api.github.com/repos/pytorch/pytorch", "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/9531/labels{/name}", "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/9531/comments", "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/9531/events", "html_url": "https://github.com/pytorch/pytorch/issues/9531", "id": 342295520, "node_id": "MDU6SXNzdWUzNDIyOTU1MjA=", "number": 9531, "title": "[caffe2]train on GPU and test on cpu failed", "user": {"login": "icyhearts", "id": 11927187, "node_id": "MDQ6VXNlcjExOTI3MTg3", "avatar_url": "https://avatars3.githubusercontent.com/u/11927187?v=4", "gravatar_id": "", "url": "https://api.github.com/users/icyhearts", "html_url": "https://github.com/icyhearts", "followers_url": "https://api.github.com/users/icyhearts/followers", "following_url": "https://api.github.com/users/icyhearts/following{/other_user}", "gists_url": "https://api.github.com/users/icyhearts/gists{/gist_id}", "starred_url": "https://api.github.com/users/icyhearts/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/icyhearts/subscriptions", "organizations_url": "https://api.github.com/users/icyhearts/orgs", "repos_url": "https://api.github.com/users/icyhearts/repos", "events_url": "https://api.github.com/users/icyhearts/events{/privacy}", "received_events_url": "https://api.github.com/users/icyhearts/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 890282107, "node_id": "MDU6TGFiZWw4OTAyODIxMDc=", "url": "https://api.github.com/repos/pytorch/pytorch/labels/caffe2", "name": "caffe2", "color": "210aa8", "default": false}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2018-07-18T11:52:22Z", "updated_at": "2018-07-24T14:17:19Z", "closed_at": null, "author_association": "NONE", "body_html": "<p>I am learning caffe2. I want to train on a Machine with GPU, and I want to test the trained model on an ARM  cpu without GPU.<br>\nI tried the cifar10 tuorial on<br>\n<a href=\"url\">https://github.com/caffe2/tutorials/blob/master/CIFAR10_Part1.ipynb</a><br>\nto speed up the training , I use GPU mode while training</p>\n<pre><code>with core.DeviceScope(core.DeviceOption(caffe2_pb2.CUDA, 0)):\n\tdata, label = AddInput(\n\t\ttrain_model, batch_size=training_net_batch_size,\n\t\tdb=training_lmdb_path,\n\t\tdb_type='lmdb')\n\t# Add model definition, save return value to 'softmax' variable\n\tsoftmax = Add_Original_CIFAR10_Model(train_model, data, num_classes, image_height, image_width, image_channels)\n\t# Add training operators using the softmax output from the model\n\tAddTrainingOperators(train_model, softmax, label)\n\t# Add periodic checkpoint outputs to the model\n\tAddCheckpoints(train_model, checkpoint_iters, db_type=\"lmdb\")\n\nwith core.DeviceScope(core.DeviceOption(caffe2_pb2.CUDA, 0)):\n\tdata, label = AddInput(\n\t\tval_model, batch_size=validation_images,\n\t\tdb=validation_lmdb_path,\n\t\tdb_type='lmdb')\n\t# Add model definition, save return value to 'softmax' variable\n\tsoftmax = Add_Original_CIFAR10_Model(val_model, data, num_classes, image_height, image_width, image_channels)\n\t# Add accuracy operator\n\tAddAccuracy(val_model, softmax, label)\n\nwith core.DeviceScope(core.DeviceOption(caffe2_pb2.CUDA, 0)):\n\tAdd_Original_CIFAR10_Model(deploy_model, \"data\", num_classes, image_height, image_width, image_channels)\n\n</code></pre>\n<p>the trained model is saved in</p>\n<pre><code>/home/ice/caffe2_notebooks/tutorial_files/tutorial_cifar10/2018-07-18_16-11-41/\n</code></pre>\n<p>the directory's contents is like this:</p>\n<pre><code>cifar10_checkpoint_01000.lmdb  cifar10_checkpoint_02000.lmdb  cifar10_init_net.pb  cifar10_predict_net.pb\n</code></pre>\n<p>Then I followed this<br>\n<a href=\"url\">https://github.com/caffe2/tutorials/blob/master/CIFAR10_Part2.ipynb</a><br>\nto test the saved model trained just before.<br>\nBut I got error</p>\n<pre><code>Success, you may continue!\nWARNING: Logging before InitGoogleLogging() is written to STDERR\nW0718 19:45:00.070950 20855 init.h:99] Caffe2 GlobalInit should be run before any other API calls.\nW0718 19:45:00.071094 20855 init.h:99] Caffe2 GlobalInit should be run before any other API calls.\nI0718 19:45:00.194257 20855 operator.cc:169] Engine CUDNN is not available for operator MaxPool.\nI0718 19:45:00.194357 20855 operator.cc:169] Engine CUDNN is not available for operator AveragePool.\nI0718 19:45:00.194423 20855 operator.cc:169] Engine CUDNN is not available for operator AveragePool.\nOriginal python traceback for operator `4` in network `test_model` in exception above (most recent call last):\nTraceback (most recent call last):\n  File \"train_gpu_pred_cpu.py\", line 147, in &lt;module&gt;\n    workspace.RunNet(test_model.net)\n  File \"/usr/local/pytorch/lib64/python3.6/site-packages/caffe2/python/workspace.py\", line 217, in RunNet\n    StringifyNetName(name), num_iter, allow_fail,\n  File \"/usr/local/pytorch/lib64/python3.6/site-packages/caffe2/python/workspace.py\", line 178, in CallWithExceptionIntercept\n    return func(*args, **kwargs)\nRuntimeError: [enforce fail at blob.h:84] IsType&lt;T&gt;(). wrong type for the Blob instance. Blob contains caffe2::Tensor&lt;caffe2::CPUContext&gt; while caller expects caffe2::Tensor&lt;caffe2::CUDAContext&gt; .\nOffending Blob name: data.\nError from operator: \ninput: \"data\" input: \"conv1_w\" input: \"conv1_b\" output: \"conv1\" name: \"\" type: \"Conv\" arg { name: \"kernel\" i: 5 } arg { name: \"order\" s: \"NCHW\" } arg { name: \"stride\" i: 1 } arg { name: \"pad\" i: 2 } arg { name: \"exhaustive_search\" i: 0 } device_option { device_type: 1 cuda_gpu_id: 0 } engine: \"CUDNN\"\n\n</code></pre>\n<p>I have tried:</p>\n<pre><code>INIT_NET = \"/home/ice/caffe2_notebooks/tutorial_files/tutorial_cifar10/2018-07-18_16-11-41/cifar10_init_net.pb\" # GPU trained\nPREDICT_NET = \"/home/ice/caffe2_notebooks/tutorial_files/tutorial_cifar10/2018-07-18_16-11-41/cifar10_predict_net.pb\" # GPU trained\n\ndevice_opts = core.DeviceOption(caffe2_pb2.CPU, 0)\narg_scope = {\"order\": \"NCHW\"}\ntest_model = model_helper.ModelHelper(name=\"test_model\", arg_scope=arg_scope, init_params=False)\n\n# Add the data input layer to the model, pointing at the TEST_LMDB\ndata,_ = AddInputLayer(test_model,1,TEST_LMDB,'lmdb')\n# In [5]:\n# Populate the model helper obj with the init net stuff, which provides the \n#    weight initializations for the model\ninit_net_proto = caffe2_pb2.NetDef()\nwith open(INIT_NET, \"rb\") as f:\n    init_net_proto.ParseFromString(f.read())\n    init_net_proto.device_option.CopyFrom(device_opts)\nwith core.DeviceScope(core.DeviceOption(caffe2_pb2.CPU, 0)):\n    test_model.param_init_net = test_model.param_init_net.AppendNet(core.Net(init_net_proto))\n\n# Populate the model helper obj with the predict net stuff, which defines \n#    the structure of the model\npredict_net_proto = caffe2_pb2.NetDef()\nwith open(PREDICT_NET, \"rb\") as f:\n    predict_net_proto.ParseFromString(f.read())\n    predict_net_proto.device_option.CopyFrom(device_opts)\nwith core.DeviceScope(core.DeviceOption(caffe2_pb2.CPU, 0)):\n    test_model.net = test_model.net.AppendNet(core.Net(predict_net_proto))\n\n# Add an accuracy feature to the model for convenient reporting during testing\naccuracy = brew.accuracy(test_model, ['softmax', 'label' ], 'accuracy')\n# In [6]:\n# Run the param init net to put the trained model info into the workspace\nworkspace.RunNetOnce(test_model.param_init_net)\nworkspace.CreateNet(test_model.net, overwrite=True)\n\n</code></pre>\n<p>But the error still exists.So, what's the right way to load a model trained in GPU mode, and test on CPU mode? Thanks.</p>", "body_text": "I am learning caffe2. I want to train on a Machine with GPU, and I want to test the trained model on an ARM  cpu without GPU.\nI tried the cifar10 tuorial on\nhttps://github.com/caffe2/tutorials/blob/master/CIFAR10_Part1.ipynb\nto speed up the training , I use GPU mode while training\nwith core.DeviceScope(core.DeviceOption(caffe2_pb2.CUDA, 0)):\n\tdata, label = AddInput(\n\t\ttrain_model, batch_size=training_net_batch_size,\n\t\tdb=training_lmdb_path,\n\t\tdb_type='lmdb')\n\t# Add model definition, save return value to 'softmax' variable\n\tsoftmax = Add_Original_CIFAR10_Model(train_model, data, num_classes, image_height, image_width, image_channels)\n\t# Add training operators using the softmax output from the model\n\tAddTrainingOperators(train_model, softmax, label)\n\t# Add periodic checkpoint outputs to the model\n\tAddCheckpoints(train_model, checkpoint_iters, db_type=\"lmdb\")\n\nwith core.DeviceScope(core.DeviceOption(caffe2_pb2.CUDA, 0)):\n\tdata, label = AddInput(\n\t\tval_model, batch_size=validation_images,\n\t\tdb=validation_lmdb_path,\n\t\tdb_type='lmdb')\n\t# Add model definition, save return value to 'softmax' variable\n\tsoftmax = Add_Original_CIFAR10_Model(val_model, data, num_classes, image_height, image_width, image_channels)\n\t# Add accuracy operator\n\tAddAccuracy(val_model, softmax, label)\n\nwith core.DeviceScope(core.DeviceOption(caffe2_pb2.CUDA, 0)):\n\tAdd_Original_CIFAR10_Model(deploy_model, \"data\", num_classes, image_height, image_width, image_channels)\n\n\nthe trained model is saved in\n/home/ice/caffe2_notebooks/tutorial_files/tutorial_cifar10/2018-07-18_16-11-41/\n\nthe directory's contents is like this:\ncifar10_checkpoint_01000.lmdb  cifar10_checkpoint_02000.lmdb  cifar10_init_net.pb  cifar10_predict_net.pb\n\nThen I followed this\nhttps://github.com/caffe2/tutorials/blob/master/CIFAR10_Part2.ipynb\nto test the saved model trained just before.\nBut I got error\nSuccess, you may continue!\nWARNING: Logging before InitGoogleLogging() is written to STDERR\nW0718 19:45:00.070950 20855 init.h:99] Caffe2 GlobalInit should be run before any other API calls.\nW0718 19:45:00.071094 20855 init.h:99] Caffe2 GlobalInit should be run before any other API calls.\nI0718 19:45:00.194257 20855 operator.cc:169] Engine CUDNN is not available for operator MaxPool.\nI0718 19:45:00.194357 20855 operator.cc:169] Engine CUDNN is not available for operator AveragePool.\nI0718 19:45:00.194423 20855 operator.cc:169] Engine CUDNN is not available for operator AveragePool.\nOriginal python traceback for operator `4` in network `test_model` in exception above (most recent call last):\nTraceback (most recent call last):\n  File \"train_gpu_pred_cpu.py\", line 147, in <module>\n    workspace.RunNet(test_model.net)\n  File \"/usr/local/pytorch/lib64/python3.6/site-packages/caffe2/python/workspace.py\", line 217, in RunNet\n    StringifyNetName(name), num_iter, allow_fail,\n  File \"/usr/local/pytorch/lib64/python3.6/site-packages/caffe2/python/workspace.py\", line 178, in CallWithExceptionIntercept\n    return func(*args, **kwargs)\nRuntimeError: [enforce fail at blob.h:84] IsType<T>(). wrong type for the Blob instance. Blob contains caffe2::Tensor<caffe2::CPUContext> while caller expects caffe2::Tensor<caffe2::CUDAContext> .\nOffending Blob name: data.\nError from operator: \ninput: \"data\" input: \"conv1_w\" input: \"conv1_b\" output: \"conv1\" name: \"\" type: \"Conv\" arg { name: \"kernel\" i: 5 } arg { name: \"order\" s: \"NCHW\" } arg { name: \"stride\" i: 1 } arg { name: \"pad\" i: 2 } arg { name: \"exhaustive_search\" i: 0 } device_option { device_type: 1 cuda_gpu_id: 0 } engine: \"CUDNN\"\n\n\nI have tried:\nINIT_NET = \"/home/ice/caffe2_notebooks/tutorial_files/tutorial_cifar10/2018-07-18_16-11-41/cifar10_init_net.pb\" # GPU trained\nPREDICT_NET = \"/home/ice/caffe2_notebooks/tutorial_files/tutorial_cifar10/2018-07-18_16-11-41/cifar10_predict_net.pb\" # GPU trained\n\ndevice_opts = core.DeviceOption(caffe2_pb2.CPU, 0)\narg_scope = {\"order\": \"NCHW\"}\ntest_model = model_helper.ModelHelper(name=\"test_model\", arg_scope=arg_scope, init_params=False)\n\n# Add the data input layer to the model, pointing at the TEST_LMDB\ndata,_ = AddInputLayer(test_model,1,TEST_LMDB,'lmdb')\n# In [5]:\n# Populate the model helper obj with the init net stuff, which provides the \n#    weight initializations for the model\ninit_net_proto = caffe2_pb2.NetDef()\nwith open(INIT_NET, \"rb\") as f:\n    init_net_proto.ParseFromString(f.read())\n    init_net_proto.device_option.CopyFrom(device_opts)\nwith core.DeviceScope(core.DeviceOption(caffe2_pb2.CPU, 0)):\n    test_model.param_init_net = test_model.param_init_net.AppendNet(core.Net(init_net_proto))\n\n# Populate the model helper obj with the predict net stuff, which defines \n#    the structure of the model\npredict_net_proto = caffe2_pb2.NetDef()\nwith open(PREDICT_NET, \"rb\") as f:\n    predict_net_proto.ParseFromString(f.read())\n    predict_net_proto.device_option.CopyFrom(device_opts)\nwith core.DeviceScope(core.DeviceOption(caffe2_pb2.CPU, 0)):\n    test_model.net = test_model.net.AppendNet(core.Net(predict_net_proto))\n\n# Add an accuracy feature to the model for convenient reporting during testing\naccuracy = brew.accuracy(test_model, ['softmax', 'label' ], 'accuracy')\n# In [6]:\n# Run the param init net to put the trained model info into the workspace\nworkspace.RunNetOnce(test_model.param_init_net)\nworkspace.CreateNet(test_model.net, overwrite=True)\n\n\nBut the error still exists.So, what's the right way to load a model trained in GPU mode, and test on CPU mode? Thanks.", "body": "I am learning caffe2. I want to train on a Machine with GPU, and I want to test the trained model on an ARM  cpu without GPU.\r\nI tried the cifar10 tuorial on\r\n[https://github.com/caffe2/tutorials/blob/master/CIFAR10_Part1.ipynb](url)\r\nto speed up the training , I use GPU mode while training\r\n```\r\nwith core.DeviceScope(core.DeviceOption(caffe2_pb2.CUDA, 0)):\r\n\tdata, label = AddInput(\r\n\t\ttrain_model, batch_size=training_net_batch_size,\r\n\t\tdb=training_lmdb_path,\r\n\t\tdb_type='lmdb')\r\n\t# Add model definition, save return value to 'softmax' variable\r\n\tsoftmax = Add_Original_CIFAR10_Model(train_model, data, num_classes, image_height, image_width, image_channels)\r\n\t# Add training operators using the softmax output from the model\r\n\tAddTrainingOperators(train_model, softmax, label)\r\n\t# Add periodic checkpoint outputs to the model\r\n\tAddCheckpoints(train_model, checkpoint_iters, db_type=\"lmdb\")\r\n\r\nwith core.DeviceScope(core.DeviceOption(caffe2_pb2.CUDA, 0)):\r\n\tdata, label = AddInput(\r\n\t\tval_model, batch_size=validation_images,\r\n\t\tdb=validation_lmdb_path,\r\n\t\tdb_type='lmdb')\r\n\t# Add model definition, save return value to 'softmax' variable\r\n\tsoftmax = Add_Original_CIFAR10_Model(val_model, data, num_classes, image_height, image_width, image_channels)\r\n\t# Add accuracy operator\r\n\tAddAccuracy(val_model, softmax, label)\r\n\r\nwith core.DeviceScope(core.DeviceOption(caffe2_pb2.CUDA, 0)):\r\n\tAdd_Original_CIFAR10_Model(deploy_model, \"data\", num_classes, image_height, image_width, image_channels)\r\n\r\n```\r\nthe trained model is saved in\r\n```\r\n/home/ice/caffe2_notebooks/tutorial_files/tutorial_cifar10/2018-07-18_16-11-41/\r\n```\r\nthe directory's contents is like this:\r\n```\r\ncifar10_checkpoint_01000.lmdb  cifar10_checkpoint_02000.lmdb  cifar10_init_net.pb  cifar10_predict_net.pb\r\n```\r\nThen I followed this\r\n[https://github.com/caffe2/tutorials/blob/master/CIFAR10_Part2.ipynb](url)\r\nto test the saved model trained just before.\r\nBut I got error\r\n```\r\nSuccess, you may continue!\r\nWARNING: Logging before InitGoogleLogging() is written to STDERR\r\nW0718 19:45:00.070950 20855 init.h:99] Caffe2 GlobalInit should be run before any other API calls.\r\nW0718 19:45:00.071094 20855 init.h:99] Caffe2 GlobalInit should be run before any other API calls.\r\nI0718 19:45:00.194257 20855 operator.cc:169] Engine CUDNN is not available for operator MaxPool.\r\nI0718 19:45:00.194357 20855 operator.cc:169] Engine CUDNN is not available for operator AveragePool.\r\nI0718 19:45:00.194423 20855 operator.cc:169] Engine CUDNN is not available for operator AveragePool.\r\nOriginal python traceback for operator `4` in network `test_model` in exception above (most recent call last):\r\nTraceback (most recent call last):\r\n  File \"train_gpu_pred_cpu.py\", line 147, in <module>\r\n    workspace.RunNet(test_model.net)\r\n  File \"/usr/local/pytorch/lib64/python3.6/site-packages/caffe2/python/workspace.py\", line 217, in RunNet\r\n    StringifyNetName(name), num_iter, allow_fail,\r\n  File \"/usr/local/pytorch/lib64/python3.6/site-packages/caffe2/python/workspace.py\", line 178, in CallWithExceptionIntercept\r\n    return func(*args, **kwargs)\r\nRuntimeError: [enforce fail at blob.h:84] IsType<T>(). wrong type for the Blob instance. Blob contains caffe2::Tensor<caffe2::CPUContext> while caller expects caffe2::Tensor<caffe2::CUDAContext> .\r\nOffending Blob name: data.\r\nError from operator: \r\ninput: \"data\" input: \"conv1_w\" input: \"conv1_b\" output: \"conv1\" name: \"\" type: \"Conv\" arg { name: \"kernel\" i: 5 } arg { name: \"order\" s: \"NCHW\" } arg { name: \"stride\" i: 1 } arg { name: \"pad\" i: 2 } arg { name: \"exhaustive_search\" i: 0 } device_option { device_type: 1 cuda_gpu_id: 0 } engine: \"CUDNN\"\r\n\r\n```\r\nI have tried:\r\n```\r\nINIT_NET = \"/home/ice/caffe2_notebooks/tutorial_files/tutorial_cifar10/2018-07-18_16-11-41/cifar10_init_net.pb\" # GPU trained\r\nPREDICT_NET = \"/home/ice/caffe2_notebooks/tutorial_files/tutorial_cifar10/2018-07-18_16-11-41/cifar10_predict_net.pb\" # GPU trained\r\n\r\ndevice_opts = core.DeviceOption(caffe2_pb2.CPU, 0)\r\narg_scope = {\"order\": \"NCHW\"}\r\ntest_model = model_helper.ModelHelper(name=\"test_model\", arg_scope=arg_scope, init_params=False)\r\n\r\n# Add the data input layer to the model, pointing at the TEST_LMDB\r\ndata,_ = AddInputLayer(test_model,1,TEST_LMDB,'lmdb')\r\n# In [5]:\r\n# Populate the model helper obj with the init net stuff, which provides the \r\n#    weight initializations for the model\r\ninit_net_proto = caffe2_pb2.NetDef()\r\nwith open(INIT_NET, \"rb\") as f:\r\n    init_net_proto.ParseFromString(f.read())\r\n    init_net_proto.device_option.CopyFrom(device_opts)\r\nwith core.DeviceScope(core.DeviceOption(caffe2_pb2.CPU, 0)):\r\n    test_model.param_init_net = test_model.param_init_net.AppendNet(core.Net(init_net_proto))\r\n\r\n# Populate the model helper obj with the predict net stuff, which defines \r\n#    the structure of the model\r\npredict_net_proto = caffe2_pb2.NetDef()\r\nwith open(PREDICT_NET, \"rb\") as f:\r\n    predict_net_proto.ParseFromString(f.read())\r\n    predict_net_proto.device_option.CopyFrom(device_opts)\r\nwith core.DeviceScope(core.DeviceOption(caffe2_pb2.CPU, 0)):\r\n    test_model.net = test_model.net.AppendNet(core.Net(predict_net_proto))\r\n\r\n# Add an accuracy feature to the model for convenient reporting during testing\r\naccuracy = brew.accuracy(test_model, ['softmax', 'label' ], 'accuracy')\r\n# In [6]:\r\n# Run the param init net to put the trained model info into the workspace\r\nworkspace.RunNetOnce(test_model.param_init_net)\r\nworkspace.CreateNet(test_model.net, overwrite=True)\r\n\r\n```\r\nBut the error still exists.So, what's the right way to load a model trained in GPU mode, and test on CPU mode? Thanks."}