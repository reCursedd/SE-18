{"url": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/164813277", "pull_request_review_id": 92420886, "id": 164813277, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE2NDgxMzI3Nw==", "diff_hunk": "@@ -427,24 +440,24 @@ void THTensor_(multinomial)(THLongTensor *self, THGenerator *_generator, THTenso\n #if defined(TH_REAL_IS_BYTE)\n void THTensor_(getRNGState)(THGenerator *_generator, THTensor *self)\n {\n-  static const size_t size = sizeof(THGenerator);\n-  THGenerator *rng_state;\n+  static const size_t size = sizeof(THGeneratorState);", "path": "aten/src/TH/generic/THTensorRandom.cpp", "position": null, "original_position": 118, "commit_id": "4028540d217200a9ded3ea020ae8fc8cf40dde2f", "original_commit_id": "9afb34d782bc7d9575136a103db7a4c09871e443", "user": {"login": "colesbury", "id": 655866, "node_id": "MDQ6VXNlcjY1NTg2Ng==", "avatar_url": "https://avatars1.githubusercontent.com/u/655866?v=4", "gravatar_id": "", "url": "https://api.github.com/users/colesbury", "html_url": "https://github.com/colesbury", "followers_url": "https://api.github.com/users/colesbury/followers", "following_url": "https://api.github.com/users/colesbury/following{/other_user}", "gists_url": "https://api.github.com/users/colesbury/gists{/gist_id}", "starred_url": "https://api.github.com/users/colesbury/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/colesbury/subscriptions", "organizations_url": "https://api.github.com/users/colesbury/orgs", "repos_url": "https://api.github.com/users/colesbury/repos", "events_url": "https://api.github.com/users/colesbury/events{/privacy}", "received_events_url": "https://api.github.com/users/colesbury/received_events", "type": "User", "site_admin": false}, "body": "I think we should lock the mutex in `getRNGState` and `setRNGState` to ensure the operations are effectively atomic even if they overlap with some random function on the same generator.", "created_at": "2018-01-30T17:10:14Z", "updated_at": "2018-11-23T15:38:44Z", "html_url": "https://github.com/pytorch/pytorch/pull/4041#discussion_r164813277", "pull_request_url": "https://api.github.com/repos/pytorch/pytorch/pulls/4041", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/164813277"}, "html": {"href": "https://github.com/pytorch/pytorch/pull/4041#discussion_r164813277"}, "pull_request": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/4041"}}, "body_html": "<p>I think we should lock the mutex in <code>getRNGState</code> and <code>setRNGState</code> to ensure the operations are effectively atomic even if they overlap with some random function on the same generator.</p>", "body_text": "I think we should lock the mutex in getRNGState and setRNGState to ensure the operations are effectively atomic even if they overlap with some random function on the same generator."}