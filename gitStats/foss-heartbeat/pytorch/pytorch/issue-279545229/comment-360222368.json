{"url": "https://api.github.com/repos/pytorch/pytorch/issues/comments/360222368", "html_url": "https://github.com/pytorch/pytorch/pull/4041#issuecomment-360222368", "issue_url": "https://api.github.com/repos/pytorch/pytorch/issues/4041", "id": 360222368, "node_id": "MDEyOklzc3VlQ29tbWVudDM2MDIyMjM2OA==", "user": {"login": "colesbury", "id": 655866, "node_id": "MDQ6VXNlcjY1NTg2Ng==", "avatar_url": "https://avatars1.githubusercontent.com/u/655866?v=4", "gravatar_id": "", "url": "https://api.github.com/users/colesbury", "html_url": "https://github.com/colesbury", "followers_url": "https://api.github.com/users/colesbury/followers", "following_url": "https://api.github.com/users/colesbury/following{/other_user}", "gists_url": "https://api.github.com/users/colesbury/gists{/gist_id}", "starred_url": "https://api.github.com/users/colesbury/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/colesbury/subscriptions", "organizations_url": "https://api.github.com/users/colesbury/orgs", "repos_url": "https://api.github.com/users/colesbury/repos", "events_url": "https://api.github.com/users/colesbury/events{/privacy}", "received_events_url": "https://api.github.com/users/colesbury/received_events", "type": "User", "site_admin": false}, "created_at": "2018-01-24T18:06:54Z", "updated_at": "2018-01-24T18:06:54Z", "author_association": "MEMBER", "body_html": "<p>This still has the issue that it's not exception safe. An exception thrown after the lock call will not release the lock, causing deadlocks the next time a random function is called.</p>\n<p>We should covert the C files to C++ and use <code>std::lock_guard</code>.</p>", "body_text": "This still has the issue that it's not exception safe. An exception thrown after the lock call will not release the lock, causing deadlocks the next time a random function is called.\nWe should covert the C files to C++ and use std::lock_guard.", "body": "This still has the issue that it's not exception safe. An exception thrown after the lock call will not release the lock, causing deadlocks the next time a random function is called.\r\n\r\nWe should covert the C files to C++ and use `std::lock_guard`."}