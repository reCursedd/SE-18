{"url": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/164596246", "pull_request_review_id": 92393768, "id": 164596246, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE2NDU5NjI0Ng==", "diff_hunk": "@@ -434,6 +447,7 @@ void THTensor_(getRNGState)(THGenerator *_generator, THTensor *self)\n   THArgCheck(THTensor_(isContiguous)(self), 1, \"RNG state needs to be contiguous\");\n   rng_state = (THGenerator *)THTensor_(data)(self);\n   THGenerator_copy(rng_state, _generator);\n+  rng_state->mutex = NULL;  // mutex should not be part of the generator state", "path": "aten/src/TH/generic/THTensorRandom.cpp", "position": null, "original_position": 116, "commit_id": "4028540d217200a9ded3ea020ae8fc8cf40dde2f", "original_commit_id": "2b648a6cbd09f92f3002e0bf413955bdb250157e", "user": {"login": "colesbury", "id": 655866, "node_id": "MDQ6VXNlcjY1NTg2Ng==", "avatar_url": "https://avatars1.githubusercontent.com/u/655866?v=4", "gravatar_id": "", "url": "https://api.github.com/users/colesbury", "html_url": "https://github.com/colesbury", "followers_url": "https://api.github.com/users/colesbury/followers", "following_url": "https://api.github.com/users/colesbury/following{/other_user}", "gists_url": "https://api.github.com/users/colesbury/gists{/gist_id}", "starred_url": "https://api.github.com/users/colesbury/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/colesbury/subscriptions", "organizations_url": "https://api.github.com/users/colesbury/orgs", "repos_url": "https://api.github.com/users/colesbury/repos", "events_url": "https://api.github.com/users/colesbury/events{/privacy}", "received_events_url": "https://api.github.com/users/colesbury/received_events", "type": "User", "site_admin": false}, "body": "Here is the definition of `THGenerator`. It seems to me that the state returned by `torch.get_rng_state()` should return exactly these fields (and not any mutex). These fields are all POD.\r\n\r\n```\r\ntypedef struct THGenerator {\r\n  /* The initial seed. */\r\n  uint64_t the_initial_seed;\r\n  int left;  /* = 1; */\r\n  int seeded; /* = 0; */\r\n  uint64_t next;\r\n  uint64_t state[_MERSENNE_STATE_N]; /* the array for the state vector  */\r\n  /********************************/\r\n\r\n  /* For normal distribution */\r\n  double normal_x;\r\n  double normal_y;\r\n  double normal_rho;\r\n  int normal_is_valid; /* = 0; */\r\n} THGenerator;\r\n```", "created_at": "2018-01-29T23:19:30Z", "updated_at": "2018-11-23T15:38:42Z", "html_url": "https://github.com/pytorch/pytorch/pull/4041#discussion_r164596246", "pull_request_url": "https://api.github.com/repos/pytorch/pytorch/pulls/4041", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/164596246"}, "html": {"href": "https://github.com/pytorch/pytorch/pull/4041#discussion_r164596246"}, "pull_request": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/4041"}}, "body_html": "<p>Here is the definition of <code>THGenerator</code>. It seems to me that the state returned by <code>torch.get_rng_state()</code> should return exactly these fields (and not any mutex). These fields are all POD.</p>\n<pre><code>typedef struct THGenerator {\n  /* The initial seed. */\n  uint64_t the_initial_seed;\n  int left;  /* = 1; */\n  int seeded; /* = 0; */\n  uint64_t next;\n  uint64_t state[_MERSENNE_STATE_N]; /* the array for the state vector  */\n  /********************************/\n\n  /* For normal distribution */\n  double normal_x;\n  double normal_y;\n  double normal_rho;\n  int normal_is_valid; /* = 0; */\n} THGenerator;\n</code></pre>", "body_text": "Here is the definition of THGenerator. It seems to me that the state returned by torch.get_rng_state() should return exactly these fields (and not any mutex). These fields are all POD.\ntypedef struct THGenerator {\n  /* The initial seed. */\n  uint64_t the_initial_seed;\n  int left;  /* = 1; */\n  int seeded; /* = 0; */\n  uint64_t next;\n  uint64_t state[_MERSENNE_STATE_N]; /* the array for the state vector  */\n  /********************************/\n\n  /* For normal distribution */\n  double normal_x;\n  double normal_y;\n  double normal_rho;\n  int normal_is_valid; /* = 0; */\n} THGenerator;", "in_reply_to_id": 164543758}