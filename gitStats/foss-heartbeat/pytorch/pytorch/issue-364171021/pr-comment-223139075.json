{"url": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/223139075", "pull_request_review_id": 162204276, "id": 223139075, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIyMzEzOTA3NQ==", "diff_hunk": "@@ -133,3 +133,27 @@ struct CAFFE2_API InefficientStdFunctionContext {\n };\n \n } // namespace at\n+\n+namespace caffe2 {\n+\n+// using AllocatorArray = std::array<\n+//     std::unique_ptr<at::Allocator>,\n+//     static_cast<int>(at::DeviceType::COMPILE_TIME_MAX_DEVICE_TYPES)>;\n+/** Set the allocator for DeviceType `t` and takes ownership of the allocator", "path": "aten/src/ATen/core/Allocator.h", "position": null, "original_position": 10, "commit_id": "77422586b8e686972b9416373fac71d159761ae1", "original_commit_id": "c12524ab752182358290446a59759d7b7bce1dd8", "user": {"login": "jerryzh168", "id": 4958441, "node_id": "MDQ6VXNlcjQ5NTg0NDE=", "avatar_url": "https://avatars0.githubusercontent.com/u/4958441?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jerryzh168", "html_url": "https://github.com/jerryzh168", "followers_url": "https://api.github.com/users/jerryzh168/followers", "following_url": "https://api.github.com/users/jerryzh168/following{/other_user}", "gists_url": "https://api.github.com/users/jerryzh168/gists{/gist_id}", "starred_url": "https://api.github.com/users/jerryzh168/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jerryzh168/subscriptions", "organizations_url": "https://api.github.com/users/jerryzh168/orgs", "repos_url": "https://api.github.com/users/jerryzh168/repos", "events_url": "https://api.github.com/users/jerryzh168/events{/privacy}", "received_events_url": "https://api.github.com/users/jerryzh168/received_events", "type": "User", "site_admin": false}, "body": "This is mostly because we have a `SetCPUAllocator` that will change the cpu allocator before.\r\nfor invalidation, I think we have the same problem before, so previously we have a `std::unique_ptr<CPUAllocator>` that owns the allocator and `SetCPUAllocator` will change the stored CPU allocator, I assume all the change is done during setup time and users won't be affected?", "created_at": "2018-10-05T21:07:18Z", "updated_at": "2018-11-23T15:52:27Z", "html_url": "https://github.com/pytorch/pytorch/pull/12111#discussion_r223139075", "pull_request_url": "https://api.github.com/repos/pytorch/pytorch/pulls/12111", "author_association": "CONTRIBUTOR", "_links": {"self": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/223139075"}, "html": {"href": "https://github.com/pytorch/pytorch/pull/12111#discussion_r223139075"}, "pull_request": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/12111"}}, "body_html": "<p>This is mostly because we have a <code>SetCPUAllocator</code> that will change the cpu allocator before.<br>\nfor invalidation, I think we have the same problem before, so previously we have a <code>std::unique_ptr&lt;CPUAllocator&gt;</code> that owns the allocator and <code>SetCPUAllocator</code> will change the stored CPU allocator, I assume all the change is done during setup time and users won't be affected?</p>", "body_text": "This is mostly because we have a SetCPUAllocator that will change the cpu allocator before.\nfor invalidation, I think we have the same problem before, so previously we have a std::unique_ptr<CPUAllocator> that owns the allocator and SetCPUAllocator will change the stored CPU allocator, I assume all the change is done during setup time and users won't be affected?", "in_reply_to_id": 223119824}