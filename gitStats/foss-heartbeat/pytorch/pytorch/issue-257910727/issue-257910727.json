{"url": "https://api.github.com/repos/pytorch/pytorch/issues/2748", "repository_url": "https://api.github.com/repos/pytorch/pytorch", "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/2748/labels{/name}", "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/2748/comments", "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/2748/events", "html_url": "https://github.com/pytorch/pytorch/issues/2748", "id": 257910727, "node_id": "MDU6SXNzdWUyNTc5MTA3Mjc=", "number": 2748, "title": "How to extract middle layer features", "user": {"login": "tryerrorman", "id": 10434436, "node_id": "MDQ6VXNlcjEwNDM0NDM2", "avatar_url": "https://avatars3.githubusercontent.com/u/10434436?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tryerrorman", "html_url": "https://github.com/tryerrorman", "followers_url": "https://api.github.com/users/tryerrorman/followers", "following_url": "https://api.github.com/users/tryerrorman/following{/other_user}", "gists_url": "https://api.github.com/users/tryerrorman/gists{/gist_id}", "starred_url": "https://api.github.com/users/tryerrorman/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tryerrorman/subscriptions", "organizations_url": "https://api.github.com/users/tryerrorman/orgs", "repos_url": "https://api.github.com/users/tryerrorman/repos", "events_url": "https://api.github.com/users/tryerrorman/events{/privacy}", "received_events_url": "https://api.github.com/users/tryerrorman/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-09-15T02:38:42Z", "updated_at": "2018-04-21T18:58:52Z", "closed_at": "2017-09-15T03:17:12Z", "author_association": "NONE", "body_html": "<p>We know in tensorflow, if we want to get the middle layer features, we use the command</p>\n<div class=\"highlight highlight-source-python\"><pre>sess.run(model[layer_name])</pre></div>\n<p>So I wonder if there similar command <strong>to extract middle layer feature</strong> in the pytorch?</p>\n<p>For now, I get the middle layer through change the return of the net</p>\n<div class=\"highlight highlight-source-python\"><pre><span class=\"pl-k\">class</span> <span class=\"pl-en\">NN</span>()\n    .......\n    <span class=\"pl-k\">def</span> <span class=\"pl-en\">forward</span>(<span class=\"pl-e\">x</span>)\n        <span class=\"pl-en\">layer1</span> = <span class=\"pl-en\">conv</span>(<span class=\"pl-e\">x</span>)\n        <span class=\"pl-en\">output</span> = <span class=\"pl-en\">conv</span>(<span class=\"pl-e\">layer1</span>)\n        ....\n        <span class=\"pl-en\">output</span> = <span class=\"pl-en\">fc</span>(<span class=\"pl-e\">output</span>)\n        <span class=\"pl-k\">return</span> <span class=\"pl-en\">layer1</span>, <span class=\"pl-en\">output</span></pre></div>\n<p>But this way is not convenient if there a long list of layers features to output.</p>", "body_text": "We know in tensorflow, if we want to get the middle layer features, we use the command\nsess.run(model[layer_name])\nSo I wonder if there similar command to extract middle layer feature in the pytorch?\nFor now, I get the middle layer through change the return of the net\nclass NN()\n    .......\n    def forward(x)\n        layer1 = conv(x)\n        output = conv(layer1)\n        ....\n        output = fc(output)\n        return layer1, output\nBut this way is not convenient if there a long list of layers features to output.", "body": "We know in tensorflow, if we want to get the middle layer features, we use the command\r\n``` python\r\nsess.run(model[layer_name])\r\n```\r\nSo I wonder if there similar command **to extract middle layer feature** in the pytorch?\r\n\r\nFor now, I get the middle layer through change the return of the net\r\n```python\r\nclass NN()\r\n    .......\r\n    def forward(x)\r\n        layer1 = conv(x)\r\n        output = conv(layer1)\r\n        ....\r\n        output = fc(output)\r\n        return layer1, output\r\n```\r\nBut this way is not convenient if there a long list of layers features to output."}