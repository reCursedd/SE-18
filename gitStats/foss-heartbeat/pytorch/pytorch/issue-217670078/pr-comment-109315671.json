{"url": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/109315671", "pull_request_review_id": 30410317, "id": 109315671, "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEwOTMxNTY3MQ==", "diff_hunk": "@@ -197,5 +197,46 @@ def test_shuffle_pin_memory(self):\n             self.assertTrue(n.is_pinned())\n \n \n+class DictDataset(Dataset):\n+    def __len__(self):\n+        return 4\n+\n+    def __getitem__(self, ndx):\n+        return {\n+            'a_tensor': torch.Tensor(4, 2).fill_(ndx),\n+            'another_dict': {\n+                'a_number': ndx,\n+            },\n+        }\n+\n+\n+class TestDictDataLoader(TestCase):\n+    def setUp(self):\n+        self.dataset = DictDataset()\n+\n+    def test_sequential_batch(self):\n+        loader = DataLoader(self.dataset, batch_size=2, shuffle=False)\n+        batch_size = loader.batch_size\n+        for i, sample in enumerate(loader):\n+            idx = i * batch_size\n+            self.assertEqual(set(sample.keys()), {'a_tensor', 'another_dict'})\n+            self.assertEqual(set(sample['another_dict'].keys()), {'a_number'})\n+\n+            t = sample['a_tensor']\n+            self.assertEqual(t.size(), torch.Size([batch_size, 4, 2]))\n+            self.assertTrue((sample['a_tensor'][0] == idx).all())\n+            self.assertTrue((sample['a_tensor'][1] == idx + 1).all())\n+\n+            n = sample['another_dict']['a_number']\n+            self.assertEqual(n.size(), torch.Size([batch_size]))", "path": "test/test_dataloader.py", "position": null, "original_position": 35, "commit_id": "0033fd4163be0b044cac0b348430978f4c9451d8", "original_commit_id": "5b33d04881d87c56928b224ff684365393434e59", "user": {"login": "apaszke", "id": 4583066, "node_id": "MDQ6VXNlcjQ1ODMwNjY=", "avatar_url": "https://avatars3.githubusercontent.com/u/4583066?v=4", "gravatar_id": "", "url": "https://api.github.com/users/apaszke", "html_url": "https://github.com/apaszke", "followers_url": "https://api.github.com/users/apaszke/followers", "following_url": "https://api.github.com/users/apaszke/following{/other_user}", "gists_url": "https://api.github.com/users/apaszke/gists{/gist_id}", "starred_url": "https://api.github.com/users/apaszke/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/apaszke/subscriptions", "organizations_url": "https://api.github.com/users/apaszke/orgs", "repos_url": "https://api.github.com/users/apaszke/repos", "events_url": "https://api.github.com/users/apaszke/events{/privacy}", "received_events_url": "https://api.github.com/users/apaszke/received_events", "type": "User", "site_admin": false}, "body": "Can you please also verify that that `n` has the expected contents?", "created_at": "2017-04-02T18:11:08Z", "updated_at": "2018-11-23T15:32:57Z", "html_url": "https://github.com/pytorch/pytorch/pull/1131#discussion_r109315671", "pull_request_url": "https://api.github.com/repos/pytorch/pytorch/pulls/1131", "author_association": "MEMBER", "_links": {"self": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/comments/109315671"}, "html": {"href": "https://github.com/pytorch/pytorch/pull/1131#discussion_r109315671"}, "pull_request": {"href": "https://api.github.com/repos/pytorch/pytorch/pulls/1131"}}, "body_html": "<p>Can you please also verify that that <code>n</code> has the expected contents?</p>", "body_text": "Can you please also verify that that n has the expected contents?"}