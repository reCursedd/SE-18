{"url": "https://api.github.com/repos/pytorch/pytorch/issues/comments/405318784", "html_url": "https://github.com/pytorch/pytorch/issues/5858#issuecomment-405318784", "issue_url": "https://api.github.com/repos/pytorch/pytorch/issues/5858", "id": 405318784, "node_id": "MDEyOklzc3VlQ29tbWVudDQwNTMxODc4NA==", "user": {"login": "dimamillion", "id": 15218442, "node_id": "MDQ6VXNlcjE1MjE4NDQy", "avatar_url": "https://avatars3.githubusercontent.com/u/15218442?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dimamillion", "html_url": "https://github.com/dimamillion", "followers_url": "https://api.github.com/users/dimamillion/followers", "following_url": "https://api.github.com/users/dimamillion/following{/other_user}", "gists_url": "https://api.github.com/users/dimamillion/gists{/gist_id}", "starred_url": "https://api.github.com/users/dimamillion/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dimamillion/subscriptions", "organizations_url": "https://api.github.com/users/dimamillion/orgs", "repos_url": "https://api.github.com/users/dimamillion/repos", "events_url": "https://api.github.com/users/dimamillion/events{/privacy}", "received_events_url": "https://api.github.com/users/dimamillion/received_events", "type": "User", "site_admin": false}, "created_at": "2018-07-16T17:11:24Z", "updated_at": "2018-07-16T17:11:24Z", "author_association": "NONE", "body_html": "<p>Hi, Now it works but does not show the picture as in tutorials<br>\nplease tell me why does not the picture<br>\n<a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://user-images.githubusercontent.com/15218442/42772719-f0d6d7b4-8933-11e8-9b34-8d3134ccef0d.png\"><img src=\"https://user-images.githubusercontent.com/15218442/42772719-f0d6d7b4-8933-11e8-9b34-8d3134ccef0d.png\" alt=\"image\" style=\"max-width:100%;\"></a><br>\nimage in /data<br>\n<a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://user-images.githubusercontent.com/15218442/42772791-2e5b6ffa-8934-11e8-895d-03a2a1d208be.png\"><img src=\"https://user-images.githubusercontent.com/15218442/42772791-2e5b6ffa-8934-11e8-895d-03a2a1d208be.png\" alt=\"image\" style=\"max-width:100%;\"></a></p>\n<h2>Out</h2>\n<h2>Files already downloaded and verified<br>\nFiles already downloaded and verified<br>\nbird  ship   car  deer</h2>\n<h2>my code is</h2>\n<p>import torch<br>\nimport torchvision<br>\nimport torchvision.transforms as transforms<br>\nfrom multiprocessing import Process, freeze_support<br>\nif <strong>name</strong> == '<strong>main</strong>':<br>\ntransform = transforms.Compose(<br>\n[transforms.ToTensor(),<br>\ntransforms.Normalize((0.5, 0.5, 0.5), (0.5, 0.5, 0.5))])</p>\n<pre><code>trainset = torchvision.datasets.CIFAR10(root='./data', train=True,\n                                        download=True, transform=transform)\ntrainloader = torch.utils.data.DataLoader(trainset, batch_size=4,\n                                          shuffle=True, num_workers=2)\n\ntestset = torchvision.datasets.CIFAR10(root='./data', train=False,\n                                       download=True, transform=transform)\ntestloader = torch.utils.data.DataLoader(testset, batch_size=4,\n                                         shuffle=False, num_workers=2)\n\nclasses = ('plane', 'car', 'bird', 'cat',\n           'deer', 'dog', 'frog', 'horse', 'ship', 'truck')\n\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# functions to show an image\n\ndef imshow(img):\n    img = img / 2 + 0.5  # unnormalize\n    npimg = img.numpy()\n    plt.imshow(np.transpose(npimg, (1, 2, 0)))\n\n# get some random training images\ndataiter = iter(trainloader)\n\nimages, labels = dataiter.next()\n\n# show images\nimshow(torchvision.utils.make_grid(images))\n# print labels\nprint(' '.join('%5s' % classes[labels[j]] for j in range(4)))\n</code></pre>\n<hr>", "body_text": "Hi, Now it works but does not show the picture as in tutorials\nplease tell me why does not the picture\n\nimage in /data\n\nOut\nFiles already downloaded and verified\nFiles already downloaded and verified\nbird  ship   car  deer\nmy code is\nimport torch\nimport torchvision\nimport torchvision.transforms as transforms\nfrom multiprocessing import Process, freeze_support\nif name == 'main':\ntransform = transforms.Compose(\n[transforms.ToTensor(),\ntransforms.Normalize((0.5, 0.5, 0.5), (0.5, 0.5, 0.5))])\ntrainset = torchvision.datasets.CIFAR10(root='./data', train=True,\n                                        download=True, transform=transform)\ntrainloader = torch.utils.data.DataLoader(trainset, batch_size=4,\n                                          shuffle=True, num_workers=2)\n\ntestset = torchvision.datasets.CIFAR10(root='./data', train=False,\n                                       download=True, transform=transform)\ntestloader = torch.utils.data.DataLoader(testset, batch_size=4,\n                                         shuffle=False, num_workers=2)\n\nclasses = ('plane', 'car', 'bird', 'cat',\n           'deer', 'dog', 'frog', 'horse', 'ship', 'truck')\n\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# functions to show an image\n\ndef imshow(img):\n    img = img / 2 + 0.5  # unnormalize\n    npimg = img.numpy()\n    plt.imshow(np.transpose(npimg, (1, 2, 0)))\n\n# get some random training images\ndataiter = iter(trainloader)\n\nimages, labels = dataiter.next()\n\n# show images\nimshow(torchvision.utils.make_grid(images))\n# print labels\nprint(' '.join('%5s' % classes[labels[j]] for j in range(4)))", "body": "Hi, Now it works but does not show the picture as in tutorials \r\nplease tell me why does not the picture\r\n![image](https://user-images.githubusercontent.com/15218442/42772719-f0d6d7b4-8933-11e8-9b34-8d3134ccef0d.png)\r\nimage in /data\r\n![image](https://user-images.githubusercontent.com/15218442/42772791-2e5b6ffa-8934-11e8-895d-03a2a1d208be.png)\r\n\r\nOut\r\n-----\r\nFiles already downloaded and verified\r\nFiles already downloaded and verified\r\n bird  ship   car  deer\r\n-----\r\nmy code is\r\n----------------\r\nimport torch\r\nimport torchvision\r\nimport torchvision.transforms as transforms\r\nfrom multiprocessing import Process, freeze_support\r\nif __name__ == '__main__':\r\n    transform = transforms.Compose(\r\n        [transforms.ToTensor(),\r\n         transforms.Normalize((0.5, 0.5, 0.5), (0.5, 0.5, 0.5))])\r\n\r\n    trainset = torchvision.datasets.CIFAR10(root='./data', train=True,\r\n                                            download=True, transform=transform)\r\n    trainloader = torch.utils.data.DataLoader(trainset, batch_size=4,\r\n                                              shuffle=True, num_workers=2)\r\n\r\n    testset = torchvision.datasets.CIFAR10(root='./data', train=False,\r\n                                           download=True, transform=transform)\r\n    testloader = torch.utils.data.DataLoader(testset, batch_size=4,\r\n                                             shuffle=False, num_workers=2)\r\n\r\n    classes = ('plane', 'car', 'bird', 'cat',\r\n               'deer', 'dog', 'frog', 'horse', 'ship', 'truck')\r\n\r\n    import matplotlib.pyplot as plt\r\n    import numpy as np\r\n\r\n    # functions to show an image\r\n\r\n    def imshow(img):\r\n        img = img / 2 + 0.5  # unnormalize\r\n        npimg = img.numpy()\r\n        plt.imshow(np.transpose(npimg, (1, 2, 0)))\r\n\r\n    # get some random training images\r\n    dataiter = iter(trainloader)\r\n\r\n    images, labels = dataiter.next()\r\n\r\n    # show images\r\n    imshow(torchvision.utils.make_grid(images))\r\n    # print labels\r\n    print(' '.join('%5s' % classes[labels[j]] for j in range(4)))\r\n------------------\r\n"}