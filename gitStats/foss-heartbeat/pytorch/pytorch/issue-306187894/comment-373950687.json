{"url": "https://api.github.com/repos/pytorch/pytorch/issues/comments/373950687", "html_url": "https://github.com/pytorch/pytorch/issues/5858#issuecomment-373950687", "issue_url": "https://api.github.com/repos/pytorch/pytorch/issues/5858", "id": 373950687, "node_id": "MDEyOklzc3VlQ29tbWVudDM3Mzk1MDY4Nw==", "user": {"login": "shinalone", "id": 14334826, "node_id": "MDQ6VXNlcjE0MzM0ODI2", "avatar_url": "https://avatars1.githubusercontent.com/u/14334826?v=4", "gravatar_id": "", "url": "https://api.github.com/users/shinalone", "html_url": "https://github.com/shinalone", "followers_url": "https://api.github.com/users/shinalone/followers", "following_url": "https://api.github.com/users/shinalone/following{/other_user}", "gists_url": "https://api.github.com/users/shinalone/gists{/gist_id}", "starred_url": "https://api.github.com/users/shinalone/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/shinalone/subscriptions", "organizations_url": "https://api.github.com/users/shinalone/orgs", "repos_url": "https://api.github.com/users/shinalone/repos", "events_url": "https://api.github.com/users/shinalone/events{/privacy}", "received_events_url": "https://api.github.com/users/shinalone/received_events", "type": "User", "site_admin": false}, "created_at": "2018-03-17T20:35:32Z", "updated_at": "2018-03-17T20:35:32Z", "author_association": "NONE", "body_html": "<p>Now that's okay!</p>\n<div class=\"highlight highlight-source-python\"><pre><span class=\"pl-k\">def</span> <span class=\"pl-en\">run</span>():\n    torch.multiprocessing.freeze_support()\n    <span class=\"pl-c1\">print</span>(<span class=\"pl-s\"><span class=\"pl-pds\">'</span>loop<span class=\"pl-pds\">'</span></span>)\n\n<span class=\"pl-k\">if</span> <span class=\"pl-c1\">__name__</span> <span class=\"pl-k\">==</span> <span class=\"pl-s\"><span class=\"pl-pds\">'</span>__main__<span class=\"pl-pds\">'</span></span>:\n    run()</pre></div>", "body_text": "Now that's okay!\ndef run():\n    torch.multiprocessing.freeze_support()\n    print('loop')\n\nif __name__ == '__main__':\n    run()", "body": "Now that's okay!\r\n\r\n```python\r\ndef run():\r\n    torch.multiprocessing.freeze_support()\r\n    print('loop')\r\n\r\nif __name__ == '__main__':\r\n    run()\r\n```"}